/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile$
 *
 *  $Revision$
 *
 *  last change: $Author$ $Date$
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __org_openoffice_excel_XRange_idl__
#define __org_openoffice_excel_XRange_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif
#ifndef __com_sun_star_lang_IllegalArgumentException_idl__
#include <com/sun/star/lang/IllegalArgumentException.idl>
#endif
#ifndef __com_sun_star_container_XEnumerationAccess_idl__
#include <com/sun/star/container/XEnumerationAccess.idl>
#endif
#ifndef __com_sun_star_script_XDefaultProperty_idl__
#include <com/sun/star/script/XDefaultProperty.idl>
#endif
#ifndef __com_sun_star_script_XDefaultMethod_idl__
#include <com/sun/star/script/XDefaultMethod.idl>
#endif
#ifndef __org_openoffice_vba_XCollection_idl__
#include <org/openoffice/vba/XCollection.idl>
#endif
#ifndef __org_openoffice_excel_XFormat_idl__
#include <org/openoffice/excel/XFormat.idl>
#endif
#ifndef __org_openoffice_vba_XHelperInterface_idl__
#include <org/openoffice/vba/XHelperInterface.idl>
#endif
#ifndef __com_sun_star_helper_script_BasicErrorException_idl__
#include <com/sun/star/script/BasicErrorException.idl>
#endif
//=============================================================================

module org {  module openoffice {  module excel { 

interface XFont;
interface XRows;
interface XColumns;
interface XComment;

interface XInterior;
interface XCharacters;
interface XBorders;
interface XValidation;
interface XWorksheet;

interface XRange
{
 	interface com::sun::star::container::XEnumerationAccess;
	interface com::sun::star::script::XDefaultMethod;
	interface com::sun::star::script::XDefaultProperty;
	interface ::org::openoffice::excel::XFormat;
	//interface ::org::openoffice::vba::XHelperInterface;

	[attribute] any Value; 
	[attribute] any Formula;
	[attribute] any FormulaArray;
	[attribute] any FormulaR1C1;
	[attribute, readonly] long  Count;
	[attribute, readonly] long Row;
	[attribute, readonly] long Column;
	[attribute, readonly] string Text;
	[attribute, readonly] XRange EntireRow;
	[attribute, readonly] XRange EntireColumn;
	[attribute, readonly] XComment Comment;
	[attribute] any Hidden;
	[attribute] any ColumnWidth;
	[attribute, readonly ] any Width;
	[attribute, readonly] XWorksheet Worksheet;
	[attribute] any RowHeight;
	[attribute, readonly ] any Height;
	[attribute, readonly ] any Top;
	[attribute, readonly ] any Left;
	[attribute] any PageBreak;
	[attribute, readonly] XValidation Validation;
	[attribute] any Style;
	[attribute] any AddIndent;

	XComment AddComment( [in] any Text ); 
	void Clear();
	void ClearComments();
	void ClearContents();
	void ClearFormats();
	any HasFormula();
	void FillLeft();
	void FillRight();
	void FillUp();
	void FillDown();
	XRange Item([in] any row, [in] any column) raises(com::sun::star::script::BasicErrorException);
	XRange Offset([in] any RowOffset, [in] any ColumnOffset);
	XRange CurrentRegion();
	XRange CurrentArray(); 
	string Characters([in] any Start, [in] any Length);
	string Address( [in] any RowAbsolute, [in] any ColumnAbsolute, [in] any ReferenceStyle, [in] any External, [in] any RelativeTo );	
	XRange Cells([in] any RowIndex, [in] any ColumnIndex);
	void Select();
	void AutoOutline() raises(com::sun::star::script::BasicErrorException);
	void Activate();
	XRange Rows( [in] any RowIndex );
	void Calculate() raises(com::sun::star::script::BasicErrorException);
	XRange Columns( [in] any ColumnIndex );
	void Copy([in] any Destination);
	void Cut([in] any Destination);
	XRange Resize( [in] any RowSize, [in] any ColumnSize );
	XRange Range( [in] any Cell1, [in] any Cell2 );
	any getCellRange();
	void PasteSpecial([in] any Paste, [in] any Operation,[in] any SkipBlanks, [in] any Transpose);
	boolean  Replace( [in] string What, [in] string Replacement, [in] any LookAt, [in] any SearchOrder, [in] any MatchCase, [in] any MatchByte, [in] any SearchFormat, [in] any ReplaceFormat );
	
	void Sort( [in] any Key1, [in] any Order1, [in] any Key2, [in] any Type,
		[in] any Order2, [in] any Key3, [in] any Order3,
		[in] any Header, [in] any OrderCustom, [in] any MatchCase, 
		[in] any Orientation, [in] any SortMethod, [in] any DataOption1,
		[in] any DataOption2, [in] any DataOption3 );
	XRange End( [in] long Direction );
	// bizarely I have to define Character method as character otherwise
	// idl complains
	XCharacters characters([in] any Start, [in] any Length);
	void Delete( [in] any Shift );
		
	any Areas( [in] any item );
	any BorderAround( [in] any LineStyle, [in] any Weight, [in] any ColorIndex, [in] any Color );
        void AutoFilter([in ] any Field, [in] any Criteria1, [in] any Operator, [in] any Criteria2, [in] any VisibleDropDown);
        void Insert([in] any Shift, [in] any CopyOrigin);
        void Autofit();
	void PrintOut([in] any From, [in] any To, [in] any Copies, [in] any Preview, [in] any ActivePrinter, [in] any PrintToFile, [in] any Collate, [in] any PrToFileName);
	void AutoFill( [in] XRange Destination, [in] any Type );
	boolean GoalSeek( [in] any Goal, [in] XRange ChangingCell );
	void ClearOutline() raises(com::sun::star::script::BasicErrorException);
	void Ungroup() raises(com::sun::star::script::BasicErrorException);
	void Group() raises(com::sun::star::script::BasicErrorException);
	void Merge([in] any Across) raises(com::sun::star::script::BasicErrorException);
	void UnMerge() raises(com::sun::star::script::BasicErrorException);
	XRange Next( ) raises ( com::sun::star::script::BasicErrorException );
	XRange Previous( ) raises ( com::sun::star::script::BasicErrorException );
 	XRange SpecialCells( [in] any Type, [in]  /*Optional*/ any Value ) raises ( com::sun::star::script::BasicErrorException );
	void RemoveSubtotal() raises ( com::sun::star::script::BasicErrorException );
	void	Subtotal( [in] long GroupBy, [in] long Function, [in]  /*Optional*/ sequence<long> TotalList, [in]  /*Optional*/ any Replace, [in]  /*Optional*/ any PageBreaks, [in] any SummaryBelowData ) raises ( com::sun::star::script::BasicErrorException );

};

//=============================================================================

}; }; };

#endif


