<?xml version="1.0" encoding="utf-8"?>
<!-- =====================================================================

  OpenOffice.org - a multi-platform office productivity suite

  $RCSfile$

  $Revision$

  last change: $Author$ $Date$

  The Contents of this file are made available subject to
  the terms of GNU Lesser General Public License Version 2.1.


    GNU Lesser General Public License Version 2.1
    =============================================
    Copyright 2005 by Sun Microsystems, Inc.
    901 San Antonio Road, Palo Alto, CA 94303, USA

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License version 2.1, as published by the Free Software Foundation.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
    MA  02111-1307  USA

====================================================================== -->

<!-- *** Do not edit, this file will be generated *** -->
<!DOCTYPE api SYSTEM "ApiSymbols.dtd">
<api library-identifier="Microsoft Excel 11.0 Object Library" library-name="Excel" library-minorversion="5" library-majorversion="1" author="Sun Microsystems" date-created="20050331">
	<!--method::ActiveSheet.Cells(INSERTED)-->
	<element type="method">
		<source id="Excel.ActiveSheet.Cells">
			<context kind="class">Workbook</context>
			<name>Cells</name>
			<type>Range</type>
		</source>
	</element>
	<!--Class::AddIn-->
	<element type="class">
		<source id="Excel.AddIn">
			<name>AddIn</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::AddIn.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIn.Application">
			<context kind="class">AddIn</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::AddIn.Author {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIn.Author">
			<context kind="class">AddIn</context>
			<name>Author</name>
			<type>String</type>
		</source>
	</element>
	<!--property::AddIn.CLSID {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIn.CLSID">
			<context kind="class">AddIn</context>
			<name>CLSID</name>
			<type>String</type>
		</source>
	</element>
	<!--property::AddIn.Comments {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIn.Comments">
			<context kind="class">AddIn</context>
			<name>Comments</name>
			<type>String</type>
		</source>
	</element>
	<!--property::AddIn.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIn.Creator">
			<context kind="class">AddIn</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::AddIn.FullName {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIn.FullName">
			<context kind="class">AddIn</context>
			<name>FullName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::AddIn.Installed-->
	<element type="property">
		<source id="Excel.AddIn.Installed">
			<context kind="class">AddIn</context>
			<name>Installed</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::AddIn.Keywords {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIn.Keywords">
			<context kind="class">AddIn</context>
			<name>Keywords</name>
			<type>String</type>
		</source>
	</element>
	<!--property::AddIn.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIn.Name">
			<context kind="class">AddIn</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::AddIn.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIn.Parent">
			<context kind="class">AddIn</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::AddIn.Path {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIn.Path">
			<context kind="class">AddIn</context>
			<name>Path</name>
			<type>String</type>
		</source>
	</element>
	<!--property::AddIn.progID {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIn.progID">
			<context kind="class">AddIn</context>
			<name>progID</name>
			<type>String</type>
		</source>
	</element>
	<!--property::AddIn.Subject {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIn.Subject">
			<context kind="class">AddIn</context>
			<name>Subject</name>
			<type>String</type>
		</source>
	</element>
	<!--property::AddIn.Title {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIn.Title">
			<context kind="class">AddIn</context>
			<name>Title</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::AddIns-->
	<element type="class">
		<source id="Excel.AddIns">
			<name>AddIns</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::AddIns.Add-->
	<element type="method">
		<source id="Excel.AddIns.Add">
			<context kind="class">AddIns</context>
			<name>Add</name>
			<type>AddIn</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CopyFile</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::AddIns.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIns.Application">
			<context kind="class">AddIns</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::AddIns.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIns.Count">
			<context kind="class">AddIns</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::AddIns.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIns.Creator">
			<context kind="class">AddIns</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::AddIns.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIns.Item">
			<context kind="class">AddIns</context>
			<name default="true">Item</name>
			<type>AddIn</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::AddIns.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.AddIns.Parent">
			<context kind="class">AddIns</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Adjustments-->
	<element type="class">
		<source id="Excel.Adjustments">
			<name>Adjustments</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Adjustments.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Adjustments.Application">
			<context kind="class">Adjustments</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Adjustments.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Adjustments.Count">
			<context kind="class">Adjustments</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Adjustments.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Adjustments.Creator">
			<context kind="class">Adjustments</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Adjustments.Item {Default}-->
	<element type="property">
		<source id="Excel.Adjustments.Item">
			<context kind="class">Adjustments</context>
			<name default="true">Item</name>
			<type>Single</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Adjustments.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Adjustments.Parent">
			<context kind="class">Adjustments</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::AllowEditRange-->
	<element type="class">
		<source id="Excel.AllowEditRange">
			<name>AllowEditRange</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::AllowEditRange.ChangePassword-->
	<element type="method">
		<source id="Excel.AllowEditRange.ChangePassword">
			<context kind="class">AllowEditRange</context>
			<name>ChangePassword</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Password</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::AllowEditRange.Delete-->
	<element type="method">
		<source id="Excel.AllowEditRange.Delete">
			<context kind="class">AllowEditRange</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::AllowEditRange.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.AllowEditRange.Range">
			<context kind="class">AllowEditRange</context>
			<name>Range</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::AllowEditRange.Title-->
	<element type="property">
		<source id="Excel.AllowEditRange.Title">
			<context kind="class">AllowEditRange</context>
			<name>Title</name>
			<type>String</type>
		</source>
	</element>
	<!--method::AllowEditRange.Unprotect-->
	<element type="method">
		<source id="Excel.AllowEditRange.Unprotect">
			<context kind="class">AllowEditRange</context>
			<name>Unprotect</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::AllowEditRange.Users {ReadOnly}-->
	<element type="property">
		<source id="Excel.AllowEditRange.Users">
			<context kind="class">AllowEditRange</context>
			<name>Users</name>
			<type>UserAccessList</type>
		</source>
	</element>
	<!--Class::AllowEditRanges-->
	<element type="class">
		<source id="Excel.AllowEditRanges">
			<name>AllowEditRanges</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::AllowEditRanges.Add-->
	<element type="method">
		<source id="Excel.AllowEditRanges.Add">
			<context kind="class">AllowEditRanges</context>
			<name>Add</name>
			<type>AllowEditRange</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Title</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Range</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::AllowEditRanges.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.AllowEditRanges.Count">
			<context kind="class">AllowEditRanges</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::AllowEditRanges.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.AllowEditRanges.Item">
			<context kind="class">AllowEditRanges</context>
			<name default="true">Item</name>
			<type>AllowEditRange</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::Application-->
	<element type="class">
		<source id="Excel.Application">
			<name>Application</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Application.Acos(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Acos">
			<context kind="class">Application</context>
			<name>Acos</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Acosh(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Acosh">
			<context kind="class">Application</context>
			<name>Acosh</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ActivateMicrosoftApp-->
	<element type="method">
		<source id="Excel.Application.ActivateMicrosoftApp">
			<context kind="class">Application</context>
			<name>ActivateMicrosoftApp</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.ActiveCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ActiveCell">
			<context kind="class">Application</context>
			<name>ActiveCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Application.ActiveChart {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ActiveChart">
			<context kind="class">Application</context>
			<name>ActiveChart</name>
			<type>Chart</type>
		</source>
	</element>
	<!--property::Application.ActiveDialog {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ActiveDialog">
			<context kind="class">Application</context>
			<name>ActiveDialog</name>
			<type>DialogSheet</type>
		</source>
	</element>
	<!--property::Application.ActiveMenuBar {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ActiveMenuBar">
			<context kind="class">Application</context>
			<name>ActiveMenuBar</name>
			<type>MenuBar</type>
		</source>
	</element>
	<!--property::Application.ActivePrinter-->
	<element type="property">
		<source id="Excel.Application.ActivePrinter">
			<context kind="class">Application</context>
			<name>ActivePrinter</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.ActiveSheet {ReadOnly}(ADAPTED)-->
	<element type="property">
		<source id="Excel.Application.ActiveSheet">
			<context kind="class">Application</context>
			<name>ActiveSheet</name>
			<type>
				<!-- two subclasses of Sheet -->
				<choice>Chart</choice>
				<choice>Worksheet</choice>
			</type>
		</source>
	</element>
	<!--property::Application.ActiveWindow {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ActiveWindow">
			<context kind="class">Application</context>
			<name>ActiveWindow</name>
			<type>Window</type>
		</source>
	</element>
	<!--property::Application.ActiveWorkbook {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ActiveWorkbook">
			<context kind="class">Application</context>
			<name>ActiveWorkbook</name>
			<type>Workbook</type>
		</source>
	</element>
	<!--method::Application.AddChartAutoFormat-->
	<element type="method">
		<source id="Excel.Application.AddChartAutoFormat">
			<context kind="class">Application</context>
			<name>AddChartAutoFormat</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Chart</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Description</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.AddCustomList-->
	<element type="method">
		<source id="Excel.Application.AddCustomList">
			<context kind="class">Application</context>
			<name>AddCustomList</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>ListArray</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ByRow</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.AddIns {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.AddIns">
			<context kind="class">Application</context>
			<name>AddIns</name>
			<type>AddIns</type>
		</source>
	</element>
	<!--property::Application.AlertBeforeOverwriting-->
	<element type="property">
		<source id="Excel.Application.AlertBeforeOverwriting">
			<context kind="class">Application</context>
			<name>AlertBeforeOverwriting</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.AltStartupPath-->
	<element type="property">
		<source id="Excel.Application.AltStartupPath">
			<context kind="class">Application</context>
			<name>AltStartupPath</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Application.And(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.And">
			<context kind="class">Application</context>
			<name>And</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.AnswerWizard {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.AnswerWizard">
			<context kind="class">Application</context>
			<name>AnswerWizard</name>
			<type>AnswerWizard</type>
		</source>
	</element>
	<!--property::Application.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Application">
			<context kind="class">Application</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Application.ArbitraryXMLSupportAvailable {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ArbitraryXMLSupportAvailable">
			<context kind="class">Application</context>
			<name>ArbitraryXMLSupportAvailable</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.Asc(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Asc">
			<context kind="class">Application</context>
			<name>Asc</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Asin(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Asin">
			<context kind="class">Application</context>
			<name>Asin</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Asinh(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Asinh">
			<context kind="class">Application</context>
			<name>Asinh</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.AskToUpdateLinks-->
	<element type="property">
		<source id="Excel.Application.AskToUpdateLinks">
			<context kind="class">Application</context>
			<name>AskToUpdateLinks</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.Assistant {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Assistant">
			<context kind="class">Application</context>
			<name>Assistant</name>
			<type>Assistant</type>
		</source>
	</element>
	<!--method::Application.Atan2(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Atan2">
			<context kind="class">Application</context>
			<name>Atan2</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Atanh(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Atanh">
			<context kind="class">Application</context>
			<name>Atanh</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.AutoCorrect {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.AutoCorrect">
			<context kind="class">Application</context>
			<name>AutoCorrect</name>
			<type>AutoCorrect</type>
		</source>
	</element>
	<!--property::Application.AutoFormatAsYouTypeReplaceHyperlinks-->
	<element type="property">
		<source id="Excel.Application.AutoFormatAsYouTypeReplaceHyperlinks">
			<context kind="class">Application</context>
			<name>AutoFormatAsYouTypeReplaceHyperlinks</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.AutomationSecurity-->
	<element type="property">
		<source id="Excel.Application.AutomationSecurity">
			<context kind="class">Application</context>
			<name>AutomationSecurity</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.AutoPercentEntry-->
	<element type="property">
		<source id="Excel.Application.AutoPercentEntry">
			<context kind="class">Application</context>
			<name>AutoPercentEntry</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.AutoRecover {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.AutoRecover">
			<context kind="class">Application</context>
			<name>AutoRecover</name>
			<type>AutoRecover</type>
		</source>
	</element>
	<!--method::Application.AveDev(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.AveDev">
			<context kind="class">Application</context>
			<name>AveDev</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Average(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Average">
			<context kind="class">Application</context>
			<name>Average</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.BahtText(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.BahtText">
			<context kind="class">Application</context>
			<name>BahtText</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.BetaDist(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.BetaDist">
			<context kind="class">Application</context>
			<name>BetaDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.BetaInv(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.BetaInv">
			<context kind="class">Application</context>
			<name>BetaInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.BinomDist(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.BinomDist">
			<context kind="class">Application</context>
			<name>BinomDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Build {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Build">
			<context kind="class">Application</context>
			<name>Build</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Application.Calculate-->
	<element type="method">
		<source id="Excel.Application.Calculate">
			<context kind="class">Application</context>
			<name>Calculate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Application.CalculateBeforeSave-->
	<element type="property">
		<source id="Excel.Application.CalculateBeforeSave">
			<context kind="class">Application</context>
			<name>CalculateBeforeSave</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.CalculateFull-->
	<element type="method">
		<source id="Excel.Application.CalculateFull">
			<context kind="class">Application</context>
			<name>CalculateFull</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Application.CalculateFullRebuild-->
	<element type="method">
		<source id="Excel.Application.CalculateFullRebuild">
			<context kind="class">Application</context>
			<name>CalculateFullRebuild</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Application.Calculation-->
	<element type="property">
		<source id="Excel.Application.Calculation">
			<context kind="class">Application</context>
			<name>Calculation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.CalculationInterruptKey-->
	<element type="property">
		<source id="Excel.Application.CalculationInterruptKey">
			<context kind="class">Application</context>
			<name>CalculationInterruptKey</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.CalculationState {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.CalculationState">
			<context kind="class">Application</context>
			<name>CalculationState</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.CalculationVersion {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.CalculationVersion">
			<context kind="class">Application</context>
			<name>CalculationVersion</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.Caller {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Caller">
			<context kind="class">Application</context>
			<name>Caller</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.CanPlaySounds {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.CanPlaySounds">
			<context kind="class">Application</context>
			<name>CanPlaySounds</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.CanRecordSounds {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.CanRecordSounds">
			<context kind="class">Application</context>
			<name>CanRecordSounds</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.Caption-->
	<element type="property">
		<source id="Excel.Application.Caption">
			<context kind="class">Application</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Application.Ceiling(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Ceiling">
			<context kind="class">Application</context>
			<name>Ceiling</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.CellDragAndDrop-->
	<element type="property">
		<source id="Excel.Application.CellDragAndDrop">
			<context kind="class">Application</context>
			<name>CellDragAndDrop</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.Cells {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Cells">
			<context kind="class">Application</context>
			<name>Cells</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Application.CentimetersToPoints-->
	<element type="method">
		<source id="Excel.Application.CentimetersToPoints">
			<context kind="class">Application</context>
			<name>CentimetersToPoints</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Centimeters</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Charts {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Charts">
			<context kind="class">Application</context>
			<name>Charts</name>
			<type>Charts</type>
		</source>
	</element>
	<!--method::Application.CheckAbort-->
	<element type="method">
		<source id="Excel.Application.CheckAbort">
			<context kind="class">Application</context>
			<name>CheckAbort</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>KeepAbort</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.CheckSpelling-->
	<element type="method">
		<source id="Excel.Application.CheckSpelling">
			<context kind="class">Application</context>
			<name>CheckSpelling</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Word</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ChiDist(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.ChiDist">
			<context kind="class">Application</context>
			<name>ChiDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ChiInv(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.ChiInv">
			<context kind="class">Application</context>
			<name>ChiInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ChiTest(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.ChiTest">
			<context kind="class">Application</context>
			<name>ChiTest</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Choose(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Choose">
			<context kind="class">Application</context>
			<name>Choose</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Clean(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Clean">
			<context kind="class">Application</context>
			<name>Clean</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.ClipboardFormats {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ClipboardFormats">
			<context kind="class">Application</context>
			<name>ClipboardFormats</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.ColorButtons-->
	<element type="property">
		<source id="Excel.Application.ColorButtons">
			<context kind="class">Application</context>
			<name>ColorButtons</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.Columns {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Columns">
			<context kind="class">Application</context>
			<name>Columns</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Application.COMAddIns {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.COMAddIns">
			<context kind="class">Application</context>
			<name>COMAddIns</name>
			<type>COMAddIns</type>
		</source>
	</element>
	<!--method::Application.Combin(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Combin">
			<context kind="class">Application</context>
			<name>Combin</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.CommandBars {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.CommandBars">
			<context kind="class">Application</context>
			<name>CommandBars</name>
			<type>CommandBars</type>
		</source>
	</element>
	<!--property::Application.CommandUnderlines-->
	<element type="property">
		<source id="Excel.Application.CommandUnderlines">
			<context kind="class">Application</context>
			<name>CommandUnderlines</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Application.Confidence(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Confidence">
			<context kind="class">Application</context>
			<name>Confidence</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.ConstrainNumeric-->
	<element type="property">
		<source id="Excel.Application.ConstrainNumeric">
			<context kind="class">Application</context>
			<name>ConstrainNumeric</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.ControlCharacters-->
	<element type="property">
		<source id="Excel.Application.ControlCharacters">
			<context kind="class">Application</context>
			<name>ControlCharacters</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.ConvertFormula-->
	<element type="method">
		<source id="Excel.Application.ConvertFormula">
			<context kind="class">Application</context>
			<name>ConvertFormula</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Formula</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>FromReferenceStyle</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ToReferenceStyle</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ToAbsolute</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RelativeTo</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.CopyObjectsWithCells-->
	<element type="property">
		<source id="Excel.Application.CopyObjectsWithCells">
			<context kind="class">Application</context>
			<name>CopyObjectsWithCells</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.Correl(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Correl">
			<context kind="class">Application</context>
			<name>Correl</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Cosh(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Cosh">
			<context kind="class">Application</context>
			<name>Cosh</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Count(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Count">
			<context kind="class">Application</context>
			<name>Count</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.CountA(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.CountA">
			<context kind="class">Application</context>
			<name>CountA</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.CountBlank(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.CountBlank">
			<context kind="class">Application</context>
			<name>CountBlank</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.CountIf(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.CountIf">
			<context kind="class">Application</context>
			<name>CountIf</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Covar(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Covar">
			<context kind="class">Application</context>
			<name>Covar</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Creator">
			<context kind="class">Application</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Application.CritBinom(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.CritBinom">
			<context kind="class">Application</context>
			<name>CritBinom</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Cursor-->
	<element type="property">
		<source id="Excel.Application.Cursor">
			<context kind="class">Application</context>
			<name>Cursor</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.CursorMovement-->
	<element type="property">
		<source id="Excel.Application.CursorMovement">
			<context kind="class">Application</context>
			<name>CursorMovement</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.CustomListCount {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.CustomListCount">
			<context kind="class">Application</context>
			<name>CustomListCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.CutCopyMode-->
	<element type="property">
		<source id="Excel.Application.CutCopyMode">
			<context kind="class">Application</context>
			<name>CutCopyMode</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.DataEntryMode-->
	<element type="property">
		<source id="Excel.Application.DataEntryMode">
			<context kind="class">Application</context>
			<name>DataEntryMode</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Application.DAverage(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.DAverage">
			<context kind="class">Application</context>
			<name>DAverage</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Days360(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Days360">
			<context kind="class">Application</context>
			<name>Days360</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Db(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Db">
			<context kind="class">Application</context>
			<name>Db</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Dbcs(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Dbcs">
			<context kind="class">Application</context>
			<name>Dbcs</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DCount(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.DCount">
			<context kind="class">Application</context>
			<name>DCount</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DCountA(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.DCountA">
			<context kind="class">Application</context>
			<name>DCountA</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Ddb(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Ddb">
			<context kind="class">Application</context>
			<name>Ddb</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.DDEAppReturnCode {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.DDEAppReturnCode">
			<context kind="class">Application</context>
			<name>DDEAppReturnCode</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Application.DDEExecute-->
	<element type="method">
		<source id="Excel.Application.DDEExecute">
			<context kind="class">Application</context>
			<name>DDEExecute</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Channel</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>String</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DDEInitiate-->
	<element type="method">
		<source id="Excel.Application.DDEInitiate">
			<context kind="class">Application</context>
			<name>DDEInitiate</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>App</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Topic</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DDEPoke-->
	<element type="method">
		<source id="Excel.Application.DDEPoke">
			<context kind="class">Application</context>
			<name>DDEPoke</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Channel</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Item</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Data</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DDERequest-->
	<element type="method">
		<source id="Excel.Application.DDERequest">
			<context kind="class">Application</context>
			<name>DDERequest</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Channel</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Item</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DDETerminate-->
	<element type="method">
		<source id="Excel.Application.DDETerminate">
			<context kind="class">Application</context>
			<name>DDETerminate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Channel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.DecimalSeparator-->
	<element type="property">
		<source id="Excel.Application.DecimalSeparator">
			<context kind="class">Application</context>
			<name>DecimalSeparator</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.DefaultFilePath-->
	<element type="property">
		<source id="Excel.Application.DefaultFilePath">
			<context kind="class">Application</context>
			<name>DefaultFilePath</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.DefaultSaveFormat-->
	<element type="property">
		<source id="Excel.Application.DefaultSaveFormat">
			<context kind="class">Application</context>
			<name>DefaultSaveFormat</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.DefaultSheetDirection-->
	<element type="property">
		<source id="Excel.Application.DefaultSheetDirection">
			<context kind="class">Application</context>
			<name>DefaultSheetDirection</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.DefaultWebOptions {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.DefaultWebOptions">
			<context kind="class">Application</context>
			<name>DefaultWebOptions</name>
			<type>DefaultWebOptions</type>
		</source>
	</element>
	<!--method::Application.Degrees(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Degrees">
			<context kind="class">Application</context>
			<name>Degrees</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DeleteChartAutoFormat-->
	<element type="method">
		<source id="Excel.Application.DeleteChartAutoFormat">
			<context kind="class">Application</context>
			<name>DeleteChartAutoFormat</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DeleteCustomList-->
	<element type="method">
		<source id="Excel.Application.DeleteCustomList">
			<context kind="class">Application</context>
			<name>DeleteCustomList</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>ListNum</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DevSq(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.DevSq">
			<context kind="class">Application</context>
			<name>DevSq</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DGet(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.DGet">
			<context kind="class">Application</context>
			<name>DGet</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Dialogs {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Dialogs">
			<context kind="class">Application</context>
			<name>Dialogs</name>
			<type>Dialogs</type>
		</source>
	</element>
	<!--property::Application.DialogSheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.DialogSheets">
			<context kind="class">Application</context>
			<name>DialogSheets</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--property::Application.DisplayAlerts-->
	<element type="property">
		<source id="Excel.Application.DisplayAlerts">
			<context kind="class">Application</context>
			<name>DisplayAlerts</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.DisplayClipboardWindow-->
	<element type="property">
		<source id="Excel.Application.DisplayClipboardWindow">
			<context kind="class">Application</context>
			<name>DisplayClipboardWindow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.DisplayCommentIndicator-->
	<element type="property">
		<source id="Excel.Application.DisplayCommentIndicator">
			<context kind="class">Application</context>
			<name>DisplayCommentIndicator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.DisplayDocumentActionTaskPane-->
	<element type="property">
		<source id="Excel.Application.DisplayDocumentActionTaskPane">
			<context kind="class">Application</context>
			<name>DisplayDocumentActionTaskPane</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.DisplayExcel4Menus-->
	<element type="property">
		<source id="Excel.Application.DisplayExcel4Menus">
			<context kind="class">Application</context>
			<name>DisplayExcel4Menus</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.DisplayFormulaBar-->
	<element type="property">
		<source id="Excel.Application.DisplayFormulaBar">
			<context kind="class">Application</context>
			<name>DisplayFormulaBar</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.DisplayFullScreen-->
	<element type="property">
		<source id="Excel.Application.DisplayFullScreen">
			<context kind="class">Application</context>
			<name>DisplayFullScreen</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.DisplayFunctionToolTips-->
	<element type="property">
		<source id="Excel.Application.DisplayFunctionToolTips">
			<context kind="class">Application</context>
			<name>DisplayFunctionToolTips</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.DisplayInfoWindow-->
	<element type="property">
		<source id="Excel.Application.DisplayInfoWindow">
			<context kind="class">Application</context>
			<name>DisplayInfoWindow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.DisplayInsertOptions-->
	<element type="property">
		<source id="Excel.Application.DisplayInsertOptions">
			<context kind="class">Application</context>
			<name>DisplayInsertOptions</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.DisplayNoteIndicator-->
	<element type="property">
		<source id="Excel.Application.DisplayNoteIndicator">
			<context kind="class">Application</context>
			<name>DisplayNoteIndicator</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.DisplayPasteOptions-->
	<element type="property">
		<source id="Excel.Application.DisplayPasteOptions">
			<context kind="class">Application</context>
			<name>DisplayPasteOptions</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.DisplayRecentFiles-->
	<element type="property">
		<source id="Excel.Application.DisplayRecentFiles">
			<context kind="class">Application</context>
			<name>DisplayRecentFiles</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.DisplayScrollBars-->
	<element type="property">
		<source id="Excel.Application.DisplayScrollBars">
			<context kind="class">Application</context>
			<name>DisplayScrollBars</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.DisplayStatusBar-->
	<element type="property">
		<source id="Excel.Application.DisplayStatusBar">
			<context kind="class">Application</context>
			<name>DisplayStatusBar</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.DisplayXMLSourcePane-->
	<element type="method">
		<source id="Excel.Application.DisplayXMLSourcePane">
			<context kind="class">Application</context>
			<name>DisplayXMLSourcePane</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>XmlMap</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DMax(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.DMax">
			<context kind="class">Application</context>
			<name>DMax</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DMin(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.DMin">
			<context kind="class">Application</context>
			<name>DMin</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Dollar(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Dollar">
			<context kind="class">Application</context>
			<name>Dollar</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DoubleClick-->
	<element type="method">
		<source id="Excel.Application.DoubleClick">
			<context kind="class">Application</context>
			<name>DoubleClick</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Application.DProduct(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.DProduct">
			<context kind="class">Application</context>
			<name>DProduct</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DStDev(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.DStDev">
			<context kind="class">Application</context>
			<name>DStDev</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DStDevP(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.DStDevP">
			<context kind="class">Application</context>
			<name>DStDevP</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DSum(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.DSum">
			<context kind="class">Application</context>
			<name>DSum</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DVar(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.DVar">
			<context kind="class">Application</context>
			<name>DVar</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.DVarP(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.DVarP">
			<context kind="class">Application</context>
			<name>DVarP</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.EditDirectlyInCell-->
	<element type="property">
		<source id="Excel.Application.EditDirectlyInCell">
			<context kind="class">Application</context>
			<name>EditDirectlyInCell</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.EnableAnimations-->
	<element type="property">
		<source id="Excel.Application.EnableAnimations">
			<context kind="class">Application</context>
			<name>EnableAnimations</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.EnableAutoComplete-->
	<element type="property">
		<source id="Excel.Application.EnableAutoComplete">
			<context kind="class">Application</context>
			<name>EnableAutoComplete</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.EnableCancelKey-->
	<element type="property">
		<source id="Excel.Application.EnableCancelKey">
			<context kind="class">Application</context>
			<name>EnableCancelKey</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.EnableEvents-->
	<element type="property">
		<source id="Excel.Application.EnableEvents">
			<context kind="class">Application</context>
			<name>EnableEvents</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.EnableSound-->
	<element type="property">
		<source id="Excel.Application.EnableSound">
			<context kind="class">Application</context>
			<name>EnableSound</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.EnableTipWizard-->
	<element type="property">
		<source id="Excel.Application.EnableTipWizard">
			<context kind="class">Application</context>
			<name>EnableTipWizard</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.ErrorCheckingOptions {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ErrorCheckingOptions">
			<context kind="class">Application</context>
			<name>ErrorCheckingOptions</name>
			<type>ErrorCheckingOptions</type>
		</source>
	</element>
	<!--method::Application.Evaluate-->
	<element type="method">
		<source id="Excel.Application.Evaluate">
			<context kind="class">Application</context>
			<name>Evaluate</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Even(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Even">
			<context kind="class">Application</context>
			<name>Even</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Excel4IntlMacroSheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Excel4IntlMacroSheets">
			<context kind="class">Application</context>
			<name>Excel4IntlMacroSheets</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--property::Application.Excel4MacroSheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Excel4MacroSheets">
			<context kind="class">Application</context>
			<name>Excel4MacroSheets</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--method::Application.ExecuteExcel4Macro-->
	<element type="method">
		<source id="Excel.Application.ExecuteExcel4Macro">
			<context kind="class">Application</context>
			<name>ExecuteExcel4Macro</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>String</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ExponDist(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.ExponDist">
			<context kind="class">Application</context>
			<name>ExponDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.ExtendList-->
	<element type="property">
		<source id="Excel.Application.ExtendList">
			<context kind="class">Application</context>
			<name>ExtendList</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.Fact(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Fact">
			<context kind="class">Application</context>
			<name>Fact</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.FDist(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.FDist">
			<context kind="class">Application</context>
			<name>FDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.FeatureInstall-->
	<element type="property">
		<source id="Excel.Application.FeatureInstall">
			<context kind="class">Application</context>
			<name>FeatureInstall</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.FileConverters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.FileConverters">
			<context kind="class">Application</context>
			<name>FileConverters</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.FileDialog {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.FileDialog">
			<context kind="class">Application</context>
			<name>FileDialog</name>
			<type>FileDialog</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>fileDialogType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.FileFind {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.FileFind">
			<context kind="class">Application</context>
			<name>FileFind</name>
			<type>IFind</type>
		</source>
	</element>
	<!--property::Application.FileSearch {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.FileSearch">
			<context kind="class">Application</context>
			<name>FileSearch</name>
			<type>FileSearch</type>
		</source>
	</element>
	<!--method::Application.Find(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Find">
			<context kind="class">Application</context>
			<name>Find</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.FindB(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.FindB">
			<context kind="class">Application</context>
			<name>FindB</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.FindFile-->
	<element type="method">
		<source id="Excel.Application.FindFile">
			<context kind="class">Application</context>
			<name>FindFile</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.FindFormat {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.FindFormat">
			<context kind="class">Application</context>
			<name>FindFormat</name>
			<type>CellFormat</type>
		</source>
	</element>
	<!--method::Application.FInv(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.FInv">
			<context kind="class">Application</context>
			<name>FInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Fisher(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Fisher">
			<context kind="class">Application</context>
			<name>Fisher</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.FisherInv(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.FisherInv">
			<context kind="class">Application</context>
			<name>FisherInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Fixed(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Fixed">
			<context kind="class">Application</context>
			<name>Fixed</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.FixedDecimal-->
	<element type="property">
		<source id="Excel.Application.FixedDecimal">
			<context kind="class">Application</context>
			<name>FixedDecimal</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.FixedDecimalPlaces-->
	<element type="property">
		<source id="Excel.Application.FixedDecimalPlaces">
			<context kind="class">Application</context>
			<name>FixedDecimalPlaces</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Application.Floor(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Floor">
			<context kind="class">Application</context>
			<name>Floor</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Forecast(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Forecast">
			<context kind="class">Application</context>
			<name>Forecast</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Frequency(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Frequency">
			<context kind="class">Application</context>
			<name>Frequency</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.FTest(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.FTest">
			<context kind="class">Application</context>
			<name>FTest</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Fv(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Fv">
			<context kind="class">Application</context>
			<name>Fv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.GammaDist(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.GammaDist">
			<context kind="class">Application</context>
			<name>GammaDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.GammaInv(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.GammaInv">
			<context kind="class">Application</context>
			<name>GammaInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.GammaLn(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.GammaLn">
			<context kind="class">Application</context>
			<name>GammaLn</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.GenerateGetPivotData-->
	<element type="property">
		<source id="Excel.Application.GenerateGetPivotData">
			<context kind="class">Application</context>
			<name>GenerateGetPivotData</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.GeoMean(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.GeoMean">
			<context kind="class">Application</context>
			<name>GeoMean</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.GetCustomListContents-->
	<element type="method">
		<source id="Excel.Application.GetCustomListContents">
			<context kind="class">Application</context>
			<name>GetCustomListContents</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>ListNum</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.GetCustomListNum-->
	<element type="method">
		<source id="Excel.Application.GetCustomListNum">
			<context kind="class">Application</context>
			<name>GetCustomListNum</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>ListArray</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.GetOpenFilename-->
	<element type="method">
		<source id="Excel.Application.GetOpenFilename">
			<context kind="class">Application</context>
			<name>GetOpenFilename</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>FileFilter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>FilterIndex</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Title</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ButtonText</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MultiSelect</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.GetPhonetic-->
	<element type="method">
		<source id="Excel.Application.GetPhonetic">
			<context kind="class">Application</context>
			<name>GetPhonetic</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Text</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.GetSaveAsFilename-->
	<element type="method">
		<source id="Excel.Application.GetSaveAsFilename">
			<context kind="class">Application</context>
			<name>GetSaveAsFilename</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>InitialFilename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>FileFilter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>FilterIndex</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Title</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ButtonText</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Goto-->
	<element type="method">
		<source id="Excel.Application.Goto">
			<context kind="class">Application</context>
			<name>Goto</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Reference</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Scroll</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Growth(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Growth">
			<context kind="class">Application</context>
			<name>Growth</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.HarMean(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.HarMean">
			<context kind="class">Application</context>
			<name>HarMean</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Height-->
	<element type="property">
		<source id="Excel.Application.Height">
			<context kind="class">Application</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--method::Application.Help-->
	<element type="method">
		<source id="Excel.Application.Help">
			<context kind="class">Application</context>
			<name>Help</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>HelpFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HelpContextID</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Hinstance {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Hinstance">
			<context kind="class">Application</context>
			<name>Hinstance</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Application.HLookup(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.HLookup">
			<context kind="class">Application</context>
			<name>HLookup</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Hwnd {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Hwnd">
			<context kind="class">Application</context>
			<name>Hwnd</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Application.HypGeomDist(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.HypGeomDist">
			<context kind="class">Application</context>
			<name>HypGeomDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.IgnoreRemoteRequests-->
	<element type="property">
		<source id="Excel.Application.IgnoreRemoteRequests">
			<context kind="class">Application</context>
			<name>IgnoreRemoteRequests</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.InchesToPoints-->
	<element type="method">
		<source id="Excel.Application.InchesToPoints">
			<context kind="class">Application</context>
			<name>InchesToPoints</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Inches</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Index(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Index">
			<context kind="class">Application</context>
			<name>Index</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.InputBox-->
	<element type="method">
		<source id="Excel.Application.InputBox">
			<context kind="class">Application</context>
			<name>InputBox</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Prompt</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Title</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Default</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Left</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Top</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HelpFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HelpContextID</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Interactive-->
	<element type="property">
		<source id="Excel.Application.Interactive">
			<context kind="class">Application</context>
			<name>Interactive</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.Intercept(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Intercept">
			<context kind="class">Application</context>
			<name>Intercept</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.International {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.International">
			<context kind="class">Application</context>
			<name>International</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Intersect-->
	<element type="method">
		<source id="Excel.Application.Intersect">
			<context kind="class">Application</context>
			<name>Intersect</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Ipmt(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Ipmt">
			<context kind="class">Application</context>
			<name>Ipmt</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Irr(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Irr">
			<context kind="class">Application</context>
			<name>Irr</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.IsErr(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.IsErr">
			<context kind="class">Application</context>
			<name>IsErr</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.IsError(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.IsError">
			<context kind="class">Application</context>
			<name>IsError</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.IsLogical(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.IsLogical">
			<context kind="class">Application</context>
			<name>IsLogical</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.IsNA(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.IsNA">
			<context kind="class">Application</context>
			<name>IsNA</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.IsNonText(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.IsNonText">
			<context kind="class">Application</context>
			<name>IsNonText</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.IsNumber(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.IsNumber">
			<context kind="class">Application</context>
			<name>IsNumber</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Ispmt(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Ispmt">
			<context kind="class">Application</context>
			<name>Ispmt</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.IsText(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.IsText">
			<context kind="class">Application</context>
			<name>IsText</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.IsThaiDigit(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.IsThaiDigit">
			<context kind="class">Application</context>
			<name>IsThaiDigit</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Iteration-->
	<element type="property">
		<source id="Excel.Application.Iteration">
			<context kind="class">Application</context>
			<name>Iteration</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.Kurt(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Kurt">
			<context kind="class">Application</context>
			<name>Kurt</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.LanguageSettings {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.LanguageSettings">
			<context kind="class">Application</context>
			<name>LanguageSettings</name>
			<type>LanguageSettings</type>
		</source>
	</element>
	<!--method::Application.Large(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Large">
			<context kind="class">Application</context>
			<name>Large</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.LargeButtons-->
	<element type="property">
		<source id="Excel.Application.LargeButtons">
			<context kind="class">Application</context>
			<name>LargeButtons</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.Left-->
	<element type="property">
		<source id="Excel.Application.Left">
			<context kind="class">Application</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Application.LibraryPath {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.LibraryPath">
			<context kind="class">Application</context>
			<name>LibraryPath</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Application.LinEst(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.LinEst">
			<context kind="class">Application</context>
			<name>LinEst</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Ln(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Ln">
			<context kind="class">Application</context>
			<name>Ln</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Log(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Log">
			<context kind="class">Application</context>
			<name>Log</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Log10(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Log10">
			<context kind="class">Application</context>
			<name>Log10</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.LogEst(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.LogEst">
			<context kind="class">Application</context>
			<name>LogEst</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.LogInv(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.LogInv">
			<context kind="class">Application</context>
			<name>LogInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.LogNormDist(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.LogNormDist">
			<context kind="class">Application</context>
			<name>LogNormDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Lookup(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Lookup">
			<context kind="class">Application</context>
			<name>Lookup</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.MacroOptions-->
	<element type="method">
		<source id="Excel.Application.MacroOptions">
			<context kind="class">Application</context>
			<name>MacroOptions</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Macro</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Description</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HasMenu</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MenuText</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HasShortcutKey</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShortcutKey</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Category</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>StatusBar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HelpContextID</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HelpFile</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.MailLogoff-->
	<element type="method">
		<source id="Excel.Application.MailLogoff">
			<context kind="class">Application</context>
			<name>MailLogoff</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Application.MailLogon-->
	<element type="method">
		<source id="Excel.Application.MailLogon">
			<context kind="class">Application</context>
			<name>MailLogon</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Name</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DownloadNewMail</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.MailSession {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.MailSession">
			<context kind="class">Application</context>
			<name>MailSession</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Application.MailSystem {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.MailSystem">
			<context kind="class">Application</context>
			<name>MailSystem</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.MapPaperSize-->
	<element type="property">
		<source id="Excel.Application.MapPaperSize">
			<context kind="class">Application</context>
			<name>MapPaperSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.Match(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Match">
			<context kind="class">Application</context>
			<name>Match</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.MathCoprocessorAvailable {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.MathCoprocessorAvailable">
			<context kind="class">Application</context>
			<name>MathCoprocessorAvailable</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.Max(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Max">
			<context kind="class">Application</context>
			<name>Max</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.MaxChange-->
	<element type="property">
		<source id="Excel.Application.MaxChange">
			<context kind="class">Application</context>
			<name>MaxChange</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Application.MaxIterations-->
	<element type="property">
		<source id="Excel.Application.MaxIterations">
			<context kind="class">Application</context>
			<name>MaxIterations</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Application.MDeterm(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.MDeterm">
			<context kind="class">Application</context>
			<name>MDeterm</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Median(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Median">
			<context kind="class">Application</context>
			<name>Median</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.MemoryFree {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.MemoryFree">
			<context kind="class">Application</context>
			<name>MemoryFree</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.MemoryTotal {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.MemoryTotal">
			<context kind="class">Application</context>
			<name>MemoryTotal</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.MemoryUsed {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.MemoryUsed">
			<context kind="class">Application</context>
			<name>MemoryUsed</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.MenuBars {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.MenuBars">
			<context kind="class">Application</context>
			<name>MenuBars</name>
			<type>MenuBars</type>
		</source>
	</element>
	<!--method::Application.Min(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Min">
			<context kind="class">Application</context>
			<name>Min</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.MInverse(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.MInverse">
			<context kind="class">Application</context>
			<name>MInverse</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.MIrr(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.MIrr">
			<context kind="class">Application</context>
			<name>MIrr</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.MMult(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.MMult">
			<context kind="class">Application</context>
			<name>MMult</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Mode(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Mode">
			<context kind="class">Application</context>
			<name>Mode</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Modules {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Modules">
			<context kind="class">Application</context>
			<name>Modules</name>
			<type>Modules</type>
		</source>
	</element>
	<!--property::Application.MouseAvailable {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.MouseAvailable">
			<context kind="class">Application</context>
			<name>MouseAvailable</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.MoveAfterReturn-->
	<element type="property">
		<source id="Excel.Application.MoveAfterReturn">
			<context kind="class">Application</context>
			<name>MoveAfterReturn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.MoveAfterReturnDirection-->
	<element type="property">
		<source id="Excel.Application.MoveAfterReturnDirection">
			<context kind="class">Application</context>
			<name>MoveAfterReturnDirection</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.Name {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Name">
			<context kind="class">Application</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.Names {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Names">
			<context kind="class">Application</context>
			<name>Names</name>
			<type>Names</type>
		</source>
	</element>
	<!--method::Application.NegBinomDist(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.NegBinomDist">
			<context kind="class">Application</context>
			<name>NegBinomDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.NetworkTemplatesPath {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.NetworkTemplatesPath">
			<context kind="class">Application</context>
			<name>NetworkTemplatesPath</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.NewWorkbook {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.NewWorkbook">
			<context kind="class">Application</context>
			<name>NewWorkbook</name>
			<type>NewFile</type>
		</source>
	</element>
	<!--method::Application.NextLetter-->
	<element type="method">
		<source id="Excel.Application.NextLetter">
			<context kind="class">Application</context>
			<name>NextLetter</name>
			<type>Workbook</type>
		</source>
	</element>
	<!--method::Application.NormDist(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.NormDist">
			<context kind="class">Application</context>
			<name>NormDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.NormInv(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.NormInv">
			<context kind="class">Application</context>
			<name>NormInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.NormSDist(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.NormSDist">
			<context kind="class">Application</context>
			<name>NormSDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.NormSInv(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.NormSInv">
			<context kind="class">Application</context>
			<name>NormSInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.NPer(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.NPer">
			<context kind="class">Application</context>
			<name>NPer</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Npv(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Npv">
			<context kind="class">Application</context>
			<name>Npv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.ODBCErrors {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ODBCErrors">
			<context kind="class">Application</context>
			<name>ODBCErrors</name>
			<type>ODBCErrors</type>
		</source>
	</element>
	<!--property::Application.ODBCTimeout-->
	<element type="property">
		<source id="Excel.Application.ODBCTimeout">
			<context kind="class">Application</context>
			<name>ODBCTimeout</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Application.Odd(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Odd">
			<context kind="class">Application</context>
			<name>Odd</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.OLEDBErrors {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.OLEDBErrors">
			<context kind="class">Application</context>
			<name>OLEDBErrors</name>
			<type>OLEDBErrors</type>
		</source>
	</element>
	<!--property::Application.OnCalculate-->
	<element type="property">
		<source id="Excel.Application.OnCalculate">
			<context kind="class">Application</context>
			<name>OnCalculate</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.OnData-->
	<element type="property">
		<source id="Excel.Application.OnData">
			<context kind="class">Application</context>
			<name>OnData</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.OnDoubleClick-->
	<element type="property">
		<source id="Excel.Application.OnDoubleClick">
			<context kind="class">Application</context>
			<name>OnDoubleClick</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.OnEntry-->
	<element type="property">
		<source id="Excel.Application.OnEntry">
			<context kind="class">Application</context>
			<name>OnEntry</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Application.OnKey-->
	<element type="method">
		<source id="Excel.Application.OnKey">
			<context kind="class">Application</context>
			<name>OnKey</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Key</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Procedure</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.OnRepeat-->
	<element type="method">
		<source id="Excel.Application.OnRepeat">
			<context kind="class">Application</context>
			<name>OnRepeat</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Text</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Procedure</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.OnSheetActivate-->
	<element type="property">
		<source id="Excel.Application.OnSheetActivate">
			<context kind="class">Application</context>
			<name>OnSheetActivate</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.OnSheetDeactivate-->
	<element type="property">
		<source id="Excel.Application.OnSheetDeactivate">
			<context kind="class">Application</context>
			<name>OnSheetDeactivate</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Application.OnTime-->
	<element type="method">
		<source id="Excel.Application.OnTime">
			<context kind="class">Application</context>
			<name>OnTime</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>EarliestTime</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Procedure</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>LatestTime</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Schedule</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.OnUndo-->
	<element type="method">
		<source id="Excel.Application.OnUndo">
			<context kind="class">Application</context>
			<name>OnUndo</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Text</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Procedure</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.OnWindow-->
	<element type="property">
		<source id="Excel.Application.OnWindow">
			<context kind="class">Application</context>
			<name>OnWindow</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.OperatingSystem {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.OperatingSystem">
			<context kind="class">Application</context>
			<name>OperatingSystem</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Application.Or(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Or">
			<context kind="class">Application</context>
			<name>Or</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.OrganizationName {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.OrganizationName">
			<context kind="class">Application</context>
			<name>OrganizationName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Parent">
			<context kind="class">Application</context>
			<name>Parent</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Application.Path {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Path">
			<context kind="class">Application</context>
			<name>Path</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.PathSeparator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.PathSeparator">
			<context kind="class">Application</context>
			<name>PathSeparator</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Application.Pearson(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Pearson">
			<context kind="class">Application</context>
			<name>Pearson</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Percentile(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Percentile">
			<context kind="class">Application</context>
			<name>Percentile</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.PercentRank(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.PercentRank">
			<context kind="class">Application</context>
			<name>PercentRank</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Permut(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Permut">
			<context kind="class">Application</context>
			<name>Permut</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Phonetic(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Phonetic">
			<context kind="class">Application</context>
			<name>Phonetic</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Pi(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Pi">
			<context kind="class">Application</context>
			<name>Pi</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Application.PivotTableSelection-->
	<element type="property">
		<source id="Excel.Application.PivotTableSelection">
			<context kind="class">Application</context>
			<name>PivotTableSelection</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.Pmt(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Pmt">
			<context kind="class">Application</context>
			<name>Pmt</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Poisson(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Poisson">
			<context kind="class">Application</context>
			<name>Poisson</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Power(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Power">
			<context kind="class">Application</context>
			<name>Power</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Ppmt(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Ppmt">
			<context kind="class">Application</context>
			<name>Ppmt</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.PreviousSelections {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.PreviousSelections">
			<context kind="class">Application</context>
			<name>PreviousSelections</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Prob(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Prob">
			<context kind="class">Application</context>
			<name>Prob</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Product(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Product">
			<context kind="class">Application</context>
			<name>Product</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.ProductCode {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ProductCode">
			<context kind="class">Application</context>
			<name>ProductCode</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.PromptForSummaryInfo-->
	<element type="property">
		<source id="Excel.Application.PromptForSummaryInfo">
			<context kind="class">Application</context>
			<name>PromptForSummaryInfo</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.Proper(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Proper">
			<context kind="class">Application</context>
			<name>Proper</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Pv(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Pv">
			<context kind="class">Application</context>
			<name>Pv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Quartile(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Quartile">
			<context kind="class">Application</context>
			<name>Quartile</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Quit-->
	<element type="method">
		<source id="Excel.Application.Quit">
			<context kind="class">Application</context>
			<name>Quit</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Application.Radians(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Radians">
			<context kind="class">Application</context>
			<name>Radians</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Range">
			<context kind="class">Application</context>
			<name>Range</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Cell1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Cell2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Rank(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Rank">
			<context kind="class">Application</context>
			<name>Rank</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Rate(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Rate">
			<context kind="class">Application</context>
			<name>Rate</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Ready {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Ready">
			<context kind="class">Application</context>
			<name>Ready</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.RecentFiles {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.RecentFiles">
			<context kind="class">Application</context>
			<name>RecentFiles</name>
			<type>RecentFiles</type>
		</source>
	</element>
	<!--method::Application.RecordMacro-->
	<element type="method">
		<source id="Excel.Application.RecordMacro">
			<context kind="class">Application</context>
			<name>RecordMacro</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>BasicCode</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>XlmCode</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.RecordRelative {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.RecordRelative">
			<context kind="class">Application</context>
			<name>RecordRelative</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.ReferenceStyle-->
	<element type="property">
		<source id="Excel.Application.ReferenceStyle">
			<context kind="class">Application</context>
			<name>ReferenceStyle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.RegisteredFunctions {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.RegisteredFunctions">
			<context kind="class">Application</context>
			<name>RegisteredFunctions</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.RegisterXLL-->
	<element type="method">
		<source id="Excel.Application.RegisterXLL">
			<context kind="class">Application</context>
			<name>RegisterXLL</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Repeat-->
	<element type="method">
		<source id="Excel.Application.Repeat">
			<context kind="class">Application</context>
			<name>Repeat</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Application.Replace(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Replace">
			<context kind="class">Application</context>
			<name>Replace</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ReplaceB(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.ReplaceB">
			<context kind="class">Application</context>
			<name>ReplaceB</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.ReplaceFormat {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ReplaceFormat">
			<context kind="class">Application</context>
			<name>ReplaceFormat</name>
			<type>CellFormat</type>
		</source>
	</element>
	<!--method::Application.Rept(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Rept">
			<context kind="class">Application</context>
			<name>Rept</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ResetTipWizard-->
	<element type="method">
		<source id="Excel.Application.ResetTipWizard">
			<context kind="class">Application</context>
			<name>ResetTipWizard</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Application.RollZoom-->
	<element type="property">
		<source id="Excel.Application.RollZoom">
			<context kind="class">Application</context>
			<name>RollZoom</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.Roman(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Roman">
			<context kind="class">Application</context>
			<name>Roman</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Round(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Round">
			<context kind="class">Application</context>
			<name>Round</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.RoundBahtDown(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.RoundBahtDown">
			<context kind="class">Application</context>
			<name>RoundBahtDown</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.RoundBahtUp(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.RoundBahtUp">
			<context kind="class">Application</context>
			<name>RoundBahtUp</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.RoundDown(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.RoundDown">
			<context kind="class">Application</context>
			<name>RoundDown</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.RoundUp(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.RoundUp">
			<context kind="class">Application</context>
			<name>RoundUp</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Rows {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Rows">
			<context kind="class">Application</context>
			<name>Rows</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Application.RSq(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.RSq">
			<context kind="class">Application</context>
			<name>RSq</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.RTD {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.RTD">
			<context kind="class">Application</context>
			<name>RTD</name>
			<type>RTD</type>
		</source>
	</element>
	<!--method::Application.Run-->
	<element type="method">
		<source id="Excel.Application.Run">
			<context kind="class">Application</context>
			<name>Run</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Macro</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Save-->
	<element type="method">
		<source id="Excel.Application.Save">
			<context kind="class">Application</context>
			<name>Save</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Filename</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SaveWorkspace-->
	<element type="method">
		<source id="Excel.Application.SaveWorkspace">
			<context kind="class">Application</context>
			<name>SaveWorkspace</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Filename</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.ScreenUpdating-->
	<element type="property">
		<source id="Excel.Application.ScreenUpdating">
			<context kind="class">Application</context>
			<name>ScreenUpdating</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.Search(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Search">
			<context kind="class">Application</context>
			<name>Search</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SearchB(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.SearchB">
			<context kind="class">Application</context>
			<name>SearchB</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Selection {ReadOnly}(ADAPTED)-->
	<element type="property">
		<source id="Excel.Application.Selection">
			<context kind="class">Application</context>
			<name>Selection</name>
			<type>Object
			<choice>Range</choice>
			<choice>Shape</choice></type>
		</source>
	</element>
	<!--method::Application.SendKeys-->
	<element type="method">
		<source id="Excel.Application.SendKeys">
			<context kind="class">Application</context>
			<name>SendKeys</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Keys</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Wait</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SetDefaultChart-->
	<element type="method">
		<source id="Excel.Application.SetDefaultChart">
			<context kind="class">Application</context>
			<name>SetDefaultChart</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>FormatName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Gallery</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SheetActivate-->
	<element type="method">
		<source id="Excel.Application.SheetActivate">
			<context kind="class">Application</context>
			<name>SheetActivate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SheetBeforeDoubleClick-->
	<element type="method">
		<source id="Excel.Application.SheetBeforeDoubleClick">
			<context kind="class">Application</context>
			<name>SheetBeforeDoubleClick</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Target</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SheetBeforeRightClick-->
	<element type="method">
		<source id="Excel.Application.SheetBeforeRightClick">
			<context kind="class">Application</context>
			<name>SheetBeforeRightClick</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Target</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SheetCalculate-->
	<element type="method">
		<source id="Excel.Application.SheetCalculate">
			<context kind="class">Application</context>
			<name>SheetCalculate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SheetChange-->
	<element type="method">
		<source id="Excel.Application.SheetChange">
			<context kind="class">Application</context>
			<name>SheetChange</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SheetDeactivate-->
	<element type="method">
		<source id="Excel.Application.SheetDeactivate">
			<context kind="class">Application</context>
			<name>SheetDeactivate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SheetFollowHyperlink-->
	<element type="method">
		<source id="Excel.Application.SheetFollowHyperlink">
			<context kind="class">Application</context>
			<name>SheetFollowHyperlink</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
				<parameter>
					<type>Hyperlink</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SheetPivotTableUpdate-->
	<element type="method">
		<source id="Excel.Application.SheetPivotTableUpdate">
			<context kind="class">Application</context>
			<name>SheetPivotTableUpdate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
				<parameter>
					<type>PivotTable</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Sheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Sheets">
			<context kind="class">Application</context>
			<name>Sheets</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--method::Application.SheetSelectionChange-->
	<element type="method">
		<source id="Excel.Application.SheetSelectionChange">
			<context kind="class">Application</context>
			<name>SheetSelectionChange</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.SheetsInNewWorkbook-->
	<element type="property">
		<source id="Excel.Application.SheetsInNewWorkbook">
			<context kind="class">Application</context>
			<name>SheetsInNewWorkbook</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.ShortcutMenus {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ShortcutMenus">
			<context kind="class">Application</context>
			<name>ShortcutMenus</name>
			<type>Menu</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.ShowChartTipNames-->
	<element type="property">
		<source id="Excel.Application.ShowChartTipNames">
			<context kind="class">Application</context>
			<name>ShowChartTipNames</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.ShowChartTipValues-->
	<element type="property">
		<source id="Excel.Application.ShowChartTipValues">
			<context kind="class">Application</context>
			<name>ShowChartTipValues</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.ShowStartupDialog-->
	<element type="property">
		<source id="Excel.Application.ShowStartupDialog">
			<context kind="class">Application</context>
			<name>ShowStartupDialog</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.ShowToolTips-->
	<element type="property">
		<source id="Excel.Application.ShowToolTips">
			<context kind="class">Application</context>
			<name>ShowToolTips</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.ShowWindowsInTaskbar-->
	<element type="property">
		<source id="Excel.Application.ShowWindowsInTaskbar">
			<context kind="class">Application</context>
			<name>ShowWindowsInTaskbar</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.Sinh(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Sinh">
			<context kind="class">Application</context>
			<name>Sinh</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Skew(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Skew">
			<context kind="class">Application</context>
			<name>Skew</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Sln(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Sln">
			<context kind="class">Application</context>
			<name>Sln</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Slope(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Slope">
			<context kind="class">Application</context>
			<name>Slope</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Small(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Small">
			<context kind="class">Application</context>
			<name>Small</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.SmartTagRecognizers {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.SmartTagRecognizers">
			<context kind="class">Application</context>
			<name>SmartTagRecognizers</name>
			<type>SmartTagRecognizers</type>
		</source>
	</element>
	<!--property::Application.Speech {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Speech">
			<context kind="class">Application</context>
			<name>Speech</name>
			<type>Speech</type>
		</source>
	</element>
	<!--property::Application.SpellingOptions {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.SpellingOptions">
			<context kind="class">Application</context>
			<name>SpellingOptions</name>
			<type>SpellingOptions</type>
		</source>
	</element>
	<!--property::Application.StandardFont-->
	<element type="property">
		<source id="Excel.Application.StandardFont">
			<context kind="class">Application</context>
			<name>StandardFont</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.StandardFontSize-->
	<element type="property">
		<source id="Excel.Application.StandardFontSize">
			<context kind="class">Application</context>
			<name>StandardFontSize</name>
			<type>double</type>
		</source>
	</element>
	<!--method::Application.Standardize(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Standardize">
			<context kind="class">Application</context>
			<name>Standardize</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.StartupPath {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.StartupPath">
			<context kind="class">Application</context>
			<name>StartupPath</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.StatusBar-->
	<element type="property">
		<source id="Excel.Application.StatusBar">
			<context kind="class">Application</context>
			<name>StatusBar</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Application.StDev(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.StDev">
			<context kind="class">Application</context>
			<name>StDev</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.StDevP(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.StDevP">
			<context kind="class">Application</context>
			<name>StDevP</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.StEyx(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.StEyx">
			<context kind="class">Application</context>
			<name>StEyx</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Substitute(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Substitute">
			<context kind="class">Application</context>
			<name>Substitute</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Subtotal(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Subtotal">
			<context kind="class">Application</context>
			<name>Subtotal</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Sum(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Sum">
			<context kind="class">Application</context>
			<name>Sum</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SumIf(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.SumIf">
			<context kind="class">Application</context>
			<name>SumIf</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SumProduct(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.SumProduct">
			<context kind="class">Application</context>
			<name>SumProduct</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SumSq(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.SumSq">
			<context kind="class">Application</context>
			<name>SumSq</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SumX2MY2(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.SumX2MY2">
			<context kind="class">Application</context>
			<name>SumX2MY2</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SumX2PY2(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.SumX2PY2">
			<context kind="class">Application</context>
			<name>SumX2PY2</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.SumXMY2(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.SumXMY2">
			<context kind="class">Application</context>
			<name>SumXMY2</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Support-->
	<element type="method">
		<source id="Excel.Application.Support">
			<context kind="class">Application</context>
			<name>Support</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Object</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>ID</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>arg</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Syd(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Syd">
			<context kind="class">Application</context>
			<name>Syd</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Tanh(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Tanh">
			<context kind="class">Application</context>
			<name>Tanh</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.TDist(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.TDist">
			<context kind="class">Application</context>
			<name>TDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.TemplatesPath {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.TemplatesPath">
			<context kind="class">Application</context>
			<name>TemplatesPath</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Application.Text(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Text">
			<context kind="class">Application</context>
			<name>Text</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ThaiDayOfWeek(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.ThaiDayOfWeek">
			<context kind="class">Application</context>
			<name>ThaiDayOfWeek</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ThaiDigit(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.ThaiDigit">
			<context kind="class">Application</context>
			<name>ThaiDigit</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ThaiMonthOfYear(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.ThaiMonthOfYear">
			<context kind="class">Application</context>
			<name>ThaiMonthOfYear</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ThaiNumSound(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.ThaiNumSound">
			<context kind="class">Application</context>
			<name>ThaiNumSound</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ThaiNumString(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.ThaiNumString">
			<context kind="class">Application</context>
			<name>ThaiNumString</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ThaiStringLength(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.ThaiStringLength">
			<context kind="class">Application</context>
			<name>ThaiStringLength</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.ThaiYear(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.ThaiYear">
			<context kind="class">Application</context>
			<name>ThaiYear</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.ThisCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ThisCell">
			<context kind="class">Application</context>
			<name>ThisCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Application.ThisWorkbook {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.ThisWorkbook">
			<context kind="class">Application</context>
			<name>ThisWorkbook</name>
			<type>Workbook</type>
		</source>
	</element>
	<!--property::Application.ThousandsSeparator-->
	<element type="property">
		<source id="Excel.Application.ThousandsSeparator">
			<context kind="class">Application</context>
			<name>ThousandsSeparator</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Application.TInv(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.TInv">
			<context kind="class">Application</context>
			<name>TInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Toolbars {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Toolbars">
			<context kind="class">Application</context>
			<name>Toolbars</name>
			<type>Toolbars</type>
		</source>
	</element>
	<!--property::Application.Top-->
	<element type="property">
		<source id="Excel.Application.Top">
			<context kind="class">Application</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Application.TransitionMenuKey-->
	<element type="property">
		<source id="Excel.Application.TransitionMenuKey">
			<context kind="class">Application</context>
			<name>TransitionMenuKey</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.TransitionMenuKeyAction-->
	<element type="property">
		<source id="Excel.Application.TransitionMenuKeyAction">
			<context kind="class">Application</context>
			<name>TransitionMenuKeyAction</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Application.TransitionNavigKeys-->
	<element type="property">
		<source id="Excel.Application.TransitionNavigKeys">
			<context kind="class">Application</context>
			<name>TransitionNavigKeys</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.Transpose(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Transpose">
			<context kind="class">Application</context>
			<name>Transpose</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Trend(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Trend">
			<context kind="class">Application</context>
			<name>Trend</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Trim(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Trim">
			<context kind="class">Application</context>
			<name>Trim</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.TrimMean(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.TrimMean">
			<context kind="class">Application</context>
			<name>TrimMean</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.TTest(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.TTest">
			<context kind="class">Application</context>
			<name>TTest</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.UILanguage-->
	<element type="property">
		<source id="Excel.Application.UILanguage">
			<context kind="class">Application</context>
			<name>UILanguage</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Application.Undo-->
	<element type="method">
		<source id="Excel.Application.Undo">
			<context kind="class">Application</context>
			<name>Undo</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Application.Union-->
	<element type="method">
		<source id="Excel.Application.Union">
			<context kind="class">Application</context>
			<name>Union</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.UsableHeight {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.UsableHeight">
			<context kind="class">Application</context>
			<name>UsableHeight</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Application.UsableWidth {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.UsableWidth">
			<context kind="class">Application</context>
			<name>UsableWidth</name>
			<type>double</type>
		</source>
	</element>
	<!--method::Application.USDollar(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.USDollar">
			<context kind="class">Application</context>
			<name>USDollar</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.UsedObjects {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.UsedObjects">
			<context kind="class">Application</context>
			<name>UsedObjects</name>
			<type>UsedObjects</type>
		</source>
	</element>
	<!--property::Application.UserControl-->
	<element type="property">
		<source id="Excel.Application.UserControl">
			<context kind="class">Application</context>
			<name>UserControl</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.UserLibraryPath {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.UserLibraryPath">
			<context kind="class">Application</context>
			<name>UserLibraryPath</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.UserName-->
	<element type="property">
		<source id="Excel.Application.UserName">
			<context kind="class">Application</context>
			<name>UserName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.UseSystemSeparators-->
	<element type="property">
		<source id="Excel.Application.UseSystemSeparators">
			<context kind="class">Application</context>
			<name>UseSystemSeparators</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.Value {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Value">
			<context kind="class">Application</context>
			<name default="true">Value</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Application.Var(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Var">
			<context kind="class">Application</context>
			<name>Var</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.VarP(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.VarP">
			<context kind="class">Application</context>
			<name>VarP</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.VBE {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.VBE">
			<context kind="class">Application</context>
			<name>VBE</name>
			<type>VBE</type>
		</source>
	</element>
	<!--method::Application.Vdb(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Vdb">
			<context kind="class">Application</context>
			<name>Vdb</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Version {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Version">
			<context kind="class">Application</context>
			<name>Version</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Application.Visible-->
	<element type="property">
		<source id="Excel.Application.Visible">
			<context kind="class">Application</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Application.VLookup(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.VLookup">
			<context kind="class">Application</context>
			<name>VLookup</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Volatile-->
	<element type="method">
		<source id="Excel.Application.Volatile">
			<context kind="class">Application</context>
			<name>Volatile</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Volatile</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Wait-->
	<element type="method">
		<source id="Excel.Application.Wait">
			<context kind="class">Application</context>
			<name>Wait</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Time</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Watches {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Watches">
			<context kind="class">Application</context>
			<name>Watches</name>
			<type>Watches</type>
		</source>
	</element>
	<!--method::Application.Weekday(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Weekday">
			<context kind="class">Application</context>
			<name>Weekday</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.Weibull(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.Weibull">
			<context kind="class">Application</context>
			<name>Weibull</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Width-->
	<element type="property">
		<source id="Excel.Application.Width">
			<context kind="class">Application</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--method::Application.WindowActivate-->
	<element type="method">
		<source id="Excel.Application.WindowActivate">
			<context kind="class">Application</context>
			<name>WindowActivate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>Window</type>
					<name>Wn</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WindowDeactivate-->
	<element type="method">
		<source id="Excel.Application.WindowDeactivate">
			<context kind="class">Application</context>
			<name>WindowDeactivate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>Window</type>
					<name>Wn</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WindowResize-->
	<element type="method">
		<source id="Excel.Application.WindowResize">
			<context kind="class">Application</context>
			<name>WindowResize</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>Window</type>
					<name>Wn</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Windows {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Windows">
			<context kind="class">Application</context>
			<name>Windows</name>
			<type>Windows</type>
		</source>
	</element>
	<!--property::Application.WindowsForPens {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.WindowsForPens">
			<context kind="class">Application</context>
			<name>WindowsForPens</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Application.WindowState-->
	<element type="property">
		<source id="Excel.Application.WindowState">
			<context kind="class">Application</context>
			<name>WindowState</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Application.WorkbookActivate-->
	<element type="method">
		<source id="Excel.Application.WorkbookActivate">
			<context kind="class">Application</context>
			<name>WorkbookActivate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookAddinInstall-->
	<element type="method">
		<source id="Excel.Application.WorkbookAddinInstall">
			<context kind="class">Application</context>
			<name>WorkbookAddinInstall</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookAddinUninstall-->
	<element type="method">
		<source id="Excel.Application.WorkbookAddinUninstall">
			<context kind="class">Application</context>
			<name>WorkbookAddinUninstall</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookAfterXmlExport-->
	<element type="method">
		<source id="Excel.Application.WorkbookAfterXmlExport">
			<context kind="class">Application</context>
			<name>WorkbookAfterXmlExport</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>XmlMap</type>
					<name>Map</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Url</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Result</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookAfterXmlImport-->
	<element type="method">
		<source id="Excel.Application.WorkbookAfterXmlImport">
			<context kind="class">Application</context>
			<name>WorkbookAfterXmlImport</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>XmlMap</type>
					<name>Map</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>IsRefresh</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Result</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookBeforeClose-->
	<element type="method">
		<source id="Excel.Application.WorkbookBeforeClose">
			<context kind="class">Application</context>
			<name>WorkbookBeforeClose</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookBeforePrint-->
	<element type="method">
		<source id="Excel.Application.WorkbookBeforePrint">
			<context kind="class">Application</context>
			<name>WorkbookBeforePrint</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookBeforeSave-->
	<element type="method">
		<source id="Excel.Application.WorkbookBeforeSave">
			<context kind="class">Application</context>
			<name>WorkbookBeforeSave</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>SaveAsUI</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookBeforeXmlExport-->
	<element type="method">
		<source id="Excel.Application.WorkbookBeforeXmlExport">
			<context kind="class">Application</context>
			<name>WorkbookBeforeXmlExport</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>XmlMap</type>
					<name>Map</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Url</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookBeforeXmlImport-->
	<element type="method">
		<source id="Excel.Application.WorkbookBeforeXmlImport">
			<context kind="class">Application</context>
			<name>WorkbookBeforeXmlImport</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>XmlMap</type>
					<name>Map</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Url</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>IsRefresh</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookDeactivate-->
	<element type="method">
		<source id="Excel.Application.WorkbookDeactivate">
			<context kind="class">Application</context>
			<name>WorkbookDeactivate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookNewSheet-->
	<element type="method">
		<source id="Excel.Application.WorkbookNewSheet">
			<context kind="class">Application</context>
			<name>WorkbookNewSheet</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookOpen-->
	<element type="method">
		<source id="Excel.Application.WorkbookOpen">
			<context kind="class">Application</context>
			<name>WorkbookOpen</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookPivotTableCloseConnection-->
	<element type="method">
		<source id="Excel.Application.WorkbookPivotTableCloseConnection">
			<context kind="class">Application</context>
			<name>WorkbookPivotTableCloseConnection</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>PivotTable</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Application.WorkbookPivotTableOpenConnection-->
	<element type="method">
		<source id="Excel.Application.WorkbookPivotTableOpenConnection">
			<context kind="class">Application</context>
			<name>WorkbookPivotTableOpenConnection</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>PivotTable</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.Workbooks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Workbooks">
			<context kind="class">Application</context>
			<name>Workbooks</name>
			<type>Workbooks</type>
		</source>
	</element>
	<!--method::Application.WorkbookSync-->
	<element type="method">
		<source id="Excel.Application.WorkbookSync">
			<context kind="class">Application</context>
			<name>WorkbookSync</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Workbook</type>
					<name>Wb</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>SyncEventType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Application.WorksheetFunction {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.WorksheetFunction">
			<context kind="class">Application</context>
			<name>WorksheetFunction</name>
			<type>WorksheetFunction</type>
		</source>
	</element>
	<!--property::Application.Worksheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Application.Worksheets">
			<context kind="class">Application</context>
			<name>Worksheets</name>
			<type>Worksheets</type>
		</source>
	</element>
	<!--method::Application.ZTest(INSERTED)-->
	<element type="method">
		<source id="Excel.Application.ZTest">
			<context kind="class">Application</context>
			<name>ZTest</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::Arc-->
	<element type="class">
		<source id="Excel.Arc">
			<name>Arc</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Arc.AddIndent-->
	<element type="property">
		<source id="Excel.Arc.AddIndent">
			<context kind="class">Arc</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arc.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arc.Application">
			<context kind="class">Arc</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Arc.AutoScaleFont-->
	<element type="property">
		<source id="Excel.Arc.AutoScaleFont">
			<context kind="class">Arc</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arc.AutoSize-->
	<element type="property">
		<source id="Excel.Arc.AutoSize">
			<context kind="class">Arc</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arc.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arc.Border">
			<context kind="class">Arc</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::Arc.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arc.BottomRightCell">
			<context kind="class">Arc</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Arc.BringToFront-->
	<element type="method">
		<source id="Excel.Arc.BringToFront">
			<context kind="class">Arc</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arc.Caption-->
	<element type="property">
		<source id="Excel.Arc.Caption">
			<context kind="class">Arc</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Arc.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arc.Characters">
			<context kind="class">Arc</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Arc.CheckSpelling-->
	<element type="method">
		<source id="Excel.Arc.CheckSpelling">
			<context kind="class">Arc</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Arc.Copy-->
	<element type="method">
		<source id="Excel.Arc.Copy">
			<context kind="class">Arc</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Arc.CopyPicture-->
	<element type="method">
		<source id="Excel.Arc.CopyPicture">
			<context kind="class">Arc</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Arc.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arc.Creator">
			<context kind="class">Arc</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Arc.Cut-->
	<element type="method">
		<source id="Excel.Arc.Cut">
			<context kind="class">Arc</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Arc.Delete-->
	<element type="method">
		<source id="Excel.Arc.Delete">
			<context kind="class">Arc</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Arc.Duplicate-->
	<element type="method">
		<source id="Excel.Arc.Duplicate">
			<context kind="class">Arc</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Arc.Enabled-->
	<element type="property">
		<source id="Excel.Arc.Enabled">
			<context kind="class">Arc</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arc.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arc.Font">
			<context kind="class">Arc</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Arc.Formula-->
	<element type="property">
		<source id="Excel.Arc.Formula">
			<context kind="class">Arc</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Arc.Height-->
	<element type="property">
		<source id="Excel.Arc.Height">
			<context kind="class">Arc</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Arc.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.Arc.HorizontalAlignment">
			<context kind="class">Arc</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arc.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arc.Index">
			<context kind="class">Arc</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Arc.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arc.Interior">
			<context kind="class">Arc</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::Arc.Left-->
	<element type="property">
		<source id="Excel.Arc.Left">
			<context kind="class">Arc</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Arc.Locked-->
	<element type="property">
		<source id="Excel.Arc.Locked">
			<context kind="class">Arc</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arc.LockedText-->
	<element type="property">
		<source id="Excel.Arc.LockedText">
			<context kind="class">Arc</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arc.Name-->
	<element type="property">
		<source id="Excel.Arc.Name">
			<context kind="class">Arc</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Arc.OnAction-->
	<element type="property">
		<source id="Excel.Arc.OnAction">
			<context kind="class">Arc</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Arc.Orientation-->
	<element type="property">
		<source id="Excel.Arc.Orientation">
			<context kind="class">Arc</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arc.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arc.Parent">
			<context kind="class">Arc</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Arc.Placement-->
	<element type="property">
		<source id="Excel.Arc.Placement">
			<context kind="class">Arc</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arc.PrintObject-->
	<element type="property">
		<source id="Excel.Arc.PrintObject">
			<context kind="class">Arc</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arc.ReadingOrder-->
	<element type="property">
		<source id="Excel.Arc.ReadingOrder">
			<context kind="class">Arc</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Arc.Select-->
	<element type="method">
		<source id="Excel.Arc.Select">
			<context kind="class">Arc</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Arc.SendToBack-->
	<element type="method">
		<source id="Excel.Arc.SendToBack">
			<context kind="class">Arc</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arc.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arc.ShapeRange">
			<context kind="class">Arc</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Arc.Text-->
	<element type="property">
		<source id="Excel.Arc.Text">
			<context kind="class">Arc</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Arc.Top-->
	<element type="property">
		<source id="Excel.Arc.Top">
			<context kind="class">Arc</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Arc.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arc.TopLeftCell">
			<context kind="class">Arc</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Arc.VerticalAlignment-->
	<element type="property">
		<source id="Excel.Arc.VerticalAlignment">
			<context kind="class">Arc</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arc.Visible-->
	<element type="property">
		<source id="Excel.Arc.Visible">
			<context kind="class">Arc</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arc.Width-->
	<element type="property">
		<source id="Excel.Arc.Width">
			<context kind="class">Arc</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Arc.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arc.ZOrder">
			<context kind="class">Arc</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Arcs-->
	<element type="class">
		<source id="Excel.Arcs">
			<name>Arcs</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Arcs.Add-->
	<element type="method">
		<source id="Excel.Arcs.Add">
			<context kind="class">Arcs</context>
			<name>Add</name>
			<type>Arc</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>X1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Y1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>X2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Y2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Arcs.AddIndent-->
	<element type="property">
		<source id="Excel.Arcs.AddIndent">
			<context kind="class">Arcs</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arcs.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arcs.Application">
			<context kind="class">Arcs</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Arcs.AutoScaleFont-->
	<element type="property">
		<source id="Excel.Arcs.AutoScaleFont">
			<context kind="class">Arcs</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arcs.AutoSize-->
	<element type="property">
		<source id="Excel.Arcs.AutoSize">
			<context kind="class">Arcs</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arcs.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arcs.Border">
			<context kind="class">Arcs</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::Arcs.BringToFront-->
	<element type="method">
		<source id="Excel.Arcs.BringToFront">
			<context kind="class">Arcs</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arcs.Caption-->
	<element type="property">
		<source id="Excel.Arcs.Caption">
			<context kind="class">Arcs</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Arcs.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arcs.Characters">
			<context kind="class">Arcs</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Arcs.CheckSpelling-->
	<element type="method">
		<source id="Excel.Arcs.CheckSpelling">
			<context kind="class">Arcs</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Arcs.Copy-->
	<element type="method">
		<source id="Excel.Arcs.Copy">
			<context kind="class">Arcs</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Arcs.CopyPicture-->
	<element type="method">
		<source id="Excel.Arcs.CopyPicture">
			<context kind="class">Arcs</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Arcs.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arcs.Count">
			<context kind="class">Arcs</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Arcs.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arcs.Creator">
			<context kind="class">Arcs</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Arcs.Cut-->
	<element type="method">
		<source id="Excel.Arcs.Cut">
			<context kind="class">Arcs</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Arcs.Delete-->
	<element type="method">
		<source id="Excel.Arcs.Delete">
			<context kind="class">Arcs</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Arcs.Duplicate-->
	<element type="method">
		<source id="Excel.Arcs.Duplicate">
			<context kind="class">Arcs</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Arcs.Enabled-->
	<element type="property">
		<source id="Excel.Arcs.Enabled">
			<context kind="class">Arcs</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arcs.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arcs.Font">
			<context kind="class">Arcs</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Arcs.Formula-->
	<element type="property">
		<source id="Excel.Arcs.Formula">
			<context kind="class">Arcs</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Arcs.Group-->
	<element type="method">
		<source id="Excel.Arcs.Group">
			<context kind="class">Arcs</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::Arcs.Height-->
	<element type="property">
		<source id="Excel.Arcs.Height">
			<context kind="class">Arcs</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Arcs.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.Arcs.HorizontalAlignment">
			<context kind="class">Arcs</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arcs.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arcs.Interior">
			<context kind="class">Arcs</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::Arcs.Item-->
	<element type="method">
		<source id="Excel.Arcs.Item">
			<context kind="class">Arcs</context>
			<name>Item</name>
			<type>Arc</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Arcs.Left-->
	<element type="property">
		<source id="Excel.Arcs.Left">
			<context kind="class">Arcs</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Arcs.Locked-->
	<element type="property">
		<source id="Excel.Arcs.Locked">
			<context kind="class">Arcs</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arcs.LockedText-->
	<element type="property">
		<source id="Excel.Arcs.LockedText">
			<context kind="class">Arcs</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arcs.OnAction-->
	<element type="property">
		<source id="Excel.Arcs.OnAction">
			<context kind="class">Arcs</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Arcs.Orientation-->
	<element type="property">
		<source id="Excel.Arcs.Orientation">
			<context kind="class">Arcs</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arcs.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arcs.Parent">
			<context kind="class">Arcs</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Arcs.Placement-->
	<element type="property">
		<source id="Excel.Arcs.Placement">
			<context kind="class">Arcs</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arcs.PrintObject-->
	<element type="property">
		<source id="Excel.Arcs.PrintObject">
			<context kind="class">Arcs</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arcs.ReadingOrder-->
	<element type="property">
		<source id="Excel.Arcs.ReadingOrder">
			<context kind="class">Arcs</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Arcs.Select-->
	<element type="method">
		<source id="Excel.Arcs.Select">
			<context kind="class">Arcs</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Arcs.SendToBack-->
	<element type="method">
		<source id="Excel.Arcs.SendToBack">
			<context kind="class">Arcs</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arcs.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arcs.ShapeRange">
			<context kind="class">Arcs</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Arcs.Text-->
	<element type="property">
		<source id="Excel.Arcs.Text">
			<context kind="class">Arcs</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Arcs.Top-->
	<element type="property">
		<source id="Excel.Arcs.Top">
			<context kind="class">Arcs</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Arcs.VerticalAlignment-->
	<element type="property">
		<source id="Excel.Arcs.VerticalAlignment">
			<context kind="class">Arcs</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Arcs.Visible-->
	<element type="property">
		<source id="Excel.Arcs.Visible">
			<context kind="class">Arcs</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Arcs.Width-->
	<element type="property">
		<source id="Excel.Arcs.Width">
			<context kind="class">Arcs</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Arcs.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Arcs.ZOrder">
			<context kind="class">Arcs</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Areas-->
	<element type="class">
		<source id="Excel.Areas">
			<name>Areas</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Areas.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Areas.Application">
			<context kind="class">Areas</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Areas.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Areas.Count">
			<context kind="class">Areas</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Areas.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Areas.Creator">
			<context kind="class">Areas</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Areas.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Areas.Item">
			<context kind="class">Areas</context>
			<name default="true">Item</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Areas.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Areas.Parent">
			<context kind="class">Areas</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::AutoCorrect-->
	<element type="class">
		<source id="Excel.AutoCorrect">
			<name>AutoCorrect</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::AutoCorrect.AddReplacement-->
	<element type="method">
		<source id="Excel.AutoCorrect.AddReplacement">
			<context kind="class">AutoCorrect</context>
			<name>AddReplacement</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>What</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Replacement</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::AutoCorrect.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.AutoCorrect.Application">
			<context kind="class">AutoCorrect</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::AutoCorrect.AutoExpandListRange-->
	<element type="property">
		<source id="Excel.AutoCorrect.AutoExpandListRange">
			<context kind="class">AutoCorrect</context>
			<name>AutoExpandListRange</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::AutoCorrect.CapitalizeNamesOfDays-->
	<element type="property">
		<source id="Excel.AutoCorrect.CapitalizeNamesOfDays">
			<context kind="class">AutoCorrect</context>
			<name>CapitalizeNamesOfDays</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::AutoCorrect.CorrectCapsLock-->
	<element type="property">
		<source id="Excel.AutoCorrect.CorrectCapsLock">
			<context kind="class">AutoCorrect</context>
			<name>CorrectCapsLock</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::AutoCorrect.CorrectSentenceCap-->
	<element type="property">
		<source id="Excel.AutoCorrect.CorrectSentenceCap">
			<context kind="class">AutoCorrect</context>
			<name>CorrectSentenceCap</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::AutoCorrect.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.AutoCorrect.Creator">
			<context kind="class">AutoCorrect</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::AutoCorrect.DeleteReplacement-->
	<element type="method">
		<source id="Excel.AutoCorrect.DeleteReplacement">
			<context kind="class">AutoCorrect</context>
			<name>DeleteReplacement</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>What</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::AutoCorrect.DisplayAutoCorrectOptions-->
	<element type="property">
		<source id="Excel.AutoCorrect.DisplayAutoCorrectOptions">
			<context kind="class">AutoCorrect</context>
			<name>DisplayAutoCorrectOptions</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::AutoCorrect.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.AutoCorrect.Parent">
			<context kind="class">AutoCorrect</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::AutoCorrect.ReplacementList-->
	<element type="property">
		<source id="Excel.AutoCorrect.ReplacementList">
			<context kind="class">AutoCorrect</context>
			<name>ReplacementList</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::AutoCorrect.ReplaceText-->
	<element type="property">
		<source id="Excel.AutoCorrect.ReplaceText">
			<context kind="class">AutoCorrect</context>
			<name>ReplaceText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::AutoCorrect.TwoInitialCapitals-->
	<element type="property">
		<source id="Excel.AutoCorrect.TwoInitialCapitals">
			<context kind="class">AutoCorrect</context>
			<name>TwoInitialCapitals</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::AutoFilter-->
	<element type="class">
		<source id="Excel.AutoFilter">
			<name>AutoFilter</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::AutoFilter.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.AutoFilter.Application">
			<context kind="class">AutoFilter</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::AutoFilter.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.AutoFilter.Creator">
			<context kind="class">AutoFilter</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::AutoFilter.Filters {ReadOnly}-->
	<element type="property">
		<source id="Excel.AutoFilter.Filters">
			<context kind="class">AutoFilter</context>
			<name>Filters</name>
			<type>Filters</type>
		</source>
	</element>
	<!--property::AutoFilter.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.AutoFilter.Parent">
			<context kind="class">AutoFilter</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::AutoFilter.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.AutoFilter.Range">
			<context kind="class">AutoFilter</context>
			<name>Range</name>
			<type>Range</type>
		</source>
	</element>
	<!--Class::AutoRecover-->
	<element type="class">
		<source id="Excel.AutoRecover">
			<name>AutoRecover</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::AutoRecover.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.AutoRecover.Application">
			<context kind="class">AutoRecover</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::AutoRecover.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.AutoRecover.Creator">
			<context kind="class">AutoRecover</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::AutoRecover.Enabled-->
	<element type="property">
		<source id="Excel.AutoRecover.Enabled">
			<context kind="class">AutoRecover</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::AutoRecover.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.AutoRecover.Parent">
			<context kind="class">AutoRecover</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::AutoRecover.Path-->
	<element type="property">
		<source id="Excel.AutoRecover.Path">
			<context kind="class">AutoRecover</context>
			<name>Path</name>
			<type>String</type>
		</source>
	</element>
	<!--property::AutoRecover.Time-->
	<element type="property">
		<source id="Excel.AutoRecover.Time">
			<context kind="class">AutoRecover</context>
			<name>Time</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Axes-->
	<element type="class">
		<source id="Excel.Axes">
			<name>Axes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Axes.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axes.Application">
			<context kind="class">Axes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Axes.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axes.Count">
			<context kind="class">Axes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axes.Creator">
			<context kind="class">Axes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Axes.Item-->
	<element type="method">
		<source id="Excel.Axes.Item">
			<context kind="class">Axes</context>
			<name>Item</name>
			<type>Axis</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>AxisGroup</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Axes.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axes.Parent">
			<context kind="class">Axes</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Axis-->
	<element type="class">
		<source id="Excel.Axis">
			<name>Axis</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Axis.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.Application">
			<context kind="class">Axis</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Axis.AxisBetweenCategories-->
	<element type="property">
		<source id="Excel.Axis.AxisBetweenCategories">
			<context kind="class">Axis</context>
			<name>AxisBetweenCategories</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Axis.AxisGroup {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.AxisGroup">
			<context kind="class">Axis</context>
			<name>AxisGroup</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.AxisTitle {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.AxisTitle">
			<context kind="class">Axis</context>
			<name>AxisTitle</name>
			<type>AxisTitle</type>
		</source>
	</element>
	<!--property::Axis.BaseUnit-->
	<element type="property">
		<source id="Excel.Axis.BaseUnit">
			<context kind="class">Axis</context>
			<name>BaseUnit</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.BaseUnitIsAuto-->
	<element type="property">
		<source id="Excel.Axis.BaseUnitIsAuto">
			<context kind="class">Axis</context>
			<name>BaseUnitIsAuto</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Axis.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.Border">
			<context kind="class">Axis</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::Axis.CategoryNames-->
	<element type="property">
		<source id="Excel.Axis.CategoryNames">
			<context kind="class">Axis</context>
			<name>CategoryNames</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Axis.CategoryType-->
	<element type="property">
		<source id="Excel.Axis.CategoryType">
			<context kind="class">Axis</context>
			<name>CategoryType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.Creator">
			<context kind="class">Axis</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.Crosses-->
	<element type="property">
		<source id="Excel.Axis.Crosses">
			<context kind="class">Axis</context>
			<name>Crosses</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.CrossesAt-->
	<element type="property">
		<source id="Excel.Axis.CrossesAt">
			<context kind="class">Axis</context>
			<name>CrossesAt</name>
			<type>double</type>
		</source>
	</element>
	<!--method::Axis.Delete-->
	<element type="method">
		<source id="Excel.Axis.Delete">
			<context kind="class">Axis</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Axis.DisplayUnit-->
	<element type="property">
		<source id="Excel.Axis.DisplayUnit">
			<context kind="class">Axis</context>
			<name>DisplayUnit</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.DisplayUnitCustom-->
	<element type="property">
		<source id="Excel.Axis.DisplayUnitCustom">
			<context kind="class">Axis</context>
			<name>DisplayUnitCustom</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Axis.DisplayUnitLabel {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.DisplayUnitLabel">
			<context kind="class">Axis</context>
			<name>DisplayUnitLabel</name>
			<type>DisplayUnitLabel</type>
		</source>
	</element>
	<!--property::Axis.HasDisplayUnitLabel-->
	<element type="property">
		<source id="Excel.Axis.HasDisplayUnitLabel">
			<context kind="class">Axis</context>
			<name>HasDisplayUnitLabel</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Axis.HasMajorGridlines-->
	<element type="property">
		<source id="Excel.Axis.HasMajorGridlines">
			<context kind="class">Axis</context>
			<name>HasMajorGridlines</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Axis.HasMinorGridlines-->
	<element type="property">
		<source id="Excel.Axis.HasMinorGridlines">
			<context kind="class">Axis</context>
			<name>HasMinorGridlines</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Axis.HasTitle-->
	<element type="property">
		<source id="Excel.Axis.HasTitle">
			<context kind="class">Axis</context>
			<name>HasTitle</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Axis.Height {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.Height">
			<context kind="class">Axis</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Axis.Left {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.Left">
			<context kind="class">Axis</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Axis.MajorGridlines {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.MajorGridlines">
			<context kind="class">Axis</context>
			<name>MajorGridlines</name>
			<type>Gridlines</type>
		</source>
	</element>
	<!--property::Axis.MajorTickMark-->
	<element type="property">
		<source id="Excel.Axis.MajorTickMark">
			<context kind="class">Axis</context>
			<name>MajorTickMark</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.MajorUnit-->
	<element type="property">
		<source id="Excel.Axis.MajorUnit">
			<context kind="class">Axis</context>
			<name>MajorUnit</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Axis.MajorUnitIsAuto-->
	<element type="property">
		<source id="Excel.Axis.MajorUnitIsAuto">
			<context kind="class">Axis</context>
			<name>MajorUnitIsAuto</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Axis.MajorUnitScale-->
	<element type="property">
		<source id="Excel.Axis.MajorUnitScale">
			<context kind="class">Axis</context>
			<name>MajorUnitScale</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.MaximumScale-->
	<element type="property">
		<source id="Excel.Axis.MaximumScale">
			<context kind="class">Axis</context>
			<name>MaximumScale</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Axis.MaximumScaleIsAuto-->
	<element type="property">
		<source id="Excel.Axis.MaximumScaleIsAuto">
			<context kind="class">Axis</context>
			<name>MaximumScaleIsAuto</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Axis.MinimumScale-->
	<element type="property">
		<source id="Excel.Axis.MinimumScale">
			<context kind="class">Axis</context>
			<name>MinimumScale</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Axis.MinimumScaleIsAuto-->
	<element type="property">
		<source id="Excel.Axis.MinimumScaleIsAuto">
			<context kind="class">Axis</context>
			<name>MinimumScaleIsAuto</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Axis.MinorGridlines {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.MinorGridlines">
			<context kind="class">Axis</context>
			<name>MinorGridlines</name>
			<type>Gridlines</type>
		</source>
	</element>
	<!--property::Axis.MinorTickMark-->
	<element type="property">
		<source id="Excel.Axis.MinorTickMark">
			<context kind="class">Axis</context>
			<name>MinorTickMark</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.MinorUnit-->
	<element type="property">
		<source id="Excel.Axis.MinorUnit">
			<context kind="class">Axis</context>
			<name>MinorUnit</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Axis.MinorUnitIsAuto-->
	<element type="property">
		<source id="Excel.Axis.MinorUnitIsAuto">
			<context kind="class">Axis</context>
			<name>MinorUnitIsAuto</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Axis.MinorUnitScale-->
	<element type="property">
		<source id="Excel.Axis.MinorUnitScale">
			<context kind="class">Axis</context>
			<name>MinorUnitScale</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.Parent">
			<context kind="class">Axis</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Axis.ReversePlotOrder-->
	<element type="property">
		<source id="Excel.Axis.ReversePlotOrder">
			<context kind="class">Axis</context>
			<name>ReversePlotOrder</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Axis.ScaleType-->
	<element type="property">
		<source id="Excel.Axis.ScaleType">
			<context kind="class">Axis</context>
			<name>ScaleType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Axis.Select-->
	<element type="method">
		<source id="Excel.Axis.Select">
			<context kind="class">Axis</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Axis.TickLabelPosition-->
	<element type="property">
		<source id="Excel.Axis.TickLabelPosition">
			<context kind="class">Axis</context>
			<name>TickLabelPosition</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.TickLabels {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.TickLabels">
			<context kind="class">Axis</context>
			<name>TickLabels</name>
			<type>TickLabels</type>
		</source>
	</element>
	<!--property::Axis.TickLabelSpacing-->
	<element type="property">
		<source id="Excel.Axis.TickLabelSpacing">
			<context kind="class">Axis</context>
			<name>TickLabelSpacing</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.TickMarkSpacing-->
	<element type="property">
		<source id="Excel.Axis.TickMarkSpacing">
			<context kind="class">Axis</context>
			<name>TickMarkSpacing</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.Top {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.Top">
			<context kind="class">Axis</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Axis.Type-->
	<element type="property">
		<source id="Excel.Axis.Type">
			<context kind="class">Axis</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Axis.Width {ReadOnly}-->
	<element type="property">
		<source id="Excel.Axis.Width">
			<context kind="class">Axis</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--Class::AxisTitle-->
	<element type="class">
		<source id="Excel.AxisTitle">
			<name>AxisTitle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::AxisTitle.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.AxisTitle.Application">
			<context kind="class">AxisTitle</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::AxisTitle.AutoScaleFont-->
	<element type="property">
		<source id="Excel.AxisTitle.AutoScaleFont">
			<context kind="class">AxisTitle</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::AxisTitle.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.AxisTitle.Border">
			<context kind="class">AxisTitle</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::AxisTitle.Caption-->
	<element type="property">
		<source id="Excel.AxisTitle.Caption">
			<context kind="class">AxisTitle</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::AxisTitle.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.AxisTitle.Characters">
			<context kind="class">AxisTitle</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::AxisTitle.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.AxisTitle.Creator">
			<context kind="class">AxisTitle</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::AxisTitle.Delete-->
	<element type="method">
		<source id="Excel.AxisTitle.Delete">
			<context kind="class">AxisTitle</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::AxisTitle.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.AxisTitle.Fill">
			<context kind="class">AxisTitle</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::AxisTitle.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.AxisTitle.Font">
			<context kind="class">AxisTitle</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::AxisTitle.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.AxisTitle.HorizontalAlignment">
			<context kind="class">AxisTitle</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::AxisTitle.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.AxisTitle.Interior">
			<context kind="class">AxisTitle</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::AxisTitle.Left-->
	<element type="property">
		<source id="Excel.AxisTitle.Left">
			<context kind="class">AxisTitle</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::AxisTitle.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.AxisTitle.Name">
			<context kind="class">AxisTitle</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::AxisTitle.Orientation-->
	<element type="property">
		<source id="Excel.AxisTitle.Orientation">
			<context kind="class">AxisTitle</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::AxisTitle.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.AxisTitle.Parent">
			<context kind="class">AxisTitle</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::AxisTitle.ReadingOrder-->
	<element type="property">
		<source id="Excel.AxisTitle.ReadingOrder">
			<context kind="class">AxisTitle</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::AxisTitle.Select-->
	<element type="method">
		<source id="Excel.AxisTitle.Select">
			<context kind="class">AxisTitle</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::AxisTitle.Shadow-->
	<element type="property">
		<source id="Excel.AxisTitle.Shadow">
			<context kind="class">AxisTitle</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::AxisTitle.Text-->
	<element type="property">
		<source id="Excel.AxisTitle.Text">
			<context kind="class">AxisTitle</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::AxisTitle.Top-->
	<element type="property">
		<source id="Excel.AxisTitle.Top">
			<context kind="class">AxisTitle</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::AxisTitle.VerticalAlignment-->
	<element type="property">
		<source id="Excel.AxisTitle.VerticalAlignment">
			<context kind="class">AxisTitle</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Border-->
	<element type="class">
		<source id="Excel.Border">
			<name>Border</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Border.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Border.Application">
			<context kind="class">Border</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Border.Color-->
	<element type="property">
		<source id="Excel.Border.Color">
			<context kind="class">Border</context>
			<name>Color</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Border.ColorIndex-->
	<element type="property">
		<source id="Excel.Border.ColorIndex">
			<context kind="class">Border</context>
			<name>ColorIndex</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Border.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Border.Creator">
			<context kind="class">Border</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Border.LineStyle-->
	<element type="property">
		<source id="Excel.Border.LineStyle">
			<context kind="class">Border</context>
			<name>LineStyle</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Border.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Border.Parent">
			<context kind="class">Border</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Border.Weight-->
	<element type="property">
		<source id="Excel.Border.Weight">
			<context kind="class">Border</context>
			<name>Weight</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Borders-->
	<element type="class">
		<source id="Excel.Borders">
			<name>Borders</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Borders.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Borders.Application">
			<context kind="class">Borders</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Borders.Color-->
	<element type="property">
		<source id="Excel.Borders.Color">
			<context kind="class">Borders</context>
			<name>Color</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Borders.ColorIndex-->
	<element type="property">
		<source id="Excel.Borders.ColorIndex">
			<context kind="class">Borders</context>
			<name>ColorIndex</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Borders.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Borders.Count">
			<context kind="class">Borders</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Borders.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Borders.Creator">
			<context kind="class">Borders</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Borders.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Borders.Item">
			<context kind="class">Borders</context>
			<name default="true">Item</name>
			<type>Border</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Borders.LineStyle-->
	<element type="property">
		<source id="Excel.Borders.LineStyle">
			<context kind="class">Borders</context>
			<name>LineStyle</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Borders.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Borders.Parent">
			<context kind="class">Borders</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Borders.Value-->
	<element type="property">
		<source id="Excel.Borders.Value">
			<context kind="class">Borders</context>
			<name>Value</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Borders.Weight-->
	<element type="property">
		<source id="Excel.Borders.Weight">
			<context kind="class">Borders</context>
			<name>Weight</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Button-->
	<element type="class">
		<source id="Excel.Button">
			<name>Button</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Button.Accelerator-->
	<element type="property">
		<source id="Excel.Button.Accelerator">
			<context kind="class">Button</context>
			<name>Accelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Button.AddIndent-->
	<element type="property">
		<source id="Excel.Button.AddIndent">
			<context kind="class">Button</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Button.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Button.Application">
			<context kind="class">Button</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Button.AutoScaleFont-->
	<element type="property">
		<source id="Excel.Button.AutoScaleFont">
			<context kind="class">Button</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Button.AutoSize-->
	<element type="property">
		<source id="Excel.Button.AutoSize">
			<context kind="class">Button</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Button.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Button.BottomRightCell">
			<context kind="class">Button</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Button.BringToFront-->
	<element type="method">
		<source id="Excel.Button.BringToFront">
			<context kind="class">Button</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Button.CancelButton-->
	<element type="property">
		<source id="Excel.Button.CancelButton">
			<context kind="class">Button</context>
			<name>CancelButton</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Button.Caption-->
	<element type="property">
		<source id="Excel.Button.Caption">
			<context kind="class">Button</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Button.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Button.Characters">
			<context kind="class">Button</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Button.CheckSpelling-->
	<element type="method">
		<source id="Excel.Button.CheckSpelling">
			<context kind="class">Button</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Button.Copy-->
	<element type="method">
		<source id="Excel.Button.Copy">
			<context kind="class">Button</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Button.CopyPicture-->
	<element type="method">
		<source id="Excel.Button.CopyPicture">
			<context kind="class">Button</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Button.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Button.Creator">
			<context kind="class">Button</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Button.Cut-->
	<element type="method">
		<source id="Excel.Button.Cut">
			<context kind="class">Button</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Button.DefaultButton-->
	<element type="property">
		<source id="Excel.Button.DefaultButton">
			<context kind="class">Button</context>
			<name>DefaultButton</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Button.Delete-->
	<element type="method">
		<source id="Excel.Button.Delete">
			<context kind="class">Button</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Button.DismissButton-->
	<element type="property">
		<source id="Excel.Button.DismissButton">
			<context kind="class">Button</context>
			<name>DismissButton</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Button.Duplicate-->
	<element type="method">
		<source id="Excel.Button.Duplicate">
			<context kind="class">Button</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Button.Enabled-->
	<element type="property">
		<source id="Excel.Button.Enabled">
			<context kind="class">Button</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Button.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Button.Font">
			<context kind="class">Button</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Button.Formula-->
	<element type="property">
		<source id="Excel.Button.Formula">
			<context kind="class">Button</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Button.Height-->
	<element type="property">
		<source id="Excel.Button.Height">
			<context kind="class">Button</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Button.HelpButton-->
	<element type="property">
		<source id="Excel.Button.HelpButton">
			<context kind="class">Button</context>
			<name>HelpButton</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Button.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.Button.HorizontalAlignment">
			<context kind="class">Button</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Button.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Button.Index">
			<context kind="class">Button</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Button.Left-->
	<element type="property">
		<source id="Excel.Button.Left">
			<context kind="class">Button</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Button.Locked-->
	<element type="property">
		<source id="Excel.Button.Locked">
			<context kind="class">Button</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Button.LockedText-->
	<element type="property">
		<source id="Excel.Button.LockedText">
			<context kind="class">Button</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Button.Name-->
	<element type="property">
		<source id="Excel.Button.Name">
			<context kind="class">Button</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Button.OnAction-->
	<element type="property">
		<source id="Excel.Button.OnAction">
			<context kind="class">Button</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Button.Orientation-->
	<element type="property">
		<source id="Excel.Button.Orientation">
			<context kind="class">Button</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Button.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Button.Parent">
			<context kind="class">Button</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Button.PhoneticAccelerator-->
	<element type="property">
		<source id="Excel.Button.PhoneticAccelerator">
			<context kind="class">Button</context>
			<name>PhoneticAccelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Button.Placement-->
	<element type="property">
		<source id="Excel.Button.Placement">
			<context kind="class">Button</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Button.PrintObject-->
	<element type="property">
		<source id="Excel.Button.PrintObject">
			<context kind="class">Button</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Button.ReadingOrder-->
	<element type="property">
		<source id="Excel.Button.ReadingOrder">
			<context kind="class">Button</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Button.Select-->
	<element type="method">
		<source id="Excel.Button.Select">
			<context kind="class">Button</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Button.SendToBack-->
	<element type="method">
		<source id="Excel.Button.SendToBack">
			<context kind="class">Button</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Button.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Button.ShapeRange">
			<context kind="class">Button</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Button.Text-->
	<element type="property">
		<source id="Excel.Button.Text">
			<context kind="class">Button</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Button.Top-->
	<element type="property">
		<source id="Excel.Button.Top">
			<context kind="class">Button</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Button.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Button.TopLeftCell">
			<context kind="class">Button</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Button.VerticalAlignment-->
	<element type="property">
		<source id="Excel.Button.VerticalAlignment">
			<context kind="class">Button</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Button.Visible-->
	<element type="property">
		<source id="Excel.Button.Visible">
			<context kind="class">Button</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Button.Width-->
	<element type="property">
		<source id="Excel.Button.Width">
			<context kind="class">Button</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Button.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Button.ZOrder">
			<context kind="class">Button</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Buttons-->
	<element type="class">
		<source id="Excel.Buttons">
			<name>Buttons</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Buttons.Accelerator-->
	<element type="property">
		<source id="Excel.Buttons.Accelerator">
			<context kind="class">Buttons</context>
			<name>Accelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Buttons.Add-->
	<element type="method">
		<source id="Excel.Buttons.Add">
			<context kind="class">Buttons</context>
			<name>Add</name>
			<type>Button</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Buttons.AddIndent-->
	<element type="property">
		<source id="Excel.Buttons.AddIndent">
			<context kind="class">Buttons</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Buttons.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Buttons.Application">
			<context kind="class">Buttons</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Buttons.AutoScaleFont-->
	<element type="property">
		<source id="Excel.Buttons.AutoScaleFont">
			<context kind="class">Buttons</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Buttons.AutoSize-->
	<element type="property">
		<source id="Excel.Buttons.AutoSize">
			<context kind="class">Buttons</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Buttons.BringToFront-->
	<element type="method">
		<source id="Excel.Buttons.BringToFront">
			<context kind="class">Buttons</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Buttons.CancelButton-->
	<element type="property">
		<source id="Excel.Buttons.CancelButton">
			<context kind="class">Buttons</context>
			<name>CancelButton</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Buttons.Caption-->
	<element type="property">
		<source id="Excel.Buttons.Caption">
			<context kind="class">Buttons</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Buttons.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Buttons.Characters">
			<context kind="class">Buttons</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Buttons.CheckSpelling-->
	<element type="method">
		<source id="Excel.Buttons.CheckSpelling">
			<context kind="class">Buttons</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Buttons.Copy-->
	<element type="method">
		<source id="Excel.Buttons.Copy">
			<context kind="class">Buttons</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Buttons.CopyPicture-->
	<element type="method">
		<source id="Excel.Buttons.CopyPicture">
			<context kind="class">Buttons</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Buttons.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Buttons.Count">
			<context kind="class">Buttons</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Buttons.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Buttons.Creator">
			<context kind="class">Buttons</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Buttons.Cut-->
	<element type="method">
		<source id="Excel.Buttons.Cut">
			<context kind="class">Buttons</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Buttons.DefaultButton-->
	<element type="property">
		<source id="Excel.Buttons.DefaultButton">
			<context kind="class">Buttons</context>
			<name>DefaultButton</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Buttons.Delete-->
	<element type="method">
		<source id="Excel.Buttons.Delete">
			<context kind="class">Buttons</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Buttons.DismissButton-->
	<element type="property">
		<source id="Excel.Buttons.DismissButton">
			<context kind="class">Buttons</context>
			<name>DismissButton</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Buttons.Duplicate-->
	<element type="method">
		<source id="Excel.Buttons.Duplicate">
			<context kind="class">Buttons</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Buttons.Enabled-->
	<element type="property">
		<source id="Excel.Buttons.Enabled">
			<context kind="class">Buttons</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Buttons.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Buttons.Font">
			<context kind="class">Buttons</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Buttons.Formula-->
	<element type="property">
		<source id="Excel.Buttons.Formula">
			<context kind="class">Buttons</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Buttons.Group-->
	<element type="method">
		<source id="Excel.Buttons.Group">
			<context kind="class">Buttons</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::Buttons.Height-->
	<element type="property">
		<source id="Excel.Buttons.Height">
			<context kind="class">Buttons</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Buttons.HelpButton-->
	<element type="property">
		<source id="Excel.Buttons.HelpButton">
			<context kind="class">Buttons</context>
			<name>HelpButton</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Buttons.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.Buttons.HorizontalAlignment">
			<context kind="class">Buttons</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Buttons.Item-->
	<element type="method">
		<source id="Excel.Buttons.Item">
			<context kind="class">Buttons</context>
			<name>Item</name>
			<type>Button</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Buttons.Left-->
	<element type="property">
		<source id="Excel.Buttons.Left">
			<context kind="class">Buttons</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Buttons.Locked-->
	<element type="property">
		<source id="Excel.Buttons.Locked">
			<context kind="class">Buttons</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Buttons.LockedText-->
	<element type="property">
		<source id="Excel.Buttons.LockedText">
			<context kind="class">Buttons</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Buttons.OnAction-->
	<element type="property">
		<source id="Excel.Buttons.OnAction">
			<context kind="class">Buttons</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Buttons.Orientation-->
	<element type="property">
		<source id="Excel.Buttons.Orientation">
			<context kind="class">Buttons</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Buttons.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Buttons.Parent">
			<context kind="class">Buttons</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Buttons.PhoneticAccelerator-->
	<element type="property">
		<source id="Excel.Buttons.PhoneticAccelerator">
			<context kind="class">Buttons</context>
			<name>PhoneticAccelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Buttons.Placement-->
	<element type="property">
		<source id="Excel.Buttons.Placement">
			<context kind="class">Buttons</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Buttons.PrintObject-->
	<element type="property">
		<source id="Excel.Buttons.PrintObject">
			<context kind="class">Buttons</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Buttons.ReadingOrder-->
	<element type="property">
		<source id="Excel.Buttons.ReadingOrder">
			<context kind="class">Buttons</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Buttons.Select-->
	<element type="method">
		<source id="Excel.Buttons.Select">
			<context kind="class">Buttons</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Buttons.SendToBack-->
	<element type="method">
		<source id="Excel.Buttons.SendToBack">
			<context kind="class">Buttons</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Buttons.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Buttons.ShapeRange">
			<context kind="class">Buttons</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Buttons.Text-->
	<element type="property">
		<source id="Excel.Buttons.Text">
			<context kind="class">Buttons</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Buttons.Top-->
	<element type="property">
		<source id="Excel.Buttons.Top">
			<context kind="class">Buttons</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Buttons.VerticalAlignment-->
	<element type="property">
		<source id="Excel.Buttons.VerticalAlignment">
			<context kind="class">Buttons</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Buttons.Visible-->
	<element type="property">
		<source id="Excel.Buttons.Visible">
			<context kind="class">Buttons</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Buttons.Width-->
	<element type="property">
		<source id="Excel.Buttons.Width">
			<context kind="class">Buttons</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Buttons.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Buttons.ZOrder">
			<context kind="class">Buttons</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::CalculatedFields-->
	<element type="class">
		<source id="Excel.CalculatedFields">
			<name>CalculatedFields</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::CalculatedFields.Add-->
	<element type="method">
		<source id="Excel.CalculatedFields.Add">
			<context kind="class">CalculatedFields</context>
			<name>Add</name>
			<type>PivotField</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Formula</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>UseStandardFormula</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CalculatedFields.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedFields.Application">
			<context kind="class">CalculatedFields</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CalculatedFields.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedFields.Count">
			<context kind="class">CalculatedFields</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CalculatedFields.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedFields.Creator">
			<context kind="class">CalculatedFields</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CalculatedFields.Item-->
	<element type="method">
		<source id="Excel.CalculatedFields.Item">
			<context kind="class">CalculatedFields</context>
			<name>Item</name>
			<type>PivotField</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CalculatedFields.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedFields.Parent">
			<context kind="class">CalculatedFields</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::CalculatedItems-->
	<element type="class">
		<source id="Excel.CalculatedItems">
			<name>CalculatedItems</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::CalculatedItems.Add-->
	<element type="method">
		<source id="Excel.CalculatedItems.Add">
			<context kind="class">CalculatedItems</context>
			<name>Add</name>
			<type>PivotItem</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Formula</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>UseStandardFormula</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CalculatedItems.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedItems.Application">
			<context kind="class">CalculatedItems</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CalculatedItems.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedItems.Count">
			<context kind="class">CalculatedItems</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CalculatedItems.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedItems.Creator">
			<context kind="class">CalculatedItems</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CalculatedItems.Item-->
	<element type="method">
		<source id="Excel.CalculatedItems.Item">
			<context kind="class">CalculatedItems</context>
			<name>Item</name>
			<type>PivotItem</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CalculatedItems.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedItems.Parent">
			<context kind="class">CalculatedItems</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::CalculatedMember-->
	<element type="class">
		<source id="Excel.CalculatedMember">
			<name>CalculatedMember</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::CalculatedMember.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMember.Application">
			<context kind="class">CalculatedMember</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CalculatedMember.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMember.Creator">
			<context kind="class">CalculatedMember</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CalculatedMember.Delete-->
	<element type="method">
		<source id="Excel.CalculatedMember.Delete">
			<context kind="class">CalculatedMember</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CalculatedMember.Formula {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMember.Formula">
			<context kind="class">CalculatedMember</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CalculatedMember.IsValid {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMember.IsValid">
			<context kind="class">CalculatedMember</context>
			<name>IsValid</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CalculatedMember.Name {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMember.Name">
			<context kind="class">CalculatedMember</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CalculatedMember.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMember.Parent">
			<context kind="class">CalculatedMember</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CalculatedMember.SolveOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMember.SolveOrder">
			<context kind="class">CalculatedMember</context>
			<name>SolveOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CalculatedMember.SourceName {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMember.SourceName">
			<context kind="class">CalculatedMember</context>
			<name>SourceName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CalculatedMember.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMember.Type">
			<context kind="class">CalculatedMember</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::CalculatedMembers-->
	<element type="class">
		<source id="Excel.CalculatedMembers">
			<name>CalculatedMembers</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::CalculatedMembers.Add-->
	<element type="method">
		<source id="Excel.CalculatedMembers.Add">
			<context kind="class">CalculatedMembers</context>
			<name>Add</name>
			<type>CalculatedMember</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Formula</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SolveOrder</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CalculatedMembers.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMembers.Application">
			<context kind="class">CalculatedMembers</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CalculatedMembers.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMembers.Count">
			<context kind="class">CalculatedMembers</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CalculatedMembers.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMembers.Creator">
			<context kind="class">CalculatedMembers</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CalculatedMembers.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMembers.Item">
			<context kind="class">CalculatedMembers</context>
			<name default="true">Item</name>
			<type>CalculatedMember</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CalculatedMembers.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalculatedMembers.Parent">
			<context kind="class">CalculatedMembers</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::CalloutFormat-->
	<element type="class">
		<source id="Excel.CalloutFormat">
			<name>CalloutFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::CalloutFormat.Accent-->
	<element type="property">
		<source id="Excel.CalloutFormat.Accent">
			<context kind="class">CalloutFormat</context>
			<name>Accent</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CalloutFormat.Angle-->
	<element type="property">
		<source id="Excel.CalloutFormat.Angle">
			<context kind="class">CalloutFormat</context>
			<name>Angle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CalloutFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalloutFormat.Application">
			<context kind="class">CalloutFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CalloutFormat.AutoAttach-->
	<element type="property">
		<source id="Excel.CalloutFormat.AutoAttach">
			<context kind="class">CalloutFormat</context>
			<name>AutoAttach</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CalloutFormat.AutoLength {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalloutFormat.AutoLength">
			<context kind="class">CalloutFormat</context>
			<name>AutoLength</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CalloutFormat.AutomaticLength-->
	<element type="method">
		<source id="Excel.CalloutFormat.AutomaticLength">
			<context kind="class">CalloutFormat</context>
			<name>AutomaticLength</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CalloutFormat.Border-->
	<element type="property">
		<source id="Excel.CalloutFormat.Border">
			<context kind="class">CalloutFormat</context>
			<name>Border</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CalloutFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalloutFormat.Creator">
			<context kind="class">CalloutFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CalloutFormat.CustomDrop-->
	<element type="method">
		<source id="Excel.CalloutFormat.CustomDrop">
			<context kind="class">CalloutFormat</context>
			<name>CustomDrop</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Drop</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CalloutFormat.CustomLength-->
	<element type="method">
		<source id="Excel.CalloutFormat.CustomLength">
			<context kind="class">CalloutFormat</context>
			<name>CustomLength</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CalloutFormat.Drop {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalloutFormat.Drop">
			<context kind="class">CalloutFormat</context>
			<name>Drop</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::CalloutFormat.DropType {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalloutFormat.DropType">
			<context kind="class">CalloutFormat</context>
			<name>DropType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CalloutFormat.Gap-->
	<element type="property">
		<source id="Excel.CalloutFormat.Gap">
			<context kind="class">CalloutFormat</context>
			<name>Gap</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::CalloutFormat.Length {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalloutFormat.Length">
			<context kind="class">CalloutFormat</context>
			<name>Length</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::CalloutFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CalloutFormat.Parent">
			<context kind="class">CalloutFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::CalloutFormat.PresetDrop-->
	<element type="method">
		<source id="Excel.CalloutFormat.PresetDrop">
			<context kind="class">CalloutFormat</context>
			<name>PresetDrop</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>DropType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CalloutFormat.Type-->
	<element type="property">
		<source id="Excel.CalloutFormat.Type">
			<context kind="class">CalloutFormat</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::CellFormat-->
	<element type="class">
		<source id="Excel.CellFormat">
			<name>CellFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::CellFormat.AddIndent-->
	<element type="property">
		<source id="Excel.CellFormat.AddIndent">
			<context kind="class">CellFormat</context>
			<name>AddIndent</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CellFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CellFormat.Application">
			<context kind="class">CellFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CellFormat.Borders {ReadOnly}-->
	<element type="property">
		<source id="Excel.CellFormat.Borders">
			<context kind="class">CellFormat</context>
			<name>Borders</name>
			<type>Borders</type>
		</source>
	</element>
	<!--method::CellFormat.Clear-->
	<element type="method">
		<source id="Excel.CellFormat.Clear">
			<context kind="class">CellFormat</context>
			<name>Clear</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CellFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CellFormat.Creator">
			<context kind="class">CellFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CellFormat.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.CellFormat.Font">
			<context kind="class">CellFormat</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::CellFormat.FormulaHidden-->
	<element type="property">
		<source id="Excel.CellFormat.FormulaHidden">
			<context kind="class">CellFormat</context>
			<name>FormulaHidden</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CellFormat.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.CellFormat.HorizontalAlignment">
			<context kind="class">CellFormat</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CellFormat.IndentLevel-->
	<element type="property">
		<source id="Excel.CellFormat.IndentLevel">
			<context kind="class">CellFormat</context>
			<name>IndentLevel</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CellFormat.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.CellFormat.Interior">
			<context kind="class">CellFormat</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::CellFormat.Locked-->
	<element type="property">
		<source id="Excel.CellFormat.Locked">
			<context kind="class">CellFormat</context>
			<name>Locked</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CellFormat.MergeCells-->
	<element type="property">
		<source id="Excel.CellFormat.MergeCells">
			<context kind="class">CellFormat</context>
			<name>MergeCells</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CellFormat.NumberFormat-->
	<element type="property">
		<source id="Excel.CellFormat.NumberFormat">
			<context kind="class">CellFormat</context>
			<name>NumberFormat</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CellFormat.NumberFormatLocal-->
	<element type="property">
		<source id="Excel.CellFormat.NumberFormatLocal">
			<context kind="class">CellFormat</context>
			<name>NumberFormatLocal</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CellFormat.Orientation-->
	<element type="property">
		<source id="Excel.CellFormat.Orientation">
			<context kind="class">CellFormat</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CellFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CellFormat.Parent">
			<context kind="class">CellFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CellFormat.ShrinkToFit-->
	<element type="property">
		<source id="Excel.CellFormat.ShrinkToFit">
			<context kind="class">CellFormat</context>
			<name>ShrinkToFit</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CellFormat.VerticalAlignment-->
	<element type="property">
		<source id="Excel.CellFormat.VerticalAlignment">
			<context kind="class">CellFormat</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CellFormat.WrapText-->
	<element type="property">
		<source id="Excel.CellFormat.WrapText">
			<context kind="class">CellFormat</context>
			<name>WrapText</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Characters-->
	<element type="class">
		<source id="Excel.Characters">
			<name>Characters</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Characters.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Characters.Application">
			<context kind="class">Characters</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Characters.Caption-->
	<element type="property">
		<source id="Excel.Characters.Caption">
			<context kind="class">Characters</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Characters.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Characters.Count">
			<context kind="class">Characters</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Characters.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Characters.Creator">
			<context kind="class">Characters</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Characters.Delete-->
	<element type="method">
		<source id="Excel.Characters.Delete">
			<context kind="class">Characters</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Characters.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Characters.Font">
			<context kind="class">Characters</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--method::Characters.Insert-->
	<element type="method">
		<source id="Excel.Characters.Insert">
			<context kind="class">Characters</context>
			<name>Insert</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>String</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Characters.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Characters.Parent">
			<context kind="class">Characters</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Characters.PhoneticCharacters-->
	<element type="property">
		<source id="Excel.Characters.PhoneticCharacters">
			<context kind="class">Characters</context>
			<name>PhoneticCharacters</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Characters.Text-->
	<element type="property">
		<source id="Excel.Characters.Text">
			<context kind="class">Characters</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::Chart-->
	<element type="class">
		<source id="Excel.Chart">
			<name>Chart</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Chart.Activate-->
	<element type="method">
		<source id="Excel.Chart.Activate">
			<context kind="class">Chart</context>
			<name>Activate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Chart.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Application">
			<context kind="class">Chart</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Chart.ApplyCustomType-->
	<element type="method">
		<source id="Excel.Chart.ApplyCustomType">
			<context kind="class">Chart</context>
			<name>ApplyCustomType</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>ChartType</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TypeName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.ApplyDataLabels-->
	<element type="method">
		<source id="Excel.Chart.ApplyDataLabels">
			<context kind="class">Chart</context>
			<name>ApplyDataLabels</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>LegendKey</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AutoText</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HasLeaderLines</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowSeriesName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowCategoryName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowValue</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowPercentage</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowBubbleSize</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Separator</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Arcs-->
	<element type="method">
		<source id="Excel.Chart.Arcs">
			<context kind="class">Chart</context>
			<name>Arcs</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Area3DGroup {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Area3DGroup">
			<context kind="class">Chart</context>
			<name>Area3DGroup</name>
			<type>ChartGroup</type>
		</source>
	</element>
	<!--method::Chart.AreaGroups-->
	<element type="method">
		<source id="Excel.Chart.AreaGroups">
			<context kind="class">Chart</context>
			<name>AreaGroups</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.AutoFormat-->
	<element type="method">
		<source id="Excel.Chart.AutoFormat">
			<context kind="class">Chart</context>
			<name>AutoFormat</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Gallery</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.AutoScaling-->
	<element type="property">
		<source id="Excel.Chart.AutoScaling">
			<context kind="class">Chart</context>
			<name>AutoScaling</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Chart.Axes-->
	<element type="method">
		<source id="Excel.Chart.Axes">
			<context kind="class">Chart</context>
			<name>Axes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>AxisGroup</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Bar3DGroup {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Bar3DGroup">
			<context kind="class">Chart</context>
			<name>Bar3DGroup</name>
			<type>ChartGroup</type>
		</source>
	</element>
	<!--method::Chart.BarGroups-->
	<element type="method">
		<source id="Excel.Chart.BarGroups">
			<context kind="class">Chart</context>
			<name>BarGroups</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.BarShape-->
	<element type="property">
		<source id="Excel.Chart.BarShape">
			<context kind="class">Chart</context>
			<name>BarShape</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Chart.BeforeDoubleClick-->
	<element type="method">
		<source id="Excel.Chart.BeforeDoubleClick">
			<context kind="class">Chart</context>
			<name>BeforeDoubleClick</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>ElementID</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.BeforeRightClick-->
	<element type="method">
		<source id="Excel.Chart.BeforeRightClick">
			<context kind="class">Chart</context>
			<name>BeforeRightClick</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Buttons-->
	<element type="method">
		<source id="Excel.Chart.Buttons">
			<context kind="class">Chart</context>
			<name>Buttons</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Calculate-->
	<element type="method">
		<source id="Excel.Chart.Calculate">
			<context kind="class">Chart</context>
			<name>Calculate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Chart.ChartArea {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.ChartArea">
			<context kind="class">Chart</context>
			<name>ChartArea</name>
			<type>ChartArea</type>
		</source>
	</element>
	<!--method::Chart.ChartGroups-->
	<element type="method">
		<source id="Excel.Chart.ChartGroups">
			<context kind="class">Chart</context>
			<name>ChartGroups</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.ChartObjects-->
	<element type="method">
		<source id="Excel.Chart.ChartObjects">
			<context kind="class">Chart</context>
			<name>ChartObjects</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.ChartTitle {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.ChartTitle">
			<context kind="class">Chart</context>
			<name>ChartTitle</name>
			<type>ChartTitle</type>
		</source>
	</element>
	<!--property::Chart.ChartType-->
	<element type="property">
		<source id="Excel.Chart.ChartType">
			<context kind="class">Chart</context>
			<name>ChartType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Chart.ChartWizard-->
	<element type="method">
		<source id="Excel.Chart.ChartWizard">
			<context kind="class">Chart</context>
			<name>ChartWizard</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Source</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Gallery</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Format</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PlotBy</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CategoryLabels</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SeriesLabels</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HasLegend</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Title</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CategoryTitle</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ValueTitle</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ExtraTitle</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.CheckBoxes-->
	<element type="method">
		<source id="Excel.Chart.CheckBoxes">
			<context kind="class">Chart</context>
			<name>CheckBoxes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.CheckSpelling-->
	<element type="method">
		<source id="Excel.Chart.CheckSpelling">
			<context kind="class">Chart</context>
			<name>CheckSpelling</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.CodeName {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.CodeName">
			<context kind="class">Chart</context>
			<name>CodeName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Chart.Column3DGroup {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Column3DGroup">
			<context kind="class">Chart</context>
			<name>Column3DGroup</name>
			<type>ChartGroup</type>
		</source>
	</element>
	<!--method::Chart.ColumnGroups-->
	<element type="method">
		<source id="Excel.Chart.ColumnGroups">
			<context kind="class">Chart</context>
			<name>ColumnGroups</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Copy-->
	<element type="method">
		<source id="Excel.Chart.Copy">
			<context kind="class">Chart</context>
			<name>Copy</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.CopyChartBuild-->
	<element type="method">
		<source id="Excel.Chart.CopyChartBuild">
			<context kind="class">Chart</context>
			<name>CopyChartBuild</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Chart.CopyPicture-->
	<element type="method">
		<source id="Excel.Chart.CopyPicture">
			<context kind="class">Chart</context>
			<name>CopyPicture</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Size</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Corners {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Corners">
			<context kind="class">Chart</context>
			<name>Corners</name>
			<type>Corners</type>
		</source>
	</element>
	<!--method::Chart.CreatePublisher-->
	<element type="method">
		<source id="Excel.Chart.CreatePublisher">
			<context kind="class">Chart</context>
			<name>CreatePublisher</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Edition</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Size</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ContainsPICT</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ContainsBIFF</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ContainsRTF</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ContainsVALU</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Creator">
			<context kind="class">Chart</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Chart.DataTable {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.DataTable">
			<context kind="class">Chart</context>
			<name>DataTable</name>
			<type>DataTable</type>
		</source>
	</element>
	<!--method::Chart.Deactivate-->
	<element type="method">
		<source id="Excel.Chart.Deactivate">
			<context kind="class">Chart</context>
			<name>Deactivate</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Chart.Delete-->
	<element type="method">
		<source id="Excel.Chart.Delete">
			<context kind="class">Chart</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Chart.DepthPercent-->
	<element type="property">
		<source id="Excel.Chart.DepthPercent">
			<context kind="class">Chart</context>
			<name>DepthPercent</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Chart.Deselect-->
	<element type="method">
		<source id="Excel.Chart.Deselect">
			<context kind="class">Chart</context>
			<name>Deselect</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Chart.DisplayBlanksAs-->
	<element type="property">
		<source id="Excel.Chart.DisplayBlanksAs">
			<context kind="class">Chart</context>
			<name>DisplayBlanksAs</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Chart.DoughnutGroups-->
	<element type="method">
		<source id="Excel.Chart.DoughnutGroups">
			<context kind="class">Chart</context>
			<name>DoughnutGroups</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.DragOver-->
	<element type="method">
		<source id="Excel.Chart.DragOver">
			<context kind="class">Chart</context>
			<name>DragOver</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Chart.DragPlot-->
	<element type="method">
		<source id="Excel.Chart.DragPlot">
			<context kind="class">Chart</context>
			<name>DragPlot</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Chart.DrawingObjects-->
	<element type="method">
		<source id="Excel.Chart.DrawingObjects">
			<context kind="class">Chart</context>
			<name>DrawingObjects</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Drawings-->
	<element type="method">
		<source id="Excel.Chart.Drawings">
			<context kind="class">Chart</context>
			<name>Drawings</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.DropDowns-->
	<element type="method">
		<source id="Excel.Chart.DropDowns">
			<context kind="class">Chart</context>
			<name>DropDowns</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Elevation-->
	<element type="property">
		<source id="Excel.Chart.Elevation">
			<context kind="class">Chart</context>
			<name>Elevation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Chart.Evaluate-->
	<element type="method">
		<source id="Excel.Chart.Evaluate">
			<context kind="class">Chart</context>
			<name>Evaluate</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Export-->
	<element type="method">
		<source id="Excel.Chart.Export">
			<context kind="class">Chart</context>
			<name>Export</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>FilterName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Interactive</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Floor {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Floor">
			<context kind="class">Chart</context>
			<name>Floor</name>
			<type>Floor</type>
		</source>
	</element>
	<!--property::Chart.GapDepth-->
	<element type="property">
		<source id="Excel.Chart.GapDepth">
			<context kind="class">Chart</context>
			<name>GapDepth</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Chart.GetChartElement-->
	<element type="method">
		<source id="Excel.Chart.GetChartElement">
			<context kind="class">Chart</context>
			<name>GetChartElement</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>x</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>y</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>ElementID</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.GroupBoxes-->
	<element type="method">
		<source id="Excel.Chart.GroupBoxes">
			<context kind="class">Chart</context>
			<name>GroupBoxes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.GroupObjects-->
	<element type="method">
		<source id="Excel.Chart.GroupObjects">
			<context kind="class">Chart</context>
			<name>GroupObjects</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.HasAxis-->
	<element type="property">
		<source id="Excel.Chart.HasAxis">
			<context kind="class">Chart</context>
			<name>HasAxis</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.HasDataTable-->
	<element type="property">
		<source id="Excel.Chart.HasDataTable">
			<context kind="class">Chart</context>
			<name>HasDataTable</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Chart.HasLegend-->
	<element type="property">
		<source id="Excel.Chart.HasLegend">
			<context kind="class">Chart</context>
			<name>HasLegend</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Chart.HasPivotFields-->
	<element type="property">
		<source id="Excel.Chart.HasPivotFields">
			<context kind="class">Chart</context>
			<name>HasPivotFields</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Chart.HasTitle-->
	<element type="property">
		<source id="Excel.Chart.HasTitle">
			<context kind="class">Chart</context>
			<name>HasTitle</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Chart.HeightPercent-->
	<element type="property">
		<source id="Excel.Chart.HeightPercent">
			<context kind="class">Chart</context>
			<name>HeightPercent</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Chart.Hyperlinks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Hyperlinks">
			<context kind="class">Chart</context>
			<name>Hyperlinks</name>
			<type>Hyperlinks</type>
		</source>
	</element>
	<!--property::Chart.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Index">
			<context kind="class">Chart</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Chart.Labels-->
	<element type="method">
		<source id="Excel.Chart.Labels">
			<context kind="class">Chart</context>
			<name>Labels</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Legend {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Legend">
			<context kind="class">Chart</context>
			<name>Legend</name>
			<type>Legend</type>
		</source>
	</element>
	<!--property::Chart.Line3DGroup {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Line3DGroup">
			<context kind="class">Chart</context>
			<name>Line3DGroup</name>
			<type>ChartGroup</type>
		</source>
	</element>
	<!--method::Chart.LineGroups-->
	<element type="method">
		<source id="Excel.Chart.LineGroups">
			<context kind="class">Chart</context>
			<name>LineGroups</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Lines-->
	<element type="method">
		<source id="Excel.Chart.Lines">
			<context kind="class">Chart</context>
			<name>Lines</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.ListBoxes-->
	<element type="method">
		<source id="Excel.Chart.ListBoxes">
			<context kind="class">Chart</context>
			<name>ListBoxes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Location-->
	<element type="method">
		<source id="Excel.Chart.Location">
			<context kind="class">Chart</context>
			<name>Location</name>
			<type>Chart</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Where</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.MailEnvelope {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.MailEnvelope">
			<context kind="class">Chart</context>
			<name>MailEnvelope</name>
			<type>MsoEnvelope</type>
		</source>
	</element>
	<!--method::Chart.MouseDown-->
	<element type="method">
		<source id="Excel.Chart.MouseDown">
			<context kind="class">Chart</context>
			<name>MouseDown</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Button</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Shift</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>x</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>y</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.MouseMove-->
	<element type="method">
		<source id="Excel.Chart.MouseMove">
			<context kind="class">Chart</context>
			<name>MouseMove</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Button</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Shift</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>x</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>y</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.MouseUp-->
	<element type="method">
		<source id="Excel.Chart.MouseUp">
			<context kind="class">Chart</context>
			<name>MouseUp</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Button</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Shift</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>x</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>y</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Move-->
	<element type="method">
		<source id="Excel.Chart.Move">
			<context kind="class">Chart</context>
			<name>Move</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Name-->
	<element type="property">
		<source id="Excel.Chart.Name">
			<context kind="class">Chart</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Chart.Next {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Next">
			<context kind="class">Chart</context>
			<name>Next</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Chart.OLEObjects-->
	<element type="method">
		<source id="Excel.Chart.OLEObjects">
			<context kind="class">Chart</context>
			<name>OLEObjects</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.OnDoubleClick-->
	<element type="property">
		<source id="Excel.Chart.OnDoubleClick">
			<context kind="class">Chart</context>
			<name>OnDoubleClick</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Chart.OnSheetActivate-->
	<element type="property">
		<source id="Excel.Chart.OnSheetActivate">
			<context kind="class">Chart</context>
			<name>OnSheetActivate</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Chart.OnSheetDeactivate-->
	<element type="property">
		<source id="Excel.Chart.OnSheetDeactivate">
			<context kind="class">Chart</context>
			<name>OnSheetDeactivate</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Chart.OptionButtons-->
	<element type="method">
		<source id="Excel.Chart.OptionButtons">
			<context kind="class">Chart</context>
			<name>OptionButtons</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Ovals-->
	<element type="method">
		<source id="Excel.Chart.Ovals">
			<context kind="class">Chart</context>
			<name>Ovals</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.PageSetup {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.PageSetup">
			<context kind="class">Chart</context>
			<name>PageSetup</name>
			<type>PageSetup</type>
		</source>
	</element>
	<!--property::Chart.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Parent">
			<context kind="class">Chart</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Chart.Paste-->
	<element type="method">
		<source id="Excel.Chart.Paste">
			<context kind="class">Chart</context>
			<name>Paste</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Perspective-->
	<element type="property">
		<source id="Excel.Chart.Perspective">
			<context kind="class">Chart</context>
			<name>Perspective</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Chart.Pictures-->
	<element type="method">
		<source id="Excel.Chart.Pictures">
			<context kind="class">Chart</context>
			<name>Pictures</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Pie3DGroup {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Pie3DGroup">
			<context kind="class">Chart</context>
			<name>Pie3DGroup</name>
			<type>ChartGroup</type>
		</source>
	</element>
	<!--method::Chart.PieGroups-->
	<element type="method">
		<source id="Excel.Chart.PieGroups">
			<context kind="class">Chart</context>
			<name>PieGroups</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.PivotLayout {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.PivotLayout">
			<context kind="class">Chart</context>
			<name>PivotLayout</name>
			<type>PivotLayout</type>
		</source>
	</element>
	<!--property::Chart.PlotArea {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.PlotArea">
			<context kind="class">Chart</context>
			<name>PlotArea</name>
			<type>PlotArea</type>
		</source>
	</element>
	<!--property::Chart.PlotBy-->
	<element type="property">
		<source id="Excel.Chart.PlotBy">
			<context kind="class">Chart</context>
			<name>PlotBy</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Chart.PlotVisibleOnly-->
	<element type="property">
		<source id="Excel.Chart.PlotVisibleOnly">
			<context kind="class">Chart</context>
			<name>PlotVisibleOnly</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Chart.Previous {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Previous">
			<context kind="class">Chart</context>
			<name>Previous</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Chart.PrintOut-->
	<element type="method">
		<source id="Excel.Chart.PrintOut">
			<context kind="class">Chart</context>
			<name>PrintOut</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>From</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>To</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Copies</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Preview</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ActivePrinter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrintToFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Collate</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrToFileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.PrintPreview-->
	<element type="method">
		<source id="Excel.Chart.PrintPreview">
			<context kind="class">Chart</context>
			<name>PrintPreview</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>EnableChanges</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Protect-->
	<element type="method">
		<source id="Excel.Chart.Protect">
			<context kind="class">Chart</context>
			<name>Protect</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DrawingObjects</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Contents</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Scenarios</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>UserInterfaceOnly</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.ProtectContents {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.ProtectContents">
			<context kind="class">Chart</context>
			<name>ProtectContents</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Chart.ProtectData-->
	<element type="property">
		<source id="Excel.Chart.ProtectData">
			<context kind="class">Chart</context>
			<name>ProtectData</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Chart.ProtectDrawingObjects {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.ProtectDrawingObjects">
			<context kind="class">Chart</context>
			<name>ProtectDrawingObjects</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Chart.ProtectFormatting-->
	<element type="property">
		<source id="Excel.Chart.ProtectFormatting">
			<context kind="class">Chart</context>
			<name>ProtectFormatting</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Chart.ProtectGoalSeek-->
	<element type="property">
		<source id="Excel.Chart.ProtectGoalSeek">
			<context kind="class">Chart</context>
			<name>ProtectGoalSeek</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Chart.ProtectionMode {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.ProtectionMode">
			<context kind="class">Chart</context>
			<name>ProtectionMode</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Chart.ProtectSelection-->
	<element type="property">
		<source id="Excel.Chart.ProtectSelection">
			<context kind="class">Chart</context>
			<name>ProtectSelection</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Chart.RadarGroups-->
	<element type="method">
		<source id="Excel.Chart.RadarGroups">
			<context kind="class">Chart</context>
			<name>RadarGroups</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Rectangles-->
	<element type="method">
		<source id="Excel.Chart.Rectangles">
			<context kind="class">Chart</context>
			<name>Rectangles</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Refresh-->
	<element type="method">
		<source id="Excel.Chart.Refresh">
			<context kind="class">Chart</context>
			<name>Refresh</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Chart.Resize-->
	<element type="method">
		<source id="Excel.Chart.Resize">
			<context kind="class">Chart</context>
			<name>Resize</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Chart.RightAngleAxes-->
	<element type="property">
		<source id="Excel.Chart.RightAngleAxes">
			<context kind="class">Chart</context>
			<name>RightAngleAxes</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Chart.Rotation-->
	<element type="property">
		<source id="Excel.Chart.Rotation">
			<context kind="class">Chart</context>
			<name>Rotation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Chart.SaveAs-->
	<element type="method">
		<source id="Excel.Chart.SaveAs">
			<context kind="class">Chart</context>
			<name>SaveAs</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>FileFormat</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>WriteResPassword</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReadOnlyRecommended</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CreateBackup</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AddToMru</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TextCodepage</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TextVisualLayout</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Local</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Scripts {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Scripts">
			<context kind="class">Chart</context>
			<name>Scripts</name>
			<type>Scripts</type>
		</source>
	</element>
	<!--method::Chart.ScrollBars-->
	<element type="method">
		<source id="Excel.Chart.ScrollBars">
			<context kind="class">Chart</context>
			<name>ScrollBars</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.Select-->
	<element type="method">
		<source id="Excel.Chart.Select">
			<context kind="class">Chart</context>
			<name>Select</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.SeriesChange-->
	<element type="method">
		<source id="Excel.Chart.SeriesChange">
			<context kind="class">Chart</context>
			<name>SeriesChange</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>SeriesIndex</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>PointIndex</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.SeriesCollection-->
	<element type="method">
		<source id="Excel.Chart.SeriesCollection">
			<context kind="class">Chart</context>
			<name>SeriesCollection</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.SetBackgroundPicture-->
	<element type="method">
		<source id="Excel.Chart.SetBackgroundPicture">
			<context kind="class">Chart</context>
			<name>SetBackgroundPicture</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Chart.SetSourceData-->
	<element type="method">
		<source id="Excel.Chart.SetSourceData">
			<context kind="class">Chart</context>
			<name>SetSourceData</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Source</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PlotBy</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Shapes {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Shapes">
			<context kind="class">Chart</context>
			<name>Shapes</name>
			<type>Shapes</type>
		</source>
	</element>
	<!--property::Chart.ShowWindow-->
	<element type="property">
		<source id="Excel.Chart.ShowWindow">
			<context kind="class">Chart</context>
			<name>ShowWindow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Chart.SizeWithWindow-->
	<element type="property">
		<source id="Excel.Chart.SizeWithWindow">
			<context kind="class">Chart</context>
			<name>SizeWithWindow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Chart.Spinners-->
	<element type="method">
		<source id="Excel.Chart.Spinners">
			<context kind="class">Chart</context>
			<name>Spinners</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.SubType-->
	<element type="property">
		<source id="Excel.Chart.SubType">
			<context kind="class">Chart</context>
			<name>SubType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Chart.SurfaceGroup {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.SurfaceGroup">
			<context kind="class">Chart</context>
			<name>SurfaceGroup</name>
			<type>ChartGroup</type>
		</source>
	</element>
	<!--property::Chart.Tab {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Tab">
			<context kind="class">Chart</context>
			<name>Tab</name>
			<type>Tab</type>
		</source>
	</element>
	<!--method::Chart.TextBoxes-->
	<element type="method">
		<source id="Excel.Chart.TextBoxes">
			<context kind="class">Chart</context>
			<name>TextBoxes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Type-->
	<element type="property">
		<source id="Excel.Chart.Type">
			<context kind="class">Chart</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Chart.Unprotect-->
	<element type="method">
		<source id="Excel.Chart.Unprotect">
			<context kind="class">Chart</context>
			<name>Unprotect</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Chart.Visible-->
	<element type="property">
		<source id="Excel.Chart.Visible">
			<context kind="class">Chart</context>
			<name>Visible</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Chart.Walls {ReadOnly}-->
	<element type="property">
		<source id="Excel.Chart.Walls">
			<context kind="class">Chart</context>
			<name>Walls</name>
			<type>Walls</type>
		</source>
	</element>
	<!--property::Chart.WallsAndGridlines2D-->
	<element type="property">
		<source id="Excel.Chart.WallsAndGridlines2D">
			<context kind="class">Chart</context>
			<name>WallsAndGridlines2D</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Chart.XYGroups-->
	<element type="method">
		<source id="Excel.Chart.XYGroups">
			<context kind="class">Chart</context>
			<name>XYGroups</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::ChartArea-->
	<element type="class">
		<source id="Excel.ChartArea">
			<name>ChartArea</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ChartArea.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartArea.Application">
			<context kind="class">ChartArea</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ChartArea.AutoScaleFont-->
	<element type="property">
		<source id="Excel.ChartArea.AutoScaleFont">
			<context kind="class">ChartArea</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartArea.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartArea.Border">
			<context kind="class">ChartArea</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::ChartArea.Clear-->
	<element type="method">
		<source id="Excel.ChartArea.Clear">
			<context kind="class">ChartArea</context>
			<name>Clear</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ChartArea.ClearContents-->
	<element type="method">
		<source id="Excel.ChartArea.ClearContents">
			<context kind="class">ChartArea</context>
			<name>ClearContents</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ChartArea.ClearFormats-->
	<element type="method">
		<source id="Excel.ChartArea.ClearFormats">
			<context kind="class">ChartArea</context>
			<name>ClearFormats</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ChartArea.Copy-->
	<element type="method">
		<source id="Excel.ChartArea.Copy">
			<context kind="class">ChartArea</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartArea.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartArea.Creator">
			<context kind="class">ChartArea</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartArea.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartArea.Fill">
			<context kind="class">ChartArea</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::ChartArea.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartArea.Font">
			<context kind="class">ChartArea</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::ChartArea.Height-->
	<element type="property">
		<source id="Excel.ChartArea.Height">
			<context kind="class">ChartArea</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ChartArea.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartArea.Interior">
			<context kind="class">ChartArea</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::ChartArea.Left-->
	<element type="property">
		<source id="Excel.ChartArea.Left">
			<context kind="class">ChartArea</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ChartArea.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartArea.Name">
			<context kind="class">ChartArea</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ChartArea.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartArea.Parent">
			<context kind="class">ChartArea</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::ChartArea.Select-->
	<element type="method">
		<source id="Excel.ChartArea.Select">
			<context kind="class">ChartArea</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartArea.Shadow-->
	<element type="property">
		<source id="Excel.ChartArea.Shadow">
			<context kind="class">ChartArea</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartArea.Top-->
	<element type="property">
		<source id="Excel.ChartArea.Top">
			<context kind="class">ChartArea</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ChartArea.Width-->
	<element type="property">
		<source id="Excel.ChartArea.Width">
			<context kind="class">ChartArea</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--Class::ChartColorFormat-->
	<element type="class">
		<source id="Excel.ChartColorFormat">
			<name>ChartColorFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ChartColorFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartColorFormat.Application">
			<context kind="class">ChartColorFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ChartColorFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartColorFormat.Creator">
			<context kind="class">ChartColorFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartColorFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartColorFormat.Parent">
			<context kind="class">ChartColorFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ChartColorFormat.RGB {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartColorFormat.RGB">
			<context kind="class">ChartColorFormat</context>
			<name>RGB</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartColorFormat.SchemeColor-->
	<element type="property">
		<source id="Excel.ChartColorFormat.SchemeColor">
			<context kind="class">ChartColorFormat</context>
			<name>SchemeColor</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartColorFormat.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartColorFormat.Type">
			<context kind="class">ChartColorFormat</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ChartFillFormat-->
	<element type="class">
		<source id="Excel.ChartFillFormat">
			<name>ChartFillFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ChartFillFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.Application">
			<context kind="class">ChartFillFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ChartFillFormat.BackColor {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.BackColor">
			<context kind="class">ChartFillFormat</context>
			<name>BackColor</name>
			<type>ChartColorFormat</type>
		</source>
	</element>
	<!--property::ChartFillFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.Creator">
			<context kind="class">ChartFillFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartFillFormat.ForeColor {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.ForeColor">
			<context kind="class">ChartFillFormat</context>
			<name>ForeColor</name>
			<type>ChartColorFormat</type>
		</source>
	</element>
	<!--property::ChartFillFormat.GradientColorType {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.GradientColorType">
			<context kind="class">ChartFillFormat</context>
			<name>GradientColorType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartFillFormat.GradientDegree {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.GradientDegree">
			<context kind="class">ChartFillFormat</context>
			<name>GradientDegree</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::ChartFillFormat.GradientStyle {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.GradientStyle">
			<context kind="class">ChartFillFormat</context>
			<name>GradientStyle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartFillFormat.GradientVariant {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.GradientVariant">
			<context kind="class">ChartFillFormat</context>
			<name>GradientVariant</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ChartFillFormat.OneColorGradient-->
	<element type="method">
		<source id="Excel.ChartFillFormat.OneColorGradient">
			<context kind="class">ChartFillFormat</context>
			<name>OneColorGradient</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Style</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Variant</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Degree</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ChartFillFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.Parent">
			<context kind="class">ChartFillFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ChartFillFormat.Pattern {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.Pattern">
			<context kind="class">ChartFillFormat</context>
			<name>Pattern</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ChartFillFormat.Patterned-->
	<element type="method">
		<source id="Excel.ChartFillFormat.Patterned">
			<context kind="class">ChartFillFormat</context>
			<name>Patterned</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Pattern</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ChartFillFormat.PresetGradient-->
	<element type="method">
		<source id="Excel.ChartFillFormat.PresetGradient">
			<context kind="class">ChartFillFormat</context>
			<name>PresetGradient</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Style</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Variant</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>PresetGradientType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ChartFillFormat.PresetGradientType {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.PresetGradientType">
			<context kind="class">ChartFillFormat</context>
			<name>PresetGradientType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartFillFormat.PresetTexture {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.PresetTexture">
			<context kind="class">ChartFillFormat</context>
			<name>PresetTexture</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ChartFillFormat.PresetTextured-->
	<element type="method">
		<source id="Excel.ChartFillFormat.PresetTextured">
			<context kind="class">ChartFillFormat</context>
			<name>PresetTextured</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>PresetTexture</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ChartFillFormat.Solid-->
	<element type="method">
		<source id="Excel.ChartFillFormat.Solid">
			<context kind="class">ChartFillFormat</context>
			<name>Solid</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ChartFillFormat.TextureName {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.TextureName">
			<context kind="class">ChartFillFormat</context>
			<name>TextureName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ChartFillFormat.TextureType {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.TextureType">
			<context kind="class">ChartFillFormat</context>
			<name>TextureType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ChartFillFormat.TwoColorGradient-->
	<element type="method">
		<source id="Excel.ChartFillFormat.TwoColorGradient">
			<context kind="class">ChartFillFormat</context>
			<name>TwoColorGradient</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Style</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Variant</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ChartFillFormat.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartFillFormat.Type">
			<context kind="class">ChartFillFormat</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ChartFillFormat.UserPicture-->
	<element type="method">
		<source id="Excel.ChartFillFormat.UserPicture">
			<context kind="class">ChartFillFormat</context>
			<name>UserPicture</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>PictureFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PictureFormat</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PictureStackUnit</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PicturePlacement</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ChartFillFormat.UserTextured-->
	<element type="method">
		<source id="Excel.ChartFillFormat.UserTextured">
			<context kind="class">ChartFillFormat</context>
			<name>UserTextured</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>TextureFile</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ChartFillFormat.Visible-->
	<element type="property">
		<source id="Excel.ChartFillFormat.Visible">
			<context kind="class">ChartFillFormat</context>
			<name>Visible</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ChartGroup-->
	<element type="class">
		<source id="Excel.ChartGroup">
			<name>ChartGroup</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ChartGroup.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroup.Application">
			<context kind="class">ChartGroup</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ChartGroup.AxisGroup-->
	<element type="property">
		<source id="Excel.ChartGroup.AxisGroup">
			<context kind="class">ChartGroup</context>
			<name>AxisGroup</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartGroup.BubbleScale-->
	<element type="property">
		<source id="Excel.ChartGroup.BubbleScale">
			<context kind="class">ChartGroup</context>
			<name>BubbleScale</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartGroup.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroup.Creator">
			<context kind="class">ChartGroup</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartGroup.DoughnutHoleSize-->
	<element type="property">
		<source id="Excel.ChartGroup.DoughnutHoleSize">
			<context kind="class">ChartGroup</context>
			<name>DoughnutHoleSize</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartGroup.DownBars {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroup.DownBars">
			<context kind="class">ChartGroup</context>
			<name>DownBars</name>
			<type>DownBars</type>
		</source>
	</element>
	<!--property::ChartGroup.DropLines {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroup.DropLines">
			<context kind="class">ChartGroup</context>
			<name>DropLines</name>
			<type>DropLines</type>
		</source>
	</element>
	<!--property::ChartGroup.FirstSliceAngle-->
	<element type="property">
		<source id="Excel.ChartGroup.FirstSliceAngle">
			<context kind="class">ChartGroup</context>
			<name>FirstSliceAngle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartGroup.GapWidth-->
	<element type="property">
		<source id="Excel.ChartGroup.GapWidth">
			<context kind="class">ChartGroup</context>
			<name>GapWidth</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartGroup.Has3DShading-->
	<element type="property">
		<source id="Excel.ChartGroup.Has3DShading">
			<context kind="class">ChartGroup</context>
			<name>Has3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartGroup.HasDropLines-->
	<element type="property">
		<source id="Excel.ChartGroup.HasDropLines">
			<context kind="class">ChartGroup</context>
			<name>HasDropLines</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartGroup.HasHiLoLines-->
	<element type="property">
		<source id="Excel.ChartGroup.HasHiLoLines">
			<context kind="class">ChartGroup</context>
			<name>HasHiLoLines</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartGroup.HasRadarAxisLabels-->
	<element type="property">
		<source id="Excel.ChartGroup.HasRadarAxisLabels">
			<context kind="class">ChartGroup</context>
			<name>HasRadarAxisLabels</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartGroup.HasSeriesLines-->
	<element type="property">
		<source id="Excel.ChartGroup.HasSeriesLines">
			<context kind="class">ChartGroup</context>
			<name>HasSeriesLines</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartGroup.HasUpDownBars-->
	<element type="property">
		<source id="Excel.ChartGroup.HasUpDownBars">
			<context kind="class">ChartGroup</context>
			<name>HasUpDownBars</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartGroup.HiLoLines {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroup.HiLoLines">
			<context kind="class">ChartGroup</context>
			<name>HiLoLines</name>
			<type>HiLoLines</type>
		</source>
	</element>
	<!--property::ChartGroup.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroup.Index">
			<context kind="class">ChartGroup</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartGroup.Overlap-->
	<element type="property">
		<source id="Excel.ChartGroup.Overlap">
			<context kind="class">ChartGroup</context>
			<name>Overlap</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartGroup.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroup.Parent">
			<context kind="class">ChartGroup</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ChartGroup.RadarAxisLabels {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroup.RadarAxisLabels">
			<context kind="class">ChartGroup</context>
			<name>RadarAxisLabels</name>
			<type>TickLabels</type>
		</source>
	</element>
	<!--property::ChartGroup.SecondPlotSize-->
	<element type="property">
		<source id="Excel.ChartGroup.SecondPlotSize">
			<context kind="class">ChartGroup</context>
			<name>SecondPlotSize</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ChartGroup.SeriesCollection-->
	<element type="method">
		<source id="Excel.ChartGroup.SeriesCollection">
			<context kind="class">ChartGroup</context>
			<name>SeriesCollection</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ChartGroup.SeriesLines {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroup.SeriesLines">
			<context kind="class">ChartGroup</context>
			<name>SeriesLines</name>
			<type>SeriesLines</type>
		</source>
	</element>
	<!--property::ChartGroup.ShowNegativeBubbles-->
	<element type="property">
		<source id="Excel.ChartGroup.ShowNegativeBubbles">
			<context kind="class">ChartGroup</context>
			<name>ShowNegativeBubbles</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartGroup.SizeRepresents-->
	<element type="property">
		<source id="Excel.ChartGroup.SizeRepresents">
			<context kind="class">ChartGroup</context>
			<name>SizeRepresents</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartGroup.SplitType-->
	<element type="property">
		<source id="Excel.ChartGroup.SplitType">
			<context kind="class">ChartGroup</context>
			<name>SplitType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartGroup.SplitValue-->
	<element type="property">
		<source id="Excel.ChartGroup.SplitValue">
			<context kind="class">ChartGroup</context>
			<name>SplitValue</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartGroup.SubType-->
	<element type="property">
		<source id="Excel.ChartGroup.SubType">
			<context kind="class">ChartGroup</context>
			<name>SubType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartGroup.Type-->
	<element type="property">
		<source id="Excel.ChartGroup.Type">
			<context kind="class">ChartGroup</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartGroup.UpBars {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroup.UpBars">
			<context kind="class">ChartGroup</context>
			<name>UpBars</name>
			<type>UpBars</type>
		</source>
	</element>
	<!--property::ChartGroup.VaryByCategories-->
	<element type="property">
		<source id="Excel.ChartGroup.VaryByCategories">
			<context kind="class">ChartGroup</context>
			<name>VaryByCategories</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::ChartGroups-->
	<element type="class">
		<source id="Excel.ChartGroups">
			<name>ChartGroups</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ChartGroups.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroups.Application">
			<context kind="class">ChartGroups</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ChartGroups.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroups.Count">
			<context kind="class">ChartGroups</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartGroups.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroups.Creator">
			<context kind="class">ChartGroups</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ChartGroups.Item-->
	<element type="method">
		<source id="Excel.ChartGroups.Item">
			<context kind="class">ChartGroups</context>
			<name>Item</name>
			<type>ChartGroup</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ChartGroups.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartGroups.Parent">
			<context kind="class">ChartGroups</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::ChartObject-->
	<element type="class">
		<source id="Excel.ChartObject">
			<name>ChartObject</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ChartObject.Activate-->
	<element type="method">
		<source id="Excel.ChartObject.Activate">
			<context kind="class">ChartObject</context>
			<name>Activate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartObject.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObject.Application">
			<context kind="class">ChartObject</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ChartObject.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObject.Border">
			<context kind="class">ChartObject</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::ChartObject.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObject.BottomRightCell">
			<context kind="class">ChartObject</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::ChartObject.BringToFront-->
	<element type="method">
		<source id="Excel.ChartObject.BringToFront">
			<context kind="class">ChartObject</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartObject.Chart {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObject.Chart">
			<context kind="class">ChartObject</context>
			<name>Chart</name>
			<type>Chart</type>
		</source>
	</element>
	<!--method::ChartObject.Copy-->
	<element type="method">
		<source id="Excel.ChartObject.Copy">
			<context kind="class">ChartObject</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ChartObject.CopyPicture-->
	<element type="method">
		<source id="Excel.ChartObject.CopyPicture">
			<context kind="class">ChartObject</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ChartObject.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObject.Creator">
			<context kind="class">ChartObject</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ChartObject.Cut-->
	<element type="method">
		<source id="Excel.ChartObject.Cut">
			<context kind="class">ChartObject</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ChartObject.Delete-->
	<element type="method">
		<source id="Excel.ChartObject.Delete">
			<context kind="class">ChartObject</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ChartObject.Duplicate-->
	<element type="method">
		<source id="Excel.ChartObject.Duplicate">
			<context kind="class">ChartObject</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ChartObject.Enabled-->
	<element type="property">
		<source id="Excel.ChartObject.Enabled">
			<context kind="class">ChartObject</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartObject.Height-->
	<element type="property">
		<source id="Excel.ChartObject.Height">
			<context kind="class">ChartObject</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ChartObject.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObject.Index">
			<context kind="class">ChartObject</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartObject.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObject.Interior">
			<context kind="class">ChartObject</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::ChartObject.Left-->
	<element type="property">
		<source id="Excel.ChartObject.Left">
			<context kind="class">ChartObject</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ChartObject.Locked-->
	<element type="property">
		<source id="Excel.ChartObject.Locked">
			<context kind="class">ChartObject</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartObject.Name-->
	<element type="property">
		<source id="Excel.ChartObject.Name">
			<context kind="class">ChartObject</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ChartObject.OnAction-->
	<element type="property">
		<source id="Excel.ChartObject.OnAction">
			<context kind="class">ChartObject</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ChartObject.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObject.Parent">
			<context kind="class">ChartObject</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ChartObject.Placement-->
	<element type="property">
		<source id="Excel.ChartObject.Placement">
			<context kind="class">ChartObject</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartObject.PrintObject-->
	<element type="property">
		<source id="Excel.ChartObject.PrintObject">
			<context kind="class">ChartObject</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartObject.ProtectChartObject-->
	<element type="property">
		<source id="Excel.ChartObject.ProtectChartObject">
			<context kind="class">ChartObject</context>
			<name>ProtectChartObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartObject.RoundedCorners-->
	<element type="property">
		<source id="Excel.ChartObject.RoundedCorners">
			<context kind="class">ChartObject</context>
			<name>RoundedCorners</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ChartObject.Select-->
	<element type="method">
		<source id="Excel.ChartObject.Select">
			<context kind="class">ChartObject</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ChartObject.SendToBack-->
	<element type="method">
		<source id="Excel.ChartObject.SendToBack">
			<context kind="class">ChartObject</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartObject.Shadow-->
	<element type="property">
		<source id="Excel.ChartObject.Shadow">
			<context kind="class">ChartObject</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartObject.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObject.ShapeRange">
			<context kind="class">ChartObject</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::ChartObject.Top-->
	<element type="property">
		<source id="Excel.ChartObject.Top">
			<context kind="class">ChartObject</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ChartObject.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObject.TopLeftCell">
			<context kind="class">ChartObject</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::ChartObject.Visible-->
	<element type="property">
		<source id="Excel.ChartObject.Visible">
			<context kind="class">ChartObject</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartObject.Width-->
	<element type="property">
		<source id="Excel.ChartObject.Width">
			<context kind="class">ChartObject</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ChartObject.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObject.ZOrder">
			<context kind="class">ChartObject</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ChartObjects-->
	<element type="class">
		<source id="Excel.ChartObjects">
			<name>ChartObjects</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ChartObjects.Add-->
	<element type="method">
		<source id="Excel.ChartObjects.Add">
			<context kind="class">ChartObjects</context>
			<name>Add</name>
			<type>ChartObject</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ChartObjects.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObjects.Application">
			<context kind="class">ChartObjects</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ChartObjects.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObjects.Border">
			<context kind="class">ChartObjects</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::ChartObjects.BringToFront-->
	<element type="method">
		<source id="Excel.ChartObjects.BringToFront">
			<context kind="class">ChartObjects</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ChartObjects.Copy-->
	<element type="method">
		<source id="Excel.ChartObjects.Copy">
			<context kind="class">ChartObjects</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ChartObjects.CopyPicture-->
	<element type="method">
		<source id="Excel.ChartObjects.CopyPicture">
			<context kind="class">ChartObjects</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ChartObjects.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObjects.Count">
			<context kind="class">ChartObjects</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ChartObjects.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObjects.Creator">
			<context kind="class">ChartObjects</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ChartObjects.Cut-->
	<element type="method">
		<source id="Excel.ChartObjects.Cut">
			<context kind="class">ChartObjects</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ChartObjects.Delete-->
	<element type="method">
		<source id="Excel.ChartObjects.Delete">
			<context kind="class">ChartObjects</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ChartObjects.Duplicate-->
	<element type="method">
		<source id="Excel.ChartObjects.Duplicate">
			<context kind="class">ChartObjects</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ChartObjects.Enabled-->
	<element type="property">
		<source id="Excel.ChartObjects.Enabled">
			<context kind="class">ChartObjects</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ChartObjects.Group-->
	<element type="method">
		<source id="Excel.ChartObjects.Group">
			<context kind="class">ChartObjects</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::ChartObjects.Height-->
	<element type="property">
		<source id="Excel.ChartObjects.Height">
			<context kind="class">ChartObjects</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ChartObjects.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObjects.Interior">
			<context kind="class">ChartObjects</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::ChartObjects.Item-->
	<element type="method">
		<source id="Excel.ChartObjects.Item">
			<context kind="class">ChartObjects</context>
			<name>Item</name>
			<type>ChartObject</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ChartObjects.Left-->
	<element type="property">
		<source id="Excel.ChartObjects.Left">
			<context kind="class">ChartObjects</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ChartObjects.Locked-->
	<element type="property">
		<source id="Excel.ChartObjects.Locked">
			<context kind="class">ChartObjects</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartObjects.OnAction-->
	<element type="property">
		<source id="Excel.ChartObjects.OnAction">
			<context kind="class">ChartObjects</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ChartObjects.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObjects.Parent">
			<context kind="class">ChartObjects</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ChartObjects.Placement-->
	<element type="property">
		<source id="Excel.ChartObjects.Placement">
			<context kind="class">ChartObjects</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartObjects.PrintObject-->
	<element type="property">
		<source id="Excel.ChartObjects.PrintObject">
			<context kind="class">ChartObjects</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartObjects.RoundedCorners-->
	<element type="property">
		<source id="Excel.ChartObjects.RoundedCorners">
			<context kind="class">ChartObjects</context>
			<name>RoundedCorners</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ChartObjects.Select-->
	<element type="method">
		<source id="Excel.ChartObjects.Select">
			<context kind="class">ChartObjects</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ChartObjects.SendToBack-->
	<element type="method">
		<source id="Excel.ChartObjects.SendToBack">
			<context kind="class">ChartObjects</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartObjects.Shadow-->
	<element type="property">
		<source id="Excel.ChartObjects.Shadow">
			<context kind="class">ChartObjects</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartObjects.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartObjects.ShapeRange">
			<context kind="class">ChartObjects</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::ChartObjects.Top-->
	<element type="property">
		<source id="Excel.ChartObjects.Top">
			<context kind="class">ChartObjects</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ChartObjects.Visible-->
	<element type="property">
		<source id="Excel.ChartObjects.Visible">
			<context kind="class">ChartObjects</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartObjects.Width-->
	<element type="property">
		<source id="Excel.ChartObjects.Width">
			<context kind="class">ChartObjects</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--Class::Charts-->
	<element type="class">
		<source id="Excel.Charts">
			<name>Charts</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Charts.Add-->
	<element type="method">
		<source id="Excel.Charts.Add">
			<context kind="class">Charts</context>
			<name>Add</name>
			<type>Chart</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Count</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Charts.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Charts.Application">
			<context kind="class">Charts</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Charts.Copy-->
	<element type="method">
		<source id="Excel.Charts.Copy">
			<context kind="class">Charts</context>
			<name>Copy</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Charts.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Charts.Count">
			<context kind="class">Charts</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Charts.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Charts.Creator">
			<context kind="class">Charts</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Charts.Delete-->
	<element type="method">
		<source id="Excel.Charts.Delete">
			<context kind="class">Charts</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Charts.HPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Charts.HPageBreaks">
			<context kind="class">Charts</context>
			<name>HPageBreaks</name>
			<type>HPageBreaks</type>
		</source>
	</element>
	<!--property::Charts.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Charts.Item">
			<context kind="class">Charts</context>
			<name default="true">Item</name>
			<type>Chart</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Charts.Move-->
	<element type="method">
		<source id="Excel.Charts.Move">
			<context kind="class">Charts</context>
			<name>Move</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Charts.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Charts.Parent">
			<context kind="class">Charts</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Charts.PrintOut-->
	<element type="method">
		<source id="Excel.Charts.PrintOut">
			<context kind="class">Charts</context>
			<name>PrintOut</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>From</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>To</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Copies</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Preview</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ActivePrinter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrintToFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Collate</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrToFileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Charts.PrintPreview-->
	<element type="method">
		<source id="Excel.Charts.PrintPreview">
			<context kind="class">Charts</context>
			<name>PrintPreview</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>EnableChanges</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Charts.Select-->
	<element type="method">
		<source id="Excel.Charts.Select">
			<context kind="class">Charts</context>
			<name>Select</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Charts.Visible-->
	<element type="property">
		<source id="Excel.Charts.Visible">
			<context kind="class">Charts</context>
			<name>Visible</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Charts.VPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Charts.VPageBreaks">
			<context kind="class">Charts</context>
			<name>VPageBreaks</name>
			<type>VPageBreaks</type>
		</source>
	</element>
	<!--Class::ChartTitle-->
	<element type="class">
		<source id="Excel.ChartTitle">
			<name>ChartTitle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ChartTitle.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartTitle.Application">
			<context kind="class">ChartTitle</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ChartTitle.AutoScaleFont-->
	<element type="property">
		<source id="Excel.ChartTitle.AutoScaleFont">
			<context kind="class">ChartTitle</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartTitle.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartTitle.Border">
			<context kind="class">ChartTitle</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::ChartTitle.Caption-->
	<element type="property">
		<source id="Excel.ChartTitle.Caption">
			<context kind="class">ChartTitle</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ChartTitle.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartTitle.Characters">
			<context kind="class">ChartTitle</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ChartTitle.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartTitle.Creator">
			<context kind="class">ChartTitle</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ChartTitle.Delete-->
	<element type="method">
		<source id="Excel.ChartTitle.Delete">
			<context kind="class">ChartTitle</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartTitle.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartTitle.Fill">
			<context kind="class">ChartTitle</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::ChartTitle.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartTitle.Font">
			<context kind="class">ChartTitle</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::ChartTitle.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.ChartTitle.HorizontalAlignment">
			<context kind="class">ChartTitle</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartTitle.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartTitle.Interior">
			<context kind="class">ChartTitle</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::ChartTitle.Left-->
	<element type="property">
		<source id="Excel.ChartTitle.Left">
			<context kind="class">ChartTitle</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ChartTitle.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartTitle.Name">
			<context kind="class">ChartTitle</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ChartTitle.Orientation-->
	<element type="property">
		<source id="Excel.ChartTitle.Orientation">
			<context kind="class">ChartTitle</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartTitle.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ChartTitle.Parent">
			<context kind="class">ChartTitle</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ChartTitle.ReadingOrder-->
	<element type="property">
		<source id="Excel.ChartTitle.ReadingOrder">
			<context kind="class">ChartTitle</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ChartTitle.Select-->
	<element type="method">
		<source id="Excel.ChartTitle.Select">
			<context kind="class">ChartTitle</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ChartTitle.Shadow-->
	<element type="property">
		<source id="Excel.ChartTitle.Shadow">
			<context kind="class">ChartTitle</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ChartTitle.Text-->
	<element type="property">
		<source id="Excel.ChartTitle.Text">
			<context kind="class">ChartTitle</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ChartTitle.Top-->
	<element type="property">
		<source id="Excel.ChartTitle.Top">
			<context kind="class">ChartTitle</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ChartTitle.VerticalAlignment-->
	<element type="property">
		<source id="Excel.ChartTitle.VerticalAlignment">
			<context kind="class">ChartTitle</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::CheckBox-->
	<element type="class">
		<source id="Excel.CheckBox">
			<name>CheckBox</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::CheckBox.Accelerator-->
	<element type="property">
		<source id="Excel.CheckBox.Accelerator">
			<context kind="class">CheckBox</context>
			<name>Accelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CheckBox.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBox.Application">
			<context kind="class">CheckBox</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CheckBox.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBox.Border">
			<context kind="class">CheckBox</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::CheckBox.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBox.BottomRightCell">
			<context kind="class">CheckBox</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::CheckBox.BringToFront-->
	<element type="method">
		<source id="Excel.CheckBox.BringToFront">
			<context kind="class">CheckBox</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CheckBox.Caption-->
	<element type="property">
		<source id="Excel.CheckBox.Caption">
			<context kind="class">CheckBox</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CheckBox.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBox.Characters">
			<context kind="class">CheckBox</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CheckBox.CheckSpelling-->
	<element type="method">
		<source id="Excel.CheckBox.CheckSpelling">
			<context kind="class">CheckBox</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CheckBox.Copy-->
	<element type="method">
		<source id="Excel.CheckBox.Copy">
			<context kind="class">CheckBox</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::CheckBox.CopyPicture-->
	<element type="method">
		<source id="Excel.CheckBox.CopyPicture">
			<context kind="class">CheckBox</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CheckBox.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBox.Creator">
			<context kind="class">CheckBox</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CheckBox.Cut-->
	<element type="method">
		<source id="Excel.CheckBox.Cut">
			<context kind="class">CheckBox</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::CheckBox.Delete-->
	<element type="method">
		<source id="Excel.CheckBox.Delete">
			<context kind="class">CheckBox</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CheckBox.Display3DShading-->
	<element type="property">
		<source id="Excel.CheckBox.Display3DShading">
			<context kind="class">CheckBox</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::CheckBox.Duplicate-->
	<element type="method">
		<source id="Excel.CheckBox.Duplicate">
			<context kind="class">CheckBox</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CheckBox.Enabled-->
	<element type="property">
		<source id="Excel.CheckBox.Enabled">
			<context kind="class">CheckBox</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CheckBox.Height-->
	<element type="property">
		<source id="Excel.CheckBox.Height">
			<context kind="class">CheckBox</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::CheckBox.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBox.Index">
			<context kind="class">CheckBox</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CheckBox.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBox.Interior">
			<context kind="class">CheckBox</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::CheckBox.Left-->
	<element type="property">
		<source id="Excel.CheckBox.Left">
			<context kind="class">CheckBox</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::CheckBox.LinkedCell-->
	<element type="property">
		<source id="Excel.CheckBox.LinkedCell">
			<context kind="class">CheckBox</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CheckBox.Locked-->
	<element type="property">
		<source id="Excel.CheckBox.Locked">
			<context kind="class">CheckBox</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CheckBox.LockedText-->
	<element type="property">
		<source id="Excel.CheckBox.LockedText">
			<context kind="class">CheckBox</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CheckBox.Name-->
	<element type="property">
		<source id="Excel.CheckBox.Name">
			<context kind="class">CheckBox</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CheckBox.OnAction-->
	<element type="property">
		<source id="Excel.CheckBox.OnAction">
			<context kind="class">CheckBox</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CheckBox.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBox.Parent">
			<context kind="class">CheckBox</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CheckBox.PhoneticAccelerator-->
	<element type="property">
		<source id="Excel.CheckBox.PhoneticAccelerator">
			<context kind="class">CheckBox</context>
			<name>PhoneticAccelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CheckBox.Placement-->
	<element type="property">
		<source id="Excel.CheckBox.Placement">
			<context kind="class">CheckBox</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CheckBox.PrintObject-->
	<element type="property">
		<source id="Excel.CheckBox.PrintObject">
			<context kind="class">CheckBox</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::CheckBox.Select-->
	<element type="method">
		<source id="Excel.CheckBox.Select">
			<context kind="class">CheckBox</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CheckBox.SendToBack-->
	<element type="method">
		<source id="Excel.CheckBox.SendToBack">
			<context kind="class">CheckBox</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CheckBox.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBox.ShapeRange">
			<context kind="class">CheckBox</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::CheckBox.Text-->
	<element type="property">
		<source id="Excel.CheckBox.Text">
			<context kind="class">CheckBox</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CheckBox.Top-->
	<element type="property">
		<source id="Excel.CheckBox.Top">
			<context kind="class">CheckBox</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::CheckBox.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBox.TopLeftCell">
			<context kind="class">CheckBox</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::CheckBox.Value-->
	<element type="property">
		<source id="Excel.CheckBox.Value">
			<context kind="class">CheckBox</context>
			<name>Value</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CheckBox.Visible-->
	<element type="property">
		<source id="Excel.CheckBox.Visible">
			<context kind="class">CheckBox</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CheckBox.Width-->
	<element type="property">
		<source id="Excel.CheckBox.Width">
			<context kind="class">CheckBox</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::CheckBox.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBox.ZOrder">
			<context kind="class">CheckBox</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::CheckBoxes-->
	<element type="class">
		<source id="Excel.CheckBoxes">
			<name>CheckBoxes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::CheckBoxes.Accelerator-->
	<element type="property">
		<source id="Excel.CheckBoxes.Accelerator">
			<context kind="class">CheckBoxes</context>
			<name>Accelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::CheckBoxes.Add-->
	<element type="method">
		<source id="Excel.CheckBoxes.Add">
			<context kind="class">CheckBoxes</context>
			<name>Add</name>
			<type>CheckBox</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CheckBoxes.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBoxes.Application">
			<context kind="class">CheckBoxes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CheckBoxes.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBoxes.Border">
			<context kind="class">CheckBoxes</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::CheckBoxes.BringToFront-->
	<element type="method">
		<source id="Excel.CheckBoxes.BringToFront">
			<context kind="class">CheckBoxes</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CheckBoxes.Caption-->
	<element type="property">
		<source id="Excel.CheckBoxes.Caption">
			<context kind="class">CheckBoxes</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CheckBoxes.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBoxes.Characters">
			<context kind="class">CheckBoxes</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CheckBoxes.CheckSpelling-->
	<element type="method">
		<source id="Excel.CheckBoxes.CheckSpelling">
			<context kind="class">CheckBoxes</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CheckBoxes.Copy-->
	<element type="method">
		<source id="Excel.CheckBoxes.Copy">
			<context kind="class">CheckBoxes</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::CheckBoxes.CopyPicture-->
	<element type="method">
		<source id="Excel.CheckBoxes.CopyPicture">
			<context kind="class">CheckBoxes</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CheckBoxes.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBoxes.Count">
			<context kind="class">CheckBoxes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CheckBoxes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBoxes.Creator">
			<context kind="class">CheckBoxes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CheckBoxes.Cut-->
	<element type="method">
		<source id="Excel.CheckBoxes.Cut">
			<context kind="class">CheckBoxes</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::CheckBoxes.Delete-->
	<element type="method">
		<source id="Excel.CheckBoxes.Delete">
			<context kind="class">CheckBoxes</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CheckBoxes.Display3DShading-->
	<element type="property">
		<source id="Excel.CheckBoxes.Display3DShading">
			<context kind="class">CheckBoxes</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::CheckBoxes.Duplicate-->
	<element type="method">
		<source id="Excel.CheckBoxes.Duplicate">
			<context kind="class">CheckBoxes</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CheckBoxes.Enabled-->
	<element type="property">
		<source id="Excel.CheckBoxes.Enabled">
			<context kind="class">CheckBoxes</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::CheckBoxes.Group-->
	<element type="method">
		<source id="Excel.CheckBoxes.Group">
			<context kind="class">CheckBoxes</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::CheckBoxes.Height-->
	<element type="property">
		<source id="Excel.CheckBoxes.Height">
			<context kind="class">CheckBoxes</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::CheckBoxes.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBoxes.Interior">
			<context kind="class">CheckBoxes</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::CheckBoxes.Item-->
	<element type="method">
		<source id="Excel.CheckBoxes.Item">
			<context kind="class">CheckBoxes</context>
			<name>Item</name>
			<type>CheckBoxe</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CheckBoxes.Left-->
	<element type="property">
		<source id="Excel.CheckBoxes.Left">
			<context kind="class">CheckBoxes</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::CheckBoxes.LinkedCell-->
	<element type="property">
		<source id="Excel.CheckBoxes.LinkedCell">
			<context kind="class">CheckBoxes</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CheckBoxes.Locked-->
	<element type="property">
		<source id="Excel.CheckBoxes.Locked">
			<context kind="class">CheckBoxes</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CheckBoxes.LockedText-->
	<element type="property">
		<source id="Excel.CheckBoxes.LockedText">
			<context kind="class">CheckBoxes</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CheckBoxes.OnAction-->
	<element type="property">
		<source id="Excel.CheckBoxes.OnAction">
			<context kind="class">CheckBoxes</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CheckBoxes.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBoxes.Parent">
			<context kind="class">CheckBoxes</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CheckBoxes.PhoneticAccelerator-->
	<element type="property">
		<source id="Excel.CheckBoxes.PhoneticAccelerator">
			<context kind="class">CheckBoxes</context>
			<name>PhoneticAccelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CheckBoxes.Placement-->
	<element type="property">
		<source id="Excel.CheckBoxes.Placement">
			<context kind="class">CheckBoxes</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CheckBoxes.PrintObject-->
	<element type="property">
		<source id="Excel.CheckBoxes.PrintObject">
			<context kind="class">CheckBoxes</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::CheckBoxes.Select-->
	<element type="method">
		<source id="Excel.CheckBoxes.Select">
			<context kind="class">CheckBoxes</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CheckBoxes.SendToBack-->
	<element type="method">
		<source id="Excel.CheckBoxes.SendToBack">
			<context kind="class">CheckBoxes</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CheckBoxes.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBoxes.ShapeRange">
			<context kind="class">CheckBoxes</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::CheckBoxes.Text-->
	<element type="property">
		<source id="Excel.CheckBoxes.Text">
			<context kind="class">CheckBoxes</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CheckBoxes.Top-->
	<element type="property">
		<source id="Excel.CheckBoxes.Top">
			<context kind="class">CheckBoxes</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::CheckBoxes.Value-->
	<element type="property">
		<source id="Excel.CheckBoxes.Value">
			<context kind="class">CheckBoxes</context>
			<name>Value</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CheckBoxes.Visible-->
	<element type="property">
		<source id="Excel.CheckBoxes.Visible">
			<context kind="class">CheckBoxes</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CheckBoxes.Width-->
	<element type="property">
		<source id="Excel.CheckBoxes.Width">
			<context kind="class">CheckBoxes</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::CheckBoxes.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.CheckBoxes.ZOrder">
			<context kind="class">CheckBoxes</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ColorFormat-->
	<element type="class">
		<source id="Excel.ColorFormat">
			<name>ColorFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ColorFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ColorFormat.Application">
			<context kind="class">ColorFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ColorFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ColorFormat.Creator">
			<context kind="class">ColorFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ColorFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ColorFormat.Parent">
			<context kind="class">ColorFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ColorFormat.RGB {Default}-->
	<element type="property">
		<source id="Excel.ColorFormat.RGB">
			<context kind="class">ColorFormat</context>
			<name default="true">RGB</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ColorFormat.SchemeColor-->
	<element type="property">
		<source id="Excel.ColorFormat.SchemeColor">
			<context kind="class">ColorFormat</context>
			<name>SchemeColor</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ColorFormat.TintAndShade-->
	<element type="property">
		<source id="Excel.ColorFormat.TintAndShade">
			<context kind="class">ColorFormat</context>
			<name>TintAndShade</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::ColorFormat.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.ColorFormat.Type">
			<context kind="class">ColorFormat</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Columns.Count(INSERTED)-->
	<element type="property">
		<source id="Excel.Columns.Count">
			<context kind="class">Columns</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Columns.Delete(INSERTED)-->
	<element type="method">
		<source id="Excel.Columns.Delete">
			<context kind="class">Columns</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Columns.Select(INSERTED)-->
	<element type="method">
		<source id="Excel.Columns.Select">
			<context kind="class">Columns</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Comment-->
	<element type="class">
		<source id="Excel.Comment">
			<name>Comment</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Comment.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Comment.Application">
			<context kind="class">Comment</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Comment.Author {ReadOnly}-->
	<element type="property">
		<source id="Excel.Comment.Author">
			<context kind="class">Comment</context>
			<name>Author</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Comment.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Comment.Creator">
			<context kind="class">Comment</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Comment.Delete-->
	<element type="method">
		<source id="Excel.Comment.Delete">
			<context kind="class">Comment</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Comment.Next-->
	<element type="method">
		<source id="Excel.Comment.Next">
			<context kind="class">Comment</context>
			<name>Next</name>
			<type>Comment</type>
		</source>
	</element>
	<!--property::Comment.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Comment.Parent">
			<context kind="class">Comment</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Comment.Previous-->
	<element type="method">
		<source id="Excel.Comment.Previous">
			<context kind="class">Comment</context>
			<name>Previous</name>
			<type>Comment</type>
		</source>
	</element>
	<!--property::Comment.Shape {ReadOnly}-->
	<element type="property">
		<source id="Excel.Comment.Shape">
			<context kind="class">Comment</context>
			<name>Shape</name>
			<type>Shape</type>
		</source>
	</element>
	<!--method::Comment.Text-->
	<element type="method">
		<source id="Excel.Comment.Text">
			<context kind="class">Comment</context>
			<name>Text</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Text</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Overwrite</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Comment.Visible-->
	<element type="property">
		<source id="Excel.Comment.Visible">
			<context kind="class">Comment</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::Comments-->
	<element type="class">
		<source id="Excel.Comments">
			<name>Comments</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Comments.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Comments.Application">
			<context kind="class">Comments</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Comments.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Comments.Count">
			<context kind="class">Comments</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Comments.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Comments.Creator">
			<context kind="class">Comments</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Comments.Item-->
	<element type="method">
		<source id="Excel.Comments.Item">
			<context kind="class">Comments</context>
			<name>Item</name>
			<type>Comment</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Comments.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Comments.Parent">
			<context kind="class">Comments</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::ConnectorFormat-->
	<element type="class">
		<source id="Excel.ConnectorFormat">
			<name>ConnectorFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ConnectorFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ConnectorFormat.Application">
			<context kind="class">ConnectorFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::ConnectorFormat.BeginConnect-->
	<element type="method">
		<source id="Excel.ConnectorFormat.BeginConnect">
			<context kind="class">ConnectorFormat</context>
			<name>BeginConnect</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Shape</type>
					<name>ConnectedShape</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>ConnectionSite</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ConnectorFormat.BeginConnected {ReadOnly}-->
	<element type="property">
		<source id="Excel.ConnectorFormat.BeginConnected">
			<context kind="class">ConnectorFormat</context>
			<name>BeginConnected</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ConnectorFormat.BeginConnectedShape {ReadOnly}-->
	<element type="property">
		<source id="Excel.ConnectorFormat.BeginConnectedShape">
			<context kind="class">ConnectorFormat</context>
			<name>BeginConnectedShape</name>
			<type>Shape</type>
		</source>
	</element>
	<!--property::ConnectorFormat.BeginConnectionSite {ReadOnly}-->
	<element type="property">
		<source id="Excel.ConnectorFormat.BeginConnectionSite">
			<context kind="class">ConnectorFormat</context>
			<name>BeginConnectionSite</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ConnectorFormat.BeginDisconnect-->
	<element type="method">
		<source id="Excel.ConnectorFormat.BeginDisconnect">
			<context kind="class">ConnectorFormat</context>
			<name>BeginDisconnect</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ConnectorFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ConnectorFormat.Creator">
			<context kind="class">ConnectorFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ConnectorFormat.EndConnect-->
	<element type="method">
		<source id="Excel.ConnectorFormat.EndConnect">
			<context kind="class">ConnectorFormat</context>
			<name>EndConnect</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Shape</type>
					<name>ConnectedShape</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>ConnectionSite</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ConnectorFormat.EndConnected {ReadOnly}-->
	<element type="property">
		<source id="Excel.ConnectorFormat.EndConnected">
			<context kind="class">ConnectorFormat</context>
			<name>EndConnected</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ConnectorFormat.EndConnectedShape {ReadOnly}-->
	<element type="property">
		<source id="Excel.ConnectorFormat.EndConnectedShape">
			<context kind="class">ConnectorFormat</context>
			<name>EndConnectedShape</name>
			<type>Shape</type>
		</source>
	</element>
	<!--property::ConnectorFormat.EndConnectionSite {ReadOnly}-->
	<element type="property">
		<source id="Excel.ConnectorFormat.EndConnectionSite">
			<context kind="class">ConnectorFormat</context>
			<name>EndConnectionSite</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ConnectorFormat.EndDisconnect-->
	<element type="method">
		<source id="Excel.ConnectorFormat.EndDisconnect">
			<context kind="class">ConnectorFormat</context>
			<name>EndDisconnect</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ConnectorFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ConnectorFormat.Parent">
			<context kind="class">ConnectorFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ConnectorFormat.Type-->
	<element type="property">
		<source id="Excel.ConnectorFormat.Type">
			<context kind="class">ConnectorFormat</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--enum::Constants  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.Constants">
			<name>Constants</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DBar {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xl3DBar">
			<context kind="enumeration">Constants</context>
			<name>xl3DBar</name>
			<value>-4099</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DEffects1 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xl3DEffects1">
			<context kind="enumeration">Constants</context>
			<name>xl3DEffects1</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DEffects2 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xl3DEffects2">
			<context kind="enumeration">Constants</context>
			<name>xl3DEffects2</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DSurface {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xl3DSurface">
			<context kind="enumeration">Constants</context>
			<name>xl3DSurface</name>
			<value>-4103</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAbove {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlAbove">
			<context kind="enumeration">Constants</context>
			<name>xlAbove</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAccounting1 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlAccounting1">
			<context kind="enumeration">Constants</context>
			<name>xlAccounting1</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAccounting2 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlAccounting2">
			<context kind="enumeration">Constants</context>
			<name>xlAccounting2</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAccounting3 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlAccounting3">
			<context kind="enumeration">Constants</context>
			<name>xlAccounting3</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAccounting4 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlAccounting4">
			<context kind="enumeration">Constants</context>
			<name>xlAccounting4</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAdd {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlAdd">
			<context kind="enumeration">Constants</context>
			<name>xlAdd</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAll {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlAll">
			<context kind="enumeration">Constants</context>
			<name>xlAll</name>
			<value>-4104</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAllExceptBorders {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlAllExceptBorders">
			<context kind="enumeration">Constants</context>
			<name>xlAllExceptBorders</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAutomatic {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlAutomatic">
			<context kind="enumeration">Constants</context>
			<name>xlAutomatic</name>
			<value>-4105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBar {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlBar">
			<context kind="enumeration">Constants</context>
			<name>xlBar</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBelow {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlBelow">
			<context kind="enumeration">Constants</context>
			<name>xlBelow</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBidi {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlBidi">
			<context kind="enumeration">Constants</context>
			<name>xlBidi</name>
			<value>-5000</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBidiCalendar {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlBidiCalendar">
			<context kind="enumeration">Constants</context>
			<name>xlBidiCalendar</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBoth {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlBoth">
			<context kind="enumeration">Constants</context>
			<name>xlBoth</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBottom {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlBottom">
			<context kind="enumeration">Constants</context>
			<name>xlBottom</name>
			<value>-4107</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCascade {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlCascade">
			<context kind="enumeration">Constants</context>
			<name>xlCascade</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCenter {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlCenter">
			<context kind="enumeration">Constants</context>
			<name>xlCenter</name>
			<value>-4108</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCenterAcrossSelection {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlCenterAcrossSelection">
			<context kind="enumeration">Constants</context>
			<name>xlCenterAcrossSelection</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlChart4 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlChart4">
			<context kind="enumeration">Constants</context>
			<name>xlChart4</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlChartSeries {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlChartSeries">
			<context kind="enumeration">Constants</context>
			<name>xlChartSeries</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlChartShort {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlChartShort">
			<context kind="enumeration">Constants</context>
			<name>xlChartShort</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlChartTitles {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlChartTitles">
			<context kind="enumeration">Constants</context>
			<name>xlChartTitles</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlChecker {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlChecker">
			<context kind="enumeration">Constants</context>
			<name>xlChecker</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCircle {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlCircle">
			<context kind="enumeration">Constants</context>
			<name>xlCircle</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClassic1 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlClassic1">
			<context kind="enumeration">Constants</context>
			<name>xlClassic1</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClassic2 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlClassic2">
			<context kind="enumeration">Constants</context>
			<name>xlClassic2</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClassic3 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlClassic3">
			<context kind="enumeration">Constants</context>
			<name>xlClassic3</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClosed {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlClosed">
			<context kind="enumeration">Constants</context>
			<name>xlClosed</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColor1 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlColor1">
			<context kind="enumeration">Constants</context>
			<name>xlColor1</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColor2 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlColor2">
			<context kind="enumeration">Constants</context>
			<name>xlColor2</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColor3 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlColor3">
			<context kind="enumeration">Constants</context>
			<name>xlColor3</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColumn {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlColumn">
			<context kind="enumeration">Constants</context>
			<name>xlColumn</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCombination {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlCombination">
			<context kind="enumeration">Constants</context>
			<name>xlCombination</name>
			<value>-4111</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlComplete {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlComplete">
			<context kind="enumeration">Constants</context>
			<name>xlComplete</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlConstants {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlConstants">
			<context kind="enumeration">Constants</context>
			<name>xlConstants</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlContents {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlContents">
			<context kind="enumeration">Constants</context>
			<name>xlContents</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlContext {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlContext">
			<context kind="enumeration">Constants</context>
			<name>xlContext</name>
			<value>-5002</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCorner {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlCorner">
			<context kind="enumeration">Constants</context>
			<name>xlCorner</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCrissCross {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlCrissCross">
			<context kind="enumeration">Constants</context>
			<name>xlCrissCross</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCross {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlCross">
			<context kind="enumeration">Constants</context>
			<name>xlCross</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCustom {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlCustom">
			<context kind="enumeration">Constants</context>
			<name>xlCustom</name>
			<value>-4114</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDebugCodePane {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlDebugCodePane">
			<context kind="enumeration">Constants</context>
			<name>xlDebugCodePane</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDefaultAutoFormat {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlDefaultAutoFormat">
			<context kind="enumeration">Constants</context>
			<name>xlDefaultAutoFormat</name>
			<value>-1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDesktop {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlDesktop">
			<context kind="enumeration">Constants</context>
			<name>xlDesktop</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDiamond {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlDiamond">
			<context kind="enumeration">Constants</context>
			<name>xlDiamond</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDirect {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlDirect">
			<context kind="enumeration">Constants</context>
			<name>xlDirect</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDistributed {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlDistributed">
			<context kind="enumeration">Constants</context>
			<name>xlDistributed</name>
			<value>-4117</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDivide {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlDivide">
			<context kind="enumeration">Constants</context>
			<name>xlDivide</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDoubleAccounting {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlDoubleAccounting">
			<context kind="enumeration">Constants</context>
			<name>xlDoubleAccounting</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDoubleClosed {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlDoubleClosed">
			<context kind="enumeration">Constants</context>
			<name>xlDoubleClosed</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDoubleOpen {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlDoubleOpen">
			<context kind="enumeration">Constants</context>
			<name>xlDoubleOpen</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDoubleQuote {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlDoubleQuote">
			<context kind="enumeration">Constants</context>
			<name>xlDoubleQuote</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDrawingObject {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlDrawingObject">
			<context kind="enumeration">Constants</context>
			<name>xlDrawingObject</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEntireChart {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlEntireChart">
			<context kind="enumeration">Constants</context>
			<name>xlEntireChart</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExcelMenus {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlExcelMenus">
			<context kind="enumeration">Constants</context>
			<name>xlExcelMenus</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExtended {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlExtended">
			<context kind="enumeration">Constants</context>
			<name>xlExtended</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFill {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlFill">
			<context kind="enumeration">Constants</context>
			<name>xlFill</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFirst {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlFirst">
			<context kind="enumeration">Constants</context>
			<name>xlFirst</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFixedValue {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlFixedValue">
			<context kind="enumeration">Constants</context>
			<name>xlFixedValue</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFloating {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlFloating">
			<context kind="enumeration">Constants</context>
			<name>xlFloating</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFormats {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlFormats">
			<context kind="enumeration">Constants</context>
			<name>xlFormats</name>
			<value>-4122</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFormula {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlFormula">
			<context kind="enumeration">Constants</context>
			<name>xlFormula</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFullScript {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlFullScript">
			<context kind="enumeration">Constants</context>
			<name>xlFullScript</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGeneral {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlGeneral">
			<context kind="enumeration">Constants</context>
			<name>xlGeneral</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGray16 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlGray16">
			<context kind="enumeration">Constants</context>
			<name>xlGray16</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGray25 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlGray25">
			<context kind="enumeration">Constants</context>
			<name>xlGray25</name>
			<value>-4124</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGray50 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlGray50">
			<context kind="enumeration">Constants</context>
			<name>xlGray50</name>
			<value>-4125</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGray75 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlGray75">
			<context kind="enumeration">Constants</context>
			<name>xlGray75</name>
			<value>-4126</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGray8 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlGray8">
			<context kind="enumeration">Constants</context>
			<name>xlGray8</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGregorian {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlGregorian">
			<context kind="enumeration">Constants</context>
			<name>xlGregorian</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGrid {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlGrid">
			<context kind="enumeration">Constants</context>
			<name>xlGrid</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGridline {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlGridline">
			<context kind="enumeration">Constants</context>
			<name>xlGridline</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHigh {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlHigh">
			<context kind="enumeration">Constants</context>
			<name>xlHigh</name>
			<value>-4127</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHindiNumerals {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlHindiNumerals">
			<context kind="enumeration">Constants</context>
			<name>xlHindiNumerals</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIcons {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlIcons">
			<context kind="enumeration">Constants</context>
			<name>xlIcons</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlImmediatePane {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlImmediatePane">
			<context kind="enumeration">Constants</context>
			<name>xlImmediatePane</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlInside {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlInside">
			<context kind="enumeration">Constants</context>
			<name>xlInside</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlInteger {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlInteger">
			<context kind="enumeration">Constants</context>
			<name>xlInteger</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlJustify {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlJustify">
			<context kind="enumeration">Constants</context>
			<name>xlJustify</name>
			<value>-4130</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLast {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLast">
			<context kind="enumeration">Constants</context>
			<name>xlLast</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLastCell {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLastCell">
			<context kind="enumeration">Constants</context>
			<name>xlLastCell</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLatin {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLatin">
			<context kind="enumeration">Constants</context>
			<name>xlLatin</name>
			<value>-5001</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLeft {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLeft">
			<context kind="enumeration">Constants</context>
			<name>xlLeft</name>
			<value>-4131</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLeftToRight {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLeftToRight">
			<context kind="enumeration">Constants</context>
			<name>xlLeftToRight</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLightDown {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLightDown">
			<context kind="enumeration">Constants</context>
			<name>xlLightDown</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLightHorizontal {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLightHorizontal">
			<context kind="enumeration">Constants</context>
			<name>xlLightHorizontal</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLightUp {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLightUp">
			<context kind="enumeration">Constants</context>
			<name>xlLightUp</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLightVertical {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLightVertical">
			<context kind="enumeration">Constants</context>
			<name>xlLightVertical</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlList1 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlList1">
			<context kind="enumeration">Constants</context>
			<name>xlList1</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlList2 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlList2">
			<context kind="enumeration">Constants</context>
			<name>xlList2</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlList3 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlList3">
			<context kind="enumeration">Constants</context>
			<name>xlList3</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLocalFormat1 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLocalFormat1">
			<context kind="enumeration">Constants</context>
			<name>xlLocalFormat1</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLocalFormat2 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLocalFormat2">
			<context kind="enumeration">Constants</context>
			<name>xlLocalFormat2</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLogicalCursor {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLogicalCursor">
			<context kind="enumeration">Constants</context>
			<name>xlLogicalCursor</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLong {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLong">
			<context kind="enumeration">Constants</context>
			<name>xlLong</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLotusHelp {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLotusHelp">
			<context kind="enumeration">Constants</context>
			<name>xlLotusHelp</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLow {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLow">
			<context kind="enumeration">Constants</context>
			<name>xlLow</name>
			<value>-4134</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLTR {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlLTR">
			<context kind="enumeration">Constants</context>
			<name>xlLTR</name>
			<value>-5003</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMacrosheetCell {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlMacrosheetCell">
			<context kind="enumeration">Constants</context>
			<name>xlMacrosheetCell</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlManual {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlManual">
			<context kind="enumeration">Constants</context>
			<name>xlManual</name>
			<value>-4135</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMaximum {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlMaximum">
			<context kind="enumeration">Constants</context>
			<name>xlMaximum</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMinimum {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlMinimum">
			<context kind="enumeration">Constants</context>
			<name>xlMinimum</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMinusValues {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlMinusValues">
			<context kind="enumeration">Constants</context>
			<name>xlMinusValues</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMixed {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlMixed">
			<context kind="enumeration">Constants</context>
			<name>xlMixed</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMixedAuthorizedScript {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlMixedAuthorizedScript">
			<context kind="enumeration">Constants</context>
			<name>xlMixedAuthorizedScript</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMixedScript {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlMixedScript">
			<context kind="enumeration">Constants</context>
			<name>xlMixedScript</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlModule {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlModule">
			<context kind="enumeration">Constants</context>
			<name>xlModule</name>
			<value>-4141</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMultiply {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlMultiply">
			<context kind="enumeration">Constants</context>
			<name>xlMultiply</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNarrow {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlNarrow">
			<context kind="enumeration">Constants</context>
			<name>xlNarrow</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNextToAxis {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlNextToAxis">
			<context kind="enumeration">Constants</context>
			<name>xlNextToAxis</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoDocuments {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlNoDocuments">
			<context kind="enumeration">Constants</context>
			<name>xlNoDocuments</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNone {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlNone">
			<context kind="enumeration">Constants</context>
			<name>xlNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNotes {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlNotes">
			<context kind="enumeration">Constants</context>
			<name>xlNotes</name>
			<value>-4144</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOff {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlOff">
			<context kind="enumeration">Constants</context>
			<name>xlOff</name>
			<value>-4146</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOn {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlOn">
			<context kind="enumeration">Constants</context>
			<name>xlOn</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOpaque {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlOpaque">
			<context kind="enumeration">Constants</context>
			<name>xlOpaque</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOpen {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlOpen">
			<context kind="enumeration">Constants</context>
			<name>xlOpen</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOutside {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlOutside">
			<context kind="enumeration">Constants</context>
			<name>xlOutside</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPartial {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlPartial">
			<context kind="enumeration">Constants</context>
			<name>xlPartial</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPartialScript {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlPartialScript">
			<context kind="enumeration">Constants</context>
			<name>xlPartialScript</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPercent {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlPercent">
			<context kind="enumeration">Constants</context>
			<name>xlPercent</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPlus {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlPlus">
			<context kind="enumeration">Constants</context>
			<name>xlPlus</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPlusValues {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlPlusValues">
			<context kind="enumeration">Constants</context>
			<name>xlPlusValues</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlReference {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlReference">
			<context kind="enumeration">Constants</context>
			<name>xlReference</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRight {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlRight">
			<context kind="enumeration">Constants</context>
			<name>xlRight</name>
			<value>-4152</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRTL {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlRTL">
			<context kind="enumeration">Constants</context>
			<name>xlRTL</name>
			<value>-5004</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlScale {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlScale">
			<context kind="enumeration">Constants</context>
			<name>xlScale</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSemiautomatic {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlSemiautomatic">
			<context kind="enumeration">Constants</context>
			<name>xlSemiautomatic</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSemiGray75 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlSemiGray75">
			<context kind="enumeration">Constants</context>
			<name>xlSemiGray75</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlShort {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlShort">
			<context kind="enumeration">Constants</context>
			<name>xlShort</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlShowLabel {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlShowLabel">
			<context kind="enumeration">Constants</context>
			<name>xlShowLabel</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlShowLabelAndPercent {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlShowLabelAndPercent">
			<context kind="enumeration">Constants</context>
			<name>xlShowLabelAndPercent</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlShowPercent {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlShowPercent">
			<context kind="enumeration">Constants</context>
			<name>xlShowPercent</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlShowValue {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlShowValue">
			<context kind="enumeration">Constants</context>
			<name>xlShowValue</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSimple {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlSimple">
			<context kind="enumeration">Constants</context>
			<name>xlSimple</name>
			<value>-4154</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSingle {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlSingle">
			<context kind="enumeration">Constants</context>
			<name>xlSingle</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSingleAccounting {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlSingleAccounting">
			<context kind="enumeration">Constants</context>
			<name>xlSingleAccounting</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSingleQuote {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlSingleQuote">
			<context kind="enumeration">Constants</context>
			<name>xlSingleQuote</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSolid {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlSolid">
			<context kind="enumeration">Constants</context>
			<name>xlSolid</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSquare {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlSquare">
			<context kind="enumeration">Constants</context>
			<name>xlSquare</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStar {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlStar">
			<context kind="enumeration">Constants</context>
			<name>xlStar</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStError {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlStError">
			<context kind="enumeration">Constants</context>
			<name>xlStError</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStrict {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlStrict">
			<context kind="enumeration">Constants</context>
			<name>xlStrict</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSubtract {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlSubtract">
			<context kind="enumeration">Constants</context>
			<name>xlSubtract</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSystem {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlSystem">
			<context kind="enumeration">Constants</context>
			<name>xlSystem</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextBox {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlTextBox">
			<context kind="enumeration">Constants</context>
			<name>xlTextBox</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTiled {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlTiled">
			<context kind="enumeration">Constants</context>
			<name>xlTiled</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTitleBar {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlTitleBar">
			<context kind="enumeration">Constants</context>
			<name>xlTitleBar</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlToolbar {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlToolbar">
			<context kind="enumeration">Constants</context>
			<name>xlToolbar</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlToolbarButton {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlToolbarButton">
			<context kind="enumeration">Constants</context>
			<name>xlToolbarButton</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTop {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlTop">
			<context kind="enumeration">Constants</context>
			<name>xlTop</name>
			<value>-4160</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTopToBottom {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlTopToBottom">
			<context kind="enumeration">Constants</context>
			<name>xlTopToBottom</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTransparent {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlTransparent">
			<context kind="enumeration">Constants</context>
			<name>xlTransparent</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTriangle {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlTriangle">
			<context kind="enumeration">Constants</context>
			<name>xlTriangle</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVeryHidden {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlVeryHidden">
			<context kind="enumeration">Constants</context>
			<name>xlVeryHidden</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVisible {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlVisible">
			<context kind="enumeration">Constants</context>
			<name>xlVisible</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVisualCursor {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlVisualCursor">
			<context kind="enumeration">Constants</context>
			<name>xlVisualCursor</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWatchPane {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlWatchPane">
			<context kind="enumeration">Constants</context>
			<name>xlWatchPane</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWide {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlWide">
			<context kind="enumeration">Constants</context>
			<name>xlWide</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWorkbookTab {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlWorkbookTab">
			<context kind="enumeration">Constants</context>
			<name>xlWorkbookTab</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWorksheet4 {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlWorksheet4">
			<context kind="enumeration">Constants</context>
			<name>xlWorksheet4</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWorksheetCell {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlWorksheetCell">
			<context kind="enumeration">Constants</context>
			<name>xlWorksheetCell</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWorksheetShort {Constant}-->
	<element type="constant">
		<source id="Excel.Constants.xlWorksheetShort">
			<context kind="enumeration">Constants</context>
			<name>xlWorksheetShort</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--Class::ControlFormat-->
	<element type="class">
		<source id="Excel.ControlFormat">
			<name>ControlFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ControlFormat.AddItem-->
	<element type="method">
		<source id="Excel.ControlFormat.AddItem">
			<context kind="class">ControlFormat</context>
			<name>AddItem</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Text</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ControlFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ControlFormat.Application">
			<context kind="class">ControlFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ControlFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ControlFormat.Creator">
			<context kind="class">ControlFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ControlFormat.DropDownLines-->
	<element type="property">
		<source id="Excel.ControlFormat.DropDownLines">
			<context kind="class">ControlFormat</context>
			<name>DropDownLines</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ControlFormat.Enabled-->
	<element type="property">
		<source id="Excel.ControlFormat.Enabled">
			<context kind="class">ControlFormat</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ControlFormat.LargeChange-->
	<element type="property">
		<source id="Excel.ControlFormat.LargeChange">
			<context kind="class">ControlFormat</context>
			<name>LargeChange</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ControlFormat.LinkedCell-->
	<element type="property">
		<source id="Excel.ControlFormat.LinkedCell">
			<context kind="class">ControlFormat</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ControlFormat.List-->
	<element type="method">
		<source id="Excel.ControlFormat.List">
			<context kind="class">ControlFormat</context>
			<name>List</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ControlFormat.ListCount-->
	<element type="property">
		<source id="Excel.ControlFormat.ListCount">
			<context kind="class">ControlFormat</context>
			<name>ListCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ControlFormat.ListFillRange-->
	<element type="property">
		<source id="Excel.ControlFormat.ListFillRange">
			<context kind="class">ControlFormat</context>
			<name>ListFillRange</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ControlFormat.ListIndex-->
	<element type="property">
		<source id="Excel.ControlFormat.ListIndex">
			<context kind="class">ControlFormat</context>
			<name>ListIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ControlFormat.LockedText-->
	<element type="property">
		<source id="Excel.ControlFormat.LockedText">
			<context kind="class">ControlFormat</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ControlFormat.Max-->
	<element type="property">
		<source id="Excel.ControlFormat.Max">
			<context kind="class">ControlFormat</context>
			<name>Max</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ControlFormat.Min-->
	<element type="property">
		<source id="Excel.ControlFormat.Min">
			<context kind="class">ControlFormat</context>
			<name>Min</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ControlFormat.MultiSelect-->
	<element type="property">
		<source id="Excel.ControlFormat.MultiSelect">
			<context kind="class">ControlFormat</context>
			<name>MultiSelect</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ControlFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ControlFormat.Parent">
			<context kind="class">ControlFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ControlFormat.PrintObject-->
	<element type="property">
		<source id="Excel.ControlFormat.PrintObject">
			<context kind="class">ControlFormat</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ControlFormat.RemoveAllItems-->
	<element type="method">
		<source id="Excel.ControlFormat.RemoveAllItems">
			<context kind="class">ControlFormat</context>
			<name>RemoveAllItems</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ControlFormat.RemoveItem-->
	<element type="method">
		<source id="Excel.ControlFormat.RemoveItem">
			<context kind="class">ControlFormat</context>
			<name>RemoveItem</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Count</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ControlFormat.SmallChange-->
	<element type="property">
		<source id="Excel.ControlFormat.SmallChange">
			<context kind="class">ControlFormat</context>
			<name>SmallChange</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ControlFormat.Value {Default}-->
	<element type="property">
		<source id="Excel.ControlFormat.Value">
			<context kind="class">ControlFormat</context>
			<name default="true">Value</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Corners-->
	<element type="class">
		<source id="Excel.Corners">
			<name>Corners</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Corners.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Corners.Application">
			<context kind="class">Corners</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Corners.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Corners.Creator">
			<context kind="class">Corners</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Corners.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.Corners.Name">
			<context kind="class">Corners</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Corners.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Corners.Parent">
			<context kind="class">Corners</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Corners.Select-->
	<element type="method">
		<source id="Excel.Corners.Select">
			<context kind="class">Corners</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::CubeField-->
	<element type="class">
		<source id="Excel.CubeField">
			<name>CubeField</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::CubeField.AddMemberPropertyField-->
	<element type="method">
		<source id="Excel.CubeField.AddMemberPropertyField">
			<context kind="class">CubeField</context>
			<name>AddMemberPropertyField</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Property</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PropertyOrder</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CubeField.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeField.Application">
			<context kind="class">CubeField</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CubeField.Caption {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeField.Caption">
			<context kind="class">CubeField</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CubeField.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeField.Creator">
			<context kind="class">CubeField</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CubeField.CubeFieldType {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeField.CubeFieldType">
			<context kind="class">CubeField</context>
			<name>CubeFieldType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CubeField.Delete-->
	<element type="method">
		<source id="Excel.CubeField.Delete">
			<context kind="class">CubeField</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CubeField.DragToColumn-->
	<element type="property">
		<source id="Excel.CubeField.DragToColumn">
			<context kind="class">CubeField</context>
			<name>DragToColumn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CubeField.DragToData-->
	<element type="property">
		<source id="Excel.CubeField.DragToData">
			<context kind="class">CubeField</context>
			<name>DragToData</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CubeField.DragToHide-->
	<element type="property">
		<source id="Excel.CubeField.DragToHide">
			<context kind="class">CubeField</context>
			<name>DragToHide</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CubeField.DragToPage-->
	<element type="property">
		<source id="Excel.CubeField.DragToPage">
			<context kind="class">CubeField</context>
			<name>DragToPage</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CubeField.DragToRow-->
	<element type="property">
		<source id="Excel.CubeField.DragToRow">
			<context kind="class">CubeField</context>
			<name>DragToRow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CubeField.EnableMultiplePageItems-->
	<element type="property">
		<source id="Excel.CubeField.EnableMultiplePageItems">
			<context kind="class">CubeField</context>
			<name>EnableMultiplePageItems</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CubeField.HasMemberProperties {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeField.HasMemberProperties">
			<context kind="class">CubeField</context>
			<name>HasMemberProperties</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CubeField.HiddenLevels-->
	<element type="property">
		<source id="Excel.CubeField.HiddenLevels">
			<context kind="class">CubeField</context>
			<name>HiddenLevels</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CubeField.LayoutForm-->
	<element type="property">
		<source id="Excel.CubeField.LayoutForm">
			<context kind="class">CubeField</context>
			<name>LayoutForm</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CubeField.LayoutSubtotalLocation-->
	<element type="property">
		<source id="Excel.CubeField.LayoutSubtotalLocation">
			<context kind="class">CubeField</context>
			<name>LayoutSubtotalLocation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CubeField.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeField.Name">
			<context kind="class">CubeField</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CubeField.Orientation-->
	<element type="property">
		<source id="Excel.CubeField.Orientation">
			<context kind="class">CubeField</context>
			<name>Orientation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CubeField.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeField.Parent">
			<context kind="class">CubeField</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CubeField.PivotFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeField.PivotFields">
			<context kind="class">CubeField</context>
			<name>PivotFields</name>
			<type>PivotFields</type>
		</source>
	</element>
	<!--property::CubeField.Position-->
	<element type="property">
		<source id="Excel.CubeField.Position">
			<context kind="class">CubeField</context>
			<name>Position</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CubeField.ShowInFieldList-->
	<element type="property">
		<source id="Excel.CubeField.ShowInFieldList">
			<context kind="class">CubeField</context>
			<name>ShowInFieldList</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CubeField.TreeviewControl {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeField.TreeviewControl">
			<context kind="class">CubeField</context>
			<name>TreeviewControl</name>
			<type>TreeviewControl</type>
		</source>
	</element>
	<!--property::CubeField.Value {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeField.Value">
			<context kind="class">CubeField</context>
			<name>Value</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::CubeFields-->
	<element type="class">
		<source id="Excel.CubeFields">
			<name>CubeFields</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::CubeFields.AddSet-->
	<element type="method">
		<source id="Excel.CubeFields.AddSet">
			<context kind="class">CubeFields</context>
			<name>AddSet</name>
			<type>CubeField</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Caption</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CubeFields.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeFields.Application">
			<context kind="class">CubeFields</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CubeFields.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeFields.Count">
			<context kind="class">CubeFields</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CubeFields.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeFields.Creator">
			<context kind="class">CubeFields</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CubeFields.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeFields.Item">
			<context kind="class">CubeFields</context>
			<name default="true">Item</name>
			<type>CubeField</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CubeFields.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CubeFields.Parent">
			<context kind="class">CubeFields</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::CustomProperties-->
	<element type="class">
		<source id="Excel.CustomProperties">
			<name>CustomProperties</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::CustomProperties.Add-->
	<element type="method">
		<source id="Excel.CustomProperties.Add">
			<context kind="class">CustomProperties</context>
			<name>Add</name>
			<type>CustomProperty</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Value</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CustomProperties.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomProperties.Application">
			<context kind="class">CustomProperties</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CustomProperties.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomProperties.Count">
			<context kind="class">CustomProperties</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CustomProperties.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomProperties.Creator">
			<context kind="class">CustomProperties</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CustomProperties.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomProperties.Item">
			<context kind="class">CustomProperties</context>
			<name default="true">Item</name>
			<type>CustomProperty</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CustomProperties.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomProperties.Parent">
			<context kind="class">CustomProperties</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::CustomProperty-->
	<element type="class">
		<source id="Excel.CustomProperty">
			<name>CustomProperty</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::CustomProperty.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomProperty.Application">
			<context kind="class">CustomProperty</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CustomProperty.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomProperty.Creator">
			<context kind="class">CustomProperty</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CustomProperty.Delete-->
	<element type="method">
		<source id="Excel.CustomProperty.Delete">
			<context kind="class">CustomProperty</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CustomProperty.Name-->
	<element type="property">
		<source id="Excel.CustomProperty.Name">
			<context kind="class">CustomProperty</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CustomProperty.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomProperty.Parent">
			<context kind="class">CustomProperty</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CustomProperty.Value {Default}-->
	<element type="property">
		<source id="Excel.CustomProperty.Value">
			<context kind="class">CustomProperty</context>
			<name default="true">Value</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::CustomView-->
	<element type="class">
		<source id="Excel.CustomView">
			<name>CustomView</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::CustomView.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomView.Application">
			<context kind="class">CustomView</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CustomView.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomView.Creator">
			<context kind="class">CustomView</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CustomView.Delete-->
	<element type="method">
		<source id="Excel.CustomView.Delete">
			<context kind="class">CustomView</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CustomView.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomView.Name">
			<context kind="class">CustomView</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CustomView.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomView.Parent">
			<context kind="class">CustomView</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CustomView.PrintSettings {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomView.PrintSettings">
			<context kind="class">CustomView</context>
			<name>PrintSettings</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CustomView.RowColSettings {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomView.RowColSettings">
			<context kind="class">CustomView</context>
			<name>RowColSettings</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::CustomView.Show-->
	<element type="method">
		<source id="Excel.CustomView.Show">
			<context kind="class">CustomView</context>
			<name>Show</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::CustomViews-->
	<element type="class">
		<source id="Excel.CustomViews">
			<name>CustomViews</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::CustomViews.Add-->
	<element type="method">
		<source id="Excel.CustomViews.Add">
			<context kind="class">CustomViews</context>
			<name>Add</name>
			<type>CustomView</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>ViewName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrintSettings</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RowColSettings</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CustomViews.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomViews.Application">
			<context kind="class">CustomViews</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CustomViews.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomViews.Count">
			<context kind="class">CustomViews</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CustomViews.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomViews.Creator">
			<context kind="class">CustomViews</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CustomViews.Item-->
	<element type="method">
		<source id="Excel.CustomViews.Item">
			<context kind="class">CustomViews</context>
			<name>Item</name>
			<type>CustomView</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>ViewName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CustomViews.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.CustomViews.Parent">
			<context kind="class">CustomViews</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::DataLabel-->
	<element type="class">
		<source id="Excel.DataLabel">
			<name>DataLabel</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::DataLabel.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabel.Application">
			<context kind="class">DataLabel</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DataLabel.AutoScaleFont-->
	<element type="property">
		<source id="Excel.DataLabel.AutoScaleFont">
			<context kind="class">DataLabel</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabel.AutoText-->
	<element type="property">
		<source id="Excel.DataLabel.AutoText">
			<context kind="class">DataLabel</context>
			<name>AutoText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabel.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabel.Border">
			<context kind="class">DataLabel</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::DataLabel.Caption-->
	<element type="property">
		<source id="Excel.DataLabel.Caption">
			<context kind="class">DataLabel</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DataLabel.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabel.Characters">
			<context kind="class">DataLabel</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DataLabel.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabel.Creator">
			<context kind="class">DataLabel</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DataLabel.Delete-->
	<element type="method">
		<source id="Excel.DataLabel.Delete">
			<context kind="class">DataLabel</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabel.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabel.Fill">
			<context kind="class">DataLabel</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::DataLabel.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabel.Font">
			<context kind="class">DataLabel</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::DataLabel.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.DataLabel.HorizontalAlignment">
			<context kind="class">DataLabel</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabel.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabel.Interior">
			<context kind="class">DataLabel</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::DataLabel.Left-->
	<element type="property">
		<source id="Excel.DataLabel.Left">
			<context kind="class">DataLabel</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DataLabel.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabel.Name">
			<context kind="class">DataLabel</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DataLabel.NumberFormat-->
	<element type="property">
		<source id="Excel.DataLabel.NumberFormat">
			<context kind="class">DataLabel</context>
			<name>NumberFormat</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DataLabel.NumberFormatLinked-->
	<element type="property">
		<source id="Excel.DataLabel.NumberFormatLinked">
			<context kind="class">DataLabel</context>
			<name>NumberFormatLinked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabel.NumberFormatLocal-->
	<element type="property">
		<source id="Excel.DataLabel.NumberFormatLocal">
			<context kind="class">DataLabel</context>
			<name>NumberFormatLocal</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabel.Orientation-->
	<element type="property">
		<source id="Excel.DataLabel.Orientation">
			<context kind="class">DataLabel</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabel.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabel.Parent">
			<context kind="class">DataLabel</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::DataLabel.Position-->
	<element type="property">
		<source id="Excel.DataLabel.Position">
			<context kind="class">DataLabel</context>
			<name>Position</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DataLabel.ReadingOrder-->
	<element type="property">
		<source id="Excel.DataLabel.ReadingOrder">
			<context kind="class">DataLabel</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DataLabel.Select-->
	<element type="method">
		<source id="Excel.DataLabel.Select">
			<context kind="class">DataLabel</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabel.Separator-->
	<element type="property">
		<source id="Excel.DataLabel.Separator">
			<context kind="class">DataLabel</context>
			<name>Separator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabel.Shadow-->
	<element type="property">
		<source id="Excel.DataLabel.Shadow">
			<context kind="class">DataLabel</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabel.ShowBubbleSize-->
	<element type="property">
		<source id="Excel.DataLabel.ShowBubbleSize">
			<context kind="class">DataLabel</context>
			<name>ShowBubbleSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabel.ShowCategoryName-->
	<element type="property">
		<source id="Excel.DataLabel.ShowCategoryName">
			<context kind="class">DataLabel</context>
			<name>ShowCategoryName</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabel.ShowLegendKey-->
	<element type="property">
		<source id="Excel.DataLabel.ShowLegendKey">
			<context kind="class">DataLabel</context>
			<name>ShowLegendKey</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabel.ShowPercentage-->
	<element type="property">
		<source id="Excel.DataLabel.ShowPercentage">
			<context kind="class">DataLabel</context>
			<name>ShowPercentage</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabel.ShowSeriesName-->
	<element type="property">
		<source id="Excel.DataLabel.ShowSeriesName">
			<context kind="class">DataLabel</context>
			<name>ShowSeriesName</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabel.ShowValue-->
	<element type="property">
		<source id="Excel.DataLabel.ShowValue">
			<context kind="class">DataLabel</context>
			<name>ShowValue</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabel.Text-->
	<element type="property">
		<source id="Excel.DataLabel.Text">
			<context kind="class">DataLabel</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DataLabel.Top-->
	<element type="property">
		<source id="Excel.DataLabel.Top">
			<context kind="class">DataLabel</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DataLabel.Type-->
	<element type="property">
		<source id="Excel.DataLabel.Type">
			<context kind="class">DataLabel</context>
			<name>Type</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabel.VerticalAlignment-->
	<element type="property">
		<source id="Excel.DataLabel.VerticalAlignment">
			<context kind="class">DataLabel</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::DataLabels-->
	<element type="class">
		<source id="Excel.DataLabels">
			<name>DataLabels</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::DataLabels.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabels.Application">
			<context kind="class">DataLabels</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DataLabels.AutoScaleFont-->
	<element type="property">
		<source id="Excel.DataLabels.AutoScaleFont">
			<context kind="class">DataLabels</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabels.AutoText-->
	<element type="property">
		<source id="Excel.DataLabels.AutoText">
			<context kind="class">DataLabels</context>
			<name>AutoText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabels.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabels.Border">
			<context kind="class">DataLabels</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::DataLabels.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabels.Count">
			<context kind="class">DataLabels</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DataLabels.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabels.Creator">
			<context kind="class">DataLabels</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DataLabels.Delete-->
	<element type="method">
		<source id="Excel.DataLabels.Delete">
			<context kind="class">DataLabels</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabels.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabels.Fill">
			<context kind="class">DataLabels</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::DataLabels.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabels.Font">
			<context kind="class">DataLabels</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::DataLabels.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.DataLabels.HorizontalAlignment">
			<context kind="class">DataLabels</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabels.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabels.Interior">
			<context kind="class">DataLabels</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::DataLabels.Item-->
	<element type="method">
		<source id="Excel.DataLabels.Item">
			<context kind="class">DataLabels</context>
			<name>Item</name>
			<type>DataLabel</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DataLabels.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabels.Name">
			<context kind="class">DataLabels</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DataLabels.NumberFormat-->
	<element type="property">
		<source id="Excel.DataLabels.NumberFormat">
			<context kind="class">DataLabels</context>
			<name>NumberFormat</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DataLabels.NumberFormatLinked-->
	<element type="property">
		<source id="Excel.DataLabels.NumberFormatLinked">
			<context kind="class">DataLabels</context>
			<name>NumberFormatLinked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabels.NumberFormatLocal-->
	<element type="property">
		<source id="Excel.DataLabels.NumberFormatLocal">
			<context kind="class">DataLabels</context>
			<name>NumberFormatLocal</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabels.Orientation-->
	<element type="property">
		<source id="Excel.DataLabels.Orientation">
			<context kind="class">DataLabels</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabels.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataLabels.Parent">
			<context kind="class">DataLabels</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::DataLabels.Position-->
	<element type="property">
		<source id="Excel.DataLabels.Position">
			<context kind="class">DataLabels</context>
			<name>Position</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DataLabels.ReadingOrder-->
	<element type="property">
		<source id="Excel.DataLabels.ReadingOrder">
			<context kind="class">DataLabels</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DataLabels.Select-->
	<element type="method">
		<source id="Excel.DataLabels.Select">
			<context kind="class">DataLabels</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabels.Separator-->
	<element type="property">
		<source id="Excel.DataLabels.Separator">
			<context kind="class">DataLabels</context>
			<name>Separator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabels.Shadow-->
	<element type="property">
		<source id="Excel.DataLabels.Shadow">
			<context kind="class">DataLabels</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabels.ShowBubbleSize-->
	<element type="property">
		<source id="Excel.DataLabels.ShowBubbleSize">
			<context kind="class">DataLabels</context>
			<name>ShowBubbleSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabels.ShowCategoryName-->
	<element type="property">
		<source id="Excel.DataLabels.ShowCategoryName">
			<context kind="class">DataLabels</context>
			<name>ShowCategoryName</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabels.ShowLegendKey-->
	<element type="property">
		<source id="Excel.DataLabels.ShowLegendKey">
			<context kind="class">DataLabels</context>
			<name>ShowLegendKey</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabels.ShowPercentage-->
	<element type="property">
		<source id="Excel.DataLabels.ShowPercentage">
			<context kind="class">DataLabels</context>
			<name>ShowPercentage</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabels.ShowSeriesName-->
	<element type="property">
		<source id="Excel.DataLabels.ShowSeriesName">
			<context kind="class">DataLabels</context>
			<name>ShowSeriesName</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabels.ShowValue-->
	<element type="property">
		<source id="Excel.DataLabels.ShowValue">
			<context kind="class">DataLabels</context>
			<name>ShowValue</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataLabels.Type-->
	<element type="property">
		<source id="Excel.DataLabels.Type">
			<context kind="class">DataLabels</context>
			<name>Type</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataLabels.VerticalAlignment-->
	<element type="property">
		<source id="Excel.DataLabels.VerticalAlignment">
			<context kind="class">DataLabels</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::DataTable-->
	<element type="class">
		<source id="Excel.DataTable">
			<name>DataTable</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::DataTable.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataTable.Application">
			<context kind="class">DataTable</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DataTable.AutoScaleFont-->
	<element type="property">
		<source id="Excel.DataTable.AutoScaleFont">
			<context kind="class">DataTable</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DataTable.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataTable.Border">
			<context kind="class">DataTable</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::DataTable.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataTable.Creator">
			<context kind="class">DataTable</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DataTable.Delete-->
	<element type="method">
		<source id="Excel.DataTable.Delete">
			<context kind="class">DataTable</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::DataTable.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataTable.Font">
			<context kind="class">DataTable</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::DataTable.HasBorderHorizontal-->
	<element type="property">
		<source id="Excel.DataTable.HasBorderHorizontal">
			<context kind="class">DataTable</context>
			<name>HasBorderHorizontal</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataTable.HasBorderOutline-->
	<element type="property">
		<source id="Excel.DataTable.HasBorderOutline">
			<context kind="class">DataTable</context>
			<name>HasBorderOutline</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataTable.HasBorderVertical-->
	<element type="property">
		<source id="Excel.DataTable.HasBorderVertical">
			<context kind="class">DataTable</context>
			<name>HasBorderVertical</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DataTable.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DataTable.Parent">
			<context kind="class">DataTable</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::DataTable.Select-->
	<element type="method">
		<source id="Excel.DataTable.Select">
			<context kind="class">DataTable</context>
			<name>Select</name>
			<type>void</type>
		</source>
	</element>
	<!--property::DataTable.ShowLegendKey-->
	<element type="property">
		<source id="Excel.DataTable.ShowLegendKey">
			<context kind="class">DataTable</context>
			<name>ShowLegendKey</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::DefaultWebOptions-->
	<element type="class">
		<source id="Excel.DefaultWebOptions">
			<name>DefaultWebOptions</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::DefaultWebOptions.AllowPNG-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.AllowPNG">
			<context kind="class">DefaultWebOptions</context>
			<name>AllowPNG</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.AlwaysSaveInDefaultEncoding-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.AlwaysSaveInDefaultEncoding">
			<context kind="class">DefaultWebOptions</context>
			<name>AlwaysSaveInDefaultEncoding</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.Application">
			<context kind="class">DefaultWebOptions</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.CheckIfOfficeIsHTMLEditor-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.CheckIfOfficeIsHTMLEditor">
			<context kind="class">DefaultWebOptions</context>
			<name>CheckIfOfficeIsHTMLEditor</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.Creator">
			<context kind="class">DefaultWebOptions</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.DownloadComponents-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.DownloadComponents">
			<context kind="class">DefaultWebOptions</context>
			<name>DownloadComponents</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.Encoding-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.Encoding">
			<context kind="class">DefaultWebOptions</context>
			<name>Encoding</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.FolderSuffix {ReadOnly}-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.FolderSuffix">
			<context kind="class">DefaultWebOptions</context>
			<name>FolderSuffix</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.Fonts {ReadOnly}-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.Fonts">
			<context kind="class">DefaultWebOptions</context>
			<name>Fonts</name>
			<type>WebPageFonts</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.LoadPictures-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.LoadPictures">
			<context kind="class">DefaultWebOptions</context>
			<name>LoadPictures</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.LocationOfComponents-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.LocationOfComponents">
			<context kind="class">DefaultWebOptions</context>
			<name>LocationOfComponents</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.OrganizeInFolder-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.OrganizeInFolder">
			<context kind="class">DefaultWebOptions</context>
			<name>OrganizeInFolder</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.Parent">
			<context kind="class">DefaultWebOptions</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.PixelsPerInch-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.PixelsPerInch">
			<context kind="class">DefaultWebOptions</context>
			<name>PixelsPerInch</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.RelyOnCSS-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.RelyOnCSS">
			<context kind="class">DefaultWebOptions</context>
			<name>RelyOnCSS</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.RelyOnVML-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.RelyOnVML">
			<context kind="class">DefaultWebOptions</context>
			<name>RelyOnVML</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.SaveHiddenData-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.SaveHiddenData">
			<context kind="class">DefaultWebOptions</context>
			<name>SaveHiddenData</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.SaveNewWebPagesAsWebArchives-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.SaveNewWebPagesAsWebArchives">
			<context kind="class">DefaultWebOptions</context>
			<name>SaveNewWebPagesAsWebArchives</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.ScreenSize-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.ScreenSize">
			<context kind="class">DefaultWebOptions</context>
			<name>ScreenSize</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.TargetBrowser-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.TargetBrowser">
			<context kind="class">DefaultWebOptions</context>
			<name>TargetBrowser</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.UpdateLinksOnSave-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.UpdateLinksOnSave">
			<context kind="class">DefaultWebOptions</context>
			<name>UpdateLinksOnSave</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DefaultWebOptions.UseLongFileNames-->
	<element type="property">
		<source id="Excel.DefaultWebOptions.UseLongFileNames">
			<context kind="class">DefaultWebOptions</context>
			<name>UseLongFileNames</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::Diagram-->
	<element type="class">
		<source id="Excel.Diagram">
			<name>Diagram</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Diagram.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Diagram.Application">
			<context kind="class">Diagram</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Diagram.AutoFormat-->
	<element type="property">
		<source id="Excel.Diagram.AutoFormat">
			<context kind="class">Diagram</context>
			<name>AutoFormat</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Diagram.AutoLayout-->
	<element type="property">
		<source id="Excel.Diagram.AutoLayout">
			<context kind="class">Diagram</context>
			<name>AutoLayout</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Diagram.Convert-->
	<element type="method">
		<source id="Excel.Diagram.Convert">
			<context kind="class">Diagram</context>
			<name>Convert</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Diagram.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Diagram.Creator">
			<context kind="class">Diagram</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Diagram.FitText-->
	<element type="method">
		<source id="Excel.Diagram.FitText">
			<context kind="class">Diagram</context>
			<name>FitText</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Diagram.Nodes {ReadOnly}-->
	<element type="property">
		<source id="Excel.Diagram.Nodes">
			<context kind="class">Diagram</context>
			<name>Nodes</name>
			<type>DiagramNodes</type>
		</source>
	</element>
	<!--property::Diagram.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Diagram.Parent">
			<context kind="class">Diagram</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Diagram.Reverse-->
	<element type="property">
		<source id="Excel.Diagram.Reverse">
			<context kind="class">Diagram</context>
			<name>Reverse</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Diagram.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.Diagram.Type">
			<context kind="class">Diagram</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::DiagramNode-->
	<element type="class">
		<source id="Excel.DiagramNode">
			<name>DiagramNode</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::DiagramNode.AddNode-->
	<element type="method">
		<source id="Excel.DiagramNode.AddNode">
			<context kind="class">DiagramNode</context>
			<name>AddNode</name>
			<type>DiagramNode</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>pos</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>nodeType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DiagramNode.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNode.Application">
			<context kind="class">DiagramNode</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DiagramNode.Children {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNode.Children">
			<context kind="class">DiagramNode</context>
			<name>Children</name>
			<type>DiagramNodeChildren</type>
		</source>
	</element>
	<!--method::DiagramNode.CloneNode-->
	<element type="method">
		<source id="Excel.DiagramNode.CloneNode">
			<context kind="class">DiagramNode</context>
			<name>CloneNode</name>
			<type>DiagramNode</type>
			<parameter-list>
				<parameter>
					<type>boolean</type>
					<name>copyChildren</name>
				</parameter>
				<parameter>
					<type>DiagramNode</type>
					<name>pTargetNode</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>pos</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DiagramNode.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNode.Creator">
			<context kind="class">DiagramNode</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DiagramNode.Delete-->
	<element type="method">
		<source id="Excel.DiagramNode.Delete">
			<context kind="class">DiagramNode</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::DiagramNode.Diagram {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNode.Diagram">
			<context kind="class">DiagramNode</context>
			<name>Diagram</name>
			<type>IMsoDiagram</type>
		</source>
	</element>
	<!--property::DiagramNode.Layout-->
	<element type="property">
		<source id="Excel.DiagramNode.Layout">
			<context kind="class">DiagramNode</context>
			<name>Layout</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DiagramNode.MoveNode-->
	<element type="method">
		<source id="Excel.DiagramNode.MoveNode">
			<context kind="class">DiagramNode</context>
			<name>MoveNode</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>DiagramNode</type>
					<name>pTargetNode</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>pos</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DiagramNode.NextNode-->
	<element type="method">
		<source id="Excel.DiagramNode.NextNode">
			<context kind="class">DiagramNode</context>
			<name>NextNode</name>
			<type>DiagramNode</type>
		</source>
	</element>
	<!--property::DiagramNode.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNode.Parent">
			<context kind="class">DiagramNode</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::DiagramNode.PrevNode-->
	<element type="method">
		<source id="Excel.DiagramNode.PrevNode">
			<context kind="class">DiagramNode</context>
			<name>PrevNode</name>
			<type>DiagramNode</type>
		</source>
	</element>
	<!--method::DiagramNode.ReplaceNode-->
	<element type="method">
		<source id="Excel.DiagramNode.ReplaceNode">
			<context kind="class">DiagramNode</context>
			<name>ReplaceNode</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>DiagramNode</type>
					<name>pTargetNode</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DiagramNode.Root {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNode.Root">
			<context kind="class">DiagramNode</context>
			<name>Root</name>
			<type>DiagramNode</type>
		</source>
	</element>
	<!--property::DiagramNode.Shape {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNode.Shape">
			<context kind="class">DiagramNode</context>
			<name>Shape</name>
			<type>Shape</type>
		</source>
	</element>
	<!--method::DiagramNode.SwapNode-->
	<element type="method">
		<source id="Excel.DiagramNode.SwapNode">
			<context kind="class">DiagramNode</context>
			<name>SwapNode</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>DiagramNode</type>
					<name>pTargetNode</name>
				</parameter>
				<parameter optional="true">
					<type>boolean</type>
					<name>swapChildren</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DiagramNode.TextShape {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNode.TextShape">
			<context kind="class">DiagramNode</context>
			<name>TextShape</name>
			<type>Shape</type>
		</source>
	</element>
	<!--method::DiagramNode.TransferChildren-->
	<element type="method">
		<source id="Excel.DiagramNode.TransferChildren">
			<context kind="class">DiagramNode</context>
			<name>TransferChildren</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>DiagramNode</type>
					<name>pReceivingNode</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::DiagramNodeChildren-->
	<element type="class">
		<source id="Excel.DiagramNodeChildren">
			<name>DiagramNodeChildren</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::DiagramNodeChildren.AddNode-->
	<element type="method">
		<source id="Excel.DiagramNodeChildren.AddNode">
			<context kind="class">DiagramNodeChildren</context>
			<name>AddNode</name>
			<type>DiagramNode</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>nodeType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DiagramNodeChildren.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNodeChildren.Application">
			<context kind="class">DiagramNodeChildren</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DiagramNodeChildren.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNodeChildren.Count">
			<context kind="class">DiagramNodeChildren</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DiagramNodeChildren.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNodeChildren.Creator">
			<context kind="class">DiagramNodeChildren</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DiagramNodeChildren.FirstChild {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNodeChildren.FirstChild">
			<context kind="class">DiagramNodeChildren</context>
			<name>FirstChild</name>
			<type>DiagramNode</type>
		</source>
	</element>
	<!--method::DiagramNodeChildren.Item {Default}-->
	<element type="method">
		<source id="Excel.DiagramNodeChildren.Item">
			<context kind="class">DiagramNodeChildren</context>
			<name default="true">Item</name>
			<type>DiagramNode</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DiagramNodeChildren.LastChild {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNodeChildren.LastChild">
			<context kind="class">DiagramNodeChildren</context>
			<name>LastChild</name>
			<type>DiagramNode</type>
		</source>
	</element>
	<!--property::DiagramNodeChildren.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNodeChildren.Parent">
			<context kind="class">DiagramNodeChildren</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::DiagramNodeChildren.SelectAll-->
	<element type="method">
		<source id="Excel.DiagramNodeChildren.SelectAll">
			<context kind="class">DiagramNodeChildren</context>
			<name>SelectAll</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::DiagramNodes-->
	<element type="class">
		<source id="Excel.DiagramNodes">
			<name>DiagramNodes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::DiagramNodes.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNodes.Application">
			<context kind="class">DiagramNodes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DiagramNodes.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNodes.Count">
			<context kind="class">DiagramNodes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DiagramNodes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNodes.Creator">
			<context kind="class">DiagramNodes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DiagramNodes.Item {Default}-->
	<element type="method">
		<source id="Excel.DiagramNodes.Item">
			<context kind="class">DiagramNodes</context>
			<name default="true">Item</name>
			<type>DiagramNode</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DiagramNodes.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DiagramNodes.Parent">
			<context kind="class">DiagramNodes</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::DiagramNodes.SelectAll-->
	<element type="method">
		<source id="Excel.DiagramNodes.SelectAll">
			<context kind="class">DiagramNodes</context>
			<name>SelectAll</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::Dialog-->
	<element type="class">
		<source id="Excel.Dialog">
			<name>Dialog</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Dialog.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Dialog.Application">
			<context kind="class">Dialog</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Dialog.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Dialog.Creator">
			<context kind="class">Dialog</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Dialog.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Dialog.Parent">
			<context kind="class">Dialog</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Dialog.Show-->
	<element type="method">
		<source id="Excel.Dialog.Show">
			<context kind="class">Dialog</context>
			<name>Show</name>
			<type>boolean</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::DialogFrame-->
	<element type="class">
		<source id="Excel.DialogFrame">
			<name>DialogFrame</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::DialogFrame.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogFrame.Application">
			<context kind="class">DialogFrame</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DialogFrame.Caption-->
	<element type="property">
		<source id="Excel.DialogFrame.Caption">
			<context kind="class">DialogFrame</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DialogFrame.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogFrame.Characters">
			<context kind="class">DialogFrame</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogFrame.CheckSpelling-->
	<element type="method">
		<source id="Excel.DialogFrame.CheckSpelling">
			<context kind="class">DialogFrame</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogFrame.CopyPicture-->
	<element type="method">
		<source id="Excel.DialogFrame.CopyPicture">
			<context kind="class">DialogFrame</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogFrame.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogFrame.Creator">
			<context kind="class">DialogFrame</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DialogFrame.Height-->
	<element type="property">
		<source id="Excel.DialogFrame.Height">
			<context kind="class">DialogFrame</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DialogFrame.Left-->
	<element type="property">
		<source id="Excel.DialogFrame.Left">
			<context kind="class">DialogFrame</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DialogFrame.Locked-->
	<element type="property">
		<source id="Excel.DialogFrame.Locked">
			<context kind="class">DialogFrame</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DialogFrame.LockedText-->
	<element type="property">
		<source id="Excel.DialogFrame.LockedText">
			<context kind="class">DialogFrame</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DialogFrame.Name-->
	<element type="property">
		<source id="Excel.DialogFrame.Name">
			<context kind="class">DialogFrame</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DialogFrame.OnAction-->
	<element type="property">
		<source id="Excel.DialogFrame.OnAction">
			<context kind="class">DialogFrame</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DialogFrame.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogFrame.Parent">
			<context kind="class">DialogFrame</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::DialogFrame.Select-->
	<element type="method">
		<source id="Excel.DialogFrame.Select">
			<context kind="class">DialogFrame</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogFrame.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogFrame.ShapeRange">
			<context kind="class">DialogFrame</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::DialogFrame.Text-->
	<element type="property">
		<source id="Excel.DialogFrame.Text">
			<context kind="class">DialogFrame</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DialogFrame.Top-->
	<element type="property">
		<source id="Excel.DialogFrame.Top">
			<context kind="class">DialogFrame</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DialogFrame.Width-->
	<element type="property">
		<source id="Excel.DialogFrame.Width">
			<context kind="class">DialogFrame</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--Class::Dialogs-->
	<element type="class">
		<source id="Excel.Dialogs">
			<name>Dialogs</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Dialogs.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Dialogs.Application">
			<context kind="class">Dialogs</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Dialogs.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Dialogs.Count">
			<context kind="class">Dialogs</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Dialogs.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Dialogs.Creator">
			<context kind="class">Dialogs</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Dialogs.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Dialogs.Item">
			<context kind="class">Dialogs</context>
			<name default="true">Item</name>
			<type>Dialog</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Dialogs.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Dialogs.Parent">
			<context kind="class">Dialogs</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::DialogSheet-->
	<element type="class">
		<source id="Excel.DialogSheet">
			<name>DialogSheet</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::DialogSheet.Activate-->
	<element type="method">
		<source id="Excel.DialogSheet.Activate">
			<context kind="class">DialogSheet</context>
			<name>Activate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::DialogSheet.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.Application">
			<context kind="class">DialogSheet</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::DialogSheet.Arcs-->
	<element type="method">
		<source id="Excel.DialogSheet.Arcs">
			<context kind="class">DialogSheet</context>
			<name>Arcs</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.AutoFilter {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.AutoFilter">
			<context kind="class">DialogSheet</context>
			<name>AutoFilter</name>
			<type>AutoFilter</type>
		</source>
	</element>
	<!--method::DialogSheet.Buttons-->
	<element type="method">
		<source id="Excel.DialogSheet.Buttons">
			<context kind="class">DialogSheet</context>
			<name>Buttons</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.ChartObjects-->
	<element type="method">
		<source id="Excel.DialogSheet.ChartObjects">
			<context kind="class">DialogSheet</context>
			<name>ChartObjects</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.CheckBoxes-->
	<element type="method">
		<source id="Excel.DialogSheet.CheckBoxes">
			<context kind="class">DialogSheet</context>
			<name>CheckBoxes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.CheckSpelling-->
	<element type="method">
		<source id="Excel.DialogSheet.CheckSpelling">
			<context kind="class">DialogSheet</context>
			<name>CheckSpelling</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.CircleInvalid-->
	<element type="method">
		<source id="Excel.DialogSheet.CircleInvalid">
			<context kind="class">DialogSheet</context>
			<name>CircleInvalid</name>
			<type>void</type>
		</source>
	</element>
	<!--method::DialogSheet.ClearCircles-->
	<element type="method">
		<source id="Excel.DialogSheet.ClearCircles">
			<context kind="class">DialogSheet</context>
			<name>ClearCircles</name>
			<type>void</type>
		</source>
	</element>
	<!--property::DialogSheet.CodeName {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.CodeName">
			<context kind="class">DialogSheet</context>
			<name>CodeName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DialogSheet.Comments {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.Comments">
			<context kind="class">DialogSheet</context>
			<name>Comments</name>
			<type>Comments</type>
		</source>
	</element>
	<!--method::DialogSheet.Copy-->
	<element type="method">
		<source id="Excel.DialogSheet.Copy">
			<context kind="class">DialogSheet</context>
			<name>Copy</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.Creator">
			<context kind="class">DialogSheet</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DialogSheet.CustomProperties {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.CustomProperties">
			<context kind="class">DialogSheet</context>
			<name>CustomProperties</name>
			<type>CustomProperties</type>
		</source>
	</element>
	<!--property::DialogSheet.DefaultButton-->
	<element type="property">
		<source id="Excel.DialogSheet.DefaultButton">
			<context kind="class">DialogSheet</context>
			<name>DefaultButton</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::DialogSheet.Delete-->
	<element type="method">
		<source id="Excel.DialogSheet.Delete">
			<context kind="class">DialogSheet</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::DialogSheet.DialogFrame {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.DialogFrame">
			<context kind="class">DialogSheet</context>
			<name>DialogFrame</name>
			<type>DialogFrame</type>
		</source>
	</element>
	<!--property::DialogSheet.DisplayAutomaticPageBreaks-->
	<element type="property">
		<source id="Excel.DialogSheet.DisplayAutomaticPageBreaks">
			<context kind="class">DialogSheet</context>
			<name>DisplayAutomaticPageBreaks</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DialogSheet.DisplayPageBreaks-->
	<element type="property">
		<source id="Excel.DialogSheet.DisplayPageBreaks">
			<context kind="class">DialogSheet</context>
			<name>DisplayPageBreaks</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DialogSheet.DisplayRightToLeft-->
	<element type="property">
		<source id="Excel.DialogSheet.DisplayRightToLeft">
			<context kind="class">DialogSheet</context>
			<name>DisplayRightToLeft</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::DialogSheet.DrawingObjects-->
	<element type="method">
		<source id="Excel.DialogSheet.DrawingObjects">
			<context kind="class">DialogSheet</context>
			<name>DrawingObjects</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.Drawings-->
	<element type="method">
		<source id="Excel.DialogSheet.Drawings">
			<context kind="class">DialogSheet</context>
			<name>Drawings</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.DropDowns-->
	<element type="method">
		<source id="Excel.DialogSheet.DropDowns">
			<context kind="class">DialogSheet</context>
			<name>DropDowns</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.EditBoxes-->
	<element type="method">
		<source id="Excel.DialogSheet.EditBoxes">
			<context kind="class">DialogSheet</context>
			<name>EditBoxes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.EnableAutoFilter-->
	<element type="property">
		<source id="Excel.DialogSheet.EnableAutoFilter">
			<context kind="class">DialogSheet</context>
			<name>EnableAutoFilter</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DialogSheet.EnableCalculation-->
	<element type="property">
		<source id="Excel.DialogSheet.EnableCalculation">
			<context kind="class">DialogSheet</context>
			<name>EnableCalculation</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DialogSheet.EnableOutlining-->
	<element type="property">
		<source id="Excel.DialogSheet.EnableOutlining">
			<context kind="class">DialogSheet</context>
			<name>EnableOutlining</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DialogSheet.EnablePivotTable-->
	<element type="property">
		<source id="Excel.DialogSheet.EnablePivotTable">
			<context kind="class">DialogSheet</context>
			<name>EnablePivotTable</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DialogSheet.EnableSelection-->
	<element type="property">
		<source id="Excel.DialogSheet.EnableSelection">
			<context kind="class">DialogSheet</context>
			<name>EnableSelection</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DialogSheet.Evaluate-->
	<element type="method">
		<source id="Excel.DialogSheet.Evaluate">
			<context kind="class">DialogSheet</context>
			<name>Evaluate</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.Focus-->
	<element type="property">
		<source id="Excel.DialogSheet.Focus">
			<context kind="class">DialogSheet</context>
			<name>Focus</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::DialogSheet.GroupBoxes-->
	<element type="method">
		<source id="Excel.DialogSheet.GroupBoxes">
			<context kind="class">DialogSheet</context>
			<name>GroupBoxes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.GroupObjects-->
	<element type="method">
		<source id="Excel.DialogSheet.GroupObjects">
			<context kind="class">DialogSheet</context>
			<name>GroupObjects</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.Hide-->
	<element type="method">
		<source id="Excel.DialogSheet.Hide">
			<context kind="class">DialogSheet</context>
			<name>Hide</name>
			<type>boolean</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.HPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.HPageBreaks">
			<context kind="class">DialogSheet</context>
			<name>HPageBreaks</name>
			<type>HPageBreaks</type>
		</source>
	</element>
	<!--property::DialogSheet.Hyperlinks {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.Hyperlinks">
			<context kind="class">DialogSheet</context>
			<name>Hyperlinks</name>
			<type>Hyperlinks</type>
		</source>
	</element>
	<!--property::DialogSheet.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.Index">
			<context kind="class">DialogSheet</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DialogSheet.Labels-->
	<element type="method">
		<source id="Excel.DialogSheet.Labels">
			<context kind="class">DialogSheet</context>
			<name>Labels</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.Lines-->
	<element type="method">
		<source id="Excel.DialogSheet.Lines">
			<context kind="class">DialogSheet</context>
			<name>Lines</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.ListBoxes-->
	<element type="method">
		<source id="Excel.DialogSheet.ListBoxes">
			<context kind="class">DialogSheet</context>
			<name>ListBoxes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.MailEnvelope {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.MailEnvelope">
			<context kind="class">DialogSheet</context>
			<name>MailEnvelope</name>
			<type>MsoEnvelope</type>
		</source>
	</element>
	<!--method::DialogSheet.Move-->
	<element type="method">
		<source id="Excel.DialogSheet.Move">
			<context kind="class">DialogSheet</context>
			<name>Move</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.Name-->
	<element type="property">
		<source id="Excel.DialogSheet.Name">
			<context kind="class">DialogSheet</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DialogSheet.Names {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.Names">
			<context kind="class">DialogSheet</context>
			<name>Names</name>
			<type>Names</type>
		</source>
	</element>
	<!--property::DialogSheet.Next {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.Next">
			<context kind="class">DialogSheet</context>
			<name>Next</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::DialogSheet.OLEObjects-->
	<element type="method">
		<source id="Excel.DialogSheet.OLEObjects">
			<context kind="class">DialogSheet</context>
			<name>OLEObjects</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.OnDoubleClick-->
	<element type="property">
		<source id="Excel.DialogSheet.OnDoubleClick">
			<context kind="class">DialogSheet</context>
			<name>OnDoubleClick</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DialogSheet.OnSheetActivate-->
	<element type="property">
		<source id="Excel.DialogSheet.OnSheetActivate">
			<context kind="class">DialogSheet</context>
			<name>OnSheetActivate</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DialogSheet.OnSheetDeactivate-->
	<element type="property">
		<source id="Excel.DialogSheet.OnSheetDeactivate">
			<context kind="class">DialogSheet</context>
			<name>OnSheetDeactivate</name>
			<type>String</type>
		</source>
	</element>
	<!--method::DialogSheet.OptionButtons-->
	<element type="method">
		<source id="Excel.DialogSheet.OptionButtons">
			<context kind="class">DialogSheet</context>
			<name>OptionButtons</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.Ovals-->
	<element type="method">
		<source id="Excel.DialogSheet.Ovals">
			<context kind="class">DialogSheet</context>
			<name>Ovals</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.PageSetup {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.PageSetup">
			<context kind="class">DialogSheet</context>
			<name>PageSetup</name>
			<type>PageSetup</type>
		</source>
	</element>
	<!--property::DialogSheet.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.Parent">
			<context kind="class">DialogSheet</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::DialogSheet.Paste-->
	<element type="method">
		<source id="Excel.DialogSheet.Paste">
			<context kind="class">DialogSheet</context>
			<name>Paste</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Destination</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Link</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.PasteSpecial-->
	<element type="method">
		<source id="Excel.DialogSheet.PasteSpecial">
			<context kind="class">DialogSheet</context>
			<name>PasteSpecial</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Format</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Link</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DisplayAsIcon</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IconFileName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IconIndex</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IconLabel</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>NoHTMLFormatting</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.Pictures-->
	<element type="method">
		<source id="Excel.DialogSheet.Pictures">
			<context kind="class">DialogSheet</context>
			<name>Pictures</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.Previous {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.Previous">
			<context kind="class">DialogSheet</context>
			<name>Previous</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::DialogSheet.PrintOut-->
	<element type="method">
		<source id="Excel.DialogSheet.PrintOut">
			<context kind="class">DialogSheet</context>
			<name>PrintOut</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>From</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>To</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Copies</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Preview</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ActivePrinter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrintToFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Collate</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrToFileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.PrintPreview-->
	<element type="method">
		<source id="Excel.DialogSheet.PrintPreview">
			<context kind="class">DialogSheet</context>
			<name>PrintPreview</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>EnableChanges</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.Protect-->
	<element type="method">
		<source id="Excel.DialogSheet.Protect">
			<context kind="class">DialogSheet</context>
			<name>Protect</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DrawingObjects</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Contents</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Scenarios</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>UserInterfaceOnly</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowFormattingCells</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowFormattingColumns</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowFormattingRows</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowInsertingColumns</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowInsertingRows</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowInsertingHyperlinks</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowDeletingColumns</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowDeletingRows</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowSorting</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowFiltering</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowUsingPivotTables</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.ProtectContents {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.ProtectContents">
			<context kind="class">DialogSheet</context>
			<name>ProtectContents</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DialogSheet.ProtectDrawingObjects {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.ProtectDrawingObjects">
			<context kind="class">DialogSheet</context>
			<name>ProtectDrawingObjects</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DialogSheet.Protection {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.Protection">
			<context kind="class">DialogSheet</context>
			<name>Protection</name>
			<type>Protection</type>
		</source>
	</element>
	<!--property::DialogSheet.ProtectionMode {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.ProtectionMode">
			<context kind="class">DialogSheet</context>
			<name>ProtectionMode</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DialogSheet.ProtectScenarios {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.ProtectScenarios">
			<context kind="class">DialogSheet</context>
			<name>ProtectScenarios</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DialogSheet.QueryTables {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.QueryTables">
			<context kind="class">DialogSheet</context>
			<name>QueryTables</name>
			<type>QueryTables</type>
		</source>
	</element>
	<!--method::DialogSheet.Rectangles-->
	<element type="method">
		<source id="Excel.DialogSheet.Rectangles">
			<context kind="class">DialogSheet</context>
			<name>Rectangles</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.ResetAllPageBreaks-->
	<element type="method">
		<source id="Excel.DialogSheet.ResetAllPageBreaks">
			<context kind="class">DialogSheet</context>
			<name>ResetAllPageBreaks</name>
			<type>void</type>
		</source>
	</element>
	<!--method::DialogSheet.SaveAs-->
	<element type="method">
		<source id="Excel.DialogSheet.SaveAs">
			<context kind="class">DialogSheet</context>
			<name>SaveAs</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>FileFormat</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>WriteResPassword</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReadOnlyRecommended</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CreateBackup</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AddToMru</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TextCodepage</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TextVisualLayout</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Local</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.Scripts {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.Scripts">
			<context kind="class">DialogSheet</context>
			<name>Scripts</name>
			<type>Scripts</type>
		</source>
	</element>
	<!--property::DialogSheet.ScrollArea-->
	<element type="property">
		<source id="Excel.DialogSheet.ScrollArea">
			<context kind="class">DialogSheet</context>
			<name>ScrollArea</name>
			<type>String</type>
		</source>
	</element>
	<!--method::DialogSheet.ScrollBars-->
	<element type="method">
		<source id="Excel.DialogSheet.ScrollBars">
			<context kind="class">DialogSheet</context>
			<name>ScrollBars</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.Select-->
	<element type="method">
		<source id="Excel.DialogSheet.Select">
			<context kind="class">DialogSheet</context>
			<name>Select</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.Shapes {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.Shapes">
			<context kind="class">DialogSheet</context>
			<name>Shapes</name>
			<type>Shapes</type>
		</source>
	</element>
	<!--method::DialogSheet.Show-->
	<element type="method">
		<source id="Excel.DialogSheet.Show">
			<context kind="class">DialogSheet</context>
			<name>Show</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DialogSheet.SmartTags {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.SmartTags">
			<context kind="class">DialogSheet</context>
			<name>SmartTags</name>
			<type>SmartTags</type>
		</source>
	</element>
	<!--method::DialogSheet.Spinners-->
	<element type="method">
		<source id="Excel.DialogSheet.Spinners">
			<context kind="class">DialogSheet</context>
			<name>Spinners</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.Tab {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.Tab">
			<context kind="class">DialogSheet</context>
			<name>Tab</name>
			<type>Tab</type>
		</source>
	</element>
	<!--method::DialogSheet.TextBoxes-->
	<element type="method">
		<source id="Excel.DialogSheet.TextBoxes">
			<context kind="class">DialogSheet</context>
			<name>TextBoxes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheet.Unprotect-->
	<element type="method">
		<source id="Excel.DialogSheet.Unprotect">
			<context kind="class">DialogSheet</context>
			<name>Unprotect</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheet.Visible-->
	<element type="property">
		<source id="Excel.DialogSheet.Visible">
			<context kind="class">DialogSheet</context>
			<name>Visible</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DialogSheet.VPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheet.VPageBreaks">
			<context kind="class">DialogSheet</context>
			<name>VPageBreaks</name>
			<type>VPageBreaks</type>
		</source>
	</element>
	<!--Class::DialogSheets-->
	<element type="class">
		<source id="Excel.DialogSheets">
			<name>DialogSheets</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::DialogSheets.Add-->
	<element type="method">
		<source id="Excel.DialogSheets.Add">
			<context kind="class">DialogSheets</context>
			<name>Add</name>
			<type>DialogSheet</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Count</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheets.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheets.Application">
			<context kind="class">DialogSheets</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::DialogSheets.Copy-->
	<element type="method">
		<source id="Excel.DialogSheets.Copy">
			<context kind="class">DialogSheets</context>
			<name>Copy</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheets.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheets.Count">
			<context kind="class">DialogSheets</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DialogSheets.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheets.Creator">
			<context kind="class">DialogSheets</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DialogSheets.Delete-->
	<element type="method">
		<source id="Excel.DialogSheets.Delete">
			<context kind="class">DialogSheets</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::DialogSheets.HPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheets.HPageBreaks">
			<context kind="class">DialogSheets</context>
			<name>HPageBreaks</name>
			<type>HPageBreaks</type>
		</source>
	</element>
	<!--property::DialogSheets.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheets.Item">
			<context kind="class">DialogSheets</context>
			<name default="true">Item</name>
			<type>DialogSheet</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheets.Move-->
	<element type="method">
		<source id="Excel.DialogSheets.Move">
			<context kind="class">DialogSheets</context>
			<name>Move</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheets.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheets.Parent">
			<context kind="class">DialogSheets</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::DialogSheets.PrintOut-->
	<element type="method">
		<source id="Excel.DialogSheets.PrintOut">
			<context kind="class">DialogSheets</context>
			<name>PrintOut</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>From</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>To</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Copies</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Preview</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ActivePrinter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrintToFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Collate</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrToFileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheets.PrintPreview-->
	<element type="method">
		<source id="Excel.DialogSheets.PrintPreview">
			<context kind="class">DialogSheets</context>
			<name>PrintPreview</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>EnableChanges</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DialogSheets.Select-->
	<element type="method">
		<source id="Excel.DialogSheets.Select">
			<context kind="class">DialogSheets</context>
			<name>Select</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DialogSheets.Visible-->
	<element type="property">
		<source id="Excel.DialogSheets.Visible">
			<context kind="class">DialogSheets</context>
			<name>Visible</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DialogSheets.VPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.DialogSheets.VPageBreaks">
			<context kind="class">DialogSheets</context>
			<name>VPageBreaks</name>
			<type>VPageBreaks</type>
		</source>
	</element>
	<!--Class::DisplayUnitLabel-->
	<element type="class">
		<source id="Excel.DisplayUnitLabel">
			<name>DisplayUnitLabel</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::DisplayUnitLabel.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Application">
			<context kind="class">DisplayUnitLabel</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.AutoScaleFont-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.AutoScaleFont">
			<context kind="class">DisplayUnitLabel</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Border">
			<context kind="class">DisplayUnitLabel</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Caption-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Caption">
			<context kind="class">DisplayUnitLabel</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Characters">
			<context kind="class">DisplayUnitLabel</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Creator">
			<context kind="class">DisplayUnitLabel</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DisplayUnitLabel.Delete-->
	<element type="method">
		<source id="Excel.DisplayUnitLabel.Delete">
			<context kind="class">DisplayUnitLabel</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Fill">
			<context kind="class">DisplayUnitLabel</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Font">
			<context kind="class">DisplayUnitLabel</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.HorizontalAlignment">
			<context kind="class">DisplayUnitLabel</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Interior">
			<context kind="class">DisplayUnitLabel</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Left-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Left">
			<context kind="class">DisplayUnitLabel</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Name">
			<context kind="class">DisplayUnitLabel</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Orientation-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Orientation">
			<context kind="class">DisplayUnitLabel</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Parent">
			<context kind="class">DisplayUnitLabel</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.ReadingOrder-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.ReadingOrder">
			<context kind="class">DisplayUnitLabel</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DisplayUnitLabel.Select-->
	<element type="method">
		<source id="Excel.DisplayUnitLabel.Select">
			<context kind="class">DisplayUnitLabel</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Shadow-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Shadow">
			<context kind="class">DisplayUnitLabel</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Text-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Text">
			<context kind="class">DisplayUnitLabel</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.Top-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.Top">
			<context kind="class">DisplayUnitLabel</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DisplayUnitLabel.VerticalAlignment-->
	<element type="property">
		<source id="Excel.DisplayUnitLabel.VerticalAlignment">
			<context kind="class">DisplayUnitLabel</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::DownBars-->
	<element type="class">
		<source id="Excel.DownBars">
			<name>DownBars</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::DownBars.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DownBars.Application">
			<context kind="class">DownBars</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DownBars.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.DownBars.Border">
			<context kind="class">DownBars</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::DownBars.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DownBars.Creator">
			<context kind="class">DownBars</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DownBars.Delete-->
	<element type="method">
		<source id="Excel.DownBars.Delete">
			<context kind="class">DownBars</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DownBars.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.DownBars.Fill">
			<context kind="class">DownBars</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::DownBars.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.DownBars.Interior">
			<context kind="class">DownBars</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::DownBars.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.DownBars.Name">
			<context kind="class">DownBars</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DownBars.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DownBars.Parent">
			<context kind="class">DownBars</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::DownBars.Select-->
	<element type="method">
		<source id="Excel.DownBars.Select">
			<context kind="class">DownBars</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Drawing-->
	<element type="class">
		<source id="Excel.Drawing">
			<name>Drawing</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Drawing.AddIndent-->
	<element type="property">
		<source id="Excel.Drawing.AddIndent">
			<context kind="class">Drawing</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Drawing.AddVertex-->
	<element type="method">
		<source id="Excel.Drawing.AddVertex">
			<context kind="class">Drawing</context>
			<name>AddVertex</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Drawing.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawing.Application">
			<context kind="class">Drawing</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Drawing.AutoScaleFont-->
	<element type="property">
		<source id="Excel.Drawing.AutoScaleFont">
			<context kind="class">Drawing</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawing.AutoSize-->
	<element type="property">
		<source id="Excel.Drawing.AutoSize">
			<context kind="class">Drawing</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawing.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawing.Border">
			<context kind="class">Drawing</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::Drawing.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawing.BottomRightCell">
			<context kind="class">Drawing</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Drawing.BringToFront-->
	<element type="method">
		<source id="Excel.Drawing.BringToFront">
			<context kind="class">Drawing</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawing.Caption-->
	<element type="property">
		<source id="Excel.Drawing.Caption">
			<context kind="class">Drawing</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Drawing.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawing.Characters">
			<context kind="class">Drawing</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Drawing.CheckSpelling-->
	<element type="method">
		<source id="Excel.Drawing.CheckSpelling">
			<context kind="class">Drawing</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Drawing.Copy-->
	<element type="method">
		<source id="Excel.Drawing.Copy">
			<context kind="class">Drawing</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Drawing.CopyPicture-->
	<element type="method">
		<source id="Excel.Drawing.CopyPicture">
			<context kind="class">Drawing</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Drawing.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawing.Creator">
			<context kind="class">Drawing</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Drawing.Cut-->
	<element type="method">
		<source id="Excel.Drawing.Cut">
			<context kind="class">Drawing</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Drawing.Delete-->
	<element type="method">
		<source id="Excel.Drawing.Delete">
			<context kind="class">Drawing</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Drawing.Duplicate-->
	<element type="method">
		<source id="Excel.Drawing.Duplicate">
			<context kind="class">Drawing</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Drawing.Enabled-->
	<element type="property">
		<source id="Excel.Drawing.Enabled">
			<context kind="class">Drawing</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawing.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawing.Font">
			<context kind="class">Drawing</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Drawing.Formula-->
	<element type="property">
		<source id="Excel.Drawing.Formula">
			<context kind="class">Drawing</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Drawing.Height-->
	<element type="property">
		<source id="Excel.Drawing.Height">
			<context kind="class">Drawing</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Drawing.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.Drawing.HorizontalAlignment">
			<context kind="class">Drawing</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawing.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawing.Index">
			<context kind="class">Drawing</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Drawing.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawing.Interior">
			<context kind="class">Drawing</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::Drawing.Left-->
	<element type="property">
		<source id="Excel.Drawing.Left">
			<context kind="class">Drawing</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Drawing.Locked-->
	<element type="property">
		<source id="Excel.Drawing.Locked">
			<context kind="class">Drawing</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawing.LockedText-->
	<element type="property">
		<source id="Excel.Drawing.LockedText">
			<context kind="class">Drawing</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawing.Name-->
	<element type="property">
		<source id="Excel.Drawing.Name">
			<context kind="class">Drawing</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Drawing.OnAction-->
	<element type="property">
		<source id="Excel.Drawing.OnAction">
			<context kind="class">Drawing</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Drawing.Orientation-->
	<element type="property">
		<source id="Excel.Drawing.Orientation">
			<context kind="class">Drawing</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawing.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawing.Parent">
			<context kind="class">Drawing</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Drawing.Placement-->
	<element type="property">
		<source id="Excel.Drawing.Placement">
			<context kind="class">Drawing</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawing.PrintObject-->
	<element type="property">
		<source id="Excel.Drawing.PrintObject">
			<context kind="class">Drawing</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawing.ReadingOrder-->
	<element type="property">
		<source id="Excel.Drawing.ReadingOrder">
			<context kind="class">Drawing</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Drawing.Reshape-->
	<element type="method">
		<source id="Excel.Drawing.Reshape">
			<context kind="class">Drawing</context>
			<name>Reshape</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Vertex</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Insert</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Left</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Top</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Drawing.Select-->
	<element type="method">
		<source id="Excel.Drawing.Select">
			<context kind="class">Drawing</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Drawing.SendToBack-->
	<element type="method">
		<source id="Excel.Drawing.SendToBack">
			<context kind="class">Drawing</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawing.Shadow-->
	<element type="property">
		<source id="Excel.Drawing.Shadow">
			<context kind="class">Drawing</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawing.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawing.ShapeRange">
			<context kind="class">Drawing</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Drawing.Text-->
	<element type="property">
		<source id="Excel.Drawing.Text">
			<context kind="class">Drawing</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Drawing.Top-->
	<element type="property">
		<source id="Excel.Drawing.Top">
			<context kind="class">Drawing</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Drawing.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawing.TopLeftCell">
			<context kind="class">Drawing</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Drawing.VerticalAlignment-->
	<element type="property">
		<source id="Excel.Drawing.VerticalAlignment">
			<context kind="class">Drawing</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawing.Vertices {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawing.Vertices">
			<context kind="class">Drawing</context>
			<name>Vertices</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Drawing.Visible-->
	<element type="property">
		<source id="Excel.Drawing.Visible">
			<context kind="class">Drawing</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawing.Width-->
	<element type="property">
		<source id="Excel.Drawing.Width">
			<context kind="class">Drawing</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Drawing.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawing.ZOrder">
			<context kind="class">Drawing</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::DrawingObjects-->
	<element type="class">
		<source id="Excel.DrawingObjects">
			<name>DrawingObjects</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::DrawingObjects.Accelerator-->
	<element type="property">
		<source id="Excel.DrawingObjects.Accelerator">
			<context kind="class">DrawingObjects</context>
			<name>Accelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DrawingObjects.AddIndent-->
	<element type="property">
		<source id="Excel.DrawingObjects.AddIndent">
			<context kind="class">DrawingObjects</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::DrawingObjects.AddItem-->
	<element type="method">
		<source id="Excel.DrawingObjects.AddItem">
			<context kind="class">DrawingObjects</context>
			<name>AddItem</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Text</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DrawingObjects.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DrawingObjects.Application">
			<context kind="class">DrawingObjects</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DrawingObjects.ArrowHeadLength-->
	<element type="property">
		<source id="Excel.DrawingObjects.ArrowHeadLength">
			<context kind="class">DrawingObjects</context>
			<name>ArrowHeadLength</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DrawingObjects.ArrowHeadStyle-->
	<element type="property">
		<source id="Excel.DrawingObjects.ArrowHeadStyle">
			<context kind="class">DrawingObjects</context>
			<name>ArrowHeadStyle</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DrawingObjects.ArrowHeadWidth-->
	<element type="property">
		<source id="Excel.DrawingObjects.ArrowHeadWidth">
			<context kind="class">DrawingObjects</context>
			<name>ArrowHeadWidth</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DrawingObjects.AutoSize-->
	<element type="property">
		<source id="Excel.DrawingObjects.AutoSize">
			<context kind="class">DrawingObjects</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.DrawingObjects.Border">
			<context kind="class">DrawingObjects</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::DrawingObjects.BringToFront-->
	<element type="method">
		<source id="Excel.DrawingObjects.BringToFront">
			<context kind="class">DrawingObjects</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DrawingObjects.CancelButton-->
	<element type="property">
		<source id="Excel.DrawingObjects.CancelButton">
			<context kind="class">DrawingObjects</context>
			<name>CancelButton</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.Caption-->
	<element type="property">
		<source id="Excel.DrawingObjects.Caption">
			<context kind="class">DrawingObjects</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DrawingObjects.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.DrawingObjects.Characters">
			<context kind="class">DrawingObjects</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DrawingObjects.CheckSpelling-->
	<element type="method">
		<source id="Excel.DrawingObjects.CheckSpelling">
			<context kind="class">DrawingObjects</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DrawingObjects.Copy-->
	<element type="method">
		<source id="Excel.DrawingObjects.Copy">
			<context kind="class">DrawingObjects</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::DrawingObjects.CopyPicture-->
	<element type="method">
		<source id="Excel.DrawingObjects.CopyPicture">
			<context kind="class">DrawingObjects</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DrawingObjects.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.DrawingObjects.Count">
			<context kind="class">DrawingObjects</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DrawingObjects.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DrawingObjects.Creator">
			<context kind="class">DrawingObjects</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DrawingObjects.Cut-->
	<element type="method">
		<source id="Excel.DrawingObjects.Cut">
			<context kind="class">DrawingObjects</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DrawingObjects.DefaultButton-->
	<element type="property">
		<source id="Excel.DrawingObjects.DefaultButton">
			<context kind="class">DrawingObjects</context>
			<name>DefaultButton</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::DrawingObjects.Delete-->
	<element type="method">
		<source id="Excel.DrawingObjects.Delete">
			<context kind="class">DrawingObjects</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DrawingObjects.DismissButton-->
	<element type="property">
		<source id="Excel.DrawingObjects.DismissButton">
			<context kind="class">DrawingObjects</context>
			<name>DismissButton</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.Display3DShading-->
	<element type="property">
		<source id="Excel.DrawingObjects.Display3DShading">
			<context kind="class">DrawingObjects</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.DisplayVerticalScrollBar-->
	<element type="property">
		<source id="Excel.DrawingObjects.DisplayVerticalScrollBar">
			<context kind="class">DrawingObjects</context>
			<name>DisplayVerticalScrollBar</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.DropDownLines-->
	<element type="property">
		<source id="Excel.DrawingObjects.DropDownLines">
			<context kind="class">DrawingObjects</context>
			<name>DropDownLines</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DrawingObjects.Duplicate-->
	<element type="method">
		<source id="Excel.DrawingObjects.Duplicate">
			<context kind="class">DrawingObjects</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::DrawingObjects.Enabled-->
	<element type="property">
		<source id="Excel.DrawingObjects.Enabled">
			<context kind="class">DrawingObjects</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.DrawingObjects.Font">
			<context kind="class">DrawingObjects</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--method::DrawingObjects.Group-->
	<element type="method">
		<source id="Excel.DrawingObjects.Group">
			<context kind="class">DrawingObjects</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::DrawingObjects.Height-->
	<element type="property">
		<source id="Excel.DrawingObjects.Height">
			<context kind="class">DrawingObjects</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DrawingObjects.HelpButton-->
	<element type="property">
		<source id="Excel.DrawingObjects.HelpButton">
			<context kind="class">DrawingObjects</context>
			<name>HelpButton</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.DrawingObjects.HorizontalAlignment">
			<context kind="class">DrawingObjects</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DrawingObjects.InputType-->
	<element type="property">
		<source id="Excel.DrawingObjects.InputType">
			<context kind="class">DrawingObjects</context>
			<name>InputType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DrawingObjects.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.DrawingObjects.Interior">
			<context kind="class">DrawingObjects</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::DrawingObjects.Item-->
	<element type="method">
		<source id="Excel.DrawingObjects.Item">
			<context kind="class">DrawingObjects</context>
			<name>Item</name>
			<type>DrawingObject</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DrawingObjects.LargeChange-->
	<element type="property">
		<source id="Excel.DrawingObjects.LargeChange">
			<context kind="class">DrawingObjects</context>
			<name>LargeChange</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DrawingObjects.Left-->
	<element type="property">
		<source id="Excel.DrawingObjects.Left">
			<context kind="class">DrawingObjects</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--method::DrawingObjects.LinkCombo-->
	<element type="method">
		<source id="Excel.DrawingObjects.LinkCombo">
			<context kind="class">DrawingObjects</context>
			<name>LinkCombo</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Link</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DrawingObjects.LinkedCell-->
	<element type="property">
		<source id="Excel.DrawingObjects.LinkedCell">
			<context kind="class">DrawingObjects</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--method::DrawingObjects.List-->
	<element type="method">
		<source id="Excel.DrawingObjects.List">
			<context kind="class">DrawingObjects</context>
			<name>List</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DrawingObjects.ListFillRange-->
	<element type="property">
		<source id="Excel.DrawingObjects.ListFillRange">
			<context kind="class">DrawingObjects</context>
			<name>ListFillRange</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DrawingObjects.ListIndex-->
	<element type="property">
		<source id="Excel.DrawingObjects.ListIndex">
			<context kind="class">DrawingObjects</context>
			<name>ListIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DrawingObjects.Locked-->
	<element type="property">
		<source id="Excel.DrawingObjects.Locked">
			<context kind="class">DrawingObjects</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.LockedText-->
	<element type="property">
		<source id="Excel.DrawingObjects.LockedText">
			<context kind="class">DrawingObjects</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.Max-->
	<element type="property">
		<source id="Excel.DrawingObjects.Max">
			<context kind="class">DrawingObjects</context>
			<name>Max</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DrawingObjects.Min-->
	<element type="property">
		<source id="Excel.DrawingObjects.Min">
			<context kind="class">DrawingObjects</context>
			<name>Min</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DrawingObjects.MultiLine-->
	<element type="property">
		<source id="Excel.DrawingObjects.MultiLine">
			<context kind="class">DrawingObjects</context>
			<name>MultiLine</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.MultiSelect-->
	<element type="property">
		<source id="Excel.DrawingObjects.MultiSelect">
			<context kind="class">DrawingObjects</context>
			<name>MultiSelect</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.OnAction-->
	<element type="property">
		<source id="Excel.DrawingObjects.OnAction">
			<context kind="class">DrawingObjects</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DrawingObjects.Orientation-->
	<element type="property">
		<source id="Excel.DrawingObjects.Orientation">
			<context kind="class">DrawingObjects</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DrawingObjects.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DrawingObjects.Parent">
			<context kind="class">DrawingObjects</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::DrawingObjects.PhoneticAccelerator-->
	<element type="property">
		<source id="Excel.DrawingObjects.PhoneticAccelerator">
			<context kind="class">DrawingObjects</context>
			<name>PhoneticAccelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DrawingObjects.Placement-->
	<element type="property">
		<source id="Excel.DrawingObjects.Placement">
			<context kind="class">DrawingObjects</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DrawingObjects.PrintObject-->
	<element type="property">
		<source id="Excel.DrawingObjects.PrintObject">
			<context kind="class">DrawingObjects</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.ReadingOrder-->
	<element type="property">
		<source id="Excel.DrawingObjects.ReadingOrder">
			<context kind="class">DrawingObjects</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DrawingObjects.RemoveAllItems-->
	<element type="method">
		<source id="Excel.DrawingObjects.RemoveAllItems">
			<context kind="class">DrawingObjects</context>
			<name>RemoveAllItems</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::DrawingObjects.RemoveItem-->
	<element type="method">
		<source id="Excel.DrawingObjects.RemoveItem">
			<context kind="class">DrawingObjects</context>
			<name>RemoveItem</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Count</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DrawingObjects.Reshape-->
	<element type="method">
		<source id="Excel.DrawingObjects.Reshape">
			<context kind="class">DrawingObjects</context>
			<name>Reshape</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Vertex</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Insert</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Left</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Top</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DrawingObjects.RoundedCorners-->
	<element type="property">
		<source id="Excel.DrawingObjects.RoundedCorners">
			<context kind="class">DrawingObjects</context>
			<name>RoundedCorners</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::DrawingObjects.Select-->
	<element type="method">
		<source id="Excel.DrawingObjects.Select">
			<context kind="class">DrawingObjects</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DrawingObjects.Selected-->
	<element type="method">
		<source id="Excel.DrawingObjects.Selected">
			<context kind="class">DrawingObjects</context>
			<name>Selected</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DrawingObjects.SendToBack-->
	<element type="method">
		<source id="Excel.DrawingObjects.SendToBack">
			<context kind="class">DrawingObjects</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DrawingObjects.Shadow-->
	<element type="property">
		<source id="Excel.DrawingObjects.Shadow">
			<context kind="class">DrawingObjects</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.DrawingObjects.ShapeRange">
			<context kind="class">DrawingObjects</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::DrawingObjects.SmallChange-->
	<element type="property">
		<source id="Excel.DrawingObjects.SmallChange">
			<context kind="class">DrawingObjects</context>
			<name>SmallChange</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DrawingObjects.Text-->
	<element type="property">
		<source id="Excel.DrawingObjects.Text">
			<context kind="class">DrawingObjects</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DrawingObjects.Top-->
	<element type="property">
		<source id="Excel.DrawingObjects.Top">
			<context kind="class">DrawingObjects</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--method::DrawingObjects.Ungroup-->
	<element type="method">
		<source id="Excel.DrawingObjects.Ungroup">
			<context kind="class">DrawingObjects</context>
			<name>Ungroup</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::DrawingObjects.Value {Default}-->
	<element type="property">
		<source id="Excel.DrawingObjects.Value">
			<context kind="class">DrawingObjects</context>
			<name default="true">Value</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DrawingObjects.VerticalAlignment-->
	<element type="property">
		<source id="Excel.DrawingObjects.VerticalAlignment">
			<context kind="class">DrawingObjects</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::DrawingObjects.Vertices-->
	<element type="method">
		<source id="Excel.DrawingObjects.Vertices">
			<context kind="class">DrawingObjects</context>
			<name>Vertices</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DrawingObjects.Visible-->
	<element type="property">
		<source id="Excel.DrawingObjects.Visible">
			<context kind="class">DrawingObjects</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DrawingObjects.Width-->
	<element type="property">
		<source id="Excel.DrawingObjects.Width">
			<context kind="class">DrawingObjects</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DrawingObjects.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.DrawingObjects.ZOrder">
			<context kind="class">DrawingObjects</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Drawings-->
	<element type="class">
		<source id="Excel.Drawings">
			<name>Drawings</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Drawings.Add-->
	<element type="method">
		<source id="Excel.Drawings.Add">
			<context kind="class">Drawings</context>
			<name>Add</name>
			<type>Drawing</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>X1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Y1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>X2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Y2</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Closed</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Drawings.AddIndent-->
	<element type="property">
		<source id="Excel.Drawings.AddIndent">
			<context kind="class">Drawings</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawings.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawings.Application">
			<context kind="class">Drawings</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Drawings.AutoScaleFont-->
	<element type="property">
		<source id="Excel.Drawings.AutoScaleFont">
			<context kind="class">Drawings</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawings.AutoSize-->
	<element type="property">
		<source id="Excel.Drawings.AutoSize">
			<context kind="class">Drawings</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawings.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawings.Border">
			<context kind="class">Drawings</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::Drawings.BringToFront-->
	<element type="method">
		<source id="Excel.Drawings.BringToFront">
			<context kind="class">Drawings</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawings.Caption-->
	<element type="property">
		<source id="Excel.Drawings.Caption">
			<context kind="class">Drawings</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Drawings.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawings.Characters">
			<context kind="class">Drawings</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Drawings.CheckSpelling-->
	<element type="method">
		<source id="Excel.Drawings.CheckSpelling">
			<context kind="class">Drawings</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Drawings.Copy-->
	<element type="method">
		<source id="Excel.Drawings.Copy">
			<context kind="class">Drawings</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Drawings.CopyPicture-->
	<element type="method">
		<source id="Excel.Drawings.CopyPicture">
			<context kind="class">Drawings</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Drawings.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawings.Count">
			<context kind="class">Drawings</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Drawings.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawings.Creator">
			<context kind="class">Drawings</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Drawings.Cut-->
	<element type="method">
		<source id="Excel.Drawings.Cut">
			<context kind="class">Drawings</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Drawings.Delete-->
	<element type="method">
		<source id="Excel.Drawings.Delete">
			<context kind="class">Drawings</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Drawings.Duplicate-->
	<element type="method">
		<source id="Excel.Drawings.Duplicate">
			<context kind="class">Drawings</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Drawings.Enabled-->
	<element type="property">
		<source id="Excel.Drawings.Enabled">
			<context kind="class">Drawings</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawings.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawings.Font">
			<context kind="class">Drawings</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Drawings.Formula-->
	<element type="property">
		<source id="Excel.Drawings.Formula">
			<context kind="class">Drawings</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Drawings.Group-->
	<element type="method">
		<source id="Excel.Drawings.Group">
			<context kind="class">Drawings</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::Drawings.Height-->
	<element type="property">
		<source id="Excel.Drawings.Height">
			<context kind="class">Drawings</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Drawings.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.Drawings.HorizontalAlignment">
			<context kind="class">Drawings</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawings.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawings.Interior">
			<context kind="class">Drawings</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::Drawings.Item-->
	<element type="method">
		<source id="Excel.Drawings.Item">
			<context kind="class">Drawings</context>
			<name>Item</name>
			<type>Drawing</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Drawings.Left-->
	<element type="property">
		<source id="Excel.Drawings.Left">
			<context kind="class">Drawings</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Drawings.Locked-->
	<element type="property">
		<source id="Excel.Drawings.Locked">
			<context kind="class">Drawings</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawings.LockedText-->
	<element type="property">
		<source id="Excel.Drawings.LockedText">
			<context kind="class">Drawings</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawings.OnAction-->
	<element type="property">
		<source id="Excel.Drawings.OnAction">
			<context kind="class">Drawings</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Drawings.Orientation-->
	<element type="property">
		<source id="Excel.Drawings.Orientation">
			<context kind="class">Drawings</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawings.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawings.Parent">
			<context kind="class">Drawings</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Drawings.Placement-->
	<element type="property">
		<source id="Excel.Drawings.Placement">
			<context kind="class">Drawings</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawings.PrintObject-->
	<element type="property">
		<source id="Excel.Drawings.PrintObject">
			<context kind="class">Drawings</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawings.ReadingOrder-->
	<element type="property">
		<source id="Excel.Drawings.ReadingOrder">
			<context kind="class">Drawings</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Drawings.Reshape-->
	<element type="method">
		<source id="Excel.Drawings.Reshape">
			<context kind="class">Drawings</context>
			<name>Reshape</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Vertex</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Insert</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Left</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Top</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Drawings.Select-->
	<element type="method">
		<source id="Excel.Drawings.Select">
			<context kind="class">Drawings</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Drawings.SendToBack-->
	<element type="method">
		<source id="Excel.Drawings.SendToBack">
			<context kind="class">Drawings</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawings.Shadow-->
	<element type="property">
		<source id="Excel.Drawings.Shadow">
			<context kind="class">Drawings</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawings.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawings.ShapeRange">
			<context kind="class">Drawings</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Drawings.Text-->
	<element type="property">
		<source id="Excel.Drawings.Text">
			<context kind="class">Drawings</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Drawings.Top-->
	<element type="property">
		<source id="Excel.Drawings.Top">
			<context kind="class">Drawings</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Drawings.VerticalAlignment-->
	<element type="property">
		<source id="Excel.Drawings.VerticalAlignment">
			<context kind="class">Drawings</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Drawings.Visible-->
	<element type="property">
		<source id="Excel.Drawings.Visible">
			<context kind="class">Drawings</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Drawings.Width-->
	<element type="property">
		<source id="Excel.Drawings.Width">
			<context kind="class">Drawings</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Drawings.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Drawings.ZOrder">
			<context kind="class">Drawings</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::DropDown-->
	<element type="class">
		<source id="Excel.DropDown">
			<name>DropDown</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::DropDown.AddItem-->
	<element type="method">
		<source id="Excel.DropDown.AddItem">
			<context kind="class">DropDown</context>
			<name>AddItem</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Text</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DropDown.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDown.Application">
			<context kind="class">DropDown</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DropDown.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDown.BottomRightCell">
			<context kind="class">DropDown</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::DropDown.BringToFront-->
	<element type="method">
		<source id="Excel.DropDown.BringToFront">
			<context kind="class">DropDown</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DropDown.Caption-->
	<element type="property">
		<source id="Excel.DropDown.Caption">
			<context kind="class">DropDown</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DropDown.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDown.Characters">
			<context kind="class">DropDown</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DropDown.Copy-->
	<element type="method">
		<source id="Excel.DropDown.Copy">
			<context kind="class">DropDown</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::DropDown.CopyPicture-->
	<element type="method">
		<source id="Excel.DropDown.CopyPicture">
			<context kind="class">DropDown</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DropDown.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDown.Creator">
			<context kind="class">DropDown</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DropDown.Cut-->
	<element type="method">
		<source id="Excel.DropDown.Cut">
			<context kind="class">DropDown</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::DropDown.Delete-->
	<element type="method">
		<source id="Excel.DropDown.Delete">
			<context kind="class">DropDown</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DropDown.Display3DShading-->
	<element type="property">
		<source id="Excel.DropDown.Display3DShading">
			<context kind="class">DropDown</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DropDown.DropDownLines-->
	<element type="property">
		<source id="Excel.DropDown.DropDownLines">
			<context kind="class">DropDown</context>
			<name>DropDownLines</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DropDown.Duplicate-->
	<element type="method">
		<source id="Excel.DropDown.Duplicate">
			<context kind="class">DropDown</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::DropDown.Enabled-->
	<element type="property">
		<source id="Excel.DropDown.Enabled">
			<context kind="class">DropDown</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DropDown.Height-->
	<element type="property">
		<source id="Excel.DropDown.Height">
			<context kind="class">DropDown</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DropDown.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDown.Index">
			<context kind="class">DropDown</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DropDown.Left-->
	<element type="property">
		<source id="Excel.DropDown.Left">
			<context kind="class">DropDown</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DropDown.LinkedCell-->
	<element type="property">
		<source id="Excel.DropDown.LinkedCell">
			<context kind="class">DropDown</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DropDown.LinkedObject {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDown.LinkedObject">
			<context kind="class">DropDown</context>
			<name>LinkedObject</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DropDown.List-->
	<element type="property">
		<source id="Excel.DropDown.List">
			<context kind="class">DropDown</context>
			<name>List</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DropDown.ListCount {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDown.ListCount">
			<context kind="class">DropDown</context>
			<name>ListCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DropDown.ListFillRange-->
	<element type="property">
		<source id="Excel.DropDown.ListFillRange">
			<context kind="class">DropDown</context>
			<name>ListFillRange</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DropDown.ListIndex-->
	<element type="property">
		<source id="Excel.DropDown.ListIndex">
			<context kind="class">DropDown</context>
			<name>ListIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DropDown.Locked-->
	<element type="property">
		<source id="Excel.DropDown.Locked">
			<context kind="class">DropDown</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DropDown.Name-->
	<element type="property">
		<source id="Excel.DropDown.Name">
			<context kind="class">DropDown</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DropDown.OnAction-->
	<element type="property">
		<source id="Excel.DropDown.OnAction">
			<context kind="class">DropDown</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DropDown.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDown.Parent">
			<context kind="class">DropDown</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::DropDown.Placement-->
	<element type="property">
		<source id="Excel.DropDown.Placement">
			<context kind="class">DropDown</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DropDown.PrintObject-->
	<element type="property">
		<source id="Excel.DropDown.PrintObject">
			<context kind="class">DropDown</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::DropDown.RemoveAllItems-->
	<element type="method">
		<source id="Excel.DropDown.RemoveAllItems">
			<context kind="class">DropDown</context>
			<name>RemoveAllItems</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::DropDown.RemoveItem-->
	<element type="method">
		<source id="Excel.DropDown.RemoveItem">
			<context kind="class">DropDown</context>
			<name>RemoveItem</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Count</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DropDown.Select-->
	<element type="method">
		<source id="Excel.DropDown.Select">
			<context kind="class">DropDown</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DropDown.Selected-->
	<element type="property">
		<source id="Excel.DropDown.Selected">
			<context kind="class">DropDown</context>
			<name>Selected</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DropDown.SendToBack-->
	<element type="method">
		<source id="Excel.DropDown.SendToBack">
			<context kind="class">DropDown</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DropDown.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDown.ShapeRange">
			<context kind="class">DropDown</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::DropDown.Text-->
	<element type="property">
		<source id="Excel.DropDown.Text">
			<context kind="class">DropDown</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DropDown.Top-->
	<element type="property">
		<source id="Excel.DropDown.Top">
			<context kind="class">DropDown</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DropDown.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDown.TopLeftCell">
			<context kind="class">DropDown</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::DropDown.Value {Default}-->
	<element type="property">
		<source id="Excel.DropDown.Value">
			<context kind="class">DropDown</context>
			<name default="true">Value</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DropDown.Visible-->
	<element type="property">
		<source id="Excel.DropDown.Visible">
			<context kind="class">DropDown</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DropDown.Width-->
	<element type="property">
		<source id="Excel.DropDown.Width">
			<context kind="class">DropDown</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DropDown.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDown.ZOrder">
			<context kind="class">DropDown</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::DropDowns-->
	<element type="class">
		<source id="Excel.DropDowns">
			<name>DropDowns</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::DropDowns.Add-->
	<element type="method">
		<source id="Excel.DropDowns.Add">
			<context kind="class">DropDowns</context>
			<name>Add</name>
			<type>DropDown</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Editable</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DropDowns.AddItem-->
	<element type="method">
		<source id="Excel.DropDowns.AddItem">
			<context kind="class">DropDowns</context>
			<name>AddItem</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Text</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DropDowns.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDowns.Application">
			<context kind="class">DropDowns</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::DropDowns.BringToFront-->
	<element type="method">
		<source id="Excel.DropDowns.BringToFront">
			<context kind="class">DropDowns</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DropDowns.Caption-->
	<element type="property">
		<source id="Excel.DropDowns.Caption">
			<context kind="class">DropDowns</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DropDowns.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDowns.Characters">
			<context kind="class">DropDowns</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DropDowns.Copy-->
	<element type="method">
		<source id="Excel.DropDowns.Copy">
			<context kind="class">DropDowns</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::DropDowns.CopyPicture-->
	<element type="method">
		<source id="Excel.DropDowns.CopyPicture">
			<context kind="class">DropDowns</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DropDowns.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDowns.Count">
			<context kind="class">DropDowns</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DropDowns.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDowns.Creator">
			<context kind="class">DropDowns</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DropDowns.Cut-->
	<element type="method">
		<source id="Excel.DropDowns.Cut">
			<context kind="class">DropDowns</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::DropDowns.Delete-->
	<element type="method">
		<source id="Excel.DropDowns.Delete">
			<context kind="class">DropDowns</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DropDowns.Display3DShading-->
	<element type="property">
		<source id="Excel.DropDowns.Display3DShading">
			<context kind="class">DropDowns</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DropDowns.DropDownLines-->
	<element type="property">
		<source id="Excel.DropDowns.DropDownLines">
			<context kind="class">DropDowns</context>
			<name>DropDownLines</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DropDowns.Duplicate-->
	<element type="method">
		<source id="Excel.DropDowns.Duplicate">
			<context kind="class">DropDowns</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::DropDowns.Enabled-->
	<element type="property">
		<source id="Excel.DropDowns.Enabled">
			<context kind="class">DropDowns</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::DropDowns.Group-->
	<element type="method">
		<source id="Excel.DropDowns.Group">
			<context kind="class">DropDowns</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::DropDowns.Height-->
	<element type="property">
		<source id="Excel.DropDowns.Height">
			<context kind="class">DropDowns</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--method::DropDowns.Item-->
	<element type="method">
		<source id="Excel.DropDowns.Item">
			<context kind="class">DropDowns</context>
			<name>Item</name>
			<type>DropDown</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DropDowns.Left-->
	<element type="property">
		<source id="Excel.DropDowns.Left">
			<context kind="class">DropDowns</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DropDowns.LinkedCell-->
	<element type="property">
		<source id="Excel.DropDowns.LinkedCell">
			<context kind="class">DropDowns</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DropDowns.List-->
	<element type="property">
		<source id="Excel.DropDowns.List">
			<context kind="class">DropDowns</context>
			<name>List</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DropDowns.ListFillRange-->
	<element type="property">
		<source id="Excel.DropDowns.ListFillRange">
			<context kind="class">DropDowns</context>
			<name>ListFillRange</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DropDowns.ListIndex-->
	<element type="property">
		<source id="Excel.DropDowns.ListIndex">
			<context kind="class">DropDowns</context>
			<name>ListIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DropDowns.Locked-->
	<element type="property">
		<source id="Excel.DropDowns.Locked">
			<context kind="class">DropDowns</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DropDowns.OnAction-->
	<element type="property">
		<source id="Excel.DropDowns.OnAction">
			<context kind="class">DropDowns</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DropDowns.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDowns.Parent">
			<context kind="class">DropDowns</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::DropDowns.Placement-->
	<element type="property">
		<source id="Excel.DropDowns.Placement">
			<context kind="class">DropDowns</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DropDowns.PrintObject-->
	<element type="property">
		<source id="Excel.DropDowns.PrintObject">
			<context kind="class">DropDowns</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::DropDowns.RemoveAllItems-->
	<element type="method">
		<source id="Excel.DropDowns.RemoveAllItems">
			<context kind="class">DropDowns</context>
			<name>RemoveAllItems</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::DropDowns.RemoveItem-->
	<element type="method">
		<source id="Excel.DropDowns.RemoveItem">
			<context kind="class">DropDowns</context>
			<name>RemoveItem</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Count</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DropDowns.Select-->
	<element type="method">
		<source id="Excel.DropDowns.Select">
			<context kind="class">DropDowns</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DropDowns.Selected-->
	<element type="property">
		<source id="Excel.DropDowns.Selected">
			<context kind="class">DropDowns</context>
			<name>Selected</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::DropDowns.SendToBack-->
	<element type="method">
		<source id="Excel.DropDowns.SendToBack">
			<context kind="class">DropDowns</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DropDowns.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDowns.ShapeRange">
			<context kind="class">DropDowns</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::DropDowns.Text-->
	<element type="property">
		<source id="Excel.DropDowns.Text">
			<context kind="class">DropDowns</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DropDowns.Top-->
	<element type="property">
		<source id="Excel.DropDowns.Top">
			<context kind="class">DropDowns</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DropDowns.Value {Default}-->
	<element type="property">
		<source id="Excel.DropDowns.Value">
			<context kind="class">DropDowns</context>
			<name default="true">Value</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DropDowns.Visible-->
	<element type="property">
		<source id="Excel.DropDowns.Visible">
			<context kind="class">DropDowns</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DropDowns.Width-->
	<element type="property">
		<source id="Excel.DropDowns.Width">
			<context kind="class">DropDowns</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::DropDowns.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropDowns.ZOrder">
			<context kind="class">DropDowns</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::DropLines-->
	<element type="class">
		<source id="Excel.DropLines">
			<name>DropLines</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::DropLines.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropLines.Application">
			<context kind="class">DropLines</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DropLines.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropLines.Border">
			<context kind="class">DropLines</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::DropLines.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropLines.Creator">
			<context kind="class">DropLines</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DropLines.Delete-->
	<element type="method">
		<source id="Excel.DropLines.Delete">
			<context kind="class">DropLines</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DropLines.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropLines.Name">
			<context kind="class">DropLines</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DropLines.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.DropLines.Parent">
			<context kind="class">DropLines</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::DropLines.Select-->
	<element type="method">
		<source id="Excel.DropLines.Select">
			<context kind="class">DropLines</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::EditBox-->
	<element type="class">
		<source id="Excel.EditBox">
			<name>EditBox</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::EditBox.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBox.Application">
			<context kind="class">EditBox</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::EditBox.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBox.BottomRightCell">
			<context kind="class">EditBox</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::EditBox.BringToFront-->
	<element type="method">
		<source id="Excel.EditBox.BringToFront">
			<context kind="class">EditBox</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::EditBox.Caption-->
	<element type="property">
		<source id="Excel.EditBox.Caption">
			<context kind="class">EditBox</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::EditBox.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBox.Characters">
			<context kind="class">EditBox</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::EditBox.CheckSpelling-->
	<element type="method">
		<source id="Excel.EditBox.CheckSpelling">
			<context kind="class">EditBox</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::EditBox.Copy-->
	<element type="method">
		<source id="Excel.EditBox.Copy">
			<context kind="class">EditBox</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::EditBox.CopyPicture-->
	<element type="method">
		<source id="Excel.EditBox.CopyPicture">
			<context kind="class">EditBox</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::EditBox.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBox.Creator">
			<context kind="class">EditBox</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::EditBox.Cut-->
	<element type="method">
		<source id="Excel.EditBox.Cut">
			<context kind="class">EditBox</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::EditBox.Delete-->
	<element type="method">
		<source id="Excel.EditBox.Delete">
			<context kind="class">EditBox</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::EditBox.DisplayVerticalScrollBar-->
	<element type="property">
		<source id="Excel.EditBox.DisplayVerticalScrollBar">
			<context kind="class">EditBox</context>
			<name>DisplayVerticalScrollBar</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::EditBox.Duplicate-->
	<element type="method">
		<source id="Excel.EditBox.Duplicate">
			<context kind="class">EditBox</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::EditBox.Enabled-->
	<element type="property">
		<source id="Excel.EditBox.Enabled">
			<context kind="class">EditBox</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::EditBox.Height-->
	<element type="property">
		<source id="Excel.EditBox.Height">
			<context kind="class">EditBox</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::EditBox.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBox.Index">
			<context kind="class">EditBox</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::EditBox.InputType-->
	<element type="property">
		<source id="Excel.EditBox.InputType">
			<context kind="class">EditBox</context>
			<name>InputType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::EditBox.Left-->
	<element type="property">
		<source id="Excel.EditBox.Left">
			<context kind="class">EditBox</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::EditBox.LinkedObject {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBox.LinkedObject">
			<context kind="class">EditBox</context>
			<name>LinkedObject</name>
			<type>String</type>
		</source>
	</element>
	<!--property::EditBox.Locked-->
	<element type="property">
		<source id="Excel.EditBox.Locked">
			<context kind="class">EditBox</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::EditBox.LockedText-->
	<element type="property">
		<source id="Excel.EditBox.LockedText">
			<context kind="class">EditBox</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::EditBox.MultiLine-->
	<element type="property">
		<source id="Excel.EditBox.MultiLine">
			<context kind="class">EditBox</context>
			<name>MultiLine</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::EditBox.Name-->
	<element type="property">
		<source id="Excel.EditBox.Name">
			<context kind="class">EditBox</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::EditBox.OnAction-->
	<element type="property">
		<source id="Excel.EditBox.OnAction">
			<context kind="class">EditBox</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::EditBox.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBox.Parent">
			<context kind="class">EditBox</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::EditBox.PasswordEdit-->
	<element type="property">
		<source id="Excel.EditBox.PasswordEdit">
			<context kind="class">EditBox</context>
			<name>PasswordEdit</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::EditBox.Placement-->
	<element type="property">
		<source id="Excel.EditBox.Placement">
			<context kind="class">EditBox</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::EditBox.PrintObject-->
	<element type="property">
		<source id="Excel.EditBox.PrintObject">
			<context kind="class">EditBox</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::EditBox.Select-->
	<element type="method">
		<source id="Excel.EditBox.Select">
			<context kind="class">EditBox</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::EditBox.SendToBack-->
	<element type="method">
		<source id="Excel.EditBox.SendToBack">
			<context kind="class">EditBox</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::EditBox.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBox.ShapeRange">
			<context kind="class">EditBox</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::EditBox.Text-->
	<element type="property">
		<source id="Excel.EditBox.Text">
			<context kind="class">EditBox</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::EditBox.Top-->
	<element type="property">
		<source id="Excel.EditBox.Top">
			<context kind="class">EditBox</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::EditBox.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBox.TopLeftCell">
			<context kind="class">EditBox</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::EditBox.Visible-->
	<element type="property">
		<source id="Excel.EditBox.Visible">
			<context kind="class">EditBox</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::EditBox.Width-->
	<element type="property">
		<source id="Excel.EditBox.Width">
			<context kind="class">EditBox</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::EditBox.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBox.ZOrder">
			<context kind="class">EditBox</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::EditBoxes-->
	<element type="class">
		<source id="Excel.EditBoxes">
			<name>EditBoxes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::EditBoxes.Add-->
	<element type="method">
		<source id="Excel.EditBoxes.Add">
			<context kind="class">EditBoxes</context>
			<name>Add</name>
			<type>EditBox</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::EditBoxes.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBoxes.Application">
			<context kind="class">EditBoxes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::EditBoxes.BringToFront-->
	<element type="method">
		<source id="Excel.EditBoxes.BringToFront">
			<context kind="class">EditBoxes</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::EditBoxes.Caption-->
	<element type="property">
		<source id="Excel.EditBoxes.Caption">
			<context kind="class">EditBoxes</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::EditBoxes.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBoxes.Characters">
			<context kind="class">EditBoxes</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::EditBoxes.CheckSpelling-->
	<element type="method">
		<source id="Excel.EditBoxes.CheckSpelling">
			<context kind="class">EditBoxes</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::EditBoxes.Copy-->
	<element type="method">
		<source id="Excel.EditBoxes.Copy">
			<context kind="class">EditBoxes</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::EditBoxes.CopyPicture-->
	<element type="method">
		<source id="Excel.EditBoxes.CopyPicture">
			<context kind="class">EditBoxes</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::EditBoxes.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBoxes.Count">
			<context kind="class">EditBoxes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::EditBoxes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBoxes.Creator">
			<context kind="class">EditBoxes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::EditBoxes.Cut-->
	<element type="method">
		<source id="Excel.EditBoxes.Cut">
			<context kind="class">EditBoxes</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::EditBoxes.Delete-->
	<element type="method">
		<source id="Excel.EditBoxes.Delete">
			<context kind="class">EditBoxes</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::EditBoxes.DisplayVerticalScrollBar-->
	<element type="property">
		<source id="Excel.EditBoxes.DisplayVerticalScrollBar">
			<context kind="class">EditBoxes</context>
			<name>DisplayVerticalScrollBar</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::EditBoxes.Duplicate-->
	<element type="method">
		<source id="Excel.EditBoxes.Duplicate">
			<context kind="class">EditBoxes</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::EditBoxes.Enabled-->
	<element type="property">
		<source id="Excel.EditBoxes.Enabled">
			<context kind="class">EditBoxes</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::EditBoxes.Group-->
	<element type="method">
		<source id="Excel.EditBoxes.Group">
			<context kind="class">EditBoxes</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::EditBoxes.Height-->
	<element type="property">
		<source id="Excel.EditBoxes.Height">
			<context kind="class">EditBoxes</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::EditBoxes.InputType-->
	<element type="property">
		<source id="Excel.EditBoxes.InputType">
			<context kind="class">EditBoxes</context>
			<name>InputType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::EditBoxes.Item-->
	<element type="method">
		<source id="Excel.EditBoxes.Item">
			<context kind="class">EditBoxes</context>
			<name>Item</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::EditBoxes.Left-->
	<element type="property">
		<source id="Excel.EditBoxes.Left">
			<context kind="class">EditBoxes</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::EditBoxes.Locked-->
	<element type="property">
		<source id="Excel.EditBoxes.Locked">
			<context kind="class">EditBoxes</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::EditBoxes.LockedText-->
	<element type="property">
		<source id="Excel.EditBoxes.LockedText">
			<context kind="class">EditBoxes</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::EditBoxes.MultiLine-->
	<element type="property">
		<source id="Excel.EditBoxes.MultiLine">
			<context kind="class">EditBoxes</context>
			<name>MultiLine</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::EditBoxes.OnAction-->
	<element type="property">
		<source id="Excel.EditBoxes.OnAction">
			<context kind="class">EditBoxes</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::EditBoxes.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBoxes.Parent">
			<context kind="class">EditBoxes</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::EditBoxes.PasswordEdit-->
	<element type="property">
		<source id="Excel.EditBoxes.PasswordEdit">
			<context kind="class">EditBoxes</context>
			<name>PasswordEdit</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::EditBoxes.Placement-->
	<element type="property">
		<source id="Excel.EditBoxes.Placement">
			<context kind="class">EditBoxes</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::EditBoxes.PrintObject-->
	<element type="property">
		<source id="Excel.EditBoxes.PrintObject">
			<context kind="class">EditBoxes</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::EditBoxes.Select-->
	<element type="method">
		<source id="Excel.EditBoxes.Select">
			<context kind="class">EditBoxes</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::EditBoxes.SendToBack-->
	<element type="method">
		<source id="Excel.EditBoxes.SendToBack">
			<context kind="class">EditBoxes</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::EditBoxes.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBoxes.ShapeRange">
			<context kind="class">EditBoxes</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::EditBoxes.Text-->
	<element type="property">
		<source id="Excel.EditBoxes.Text">
			<context kind="class">EditBoxes</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::EditBoxes.Top-->
	<element type="property">
		<source id="Excel.EditBoxes.Top">
			<context kind="class">EditBoxes</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::EditBoxes.Visible-->
	<element type="property">
		<source id="Excel.EditBoxes.Visible">
			<context kind="class">EditBoxes</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::EditBoxes.Width-->
	<element type="property">
		<source id="Excel.EditBoxes.Width">
			<context kind="class">EditBoxes</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::EditBoxes.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.EditBoxes.ZOrder">
			<context kind="class">EditBoxes</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Error-->
	<element type="class">
		<source id="Excel.Error">
			<name>Error</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Error.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Error.Application">
			<context kind="class">Error</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Error.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Error.Creator">
			<context kind="class">Error</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Error.Ignore-->
	<element type="property">
		<source id="Excel.Error.Ignore">
			<context kind="class">Error</context>
			<name>Ignore</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Error.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Error.Parent">
			<context kind="class">Error</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Error.Value {ReadOnly}-->
	<element type="property">
		<source id="Excel.Error.Value">
			<context kind="class">Error</context>
			<name>Value</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::ErrorBars-->
	<element type="class">
		<source id="Excel.ErrorBars">
			<name>ErrorBars</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ErrorBars.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ErrorBars.Application">
			<context kind="class">ErrorBars</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ErrorBars.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.ErrorBars.Border">
			<context kind="class">ErrorBars</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::ErrorBars.ClearFormats-->
	<element type="method">
		<source id="Excel.ErrorBars.ClearFormats">
			<context kind="class">ErrorBars</context>
			<name>ClearFormats</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ErrorBars.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ErrorBars.Creator">
			<context kind="class">ErrorBars</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ErrorBars.Delete-->
	<element type="method">
		<source id="Excel.ErrorBars.Delete">
			<context kind="class">ErrorBars</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ErrorBars.EndStyle-->
	<element type="property">
		<source id="Excel.ErrorBars.EndStyle">
			<context kind="class">ErrorBars</context>
			<name>EndStyle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ErrorBars.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.ErrorBars.Name">
			<context kind="class">ErrorBars</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ErrorBars.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ErrorBars.Parent">
			<context kind="class">ErrorBars</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::ErrorBars.Select-->
	<element type="method">
		<source id="Excel.ErrorBars.Select">
			<context kind="class">ErrorBars</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::ErrorCheckingOptions-->
	<element type="class">
		<source id="Excel.ErrorCheckingOptions">
			<name>ErrorCheckingOptions</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ErrorCheckingOptions.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ErrorCheckingOptions.Application">
			<context kind="class">ErrorCheckingOptions</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ErrorCheckingOptions.BackgroundChecking-->
	<element type="property">
		<source id="Excel.ErrorCheckingOptions.BackgroundChecking">
			<context kind="class">ErrorCheckingOptions</context>
			<name>BackgroundChecking</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ErrorCheckingOptions.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ErrorCheckingOptions.Creator">
			<context kind="class">ErrorCheckingOptions</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ErrorCheckingOptions.EmptyCellReferences-->
	<element type="property">
		<source id="Excel.ErrorCheckingOptions.EmptyCellReferences">
			<context kind="class">ErrorCheckingOptions</context>
			<name>EmptyCellReferences</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ErrorCheckingOptions.EvaluateToError-->
	<element type="property">
		<source id="Excel.ErrorCheckingOptions.EvaluateToError">
			<context kind="class">ErrorCheckingOptions</context>
			<name>EvaluateToError</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ErrorCheckingOptions.InconsistentFormula-->
	<element type="property">
		<source id="Excel.ErrorCheckingOptions.InconsistentFormula">
			<context kind="class">ErrorCheckingOptions</context>
			<name>InconsistentFormula</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ErrorCheckingOptions.IndicatorColorIndex-->
	<element type="property">
		<source id="Excel.ErrorCheckingOptions.IndicatorColorIndex">
			<context kind="class">ErrorCheckingOptions</context>
			<name>IndicatorColorIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ErrorCheckingOptions.ListDataValidation-->
	<element type="property">
		<source id="Excel.ErrorCheckingOptions.ListDataValidation">
			<context kind="class">ErrorCheckingOptions</context>
			<name>ListDataValidation</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ErrorCheckingOptions.NumberAsText-->
	<element type="property">
		<source id="Excel.ErrorCheckingOptions.NumberAsText">
			<context kind="class">ErrorCheckingOptions</context>
			<name>NumberAsText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ErrorCheckingOptions.OmittedCells-->
	<element type="property">
		<source id="Excel.ErrorCheckingOptions.OmittedCells">
			<context kind="class">ErrorCheckingOptions</context>
			<name>OmittedCells</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ErrorCheckingOptions.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ErrorCheckingOptions.Parent">
			<context kind="class">ErrorCheckingOptions</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ErrorCheckingOptions.TextDate-->
	<element type="property">
		<source id="Excel.ErrorCheckingOptions.TextDate">
			<context kind="class">ErrorCheckingOptions</context>
			<name>TextDate</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ErrorCheckingOptions.UnlockedFormulaCells-->
	<element type="property">
		<source id="Excel.ErrorCheckingOptions.UnlockedFormulaCells">
			<context kind="class">ErrorCheckingOptions</context>
			<name>UnlockedFormulaCells</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::Errors-->
	<element type="class">
		<source id="Excel.Errors">
			<name>Errors</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Errors.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Errors.Application">
			<context kind="class">Errors</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Errors.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Errors.Creator">
			<context kind="class">Errors</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Errors.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Errors.Item">
			<context kind="class">Errors</context>
			<name default="true">Item</name>
			<type>Error</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Errors.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Errors.Parent">
			<context kind="class">Errors</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::FillFormat-->
	<element type="class">
		<source id="Excel.FillFormat">
			<name>FillFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::FillFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.FillFormat.Application">
			<context kind="class">FillFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::FillFormat.BackColor-->
	<element type="property">
		<source id="Excel.FillFormat.BackColor">
			<context kind="class">FillFormat</context>
			<name>BackColor</name>
			<type>ColorFormat</type>
		</source>
	</element>
	<!--method::FillFormat.Background-->
	<element type="method">
		<source id="Excel.FillFormat.Background">
			<context kind="class">FillFormat</context>
			<name>Background</name>
			<type>void</type>
		</source>
	</element>
	<!--property::FillFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.FillFormat.Creator">
			<context kind="class">FillFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FillFormat.ForeColor-->
	<element type="property">
		<source id="Excel.FillFormat.ForeColor">
			<context kind="class">FillFormat</context>
			<name>ForeColor</name>
			<type>ColorFormat</type>
		</source>
	</element>
	<!--property::FillFormat.GradientColorType {ReadOnly}-->
	<element type="property">
		<source id="Excel.FillFormat.GradientColorType">
			<context kind="class">FillFormat</context>
			<name>GradientColorType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FillFormat.GradientDegree {ReadOnly}-->
	<element type="property">
		<source id="Excel.FillFormat.GradientDegree">
			<context kind="class">FillFormat</context>
			<name>GradientDegree</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::FillFormat.GradientStyle {ReadOnly}-->
	<element type="property">
		<source id="Excel.FillFormat.GradientStyle">
			<context kind="class">FillFormat</context>
			<name>GradientStyle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FillFormat.GradientVariant {ReadOnly}-->
	<element type="property">
		<source id="Excel.FillFormat.GradientVariant">
			<context kind="class">FillFormat</context>
			<name>GradientVariant</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::FillFormat.OneColorGradient-->
	<element type="method">
		<source id="Excel.FillFormat.OneColorGradient">
			<context kind="class">FillFormat</context>
			<name>OneColorGradient</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Style</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Variant</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Degree</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::FillFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.FillFormat.Parent">
			<context kind="class">FillFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::FillFormat.Pattern {ReadOnly}-->
	<element type="property">
		<source id="Excel.FillFormat.Pattern">
			<context kind="class">FillFormat</context>
			<name>Pattern</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::FillFormat.Patterned-->
	<element type="method">
		<source id="Excel.FillFormat.Patterned">
			<context kind="class">FillFormat</context>
			<name>Patterned</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Pattern</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::FillFormat.PresetGradient-->
	<element type="method">
		<source id="Excel.FillFormat.PresetGradient">
			<context kind="class">FillFormat</context>
			<name>PresetGradient</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Style</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Variant</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>PresetGradientType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::FillFormat.PresetGradientType {ReadOnly}-->
	<element type="property">
		<source id="Excel.FillFormat.PresetGradientType">
			<context kind="class">FillFormat</context>
			<name>PresetGradientType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FillFormat.PresetTexture {ReadOnly}-->
	<element type="property">
		<source id="Excel.FillFormat.PresetTexture">
			<context kind="class">FillFormat</context>
			<name>PresetTexture</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::FillFormat.PresetTextured-->
	<element type="method">
		<source id="Excel.FillFormat.PresetTextured">
			<context kind="class">FillFormat</context>
			<name>PresetTextured</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>PresetTexture</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::FillFormat.Solid-->
	<element type="method">
		<source id="Excel.FillFormat.Solid">
			<context kind="class">FillFormat</context>
			<name>Solid</name>
			<type>void</type>
		</source>
	</element>
	<!--property::FillFormat.TextureName {ReadOnly}-->
	<element type="property">
		<source id="Excel.FillFormat.TextureName">
			<context kind="class">FillFormat</context>
			<name>TextureName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::FillFormat.TextureType {ReadOnly}-->
	<element type="property">
		<source id="Excel.FillFormat.TextureType">
			<context kind="class">FillFormat</context>
			<name>TextureType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FillFormat.Transparency-->
	<element type="property">
		<source id="Excel.FillFormat.Transparency">
			<context kind="class">FillFormat</context>
			<name>Transparency</name>
			<type>Single</type>
		</source>
	</element>
	<!--method::FillFormat.TwoColorGradient-->
	<element type="method">
		<source id="Excel.FillFormat.TwoColorGradient">
			<context kind="class">FillFormat</context>
			<name>TwoColorGradient</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Style</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Variant</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::FillFormat.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.FillFormat.Type">
			<context kind="class">FillFormat</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::FillFormat.UserPicture-->
	<element type="method">
		<source id="Excel.FillFormat.UserPicture">
			<context kind="class">FillFormat</context>
			<name>UserPicture</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>PictureFile</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::FillFormat.UserTextured-->
	<element type="method">
		<source id="Excel.FillFormat.UserTextured">
			<context kind="class">FillFormat</context>
			<name>UserTextured</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>TextureFile</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::FillFormat.Visible-->
	<element type="property">
		<source id="Excel.FillFormat.Visible">
			<context kind="class">FillFormat</context>
			<name>Visible</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Filter-->
	<element type="class">
		<source id="Excel.Filter">
			<name>Filter</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Filter.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Filter.Application">
			<context kind="class">Filter</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Filter.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Filter.Creator">
			<context kind="class">Filter</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Filter.Criteria1 {ReadOnly}-->
	<element type="property">
		<source id="Excel.Filter.Criteria1">
			<context kind="class">Filter</context>
			<name>Criteria1</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Filter.Criteria2 {ReadOnly}-->
	<element type="property">
		<source id="Excel.Filter.Criteria2">
			<context kind="class">Filter</context>
			<name>Criteria2</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Filter.On {ReadOnly}-->
	<element type="property">
		<source id="Excel.Filter.On">
			<context kind="class">Filter</context>
			<name>On</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Filter.Operator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Filter.Operator">
			<context kind="class">Filter</context>
			<name>Operator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Filter.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Filter.Parent">
			<context kind="class">Filter</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Filters-->
	<element type="class">
		<source id="Excel.Filters">
			<name>Filters</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Filters.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Filters.Application">
			<context kind="class">Filters</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Filters.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Filters.Count">
			<context kind="class">Filters</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Filters.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Filters.Creator">
			<context kind="class">Filters</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Filters.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Filters.Item">
			<context kind="class">Filters</context>
			<name default="true">Item</name>
			<type>Filter</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Filters.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Filters.Parent">
			<context kind="class">Filters</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Floor-->
	<element type="class">
		<source id="Excel.Floor">
			<name>Floor</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Floor.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Floor.Application">
			<context kind="class">Floor</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Floor.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Floor.Border">
			<context kind="class">Floor</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::Floor.ClearFormats-->
	<element type="method">
		<source id="Excel.Floor.ClearFormats">
			<context kind="class">Floor</context>
			<name>ClearFormats</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Floor.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Floor.Creator">
			<context kind="class">Floor</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Floor.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.Floor.Fill">
			<context kind="class">Floor</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::Floor.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Floor.Interior">
			<context kind="class">Floor</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::Floor.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.Floor.Name">
			<context kind="class">Floor</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Floor.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Floor.Parent">
			<context kind="class">Floor</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Floor.Paste-->
	<element type="method">
		<source id="Excel.Floor.Paste">
			<context kind="class">Floor</context>
			<name>Paste</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Floor.PictureType-->
	<element type="property">
		<source id="Excel.Floor.PictureType">
			<context kind="class">Floor</context>
			<name>PictureType</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Floor.Select-->
	<element type="method">
		<source id="Excel.Floor.Select">
			<context kind="class">Floor</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Font-->
	<element type="class">
		<source id="Excel.Font">
			<name>Font</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Font.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Font.Application">
			<context kind="class">Font</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Font.Background-->
	<element type="property">
		<source id="Excel.Font.Background">
			<context kind="class">Font</context>
			<name>Background</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Font.Bold-->
	<element type="property">
		<source id="Excel.Font.Bold">
			<context kind="class">Font</context>
			<name>Bold</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Font.Color-->
	<element type="property">
		<source id="Excel.Font.Color">
			<context kind="class">Font</context>
			<name>Color</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Font.ColorIndex-->
	<element type="property">
		<source id="Excel.Font.ColorIndex">
			<context kind="class">Font</context>
			<name>ColorIndex</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Font.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Font.Creator">
			<context kind="class">Font</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Font.FontStyle-->
	<element type="property">
		<source id="Excel.Font.FontStyle">
			<context kind="class">Font</context>
			<name>FontStyle</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Font.Italic-->
	<element type="property">
		<source id="Excel.Font.Italic">
			<context kind="class">Font</context>
			<name>Italic</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Font.Name-->
	<element type="property">
		<source id="Excel.Font.Name">
			<context kind="class">Font</context>
			<name>Name</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Font.OutlineFont-->
	<element type="property">
		<source id="Excel.Font.OutlineFont">
			<context kind="class">Font</context>
			<name>OutlineFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Font.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Font.Parent">
			<context kind="class">Font</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Font.Shadow-->
	<element type="property">
		<source id="Excel.Font.Shadow">
			<context kind="class">Font</context>
			<name>Shadow</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Font.Size-->
	<element type="property">
		<source id="Excel.Font.Size">
			<context kind="class">Font</context>
			<name>Size</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Font.Strikethrough-->
	<element type="property">
		<source id="Excel.Font.Strikethrough">
			<context kind="class">Font</context>
			<name>Strikethrough</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Font.Subscript-->
	<element type="property">
		<source id="Excel.Font.Subscript">
			<context kind="class">Font</context>
			<name>Subscript</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Font.Superscript-->
	<element type="property">
		<source id="Excel.Font.Superscript">
			<context kind="class">Font</context>
			<name>Superscript</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Font.Underline-->
	<element type="property">
		<source id="Excel.Font.Underline">
			<context kind="class">Font</context>
			<name>Underline</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::FormatCondition-->
	<element type="class">
		<source id="Excel.FormatCondition">
			<name>FormatCondition</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::FormatCondition.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatCondition.Application">
			<context kind="class">FormatCondition</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::FormatCondition.Borders {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatCondition.Borders">
			<context kind="class">FormatCondition</context>
			<name>Borders</name>
			<type>Borders</type>
		</source>
	</element>
	<!--property::FormatCondition.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatCondition.Creator">
			<context kind="class">FormatCondition</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::FormatCondition.Delete-->
	<element type="method">
		<source id="Excel.FormatCondition.Delete">
			<context kind="class">FormatCondition</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::FormatCondition.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatCondition.Font">
			<context kind="class">FormatCondition</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::FormatCondition.Formula1 {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatCondition.Formula1">
			<context kind="class">FormatCondition</context>
			<name>Formula1</name>
			<type>String</type>
		</source>
	</element>
	<!--property::FormatCondition.Formula2 {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatCondition.Formula2">
			<context kind="class">FormatCondition</context>
			<name>Formula2</name>
			<type>String</type>
		</source>
	</element>
	<!--property::FormatCondition.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatCondition.Interior">
			<context kind="class">FormatCondition</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::FormatCondition.Modify-->
	<element type="method">
		<source id="Excel.FormatCondition.Modify">
			<context kind="class">FormatCondition</context>
			<name>Modify</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Operator</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Formula1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Formula2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::FormatCondition.Operator {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatCondition.Operator">
			<context kind="class">FormatCondition</context>
			<name>Operator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FormatCondition.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatCondition.Parent">
			<context kind="class">FormatCondition</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::FormatCondition.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatCondition.Type">
			<context kind="class">FormatCondition</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::FormatConditions-->
	<element type="class">
		<source id="Excel.FormatConditions">
			<name>FormatConditions</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::FormatConditions.Add-->
	<element type="method">
		<source id="Excel.FormatConditions.Add">
			<context kind="class">FormatConditions</context>
			<name>Add</name>
			<type>FormatCondition</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Operator</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Formula1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Formula2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::FormatConditions.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatConditions.Application">
			<context kind="class">FormatConditions</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::FormatConditions.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatConditions.Count">
			<context kind="class">FormatConditions</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FormatConditions.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatConditions.Creator">
			<context kind="class">FormatConditions</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::FormatConditions.Delete-->
	<element type="method">
		<source id="Excel.FormatConditions.Delete">
			<context kind="class">FormatConditions</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--method::FormatConditions.Item-->
	<element type="method">
		<source id="Excel.FormatConditions.Item">
			<context kind="class">FormatConditions</context>
			<name>Item</name>
			<type>FormatCondition</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::FormatConditions.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.FormatConditions.Parent">
			<context kind="class">FormatConditions</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::FreeformBuilder-->
	<element type="class">
		<source id="Excel.FreeformBuilder">
			<name>FreeformBuilder</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::FreeformBuilder.AddNodes-->
	<element type="method">
		<source id="Excel.FreeformBuilder.AddNodes">
			<context kind="class">FreeformBuilder</context>
			<name>AddNodes</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>SegmentType</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>EditingType</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>X1</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Y1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>X2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Y2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>X3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Y3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::FreeformBuilder.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.FreeformBuilder.Application">
			<context kind="class">FreeformBuilder</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::FreeformBuilder.ConvertToShape-->
	<element type="method">
		<source id="Excel.FreeformBuilder.ConvertToShape">
			<context kind="class">FreeformBuilder</context>
			<name>ConvertToShape</name>
			<type>Shape</type>
		</source>
	</element>
	<!--property::FreeformBuilder.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.FreeformBuilder.Creator">
			<context kind="class">FreeformBuilder</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FreeformBuilder.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.FreeformBuilder.Parent">
			<context kind="class">FreeformBuilder</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Global-->
	<element type="class">
		<source id="Excel.Global">
			<name>Global</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Global.ActiveCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.ActiveCell">
			<name>ActiveCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Global.ActiveChart {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.ActiveChart">
			<name>ActiveChart</name>
			<type>Chart</type>
		</source>
	</element>
	<!--property::Global.ActiveDialog {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.ActiveDialog">
			<name>ActiveDialog</name>
			<type>DialogSheet</type>
		</source>
	</element>
	<!--property::Global.ActiveMenuBar {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.ActiveMenuBar">
			<name>ActiveMenuBar</name>
			<type>MenuBar</type>
		</source>
	</element>
	<!--property::Global.ActivePrinter-->
	<element type="property">
		<source id="Excel.Global.ActivePrinter">
			<name>ActivePrinter</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Global.ActiveSheet {ReadOnly}(ADAPTED)-->
	<element type="property">
		<source id="Excel.Global.ActiveSheet">
			<name>ActiveSheet</name>
			<type>
				<!-- two subclasses of Sheet -->
				<choice>Chart</choice>
				<choice>Worksheet</choice>
			</type>
		</source>
	</element>
	<!--property::Global.ActiveWindow {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.ActiveWindow">
			<name>ActiveWindow</name>
			<type>Window</type>
		</source>
	</element>
	<!--property::Global.ActiveWorkbook {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.ActiveWorkbook">
			<name>ActiveWorkbook</name>
			<type>Workbook</type>
		</source>
	</element>
	<!--property::Global.AddIns {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.AddIns">
			<name>AddIns</name>
			<type>AddIns</type>
		</source>
	</element>
	<!--property::Global.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Application">
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Global.Assistant {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Assistant">
			<name>Assistant</name>
			<type>Assistant</type>
		</source>
	</element>
	<!--method::Global.Calculate-->
	<element type="method">
		<source id="Excel.Global.Calculate">
			<name>Calculate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Global.Cells {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Cells">
			<name>Cells</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Global.Charts {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Charts">
			<name>Charts</name>
			<type>Charts</type>
		</source>
	</element>
	<!--property::Global.Columns {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Columns">
			<name>Columns</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Global.CommandBars {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.CommandBars">
			<name>CommandBars</name>
			<type>CommandBars</type>
		</source>
	</element>
	<!--property::Global.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Creator">
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Global.DDEAppReturnCode {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.DDEAppReturnCode">
			<name>DDEAppReturnCode</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Global.DDEExecute-->
	<element type="method">
		<source id="Excel.Global.DDEExecute">
			<name>DDEExecute</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Channel</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>String</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Global.DDEInitiate-->
	<element type="method">
		<source id="Excel.Global.DDEInitiate">
			<name>DDEInitiate</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>App</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Topic</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Global.DDEPoke-->
	<element type="method">
		<source id="Excel.Global.DDEPoke">
			<name>DDEPoke</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Channel</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Item</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Data</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Global.DDERequest-->
	<element type="method">
		<source id="Excel.Global.DDERequest">
			<name>DDERequest</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Channel</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Item</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Global.DDETerminate-->
	<element type="method">
		<source id="Excel.Global.DDETerminate">
			<name>DDETerminate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Channel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Global.DialogSheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.DialogSheets">
			<name>DialogSheets</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--method::Global.Evaluate-->
	<element type="method">
		<source id="Excel.Global.Evaluate">
			<name>Evaluate</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Global.Excel4IntlMacroSheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Excel4IntlMacroSheets">
			<name>Excel4IntlMacroSheets</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--property::Global.Excel4MacroSheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Excel4MacroSheets">
			<name>Excel4MacroSheets</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--method::Global.ExecuteExcel4Macro-->
	<element type="method">
		<source id="Excel.Global.ExecuteExcel4Macro">
			<name>ExecuteExcel4Macro</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>String</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Global.Intersect-->
	<element type="method">
		<source id="Excel.Global.Intersect">
			<name>Intersect</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Global.MenuBars {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.MenuBars">
			<name>MenuBars</name>
			<type>MenuBars</type>
		</source>
	</element>
	<!--property::Global.Modules {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Modules">
			<name>Modules</name>
			<type>Modules</type>
		</source>
	</element>
	<!--property::Global.Names {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Names">
			<name>Names</name>
			<type>Names</type>
		</source>
	</element>
	<!--property::Global.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Parent">
			<name>Parent</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Global.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Range">
			<name>Range</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Cell1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Cell2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Global.Rows {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Rows">
			<name>Rows</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Global.Run-->
	<element type="method">
		<source id="Excel.Global.Run">
			<name>Run</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Macro</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Global.Selection {ReadOnly}(ADAPTED)-->
	<element type="property">
		<source id="Excel.Global.Selection">
			<name>Selection</name>
			<type>Object
			<choice>Range</choice>
			<choice>Shape</choice></type>
		</source>
	</element>
	<!--method::Global.SendKeys-->
	<element type="method">
		<source id="Excel.Global.SendKeys">
			<name>SendKeys</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Keys</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Wait</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Global.Sheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Sheets">
			<name>Sheets</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--property::Global.ShortcutMenus {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.ShortcutMenus">
			<name>ShortcutMenus</name>
			<type>Menu</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Global.ThisWorkbook {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.ThisWorkbook">
			<name>ThisWorkbook</name>
			<type>Workbook</type>
		</source>
	</element>
	<!--property::Global.Toolbars {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Toolbars">
			<name>Toolbars</name>
			<type>Toolbars</type>
		</source>
	</element>
	<!--method::Global.Union-->
	<element type="method">
		<source id="Excel.Global.Union">
			<name>Union</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Global.Windows {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Windows">
			<name>Windows</name>
			<type>Windows</type>
		</source>
	</element>
	<!--property::Global.Workbooks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Workbooks">
			<name>Workbooks</name>
			<type>Workbooks</type>
		</source>
	</element>
	<!--property::Global.WorksheetFunction {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.WorksheetFunction">
			<name>WorksheetFunction</name>
			<type>WorksheetFunction</type>
		</source>
	</element>
	<!--property::Global.Worksheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Global.Worksheets">
			<name>Worksheets</name>
			<type>Worksheets</type>
		</source>
	</element>
	<!--Class::Graphic-->
	<element type="class">
		<source id="Excel.Graphic">
			<name>Graphic</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Graphic.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Graphic.Application">
			<context kind="class">Graphic</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Graphic.Brightness-->
	<element type="property">
		<source id="Excel.Graphic.Brightness">
			<context kind="class">Graphic</context>
			<name>Brightness</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::Graphic.ColorType-->
	<element type="property">
		<source id="Excel.Graphic.ColorType">
			<context kind="class">Graphic</context>
			<name>ColorType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Graphic.Contrast-->
	<element type="property">
		<source id="Excel.Graphic.Contrast">
			<context kind="class">Graphic</context>
			<name>Contrast</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::Graphic.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Graphic.Creator">
			<context kind="class">Graphic</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Graphic.CropBottom-->
	<element type="property">
		<source id="Excel.Graphic.CropBottom">
			<context kind="class">Graphic</context>
			<name>CropBottom</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::Graphic.CropLeft-->
	<element type="property">
		<source id="Excel.Graphic.CropLeft">
			<context kind="class">Graphic</context>
			<name>CropLeft</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::Graphic.CropRight-->
	<element type="property">
		<source id="Excel.Graphic.CropRight">
			<context kind="class">Graphic</context>
			<name>CropRight</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::Graphic.CropTop-->
	<element type="property">
		<source id="Excel.Graphic.CropTop">
			<context kind="class">Graphic</context>
			<name>CropTop</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::Graphic.Filename-->
	<element type="property">
		<source id="Excel.Graphic.Filename">
			<context kind="class">Graphic</context>
			<name>Filename</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Graphic.Height-->
	<element type="property">
		<source id="Excel.Graphic.Height">
			<context kind="class">Graphic</context>
			<name>Height</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::Graphic.LockAspectRatio-->
	<element type="property">
		<source id="Excel.Graphic.LockAspectRatio">
			<context kind="class">Graphic</context>
			<name>LockAspectRatio</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Graphic.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Graphic.Parent">
			<context kind="class">Graphic</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Graphic.Width-->
	<element type="property">
		<source id="Excel.Graphic.Width">
			<context kind="class">Graphic</context>
			<name>Width</name>
			<type>Single</type>
		</source>
	</element>
	<!--Class::Gridlines-->
	<element type="class">
		<source id="Excel.Gridlines">
			<name>Gridlines</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Gridlines.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Gridlines.Application">
			<context kind="class">Gridlines</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Gridlines.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Gridlines.Border">
			<context kind="class">Gridlines</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::Gridlines.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Gridlines.Creator">
			<context kind="class">Gridlines</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Gridlines.Delete-->
	<element type="method">
		<source id="Excel.Gridlines.Delete">
			<context kind="class">Gridlines</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Gridlines.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.Gridlines.Name">
			<context kind="class">Gridlines</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Gridlines.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Gridlines.Parent">
			<context kind="class">Gridlines</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Gridlines.Select-->
	<element type="method">
		<source id="Excel.Gridlines.Select">
			<context kind="class">Gridlines</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::GroupBox-->
	<element type="class">
		<source id="Excel.GroupBox">
			<name>GroupBox</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::GroupBox.Accelerator-->
	<element type="property">
		<source id="Excel.GroupBox.Accelerator">
			<context kind="class">GroupBox</context>
			<name>Accelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupBox.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBox.Application">
			<context kind="class">GroupBox</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::GroupBox.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBox.BottomRightCell">
			<context kind="class">GroupBox</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::GroupBox.BringToFront-->
	<element type="method">
		<source id="Excel.GroupBox.BringToFront">
			<context kind="class">GroupBox</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupBox.Caption-->
	<element type="property">
		<source id="Excel.GroupBox.Caption">
			<context kind="class">GroupBox</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::GroupBox.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBox.Characters">
			<context kind="class">GroupBox</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::GroupBox.CheckSpelling-->
	<element type="method">
		<source id="Excel.GroupBox.CheckSpelling">
			<context kind="class">GroupBox</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::GroupBox.Copy-->
	<element type="method">
		<source id="Excel.GroupBox.Copy">
			<context kind="class">GroupBox</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::GroupBox.CopyPicture-->
	<element type="method">
		<source id="Excel.GroupBox.CopyPicture">
			<context kind="class">GroupBox</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::GroupBox.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBox.Creator">
			<context kind="class">GroupBox</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::GroupBox.Cut-->
	<element type="method">
		<source id="Excel.GroupBox.Cut">
			<context kind="class">GroupBox</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::GroupBox.Delete-->
	<element type="method">
		<source id="Excel.GroupBox.Delete">
			<context kind="class">GroupBox</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupBox.Display3DShading-->
	<element type="property">
		<source id="Excel.GroupBox.Display3DShading">
			<context kind="class">GroupBox</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::GroupBox.Duplicate-->
	<element type="method">
		<source id="Excel.GroupBox.Duplicate">
			<context kind="class">GroupBox</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::GroupBox.Enabled-->
	<element type="property">
		<source id="Excel.GroupBox.Enabled">
			<context kind="class">GroupBox</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupBox.Height-->
	<element type="property">
		<source id="Excel.GroupBox.Height">
			<context kind="class">GroupBox</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupBox.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBox.Index">
			<context kind="class">GroupBox</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::GroupBox.Left-->
	<element type="property">
		<source id="Excel.GroupBox.Left">
			<context kind="class">GroupBox</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupBox.Locked-->
	<element type="property">
		<source id="Excel.GroupBox.Locked">
			<context kind="class">GroupBox</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupBox.LockedText-->
	<element type="property">
		<source id="Excel.GroupBox.LockedText">
			<context kind="class">GroupBox</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupBox.Name-->
	<element type="property">
		<source id="Excel.GroupBox.Name">
			<context kind="class">GroupBox</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::GroupBox.OnAction-->
	<element type="property">
		<source id="Excel.GroupBox.OnAction">
			<context kind="class">GroupBox</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::GroupBox.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBox.Parent">
			<context kind="class">GroupBox</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::GroupBox.PhoneticAccelerator-->
	<element type="property">
		<source id="Excel.GroupBox.PhoneticAccelerator">
			<context kind="class">GroupBox</context>
			<name>PhoneticAccelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupBox.Placement-->
	<element type="property">
		<source id="Excel.GroupBox.Placement">
			<context kind="class">GroupBox</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupBox.PrintObject-->
	<element type="property">
		<source id="Excel.GroupBox.PrintObject">
			<context kind="class">GroupBox</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::GroupBox.Select-->
	<element type="method">
		<source id="Excel.GroupBox.Select">
			<context kind="class">GroupBox</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::GroupBox.SendToBack-->
	<element type="method">
		<source id="Excel.GroupBox.SendToBack">
			<context kind="class">GroupBox</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupBox.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBox.ShapeRange">
			<context kind="class">GroupBox</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::GroupBox.Text-->
	<element type="property">
		<source id="Excel.GroupBox.Text">
			<context kind="class">GroupBox</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::GroupBox.Top-->
	<element type="property">
		<source id="Excel.GroupBox.Top">
			<context kind="class">GroupBox</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupBox.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBox.TopLeftCell">
			<context kind="class">GroupBox</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::GroupBox.Visible-->
	<element type="property">
		<source id="Excel.GroupBox.Visible">
			<context kind="class">GroupBox</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupBox.Width-->
	<element type="property">
		<source id="Excel.GroupBox.Width">
			<context kind="class">GroupBox</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupBox.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBox.ZOrder">
			<context kind="class">GroupBox</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::GroupBoxes-->
	<element type="class">
		<source id="Excel.GroupBoxes">
			<name>GroupBoxes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::GroupBoxes.Accelerator-->
	<element type="property">
		<source id="Excel.GroupBoxes.Accelerator">
			<context kind="class">GroupBoxes</context>
			<name>Accelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::GroupBoxes.Add-->
	<element type="method">
		<source id="Excel.GroupBoxes.Add">
			<context kind="class">GroupBoxes</context>
			<name>Add</name>
			<type>GroupBox</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::GroupBoxes.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBoxes.Application">
			<context kind="class">GroupBoxes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::GroupBoxes.BringToFront-->
	<element type="method">
		<source id="Excel.GroupBoxes.BringToFront">
			<context kind="class">GroupBoxes</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupBoxes.Caption-->
	<element type="property">
		<source id="Excel.GroupBoxes.Caption">
			<context kind="class">GroupBoxes</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::GroupBoxes.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBoxes.Characters">
			<context kind="class">GroupBoxes</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::GroupBoxes.CheckSpelling-->
	<element type="method">
		<source id="Excel.GroupBoxes.CheckSpelling">
			<context kind="class">GroupBoxes</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::GroupBoxes.Copy-->
	<element type="method">
		<source id="Excel.GroupBoxes.Copy">
			<context kind="class">GroupBoxes</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::GroupBoxes.CopyPicture-->
	<element type="method">
		<source id="Excel.GroupBoxes.CopyPicture">
			<context kind="class">GroupBoxes</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::GroupBoxes.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBoxes.Count">
			<context kind="class">GroupBoxes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::GroupBoxes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBoxes.Creator">
			<context kind="class">GroupBoxes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::GroupBoxes.Cut-->
	<element type="method">
		<source id="Excel.GroupBoxes.Cut">
			<context kind="class">GroupBoxes</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::GroupBoxes.Delete-->
	<element type="method">
		<source id="Excel.GroupBoxes.Delete">
			<context kind="class">GroupBoxes</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupBoxes.Display3DShading-->
	<element type="property">
		<source id="Excel.GroupBoxes.Display3DShading">
			<context kind="class">GroupBoxes</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::GroupBoxes.Duplicate-->
	<element type="method">
		<source id="Excel.GroupBoxes.Duplicate">
			<context kind="class">GroupBoxes</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::GroupBoxes.Enabled-->
	<element type="property">
		<source id="Excel.GroupBoxes.Enabled">
			<context kind="class">GroupBoxes</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::GroupBoxes.Group-->
	<element type="method">
		<source id="Excel.GroupBoxes.Group">
			<context kind="class">GroupBoxes</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::GroupBoxes.Height-->
	<element type="property">
		<source id="Excel.GroupBoxes.Height">
			<context kind="class">GroupBoxes</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--method::GroupBoxes.Item-->
	<element type="method">
		<source id="Excel.GroupBoxes.Item">
			<context kind="class">GroupBoxes</context>
			<name>Item</name>
			<type>GroupBoxe</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::GroupBoxes.Left-->
	<element type="property">
		<source id="Excel.GroupBoxes.Left">
			<context kind="class">GroupBoxes</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupBoxes.Locked-->
	<element type="property">
		<source id="Excel.GroupBoxes.Locked">
			<context kind="class">GroupBoxes</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupBoxes.LockedText-->
	<element type="property">
		<source id="Excel.GroupBoxes.LockedText">
			<context kind="class">GroupBoxes</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupBoxes.OnAction-->
	<element type="property">
		<source id="Excel.GroupBoxes.OnAction">
			<context kind="class">GroupBoxes</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::GroupBoxes.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBoxes.Parent">
			<context kind="class">GroupBoxes</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::GroupBoxes.PhoneticAccelerator-->
	<element type="property">
		<source id="Excel.GroupBoxes.PhoneticAccelerator">
			<context kind="class">GroupBoxes</context>
			<name>PhoneticAccelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupBoxes.Placement-->
	<element type="property">
		<source id="Excel.GroupBoxes.Placement">
			<context kind="class">GroupBoxes</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupBoxes.PrintObject-->
	<element type="property">
		<source id="Excel.GroupBoxes.PrintObject">
			<context kind="class">GroupBoxes</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::GroupBoxes.Select-->
	<element type="method">
		<source id="Excel.GroupBoxes.Select">
			<context kind="class">GroupBoxes</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::GroupBoxes.SendToBack-->
	<element type="method">
		<source id="Excel.GroupBoxes.SendToBack">
			<context kind="class">GroupBoxes</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupBoxes.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBoxes.ShapeRange">
			<context kind="class">GroupBoxes</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::GroupBoxes.Text-->
	<element type="property">
		<source id="Excel.GroupBoxes.Text">
			<context kind="class">GroupBoxes</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::GroupBoxes.Top-->
	<element type="property">
		<source id="Excel.GroupBoxes.Top">
			<context kind="class">GroupBoxes</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupBoxes.Visible-->
	<element type="property">
		<source id="Excel.GroupBoxes.Visible">
			<context kind="class">GroupBoxes</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupBoxes.Width-->
	<element type="property">
		<source id="Excel.GroupBoxes.Width">
			<context kind="class">GroupBoxes</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupBoxes.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupBoxes.ZOrder">
			<context kind="class">GroupBoxes</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::GroupObject-->
	<element type="class">
		<source id="Excel.GroupObject">
			<name>GroupObject</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::GroupObject.AddIndent-->
	<element type="property">
		<source id="Excel.GroupObject.AddIndent">
			<context kind="class">GroupObject</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObject.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObject.Application">
			<context kind="class">GroupObject</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::GroupObject.ArrowHeadLength-->
	<element type="property">
		<source id="Excel.GroupObject.ArrowHeadLength">
			<context kind="class">GroupObject</context>
			<name>ArrowHeadLength</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObject.ArrowHeadStyle-->
	<element type="property">
		<source id="Excel.GroupObject.ArrowHeadStyle">
			<context kind="class">GroupObject</context>
			<name>ArrowHeadStyle</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObject.ArrowHeadWidth-->
	<element type="property">
		<source id="Excel.GroupObject.ArrowHeadWidth">
			<context kind="class">GroupObject</context>
			<name>ArrowHeadWidth</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObject.AutoSize-->
	<element type="property">
		<source id="Excel.GroupObject.AutoSize">
			<context kind="class">GroupObject</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObject.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObject.Border">
			<context kind="class">GroupObject</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::GroupObject.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObject.BottomRightCell">
			<context kind="class">GroupObject</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::GroupObject.BringToFront-->
	<element type="method">
		<source id="Excel.GroupObject.BringToFront">
			<context kind="class">GroupObject</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::GroupObject.CheckSpelling-->
	<element type="method">
		<source id="Excel.GroupObject.CheckSpelling">
			<context kind="class">GroupObject</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::GroupObject.Copy-->
	<element type="method">
		<source id="Excel.GroupObject.Copy">
			<context kind="class">GroupObject</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::GroupObject.CopyPicture-->
	<element type="method">
		<source id="Excel.GroupObject.CopyPicture">
			<context kind="class">GroupObject</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::GroupObject.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObject.Creator">
			<context kind="class">GroupObject</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::GroupObject.Cut-->
	<element type="method">
		<source id="Excel.GroupObject.Cut">
			<context kind="class">GroupObject</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::GroupObject.Delete-->
	<element type="method">
		<source id="Excel.GroupObject.Delete">
			<context kind="class">GroupObject</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::GroupObject.Duplicate-->
	<element type="method">
		<source id="Excel.GroupObject.Duplicate">
			<context kind="class">GroupObject</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::GroupObject.Enabled-->
	<element type="property">
		<source id="Excel.GroupObject.Enabled">
			<context kind="class">GroupObject</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObject.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObject.Font">
			<context kind="class">GroupObject</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::GroupObject.Height-->
	<element type="property">
		<source id="Excel.GroupObject.Height">
			<context kind="class">GroupObject</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupObject.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.GroupObject.HorizontalAlignment">
			<context kind="class">GroupObject</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObject.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObject.Index">
			<context kind="class">GroupObject</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::GroupObject.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObject.Interior">
			<context kind="class">GroupObject</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::GroupObject.Left-->
	<element type="property">
		<source id="Excel.GroupObject.Left">
			<context kind="class">GroupObject</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupObject.Locked-->
	<element type="property">
		<source id="Excel.GroupObject.Locked">
			<context kind="class">GroupObject</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObject.Name-->
	<element type="property">
		<source id="Excel.GroupObject.Name">
			<context kind="class">GroupObject</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::GroupObject.OnAction-->
	<element type="property">
		<source id="Excel.GroupObject.OnAction">
			<context kind="class">GroupObject</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::GroupObject.Orientation-->
	<element type="property">
		<source id="Excel.GroupObject.Orientation">
			<context kind="class">GroupObject</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObject.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObject.Parent">
			<context kind="class">GroupObject</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::GroupObject.Placement-->
	<element type="property">
		<source id="Excel.GroupObject.Placement">
			<context kind="class">GroupObject</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObject.PrintObject-->
	<element type="property">
		<source id="Excel.GroupObject.PrintObject">
			<context kind="class">GroupObject</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObject.ReadingOrder-->
	<element type="property">
		<source id="Excel.GroupObject.ReadingOrder">
			<context kind="class">GroupObject</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::GroupObject.RoundedCorners-->
	<element type="property">
		<source id="Excel.GroupObject.RoundedCorners">
			<context kind="class">GroupObject</context>
			<name>RoundedCorners</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::GroupObject.Select-->
	<element type="method">
		<source id="Excel.GroupObject.Select">
			<context kind="class">GroupObject</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::GroupObject.SendToBack-->
	<element type="method">
		<source id="Excel.GroupObject.SendToBack">
			<context kind="class">GroupObject</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObject.Shadow-->
	<element type="property">
		<source id="Excel.GroupObject.Shadow">
			<context kind="class">GroupObject</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObject.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObject.ShapeRange">
			<context kind="class">GroupObject</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::GroupObject.Top-->
	<element type="property">
		<source id="Excel.GroupObject.Top">
			<context kind="class">GroupObject</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupObject.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObject.TopLeftCell">
			<context kind="class">GroupObject</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::GroupObject.Ungroup-->
	<element type="method">
		<source id="Excel.GroupObject.Ungroup">
			<context kind="class">GroupObject</context>
			<name>Ungroup</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::GroupObject.VerticalAlignment-->
	<element type="property">
		<source id="Excel.GroupObject.VerticalAlignment">
			<context kind="class">GroupObject</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObject.Visible-->
	<element type="property">
		<source id="Excel.GroupObject.Visible">
			<context kind="class">GroupObject</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObject.Width-->
	<element type="property">
		<source id="Excel.GroupObject.Width">
			<context kind="class">GroupObject</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupObject.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObject.ZOrder">
			<context kind="class">GroupObject</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::GroupObjects-->
	<element type="class">
		<source id="Excel.GroupObjects">
			<name>GroupObjects</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::GroupObjects.AddIndent-->
	<element type="property">
		<source id="Excel.GroupObjects.AddIndent">
			<context kind="class">GroupObjects</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObjects.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObjects.Application">
			<context kind="class">GroupObjects</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::GroupObjects.ArrowHeadLength-->
	<element type="property">
		<source id="Excel.GroupObjects.ArrowHeadLength">
			<context kind="class">GroupObjects</context>
			<name>ArrowHeadLength</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObjects.ArrowHeadStyle-->
	<element type="property">
		<source id="Excel.GroupObjects.ArrowHeadStyle">
			<context kind="class">GroupObjects</context>
			<name>ArrowHeadStyle</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObjects.ArrowHeadWidth-->
	<element type="property">
		<source id="Excel.GroupObjects.ArrowHeadWidth">
			<context kind="class">GroupObjects</context>
			<name>ArrowHeadWidth</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObjects.AutoSize-->
	<element type="property">
		<source id="Excel.GroupObjects.AutoSize">
			<context kind="class">GroupObjects</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObjects.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObjects.Border">
			<context kind="class">GroupObjects</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::GroupObjects.BringToFront-->
	<element type="method">
		<source id="Excel.GroupObjects.BringToFront">
			<context kind="class">GroupObjects</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::GroupObjects.CheckSpelling-->
	<element type="method">
		<source id="Excel.GroupObjects.CheckSpelling">
			<context kind="class">GroupObjects</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::GroupObjects.Copy-->
	<element type="method">
		<source id="Excel.GroupObjects.Copy">
			<context kind="class">GroupObjects</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::GroupObjects.CopyPicture-->
	<element type="method">
		<source id="Excel.GroupObjects.CopyPicture">
			<context kind="class">GroupObjects</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::GroupObjects.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObjects.Count">
			<context kind="class">GroupObjects</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::GroupObjects.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObjects.Creator">
			<context kind="class">GroupObjects</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::GroupObjects.Cut-->
	<element type="method">
		<source id="Excel.GroupObjects.Cut">
			<context kind="class">GroupObjects</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::GroupObjects.Delete-->
	<element type="method">
		<source id="Excel.GroupObjects.Delete">
			<context kind="class">GroupObjects</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::GroupObjects.Duplicate-->
	<element type="method">
		<source id="Excel.GroupObjects.Duplicate">
			<context kind="class">GroupObjects</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::GroupObjects.Enabled-->
	<element type="property">
		<source id="Excel.GroupObjects.Enabled">
			<context kind="class">GroupObjects</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObjects.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObjects.Font">
			<context kind="class">GroupObjects</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--method::GroupObjects.Group-->
	<element type="method">
		<source id="Excel.GroupObjects.Group">
			<context kind="class">GroupObjects</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::GroupObjects.Height-->
	<element type="property">
		<source id="Excel.GroupObjects.Height">
			<context kind="class">GroupObjects</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupObjects.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.GroupObjects.HorizontalAlignment">
			<context kind="class">GroupObjects</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObjects.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObjects.Interior">
			<context kind="class">GroupObjects</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::GroupObjects.Item-->
	<element type="method">
		<source id="Excel.GroupObjects.Item">
			<context kind="class">GroupObjects</context>
			<name>Item</name>
			<type>GroupObject</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::GroupObjects.Left-->
	<element type="property">
		<source id="Excel.GroupObjects.Left">
			<context kind="class">GroupObjects</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupObjects.Locked-->
	<element type="property">
		<source id="Excel.GroupObjects.Locked">
			<context kind="class">GroupObjects</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObjects.OnAction-->
	<element type="property">
		<source id="Excel.GroupObjects.OnAction">
			<context kind="class">GroupObjects</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::GroupObjects.Orientation-->
	<element type="property">
		<source id="Excel.GroupObjects.Orientation">
			<context kind="class">GroupObjects</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObjects.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObjects.Parent">
			<context kind="class">GroupObjects</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::GroupObjects.Placement-->
	<element type="property">
		<source id="Excel.GroupObjects.Placement">
			<context kind="class">GroupObjects</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObjects.PrintObject-->
	<element type="property">
		<source id="Excel.GroupObjects.PrintObject">
			<context kind="class">GroupObjects</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObjects.ReadingOrder-->
	<element type="property">
		<source id="Excel.GroupObjects.ReadingOrder">
			<context kind="class">GroupObjects</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::GroupObjects.RoundedCorners-->
	<element type="property">
		<source id="Excel.GroupObjects.RoundedCorners">
			<context kind="class">GroupObjects</context>
			<name>RoundedCorners</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::GroupObjects.Select-->
	<element type="method">
		<source id="Excel.GroupObjects.Select">
			<context kind="class">GroupObjects</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::GroupObjects.SendToBack-->
	<element type="method">
		<source id="Excel.GroupObjects.SendToBack">
			<context kind="class">GroupObjects</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObjects.Shadow-->
	<element type="property">
		<source id="Excel.GroupObjects.Shadow">
			<context kind="class">GroupObjects</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObjects.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObjects.ShapeRange">
			<context kind="class">GroupObjects</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::GroupObjects.Top-->
	<element type="property">
		<source id="Excel.GroupObjects.Top">
			<context kind="class">GroupObjects</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--method::GroupObjects.Ungroup-->
	<element type="method">
		<source id="Excel.GroupObjects.Ungroup">
			<context kind="class">GroupObjects</context>
			<name>Ungroup</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::GroupObjects.VerticalAlignment-->
	<element type="property">
		<source id="Excel.GroupObjects.VerticalAlignment">
			<context kind="class">GroupObjects</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::GroupObjects.Visible-->
	<element type="property">
		<source id="Excel.GroupObjects.Visible">
			<context kind="class">GroupObjects</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::GroupObjects.Width-->
	<element type="property">
		<source id="Excel.GroupObjects.Width">
			<context kind="class">GroupObjects</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::GroupObjects.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupObjects.ZOrder">
			<context kind="class">GroupObjects</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::GroupShapes-->
	<element type="class">
		<source id="Excel.GroupShapes">
			<name>GroupShapes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::GroupShapes.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupShapes.Application">
			<context kind="class">GroupShapes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::GroupShapes.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupShapes.Count">
			<context kind="class">GroupShapes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::GroupShapes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupShapes.Creator">
			<context kind="class">GroupShapes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::GroupShapes.Item {Default}-->
	<element type="method">
		<source id="Excel.GroupShapes.Item">
			<context kind="class">GroupShapes</context>
			<name default="true">Item</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::GroupShapes.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupShapes.Parent">
			<context kind="class">GroupShapes</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::GroupShapes.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.GroupShapes.Range">
			<context kind="class">GroupShapes</context>
			<name>Range</name>
			<type>ShapeRange</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::HiLoLines-->
	<element type="class">
		<source id="Excel.HiLoLines">
			<name>HiLoLines</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::HiLoLines.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.HiLoLines.Application">
			<context kind="class">HiLoLines</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::HiLoLines.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.HiLoLines.Border">
			<context kind="class">HiLoLines</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::HiLoLines.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.HiLoLines.Creator">
			<context kind="class">HiLoLines</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::HiLoLines.Delete-->
	<element type="method">
		<source id="Excel.HiLoLines.Delete">
			<context kind="class">HiLoLines</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::HiLoLines.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.HiLoLines.Name">
			<context kind="class">HiLoLines</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::HiLoLines.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.HiLoLines.Parent">
			<context kind="class">HiLoLines</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::HiLoLines.Select-->
	<element type="method">
		<source id="Excel.HiLoLines.Select">
			<context kind="class">HiLoLines</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::HPageBreak-->
	<element type="class">
		<source id="Excel.HPageBreak">
			<name>HPageBreak</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::HPageBreak.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.HPageBreak.Application">
			<context kind="class">HPageBreak</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::HPageBreak.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.HPageBreak.Creator">
			<context kind="class">HPageBreak</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::HPageBreak.Delete-->
	<element type="method">
		<source id="Excel.HPageBreak.Delete">
			<context kind="class">HPageBreak</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--method::HPageBreak.DragOff-->
	<element type="method">
		<source id="Excel.HPageBreak.DragOff">
			<context kind="class">HPageBreak</context>
			<name>DragOff</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Direction</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>RegionIndex</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::HPageBreak.Extent {ReadOnly}-->
	<element type="property">
		<source id="Excel.HPageBreak.Extent">
			<context kind="class">HPageBreak</context>
			<name>Extent</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::HPageBreak.Location {ReadOnly}-->
	<element type="property">
		<source id="Excel.HPageBreak.Location">
			<context kind="class">HPageBreak</context>
			<name>Location</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::HPageBreak.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.HPageBreak.Parent">
			<context kind="class">HPageBreak</context>
			<name>Parent</name>
			<type>Worksheet</type>
		</source>
	</element>
	<!--property::HPageBreak.Type-->
	<element type="property">
		<source id="Excel.HPageBreak.Type">
			<context kind="class">HPageBreak</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::HPageBreaks-->
	<element type="class">
		<source id="Excel.HPageBreaks">
			<name>HPageBreaks</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::HPageBreaks.Add-->
	<element type="method">
		<source id="Excel.HPageBreaks.Add">
			<context kind="class">HPageBreaks</context>
			<name>Add</name>
			<type>HPageBreak</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Before</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::HPageBreaks.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.HPageBreaks.Application">
			<context kind="class">HPageBreaks</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::HPageBreaks.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.HPageBreaks.Count">
			<context kind="class">HPageBreaks</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::HPageBreaks.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.HPageBreaks.Creator">
			<context kind="class">HPageBreaks</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::HPageBreaks.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.HPageBreaks.Item">
			<context kind="class">HPageBreaks</context>
			<name default="true">Item</name>
			<type>HPageBreak</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::HPageBreaks.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.HPageBreaks.Parent">
			<context kind="class">HPageBreaks</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Hyperlink-->
	<element type="class">
		<source id="Excel.Hyperlink">
			<name>Hyperlink</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Hyperlink.Address-->
	<element type="property">
		<source id="Excel.Hyperlink.Address">
			<context kind="class">Hyperlink</context>
			<name>Address</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Hyperlink.AddToFavorites-->
	<element type="method">
		<source id="Excel.Hyperlink.AddToFavorites">
			<context kind="class">Hyperlink</context>
			<name>AddToFavorites</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Hyperlink.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Hyperlink.Application">
			<context kind="class">Hyperlink</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Hyperlink.CreateNewDocument-->
	<element type="method">
		<source id="Excel.Hyperlink.CreateNewDocument">
			<context kind="class">Hyperlink</context>
			<name>CreateNewDocument</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>EditNow</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Overwrite</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Hyperlink.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Hyperlink.Creator">
			<context kind="class">Hyperlink</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Hyperlink.Delete-->
	<element type="method">
		<source id="Excel.Hyperlink.Delete">
			<context kind="class">Hyperlink</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Hyperlink.EmailSubject-->
	<element type="property">
		<source id="Excel.Hyperlink.EmailSubject">
			<context kind="class">Hyperlink</context>
			<name>EmailSubject</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Hyperlink.Follow-->
	<element type="method">
		<source id="Excel.Hyperlink.Follow">
			<context kind="class">Hyperlink</context>
			<name>Follow</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>NewWindow</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AddHistory</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ExtraInfo</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Method</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HeaderInfo</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Hyperlink.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.Hyperlink.Name">
			<context kind="class">Hyperlink</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Hyperlink.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Hyperlink.Parent">
			<context kind="class">Hyperlink</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Hyperlink.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.Hyperlink.Range">
			<context kind="class">Hyperlink</context>
			<name>Range</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Hyperlink.ScreenTip-->
	<element type="property">
		<source id="Excel.Hyperlink.ScreenTip">
			<context kind="class">Hyperlink</context>
			<name>ScreenTip</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Hyperlink.Shape {ReadOnly}-->
	<element type="property">
		<source id="Excel.Hyperlink.Shape">
			<context kind="class">Hyperlink</context>
			<name>Shape</name>
			<type>Shape</type>
		</source>
	</element>
	<!--property::Hyperlink.SubAddress-->
	<element type="property">
		<source id="Excel.Hyperlink.SubAddress">
			<context kind="class">Hyperlink</context>
			<name>SubAddress</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Hyperlink.TextToDisplay-->
	<element type="property">
		<source id="Excel.Hyperlink.TextToDisplay">
			<context kind="class">Hyperlink</context>
			<name>TextToDisplay</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Hyperlink.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.Hyperlink.Type">
			<context kind="class">Hyperlink</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Hyperlinks-->
	<element type="class">
		<source id="Excel.Hyperlinks">
			<name>Hyperlinks</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Hyperlinks.Add-->
	<element type="method">
		<source id="Excel.Hyperlinks.Add">
			<context kind="class">Hyperlinks</context>
			<name>Add</name>
			<type>Object</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Anchor</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Address</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SubAddress</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ScreenTip</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TextToDisplay</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Hyperlinks.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Hyperlinks.Application">
			<context kind="class">Hyperlinks</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Hyperlinks.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Hyperlinks.Count">
			<context kind="class">Hyperlinks</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Hyperlinks.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Hyperlinks.Creator">
			<context kind="class">Hyperlinks</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Hyperlinks.Delete-->
	<element type="method">
		<source id="Excel.Hyperlinks.Delete">
			<context kind="class">Hyperlinks</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Hyperlinks.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Hyperlinks.Item">
			<context kind="class">Hyperlinks</context>
			<name default="true">Item</name>
			<type>Hyperlink</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Hyperlinks.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Hyperlinks.Parent">
			<context kind="class">Hyperlinks</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Interior-->
	<element type="class">
		<source id="Excel.Interior">
			<name>Interior</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Interior.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Interior.Application">
			<context kind="class">Interior</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Interior.Color-->
	<element type="property">
		<source id="Excel.Interior.Color">
			<context kind="class">Interior</context>
			<name>Color</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Interior.ColorIndex-->
	<element type="property">
		<source id="Excel.Interior.ColorIndex">
			<context kind="class">Interior</context>
			<name>ColorIndex</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Interior.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Interior.Creator">
			<context kind="class">Interior</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Interior.InvertIfNegative-->
	<element type="property">
		<source id="Excel.Interior.InvertIfNegative">
			<context kind="class">Interior</context>
			<name>InvertIfNegative</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Interior.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Interior.Parent">
			<context kind="class">Interior</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Interior.Pattern-->
	<element type="property">
		<source id="Excel.Interior.Pattern">
			<context kind="class">Interior</context>
			<name>Pattern</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Interior.PatternColor-->
	<element type="property">
		<source id="Excel.Interior.PatternColor">
			<context kind="class">Interior</context>
			<name>PatternColor</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Interior.PatternColorIndex-->
	<element type="property">
		<source id="Excel.Interior.PatternColorIndex">
			<context kind="class">Interior</context>
			<name>PatternColorIndex</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::IRtdServer-->
	<element type="class">
		<source id="Excel.IRtdServer">
			<name>IRtdServer</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::IRtdServer.ConnectData-->
	<element type="method">
		<source id="Excel.IRtdServer.ConnectData">
			<context kind="class">IRtdServer</context>
			<name>ConnectData</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>TopicID</name>
				</parameter>
				<parameter>
					<type>VT_PTR+VT_SAFEARRAY+VT_VARIANT</type>
					<name>Strings</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>GetNewValues</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::IRtdServer.DisconnectData-->
	<element type="method">
		<source id="Excel.IRtdServer.DisconnectData">
			<context kind="class">IRtdServer</context>
			<name>DisconnectData</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>TopicID</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::IRtdServer.Heartbeat-->
	<element type="method">
		<source id="Excel.IRtdServer.Heartbeat">
			<context kind="class">IRtdServer</context>
			<name>Heartbeat</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::IRtdServer.RefreshData-->
	<element type="method">
		<source id="Excel.IRtdServer.RefreshData">
			<context kind="class">IRtdServer</context>
			<name>RefreshData</name>
			<type>VT_SAFEARRAY+VT_VARIANT</type>
			<parameter-list>
				<parameter>
					<type>int[]</type>
					<name>TopicCount</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::IRtdServer.ServerStart-->
	<element type="method">
		<source id="Excel.IRtdServer.ServerStart">
			<context kind="class">IRtdServer</context>
			<name>ServerStart</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>IRTDUpdateEvent</type>
					<name>CallbackObject</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::IRtdServer.ServerTerminate-->
	<element type="method">
		<source id="Excel.IRtdServer.ServerTerminate">
			<context kind="class">IRtdServer</context>
			<name>ServerTerminate</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::IRTDUpdateEvent-->
	<element type="class">
		<source id="Excel.IRTDUpdateEvent">
			<name>IRTDUpdateEvent</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::IRTDUpdateEvent.Disconnect-->
	<element type="method">
		<source id="Excel.IRTDUpdateEvent.Disconnect">
			<context kind="class">IRTDUpdateEvent</context>
			<name>Disconnect</name>
			<type>void</type>
		</source>
	</element>
	<!--property::IRTDUpdateEvent.HeartbeatInterval-->
	<element type="property">
		<source id="Excel.IRTDUpdateEvent.HeartbeatInterval">
			<context kind="class">IRTDUpdateEvent</context>
			<name>HeartbeatInterval</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::IRTDUpdateEvent.UpdateNotify-->
	<element type="method">
		<source id="Excel.IRTDUpdateEvent.UpdateNotify">
			<context kind="class">IRTDUpdateEvent</context>
			<name>UpdateNotify</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::Label-->
	<element type="class">
		<source id="Excel.Label">
			<name>Label</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Label.Accelerator-->
	<element type="property">
		<source id="Excel.Label.Accelerator">
			<context kind="class">Label</context>
			<name>Accelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Label.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Label.Application">
			<context kind="class">Label</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Label.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Label.BottomRightCell">
			<context kind="class">Label</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Label.BringToFront-->
	<element type="method">
		<source id="Excel.Label.BringToFront">
			<context kind="class">Label</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Label.Caption-->
	<element type="property">
		<source id="Excel.Label.Caption">
			<context kind="class">Label</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Label.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Label.Characters">
			<context kind="class">Label</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Label.CheckSpelling-->
	<element type="method">
		<source id="Excel.Label.CheckSpelling">
			<context kind="class">Label</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Label.Copy-->
	<element type="method">
		<source id="Excel.Label.Copy">
			<context kind="class">Label</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Label.CopyPicture-->
	<element type="method">
		<source id="Excel.Label.CopyPicture">
			<context kind="class">Label</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Label.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Label.Creator">
			<context kind="class">Label</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Label.Cut-->
	<element type="method">
		<source id="Excel.Label.Cut">
			<context kind="class">Label</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Label.Delete-->
	<element type="method">
		<source id="Excel.Label.Delete">
			<context kind="class">Label</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Label.Duplicate-->
	<element type="method">
		<source id="Excel.Label.Duplicate">
			<context kind="class">Label</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Label.Enabled-->
	<element type="property">
		<source id="Excel.Label.Enabled">
			<context kind="class">Label</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Label.Height-->
	<element type="property">
		<source id="Excel.Label.Height">
			<context kind="class">Label</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Label.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Label.Index">
			<context kind="class">Label</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Label.Left-->
	<element type="property">
		<source id="Excel.Label.Left">
			<context kind="class">Label</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Label.Locked-->
	<element type="property">
		<source id="Excel.Label.Locked">
			<context kind="class">Label</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Label.LockedText-->
	<element type="property">
		<source id="Excel.Label.LockedText">
			<context kind="class">Label</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Label.Name-->
	<element type="property">
		<source id="Excel.Label.Name">
			<context kind="class">Label</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Label.OnAction-->
	<element type="property">
		<source id="Excel.Label.OnAction">
			<context kind="class">Label</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Label.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Label.Parent">
			<context kind="class">Label</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Label.PhoneticAccelerator-->
	<element type="property">
		<source id="Excel.Label.PhoneticAccelerator">
			<context kind="class">Label</context>
			<name>PhoneticAccelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Label.Placement-->
	<element type="property">
		<source id="Excel.Label.Placement">
			<context kind="class">Label</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Label.PrintObject-->
	<element type="property">
		<source id="Excel.Label.PrintObject">
			<context kind="class">Label</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Label.Select-->
	<element type="method">
		<source id="Excel.Label.Select">
			<context kind="class">Label</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Label.SendToBack-->
	<element type="method">
		<source id="Excel.Label.SendToBack">
			<context kind="class">Label</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Label.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Label.ShapeRange">
			<context kind="class">Label</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Label.Text-->
	<element type="property">
		<source id="Excel.Label.Text">
			<context kind="class">Label</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Label.Top-->
	<element type="property">
		<source id="Excel.Label.Top">
			<context kind="class">Label</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Label.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Label.TopLeftCell">
			<context kind="class">Label</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Label.Visible-->
	<element type="property">
		<source id="Excel.Label.Visible">
			<context kind="class">Label</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Label.Width-->
	<element type="property">
		<source id="Excel.Label.Width">
			<context kind="class">Label</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Label.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Label.ZOrder">
			<context kind="class">Label</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Labels-->
	<element type="class">
		<source id="Excel.Labels">
			<name>Labels</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Labels.Accelerator-->
	<element type="property">
		<source id="Excel.Labels.Accelerator">
			<context kind="class">Labels</context>
			<name>Accelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Labels.Add-->
	<element type="method">
		<source id="Excel.Labels.Add">
			<context kind="class">Labels</context>
			<name>Add</name>
			<type>Label</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Labels.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Labels.Application">
			<context kind="class">Labels</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Labels.BringToFront-->
	<element type="method">
		<source id="Excel.Labels.BringToFront">
			<context kind="class">Labels</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Labels.Caption-->
	<element type="property">
		<source id="Excel.Labels.Caption">
			<context kind="class">Labels</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Labels.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Labels.Characters">
			<context kind="class">Labels</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Labels.CheckSpelling-->
	<element type="method">
		<source id="Excel.Labels.CheckSpelling">
			<context kind="class">Labels</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Labels.Copy-->
	<element type="method">
		<source id="Excel.Labels.Copy">
			<context kind="class">Labels</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Labels.CopyPicture-->
	<element type="method">
		<source id="Excel.Labels.CopyPicture">
			<context kind="class">Labels</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Labels.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Labels.Count">
			<context kind="class">Labels</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Labels.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Labels.Creator">
			<context kind="class">Labels</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Labels.Cut-->
	<element type="method">
		<source id="Excel.Labels.Cut">
			<context kind="class">Labels</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Labels.Delete-->
	<element type="method">
		<source id="Excel.Labels.Delete">
			<context kind="class">Labels</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Labels.Duplicate-->
	<element type="method">
		<source id="Excel.Labels.Duplicate">
			<context kind="class">Labels</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Labels.Enabled-->
	<element type="property">
		<source id="Excel.Labels.Enabled">
			<context kind="class">Labels</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Labels.Group-->
	<element type="method">
		<source id="Excel.Labels.Group">
			<context kind="class">Labels</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::Labels.Height-->
	<element type="property">
		<source id="Excel.Labels.Height">
			<context kind="class">Labels</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--method::Labels.Item-->
	<element type="method">
		<source id="Excel.Labels.Item">
			<context kind="class">Labels</context>
			<name>Item</name>
			<type>Label</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Labels.Left-->
	<element type="property">
		<source id="Excel.Labels.Left">
			<context kind="class">Labels</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Labels.Locked-->
	<element type="property">
		<source id="Excel.Labels.Locked">
			<context kind="class">Labels</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Labels.LockedText-->
	<element type="property">
		<source id="Excel.Labels.LockedText">
			<context kind="class">Labels</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Labels.OnAction-->
	<element type="property">
		<source id="Excel.Labels.OnAction">
			<context kind="class">Labels</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Labels.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Labels.Parent">
			<context kind="class">Labels</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Labels.PhoneticAccelerator-->
	<element type="property">
		<source id="Excel.Labels.PhoneticAccelerator">
			<context kind="class">Labels</context>
			<name>PhoneticAccelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Labels.Placement-->
	<element type="property">
		<source id="Excel.Labels.Placement">
			<context kind="class">Labels</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Labels.PrintObject-->
	<element type="property">
		<source id="Excel.Labels.PrintObject">
			<context kind="class">Labels</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Labels.Select-->
	<element type="method">
		<source id="Excel.Labels.Select">
			<context kind="class">Labels</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Labels.SendToBack-->
	<element type="method">
		<source id="Excel.Labels.SendToBack">
			<context kind="class">Labels</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Labels.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Labels.ShapeRange">
			<context kind="class">Labels</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Labels.Text-->
	<element type="property">
		<source id="Excel.Labels.Text">
			<context kind="class">Labels</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Labels.Top-->
	<element type="property">
		<source id="Excel.Labels.Top">
			<context kind="class">Labels</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Labels.Visible-->
	<element type="property">
		<source id="Excel.Labels.Visible">
			<context kind="class">Labels</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Labels.Width-->
	<element type="property">
		<source id="Excel.Labels.Width">
			<context kind="class">Labels</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Labels.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Labels.ZOrder">
			<context kind="class">Labels</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::LeaderLines-->
	<element type="class">
		<source id="Excel.LeaderLines">
			<name>LeaderLines</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::LeaderLines.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.LeaderLines.Application">
			<context kind="class">LeaderLines</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::LeaderLines.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.LeaderLines.Border">
			<context kind="class">LeaderLines</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::LeaderLines.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.LeaderLines.Creator">
			<context kind="class">LeaderLines</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::LeaderLines.Delete-->
	<element type="method">
		<source id="Excel.LeaderLines.Delete">
			<context kind="class">LeaderLines</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::LeaderLines.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.LeaderLines.Parent">
			<context kind="class">LeaderLines</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::LeaderLines.Select-->
	<element type="method">
		<source id="Excel.LeaderLines.Select">
			<context kind="class">LeaderLines</context>
			<name>Select</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::Legend-->
	<element type="class">
		<source id="Excel.Legend">
			<name>Legend</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Legend.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Legend.Application">
			<context kind="class">Legend</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Legend.AutoScaleFont-->
	<element type="property">
		<source id="Excel.Legend.AutoScaleFont">
			<context kind="class">Legend</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Legend.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Legend.Border">
			<context kind="class">Legend</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::Legend.Clear-->
	<element type="method">
		<source id="Excel.Legend.Clear">
			<context kind="class">Legend</context>
			<name>Clear</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Legend.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Legend.Creator">
			<context kind="class">Legend</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Legend.Delete-->
	<element type="method">
		<source id="Excel.Legend.Delete">
			<context kind="class">Legend</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Legend.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.Legend.Fill">
			<context kind="class">Legend</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::Legend.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Legend.Font">
			<context kind="class">Legend</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Legend.Height-->
	<element type="property">
		<source id="Excel.Legend.Height">
			<context kind="class">Legend</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Legend.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Legend.Interior">
			<context kind="class">Legend</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::Legend.Left-->
	<element type="property">
		<source id="Excel.Legend.Left">
			<context kind="class">Legend</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--method::Legend.LegendEntries-->
	<element type="method">
		<source id="Excel.Legend.LegendEntries">
			<context kind="class">Legend</context>
			<name>LegendEntries</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Legend.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.Legend.Name">
			<context kind="class">Legend</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Legend.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Legend.Parent">
			<context kind="class">Legend</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Legend.Position-->
	<element type="property">
		<source id="Excel.Legend.Position">
			<context kind="class">Legend</context>
			<name>Position</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Legend.Select-->
	<element type="method">
		<source id="Excel.Legend.Select">
			<context kind="class">Legend</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Legend.Shadow-->
	<element type="property">
		<source id="Excel.Legend.Shadow">
			<context kind="class">Legend</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Legend.Top-->
	<element type="property">
		<source id="Excel.Legend.Top">
			<context kind="class">Legend</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Legend.Width-->
	<element type="property">
		<source id="Excel.Legend.Width">
			<context kind="class">Legend</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--Class::LegendEntries-->
	<element type="class">
		<source id="Excel.LegendEntries">
			<name>LegendEntries</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::LegendEntries.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntries.Application">
			<context kind="class">LegendEntries</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::LegendEntries.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntries.Count">
			<context kind="class">LegendEntries</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LegendEntries.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntries.Creator">
			<context kind="class">LegendEntries</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::LegendEntries.Item-->
	<element type="method">
		<source id="Excel.LegendEntries.Item">
			<context kind="class">LegendEntries</context>
			<name>Item</name>
			<type>LegendEntry</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::LegendEntries.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntries.Parent">
			<context kind="class">LegendEntries</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::LegendEntry-->
	<element type="class">
		<source id="Excel.LegendEntry">
			<name>LegendEntry</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::LegendEntry.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntry.Application">
			<context kind="class">LegendEntry</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::LegendEntry.AutoScaleFont-->
	<element type="property">
		<source id="Excel.LegendEntry.AutoScaleFont">
			<context kind="class">LegendEntry</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::LegendEntry.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntry.Creator">
			<context kind="class">LegendEntry</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::LegendEntry.Delete-->
	<element type="method">
		<source id="Excel.LegendEntry.Delete">
			<context kind="class">LegendEntry</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::LegendEntry.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntry.Font">
			<context kind="class">LegendEntry</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::LegendEntry.Height {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntry.Height">
			<context kind="class">LegendEntry</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::LegendEntry.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntry.Index">
			<context kind="class">LegendEntry</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LegendEntry.Left {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntry.Left">
			<context kind="class">LegendEntry</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::LegendEntry.LegendKey {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntry.LegendKey">
			<context kind="class">LegendEntry</context>
			<name>LegendKey</name>
			<type>LegendKey</type>
		</source>
	</element>
	<!--property::LegendEntry.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntry.Parent">
			<context kind="class">LegendEntry</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::LegendEntry.Select-->
	<element type="method">
		<source id="Excel.LegendEntry.Select">
			<context kind="class">LegendEntry</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::LegendEntry.Top {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntry.Top">
			<context kind="class">LegendEntry</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::LegendEntry.Width {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendEntry.Width">
			<context kind="class">LegendEntry</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--Class::LegendKey-->
	<element type="class">
		<source id="Excel.LegendKey">
			<name>LegendKey</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::LegendKey.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendKey.Application">
			<context kind="class">LegendKey</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::LegendKey.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendKey.Border">
			<context kind="class">LegendKey</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::LegendKey.ClearFormats-->
	<element type="method">
		<source id="Excel.LegendKey.ClearFormats">
			<context kind="class">LegendKey</context>
			<name>ClearFormats</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::LegendKey.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendKey.Creator">
			<context kind="class">LegendKey</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::LegendKey.Delete-->
	<element type="method">
		<source id="Excel.LegendKey.Delete">
			<context kind="class">LegendKey</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::LegendKey.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendKey.Fill">
			<context kind="class">LegendKey</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::LegendKey.Height {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendKey.Height">
			<context kind="class">LegendKey</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::LegendKey.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendKey.Interior">
			<context kind="class">LegendKey</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::LegendKey.InvertIfNegative-->
	<element type="property">
		<source id="Excel.LegendKey.InvertIfNegative">
			<context kind="class">LegendKey</context>
			<name>InvertIfNegative</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::LegendKey.Left {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendKey.Left">
			<context kind="class">LegendKey</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::LegendKey.MarkerBackgroundColor-->
	<element type="property">
		<source id="Excel.LegendKey.MarkerBackgroundColor">
			<context kind="class">LegendKey</context>
			<name>MarkerBackgroundColor</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LegendKey.MarkerBackgroundColorIndex-->
	<element type="property">
		<source id="Excel.LegendKey.MarkerBackgroundColorIndex">
			<context kind="class">LegendKey</context>
			<name>MarkerBackgroundColorIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LegendKey.MarkerForegroundColor-->
	<element type="property">
		<source id="Excel.LegendKey.MarkerForegroundColor">
			<context kind="class">LegendKey</context>
			<name>MarkerForegroundColor</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LegendKey.MarkerForegroundColorIndex-->
	<element type="property">
		<source id="Excel.LegendKey.MarkerForegroundColorIndex">
			<context kind="class">LegendKey</context>
			<name>MarkerForegroundColorIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LegendKey.MarkerSize-->
	<element type="property">
		<source id="Excel.LegendKey.MarkerSize">
			<context kind="class">LegendKey</context>
			<name>MarkerSize</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LegendKey.MarkerStyle-->
	<element type="property">
		<source id="Excel.LegendKey.MarkerStyle">
			<context kind="class">LegendKey</context>
			<name>MarkerStyle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LegendKey.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendKey.Parent">
			<context kind="class">LegendKey</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::LegendKey.PictureType-->
	<element type="property">
		<source id="Excel.LegendKey.PictureType">
			<context kind="class">LegendKey</context>
			<name>PictureType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LegendKey.PictureUnit-->
	<element type="property">
		<source id="Excel.LegendKey.PictureUnit">
			<context kind="class">LegendKey</context>
			<name>PictureUnit</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::LegendKey.Select-->
	<element type="method">
		<source id="Excel.LegendKey.Select">
			<context kind="class">LegendKey</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::LegendKey.Shadow-->
	<element type="property">
		<source id="Excel.LegendKey.Shadow">
			<context kind="class">LegendKey</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::LegendKey.Smooth-->
	<element type="property">
		<source id="Excel.LegendKey.Smooth">
			<context kind="class">LegendKey</context>
			<name>Smooth</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::LegendKey.Top {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendKey.Top">
			<context kind="class">LegendKey</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::LegendKey.Width {ReadOnly}-->
	<element type="property">
		<source id="Excel.LegendKey.Width">
			<context kind="class">LegendKey</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--Class::Line-->
	<element type="class">
		<source id="Excel.Line">
			<name>Line</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Line.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Line.Application">
			<context kind="class">Line</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Line.ArrowHeadLength-->
	<element type="property">
		<source id="Excel.Line.ArrowHeadLength">
			<context kind="class">Line</context>
			<name>ArrowHeadLength</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Line.ArrowHeadStyle-->
	<element type="property">
		<source id="Excel.Line.ArrowHeadStyle">
			<context kind="class">Line</context>
			<name>ArrowHeadStyle</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Line.ArrowHeadWidth-->
	<element type="property">
		<source id="Excel.Line.ArrowHeadWidth">
			<context kind="class">Line</context>
			<name>ArrowHeadWidth</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Line.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Line.Border">
			<context kind="class">Line</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::Line.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Line.BottomRightCell">
			<context kind="class">Line</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Line.BringToFront-->
	<element type="method">
		<source id="Excel.Line.BringToFront">
			<context kind="class">Line</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Line.Copy-->
	<element type="method">
		<source id="Excel.Line.Copy">
			<context kind="class">Line</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Line.CopyPicture-->
	<element type="method">
		<source id="Excel.Line.CopyPicture">
			<context kind="class">Line</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Line.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Line.Creator">
			<context kind="class">Line</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Line.Cut-->
	<element type="method">
		<source id="Excel.Line.Cut">
			<context kind="class">Line</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Line.Delete-->
	<element type="method">
		<source id="Excel.Line.Delete">
			<context kind="class">Line</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Line.Duplicate-->
	<element type="method">
		<source id="Excel.Line.Duplicate">
			<context kind="class">Line</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Line.Enabled-->
	<element type="property">
		<source id="Excel.Line.Enabled">
			<context kind="class">Line</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Line.Height-->
	<element type="property">
		<source id="Excel.Line.Height">
			<context kind="class">Line</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Line.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Line.Index">
			<context kind="class">Line</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Line.Left-->
	<element type="property">
		<source id="Excel.Line.Left">
			<context kind="class">Line</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Line.Locked-->
	<element type="property">
		<source id="Excel.Line.Locked">
			<context kind="class">Line</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Line.Name-->
	<element type="property">
		<source id="Excel.Line.Name">
			<context kind="class">Line</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Line.OnAction-->
	<element type="property">
		<source id="Excel.Line.OnAction">
			<context kind="class">Line</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Line.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Line.Parent">
			<context kind="class">Line</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Line.Placement-->
	<element type="property">
		<source id="Excel.Line.Placement">
			<context kind="class">Line</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Line.PrintObject-->
	<element type="property">
		<source id="Excel.Line.PrintObject">
			<context kind="class">Line</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Line.Select-->
	<element type="method">
		<source id="Excel.Line.Select">
			<context kind="class">Line</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Line.SendToBack-->
	<element type="method">
		<source id="Excel.Line.SendToBack">
			<context kind="class">Line</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Line.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Line.ShapeRange">
			<context kind="class">Line</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Line.Top-->
	<element type="property">
		<source id="Excel.Line.Top">
			<context kind="class">Line</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Line.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Line.TopLeftCell">
			<context kind="class">Line</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Line.Visible-->
	<element type="property">
		<source id="Excel.Line.Visible">
			<context kind="class">Line</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Line.Width-->
	<element type="property">
		<source id="Excel.Line.Width">
			<context kind="class">Line</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Line.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Line.ZOrder">
			<context kind="class">Line</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::LineFormat-->
	<element type="class">
		<source id="Excel.LineFormat">
			<name>LineFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::LineFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.LineFormat.Application">
			<context kind="class">LineFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::LineFormat.BackColor-->
	<element type="property">
		<source id="Excel.LineFormat.BackColor">
			<context kind="class">LineFormat</context>
			<name>BackColor</name>
			<type>ColorFormat</type>
		</source>
	</element>
	<!--property::LineFormat.BeginArrowheadLength-->
	<element type="property">
		<source id="Excel.LineFormat.BeginArrowheadLength">
			<context kind="class">LineFormat</context>
			<name>BeginArrowheadLength</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LineFormat.BeginArrowheadStyle-->
	<element type="property">
		<source id="Excel.LineFormat.BeginArrowheadStyle">
			<context kind="class">LineFormat</context>
			<name>BeginArrowheadStyle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LineFormat.BeginArrowheadWidth-->
	<element type="property">
		<source id="Excel.LineFormat.BeginArrowheadWidth">
			<context kind="class">LineFormat</context>
			<name>BeginArrowheadWidth</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LineFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.LineFormat.Creator">
			<context kind="class">LineFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LineFormat.DashStyle-->
	<element type="property">
		<source id="Excel.LineFormat.DashStyle">
			<context kind="class">LineFormat</context>
			<name>DashStyle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LineFormat.EndArrowheadLength-->
	<element type="property">
		<source id="Excel.LineFormat.EndArrowheadLength">
			<context kind="class">LineFormat</context>
			<name>EndArrowheadLength</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LineFormat.EndArrowheadStyle-->
	<element type="property">
		<source id="Excel.LineFormat.EndArrowheadStyle">
			<context kind="class">LineFormat</context>
			<name>EndArrowheadStyle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LineFormat.EndArrowheadWidth-->
	<element type="property">
		<source id="Excel.LineFormat.EndArrowheadWidth">
			<context kind="class">LineFormat</context>
			<name>EndArrowheadWidth</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LineFormat.ForeColor-->
	<element type="property">
		<source id="Excel.LineFormat.ForeColor">
			<context kind="class">LineFormat</context>
			<name>ForeColor</name>
			<type>ColorFormat</type>
		</source>
	</element>
	<!--property::LineFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.LineFormat.Parent">
			<context kind="class">LineFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::LineFormat.Pattern-->
	<element type="property">
		<source id="Excel.LineFormat.Pattern">
			<context kind="class">LineFormat</context>
			<name>Pattern</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LineFormat.Style-->
	<element type="property">
		<source id="Excel.LineFormat.Style">
			<context kind="class">LineFormat</context>
			<name>Style</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LineFormat.Transparency-->
	<element type="property">
		<source id="Excel.LineFormat.Transparency">
			<context kind="class">LineFormat</context>
			<name>Transparency</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::LineFormat.Visible-->
	<element type="property">
		<source id="Excel.LineFormat.Visible">
			<context kind="class">LineFormat</context>
			<name>Visible</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LineFormat.Weight-->
	<element type="property">
		<source id="Excel.LineFormat.Weight">
			<context kind="class">LineFormat</context>
			<name>Weight</name>
			<type>Single</type>
		</source>
	</element>
	<!--Class::Lines-->
	<element type="class">
		<source id="Excel.Lines">
			<name>Lines</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Lines.Add-->
	<element type="method">
		<source id="Excel.Lines.Add">
			<context kind="class">Lines</context>
			<name>Add</name>
			<type>Line</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>X1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Y1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>X2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Y2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Lines.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Lines.Application">
			<context kind="class">Lines</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Lines.ArrowHeadLength-->
	<element type="property">
		<source id="Excel.Lines.ArrowHeadLength">
			<context kind="class">Lines</context>
			<name>ArrowHeadLength</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Lines.ArrowHeadStyle-->
	<element type="property">
		<source id="Excel.Lines.ArrowHeadStyle">
			<context kind="class">Lines</context>
			<name>ArrowHeadStyle</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Lines.ArrowHeadWidth-->
	<element type="property">
		<source id="Excel.Lines.ArrowHeadWidth">
			<context kind="class">Lines</context>
			<name>ArrowHeadWidth</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Lines.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Lines.Border">
			<context kind="class">Lines</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::Lines.BringToFront-->
	<element type="method">
		<source id="Excel.Lines.BringToFront">
			<context kind="class">Lines</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Lines.Copy-->
	<element type="method">
		<source id="Excel.Lines.Copy">
			<context kind="class">Lines</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Lines.CopyPicture-->
	<element type="method">
		<source id="Excel.Lines.CopyPicture">
			<context kind="class">Lines</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Lines.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Lines.Count">
			<context kind="class">Lines</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Lines.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Lines.Creator">
			<context kind="class">Lines</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Lines.Cut-->
	<element type="method">
		<source id="Excel.Lines.Cut">
			<context kind="class">Lines</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Lines.Delete-->
	<element type="method">
		<source id="Excel.Lines.Delete">
			<context kind="class">Lines</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Lines.Duplicate-->
	<element type="method">
		<source id="Excel.Lines.Duplicate">
			<context kind="class">Lines</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Lines.Enabled-->
	<element type="property">
		<source id="Excel.Lines.Enabled">
			<context kind="class">Lines</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Lines.Group-->
	<element type="method">
		<source id="Excel.Lines.Group">
			<context kind="class">Lines</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::Lines.Height-->
	<element type="property">
		<source id="Excel.Lines.Height">
			<context kind="class">Lines</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--method::Lines.Item-->
	<element type="method">
		<source id="Excel.Lines.Item">
			<context kind="class">Lines</context>
			<name>Item</name>
			<type>Line</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Lines.Left-->
	<element type="property">
		<source id="Excel.Lines.Left">
			<context kind="class">Lines</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Lines.Locked-->
	<element type="property">
		<source id="Excel.Lines.Locked">
			<context kind="class">Lines</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Lines.OnAction-->
	<element type="property">
		<source id="Excel.Lines.OnAction">
			<context kind="class">Lines</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Lines.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Lines.Parent">
			<context kind="class">Lines</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Lines.Placement-->
	<element type="property">
		<source id="Excel.Lines.Placement">
			<context kind="class">Lines</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Lines.PrintObject-->
	<element type="property">
		<source id="Excel.Lines.PrintObject">
			<context kind="class">Lines</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Lines.Select-->
	<element type="method">
		<source id="Excel.Lines.Select">
			<context kind="class">Lines</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Lines.SendToBack-->
	<element type="method">
		<source id="Excel.Lines.SendToBack">
			<context kind="class">Lines</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Lines.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Lines.ShapeRange">
			<context kind="class">Lines</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Lines.Top-->
	<element type="property">
		<source id="Excel.Lines.Top">
			<context kind="class">Lines</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Lines.Visible-->
	<element type="property">
		<source id="Excel.Lines.Visible">
			<context kind="class">Lines</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Lines.Width-->
	<element type="property">
		<source id="Excel.Lines.Width">
			<context kind="class">Lines</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Lines.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Lines.ZOrder">
			<context kind="class">Lines</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::LinkFormat-->
	<element type="class">
		<source id="Excel.LinkFormat">
			<name>LinkFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::LinkFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.LinkFormat.Application">
			<context kind="class">LinkFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::LinkFormat.AutoUpdate-->
	<element type="property">
		<source id="Excel.LinkFormat.AutoUpdate">
			<context kind="class">LinkFormat</context>
			<name>AutoUpdate</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::LinkFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.LinkFormat.Creator">
			<context kind="class">LinkFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LinkFormat.Locked-->
	<element type="property">
		<source id="Excel.LinkFormat.Locked">
			<context kind="class">LinkFormat</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::LinkFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.LinkFormat.Parent">
			<context kind="class">LinkFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::LinkFormat.Update-->
	<element type="method">
		<source id="Excel.LinkFormat.Update">
			<context kind="class">LinkFormat</context>
			<name>Update</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::ListBox-->
	<element type="class">
		<source id="Excel.ListBox">
			<name>ListBox</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ListBox.AddItem-->
	<element type="method">
		<source id="Excel.ListBox.AddItem">
			<context kind="class">ListBox</context>
			<name>AddItem</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Text</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListBox.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBox.Application">
			<context kind="class">ListBox</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ListBox.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBox.BottomRightCell">
			<context kind="class">ListBox</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::ListBox.BringToFront-->
	<element type="method">
		<source id="Excel.ListBox.BringToFront">
			<context kind="class">ListBox</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ListBox.Copy-->
	<element type="method">
		<source id="Excel.ListBox.Copy">
			<context kind="class">ListBox</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ListBox.CopyPicture-->
	<element type="method">
		<source id="Excel.ListBox.CopyPicture">
			<context kind="class">ListBox</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListBox.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBox.Creator">
			<context kind="class">ListBox</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ListBox.Cut-->
	<element type="method">
		<source id="Excel.ListBox.Cut">
			<context kind="class">ListBox</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ListBox.Delete-->
	<element type="method">
		<source id="Excel.ListBox.Delete">
			<context kind="class">ListBox</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ListBox.Display3DShading-->
	<element type="property">
		<source id="Excel.ListBox.Display3DShading">
			<context kind="class">ListBox</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ListBox.Duplicate-->
	<element type="method">
		<source id="Excel.ListBox.Duplicate">
			<context kind="class">ListBox</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ListBox.Enabled-->
	<element type="property">
		<source id="Excel.ListBox.Enabled">
			<context kind="class">ListBox</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListBox.Height-->
	<element type="property">
		<source id="Excel.ListBox.Height">
			<context kind="class">ListBox</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ListBox.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBox.Index">
			<context kind="class">ListBox</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListBox.Left-->
	<element type="property">
		<source id="Excel.ListBox.Left">
			<context kind="class">ListBox</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ListBox.LinkedCell-->
	<element type="property">
		<source id="Excel.ListBox.LinkedCell">
			<context kind="class">ListBox</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ListBox.LinkedObject {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBox.LinkedObject">
			<context kind="class">ListBox</context>
			<name>LinkedObject</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ListBox.List-->
	<element type="property">
		<source id="Excel.ListBox.List">
			<context kind="class">ListBox</context>
			<name>List</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListBox.ListCount {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBox.ListCount">
			<context kind="class">ListBox</context>
			<name>ListCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListBox.ListFillRange-->
	<element type="property">
		<source id="Excel.ListBox.ListFillRange">
			<context kind="class">ListBox</context>
			<name>ListFillRange</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ListBox.ListIndex-->
	<element type="property">
		<source id="Excel.ListBox.ListIndex">
			<context kind="class">ListBox</context>
			<name>ListIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListBox.Locked-->
	<element type="property">
		<source id="Excel.ListBox.Locked">
			<context kind="class">ListBox</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListBox.MultiSelect-->
	<element type="property">
		<source id="Excel.ListBox.MultiSelect">
			<context kind="class">ListBox</context>
			<name>MultiSelect</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListBox.Name-->
	<element type="property">
		<source id="Excel.ListBox.Name">
			<context kind="class">ListBox</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ListBox.OnAction-->
	<element type="property">
		<source id="Excel.ListBox.OnAction">
			<context kind="class">ListBox</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ListBox.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBox.Parent">
			<context kind="class">ListBox</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ListBox.Placement-->
	<element type="property">
		<source id="Excel.ListBox.Placement">
			<context kind="class">ListBox</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ListBox.PrintObject-->
	<element type="property">
		<source id="Excel.ListBox.PrintObject">
			<context kind="class">ListBox</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ListBox.RemoveAllItems-->
	<element type="method">
		<source id="Excel.ListBox.RemoveAllItems">
			<context kind="class">ListBox</context>
			<name>RemoveAllItems</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ListBox.RemoveItem-->
	<element type="method">
		<source id="Excel.ListBox.RemoveItem">
			<context kind="class">ListBox</context>
			<name>RemoveItem</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Count</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ListBox.Select-->
	<element type="method">
		<source id="Excel.ListBox.Select">
			<context kind="class">ListBox</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListBox.Selected-->
	<element type="property">
		<source id="Excel.ListBox.Selected">
			<context kind="class">ListBox</context>
			<name>Selected</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ListBox.SendToBack-->
	<element type="method">
		<source id="Excel.ListBox.SendToBack">
			<context kind="class">ListBox</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ListBox.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBox.ShapeRange">
			<context kind="class">ListBox</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::ListBox.Top-->
	<element type="property">
		<source id="Excel.ListBox.Top">
			<context kind="class">ListBox</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ListBox.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBox.TopLeftCell">
			<context kind="class">ListBox</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::ListBox.Value {Default}-->
	<element type="property">
		<source id="Excel.ListBox.Value">
			<context kind="class">ListBox</context>
			<name default="true">Value</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListBox.Visible-->
	<element type="property">
		<source id="Excel.ListBox.Visible">
			<context kind="class">ListBox</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListBox.Width-->
	<element type="property">
		<source id="Excel.ListBox.Width">
			<context kind="class">ListBox</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ListBox.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBox.ZOrder">
			<context kind="class">ListBox</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ListBoxes-->
	<element type="class">
		<source id="Excel.ListBoxes">
			<name>ListBoxes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ListBoxes.Add-->
	<element type="method">
		<source id="Excel.ListBoxes.Add">
			<context kind="class">ListBoxes</context>
			<name>Add</name>
			<type>ListBox</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ListBoxes.AddItem-->
	<element type="method">
		<source id="Excel.ListBoxes.AddItem">
			<context kind="class">ListBoxes</context>
			<name>AddItem</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Text</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListBoxes.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBoxes.Application">
			<context kind="class">ListBoxes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::ListBoxes.BringToFront-->
	<element type="method">
		<source id="Excel.ListBoxes.BringToFront">
			<context kind="class">ListBoxes</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ListBoxes.Copy-->
	<element type="method">
		<source id="Excel.ListBoxes.Copy">
			<context kind="class">ListBoxes</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ListBoxes.CopyPicture-->
	<element type="method">
		<source id="Excel.ListBoxes.CopyPicture">
			<context kind="class">ListBoxes</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListBoxes.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBoxes.Count">
			<context kind="class">ListBoxes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListBoxes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBoxes.Creator">
			<context kind="class">ListBoxes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ListBoxes.Cut-->
	<element type="method">
		<source id="Excel.ListBoxes.Cut">
			<context kind="class">ListBoxes</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ListBoxes.Delete-->
	<element type="method">
		<source id="Excel.ListBoxes.Delete">
			<context kind="class">ListBoxes</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ListBoxes.Display3DShading-->
	<element type="property">
		<source id="Excel.ListBoxes.Display3DShading">
			<context kind="class">ListBoxes</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ListBoxes.Duplicate-->
	<element type="method">
		<source id="Excel.ListBoxes.Duplicate">
			<context kind="class">ListBoxes</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ListBoxes.Enabled-->
	<element type="property">
		<source id="Excel.ListBoxes.Enabled">
			<context kind="class">ListBoxes</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ListBoxes.Group-->
	<element type="method">
		<source id="Excel.ListBoxes.Group">
			<context kind="class">ListBoxes</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::ListBoxes.Height-->
	<element type="property">
		<source id="Excel.ListBoxes.Height">
			<context kind="class">ListBoxes</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--method::ListBoxes.Item-->
	<element type="method">
		<source id="Excel.ListBoxes.Item">
			<context kind="class">ListBoxes</context>
			<name>Item</name>
			<type>ListBoxe</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListBoxes.Left-->
	<element type="property">
		<source id="Excel.ListBoxes.Left">
			<context kind="class">ListBoxes</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ListBoxes.LinkedCell-->
	<element type="property">
		<source id="Excel.ListBoxes.LinkedCell">
			<context kind="class">ListBoxes</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ListBoxes.List-->
	<element type="property">
		<source id="Excel.ListBoxes.List">
			<context kind="class">ListBoxes</context>
			<name>List</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListBoxes.ListFillRange-->
	<element type="property">
		<source id="Excel.ListBoxes.ListFillRange">
			<context kind="class">ListBoxes</context>
			<name>ListFillRange</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ListBoxes.ListIndex-->
	<element type="property">
		<source id="Excel.ListBoxes.ListIndex">
			<context kind="class">ListBoxes</context>
			<name>ListIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListBoxes.Locked-->
	<element type="property">
		<source id="Excel.ListBoxes.Locked">
			<context kind="class">ListBoxes</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListBoxes.MultiSelect-->
	<element type="property">
		<source id="Excel.ListBoxes.MultiSelect">
			<context kind="class">ListBoxes</context>
			<name>MultiSelect</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListBoxes.OnAction-->
	<element type="property">
		<source id="Excel.ListBoxes.OnAction">
			<context kind="class">ListBoxes</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ListBoxes.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBoxes.Parent">
			<context kind="class">ListBoxes</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ListBoxes.Placement-->
	<element type="property">
		<source id="Excel.ListBoxes.Placement">
			<context kind="class">ListBoxes</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ListBoxes.PrintObject-->
	<element type="property">
		<source id="Excel.ListBoxes.PrintObject">
			<context kind="class">ListBoxes</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ListBoxes.RemoveAllItems-->
	<element type="method">
		<source id="Excel.ListBoxes.RemoveAllItems">
			<context kind="class">ListBoxes</context>
			<name>RemoveAllItems</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ListBoxes.RemoveItem-->
	<element type="method">
		<source id="Excel.ListBoxes.RemoveItem">
			<context kind="class">ListBoxes</context>
			<name>RemoveItem</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Count</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ListBoxes.Select-->
	<element type="method">
		<source id="Excel.ListBoxes.Select">
			<context kind="class">ListBoxes</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListBoxes.Selected-->
	<element type="property">
		<source id="Excel.ListBoxes.Selected">
			<context kind="class">ListBoxes</context>
			<name>Selected</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ListBoxes.SendToBack-->
	<element type="method">
		<source id="Excel.ListBoxes.SendToBack">
			<context kind="class">ListBoxes</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ListBoxes.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBoxes.ShapeRange">
			<context kind="class">ListBoxes</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::ListBoxes.Top-->
	<element type="property">
		<source id="Excel.ListBoxes.Top">
			<context kind="class">ListBoxes</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ListBoxes.Value {Default}-->
	<element type="property">
		<source id="Excel.ListBoxes.Value">
			<context kind="class">ListBoxes</context>
			<name default="true">Value</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListBoxes.Visible-->
	<element type="property">
		<source id="Excel.ListBoxes.Visible">
			<context kind="class">ListBoxes</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListBoxes.Width-->
	<element type="property">
		<source id="Excel.ListBoxes.Width">
			<context kind="class">ListBoxes</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ListBoxes.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListBoxes.ZOrder">
			<context kind="class">ListBoxes</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ListColumn-->
	<element type="class">
		<source id="Excel.ListColumn">
			<name>ListColumn</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ListColumn.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListColumn.Application">
			<context kind="class">ListColumn</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ListColumn.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListColumn.Creator">
			<context kind="class">ListColumn</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ListColumn.Delete-->
	<element type="method">
		<source id="Excel.ListColumn.Delete">
			<context kind="class">ListColumn</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ListColumn.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListColumn.Index">
			<context kind="class">ListColumn</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListColumn.ListDataFormat {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListColumn.ListDataFormat">
			<context kind="class">ListColumn</context>
			<name>ListDataFormat</name>
			<type>ListDataFormat</type>
		</source>
	</element>
	<!--property::ListColumn.Name {Default}-->
	<element type="property">
		<source id="Excel.ListColumn.Name">
			<context kind="class">ListColumn</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ListColumn.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListColumn.Parent">
			<context kind="class">ListColumn</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ListColumn.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListColumn.Range">
			<context kind="class">ListColumn</context>
			<name>Range</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::ListColumn.SharePointFormula {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListColumn.SharePointFormula">
			<context kind="class">ListColumn</context>
			<name>SharePointFormula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ListColumn.TotalsCalculation-->
	<element type="property">
		<source id="Excel.ListColumn.TotalsCalculation">
			<context kind="class">ListColumn</context>
			<name>TotalsCalculation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListColumn.XPath {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListColumn.XPath">
			<context kind="class">ListColumn</context>
			<name>XPath</name>
			<type>XPath</type>
		</source>
	</element>
	<!--Class::ListColumns-->
	<element type="class">
		<source id="Excel.ListColumns">
			<name>ListColumns</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ListColumns.Add-->
	<element type="method">
		<source id="Excel.ListColumns.Add">
			<context kind="class">ListColumns</context>
			<name>Add</name>
			<type>ListColumn</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Position</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListColumns.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListColumns.Application">
			<context kind="class">ListColumns</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ListColumns.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListColumns.Count">
			<context kind="class">ListColumns</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListColumns.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListColumns.Creator">
			<context kind="class">ListColumns</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListColumns.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListColumns.Item">
			<context kind="class">ListColumns</context>
			<name default="true">Item</name>
			<type>ListColumn</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListColumns.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListColumns.Parent">
			<context kind="class">ListColumns</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::ListDataFormat-->
	<element type="class">
		<source id="Excel.ListDataFormat">
			<name>ListDataFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ListDataFormat.AllowFillIn {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.AllowFillIn">
			<context kind="class">ListDataFormat</context>
			<name>AllowFillIn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListDataFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.Application">
			<context kind="class">ListDataFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ListDataFormat.Choices {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.Choices">
			<context kind="class">ListDataFormat</context>
			<name>Choices</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ListDataFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.Creator">
			<context kind="class">ListDataFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListDataFormat.DecimalPlaces {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.DecimalPlaces">
			<context kind="class">ListDataFormat</context>
			<name>DecimalPlaces</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListDataFormat.DefaultValue {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.DefaultValue">
			<context kind="class">ListDataFormat</context>
			<name>DefaultValue</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ListDataFormat.IsPercent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.IsPercent">
			<context kind="class">ListDataFormat</context>
			<name>IsPercent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListDataFormat.lcid {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.lcid">
			<context kind="class">ListDataFormat</context>
			<name>lcid</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListDataFormat.MaxCharacters {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.MaxCharacters">
			<context kind="class">ListDataFormat</context>
			<name>MaxCharacters</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListDataFormat.MaxNumber {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.MaxNumber">
			<context kind="class">ListDataFormat</context>
			<name>MaxNumber</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ListDataFormat.MinNumber {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.MinNumber">
			<context kind="class">ListDataFormat</context>
			<name>MinNumber</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ListDataFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.Parent">
			<context kind="class">ListDataFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ListDataFormat.ReadOnly {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.ReadOnly">
			<context kind="class">ListDataFormat</context>
			<name>ReadOnly</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListDataFormat.Required {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.Required">
			<context kind="class">ListDataFormat</context>
			<name>Required</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListDataFormat.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListDataFormat.Type">
			<context kind="class">ListDataFormat</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ListObject-->
	<element type="class">
		<source id="Excel.ListObject">
			<name>ListObject</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ListObject.Active {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.Active">
			<context kind="class">ListObject</context>
			<name>Active</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListObject.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.Application">
			<context kind="class">ListObject</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ListObject.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.Creator">
			<context kind="class">ListObject</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListObject.DataBodyRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.DataBodyRange">
			<context kind="class">ListObject</context>
			<name>DataBodyRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::ListObject.Delete-->
	<element type="method">
		<source id="Excel.ListObject.Delete">
			<context kind="class">ListObject</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ListObject.DisplayRightToLeft {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.DisplayRightToLeft">
			<context kind="class">ListObject</context>
			<name>DisplayRightToLeft</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListObject.HeaderRowRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.HeaderRowRange">
			<context kind="class">ListObject</context>
			<name>HeaderRowRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::ListObject.InsertRowRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.InsertRowRange">
			<context kind="class">ListObject</context>
			<name>InsertRowRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::ListObject.ListColumns {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.ListColumns">
			<context kind="class">ListObject</context>
			<name>ListColumns</name>
			<type>ListColumns</type>
		</source>
	</element>
	<!--property::ListObject.ListRows {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.ListRows">
			<context kind="class">ListObject</context>
			<name>ListRows</name>
			<type>ListRows</type>
		</source>
	</element>
	<!--property::ListObject.Name {Default}-->
	<element type="property">
		<source id="Excel.ListObject.Name">
			<context kind="class">ListObject</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ListObject.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.Parent">
			<context kind="class">ListObject</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::ListObject.Publish-->
	<element type="method">
		<source id="Excel.ListObject.Publish">
			<context kind="class">ListObject</context>
			<name>Publish</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Target</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>LinkSource</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListObject.QueryTable {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.QueryTable">
			<context kind="class">ListObject</context>
			<name>QueryTable</name>
			<type>QueryTable</type>
		</source>
	</element>
	<!--property::ListObject.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.Range">
			<context kind="class">ListObject</context>
			<name>Range</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::ListObject.Refresh-->
	<element type="method">
		<source id="Excel.ListObject.Refresh">
			<context kind="class">ListObject</context>
			<name>Refresh</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ListObject.Resize-->
	<element type="method">
		<source id="Excel.ListObject.Resize">
			<context kind="class">ListObject</context>
			<name>Resize</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Range</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListObject.SharePointURL {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.SharePointURL">
			<context kind="class">ListObject</context>
			<name>SharePointURL</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ListObject.ShowAutoFilter-->
	<element type="property">
		<source id="Excel.ListObject.ShowAutoFilter">
			<context kind="class">ListObject</context>
			<name>ShowAutoFilter</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListObject.ShowTotals-->
	<element type="property">
		<source id="Excel.ListObject.ShowTotals">
			<context kind="class">ListObject</context>
			<name>ShowTotals</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListObject.SourceType {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.SourceType">
			<context kind="class">ListObject</context>
			<name>SourceType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListObject.TotalsRowRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.TotalsRowRange">
			<context kind="class">ListObject</context>
			<name>TotalsRowRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::ListObject.Unlink-->
	<element type="method">
		<source id="Excel.ListObject.Unlink">
			<context kind="class">ListObject</context>
			<name>Unlink</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ListObject.Unlist-->
	<element type="method">
		<source id="Excel.ListObject.Unlist">
			<context kind="class">ListObject</context>
			<name>Unlist</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ListObject.UpdateChanges-->
	<element type="method">
		<source id="Excel.ListObject.UpdateChanges">
			<context kind="class">ListObject</context>
			<name>UpdateChanges</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>iConflictType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListObject.XmlMap {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObject.XmlMap">
			<context kind="class">ListObject</context>
			<name>XmlMap</name>
			<type>XmlMap</type>
		</source>
	</element>
	<!--Class::ListObjects-->
	<element type="class">
		<source id="Excel.ListObjects">
			<name>ListObjects</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ListObjects.Add-->
	<element type="method">
		<source id="Excel.ListObjects.Add">
			<context kind="class">ListObjects</context>
			<name>Add</name>
			<type>ListObject</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>SourceType</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Source</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>LinkSource</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>XlListObjectHasHeaders</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Destination</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListObjects.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObjects.Application">
			<context kind="class">ListObjects</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ListObjects.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObjects.Count">
			<context kind="class">ListObjects</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListObjects.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObjects.Creator">
			<context kind="class">ListObjects</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListObjects.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObjects.Item">
			<context kind="class">ListObjects</context>
			<name default="true">Item</name>
			<type>ListObject</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListObjects.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListObjects.Parent">
			<context kind="class">ListObjects</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::ListRow-->
	<element type="class">
		<source id="Excel.ListRow">
			<name>ListRow</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ListRow.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListRow.Application">
			<context kind="class">ListRow</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ListRow.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListRow.Creator">
			<context kind="class">ListRow</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ListRow.Delete-->
	<element type="method">
		<source id="Excel.ListRow.Delete">
			<context kind="class">ListRow</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ListRow.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListRow.Index">
			<context kind="class">ListRow</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListRow.InvalidData {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListRow.InvalidData">
			<context kind="class">ListRow</context>
			<name>InvalidData</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ListRow.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListRow.Parent">
			<context kind="class">ListRow</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ListRow.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListRow.Range">
			<context kind="class">ListRow</context>
			<name>Range</name>
			<type>Range</type>
		</source>
	</element>
	<!--Class::ListRows-->
	<element type="class">
		<source id="Excel.ListRows">
			<name>ListRows</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ListRows.Add-->
	<element type="method">
		<source id="Excel.ListRows.Add">
			<context kind="class">ListRows</context>
			<name>Add</name>
			<type>ListRow</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Position</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListRows.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListRows.Application">
			<context kind="class">ListRows</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ListRows.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListRows.Count">
			<context kind="class">ListRows</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListRows.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListRows.Creator">
			<context kind="class">ListRows</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ListRows.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListRows.Item">
			<context kind="class">ListRows</context>
			<name default="true">Item</name>
			<type>ListRow</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ListRows.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ListRows.Parent">
			<context kind="class">ListRows</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Mailer-->
	<element type="class">
		<source id="Excel.Mailer">
			<name>Mailer</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Mailer.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Mailer.Application">
			<context kind="class">Mailer</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Mailer.BCCRecipients-->
	<element type="property">
		<source id="Excel.Mailer.BCCRecipients">
			<context kind="class">Mailer</context>
			<name>BCCRecipients</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Mailer.CCRecipients-->
	<element type="property">
		<source id="Excel.Mailer.CCRecipients">
			<context kind="class">Mailer</context>
			<name>CCRecipients</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Mailer.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Mailer.Creator">
			<context kind="class">Mailer</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Mailer.Enclosures-->
	<element type="property">
		<source id="Excel.Mailer.Enclosures">
			<context kind="class">Mailer</context>
			<name>Enclosures</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Mailer.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Mailer.Parent">
			<context kind="class">Mailer</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Mailer.Received {ReadOnly}-->
	<element type="property">
		<source id="Excel.Mailer.Received">
			<context kind="class">Mailer</context>
			<name>Received</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Mailer.SendDateTime {ReadOnly}-->
	<element type="property">
		<source id="Excel.Mailer.SendDateTime">
			<context kind="class">Mailer</context>
			<name>SendDateTime</name>
			<type>java.util.Date</type>
		</source>
	</element>
	<!--property::Mailer.Sender {ReadOnly}-->
	<element type="property">
		<source id="Excel.Mailer.Sender">
			<context kind="class">Mailer</context>
			<name>Sender</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Mailer.Subject-->
	<element type="property">
		<source id="Excel.Mailer.Subject">
			<context kind="class">Mailer</context>
			<name>Subject</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Mailer.ToRecipients-->
	<element type="property">
		<source id="Excel.Mailer.ToRecipients">
			<context kind="class">Mailer</context>
			<name>ToRecipients</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Mailer.WhichAddress-->
	<element type="property">
		<source id="Excel.Mailer.WhichAddress">
			<context kind="class">Mailer</context>
			<name>WhichAddress</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Menu-->
	<element type="class">
		<source id="Excel.Menu">
			<name>Menu</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Menu.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Menu.Application">
			<context kind="class">Menu</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Menu.Caption-->
	<element type="property">
		<source id="Excel.Menu.Caption">
			<context kind="class">Menu</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Menu.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Menu.Creator">
			<context kind="class">Menu</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Menu.Delete-->
	<element type="method">
		<source id="Excel.Menu.Delete">
			<context kind="class">Menu</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Menu.Enabled-->
	<element type="property">
		<source id="Excel.Menu.Enabled">
			<context kind="class">Menu</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Menu.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Menu.Index">
			<context kind="class">Menu</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Menu.MenuItems {ReadOnly}-->
	<element type="property">
		<source id="Excel.Menu.MenuItems">
			<context kind="class">Menu</context>
			<name>MenuItems</name>
			<type>MenuItems</type>
		</source>
	</element>
	<!--property::Menu.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Menu.Parent">
			<context kind="class">Menu</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::MenuBar-->
	<element type="class">
		<source id="Excel.MenuBar">
			<name>MenuBar</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::MenuBar.Activate-->
	<element type="method">
		<source id="Excel.MenuBar.Activate">
			<context kind="class">MenuBar</context>
			<name>Activate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::MenuBar.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuBar.Application">
			<context kind="class">MenuBar</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::MenuBar.BuiltIn {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuBar.BuiltIn">
			<context kind="class">MenuBar</context>
			<name>BuiltIn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::MenuBar.Caption-->
	<element type="property">
		<source id="Excel.MenuBar.Caption">
			<context kind="class">MenuBar</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::MenuBar.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuBar.Creator">
			<context kind="class">MenuBar</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::MenuBar.Delete-->
	<element type="method">
		<source id="Excel.MenuBar.Delete">
			<context kind="class">MenuBar</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::MenuBar.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuBar.Index">
			<context kind="class">MenuBar</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::MenuBar.Menus {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuBar.Menus">
			<context kind="class">MenuBar</context>
			<name>Menus</name>
			<type>Menus</type>
		</source>
	</element>
	<!--property::MenuBar.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuBar.Parent">
			<context kind="class">MenuBar</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::MenuBar.Reset-->
	<element type="method">
		<source id="Excel.MenuBar.Reset">
			<context kind="class">MenuBar</context>
			<name>Reset</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::MenuBars-->
	<element type="class">
		<source id="Excel.MenuBars">
			<name>MenuBars</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::MenuBars.Add-->
	<element type="method">
		<source id="Excel.MenuBars.Add">
			<context kind="class">MenuBars</context>
			<name>Add</name>
			<type>MenuBar</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::MenuBars.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuBars.Application">
			<context kind="class">MenuBars</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::MenuBars.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuBars.Count">
			<context kind="class">MenuBars</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::MenuBars.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuBars.Creator">
			<context kind="class">MenuBars</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::MenuBars.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuBars.Item">
			<context kind="class">MenuBars</context>
			<name default="true">Item</name>
			<type>MenuBar</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::MenuBars.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuBars.Parent">
			<context kind="class">MenuBars</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::MenuItem-->
	<element type="class">
		<source id="Excel.MenuItem">
			<name>MenuItem</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::MenuItem.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuItem.Application">
			<context kind="class">MenuItem</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::MenuItem.Caption-->
	<element type="property">
		<source id="Excel.MenuItem.Caption">
			<context kind="class">MenuItem</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::MenuItem.Checked-->
	<element type="property">
		<source id="Excel.MenuItem.Checked">
			<context kind="class">MenuItem</context>
			<name>Checked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::MenuItem.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuItem.Creator">
			<context kind="class">MenuItem</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::MenuItem.Delete-->
	<element type="method">
		<source id="Excel.MenuItem.Delete">
			<context kind="class">MenuItem</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::MenuItem.Enabled-->
	<element type="property">
		<source id="Excel.MenuItem.Enabled">
			<context kind="class">MenuItem</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::MenuItem.HelpContextID-->
	<element type="property">
		<source id="Excel.MenuItem.HelpContextID">
			<context kind="class">MenuItem</context>
			<name>HelpContextID</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::MenuItem.HelpFile-->
	<element type="property">
		<source id="Excel.MenuItem.HelpFile">
			<context kind="class">MenuItem</context>
			<name>HelpFile</name>
			<type>String</type>
		</source>
	</element>
	<!--property::MenuItem.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuItem.Index">
			<context kind="class">MenuItem</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::MenuItem.OnAction-->
	<element type="property">
		<source id="Excel.MenuItem.OnAction">
			<context kind="class">MenuItem</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::MenuItem.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuItem.Parent">
			<context kind="class">MenuItem</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::MenuItem.StatusBar-->
	<element type="property">
		<source id="Excel.MenuItem.StatusBar">
			<context kind="class">MenuItem</context>
			<name>StatusBar</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::MenuItems-->
	<element type="class">
		<source id="Excel.MenuItems">
			<name>MenuItems</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::MenuItems.Add-->
	<element type="method">
		<source id="Excel.MenuItems.Add">
			<context kind="class">MenuItems</context>
			<name>Add</name>
			<type>MenuItem</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Caption</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>OnAction</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShortcutKey</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Restore</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>StatusBar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HelpFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HelpContextID</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::MenuItems.AddMenu-->
	<element type="method">
		<source id="Excel.MenuItems.AddMenu">
			<context kind="class">MenuItems</context>
			<name>AddMenu</name>
			<type>Menu</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Caption</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Restore</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::MenuItems.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuItems.Application">
			<context kind="class">MenuItems</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::MenuItems.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuItems.Count">
			<context kind="class">MenuItems</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::MenuItems.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuItems.Creator">
			<context kind="class">MenuItems</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::MenuItems.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuItems.Item">
			<context kind="class">MenuItems</context>
			<name default="true">Item</name>
			<type>MenuItem</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::MenuItems.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.MenuItems.Parent">
			<context kind="class">MenuItems</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Menus-->
	<element type="class">
		<source id="Excel.Menus">
			<name>Menus</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Menus.Add-->
	<element type="method">
		<source id="Excel.Menus.Add">
			<context kind="class">Menus</context>
			<name>Add</name>
			<type>Menu</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Caption</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Restore</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Menus.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Menus.Application">
			<context kind="class">Menus</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Menus.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Menus.Count">
			<context kind="class">Menus</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Menus.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Menus.Creator">
			<context kind="class">Menus</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Menus.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Menus.Item">
			<context kind="class">Menus</context>
			<name default="true">Item</name>
			<type>Menu</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Menus.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Menus.Parent">
			<context kind="class">Menus</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Module-->
	<element type="class">
		<source id="Excel.Module">
			<name>Module</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Module.Activate-->
	<element type="method">
		<source id="Excel.Module.Activate">
			<context kind="class">Module</context>
			<name>Activate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Module.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Module.Application">
			<context kind="class">Module</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Module.CodeName {ReadOnly}-->
	<element type="property">
		<source id="Excel.Module.CodeName">
			<context kind="class">Module</context>
			<name>CodeName</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Module.Copy-->
	<element type="method">
		<source id="Excel.Module.Copy">
			<context kind="class">Module</context>
			<name>Copy</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Module.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Module.Creator">
			<context kind="class">Module</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Module.Delete-->
	<element type="method">
		<source id="Excel.Module.Delete">
			<context kind="class">Module</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Module.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Module.Index">
			<context kind="class">Module</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Module.InsertFile-->
	<element type="method">
		<source id="Excel.Module.InsertFile">
			<context kind="class">Module</context>
			<name>InsertFile</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Merge</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Module.Move-->
	<element type="method">
		<source id="Excel.Module.Move">
			<context kind="class">Module</context>
			<name>Move</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Module.Name-->
	<element type="property">
		<source id="Excel.Module.Name">
			<context kind="class">Module</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Module.Next {ReadOnly}-->
	<element type="property">
		<source id="Excel.Module.Next">
			<context kind="class">Module</context>
			<name>Next</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Module.OnDoubleClick-->
	<element type="property">
		<source id="Excel.Module.OnDoubleClick">
			<context kind="class">Module</context>
			<name>OnDoubleClick</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Module.OnSheetActivate-->
	<element type="property">
		<source id="Excel.Module.OnSheetActivate">
			<context kind="class">Module</context>
			<name>OnSheetActivate</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Module.OnSheetDeactivate-->
	<element type="property">
		<source id="Excel.Module.OnSheetDeactivate">
			<context kind="class">Module</context>
			<name>OnSheetDeactivate</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Module.PageSetup {ReadOnly}-->
	<element type="property">
		<source id="Excel.Module.PageSetup">
			<context kind="class">Module</context>
			<name>PageSetup</name>
			<type>PageSetup</type>
		</source>
	</element>
	<!--property::Module.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Module.Parent">
			<context kind="class">Module</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Module.Previous {ReadOnly}-->
	<element type="property">
		<source id="Excel.Module.Previous">
			<context kind="class">Module</context>
			<name>Previous</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Module.Protect-->
	<element type="method">
		<source id="Excel.Module.Protect">
			<context kind="class">Module</context>
			<name>Protect</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DrawingObjects</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Contents</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Scenarios</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>UserInterfaceOnly</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Module.ProtectContents {ReadOnly}-->
	<element type="property">
		<source id="Excel.Module.ProtectContents">
			<context kind="class">Module</context>
			<name>ProtectContents</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Module.ProtectionMode {ReadOnly}-->
	<element type="property">
		<source id="Excel.Module.ProtectionMode">
			<context kind="class">Module</context>
			<name>ProtectionMode</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Module.SaveAs-->
	<element type="method">
		<source id="Excel.Module.SaveAs">
			<context kind="class">Module</context>
			<name>SaveAs</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>FileFormat</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>WriteResPassword</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReadOnlyRecommended</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CreateBackup</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AddToMru</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TextCodepage</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TextVisualLayout</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Module.Select-->
	<element type="method">
		<source id="Excel.Module.Select">
			<context kind="class">Module</context>
			<name>Select</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Module.Shapes {ReadOnly}-->
	<element type="property">
		<source id="Excel.Module.Shapes">
			<context kind="class">Module</context>
			<name>Shapes</name>
			<type>Shapes</type>
		</source>
	</element>
	<!--method::Module.Unprotect-->
	<element type="method">
		<source id="Excel.Module.Unprotect">
			<context kind="class">Module</context>
			<name>Unprotect</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Module.Visible-->
	<element type="property">
		<source id="Excel.Module.Visible">
			<context kind="class">Module</context>
			<name>Visible</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Modules-->
	<element type="class">
		<source id="Excel.Modules">
			<name>Modules</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Modules.Add-->
	<element type="method">
		<source id="Excel.Modules.Add">
			<context kind="class">Modules</context>
			<name>Add</name>
			<type>Module</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Count</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Modules.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Modules.Application">
			<context kind="class">Modules</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Modules.Copy-->
	<element type="method">
		<source id="Excel.Modules.Copy">
			<context kind="class">Modules</context>
			<name>Copy</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Modules.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Modules.Count">
			<context kind="class">Modules</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Modules.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Modules.Creator">
			<context kind="class">Modules</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Modules.Delete-->
	<element type="method">
		<source id="Excel.Modules.Delete">
			<context kind="class">Modules</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Modules.HPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Modules.HPageBreaks">
			<context kind="class">Modules</context>
			<name>HPageBreaks</name>
			<type>HPageBreaks</type>
		</source>
	</element>
	<!--property::Modules.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Modules.Item">
			<context kind="class">Modules</context>
			<name default="true">Item</name>
			<type>Module</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Modules.Move-->
	<element type="method">
		<source id="Excel.Modules.Move">
			<context kind="class">Modules</context>
			<name>Move</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Modules.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Modules.Parent">
			<context kind="class">Modules</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Modules.PrintOut-->
	<element type="method">
		<source id="Excel.Modules.PrintOut">
			<context kind="class">Modules</context>
			<name>PrintOut</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>From</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>To</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Copies</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Preview</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ActivePrinter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrintToFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Collate</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrToFileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Modules.Select-->
	<element type="method">
		<source id="Excel.Modules.Select">
			<context kind="class">Modules</context>
			<name>Select</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Modules.Visible-->
	<element type="property">
		<source id="Excel.Modules.Visible">
			<context kind="class">Modules</context>
			<name>Visible</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Modules.VPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Modules.VPageBreaks">
			<context kind="class">Modules</context>
			<name>VPageBreaks</name>
			<type>VPageBreaks</type>
		</source>
	</element>
	<!--Class::Name-->
	<element type="class">
		<source id="Excel.Name">
			<name>Name</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Name.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Name.Application">
			<context kind="class">Name</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Name.Category-->
	<element type="property">
		<source id="Excel.Name.Category">
			<context kind="class">Name</context>
			<name>Category</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Name.CategoryLocal-->
	<element type="property">
		<source id="Excel.Name.CategoryLocal">
			<context kind="class">Name</context>
			<name>CategoryLocal</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Name.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Name.Creator">
			<context kind="class">Name</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Name.Delete-->
	<element type="method">
		<source id="Excel.Name.Delete">
			<context kind="class">Name</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Name.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Name.Index">
			<context kind="class">Name</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Name.MacroType-->
	<element type="property">
		<source id="Excel.Name.MacroType">
			<context kind="class">Name</context>
			<name>MacroType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Name.Name {Default}-->
	<element type="property">
		<source id="Excel.Name.Name">
			<context kind="class">Name</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Name.NameLocal-->
	<element type="property">
		<source id="Excel.Name.NameLocal">
			<context kind="class">Name</context>
			<name>NameLocal</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Name.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Name.Parent">
			<context kind="class">Name</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Name.RefersTo-->
	<element type="property">
		<source id="Excel.Name.RefersTo">
			<context kind="class">Name</context>
			<name>RefersTo</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Name.RefersToLocal-->
	<element type="property">
		<source id="Excel.Name.RefersToLocal">
			<context kind="class">Name</context>
			<name>RefersToLocal</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Name.RefersToR1C1-->
	<element type="property">
		<source id="Excel.Name.RefersToR1C1">
			<context kind="class">Name</context>
			<name>RefersToR1C1</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Name.RefersToR1C1Local-->
	<element type="property">
		<source id="Excel.Name.RefersToR1C1Local">
			<context kind="class">Name</context>
			<name>RefersToR1C1Local</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Name.RefersToRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Name.RefersToRange">
			<context kind="class">Name</context>
			<name>RefersToRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Name.ShortcutKey-->
	<element type="property">
		<source id="Excel.Name.ShortcutKey">
			<context kind="class">Name</context>
			<name>ShortcutKey</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Name.Value {Default}-->
	<element type="property">
		<source id="Excel.Name.Value">
			<context kind="class">Name</context>
			<name default="true">Value</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Name.Visible-->
	<element type="property">
		<source id="Excel.Name.Visible">
			<context kind="class">Name</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::Names-->
	<element type="class">
		<source id="Excel.Names">
			<name>Names</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Names.Add-->
	<element type="method">
		<source id="Excel.Names.Add">
			<context kind="class">Names</context>
			<name>Add</name>
			<type>Name</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Name</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RefersTo</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Visible</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MacroType</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShortcutKey</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Category</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>NameLocal</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RefersToLocal</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CategoryLocal</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RefersToR1C1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RefersToR1C1Local</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Names.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Names.Application">
			<context kind="class">Names</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Names.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Names.Count">
			<context kind="class">Names</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Names.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Names.Creator">
			<context kind="class">Names</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Names.Item {Default}-->
	<element type="method">
		<source id="Excel.Names.Item">
			<context kind="class">Names</context>
			<name default="true">Item</name>
			<type>Name</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IndexLocal</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RefersTo</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Names.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Names.Parent">
			<context kind="class">Names</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::ODBCError-->
	<element type="class">
		<source id="Excel.ODBCError">
			<name>ODBCError</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ODBCError.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ODBCError.Application">
			<context kind="class">ODBCError</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ODBCError.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ODBCError.Creator">
			<context kind="class">ODBCError</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ODBCError.ErrorString {ReadOnly}-->
	<element type="property">
		<source id="Excel.ODBCError.ErrorString">
			<context kind="class">ODBCError</context>
			<name>ErrorString</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ODBCError.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ODBCError.Parent">
			<context kind="class">ODBCError</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ODBCError.SqlState {ReadOnly}-->
	<element type="property">
		<source id="Excel.ODBCError.SqlState">
			<context kind="class">ODBCError</context>
			<name>SqlState</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::ODBCErrors-->
	<element type="class">
		<source id="Excel.ODBCErrors">
			<name>ODBCErrors</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ODBCErrors.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ODBCErrors.Application">
			<context kind="class">ODBCErrors</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ODBCErrors.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.ODBCErrors.Count">
			<context kind="class">ODBCErrors</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ODBCErrors.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ODBCErrors.Creator">
			<context kind="class">ODBCErrors</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ODBCErrors.Item-->
	<element type="method">
		<source id="Excel.ODBCErrors.Item">
			<context kind="class">ODBCErrors</context>
			<name>Item</name>
			<type>ODBCError</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ODBCErrors.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ODBCErrors.Parent">
			<context kind="class">ODBCErrors</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::OLEDBError-->
	<element type="class">
		<source id="Excel.OLEDBError">
			<name>OLEDBError</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::OLEDBError.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEDBError.Application">
			<context kind="class">OLEDBError</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::OLEDBError.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEDBError.Creator">
			<context kind="class">OLEDBError</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::OLEDBError.ErrorString {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEDBError.ErrorString">
			<context kind="class">OLEDBError</context>
			<name>ErrorString</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OLEDBError.Native {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEDBError.Native">
			<context kind="class">OLEDBError</context>
			<name>Native</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::OLEDBError.Number {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEDBError.Number">
			<context kind="class">OLEDBError</context>
			<name>Number</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::OLEDBError.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEDBError.Parent">
			<context kind="class">OLEDBError</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::OLEDBError.SqlState {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEDBError.SqlState">
			<context kind="class">OLEDBError</context>
			<name>SqlState</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OLEDBError.Stage {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEDBError.Stage">
			<context kind="class">OLEDBError</context>
			<name>Stage</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::OLEDBErrors-->
	<element type="class">
		<source id="Excel.OLEDBErrors">
			<name>OLEDBErrors</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::OLEDBErrors.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEDBErrors.Application">
			<context kind="class">OLEDBErrors</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::OLEDBErrors.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEDBErrors.Count">
			<context kind="class">OLEDBErrors</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::OLEDBErrors.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEDBErrors.Creator">
			<context kind="class">OLEDBErrors</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::OLEDBErrors.Item-->
	<element type="method">
		<source id="Excel.OLEDBErrors.Item">
			<context kind="class">OLEDBErrors</context>
			<name>Item</name>
			<type>OLEDBError</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::OLEDBErrors.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEDBErrors.Parent">
			<context kind="class">OLEDBErrors</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::OLEFormat-->
	<element type="class">
		<source id="Excel.OLEFormat">
			<name>OLEFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::OLEFormat.Activate-->
	<element type="method">
		<source id="Excel.OLEFormat.Activate">
			<context kind="class">OLEFormat</context>
			<name>Activate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::OLEFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEFormat.Application">
			<context kind="class">OLEFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::OLEFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEFormat.Creator">
			<context kind="class">OLEFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::OLEFormat.Object {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEFormat.Object">
			<context kind="class">OLEFormat</context>
			<name>Object</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::OLEFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEFormat.Parent">
			<context kind="class">OLEFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::OLEFormat.progID {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEFormat.progID">
			<context kind="class">OLEFormat</context>
			<name>progID</name>
			<type>String</type>
		</source>
	</element>
	<!--method::OLEFormat.Verb-->
	<element type="method">
		<source id="Excel.OLEFormat.Verb">
			<context kind="class">OLEFormat</context>
			<name>Verb</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Verb</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::OLEObject-->
	<element type="class">
		<source id="Excel.OLEObject">
			<name>OLEObject</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::OLEObject.Activate-->
	<element type="method">
		<source id="Excel.OLEObject.Activate">
			<context kind="class">OLEObject</context>
			<name>Activate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OLEObject.AltHTML-->
	<element type="property">
		<source id="Excel.OLEObject.AltHTML">
			<context kind="class">OLEObject</context>
			<name>AltHTML</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OLEObject.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObject.Application">
			<context kind="class">OLEObject</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::OLEObject.AutoLoad-->
	<element type="property">
		<source id="Excel.OLEObject.AutoLoad">
			<context kind="class">OLEObject</context>
			<name>AutoLoad</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OLEObject.AutoUpdate-->
	<element type="property">
		<source id="Excel.OLEObject.AutoUpdate">
			<context kind="class">OLEObject</context>
			<name>AutoUpdate</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OLEObject.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObject.Border">
			<context kind="class">OLEObject</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::OLEObject.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObject.BottomRightCell">
			<context kind="class">OLEObject</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::OLEObject.BringToFront-->
	<element type="method">
		<source id="Excel.OLEObject.BringToFront">
			<context kind="class">OLEObject</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OLEObject.Copy-->
	<element type="method">
		<source id="Excel.OLEObject.Copy">
			<context kind="class">OLEObject</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OLEObject.CopyPicture-->
	<element type="method">
		<source id="Excel.OLEObject.CopyPicture">
			<context kind="class">OLEObject</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::OLEObject.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObject.Creator">
			<context kind="class">OLEObject</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::OLEObject.Cut-->
	<element type="method">
		<source id="Excel.OLEObject.Cut">
			<context kind="class">OLEObject</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OLEObject.Delete-->
	<element type="method">
		<source id="Excel.OLEObject.Delete">
			<context kind="class">OLEObject</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OLEObject.Duplicate-->
	<element type="method">
		<source id="Excel.OLEObject.Duplicate">
			<context kind="class">OLEObject</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::OLEObject.Enabled-->
	<element type="property">
		<source id="Excel.OLEObject.Enabled">
			<context kind="class">OLEObject</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::OLEObject.GotFocus-->
	<element type="method">
		<source id="Excel.OLEObject.GotFocus">
			<context kind="class">OLEObject</context>
			<name>GotFocus</name>
			<type>void</type>
		</source>
	</element>
	<!--property::OLEObject.Height-->
	<element type="property">
		<source id="Excel.OLEObject.Height">
			<context kind="class">OLEObject</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OLEObject.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObject.Index">
			<context kind="class">OLEObject</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::OLEObject.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObject.Interior">
			<context kind="class">OLEObject</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::OLEObject.Left-->
	<element type="property">
		<source id="Excel.OLEObject.Left">
			<context kind="class">OLEObject</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OLEObject.LinkedCell-->
	<element type="property">
		<source id="Excel.OLEObject.LinkedCell">
			<context kind="class">OLEObject</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OLEObject.ListFillRange-->
	<element type="property">
		<source id="Excel.OLEObject.ListFillRange">
			<context kind="class">OLEObject</context>
			<name>ListFillRange</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OLEObject.Locked-->
	<element type="property">
		<source id="Excel.OLEObject.Locked">
			<context kind="class">OLEObject</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::OLEObject.LostFocus-->
	<element type="method">
		<source id="Excel.OLEObject.LostFocus">
			<context kind="class">OLEObject</context>
			<name>LostFocus</name>
			<type>void</type>
		</source>
	</element>
	<!--property::OLEObject.Name-->
	<element type="property">
		<source id="Excel.OLEObject.Name">
			<context kind="class">OLEObject</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OLEObject.Object {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObject.Object">
			<context kind="class">OLEObject</context>
			<name>Object</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::OLEObject.OLEType {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObject.OLEType">
			<context kind="class">OLEObject</context>
			<name>OLEType</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OLEObject.OnAction-->
	<element type="property">
		<source id="Excel.OLEObject.OnAction">
			<context kind="class">OLEObject</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OLEObject.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObject.Parent">
			<context kind="class">OLEObject</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::OLEObject.Placement-->
	<element type="property">
		<source id="Excel.OLEObject.Placement">
			<context kind="class">OLEObject</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OLEObject.PrintObject-->
	<element type="property">
		<source id="Excel.OLEObject.PrintObject">
			<context kind="class">OLEObject</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OLEObject.progID {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObject.progID">
			<context kind="class">OLEObject</context>
			<name>progID</name>
			<type>String</type>
		</source>
	</element>
	<!--method::OLEObject.Select-->
	<element type="method">
		<source id="Excel.OLEObject.Select">
			<context kind="class">OLEObject</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::OLEObject.SendToBack-->
	<element type="method">
		<source id="Excel.OLEObject.SendToBack">
			<context kind="class">OLEObject</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OLEObject.Shadow-->
	<element type="property">
		<source id="Excel.OLEObject.Shadow">
			<context kind="class">OLEObject</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OLEObject.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObject.ShapeRange">
			<context kind="class">OLEObject</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::OLEObject.SourceName-->
	<element type="property">
		<source id="Excel.OLEObject.SourceName">
			<context kind="class">OLEObject</context>
			<name>SourceName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OLEObject.Top-->
	<element type="property">
		<source id="Excel.OLEObject.Top">
			<context kind="class">OLEObject</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OLEObject.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObject.TopLeftCell">
			<context kind="class">OLEObject</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::OLEObject.Update-->
	<element type="method">
		<source id="Excel.OLEObject.Update">
			<context kind="class">OLEObject</context>
			<name>Update</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OLEObject.Verb-->
	<element type="method">
		<source id="Excel.OLEObject.Verb">
			<context kind="class">OLEObject</context>
			<name>Verb</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Verb</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::OLEObject.Visible-->
	<element type="property">
		<source id="Excel.OLEObject.Visible">
			<context kind="class">OLEObject</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OLEObject.Width-->
	<element type="property">
		<source id="Excel.OLEObject.Width">
			<context kind="class">OLEObject</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OLEObject.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObject.ZOrder">
			<context kind="class">OLEObject</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::OLEObjects-->
	<element type="class">
		<source id="Excel.OLEObjects">
			<name>OLEObjects</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::OLEObjects.Add-->
	<element type="method">
		<source id="Excel.OLEObjects.Add">
			<context kind="class">OLEObjects</context>
			<name>Add</name>
			<type>OLEObject</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>ClassType</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Link</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DisplayAsIcon</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IconFileName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IconIndex</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IconLabel</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Left</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Top</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Width</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::OLEObjects.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObjects.Application">
			<context kind="class">OLEObjects</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::OLEObjects.AutoLoad-->
	<element type="property">
		<source id="Excel.OLEObjects.AutoLoad">
			<context kind="class">OLEObjects</context>
			<name>AutoLoad</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OLEObjects.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObjects.Border">
			<context kind="class">OLEObjects</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::OLEObjects.BringToFront-->
	<element type="method">
		<source id="Excel.OLEObjects.BringToFront">
			<context kind="class">OLEObjects</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OLEObjects.Copy-->
	<element type="method">
		<source id="Excel.OLEObjects.Copy">
			<context kind="class">OLEObjects</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OLEObjects.CopyPicture-->
	<element type="method">
		<source id="Excel.OLEObjects.CopyPicture">
			<context kind="class">OLEObjects</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::OLEObjects.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObjects.Count">
			<context kind="class">OLEObjects</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::OLEObjects.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObjects.Creator">
			<context kind="class">OLEObjects</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::OLEObjects.Cut-->
	<element type="method">
		<source id="Excel.OLEObjects.Cut">
			<context kind="class">OLEObjects</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OLEObjects.Delete-->
	<element type="method">
		<source id="Excel.OLEObjects.Delete">
			<context kind="class">OLEObjects</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OLEObjects.Duplicate-->
	<element type="method">
		<source id="Excel.OLEObjects.Duplicate">
			<context kind="class">OLEObjects</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::OLEObjects.Enabled-->
	<element type="property">
		<source id="Excel.OLEObjects.Enabled">
			<context kind="class">OLEObjects</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::OLEObjects.Group-->
	<element type="method">
		<source id="Excel.OLEObjects.Group">
			<context kind="class">OLEObjects</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::OLEObjects.Height-->
	<element type="property">
		<source id="Excel.OLEObjects.Height">
			<context kind="class">OLEObjects</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OLEObjects.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObjects.Interior">
			<context kind="class">OLEObjects</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::OLEObjects.Item-->
	<element type="method">
		<source id="Excel.OLEObjects.Item">
			<context kind="class">OLEObjects</context>
			<name>Item</name>
			<type>OLEObject</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::OLEObjects.Left-->
	<element type="property">
		<source id="Excel.OLEObjects.Left">
			<context kind="class">OLEObjects</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OLEObjects.Locked-->
	<element type="property">
		<source id="Excel.OLEObjects.Locked">
			<context kind="class">OLEObjects</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OLEObjects.OnAction-->
	<element type="property">
		<source id="Excel.OLEObjects.OnAction">
			<context kind="class">OLEObjects</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OLEObjects.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObjects.Parent">
			<context kind="class">OLEObjects</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::OLEObjects.Placement-->
	<element type="property">
		<source id="Excel.OLEObjects.Placement">
			<context kind="class">OLEObjects</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OLEObjects.PrintObject-->
	<element type="property">
		<source id="Excel.OLEObjects.PrintObject">
			<context kind="class">OLEObjects</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::OLEObjects.Select-->
	<element type="method">
		<source id="Excel.OLEObjects.Select">
			<context kind="class">OLEObjects</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::OLEObjects.SendToBack-->
	<element type="method">
		<source id="Excel.OLEObjects.SendToBack">
			<context kind="class">OLEObjects</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OLEObjects.Shadow-->
	<element type="property">
		<source id="Excel.OLEObjects.Shadow">
			<context kind="class">OLEObjects</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OLEObjects.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObjects.ShapeRange">
			<context kind="class">OLEObjects</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::OLEObjects.SourceName-->
	<element type="property">
		<source id="Excel.OLEObjects.SourceName">
			<context kind="class">OLEObjects</context>
			<name>SourceName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OLEObjects.Top-->
	<element type="property">
		<source id="Excel.OLEObjects.Top">
			<context kind="class">OLEObjects</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OLEObjects.Visible-->
	<element type="property">
		<source id="Excel.OLEObjects.Visible">
			<context kind="class">OLEObjects</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OLEObjects.Width-->
	<element type="property">
		<source id="Excel.OLEObjects.Width">
			<context kind="class">OLEObjects</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OLEObjects.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.OLEObjects.ZOrder">
			<context kind="class">OLEObjects</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::OptionButton-->
	<element type="class">
		<source id="Excel.OptionButton">
			<name>OptionButton</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::OptionButton.Accelerator-->
	<element type="property">
		<source id="Excel.OptionButton.Accelerator">
			<context kind="class">OptionButton</context>
			<name>Accelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OptionButton.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButton.Application">
			<context kind="class">OptionButton</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::OptionButton.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButton.Border">
			<context kind="class">OptionButton</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::OptionButton.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButton.BottomRightCell">
			<context kind="class">OptionButton</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::OptionButton.BringToFront-->
	<element type="method">
		<source id="Excel.OptionButton.BringToFront">
			<context kind="class">OptionButton</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OptionButton.Caption-->
	<element type="property">
		<source id="Excel.OptionButton.Caption">
			<context kind="class">OptionButton</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OptionButton.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButton.Characters">
			<context kind="class">OptionButton</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::OptionButton.CheckSpelling-->
	<element type="method">
		<source id="Excel.OptionButton.CheckSpelling">
			<context kind="class">OptionButton</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::OptionButton.Copy-->
	<element type="method">
		<source id="Excel.OptionButton.Copy">
			<context kind="class">OptionButton</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OptionButton.CopyPicture-->
	<element type="method">
		<source id="Excel.OptionButton.CopyPicture">
			<context kind="class">OptionButton</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::OptionButton.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButton.Creator">
			<context kind="class">OptionButton</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::OptionButton.Cut-->
	<element type="method">
		<source id="Excel.OptionButton.Cut">
			<context kind="class">OptionButton</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OptionButton.Delete-->
	<element type="method">
		<source id="Excel.OptionButton.Delete">
			<context kind="class">OptionButton</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OptionButton.Display3DShading-->
	<element type="property">
		<source id="Excel.OptionButton.Display3DShading">
			<context kind="class">OptionButton</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::OptionButton.Duplicate-->
	<element type="method">
		<source id="Excel.OptionButton.Duplicate">
			<context kind="class">OptionButton</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::OptionButton.Enabled-->
	<element type="property">
		<source id="Excel.OptionButton.Enabled">
			<context kind="class">OptionButton</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OptionButton.GroupBox {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButton.GroupBox">
			<context kind="class">OptionButton</context>
			<name>GroupBox</name>
			<type>GroupBox</type>
		</source>
	</element>
	<!--property::OptionButton.Height-->
	<element type="property">
		<source id="Excel.OptionButton.Height">
			<context kind="class">OptionButton</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OptionButton.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButton.Index">
			<context kind="class">OptionButton</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::OptionButton.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButton.Interior">
			<context kind="class">OptionButton</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::OptionButton.Left-->
	<element type="property">
		<source id="Excel.OptionButton.Left">
			<context kind="class">OptionButton</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OptionButton.LinkedCell-->
	<element type="property">
		<source id="Excel.OptionButton.LinkedCell">
			<context kind="class">OptionButton</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OptionButton.Locked-->
	<element type="property">
		<source id="Excel.OptionButton.Locked">
			<context kind="class">OptionButton</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OptionButton.LockedText-->
	<element type="property">
		<source id="Excel.OptionButton.LockedText">
			<context kind="class">OptionButton</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OptionButton.Name-->
	<element type="property">
		<source id="Excel.OptionButton.Name">
			<context kind="class">OptionButton</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OptionButton.OnAction-->
	<element type="property">
		<source id="Excel.OptionButton.OnAction">
			<context kind="class">OptionButton</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OptionButton.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButton.Parent">
			<context kind="class">OptionButton</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::OptionButton.PhoneticAccelerator-->
	<element type="property">
		<source id="Excel.OptionButton.PhoneticAccelerator">
			<context kind="class">OptionButton</context>
			<name>PhoneticAccelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OptionButton.Placement-->
	<element type="property">
		<source id="Excel.OptionButton.Placement">
			<context kind="class">OptionButton</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OptionButton.PrintObject-->
	<element type="property">
		<source id="Excel.OptionButton.PrintObject">
			<context kind="class">OptionButton</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::OptionButton.Select-->
	<element type="method">
		<source id="Excel.OptionButton.Select">
			<context kind="class">OptionButton</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::OptionButton.SendToBack-->
	<element type="method">
		<source id="Excel.OptionButton.SendToBack">
			<context kind="class">OptionButton</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OptionButton.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButton.ShapeRange">
			<context kind="class">OptionButton</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::OptionButton.Text-->
	<element type="property">
		<source id="Excel.OptionButton.Text">
			<context kind="class">OptionButton</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OptionButton.Top-->
	<element type="property">
		<source id="Excel.OptionButton.Top">
			<context kind="class">OptionButton</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OptionButton.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButton.TopLeftCell">
			<context kind="class">OptionButton</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::OptionButton.Value-->
	<element type="property">
		<source id="Excel.OptionButton.Value">
			<context kind="class">OptionButton</context>
			<name>Value</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OptionButton.Visible-->
	<element type="property">
		<source id="Excel.OptionButton.Visible">
			<context kind="class">OptionButton</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OptionButton.Width-->
	<element type="property">
		<source id="Excel.OptionButton.Width">
			<context kind="class">OptionButton</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OptionButton.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButton.ZOrder">
			<context kind="class">OptionButton</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::OptionButtons-->
	<element type="class">
		<source id="Excel.OptionButtons">
			<name>OptionButtons</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::OptionButtons.Accelerator-->
	<element type="property">
		<source id="Excel.OptionButtons.Accelerator">
			<context kind="class">OptionButtons</context>
			<name>Accelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OptionButtons.Add-->
	<element type="method">
		<source id="Excel.OptionButtons.Add">
			<context kind="class">OptionButtons</context>
			<name>Add</name>
			<type>OptionButton</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::OptionButtons.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButtons.Application">
			<context kind="class">OptionButtons</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::OptionButtons.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButtons.Border">
			<context kind="class">OptionButtons</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::OptionButtons.BringToFront-->
	<element type="method">
		<source id="Excel.OptionButtons.BringToFront">
			<context kind="class">OptionButtons</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OptionButtons.Caption-->
	<element type="property">
		<source id="Excel.OptionButtons.Caption">
			<context kind="class">OptionButtons</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OptionButtons.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButtons.Characters">
			<context kind="class">OptionButtons</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::OptionButtons.CheckSpelling-->
	<element type="method">
		<source id="Excel.OptionButtons.CheckSpelling">
			<context kind="class">OptionButtons</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::OptionButtons.Copy-->
	<element type="method">
		<source id="Excel.OptionButtons.Copy">
			<context kind="class">OptionButtons</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OptionButtons.CopyPicture-->
	<element type="method">
		<source id="Excel.OptionButtons.CopyPicture">
			<context kind="class">OptionButtons</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::OptionButtons.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButtons.Count">
			<context kind="class">OptionButtons</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::OptionButtons.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButtons.Creator">
			<context kind="class">OptionButtons</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::OptionButtons.Cut-->
	<element type="method">
		<source id="Excel.OptionButtons.Cut">
			<context kind="class">OptionButtons</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::OptionButtons.Delete-->
	<element type="method">
		<source id="Excel.OptionButtons.Delete">
			<context kind="class">OptionButtons</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OptionButtons.Display3DShading-->
	<element type="property">
		<source id="Excel.OptionButtons.Display3DShading">
			<context kind="class">OptionButtons</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::OptionButtons.Duplicate-->
	<element type="method">
		<source id="Excel.OptionButtons.Duplicate">
			<context kind="class">OptionButtons</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::OptionButtons.Enabled-->
	<element type="property">
		<source id="Excel.OptionButtons.Enabled">
			<context kind="class">OptionButtons</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::OptionButtons.Group-->
	<element type="method">
		<source id="Excel.OptionButtons.Group">
			<context kind="class">OptionButtons</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::OptionButtons.GroupBox {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButtons.GroupBox">
			<context kind="class">OptionButtons</context>
			<name>GroupBox</name>
			<type>GroupBox</type>
		</source>
	</element>
	<!--property::OptionButtons.Height-->
	<element type="property">
		<source id="Excel.OptionButtons.Height">
			<context kind="class">OptionButtons</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OptionButtons.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButtons.Interior">
			<context kind="class">OptionButtons</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::OptionButtons.Item-->
	<element type="method">
		<source id="Excel.OptionButtons.Item">
			<context kind="class">OptionButtons</context>
			<name>Item</name>
			<type>OptionButton</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::OptionButtons.Left-->
	<element type="property">
		<source id="Excel.OptionButtons.Left">
			<context kind="class">OptionButtons</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OptionButtons.LinkedCell-->
	<element type="property">
		<source id="Excel.OptionButtons.LinkedCell">
			<context kind="class">OptionButtons</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OptionButtons.Locked-->
	<element type="property">
		<source id="Excel.OptionButtons.Locked">
			<context kind="class">OptionButtons</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OptionButtons.LockedText-->
	<element type="property">
		<source id="Excel.OptionButtons.LockedText">
			<context kind="class">OptionButtons</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OptionButtons.OnAction-->
	<element type="property">
		<source id="Excel.OptionButtons.OnAction">
			<context kind="class">OptionButtons</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OptionButtons.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButtons.Parent">
			<context kind="class">OptionButtons</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::OptionButtons.PhoneticAccelerator-->
	<element type="property">
		<source id="Excel.OptionButtons.PhoneticAccelerator">
			<context kind="class">OptionButtons</context>
			<name>PhoneticAccelerator</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OptionButtons.Placement-->
	<element type="property">
		<source id="Excel.OptionButtons.Placement">
			<context kind="class">OptionButtons</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OptionButtons.PrintObject-->
	<element type="property">
		<source id="Excel.OptionButtons.PrintObject">
			<context kind="class">OptionButtons</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::OptionButtons.Select-->
	<element type="method">
		<source id="Excel.OptionButtons.Select">
			<context kind="class">OptionButtons</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::OptionButtons.SendToBack-->
	<element type="method">
		<source id="Excel.OptionButtons.SendToBack">
			<context kind="class">OptionButtons</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OptionButtons.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButtons.ShapeRange">
			<context kind="class">OptionButtons</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::OptionButtons.Text-->
	<element type="property">
		<source id="Excel.OptionButtons.Text">
			<context kind="class">OptionButtons</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OptionButtons.Top-->
	<element type="property">
		<source id="Excel.OptionButtons.Top">
			<context kind="class">OptionButtons</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OptionButtons.Value-->
	<element type="property">
		<source id="Excel.OptionButtons.Value">
			<context kind="class">OptionButtons</context>
			<name>Value</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::OptionButtons.Visible-->
	<element type="property">
		<source id="Excel.OptionButtons.Visible">
			<context kind="class">OptionButtons</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::OptionButtons.Width-->
	<element type="property">
		<source id="Excel.OptionButtons.Width">
			<context kind="class">OptionButtons</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::OptionButtons.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.OptionButtons.ZOrder">
			<context kind="class">OptionButtons</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Outline-->
	<element type="class">
		<source id="Excel.Outline">
			<name>Outline</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Outline.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Outline.Application">
			<context kind="class">Outline</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Outline.AutomaticStyles-->
	<element type="property">
		<source id="Excel.Outline.AutomaticStyles">
			<context kind="class">Outline</context>
			<name>AutomaticStyles</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Outline.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Outline.Creator">
			<context kind="class">Outline</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Outline.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Outline.Parent">
			<context kind="class">Outline</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Outline.ShowLevels-->
	<element type="method">
		<source id="Excel.Outline.ShowLevels">
			<context kind="class">Outline</context>
			<name>ShowLevels</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>RowLevels</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ColumnLevels</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Outline.SummaryColumn-->
	<element type="property">
		<source id="Excel.Outline.SummaryColumn">
			<context kind="class">Outline</context>
			<name>SummaryColumn</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Outline.SummaryRow-->
	<element type="property">
		<source id="Excel.Outline.SummaryRow">
			<context kind="class">Outline</context>
			<name>SummaryRow</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Oval-->
	<element type="class">
		<source id="Excel.Oval">
			<name>Oval</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Oval.AddIndent-->
	<element type="property">
		<source id="Excel.Oval.AddIndent">
			<context kind="class">Oval</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Oval.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Oval.Application">
			<context kind="class">Oval</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Oval.AutoScaleFont-->
	<element type="property">
		<source id="Excel.Oval.AutoScaleFont">
			<context kind="class">Oval</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Oval.AutoSize-->
	<element type="property">
		<source id="Excel.Oval.AutoSize">
			<context kind="class">Oval</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Oval.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Oval.Border">
			<context kind="class">Oval</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::Oval.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Oval.BottomRightCell">
			<context kind="class">Oval</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Oval.BringToFront-->
	<element type="method">
		<source id="Excel.Oval.BringToFront">
			<context kind="class">Oval</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Oval.Caption-->
	<element type="property">
		<source id="Excel.Oval.Caption">
			<context kind="class">Oval</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Oval.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Oval.Characters">
			<context kind="class">Oval</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Oval.CheckSpelling-->
	<element type="method">
		<source id="Excel.Oval.CheckSpelling">
			<context kind="class">Oval</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Oval.Copy-->
	<element type="method">
		<source id="Excel.Oval.Copy">
			<context kind="class">Oval</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Oval.CopyPicture-->
	<element type="method">
		<source id="Excel.Oval.CopyPicture">
			<context kind="class">Oval</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Oval.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Oval.Creator">
			<context kind="class">Oval</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Oval.Cut-->
	<element type="method">
		<source id="Excel.Oval.Cut">
			<context kind="class">Oval</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Oval.Delete-->
	<element type="method">
		<source id="Excel.Oval.Delete">
			<context kind="class">Oval</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Oval.Duplicate-->
	<element type="method">
		<source id="Excel.Oval.Duplicate">
			<context kind="class">Oval</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Oval.Enabled-->
	<element type="property">
		<source id="Excel.Oval.Enabled">
			<context kind="class">Oval</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Oval.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Oval.Font">
			<context kind="class">Oval</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Oval.Formula-->
	<element type="property">
		<source id="Excel.Oval.Formula">
			<context kind="class">Oval</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Oval.Height-->
	<element type="property">
		<source id="Excel.Oval.Height">
			<context kind="class">Oval</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Oval.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.Oval.HorizontalAlignment">
			<context kind="class">Oval</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Oval.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Oval.Index">
			<context kind="class">Oval</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Oval.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Oval.Interior">
			<context kind="class">Oval</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::Oval.Left-->
	<element type="property">
		<source id="Excel.Oval.Left">
			<context kind="class">Oval</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Oval.Locked-->
	<element type="property">
		<source id="Excel.Oval.Locked">
			<context kind="class">Oval</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Oval.LockedText-->
	<element type="property">
		<source id="Excel.Oval.LockedText">
			<context kind="class">Oval</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Oval.Name-->
	<element type="property">
		<source id="Excel.Oval.Name">
			<context kind="class">Oval</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Oval.OnAction-->
	<element type="property">
		<source id="Excel.Oval.OnAction">
			<context kind="class">Oval</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Oval.Orientation-->
	<element type="property">
		<source id="Excel.Oval.Orientation">
			<context kind="class">Oval</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Oval.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Oval.Parent">
			<context kind="class">Oval</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Oval.Placement-->
	<element type="property">
		<source id="Excel.Oval.Placement">
			<context kind="class">Oval</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Oval.PrintObject-->
	<element type="property">
		<source id="Excel.Oval.PrintObject">
			<context kind="class">Oval</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Oval.ReadingOrder-->
	<element type="property">
		<source id="Excel.Oval.ReadingOrder">
			<context kind="class">Oval</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Oval.Select-->
	<element type="method">
		<source id="Excel.Oval.Select">
			<context kind="class">Oval</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Oval.SendToBack-->
	<element type="method">
		<source id="Excel.Oval.SendToBack">
			<context kind="class">Oval</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Oval.Shadow-->
	<element type="property">
		<source id="Excel.Oval.Shadow">
			<context kind="class">Oval</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Oval.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Oval.ShapeRange">
			<context kind="class">Oval</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Oval.Text-->
	<element type="property">
		<source id="Excel.Oval.Text">
			<context kind="class">Oval</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Oval.Top-->
	<element type="property">
		<source id="Excel.Oval.Top">
			<context kind="class">Oval</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Oval.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Oval.TopLeftCell">
			<context kind="class">Oval</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Oval.VerticalAlignment-->
	<element type="property">
		<source id="Excel.Oval.VerticalAlignment">
			<context kind="class">Oval</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Oval.Visible-->
	<element type="property">
		<source id="Excel.Oval.Visible">
			<context kind="class">Oval</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Oval.Width-->
	<element type="property">
		<source id="Excel.Oval.Width">
			<context kind="class">Oval</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Oval.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Oval.ZOrder">
			<context kind="class">Oval</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Ovals-->
	<element type="class">
		<source id="Excel.Ovals">
			<name>Ovals</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Ovals.Add-->
	<element type="method">
		<source id="Excel.Ovals.Add">
			<context kind="class">Ovals</context>
			<name>Add</name>
			<type>Oval</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Ovals.AddIndent-->
	<element type="property">
		<source id="Excel.Ovals.AddIndent">
			<context kind="class">Ovals</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Ovals.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Ovals.Application">
			<context kind="class">Ovals</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Ovals.AutoScaleFont-->
	<element type="property">
		<source id="Excel.Ovals.AutoScaleFont">
			<context kind="class">Ovals</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Ovals.AutoSize-->
	<element type="property">
		<source id="Excel.Ovals.AutoSize">
			<context kind="class">Ovals</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Ovals.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Ovals.Border">
			<context kind="class">Ovals</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::Ovals.BringToFront-->
	<element type="method">
		<source id="Excel.Ovals.BringToFront">
			<context kind="class">Ovals</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Ovals.Caption-->
	<element type="property">
		<source id="Excel.Ovals.Caption">
			<context kind="class">Ovals</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Ovals.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Ovals.Characters">
			<context kind="class">Ovals</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Ovals.CheckSpelling-->
	<element type="method">
		<source id="Excel.Ovals.CheckSpelling">
			<context kind="class">Ovals</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Ovals.Copy-->
	<element type="method">
		<source id="Excel.Ovals.Copy">
			<context kind="class">Ovals</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Ovals.CopyPicture-->
	<element type="method">
		<source id="Excel.Ovals.CopyPicture">
			<context kind="class">Ovals</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Ovals.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Ovals.Count">
			<context kind="class">Ovals</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Ovals.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Ovals.Creator">
			<context kind="class">Ovals</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Ovals.Cut-->
	<element type="method">
		<source id="Excel.Ovals.Cut">
			<context kind="class">Ovals</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Ovals.Delete-->
	<element type="method">
		<source id="Excel.Ovals.Delete">
			<context kind="class">Ovals</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Ovals.Duplicate-->
	<element type="method">
		<source id="Excel.Ovals.Duplicate">
			<context kind="class">Ovals</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Ovals.Enabled-->
	<element type="property">
		<source id="Excel.Ovals.Enabled">
			<context kind="class">Ovals</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Ovals.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Ovals.Font">
			<context kind="class">Ovals</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Ovals.Formula-->
	<element type="property">
		<source id="Excel.Ovals.Formula">
			<context kind="class">Ovals</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Ovals.Group-->
	<element type="method">
		<source id="Excel.Ovals.Group">
			<context kind="class">Ovals</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::Ovals.Height-->
	<element type="property">
		<source id="Excel.Ovals.Height">
			<context kind="class">Ovals</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Ovals.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.Ovals.HorizontalAlignment">
			<context kind="class">Ovals</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Ovals.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Ovals.Interior">
			<context kind="class">Ovals</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::Ovals.Item-->
	<element type="method">
		<source id="Excel.Ovals.Item">
			<context kind="class">Ovals</context>
			<name>Item</name>
			<type>Oval</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Ovals.Left-->
	<element type="property">
		<source id="Excel.Ovals.Left">
			<context kind="class">Ovals</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Ovals.Locked-->
	<element type="property">
		<source id="Excel.Ovals.Locked">
			<context kind="class">Ovals</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Ovals.LockedText-->
	<element type="property">
		<source id="Excel.Ovals.LockedText">
			<context kind="class">Ovals</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Ovals.OnAction-->
	<element type="property">
		<source id="Excel.Ovals.OnAction">
			<context kind="class">Ovals</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Ovals.Orientation-->
	<element type="property">
		<source id="Excel.Ovals.Orientation">
			<context kind="class">Ovals</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Ovals.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Ovals.Parent">
			<context kind="class">Ovals</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Ovals.Placement-->
	<element type="property">
		<source id="Excel.Ovals.Placement">
			<context kind="class">Ovals</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Ovals.PrintObject-->
	<element type="property">
		<source id="Excel.Ovals.PrintObject">
			<context kind="class">Ovals</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Ovals.ReadingOrder-->
	<element type="property">
		<source id="Excel.Ovals.ReadingOrder">
			<context kind="class">Ovals</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Ovals.Select-->
	<element type="method">
		<source id="Excel.Ovals.Select">
			<context kind="class">Ovals</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Ovals.SendToBack-->
	<element type="method">
		<source id="Excel.Ovals.SendToBack">
			<context kind="class">Ovals</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Ovals.Shadow-->
	<element type="property">
		<source id="Excel.Ovals.Shadow">
			<context kind="class">Ovals</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Ovals.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Ovals.ShapeRange">
			<context kind="class">Ovals</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Ovals.Text-->
	<element type="property">
		<source id="Excel.Ovals.Text">
			<context kind="class">Ovals</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Ovals.Top-->
	<element type="property">
		<source id="Excel.Ovals.Top">
			<context kind="class">Ovals</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Ovals.VerticalAlignment-->
	<element type="property">
		<source id="Excel.Ovals.VerticalAlignment">
			<context kind="class">Ovals</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Ovals.Visible-->
	<element type="property">
		<source id="Excel.Ovals.Visible">
			<context kind="class">Ovals</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Ovals.Width-->
	<element type="property">
		<source id="Excel.Ovals.Width">
			<context kind="class">Ovals</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Ovals.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Ovals.ZOrder">
			<context kind="class">Ovals</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::PageSetup-->
	<element type="class">
		<source id="Excel.PageSetup">
			<name>PageSetup</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::PageSetup.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PageSetup.Application">
			<context kind="class">PageSetup</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PageSetup.BlackAndWhite-->
	<element type="property">
		<source id="Excel.PageSetup.BlackAndWhite">
			<context kind="class">PageSetup</context>
			<name>BlackAndWhite</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PageSetup.BottomMargin-->
	<element type="property">
		<source id="Excel.PageSetup.BottomMargin">
			<context kind="class">PageSetup</context>
			<name>BottomMargin</name>
			<type>double</type>
		</source>
	</element>
	<!--property::PageSetup.CenterFooter-->
	<element type="property">
		<source id="Excel.PageSetup.CenterFooter">
			<context kind="class">PageSetup</context>
			<name>CenterFooter</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PageSetup.CenterFooterPicture {ReadOnly}-->
	<element type="property">
		<source id="Excel.PageSetup.CenterFooterPicture">
			<context kind="class">PageSetup</context>
			<name>CenterFooterPicture</name>
			<type>Graphic</type>
		</source>
	</element>
	<!--property::PageSetup.CenterHeader-->
	<element type="property">
		<source id="Excel.PageSetup.CenterHeader">
			<context kind="class">PageSetup</context>
			<name>CenterHeader</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PageSetup.CenterHeaderPicture {ReadOnly}-->
	<element type="property">
		<source id="Excel.PageSetup.CenterHeaderPicture">
			<context kind="class">PageSetup</context>
			<name>CenterHeaderPicture</name>
			<type>Graphic</type>
		</source>
	</element>
	<!--property::PageSetup.CenterHorizontally-->
	<element type="property">
		<source id="Excel.PageSetup.CenterHorizontally">
			<context kind="class">PageSetup</context>
			<name>CenterHorizontally</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PageSetup.CenterVertically-->
	<element type="property">
		<source id="Excel.PageSetup.CenterVertically">
			<context kind="class">PageSetup</context>
			<name>CenterVertically</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PageSetup.ChartSize-->
	<element type="property">
		<source id="Excel.PageSetup.ChartSize">
			<context kind="class">PageSetup</context>
			<name>ChartSize</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PageSetup.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PageSetup.Creator">
			<context kind="class">PageSetup</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PageSetup.Draft-->
	<element type="property">
		<source id="Excel.PageSetup.Draft">
			<context kind="class">PageSetup</context>
			<name>Draft</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PageSetup.FirstPageNumber-->
	<element type="property">
		<source id="Excel.PageSetup.FirstPageNumber">
			<context kind="class">PageSetup</context>
			<name>FirstPageNumber</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PageSetup.FitToPagesTall-->
	<element type="property">
		<source id="Excel.PageSetup.FitToPagesTall">
			<context kind="class">PageSetup</context>
			<name>FitToPagesTall</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PageSetup.FitToPagesWide-->
	<element type="property">
		<source id="Excel.PageSetup.FitToPagesWide">
			<context kind="class">PageSetup</context>
			<name>FitToPagesWide</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PageSetup.FooterMargin-->
	<element type="property">
		<source id="Excel.PageSetup.FooterMargin">
			<context kind="class">PageSetup</context>
			<name>FooterMargin</name>
			<type>double</type>
		</source>
	</element>
	<!--property::PageSetup.HeaderMargin-->
	<element type="property">
		<source id="Excel.PageSetup.HeaderMargin">
			<context kind="class">PageSetup</context>
			<name>HeaderMargin</name>
			<type>double</type>
		</source>
	</element>
	<!--property::PageSetup.LeftFooter-->
	<element type="property">
		<source id="Excel.PageSetup.LeftFooter">
			<context kind="class">PageSetup</context>
			<name>LeftFooter</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PageSetup.LeftFooterPicture {ReadOnly}-->
	<element type="property">
		<source id="Excel.PageSetup.LeftFooterPicture">
			<context kind="class">PageSetup</context>
			<name>LeftFooterPicture</name>
			<type>Graphic</type>
		</source>
	</element>
	<!--property::PageSetup.LeftHeader-->
	<element type="property">
		<source id="Excel.PageSetup.LeftHeader">
			<context kind="class">PageSetup</context>
			<name>LeftHeader</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PageSetup.LeftHeaderPicture {ReadOnly}-->
	<element type="property">
		<source id="Excel.PageSetup.LeftHeaderPicture">
			<context kind="class">PageSetup</context>
			<name>LeftHeaderPicture</name>
			<type>Graphic</type>
		</source>
	</element>
	<!--property::PageSetup.LeftMargin-->
	<element type="property">
		<source id="Excel.PageSetup.LeftMargin">
			<context kind="class">PageSetup</context>
			<name>LeftMargin</name>
			<type>double</type>
		</source>
	</element>
	<!--property::PageSetup.Order-->
	<element type="property">
		<source id="Excel.PageSetup.Order">
			<context kind="class">PageSetup</context>
			<name>Order</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PageSetup.Orientation-->
	<element type="property">
		<source id="Excel.PageSetup.Orientation">
			<context kind="class">PageSetup</context>
			<name>Orientation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PageSetup.PaperSize-->
	<element type="property">
		<source id="Excel.PageSetup.PaperSize">
			<context kind="class">PageSetup</context>
			<name>PaperSize</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PageSetup.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PageSetup.Parent">
			<context kind="class">PageSetup</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::PageSetup.PrintArea-->
	<element type="property">
		<source id="Excel.PageSetup.PrintArea">
			<context kind="class">PageSetup</context>
			<name>PrintArea</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PageSetup.PrintComments-->
	<element type="property">
		<source id="Excel.PageSetup.PrintComments">
			<context kind="class">PageSetup</context>
			<name>PrintComments</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PageSetup.PrintErrors-->
	<element type="property">
		<source id="Excel.PageSetup.PrintErrors">
			<context kind="class">PageSetup</context>
			<name>PrintErrors</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PageSetup.PrintGridlines-->
	<element type="property">
		<source id="Excel.PageSetup.PrintGridlines">
			<context kind="class">PageSetup</context>
			<name>PrintGridlines</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PageSetup.PrintHeadings-->
	<element type="property">
		<source id="Excel.PageSetup.PrintHeadings">
			<context kind="class">PageSetup</context>
			<name>PrintHeadings</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PageSetup.PrintNotes-->
	<element type="property">
		<source id="Excel.PageSetup.PrintNotes">
			<context kind="class">PageSetup</context>
			<name>PrintNotes</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PageSetup.PrintQuality-->
	<element type="property">
		<source id="Excel.PageSetup.PrintQuality">
			<context kind="class">PageSetup</context>
			<name>PrintQuality</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PageSetup.PrintTitleColumns-->
	<element type="property">
		<source id="Excel.PageSetup.PrintTitleColumns">
			<context kind="class">PageSetup</context>
			<name>PrintTitleColumns</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PageSetup.PrintTitleRows-->
	<element type="property">
		<source id="Excel.PageSetup.PrintTitleRows">
			<context kind="class">PageSetup</context>
			<name>PrintTitleRows</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PageSetup.RightFooter-->
	<element type="property">
		<source id="Excel.PageSetup.RightFooter">
			<context kind="class">PageSetup</context>
			<name>RightFooter</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PageSetup.RightFooterPicture {ReadOnly}-->
	<element type="property">
		<source id="Excel.PageSetup.RightFooterPicture">
			<context kind="class">PageSetup</context>
			<name>RightFooterPicture</name>
			<type>Graphic</type>
		</source>
	</element>
	<!--property::PageSetup.RightHeader-->
	<element type="property">
		<source id="Excel.PageSetup.RightHeader">
			<context kind="class">PageSetup</context>
			<name>RightHeader</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PageSetup.RightHeaderPicture {ReadOnly}-->
	<element type="property">
		<source id="Excel.PageSetup.RightHeaderPicture">
			<context kind="class">PageSetup</context>
			<name>RightHeaderPicture</name>
			<type>Graphic</type>
		</source>
	</element>
	<!--property::PageSetup.RightMargin-->
	<element type="property">
		<source id="Excel.PageSetup.RightMargin">
			<context kind="class">PageSetup</context>
			<name>RightMargin</name>
			<type>double</type>
		</source>
	</element>
	<!--property::PageSetup.TopMargin-->
	<element type="property">
		<source id="Excel.PageSetup.TopMargin">
			<context kind="class">PageSetup</context>
			<name>TopMargin</name>
			<type>double</type>
		</source>
	</element>
	<!--property::PageSetup.Zoom-->
	<element type="property">
		<source id="Excel.PageSetup.Zoom">
			<context kind="class">PageSetup</context>
			<name>Zoom</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Pane-->
	<element type="class">
		<source id="Excel.Pane">
			<name>Pane</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Pane.Activate-->
	<element type="method">
		<source id="Excel.Pane.Activate">
			<context kind="class">Pane</context>
			<name>Activate</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Pane.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Pane.Application">
			<context kind="class">Pane</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Pane.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Pane.Creator">
			<context kind="class">Pane</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Pane.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Pane.Index">
			<context kind="class">Pane</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Pane.LargeScroll-->
	<element type="method">
		<source id="Excel.Pane.LargeScroll">
			<context kind="class">Pane</context>
			<name>LargeScroll</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Down</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Up</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ToRight</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ToLeft</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Pane.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Pane.Parent">
			<context kind="class">Pane</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Pane.ScrollColumn-->
	<element type="property">
		<source id="Excel.Pane.ScrollColumn">
			<context kind="class">Pane</context>
			<name>ScrollColumn</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Pane.ScrollIntoView-->
	<element type="method">
		<source id="Excel.Pane.ScrollIntoView">
			<context kind="class">Pane</context>
			<name>ScrollIntoView</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Height</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Pane.ScrollRow-->
	<element type="property">
		<source id="Excel.Pane.ScrollRow">
			<context kind="class">Pane</context>
			<name>ScrollRow</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Pane.SmallScroll-->
	<element type="method">
		<source id="Excel.Pane.SmallScroll">
			<context kind="class">Pane</context>
			<name>SmallScroll</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Down</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Up</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ToRight</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ToLeft</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Pane.VisibleRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Pane.VisibleRange">
			<context kind="class">Pane</context>
			<name>VisibleRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--Class::Panes-->
	<element type="class">
		<source id="Excel.Panes">
			<name>Panes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Panes.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Panes.Application">
			<context kind="class">Panes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Panes.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Panes.Count">
			<context kind="class">Panes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Panes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Panes.Creator">
			<context kind="class">Panes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Panes.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Panes.Item">
			<context kind="class">Panes</context>
			<name default="true">Item</name>
			<type>Pane</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Panes.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Panes.Parent">
			<context kind="class">Panes</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Parameter-->
	<element type="class">
		<source id="Excel.Parameter">
			<name>Parameter</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Parameter.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Parameter.Application">
			<context kind="class">Parameter</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Parameter.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Parameter.Creator">
			<context kind="class">Parameter</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Parameter.DataType-->
	<element type="property">
		<source id="Excel.Parameter.DataType">
			<context kind="class">Parameter</context>
			<name>DataType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Parameter.Name-->
	<element type="property">
		<source id="Excel.Parameter.Name">
			<context kind="class">Parameter</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Parameter.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Parameter.Parent">
			<context kind="class">Parameter</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Parameter.PromptString {ReadOnly}-->
	<element type="property">
		<source id="Excel.Parameter.PromptString">
			<context kind="class">Parameter</context>
			<name>PromptString</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Parameter.RefreshOnChange-->
	<element type="property">
		<source id="Excel.Parameter.RefreshOnChange">
			<context kind="class">Parameter</context>
			<name>RefreshOnChange</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Parameter.SetParam-->
	<element type="method">
		<source id="Excel.Parameter.SetParam">
			<context kind="class">Parameter</context>
			<name>SetParam</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Value</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Parameter.SourceRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Parameter.SourceRange">
			<context kind="class">Parameter</context>
			<name>SourceRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Parameter.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.Parameter.Type">
			<context kind="class">Parameter</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Parameter.Value {ReadOnly}-->
	<element type="property">
		<source id="Excel.Parameter.Value">
			<context kind="class">Parameter</context>
			<name>Value</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Parameters-->
	<element type="class">
		<source id="Excel.Parameters">
			<name>Parameters</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Parameters.Add-->
	<element type="method">
		<source id="Excel.Parameters.Add">
			<context kind="class">Parameters</context>
			<name>Add</name>
			<type>Parameter</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>iDataType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Parameters.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Parameters.Application">
			<context kind="class">Parameters</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Parameters.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Parameters.Count">
			<context kind="class">Parameters</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Parameters.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Parameters.Creator">
			<context kind="class">Parameters</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Parameters.Delete-->
	<element type="method">
		<source id="Excel.Parameters.Delete">
			<context kind="class">Parameters</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Parameters.Item-->
	<element type="method">
		<source id="Excel.Parameters.Item">
			<context kind="class">Parameters</context>
			<name>Item</name>
			<type>Parameter</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Parameters.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Parameters.Parent">
			<context kind="class">Parameters</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Phonetic-->
	<element type="class">
		<source id="Excel.Phonetic">
			<name>Phonetic</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Phonetic.Alignment-->
	<element type="property">
		<source id="Excel.Phonetic.Alignment">
			<context kind="class">Phonetic</context>
			<name>Alignment</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Phonetic.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Phonetic.Application">
			<context kind="class">Phonetic</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Phonetic.CharacterType-->
	<element type="property">
		<source id="Excel.Phonetic.CharacterType">
			<context kind="class">Phonetic</context>
			<name>CharacterType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Phonetic.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Phonetic.Creator">
			<context kind="class">Phonetic</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Phonetic.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Phonetic.Font">
			<context kind="class">Phonetic</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Phonetic.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Phonetic.Parent">
			<context kind="class">Phonetic</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Phonetic.Text-->
	<element type="property">
		<source id="Excel.Phonetic.Text">
			<context kind="class">Phonetic</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Phonetic.Visible-->
	<element type="property">
		<source id="Excel.Phonetic.Visible">
			<context kind="class">Phonetic</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::Phonetics-->
	<element type="class">
		<source id="Excel.Phonetics">
			<name>Phonetics</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Phonetics.Add-->
	<element type="method">
		<source id="Excel.Phonetics.Add">
			<context kind="class">Phonetics</context>
			<name>Add</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Start</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Length</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Text</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Phonetics.Alignment-->
	<element type="property">
		<source id="Excel.Phonetics.Alignment">
			<context kind="class">Phonetics</context>
			<name>Alignment</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Phonetics.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Phonetics.Application">
			<context kind="class">Phonetics</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Phonetics.CharacterType-->
	<element type="property">
		<source id="Excel.Phonetics.CharacterType">
			<context kind="class">Phonetics</context>
			<name>CharacterType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Phonetics.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Phonetics.Count">
			<context kind="class">Phonetics</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Phonetics.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Phonetics.Creator">
			<context kind="class">Phonetics</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Phonetics.Delete-->
	<element type="method">
		<source id="Excel.Phonetics.Delete">
			<context kind="class">Phonetics</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Phonetics.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Phonetics.Font">
			<context kind="class">Phonetics</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Phonetics.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Phonetics.Item">
			<context kind="class">Phonetics</context>
			<name default="true">Item</name>
			<type>Phonetic</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Phonetics.Length {ReadOnly}-->
	<element type="property">
		<source id="Excel.Phonetics.Length">
			<context kind="class">Phonetics</context>
			<name>Length</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Phonetics.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Phonetics.Parent">
			<context kind="class">Phonetics</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Phonetics.Start {ReadOnly}-->
	<element type="property">
		<source id="Excel.Phonetics.Start">
			<context kind="class">Phonetics</context>
			<name>Start</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Phonetics.Text-->
	<element type="property">
		<source id="Excel.Phonetics.Text">
			<context kind="class">Phonetics</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Phonetics.Visible-->
	<element type="property">
		<source id="Excel.Phonetics.Visible">
			<context kind="class">Phonetics</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::Picture-->
	<element type="class">
		<source id="Excel.Picture">
			<name>Picture</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Picture.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Picture.Application">
			<context kind="class">Picture</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Picture.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Picture.Border">
			<context kind="class">Picture</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::Picture.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Picture.BottomRightCell">
			<context kind="class">Picture</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Picture.BringToFront-->
	<element type="method">
		<source id="Excel.Picture.BringToFront">
			<context kind="class">Picture</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Picture.Copy-->
	<element type="method">
		<source id="Excel.Picture.Copy">
			<context kind="class">Picture</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Picture.CopyPicture-->
	<element type="method">
		<source id="Excel.Picture.CopyPicture">
			<context kind="class">Picture</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Picture.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Picture.Creator">
			<context kind="class">Picture</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Picture.Cut-->
	<element type="method">
		<source id="Excel.Picture.Cut">
			<context kind="class">Picture</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Picture.Delete-->
	<element type="method">
		<source id="Excel.Picture.Delete">
			<context kind="class">Picture</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Picture.Duplicate-->
	<element type="method">
		<source id="Excel.Picture.Duplicate">
			<context kind="class">Picture</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Picture.Enabled-->
	<element type="property">
		<source id="Excel.Picture.Enabled">
			<context kind="class">Picture</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Picture.Formula-->
	<element type="property">
		<source id="Excel.Picture.Formula">
			<context kind="class">Picture</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Picture.Height-->
	<element type="property">
		<source id="Excel.Picture.Height">
			<context kind="class">Picture</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Picture.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Picture.Index">
			<context kind="class">Picture</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Picture.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Picture.Interior">
			<context kind="class">Picture</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::Picture.Left-->
	<element type="property">
		<source id="Excel.Picture.Left">
			<context kind="class">Picture</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Picture.Locked-->
	<element type="property">
		<source id="Excel.Picture.Locked">
			<context kind="class">Picture</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Picture.Name-->
	<element type="property">
		<source id="Excel.Picture.Name">
			<context kind="class">Picture</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Picture.OnAction-->
	<element type="property">
		<source id="Excel.Picture.OnAction">
			<context kind="class">Picture</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Picture.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Picture.Parent">
			<context kind="class">Picture</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Picture.Placement-->
	<element type="property">
		<source id="Excel.Picture.Placement">
			<context kind="class">Picture</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Picture.PrintObject-->
	<element type="property">
		<source id="Excel.Picture.PrintObject">
			<context kind="class">Picture</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Picture.Select-->
	<element type="method">
		<source id="Excel.Picture.Select">
			<context kind="class">Picture</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Picture.SendToBack-->
	<element type="method">
		<source id="Excel.Picture.SendToBack">
			<context kind="class">Picture</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Picture.Shadow-->
	<element type="property">
		<source id="Excel.Picture.Shadow">
			<context kind="class">Picture</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Picture.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Picture.ShapeRange">
			<context kind="class">Picture</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Picture.Top-->
	<element type="property">
		<source id="Excel.Picture.Top">
			<context kind="class">Picture</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Picture.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Picture.TopLeftCell">
			<context kind="class">Picture</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Picture.Visible-->
	<element type="property">
		<source id="Excel.Picture.Visible">
			<context kind="class">Picture</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Picture.Width-->
	<element type="property">
		<source id="Excel.Picture.Width">
			<context kind="class">Picture</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Picture.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Picture.ZOrder">
			<context kind="class">Picture</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::PictureFormat-->
	<element type="class">
		<source id="Excel.PictureFormat">
			<name>PictureFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::PictureFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PictureFormat.Application">
			<context kind="class">PictureFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PictureFormat.Brightness-->
	<element type="property">
		<source id="Excel.PictureFormat.Brightness">
			<context kind="class">PictureFormat</context>
			<name>Brightness</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::PictureFormat.ColorType-->
	<element type="property">
		<source id="Excel.PictureFormat.ColorType">
			<context kind="class">PictureFormat</context>
			<name>ColorType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PictureFormat.Contrast-->
	<element type="property">
		<source id="Excel.PictureFormat.Contrast">
			<context kind="class">PictureFormat</context>
			<name>Contrast</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::PictureFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PictureFormat.Creator">
			<context kind="class">PictureFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PictureFormat.CropBottom-->
	<element type="property">
		<source id="Excel.PictureFormat.CropBottom">
			<context kind="class">PictureFormat</context>
			<name>CropBottom</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::PictureFormat.CropLeft-->
	<element type="property">
		<source id="Excel.PictureFormat.CropLeft">
			<context kind="class">PictureFormat</context>
			<name>CropLeft</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::PictureFormat.CropRight-->
	<element type="property">
		<source id="Excel.PictureFormat.CropRight">
			<context kind="class">PictureFormat</context>
			<name>CropRight</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::PictureFormat.CropTop-->
	<element type="property">
		<source id="Excel.PictureFormat.CropTop">
			<context kind="class">PictureFormat</context>
			<name>CropTop</name>
			<type>Single</type>
		</source>
	</element>
	<!--method::PictureFormat.IncrementBrightness-->
	<element type="method">
		<source id="Excel.PictureFormat.IncrementBrightness">
			<context kind="class">PictureFormat</context>
			<name>IncrementBrightness</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::PictureFormat.IncrementContrast-->
	<element type="method">
		<source id="Excel.PictureFormat.IncrementContrast">
			<context kind="class">PictureFormat</context>
			<name>IncrementContrast</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PictureFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PictureFormat.Parent">
			<context kind="class">PictureFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::PictureFormat.TransparencyColor-->
	<element type="property">
		<source id="Excel.PictureFormat.TransparencyColor">
			<context kind="class">PictureFormat</context>
			<name>TransparencyColor</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PictureFormat.TransparentBackground-->
	<element type="property">
		<source id="Excel.PictureFormat.TransparentBackground">
			<context kind="class">PictureFormat</context>
			<name>TransparentBackground</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Pictures-->
	<element type="class">
		<source id="Excel.Pictures">
			<name>Pictures</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Pictures.Add-->
	<element type="method">
		<source id="Excel.Pictures.Add">
			<context kind="class">Pictures</context>
			<name>Add</name>
			<type>Picture</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Pictures.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Pictures.Application">
			<context kind="class">Pictures</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Pictures.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Pictures.Border">
			<context kind="class">Pictures</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::Pictures.BringToFront-->
	<element type="method">
		<source id="Excel.Pictures.BringToFront">
			<context kind="class">Pictures</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Pictures.Copy-->
	<element type="method">
		<source id="Excel.Pictures.Copy">
			<context kind="class">Pictures</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Pictures.CopyPicture-->
	<element type="method">
		<source id="Excel.Pictures.CopyPicture">
			<context kind="class">Pictures</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Pictures.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Pictures.Count">
			<context kind="class">Pictures</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Pictures.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Pictures.Creator">
			<context kind="class">Pictures</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Pictures.Cut-->
	<element type="method">
		<source id="Excel.Pictures.Cut">
			<context kind="class">Pictures</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Pictures.Delete-->
	<element type="method">
		<source id="Excel.Pictures.Delete">
			<context kind="class">Pictures</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Pictures.Duplicate-->
	<element type="method">
		<source id="Excel.Pictures.Duplicate">
			<context kind="class">Pictures</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Pictures.Enabled-->
	<element type="property">
		<source id="Excel.Pictures.Enabled">
			<context kind="class">Pictures</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Pictures.Formula-->
	<element type="property">
		<source id="Excel.Pictures.Formula">
			<context kind="class">Pictures</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Pictures.Group-->
	<element type="method">
		<source id="Excel.Pictures.Group">
			<context kind="class">Pictures</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::Pictures.Height-->
	<element type="property">
		<source id="Excel.Pictures.Height">
			<context kind="class">Pictures</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--method::Pictures.Insert-->
	<element type="method">
		<source id="Excel.Pictures.Insert">
			<context kind="class">Pictures</context>
			<name>Insert</name>
			<type>Picture</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Converter</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Pictures.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Pictures.Interior">
			<context kind="class">Pictures</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::Pictures.Item-->
	<element type="method">
		<source id="Excel.Pictures.Item">
			<context kind="class">Pictures</context>
			<name>Item</name>
			<type>Picture</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Pictures.Left-->
	<element type="property">
		<source id="Excel.Pictures.Left">
			<context kind="class">Pictures</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Pictures.Locked-->
	<element type="property">
		<source id="Excel.Pictures.Locked">
			<context kind="class">Pictures</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Pictures.OnAction-->
	<element type="property">
		<source id="Excel.Pictures.OnAction">
			<context kind="class">Pictures</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Pictures.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Pictures.Parent">
			<context kind="class">Pictures</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Pictures.Paste-->
	<element type="method">
		<source id="Excel.Pictures.Paste">
			<context kind="class">Pictures</context>
			<name>Paste</name>
			<type>Picture</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Link</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Pictures.Placement-->
	<element type="property">
		<source id="Excel.Pictures.Placement">
			<context kind="class">Pictures</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Pictures.PrintObject-->
	<element type="property">
		<source id="Excel.Pictures.PrintObject">
			<context kind="class">Pictures</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Pictures.Select-->
	<element type="method">
		<source id="Excel.Pictures.Select">
			<context kind="class">Pictures</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Pictures.SendToBack-->
	<element type="method">
		<source id="Excel.Pictures.SendToBack">
			<context kind="class">Pictures</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Pictures.Shadow-->
	<element type="property">
		<source id="Excel.Pictures.Shadow">
			<context kind="class">Pictures</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Pictures.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Pictures.ShapeRange">
			<context kind="class">Pictures</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Pictures.Top-->
	<element type="property">
		<source id="Excel.Pictures.Top">
			<context kind="class">Pictures</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Pictures.Visible-->
	<element type="property">
		<source id="Excel.Pictures.Visible">
			<context kind="class">Pictures</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Pictures.Width-->
	<element type="property">
		<source id="Excel.Pictures.Width">
			<context kind="class">Pictures</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Pictures.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Pictures.ZOrder">
			<context kind="class">Pictures</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::PivotCache-->
	<element type="class">
		<source id="Excel.PivotCache">
			<name>PivotCache</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::PivotCache.ADOConnection {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.ADOConnection">
			<context kind="class">PivotCache</context>
			<name>ADOConnection</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::PivotCache.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.Application">
			<context kind="class">PivotCache</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PivotCache.BackgroundQuery-->
	<element type="property">
		<source id="Excel.PivotCache.BackgroundQuery">
			<context kind="class">PivotCache</context>
			<name>BackgroundQuery</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotCache.CommandText-->
	<element type="property">
		<source id="Excel.PivotCache.CommandText">
			<context kind="class">PivotCache</context>
			<name>CommandText</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PivotCache.CommandType-->
	<element type="property">
		<source id="Excel.PivotCache.CommandType">
			<context kind="class">PivotCache</context>
			<name>CommandType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotCache.Connection-->
	<element type="property">
		<source id="Excel.PivotCache.Connection">
			<context kind="class">PivotCache</context>
			<name>Connection</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::PivotCache.CreatePivotTable-->
	<element type="method">
		<source id="Excel.PivotCache.CreatePivotTable">
			<context kind="class">PivotCache</context>
			<name>CreatePivotTable</name>
			<type>PivotTable</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>TableDestination</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TableName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReadData</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DefaultVersion</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotCache.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.Creator">
			<context kind="class">PivotCache</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotCache.EnableRefresh-->
	<element type="property">
		<source id="Excel.PivotCache.EnableRefresh">
			<context kind="class">PivotCache</context>
			<name>EnableRefresh</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotCache.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.Index">
			<context kind="class">PivotCache</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotCache.IsConnected {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.IsConnected">
			<context kind="class">PivotCache</context>
			<name>IsConnected</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotCache.LocalConnection-->
	<element type="property">
		<source id="Excel.PivotCache.LocalConnection">
			<context kind="class">PivotCache</context>
			<name>LocalConnection</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PivotCache.MaintainConnection-->
	<element type="property">
		<source id="Excel.PivotCache.MaintainConnection">
			<context kind="class">PivotCache</context>
			<name>MaintainConnection</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::PivotCache.MakeConnection-->
	<element type="method">
		<source id="Excel.PivotCache.MakeConnection">
			<context kind="class">PivotCache</context>
			<name>MakeConnection</name>
			<type>void</type>
		</source>
	</element>
	<!--property::PivotCache.MemoryUsed {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.MemoryUsed">
			<context kind="class">PivotCache</context>
			<name>MemoryUsed</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotCache.MissingItemsLimit-->
	<element type="property">
		<source id="Excel.PivotCache.MissingItemsLimit">
			<context kind="class">PivotCache</context>
			<name>MissingItemsLimit</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotCache.OLAP {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.OLAP">
			<context kind="class">PivotCache</context>
			<name>OLAP</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotCache.OptimizeCache-->
	<element type="property">
		<source id="Excel.PivotCache.OptimizeCache">
			<context kind="class">PivotCache</context>
			<name>OptimizeCache</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotCache.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.Parent">
			<context kind="class">PivotCache</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::PivotCache.QueryType {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.QueryType">
			<context kind="class">PivotCache</context>
			<name>QueryType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotCache.RecordCount {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.RecordCount">
			<context kind="class">PivotCache</context>
			<name>RecordCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotCache.Recordset {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.Recordset">
			<context kind="class">PivotCache</context>
			<name>Recordset</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::PivotCache.Refresh-->
	<element type="method">
		<source id="Excel.PivotCache.Refresh">
			<context kind="class">PivotCache</context>
			<name>Refresh</name>
			<type>void</type>
		</source>
	</element>
	<!--property::PivotCache.RefreshDate {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.RefreshDate">
			<context kind="class">PivotCache</context>
			<name>RefreshDate</name>
			<type>java.util.Date</type>
		</source>
	</element>
	<!--property::PivotCache.RefreshName {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.RefreshName">
			<context kind="class">PivotCache</context>
			<name>RefreshName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotCache.RefreshOnFileOpen-->
	<element type="property">
		<source id="Excel.PivotCache.RefreshOnFileOpen">
			<context kind="class">PivotCache</context>
			<name>RefreshOnFileOpen</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotCache.RefreshPeriod-->
	<element type="property">
		<source id="Excel.PivotCache.RefreshPeriod">
			<context kind="class">PivotCache</context>
			<name>RefreshPeriod</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PivotCache.ResetTimer-->
	<element type="method">
		<source id="Excel.PivotCache.ResetTimer">
			<context kind="class">PivotCache</context>
			<name>ResetTimer</name>
			<type>void</type>
		</source>
	</element>
	<!--property::PivotCache.RobustConnect-->
	<element type="property">
		<source id="Excel.PivotCache.RobustConnect">
			<context kind="class">PivotCache</context>
			<name>RobustConnect</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PivotCache.SaveAsODC-->
	<element type="method">
		<source id="Excel.PivotCache.SaveAsODC">
			<context kind="class">PivotCache</context>
			<name>SaveAsODC</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>ODCFileName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Description</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Keywords</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotCache.SavePassword-->
	<element type="property">
		<source id="Excel.PivotCache.SavePassword">
			<context kind="class">PivotCache</context>
			<name>SavePassword</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotCache.SourceConnectionFile-->
	<element type="property">
		<source id="Excel.PivotCache.SourceConnectionFile">
			<context kind="class">PivotCache</context>
			<name>SourceConnectionFile</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotCache.SourceData-->
	<element type="property">
		<source id="Excel.PivotCache.SourceData">
			<context kind="class">PivotCache</context>
			<name>SourceData</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PivotCache.SourceDataFile {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.SourceDataFile">
			<context kind="class">PivotCache</context>
			<name>SourceDataFile</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotCache.SourceType {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCache.SourceType">
			<context kind="class">PivotCache</context>
			<name>SourceType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotCache.Sql-->
	<element type="property">
		<source id="Excel.PivotCache.Sql">
			<context kind="class">PivotCache</context>
			<name>Sql</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PivotCache.UseLocalConnection-->
	<element type="property">
		<source id="Excel.PivotCache.UseLocalConnection">
			<context kind="class">PivotCache</context>
			<name>UseLocalConnection</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::PivotCaches-->
	<element type="class">
		<source id="Excel.PivotCaches">
			<name>PivotCaches</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::PivotCaches.Add-->
	<element type="method">
		<source id="Excel.PivotCaches.Add">
			<context kind="class">PivotCaches</context>
			<name>Add</name>
			<type>PivotCache</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>SourceType</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SourceData</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotCaches.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCaches.Application">
			<context kind="class">PivotCaches</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PivotCaches.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCaches.Count">
			<context kind="class">PivotCaches</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotCaches.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCaches.Creator">
			<context kind="class">PivotCaches</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PivotCaches.Item-->
	<element type="method">
		<source id="Excel.PivotCaches.Item">
			<context kind="class">PivotCaches</context>
			<name>Item</name>
			<type>PivotCache</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotCaches.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCaches.Parent">
			<context kind="class">PivotCaches</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::PivotCell-->
	<element type="class">
		<source id="Excel.PivotCell">
			<name>PivotCell</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::PivotCell.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCell.Application">
			<context kind="class">PivotCell</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PivotCell.ColumnItems {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCell.ColumnItems">
			<context kind="class">PivotCell</context>
			<name>ColumnItems</name>
			<type>PivotItemList</type>
		</source>
	</element>
	<!--property::PivotCell.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCell.Creator">
			<context kind="class">PivotCell</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotCell.CustomSubtotalFunction {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCell.CustomSubtotalFunction">
			<context kind="class">PivotCell</context>
			<name>CustomSubtotalFunction</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotCell.DataField {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCell.DataField">
			<context kind="class">PivotCell</context>
			<name>DataField</name>
			<type>PivotField</type>
		</source>
	</element>
	<!--property::PivotCell.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCell.Parent">
			<context kind="class">PivotCell</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::PivotCell.PivotCellType {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCell.PivotCellType">
			<context kind="class">PivotCell</context>
			<name>PivotCellType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotCell.PivotField {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCell.PivotField">
			<context kind="class">PivotCell</context>
			<name>PivotField</name>
			<type>PivotField</type>
		</source>
	</element>
	<!--property::PivotCell.PivotItem {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCell.PivotItem">
			<context kind="class">PivotCell</context>
			<name>PivotItem</name>
			<type>PivotItem</type>
		</source>
	</element>
	<!--property::PivotCell.PivotTable {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCell.PivotTable">
			<context kind="class">PivotCell</context>
			<name>PivotTable</name>
			<type>PivotTable</type>
		</source>
	</element>
	<!--property::PivotCell.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCell.Range">
			<context kind="class">PivotCell</context>
			<name>Range</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::PivotCell.RowItems {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotCell.RowItems">
			<context kind="class">PivotCell</context>
			<name>RowItems</name>
			<type>PivotItemList</type>
		</source>
	</element>
	<!--Class::PivotField-->
	<element type="class">
		<source id="Excel.PivotField">
			<name>PivotField</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::PivotField.AddPageItem-->
	<element type="method">
		<source id="Excel.PivotField.AddPageItem">
			<context kind="class">PivotField</context>
			<name>AddPageItem</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Item</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ClearList</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotField.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.Application">
			<context kind="class">PivotField</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::PivotField.AutoShow-->
	<element type="method">
		<source id="Excel.PivotField.AutoShow">
			<context kind="class">PivotField</context>
			<name>AutoShow</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Range</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Count</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Field</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotField.AutoShowCount {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.AutoShowCount">
			<context kind="class">PivotField</context>
			<name>AutoShowCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotField.AutoShowField {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.AutoShowField">
			<context kind="class">PivotField</context>
			<name>AutoShowField</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotField.AutoShowRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.AutoShowRange">
			<context kind="class">PivotField</context>
			<name>AutoShowRange</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotField.AutoShowType {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.AutoShowType">
			<context kind="class">PivotField</context>
			<name>AutoShowType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PivotField.AutoSort-->
	<element type="method">
		<source id="Excel.PivotField.AutoSort">
			<context kind="class">PivotField</context>
			<name>AutoSort</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Order</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Field</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotField.AutoSortField {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.AutoSortField">
			<context kind="class">PivotField</context>
			<name>AutoSortField</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotField.AutoSortOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.AutoSortOrder">
			<context kind="class">PivotField</context>
			<name>AutoSortOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotField.BaseField-->
	<element type="property">
		<source id="Excel.PivotField.BaseField">
			<context kind="class">PivotField</context>
			<name>BaseField</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PivotField.BaseItem-->
	<element type="property">
		<source id="Excel.PivotField.BaseItem">
			<context kind="class">PivotField</context>
			<name>BaseItem</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::PivotField.CalculatedItems-->
	<element type="method">
		<source id="Excel.PivotField.CalculatedItems">
			<context kind="class">PivotField</context>
			<name>CalculatedItems</name>
			<type>CalculatedItems</type>
		</source>
	</element>
	<!--property::PivotField.Calculation-->
	<element type="property">
		<source id="Excel.PivotField.Calculation">
			<context kind="class">PivotField</context>
			<name>Calculation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotField.Caption-->
	<element type="property">
		<source id="Excel.PivotField.Caption">
			<context kind="class">PivotField</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotField.ChildField {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.ChildField">
			<context kind="class">PivotField</context>
			<name>ChildField</name>
			<type>PivotField</type>
		</source>
	</element>
	<!--property::PivotField.ChildItems {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.ChildItems">
			<context kind="class">PivotField</context>
			<name>ChildItems</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotField.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.Creator">
			<context kind="class">PivotField</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotField.CubeField {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.CubeField">
			<context kind="class">PivotField</context>
			<name>CubeField</name>
			<type>CubeField</type>
		</source>
	</element>
	<!--property::PivotField.CurrentPage-->
	<element type="property">
		<source id="Excel.PivotField.CurrentPage">
			<context kind="class">PivotField</context>
			<name>CurrentPage</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PivotField.CurrentPageList-->
	<element type="property">
		<source id="Excel.PivotField.CurrentPageList">
			<context kind="class">PivotField</context>
			<name>CurrentPageList</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PivotField.CurrentPageName-->
	<element type="property">
		<source id="Excel.PivotField.CurrentPageName">
			<context kind="class">PivotField</context>
			<name>CurrentPageName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotField.DatabaseSort-->
	<element type="property">
		<source id="Excel.PivotField.DatabaseSort">
			<context kind="class">PivotField</context>
			<name>DatabaseSort</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.DataRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.DataRange">
			<context kind="class">PivotField</context>
			<name>DataRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::PivotField.DataType {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.DataType">
			<context kind="class">PivotField</context>
			<name>DataType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PivotField.Delete-->
	<element type="method">
		<source id="Excel.PivotField.Delete">
			<context kind="class">PivotField</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::PivotField.DragToColumn-->
	<element type="property">
		<source id="Excel.PivotField.DragToColumn">
			<context kind="class">PivotField</context>
			<name>DragToColumn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.DragToData-->
	<element type="property">
		<source id="Excel.PivotField.DragToData">
			<context kind="class">PivotField</context>
			<name>DragToData</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.DragToHide-->
	<element type="property">
		<source id="Excel.PivotField.DragToHide">
			<context kind="class">PivotField</context>
			<name>DragToHide</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.DragToPage-->
	<element type="property">
		<source id="Excel.PivotField.DragToPage">
			<context kind="class">PivotField</context>
			<name>DragToPage</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.DragToRow-->
	<element type="property">
		<source id="Excel.PivotField.DragToRow">
			<context kind="class">PivotField</context>
			<name>DragToRow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.DrilledDown-->
	<element type="property">
		<source id="Excel.PivotField.DrilledDown">
			<context kind="class">PivotField</context>
			<name>DrilledDown</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.EnableItemSelection-->
	<element type="property">
		<source id="Excel.PivotField.EnableItemSelection">
			<context kind="class">PivotField</context>
			<name>EnableItemSelection</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.Formula-->
	<element type="property">
		<source id="Excel.PivotField.Formula">
			<context kind="class">PivotField</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotField.Function-->
	<element type="property">
		<source id="Excel.PivotField.Function">
			<context kind="class">PivotField</context>
			<name>Function</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotField.GroupLevel {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.GroupLevel">
			<context kind="class">PivotField</context>
			<name>GroupLevel</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PivotField.HiddenItems {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.HiddenItems">
			<context kind="class">PivotField</context>
			<name>HiddenItems</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotField.HiddenItemsList-->
	<element type="property">
		<source id="Excel.PivotField.HiddenItemsList">
			<context kind="class">PivotField</context>
			<name>HiddenItemsList</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PivotField.IsCalculated {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.IsCalculated">
			<context kind="class">PivotField</context>
			<name>IsCalculated</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.IsMemberProperty {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.IsMemberProperty">
			<context kind="class">PivotField</context>
			<name>IsMemberProperty</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.LabelRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.LabelRange">
			<context kind="class">PivotField</context>
			<name>LabelRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::PivotField.LayoutBlankLine-->
	<element type="property">
		<source id="Excel.PivotField.LayoutBlankLine">
			<context kind="class">PivotField</context>
			<name>LayoutBlankLine</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.LayoutForm-->
	<element type="property">
		<source id="Excel.PivotField.LayoutForm">
			<context kind="class">PivotField</context>
			<name>LayoutForm</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotField.LayoutPageBreak-->
	<element type="property">
		<source id="Excel.PivotField.LayoutPageBreak">
			<context kind="class">PivotField</context>
			<name>LayoutPageBreak</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.LayoutSubtotalLocation-->
	<element type="property">
		<source id="Excel.PivotField.LayoutSubtotalLocation">
			<context kind="class">PivotField</context>
			<name>LayoutSubtotalLocation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotField.MemoryUsed {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.MemoryUsed">
			<context kind="class">PivotField</context>
			<name>MemoryUsed</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotField.Name {Default}-->
	<element type="property">
		<source id="Excel.PivotField.Name">
			<context kind="class">PivotField</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotField.NumberFormat-->
	<element type="property">
		<source id="Excel.PivotField.NumberFormat">
			<context kind="class">PivotField</context>
			<name>NumberFormat</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotField.Orientation-->
	<element type="property">
		<source id="Excel.PivotField.Orientation">
			<context kind="class">PivotField</context>
			<name>Orientation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotField.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.Parent">
			<context kind="class">PivotField</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::PivotField.ParentField {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.ParentField">
			<context kind="class">PivotField</context>
			<name>ParentField</name>
			<type>PivotField</type>
		</source>
	</element>
	<!--property::PivotField.ParentItems {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.ParentItems">
			<context kind="class">PivotField</context>
			<name>ParentItems</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::PivotField.PivotItems-->
	<element type="method">
		<source id="Excel.PivotField.PivotItems">
			<context kind="class">PivotField</context>
			<name>PivotItems</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotField.Position-->
	<element type="property">
		<source id="Excel.PivotField.Position">
			<context kind="class">PivotField</context>
			<name>Position</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PivotField.PropertyOrder-->
	<element type="property">
		<source id="Excel.PivotField.PropertyOrder">
			<context kind="class">PivotField</context>
			<name>PropertyOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotField.PropertyParentField {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.PropertyParentField">
			<context kind="class">PivotField</context>
			<name>PropertyParentField</name>
			<type>PivotField</type>
		</source>
	</element>
	<!--property::PivotField.ServerBased-->
	<element type="property">
		<source id="Excel.PivotField.ServerBased">
			<context kind="class">PivotField</context>
			<name>ServerBased</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.ShowAllItems-->
	<element type="property">
		<source id="Excel.PivotField.ShowAllItems">
			<context kind="class">PivotField</context>
			<name>ShowAllItems</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotField.SourceName {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.SourceName">
			<context kind="class">PivotField</context>
			<name>SourceName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotField.StandardFormula-->
	<element type="property">
		<source id="Excel.PivotField.StandardFormula">
			<context kind="class">PivotField</context>
			<name>StandardFormula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotField.SubtotalName-->
	<element type="property">
		<source id="Excel.PivotField.SubtotalName">
			<context kind="class">PivotField</context>
			<name>SubtotalName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotField.Subtotals-->
	<element type="property">
		<source id="Excel.PivotField.Subtotals">
			<context kind="class">PivotField</context>
			<name>Subtotals</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotField.TotalLevels {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.TotalLevels">
			<context kind="class">PivotField</context>
			<name>TotalLevels</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PivotField.Value {Default}-->
	<element type="property">
		<source id="Excel.PivotField.Value">
			<context kind="class">PivotField</context>
			<name default="true">Value</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotField.VisibleItems {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotField.VisibleItems">
			<context kind="class">PivotField</context>
			<name>VisibleItems</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::PivotFields-->
	<element type="class">
		<source id="Excel.PivotFields">
			<name>PivotFields</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::PivotFields.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotFields.Application">
			<context kind="class">PivotFields</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PivotFields.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotFields.Count">
			<context kind="class">PivotFields</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotFields.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotFields.Creator">
			<context kind="class">PivotFields</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PivotFields.Item-->
	<element type="method">
		<source id="Excel.PivotFields.Item">
			<context kind="class">PivotFields</context>
			<name>Item</name>
			<type>PivotField</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotFields.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotFields.Parent">
			<context kind="class">PivotFields</context>
			<name>Parent</name>
			<type>PivotTable</type>
		</source>
	</element>
	<!--Class::PivotFormula-->
	<element type="class">
		<source id="Excel.PivotFormula">
			<name>PivotFormula</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::PivotFormula.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotFormula.Application">
			<context kind="class">PivotFormula</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PivotFormula.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotFormula.Creator">
			<context kind="class">PivotFormula</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PivotFormula.Delete-->
	<element type="method">
		<source id="Excel.PivotFormula.Delete">
			<context kind="class">PivotFormula</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::PivotFormula.Formula-->
	<element type="property">
		<source id="Excel.PivotFormula.Formula">
			<context kind="class">PivotFormula</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotFormula.Index-->
	<element type="property">
		<source id="Excel.PivotFormula.Index">
			<context kind="class">PivotFormula</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotFormula.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotFormula.Parent">
			<context kind="class">PivotFormula</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::PivotFormula.StandardFormula-->
	<element type="property">
		<source id="Excel.PivotFormula.StandardFormula">
			<context kind="class">PivotFormula</context>
			<name>StandardFormula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotFormula.Value {Default}-->
	<element type="property">
		<source id="Excel.PivotFormula.Value">
			<context kind="class">PivotFormula</context>
			<name default="true">Value</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::PivotFormulas-->
	<element type="class">
		<source id="Excel.PivotFormulas">
			<name>PivotFormulas</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::PivotFormulas.Add-->
	<element type="method">
		<source id="Excel.PivotFormulas.Add">
			<context kind="class">PivotFormulas</context>
			<name>Add</name>
			<type>PivotFormula</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Formula</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>UseStandardFormula</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotFormulas.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotFormulas.Application">
			<context kind="class">PivotFormulas</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PivotFormulas.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotFormulas.Count">
			<context kind="class">PivotFormulas</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotFormulas.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotFormulas.Creator">
			<context kind="class">PivotFormulas</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PivotFormulas.Item-->
	<element type="method">
		<source id="Excel.PivotFormulas.Item">
			<context kind="class">PivotFormulas</context>
			<name>Item</name>
			<type>PivotFormula</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotFormulas.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotFormulas.Parent">
			<context kind="class">PivotFormulas</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::PivotItem-->
	<element type="class">
		<source id="Excel.PivotItem">
			<name>PivotItem</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::PivotItem.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItem.Application">
			<context kind="class">PivotItem</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PivotItem.Caption-->
	<element type="property">
		<source id="Excel.PivotItem.Caption">
			<context kind="class">PivotItem</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotItem.ChildItems {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItem.ChildItems">
			<context kind="class">PivotItem</context>
			<name>ChildItems</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotItem.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItem.Creator">
			<context kind="class">PivotItem</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotItem.DataRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItem.DataRange">
			<context kind="class">PivotItem</context>
			<name>DataRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::PivotItem.Delete-->
	<element type="method">
		<source id="Excel.PivotItem.Delete">
			<context kind="class">PivotItem</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::PivotItem.DrilledDown-->
	<element type="property">
		<source id="Excel.PivotItem.DrilledDown">
			<context kind="class">PivotItem</context>
			<name>DrilledDown</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotItem.Formula-->
	<element type="property">
		<source id="Excel.PivotItem.Formula">
			<context kind="class">PivotItem</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotItem.IsCalculated {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItem.IsCalculated">
			<context kind="class">PivotItem</context>
			<name>IsCalculated</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotItem.LabelRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItem.LabelRange">
			<context kind="class">PivotItem</context>
			<name>LabelRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::PivotItem.Name {Default}-->
	<element type="property">
		<source id="Excel.PivotItem.Name">
			<context kind="class">PivotItem</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotItem.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItem.Parent">
			<context kind="class">PivotItem</context>
			<name>Parent</name>
			<type>PivotField</type>
		</source>
	</element>
	<!--property::PivotItem.ParentItem {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItem.ParentItem">
			<context kind="class">PivotItem</context>
			<name>ParentItem</name>
			<type>PivotItem</type>
		</source>
	</element>
	<!--property::PivotItem.ParentShowDetail {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItem.ParentShowDetail">
			<context kind="class">PivotItem</context>
			<name>ParentShowDetail</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotItem.Position-->
	<element type="property">
		<source id="Excel.PivotItem.Position">
			<context kind="class">PivotItem</context>
			<name>Position</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotItem.RecordCount {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItem.RecordCount">
			<context kind="class">PivotItem</context>
			<name>RecordCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotItem.ShowDetail-->
	<element type="property">
		<source id="Excel.PivotItem.ShowDetail">
			<context kind="class">PivotItem</context>
			<name>ShowDetail</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotItem.SourceName {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItem.SourceName">
			<context kind="class">PivotItem</context>
			<name>SourceName</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PivotItem.SourceNameStandard {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItem.SourceNameStandard">
			<context kind="class">PivotItem</context>
			<name>SourceNameStandard</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotItem.StandardFormula-->
	<element type="property">
		<source id="Excel.PivotItem.StandardFormula">
			<context kind="class">PivotItem</context>
			<name>StandardFormula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotItem.Value {Default}-->
	<element type="property">
		<source id="Excel.PivotItem.Value">
			<context kind="class">PivotItem</context>
			<name default="true">Value</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotItem.Visible-->
	<element type="property">
		<source id="Excel.PivotItem.Visible">
			<context kind="class">PivotItem</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::PivotItemList-->
	<element type="class">
		<source id="Excel.PivotItemList">
			<name>PivotItemList</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::PivotItemList.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItemList.Application">
			<context kind="class">PivotItemList</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PivotItemList.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItemList.Count">
			<context kind="class">PivotItemList</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotItemList.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItemList.Creator">
			<context kind="class">PivotItemList</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PivotItemList.Item-->
	<element type="method">
		<source id="Excel.PivotItemList.Item">
			<context kind="class">PivotItemList</context>
			<name>Item</name>
			<type>PivotItem</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotItemList.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItemList.Parent">
			<context kind="class">PivotItemList</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::PivotItems-->
	<element type="class">
		<source id="Excel.PivotItems">
			<name>PivotItems</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::PivotItems.Add-->
	<element type="method">
		<source id="Excel.PivotItems.Add">
			<context kind="class">PivotItems</context>
			<name>Add</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotItems.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItems.Application">
			<context kind="class">PivotItems</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PivotItems.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItems.Count">
			<context kind="class">PivotItems</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotItems.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItems.Creator">
			<context kind="class">PivotItems</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PivotItems.Item-->
	<element type="method">
		<source id="Excel.PivotItems.Item">
			<context kind="class">PivotItems</context>
			<name>Item</name>
			<type>PivotItem</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotItems.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotItems.Parent">
			<context kind="class">PivotItems</context>
			<name>Parent</name>
			<type>PivotField</type>
		</source>
	</element>
	<!--Class::PivotLayout-->
	<element type="class">
		<source id="Excel.PivotLayout">
			<name>PivotLayout</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::PivotLayout.AddFields-->
	<element type="method">
		<source id="Excel.PivotLayout.AddFields">
			<context kind="class">PivotLayout</context>
			<name>AddFields</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>RowFields</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ColumnFields</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PageFields</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AppendField</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotLayout.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotLayout.Application">
			<context kind="class">PivotLayout</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PivotLayout.ColumnFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotLayout.ColumnFields">
			<context kind="class">PivotLayout</context>
			<name>ColumnFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotLayout.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotLayout.Creator">
			<context kind="class">PivotLayout</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotLayout.CubeFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotLayout.CubeFields">
			<context kind="class">PivotLayout</context>
			<name>CubeFields</name>
			<type>CubeFields</type>
		</source>
	</element>
	<!--property::PivotLayout.DataFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotLayout.DataFields">
			<context kind="class">PivotLayout</context>
			<name>DataFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotLayout.HiddenFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotLayout.HiddenFields">
			<context kind="class">PivotLayout</context>
			<name>HiddenFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotLayout.InnerDetail-->
	<element type="property">
		<source id="Excel.PivotLayout.InnerDetail">
			<context kind="class">PivotLayout</context>
			<name>InnerDetail</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotLayout.PageFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotLayout.PageFields">
			<context kind="class">PivotLayout</context>
			<name>PageFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotLayout.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotLayout.Parent">
			<context kind="class">PivotLayout</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::PivotLayout.PivotCache {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotLayout.PivotCache">
			<context kind="class">PivotLayout</context>
			<name>PivotCache</name>
			<type>PivotCache</type>
		</source>
	</element>
	<!--property::PivotLayout.PivotFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotLayout.PivotFields">
			<context kind="class">PivotLayout</context>
			<name>PivotFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotLayout.PivotTable {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotLayout.PivotTable">
			<context kind="class">PivotLayout</context>
			<name>PivotTable</name>
			<type>PivotTable</type>
		</source>
	</element>
	<!--property::PivotLayout.RowFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotLayout.RowFields">
			<context kind="class">PivotLayout</context>
			<name>RowFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotLayout.VisibleFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotLayout.VisibleFields">
			<context kind="class">PivotLayout</context>
			<name>VisibleFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::PivotTable-->
	<element type="class">
		<source id="Excel.PivotTable">
			<name>PivotTable</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::PivotTable.AddDataField-->
	<element type="method">
		<source id="Excel.PivotTable.AddDataField">
			<context kind="class">PivotTable</context>
			<name>AddDataField</name>
			<type>PivotField</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Field</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Caption</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Function</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::PivotTable.AddFields-->
	<element type="method">
		<source id="Excel.PivotTable.AddFields">
			<context kind="class">PivotTable</context>
			<name>AddFields</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>RowFields</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ColumnFields</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PageFields</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AddToTable</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTable.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.Application">
			<context kind="class">PivotTable</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PivotTable.CacheIndex-->
	<element type="property">
		<source id="Excel.PivotTable.CacheIndex">
			<context kind="class">PivotTable</context>
			<name>CacheIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PivotTable.CalculatedFields-->
	<element type="method">
		<source id="Excel.PivotTable.CalculatedFields">
			<context kind="class">PivotTable</context>
			<name>CalculatedFields</name>
			<type>CalculatedFields</type>
		</source>
	</element>
	<!--property::PivotTable.CalculatedMembers {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.CalculatedMembers">
			<context kind="class">PivotTable</context>
			<name>CalculatedMembers</name>
			<type>CalculatedMembers</type>
		</source>
	</element>
	<!--property::PivotTable.ColumnFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.ColumnFields">
			<context kind="class">PivotTable</context>
			<name>ColumnFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTable.ColumnGrand-->
	<element type="property">
		<source id="Excel.PivotTable.ColumnGrand">
			<context kind="class">PivotTable</context>
			<name>ColumnGrand</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.ColumnRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.ColumnRange">
			<context kind="class">PivotTable</context>
			<name>ColumnRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::PivotTable.CreateCubeFile-->
	<element type="method">
		<source id="Excel.PivotTable.CreateCubeFile">
			<context kind="class">PivotTable</context>
			<name>CreateCubeFile</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>File</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Measures</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Levels</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Members</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Properties</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTable.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.Creator">
			<context kind="class">PivotTable</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotTable.CubeFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.CubeFields">
			<context kind="class">PivotTable</context>
			<name>CubeFields</name>
			<type>CubeFields</type>
		</source>
	</element>
	<!--property::PivotTable.DataBodyRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.DataBodyRange">
			<context kind="class">PivotTable</context>
			<name>DataBodyRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::PivotTable.DataFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.DataFields">
			<context kind="class">PivotTable</context>
			<name>DataFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTable.DataLabelRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.DataLabelRange">
			<context kind="class">PivotTable</context>
			<name>DataLabelRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::PivotTable.DataPivotField {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.DataPivotField">
			<context kind="class">PivotTable</context>
			<name>DataPivotField</name>
			<type>PivotField</type>
		</source>
	</element>
	<!--property::PivotTable.DisplayEmptyColumn-->
	<element type="property">
		<source id="Excel.PivotTable.DisplayEmptyColumn">
			<context kind="class">PivotTable</context>
			<name>DisplayEmptyColumn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.DisplayEmptyRow-->
	<element type="property">
		<source id="Excel.PivotTable.DisplayEmptyRow">
			<context kind="class">PivotTable</context>
			<name>DisplayEmptyRow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.DisplayErrorString-->
	<element type="property">
		<source id="Excel.PivotTable.DisplayErrorString">
			<context kind="class">PivotTable</context>
			<name>DisplayErrorString</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.DisplayImmediateItems-->
	<element type="property">
		<source id="Excel.PivotTable.DisplayImmediateItems">
			<context kind="class">PivotTable</context>
			<name>DisplayImmediateItems</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.DisplayNullString-->
	<element type="property">
		<source id="Excel.PivotTable.DisplayNullString">
			<context kind="class">PivotTable</context>
			<name>DisplayNullString</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.EnableDataValueEditing-->
	<element type="property">
		<source id="Excel.PivotTable.EnableDataValueEditing">
			<context kind="class">PivotTable</context>
			<name>EnableDataValueEditing</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.EnableDrilldown-->
	<element type="property">
		<source id="Excel.PivotTable.EnableDrilldown">
			<context kind="class">PivotTable</context>
			<name>EnableDrilldown</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.EnableFieldDialog-->
	<element type="property">
		<source id="Excel.PivotTable.EnableFieldDialog">
			<context kind="class">PivotTable</context>
			<name>EnableFieldDialog</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.EnableFieldList-->
	<element type="property">
		<source id="Excel.PivotTable.EnableFieldList">
			<context kind="class">PivotTable</context>
			<name>EnableFieldList</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.EnableWizard-->
	<element type="property">
		<source id="Excel.PivotTable.EnableWizard">
			<context kind="class">PivotTable</context>
			<name>EnableWizard</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.ErrorString-->
	<element type="property">
		<source id="Excel.PivotTable.ErrorString">
			<context kind="class">PivotTable</context>
			<name>ErrorString</name>
			<type>String</type>
		</source>
	</element>
	<!--method::PivotTable.Format-->
	<element type="method">
		<source id="Excel.PivotTable.Format">
			<context kind="class">PivotTable</context>
			<name>Format</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::PivotTable.GetData-->
	<element type="method">
		<source id="Excel.PivotTable.GetData">
			<context kind="class">PivotTable</context>
			<name>GetData</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::PivotTable.GetPivotData-->
	<element type="method">
		<source id="Excel.PivotTable.GetPivotData">
			<context kind="class">PivotTable</context>
			<name>GetPivotData</name>
			<type>Range</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>DataField</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Item14</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTable.GrandTotalName-->
	<element type="property">
		<source id="Excel.PivotTable.GrandTotalName">
			<context kind="class">PivotTable</context>
			<name>GrandTotalName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotTable.HasAutoFormat-->
	<element type="property">
		<source id="Excel.PivotTable.HasAutoFormat">
			<context kind="class">PivotTable</context>
			<name>HasAutoFormat</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.HiddenFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.HiddenFields">
			<context kind="class">PivotTable</context>
			<name>HiddenFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTable.InnerDetail-->
	<element type="property">
		<source id="Excel.PivotTable.InnerDetail">
			<context kind="class">PivotTable</context>
			<name>InnerDetail</name>
			<type>String</type>
		</source>
	</element>
	<!--method::PivotTable.ListFormulas-->
	<element type="method">
		<source id="Excel.PivotTable.ListFormulas">
			<context kind="class">PivotTable</context>
			<name>ListFormulas</name>
			<type>void</type>
		</source>
	</element>
	<!--property::PivotTable.ManualUpdate-->
	<element type="property">
		<source id="Excel.PivotTable.ManualUpdate">
			<context kind="class">PivotTable</context>
			<name>ManualUpdate</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.MDX {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.MDX">
			<context kind="class">PivotTable</context>
			<name>MDX</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotTable.MergeLabels-->
	<element type="property">
		<source id="Excel.PivotTable.MergeLabels">
			<context kind="class">PivotTable</context>
			<name>MergeLabels</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.Name {Default}-->
	<element type="property">
		<source id="Excel.PivotTable.Name">
			<context kind="class">PivotTable</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotTable.NullString-->
	<element type="property">
		<source id="Excel.PivotTable.NullString">
			<context kind="class">PivotTable</context>
			<name>NullString</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotTable.PageFieldOrder-->
	<element type="property">
		<source id="Excel.PivotTable.PageFieldOrder">
			<context kind="class">PivotTable</context>
			<name>PageFieldOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotTable.PageFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.PageFields">
			<context kind="class">PivotTable</context>
			<name>PageFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTable.PageFieldStyle-->
	<element type="property">
		<source id="Excel.PivotTable.PageFieldStyle">
			<context kind="class">PivotTable</context>
			<name>PageFieldStyle</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotTable.PageFieldWrapCount-->
	<element type="property">
		<source id="Excel.PivotTable.PageFieldWrapCount">
			<context kind="class">PivotTable</context>
			<name>PageFieldWrapCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotTable.PageRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.PageRange">
			<context kind="class">PivotTable</context>
			<name>PageRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::PivotTable.PageRangeCells {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.PageRangeCells">
			<context kind="class">PivotTable</context>
			<name>PageRangeCells</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::PivotTable.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.Parent">
			<context kind="class">PivotTable</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::PivotTable.PivotCache-->
	<element type="method">
		<source id="Excel.PivotTable.PivotCache">
			<context kind="class">PivotTable</context>
			<name>PivotCache</name>
			<type>PivotCache</type>
		</source>
	</element>
	<!--method::PivotTable.PivotFields-->
	<element type="method">
		<source id="Excel.PivotTable.PivotFields">
			<context kind="class">PivotTable</context>
			<name>PivotFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTable.PivotFormulas {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.PivotFormulas">
			<context kind="class">PivotTable</context>
			<name>PivotFormulas</name>
			<type>PivotFormulas</type>
		</source>
	</element>
	<!--method::PivotTable.PivotSelect-->
	<element type="method">
		<source id="Excel.PivotTable.PivotSelect">
			<context kind="class">PivotTable</context>
			<name>PivotSelect</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Mode</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>UseStandardName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTable.PivotSelection-->
	<element type="property">
		<source id="Excel.PivotTable.PivotSelection">
			<context kind="class">PivotTable</context>
			<name>PivotSelection</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotTable.PivotSelectionStandard-->
	<element type="property">
		<source id="Excel.PivotTable.PivotSelectionStandard">
			<context kind="class">PivotTable</context>
			<name>PivotSelectionStandard</name>
			<type>String</type>
		</source>
	</element>
	<!--method::PivotTable.PivotTableWizard-->
	<element type="method">
		<source id="Excel.PivotTable.PivotTableWizard">
			<context kind="class">PivotTable</context>
			<name>PivotTableWizard</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>SourceType</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SourceData</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TableDestination</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TableName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RowGrand</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ColumnGrand</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SaveData</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HasAutoFormat</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AutoPage</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Reserved</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>BackgroundQuery</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>OptimizeCache</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PageFieldOrder</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PageFieldWrapCount</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReadData</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Connection</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTable.PreserveFormatting-->
	<element type="property">
		<source id="Excel.PivotTable.PreserveFormatting">
			<context kind="class">PivotTable</context>
			<name>PreserveFormatting</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.PrintTitles-->
	<element type="property">
		<source id="Excel.PivotTable.PrintTitles">
			<context kind="class">PivotTable</context>
			<name>PrintTitles</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.RefreshDate {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.RefreshDate">
			<context kind="class">PivotTable</context>
			<name>RefreshDate</name>
			<type>java.util.Date</type>
		</source>
	</element>
	<!--property::PivotTable.RefreshName {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.RefreshName">
			<context kind="class">PivotTable</context>
			<name>RefreshName</name>
			<type>String</type>
		</source>
	</element>
	<!--method::PivotTable.RefreshTable-->
	<element type="method">
		<source id="Excel.PivotTable.RefreshTable">
			<context kind="class">PivotTable</context>
			<name>RefreshTable</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.RepeatItemsOnEachPrintedPage-->
	<element type="property">
		<source id="Excel.PivotTable.RepeatItemsOnEachPrintedPage">
			<context kind="class">PivotTable</context>
			<name>RepeatItemsOnEachPrintedPage</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.RowFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.RowFields">
			<context kind="class">PivotTable</context>
			<name>RowFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTable.RowGrand-->
	<element type="property">
		<source id="Excel.PivotTable.RowGrand">
			<context kind="class">PivotTable</context>
			<name>RowGrand</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.RowRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.RowRange">
			<context kind="class">PivotTable</context>
			<name>RowRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::PivotTable.SaveData-->
	<element type="property">
		<source id="Excel.PivotTable.SaveData">
			<context kind="class">PivotTable</context>
			<name>SaveData</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.SelectionMode-->
	<element type="property">
		<source id="Excel.PivotTable.SelectionMode">
			<context kind="class">PivotTable</context>
			<name>SelectionMode</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotTable.ShowCellBackgroundFromOLAP-->
	<element type="property">
		<source id="Excel.PivotTable.ShowCellBackgroundFromOLAP">
			<context kind="class">PivotTable</context>
			<name>ShowCellBackgroundFromOLAP</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.ShowPageMultipleItemLabel-->
	<element type="property">
		<source id="Excel.PivotTable.ShowPageMultipleItemLabel">
			<context kind="class">PivotTable</context>
			<name>ShowPageMultipleItemLabel</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::PivotTable.ShowPages-->
	<element type="method">
		<source id="Excel.PivotTable.ShowPages">
			<context kind="class">PivotTable</context>
			<name>ShowPages</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>PageField</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTable.SmallGrid-->
	<element type="property">
		<source id="Excel.PivotTable.SmallGrid">
			<context kind="class">PivotTable</context>
			<name>SmallGrid</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.SourceData-->
	<element type="property">
		<source id="Excel.PivotTable.SourceData">
			<context kind="class">PivotTable</context>
			<name>SourceData</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PivotTable.SubtotalHiddenPageItems-->
	<element type="property">
		<source id="Excel.PivotTable.SubtotalHiddenPageItems">
			<context kind="class">PivotTable</context>
			<name>SubtotalHiddenPageItems</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.TableRange1 {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.TableRange1">
			<context kind="class">PivotTable</context>
			<name>TableRange1</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::PivotTable.TableRange2 {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.TableRange2">
			<context kind="class">PivotTable</context>
			<name>TableRange2</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::PivotTable.TableStyle-->
	<element type="property">
		<source id="Excel.PivotTable.TableStyle">
			<context kind="class">PivotTable</context>
			<name>TableStyle</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotTable.Tag-->
	<element type="property">
		<source id="Excel.PivotTable.Tag">
			<context kind="class">PivotTable</context>
			<name>Tag</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotTable.TotalsAnnotation-->
	<element type="property">
		<source id="Excel.PivotTable.TotalsAnnotation">
			<context kind="class">PivotTable</context>
			<name>TotalsAnnotation</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::PivotTable.Update-->
	<element type="method">
		<source id="Excel.PivotTable.Update">
			<context kind="class">PivotTable</context>
			<name>Update</name>
			<type>void</type>
		</source>
	</element>
	<!--property::PivotTable.VacatedStyle-->
	<element type="property">
		<source id="Excel.PivotTable.VacatedStyle">
			<context kind="class">PivotTable</context>
			<name>VacatedStyle</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotTable.Value {Default}-->
	<element type="property">
		<source id="Excel.PivotTable.Value">
			<context kind="class">PivotTable</context>
			<name default="true">Value</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PivotTable.Version {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.Version">
			<context kind="class">PivotTable</context>
			<name>Version</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotTable.ViewCalculatedMembers-->
	<element type="property">
		<source id="Excel.PivotTable.ViewCalculatedMembers">
			<context kind="class">PivotTable</context>
			<name>ViewCalculatedMembers</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PivotTable.VisibleFields {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTable.VisibleFields">
			<context kind="class">PivotTable</context>
			<name>VisibleFields</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTable.VisualTotals-->
	<element type="property">
		<source id="Excel.PivotTable.VisualTotals">
			<context kind="class">PivotTable</context>
			<name>VisualTotals</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::PivotTables-->
	<element type="class">
		<source id="Excel.PivotTables">
			<name>PivotTables</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::PivotTables.Add-->
	<element type="method">
		<source id="Excel.PivotTables.Add">
			<context kind="class">PivotTables</context>
			<name>Add</name>
			<type>PivotTable</type>
			<parameter-list>
				<parameter>
					<type>PivotCache</type>
					<name>PivotCache</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>TableDestination</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TableName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReadData</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DefaultVersion</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTables.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTables.Application">
			<context kind="class">PivotTables</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PivotTables.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTables.Count">
			<context kind="class">PivotTables</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PivotTables.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTables.Creator">
			<context kind="class">PivotTables</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PivotTables.Item-->
	<element type="method">
		<source id="Excel.PivotTables.Item">
			<context kind="class">PivotTables</context>
			<name>Item</name>
			<type>PivotTable</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PivotTables.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PivotTables.Parent">
			<context kind="class">PivotTables</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::PlotArea-->
	<element type="class">
		<source id="Excel.PlotArea">
			<name>PlotArea</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::PlotArea.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PlotArea.Application">
			<context kind="class">PlotArea</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PlotArea.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.PlotArea.Border">
			<context kind="class">PlotArea</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::PlotArea.ClearFormats-->
	<element type="method">
		<source id="Excel.PlotArea.ClearFormats">
			<context kind="class">PlotArea</context>
			<name>ClearFormats</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PlotArea.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PlotArea.Creator">
			<context kind="class">PlotArea</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PlotArea.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.PlotArea.Fill">
			<context kind="class">PlotArea</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::PlotArea.Height-->
	<element type="property">
		<source id="Excel.PlotArea.Height">
			<context kind="class">PlotArea</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::PlotArea.InsideHeight {ReadOnly}-->
	<element type="property">
		<source id="Excel.PlotArea.InsideHeight">
			<context kind="class">PlotArea</context>
			<name>InsideHeight</name>
			<type>double</type>
		</source>
	</element>
	<!--property::PlotArea.InsideLeft {ReadOnly}-->
	<element type="property">
		<source id="Excel.PlotArea.InsideLeft">
			<context kind="class">PlotArea</context>
			<name>InsideLeft</name>
			<type>double</type>
		</source>
	</element>
	<!--property::PlotArea.InsideTop {ReadOnly}-->
	<element type="property">
		<source id="Excel.PlotArea.InsideTop">
			<context kind="class">PlotArea</context>
			<name>InsideTop</name>
			<type>double</type>
		</source>
	</element>
	<!--property::PlotArea.InsideWidth {ReadOnly}-->
	<element type="property">
		<source id="Excel.PlotArea.InsideWidth">
			<context kind="class">PlotArea</context>
			<name>InsideWidth</name>
			<type>double</type>
		</source>
	</element>
	<!--property::PlotArea.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.PlotArea.Interior">
			<context kind="class">PlotArea</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::PlotArea.Left-->
	<element type="property">
		<source id="Excel.PlotArea.Left">
			<context kind="class">PlotArea</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::PlotArea.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.PlotArea.Name">
			<context kind="class">PlotArea</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PlotArea.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PlotArea.Parent">
			<context kind="class">PlotArea</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::PlotArea.Select-->
	<element type="method">
		<source id="Excel.PlotArea.Select">
			<context kind="class">PlotArea</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PlotArea.Top-->
	<element type="property">
		<source id="Excel.PlotArea.Top">
			<context kind="class">PlotArea</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::PlotArea.Width-->
	<element type="property">
		<source id="Excel.PlotArea.Width">
			<context kind="class">PlotArea</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--Class::Point-->
	<element type="class">
		<source id="Excel.Point">
			<name>Point</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Point.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Point.Application">
			<context kind="class">Point</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Point.ApplyDataLabels-->
	<element type="method">
		<source id="Excel.Point.ApplyDataLabels">
			<context kind="class">Point</context>
			<name>ApplyDataLabels</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>LegendKey</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AutoText</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HasLeaderLines</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowSeriesName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowCategoryName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowValue</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowPercentage</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowBubbleSize</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Separator</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Point.ApplyPictToEnd-->
	<element type="property">
		<source id="Excel.Point.ApplyPictToEnd">
			<context kind="class">Point</context>
			<name>ApplyPictToEnd</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Point.ApplyPictToFront-->
	<element type="property">
		<source id="Excel.Point.ApplyPictToFront">
			<context kind="class">Point</context>
			<name>ApplyPictToFront</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Point.ApplyPictToSides-->
	<element type="property">
		<source id="Excel.Point.ApplyPictToSides">
			<context kind="class">Point</context>
			<name>ApplyPictToSides</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Point.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Point.Border">
			<context kind="class">Point</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::Point.ClearFormats-->
	<element type="method">
		<source id="Excel.Point.ClearFormats">
			<context kind="class">Point</context>
			<name>ClearFormats</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Point.Copy-->
	<element type="method">
		<source id="Excel.Point.Copy">
			<context kind="class">Point</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Point.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Point.Creator">
			<context kind="class">Point</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Point.DataLabel {ReadOnly}-->
	<element type="property">
		<source id="Excel.Point.DataLabel">
			<context kind="class">Point</context>
			<name>DataLabel</name>
			<type>DataLabel</type>
		</source>
	</element>
	<!--method::Point.Delete-->
	<element type="method">
		<source id="Excel.Point.Delete">
			<context kind="class">Point</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Point.Explosion-->
	<element type="property">
		<source id="Excel.Point.Explosion">
			<context kind="class">Point</context>
			<name>Explosion</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Point.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.Point.Fill">
			<context kind="class">Point</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::Point.HasDataLabel-->
	<element type="property">
		<source id="Excel.Point.HasDataLabel">
			<context kind="class">Point</context>
			<name>HasDataLabel</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Point.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Point.Interior">
			<context kind="class">Point</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::Point.InvertIfNegative-->
	<element type="property">
		<source id="Excel.Point.InvertIfNegative">
			<context kind="class">Point</context>
			<name>InvertIfNegative</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Point.MarkerBackgroundColor-->
	<element type="property">
		<source id="Excel.Point.MarkerBackgroundColor">
			<context kind="class">Point</context>
			<name>MarkerBackgroundColor</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Point.MarkerBackgroundColorIndex-->
	<element type="property">
		<source id="Excel.Point.MarkerBackgroundColorIndex">
			<context kind="class">Point</context>
			<name>MarkerBackgroundColorIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Point.MarkerForegroundColor-->
	<element type="property">
		<source id="Excel.Point.MarkerForegroundColor">
			<context kind="class">Point</context>
			<name>MarkerForegroundColor</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Point.MarkerForegroundColorIndex-->
	<element type="property">
		<source id="Excel.Point.MarkerForegroundColorIndex">
			<context kind="class">Point</context>
			<name>MarkerForegroundColorIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Point.MarkerSize-->
	<element type="property">
		<source id="Excel.Point.MarkerSize">
			<context kind="class">Point</context>
			<name>MarkerSize</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Point.MarkerStyle-->
	<element type="property">
		<source id="Excel.Point.MarkerStyle">
			<context kind="class">Point</context>
			<name>MarkerStyle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Point.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Point.Parent">
			<context kind="class">Point</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Point.Paste-->
	<element type="method">
		<source id="Excel.Point.Paste">
			<context kind="class">Point</context>
			<name>Paste</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Point.PictureType-->
	<element type="property">
		<source id="Excel.Point.PictureType">
			<context kind="class">Point</context>
			<name>PictureType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Point.PictureUnit-->
	<element type="property">
		<source id="Excel.Point.PictureUnit">
			<context kind="class">Point</context>
			<name>PictureUnit</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Point.SecondaryPlot-->
	<element type="property">
		<source id="Excel.Point.SecondaryPlot">
			<context kind="class">Point</context>
			<name>SecondaryPlot</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Point.Select-->
	<element type="method">
		<source id="Excel.Point.Select">
			<context kind="class">Point</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Point.Shadow-->
	<element type="property">
		<source id="Excel.Point.Shadow">
			<context kind="class">Point</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::Points-->
	<element type="class">
		<source id="Excel.Points">
			<name>Points</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Points.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Points.Application">
			<context kind="class">Points</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Points.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Points.Count">
			<context kind="class">Points</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Points.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Points.Creator">
			<context kind="class">Points</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Points.Item-->
	<element type="method">
		<source id="Excel.Points.Item">
			<context kind="class">Points</context>
			<name>Item</name>
			<type>Point</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Points.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Points.Parent">
			<context kind="class">Points</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Protection-->
	<element type="class">
		<source id="Excel.Protection">
			<name>Protection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Protection.AllowDeletingColumns {ReadOnly}-->
	<element type="property">
		<source id="Excel.Protection.AllowDeletingColumns">
			<context kind="class">Protection</context>
			<name>AllowDeletingColumns</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Protection.AllowDeletingRows {ReadOnly}-->
	<element type="property">
		<source id="Excel.Protection.AllowDeletingRows">
			<context kind="class">Protection</context>
			<name>AllowDeletingRows</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Protection.AllowEditRanges {ReadOnly}-->
	<element type="property">
		<source id="Excel.Protection.AllowEditRanges">
			<context kind="class">Protection</context>
			<name>AllowEditRanges</name>
			<type>AllowEditRanges</type>
		</source>
	</element>
	<!--property::Protection.AllowFiltering {ReadOnly}-->
	<element type="property">
		<source id="Excel.Protection.AllowFiltering">
			<context kind="class">Protection</context>
			<name>AllowFiltering</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Protection.AllowFormattingCells {ReadOnly}-->
	<element type="property">
		<source id="Excel.Protection.AllowFormattingCells">
			<context kind="class">Protection</context>
			<name>AllowFormattingCells</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Protection.AllowFormattingColumns {ReadOnly}-->
	<element type="property">
		<source id="Excel.Protection.AllowFormattingColumns">
			<context kind="class">Protection</context>
			<name>AllowFormattingColumns</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Protection.AllowFormattingRows {ReadOnly}-->
	<element type="property">
		<source id="Excel.Protection.AllowFormattingRows">
			<context kind="class">Protection</context>
			<name>AllowFormattingRows</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Protection.AllowInsertingColumns {ReadOnly}-->
	<element type="property">
		<source id="Excel.Protection.AllowInsertingColumns">
			<context kind="class">Protection</context>
			<name>AllowInsertingColumns</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Protection.AllowInsertingHyperlinks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Protection.AllowInsertingHyperlinks">
			<context kind="class">Protection</context>
			<name>AllowInsertingHyperlinks</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Protection.AllowInsertingRows {ReadOnly}-->
	<element type="property">
		<source id="Excel.Protection.AllowInsertingRows">
			<context kind="class">Protection</context>
			<name>AllowInsertingRows</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Protection.AllowSorting {ReadOnly}-->
	<element type="property">
		<source id="Excel.Protection.AllowSorting">
			<context kind="class">Protection</context>
			<name>AllowSorting</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Protection.AllowUsingPivotTables {ReadOnly}-->
	<element type="property">
		<source id="Excel.Protection.AllowUsingPivotTables">
			<context kind="class">Protection</context>
			<name>AllowUsingPivotTables</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::PublishObject-->
	<element type="class">
		<source id="Excel.PublishObject">
			<name>PublishObject</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::PublishObject.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PublishObject.Application">
			<context kind="class">PublishObject</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PublishObject.AutoRepublish-->
	<element type="property">
		<source id="Excel.PublishObject.AutoRepublish">
			<context kind="class">PublishObject</context>
			<name>AutoRepublish</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::PublishObject.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PublishObject.Creator">
			<context kind="class">PublishObject</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PublishObject.Delete-->
	<element type="method">
		<source id="Excel.PublishObject.Delete">
			<context kind="class">PublishObject</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::PublishObject.DivID {ReadOnly}-->
	<element type="property">
		<source id="Excel.PublishObject.DivID">
			<context kind="class">PublishObject</context>
			<name>DivID</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PublishObject.Filename-->
	<element type="property">
		<source id="Excel.PublishObject.Filename">
			<context kind="class">PublishObject</context>
			<name>Filename</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PublishObject.HtmlType-->
	<element type="property">
		<source id="Excel.PublishObject.HtmlType">
			<context kind="class">PublishObject</context>
			<name>HtmlType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PublishObject.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PublishObject.Parent">
			<context kind="class">PublishObject</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::PublishObject.Publish-->
	<element type="method">
		<source id="Excel.PublishObject.Publish">
			<context kind="class">PublishObject</context>
			<name>Publish</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Create</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PublishObject.Sheet {ReadOnly}-->
	<element type="property">
		<source id="Excel.PublishObject.Sheet">
			<context kind="class">PublishObject</context>
			<name>Sheet</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PublishObject.Source {ReadOnly}-->
	<element type="property">
		<source id="Excel.PublishObject.Source">
			<context kind="class">PublishObject</context>
			<name>Source</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PublishObject.SourceType {ReadOnly}-->
	<element type="property">
		<source id="Excel.PublishObject.SourceType">
			<context kind="class">PublishObject</context>
			<name>SourceType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PublishObject.Title-->
	<element type="property">
		<source id="Excel.PublishObject.Title">
			<context kind="class">PublishObject</context>
			<name>Title</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::PublishObjects-->
	<element type="class">
		<source id="Excel.PublishObjects">
			<name>PublishObjects</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::PublishObjects.Add-->
	<element type="method">
		<source id="Excel.PublishObjects.Add">
			<context kind="class">PublishObjects</context>
			<name>Add</name>
			<type>PublishObject</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>SourceType</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Sheet</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Source</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HtmlType</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DivID</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Title</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PublishObjects.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.PublishObjects.Application">
			<context kind="class">PublishObjects</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PublishObjects.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.PublishObjects.Count">
			<context kind="class">PublishObjects</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PublishObjects.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.PublishObjects.Creator">
			<context kind="class">PublishObjects</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::PublishObjects.Delete-->
	<element type="method">
		<source id="Excel.PublishObjects.Delete">
			<context kind="class">PublishObjects</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::PublishObjects.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.PublishObjects.Item">
			<context kind="class">PublishObjects</context>
			<name default="true">Item</name>
			<type>PublishObject</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PublishObjects.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.PublishObjects.Parent">
			<context kind="class">PublishObjects</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::PublishObjects.Publish-->
	<element type="method">
		<source id="Excel.PublishObjects.Publish">
			<context kind="class">PublishObjects</context>
			<name>Publish</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::QueryTable-->
	<element type="class">
		<source id="Excel.QueryTable">
			<name>QueryTable</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::QueryTable.AdjustColumnWidth-->
	<element type="property">
		<source id="Excel.QueryTable.AdjustColumnWidth">
			<context kind="class">QueryTable</context>
			<name>AdjustColumnWidth</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::QueryTable.AfterRefresh-->
	<element type="method">
		<source id="Excel.QueryTable.AfterRefresh">
			<context kind="class">QueryTable</context>
			<name>AfterRefresh</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>boolean</type>
					<name>Success</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::QueryTable.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTable.Application">
			<context kind="class">QueryTable</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::QueryTable.BackgroundQuery-->
	<element type="property">
		<source id="Excel.QueryTable.BackgroundQuery">
			<context kind="class">QueryTable</context>
			<name>BackgroundQuery</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::QueryTable.BeforeRefresh-->
	<element type="method">
		<source id="Excel.QueryTable.BeforeRefresh">
			<context kind="class">QueryTable</context>
			<name>BeforeRefresh</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::QueryTable.CancelRefresh-->
	<element type="method">
		<source id="Excel.QueryTable.CancelRefresh">
			<context kind="class">QueryTable</context>
			<name>CancelRefresh</name>
			<type>void</type>
		</source>
	</element>
	<!--property::QueryTable.CommandText-->
	<element type="property">
		<source id="Excel.QueryTable.CommandText">
			<context kind="class">QueryTable</context>
			<name>CommandText</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::QueryTable.CommandType-->
	<element type="property">
		<source id="Excel.QueryTable.CommandType">
			<context kind="class">QueryTable</context>
			<name>CommandType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::QueryTable.Connection-->
	<element type="property">
		<source id="Excel.QueryTable.Connection">
			<context kind="class">QueryTable</context>
			<name>Connection</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::QueryTable.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTable.Creator">
			<context kind="class">QueryTable</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::QueryTable.Delete-->
	<element type="method">
		<source id="Excel.QueryTable.Delete">
			<context kind="class">QueryTable</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::QueryTable.Destination {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTable.Destination">
			<context kind="class">QueryTable</context>
			<name>Destination</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::QueryTable.EditWebPage-->
	<element type="property">
		<source id="Excel.QueryTable.EditWebPage">
			<context kind="class">QueryTable</context>
			<name>EditWebPage</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::QueryTable.EnableEditing-->
	<element type="property">
		<source id="Excel.QueryTable.EnableEditing">
			<context kind="class">QueryTable</context>
			<name>EnableEditing</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.EnableRefresh-->
	<element type="property">
		<source id="Excel.QueryTable.EnableRefresh">
			<context kind="class">QueryTable</context>
			<name>EnableRefresh</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.FetchedRowOverflow {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTable.FetchedRowOverflow">
			<context kind="class">QueryTable</context>
			<name>FetchedRowOverflow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.FieldNames-->
	<element type="property">
		<source id="Excel.QueryTable.FieldNames">
			<context kind="class">QueryTable</context>
			<name>FieldNames</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.FillAdjacentFormulas-->
	<element type="property">
		<source id="Excel.QueryTable.FillAdjacentFormulas">
			<context kind="class">QueryTable</context>
			<name>FillAdjacentFormulas</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.HasAutoFormat-->
	<element type="property">
		<source id="Excel.QueryTable.HasAutoFormat">
			<context kind="class">QueryTable</context>
			<name>HasAutoFormat</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.ListObject {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTable.ListObject">
			<context kind="class">QueryTable</context>
			<name>ListObject</name>
			<type>ListObject</type>
		</source>
	</element>
	<!--property::QueryTable.MaintainConnection-->
	<element type="property">
		<source id="Excel.QueryTable.MaintainConnection">
			<context kind="class">QueryTable</context>
			<name>MaintainConnection</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.Name-->
	<element type="property">
		<source id="Excel.QueryTable.Name">
			<context kind="class">QueryTable</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::QueryTable.Parameters {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTable.Parameters">
			<context kind="class">QueryTable</context>
			<name>Parameters</name>
			<type>Parameters</type>
		</source>
	</element>
	<!--property::QueryTable.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTable.Parent">
			<context kind="class">QueryTable</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::QueryTable.PostText-->
	<element type="property">
		<source id="Excel.QueryTable.PostText">
			<context kind="class">QueryTable</context>
			<name>PostText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::QueryTable.PreserveColumnInfo-->
	<element type="property">
		<source id="Excel.QueryTable.PreserveColumnInfo">
			<context kind="class">QueryTable</context>
			<name>PreserveColumnInfo</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.PreserveFormatting-->
	<element type="property">
		<source id="Excel.QueryTable.PreserveFormatting">
			<context kind="class">QueryTable</context>
			<name>PreserveFormatting</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.QueryType {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTable.QueryType">
			<context kind="class">QueryTable</context>
			<name>QueryType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::QueryTable.Recordset {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTable.Recordset">
			<context kind="class">QueryTable</context>
			<name>Recordset</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::QueryTable.Refresh-->
	<element type="method">
		<source id="Excel.QueryTable.Refresh">
			<context kind="class">QueryTable</context>
			<name>Refresh</name>
			<type>boolean</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>BackgroundQuery</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::QueryTable.Refreshing {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTable.Refreshing">
			<context kind="class">QueryTable</context>
			<name>Refreshing</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.RefreshOnFileOpen-->
	<element type="property">
		<source id="Excel.QueryTable.RefreshOnFileOpen">
			<context kind="class">QueryTable</context>
			<name>RefreshOnFileOpen</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.RefreshPeriod-->
	<element type="property">
		<source id="Excel.QueryTable.RefreshPeriod">
			<context kind="class">QueryTable</context>
			<name>RefreshPeriod</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::QueryTable.RefreshStyle-->
	<element type="property">
		<source id="Excel.QueryTable.RefreshStyle">
			<context kind="class">QueryTable</context>
			<name>RefreshStyle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::QueryTable.ResetTimer-->
	<element type="method">
		<source id="Excel.QueryTable.ResetTimer">
			<context kind="class">QueryTable</context>
			<name>ResetTimer</name>
			<type>void</type>
		</source>
	</element>
	<!--property::QueryTable.ResultRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTable.ResultRange">
			<context kind="class">QueryTable</context>
			<name>ResultRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::QueryTable.RobustConnect-->
	<element type="property">
		<source id="Excel.QueryTable.RobustConnect">
			<context kind="class">QueryTable</context>
			<name>RobustConnect</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::QueryTable.RowNumbers-->
	<element type="property">
		<source id="Excel.QueryTable.RowNumbers">
			<context kind="class">QueryTable</context>
			<name>RowNumbers</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::QueryTable.SaveAsODC-->
	<element type="method">
		<source id="Excel.QueryTable.SaveAsODC">
			<context kind="class">QueryTable</context>
			<name>SaveAsODC</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>ODCFileName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Description</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Keywords</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::QueryTable.SaveData-->
	<element type="property">
		<source id="Excel.QueryTable.SaveData">
			<context kind="class">QueryTable</context>
			<name>SaveData</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.SavePassword-->
	<element type="property">
		<source id="Excel.QueryTable.SavePassword">
			<context kind="class">QueryTable</context>
			<name>SavePassword</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.SourceConnectionFile-->
	<element type="property">
		<source id="Excel.QueryTable.SourceConnectionFile">
			<context kind="class">QueryTable</context>
			<name>SourceConnectionFile</name>
			<type>String</type>
		</source>
	</element>
	<!--property::QueryTable.SourceDataFile-->
	<element type="property">
		<source id="Excel.QueryTable.SourceDataFile">
			<context kind="class">QueryTable</context>
			<name>SourceDataFile</name>
			<type>String</type>
		</source>
	</element>
	<!--property::QueryTable.Sql-->
	<element type="property">
		<source id="Excel.QueryTable.Sql">
			<context kind="class">QueryTable</context>
			<name>Sql</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::QueryTable.TablesOnlyFromHTML-->
	<element type="property">
		<source id="Excel.QueryTable.TablesOnlyFromHTML">
			<context kind="class">QueryTable</context>
			<name>TablesOnlyFromHTML</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileColumnDataTypes-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileColumnDataTypes">
			<context kind="class">QueryTable</context>
			<name>TextFileColumnDataTypes</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileCommaDelimiter-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileCommaDelimiter">
			<context kind="class">QueryTable</context>
			<name>TextFileCommaDelimiter</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileConsecutiveDelimiter-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileConsecutiveDelimiter">
			<context kind="class">QueryTable</context>
			<name>TextFileConsecutiveDelimiter</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileDecimalSeparator-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileDecimalSeparator">
			<context kind="class">QueryTable</context>
			<name>TextFileDecimalSeparator</name>
			<type>String</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileFixedColumnWidths-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileFixedColumnWidths">
			<context kind="class">QueryTable</context>
			<name>TextFileFixedColumnWidths</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileOtherDelimiter-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileOtherDelimiter">
			<context kind="class">QueryTable</context>
			<name>TextFileOtherDelimiter</name>
			<type>String</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileParseType-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileParseType">
			<context kind="class">QueryTable</context>
			<name>TextFileParseType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::QueryTable.TextFilePlatform-->
	<element type="property">
		<source id="Excel.QueryTable.TextFilePlatform">
			<context kind="class">QueryTable</context>
			<name>TextFilePlatform</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::QueryTable.TextFilePromptOnRefresh-->
	<element type="property">
		<source id="Excel.QueryTable.TextFilePromptOnRefresh">
			<context kind="class">QueryTable</context>
			<name>TextFilePromptOnRefresh</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileSemicolonDelimiter-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileSemicolonDelimiter">
			<context kind="class">QueryTable</context>
			<name>TextFileSemicolonDelimiter</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileSpaceDelimiter-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileSpaceDelimiter">
			<context kind="class">QueryTable</context>
			<name>TextFileSpaceDelimiter</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileStartRow-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileStartRow">
			<context kind="class">QueryTable</context>
			<name>TextFileStartRow</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileTabDelimiter-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileTabDelimiter">
			<context kind="class">QueryTable</context>
			<name>TextFileTabDelimiter</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileTextQualifier-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileTextQualifier">
			<context kind="class">QueryTable</context>
			<name>TextFileTextQualifier</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileThousandsSeparator-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileThousandsSeparator">
			<context kind="class">QueryTable</context>
			<name>TextFileThousandsSeparator</name>
			<type>String</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileTrailingMinusNumbers-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileTrailingMinusNumbers">
			<context kind="class">QueryTable</context>
			<name>TextFileTrailingMinusNumbers</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.TextFileVisualLayout-->
	<element type="property">
		<source id="Excel.QueryTable.TextFileVisualLayout">
			<context kind="class">QueryTable</context>
			<name>TextFileVisualLayout</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::QueryTable.WebConsecutiveDelimitersAsOne-->
	<element type="property">
		<source id="Excel.QueryTable.WebConsecutiveDelimitersAsOne">
			<context kind="class">QueryTable</context>
			<name>WebConsecutiveDelimitersAsOne</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.WebDisableDateRecognition-->
	<element type="property">
		<source id="Excel.QueryTable.WebDisableDateRecognition">
			<context kind="class">QueryTable</context>
			<name>WebDisableDateRecognition</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.WebDisableRedirections-->
	<element type="property">
		<source id="Excel.QueryTable.WebDisableRedirections">
			<context kind="class">QueryTable</context>
			<name>WebDisableRedirections</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.WebFormatting-->
	<element type="property">
		<source id="Excel.QueryTable.WebFormatting">
			<context kind="class">QueryTable</context>
			<name>WebFormatting</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::QueryTable.WebPreFormattedTextToColumns-->
	<element type="property">
		<source id="Excel.QueryTable.WebPreFormattedTextToColumns">
			<context kind="class">QueryTable</context>
			<name>WebPreFormattedTextToColumns</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.WebSelectionType-->
	<element type="property">
		<source id="Excel.QueryTable.WebSelectionType">
			<context kind="class">QueryTable</context>
			<name>WebSelectionType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::QueryTable.WebSingleBlockTextImport-->
	<element type="property">
		<source id="Excel.QueryTable.WebSingleBlockTextImport">
			<context kind="class">QueryTable</context>
			<name>WebSingleBlockTextImport</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::QueryTable.WebTables-->
	<element type="property">
		<source id="Excel.QueryTable.WebTables">
			<context kind="class">QueryTable</context>
			<name>WebTables</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::QueryTables-->
	<element type="class">
		<source id="Excel.QueryTables">
			<name>QueryTables</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::QueryTables.Add-->
	<element type="method">
		<source id="Excel.QueryTables.Add">
			<context kind="class">QueryTables</context>
			<name>Add</name>
			<type>QueryTable</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Connection</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Destination</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Sql</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::QueryTables.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTables.Application">
			<context kind="class">QueryTables</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::QueryTables.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTables.Count">
			<context kind="class">QueryTables</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::QueryTables.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTables.Creator">
			<context kind="class">QueryTables</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::QueryTables.Item-->
	<element type="method">
		<source id="Excel.QueryTables.Item">
			<context kind="class">QueryTables</context>
			<name>Item</name>
			<type>QueryTable</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::QueryTables.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.QueryTables.Parent">
			<context kind="class">QueryTables</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Range-->
	<element type="class">
		<source id="Excel.Range">
			<name>Range</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Range.Activate-->
	<element type="method">
		<source id="Excel.Range.Activate">
			<context kind="class">Range</context>
			<name>Activate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.AddComment-->
	<element type="method">
		<source id="Excel.Range.AddComment">
			<context kind="class">Range</context>
			<name>AddComment</name>
			<type>Comment</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Text</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.AddIndent-->
	<element type="property">
		<source id="Excel.Range.AddIndent">
			<context kind="class">Range</context>
			<name>AddIndent</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Address {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Address">
			<context kind="class">Range</context>
			<name>Address</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>RowAbsolute</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ColumnAbsolute</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>ReferenceStyle</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>External</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RelativeTo</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.AddressLocal {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.AddressLocal">
			<context kind="class">Range</context>
			<name>AddressLocal</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>RowAbsolute</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ColumnAbsolute</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>ReferenceStyle</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>External</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RelativeTo</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.AdvancedFilter-->
	<element type="method">
		<source id="Excel.Range.AdvancedFilter">
			<context kind="class">Range</context>
			<name>AdvancedFilter</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Action</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CriteriaRange</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CopyToRange</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Unique</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.AllowEdit {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.AllowEdit">
			<context kind="class">Range</context>
			<name>AllowEdit</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Range.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Application">
			<context kind="class">Range</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Range.ApplyNames-->
	<element type="method">
		<source id="Excel.Range.ApplyNames">
			<context kind="class">Range</context>
			<name>ApplyNames</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Names</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreRelativeAbsolute</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>UseRowColumnNames</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>OmitColumn</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>OmitRow</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Order</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AppendLast</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.ApplyOutlineStyles-->
	<element type="method">
		<source id="Excel.Range.ApplyOutlineStyles">
			<context kind="class">Range</context>
			<name>ApplyOutlineStyles</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Areas {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Areas">
			<context kind="class">Range</context>
			<name>Areas</name>
			<type>Areas</type>
		</source>
	</element>
	<!--method::Range.AutoComplete-->
	<element type="method">
		<source id="Excel.Range.AutoComplete">
			<context kind="class">Range</context>
			<name>AutoComplete</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>String</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.AutoFill-->
	<element type="method">
		<source id="Excel.Range.AutoFill">
			<context kind="class">Range</context>
			<name>AutoFill</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Destination</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.AutoFilter-->
	<element type="method">
		<source id="Excel.Range.AutoFilter">
			<context kind="class">Range</context>
			<name>AutoFilter</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Field</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Criteria1</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Operator</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Criteria2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>VisibleDropDown</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.AutoFit-->
	<element type="method">
		<source id="Excel.Range.AutoFit">
			<context kind="class">Range</context>
			<name>AutoFit</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.AutoFormat-->
	<element type="method">
		<source id="Excel.Range.AutoFormat">
			<context kind="class">Range</context>
			<name>AutoFormat</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Number</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Font</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Alignment</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Border</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Pattern</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Width</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.AutoOutline-->
	<element type="method">
		<source id="Excel.Range.AutoOutline">
			<context kind="class">Range</context>
			<name>AutoOutline</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.BorderAround-->
	<element type="method">
		<source id="Excel.Range.BorderAround">
			<context kind="class">Range</context>
			<name>BorderAround</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>LineStyle</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Weight</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>ColorIndex</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Color</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Borders {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Borders">
			<context kind="class">Range</context>
			<name>Borders</name>
			<type>Borders</type>
		</source>
	</element>
	<!--method::Range.Calculate-->
	<element type="method">
		<source id="Excel.Range.Calculate">
			<context kind="class">Range</context>
			<name>Calculate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Cells {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Cells">
			<context kind="class">Range</context>
			<name>Cells</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Range.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Characters">
			<context kind="class">Range</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.CheckSpelling-->
	<element type="method">
		<source id="Excel.Range.CheckSpelling">
			<context kind="class">Range</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.Clear-->
	<element type="method">
		<source id="Excel.Range.Clear">
			<context kind="class">Range</context>
			<name>Clear</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.ClearComments-->
	<element type="method">
		<source id="Excel.Range.ClearComments">
			<context kind="class">Range</context>
			<name>ClearComments</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Range.ClearContents-->
	<element type="method">
		<source id="Excel.Range.ClearContents">
			<context kind="class">Range</context>
			<name>ClearContents</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.ClearFormats-->
	<element type="method">
		<source id="Excel.Range.ClearFormats">
			<context kind="class">Range</context>
			<name>ClearFormats</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.ClearNotes-->
	<element type="method">
		<source id="Excel.Range.ClearNotes">
			<context kind="class">Range</context>
			<name>ClearNotes</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.ClearOutline-->
	<element type="method">
		<source id="Excel.Range.ClearOutline">
			<context kind="class">Range</context>
			<name>ClearOutline</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Column {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Column">
			<context kind="class">Range</context>
			<name>Column</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Range.ColumnDifferences-->
	<element type="method">
		<source id="Excel.Range.ColumnDifferences">
			<context kind="class">Range</context>
			<name>ColumnDifferences</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Comparison</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Columns {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Columns">
			<context kind="class">Range</context>
			<name>Columns</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Range.ColumnWidth-->
	<element type="property">
		<source id="Excel.Range.ColumnWidth">
			<context kind="class">Range</context>
			<name>ColumnWidth</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Comment {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Comment">
			<context kind="class">Range</context>
			<name>Comment</name>
			<type>Comment</type>
		</source>
	</element>
	<!--method::Range.Consolidate-->
	<element type="method">
		<source id="Excel.Range.Consolidate">
			<context kind="class">Range</context>
			<name>Consolidate</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Sources</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Function</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TopRow</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>LeftColumn</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CreateLinks</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.Copy-->
	<element type="method">
		<source id="Excel.Range.Copy">
			<context kind="class">Range</context>
			<name>Copy</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Destination</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.CopyFromRecordset-->
	<element type="method">
		<source id="Excel.Range.CopyFromRecordset">
			<context kind="class">Range</context>
			<name>CopyFromRecordset</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>IUnknown</type>
					<name>Data</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MaxRows</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MaxColumns</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.CopyPicture-->
	<element type="method">
		<source id="Excel.Range.CopyPicture">
			<context kind="class">Range</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Count">
			<context kind="class">Range</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Range.CreateNames-->
	<element type="method">
		<source id="Excel.Range.CreateNames">
			<context kind="class">Range</context>
			<name>CreateNames</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Top</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Left</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Bottom</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Right</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.CreatePublisher-->
	<element type="method">
		<source id="Excel.Range.CreatePublisher">
			<context kind="class">Range</context>
			<name>CreatePublisher</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Edition</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ContainsPICT</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ContainsBIFF</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ContainsRTF</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ContainsVALU</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Creator">
			<context kind="class">Range</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Range.CurrentArray {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.CurrentArray">
			<context kind="class">Range</context>
			<name>CurrentArray</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Range.CurrentRegion {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.CurrentRegion">
			<context kind="class">Range</context>
			<name>CurrentRegion</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Range.Cut-->
	<element type="method">
		<source id="Excel.Range.Cut">
			<context kind="class">Range</context>
			<name>Cut</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Destination</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.DataSeries-->
	<element type="method">
		<source id="Excel.Range.DataSeries">
			<context kind="class">Range</context>
			<name>DataSeries</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Rowcol</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Date</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Step</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Stop</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Trend</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.Delete-->
	<element type="method">
		<source id="Excel.Range.Delete">
			<context kind="class">Range</context>
			<name>Delete</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Shift</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Dependents {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Dependents">
			<context kind="class">Range</context>
			<name>Dependents</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Range.DialogBox-->
	<element type="method">
		<source id="Excel.Range.DialogBox">
			<context kind="class">Range</context>
			<name>DialogBox</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.DirectDependents {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.DirectDependents">
			<context kind="class">Range</context>
			<name>DirectDependents</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Range.DirectPrecedents {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.DirectPrecedents">
			<context kind="class">Range</context>
			<name>DirectPrecedents</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Range.Dirty-->
	<element type="method">
		<source id="Excel.Range.Dirty">
			<context kind="class">Range</context>
			<name>Dirty</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Range.EditionOptions-->
	<element type="method">
		<source id="Excel.Range.EditionOptions">
			<context kind="class">Range</context>
			<name>EditionOptions</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Option</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Name</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Reference</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>ChartSize</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.End {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.End">
			<context kind="class">Range</context>
			<name>End</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Direction</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.EntireColumn {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.EntireColumn">
			<context kind="class">Range</context>
			<name>EntireColumn</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Range.EntireRow {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.EntireRow">
			<context kind="class">Range</context>
			<name>EntireRow</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Range.Errors {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Errors">
			<context kind="class">Range</context>
			<name>Errors</name>
			<type>Errors</type>
		</source>
	</element>
	<!--method::Range.FillDown-->
	<element type="method">
		<source id="Excel.Range.FillDown">
			<context kind="class">Range</context>
			<name>FillDown</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.FillLeft-->
	<element type="method">
		<source id="Excel.Range.FillLeft">
			<context kind="class">Range</context>
			<name>FillLeft</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.FillRight-->
	<element type="method">
		<source id="Excel.Range.FillRight">
			<context kind="class">Range</context>
			<name>FillRight</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.FillUp-->
	<element type="method">
		<source id="Excel.Range.FillUp">
			<context kind="class">Range</context>
			<name>FillUp</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.Find-->
	<element type="method">
		<source id="Excel.Range.Find">
			<context kind="class">Range</context>
			<name>Find</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>What</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>LookIn</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>LookAt</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SearchOrder</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>SearchDirection</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MatchCase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MatchByte</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SearchFormat</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.FindNext-->
	<element type="method">
		<source id="Excel.Range.FindNext">
			<context kind="class">Range</context>
			<name>FindNext</name>
			<type>Range</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.FindPrevious-->
	<element type="method">
		<source id="Excel.Range.FindPrevious">
			<context kind="class">Range</context>
			<name>FindPrevious</name>
			<type>Range</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Font">
			<context kind="class">Range</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Range.FormatConditions {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.FormatConditions">
			<context kind="class">Range</context>
			<name>FormatConditions</name>
			<type>FormatConditions</type>
		</source>
	</element>
	<!--property::Range.Formula-->
	<element type="property">
		<source id="Excel.Range.Formula">
			<context kind="class">Range</context>
			<name>Formula</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.FormulaArray-->
	<element type="property">
		<source id="Excel.Range.FormulaArray">
			<context kind="class">Range</context>
			<name>FormulaArray</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.FormulaHidden-->
	<element type="property">
		<source id="Excel.Range.FormulaHidden">
			<context kind="class">Range</context>
			<name>FormulaHidden</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.FormulaLabel-->
	<element type="property">
		<source id="Excel.Range.FormulaLabel">
			<context kind="class">Range</context>
			<name>FormulaLabel</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Range.FormulaLocal-->
	<element type="property">
		<source id="Excel.Range.FormulaLocal">
			<context kind="class">Range</context>
			<name>FormulaLocal</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.FormulaR1C1-->
	<element type="property">
		<source id="Excel.Range.FormulaR1C1">
			<context kind="class">Range</context>
			<name>FormulaR1C1</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.FormulaR1C1Local-->
	<element type="property">
		<source id="Excel.Range.FormulaR1C1Local">
			<context kind="class">Range</context>
			<name>FormulaR1C1Local</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.FunctionWizard-->
	<element type="method">
		<source id="Excel.Range.FunctionWizard">
			<context kind="class">Range</context>
			<name>FunctionWizard</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.GoalSeek-->
	<element type="method">
		<source id="Excel.Range.GoalSeek">
			<context kind="class">Range</context>
			<name>GoalSeek</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Goal</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>ChangingCell</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.Group-->
	<element type="method">
		<source id="Excel.Range.Group">
			<context kind="class">Range</context>
			<name>Group</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>End</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>By</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Periods</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.HasArray {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.HasArray">
			<context kind="class">Range</context>
			<name>HasArray</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.HasFormula {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.HasFormula">
			<context kind="class">Range</context>
			<name>HasFormula</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Height {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Height">
			<context kind="class">Range</context>
			<name>Height</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Hidden-->
	<element type="property">
		<source id="Excel.Range.Hidden">
			<context kind="class">Range</context>
			<name>Hidden</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.Range.HorizontalAlignment">
			<context kind="class">Range</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Hyperlinks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Hyperlinks">
			<context kind="class">Range</context>
			<name>Hyperlinks</name>
			<type>Hyperlinks</type>
		</source>
	</element>
	<!--property::Range.ID-->
	<element type="property">
		<source id="Excel.Range.ID">
			<context kind="class">Range</context>
			<name>ID</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Range.IndentLevel-->
	<element type="property">
		<source id="Excel.Range.IndentLevel">
			<context kind="class">Range</context>
			<name>IndentLevel</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.Insert-->
	<element type="method">
		<source id="Excel.Range.Insert">
			<context kind="class">Range</context>
			<name>Insert</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Shift</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CopyOrigin</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.InsertIndent-->
	<element type="method">
		<source id="Excel.Range.InsertIndent">
			<context kind="class">Range</context>
			<name>InsertIndent</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>InsertAmount</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Interior">
			<context kind="class">Range</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::Range.Item {Default}(ADAPTED)-->
	<element type="property">
		<source id="Excel.Range.Item">
			<context kind="class">Range</context>
			<name default="true">Item</name>
			<type>Variant
			<choice>Range</choice></type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>RowIndex</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ColumnIndex</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.Justify-->
	<element type="method">
		<source id="Excel.Range.Justify">
			<context kind="class">Range</context>
			<name>Justify</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Left {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Left">
			<context kind="class">Range</context>
			<name>Left</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.ListHeaderRows {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.ListHeaderRows">
			<context kind="class">Range</context>
			<name>ListHeaderRows</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Range.ListNames-->
	<element type="method">
		<source id="Excel.Range.ListNames">
			<context kind="class">Range</context>
			<name>ListNames</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.ListObject {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.ListObject">
			<context kind="class">Range</context>
			<name>ListObject</name>
			<type>ListObject</type>
		</source>
	</element>
	<!--property::Range.LocationInTable {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.LocationInTable">
			<context kind="class">Range</context>
			<name>LocationInTable</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Range.Locked-->
	<element type="property">
		<source id="Excel.Range.Locked">
			<context kind="class">Range</context>
			<name>Locked</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.Merge-->
	<element type="method">
		<source id="Excel.Range.Merge">
			<context kind="class">Range</context>
			<name>Merge</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Across</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.MergeArea {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.MergeArea">
			<context kind="class">Range</context>
			<name>MergeArea</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Range.MergeCells-->
	<element type="property">
		<source id="Excel.Range.MergeCells">
			<context kind="class">Range</context>
			<name>MergeCells</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Name-->
	<element type="property">
		<source id="Excel.Range.Name">
			<context kind="class">Range</context>
			<name>Name</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.NavigateArrow-->
	<element type="method">
		<source id="Excel.Range.NavigateArrow">
			<context kind="class">Range</context>
			<name>NavigateArrow</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>TowardPrecedent</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ArrowNumber</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>LinkNumber</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Next {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Next">
			<context kind="class">Range</context>
			<name>Next</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Range.NoteText-->
	<element type="method">
		<source id="Excel.Range.NoteText">
			<context kind="class">Range</context>
			<name>NoteText</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Text</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.NumberFormat-->
	<element type="property">
		<source id="Excel.Range.NumberFormat">
			<context kind="class">Range</context>
			<name>NumberFormat</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.NumberFormatLocal-->
	<element type="property">
		<source id="Excel.Range.NumberFormatLocal">
			<context kind="class">Range</context>
			<name>NumberFormatLocal</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Offset {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Offset">
			<context kind="class">Range</context>
			<name>Offset</name>
			<type>Range</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>RowOffset</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ColumnOffset</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Orientation-->
	<element type="property">
		<source id="Excel.Range.Orientation">
			<context kind="class">Range</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.OutlineLevel-->
	<element type="property">
		<source id="Excel.Range.OutlineLevel">
			<context kind="class">Range</context>
			<name>OutlineLevel</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.PageBreak-->
	<element type="property">
		<source id="Excel.Range.PageBreak">
			<context kind="class">Range</context>
			<name>PageBreak</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Range.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Parent">
			<context kind="class">Range</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Range.Parse-->
	<element type="method">
		<source id="Excel.Range.Parse">
			<context kind="class">Range</context>
			<name>Parse</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>ParseLine</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Destination</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.PasteSpecial-->
	<element type="method">
		<source id="Excel.Range.PasteSpecial">
			<context kind="class">Range</context>
			<name>PasteSpecial</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Paste</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Operation</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SkipBlanks</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Transpose</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Phonetic {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Phonetic">
			<context kind="class">Range</context>
			<name>Phonetic</name>
			<type>Phonetic</type>
		</source>
	</element>
	<!--property::Range.Phonetics {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Phonetics">
			<context kind="class">Range</context>
			<name>Phonetics</name>
			<type>Phonetics</type>
		</source>
	</element>
	<!--property::Range.PivotCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.PivotCell">
			<context kind="class">Range</context>
			<name>PivotCell</name>
			<type>PivotCell</type>
		</source>
	</element>
	<!--property::Range.PivotField {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.PivotField">
			<context kind="class">Range</context>
			<name>PivotField</name>
			<type>PivotField</type>
		</source>
	</element>
	<!--property::Range.PivotItem {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.PivotItem">
			<context kind="class">Range</context>
			<name>PivotItem</name>
			<type>PivotItem</type>
		</source>
	</element>
	<!--property::Range.PivotTable {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.PivotTable">
			<context kind="class">Range</context>
			<name>PivotTable</name>
			<type>PivotTable</type>
		</source>
	</element>
	<!--property::Range.Precedents {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Precedents">
			<context kind="class">Range</context>
			<name>Precedents</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Range.PrefixCharacter {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.PrefixCharacter">
			<context kind="class">Range</context>
			<name>PrefixCharacter</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Previous {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Previous">
			<context kind="class">Range</context>
			<name>Previous</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Range.PrintOut-->
	<element type="method">
		<source id="Excel.Range.PrintOut">
			<context kind="class">Range</context>
			<name>PrintOut</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>From</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>To</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Copies</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Preview</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ActivePrinter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrintToFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Collate</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrToFileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.PrintPreview-->
	<element type="method">
		<source id="Excel.Range.PrintPreview">
			<context kind="class">Range</context>
			<name>PrintPreview</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>EnableChanges</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.QueryTable {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.QueryTable">
			<context kind="class">Range</context>
			<name>QueryTable</name>
			<type>QueryTable</type>
		</source>
	</element>
	<!--property::Range.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Range">
			<context kind="class">Range</context>
			<name>Range</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Cell1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Cell2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.ReadingOrder-->
	<element type="property">
		<source id="Excel.Range.ReadingOrder">
			<context kind="class">Range</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Range.RemoveSubtotal-->
	<element type="method">
		<source id="Excel.Range.RemoveSubtotal">
			<context kind="class">Range</context>
			<name>RemoveSubtotal</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.Replace-->
	<element type="method">
		<source id="Excel.Range.Replace">
			<context kind="class">Range</context>
			<name>Replace</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>What</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Replacement</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>LookAt</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SearchOrder</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MatchCase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MatchByte</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SearchFormat</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReplaceFormat</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Resize {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Resize">
			<context kind="class">Range</context>
			<name>Resize</name>
			<type>Range</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>RowSize</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ColumnSize</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Row {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Row">
			<context kind="class">Range</context>
			<name>Row</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Range.RowDifferences-->
	<element type="method">
		<source id="Excel.Range.RowDifferences">
			<context kind="class">Range</context>
			<name>RowDifferences</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Comparison</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.RowHeight-->
	<element type="property">
		<source id="Excel.Range.RowHeight">
			<context kind="class">Range</context>
			<name>RowHeight</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Rows {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Rows">
			<context kind="class">Range</context>
			<name>Rows</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Range.Run-->
	<element type="method">
		<source id="Excel.Range.Run">
			<context kind="class">Range</context>
			<name>Run</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.Select-->
	<element type="method">
		<source id="Excel.Range.Select">
			<context kind="class">Range</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.SetPhonetic-->
	<element type="method">
		<source id="Excel.Range.SetPhonetic">
			<context kind="class">Range</context>
			<name>SetPhonetic</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Range.Show-->
	<element type="method">
		<source id="Excel.Range.Show">
			<context kind="class">Range</context>
			<name>Show</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.ShowDependents-->
	<element type="method">
		<source id="Excel.Range.ShowDependents">
			<context kind="class">Range</context>
			<name>ShowDependents</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Remove</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.ShowDetail-->
	<element type="property">
		<source id="Excel.Range.ShowDetail">
			<context kind="class">Range</context>
			<name>ShowDetail</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.ShowErrors-->
	<element type="method">
		<source id="Excel.Range.ShowErrors">
			<context kind="class">Range</context>
			<name>ShowErrors</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.ShowPrecedents-->
	<element type="method">
		<source id="Excel.Range.ShowPrecedents">
			<context kind="class">Range</context>
			<name>ShowPrecedents</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Remove</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.ShrinkToFit-->
	<element type="property">
		<source id="Excel.Range.ShrinkToFit">
			<context kind="class">Range</context>
			<name>ShrinkToFit</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.SmartTags {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.SmartTags">
			<context kind="class">Range</context>
			<name>SmartTags</name>
			<type>SmartTags</type>
		</source>
	</element>
	<!--method::Range.Sort-->
	<element type="method">
		<source id="Excel.Range.Sort">
			<context kind="class">Range</context>
			<name>Sort</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Key1</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Order1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Key2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Order2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Key3</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Order3</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Header</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>OrderCustom</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MatchCase</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Orientation</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>SortMethod</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>DataOption1</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>DataOption2</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>DataOption3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.SortSpecial-->
	<element type="method">
		<source id="Excel.Range.SortSpecial">
			<context kind="class">Range</context>
			<name>SortSpecial</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>SortMethod</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Key1</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Order1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Key2</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Order2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Key3</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Order3</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Header</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>OrderCustom</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MatchCase</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Orientation</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>DataOption1</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>DataOption2</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>DataOption3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.SoundNote {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.SoundNote">
			<context kind="class">Range</context>
			<name>SoundNote</name>
			<type>SoundNote</type>
		</source>
	</element>
	<!--method::Range.Speak-->
	<element type="method">
		<source id="Excel.Range.Speak">
			<context kind="class">Range</context>
			<name>Speak</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpeakDirection</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpeakFormulas</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.SpecialCells-->
	<element type="method">
		<source id="Excel.Range.SpecialCells">
			<context kind="class">Range</context>
			<name>SpecialCells</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Value</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Style-->
	<element type="property">
		<source id="Excel.Range.Style">
			<context kind="class">Range</context>
			<name>Style</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.SubscribeTo-->
	<element type="method">
		<source id="Excel.Range.SubscribeTo">
			<context kind="class">Range</context>
			<name>SubscribeTo</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Edition</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Range.Subtotal-->
	<element type="method">
		<source id="Excel.Range.Subtotal">
			<context kind="class">Range</context>
			<name>Subtotal</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>GroupBy</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Function</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>TotalList</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PageBreaks</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>SummaryBelowData</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Summary {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Summary">
			<context kind="class">Range</context>
			<name>Summary</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.Table-->
	<element type="method">
		<source id="Excel.Range.Table">
			<context kind="class">Range</context>
			<name>Table</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>RowInput</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ColumnInput</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Text {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Text">
			<context kind="class">Range</context>
			<name>Text</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.TextToColumns-->
	<element type="method">
		<source id="Excel.Range.TextToColumns">
			<context kind="class">Range</context>
			<name>TextToColumns</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Destination</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>DataType</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>TextQualifier</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ConsecutiveDelimiter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Tab</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Semicolon</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Comma</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Space</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Other</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>OtherChar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>FieldInfo</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DecimalSeparator</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ThousandsSeparator</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TrailingMinusNumbers</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Top {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Top">
			<context kind="class">Range</context>
			<name>Top</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.Ungroup-->
	<element type="method">
		<source id="Excel.Range.Ungroup">
			<context kind="class">Range</context>
			<name>Ungroup</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Range.UnMerge-->
	<element type="method">
		<source id="Excel.Range.UnMerge">
			<context kind="class">Range</context>
			<name>UnMerge</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Range.UseStandardHeight-->
	<element type="property">
		<source id="Excel.Range.UseStandardHeight">
			<context kind="class">Range</context>
			<name>UseStandardHeight</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.UseStandardWidth-->
	<element type="property">
		<source id="Excel.Range.UseStandardWidth">
			<context kind="class">Range</context>
			<name>UseStandardWidth</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Validation {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Validation">
			<context kind="class">Range</context>
			<name>Validation</name>
			<type>Validation</type>
		</source>
	</element>
	<!--property::Range.Value-->
	<element type="property">
		<source id="Excel.Range.Value">
			<context kind="class">Range</context>
			<name>Value</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>RangeValueDataType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Range.Value2-->
	<element type="property">
		<source id="Excel.Range.Value2">
			<context kind="class">Range</context>
			<name>Value2</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.VerticalAlignment-->
	<element type="property">
		<source id="Excel.Range.VerticalAlignment">
			<context kind="class">Range</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Width {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Width">
			<context kind="class">Range</context>
			<name>Width</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.Worksheet {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.Worksheet">
			<context kind="class">Range</context>
			<name>Worksheet</name>
			<type>Worksheet</type>
		</source>
	</element>
	<!--property::Range.WrapText-->
	<element type="property">
		<source id="Excel.Range.WrapText">
			<context kind="class">Range</context>
			<name>WrapText</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Range.XPath {ReadOnly}-->
	<element type="property">
		<source id="Excel.Range.XPath">
			<context kind="class">Range</context>
			<name>XPath</name>
			<type>XPath</type>
		</source>
	</element>
	<!--Class::RecentFile-->
	<element type="class">
		<source id="Excel.RecentFile">
			<name>RecentFile</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::RecentFile.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.RecentFile.Application">
			<context kind="class">RecentFile</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::RecentFile.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.RecentFile.Creator">
			<context kind="class">RecentFile</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::RecentFile.Delete-->
	<element type="method">
		<source id="Excel.RecentFile.Delete">
			<context kind="class">RecentFile</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::RecentFile.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.RecentFile.Index">
			<context kind="class">RecentFile</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::RecentFile.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.RecentFile.Name">
			<context kind="class">RecentFile</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--method::RecentFile.Open-->
	<element type="method">
		<source id="Excel.RecentFile.Open">
			<context kind="class">RecentFile</context>
			<name>Open</name>
			<type>Workbook</type>
		</source>
	</element>
	<!--property::RecentFile.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.RecentFile.Parent">
			<context kind="class">RecentFile</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::RecentFile.Path {ReadOnly}-->
	<element type="property">
		<source id="Excel.RecentFile.Path">
			<context kind="class">RecentFile</context>
			<name>Path</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::RecentFiles-->
	<element type="class">
		<source id="Excel.RecentFiles">
			<name>RecentFiles</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::RecentFiles.Add-->
	<element type="method">
		<source id="Excel.RecentFiles.Add">
			<context kind="class">RecentFiles</context>
			<name>Add</name>
			<type>RecentFile</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::RecentFiles.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.RecentFiles.Application">
			<context kind="class">RecentFiles</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::RecentFiles.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.RecentFiles.Count">
			<context kind="class">RecentFiles</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::RecentFiles.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.RecentFiles.Creator">
			<context kind="class">RecentFiles</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::RecentFiles.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.RecentFiles.Item">
			<context kind="class">RecentFiles</context>
			<name default="true">Item</name>
			<type>RecentFile</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::RecentFiles.Maximum-->
	<element type="property">
		<source id="Excel.RecentFiles.Maximum">
			<context kind="class">RecentFiles</context>
			<name>Maximum</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::RecentFiles.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.RecentFiles.Parent">
			<context kind="class">RecentFiles</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Rectangle-->
	<element type="class">
		<source id="Excel.Rectangle">
			<name>Rectangle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Rectangle.AddIndent-->
	<element type="property">
		<source id="Excel.Rectangle.AddIndent">
			<context kind="class">Rectangle</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangle.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangle.Application">
			<context kind="class">Rectangle</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Rectangle.AutoScaleFont-->
	<element type="property">
		<source id="Excel.Rectangle.AutoScaleFont">
			<context kind="class">Rectangle</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangle.AutoSize-->
	<element type="property">
		<source id="Excel.Rectangle.AutoSize">
			<context kind="class">Rectangle</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangle.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangle.Border">
			<context kind="class">Rectangle</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::Rectangle.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangle.BottomRightCell">
			<context kind="class">Rectangle</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Rectangle.BringToFront-->
	<element type="method">
		<source id="Excel.Rectangle.BringToFront">
			<context kind="class">Rectangle</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangle.Caption-->
	<element type="property">
		<source id="Excel.Rectangle.Caption">
			<context kind="class">Rectangle</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Rectangle.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangle.Characters">
			<context kind="class">Rectangle</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Rectangle.CheckSpelling-->
	<element type="method">
		<source id="Excel.Rectangle.CheckSpelling">
			<context kind="class">Rectangle</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Rectangle.Copy-->
	<element type="method">
		<source id="Excel.Rectangle.Copy">
			<context kind="class">Rectangle</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Rectangle.CopyPicture-->
	<element type="method">
		<source id="Excel.Rectangle.CopyPicture">
			<context kind="class">Rectangle</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Rectangle.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangle.Creator">
			<context kind="class">Rectangle</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Rectangle.Cut-->
	<element type="method">
		<source id="Excel.Rectangle.Cut">
			<context kind="class">Rectangle</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Rectangle.Delete-->
	<element type="method">
		<source id="Excel.Rectangle.Delete">
			<context kind="class">Rectangle</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Rectangle.Duplicate-->
	<element type="method">
		<source id="Excel.Rectangle.Duplicate">
			<context kind="class">Rectangle</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Rectangle.Enabled-->
	<element type="property">
		<source id="Excel.Rectangle.Enabled">
			<context kind="class">Rectangle</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangle.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangle.Font">
			<context kind="class">Rectangle</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Rectangle.Formula-->
	<element type="property">
		<source id="Excel.Rectangle.Formula">
			<context kind="class">Rectangle</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Rectangle.Height-->
	<element type="property">
		<source id="Excel.Rectangle.Height">
			<context kind="class">Rectangle</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Rectangle.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.Rectangle.HorizontalAlignment">
			<context kind="class">Rectangle</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangle.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangle.Index">
			<context kind="class">Rectangle</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Rectangle.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangle.Interior">
			<context kind="class">Rectangle</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::Rectangle.Left-->
	<element type="property">
		<source id="Excel.Rectangle.Left">
			<context kind="class">Rectangle</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Rectangle.Locked-->
	<element type="property">
		<source id="Excel.Rectangle.Locked">
			<context kind="class">Rectangle</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangle.LockedText-->
	<element type="property">
		<source id="Excel.Rectangle.LockedText">
			<context kind="class">Rectangle</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangle.Name-->
	<element type="property">
		<source id="Excel.Rectangle.Name">
			<context kind="class">Rectangle</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Rectangle.OnAction-->
	<element type="property">
		<source id="Excel.Rectangle.OnAction">
			<context kind="class">Rectangle</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Rectangle.Orientation-->
	<element type="property">
		<source id="Excel.Rectangle.Orientation">
			<context kind="class">Rectangle</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangle.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangle.Parent">
			<context kind="class">Rectangle</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Rectangle.Placement-->
	<element type="property">
		<source id="Excel.Rectangle.Placement">
			<context kind="class">Rectangle</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangle.PrintObject-->
	<element type="property">
		<source id="Excel.Rectangle.PrintObject">
			<context kind="class">Rectangle</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangle.ReadingOrder-->
	<element type="property">
		<source id="Excel.Rectangle.ReadingOrder">
			<context kind="class">Rectangle</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Rectangle.RoundedCorners-->
	<element type="property">
		<source id="Excel.Rectangle.RoundedCorners">
			<context kind="class">Rectangle</context>
			<name>RoundedCorners</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Rectangle.Select-->
	<element type="method">
		<source id="Excel.Rectangle.Select">
			<context kind="class">Rectangle</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Rectangle.SendToBack-->
	<element type="method">
		<source id="Excel.Rectangle.SendToBack">
			<context kind="class">Rectangle</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangle.Shadow-->
	<element type="property">
		<source id="Excel.Rectangle.Shadow">
			<context kind="class">Rectangle</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangle.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangle.ShapeRange">
			<context kind="class">Rectangle</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Rectangle.Text-->
	<element type="property">
		<source id="Excel.Rectangle.Text">
			<context kind="class">Rectangle</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Rectangle.Top-->
	<element type="property">
		<source id="Excel.Rectangle.Top">
			<context kind="class">Rectangle</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Rectangle.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangle.TopLeftCell">
			<context kind="class">Rectangle</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Rectangle.VerticalAlignment-->
	<element type="property">
		<source id="Excel.Rectangle.VerticalAlignment">
			<context kind="class">Rectangle</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangle.Visible-->
	<element type="property">
		<source id="Excel.Rectangle.Visible">
			<context kind="class">Rectangle</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangle.Width-->
	<element type="property">
		<source id="Excel.Rectangle.Width">
			<context kind="class">Rectangle</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Rectangle.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangle.ZOrder">
			<context kind="class">Rectangle</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Rectangles-->
	<element type="class">
		<source id="Excel.Rectangles">
			<name>Rectangles</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Rectangles.Add-->
	<element type="method">
		<source id="Excel.Rectangles.Add">
			<context kind="class">Rectangles</context>
			<name>Add</name>
			<type>Rectangle</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Rectangles.AddIndent-->
	<element type="property">
		<source id="Excel.Rectangles.AddIndent">
			<context kind="class">Rectangles</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangles.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangles.Application">
			<context kind="class">Rectangles</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Rectangles.AutoScaleFont-->
	<element type="property">
		<source id="Excel.Rectangles.AutoScaleFont">
			<context kind="class">Rectangles</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangles.AutoSize-->
	<element type="property">
		<source id="Excel.Rectangles.AutoSize">
			<context kind="class">Rectangles</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangles.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangles.Border">
			<context kind="class">Rectangles</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::Rectangles.BringToFront-->
	<element type="method">
		<source id="Excel.Rectangles.BringToFront">
			<context kind="class">Rectangles</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangles.Caption-->
	<element type="property">
		<source id="Excel.Rectangles.Caption">
			<context kind="class">Rectangles</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Rectangles.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangles.Characters">
			<context kind="class">Rectangles</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Rectangles.CheckSpelling-->
	<element type="method">
		<source id="Excel.Rectangles.CheckSpelling">
			<context kind="class">Rectangles</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Rectangles.Copy-->
	<element type="method">
		<source id="Excel.Rectangles.Copy">
			<context kind="class">Rectangles</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Rectangles.CopyPicture-->
	<element type="method">
		<source id="Excel.Rectangles.CopyPicture">
			<context kind="class">Rectangles</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Rectangles.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangles.Count">
			<context kind="class">Rectangles</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Rectangles.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangles.Creator">
			<context kind="class">Rectangles</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Rectangles.Cut-->
	<element type="method">
		<source id="Excel.Rectangles.Cut">
			<context kind="class">Rectangles</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Rectangles.Delete-->
	<element type="method">
		<source id="Excel.Rectangles.Delete">
			<context kind="class">Rectangles</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Rectangles.Duplicate-->
	<element type="method">
		<source id="Excel.Rectangles.Duplicate">
			<context kind="class">Rectangles</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Rectangles.Enabled-->
	<element type="property">
		<source id="Excel.Rectangles.Enabled">
			<context kind="class">Rectangles</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangles.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangles.Font">
			<context kind="class">Rectangles</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Rectangles.Formula-->
	<element type="property">
		<source id="Excel.Rectangles.Formula">
			<context kind="class">Rectangles</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Rectangles.Group-->
	<element type="method">
		<source id="Excel.Rectangles.Group">
			<context kind="class">Rectangles</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::Rectangles.Height-->
	<element type="property">
		<source id="Excel.Rectangles.Height">
			<context kind="class">Rectangles</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Rectangles.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.Rectangles.HorizontalAlignment">
			<context kind="class">Rectangles</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangles.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangles.Interior">
			<context kind="class">Rectangles</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::Rectangles.Item-->
	<element type="method">
		<source id="Excel.Rectangles.Item">
			<context kind="class">Rectangles</context>
			<name>Item</name>
			<type>Rectangle</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Rectangles.Left-->
	<element type="property">
		<source id="Excel.Rectangles.Left">
			<context kind="class">Rectangles</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Rectangles.Locked-->
	<element type="property">
		<source id="Excel.Rectangles.Locked">
			<context kind="class">Rectangles</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangles.LockedText-->
	<element type="property">
		<source id="Excel.Rectangles.LockedText">
			<context kind="class">Rectangles</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangles.OnAction-->
	<element type="property">
		<source id="Excel.Rectangles.OnAction">
			<context kind="class">Rectangles</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Rectangles.Orientation-->
	<element type="property">
		<source id="Excel.Rectangles.Orientation">
			<context kind="class">Rectangles</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangles.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangles.Parent">
			<context kind="class">Rectangles</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Rectangles.Placement-->
	<element type="property">
		<source id="Excel.Rectangles.Placement">
			<context kind="class">Rectangles</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangles.PrintObject-->
	<element type="property">
		<source id="Excel.Rectangles.PrintObject">
			<context kind="class">Rectangles</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangles.ReadingOrder-->
	<element type="property">
		<source id="Excel.Rectangles.ReadingOrder">
			<context kind="class">Rectangles</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Rectangles.RoundedCorners-->
	<element type="property">
		<source id="Excel.Rectangles.RoundedCorners">
			<context kind="class">Rectangles</context>
			<name>RoundedCorners</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Rectangles.Select-->
	<element type="method">
		<source id="Excel.Rectangles.Select">
			<context kind="class">Rectangles</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Rectangles.SendToBack-->
	<element type="method">
		<source id="Excel.Rectangles.SendToBack">
			<context kind="class">Rectangles</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangles.Shadow-->
	<element type="property">
		<source id="Excel.Rectangles.Shadow">
			<context kind="class">Rectangles</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangles.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangles.ShapeRange">
			<context kind="class">Rectangles</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Rectangles.Text-->
	<element type="property">
		<source id="Excel.Rectangles.Text">
			<context kind="class">Rectangles</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Rectangles.Top-->
	<element type="property">
		<source id="Excel.Rectangles.Top">
			<context kind="class">Rectangles</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Rectangles.VerticalAlignment-->
	<element type="property">
		<source id="Excel.Rectangles.VerticalAlignment">
			<context kind="class">Rectangles</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Rectangles.Visible-->
	<element type="property">
		<source id="Excel.Rectangles.Visible">
			<context kind="class">Rectangles</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rectangles.Width-->
	<element type="property">
		<source id="Excel.Rectangles.Width">
			<context kind="class">Rectangles</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Rectangles.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Rectangles.ZOrder">
			<context kind="class">Rectangles</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::RoutingSlip-->
	<element type="class">
		<source id="Excel.RoutingSlip">
			<name>RoutingSlip</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::RoutingSlip.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.RoutingSlip.Application">
			<context kind="class">RoutingSlip</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::RoutingSlip.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.RoutingSlip.Creator">
			<context kind="class">RoutingSlip</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::RoutingSlip.Delivery-->
	<element type="property">
		<source id="Excel.RoutingSlip.Delivery">
			<context kind="class">RoutingSlip</context>
			<name>Delivery</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::RoutingSlip.Message-->
	<element type="property">
		<source id="Excel.RoutingSlip.Message">
			<context kind="class">RoutingSlip</context>
			<name>Message</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::RoutingSlip.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.RoutingSlip.Parent">
			<context kind="class">RoutingSlip</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::RoutingSlip.Recipients-->
	<element type="property">
		<source id="Excel.RoutingSlip.Recipients">
			<context kind="class">RoutingSlip</context>
			<name>Recipients</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::RoutingSlip.Reset-->
	<element type="method">
		<source id="Excel.RoutingSlip.Reset">
			<context kind="class">RoutingSlip</context>
			<name>Reset</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::RoutingSlip.ReturnWhenDone-->
	<element type="property">
		<source id="Excel.RoutingSlip.ReturnWhenDone">
			<context kind="class">RoutingSlip</context>
			<name>ReturnWhenDone</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::RoutingSlip.Status {ReadOnly}-->
	<element type="property">
		<source id="Excel.RoutingSlip.Status">
			<context kind="class">RoutingSlip</context>
			<name>Status</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::RoutingSlip.Subject-->
	<element type="property">
		<source id="Excel.RoutingSlip.Subject">
			<context kind="class">RoutingSlip</context>
			<name>Subject</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::RoutingSlip.TrackStatus-->
	<element type="property">
		<source id="Excel.RoutingSlip.TrackStatus">
			<context kind="class">RoutingSlip</context>
			<name>TrackStatus</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Rows.Count(INSERTED)-->
	<element type="property">
		<source id="Excel.Rows.Count">
			<context kind="class">Rows</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Rows.Delete(INSERTED)-->
	<element type="method">
		<source id="Excel.Rows.Delete">
			<context kind="class">Rows</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Rows.Select(INSERTED)-->
	<element type="method">
		<source id="Excel.Rows.Select">
			<context kind="class">Rows</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::RTD-->
	<element type="class">
		<source id="Excel.RTD">
			<name>RTD</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::RTD.RefreshData-->
	<element type="method">
		<source id="Excel.RTD.RefreshData">
			<context kind="class">RTD</context>
			<name>RefreshData</name>
			<type>void</type>
		</source>
	</element>
	<!--method::RTD.RestartServers-->
	<element type="method">
		<source id="Excel.RTD.RestartServers">
			<context kind="class">RTD</context>
			<name>RestartServers</name>
			<type>void</type>
		</source>
	</element>
	<!--property::RTD.ThrottleInterval-->
	<element type="property">
		<source id="Excel.RTD.ThrottleInterval">
			<context kind="class">RTD</context>
			<name>ThrottleInterval</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Scenario-->
	<element type="class">
		<source id="Excel.Scenario">
			<name>Scenario</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Scenario.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Scenario.Application">
			<context kind="class">Scenario</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Scenario.ChangeScenario-->
	<element type="method">
		<source id="Excel.Scenario.ChangeScenario">
			<context kind="class">Scenario</context>
			<name>ChangeScenario</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>ChangingCells</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Values</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Scenario.ChangingCells {ReadOnly}-->
	<element type="property">
		<source id="Excel.Scenario.ChangingCells">
			<context kind="class">Scenario</context>
			<name>ChangingCells</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Scenario.Comment-->
	<element type="property">
		<source id="Excel.Scenario.Comment">
			<context kind="class">Scenario</context>
			<name>Comment</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Scenario.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Scenario.Creator">
			<context kind="class">Scenario</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Scenario.Delete-->
	<element type="method">
		<source id="Excel.Scenario.Delete">
			<context kind="class">Scenario</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Scenario.Hidden-->
	<element type="property">
		<source id="Excel.Scenario.Hidden">
			<context kind="class">Scenario</context>
			<name>Hidden</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Scenario.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Scenario.Index">
			<context kind="class">Scenario</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Scenario.Locked-->
	<element type="property">
		<source id="Excel.Scenario.Locked">
			<context kind="class">Scenario</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Scenario.Name-->
	<element type="property">
		<source id="Excel.Scenario.Name">
			<context kind="class">Scenario</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Scenario.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Scenario.Parent">
			<context kind="class">Scenario</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Scenario.Show-->
	<element type="method">
		<source id="Excel.Scenario.Show">
			<context kind="class">Scenario</context>
			<name>Show</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Scenario.Values {ReadOnly}-->
	<element type="property">
		<source id="Excel.Scenario.Values">
			<context kind="class">Scenario</context>
			<name>Values</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::Scenarios-->
	<element type="class">
		<source id="Excel.Scenarios">
			<name>Scenarios</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Scenarios.Add-->
	<element type="method">
		<source id="Excel.Scenarios.Add">
			<context kind="class">Scenarios</context>
			<name>Add</name>
			<type>Scenario</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>ChangingCells</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Values</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Comment</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Locked</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Hidden</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Scenarios.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Scenarios.Application">
			<context kind="class">Scenarios</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Scenarios.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Scenarios.Count">
			<context kind="class">Scenarios</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Scenarios.CreateSummary-->
	<element type="method">
		<source id="Excel.Scenarios.CreateSummary">
			<context kind="class">Scenarios</context>
			<name>CreateSummary</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>ReportType</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ResultCells</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Scenarios.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Scenarios.Creator">
			<context kind="class">Scenarios</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Scenarios.Item-->
	<element type="method">
		<source id="Excel.Scenarios.Item">
			<context kind="class">Scenarios</context>
			<name>Item</name>
			<type>Scenario</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Scenarios.Merge-->
	<element type="method">
		<source id="Excel.Scenarios.Merge">
			<context kind="class">Scenarios</context>
			<name>Merge</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Source</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Scenarios.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Scenarios.Parent">
			<context kind="class">Scenarios</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::ScrollBar-->
	<element type="class">
		<source id="Excel.ScrollBar">
			<name>ScrollBar</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ScrollBar.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBar.Application">
			<context kind="class">ScrollBar</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ScrollBar.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBar.BottomRightCell">
			<context kind="class">ScrollBar</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::ScrollBar.BringToFront-->
	<element type="method">
		<source id="Excel.ScrollBar.BringToFront">
			<context kind="class">ScrollBar</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ScrollBar.Copy-->
	<element type="method">
		<source id="Excel.ScrollBar.Copy">
			<context kind="class">ScrollBar</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ScrollBar.CopyPicture-->
	<element type="method">
		<source id="Excel.ScrollBar.CopyPicture">
			<context kind="class">ScrollBar</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ScrollBar.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBar.Creator">
			<context kind="class">ScrollBar</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ScrollBar.Cut-->
	<element type="method">
		<source id="Excel.ScrollBar.Cut">
			<context kind="class">ScrollBar</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ScrollBar.Delete-->
	<element type="method">
		<source id="Excel.ScrollBar.Delete">
			<context kind="class">ScrollBar</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ScrollBar.Display3DShading-->
	<element type="property">
		<source id="Excel.ScrollBar.Display3DShading">
			<context kind="class">ScrollBar</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ScrollBar.Duplicate-->
	<element type="method">
		<source id="Excel.ScrollBar.Duplicate">
			<context kind="class">ScrollBar</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ScrollBar.Enabled-->
	<element type="property">
		<source id="Excel.ScrollBar.Enabled">
			<context kind="class">ScrollBar</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ScrollBar.Height-->
	<element type="property">
		<source id="Excel.ScrollBar.Height">
			<context kind="class">ScrollBar</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ScrollBar.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBar.Index">
			<context kind="class">ScrollBar</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScrollBar.LargeChange-->
	<element type="property">
		<source id="Excel.ScrollBar.LargeChange">
			<context kind="class">ScrollBar</context>
			<name>LargeChange</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScrollBar.Left-->
	<element type="property">
		<source id="Excel.ScrollBar.Left">
			<context kind="class">ScrollBar</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ScrollBar.LinkedCell-->
	<element type="property">
		<source id="Excel.ScrollBar.LinkedCell">
			<context kind="class">ScrollBar</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ScrollBar.Locked-->
	<element type="property">
		<source id="Excel.ScrollBar.Locked">
			<context kind="class">ScrollBar</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ScrollBar.Max-->
	<element type="property">
		<source id="Excel.ScrollBar.Max">
			<context kind="class">ScrollBar</context>
			<name>Max</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScrollBar.Min-->
	<element type="property">
		<source id="Excel.ScrollBar.Min">
			<context kind="class">ScrollBar</context>
			<name>Min</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScrollBar.Name-->
	<element type="property">
		<source id="Excel.ScrollBar.Name">
			<context kind="class">ScrollBar</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ScrollBar.OnAction-->
	<element type="property">
		<source id="Excel.ScrollBar.OnAction">
			<context kind="class">ScrollBar</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ScrollBar.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBar.Parent">
			<context kind="class">ScrollBar</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ScrollBar.Placement-->
	<element type="property">
		<source id="Excel.ScrollBar.Placement">
			<context kind="class">ScrollBar</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ScrollBar.PrintObject-->
	<element type="property">
		<source id="Excel.ScrollBar.PrintObject">
			<context kind="class">ScrollBar</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ScrollBar.Select-->
	<element type="method">
		<source id="Excel.ScrollBar.Select">
			<context kind="class">ScrollBar</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ScrollBar.SendToBack-->
	<element type="method">
		<source id="Excel.ScrollBar.SendToBack">
			<context kind="class">ScrollBar</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ScrollBar.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBar.ShapeRange">
			<context kind="class">ScrollBar</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::ScrollBar.SmallChange-->
	<element type="property">
		<source id="Excel.ScrollBar.SmallChange">
			<context kind="class">ScrollBar</context>
			<name>SmallChange</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScrollBar.Top-->
	<element type="property">
		<source id="Excel.ScrollBar.Top">
			<context kind="class">ScrollBar</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ScrollBar.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBar.TopLeftCell">
			<context kind="class">ScrollBar</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::ScrollBar.Value {Default}-->
	<element type="property">
		<source id="Excel.ScrollBar.Value">
			<context kind="class">ScrollBar</context>
			<name default="true">Value</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScrollBar.Visible-->
	<element type="property">
		<source id="Excel.ScrollBar.Visible">
			<context kind="class">ScrollBar</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ScrollBar.Width-->
	<element type="property">
		<source id="Excel.ScrollBar.Width">
			<context kind="class">ScrollBar</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ScrollBar.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBar.ZOrder">
			<context kind="class">ScrollBar</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ScrollBars-->
	<element type="class">
		<source id="Excel.ScrollBars">
			<name>ScrollBars</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ScrollBars.Add-->
	<element type="method">
		<source id="Excel.ScrollBars.Add">
			<context kind="class">ScrollBars</context>
			<name>Add</name>
			<type>ScrollBar</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ScrollBars.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBars.Application">
			<context kind="class">ScrollBars</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::ScrollBars.BringToFront-->
	<element type="method">
		<source id="Excel.ScrollBars.BringToFront">
			<context kind="class">ScrollBars</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ScrollBars.Copy-->
	<element type="method">
		<source id="Excel.ScrollBars.Copy">
			<context kind="class">ScrollBars</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ScrollBars.CopyPicture-->
	<element type="method">
		<source id="Excel.ScrollBars.CopyPicture">
			<context kind="class">ScrollBars</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ScrollBars.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBars.Count">
			<context kind="class">ScrollBars</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScrollBars.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBars.Creator">
			<context kind="class">ScrollBars</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ScrollBars.Cut-->
	<element type="method">
		<source id="Excel.ScrollBars.Cut">
			<context kind="class">ScrollBars</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::ScrollBars.Delete-->
	<element type="method">
		<source id="Excel.ScrollBars.Delete">
			<context kind="class">ScrollBars</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ScrollBars.Display3DShading-->
	<element type="property">
		<source id="Excel.ScrollBars.Display3DShading">
			<context kind="class">ScrollBars</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ScrollBars.Duplicate-->
	<element type="method">
		<source id="Excel.ScrollBars.Duplicate">
			<context kind="class">ScrollBars</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ScrollBars.Enabled-->
	<element type="property">
		<source id="Excel.ScrollBars.Enabled">
			<context kind="class">ScrollBars</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ScrollBars.Group-->
	<element type="method">
		<source id="Excel.ScrollBars.Group">
			<context kind="class">ScrollBars</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::ScrollBars.Height-->
	<element type="property">
		<source id="Excel.ScrollBars.Height">
			<context kind="class">ScrollBars</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--method::ScrollBars.Item-->
	<element type="method">
		<source id="Excel.ScrollBars.Item">
			<context kind="class">ScrollBars</context>
			<name>Item</name>
			<type>ScrollBar</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ScrollBars.LargeChange-->
	<element type="property">
		<source id="Excel.ScrollBars.LargeChange">
			<context kind="class">ScrollBars</context>
			<name>LargeChange</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScrollBars.Left-->
	<element type="property">
		<source id="Excel.ScrollBars.Left">
			<context kind="class">ScrollBars</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ScrollBars.LinkedCell-->
	<element type="property">
		<source id="Excel.ScrollBars.LinkedCell">
			<context kind="class">ScrollBars</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ScrollBars.Locked-->
	<element type="property">
		<source id="Excel.ScrollBars.Locked">
			<context kind="class">ScrollBars</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ScrollBars.Max-->
	<element type="property">
		<source id="Excel.ScrollBars.Max">
			<context kind="class">ScrollBars</context>
			<name>Max</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScrollBars.Min-->
	<element type="property">
		<source id="Excel.ScrollBars.Min">
			<context kind="class">ScrollBars</context>
			<name>Min</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScrollBars.OnAction-->
	<element type="property">
		<source id="Excel.ScrollBars.OnAction">
			<context kind="class">ScrollBars</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ScrollBars.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBars.Parent">
			<context kind="class">ScrollBars</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ScrollBars.Placement-->
	<element type="property">
		<source id="Excel.ScrollBars.Placement">
			<context kind="class">ScrollBars</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ScrollBars.PrintObject-->
	<element type="property">
		<source id="Excel.ScrollBars.PrintObject">
			<context kind="class">ScrollBars</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ScrollBars.Select-->
	<element type="method">
		<source id="Excel.ScrollBars.Select">
			<context kind="class">ScrollBars</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ScrollBars.SendToBack-->
	<element type="method">
		<source id="Excel.ScrollBars.SendToBack">
			<context kind="class">ScrollBars</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ScrollBars.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBars.ShapeRange">
			<context kind="class">ScrollBars</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::ScrollBars.SmallChange-->
	<element type="property">
		<source id="Excel.ScrollBars.SmallChange">
			<context kind="class">ScrollBars</context>
			<name>SmallChange</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScrollBars.Top-->
	<element type="property">
		<source id="Excel.ScrollBars.Top">
			<context kind="class">ScrollBars</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ScrollBars.Value {Default}-->
	<element type="property">
		<source id="Excel.ScrollBars.Value">
			<context kind="class">ScrollBars</context>
			<name default="true">Value</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScrollBars.Visible-->
	<element type="property">
		<source id="Excel.ScrollBars.Visible">
			<context kind="class">ScrollBars</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ScrollBars.Width-->
	<element type="property">
		<source id="Excel.ScrollBars.Width">
			<context kind="class">ScrollBars</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::ScrollBars.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.ScrollBars.ZOrder">
			<context kind="class">ScrollBars</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Series-->
	<element type="class">
		<source id="Excel.Series">
			<name>Series</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Series.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Series.Application">
			<context kind="class">Series</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Series.ApplyCustomType-->
	<element type="method">
		<source id="Excel.Series.ApplyCustomType">
			<context kind="class">Series</context>
			<name>ApplyCustomType</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>ChartType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Series.ApplyDataLabels-->
	<element type="method">
		<source id="Excel.Series.ApplyDataLabels">
			<context kind="class">Series</context>
			<name>ApplyDataLabels</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>LegendKey</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AutoText</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HasLeaderLines</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowSeriesName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowCategoryName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowValue</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowPercentage</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowBubbleSize</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Separator</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Series.ApplyPictToEnd-->
	<element type="property">
		<source id="Excel.Series.ApplyPictToEnd">
			<context kind="class">Series</context>
			<name>ApplyPictToEnd</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Series.ApplyPictToFront-->
	<element type="property">
		<source id="Excel.Series.ApplyPictToFront">
			<context kind="class">Series</context>
			<name>ApplyPictToFront</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Series.ApplyPictToSides-->
	<element type="property">
		<source id="Excel.Series.ApplyPictToSides">
			<context kind="class">Series</context>
			<name>ApplyPictToSides</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Series.AxisGroup-->
	<element type="property">
		<source id="Excel.Series.AxisGroup">
			<context kind="class">Series</context>
			<name>AxisGroup</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Series.BarShape-->
	<element type="property">
		<source id="Excel.Series.BarShape">
			<context kind="class">Series</context>
			<name>BarShape</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Series.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Series.Border">
			<context kind="class">Series</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::Series.BubbleSizes-->
	<element type="property">
		<source id="Excel.Series.BubbleSizes">
			<context kind="class">Series</context>
			<name>BubbleSizes</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Series.ChartType-->
	<element type="property">
		<source id="Excel.Series.ChartType">
			<context kind="class">Series</context>
			<name>ChartType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Series.ClearFormats-->
	<element type="method">
		<source id="Excel.Series.ClearFormats">
			<context kind="class">Series</context>
			<name>ClearFormats</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Series.Copy-->
	<element type="method">
		<source id="Excel.Series.Copy">
			<context kind="class">Series</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Series.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Series.Creator">
			<context kind="class">Series</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Series.DataLabels-->
	<element type="method">
		<source id="Excel.Series.DataLabels">
			<context kind="class">Series</context>
			<name>DataLabels</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Series.Delete-->
	<element type="method">
		<source id="Excel.Series.Delete">
			<context kind="class">Series</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Series.ErrorBar-->
	<element type="method">
		<source id="Excel.Series.ErrorBar">
			<context kind="class">Series</context>
			<name>ErrorBar</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Direction</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Include</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Amount</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MinusValues</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Series.ErrorBars {ReadOnly}-->
	<element type="property">
		<source id="Excel.Series.ErrorBars">
			<context kind="class">Series</context>
			<name>ErrorBars</name>
			<type>ErrorBars</type>
		</source>
	</element>
	<!--property::Series.Explosion-->
	<element type="property">
		<source id="Excel.Series.Explosion">
			<context kind="class">Series</context>
			<name>Explosion</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Series.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.Series.Fill">
			<context kind="class">Series</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::Series.Formula-->
	<element type="property">
		<source id="Excel.Series.Formula">
			<context kind="class">Series</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Series.FormulaLocal-->
	<element type="property">
		<source id="Excel.Series.FormulaLocal">
			<context kind="class">Series</context>
			<name>FormulaLocal</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Series.FormulaR1C1-->
	<element type="property">
		<source id="Excel.Series.FormulaR1C1">
			<context kind="class">Series</context>
			<name>FormulaR1C1</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Series.FormulaR1C1Local-->
	<element type="property">
		<source id="Excel.Series.FormulaR1C1Local">
			<context kind="class">Series</context>
			<name>FormulaR1C1Local</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Series.Has3DEffect-->
	<element type="property">
		<source id="Excel.Series.Has3DEffect">
			<context kind="class">Series</context>
			<name>Has3DEffect</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Series.HasDataLabels-->
	<element type="property">
		<source id="Excel.Series.HasDataLabels">
			<context kind="class">Series</context>
			<name>HasDataLabels</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Series.HasErrorBars-->
	<element type="property">
		<source id="Excel.Series.HasErrorBars">
			<context kind="class">Series</context>
			<name>HasErrorBars</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Series.HasLeaderLines-->
	<element type="property">
		<source id="Excel.Series.HasLeaderLines">
			<context kind="class">Series</context>
			<name>HasLeaderLines</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Series.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Series.Interior">
			<context kind="class">Series</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::Series.InvertIfNegative-->
	<element type="property">
		<source id="Excel.Series.InvertIfNegative">
			<context kind="class">Series</context>
			<name>InvertIfNegative</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Series.LeaderLines {ReadOnly}-->
	<element type="property">
		<source id="Excel.Series.LeaderLines">
			<context kind="class">Series</context>
			<name>LeaderLines</name>
			<type>LeaderLines</type>
		</source>
	</element>
	<!--property::Series.MarkerBackgroundColor-->
	<element type="property">
		<source id="Excel.Series.MarkerBackgroundColor">
			<context kind="class">Series</context>
			<name>MarkerBackgroundColor</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Series.MarkerBackgroundColorIndex-->
	<element type="property">
		<source id="Excel.Series.MarkerBackgroundColorIndex">
			<context kind="class">Series</context>
			<name>MarkerBackgroundColorIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Series.MarkerForegroundColor-->
	<element type="property">
		<source id="Excel.Series.MarkerForegroundColor">
			<context kind="class">Series</context>
			<name>MarkerForegroundColor</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Series.MarkerForegroundColorIndex-->
	<element type="property">
		<source id="Excel.Series.MarkerForegroundColorIndex">
			<context kind="class">Series</context>
			<name>MarkerForegroundColorIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Series.MarkerSize-->
	<element type="property">
		<source id="Excel.Series.MarkerSize">
			<context kind="class">Series</context>
			<name>MarkerSize</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Series.MarkerStyle-->
	<element type="property">
		<source id="Excel.Series.MarkerStyle">
			<context kind="class">Series</context>
			<name>MarkerStyle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Series.Name-->
	<element type="property">
		<source id="Excel.Series.Name">
			<context kind="class">Series</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Series.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Series.Parent">
			<context kind="class">Series</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Series.Paste-->
	<element type="method">
		<source id="Excel.Series.Paste">
			<context kind="class">Series</context>
			<name>Paste</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Series.PictureType-->
	<element type="property">
		<source id="Excel.Series.PictureType">
			<context kind="class">Series</context>
			<name>PictureType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Series.PictureUnit-->
	<element type="property">
		<source id="Excel.Series.PictureUnit">
			<context kind="class">Series</context>
			<name>PictureUnit</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Series.PlotOrder-->
	<element type="property">
		<source id="Excel.Series.PlotOrder">
			<context kind="class">Series</context>
			<name>PlotOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Series.Points-->
	<element type="method">
		<source id="Excel.Series.Points">
			<context kind="class">Series</context>
			<name>Points</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Series.Select-->
	<element type="method">
		<source id="Excel.Series.Select">
			<context kind="class">Series</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Series.Shadow-->
	<element type="property">
		<source id="Excel.Series.Shadow">
			<context kind="class">Series</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Series.Smooth-->
	<element type="property">
		<source id="Excel.Series.Smooth">
			<context kind="class">Series</context>
			<name>Smooth</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Series.Trendlines-->
	<element type="method">
		<source id="Excel.Series.Trendlines">
			<context kind="class">Series</context>
			<name>Trendlines</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Series.Type-->
	<element type="property">
		<source id="Excel.Series.Type">
			<context kind="class">Series</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Series.Values-->
	<element type="property">
		<source id="Excel.Series.Values">
			<context kind="class">Series</context>
			<name>Values</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Series.XValues-->
	<element type="property">
		<source id="Excel.Series.XValues">
			<context kind="class">Series</context>
			<name>XValues</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::SeriesCollection-->
	<element type="class">
		<source id="Excel.SeriesCollection">
			<name>SeriesCollection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::SeriesCollection.Add-->
	<element type="method">
		<source id="Excel.SeriesCollection.Add">
			<context kind="class">SeriesCollection</context>
			<name>Add</name>
			<type>Series</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Source</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Rowcol</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SeriesLabels</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CategoryLabels</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SeriesCollection.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.SeriesCollection.Application">
			<context kind="class">SeriesCollection</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SeriesCollection.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.SeriesCollection.Count">
			<context kind="class">SeriesCollection</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SeriesCollection.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.SeriesCollection.Creator">
			<context kind="class">SeriesCollection</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::SeriesCollection.Extend-->
	<element type="method">
		<source id="Excel.SeriesCollection.Extend">
			<context kind="class">SeriesCollection</context>
			<name>Extend</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Source</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Rowcol</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CategoryLabels</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::SeriesCollection.Item-->
	<element type="method">
		<source id="Excel.SeriesCollection.Item">
			<context kind="class">SeriesCollection</context>
			<name>Item</name>
			<type>Series</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::SeriesCollection.NewSeries-->
	<element type="method">
		<source id="Excel.SeriesCollection.NewSeries">
			<context kind="class">SeriesCollection</context>
			<name>NewSeries</name>
			<type>Series</type>
		</source>
	</element>
	<!--property::SeriesCollection.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.SeriesCollection.Parent">
			<context kind="class">SeriesCollection</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::SeriesCollection.Paste-->
	<element type="method">
		<source id="Excel.SeriesCollection.Paste">
			<context kind="class">SeriesCollection</context>
			<name>Paste</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Rowcol</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SeriesLabels</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CategoryLabels</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>NewSeries</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::SeriesLines-->
	<element type="class">
		<source id="Excel.SeriesLines">
			<name>SeriesLines</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SeriesLines.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.SeriesLines.Application">
			<context kind="class">SeriesLines</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SeriesLines.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.SeriesLines.Border">
			<context kind="class">SeriesLines</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::SeriesLines.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.SeriesLines.Creator">
			<context kind="class">SeriesLines</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::SeriesLines.Delete-->
	<element type="method">
		<source id="Excel.SeriesLines.Delete">
			<context kind="class">SeriesLines</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::SeriesLines.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.SeriesLines.Name">
			<context kind="class">SeriesLines</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SeriesLines.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.SeriesLines.Parent">
			<context kind="class">SeriesLines</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::SeriesLines.Select-->
	<element type="method">
		<source id="Excel.SeriesLines.Select">
			<context kind="class">SeriesLines</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::ShadowFormat-->
	<element type="class">
		<source id="Excel.ShadowFormat">
			<name>ShadowFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ShadowFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShadowFormat.Application">
			<context kind="class">ShadowFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ShadowFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShadowFormat.Creator">
			<context kind="class">ShadowFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShadowFormat.ForeColor-->
	<element type="property">
		<source id="Excel.ShadowFormat.ForeColor">
			<context kind="class">ShadowFormat</context>
			<name>ForeColor</name>
			<type>ColorFormat</type>
		</source>
	</element>
	<!--method::ShadowFormat.IncrementOffsetX-->
	<element type="method">
		<source id="Excel.ShadowFormat.IncrementOffsetX">
			<context kind="class">ShadowFormat</context>
			<name>IncrementOffsetX</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShadowFormat.IncrementOffsetY-->
	<element type="method">
		<source id="Excel.ShadowFormat.IncrementOffsetY">
			<context kind="class">ShadowFormat</context>
			<name>IncrementOffsetY</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ShadowFormat.Obscured-->
	<element type="property">
		<source id="Excel.ShadowFormat.Obscured">
			<context kind="class">ShadowFormat</context>
			<name>Obscured</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShadowFormat.OffsetX-->
	<element type="property">
		<source id="Excel.ShadowFormat.OffsetX">
			<context kind="class">ShadowFormat</context>
			<name>OffsetX</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::ShadowFormat.OffsetY-->
	<element type="property">
		<source id="Excel.ShadowFormat.OffsetY">
			<context kind="class">ShadowFormat</context>
			<name>OffsetY</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::ShadowFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShadowFormat.Parent">
			<context kind="class">ShadowFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ShadowFormat.Transparency-->
	<element type="property">
		<source id="Excel.ShadowFormat.Transparency">
			<context kind="class">ShadowFormat</context>
			<name>Transparency</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::ShadowFormat.Type-->
	<element type="property">
		<source id="Excel.ShadowFormat.Type">
			<context kind="class">ShadowFormat</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShadowFormat.Visible-->
	<element type="property">
		<source id="Excel.ShadowFormat.Visible">
			<context kind="class">ShadowFormat</context>
			<name>Visible</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Shape-->
	<element type="class">
		<source id="Excel.Shape">
			<name>Shape</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Shape.Adjustments {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Adjustments">
			<context kind="class">Shape</context>
			<name>Adjustments</name>
			<type>Adjustments</type>
		</source>
	</element>
	<!--property::Shape.AlternativeText-->
	<element type="property">
		<source id="Excel.Shape.AlternativeText">
			<context kind="class">Shape</context>
			<name>AlternativeText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Shape.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Application">
			<context kind="class">Shape</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Shape.Apply-->
	<element type="method">
		<source id="Excel.Shape.Apply">
			<context kind="class">Shape</context>
			<name>Apply</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Shape.AutoShapeType-->
	<element type="property">
		<source id="Excel.Shape.AutoShapeType">
			<context kind="class">Shape</context>
			<name>AutoShapeType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Shape.BlackWhiteMode-->
	<element type="property">
		<source id="Excel.Shape.BlackWhiteMode">
			<context kind="class">Shape</context>
			<name>BlackWhiteMode</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Shape.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.BottomRightCell">
			<context kind="class">Shape</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Shape.Callout {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Callout">
			<context kind="class">Shape</context>
			<name>Callout</name>
			<type>CalloutFormat</type>
		</source>
	</element>
	<!--method::Shape.CanvasCropBottom-->
	<element type="method">
		<source id="Excel.Shape.CanvasCropBottom">
			<context kind="class">Shape</context>
			<name>CanvasCropBottom</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shape.CanvasCropLeft-->
	<element type="method">
		<source id="Excel.Shape.CanvasCropLeft">
			<context kind="class">Shape</context>
			<name>CanvasCropLeft</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shape.CanvasCropRight-->
	<element type="method">
		<source id="Excel.Shape.CanvasCropRight">
			<context kind="class">Shape</context>
			<name>CanvasCropRight</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shape.CanvasCropTop-->
	<element type="method">
		<source id="Excel.Shape.CanvasCropTop">
			<context kind="class">Shape</context>
			<name>CanvasCropTop</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Shape.CanvasItems {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.CanvasItems">
			<context kind="class">Shape</context>
			<name>CanvasItems</name>
			<type>CanvasShapes</type>
		</source>
	</element>
	<!--property::Shape.Child {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Child">
			<context kind="class">Shape</context>
			<name>Child</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Shape.ConnectionSiteCount {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.ConnectionSiteCount">
			<context kind="class">Shape</context>
			<name>ConnectionSiteCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Shape.Connector {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Connector">
			<context kind="class">Shape</context>
			<name>Connector</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Shape.ConnectorFormat {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.ConnectorFormat">
			<context kind="class">Shape</context>
			<name>ConnectorFormat</name>
			<type>ConnectorFormat</type>
		</source>
	</element>
	<!--property::Shape.ControlFormat {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.ControlFormat">
			<context kind="class">Shape</context>
			<name>ControlFormat</name>
			<type>ControlFormat</type>
		</source>
	</element>
	<!--method::Shape.Copy-->
	<element type="method">
		<source id="Excel.Shape.Copy">
			<context kind="class">Shape</context>
			<name>Copy</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Shape.CopyPicture-->
	<element type="method">
		<source id="Excel.Shape.CopyPicture">
			<context kind="class">Shape</context>
			<name>CopyPicture</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Shape.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Creator">
			<context kind="class">Shape</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Shape.Cut-->
	<element type="method">
		<source id="Excel.Shape.Cut">
			<context kind="class">Shape</context>
			<name>Cut</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Shape.Delete-->
	<element type="method">
		<source id="Excel.Shape.Delete">
			<context kind="class">Shape</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Shape.Diagram {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Diagram">
			<context kind="class">Shape</context>
			<name>Diagram</name>
			<type>Diagram</type>
		</source>
	</element>
	<!--property::Shape.DiagramNode {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.DiagramNode">
			<context kind="class">Shape</context>
			<name>DiagramNode</name>
			<type>DiagramNode</type>
		</source>
	</element>
	<!--property::Shape.DrawingObject {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.DrawingObject">
			<context kind="class">Shape</context>
			<name>DrawingObject</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Shape.Duplicate-->
	<element type="method">
		<source id="Excel.Shape.Duplicate">
			<context kind="class">Shape</context>
			<name>Duplicate</name>
			<type>Shape</type>
		</source>
	</element>
	<!--property::Shape.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Fill">
			<context kind="class">Shape</context>
			<name>Fill</name>
			<type>FillFormat</type>
		</source>
	</element>
	<!--method::Shape.Flip-->
	<element type="method">
		<source id="Excel.Shape.Flip">
			<context kind="class">Shape</context>
			<name>Flip</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>FlipCmd</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Shape.FormControlType {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.FormControlType">
			<context kind="class">Shape</context>
			<name>FormControlType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Shape.GroupItems {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.GroupItems">
			<context kind="class">Shape</context>
			<name>GroupItems</name>
			<type>GroupShapes</type>
		</source>
	</element>
	<!--property::Shape.HasDiagram {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.HasDiagram">
			<context kind="class">Shape</context>
			<name>HasDiagram</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Shape.HasDiagramNode {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.HasDiagramNode">
			<context kind="class">Shape</context>
			<name>HasDiagramNode</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Shape.Height-->
	<element type="property">
		<source id="Excel.Shape.Height">
			<context kind="class">Shape</context>
			<name>Height</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::Shape.HorizontalFlip {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.HorizontalFlip">
			<context kind="class">Shape</context>
			<name>HorizontalFlip</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Shape.Hyperlink {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Hyperlink">
			<context kind="class">Shape</context>
			<name>Hyperlink</name>
			<type>Hyperlink</type>
		</source>
	</element>
	<!--property::Shape.ID {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.ID">
			<context kind="class">Shape</context>
			<name>ID</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Shape.IncrementLeft-->
	<element type="method">
		<source id="Excel.Shape.IncrementLeft">
			<context kind="class">Shape</context>
			<name>IncrementLeft</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shape.IncrementRotation-->
	<element type="method">
		<source id="Excel.Shape.IncrementRotation">
			<context kind="class">Shape</context>
			<name>IncrementRotation</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shape.IncrementTop-->
	<element type="method">
		<source id="Excel.Shape.IncrementTop">
			<context kind="class">Shape</context>
			<name>IncrementTop</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Shape.Left-->
	<element type="property">
		<source id="Excel.Shape.Left">
			<context kind="class">Shape</context>
			<name>Left</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::Shape.Line {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Line">
			<context kind="class">Shape</context>
			<name>Line</name>
			<type>LineFormat</type>
		</source>
	</element>
	<!--property::Shape.LinkFormat {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.LinkFormat">
			<context kind="class">Shape</context>
			<name>LinkFormat</name>
			<type>LinkFormat</type>
		</source>
	</element>
	<!--property::Shape.LockAspectRatio-->
	<element type="property">
		<source id="Excel.Shape.LockAspectRatio">
			<context kind="class">Shape</context>
			<name>LockAspectRatio</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Shape.Locked-->
	<element type="property">
		<source id="Excel.Shape.Locked">
			<context kind="class">Shape</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Shape.Name-->
	<element type="property">
		<source id="Excel.Shape.Name">
			<context kind="class">Shape</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Shape.Nodes {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Nodes">
			<context kind="class">Shape</context>
			<name>Nodes</name>
			<type>ShapeNodes</type>
		</source>
	</element>
	<!--property::Shape.OLEFormat {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.OLEFormat">
			<context kind="class">Shape</context>
			<name>OLEFormat</name>
			<type>OLEFormat</type>
		</source>
	</element>
	<!--property::Shape.OnAction-->
	<element type="property">
		<source id="Excel.Shape.OnAction">
			<context kind="class">Shape</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Shape.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Parent">
			<context kind="class">Shape</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Shape.ParentGroup {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.ParentGroup">
			<context kind="class">Shape</context>
			<name>ParentGroup</name>
			<type>Shape</type>
		</source>
	</element>
	<!--method::Shape.PickUp-->
	<element type="method">
		<source id="Excel.Shape.PickUp">
			<context kind="class">Shape</context>
			<name>PickUp</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Shape.PictureFormat {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.PictureFormat">
			<context kind="class">Shape</context>
			<name>PictureFormat</name>
			<type>PictureFormat</type>
		</source>
	</element>
	<!--property::Shape.Placement-->
	<element type="property">
		<source id="Excel.Shape.Placement">
			<context kind="class">Shape</context>
			<name>Placement</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Shape.RerouteConnections-->
	<element type="method">
		<source id="Excel.Shape.RerouteConnections">
			<context kind="class">Shape</context>
			<name>RerouteConnections</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Shape.Rotation-->
	<element type="property">
		<source id="Excel.Shape.Rotation">
			<context kind="class">Shape</context>
			<name>Rotation</name>
			<type>Single</type>
		</source>
	</element>
	<!--method::Shape.ScaleHeight-->
	<element type="method">
		<source id="Excel.Shape.ScaleHeight">
			<context kind="class">Shape</context>
			<name>ScaleHeight</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Factor</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>RelativeToOriginalSize</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Scale</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shape.ScaleWidth-->
	<element type="method">
		<source id="Excel.Shape.ScaleWidth">
			<context kind="class">Shape</context>
			<name>ScaleWidth</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Factor</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>RelativeToOriginalSize</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Scale</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Shape.Script {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Script">
			<context kind="class">Shape</context>
			<name>Script</name>
			<type>Script</type>
		</source>
	</element>
	<!--method::Shape.Select-->
	<element type="method">
		<source id="Excel.Shape.Select">
			<context kind="class">Shape</context>
			<name>Select</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shape.SetShapesDefaultProperties-->
	<element type="method">
		<source id="Excel.Shape.SetShapesDefaultProperties">
			<context kind="class">Shape</context>
			<name>SetShapesDefaultProperties</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Shape.Shadow {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Shadow">
			<context kind="class">Shape</context>
			<name>Shadow</name>
			<type>ShadowFormat</type>
		</source>
	</element>
	<!--property::Shape.TextEffect {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.TextEffect">
			<context kind="class">Shape</context>
			<name>TextEffect</name>
			<type>TextEffectFormat</type>
		</source>
	</element>
	<!--property::Shape.TextFrame {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.TextFrame">
			<context kind="class">Shape</context>
			<name>TextFrame</name>
			<type>TextFrame</type>
		</source>
	</element>
	<!--property::Shape.ThreeD {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.ThreeD">
			<context kind="class">Shape</context>
			<name>ThreeD</name>
			<type>ThreeDFormat</type>
		</source>
	</element>
	<!--property::Shape.Top-->
	<element type="property">
		<source id="Excel.Shape.Top">
			<context kind="class">Shape</context>
			<name>Top</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::Shape.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.TopLeftCell">
			<context kind="class">Shape</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Shape.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Type">
			<context kind="class">Shape</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Shape.Ungroup-->
	<element type="method">
		<source id="Excel.Shape.Ungroup">
			<context kind="class">Shape</context>
			<name>Ungroup</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Shape.VerticalFlip {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.VerticalFlip">
			<context kind="class">Shape</context>
			<name>VerticalFlip</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Shape.Vertices {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.Vertices">
			<context kind="class">Shape</context>
			<name>Vertices</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Shape.Visible-->
	<element type="property">
		<source id="Excel.Shape.Visible">
			<context kind="class">Shape</context>
			<name>Visible</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Shape.Width-->
	<element type="property">
		<source id="Excel.Shape.Width">
			<context kind="class">Shape</context>
			<name>Width</name>
			<type>Single</type>
		</source>
	</element>
	<!--method::Shape.ZOrder-->
	<element type="method">
		<source id="Excel.Shape.ZOrder">
			<context kind="class">Shape</context>
			<name>ZOrder</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>ZOrderCmd</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Shape.ZOrderPosition {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shape.ZOrderPosition">
			<context kind="class">Shape</context>
			<name>ZOrderPosition</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ShapeNode-->
	<element type="class">
		<source id="Excel.ShapeNode">
			<name>ShapeNode</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ShapeNode.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeNode.Application">
			<context kind="class">ShapeNode</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ShapeNode.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeNode.Creator">
			<context kind="class">ShapeNode</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeNode.EditingType {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeNode.EditingType">
			<context kind="class">ShapeNode</context>
			<name>EditingType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeNode.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeNode.Parent">
			<context kind="class">ShapeNode</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ShapeNode.Points {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeNode.Points">
			<context kind="class">ShapeNode</context>
			<name>Points</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ShapeNode.SegmentType {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeNode.SegmentType">
			<context kind="class">ShapeNode</context>
			<name>SegmentType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ShapeNodes-->
	<element type="class">
		<source id="Excel.ShapeNodes">
			<name>ShapeNodes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ShapeNodes.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeNodes.Application">
			<context kind="class">ShapeNodes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ShapeNodes.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeNodes.Count">
			<context kind="class">ShapeNodes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeNodes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeNodes.Creator">
			<context kind="class">ShapeNodes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ShapeNodes.Delete-->
	<element type="method">
		<source id="Excel.ShapeNodes.Delete">
			<context kind="class">ShapeNodes</context>
			<name>Delete</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeNodes.Insert-->
	<element type="method">
		<source id="Excel.ShapeNodes.Insert">
			<context kind="class">ShapeNodes</context>
			<name>Insert</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>SegmentType</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>EditingType</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>X1</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Y1</name>
				</parameter>
				<parameter optional="true">
					<type>Single</type>
					<name>X2</name>
				</parameter>
				<parameter optional="true">
					<type>Single</type>
					<name>Y2</name>
				</parameter>
				<parameter optional="true">
					<type>Single</type>
					<name>X3</name>
				</parameter>
				<parameter optional="true">
					<type>Single</type>
					<name>Y3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeNodes.Item {Default}-->
	<element type="method">
		<source id="Excel.ShapeNodes.Item">
			<context kind="class">ShapeNodes</context>
			<name default="true">Item</name>
			<type>ShapeNode</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ShapeNodes.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeNodes.Parent">
			<context kind="class">ShapeNodes</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::ShapeNodes.SetEditingType-->
	<element type="method">
		<source id="Excel.ShapeNodes.SetEditingType">
			<context kind="class">ShapeNodes</context>
			<name>SetEditingType</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>EditingType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeNodes.SetPosition-->
	<element type="method">
		<source id="Excel.ShapeNodes.SetPosition">
			<context kind="class">ShapeNodes</context>
			<name>SetPosition</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>X1</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Y1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeNodes.SetSegmentType-->
	<element type="method">
		<source id="Excel.ShapeNodes.SetSegmentType">
			<context kind="class">ShapeNodes</context>
			<name>SetSegmentType</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>SegmentType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::ShapeRange-->
	<element type="class">
		<source id="Excel.ShapeRange">
			<name>ShapeRange</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ShapeRange.Adjustments {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Adjustments">
			<context kind="class">ShapeRange</context>
			<name>Adjustments</name>
			<type>Adjustments</type>
		</source>
	</element>
	<!--method::ShapeRange.Align-->
	<element type="method">
		<source id="Excel.ShapeRange.Align">
			<context kind="class">ShapeRange</context>
			<name>Align</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>AlignCmd</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>RelativeTo</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ShapeRange.AlternativeText-->
	<element type="property">
		<source id="Excel.ShapeRange.AlternativeText">
			<context kind="class">ShapeRange</context>
			<name>AlternativeText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ShapeRange.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Application">
			<context kind="class">ShapeRange</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::ShapeRange.Apply-->
	<element type="method">
		<source id="Excel.ShapeRange.Apply">
			<context kind="class">ShapeRange</context>
			<name>Apply</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ShapeRange.AutoShapeType-->
	<element type="property">
		<source id="Excel.ShapeRange.AutoShapeType">
			<context kind="class">ShapeRange</context>
			<name>AutoShapeType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.BlackWhiteMode-->
	<element type="property">
		<source id="Excel.ShapeRange.BlackWhiteMode">
			<context kind="class">ShapeRange</context>
			<name>BlackWhiteMode</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.Callout {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Callout">
			<context kind="class">ShapeRange</context>
			<name>Callout</name>
			<type>CalloutFormat</type>
		</source>
	</element>
	<!--method::ShapeRange.CanvasCropBottom-->
	<element type="method">
		<source id="Excel.ShapeRange.CanvasCropBottom">
			<context kind="class">ShapeRange</context>
			<name>CanvasCropBottom</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeRange.CanvasCropLeft-->
	<element type="method">
		<source id="Excel.ShapeRange.CanvasCropLeft">
			<context kind="class">ShapeRange</context>
			<name>CanvasCropLeft</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeRange.CanvasCropRight-->
	<element type="method">
		<source id="Excel.ShapeRange.CanvasCropRight">
			<context kind="class">ShapeRange</context>
			<name>CanvasCropRight</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeRange.CanvasCropTop-->
	<element type="method">
		<source id="Excel.ShapeRange.CanvasCropTop">
			<context kind="class">ShapeRange</context>
			<name>CanvasCropTop</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ShapeRange.CanvasItems {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.CanvasItems">
			<context kind="class">ShapeRange</context>
			<name>CanvasItems</name>
			<type>CanvasShapes</type>
		</source>
	</element>
	<!--property::ShapeRange.Child {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Child">
			<context kind="class">ShapeRange</context>
			<name>Child</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.ConnectionSiteCount {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.ConnectionSiteCount">
			<context kind="class">ShapeRange</context>
			<name>ConnectionSiteCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.Connector {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Connector">
			<context kind="class">ShapeRange</context>
			<name>Connector</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.ConnectorFormat {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.ConnectorFormat">
			<context kind="class">ShapeRange</context>
			<name>ConnectorFormat</name>
			<type>ConnectorFormat</type>
		</source>
	</element>
	<!--property::ShapeRange.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Count">
			<context kind="class">ShapeRange</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Creator">
			<context kind="class">ShapeRange</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ShapeRange.Delete-->
	<element type="method">
		<source id="Excel.ShapeRange.Delete">
			<context kind="class">ShapeRange</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ShapeRange.Diagram {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Diagram">
			<context kind="class">ShapeRange</context>
			<name>Diagram</name>
			<type>Diagram</type>
		</source>
	</element>
	<!--property::ShapeRange.DiagramNode {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.DiagramNode">
			<context kind="class">ShapeRange</context>
			<name>DiagramNode</name>
			<type>DiagramNode</type>
		</source>
	</element>
	<!--method::ShapeRange.Distribute-->
	<element type="method">
		<source id="Excel.ShapeRange.Distribute">
			<context kind="class">ShapeRange</context>
			<name>Distribute</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>DistributeCmd</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>RelativeTo</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeRange.Duplicate-->
	<element type="method">
		<source id="Excel.ShapeRange.Duplicate">
			<context kind="class">ShapeRange</context>
			<name>Duplicate</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::ShapeRange.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Fill">
			<context kind="class">ShapeRange</context>
			<name>Fill</name>
			<type>FillFormat</type>
		</source>
	</element>
	<!--method::ShapeRange.Flip-->
	<element type="method">
		<source id="Excel.ShapeRange.Flip">
			<context kind="class">ShapeRange</context>
			<name>Flip</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>FlipCmd</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeRange.Group-->
	<element type="method">
		<source id="Excel.ShapeRange.Group">
			<context kind="class">ShapeRange</context>
			<name>Group</name>
			<type>Shape</type>
		</source>
	</element>
	<!--property::ShapeRange.GroupItems {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.GroupItems">
			<context kind="class">ShapeRange</context>
			<name>GroupItems</name>
			<type>GroupShapes</type>
		</source>
	</element>
	<!--property::ShapeRange.HasDiagram {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.HasDiagram">
			<context kind="class">ShapeRange</context>
			<name>HasDiagram</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.HasDiagramNode {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.HasDiagramNode">
			<context kind="class">ShapeRange</context>
			<name>HasDiagramNode</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.Height-->
	<element type="property">
		<source id="Excel.ShapeRange.Height">
			<context kind="class">ShapeRange</context>
			<name>Height</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::ShapeRange.HorizontalFlip {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.HorizontalFlip">
			<context kind="class">ShapeRange</context>
			<name>HorizontalFlip</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.ID {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.ID">
			<context kind="class">ShapeRange</context>
			<name>ID</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ShapeRange.IncrementLeft-->
	<element type="method">
		<source id="Excel.ShapeRange.IncrementLeft">
			<context kind="class">ShapeRange</context>
			<name>IncrementLeft</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeRange.IncrementRotation-->
	<element type="method">
		<source id="Excel.ShapeRange.IncrementRotation">
			<context kind="class">ShapeRange</context>
			<name>IncrementRotation</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeRange.IncrementTop-->
	<element type="method">
		<source id="Excel.ShapeRange.IncrementTop">
			<context kind="class">ShapeRange</context>
			<name>IncrementTop</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeRange.Item {Default}-->
	<element type="method">
		<source id="Excel.ShapeRange.Item">
			<context kind="class">ShapeRange</context>
			<name default="true">Item</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ShapeRange.Left-->
	<element type="property">
		<source id="Excel.ShapeRange.Left">
			<context kind="class">ShapeRange</context>
			<name>Left</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::ShapeRange.Line {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Line">
			<context kind="class">ShapeRange</context>
			<name>Line</name>
			<type>LineFormat</type>
		</source>
	</element>
	<!--property::ShapeRange.LockAspectRatio-->
	<element type="property">
		<source id="Excel.ShapeRange.LockAspectRatio">
			<context kind="class">ShapeRange</context>
			<name>LockAspectRatio</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.Name-->
	<element type="property">
		<source id="Excel.ShapeRange.Name">
			<context kind="class">ShapeRange</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ShapeRange.Nodes {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Nodes">
			<context kind="class">ShapeRange</context>
			<name>Nodes</name>
			<type>ShapeNodes</type>
		</source>
	</element>
	<!--property::ShapeRange.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Parent">
			<context kind="class">ShapeRange</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ShapeRange.ParentGroup {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.ParentGroup">
			<context kind="class">ShapeRange</context>
			<name>ParentGroup</name>
			<type>Shape</type>
		</source>
	</element>
	<!--method::ShapeRange.PickUp-->
	<element type="method">
		<source id="Excel.ShapeRange.PickUp">
			<context kind="class">ShapeRange</context>
			<name>PickUp</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ShapeRange.PictureFormat {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.PictureFormat">
			<context kind="class">ShapeRange</context>
			<name>PictureFormat</name>
			<type>PictureFormat</type>
		</source>
	</element>
	<!--method::ShapeRange.Regroup-->
	<element type="method">
		<source id="Excel.ShapeRange.Regroup">
			<context kind="class">ShapeRange</context>
			<name>Regroup</name>
			<type>Shape</type>
		</source>
	</element>
	<!--method::ShapeRange.RerouteConnections-->
	<element type="method">
		<source id="Excel.ShapeRange.RerouteConnections">
			<context kind="class">ShapeRange</context>
			<name>RerouteConnections</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ShapeRange.Rotation-->
	<element type="property">
		<source id="Excel.ShapeRange.Rotation">
			<context kind="class">ShapeRange</context>
			<name>Rotation</name>
			<type>Single</type>
		</source>
	</element>
	<!--method::ShapeRange.ScaleHeight-->
	<element type="method">
		<source id="Excel.ShapeRange.ScaleHeight">
			<context kind="class">ShapeRange</context>
			<name>ScaleHeight</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Factor</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>RelativeToOriginalSize</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Scale</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeRange.ScaleWidth-->
	<element type="method">
		<source id="Excel.ShapeRange.ScaleWidth">
			<context kind="class">ShapeRange</context>
			<name>ScaleWidth</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Factor</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>RelativeToOriginalSize</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Scale</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeRange.Select-->
	<element type="method">
		<source id="Excel.ShapeRange.Select">
			<context kind="class">ShapeRange</context>
			<name>Select</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ShapeRange.SetShapesDefaultProperties-->
	<element type="method">
		<source id="Excel.ShapeRange.SetShapesDefaultProperties">
			<context kind="class">ShapeRange</context>
			<name>SetShapesDefaultProperties</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ShapeRange.Shadow {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Shadow">
			<context kind="class">ShapeRange</context>
			<name>Shadow</name>
			<type>ShadowFormat</type>
		</source>
	</element>
	<!--property::ShapeRange.TextEffect {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.TextEffect">
			<context kind="class">ShapeRange</context>
			<name>TextEffect</name>
			<type>TextEffectFormat</type>
		</source>
	</element>
	<!--property::ShapeRange.TextFrame {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.TextFrame">
			<context kind="class">ShapeRange</context>
			<name>TextFrame</name>
			<type>TextFrame</type>
		</source>
	</element>
	<!--property::ShapeRange.ThreeD {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.ThreeD">
			<context kind="class">ShapeRange</context>
			<name>ThreeD</name>
			<type>ThreeDFormat</type>
		</source>
	</element>
	<!--property::ShapeRange.Top-->
	<element type="property">
		<source id="Excel.ShapeRange.Top">
			<context kind="class">ShapeRange</context>
			<name>Top</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::ShapeRange.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Type">
			<context kind="class">ShapeRange</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ShapeRange.Ungroup-->
	<element type="method">
		<source id="Excel.ShapeRange.Ungroup">
			<context kind="class">ShapeRange</context>
			<name>Ungroup</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::ShapeRange.VerticalFlip {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.VerticalFlip">
			<context kind="class">ShapeRange</context>
			<name>VerticalFlip</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.Vertices {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.Vertices">
			<context kind="class">ShapeRange</context>
			<name>Vertices</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ShapeRange.Visible-->
	<element type="property">
		<source id="Excel.ShapeRange.Visible">
			<context kind="class">ShapeRange</context>
			<name>Visible</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.Width-->
	<element type="property">
		<source id="Excel.ShapeRange.Width">
			<context kind="class">ShapeRange</context>
			<name>Width</name>
			<type>Single</type>
		</source>
	</element>
	<!--method::ShapeRange.ZOrder-->
	<element type="method">
		<source id="Excel.ShapeRange.ZOrder">
			<context kind="class">ShapeRange</context>
			<name>ZOrder</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>ZOrderCmd</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ShapeRange.ZOrderPosition {ReadOnly}-->
	<element type="property">
		<source id="Excel.ShapeRange.ZOrderPosition">
			<context kind="class">ShapeRange</context>
			<name>ZOrderPosition</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Shapes-->
	<element type="class">
		<source id="Excel.Shapes">
			<name>Shapes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Shapes.AddCallout-->
	<element type="method">
		<source id="Excel.Shapes.AddCallout">
			<context kind="class">Shapes</context>
			<name>AddCallout</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.AddCanvas-->
	<element type="method">
		<source id="Excel.Shapes.AddCanvas">
			<context kind="class">Shapes</context>
			<name>AddCanvas</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.AddConnector-->
	<element type="method">
		<source id="Excel.Shapes.AddConnector">
			<context kind="class">Shapes</context>
			<name>AddConnector</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>BeginX</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>BeginY</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>EndX</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>EndY</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.AddCurve-->
	<element type="method">
		<source id="Excel.Shapes.AddCurve">
			<context kind="class">Shapes</context>
			<name>AddCurve</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>SafeArrayOfPoints</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.AddDiagram-->
	<element type="method">
		<source id="Excel.Shapes.AddDiagram">
			<context kind="class">Shapes</context>
			<name>AddDiagram</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.AddFormControl-->
	<element type="method">
		<source id="Excel.Shapes.AddFormControl">
			<context kind="class">Shapes</context>
			<name>AddFormControl</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.AddLabel-->
	<element type="method">
		<source id="Excel.Shapes.AddLabel">
			<context kind="class">Shapes</context>
			<name>AddLabel</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Orientation</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.AddLine-->
	<element type="method">
		<source id="Excel.Shapes.AddLine">
			<context kind="class">Shapes</context>
			<name>AddLine</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>BeginX</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>BeginY</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>EndX</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>EndY</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.AddOLEObject-->
	<element type="method">
		<source id="Excel.Shapes.AddOLEObject">
			<context kind="class">Shapes</context>
			<name>AddOLEObject</name>
			<type>Shape</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>ClassType</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Link</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DisplayAsIcon</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IconFileName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IconIndex</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IconLabel</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Left</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Top</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Width</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.AddPicture-->
	<element type="method">
		<source id="Excel.Shapes.AddPicture">
			<context kind="class">Shapes</context>
			<name>AddPicture</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>LinkToFile</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>SaveWithDocument</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.AddPolyline-->
	<element type="method">
		<source id="Excel.Shapes.AddPolyline">
			<context kind="class">Shapes</context>
			<name>AddPolyline</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>SafeArrayOfPoints</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.AddShape-->
	<element type="method">
		<source id="Excel.Shapes.AddShape">
			<context kind="class">Shapes</context>
			<name>AddShape</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.AddTextbox-->
	<element type="method">
		<source id="Excel.Shapes.AddTextbox">
			<context kind="class">Shapes</context>
			<name>AddTextbox</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Orientation</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.AddTextEffect-->
	<element type="method">
		<source id="Excel.Shapes.AddTextEffect">
			<context kind="class">Shapes</context>
			<name>AddTextEffect</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>PresetTextEffect</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Text</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>FontName</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>FontSize</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>FontBold</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>FontItalic</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Shapes.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shapes.Application">
			<context kind="class">Shapes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Shapes.BuildFreeform-->
	<element type="method">
		<source id="Excel.Shapes.BuildFreeform">
			<context kind="class">Shapes</context>
			<name>BuildFreeform</name>
			<type>FreeformBuilder</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>EditingType</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>X1</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Y1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Shapes.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shapes.Count">
			<context kind="class">Shapes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Shapes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shapes.Creator">
			<context kind="class">Shapes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Shapes.Item {Default}-->
	<element type="method">
		<source id="Excel.Shapes.Item">
			<context kind="class">Shapes</context>
			<name default="true">Item</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Shapes.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shapes.Parent">
			<context kind="class">Shapes</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Shapes.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.Shapes.Range">
			<context kind="class">Shapes</context>
			<name>Range</name>
			<type>ShapeRange</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Shapes.SelectAll-->
	<element type="method">
		<source id="Excel.Shapes.SelectAll">
			<context kind="class">Shapes</context>
			<name>SelectAll</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::Sheets-->
	<element type="class">
		<source id="Excel.Sheets">
			<name>Sheets</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Sheets.Add(ADAPTED)-->
	<element type="method">
		<source id="Excel.Sheets.Add">
			<context kind="class">Sheets</context>
			<name>Add</name>
			<type>
				<!-- two subclasses of Sheet -->
				<choice>Chart</choice>
				<choice>Worksheet</choice>
			</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Count</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Sheets.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Sheets.Application">
			<context kind="class">Sheets</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Sheets.Copy-->
	<element type="method">
		<source id="Excel.Sheets.Copy">
			<context kind="class">Sheets</context>
			<name>Copy</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Sheets.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Sheets.Count">
			<context kind="class">Sheets</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Sheets.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Sheets.Creator">
			<context kind="class">Sheets</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Sheets.Delete-->
	<element type="method">
		<source id="Excel.Sheets.Delete">
			<context kind="class">Sheets</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Sheets.FillAcrossSheets-->
	<element type="method">
		<source id="Excel.Sheets.FillAcrossSheets">
			<context kind="class">Sheets</context>
			<name>FillAcrossSheets</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Range</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Sheets.HPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Sheets.HPageBreaks">
			<context kind="class">Sheets</context>
			<name>HPageBreaks</name>
			<type>HPageBreaks</type>
		</source>
	</element>
	<!--property::Sheets.Item {Default} {ReadOnly}(ADAPTED)-->
	<element type="method">
		<source id="Excel.Sheets.Item">
			<context kind="class">Sheets</context>
			<name default="true">Item</name>
			<type>
				<!-- two subclasses of Sheet -->
				<choice>Chart</choice>
				<choice>Worksheet</choice>
			</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Sheets.Move-->
	<element type="method">
		<source id="Excel.Sheets.Move">
			<context kind="class">Sheets</context>
			<name>Move</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Sheets.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Sheets.Parent">
			<context kind="class">Sheets</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Sheets.PrintOut-->
	<element type="method">
		<source id="Excel.Sheets.PrintOut">
			<context kind="class">Sheets</context>
			<name>PrintOut</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>From</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>To</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Copies</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Preview</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ActivePrinter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrintToFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Collate</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrToFileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Sheets.PrintPreview-->
	<element type="method">
		<source id="Excel.Sheets.PrintPreview">
			<context kind="class">Sheets</context>
			<name>PrintPreview</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>EnableChanges</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Sheets.Select-->
	<element type="method">
		<source id="Excel.Sheets.Select">
			<context kind="class">Sheets</context>
			<name>Select</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Sheets.Visible-->
	<element type="property">
		<source id="Excel.Sheets.Visible">
			<context kind="class">Sheets</context>
			<name>Visible</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Sheets.VPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Sheets.VPageBreaks">
			<context kind="class">Sheets</context>
			<name>VPageBreaks</name>
			<type>VPageBreaks</type>
		</source>
	</element>
	<!--Class::SmartTag-->
	<element type="class">
		<source id="Excel.SmartTag">
			<name>SmartTag</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SmartTag.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTag.Application">
			<context kind="class">SmartTag</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SmartTag.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTag.Creator">
			<context kind="class">SmartTag</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::SmartTag.Delete-->
	<element type="method">
		<source id="Excel.SmartTag.Delete">
			<context kind="class">SmartTag</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::SmartTag.DownloadURL {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTag.DownloadURL">
			<context kind="class">SmartTag</context>
			<name>DownloadURL</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SmartTag.Name {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTag.Name">
			<context kind="class">SmartTag</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SmartTag.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTag.Parent">
			<context kind="class">SmartTag</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::SmartTag.Properties {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTag.Properties">
			<context kind="class">SmartTag</context>
			<name>Properties</name>
			<type>CustomProperties</type>
		</source>
	</element>
	<!--property::SmartTag.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTag.Range">
			<context kind="class">SmartTag</context>
			<name>Range</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::SmartTag.SmartTagActions {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTag.SmartTagActions">
			<context kind="class">SmartTag</context>
			<name>SmartTagActions</name>
			<type>SmartTagActions</type>
		</source>
	</element>
	<!--property::SmartTag.XML {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTag.XML">
			<context kind="class">SmartTag</context>
			<name>XML</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::SmartTagAction-->
	<element type="class">
		<source id="Excel.SmartTagAction">
			<name>SmartTagAction</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SmartTagAction.ActiveXControl {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagAction.ActiveXControl">
			<context kind="class">SmartTagAction</context>
			<name>ActiveXControl</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::SmartTagAction.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagAction.Application">
			<context kind="class">SmartTagAction</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SmartTagAction.CheckboxState-->
	<element type="property">
		<source id="Excel.SmartTagAction.CheckboxState">
			<context kind="class">SmartTagAction</context>
			<name>CheckboxState</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SmartTagAction.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagAction.Creator">
			<context kind="class">SmartTagAction</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::SmartTagAction.Execute-->
	<element type="method">
		<source id="Excel.SmartTagAction.Execute">
			<context kind="class">SmartTagAction</context>
			<name>Execute</name>
			<type>void</type>
		</source>
	</element>
	<!--property::SmartTagAction.ExpandHelp-->
	<element type="property">
		<source id="Excel.SmartTagAction.ExpandHelp">
			<context kind="class">SmartTagAction</context>
			<name>ExpandHelp</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SmartTagAction.ListSelection-->
	<element type="property">
		<source id="Excel.SmartTagAction.ListSelection">
			<context kind="class">SmartTagAction</context>
			<name>ListSelection</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SmartTagAction.Name {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagAction.Name">
			<context kind="class">SmartTagAction</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SmartTagAction.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagAction.Parent">
			<context kind="class">SmartTagAction</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::SmartTagAction.PresentInPane {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagAction.PresentInPane">
			<context kind="class">SmartTagAction</context>
			<name>PresentInPane</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SmartTagAction.RadioGroupSelection-->
	<element type="property">
		<source id="Excel.SmartTagAction.RadioGroupSelection">
			<context kind="class">SmartTagAction</context>
			<name>RadioGroupSelection</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SmartTagAction.TextboxText-->
	<element type="property">
		<source id="Excel.SmartTagAction.TextboxText">
			<context kind="class">SmartTagAction</context>
			<name>TextboxText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SmartTagAction.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagAction.Type">
			<context kind="class">SmartTagAction</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::SmartTagActions-->
	<element type="class">
		<source id="Excel.SmartTagActions">
			<name>SmartTagActions</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SmartTagActions.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagActions.Application">
			<context kind="class">SmartTagActions</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SmartTagActions.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagActions.Count">
			<context kind="class">SmartTagActions</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SmartTagActions.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagActions.Creator">
			<context kind="class">SmartTagActions</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SmartTagActions.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagActions.Item">
			<context kind="class">SmartTagActions</context>
			<name default="true">Item</name>
			<type>SmartTagAction</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SmartTagActions.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagActions.Parent">
			<context kind="class">SmartTagActions</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::SmartTagOptions-->
	<element type="class">
		<source id="Excel.SmartTagOptions">
			<name>SmartTagOptions</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SmartTagOptions.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagOptions.Application">
			<context kind="class">SmartTagOptions</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SmartTagOptions.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagOptions.Creator">
			<context kind="class">SmartTagOptions</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SmartTagOptions.DisplaySmartTags-->
	<element type="property">
		<source id="Excel.SmartTagOptions.DisplaySmartTags">
			<context kind="class">SmartTagOptions</context>
			<name>DisplaySmartTags</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SmartTagOptions.EmbedSmartTags-->
	<element type="property">
		<source id="Excel.SmartTagOptions.EmbedSmartTags">
			<context kind="class">SmartTagOptions</context>
			<name>EmbedSmartTags</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SmartTagOptions.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagOptions.Parent">
			<context kind="class">SmartTagOptions</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::SmartTagRecognizer-->
	<element type="class">
		<source id="Excel.SmartTagRecognizer">
			<name>SmartTagRecognizer</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SmartTagRecognizer.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagRecognizer.Application">
			<context kind="class">SmartTagRecognizer</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SmartTagRecognizer.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagRecognizer.Creator">
			<context kind="class">SmartTagRecognizer</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SmartTagRecognizer.Enabled-->
	<element type="property">
		<source id="Excel.SmartTagRecognizer.Enabled">
			<context kind="class">SmartTagRecognizer</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SmartTagRecognizer.FullName {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagRecognizer.FullName">
			<context kind="class">SmartTagRecognizer</context>
			<name>FullName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SmartTagRecognizer.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagRecognizer.Parent">
			<context kind="class">SmartTagRecognizer</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::SmartTagRecognizer.progID {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagRecognizer.progID">
			<context kind="class">SmartTagRecognizer</context>
			<name>progID</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::SmartTagRecognizers-->
	<element type="class">
		<source id="Excel.SmartTagRecognizers">
			<name>SmartTagRecognizers</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SmartTagRecognizers.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagRecognizers.Application">
			<context kind="class">SmartTagRecognizers</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SmartTagRecognizers.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagRecognizers.Count">
			<context kind="class">SmartTagRecognizers</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SmartTagRecognizers.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagRecognizers.Creator">
			<context kind="class">SmartTagRecognizers</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SmartTagRecognizers.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagRecognizers.Item">
			<context kind="class">SmartTagRecognizers</context>
			<name default="true">Item</name>
			<type>SmartTagRecognizer</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SmartTagRecognizers.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTagRecognizers.Parent">
			<context kind="class">SmartTagRecognizers</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::SmartTagRecognizers.Recognize-->
	<element type="property">
		<source id="Excel.SmartTagRecognizers.Recognize">
			<context kind="class">SmartTagRecognizers</context>
			<name>Recognize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::SmartTags-->
	<element type="class">
		<source id="Excel.SmartTags">
			<name>SmartTags</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::SmartTags.Add-->
	<element type="method">
		<source id="Excel.SmartTags.Add">
			<context kind="class">SmartTags</context>
			<name>Add</name>
			<type>SmartTag</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>SmartTagType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SmartTags.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTags.Application">
			<context kind="class">SmartTags</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SmartTags.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTags.Count">
			<context kind="class">SmartTags</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SmartTags.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTags.Creator">
			<context kind="class">SmartTags</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SmartTags.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.SmartTags.Parent">
			<context kind="class">SmartTags</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::SoundNote-->
	<element type="class">
		<source id="Excel.SoundNote">
			<name>SoundNote</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SoundNote.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.SoundNote.Application">
			<context kind="class">SoundNote</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SoundNote.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.SoundNote.Creator">
			<context kind="class">SoundNote</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::SoundNote.Delete-->
	<element type="method">
		<source id="Excel.SoundNote.Delete">
			<context kind="class">SoundNote</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::SoundNote.Import-->
	<element type="method">
		<source id="Excel.SoundNote.Import">
			<context kind="class">SoundNote</context>
			<name>Import</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SoundNote.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.SoundNote.Parent">
			<context kind="class">SoundNote</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::SoundNote.Play-->
	<element type="method">
		<source id="Excel.SoundNote.Play">
			<context kind="class">SoundNote</context>
			<name>Play</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::SoundNote.Record-->
	<element type="method">
		<source id="Excel.SoundNote.Record">
			<context kind="class">SoundNote</context>
			<name>Record</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Speech-->
	<element type="class">
		<source id="Excel.Speech">
			<name>Speech</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Speech.Direction-->
	<element type="property">
		<source id="Excel.Speech.Direction">
			<context kind="class">Speech</context>
			<name>Direction</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Speech.Speak-->
	<element type="method">
		<source id="Excel.Speech.Speak">
			<context kind="class">Speech</context>
			<name>Speak</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Text</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpeakAsync</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpeakXML</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Purge</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Speech.SpeakCellOnEnter-->
	<element type="property">
		<source id="Excel.Speech.SpeakCellOnEnter">
			<context kind="class">Speech</context>
			<name>SpeakCellOnEnter</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::SpellingOptions-->
	<element type="class">
		<source id="Excel.SpellingOptions">
			<name>SpellingOptions</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SpellingOptions.ArabicModes-->
	<element type="property">
		<source id="Excel.SpellingOptions.ArabicModes">
			<context kind="class">SpellingOptions</context>
			<name>ArabicModes</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SpellingOptions.DictLang-->
	<element type="property">
		<source id="Excel.SpellingOptions.DictLang">
			<context kind="class">SpellingOptions</context>
			<name>DictLang</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SpellingOptions.GermanPostReform-->
	<element type="property">
		<source id="Excel.SpellingOptions.GermanPostReform">
			<context kind="class">SpellingOptions</context>
			<name>GermanPostReform</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SpellingOptions.HebrewModes-->
	<element type="property">
		<source id="Excel.SpellingOptions.HebrewModes">
			<context kind="class">SpellingOptions</context>
			<name>HebrewModes</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SpellingOptions.IgnoreCaps-->
	<element type="property">
		<source id="Excel.SpellingOptions.IgnoreCaps">
			<context kind="class">SpellingOptions</context>
			<name>IgnoreCaps</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SpellingOptions.IgnoreFileNames-->
	<element type="property">
		<source id="Excel.SpellingOptions.IgnoreFileNames">
			<context kind="class">SpellingOptions</context>
			<name>IgnoreFileNames</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SpellingOptions.IgnoreMixedDigits-->
	<element type="property">
		<source id="Excel.SpellingOptions.IgnoreMixedDigits">
			<context kind="class">SpellingOptions</context>
			<name>IgnoreMixedDigits</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SpellingOptions.KoreanCombineAux-->
	<element type="property">
		<source id="Excel.SpellingOptions.KoreanCombineAux">
			<context kind="class">SpellingOptions</context>
			<name>KoreanCombineAux</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SpellingOptions.KoreanProcessCompound-->
	<element type="property">
		<source id="Excel.SpellingOptions.KoreanProcessCompound">
			<context kind="class">SpellingOptions</context>
			<name>KoreanProcessCompound</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SpellingOptions.KoreanUseAutoChangeList-->
	<element type="property">
		<source id="Excel.SpellingOptions.KoreanUseAutoChangeList">
			<context kind="class">SpellingOptions</context>
			<name>KoreanUseAutoChangeList</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SpellingOptions.SuggestMainOnly-->
	<element type="property">
		<source id="Excel.SpellingOptions.SuggestMainOnly">
			<context kind="class">SpellingOptions</context>
			<name>SuggestMainOnly</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SpellingOptions.UserDict-->
	<element type="property">
		<source id="Excel.SpellingOptions.UserDict">
			<context kind="class">SpellingOptions</context>
			<name>UserDict</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::Spinner-->
	<element type="class">
		<source id="Excel.Spinner">
			<name>Spinner</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Spinner.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinner.Application">
			<context kind="class">Spinner</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Spinner.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinner.BottomRightCell">
			<context kind="class">Spinner</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Spinner.BringToFront-->
	<element type="method">
		<source id="Excel.Spinner.BringToFront">
			<context kind="class">Spinner</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Spinner.Copy-->
	<element type="method">
		<source id="Excel.Spinner.Copy">
			<context kind="class">Spinner</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Spinner.CopyPicture-->
	<element type="method">
		<source id="Excel.Spinner.CopyPicture">
			<context kind="class">Spinner</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Spinner.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinner.Creator">
			<context kind="class">Spinner</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Spinner.Cut-->
	<element type="method">
		<source id="Excel.Spinner.Cut">
			<context kind="class">Spinner</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Spinner.Delete-->
	<element type="method">
		<source id="Excel.Spinner.Delete">
			<context kind="class">Spinner</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Spinner.Display3DShading-->
	<element type="property">
		<source id="Excel.Spinner.Display3DShading">
			<context kind="class">Spinner</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Spinner.Duplicate-->
	<element type="method">
		<source id="Excel.Spinner.Duplicate">
			<context kind="class">Spinner</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Spinner.Enabled-->
	<element type="property">
		<source id="Excel.Spinner.Enabled">
			<context kind="class">Spinner</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Spinner.Height-->
	<element type="property">
		<source id="Excel.Spinner.Height">
			<context kind="class">Spinner</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Spinner.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinner.Index">
			<context kind="class">Spinner</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Spinner.Left-->
	<element type="property">
		<source id="Excel.Spinner.Left">
			<context kind="class">Spinner</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Spinner.LinkedCell-->
	<element type="property">
		<source id="Excel.Spinner.LinkedCell">
			<context kind="class">Spinner</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Spinner.Locked-->
	<element type="property">
		<source id="Excel.Spinner.Locked">
			<context kind="class">Spinner</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Spinner.Max-->
	<element type="property">
		<source id="Excel.Spinner.Max">
			<context kind="class">Spinner</context>
			<name>Max</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Spinner.Min-->
	<element type="property">
		<source id="Excel.Spinner.Min">
			<context kind="class">Spinner</context>
			<name>Min</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Spinner.Name-->
	<element type="property">
		<source id="Excel.Spinner.Name">
			<context kind="class">Spinner</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Spinner.OnAction-->
	<element type="property">
		<source id="Excel.Spinner.OnAction">
			<context kind="class">Spinner</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Spinner.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinner.Parent">
			<context kind="class">Spinner</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Spinner.Placement-->
	<element type="property">
		<source id="Excel.Spinner.Placement">
			<context kind="class">Spinner</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Spinner.PrintObject-->
	<element type="property">
		<source id="Excel.Spinner.PrintObject">
			<context kind="class">Spinner</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Spinner.Select-->
	<element type="method">
		<source id="Excel.Spinner.Select">
			<context kind="class">Spinner</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Spinner.SendToBack-->
	<element type="method">
		<source id="Excel.Spinner.SendToBack">
			<context kind="class">Spinner</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Spinner.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinner.ShapeRange">
			<context kind="class">Spinner</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Spinner.SmallChange-->
	<element type="property">
		<source id="Excel.Spinner.SmallChange">
			<context kind="class">Spinner</context>
			<name>SmallChange</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Spinner.Top-->
	<element type="property">
		<source id="Excel.Spinner.Top">
			<context kind="class">Spinner</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Spinner.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinner.TopLeftCell">
			<context kind="class">Spinner</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Spinner.Value {Default}-->
	<element type="property">
		<source id="Excel.Spinner.Value">
			<context kind="class">Spinner</context>
			<name default="true">Value</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Spinner.Visible-->
	<element type="property">
		<source id="Excel.Spinner.Visible">
			<context kind="class">Spinner</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Spinner.Width-->
	<element type="property">
		<source id="Excel.Spinner.Width">
			<context kind="class">Spinner</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Spinner.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinner.ZOrder">
			<context kind="class">Spinner</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Spinners-->
	<element type="class">
		<source id="Excel.Spinners">
			<name>Spinners</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Spinners.Add-->
	<element type="method">
		<source id="Excel.Spinners.Add">
			<context kind="class">Spinners</context>
			<name>Add</name>
			<type>Spinner</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Spinners.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinners.Application">
			<context kind="class">Spinners</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Spinners.BringToFront-->
	<element type="method">
		<source id="Excel.Spinners.BringToFront">
			<context kind="class">Spinners</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Spinners.Copy-->
	<element type="method">
		<source id="Excel.Spinners.Copy">
			<context kind="class">Spinners</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Spinners.CopyPicture-->
	<element type="method">
		<source id="Excel.Spinners.CopyPicture">
			<context kind="class">Spinners</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Spinners.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinners.Count">
			<context kind="class">Spinners</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Spinners.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinners.Creator">
			<context kind="class">Spinners</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Spinners.Cut-->
	<element type="method">
		<source id="Excel.Spinners.Cut">
			<context kind="class">Spinners</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Spinners.Delete-->
	<element type="method">
		<source id="Excel.Spinners.Delete">
			<context kind="class">Spinners</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Spinners.Display3DShading-->
	<element type="property">
		<source id="Excel.Spinners.Display3DShading">
			<context kind="class">Spinners</context>
			<name>Display3DShading</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Spinners.Duplicate-->
	<element type="method">
		<source id="Excel.Spinners.Duplicate">
			<context kind="class">Spinners</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Spinners.Enabled-->
	<element type="property">
		<source id="Excel.Spinners.Enabled">
			<context kind="class">Spinners</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Spinners.Group-->
	<element type="method">
		<source id="Excel.Spinners.Group">
			<context kind="class">Spinners</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::Spinners.Height-->
	<element type="property">
		<source id="Excel.Spinners.Height">
			<context kind="class">Spinners</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--method::Spinners.Item-->
	<element type="method">
		<source id="Excel.Spinners.Item">
			<context kind="class">Spinners</context>
			<name>Item</name>
			<type>Spinner</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Spinners.Left-->
	<element type="property">
		<source id="Excel.Spinners.Left">
			<context kind="class">Spinners</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Spinners.LinkedCell-->
	<element type="property">
		<source id="Excel.Spinners.LinkedCell">
			<context kind="class">Spinners</context>
			<name>LinkedCell</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Spinners.Locked-->
	<element type="property">
		<source id="Excel.Spinners.Locked">
			<context kind="class">Spinners</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Spinners.Max-->
	<element type="property">
		<source id="Excel.Spinners.Max">
			<context kind="class">Spinners</context>
			<name>Max</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Spinners.Min-->
	<element type="property">
		<source id="Excel.Spinners.Min">
			<context kind="class">Spinners</context>
			<name>Min</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Spinners.OnAction-->
	<element type="property">
		<source id="Excel.Spinners.OnAction">
			<context kind="class">Spinners</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Spinners.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinners.Parent">
			<context kind="class">Spinners</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Spinners.Placement-->
	<element type="property">
		<source id="Excel.Spinners.Placement">
			<context kind="class">Spinners</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Spinners.PrintObject-->
	<element type="property">
		<source id="Excel.Spinners.PrintObject">
			<context kind="class">Spinners</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Spinners.Select-->
	<element type="method">
		<source id="Excel.Spinners.Select">
			<context kind="class">Spinners</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Spinners.SendToBack-->
	<element type="method">
		<source id="Excel.Spinners.SendToBack">
			<context kind="class">Spinners</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Spinners.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinners.ShapeRange">
			<context kind="class">Spinners</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::Spinners.SmallChange-->
	<element type="property">
		<source id="Excel.Spinners.SmallChange">
			<context kind="class">Spinners</context>
			<name>SmallChange</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Spinners.Top-->
	<element type="property">
		<source id="Excel.Spinners.Top">
			<context kind="class">Spinners</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Spinners.Value {Default}-->
	<element type="property">
		<source id="Excel.Spinners.Value">
			<context kind="class">Spinners</context>
			<name default="true">Value</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Spinners.Visible-->
	<element type="property">
		<source id="Excel.Spinners.Visible">
			<context kind="class">Spinners</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Spinners.Width-->
	<element type="property">
		<source id="Excel.Spinners.Width">
			<context kind="class">Spinners</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Spinners.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.Spinners.ZOrder">
			<context kind="class">Spinners</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Style-->
	<element type="class">
		<source id="Excel.Style">
			<name>Style</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Style.AddIndent-->
	<element type="property">
		<source id="Excel.Style.AddIndent">
			<context kind="class">Style</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Style.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Style.Application">
			<context kind="class">Style</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Style.Borders {ReadOnly}-->
	<element type="property">
		<source id="Excel.Style.Borders">
			<context kind="class">Style</context>
			<name>Borders</name>
			<type>Borders</type>
		</source>
	</element>
	<!--property::Style.BuiltIn {ReadOnly}-->
	<element type="property">
		<source id="Excel.Style.BuiltIn">
			<context kind="class">Style</context>
			<name>BuiltIn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Style.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Style.Creator">
			<context kind="class">Style</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Style.Delete-->
	<element type="method">
		<source id="Excel.Style.Delete">
			<context kind="class">Style</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Style.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.Style.Font">
			<context kind="class">Style</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::Style.FormulaHidden-->
	<element type="property">
		<source id="Excel.Style.FormulaHidden">
			<context kind="class">Style</context>
			<name>FormulaHidden</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Style.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.Style.HorizontalAlignment">
			<context kind="class">Style</context>
			<name>HorizontalAlignment</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Style.IncludeAlignment-->
	<element type="property">
		<source id="Excel.Style.IncludeAlignment">
			<context kind="class">Style</context>
			<name>IncludeAlignment</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Style.IncludeBorder-->
	<element type="property">
		<source id="Excel.Style.IncludeBorder">
			<context kind="class">Style</context>
			<name>IncludeBorder</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Style.IncludeFont-->
	<element type="property">
		<source id="Excel.Style.IncludeFont">
			<context kind="class">Style</context>
			<name>IncludeFont</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Style.IncludeNumber-->
	<element type="property">
		<source id="Excel.Style.IncludeNumber">
			<context kind="class">Style</context>
			<name>IncludeNumber</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Style.IncludePatterns-->
	<element type="property">
		<source id="Excel.Style.IncludePatterns">
			<context kind="class">Style</context>
			<name>IncludePatterns</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Style.IncludeProtection-->
	<element type="property">
		<source id="Excel.Style.IncludeProtection">
			<context kind="class">Style</context>
			<name>IncludeProtection</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Style.IndentLevel-->
	<element type="property">
		<source id="Excel.Style.IndentLevel">
			<context kind="class">Style</context>
			<name>IndentLevel</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Style.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Style.Interior">
			<context kind="class">Style</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::Style.Locked-->
	<element type="property">
		<source id="Excel.Style.Locked">
			<context kind="class">Style</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Style.MergeCells-->
	<element type="property">
		<source id="Excel.Style.MergeCells">
			<context kind="class">Style</context>
			<name>MergeCells</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Style.Name {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Style.Name">
			<context kind="class">Style</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Style.NameLocal {ReadOnly}-->
	<element type="property">
		<source id="Excel.Style.NameLocal">
			<context kind="class">Style</context>
			<name>NameLocal</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Style.NumberFormat-->
	<element type="property">
		<source id="Excel.Style.NumberFormat">
			<context kind="class">Style</context>
			<name>NumberFormat</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Style.NumberFormatLocal-->
	<element type="property">
		<source id="Excel.Style.NumberFormatLocal">
			<context kind="class">Style</context>
			<name>NumberFormatLocal</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Style.Orientation-->
	<element type="property">
		<source id="Excel.Style.Orientation">
			<context kind="class">Style</context>
			<name>Orientation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Style.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Style.Parent">
			<context kind="class">Style</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Style.ReadingOrder-->
	<element type="property">
		<source id="Excel.Style.ReadingOrder">
			<context kind="class">Style</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Style.ShrinkToFit-->
	<element type="property">
		<source id="Excel.Style.ShrinkToFit">
			<context kind="class">Style</context>
			<name>ShrinkToFit</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Style.Value {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Style.Value">
			<context kind="class">Style</context>
			<name default="true">Value</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Style.VerticalAlignment-->
	<element type="property">
		<source id="Excel.Style.VerticalAlignment">
			<context kind="class">Style</context>
			<name>VerticalAlignment</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Style.WrapText-->
	<element type="property">
		<source id="Excel.Style.WrapText">
			<context kind="class">Style</context>
			<name>WrapText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::Styles-->
	<element type="class">
		<source id="Excel.Styles">
			<name>Styles</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Styles.Add-->
	<element type="method">
		<source id="Excel.Styles.Add">
			<context kind="class">Styles</context>
			<name>Add</name>
			<type>Style</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>BasedOn</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Styles.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Styles.Application">
			<context kind="class">Styles</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Styles.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Styles.Count">
			<context kind="class">Styles</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Styles.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Styles.Creator">
			<context kind="class">Styles</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Styles.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Styles.Item">
			<context kind="class">Styles</context>
			<name default="true">Item</name>
			<type>Style</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Styles.Merge-->
	<element type="method">
		<source id="Excel.Styles.Merge">
			<context kind="class">Styles</context>
			<name>Merge</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Workbook</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Styles.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Styles.Parent">
			<context kind="class">Styles</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Tab-->
	<element type="class">
		<source id="Excel.Tab">
			<name>Tab</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Tab.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Tab.Application">
			<context kind="class">Tab</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Tab.Color-->
	<element type="property">
		<source id="Excel.Tab.Color">
			<context kind="class">Tab</context>
			<name>Color</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Tab.ColorIndex-->
	<element type="property">
		<source id="Excel.Tab.ColorIndex">
			<context kind="class">Tab</context>
			<name>ColorIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Tab.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Tab.Creator">
			<context kind="class">Tab</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Tab.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Tab.Parent">
			<context kind="class">Tab</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::TextBox-->
	<element type="class">
		<source id="Excel.TextBox">
			<name>TextBox</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::TextBox.AddIndent-->
	<element type="property">
		<source id="Excel.TextBox.AddIndent">
			<context kind="class">TextBox</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBox.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBox.Application">
			<context kind="class">TextBox</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::TextBox.AutoScaleFont-->
	<element type="property">
		<source id="Excel.TextBox.AutoScaleFont">
			<context kind="class">TextBox</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBox.AutoSize-->
	<element type="property">
		<source id="Excel.TextBox.AutoSize">
			<context kind="class">TextBox</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBox.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBox.Border">
			<context kind="class">TextBox</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::TextBox.BottomRightCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBox.BottomRightCell">
			<context kind="class">TextBox</context>
			<name>BottomRightCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::TextBox.BringToFront-->
	<element type="method">
		<source id="Excel.TextBox.BringToFront">
			<context kind="class">TextBox</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBox.Caption-->
	<element type="property">
		<source id="Excel.TextBox.Caption">
			<context kind="class">TextBox</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::TextBox.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBox.Characters">
			<context kind="class">TextBox</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::TextBox.CheckSpelling-->
	<element type="method">
		<source id="Excel.TextBox.CheckSpelling">
			<context kind="class">TextBox</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::TextBox.Copy-->
	<element type="method">
		<source id="Excel.TextBox.Copy">
			<context kind="class">TextBox</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::TextBox.CopyPicture-->
	<element type="method">
		<source id="Excel.TextBox.CopyPicture">
			<context kind="class">TextBox</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::TextBox.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBox.Creator">
			<context kind="class">TextBox</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::TextBox.Cut-->
	<element type="method">
		<source id="Excel.TextBox.Cut">
			<context kind="class">TextBox</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::TextBox.Delete-->
	<element type="method">
		<source id="Excel.TextBox.Delete">
			<context kind="class">TextBox</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::TextBox.Duplicate-->
	<element type="method">
		<source id="Excel.TextBox.Duplicate">
			<context kind="class">TextBox</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::TextBox.Enabled-->
	<element type="property">
		<source id="Excel.TextBox.Enabled">
			<context kind="class">TextBox</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBox.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBox.Font">
			<context kind="class">TextBox</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::TextBox.Formula-->
	<element type="property">
		<source id="Excel.TextBox.Formula">
			<context kind="class">TextBox</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--property::TextBox.Height-->
	<element type="property">
		<source id="Excel.TextBox.Height">
			<context kind="class">TextBox</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::TextBox.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.TextBox.HorizontalAlignment">
			<context kind="class">TextBox</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBox.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBox.Index">
			<context kind="class">TextBox</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextBox.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBox.Interior">
			<context kind="class">TextBox</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::TextBox.Left-->
	<element type="property">
		<source id="Excel.TextBox.Left">
			<context kind="class">TextBox</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::TextBox.Locked-->
	<element type="property">
		<source id="Excel.TextBox.Locked">
			<context kind="class">TextBox</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBox.LockedText-->
	<element type="property">
		<source id="Excel.TextBox.LockedText">
			<context kind="class">TextBox</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBox.Name-->
	<element type="property">
		<source id="Excel.TextBox.Name">
			<context kind="class">TextBox</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::TextBox.OnAction-->
	<element type="property">
		<source id="Excel.TextBox.OnAction">
			<context kind="class">TextBox</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::TextBox.Orientation-->
	<element type="property">
		<source id="Excel.TextBox.Orientation">
			<context kind="class">TextBox</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBox.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBox.Parent">
			<context kind="class">TextBox</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::TextBox.Placement-->
	<element type="property">
		<source id="Excel.TextBox.Placement">
			<context kind="class">TextBox</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBox.PrintObject-->
	<element type="property">
		<source id="Excel.TextBox.PrintObject">
			<context kind="class">TextBox</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBox.ReadingOrder-->
	<element type="property">
		<source id="Excel.TextBox.ReadingOrder">
			<context kind="class">TextBox</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextBox.RoundedCorners-->
	<element type="property">
		<source id="Excel.TextBox.RoundedCorners">
			<context kind="class">TextBox</context>
			<name>RoundedCorners</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::TextBox.Select-->
	<element type="method">
		<source id="Excel.TextBox.Select">
			<context kind="class">TextBox</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::TextBox.SendToBack-->
	<element type="method">
		<source id="Excel.TextBox.SendToBack">
			<context kind="class">TextBox</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBox.Shadow-->
	<element type="property">
		<source id="Excel.TextBox.Shadow">
			<context kind="class">TextBox</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBox.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBox.ShapeRange">
			<context kind="class">TextBox</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::TextBox.Text-->
	<element type="property">
		<source id="Excel.TextBox.Text">
			<context kind="class">TextBox</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::TextBox.Top-->
	<element type="property">
		<source id="Excel.TextBox.Top">
			<context kind="class">TextBox</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::TextBox.TopLeftCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBox.TopLeftCell">
			<context kind="class">TextBox</context>
			<name>TopLeftCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::TextBox.VerticalAlignment-->
	<element type="property">
		<source id="Excel.TextBox.VerticalAlignment">
			<context kind="class">TextBox</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBox.Visible-->
	<element type="property">
		<source id="Excel.TextBox.Visible">
			<context kind="class">TextBox</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBox.Width-->
	<element type="property">
		<source id="Excel.TextBox.Width">
			<context kind="class">TextBox</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::TextBox.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBox.ZOrder">
			<context kind="class">TextBox</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::TextBoxes-->
	<element type="class">
		<source id="Excel.TextBoxes">
			<name>TextBoxes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::TextBoxes.Add-->
	<element type="method">
		<source id="Excel.TextBoxes.Add">
			<context kind="class">TextBoxes</context>
			<name>Add</name>
			<type>TextBox</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::TextBoxes.AddIndent-->
	<element type="property">
		<source id="Excel.TextBoxes.AddIndent">
			<context kind="class">TextBoxes</context>
			<name>AddIndent</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBoxes.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBoxes.Application">
			<context kind="class">TextBoxes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::TextBoxes.AutoScaleFont-->
	<element type="property">
		<source id="Excel.TextBoxes.AutoScaleFont">
			<context kind="class">TextBoxes</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBoxes.AutoSize-->
	<element type="property">
		<source id="Excel.TextBoxes.AutoSize">
			<context kind="class">TextBoxes</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBoxes.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBoxes.Border">
			<context kind="class">TextBoxes</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::TextBoxes.BringToFront-->
	<element type="method">
		<source id="Excel.TextBoxes.BringToFront">
			<context kind="class">TextBoxes</context>
			<name>BringToFront</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBoxes.Caption-->
	<element type="property">
		<source id="Excel.TextBoxes.Caption">
			<context kind="class">TextBoxes</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::TextBoxes.Characters {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBoxes.Characters">
			<context kind="class">TextBoxes</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::TextBoxes.CheckSpelling-->
	<element type="method">
		<source id="Excel.TextBoxes.CheckSpelling">
			<context kind="class">TextBoxes</context>
			<name>CheckSpelling</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::TextBoxes.Copy-->
	<element type="method">
		<source id="Excel.TextBoxes.Copy">
			<context kind="class">TextBoxes</context>
			<name>Copy</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::TextBoxes.CopyPicture-->
	<element type="method">
		<source id="Excel.TextBoxes.CopyPicture">
			<context kind="class">TextBoxes</context>
			<name>CopyPicture</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Appearance</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Format</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::TextBoxes.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBoxes.Count">
			<context kind="class">TextBoxes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextBoxes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBoxes.Creator">
			<context kind="class">TextBoxes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::TextBoxes.Cut-->
	<element type="method">
		<source id="Excel.TextBoxes.Cut">
			<context kind="class">TextBoxes</context>
			<name>Cut</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::TextBoxes.Delete-->
	<element type="method">
		<source id="Excel.TextBoxes.Delete">
			<context kind="class">TextBoxes</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::TextBoxes.Duplicate-->
	<element type="method">
		<source id="Excel.TextBoxes.Duplicate">
			<context kind="class">TextBoxes</context>
			<name>Duplicate</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::TextBoxes.Enabled-->
	<element type="property">
		<source id="Excel.TextBoxes.Enabled">
			<context kind="class">TextBoxes</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBoxes.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBoxes.Font">
			<context kind="class">TextBoxes</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::TextBoxes.Formula-->
	<element type="property">
		<source id="Excel.TextBoxes.Formula">
			<context kind="class">TextBoxes</context>
			<name>Formula</name>
			<type>String</type>
		</source>
	</element>
	<!--method::TextBoxes.Group-->
	<element type="method">
		<source id="Excel.TextBoxes.Group">
			<context kind="class">TextBoxes</context>
			<name>Group</name>
			<type>GroupObject</type>
		</source>
	</element>
	<!--property::TextBoxes.Height-->
	<element type="property">
		<source id="Excel.TextBoxes.Height">
			<context kind="class">TextBoxes</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::TextBoxes.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.TextBoxes.HorizontalAlignment">
			<context kind="class">TextBoxes</context>
			<name>HorizontalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBoxes.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBoxes.Interior">
			<context kind="class">TextBoxes</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--method::TextBoxes.Item-->
	<element type="method">
		<source id="Excel.TextBoxes.Item">
			<context kind="class">TextBoxes</context>
			<name>Item</name>
			<type>TextBoxe</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::TextBoxes.Left-->
	<element type="property">
		<source id="Excel.TextBoxes.Left">
			<context kind="class">TextBoxes</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--property::TextBoxes.Locked-->
	<element type="property">
		<source id="Excel.TextBoxes.Locked">
			<context kind="class">TextBoxes</context>
			<name>Locked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBoxes.LockedText-->
	<element type="property">
		<source id="Excel.TextBoxes.LockedText">
			<context kind="class">TextBoxes</context>
			<name>LockedText</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBoxes.OnAction-->
	<element type="property">
		<source id="Excel.TextBoxes.OnAction">
			<context kind="class">TextBoxes</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::TextBoxes.Orientation-->
	<element type="property">
		<source id="Excel.TextBoxes.Orientation">
			<context kind="class">TextBoxes</context>
			<name>Orientation</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBoxes.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBoxes.Parent">
			<context kind="class">TextBoxes</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::TextBoxes.Placement-->
	<element type="property">
		<source id="Excel.TextBoxes.Placement">
			<context kind="class">TextBoxes</context>
			<name>Placement</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBoxes.PrintObject-->
	<element type="property">
		<source id="Excel.TextBoxes.PrintObject">
			<context kind="class">TextBoxes</context>
			<name>PrintObject</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBoxes.ReadingOrder-->
	<element type="property">
		<source id="Excel.TextBoxes.ReadingOrder">
			<context kind="class">TextBoxes</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextBoxes.RoundedCorners-->
	<element type="property">
		<source id="Excel.TextBoxes.RoundedCorners">
			<context kind="class">TextBoxes</context>
			<name>RoundedCorners</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::TextBoxes.Select-->
	<element type="method">
		<source id="Excel.TextBoxes.Select">
			<context kind="class">TextBoxes</context>
			<name>Select</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::TextBoxes.SendToBack-->
	<element type="method">
		<source id="Excel.TextBoxes.SendToBack">
			<context kind="class">TextBoxes</context>
			<name>SendToBack</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBoxes.Shadow-->
	<element type="property">
		<source id="Excel.TextBoxes.Shadow">
			<context kind="class">TextBoxes</context>
			<name>Shadow</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBoxes.ShapeRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBoxes.ShapeRange">
			<context kind="class">TextBoxes</context>
			<name>ShapeRange</name>
			<type>ShapeRange</type>
		</source>
	</element>
	<!--property::TextBoxes.Text-->
	<element type="property">
		<source id="Excel.TextBoxes.Text">
			<context kind="class">TextBoxes</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::TextBoxes.Top-->
	<element type="property">
		<source id="Excel.TextBoxes.Top">
			<context kind="class">TextBoxes</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::TextBoxes.VerticalAlignment-->
	<element type="property">
		<source id="Excel.TextBoxes.VerticalAlignment">
			<context kind="class">TextBoxes</context>
			<name>VerticalAlignment</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TextBoxes.Visible-->
	<element type="property">
		<source id="Excel.TextBoxes.Visible">
			<context kind="class">TextBoxes</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextBoxes.Width-->
	<element type="property">
		<source id="Excel.TextBoxes.Width">
			<context kind="class">TextBoxes</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::TextBoxes.ZOrder {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextBoxes.ZOrder">
			<context kind="class">TextBoxes</context>
			<name>ZOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::TextEffectFormat-->
	<element type="class">
		<source id="Excel.TextEffectFormat">
			<name>TextEffectFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::TextEffectFormat.Alignment-->
	<element type="property">
		<source id="Excel.TextEffectFormat.Alignment">
			<context kind="class">TextEffectFormat</context>
			<name>Alignment</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextEffectFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextEffectFormat.Application">
			<context kind="class">TextEffectFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::TextEffectFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextEffectFormat.Creator">
			<context kind="class">TextEffectFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextEffectFormat.FontBold-->
	<element type="property">
		<source id="Excel.TextEffectFormat.FontBold">
			<context kind="class">TextEffectFormat</context>
			<name>FontBold</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextEffectFormat.FontItalic-->
	<element type="property">
		<source id="Excel.TextEffectFormat.FontItalic">
			<context kind="class">TextEffectFormat</context>
			<name>FontItalic</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextEffectFormat.FontName-->
	<element type="property">
		<source id="Excel.TextEffectFormat.FontName">
			<context kind="class">TextEffectFormat</context>
			<name>FontName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::TextEffectFormat.FontSize-->
	<element type="property">
		<source id="Excel.TextEffectFormat.FontSize">
			<context kind="class">TextEffectFormat</context>
			<name>FontSize</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::TextEffectFormat.KernedPairs-->
	<element type="property">
		<source id="Excel.TextEffectFormat.KernedPairs">
			<context kind="class">TextEffectFormat</context>
			<name>KernedPairs</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextEffectFormat.NormalizedHeight-->
	<element type="property">
		<source id="Excel.TextEffectFormat.NormalizedHeight">
			<context kind="class">TextEffectFormat</context>
			<name>NormalizedHeight</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextEffectFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextEffectFormat.Parent">
			<context kind="class">TextEffectFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::TextEffectFormat.PresetShape-->
	<element type="property">
		<source id="Excel.TextEffectFormat.PresetShape">
			<context kind="class">TextEffectFormat</context>
			<name>PresetShape</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextEffectFormat.PresetTextEffect-->
	<element type="property">
		<source id="Excel.TextEffectFormat.PresetTextEffect">
			<context kind="class">TextEffectFormat</context>
			<name>PresetTextEffect</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextEffectFormat.RotatedChars-->
	<element type="property">
		<source id="Excel.TextEffectFormat.RotatedChars">
			<context kind="class">TextEffectFormat</context>
			<name>RotatedChars</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextEffectFormat.Text-->
	<element type="property">
		<source id="Excel.TextEffectFormat.Text">
			<context kind="class">TextEffectFormat</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--method::TextEffectFormat.ToggleVerticalText-->
	<element type="method">
		<source id="Excel.TextEffectFormat.ToggleVerticalText">
			<context kind="class">TextEffectFormat</context>
			<name>ToggleVerticalText</name>
			<type>void</type>
		</source>
	</element>
	<!--property::TextEffectFormat.Tracking-->
	<element type="property">
		<source id="Excel.TextEffectFormat.Tracking">
			<context kind="class">TextEffectFormat</context>
			<name>Tracking</name>
			<type>Single</type>
		</source>
	</element>
	<!--Class::TextFrame-->
	<element type="class">
		<source id="Excel.TextFrame">
			<name>TextFrame</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::TextFrame.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextFrame.Application">
			<context kind="class">TextFrame</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::TextFrame.AutoMargins-->
	<element type="property">
		<source id="Excel.TextFrame.AutoMargins">
			<context kind="class">TextFrame</context>
			<name>AutoMargins</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TextFrame.AutoSize-->
	<element type="property">
		<source id="Excel.TextFrame.AutoSize">
			<context kind="class">TextFrame</context>
			<name>AutoSize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::TextFrame.Characters-->
	<element type="method">
		<source id="Excel.TextFrame.Characters">
			<context kind="class">TextFrame</context>
			<name>Characters</name>
			<type>Characters</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Length</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::TextFrame.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextFrame.Creator">
			<context kind="class">TextFrame</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextFrame.HorizontalAlignment-->
	<element type="property">
		<source id="Excel.TextFrame.HorizontalAlignment">
			<context kind="class">TextFrame</context>
			<name>HorizontalAlignment</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextFrame.MarginBottom-->
	<element type="property">
		<source id="Excel.TextFrame.MarginBottom">
			<context kind="class">TextFrame</context>
			<name>MarginBottom</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::TextFrame.MarginLeft-->
	<element type="property">
		<source id="Excel.TextFrame.MarginLeft">
			<context kind="class">TextFrame</context>
			<name>MarginLeft</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::TextFrame.MarginRight-->
	<element type="property">
		<source id="Excel.TextFrame.MarginRight">
			<context kind="class">TextFrame</context>
			<name>MarginRight</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::TextFrame.MarginTop-->
	<element type="property">
		<source id="Excel.TextFrame.MarginTop">
			<context kind="class">TextFrame</context>
			<name>MarginTop</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::TextFrame.Orientation-->
	<element type="property">
		<source id="Excel.TextFrame.Orientation">
			<context kind="class">TextFrame</context>
			<name>Orientation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextFrame.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.TextFrame.Parent">
			<context kind="class">TextFrame</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::TextFrame.ReadingOrder-->
	<element type="property">
		<source id="Excel.TextFrame.ReadingOrder">
			<context kind="class">TextFrame</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TextFrame.VerticalAlignment-->
	<element type="property">
		<source id="Excel.TextFrame.VerticalAlignment">
			<context kind="class">TextFrame</context>
			<name>VerticalAlignment</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ThreeDFormat-->
	<element type="class">
		<source id="Excel.ThreeDFormat">
			<name>ThreeDFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ThreeDFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ThreeDFormat.Application">
			<context kind="class">ThreeDFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ThreeDFormat.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ThreeDFormat.Creator">
			<context kind="class">ThreeDFormat</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ThreeDFormat.Depth-->
	<element type="property">
		<source id="Excel.ThreeDFormat.Depth">
			<context kind="class">ThreeDFormat</context>
			<name>Depth</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::ThreeDFormat.ExtrusionColor {ReadOnly}-->
	<element type="property">
		<source id="Excel.ThreeDFormat.ExtrusionColor">
			<context kind="class">ThreeDFormat</context>
			<name>ExtrusionColor</name>
			<type>ColorFormat</type>
		</source>
	</element>
	<!--property::ThreeDFormat.ExtrusionColorType-->
	<element type="property">
		<source id="Excel.ThreeDFormat.ExtrusionColorType">
			<context kind="class">ThreeDFormat</context>
			<name>ExtrusionColorType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ThreeDFormat.IncrementRotationX-->
	<element type="method">
		<source id="Excel.ThreeDFormat.IncrementRotationX">
			<context kind="class">ThreeDFormat</context>
			<name>IncrementRotationX</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ThreeDFormat.IncrementRotationY-->
	<element type="method">
		<source id="Excel.ThreeDFormat.IncrementRotationY">
			<context kind="class">ThreeDFormat</context>
			<name>IncrementRotationY</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>Increment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ThreeDFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ThreeDFormat.Parent">
			<context kind="class">ThreeDFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ThreeDFormat.Perspective-->
	<element type="property">
		<source id="Excel.ThreeDFormat.Perspective">
			<context kind="class">ThreeDFormat</context>
			<name>Perspective</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ThreeDFormat.PresetExtrusionDirection {ReadOnly}-->
	<element type="property">
		<source id="Excel.ThreeDFormat.PresetExtrusionDirection">
			<context kind="class">ThreeDFormat</context>
			<name>PresetExtrusionDirection</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ThreeDFormat.PresetLightingDirection-->
	<element type="property">
		<source id="Excel.ThreeDFormat.PresetLightingDirection">
			<context kind="class">ThreeDFormat</context>
			<name>PresetLightingDirection</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ThreeDFormat.PresetLightingSoftness-->
	<element type="property">
		<source id="Excel.ThreeDFormat.PresetLightingSoftness">
			<context kind="class">ThreeDFormat</context>
			<name>PresetLightingSoftness</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ThreeDFormat.PresetMaterial-->
	<element type="property">
		<source id="Excel.ThreeDFormat.PresetMaterial">
			<context kind="class">ThreeDFormat</context>
			<name>PresetMaterial</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ThreeDFormat.PresetThreeDFormat {ReadOnly}-->
	<element type="property">
		<source id="Excel.ThreeDFormat.PresetThreeDFormat">
			<context kind="class">ThreeDFormat</context>
			<name>PresetThreeDFormat</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ThreeDFormat.ResetRotation-->
	<element type="method">
		<source id="Excel.ThreeDFormat.ResetRotation">
			<context kind="class">ThreeDFormat</context>
			<name>ResetRotation</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ThreeDFormat.RotationX-->
	<element type="property">
		<source id="Excel.ThreeDFormat.RotationX">
			<context kind="class">ThreeDFormat</context>
			<name>RotationX</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::ThreeDFormat.RotationY-->
	<element type="property">
		<source id="Excel.ThreeDFormat.RotationY">
			<context kind="class">ThreeDFormat</context>
			<name>RotationY</name>
			<type>Single</type>
		</source>
	</element>
	<!--method::ThreeDFormat.SetExtrusionDirection-->
	<element type="method">
		<source id="Excel.ThreeDFormat.SetExtrusionDirection">
			<context kind="class">ThreeDFormat</context>
			<name>SetExtrusionDirection</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>PresetExtrusionDirection</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ThreeDFormat.SetThreeDFormat-->
	<element type="method">
		<source id="Excel.ThreeDFormat.SetThreeDFormat">
			<context kind="class">ThreeDFormat</context>
			<name>SetThreeDFormat</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>PresetThreeDFormat</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ThreeDFormat.Visible-->
	<element type="property">
		<source id="Excel.ThreeDFormat.Visible">
			<context kind="class">ThreeDFormat</context>
			<name>Visible</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::TickLabels-->
	<element type="class">
		<source id="Excel.TickLabels">
			<name>TickLabels</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::TickLabels.Alignment-->
	<element type="property">
		<source id="Excel.TickLabels.Alignment">
			<context kind="class">TickLabels</context>
			<name>Alignment</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TickLabels.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.TickLabels.Application">
			<context kind="class">TickLabels</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::TickLabels.AutoScaleFont-->
	<element type="property">
		<source id="Excel.TickLabels.AutoScaleFont">
			<context kind="class">TickLabels</context>
			<name>AutoScaleFont</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TickLabels.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.TickLabels.Creator">
			<context kind="class">TickLabels</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::TickLabels.Delete-->
	<element type="method">
		<source id="Excel.TickLabels.Delete">
			<context kind="class">TickLabels</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TickLabels.Depth {ReadOnly}-->
	<element type="property">
		<source id="Excel.TickLabels.Depth">
			<context kind="class">TickLabels</context>
			<name>Depth</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TickLabels.Font {ReadOnly}-->
	<element type="property">
		<source id="Excel.TickLabels.Font">
			<context kind="class">TickLabels</context>
			<name>Font</name>
			<type>Font</type>
		</source>
	</element>
	<!--property::TickLabels.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.TickLabels.Name">
			<context kind="class">TickLabels</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::TickLabels.NumberFormat-->
	<element type="property">
		<source id="Excel.TickLabels.NumberFormat">
			<context kind="class">TickLabels</context>
			<name>NumberFormat</name>
			<type>String</type>
		</source>
	</element>
	<!--property::TickLabels.NumberFormatLinked-->
	<element type="property">
		<source id="Excel.TickLabels.NumberFormatLinked">
			<context kind="class">TickLabels</context>
			<name>NumberFormatLinked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::TickLabels.NumberFormatLocal-->
	<element type="property">
		<source id="Excel.TickLabels.NumberFormatLocal">
			<context kind="class">TickLabels</context>
			<name>NumberFormatLocal</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TickLabels.Offset-->
	<element type="property">
		<source id="Excel.TickLabels.Offset">
			<context kind="class">TickLabels</context>
			<name>Offset</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TickLabels.Orientation-->
	<element type="property">
		<source id="Excel.TickLabels.Orientation">
			<context kind="class">TickLabels</context>
			<name>Orientation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TickLabels.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.TickLabels.Parent">
			<context kind="class">TickLabels</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::TickLabels.ReadingOrder-->
	<element type="property">
		<source id="Excel.TickLabels.ReadingOrder">
			<context kind="class">TickLabels</context>
			<name>ReadingOrder</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::TickLabels.Select-->
	<element type="method">
		<source id="Excel.TickLabels.Select">
			<context kind="class">TickLabels</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Toolbar-->
	<element type="class">
		<source id="Excel.Toolbar">
			<name>Toolbar</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Toolbar.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Toolbar.Application">
			<context kind="class">Toolbar</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Toolbar.BuiltIn {ReadOnly}-->
	<element type="property">
		<source id="Excel.Toolbar.BuiltIn">
			<context kind="class">Toolbar</context>
			<name>BuiltIn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Toolbar.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Toolbar.Creator">
			<context kind="class">Toolbar</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Toolbar.Delete-->
	<element type="method">
		<source id="Excel.Toolbar.Delete">
			<context kind="class">Toolbar</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Toolbar.Height-->
	<element type="property">
		<source id="Excel.Toolbar.Height">
			<context kind="class">Toolbar</context>
			<name>Height</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Toolbar.Left-->
	<element type="property">
		<source id="Excel.Toolbar.Left">
			<context kind="class">Toolbar</context>
			<name>Left</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Toolbar.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.Toolbar.Name">
			<context kind="class">Toolbar</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Toolbar.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Toolbar.Parent">
			<context kind="class">Toolbar</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Toolbar.Position-->
	<element type="property">
		<source id="Excel.Toolbar.Position">
			<context kind="class">Toolbar</context>
			<name>Position</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Toolbar.Protection-->
	<element type="property">
		<source id="Excel.Toolbar.Protection">
			<context kind="class">Toolbar</context>
			<name>Protection</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Toolbar.Reset-->
	<element type="method">
		<source id="Excel.Toolbar.Reset">
			<context kind="class">Toolbar</context>
			<name>Reset</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Toolbar.ToolbarButtons {ReadOnly}-->
	<element type="property">
		<source id="Excel.Toolbar.ToolbarButtons">
			<context kind="class">Toolbar</context>
			<name>ToolbarButtons</name>
			<type>ToolbarButtons</type>
		</source>
	</element>
	<!--property::Toolbar.Top-->
	<element type="property">
		<source id="Excel.Toolbar.Top">
			<context kind="class">Toolbar</context>
			<name>Top</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Toolbar.Visible-->
	<element type="property">
		<source id="Excel.Toolbar.Visible">
			<context kind="class">Toolbar</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Toolbar.Width-->
	<element type="property">
		<source id="Excel.Toolbar.Width">
			<context kind="class">Toolbar</context>
			<name>Width</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ToolbarButton-->
	<element type="class">
		<source id="Excel.ToolbarButton">
			<name>ToolbarButton</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ToolbarButton.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ToolbarButton.Application">
			<context kind="class">ToolbarButton</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ToolbarButton.BuiltIn {ReadOnly}-->
	<element type="property">
		<source id="Excel.ToolbarButton.BuiltIn">
			<context kind="class">ToolbarButton</context>
			<name>BuiltIn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ToolbarButton.BuiltInFace-->
	<element type="property">
		<source id="Excel.ToolbarButton.BuiltInFace">
			<context kind="class">ToolbarButton</context>
			<name>BuiltInFace</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ToolbarButton.Copy-->
	<element type="method">
		<source id="Excel.ToolbarButton.Copy">
			<context kind="class">ToolbarButton</context>
			<name>Copy</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Toolbar</type>
					<name>Toolbar</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Before</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ToolbarButton.CopyFace-->
	<element type="method">
		<source id="Excel.ToolbarButton.CopyFace">
			<context kind="class">ToolbarButton</context>
			<name>CopyFace</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ToolbarButton.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ToolbarButton.Creator">
			<context kind="class">ToolbarButton</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ToolbarButton.Delete-->
	<element type="method">
		<source id="Excel.ToolbarButton.Delete">
			<context kind="class">ToolbarButton</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ToolbarButton.Edit-->
	<element type="method">
		<source id="Excel.ToolbarButton.Edit">
			<context kind="class">ToolbarButton</context>
			<name>Edit</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ToolbarButton.Enabled-->
	<element type="property">
		<source id="Excel.ToolbarButton.Enabled">
			<context kind="class">ToolbarButton</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::ToolbarButton.HelpContextID-->
	<element type="property">
		<source id="Excel.ToolbarButton.HelpContextID">
			<context kind="class">ToolbarButton</context>
			<name>HelpContextID</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ToolbarButton.HelpFile-->
	<element type="property">
		<source id="Excel.ToolbarButton.HelpFile">
			<context kind="class">ToolbarButton</context>
			<name>HelpFile</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ToolbarButton.ID {ReadOnly}-->
	<element type="property">
		<source id="Excel.ToolbarButton.ID">
			<context kind="class">ToolbarButton</context>
			<name>ID</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ToolbarButton.IsGap {ReadOnly}-->
	<element type="property">
		<source id="Excel.ToolbarButton.IsGap">
			<context kind="class">ToolbarButton</context>
			<name>IsGap</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ToolbarButton.Move-->
	<element type="method">
		<source id="Excel.ToolbarButton.Move">
			<context kind="class">ToolbarButton</context>
			<name>Move</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Toolbar</type>
					<name>Toolbar</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Before</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ToolbarButton.Name-->
	<element type="property">
		<source id="Excel.ToolbarButton.Name">
			<context kind="class">ToolbarButton</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ToolbarButton.OnAction-->
	<element type="property">
		<source id="Excel.ToolbarButton.OnAction">
			<context kind="class">ToolbarButton</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ToolbarButton.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ToolbarButton.Parent">
			<context kind="class">ToolbarButton</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::ToolbarButton.PasteFace-->
	<element type="method">
		<source id="Excel.ToolbarButton.PasteFace">
			<context kind="class">ToolbarButton</context>
			<name>PasteFace</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ToolbarButton.Pushed-->
	<element type="property">
		<source id="Excel.ToolbarButton.Pushed">
			<context kind="class">ToolbarButton</context>
			<name>Pushed</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::ToolbarButton.Reset-->
	<element type="method">
		<source id="Excel.ToolbarButton.Reset">
			<context kind="class">ToolbarButton</context>
			<name>Reset</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ToolbarButton.StatusBar-->
	<element type="property">
		<source id="Excel.ToolbarButton.StatusBar">
			<context kind="class">ToolbarButton</context>
			<name>StatusBar</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ToolbarButton.Width-->
	<element type="property">
		<source id="Excel.ToolbarButton.Width">
			<context kind="class">ToolbarButton</context>
			<name>Width</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ToolbarButtons-->
	<element type="class">
		<source id="Excel.ToolbarButtons">
			<name>ToolbarButtons</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ToolbarButtons.Add-->
	<element type="method">
		<source id="Excel.ToolbarButtons.Add">
			<context kind="class">ToolbarButtons</context>
			<name>Add</name>
			<type>ToolbarButton</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Button</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>OnAction</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Pushed</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Enabled</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>StatusBar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HelpFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HelpContextID</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ToolbarButtons.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.ToolbarButtons.Application">
			<context kind="class">ToolbarButtons</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ToolbarButtons.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.ToolbarButtons.Count">
			<context kind="class">ToolbarButtons</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ToolbarButtons.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.ToolbarButtons.Creator">
			<context kind="class">ToolbarButtons</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ToolbarButtons.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.ToolbarButtons.Item">
			<context kind="class">ToolbarButtons</context>
			<name default="true">Item</name>
			<type>ToolbarButton</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ToolbarButtons.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.ToolbarButtons.Parent">
			<context kind="class">ToolbarButtons</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Toolbars-->
	<element type="class">
		<source id="Excel.Toolbars">
			<name>Toolbars</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Toolbars.Add-->
	<element type="method">
		<source id="Excel.Toolbars.Add">
			<context kind="class">Toolbars</context>
			<name>Add</name>
			<type>Toolbar</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Toolbars.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Toolbars.Application">
			<context kind="class">Toolbars</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Toolbars.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Toolbars.Count">
			<context kind="class">Toolbars</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Toolbars.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Toolbars.Creator">
			<context kind="class">Toolbars</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Toolbars.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Toolbars.Item">
			<context kind="class">Toolbars</context>
			<name default="true">Item</name>
			<type>Toolbar</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Toolbars.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Toolbars.Parent">
			<context kind="class">Toolbars</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::TreeviewControl-->
	<element type="class">
		<source id="Excel.TreeviewControl">
			<name>TreeviewControl</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::TreeviewControl.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.TreeviewControl.Application">
			<context kind="class">TreeviewControl</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::TreeviewControl.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.TreeviewControl.Creator">
			<context kind="class">TreeviewControl</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::TreeviewControl.Drilled-->
	<element type="property">
		<source id="Excel.TreeviewControl.Drilled">
			<context kind="class">TreeviewControl</context>
			<name>Drilled</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TreeviewControl.Hidden-->
	<element type="property">
		<source id="Excel.TreeviewControl.Hidden">
			<context kind="class">TreeviewControl</context>
			<name>Hidden</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::TreeviewControl.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.TreeviewControl.Parent">
			<context kind="class">TreeviewControl</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Trendline-->
	<element type="class">
		<source id="Excel.Trendline">
			<name>Trendline</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Trendline.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Trendline.Application">
			<context kind="class">Trendline</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Trendline.Backward-->
	<element type="property">
		<source id="Excel.Trendline.Backward">
			<context kind="class">Trendline</context>
			<name>Backward</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Trendline.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Trendline.Border">
			<context kind="class">Trendline</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::Trendline.ClearFormats-->
	<element type="method">
		<source id="Excel.Trendline.ClearFormats">
			<context kind="class">Trendline</context>
			<name>ClearFormats</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Trendline.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Trendline.Creator">
			<context kind="class">Trendline</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Trendline.DataLabel {ReadOnly}-->
	<element type="property">
		<source id="Excel.Trendline.DataLabel">
			<context kind="class">Trendline</context>
			<name>DataLabel</name>
			<type>DataLabel</type>
		</source>
	</element>
	<!--method::Trendline.Delete-->
	<element type="method">
		<source id="Excel.Trendline.Delete">
			<context kind="class">Trendline</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Trendline.DisplayEquation-->
	<element type="property">
		<source id="Excel.Trendline.DisplayEquation">
			<context kind="class">Trendline</context>
			<name>DisplayEquation</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Trendline.DisplayRSquared-->
	<element type="property">
		<source id="Excel.Trendline.DisplayRSquared">
			<context kind="class">Trendline</context>
			<name>DisplayRSquared</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Trendline.Forward-->
	<element type="property">
		<source id="Excel.Trendline.Forward">
			<context kind="class">Trendline</context>
			<name>Forward</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Trendline.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Trendline.Index">
			<context kind="class">Trendline</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Trendline.Intercept-->
	<element type="property">
		<source id="Excel.Trendline.Intercept">
			<context kind="class">Trendline</context>
			<name>Intercept</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Trendline.InterceptIsAuto-->
	<element type="property">
		<source id="Excel.Trendline.InterceptIsAuto">
			<context kind="class">Trendline</context>
			<name>InterceptIsAuto</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Trendline.Name-->
	<element type="property">
		<source id="Excel.Trendline.Name">
			<context kind="class">Trendline</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Trendline.NameIsAuto-->
	<element type="property">
		<source id="Excel.Trendline.NameIsAuto">
			<context kind="class">Trendline</context>
			<name>NameIsAuto</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Trendline.Order-->
	<element type="property">
		<source id="Excel.Trendline.Order">
			<context kind="class">Trendline</context>
			<name>Order</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Trendline.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Trendline.Parent">
			<context kind="class">Trendline</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Trendline.Period-->
	<element type="property">
		<source id="Excel.Trendline.Period">
			<context kind="class">Trendline</context>
			<name>Period</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Trendline.Select-->
	<element type="method">
		<source id="Excel.Trendline.Select">
			<context kind="class">Trendline</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Trendline.Type-->
	<element type="property">
		<source id="Excel.Trendline.Type">
			<context kind="class">Trendline</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::Trendlines-->
	<element type="class">
		<source id="Excel.Trendlines">
			<name>Trendlines</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Trendlines.Add-->
	<element type="method">
		<source id="Excel.Trendlines.Add">
			<context kind="class">Trendlines</context>
			<name>Add</name>
			<type>Trendline</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Order</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Period</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Forward</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Backward</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Intercept</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DisplayEquation</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DisplayRSquared</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Trendlines.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Trendlines.Application">
			<context kind="class">Trendlines</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Trendlines.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Trendlines.Count">
			<context kind="class">Trendlines</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Trendlines.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Trendlines.Creator">
			<context kind="class">Trendlines</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Trendlines.Item-->
	<element type="method">
		<source id="Excel.Trendlines.Item">
			<context kind="class">Trendlines</context>
			<name>Item</name>
			<type>Trendline</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Trendlines.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Trendlines.Parent">
			<context kind="class">Trendlines</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::UpBars-->
	<element type="class">
		<source id="Excel.UpBars">
			<name>UpBars</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::UpBars.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.UpBars.Application">
			<context kind="class">UpBars</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::UpBars.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.UpBars.Border">
			<context kind="class">UpBars</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--property::UpBars.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.UpBars.Creator">
			<context kind="class">UpBars</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::UpBars.Delete-->
	<element type="method">
		<source id="Excel.UpBars.Delete">
			<context kind="class">UpBars</context>
			<name>Delete</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::UpBars.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.UpBars.Fill">
			<context kind="class">UpBars</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::UpBars.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.UpBars.Interior">
			<context kind="class">UpBars</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::UpBars.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.UpBars.Name">
			<context kind="class">UpBars</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::UpBars.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.UpBars.Parent">
			<context kind="class">UpBars</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::UpBars.Select-->
	<element type="method">
		<source id="Excel.UpBars.Select">
			<context kind="class">UpBars</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::UsedObjects-->
	<element type="class">
		<source id="Excel.UsedObjects">
			<name>UsedObjects</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::UsedObjects.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.UsedObjects.Application">
			<context kind="class">UsedObjects</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::UsedObjects.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.UsedObjects.Count">
			<context kind="class">UsedObjects</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::UsedObjects.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.UsedObjects.Creator">
			<context kind="class">UsedObjects</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::UsedObjects.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.UsedObjects.Item">
			<context kind="class">UsedObjects</context>
			<name default="true">Item</name>
			<type>UsedObject</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::UsedObjects.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.UsedObjects.Parent">
			<context kind="class">UsedObjects</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::UserAccess-->
	<element type="class">
		<source id="Excel.UserAccess">
			<name>UserAccess</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::UserAccess.AllowEdit-->
	<element type="property">
		<source id="Excel.UserAccess.AllowEdit">
			<context kind="class">UserAccess</context>
			<name>AllowEdit</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::UserAccess.Delete-->
	<element type="method">
		<source id="Excel.UserAccess.Delete">
			<context kind="class">UserAccess</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::UserAccess.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.UserAccess.Name">
			<context kind="class">UserAccess</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::UserAccessList-->
	<element type="class">
		<source id="Excel.UserAccessList">
			<name>UserAccessList</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::UserAccessList.Add-->
	<element type="method">
		<source id="Excel.UserAccessList.Add">
			<context kind="class">UserAccessList</context>
			<name>Add</name>
			<type>UserAccess</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>AllowEdit</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::UserAccessList.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.UserAccessList.Count">
			<context kind="class">UserAccessList</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::UserAccessList.DeleteAll-->
	<element type="method">
		<source id="Excel.UserAccessList.DeleteAll">
			<context kind="class">UserAccessList</context>
			<name>DeleteAll</name>
			<type>void</type>
		</source>
	</element>
	<!--property::UserAccessList.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.UserAccessList.Item">
			<context kind="class">UserAccessList</context>
			<name default="true">Item</name>
			<type>UserAccess</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::Validation-->
	<element type="class">
		<source id="Excel.Validation">
			<name>Validation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Validation.Add-->
	<element type="method">
		<source id="Excel.Validation.Add">
			<context kind="class">Validation</context>
			<name>Add</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlertStyle</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Operator</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Formula1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Formula2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Validation.AlertStyle {ReadOnly}-->
	<element type="property">
		<source id="Excel.Validation.AlertStyle">
			<context kind="class">Validation</context>
			<name>AlertStyle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Validation.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Validation.Application">
			<context kind="class">Validation</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Validation.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Validation.Creator">
			<context kind="class">Validation</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Validation.Delete-->
	<element type="method">
		<source id="Excel.Validation.Delete">
			<context kind="class">Validation</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Validation.ErrorMessage-->
	<element type="property">
		<source id="Excel.Validation.ErrorMessage">
			<context kind="class">Validation</context>
			<name>ErrorMessage</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Validation.ErrorTitle-->
	<element type="property">
		<source id="Excel.Validation.ErrorTitle">
			<context kind="class">Validation</context>
			<name>ErrorTitle</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Validation.Formula1 {ReadOnly}-->
	<element type="property">
		<source id="Excel.Validation.Formula1">
			<context kind="class">Validation</context>
			<name>Formula1</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Validation.Formula2 {ReadOnly}-->
	<element type="property">
		<source id="Excel.Validation.Formula2">
			<context kind="class">Validation</context>
			<name>Formula2</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Validation.IgnoreBlank-->
	<element type="property">
		<source id="Excel.Validation.IgnoreBlank">
			<context kind="class">Validation</context>
			<name>IgnoreBlank</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Validation.IMEMode-->
	<element type="property">
		<source id="Excel.Validation.IMEMode">
			<context kind="class">Validation</context>
			<name>IMEMode</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Validation.InCellDropdown-->
	<element type="property">
		<source id="Excel.Validation.InCellDropdown">
			<context kind="class">Validation</context>
			<name>InCellDropdown</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Validation.InputMessage-->
	<element type="property">
		<source id="Excel.Validation.InputMessage">
			<context kind="class">Validation</context>
			<name>InputMessage</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Validation.InputTitle-->
	<element type="property">
		<source id="Excel.Validation.InputTitle">
			<context kind="class">Validation</context>
			<name>InputTitle</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Validation.Modify-->
	<element type="method">
		<source id="Excel.Validation.Modify">
			<context kind="class">Validation</context>
			<name>Modify</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlertStyle</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Operator</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Formula1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Formula2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Validation.Operator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Validation.Operator">
			<context kind="class">Validation</context>
			<name>Operator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Validation.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Validation.Parent">
			<context kind="class">Validation</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Validation.ShowError-->
	<element type="property">
		<source id="Excel.Validation.ShowError">
			<context kind="class">Validation</context>
			<name>ShowError</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Validation.ShowInput-->
	<element type="property">
		<source id="Excel.Validation.ShowInput">
			<context kind="class">Validation</context>
			<name>ShowInput</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Validation.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.Validation.Type">
			<context kind="class">Validation</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Validation.Value {ReadOnly}-->
	<element type="property">
		<source id="Excel.Validation.Value">
			<context kind="class">Validation</context>
			<name>Value</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::VPageBreak-->
	<element type="class">
		<source id="Excel.VPageBreak">
			<name>VPageBreak</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::VPageBreak.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.VPageBreak.Application">
			<context kind="class">VPageBreak</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::VPageBreak.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.VPageBreak.Creator">
			<context kind="class">VPageBreak</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::VPageBreak.Delete-->
	<element type="method">
		<source id="Excel.VPageBreak.Delete">
			<context kind="class">VPageBreak</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--method::VPageBreak.DragOff-->
	<element type="method">
		<source id="Excel.VPageBreak.DragOff">
			<context kind="class">VPageBreak</context>
			<name>DragOff</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Direction</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>RegionIndex</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::VPageBreak.Extent {ReadOnly}-->
	<element type="property">
		<source id="Excel.VPageBreak.Extent">
			<context kind="class">VPageBreak</context>
			<name>Extent</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::VPageBreak.Location {ReadOnly}-->
	<element type="property">
		<source id="Excel.VPageBreak.Location">
			<context kind="class">VPageBreak</context>
			<name>Location</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::VPageBreak.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.VPageBreak.Parent">
			<context kind="class">VPageBreak</context>
			<name>Parent</name>
			<type>Worksheet</type>
		</source>
	</element>
	<!--property::VPageBreak.Type-->
	<element type="property">
		<source id="Excel.VPageBreak.Type">
			<context kind="class">VPageBreak</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::VPageBreaks-->
	<element type="class">
		<source id="Excel.VPageBreaks">
			<name>VPageBreaks</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::VPageBreaks.Add-->
	<element type="method">
		<source id="Excel.VPageBreaks.Add">
			<context kind="class">VPageBreaks</context>
			<name>Add</name>
			<type>VPageBreak</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Before</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::VPageBreaks.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.VPageBreaks.Application">
			<context kind="class">VPageBreaks</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::VPageBreaks.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.VPageBreaks.Count">
			<context kind="class">VPageBreaks</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::VPageBreaks.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.VPageBreaks.Creator">
			<context kind="class">VPageBreaks</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::VPageBreaks.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.VPageBreaks.Item">
			<context kind="class">VPageBreaks</context>
			<name default="true">Item</name>
			<type>VPageBreak</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::VPageBreaks.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.VPageBreaks.Parent">
			<context kind="class">VPageBreaks</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Walls-->
	<element type="class">
		<source id="Excel.Walls">
			<name>Walls</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Walls.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Walls.Application">
			<context kind="class">Walls</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Walls.Border {ReadOnly}-->
	<element type="property">
		<source id="Excel.Walls.Border">
			<context kind="class">Walls</context>
			<name>Border</name>
			<type>Border</type>
		</source>
	</element>
	<!--method::Walls.ClearFormats-->
	<element type="method">
		<source id="Excel.Walls.ClearFormats">
			<context kind="class">Walls</context>
			<name>ClearFormats</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Walls.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Walls.Creator">
			<context kind="class">Walls</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Walls.Fill {ReadOnly}-->
	<element type="property">
		<source id="Excel.Walls.Fill">
			<context kind="class">Walls</context>
			<name>Fill</name>
			<type>ChartFillFormat</type>
		</source>
	</element>
	<!--property::Walls.Interior {ReadOnly}-->
	<element type="property">
		<source id="Excel.Walls.Interior">
			<context kind="class">Walls</context>
			<name>Interior</name>
			<type>Interior</type>
		</source>
	</element>
	<!--property::Walls.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.Walls.Name">
			<context kind="class">Walls</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Walls.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Walls.Parent">
			<context kind="class">Walls</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Walls.Paste-->
	<element type="method">
		<source id="Excel.Walls.Paste">
			<context kind="class">Walls</context>
			<name>Paste</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Walls.PictureType-->
	<element type="property">
		<source id="Excel.Walls.PictureType">
			<context kind="class">Walls</context>
			<name>PictureType</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Walls.PictureUnit-->
	<element type="property">
		<source id="Excel.Walls.PictureUnit">
			<context kind="class">Walls</context>
			<name>PictureUnit</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Walls.Select-->
	<element type="method">
		<source id="Excel.Walls.Select">
			<context kind="class">Walls</context>
			<name>Select</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Watch-->
	<element type="class">
		<source id="Excel.Watch">
			<name>Watch</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Watch.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Watch.Application">
			<context kind="class">Watch</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Watch.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Watch.Creator">
			<context kind="class">Watch</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Watch.Delete-->
	<element type="method">
		<source id="Excel.Watch.Delete">
			<context kind="class">Watch</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Watch.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Watch.Parent">
			<context kind="class">Watch</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Watch.Source {ReadOnly}-->
	<element type="property">
		<source id="Excel.Watch.Source">
			<context kind="class">Watch</context>
			<name>Source</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Watches-->
	<element type="class">
		<source id="Excel.Watches">
			<name>Watches</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Watches.Add-->
	<element type="method">
		<source id="Excel.Watches.Add">
			<context kind="class">Watches</context>
			<name>Add</name>
			<type>Watch</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Source</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Watches.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Watches.Application">
			<context kind="class">Watches</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Watches.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Watches.Count">
			<context kind="class">Watches</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Watches.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Watches.Creator">
			<context kind="class">Watches</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Watches.Delete-->
	<element type="method">
		<source id="Excel.Watches.Delete">
			<context kind="class">Watches</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Watches.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Watches.Item">
			<context kind="class">Watches</context>
			<name default="true">Item</name>
			<type>Watch</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Watches.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Watches.Parent">
			<context kind="class">Watches</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::WebOptions-->
	<element type="class">
		<source id="Excel.WebOptions">
			<name>WebOptions</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::WebOptions.AllowPNG-->
	<element type="property">
		<source id="Excel.WebOptions.AllowPNG">
			<context kind="class">WebOptions</context>
			<name>AllowPNG</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::WebOptions.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.WebOptions.Application">
			<context kind="class">WebOptions</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::WebOptions.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.WebOptions.Creator">
			<context kind="class">WebOptions</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::WebOptions.DownloadComponents-->
	<element type="property">
		<source id="Excel.WebOptions.DownloadComponents">
			<context kind="class">WebOptions</context>
			<name>DownloadComponents</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::WebOptions.Encoding-->
	<element type="property">
		<source id="Excel.WebOptions.Encoding">
			<context kind="class">WebOptions</context>
			<name>Encoding</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::WebOptions.FolderSuffix {ReadOnly}-->
	<element type="property">
		<source id="Excel.WebOptions.FolderSuffix">
			<context kind="class">WebOptions</context>
			<name>FolderSuffix</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebOptions.LocationOfComponents-->
	<element type="property">
		<source id="Excel.WebOptions.LocationOfComponents">
			<context kind="class">WebOptions</context>
			<name>LocationOfComponents</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebOptions.OrganizeInFolder-->
	<element type="property">
		<source id="Excel.WebOptions.OrganizeInFolder">
			<context kind="class">WebOptions</context>
			<name>OrganizeInFolder</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::WebOptions.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.WebOptions.Parent">
			<context kind="class">WebOptions</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::WebOptions.PixelsPerInch-->
	<element type="property">
		<source id="Excel.WebOptions.PixelsPerInch">
			<context kind="class">WebOptions</context>
			<name>PixelsPerInch</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::WebOptions.RelyOnCSS-->
	<element type="property">
		<source id="Excel.WebOptions.RelyOnCSS">
			<context kind="class">WebOptions</context>
			<name>RelyOnCSS</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::WebOptions.RelyOnVML-->
	<element type="property">
		<source id="Excel.WebOptions.RelyOnVML">
			<context kind="class">WebOptions</context>
			<name>RelyOnVML</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::WebOptions.ScreenSize-->
	<element type="property">
		<source id="Excel.WebOptions.ScreenSize">
			<context kind="class">WebOptions</context>
			<name>ScreenSize</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::WebOptions.TargetBrowser-->
	<element type="property">
		<source id="Excel.WebOptions.TargetBrowser">
			<context kind="class">WebOptions</context>
			<name>TargetBrowser</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::WebOptions.UseDefaultFolderSuffix-->
	<element type="method">
		<source id="Excel.WebOptions.UseDefaultFolderSuffix">
			<context kind="class">WebOptions</context>
			<name>UseDefaultFolderSuffix</name>
			<type>void</type>
		</source>
	</element>
	<!--property::WebOptions.UseLongFileNames-->
	<element type="property">
		<source id="Excel.WebOptions.UseLongFileNames">
			<context kind="class">WebOptions</context>
			<name>UseLongFileNames</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::Window-->
	<element type="class">
		<source id="Excel.Window">
			<name>Window</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Window.Activate-->
	<element type="method">
		<source id="Excel.Window.Activate">
			<context kind="class">Window</context>
			<name>Activate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Window.ActivateNext-->
	<element type="method">
		<source id="Excel.Window.ActivateNext">
			<context kind="class">Window</context>
			<name>ActivateNext</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Window.ActivatePrevious-->
	<element type="method">
		<source id="Excel.Window.ActivatePrevious">
			<context kind="class">Window</context>
			<name>ActivatePrevious</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Window.ActiveCell {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.ActiveCell">
			<context kind="class">Window</context>
			<name>ActiveCell</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Window.ActiveChart {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.ActiveChart">
			<context kind="class">Window</context>
			<name>ActiveChart</name>
			<type>Chart</type>
		</source>
	</element>
	<!--property::Window.ActivePane {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.ActivePane">
			<context kind="class">Window</context>
			<name>ActivePane</name>
			<type>Pane</type>
		</source>
	</element>
	<!--property::Window.ActiveSheet {ReadOnly}(ADAPTED)-->
	<element type="property">
		<source id="Excel.Window.ActiveSheet">
			<context kind="class">Window</context>
			<name>ActiveSheet</name>
			<type>
				<!-- two subclasses of Sheet -->
				<choice>Chart</choice>
				<choice>Worksheet</choice>
			</type>
		</source>
	</element>
	<!--property::Window.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.Application">
			<context kind="class">Window</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Window.Caption-->
	<element type="property">
		<source id="Excel.Window.Caption">
			<context kind="class">Window</context>
			<name>Caption</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Window.Close-->
	<element type="method">
		<source id="Excel.Window.Close">
			<context kind="class">Window</context>
			<name>Close</name>
			<type>boolean</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>SaveChanges</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RouteWorkbook</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Window.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.Creator">
			<context kind="class">Window</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Window.DisplayFormulas-->
	<element type="property">
		<source id="Excel.Window.DisplayFormulas">
			<context kind="class">Window</context>
			<name>DisplayFormulas</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Window.DisplayGridlines-->
	<element type="property">
		<source id="Excel.Window.DisplayGridlines">
			<context kind="class">Window</context>
			<name>DisplayGridlines</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Window.DisplayHeadings-->
	<element type="property">
		<source id="Excel.Window.DisplayHeadings">
			<context kind="class">Window</context>
			<name>DisplayHeadings</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Window.DisplayHorizontalScrollBar-->
	<element type="property">
		<source id="Excel.Window.DisplayHorizontalScrollBar">
			<context kind="class">Window</context>
			<name>DisplayHorizontalScrollBar</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Window.DisplayOutline-->
	<element type="property">
		<source id="Excel.Window.DisplayOutline">
			<context kind="class">Window</context>
			<name>DisplayOutline</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Window.DisplayRightToLeft-->
	<element type="property">
		<source id="Excel.Window.DisplayRightToLeft">
			<context kind="class">Window</context>
			<name>DisplayRightToLeft</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Window.DisplayVerticalScrollBar-->
	<element type="property">
		<source id="Excel.Window.DisplayVerticalScrollBar">
			<context kind="class">Window</context>
			<name>DisplayVerticalScrollBar</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Window.DisplayWorkbookTabs-->
	<element type="property">
		<source id="Excel.Window.DisplayWorkbookTabs">
			<context kind="class">Window</context>
			<name>DisplayWorkbookTabs</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Window.DisplayZeros-->
	<element type="property">
		<source id="Excel.Window.DisplayZeros">
			<context kind="class">Window</context>
			<name>DisplayZeros</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Window.EnableResize-->
	<element type="property">
		<source id="Excel.Window.EnableResize">
			<context kind="class">Window</context>
			<name>EnableResize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Window.FreezePanes-->
	<element type="property">
		<source id="Excel.Window.FreezePanes">
			<context kind="class">Window</context>
			<name>FreezePanes</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Window.GridlineColor-->
	<element type="property">
		<source id="Excel.Window.GridlineColor">
			<context kind="class">Window</context>
			<name>GridlineColor</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Window.GridlineColorIndex-->
	<element type="property">
		<source id="Excel.Window.GridlineColorIndex">
			<context kind="class">Window</context>
			<name>GridlineColorIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Window.Height-->
	<element type="property">
		<source id="Excel.Window.Height">
			<context kind="class">Window</context>
			<name>Height</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Window.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.Index">
			<context kind="class">Window</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Window.LargeScroll-->
	<element type="method">
		<source id="Excel.Window.LargeScroll">
			<context kind="class">Window</context>
			<name>LargeScroll</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Down</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Up</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ToRight</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ToLeft</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Window.Left-->
	<element type="property">
		<source id="Excel.Window.Left">
			<context kind="class">Window</context>
			<name>Left</name>
			<type>double</type>
		</source>
	</element>
	<!--method::Window.NewWindow-->
	<element type="method">
		<source id="Excel.Window.NewWindow">
			<context kind="class">Window</context>
			<name>NewWindow</name>
			<type>Window</type>
		</source>
	</element>
	<!--property::Window.OnWindow-->
	<element type="property">
		<source id="Excel.Window.OnWindow">
			<context kind="class">Window</context>
			<name>OnWindow</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Window.Panes {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.Panes">
			<context kind="class">Window</context>
			<name>Panes</name>
			<type>Panes</type>
		</source>
	</element>
	<!--property::Window.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.Parent">
			<context kind="class">Window</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Window.PointsToScreenPixelsX-->
	<element type="method">
		<source id="Excel.Window.PointsToScreenPixelsX">
			<context kind="class">Window</context>
			<name>PointsToScreenPixelsX</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Points</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Window.PointsToScreenPixelsY-->
	<element type="method">
		<source id="Excel.Window.PointsToScreenPixelsY">
			<context kind="class">Window</context>
			<name>PointsToScreenPixelsY</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Points</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Window.PrintOut-->
	<element type="method">
		<source id="Excel.Window.PrintOut">
			<context kind="class">Window</context>
			<name>PrintOut</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>From</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>To</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Copies</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Preview</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ActivePrinter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrintToFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Collate</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrToFileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Window.PrintPreview-->
	<element type="method">
		<source id="Excel.Window.PrintPreview">
			<context kind="class">Window</context>
			<name>PrintPreview</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>EnableChanges</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Window.RangeFromPoint-->
	<element type="method">
		<source id="Excel.Window.RangeFromPoint">
			<context kind="class">Window</context>
			<name>RangeFromPoint</name>
			<type>Object</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>x</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>y</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Window.RangeSelection {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.RangeSelection">
			<context kind="class">Window</context>
			<name>RangeSelection</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Window.ScrollColumn-->
	<element type="property">
		<source id="Excel.Window.ScrollColumn">
			<context kind="class">Window</context>
			<name>ScrollColumn</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Window.ScrollIntoView-->
	<element type="method">
		<source id="Excel.Window.ScrollIntoView">
			<context kind="class">Window</context>
			<name>ScrollIntoView</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Height</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Start</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Window.ScrollRow-->
	<element type="property">
		<source id="Excel.Window.ScrollRow">
			<context kind="class">Window</context>
			<name>ScrollRow</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Window.ScrollWorkbookTabs-->
	<element type="method">
		<source id="Excel.Window.ScrollWorkbookTabs">
			<context kind="class">Window</context>
			<name>ScrollWorkbookTabs</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Sheets</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Position</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Window.SelectedSheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.SelectedSheets">
			<context kind="class">Window</context>
			<name>SelectedSheets</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--property::Window.Selection {ReadOnly}(ADAPTED)-->
	<element type="property">
		<source id="Excel.Window.Selection">
			<context kind="class">Window</context>
			<name>Selection</name>
			<type>Object
			<choice>Range</choice>
			<choice>Shape</choice></type>
		</source>
	</element>
	<!--method::Window.SmallScroll-->
	<element type="method">
		<source id="Excel.Window.SmallScroll">
			<context kind="class">Window</context>
			<name>SmallScroll</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Down</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Up</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ToRight</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ToLeft</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Window.Split-->
	<element type="property">
		<source id="Excel.Window.Split">
			<context kind="class">Window</context>
			<name>Split</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Window.SplitColumn-->
	<element type="property">
		<source id="Excel.Window.SplitColumn">
			<context kind="class">Window</context>
			<name>SplitColumn</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Window.SplitHorizontal-->
	<element type="property">
		<source id="Excel.Window.SplitHorizontal">
			<context kind="class">Window</context>
			<name>SplitHorizontal</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Window.SplitRow-->
	<element type="property">
		<source id="Excel.Window.SplitRow">
			<context kind="class">Window</context>
			<name>SplitRow</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Window.SplitVertical-->
	<element type="property">
		<source id="Excel.Window.SplitVertical">
			<context kind="class">Window</context>
			<name>SplitVertical</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Window.TabRatio-->
	<element type="property">
		<source id="Excel.Window.TabRatio">
			<context kind="class">Window</context>
			<name>TabRatio</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Window.Top-->
	<element type="property">
		<source id="Excel.Window.Top">
			<context kind="class">Window</context>
			<name>Top</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Window.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.Type">
			<context kind="class">Window</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Window.UsableHeight {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.UsableHeight">
			<context kind="class">Window</context>
			<name>UsableHeight</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Window.UsableWidth {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.UsableWidth">
			<context kind="class">Window</context>
			<name>UsableWidth</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Window.View-->
	<element type="property">
		<source id="Excel.Window.View">
			<context kind="class">Window</context>
			<name>View</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Window.Visible-->
	<element type="property">
		<source id="Excel.Window.Visible">
			<context kind="class">Window</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Window.VisibleRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.VisibleRange">
			<context kind="class">Window</context>
			<name>VisibleRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Window.Width-->
	<element type="property">
		<source id="Excel.Window.Width">
			<context kind="class">Window</context>
			<name>Width</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Window.WindowNumber {ReadOnly}-->
	<element type="property">
		<source id="Excel.Window.WindowNumber">
			<context kind="class">Window</context>
			<name>WindowNumber</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Window.WindowState-->
	<element type="property">
		<source id="Excel.Window.WindowState">
			<context kind="class">Window</context>
			<name>WindowState</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Window.Zoom-->
	<element type="property">
		<source id="Excel.Window.Zoom">
			<context kind="class">Window</context>
			<name>Zoom</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::Windows-->
	<element type="class">
		<source id="Excel.Windows">
			<name>Windows</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Windows.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Windows.Application">
			<context kind="class">Windows</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Windows.Arrange-->
	<element type="method">
		<source id="Excel.Windows.Arrange">
			<context kind="class">Windows</context>
			<name>Arrange</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>ArrangeStyle</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ActiveWorkbook</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SyncHorizontal</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SyncVertical</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Windows.BreakSideBySide-->
	<element type="method">
		<source id="Excel.Windows.BreakSideBySide">
			<context kind="class">Windows</context>
			<name>BreakSideBySide</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Windows.CompareSideBySideWith-->
	<element type="method">
		<source id="Excel.Windows.CompareSideBySideWith">
			<context kind="class">Windows</context>
			<name>CompareSideBySideWith</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>WindowName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Windows.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Windows.Count">
			<context kind="class">Windows</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Windows.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Windows.Creator">
			<context kind="class">Windows</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Windows.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Windows.Item">
			<context kind="class">Windows</context>
			<name default="true">Item</name>
			<type>Window</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Windows.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Windows.Parent">
			<context kind="class">Windows</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Windows.ResetPositionsSideBySide-->
	<element type="method">
		<source id="Excel.Windows.ResetPositionsSideBySide">
			<context kind="class">Windows</context>
			<name>ResetPositionsSideBySide</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Windows.SyncScrollingSideBySide-->
	<element type="property">
		<source id="Excel.Windows.SyncScrollingSideBySide">
			<context kind="class">Windows</context>
			<name>SyncScrollingSideBySide</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::Workbook-->
	<element type="class">
		<source id="Excel.Workbook">
			<name>Workbook</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Workbook.AcceptAllChanges-->
	<element type="method">
		<source id="Excel.Workbook.AcceptAllChanges">
			<context kind="class">Workbook</context>
			<name>AcceptAllChanges</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>When</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Who</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Where</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.AcceptLabelsInFormulas-->
	<element type="property">
		<source id="Excel.Workbook.AcceptLabelsInFormulas">
			<context kind="class">Workbook</context>
			<name>AcceptLabelsInFormulas</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Workbook.Activate-->
	<element type="method">
		<source id="Excel.Workbook.Activate">
			<context kind="class">Workbook</context>
			<name>Activate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Workbook.ActiveChart {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.ActiveChart">
			<context kind="class">Workbook</context>
			<name>ActiveChart</name>
			<type>Chart</type>
		</source>
	</element>
	<!--property::Workbook.ActiveSheet {ReadOnly}(ADAPTED)-->
	<element type="property">
		<source id="Excel.Workbook.ActiveSheet">
			<context kind="class">Workbook</context>
			<name>ActiveSheet</name>
			<type>
				<!-- two subclasses of Sheet -->
				<choice>Chart</choice>
				<choice>Worksheet</choice>
			</type>
		</source>
	</element>
	<!--method::Workbook.AddinInstall-->
	<element type="method">
		<source id="Excel.Workbook.AddinInstall">
			<context kind="class">Workbook</context>
			<name>AddinInstall</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Workbook.AddinUninstall-->
	<element type="method">
		<source id="Excel.Workbook.AddinUninstall">
			<context kind="class">Workbook</context>
			<name>AddinUninstall</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Workbook.AddToFavorites-->
	<element type="method">
		<source id="Excel.Workbook.AddToFavorites">
			<context kind="class">Workbook</context>
			<name>AddToFavorites</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Workbook.AfterXmlExport-->
	<element type="method">
		<source id="Excel.Workbook.AfterXmlExport">
			<context kind="class">Workbook</context>
			<name>AfterXmlExport</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>XmlMap</type>
					<name>Map</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Url</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Result</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.AfterXmlImport-->
	<element type="method">
		<source id="Excel.Workbook.AfterXmlImport">
			<context kind="class">Workbook</context>
			<name>AfterXmlImport</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>XmlMap</type>
					<name>Map</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>IsRefresh</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Result</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Application">
			<context kind="class">Workbook</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Workbook.Author-->
	<element type="property">
		<source id="Excel.Workbook.Author">
			<context kind="class">Workbook</context>
			<name>Author</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.AutoUpdateFrequency-->
	<element type="property">
		<source id="Excel.Workbook.AutoUpdateFrequency">
			<context kind="class">Workbook</context>
			<name>AutoUpdateFrequency</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Workbook.AutoUpdateSaveChanges-->
	<element type="property">
		<source id="Excel.Workbook.AutoUpdateSaveChanges">
			<context kind="class">Workbook</context>
			<name>AutoUpdateSaveChanges</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Workbook.BeforeClose-->
	<element type="method">
		<source id="Excel.Workbook.BeforeClose">
			<context kind="class">Workbook</context>
			<name>BeforeClose</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.BeforePrint-->
	<element type="method">
		<source id="Excel.Workbook.BeforePrint">
			<context kind="class">Workbook</context>
			<name>BeforePrint</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.BeforeSave-->
	<element type="method">
		<source id="Excel.Workbook.BeforeSave">
			<context kind="class">Workbook</context>
			<name>BeforeSave</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>boolean</type>
					<name>SaveAsUI</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.BeforeXmlExport-->
	<element type="method">
		<source id="Excel.Workbook.BeforeXmlExport">
			<context kind="class">Workbook</context>
			<name>BeforeXmlExport</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>XmlMap</type>
					<name>Map</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Url</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.BeforeXmlImport-->
	<element type="method">
		<source id="Excel.Workbook.BeforeXmlImport">
			<context kind="class">Workbook</context>
			<name>BeforeXmlImport</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>XmlMap</type>
					<name>Map</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Url</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>IsRefresh</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.BreakLink-->
	<element type="method">
		<source id="Excel.Workbook.BreakLink">
			<context kind="class">Workbook</context>
			<name>BreakLink</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.BuiltinDocumentProperties {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.BuiltinDocumentProperties">
			<context kind="class">Workbook</context>
			<name>BuiltinDocumentProperties</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Workbook.CalculationVersion {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.CalculationVersion">
			<context kind="class">Workbook</context>
			<name>CalculationVersion</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Workbook.CanCheckIn-->
	<element type="method">
		<source id="Excel.Workbook.CanCheckIn">
			<context kind="class">Workbook</context>
			<name>CanCheckIn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Workbook.ChangeFileAccess-->
	<element type="method">
		<source id="Excel.Workbook.ChangeFileAccess">
			<context kind="class">Workbook</context>
			<name>ChangeFileAccess</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Mode</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>WritePassword</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Notify</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.ChangeHistoryDuration-->
	<element type="property">
		<source id="Excel.Workbook.ChangeHistoryDuration">
			<context kind="class">Workbook</context>
			<name>ChangeHistoryDuration</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Workbook.ChangeLink-->
	<element type="method">
		<source id="Excel.Workbook.ChangeLink">
			<context kind="class">Workbook</context>
			<name>ChangeLink</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>NewName</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.Charts {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Charts">
			<context kind="class">Workbook</context>
			<name>Charts</name>
			<type>Charts</type>
		</source>
	</element>
	<!--method::Workbook.CheckIn-->
	<element type="method">
		<source id="Excel.Workbook.CheckIn">
			<context kind="class">Workbook</context>
			<name>CheckIn</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>SaveChanges</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Comments</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MakePublic</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.Close-->
	<element type="method">
		<source id="Excel.Workbook.Close">
			<context kind="class">Workbook</context>
			<name>Close</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>SaveChanges</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RouteWorkbook</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.CodeName {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.CodeName">
			<context kind="class">Workbook</context>
			<name>CodeName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.Colors-->
	<element type="property">
		<source id="Excel.Workbook.Colors">
			<context kind="class">Workbook</context>
			<name>Colors</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.CommandBars {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.CommandBars">
			<context kind="class">Workbook</context>
			<name>CommandBars</name>
			<type>CommandBars</type>
		</source>
	</element>
	<!--property::Workbook.Comments-->
	<element type="property">
		<source id="Excel.Workbook.Comments">
			<context kind="class">Workbook</context>
			<name>Comments</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.ConflictResolution-->
	<element type="property">
		<source id="Excel.Workbook.ConflictResolution">
			<context kind="class">Workbook</context>
			<name>ConflictResolution</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Workbook.Container {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Container">
			<context kind="class">Workbook</context>
			<name>Container</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Workbook.CreateBackup {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.CreateBackup">
			<context kind="class">Workbook</context>
			<name>CreateBackup</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Creator">
			<context kind="class">Workbook</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Workbook.CustomDocumentProperties {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.CustomDocumentProperties">
			<context kind="class">Workbook</context>
			<name>CustomDocumentProperties</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Workbook.CustomViews {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.CustomViews">
			<context kind="class">Workbook</context>
			<name>CustomViews</name>
			<type>CustomViews</type>
		</source>
	</element>
	<!--property::Workbook.Date1904-->
	<element type="property">
		<source id="Excel.Workbook.Date1904">
			<context kind="class">Workbook</context>
			<name>Date1904</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Workbook.Deactivate-->
	<element type="method">
		<source id="Excel.Workbook.Deactivate">
			<context kind="class">Workbook</context>
			<name>Deactivate</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Workbook.DeleteNumberFormat-->
	<element type="method">
		<source id="Excel.Workbook.DeleteNumberFormat">
			<context kind="class">Workbook</context>
			<name>DeleteNumberFormat</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>NumberFormat</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.DialogSheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.DialogSheets">
			<context kind="class">Workbook</context>
			<name>DialogSheets</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--property::Workbook.DisplayDrawingObjects-->
	<element type="property">
		<source id="Excel.Workbook.DisplayDrawingObjects">
			<context kind="class">Workbook</context>
			<name>DisplayDrawingObjects</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Workbook.DisplayInkComments-->
	<element type="property">
		<source id="Excel.Workbook.DisplayInkComments">
			<context kind="class">Workbook</context>
			<name>DisplayInkComments</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.DocumentLibraryVersions {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.DocumentLibraryVersions">
			<context kind="class">Workbook</context>
			<name>DocumentLibraryVersions</name>
			<type>DocumentLibraryVersions</type>
		</source>
	</element>
	<!--property::Workbook.EnableAutoRecover-->
	<element type="property">
		<source id="Excel.Workbook.EnableAutoRecover">
			<context kind="class">Workbook</context>
			<name>EnableAutoRecover</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Workbook.EndReview-->
	<element type="method">
		<source id="Excel.Workbook.EndReview">
			<context kind="class">Workbook</context>
			<name>EndReview</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Workbook.EnvelopeVisible-->
	<element type="property">
		<source id="Excel.Workbook.EnvelopeVisible">
			<context kind="class">Workbook</context>
			<name>EnvelopeVisible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.Excel4IntlMacroSheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Excel4IntlMacroSheets">
			<context kind="class">Workbook</context>
			<name>Excel4IntlMacroSheets</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--property::Workbook.Excel4MacroSheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Excel4MacroSheets">
			<context kind="class">Workbook</context>
			<name>Excel4MacroSheets</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--method::Workbook.ExclusiveAccess-->
	<element type="method">
		<source id="Excel.Workbook.ExclusiveAccess">
			<context kind="class">Workbook</context>
			<name>ExclusiveAccess</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.FileFormat {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.FileFormat">
			<context kind="class">Workbook</context>
			<name>FileFormat</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Workbook.FollowHyperlink-->
	<element type="method">
		<source id="Excel.Workbook.FollowHyperlink">
			<context kind="class">Workbook</context>
			<name>FollowHyperlink</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Address</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SubAddress</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>NewWindow</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AddHistory</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ExtraInfo</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Method</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HeaderInfo</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.ForwardMailer-->
	<element type="method">
		<source id="Excel.Workbook.ForwardMailer">
			<context kind="class">Workbook</context>
			<name>ForwardMailer</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Workbook.FullName {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.FullName">
			<context kind="class">Workbook</context>
			<name>FullName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.FullNameURLEncoded {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.FullNameURLEncoded">
			<context kind="class">Workbook</context>
			<name>FullNameURLEncoded</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.HasMailer-->
	<element type="property">
		<source id="Excel.Workbook.HasMailer">
			<context kind="class">Workbook</context>
			<name>HasMailer</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.HasPassword {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.HasPassword">
			<context kind="class">Workbook</context>
			<name>HasPassword</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.HasRoutingSlip-->
	<element type="property">
		<source id="Excel.Workbook.HasRoutingSlip">
			<context kind="class">Workbook</context>
			<name>HasRoutingSlip</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.HighlightChangesOnScreen-->
	<element type="property">
		<source id="Excel.Workbook.HighlightChangesOnScreen">
			<context kind="class">Workbook</context>
			<name>HighlightChangesOnScreen</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Workbook.HighlightChangesOptions-->
	<element type="method">
		<source id="Excel.Workbook.HighlightChangesOptions">
			<context kind="class">Workbook</context>
			<name>HighlightChangesOptions</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>When</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Who</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Where</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.HTMLProject {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.HTMLProject">
			<context kind="class">Workbook</context>
			<name>HTMLProject</name>
			<type>HTMLProject</type>
		</source>
	</element>
	<!--property::Workbook.InactiveListBorderVisible-->
	<element type="property">
		<source id="Excel.Workbook.InactiveListBorderVisible">
			<context kind="class">Workbook</context>
			<name>InactiveListBorderVisible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.IsAddin-->
	<element type="property">
		<source id="Excel.Workbook.IsAddin">
			<context kind="class">Workbook</context>
			<name>IsAddin</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.IsInplace {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.IsInplace">
			<context kind="class">Workbook</context>
			<name>IsInplace</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.KeepChangeHistory-->
	<element type="property">
		<source id="Excel.Workbook.KeepChangeHistory">
			<context kind="class">Workbook</context>
			<name>KeepChangeHistory</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.Keywords-->
	<element type="property">
		<source id="Excel.Workbook.Keywords">
			<context kind="class">Workbook</context>
			<name>Keywords</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Workbook.LinkInfo-->
	<element type="method">
		<source id="Excel.Workbook.LinkInfo">
			<context kind="class">Workbook</context>
			<name>LinkInfo</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>LinkInfo</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>EditionRef</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.LinkSources-->
	<element type="method">
		<source id="Excel.Workbook.LinkSources">
			<context kind="class">Workbook</context>
			<name>LinkSources</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.ListChangesOnNewSheet-->
	<element type="property">
		<source id="Excel.Workbook.ListChangesOnNewSheet">
			<context kind="class">Workbook</context>
			<name>ListChangesOnNewSheet</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.Mailer {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Mailer">
			<context kind="class">Workbook</context>
			<name>Mailer</name>
			<type>Mailer</type>
		</source>
	</element>
	<!--method::Workbook.MergeWorkbook-->
	<element type="method">
		<source id="Excel.Workbook.MergeWorkbook">
			<context kind="class">Workbook</context>
			<name>MergeWorkbook</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Filename</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.Modules {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Modules">
			<context kind="class">Workbook</context>
			<name>Modules</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--property::Workbook.MultiUserEditing {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.MultiUserEditing">
			<context kind="class">Workbook</context>
			<name>MultiUserEditing</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Name">
			<context kind="class">Workbook</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.Names {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Names">
			<context kind="class">Workbook</context>
			<name>Names</name>
			<type>Names</type>
		</source>
	</element>
	<!--method::Workbook.NewSheet-->
	<element type="method">
		<source id="Excel.Workbook.NewSheet">
			<context kind="class">Workbook</context>
			<name>NewSheet</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.NewWindow-->
	<element type="method">
		<source id="Excel.Workbook.NewWindow">
			<context kind="class">Workbook</context>
			<name>NewWindow</name>
			<type>Window</type>
		</source>
	</element>
	<!--property::Workbook.OnSave-->
	<element type="property">
		<source id="Excel.Workbook.OnSave">
			<context kind="class">Workbook</context>
			<name>OnSave</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.OnSheetActivate-->
	<element type="property">
		<source id="Excel.Workbook.OnSheetActivate">
			<context kind="class">Workbook</context>
			<name>OnSheetActivate</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.OnSheetDeactivate-->
	<element type="property">
		<source id="Excel.Workbook.OnSheetDeactivate">
			<context kind="class">Workbook</context>
			<name>OnSheetDeactivate</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Workbook.Open-->
	<element type="method">
		<source id="Excel.Workbook.Open">
			<context kind="class">Workbook</context>
			<name>Open</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Workbook.OpenLinks-->
	<element type="method">
		<source id="Excel.Workbook.OpenLinks">
			<context kind="class">Workbook</context>
			<name>OpenLinks</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReadOnly</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Parent">
			<context kind="class">Workbook</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Workbook.Password-->
	<element type="property">
		<source id="Excel.Workbook.Password">
			<context kind="class">Workbook</context>
			<name>Password</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.PasswordEncryptionAlgorithm {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.PasswordEncryptionAlgorithm">
			<context kind="class">Workbook</context>
			<name>PasswordEncryptionAlgorithm</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.PasswordEncryptionFileProperties {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.PasswordEncryptionFileProperties">
			<context kind="class">Workbook</context>
			<name>PasswordEncryptionFileProperties</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.PasswordEncryptionKeyLength {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.PasswordEncryptionKeyLength">
			<context kind="class">Workbook</context>
			<name>PasswordEncryptionKeyLength</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Workbook.PasswordEncryptionProvider {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.PasswordEncryptionProvider">
			<context kind="class">Workbook</context>
			<name>PasswordEncryptionProvider</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.Path {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Path">
			<context kind="class">Workbook</context>
			<name>Path</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.Permission {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Permission">
			<context kind="class">Workbook</context>
			<name>Permission</name>
			<type>Permission</type>
		</source>
	</element>
	<!--property::Workbook.PersonalViewListSettings-->
	<element type="property">
		<source id="Excel.Workbook.PersonalViewListSettings">
			<context kind="class">Workbook</context>
			<name>PersonalViewListSettings</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.PersonalViewPrintSettings-->
	<element type="property">
		<source id="Excel.Workbook.PersonalViewPrintSettings">
			<context kind="class">Workbook</context>
			<name>PersonalViewPrintSettings</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Workbook.PivotCaches-->
	<element type="method">
		<source id="Excel.Workbook.PivotCaches">
			<context kind="class">Workbook</context>
			<name>PivotCaches</name>
			<type>PivotCaches</type>
		</source>
	</element>
	<!--method::Workbook.PivotTableCloseConnection-->
	<element type="method">
		<source id="Excel.Workbook.PivotTableCloseConnection">
			<context kind="class">Workbook</context>
			<name>PivotTableCloseConnection</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>PivotTable</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.PivotTableOpenConnection-->
	<element type="method">
		<source id="Excel.Workbook.PivotTableOpenConnection">
			<context kind="class">Workbook</context>
			<name>PivotTableOpenConnection</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>PivotTable</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.PivotTableWizard-->
	<element type="method">
		<source id="Excel.Workbook.PivotTableWizard">
			<context kind="class">Workbook</context>
			<name>PivotTableWizard</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>SourceType</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SourceData</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TableDestination</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TableName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RowGrand</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ColumnGrand</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SaveData</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HasAutoFormat</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AutoPage</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Reserved</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>BackgroundQuery</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>OptimizeCache</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PageFieldOrder</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PageFieldWrapCount</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReadData</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Connection</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.Post-->
	<element type="method">
		<source id="Excel.Workbook.Post">
			<context kind="class">Workbook</context>
			<name>Post</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>DestName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.PrecisionAsDisplayed-->
	<element type="property">
		<source id="Excel.Workbook.PrecisionAsDisplayed">
			<context kind="class">Workbook</context>
			<name>PrecisionAsDisplayed</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Workbook.PrintOut-->
	<element type="method">
		<source id="Excel.Workbook.PrintOut">
			<context kind="class">Workbook</context>
			<name>PrintOut</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>From</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>To</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Copies</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Preview</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ActivePrinter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrintToFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Collate</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrToFileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.PrintPreview-->
	<element type="method">
		<source id="Excel.Workbook.PrintPreview">
			<context kind="class">Workbook</context>
			<name>PrintPreview</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>EnableChanges</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.Protect-->
	<element type="method">
		<source id="Excel.Workbook.Protect">
			<context kind="class">Workbook</context>
			<name>Protect</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Structure</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Windows</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.ProtectSharing-->
	<element type="method">
		<source id="Excel.Workbook.ProtectSharing">
			<context kind="class">Workbook</context>
			<name>ProtectSharing</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>WriteResPassword</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReadOnlyRecommended</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CreateBackup</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SharingPassword</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.ProtectStructure {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.ProtectStructure">
			<context kind="class">Workbook</context>
			<name>ProtectStructure</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.ProtectWindows {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.ProtectWindows">
			<context kind="class">Workbook</context>
			<name>ProtectWindows</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.PublishObjects {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.PublishObjects">
			<context kind="class">Workbook</context>
			<name>PublishObjects</name>
			<type>PublishObjects</type>
		</source>
	</element>
	<!--method::Workbook.PurgeChangeHistoryNow-->
	<element type="method">
		<source id="Excel.Workbook.PurgeChangeHistoryNow">
			<context kind="class">Workbook</context>
			<name>PurgeChangeHistoryNow</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Days</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SharingPassword</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.ReadOnly {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.ReadOnly">
			<context kind="class">Workbook</context>
			<name>ReadOnly</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.ReadOnlyRecommended-->
	<element type="property">
		<source id="Excel.Workbook.ReadOnlyRecommended">
			<context kind="class">Workbook</context>
			<name>ReadOnlyRecommended</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Workbook.RecheckSmartTags-->
	<element type="method">
		<source id="Excel.Workbook.RecheckSmartTags">
			<context kind="class">Workbook</context>
			<name>RecheckSmartTags</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Workbook.RefreshAll-->
	<element type="method">
		<source id="Excel.Workbook.RefreshAll">
			<context kind="class">Workbook</context>
			<name>RefreshAll</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Workbook.RejectAllChanges-->
	<element type="method">
		<source id="Excel.Workbook.RejectAllChanges">
			<context kind="class">Workbook</context>
			<name>RejectAllChanges</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>When</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Who</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Where</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.ReloadAs-->
	<element type="method">
		<source id="Excel.Workbook.ReloadAs">
			<context kind="class">Workbook</context>
			<name>ReloadAs</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Encoding</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.RemovePersonalInformation-->
	<element type="property">
		<source id="Excel.Workbook.RemovePersonalInformation">
			<context kind="class">Workbook</context>
			<name>RemovePersonalInformation</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Workbook.RemoveUser-->
	<element type="method">
		<source id="Excel.Workbook.RemoveUser">
			<context kind="class">Workbook</context>
			<name>RemoveUser</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.Reply-->
	<element type="method">
		<source id="Excel.Workbook.Reply">
			<context kind="class">Workbook</context>
			<name>Reply</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Workbook.ReplyAll-->
	<element type="method">
		<source id="Excel.Workbook.ReplyAll">
			<context kind="class">Workbook</context>
			<name>ReplyAll</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Workbook.ReplyWithChanges-->
	<element type="method">
		<source id="Excel.Workbook.ReplyWithChanges">
			<context kind="class">Workbook</context>
			<name>ReplyWithChanges</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowMessage</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.ResetColors-->
	<element type="method">
		<source id="Excel.Workbook.ResetColors">
			<context kind="class">Workbook</context>
			<name>ResetColors</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Workbook.RevisionNumber {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.RevisionNumber">
			<context kind="class">Workbook</context>
			<name>RevisionNumber</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Workbook.Route-->
	<element type="method">
		<source id="Excel.Workbook.Route">
			<context kind="class">Workbook</context>
			<name>Route</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Workbook.Routed {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Routed">
			<context kind="class">Workbook</context>
			<name>Routed</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.RoutingSlip {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.RoutingSlip">
			<context kind="class">Workbook</context>
			<name>RoutingSlip</name>
			<type>RoutingSlip</type>
		</source>
	</element>
	<!--method::Workbook.RunAutoMacros-->
	<element type="method">
		<source id="Excel.Workbook.RunAutoMacros">
			<context kind="class">Workbook</context>
			<name>RunAutoMacros</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Which</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.Save-->
	<element type="method">
		<source id="Excel.Workbook.Save">
			<context kind="class">Workbook</context>
			<name>Save</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Workbook.SaveAs-->
	<element type="method">
		<source id="Excel.Workbook.SaveAs">
			<context kind="class">Workbook</context>
			<name>SaveAs</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>FileFormat</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>WriteResPassword</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReadOnlyRecommended</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CreateBackup</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>AccessMode</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ConflictResolution</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AddToMru</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TextCodepage</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TextVisualLayout</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Local</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SaveAsXMLData-->
	<element type="method">
		<source id="Excel.Workbook.SaveAsXMLData">
			<context kind="class">Workbook</context>
			<name>SaveAsXMLData</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter>
					<type>XmlMap</type>
					<name>Map</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SaveCopyAs-->
	<element type="method">
		<source id="Excel.Workbook.SaveCopyAs">
			<context kind="class">Workbook</context>
			<name>SaveCopyAs</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Filename</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.Saved-->
	<element type="property">
		<source id="Excel.Workbook.Saved">
			<context kind="class">Workbook</context>
			<name>Saved</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.SaveLinkValues-->
	<element type="property">
		<source id="Excel.Workbook.SaveLinkValues">
			<context kind="class">Workbook</context>
			<name>SaveLinkValues</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Workbook.sblt-->
	<element type="method">
		<source id="Excel.Workbook.sblt">
			<context kind="class">Workbook</context>
			<name>sblt</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>s</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SendFaxOverInternet-->
	<element type="method">
		<source id="Excel.Workbook.SendFaxOverInternet">
			<context kind="class">Workbook</context>
			<name>SendFaxOverInternet</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Recipients</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Subject</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowMessage</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SendForReview-->
	<element type="method">
		<source id="Excel.Workbook.SendForReview">
			<context kind="class">Workbook</context>
			<name>SendForReview</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Recipients</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Subject</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ShowMessage</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IncludeAttachment</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SendMail-->
	<element type="method">
		<source id="Excel.Workbook.SendMail">
			<context kind="class">Workbook</context>
			<name>SendMail</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Recipients</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Subject</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReturnReceipt</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SendMailer-->
	<element type="method">
		<source id="Excel.Workbook.SendMailer">
			<context kind="class">Workbook</context>
			<name>SendMailer</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>FileFormat</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Priority</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SetLinkOnData-->
	<element type="method">
		<source id="Excel.Workbook.SetLinkOnData">
			<context kind="class">Workbook</context>
			<name>SetLinkOnData</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Procedure</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SetPasswordEncryptionOptions-->
	<element type="method">
		<source id="Excel.Workbook.SetPasswordEncryptionOptions">
			<context kind="class">Workbook</context>
			<name>SetPasswordEncryptionOptions</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>PasswordEncryptionProvider</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PasswordEncryptionAlgorithm</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PasswordEncryptionKeyLength</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PasswordEncryptionFileProperties</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.SharedWorkspace {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.SharedWorkspace">
			<context kind="class">Workbook</context>
			<name>SharedWorkspace</name>
			<type>SharedWorkspace</type>
		</source>
	</element>
	<!--method::Workbook.SheetActivate-->
	<element type="method">
		<source id="Excel.Workbook.SheetActivate">
			<context kind="class">Workbook</context>
			<name>SheetActivate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SheetBeforeDoubleClick-->
	<element type="method">
		<source id="Excel.Workbook.SheetBeforeDoubleClick">
			<context kind="class">Workbook</context>
			<name>SheetBeforeDoubleClick</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Target</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SheetBeforeRightClick-->
	<element type="method">
		<source id="Excel.Workbook.SheetBeforeRightClick">
			<context kind="class">Workbook</context>
			<name>SheetBeforeRightClick</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Target</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SheetCalculate-->
	<element type="method">
		<source id="Excel.Workbook.SheetCalculate">
			<context kind="class">Workbook</context>
			<name>SheetCalculate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SheetChange-->
	<element type="method">
		<source id="Excel.Workbook.SheetChange">
			<context kind="class">Workbook</context>
			<name>SheetChange</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SheetDeactivate-->
	<element type="method">
		<source id="Excel.Workbook.SheetDeactivate">
			<context kind="class">Workbook</context>
			<name>SheetDeactivate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SheetFollowHyperlink-->
	<element type="method">
		<source id="Excel.Workbook.SheetFollowHyperlink">
			<context kind="class">Workbook</context>
			<name>SheetFollowHyperlink</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
				<parameter>
					<type>Hyperlink</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.SheetPivotTableUpdate-->
	<element type="method">
		<source id="Excel.Workbook.SheetPivotTableUpdate">
			<context kind="class">Workbook</context>
			<name>SheetPivotTableUpdate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
				<parameter>
					<type>PivotTable</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.Sheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Sheets">
			<context kind="class">Workbook</context>
			<name>Sheets</name>
			<type>Sheets</type>
		</source>
	</element>
	<!--method::Workbook.SheetSelectionChange-->
	<element type="method">
		<source id="Excel.Workbook.SheetSelectionChange">
			<context kind="class">Workbook</context>
			<name>SheetSelectionChange</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>Sh</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.ShowConflictHistory-->
	<element type="property">
		<source id="Excel.Workbook.ShowConflictHistory">
			<context kind="class">Workbook</context>
			<name>ShowConflictHistory</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.ShowPivotTableFieldList-->
	<element type="property">
		<source id="Excel.Workbook.ShowPivotTableFieldList">
			<context kind="class">Workbook</context>
			<name>ShowPivotTableFieldList</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.SmartDocument {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.SmartDocument">
			<context kind="class">Workbook</context>
			<name>SmartDocument</name>
			<type>SmartDocument</type>
		</source>
	</element>
	<!--property::Workbook.SmartTagOptions {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.SmartTagOptions">
			<context kind="class">Workbook</context>
			<name>SmartTagOptions</name>
			<type>SmartTagOptions</type>
		</source>
	</element>
	<!--property::Workbook.Styles {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Styles">
			<context kind="class">Workbook</context>
			<name>Styles</name>
			<type>Styles</type>
		</source>
	</element>
	<!--property::Workbook.Subject-->
	<element type="property">
		<source id="Excel.Workbook.Subject">
			<context kind="class">Workbook</context>
			<name>Subject</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.Sync {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Sync">
			<context kind="class">Workbook</context>
			<name>Sync</name>
			<type>Sync</type>
		</source>
	</element>
	<!--property::Workbook.TemplateRemoveExtData-->
	<element type="property">
		<source id="Excel.Workbook.TemplateRemoveExtData">
			<context kind="class">Workbook</context>
			<name>TemplateRemoveExtData</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.Title-->
	<element type="property">
		<source id="Excel.Workbook.Title">
			<context kind="class">Workbook</context>
			<name>Title</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Workbook.ToggleFormsDesign-->
	<element type="method">
		<source id="Excel.Workbook.ToggleFormsDesign">
			<context kind="class">Workbook</context>
			<name>ToggleFormsDesign</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Workbook.Unprotect-->
	<element type="method">
		<source id="Excel.Workbook.Unprotect">
			<context kind="class">Workbook</context>
			<name>Unprotect</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.UnprotectSharing-->
	<element type="method">
		<source id="Excel.Workbook.UnprotectSharing">
			<context kind="class">Workbook</context>
			<name>UnprotectSharing</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>SharingPassword</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.UpdateFromFile-->
	<element type="method">
		<source id="Excel.Workbook.UpdateFromFile">
			<context kind="class">Workbook</context>
			<name>UpdateFromFile</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Workbook.UpdateLink-->
	<element type="method">
		<source id="Excel.Workbook.UpdateLink">
			<context kind="class">Workbook</context>
			<name>UpdateLink</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Name</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.UpdateLinks-->
	<element type="property">
		<source id="Excel.Workbook.UpdateLinks">
			<context kind="class">Workbook</context>
			<name>UpdateLinks</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Workbook.UpdateRemoteReferences-->
	<element type="property">
		<source id="Excel.Workbook.UpdateRemoteReferences">
			<context kind="class">Workbook</context>
			<name>UpdateRemoteReferences</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.UserControl-->
	<element type="property">
		<source id="Excel.Workbook.UserControl">
			<context kind="class">Workbook</context>
			<name>UserControl</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.UserStatus {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.UserStatus">
			<context kind="class">Workbook</context>
			<name>UserStatus</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Workbook.VBASigned {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.VBASigned">
			<context kind="class">Workbook</context>
			<name>VBASigned</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.VBProject {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.VBProject">
			<context kind="class">Workbook</context>
			<name>VBProject</name>
			<type>VBProject</type>
		</source>
	</element>
	<!--property::Workbook.WebOptions {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.WebOptions">
			<context kind="class">Workbook</context>
			<name>WebOptions</name>
			<type>WebOptions</type>
		</source>
	</element>
	<!--method::Workbook.WebPagePreview-->
	<element type="method">
		<source id="Excel.Workbook.WebPagePreview">
			<context kind="class">Workbook</context>
			<name>WebPagePreview</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Workbook.WindowActivate-->
	<element type="method">
		<source id="Excel.Workbook.WindowActivate">
			<context kind="class">Workbook</context>
			<name>WindowActivate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Window</type>
					<name>Wn</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.WindowDeactivate-->
	<element type="method">
		<source id="Excel.Workbook.WindowDeactivate">
			<context kind="class">Workbook</context>
			<name>WindowDeactivate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Window</type>
					<name>Wn</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.WindowResize-->
	<element type="method">
		<source id="Excel.Workbook.WindowResize">
			<context kind="class">Workbook</context>
			<name>WindowResize</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Window</type>
					<name>Wn</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.Windows {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Windows">
			<context kind="class">Workbook</context>
			<name>Windows</name>
			<type>Windows</type>
		</source>
	</element>
	<!--property::Workbook.Worksheets {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.Worksheets">
			<context kind="class">Workbook</context>
			<name>Worksheets</name>
			<type>Worksheets</type>
		</source>
	</element>
	<!--property::Workbook.WritePassword-->
	<element type="property">
		<source id="Excel.Workbook.WritePassword">
			<context kind="class">Workbook</context>
			<name>WritePassword</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Workbook.WriteReserved {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.WriteReserved">
			<context kind="class">Workbook</context>
			<name>WriteReserved</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Workbook.WriteReservedBy {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.WriteReservedBy">
			<context kind="class">Workbook</context>
			<name>WriteReservedBy</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Workbook.XmlImport-->
	<element type="method">
		<source id="Excel.Workbook.XmlImport">
			<context kind="class">Workbook</context>
			<name>XmlImport</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Url</name>
				</parameter>
				<parameter>
					<type>XmlMap</type>
					<name>ImportMap</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Overwrite</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Destination</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbook.XmlImportXml-->
	<element type="method">
		<source id="Excel.Workbook.XmlImportXml">
			<context kind="class">Workbook</context>
			<name>XmlImportXml</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Data</name>
				</parameter>
				<parameter>
					<type>XmlMap</type>
					<name>ImportMap</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Overwrite</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Destination</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbook.XmlMaps {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.XmlMaps">
			<context kind="class">Workbook</context>
			<name>XmlMaps</name>
			<type>XmlMaps</type>
		</source>
	</element>
	<!--property::Workbook.XmlNamespaces {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbook.XmlNamespaces">
			<context kind="class">Workbook</context>
			<name>XmlNamespaces</name>
			<type>XmlNamespaces</type>
		</source>
	</element>
	<!--Class::Workbooks-->
	<element type="class">
		<source id="Excel.Workbooks">
			<name>Workbooks</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Workbooks.Add-->
	<element type="method">
		<source id="Excel.Workbooks.Add">
			<context kind="class">Workbooks</context>
			<name>Add</name>
			<type>Workbook</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Template</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbooks.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbooks.Application">
			<context kind="class">Workbooks</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Workbooks.CanCheckOut-->
	<element type="method">
		<source id="Excel.Workbooks.CanCheckOut">
			<context kind="class">Workbooks</context>
			<name>CanCheckOut</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbooks.CheckOut-->
	<element type="method">
		<source id="Excel.Workbooks.CheckOut">
			<context kind="class">Workbooks</context>
			<name>CheckOut</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbooks.Close-->
	<element type="method">
		<source id="Excel.Workbooks.Close">
			<context kind="class">Workbooks</context>
			<name>Close</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Workbooks.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbooks.Count">
			<context kind="class">Workbooks</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Workbooks.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbooks.Creator">
			<context kind="class">Workbooks</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Workbooks.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbooks.Item">
			<context kind="class">Workbooks</context>
			<name default="true">Item</name>
			<type>Workbook</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbooks.Open-->
	<element type="method">
		<source id="Excel.Workbooks.Open">
			<context kind="class">Workbooks</context>
			<name>Open</name>
			<type>Workbook</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>UpdateLinks</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReadOnly</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Format</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>WriteResPassword</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreReadOnlyRecommended</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Origin</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Delimiter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Editable</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Notify</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Converter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AddToMru</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Local</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CorruptLoad</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbooks.OpenDatabase-->
	<element type="method">
		<source id="Excel.Workbooks.OpenDatabase">
			<context kind="class">Workbooks</context>
			<name>OpenDatabase</name>
			<type>Workbook</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CommandText</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CommandType</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>BackgroundQuery</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ImportDataAs</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbooks.OpenText-->
	<element type="method">
		<source id="Excel.Workbooks.OpenText">
			<context kind="class">Workbooks</context>
			<name>OpenText</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Origin</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>StartRow</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DataType</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>TextQualifier</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ConsecutiveDelimiter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Tab</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Semicolon</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Comma</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Space</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Other</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>OtherChar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>FieldInfo</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TextVisualLayout</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DecimalSeparator</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ThousandsSeparator</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TrailingMinusNumbers</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Local</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Workbooks.OpenXML-->
	<element type="method">
		<source id="Excel.Workbooks.OpenXML">
			<context kind="class">Workbooks</context>
			<name>OpenXML</name>
			<type>Workbook</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Stylesheets</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>LoadOption</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Workbooks.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Workbooks.Parent">
			<context kind="class">Workbooks</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Worksheet-->
	<element type="class">
		<source id="Excel.Worksheet">
			<name>Worksheet</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Worksheet.Activate-->
	<element type="method">
		<source id="Excel.Worksheet.Activate">
			<context kind="class">Worksheet</context>
			<name>Activate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Worksheet.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Application">
			<context kind="class">Worksheet</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Worksheet.Arcs-->
	<element type="method">
		<source id="Excel.Worksheet.Arcs">
			<context kind="class">Worksheet</context>
			<name>Arcs</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.AutoFilter {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.AutoFilter">
			<context kind="class">Worksheet</context>
			<name>AutoFilter</name>
			<type>AutoFilter</type>
		</source>
	</element>
	<!--property::Worksheet.AutoFilterMode-->
	<element type="property">
		<source id="Excel.Worksheet.AutoFilterMode">
			<context kind="class">Worksheet</context>
			<name>AutoFilterMode</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Worksheet.BeforeDoubleClick-->
	<element type="method">
		<source id="Excel.Worksheet.BeforeDoubleClick">
			<context kind="class">Worksheet</context>
			<name>BeforeDoubleClick</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Target</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.BeforeRightClick-->
	<element type="method">
		<source id="Excel.Worksheet.BeforeRightClick">
			<context kind="class">Worksheet</context>
			<name>BeforeRightClick</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Target</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>Cancel</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.Buttons-->
	<element type="method">
		<source id="Excel.Worksheet.Buttons">
			<context kind="class">Worksheet</context>
			<name>Buttons</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.Calculate-->
	<element type="method">
		<source id="Excel.Worksheet.Calculate">
			<context kind="class">Worksheet</context>
			<name>Calculate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Worksheet.Cells {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Cells">
			<context kind="class">Worksheet</context>
			<name>Cells</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Worksheet.Change-->
	<element type="method">
		<source id="Excel.Worksheet.Change">
			<context kind="class">Worksheet</context>
			<name>Change</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.ChartObjects(ADAPTED)-->
	<element type="method">
		<source id="Excel.Worksheet.ChartObjects">
			<context kind="class">Worksheet</context>
			<name>ChartObjects</name>
			<type>ChartObjects</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.CheckBoxes-->
	<element type="method">
		<source id="Excel.Worksheet.CheckBoxes">
			<context kind="class">Worksheet</context>
			<name>CheckBoxes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.CheckSpelling-->
	<element type="method">
		<source id="Excel.Worksheet.CheckSpelling">
			<context kind="class">Worksheet</context>
			<name>CheckSpelling</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomDictionary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IgnoreUppercase</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AlwaysSuggest</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SpellLang</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.CircleInvalid-->
	<element type="method">
		<source id="Excel.Worksheet.CircleInvalid">
			<context kind="class">Worksheet</context>
			<name>CircleInvalid</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Worksheet.CircularReference {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.CircularReference">
			<context kind="class">Worksheet</context>
			<name>CircularReference</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Worksheet.ClearArrows-->
	<element type="method">
		<source id="Excel.Worksheet.ClearArrows">
			<context kind="class">Worksheet</context>
			<name>ClearArrows</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Worksheet.ClearCircles-->
	<element type="method">
		<source id="Excel.Worksheet.ClearCircles">
			<context kind="class">Worksheet</context>
			<name>ClearCircles</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Worksheet.CodeName {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.CodeName">
			<context kind="class">Worksheet</context>
			<name>CodeName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Worksheet.Columns {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Columns">
			<context kind="class">Worksheet</context>
			<name>Columns</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Worksheet.Comments {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Comments">
			<context kind="class">Worksheet</context>
			<name>Comments</name>
			<type>Comments</type>
		</source>
	</element>
	<!--property::Worksheet.ConsolidationFunction {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.ConsolidationFunction">
			<context kind="class">Worksheet</context>
			<name>ConsolidationFunction</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Worksheet.ConsolidationOptions {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.ConsolidationOptions">
			<context kind="class">Worksheet</context>
			<name>ConsolidationOptions</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Worksheet.ConsolidationSources {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.ConsolidationSources">
			<context kind="class">Worksheet</context>
			<name>ConsolidationSources</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Worksheet.Copy-->
	<element type="method">
		<source id="Excel.Worksheet.Copy">
			<context kind="class">Worksheet</context>
			<name>Copy</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Creator">
			<context kind="class">Worksheet</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Worksheet.CustomProperties {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.CustomProperties">
			<context kind="class">Worksheet</context>
			<name>CustomProperties</name>
			<type>CustomProperties</type>
		</source>
	</element>
	<!--method::Worksheet.Deactivate-->
	<element type="method">
		<source id="Excel.Worksheet.Deactivate">
			<context kind="class">Worksheet</context>
			<name>Deactivate</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Worksheet.Delete-->
	<element type="method">
		<source id="Excel.Worksheet.Delete">
			<context kind="class">Worksheet</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Worksheet.DisplayAutomaticPageBreaks-->
	<element type="property">
		<source id="Excel.Worksheet.DisplayAutomaticPageBreaks">
			<context kind="class">Worksheet</context>
			<name>DisplayAutomaticPageBreaks</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Worksheet.DisplayPageBreaks-->
	<element type="property">
		<source id="Excel.Worksheet.DisplayPageBreaks">
			<context kind="class">Worksheet</context>
			<name>DisplayPageBreaks</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Worksheet.DisplayRightToLeft-->
	<element type="property">
		<source id="Excel.Worksheet.DisplayRightToLeft">
			<context kind="class">Worksheet</context>
			<name>DisplayRightToLeft</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Worksheet.DrawingObjects-->
	<element type="method">
		<source id="Excel.Worksheet.DrawingObjects">
			<context kind="class">Worksheet</context>
			<name>DrawingObjects</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.Drawings-->
	<element type="method">
		<source id="Excel.Worksheet.Drawings">
			<context kind="class">Worksheet</context>
			<name>Drawings</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.DropDowns-->
	<element type="method">
		<source id="Excel.Worksheet.DropDowns">
			<context kind="class">Worksheet</context>
			<name>DropDowns</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.EnableAutoFilter-->
	<element type="property">
		<source id="Excel.Worksheet.EnableAutoFilter">
			<context kind="class">Worksheet</context>
			<name>EnableAutoFilter</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Worksheet.EnableCalculation-->
	<element type="property">
		<source id="Excel.Worksheet.EnableCalculation">
			<context kind="class">Worksheet</context>
			<name>EnableCalculation</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Worksheet.EnableOutlining-->
	<element type="property">
		<source id="Excel.Worksheet.EnableOutlining">
			<context kind="class">Worksheet</context>
			<name>EnableOutlining</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Worksheet.EnablePivotTable-->
	<element type="property">
		<source id="Excel.Worksheet.EnablePivotTable">
			<context kind="class">Worksheet</context>
			<name>EnablePivotTable</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Worksheet.EnableSelection-->
	<element type="property">
		<source id="Excel.Worksheet.EnableSelection">
			<context kind="class">Worksheet</context>
			<name>EnableSelection</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Worksheet.Evaluate-->
	<element type="method">
		<source id="Excel.Worksheet.Evaluate">
			<context kind="class">Worksheet</context>
			<name>Evaluate</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.FilterMode {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.FilterMode">
			<context kind="class">Worksheet</context>
			<name>FilterMode</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Worksheet.FollowHyperlink-->
	<element type="method">
		<source id="Excel.Worksheet.FollowHyperlink">
			<context kind="class">Worksheet</context>
			<name>FollowHyperlink</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Hyperlink</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.GroupBoxes-->
	<element type="method">
		<source id="Excel.Worksheet.GroupBoxes">
			<context kind="class">Worksheet</context>
			<name>GroupBoxes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.GroupObjects-->
	<element type="method">
		<source id="Excel.Worksheet.GroupObjects">
			<context kind="class">Worksheet</context>
			<name>GroupObjects</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.HPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.HPageBreaks">
			<context kind="class">Worksheet</context>
			<name>HPageBreaks</name>
			<type>HPageBreaks</type>
		</source>
	</element>
	<!--property::Worksheet.Hyperlinks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Hyperlinks">
			<context kind="class">Worksheet</context>
			<name>Hyperlinks</name>
			<type>Hyperlinks</type>
		</source>
	</element>
	<!--property::Worksheet.Index {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Index">
			<context kind="class">Worksheet</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Worksheet.Labels-->
	<element type="method">
		<source id="Excel.Worksheet.Labels">
			<context kind="class">Worksheet</context>
			<name>Labels</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.Lines-->
	<element type="method">
		<source id="Excel.Worksheet.Lines">
			<context kind="class">Worksheet</context>
			<name>Lines</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.ListBoxes-->
	<element type="method">
		<source id="Excel.Worksheet.ListBoxes">
			<context kind="class">Worksheet</context>
			<name>ListBoxes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.ListObjects {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.ListObjects">
			<context kind="class">Worksheet</context>
			<name>ListObjects</name>
			<type>ListObjects</type>
		</source>
	</element>
	<!--property::Worksheet.MailEnvelope {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.MailEnvelope">
			<context kind="class">Worksheet</context>
			<name>MailEnvelope</name>
			<type>MsoEnvelope</type>
		</source>
	</element>
	<!--method::Worksheet.Move-->
	<element type="method">
		<source id="Excel.Worksheet.Move">
			<context kind="class">Worksheet</context>
			<name>Move</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.Name-->
	<element type="property">
		<source id="Excel.Worksheet.Name">
			<context kind="class">Worksheet</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Worksheet.Names {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Names">
			<context kind="class">Worksheet</context>
			<name>Names</name>
			<type>Names</type>
		</source>
	</element>
	<!--property::Worksheet.Next {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Next">
			<context kind="class">Worksheet</context>
			<name>Next</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Worksheet.OLEObjects-->
	<element type="method">
		<source id="Excel.Worksheet.OLEObjects">
			<context kind="class">Worksheet</context>
			<name>OLEObjects</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.OnCalculate-->
	<element type="property">
		<source id="Excel.Worksheet.OnCalculate">
			<context kind="class">Worksheet</context>
			<name>OnCalculate</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Worksheet.OnData-->
	<element type="property">
		<source id="Excel.Worksheet.OnData">
			<context kind="class">Worksheet</context>
			<name>OnData</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Worksheet.OnDoubleClick-->
	<element type="property">
		<source id="Excel.Worksheet.OnDoubleClick">
			<context kind="class">Worksheet</context>
			<name>OnDoubleClick</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Worksheet.OnEntry-->
	<element type="property">
		<source id="Excel.Worksheet.OnEntry">
			<context kind="class">Worksheet</context>
			<name>OnEntry</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Worksheet.OnSheetActivate-->
	<element type="property">
		<source id="Excel.Worksheet.OnSheetActivate">
			<context kind="class">Worksheet</context>
			<name>OnSheetActivate</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Worksheet.OnSheetDeactivate-->
	<element type="property">
		<source id="Excel.Worksheet.OnSheetDeactivate">
			<context kind="class">Worksheet</context>
			<name>OnSheetDeactivate</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Worksheet.OptionButtons-->
	<element type="method">
		<source id="Excel.Worksheet.OptionButtons">
			<context kind="class">Worksheet</context>
			<name>OptionButtons</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.Outline {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Outline">
			<context kind="class">Worksheet</context>
			<name>Outline</name>
			<type>Outline</type>
		</source>
	</element>
	<!--method::Worksheet.Ovals-->
	<element type="method">
		<source id="Excel.Worksheet.Ovals">
			<context kind="class">Worksheet</context>
			<name>Ovals</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.PageSetup {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.PageSetup">
			<context kind="class">Worksheet</context>
			<name>PageSetup</name>
			<type>PageSetup</type>
		</source>
	</element>
	<!--property::Worksheet.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Parent">
			<context kind="class">Worksheet</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Worksheet.Paste-->
	<element type="method">
		<source id="Excel.Worksheet.Paste">
			<context kind="class">Worksheet</context>
			<name>Paste</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Destination</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Link</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.PasteSpecial-->
	<element type="method">
		<source id="Excel.Worksheet.PasteSpecial">
			<context kind="class">Worksheet</context>
			<name>PasteSpecial</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Format</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Link</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DisplayAsIcon</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IconFileName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IconIndex</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>IconLabel</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>NoHTMLFormatting</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.Pictures-->
	<element type="method">
		<source id="Excel.Worksheet.Pictures">
			<context kind="class">Worksheet</context>
			<name>Pictures</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.PivotTables(ADAPTED)-->
	<element type="method">
		<source id="Excel.Worksheet.PivotTables">
			<context kind="class">Worksheet</context>
			<name>PivotTables</name>
			<type>Object
			<choice>PivotTables</choice></type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.PivotTableUpdate-->
	<element type="method">
		<source id="Excel.Worksheet.PivotTableUpdate">
			<context kind="class">Worksheet</context>
			<name>PivotTableUpdate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>PivotTable</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.PivotTableWizard-->
	<element type="method">
		<source id="Excel.Worksheet.PivotTableWizard">
			<context kind="class">Worksheet</context>
			<name>PivotTableWizard</name>
			<type>PivotTable</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>SourceType</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SourceData</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TableDestination</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TableName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RowGrand</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ColumnGrand</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SaveData</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>HasAutoFormat</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AutoPage</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Reserved</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>BackgroundQuery</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>OptimizeCache</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PageFieldOrder</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PageFieldWrapCount</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReadData</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Connection</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.Previous {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Previous">
			<context kind="class">Worksheet</context>
			<name>Previous</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Worksheet.PrintOut-->
	<element type="method">
		<source id="Excel.Worksheet.PrintOut">
			<context kind="class">Worksheet</context>
			<name>PrintOut</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>From</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>To</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Copies</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Preview</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ActivePrinter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrintToFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Collate</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrToFileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.PrintPreview-->
	<element type="method">
		<source id="Excel.Worksheet.PrintPreview">
			<context kind="class">Worksheet</context>
			<name>PrintPreview</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>EnableChanges</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.Protect-->
	<element type="method">
		<source id="Excel.Worksheet.Protect">
			<context kind="class">Worksheet</context>
			<name>Protect</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DrawingObjects</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Contents</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Scenarios</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>UserInterfaceOnly</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowFormattingCells</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowFormattingColumns</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowFormattingRows</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowInsertingColumns</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowInsertingRows</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowInsertingHyperlinks</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowDeletingColumns</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowDeletingRows</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowSorting</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowFiltering</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AllowUsingPivotTables</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.ProtectContents {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.ProtectContents">
			<context kind="class">Worksheet</context>
			<name>ProtectContents</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Worksheet.ProtectDrawingObjects {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.ProtectDrawingObjects">
			<context kind="class">Worksheet</context>
			<name>ProtectDrawingObjects</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Worksheet.Protection {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Protection">
			<context kind="class">Worksheet</context>
			<name>Protection</name>
			<type>Protection</type>
		</source>
	</element>
	<!--property::Worksheet.ProtectionMode {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.ProtectionMode">
			<context kind="class">Worksheet</context>
			<name>ProtectionMode</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Worksheet.ProtectScenarios {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.ProtectScenarios">
			<context kind="class">Worksheet</context>
			<name>ProtectScenarios</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Worksheet.QueryTables {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.QueryTables">
			<context kind="class">Worksheet</context>
			<name>QueryTables</name>
			<type>QueryTables</type>
		</source>
	</element>
	<!--property::Worksheet.Range {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Range">
			<context kind="class">Worksheet</context>
			<name>Range</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Cell1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Cell2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.Rectangles(ADAPTED)-->
	<element type="method">
		<source id="Excel.Worksheet.Rectangles">
			<context kind="class">Worksheet</context>
			<name>Rectangles</name>
			<type>Object
			<choice>Rectangles</choice></type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.ResetAllPageBreaks-->
	<element type="method">
		<source id="Excel.Worksheet.ResetAllPageBreaks">
			<context kind="class">Worksheet</context>
			<name>ResetAllPageBreaks</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Worksheet.Rows {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Rows">
			<context kind="class">Worksheet</context>
			<name>Rows</name>
			<type>Range</type>
		</source>
	</element>
	<!--method::Worksheet.SaveAs-->
	<element type="method">
		<source id="Excel.Worksheet.SaveAs">
			<context kind="class">Worksheet</context>
			<name>SaveAs</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>FileFormat</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>WriteResPassword</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ReadOnlyRecommended</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CreateBackup</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>AddToMru</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TextCodepage</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TextVisualLayout</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Local</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.Scenarios-->
	<element type="method">
		<source id="Excel.Worksheet.Scenarios">
			<context kind="class">Worksheet</context>
			<name>Scenarios</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.Scripts {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Scripts">
			<context kind="class">Worksheet</context>
			<name>Scripts</name>
			<type>Scripts</type>
		</source>
	</element>
	<!--property::Worksheet.ScrollArea-->
	<element type="property">
		<source id="Excel.Worksheet.ScrollArea">
			<context kind="class">Worksheet</context>
			<name>ScrollArea</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Worksheet.ScrollBars-->
	<element type="method">
		<source id="Excel.Worksheet.ScrollBars">
			<context kind="class">Worksheet</context>
			<name>ScrollBars</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.Select-->
	<element type="method">
		<source id="Excel.Worksheet.Select">
			<context kind="class">Worksheet</context>
			<name>Select</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.SelectionChange-->
	<element type="method">
		<source id="Excel.Worksheet.SelectionChange">
			<context kind="class">Worksheet</context>
			<name>SelectionChange</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Target</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.SetBackgroundPicture-->
	<element type="method">
		<source id="Excel.Worksheet.SetBackgroundPicture">
			<context kind="class">Worksheet</context>
			<name>SetBackgroundPicture</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Filename</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.Shapes {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Shapes">
			<context kind="class">Worksheet</context>
			<name>Shapes</name>
			<type>Shapes</type>
		</source>
	</element>
	<!--method::Worksheet.ShowAllData-->
	<element type="method">
		<source id="Excel.Worksheet.ShowAllData">
			<context kind="class">Worksheet</context>
			<name>ShowAllData</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Worksheet.ShowDataForm-->
	<element type="method">
		<source id="Excel.Worksheet.ShowDataForm">
			<context kind="class">Worksheet</context>
			<name>ShowDataForm</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Worksheet.SmartTags {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.SmartTags">
			<context kind="class">Worksheet</context>
			<name>SmartTags</name>
			<type>SmartTags</type>
		</source>
	</element>
	<!--method::Worksheet.Spinners-->
	<element type="method">
		<source id="Excel.Worksheet.Spinners">
			<context kind="class">Worksheet</context>
			<name>Spinners</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.StandardHeight {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.StandardHeight">
			<context kind="class">Worksheet</context>
			<name>StandardHeight</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Worksheet.StandardWidth-->
	<element type="property">
		<source id="Excel.Worksheet.StandardWidth">
			<context kind="class">Worksheet</context>
			<name>StandardWidth</name>
			<type>double</type>
		</source>
	</element>
	<!--property::Worksheet.Tab {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Tab">
			<context kind="class">Worksheet</context>
			<name>Tab</name>
			<type>Tab</type>
		</source>
	</element>
	<!--method::Worksheet.TextBoxes-->
	<element type="method">
		<source id="Excel.Worksheet.TextBoxes">
			<context kind="class">Worksheet</context>
			<name>TextBoxes</name>
			<type>Object</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.TransitionExpEval-->
	<element type="property">
		<source id="Excel.Worksheet.TransitionExpEval">
			<context kind="class">Worksheet</context>
			<name>TransitionExpEval</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Worksheet.TransitionFormEntry-->
	<element type="property">
		<source id="Excel.Worksheet.TransitionFormEntry">
			<context kind="class">Worksheet</context>
			<name>TransitionFormEntry</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Worksheet.Type {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.Type">
			<context kind="class">Worksheet</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Worksheet.Unprotect-->
	<element type="method">
		<source id="Excel.Worksheet.Unprotect">
			<context kind="class">Worksheet</context>
			<name>Unprotect</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Password</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheet.UsedRange {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.UsedRange">
			<context kind="class">Worksheet</context>
			<name>UsedRange</name>
			<type>Range</type>
		</source>
	</element>
	<!--property::Worksheet.Visible-->
	<element type="property">
		<source id="Excel.Worksheet.Visible">
			<context kind="class">Worksheet</context>
			<name>Visible</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Worksheet.VPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheet.VPageBreaks">
			<context kind="class">Worksheet</context>
			<name>VPageBreaks</name>
			<type>VPageBreaks</type>
		</source>
	</element>
	<!--method::Worksheet.XmlDataQuery-->
	<element type="method">
		<source id="Excel.Worksheet.XmlDataQuery">
			<context kind="class">Worksheet</context>
			<name>XmlDataQuery</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>XPath</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SelectionNamespaces</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Map</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheet.XmlMapQuery-->
	<element type="method">
		<source id="Excel.Worksheet.XmlMapQuery">
			<context kind="class">Worksheet</context>
			<name>XmlMapQuery</name>
			<type>Range</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>XPath</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SelectionNamespaces</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Map</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::WorksheetFunction-->
	<element type="class">
		<source id="Excel.WorksheetFunction">
			<name>WorksheetFunction</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::WorksheetFunction.Acos-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Acos">
			<context kind="class">WorksheetFunction</context>
			<name>Acos</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Acosh-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Acosh">
			<context kind="class">WorksheetFunction</context>
			<name>Acosh</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.And-->
	<element type="method">
		<source id="Excel.WorksheetFunction.And">
			<context kind="class">WorksheetFunction</context>
			<name>And</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::WorksheetFunction.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.WorksheetFunction.Application">
			<context kind="class">WorksheetFunction</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::WorksheetFunction.Asc-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Asc">
			<context kind="class">WorksheetFunction</context>
			<name>Asc</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Asin-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Asin">
			<context kind="class">WorksheetFunction</context>
			<name>Asin</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Asinh-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Asinh">
			<context kind="class">WorksheetFunction</context>
			<name>Asinh</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Atan2-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Atan2">
			<context kind="class">WorksheetFunction</context>
			<name>Atan2</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Atanh-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Atanh">
			<context kind="class">WorksheetFunction</context>
			<name>Atanh</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.AveDev-->
	<element type="method">
		<source id="Excel.WorksheetFunction.AveDev">
			<context kind="class">WorksheetFunction</context>
			<name>AveDev</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Average-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Average">
			<context kind="class">WorksheetFunction</context>
			<name>Average</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.BahtText-->
	<element type="method">
		<source id="Excel.WorksheetFunction.BahtText">
			<context kind="class">WorksheetFunction</context>
			<name>BahtText</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.BetaDist-->
	<element type="method">
		<source id="Excel.WorksheetFunction.BetaDist">
			<context kind="class">WorksheetFunction</context>
			<name>BetaDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.BetaInv-->
	<element type="method">
		<source id="Excel.WorksheetFunction.BetaInv">
			<context kind="class">WorksheetFunction</context>
			<name>BetaInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.BinomDist-->
	<element type="method">
		<source id="Excel.WorksheetFunction.BinomDist">
			<context kind="class">WorksheetFunction</context>
			<name>BinomDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Ceiling-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Ceiling">
			<context kind="class">WorksheetFunction</context>
			<name>Ceiling</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.ChiDist-->
	<element type="method">
		<source id="Excel.WorksheetFunction.ChiDist">
			<context kind="class">WorksheetFunction</context>
			<name>ChiDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.ChiInv-->
	<element type="method">
		<source id="Excel.WorksheetFunction.ChiInv">
			<context kind="class">WorksheetFunction</context>
			<name>ChiInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.ChiTest-->
	<element type="method">
		<source id="Excel.WorksheetFunction.ChiTest">
			<context kind="class">WorksheetFunction</context>
			<name>ChiTest</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Choose-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Choose">
			<context kind="class">WorksheetFunction</context>
			<name>Choose</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Clean-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Clean">
			<context kind="class">WorksheetFunction</context>
			<name>Clean</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Combin-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Combin">
			<context kind="class">WorksheetFunction</context>
			<name>Combin</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Confidence-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Confidence">
			<context kind="class">WorksheetFunction</context>
			<name>Confidence</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Correl-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Correl">
			<context kind="class">WorksheetFunction</context>
			<name>Correl</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Cosh-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Cosh">
			<context kind="class">WorksheetFunction</context>
			<name>Cosh</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Count-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Count">
			<context kind="class">WorksheetFunction</context>
			<name>Count</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.CountA-->
	<element type="method">
		<source id="Excel.WorksheetFunction.CountA">
			<context kind="class">WorksheetFunction</context>
			<name>CountA</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.CountBlank-->
	<element type="method">
		<source id="Excel.WorksheetFunction.CountBlank">
			<context kind="class">WorksheetFunction</context>
			<name>CountBlank</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.CountIf-->
	<element type="method">
		<source id="Excel.WorksheetFunction.CountIf">
			<context kind="class">WorksheetFunction</context>
			<name>CountIf</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Covar-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Covar">
			<context kind="class">WorksheetFunction</context>
			<name>Covar</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::WorksheetFunction.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.WorksheetFunction.Creator">
			<context kind="class">WorksheetFunction</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::WorksheetFunction.CritBinom-->
	<element type="method">
		<source id="Excel.WorksheetFunction.CritBinom">
			<context kind="class">WorksheetFunction</context>
			<name>CritBinom</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.DAverage-->
	<element type="method">
		<source id="Excel.WorksheetFunction.DAverage">
			<context kind="class">WorksheetFunction</context>
			<name>DAverage</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Days360-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Days360">
			<context kind="class">WorksheetFunction</context>
			<name>Days360</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Db-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Db">
			<context kind="class">WorksheetFunction</context>
			<name>Db</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Dbcs-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Dbcs">
			<context kind="class">WorksheetFunction</context>
			<name>Dbcs</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.DCount-->
	<element type="method">
		<source id="Excel.WorksheetFunction.DCount">
			<context kind="class">WorksheetFunction</context>
			<name>DCount</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.DCountA-->
	<element type="method">
		<source id="Excel.WorksheetFunction.DCountA">
			<context kind="class">WorksheetFunction</context>
			<name>DCountA</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Ddb-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Ddb">
			<context kind="class">WorksheetFunction</context>
			<name>Ddb</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Degrees-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Degrees">
			<context kind="class">WorksheetFunction</context>
			<name>Degrees</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.DevSq-->
	<element type="method">
		<source id="Excel.WorksheetFunction.DevSq">
			<context kind="class">WorksheetFunction</context>
			<name>DevSq</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.DGet-->
	<element type="method">
		<source id="Excel.WorksheetFunction.DGet">
			<context kind="class">WorksheetFunction</context>
			<name>DGet</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.DMax-->
	<element type="method">
		<source id="Excel.WorksheetFunction.DMax">
			<context kind="class">WorksheetFunction</context>
			<name>DMax</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.DMin-->
	<element type="method">
		<source id="Excel.WorksheetFunction.DMin">
			<context kind="class">WorksheetFunction</context>
			<name>DMin</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Dollar-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Dollar">
			<context kind="class">WorksheetFunction</context>
			<name>Dollar</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.DProduct-->
	<element type="method">
		<source id="Excel.WorksheetFunction.DProduct">
			<context kind="class">WorksheetFunction</context>
			<name>DProduct</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.DStDev-->
	<element type="method">
		<source id="Excel.WorksheetFunction.DStDev">
			<context kind="class">WorksheetFunction</context>
			<name>DStDev</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.DStDevP-->
	<element type="method">
		<source id="Excel.WorksheetFunction.DStDevP">
			<context kind="class">WorksheetFunction</context>
			<name>DStDevP</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.DSum-->
	<element type="method">
		<source id="Excel.WorksheetFunction.DSum">
			<context kind="class">WorksheetFunction</context>
			<name>DSum</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.DVar-->
	<element type="method">
		<source id="Excel.WorksheetFunction.DVar">
			<context kind="class">WorksheetFunction</context>
			<name>DVar</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.DVarP-->
	<element type="method">
		<source id="Excel.WorksheetFunction.DVarP">
			<context kind="class">WorksheetFunction</context>
			<name>DVarP</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Even-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Even">
			<context kind="class">WorksheetFunction</context>
			<name>Even</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.ExponDist-->
	<element type="method">
		<source id="Excel.WorksheetFunction.ExponDist">
			<context kind="class">WorksheetFunction</context>
			<name>ExponDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Fact-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Fact">
			<context kind="class">WorksheetFunction</context>
			<name>Fact</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.FDist-->
	<element type="method">
		<source id="Excel.WorksheetFunction.FDist">
			<context kind="class">WorksheetFunction</context>
			<name>FDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Find-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Find">
			<context kind="class">WorksheetFunction</context>
			<name>Find</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.FindB-->
	<element type="method">
		<source id="Excel.WorksheetFunction.FindB">
			<context kind="class">WorksheetFunction</context>
			<name>FindB</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.FInv-->
	<element type="method">
		<source id="Excel.WorksheetFunction.FInv">
			<context kind="class">WorksheetFunction</context>
			<name>FInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Fisher-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Fisher">
			<context kind="class">WorksheetFunction</context>
			<name>Fisher</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.FisherInv-->
	<element type="method">
		<source id="Excel.WorksheetFunction.FisherInv">
			<context kind="class">WorksheetFunction</context>
			<name>FisherInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Fixed-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Fixed">
			<context kind="class">WorksheetFunction</context>
			<name>Fixed</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Floor-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Floor">
			<context kind="class">WorksheetFunction</context>
			<name>Floor</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Forecast-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Forecast">
			<context kind="class">WorksheetFunction</context>
			<name>Forecast</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Frequency-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Frequency">
			<context kind="class">WorksheetFunction</context>
			<name>Frequency</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.FTest-->
	<element type="method">
		<source id="Excel.WorksheetFunction.FTest">
			<context kind="class">WorksheetFunction</context>
			<name>FTest</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Fv-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Fv">
			<context kind="class">WorksheetFunction</context>
			<name>Fv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.GammaDist-->
	<element type="method">
		<source id="Excel.WorksheetFunction.GammaDist">
			<context kind="class">WorksheetFunction</context>
			<name>GammaDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.GammaInv-->
	<element type="method">
		<source id="Excel.WorksheetFunction.GammaInv">
			<context kind="class">WorksheetFunction</context>
			<name>GammaInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.GammaLn-->
	<element type="method">
		<source id="Excel.WorksheetFunction.GammaLn">
			<context kind="class">WorksheetFunction</context>
			<name>GammaLn</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.GeoMean-->
	<element type="method">
		<source id="Excel.WorksheetFunction.GeoMean">
			<context kind="class">WorksheetFunction</context>
			<name>GeoMean</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Growth-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Growth">
			<context kind="class">WorksheetFunction</context>
			<name>Growth</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.HarMean-->
	<element type="method">
		<source id="Excel.WorksheetFunction.HarMean">
			<context kind="class">WorksheetFunction</context>
			<name>HarMean</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.HLookup-->
	<element type="method">
		<source id="Excel.WorksheetFunction.HLookup">
			<context kind="class">WorksheetFunction</context>
			<name>HLookup</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.HypGeomDist-->
	<element type="method">
		<source id="Excel.WorksheetFunction.HypGeomDist">
			<context kind="class">WorksheetFunction</context>
			<name>HypGeomDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Index-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Index">
			<context kind="class">WorksheetFunction</context>
			<name>Index</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Intercept-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Intercept">
			<context kind="class">WorksheetFunction</context>
			<name>Intercept</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Ipmt-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Ipmt">
			<context kind="class">WorksheetFunction</context>
			<name>Ipmt</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Irr-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Irr">
			<context kind="class">WorksheetFunction</context>
			<name>Irr</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.IsErr-->
	<element type="method">
		<source id="Excel.WorksheetFunction.IsErr">
			<context kind="class">WorksheetFunction</context>
			<name>IsErr</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.IsError-->
	<element type="method">
		<source id="Excel.WorksheetFunction.IsError">
			<context kind="class">WorksheetFunction</context>
			<name>IsError</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.IsLogical-->
	<element type="method">
		<source id="Excel.WorksheetFunction.IsLogical">
			<context kind="class">WorksheetFunction</context>
			<name>IsLogical</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.IsNA-->
	<element type="method">
		<source id="Excel.WorksheetFunction.IsNA">
			<context kind="class">WorksheetFunction</context>
			<name>IsNA</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.IsNonText-->
	<element type="method">
		<source id="Excel.WorksheetFunction.IsNonText">
			<context kind="class">WorksheetFunction</context>
			<name>IsNonText</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.IsNumber-->
	<element type="method">
		<source id="Excel.WorksheetFunction.IsNumber">
			<context kind="class">WorksheetFunction</context>
			<name>IsNumber</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Ispmt-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Ispmt">
			<context kind="class">WorksheetFunction</context>
			<name>Ispmt</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.IsText-->
	<element type="method">
		<source id="Excel.WorksheetFunction.IsText">
			<context kind="class">WorksheetFunction</context>
			<name>IsText</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.IsThaiDigit-->
	<element type="method">
		<source id="Excel.WorksheetFunction.IsThaiDigit">
			<context kind="class">WorksheetFunction</context>
			<name>IsThaiDigit</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Kurt-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Kurt">
			<context kind="class">WorksheetFunction</context>
			<name>Kurt</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Large-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Large">
			<context kind="class">WorksheetFunction</context>
			<name>Large</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.LinEst-->
	<element type="method">
		<source id="Excel.WorksheetFunction.LinEst">
			<context kind="class">WorksheetFunction</context>
			<name>LinEst</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Ln-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Ln">
			<context kind="class">WorksheetFunction</context>
			<name>Ln</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Log-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Log">
			<context kind="class">WorksheetFunction</context>
			<name>Log</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Log10-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Log10">
			<context kind="class">WorksheetFunction</context>
			<name>Log10</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.LogEst-->
	<element type="method">
		<source id="Excel.WorksheetFunction.LogEst">
			<context kind="class">WorksheetFunction</context>
			<name>LogEst</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.LogInv-->
	<element type="method">
		<source id="Excel.WorksheetFunction.LogInv">
			<context kind="class">WorksheetFunction</context>
			<name>LogInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.LogNormDist-->
	<element type="method">
		<source id="Excel.WorksheetFunction.LogNormDist">
			<context kind="class">WorksheetFunction</context>
			<name>LogNormDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Lookup-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Lookup">
			<context kind="class">WorksheetFunction</context>
			<name>Lookup</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Match-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Match">
			<context kind="class">WorksheetFunction</context>
			<name>Match</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Max-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Max">
			<context kind="class">WorksheetFunction</context>
			<name>Max</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.MDeterm-->
	<element type="method">
		<source id="Excel.WorksheetFunction.MDeterm">
			<context kind="class">WorksheetFunction</context>
			<name>MDeterm</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Median-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Median">
			<context kind="class">WorksheetFunction</context>
			<name>Median</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Min-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Min">
			<context kind="class">WorksheetFunction</context>
			<name>Min</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.MInverse-->
	<element type="method">
		<source id="Excel.WorksheetFunction.MInverse">
			<context kind="class">WorksheetFunction</context>
			<name>MInverse</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.MIrr-->
	<element type="method">
		<source id="Excel.WorksheetFunction.MIrr">
			<context kind="class">WorksheetFunction</context>
			<name>MIrr</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.MMult-->
	<element type="method">
		<source id="Excel.WorksheetFunction.MMult">
			<context kind="class">WorksheetFunction</context>
			<name>MMult</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Mode-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Mode">
			<context kind="class">WorksheetFunction</context>
			<name>Mode</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.NegBinomDist-->
	<element type="method">
		<source id="Excel.WorksheetFunction.NegBinomDist">
			<context kind="class">WorksheetFunction</context>
			<name>NegBinomDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.NormDist-->
	<element type="method">
		<source id="Excel.WorksheetFunction.NormDist">
			<context kind="class">WorksheetFunction</context>
			<name>NormDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.NormInv-->
	<element type="method">
		<source id="Excel.WorksheetFunction.NormInv">
			<context kind="class">WorksheetFunction</context>
			<name>NormInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.NormSDist-->
	<element type="method">
		<source id="Excel.WorksheetFunction.NormSDist">
			<context kind="class">WorksheetFunction</context>
			<name>NormSDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.NormSInv-->
	<element type="method">
		<source id="Excel.WorksheetFunction.NormSInv">
			<context kind="class">WorksheetFunction</context>
			<name>NormSInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.NPer-->
	<element type="method">
		<source id="Excel.WorksheetFunction.NPer">
			<context kind="class">WorksheetFunction</context>
			<name>NPer</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Npv-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Npv">
			<context kind="class">WorksheetFunction</context>
			<name>Npv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Odd-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Odd">
			<context kind="class">WorksheetFunction</context>
			<name>Odd</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Or-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Or">
			<context kind="class">WorksheetFunction</context>
			<name>Or</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::WorksheetFunction.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.WorksheetFunction.Parent">
			<context kind="class">WorksheetFunction</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::WorksheetFunction.Pearson-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Pearson">
			<context kind="class">WorksheetFunction</context>
			<name>Pearson</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Percentile-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Percentile">
			<context kind="class">WorksheetFunction</context>
			<name>Percentile</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.PercentRank-->
	<element type="method">
		<source id="Excel.WorksheetFunction.PercentRank">
			<context kind="class">WorksheetFunction</context>
			<name>PercentRank</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Permut-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Permut">
			<context kind="class">WorksheetFunction</context>
			<name>Permut</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Phonetic-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Phonetic">
			<context kind="class">WorksheetFunction</context>
			<name>Phonetic</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Pi-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Pi">
			<context kind="class">WorksheetFunction</context>
			<name>Pi</name>
			<type>double</type>
		</source>
	</element>
	<!--method::WorksheetFunction.Pmt-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Pmt">
			<context kind="class">WorksheetFunction</context>
			<name>Pmt</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Poisson-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Poisson">
			<context kind="class">WorksheetFunction</context>
			<name>Poisson</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Power-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Power">
			<context kind="class">WorksheetFunction</context>
			<name>Power</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Ppmt-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Ppmt">
			<context kind="class">WorksheetFunction</context>
			<name>Ppmt</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Prob-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Prob">
			<context kind="class">WorksheetFunction</context>
			<name>Prob</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Product-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Product">
			<context kind="class">WorksheetFunction</context>
			<name>Product</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Proper-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Proper">
			<context kind="class">WorksheetFunction</context>
			<name>Proper</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Pv-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Pv">
			<context kind="class">WorksheetFunction</context>
			<name>Pv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Quartile-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Quartile">
			<context kind="class">WorksheetFunction</context>
			<name>Quartile</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Radians-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Radians">
			<context kind="class">WorksheetFunction</context>
			<name>Radians</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Rank-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Rank">
			<context kind="class">WorksheetFunction</context>
			<name>Rank</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Rate-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Rate">
			<context kind="class">WorksheetFunction</context>
			<name>Rate</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Replace-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Replace">
			<context kind="class">WorksheetFunction</context>
			<name>Replace</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.ReplaceB-->
	<element type="method">
		<source id="Excel.WorksheetFunction.ReplaceB">
			<context kind="class">WorksheetFunction</context>
			<name>ReplaceB</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Rept-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Rept">
			<context kind="class">WorksheetFunction</context>
			<name>Rept</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Roman-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Roman">
			<context kind="class">WorksheetFunction</context>
			<name>Roman</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Round-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Round">
			<context kind="class">WorksheetFunction</context>
			<name>Round</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.RoundBahtDown-->
	<element type="method">
		<source id="Excel.WorksheetFunction.RoundBahtDown">
			<context kind="class">WorksheetFunction</context>
			<name>RoundBahtDown</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.RoundBahtUp-->
	<element type="method">
		<source id="Excel.WorksheetFunction.RoundBahtUp">
			<context kind="class">WorksheetFunction</context>
			<name>RoundBahtUp</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.RoundDown-->
	<element type="method">
		<source id="Excel.WorksheetFunction.RoundDown">
			<context kind="class">WorksheetFunction</context>
			<name>RoundDown</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.RoundUp-->
	<element type="method">
		<source id="Excel.WorksheetFunction.RoundUp">
			<context kind="class">WorksheetFunction</context>
			<name>RoundUp</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.RSq-->
	<element type="method">
		<source id="Excel.WorksheetFunction.RSq">
			<context kind="class">WorksheetFunction</context>
			<name>RSq</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.RTD-->
	<element type="method">
		<source id="Excel.WorksheetFunction.RTD">
			<context kind="class">WorksheetFunction</context>
			<name>RTD</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>progID</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>server</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>topic1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>topic28</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Search-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Search">
			<context kind="class">WorksheetFunction</context>
			<name>Search</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.SearchB-->
	<element type="method">
		<source id="Excel.WorksheetFunction.SearchB">
			<context kind="class">WorksheetFunction</context>
			<name>SearchB</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Sinh-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Sinh">
			<context kind="class">WorksheetFunction</context>
			<name>Sinh</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Skew-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Skew">
			<context kind="class">WorksheetFunction</context>
			<name>Skew</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Sln-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Sln">
			<context kind="class">WorksheetFunction</context>
			<name>Sln</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Slope-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Slope">
			<context kind="class">WorksheetFunction</context>
			<name>Slope</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Small-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Small">
			<context kind="class">WorksheetFunction</context>
			<name>Small</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Standardize-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Standardize">
			<context kind="class">WorksheetFunction</context>
			<name>Standardize</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.StDev-->
	<element type="method">
		<source id="Excel.WorksheetFunction.StDev">
			<context kind="class">WorksheetFunction</context>
			<name>StDev</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.StDevP-->
	<element type="method">
		<source id="Excel.WorksheetFunction.StDevP">
			<context kind="class">WorksheetFunction</context>
			<name>StDevP</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.StEyx-->
	<element type="method">
		<source id="Excel.WorksheetFunction.StEyx">
			<context kind="class">WorksheetFunction</context>
			<name>StEyx</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Substitute-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Substitute">
			<context kind="class">WorksheetFunction</context>
			<name>Substitute</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Subtotal-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Subtotal">
			<context kind="class">WorksheetFunction</context>
			<name>Subtotal</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Range</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Sum-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Sum">
			<context kind="class">WorksheetFunction</context>
			<name>Sum</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.SumIf-->
	<element type="method">
		<source id="Excel.WorksheetFunction.SumIf">
			<context kind="class">WorksheetFunction</context>
			<name>SumIf</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.SumProduct-->
	<element type="method">
		<source id="Excel.WorksheetFunction.SumProduct">
			<context kind="class">WorksheetFunction</context>
			<name>SumProduct</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.SumSq-->
	<element type="method">
		<source id="Excel.WorksheetFunction.SumSq">
			<context kind="class">WorksheetFunction</context>
			<name>SumSq</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.SumX2MY2-->
	<element type="method">
		<source id="Excel.WorksheetFunction.SumX2MY2">
			<context kind="class">WorksheetFunction</context>
			<name>SumX2MY2</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.SumX2PY2-->
	<element type="method">
		<source id="Excel.WorksheetFunction.SumX2PY2">
			<context kind="class">WorksheetFunction</context>
			<name>SumX2PY2</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.SumXMY2-->
	<element type="method">
		<source id="Excel.WorksheetFunction.SumXMY2">
			<context kind="class">WorksheetFunction</context>
			<name>SumXMY2</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Syd-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Syd">
			<context kind="class">WorksheetFunction</context>
			<name>Syd</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Tanh-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Tanh">
			<context kind="class">WorksheetFunction</context>
			<name>Tanh</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.TDist-->
	<element type="method">
		<source id="Excel.WorksheetFunction.TDist">
			<context kind="class">WorksheetFunction</context>
			<name>TDist</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Text-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Text">
			<context kind="class">WorksheetFunction</context>
			<name>Text</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.ThaiDayOfWeek-->
	<element type="method">
		<source id="Excel.WorksheetFunction.ThaiDayOfWeek">
			<context kind="class">WorksheetFunction</context>
			<name>ThaiDayOfWeek</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.ThaiDigit-->
	<element type="method">
		<source id="Excel.WorksheetFunction.ThaiDigit">
			<context kind="class">WorksheetFunction</context>
			<name>ThaiDigit</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.ThaiMonthOfYear-->
	<element type="method">
		<source id="Excel.WorksheetFunction.ThaiMonthOfYear">
			<context kind="class">WorksheetFunction</context>
			<name>ThaiMonthOfYear</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.ThaiNumSound-->
	<element type="method">
		<source id="Excel.WorksheetFunction.ThaiNumSound">
			<context kind="class">WorksheetFunction</context>
			<name>ThaiNumSound</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.ThaiNumString-->
	<element type="method">
		<source id="Excel.WorksheetFunction.ThaiNumString">
			<context kind="class">WorksheetFunction</context>
			<name>ThaiNumString</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.ThaiStringLength-->
	<element type="method">
		<source id="Excel.WorksheetFunction.ThaiStringLength">
			<context kind="class">WorksheetFunction</context>
			<name>ThaiStringLength</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.ThaiYear-->
	<element type="method">
		<source id="Excel.WorksheetFunction.ThaiYear">
			<context kind="class">WorksheetFunction</context>
			<name>ThaiYear</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.TInv-->
	<element type="method">
		<source id="Excel.WorksheetFunction.TInv">
			<context kind="class">WorksheetFunction</context>
			<name>TInv</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Transpose-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Transpose">
			<context kind="class">WorksheetFunction</context>
			<name>Transpose</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Trend-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Trend">
			<context kind="class">WorksheetFunction</context>
			<name>Trend</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Trim-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Trim">
			<context kind="class">WorksheetFunction</context>
			<name>Trim</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Arg1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.TrimMean-->
	<element type="method">
		<source id="Excel.WorksheetFunction.TrimMean">
			<context kind="class">WorksheetFunction</context>
			<name>TrimMean</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.TTest-->
	<element type="method">
		<source id="Excel.WorksheetFunction.TTest">
			<context kind="class">WorksheetFunction</context>
			<name>TTest</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.USDollar-->
	<element type="method">
		<source id="Excel.WorksheetFunction.USDollar">
			<context kind="class">WorksheetFunction</context>
			<name>USDollar</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Var-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Var">
			<context kind="class">WorksheetFunction</context>
			<name>Var</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.VarP-->
	<element type="method">
		<source id="Excel.WorksheetFunction.VarP">
			<context kind="class">WorksheetFunction</context>
			<name>VarP</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg8</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg9</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg10</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg11</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg12</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg13</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg14</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg15</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg16</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg17</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg18</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg19</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg20</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg21</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg22</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg23</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg24</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg25</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg26</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg27</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg28</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg29</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg30</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Vdb-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Vdb">
			<context kind="class">WorksheetFunction</context>
			<name>Vdb</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg4</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg5</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg6</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg7</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.VLookup-->
	<element type="method">
		<source id="Excel.WorksheetFunction.VLookup">
			<context kind="class">WorksheetFunction</context>
			<name>VLookup</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Weekday-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Weekday">
			<context kind="class">WorksheetFunction</context>
			<name>Weekday</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg2</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.Weibull-->
	<element type="method">
		<source id="Excel.WorksheetFunction.Weibull">
			<context kind="class">WorksheetFunction</context>
			<name>Weibull</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>double</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg3</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>Arg4</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::WorksheetFunction.ZTest-->
	<element type="method">
		<source id="Excel.WorksheetFunction.ZTest">
			<context kind="class">WorksheetFunction</context>
			<name>ZTest</name>
			<type>double</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Arg1</name>
				</parameter>
				<parameter>
					<type>double</type>
					<name>Arg2</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Arg3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::Worksheets-->
	<element type="class">
		<source id="Excel.Worksheets">
			<name>Worksheets</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Worksheets.Add(ADAPTED)-->
	<element type="method">
		<source id="Excel.Worksheets.Add">
			<context kind="class">Worksheets</context>
			<name>Add</name>
			<type>
				<!-- two subclasses of Sheet -->
				<choice>Chart</choice>
				<choice>Worksheet</choice>
			</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Count</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheets.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheets.Application">
			<context kind="class">Worksheets</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Worksheets.Copy-->
	<element type="method">
		<source id="Excel.Worksheets.Copy">
			<context kind="class">Worksheets</context>
			<name>Copy</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheets.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheets.Count">
			<context kind="class">Worksheets</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Worksheets.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheets.Creator">
			<context kind="class">Worksheets</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Worksheets.Delete-->
	<element type="method">
		<source id="Excel.Worksheets.Delete">
			<context kind="class">Worksheets</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Worksheets.FillAcrossSheets-->
	<element type="method">
		<source id="Excel.Worksheets.FillAcrossSheets">
			<context kind="class">Worksheets</context>
			<name>FillAcrossSheets</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Range</type>
					<name>Range</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheets.HPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheets.HPageBreaks">
			<context kind="class">Worksheets</context>
			<name>HPageBreaks</name>
			<type>HPageBreaks</type>
		</source>
	</element>
	<!--property::Worksheets.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheets.Item">
			<context kind="class">Worksheets</context>
			<name default="true">Item</name>
			<type>Worksheet</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheets.Move-->
	<element type="method">
		<source id="Excel.Worksheets.Move">
			<context kind="class">Worksheets</context>
			<name>Move</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>After</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheets.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheets.Parent">
			<context kind="class">Worksheets</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Worksheets.PrintOut-->
	<element type="method">
		<source id="Excel.Worksheets.PrintOut">
			<context kind="class">Worksheets</context>
			<name>PrintOut</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>From</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>To</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Copies</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Preview</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ActivePrinter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrintToFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Collate</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>PrToFileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheets.PrintPreview-->
	<element type="method">
		<source id="Excel.Worksheets.PrintPreview">
			<context kind="class">Worksheets</context>
			<name>PrintPreview</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>EnableChanges</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Worksheets.Select-->
	<element type="method">
		<source id="Excel.Worksheets.Select">
			<context kind="class">Worksheets</context>
			<name>Select</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Replace</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Worksheets.Visible-->
	<element type="property">
		<source id="Excel.Worksheets.Visible">
			<context kind="class">Worksheets</context>
			<name>Visible</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Worksheets.VPageBreaks {ReadOnly}-->
	<element type="property">
		<source id="Excel.Worksheets.VPageBreaks">
			<context kind="class">Worksheets</context>
			<name>VPageBreaks</name>
			<type>VPageBreaks</type>
		</source>
	</element>
	<!--enum::XlApplicationInternational  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlApplicationInternational">
			<name>XlApplicationInternational</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl24HourClock {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xl24HourClock">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xl24HourClock</name>
			<value>33</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl4DigitYears {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xl4DigitYears">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xl4DigitYears</name>
			<value>43</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAlternateArraySeparator {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlAlternateArraySeparator">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlAlternateArraySeparator</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColumnSeparator {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlColumnSeparator">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlColumnSeparator</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCountryCode {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlCountryCode">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlCountryCode</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCountrySetting {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlCountrySetting">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlCountrySetting</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCurrencyBefore {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlCurrencyBefore">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlCurrencyBefore</name>
			<value>37</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCurrencyCode {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlCurrencyCode">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlCurrencyCode</name>
			<value>25</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCurrencyDigits {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlCurrencyDigits">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlCurrencyDigits</name>
			<value>27</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCurrencyLeadingZeros {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlCurrencyLeadingZeros">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlCurrencyLeadingZeros</name>
			<value>40</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCurrencyMinusSign {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlCurrencyMinusSign">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlCurrencyMinusSign</name>
			<value>38</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCurrencyNegative {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlCurrencyNegative">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlCurrencyNegative</name>
			<value>28</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCurrencySpaceBefore {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlCurrencySpaceBefore">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlCurrencySpaceBefore</name>
			<value>36</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCurrencyTrailingZeros {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlCurrencyTrailingZeros">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlCurrencyTrailingZeros</name>
			<value>39</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDateOrder {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlDateOrder">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlDateOrder</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDateSeparator {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlDateSeparator">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlDateSeparator</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDayCode {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlDayCode">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlDayCode</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDayLeadingZero {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlDayLeadingZero">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlDayLeadingZero</name>
			<value>42</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDecimalSeparator {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlDecimalSeparator">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlDecimalSeparator</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGeneralFormatName {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlGeneralFormatName">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlGeneralFormatName</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHourCode {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlHourCode">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlHourCode</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLeftBrace {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlLeftBrace">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlLeftBrace</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLeftBracket {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlLeftBracket">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlLeftBracket</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListSeparator {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlListSeparator">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlListSeparator</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLowerCaseColumnLetter {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlLowerCaseColumnLetter">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlLowerCaseColumnLetter</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLowerCaseRowLetter {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlLowerCaseRowLetter">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlLowerCaseRowLetter</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMDY {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlMDY">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlMDY</name>
			<value>44</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMetric {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlMetric">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlMetric</name>
			<value>35</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMinuteCode {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlMinuteCode">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlMinuteCode</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMonthCode {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlMonthCode">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlMonthCode</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMonthLeadingZero {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlMonthLeadingZero">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlMonthLeadingZero</name>
			<value>41</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMonthNameChars {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlMonthNameChars">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlMonthNameChars</name>
			<value>30</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoncurrencyDigits {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlNoncurrencyDigits">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlNoncurrencyDigits</name>
			<value>29</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNonEnglishFunctions {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlNonEnglishFunctions">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlNonEnglishFunctions</name>
			<value>34</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRightBrace {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlRightBrace">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlRightBrace</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRightBracket {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlRightBracket">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlRightBracket</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRowSeparator {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlRowSeparator">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlRowSeparator</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSecondCode {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlSecondCode">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlSecondCode</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlThousandsSeparator {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlThousandsSeparator">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlThousandsSeparator</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTimeLeadingZero {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlTimeLeadingZero">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlTimeLeadingZero</name>
			<value>45</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTimeSeparator {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlTimeSeparator">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlTimeSeparator</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUpperCaseColumnLetter {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlUpperCaseColumnLetter">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlUpperCaseColumnLetter</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUpperCaseRowLetter {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlUpperCaseRowLetter">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlUpperCaseRowLetter</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWeekdayNameChars {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlWeekdayNameChars">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlWeekdayNameChars</name>
			<value>31</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlYearCode {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplicationInternational.xlYearCode">
			<context kind="enumeration">XlApplicationInternational</context>
			<name>xlYearCode</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlApplyNamesOrder  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlApplyNamesOrder">
			<name>XlApplyNamesOrder</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColumnThenRow {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplyNamesOrder.xlColumnThenRow">
			<context kind="enumeration">XlApplyNamesOrder</context>
			<name>xlColumnThenRow</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRowThenColumn {Constant}-->
	<element type="constant">
		<source id="Excel.XlApplyNamesOrder.xlRowThenColumn">
			<context kind="enumeration">XlApplyNamesOrder</context>
			<name>xlRowThenColumn</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlArabicModes  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlArabicModes">
			<name>XlArabicModes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArabicBothStrict {Constant}-->
	<element type="constant">
		<source id="Excel.XlArabicModes.xlArabicBothStrict">
			<context kind="enumeration">XlArabicModes</context>
			<name>xlArabicBothStrict</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArabicNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlArabicModes.xlArabicNone">
			<context kind="enumeration">XlArabicModes</context>
			<name>xlArabicNone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArabicStrictAlefHamza {Constant}-->
	<element type="constant">
		<source id="Excel.XlArabicModes.xlArabicStrictAlefHamza">
			<context kind="enumeration">XlArabicModes</context>
			<name>xlArabicStrictAlefHamza</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArabicStrictFinalYaa {Constant}-->
	<element type="constant">
		<source id="Excel.XlArabicModes.xlArabicStrictFinalYaa">
			<context kind="enumeration">XlArabicModes</context>
			<name>xlArabicStrictFinalYaa</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlArrangeStyle  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlArrangeStyle">
			<name>XlArrangeStyle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrangeStyleCascade {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrangeStyle.xlArrangeStyleCascade">
			<context kind="enumeration">XlArrangeStyle</context>
			<name>xlArrangeStyleCascade</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrangeStyleHorizontal {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrangeStyle.xlArrangeStyleHorizontal">
			<context kind="enumeration">XlArrangeStyle</context>
			<name>xlArrangeStyleHorizontal</name>
			<value>-4128</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrangeStyleTiled {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrangeStyle.xlArrangeStyleTiled">
			<context kind="enumeration">XlArrangeStyle</context>
			<name>xlArrangeStyleTiled</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrangeStyleVertical {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrangeStyle.xlArrangeStyleVertical">
			<context kind="enumeration">XlArrangeStyle</context>
			<name>xlArrangeStyleVertical</name>
			<value>-4166</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlArrowHeadLength  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlArrowHeadLength">
			<name>XlArrowHeadLength</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrowHeadLengthLong {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrowHeadLength.xlArrowHeadLengthLong">
			<context kind="enumeration">XlArrowHeadLength</context>
			<name>xlArrowHeadLengthLong</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrowHeadLengthMedium {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrowHeadLength.xlArrowHeadLengthMedium">
			<context kind="enumeration">XlArrowHeadLength</context>
			<name>xlArrowHeadLengthMedium</name>
			<value>-4138</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrowHeadLengthShort {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrowHeadLength.xlArrowHeadLengthShort">
			<context kind="enumeration">XlArrowHeadLength</context>
			<name>xlArrowHeadLengthShort</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlArrowHeadStyle  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlArrowHeadStyle">
			<name>XlArrowHeadStyle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrowHeadStyleClosed {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrowHeadStyle.xlArrowHeadStyleClosed">
			<context kind="enumeration">XlArrowHeadStyle</context>
			<name>xlArrowHeadStyleClosed</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrowHeadStyleDoubleClosed {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrowHeadStyle.xlArrowHeadStyleDoubleClosed">
			<context kind="enumeration">XlArrowHeadStyle</context>
			<name>xlArrowHeadStyleDoubleClosed</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrowHeadStyleDoubleOpen {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrowHeadStyle.xlArrowHeadStyleDoubleOpen">
			<context kind="enumeration">XlArrowHeadStyle</context>
			<name>xlArrowHeadStyleDoubleOpen</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrowHeadStyleNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrowHeadStyle.xlArrowHeadStyleNone">
			<context kind="enumeration">XlArrowHeadStyle</context>
			<name>xlArrowHeadStyleNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrowHeadStyleOpen {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrowHeadStyle.xlArrowHeadStyleOpen">
			<context kind="enumeration">XlArrowHeadStyle</context>
			<name>xlArrowHeadStyleOpen</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlArrowHeadWidth  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlArrowHeadWidth">
			<name>XlArrowHeadWidth</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrowHeadWidthMedium {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrowHeadWidth.xlArrowHeadWidthMedium">
			<context kind="enumeration">XlArrowHeadWidth</context>
			<name>xlArrowHeadWidthMedium</name>
			<value>-4138</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrowHeadWidthNarrow {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrowHeadWidth.xlArrowHeadWidthNarrow">
			<context kind="enumeration">XlArrowHeadWidth</context>
			<name>xlArrowHeadWidthNarrow</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArrowHeadWidthWide {Constant}-->
	<element type="constant">
		<source id="Excel.XlArrowHeadWidth.xlArrowHeadWidthWide">
			<context kind="enumeration">XlArrowHeadWidth</context>
			<name>xlArrowHeadWidthWide</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlAutoFillType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlAutoFillType">
			<name>XlAutoFillType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFillCopy {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFillType.xlFillCopy">
			<context kind="enumeration">XlAutoFillType</context>
			<name>xlFillCopy</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFillDays {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFillType.xlFillDays">
			<context kind="enumeration">XlAutoFillType</context>
			<name>xlFillDays</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFillDefault {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFillType.xlFillDefault">
			<context kind="enumeration">XlAutoFillType</context>
			<name>xlFillDefault</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFillFormats {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFillType.xlFillFormats">
			<context kind="enumeration">XlAutoFillType</context>
			<name>xlFillFormats</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFillMonths {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFillType.xlFillMonths">
			<context kind="enumeration">XlAutoFillType</context>
			<name>xlFillMonths</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFillSeries {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFillType.xlFillSeries">
			<context kind="enumeration">XlAutoFillType</context>
			<name>xlFillSeries</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFillValues {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFillType.xlFillValues">
			<context kind="enumeration">XlAutoFillType</context>
			<name>xlFillValues</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFillWeekdays {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFillType.xlFillWeekdays">
			<context kind="enumeration">XlAutoFillType</context>
			<name>xlFillWeekdays</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFillYears {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFillType.xlFillYears">
			<context kind="enumeration">XlAutoFillType</context>
			<name>xlFillYears</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGrowthTrend {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFillType.xlGrowthTrend">
			<context kind="enumeration">XlAutoFillType</context>
			<name>xlGrowthTrend</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinearTrend {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFillType.xlLinearTrend">
			<context kind="enumeration">XlAutoFillType</context>
			<name>xlLinearTrend</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlAutoFilterOperator  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlAutoFilterOperator">
			<name>XlAutoFilterOperator</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAnd {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFilterOperator.xlAnd">
			<context kind="enumeration">XlAutoFilterOperator</context>
			<name>xlAnd</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBottom10Items {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFilterOperator.xlBottom10Items">
			<context kind="enumeration">XlAutoFilterOperator</context>
			<name>xlBottom10Items</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBottom10Percent {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFilterOperator.xlBottom10Percent">
			<context kind="enumeration">XlAutoFilterOperator</context>
			<name>xlBottom10Percent</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOr {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFilterOperator.xlOr">
			<context kind="enumeration">XlAutoFilterOperator</context>
			<name>xlOr</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTop10Items {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFilterOperator.xlTop10Items">
			<context kind="enumeration">XlAutoFilterOperator</context>
			<name>xlTop10Items</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTop10Percent {Constant}-->
	<element type="constant">
		<source id="Excel.XlAutoFilterOperator.xlTop10Percent">
			<context kind="enumeration">XlAutoFilterOperator</context>
			<name>xlTop10Percent</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlAxisCrosses  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlAxisCrosses">
			<name>XlAxisCrosses</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAxisCrossesAutomatic {Constant}-->
	<element type="constant">
		<source id="Excel.XlAxisCrosses.xlAxisCrossesAutomatic">
			<context kind="enumeration">XlAxisCrosses</context>
			<name>xlAxisCrossesAutomatic</name>
			<value>-4105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAxisCrossesCustom {Constant}-->
	<element type="constant">
		<source id="Excel.XlAxisCrosses.xlAxisCrossesCustom">
			<context kind="enumeration">XlAxisCrosses</context>
			<name>xlAxisCrossesCustom</name>
			<value>-4114</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAxisCrossesMaximum {Constant}-->
	<element type="constant">
		<source id="Excel.XlAxisCrosses.xlAxisCrossesMaximum">
			<context kind="enumeration">XlAxisCrosses</context>
			<name>xlAxisCrossesMaximum</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAxisCrossesMinimum {Constant}-->
	<element type="constant">
		<source id="Excel.XlAxisCrosses.xlAxisCrossesMinimum">
			<context kind="enumeration">XlAxisCrosses</context>
			<name>xlAxisCrossesMinimum</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlAxisGroup  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlAxisGroup">
			<name>XlAxisGroup</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPrimary {Constant}-->
	<element type="constant">
		<source id="Excel.XlAxisGroup.xlPrimary">
			<context kind="enumeration">XlAxisGroup</context>
			<name>xlPrimary</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSecondary {Constant}-->
	<element type="constant">
		<source id="Excel.XlAxisGroup.xlSecondary">
			<context kind="enumeration">XlAxisGroup</context>
			<name>xlSecondary</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlAxisType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlAxisType">
			<name>XlAxisType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCategory {Constant}-->
	<element type="constant">
		<source id="Excel.XlAxisType.xlCategory">
			<context kind="enumeration">XlAxisType</context>
			<name>xlCategory</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSeriesAxis {Constant}-->
	<element type="constant">
		<source id="Excel.XlAxisType.xlSeriesAxis">
			<context kind="enumeration">XlAxisType</context>
			<name>xlSeriesAxis</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlValue {Constant}-->
	<element type="constant">
		<source id="Excel.XlAxisType.xlValue">
			<context kind="enumeration">XlAxisType</context>
			<name>xlValue</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlBackground  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlBackground">
			<name>XlBackground</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBackgroundAutomatic {Constant}-->
	<element type="constant">
		<source id="Excel.XlBackground.xlBackgroundAutomatic">
			<context kind="enumeration">XlBackground</context>
			<name>xlBackgroundAutomatic</name>
			<value>-4105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBackgroundOpaque {Constant}-->
	<element type="constant">
		<source id="Excel.XlBackground.xlBackgroundOpaque">
			<context kind="enumeration">XlBackground</context>
			<name>xlBackgroundOpaque</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBackgroundTransparent {Constant}-->
	<element type="constant">
		<source id="Excel.XlBackground.xlBackgroundTransparent">
			<context kind="enumeration">XlBackground</context>
			<name>xlBackgroundTransparent</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlBarShape  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlBarShape">
			<name>XlBarShape</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBox {Constant}-->
	<element type="constant">
		<source id="Excel.XlBarShape.xlBox">
			<context kind="enumeration">XlBarShape</context>
			<name>xlBox</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlConeToMax {Constant}-->
	<element type="constant">
		<source id="Excel.XlBarShape.xlConeToMax">
			<context kind="enumeration">XlBarShape</context>
			<name>xlConeToMax</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlConeToPoint {Constant}-->
	<element type="constant">
		<source id="Excel.XlBarShape.xlConeToPoint">
			<context kind="enumeration">XlBarShape</context>
			<name>xlConeToPoint</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCylinder {Constant}-->
	<element type="constant">
		<source id="Excel.XlBarShape.xlCylinder">
			<context kind="enumeration">XlBarShape</context>
			<name>xlCylinder</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPyramidToMax {Constant}-->
	<element type="constant">
		<source id="Excel.XlBarShape.xlPyramidToMax">
			<context kind="enumeration">XlBarShape</context>
			<name>xlPyramidToMax</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPyramidToPoint {Constant}-->
	<element type="constant">
		<source id="Excel.XlBarShape.xlPyramidToPoint">
			<context kind="enumeration">XlBarShape</context>
			<name>xlPyramidToPoint</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlBordersIndex  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlBordersIndex">
			<name>XlBordersIndex</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDiagonalDown {Constant}-->
	<element type="constant">
		<source id="Excel.XlBordersIndex.xlDiagonalDown">
			<context kind="enumeration">XlBordersIndex</context>
			<name>xlDiagonalDown</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDiagonalUp {Constant}-->
	<element type="constant">
		<source id="Excel.XlBordersIndex.xlDiagonalUp">
			<context kind="enumeration">XlBordersIndex</context>
			<name>xlDiagonalUp</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEdgeBottom {Constant}-->
	<element type="constant">
		<source id="Excel.XlBordersIndex.xlEdgeBottom">
			<context kind="enumeration">XlBordersIndex</context>
			<name>xlEdgeBottom</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEdgeLeft {Constant}-->
	<element type="constant">
		<source id="Excel.XlBordersIndex.xlEdgeLeft">
			<context kind="enumeration">XlBordersIndex</context>
			<name>xlEdgeLeft</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEdgeRight {Constant}-->
	<element type="constant">
		<source id="Excel.XlBordersIndex.xlEdgeRight">
			<context kind="enumeration">XlBordersIndex</context>
			<name>xlEdgeRight</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEdgeTop {Constant}-->
	<element type="constant">
		<source id="Excel.XlBordersIndex.xlEdgeTop">
			<context kind="enumeration">XlBordersIndex</context>
			<name>xlEdgeTop</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlInsideHorizontal {Constant}-->
	<element type="constant">
		<source id="Excel.XlBordersIndex.xlInsideHorizontal">
			<context kind="enumeration">XlBordersIndex</context>
			<name>xlInsideHorizontal</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlInsideVertical {Constant}-->
	<element type="constant">
		<source id="Excel.XlBordersIndex.xlInsideVertical">
			<context kind="enumeration">XlBordersIndex</context>
			<name>xlInsideVertical</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlBorderWeight  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlBorderWeight">
			<name>XlBorderWeight</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHairline {Constant}-->
	<element type="constant">
		<source id="Excel.XlBorderWeight.xlHairline">
			<context kind="enumeration">XlBorderWeight</context>
			<name>xlHairline</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMedium {Constant}-->
	<element type="constant">
		<source id="Excel.XlBorderWeight.xlMedium">
			<context kind="enumeration">XlBorderWeight</context>
			<name>xlMedium</name>
			<value>-4138</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlThick {Constant}-->
	<element type="constant">
		<source id="Excel.XlBorderWeight.xlThick">
			<context kind="enumeration">XlBorderWeight</context>
			<name>xlThick</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlThin {Constant}-->
	<element type="constant">
		<source id="Excel.XlBorderWeight.xlThin">
			<context kind="enumeration">XlBorderWeight</context>
			<name>xlThin</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlBuiltInDialog  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlBuiltInDialog">
			<name>XlBuiltInDialog</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogActivate {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogActivate">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogActivate</name>
			<value>103</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogActiveCellFont {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogActiveCellFont">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogActiveCellFont</name>
			<value>476</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogAddChartAutoformat {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogAddChartAutoformat">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogAddChartAutoformat</name>
			<value>390</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogAddinManager {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogAddinManager">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogAddinManager</name>
			<value>321</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogAlignment {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogAlignment">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogAlignment</name>
			<value>43</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogApplyNames {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogApplyNames">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogApplyNames</name>
			<value>133</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogApplyStyle {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogApplyStyle">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogApplyStyle</name>
			<value>212</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogAppMove {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogAppMove">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogAppMove</name>
			<value>170</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogAppSize {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogAppSize">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogAppSize</name>
			<value>171</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogArrangeAll {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogArrangeAll">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogArrangeAll</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogAssignToObject {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogAssignToObject">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogAssignToObject</name>
			<value>213</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogAssignToTool {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogAssignToTool">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogAssignToTool</name>
			<value>293</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogAttachText {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogAttachText">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogAttachText</name>
			<value>80</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogAttachToolbars {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogAttachToolbars">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogAttachToolbars</name>
			<value>323</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogAutoCorrect {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogAutoCorrect">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogAutoCorrect</name>
			<value>485</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogAxes {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogAxes">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogAxes</name>
			<value>78</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogBorder {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogBorder">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogBorder</name>
			<value>45</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogCalculation {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogCalculation">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogCalculation</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogCellProtection {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogCellProtection">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogCellProtection</name>
			<value>46</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogChangeLink {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogChangeLink">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogChangeLink</name>
			<value>166</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogChartAddData {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogChartAddData">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogChartAddData</name>
			<value>392</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogChartLocation {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogChartLocation">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogChartLocation</name>
			<value>527</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogChartOptionsDataLabelMultiple {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogChartOptionsDataLabelMultiple">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogChartOptionsDataLabelMultiple</name>
			<value>724</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogChartOptionsDataLabels {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogChartOptionsDataLabels">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogChartOptionsDataLabels</name>
			<value>505</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogChartOptionsDataTable {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogChartOptionsDataTable">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogChartOptionsDataTable</name>
			<value>506</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogChartSourceData {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogChartSourceData">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogChartSourceData</name>
			<value>540</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogChartTrend {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogChartTrend">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogChartTrend</name>
			<value>350</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogChartType {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogChartType">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogChartType</name>
			<value>526</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogChartWizard {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogChartWizard">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogChartWizard</name>
			<value>288</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogCheckboxProperties {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogCheckboxProperties">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogCheckboxProperties</name>
			<value>435</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogClear {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogClear">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogClear</name>
			<value>52</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogColorPalette {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogColorPalette">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogColorPalette</name>
			<value>161</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogColumnWidth {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogColumnWidth">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogColumnWidth</name>
			<value>47</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogCombination {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogCombination">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogCombination</name>
			<value>73</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogConditionalFormatting {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogConditionalFormatting">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogConditionalFormatting</name>
			<value>583</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogConsolidate {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogConsolidate">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogConsolidate</name>
			<value>191</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogCopyChart {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogCopyChart">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogCopyChart</name>
			<value>147</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogCopyPicture {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogCopyPicture">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogCopyPicture</name>
			<value>108</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogCreateList {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogCreateList">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogCreateList</name>
			<value>796</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogCreateNames {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogCreateNames">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogCreateNames</name>
			<value>62</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogCreatePublisher {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogCreatePublisher">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogCreatePublisher</name>
			<value>217</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogCustomizeToolbar {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogCustomizeToolbar">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogCustomizeToolbar</name>
			<value>276</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogCustomViews {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogCustomViews">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogCustomViews</name>
			<value>493</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogDataDelete {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogDataDelete">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogDataDelete</name>
			<value>36</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogDataLabel {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogDataLabel">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogDataLabel</name>
			<value>379</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogDataLabelMultiple {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogDataLabelMultiple">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogDataLabelMultiple</name>
			<value>723</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogDataSeries {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogDataSeries">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogDataSeries</name>
			<value>40</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogDataValidation {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogDataValidation">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogDataValidation</name>
			<value>525</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogDefineName {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogDefineName">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogDefineName</name>
			<value>61</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogDefineStyle {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogDefineStyle">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogDefineStyle</name>
			<value>229</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogDeleteFormat {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogDeleteFormat">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogDeleteFormat</name>
			<value>111</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogDeleteName {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogDeleteName">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogDeleteName</name>
			<value>110</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogDemote {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogDemote">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogDemote</name>
			<value>203</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogDisplay {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogDisplay">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogDisplay</name>
			<value>27</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogEditboxProperties {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogEditboxProperties">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogEditboxProperties</name>
			<value>438</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogEditColor {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogEditColor">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogEditColor</name>
			<value>223</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogEditDelete {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogEditDelete">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogEditDelete</name>
			<value>54</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogEditionOptions {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogEditionOptions">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogEditionOptions</name>
			<value>251</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogEditSeries {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogEditSeries">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogEditSeries</name>
			<value>228</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogErrorbarX {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogErrorbarX">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogErrorbarX</name>
			<value>463</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogErrorbarY {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogErrorbarY">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogErrorbarY</name>
			<value>464</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogErrorChecking {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogErrorChecking">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogErrorChecking</name>
			<value>732</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogEvaluateFormula {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogEvaluateFormula">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogEvaluateFormula</name>
			<value>709</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogExternalDataProperties {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogExternalDataProperties">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogExternalDataProperties</name>
			<value>530</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogExtract {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogExtract">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogExtract</name>
			<value>35</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFileDelete {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFileDelete">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFileDelete</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFileSharing {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFileSharing">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFileSharing</name>
			<value>481</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFillGroup {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFillGroup">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFillGroup</name>
			<value>200</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFillWorkgroup {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFillWorkgroup">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFillWorkgroup</name>
			<value>301</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFilter {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFilter">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFilter</name>
			<value>447</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFilterAdvanced {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFilterAdvanced">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFilterAdvanced</name>
			<value>370</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFindFile {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFindFile">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFindFile</name>
			<value>475</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFont {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFont">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFont</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFontProperties {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFontProperties">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFontProperties</name>
			<value>381</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormatAuto {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormatAuto">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormatAuto</name>
			<value>269</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormatChart {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormatChart">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormatChart</name>
			<value>465</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormatCharttype {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormatCharttype">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormatCharttype</name>
			<value>423</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormatFont {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormatFont">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormatFont</name>
			<value>150</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormatLegend {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormatLegend">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormatLegend</name>
			<value>88</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormatMain {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormatMain">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormatMain</name>
			<value>225</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormatMove {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormatMove">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormatMove</name>
			<value>128</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormatNumber {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormatNumber">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormatNumber</name>
			<value>42</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormatOverlay {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormatOverlay">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormatOverlay</name>
			<value>226</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormatSize {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormatSize">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormatSize</name>
			<value>129</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormatText {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormatText">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormatText</name>
			<value>89</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormulaFind {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormulaFind">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormulaFind</name>
			<value>64</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormulaGoto {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormulaGoto">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormulaGoto</name>
			<value>63</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFormulaReplace {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFormulaReplace">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFormulaReplace</name>
			<value>130</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogFunctionWizard {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogFunctionWizard">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogFunctionWizard</name>
			<value>450</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGallery3dArea {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGallery3dArea">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGallery3dArea</name>
			<value>193</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGallery3dBar {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGallery3dBar">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGallery3dBar</name>
			<value>272</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGallery3dColumn {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGallery3dColumn">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGallery3dColumn</name>
			<value>194</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGallery3dLine {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGallery3dLine">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGallery3dLine</name>
			<value>195</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGallery3dPie {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGallery3dPie">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGallery3dPie</name>
			<value>196</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGallery3dSurface {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGallery3dSurface">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGallery3dSurface</name>
			<value>273</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGalleryArea {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGalleryArea">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGalleryArea</name>
			<value>67</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGalleryBar {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGalleryBar">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGalleryBar</name>
			<value>68</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGalleryColumn {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGalleryColumn">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGalleryColumn</name>
			<value>69</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGalleryCustom {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGalleryCustom">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGalleryCustom</name>
			<value>388</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGalleryDoughnut {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGalleryDoughnut">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGalleryDoughnut</name>
			<value>344</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGalleryLine {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGalleryLine">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGalleryLine</name>
			<value>70</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGalleryPie {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGalleryPie">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGalleryPie</name>
			<value>71</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGalleryRadar {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGalleryRadar">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGalleryRadar</name>
			<value>249</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGalleryScatter {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGalleryScatter">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGalleryScatter</name>
			<value>72</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGoalSeek {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGoalSeek">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGoalSeek</name>
			<value>198</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogGridlines {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogGridlines">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogGridlines</name>
			<value>76</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogImportTextFile {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogImportTextFile">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogImportTextFile</name>
			<value>666</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogInsert {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogInsert">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogInsert</name>
			<value>55</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogInsertHyperlink {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogInsertHyperlink">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogInsertHyperlink</name>
			<value>596</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogInsertNameLabel {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogInsertNameLabel">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogInsertNameLabel</name>
			<value>496</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogInsertObject {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogInsertObject">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogInsertObject</name>
			<value>259</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogInsertPicture {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogInsertPicture">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogInsertPicture</name>
			<value>342</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogInsertTitle {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogInsertTitle">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogInsertTitle</name>
			<value>380</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogLabelProperties {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogLabelProperties">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogLabelProperties</name>
			<value>436</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogListboxProperties {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogListboxProperties">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogListboxProperties</name>
			<value>437</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogMacroOptions {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogMacroOptions">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogMacroOptions</name>
			<value>382</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogMailEditMailer {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogMailEditMailer">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogMailEditMailer</name>
			<value>470</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogMailLogon {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogMailLogon">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogMailLogon</name>
			<value>339</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogMailNextLetter {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogMailNextLetter">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogMailNextLetter</name>
			<value>378</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogMainChart {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogMainChart">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogMainChart</name>
			<value>85</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogMainChartType {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogMainChartType">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogMainChartType</name>
			<value>185</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogMenuEditor {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogMenuEditor">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogMenuEditor</name>
			<value>322</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogMove {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogMove">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogMove</name>
			<value>262</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogMyPermission {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogMyPermission">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogMyPermission</name>
			<value>834</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogNew {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogNew">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogNew</name>
			<value>119</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogNewWebQuery {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogNewWebQuery">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogNewWebQuery</name>
			<value>667</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogNote {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogNote">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogNote</name>
			<value>154</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogObjectProperties {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogObjectProperties">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogObjectProperties</name>
			<value>207</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogObjectProtection {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogObjectProtection">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogObjectProtection</name>
			<value>214</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOpen {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOpen">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOpen</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOpenLinks {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOpenLinks">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOpenLinks</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOpenMail {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOpenMail">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOpenMail</name>
			<value>188</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOpenText {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOpenText">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOpenText</name>
			<value>441</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOptionsCalculation {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOptionsCalculation">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOptionsCalculation</name>
			<value>318</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOptionsChart {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOptionsChart">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOptionsChart</name>
			<value>325</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOptionsEdit {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOptionsEdit">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOptionsEdit</name>
			<value>319</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOptionsGeneral {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOptionsGeneral">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOptionsGeneral</name>
			<value>356</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOptionsListsAdd {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOptionsListsAdd">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOptionsListsAdd</name>
			<value>458</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOptionsME {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOptionsME">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOptionsME</name>
			<value>647</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOptionsTransition {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOptionsTransition">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOptionsTransition</name>
			<value>355</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOptionsView {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOptionsView">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOptionsView</name>
			<value>320</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOutline {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOutline">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOutline</name>
			<value>142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOverlay {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOverlay">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOverlay</name>
			<value>86</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogOverlayChartType {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogOverlayChartType">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogOverlayChartType</name>
			<value>186</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPageSetup {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPageSetup">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPageSetup</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogParse {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogParse">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogParse</name>
			<value>91</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPasteNames {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPasteNames">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPasteNames</name>
			<value>58</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPasteSpecial {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPasteSpecial">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPasteSpecial</name>
			<value>53</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPatterns {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPatterns">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPatterns</name>
			<value>84</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPermission {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPermission">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPermission</name>
			<value>832</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPhonetic {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPhonetic">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPhonetic</name>
			<value>656</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPivotCalculatedField {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPivotCalculatedField">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPivotCalculatedField</name>
			<value>570</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPivotCalculatedItem {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPivotCalculatedItem">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPivotCalculatedItem</name>
			<value>572</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPivotClientServerSet {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPivotClientServerSet">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPivotClientServerSet</name>
			<value>689</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPivotFieldGroup {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPivotFieldGroup">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPivotFieldGroup</name>
			<value>433</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPivotFieldProperties {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPivotFieldProperties">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPivotFieldProperties</name>
			<value>313</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPivotFieldUngroup {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPivotFieldUngroup">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPivotFieldUngroup</name>
			<value>434</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPivotShowPages {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPivotShowPages">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPivotShowPages</name>
			<value>421</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPivotSolveOrder {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPivotSolveOrder">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPivotSolveOrder</name>
			<value>568</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPivotTableOptions {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPivotTableOptions">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPivotTableOptions</name>
			<value>567</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPivotTableWizard {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPivotTableWizard">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPivotTableWizard</name>
			<value>312</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPlacement {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPlacement">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPlacement</name>
			<value>300</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPrint {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPrint">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPrint</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPrinterSetup {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPrinterSetup">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPrinterSetup</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPrintPreview {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPrintPreview">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPrintPreview</name>
			<value>222</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPromote {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPromote">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPromote</name>
			<value>202</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogProperties {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogProperties">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogProperties</name>
			<value>474</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPropertyFields {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPropertyFields">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPropertyFields</name>
			<value>754</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogProtectDocument {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogProtectDocument">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogProtectDocument</name>
			<value>28</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogProtectSharing {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogProtectSharing">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogProtectSharing</name>
			<value>620</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPublishAsWebPage {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPublishAsWebPage">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPublishAsWebPage</name>
			<value>653</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogPushbuttonProperties {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogPushbuttonProperties">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogPushbuttonProperties</name>
			<value>445</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogReplaceFont {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogReplaceFont">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogReplaceFont</name>
			<value>134</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogRoutingSlip {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogRoutingSlip">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogRoutingSlip</name>
			<value>336</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogRowHeight {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogRowHeight">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogRowHeight</name>
			<value>127</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogRun {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogRun">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogRun</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSaveAs {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSaveAs">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSaveAs</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSaveCopyAs {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSaveCopyAs">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSaveCopyAs</name>
			<value>456</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSaveNewObject {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSaveNewObject">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSaveNewObject</name>
			<value>208</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSaveWorkbook {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSaveWorkbook">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSaveWorkbook</name>
			<value>145</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSaveWorkspace {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSaveWorkspace">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSaveWorkspace</name>
			<value>285</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogScale {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogScale">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogScale</name>
			<value>87</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogScenarioAdd {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogScenarioAdd">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogScenarioAdd</name>
			<value>307</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogScenarioCells {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogScenarioCells">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogScenarioCells</name>
			<value>305</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogScenarioEdit {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogScenarioEdit">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogScenarioEdit</name>
			<value>308</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogScenarioMerge {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogScenarioMerge">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogScenarioMerge</name>
			<value>473</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogScenarioSummary {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogScenarioSummary">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogScenarioSummary</name>
			<value>311</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogScrollbarProperties {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogScrollbarProperties">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogScrollbarProperties</name>
			<value>420</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSearch {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSearch">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSearch</name>
			<value>731</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSelectSpecial {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSelectSpecial">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSelectSpecial</name>
			<value>132</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSendMail {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSendMail">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSendMail</name>
			<value>189</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSeriesAxes {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSeriesAxes">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSeriesAxes</name>
			<value>460</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSeriesOptions {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSeriesOptions">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSeriesOptions</name>
			<value>557</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSeriesOrder {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSeriesOrder">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSeriesOrder</name>
			<value>466</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSeriesShape {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSeriesShape">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSeriesShape</name>
			<value>504</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSeriesX {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSeriesX">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSeriesX</name>
			<value>461</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSeriesY {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSeriesY">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSeriesY</name>
			<value>462</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSetBackgroundPicture {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSetBackgroundPicture">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSetBackgroundPicture</name>
			<value>509</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSetPrintTitles {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSetPrintTitles">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSetPrintTitles</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSetUpdateStatus {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSetUpdateStatus">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSetUpdateStatus</name>
			<value>159</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogShowDetail {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogShowDetail">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogShowDetail</name>
			<value>204</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogShowToolbar {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogShowToolbar">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogShowToolbar</name>
			<value>220</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSize {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSize">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSize</name>
			<value>261</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSort {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSort">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSort</name>
			<value>39</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSortSpecial {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSortSpecial">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSortSpecial</name>
			<value>192</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSplit {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSplit">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSplit</name>
			<value>137</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogStandardFont {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogStandardFont">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogStandardFont</name>
			<value>190</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogStandardWidth {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogStandardWidth">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogStandardWidth</name>
			<value>472</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogStyle {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogStyle">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogStyle</name>
			<value>44</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSubscribeTo {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSubscribeTo">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSubscribeTo</name>
			<value>218</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSubtotalCreate {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSubtotalCreate">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSubtotalCreate</name>
			<value>398</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSummaryInfo {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogSummaryInfo">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogSummaryInfo</name>
			<value>474</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogTable {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogTable">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogTable</name>
			<value>41</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogTabOrder {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogTabOrder">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogTabOrder</name>
			<value>394</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogTextToColumns {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogTextToColumns">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogTextToColumns</name>
			<value>422</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogUnhide {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogUnhide">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogUnhide</name>
			<value>94</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogUpdateLink {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogUpdateLink">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogUpdateLink</name>
			<value>201</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogVbaInsertFile {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogVbaInsertFile">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogVbaInsertFile</name>
			<value>328</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogVbaMakeAddin {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogVbaMakeAddin">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogVbaMakeAddin</name>
			<value>478</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogVbaProcedureDefinition {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogVbaProcedureDefinition">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogVbaProcedureDefinition</name>
			<value>330</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogView3d {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogView3d">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogView3d</name>
			<value>197</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWebOptionsBrowsers {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWebOptionsBrowsers">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWebOptionsBrowsers</name>
			<value>773</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWebOptionsEncoding {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWebOptionsEncoding">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWebOptionsEncoding</name>
			<value>686</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWebOptionsFiles {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWebOptionsFiles">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWebOptionsFiles</name>
			<value>684</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWebOptionsFonts {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWebOptionsFonts">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWebOptionsFonts</name>
			<value>687</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWebOptionsGeneral {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWebOptionsGeneral">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWebOptionsGeneral</name>
			<value>683</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWebOptionsPictures {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWebOptionsPictures">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWebOptionsPictures</name>
			<value>685</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWindowMove {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWindowMove">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWindowMove</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWindowSize {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWindowSize">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWindowSize</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWorkbookAdd {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWorkbookAdd">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWorkbookAdd</name>
			<value>281</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWorkbookCopy {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWorkbookCopy">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWorkbookCopy</name>
			<value>283</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWorkbookInsert {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWorkbookInsert">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWorkbookInsert</name>
			<value>354</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWorkbookMove {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWorkbookMove">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWorkbookMove</name>
			<value>282</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWorkbookName {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWorkbookName">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWorkbookName</name>
			<value>386</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWorkbookNew {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWorkbookNew">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWorkbookNew</name>
			<value>302</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWorkbookOptions {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWorkbookOptions">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWorkbookOptions</name>
			<value>284</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWorkbookProtect {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWorkbookProtect">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWorkbookProtect</name>
			<value>417</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWorkbookTabSplit {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWorkbookTabSplit">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWorkbookTabSplit</name>
			<value>415</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWorkbookUnhide {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWorkbookUnhide">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWorkbookUnhide</name>
			<value>384</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWorkgroup {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWorkgroup">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWorkgroup</name>
			<value>199</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogWorkspace {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogWorkspace">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogWorkspace</name>
			<value>95</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogZoom {Constant}-->
	<element type="constant">
		<source id="Excel.XlBuiltInDialog.xlDialogZoom">
			<context kind="enumeration">XlBuiltInDialog</context>
			<name>xlDialogZoom</name>
			<value>256</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCalculatedMemberType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCalculatedMemberType">
			<name>XlCalculatedMemberType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCalculatedMember {Constant}-->
	<element type="constant">
		<source id="Excel.XlCalculatedMemberType.xlCalculatedMember">
			<context kind="enumeration">XlCalculatedMemberType</context>
			<name>xlCalculatedMember</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCalculatedSet {Constant}-->
	<element type="constant">
		<source id="Excel.XlCalculatedMemberType.xlCalculatedSet">
			<context kind="enumeration">XlCalculatedMemberType</context>
			<name>xlCalculatedSet</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCalculation  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCalculation">
			<name>XlCalculation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCalculationAutomatic {Constant}-->
	<element type="constant">
		<source id="Excel.XlCalculation.xlCalculationAutomatic">
			<context kind="enumeration">XlCalculation</context>
			<name>xlCalculationAutomatic</name>
			<value>-4105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCalculationManual {Constant}-->
	<element type="constant">
		<source id="Excel.XlCalculation.xlCalculationManual">
			<context kind="enumeration">XlCalculation</context>
			<name>xlCalculationManual</name>
			<value>-4135</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCalculationSemiautomatic {Constant}-->
	<element type="constant">
		<source id="Excel.XlCalculation.xlCalculationSemiautomatic">
			<context kind="enumeration">XlCalculation</context>
			<name>xlCalculationSemiautomatic</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCalculationInterruptKey  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCalculationInterruptKey">
			<name>XlCalculationInterruptKey</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAnyKey {Constant}-->
	<element type="constant">
		<source id="Excel.XlCalculationInterruptKey.xlAnyKey">
			<context kind="enumeration">XlCalculationInterruptKey</context>
			<name>xlAnyKey</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEscKey {Constant}-->
	<element type="constant">
		<source id="Excel.XlCalculationInterruptKey.xlEscKey">
			<context kind="enumeration">XlCalculationInterruptKey</context>
			<name>xlEscKey</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoKey {Constant}-->
	<element type="constant">
		<source id="Excel.XlCalculationInterruptKey.xlNoKey">
			<context kind="enumeration">XlCalculationInterruptKey</context>
			<name>xlNoKey</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCalculationState  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCalculationState">
			<name>XlCalculationState</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCalculating {Constant}-->
	<element type="constant">
		<source id="Excel.XlCalculationState.xlCalculating">
			<context kind="enumeration">XlCalculationState</context>
			<name>xlCalculating</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDone {Constant}-->
	<element type="constant">
		<source id="Excel.XlCalculationState.xlDone">
			<context kind="enumeration">XlCalculationState</context>
			<name>xlDone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPending {Constant}-->
	<element type="constant">
		<source id="Excel.XlCalculationState.xlPending">
			<context kind="enumeration">XlCalculationState</context>
			<name>xlPending</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCategoryType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCategoryType">
			<name>XlCategoryType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAutomaticScale {Constant}-->
	<element type="constant">
		<source id="Excel.XlCategoryType.xlAutomaticScale">
			<context kind="enumeration">XlCategoryType</context>
			<name>xlAutomaticScale</name>
			<value>-4105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCategoryScale {Constant}-->
	<element type="constant">
		<source id="Excel.XlCategoryType.xlCategoryScale">
			<context kind="enumeration">XlCategoryType</context>
			<name>xlCategoryScale</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTimeScale {Constant}-->
	<element type="constant">
		<source id="Excel.XlCategoryType.xlTimeScale">
			<context kind="enumeration">XlCategoryType</context>
			<name>xlTimeScale</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCellInsertionMode  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCellInsertionMode">
			<name>XlCellInsertionMode</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlInsertDeleteCells {Constant}-->
	<element type="constant">
		<source id="Excel.XlCellInsertionMode.xlInsertDeleteCells">
			<context kind="enumeration">XlCellInsertionMode</context>
			<name>xlInsertDeleteCells</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlInsertEntireRows {Constant}-->
	<element type="constant">
		<source id="Excel.XlCellInsertionMode.xlInsertEntireRows">
			<context kind="enumeration">XlCellInsertionMode</context>
			<name>xlInsertEntireRows</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOverwriteCells {Constant}-->
	<element type="constant">
		<source id="Excel.XlCellInsertionMode.xlOverwriteCells">
			<context kind="enumeration">XlCellInsertionMode</context>
			<name>xlOverwriteCells</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCellType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCellType">
			<name>XlCellType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCellTypeAllFormatConditions {Constant}-->
	<element type="constant">
		<source id="Excel.XlCellType.xlCellTypeAllFormatConditions">
			<context kind="enumeration">XlCellType</context>
			<name>xlCellTypeAllFormatConditions</name>
			<value>-4172</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCellTypeAllValidation {Constant}-->
	<element type="constant">
		<source id="Excel.XlCellType.xlCellTypeAllValidation">
			<context kind="enumeration">XlCellType</context>
			<name>xlCellTypeAllValidation</name>
			<value>-4174</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCellTypeBlanks {Constant}-->
	<element type="constant">
		<source id="Excel.XlCellType.xlCellTypeBlanks">
			<context kind="enumeration">XlCellType</context>
			<name>xlCellTypeBlanks</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCellTypeComments {Constant}-->
	<element type="constant">
		<source id="Excel.XlCellType.xlCellTypeComments">
			<context kind="enumeration">XlCellType</context>
			<name>xlCellTypeComments</name>
			<value>-4144</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCellTypeConstants {Constant}-->
	<element type="constant">
		<source id="Excel.XlCellType.xlCellTypeConstants">
			<context kind="enumeration">XlCellType</context>
			<name>xlCellTypeConstants</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCellTypeFormulas {Constant}-->
	<element type="constant">
		<source id="Excel.XlCellType.xlCellTypeFormulas">
			<context kind="enumeration">XlCellType</context>
			<name>xlCellTypeFormulas</name>
			<value>-4123</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCellTypeLastCell {Constant}-->
	<element type="constant">
		<source id="Excel.XlCellType.xlCellTypeLastCell">
			<context kind="enumeration">XlCellType</context>
			<name>xlCellTypeLastCell</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCellTypeSameFormatConditions {Constant}-->
	<element type="constant">
		<source id="Excel.XlCellType.xlCellTypeSameFormatConditions">
			<context kind="enumeration">XlCellType</context>
			<name>xlCellTypeSameFormatConditions</name>
			<value>-4173</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCellTypeSameValidation {Constant}-->
	<element type="constant">
		<source id="Excel.XlCellType.xlCellTypeSameValidation">
			<context kind="enumeration">XlCellType</context>
			<name>xlCellTypeSameValidation</name>
			<value>-4175</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCellTypeVisible {Constant}-->
	<element type="constant">
		<source id="Excel.XlCellType.xlCellTypeVisible">
			<context kind="enumeration">XlCellType</context>
			<name>xlCellTypeVisible</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlChartGallery  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlChartGallery">
			<name>XlChartGallery</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAnyGallery {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartGallery.xlAnyGallery">
			<context kind="enumeration">XlChartGallery</context>
			<name>xlAnyGallery</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBuiltIn {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartGallery.xlBuiltIn">
			<context kind="enumeration">XlChartGallery</context>
			<name>xlBuiltIn</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUserDefined {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartGallery.xlUserDefined">
			<context kind="enumeration">XlChartGallery</context>
			<name>xlUserDefined</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlChartItem  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlChartItem">
			<name>XlChartItem</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAxis {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlAxis">
			<context kind="enumeration">XlChartItem</context>
			<name>xlAxis</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAxisTitle {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlAxisTitle">
			<context kind="enumeration">XlChartItem</context>
			<name>xlAxisTitle</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlChartArea {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlChartArea">
			<context kind="enumeration">XlChartItem</context>
			<name>xlChartArea</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlChartTitle {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlChartTitle">
			<context kind="enumeration">XlChartItem</context>
			<name>xlChartTitle</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCorners {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlCorners">
			<context kind="enumeration">XlChartItem</context>
			<name>xlCorners</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataLabel {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlDataLabel">
			<context kind="enumeration">XlChartItem</context>
			<name>xlDataLabel</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataTable {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlDataTable">
			<context kind="enumeration">XlChartItem</context>
			<name>xlDataTable</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDisplayUnitLabel {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlDisplayUnitLabel">
			<context kind="enumeration">XlChartItem</context>
			<name>xlDisplayUnitLabel</name>
			<value>30</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDownBars {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlDownBars">
			<context kind="enumeration">XlChartItem</context>
			<name>xlDownBars</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDropLines {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlDropLines">
			<context kind="enumeration">XlChartItem</context>
			<name>xlDropLines</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrorBars {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlErrorBars">
			<context kind="enumeration">XlChartItem</context>
			<name>xlErrorBars</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFloor {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlFloor">
			<context kind="enumeration">XlChartItem</context>
			<name>xlFloor</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHiLoLines {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlHiLoLines">
			<context kind="enumeration">XlChartItem</context>
			<name>xlHiLoLines</name>
			<value>25</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLeaderLines {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlLeaderLines">
			<context kind="enumeration">XlChartItem</context>
			<name>xlLeaderLines</name>
			<value>29</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLegend {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlLegend">
			<context kind="enumeration">XlChartItem</context>
			<name>xlLegend</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLegendEntry {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlLegendEntry">
			<context kind="enumeration">XlChartItem</context>
			<name>xlLegendEntry</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLegendKey {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlLegendKey">
			<context kind="enumeration">XlChartItem</context>
			<name>xlLegendKey</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMajorGridlines {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlMajorGridlines">
			<context kind="enumeration">XlChartItem</context>
			<name>xlMajorGridlines</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMinorGridlines {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlMinorGridlines">
			<context kind="enumeration">XlChartItem</context>
			<name>xlMinorGridlines</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNothing {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlNothing">
			<context kind="enumeration">XlChartItem</context>
			<name>xlNothing</name>
			<value>28</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotChartDropZone {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlPivotChartDropZone">
			<context kind="enumeration">XlChartItem</context>
			<name>xlPivotChartDropZone</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotChartFieldButton {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlPivotChartFieldButton">
			<context kind="enumeration">XlChartItem</context>
			<name>xlPivotChartFieldButton</name>
			<value>31</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPlotArea {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlPlotArea">
			<context kind="enumeration">XlChartItem</context>
			<name>xlPlotArea</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRadarAxisLabels {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlRadarAxisLabels">
			<context kind="enumeration">XlChartItem</context>
			<name>xlRadarAxisLabels</name>
			<value>27</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSeries {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlSeries">
			<context kind="enumeration">XlChartItem</context>
			<name>xlSeries</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSeriesLines {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlSeriesLines">
			<context kind="enumeration">XlChartItem</context>
			<name>xlSeriesLines</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlShape {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlShape">
			<context kind="enumeration">XlChartItem</context>
			<name>xlShape</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTrendline {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlTrendline">
			<context kind="enumeration">XlChartItem</context>
			<name>xlTrendline</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUpBars {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlUpBars">
			<context kind="enumeration">XlChartItem</context>
			<name>xlUpBars</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWalls {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlWalls">
			<context kind="enumeration">XlChartItem</context>
			<name>xlWalls</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXErrorBars {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlXErrorBars">
			<context kind="enumeration">XlChartItem</context>
			<name>xlXErrorBars</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlYErrorBars {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartItem.xlYErrorBars">
			<context kind="enumeration">XlChartItem</context>
			<name>xlYErrorBars</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlChartLocation  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlChartLocation">
			<name>XlChartLocation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLocationAsNewSheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartLocation.xlLocationAsNewSheet">
			<context kind="enumeration">XlChartLocation</context>
			<name>xlLocationAsNewSheet</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLocationAsObject {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartLocation.xlLocationAsObject">
			<context kind="enumeration">XlChartLocation</context>
			<name>xlLocationAsObject</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLocationAutomatic {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartLocation.xlLocationAutomatic">
			<context kind="enumeration">XlChartLocation</context>
			<name>xlLocationAutomatic</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlChartPicturePlacement  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlChartPicturePlacement">
			<name>XlChartPicturePlacement</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAllFaces {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartPicturePlacement.xlAllFaces">
			<context kind="enumeration">XlChartPicturePlacement</context>
			<name>xlAllFaces</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEnd {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartPicturePlacement.xlEnd">
			<context kind="enumeration">XlChartPicturePlacement</context>
			<name>xlEnd</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEndSides {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartPicturePlacement.xlEndSides">
			<context kind="enumeration">XlChartPicturePlacement</context>
			<name>xlEndSides</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFront {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartPicturePlacement.xlFront">
			<context kind="enumeration">XlChartPicturePlacement</context>
			<name>xlFront</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFrontEnd {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartPicturePlacement.xlFrontEnd">
			<context kind="enumeration">XlChartPicturePlacement</context>
			<name>xlFrontEnd</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFrontSides {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartPicturePlacement.xlFrontSides">
			<context kind="enumeration">XlChartPicturePlacement</context>
			<name>xlFrontSides</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSides {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartPicturePlacement.xlSides">
			<context kind="enumeration">XlChartPicturePlacement</context>
			<name>xlSides</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlChartPictureType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlChartPictureType">
			<name>XlChartPictureType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStack {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartPictureType.xlStack">
			<context kind="enumeration">XlChartPictureType</context>
			<name>xlStack</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStackScale {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartPictureType.xlStackScale">
			<context kind="enumeration">XlChartPictureType</context>
			<name>xlStackScale</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStretch {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartPictureType.xlStretch">
			<context kind="enumeration">XlChartPictureType</context>
			<name>xlStretch</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlChartSplitType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlChartSplitType">
			<name>XlChartSplitType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSplitByCustomSplit {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartSplitType.xlSplitByCustomSplit">
			<context kind="enumeration">XlChartSplitType</context>
			<name>xlSplitByCustomSplit</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSplitByPercentValue {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartSplitType.xlSplitByPercentValue">
			<context kind="enumeration">XlChartSplitType</context>
			<name>xlSplitByPercentValue</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSplitByPosition {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartSplitType.xlSplitByPosition">
			<context kind="enumeration">XlChartSplitType</context>
			<name>xlSplitByPosition</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSplitByValue {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartSplitType.xlSplitByValue">
			<context kind="enumeration">XlChartSplitType</context>
			<name>xlSplitByValue</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlChartType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlChartType">
			<name>XlChartType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DArea {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xl3DArea">
			<context kind="enumeration">XlChartType</context>
			<name>xl3DArea</name>
			<value>-4098</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DAreaStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xl3DAreaStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xl3DAreaStacked</name>
			<value>78</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DAreaStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xl3DAreaStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xl3DAreaStacked100</name>
			<value>79</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DBarClustered {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xl3DBarClustered">
			<context kind="enumeration">XlChartType</context>
			<name>xl3DBarClustered</name>
			<value>60</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DBarStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xl3DBarStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xl3DBarStacked</name>
			<value>61</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DBarStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xl3DBarStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xl3DBarStacked100</name>
			<value>62</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DColumn {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xl3DColumn">
			<context kind="enumeration">XlChartType</context>
			<name>xl3DColumn</name>
			<value>-4100</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DColumnClustered {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xl3DColumnClustered">
			<context kind="enumeration">XlChartType</context>
			<name>xl3DColumnClustered</name>
			<value>54</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DColumnStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xl3DColumnStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xl3DColumnStacked</name>
			<value>55</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DColumnStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xl3DColumnStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xl3DColumnStacked100</name>
			<value>56</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DLine {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xl3DLine">
			<context kind="enumeration">XlChartType</context>
			<name>xl3DLine</name>
			<value>-4101</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DPie {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xl3DPie">
			<context kind="enumeration">XlChartType</context>
			<name>xl3DPie</name>
			<value>-4102</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xl3DPieExploded {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xl3DPieExploded">
			<context kind="enumeration">XlChartType</context>
			<name>xl3DPieExploded</name>
			<value>70</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlArea {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlArea">
			<context kind="enumeration">XlChartType</context>
			<name>xlArea</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAreaStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlAreaStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xlAreaStacked</name>
			<value>76</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAreaStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlAreaStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xlAreaStacked100</name>
			<value>77</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBarClustered {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlBarClustered">
			<context kind="enumeration">XlChartType</context>
			<name>xlBarClustered</name>
			<value>57</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBarOfPie {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlBarOfPie">
			<context kind="enumeration">XlChartType</context>
			<name>xlBarOfPie</name>
			<value>71</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBarStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlBarStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xlBarStacked</name>
			<value>58</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBarStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlBarStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xlBarStacked100</name>
			<value>59</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBubble {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlBubble">
			<context kind="enumeration">XlChartType</context>
			<name>xlBubble</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBubble3DEffect {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlBubble3DEffect">
			<context kind="enumeration">XlChartType</context>
			<name>xlBubble3DEffect</name>
			<value>87</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColumnClustered {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlColumnClustered">
			<context kind="enumeration">XlChartType</context>
			<name>xlColumnClustered</name>
			<value>51</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColumnStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlColumnStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xlColumnStacked</name>
			<value>52</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColumnStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlColumnStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xlColumnStacked100</name>
			<value>53</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlConeBarClustered {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlConeBarClustered">
			<context kind="enumeration">XlChartType</context>
			<name>xlConeBarClustered</name>
			<value>102</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlConeBarStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlConeBarStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xlConeBarStacked</name>
			<value>103</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlConeBarStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlConeBarStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xlConeBarStacked100</name>
			<value>104</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlConeCol {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlConeCol">
			<context kind="enumeration">XlChartType</context>
			<name>xlConeCol</name>
			<value>105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlConeColClustered {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlConeColClustered">
			<context kind="enumeration">XlChartType</context>
			<name>xlConeColClustered</name>
			<value>99</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlConeColStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlConeColStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xlConeColStacked</name>
			<value>100</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlConeColStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlConeColStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xlConeColStacked100</name>
			<value>101</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCylinderBarClustered {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlCylinderBarClustered">
			<context kind="enumeration">XlChartType</context>
			<name>xlCylinderBarClustered</name>
			<value>95</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCylinderBarStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlCylinderBarStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xlCylinderBarStacked</name>
			<value>96</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCylinderBarStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlCylinderBarStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xlCylinderBarStacked100</name>
			<value>97</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCylinderCol {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlCylinderCol">
			<context kind="enumeration">XlChartType</context>
			<name>xlCylinderCol</name>
			<value>98</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCylinderColClustered {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlCylinderColClustered">
			<context kind="enumeration">XlChartType</context>
			<name>xlCylinderColClustered</name>
			<value>92</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCylinderColStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlCylinderColStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xlCylinderColStacked</name>
			<value>93</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCylinderColStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlCylinderColStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xlCylinderColStacked100</name>
			<value>94</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDoughnut {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlDoughnut">
			<context kind="enumeration">XlChartType</context>
			<name>xlDoughnut</name>
			<value>-4120</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDoughnutExploded {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlDoughnutExploded">
			<context kind="enumeration">XlChartType</context>
			<name>xlDoughnutExploded</name>
			<value>80</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLine {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlLine">
			<context kind="enumeration">XlChartType</context>
			<name>xlLine</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLineMarkers {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlLineMarkers">
			<context kind="enumeration">XlChartType</context>
			<name>xlLineMarkers</name>
			<value>65</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLineMarkersStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlLineMarkersStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xlLineMarkersStacked</name>
			<value>66</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLineMarkersStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlLineMarkersStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xlLineMarkersStacked100</name>
			<value>67</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLineStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlLineStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xlLineStacked</name>
			<value>63</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLineStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlLineStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xlLineStacked100</name>
			<value>64</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPie {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlPie">
			<context kind="enumeration">XlChartType</context>
			<name>xlPie</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPieExploded {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlPieExploded">
			<context kind="enumeration">XlChartType</context>
			<name>xlPieExploded</name>
			<value>69</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPieOfPie {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlPieOfPie">
			<context kind="enumeration">XlChartType</context>
			<name>xlPieOfPie</name>
			<value>68</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPyramidBarClustered {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlPyramidBarClustered">
			<context kind="enumeration">XlChartType</context>
			<name>xlPyramidBarClustered</name>
			<value>109</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPyramidBarStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlPyramidBarStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xlPyramidBarStacked</name>
			<value>110</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPyramidBarStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlPyramidBarStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xlPyramidBarStacked100</name>
			<value>111</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPyramidCol {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlPyramidCol">
			<context kind="enumeration">XlChartType</context>
			<name>xlPyramidCol</name>
			<value>112</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPyramidColClustered {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlPyramidColClustered">
			<context kind="enumeration">XlChartType</context>
			<name>xlPyramidColClustered</name>
			<value>106</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPyramidColStacked {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlPyramidColStacked">
			<context kind="enumeration">XlChartType</context>
			<name>xlPyramidColStacked</name>
			<value>107</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPyramidColStacked100 {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlPyramidColStacked100">
			<context kind="enumeration">XlChartType</context>
			<name>xlPyramidColStacked100</name>
			<value>108</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRadar {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlRadar">
			<context kind="enumeration">XlChartType</context>
			<name>xlRadar</name>
			<value>-4151</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRadarFilled {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlRadarFilled">
			<context kind="enumeration">XlChartType</context>
			<name>xlRadarFilled</name>
			<value>82</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRadarMarkers {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlRadarMarkers">
			<context kind="enumeration">XlChartType</context>
			<name>xlRadarMarkers</name>
			<value>81</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStockHLC {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlStockHLC">
			<context kind="enumeration">XlChartType</context>
			<name>xlStockHLC</name>
			<value>88</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStockOHLC {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlStockOHLC">
			<context kind="enumeration">XlChartType</context>
			<name>xlStockOHLC</name>
			<value>89</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStockVHLC {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlStockVHLC">
			<context kind="enumeration">XlChartType</context>
			<name>xlStockVHLC</name>
			<value>90</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStockVOHLC {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlStockVOHLC">
			<context kind="enumeration">XlChartType</context>
			<name>xlStockVOHLC</name>
			<value>91</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSurface {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlSurface">
			<context kind="enumeration">XlChartType</context>
			<name>xlSurface</name>
			<value>83</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSurfaceTopView {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlSurfaceTopView">
			<context kind="enumeration">XlChartType</context>
			<name>xlSurfaceTopView</name>
			<value>85</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSurfaceTopViewWireframe {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlSurfaceTopViewWireframe">
			<context kind="enumeration">XlChartType</context>
			<name>xlSurfaceTopViewWireframe</name>
			<value>86</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSurfaceWireframe {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlSurfaceWireframe">
			<context kind="enumeration">XlChartType</context>
			<name>xlSurfaceWireframe</name>
			<value>84</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXYScatter {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlXYScatter">
			<context kind="enumeration">XlChartType</context>
			<name>xlXYScatter</name>
			<value>-4169</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXYScatterLines {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlXYScatterLines">
			<context kind="enumeration">XlChartType</context>
			<name>xlXYScatterLines</name>
			<value>74</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXYScatterLinesNoMarkers {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlXYScatterLinesNoMarkers">
			<context kind="enumeration">XlChartType</context>
			<name>xlXYScatterLinesNoMarkers</name>
			<value>75</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXYScatterSmooth {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlXYScatterSmooth">
			<context kind="enumeration">XlChartType</context>
			<name>xlXYScatterSmooth</name>
			<value>72</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXYScatterSmoothNoMarkers {Constant}-->
	<element type="constant">
		<source id="Excel.XlChartType.xlXYScatterSmoothNoMarkers">
			<context kind="enumeration">XlChartType</context>
			<name>xlXYScatterSmoothNoMarkers</name>
			<value>73</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlClipboardFormat  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlClipboardFormat">
			<name>XlClipboardFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatBIFF {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatBIFF">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatBIFF</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatBIFF2 {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatBIFF2">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatBIFF2</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatBIFF3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatBIFF3">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatBIFF3</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatBIFF4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatBIFF4">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatBIFF4</name>
			<value>30</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatBinary {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatBinary">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatBinary</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatBitmap {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatBitmap">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatBitmap</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatCGM {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatCGM">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatCGM</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatCSV {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatCSV">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatCSV</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatDIF {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatDIF">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatDIF</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatDspText {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatDspText">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatDspText</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatEmbeddedObject {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatEmbeddedObject">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatEmbeddedObject</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatEmbedSource {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatEmbedSource">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatEmbedSource</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatLink {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatLink">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatLink</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatLinkSource {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatLinkSource">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatLinkSource</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatLinkSourceDesc {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatLinkSourceDesc">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatLinkSourceDesc</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatMovie {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatMovie">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatMovie</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatNative {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatNative">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatNative</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatObjectDesc {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatObjectDesc">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatObjectDesc</name>
			<value>31</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatObjectLink {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatObjectLink">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatObjectLink</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatOwnerLink {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatOwnerLink">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatOwnerLink</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatPICT {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatPICT">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatPICT</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatPrintPICT {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatPrintPICT">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatPrintPICT</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatRTF {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatRTF">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatRTF</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatScreenPICT {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatScreenPICT">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatScreenPICT</name>
			<value>29</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatStandardFont {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatStandardFont">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatStandardFont</name>
			<value>28</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatStandardScale {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatStandardScale">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatStandardScale</name>
			<value>27</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatSYLK {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatSYLK">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatSYLK</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatTable {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatTable">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatTable</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatText {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatText">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatText</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatToolFace {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatToolFace">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatToolFace</name>
			<value>25</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatToolFacePICT {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatToolFacePICT">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatToolFacePICT</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatVALU {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatVALU">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatVALU</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboardFormatWK1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlClipboardFormat.xlClipboardFormatWK1">
			<context kind="enumeration">XlClipboardFormat</context>
			<name>xlClipboardFormatWK1</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCmdType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCmdType">
			<name>XlCmdType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCmdCube {Constant}-->
	<element type="constant">
		<source id="Excel.XlCmdType.xlCmdCube">
			<context kind="enumeration">XlCmdType</context>
			<name>xlCmdCube</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCmdDefault {Constant}-->
	<element type="constant">
		<source id="Excel.XlCmdType.xlCmdDefault">
			<context kind="enumeration">XlCmdType</context>
			<name>xlCmdDefault</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCmdList {Constant}-->
	<element type="constant">
		<source id="Excel.XlCmdType.xlCmdList">
			<context kind="enumeration">XlCmdType</context>
			<name>xlCmdList</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCmdSql {Constant}-->
	<element type="constant">
		<source id="Excel.XlCmdType.xlCmdSql">
			<context kind="enumeration">XlCmdType</context>
			<name>xlCmdSql</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCmdTable {Constant}-->
	<element type="constant">
		<source id="Excel.XlCmdType.xlCmdTable">
			<context kind="enumeration">XlCmdType</context>
			<name>xlCmdTable</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlColorIndex  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlColorIndex">
			<name>XlColorIndex</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColorIndexAutomatic {Constant}-->
	<element type="constant">
		<source id="Excel.XlColorIndex.xlColorIndexAutomatic">
			<context kind="enumeration">XlColorIndex</context>
			<name>xlColorIndexAutomatic</name>
			<value>-4105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColorIndexNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlColorIndex.xlColorIndexNone">
			<context kind="enumeration">XlColorIndex</context>
			<name>xlColorIndexNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlColumnDataType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlColumnDataType">
			<name>XlColumnDataType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDMYFormat {Constant}-->
	<element type="constant">
		<source id="Excel.XlColumnDataType.xlDMYFormat">
			<context kind="enumeration">XlColumnDataType</context>
			<name>xlDMYFormat</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDYMFormat {Constant}-->
	<element type="constant">
		<source id="Excel.XlColumnDataType.xlDYMFormat">
			<context kind="enumeration">XlColumnDataType</context>
			<name>xlDYMFormat</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEMDFormat {Constant}-->
	<element type="constant">
		<source id="Excel.XlColumnDataType.xlEMDFormat">
			<context kind="enumeration">XlColumnDataType</context>
			<name>xlEMDFormat</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGeneralFormat {Constant}-->
	<element type="constant">
		<source id="Excel.XlColumnDataType.xlGeneralFormat">
			<context kind="enumeration">XlColumnDataType</context>
			<name>xlGeneralFormat</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMDYFormat {Constant}-->
	<element type="constant">
		<source id="Excel.XlColumnDataType.xlMDYFormat">
			<context kind="enumeration">XlColumnDataType</context>
			<name>xlMDYFormat</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMYDFormat {Constant}-->
	<element type="constant">
		<source id="Excel.XlColumnDataType.xlMYDFormat">
			<context kind="enumeration">XlColumnDataType</context>
			<name>xlMYDFormat</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSkipColumn {Constant}-->
	<element type="constant">
		<source id="Excel.XlColumnDataType.xlSkipColumn">
			<context kind="enumeration">XlColumnDataType</context>
			<name>xlSkipColumn</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextFormat {Constant}-->
	<element type="constant">
		<source id="Excel.XlColumnDataType.xlTextFormat">
			<context kind="enumeration">XlColumnDataType</context>
			<name>xlTextFormat</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlYDMFormat {Constant}-->
	<element type="constant">
		<source id="Excel.XlColumnDataType.xlYDMFormat">
			<context kind="enumeration">XlColumnDataType</context>
			<name>xlYDMFormat</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlYMDFormat {Constant}-->
	<element type="constant">
		<source id="Excel.XlColumnDataType.xlYMDFormat">
			<context kind="enumeration">XlColumnDataType</context>
			<name>xlYMDFormat</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCommandUnderlines  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCommandUnderlines">
			<name>XlCommandUnderlines</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCommandUnderlinesAutomatic {Constant}-->
	<element type="constant">
		<source id="Excel.XlCommandUnderlines.xlCommandUnderlinesAutomatic">
			<context kind="enumeration">XlCommandUnderlines</context>
			<name>xlCommandUnderlinesAutomatic</name>
			<value>-4105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCommandUnderlinesOff {Constant}-->
	<element type="constant">
		<source id="Excel.XlCommandUnderlines.xlCommandUnderlinesOff">
			<context kind="enumeration">XlCommandUnderlines</context>
			<name>xlCommandUnderlinesOff</name>
			<value>-4146</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCommandUnderlinesOn {Constant}-->
	<element type="constant">
		<source id="Excel.XlCommandUnderlines.xlCommandUnderlinesOn">
			<context kind="enumeration">XlCommandUnderlines</context>
			<name>xlCommandUnderlinesOn</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCommentDisplayMode  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCommentDisplayMode">
			<name>XlCommentDisplayMode</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCommentAndIndicator {Constant}-->
	<element type="constant">
		<source id="Excel.XlCommentDisplayMode.xlCommentAndIndicator">
			<context kind="enumeration">XlCommentDisplayMode</context>
			<name>xlCommentAndIndicator</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCommentIndicatorOnly {Constant}-->
	<element type="constant">
		<source id="Excel.XlCommentDisplayMode.xlCommentIndicatorOnly">
			<context kind="enumeration">XlCommentDisplayMode</context>
			<name>xlCommentIndicatorOnly</name>
			<value>-1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoIndicator {Constant}-->
	<element type="constant">
		<source id="Excel.XlCommentDisplayMode.xlNoIndicator">
			<context kind="enumeration">XlCommentDisplayMode</context>
			<name>xlNoIndicator</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlConsolidationFunction  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlConsolidationFunction">
			<name>XlConsolidationFunction</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAverage {Constant}-->
	<element type="constant">
		<source id="Excel.XlConsolidationFunction.xlAverage">
			<context kind="enumeration">XlConsolidationFunction</context>
			<name>xlAverage</name>
			<value>-4106</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCount {Constant}-->
	<element type="constant">
		<source id="Excel.XlConsolidationFunction.xlCount">
			<context kind="enumeration">XlConsolidationFunction</context>
			<name>xlCount</name>
			<value>-4112</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCountNums {Constant}-->
	<element type="constant">
		<source id="Excel.XlConsolidationFunction.xlCountNums">
			<context kind="enumeration">XlConsolidationFunction</context>
			<name>xlCountNums</name>
			<value>-4113</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMax {Constant}-->
	<element type="constant">
		<source id="Excel.XlConsolidationFunction.xlMax">
			<context kind="enumeration">XlConsolidationFunction</context>
			<name>xlMax</name>
			<value>-4136</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMin {Constant}-->
	<element type="constant">
		<source id="Excel.XlConsolidationFunction.xlMin">
			<context kind="enumeration">XlConsolidationFunction</context>
			<name>xlMin</name>
			<value>-4139</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlProduct {Constant}-->
	<element type="constant">
		<source id="Excel.XlConsolidationFunction.xlProduct">
			<context kind="enumeration">XlConsolidationFunction</context>
			<name>xlProduct</name>
			<value>-4149</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStDev {Constant}-->
	<element type="constant">
		<source id="Excel.XlConsolidationFunction.xlStDev">
			<context kind="enumeration">XlConsolidationFunction</context>
			<name>xlStDev</name>
			<value>-4155</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStDevP {Constant}-->
	<element type="constant">
		<source id="Excel.XlConsolidationFunction.xlStDevP">
			<context kind="enumeration">XlConsolidationFunction</context>
			<name>xlStDevP</name>
			<value>-4156</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSum {Constant}-->
	<element type="constant">
		<source id="Excel.XlConsolidationFunction.xlSum">
			<context kind="enumeration">XlConsolidationFunction</context>
			<name>xlSum</name>
			<value>-4157</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUnknown {Constant}-->
	<element type="constant">
		<source id="Excel.XlConsolidationFunction.xlUnknown">
			<context kind="enumeration">XlConsolidationFunction</context>
			<name>xlUnknown</name>
			<value>1000</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVar {Constant}-->
	<element type="constant">
		<source id="Excel.XlConsolidationFunction.xlVar">
			<context kind="enumeration">XlConsolidationFunction</context>
			<name>xlVar</name>
			<value>-4164</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVarP {Constant}-->
	<element type="constant">
		<source id="Excel.XlConsolidationFunction.xlVarP">
			<context kind="enumeration">XlConsolidationFunction</context>
			<name>xlVarP</name>
			<value>-4165</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCopyPictureFormat  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCopyPictureFormat">
			<name>XlCopyPictureFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBitmap {Constant}-->
	<element type="constant">
		<source id="Excel.XlCopyPictureFormat.xlBitmap">
			<context kind="enumeration">XlCopyPictureFormat</context>
			<name>xlBitmap</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPicture {Constant}-->
	<element type="constant">
		<source id="Excel.XlCopyPictureFormat.xlPicture">
			<context kind="enumeration">XlCopyPictureFormat</context>
			<name>xlPicture</name>
			<value>-4147</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCorruptLoad  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCorruptLoad">
			<name>XlCorruptLoad</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExtractData {Constant}-->
	<element type="constant">
		<source id="Excel.XlCorruptLoad.xlExtractData">
			<context kind="enumeration">XlCorruptLoad</context>
			<name>xlExtractData</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNormalLoad {Constant}-->
	<element type="constant">
		<source id="Excel.XlCorruptLoad.xlNormalLoad">
			<context kind="enumeration">XlCorruptLoad</context>
			<name>xlNormalLoad</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRepairFile {Constant}-->
	<element type="constant">
		<source id="Excel.XlCorruptLoad.xlRepairFile">
			<context kind="enumeration">XlCorruptLoad</context>
			<name>xlRepairFile</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCreator  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCreator">
			<name>XlCreator</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCreatorCode {Constant}-->
	<element type="constant">
		<source id="Excel.XlCreator.xlCreatorCode">
			<context kind="enumeration">XlCreator</context>
			<name>xlCreatorCode</name>
			<value>1480803660</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCubeFieldType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCubeFieldType">
			<name>XlCubeFieldType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHierarchy {Constant}-->
	<element type="constant">
		<source id="Excel.XlCubeFieldType.xlHierarchy">
			<context kind="enumeration">XlCubeFieldType</context>
			<name>xlHierarchy</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMeasure {Constant}-->
	<element type="constant">
		<source id="Excel.XlCubeFieldType.xlMeasure">
			<context kind="enumeration">XlCubeFieldType</context>
			<name>xlMeasure</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSet {Constant}-->
	<element type="constant">
		<source id="Excel.XlCubeFieldType.xlSet">
			<context kind="enumeration">XlCubeFieldType</context>
			<name>xlSet</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCutCopyMode  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCutCopyMode">
			<name>XlCutCopyMode</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCopy {Constant}-->
	<element type="constant">
		<source id="Excel.XlCutCopyMode.xlCopy">
			<context kind="enumeration">XlCutCopyMode</context>
			<name>xlCopy</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCut {Constant}-->
	<element type="constant">
		<source id="Excel.XlCutCopyMode.xlCut">
			<context kind="enumeration">XlCutCopyMode</context>
			<name>xlCut</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlCVError  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlCVError">
			<name>XlCVError</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrDiv0 {Constant}-->
	<element type="constant">
		<source id="Excel.XlCVError.xlErrDiv0">
			<context kind="enumeration">XlCVError</context>
			<name>xlErrDiv0</name>
			<value>2007</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrNA {Constant}-->
	<element type="constant">
		<source id="Excel.XlCVError.xlErrNA">
			<context kind="enumeration">XlCVError</context>
			<name>xlErrNA</name>
			<value>2042</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrName {Constant}-->
	<element type="constant">
		<source id="Excel.XlCVError.xlErrName">
			<context kind="enumeration">XlCVError</context>
			<name>xlErrName</name>
			<value>2029</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrNull {Constant}-->
	<element type="constant">
		<source id="Excel.XlCVError.xlErrNull">
			<context kind="enumeration">XlCVError</context>
			<name>xlErrNull</name>
			<value>2000</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrNum {Constant}-->
	<element type="constant">
		<source id="Excel.XlCVError.xlErrNum">
			<context kind="enumeration">XlCVError</context>
			<name>xlErrNum</name>
			<value>2036</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrRef {Constant}-->
	<element type="constant">
		<source id="Excel.XlCVError.xlErrRef">
			<context kind="enumeration">XlCVError</context>
			<name>xlErrRef</name>
			<value>2023</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrValue {Constant}-->
	<element type="constant">
		<source id="Excel.XlCVError.xlErrValue">
			<context kind="enumeration">XlCVError</context>
			<name>xlErrValue</name>
			<value>2015</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlDataLabelPosition  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlDataLabelPosition">
			<name>XlDataLabelPosition</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLabelPositionAbove {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelPosition.xlLabelPositionAbove">
			<context kind="enumeration">XlDataLabelPosition</context>
			<name>xlLabelPositionAbove</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLabelPositionBelow {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelPosition.xlLabelPositionBelow">
			<context kind="enumeration">XlDataLabelPosition</context>
			<name>xlLabelPositionBelow</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLabelPositionBestFit {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelPosition.xlLabelPositionBestFit">
			<context kind="enumeration">XlDataLabelPosition</context>
			<name>xlLabelPositionBestFit</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLabelPositionCenter {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelPosition.xlLabelPositionCenter">
			<context kind="enumeration">XlDataLabelPosition</context>
			<name>xlLabelPositionCenter</name>
			<value>-4108</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLabelPositionCustom {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelPosition.xlLabelPositionCustom">
			<context kind="enumeration">XlDataLabelPosition</context>
			<name>xlLabelPositionCustom</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLabelPositionInsideBase {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelPosition.xlLabelPositionInsideBase">
			<context kind="enumeration">XlDataLabelPosition</context>
			<name>xlLabelPositionInsideBase</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLabelPositionInsideEnd {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelPosition.xlLabelPositionInsideEnd">
			<context kind="enumeration">XlDataLabelPosition</context>
			<name>xlLabelPositionInsideEnd</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLabelPositionLeft {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelPosition.xlLabelPositionLeft">
			<context kind="enumeration">XlDataLabelPosition</context>
			<name>xlLabelPositionLeft</name>
			<value>-4131</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLabelPositionMixed {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelPosition.xlLabelPositionMixed">
			<context kind="enumeration">XlDataLabelPosition</context>
			<name>xlLabelPositionMixed</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLabelPositionOutsideEnd {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelPosition.xlLabelPositionOutsideEnd">
			<context kind="enumeration">XlDataLabelPosition</context>
			<name>xlLabelPositionOutsideEnd</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLabelPositionRight {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelPosition.xlLabelPositionRight">
			<context kind="enumeration">XlDataLabelPosition</context>
			<name>xlLabelPositionRight</name>
			<value>-4152</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlDataLabelSeparator  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlDataLabelSeparator">
			<name>XlDataLabelSeparator</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataLabelSeparatorDefault {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelSeparator.xlDataLabelSeparatorDefault">
			<context kind="enumeration">XlDataLabelSeparator</context>
			<name>xlDataLabelSeparatorDefault</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlDataLabelsType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlDataLabelsType">
			<name>XlDataLabelsType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataLabelsShowBubbleSizes {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelsType.xlDataLabelsShowBubbleSizes">
			<context kind="enumeration">XlDataLabelsType</context>
			<name>xlDataLabelsShowBubbleSizes</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataLabelsShowLabel {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelsType.xlDataLabelsShowLabel">
			<context kind="enumeration">XlDataLabelsType</context>
			<name>xlDataLabelsShowLabel</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataLabelsShowLabelAndPercent {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelsType.xlDataLabelsShowLabelAndPercent">
			<context kind="enumeration">XlDataLabelsType</context>
			<name>xlDataLabelsShowLabelAndPercent</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataLabelsShowNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelsType.xlDataLabelsShowNone">
			<context kind="enumeration">XlDataLabelsType</context>
			<name>xlDataLabelsShowNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataLabelsShowPercent {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelsType.xlDataLabelsShowPercent">
			<context kind="enumeration">XlDataLabelsType</context>
			<name>xlDataLabelsShowPercent</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataLabelsShowValue {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataLabelsType.xlDataLabelsShowValue">
			<context kind="enumeration">XlDataLabelsType</context>
			<name>xlDataLabelsShowValue</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlDataSeriesDate  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlDataSeriesDate">
			<name>XlDataSeriesDate</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDay {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataSeriesDate.xlDay">
			<context kind="enumeration">XlDataSeriesDate</context>
			<name>xlDay</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMonth {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataSeriesDate.xlMonth">
			<context kind="enumeration">XlDataSeriesDate</context>
			<name>xlMonth</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWeekday {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataSeriesDate.xlWeekday">
			<context kind="enumeration">XlDataSeriesDate</context>
			<name>xlWeekday</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlYear {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataSeriesDate.xlYear">
			<context kind="enumeration">XlDataSeriesDate</context>
			<name>xlYear</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlDataSeriesType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlDataSeriesType">
			<name>XlDataSeriesType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAutoFill {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataSeriesType.xlAutoFill">
			<context kind="enumeration">XlDataSeriesType</context>
			<name>xlAutoFill</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlChronological {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataSeriesType.xlChronological">
			<context kind="enumeration">XlDataSeriesType</context>
			<name>xlChronological</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataSeriesLinear {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataSeriesType.xlDataSeriesLinear">
			<context kind="enumeration">XlDataSeriesType</context>
			<name>xlDataSeriesLinear</name>
			<value>-4132</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGrowth {Constant}-->
	<element type="constant">
		<source id="Excel.XlDataSeriesType.xlGrowth">
			<context kind="enumeration">XlDataSeriesType</context>
			<name>xlGrowth</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlDeleteShiftDirection  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlDeleteShiftDirection">
			<name>XlDeleteShiftDirection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlShiftToLeft {Constant}-->
	<element type="constant">
		<source id="Excel.XlDeleteShiftDirection.xlShiftToLeft">
			<context kind="enumeration">XlDeleteShiftDirection</context>
			<name>xlShiftToLeft</name>
			<value>-4159</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlShiftUp {Constant}-->
	<element type="constant">
		<source id="Excel.XlDeleteShiftDirection.xlShiftUp">
			<context kind="enumeration">XlDeleteShiftDirection</context>
			<name>xlShiftUp</name>
			<value>-4162</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlDirection  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlDirection">
			<name>XlDirection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDown {Constant}-->
	<element type="constant">
		<source id="Excel.XlDirection.xlDown">
			<context kind="enumeration">XlDirection</context>
			<name>xlDown</name>
			<value>-4121</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlToLeft {Constant}-->
	<element type="constant">
		<source id="Excel.XlDirection.xlToLeft">
			<context kind="enumeration">XlDirection</context>
			<name>xlToLeft</name>
			<value>-4159</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlToRight {Constant}-->
	<element type="constant">
		<source id="Excel.XlDirection.xlToRight">
			<context kind="enumeration">XlDirection</context>
			<name>xlToRight</name>
			<value>-4161</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUp {Constant}-->
	<element type="constant">
		<source id="Excel.XlDirection.xlUp">
			<context kind="enumeration">XlDirection</context>
			<name>xlUp</name>
			<value>-4162</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlDisplayBlanksAs  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlDisplayBlanksAs">
			<name>XlDisplayBlanksAs</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlInterpolated {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayBlanksAs.xlInterpolated">
			<context kind="enumeration">XlDisplayBlanksAs</context>
			<name>xlInterpolated</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNotPlotted {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayBlanksAs.xlNotPlotted">
			<context kind="enumeration">XlDisplayBlanksAs</context>
			<name>xlNotPlotted</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlZero {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayBlanksAs.xlZero">
			<context kind="enumeration">XlDisplayBlanksAs</context>
			<name>xlZero</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlDisplayDrawingObjects  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlDisplayDrawingObjects">
			<name>XlDisplayDrawingObjects</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDisplayShapes {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayDrawingObjects.xlDisplayShapes">
			<context kind="enumeration">XlDisplayDrawingObjects</context>
			<name>xlDisplayShapes</name>
			<value>-4104</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHide {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayDrawingObjects.xlHide">
			<context kind="enumeration">XlDisplayDrawingObjects</context>
			<name>xlHide</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPlaceholders {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayDrawingObjects.xlPlaceholders">
			<context kind="enumeration">XlDisplayDrawingObjects</context>
			<name>xlPlaceholders</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlDisplayUnit  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlDisplayUnit">
			<name>XlDisplayUnit</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHundredMillions {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayUnit.xlHundredMillions">
			<context kind="enumeration">XlDisplayUnit</context>
			<name>xlHundredMillions</name>
			<value>-8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHundreds {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayUnit.xlHundreds">
			<context kind="enumeration">XlDisplayUnit</context>
			<name>xlHundreds</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHundredThousands {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayUnit.xlHundredThousands">
			<context kind="enumeration">XlDisplayUnit</context>
			<name>xlHundredThousands</name>
			<value>-5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMillionMillions {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayUnit.xlMillionMillions">
			<context kind="enumeration">XlDisplayUnit</context>
			<name>xlMillionMillions</name>
			<value>-10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMillions {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayUnit.xlMillions">
			<context kind="enumeration">XlDisplayUnit</context>
			<name>xlMillions</name>
			<value>-6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTenMillions {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayUnit.xlTenMillions">
			<context kind="enumeration">XlDisplayUnit</context>
			<name>xlTenMillions</name>
			<value>-7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTenThousands {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayUnit.xlTenThousands">
			<context kind="enumeration">XlDisplayUnit</context>
			<name>xlTenThousands</name>
			<value>-4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlThousandMillions {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayUnit.xlThousandMillions">
			<context kind="enumeration">XlDisplayUnit</context>
			<name>xlThousandMillions</name>
			<value>-9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlThousands {Constant}-->
	<element type="constant">
		<source id="Excel.XlDisplayUnit.xlThousands">
			<context kind="enumeration">XlDisplayUnit</context>
			<name>xlThousands</name>
			<value>-3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlDVAlertStyle  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlDVAlertStyle">
			<name>XlDVAlertStyle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlValidAlertInformation {Constant}-->
	<element type="constant">
		<source id="Excel.XlDVAlertStyle.xlValidAlertInformation">
			<context kind="enumeration">XlDVAlertStyle</context>
			<name>xlValidAlertInformation</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlValidAlertStop {Constant}-->
	<element type="constant">
		<source id="Excel.XlDVAlertStyle.xlValidAlertStop">
			<context kind="enumeration">XlDVAlertStyle</context>
			<name>xlValidAlertStop</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlValidAlertWarning {Constant}-->
	<element type="constant">
		<source id="Excel.XlDVAlertStyle.xlValidAlertWarning">
			<context kind="enumeration">XlDVAlertStyle</context>
			<name>xlValidAlertWarning</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlDVType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlDVType">
			<name>XlDVType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlValidateCustom {Constant}-->
	<element type="constant">
		<source id="Excel.XlDVType.xlValidateCustom">
			<context kind="enumeration">XlDVType</context>
			<name>xlValidateCustom</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlValidateDate {Constant}-->
	<element type="constant">
		<source id="Excel.XlDVType.xlValidateDate">
			<context kind="enumeration">XlDVType</context>
			<name>xlValidateDate</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlValidateDecimal {Constant}-->
	<element type="constant">
		<source id="Excel.XlDVType.xlValidateDecimal">
			<context kind="enumeration">XlDVType</context>
			<name>xlValidateDecimal</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlValidateInputOnly {Constant}-->
	<element type="constant">
		<source id="Excel.XlDVType.xlValidateInputOnly">
			<context kind="enumeration">XlDVType</context>
			<name>xlValidateInputOnly</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlValidateList {Constant}-->
	<element type="constant">
		<source id="Excel.XlDVType.xlValidateList">
			<context kind="enumeration">XlDVType</context>
			<name>xlValidateList</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlValidateTextLength {Constant}-->
	<element type="constant">
		<source id="Excel.XlDVType.xlValidateTextLength">
			<context kind="enumeration">XlDVType</context>
			<name>xlValidateTextLength</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlValidateTime {Constant}-->
	<element type="constant">
		<source id="Excel.XlDVType.xlValidateTime">
			<context kind="enumeration">XlDVType</context>
			<name>xlValidateTime</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlValidateWholeNumber {Constant}-->
	<element type="constant">
		<source id="Excel.XlDVType.xlValidateWholeNumber">
			<context kind="enumeration">XlDVType</context>
			<name>xlValidateWholeNumber</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlEditionFormat  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlEditionFormat">
			<name>XlEditionFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBIFF {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionFormat.xlBIFF">
			<context kind="enumeration">XlEditionFormat</context>
			<name>xlBIFF</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPICT {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionFormat.xlPICT">
			<context kind="enumeration">XlEditionFormat</context>
			<name>xlPICT</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRTF {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionFormat.xlRTF">
			<context kind="enumeration">XlEditionFormat</context>
			<name>xlRTF</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVALU {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionFormat.xlVALU">
			<context kind="enumeration">XlEditionFormat</context>
			<name>xlVALU</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlEditionOptionsOption  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlEditionOptionsOption">
			<name>XlEditionOptionsOption</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAutomaticUpdate {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionOptionsOption.xlAutomaticUpdate">
			<context kind="enumeration">XlEditionOptionsOption</context>
			<name>xlAutomaticUpdate</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCancel {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionOptionsOption.xlCancel">
			<context kind="enumeration">XlEditionOptionsOption</context>
			<name>xlCancel</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlChangeAttributes {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionOptionsOption.xlChangeAttributes">
			<context kind="enumeration">XlEditionOptionsOption</context>
			<name>xlChangeAttributes</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlManualUpdate {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionOptionsOption.xlManualUpdate">
			<context kind="enumeration">XlEditionOptionsOption</context>
			<name>xlManualUpdate</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOpenSource {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionOptionsOption.xlOpenSource">
			<context kind="enumeration">XlEditionOptionsOption</context>
			<name>xlOpenSource</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSelect {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionOptionsOption.xlSelect">
			<context kind="enumeration">XlEditionOptionsOption</context>
			<name>xlSelect</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSendPublisher {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionOptionsOption.xlSendPublisher">
			<context kind="enumeration">XlEditionOptionsOption</context>
			<name>xlSendPublisher</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUpdateSubscriber {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionOptionsOption.xlUpdateSubscriber">
			<context kind="enumeration">XlEditionOptionsOption</context>
			<name>xlUpdateSubscriber</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlEditionType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlEditionType">
			<name>XlEditionType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPublisher {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionType.xlPublisher">
			<context kind="enumeration">XlEditionType</context>
			<name>xlPublisher</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSubscriber {Constant}-->
	<element type="constant">
		<source id="Excel.XlEditionType.xlSubscriber">
			<context kind="enumeration">XlEditionType</context>
			<name>xlSubscriber</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlEnableCancelKey  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlEnableCancelKey">
			<name>XlEnableCancelKey</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDisabled {Constant}-->
	<element type="constant">
		<source id="Excel.XlEnableCancelKey.xlDisabled">
			<context kind="enumeration">XlEnableCancelKey</context>
			<name>xlDisabled</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrorHandler {Constant}-->
	<element type="constant">
		<source id="Excel.XlEnableCancelKey.xlErrorHandler">
			<context kind="enumeration">XlEnableCancelKey</context>
			<name>xlErrorHandler</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlInterrupt {Constant}-->
	<element type="constant">
		<source id="Excel.XlEnableCancelKey.xlInterrupt">
			<context kind="enumeration">XlEnableCancelKey</context>
			<name>xlInterrupt</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlEnableSelection  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlEnableSelection">
			<name>XlEnableSelection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoRestrictions {Constant}-->
	<element type="constant">
		<source id="Excel.XlEnableSelection.xlNoRestrictions">
			<context kind="enumeration">XlEnableSelection</context>
			<name>xlNoRestrictions</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoSelection {Constant}-->
	<element type="constant">
		<source id="Excel.XlEnableSelection.xlNoSelection">
			<context kind="enumeration">XlEnableSelection</context>
			<name>xlNoSelection</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUnlockedCells {Constant}-->
	<element type="constant">
		<source id="Excel.XlEnableSelection.xlUnlockedCells">
			<context kind="enumeration">XlEnableSelection</context>
			<name>xlUnlockedCells</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlEndStyleCap  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlEndStyleCap">
			<name>XlEndStyleCap</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCap {Constant}-->
	<element type="constant">
		<source id="Excel.XlEndStyleCap.xlCap">
			<context kind="enumeration">XlEndStyleCap</context>
			<name>xlCap</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoCap {Constant}-->
	<element type="constant">
		<source id="Excel.XlEndStyleCap.xlNoCap">
			<context kind="enumeration">XlEndStyleCap</context>
			<name>xlNoCap</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlErrorBarDirection  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlErrorBarDirection">
			<name>XlErrorBarDirection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlX {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorBarDirection.xlX">
			<context kind="enumeration">XlErrorBarDirection</context>
			<name>xlX</name>
			<value>-4168</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlY {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorBarDirection.xlY">
			<context kind="enumeration">XlErrorBarDirection</context>
			<name>xlY</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlErrorBarInclude  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlErrorBarInclude">
			<name>XlErrorBarInclude</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrorBarIncludeBoth {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorBarInclude.xlErrorBarIncludeBoth">
			<context kind="enumeration">XlErrorBarInclude</context>
			<name>xlErrorBarIncludeBoth</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrorBarIncludeMinusValues {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorBarInclude.xlErrorBarIncludeMinusValues">
			<context kind="enumeration">XlErrorBarInclude</context>
			<name>xlErrorBarIncludeMinusValues</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrorBarIncludeNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorBarInclude.xlErrorBarIncludeNone">
			<context kind="enumeration">XlErrorBarInclude</context>
			<name>xlErrorBarIncludeNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrorBarIncludePlusValues {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorBarInclude.xlErrorBarIncludePlusValues">
			<context kind="enumeration">XlErrorBarInclude</context>
			<name>xlErrorBarIncludePlusValues</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlErrorBarType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlErrorBarType">
			<name>XlErrorBarType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrorBarTypeCustom {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorBarType.xlErrorBarTypeCustom">
			<context kind="enumeration">XlErrorBarType</context>
			<name>xlErrorBarTypeCustom</name>
			<value>-4114</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrorBarTypeFixedValue {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorBarType.xlErrorBarTypeFixedValue">
			<context kind="enumeration">XlErrorBarType</context>
			<name>xlErrorBarTypeFixedValue</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrorBarTypePercent {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorBarType.xlErrorBarTypePercent">
			<context kind="enumeration">XlErrorBarType</context>
			<name>xlErrorBarTypePercent</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrorBarTypeStDev {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorBarType.xlErrorBarTypeStDev">
			<context kind="enumeration">XlErrorBarType</context>
			<name>xlErrorBarTypeStDev</name>
			<value>-4155</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrorBarTypeStError {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorBarType.xlErrorBarTypeStError">
			<context kind="enumeration">XlErrorBarType</context>
			<name>xlErrorBarTypeStError</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlErrorChecks  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlErrorChecks">
			<name>XlErrorChecks</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEmptyCellReferences {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorChecks.xlEmptyCellReferences">
			<context kind="enumeration">XlErrorChecks</context>
			<name>xlEmptyCellReferences</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEvaluateToError {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorChecks.xlEvaluateToError">
			<context kind="enumeration">XlErrorChecks</context>
			<name>xlEvaluateToError</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlInconsistentFormula {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorChecks.xlInconsistentFormula">
			<context kind="enumeration">XlErrorChecks</context>
			<name>xlInconsistentFormula</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataValidation {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorChecks.xlListDataValidation">
			<context kind="enumeration">XlErrorChecks</context>
			<name>xlListDataValidation</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNumberAsText {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorChecks.xlNumberAsText">
			<context kind="enumeration">XlErrorChecks</context>
			<name>xlNumberAsText</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOmittedCells {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorChecks.xlOmittedCells">
			<context kind="enumeration">XlErrorChecks</context>
			<name>xlOmittedCells</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextDate {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorChecks.xlTextDate">
			<context kind="enumeration">XlErrorChecks</context>
			<name>xlTextDate</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUnlockedFormulaCells {Constant}-->
	<element type="constant">
		<source id="Excel.XlErrorChecks.xlUnlockedFormulaCells">
			<context kind="enumeration">XlErrorChecks</context>
			<name>xlUnlockedFormulaCells</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlFileAccess  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlFileAccess">
			<name>XlFileAccess</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlReadOnly {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileAccess.xlReadOnly">
			<context kind="enumeration">XlFileAccess</context>
			<name>xlReadOnly</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlReadWrite {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileAccess.xlReadWrite">
			<context kind="enumeration">XlFileAccess</context>
			<name>xlReadWrite</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlFileFormat  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlFileFormat">
			<name>XlFileFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAddIn {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlAddIn">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlAddIn</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCSV {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlCSV">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlCSV</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCSVMac {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlCSVMac">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlCSVMac</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCSVMSDOS {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlCSVMSDOS">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlCSVMSDOS</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCSVWindows {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlCSVWindows">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlCSVWindows</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCurrentPlatformText {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlCurrentPlatformText">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlCurrentPlatformText</name>
			<value>-4158</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDBF2 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlDBF2">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlDBF2</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDBF3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlDBF3">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlDBF3</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDBF4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlDBF4">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlDBF4</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDIF {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlDIF">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlDIF</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExcel2 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlExcel2">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlExcel2</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExcel2FarEast {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlExcel2FarEast">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlExcel2FarEast</name>
			<value>27</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExcel3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlExcel3">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlExcel3</name>
			<value>29</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExcel4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlExcel4">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlExcel4</name>
			<value>33</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExcel4Workbook {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlExcel4Workbook">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlExcel4Workbook</name>
			<value>35</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExcel5 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlExcel5">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlExcel5</name>
			<value>39</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExcel7 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlExcel7">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlExcel7</name>
			<value>39</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExcel9795 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlExcel9795">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlExcel9795</name>
			<value>43</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHtml {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlHtml">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlHtml</name>
			<value>44</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIntlAddIn {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlIntlAddIn">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlIntlAddIn</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIntlMacro {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlIntlMacro">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlIntlMacro</name>
			<value>25</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSYLK {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlSYLK">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlSYLK</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTemplate {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlTemplate">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlTemplate</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextMac {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlTextMac">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlTextMac</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextMSDOS {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlTextMSDOS">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlTextMSDOS</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextPrinter {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlTextPrinter">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlTextPrinter</name>
			<value>36</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextWindows {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlTextWindows">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlTextWindows</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUnicodeText {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlUnicodeText">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlUnicodeText</name>
			<value>42</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWebArchive {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWebArchive">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWebArchive</name>
			<value>45</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWJ2WD1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWJ2WD1">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWJ2WD1</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWJ3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWJ3">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWJ3</name>
			<value>40</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWJ3FJ3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWJ3FJ3">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWJ3FJ3</name>
			<value>41</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWK1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWK1">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWK1</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWK1ALL {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWK1ALL">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWK1ALL</name>
			<value>31</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWK1FMT {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWK1FMT">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWK1FMT</name>
			<value>30</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWK3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWK3">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWK3</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWK3FM3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWK3FM3">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWK3FM3</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWK4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWK4">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWK4</name>
			<value>38</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWKS {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWKS">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWKS</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWorkbookNormal {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWorkbookNormal">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWorkbookNormal</name>
			<value>-4143</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWorks2FarEast {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWorks2FarEast">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWorks2FarEast</name>
			<value>28</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWQ1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlWQ1">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlWQ1</name>
			<value>34</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXMLSpreadsheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlFileFormat.xlXMLSpreadsheet">
			<context kind="enumeration">XlFileFormat</context>
			<name>xlXMLSpreadsheet</name>
			<value>46</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlFillWith  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlFillWith">
			<name>XlFillWith</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFillWithAll {Constant}-->
	<element type="constant">
		<source id="Excel.XlFillWith.xlFillWithAll">
			<context kind="enumeration">XlFillWith</context>
			<name>xlFillWithAll</name>
			<value>-4104</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFillWithContents {Constant}-->
	<element type="constant">
		<source id="Excel.XlFillWith.xlFillWithContents">
			<context kind="enumeration">XlFillWith</context>
			<name>xlFillWithContents</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFillWithFormats {Constant}-->
	<element type="constant">
		<source id="Excel.XlFillWith.xlFillWithFormats">
			<context kind="enumeration">XlFillWith</context>
			<name>xlFillWithFormats</name>
			<value>-4122</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlFilterAction  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlFilterAction">
			<name>XlFilterAction</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFilterCopy {Constant}-->
	<element type="constant">
		<source id="Excel.XlFilterAction.xlFilterCopy">
			<context kind="enumeration">XlFilterAction</context>
			<name>xlFilterCopy</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFilterInPlace {Constant}-->
	<element type="constant">
		<source id="Excel.XlFilterAction.xlFilterInPlace">
			<context kind="enumeration">XlFilterAction</context>
			<name>xlFilterInPlace</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlFindLookIn  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlFindLookIn">
			<name>XlFindLookIn</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlComments {Constant}-->
	<element type="constant">
		<source id="Excel.XlFindLookIn.xlComments">
			<context kind="enumeration">XlFindLookIn</context>
			<name>xlComments</name>
			<value>-4144</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFormulas {Constant}-->
	<element type="constant">
		<source id="Excel.XlFindLookIn.xlFormulas">
			<context kind="enumeration">XlFindLookIn</context>
			<name>xlFormulas</name>
			<value>-4123</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlValues {Constant}-->
	<element type="constant">
		<source id="Excel.XlFindLookIn.xlValues">
			<context kind="enumeration">XlFindLookIn</context>
			<name>xlValues</name>
			<value>-4163</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlFormatConditionOperator  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlFormatConditionOperator">
			<name>XlFormatConditionOperator</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBetween {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormatConditionOperator.xlBetween">
			<context kind="enumeration">XlFormatConditionOperator</context>
			<name>xlBetween</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEqual {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormatConditionOperator.xlEqual">
			<context kind="enumeration">XlFormatConditionOperator</context>
			<name>xlEqual</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGreater {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormatConditionOperator.xlGreater">
			<context kind="enumeration">XlFormatConditionOperator</context>
			<name>xlGreater</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGreaterEqual {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormatConditionOperator.xlGreaterEqual">
			<context kind="enumeration">XlFormatConditionOperator</context>
			<name>xlGreaterEqual</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLess {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormatConditionOperator.xlLess">
			<context kind="enumeration">XlFormatConditionOperator</context>
			<name>xlLess</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLessEqual {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormatConditionOperator.xlLessEqual">
			<context kind="enumeration">XlFormatConditionOperator</context>
			<name>xlLessEqual</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNotBetween {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormatConditionOperator.xlNotBetween">
			<context kind="enumeration">XlFormatConditionOperator</context>
			<name>xlNotBetween</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNotEqual {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormatConditionOperator.xlNotEqual">
			<context kind="enumeration">XlFormatConditionOperator</context>
			<name>xlNotEqual</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlFormatConditionType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlFormatConditionType">
			<name>XlFormatConditionType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCellValue {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormatConditionType.xlCellValue">
			<context kind="enumeration">XlFormatConditionType</context>
			<name>xlCellValue</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExpression {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormatConditionType.xlExpression">
			<context kind="enumeration">XlFormatConditionType</context>
			<name>xlExpression</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlFormControl  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlFormControl">
			<name>XlFormControl</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlButtonControl {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormControl.xlButtonControl">
			<context kind="enumeration">XlFormControl</context>
			<name>xlButtonControl</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCheckBox {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormControl.xlCheckBox">
			<context kind="enumeration">XlFormControl</context>
			<name>xlCheckBox</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDropDown {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormControl.xlDropDown">
			<context kind="enumeration">XlFormControl</context>
			<name>xlDropDown</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEditBox {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormControl.xlEditBox">
			<context kind="enumeration">XlFormControl</context>
			<name>xlEditBox</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGroupBox {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormControl.xlGroupBox">
			<context kind="enumeration">XlFormControl</context>
			<name>xlGroupBox</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLabel {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormControl.xlLabel">
			<context kind="enumeration">XlFormControl</context>
			<name>xlLabel</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListBox {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormControl.xlListBox">
			<context kind="enumeration">XlFormControl</context>
			<name>xlListBox</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOptionButton {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormControl.xlOptionButton">
			<context kind="enumeration">XlFormControl</context>
			<name>xlOptionButton</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlScrollBar {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormControl.xlScrollBar">
			<context kind="enumeration">XlFormControl</context>
			<name>xlScrollBar</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSpinner {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormControl.xlSpinner">
			<context kind="enumeration">XlFormControl</context>
			<name>xlSpinner</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlFormulaLabel  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlFormulaLabel">
			<name>XlFormulaLabel</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColumnLabels {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormulaLabel.xlColumnLabels">
			<context kind="enumeration">XlFormulaLabel</context>
			<name>xlColumnLabels</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMixedLabels {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormulaLabel.xlMixedLabels">
			<context kind="enumeration">XlFormulaLabel</context>
			<name>xlMixedLabels</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoLabels {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormulaLabel.xlNoLabels">
			<context kind="enumeration">XlFormulaLabel</context>
			<name>xlNoLabels</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRowLabels {Constant}-->
	<element type="constant">
		<source id="Excel.XlFormulaLabel.xlRowLabels">
			<context kind="enumeration">XlFormulaLabel</context>
			<name>xlRowLabels</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlHAlign  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlHAlign">
			<name>XlHAlign</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHAlignCenter {Constant}-->
	<element type="constant">
		<source id="Excel.XlHAlign.xlHAlignCenter">
			<context kind="enumeration">XlHAlign</context>
			<name>xlHAlignCenter</name>
			<value>-4108</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHAlignCenterAcrossSelection {Constant}-->
	<element type="constant">
		<source id="Excel.XlHAlign.xlHAlignCenterAcrossSelection">
			<context kind="enumeration">XlHAlign</context>
			<name>xlHAlignCenterAcrossSelection</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHAlignDistributed {Constant}-->
	<element type="constant">
		<source id="Excel.XlHAlign.xlHAlignDistributed">
			<context kind="enumeration">XlHAlign</context>
			<name>xlHAlignDistributed</name>
			<value>-4117</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHAlignFill {Constant}-->
	<element type="constant">
		<source id="Excel.XlHAlign.xlHAlignFill">
			<context kind="enumeration">XlHAlign</context>
			<name>xlHAlignFill</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHAlignGeneral {Constant}-->
	<element type="constant">
		<source id="Excel.XlHAlign.xlHAlignGeneral">
			<context kind="enumeration">XlHAlign</context>
			<name>xlHAlignGeneral</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHAlignJustify {Constant}-->
	<element type="constant">
		<source id="Excel.XlHAlign.xlHAlignJustify">
			<context kind="enumeration">XlHAlign</context>
			<name>xlHAlignJustify</name>
			<value>-4130</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHAlignLeft {Constant}-->
	<element type="constant">
		<source id="Excel.XlHAlign.xlHAlignLeft">
			<context kind="enumeration">XlHAlign</context>
			<name>xlHAlignLeft</name>
			<value>-4131</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHAlignRight {Constant}-->
	<element type="constant">
		<source id="Excel.XlHAlign.xlHAlignRight">
			<context kind="enumeration">XlHAlign</context>
			<name>xlHAlignRight</name>
			<value>-4152</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlHebrewModes  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlHebrewModes">
			<name>XlHebrewModes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHebrewFullScript {Constant}-->
	<element type="constant">
		<source id="Excel.XlHebrewModes.xlHebrewFullScript">
			<context kind="enumeration">XlHebrewModes</context>
			<name>xlHebrewFullScript</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHebrewMixedAuthorizedScript {Constant}-->
	<element type="constant">
		<source id="Excel.XlHebrewModes.xlHebrewMixedAuthorizedScript">
			<context kind="enumeration">XlHebrewModes</context>
			<name>xlHebrewMixedAuthorizedScript</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHebrewMixedScript {Constant}-->
	<element type="constant">
		<source id="Excel.XlHebrewModes.xlHebrewMixedScript">
			<context kind="enumeration">XlHebrewModes</context>
			<name>xlHebrewMixedScript</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHebrewPartialScript {Constant}-->
	<element type="constant">
		<source id="Excel.XlHebrewModes.xlHebrewPartialScript">
			<context kind="enumeration">XlHebrewModes</context>
			<name>xlHebrewPartialScript</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlHighlightChangesTime  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlHighlightChangesTime">
			<name>XlHighlightChangesTime</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAllChanges {Constant}-->
	<element type="constant">
		<source id="Excel.XlHighlightChangesTime.xlAllChanges">
			<context kind="enumeration">XlHighlightChangesTime</context>
			<name>xlAllChanges</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNotYetReviewed {Constant}-->
	<element type="constant">
		<source id="Excel.XlHighlightChangesTime.xlNotYetReviewed">
			<context kind="enumeration">XlHighlightChangesTime</context>
			<name>xlNotYetReviewed</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSinceMyLastSave {Constant}-->
	<element type="constant">
		<source id="Excel.XlHighlightChangesTime.xlSinceMyLastSave">
			<context kind="enumeration">XlHighlightChangesTime</context>
			<name>xlSinceMyLastSave</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlHtmlType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlHtmlType">
			<name>XlHtmlType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHtmlCalc {Constant}-->
	<element type="constant">
		<source id="Excel.XlHtmlType.xlHtmlCalc">
			<context kind="enumeration">XlHtmlType</context>
			<name>xlHtmlCalc</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHtmlChart {Constant}-->
	<element type="constant">
		<source id="Excel.XlHtmlType.xlHtmlChart">
			<context kind="enumeration">XlHtmlType</context>
			<name>xlHtmlChart</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHtmlList {Constant}-->
	<element type="constant">
		<source id="Excel.XlHtmlType.xlHtmlList">
			<context kind="enumeration">XlHtmlType</context>
			<name>xlHtmlList</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHtmlStatic {Constant}-->
	<element type="constant">
		<source id="Excel.XlHtmlType.xlHtmlStatic">
			<context kind="enumeration">XlHtmlType</context>
			<name>xlHtmlStatic</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlIMEMode  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlIMEMode">
			<name>XlIMEMode</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIMEModeAlpha {Constant}-->
	<element type="constant">
		<source id="Excel.XlIMEMode.xlIMEModeAlpha">
			<context kind="enumeration">XlIMEMode</context>
			<name>xlIMEModeAlpha</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIMEModeAlphaFull {Constant}-->
	<element type="constant">
		<source id="Excel.XlIMEMode.xlIMEModeAlphaFull">
			<context kind="enumeration">XlIMEMode</context>
			<name>xlIMEModeAlphaFull</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIMEModeDisable {Constant}-->
	<element type="constant">
		<source id="Excel.XlIMEMode.xlIMEModeDisable">
			<context kind="enumeration">XlIMEMode</context>
			<name>xlIMEModeDisable</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIMEModeHangul {Constant}-->
	<element type="constant">
		<source id="Excel.XlIMEMode.xlIMEModeHangul">
			<context kind="enumeration">XlIMEMode</context>
			<name>xlIMEModeHangul</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIMEModeHangulFull {Constant}-->
	<element type="constant">
		<source id="Excel.XlIMEMode.xlIMEModeHangulFull">
			<context kind="enumeration">XlIMEMode</context>
			<name>xlIMEModeHangulFull</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIMEModeHiragana {Constant}-->
	<element type="constant">
		<source id="Excel.XlIMEMode.xlIMEModeHiragana">
			<context kind="enumeration">XlIMEMode</context>
			<name>xlIMEModeHiragana</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIMEModeKatakana {Constant}-->
	<element type="constant">
		<source id="Excel.XlIMEMode.xlIMEModeKatakana">
			<context kind="enumeration">XlIMEMode</context>
			<name>xlIMEModeKatakana</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIMEModeKatakanaHalf {Constant}-->
	<element type="constant">
		<source id="Excel.XlIMEMode.xlIMEModeKatakanaHalf">
			<context kind="enumeration">XlIMEMode</context>
			<name>xlIMEModeKatakanaHalf</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIMEModeNoControl {Constant}-->
	<element type="constant">
		<source id="Excel.XlIMEMode.xlIMEModeNoControl">
			<context kind="enumeration">XlIMEMode</context>
			<name>xlIMEModeNoControl</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIMEModeOff {Constant}-->
	<element type="constant">
		<source id="Excel.XlIMEMode.xlIMEModeOff">
			<context kind="enumeration">XlIMEMode</context>
			<name>xlIMEModeOff</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIMEModeOn {Constant}-->
	<element type="constant">
		<source id="Excel.XlIMEMode.xlIMEModeOn">
			<context kind="enumeration">XlIMEMode</context>
			<name>xlIMEModeOn</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlImportDataAs  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlImportDataAs">
			<name>XlImportDataAs</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotTableReport {Constant}-->
	<element type="constant">
		<source id="Excel.XlImportDataAs.xlPivotTableReport">
			<context kind="enumeration">XlImportDataAs</context>
			<name>xlPivotTableReport</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlQueryTable {Constant}-->
	<element type="constant">
		<source id="Excel.XlImportDataAs.xlQueryTable">
			<context kind="enumeration">XlImportDataAs</context>
			<name>xlQueryTable</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlInsertFormatOrigin  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlInsertFormatOrigin">
			<name>XlInsertFormatOrigin</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFormatFromLeftOrAbove {Constant}-->
	<element type="constant">
		<source id="Excel.XlInsertFormatOrigin.xlFormatFromLeftOrAbove">
			<context kind="enumeration">XlInsertFormatOrigin</context>
			<name>xlFormatFromLeftOrAbove</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFormatFromRightOrBelow {Constant}-->
	<element type="constant">
		<source id="Excel.XlInsertFormatOrigin.xlFormatFromRightOrBelow">
			<context kind="enumeration">XlInsertFormatOrigin</context>
			<name>xlFormatFromRightOrBelow</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlInsertShiftDirection  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlInsertShiftDirection">
			<name>XlInsertShiftDirection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlShiftDown {Constant}-->
	<element type="constant">
		<source id="Excel.XlInsertShiftDirection.xlShiftDown">
			<context kind="enumeration">XlInsertShiftDirection</context>
			<name>xlShiftDown</name>
			<value>-4121</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlShiftToRight {Constant}-->
	<element type="constant">
		<source id="Excel.XlInsertShiftDirection.xlShiftToRight">
			<context kind="enumeration">XlInsertShiftDirection</context>
			<name>xlShiftToRight</name>
			<value>-4161</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlLayoutFormType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlLayoutFormType">
			<name>XlLayoutFormType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOutline {Constant}-->
	<element type="constant">
		<source id="Excel.XlLayoutFormType.xlOutline">
			<context kind="enumeration">XlLayoutFormType</context>
			<name>xlOutline</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTabular {Constant}-->
	<element type="constant">
		<source id="Excel.XlLayoutFormType.xlTabular">
			<context kind="enumeration">XlLayoutFormType</context>
			<name>xlTabular</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlLegendPosition  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlLegendPosition">
			<name>XlLegendPosition</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLegendPositionBottom {Constant}-->
	<element type="constant">
		<source id="Excel.XlLegendPosition.xlLegendPositionBottom">
			<context kind="enumeration">XlLegendPosition</context>
			<name>xlLegendPositionBottom</name>
			<value>-4107</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLegendPositionCorner {Constant}-->
	<element type="constant">
		<source id="Excel.XlLegendPosition.xlLegendPositionCorner">
			<context kind="enumeration">XlLegendPosition</context>
			<name>xlLegendPositionCorner</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLegendPositionLeft {Constant}-->
	<element type="constant">
		<source id="Excel.XlLegendPosition.xlLegendPositionLeft">
			<context kind="enumeration">XlLegendPosition</context>
			<name>xlLegendPositionLeft</name>
			<value>-4131</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLegendPositionRight {Constant}-->
	<element type="constant">
		<source id="Excel.XlLegendPosition.xlLegendPositionRight">
			<context kind="enumeration">XlLegendPosition</context>
			<name>xlLegendPositionRight</name>
			<value>-4152</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLegendPositionTop {Constant}-->
	<element type="constant">
		<source id="Excel.XlLegendPosition.xlLegendPositionTop">
			<context kind="enumeration">XlLegendPosition</context>
			<name>xlLegendPositionTop</name>
			<value>-4160</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlLineStyle  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlLineStyle">
			<name>XlLineStyle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlContinuous {Constant}-->
	<element type="constant">
		<source id="Excel.XlLineStyle.xlContinuous">
			<context kind="enumeration">XlLineStyle</context>
			<name>xlContinuous</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDash {Constant}-->
	<element type="constant">
		<source id="Excel.XlLineStyle.xlDash">
			<context kind="enumeration">XlLineStyle</context>
			<name>xlDash</name>
			<value>-4115</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDashDot {Constant}-->
	<element type="constant">
		<source id="Excel.XlLineStyle.xlDashDot">
			<context kind="enumeration">XlLineStyle</context>
			<name>xlDashDot</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDashDotDot {Constant}-->
	<element type="constant">
		<source id="Excel.XlLineStyle.xlDashDotDot">
			<context kind="enumeration">XlLineStyle</context>
			<name>xlDashDotDot</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDot {Constant}-->
	<element type="constant">
		<source id="Excel.XlLineStyle.xlDot">
			<context kind="enumeration">XlLineStyle</context>
			<name>xlDot</name>
			<value>-4118</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDouble {Constant}-->
	<element type="constant">
		<source id="Excel.XlLineStyle.xlDouble">
			<context kind="enumeration">XlLineStyle</context>
			<name>xlDouble</name>
			<value>-4119</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLineStyleNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlLineStyle.xlLineStyleNone">
			<context kind="enumeration">XlLineStyle</context>
			<name>xlLineStyleNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSlantDashDot {Constant}-->
	<element type="constant">
		<source id="Excel.XlLineStyle.xlSlantDashDot">
			<context kind="enumeration">XlLineStyle</context>
			<name>xlSlantDashDot</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlLink  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlLink">
			<name>XlLink</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExcelLinks {Constant}-->
	<element type="constant">
		<source id="Excel.XlLink.xlExcelLinks">
			<context kind="enumeration">XlLink</context>
			<name>xlExcelLinks</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOLELinks {Constant}-->
	<element type="constant">
		<source id="Excel.XlLink.xlOLELinks">
			<context kind="enumeration">XlLink</context>
			<name>xlOLELinks</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPublishers {Constant}-->
	<element type="constant">
		<source id="Excel.XlLink.xlPublishers">
			<context kind="enumeration">XlLink</context>
			<name>xlPublishers</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSubscribers {Constant}-->
	<element type="constant">
		<source id="Excel.XlLink.xlSubscribers">
			<context kind="enumeration">XlLink</context>
			<name>xlSubscribers</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlLinkInfo  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlLinkInfo">
			<name>XlLinkInfo</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEditionDate {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkInfo.xlEditionDate">
			<context kind="enumeration">XlLinkInfo</context>
			<name>xlEditionDate</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkInfoStatus {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkInfo.xlLinkInfoStatus">
			<context kind="enumeration">XlLinkInfo</context>
			<name>xlLinkInfoStatus</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUpdateState {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkInfo.xlUpdateState">
			<context kind="enumeration">XlLinkInfo</context>
			<name>xlUpdateState</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlLinkInfoType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlLinkInfoType">
			<name>XlLinkInfoType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkInfoOLELinks {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkInfoType.xlLinkInfoOLELinks">
			<context kind="enumeration">XlLinkInfoType</context>
			<name>xlLinkInfoOLELinks</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkInfoPublishers {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkInfoType.xlLinkInfoPublishers">
			<context kind="enumeration">XlLinkInfoType</context>
			<name>xlLinkInfoPublishers</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkInfoSubscribers {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkInfoType.xlLinkInfoSubscribers">
			<context kind="enumeration">XlLinkInfoType</context>
			<name>xlLinkInfoSubscribers</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlLinkStatus  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlLinkStatus">
			<name>XlLinkStatus</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkStatusCopiedValues {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkStatus.xlLinkStatusCopiedValues">
			<context kind="enumeration">XlLinkStatus</context>
			<name>xlLinkStatusCopiedValues</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkStatusIndeterminate {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkStatus.xlLinkStatusIndeterminate">
			<context kind="enumeration">XlLinkStatus</context>
			<name>xlLinkStatusIndeterminate</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkStatusInvalidName {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkStatus.xlLinkStatusInvalidName">
			<context kind="enumeration">XlLinkStatus</context>
			<name>xlLinkStatusInvalidName</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkStatusMissingFile {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkStatus.xlLinkStatusMissingFile">
			<context kind="enumeration">XlLinkStatus</context>
			<name>xlLinkStatusMissingFile</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkStatusMissingSheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkStatus.xlLinkStatusMissingSheet">
			<context kind="enumeration">XlLinkStatus</context>
			<name>xlLinkStatusMissingSheet</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkStatusNotStarted {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkStatus.xlLinkStatusNotStarted">
			<context kind="enumeration">XlLinkStatus</context>
			<name>xlLinkStatusNotStarted</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkStatusOK {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkStatus.xlLinkStatusOK">
			<context kind="enumeration">XlLinkStatus</context>
			<name>xlLinkStatusOK</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkStatusOld {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkStatus.xlLinkStatusOld">
			<context kind="enumeration">XlLinkStatus</context>
			<name>xlLinkStatusOld</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkStatusSourceNotCalculated {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkStatus.xlLinkStatusSourceNotCalculated">
			<context kind="enumeration">XlLinkStatus</context>
			<name>xlLinkStatusSourceNotCalculated</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkStatusSourceNotOpen {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkStatus.xlLinkStatusSourceNotOpen">
			<context kind="enumeration">XlLinkStatus</context>
			<name>xlLinkStatusSourceNotOpen</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkStatusSourceOpen {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkStatus.xlLinkStatusSourceOpen">
			<context kind="enumeration">XlLinkStatus</context>
			<name>xlLinkStatusSourceOpen</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlLinkType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlLinkType">
			<name>XlLinkType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkTypeExcelLinks {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkType.xlLinkTypeExcelLinks">
			<context kind="enumeration">XlLinkType</context>
			<name>xlLinkTypeExcelLinks</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinkTypeOLELinks {Constant}-->
	<element type="constant">
		<source id="Excel.XlLinkType.xlLinkTypeOLELinks">
			<context kind="enumeration">XlLinkType</context>
			<name>xlLinkTypeOLELinks</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlListConflict  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlListConflict">
			<name>XlListConflict</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListConflictDialog {Constant}-->
	<element type="constant">
		<source id="Excel.XlListConflict.xlListConflictDialog">
			<context kind="enumeration">XlListConflict</context>
			<name>xlListConflictDialog</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListConflictDiscardAllConflicts {Constant}-->
	<element type="constant">
		<source id="Excel.XlListConflict.xlListConflictDiscardAllConflicts">
			<context kind="enumeration">XlListConflict</context>
			<name>xlListConflictDiscardAllConflicts</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListConflictError {Constant}-->
	<element type="constant">
		<source id="Excel.XlListConflict.xlListConflictError">
			<context kind="enumeration">XlListConflict</context>
			<name>xlListConflictError</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListConflictRetryAllConflicts {Constant}-->
	<element type="constant">
		<source id="Excel.XlListConflict.xlListConflictRetryAllConflicts">
			<context kind="enumeration">XlListConflict</context>
			<name>xlListConflictRetryAllConflicts</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlListDataType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlListDataType">
			<name>XlListDataType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataTypeCheckbox {Constant}-->
	<element type="constant">
		<source id="Excel.XlListDataType.xlListDataTypeCheckbox">
			<context kind="enumeration">XlListDataType</context>
			<name>xlListDataTypeCheckbox</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataTypeChoice {Constant}-->
	<element type="constant">
		<source id="Excel.XlListDataType.xlListDataTypeChoice">
			<context kind="enumeration">XlListDataType</context>
			<name>xlListDataTypeChoice</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataTypeChoiceMulti {Constant}-->
	<element type="constant">
		<source id="Excel.XlListDataType.xlListDataTypeChoiceMulti">
			<context kind="enumeration">XlListDataType</context>
			<name>xlListDataTypeChoiceMulti</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataTypeCounter {Constant}-->
	<element type="constant">
		<source id="Excel.XlListDataType.xlListDataTypeCounter">
			<context kind="enumeration">XlListDataType</context>
			<name>xlListDataTypeCounter</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataTypeCurrency {Constant}-->
	<element type="constant">
		<source id="Excel.XlListDataType.xlListDataTypeCurrency">
			<context kind="enumeration">XlListDataType</context>
			<name>xlListDataTypeCurrency</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataTypeDateTime {Constant}-->
	<element type="constant">
		<source id="Excel.XlListDataType.xlListDataTypeDateTime">
			<context kind="enumeration">XlListDataType</context>
			<name>xlListDataTypeDateTime</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataTypeHyperLink {Constant}-->
	<element type="constant">
		<source id="Excel.XlListDataType.xlListDataTypeHyperLink">
			<context kind="enumeration">XlListDataType</context>
			<name>xlListDataTypeHyperLink</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataTypeListLookup {Constant}-->
	<element type="constant">
		<source id="Excel.XlListDataType.xlListDataTypeListLookup">
			<context kind="enumeration">XlListDataType</context>
			<name>xlListDataTypeListLookup</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataTypeMultiLineRichText {Constant}-->
	<element type="constant">
		<source id="Excel.XlListDataType.xlListDataTypeMultiLineRichText">
			<context kind="enumeration">XlListDataType</context>
			<name>xlListDataTypeMultiLineRichText</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataTypeMultiLineText {Constant}-->
	<element type="constant">
		<source id="Excel.XlListDataType.xlListDataTypeMultiLineText">
			<context kind="enumeration">XlListDataType</context>
			<name>xlListDataTypeMultiLineText</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataTypeNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlListDataType.xlListDataTypeNone">
			<context kind="enumeration">XlListDataType</context>
			<name>xlListDataTypeNone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataTypeNumber {Constant}-->
	<element type="constant">
		<source id="Excel.XlListDataType.xlListDataTypeNumber">
			<context kind="enumeration">XlListDataType</context>
			<name>xlListDataTypeNumber</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlListDataTypeText {Constant}-->
	<element type="constant">
		<source id="Excel.XlListDataType.xlListDataTypeText">
			<context kind="enumeration">XlListDataType</context>
			<name>xlListDataTypeText</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlListObjectSourceType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlListObjectSourceType">
			<name>XlListObjectSourceType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSrcExternal {Constant}-->
	<element type="constant">
		<source id="Excel.XlListObjectSourceType.xlSrcExternal">
			<context kind="enumeration">XlListObjectSourceType</context>
			<name>xlSrcExternal</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSrcRange {Constant}-->
	<element type="constant">
		<source id="Excel.XlListObjectSourceType.xlSrcRange">
			<context kind="enumeration">XlListObjectSourceType</context>
			<name>xlSrcRange</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSrcXml {Constant}-->
	<element type="constant">
		<source id="Excel.XlListObjectSourceType.xlSrcXml">
			<context kind="enumeration">XlListObjectSourceType</context>
			<name>xlSrcXml</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlLocationInTable  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlLocationInTable">
			<name>XlLocationInTable</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColumnHeader {Constant}-->
	<element type="constant">
		<source id="Excel.XlLocationInTable.xlColumnHeader">
			<context kind="enumeration">XlLocationInTable</context>
			<name>xlColumnHeader</name>
			<value>-4110</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColumnItem {Constant}-->
	<element type="constant">
		<source id="Excel.XlLocationInTable.xlColumnItem">
			<context kind="enumeration">XlLocationInTable</context>
			<name>xlColumnItem</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataHeader {Constant}-->
	<element type="constant">
		<source id="Excel.XlLocationInTable.xlDataHeader">
			<context kind="enumeration">XlLocationInTable</context>
			<name>xlDataHeader</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataItem {Constant}-->
	<element type="constant">
		<source id="Excel.XlLocationInTable.xlDataItem">
			<context kind="enumeration">XlLocationInTable</context>
			<name>xlDataItem</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPageHeader {Constant}-->
	<element type="constant">
		<source id="Excel.XlLocationInTable.xlPageHeader">
			<context kind="enumeration">XlLocationInTable</context>
			<name>xlPageHeader</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPageItem {Constant}-->
	<element type="constant">
		<source id="Excel.XlLocationInTable.xlPageItem">
			<context kind="enumeration">XlLocationInTable</context>
			<name>xlPageItem</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRowHeader {Constant}-->
	<element type="constant">
		<source id="Excel.XlLocationInTable.xlRowHeader">
			<context kind="enumeration">XlLocationInTable</context>
			<name>xlRowHeader</name>
			<value>-4153</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRowItem {Constant}-->
	<element type="constant">
		<source id="Excel.XlLocationInTable.xlRowItem">
			<context kind="enumeration">XlLocationInTable</context>
			<name>xlRowItem</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTableBody {Constant}-->
	<element type="constant">
		<source id="Excel.XlLocationInTable.xlTableBody">
			<context kind="enumeration">XlLocationInTable</context>
			<name>xlTableBody</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlLookAt  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlLookAt">
			<name>XlLookAt</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPart {Constant}-->
	<element type="constant">
		<source id="Excel.XlLookAt.xlPart">
			<context kind="enumeration">XlLookAt</context>
			<name>xlPart</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWhole {Constant}-->
	<element type="constant">
		<source id="Excel.XlLookAt.xlWhole">
			<context kind="enumeration">XlLookAt</context>
			<name>xlWhole</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlMailSystem  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlMailSystem">
			<name>XlMailSystem</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMAPI {Constant}-->
	<element type="constant">
		<source id="Excel.XlMailSystem.xlMAPI">
			<context kind="enumeration">XlMailSystem</context>
			<name>xlMAPI</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoMailSystem {Constant}-->
	<element type="constant">
		<source id="Excel.XlMailSystem.xlNoMailSystem">
			<context kind="enumeration">XlMailSystem</context>
			<name>xlNoMailSystem</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPowerTalk {Constant}-->
	<element type="constant">
		<source id="Excel.XlMailSystem.xlPowerTalk">
			<context kind="enumeration">XlMailSystem</context>
			<name>xlPowerTalk</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlMarkerStyle  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlMarkerStyle">
			<name>XlMarkerStyle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMarkerStyleAutomatic {Constant}-->
	<element type="constant">
		<source id="Excel.XlMarkerStyle.xlMarkerStyleAutomatic">
			<context kind="enumeration">XlMarkerStyle</context>
			<name>xlMarkerStyleAutomatic</name>
			<value>-4105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMarkerStyleCircle {Constant}-->
	<element type="constant">
		<source id="Excel.XlMarkerStyle.xlMarkerStyleCircle">
			<context kind="enumeration">XlMarkerStyle</context>
			<name>xlMarkerStyleCircle</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMarkerStyleDash {Constant}-->
	<element type="constant">
		<source id="Excel.XlMarkerStyle.xlMarkerStyleDash">
			<context kind="enumeration">XlMarkerStyle</context>
			<name>xlMarkerStyleDash</name>
			<value>-4115</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMarkerStyleDiamond {Constant}-->
	<element type="constant">
		<source id="Excel.XlMarkerStyle.xlMarkerStyleDiamond">
			<context kind="enumeration">XlMarkerStyle</context>
			<name>xlMarkerStyleDiamond</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMarkerStyleDot {Constant}-->
	<element type="constant">
		<source id="Excel.XlMarkerStyle.xlMarkerStyleDot">
			<context kind="enumeration">XlMarkerStyle</context>
			<name>xlMarkerStyleDot</name>
			<value>-4118</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMarkerStyleNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlMarkerStyle.xlMarkerStyleNone">
			<context kind="enumeration">XlMarkerStyle</context>
			<name>xlMarkerStyleNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMarkerStylePicture {Constant}-->
	<element type="constant">
		<source id="Excel.XlMarkerStyle.xlMarkerStylePicture">
			<context kind="enumeration">XlMarkerStyle</context>
			<name>xlMarkerStylePicture</name>
			<value>-4147</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMarkerStylePlus {Constant}-->
	<element type="constant">
		<source id="Excel.XlMarkerStyle.xlMarkerStylePlus">
			<context kind="enumeration">XlMarkerStyle</context>
			<name>xlMarkerStylePlus</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMarkerStyleSquare {Constant}-->
	<element type="constant">
		<source id="Excel.XlMarkerStyle.xlMarkerStyleSquare">
			<context kind="enumeration">XlMarkerStyle</context>
			<name>xlMarkerStyleSquare</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMarkerStyleStar {Constant}-->
	<element type="constant">
		<source id="Excel.XlMarkerStyle.xlMarkerStyleStar">
			<context kind="enumeration">XlMarkerStyle</context>
			<name>xlMarkerStyleStar</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMarkerStyleTriangle {Constant}-->
	<element type="constant">
		<source id="Excel.XlMarkerStyle.xlMarkerStyleTriangle">
			<context kind="enumeration">XlMarkerStyle</context>
			<name>xlMarkerStyleTriangle</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMarkerStyleX {Constant}-->
	<element type="constant">
		<source id="Excel.XlMarkerStyle.xlMarkerStyleX">
			<context kind="enumeration">XlMarkerStyle</context>
			<name>xlMarkerStyleX</name>
			<value>-4168</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlMouseButton  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlMouseButton">
			<name>XlMouseButton</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoButton {Constant}-->
	<element type="constant">
		<source id="Excel.XlMouseButton.xlNoButton">
			<context kind="enumeration">XlMouseButton</context>
			<name>xlNoButton</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPrimaryButton {Constant}-->
	<element type="constant">
		<source id="Excel.XlMouseButton.xlPrimaryButton">
			<context kind="enumeration">XlMouseButton</context>
			<name>xlPrimaryButton</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSecondaryButton {Constant}-->
	<element type="constant">
		<source id="Excel.XlMouseButton.xlSecondaryButton">
			<context kind="enumeration">XlMouseButton</context>
			<name>xlSecondaryButton</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlMousePointer  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlMousePointer">
			<name>XlMousePointer</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDefault {Constant}-->
	<element type="constant">
		<source id="Excel.XlMousePointer.xlDefault">
			<context kind="enumeration">XlMousePointer</context>
			<name>xlDefault</name>
			<value>-4143</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIBeam {Constant}-->
	<element type="constant">
		<source id="Excel.XlMousePointer.xlIBeam">
			<context kind="enumeration">XlMousePointer</context>
			<name>xlIBeam</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNorthwestArrow {Constant}-->
	<element type="constant">
		<source id="Excel.XlMousePointer.xlNorthwestArrow">
			<context kind="enumeration">XlMousePointer</context>
			<name>xlNorthwestArrow</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWait {Constant}-->
	<element type="constant">
		<source id="Excel.XlMousePointer.xlWait">
			<context kind="enumeration">XlMousePointer</context>
			<name>xlWait</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlMSApplication  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlMSApplication">
			<name>XlMSApplication</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMicrosoftAccess {Constant}-->
	<element type="constant">
		<source id="Excel.XlMSApplication.xlMicrosoftAccess">
			<context kind="enumeration">XlMSApplication</context>
			<name>xlMicrosoftAccess</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMicrosoftFoxPro {Constant}-->
	<element type="constant">
		<source id="Excel.XlMSApplication.xlMicrosoftFoxPro">
			<context kind="enumeration">XlMSApplication</context>
			<name>xlMicrosoftFoxPro</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMicrosoftMail {Constant}-->
	<element type="constant">
		<source id="Excel.XlMSApplication.xlMicrosoftMail">
			<context kind="enumeration">XlMSApplication</context>
			<name>xlMicrosoftMail</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMicrosoftPowerPoint {Constant}-->
	<element type="constant">
		<source id="Excel.XlMSApplication.xlMicrosoftPowerPoint">
			<context kind="enumeration">XlMSApplication</context>
			<name>xlMicrosoftPowerPoint</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMicrosoftProject {Constant}-->
	<element type="constant">
		<source id="Excel.XlMSApplication.xlMicrosoftProject">
			<context kind="enumeration">XlMSApplication</context>
			<name>xlMicrosoftProject</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMicrosoftSchedulePlus {Constant}-->
	<element type="constant">
		<source id="Excel.XlMSApplication.xlMicrosoftSchedulePlus">
			<context kind="enumeration">XlMSApplication</context>
			<name>xlMicrosoftSchedulePlus</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMicrosoftWord {Constant}-->
	<element type="constant">
		<source id="Excel.XlMSApplication.xlMicrosoftWord">
			<context kind="enumeration">XlMSApplication</context>
			<name>xlMicrosoftWord</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlObjectSize  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlObjectSize">
			<name>XlObjectSize</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFitToPage {Constant}-->
	<element type="constant">
		<source id="Excel.XlObjectSize.xlFitToPage">
			<context kind="enumeration">XlObjectSize</context>
			<name>xlFitToPage</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFullPage {Constant}-->
	<element type="constant">
		<source id="Excel.XlObjectSize.xlFullPage">
			<context kind="enumeration">XlObjectSize</context>
			<name>xlFullPage</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlScreenSize {Constant}-->
	<element type="constant">
		<source id="Excel.XlObjectSize.xlScreenSize">
			<context kind="enumeration">XlObjectSize</context>
			<name>xlScreenSize</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlOLEType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlOLEType">
			<name>XlOLEType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOLEControl {Constant}-->
	<element type="constant">
		<source id="Excel.XlOLEType.xlOLEControl">
			<context kind="enumeration">XlOLEType</context>
			<name>xlOLEControl</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOLEEmbed {Constant}-->
	<element type="constant">
		<source id="Excel.XlOLEType.xlOLEEmbed">
			<context kind="enumeration">XlOLEType</context>
			<name>xlOLEEmbed</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOLELink {Constant}-->
	<element type="constant">
		<source id="Excel.XlOLEType.xlOLELink">
			<context kind="enumeration">XlOLEType</context>
			<name>xlOLELink</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlOLEVerb  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlOLEVerb">
			<name>XlOLEVerb</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVerbOpen {Constant}-->
	<element type="constant">
		<source id="Excel.XlOLEVerb.xlVerbOpen">
			<context kind="enumeration">XlOLEVerb</context>
			<name>xlVerbOpen</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVerbPrimary {Constant}-->
	<element type="constant">
		<source id="Excel.XlOLEVerb.xlVerbPrimary">
			<context kind="enumeration">XlOLEVerb</context>
			<name>xlVerbPrimary</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlOrder  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlOrder">
			<name>XlOrder</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDownThenOver {Constant}-->
	<element type="constant">
		<source id="Excel.XlOrder.xlDownThenOver">
			<context kind="enumeration">XlOrder</context>
			<name>xlDownThenOver</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOverThenDown {Constant}-->
	<element type="constant">
		<source id="Excel.XlOrder.xlOverThenDown">
			<context kind="enumeration">XlOrder</context>
			<name>xlOverThenDown</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlOrientation  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlOrientation">
			<name>XlOrientation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDownward {Constant}-->
	<element type="constant">
		<source id="Excel.XlOrientation.xlDownward">
			<context kind="enumeration">XlOrientation</context>
			<name>xlDownward</name>
			<value>-4170</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHorizontal {Constant}-->
	<element type="constant">
		<source id="Excel.XlOrientation.xlHorizontal">
			<context kind="enumeration">XlOrientation</context>
			<name>xlHorizontal</name>
			<value>-4128</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUpward {Constant}-->
	<element type="constant">
		<source id="Excel.XlOrientation.xlUpward">
			<context kind="enumeration">XlOrientation</context>
			<name>xlUpward</name>
			<value>-4171</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVertical {Constant}-->
	<element type="constant">
		<source id="Excel.XlOrientation.xlVertical">
			<context kind="enumeration">XlOrientation</context>
			<name>xlVertical</name>
			<value>-4166</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPageBreak  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPageBreak">
			<name>XlPageBreak</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPageBreakAutomatic {Constant}-->
	<element type="constant">
		<source id="Excel.XlPageBreak.xlPageBreakAutomatic">
			<context kind="enumeration">XlPageBreak</context>
			<name>xlPageBreakAutomatic</name>
			<value>-4105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPageBreakManual {Constant}-->
	<element type="constant">
		<source id="Excel.XlPageBreak.xlPageBreakManual">
			<context kind="enumeration">XlPageBreak</context>
			<name>xlPageBreakManual</name>
			<value>-4135</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPageBreakNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlPageBreak.xlPageBreakNone">
			<context kind="enumeration">XlPageBreak</context>
			<name>xlPageBreakNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPageBreakExtent  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPageBreakExtent">
			<name>XlPageBreakExtent</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPageBreakFull {Constant}-->
	<element type="constant">
		<source id="Excel.XlPageBreakExtent.xlPageBreakFull">
			<context kind="enumeration">XlPageBreakExtent</context>
			<name>xlPageBreakFull</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPageBreakPartial {Constant}-->
	<element type="constant">
		<source id="Excel.XlPageBreakExtent.xlPageBreakPartial">
			<context kind="enumeration">XlPageBreakExtent</context>
			<name>xlPageBreakPartial</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPageOrientation  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPageOrientation">
			<name>XlPageOrientation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLandscape {Constant}-->
	<element type="constant">
		<source id="Excel.XlPageOrientation.xlLandscape">
			<context kind="enumeration">XlPageOrientation</context>
			<name>xlLandscape</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPortrait {Constant}-->
	<element type="constant">
		<source id="Excel.XlPageOrientation.xlPortrait">
			<context kind="enumeration">XlPageOrientation</context>
			<name>xlPortrait</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPaperSize  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPaperSize">
			<name>XlPaperSize</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaper10x14 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaper10x14">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaper10x14</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaper11x17 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaper11x17">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaper11x17</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperA3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperA3">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperA3</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperA4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperA4">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperA4</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperA4Small {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperA4Small">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperA4Small</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperA5 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperA5">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperA5</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperB4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperB4">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperB4</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperB5 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperB5">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperB5</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperCsheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperCsheet">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperCsheet</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperDsheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperDsheet">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperDsheet</name>
			<value>25</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelope10 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelope10">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelope10</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelope11 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelope11">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelope11</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelope12 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelope12">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelope12</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelope14 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelope14">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelope14</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelope9 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelope9">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelope9</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelopeB4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelopeB4">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelopeB4</name>
			<value>33</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelopeB5 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelopeB5">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelopeB5</name>
			<value>34</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelopeB6 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelopeB6">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelopeB6</name>
			<value>35</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelopeC3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelopeC3">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelopeC3</name>
			<value>29</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelopeC4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelopeC4">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelopeC4</name>
			<value>30</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelopeC5 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelopeC5">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelopeC5</name>
			<value>28</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelopeC6 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelopeC6">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelopeC6</name>
			<value>31</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelopeC65 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelopeC65">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelopeC65</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelopeDL {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelopeDL">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelopeDL</name>
			<value>27</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelopeItaly {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelopeItaly">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelopeItaly</name>
			<value>36</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelopeMonarch {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelopeMonarch">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelopeMonarch</name>
			<value>37</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEnvelopePersonal {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEnvelopePersonal">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEnvelopePersonal</name>
			<value>38</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperEsheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperEsheet">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperEsheet</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperExecutive {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperExecutive">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperExecutive</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperFanfoldLegalGerman {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperFanfoldLegalGerman">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperFanfoldLegalGerman</name>
			<value>41</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperFanfoldStdGerman {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperFanfoldStdGerman">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperFanfoldStdGerman</name>
			<value>40</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperFanfoldUS {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperFanfoldUS">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperFanfoldUS</name>
			<value>39</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperFolio {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperFolio">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperFolio</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperLedger {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperLedger">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperLedger</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperLegal {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperLegal">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperLegal</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperLetter {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperLetter">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperLetter</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperLetterSmall {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperLetterSmall">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperLetterSmall</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperNote {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperNote">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperNote</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperQuarto {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperQuarto">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperQuarto</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperStatement {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperStatement">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperStatement</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperTabloid {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperTabloid">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperTabloid</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPaperUser {Constant}-->
	<element type="constant">
		<source id="Excel.XlPaperSize.xlPaperUser">
			<context kind="enumeration">XlPaperSize</context>
			<name>xlPaperUser</name>
			<value>256</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlParameterDataType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlParameterDataType">
			<name>XlParameterDataType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeBigInt {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeBigInt">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeBigInt</name>
			<value>-5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeBinary {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeBinary">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeBinary</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeBit {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeBit">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeBit</name>
			<value>-7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeChar {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeChar">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeChar</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeDate {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeDate">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeDate</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeDecimal {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeDecimal">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeDecimal</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeDouble {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeDouble">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeDouble</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeFloat {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeFloat">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeFloat</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeInteger {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeInteger">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeInteger</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeLongVarBinary {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeLongVarBinary">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeLongVarBinary</name>
			<value>-4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeLongVarChar {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeLongVarChar">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeLongVarChar</name>
			<value>-1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeNumeric {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeNumeric">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeNumeric</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeReal {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeReal">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeReal</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeSmallInt {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeSmallInt">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeSmallInt</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeTime {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeTime">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeTime</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeTimestamp {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeTimestamp">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeTimestamp</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeTinyInt {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeTinyInt">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeTinyInt</name>
			<value>-6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeUnknown {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeUnknown">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeUnknown</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeVarBinary {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeVarBinary">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeVarBinary</name>
			<value>-3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeVarChar {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeVarChar">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeVarChar</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlParamTypeWChar {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterDataType.xlParamTypeWChar">
			<context kind="enumeration">XlParameterDataType</context>
			<name>xlParamTypeWChar</name>
			<value>-8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlParameterType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlParameterType">
			<name>XlParameterType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlConstant {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterType.xlConstant">
			<context kind="enumeration">XlParameterType</context>
			<name>xlConstant</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPrompt {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterType.xlPrompt">
			<context kind="enumeration">XlParameterType</context>
			<name>xlPrompt</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRange {Constant}-->
	<element type="constant">
		<source id="Excel.XlParameterType.xlRange">
			<context kind="enumeration">XlParameterType</context>
			<name>xlRange</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPasteSpecialOperation  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPasteSpecialOperation">
			<name>XlPasteSpecialOperation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteSpecialOperationAdd {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteSpecialOperation.xlPasteSpecialOperationAdd">
			<context kind="enumeration">XlPasteSpecialOperation</context>
			<name>xlPasteSpecialOperationAdd</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteSpecialOperationDivide {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteSpecialOperation.xlPasteSpecialOperationDivide">
			<context kind="enumeration">XlPasteSpecialOperation</context>
			<name>xlPasteSpecialOperationDivide</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteSpecialOperationMultiply {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteSpecialOperation.xlPasteSpecialOperationMultiply">
			<context kind="enumeration">XlPasteSpecialOperation</context>
			<name>xlPasteSpecialOperationMultiply</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteSpecialOperationNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone">
			<context kind="enumeration">XlPasteSpecialOperation</context>
			<name>xlPasteSpecialOperationNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteSpecialOperationSubtract {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteSpecialOperation.xlPasteSpecialOperationSubtract">
			<context kind="enumeration">XlPasteSpecialOperation</context>
			<name>xlPasteSpecialOperationSubtract</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPasteType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPasteType">
			<name>XlPasteType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteAll {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteType.xlPasteAll">
			<context kind="enumeration">XlPasteType</context>
			<name>xlPasteAll</name>
			<value>-4104</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteAllExceptBorders {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteType.xlPasteAllExceptBorders">
			<context kind="enumeration">XlPasteType</context>
			<name>xlPasteAllExceptBorders</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteColumnWidths {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteType.xlPasteColumnWidths">
			<context kind="enumeration">XlPasteType</context>
			<name>xlPasteColumnWidths</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteComments {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteType.xlPasteComments">
			<context kind="enumeration">XlPasteType</context>
			<name>xlPasteComments</name>
			<value>-4144</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteFormats {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteType.xlPasteFormats">
			<context kind="enumeration">XlPasteType</context>
			<name>xlPasteFormats</name>
			<value>-4122</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteFormulas {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteType.xlPasteFormulas">
			<context kind="enumeration">XlPasteType</context>
			<name>xlPasteFormulas</name>
			<value>-4123</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteFormulasAndNumberFormats {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteType.xlPasteFormulasAndNumberFormats">
			<context kind="enumeration">XlPasteType</context>
			<name>xlPasteFormulasAndNumberFormats</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteValidation {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteType.xlPasteValidation">
			<context kind="enumeration">XlPasteType</context>
			<name>xlPasteValidation</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteValues {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteType.xlPasteValues">
			<context kind="enumeration">XlPasteType</context>
			<name>xlPasteValues</name>
			<value>-4163</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPasteValuesAndNumberFormats {Constant}-->
	<element type="constant">
		<source id="Excel.XlPasteType.xlPasteValuesAndNumberFormats">
			<context kind="enumeration">XlPasteType</context>
			<name>xlPasteValuesAndNumberFormats</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPattern  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPattern">
			<name>XlPattern</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternAutomatic {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternAutomatic">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternAutomatic</name>
			<value>-4105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternChecker {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternChecker">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternChecker</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternCrissCross {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternCrissCross">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternCrissCross</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternDown {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternDown">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternDown</name>
			<value>-4121</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternGray16 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternGray16">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternGray16</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternGray25 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternGray25">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternGray25</name>
			<value>-4124</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternGray50 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternGray50">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternGray50</name>
			<value>-4125</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternGray75 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternGray75">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternGray75</name>
			<value>-4126</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternGray8 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternGray8">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternGray8</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternGrid {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternGrid">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternGrid</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternHorizontal {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternHorizontal">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternHorizontal</name>
			<value>-4128</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternLightDown {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternLightDown">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternLightDown</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternLightHorizontal {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternLightHorizontal">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternLightHorizontal</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternLightUp {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternLightUp">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternLightUp</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternLightVertical {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternLightVertical">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternLightVertical</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternNone">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternSemiGray75 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternSemiGray75">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternSemiGray75</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternSolid {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternSolid">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternSolid</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternUp {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternUp">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternUp</name>
			<value>-4162</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPatternVertical {Constant}-->
	<element type="constant">
		<source id="Excel.XlPattern.xlPatternVertical">
			<context kind="enumeration">XlPattern</context>
			<name>xlPatternVertical</name>
			<value>-4166</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPhoneticAlignment  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPhoneticAlignment">
			<name>XlPhoneticAlignment</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPhoneticAlignCenter {Constant}-->
	<element type="constant">
		<source id="Excel.XlPhoneticAlignment.xlPhoneticAlignCenter">
			<context kind="enumeration">XlPhoneticAlignment</context>
			<name>xlPhoneticAlignCenter</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPhoneticAlignDistributed {Constant}-->
	<element type="constant">
		<source id="Excel.XlPhoneticAlignment.xlPhoneticAlignDistributed">
			<context kind="enumeration">XlPhoneticAlignment</context>
			<name>xlPhoneticAlignDistributed</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPhoneticAlignLeft {Constant}-->
	<element type="constant">
		<source id="Excel.XlPhoneticAlignment.xlPhoneticAlignLeft">
			<context kind="enumeration">XlPhoneticAlignment</context>
			<name>xlPhoneticAlignLeft</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPhoneticAlignNoControl {Constant}-->
	<element type="constant">
		<source id="Excel.XlPhoneticAlignment.xlPhoneticAlignNoControl">
			<context kind="enumeration">XlPhoneticAlignment</context>
			<name>xlPhoneticAlignNoControl</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPhoneticCharacterType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPhoneticCharacterType">
			<name>XlPhoneticCharacterType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHiragana {Constant}-->
	<element type="constant">
		<source id="Excel.XlPhoneticCharacterType.xlHiragana">
			<context kind="enumeration">XlPhoneticCharacterType</context>
			<name>xlHiragana</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlKatakana {Constant}-->
	<element type="constant">
		<source id="Excel.XlPhoneticCharacterType.xlKatakana">
			<context kind="enumeration">XlPhoneticCharacterType</context>
			<name>xlKatakana</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlKatakanaHalf {Constant}-->
	<element type="constant">
		<source id="Excel.XlPhoneticCharacterType.xlKatakanaHalf">
			<context kind="enumeration">XlPhoneticCharacterType</context>
			<name>xlKatakanaHalf</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoConversion {Constant}-->
	<element type="constant">
		<source id="Excel.XlPhoneticCharacterType.xlNoConversion">
			<context kind="enumeration">XlPhoneticCharacterType</context>
			<name>xlNoConversion</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPictureAppearance  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPictureAppearance">
			<name>XlPictureAppearance</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPrinter {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureAppearance.xlPrinter">
			<context kind="enumeration">XlPictureAppearance</context>
			<name>xlPrinter</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlScreen {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureAppearance.xlScreen">
			<context kind="enumeration">XlPictureAppearance</context>
			<name>xlScreen</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPictureConvertorType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPictureConvertorType">
			<name>XlPictureConvertorType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBMP {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureConvertorType.xlBMP">
			<context kind="enumeration">XlPictureConvertorType</context>
			<name>xlBMP</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCGM {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureConvertorType.xlCGM">
			<context kind="enumeration">XlPictureConvertorType</context>
			<name>xlCGM</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDRW {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureConvertorType.xlDRW">
			<context kind="enumeration">XlPictureConvertorType</context>
			<name>xlDRW</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDXF {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureConvertorType.xlDXF">
			<context kind="enumeration">XlPictureConvertorType</context>
			<name>xlDXF</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEPS {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureConvertorType.xlEPS">
			<context kind="enumeration">XlPictureConvertorType</context>
			<name>xlEPS</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHGL {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureConvertorType.xlHGL">
			<context kind="enumeration">XlPictureConvertorType</context>
			<name>xlHGL</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPCT {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureConvertorType.xlPCT">
			<context kind="enumeration">XlPictureConvertorType</context>
			<name>xlPCT</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPCX {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureConvertorType.xlPCX">
			<context kind="enumeration">XlPictureConvertorType</context>
			<name>xlPCX</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPIC {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureConvertorType.xlPIC">
			<context kind="enumeration">XlPictureConvertorType</context>
			<name>xlPIC</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPLT {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureConvertorType.xlPLT">
			<context kind="enumeration">XlPictureConvertorType</context>
			<name>xlPLT</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTIF {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureConvertorType.xlTIF">
			<context kind="enumeration">XlPictureConvertorType</context>
			<name>xlTIF</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWMF {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureConvertorType.xlWMF">
			<context kind="enumeration">XlPictureConvertorType</context>
			<name>xlWMF</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWPG {Constant}-->
	<element type="constant">
		<source id="Excel.XlPictureConvertorType.xlWPG">
			<context kind="enumeration">XlPictureConvertorType</context>
			<name>xlWPG</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPivotCellType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPivotCellType">
			<name>XlPivotCellType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotCellBlankCell {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotCellType.xlPivotCellBlankCell">
			<context kind="enumeration">XlPivotCellType</context>
			<name>xlPivotCellBlankCell</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotCellCustomSubtotal {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotCellType.xlPivotCellCustomSubtotal">
			<context kind="enumeration">XlPivotCellType</context>
			<name>xlPivotCellCustomSubtotal</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotCellDataField {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotCellType.xlPivotCellDataField">
			<context kind="enumeration">XlPivotCellType</context>
			<name>xlPivotCellDataField</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotCellDataPivotField {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotCellType.xlPivotCellDataPivotField">
			<context kind="enumeration">XlPivotCellType</context>
			<name>xlPivotCellDataPivotField</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotCellGrandTotal {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotCellType.xlPivotCellGrandTotal">
			<context kind="enumeration">XlPivotCellType</context>
			<name>xlPivotCellGrandTotal</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotCellPageFieldItem {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotCellType.xlPivotCellPageFieldItem">
			<context kind="enumeration">XlPivotCellType</context>
			<name>xlPivotCellPageFieldItem</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotCellPivotField {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotCellType.xlPivotCellPivotField">
			<context kind="enumeration">XlPivotCellType</context>
			<name>xlPivotCellPivotField</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotCellPivotItem {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotCellType.xlPivotCellPivotItem">
			<context kind="enumeration">XlPivotCellType</context>
			<name>xlPivotCellPivotItem</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotCellSubtotal {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotCellType.xlPivotCellSubtotal">
			<context kind="enumeration">XlPivotCellType</context>
			<name>xlPivotCellSubtotal</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotCellValue {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotCellType.xlPivotCellValue">
			<context kind="enumeration">XlPivotCellType</context>
			<name>xlPivotCellValue</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPivotFieldCalculation  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPivotFieldCalculation">
			<name>XlPivotFieldCalculation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDifferenceFrom {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldCalculation.xlDifferenceFrom">
			<context kind="enumeration">XlPivotFieldCalculation</context>
			<name>xlDifferenceFrom</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIndex {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldCalculation.xlIndex">
			<context kind="enumeration">XlPivotFieldCalculation</context>
			<name>xlIndex</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoAdditionalCalculation {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldCalculation.xlNoAdditionalCalculation">
			<context kind="enumeration">XlPivotFieldCalculation</context>
			<name>xlNoAdditionalCalculation</name>
			<value>-4143</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPercentDifferenceFrom {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldCalculation.xlPercentDifferenceFrom">
			<context kind="enumeration">XlPivotFieldCalculation</context>
			<name>xlPercentDifferenceFrom</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPercentOf {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldCalculation.xlPercentOf">
			<context kind="enumeration">XlPivotFieldCalculation</context>
			<name>xlPercentOf</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPercentOfColumn {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldCalculation.xlPercentOfColumn">
			<context kind="enumeration">XlPivotFieldCalculation</context>
			<name>xlPercentOfColumn</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPercentOfRow {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldCalculation.xlPercentOfRow">
			<context kind="enumeration">XlPivotFieldCalculation</context>
			<name>xlPercentOfRow</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPercentOfTotal {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldCalculation.xlPercentOfTotal">
			<context kind="enumeration">XlPivotFieldCalculation</context>
			<name>xlPercentOfTotal</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRunningTotal {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldCalculation.xlRunningTotal">
			<context kind="enumeration">XlPivotFieldCalculation</context>
			<name>xlRunningTotal</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPivotFieldDataType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPivotFieldDataType">
			<name>XlPivotFieldDataType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDate {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldDataType.xlDate">
			<context kind="enumeration">XlPivotFieldDataType</context>
			<name>xlDate</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNumber {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldDataType.xlNumber">
			<context kind="enumeration">XlPivotFieldDataType</context>
			<name>xlNumber</name>
			<value>-4145</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlText {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldDataType.xlText">
			<context kind="enumeration">XlPivotFieldDataType</context>
			<name>xlText</name>
			<value>-4158</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPivotFieldOrientation  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPivotFieldOrientation">
			<name>XlPivotFieldOrientation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColumnField {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldOrientation.xlColumnField">
			<context kind="enumeration">XlPivotFieldOrientation</context>
			<name>xlColumnField</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataField {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldOrientation.xlDataField">
			<context kind="enumeration">XlPivotFieldOrientation</context>
			<name>xlDataField</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlHidden {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldOrientation.xlHidden">
			<context kind="enumeration">XlPivotFieldOrientation</context>
			<name>xlHidden</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPageField {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldOrientation.xlPageField">
			<context kind="enumeration">XlPivotFieldOrientation</context>
			<name>xlPageField</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRowField {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFieldOrientation.xlRowField">
			<context kind="enumeration">XlPivotFieldOrientation</context>
			<name>xlRowField</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPivotFormatType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPivotFormatType">
			<name>XlPivotFormatType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPTClassic {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlPTClassic">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlPTClassic</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPTNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlPTNone">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlPTNone</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlReport1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlReport1">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlReport1</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlReport10 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlReport10">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlReport10</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlReport2 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlReport2">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlReport2</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlReport3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlReport3">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlReport3</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlReport4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlReport4">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlReport4</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlReport5 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlReport5">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlReport5</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlReport6 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlReport6">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlReport6</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlReport7 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlReport7">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlReport7</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlReport8 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlReport8">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlReport8</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlReport9 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlReport9">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlReport9</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTable1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlTable1">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlTable1</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTable10 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlTable10">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlTable10</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTable2 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlTable2">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlTable2</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTable3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlTable3">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlTable3</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTable4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlTable4">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlTable4</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTable5 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlTable5">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlTable5</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTable6 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlTable6">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlTable6</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTable7 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlTable7">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlTable7</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTable8 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlTable8">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlTable8</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTable9 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotFormatType.xlTable9">
			<context kind="enumeration">XlPivotFormatType</context>
			<name>xlTable9</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPivotTableMissingItems  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPivotTableMissingItems">
			<name>XlPivotTableMissingItems</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMissingItemsDefault {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotTableMissingItems.xlMissingItemsDefault">
			<context kind="enumeration">XlPivotTableMissingItems</context>
			<name>xlMissingItemsDefault</name>
			<value>-1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMissingItemsMax {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotTableMissingItems.xlMissingItemsMax">
			<context kind="enumeration">XlPivotTableMissingItems</context>
			<name>xlMissingItemsMax</name>
			<value>32500</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMissingItemsNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotTableMissingItems.xlMissingItemsNone">
			<context kind="enumeration">XlPivotTableMissingItems</context>
			<name>xlMissingItemsNone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPivotTableSourceType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPivotTableSourceType">
			<name>XlPivotTableSourceType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlConsolidation {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotTableSourceType.xlConsolidation">
			<context kind="enumeration">XlPivotTableSourceType</context>
			<name>xlConsolidation</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDatabase {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotTableSourceType.xlDatabase">
			<context kind="enumeration">XlPivotTableSourceType</context>
			<name>xlDatabase</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExternal {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotTableSourceType.xlExternal">
			<context kind="enumeration">XlPivotTableSourceType</context>
			<name>xlExternal</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotTable {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotTableSourceType.xlPivotTable">
			<context kind="enumeration">XlPivotTableSourceType</context>
			<name>xlPivotTable</name>
			<value>-4148</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlScenario {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotTableSourceType.xlScenario">
			<context kind="enumeration">XlPivotTableSourceType</context>
			<name>xlScenario</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPivotTableVersionList  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPivotTableVersionList">
			<name>XlPivotTableVersionList</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotTableVersion10 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotTableVersionList.xlPivotTableVersion10">
			<context kind="enumeration">XlPivotTableVersionList</context>
			<name>xlPivotTableVersion10</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotTableVersion2000 {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotTableVersionList.xlPivotTableVersion2000">
			<context kind="enumeration">XlPivotTableVersionList</context>
			<name>xlPivotTableVersion2000</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPivotTableVersionCurrent {Constant}-->
	<element type="constant">
		<source id="Excel.XlPivotTableVersionList.xlPivotTableVersionCurrent">
			<context kind="enumeration">XlPivotTableVersionList</context>
			<name>xlPivotTableVersionCurrent</name>
			<value>-1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPlacement  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPlacement">
			<name>XlPlacement</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFreeFloating {Constant}-->
	<element type="constant">
		<source id="Excel.XlPlacement.xlFreeFloating">
			<context kind="enumeration">XlPlacement</context>
			<name>xlFreeFloating</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMove {Constant}-->
	<element type="constant">
		<source id="Excel.XlPlacement.xlMove">
			<context kind="enumeration">XlPlacement</context>
			<name>xlMove</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMoveAndSize {Constant}-->
	<element type="constant">
		<source id="Excel.XlPlacement.xlMoveAndSize">
			<context kind="enumeration">XlPlacement</context>
			<name>xlMoveAndSize</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPlatform  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPlatform">
			<name>XlPlatform</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMacintosh {Constant}-->
	<element type="constant">
		<source id="Excel.XlPlatform.xlMacintosh">
			<context kind="enumeration">XlPlatform</context>
			<name>xlMacintosh</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMSDOS {Constant}-->
	<element type="constant">
		<source id="Excel.XlPlatform.xlMSDOS">
			<context kind="enumeration">XlPlatform</context>
			<name>xlMSDOS</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWindows {Constant}-->
	<element type="constant">
		<source id="Excel.XlPlatform.xlWindows">
			<context kind="enumeration">XlPlatform</context>
			<name>xlWindows</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPrintErrors  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPrintErrors">
			<name>XlPrintErrors</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPrintErrorsBlank {Constant}-->
	<element type="constant">
		<source id="Excel.XlPrintErrors.xlPrintErrorsBlank">
			<context kind="enumeration">XlPrintErrors</context>
			<name>xlPrintErrorsBlank</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPrintErrorsDash {Constant}-->
	<element type="constant">
		<source id="Excel.XlPrintErrors.xlPrintErrorsDash">
			<context kind="enumeration">XlPrintErrors</context>
			<name>xlPrintErrorsDash</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPrintErrorsDisplayed {Constant}-->
	<element type="constant">
		<source id="Excel.XlPrintErrors.xlPrintErrorsDisplayed">
			<context kind="enumeration">XlPrintErrors</context>
			<name>xlPrintErrorsDisplayed</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPrintErrorsNA {Constant}-->
	<element type="constant">
		<source id="Excel.XlPrintErrors.xlPrintErrorsNA">
			<context kind="enumeration">XlPrintErrors</context>
			<name>xlPrintErrorsNA</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPrintLocation  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPrintLocation">
			<name>XlPrintLocation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPrintInPlace {Constant}-->
	<element type="constant">
		<source id="Excel.XlPrintLocation.xlPrintInPlace">
			<context kind="enumeration">XlPrintLocation</context>
			<name>xlPrintInPlace</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPrintNoComments {Constant}-->
	<element type="constant">
		<source id="Excel.XlPrintLocation.xlPrintNoComments">
			<context kind="enumeration">XlPrintLocation</context>
			<name>xlPrintNoComments</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPrintSheetEnd {Constant}-->
	<element type="constant">
		<source id="Excel.XlPrintLocation.xlPrintSheetEnd">
			<context kind="enumeration">XlPrintLocation</context>
			<name>xlPrintSheetEnd</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPriority  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPriority">
			<name>XlPriority</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPriorityHigh {Constant}-->
	<element type="constant">
		<source id="Excel.XlPriority.xlPriorityHigh">
			<context kind="enumeration">XlPriority</context>
			<name>xlPriorityHigh</name>
			<value>-4127</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPriorityLow {Constant}-->
	<element type="constant">
		<source id="Excel.XlPriority.xlPriorityLow">
			<context kind="enumeration">XlPriority</context>
			<name>xlPriorityLow</name>
			<value>-4134</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPriorityNormal {Constant}-->
	<element type="constant">
		<source id="Excel.XlPriority.xlPriorityNormal">
			<context kind="enumeration">XlPriority</context>
			<name>xlPriorityNormal</name>
			<value>-4143</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlPTSelectionMode  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlPTSelectionMode">
			<name>XlPTSelectionMode</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlBlanks {Constant}-->
	<element type="constant">
		<source id="Excel.XlPTSelectionMode.xlBlanks">
			<context kind="enumeration">XlPTSelectionMode</context>
			<name>xlBlanks</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlButton {Constant}-->
	<element type="constant">
		<source id="Excel.XlPTSelectionMode.xlButton">
			<context kind="enumeration">XlPTSelectionMode</context>
			<name>xlButton</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataAndLabel {Constant}-->
	<element type="constant">
		<source id="Excel.XlPTSelectionMode.xlDataAndLabel">
			<context kind="enumeration">XlPTSelectionMode</context>
			<name>xlDataAndLabel</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDataOnly {Constant}-->
	<element type="constant">
		<source id="Excel.XlPTSelectionMode.xlDataOnly">
			<context kind="enumeration">XlPTSelectionMode</context>
			<name>xlDataOnly</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFirstRow {Constant}-->
	<element type="constant">
		<source id="Excel.XlPTSelectionMode.xlFirstRow">
			<context kind="enumeration">XlPTSelectionMode</context>
			<name>xlFirstRow</name>
			<value>256</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLabelOnly {Constant}-->
	<element type="constant">
		<source id="Excel.XlPTSelectionMode.xlLabelOnly">
			<context kind="enumeration">XlPTSelectionMode</context>
			<name>xlLabelOnly</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOrigin {Constant}-->
	<element type="constant">
		<source id="Excel.XlPTSelectionMode.xlOrigin">
			<context kind="enumeration">XlPTSelectionMode</context>
			<name>xlOrigin</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlQueryType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlQueryType">
			<name>XlQueryType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlADORecordset {Constant}-->
	<element type="constant">
		<source id="Excel.XlQueryType.xlADORecordset">
			<context kind="enumeration">XlQueryType</context>
			<name>xlADORecordset</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDAORecordset {Constant}-->
	<element type="constant">
		<source id="Excel.XlQueryType.xlDAORecordset">
			<context kind="enumeration">XlQueryType</context>
			<name>xlDAORecordset</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlODBCQuery {Constant}-->
	<element type="constant">
		<source id="Excel.XlQueryType.xlODBCQuery">
			<context kind="enumeration">XlQueryType</context>
			<name>xlODBCQuery</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOLEDBQuery {Constant}-->
	<element type="constant">
		<source id="Excel.XlQueryType.xlOLEDBQuery">
			<context kind="enumeration">XlQueryType</context>
			<name>xlOLEDBQuery</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextImport {Constant}-->
	<element type="constant">
		<source id="Excel.XlQueryType.xlTextImport">
			<context kind="enumeration">XlQueryType</context>
			<name>xlTextImport</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWebQuery {Constant}-->
	<element type="constant">
		<source id="Excel.XlQueryType.xlWebQuery">
			<context kind="enumeration">XlQueryType</context>
			<name>xlWebQuery</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlRangeAutoFormat  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlRangeAutoFormat">
			<name>XlRangeAutoFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormat3DEffects1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormat3DEffects1">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormat3DEffects1</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormat3DEffects2 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormat3DEffects2">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormat3DEffects2</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatAccounting1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting1">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatAccounting1</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatAccounting2 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting2">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatAccounting2</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatAccounting3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting3">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatAccounting3</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatAccounting4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatAccounting4">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatAccounting4</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatClassic1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatClassic1</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatClassic2 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic2">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatClassic2</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatClassic3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic3">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatClassic3</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatClassicPivotTable {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatClassicPivotTable">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatClassicPivotTable</name>
			<value>31</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatColor1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatColor1">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatColor1</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatColor2 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatColor2">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatColor2</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatColor3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatColor3">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatColor3</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatList1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatList1">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatList1</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatList2 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatList2">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatList2</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatList3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatList3">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatList3</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatLocalFormat1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat1">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatLocalFormat1</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatLocalFormat2 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat2">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatLocalFormat2</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatLocalFormat3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat3">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatLocalFormat3</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatLocalFormat4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatLocalFormat4">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatLocalFormat4</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatNone">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatPTNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatPTNone">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatPTNone</name>
			<value>42</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatReport1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatReport1">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatReport1</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatReport10 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatReport10">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatReport10</name>
			<value>30</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatReport2 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatReport2">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatReport2</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatReport3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatReport3">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatReport3</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatReport4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatReport4">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatReport4</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatReport5 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatReport5">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatReport5</name>
			<value>25</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatReport6 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatReport6">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatReport6</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatReport7 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatReport7">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatReport7</name>
			<value>27</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatReport8 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatReport8">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatReport8</name>
			<value>28</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatReport9 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatReport9">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatReport9</name>
			<value>29</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatSimple {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatSimple">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatSimple</name>
			<value>-4154</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatTable1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatTable1">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatTable1</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatTable10 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatTable10">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatTable10</name>
			<value>41</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatTable2 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatTable2">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatTable2</name>
			<value>33</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatTable3 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatTable3">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatTable3</name>
			<value>34</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatTable4 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatTable4">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatTable4</name>
			<value>35</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatTable5 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatTable5">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatTable5</name>
			<value>36</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatTable6 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatTable6">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatTable6</name>
			<value>37</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatTable7 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatTable7">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatTable7</name>
			<value>38</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatTable8 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatTable8">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatTable8</name>
			<value>39</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeAutoFormatTable9 {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeAutoFormat.xlRangeAutoFormatTable9">
			<context kind="enumeration">XlRangeAutoFormat</context>
			<name>xlRangeAutoFormatTable9</name>
			<value>40</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlRangeValueDataType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlRangeValueDataType">
			<name>XlRangeValueDataType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeValueDefault {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeValueDataType.xlRangeValueDefault">
			<context kind="enumeration">XlRangeValueDataType</context>
			<name>xlRangeValueDefault</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeValueMSPersistXML {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeValueDataType.xlRangeValueMSPersistXML">
			<context kind="enumeration">XlRangeValueDataType</context>
			<name>xlRangeValueMSPersistXML</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRangeValueXMLSpreadsheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlRangeValueDataType.xlRangeValueXMLSpreadsheet">
			<context kind="enumeration">XlRangeValueDataType</context>
			<name>xlRangeValueXMLSpreadsheet</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlReferenceStyle  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlReferenceStyle">
			<name>XlReferenceStyle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlA1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlReferenceStyle.xlA1">
			<context kind="enumeration">XlReferenceStyle</context>
			<name>xlA1</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlR1C1 {Constant}-->
	<element type="constant">
		<source id="Excel.XlReferenceStyle.xlR1C1">
			<context kind="enumeration">XlReferenceStyle</context>
			<name>xlR1C1</name>
			<value>-4150</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlReferenceType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlReferenceType">
			<name>XlReferenceType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAbsolute {Constant}-->
	<element type="constant">
		<source id="Excel.XlReferenceType.xlAbsolute">
			<context kind="enumeration">XlReferenceType</context>
			<name>xlAbsolute</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAbsRowRelColumn {Constant}-->
	<element type="constant">
		<source id="Excel.XlReferenceType.xlAbsRowRelColumn">
			<context kind="enumeration">XlReferenceType</context>
			<name>xlAbsRowRelColumn</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRelative {Constant}-->
	<element type="constant">
		<source id="Excel.XlReferenceType.xlRelative">
			<context kind="enumeration">XlReferenceType</context>
			<name>xlRelative</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRelRowAbsColumn {Constant}-->
	<element type="constant">
		<source id="Excel.XlReferenceType.xlRelRowAbsColumn">
			<context kind="enumeration">XlReferenceType</context>
			<name>xlRelRowAbsColumn</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlRobustConnect  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlRobustConnect">
			<name>XlRobustConnect</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAlways {Constant}-->
	<element type="constant">
		<source id="Excel.XlRobustConnect.xlAlways">
			<context kind="enumeration">XlRobustConnect</context>
			<name>xlAlways</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAsRequired {Constant}-->
	<element type="constant">
		<source id="Excel.XlRobustConnect.xlAsRequired">
			<context kind="enumeration">XlRobustConnect</context>
			<name>xlAsRequired</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNever {Constant}-->
	<element type="constant">
		<source id="Excel.XlRobustConnect.xlNever">
			<context kind="enumeration">XlRobustConnect</context>
			<name>xlNever</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlRoutingSlipDelivery  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlRoutingSlipDelivery">
			<name>XlRoutingSlipDelivery</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAllAtOnce {Constant}-->
	<element type="constant">
		<source id="Excel.XlRoutingSlipDelivery.xlAllAtOnce">
			<context kind="enumeration">XlRoutingSlipDelivery</context>
			<name>xlAllAtOnce</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOneAfterAnother {Constant}-->
	<element type="constant">
		<source id="Excel.XlRoutingSlipDelivery.xlOneAfterAnother">
			<context kind="enumeration">XlRoutingSlipDelivery</context>
			<name>xlOneAfterAnother</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlRoutingSlipStatus  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlRoutingSlipStatus">
			<name>XlRoutingSlipStatus</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNotYetRouted {Constant}-->
	<element type="constant">
		<source id="Excel.XlRoutingSlipStatus.xlNotYetRouted">
			<context kind="enumeration">XlRoutingSlipStatus</context>
			<name>xlNotYetRouted</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRoutingComplete {Constant}-->
	<element type="constant">
		<source id="Excel.XlRoutingSlipStatus.xlRoutingComplete">
			<context kind="enumeration">XlRoutingSlipStatus</context>
			<name>xlRoutingComplete</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRoutingInProgress {Constant}-->
	<element type="constant">
		<source id="Excel.XlRoutingSlipStatus.xlRoutingInProgress">
			<context kind="enumeration">XlRoutingSlipStatus</context>
			<name>xlRoutingInProgress</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlRowCol  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlRowCol">
			<name>XlRowCol</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlColumns {Constant}-->
	<element type="constant">
		<source id="Excel.XlRowCol.xlColumns">
			<context kind="enumeration">XlRowCol</context>
			<name>xlColumns</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlRows {Constant}-->
	<element type="constant">
		<source id="Excel.XlRowCol.xlRows">
			<context kind="enumeration">XlRowCol</context>
			<name>xlRows</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlRunAutoMacro  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlRunAutoMacro">
			<name>XlRunAutoMacro</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAutoActivate {Constant}-->
	<element type="constant">
		<source id="Excel.XlRunAutoMacro.xlAutoActivate">
			<context kind="enumeration">XlRunAutoMacro</context>
			<name>xlAutoActivate</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAutoClose {Constant}-->
	<element type="constant">
		<source id="Excel.XlRunAutoMacro.xlAutoClose">
			<context kind="enumeration">XlRunAutoMacro</context>
			<name>xlAutoClose</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAutoDeactivate {Constant}-->
	<element type="constant">
		<source id="Excel.XlRunAutoMacro.xlAutoDeactivate">
			<context kind="enumeration">XlRunAutoMacro</context>
			<name>xlAutoDeactivate</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAutoOpen {Constant}-->
	<element type="constant">
		<source id="Excel.XlRunAutoMacro.xlAutoOpen">
			<context kind="enumeration">XlRunAutoMacro</context>
			<name>xlAutoOpen</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSaveAction  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSaveAction">
			<name>XlSaveAction</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDoNotSaveChanges {Constant}-->
	<element type="constant">
		<source id="Excel.XlSaveAction.xlDoNotSaveChanges">
			<context kind="enumeration">XlSaveAction</context>
			<name>xlDoNotSaveChanges</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSaveChanges {Constant}-->
	<element type="constant">
		<source id="Excel.XlSaveAction.xlSaveChanges">
			<context kind="enumeration">XlSaveAction</context>
			<name>xlSaveChanges</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSaveAsAccessMode  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSaveAsAccessMode">
			<name>XlSaveAsAccessMode</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExclusive {Constant}-->
	<element type="constant">
		<source id="Excel.XlSaveAsAccessMode.xlExclusive">
			<context kind="enumeration">XlSaveAsAccessMode</context>
			<name>xlExclusive</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoChange {Constant}-->
	<element type="constant">
		<source id="Excel.XlSaveAsAccessMode.xlNoChange">
			<context kind="enumeration">XlSaveAsAccessMode</context>
			<name>xlNoChange</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlShared {Constant}-->
	<element type="constant">
		<source id="Excel.XlSaveAsAccessMode.xlShared">
			<context kind="enumeration">XlSaveAsAccessMode</context>
			<name>xlShared</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSaveConflictResolution  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSaveConflictResolution">
			<name>XlSaveConflictResolution</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLocalSessionChanges {Constant}-->
	<element type="constant">
		<source id="Excel.XlSaveConflictResolution.xlLocalSessionChanges">
			<context kind="enumeration">XlSaveConflictResolution</context>
			<name>xlLocalSessionChanges</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlOtherSessionChanges {Constant}-->
	<element type="constant">
		<source id="Excel.XlSaveConflictResolution.xlOtherSessionChanges">
			<context kind="enumeration">XlSaveConflictResolution</context>
			<name>xlOtherSessionChanges</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUserResolution {Constant}-->
	<element type="constant">
		<source id="Excel.XlSaveConflictResolution.xlUserResolution">
			<context kind="enumeration">XlSaveConflictResolution</context>
			<name>xlUserResolution</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlScaleType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlScaleType">
			<name>XlScaleType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlScaleLinear {Constant}-->
	<element type="constant">
		<source id="Excel.XlScaleType.xlScaleLinear">
			<context kind="enumeration">XlScaleType</context>
			<name>xlScaleLinear</name>
			<value>-4132</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlScaleLogarithmic {Constant}-->
	<element type="constant">
		<source id="Excel.XlScaleType.xlScaleLogarithmic">
			<context kind="enumeration">XlScaleType</context>
			<name>xlScaleLogarithmic</name>
			<value>-4133</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSearchDirection  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSearchDirection">
			<name>XlSearchDirection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNext {Constant}-->
	<element type="constant">
		<source id="Excel.XlSearchDirection.xlNext">
			<context kind="enumeration">XlSearchDirection</context>
			<name>xlNext</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPrevious {Constant}-->
	<element type="constant">
		<source id="Excel.XlSearchDirection.xlPrevious">
			<context kind="enumeration">XlSearchDirection</context>
			<name>xlPrevious</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSearchOrder  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSearchOrder">
			<name>XlSearchOrder</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlByColumns {Constant}-->
	<element type="constant">
		<source id="Excel.XlSearchOrder.xlByColumns">
			<context kind="enumeration">XlSearchOrder</context>
			<name>xlByColumns</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlByRows {Constant}-->
	<element type="constant">
		<source id="Excel.XlSearchOrder.xlByRows">
			<context kind="enumeration">XlSearchOrder</context>
			<name>xlByRows</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSearchWithin  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSearchWithin">
			<name>XlSearchWithin</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWithinSheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlSearchWithin.xlWithinSheet">
			<context kind="enumeration">XlSearchWithin</context>
			<name>xlWithinSheet</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWithinWorkbook {Constant}-->
	<element type="constant">
		<source id="Excel.XlSearchWithin.xlWithinWorkbook">
			<context kind="enumeration">XlSearchWithin</context>
			<name>xlWithinWorkbook</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSheetType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSheetType">
			<name>XlSheetType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlChart {Constant}-->
	<element type="constant">
		<source id="Excel.XlSheetType.xlChart">
			<context kind="enumeration">XlSheetType</context>
			<name>xlChart</name>
			<value>-4109</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDialogSheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlSheetType.xlDialogSheet">
			<context kind="enumeration">XlSheetType</context>
			<name>xlDialogSheet</name>
			<value>-4116</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExcel4IntlMacroSheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlSheetType.xlExcel4IntlMacroSheet">
			<context kind="enumeration">XlSheetType</context>
			<name>xlExcel4IntlMacroSheet</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExcel4MacroSheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlSheetType.xlExcel4MacroSheet">
			<context kind="enumeration">XlSheetType</context>
			<name>xlExcel4MacroSheet</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWorksheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlSheetType.xlWorksheet">
			<context kind="enumeration">XlSheetType</context>
			<name>xlWorksheet</name>
			<value>-4167</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSheetVisibility  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSheetVisibility">
			<name>XlSheetVisibility</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSheetHidden {Constant}-->
	<element type="constant">
		<source id="Excel.XlSheetVisibility.xlSheetHidden">
			<context kind="enumeration">XlSheetVisibility</context>
			<name>xlSheetHidden</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSheetVeryHidden {Constant}-->
	<element type="constant">
		<source id="Excel.XlSheetVisibility.xlSheetVeryHidden">
			<context kind="enumeration">XlSheetVisibility</context>
			<name>xlSheetVeryHidden</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSheetVisible {Constant}-->
	<element type="constant">
		<source id="Excel.XlSheetVisibility.xlSheetVisible">
			<context kind="enumeration">XlSheetVisibility</context>
			<name>xlSheetVisible</name>
			<value>-1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSizeRepresents  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSizeRepresents">
			<name>XlSizeRepresents</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSizeIsArea {Constant}-->
	<element type="constant">
		<source id="Excel.XlSizeRepresents.xlSizeIsArea">
			<context kind="enumeration">XlSizeRepresents</context>
			<name>xlSizeIsArea</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSizeIsWidth {Constant}-->
	<element type="constant">
		<source id="Excel.XlSizeRepresents.xlSizeIsWidth">
			<context kind="enumeration">XlSizeRepresents</context>
			<name>xlSizeIsWidth</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSmartTagControlType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSmartTagControlType">
			<name>XlSmartTagControlType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlActiveX {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlActiveX">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlActiveX</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlButton {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlButton">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlButton</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlCheckbox {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlCheckbox">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlCheckbox</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlCombo {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlCombo">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlCombo</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlHelp {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlHelp">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlHelp</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlHelpURL {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlHelpURL">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlHelpURL</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlImage {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlImage">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlImage</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlLabel {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlLabel">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlLabel</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlLink {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlLink">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlLink</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlListbox {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlListbox">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlListbox</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlRadioGroup {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlRadioGroup">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlRadioGroup</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlSeparator {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlSeparator">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlSeparator</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlSmartTag {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlSmartTag">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlSmartTag</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSmartTagControlTextbox {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagControlType.xlSmartTagControlTextbox">
			<context kind="enumeration">XlSmartTagControlType</context>
			<name>xlSmartTagControlTextbox</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSmartTagDisplayMode  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSmartTagDisplayMode">
			<name>XlSmartTagDisplayMode</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlButtonOnly {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagDisplayMode.xlButtonOnly">
			<context kind="enumeration">XlSmartTagDisplayMode</context>
			<name>xlButtonOnly</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDisplayNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagDisplayMode.xlDisplayNone">
			<context kind="enumeration">XlSmartTagDisplayMode</context>
			<name>xlDisplayNone</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlIndicatorAndButton {Constant}-->
	<element type="constant">
		<source id="Excel.XlSmartTagDisplayMode.xlIndicatorAndButton">
			<context kind="enumeration">XlSmartTagDisplayMode</context>
			<name>xlIndicatorAndButton</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSortDataOption  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSortDataOption">
			<name>XlSortDataOption</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSortNormal {Constant}-->
	<element type="constant">
		<source id="Excel.XlSortDataOption.xlSortNormal">
			<context kind="enumeration">XlSortDataOption</context>
			<name>xlSortNormal</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSortTextAsNumbers {Constant}-->
	<element type="constant">
		<source id="Excel.XlSortDataOption.xlSortTextAsNumbers">
			<context kind="enumeration">XlSortDataOption</context>
			<name>xlSortTextAsNumbers</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSortMethod  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSortMethod">
			<name>XlSortMethod</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPinYin {Constant}-->
	<element type="constant">
		<source id="Excel.XlSortMethod.xlPinYin">
			<context kind="enumeration">XlSortMethod</context>
			<name>xlPinYin</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStroke {Constant}-->
	<element type="constant">
		<source id="Excel.XlSortMethod.xlStroke">
			<context kind="enumeration">XlSortMethod</context>
			<name>xlStroke</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSortMethodOld  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSortMethodOld">
			<name>XlSortMethodOld</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCodePage {Constant}-->
	<element type="constant">
		<source id="Excel.XlSortMethodOld.xlCodePage">
			<context kind="enumeration">XlSortMethodOld</context>
			<name>xlCodePage</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSyllabary {Constant}-->
	<element type="constant">
		<source id="Excel.XlSortMethodOld.xlSyllabary">
			<context kind="enumeration">XlSortMethodOld</context>
			<name>xlSyllabary</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSortOrder  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSortOrder">
			<name>XlSortOrder</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAscending {Constant}-->
	<element type="constant">
		<source id="Excel.XlSortOrder.xlAscending">
			<context kind="enumeration">XlSortOrder</context>
			<name>xlAscending</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDescending {Constant}-->
	<element type="constant">
		<source id="Excel.XlSortOrder.xlDescending">
			<context kind="enumeration">XlSortOrder</context>
			<name>xlDescending</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSortOrientation  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSortOrientation">
			<name>XlSortOrientation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSortColumns {Constant}-->
	<element type="constant">
		<source id="Excel.XlSortOrientation.xlSortColumns">
			<context kind="enumeration">XlSortOrientation</context>
			<name>xlSortColumns</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSortRows {Constant}-->
	<element type="constant">
		<source id="Excel.XlSortOrientation.xlSortRows">
			<context kind="enumeration">XlSortOrientation</context>
			<name>xlSortRows</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSortType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSortType">
			<name>XlSortType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSortLabels {Constant}-->
	<element type="constant">
		<source id="Excel.XlSortType.xlSortLabels">
			<context kind="enumeration">XlSortType</context>
			<name>xlSortLabels</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSortValues {Constant}-->
	<element type="constant">
		<source id="Excel.XlSortType.xlSortValues">
			<context kind="enumeration">XlSortType</context>
			<name>xlSortValues</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSourceType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSourceType">
			<name>XlSourceType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSourceAutoFilter {Constant}-->
	<element type="constant">
		<source id="Excel.XlSourceType.xlSourceAutoFilter">
			<context kind="enumeration">XlSourceType</context>
			<name>xlSourceAutoFilter</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSourceChart {Constant}-->
	<element type="constant">
		<source id="Excel.XlSourceType.xlSourceChart">
			<context kind="enumeration">XlSourceType</context>
			<name>xlSourceChart</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSourcePivotTable {Constant}-->
	<element type="constant">
		<source id="Excel.XlSourceType.xlSourcePivotTable">
			<context kind="enumeration">XlSourceType</context>
			<name>xlSourcePivotTable</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSourcePrintArea {Constant}-->
	<element type="constant">
		<source id="Excel.XlSourceType.xlSourcePrintArea">
			<context kind="enumeration">XlSourceType</context>
			<name>xlSourcePrintArea</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSourceQuery {Constant}-->
	<element type="constant">
		<source id="Excel.XlSourceType.xlSourceQuery">
			<context kind="enumeration">XlSourceType</context>
			<name>xlSourceQuery</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSourceRange {Constant}-->
	<element type="constant">
		<source id="Excel.XlSourceType.xlSourceRange">
			<context kind="enumeration">XlSourceType</context>
			<name>xlSourceRange</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSourceSheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlSourceType.xlSourceSheet">
			<context kind="enumeration">XlSourceType</context>
			<name>xlSourceSheet</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSourceWorkbook {Constant}-->
	<element type="constant">
		<source id="Excel.XlSourceType.xlSourceWorkbook">
			<context kind="enumeration">XlSourceType</context>
			<name>xlSourceWorkbook</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSpeakDirection  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSpeakDirection">
			<name>XlSpeakDirection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSpeakByColumns {Constant}-->
	<element type="constant">
		<source id="Excel.XlSpeakDirection.xlSpeakByColumns">
			<context kind="enumeration">XlSpeakDirection</context>
			<name>xlSpeakByColumns</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSpeakByRows {Constant}-->
	<element type="constant">
		<source id="Excel.XlSpeakDirection.xlSpeakByRows">
			<context kind="enumeration">XlSpeakDirection</context>
			<name>xlSpeakByRows</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSpecialCellsValue  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSpecialCellsValue">
			<name>XlSpecialCellsValue</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlErrors {Constant}-->
	<element type="constant">
		<source id="Excel.XlSpecialCellsValue.xlErrors">
			<context kind="enumeration">XlSpecialCellsValue</context>
			<name>xlErrors</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLogical {Constant}-->
	<element type="constant">
		<source id="Excel.XlSpecialCellsValue.xlLogical">
			<context kind="enumeration">XlSpecialCellsValue</context>
			<name>xlLogical</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNumbers {Constant}-->
	<element type="constant">
		<source id="Excel.XlSpecialCellsValue.xlNumbers">
			<context kind="enumeration">XlSpecialCellsValue</context>
			<name>xlNumbers</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextValues {Constant}-->
	<element type="constant">
		<source id="Excel.XlSpecialCellsValue.xlTextValues">
			<context kind="enumeration">XlSpecialCellsValue</context>
			<name>xlTextValues</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSubscribeToFormat  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSubscribeToFormat">
			<name>XlSubscribeToFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSubscribeToPicture {Constant}-->
	<element type="constant">
		<source id="Excel.XlSubscribeToFormat.xlSubscribeToPicture">
			<context kind="enumeration">XlSubscribeToFormat</context>
			<name>xlSubscribeToPicture</name>
			<value>-4147</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSubscribeToText {Constant}-->
	<element type="constant">
		<source id="Excel.XlSubscribeToFormat.xlSubscribeToText">
			<context kind="enumeration">XlSubscribeToFormat</context>
			<name>xlSubscribeToText</name>
			<value>-4158</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSubtototalLocationType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSubtototalLocationType">
			<name>XlSubtototalLocationType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAtBottom {Constant}-->
	<element type="constant">
		<source id="Excel.XlSubtototalLocationType.xlAtBottom">
			<context kind="enumeration">XlSubtototalLocationType</context>
			<name>xlAtBottom</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAtTop {Constant}-->
	<element type="constant">
		<source id="Excel.XlSubtototalLocationType.xlAtTop">
			<context kind="enumeration">XlSubtototalLocationType</context>
			<name>xlAtTop</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSummaryColumn  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSummaryColumn">
			<name>XlSummaryColumn</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSummaryOnLeft {Constant}-->
	<element type="constant">
		<source id="Excel.XlSummaryColumn.xlSummaryOnLeft">
			<context kind="enumeration">XlSummaryColumn</context>
			<name>xlSummaryOnLeft</name>
			<value>-4131</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSummaryOnRight {Constant}-->
	<element type="constant">
		<source id="Excel.XlSummaryColumn.xlSummaryOnRight">
			<context kind="enumeration">XlSummaryColumn</context>
			<name>xlSummaryOnRight</name>
			<value>-4152</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSummaryReportType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSummaryReportType">
			<name>XlSummaryReportType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlStandardSummary {Constant}-->
	<element type="constant">
		<source id="Excel.XlSummaryReportType.xlStandardSummary">
			<context kind="enumeration">XlSummaryReportType</context>
			<name>xlStandardSummary</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSummaryPivotTable {Constant}-->
	<element type="constant">
		<source id="Excel.XlSummaryReportType.xlSummaryPivotTable">
			<context kind="enumeration">XlSummaryReportType</context>
			<name>xlSummaryPivotTable</name>
			<value>-4148</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlSummaryRow  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlSummaryRow">
			<name>XlSummaryRow</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSummaryAbove {Constant}-->
	<element type="constant">
		<source id="Excel.XlSummaryRow.xlSummaryAbove">
			<context kind="enumeration">XlSummaryRow</context>
			<name>xlSummaryAbove</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSummaryBelow {Constant}-->
	<element type="constant">
		<source id="Excel.XlSummaryRow.xlSummaryBelow">
			<context kind="enumeration">XlSummaryRow</context>
			<name>xlSummaryBelow</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlTabPosition  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlTabPosition">
			<name>XlTabPosition</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTabPositionFirst {Constant}-->
	<element type="constant">
		<source id="Excel.XlTabPosition.xlTabPositionFirst">
			<context kind="enumeration">XlTabPosition</context>
			<name>xlTabPositionFirst</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTabPositionLast {Constant}-->
	<element type="constant">
		<source id="Excel.XlTabPosition.xlTabPositionLast">
			<context kind="enumeration">XlTabPosition</context>
			<name>xlTabPositionLast</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlTextParsingType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlTextParsingType">
			<name>XlTextParsingType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDelimited {Constant}-->
	<element type="constant">
		<source id="Excel.XlTextParsingType.xlDelimited">
			<context kind="enumeration">XlTextParsingType</context>
			<name>xlDelimited</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFixedWidth {Constant}-->
	<element type="constant">
		<source id="Excel.XlTextParsingType.xlFixedWidth">
			<context kind="enumeration">XlTextParsingType</context>
			<name>xlFixedWidth</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlTextQualifier  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlTextQualifier">
			<name>XlTextQualifier</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextQualifierDoubleQuote {Constant}-->
	<element type="constant">
		<source id="Excel.XlTextQualifier.xlTextQualifierDoubleQuote">
			<context kind="enumeration">XlTextQualifier</context>
			<name>xlTextQualifierDoubleQuote</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextQualifierNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlTextQualifier.xlTextQualifierNone">
			<context kind="enumeration">XlTextQualifier</context>
			<name>xlTextQualifierNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextQualifierSingleQuote {Constant}-->
	<element type="constant">
		<source id="Excel.XlTextQualifier.xlTextQualifierSingleQuote">
			<context kind="enumeration">XlTextQualifier</context>
			<name>xlTextQualifierSingleQuote</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlTextVisualLayoutType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlTextVisualLayoutType">
			<name>XlTextVisualLayoutType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextVisualLTR {Constant}-->
	<element type="constant">
		<source id="Excel.XlTextVisualLayoutType.xlTextVisualLTR">
			<context kind="enumeration">XlTextVisualLayoutType</context>
			<name>xlTextVisualLTR</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTextVisualRTL {Constant}-->
	<element type="constant">
		<source id="Excel.XlTextVisualLayoutType.xlTextVisualRTL">
			<context kind="enumeration">XlTextVisualLayoutType</context>
			<name>xlTextVisualRTL</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlTickLabelOrientation  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlTickLabelOrientation">
			<name>XlTickLabelOrientation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTickLabelOrientationAutomatic {Constant}-->
	<element type="constant">
		<source id="Excel.XlTickLabelOrientation.xlTickLabelOrientationAutomatic">
			<context kind="enumeration">XlTickLabelOrientation</context>
			<name>xlTickLabelOrientationAutomatic</name>
			<value>-4105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTickLabelOrientationDownward {Constant}-->
	<element type="constant">
		<source id="Excel.XlTickLabelOrientation.xlTickLabelOrientationDownward">
			<context kind="enumeration">XlTickLabelOrientation</context>
			<name>xlTickLabelOrientationDownward</name>
			<value>-4170</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTickLabelOrientationHorizontal {Constant}-->
	<element type="constant">
		<source id="Excel.XlTickLabelOrientation.xlTickLabelOrientationHorizontal">
			<context kind="enumeration">XlTickLabelOrientation</context>
			<name>xlTickLabelOrientationHorizontal</name>
			<value>-4128</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTickLabelOrientationUpward {Constant}-->
	<element type="constant">
		<source id="Excel.XlTickLabelOrientation.xlTickLabelOrientationUpward">
			<context kind="enumeration">XlTickLabelOrientation</context>
			<name>xlTickLabelOrientationUpward</name>
			<value>-4171</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTickLabelOrientationVertical {Constant}-->
	<element type="constant">
		<source id="Excel.XlTickLabelOrientation.xlTickLabelOrientationVertical">
			<context kind="enumeration">XlTickLabelOrientation</context>
			<name>xlTickLabelOrientationVertical</name>
			<value>-4166</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlTickLabelPosition  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlTickLabelPosition">
			<name>XlTickLabelPosition</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTickLabelPositionHigh {Constant}-->
	<element type="constant">
		<source id="Excel.XlTickLabelPosition.xlTickLabelPositionHigh">
			<context kind="enumeration">XlTickLabelPosition</context>
			<name>xlTickLabelPositionHigh</name>
			<value>-4127</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTickLabelPositionLow {Constant}-->
	<element type="constant">
		<source id="Excel.XlTickLabelPosition.xlTickLabelPositionLow">
			<context kind="enumeration">XlTickLabelPosition</context>
			<name>xlTickLabelPositionLow</name>
			<value>-4134</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTickLabelPositionNextToAxis {Constant}-->
	<element type="constant">
		<source id="Excel.XlTickLabelPosition.xlTickLabelPositionNextToAxis">
			<context kind="enumeration">XlTickLabelPosition</context>
			<name>xlTickLabelPositionNextToAxis</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTickLabelPositionNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlTickLabelPosition.xlTickLabelPositionNone">
			<context kind="enumeration">XlTickLabelPosition</context>
			<name>xlTickLabelPositionNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlTickMark  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlTickMark">
			<name>XlTickMark</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTickMarkCross {Constant}-->
	<element type="constant">
		<source id="Excel.XlTickMark.xlTickMarkCross">
			<context kind="enumeration">XlTickMark</context>
			<name>xlTickMarkCross</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTickMarkInside {Constant}-->
	<element type="constant">
		<source id="Excel.XlTickMark.xlTickMarkInside">
			<context kind="enumeration">XlTickMark</context>
			<name>xlTickMarkInside</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTickMarkNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlTickMark.xlTickMarkNone">
			<context kind="enumeration">XlTickMark</context>
			<name>xlTickMarkNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTickMarkOutside {Constant}-->
	<element type="constant">
		<source id="Excel.XlTickMark.xlTickMarkOutside">
			<context kind="enumeration">XlTickMark</context>
			<name>xlTickMarkOutside</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlTimeUnit  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlTimeUnit">
			<name>XlTimeUnit</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlDays {Constant}-->
	<element type="constant">
		<source id="Excel.XlTimeUnit.xlDays">
			<context kind="enumeration">XlTimeUnit</context>
			<name>xlDays</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMonths {Constant}-->
	<element type="constant">
		<source id="Excel.XlTimeUnit.xlMonths">
			<context kind="enumeration">XlTimeUnit</context>
			<name>xlMonths</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlYears {Constant}-->
	<element type="constant">
		<source id="Excel.XlTimeUnit.xlYears">
			<context kind="enumeration">XlTimeUnit</context>
			<name>xlYears</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlToolbarProtection  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlToolbarProtection">
			<name>XlToolbarProtection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoButtonChanges {Constant}-->
	<element type="constant">
		<source id="Excel.XlToolbarProtection.xlNoButtonChanges">
			<context kind="enumeration">XlToolbarProtection</context>
			<name>xlNoButtonChanges</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoChanges {Constant}-->
	<element type="constant">
		<source id="Excel.XlToolbarProtection.xlNoChanges">
			<context kind="enumeration">XlToolbarProtection</context>
			<name>xlNoChanges</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoDockingChanges {Constant}-->
	<element type="constant">
		<source id="Excel.XlToolbarProtection.xlNoDockingChanges">
			<context kind="enumeration">XlToolbarProtection</context>
			<name>xlNoDockingChanges</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNoShapeChanges {Constant}-->
	<element type="constant">
		<source id="Excel.XlToolbarProtection.xlNoShapeChanges">
			<context kind="enumeration">XlToolbarProtection</context>
			<name>xlNoShapeChanges</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlToolbarProtectionNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlToolbarProtection.xlToolbarProtectionNone">
			<context kind="enumeration">XlToolbarProtection</context>
			<name>xlToolbarProtectionNone</name>
			<value>-4143</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlTotalsCalculation  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlTotalsCalculation">
			<name>XlTotalsCalculation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTotalsCalculationAverage {Constant}-->
	<element type="constant">
		<source id="Excel.XlTotalsCalculation.xlTotalsCalculationAverage">
			<context kind="enumeration">XlTotalsCalculation</context>
			<name>xlTotalsCalculationAverage</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTotalsCalculationCount {Constant}-->
	<element type="constant">
		<source id="Excel.XlTotalsCalculation.xlTotalsCalculationCount">
			<context kind="enumeration">XlTotalsCalculation</context>
			<name>xlTotalsCalculationCount</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTotalsCalculationCountNums {Constant}-->
	<element type="constant">
		<source id="Excel.XlTotalsCalculation.xlTotalsCalculationCountNums">
			<context kind="enumeration">XlTotalsCalculation</context>
			<name>xlTotalsCalculationCountNums</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTotalsCalculationMax {Constant}-->
	<element type="constant">
		<source id="Excel.XlTotalsCalculation.xlTotalsCalculationMax">
			<context kind="enumeration">XlTotalsCalculation</context>
			<name>xlTotalsCalculationMax</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTotalsCalculationMin {Constant}-->
	<element type="constant">
		<source id="Excel.XlTotalsCalculation.xlTotalsCalculationMin">
			<context kind="enumeration">XlTotalsCalculation</context>
			<name>xlTotalsCalculationMin</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTotalsCalculationNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlTotalsCalculation.xlTotalsCalculationNone">
			<context kind="enumeration">XlTotalsCalculation</context>
			<name>xlTotalsCalculationNone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTotalsCalculationStdDev {Constant}-->
	<element type="constant">
		<source id="Excel.XlTotalsCalculation.xlTotalsCalculationStdDev">
			<context kind="enumeration">XlTotalsCalculation</context>
			<name>xlTotalsCalculationStdDev</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTotalsCalculationSum {Constant}-->
	<element type="constant">
		<source id="Excel.XlTotalsCalculation.xlTotalsCalculationSum">
			<context kind="enumeration">XlTotalsCalculation</context>
			<name>xlTotalsCalculationSum</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlTotalsCalculationVar {Constant}-->
	<element type="constant">
		<source id="Excel.XlTotalsCalculation.xlTotalsCalculationVar">
			<context kind="enumeration">XlTotalsCalculation</context>
			<name>xlTotalsCalculationVar</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlTrendlineType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlTrendlineType">
			<name>XlTrendlineType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlExponential {Constant}-->
	<element type="constant">
		<source id="Excel.XlTrendlineType.xlExponential">
			<context kind="enumeration">XlTrendlineType</context>
			<name>xlExponential</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLinear {Constant}-->
	<element type="constant">
		<source id="Excel.XlTrendlineType.xlLinear">
			<context kind="enumeration">XlTrendlineType</context>
			<name>xlLinear</name>
			<value>-4132</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlLogarithmic {Constant}-->
	<element type="constant">
		<source id="Excel.XlTrendlineType.xlLogarithmic">
			<context kind="enumeration">XlTrendlineType</context>
			<name>xlLogarithmic</name>
			<value>-4133</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMovingAvg {Constant}-->
	<element type="constant">
		<source id="Excel.XlTrendlineType.xlMovingAvg">
			<context kind="enumeration">XlTrendlineType</context>
			<name>xlMovingAvg</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPolynomial {Constant}-->
	<element type="constant">
		<source id="Excel.XlTrendlineType.xlPolynomial">
			<context kind="enumeration">XlTrendlineType</context>
			<name>xlPolynomial</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPower {Constant}-->
	<element type="constant">
		<source id="Excel.XlTrendlineType.xlPower">
			<context kind="enumeration">XlTrendlineType</context>
			<name>xlPower</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlUnderlineStyle  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlUnderlineStyle">
			<name>XlUnderlineStyle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUnderlineStyleDouble {Constant}-->
	<element type="constant">
		<source id="Excel.XlUnderlineStyle.xlUnderlineStyleDouble">
			<context kind="enumeration">XlUnderlineStyle</context>
			<name>xlUnderlineStyleDouble</name>
			<value>-4119</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUnderlineStyleDoubleAccounting {Constant}-->
	<element type="constant">
		<source id="Excel.XlUnderlineStyle.xlUnderlineStyleDoubleAccounting">
			<context kind="enumeration">XlUnderlineStyle</context>
			<name>xlUnderlineStyleDoubleAccounting</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUnderlineStyleNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlUnderlineStyle.xlUnderlineStyleNone">
			<context kind="enumeration">XlUnderlineStyle</context>
			<name>xlUnderlineStyleNone</name>
			<value>-4142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUnderlineStyleSingle {Constant}-->
	<element type="constant">
		<source id="Excel.XlUnderlineStyle.xlUnderlineStyleSingle">
			<context kind="enumeration">XlUnderlineStyle</context>
			<name>xlUnderlineStyleSingle</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUnderlineStyleSingleAccounting {Constant}-->
	<element type="constant">
		<source id="Excel.XlUnderlineStyle.xlUnderlineStyleSingleAccounting">
			<context kind="enumeration">XlUnderlineStyle</context>
			<name>xlUnderlineStyleSingleAccounting</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlUpdateLinks  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlUpdateLinks">
			<name>XlUpdateLinks</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUpdateLinksAlways {Constant}-->
	<element type="constant">
		<source id="Excel.XlUpdateLinks.xlUpdateLinksAlways">
			<context kind="enumeration">XlUpdateLinks</context>
			<name>xlUpdateLinksAlways</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUpdateLinksNever {Constant}-->
	<element type="constant">
		<source id="Excel.XlUpdateLinks.xlUpdateLinksNever">
			<context kind="enumeration">XlUpdateLinks</context>
			<name>xlUpdateLinksNever</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlUpdateLinksUserSetting {Constant}-->
	<element type="constant">
		<source id="Excel.XlUpdateLinks.xlUpdateLinksUserSetting">
			<context kind="enumeration">XlUpdateLinks</context>
			<name>xlUpdateLinksUserSetting</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlVAlign  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlVAlign">
			<name>XlVAlign</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVAlignBottom {Constant}-->
	<element type="constant">
		<source id="Excel.XlVAlign.xlVAlignBottom">
			<context kind="enumeration">XlVAlign</context>
			<name>xlVAlignBottom</name>
			<value>-4107</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVAlignCenter {Constant}-->
	<element type="constant">
		<source id="Excel.XlVAlign.xlVAlignCenter">
			<context kind="enumeration">XlVAlign</context>
			<name>xlVAlignCenter</name>
			<value>-4108</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVAlignDistributed {Constant}-->
	<element type="constant">
		<source id="Excel.XlVAlign.xlVAlignDistributed">
			<context kind="enumeration">XlVAlign</context>
			<name>xlVAlignDistributed</name>
			<value>-4117</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVAlignJustify {Constant}-->
	<element type="constant">
		<source id="Excel.XlVAlign.xlVAlignJustify">
			<context kind="enumeration">XlVAlign</context>
			<name>xlVAlignJustify</name>
			<value>-4130</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlVAlignTop {Constant}-->
	<element type="constant">
		<source id="Excel.XlVAlign.xlVAlignTop">
			<context kind="enumeration">XlVAlign</context>
			<name>xlVAlignTop</name>
			<value>-4160</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlWBATemplate  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlWBATemplate">
			<name>XlWBATemplate</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWBATChart {Constant}-->
	<element type="constant">
		<source id="Excel.XlWBATemplate.xlWBATChart">
			<context kind="enumeration">XlWBATemplate</context>
			<name>xlWBATChart</name>
			<value>-4109</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWBATExcel4IntlMacroSheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlWBATemplate.xlWBATExcel4IntlMacroSheet">
			<context kind="enumeration">XlWBATemplate</context>
			<name>xlWBATExcel4IntlMacroSheet</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWBATExcel4MacroSheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlWBATemplate.xlWBATExcel4MacroSheet">
			<context kind="enumeration">XlWBATemplate</context>
			<name>xlWBATExcel4MacroSheet</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWBATWorksheet {Constant}-->
	<element type="constant">
		<source id="Excel.XlWBATemplate.xlWBATWorksheet">
			<context kind="enumeration">XlWBATemplate</context>
			<name>xlWBATWorksheet</name>
			<value>-4167</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlWebFormatting  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlWebFormatting">
			<name>XlWebFormatting</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWebFormattingAll {Constant}-->
	<element type="constant">
		<source id="Excel.XlWebFormatting.xlWebFormattingAll">
			<context kind="enumeration">XlWebFormatting</context>
			<name>xlWebFormattingAll</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWebFormattingNone {Constant}-->
	<element type="constant">
		<source id="Excel.XlWebFormatting.xlWebFormattingNone">
			<context kind="enumeration">XlWebFormatting</context>
			<name>xlWebFormattingNone</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWebFormattingRTF {Constant}-->
	<element type="constant">
		<source id="Excel.XlWebFormatting.xlWebFormattingRTF">
			<context kind="enumeration">XlWebFormatting</context>
			<name>xlWebFormattingRTF</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlWebSelectionType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlWebSelectionType">
			<name>XlWebSelectionType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlAllTables {Constant}-->
	<element type="constant">
		<source id="Excel.XlWebSelectionType.xlAllTables">
			<context kind="enumeration">XlWebSelectionType</context>
			<name>xlAllTables</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlEntirePage {Constant}-->
	<element type="constant">
		<source id="Excel.XlWebSelectionType.xlEntirePage">
			<context kind="enumeration">XlWebSelectionType</context>
			<name>xlEntirePage</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlSpecifiedTables {Constant}-->
	<element type="constant">
		<source id="Excel.XlWebSelectionType.xlSpecifiedTables">
			<context kind="enumeration">XlWebSelectionType</context>
			<name>xlSpecifiedTables</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlWindowState  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlWindowState">
			<name>XlWindowState</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMaximized {Constant}-->
	<element type="constant">
		<source id="Excel.XlWindowState.xlMaximized">
			<context kind="enumeration">XlWindowState</context>
			<name>xlMaximized</name>
			<value>-4137</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlMinimized {Constant}-->
	<element type="constant">
		<source id="Excel.XlWindowState.xlMinimized">
			<context kind="enumeration">XlWindowState</context>
			<name>xlMinimized</name>
			<value>-4140</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNormal {Constant}-->
	<element type="constant">
		<source id="Excel.XlWindowState.xlNormal">
			<context kind="enumeration">XlWindowState</context>
			<name>xlNormal</name>
			<value>-4143</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlWindowType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlWindowType">
			<name>XlWindowType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlChartAsWindow {Constant}-->
	<element type="constant">
		<source id="Excel.XlWindowType.xlChartAsWindow">
			<context kind="enumeration">XlWindowType</context>
			<name>xlChartAsWindow</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlChartInPlace {Constant}-->
	<element type="constant">
		<source id="Excel.XlWindowType.xlChartInPlace">
			<context kind="enumeration">XlWindowType</context>
			<name>xlChartInPlace</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlClipboard {Constant}-->
	<element type="constant">
		<source id="Excel.XlWindowType.xlClipboard">
			<context kind="enumeration">XlWindowType</context>
			<name>xlClipboard</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlInfo {Constant}-->
	<element type="constant">
		<source id="Excel.XlWindowType.xlInfo">
			<context kind="enumeration">XlWindowType</context>
			<name>xlInfo</name>
			<value>-4129</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlWorkbook {Constant}-->
	<element type="constant">
		<source id="Excel.XlWindowType.xlWorkbook">
			<context kind="enumeration">XlWindowType</context>
			<name>xlWorkbook</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlWindowView  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlWindowView">
			<name>XlWindowView</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNormalView {Constant}-->
	<element type="constant">
		<source id="Excel.XlWindowView.xlNormalView">
			<context kind="enumeration">XlWindowView</context>
			<name>xlNormalView</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlPageBreakPreview {Constant}-->
	<element type="constant">
		<source id="Excel.XlWindowView.xlPageBreakPreview">
			<context kind="enumeration">XlWindowView</context>
			<name>xlPageBreakPreview</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlXLMMacroType  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlXLMMacroType">
			<name>XlXLMMacroType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlCommand {Constant}-->
	<element type="constant">
		<source id="Excel.XlXLMMacroType.xlCommand">
			<context kind="enumeration">XlXLMMacroType</context>
			<name>xlCommand</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlFunction {Constant}-->
	<element type="constant">
		<source id="Excel.XlXLMMacroType.xlFunction">
			<context kind="enumeration">XlXLMMacroType</context>
			<name>xlFunction</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNotXLM {Constant}-->
	<element type="constant">
		<source id="Excel.XlXLMMacroType.xlNotXLM">
			<context kind="enumeration">XlXLMMacroType</context>
			<name>xlNotXLM</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlXmlExportResult  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlXmlExportResult">
			<name>XlXmlExportResult</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXmlExportSuccess {Constant}-->
	<element type="constant">
		<source id="Excel.XlXmlExportResult.xlXmlExportSuccess">
			<context kind="enumeration">XlXmlExportResult</context>
			<name>xlXmlExportSuccess</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXmlExportValidationFailed {Constant}-->
	<element type="constant">
		<source id="Excel.XlXmlExportResult.xlXmlExportValidationFailed">
			<context kind="enumeration">XlXmlExportResult</context>
			<name>xlXmlExportValidationFailed</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlXmlImportResult  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlXmlImportResult">
			<name>XlXmlImportResult</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXmlImportElementsTruncated {Constant}-->
	<element type="constant">
		<source id="Excel.XlXmlImportResult.xlXmlImportElementsTruncated">
			<context kind="enumeration">XlXmlImportResult</context>
			<name>xlXmlImportElementsTruncated</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXmlImportSuccess {Constant}-->
	<element type="constant">
		<source id="Excel.XlXmlImportResult.xlXmlImportSuccess">
			<context kind="enumeration">XlXmlImportResult</context>
			<name>xlXmlImportSuccess</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXmlImportValidationFailed {Constant}-->
	<element type="constant">
		<source id="Excel.XlXmlImportResult.xlXmlImportValidationFailed">
			<context kind="enumeration">XlXmlImportResult</context>
			<name>xlXmlImportValidationFailed</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlXmlLoadOption  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlXmlLoadOption">
			<name>XlXmlLoadOption</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXmlLoadImportToList {Constant}-->
	<element type="constant">
		<source id="Excel.XlXmlLoadOption.xlXmlLoadImportToList">
			<context kind="enumeration">XlXmlLoadOption</context>
			<name>xlXmlLoadImportToList</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXmlLoadMapXml {Constant}-->
	<element type="constant">
		<source id="Excel.XlXmlLoadOption.xlXmlLoadMapXml">
			<context kind="enumeration">XlXmlLoadOption</context>
			<name>xlXmlLoadMapXml</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXmlLoadOpenXml {Constant}-->
	<element type="constant">
		<source id="Excel.XlXmlLoadOption.xlXmlLoadOpenXml">
			<context kind="enumeration">XlXmlLoadOption</context>
			<name>xlXmlLoadOpenXml</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlXmlLoadPromptUser {Constant}-->
	<element type="constant">
		<source id="Excel.XlXmlLoadOption.xlXmlLoadPromptUser">
			<context kind="enumeration">XlXmlLoadOption</context>
			<name>xlXmlLoadPromptUser</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::XlYesNoGuess  {Enumeration}-->
	<element type="enumeration">
		<source id="Excel.XlYesNoGuess">
			<name>XlYesNoGuess</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlGuess {Constant}-->
	<element type="constant">
		<source id="Excel.XlYesNoGuess.xlGuess">
			<context kind="enumeration">XlYesNoGuess</context>
			<name>xlGuess</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlNo {Constant}-->
	<element type="constant">
		<source id="Excel.XlYesNoGuess.xlNo">
			<context kind="enumeration">XlYesNoGuess</context>
			<name>xlNo</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::xlYes {Constant}-->
	<element type="constant">
		<source id="Excel.XlYesNoGuess.xlYes">
			<context kind="enumeration">XlYesNoGuess</context>
			<name>xlYes</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--Class::XmlDataBinding-->
	<element type="class">
		<source id="Excel.XmlDataBinding">
			<name>XmlDataBinding</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::XmlDataBinding.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlDataBinding.Application">
			<context kind="class">XmlDataBinding</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::XmlDataBinding.ClearSettings-->
	<element type="method">
		<source id="Excel.XmlDataBinding.ClearSettings">
			<context kind="class">XmlDataBinding</context>
			<name>ClearSettings</name>
			<type>void</type>
		</source>
	</element>
	<!--property::XmlDataBinding.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlDataBinding.Creator">
			<context kind="class">XmlDataBinding</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::XmlDataBinding.LoadSettings-->
	<element type="method">
		<source id="Excel.XmlDataBinding.LoadSettings">
			<context kind="class">XmlDataBinding</context>
			<name>LoadSettings</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Url</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::XmlDataBinding.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlDataBinding.Parent">
			<context kind="class">XmlDataBinding</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::XmlDataBinding.Refresh-->
	<element type="method">
		<source id="Excel.XmlDataBinding.Refresh">
			<context kind="class">XmlDataBinding</context>
			<name>Refresh</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::XmlDataBinding.SourceUrl {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlDataBinding.SourceUrl">
			<context kind="class">XmlDataBinding</context>
			<name>SourceUrl</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::XmlMap-->
	<element type="class">
		<source id="Excel.XmlMap">
			<name>XmlMap</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::XmlMap.AdjustColumnWidth-->
	<element type="property">
		<source id="Excel.XmlMap.AdjustColumnWidth">
			<context kind="class">XmlMap</context>
			<name>AdjustColumnWidth</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::XmlMap.AppendOnImport-->
	<element type="property">
		<source id="Excel.XmlMap.AppendOnImport">
			<context kind="class">XmlMap</context>
			<name>AppendOnImport</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::XmlMap.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlMap.Application">
			<context kind="class">XmlMap</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::XmlMap.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlMap.Creator">
			<context kind="class">XmlMap</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::XmlMap.DataBinding {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlMap.DataBinding">
			<context kind="class">XmlMap</context>
			<name>DataBinding</name>
			<type>XmlDataBinding</type>
		</source>
	</element>
	<!--method::XmlMap.Delete-->
	<element type="method">
		<source id="Excel.XmlMap.Delete">
			<context kind="class">XmlMap</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--method::XmlMap.Export-->
	<element type="method">
		<source id="Excel.XmlMap.Export">
			<context kind="class">XmlMap</context>
			<name>Export</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Url</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Overwrite</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::XmlMap.ExportXml-->
	<element type="method">
		<source id="Excel.XmlMap.ExportXml">
			<context kind="class">XmlMap</context>
			<name>ExportXml</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String[]</type>
					<name>Data</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::XmlMap.Import-->
	<element type="method">
		<source id="Excel.XmlMap.Import">
			<context kind="class">XmlMap</context>
			<name>Import</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Url</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Overwrite</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::XmlMap.ImportXml-->
	<element type="method">
		<source id="Excel.XmlMap.ImportXml">
			<context kind="class">XmlMap</context>
			<name>ImportXml</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>XmlData</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Overwrite</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::XmlMap.IsExportable {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlMap.IsExportable">
			<context kind="class">XmlMap</context>
			<name>IsExportable</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::XmlMap.Name {Default}-->
	<element type="property">
		<source id="Excel.XmlMap.Name">
			<context kind="class">XmlMap</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::XmlMap.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlMap.Parent">
			<context kind="class">XmlMap</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::XmlMap.PreserveColumnFilter-->
	<element type="property">
		<source id="Excel.XmlMap.PreserveColumnFilter">
			<context kind="class">XmlMap</context>
			<name>PreserveColumnFilter</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::XmlMap.PreserveNumberFormatting-->
	<element type="property">
		<source id="Excel.XmlMap.PreserveNumberFormatting">
			<context kind="class">XmlMap</context>
			<name>PreserveNumberFormatting</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::XmlMap.RootElementName {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlMap.RootElementName">
			<context kind="class">XmlMap</context>
			<name>RootElementName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::XmlMap.RootElementNamespace {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlMap.RootElementNamespace">
			<context kind="class">XmlMap</context>
			<name>RootElementNamespace</name>
			<type>XmlNamespace</type>
		</source>
	</element>
	<!--property::XmlMap.SaveDataSourceDefinition-->
	<element type="property">
		<source id="Excel.XmlMap.SaveDataSourceDefinition">
			<context kind="class">XmlMap</context>
			<name>SaveDataSourceDefinition</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::XmlMap.Schemas {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlMap.Schemas">
			<context kind="class">XmlMap</context>
			<name>Schemas</name>
			<type>XmlSchemas</type>
		</source>
	</element>
	<!--property::XmlMap.ShowImportExportValidationErrors-->
	<element type="property">
		<source id="Excel.XmlMap.ShowImportExportValidationErrors">
			<context kind="class">XmlMap</context>
			<name>ShowImportExportValidationErrors</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::XmlMaps-->
	<element type="class">
		<source id="Excel.XmlMaps">
			<name>XmlMaps</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::XmlMaps.Add-->
	<element type="method">
		<source id="Excel.XmlMaps.Add">
			<context kind="class">XmlMaps</context>
			<name>Add</name>
			<type>XmlMap</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Schema</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>RootElementName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::XmlMaps.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlMaps.Application">
			<context kind="class">XmlMaps</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::XmlMaps.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlMaps.Count">
			<context kind="class">XmlMaps</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::XmlMaps.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlMaps.Creator">
			<context kind="class">XmlMaps</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::XmlMaps.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlMaps.Item">
			<context kind="class">XmlMaps</context>
			<name default="true">Item</name>
			<type>XmlMap</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::XmlMaps.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlMaps.Parent">
			<context kind="class">XmlMaps</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::XmlNamespace-->
	<element type="class">
		<source id="Excel.XmlNamespace">
			<name>XmlNamespace</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::XmlNamespace.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlNamespace.Application">
			<context kind="class">XmlNamespace</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::XmlNamespace.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlNamespace.Creator">
			<context kind="class">XmlNamespace</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::XmlNamespace.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlNamespace.Parent">
			<context kind="class">XmlNamespace</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::XmlNamespace.Prefix {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlNamespace.Prefix">
			<context kind="class">XmlNamespace</context>
			<name>Prefix</name>
			<type>String</type>
		</source>
	</element>
	<!--property::XmlNamespace.Uri {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlNamespace.Uri">
			<context kind="class">XmlNamespace</context>
			<name>Uri</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::XmlNamespaces-->
	<element type="class">
		<source id="Excel.XmlNamespaces">
			<name>XmlNamespaces</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::XmlNamespaces.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlNamespaces.Application">
			<context kind="class">XmlNamespaces</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::XmlNamespaces.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlNamespaces.Count">
			<context kind="class">XmlNamespaces</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::XmlNamespaces.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlNamespaces.Creator">
			<context kind="class">XmlNamespaces</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::XmlNamespaces.InstallManifest-->
	<element type="method">
		<source id="Excel.XmlNamespaces.InstallManifest">
			<context kind="class">XmlNamespaces</context>
			<name>InstallManifest</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Path</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>InstallForAllUsers</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::XmlNamespaces.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlNamespaces.Item">
			<context kind="class">XmlNamespaces</context>
			<name default="true">Item</name>
			<type>XmlNamespace</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::XmlNamespaces.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlNamespaces.Parent">
			<context kind="class">XmlNamespaces</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::XmlNamespaces.Value {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlNamespaces.Value">
			<context kind="class">XmlNamespaces</context>
			<name>Value</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::XmlSchema-->
	<element type="class">
		<source id="Excel.XmlSchema">
			<name>XmlSchema</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::XmlSchema.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlSchema.Application">
			<context kind="class">XmlSchema</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::XmlSchema.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlSchema.Creator">
			<context kind="class">XmlSchema</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::XmlSchema.Name {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlSchema.Name">
			<context kind="class">XmlSchema</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::XmlSchema.Namespace {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlSchema.Namespace">
			<context kind="class">XmlSchema</context>
			<name>Namespace</name>
			<type>XmlNamespace</type>
		</source>
	</element>
	<!--property::XmlSchema.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlSchema.Parent">
			<context kind="class">XmlSchema</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::XmlSchema.XML {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlSchema.XML">
			<context kind="class">XmlSchema</context>
			<name>XML</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::XmlSchemas-->
	<element type="class">
		<source id="Excel.XmlSchemas">
			<name>XmlSchemas</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::XmlSchemas.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlSchemas.Application">
			<context kind="class">XmlSchemas</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::XmlSchemas.Count {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlSchemas.Count">
			<context kind="class">XmlSchemas</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::XmlSchemas.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlSchemas.Creator">
			<context kind="class">XmlSchemas</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::XmlSchemas.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlSchemas.Item">
			<context kind="class">XmlSchemas</context>
			<name default="true">Item</name>
			<type>XmlSchema</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::XmlSchemas.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.XmlSchemas.Parent">
			<context kind="class">XmlSchemas</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::XPath-->
	<element type="class">
		<source id="Excel.XPath">
			<name>XPath</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::XPath.Application {ReadOnly}-->
	<element type="property">
		<source id="Excel.XPath.Application">
			<context kind="class">XPath</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::XPath.Clear-->
	<element type="method">
		<source id="Excel.XPath.Clear">
			<context kind="class">XPath</context>
			<name>Clear</name>
			<type>void</type>
		</source>
	</element>
	<!--property::XPath.Creator {ReadOnly}-->
	<element type="property">
		<source id="Excel.XPath.Creator">
			<context kind="class">XPath</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::XPath.Map {ReadOnly}-->
	<element type="property">
		<source id="Excel.XPath.Map">
			<context kind="class">XPath</context>
			<name>Map</name>
			<type>XmlMap</type>
		</source>
	</element>
	<!--property::XPath.Parent {ReadOnly}-->
	<element type="property">
		<source id="Excel.XPath.Parent">
			<context kind="class">XPath</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::XPath.Repeating {ReadOnly}-->
	<element type="property">
		<source id="Excel.XPath.Repeating">
			<context kind="class">XPath</context>
			<name>Repeating</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::XPath.SetValue-->
	<element type="method">
		<source id="Excel.XPath.SetValue">
			<context kind="class">XPath</context>
			<name>SetValue</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>XmlMap</type>
					<name>Map</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>XPath</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SelectionNamespace</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Repeating</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::XPath.Value {Default} {ReadOnly}-->
	<element type="property">
		<source id="Excel.XPath.Value">
			<context kind="class">XPath</context>
			<name default="true">Value</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::AnswerWizard-->
	<element type="class">
		<source id="Office.AnswerWizard">
			<name>AnswerWizard</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::AnswerWizard.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.AnswerWizard.Application">
			<context kind="class">AnswerWizard</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::AnswerWizard.ClearFileList-->
	<element type="method">
		<source id="Office.AnswerWizard.ClearFileList">
			<context kind="class">AnswerWizard</context>
			<name>ClearFileList</name>
			<type>void</type>
		</source>
	</element>
	<!--property::AnswerWizard.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.AnswerWizard.Creator">
			<context kind="class">AnswerWizard</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::AnswerWizard.Files {ReadOnly}-->
	<element type="property">
		<source id="Office.AnswerWizard.Files">
			<context kind="class">AnswerWizard</context>
			<name>Files</name>
			<type>AnswerWizardFiles</type>
		</source>
	</element>
	<!--property::AnswerWizard.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.AnswerWizard.Parent">
			<context kind="class">AnswerWizard</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::AnswerWizard.ResetFileList-->
	<element type="method">
		<source id="Office.AnswerWizard.ResetFileList">
			<context kind="class">AnswerWizard</context>
			<name>ResetFileList</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::AnswerWizardFiles-->
	<element type="class">
		<source id="Office.AnswerWizardFiles">
			<name>AnswerWizardFiles</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::AnswerWizardFiles.Add-->
	<element type="method">
		<source id="Office.AnswerWizardFiles.Add">
			<context kind="class">AnswerWizardFiles</context>
			<name>Add</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>FileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::AnswerWizardFiles.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.AnswerWizardFiles.Application">
			<context kind="class">AnswerWizardFiles</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::AnswerWizardFiles.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.AnswerWizardFiles.Count">
			<context kind="class">AnswerWizardFiles</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::AnswerWizardFiles.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.AnswerWizardFiles.Creator">
			<context kind="class">AnswerWizardFiles</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::AnswerWizardFiles.Delete-->
	<element type="method">
		<source id="Office.AnswerWizardFiles.Delete">
			<context kind="class">AnswerWizardFiles</context>
			<name>Delete</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>FileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::AnswerWizardFiles.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.AnswerWizardFiles.Item">
			<context kind="class">AnswerWizardFiles</context>
			<name default="true">Item</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::AnswerWizardFiles.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.AnswerWizardFiles.Parent">
			<context kind="class">AnswerWizardFiles</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Assistant-->
	<element type="class">
		<source id="Office.Assistant">
			<name>Assistant</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Assistant.ActivateWizard-->
	<element type="method">
		<source id="Office.Assistant.ActivateWizard">
			<context kind="class">Assistant</context>
			<name>ActivateWizard</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>WizardID</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>act</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Animation</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Assistant.Animation-->
	<element type="property">
		<source id="Office.Assistant.Animation">
			<context kind="class">Assistant</context>
			<name>Animation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Assistant.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.Assistant.Application">
			<context kind="class">Assistant</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Assistant.AssistWithAlerts-->
	<element type="property">
		<source id="Office.Assistant.AssistWithAlerts">
			<context kind="class">Assistant</context>
			<name>AssistWithAlerts</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Assistant.AssistWithHelp-->
	<element type="property">
		<source id="Office.Assistant.AssistWithHelp">
			<context kind="class">Assistant</context>
			<name>AssistWithHelp</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Assistant.AssistWithWizards-->
	<element type="property">
		<source id="Office.Assistant.AssistWithWizards">
			<context kind="class">Assistant</context>
			<name>AssistWithWizards</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Assistant.BalloonError {ReadOnly}-->
	<element type="property">
		<source id="Office.Assistant.BalloonError">
			<context kind="class">Assistant</context>
			<name>BalloonError</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Assistant.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.Assistant.Creator">
			<context kind="class">Assistant</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Assistant.DoAlert-->
	<element type="method">
		<source id="Office.Assistant.DoAlert">
			<context kind="class">Assistant</context>
			<name>DoAlert</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrAlertTitle</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>bstrAlertText</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>alb</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>alc</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>ald</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>alq</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>varfSysAlert</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Assistant.EndWizard-->
	<element type="method">
		<source id="Office.Assistant.EndWizard">
			<context kind="class">Assistant</context>
			<name>EndWizard</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>WizardID</name>
				</parameter>
				<parameter>
					<type>boolean</type>
					<name>varfSuccess</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Animation</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Assistant.FeatureTips-->
	<element type="property">
		<source id="Office.Assistant.FeatureTips">
			<context kind="class">Assistant</context>
			<name>FeatureTips</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Assistant.FileName-->
	<element type="property">
		<source id="Office.Assistant.FileName">
			<context kind="class">Assistant</context>
			<name>FileName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Assistant.GuessHelp-->
	<element type="property">
		<source id="Office.Assistant.GuessHelp">
			<context kind="class">Assistant</context>
			<name>GuessHelp</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Assistant.Help-->
	<element type="method">
		<source id="Office.Assistant.Help">
			<context kind="class">Assistant</context>
			<name>Help</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Assistant.HighPriorityTips-->
	<element type="property">
		<source id="Office.Assistant.HighPriorityTips">
			<context kind="class">Assistant</context>
			<name>HighPriorityTips</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Assistant.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.Assistant.Item">
			<context kind="class">Assistant</context>
			<name default="true">Item</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Assistant.KeyboardShortcutTips-->
	<element type="property">
		<source id="Office.Assistant.KeyboardShortcutTips">
			<context kind="class">Assistant</context>
			<name>KeyboardShortcutTips</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Assistant.Left-->
	<element type="property">
		<source id="Office.Assistant.Left">
			<context kind="class">Assistant</context>
			<name>Left</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Assistant.MouseTips-->
	<element type="property">
		<source id="Office.Assistant.MouseTips">
			<context kind="class">Assistant</context>
			<name>MouseTips</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Assistant.Move-->
	<element type="method">
		<source id="Office.Assistant.Move">
			<context kind="class">Assistant</context>
			<name>Move</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>xLeft</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>yTop</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Assistant.MoveWhenInTheWay-->
	<element type="property">
		<source id="Office.Assistant.MoveWhenInTheWay">
			<context kind="class">Assistant</context>
			<name>MoveWhenInTheWay</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Assistant.Name {ReadOnly}-->
	<element type="property">
		<source id="Office.Assistant.Name">
			<context kind="class">Assistant</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Assistant.NewBalloon {ReadOnly}-->
	<element type="property">
		<source id="Office.Assistant.NewBalloon">
			<context kind="class">Assistant</context>
			<name>NewBalloon</name>
			<type>Balloon</type>
		</source>
	</element>
	<!--property::Assistant.On-->
	<element type="property">
		<source id="Office.Assistant.On">
			<context kind="class">Assistant</context>
			<name>On</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Assistant.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.Assistant.Parent">
			<context kind="class">Assistant</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Assistant.Reduced-->
	<element type="property">
		<source id="Office.Assistant.Reduced">
			<context kind="class">Assistant</context>
			<name>Reduced</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Assistant.ResetTips-->
	<element type="method">
		<source id="Office.Assistant.ResetTips">
			<context kind="class">Assistant</context>
			<name>ResetTips</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Assistant.SearchWhenProgramming-->
	<element type="property">
		<source id="Office.Assistant.SearchWhenProgramming">
			<context kind="class">Assistant</context>
			<name>SearchWhenProgramming</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Assistant.Sounds-->
	<element type="property">
		<source id="Office.Assistant.Sounds">
			<context kind="class">Assistant</context>
			<name>Sounds</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::Assistant.StartWizard-->
	<element type="method">
		<source id="Office.Assistant.StartWizard">
			<context kind="class">Assistant</context>
			<name>StartWizard</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>boolean</type>
					<name>On</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Callback</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>PrivateX</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Animation</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>CustomTeaser</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Top</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Left</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Bottom</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Right</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Assistant.TipOfDay-->
	<element type="property">
		<source id="Office.Assistant.TipOfDay">
			<context kind="class">Assistant</context>
			<name>TipOfDay</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Assistant.Top-->
	<element type="property">
		<source id="Office.Assistant.Top">
			<context kind="class">Assistant</context>
			<name>Top</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Assistant.Visible-->
	<element type="property">
		<source id="Office.Assistant.Visible">
			<context kind="class">Assistant</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::Balloon-->
	<element type="class">
		<source id="Office.Balloon">
			<name>Balloon</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Balloon.Animation-->
	<element type="property">
		<source id="Office.Balloon.Animation">
			<context kind="class">Balloon</context>
			<name>Animation</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Balloon.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.Balloon.Application">
			<context kind="class">Balloon</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Balloon.BalloonType-->
	<element type="property">
		<source id="Office.Balloon.BalloonType">
			<context kind="class">Balloon</context>
			<name>BalloonType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Balloon.Button-->
	<element type="property">
		<source id="Office.Balloon.Button">
			<context kind="class">Balloon</context>
			<name>Button</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Balloon.Callback-->
	<element type="property">
		<source id="Office.Balloon.Callback">
			<context kind="class">Balloon</context>
			<name>Callback</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Balloon.Checkboxes {ReadOnly}-->
	<element type="property">
		<source id="Office.Balloon.Checkboxes">
			<context kind="class">Balloon</context>
			<name>Checkboxes</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Balloon.Close-->
	<element type="method">
		<source id="Office.Balloon.Close">
			<context kind="class">Balloon</context>
			<name>Close</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Balloon.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.Balloon.Creator">
			<context kind="class">Balloon</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Balloon.Heading-->
	<element type="property">
		<source id="Office.Balloon.Heading">
			<context kind="class">Balloon</context>
			<name>Heading</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Balloon.Icon-->
	<element type="property">
		<source id="Office.Balloon.Icon">
			<context kind="class">Balloon</context>
			<name>Icon</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Balloon.Labels {ReadOnly}-->
	<element type="property">
		<source id="Office.Balloon.Labels">
			<context kind="class">Balloon</context>
			<name>Labels</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Balloon.Mode-->
	<element type="property">
		<source id="Office.Balloon.Mode">
			<context kind="class">Balloon</context>
			<name>Mode</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Balloon.Name {ReadOnly}-->
	<element type="property">
		<source id="Office.Balloon.Name">
			<context kind="class">Balloon</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Balloon.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.Balloon.Parent">
			<context kind="class">Balloon</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Balloon.Private-->
	<element type="property">
		<source id="Office.Balloon.Private">
			<context kind="class">Balloon</context>
			<name>Private</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Balloon.SetAvoidRectangle-->
	<element type="method">
		<source id="Office.Balloon.SetAvoidRectangle">
			<context kind="class">Balloon</context>
			<name>SetAvoidRectangle</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Right</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Bottom</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::Balloon.Show-->
	<element type="method">
		<source id="Office.Balloon.Show">
			<context kind="class">Balloon</context>
			<name>Show</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Balloon.Text-->
	<element type="property">
		<source id="Office.Balloon.Text">
			<context kind="class">Balloon</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::BalloonCheckbox-->
	<element type="class">
		<source id="Office.BalloonCheckbox">
			<name>BalloonCheckbox</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::BalloonCheckbox.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonCheckbox.Application">
			<context kind="class">BalloonCheckbox</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::BalloonCheckbox.Checked-->
	<element type="property">
		<source id="Office.BalloonCheckbox.Checked">
			<context kind="class">BalloonCheckbox</context>
			<name>Checked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::BalloonCheckbox.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonCheckbox.Creator">
			<context kind="class">BalloonCheckbox</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::BalloonCheckbox.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonCheckbox.Item">
			<context kind="class">BalloonCheckbox</context>
			<name default="true">Item</name>
			<type>String</type>
		</source>
	</element>
	<!--property::BalloonCheckbox.Name {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonCheckbox.Name">
			<context kind="class">BalloonCheckbox</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::BalloonCheckbox.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonCheckbox.Parent">
			<context kind="class">BalloonCheckbox</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::BalloonCheckbox.Text-->
	<element type="property">
		<source id="Office.BalloonCheckbox.Text">
			<context kind="class">BalloonCheckbox</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::BalloonCheckboxes-->
	<element type="class">
		<source id="Office.BalloonCheckboxes">
			<name>BalloonCheckboxes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::BalloonCheckboxes.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonCheckboxes.Application">
			<context kind="class">BalloonCheckboxes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::BalloonCheckboxes.Count-->
	<element type="property">
		<source id="Office.BalloonCheckboxes.Count">
			<context kind="class">BalloonCheckboxes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::BalloonCheckboxes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonCheckboxes.Creator">
			<context kind="class">BalloonCheckboxes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::BalloonCheckboxes.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonCheckboxes.Item">
			<context kind="class">BalloonCheckboxes</context>
			<name default="true">Item</name>
			<type>BalloonCheckboxe</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::BalloonCheckboxes.Name {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonCheckboxes.Name">
			<context kind="class">BalloonCheckboxes</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::BalloonCheckboxes.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonCheckboxes.Parent">
			<context kind="class">BalloonCheckboxes</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::BalloonLabel-->
	<element type="class">
		<source id="Office.BalloonLabel">
			<name>BalloonLabel</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::BalloonLabel.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonLabel.Application">
			<context kind="class">BalloonLabel</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::BalloonLabel.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonLabel.Creator">
			<context kind="class">BalloonLabel</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::BalloonLabel.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonLabel.Item">
			<context kind="class">BalloonLabel</context>
			<name default="true">Item</name>
			<type>String</type>
		</source>
	</element>
	<!--property::BalloonLabel.Name {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonLabel.Name">
			<context kind="class">BalloonLabel</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::BalloonLabel.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonLabel.Parent">
			<context kind="class">BalloonLabel</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::BalloonLabel.Text-->
	<element type="property">
		<source id="Office.BalloonLabel.Text">
			<context kind="class">BalloonLabel</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::BalloonLabels-->
	<element type="class">
		<source id="Office.BalloonLabels">
			<name>BalloonLabels</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::BalloonLabels.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonLabels.Application">
			<context kind="class">BalloonLabels</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::BalloonLabels.Count-->
	<element type="property">
		<source id="Office.BalloonLabels.Count">
			<context kind="class">BalloonLabels</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::BalloonLabels.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonLabels.Creator">
			<context kind="class">BalloonLabels</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::BalloonLabels.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonLabels.Item">
			<context kind="class">BalloonLabels</context>
			<name default="true">Item</name>
			<type>BalloonLabel</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::BalloonLabels.Name {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonLabels.Name">
			<context kind="class">BalloonLabels</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::BalloonLabels.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.BalloonLabels.Parent">
			<context kind="class">BalloonLabels</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::CanvasShapes-->
	<element type="class">
		<source id="Office.CanvasShapes">
			<name>CanvasShapes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::CanvasShapes.AddCallout-->
	<element type="method">
		<source id="Office.CanvasShapes.AddCallout">
			<context kind="class">CanvasShapes</context>
			<name>AddCallout</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CanvasShapes.AddConnector-->
	<element type="method">
		<source id="Office.CanvasShapes.AddConnector">
			<context kind="class">CanvasShapes</context>
			<name>AddConnector</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>BeginX</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>BeginY</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>EndX</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>EndY</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CanvasShapes.AddCurve-->
	<element type="method">
		<source id="Office.CanvasShapes.AddCurve">
			<context kind="class">CanvasShapes</context>
			<name>AddCurve</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>SafeArrayOfPoints</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CanvasShapes.AddLabel-->
	<element type="method">
		<source id="Office.CanvasShapes.AddLabel">
			<context kind="class">CanvasShapes</context>
			<name>AddLabel</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Orientation</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CanvasShapes.AddLine-->
	<element type="method">
		<source id="Office.CanvasShapes.AddLine">
			<context kind="class">CanvasShapes</context>
			<name>AddLine</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Single</type>
					<name>BeginX</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>BeginY</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>EndX</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>EndY</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CanvasShapes.AddPicture-->
	<element type="method">
		<source id="Office.CanvasShapes.AddPicture">
			<context kind="class">CanvasShapes</context>
			<name>AddPicture</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>FileName</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>LinkToFile</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>SaveWithDocument</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
				<parameter optional="true">
					<type>Single</type>
					<name>Width</name>
				</parameter>
				<parameter optional="true">
					<type>Single</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CanvasShapes.AddPolyline-->
	<element type="method">
		<source id="Office.CanvasShapes.AddPolyline">
			<context kind="class">CanvasShapes</context>
			<name>AddPolyline</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>SafeArrayOfPoints</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CanvasShapes.AddShape-->
	<element type="method">
		<source id="Office.CanvasShapes.AddShape">
			<context kind="class">CanvasShapes</context>
			<name>AddShape</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CanvasShapes.AddTextbox-->
	<element type="method">
		<source id="Office.CanvasShapes.AddTextbox">
			<context kind="class">CanvasShapes</context>
			<name>AddTextbox</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Orientation</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Width</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Height</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CanvasShapes.AddTextEffect-->
	<element type="method">
		<source id="Office.CanvasShapes.AddTextEffect">
			<context kind="class">CanvasShapes</context>
			<name>AddTextEffect</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>PresetTextEffect</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Text</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>FontName</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>FontSize</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>FontBold</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>FontItalic</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Left</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Top</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CanvasShapes.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.CanvasShapes.Application">
			<context kind="class">CanvasShapes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CanvasShapes.Background {ReadOnly}-->
	<element type="property">
		<source id="Office.CanvasShapes.Background">
			<context kind="class">CanvasShapes</context>
			<name>Background</name>
			<type>Shape</type>
		</source>
	</element>
	<!--method::CanvasShapes.BuildFreeform-->
	<element type="method">
		<source id="Office.CanvasShapes.BuildFreeform">
			<context kind="class">CanvasShapes</context>
			<name>BuildFreeform</name>
			<type>FreeformBuilder</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>EditingType</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>X1</name>
				</parameter>
				<parameter>
					<type>Single</type>
					<name>Y1</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CanvasShapes.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.CanvasShapes.Count">
			<context kind="class">CanvasShapes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CanvasShapes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.CanvasShapes.Creator">
			<context kind="class">CanvasShapes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CanvasShapes.Item {Default}-->
	<element type="method">
		<source id="Office.CanvasShapes.Item">
			<context kind="class">CanvasShapes</context>
			<name default="true">Item</name>
			<type>Shape</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CanvasShapes.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.CanvasShapes.Parent">
			<context kind="class">CanvasShapes</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::CanvasShapes.Range-->
	<element type="method">
		<source id="Office.CanvasShapes.Range">
			<context kind="class">CanvasShapes</context>
			<name>Range</name>
			<type>ShapeRange</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CanvasShapes.SelectAll-->
	<element type="method">
		<source id="Office.CanvasShapes.SelectAll">
			<context kind="class">CanvasShapes</context>
			<name>SelectAll</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::COMAddIn-->
	<element type="class">
		<source id="Office.COMAddIn">
			<name>COMAddIn</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::COMAddIn.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.COMAddIn.Application">
			<context kind="class">COMAddIn</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::COMAddIn.Connect-->
	<element type="property">
		<source id="Office.COMAddIn.Connect">
			<context kind="class">COMAddIn</context>
			<name>Connect</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::COMAddIn.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.COMAddIn.Creator">
			<context kind="class">COMAddIn</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::COMAddIn.Description {Default}-->
	<element type="property">
		<source id="Office.COMAddIn.Description">
			<context kind="class">COMAddIn</context>
			<name default="true">Description</name>
			<type>String</type>
		</source>
	</element>
	<!--property::COMAddIn.Guid {ReadOnly}-->
	<element type="property">
		<source id="Office.COMAddIn.Guid">
			<context kind="class">COMAddIn</context>
			<name>Guid</name>
			<type>String</type>
		</source>
	</element>
	<!--property::COMAddIn.Object-->
	<element type="property">
		<source id="Office.COMAddIn.Object">
			<context kind="class">COMAddIn</context>
			<name>Object</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::COMAddIn.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.COMAddIn.Parent">
			<context kind="class">COMAddIn</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::COMAddIn.ProgId {ReadOnly}-->
	<element type="property">
		<source id="Office.COMAddIn.ProgId">
			<context kind="class">COMAddIn</context>
			<name>ProgId</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::COMAddIns-->
	<element type="class">
		<source id="Office.COMAddIns">
			<name>COMAddIns</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::COMAddIns.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.COMAddIns.Application">
			<context kind="class">COMAddIns</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::COMAddIns.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.COMAddIns.Count">
			<context kind="class">COMAddIns</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::COMAddIns.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.COMAddIns.Creator">
			<context kind="class">COMAddIns</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::COMAddIns.Item {Default}-->
	<element type="method">
		<source id="Office.COMAddIns.Item">
			<context kind="class">COMAddIns</context>
			<name default="true">Item</name>
			<type>COMAddIn</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::COMAddIns.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.COMAddIns.Parent">
			<context kind="class">COMAddIns</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::COMAddIns.SetAppModal-->
	<element type="method">
		<source id="Office.COMAddIns.SetAppModal">
			<context kind="class">COMAddIns</context>
			<name>SetAppModal</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>boolean</type>
					<name>varfModal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::COMAddIns.Update-->
	<element type="method">
		<source id="Office.COMAddIns.Update">
			<context kind="class">COMAddIns</context>
			<name>Update</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::CommandBar-->
	<element type="class">
		<source id="Office.CommandBar">
			<name>CommandBar</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::CommandBar.accChild {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.accChild">
			<context kind="class">CommandBar</context>
			<name>accChild</name>
			<type>Object</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBar.accChildCount {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.accChildCount">
			<context kind="class">CommandBar</context>
			<name>accChildCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBar.accDefaultAction {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.accDefaultAction">
			<context kind="class">CommandBar</context>
			<name>accDefaultAction</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBar.accDescription {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.accDescription">
			<context kind="class">CommandBar</context>
			<name>accDescription</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBar.accDoDefaultAction-->
	<element type="method">
		<source id="Office.CommandBar.accDoDefaultAction">
			<context kind="class">CommandBar</context>
			<name>accDoDefaultAction</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBar.accFocus {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.accFocus">
			<context kind="class">CommandBar</context>
			<name>accFocus</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CommandBar.accHelp {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.accHelp">
			<context kind="class">CommandBar</context>
			<name>accHelp</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBar.accHelpTopic {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.accHelpTopic">
			<context kind="class">CommandBar</context>
			<name>accHelpTopic</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String[]</type>
					<name>pszHelpFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBar.accHitTest-->
	<element type="method">
		<source id="Office.CommandBar.accHitTest">
			<context kind="class">CommandBar</context>
			<name>accHitTest</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>xLeft</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>yTop</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBar.accKeyboardShortcut {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.accKeyboardShortcut">
			<context kind="class">CommandBar</context>
			<name>accKeyboardShortcut</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBar.accLocation-->
	<element type="method">
		<source id="Office.CommandBar.accLocation">
			<context kind="class">CommandBar</context>
			<name>accLocation</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>int[]</type>
					<name>pxLeft</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pyTop</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pcxWidth</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pcyHeight</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBar.accName-->
	<element type="property">
		<source id="Office.CommandBar.accName">
			<context kind="class">CommandBar</context>
			<name>accName</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBar.accNavigate-->
	<element type="method">
		<source id="Office.CommandBar.accNavigate">
			<context kind="class">CommandBar</context>
			<name>accNavigate</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>navDir</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varStart</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBar.accParent {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.accParent">
			<context kind="class">CommandBar</context>
			<name>accParent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CommandBar.accRole {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.accRole">
			<context kind="class">CommandBar</context>
			<name>accRole</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBar.accSelect-->
	<element type="method">
		<source id="Office.CommandBar.accSelect">
			<context kind="class">CommandBar</context>
			<name>accSelect</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>flagsSelect</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBar.accSelection {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.accSelection">
			<context kind="class">CommandBar</context>
			<name>accSelection</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CommandBar.accState {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.accState">
			<context kind="class">CommandBar</context>
			<name>accState</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBar.accValue-->
	<element type="property">
		<source id="Office.CommandBar.accValue">
			<context kind="class">CommandBar</context>
			<name>accValue</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBar.AdaptiveMenu-->
	<element type="property">
		<source id="Office.CommandBar.AdaptiveMenu">
			<context kind="class">CommandBar</context>
			<name>AdaptiveMenu</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBar.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.Application">
			<context kind="class">CommandBar</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CommandBar.BuiltIn {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.BuiltIn">
			<context kind="class">CommandBar</context>
			<name>BuiltIn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBar.Context-->
	<element type="property">
		<source id="Office.CommandBar.Context">
			<context kind="class">CommandBar</context>
			<name>Context</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBar.Controls {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.Controls">
			<context kind="class">CommandBar</context>
			<name>Controls</name>
			<type>CommandBarControls</type>
		</source>
	</element>
	<!--property::CommandBar.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.Creator">
			<context kind="class">CommandBar</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBar.Delete-->
	<element type="method">
		<source id="Office.CommandBar.Delete">
			<context kind="class">CommandBar</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBar.Enabled-->
	<element type="property">
		<source id="Office.CommandBar.Enabled">
			<context kind="class">CommandBar</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::CommandBar.FindControl-->
	<element type="method">
		<source id="Office.CommandBar.FindControl">
			<context kind="class">CommandBar</context>
			<name>FindControl</name>
			<type>CommandBarControl</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Id</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Tag</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Visible</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Recursive</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBar.Height-->
	<element type="property">
		<source id="Office.CommandBar.Height">
			<context kind="class">CommandBar</context>
			<name>Height</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBar.Id {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.Id">
			<context kind="class">CommandBar</context>
			<name>Id</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBar.Index {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.Index">
			<context kind="class">CommandBar</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBar.InstanceId {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.InstanceId">
			<context kind="class">CommandBar</context>
			<name>InstanceId</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBar.Left-->
	<element type="property">
		<source id="Office.CommandBar.Left">
			<context kind="class">CommandBar</context>
			<name>Left</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBar.Name-->
	<element type="property">
		<source id="Office.CommandBar.Name">
			<context kind="class">CommandBar</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBar.NameLocal-->
	<element type="property">
		<source id="Office.CommandBar.NameLocal">
			<context kind="class">CommandBar</context>
			<name>NameLocal</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBar.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.Parent">
			<context kind="class">CommandBar</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CommandBar.Position-->
	<element type="property">
		<source id="Office.CommandBar.Position">
			<context kind="class">CommandBar</context>
			<name>Position</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBar.Protection-->
	<element type="property">
		<source id="Office.CommandBar.Protection">
			<context kind="class">CommandBar</context>
			<name>Protection</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBar.Reset-->
	<element type="method">
		<source id="Office.CommandBar.Reset">
			<context kind="class">CommandBar</context>
			<name>Reset</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBar.RowIndex-->
	<element type="property">
		<source id="Office.CommandBar.RowIndex">
			<context kind="class">CommandBar</context>
			<name>RowIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBar.ShowPopup-->
	<element type="method">
		<source id="Office.CommandBar.ShowPopup">
			<context kind="class">CommandBar</context>
			<name>ShowPopup</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>x</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>y</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBar.Top-->
	<element type="property">
		<source id="Office.CommandBar.Top">
			<context kind="class">CommandBar</context>
			<name>Top</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBar.Type {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBar.Type">
			<context kind="class">CommandBar</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBar.Visible-->
	<element type="property">
		<source id="Office.CommandBar.Visible">
			<context kind="class">CommandBar</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBar.Width-->
	<element type="property">
		<source id="Office.CommandBar.Width">
			<context kind="class">CommandBar</context>
			<name>Width</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::CommandBarButton-->
	<element type="class">
		<source id="Office.CommandBarButton">
			<name>CommandBarButton</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::CommandBarButton.accChild {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.accChild">
			<context kind="class">CommandBarButton</context>
			<name>accChild</name>
			<type>Object</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarButton.accChildCount {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.accChildCount">
			<context kind="class">CommandBarButton</context>
			<name>accChildCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.accDefaultAction {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.accDefaultAction">
			<context kind="class">CommandBarButton</context>
			<name>accDefaultAction</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarButton.accDescription {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.accDescription">
			<context kind="class">CommandBarButton</context>
			<name>accDescription</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarButton.accDoDefaultAction-->
	<element type="method">
		<source id="Office.CommandBarButton.accDoDefaultAction">
			<context kind="class">CommandBarButton</context>
			<name>accDoDefaultAction</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarButton.accFocus {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.accFocus">
			<context kind="class">CommandBarButton</context>
			<name>accFocus</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CommandBarButton.accHelp {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.accHelp">
			<context kind="class">CommandBarButton</context>
			<name>accHelp</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarButton.accHelpTopic {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.accHelpTopic">
			<context kind="class">CommandBarButton</context>
			<name>accHelpTopic</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String[]</type>
					<name>pszHelpFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarButton.accHitTest-->
	<element type="method">
		<source id="Office.CommandBarButton.accHitTest">
			<context kind="class">CommandBarButton</context>
			<name>accHitTest</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>xLeft</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>yTop</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarButton.accKeyboardShortcut {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.accKeyboardShortcut">
			<context kind="class">CommandBarButton</context>
			<name>accKeyboardShortcut</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarButton.accLocation-->
	<element type="method">
		<source id="Office.CommandBarButton.accLocation">
			<context kind="class">CommandBarButton</context>
			<name>accLocation</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>int[]</type>
					<name>pxLeft</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pyTop</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pcxWidth</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pcyHeight</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarButton.accName-->
	<element type="property">
		<source id="Office.CommandBarButton.accName">
			<context kind="class">CommandBarButton</context>
			<name>accName</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarButton.accNavigate-->
	<element type="method">
		<source id="Office.CommandBarButton.accNavigate">
			<context kind="class">CommandBarButton</context>
			<name>accNavigate</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>navDir</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varStart</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarButton.accParent {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.accParent">
			<context kind="class">CommandBarButton</context>
			<name>accParent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CommandBarButton.accRole {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.accRole">
			<context kind="class">CommandBarButton</context>
			<name>accRole</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarButton.accSelect-->
	<element type="method">
		<source id="Office.CommandBarButton.accSelect">
			<context kind="class">CommandBarButton</context>
			<name>accSelect</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>flagsSelect</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarButton.accSelection {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.accSelection">
			<context kind="class">CommandBarButton</context>
			<name>accSelection</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CommandBarButton.accState {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.accState">
			<context kind="class">CommandBarButton</context>
			<name>accState</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarButton.accValue-->
	<element type="property">
		<source id="Office.CommandBarButton.accValue">
			<context kind="class">CommandBarButton</context>
			<name>accValue</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarButton.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.Application">
			<context kind="class">CommandBarButton</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CommandBarButton.BeginGroup-->
	<element type="property">
		<source id="Office.CommandBarButton.BeginGroup">
			<context kind="class">CommandBarButton</context>
			<name>BeginGroup</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarButton.BuiltIn {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.BuiltIn">
			<context kind="class">CommandBarButton</context>
			<name>BuiltIn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarButton.BuiltInFace-->
	<element type="property">
		<source id="Office.CommandBarButton.BuiltInFace">
			<context kind="class">CommandBarButton</context>
			<name>BuiltInFace</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarButton.Caption-->
	<element type="property">
		<source id="Office.CommandBarButton.Caption">
			<context kind="class">CommandBarButton</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--method::CommandBarButton.Click-->
	<element type="method">
		<source id="Office.CommandBarButton.Click">
			<context kind="class">CommandBarButton</context>
			<name>Click</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>CommandBarButton</type>
					<name>Ctrl</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>CancelDefault</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarButton.Control {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.Control">
			<context kind="class">CommandBarButton</context>
			<name>Control</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::CommandBarButton.Copy-->
	<element type="method">
		<source id="Office.CommandBarButton.Copy">
			<context kind="class">CommandBarButton</context>
			<name>Copy</name>
			<type>CommandBarControl</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Bar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarButton.CopyFace-->
	<element type="method">
		<source id="Office.CommandBarButton.CopyFace">
			<context kind="class">CommandBarButton</context>
			<name>CopyFace</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBarButton.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.Creator">
			<context kind="class">CommandBarButton</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBarButton.Delete-->
	<element type="method">
		<source id="Office.CommandBarButton.Delete">
			<context kind="class">CommandBarButton</context>
			<name>Delete</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Temporary</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarButton.DescriptionText-->
	<element type="property">
		<source id="Office.CommandBarButton.DescriptionText">
			<context kind="class">CommandBarButton</context>
			<name>DescriptionText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarButton.Enabled-->
	<element type="property">
		<source id="Office.CommandBarButton.Enabled">
			<context kind="class">CommandBarButton</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::CommandBarButton.Execute-->
	<element type="method">
		<source id="Office.CommandBarButton.Execute">
			<context kind="class">CommandBarButton</context>
			<name>Execute</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBarButton.FaceId-->
	<element type="property">
		<source id="Office.CommandBarButton.FaceId">
			<context kind="class">CommandBarButton</context>
			<name>FaceId</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.Height-->
	<element type="property">
		<source id="Office.CommandBarButton.Height">
			<context kind="class">CommandBarButton</context>
			<name>Height</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.HelpContextId-->
	<element type="property">
		<source id="Office.CommandBarButton.HelpContextId">
			<context kind="class">CommandBarButton</context>
			<name>HelpContextId</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.HelpFile-->
	<element type="property">
		<source id="Office.CommandBarButton.HelpFile">
			<context kind="class">CommandBarButton</context>
			<name>HelpFile</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarButton.HyperlinkType-->
	<element type="property">
		<source id="Office.CommandBarButton.HyperlinkType">
			<context kind="class">CommandBarButton</context>
			<name>HyperlinkType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.Id {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.Id">
			<context kind="class">CommandBarButton</context>
			<name>Id</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.Index {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.Index">
			<context kind="class">CommandBarButton</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.InstanceId {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.InstanceId">
			<context kind="class">CommandBarButton</context>
			<name>InstanceId</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.IsPriorityDropped {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.IsPriorityDropped">
			<context kind="class">CommandBarButton</context>
			<name>IsPriorityDropped</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarButton.Left {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.Left">
			<context kind="class">CommandBarButton</context>
			<name>Left</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.Mask-->
	<element type="property">
		<source id="Office.CommandBarButton.Mask">
			<context kind="class">CommandBarButton</context>
			<name>Mask</name>
			<type>IPictureDisp</type>
		</source>
	</element>
	<!--method::CommandBarButton.Move-->
	<element type="method">
		<source id="Office.CommandBarButton.Move">
			<context kind="class">CommandBarButton</context>
			<name>Move</name>
			<type>CommandBarControl</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Bar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarButton.OLEUsage-->
	<element type="property">
		<source id="Office.CommandBarButton.OLEUsage">
			<context kind="class">CommandBarButton</context>
			<name>OLEUsage</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.OnAction-->
	<element type="property">
		<source id="Office.CommandBarButton.OnAction">
			<context kind="class">CommandBarButton</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarButton.Parameter-->
	<element type="property">
		<source id="Office.CommandBarButton.Parameter">
			<context kind="class">CommandBarButton</context>
			<name>Parameter</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarButton.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.Parent">
			<context kind="class">CommandBarButton</context>
			<name>Parent</name>
			<type>CommandBar</type>
		</source>
	</element>
	<!--method::CommandBarButton.PasteFace-->
	<element type="method">
		<source id="Office.CommandBarButton.PasteFace">
			<context kind="class">CommandBarButton</context>
			<name>PasteFace</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBarButton.Picture-->
	<element type="property">
		<source id="Office.CommandBarButton.Picture">
			<context kind="class">CommandBarButton</context>
			<name>Picture</name>
			<type>IPictureDisp</type>
		</source>
	</element>
	<!--property::CommandBarButton.Priority-->
	<element type="property">
		<source id="Office.CommandBarButton.Priority">
			<context kind="class">CommandBarButton</context>
			<name>Priority</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBarButton.Reserved1-->
	<element type="method">
		<source id="Office.CommandBarButton.Reserved1">
			<context kind="class">CommandBarButton</context>
			<name>Reserved1</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarButton.Reserved2-->
	<element type="method">
		<source id="Office.CommandBarButton.Reserved2">
			<context kind="class">CommandBarButton</context>
			<name>Reserved2</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarButton.Reserved3-->
	<element type="method">
		<source id="Office.CommandBarButton.Reserved3">
			<context kind="class">CommandBarButton</context>
			<name>Reserved3</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarButton.Reserved4-->
	<element type="method">
		<source id="Office.CommandBarButton.Reserved4">
			<context kind="class">CommandBarButton</context>
			<name>Reserved4</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarButton.Reserved5-->
	<element type="method">
		<source id="Office.CommandBarButton.Reserved5">
			<context kind="class">CommandBarButton</context>
			<name>Reserved5</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarButton.Reserved6-->
	<element type="method">
		<source id="Office.CommandBarButton.Reserved6">
			<context kind="class">CommandBarButton</context>
			<name>Reserved6</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarButton.Reserved7-->
	<element type="method">
		<source id="Office.CommandBarButton.Reserved7">
			<context kind="class">CommandBarButton</context>
			<name>Reserved7</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarButton.Reset-->
	<element type="method">
		<source id="Office.CommandBarButton.Reset">
			<context kind="class">CommandBarButton</context>
			<name>Reset</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarButton.SetFocus-->
	<element type="method">
		<source id="Office.CommandBarButton.SetFocus">
			<context kind="class">CommandBarButton</context>
			<name>SetFocus</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBarButton.ShortcutText-->
	<element type="property">
		<source id="Office.CommandBarButton.ShortcutText">
			<context kind="class">CommandBarButton</context>
			<name>ShortcutText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarButton.State-->
	<element type="property">
		<source id="Office.CommandBarButton.State">
			<context kind="class">CommandBarButton</context>
			<name>State</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.Style-->
	<element type="property">
		<source id="Office.CommandBarButton.Style">
			<context kind="class">CommandBarButton</context>
			<name>Style</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.Tag-->
	<element type="property">
		<source id="Office.CommandBarButton.Tag">
			<context kind="class">CommandBarButton</context>
			<name>Tag</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarButton.TooltipText-->
	<element type="property">
		<source id="Office.CommandBarButton.TooltipText">
			<context kind="class">CommandBarButton</context>
			<name>TooltipText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarButton.Top {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.Top">
			<context kind="class">CommandBarButton</context>
			<name>Top</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.Type {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarButton.Type">
			<context kind="class">CommandBarButton</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarButton.Visible-->
	<element type="property">
		<source id="Office.CommandBarButton.Visible">
			<context kind="class">CommandBarButton</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarButton.Width-->
	<element type="property">
		<source id="Office.CommandBarButton.Width">
			<context kind="class">CommandBarButton</context>
			<name>Width</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::CommandBarComboBox-->
	<element type="class">
		<source id="Office.CommandBarComboBox">
			<name>CommandBarComboBox</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::CommandBarComboBox.accChild {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accChild">
			<context kind="class">CommandBarComboBox</context>
			<name>accChild</name>
			<type>Object</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.accChildCount {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accChildCount">
			<context kind="class">CommandBarComboBox</context>
			<name>accChildCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.accDefaultAction {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accDefaultAction">
			<context kind="class">CommandBarComboBox</context>
			<name>accDefaultAction</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.accDescription {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accDescription">
			<context kind="class">CommandBarComboBox</context>
			<name>accDescription</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarComboBox.accDoDefaultAction-->
	<element type="method">
		<source id="Office.CommandBarComboBox.accDoDefaultAction">
			<context kind="class">CommandBarComboBox</context>
			<name>accDoDefaultAction</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.accFocus {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accFocus">
			<context kind="class">CommandBarComboBox</context>
			<name>accFocus</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.accHelp {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accHelp">
			<context kind="class">CommandBarComboBox</context>
			<name>accHelp</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.accHelpTopic {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accHelpTopic">
			<context kind="class">CommandBarComboBox</context>
			<name>accHelpTopic</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String[]</type>
					<name>pszHelpFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarComboBox.accHitTest-->
	<element type="method">
		<source id="Office.CommandBarComboBox.accHitTest">
			<context kind="class">CommandBarComboBox</context>
			<name>accHitTest</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>xLeft</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>yTop</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.accKeyboardShortcut {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accKeyboardShortcut">
			<context kind="class">CommandBarComboBox</context>
			<name>accKeyboardShortcut</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarComboBox.accLocation-->
	<element type="method">
		<source id="Office.CommandBarComboBox.accLocation">
			<context kind="class">CommandBarComboBox</context>
			<name>accLocation</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>int[]</type>
					<name>pxLeft</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pyTop</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pcxWidth</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pcyHeight</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.accName-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accName">
			<context kind="class">CommandBarComboBox</context>
			<name>accName</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarComboBox.accNavigate-->
	<element type="method">
		<source id="Office.CommandBarComboBox.accNavigate">
			<context kind="class">CommandBarComboBox</context>
			<name>accNavigate</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>navDir</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varStart</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.accParent {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accParent">
			<context kind="class">CommandBarComboBox</context>
			<name>accParent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.accRole {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accRole">
			<context kind="class">CommandBarComboBox</context>
			<name>accRole</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarComboBox.accSelect-->
	<element type="method">
		<source id="Office.CommandBarComboBox.accSelect">
			<context kind="class">CommandBarComboBox</context>
			<name>accSelect</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>flagsSelect</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.accSelection {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accSelection">
			<context kind="class">CommandBarComboBox</context>
			<name>accSelection</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.accState {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accState">
			<context kind="class">CommandBarComboBox</context>
			<name>accState</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.accValue-->
	<element type="property">
		<source id="Office.CommandBarComboBox.accValue">
			<context kind="class">CommandBarComboBox</context>
			<name>accValue</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarComboBox.AddItem-->
	<element type="method">
		<source id="Office.CommandBarComboBox.AddItem">
			<context kind="class">CommandBarComboBox</context>
			<name>AddItem</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Text</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Application">
			<context kind="class">CommandBarComboBox</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.BeginGroup-->
	<element type="property">
		<source id="Office.CommandBarComboBox.BeginGroup">
			<context kind="class">CommandBarComboBox</context>
			<name>BeginGroup</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.BuiltIn {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.BuiltIn">
			<context kind="class">CommandBarComboBox</context>
			<name>BuiltIn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Caption-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Caption">
			<context kind="class">CommandBarComboBox</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.Change-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Change">
			<context kind="class">CommandBarComboBox</context>
			<name>Change</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>CommandBarComboBox</type>
					<name>Ctrl</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarComboBox.Clear-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Clear">
			<context kind="class">CommandBarComboBox</context>
			<name>Clear</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Control {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Control">
			<context kind="class">CommandBarComboBox</context>
			<name>Control</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.Copy-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Copy">
			<context kind="class">CommandBarComboBox</context>
			<name>Copy</name>
			<type>CommandBarControl</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Bar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Creator">
			<context kind="class">CommandBarComboBox</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.Delete-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Delete">
			<context kind="class">CommandBarComboBox</context>
			<name>Delete</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Temporary</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.DescriptionText-->
	<element type="property">
		<source id="Office.CommandBarComboBox.DescriptionText">
			<context kind="class">CommandBarComboBox</context>
			<name>DescriptionText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.DropDownLines-->
	<element type="property">
		<source id="Office.CommandBarComboBox.DropDownLines">
			<context kind="class">CommandBarComboBox</context>
			<name>DropDownLines</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.DropDownWidth-->
	<element type="property">
		<source id="Office.CommandBarComboBox.DropDownWidth">
			<context kind="class">CommandBarComboBox</context>
			<name>DropDownWidth</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Enabled-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Enabled">
			<context kind="class">CommandBarComboBox</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.Execute-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Execute">
			<context kind="class">CommandBarComboBox</context>
			<name>Execute</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Height-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Height">
			<context kind="class">CommandBarComboBox</context>
			<name>Height</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.HelpContextId-->
	<element type="property">
		<source id="Office.CommandBarComboBox.HelpContextId">
			<context kind="class">CommandBarComboBox</context>
			<name>HelpContextId</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.HelpFile-->
	<element type="property">
		<source id="Office.CommandBarComboBox.HelpFile">
			<context kind="class">CommandBarComboBox</context>
			<name>HelpFile</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Id {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Id">
			<context kind="class">CommandBarComboBox</context>
			<name>Id</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Index {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Index">
			<context kind="class">CommandBarComboBox</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.InstanceId {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.InstanceId">
			<context kind="class">CommandBarComboBox</context>
			<name>InstanceId</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.IsPriorityDropped {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.IsPriorityDropped">
			<context kind="class">CommandBarComboBox</context>
			<name>IsPriorityDropped</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Left {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Left">
			<context kind="class">CommandBarComboBox</context>
			<name>Left</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.List-->
	<element type="property">
		<source id="Office.CommandBarComboBox.List">
			<context kind="class">CommandBarComboBox</context>
			<name>List</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.ListCount {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.ListCount">
			<context kind="class">CommandBarComboBox</context>
			<name>ListCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.ListHeaderCount-->
	<element type="property">
		<source id="Office.CommandBarComboBox.ListHeaderCount">
			<context kind="class">CommandBarComboBox</context>
			<name>ListHeaderCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.ListIndex-->
	<element type="property">
		<source id="Office.CommandBarComboBox.ListIndex">
			<context kind="class">CommandBarComboBox</context>
			<name>ListIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.Move-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Move">
			<context kind="class">CommandBarComboBox</context>
			<name>Move</name>
			<type>CommandBarControl</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Bar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarComboBox.OLEUsage-->
	<element type="property">
		<source id="Office.CommandBarComboBox.OLEUsage">
			<context kind="class">CommandBarComboBox</context>
			<name>OLEUsage</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.OnAction-->
	<element type="property">
		<source id="Office.CommandBarComboBox.OnAction">
			<context kind="class">CommandBarComboBox</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Parameter-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Parameter">
			<context kind="class">CommandBarComboBox</context>
			<name>Parameter</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Parent">
			<context kind="class">CommandBarComboBox</context>
			<name>Parent</name>
			<type>CommandBar</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Priority-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Priority">
			<context kind="class">CommandBarComboBox</context>
			<name>Priority</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.RemoveItem-->
	<element type="method">
		<source id="Office.CommandBarComboBox.RemoveItem">
			<context kind="class">CommandBarComboBox</context>
			<name>RemoveItem</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarComboBox.Reserved1-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Reserved1">
			<context kind="class">CommandBarComboBox</context>
			<name>Reserved1</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.Reserved2-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Reserved2">
			<context kind="class">CommandBarComboBox</context>
			<name>Reserved2</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.Reserved3-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Reserved3">
			<context kind="class">CommandBarComboBox</context>
			<name>Reserved3</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.Reserved4-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Reserved4">
			<context kind="class">CommandBarComboBox</context>
			<name>Reserved4</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.Reserved5-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Reserved5">
			<context kind="class">CommandBarComboBox</context>
			<name>Reserved5</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.Reserved6-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Reserved6">
			<context kind="class">CommandBarComboBox</context>
			<name>Reserved6</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.Reserved7-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Reserved7">
			<context kind="class">CommandBarComboBox</context>
			<name>Reserved7</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.Reset-->
	<element type="method">
		<source id="Office.CommandBarComboBox.Reset">
			<context kind="class">CommandBarComboBox</context>
			<name>Reset</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarComboBox.SetFocus-->
	<element type="method">
		<source id="Office.CommandBarComboBox.SetFocus">
			<context kind="class">CommandBarComboBox</context>
			<name>SetFocus</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Style-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Style">
			<context kind="class">CommandBarComboBox</context>
			<name>Style</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Tag-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Tag">
			<context kind="class">CommandBarComboBox</context>
			<name>Tag</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Text-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Text">
			<context kind="class">CommandBarComboBox</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.TooltipText-->
	<element type="property">
		<source id="Office.CommandBarComboBox.TooltipText">
			<context kind="class">CommandBarComboBox</context>
			<name>TooltipText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Top {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Top">
			<context kind="class">CommandBarComboBox</context>
			<name>Top</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Type {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Type">
			<context kind="class">CommandBarComboBox</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Visible-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Visible">
			<context kind="class">CommandBarComboBox</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarComboBox.Width-->
	<element type="property">
		<source id="Office.CommandBarComboBox.Width">
			<context kind="class">CommandBarComboBox</context>
			<name>Width</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::CommandBarControl-->
	<element type="class">
		<source id="Office.CommandBarControl">
			<name>CommandBarControl</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::CommandBarControl.accChild {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.accChild">
			<context kind="class">CommandBarControl</context>
			<name>accChild</name>
			<type>Object</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControl.accChildCount {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.accChildCount">
			<context kind="class">CommandBarControl</context>
			<name>accChildCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarControl.accDefaultAction {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.accDefaultAction">
			<context kind="class">CommandBarControl</context>
			<name>accDefaultAction</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControl.accDescription {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.accDescription">
			<context kind="class">CommandBarControl</context>
			<name>accDescription</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarControl.accDoDefaultAction-->
	<element type="method">
		<source id="Office.CommandBarControl.accDoDefaultAction">
			<context kind="class">CommandBarControl</context>
			<name>accDoDefaultAction</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControl.accFocus {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.accFocus">
			<context kind="class">CommandBarControl</context>
			<name>accFocus</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CommandBarControl.accHelp {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.accHelp">
			<context kind="class">CommandBarControl</context>
			<name>accHelp</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControl.accHelpTopic {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.accHelpTopic">
			<context kind="class">CommandBarControl</context>
			<name>accHelpTopic</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String[]</type>
					<name>pszHelpFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarControl.accHitTest-->
	<element type="method">
		<source id="Office.CommandBarControl.accHitTest">
			<context kind="class">CommandBarControl</context>
			<name>accHitTest</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>xLeft</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>yTop</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControl.accKeyboardShortcut {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.accKeyboardShortcut">
			<context kind="class">CommandBarControl</context>
			<name>accKeyboardShortcut</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarControl.accLocation-->
	<element type="method">
		<source id="Office.CommandBarControl.accLocation">
			<context kind="class">CommandBarControl</context>
			<name>accLocation</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>int[]</type>
					<name>pxLeft</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pyTop</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pcxWidth</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pcyHeight</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControl.accName-->
	<element type="property">
		<source id="Office.CommandBarControl.accName">
			<context kind="class">CommandBarControl</context>
			<name>accName</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarControl.accNavigate-->
	<element type="method">
		<source id="Office.CommandBarControl.accNavigate">
			<context kind="class">CommandBarControl</context>
			<name>accNavigate</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>navDir</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varStart</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControl.accParent {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.accParent">
			<context kind="class">CommandBarControl</context>
			<name>accParent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CommandBarControl.accRole {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.accRole">
			<context kind="class">CommandBarControl</context>
			<name>accRole</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarControl.accSelect-->
	<element type="method">
		<source id="Office.CommandBarControl.accSelect">
			<context kind="class">CommandBarControl</context>
			<name>accSelect</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>flagsSelect</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControl.accSelection {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.accSelection">
			<context kind="class">CommandBarControl</context>
			<name>accSelection</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CommandBarControl.accState {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.accState">
			<context kind="class">CommandBarControl</context>
			<name>accState</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControl.accValue-->
	<element type="property">
		<source id="Office.CommandBarControl.accValue">
			<context kind="class">CommandBarControl</context>
			<name>accValue</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControl.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.Application">
			<context kind="class">CommandBarControl</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CommandBarControl.BeginGroup-->
	<element type="property">
		<source id="Office.CommandBarControl.BeginGroup">
			<context kind="class">CommandBarControl</context>
			<name>BeginGroup</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarControl.BuiltIn {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.BuiltIn">
			<context kind="class">CommandBarControl</context>
			<name>BuiltIn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarControl.Caption-->
	<element type="property">
		<source id="Office.CommandBarControl.Caption">
			<context kind="class">CommandBarControl</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarControl.Control {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.Control">
			<context kind="class">CommandBarControl</context>
			<name>Control</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::CommandBarControl.Copy-->
	<element type="method">
		<source id="Office.CommandBarControl.Copy">
			<context kind="class">CommandBarControl</context>
			<name>Copy</name>
			<type>CommandBarControl</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Bar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControl.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.Creator">
			<context kind="class">CommandBarControl</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBarControl.Delete-->
	<element type="method">
		<source id="Office.CommandBarControl.Delete">
			<context kind="class">CommandBarControl</context>
			<name>Delete</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Temporary</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControl.DescriptionText-->
	<element type="property">
		<source id="Office.CommandBarControl.DescriptionText">
			<context kind="class">CommandBarControl</context>
			<name>DescriptionText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarControl.Enabled-->
	<element type="property">
		<source id="Office.CommandBarControl.Enabled">
			<context kind="class">CommandBarControl</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::CommandBarControl.Execute-->
	<element type="method">
		<source id="Office.CommandBarControl.Execute">
			<context kind="class">CommandBarControl</context>
			<name>Execute</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBarControl.Height-->
	<element type="property">
		<source id="Office.CommandBarControl.Height">
			<context kind="class">CommandBarControl</context>
			<name>Height</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarControl.HelpContextId-->
	<element type="property">
		<source id="Office.CommandBarControl.HelpContextId">
			<context kind="class">CommandBarControl</context>
			<name>HelpContextId</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarControl.HelpFile-->
	<element type="property">
		<source id="Office.CommandBarControl.HelpFile">
			<context kind="class">CommandBarControl</context>
			<name>HelpFile</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarControl.Id {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.Id">
			<context kind="class">CommandBarControl</context>
			<name>Id</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarControl.Index {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.Index">
			<context kind="class">CommandBarControl</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarControl.InstanceId {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.InstanceId">
			<context kind="class">CommandBarControl</context>
			<name>InstanceId</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarControl.IsPriorityDropped {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.IsPriorityDropped">
			<context kind="class">CommandBarControl</context>
			<name>IsPriorityDropped</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarControl.Left {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.Left">
			<context kind="class">CommandBarControl</context>
			<name>Left</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBarControl.Move-->
	<element type="method">
		<source id="Office.CommandBarControl.Move">
			<context kind="class">CommandBarControl</context>
			<name>Move</name>
			<type>CommandBarControl</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Bar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControl.OLEUsage-->
	<element type="property">
		<source id="Office.CommandBarControl.OLEUsage">
			<context kind="class">CommandBarControl</context>
			<name>OLEUsage</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarControl.OnAction-->
	<element type="property">
		<source id="Office.CommandBarControl.OnAction">
			<context kind="class">CommandBarControl</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarControl.Parameter-->
	<element type="property">
		<source id="Office.CommandBarControl.Parameter">
			<context kind="class">CommandBarControl</context>
			<name>Parameter</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarControl.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.Parent">
			<context kind="class">CommandBarControl</context>
			<name>Parent</name>
			<type>CommandBar</type>
		</source>
	</element>
	<!--property::CommandBarControl.Priority-->
	<element type="property">
		<source id="Office.CommandBarControl.Priority">
			<context kind="class">CommandBarControl</context>
			<name>Priority</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBarControl.Reserved1-->
	<element type="method">
		<source id="Office.CommandBarControl.Reserved1">
			<context kind="class">CommandBarControl</context>
			<name>Reserved1</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarControl.Reserved2-->
	<element type="method">
		<source id="Office.CommandBarControl.Reserved2">
			<context kind="class">CommandBarControl</context>
			<name>Reserved2</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarControl.Reserved3-->
	<element type="method">
		<source id="Office.CommandBarControl.Reserved3">
			<context kind="class">CommandBarControl</context>
			<name>Reserved3</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarControl.Reserved4-->
	<element type="method">
		<source id="Office.CommandBarControl.Reserved4">
			<context kind="class">CommandBarControl</context>
			<name>Reserved4</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarControl.Reserved5-->
	<element type="method">
		<source id="Office.CommandBarControl.Reserved5">
			<context kind="class">CommandBarControl</context>
			<name>Reserved5</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarControl.Reserved6-->
	<element type="method">
		<source id="Office.CommandBarControl.Reserved6">
			<context kind="class">CommandBarControl</context>
			<name>Reserved6</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarControl.Reserved7-->
	<element type="method">
		<source id="Office.CommandBarControl.Reserved7">
			<context kind="class">CommandBarControl</context>
			<name>Reserved7</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarControl.Reset-->
	<element type="method">
		<source id="Office.CommandBarControl.Reset">
			<context kind="class">CommandBarControl</context>
			<name>Reset</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarControl.SetFocus-->
	<element type="method">
		<source id="Office.CommandBarControl.SetFocus">
			<context kind="class">CommandBarControl</context>
			<name>SetFocus</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBarControl.Tag-->
	<element type="property">
		<source id="Office.CommandBarControl.Tag">
			<context kind="class">CommandBarControl</context>
			<name>Tag</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarControl.TooltipText-->
	<element type="property">
		<source id="Office.CommandBarControl.TooltipText">
			<context kind="class">CommandBarControl</context>
			<name>TooltipText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarControl.Top {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.Top">
			<context kind="class">CommandBarControl</context>
			<name>Top</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarControl.Type {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControl.Type">
			<context kind="class">CommandBarControl</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarControl.Visible-->
	<element type="property">
		<source id="Office.CommandBarControl.Visible">
			<context kind="class">CommandBarControl</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarControl.Width-->
	<element type="property">
		<source id="Office.CommandBarControl.Width">
			<context kind="class">CommandBarControl</context>
			<name>Width</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::CommandBarControls-->
	<element type="class">
		<source id="Office.CommandBarControls">
			<name>CommandBarControls</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::CommandBarControls.Add-->
	<element type="method">
		<source id="Office.CommandBarControls.Add">
			<context kind="class">CommandBarControls</context>
			<name>Add</name>
			<type>CommandBarControl</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Id</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Parameter</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Temporary</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControls.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControls.Application">
			<context kind="class">CommandBarControls</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CommandBarControls.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControls.Count">
			<context kind="class">CommandBarControls</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarControls.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControls.Creator">
			<context kind="class">CommandBarControls</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarControls.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControls.Item">
			<context kind="class">CommandBarControls</context>
			<name default="true">Item</name>
			<type>CommandBarControl</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarControls.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarControls.Parent">
			<context kind="class">CommandBarControls</context>
			<name>Parent</name>
			<type>CommandBar</type>
		</source>
	</element>
	<!--Class::CommandBarPopup-->
	<element type="class">
		<source id="Office.CommandBarPopup">
			<name>CommandBarPopup</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::CommandBarPopup.accChild {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.accChild">
			<context kind="class">CommandBarPopup</context>
			<name>accChild</name>
			<type>Object</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarPopup.accChildCount {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.accChildCount">
			<context kind="class">CommandBarPopup</context>
			<name>accChildCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarPopup.accDefaultAction {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.accDefaultAction">
			<context kind="class">CommandBarPopup</context>
			<name>accDefaultAction</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarPopup.accDescription {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.accDescription">
			<context kind="class">CommandBarPopup</context>
			<name>accDescription</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarPopup.accDoDefaultAction-->
	<element type="method">
		<source id="Office.CommandBarPopup.accDoDefaultAction">
			<context kind="class">CommandBarPopup</context>
			<name>accDoDefaultAction</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarPopup.accFocus {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.accFocus">
			<context kind="class">CommandBarPopup</context>
			<name>accFocus</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CommandBarPopup.accHelp {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.accHelp">
			<context kind="class">CommandBarPopup</context>
			<name>accHelp</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarPopup.accHelpTopic {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.accHelpTopic">
			<context kind="class">CommandBarPopup</context>
			<name>accHelpTopic</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String[]</type>
					<name>pszHelpFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarPopup.accHitTest-->
	<element type="method">
		<source id="Office.CommandBarPopup.accHitTest">
			<context kind="class">CommandBarPopup</context>
			<name>accHitTest</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>xLeft</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>yTop</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarPopup.accKeyboardShortcut {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.accKeyboardShortcut">
			<context kind="class">CommandBarPopup</context>
			<name>accKeyboardShortcut</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarPopup.accLocation-->
	<element type="method">
		<source id="Office.CommandBarPopup.accLocation">
			<context kind="class">CommandBarPopup</context>
			<name>accLocation</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>int[]</type>
					<name>pxLeft</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pyTop</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pcxWidth</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pcyHeight</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarPopup.accName-->
	<element type="property">
		<source id="Office.CommandBarPopup.accName">
			<context kind="class">CommandBarPopup</context>
			<name>accName</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarPopup.accNavigate-->
	<element type="method">
		<source id="Office.CommandBarPopup.accNavigate">
			<context kind="class">CommandBarPopup</context>
			<name>accNavigate</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>navDir</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varStart</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarPopup.accParent {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.accParent">
			<context kind="class">CommandBarPopup</context>
			<name>accParent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CommandBarPopup.accRole {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.accRole">
			<context kind="class">CommandBarPopup</context>
			<name>accRole</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBarPopup.accSelect-->
	<element type="method">
		<source id="Office.CommandBarPopup.accSelect">
			<context kind="class">CommandBarPopup</context>
			<name>accSelect</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>flagsSelect</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarPopup.accSelection {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.accSelection">
			<context kind="class">CommandBarPopup</context>
			<name>accSelection</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::CommandBarPopup.accState {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.accState">
			<context kind="class">CommandBarPopup</context>
			<name>accState</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarPopup.accValue-->
	<element type="property">
		<source id="Office.CommandBarPopup.accValue">
			<context kind="class">CommandBarPopup</context>
			<name>accValue</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarPopup.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.Application">
			<context kind="class">CommandBarPopup</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CommandBarPopup.BeginGroup-->
	<element type="property">
		<source id="Office.CommandBarPopup.BeginGroup">
			<context kind="class">CommandBarPopup</context>
			<name>BeginGroup</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarPopup.BuiltIn {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.BuiltIn">
			<context kind="class">CommandBarPopup</context>
			<name>BuiltIn</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Caption-->
	<element type="property">
		<source id="Office.CommandBarPopup.Caption">
			<context kind="class">CommandBarPopup</context>
			<name>Caption</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarPopup.CommandBar {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.CommandBar">
			<context kind="class">CommandBarPopup</context>
			<name>CommandBar</name>
			<type>CommandBar</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Control {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.Control">
			<context kind="class">CommandBarPopup</context>
			<name>Control</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Controls {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.Controls">
			<context kind="class">CommandBarPopup</context>
			<name>Controls</name>
			<type>CommandBarControls</type>
		</source>
	</element>
	<!--method::CommandBarPopup.Copy-->
	<element type="method">
		<source id="Office.CommandBarPopup.Copy">
			<context kind="class">CommandBarPopup</context>
			<name>Copy</name>
			<type>CommandBarControl</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Bar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarPopup.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.Creator">
			<context kind="class">CommandBarPopup</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBarPopup.Delete-->
	<element type="method">
		<source id="Office.CommandBarPopup.Delete">
			<context kind="class">CommandBarPopup</context>
			<name>Delete</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Temporary</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarPopup.DescriptionText-->
	<element type="property">
		<source id="Office.CommandBarPopup.DescriptionText">
			<context kind="class">CommandBarPopup</context>
			<name>DescriptionText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Enabled-->
	<element type="property">
		<source id="Office.CommandBarPopup.Enabled">
			<context kind="class">CommandBarPopup</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::CommandBarPopup.Execute-->
	<element type="method">
		<source id="Office.CommandBarPopup.Execute">
			<context kind="class">CommandBarPopup</context>
			<name>Execute</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Height-->
	<element type="property">
		<source id="Office.CommandBarPopup.Height">
			<context kind="class">CommandBarPopup</context>
			<name>Height</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarPopup.HelpContextId-->
	<element type="property">
		<source id="Office.CommandBarPopup.HelpContextId">
			<context kind="class">CommandBarPopup</context>
			<name>HelpContextId</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarPopup.HelpFile-->
	<element type="property">
		<source id="Office.CommandBarPopup.HelpFile">
			<context kind="class">CommandBarPopup</context>
			<name>HelpFile</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Id {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.Id">
			<context kind="class">CommandBarPopup</context>
			<name>Id</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Index {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.Index">
			<context kind="class">CommandBarPopup</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarPopup.InstanceId {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.InstanceId">
			<context kind="class">CommandBarPopup</context>
			<name>InstanceId</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarPopup.IsPriorityDropped {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.IsPriorityDropped">
			<context kind="class">CommandBarPopup</context>
			<name>IsPriorityDropped</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Left {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.Left">
			<context kind="class">CommandBarPopup</context>
			<name>Left</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBarPopup.Move-->
	<element type="method">
		<source id="Office.CommandBarPopup.Move">
			<context kind="class">CommandBarPopup</context>
			<name>Move</name>
			<type>CommandBarControl</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Bar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Before</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBarPopup.OLEMenuGroup-->
	<element type="property">
		<source id="Office.CommandBarPopup.OLEMenuGroup">
			<context kind="class">CommandBarPopup</context>
			<name>OLEMenuGroup</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarPopup.OLEUsage-->
	<element type="property">
		<source id="Office.CommandBarPopup.OLEUsage">
			<context kind="class">CommandBarPopup</context>
			<name>OLEUsage</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarPopup.OnAction-->
	<element type="property">
		<source id="Office.CommandBarPopup.OnAction">
			<context kind="class">CommandBarPopup</context>
			<name>OnAction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Parameter-->
	<element type="property">
		<source id="Office.CommandBarPopup.Parameter">
			<context kind="class">CommandBarPopup</context>
			<name>Parameter</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.Parent">
			<context kind="class">CommandBarPopup</context>
			<name>Parent</name>
			<type>CommandBar</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Priority-->
	<element type="property">
		<source id="Office.CommandBarPopup.Priority">
			<context kind="class">CommandBarPopup</context>
			<name>Priority</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBarPopup.Reserved1-->
	<element type="method">
		<source id="Office.CommandBarPopup.Reserved1">
			<context kind="class">CommandBarPopup</context>
			<name>Reserved1</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarPopup.Reserved2-->
	<element type="method">
		<source id="Office.CommandBarPopup.Reserved2">
			<context kind="class">CommandBarPopup</context>
			<name>Reserved2</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarPopup.Reserved3-->
	<element type="method">
		<source id="Office.CommandBarPopup.Reserved3">
			<context kind="class">CommandBarPopup</context>
			<name>Reserved3</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarPopup.Reserved4-->
	<element type="method">
		<source id="Office.CommandBarPopup.Reserved4">
			<context kind="class">CommandBarPopup</context>
			<name>Reserved4</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarPopup.Reserved5-->
	<element type="method">
		<source id="Office.CommandBarPopup.Reserved5">
			<context kind="class">CommandBarPopup</context>
			<name>Reserved5</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarPopup.Reserved6-->
	<element type="method">
		<source id="Office.CommandBarPopup.Reserved6">
			<context kind="class">CommandBarPopup</context>
			<name>Reserved6</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarPopup.Reserved7-->
	<element type="method">
		<source id="Office.CommandBarPopup.Reserved7">
			<context kind="class">CommandBarPopup</context>
			<name>Reserved7</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarPopup.Reset-->
	<element type="method">
		<source id="Office.CommandBarPopup.Reset">
			<context kind="class">CommandBarPopup</context>
			<name>Reset</name>
			<type>void</type>
		</source>
	</element>
	<!--method::CommandBarPopup.SetFocus-->
	<element type="method">
		<source id="Office.CommandBarPopup.SetFocus">
			<context kind="class">CommandBarPopup</context>
			<name>SetFocus</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Tag-->
	<element type="property">
		<source id="Office.CommandBarPopup.Tag">
			<context kind="class">CommandBarPopup</context>
			<name>Tag</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarPopup.TooltipText-->
	<element type="property">
		<source id="Office.CommandBarPopup.TooltipText">
			<context kind="class">CommandBarPopup</context>
			<name>TooltipText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Top {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.Top">
			<context kind="class">CommandBarPopup</context>
			<name>Top</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Type {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBarPopup.Type">
			<context kind="class">CommandBarPopup</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Visible-->
	<element type="property">
		<source id="Office.CommandBarPopup.Visible">
			<context kind="class">CommandBarPopup</context>
			<name>Visible</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBarPopup.Width-->
	<element type="property">
		<source id="Office.CommandBarPopup.Width">
			<context kind="class">CommandBarPopup</context>
			<name>Width</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::CommandBars-->
	<element type="class">
		<source id="Office.CommandBars">
			<name>CommandBars</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::CommandBars.ActionControl {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBars.ActionControl">
			<context kind="class">CommandBars</context>
			<name>ActionControl</name>
			<type>CommandBarControl</type>
		</source>
	</element>
	<!--property::CommandBars.ActiveMenuBar {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBars.ActiveMenuBar">
			<context kind="class">CommandBars</context>
			<name>ActiveMenuBar</name>
			<type>CommandBar</type>
		</source>
	</element>
	<!--property::CommandBars.AdaptiveMenus-->
	<element type="property">
		<source id="Office.CommandBars.AdaptiveMenus">
			<context kind="class">CommandBars</context>
			<name>AdaptiveMenus</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::CommandBars.Add-->
	<element type="method">
		<source id="Office.CommandBars.Add">
			<context kind="class">CommandBars</context>
			<name>Add</name>
			<type>CommandBar</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Name</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Position</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MenuBar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Temporary</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBars.AddEx-->
	<element type="method">
		<source id="Office.CommandBars.AddEx">
			<context kind="class">CommandBars</context>
			<name>AddEx</name>
			<type>CommandBar</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>TbidOrName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Position</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>MenuBar</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Temporary</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>TbtrProtection</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBars.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBars.Application">
			<context kind="class">CommandBars</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::CommandBars.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBars.Count">
			<context kind="class">CommandBars</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBars.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBars.Creator">
			<context kind="class">CommandBars</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::CommandBars.DisableAskAQuestionDropdown-->
	<element type="property">
		<source id="Office.CommandBars.DisableAskAQuestionDropdown">
			<context kind="class">CommandBars</context>
			<name>DisableAskAQuestionDropdown</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBars.DisableCustomize-->
	<element type="property">
		<source id="Office.CommandBars.DisableCustomize">
			<context kind="class">CommandBars</context>
			<name>DisableCustomize</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBars.DisplayFonts-->
	<element type="property">
		<source id="Office.CommandBars.DisplayFonts">
			<context kind="class">CommandBars</context>
			<name>DisplayFonts</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBars.DisplayKeysInTooltips-->
	<element type="property">
		<source id="Office.CommandBars.DisplayKeysInTooltips">
			<context kind="class">CommandBars</context>
			<name>DisplayKeysInTooltips</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBars.DisplayTooltips-->
	<element type="property">
		<source id="Office.CommandBars.DisplayTooltips">
			<context kind="class">CommandBars</context>
			<name>DisplayTooltips</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::CommandBars.FindControl-->
	<element type="method">
		<source id="Office.CommandBars.FindControl">
			<context kind="class">CommandBars</context>
			<name>FindControl</name>
			<type>CommandBarControl</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Id</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Tag</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Visible</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::CommandBars.FindControls-->
	<element type="method">
		<source id="Office.CommandBars.FindControls">
			<context kind="class">CommandBars</context>
			<name>FindControls</name>
			<type>CommandBarControls</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>Type</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Id</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Tag</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Visible</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBars.IdsString {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBars.IdsString">
			<context kind="class">CommandBars</context>
			<name>IdsString</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>ids</name>
				</parameter>
				<parameter>
					<type>String[]</type>
					<name>pbstrName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBars.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBars.Item">
			<context kind="class">CommandBars</context>
			<name default="true">Item</name>
			<type>CommandBar</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::CommandBars.LargeButtons-->
	<element type="property">
		<source id="Office.CommandBars.LargeButtons">
			<context kind="class">CommandBars</context>
			<name>LargeButtons</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::CommandBars.MenuAnimationStyle-->
	<element type="property">
		<source id="Office.CommandBars.MenuAnimationStyle">
			<context kind="class">CommandBars</context>
			<name>MenuAnimationStyle</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::CommandBars.OnUpdate-->
	<element type="method">
		<source id="Office.CommandBars.OnUpdate">
			<context kind="class">CommandBars</context>
			<name>OnUpdate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBars.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBars.Parent">
			<context kind="class">CommandBars</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::CommandBars.ReleaseFocus-->
	<element type="method">
		<source id="Office.CommandBars.ReleaseFocus">
			<context kind="class">CommandBars</context>
			<name>ReleaseFocus</name>
			<type>void</type>
		</source>
	</element>
	<!--property::CommandBars.TmcGetName {ReadOnly}-->
	<element type="property">
		<source id="Office.CommandBars.TmcGetName">
			<context kind="class">CommandBars</context>
			<name>TmcGetName</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>tmc</name>
				</parameter>
				<parameter>
					<type>String[]</type>
					<name>pbstrName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--enum::DocProperties  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.DocProperties">
			<name>DocProperties</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::offPropertyTypeBoolean {Constant}-->
	<element type="constant">
		<source id="Office.DocProperties.offPropertyTypeBoolean">
			<context kind="enumeration">DocProperties</context>
			<name>offPropertyTypeBoolean</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::offPropertyTypeDate {Constant}-->
	<element type="constant">
		<source id="Office.DocProperties.offPropertyTypeDate">
			<context kind="enumeration">DocProperties</context>
			<name>offPropertyTypeDate</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::offPropertyTypeFloat {Constant}-->
	<element type="constant">
		<source id="Office.DocProperties.offPropertyTypeFloat">
			<context kind="enumeration">DocProperties</context>
			<name>offPropertyTypeFloat</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::offPropertyTypeNumber {Constant}-->
	<element type="constant">
		<source id="Office.DocProperties.offPropertyTypeNumber">
			<context kind="enumeration">DocProperties</context>
			<name>offPropertyTypeNumber</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::offPropertyTypeString {Constant}-->
	<element type="constant">
		<source id="Office.DocProperties.offPropertyTypeString">
			<context kind="enumeration">DocProperties</context>
			<name>offPropertyTypeString</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--Class::DocumentLibraryVersion-->
	<element type="class">
		<source id="Office.DocumentLibraryVersion">
			<name>DocumentLibraryVersion</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::DocumentLibraryVersion.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.DocumentLibraryVersion.Application">
			<context kind="class">DocumentLibraryVersion</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DocumentLibraryVersion.Comments {ReadOnly}-->
	<element type="property">
		<source id="Office.DocumentLibraryVersion.Comments">
			<context kind="class">DocumentLibraryVersion</context>
			<name>Comments</name>
			<type>String</type>
		</source>
	</element>
	<!--property::DocumentLibraryVersion.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.DocumentLibraryVersion.Creator">
			<context kind="class">DocumentLibraryVersion</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::DocumentLibraryVersion.Delete-->
	<element type="method">
		<source id="Office.DocumentLibraryVersion.Delete">
			<context kind="class">DocumentLibraryVersion</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::DocumentLibraryVersion.Index {ReadOnly}-->
	<element type="property">
		<source id="Office.DocumentLibraryVersion.Index">
			<context kind="class">DocumentLibraryVersion</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DocumentLibraryVersion.Modified {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.DocumentLibraryVersion.Modified">
			<context kind="class">DocumentLibraryVersion</context>
			<name default="true">Modified</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::DocumentLibraryVersion.ModifiedBy {ReadOnly}-->
	<element type="property">
		<source id="Office.DocumentLibraryVersion.ModifiedBy">
			<context kind="class">DocumentLibraryVersion</context>
			<name>ModifiedBy</name>
			<type>String</type>
		</source>
	</element>
	<!--method::DocumentLibraryVersion.Open-->
	<element type="method">
		<source id="Office.DocumentLibraryVersion.Open">
			<context kind="class">DocumentLibraryVersion</context>
			<name>Open</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::DocumentLibraryVersion.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.DocumentLibraryVersion.Parent">
			<context kind="class">DocumentLibraryVersion</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::DocumentLibraryVersion.Restore-->
	<element type="method">
		<source id="Office.DocumentLibraryVersion.Restore">
			<context kind="class">DocumentLibraryVersion</context>
			<name>Restore</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::DocumentLibraryVersions-->
	<element type="class">
		<source id="Office.DocumentLibraryVersions">
			<name>DocumentLibraryVersions</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::DocumentLibraryVersions.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.DocumentLibraryVersions.Application">
			<context kind="class">DocumentLibraryVersions</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::DocumentLibraryVersions.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.DocumentLibraryVersions.Count">
			<context kind="class">DocumentLibraryVersions</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DocumentLibraryVersions.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.DocumentLibraryVersions.Creator">
			<context kind="class">DocumentLibraryVersions</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::DocumentLibraryVersions.IsVersioningEnabled {ReadOnly}-->
	<element type="property">
		<source id="Office.DocumentLibraryVersions.IsVersioningEnabled">
			<context kind="class">DocumentLibraryVersions</context>
			<name>IsVersioningEnabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::DocumentLibraryVersions.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.DocumentLibraryVersions.Item">
			<context kind="class">DocumentLibraryVersions</context>
			<name default="true">Item</name>
			<type>DocumentLibraryVersion</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>lIndex</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::DocumentLibraryVersions.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.DocumentLibraryVersions.Parent">
			<context kind="class">DocumentLibraryVersions</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::FileDialog-->
	<element type="class">
		<source id="Office.FileDialog">
			<name>FileDialog</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::FileDialog.AllowMultiSelect-->
	<element type="property">
		<source id="Office.FileDialog.AllowMultiSelect">
			<context kind="class">FileDialog</context>
			<name>AllowMultiSelect</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::FileDialog.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialog.Application">
			<context kind="class">FileDialog</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::FileDialog.ButtonName-->
	<element type="property">
		<source id="Office.FileDialog.ButtonName">
			<context kind="class">FileDialog</context>
			<name>ButtonName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::FileDialog.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialog.Creator">
			<context kind="class">FileDialog</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FileDialog.DialogType {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialog.DialogType">
			<context kind="class">FileDialog</context>
			<name>DialogType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::FileDialog.Execute-->
	<element type="method">
		<source id="Office.FileDialog.Execute">
			<context kind="class">FileDialog</context>
			<name>Execute</name>
			<type>void</type>
		</source>
	</element>
	<!--property::FileDialog.FilterIndex-->
	<element type="property">
		<source id="Office.FileDialog.FilterIndex">
			<context kind="class">FileDialog</context>
			<name>FilterIndex</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FileDialog.Filters {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialog.Filters">
			<context kind="class">FileDialog</context>
			<name>Filters</name>
			<type>FileDialogFilters</type>
		</source>
	</element>
	<!--property::FileDialog.InitialFileName-->
	<element type="property">
		<source id="Office.FileDialog.InitialFileName">
			<context kind="class">FileDialog</context>
			<name>InitialFileName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::FileDialog.InitialView-->
	<element type="property">
		<source id="Office.FileDialog.InitialView">
			<context kind="class">FileDialog</context>
			<name>InitialView</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FileDialog.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialog.Item">
			<context kind="class">FileDialog</context>
			<name default="true">Item</name>
			<type>String</type>
		</source>
	</element>
	<!--property::FileDialog.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialog.Parent">
			<context kind="class">FileDialog</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::FileDialog.SelectedItems {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialog.SelectedItems">
			<context kind="class">FileDialog</context>
			<name>SelectedItems</name>
			<type>FileDialogSelectedItems</type>
		</source>
	</element>
	<!--method::FileDialog.Show-->
	<element type="method">
		<source id="Office.FileDialog.Show">
			<context kind="class">FileDialog</context>
			<name>Show</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FileDialog.Title-->
	<element type="property">
		<source id="Office.FileDialog.Title">
			<context kind="class">FileDialog</context>
			<name>Title</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::FileDialogFilter-->
	<element type="class">
		<source id="Office.FileDialogFilter">
			<name>FileDialogFilter</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::FileDialogFilter.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialogFilter.Application">
			<context kind="class">FileDialogFilter</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::FileDialogFilter.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialogFilter.Creator">
			<context kind="class">FileDialogFilter</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FileDialogFilter.Description {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialogFilter.Description">
			<context kind="class">FileDialogFilter</context>
			<name>Description</name>
			<type>String</type>
		</source>
	</element>
	<!--property::FileDialogFilter.Extensions {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialogFilter.Extensions">
			<context kind="class">FileDialogFilter</context>
			<name>Extensions</name>
			<type>String</type>
		</source>
	</element>
	<!--property::FileDialogFilter.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialogFilter.Parent">
			<context kind="class">FileDialogFilter</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::FileDialogFilters-->
	<element type="class">
		<source id="Office.FileDialogFilters">
			<name>FileDialogFilters</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::FileDialogFilters.Add-->
	<element type="method">
		<source id="Office.FileDialogFilters.Add">
			<context kind="class">FileDialogFilters</context>
			<name>Add</name>
			<type>FileDialogFilter</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Description</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>Extensions</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Position</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::FileDialogFilters.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialogFilters.Application">
			<context kind="class">FileDialogFilters</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::FileDialogFilters.Clear-->
	<element type="method">
		<source id="Office.FileDialogFilters.Clear">
			<context kind="class">FileDialogFilters</context>
			<name>Clear</name>
			<type>void</type>
		</source>
	</element>
	<!--property::FileDialogFilters.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialogFilters.Count">
			<context kind="class">FileDialogFilters</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FileDialogFilters.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialogFilters.Creator">
			<context kind="class">FileDialogFilters</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::FileDialogFilters.Delete-->
	<element type="method">
		<source id="Office.FileDialogFilters.Delete">
			<context kind="class">FileDialogFilters</context>
			<name>Delete</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>filter</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::FileDialogFilters.Item {Default}-->
	<element type="method">
		<source id="Office.FileDialogFilters.Item">
			<context kind="class">FileDialogFilters</context>
			<name default="true">Item</name>
			<type>FileDialogFilter</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::FileDialogFilters.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialogFilters.Parent">
			<context kind="class">FileDialogFilters</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::FileDialogSelectedItems-->
	<element type="class">
		<source id="Office.FileDialogSelectedItems">
			<name>FileDialogSelectedItems</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::FileDialogSelectedItems.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialogSelectedItems.Application">
			<context kind="class">FileDialogSelectedItems</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::FileDialogSelectedItems.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialogSelectedItems.Count">
			<context kind="class">FileDialogSelectedItems</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FileDialogSelectedItems.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialogSelectedItems.Creator">
			<context kind="class">FileDialogSelectedItems</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::FileDialogSelectedItems.Item {Default}-->
	<element type="method">
		<source id="Office.FileDialogSelectedItems.Item">
			<context kind="class">FileDialogSelectedItems</context>
			<name default="true">Item</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::FileDialogSelectedItems.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.FileDialogSelectedItems.Parent">
			<context kind="class">FileDialogSelectedItems</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::FileSearch-->
	<element type="class">
		<source id="Office.FileSearch">
			<name>FileSearch</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::FileSearch.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.FileSearch.Application">
			<context kind="class">FileSearch</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::FileSearch.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.FileSearch.Creator">
			<context kind="class">FileSearch</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::FileSearch.Execute-->
	<element type="method">
		<source id="Office.FileSearch.Execute">
			<context kind="class">FileSearch</context>
			<name>Execute</name>
			<type>Integer</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>SortBy</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>SortOrder</name>
				</parameter>
				<parameter optional="true">
					<type>boolean</type>
					<name>AlwaysAccurate</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::FileSearch.FileName-->
	<element type="property">
		<source id="Office.FileSearch.FileName">
			<context kind="class">FileSearch</context>
			<name>FileName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::FileSearch.FileType-->
	<element type="property">
		<source id="Office.FileSearch.FileType">
			<context kind="class">FileSearch</context>
			<name>FileType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FileSearch.FileTypes {ReadOnly}-->
	<element type="property">
		<source id="Office.FileSearch.FileTypes">
			<context kind="class">FileSearch</context>
			<name>FileTypes</name>
			<type>FileTypes</type>
		</source>
	</element>
	<!--property::FileSearch.FoundFiles {ReadOnly}-->
	<element type="property">
		<source id="Office.FileSearch.FoundFiles">
			<context kind="class">FileSearch</context>
			<name>FoundFiles</name>
			<type>FoundFiles</type>
		</source>
	</element>
	<!--property::FileSearch.LastModified-->
	<element type="property">
		<source id="Office.FileSearch.LastModified">
			<context kind="class">FileSearch</context>
			<name>LastModified</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FileSearch.LookIn-->
	<element type="property">
		<source id="Office.FileSearch.LookIn">
			<context kind="class">FileSearch</context>
			<name>LookIn</name>
			<type>String</type>
		</source>
	</element>
	<!--property::FileSearch.MatchAllWordForms-->
	<element type="property">
		<source id="Office.FileSearch.MatchAllWordForms">
			<context kind="class">FileSearch</context>
			<name>MatchAllWordForms</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::FileSearch.MatchTextExactly-->
	<element type="property">
		<source id="Office.FileSearch.MatchTextExactly">
			<context kind="class">FileSearch</context>
			<name>MatchTextExactly</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::FileSearch.NewSearch-->
	<element type="method">
		<source id="Office.FileSearch.NewSearch">
			<context kind="class">FileSearch</context>
			<name>NewSearch</name>
			<type>void</type>
		</source>
	</element>
	<!--property::FileSearch.PropertyTests {ReadOnly}-->
	<element type="property">
		<source id="Office.FileSearch.PropertyTests">
			<context kind="class">FileSearch</context>
			<name>PropertyTests</name>
			<type>PropertyTests</type>
		</source>
	</element>
	<!--method::FileSearch.RefreshScopes-->
	<element type="method">
		<source id="Office.FileSearch.RefreshScopes">
			<context kind="class">FileSearch</context>
			<name>RefreshScopes</name>
			<type>void</type>
		</source>
	</element>
	<!--property::FileSearch.SearchFolders {ReadOnly}-->
	<element type="property">
		<source id="Office.FileSearch.SearchFolders">
			<context kind="class">FileSearch</context>
			<name>SearchFolders</name>
			<type>SearchFolders</type>
		</source>
	</element>
	<!--property::FileSearch.SearchScopes {ReadOnly}-->
	<element type="property">
		<source id="Office.FileSearch.SearchScopes">
			<context kind="class">FileSearch</context>
			<name>SearchScopes</name>
			<type>SearchScopes</type>
		</source>
	</element>
	<!--property::FileSearch.SearchSubFolders-->
	<element type="property">
		<source id="Office.FileSearch.SearchSubFolders">
			<context kind="class">FileSearch</context>
			<name>SearchSubFolders</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::FileSearch.TextOrProperty-->
	<element type="property">
		<source id="Office.FileSearch.TextOrProperty">
			<context kind="class">FileSearch</context>
			<name>TextOrProperty</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::FileTypes-->
	<element type="class">
		<source id="Office.FileTypes">
			<name>FileTypes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::FileTypes.Add-->
	<element type="method">
		<source id="Office.FileTypes.Add">
			<context kind="class">FileTypes</context>
			<name>Add</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>FileType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::FileTypes.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.FileTypes.Application">
			<context kind="class">FileTypes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::FileTypes.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.FileTypes.Count">
			<context kind="class">FileTypes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FileTypes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.FileTypes.Creator">
			<context kind="class">FileTypes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FileTypes.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.FileTypes.Item">
			<context kind="class">FileTypes</context>
			<name default="true">Item</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::FileTypes.Remove-->
	<element type="method">
		<source id="Office.FileTypes.Remove">
			<context kind="class">FileTypes</context>
			<name>Remove</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::FoundFiles-->
	<element type="class">
		<source id="Office.FoundFiles">
			<name>FoundFiles</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::FoundFiles.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.FoundFiles.Application">
			<context kind="class">FoundFiles</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::FoundFiles.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.FoundFiles.Count">
			<context kind="class">FoundFiles</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FoundFiles.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.FoundFiles.Creator">
			<context kind="class">FoundFiles</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::FoundFiles.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.FoundFiles.Item">
			<context kind="class">FoundFiles</context>
			<name default="true">Item</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::HTMLProject-->
	<element type="class">
		<source id="Office.HTMLProject">
			<name>HTMLProject</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::HTMLProject.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProject.Application">
			<context kind="class">HTMLProject</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::HTMLProject.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProject.Creator">
			<context kind="class">HTMLProject</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::HTMLProject.HTMLProjectItems {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProject.HTMLProjectItems">
			<context kind="class">HTMLProject</context>
			<name>HTMLProjectItems</name>
			<type>HTMLProjectItems</type>
		</source>
	</element>
	<!--method::HTMLProject.Open-->
	<element type="method">
		<source id="Office.HTMLProject.Open">
			<context kind="class">HTMLProject</context>
			<name>Open</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>OpenKind</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::HTMLProject.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProject.Parent">
			<context kind="class">HTMLProject</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::HTMLProject.RefreshDocument-->
	<element type="method">
		<source id="Office.HTMLProject.RefreshDocument">
			<context kind="class">HTMLProject</context>
			<name>RefreshDocument</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>boolean</type>
					<name>Refresh</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::HTMLProject.RefreshProject-->
	<element type="method">
		<source id="Office.HTMLProject.RefreshProject">
			<context kind="class">HTMLProject</context>
			<name>RefreshProject</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>boolean</type>
					<name>Refresh</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::HTMLProject.State {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProject.State">
			<context kind="class">HTMLProject</context>
			<name default="true">State</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::HTMLProjectItem-->
	<element type="class">
		<source id="Office.HTMLProjectItem">
			<name>HTMLProjectItem</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::HTMLProjectItem.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProjectItem.Application">
			<context kind="class">HTMLProjectItem</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::HTMLProjectItem.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProjectItem.Creator">
			<context kind="class">HTMLProjectItem</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::HTMLProjectItem.IsOpen {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProjectItem.IsOpen">
			<context kind="class">HTMLProjectItem</context>
			<name>IsOpen</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::HTMLProjectItem.LoadFromFile-->
	<element type="method">
		<source id="Office.HTMLProjectItem.LoadFromFile">
			<context kind="class">HTMLProjectItem</context>
			<name>LoadFromFile</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>FileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::HTMLProjectItem.Name {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProjectItem.Name">
			<context kind="class">HTMLProjectItem</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--method::HTMLProjectItem.Open-->
	<element type="method">
		<source id="Office.HTMLProjectItem.Open">
			<context kind="class">HTMLProjectItem</context>
			<name>Open</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Integer</type>
					<name>OpenKind</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::HTMLProjectItem.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProjectItem.Parent">
			<context kind="class">HTMLProjectItem</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::HTMLProjectItem.SaveCopyAs-->
	<element type="method">
		<source id="Office.HTMLProjectItem.SaveCopyAs">
			<context kind="class">HTMLProjectItem</context>
			<name>SaveCopyAs</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>FileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::HTMLProjectItem.Text-->
	<element type="property">
		<source id="Office.HTMLProjectItem.Text">
			<context kind="class">HTMLProjectItem</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::HTMLProjectItems-->
	<element type="class">
		<source id="Office.HTMLProjectItems">
			<name>HTMLProjectItems</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::HTMLProjectItems.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProjectItems.Application">
			<context kind="class">HTMLProjectItems</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::HTMLProjectItems.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProjectItems.Count">
			<context kind="class">HTMLProjectItems</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::HTMLProjectItems.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProjectItems.Creator">
			<context kind="class">HTMLProjectItems</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::HTMLProjectItems.Item {Default}-->
	<element type="method">
		<source id="Office.HTMLProjectItems.Item">
			<context kind="class">HTMLProjectItems</context>
			<name default="true">Item</name>
			<type>HTMLProjectItem</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::HTMLProjectItems.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.HTMLProjectItems.Parent">
			<context kind="class">HTMLProjectItems</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::IAccessible-->
	<element type="class">
		<source id="Office.IAccessible">
			<name>IAccessible</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::IAccessible.accChild {ReadOnly}-->
	<element type="property">
		<source id="Office.IAccessible.accChild">
			<context kind="class">IAccessible</context>
			<name>accChild</name>
			<type>Object</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IAccessible.accChildCount {ReadOnly}-->
	<element type="property">
		<source id="Office.IAccessible.accChildCount">
			<context kind="class">IAccessible</context>
			<name>accChildCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::IAccessible.accDefaultAction {ReadOnly}-->
	<element type="property">
		<source id="Office.IAccessible.accDefaultAction">
			<context kind="class">IAccessible</context>
			<name>accDefaultAction</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IAccessible.accDescription {ReadOnly}-->
	<element type="property">
		<source id="Office.IAccessible.accDescription">
			<context kind="class">IAccessible</context>
			<name>accDescription</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::IAccessible.accDoDefaultAction-->
	<element type="method">
		<source id="Office.IAccessible.accDoDefaultAction">
			<context kind="class">IAccessible</context>
			<name>accDoDefaultAction</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IAccessible.accFocus {ReadOnly}-->
	<element type="property">
		<source id="Office.IAccessible.accFocus">
			<context kind="class">IAccessible</context>
			<name>accFocus</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::IAccessible.accHelp {ReadOnly}-->
	<element type="property">
		<source id="Office.IAccessible.accHelp">
			<context kind="class">IAccessible</context>
			<name>accHelp</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IAccessible.accHelpTopic {ReadOnly}-->
	<element type="property">
		<source id="Office.IAccessible.accHelpTopic">
			<context kind="class">IAccessible</context>
			<name>accHelpTopic</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String[]</type>
					<name>pszHelpFile</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::IAccessible.accHitTest-->
	<element type="method">
		<source id="Office.IAccessible.accHitTest">
			<context kind="class">IAccessible</context>
			<name>accHitTest</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>xLeft</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>yTop</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IAccessible.accKeyboardShortcut {ReadOnly}-->
	<element type="property">
		<source id="Office.IAccessible.accKeyboardShortcut">
			<context kind="class">IAccessible</context>
			<name>accKeyboardShortcut</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::IAccessible.accLocation-->
	<element type="method">
		<source id="Office.IAccessible.accLocation">
			<context kind="class">IAccessible</context>
			<name>accLocation</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>int[]</type>
					<name>pxLeft</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pyTop</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pcxWidth</name>
				</parameter>
				<parameter>
					<type>int[]</type>
					<name>pcyHeight</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IAccessible.accName-->
	<element type="property">
		<source id="Office.IAccessible.accName">
			<context kind="class">IAccessible</context>
			<name>accName</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::IAccessible.accNavigate-->
	<element type="method">
		<source id="Office.IAccessible.accNavigate">
			<context kind="class">IAccessible</context>
			<name>accNavigate</name>
			<type>Variant</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>navDir</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varStart</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IAccessible.accParent {ReadOnly}-->
	<element type="property">
		<source id="Office.IAccessible.accParent">
			<context kind="class">IAccessible</context>
			<name>accParent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::IAccessible.accRole {ReadOnly}-->
	<element type="property">
		<source id="Office.IAccessible.accRole">
			<context kind="class">IAccessible</context>
			<name>accRole</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::IAccessible.accSelect-->
	<element type="method">
		<source id="Office.IAccessible.accSelect">
			<context kind="class">IAccessible</context>
			<name>accSelect</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>flagsSelect</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IAccessible.accSelection {ReadOnly}-->
	<element type="property">
		<source id="Office.IAccessible.accSelection">
			<context kind="class">IAccessible</context>
			<name>accSelection</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::IAccessible.accState {ReadOnly}-->
	<element type="property">
		<source id="Office.IAccessible.accState">
			<context kind="class">IAccessible</context>
			<name>accState</name>
			<type>Variant</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IAccessible.accValue-->
	<element type="property">
		<source id="Office.IAccessible.accValue">
			<context kind="class">IAccessible</context>
			<name>accValue</name>
			<type>String</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>varChild</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::ICommandBarButtonEvents-->
	<element type="class">
		<source id="Office.ICommandBarButtonEvents">
			<name>ICommandBarButtonEvents</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ICommandBarButtonEvents.Click-->
	<element type="method">
		<source id="Office.ICommandBarButtonEvents.Click">
			<context kind="class">ICommandBarButtonEvents</context>
			<name>Click</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>CommandBarButton</type>
					<name>Ctrl</name>
				</parameter>
				<parameter>
					<type>boolean[]</type>
					<name>CancelDefault</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::ICommandBarComboBoxEvents-->
	<element type="class">
		<source id="Office.ICommandBarComboBoxEvents">
			<name>ICommandBarComboBoxEvents</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ICommandBarComboBoxEvents.Change-->
	<element type="method">
		<source id="Office.ICommandBarComboBoxEvents.Change">
			<context kind="class">ICommandBarComboBoxEvents</context>
			<name>Change</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>CommandBarComboBox</type>
					<name>Ctrl</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::ICommandBarsEvents-->
	<element type="class">
		<source id="Office.ICommandBarsEvents">
			<name>ICommandBarsEvents</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ICommandBarsEvents.OnUpdate-->
	<element type="method">
		<source id="Office.ICommandBarsEvents.OnUpdate">
			<context kind="class">ICommandBarsEvents</context>
			<name>OnUpdate</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::IFind-->
	<element type="class">
		<source id="Office.IFind">
			<name>IFind</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::IFind.Author-->
	<element type="property">
		<source id="Office.IFind.Author">
			<context kind="class">IFind</context>
			<name>Author</name>
			<type>String</type>
		</source>
	</element>
	<!--property::IFind.DateCreatedFrom-->
	<element type="property">
		<source id="Office.IFind.DateCreatedFrom">
			<context kind="class">IFind</context>
			<name>DateCreatedFrom</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::IFind.DateCreatedTo-->
	<element type="property">
		<source id="Office.IFind.DateCreatedTo">
			<context kind="class">IFind</context>
			<name>DateCreatedTo</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::IFind.DateSavedFrom-->
	<element type="property">
		<source id="Office.IFind.DateSavedFrom">
			<context kind="class">IFind</context>
			<name>DateSavedFrom</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::IFind.DateSavedTo-->
	<element type="property">
		<source id="Office.IFind.DateSavedTo">
			<context kind="class">IFind</context>
			<name>DateSavedTo</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::IFind.Delete-->
	<element type="method">
		<source id="Office.IFind.Delete">
			<context kind="class">IFind</context>
			<name>Delete</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrQueryName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::IFind.Execute-->
	<element type="method">
		<source id="Office.IFind.Execute">
			<context kind="class">IFind</context>
			<name>Execute</name>
			<type>void</type>
		</source>
	</element>
	<!--property::IFind.FileType-->
	<element type="property">
		<source id="Office.IFind.FileType">
			<context kind="class">IFind</context>
			<name>FileType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::IFind.Keywords-->
	<element type="property">
		<source id="Office.IFind.Keywords">
			<context kind="class">IFind</context>
			<name>Keywords</name>
			<type>String</type>
		</source>
	</element>
	<!--property::IFind.ListBy-->
	<element type="property">
		<source id="Office.IFind.ListBy">
			<context kind="class">IFind</context>
			<name>ListBy</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::IFind.Load-->
	<element type="method">
		<source id="Office.IFind.Load">
			<context kind="class">IFind</context>
			<name>Load</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrQueryName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IFind.MatchCase-->
	<element type="property">
		<source id="Office.IFind.MatchCase">
			<context kind="class">IFind</context>
			<name>MatchCase</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::IFind.Name-->
	<element type="property">
		<source id="Office.IFind.Name">
			<context kind="class">IFind</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::IFind.Options-->
	<element type="property">
		<source id="Office.IFind.Options">
			<context kind="class">IFind</context>
			<name>Options</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::IFind.PatternMatch-->
	<element type="property">
		<source id="Office.IFind.PatternMatch">
			<context kind="class">IFind</context>
			<name>PatternMatch</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::IFind.Results {ReadOnly}-->
	<element type="property">
		<source id="Office.IFind.Results">
			<context kind="class">IFind</context>
			<name>Results</name>
			<type>IFoundFiles</type>
		</source>
	</element>
	<!--method::IFind.Save-->
	<element type="method">
		<source id="Office.IFind.Save">
			<context kind="class">IFind</context>
			<name>Save</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrQueryName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IFind.SavedBy-->
	<element type="property">
		<source id="Office.IFind.SavedBy">
			<context kind="class">IFind</context>
			<name>SavedBy</name>
			<type>String</type>
		</source>
	</element>
	<!--property::IFind.SearchPath {Default}-->
	<element type="property">
		<source id="Office.IFind.SearchPath">
			<context kind="class">IFind</context>
			<name default="true">SearchPath</name>
			<type>String</type>
		</source>
	</element>
	<!--property::IFind.SelectedFile-->
	<element type="property">
		<source id="Office.IFind.SelectedFile">
			<context kind="class">IFind</context>
			<name>SelectedFile</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::IFind.Show-->
	<element type="method">
		<source id="Office.IFind.Show">
			<context kind="class">IFind</context>
			<name>Show</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::IFind.SortBy-->
	<element type="property">
		<source id="Office.IFind.SortBy">
			<context kind="class">IFind</context>
			<name>SortBy</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::IFind.SubDir-->
	<element type="property">
		<source id="Office.IFind.SubDir">
			<context kind="class">IFind</context>
			<name>SubDir</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::IFind.Subject-->
	<element type="property">
		<source id="Office.IFind.Subject">
			<context kind="class">IFind</context>
			<name>Subject</name>
			<type>String</type>
		</source>
	</element>
	<!--property::IFind.Text-->
	<element type="property">
		<source id="Office.IFind.Text">
			<context kind="class">IFind</context>
			<name>Text</name>
			<type>String</type>
		</source>
	</element>
	<!--property::IFind.Title-->
	<element type="property">
		<source id="Office.IFind.Title">
			<context kind="class">IFind</context>
			<name>Title</name>
			<type>String</type>
		</source>
	</element>
	<!--property::IFind.View-->
	<element type="property">
		<source id="Office.IFind.View">
			<context kind="class">IFind</context>
			<name>View</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::IFoundFiles-->
	<element type="class">
		<source id="Office.IFoundFiles">
			<name>IFoundFiles</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::IFoundFiles.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.IFoundFiles.Count">
			<context kind="class">IFoundFiles</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::IFoundFiles.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.IFoundFiles.Item">
			<context kind="class">IFoundFiles</context>
			<name default="true">Item</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::ILicAgent-->
	<element type="class">
		<source id="Office.ILicAgent">
			<name>ILicAgent</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ILicAgent.AsyncProcessCCRenewalLicenseRequest-->
	<element type="method">
		<source id="Office.ILicAgent.AsyncProcessCCRenewalLicenseRequest">
			<context kind="class">ILicAgent</context>
			<name>AsyncProcessCCRenewalLicenseRequest</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ILicAgent.AsyncProcessCCRenewalPriceRequest-->
	<element type="method">
		<source id="Office.ILicAgent.AsyncProcessCCRenewalPriceRequest">
			<context kind="class">ILicAgent</context>
			<name>AsyncProcessCCRenewalPriceRequest</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ILicAgent.AsyncProcessDroppedLicenseRequest-->
	<element type="method">
		<source id="Office.ILicAgent.AsyncProcessDroppedLicenseRequest">
			<context kind="class">ILicAgent</context>
			<name>AsyncProcessDroppedLicenseRequest</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ILicAgent.AsyncProcessHandshakeRequest-->
	<element type="method">
		<source id="Office.ILicAgent.AsyncProcessHandshakeRequest">
			<context kind="class">ILicAgent</context>
			<name>AsyncProcessHandshakeRequest</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>bReviseCustInfo</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.AsyncProcessNewLicenseRequest-->
	<element type="method">
		<source id="Office.ILicAgent.AsyncProcessNewLicenseRequest">
			<context kind="class">ILicAgent</context>
			<name>AsyncProcessNewLicenseRequest</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ILicAgent.AsyncProcessReissueLicenseRequest-->
	<element type="method">
		<source id="Office.ILicAgent.AsyncProcessReissueLicenseRequest">
			<context kind="class">ILicAgent</context>
			<name>AsyncProcessReissueLicenseRequest</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ILicAgent.AsyncProcessRetailRenewalLicenseRequest-->
	<element type="method">
		<source id="Office.ILicAgent.AsyncProcessRetailRenewalLicenseRequest">
			<context kind="class">ILicAgent</context>
			<name>AsyncProcessRetailRenewalLicenseRequest</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ILicAgent.AsyncProcessReviseCustInfoRequest-->
	<element type="method">
		<source id="Office.ILicAgent.AsyncProcessReviseCustInfoRequest">
			<context kind="class">ILicAgent</context>
			<name>AsyncProcessReviseCustInfoRequest</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ILicAgent.CancelAsyncProcessRequest-->
	<element type="method">
		<source id="Office.ILicAgent.CancelAsyncProcessRequest">
			<context kind="class">ILicAgent</context>
			<name>CancelAsyncProcessRequest</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>bIsLicenseRequest</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.CheckSystemClock-->
	<element type="method">
		<source id="Office.ILicAgent.CheckSystemClock">
			<context kind="class">ILicAgent</context>
			<name>CheckSystemClock</name>
			<type>VT_UI4</type>
		</source>
	</element>
	<!--method::ILicAgent.DepositConfirmationId-->
	<element type="method">
		<source id="Office.ILicAgent.DepositConfirmationId">
			<context kind="class">ILicAgent</context>
			<name>DepositConfirmationId</name>
			<type>VT_UI4</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.DisplaySSLCert-->
	<element type="method">
		<source id="Office.ILicAgent.DisplaySSLCert">
			<context kind="class">ILicAgent</context>
			<name>DisplaySSLCert</name>
			<type>VT_UI4</type>
		</source>
	</element>
	<!--method::ILicAgent.GenerateInstallationId-->
	<element type="method">
		<source id="Office.ILicAgent.GenerateInstallationId">
			<context kind="class">ILicAgent</context>
			<name>GenerateInstallationId</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetAddress1-->
	<element type="method">
		<source id="Office.ILicAgent.GetAddress1">
			<context kind="class">ILicAgent</context>
			<name>GetAddress1</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetAddress2-->
	<element type="method">
		<source id="Office.ILicAgent.GetAddress2">
			<context kind="class">ILicAgent</context>
			<name>GetAddress2</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetAsyncProcessReturnCode-->
	<element type="method">
		<source id="Office.ILicAgent.GetAsyncProcessReturnCode">
			<context kind="class">ILicAgent</context>
			<name>GetAsyncProcessReturnCode</name>
			<type>VT_UI4</type>
		</source>
	</element>
	<!--method::ILicAgent.GetBackendErrorMsg-->
	<element type="method">
		<source id="Office.ILicAgent.GetBackendErrorMsg">
			<context kind="class">ILicAgent</context>
			<name>GetBackendErrorMsg</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetBillingAddress1-->
	<element type="method">
		<source id="Office.ILicAgent.GetBillingAddress1">
			<context kind="class">ILicAgent</context>
			<name>GetBillingAddress1</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetBillingAddress2-->
	<element type="method">
		<source id="Office.ILicAgent.GetBillingAddress2">
			<context kind="class">ILicAgent</context>
			<name>GetBillingAddress2</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetBillingCity-->
	<element type="method">
		<source id="Office.ILicAgent.GetBillingCity">
			<context kind="class">ILicAgent</context>
			<name>GetBillingCity</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetBillingCountryCode-->
	<element type="method">
		<source id="Office.ILicAgent.GetBillingCountryCode">
			<context kind="class">ILicAgent</context>
			<name>GetBillingCountryCode</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetBillingFirstName-->
	<element type="method">
		<source id="Office.ILicAgent.GetBillingFirstName">
			<context kind="class">ILicAgent</context>
			<name>GetBillingFirstName</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetBillingLastName-->
	<element type="method">
		<source id="Office.ILicAgent.GetBillingLastName">
			<context kind="class">ILicAgent</context>
			<name>GetBillingLastName</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetBillingPhone-->
	<element type="method">
		<source id="Office.ILicAgent.GetBillingPhone">
			<context kind="class">ILicAgent</context>
			<name>GetBillingPhone</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetBillingState-->
	<element type="method">
		<source id="Office.ILicAgent.GetBillingState">
			<context kind="class">ILicAgent</context>
			<name>GetBillingState</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetBillingZip-->
	<element type="method">
		<source id="Office.ILicAgent.GetBillingZip">
			<context kind="class">ILicAgent</context>
			<name>GetBillingZip</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetCCRenewalExpiryDate-->
	<element type="method">
		<source id="Office.ILicAgent.GetCCRenewalExpiryDate">
			<context kind="class">ILicAgent</context>
			<name>GetCCRenewalExpiryDate</name>
			<type>java.util.Date</type>
		</source>
	</element>
	<!--method::ILicAgent.GetCity-->
	<element type="method">
		<source id="Office.ILicAgent.GetCity">
			<context kind="class">ILicAgent</context>
			<name>GetCity</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetCountryCode-->
	<element type="method">
		<source id="Office.ILicAgent.GetCountryCode">
			<context kind="class">ILicAgent</context>
			<name>GetCountryCode</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetCountryDesc-->
	<element type="method">
		<source id="Office.ILicAgent.GetCountryDesc">
			<context kind="class">ILicAgent</context>
			<name>GetCountryDesc</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetCreditCardCode-->
	<element type="method">
		<source id="Office.ILicAgent.GetCreditCardCode">
			<context kind="class">ILicAgent</context>
			<name>GetCreditCardCode</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>VT_UI4</type>
					<name>dwIndex</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.GetCreditCardCount-->
	<element type="method">
		<source id="Office.ILicAgent.GetCreditCardCount">
			<context kind="class">ILicAgent</context>
			<name>GetCreditCardCount</name>
			<type>VT_UI4</type>
		</source>
	</element>
	<!--method::ILicAgent.GetCreditCardExpiryMonth-->
	<element type="method">
		<source id="Office.ILicAgent.GetCreditCardExpiryMonth">
			<context kind="class">ILicAgent</context>
			<name>GetCreditCardExpiryMonth</name>
			<type>VT_UI4</type>
		</source>
	</element>
	<!--method::ILicAgent.GetCreditCardExpiryYear-->
	<element type="method">
		<source id="Office.ILicAgent.GetCreditCardExpiryYear">
			<context kind="class">ILicAgent</context>
			<name>GetCreditCardExpiryYear</name>
			<type>VT_UI4</type>
		</source>
	</element>
	<!--method::ILicAgent.GetCreditCardName-->
	<element type="method">
		<source id="Office.ILicAgent.GetCreditCardName">
			<context kind="class">ILicAgent</context>
			<name>GetCreditCardName</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>VT_UI4</type>
					<name>dwIndex</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.GetCreditCardNumber-->
	<element type="method">
		<source id="Office.ILicAgent.GetCreditCardNumber">
			<context kind="class">ILicAgent</context>
			<name>GetCreditCardNumber</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetCreditCardType-->
	<element type="method">
		<source id="Office.ILicAgent.GetCreditCardType">
			<context kind="class">ILicAgent</context>
			<name>GetCreditCardType</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetCurrencyDescription-->
	<element type="method">
		<source id="Office.ILicAgent.GetCurrencyDescription">
			<context kind="class">ILicAgent</context>
			<name>GetCurrencyDescription</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>VT_UI4</type>
					<name>dwCurrencyIndex</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.GetCurrencyOption-->
	<element type="method">
		<source id="Office.ILicAgent.GetCurrencyOption">
			<context kind="class">ILicAgent</context>
			<name>GetCurrencyOption</name>
			<type>VT_UI4</type>
		</source>
	</element>
	<!--method::ILicAgent.GetCurrentExpiryDate-->
	<element type="method">
		<source id="Office.ILicAgent.GetCurrentExpiryDate">
			<context kind="class">ILicAgent</context>
			<name>GetCurrentExpiryDate</name>
			<type>java.util.Date</type>
		</source>
	</element>
	<!--method::ILicAgent.GetDisconnectOption-->
	<element type="method">
		<source id="Office.ILicAgent.GetDisconnectOption">
			<context kind="class">ILicAgent</context>
			<name>GetDisconnectOption</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ILicAgent.GetEmail-->
	<element type="method">
		<source id="Office.ILicAgent.GetEmail">
			<context kind="class">ILicAgent</context>
			<name>GetEmail</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetEndOfLifeHtmlText-->
	<element type="method">
		<source id="Office.ILicAgent.GetEndOfLifeHtmlText">
			<context kind="class">ILicAgent</context>
			<name>GetEndOfLifeHtmlText</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetExistingExpiryDate-->
	<element type="method">
		<source id="Office.ILicAgent.GetExistingExpiryDate">
			<context kind="class">ILicAgent</context>
			<name>GetExistingExpiryDate</name>
			<type>java.util.Date</type>
		</source>
	</element>
	<!--method::ILicAgent.GetFirstName-->
	<element type="method">
		<source id="Office.ILicAgent.GetFirstName">
			<context kind="class">ILicAgent</context>
			<name>GetFirstName</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetInvoiceText-->
	<element type="method">
		<source id="Office.ILicAgent.GetInvoiceText">
			<context kind="class">ILicAgent</context>
			<name>GetInvoiceText</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetIsoLanguage-->
	<element type="method">
		<source id="Office.ILicAgent.GetIsoLanguage">
			<context kind="class">ILicAgent</context>
			<name>GetIsoLanguage</name>
			<type>VT_UI4</type>
		</source>
	</element>
	<!--method::ILicAgent.GetLastName-->
	<element type="method">
		<source id="Office.ILicAgent.GetLastName">
			<context kind="class">ILicAgent</context>
			<name>GetLastName</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetMSOffer-->
	<element type="method">
		<source id="Office.ILicAgent.GetMSOffer">
			<context kind="class">ILicAgent</context>
			<name>GetMSOffer</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetMSUpdate-->
	<element type="method">
		<source id="Office.ILicAgent.GetMSUpdate">
			<context kind="class">ILicAgent</context>
			<name>GetMSUpdate</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetNewExpiryDate-->
	<element type="method">
		<source id="Office.ILicAgent.GetNewExpiryDate">
			<context kind="class">ILicAgent</context>
			<name>GetNewExpiryDate</name>
			<type>java.util.Date</type>
		</source>
	</element>
	<!--method::ILicAgent.GetOrgName-->
	<element type="method">
		<source id="Office.ILicAgent.GetOrgName">
			<context kind="class">ILicAgent</context>
			<name>GetOrgName</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetOtherOffer-->
	<element type="method">
		<source id="Office.ILicAgent.GetOtherOffer">
			<context kind="class">ILicAgent</context>
			<name>GetOtherOffer</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetPhone-->
	<element type="method">
		<source id="Office.ILicAgent.GetPhone">
			<context kind="class">ILicAgent</context>
			<name>GetPhone</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetPriceItemCount-->
	<element type="method">
		<source id="Office.ILicAgent.GetPriceItemCount">
			<context kind="class">ILicAgent</context>
			<name>GetPriceItemCount</name>
			<type>VT_UI4</type>
		</source>
	</element>
	<!--method::ILicAgent.GetPriceItemLabel-->
	<element type="method">
		<source id="Office.ILicAgent.GetPriceItemLabel">
			<context kind="class">ILicAgent</context>
			<name>GetPriceItemLabel</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>VT_UI4</type>
					<name>dwIndex</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.GetPriceItemValue-->
	<element type="method">
		<source id="Office.ILicAgent.GetPriceItemValue">
			<context kind="class">ILicAgent</context>
			<name>GetPriceItemValue</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>VT_UI4</type>
					<name>dwCurrencyIndex</name>
				</parameter>
				<parameter>
					<type>VT_UI4</type>
					<name>dwIndex</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.GetState-->
	<element type="method">
		<source id="Office.ILicAgent.GetState">
			<context kind="class">ILicAgent</context>
			<name>GetState</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetVATLabel-->
	<element type="method">
		<source id="Office.ILicAgent.GetVATLabel">
			<context kind="class">ILicAgent</context>
			<name>GetVATLabel</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrCountryCode</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.GetVATNumber-->
	<element type="method">
		<source id="Office.ILicAgent.GetVATNumber">
			<context kind="class">ILicAgent</context>
			<name>GetVATNumber</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.GetZip-->
	<element type="method">
		<source id="Office.ILicAgent.GetZip">
			<context kind="class">ILicAgent</context>
			<name>GetZip</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicAgent.Initialize-->
	<element type="method">
		<source id="Office.ILicAgent.Initialize">
			<context kind="class">ILicAgent</context>
			<name>Initialize</name>
			<type>VT_UI4</type>
			<parameter-list>
				<parameter>
					<type>VT_UI4</type>
					<name>dwBPC</name>
				</parameter>
				<parameter>
					<type>VT_UI4</type>
					<name>dwMode</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>bstrLicSource</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.IsCCRenewalCountry-->
	<element type="method">
		<source id="Office.ILicAgent.IsCCRenewalCountry">
			<context kind="class">ILicAgent</context>
			<name>IsCCRenewalCountry</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrCountryCode</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.IsUpgradeAvailable-->
	<element type="method">
		<source id="Office.ILicAgent.IsUpgradeAvailable">
			<context kind="class">ILicAgent</context>
			<name>IsUpgradeAvailable</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ILicAgent.SaveBillingInfo-->
	<element type="method">
		<source id="Office.ILicAgent.SaveBillingInfo">
			<context kind="class">ILicAgent</context>
			<name>SaveBillingInfo</name>
			<type>VT_UI4</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>bSave</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetAddress1-->
	<element type="method">
		<source id="Office.ILicAgent.SetAddress1">
			<context kind="class">ILicAgent</context>
			<name>SetAddress1</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetAddress2-->
	<element type="method">
		<source id="Office.ILicAgent.SetAddress2">
			<context kind="class">ILicAgent</context>
			<name>SetAddress2</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetBillingAddress1-->
	<element type="method">
		<source id="Office.ILicAgent.SetBillingAddress1">
			<context kind="class">ILicAgent</context>
			<name>SetBillingAddress1</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetBillingAddress2-->
	<element type="method">
		<source id="Office.ILicAgent.SetBillingAddress2">
			<context kind="class">ILicAgent</context>
			<name>SetBillingAddress2</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetBillingCity-->
	<element type="method">
		<source id="Office.ILicAgent.SetBillingCity">
			<context kind="class">ILicAgent</context>
			<name>SetBillingCity</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetBillingCountryCode-->
	<element type="method">
		<source id="Office.ILicAgent.SetBillingCountryCode">
			<context kind="class">ILicAgent</context>
			<name>SetBillingCountryCode</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetBillingFirstName-->
	<element type="method">
		<source id="Office.ILicAgent.SetBillingFirstName">
			<context kind="class">ILicAgent</context>
			<name>SetBillingFirstName</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetBillingLastName-->
	<element type="method">
		<source id="Office.ILicAgent.SetBillingLastName">
			<context kind="class">ILicAgent</context>
			<name>SetBillingLastName</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetBillingPhone-->
	<element type="method">
		<source id="Office.ILicAgent.SetBillingPhone">
			<context kind="class">ILicAgent</context>
			<name>SetBillingPhone</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetBillingState-->
	<element type="method">
		<source id="Office.ILicAgent.SetBillingState">
			<context kind="class">ILicAgent</context>
			<name>SetBillingState</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetBillingZip-->
	<element type="method">
		<source id="Office.ILicAgent.SetBillingZip">
			<context kind="class">ILicAgent</context>
			<name>SetBillingZip</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetCity-->
	<element type="method">
		<source id="Office.ILicAgent.SetCity">
			<context kind="class">ILicAgent</context>
			<name>SetCity</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetCountryCode-->
	<element type="method">
		<source id="Office.ILicAgent.SetCountryCode">
			<context kind="class">ILicAgent</context>
			<name>SetCountryCode</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetCountryDesc-->
	<element type="method">
		<source id="Office.ILicAgent.SetCountryDesc">
			<context kind="class">ILicAgent</context>
			<name>SetCountryDesc</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetCreditCardExpiryMonth-->
	<element type="method">
		<source id="Office.ILicAgent.SetCreditCardExpiryMonth">
			<context kind="class">ILicAgent</context>
			<name>SetCreditCardExpiryMonth</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>VT_UI4</type>
					<name>dwCCMonth</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetCreditCardExpiryYear-->
	<element type="method">
		<source id="Office.ILicAgent.SetCreditCardExpiryYear">
			<context kind="class">ILicAgent</context>
			<name>SetCreditCardExpiryYear</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>VT_UI4</type>
					<name>dwCCYear</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetCreditCardNumber-->
	<element type="method">
		<source id="Office.ILicAgent.SetCreditCardNumber">
			<context kind="class">ILicAgent</context>
			<name>SetCreditCardNumber</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrCCNumber</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetCreditCardType-->
	<element type="method">
		<source id="Office.ILicAgent.SetCreditCardType">
			<context kind="class">ILicAgent</context>
			<name>SetCreditCardType</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrCCCode</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetCurrencyOption-->
	<element type="method">
		<source id="Office.ILicAgent.SetCurrencyOption">
			<context kind="class">ILicAgent</context>
			<name>SetCurrencyOption</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>VT_UI4</type>
					<name>dwCurrencyOption</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetDisconnectOption-->
	<element type="method">
		<source id="Office.ILicAgent.SetDisconnectOption">
			<context kind="class">ILicAgent</context>
			<name>SetDisconnectOption</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>bNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetEmail-->
	<element type="method">
		<source id="Office.ILicAgent.SetEmail">
			<context kind="class">ILicAgent</context>
			<name>SetEmail</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetFirstName-->
	<element type="method">
		<source id="Office.ILicAgent.SetFirstName">
			<context kind="class">ILicAgent</context>
			<name>SetFirstName</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetIsoLanguage-->
	<element type="method">
		<source id="Office.ILicAgent.SetIsoLanguage">
			<context kind="class">ILicAgent</context>
			<name>SetIsoLanguage</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>VT_UI4</type>
					<name>dwNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetLastName-->
	<element type="method">
		<source id="Office.ILicAgent.SetLastName">
			<context kind="class">ILicAgent</context>
			<name>SetLastName</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetMSOffer-->
	<element type="method">
		<source id="Office.ILicAgent.SetMSOffer">
			<context kind="class">ILicAgent</context>
			<name>SetMSOffer</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetMSUpdate-->
	<element type="method">
		<source id="Office.ILicAgent.SetMSUpdate">
			<context kind="class">ILicAgent</context>
			<name>SetMSUpdate</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetOrgName-->
	<element type="method">
		<source id="Office.ILicAgent.SetOrgName">
			<context kind="class">ILicAgent</context>
			<name>SetOrgName</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetOtherOffer-->
	<element type="method">
		<source id="Office.ILicAgent.SetOtherOffer">
			<context kind="class">ILicAgent</context>
			<name>SetOtherOffer</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetPhone-->
	<element type="method">
		<source id="Office.ILicAgent.SetPhone">
			<context kind="class">ILicAgent</context>
			<name>SetPhone</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetState-->
	<element type="method">
		<source id="Office.ILicAgent.SetState">
			<context kind="class">ILicAgent</context>
			<name>SetState</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetVATNumber-->
	<element type="method">
		<source id="Office.ILicAgent.SetVATNumber">
			<context kind="class">ILicAgent</context>
			<name>SetVATNumber</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrVATNumber</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.SetZip-->
	<element type="method">
		<source id="Office.ILicAgent.SetZip">
			<context kind="class">ILicAgent</context>
			<name>SetZip</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrNewVal</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.VerifyCheckDigits-->
	<element type="method">
		<source id="Office.ILicAgent.VerifyCheckDigits">
			<context kind="class">ILicAgent</context>
			<name>VerifyCheckDigits</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrCIDIID</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicAgent.WantUpgrade-->
	<element type="method">
		<source id="Office.ILicAgent.WantUpgrade">
			<context kind="class">ILicAgent</context>
			<name>WantUpgrade</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>bWantUpgrade</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::ILicValidator-->
	<element type="class">
		<source id="Office.ILicValidator">
			<name>ILicValidator</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ILicValidator.Products {ReadOnly}-->
	<element type="property">
		<source id="Office.ILicValidator.Products">
			<context kind="class">ILicValidator</context>
			<name>Products</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::ILicValidator.Selection-->
	<element type="property">
		<source id="Office.ILicValidator.Selection">
			<context kind="class">ILicValidator</context>
			<name>Selection</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::ILicWizExternal-->
	<element type="class">
		<source id="Office.ILicWizExternal">
			<name>ILicWizExternal</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ILicWizExternal.AnimationEnabled {ReadOnly}-->
	<element type="property">
		<source id="Office.ILicWizExternal.AnimationEnabled">
			<context kind="class">ILicWizExternal</context>
			<name>AnimationEnabled</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ILicWizExternal.Context {ReadOnly}-->
	<element type="property">
		<source id="Office.ILicWizExternal.Context">
			<context kind="class">ILicWizExternal</context>
			<name>Context</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ILicWizExternal.CountryInfo {ReadOnly}-->
	<element type="property">
		<source id="Office.ILicWizExternal.CountryInfo">
			<context kind="class">ILicWizExternal</context>
			<name>CountryInfo</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicWizExternal.DepositPidKey-->
	<element type="method">
		<source id="Office.ILicWizExternal.DepositPidKey">
			<context kind="class">ILicWizExternal</context>
			<name>DepositPidKey</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrKey</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>fMORW</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicWizExternal.DisableVORWReminder-->
	<element type="method">
		<source id="Office.ILicWizExternal.DisableVORWReminder">
			<context kind="class">ILicWizExternal</context>
			<name>DisableVORWReminder</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>BPC</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicWizExternal.FormatDate-->
	<element type="method">
		<source id="Office.ILicWizExternal.FormatDate">
			<context kind="class">ILicWizExternal</context>
			<name>FormatDate</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>java.util.Date</type>
					<name>date</name>
				</parameter>
				<parameter optional="true">
					<type>String</type>
					<name>pFormat</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicWizExternal.GetConnectedState-->
	<element type="method">
		<source id="Office.ILicWizExternal.GetConnectedState">
			<context kind="class">ILicWizExternal</context>
			<name>GetConnectedState</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ILicWizExternal.InternetDisconnect-->
	<element type="method">
		<source id="Office.ILicWizExternal.InternetDisconnect">
			<context kind="class">ILicWizExternal</context>
			<name>InternetDisconnect</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ILicWizExternal.InvokeDateTimeApplet-->
	<element type="method">
		<source id="Office.ILicWizExternal.InvokeDateTimeApplet">
			<context kind="class">ILicWizExternal</context>
			<name>InvokeDateTimeApplet</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ILicWizExternal.LicAgent {ReadOnly}-->
	<element type="property">
		<source id="Office.ILicWizExternal.LicAgent">
			<context kind="class">ILicWizExternal</context>
			<name>LicAgent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::ILicWizExternal.MsoAlert-->
	<element type="method">
		<source id="Office.ILicWizExternal.MsoAlert">
			<context kind="class">ILicWizExternal</context>
			<name>MsoAlert</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrText</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>bstrButtons</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>bstrIcon</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ILicWizExternal.OfficeOnTheWebUrl {ReadOnly}-->
	<element type="property">
		<source id="Office.ILicWizExternal.OfficeOnTheWebUrl">
			<context kind="class">ILicWizExternal</context>
			<name>OfficeOnTheWebUrl</name>
			<type>String</type>
		</source>
	</element>
	<!--method::ILicWizExternal.OpenInDefaultBrowser-->
	<element type="method">
		<source id="Office.ILicWizExternal.OpenInDefaultBrowser">
			<context kind="class">ILicWizExternal</context>
			<name>OpenInDefaultBrowser</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrUrl</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicWizExternal.PrintHtmlDocument-->
	<element type="method">
		<source id="Office.ILicWizExternal.PrintHtmlDocument">
			<context kind="class">ILicWizExternal</context>
			<name>PrintHtmlDocument</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>IUnknown</type>
					<name>punkHtmlDoc</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicWizExternal.ResetPID-->
	<element type="method">
		<source id="Office.ILicWizExternal.ResetPID">
			<context kind="class">ILicWizExternal</context>
			<name>ResetPID</name>
			<type>void</type>
		</source>
	</element>
	<!--method::ILicWizExternal.ResignDpc-->
	<element type="method">
		<source id="Office.ILicWizExternal.ResignDpc">
			<context kind="class">ILicWizExternal</context>
			<name>ResignDpc</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrProductCode</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicWizExternal.SaveReceipt-->
	<element type="method">
		<source id="Office.ILicWizExternal.SaveReceipt">
			<context kind="class">ILicWizExternal</context>
			<name>SaveReceipt</name>
			<type>String</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrReceipt</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicWizExternal.SetDialogSize-->
	<element type="method">
		<source id="Office.ILicWizExternal.SetDialogSize">
			<context kind="class">ILicWizExternal</context>
			<name>SetDialogSize</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>dx</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>dy</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicWizExternal.ShowHelp-->
	<element type="method">
		<source id="Office.ILicWizExternal.ShowHelp">
			<context kind="class">ILicWizExternal</context>
			<name>ShowHelp</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>pvarId</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicWizExternal.SortSelectOptions-->
	<element type="method">
		<source id="Office.ILicWizExternal.SortSelectOptions">
			<context kind="class">ILicWizExternal</context>
			<name>SortSelectOptions</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Object</type>
					<name>pdispSelect</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicWizExternal.Terminate-->
	<element type="method">
		<source id="Office.ILicWizExternal.Terminate">
			<context kind="class">ILicWizExternal</context>
			<name>Terminate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ILicWizExternal.Validator {ReadOnly}-->
	<element type="property">
		<source id="Office.ILicWizExternal.Validator">
			<context kind="class">ILicWizExternal</context>
			<name>Validator</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::ILicWizExternal.VerifyClock-->
	<element type="method">
		<source id="Office.ILicWizExternal.VerifyClock">
			<context kind="class">ILicWizExternal</context>
			<name>VerifyClock</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>lMode</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ILicWizExternal.WriteLog-->
	<element type="method">
		<source id="Office.ILicWizExternal.WriteLog">
			<context kind="class">ILicWizExternal</context>
			<name>WriteLog</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>bstrMessage</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::IMsoDiagram-->
	<element type="class">
		<source id="Office.IMsoDiagram">
			<name>IMsoDiagram</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::IMsoDiagram.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.IMsoDiagram.Application">
			<context kind="class">IMsoDiagram</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::IMsoDiagram.AutoFormat-->
	<element type="property">
		<source id="Office.IMsoDiagram.AutoFormat">
			<context kind="class">IMsoDiagram</context>
			<name>AutoFormat</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::IMsoDiagram.AutoLayout-->
	<element type="property">
		<source id="Office.IMsoDiagram.AutoLayout">
			<context kind="class">IMsoDiagram</context>
			<name>AutoLayout</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::IMsoDiagram.Convert-->
	<element type="method">
		<source id="Office.IMsoDiagram.Convert">
			<context kind="class">IMsoDiagram</context>
			<name>Convert</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Type</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IMsoDiagram.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.IMsoDiagram.Creator">
			<context kind="class">IMsoDiagram</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::IMsoDiagram.FitText-->
	<element type="method">
		<source id="Office.IMsoDiagram.FitText">
			<context kind="class">IMsoDiagram</context>
			<name>FitText</name>
			<type>void</type>
		</source>
	</element>
	<!--property::IMsoDiagram.Nodes {ReadOnly}-->
	<element type="property">
		<source id="Office.IMsoDiagram.Nodes">
			<context kind="class">IMsoDiagram</context>
			<name>Nodes</name>
			<type>DiagramNodes</type>
		</source>
	</element>
	<!--property::IMsoDiagram.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.IMsoDiagram.Parent">
			<context kind="class">IMsoDiagram</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::IMsoDiagram.Reverse-->
	<element type="property">
		<source id="Office.IMsoDiagram.Reverse">
			<context kind="class">IMsoDiagram</context>
			<name>Reverse</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::IMsoDiagram.Type {ReadOnly}-->
	<element type="property">
		<source id="Office.IMsoDiagram.Type">
			<context kind="class">IMsoDiagram</context>
			<name>Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::IMsoDispCagNotifySink-->
	<element type="class">
		<source id="Office.IMsoDispCagNotifySink">
			<name>IMsoDispCagNotifySink</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::IMsoDispCagNotifySink.InsertClip-->
	<element type="method">
		<source id="Office.IMsoDispCagNotifySink.InsertClip">
			<context kind="class">IMsoDispCagNotifySink</context>
			<name>InsertClip</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>IUnknown</type>
					<name>pClipMoniker</name>
				</parameter>
				<parameter>
					<type>IUnknown</type>
					<name>pItemMoniker</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::IMsoDispCagNotifySink.WindowIsClosing-->
	<element type="method">
		<source id="Office.IMsoDispCagNotifySink.WindowIsClosing">
			<context kind="class">IMsoDispCagNotifySink</context>
			<name>WindowIsClosing</name>
			<type>void</type>
		</source>
	</element>
	<!--Class::IMsoEServicesDialog-->
	<element type="class">
		<source id="Office.IMsoEServicesDialog">
			<name>IMsoEServicesDialog</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::IMsoEServicesDialog.AddTrustedDomain-->
	<element type="method">
		<source id="Office.IMsoEServicesDialog.AddTrustedDomain">
			<context kind="class">IMsoEServicesDialog</context>
			<name>AddTrustedDomain</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Domain</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IMsoEServicesDialog.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.IMsoEServicesDialog.Application">
			<context kind="class">IMsoEServicesDialog</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::IMsoEServicesDialog.ApplicationName {ReadOnly}-->
	<element type="property">
		<source id="Office.IMsoEServicesDialog.ApplicationName">
			<context kind="class">IMsoEServicesDialog</context>
			<name>ApplicationName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::IMsoEServicesDialog.ClipArt {ReadOnly}-->
	<element type="property">
		<source id="Office.IMsoEServicesDialog.ClipArt">
			<context kind="class">IMsoEServicesDialog</context>
			<name>ClipArt</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::IMsoEServicesDialog.Close-->
	<element type="method">
		<source id="Office.IMsoEServicesDialog.Close">
			<context kind="class">IMsoEServicesDialog</context>
			<name>Close</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>boolean</type>
					<name>ApplyWebComponentChanges</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::IMsoEServicesDialog.WebComponent {ReadOnly}-->
	<element type="property">
		<source id="Office.IMsoEServicesDialog.WebComponent">
			<context kind="class">IMsoEServicesDialog</context>
			<name>WebComponent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::LanguageSettings-->
	<element type="class">
		<source id="Office.LanguageSettings">
			<name>LanguageSettings</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::LanguageSettings.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.LanguageSettings.Application">
			<context kind="class">LanguageSettings</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::LanguageSettings.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.LanguageSettings.Creator">
			<context kind="class">LanguageSettings</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::LanguageSettings.LanguageID {ReadOnly}-->
	<element type="property">
		<source id="Office.LanguageSettings.LanguageID">
			<context kind="class">LanguageSettings</context>
			<name>LanguageID</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Id</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::LanguageSettings.LanguagePreferredForEditing {ReadOnly}-->
	<element type="property">
		<source id="Office.LanguageSettings.LanguagePreferredForEditing">
			<context kind="class">LanguageSettings</context>
			<name>LanguagePreferredForEditing</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>lid</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::LanguageSettings.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.LanguageSettings.Parent">
			<context kind="class">LanguageSettings</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::LineFormat.InsetPen-->
	<element type="property">
		<source id="Office.LineFormat.InsetPen">
			<context kind="class">LineFormat</context>
			<name>InsetPen</name>
			<type>Integer</type>
		</source>
	</element>
	<!--enum::MailFormat  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MailFormat">
			<name>MailFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::mfHTML {Constant}-->
	<element type="constant">
		<source id="Office.MailFormat.mfHTML">
			<context kind="enumeration">MailFormat</context>
			<name>mfHTML</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::mfPlainText {Constant}-->
	<element type="constant">
		<source id="Office.MailFormat.mfPlainText">
			<context kind="enumeration">MailFormat</context>
			<name>mfPlainText</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::mfRTF {Constant}-->
	<element type="constant">
		<source id="Office.MailFormat.mfRTF">
			<context kind="enumeration">MailFormat</context>
			<name>mfRTF</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoAlertButtonType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoAlertButtonType">
			<name>MsoAlertButtonType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertButtonAbortRetryIgnore {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertButtonType.msoAlertButtonAbortRetryIgnore">
			<context kind="enumeration">MsoAlertButtonType</context>
			<name>msoAlertButtonAbortRetryIgnore</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertButtonOK {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertButtonType.msoAlertButtonOK">
			<context kind="enumeration">MsoAlertButtonType</context>
			<name>msoAlertButtonOK</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertButtonOKCancel {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertButtonType.msoAlertButtonOKCancel">
			<context kind="enumeration">MsoAlertButtonType</context>
			<name>msoAlertButtonOKCancel</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertButtonRetryCancel {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertButtonType.msoAlertButtonRetryCancel">
			<context kind="enumeration">MsoAlertButtonType</context>
			<name>msoAlertButtonRetryCancel</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertButtonYesAllNoCancel {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertButtonType.msoAlertButtonYesAllNoCancel">
			<context kind="enumeration">MsoAlertButtonType</context>
			<name>msoAlertButtonYesAllNoCancel</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertButtonYesNo {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertButtonType.msoAlertButtonYesNo">
			<context kind="enumeration">MsoAlertButtonType</context>
			<name>msoAlertButtonYesNo</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertButtonYesNoCancel {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertButtonType.msoAlertButtonYesNoCancel">
			<context kind="enumeration">MsoAlertButtonType</context>
			<name>msoAlertButtonYesNoCancel</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoAlertCancelType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoAlertCancelType">
			<name>MsoAlertCancelType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertCancelDefault {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertCancelType.msoAlertCancelDefault">
			<context kind="enumeration">MsoAlertCancelType</context>
			<name>msoAlertCancelDefault</name>
			<value>-1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertCancelFifth {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertCancelType.msoAlertCancelFifth">
			<context kind="enumeration">MsoAlertCancelType</context>
			<name>msoAlertCancelFifth</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertCancelFirst {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertCancelType.msoAlertCancelFirst">
			<context kind="enumeration">MsoAlertCancelType</context>
			<name>msoAlertCancelFirst</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertCancelFourth {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertCancelType.msoAlertCancelFourth">
			<context kind="enumeration">MsoAlertCancelType</context>
			<name>msoAlertCancelFourth</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertCancelSecond {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertCancelType.msoAlertCancelSecond">
			<context kind="enumeration">MsoAlertCancelType</context>
			<name>msoAlertCancelSecond</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertCancelThird {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertCancelType.msoAlertCancelThird">
			<context kind="enumeration">MsoAlertCancelType</context>
			<name>msoAlertCancelThird</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoAlertDefaultType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoAlertDefaultType">
			<name>MsoAlertDefaultType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertDefaultFifth {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertDefaultType.msoAlertDefaultFifth">
			<context kind="enumeration">MsoAlertDefaultType</context>
			<name>msoAlertDefaultFifth</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertDefaultFirst {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertDefaultType.msoAlertDefaultFirst">
			<context kind="enumeration">MsoAlertDefaultType</context>
			<name>msoAlertDefaultFirst</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertDefaultFourth {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertDefaultType.msoAlertDefaultFourth">
			<context kind="enumeration">MsoAlertDefaultType</context>
			<name>msoAlertDefaultFourth</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertDefaultSecond {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertDefaultType.msoAlertDefaultSecond">
			<context kind="enumeration">MsoAlertDefaultType</context>
			<name>msoAlertDefaultSecond</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertDefaultThird {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertDefaultType.msoAlertDefaultThird">
			<context kind="enumeration">MsoAlertDefaultType</context>
			<name>msoAlertDefaultThird</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoAlertIconType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoAlertIconType">
			<name>MsoAlertIconType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertIconCritical {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertIconType.msoAlertIconCritical">
			<context kind="enumeration">MsoAlertIconType</context>
			<name>msoAlertIconCritical</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertIconInfo {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertIconType.msoAlertIconInfo">
			<context kind="enumeration">MsoAlertIconType</context>
			<name>msoAlertIconInfo</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertIconNoIcon {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertIconType.msoAlertIconNoIcon">
			<context kind="enumeration">MsoAlertIconType</context>
			<name>msoAlertIconNoIcon</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertIconQuery {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertIconType.msoAlertIconQuery">
			<context kind="enumeration">MsoAlertIconType</context>
			<name>msoAlertIconQuery</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlertIconWarning {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlertIconType.msoAlertIconWarning">
			<context kind="enumeration">MsoAlertIconType</context>
			<name>msoAlertIconWarning</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoAlignCmd  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoAlignCmd">
			<name>MsoAlignCmd</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlignBottoms {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlignCmd.msoAlignBottoms">
			<context kind="enumeration">MsoAlignCmd</context>
			<name>msoAlignBottoms</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlignCenters {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlignCmd.msoAlignCenters">
			<context kind="enumeration">MsoAlignCmd</context>
			<name>msoAlignCenters</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlignLefts {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlignCmd.msoAlignLefts">
			<context kind="enumeration">MsoAlignCmd</context>
			<name>msoAlignLefts</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlignMiddles {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlignCmd.msoAlignMiddles">
			<context kind="enumeration">MsoAlignCmd</context>
			<name>msoAlignMiddles</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlignRights {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlignCmd.msoAlignRights">
			<context kind="enumeration">MsoAlignCmd</context>
			<name>msoAlignRights</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAlignTops {Constant}-->
	<element type="constant">
		<source id="Office.MsoAlignCmd.msoAlignTops">
			<context kind="enumeration">MsoAlignCmd</context>
			<name>msoAlignTops</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoAnimationType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoAnimationType">
			<name>MsoAnimationType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationAppear {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationAppear">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationAppear</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationBeginSpeaking {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationBeginSpeaking">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationBeginSpeaking</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationCharacterSuccessMajor {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationCharacterSuccessMajor">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationCharacterSuccessMajor</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationCheckingSomething {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationCheckingSomething">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationCheckingSomething</name>
			<value>103</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationDisappear {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationDisappear">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationDisappear</name>
			<value>31</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationEmptyTrash {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationEmptyTrash">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationEmptyTrash</name>
			<value>116</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationGestureDown {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationGestureDown">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationGestureDown</name>
			<value>113</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationGestureLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationGestureLeft">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationGestureLeft</name>
			<value>114</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationGestureRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationGestureRight">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationGestureRight</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationGestureUp {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationGestureUp">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationGestureUp</name>
			<value>115</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationGetArtsy {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationGetArtsy">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationGetArtsy</name>
			<value>100</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationGetAttentionMajor {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationGetAttentionMajor">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationGetAttentionMajor</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationGetAttentionMinor {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationGetAttentionMinor">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationGetAttentionMinor</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationGetTechy {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationGetTechy">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationGetTechy</name>
			<value>101</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationGetWizardy {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationGetWizardy">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationGetWizardy</name>
			<value>102</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationGoodbye {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationGoodbye">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationGoodbye</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationGreeting {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationGreeting">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationGreeting</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationIdle {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationIdle">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationIdle</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationListensToComputer {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationListensToComputer">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationListensToComputer</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationLookDown {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationLookDown">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationLookDown</name>
			<value>104</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationLookDownLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationLookDownLeft">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationLookDownLeft</name>
			<value>105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationLookDownRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationLookDownRight">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationLookDownRight</name>
			<value>106</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationLookLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationLookLeft">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationLookLeft</name>
			<value>107</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationLookRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationLookRight">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationLookRight</name>
			<value>108</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationLookUp {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationLookUp">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationLookUp</name>
			<value>109</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationLookUpLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationLookUpLeft">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationLookUpLeft</name>
			<value>110</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationLookUpRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationLookUpRight">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationLookUpRight</name>
			<value>111</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationPrinting {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationPrinting">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationPrinting</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationRestPose {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationRestPose">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationRestPose</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationSaving {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationSaving">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationSaving</name>
			<value>112</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationSearching {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationSearching">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationSearching</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationSendingMail {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationSendingMail">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationSendingMail</name>
			<value>25</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationThinking {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationThinking">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationThinking</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationWorkingAtSomething {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationWorkingAtSomething">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationWorkingAtSomething</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnimationWritingNotingSomething {Constant}-->
	<element type="constant">
		<source id="Office.MsoAnimationType.msoAnimationWritingNotingSomething">
			<context kind="enumeration">MsoAnimationType</context>
			<name>msoAnimationWritingNotingSomething</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoAppLanguageID  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoAppLanguageID">
			<name>MsoAppLanguageID</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDExeMode {Constant}-->
	<element type="constant">
		<source id="Office.MsoAppLanguageID.msoLanguageIDExeMode">
			<context kind="enumeration">MsoAppLanguageID</context>
			<name>msoLanguageIDExeMode</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDHelp {Constant}-->
	<element type="constant">
		<source id="Office.MsoAppLanguageID.msoLanguageIDHelp">
			<context kind="enumeration">MsoAppLanguageID</context>
			<name>msoLanguageIDHelp</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDInstall {Constant}-->
	<element type="constant">
		<source id="Office.MsoAppLanguageID.msoLanguageIDInstall">
			<context kind="enumeration">MsoAppLanguageID</context>
			<name>msoLanguageIDInstall</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDUI {Constant}-->
	<element type="constant">
		<source id="Office.MsoAppLanguageID.msoLanguageIDUI">
			<context kind="enumeration">MsoAppLanguageID</context>
			<name>msoLanguageIDUI</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDUIPrevious {Constant}-->
	<element type="constant">
		<source id="Office.MsoAppLanguageID.msoLanguageIDUIPrevious">
			<context kind="enumeration">MsoAppLanguageID</context>
			<name>msoLanguageIDUIPrevious</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoArrowheadLength  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoArrowheadLength">
			<name>MsoArrowheadLength</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadLengthMedium {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadLength.msoArrowheadLengthMedium">
			<context kind="enumeration">MsoArrowheadLength</context>
			<name>msoArrowheadLengthMedium</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadLengthMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadLength.msoArrowheadLengthMixed">
			<context kind="enumeration">MsoArrowheadLength</context>
			<name>msoArrowheadLengthMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadLong {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadLength.msoArrowheadLong">
			<context kind="enumeration">MsoArrowheadLength</context>
			<name>msoArrowheadLong</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadShort {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadLength.msoArrowheadShort">
			<context kind="enumeration">MsoArrowheadLength</context>
			<name>msoArrowheadShort</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoArrowheadStyle  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoArrowheadStyle">
			<name>MsoArrowheadStyle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadDiamond {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadStyle.msoArrowheadDiamond">
			<context kind="enumeration">MsoArrowheadStyle</context>
			<name>msoArrowheadDiamond</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadStyle.msoArrowheadNone">
			<context kind="enumeration">MsoArrowheadStyle</context>
			<name>msoArrowheadNone</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadOpen {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadStyle.msoArrowheadOpen">
			<context kind="enumeration">MsoArrowheadStyle</context>
			<name>msoArrowheadOpen</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadOval {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadStyle.msoArrowheadOval">
			<context kind="enumeration">MsoArrowheadStyle</context>
			<name>msoArrowheadOval</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadStealth {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadStyle.msoArrowheadStealth">
			<context kind="enumeration">MsoArrowheadStyle</context>
			<name>msoArrowheadStealth</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadStyleMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadStyle.msoArrowheadStyleMixed">
			<context kind="enumeration">MsoArrowheadStyle</context>
			<name>msoArrowheadStyleMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadTriangle {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadStyle.msoArrowheadTriangle">
			<context kind="enumeration">MsoArrowheadStyle</context>
			<name>msoArrowheadTriangle</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoArrowheadWidth  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoArrowheadWidth">
			<name>MsoArrowheadWidth</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadNarrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadWidth.msoArrowheadNarrow">
			<context kind="enumeration">MsoArrowheadWidth</context>
			<name>msoArrowheadNarrow</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadWide {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadWidth.msoArrowheadWide">
			<context kind="enumeration">MsoArrowheadWidth</context>
			<name>msoArrowheadWide</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadWidthMedium {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadWidth.msoArrowheadWidthMedium">
			<context kind="enumeration">MsoArrowheadWidth</context>
			<name>msoArrowheadWidthMedium</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoArrowheadWidthMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoArrowheadWidth.msoArrowheadWidthMixed">
			<context kind="enumeration">MsoArrowheadWidth</context>
			<name>msoArrowheadWidthMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoAutomationSecurity  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoAutomationSecurity">
			<name>MsoAutomationSecurity</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAutomationSecurityByUI {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutomationSecurity.msoAutomationSecurityByUI">
			<context kind="enumeration">MsoAutomationSecurity</context>
			<name>msoAutomationSecurityByUI</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAutomationSecurityForceDisable {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutomationSecurity.msoAutomationSecurityForceDisable">
			<context kind="enumeration">MsoAutomationSecurity</context>
			<name>msoAutomationSecurityForceDisable</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAutomationSecurityLow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutomationSecurity.msoAutomationSecurityLow">
			<context kind="enumeration">MsoAutomationSecurity</context>
			<name>msoAutomationSecurityLow</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoAutoShapeType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoAutoShapeType">
			<name>MsoAutoShapeType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShape16pointStar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShape16pointStar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShape16pointStar</name>
			<value>94</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShape24pointStar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShape24pointStar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShape24pointStar</name>
			<value>95</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShape32pointStar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShape32pointStar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShape32pointStar</name>
			<value>96</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShape4pointStar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShape4pointStar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShape4pointStar</name>
			<value>91</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShape5pointStar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShape5pointStar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShape5pointStar</name>
			<value>92</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShape8pointStar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShape8pointStar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShape8pointStar</name>
			<value>93</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeActionButtonBackorPrevious {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeActionButtonBackorPrevious">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeActionButtonBackorPrevious</name>
			<value>129</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeActionButtonBeginning {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeActionButtonBeginning">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeActionButtonBeginning</name>
			<value>131</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeActionButtonCustom {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeActionButtonCustom">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeActionButtonCustom</name>
			<value>125</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeActionButtonDocument {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeActionButtonDocument">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeActionButtonDocument</name>
			<value>134</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeActionButtonEnd {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeActionButtonEnd">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeActionButtonEnd</name>
			<value>132</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeActionButtonForwardorNext {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeActionButtonForwardorNext">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeActionButtonForwardorNext</name>
			<value>130</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeActionButtonHelp {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeActionButtonHelp">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeActionButtonHelp</name>
			<value>127</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeActionButtonHome {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeActionButtonHome">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeActionButtonHome</name>
			<value>126</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeActionButtonInformation {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeActionButtonInformation">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeActionButtonInformation</name>
			<value>128</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeActionButtonMovie {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeActionButtonMovie">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeActionButtonMovie</name>
			<value>136</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeActionButtonReturn {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeActionButtonReturn">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeActionButtonReturn</name>
			<value>133</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeActionButtonSound {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeActionButtonSound">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeActionButtonSound</name>
			<value>135</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeArc {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeArc">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeArc</name>
			<value>25</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeBalloon {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeBalloon">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeBalloon</name>
			<value>137</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeBentArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeBentArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeBentArrow</name>
			<value>41</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeBentUpArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeBentUpArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeBentUpArrow</name>
			<value>44</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeBevel {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeBevel">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeBevel</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeBlockArc {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeBlockArc">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeBlockArc</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeCan {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeCan">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeCan</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeChevron {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeChevron">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeChevron</name>
			<value>52</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeCircularArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeCircularArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeCircularArrow</name>
			<value>60</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeCloudCallout {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeCloudCallout">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeCloudCallout</name>
			<value>108</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeCross {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeCross">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeCross</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeCube {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeCube">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeCube</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeCurvedDownArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeCurvedDownArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeCurvedDownArrow</name>
			<value>48</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeCurvedDownRibbon {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeCurvedDownRibbon">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeCurvedDownRibbon</name>
			<value>100</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeCurvedLeftArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeCurvedLeftArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeCurvedLeftArrow</name>
			<value>46</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeCurvedRightArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeCurvedRightArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeCurvedRightArrow</name>
			<value>45</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeCurvedUpArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeCurvedUpArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeCurvedUpArrow</name>
			<value>47</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeCurvedUpRibbon {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeCurvedUpRibbon">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeCurvedUpRibbon</name>
			<value>99</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeDiamond {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeDiamond">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeDiamond</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeDonut {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeDonut">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeDonut</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeDoubleBrace {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeDoubleBrace">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeDoubleBrace</name>
			<value>27</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeDoubleBracket {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeDoubleBracket">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeDoubleBracket</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeDoubleWave {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeDoubleWave">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeDoubleWave</name>
			<value>104</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeDownArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeDownArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeDownArrow</name>
			<value>36</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeDownArrowCallout {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeDownArrowCallout">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeDownArrowCallout</name>
			<value>56</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeDownRibbon {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeDownRibbon">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeDownRibbon</name>
			<value>98</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeExplosion1 {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeExplosion1">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeExplosion1</name>
			<value>89</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeExplosion2 {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeExplosion2">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeExplosion2</name>
			<value>90</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartAlternateProcess {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartAlternateProcess">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartAlternateProcess</name>
			<value>62</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartCard {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartCard">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartCard</name>
			<value>75</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartCollate {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartCollate">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartCollate</name>
			<value>79</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartConnector {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartConnector">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartConnector</name>
			<value>73</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartData {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartData">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartData</name>
			<value>64</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartDecision {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartDecision">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartDecision</name>
			<value>63</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartDelay {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartDelay">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartDelay</name>
			<value>84</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartDirectAccessStorage {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartDirectAccessStorage">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartDirectAccessStorage</name>
			<value>87</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartDisplay {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartDisplay">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartDisplay</name>
			<value>88</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartDocument {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartDocument">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartDocument</name>
			<value>67</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartExtract {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartExtract">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartExtract</name>
			<value>81</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartInternalStorage {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartInternalStorage">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartInternalStorage</name>
			<value>66</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartMagneticDisk {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartMagneticDisk">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartMagneticDisk</name>
			<value>86</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartManualInput {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartManualInput">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartManualInput</name>
			<value>71</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartManualOperation {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartManualOperation">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartManualOperation</name>
			<value>72</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartMerge {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartMerge">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartMerge</name>
			<value>82</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartMultidocument {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartMultidocument">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartMultidocument</name>
			<value>68</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartOffpageConnector {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartOffpageConnector">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartOffpageConnector</name>
			<value>74</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartOr {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartOr">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartOr</name>
			<value>78</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartPredefinedProcess {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartPredefinedProcess">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartPredefinedProcess</name>
			<value>65</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartPreparation {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartPreparation">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartPreparation</name>
			<value>70</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartProcess {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartProcess">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartProcess</name>
			<value>61</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartPunchedTape {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartPunchedTape">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartPunchedTape</name>
			<value>76</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartSequentialAccessStorage {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartSequentialAccessStorage">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartSequentialAccessStorage</name>
			<value>85</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartSort {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartSort">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartSort</name>
			<value>80</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartStoredData {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartStoredData">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartStoredData</name>
			<value>83</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartSummingJunction {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartSummingJunction">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartSummingJunction</name>
			<value>77</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFlowchartTerminator {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFlowchartTerminator">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFlowchartTerminator</name>
			<value>69</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeFoldedCorner {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeFoldedCorner">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeFoldedCorner</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeHeart {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeHeart">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeHeart</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeHexagon {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeHexagon">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeHexagon</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeHorizontalScroll {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeHorizontalScroll">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeHorizontalScroll</name>
			<value>102</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeIsoscelesTriangle {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeIsoscelesTriangle">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeIsoscelesTriangle</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLeftArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLeftArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLeftArrow</name>
			<value>34</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLeftArrowCallout {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLeftArrowCallout">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLeftArrowCallout</name>
			<value>54</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLeftBrace {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLeftBrace">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLeftBrace</name>
			<value>31</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLeftBracket {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLeftBracket">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLeftBracket</name>
			<value>29</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLeftRightArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLeftRightArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLeftRightArrow</name>
			<value>37</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLeftRightArrowCallout {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLeftRightArrowCallout">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLeftRightArrowCallout</name>
			<value>57</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLeftRightUpArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLeftRightUpArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLeftRightUpArrow</name>
			<value>40</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLeftUpArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLeftUpArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLeftUpArrow</name>
			<value>43</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLightningBolt {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLightningBolt">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLightningBolt</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout1 {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout1">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout1</name>
			<value>109</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout1AccentBar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout1AccentBar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout1AccentBar</name>
			<value>113</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout1BorderandAccentBar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout1BorderandAccentBar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout1BorderandAccentBar</name>
			<value>121</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout1NoBorder {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout1NoBorder">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout1NoBorder</name>
			<value>117</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout2 {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout2">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout2</name>
			<value>110</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout2AccentBar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout2AccentBar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout2AccentBar</name>
			<value>114</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout2BorderandAccentBar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout2BorderandAccentBar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout2BorderandAccentBar</name>
			<value>122</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout2NoBorder {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout2NoBorder">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout2NoBorder</name>
			<value>118</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout3 {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout3">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout3</name>
			<value>111</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout3AccentBar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout3AccentBar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout3AccentBar</name>
			<value>115</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout3BorderandAccentBar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout3BorderandAccentBar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout3BorderandAccentBar</name>
			<value>123</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout3NoBorder {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout3NoBorder">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout3NoBorder</name>
			<value>119</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout4 {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout4">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout4</name>
			<value>112</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout4AccentBar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout4AccentBar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout4AccentBar</name>
			<value>116</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout4BorderandAccentBar {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout4BorderandAccentBar">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout4BorderandAccentBar</name>
			<value>124</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeLineCallout4NoBorder {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeLineCallout4NoBorder">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeLineCallout4NoBorder</name>
			<value>120</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeMixed">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeMoon {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeMoon">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeMoon</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeNoSymbol {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeNoSymbol">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeNoSymbol</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeNotchedRightArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeNotchedRightArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeNotchedRightArrow</name>
			<value>50</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeNotPrimitive {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeNotPrimitive">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeNotPrimitive</name>
			<value>138</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeOctagon {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeOctagon">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeOctagon</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeOval {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeOval">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeOval</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeOvalCallout {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeOvalCallout">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeOvalCallout</name>
			<value>107</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeParallelogram {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeParallelogram">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeParallelogram</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapePentagon {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapePentagon">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapePentagon</name>
			<value>51</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapePlaque {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapePlaque">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapePlaque</name>
			<value>28</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeQuadArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeQuadArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeQuadArrow</name>
			<value>39</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeQuadArrowCallout {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeQuadArrowCallout">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeQuadArrowCallout</name>
			<value>59</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeRectangle {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeRectangle">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeRectangle</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeRectangularCallout {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeRectangularCallout">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeRectangularCallout</name>
			<value>105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeRegularPentagon {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeRegularPentagon">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeRegularPentagon</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeRightArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeRightArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeRightArrow</name>
			<value>33</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeRightArrowCallout {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeRightArrowCallout">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeRightArrowCallout</name>
			<value>53</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeRightBrace {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeRightBrace">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeRightBrace</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeRightBracket {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeRightBracket">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeRightBracket</name>
			<value>30</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeRightTriangle {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeRightTriangle">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeRightTriangle</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeRoundedRectangle {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeRoundedRectangle">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeRoundedRectangle</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeRoundedRectangularCallout {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeRoundedRectangularCallout">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeRoundedRectangularCallout</name>
			<value>106</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeSmileyFace {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeSmileyFace">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeSmileyFace</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeStripedRightArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeStripedRightArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeStripedRightArrow</name>
			<value>49</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeSun {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeSun">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeSun</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeTrapezoid {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeTrapezoid">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeTrapezoid</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeUpArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeUpArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeUpArrow</name>
			<value>35</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeUpArrowCallout {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeUpArrowCallout">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeUpArrowCallout</name>
			<value>55</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeUpDownArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeUpDownArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeUpDownArrow</name>
			<value>38</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeUpDownArrowCallout {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeUpDownArrowCallout">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeUpDownArrowCallout</name>
			<value>58</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeUpRibbon {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeUpRibbon">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeUpRibbon</name>
			<value>97</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeUTurnArrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeUTurnArrow">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeUTurnArrow</name>
			<value>42</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeVerticalScroll {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeVerticalScroll">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeVerticalScroll</name>
			<value>101</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeWave {Constant}-->
	<element type="constant">
		<source id="Office.MsoAutoShapeType.msoShapeWave">
			<context kind="enumeration">MsoAutoShapeType</context>
			<name>msoShapeWave</name>
			<value>103</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoBalloonButtonType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoBalloonButtonType">
			<name>MsoBalloonButtonType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonAbort {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonAbort">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonAbort</name>
			<value>-8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonBack {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonBack">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonBack</name>
			<value>-5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonCancel {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonCancel">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonCancel</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonClose {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonClose">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonClose</name>
			<value>-12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonIgnore {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonIgnore">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonIgnore</name>
			<value>-9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonNext {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonNext">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonNext</name>
			<value>-6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonNo {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonNo">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonNo</name>
			<value>-4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonNull {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonNull">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonNull</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonOK {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonOK">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonOK</name>
			<value>-1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonOptions {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonOptions">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonOptions</name>
			<value>-14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonRetry {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonRetry">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonRetry</name>
			<value>-7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonSearch {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonSearch">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonSearch</name>
			<value>-10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonSnooze {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonSnooze">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonSnooze</name>
			<value>-11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonTips {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonTips">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonTips</name>
			<value>-13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonYes {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonYes">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonYes</name>
			<value>-3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonButtonYesToAll {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonButtonType.msoBalloonButtonYesToAll">
			<context kind="enumeration">MsoBalloonButtonType</context>
			<name>msoBalloonButtonYesToAll</name>
			<value>-15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoBalloonErrorType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoBalloonErrorType">
			<name>MsoBalloonErrorType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonErrorBadCharacter {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonErrorType.msoBalloonErrorBadCharacter">
			<context kind="enumeration">MsoBalloonErrorType</context>
			<name>msoBalloonErrorBadCharacter</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonErrorBadPictureRef {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonErrorType.msoBalloonErrorBadPictureRef">
			<context kind="enumeration">MsoBalloonErrorType</context>
			<name>msoBalloonErrorBadPictureRef</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonErrorBadReference {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonErrorType.msoBalloonErrorBadReference">
			<context kind="enumeration">MsoBalloonErrorType</context>
			<name>msoBalloonErrorBadReference</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonErrorButtonlessModal {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonErrorType.msoBalloonErrorButtonlessModal">
			<context kind="enumeration">MsoBalloonErrorType</context>
			<name>msoBalloonErrorButtonlessModal</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonErrorButtonModeless {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonErrorType.msoBalloonErrorButtonModeless">
			<context kind="enumeration">MsoBalloonErrorType</context>
			<name>msoBalloonErrorButtonModeless</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonErrorCharNotTopmostForModal {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonErrorType.msoBalloonErrorCharNotTopmostForModal">
			<context kind="enumeration">MsoBalloonErrorType</context>
			<name>msoBalloonErrorCharNotTopmostForModal</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonErrorCOMFailure {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonErrorType.msoBalloonErrorCOMFailure">
			<context kind="enumeration">MsoBalloonErrorType</context>
			<name>msoBalloonErrorCOMFailure</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonErrorNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonErrorType.msoBalloonErrorNone">
			<context kind="enumeration">MsoBalloonErrorType</context>
			<name>msoBalloonErrorNone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonErrorOther {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonErrorType.msoBalloonErrorOther">
			<context kind="enumeration">MsoBalloonErrorType</context>
			<name>msoBalloonErrorOther</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonErrorOutOfMemory {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonErrorType.msoBalloonErrorOutOfMemory">
			<context kind="enumeration">MsoBalloonErrorType</context>
			<name>msoBalloonErrorOutOfMemory</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonErrorTooBig {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonErrorType.msoBalloonErrorTooBig">
			<context kind="enumeration">MsoBalloonErrorType</context>
			<name>msoBalloonErrorTooBig</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonErrorTooManyControls {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonErrorType.msoBalloonErrorTooManyControls">
			<context kind="enumeration">MsoBalloonErrorType</context>
			<name>msoBalloonErrorTooManyControls</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoBalloonType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoBalloonType">
			<name>MsoBalloonType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonTypeBullets {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonType.msoBalloonTypeBullets">
			<context kind="enumeration">MsoBalloonType</context>
			<name>msoBalloonTypeBullets</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonTypeButtons {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonType.msoBalloonTypeButtons">
			<context kind="enumeration">MsoBalloonType</context>
			<name>msoBalloonTypeButtons</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBalloonTypeNumbers {Constant}-->
	<element type="constant">
		<source id="Office.MsoBalloonType.msoBalloonTypeNumbers">
			<context kind="enumeration">MsoBalloonType</context>
			<name>msoBalloonTypeNumbers</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoBarPosition  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoBarPosition">
			<name>MsoBarPosition</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarBottom {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarPosition.msoBarBottom">
			<context kind="enumeration">MsoBarPosition</context>
			<name>msoBarBottom</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarFloating {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarPosition.msoBarFloating">
			<context kind="enumeration">MsoBarPosition</context>
			<name>msoBarFloating</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarPosition.msoBarLeft">
			<context kind="enumeration">MsoBarPosition</context>
			<name>msoBarLeft</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarMenuBar {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarPosition.msoBarMenuBar">
			<context kind="enumeration">MsoBarPosition</context>
			<name>msoBarMenuBar</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarPopup {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarPosition.msoBarPopup">
			<context kind="enumeration">MsoBarPosition</context>
			<name>msoBarPopup</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarPosition.msoBarRight">
			<context kind="enumeration">MsoBarPosition</context>
			<name>msoBarRight</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarTop {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarPosition.msoBarTop">
			<context kind="enumeration">MsoBarPosition</context>
			<name>msoBarTop</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoBarProtection  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoBarProtection">
			<name>MsoBarProtection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarNoChangeDock {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarProtection.msoBarNoChangeDock">
			<context kind="enumeration">MsoBarProtection</context>
			<name>msoBarNoChangeDock</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarNoChangeVisible {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarProtection.msoBarNoChangeVisible">
			<context kind="enumeration">MsoBarProtection</context>
			<name>msoBarNoChangeVisible</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarNoCustomize {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarProtection.msoBarNoCustomize">
			<context kind="enumeration">MsoBarProtection</context>
			<name>msoBarNoCustomize</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarNoHorizontalDock {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarProtection.msoBarNoHorizontalDock">
			<context kind="enumeration">MsoBarProtection</context>
			<name>msoBarNoHorizontalDock</name>
			<value>64</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarNoMove {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarProtection.msoBarNoMove">
			<context kind="enumeration">MsoBarProtection</context>
			<name>msoBarNoMove</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarNoProtection {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarProtection.msoBarNoProtection">
			<context kind="enumeration">MsoBarProtection</context>
			<name>msoBarNoProtection</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarNoResize {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarProtection.msoBarNoResize">
			<context kind="enumeration">MsoBarProtection</context>
			<name>msoBarNoResize</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarNoVerticalDock {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarProtection.msoBarNoVerticalDock">
			<context kind="enumeration">MsoBarProtection</context>
			<name>msoBarNoVerticalDock</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoBarRow  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoBarRow">
			<name>MsoBarRow</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarRowFirst {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarRow.msoBarRowFirst">
			<context kind="enumeration">MsoBarRow</context>
			<name>msoBarRowFirst</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarRowLast {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarRow.msoBarRowLast">
			<context kind="enumeration">MsoBarRow</context>
			<name>msoBarRowLast</name>
			<value>-1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoBarType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoBarType">
			<name>MsoBarType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarTypeMenuBar {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarType.msoBarTypeMenuBar">
			<context kind="enumeration">MsoBarType</context>
			<name>msoBarTypeMenuBar</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarTypeNormal {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarType.msoBarTypeNormal">
			<context kind="enumeration">MsoBarType</context>
			<name>msoBarTypeNormal</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBarTypePopup {Constant}-->
	<element type="constant">
		<source id="Office.MsoBarType.msoBarTypePopup">
			<context kind="enumeration">MsoBarType</context>
			<name>msoBarTypePopup</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoBlackWhiteMode  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoBlackWhiteMode">
			<name>MsoBlackWhiteMode</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBlackWhiteAutomatic {Constant}-->
	<element type="constant">
		<source id="Office.MsoBlackWhiteMode.msoBlackWhiteAutomatic">
			<context kind="enumeration">MsoBlackWhiteMode</context>
			<name>msoBlackWhiteAutomatic</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBlackWhiteBlack {Constant}-->
	<element type="constant">
		<source id="Office.MsoBlackWhiteMode.msoBlackWhiteBlack">
			<context kind="enumeration">MsoBlackWhiteMode</context>
			<name>msoBlackWhiteBlack</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBlackWhiteBlackTextAndLine {Constant}-->
	<element type="constant">
		<source id="Office.MsoBlackWhiteMode.msoBlackWhiteBlackTextAndLine">
			<context kind="enumeration">MsoBlackWhiteMode</context>
			<name>msoBlackWhiteBlackTextAndLine</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBlackWhiteDontShow {Constant}-->
	<element type="constant">
		<source id="Office.MsoBlackWhiteMode.msoBlackWhiteDontShow">
			<context kind="enumeration">MsoBlackWhiteMode</context>
			<name>msoBlackWhiteDontShow</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBlackWhiteGrayOutline {Constant}-->
	<element type="constant">
		<source id="Office.MsoBlackWhiteMode.msoBlackWhiteGrayOutline">
			<context kind="enumeration">MsoBlackWhiteMode</context>
			<name>msoBlackWhiteGrayOutline</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBlackWhiteGrayScale {Constant}-->
	<element type="constant">
		<source id="Office.MsoBlackWhiteMode.msoBlackWhiteGrayScale">
			<context kind="enumeration">MsoBlackWhiteMode</context>
			<name>msoBlackWhiteGrayScale</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBlackWhiteHighContrast {Constant}-->
	<element type="constant">
		<source id="Office.MsoBlackWhiteMode.msoBlackWhiteHighContrast">
			<context kind="enumeration">MsoBlackWhiteMode</context>
			<name>msoBlackWhiteHighContrast</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBlackWhiteInverseGrayScale {Constant}-->
	<element type="constant">
		<source id="Office.MsoBlackWhiteMode.msoBlackWhiteInverseGrayScale">
			<context kind="enumeration">MsoBlackWhiteMode</context>
			<name>msoBlackWhiteInverseGrayScale</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBlackWhiteLightGrayScale {Constant}-->
	<element type="constant">
		<source id="Office.MsoBlackWhiteMode.msoBlackWhiteLightGrayScale">
			<context kind="enumeration">MsoBlackWhiteMode</context>
			<name>msoBlackWhiteLightGrayScale</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBlackWhiteMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoBlackWhiteMode.msoBlackWhiteMixed">
			<context kind="enumeration">MsoBlackWhiteMode</context>
			<name>msoBlackWhiteMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBlackWhiteWhite {Constant}-->
	<element type="constant">
		<source id="Office.MsoBlackWhiteMode.msoBlackWhiteWhite">
			<context kind="enumeration">MsoBlackWhiteMode</context>
			<name>msoBlackWhiteWhite</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoButtonSetType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoButtonSetType">
			<name>MsoButtonSetType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetAbortRetryIgnore {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetAbortRetryIgnore">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetAbortRetryIgnore</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetBackClose {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetBackClose">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetBackClose</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetBackNextClose {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetBackNextClose">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetBackNextClose</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetBackNextSnooze {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetBackNextSnooze">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetBackNextSnooze</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetCancel {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetCancel">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetCancel</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetNextClose {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetNextClose">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetNextClose</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetNone">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetNone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetOK {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetOK">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetOK</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetOkCancel {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetOkCancel">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetOkCancel</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetRetryCancel {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetRetryCancel">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetRetryCancel</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetSearchClose {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetSearchClose">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetSearchClose</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetTipsOptionsClose {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetTipsOptionsClose">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetTipsOptionsClose</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetYesAllNoCancel {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetYesAllNoCancel">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetYesAllNoCancel</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetYesNo {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetYesNo">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetYesNo</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonSetYesNoCancel {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonSetType.msoButtonSetYesNoCancel">
			<context kind="enumeration">MsoButtonSetType</context>
			<name>msoButtonSetYesNoCancel</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoButtonState  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoButtonState">
			<name>MsoButtonState</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonDown {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonState.msoButtonDown">
			<context kind="enumeration">MsoButtonState</context>
			<name>msoButtonDown</name>
			<value>-1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonState.msoButtonMixed">
			<context kind="enumeration">MsoButtonState</context>
			<name>msoButtonMixed</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonUp {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonState.msoButtonUp">
			<context kind="enumeration">MsoButtonState</context>
			<name>msoButtonUp</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoButtonStyle  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoButtonStyle">
			<name>MsoButtonStyle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonAutomatic {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonStyle.msoButtonAutomatic">
			<context kind="enumeration">MsoButtonStyle</context>
			<name>msoButtonAutomatic</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonCaption {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonStyle.msoButtonCaption">
			<context kind="enumeration">MsoButtonStyle</context>
			<name>msoButtonCaption</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonIcon {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonStyle.msoButtonIcon">
			<context kind="enumeration">MsoButtonStyle</context>
			<name>msoButtonIcon</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonIconAndCaption {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonStyle.msoButtonIconAndCaption">
			<context kind="enumeration">MsoButtonStyle</context>
			<name>msoButtonIconAndCaption</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonIconAndCaptionBelow {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonStyle.msoButtonIconAndCaptionBelow">
			<context kind="enumeration">MsoButtonStyle</context>
			<name>msoButtonIconAndCaptionBelow</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonIconAndWrapCaption {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonStyle.msoButtonIconAndWrapCaption">
			<context kind="enumeration">MsoButtonStyle</context>
			<name>msoButtonIconAndWrapCaption</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonIconAndWrapCaptionBelow {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonStyle.msoButtonIconAndWrapCaptionBelow">
			<context kind="enumeration">MsoButtonStyle</context>
			<name>msoButtonIconAndWrapCaptionBelow</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonWrapCaption {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonStyle.msoButtonWrapCaption">
			<context kind="enumeration">MsoButtonStyle</context>
			<name>msoButtonWrapCaption</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoButtonStyleHidden  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoButtonStyleHidden">
			<name>MsoButtonStyleHidden</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonTextBelow {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonStyleHidden.msoButtonTextBelow">
			<context kind="enumeration">MsoButtonStyleHidden</context>
			<name>msoButtonTextBelow</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoButtonWrapText {Constant}-->
	<element type="constant">
		<source id="Office.MsoButtonStyleHidden.msoButtonWrapText">
			<context kind="enumeration">MsoButtonStyleHidden</context>
			<name>msoButtonWrapText</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoCalloutAngleType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoCalloutAngleType">
			<name>MsoCalloutAngleType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutAngle30 {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutAngleType.msoCalloutAngle30">
			<context kind="enumeration">MsoCalloutAngleType</context>
			<name>msoCalloutAngle30</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutAngle45 {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutAngleType.msoCalloutAngle45">
			<context kind="enumeration">MsoCalloutAngleType</context>
			<name>msoCalloutAngle45</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutAngle60 {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutAngleType.msoCalloutAngle60">
			<context kind="enumeration">MsoCalloutAngleType</context>
			<name>msoCalloutAngle60</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutAngle90 {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutAngleType.msoCalloutAngle90">
			<context kind="enumeration">MsoCalloutAngleType</context>
			<name>msoCalloutAngle90</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutAngleAutomatic {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutAngleType.msoCalloutAngleAutomatic">
			<context kind="enumeration">MsoCalloutAngleType</context>
			<name>msoCalloutAngleAutomatic</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutAngleMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutAngleType.msoCalloutAngleMixed">
			<context kind="enumeration">MsoCalloutAngleType</context>
			<name>msoCalloutAngleMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoCalloutDropType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoCalloutDropType">
			<name>MsoCalloutDropType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutDropBottom {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutDropType.msoCalloutDropBottom">
			<context kind="enumeration">MsoCalloutDropType</context>
			<name>msoCalloutDropBottom</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutDropCenter {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutDropType.msoCalloutDropCenter">
			<context kind="enumeration">MsoCalloutDropType</context>
			<name>msoCalloutDropCenter</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutDropCustom {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutDropType.msoCalloutDropCustom">
			<context kind="enumeration">MsoCalloutDropType</context>
			<name>msoCalloutDropCustom</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutDropMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutDropType.msoCalloutDropMixed">
			<context kind="enumeration">MsoCalloutDropType</context>
			<name>msoCalloutDropMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutDropTop {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutDropType.msoCalloutDropTop">
			<context kind="enumeration">MsoCalloutDropType</context>
			<name>msoCalloutDropTop</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoCalloutType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoCalloutType">
			<name>MsoCalloutType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutFour {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutType.msoCalloutFour">
			<context kind="enumeration">MsoCalloutType</context>
			<name>msoCalloutFour</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutType.msoCalloutMixed">
			<context kind="enumeration">MsoCalloutType</context>
			<name>msoCalloutMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutOne {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutType.msoCalloutOne">
			<context kind="enumeration">MsoCalloutType</context>
			<name>msoCalloutOne</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutThree {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutType.msoCalloutThree">
			<context kind="enumeration">MsoCalloutType</context>
			<name>msoCalloutThree</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCalloutTwo {Constant}-->
	<element type="constant">
		<source id="Office.MsoCalloutType.msoCalloutTwo">
			<context kind="enumeration">MsoCalloutType</context>
			<name>msoCalloutTwo</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoCharacterSet  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoCharacterSet">
			<name>MsoCharacterSet</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCharacterSetArabic {Constant}-->
	<element type="constant">
		<source id="Office.MsoCharacterSet.msoCharacterSetArabic">
			<context kind="enumeration">MsoCharacterSet</context>
			<name>msoCharacterSetArabic</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCharacterSetCyrillic {Constant}-->
	<element type="constant">
		<source id="Office.MsoCharacterSet.msoCharacterSetCyrillic">
			<context kind="enumeration">MsoCharacterSet</context>
			<name>msoCharacterSetCyrillic</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCharacterSetEnglishWesternEuropeanOtherLatinScript {Constant}-->
	<element type="constant">
		<source id="Office.MsoCharacterSet.msoCharacterSetEnglishWesternEuropeanOtherLatinScript">
			<context kind="enumeration">MsoCharacterSet</context>
			<name>msoCharacterSetEnglishWesternEuropeanOtherLatinScript</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCharacterSetGreek {Constant}-->
	<element type="constant">
		<source id="Office.MsoCharacterSet.msoCharacterSetGreek">
			<context kind="enumeration">MsoCharacterSet</context>
			<name>msoCharacterSetGreek</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCharacterSetHebrew {Constant}-->
	<element type="constant">
		<source id="Office.MsoCharacterSet.msoCharacterSetHebrew">
			<context kind="enumeration">MsoCharacterSet</context>
			<name>msoCharacterSetHebrew</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCharacterSetJapanese {Constant}-->
	<element type="constant">
		<source id="Office.MsoCharacterSet.msoCharacterSetJapanese">
			<context kind="enumeration">MsoCharacterSet</context>
			<name>msoCharacterSetJapanese</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCharacterSetKorean {Constant}-->
	<element type="constant">
		<source id="Office.MsoCharacterSet.msoCharacterSetKorean">
			<context kind="enumeration">MsoCharacterSet</context>
			<name>msoCharacterSetKorean</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCharacterSetMultilingualUnicode {Constant}-->
	<element type="constant">
		<source id="Office.MsoCharacterSet.msoCharacterSetMultilingualUnicode">
			<context kind="enumeration">MsoCharacterSet</context>
			<name>msoCharacterSetMultilingualUnicode</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCharacterSetSimplifiedChinese {Constant}-->
	<element type="constant">
		<source id="Office.MsoCharacterSet.msoCharacterSetSimplifiedChinese">
			<context kind="enumeration">MsoCharacterSet</context>
			<name>msoCharacterSetSimplifiedChinese</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCharacterSetThai {Constant}-->
	<element type="constant">
		<source id="Office.MsoCharacterSet.msoCharacterSetThai">
			<context kind="enumeration">MsoCharacterSet</context>
			<name>msoCharacterSetThai</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCharacterSetTraditionalChinese {Constant}-->
	<element type="constant">
		<source id="Office.MsoCharacterSet.msoCharacterSetTraditionalChinese">
			<context kind="enumeration">MsoCharacterSet</context>
			<name>msoCharacterSetTraditionalChinese</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCharacterSetVietnamese {Constant}-->
	<element type="constant">
		<source id="Office.MsoCharacterSet.msoCharacterSetVietnamese">
			<context kind="enumeration">MsoCharacterSet</context>
			<name>msoCharacterSetVietnamese</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoColorType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoColorType">
			<name>MsoColorType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoColorTypeCMS {Constant}-->
	<element type="constant">
		<source id="Office.MsoColorType.msoColorTypeCMS">
			<context kind="enumeration">MsoColorType</context>
			<name>msoColorTypeCMS</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoColorTypeCMYK {Constant}-->
	<element type="constant">
		<source id="Office.MsoColorType.msoColorTypeCMYK">
			<context kind="enumeration">MsoColorType</context>
			<name>msoColorTypeCMYK</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoColorTypeInk {Constant}-->
	<element type="constant">
		<source id="Office.MsoColorType.msoColorTypeInk">
			<context kind="enumeration">MsoColorType</context>
			<name>msoColorTypeInk</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoColorTypeMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoColorType.msoColorTypeMixed">
			<context kind="enumeration">MsoColorType</context>
			<name>msoColorTypeMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoColorTypeRGB {Constant}-->
	<element type="constant">
		<source id="Office.MsoColorType.msoColorTypeRGB">
			<context kind="enumeration">MsoColorType</context>
			<name>msoColorTypeRGB</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoColorTypeScheme {Constant}-->
	<element type="constant">
		<source id="Office.MsoColorType.msoColorTypeScheme">
			<context kind="enumeration">MsoColorType</context>
			<name>msoColorTypeScheme</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoComboStyle  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoComboStyle">
			<name>MsoComboStyle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoComboLabel {Constant}-->
	<element type="constant">
		<source id="Office.MsoComboStyle.msoComboLabel">
			<context kind="enumeration">MsoComboStyle</context>
			<name>msoComboLabel</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoComboNormal {Constant}-->
	<element type="constant">
		<source id="Office.MsoComboStyle.msoComboNormal">
			<context kind="enumeration">MsoComboStyle</context>
			<name>msoComboNormal</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoCommandBarButtonHyperlinkType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoCommandBarButtonHyperlinkType">
			<name>MsoCommandBarButtonHyperlinkType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCommandBarButtonHyperlinkInsertPicture {Constant}-->
	<element type="constant">
		<source id="Office.MsoCommandBarButtonHyperlinkType.msoCommandBarButtonHyperlinkInsertPicture">
			<context kind="enumeration">MsoCommandBarButtonHyperlinkType</context>
			<name>msoCommandBarButtonHyperlinkInsertPicture</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCommandBarButtonHyperlinkNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoCommandBarButtonHyperlinkType.msoCommandBarButtonHyperlinkNone">
			<context kind="enumeration">MsoCommandBarButtonHyperlinkType</context>
			<name>msoCommandBarButtonHyperlinkNone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCommandBarButtonHyperlinkOpen {Constant}-->
	<element type="constant">
		<source id="Office.MsoCommandBarButtonHyperlinkType.msoCommandBarButtonHyperlinkOpen">
			<context kind="enumeration">MsoCommandBarButtonHyperlinkType</context>
			<name>msoCommandBarButtonHyperlinkOpen</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoCondition  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoCondition">
			<name>MsoCondition</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionAnyNumberBetween {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionAnyNumberBetween">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionAnyNumberBetween</name>
			<value>34</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionAnytime {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionAnytime">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionAnytime</name>
			<value>25</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionAnytimeBetween {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionAnytimeBetween">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionAnytimeBetween</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionAtLeast {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionAtLeast">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionAtLeast</name>
			<value>36</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionAtMost {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionAtMost">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionAtMost</name>
			<value>35</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionBeginsWith {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionBeginsWith">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionBeginsWith</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionDoesNotEqual {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionDoesNotEqual">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionDoesNotEqual</name>
			<value>33</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionEndsWith {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionEndsWith">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionEndsWith</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionEquals {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionEquals">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionEquals</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionEqualsCompleted {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionEqualsCompleted">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionEqualsCompleted</name>
			<value>66</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionEqualsDeferred {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionEqualsDeferred">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionEqualsDeferred</name>
			<value>68</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionEqualsHigh {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionEqualsHigh">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionEqualsHigh</name>
			<value>60</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionEqualsInProgress {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionEqualsInProgress">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionEqualsInProgress</name>
			<value>65</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionEqualsLow {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionEqualsLow">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionEqualsLow</name>
			<value>58</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionEqualsNormal {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionEqualsNormal">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionEqualsNormal</name>
			<value>59</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionEqualsNotStarted {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionEqualsNotStarted">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionEqualsNotStarted</name>
			<value>64</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionEqualsWaitingForSomeoneElse {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionEqualsWaitingForSomeoneElse">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionEqualsWaitingForSomeoneElse</name>
			<value>67</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeAllFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeAllFiles">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeAllFiles</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeBinders {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeBinders">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeBinders</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeCalendarItem {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeCalendarItem">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeCalendarItem</name>
			<value>45</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeContactItem {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeContactItem">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeContactItem</name>
			<value>46</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeDatabases {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeDatabases">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeDatabases</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeDataConnectionFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeDataConnectionFiles">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeDataConnectionFiles</name>
			<value>51</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeDesignerFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeDesignerFiles">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeDesignerFiles</name>
			<value>56</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeDocumentImagingFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeDocumentImagingFiles">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeDocumentImagingFiles</name>
			<value>54</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeExcelWorkbooks {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeExcelWorkbooks">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeExcelWorkbooks</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeJournalItem {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeJournalItem">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeJournalItem</name>
			<value>48</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeMailItem {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeMailItem">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeMailItem</name>
			<value>44</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeNoteItem {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeNoteItem">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeNoteItem</name>
			<value>47</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeOfficeFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeOfficeFiles">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeOfficeFiles</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeOutlookItems {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeOutlookItems">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeOutlookItems</name>
			<value>43</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypePhotoDrawFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypePhotoDrawFiles">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypePhotoDrawFiles</name>
			<value>50</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypePowerPointPresentations {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypePowerPointPresentations">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypePowerPointPresentations</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeProjectFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeProjectFiles">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeProjectFiles</name>
			<value>53</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypePublisherFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypePublisherFiles">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypePublisherFiles</name>
			<value>52</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeTaskItem {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeTaskItem">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeTaskItem</name>
			<value>49</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeTemplates {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeTemplates">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeTemplates</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeVisioFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeVisioFiles">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeVisioFiles</name>
			<value>55</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeWebPages {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeWebPages">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeWebPages</name>
			<value>57</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFileTypeWordDocuments {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFileTypeWordDocuments">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFileTypeWordDocuments</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionFreeText {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionFreeText">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionFreeText</name>
			<value>42</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionIncludes {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionIncludes">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionIncludes</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionIncludesFormsOf {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionIncludesFormsOf">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionIncludesFormsOf</name>
			<value>41</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionIncludesNearEachOther {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionIncludesNearEachOther">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionIncludesNearEachOther</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionIncludesPhrase {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionIncludesPhrase">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionIncludesPhrase</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionInTheLast {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionInTheLast">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionInTheLast</name>
			<value>31</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionInTheNext {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionInTheNext">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionInTheNext</name>
			<value>30</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionIsExactly {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionIsExactly">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionIsExactly</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionIsNo {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionIsNo">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionIsNo</name>
			<value>40</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionIsNot {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionIsNot">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionIsNot</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionIsYes {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionIsYes">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionIsYes</name>
			<value>39</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionLastMonth {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionLastMonth">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionLastMonth</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionLastWeek {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionLastWeek">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionLastWeek</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionLessThan {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionLessThan">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionLessThan</name>
			<value>38</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionMoreThan {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionMoreThan">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionMoreThan</name>
			<value>37</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionNextMonth {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionNextMonth">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionNextMonth</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionNextWeek {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionNextWeek">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionNextWeek</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionNotEqualToCompleted {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionNotEqualToCompleted">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionNotEqualToCompleted</name>
			<value>71</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionNotEqualToDeferred {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionNotEqualToDeferred">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionNotEqualToDeferred</name>
			<value>73</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionNotEqualToHigh {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionNotEqualToHigh">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionNotEqualToHigh</name>
			<value>63</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionNotEqualToInProgress {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionNotEqualToInProgress">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionNotEqualToInProgress</name>
			<value>70</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionNotEqualToLow {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionNotEqualToLow">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionNotEqualToLow</name>
			<value>61</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionNotEqualToNormal {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionNotEqualToNormal">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionNotEqualToNormal</name>
			<value>62</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionNotEqualToNotStarted {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionNotEqualToNotStarted">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionNotEqualToNotStarted</name>
			<value>69</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionNotEqualToWaitingForSomeoneElse {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionNotEqualToWaitingForSomeoneElse">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionNotEqualToWaitingForSomeoneElse</name>
			<value>72</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionOn {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionOn">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionOn</name>
			<value>27</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionOnOrAfter {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionOnOrAfter">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionOnOrAfter</name>
			<value>28</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionOnOrBefore {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionOnOrBefore">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionOnOrBefore</name>
			<value>29</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionThisMonth {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionThisMonth">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionThisMonth</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionThisWeek {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionThisWeek">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionThisWeek</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionToday {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionToday">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionToday</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionTomorrow {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionTomorrow">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionTomorrow</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConditionYesterday {Constant}-->
	<element type="constant">
		<source id="Office.MsoCondition.msoConditionYesterday">
			<context kind="enumeration">MsoCondition</context>
			<name>msoConditionYesterday</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoConnector  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoConnector">
			<name>MsoConnector</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConnectorAnd {Constant}-->
	<element type="constant">
		<source id="Office.MsoConnector.msoConnectorAnd">
			<context kind="enumeration">MsoConnector</context>
			<name>msoConnectorAnd</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConnectorOr {Constant}-->
	<element type="constant">
		<source id="Office.MsoConnector.msoConnectorOr">
			<context kind="enumeration">MsoConnector</context>
			<name>msoConnectorOr</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoConnectorType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoConnectorType">
			<name>MsoConnectorType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConnectorCurve {Constant}-->
	<element type="constant">
		<source id="Office.MsoConnectorType.msoConnectorCurve">
			<context kind="enumeration">MsoConnectorType</context>
			<name>msoConnectorCurve</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConnectorElbow {Constant}-->
	<element type="constant">
		<source id="Office.MsoConnectorType.msoConnectorElbow">
			<context kind="enumeration">MsoConnectorType</context>
			<name>msoConnectorElbow</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConnectorStraight {Constant}-->
	<element type="constant">
		<source id="Office.MsoConnectorType.msoConnectorStraight">
			<context kind="enumeration">MsoConnectorType</context>
			<name>msoConnectorStraight</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoConnectorTypeMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoConnectorType.msoConnectorTypeMixed">
			<context kind="enumeration">MsoConnectorType</context>
			<name>msoConnectorTypeMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoControlOLEUsage  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoControlOLEUsage">
			<name>MsoControlOLEUsage</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlOLEUsageBoth {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlOLEUsage.msoControlOLEUsageBoth">
			<context kind="enumeration">MsoControlOLEUsage</context>
			<name>msoControlOLEUsageBoth</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlOLEUsageClient {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlOLEUsage.msoControlOLEUsageClient">
			<context kind="enumeration">MsoControlOLEUsage</context>
			<name>msoControlOLEUsageClient</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlOLEUsageNeither {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlOLEUsage.msoControlOLEUsageNeither">
			<context kind="enumeration">MsoControlOLEUsage</context>
			<name>msoControlOLEUsageNeither</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlOLEUsageServer {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlOLEUsage.msoControlOLEUsageServer">
			<context kind="enumeration">MsoControlOLEUsage</context>
			<name>msoControlOLEUsageServer</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoControlType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoControlType">
			<name>MsoControlType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlActiveX {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlActiveX">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlActiveX</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlAutoCompleteCombo {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlAutoCompleteCombo">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlAutoCompleteCombo</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlButton {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlButton">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlButton</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlButtonDropdown {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlButtonDropdown">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlButtonDropdown</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlButtonPopup {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlButtonPopup">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlButtonPopup</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlComboBox {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlComboBox">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlComboBox</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlCustom {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlCustom">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlCustom</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlDropdown {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlDropdown">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlDropdown</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlEdit {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlEdit">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlEdit</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlExpandingGrid {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlExpandingGrid">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlExpandingGrid</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlGauge {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlGauge">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlGauge</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlGenericDropdown {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlGenericDropdown">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlGenericDropdown</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlGraphicCombo {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlGraphicCombo">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlGraphicCombo</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlGraphicDropdown {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlGraphicDropdown">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlGraphicDropdown</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlGraphicPopup {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlGraphicPopup">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlGraphicPopup</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlGrid {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlGrid">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlGrid</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlLabel {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlLabel">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlLabel</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlLabelEx {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlLabelEx">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlLabelEx</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlOCXDropdown {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlOCXDropdown">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlOCXDropdown</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlPane {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlPane">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlPane</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlPopup {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlPopup">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlPopup</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlSpinner {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlSpinner">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlSpinner</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlSplitButtonMRUPopup {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlSplitButtonMRUPopup">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlSplitButtonMRUPopup</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlSplitButtonPopup {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlSplitButtonPopup">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlSplitButtonPopup</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlSplitDropdown {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlSplitDropdown">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlSplitDropdown</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlSplitExpandingGrid {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlSplitExpandingGrid">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlSplitExpandingGrid</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoControlWorkPane {Constant}-->
	<element type="constant">
		<source id="Office.MsoControlType.msoControlWorkPane">
			<context kind="enumeration">MsoControlType</context>
			<name>msoControlWorkPane</name>
			<value>25</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--Class::MsoDebugOptions-->
	<element type="class">
		<source id="Office.MsoDebugOptions">
			<name>MsoDebugOptions</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::MsoDebugOptions.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.MsoDebugOptions.Application">
			<context kind="class">MsoDebugOptions</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::MsoDebugOptions.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.MsoDebugOptions.Creator">
			<context kind="class">MsoDebugOptions</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::MsoDebugOptions.FeatureReports-->
	<element type="property">
		<source id="Office.MsoDebugOptions.FeatureReports">
			<context kind="class">MsoDebugOptions</context>
			<name>FeatureReports</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::MsoDebugOptions.OutputToDebugger-->
	<element type="property">
		<source id="Office.MsoDebugOptions.OutputToDebugger">
			<context kind="class">MsoDebugOptions</context>
			<name>OutputToDebugger</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::MsoDebugOptions.OutputToFile-->
	<element type="property">
		<source id="Office.MsoDebugOptions.OutputToFile">
			<context kind="class">MsoDebugOptions</context>
			<name>OutputToFile</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::MsoDebugOptions.OutputToMessageBox-->
	<element type="property">
		<source id="Office.MsoDebugOptions.OutputToMessageBox">
			<context kind="class">MsoDebugOptions</context>
			<name>OutputToMessageBox</name>
			<type>boolean</type>
		</source>
	</element>
	<!--enum::MsoDiagramNodeType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoDiagramNodeType">
			<name>MsoDiagramNodeType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoDiagramAssistant {Constant}-->
	<element type="constant">
		<source id="Office.MsoDiagramNodeType.msoDiagramAssistant">
			<context kind="enumeration">MsoDiagramNodeType</context>
			<name>msoDiagramAssistant</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoDiagramNode {Constant}-->
	<element type="constant">
		<source id="Office.MsoDiagramNodeType.msoDiagramNode">
			<context kind="enumeration">MsoDiagramNodeType</context>
			<name>msoDiagramNode</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoDiagramType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoDiagramType">
			<name>MsoDiagramType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoDiagramCycle {Constant}-->
	<element type="constant">
		<source id="Office.MsoDiagramType.msoDiagramCycle">
			<context kind="enumeration">MsoDiagramType</context>
			<name>msoDiagramCycle</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoDiagramMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoDiagramType.msoDiagramMixed">
			<context kind="enumeration">MsoDiagramType</context>
			<name>msoDiagramMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoDiagramOrgChart {Constant}-->
	<element type="constant">
		<source id="Office.MsoDiagramType.msoDiagramOrgChart">
			<context kind="enumeration">MsoDiagramType</context>
			<name>msoDiagramOrgChart</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoDiagramPyramid {Constant}-->
	<element type="constant">
		<source id="Office.MsoDiagramType.msoDiagramPyramid">
			<context kind="enumeration">MsoDiagramType</context>
			<name>msoDiagramPyramid</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoDiagramRadial {Constant}-->
	<element type="constant">
		<source id="Office.MsoDiagramType.msoDiagramRadial">
			<context kind="enumeration">MsoDiagramType</context>
			<name>msoDiagramRadial</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoDiagramTarget {Constant}-->
	<element type="constant">
		<source id="Office.MsoDiagramType.msoDiagramTarget">
			<context kind="enumeration">MsoDiagramType</context>
			<name>msoDiagramTarget</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoDiagramVenn {Constant}-->
	<element type="constant">
		<source id="Office.MsoDiagramType.msoDiagramVenn">
			<context kind="enumeration">MsoDiagramType</context>
			<name>msoDiagramVenn</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoDistributeCmd  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoDistributeCmd">
			<name>MsoDistributeCmd</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoDistributeHorizontally {Constant}-->
	<element type="constant">
		<source id="Office.MsoDistributeCmd.msoDistributeHorizontally">
			<context kind="enumeration">MsoDistributeCmd</context>
			<name>msoDistributeHorizontally</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoDistributeVertically {Constant}-->
	<element type="constant">
		<source id="Office.MsoDistributeCmd.msoDistributeVertically">
			<context kind="enumeration">MsoDistributeCmd</context>
			<name>msoDistributeVertically</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoDocProperties  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoDocProperties">
			<name>MsoDocProperties</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPropertyTypeBoolean {Constant}-->
	<element type="constant">
		<source id="Office.MsoDocProperties.msoPropertyTypeBoolean">
			<context kind="enumeration">MsoDocProperties</context>
			<name>msoPropertyTypeBoolean</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPropertyTypeDate {Constant}-->
	<element type="constant">
		<source id="Office.MsoDocProperties.msoPropertyTypeDate">
			<context kind="enumeration">MsoDocProperties</context>
			<name>msoPropertyTypeDate</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPropertyTypeFloat {Constant}-->
	<element type="constant">
		<source id="Office.MsoDocProperties.msoPropertyTypeFloat">
			<context kind="enumeration">MsoDocProperties</context>
			<name>msoPropertyTypeFloat</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPropertyTypeNumber {Constant}-->
	<element type="constant">
		<source id="Office.MsoDocProperties.msoPropertyTypeNumber">
			<context kind="enumeration">MsoDocProperties</context>
			<name>msoPropertyTypeNumber</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPropertyTypeString {Constant}-->
	<element type="constant">
		<source id="Office.MsoDocProperties.msoPropertyTypeString">
			<context kind="enumeration">MsoDocProperties</context>
			<name>msoPropertyTypeString</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoEditingType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoEditingType">
			<name>MsoEditingType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEditingAuto {Constant}-->
	<element type="constant">
		<source id="Office.MsoEditingType.msoEditingAuto">
			<context kind="enumeration">MsoEditingType</context>
			<name>msoEditingAuto</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEditingCorner {Constant}-->
	<element type="constant">
		<source id="Office.MsoEditingType.msoEditingCorner">
			<context kind="enumeration">MsoEditingType</context>
			<name>msoEditingCorner</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEditingSmooth {Constant}-->
	<element type="constant">
		<source id="Office.MsoEditingType.msoEditingSmooth">
			<context kind="enumeration">MsoEditingType</context>
			<name>msoEditingSmooth</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEditingSymmetric {Constant}-->
	<element type="constant">
		<source id="Office.MsoEditingType.msoEditingSymmetric">
			<context kind="enumeration">MsoEditingType</context>
			<name>msoEditingSymmetric</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoEncoding  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoEncoding">
			<name>MsoEncoding</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingArabic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingArabic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingArabic</name>
			<value>1256</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingArabicASMO {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingArabicASMO">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingArabicASMO</name>
			<value>708</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingArabicAutoDetect {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingArabicAutoDetect">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingArabicAutoDetect</name>
			<value>51256</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingArabicTransparentASMO {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingArabicTransparentASMO">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingArabicTransparentASMO</name>
			<value>720</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingAutoDetect {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingAutoDetect">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingAutoDetect</name>
			<value>50001</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingBaltic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingBaltic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingBaltic</name>
			<value>1257</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingCentralEuropean {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingCentralEuropean">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingCentralEuropean</name>
			<value>1250</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingCyrillic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingCyrillic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingCyrillic</name>
			<value>1251</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingCyrillicAutoDetect {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingCyrillicAutoDetect">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingCyrillicAutoDetect</name>
			<value>51251</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICArabic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICArabic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICArabic</name>
			<value>20420</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICDenmarkNorway {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICDenmarkNorway">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICDenmarkNorway</name>
			<value>20277</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICFinlandSweden {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICFinlandSweden">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICFinlandSweden</name>
			<value>20278</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICFrance {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICFrance">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICFrance</name>
			<value>20297</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICGermany {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICGermany">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICGermany</name>
			<value>20273</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICGreek {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICGreek">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICGreek</name>
			<value>20423</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICGreekModern {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICGreekModern">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICGreekModern</name>
			<value>875</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICHebrew {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICHebrew">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICHebrew</name>
			<value>20424</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICIcelandic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICIcelandic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICIcelandic</name>
			<value>20871</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICInternational {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICInternational">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICInternational</name>
			<value>500</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICItaly {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICItaly">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICItaly</name>
			<value>20280</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICJapaneseKatakanaExtended {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICJapaneseKatakanaExtended">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICJapaneseKatakanaExtended</name>
			<value>20290</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese</name>
			<value>50930</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICJapaneseLatinExtendedAndJapanese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICJapaneseLatinExtendedAndJapanese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICJapaneseLatinExtendedAndJapanese</name>
			<value>50939</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICKoreanExtended {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICKoreanExtended">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICKoreanExtended</name>
			<value>20833</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICKoreanExtendedAndKorean {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICKoreanExtendedAndKorean">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICKoreanExtendedAndKorean</name>
			<value>50933</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICLatinAmericaSpain {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICLatinAmericaSpain">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICLatinAmericaSpain</name>
			<value>20284</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICMultilingualROECELatin2 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICMultilingualROECELatin2">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICMultilingualROECELatin2</name>
			<value>870</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICRussian {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICRussian">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICRussian</name>
			<value>20880</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICSerbianBulgarian {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICSerbianBulgarian">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICSerbianBulgarian</name>
			<value>21025</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese</name>
			<value>50935</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICThai {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICThai">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICThai</name>
			<value>20838</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICTurkish {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICTurkish">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICTurkish</name>
			<value>20905</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICTurkishLatin5 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICTurkishLatin5">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICTurkishLatin5</name>
			<value>1026</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICUnitedKingdom {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICUnitedKingdom">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICUnitedKingdom</name>
			<value>20285</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICUSCanada {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICUSCanada">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICUSCanada</name>
			<value>37</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICUSCanadaAndJapanese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICUSCanadaAndJapanese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICUSCanadaAndJapanese</name>
			<value>50931</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEBCDICUSCanadaAndTraditionalChinese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEBCDICUSCanadaAndTraditionalChinese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEBCDICUSCanadaAndTraditionalChinese</name>
			<value>50937</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEUCChineseSimplifiedChinese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEUCChineseSimplifiedChinese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEUCChineseSimplifiedChinese</name>
			<value>51936</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEUCJapanese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEUCJapanese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEUCJapanese</name>
			<value>51932</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEUCKorean {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEUCKorean">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEUCKorean</name>
			<value>51949</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEUCTaiwaneseTraditionalChinese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEUCTaiwaneseTraditionalChinese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEUCTaiwaneseTraditionalChinese</name>
			<value>51950</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingEuropa3 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingEuropa3">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingEuropa3</name>
			<value>29001</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingExtAlphaLowercase {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingExtAlphaLowercase">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingExtAlphaLowercase</name>
			<value>21027</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingGreek {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingGreek">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingGreek</name>
			<value>1253</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingGreekAutoDetect {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingGreekAutoDetect">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingGreekAutoDetect</name>
			<value>51253</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingHebrew {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingHebrew">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingHebrew</name>
			<value>1255</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingHZGBSimplifiedChinese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingHZGBSimplifiedChinese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingHZGBSimplifiedChinese</name>
			<value>52936</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingIA5German {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingIA5German">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingIA5German</name>
			<value>20106</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingIA5IRV {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingIA5IRV">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingIA5IRV</name>
			<value>20105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingIA5Norwegian {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingIA5Norwegian">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingIA5Norwegian</name>
			<value>20108</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingIA5Swedish {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingIA5Swedish">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingIA5Swedish</name>
			<value>20107</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISCIIAssamese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISCIIAssamese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISCIIAssamese</name>
			<value>57006</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISCIIBengali {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISCIIBengali">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISCIIBengali</name>
			<value>57003</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISCIIDevanagari {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISCIIDevanagari">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISCIIDevanagari</name>
			<value>57002</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISCIIGujarati {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISCIIGujarati">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISCIIGujarati</name>
			<value>57010</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISCIIKannada {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISCIIKannada">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISCIIKannada</name>
			<value>57008</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISCIIMalayalam {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISCIIMalayalam">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISCIIMalayalam</name>
			<value>57009</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISCIIOriya {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISCIIOriya">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISCIIOriya</name>
			<value>57007</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISCIIPunjabi {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISCIIPunjabi">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISCIIPunjabi</name>
			<value>57011</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISCIITamil {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISCIITamil">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISCIITamil</name>
			<value>57004</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISCIITelugu {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISCIITelugu">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISCIITelugu</name>
			<value>57005</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO2022CNSimplifiedChinese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO2022CNSimplifiedChinese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO2022CNSimplifiedChinese</name>
			<value>50229</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO2022CNTraditionalChinese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO2022CNTraditionalChinese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO2022CNTraditionalChinese</name>
			<value>50227</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO2022JPJISX02011989 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO2022JPJISX02011989">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO2022JPJISX02011989</name>
			<value>50222</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO2022JPJISX02021984 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO2022JPJISX02021984">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO2022JPJISX02021984</name>
			<value>50221</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO2022JPNoHalfwidthKatakana {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO2022JPNoHalfwidthKatakana">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO2022JPNoHalfwidthKatakana</name>
			<value>50220</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO2022KR {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO2022KR">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO2022KR</name>
			<value>50225</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO6937NonSpacingAccent {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO6937NonSpacingAccent">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO6937NonSpacingAccent</name>
			<value>20269</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO885915Latin9 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO885915Latin9">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO885915Latin9</name>
			<value>28605</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO88591Latin1 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO88591Latin1">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO88591Latin1</name>
			<value>28591</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO88592CentralEurope {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO88592CentralEurope">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO88592CentralEurope</name>
			<value>28592</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO88593Latin3 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO88593Latin3">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO88593Latin3</name>
			<value>28593</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO88594Baltic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO88594Baltic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO88594Baltic</name>
			<value>28594</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO88595Cyrillic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO88595Cyrillic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO88595Cyrillic</name>
			<value>28595</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO88596Arabic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO88596Arabic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO88596Arabic</name>
			<value>28596</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO88597Greek {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO88597Greek">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO88597Greek</name>
			<value>28597</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO88598Hebrew {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO88598Hebrew">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO88598Hebrew</name>
			<value>28598</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO88598HebrewLogical {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO88598HebrewLogical">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO88598HebrewLogical</name>
			<value>38598</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingISO88599Turkish {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingISO88599Turkish">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingISO88599Turkish</name>
			<value>28599</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingJapaneseAutoDetect {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingJapaneseAutoDetect">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingJapaneseAutoDetect</name>
			<value>50932</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingJapaneseShiftJIS {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingJapaneseShiftJIS">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingJapaneseShiftJIS</name>
			<value>932</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingKOI8R {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingKOI8R">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingKOI8R</name>
			<value>20866</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingKOI8U {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingKOI8U">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingKOI8U</name>
			<value>21866</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingKorean {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingKorean">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingKorean</name>
			<value>949</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingKoreanAutoDetect {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingKoreanAutoDetect">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingKoreanAutoDetect</name>
			<value>50949</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingKoreanJohab {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingKoreanJohab">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingKoreanJohab</name>
			<value>1361</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacArabic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacArabic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacArabic</name>
			<value>10004</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacCroatia {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacCroatia">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacCroatia</name>
			<value>10082</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacCyrillic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacCyrillic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacCyrillic</name>
			<value>10007</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacGreek1 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacGreek1">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacGreek1</name>
			<value>10006</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacHebrew {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacHebrew">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacHebrew</name>
			<value>10005</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacIcelandic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacIcelandic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacIcelandic</name>
			<value>10079</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacJapanese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacJapanese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacJapanese</name>
			<value>10001</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacKorean {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacKorean">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacKorean</name>
			<value>10003</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacLatin2 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacLatin2">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacLatin2</name>
			<value>10029</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacRoman {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacRoman">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacRoman</name>
			<value>10000</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacRomania {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacRomania">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacRomania</name>
			<value>10010</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacSimplifiedChineseGB2312 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacSimplifiedChineseGB2312">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacSimplifiedChineseGB2312</name>
			<value>10008</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacTraditionalChineseBig5 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacTraditionalChineseBig5">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacTraditionalChineseBig5</name>
			<value>10002</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacTurkish {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacTurkish">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacTurkish</name>
			<value>10081</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingMacUkraine {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingMacUkraine">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingMacUkraine</name>
			<value>10017</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMArabic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMArabic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMArabic</name>
			<value>864</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMBaltic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMBaltic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMBaltic</name>
			<value>775</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMCanadianFrench {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMCanadianFrench">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMCanadianFrench</name>
			<value>863</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMCyrillic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMCyrillic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMCyrillic</name>
			<value>855</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMCyrillicII {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMCyrillicII">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMCyrillicII</name>
			<value>866</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMGreek437G {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMGreek437G">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMGreek437G</name>
			<value>737</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMHebrew {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMHebrew">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMHebrew</name>
			<value>862</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMIcelandic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMIcelandic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMIcelandic</name>
			<value>861</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMModernGreek {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMModernGreek">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMModernGreek</name>
			<value>869</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMMultilingualLatinI {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMMultilingualLatinI">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMMultilingualLatinI</name>
			<value>850</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMMultilingualLatinII {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMMultilingualLatinII">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMMultilingualLatinII</name>
			<value>852</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMNordic {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMNordic">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMNordic</name>
			<value>865</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMPortuguese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMPortuguese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMPortuguese</name>
			<value>860</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMTurkish {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMTurkish">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMTurkish</name>
			<value>857</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingOEMUnitedStates {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingOEMUnitedStates">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingOEMUnitedStates</name>
			<value>437</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingSimplifiedChineseAutoDetect {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingSimplifiedChineseAutoDetect">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingSimplifiedChineseAutoDetect</name>
			<value>50936</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingSimplifiedChineseGB18030 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingSimplifiedChineseGB18030">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingSimplifiedChineseGB18030</name>
			<value>54936</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingSimplifiedChineseGBK {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingSimplifiedChineseGBK">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingSimplifiedChineseGBK</name>
			<value>936</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingT61 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingT61">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingT61</name>
			<value>20261</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingTaiwanCNS {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingTaiwanCNS">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingTaiwanCNS</name>
			<value>20000</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingTaiwanEten {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingTaiwanEten">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingTaiwanEten</name>
			<value>20002</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingTaiwanIBM5550 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingTaiwanIBM5550">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingTaiwanIBM5550</name>
			<value>20003</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingTaiwanTCA {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingTaiwanTCA">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingTaiwanTCA</name>
			<value>20001</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingTaiwanTeleText {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingTaiwanTeleText">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingTaiwanTeleText</name>
			<value>20004</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingTaiwanWang {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingTaiwanWang">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingTaiwanWang</name>
			<value>20005</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingThai {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingThai">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingThai</name>
			<value>874</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingTraditionalChineseAutoDetect {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingTraditionalChineseAutoDetect">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingTraditionalChineseAutoDetect</name>
			<value>50950</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingTraditionalChineseBig5 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingTraditionalChineseBig5">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingTraditionalChineseBig5</name>
			<value>950</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingTurkish {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingTurkish">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingTurkish</name>
			<value>1254</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingUnicodeBigEndian {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingUnicodeBigEndian">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingUnicodeBigEndian</name>
			<value>1201</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingUnicodeLittleEndian {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingUnicodeLittleEndian">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingUnicodeLittleEndian</name>
			<value>1200</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingUSASCII {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingUSASCII">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingUSASCII</name>
			<value>20127</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingUTF7 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingUTF7">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingUTF7</name>
			<value>65000</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingUTF8 {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingUTF8">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingUTF8</name>
			<value>65001</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingVietnamese {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingVietnamese">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingVietnamese</name>
			<value>1258</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEncodingWestern {Constant}-->
	<element type="constant">
		<source id="Office.MsoEncoding.msoEncodingWestern">
			<context kind="enumeration">MsoEncoding</context>
			<name>msoEncodingWestern</name>
			<value>1252</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--Class::MsoEnvelope-->
	<element type="class">
		<source id="Office.MsoEnvelope">
			<name>MsoEnvelope</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::MsoEnvelope.CommandBars {ReadOnly}-->
	<element type="property">
		<source id="Office.MsoEnvelope.CommandBars">
			<context kind="class">MsoEnvelope</context>
			<name>CommandBars</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::MsoEnvelope.EnvelopeHide-->
	<element type="method">
		<source id="Office.MsoEnvelope.EnvelopeHide">
			<context kind="class">MsoEnvelope</context>
			<name>EnvelopeHide</name>
			<type>void</type>
		</source>
	</element>
	<!--method::MsoEnvelope.EnvelopeShow-->
	<element type="method">
		<source id="Office.MsoEnvelope.EnvelopeShow">
			<context kind="class">MsoEnvelope</context>
			<name>EnvelopeShow</name>
			<type>void</type>
		</source>
	</element>
	<!--property::MsoEnvelope.Introduction-->
	<element type="property">
		<source id="Office.MsoEnvelope.Introduction">
			<context kind="class">MsoEnvelope</context>
			<name>Introduction</name>
			<type>String</type>
		</source>
	</element>
	<!--property::MsoEnvelope.Item {ReadOnly}-->
	<element type="property">
		<source id="Office.MsoEnvelope.Item">
			<context kind="class">MsoEnvelope</context>
			<name>Item</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::MsoEnvelope.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.MsoEnvelope.Parent">
			<context kind="class">MsoEnvelope</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--enum::MsoExtraInfoMethod  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoExtraInfoMethod">
			<name>MsoExtraInfoMethod</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMethodGet {Constant}-->
	<element type="constant">
		<source id="Office.MsoExtraInfoMethod.msoMethodGet">
			<context kind="enumeration">MsoExtraInfoMethod</context>
			<name>msoMethodGet</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMethodPost {Constant}-->
	<element type="constant">
		<source id="Office.MsoExtraInfoMethod.msoMethodPost">
			<context kind="enumeration">MsoExtraInfoMethod</context>
			<name>msoMethodPost</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoExtrusionColorType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoExtrusionColorType">
			<name>MsoExtrusionColorType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoExtrusionColorAutomatic {Constant}-->
	<element type="constant">
		<source id="Office.MsoExtrusionColorType.msoExtrusionColorAutomatic">
			<context kind="enumeration">MsoExtrusionColorType</context>
			<name>msoExtrusionColorAutomatic</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoExtrusionColorCustom {Constant}-->
	<element type="constant">
		<source id="Office.MsoExtrusionColorType.msoExtrusionColorCustom">
			<context kind="enumeration">MsoExtrusionColorType</context>
			<name>msoExtrusionColorCustom</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoExtrusionColorTypeMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoExtrusionColorType.msoExtrusionColorTypeMixed">
			<context kind="enumeration">MsoExtrusionColorType</context>
			<name>msoExtrusionColorTypeMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFarEastLineBreakLanguageID  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFarEastLineBreakLanguageID">
			<name>MsoFarEastLineBreakLanguageID</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFarEastLineBreakLanguageJapanese {Constant}-->
	<element type="constant">
		<source id="Office.MsoFarEastLineBreakLanguageID.MsoFarEastLineBreakLanguageJapanese">
			<context kind="enumeration">MsoFarEastLineBreakLanguageID</context>
			<name>MsoFarEastLineBreakLanguageJapanese</name>
			<value>1041</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFarEastLineBreakLanguageKorean {Constant}-->
	<element type="constant">
		<source id="Office.MsoFarEastLineBreakLanguageID.MsoFarEastLineBreakLanguageKorean">
			<context kind="enumeration">MsoFarEastLineBreakLanguageID</context>
			<name>MsoFarEastLineBreakLanguageKorean</name>
			<value>1042</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFarEastLineBreakLanguageSimplifiedChinese {Constant}-->
	<element type="constant">
		<source id="Office.MsoFarEastLineBreakLanguageID.MsoFarEastLineBreakLanguageSimplifiedChinese">
			<context kind="enumeration">MsoFarEastLineBreakLanguageID</context>
			<name>MsoFarEastLineBreakLanguageSimplifiedChinese</name>
			<value>2052</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFarEastLineBreakLanguageTraditionalChinese {Constant}-->
	<element type="constant">
		<source id="Office.MsoFarEastLineBreakLanguageID.MsoFarEastLineBreakLanguageTraditionalChinese">
			<context kind="enumeration">MsoFarEastLineBreakLanguageID</context>
			<name>MsoFarEastLineBreakLanguageTraditionalChinese</name>
			<value>1028</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFeatureInstall  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFeatureInstall">
			<name>MsoFeatureInstall</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFeatureInstallNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoFeatureInstall.msoFeatureInstallNone">
			<context kind="enumeration">MsoFeatureInstall</context>
			<name>msoFeatureInstallNone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFeatureInstallOnDemand {Constant}-->
	<element type="constant">
		<source id="Office.MsoFeatureInstall.msoFeatureInstallOnDemand">
			<context kind="enumeration">MsoFeatureInstall</context>
			<name>msoFeatureInstallOnDemand</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFeatureInstallOnDemandWithUI {Constant}-->
	<element type="constant">
		<source id="Office.MsoFeatureInstall.msoFeatureInstallOnDemandWithUI">
			<context kind="enumeration">MsoFeatureInstall</context>
			<name>msoFeatureInstallOnDemandWithUI</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFileDialogType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFileDialogType">
			<name>MsoFileDialogType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileDialogFilePicker {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileDialogType.msoFileDialogFilePicker">
			<context kind="enumeration">MsoFileDialogType</context>
			<name>msoFileDialogFilePicker</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileDialogFolderPicker {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileDialogType.msoFileDialogFolderPicker">
			<context kind="enumeration">MsoFileDialogType</context>
			<name>msoFileDialogFolderPicker</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileDialogOpen {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileDialogType.msoFileDialogOpen">
			<context kind="enumeration">MsoFileDialogType</context>
			<name>msoFileDialogOpen</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileDialogSaveAs {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileDialogType.msoFileDialogSaveAs">
			<context kind="enumeration">MsoFileDialogType</context>
			<name>msoFileDialogSaveAs</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFileDialogView  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFileDialogView">
			<name>MsoFileDialogView</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileDialogViewDetails {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileDialogView.msoFileDialogViewDetails">
			<context kind="enumeration">MsoFileDialogView</context>
			<name>msoFileDialogViewDetails</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileDialogViewLargeIcons {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileDialogView.msoFileDialogViewLargeIcons">
			<context kind="enumeration">MsoFileDialogView</context>
			<name>msoFileDialogViewLargeIcons</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileDialogViewList {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileDialogView.msoFileDialogViewList">
			<context kind="enumeration">MsoFileDialogView</context>
			<name>msoFileDialogViewList</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileDialogViewPreview {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileDialogView.msoFileDialogViewPreview">
			<context kind="enumeration">MsoFileDialogView</context>
			<name>msoFileDialogViewPreview</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileDialogViewProperties {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileDialogView.msoFileDialogViewProperties">
			<context kind="enumeration">MsoFileDialogView</context>
			<name>msoFileDialogViewProperties</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileDialogViewSmallIcons {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileDialogView.msoFileDialogViewSmallIcons">
			<context kind="enumeration">MsoFileDialogView</context>
			<name>msoFileDialogViewSmallIcons</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileDialogViewThumbnail {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileDialogView.msoFileDialogViewThumbnail">
			<context kind="enumeration">MsoFileDialogView</context>
			<name>msoFileDialogViewThumbnail</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileDialogViewTiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileDialogView.msoFileDialogViewTiles">
			<context kind="enumeration">MsoFileDialogView</context>
			<name>msoFileDialogViewTiles</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileDialogViewWebView {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileDialogView.msoFileDialogViewWebView">
			<context kind="enumeration">MsoFileDialogView</context>
			<name>msoFileDialogViewWebView</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFileFindListBy  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFileFindListBy">
			<name>MsoFileFindListBy</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoListbyName {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindListBy.msoListbyName">
			<context kind="enumeration">MsoFileFindListBy</context>
			<name>msoListbyName</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoListbyTitle {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindListBy.msoListbyTitle">
			<context kind="enumeration">MsoFileFindListBy</context>
			<name>msoListbyTitle</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFileFindOptions  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFileFindOptions">
			<name>MsoFileFindOptions</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOptionsAdd {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindOptions.msoOptionsAdd">
			<context kind="enumeration">MsoFileFindOptions</context>
			<name>msoOptionsAdd</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOptionsNew {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindOptions.msoOptionsNew">
			<context kind="enumeration">MsoFileFindOptions</context>
			<name>msoOptionsNew</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOptionsWithin {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindOptions.msoOptionsWithin">
			<context kind="enumeration">MsoFileFindOptions</context>
			<name>msoOptionsWithin</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFileFindSortBy  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFileFindSortBy">
			<name>MsoFileFindSortBy</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileFindSortbyAuthor {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindSortBy.msoFileFindSortbyAuthor">
			<context kind="enumeration">MsoFileFindSortBy</context>
			<name>msoFileFindSortbyAuthor</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileFindSortbyDateCreated {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindSortBy.msoFileFindSortbyDateCreated">
			<context kind="enumeration">MsoFileFindSortBy</context>
			<name>msoFileFindSortbyDateCreated</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileFindSortbyDateSaved {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindSortBy.msoFileFindSortbyDateSaved">
			<context kind="enumeration">MsoFileFindSortBy</context>
			<name>msoFileFindSortbyDateSaved</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileFindSortbyFileName {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindSortBy.msoFileFindSortbyFileName">
			<context kind="enumeration">MsoFileFindSortBy</context>
			<name>msoFileFindSortbyFileName</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileFindSortbyLastSavedBy {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindSortBy.msoFileFindSortbyLastSavedBy">
			<context kind="enumeration">MsoFileFindSortBy</context>
			<name>msoFileFindSortbyLastSavedBy</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileFindSortbySize {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindSortBy.msoFileFindSortbySize">
			<context kind="enumeration">MsoFileFindSortBy</context>
			<name>msoFileFindSortbySize</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileFindSortbyTitle {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindSortBy.msoFileFindSortbyTitle">
			<context kind="enumeration">MsoFileFindSortBy</context>
			<name>msoFileFindSortbyTitle</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFileFindView  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFileFindView">
			<name>MsoFileFindView</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoViewFileInfo {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindView.msoViewFileInfo">
			<context kind="enumeration">MsoFileFindView</context>
			<name>msoViewFileInfo</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoViewPreview {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindView.msoViewPreview">
			<context kind="enumeration">MsoFileFindView</context>
			<name>msoViewPreview</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoViewSummaryInfo {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileFindView.msoViewSummaryInfo">
			<context kind="enumeration">MsoFileFindView</context>
			<name>msoViewSummaryInfo</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFileNewAction  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFileNewAction">
			<name>MsoFileNewAction</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCreateNewFile {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileNewAction.msoCreateNewFile">
			<context kind="enumeration">MsoFileNewAction</context>
			<name>msoCreateNewFile</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEditFile {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileNewAction.msoEditFile">
			<context kind="enumeration">MsoFileNewAction</context>
			<name>msoEditFile</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOpenFile {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileNewAction.msoOpenFile">
			<context kind="enumeration">MsoFileNewAction</context>
			<name>msoOpenFile</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFileNewSection  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFileNewSection">
			<name>MsoFileNewSection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBottomSection {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileNewSection.msoBottomSection">
			<context kind="enumeration">MsoFileNewSection</context>
			<name>msoBottomSection</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoNew {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileNewSection.msoNew">
			<context kind="enumeration">MsoFileNewSection</context>
			<name>msoNew</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoNewfromExistingFile {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileNewSection.msoNewfromExistingFile">
			<context kind="enumeration">MsoFileNewSection</context>
			<name>msoNewfromExistingFile</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoNewfromTemplate {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileNewSection.msoNewfromTemplate">
			<context kind="enumeration">MsoFileNewSection</context>
			<name>msoNewfromTemplate</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOpenDocument {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileNewSection.msoOpenDocument">
			<context kind="enumeration">MsoFileNewSection</context>
			<name>msoOpenDocument</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFileType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFileType">
			<name>MsoFileType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeAllFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeAllFiles">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeAllFiles</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeBinders {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeBinders">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeBinders</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeCalendarItem {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeCalendarItem">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeCalendarItem</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeContactItem {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeContactItem">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeContactItem</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeDatabases {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeDatabases">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeDatabases</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeDataConnectionFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeDataConnectionFiles">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeDataConnectionFiles</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeDesignerFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeDesignerFiles">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeDesignerFiles</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeDocumentImagingFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeDocumentImagingFiles">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeDocumentImagingFiles</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeExcelWorkbooks {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeExcelWorkbooks">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeExcelWorkbooks</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeJournalItem {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeJournalItem">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeJournalItem</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeMailItem {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeMailItem">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeMailItem</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeNoteItem {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeNoteItem">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeNoteItem</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeOfficeFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeOfficeFiles">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeOfficeFiles</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeOutlookItems {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeOutlookItems">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeOutlookItems</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypePhotoDrawFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypePhotoDrawFiles">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypePhotoDrawFiles</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypePowerPointPresentations {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypePowerPointPresentations">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypePowerPointPresentations</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeProjectFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeProjectFiles">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeProjectFiles</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypePublisherFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypePublisherFiles">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypePublisherFiles</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeTaskItem {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeTaskItem">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeTaskItem</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeTemplates {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeTemplates">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeTemplates</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeVisioFiles {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeVisioFiles">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeVisioFiles</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeWebPages {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeWebPages">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeWebPages</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFileTypeWordDocuments {Constant}-->
	<element type="constant">
		<source id="Office.MsoFileType.msoFileTypeWordDocuments">
			<context kind="enumeration">MsoFileType</context>
			<name>msoFileTypeWordDocuments</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFillType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFillType">
			<name>MsoFillType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFillBackground {Constant}-->
	<element type="constant">
		<source id="Office.MsoFillType.msoFillBackground">
			<context kind="enumeration">MsoFillType</context>
			<name>msoFillBackground</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFillGradient {Constant}-->
	<element type="constant">
		<source id="Office.MsoFillType.msoFillGradient">
			<context kind="enumeration">MsoFillType</context>
			<name>msoFillGradient</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFillMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoFillType.msoFillMixed">
			<context kind="enumeration">MsoFillType</context>
			<name>msoFillMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFillPatterned {Constant}-->
	<element type="constant">
		<source id="Office.MsoFillType.msoFillPatterned">
			<context kind="enumeration">MsoFillType</context>
			<name>msoFillPatterned</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFillPicture {Constant}-->
	<element type="constant">
		<source id="Office.MsoFillType.msoFillPicture">
			<context kind="enumeration">MsoFillType</context>
			<name>msoFillPicture</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFillSolid {Constant}-->
	<element type="constant">
		<source id="Office.MsoFillType.msoFillSolid">
			<context kind="enumeration">MsoFillType</context>
			<name>msoFillSolid</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFillTextured {Constant}-->
	<element type="constant">
		<source id="Office.MsoFillType.msoFillTextured">
			<context kind="enumeration">MsoFillType</context>
			<name>msoFillTextured</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFilterComparison  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFilterComparison">
			<name>MsoFilterComparison</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFilterComparisonContains {Constant}-->
	<element type="constant">
		<source id="Office.MsoFilterComparison.msoFilterComparisonContains">
			<context kind="enumeration">MsoFilterComparison</context>
			<name>msoFilterComparisonContains</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFilterComparisonEqual {Constant}-->
	<element type="constant">
		<source id="Office.MsoFilterComparison.msoFilterComparisonEqual">
			<context kind="enumeration">MsoFilterComparison</context>
			<name>msoFilterComparisonEqual</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFilterComparisonGreaterThan {Constant}-->
	<element type="constant">
		<source id="Office.MsoFilterComparison.msoFilterComparisonGreaterThan">
			<context kind="enumeration">MsoFilterComparison</context>
			<name>msoFilterComparisonGreaterThan</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFilterComparisonGreaterThanEqual {Constant}-->
	<element type="constant">
		<source id="Office.MsoFilterComparison.msoFilterComparisonGreaterThanEqual">
			<context kind="enumeration">MsoFilterComparison</context>
			<name>msoFilterComparisonGreaterThanEqual</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFilterComparisonIsBlank {Constant}-->
	<element type="constant">
		<source id="Office.MsoFilterComparison.msoFilterComparisonIsBlank">
			<context kind="enumeration">MsoFilterComparison</context>
			<name>msoFilterComparisonIsBlank</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFilterComparisonIsNotBlank {Constant}-->
	<element type="constant">
		<source id="Office.MsoFilterComparison.msoFilterComparisonIsNotBlank">
			<context kind="enumeration">MsoFilterComparison</context>
			<name>msoFilterComparisonIsNotBlank</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFilterComparisonLessThan {Constant}-->
	<element type="constant">
		<source id="Office.MsoFilterComparison.msoFilterComparisonLessThan">
			<context kind="enumeration">MsoFilterComparison</context>
			<name>msoFilterComparisonLessThan</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFilterComparisonLessThanEqual {Constant}-->
	<element type="constant">
		<source id="Office.MsoFilterComparison.msoFilterComparisonLessThanEqual">
			<context kind="enumeration">MsoFilterComparison</context>
			<name>msoFilterComparisonLessThanEqual</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFilterComparisonNotContains {Constant}-->
	<element type="constant">
		<source id="Office.MsoFilterComparison.msoFilterComparisonNotContains">
			<context kind="enumeration">MsoFilterComparison</context>
			<name>msoFilterComparisonNotContains</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFilterComparisonNotEqual {Constant}-->
	<element type="constant">
		<source id="Office.MsoFilterComparison.msoFilterComparisonNotEqual">
			<context kind="enumeration">MsoFilterComparison</context>
			<name>msoFilterComparisonNotEqual</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFilterConjunction  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFilterConjunction">
			<name>MsoFilterConjunction</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFilterConjunctionAnd {Constant}-->
	<element type="constant">
		<source id="Office.MsoFilterConjunction.msoFilterConjunctionAnd">
			<context kind="enumeration">MsoFilterConjunction</context>
			<name>msoFilterConjunctionAnd</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFilterConjunctionOr {Constant}-->
	<element type="constant">
		<source id="Office.MsoFilterConjunction.msoFilterConjunctionOr">
			<context kind="enumeration">MsoFilterConjunction</context>
			<name>msoFilterConjunctionOr</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoFlipCmd  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoFlipCmd">
			<name>MsoFlipCmd</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFlipHorizontal {Constant}-->
	<element type="constant">
		<source id="Office.MsoFlipCmd.msoFlipHorizontal">
			<context kind="enumeration">MsoFlipCmd</context>
			<name>msoFlipHorizontal</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFlipVertical {Constant}-->
	<element type="constant">
		<source id="Office.MsoFlipCmd.msoFlipVertical">
			<context kind="enumeration">MsoFlipCmd</context>
			<name>msoFlipVertical</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoGradientColorType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoGradientColorType">
			<name>MsoGradientColorType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientColorMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoGradientColorType.msoGradientColorMixed">
			<context kind="enumeration">MsoGradientColorType</context>
			<name>msoGradientColorMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientOneColor {Constant}-->
	<element type="constant">
		<source id="Office.MsoGradientColorType.msoGradientOneColor">
			<context kind="enumeration">MsoGradientColorType</context>
			<name>msoGradientOneColor</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientPresetColors {Constant}-->
	<element type="constant">
		<source id="Office.MsoGradientColorType.msoGradientPresetColors">
			<context kind="enumeration">MsoGradientColorType</context>
			<name>msoGradientPresetColors</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientTwoColors {Constant}-->
	<element type="constant">
		<source id="Office.MsoGradientColorType.msoGradientTwoColors">
			<context kind="enumeration">MsoGradientColorType</context>
			<name>msoGradientTwoColors</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoGradientStyle  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoGradientStyle">
			<name>MsoGradientStyle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientDiagonalDown {Constant}-->
	<element type="constant">
		<source id="Office.MsoGradientStyle.msoGradientDiagonalDown">
			<context kind="enumeration">MsoGradientStyle</context>
			<name>msoGradientDiagonalDown</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientDiagonalUp {Constant}-->
	<element type="constant">
		<source id="Office.MsoGradientStyle.msoGradientDiagonalUp">
			<context kind="enumeration">MsoGradientStyle</context>
			<name>msoGradientDiagonalUp</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientFromCenter {Constant}-->
	<element type="constant">
		<source id="Office.MsoGradientStyle.msoGradientFromCenter">
			<context kind="enumeration">MsoGradientStyle</context>
			<name>msoGradientFromCenter</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientFromCorner {Constant}-->
	<element type="constant">
		<source id="Office.MsoGradientStyle.msoGradientFromCorner">
			<context kind="enumeration">MsoGradientStyle</context>
			<name>msoGradientFromCorner</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientFromTitle {Constant}-->
	<element type="constant">
		<source id="Office.MsoGradientStyle.msoGradientFromTitle">
			<context kind="enumeration">MsoGradientStyle</context>
			<name>msoGradientFromTitle</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientHorizontal {Constant}-->
	<element type="constant">
		<source id="Office.MsoGradientStyle.msoGradientHorizontal">
			<context kind="enumeration">MsoGradientStyle</context>
			<name>msoGradientHorizontal</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoGradientStyle.msoGradientMixed">
			<context kind="enumeration">MsoGradientStyle</context>
			<name>msoGradientMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientVertical {Constant}-->
	<element type="constant">
		<source id="Office.MsoGradientStyle.msoGradientVertical">
			<context kind="enumeration">MsoGradientStyle</context>
			<name>msoGradientVertical</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoHorizontalAnchor  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoHorizontalAnchor">
			<name>MsoHorizontalAnchor</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnchorCenter {Constant}-->
	<element type="constant">
		<source id="Office.MsoHorizontalAnchor.msoAnchorCenter">
			<context kind="enumeration">MsoHorizontalAnchor</context>
			<name>msoAnchorCenter</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnchorNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoHorizontalAnchor.msoAnchorNone">
			<context kind="enumeration">MsoHorizontalAnchor</context>
			<name>msoAnchorNone</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoHorizontalAnchorMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoHorizontalAnchor.msoHorizontalAnchorMixed">
			<context kind="enumeration">MsoHorizontalAnchor</context>
			<name>msoHorizontalAnchorMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoHTMLProjectOpen  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoHTMLProjectOpen">
			<name>MsoHTMLProjectOpen</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoHTMLProjectOpenSourceView {Constant}-->
	<element type="constant">
		<source id="Office.MsoHTMLProjectOpen.msoHTMLProjectOpenSourceView">
			<context kind="enumeration">MsoHTMLProjectOpen</context>
			<name>msoHTMLProjectOpenSourceView</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoHTMLProjectOpenTextView {Constant}-->
	<element type="constant">
		<source id="Office.MsoHTMLProjectOpen.msoHTMLProjectOpenTextView">
			<context kind="enumeration">MsoHTMLProjectOpen</context>
			<name>msoHTMLProjectOpenTextView</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoHTMLProjectState  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoHTMLProjectState">
			<name>MsoHTMLProjectState</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoHTMLProjectStateDocumentLocked {Constant}-->
	<element type="constant">
		<source id="Office.MsoHTMLProjectState.msoHTMLProjectStateDocumentLocked">
			<context kind="enumeration">MsoHTMLProjectState</context>
			<name>msoHTMLProjectStateDocumentLocked</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoHTMLProjectStateDocumentProjectUnlocked {Constant}-->
	<element type="constant">
		<source id="Office.MsoHTMLProjectState.msoHTMLProjectStateDocumentProjectUnlocked">
			<context kind="enumeration">MsoHTMLProjectState</context>
			<name>msoHTMLProjectStateDocumentProjectUnlocked</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoHTMLProjectStateProjectLocked {Constant}-->
	<element type="constant">
		<source id="Office.MsoHTMLProjectState.msoHTMLProjectStateProjectLocked">
			<context kind="enumeration">MsoHTMLProjectState</context>
			<name>msoHTMLProjectStateProjectLocked</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoHyperlinkType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoHyperlinkType">
			<name>MsoHyperlinkType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoHyperlinkInlineShape {Constant}-->
	<element type="constant">
		<source id="Office.MsoHyperlinkType.msoHyperlinkInlineShape">
			<context kind="enumeration">MsoHyperlinkType</context>
			<name>msoHyperlinkInlineShape</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoHyperlinkRange {Constant}-->
	<element type="constant">
		<source id="Office.MsoHyperlinkType.msoHyperlinkRange">
			<context kind="enumeration">MsoHyperlinkType</context>
			<name>msoHyperlinkRange</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoHyperlinkShape {Constant}-->
	<element type="constant">
		<source id="Office.MsoHyperlinkType.msoHyperlinkShape">
			<context kind="enumeration">MsoHyperlinkType</context>
			<name>msoHyperlinkShape</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoIconType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoIconType">
			<name>MsoIconType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoIconAlert {Constant}-->
	<element type="constant">
		<source id="Office.MsoIconType.msoIconAlert">
			<context kind="enumeration">MsoIconType</context>
			<name>msoIconAlert</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoIconAlertCritical {Constant}-->
	<element type="constant">
		<source id="Office.MsoIconType.msoIconAlertCritical">
			<context kind="enumeration">MsoIconType</context>
			<name>msoIconAlertCritical</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoIconAlertInfo {Constant}-->
	<element type="constant">
		<source id="Office.MsoIconType.msoIconAlertInfo">
			<context kind="enumeration">MsoIconType</context>
			<name>msoIconAlertInfo</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoIconAlertQuery {Constant}-->
	<element type="constant">
		<source id="Office.MsoIconType.msoIconAlertQuery">
			<context kind="enumeration">MsoIconType</context>
			<name>msoIconAlertQuery</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoIconAlertWarning {Constant}-->
	<element type="constant">
		<source id="Office.MsoIconType.msoIconAlertWarning">
			<context kind="enumeration">MsoIconType</context>
			<name>msoIconAlertWarning</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoIconNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoIconType.msoIconNone">
			<context kind="enumeration">MsoIconType</context>
			<name>msoIconNone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoIconTip {Constant}-->
	<element type="constant">
		<source id="Office.MsoIconType.msoIconTip">
			<context kind="enumeration">MsoIconType</context>
			<name>msoIconTip</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoLanguageID  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoLanguageID">
			<name>MsoLanguageID</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDAfrikaans {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDAfrikaans">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDAfrikaans</name>
			<value>1078</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDAlbanian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDAlbanian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDAlbanian</name>
			<value>1052</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDAmharic {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDAmharic">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDAmharic</name>
			<value>1118</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabic {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabic">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabic</name>
			<value>1025</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicAlgeria {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicAlgeria">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicAlgeria</name>
			<value>5121</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicBahrain {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicBahrain">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicBahrain</name>
			<value>15361</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicEgypt {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicEgypt">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicEgypt</name>
			<value>3073</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicIraq {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicIraq">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicIraq</name>
			<value>2049</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicJordan {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicJordan">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicJordan</name>
			<value>11265</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicKuwait {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicKuwait">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicKuwait</name>
			<value>13313</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicLebanon {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicLebanon">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicLebanon</name>
			<value>12289</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicLibya {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicLibya">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicLibya</name>
			<value>4097</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicMorocco {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicMorocco">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicMorocco</name>
			<value>6145</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicOman {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicOman">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicOman</name>
			<value>8193</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicQatar {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicQatar">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicQatar</name>
			<value>16385</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicSyria {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicSyria">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicSyria</name>
			<value>10241</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicTunisia {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicTunisia">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicTunisia</name>
			<value>7169</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicUAE {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicUAE">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicUAE</name>
			<value>14337</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArabicYemen {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArabicYemen">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArabicYemen</name>
			<value>9217</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDArmenian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDArmenian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDArmenian</name>
			<value>1067</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDAssamese {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDAssamese">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDAssamese</name>
			<value>1101</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDAzeriCyrillic {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDAzeriCyrillic">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDAzeriCyrillic</name>
			<value>2092</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDAzeriLatin {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDAzeriLatin">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDAzeriLatin</name>
			<value>1068</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDBasque {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDBasque">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDBasque</name>
			<value>1069</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDBelgianDutch {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDBelgianDutch">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDBelgianDutch</name>
			<value>2067</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDBelgianFrench {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDBelgianFrench">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDBelgianFrench</name>
			<value>2060</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDBengali {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDBengali">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDBengali</name>
			<value>1093</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDBosnian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDBosnian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDBosnian</name>
			<value>4122</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDBosnianBosniaHerzegovinaCyrillic {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDBosnianBosniaHerzegovinaCyrillic">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDBosnianBosniaHerzegovinaCyrillic</name>
			<value>8218</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDBosnianBosniaHerzegovinaLatin {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDBosnianBosniaHerzegovinaLatin">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDBosnianBosniaHerzegovinaLatin</name>
			<value>5146</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDBrazilianPortuguese {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDBrazilianPortuguese">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDBrazilianPortuguese</name>
			<value>1046</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDBulgarian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDBulgarian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDBulgarian</name>
			<value>1026</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDBurmese {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDBurmese">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDBurmese</name>
			<value>1109</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDByelorussian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDByelorussian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDByelorussian</name>
			<value>1059</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDCatalan {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDCatalan">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDCatalan</name>
			<value>1027</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDCherokee {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDCherokee">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDCherokee</name>
			<value>1116</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDChineseHongKongSAR {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDChineseHongKongSAR">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDChineseHongKongSAR</name>
			<value>3076</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDChineseMacaoSAR {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDChineseMacaoSAR">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDChineseMacaoSAR</name>
			<value>5124</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDChineseSingapore {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDChineseSingapore">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDChineseSingapore</name>
			<value>4100</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDCroatian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDCroatian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDCroatian</name>
			<value>1050</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDCzech {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDCzech">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDCzech</name>
			<value>1029</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDDanish {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDDanish">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDDanish</name>
			<value>1030</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDDivehi {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDDivehi">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDDivehi</name>
			<value>1125</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDDutch {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDDutch">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDDutch</name>
			<value>1043</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDDzongkhaBhutan {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDDzongkhaBhutan">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDDzongkhaBhutan</name>
			<value>2129</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEdo {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEdo">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEdo</name>
			<value>1126</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishAUS {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishAUS">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishAUS</name>
			<value>3081</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishBelize {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishBelize">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishBelize</name>
			<value>10249</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishCanadian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishCanadian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishCanadian</name>
			<value>4105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishCaribbean {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishCaribbean">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishCaribbean</name>
			<value>9225</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishIndonesia {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishIndonesia">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishIndonesia</name>
			<value>14345</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishIreland {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishIreland">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishIreland</name>
			<value>6153</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishJamaica {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishJamaica">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishJamaica</name>
			<value>8201</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishNewZealand {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishNewZealand">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishNewZealand</name>
			<value>5129</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishPhilippines {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishPhilippines">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishPhilippines</name>
			<value>13321</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishSouthAfrica {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishSouthAfrica">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishSouthAfrica</name>
			<value>7177</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishTrinidadTobago {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishTrinidadTobago">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishTrinidadTobago</name>
			<value>11273</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishUK {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishUK">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishUK</name>
			<value>2057</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishUS {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishUS">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishUS</name>
			<value>1033</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishZimbabwe {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEnglishZimbabwe">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEnglishZimbabwe</name>
			<value>12297</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEstonian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDEstonian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDEstonian</name>
			<value>1061</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFaeroese {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFaeroese">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFaeroese</name>
			<value>1080</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFarsi {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFarsi">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFarsi</name>
			<value>1065</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFilipino {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFilipino">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFilipino</name>
			<value>1124</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFinnish {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFinnish">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFinnish</name>
			<value>1035</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrench {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrench">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrench</name>
			<value>1036</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrenchCameroon {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrenchCameroon">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrenchCameroon</name>
			<value>11276</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrenchCanadian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrenchCanadian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrenchCanadian</name>
			<value>3084</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrenchCotedIvoire {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrenchCotedIvoire">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrenchCotedIvoire</name>
			<value>12300</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrenchHaiti {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrenchHaiti">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrenchHaiti</name>
			<value>15372</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrenchLuxembourg {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrenchLuxembourg">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrenchLuxembourg</name>
			<value>5132</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrenchMali {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrenchMali">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrenchMali</name>
			<value>13324</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrenchMonaco {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrenchMonaco">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrenchMonaco</name>
			<value>6156</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrenchMorocco {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrenchMorocco">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrenchMorocco</name>
			<value>14348</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrenchReunion {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrenchReunion">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrenchReunion</name>
			<value>8204</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrenchSenegal {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrenchSenegal">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrenchSenegal</name>
			<value>10252</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrenchWestIndies {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrenchWestIndies">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrenchWestIndies</name>
			<value>7180</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrenchZaire {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrenchZaire">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrenchZaire</name>
			<value>9228</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFrisianNetherlands {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFrisianNetherlands">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFrisianNetherlands</name>
			<value>1122</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDFulfulde {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDFulfulde">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDFulfulde</name>
			<value>1127</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDGaelicIreland {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDGaelicIreland">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDGaelicIreland</name>
			<value>2108</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDGaelicScotland {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDGaelicScotland">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDGaelicScotland</name>
			<value>1084</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDGalician {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDGalician">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDGalician</name>
			<value>1110</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDGeorgian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDGeorgian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDGeorgian</name>
			<value>1079</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDGerman {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDGerman">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDGerman</name>
			<value>1031</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDGermanAustria {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDGermanAustria">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDGermanAustria</name>
			<value>3079</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDGermanLiechtenstein {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDGermanLiechtenstein">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDGermanLiechtenstein</name>
			<value>5127</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDGermanLuxembourg {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDGermanLuxembourg">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDGermanLuxembourg</name>
			<value>4103</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDGreek {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDGreek">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDGreek</name>
			<value>1032</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDGuarani {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDGuarani">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDGuarani</name>
			<value>1140</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDGujarati {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDGujarati">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDGujarati</name>
			<value>1095</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDHausa {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDHausa">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDHausa</name>
			<value>1128</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDHawaiian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDHawaiian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDHawaiian</name>
			<value>1141</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDHebrew {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDHebrew">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDHebrew</name>
			<value>1037</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDHindi {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDHindi">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDHindi</name>
			<value>1081</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDHungarian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDHungarian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDHungarian</name>
			<value>1038</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDIbibio {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDIbibio">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDIbibio</name>
			<value>1129</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDIcelandic {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDIcelandic">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDIcelandic</name>
			<value>1039</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDIgbo {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDIgbo">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDIgbo</name>
			<value>1136</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDIndonesian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDIndonesian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDIndonesian</name>
			<value>1057</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDInuktitut {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDInuktitut">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDInuktitut</name>
			<value>1117</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDItalian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDItalian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDItalian</name>
			<value>1040</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDJapanese {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDJapanese">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDJapanese</name>
			<value>1041</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDKannada {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDKannada">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDKannada</name>
			<value>1099</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDKanuri {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDKanuri">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDKanuri</name>
			<value>1137</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDKashmiri {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDKashmiri">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDKashmiri</name>
			<value>1120</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDKashmiriDevanagari {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDKashmiriDevanagari">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDKashmiriDevanagari</name>
			<value>2144</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDKazakh {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDKazakh">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDKazakh</name>
			<value>1087</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDKhmer {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDKhmer">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDKhmer</name>
			<value>1107</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDKirghiz {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDKirghiz">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDKirghiz</name>
			<value>1088</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDKonkani {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDKonkani">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDKonkani</name>
			<value>1111</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDKorean {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDKorean">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDKorean</name>
			<value>1042</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDKyrgyz {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDKyrgyz">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDKyrgyz</name>
			<value>1088</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDLao {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDLao">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDLao</name>
			<value>1108</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDLatin {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDLatin">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDLatin</name>
			<value>1142</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDLatvian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDLatvian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDLatvian</name>
			<value>1062</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDLithuanian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDLithuanian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDLithuanian</name>
			<value>1063</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDMacedonian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDMacedonian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDMacedonian</name>
			<value>1071</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDMalayalam {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDMalayalam">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDMalayalam</name>
			<value>1100</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDMalayBruneiDarussalam {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDMalayBruneiDarussalam">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDMalayBruneiDarussalam</name>
			<value>2110</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDMalaysian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDMalaysian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDMalaysian</name>
			<value>1086</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDMaltese {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDMaltese">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDMaltese</name>
			<value>1082</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDManipuri {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDManipuri">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDManipuri</name>
			<value>1112</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDMaori {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDMaori">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDMaori</name>
			<value>1153</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDMarathi {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDMarathi">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDMarathi</name>
			<value>1102</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDMexicanSpanish {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDMexicanSpanish">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDMexicanSpanish</name>
			<value>2058</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDMixed">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDMongolian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDMongolian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDMongolian</name>
			<value>1104</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDNepali {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDNepali">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDNepali</name>
			<value>1121</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDNone">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDNone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDNoProofing {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDNoProofing">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDNoProofing</name>
			<value>1024</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDNorwegianBokmol {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDNorwegianBokmol">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDNorwegianBokmol</name>
			<value>1044</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDNorwegianNynorsk {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDNorwegianNynorsk">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDNorwegianNynorsk</name>
			<value>2068</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDOriya {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDOriya">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDOriya</name>
			<value>1096</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDOromo {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDOromo">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDOromo</name>
			<value>1138</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDPashto {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDPashto">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDPashto</name>
			<value>1123</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDPolish {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDPolish">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDPolish</name>
			<value>1045</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDPortuguese {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDPortuguese">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDPortuguese</name>
			<value>2070</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDPunjabi {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDPunjabi">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDPunjabi</name>
			<value>1094</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDQuechuaBolivia {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDQuechuaBolivia">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDQuechuaBolivia</name>
			<value>1131</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDQuechuaEcuador {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDQuechuaEcuador">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDQuechuaEcuador</name>
			<value>2155</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDQuechuaPeru {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDQuechuaPeru">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDQuechuaPeru</name>
			<value>3179</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDRhaetoRomanic {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDRhaetoRomanic">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDRhaetoRomanic</name>
			<value>1047</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDRomanian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDRomanian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDRomanian</name>
			<value>1048</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDRomanianMoldova {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDRomanianMoldova">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDRomanianMoldova</name>
			<value>2072</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDRussian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDRussian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDRussian</name>
			<value>1049</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDRussianMoldova {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDRussianMoldova">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDRussianMoldova</name>
			<value>2073</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSamiLappish {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSamiLappish">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSamiLappish</name>
			<value>1083</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSanskrit {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSanskrit">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSanskrit</name>
			<value>1103</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSepedi {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSepedi">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSepedi</name>
			<value>1132</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSerbianBosniaHerzegovinaCyrillic {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSerbianBosniaHerzegovinaCyrillic">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSerbianBosniaHerzegovinaCyrillic</name>
			<value>7194</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSerbianBosniaHerzegovinaLatin {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSerbianBosniaHerzegovinaLatin">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSerbianBosniaHerzegovinaLatin</name>
			<value>6170</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSerbianCyrillic {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSerbianCyrillic">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSerbianCyrillic</name>
			<value>3098</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSerbianLatin {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSerbianLatin">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSerbianLatin</name>
			<value>2074</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSesotho {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSesotho">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSesotho</name>
			<value>1072</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSimplifiedChinese {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSimplifiedChinese">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSimplifiedChinese</name>
			<value>2052</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSindhi {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSindhi">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSindhi</name>
			<value>1113</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSindhiPakistan {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSindhiPakistan">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSindhiPakistan</name>
			<value>2137</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSinhalese {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSinhalese">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSinhalese</name>
			<value>1115</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSlovak {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSlovak">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSlovak</name>
			<value>1051</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSlovenian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSlovenian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSlovenian</name>
			<value>1060</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSomali {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSomali">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSomali</name>
			<value>1143</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSorbian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSorbian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSorbian</name>
			<value>1070</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanish {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanish">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanish</name>
			<value>1034</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishArgentina {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishArgentina">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishArgentina</name>
			<value>11274</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishBolivia {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishBolivia">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishBolivia</name>
			<value>16394</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishChile {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishChile">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishChile</name>
			<value>13322</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishColombia {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishColombia">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishColombia</name>
			<value>9226</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishCostaRica {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishCostaRica">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishCostaRica</name>
			<value>5130</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishDominicanRepublic {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishDominicanRepublic">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishDominicanRepublic</name>
			<value>7178</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishEcuador {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishEcuador">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishEcuador</name>
			<value>12298</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishElSalvador {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishElSalvador">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishElSalvador</name>
			<value>17418</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishGuatemala {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishGuatemala">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishGuatemala</name>
			<value>4106</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishHonduras {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishHonduras">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishHonduras</name>
			<value>18442</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishModernSort {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishModernSort">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishModernSort</name>
			<value>3082</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishNicaragua {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishNicaragua">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishNicaragua</name>
			<value>19466</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishPanama {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishPanama">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishPanama</name>
			<value>6154</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishParaguay {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishParaguay">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishParaguay</name>
			<value>15370</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishPeru {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishPeru">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishPeru</name>
			<value>10250</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishPuertoRico {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishPuertoRico">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishPuertoRico</name>
			<value>20490</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishUruguay {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishUruguay">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishUruguay</name>
			<value>14346</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSpanishVenezuela {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSpanishVenezuela">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSpanishVenezuela</name>
			<value>8202</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSutu {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSutu">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSutu</name>
			<value>1072</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSwahili {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSwahili">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSwahili</name>
			<value>1089</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSwedish {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSwedish">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSwedish</name>
			<value>1053</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSwedishFinland {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSwedishFinland">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSwedishFinland</name>
			<value>2077</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSwissFrench {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSwissFrench">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSwissFrench</name>
			<value>4108</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSwissGerman {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSwissGerman">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSwissGerman</name>
			<value>2055</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSwissItalian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSwissItalian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSwissItalian</name>
			<value>2064</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDSyriac {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDSyriac">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDSyriac</name>
			<value>1114</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTajik {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTajik">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTajik</name>
			<value>1064</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTamazight {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTamazight">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTamazight</name>
			<value>1119</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTamazightLatin {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTamazightLatin">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTamazightLatin</name>
			<value>2143</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTamil {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTamil">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTamil</name>
			<value>1097</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTatar {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTatar">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTatar</name>
			<value>1092</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTelugu {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTelugu">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTelugu</name>
			<value>1098</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDThai {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDThai">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDThai</name>
			<value>1054</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTibetan {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTibetan">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTibetan</name>
			<value>1105</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTigrignaEritrea {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTigrignaEritrea">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTigrignaEritrea</name>
			<value>2163</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTigrignaEthiopic {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTigrignaEthiopic">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTigrignaEthiopic</name>
			<value>1139</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTraditionalChinese {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTraditionalChinese">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTraditionalChinese</name>
			<value>1028</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTsonga {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTsonga">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTsonga</name>
			<value>1073</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTswana {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTswana">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTswana</name>
			<value>1074</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTurkish {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTurkish">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTurkish</name>
			<value>1055</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDTurkmen {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDTurkmen">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDTurkmen</name>
			<value>1090</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDUkrainian {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDUkrainian">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDUkrainian</name>
			<value>1058</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDUrdu {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDUrdu">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDUrdu</name>
			<value>1056</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDUzbekCyrillic {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDUzbekCyrillic">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDUzbekCyrillic</name>
			<value>2115</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDUzbekLatin {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDUzbekLatin">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDUzbekLatin</name>
			<value>1091</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDVenda {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDVenda">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDVenda</name>
			<value>1075</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDVietnamese {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDVietnamese">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDVietnamese</name>
			<value>1066</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDWelsh {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDWelsh">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDWelsh</name>
			<value>1106</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDXhosa {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDXhosa">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDXhosa</name>
			<value>1076</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDYi {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDYi">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDYi</name>
			<value>1144</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDYiddish {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDYiddish">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDYiddish</name>
			<value>1085</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDYoruba {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDYoruba">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDYoruba</name>
			<value>1130</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDZulu {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageID.msoLanguageIDZulu">
			<context kind="enumeration">MsoLanguageID</context>
			<name>msoLanguageIDZulu</name>
			<value>1077</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoLanguageIDHidden  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoLanguageIDHidden">
			<name>MsoLanguageIDHidden</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDChineseHongKong {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageIDHidden.msoLanguageIDChineseHongKong">
			<context kind="enumeration">MsoLanguageIDHidden</context>
			<name>msoLanguageIDChineseHongKong</name>
			<value>3076</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDChineseMacao {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageIDHidden.msoLanguageIDChineseMacao">
			<context kind="enumeration">MsoLanguageIDHidden</context>
			<name>msoLanguageIDChineseMacao</name>
			<value>5124</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLanguageIDEnglishTrinidad {Constant}-->
	<element type="constant">
		<source id="Office.MsoLanguageIDHidden.msoLanguageIDEnglishTrinidad">
			<context kind="enumeration">MsoLanguageIDHidden</context>
			<name>msoLanguageIDEnglishTrinidad</name>
			<value>11273</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoLastModified  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoLastModified">
			<name>MsoLastModified</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLastModifiedAnyTime {Constant}-->
	<element type="constant">
		<source id="Office.MsoLastModified.msoLastModifiedAnyTime">
			<context kind="enumeration">MsoLastModified</context>
			<name>msoLastModifiedAnyTime</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLastModifiedLastMonth {Constant}-->
	<element type="constant">
		<source id="Office.MsoLastModified.msoLastModifiedLastMonth">
			<context kind="enumeration">MsoLastModified</context>
			<name>msoLastModifiedLastMonth</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLastModifiedLastWeek {Constant}-->
	<element type="constant">
		<source id="Office.MsoLastModified.msoLastModifiedLastWeek">
			<context kind="enumeration">MsoLastModified</context>
			<name>msoLastModifiedLastWeek</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLastModifiedThisMonth {Constant}-->
	<element type="constant">
		<source id="Office.MsoLastModified.msoLastModifiedThisMonth">
			<context kind="enumeration">MsoLastModified</context>
			<name>msoLastModifiedThisMonth</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLastModifiedThisWeek {Constant}-->
	<element type="constant">
		<source id="Office.MsoLastModified.msoLastModifiedThisWeek">
			<context kind="enumeration">MsoLastModified</context>
			<name>msoLastModifiedThisWeek</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLastModifiedToday {Constant}-->
	<element type="constant">
		<source id="Office.MsoLastModified.msoLastModifiedToday">
			<context kind="enumeration">MsoLastModified</context>
			<name>msoLastModifiedToday</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLastModifiedYesterday {Constant}-->
	<element type="constant">
		<source id="Office.MsoLastModified.msoLastModifiedYesterday">
			<context kind="enumeration">MsoLastModified</context>
			<name>msoLastModifiedYesterday</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoLineDashStyle  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoLineDashStyle">
			<name>MsoLineDashStyle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineDash {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineDashStyle.msoLineDash">
			<context kind="enumeration">MsoLineDashStyle</context>
			<name>msoLineDash</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineDashDot {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineDashStyle.msoLineDashDot">
			<context kind="enumeration">MsoLineDashStyle</context>
			<name>msoLineDashDot</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineDashDotDot {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineDashStyle.msoLineDashDotDot">
			<context kind="enumeration">MsoLineDashStyle</context>
			<name>msoLineDashDotDot</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineDashStyleMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineDashStyle.msoLineDashStyleMixed">
			<context kind="enumeration">MsoLineDashStyle</context>
			<name>msoLineDashStyleMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineLongDash {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineDashStyle.msoLineLongDash">
			<context kind="enumeration">MsoLineDashStyle</context>
			<name>msoLineLongDash</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineLongDashDot {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineDashStyle.msoLineLongDashDot">
			<context kind="enumeration">MsoLineDashStyle</context>
			<name>msoLineLongDashDot</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineRoundDot {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineDashStyle.msoLineRoundDot">
			<context kind="enumeration">MsoLineDashStyle</context>
			<name>msoLineRoundDot</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineSolid {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineDashStyle.msoLineSolid">
			<context kind="enumeration">MsoLineDashStyle</context>
			<name>msoLineSolid</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineSquareDot {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineDashStyle.msoLineSquareDot">
			<context kind="enumeration">MsoLineDashStyle</context>
			<name>msoLineSquareDot</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoLineStyle  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoLineStyle">
			<name>MsoLineStyle</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineSingle {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineStyle.msoLineSingle">
			<context kind="enumeration">MsoLineStyle</context>
			<name>msoLineSingle</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineStyleMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineStyle.msoLineStyleMixed">
			<context kind="enumeration">MsoLineStyle</context>
			<name>msoLineStyleMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineThickBetweenThin {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineStyle.msoLineThickBetweenThin">
			<context kind="enumeration">MsoLineStyle</context>
			<name>msoLineThickBetweenThin</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineThickThin {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineStyle.msoLineThickThin">
			<context kind="enumeration">MsoLineStyle</context>
			<name>msoLineThickThin</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineThinThick {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineStyle.msoLineThinThick">
			<context kind="enumeration">MsoLineStyle</context>
			<name>msoLineThinThick</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLineThinThin {Constant}-->
	<element type="constant">
		<source id="Office.MsoLineStyle.msoLineThinThin">
			<context kind="enumeration">MsoLineStyle</context>
			<name>msoLineThinThin</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoMenuAnimation  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoMenuAnimation">
			<name>MsoMenuAnimation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMenuAnimationNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoMenuAnimation.msoMenuAnimationNone">
			<context kind="enumeration">MsoMenuAnimation</context>
			<name>msoMenuAnimationNone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMenuAnimationRandom {Constant}-->
	<element type="constant">
		<source id="Office.MsoMenuAnimation.msoMenuAnimationRandom">
			<context kind="enumeration">MsoMenuAnimation</context>
			<name>msoMenuAnimationRandom</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMenuAnimationSlide {Constant}-->
	<element type="constant">
		<source id="Office.MsoMenuAnimation.msoMenuAnimationSlide">
			<context kind="enumeration">MsoMenuAnimation</context>
			<name>msoMenuAnimationSlide</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMenuAnimationUnfold {Constant}-->
	<element type="constant">
		<source id="Office.MsoMenuAnimation.msoMenuAnimationUnfold">
			<context kind="enumeration">MsoMenuAnimation</context>
			<name>msoMenuAnimationUnfold</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoMixedType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoMixedType">
			<name>MsoMixedType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoIntegerMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoMixedType.msoIntegerMixed">
			<context kind="enumeration">MsoMixedType</context>
			<name>msoIntegerMixed</name>
			<value>32768</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSingleMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoMixedType.msoSingleMixed">
			<context kind="enumeration">MsoMixedType</context>
			<name>msoSingleMixed</name>
			<value>-2147483648</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoModeType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoModeType">
			<name>MsoModeType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoModeAutoDown {Constant}-->
	<element type="constant">
		<source id="Office.MsoModeType.msoModeAutoDown">
			<context kind="enumeration">MsoModeType</context>
			<name>msoModeAutoDown</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoModeModal {Constant}-->
	<element type="constant">
		<source id="Office.MsoModeType.msoModeModal">
			<context kind="enumeration">MsoModeType</context>
			<name>msoModeModal</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoModeModeless {Constant}-->
	<element type="constant">
		<source id="Office.MsoModeType.msoModeModeless">
			<context kind="enumeration">MsoModeType</context>
			<name>msoModeModeless</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoMoveRow  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoMoveRow">
			<name>MsoMoveRow</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMoveRowFirst {Constant}-->
	<element type="constant">
		<source id="Office.MsoMoveRow.msoMoveRowFirst">
			<context kind="enumeration">MsoMoveRow</context>
			<name>msoMoveRowFirst</name>
			<value>-4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMoveRowNbr {Constant}-->
	<element type="constant">
		<source id="Office.MsoMoveRow.msoMoveRowNbr">
			<context kind="enumeration">MsoMoveRow</context>
			<name>msoMoveRowNbr</name>
			<value>-1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMoveRowNext {Constant}-->
	<element type="constant">
		<source id="Office.MsoMoveRow.msoMoveRowNext">
			<context kind="enumeration">MsoMoveRow</context>
			<name>msoMoveRowNext</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMoveRowPrev {Constant}-->
	<element type="constant">
		<source id="Office.MsoMoveRow.msoMoveRowPrev">
			<context kind="enumeration">MsoMoveRow</context>
			<name>msoMoveRowPrev</name>
			<value>-3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoOLEMenuGroup  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoOLEMenuGroup">
			<name>MsoOLEMenuGroup</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOLEMenuGroupContainer {Constant}-->
	<element type="constant">
		<source id="Office.MsoOLEMenuGroup.msoOLEMenuGroupContainer">
			<context kind="enumeration">MsoOLEMenuGroup</context>
			<name>msoOLEMenuGroupContainer</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOLEMenuGroupEdit {Constant}-->
	<element type="constant">
		<source id="Office.MsoOLEMenuGroup.msoOLEMenuGroupEdit">
			<context kind="enumeration">MsoOLEMenuGroup</context>
			<name>msoOLEMenuGroupEdit</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOLEMenuGroupFile {Constant}-->
	<element type="constant">
		<source id="Office.MsoOLEMenuGroup.msoOLEMenuGroupFile">
			<context kind="enumeration">MsoOLEMenuGroup</context>
			<name>msoOLEMenuGroupFile</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOLEMenuGroupHelp {Constant}-->
	<element type="constant">
		<source id="Office.MsoOLEMenuGroup.msoOLEMenuGroupHelp">
			<context kind="enumeration">MsoOLEMenuGroup</context>
			<name>msoOLEMenuGroupHelp</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOLEMenuGroupNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoOLEMenuGroup.msoOLEMenuGroupNone">
			<context kind="enumeration">MsoOLEMenuGroup</context>
			<name>msoOLEMenuGroupNone</name>
			<value>-1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOLEMenuGroupObject {Constant}-->
	<element type="constant">
		<source id="Office.MsoOLEMenuGroup.msoOLEMenuGroupObject">
			<context kind="enumeration">MsoOLEMenuGroup</context>
			<name>msoOLEMenuGroupObject</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOLEMenuGroupWindow {Constant}-->
	<element type="constant">
		<source id="Office.MsoOLEMenuGroup.msoOLEMenuGroupWindow">
			<context kind="enumeration">MsoOLEMenuGroup</context>
			<name>msoOLEMenuGroupWindow</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoOrgChartLayoutType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoOrgChartLayoutType">
			<name>MsoOrgChartLayoutType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOrgChartLayoutBothHanging {Constant}-->
	<element type="constant">
		<source id="Office.MsoOrgChartLayoutType.msoOrgChartLayoutBothHanging">
			<context kind="enumeration">MsoOrgChartLayoutType</context>
			<name>msoOrgChartLayoutBothHanging</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOrgChartLayoutLeftHanging {Constant}-->
	<element type="constant">
		<source id="Office.MsoOrgChartLayoutType.msoOrgChartLayoutLeftHanging">
			<context kind="enumeration">MsoOrgChartLayoutType</context>
			<name>msoOrgChartLayoutLeftHanging</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOrgChartLayoutMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoOrgChartLayoutType.msoOrgChartLayoutMixed">
			<context kind="enumeration">MsoOrgChartLayoutType</context>
			<name>msoOrgChartLayoutMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOrgChartLayoutRightHanging {Constant}-->
	<element type="constant">
		<source id="Office.MsoOrgChartLayoutType.msoOrgChartLayoutRightHanging">
			<context kind="enumeration">MsoOrgChartLayoutType</context>
			<name>msoOrgChartLayoutRightHanging</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOrgChartLayoutStandard {Constant}-->
	<element type="constant">
		<source id="Office.MsoOrgChartLayoutType.msoOrgChartLayoutStandard">
			<context kind="enumeration">MsoOrgChartLayoutType</context>
			<name>msoOrgChartLayoutStandard</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoOrgChartOrientation  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoOrgChartOrientation">
			<name>MsoOrgChartOrientation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOrgChartOrientationMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoOrgChartOrientation.msoOrgChartOrientationMixed">
			<context kind="enumeration">MsoOrgChartOrientation</context>
			<name>msoOrgChartOrientationMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOrgChartOrientationVertical {Constant}-->
	<element type="constant">
		<source id="Office.MsoOrgChartOrientation.msoOrgChartOrientationVertical">
			<context kind="enumeration">MsoOrgChartOrientation</context>
			<name>msoOrgChartOrientationVertical</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoOrientation  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoOrientation">
			<name>MsoOrientation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOrientationHorizontal {Constant}-->
	<element type="constant">
		<source id="Office.MsoOrientation.msoOrientationHorizontal">
			<context kind="enumeration">MsoOrientation</context>
			<name>msoOrientationHorizontal</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOrientationMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoOrientation.msoOrientationMixed">
			<context kind="enumeration">MsoOrientation</context>
			<name>msoOrientationMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOrientationVertical {Constant}-->
	<element type="constant">
		<source id="Office.MsoOrientation.msoOrientationVertical">
			<context kind="enumeration">MsoOrientation</context>
			<name>msoOrientationVertical</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoPatternType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoPatternType">
			<name>MsoPatternType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPattern10Percent {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPattern10Percent">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPattern10Percent</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPattern20Percent {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPattern20Percent">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPattern20Percent</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPattern25Percent {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPattern25Percent">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPattern25Percent</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPattern30Percent {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPattern30Percent">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPattern30Percent</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPattern40Percent {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPattern40Percent">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPattern40Percent</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPattern50Percent {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPattern50Percent">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPattern50Percent</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPattern5Percent {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPattern5Percent">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPattern5Percent</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPattern60Percent {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPattern60Percent">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPattern60Percent</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPattern70Percent {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPattern70Percent">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPattern70Percent</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPattern75Percent {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPattern75Percent">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPattern75Percent</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPattern80Percent {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPattern80Percent">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPattern80Percent</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPattern90Percent {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPattern90Percent">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPattern90Percent</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternDarkDownwardDiagonal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternDarkDownwardDiagonal">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternDarkDownwardDiagonal</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternDarkHorizontal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternDarkHorizontal">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternDarkHorizontal</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternDarkUpwardDiagonal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternDarkUpwardDiagonal">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternDarkUpwardDiagonal</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternDarkVertical {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternDarkVertical">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternDarkVertical</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternDashedDownwardDiagonal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternDashedDownwardDiagonal">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternDashedDownwardDiagonal</name>
			<value>28</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternDashedHorizontal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternDashedHorizontal">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternDashedHorizontal</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternDashedUpwardDiagonal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternDashedUpwardDiagonal">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternDashedUpwardDiagonal</name>
			<value>27</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternDashedVertical {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternDashedVertical">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternDashedVertical</name>
			<value>31</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternDiagonalBrick {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternDiagonalBrick">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternDiagonalBrick</name>
			<value>40</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternDivot {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternDivot">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternDivot</name>
			<value>46</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternDottedDiamond {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternDottedDiamond">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternDottedDiamond</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternDottedGrid {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternDottedGrid">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternDottedGrid</name>
			<value>45</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternHorizontalBrick {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternHorizontalBrick">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternHorizontalBrick</name>
			<value>35</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternLargeCheckerBoard {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternLargeCheckerBoard">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternLargeCheckerBoard</name>
			<value>36</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternLargeConfetti {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternLargeConfetti">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternLargeConfetti</name>
			<value>33</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternLargeGrid {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternLargeGrid">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternLargeGrid</name>
			<value>34</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternLightDownwardDiagonal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternLightDownwardDiagonal">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternLightDownwardDiagonal</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternLightHorizontal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternLightHorizontal">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternLightHorizontal</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternLightUpwardDiagonal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternLightUpwardDiagonal">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternLightUpwardDiagonal</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternLightVertical {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternLightVertical">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternLightVertical</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternMixed">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternNarrowHorizontal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternNarrowHorizontal">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternNarrowHorizontal</name>
			<value>30</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternNarrowVertical {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternNarrowVertical">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternNarrowVertical</name>
			<value>29</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternOutlinedDiamond {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternOutlinedDiamond">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternOutlinedDiamond</name>
			<value>41</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternPlaid {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternPlaid">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternPlaid</name>
			<value>42</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternShingle {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternShingle">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternShingle</name>
			<value>47</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternSmallCheckerBoard {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternSmallCheckerBoard">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternSmallCheckerBoard</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternSmallConfetti {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternSmallConfetti">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternSmallConfetti</name>
			<value>37</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternSmallGrid {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternSmallGrid">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternSmallGrid</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternSolidDiamond {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternSolidDiamond">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternSolidDiamond</name>
			<value>39</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternSphere {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternSphere">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternSphere</name>
			<value>43</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternTrellis {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternTrellis">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternTrellis</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternWave {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternWave">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternWave</name>
			<value>48</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternWeave {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternWeave">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternWeave</name>
			<value>44</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternWideDownwardDiagonal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternWideDownwardDiagonal">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternWideDownwardDiagonal</name>
			<value>25</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternWideUpwardDiagonal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternWideUpwardDiagonal">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternWideUpwardDiagonal</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPatternZigZag {Constant}-->
	<element type="constant">
		<source id="Office.MsoPatternType.msoPatternZigZag">
			<context kind="enumeration">MsoPatternType</context>
			<name>msoPatternZigZag</name>
			<value>38</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoPermission  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoPermission">
			<name>MsoPermission</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPermissionChange {Constant}-->
	<element type="constant">
		<source id="Office.MsoPermission.msoPermissionChange">
			<context kind="enumeration">MsoPermission</context>
			<name>msoPermissionChange</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPermissionEdit {Constant}-->
	<element type="constant">
		<source id="Office.MsoPermission.msoPermissionEdit">
			<context kind="enumeration">MsoPermission</context>
			<name>msoPermissionEdit</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPermissionExtract {Constant}-->
	<element type="constant">
		<source id="Office.MsoPermission.msoPermissionExtract">
			<context kind="enumeration">MsoPermission</context>
			<name>msoPermissionExtract</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPermissionFullControl {Constant}-->
	<element type="constant">
		<source id="Office.MsoPermission.msoPermissionFullControl">
			<context kind="enumeration">MsoPermission</context>
			<name>msoPermissionFullControl</name>
			<value>64</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPermissionObjModel {Constant}-->
	<element type="constant">
		<source id="Office.MsoPermission.msoPermissionObjModel">
			<context kind="enumeration">MsoPermission</context>
			<name>msoPermissionObjModel</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPermissionPrint {Constant}-->
	<element type="constant">
		<source id="Office.MsoPermission.msoPermissionPrint">
			<context kind="enumeration">MsoPermission</context>
			<name>msoPermissionPrint</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPermissionRead {Constant}-->
	<element type="constant">
		<source id="Office.MsoPermission.msoPermissionRead">
			<context kind="enumeration">MsoPermission</context>
			<name>msoPermissionRead</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPermissionSave {Constant}-->
	<element type="constant">
		<source id="Office.MsoPermission.msoPermissionSave">
			<context kind="enumeration">MsoPermission</context>
			<name>msoPermissionSave</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPermissionView {Constant}-->
	<element type="constant">
		<source id="Office.MsoPermission.msoPermissionView">
			<context kind="enumeration">MsoPermission</context>
			<name>msoPermissionView</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoPictureColorType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoPictureColorType">
			<name>MsoPictureColorType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPictureAutomatic {Constant}-->
	<element type="constant">
		<source id="Office.MsoPictureColorType.msoPictureAutomatic">
			<context kind="enumeration">MsoPictureColorType</context>
			<name>msoPictureAutomatic</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPictureBlackAndWhite {Constant}-->
	<element type="constant">
		<source id="Office.MsoPictureColorType.msoPictureBlackAndWhite">
			<context kind="enumeration">MsoPictureColorType</context>
			<name>msoPictureBlackAndWhite</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPictureGrayscale {Constant}-->
	<element type="constant">
		<source id="Office.MsoPictureColorType.msoPictureGrayscale">
			<context kind="enumeration">MsoPictureColorType</context>
			<name>msoPictureGrayscale</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPictureMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoPictureColorType.msoPictureMixed">
			<context kind="enumeration">MsoPictureColorType</context>
			<name>msoPictureMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPictureWatermark {Constant}-->
	<element type="constant">
		<source id="Office.MsoPictureColorType.msoPictureWatermark">
			<context kind="enumeration">MsoPictureColorType</context>
			<name>msoPictureWatermark</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoPresetExtrusionDirection  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoPresetExtrusionDirection">
			<name>MsoPresetExtrusionDirection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoExtrusionBottom {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetExtrusionDirection.msoExtrusionBottom">
			<context kind="enumeration">MsoPresetExtrusionDirection</context>
			<name>msoExtrusionBottom</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoExtrusionBottomLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetExtrusionDirection.msoExtrusionBottomLeft">
			<context kind="enumeration">MsoPresetExtrusionDirection</context>
			<name>msoExtrusionBottomLeft</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoExtrusionBottomRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetExtrusionDirection.msoExtrusionBottomRight">
			<context kind="enumeration">MsoPresetExtrusionDirection</context>
			<name>msoExtrusionBottomRight</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoExtrusionLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetExtrusionDirection.msoExtrusionLeft">
			<context kind="enumeration">MsoPresetExtrusionDirection</context>
			<name>msoExtrusionLeft</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoExtrusionNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetExtrusionDirection.msoExtrusionNone">
			<context kind="enumeration">MsoPresetExtrusionDirection</context>
			<name>msoExtrusionNone</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoExtrusionRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetExtrusionDirection.msoExtrusionRight">
			<context kind="enumeration">MsoPresetExtrusionDirection</context>
			<name>msoExtrusionRight</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoExtrusionTop {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetExtrusionDirection.msoExtrusionTop">
			<context kind="enumeration">MsoPresetExtrusionDirection</context>
			<name>msoExtrusionTop</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoExtrusionTopLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetExtrusionDirection.msoExtrusionTopLeft">
			<context kind="enumeration">MsoPresetExtrusionDirection</context>
			<name>msoExtrusionTopLeft</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoExtrusionTopRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetExtrusionDirection.msoExtrusionTopRight">
			<context kind="enumeration">MsoPresetExtrusionDirection</context>
			<name>msoExtrusionTopRight</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPresetExtrusionDirectionMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetExtrusionDirection.msoPresetExtrusionDirectionMixed">
			<context kind="enumeration">MsoPresetExtrusionDirection</context>
			<name>msoPresetExtrusionDirectionMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoPresetGradientType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoPresetGradientType">
			<name>MsoPresetGradientType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientBrass {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientBrass">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientBrass</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientCalmWater {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientCalmWater">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientCalmWater</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientChrome {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientChrome">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientChrome</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientChromeII {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientChromeII">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientChromeII</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientDaybreak {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientDaybreak">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientDaybreak</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientDesert {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientDesert">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientDesert</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientEarlySunset {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientEarlySunset">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientEarlySunset</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientFire {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientFire">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientFire</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientFog {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientFog">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientFog</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientGold {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientGold">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientGold</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientGoldII {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientGoldII">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientGoldII</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientHorizon {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientHorizon">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientHorizon</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientLateSunset {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientLateSunset">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientLateSunset</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientMahogany {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientMahogany">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientMahogany</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientMoss {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientMoss">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientMoss</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientNightfall {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientNightfall">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientNightfall</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientOcean {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientOcean">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientOcean</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientParchment {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientParchment">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientParchment</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientPeacock {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientPeacock">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientPeacock</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientRainbow {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientRainbow">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientRainbow</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientRainbowII {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientRainbowII">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientRainbowII</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientSapphire {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientSapphire">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientSapphire</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientSilver {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientSilver">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientSilver</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGradientWheat {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoGradientWheat">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoGradientWheat</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPresetGradientMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetGradientType.msoPresetGradientMixed">
			<context kind="enumeration">MsoPresetGradientType</context>
			<name>msoPresetGradientMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoPresetLightingDirection  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoPresetLightingDirection">
			<name>MsoPresetLightingDirection</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLightingBottom {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingDirection.msoLightingBottom">
			<context kind="enumeration">MsoPresetLightingDirection</context>
			<name>msoLightingBottom</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLightingBottomLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingDirection.msoLightingBottomLeft">
			<context kind="enumeration">MsoPresetLightingDirection</context>
			<name>msoLightingBottomLeft</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLightingBottomRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingDirection.msoLightingBottomRight">
			<context kind="enumeration">MsoPresetLightingDirection</context>
			<name>msoLightingBottomRight</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLightingLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingDirection.msoLightingLeft">
			<context kind="enumeration">MsoPresetLightingDirection</context>
			<name>msoLightingLeft</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLightingNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingDirection.msoLightingNone">
			<context kind="enumeration">MsoPresetLightingDirection</context>
			<name>msoLightingNone</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLightingRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingDirection.msoLightingRight">
			<context kind="enumeration">MsoPresetLightingDirection</context>
			<name>msoLightingRight</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLightingTop {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingDirection.msoLightingTop">
			<context kind="enumeration">MsoPresetLightingDirection</context>
			<name>msoLightingTop</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLightingTopLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingDirection.msoLightingTopLeft">
			<context kind="enumeration">MsoPresetLightingDirection</context>
			<name>msoLightingTopLeft</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLightingTopRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingDirection.msoLightingTopRight">
			<context kind="enumeration">MsoPresetLightingDirection</context>
			<name>msoLightingTopRight</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPresetLightingDirectionMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingDirection.msoPresetLightingDirectionMixed">
			<context kind="enumeration">MsoPresetLightingDirection</context>
			<name>msoPresetLightingDirectionMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoPresetLightingSoftness  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoPresetLightingSoftness">
			<name>MsoPresetLightingSoftness</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLightingBright {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingSoftness.msoLightingBright">
			<context kind="enumeration">MsoPresetLightingSoftness</context>
			<name>msoLightingBright</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLightingDim {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingSoftness.msoLightingDim">
			<context kind="enumeration">MsoPresetLightingSoftness</context>
			<name>msoLightingDim</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLightingNormal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingSoftness.msoLightingNormal">
			<context kind="enumeration">MsoPresetLightingSoftness</context>
			<name>msoLightingNormal</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPresetLightingSoftnessMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetLightingSoftness.msoPresetLightingSoftnessMixed">
			<context kind="enumeration">MsoPresetLightingSoftness</context>
			<name>msoPresetLightingSoftnessMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoPresetMaterial  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoPresetMaterial">
			<name>MsoPresetMaterial</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMaterialMatte {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetMaterial.msoMaterialMatte">
			<context kind="enumeration">MsoPresetMaterial</context>
			<name>msoMaterialMatte</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMaterialMetal {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetMaterial.msoMaterialMetal">
			<context kind="enumeration">MsoPresetMaterial</context>
			<name>msoMaterialMetal</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMaterialPlastic {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetMaterial.msoMaterialPlastic">
			<context kind="enumeration">MsoPresetMaterial</context>
			<name>msoMaterialPlastic</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMaterialWireFrame {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetMaterial.msoMaterialWireFrame">
			<context kind="enumeration">MsoPresetMaterial</context>
			<name>msoMaterialWireFrame</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPresetMaterialMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetMaterial.msoPresetMaterialMixed">
			<context kind="enumeration">MsoPresetMaterial</context>
			<name>msoPresetMaterialMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoPresetTextEffect  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoPresetTextEffect">
			<name>MsoPresetTextEffect</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect1 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect1">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect1</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect10 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect10">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect10</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect11 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect11">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect11</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect12 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect12">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect12</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect13 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect13">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect13</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect14 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect14">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect14</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect15 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect15">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect15</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect16 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect16">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect16</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect17 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect17">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect17</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect18 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect18">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect18</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect19 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect19">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect19</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect2 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect2">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect2</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect20 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect20">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect20</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect21 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect21">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect21</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect22 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect22">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect22</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect23 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect23">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect23</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect24 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect24">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect24</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect25 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect25">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect25</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect26 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect26">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect26</name>
			<value>25</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect27 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect27">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect27</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect28 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect28">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect28</name>
			<value>27</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect29 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect29">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect29</name>
			<value>28</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect3 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect3">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect3</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect30 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect30">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect30</name>
			<value>29</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect4 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect4">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect4</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect5 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect5">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect5</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect6 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect6">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect6</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect7 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect7">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect7</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect8 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect8">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect8</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect9 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffect9">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffect9</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffect.msoTextEffectMixed">
			<context kind="enumeration">MsoPresetTextEffect</context>
			<name>msoTextEffectMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoPresetTextEffectShape  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoPresetTextEffectShape">
			<name>MsoPresetTextEffectShape</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeArchDownCurve {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeArchDownCurve">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeArchDownCurve</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeArchDownPour {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeArchDownPour">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeArchDownPour</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeArchUpCurve {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeArchUpCurve">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeArchUpCurve</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeArchUpPour {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeArchUpPour">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeArchUpPour</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeButtonCurve {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeButtonCurve">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeButtonCurve</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeButtonPour {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeButtonPour">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeButtonPour</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeCanDown {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeCanDown">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeCanDown</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeCanUp {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeCanUp">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeCanUp</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeCascadeDown {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeCascadeDown">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeCascadeDown</name>
			<value>40</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeCascadeUp {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeCascadeUp">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeCascadeUp</name>
			<value>39</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeChevronDown {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeChevronDown">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeChevronDown</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeChevronUp {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeChevronUp">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeChevronUp</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeCircleCurve {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeCircleCurve">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeCircleCurve</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeCirclePour {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeCirclePour">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeCirclePour</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeCurveDown {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeCurveDown">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeCurveDown</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeCurveUp {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeCurveUp">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeCurveUp</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeDeflate {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeDeflate">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeDeflate</name>
			<value>26</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeDeflateBottom {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeDeflateBottom">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeDeflateBottom</name>
			<value>28</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeDeflateInflate {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeDeflateInflate">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeDeflateInflate</name>
			<value>31</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeDeflateInflateDeflate {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeDeflateInflateDeflate">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeDeflateInflateDeflate</name>
			<value>32</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeDeflateTop {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeDeflateTop">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeDeflateTop</name>
			<value>30</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeDoubleWave1 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeDoubleWave1">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeDoubleWave1</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeDoubleWave2 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeDoubleWave2">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeDoubleWave2</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeFadeDown {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeFadeDown">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeFadeDown</name>
			<value>36</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeFadeLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeFadeLeft">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeFadeLeft</name>
			<value>34</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeFadeRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeFadeRight">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeFadeRight</name>
			<value>33</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeFadeUp {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeFadeUp">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeFadeUp</name>
			<value>35</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeInflate {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeInflate">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeInflate</name>
			<value>25</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeInflateBottom {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeInflateBottom">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeInflateBottom</name>
			<value>27</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeInflateTop {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeInflateTop">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeInflateTop</name>
			<value>29</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeMixed">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapePlainText {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapePlainText">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapePlainText</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeRingInside {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeRingInside">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeRingInside</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeRingOutside {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeRingOutside">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeRingOutside</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeSlantDown {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeSlantDown">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeSlantDown</name>
			<value>38</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeSlantUp {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeSlantUp">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeSlantUp</name>
			<value>37</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeStop {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeStop">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeStop</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeTriangleDown {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeTriangleDown">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeTriangleDown</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeTriangleUp {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeTriangleUp">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeTriangleUp</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeWave1 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeWave1">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeWave1</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectShapeWave2 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTextEffectShape.msoTextEffectShapeWave2">
			<context kind="enumeration">MsoPresetTextEffectShape</context>
			<name>msoTextEffectShapeWave2</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoPresetTexture  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoPresetTexture">
			<name>MsoPresetTexture</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPresetTextureMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoPresetTextureMixed">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoPresetTextureMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureBlueTissuePaper {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureBlueTissuePaper">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureBlueTissuePaper</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureBouquet {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureBouquet">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureBouquet</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureBrownMarble {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureBrownMarble">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureBrownMarble</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureCanvas {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureCanvas">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureCanvas</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureCork {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureCork">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureCork</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureDenim {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureDenim">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureDenim</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureFishFossil {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureFishFossil">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureFishFossil</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureGranite {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureGranite">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureGranite</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureGreenMarble {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureGreenMarble">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureGreenMarble</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureMediumWood {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureMediumWood">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureMediumWood</name>
			<value>24</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureNewsprint {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureNewsprint">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureNewsprint</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureOak {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureOak">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureOak</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTexturePaperBag {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTexturePaperBag">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTexturePaperBag</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTexturePapyrus {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTexturePapyrus">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTexturePapyrus</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureParchment {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureParchment">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureParchment</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTexturePinkTissuePaper {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTexturePinkTissuePaper">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTexturePinkTissuePaper</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTexturePurpleMesh {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTexturePurpleMesh">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTexturePurpleMesh</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureRecycledPaper {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureRecycledPaper">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureRecycledPaper</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureSand {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureSand">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureSand</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureStationery {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureStationery">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureStationery</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureWalnut {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureWalnut">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureWalnut</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureWaterDroplets {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureWaterDroplets">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureWaterDroplets</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureWhiteMarble {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureWhiteMarble">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureWhiteMarble</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureWovenMat {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetTexture.msoTextureWovenMat">
			<context kind="enumeration">MsoPresetTexture</context>
			<name>msoTextureWovenMat</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoPresetThreeDFormat  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoPresetThreeDFormat">
			<name>MsoPresetThreeDFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPresetThreeDFormatMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoPresetThreeDFormatMixed">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoPresetThreeDFormatMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD1 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD1">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD1</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD10 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD10">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD10</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD11 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD11">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD11</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD12 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD12">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD12</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD13 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD13">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD13</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD14 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD14">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD14</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD15 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD15">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD15</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD16 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD16">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD16</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD17 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD17">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD17</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD18 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD18">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD18</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD19 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD19">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD19</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD2 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD2">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD2</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD20 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD20">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD20</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD3 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD3">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD3</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD4 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD4">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD4</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD5 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD5">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD5</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD6 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD6">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD6</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD7 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD7">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD7</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD8 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD8">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD8</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoThreeD9 {Constant}-->
	<element type="constant">
		<source id="Office.MsoPresetThreeDFormat.msoThreeD9">
			<context kind="enumeration">MsoPresetThreeDFormat</context>
			<name>msoThreeD9</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoRelativeNodePosition  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoRelativeNodePosition">
			<name>MsoRelativeNodePosition</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAfterLastSibling {Constant}-->
	<element type="constant">
		<source id="Office.MsoRelativeNodePosition.msoAfterLastSibling">
			<context kind="enumeration">MsoRelativeNodePosition</context>
			<name>msoAfterLastSibling</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAfterNode {Constant}-->
	<element type="constant">
		<source id="Office.MsoRelativeNodePosition.msoAfterNode">
			<context kind="enumeration">MsoRelativeNodePosition</context>
			<name>msoAfterNode</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBeforeFirstSibling {Constant}-->
	<element type="constant">
		<source id="Office.MsoRelativeNodePosition.msoBeforeFirstSibling">
			<context kind="enumeration">MsoRelativeNodePosition</context>
			<name>msoBeforeFirstSibling</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBeforeNode {Constant}-->
	<element type="constant">
		<source id="Office.MsoRelativeNodePosition.msoBeforeNode">
			<context kind="enumeration">MsoRelativeNodePosition</context>
			<name>msoBeforeNode</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoScaleFrom  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoScaleFrom">
			<name>MsoScaleFrom</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScaleFromBottomRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoScaleFrom.msoScaleFromBottomRight">
			<context kind="enumeration">MsoScaleFrom</context>
			<name>msoScaleFromBottomRight</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScaleFromMiddle {Constant}-->
	<element type="constant">
		<source id="Office.MsoScaleFrom.msoScaleFromMiddle">
			<context kind="enumeration">MsoScaleFrom</context>
			<name>msoScaleFromMiddle</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScaleFromTopLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoScaleFrom.msoScaleFromTopLeft">
			<context kind="enumeration">MsoScaleFrom</context>
			<name>msoScaleFromTopLeft</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoScreenSize  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoScreenSize">
			<name>MsoScreenSize</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScreenSize1024x768 {Constant}-->
	<element type="constant">
		<source id="Office.MsoScreenSize.msoScreenSize1024x768">
			<context kind="enumeration">MsoScreenSize</context>
			<name>msoScreenSize1024x768</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScreenSize1152x882 {Constant}-->
	<element type="constant">
		<source id="Office.MsoScreenSize.msoScreenSize1152x882">
			<context kind="enumeration">MsoScreenSize</context>
			<name>msoScreenSize1152x882</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScreenSize1152x900 {Constant}-->
	<element type="constant">
		<source id="Office.MsoScreenSize.msoScreenSize1152x900">
			<context kind="enumeration">MsoScreenSize</context>
			<name>msoScreenSize1152x900</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScreenSize1280x1024 {Constant}-->
	<element type="constant">
		<source id="Office.MsoScreenSize.msoScreenSize1280x1024">
			<context kind="enumeration">MsoScreenSize</context>
			<name>msoScreenSize1280x1024</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScreenSize1600x1200 {Constant}-->
	<element type="constant">
		<source id="Office.MsoScreenSize.msoScreenSize1600x1200">
			<context kind="enumeration">MsoScreenSize</context>
			<name>msoScreenSize1600x1200</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScreenSize1800x1440 {Constant}-->
	<element type="constant">
		<source id="Office.MsoScreenSize.msoScreenSize1800x1440">
			<context kind="enumeration">MsoScreenSize</context>
			<name>msoScreenSize1800x1440</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScreenSize1920x1200 {Constant}-->
	<element type="constant">
		<source id="Office.MsoScreenSize.msoScreenSize1920x1200">
			<context kind="enumeration">MsoScreenSize</context>
			<name>msoScreenSize1920x1200</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScreenSize544x376 {Constant}-->
	<element type="constant">
		<source id="Office.MsoScreenSize.msoScreenSize544x376">
			<context kind="enumeration">MsoScreenSize</context>
			<name>msoScreenSize544x376</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScreenSize640x480 {Constant}-->
	<element type="constant">
		<source id="Office.MsoScreenSize.msoScreenSize640x480">
			<context kind="enumeration">MsoScreenSize</context>
			<name>msoScreenSize640x480</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScreenSize720x512 {Constant}-->
	<element type="constant">
		<source id="Office.MsoScreenSize.msoScreenSize720x512">
			<context kind="enumeration">MsoScreenSize</context>
			<name>msoScreenSize720x512</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScreenSize800x600 {Constant}-->
	<element type="constant">
		<source id="Office.MsoScreenSize.msoScreenSize800x600">
			<context kind="enumeration">MsoScreenSize</context>
			<name>msoScreenSize800x600</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoScriptLanguage  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoScriptLanguage">
			<name>MsoScriptLanguage</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScriptLanguageASP {Constant}-->
	<element type="constant">
		<source id="Office.MsoScriptLanguage.msoScriptLanguageASP">
			<context kind="enumeration">MsoScriptLanguage</context>
			<name>msoScriptLanguageASP</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScriptLanguageJava {Constant}-->
	<element type="constant">
		<source id="Office.MsoScriptLanguage.msoScriptLanguageJava">
			<context kind="enumeration">MsoScriptLanguage</context>
			<name>msoScriptLanguageJava</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScriptLanguageOther {Constant}-->
	<element type="constant">
		<source id="Office.MsoScriptLanguage.msoScriptLanguageOther">
			<context kind="enumeration">MsoScriptLanguage</context>
			<name>msoScriptLanguageOther</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScriptLanguageVisualBasic {Constant}-->
	<element type="constant">
		<source id="Office.MsoScriptLanguage.msoScriptLanguageVisualBasic">
			<context kind="enumeration">MsoScriptLanguage</context>
			<name>msoScriptLanguageVisualBasic</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoScriptLocation  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoScriptLocation">
			<name>MsoScriptLocation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScriptLocationInBody {Constant}-->
	<element type="constant">
		<source id="Office.MsoScriptLocation.msoScriptLocationInBody">
			<context kind="enumeration">MsoScriptLocation</context>
			<name>msoScriptLocationInBody</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScriptLocationInHead {Constant}-->
	<element type="constant">
		<source id="Office.MsoScriptLocation.msoScriptLocationInHead">
			<context kind="enumeration">MsoScriptLocation</context>
			<name>msoScriptLocationInHead</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoSearchIn  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoSearchIn">
			<name>MsoSearchIn</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSearchInCustom {Constant}-->
	<element type="constant">
		<source id="Office.MsoSearchIn.msoSearchInCustom">
			<context kind="enumeration">MsoSearchIn</context>
			<name>msoSearchInCustom</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSearchInMyComputer {Constant}-->
	<element type="constant">
		<source id="Office.MsoSearchIn.msoSearchInMyComputer">
			<context kind="enumeration">MsoSearchIn</context>
			<name>msoSearchInMyComputer</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSearchInMyNetworkPlaces {Constant}-->
	<element type="constant">
		<source id="Office.MsoSearchIn.msoSearchInMyNetworkPlaces">
			<context kind="enumeration">MsoSearchIn</context>
			<name>msoSearchInMyNetworkPlaces</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSearchInOutlook {Constant}-->
	<element type="constant">
		<source id="Office.MsoSearchIn.msoSearchInOutlook">
			<context kind="enumeration">MsoSearchIn</context>
			<name>msoSearchInOutlook</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoSegmentType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoSegmentType">
			<name>MsoSegmentType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSegmentCurve {Constant}-->
	<element type="constant">
		<source id="Office.MsoSegmentType.msoSegmentCurve">
			<context kind="enumeration">MsoSegmentType</context>
			<name>msoSegmentCurve</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSegmentLine {Constant}-->
	<element type="constant">
		<source id="Office.MsoSegmentType.msoSegmentLine">
			<context kind="enumeration">MsoSegmentType</context>
			<name>msoSegmentLine</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoShadowType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoShadowType">
			<name>MsoShadowType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow1 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow1">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow1</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow10 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow10">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow10</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow11 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow11">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow11</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow12 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow12">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow12</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow13 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow13">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow13</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow14 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow14">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow14</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow15 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow15">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow15</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow16 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow16">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow16</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow17 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow17">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow17</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow18 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow18">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow18</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow19 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow19">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow19</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow2 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow2">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow2</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow20 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow20">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow20</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow3 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow3">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow3</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow4 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow4">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow4</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow5 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow5">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow5</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow6 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow6">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow6</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow7 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow7">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow7</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow8 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow8">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow8</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadow9 {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadow9">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadow9</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShadowMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoShadowType.msoShadowMixed">
			<context kind="enumeration">MsoShadowType</context>
			<name>msoShadowMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoShapeType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoShapeType">
			<name>MsoShapeType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAutoShape {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoAutoShape">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoAutoShape</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCallout {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoCallout">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoCallout</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCanvas {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoCanvas">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoCanvas</name>
			<value>20</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoChart {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoChart">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoChart</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoComment {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoComment">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoComment</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoDiagram {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoDiagram">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoDiagram</name>
			<value>21</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoEmbeddedOLEObject {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoEmbeddedOLEObject">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoEmbeddedOLEObject</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFormControl {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoFormControl">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoFormControl</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFreeform {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoFreeform">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoFreeform</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoGroup {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoGroup">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoGroup</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoInk {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoInk">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoInk</name>
			<value>22</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoInkComment {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoInkComment">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoInkComment</name>
			<value>23</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLine {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoLine">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoLine</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLinkedOLEObject {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoLinkedOLEObject">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoLinkedOLEObject</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoLinkedPicture {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoLinkedPicture">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoLinkedPicture</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoMedia {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoMedia">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoMedia</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoOLEControlObject {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoOLEControlObject">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoOLEControlObject</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPicture {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoPicture">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoPicture</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoPlaceholder {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoPlaceholder">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoPlaceholder</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoScriptAnchor {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoScriptAnchor">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoScriptAnchor</name>
			<value>18</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoShapeTypeMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoShapeTypeMixed">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoShapeTypeMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTable {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoTable">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoTable</name>
			<value>19</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextBox {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoTextBox">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoTextBox</name>
			<value>17</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffect {Constant}-->
	<element type="constant">
		<source id="Office.MsoShapeType.msoTextEffect">
			<context kind="enumeration">MsoShapeType</context>
			<name>msoTextEffect</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoSharedWorkspaceTaskPriority  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoSharedWorkspaceTaskPriority">
			<name>MsoSharedWorkspaceTaskPriority</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSharedWorkspaceTaskPriorityHigh {Constant}-->
	<element type="constant">
		<source id="Office.MsoSharedWorkspaceTaskPriority.msoSharedWorkspaceTaskPriorityHigh">
			<context kind="enumeration">MsoSharedWorkspaceTaskPriority</context>
			<name>msoSharedWorkspaceTaskPriorityHigh</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSharedWorkspaceTaskPriorityLow {Constant}-->
	<element type="constant">
		<source id="Office.MsoSharedWorkspaceTaskPriority.msoSharedWorkspaceTaskPriorityLow">
			<context kind="enumeration">MsoSharedWorkspaceTaskPriority</context>
			<name>msoSharedWorkspaceTaskPriorityLow</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSharedWorkspaceTaskPriorityNormal {Constant}-->
	<element type="constant">
		<source id="Office.MsoSharedWorkspaceTaskPriority.msoSharedWorkspaceTaskPriorityNormal">
			<context kind="enumeration">MsoSharedWorkspaceTaskPriority</context>
			<name>msoSharedWorkspaceTaskPriorityNormal</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoSharedWorkspaceTaskStatus  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoSharedWorkspaceTaskStatus">
			<name>MsoSharedWorkspaceTaskStatus</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSharedWorkspaceTaskStatusCompleted {Constant}-->
	<element type="constant">
		<source id="Office.MsoSharedWorkspaceTaskStatus.msoSharedWorkspaceTaskStatusCompleted">
			<context kind="enumeration">MsoSharedWorkspaceTaskStatus</context>
			<name>msoSharedWorkspaceTaskStatusCompleted</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSharedWorkspaceTaskStatusDeferred {Constant}-->
	<element type="constant">
		<source id="Office.MsoSharedWorkspaceTaskStatus.msoSharedWorkspaceTaskStatusDeferred">
			<context kind="enumeration">MsoSharedWorkspaceTaskStatus</context>
			<name>msoSharedWorkspaceTaskStatusDeferred</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSharedWorkspaceTaskStatusInProgress {Constant}-->
	<element type="constant">
		<source id="Office.MsoSharedWorkspaceTaskStatus.msoSharedWorkspaceTaskStatusInProgress">
			<context kind="enumeration">MsoSharedWorkspaceTaskStatus</context>
			<name>msoSharedWorkspaceTaskStatusInProgress</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSharedWorkspaceTaskStatusNotStarted {Constant}-->
	<element type="constant">
		<source id="Office.MsoSharedWorkspaceTaskStatus.msoSharedWorkspaceTaskStatusNotStarted">
			<context kind="enumeration">MsoSharedWorkspaceTaskStatus</context>
			<name>msoSharedWorkspaceTaskStatusNotStarted</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSharedWorkspaceTaskStatusWaiting {Constant}-->
	<element type="constant">
		<source id="Office.MsoSharedWorkspaceTaskStatus.msoSharedWorkspaceTaskStatusWaiting">
			<context kind="enumeration">MsoSharedWorkspaceTaskStatus</context>
			<name>msoSharedWorkspaceTaskStatusWaiting</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoSortBy  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoSortBy">
			<name>MsoSortBy</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSortByFileName {Constant}-->
	<element type="constant">
		<source id="Office.MsoSortBy.msoSortByFileName">
			<context kind="enumeration">MsoSortBy</context>
			<name>msoSortByFileName</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSortByFileType {Constant}-->
	<element type="constant">
		<source id="Office.MsoSortBy.msoSortByFileType">
			<context kind="enumeration">MsoSortBy</context>
			<name>msoSortByFileType</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSortByLastModified {Constant}-->
	<element type="constant">
		<source id="Office.MsoSortBy.msoSortByLastModified">
			<context kind="enumeration">MsoSortBy</context>
			<name>msoSortByLastModified</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSortByNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoSortBy.msoSortByNone">
			<context kind="enumeration">MsoSortBy</context>
			<name>msoSortByNone</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSortBySize {Constant}-->
	<element type="constant">
		<source id="Office.MsoSortBy.msoSortBySize">
			<context kind="enumeration">MsoSortBy</context>
			<name>msoSortBySize</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoSortOrder  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoSortOrder">
			<name>MsoSortOrder</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSortOrderAscending {Constant}-->
	<element type="constant">
		<source id="Office.MsoSortOrder.msoSortOrderAscending">
			<context kind="enumeration">MsoSortOrder</context>
			<name>msoSortOrderAscending</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSortOrderDescending {Constant}-->
	<element type="constant">
		<source id="Office.MsoSortOrder.msoSortOrderDescending">
			<context kind="enumeration">MsoSortOrder</context>
			<name>msoSortOrderDescending</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoSyncAvailableType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoSyncAvailableType">
			<name>MsoSyncAvailableType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncAvailableAnywhere {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncAvailableType.msoSyncAvailableAnywhere">
			<context kind="enumeration">MsoSyncAvailableType</context>
			<name>msoSyncAvailableAnywhere</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncAvailableNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncAvailableType.msoSyncAvailableNone">
			<context kind="enumeration">MsoSyncAvailableType</context>
			<name>msoSyncAvailableNone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncAvailableOffline {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncAvailableType.msoSyncAvailableOffline">
			<context kind="enumeration">MsoSyncAvailableType</context>
			<name>msoSyncAvailableOffline</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoSyncCompareType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoSyncCompareType">
			<name>MsoSyncCompareType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncCompareAndMerge {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncCompareType.msoSyncCompareAndMerge">
			<context kind="enumeration">MsoSyncCompareType</context>
			<name>msoSyncCompareAndMerge</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncCompareSideBySide {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncCompareType.msoSyncCompareSideBySide">
			<context kind="enumeration">MsoSyncCompareType</context>
			<name>msoSyncCompareSideBySide</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoSyncConflictResolutionType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoSyncConflictResolutionType">
			<name>MsoSyncConflictResolutionType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncConflictClientWins {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncConflictResolutionType.msoSyncConflictClientWins">
			<context kind="enumeration">MsoSyncConflictResolutionType</context>
			<name>msoSyncConflictClientWins</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncConflictMerge {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncConflictResolutionType.msoSyncConflictMerge">
			<context kind="enumeration">MsoSyncConflictResolutionType</context>
			<name>msoSyncConflictMerge</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncConflictServerWins {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncConflictResolutionType.msoSyncConflictServerWins">
			<context kind="enumeration">MsoSyncConflictResolutionType</context>
			<name>msoSyncConflictServerWins</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoSyncErrorType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoSyncErrorType">
			<name>MsoSyncErrorType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorCouldNotCompare {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorCouldNotCompare">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorCouldNotCompare</name>
			<value>13</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorCouldNotConnect {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorCouldNotConnect">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorCouldNotConnect</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorCouldNotOpen {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorCouldNotOpen">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorCouldNotOpen</name>
			<value>11</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorCouldNotResolve {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorCouldNotResolve">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorCouldNotResolve</name>
			<value>14</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorCouldNotUpdate {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorCouldNotUpdate">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorCouldNotUpdate</name>
			<value>12</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorFileInUse {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorFileInUse">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorFileInUse</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorFileNotFound {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorFileNotFound">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorFileNotFound</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorFileTooLarge {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorFileTooLarge">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorFileTooLarge</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorNone {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorNone">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorNone</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorNoNetwork {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorNoNetwork">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorNoNetwork</name>
			<value>15</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorOutOfSpace {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorOutOfSpace">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorOutOfSpace</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorUnauthorizedUser {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorUnauthorizedUser">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorUnauthorizedUser</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorUnknown {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorUnknown">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorUnknown</name>
			<value>16</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorUnknownDownload {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorUnknownDownload">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorUnknownDownload</name>
			<value>10</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorUnknownUpload {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorUnknownUpload">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorUnknownUpload</name>
			<value>9</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorVirusDownload {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorVirusDownload">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorVirusDownload</name>
			<value>8</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncErrorVirusUpload {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncErrorType.msoSyncErrorVirusUpload">
			<context kind="enumeration">MsoSyncErrorType</context>
			<name>msoSyncErrorVirusUpload</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoSyncEventType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoSyncEventType">
			<name>MsoSyncEventType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncEventDownloadFailed {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncEventType.msoSyncEventDownloadFailed">
			<context kind="enumeration">MsoSyncEventType</context>
			<name>msoSyncEventDownloadFailed</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncEventDownloadInitiated {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncEventType.msoSyncEventDownloadInitiated">
			<context kind="enumeration">MsoSyncEventType</context>
			<name>msoSyncEventDownloadInitiated</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncEventDownloadNoChange {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncEventType.msoSyncEventDownloadNoChange">
			<context kind="enumeration">MsoSyncEventType</context>
			<name>msoSyncEventDownloadNoChange</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncEventDownloadSucceeded {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncEventType.msoSyncEventDownloadSucceeded">
			<context kind="enumeration">MsoSyncEventType</context>
			<name>msoSyncEventDownloadSucceeded</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncEventOffline {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncEventType.msoSyncEventOffline">
			<context kind="enumeration">MsoSyncEventType</context>
			<name>msoSyncEventOffline</name>
			<value>7</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncEventUploadFailed {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncEventType.msoSyncEventUploadFailed">
			<context kind="enumeration">MsoSyncEventType</context>
			<name>msoSyncEventUploadFailed</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncEventUploadInitiated {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncEventType.msoSyncEventUploadInitiated">
			<context kind="enumeration">MsoSyncEventType</context>
			<name>msoSyncEventUploadInitiated</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncEventUploadSucceeded {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncEventType.msoSyncEventUploadSucceeded">
			<context kind="enumeration">MsoSyncEventType</context>
			<name>msoSyncEventUploadSucceeded</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoSyncStatusType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoSyncStatusType">
			<name>MsoSyncStatusType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncStatusConflict {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncStatusType.msoSyncStatusConflict">
			<context kind="enumeration">MsoSyncStatusType</context>
			<name>msoSyncStatusConflict</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncStatusError {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncStatusType.msoSyncStatusError">
			<context kind="enumeration">MsoSyncStatusType</context>
			<name>msoSyncStatusError</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncStatusLatest {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncStatusType.msoSyncStatusLatest">
			<context kind="enumeration">MsoSyncStatusType</context>
			<name>msoSyncStatusLatest</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncStatusLocalChanges {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncStatusType.msoSyncStatusLocalChanges">
			<context kind="enumeration">MsoSyncStatusType</context>
			<name>msoSyncStatusLocalChanges</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncStatusNewerAvailable {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncStatusType.msoSyncStatusNewerAvailable">
			<context kind="enumeration">MsoSyncStatusType</context>
			<name>msoSyncStatusNewerAvailable</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncStatusNoSharedWorkspace {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncStatusType.msoSyncStatusNoSharedWorkspace">
			<context kind="enumeration">MsoSyncStatusType</context>
			<name>msoSyncStatusNoSharedWorkspace</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncStatusSuspended {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncStatusType.msoSyncStatusSuspended">
			<context kind="enumeration">MsoSyncStatusType</context>
			<name>msoSyncStatusSuspended</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoSyncVersionType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoSyncVersionType">
			<name>MsoSyncVersionType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncVersionLastViewed {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncVersionType.msoSyncVersionLastViewed">
			<context kind="enumeration">MsoSyncVersionType</context>
			<name>msoSyncVersionLastViewed</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSyncVersionServer {Constant}-->
	<element type="constant">
		<source id="Office.MsoSyncVersionType.msoSyncVersionServer">
			<context kind="enumeration">MsoSyncVersionType</context>
			<name>msoSyncVersionServer</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoTargetBrowser  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoTargetBrowser">
			<name>MsoTargetBrowser</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTargetBrowserIE4 {Constant}-->
	<element type="constant">
		<source id="Office.MsoTargetBrowser.msoTargetBrowserIE4">
			<context kind="enumeration">MsoTargetBrowser</context>
			<name>msoTargetBrowserIE4</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTargetBrowserIE5 {Constant}-->
	<element type="constant">
		<source id="Office.MsoTargetBrowser.msoTargetBrowserIE5">
			<context kind="enumeration">MsoTargetBrowser</context>
			<name>msoTargetBrowserIE5</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTargetBrowserIE6 {Constant}-->
	<element type="constant">
		<source id="Office.MsoTargetBrowser.msoTargetBrowserIE6">
			<context kind="enumeration">MsoTargetBrowser</context>
			<name>msoTargetBrowserIE6</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTargetBrowserV3 {Constant}-->
	<element type="constant">
		<source id="Office.MsoTargetBrowser.msoTargetBrowserV3">
			<context kind="enumeration">MsoTargetBrowser</context>
			<name>msoTargetBrowserV3</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTargetBrowserV4 {Constant}-->
	<element type="constant">
		<source id="Office.MsoTargetBrowser.msoTargetBrowserV4">
			<context kind="enumeration">MsoTargetBrowser</context>
			<name>msoTargetBrowserV4</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoTextEffectAlignment  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoTextEffectAlignment">
			<name>MsoTextEffectAlignment</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectAlignmentCentered {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextEffectAlignment.msoTextEffectAlignmentCentered">
			<context kind="enumeration">MsoTextEffectAlignment</context>
			<name>msoTextEffectAlignmentCentered</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectAlignmentLeft {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextEffectAlignment.msoTextEffectAlignmentLeft">
			<context kind="enumeration">MsoTextEffectAlignment</context>
			<name>msoTextEffectAlignmentLeft</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectAlignmentLetterJustify {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextEffectAlignment.msoTextEffectAlignmentLetterJustify">
			<context kind="enumeration">MsoTextEffectAlignment</context>
			<name>msoTextEffectAlignmentLetterJustify</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectAlignmentMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextEffectAlignment.msoTextEffectAlignmentMixed">
			<context kind="enumeration">MsoTextEffectAlignment</context>
			<name>msoTextEffectAlignmentMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectAlignmentRight {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextEffectAlignment.msoTextEffectAlignmentRight">
			<context kind="enumeration">MsoTextEffectAlignment</context>
			<name>msoTextEffectAlignmentRight</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectAlignmentStretchJustify {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextEffectAlignment.msoTextEffectAlignmentStretchJustify">
			<context kind="enumeration">MsoTextEffectAlignment</context>
			<name>msoTextEffectAlignmentStretchJustify</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextEffectAlignmentWordJustify {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextEffectAlignment.msoTextEffectAlignmentWordJustify">
			<context kind="enumeration">MsoTextEffectAlignment</context>
			<name>msoTextEffectAlignmentWordJustify</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoTextOrientation  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoTextOrientation">
			<name>MsoTextOrientation</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextOrientationDownward {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextOrientation.msoTextOrientationDownward">
			<context kind="enumeration">MsoTextOrientation</context>
			<name>msoTextOrientationDownward</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextOrientationHorizontal {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextOrientation.msoTextOrientationHorizontal">
			<context kind="enumeration">MsoTextOrientation</context>
			<name>msoTextOrientationHorizontal</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextOrientationHorizontalRotatedFarEast {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextOrientation.msoTextOrientationHorizontalRotatedFarEast">
			<context kind="enumeration">MsoTextOrientation</context>
			<name>msoTextOrientationHorizontalRotatedFarEast</name>
			<value>6</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextOrientationMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextOrientation.msoTextOrientationMixed">
			<context kind="enumeration">MsoTextOrientation</context>
			<name>msoTextOrientationMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextOrientationUpward {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextOrientation.msoTextOrientationUpward">
			<context kind="enumeration">MsoTextOrientation</context>
			<name>msoTextOrientationUpward</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextOrientationVertical {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextOrientation.msoTextOrientationVertical">
			<context kind="enumeration">MsoTextOrientation</context>
			<name>msoTextOrientationVertical</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextOrientationVerticalFarEast {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextOrientation.msoTextOrientationVerticalFarEast">
			<context kind="enumeration">MsoTextOrientation</context>
			<name>msoTextOrientationVerticalFarEast</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoTextureType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoTextureType">
			<name>MsoTextureType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTexturePreset {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextureType.msoTexturePreset">
			<context kind="enumeration">MsoTextureType</context>
			<name>msoTexturePreset</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureTypeMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextureType.msoTextureTypeMixed">
			<context kind="enumeration">MsoTextureType</context>
			<name>msoTextureTypeMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTextureUserDefined {Constant}-->
	<element type="constant">
		<source id="Office.MsoTextureType.msoTextureUserDefined">
			<context kind="enumeration">MsoTextureType</context>
			<name>msoTextureUserDefined</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoTriState  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoTriState">
			<name>MsoTriState</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoCTrue {Constant}-->
	<element type="constant">
		<source id="Office.MsoTriState.msoCTrue">
			<context kind="enumeration">MsoTriState</context>
			<name>msoCTrue</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoFalse {Constant}-->
	<element type="constant">
		<source id="Office.MsoTriState.msoFalse">
			<context kind="enumeration">MsoTriState</context>
			<name>msoFalse</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTriStateMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoTriState.msoTriStateMixed">
			<context kind="enumeration">MsoTriState</context>
			<name>msoTriStateMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTriStateToggle {Constant}-->
	<element type="constant">
		<source id="Office.MsoTriState.msoTriStateToggle">
			<context kind="enumeration">MsoTriState</context>
			<name>msoTriStateToggle</name>
			<value>-3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoTrue {Constant}-->
	<element type="constant">
		<source id="Office.MsoTriState.msoTrue">
			<context kind="enumeration">MsoTriState</context>
			<name>msoTrue</name>
			<value>-1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoVerticalAnchor  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoVerticalAnchor">
			<name>MsoVerticalAnchor</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnchorBottom {Constant}-->
	<element type="constant">
		<source id="Office.MsoVerticalAnchor.msoAnchorBottom">
			<context kind="enumeration">MsoVerticalAnchor</context>
			<name>msoAnchorBottom</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnchorBottomBaseLine {Constant}-->
	<element type="constant">
		<source id="Office.MsoVerticalAnchor.msoAnchorBottomBaseLine">
			<context kind="enumeration">MsoVerticalAnchor</context>
			<name>msoAnchorBottomBaseLine</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnchorMiddle {Constant}-->
	<element type="constant">
		<source id="Office.MsoVerticalAnchor.msoAnchorMiddle">
			<context kind="enumeration">MsoVerticalAnchor</context>
			<name>msoAnchorMiddle</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnchorTop {Constant}-->
	<element type="constant">
		<source id="Office.MsoVerticalAnchor.msoAnchorTop">
			<context kind="enumeration">MsoVerticalAnchor</context>
			<name>msoAnchorTop</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoAnchorTopBaseline {Constant}-->
	<element type="constant">
		<source id="Office.MsoVerticalAnchor.msoAnchorTopBaseline">
			<context kind="enumeration">MsoVerticalAnchor</context>
			<name>msoAnchorTopBaseline</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoVerticalAnchorMixed {Constant}-->
	<element type="constant">
		<source id="Office.MsoVerticalAnchor.msoVerticalAnchorMixed">
			<context kind="enumeration">MsoVerticalAnchor</context>
			<name>msoVerticalAnchorMixed</name>
			<value>-2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoWizardActType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoWizardActType">
			<name>MsoWizardActType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoWizardActActive {Constant}-->
	<element type="constant">
		<source id="Office.MsoWizardActType.msoWizardActActive">
			<context kind="enumeration">MsoWizardActType</context>
			<name>msoWizardActActive</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoWizardActInactive {Constant}-->
	<element type="constant">
		<source id="Office.MsoWizardActType.msoWizardActInactive">
			<context kind="enumeration">MsoWizardActType</context>
			<name>msoWizardActInactive</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoWizardActResume {Constant}-->
	<element type="constant">
		<source id="Office.MsoWizardActType.msoWizardActResume">
			<context kind="enumeration">MsoWizardActType</context>
			<name>msoWizardActResume</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoWizardActSuspend {Constant}-->
	<element type="constant">
		<source id="Office.MsoWizardActType.msoWizardActSuspend">
			<context kind="enumeration">MsoWizardActType</context>
			<name>msoWizardActSuspend</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoWizardMsgType  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoWizardMsgType">
			<name>MsoWizardMsgType</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoWizardMsgLocalStateOff {Constant}-->
	<element type="constant">
		<source id="Office.MsoWizardMsgType.msoWizardMsgLocalStateOff">
			<context kind="enumeration">MsoWizardMsgType</context>
			<name>msoWizardMsgLocalStateOff</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoWizardMsgLocalStateOn {Constant}-->
	<element type="constant">
		<source id="Office.MsoWizardMsgType.msoWizardMsgLocalStateOn">
			<context kind="enumeration">MsoWizardMsgType</context>
			<name>msoWizardMsgLocalStateOn</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoWizardMsgResuming {Constant}-->
	<element type="constant">
		<source id="Office.MsoWizardMsgType.msoWizardMsgResuming">
			<context kind="enumeration">MsoWizardMsgType</context>
			<name>msoWizardMsgResuming</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoWizardMsgShowHelp {Constant}-->
	<element type="constant">
		<source id="Office.MsoWizardMsgType.msoWizardMsgShowHelp">
			<context kind="enumeration">MsoWizardMsgType</context>
			<name>msoWizardMsgShowHelp</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoWizardMsgSuspending {Constant}-->
	<element type="constant">
		<source id="Office.MsoWizardMsgType.msoWizardMsgSuspending">
			<context kind="enumeration">MsoWizardMsgType</context>
			<name>msoWizardMsgSuspending</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::MsoZOrderCmd  {Enumeration}-->
	<element type="enumeration">
		<source id="Office.MsoZOrderCmd">
			<name>MsoZOrderCmd</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBringForward {Constant}-->
	<element type="constant">
		<source id="Office.MsoZOrderCmd.msoBringForward">
			<context kind="enumeration">MsoZOrderCmd</context>
			<name>msoBringForward</name>
			<value>2</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBringInFrontOfText {Constant}-->
	<element type="constant">
		<source id="Office.MsoZOrderCmd.msoBringInFrontOfText">
			<context kind="enumeration">MsoZOrderCmd</context>
			<name>msoBringInFrontOfText</name>
			<value>4</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoBringToFront {Constant}-->
	<element type="constant">
		<source id="Office.MsoZOrderCmd.msoBringToFront">
			<context kind="enumeration">MsoZOrderCmd</context>
			<name>msoBringToFront</name>
			<value>0</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSendBackward {Constant}-->
	<element type="constant">
		<source id="Office.MsoZOrderCmd.msoSendBackward">
			<context kind="enumeration">MsoZOrderCmd</context>
			<name>msoSendBackward</name>
			<value>3</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSendBehindText {Constant}-->
	<element type="constant">
		<source id="Office.MsoZOrderCmd.msoSendBehindText">
			<context kind="enumeration">MsoZOrderCmd</context>
			<name>msoSendBehindText</name>
			<value>5</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--enum::msoSendToBack {Constant}-->
	<element type="constant">
		<source id="Office.MsoZOrderCmd.msoSendToBack">
			<context kind="enumeration">MsoZOrderCmd</context>
			<name>msoSendToBack</name>
			<value>1</value>
		</source>
		<destination designation="identity" />
	</element>
	<!--Class::NewFile-->
	<element type="class">
		<source id="Office.NewFile">
			<name>NewFile</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::NewFile.Add-->
	<element type="method">
		<source id="Office.NewFile.Add">
			<context kind="class">NewFile</context>
			<name>Add</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>FileName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Section</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DisplayName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Action</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::NewFile.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.NewFile.Application">
			<context kind="class">NewFile</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::NewFile.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.NewFile.Creator">
			<context kind="class">NewFile</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::NewFile.Remove-->
	<element type="method">
		<source id="Office.NewFile.Remove">
			<context kind="class">NewFile</context>
			<name>Remove</name>
			<type>boolean</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>FileName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Section</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DisplayName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Action</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::ODSOColumn-->
	<element type="class">
		<source id="Office.ODSOColumn">
			<name>ODSOColumn</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ODSOColumn.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOColumn.Application">
			<context kind="class">ODSOColumn</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ODSOColumn.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOColumn.Creator">
			<context kind="class">ODSOColumn</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ODSOColumn.Index {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOColumn.Index">
			<context kind="class">ODSOColumn</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ODSOColumn.Name {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOColumn.Name">
			<context kind="class">ODSOColumn</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ODSOColumn.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOColumn.Parent">
			<context kind="class">ODSOColumn</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::ODSOColumn.Value {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOColumn.Value">
			<context kind="class">ODSOColumn</context>
			<name>Value</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::ODSOColumns-->
	<element type="class">
		<source id="Office.ODSOColumns">
			<name>ODSOColumns</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ODSOColumns.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOColumns.Application">
			<context kind="class">ODSOColumns</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ODSOColumns.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOColumns.Count">
			<context kind="class">ODSOColumns</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ODSOColumns.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOColumns.Creator">
			<context kind="class">ODSOColumns</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ODSOColumns.Item-->
	<element type="method">
		<source id="Office.ODSOColumns.Item">
			<context kind="class">ODSOColumns</context>
			<name>Item</name>
			<type>ODSOColumn</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>varIndex</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ODSOColumns.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOColumns.Parent">
			<context kind="class">ODSOColumns</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::ODSOFilter-->
	<element type="class">
		<source id="Office.ODSOFilter">
			<name>ODSOFilter</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ODSOFilter.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOFilter.Application">
			<context kind="class">ODSOFilter</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ODSOFilter.Column-->
	<element type="property">
		<source id="Office.ODSOFilter.Column">
			<context kind="class">ODSOFilter</context>
			<name>Column</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ODSOFilter.CompareTo-->
	<element type="property">
		<source id="Office.ODSOFilter.CompareTo">
			<context kind="class">ODSOFilter</context>
			<name>CompareTo</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ODSOFilter.Comparison-->
	<element type="property">
		<source id="Office.ODSOFilter.Comparison">
			<context kind="class">ODSOFilter</context>
			<name>Comparison</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ODSOFilter.Conjunction-->
	<element type="property">
		<source id="Office.ODSOFilter.Conjunction">
			<context kind="class">ODSOFilter</context>
			<name>Conjunction</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ODSOFilter.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOFilter.Creator">
			<context kind="class">ODSOFilter</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ODSOFilter.Index {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOFilter.Index">
			<context kind="class">ODSOFilter</context>
			<name>Index</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ODSOFilter.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOFilter.Parent">
			<context kind="class">ODSOFilter</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::ODSOFilters-->
	<element type="class">
		<source id="Office.ODSOFilters">
			<name>ODSOFilters</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ODSOFilters.Add-->
	<element type="method">
		<source id="Office.ODSOFilters.Add">
			<context kind="class">ODSOFilters</context>
			<name>Add</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Column</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Comparison</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Conjunction</name>
				</parameter>
				<parameter optional="true">
					<type>String</type>
					<name>bstrCompareTo</name>
				</parameter>
				<parameter optional="true">
					<type>boolean</type>
					<name>DeferUpdate</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ODSOFilters.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOFilters.Application">
			<context kind="class">ODSOFilters</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ODSOFilters.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOFilters.Count">
			<context kind="class">ODSOFilters</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ODSOFilters.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOFilters.Creator">
			<context kind="class">ODSOFilters</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::ODSOFilters.Delete-->
	<element type="method">
		<source id="Office.ODSOFilters.Delete">
			<context kind="class">ODSOFilters</context>
			<name>Delete</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
				<parameter optional="true">
					<type>boolean</type>
					<name>DeferUpdate</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::ODSOFilters.Item-->
	<element type="method">
		<source id="Office.ODSOFilters.Item">
			<context kind="class">ODSOFilters</context>
			<name>Item</name>
			<type>ODSOFilter</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::ODSOFilters.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.ODSOFilters.Parent">
			<context kind="class">ODSOFilters</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::OfficeDataSourceObject-->
	<element type="class">
		<source id="Office.OfficeDataSourceObject">
			<name>OfficeDataSourceObject</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::OfficeDataSourceObject.ApplyFilter-->
	<element type="method">
		<source id="Office.OfficeDataSourceObject.ApplyFilter">
			<context kind="class">OfficeDataSourceObject</context>
			<name>ApplyFilter</name>
			<type>void</type>
		</source>
	</element>
	<!--property::OfficeDataSourceObject.Columns {ReadOnly}-->
	<element type="property">
		<source id="Office.OfficeDataSourceObject.Columns">
			<context kind="class">OfficeDataSourceObject</context>
			<name>Columns</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::OfficeDataSourceObject.ConnectString-->
	<element type="property">
		<source id="Office.OfficeDataSourceObject.ConnectString">
			<context kind="class">OfficeDataSourceObject</context>
			<name>ConnectString</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OfficeDataSourceObject.DataSource-->
	<element type="property">
		<source id="Office.OfficeDataSourceObject.DataSource">
			<context kind="class">OfficeDataSourceObject</context>
			<name>DataSource</name>
			<type>String</type>
		</source>
	</element>
	<!--property::OfficeDataSourceObject.Filters {ReadOnly}-->
	<element type="property">
		<source id="Office.OfficeDataSourceObject.Filters">
			<context kind="class">OfficeDataSourceObject</context>
			<name>Filters</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::OfficeDataSourceObject.Move-->
	<element type="method">
		<source id="Office.OfficeDataSourceObject.Move">
			<context kind="class">OfficeDataSourceObject</context>
			<name>Move</name>
			<type>Integer</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>MsoMoveRow</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>RowNbr</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::OfficeDataSourceObject.Open-->
	<element type="method">
		<source id="Office.OfficeDataSourceObject.Open">
			<context kind="class">OfficeDataSourceObject</context>
			<name>Open</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>String</type>
					<name>bstrSrc</name>
				</parameter>
				<parameter optional="true">
					<type>String</type>
					<name>bstrConnect</name>
				</parameter>
				<parameter optional="true">
					<type>String</type>
					<name>bstrTable</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>fOpenExclusive</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>fNeverPrompt</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::OfficeDataSourceObject.RowCount {ReadOnly}-->
	<element type="property">
		<source id="Office.OfficeDataSourceObject.RowCount">
			<context kind="class">OfficeDataSourceObject</context>
			<name>RowCount</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::OfficeDataSourceObject.SetSortOrder-->
	<element type="method">
		<source id="Office.OfficeDataSourceObject.SetSortOrder">
			<context kind="class">OfficeDataSourceObject</context>
			<name>SetSortOrder</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>SortField1</name>
				</parameter>
				<parameter optional="true">
					<type>boolean</type>
					<name>SortAscending1</name>
				</parameter>
				<parameter optional="true">
					<type>String</type>
					<name>SortField2</name>
				</parameter>
				<parameter optional="true">
					<type>boolean</type>
					<name>SortAscending2</name>
				</parameter>
				<parameter optional="true">
					<type>String</type>
					<name>SortField3</name>
				</parameter>
				<parameter optional="true">
					<type>boolean</type>
					<name>SortAscending3</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::OfficeDataSourceObject.Table-->
	<element type="property">
		<source id="Office.OfficeDataSourceObject.Table">
			<context kind="class">OfficeDataSourceObject</context>
			<name>Table</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::Permission-->
	<element type="class">
		<source id="Office.Permission">
			<name>Permission</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Permission.Add-->
	<element type="method">
		<source id="Office.Permission.Add">
			<context kind="class">Permission</context>
			<name>Add</name>
			<type>UserPermission</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>UserId</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Permission</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ExpirationDate</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Permission.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.Permission.Application">
			<context kind="class">Permission</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::Permission.ApplyPolicy-->
	<element type="method">
		<source id="Office.Permission.ApplyPolicy">
			<context kind="class">Permission</context>
			<name>ApplyPolicy</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>FileName</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Permission.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.Permission.Count">
			<context kind="class">Permission</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Permission.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.Permission.Creator">
			<context kind="class">Permission</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Permission.DocumentAuthor-->
	<element type="property">
		<source id="Office.Permission.DocumentAuthor">
			<context kind="class">Permission</context>
			<name>DocumentAuthor</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Permission.Enabled-->
	<element type="property">
		<source id="Office.Permission.Enabled">
			<context kind="class">Permission</context>
			<name>Enabled</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Permission.EnableTrustedBrowser-->
	<element type="property">
		<source id="Office.Permission.EnableTrustedBrowser">
			<context kind="class">Permission</context>
			<name>EnableTrustedBrowser</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Permission.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.Permission.Item">
			<context kind="class">Permission</context>
			<name default="true">Item</name>
			<type>UserPermission</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Permission.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.Permission.Parent">
			<context kind="class">Permission</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Permission.PermissionFromPolicy {ReadOnly}-->
	<element type="property">
		<source id="Office.Permission.PermissionFromPolicy">
			<context kind="class">Permission</context>
			<name>PermissionFromPolicy</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Permission.PolicyDescription {ReadOnly}-->
	<element type="property">
		<source id="Office.Permission.PolicyDescription">
			<context kind="class">Permission</context>
			<name>PolicyDescription</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Permission.PolicyName {ReadOnly}-->
	<element type="property">
		<source id="Office.Permission.PolicyName">
			<context kind="class">Permission</context>
			<name>PolicyName</name>
			<type>String</type>
		</source>
	</element>
	<!--method::Permission.RemoveAll-->
	<element type="method">
		<source id="Office.Permission.RemoveAll">
			<context kind="class">Permission</context>
			<name>RemoveAll</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Permission.RequestPermissionURL-->
	<element type="property">
		<source id="Office.Permission.RequestPermissionURL">
			<context kind="class">Permission</context>
			<name>RequestPermissionURL</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Permission.StoreLicenses-->
	<element type="property">
		<source id="Office.Permission.StoreLicenses">
			<context kind="class">Permission</context>
			<name>StoreLicenses</name>
			<type>boolean</type>
		</source>
	</element>
	<!--Class::PropertyTest-->
	<element type="class">
		<source id="Office.PropertyTest">
			<name>PropertyTest</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::PropertyTest.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.PropertyTest.Application">
			<context kind="class">PropertyTest</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PropertyTest.Condition {ReadOnly}-->
	<element type="property">
		<source id="Office.PropertyTest.Condition">
			<context kind="class">PropertyTest</context>
			<name>Condition</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PropertyTest.Connector {ReadOnly}-->
	<element type="property">
		<source id="Office.PropertyTest.Connector">
			<context kind="class">PropertyTest</context>
			<name>Connector</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PropertyTest.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.PropertyTest.Creator">
			<context kind="class">PropertyTest</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PropertyTest.Name {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.PropertyTest.Name">
			<context kind="class">PropertyTest</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::PropertyTest.SecondValue {ReadOnly}-->
	<element type="property">
		<source id="Office.PropertyTest.SecondValue">
			<context kind="class">PropertyTest</context>
			<name>SecondValue</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::PropertyTest.Value {ReadOnly}-->
	<element type="property">
		<source id="Office.PropertyTest.Value">
			<context kind="class">PropertyTest</context>
			<name>Value</name>
			<type>Variant</type>
		</source>
	</element>
	<!--Class::PropertyTests-->
	<element type="class">
		<source id="Office.PropertyTests">
			<name>PropertyTests</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::PropertyTests.Add-->
	<element type="method">
		<source id="Office.PropertyTests.Add">
			<context kind="class">PropertyTests</context>
			<name>Add</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Name</name>
				</parameter>
				<parameter>
					<type>Integer</type>
					<name>Condition</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Value</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>SecondValue</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Connector</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::PropertyTests.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.PropertyTests.Application">
			<context kind="class">PropertyTests</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::PropertyTests.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.PropertyTests.Count">
			<context kind="class">PropertyTests</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PropertyTests.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.PropertyTests.Creator">
			<context kind="class">PropertyTests</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::PropertyTests.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.PropertyTests.Item">
			<context kind="class">PropertyTests</context>
			<name default="true">Item</name>
			<type>PropertyTest</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::PropertyTests.Remove-->
	<element type="method">
		<source id="Office.PropertyTests.Remove">
			<context kind="class">PropertyTests</context>
			<name>Remove</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::ScopeFolder-->
	<element type="class">
		<source id="Office.ScopeFolder">
			<name>ScopeFolder</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::ScopeFolder.AddToSearchFolders-->
	<element type="method">
		<source id="Office.ScopeFolder.AddToSearchFolders">
			<context kind="class">ScopeFolder</context>
			<name>AddToSearchFolders</name>
			<type>void</type>
		</source>
	</element>
	<!--property::ScopeFolder.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.ScopeFolder.Application">
			<context kind="class">ScopeFolder</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ScopeFolder.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.ScopeFolder.Creator">
			<context kind="class">ScopeFolder</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScopeFolder.Name {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.ScopeFolder.Name">
			<context kind="class">ScopeFolder</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ScopeFolder.Path {ReadOnly}-->
	<element type="property">
		<source id="Office.ScopeFolder.Path">
			<context kind="class">ScopeFolder</context>
			<name>Path</name>
			<type>String</type>
		</source>
	</element>
	<!--property::ScopeFolder.ScopeFolders {ReadOnly}-->
	<element type="property">
		<source id="Office.ScopeFolder.ScopeFolders">
			<context kind="class">ScopeFolder</context>
			<name>ScopeFolders</name>
			<type>ScopeFolders</type>
		</source>
	</element>
	<!--Class::ScopeFolders-->
	<element type="class">
		<source id="Office.ScopeFolders">
			<name>ScopeFolders</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::ScopeFolders.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.ScopeFolders.Application">
			<context kind="class">ScopeFolders</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::ScopeFolders.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.ScopeFolders.Count">
			<context kind="class">ScopeFolders</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScopeFolders.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.ScopeFolders.Creator">
			<context kind="class">ScopeFolders</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ScopeFolders.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.ScopeFolders.Item">
			<context kind="class">ScopeFolders</context>
			<name default="true">Item</name>
			<type>ScopeFolder</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::Script-->
	<element type="class">
		<source id="Office.Script">
			<name>Script</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Script.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.Script.Application">
			<context kind="class">Script</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Script.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.Script.Creator">
			<context kind="class">Script</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Script.Delete-->
	<element type="method">
		<source id="Office.Script.Delete">
			<context kind="class">Script</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Script.Extended-->
	<element type="property">
		<source id="Office.Script.Extended">
			<context kind="class">Script</context>
			<name>Extended</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Script.Id-->
	<element type="property">
		<source id="Office.Script.Id">
			<context kind="class">Script</context>
			<name>Id</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Script.Language-->
	<element type="property">
		<source id="Office.Script.Language">
			<context kind="class">Script</context>
			<name>Language</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Script.Location {ReadOnly}-->
	<element type="property">
		<source id="Office.Script.Location">
			<context kind="class">Script</context>
			<name>Location</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Script.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.Script.Parent">
			<context kind="class">Script</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Script.ScriptText {Default}-->
	<element type="property">
		<source id="Office.Script.ScriptText">
			<context kind="class">Script</context>
			<name default="true">ScriptText</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Script.Shape {ReadOnly}-->
	<element type="property">
		<source id="Office.Script.Shape">
			<context kind="class">Script</context>
			<name>Shape</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Scripts-->
	<element type="class">
		<source id="Office.Scripts">
			<name>Scripts</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::Scripts.Add-->
	<element type="method">
		<source id="Office.Scripts.Add">
			<context kind="class">Scripts</context>
			<name>Add</name>
			<type>Script</type>
			<parameter-list>
				<parameter optional="true">
					<type>Object</type>
					<name>Anchor</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Location</name>
				</parameter>
				<parameter optional="true">
					<type>Integer</type>
					<name>Language</name>
				</parameter>
				<parameter optional="true">
					<type>String</type>
					<name>Id</name>
				</parameter>
				<parameter optional="true">
					<type>String</type>
					<name>Extended</name>
				</parameter>
				<parameter optional="true">
					<type>String</type>
					<name>ScriptText</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Scripts.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.Scripts.Application">
			<context kind="class">Scripts</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Scripts.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.Scripts.Count">
			<context kind="class">Scripts</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Scripts.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.Scripts.Creator">
			<context kind="class">Scripts</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Scripts.Delete-->
	<element type="method">
		<source id="Office.Scripts.Delete">
			<context kind="class">Scripts</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Scripts.Item {Default}-->
	<element type="method">
		<source id="Office.Scripts.Item">
			<context kind="class">Scripts</context>
			<name default="true">Item</name>
			<type>Script</type>
			<parameter-list>
				<parameter>
					<type>Variant</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Scripts.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.Scripts.Parent">
			<context kind="class">Scripts</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::SearchFolders-->
	<element type="class">
		<source id="Office.SearchFolders">
			<name>SearchFolders</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::SearchFolders.Add-->
	<element type="method">
		<source id="Office.SearchFolders.Add">
			<context kind="class">SearchFolders</context>
			<name>Add</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>ScopeFolder</type>
					<name>ScopeFolder</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SearchFolders.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SearchFolders.Application">
			<context kind="class">SearchFolders</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SearchFolders.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.SearchFolders.Count">
			<context kind="class">SearchFolders</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SearchFolders.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SearchFolders.Creator">
			<context kind="class">SearchFolders</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SearchFolders.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.SearchFolders.Item">
			<context kind="class">SearchFolders</context>
			<name default="true">Item</name>
			<type>ScopeFolder</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::SearchFolders.Remove-->
	<element type="method">
		<source id="Office.SearchFolders.Remove">
			<context kind="class">SearchFolders</context>
			<name>Remove</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--Class::SearchScope-->
	<element type="class">
		<source id="Office.SearchScope">
			<name>SearchScope</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SearchScope.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SearchScope.Application">
			<context kind="class">SearchScope</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SearchScope.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SearchScope.Creator">
			<context kind="class">SearchScope</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SearchScope.ScopeFolder {ReadOnly}-->
	<element type="property">
		<source id="Office.SearchScope.ScopeFolder">
			<context kind="class">SearchScope</context>
			<name>ScopeFolder</name>
			<type>ScopeFolder</type>
		</source>
	</element>
	<!--property::SearchScope.Type {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.SearchScope.Type">
			<context kind="class">SearchScope</context>
			<name default="true">Type</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::SearchScopes-->
	<element type="class">
		<source id="Office.SearchScopes">
			<name>SearchScopes</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SearchScopes.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SearchScopes.Application">
			<context kind="class">SearchScopes</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SearchScopes.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.SearchScopes.Count">
			<context kind="class">SearchScopes</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SearchScopes.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SearchScopes.Creator">
			<context kind="class">SearchScopes</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SearchScopes.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.SearchScopes.Item">
			<context kind="class">SearchScopes</context>
			<name default="true">Item</name>
			<type>SearchScope</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Shape.Id {ReadOnly}-->
	<element type="property">
		<source id="Office.Shape.Id">
			<context kind="class">Shape</context>
			<name>Id</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.Id {ReadOnly}-->
	<element type="property">
		<source id="Office.ShapeRange.Id">
			<context kind="class">ShapeRange</context>
			<name>Id</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::ShapeRange.Script {ReadOnly}-->
	<element type="property">
		<source id="Office.ShapeRange.Script">
			<context kind="class">ShapeRange</context>
			<name>Script</name>
			<type>Script</type>
		</source>
	</element>
	<!--property::Shapes.Background {ReadOnly}-->
	<element type="property">
		<source id="Office.Shapes.Background">
			<context kind="class">Shapes</context>
			<name>Background</name>
			<type>Shape</type>
		</source>
	</element>
	<!--property::Shapes.Default {ReadOnly}-->
	<element type="property">
		<source id="Office.Shapes.Default">
			<context kind="class">Shapes</context>
			<name>Default</name>
			<type>Shape</type>
		</source>
	</element>
	<!--Class::SharedWorkspace-->
	<element type="class">
		<source id="Office.SharedWorkspace">
			<name>SharedWorkspace</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SharedWorkspace.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspace.Application">
			<context kind="class">SharedWorkspace</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SharedWorkspace.Connected {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspace.Connected">
			<context kind="class">SharedWorkspace</context>
			<name>Connected</name>
			<type>boolean</type>
		</source>
	</element>
	<!--method::SharedWorkspace.CreateNew-->
	<element type="method">
		<source id="Office.SharedWorkspace.CreateNew">
			<context kind="class">SharedWorkspace</context>
			<name>CreateNew</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>URL</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Name</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SharedWorkspace.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspace.Creator">
			<context kind="class">SharedWorkspace</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::SharedWorkspace.Delete-->
	<element type="method">
		<source id="Office.SharedWorkspace.Delete">
			<context kind="class">SharedWorkspace</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--method::SharedWorkspace.Disconnect-->
	<element type="method">
		<source id="Office.SharedWorkspace.Disconnect">
			<context kind="class">SharedWorkspace</context>
			<name>Disconnect</name>
			<type>void</type>
		</source>
	</element>
	<!--property::SharedWorkspace.Files {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspace.Files">
			<context kind="class">SharedWorkspace</context>
			<name>Files</name>
			<type>SharedWorkspaceFiles</type>
		</source>
	</element>
	<!--property::SharedWorkspace.Folders {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspace.Folders">
			<context kind="class">SharedWorkspace</context>
			<name>Folders</name>
			<type>SharedWorkspaceFolders</type>
		</source>
	</element>
	<!--property::SharedWorkspace.LastRefreshed {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspace.LastRefreshed">
			<context kind="class">SharedWorkspace</context>
			<name>LastRefreshed</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::SharedWorkspace.Links {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspace.Links">
			<context kind="class">SharedWorkspace</context>
			<name>Links</name>
			<type>SharedWorkspaceLinks</type>
		</source>
	</element>
	<!--property::SharedWorkspace.Members {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspace.Members">
			<context kind="class">SharedWorkspace</context>
			<name>Members</name>
			<type>SharedWorkspaceMembers</type>
		</source>
	</element>
	<!--property::SharedWorkspace.Name {Default}-->
	<element type="property">
		<source id="Office.SharedWorkspace.Name">
			<context kind="class">SharedWorkspace</context>
			<name default="true">Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspace.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspace.Parent">
			<context kind="class">SharedWorkspace</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::SharedWorkspace.Refresh-->
	<element type="method">
		<source id="Office.SharedWorkspace.Refresh">
			<context kind="class">SharedWorkspace</context>
			<name>Refresh</name>
			<type>void</type>
		</source>
	</element>
	<!--method::SharedWorkspace.RemoveDocument-->
	<element type="method">
		<source id="Office.SharedWorkspace.RemoveDocument">
			<context kind="class">SharedWorkspace</context>
			<name>RemoveDocument</name>
			<type>void</type>
		</source>
	</element>
	<!--property::SharedWorkspace.SourceURL-->
	<element type="property">
		<source id="Office.SharedWorkspace.SourceURL">
			<context kind="class">SharedWorkspace</context>
			<name>SourceURL</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspace.Tasks {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspace.Tasks">
			<context kind="class">SharedWorkspace</context>
			<name>Tasks</name>
			<type>SharedWorkspaceTasks</type>
		</source>
	</element>
	<!--property::SharedWorkspace.URL {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspace.URL">
			<context kind="class">SharedWorkspace</context>
			<name>URL</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::SharedWorkspaceFile-->
	<element type="class">
		<source id="Office.SharedWorkspaceFile">
			<name>SharedWorkspaceFile</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SharedWorkspaceFile.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFile.Application">
			<context kind="class">SharedWorkspaceFile</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFile.CreatedBy {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFile.CreatedBy">
			<context kind="class">SharedWorkspaceFile</context>
			<name>CreatedBy</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFile.CreatedDate {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFile.CreatedDate">
			<context kind="class">SharedWorkspaceFile</context>
			<name>CreatedDate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFile.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFile.Creator">
			<context kind="class">SharedWorkspaceFile</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::SharedWorkspaceFile.Delete-->
	<element type="method">
		<source id="Office.SharedWorkspaceFile.Delete">
			<context kind="class">SharedWorkspaceFile</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFile.ModifiedBy {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFile.ModifiedBy">
			<context kind="class">SharedWorkspaceFile</context>
			<name>ModifiedBy</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFile.ModifiedDate {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFile.ModifiedDate">
			<context kind="class">SharedWorkspaceFile</context>
			<name>ModifiedDate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFile.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFile.Parent">
			<context kind="class">SharedWorkspaceFile</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFile.URL {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFile.URL">
			<context kind="class">SharedWorkspaceFile</context>
			<name default="true">URL</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::SharedWorkspaceFiles-->
	<element type="class">
		<source id="Office.SharedWorkspaceFiles">
			<name>SharedWorkspaceFiles</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::SharedWorkspaceFiles.Add-->
	<element type="method">
		<source id="Office.SharedWorkspaceFiles.Add">
			<context kind="class">SharedWorkspaceFiles</context>
			<name>Add</name>
			<type>SharedWorkspaceFile</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>FileName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ParentFolder</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>OverwriteIfFileAlreadyExists</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>KeepInSync</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SharedWorkspaceFiles.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFiles.Application">
			<context kind="class">SharedWorkspaceFiles</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFiles.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFiles.Count">
			<context kind="class">SharedWorkspaceFiles</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFiles.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFiles.Creator">
			<context kind="class">SharedWorkspaceFiles</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFiles.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFiles.Item">
			<context kind="class">SharedWorkspaceFiles</context>
			<name default="true">Item</name>
			<type>SharedWorkspaceFile</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SharedWorkspaceFiles.ItemCountExceeded {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFiles.ItemCountExceeded">
			<context kind="class">SharedWorkspaceFiles</context>
			<name>ItemCountExceeded</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFiles.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFiles.Parent">
			<context kind="class">SharedWorkspaceFiles</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::SharedWorkspaceFolder-->
	<element type="class">
		<source id="Office.SharedWorkspaceFolder">
			<name>SharedWorkspaceFolder</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SharedWorkspaceFolder.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFolder.Application">
			<context kind="class">SharedWorkspaceFolder</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFolder.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFolder.Creator">
			<context kind="class">SharedWorkspaceFolder</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::SharedWorkspaceFolder.Delete-->
	<element type="method">
		<source id="Office.SharedWorkspaceFolder.Delete">
			<context kind="class">SharedWorkspaceFolder</context>
			<name>Delete</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>Variant</type>
					<name>DeleteEventIfFolderContainsFiles</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SharedWorkspaceFolder.FolderName {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFolder.FolderName">
			<context kind="class">SharedWorkspaceFolder</context>
			<name default="true">FolderName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFolder.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFolder.Parent">
			<context kind="class">SharedWorkspaceFolder</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::SharedWorkspaceFolders-->
	<element type="class">
		<source id="Office.SharedWorkspaceFolders">
			<name>SharedWorkspaceFolders</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::SharedWorkspaceFolders.Add-->
	<element type="method">
		<source id="Office.SharedWorkspaceFolders.Add">
			<context kind="class">SharedWorkspaceFolders</context>
			<name>Add</name>
			<type>SharedWorkspaceFolder</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>FolderName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>ParentFolder</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SharedWorkspaceFolders.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFolders.Application">
			<context kind="class">SharedWorkspaceFolders</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFolders.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFolders.Count">
			<context kind="class">SharedWorkspaceFolders</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFolders.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFolders.Creator">
			<context kind="class">SharedWorkspaceFolders</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFolders.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFolders.Item">
			<context kind="class">SharedWorkspaceFolders</context>
			<name default="true">Item</name>
			<type>SharedWorkspaceFolder</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SharedWorkspaceFolders.ItemCountExceeded {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFolders.ItemCountExceeded">
			<context kind="class">SharedWorkspaceFolders</context>
			<name>ItemCountExceeded</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SharedWorkspaceFolders.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceFolders.Parent">
			<context kind="class">SharedWorkspaceFolders</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::SharedWorkspaceLink-->
	<element type="class">
		<source id="Office.SharedWorkspaceLink">
			<name>SharedWorkspaceLink</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SharedWorkspaceLink.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLink.Application">
			<context kind="class">SharedWorkspaceLink</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SharedWorkspaceLink.CreatedBy {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLink.CreatedBy">
			<context kind="class">SharedWorkspaceLink</context>
			<name>CreatedBy</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceLink.CreatedDate {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLink.CreatedDate">
			<context kind="class">SharedWorkspaceLink</context>
			<name>CreatedDate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::SharedWorkspaceLink.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLink.Creator">
			<context kind="class">SharedWorkspaceLink</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::SharedWorkspaceLink.Delete-->
	<element type="method">
		<source id="Office.SharedWorkspaceLink.Delete">
			<context kind="class">SharedWorkspaceLink</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::SharedWorkspaceLink.Description-->
	<element type="property">
		<source id="Office.SharedWorkspaceLink.Description">
			<context kind="class">SharedWorkspaceLink</context>
			<name>Description</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceLink.ModifiedBy {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLink.ModifiedBy">
			<context kind="class">SharedWorkspaceLink</context>
			<name>ModifiedBy</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceLink.ModifiedDate {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLink.ModifiedDate">
			<context kind="class">SharedWorkspaceLink</context>
			<name>ModifiedDate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::SharedWorkspaceLink.Notes-->
	<element type="property">
		<source id="Office.SharedWorkspaceLink.Notes">
			<context kind="class">SharedWorkspaceLink</context>
			<name>Notes</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceLink.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLink.Parent">
			<context kind="class">SharedWorkspaceLink</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::SharedWorkspaceLink.Save-->
	<element type="method">
		<source id="Office.SharedWorkspaceLink.Save">
			<context kind="class">SharedWorkspaceLink</context>
			<name>Save</name>
			<type>void</type>
		</source>
	</element>
	<!--property::SharedWorkspaceLink.URL {Default}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLink.URL">
			<context kind="class">SharedWorkspaceLink</context>
			<name default="true">URL</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::SharedWorkspaceLinks-->
	<element type="class">
		<source id="Office.SharedWorkspaceLinks">
			<name>SharedWorkspaceLinks</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::SharedWorkspaceLinks.Add-->
	<element type="method">
		<source id="Office.SharedWorkspaceLinks.Add">
			<context kind="class">SharedWorkspaceLinks</context>
			<name>Add</name>
			<type>SharedWorkspaceLink</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>URL</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Description</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Notes</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SharedWorkspaceLinks.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLinks.Application">
			<context kind="class">SharedWorkspaceLinks</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SharedWorkspaceLinks.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLinks.Count">
			<context kind="class">SharedWorkspaceLinks</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SharedWorkspaceLinks.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLinks.Creator">
			<context kind="class">SharedWorkspaceLinks</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SharedWorkspaceLinks.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLinks.Item">
			<context kind="class">SharedWorkspaceLinks</context>
			<name default="true">Item</name>
			<type>SharedWorkspaceLink</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SharedWorkspaceLinks.ItemCountExceeded {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLinks.ItemCountExceeded">
			<context kind="class">SharedWorkspaceLinks</context>
			<name>ItemCountExceeded</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SharedWorkspaceLinks.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceLinks.Parent">
			<context kind="class">SharedWorkspaceLinks</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::SharedWorkspaceMember-->
	<element type="class">
		<source id="Office.SharedWorkspaceMember">
			<name>SharedWorkspaceMember</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SharedWorkspaceMember.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceMember.Application">
			<context kind="class">SharedWorkspaceMember</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SharedWorkspaceMember.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceMember.Creator">
			<context kind="class">SharedWorkspaceMember</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::SharedWorkspaceMember.Delete-->
	<element type="method">
		<source id="Office.SharedWorkspaceMember.Delete">
			<context kind="class">SharedWorkspaceMember</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::SharedWorkspaceMember.DomainName {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceMember.DomainName">
			<context kind="class">SharedWorkspaceMember</context>
			<name default="true">DomainName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceMember.Email {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceMember.Email">
			<context kind="class">SharedWorkspaceMember</context>
			<name>Email</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceMember.Id {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceMember.Id">
			<context kind="class">SharedWorkspaceMember</context>
			<name>Id</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceMember.Name {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceMember.Name">
			<context kind="class">SharedWorkspaceMember</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceMember.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceMember.Parent">
			<context kind="class">SharedWorkspaceMember</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::SharedWorkspaceMembers-->
	<element type="class">
		<source id="Office.SharedWorkspaceMembers">
			<name>SharedWorkspaceMembers</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::SharedWorkspaceMembers.Add-->
	<element type="method">
		<source id="Office.SharedWorkspaceMembers.Add">
			<context kind="class">SharedWorkspaceMembers</context>
			<name>Add</name>
			<type>SharedWorkspaceMember</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Email</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>DomainName</name>
				</parameter>
				<parameter>
					<type>String</type>
					<name>DisplayName</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Role</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SharedWorkspaceMembers.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceMembers.Application">
			<context kind="class">SharedWorkspaceMembers</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SharedWorkspaceMembers.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceMembers.Count">
			<context kind="class">SharedWorkspaceMembers</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SharedWorkspaceMembers.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceMembers.Creator">
			<context kind="class">SharedWorkspaceMembers</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SharedWorkspaceMembers.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceMembers.Item">
			<context kind="class">SharedWorkspaceMembers</context>
			<name default="true">Item</name>
			<type>SharedWorkspaceMember</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SharedWorkspaceMembers.ItemCountExceeded {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceMembers.ItemCountExceeded">
			<context kind="class">SharedWorkspaceMembers</context>
			<name>ItemCountExceeded</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SharedWorkspaceMembers.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceMembers.Parent">
			<context kind="class">SharedWorkspaceMembers</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::SharedWorkspaceTask-->
	<element type="class">
		<source id="Office.SharedWorkspaceTask">
			<name>SharedWorkspaceTask</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SharedWorkspaceTask.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTask.Application">
			<context kind="class">SharedWorkspaceTask</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTask.AssignedTo-->
	<element type="property">
		<source id="Office.SharedWorkspaceTask.AssignedTo">
			<context kind="class">SharedWorkspaceTask</context>
			<name>AssignedTo</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTask.CreatedBy {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTask.CreatedBy">
			<context kind="class">SharedWorkspaceTask</context>
			<name>CreatedBy</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTask.CreatedDate {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTask.CreatedDate">
			<context kind="class">SharedWorkspaceTask</context>
			<name>CreatedDate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTask.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTask.Creator">
			<context kind="class">SharedWorkspaceTask</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::SharedWorkspaceTask.Delete-->
	<element type="method">
		<source id="Office.SharedWorkspaceTask.Delete">
			<context kind="class">SharedWorkspaceTask</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTask.Description-->
	<element type="property">
		<source id="Office.SharedWorkspaceTask.Description">
			<context kind="class">SharedWorkspaceTask</context>
			<name>Description</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTask.DueDate-->
	<element type="property">
		<source id="Office.SharedWorkspaceTask.DueDate">
			<context kind="class">SharedWorkspaceTask</context>
			<name>DueDate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTask.ModifiedBy {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTask.ModifiedBy">
			<context kind="class">SharedWorkspaceTask</context>
			<name>ModifiedBy</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTask.ModifiedDate {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTask.ModifiedDate">
			<context kind="class">SharedWorkspaceTask</context>
			<name>ModifiedDate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTask.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTask.Parent">
			<context kind="class">SharedWorkspaceTask</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTask.Priority-->
	<element type="property">
		<source id="Office.SharedWorkspaceTask.Priority">
			<context kind="class">SharedWorkspaceTask</context>
			<name>Priority</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::SharedWorkspaceTask.Save-->
	<element type="method">
		<source id="Office.SharedWorkspaceTask.Save">
			<context kind="class">SharedWorkspaceTask</context>
			<name>Save</name>
			<type>void</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTask.Status-->
	<element type="property">
		<source id="Office.SharedWorkspaceTask.Status">
			<context kind="class">SharedWorkspaceTask</context>
			<name>Status</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTask.Title {Default}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTask.Title">
			<context kind="class">SharedWorkspaceTask</context>
			<name default="true">Title</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::SharedWorkspaceTasks-->
	<element type="class">
		<source id="Office.SharedWorkspaceTasks">
			<name>SharedWorkspaceTasks</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::SharedWorkspaceTasks.Add-->
	<element type="method">
		<source id="Office.SharedWorkspaceTasks.Add">
			<context kind="class">SharedWorkspaceTasks</context>
			<name>Add</name>
			<type>SharedWorkspaceTask</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>Title</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Status</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Priority</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Assignee</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>Description</name>
				</parameter>
				<parameter optional="true">
					<type>Variant</type>
					<name>DueDate</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SharedWorkspaceTasks.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTasks.Application">
			<context kind="class">SharedWorkspaceTasks</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTasks.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTasks.Count">
			<context kind="class">SharedWorkspaceTasks</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTasks.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTasks.Creator">
			<context kind="class">SharedWorkspaceTasks</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTasks.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTasks.Item">
			<context kind="class">SharedWorkspaceTasks</context>
			<name default="true">Item</name>
			<type>SharedWorkspaceTask</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SharedWorkspaceTasks.ItemCountExceeded {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTasks.ItemCountExceeded">
			<context kind="class">SharedWorkspaceTasks</context>
			<name>ItemCountExceeded</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::SharedWorkspaceTasks.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.SharedWorkspaceTasks.Parent">
			<context kind="class">SharedWorkspaceTasks</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::Signature-->
	<element type="class">
		<source id="Office.Signature">
			<name>Signature</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Signature.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.Signature.Application">
			<context kind="class">Signature</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Signature.AttachCertificate-->
	<element type="property">
		<source id="Office.Signature.AttachCertificate">
			<context kind="class">Signature</context>
			<name>AttachCertificate</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Signature.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.Signature.Creator">
			<context kind="class">Signature</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Signature.Delete-->
	<element type="method">
		<source id="Office.Signature.Delete">
			<context kind="class">Signature</context>
			<name>Delete</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Signature.ExpireDate {ReadOnly}-->
	<element type="property">
		<source id="Office.Signature.ExpireDate">
			<context kind="class">Signature</context>
			<name>ExpireDate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Signature.IsCertificateExpired {ReadOnly}-->
	<element type="property">
		<source id="Office.Signature.IsCertificateExpired">
			<context kind="class">Signature</context>
			<name>IsCertificateExpired</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Signature.IsCertificateRevoked {ReadOnly}-->
	<element type="property">
		<source id="Office.Signature.IsCertificateRevoked">
			<context kind="class">Signature</context>
			<name>IsCertificateRevoked</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Signature.Issuer {ReadOnly}-->
	<element type="property">
		<source id="Office.Signature.Issuer">
			<context kind="class">Signature</context>
			<name>Issuer</name>
			<type>String</type>
		</source>
	</element>
	<!--property::Signature.IsValid {ReadOnly}-->
	<element type="property">
		<source id="Office.Signature.IsValid">
			<context kind="class">Signature</context>
			<name>IsValid</name>
			<type>boolean</type>
		</source>
	</element>
	<!--property::Signature.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.Signature.Parent">
			<context kind="class">Signature</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::Signature.SignDate {ReadOnly}-->
	<element type="property">
		<source id="Office.Signature.SignDate">
			<context kind="class">Signature</context>
			<name>SignDate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::Signature.Signer {ReadOnly}-->
	<element type="property">
		<source id="Office.Signature.Signer">
			<context kind="class">Signature</context>
			<name>Signer</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::SignatureSet-->
	<element type="class">
		<source id="Office.SignatureSet">
			<name>SignatureSet</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::SignatureSet.Add-->
	<element type="method">
		<source id="Office.SignatureSet.Add">
			<context kind="class">SignatureSet</context>
			<name>Add</name>
			<type>Signature</type>
		</source>
	</element>
	<!--property::SignatureSet.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SignatureSet.Application">
			<context kind="class">SignatureSet</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--method::SignatureSet.Commit-->
	<element type="method">
		<source id="Office.SignatureSet.Commit">
			<context kind="class">SignatureSet</context>
			<name>Commit</name>
			<type>void</type>
		</source>
	</element>
	<!--property::SignatureSet.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.SignatureSet.Count">
			<context kind="class">SignatureSet</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SignatureSet.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SignatureSet.Creator">
			<context kind="class">SignatureSet</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::SignatureSet.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.SignatureSet.Item">
			<context kind="class">SignatureSet</context>
			<name default="true">Item</name>
			<type>Signature</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>iSig</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::SignatureSet.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.SignatureSet.Parent">
			<context kind="class">SignatureSet</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--Class::SmartDocument-->
	<element type="class">
		<source id="Office.SmartDocument">
			<name>SmartDocument</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::SmartDocument.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.SmartDocument.Application">
			<context kind="class">SmartDocument</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::SmartDocument.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.SmartDocument.Creator">
			<context kind="class">SmartDocument</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::SmartDocument.PickSolution-->
	<element type="method">
		<source id="Office.SmartDocument.PickSolution">
			<context kind="class">SmartDocument</context>
			<name>PickSolution</name>
			<type>void</type>
			<parameter-list>
				<parameter optional="true">
					<type>boolean</type>
					<name>ConsiderAllSchemas</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--method::SmartDocument.RefreshPane-->
	<element type="method">
		<source id="Office.SmartDocument.RefreshPane">
			<context kind="class">SmartDocument</context>
			<name>RefreshPane</name>
			<type>void</type>
		</source>
	</element>
	<!--property::SmartDocument.SolutionID-->
	<element type="property">
		<source id="Office.SmartDocument.SolutionID">
			<context kind="class">SmartDocument</context>
			<name>SolutionID</name>
			<type>String</type>
		</source>
	</element>
	<!--property::SmartDocument.SolutionURL-->
	<element type="property">
		<source id="Office.SmartDocument.SolutionURL">
			<context kind="class">SmartDocument</context>
			<name>SolutionURL</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::Sync-->
	<element type="class">
		<source id="Office.Sync">
			<name>Sync</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::Sync.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.Sync.Application">
			<context kind="class">Sync</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::Sync.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.Sync.Creator">
			<context kind="class">Sync</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::Sync.ErrorType {ReadOnly}-->
	<element type="property">
		<source id="Office.Sync.ErrorType">
			<context kind="class">Sync</context>
			<name>ErrorType</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Sync.GetUpdate-->
	<element type="method">
		<source id="Office.Sync.GetUpdate">
			<context kind="class">Sync</context>
			<name>GetUpdate</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Sync.LastSyncTime {ReadOnly}-->
	<element type="property">
		<source id="Office.Sync.LastSyncTime">
			<context kind="class">Sync</context>
			<name>LastSyncTime</name>
			<type>Variant</type>
		</source>
	</element>
	<!--method::Sync.OpenVersion-->
	<element type="method">
		<source id="Office.Sync.OpenVersion">
			<context kind="class">Sync</context>
			<name>OpenVersion</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>SyncVersionType</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Sync.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.Sync.Parent">
			<context kind="class">Sync</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--method::Sync.PutUpdate-->
	<element type="method">
		<source id="Office.Sync.PutUpdate">
			<context kind="class">Sync</context>
			<name>PutUpdate</name>
			<type>void</type>
		</source>
	</element>
	<!--method::Sync.ResolveConflict-->
	<element type="method">
		<source id="Office.Sync.ResolveConflict">
			<context kind="class">Sync</context>
			<name>ResolveConflict</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>SyncConflictResolution</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::Sync.Status {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.Sync.Status">
			<context kind="class">Sync</context>
			<name default="true">Status</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::Sync.Unsuspend-->
	<element type="method">
		<source id="Office.Sync.Unsuspend">
			<context kind="class">Sync</context>
			<name>Unsuspend</name>
			<type>void</type>
		</source>
	</element>
	<!--property::Sync.WorkspaceLastChangedBy {ReadOnly}-->
	<element type="property">
		<source id="Office.Sync.WorkspaceLastChangedBy">
			<context kind="class">Sync</context>
			<name>WorkspaceLastChangedBy</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::UserPermission-->
	<element type="class">
		<source id="Office.UserPermission">
			<name>UserPermission</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::UserPermission.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.UserPermission.Application">
			<context kind="class">UserPermission</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::UserPermission.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.UserPermission.Creator">
			<context kind="class">UserPermission</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::UserPermission.ExpirationDate-->
	<element type="property">
		<source id="Office.UserPermission.ExpirationDate">
			<context kind="class">UserPermission</context>
			<name>ExpirationDate</name>
			<type>Variant</type>
		</source>
	</element>
	<!--property::UserPermission.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.UserPermission.Parent">
			<context kind="class">UserPermission</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::UserPermission.Permission-->
	<element type="property">
		<source id="Office.UserPermission.Permission">
			<context kind="class">UserPermission</context>
			<name>Permission</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::UserPermission.Remove-->
	<element type="method">
		<source id="Office.UserPermission.Remove">
			<context kind="class">UserPermission</context>
			<name>Remove</name>
			<type>void</type>
		</source>
	</element>
	<!--property::UserPermission.UserId {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.UserPermission.UserId">
			<context kind="class">UserPermission</context>
			<name default="true">UserId</name>
			<type>String</type>
		</source>
	</element>
	<!--Class::WebComponent-->
	<element type="class">
		<source id="Office.WebComponent">
			<name>WebComponent</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--method::WebComponent.Commit-->
	<element type="method">
		<source id="Office.WebComponent.Commit">
			<context kind="class">WebComponent</context>
			<name>Commit</name>
			<type>void</type>
		</source>
	</element>
	<!--property::WebComponent.Height-->
	<element type="property">
		<source id="Office.WebComponent.Height">
			<context kind="class">WebComponent</context>
			<name>Height</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::WebComponent.HTML-->
	<element type="property">
		<source id="Office.WebComponent.HTML">
			<context kind="class">WebComponent</context>
			<name>HTML</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebComponent.Name-->
	<element type="property">
		<source id="Office.WebComponent.Name">
			<context kind="class">WebComponent</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--method::WebComponent.Revert-->
	<element type="method">
		<source id="Office.WebComponent.Revert">
			<context kind="class">WebComponent</context>
			<name>Revert</name>
			<type>void</type>
		</source>
	</element>
	<!--method::WebComponent.SetPlaceHolderGraphic-->
	<element type="method">
		<source id="Office.WebComponent.SetPlaceHolderGraphic">
			<context kind="class">WebComponent</context>
			<name>SetPlaceHolderGraphic</name>
			<type>void</type>
			<parameter-list>
				<parameter>
					<type>String</type>
					<name>PlaceHolderGraphic</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
	<!--property::WebComponent.Shape {ReadOnly}-->
	<element type="property">
		<source id="Office.WebComponent.Shape">
			<context kind="class">WebComponent</context>
			<name>Shape</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::WebComponent.URL-->
	<element type="property">
		<source id="Office.WebComponent.URL">
			<context kind="class">WebComponent</context>
			<name>URL</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebComponent.Width-->
	<element type="property">
		<source id="Office.WebComponent.Width">
			<context kind="class">WebComponent</context>
			<name>Width</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::WebComponentFormat-->
	<element type="class">
		<source id="Office.WebComponentFormat">
			<name>WebComponentFormat</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::WebComponentFormat.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.WebComponentFormat.Application">
			<context kind="class">WebComponentFormat</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::WebComponentFormat.Height-->
	<element type="property">
		<source id="Office.WebComponentFormat.Height">
			<context kind="class">WebComponentFormat</context>
			<name>Height</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::WebComponentFormat.HTML-->
	<element type="property">
		<source id="Office.WebComponentFormat.HTML">
			<context kind="class">WebComponentFormat</context>
			<name>HTML</name>
			<type>String</type>
		</source>
	</element>
	<!--method::WebComponentFormat.LaunchPropertiesWindow-->
	<element type="method">
		<source id="Office.WebComponentFormat.LaunchPropertiesWindow">
			<context kind="class">WebComponentFormat</context>
			<name>LaunchPropertiesWindow</name>
			<type>void</type>
		</source>
	</element>
	<!--property::WebComponentFormat.Name-->
	<element type="property">
		<source id="Office.WebComponentFormat.Name">
			<context kind="class">WebComponentFormat</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebComponentFormat.Parent {ReadOnly}-->
	<element type="property">
		<source id="Office.WebComponentFormat.Parent">
			<context kind="class">WebComponentFormat</context>
			<name>Parent</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::WebComponentFormat.PreviewGraphic-->
	<element type="property">
		<source id="Office.WebComponentFormat.PreviewGraphic">
			<context kind="class">WebComponentFormat</context>
			<name>PreviewGraphic</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebComponentFormat.URL-->
	<element type="property">
		<source id="Office.WebComponentFormat.URL">
			<context kind="class">WebComponentFormat</context>
			<name>URL</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebComponentFormat.Width-->
	<element type="property">
		<source id="Office.WebComponentFormat.Width">
			<context kind="class">WebComponentFormat</context>
			<name>Width</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::WebComponentProperties-->
	<element type="class">
		<source id="Office.WebComponentProperties">
			<name>WebComponentProperties</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::WebComponentProperties.Height-->
	<element type="property">
		<source id="Office.WebComponentProperties.Height">
			<context kind="class">WebComponentProperties</context>
			<name>Height</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::WebComponentProperties.HTML-->
	<element type="property">
		<source id="Office.WebComponentProperties.HTML">
			<context kind="class">WebComponentProperties</context>
			<name>HTML</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebComponentProperties.Name-->
	<element type="property">
		<source id="Office.WebComponentProperties.Name">
			<context kind="class">WebComponentProperties</context>
			<name>Name</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebComponentProperties.PreviewGraphic-->
	<element type="property">
		<source id="Office.WebComponentProperties.PreviewGraphic">
			<context kind="class">WebComponentProperties</context>
			<name>PreviewGraphic</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebComponentProperties.PreviewHTML-->
	<element type="property">
		<source id="Office.WebComponentProperties.PreviewHTML">
			<context kind="class">WebComponentProperties</context>
			<name>PreviewHTML</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebComponentProperties.Shape {ReadOnly}-->
	<element type="property">
		<source id="Office.WebComponentProperties.Shape">
			<context kind="class">WebComponentProperties</context>
			<name>Shape</name>
			<type>Object</type>
		</source>
	</element>
	<!--property::WebComponentProperties.Tag-->
	<element type="property">
		<source id="Office.WebComponentProperties.Tag">
			<context kind="class">WebComponentProperties</context>
			<name>Tag</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebComponentProperties.URL-->
	<element type="property">
		<source id="Office.WebComponentProperties.URL">
			<context kind="class">WebComponentProperties</context>
			<name>URL</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebComponentProperties.Width-->
	<element type="property">
		<source id="Office.WebComponentProperties.Width">
			<context kind="class">WebComponentProperties</context>
			<name>Width</name>
			<type>Integer</type>
		</source>
	</element>
	<!--Class::WebComponentWindowExternal-->
	<element type="class">
		<source id="Office.WebComponentWindowExternal">
			<name>WebComponentWindowExternal</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::WebComponentWindowExternal.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.WebComponentWindowExternal.Application">
			<context kind="class">WebComponentWindowExternal</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::WebComponentWindowExternal.ApplicationName {ReadOnly}-->
	<element type="property">
		<source id="Office.WebComponentWindowExternal.ApplicationName">
			<context kind="class">WebComponentWindowExternal</context>
			<name>ApplicationName</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebComponentWindowExternal.ApplicationVersion {ReadOnly}-->
	<element type="property">
		<source id="Office.WebComponentWindowExternal.ApplicationVersion">
			<context kind="class">WebComponentWindowExternal</context>
			<name>ApplicationVersion</name>
			<type>Integer</type>
		</source>
	</element>
	<!--method::WebComponentWindowExternal.CloseWindow-->
	<element type="method">
		<source id="Office.WebComponentWindowExternal.CloseWindow">
			<context kind="class">WebComponentWindowExternal</context>
			<name>CloseWindow</name>
			<type>void</type>
		</source>
	</element>
	<!--property::WebComponentWindowExternal.InterfaceVersion {ReadOnly}-->
	<element type="property">
		<source id="Office.WebComponentWindowExternal.InterfaceVersion">
			<context kind="class">WebComponentWindowExternal</context>
			<name>InterfaceVersion</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::WebComponentWindowExternal.WebComponent {ReadOnly}-->
	<element type="property">
		<source id="Office.WebComponentWindowExternal.WebComponent">
			<context kind="class">WebComponentWindowExternal</context>
			<name>WebComponent</name>
			<type>WebComponent</type>
		</source>
	</element>
	<!--Class::WebPageFont-->
	<element type="class">
		<source id="Office.WebPageFont">
			<name>WebPageFont</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::WebPageFont.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.WebPageFont.Application">
			<context kind="class">WebPageFont</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::WebPageFont.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.WebPageFont.Creator">
			<context kind="class">WebPageFont</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::WebPageFont.FixedWidthFont-->
	<element type="property">
		<source id="Office.WebPageFont.FixedWidthFont">
			<context kind="class">WebPageFont</context>
			<name>FixedWidthFont</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebPageFont.FixedWidthFontSize-->
	<element type="property">
		<source id="Office.WebPageFont.FixedWidthFontSize">
			<context kind="class">WebPageFont</context>
			<name>FixedWidthFontSize</name>
			<type>Single</type>
		</source>
	</element>
	<!--property::WebPageFont.ProportionalFont-->
	<element type="property">
		<source id="Office.WebPageFont.ProportionalFont">
			<context kind="class">WebPageFont</context>
			<name>ProportionalFont</name>
			<type>String</type>
		</source>
	</element>
	<!--property::WebPageFont.ProportionalFontSize-->
	<element type="property">
		<source id="Office.WebPageFont.ProportionalFontSize">
			<context kind="class">WebPageFont</context>
			<name>ProportionalFontSize</name>
			<type>Single</type>
		</source>
	</element>
	<!--Class::WebPageFonts-->
	<element type="class">
		<source id="Office.WebPageFonts">
			<name>WebPageFonts</name>
		</source>
		<destination designation="identity" />
	</element>
	<!--property::WebPageFonts.Application {ReadOnly}-->
	<element type="property">
		<source id="Office.WebPageFonts.Application">
			<context kind="class">WebPageFonts</context>
			<name>Application</name>
			<type>Application</type>
		</source>
	</element>
	<!--property::WebPageFonts.Count {ReadOnly}-->
	<element type="property">
		<source id="Office.WebPageFonts.Count">
			<context kind="class">WebPageFonts</context>
			<name>Count</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::WebPageFonts.Creator {ReadOnly}-->
	<element type="property">
		<source id="Office.WebPageFonts.Creator">
			<context kind="class">WebPageFonts</context>
			<name>Creator</name>
			<type>Integer</type>
		</source>
	</element>
	<!--property::WebPageFonts.Item {Default} {ReadOnly}-->
	<element type="property">
		<source id="Office.WebPageFonts.Item">
			<context kind="class">WebPageFonts</context>
			<name default="true">Item</name>
			<type>WebPageFont</type>
			<parameter-list>
				<parameter>
					<type>Integer</type>
					<name>Index</name>
				</parameter>
			</parameter-list>
		</source>
	</element>
</api>
