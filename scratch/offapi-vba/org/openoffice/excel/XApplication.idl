/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: XApplication.idl,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: rt $ $Date: 2007/04/27 07:38:44 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/
#ifndef __org_openoffice_excel_XApplication_idl__
#define __org_openoffice_excel_XApplication_idl__

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __org_openoffice_vba_XHelperInterface_idl__
#include <org/openoffice/vba/XHelperInterface.idl>
#endif

module org {  module openoffice {  module excel { 

interface XRange;
interface XWorkbook;
interface XWorkbooks;
interface XWorksheets;
interface XWorksheetFunction;
interface XWindow;
interface XWorksheet;

interface XApplication
{

	interface ::org::openoffice::vba::XHelperInterface;

	[attribute, readonly] any Selection;
	[attribute, readonly] XWorkbook ActiveWorkbook;
	[attribute, readonly] XRange ActiveCell;
	[attribute, readonly] XWindow ActiveWindow;
	[attribute, readonly] XWorksheet ActiveSheet;
	[attribute] long Calculation;
	//#TODO #FIXME this is more of a placeholder, will return
	// the value of activeworkbook, in xl 'ThisWorkbook' should return the
	// workbook in which the 'calling' macro is running. Should be possible
	// to determine this
	[attribute, readonly] XWorkbook ThisWorkbook;
	[attribute, readonly] string Name;
	[attribute] boolean ScreenUpdating;
	[attribute] boolean DisplayStatusBar;
	[attribute] boolean DisplayAlerts;
	[attribute] boolean DisplayFormulaBar;
	[attribute] any CutCopyMode;
	[attribute] any StatusBar;
	[attribute] long Cursor; 
	[attribute, readonly] string Version;

	void setDefaultFilePath([in] string DefaultFilePath) raises(com::sun::star::script::BasicErrorException);

	string getDefaultFilePath() raises(com::sun::star::script::BasicErrorException); 

	string LibraryPath() raises(com::sun::star::script::BasicErrorException);
	string TemplatesPath() raises(com::sun::star::script::BasicErrorException);
	string PathSeparator() raises(com::sun::star::script::BasicErrorException);
	any Workbooks( [in] any aIndex );
	any Worksheets( [in] any aIndex );
	any Windows( [in] any aIndex );
	any WorksheetFunction();
	any Evaluate( [in] string Name );
	any Dialogs( [in] any DialogIndex );
	any Range( [in] any Cell1, [in] any Cell2 );
	any Names();
	void GoTo( [in] any Reference, [in] any Scroll );
	// #FIXME #TODO up to 30 args needed
	double CountA( [in] any arg1 );
	void wait( [in] double time );
	void Calculate() raises(com::sun::star::script::BasicErrorException);
	XRange Intersect([in] XRange Arg1, [in] XRange Arg2, [in] /*Optional*/ any Arg3, [in] /*Optional*/ any Arg4, [in] /*Optional*/ any Arg5, [in] /*Optional*/ any Arg6, [in] /*Optional*/ any Arg7, [in] /*Optional*/ any Arg8, [in] /*Optional*/ any Arg9, [in] /*Optional*/ any Arg10, [in] /*Optional*/ any Arg11, [in] /*Optional*/ any Arg12, [in] /*Optional*/ any Arg13, [in] /*Optional*/ any Arg14, [in] /*Optional*/ any Arg15, [in] /*Optional*/ any Arg16, [in] /*Optional*/ any Arg17, [in] /*Optional*/ any Arg18, [in] /*Optional*/ any Arg19, [in] /*Optional*/ any Arg20, [in] /*Optional*/ any Arg21, [in] /*Optional*/ any Arg22, [in] /*Optional*/ any Arg23, [in] /*Optional*/ any Arg24, [in] /*Optional*/ any Arg25, [in] /*Optional*/ any Arg26, [in] /*Optional*/ any Arg27, [in] /*Optional*/ any Arg28, [in] /*Optional*/ any Arg29, [in] /*Optional*/ any Arg30)
        raises(com::sun::star::script::BasicErrorException);
	void Volatile([in] any Volatile);
	void DoEvents();
};

}; }; };

#endif


