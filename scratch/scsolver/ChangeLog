2007-10-13  Kohei Yoshida  <kyoshida@novell.com>

	* README: added a few notes about the configure script for building 
	scsolver as an add-on.

2007-10-11  Laurent Godard  <lgodard@indesko.com>

	* source/ui/scsolver.src: added French translation.

2007-10-10  Kohei Yoshida  <kyoshida@novell.com>

	* source/ui/scsolver.src: changed two dialog strings per Lutz Hoeger's 
	suggestion.

2007-08-12  Kohei Yoshida  <kyoshida@novell.com>

	* workben/addon_pkg/configure.ac: replace the leading '~' with
	$(HOME) in file path.

2007-08-12  Kohei Yoshida  <kyoshida@novell.com>

	* workben/addon_pkg/configure.ac: convert the lp_solve path to absolute
	path.
	
	* workben/addon_pkg/Makefile.in: set a symbolic link to lpsolve 
	directory, fixed 'make regview', and added 'make install' to allow 
	quick installation of the package.

2007-08-12  Kohei Yoshida  <kyoshida@novell.com>

	* workben/addon_pkg/autogen.sh:
	* workben/addon_pkg/configure.ac:
	* workben/addon_pkg/Makefile.in: added so that we can use autoconf.

	* workben/addon_pkg/Makefile: moved to Makefile_build as a backup.

2007-08-12  Kohei Yoshida  <kyoshida@novell.com>

	* source/ui/scsolver.hrc: moved to source/inc/scsolver.hrc to make it 
	globally accessible.
	
	* source/service/service.cxx: use my own string resource code for add-on
	package build.

	* workben/addon_pkg/Makefile:
	* workben/addon_pkg/Makefile_SDK.mk:
	* workben/addon_pkg/res/en-US.cxx:
	* workben/addon_pkg/res/resource.hxx: added my own string resource 
	handling for add-on package build, since UNO API does not provide a 
	means for string resource localization.

2007-08-08  Kohei Yoshida  <kyoshida@novell.com>

	* source/inc/basedlg.hxx:
	* source/inc/solver.hxx:
	* source/service/service.cxx: changed so that scsolver can be built 
	externally using the SDK.
	
	* source/numeric/makefile.mk: fixed ooo-build breakage.

	* workben/addon_pkg/Makefile_SDK.mk: added for building scsolver module
	externally using the SDK.

2007-07-26  Kohei Yoshida  <kyoshida@novell.com>

	* source/inc/numeric/funcobj.hxx:
	* source/numeric/funcobj.cxx: added toBaseFuncObj method to wrap
	SingleVarFuncObj inside a BaseFuncObj instance so that it can be passed
	to NumericalDiffer, which expects BaseFuncObj instance.
	
	* source/numeric/diff.cxx:
	* source/inc/numeric/quadfitlinesearch.hxx:
	* source/numeric/quadfitlinesearch.cxx:
	* source/numeric/quadfitlinesearch_test.cxx: adjusted for a slight 
	change in BaseFuncObj's interface.
	
	* workben/unittest/Makefile: added diff.o to quadfitlinesearch build 
	rule.

2007-07-26  Kohei Yoshida  <kyoshida@novell.com>

	* source/inc/numeric/diff.hxx:
	* source/numeric/diff.cxx:
	* source/numeric/diff_test.cxx:
	* source/numeric/nlpqnewton.cxx: changed the name of class Differentiate
	to NumericalDiffer & removed its implementation class by moving all the
	meat into the envelope class.
	
	* source/inc/numeric/quadfitlinesearch.hxx:
	* source/numeric/quadfitlinesearch.cxx: renamed a variable.
	
	* source/ui/basedlg.cxx: removed unused variable.
	
	* workben/addon_pkg/Makefile: added compiler switch to supress massive
	amount of warnings coming from the UNO code.

2007-07-16  Kohei Yoshida  <kyoshida@novell.com>

	* source/numeric/diff_test.cxx: beefed up the test code for numerical
	differentiation.

2007-07-14  Kohei Yoshida  <kyoshida@novell.com>

	* source/inc/numeric/funcobj.hxx:
	* source/numeric/funcobj.cxx: added operator() for convenience.
	
	* source/numeric/diff_test.cxx: fixed the test code to reflect API 
	change.
	
	* workben/unittest/Makefile: added diff test.
	
	* source/inc/numeric/quadfitlinesearch.hxx:
	* source/numeric/quadfitlinesearch.cxx: added a little more meat.

2007-07-10  Kohei Yoshida  <kyoshida@novell.com>

	* source/inc/numeric/funcobj.hxx:
	* source/numeric/funcobj.cxx (SingleVarFuncObj): new class to handle
	single-variable non-linear functions added.
	
	* source/inc/numeric/quadfitlinesearch.hxx:
	* source/numeric/quadfitlinesearch.cxx: added just a little more code.
	
	* source/numeric/quadfitlinesearch_test.cxx:
	* workben/unittest/Makefile: added test code for QuadFitLineSearch 
	class.

2007-06-18  Kohei Yoshida  <kyoshida@novell.com>
	
	* source/numeric/polyeqnsolver_test.cxx: re-organized the code a bit.
	
	* source/inc/numeric/quadfitlinesearch.hxx:
	* source/numeric/quadfitlinesearch.cxx:
	* source/numeric/quadfitlinesearch_test.cxx:
	* workben/unittest/Makefile: added new class QuadFitLineSearch and its
	  test case to implement a quadratic fit line search algorithm.

2007-06-17  Kohei Yoshida  <kyoshida@novell.com>

	* source/inc/numeric/polyeqnsolver.hxx: 
	* source/numeric/polyeqnsolver.cxx (getQuadPeak): added.
	
	* source/numeric/polyeqnsolver_test.cxx: added test case for 
	  getQuadPeak() function.
	
2007-06-16  Kohei Yoshida  <kyoshida@novell.com>

	* workben/unittest/Makefile:	
	* source/inc/tool/global.hxx: fixed compilation problem for unittest.
	
	* source/inc/numeric/polyeqnsolver.hxx:
	* source/numeric/polyeqnsolver.cxx: added NotEnoughDataPoints exception
	  class, added clear() and size() methods.
	
	* source/numeric/polyeqnsolver_test.cxx: added test case for clear() &
	  added more test case.
	
	* workben/addon_pkg/Makefile: removed extra tab characters.

2007-06-13  Kohei Yoshida  <kyoshida@novell.com>

    * source/inc/tool/global.hxx:
    * source/numeric/lpmodel.cxx:
    * source/service/service.cxx: added preprocessing to deal with standalone
    scsolver uno component build.

    * workben/addon_pkg/Makefile: fixed it to build a standalone component 
    file once again.

2007-06-12  Kohei Yoshida  <kyoshida@novell.com>

    * workben/addon_pkg/*: re-added to make it possible to (once again) build
    the Solver component as a standalone UNO package.  Still work in progress.

2007-06-11  Kohei Yoshida  <kyoshida@novell.com>

    * source/inc/numeric/matrix.hxx:
    * source/numeric/matrix.cxx: minor variable name changes.

    * source/numeric/matrix_test.cxx: removed garbage from license header.

    * source/inc/numeric/polyeqnsolver.hxx:
    * source/numeric/polyeqnsolver.cxx:
    * source/numeric/polyeqnsolver_test.cxx:
    * source/numeric/makefile.mk: new class PolyEqnSolver added for solving
      arbitrary-order polynomial equations.

    * workben/unittest/Makefile: unit test for PolyEqnSolver.

2007-05-04  Kohei Yoshida  <kyoshida@novell.com>

    * source/service/service.cxx: commented out unused variables to remove 
      warnings.  

2007-05-04  Kohei Yoshida  <kyoshida@novell.com>

    * source/numeric/nlpmodel.cxx: added #include <stdio.h> header to fix 
      build breakage.  

2007-04-30  Kohei Yoshida  <kyoshida@novell.com>

    * workben/testcase/sudoku.ods:
    * workben/testcase/tc1.ods:
    * workben/testcase/tc2.ods:
    * workben/testcase/tc3.ods:
    * workben/testcase/tc4_timealloc.ods: added.

    * workben/unittest:
    * workben/unittest/Makefile:
    * source/numeric/matrix_test.cxx: added for unit-testing.

    * source/numeric/cellfuncobj.cxx:
    * source/inc/numeric/cellfuncobj.hxx:
    * source/inc/numeric/funcobj.hxx: changed signature of getFuncString().

    * source/inc/numeric/matrix.hxx:
    * source/numeric/matrix.cxx: cleaned up the Matrix class to remove its
    implementation class & file-wide tab->space conversion.

    * source/numeric/nlpmodel.cxx: removed unused header file #include.

2007-04-08  Kohei Yoshida  <kyoshida@novell.com>

    * source/inc/numeric/cellfuncobj.hxx:
    * source/inc/numeric/funcobj.hxx:
    * source/inc/numeric/nlpbase.hxx:
    * source/numeric/cellfuncobj.cxx:
    * source/numeric/nlpbase.cxx:
    * source/numeric/nlpqnewton.cxx: added getVars() method to function object
    to return a reference of current variable values, and made changes to 
    relevant algorithm/model code.  Because the solutions are now pulled 
    directly from the funcion object (to avoid multiple copying of vector's),
    there is no need to call setSolution(...) at the end of optimization run.
    So, setSolution(...) method is now removed.

    * workben/optimizer/nlp_skel/main.cxx:
    * workben/optimizer/nlp_skel/myfunctor.cxx:
    * workben/optimizer/nlp_skel/myfunctor.hxx:
    * workben/optimizer/nlp_skel/myoptimizer.cxx: added some example code to
    show how the goal is set & queried, and made mods for the above change.

2007-03-25  Kohei Yoshida  <kyoshida@novell.com>

    * source/inc/numeric/nlpmodel.hxx: added in javadoc bits about
      class instances life cycle management policy.

    * source/numeric/nlpmodel.cxx: fixed an incorrect way of reserving array 
      size, rewrote print() function to use fprintf instead of unreliable C++ 
      iostream and to include variable boundaries.

    * workben/optimizer/nlp_skel/main.cxx: included model initialization code
      with variable boundaries.

    * workben/optimizer/nlp_skel/myoptimizer.cxx: made changes to get initial
      variable values from the model instance.

2007-03-25  Kohei Yoshida  <kyoshida@novell.com>

    * source/inc/numeric/nlpbase.hxx:
    * source/inc/numeric/nlpmodel.hxx: added javadoc comments for class 
      instance methods, and changed the access of setSolution() from
      public to protected.

    * source/inc/numeric/nlpnewton.hxx: made the implementation class to a 
      friend of the public class to have access to setSolution().

2007-03-25  Kohei Yoshida  <kyoshida@novell.com>

    This change is to remove dependency on boost::shared_ptr so that the 
    non-linear optimizer can be independently compiled without dependency
    on the boost library.

    * source/inc/nlpbuilder.hxx:
    * source/ui/nlpbuilder.cxx: modified NlpModelBuilder class so that this 
      class now takes an external pointer to CellFuncObj instead of 
      instantiating one itself.

    * source/numeric/nlpqnewton.cxx:
    * source/inc/numeric/nlpmodel.hxx:
    * source/numeric/nlpmodel.cxx:
    * source/inc/numeric/diff.hxx:
    * source/numeric/diff.cxx: pass raw pointers to BaseFuncObj instead
      of wrapping them inside shared_ptr.

    * source/inc/numeric/funcobj.hxx: fixed javadoc format.

    * source/ui/solvemodel.cxx: SolveModel class now manages the lifecycle
      of CellFuncObj, which was previously managed via shared_ptr.

    * workben/optimizer/nlp_skel/main.cxx:
    * workben/optimizer/nlp_skel/Makefile
    * workben/optimizer/nlp_skel/myfunctor.cxx:
    * workben/optimizer/nlp_skel/myfunctor.hxx:
    * workben/optimizer/nlp_skel/myoptimizer.cxx: an example function object
      class added, and the optimizer now has some fake optimization code.

2007-03-21  Kohei Yoshida  <kyoshida@novell.com>

    * source/inc/numeric/exception.hxx:
    * source/numeric/exception.cxx (UnboundedException) : added.

    * source/inc/numeric/nlpmodel.hxx:
    * source/numeric/nlpmodel.cxx: added bounded variable support for Jorma's
      direct optimizer integration, cleaned up header & added javadoc 
      comment.

    * source/numeric/nlpqnewton.cxx: made mods to adopt nlp::Model change.

    * workben/optimizer/nlp_skel/Makefile: added exception.o to the mix of
      dependent objects.

2007-03-20  Kohei Yoshida  <kyoshida@novell.com>

    * source/inc/numeric/cellfuncobj.hxx:
    * source/numeric/cellfuncobj.cxx (CellFuncObj): removed test() method,
    added setVar(), setVars(), and eval() methods.

    * source/inc/numeric/matrix.hxx: added parameter names to operator().
    * source/numeric/matrix.cxx:

    * source/inc/numeric/nlpbase.hxx: 
    * source/numeric/nlpbase.cxx:
    * source/inc/numeric/nlpmodel.hxx:
    * source/numeric/nlpmodel.cxx:
    * source/numeric/nlpqnewton.cxx: removed dependency on Matrix class to
    make these classes easier to instantiate outside of scsolver.

    * source/inc/numeric/suppl.hxx: removed.

    * source/tool/global.cxx: moved from source/ui/global.cxx.
    * source/inc/tool/global.hxx: moved from source/inc/global.hxx.
    * source/tool/makefile.mk: added global.obj.
    * source/ui/makefile.mk: removed global.obj.
    
    * *.hxx; *.cxx: replaced #include <...> with #include "..." for headers
    originating from within scsolver module, to distinguish them from system
    headers.

    * workben/optimizer/nlp_skel/*: added skeleton code as part of ongoing 
    independent optimizer developement framework.

2007-03-13  Kohei Yoshida  <kyoshida@novell.com>

    * source/*/*.[ch]xx: removed opres namespace because use of this namespace
    was probably not a good idea.

    * source/inc/numeric/*funcobj.hxx:
    * source/numeric/cellfuncobj.cxx:
    * source/numeric/diff.cxx:
    * source/numeric/nlpqnewton.cxx: added setVar(), setVars(), and eval() 
    member functions to BaseFuncObj and CellFuncObj classes to separate 
    variable update and function evaluation.  This is needed for Jorma Kuha's
    direct optimizer which updates only changed variable(s) in each iteration.

2007-01-08  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/optiondlg.hxx:
	* source/ui/optiondlg.cxx: added two new check boxes for integer and 
	positive value constraints.

	* source/ui/scsolver.hrc:
	* source/ui/scsolver.src: added two new strings within Options dialog.

2006-12-18  Kohei Yoshida  <kohei.yoshida@gmail.com>

	Merge from 2.0.4 branch

2006-12-03  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/numeric/lpmodel.hxx:
	* source/numeric/lpmodel.cxx:
	* source/inc/option.hxx:
	* source/ui/option.cxx:
	* source/numeric/lpsolve.cxx: added internal bits for enabling integer 
	constraints on decision variables.  This is not enabled in the UI yet, but
	eventually will show up in the Options dialog.
	
	* source/tool/timer.cxx: removed #include <stdio.h>.

	* source/ui/basedlg.cxx: added extra checks for NULL widget to prevent
	application crash on exit when trying to unregister a NULL-pointer 
	listener.

	* source/ui/dialog.cxx: (finally) fixed a rather serious typo here, which
	was causing the whole soffice.bin process to segfault on exit every time
	the Solver dialog is invoked.  I wonder why this problem did not surface
	before....
	
	* source/ui/solvemodel.cxx: added bits for integer constraints & localized
	the standard exception message.

2006-12-01  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* scsolver/source/ui/scsolver.src: added German strings (contributed from
	KAMI).

2006-11-29  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* scsolver/source/inc/listener.hxx: removed debug output.
	* scsolver/source/ui/basedlg.cxx: DEBUG -> SCSOLVER_DEBUG & removed debug
	output.
	* scsolver/source/ui/optiondlg.cxx: removed unused parameter & l10n work.
	* scsolver/source/ui/scsolver.hrc: added new string IDs.
	* scsolver/source/ui/scsolver.src: added new string items.
	* scsolver/source/ui/solvemodel.cxx: removed 'static' keyword from typedef
	of cell_address_t which caused the build to fail using older versions of 
	gcc, safer and more automatic way of re-enabling cell updates after it's 
	been turned off (parseConstraint), and some l10n work.

2006-11-21  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/ui/listener.cxx (ConstEditBtnListener::actionPerformed): show the
	constraint dialog before populating it with initial values, because the 
	combo box seems to forget the value when its initial value is given before
	the dialog is realized.

2006-11-21  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/ui/dialog.hxx
	* source/inc/dialog.cxx (updateWidgets): added.

	* source/inc/global.hxx: added SCSOLVER_DEBUG define and removed unused
	global functions.

	* source/ui/lpbuilder.hxx
	* source/inc/lpbuilder.cxx: made constraint parsing more flexible so that
	even when the LHS value is a value instead of a cell reference it would
	parse correctly.

	* source/numeric/lpsolve.cxx: cleaned up debug output calls.  iostream
	seems broken when used with stlports.

	* source/service/service.cxx: cleaned up debug output calls.

	* source/ui/basedlg.cxx: extra check for NULL-ness.
	
	* source/ui/global.cxx: replaced dysfunctional cout calls with printf
	calls.

	* source/ui/listener.cxx: fixed a weird behavior when the user cancels the
	range selection mode.  also fixed one crasher bug when the Change or
	Delete button is pressed when nothing in the constraint list box is 
	highlighted.

	* source/ui/solvemodel.cxx: fixed constraint parsing error when constant
	term is present in either side of the constraint formula.

2006-11-11  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/*/basedlg.?xx:
	* source/*/dialog.?xx:
	* source/*/msgdlg.?xx:
	* source/*/optiondlg.?xx: added pure virtual function close() to
	BaseDialog and their implementations in the derived classes.

	* source/ui/listener.cxx (CloseBtnListener): switched to using
	close() instead of setVisible(false) for closing action.

2006-11-09  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/*/baselistener.?xx: TopWindowListener and 
	SimpleActionObject classes added.

	* source/*/dialog.?xx: added listener to handle window closing
	event to the main and constraint dialogs in order to handle 
	closing by clicking the close button in the title bar or hitting
	the escape key.

	* source/*/optiondlg.?xx: added listener to handle window closing
	event.  Refactored code to hide private member variables.

	* source/*/basedlg.?xx (registerListener, unregisterListener): 
	added to handle (un)registering of TopWindowListener instances.

	* source/ui/xcalc.cxx: put some experimental code to add a new 
	menu item via UNO added but turned it off by default.

2006-08-19  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* prj/build.lst: 
	* util/makefile.mk: added tool subdirectory.

	* source/inc/tool/timer.hxx:
	* source/tool/timer.cxx: Timer class added.

	* source/inc/basedlg.hxx:
	* source/ui/basedlg.cxx (addCheckBox): added.

	* source/inc/baselistener.hxx:
	* source/ui/baselistener.cxx: modified ActionObject and ActionListener to 
	eliminate slicing problem in derived classes.

	* source/inc/listener.hxx:
	* source/ui/listener.cxx: fixed unused parameter warnings and added listener
	to the Option button.

	* source/numeric/lpsolve.cxx:
	* source/inc/numeric/lpbase.hxx:
	* source/numeric/lpbase.cxx:
	* source/inc/numeric/exception.hxx:
	* source/numeric/exception.cxx: moved exception classes from lpbase.?xx 
	into their own source files.

	* source/inc/option.hxx:
	* source/ui/option.cxx: added model type option.

	* source/inc/optiondlg.hxx:
	* source/ui/optiondlg.cxx: added check box for model type option.

	* source/numeric/makefile.mk: whitespace -> tab for indenting.

	* source/numeric/nlpqnewton.cxx: set the maximum iteration value and the
	maximum duration to prevent infinite loops (values hard-coded for now).

	* source/ui/scsolver.hrc:
	* source/ui/scsolver.src: added more strings for error message dialogs.

	* source/ui/solvemodel.cxx (solve): use the option setting to differentiate
	LP-solving from NLP-solving.

2006-08-03  Tor Lillqvist  <tml@novell.com>

	* source/inc/solvemodel.hxx
	* source/inc/unohelper.hxx
	* source/ui/unohelper.cxx: Remove extra CRs.

2006-08-02  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/numeric/nlpqnewton.cxx: slightly more code cleanup.

2006-08-02  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/numeric/nlpqnewton.cxx: moved method definitions into class declaration,
	plus some code cleanup.

2006-08-02  Tor Lillqvist  <tml@novell.com>

	* source/numeric/makefile.mk
	* source/service/makefile.mk
	* source/ui/makefile.mk
	* util/makefile.mk: Set EXTERNAL_WARNINGS_NOT_ERRORS to TRUE.

2006-08-01  Tor Lillqvist  <tml@novell.com>

	* source/numeric/diff.cxx (Tm): Remove unused variable.

2006-07-30  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* docs/class_diagram.odg: modified to reflect latest codebase.

	* idl/org/openoffice/sc/solver/makefile.mk: added.

	* source/inc/lpbuilder.hxx: header cleanup.

	* source/inc/nlpbuilder.hxx:
	* source/numeric/nlpbuilder.cxx: added.

	* source/inc/solvemodel.hxx (SolveModel): edited javadoc comment.

	* source/inc/numeric/cellfuncobj.hxx:
	* source/numeric/cellfunc.obj.cxx: added.

	* source/inc/numeric/funcobj.hxx (BaseFuncObj): edited javadoc comment.

	* source/inc/numeric/nlpbase.hxx:
	* source/inc/numeric/nlpbase.cxx: header cleanup & moved implementation
	into its own class.

	* source/inc/numeric/nlpmodel.hxx:
	* source/numeric/nlpmodel.cxx:
	* source/numeric/nlpqnewton.cxx (pushVar, getVars): renamed.

	* source/numeric/makefile.mk: removed diff_test.obj and added cellfunc.obj.

	* source/numeric/nlp_test.cxx: removed.

	* source/ui/makefile.mk: spaces -> tabs.

	* source/ui/solvemodel.cxx: added hook for solving NLP models & made inline
	some method definitions of implementation class.

	* workben/Makefile: modified to make compilation of nlptest easier.

	* workben/nlptest.cxx: added.

2006-07-26  Tor Lillqvist  <tml@novell.com>

	* prj/d.lst: DLLs are in bin, not lib.

2006-07-10  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/option.hxx,
	* source/inc/optiondlg.hxx,
	* source/ui/option.cxx,
	* source/ui/optiondlg.cxx: added.

	* source/inc/basedlg.hxx: modified javadoc comments.

	* source/inc/baselistener.hxx,
	* source/ui/baselistener.cxx (ActionObject, ActionListener): modified
	for general purpose use.

	* source/inc/dialog.hxx,
	* source/ui/dialog.cxx (SolverDialog): bits for OptionDialog added.

	* source/inc/listener.hxx,
	* source/ui/listener.cxx (OptionBtnListener): added.  some code cleanup.

	* source/inc/solver.hxx,
	* source/service/service.cxx: pointer to OptionData added.

	* source/numeric/lpsolve.cxx: added stuff for positive variable setting.
    
	* source/ui/makefile.mk: new object files added.
	* source/ui/solvemodel.cxx: query the options settings and set the positive
	non-positive constraint to the model.

2006-07-01  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/unoglobal.hxx,
	* source/ui/unoglobal.cxx (RuntimeError): refactored.

	* source/numeric/makefile.mk: removed lpsimplex.obj.

	* source/ui/scsolver.hrc,
	* source/ui/scsolver.src: added a new string, and fixed
	a typo.

	* source/ui/solvemodel.cxx (CellGemometriesDiffer): removed.

2006-06-24  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/solver.hxx,
	* source/service/service.cxx,
	* source/inc/basedlg.hxx,
	* source/ui/basedlg.cxx: changed return type of getResMgr(), and added 
	getResStr() method for easy retrieval of localized string.

	* source/ui/dialog.cxx,
	* source/ui/scsolver.hrc,
	* source/ui/scsolver.src: localized dialog strings.

2006-06-20  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/xcalc.hxx,
	* source/ui/xcalc.cxx (disableCellUpdates, enableCellUpdates): added.

	* source/service/service.cxx (solveModel): removed unused using statement.

	* source/ui/solvemodel.cxx (parseConstraints, lcl_isNumeric): disabling and
	enabling of cell updates before and after the model transform.  Slightly better
	way of detecting a numerical String whose value is 0.

2006-06-15  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* prj/build.lst: added missing dependencies to fix build failure.

	* prj/d.lst: fixed typos that prevented resource files from being delivered.

	* source/inc/lpbuilder.hxx:
	* source/ui/lpbuilder.cxx (ConstraintAddress): encapsulated data members, and
	added some new members to handle a numerical RHS value directly given in the
	constraint dialog, instead of requiring it to be always a cell address.

	* source/inc/unoglobal.hxx (getMessage): removed virtual keyword.

	* source/service/service.cxx (solve): added try-catch block to prevent unlikely
	crash.

	* source/ui/solvemodel.cxx: made CellGeometriesDiffer exception class localizable.
	properly handle cases where the RHS value is numerical.

2006-06-13  Michael Meeks  <michael.meeks@novell.com>

	* source/inc/unoglobal.hxx: define ascii_i18n to
	help markup.

	* source/service/service.cxx (setLocale, getLocale),
	* source/inc/solver.hxx: impl. XLocalizable

	* source/service/service.cxx (initLocale, getResMgr): impl.

2006-06-14  Kohei Yoshida  <kohei.yoshida@gmail.com>
	
	* source/inc/unoglobal.hxx:
	* source/ui/unoglobal.cxx: added localizable RuntimError class.

	* source/inc/numeric/lpmodel.hxx:
	* source/numeric/lpmodel.cxx: added two new methods that return the number of 
	constraints and decision variables, respectively.  Renamed getEqualityByRowId
	to getEquality for ease of typing.

	* source/numeric/lpsimplex.cxx:
	* source/numeric/lpuno.cxx: affected by renaming of lp::Modell::getEquality().

	* source/numeric/lpsolve.cxx: implemented solve().

	* source/ui/lpbuilder.cxx: disabled stripping of zero constraint rows and 
	columns, since they seem to do more harm than good.

	* source/ui/solvemodel.cxx: switched to LpSolve as the default LP optimizer.

	* util/makefile.mk: added linker flag for linking to lpsolve.

	* workben/addon_pkg/Makefile_build: modified compiler flags, and changed 
	location of liblpsolve55.a.

2006-06-06  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* docs/README.txt: removed old content, added directions for building separate
	UNO packages.

	* source/numeric/lpuno.cxx (UnoAlgorithmImpl::solve): added catch block to
	catch potential RuntimeException coming from UNO algorithm component.

	* workben/external/lpsolve_uno/lpsolve_uno.cxx (LpSolveImpl::solve): fixed
	mis-calculation of model geometry, added exception throwing blocks when 
	a vector is accessed out-of-range (hopefully never happens again), and when
	a solution is not found.

2006-05-30  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/numeric/lpsolve.hxx
	* source/numeric/lpsolve.cxx: added new files for lp_solve front-end.

	* source/inc/xcalc.hxx: edited comment for class CalcInterface.

	* source/inc/numeric/lpuno.hxx
	* source/numeric/lpuno.cxx: added implementation.  These files are only used 
	for the separate scsolver UNO package for the time being.

	* source/numeric/makefile.mk: added entry for lpsolve.obj and removed lpuno.obj.

	* source/ui/solvemodel.cxx: made inclusion of lpuno.hxx header conditional.
	Added getLpAlgorithm() method.

	* workben/*_test.cxx: modified test cases.

	* workben/addon_pkg/Makefile_build: added IDL files and changed var names.

2006-05-25  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/numeric/lpuno.hxx:
	* source/numeric/lpuno.cxx: added new files for external UNO algorithm(s).

	* source/inc/numeric/lpmodel.hxx:
	* source/numeric/lpmodel.cxx: 
	* source/numeric/lpsimplex.cxx: solve(), getSolution() and setSolution removed
	from the model class.  So, instead of the model class taking an algorithm object 
	to find a solution, we now set the model object to the algorithm object, then 
	have the algorithm object find a solution.  It's simpler this way, and is 
	consistent with the way the UNO models work.

	* source/ui/solvemodel.cxx: altered code due to the above change.
	
2006-05-22  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* idl/org/openoffice/sc/solver/XLpAlgorithm.idl: added getVar(s) methods.

	* workben/external/lpsolve_uno/lpsolve_uno.?xx: added new variable to hold
	decision variables locally, added getVar & getVars methods.

2006-05-21  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* idl/org/openoffice/sc/solver/Equality.idl: removed '_THAN_' from two enum 
	elements to make them shorter (and easider to type).

	* idl/org/openoffice/sc/solver/XLpAlgorithm.idl: removed run().

	* idl/org/openoffice/sc/solver/XLpModel.idl: added set/getEquality methods.

	* workben/external/lpsolve_uno/Makefile: renamed TestModel -> LpModel.

	* workben/external/lpsolve_uno/lpsolve_uno.?xx: added code to map model's 
	properties passed via UNO to lp_solve's.  Removed demo() and run();

	* workben/external/lpsolve_uno/testmodel.?xx: renamed to lpmodel_uno.?xx.
	
	* workben/external/lpsolve_uno/TestModel.idl: renamed to LpModel.idl.

2006-05-17  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/solver.hxx: changed the service name of the main Solver component to 
	match the rest of the entities under org.openoffice.sc.solver module namespace.
	
	* source/ui/dialog.cxx: (finally) disabled the Options button for now.
	
	* workben/external/lpsolve_uno/*: added LpSolve.idl, TestModel.idl, demo.cxx,
	testmodel.?xx, and removed XLpAlgorithm.idl.  The TestModel service is used only 
	to test lp_solve connectivity via UNO framework.
	
	* workben/external/lpsolve_uno/Makefile: quite a bit of reorganization.
	
	* workben/external/lpsolve_uno/lpsolve_uno.?xx: added new methods and a structure
	to hold private data members.
	
	* idl/org/openoffice/sc/solver/*.idl: added new IDL files (Bound.idl, Equality.idl,
        Goal.idl, XLpAlgorithm.idl and XLpModel.idl).

2006-05-05  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* workben/external/lpsolve_uno/*: initial upload of source files for exporting
	lp_solve library as UNO service.  Note that the source files of lp_solve library
	are not included.

2006-04-27  Michael Meeks  <michael.meeks@novell.com>

	* source/ui/scsolver.hrc, source/ui/scsolver.src: add
	dummy strings for translation.
	
	* prj/d.lst, source/ui/makefile.mk, util/makefile.mk:
	compile & install resource file.

2006-04-23  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/numeric/lpbase.hxx,
	* source/numeric/lpbase.cxx: split the BaseAlgorithm class into envelope
	and implementation classes, added getCanonicalModel and setCanonicalSolution
	to encapsulate removal of constant equivalent variables.

	* source/inc/numeric/lpmodel.hxx,
	* source/numeric/lpmodel.cxx: switched from map to vector for storing variable
	ranges, and made necesssary changes due to this switch.  Consolidated delete*
	methods into single deleteVariables() method.

	* source/inc/numeric/lpsimplex.hxx,
	* source/numeric/lpsimplex.cxx: added throw() to destructors.  Made changes
	to use the *Canonical* methods of BaseAlgorithm.  Removed old code.

	* source/numeric/matrix.cxx: removed unused local variable.

2006-04-04  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/numeric/lpsimplex.cxx (queryEnteringNBVar): Added new code to 
	check for constant equivalent boundary condition, without which we may
	reach an "optimum" solution only to realize that that solution is not
	really feasible.  Also did some trivial code cleanup.

	* source/numeric/lpsimplex.cxx (buildInitialVars): Switched to using a
	temporary model instead of an original one.  The temporary model has
	additional constraints for slack variables which the original model
	lacks.

2006-04-03  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/global.hxx (toVector): new function added.

	* source/inc/numeric/lpmodel.hxx
	* source/numeric/lpmodel.cxx: changed argument types of several variable
	boundary related functions from unsigned long to size_t.

	* source/inc/numeric/type.hxx: added javadoc comments to 2 enums.

	* source/numeric/lpsimplex.cxx: removed unused header include.  Did a
	major rewrite of the initial solution search algorithm for bounded
	revised simplex method (BoundedRevisedSimplexImpl).  Extracted iteration
	variable initialization part into its own method to make it easier to
	follow.

2006-03-26  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/numeric/lpsimplex.cxx: worked on fixing initial solution 
	search algorithm, and did some code cleanup.  Moved two structs inside
	BoundedRevisedSimplexImpl class since they are only used in that class.

2006-03-16  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/numeric/lpmodel.hxx
	* source/numeric/lpmodel.cxx: added a bunch of new methods to 
	lp::Model to deal with manipulation of temporary model object during
	solver run.

	* source/numeric/lpsimplex.cxx: added pre- and post-run process
	routines to reduce the size of temporary model object in order to 
	improve the chance of finding a solution.  Not sure whether this is
	truly effective.

	* workben/Makefile
	* workben/addon_pkg/Makefile_build: changed CPP to CXX.

	* workben/simplex_test.cxx: modified test case.

2006-02-16  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/numeric/lpsimplex.cxx: fixed incorrect way to access element
	in the first column of RHS matrix.  This error caused the two-phase 
	search to go into an infinite loop.

2006-02-15  Tor Lillqvist  <tml@novell.com>

	Enable building of scsolver with MSVC7.1:
	
	* source/inc/baselistener.hxx: Include cppu/macros.hxx to get
	SAL_CALL definition.

	* source/inc/baselistener.hxx
	* source/inc/listener.hxx: Add SAL_CALL to those methods which
	override methods that have the SAL_CALL decoration.

	* source/numeric/matrix.cxx: No #warning in MSVC. Use #warning
	only with gcc.

	* source/numeric/nlpqnewton.cxx: Use ::sqrt() instead of
	std::sqrt() with MSVC, where std::sqrt() causes compilation errors
	related to the complex sqrt() functions in STL.

2006-02-13  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/numeric/lpsimplex.hxx:
	* source/numeric/lpsimplex.cxx: added a new method to disable
	two-phase intial search to prevent nested infinite two-phase
	search loop.

	* workben/simplex_test.cxx: minor tweak.

	* workben/addon_pkg/Makefile_build: changed variable names.


2006-02-09  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/inc/numeric/type.hxx: added descriptions for
	Equality enum.

	* source/numeric/lpmodel.cxx: added function comment for
	Model::getCostVector().

	* source/numeric/lpsimplex.cxx: modified to use temporary
	model object instead of the original one.  Also added new
	function (convertVarRange) to convert variable ranges into 
	constraint matrix so that the algirithm can make use of 
	the variable ranges which were previously just ignored
	(note: this function is not totally done yet!)


2006-01-30  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/numeric/*_test.cxx: moved to workben.

	* source/numeric/makefile.mk: declaration of TESTFILES
	removed.
	
	* source/inc/numeric/lpmodel.hxx:
	* source/numeric/lpmodel.cxx: added setCostVector() method
	for settings multiple cost variables all at once.

	* workben/*_test.cxx: moved from source/numeric.

	* workben/Makefile: initial version added.
	
	* workben/addon_pkg/Makefile: removed unused DFLAG 
	variable.  Removed the copy source tree bit as it was
	suboptimal.
	
	* workben/addon_pkg/Makefile_build: modified BASEDIR to
	point to the original source directory.
	
	* workben/matrix_test.cxx: replaced setValue() calls
	with operator().
	
	* workben/simplex_test.cxx: worked on making a yet unsolvable
	linear model from Ludovic.


2006-01-28  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* workben/addon_pkg: added new directory and files
	underneath it for building a separate scsolver package.


2006-01-16  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* matrix.[ch]xx: added new method resize() to resize
	matrix without boost's resize call.  boost 1.30.2 doesn't 
	preserve element values when resizing.
	
	* lpbuilder.[ch]xx: added new method to set initial 
	constraint matrix size.
	
	* source/ui/solvemodel.cxx: call to set initial 
	constraint matrix size.
	
	* source/ui/xcalc.cxx (getCellRangeAddress): set #ifdef
	DEBUG block.


2006-01-13  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/numeric/matrix.cxx: reimplemented boost's
	string::replace_first() function with std::string
	methods only.


2006-01-11  Kohei Yoshida  <kohei.yoshida@gmail.com>

	* source/numeric/*.cxx: replaced all occurrences of
	matrix's get/setValue calls with operator().

	* source/inc/matrix.hxx: removed get/setValue public 
	methods due to redundancy.
	
	* source/numeric/matrix.cxx: fixed return type of 
	MatrixImpl::getValue() to avoid returning reference
	to temporary.


2006-01-09  Michael Meeks  <michael.meeks@novell.com>

	* source/service/*.xcu: remove - obsolete.

	* source/ui/solver.cxx: remove, now
	source/service/service.cxx.

	* source/numeric/matrix.cxx: re-work boost / stl bits
	a little.

	* */makefile.mk: add build bits.

	* *.cxx: s/assert/OSL_ASSERT/g

	* service.cxx: switch to XExecutableDialog instead of
	more complex custom XSolver interface.

