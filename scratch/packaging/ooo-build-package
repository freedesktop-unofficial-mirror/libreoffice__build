#!/usr/bin/perl
    eval 'exec /usr/bin/perl -S $0 ${1+"$@"}'
	if $running_under_some_shell;
#!/usr/bin/perl

use strict;
use File::Copy;
use File::Temp qw/ tempfile tempdir /;

sub show_error($)
{
    my ($msg) = @_;
    
    system("xterm -hold -T \"ooo-build-package error\" -bg IndianRed1 -e /bin/sh -c \"echo $msg\"");
}

sub show_warning($)
{
    my ($msg) = @_;
    
    system("xterm -hold -T \"ooo-build-package warning\" -bg PaleGreen -e /bin/sh -c \"echo $msg\" &");
}

sub run_script_remote($$)
{
    my ($host, $script) = @_;
    my $pid;

    #locate the script
    $pid = open (WHICH, "which $script |");
    die "Can't start the command \"which $script\n" unless (defined $pid);
    while (my $line = <WHICH>) {
        chomp $line;
	$script = $line if $line =~ /$script$/;
    }
    close (WHICH);

    my $script_name=$script;
    $script_name =~ s/^.*\///;
    
    # create a temporary directory on the remote machine
    my $remote_tempdir;
    $pid = open (MKTEMP, "ssh -t $host mktemp -d /tmp/ooo-build-remote-XXXXXX 2>&1 |");
    die "Can't start remote mktemp\n" unless (defined $pid);
    while (my $line = <MKTEMP>) {
        chomp $line;
        chomp $line;
        chomp $line;
        chomp $line;
        chomp $line;
	$remote_tempdir = "$line" if $line =~ /\/tmp\/ooo-build-remote-/;
    }
    close (MKTEMP);
    die "Can't create remote tempdir\n" unless ( defined $remote_tempdir );

    # upload the script to the remote tempdir
    system("scp $script $host:$remote_tempdir") &&
	die "Can't upload $script to $host:$remote_tempdir\n";

    # finally start the script
    print "aaaaaaaaaaaaaaaa\n";
    $remote_tempdir =~ s/\//\\\//g;
#    $remote_tempdir = "/aaaa/bbbb";
    print "remote_tempdir=$remote_tempdir\n";
    print "remote_tempdir=|$remote_tempdir|\n";
    print ("script_name=$script_name\n");
    print ("x=$remote_tempdir/$script_name\n");
    print "y=$script_name$remote_tempdir/\n";
    print ("system (\"ssh -t $host $remote_tempdir/" , "$script_name\"\n");
    print ("system ssh -t $host $remote_tempdir$script_name\n");
    print "bbbbbbbbbbbbbbbb\n";
    system ("ssh -t $host $remote_tempdir\/$script_name") &&
	die "$host:$remote_tempdir/$script failed\n";

    # cleanup the remote tempdir
    system ("ssh -t $host rm -rf $remote_tempdir") &&
	die "Error: rm -rf on $remote_tempdir failed\n";
}

# run_script_remote("storm.suse.cz", "/home/pmladek/bin/test.sh");
