** Misc. tasks that need doing **

Michael's bits
	+ more alpha re-factoring work ...
		+ finish AAA work
		+ ensure QueryDesign icons get through ...
		+ customize-buttons _very_ slow ...
		+ re-rendering flicker, we have a black b/g somehow.
		+ toolbox re-sizing flash/bang on tear-offs.
	+ Investigate a full documentation re-build with our icons
	+ Documentation
		+ png import / render inside xmlhelp
		+ mapping / clobbering the icons in pictures.jar
	+ Stop bug buddy screwing people ...
	+ Investigate full fontconfig speedups
		+ are we still loading stuff from the OO.o font cache?
		+ if so can we bin that; grok ascent/descent stuff.
	    	+ Check our pspfontcache isn't growing [ #9969 ? ]
			- pwrt. PDF printing & fontconfig bits ...
	+ Poke at #blenderchat to co-opt clip-art producing artists ?
	+ check out Philipp's cws_srx645_cups01
	+ more layout research ...
		+ respond to feedback
	+ printing-integration
		+ design a system for VCL/print dialog
		  integration
			+ VCL print dlg is sub-classed ?
			+ knobble it in the right place
			+ examine the Gnome alternative
	+ gtk+ integration
		+ cross toolkit modality (?)
		+ test with autosave dlg popup & NAS output.
	+ Bonobo component
		+ UDK installation + pkgconfig file
			+ need a 'post-setup-install' shell-script that
			  Debian can use as well ...
		+ in-proc Bonobo/Writer component
	+ add a 'clean' rule to bin/Makefile.am
	+ Gnome
		+ finish bonoboui/samples/thread-demo

Martin
	+ Bonobo component
	+ file selector integration
	+ toolbar zoom combo box: add fit to page width etc.

+ Bug fixage
	+ disable-crash-dialog.diff doesn't: somehow the
	  signal setup is really strange / broken in here, needs
	  cleanup / comprehensibility.
	+ not using autofmt.tbl (according to Jody (?))
	+ auto pop-down on toolbar color selector
	+ gccinstlib.pl fixes for stock RH compiler build
		+ overcome libstdc++ versioning nasties
		+ external/gcc3_specific/makefile.mk
		+ need to extract the filenames for the tar.gz
		+ add a --enable-system-compiler flag to configure
	+ LDAP integration
		+ currently done with mozilla: #17187
			+ implementation blows huge chunks
			+ impossible without a heavily patched mozilla
				- removes profile locking (unsafe)
				- mangles the LDAP code (not processing event queue)
				  http://lxr.mozilla.org/seamonkey/source/widget/src/gtk2/nsAppShell.cpp#200
		+ strategy: wait for evolution to provide a sane OOP API
		  do glib integration & wait for that.
	+ make patches/apply.pl understand --dry-run.

+ New features
	+ openoffice-gallery-extra
		+ turn all the dia diagram shapes into clipart.
	+ UI loving
		+ F3 -> Open File (again)
		+ re-arrange default toolbars X#39088
		+ menu shortcut text should be 'Ctrl'+A (not 'Control')
		+ changing font size doesn't scale all widgets
		  eg. toolbar combo boxes & labels, file selector fields.
		+ mark-up all option menus correctly so they don't
		  show icons erroneously
		+ bin LHS padding on menus with no icons or
		  check-boxes, bin RHS padding with no K/B shortuts.
		+ use gnome-print dialogs for printer selection
		+ toolbar icons move on mouse-over; shouldn't.
	+ right click on image -> 'save as'
	+ Evolution as the default entry in Mail/Merge source wizard.
	+ session management
	+ printer authentication dialog
	+ file handling
		+ handle relative paths eg. ooffice ./file.sxi
		+ offer to create non-existant files
	+ no in-page search in help
	+ automatic gconf HTTP proxy fetch
	+ encrypted XL workbook support
	+ regexp searches in Writer.
	+ writer
		+ mouse in margins, should trigger new cursor and row
		  selection mode
		+ mouse above/over table header, should allow col
		  selection + cursor
	+ impress
		+ PPT load/save doesn't save slide names [!]
		+ grouped PPT presentation transitions are munged
		  into many individual interactions on import.
		+ sd/source/ui/dlg/*.cxx: improve time handling, for
		  sub-1 second durations.
		+ slides view -> more aggressive thumbnail caching
		  for speed
		+ drawing view needs LHS panel with scrollable
		  slides-view for navigation
		+ right click -> rename slide -> default
		  focus/selection should be existing slide name.
	+ calc
		+ select rows, right click show/hide
			+ should sensitize dependant on selection
		+ sheet tab font ugly & cramped
		+ insert a row group in oocalc
			+ 2nd from bottom toolbar icon on LHS
			+ expand / collapse button doesn't theme
		+ re-size toolbar color selector
	+ fontconfig, open issues
		+ AA fonts + fontconfig path fixups ...
			+ pFont->m_aEncoding: symbol or not ...
			+ getting ascent / descent info from
			  fontconfig's FT_Face (cf. pangoft2.c)
			+ bin the nDirID nonsense ...
			+ font-collections (?) [ttcs]
			+ looks like we must retain the fontcache for
			  lone afms.
			+ font width issue ...
	+ printing - further work
		+ paper tray selection
		+ paper type selection
	+ make -quickstart useful
		+ get X session lifecycle right
	+ gtk+ mainloop integration possibilities:
		+ move 'getstyle-gnome' in-process
		+ bonobo integration ? ...
		+ mozilla/bonobo integration ? ...
	+ native at-spi bridge avoiding java cf. doc/accessibility.txt
	+ Mono integration
		+ http://udk.openoffice.org/cli/cli-uno.html
		+ pwrt. macro implementation.

+ Upstreaming
	+ recent-files needs de-glib-ifying.
	+ re-write the alpha icon / toolbox rendering bits ...
		+ apparently there should be no problem with VCL's
		  alpha rendering here ...

+ Testing
	+ do we need inst-destdir.diff in 1.1

+ Study
	+ investigate the menu's 'pLogo' code for branding.
	+ do we need vcl/source/window/window.cxx (maPaintTimer)
	  (30ms)? before re-painting the UI ? can we do it 
	  cumulatively for instant response 1st time ?

Crasher reading global.doc:

#0  0x40c59e7d in rtl_freeMemory () from ./libsal.so.3
#1  0x08084c5b in deallocate(void*, (anonymous namespace)::AllocatorTraits const&) ()
#2  0x08084da9 in operator delete[](void*) ()
#3  0x402ef817 in SalBitmap::Destroy() () from ./libvcl645li.so
#4  0x402ee205 in SalBitmap::~SalBitmap() () from ./libvcl645li.so
#5  0x40172945 in ImpBitmap::~ImpBitmap() () from ./libvcl645li.so
#6  0x4013aca6 in Bitmap::ImplReleaseRef() (this=0x49c1ad40)
    at /opt/OpenOffice/OOO_1_1_0/vcl/source/gdi/bitmap.cxx:437
#7  0x4013a167 in ~Bitmap (this=0x49c1ad40)
    at /opt/OpenOffice/OOO_1_1_0/vcl/source/gdi/bitmap.cxx:214
#8  0x40153d59 in BitmapEx::~BitmapEx() () from ./libvcl645li.so
#9  0x47786bcc in GraphicCacheEntry::GraphicObjectWasSwappedOut(GraphicObject const&) () from ./libgo645li.so
#10 0x47787647 in GraphicCache::GraphicObjectWasSwappedOut(GraphicObject const&) () from ./libgo645li.so
#11 0x4777e5b5 in GraphicManager::ImplGraphicObjectWasSwappedOut(GraphicObject const&) () from ./libgo645li.so
#12 0x4777d968 in GraphicObject::SwapOut() () from ./libgo645li.so
#13 0x4777dc48 in GraphicObject::ImplAutoSwapOutHdl(void*) ()
   from ./libgo645li.so
#14 0x4777bd9f in GraphicObject::FireSwapOutRequest() () from ./libgo645li.so
#15 0x46e0159b in SdrGrafObj::ForceSwapOut() const () from ./libsvx645li.so
#16 0x4703930b in SvxMSDffManager::ImportGraphic(SvStream&, SfxItemSet&, Rectangle&, DffObjData const&) const () from ./libsvx645li.so
#17 0x47039dd3 in SvxMSDffManager::ImportObj(SvStream&, void*, Rectangle const*, int) () from ./libsvx645li.so
#18 0x4938207c in SwWW8ImplReader::ImportGraf(SdrTextObj*, SwFrmFmt*) ()
   from ./libsw645li.so
#19 0x493882b9 in SwWW8ImplReader::ReadChar(long, long) () from ./libsw645li.so
#20 0x49387e2e in SwWW8ImplReader::ReadChars(long&, long, long, long) ()
   from ./libsw645li.so
#21 0x49388c44 in SwWW8ImplReader::ReadText(long, long, short) ()
   from ./libsw645li.so
#22 0x4938b501 in SwWW8ImplReader::LoadDoc1(SwPaM&, WW8Glossary*) ()
   from ./libsw645li.so
#23 0x4938c88d in SwWW8ImplReader::LoadDoc(SwPaM&, WW8Glossary*) ()
   from ./libsw645li.so
#24 0x4938ca2e in WW8Reader::Read(SwDoc&, SwPaM&, String const&) ()
   from ./libsw645li.so
#25 0x4927b7fa in SwReader::Read(Reader const&) () from ./libsw645li.so
#26 0x4941a7fe in SwDocShell::ConvertFrom(SfxMedium&) () from ./libsw645li.so
#27 0x473b099b in SfxObjectShell::DoLoad(SfxMedium*) () from ./libsfx645li.so
#28 0x473344fc in LoadEnvironment_Impl::Load(SfxObjectFactory const*) ()
   from ./libsfx645li.so
#29 0x47335e00 in LoadEnvironment_Impl::LoadDataAvailable() ()
   from ./libsfx645li.so
#30 0x47335fb0 in LoadEnvironment_Impl::LoadDataAvailable() ()
   from ./libsfx645li.so
#31 0x47333990 in LoadEnvironment_Impl::Start() () from ./libsfx645li.so
#32 0x47410638 in SfxFrameLoader_Impl::load(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&) () from ./libsfx645li.so
#33 0x47f99c76 in framework::BaseDispatcher::implts_loadIt(com::sun::star::util::URL const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, com::sun::star::uno::Any const&) () from ./libfwk645li.so
#34 0x47fa045e in framework::BlankDispatcher::dispatch(com::sun::star::util::URL const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&) () from ./libfwk645li.so
#35 0x47f95878 in framework::BaseDispatcher::dispatchWithNotification(com::sun::star::util::URL const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, com::sun::star::uno::Reference<com::sun::star::frame::XDispatchResultListener> const&) () from ./libfwk645li.so
#36 0x47fac718 in framework::Desktop::loadComponentFromURL(rtl::OUString const&, rtl::OUString const&, long, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&) () from ./libfwk645li.so
#37 0x08078d45 in desktop::DispatchWatcher::executeDispatchRequests(_STL::vector<desktop::DispatchWatcher::DispatchRequest, _STL::allocator<desktop::DispatchWatcher::DispatchRequest> > const&) ()
#38 0x08070147 in desktop::OfficeIPCThread::ExecuteCmdLineRequests(desktop::ProcessDocumentsRequest&) ()
#39 0x08067ca4 in desktop::Desktop::OpenClients() ()
#40 0x08065dcd in desktop::Desktop::OpenClients_Impl(void*) ()
#41 0x08065db8 in desktop::Desktop::LinkStubOpenClients_Impl(void*, void*) ()
#42 0x40289002 in ImplHandleUserEvent(ImplSVEvent*) () from ./libvcl645li.so
#43 0x402897ed in ImplWindowFrameProc(void*, SalFrame*, unsigned short, void const*) () from ./libvcl645li.so
#44 0x402e9a69 in SalFrameData::HandleClientMessage(XClientMessageEvent*) ()
   from ./libvcl645li.so
#45 0x402ea4b2 in SalFrameData::Dispatch(_XEvent*) () from ./libvcl645li.so
#46 0x4031c290 in SalDisplay::Dispatch(_XEvent*) (this=0x4109bde0, 
    pEvent=0xbfffe8c4)
    at /opt/OpenOffice/OOO_1_1_0/vcl/unx/source/app/saldisp.cxx:2747
#47 0x4031bedc in SalDisplay::Yield(unsigned char) (this=0x4109bde0, 
    bWait=1 '\001')
    at /opt/OpenOffice/OOO_1_1_0/vcl/unx/source/app/saldisp.cxx:2640
#48 0x40315fb6 in DisplayYield (fd=6, pDisplay=0x4109bde0)
    at /opt/OpenOffice/OOO_1_1_0/vcl/unx/source/app/saldisp.cxx:890
#49 0x40314424 in SalXLib::Yield(unsigned char) () from ./libvcl645li.so
#50 0x40320fa4 in SalInstance::Yield(unsigned char) () from ./libvcl645li.so
#51 0x4012a575 in Application::Yield() () from ./libvcl645li.so
#52 0x4012a487 in Application::Execute() () from ./libvcl645li.so
#53 0x08065330 in desktop::Desktop::Main() ()
#54 0x4012f343 in SVMain() () from ./libvcl645li.so
#55 0x40312e28 in main () from ./libvcl645li.so
#56 0x420156a4 in __libc_start_main () from /lib/tls/libc.so.6
