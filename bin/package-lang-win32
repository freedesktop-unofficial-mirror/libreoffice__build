#!/usr/bin/perl -w

#
# A quick hack - hopefully will all go away shortly.
#

sub write_nsis_script($$)
{
    my ($fname, $lang) = @_;
    my $Script;

    open $Script, ">$fname" || die "Can't open '$fname': $!";

    print $Script <<"EOS";

    !include "MUI.nsh"
    Name "Modern UI Test 1.70"
    OutFile "LangPack-$lang.exe"
EOS
    print $Script <<'EOS';

    !insertmacro MUI_PAGE_DIRECTORY
    !insertmacro MUI_UNPAGE_CONFIRM
    !insertmacro MUI_UNPAGE_INSTFILES
    !define MUI_ABORTWARNING
    !insertmacro MUI_LANGUAGE "English"

    Page instfiles
    Section "InstallFiles" SecDummy
	SetOutPath "$INSTDIR"
        File "*.*"; 
EOS
    print $Script <<"EOS";
        WriteRegStr HKCU "Software\\OpenOffice Lang-Pack $lang" "" \$INSTDIR
        WriteUninstaller "\$INSTDIR\\$lang\\Uninstall.exe"
EOS
    print $Script <<'EOS';
    SectionEnd
    Function .onInit
	ReadRegStr $INSTDIR HKCU "Software\OpenOffice.org\UNO\InstallPath" ""
	Push $INSTDIR
	Call GetParent
	Pop $INSTDIR
    FunctionEnd
EOS
    print $Script <<"EOS";
    Section "Uninstall"
	Delete "\$INSTDIR\\$lang\\Uninstall.exe"
	RMDir "\$INSTDIR\\$lang"
	DeleteRegKey /ifempty HKCU "Software\\OpenOffice Lang-Pack $lang"
    SectionEnd
EOS
    print $Script <<'EOS';
    ; input, top of stack  (e.g. C:\Program Files\Poop)
    ; output, top of stack (replaces, with e.g. C:\Program Files)
    ; modifies no other variables.
    ;
    ; Usage:
    ;   Push "C:\Program Files\Directory\Whatever"
    ;   Call GetParent
    ;   Pop $R0
    ;   ; at this point $R0 will equal "C:\Program Files\Directory"

    Function GetParent
 
	Exch $R0
	Push $R1
	Push $R2
	Push $R3
   
	StrCpy $R1 0
	StrLen $R2 $R0
	
      loop:
	    IntOp $R1 $R1 + 1
	    IntCmp $R1 $R2 get 0 get
	    StrCpy $R3 $R0 1 -$R1
EOS
    print $Script <<"EOS";
	    StrCmp \$R3 "\\" get
EOS
    print $Script <<'EOS';
	    Goto loop
   
     get:
	StrCpy $R0 $R0 -$R1
     
	Pop $R3
	Pop $R2
	Pop $R1
	Exch $R0
     
    FunctionEnd
EOS
    close ($Script);
}

print "Sucking env from setup\n";
open ($Vars, ". ./setup ; set|") || die "Can't find setup: $!";
while (<$Vars>) {
    /([^=]*)=(.*)/ || next;
    $setup_vars{$1} = $2;
}
close ($Vars);

$lang_install = $setup_vars{BUILDDIR} . "/lang-install";
`mkdir -p $lang_install`;

write_nsis_script("$lang_install/script", "it");
