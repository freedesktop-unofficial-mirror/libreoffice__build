#!/usr/bin/perl -w

#
#    Source modules that we can feasibly strip
# out immediately.
#
my $system_modules = "%/python %/bitstream_vera_fonts %/freetype " .
		     "%/jpeg %/dictionaries %/libxml2 %/zlib %/moz";
my $binfilter_modules = "%/binfilter";

#
# More advanced topics for future work
#
my $incomplete_modules = "%/curl %/expat %/icu %/libxmlsec %/nas %/neon %/msfontextract " .
    "%/regexp %/rhino %/sablot %/sane %/stlport %/twain %/unixODBC %/x11_extensions";


my $dest;
my $src;
my $help = 0;

for my $arg (@ARGV) {
  if ($arg eq '-h' || $arg eq '--help') {
    $help = 1;
  }
  if (!defined $src) {
    $src = $arg;
    -d "./$src" || die "Src dir name: not in this directory : '$src'";

  } elsif (!defined $dest) {
    $dest = $arg;
  }
}

if (!defined $dest) {
  $dest = '.';
}
if (!defined $src) {
  $help = 1;
}

if ($help) {
  print "src-package: <src-fir-name> [<destination-directory>]\n";
  print "  the src will be packed into several archives\n";
  print"   prefixed by the last path element \n";
  exit 0;
}

$src =~ s/\/*$//;
my $basename = $src;
$basename =~ s/.*\///;

sub do_pack($$)
{
    my $suffix = shift;
    my $args = shift;

    $args =~ s/\%/$src\//;
    print "tar cjf --remove-files $dest/$basename$suffix.tar.bz2 $args";
#    system ("tar cjf --remove-files $dest/$basename$suffix.tar.bz2 $args") && die "Failed to pack $basename$suffix: $!";
    print  "md5sum $dest/$basename$suffix.tar.bz2 > $dest/$basename$suffix.tar.bz2.md5";
#    system ("md5sum $dest/$basename$suffix.tar.bz2 > $dest/$basename$suffix.tar.bz2.md5") && die "Failed to md5sum";
}

do_pack ("-binfilter", $binfilter_modules);
do_pack ("-system", $system_modules);
do_pack ("-core", "-X localise.sdf $src");
do_pack ("-lang", "$src");
print "Done.\n";

