#!/bin/sh

tar_opts=cj

if test "z$1" == "z" -o "z$1" == "z-h" -o "z$1" == "z--help"; then
  echo "src-package: <src-fir-name> [<destination-directory>]";
  echo "  the src will be packed into several archives";
  echo "   prefixed by the last path element";
  exit 0;
fi

src=$1
if test "z$2" == "z"; then
	dest="."
else
	dest=$2
fi

echo "packing source in $src to directory $dest";

if test ! -f "$src/vcl/source/gdi/outdev.cxx"; then
    echo "Doesn't look like an OO.o source tree";
    exit 1;
fi

system_dirs="$src/python $src/bitstream_vera_fonts $src/freetype $src/jpeg";
system_dirs="$system_dirs $src/dictionaries $src/libxml2 $src/zlib $src/moz";

# future system bits:
incomplete_modules="$src/curl $src/expat $src/icu $src/libxmlsec $src/nas $src/neon";
incomplete_modules="$incomplete_modules $src/msfontextract $src/regexp $src/rhino ";
incomplete_modules="$incomplete_modules $src/sablot $src/sane $src/stlport $src/twain";
incomplete_modules="$incomplete_modules $src/unixODBC $src/x11_extensions";

# binfilter ...
tar $tar_opts -f $dest/$src-binfilter.tar.bz2 $src/binfilter || exit 1;
rm -Rf $src/binfilter || exit 1;

# system
tar $tar_opts -f $dest/$src-system.tar.bz2 $system_dirs || exit 1;
rm -Rf $system_dirs || exit 1;

# lang
find $src -name localize.sdf > localize.lst || exit 1;
tar $tar_opts -f $dest/$src-lang.tar.bz2 --files-from=localize.lst || exit 1;
cat localize.lst | xargs rm -f || exit 1
rm localize.lst

# core
tar $tar_opts -f $dest/$src-core.tar.bz2 $src || exit 1;
rm -Rf $src

# md5sums ...
for suffix in binfilter system lang core; do
	md5sum $dest/$src-$suffix.tar.bz2 > $dest/$src-$suffix.tar.bz2.md5 || exit 1;
done
