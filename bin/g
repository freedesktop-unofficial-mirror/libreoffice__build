#!/bin/bash
#
# Wrapper for git to handle more subdirs at the same time
#

# no params, no action
if [ "$#" -eq "0" ] ; then
    git
    exit $?
fi

# extra params for some commands, like log
EXTRA=
PAGER=
COMMAND="$1"

case "$COMMAND" in
    apply)
        EXTRA="-p0 --stat --apply --index --ignore-space-change --whitespace=error"
        ;;
    log)
        EXTRA='-1'
        PAGER='--no-pager'
        ;;
esac

FILES=
FILESNUM=0
while shift ; do
    PARAM="$1"
    if [ -z "$PARAM" ] ; then
        #ignore
        :
    elif [ "${PARAM:0:1}" = "-" ] ; then
        FILES[$FILESNUM]="$1"
        FILESNUM=$(($FILESNUM+1))
    else
        if [ "$COMMAND" = "apply" ] ; then
            grep -qs $'^+ *\t' "$1" && {
                echo "Patch '$1' introduces tabs in indentation, aborting."
                echo
                echo "Please fix the patch (something like s/^\(+ *\)\t/\1    /) and try again."
                echo
                exit 1
            }
        fi
        FILES[$FILESNUM]=`readlink -n -f "$1"`
        FILESNUM=$(($FILESNUM+1))
    fi
done

CLONEDIR=`readlink -e $0 | sed 's#/bin/g$#/clone#'`
cd "$CLONEDIR"

# do it!
for DIR in * ; do
    if [ -d "$DIR" -a -d "$DIR"/.git ] ; then
        (
            echo "===== $DIR ====="
            cd $DIR
            case "$COMMAND" in
                apply)
                    for I in * ; do
                        if [ -d "$I" ] ; then
                            EXTRA="$EXTRA --include=$I/*"
                        else
                            EXTRA="$EXTRA --include=$I"
                        fi
                    done
                    ;;
                commit)
                    git status | grep '^nothing to commit' && exit 0
                    ;;
            esac
            git $PAGER "$COMMAND" $EXTRA "${FILES[@]}" || exit $?
        ) || exit $?
    fi
done

# warn
if [ "$COMMAND" = "apply" ] ; then
    echo
    echo "Don't forget to check the status & commit now ;-)"
    echo
fi

# vi:set expandtab:
