#!/bin/sh

#
# See setup for user tweakables.
#
. ./setup

if test "z$WITH_SRC" != "z"; then
	echo "Nothing to do - package build"
	exit 0;
fi

check_tarball()
{
    echo -n "Looking for $1 ... ";
    if test ! -f $1; then
	echo "missing the $1 archive; run './download'"
	exit 1;
    else
	echo "ok"
    fi
}

check_file()
{
    echo -n "Looking for $1 ... ";
    if test ! -f $1; then
	echo "missing required archive; run ./download'";
	exit 1;
    else
	echo "ok"
    fi
}

mkdir -p $SRCDIR
cd $SRCDIR

echo "Checking for source packages in $SRCDIR";
if test "z$SYSTEM_GCC" = "z"; then
    check_tarball $GCC_TARBALL
    check_tarball $BINUTILS_TARBALL
fi
check_tarball $OOO_TARBALL

mkdir -p $BUILDDIR
cd $BUILDDIR

if test "z$BUILD_WIN32" != "z"; then
    check_file $UNICOWS_SRC
    check_file $DBGINST_SRC
    check_file $ODMA_SRC
fi

if test "z$SYSTEM_GCC" = "z"; then
    # unpack binutils
    cd $BUILDDIR
    echo "Unpacking compiler bits"

    tar $BINUTILS_UNTAR_OPTIONS $SRCDIR/$BINUTILS_TARBALL || exit 1;
    patch -p0 < $BINUTILS_PATCH || exit 1;
    tar $GCC_UNTAR_OPTIONS $SRCDIR/$GCC_TARBALL || exit 1;
fi

echo "Unpacking OO.o build tree - [ go make some tea ] ..."
tar $OOO_UNTAR_OPTIONS $SRCDIR/$OOO_TARBALL || exit 1

# hack for screwed up checkout of m64
if ! test -d $OOBUILDDIR/animations; then
    ln -sf graphics/animations $OOBUILDDIR/animations;
fi

#  copy oowintool into the tree
cp -af $TOOLSDIR/bin/oowintool $OOBUILDDIR/config_office
chmod a+x $OOBUILDDIR/config_office/oowintool

# hack: fix possible packaging problem in 1.1.3
chmod a+x $OOBUILDDIR/icu/convert.sh

# Win32 prerequisites ...
if test "z$BUILD_WIN32" != "z"; then
    # System bits
    tar $OOO_UNTAR_OPTIONS $SRCDIR/$OOO_SYSTEM_TARBALL || exit 1

    # ODMA
    cd $BUILDDIR;
    DEST=$OOBUILDDIR/ucb/source/ucp/odma
    if test ! -f $DEST/ODMA.H; then
	echo -n "Extracting ODMA SDK "
	unzip -o $ODMA_SRC
	TARGET=Odma20.exe
	if test ! -f $TARGET; then
	    echo "failed";
	    exit 1;
	fi
	mkdir -p $DEST
	cd $DEST
	unzip -o $BUILDDIR/$TARGET
	echo "done";
    else
	echo "Already have ODMA SDK";
    fi

    # dbghelp
    cd $BUILDDIR;
    if test ! -f $OOBUILDDIR/external/dbghelp/DbgHelp.Dll; then
	echo -n "Extracting dbghelp "
	cabextract -q $DBGINST_SRC
	TARGET=dbghelp.exe
	if test ! -f $TARGET; then
	    echo "failed";
	    exit 1;
	fi
	unzip -o $TARGET
	echo "done";
    else
	echo "Already have dbghelp";
    fi
    
    # unicows
    cd $BUILDDIR;
    if test ! -f $OOBUILDDIR/external/dbghelp/unicows.dll; then
	echo -n "Extracting unicows "
	cabextract -q $UNICOWS_SRC
	TARGET=unicows.dll
	if test ! -f $TARGET; then
	    echo "failed";
	    exit 1;
	fi
	echo "done";
    else
	echo "Already have unicows";
    fi
fi

if test "z$SYSTEM_GCC" = "z"; then
    if test ! -d "$BUILDDIR/$GCC_VER" ||
	test ! -d "$BUILDDIR/$BINUTILS_VER"; then
        echo "Missing some of the helper source";
        exit 1;
    fi
    
fi

# Construct bits that should be in the up-stream tar.bz2
cd $OOBUILDDIR
CUSTOM_DIR=$OOBUILDDIR/ooo_custom_images
if test -f $SRCDIR/$OOO_CUSTOM_IMAGES; then
    tar xjf $SRCDIR/$OOO_CUSTOM_IMAGES || exit 1;
    mkdir -p $CUSTOM_DIR/crystal || exit 1;
    cd $CUSTOM_DIR/crystal
    unzip $SRCDIR/$KDE_ICONS || exit 1;
fi


