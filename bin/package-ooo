#!/bin/sh

# Based on docs/setup.txt

#
# See setup for user tweakables.
#
. ./setup
. $OOBUILDDIR/*.[sS]et.sh
. ./setup

export LANG='';

echo "Cleaning $OOINSTDIR";
rm -Rf $OOINSTDIR;

echo "Building $OOINSTDIR/ooo-wrapper$BINSUFFIX";
sed -e "s|@OOINSTBASE@|$OOINSTBASE|g
	s|@SYSCONFDIR@|$SYSCONFDIR|g
	s|@BINSUFFIX@|$BINSUFFIX|g
	s|@OOO_BUILDVERSION@|$OOO_BUILDVERSION|g
	s|@OOOINSTALLDIRNAME@|$OOOINSTALLDIRNAME|g
	s|@VENDORNAME@|$VENDORNAME|g" $TOOLSDIR/bin/ooo-wrapper.in \
		>| "$OOBUILDDIR/ooo-wrapper$BINSUFFIX" || exit 1;
mkdir -p $PREFIX/bin

create_simple_wrapper()
{
    cat <<EOT >$2
#!/bin/sh

# Keep in ~sync with ooo-wrapper

SystemInstallDir="$OOINSTBASE"

if [ -n "\$GNOME_DESKTOP_SESSION_ID" -a -d "\$SystemInstallDir/program/resource.gnome" ]; then
    icon_set="gnome"
elif [ -n "\$KDE_FULL_SESSION" -a -d "\$SystemInstallDir/program/resource.kde" ]; then
    icon_set="kde"
fi

if [ -z "\$icon_set" ]; then
    if [ -d "\$SystemInstallDir/program/resource.default" ]; then
	icon_set="default"
    elif [ -d "\$SystemInstallDir/program/resource.kde" ]; then
	icon_set="kde"
    elif [ -d "\$SystemInstallDir/program/resource.gnome" ]; then
	icon_set="gnome"
    else
	icon_set="default"
    fi
fi
    
if [ -d "\$SystemInstallDir/program/resource.\$icon_set" ]; then
    OOO_PREFERRED_RESOURCE_PATH="\$SystemInstallDir/program/resource.\$icon_set"
    export OOO_PREFERRED_RESOURCE_PATH
fi

exec "$1" "\$@"
EOT
    chmod 755 $2
}

# Skip the versioning and linking dance of the wrapper script for Red Hat
if test "z$VENDORNAME" = "zRedHat"; then
	cp -f $OOBUILDDIR/ooo-wrapper$BINSUFFIX $PREFIX/bin/ooffice
	chmod +x $PREFIX/bin/ooffice
	for app in calc draw impress html math writer; do
		ln -sf /usr/bin/ooffice $PREFIX/bin/oo${app}
	done
else
	mkdir -p $MANDIR/man1
	cp -f $OOBUILDDIR/ooo-wrapper$BINSUFFIX $PREFIX/bin
	chmod +x $PREFIX/bin/ooo-wrapper$BINSUFFIX
	for app in calc draw fromtemplate impress html math web writer ffice; do
		ln -sf ooo-wrapper${BINSUFFIX} $PREFIX/bin/oo${app}${BINSUFFIX}
		if test "z$VENDORNAME" = "zNovell" -o "z$VENDORNAME" = "zSUSE" -o "z$VENDORNAME" = "zPLD"; then
			echo ".so man1/openoffice$BINSUFFIX.1" >| $MANDIR/man1/oo${app}$BINSUFFIX.1;
		fi
	done

	mkdir -p $PREFIX/sbin || exit 1;
	create_simple_wrapper $OOINSTBASE/program/spadmin $PREFIX/sbin/oopadmin${BINSUFFIX} || exit 1;
	create_simple_wrapper $OOINSTBASE/program/jvmsetup $PREFIX/sbin/oojvmsetup${BINSUFFIX} || exit 1;
fi

if test "z$VENDORNAME" != "zRedHat"; then
	mkdir -p $MANDIR/man1
	echo "Generating man page ...";
	sed -e "s|@BINSUFFIX@|$BINSUFFIX|g" $TOOLSDIR/man/openoffice.1.in \
		>| "$OOBUILDDIR/openoffice$BINSUFFIX.1" || exit 1;
	cp -f $OOBUILDDIR/openoffice$BINSUFFIX.1 $MANDIR/man1
fi

echo "Building $OOINSTDIR/install-dict";
sed -e "s|@OOINSTBASE@|$OOINSTBASE|g" $TOOLSDIR/bin/install-dict.in >| "$OOBUILDDIR/install-dict" || exit 1;
mkdir -p $OOINSTDIR
cp -f $OOBUILDDIR/install-dict $OOINSTDIR
chmod +x $OOINSTDIR/install-dict

echo "Installing system files ...";
if test "z$VENDORNAME" = "zRedHat" ; then
	# Install .desktop files for Red Hat distributions
	mkdir -p $PREFIX/share/applications
	for i in openoffice-printeradmin openoffice-setup redhat-drawing \
			redhat-math redhat-presentations redhat-word-processor redhat-spreadsheet; do
		cp -f /usr/share/desktop-menu-patches/$i.desktop $PREFIX/share/applications/$i.desktop
		echo "StartupNotify=true" >> $PREFIX/share/applications/$i.desktop
	done

	# Icons are copied into the local install directory from the specfile...
	mkdir -p $PREFIX/share/pixmaps
	cp $TOOLSDIR/desktop/0*.png $PREFIX/share/pixmaps
	cp $TOOLSDIR/desktop/5*.png $PREFIX/share/pixmaps
	cp $TOOLSDIR/desktop/ooo_*.png $PREFIX/share/pixmaps
else
	mkdir -p $OODESTDIR/opt/gnome/share/applications

	cd $TOOLSDIR/desktop
	for file in *.desktop; do
	    sed -e "s|@BINSUFFIX@|$BINSUFFIX|g
		    s|@VERSION@|$VERSION|g" $TOOLSDIR/desktop/$file \
			>| "$OODESTDIR/opt/gnome/share/applications/$file" || exit 1;
	    if test "z$VENDORNAME" = "zNovell" ; then
		echo "OnlyShowIn=GNOME;" >> $file
	    fi
	done

	mkdir -p $OODESTDIR/opt/gnome/share/pixmaps
	cp $TOOLSDIR/desktop/ximian-openoffice-*.png $OODESTDIR/opt/gnome/share/pixmaps
fi

# Disable odk stuff for now
if test "disable" = "this"; then
    echo "Installing the ODK";
    ODK_SRC=$OOBUILDDIR/odk$UPD;
    ODK_INCLUDE=$OOINSTDIR/include
    echo " unzip"; 
    rm -Rf $ODK_SRC
    tar -C $OOBUILDDIR -xzf $OOBUILDDIR/solver/$UPD/$INPATH/bin/odk$UPD.tar.gz;
    echo " setup $OOINSTDIR"; 
    mkdir -p $ODK_INCLUDE
    mkdir -p $OOINSTDIR
    mkdir -p $OOINSTDIR/utils
    mkdir -p $OOINSTDIR/program
    mkdir -p $OOINSTDIR/idl
    mkdir -p $OOINSTDIR/xml
    mkdir -p $OOINSTDIR/share/doc/openoffice$BINSUFFIX
    mkdir -p $PREFIX/lib/pkgconfig
    echo " re-arrange files";
    cp -a $ODK_SRC/include/* $ODK_INCLUDE
    cp -a $ODK_SRC/linux/lib/* $OOINSTDIR/program
    cp -a $ODK_SRC/linux/bin/* $OOINSTDIR/utils
    cp -a $ODK_SRC/idl/* $OOINSTDIR/idl
    cp -a $ODK_SRC/docs/* $OOINSTDIR/share/doc/openoffice$BINSUFFIX
    cp -a $ODK_SRC/examples $OOINSTDIR/share/doc/openoffice$BINSUFFIX
    cp -a $ODK_SRC/xml/* $OOINSTDIR/xml
    echo " create pkgconfig file"; 
    echo "
libdir=$OOINSTBASE/program
includedir=$OOINSTBASE/include
idlinclude=$OOINSTBASE/idl
xmlinclude=$OOINSTBASE/xml
toolsdir=$OOINSTBASE/utils

Name: openoffice$BINSUFFIX
Description: The OpenOffice.org infrastructure
Version: $VERSION
Libs: -L\${libdir} -lprot_uno_uno
Cflags: -I\${includeddir}" > $PREFIX/lib/pkgconfig/openoffice$BINSUFFIX.pc
fi

export DISPLAY=''; # clobber;
echo "Execute native installer ...";
cd $OOBUILDDIR/instsetoo_native/util || exit 1;

# bunch of nasty hacks - requires patched make_installer.pl
BUILD=8825
INSTALL_PATH=/opt/FFInstall

if ! test -f /proc/meminfo; then
    echo "The installer cannot work without javaldx running, which requires /proc to be mounted";
    exit 1;
fi

export OUT='../unxlngi4.pro'
export LOCAL_OUT=$OUT
export LOCAL_COMMON_OUT=$OUT

$PERL -w $SOLARENV/bin/make_installer.pl \
	-f openoffice.lst -l en-US -p OpenOffice \
	-packagelist ../inc_openoffice/unix/packagelist.txt \
	-buildid $BUILD -destdir $OODESTDIR \
	-simple $OOINSTDIR || exit 1;

echo "Done make_installer.pl to '$OOINSTDIR'";

if test "z$RUN_POST_INSTALL_SCRIPTS" = "zyes"; then
    cd $OOINSTDIR/program
    ./pkgchk --shared --quiet
    ./configimport --spool
fi

echo "Cleaning up ...";

# No idea what these files are good for (?)
# they don't appear in the RPM file lists.
rm -Rf $OOINSTDIR/share/uno_packages/cache/*

echo "Done";

cd $TOOLSDIR/bin

echo "Installing extra dictionaries..."

$TOOLSDIR/bin/install-dictionaries $OOINSTDIR || exit 1;

echo "Installing localized help contents..."

$TOOLSDIR/bin/install-help || exit 1;

# move one file from one list of files to a second one
# Params: target_file_list source_file_list file_to_move
mv_file_between_flists()
{
    if grep "^$3\$" $2 >/dev/null 2>&1 ; then
	echo "$3" >>$1
	perl -pi -e "s|^$3$||" $2
    fi
}
# add the directories from the source list of files to the target list of
# file which are used in the target list of files but are missing there
# Params: target_file_list source_file_list
add_used_directories()
{
    sort -u -r $2 | sed -n "s|^%dir \(.*\)\$|s%^\\\\(\1\\\\).*%\\\\1%p|p" >$2.pattern
    sed -n -f $2.pattern $1 | sort -u | sed "s|^|%dir |" >>$1
    rm $2.pattern
}

echo "Moving package file lists..."

if ! test -f $OODESTDIR/gid_Module_Root; then
    echo "Failed to generate package file lists";
    exit 1;
fi

cd $OODESTDIR

# Nasty hack for now...
echo "$OOINSTBASE/dictionary.lst
$OOINSTBASE/install-dict
$OOINSTBASE/program/liblnth680li.so" > gid_Module_Hack

cat gid_Module_Optional_Grfflt \
    gid_Module_Prg_Calc \
    gid_Module_Prg_Math \
    gid_Module_Optional_Javafilter \
    gid_Module_Optional_Testtool \
    gid_Module_Prg_Draw \
    gid_Module_Prg_Wrt \
    gid_Module_Optional_Mailcap \
    gid_Module_Optional_Xsltfiltersamples \
    gid_Module_Prg_Impress \
    gid_Module_Root \
    gid_Module_Hack \
    | sort | uniq \
    > $BUILDDIR/common_list.txt

# sort && uniq suck but eg. gid_Module_Optional_Draw & Impress have substantial overlap

#
# FIXME: lang-packs etc.
#    gid_Module_Optional_Oo_English
#

cd $BUILDDIR

# kde subpackage
rm -f kde_list.txt
mv_file_between_flists kde_list.txt common_list.txt $OOINSTBASE/program/kdefilepicker
mv_file_between_flists kde_list.txt common_list.txt $OOINSTBASE/program/libfps_kde.so
mv_file_between_flists kde_list.txt common_list.txt $OOINSTBASE/program/libvclplug_kde[0-9]*li.so
add_used_directories kde_list.txt common_list.txt

# gnome subpackage
rm -f gnome_list.txt
mv_file_between_flists gnome_list.txt common_list.txt $OOINSTBASE/program/libevoab2.so
mv_file_between_flists gnome_list.txt common_list.txt $OOINSTBASE/program/libfps_gnome.so
mv_file_between_flists gnome_list.txt common_list.txt $OOINSTBASE/program/libvclplug_gtk[0-9]*li.so
add_used_directories gnome_list.txt common_list.txt

echo "Cleaning up lists of files...";
mv -f $OODESTDIR/gid_Module_* $BUILDDIR

cd $BUILDDIR

# move English help to an extra list
# echo "%dir $OOINSTDIR/" >help_en_list.txt
# echo "%dir $OOINSTDIR/help/" >>help_en_list.txt
# grep "$OOINSTDIR/help/en" lang_en_list.txt >>help_en_list.txt
# grep -v "$OOINSTDIR/help/en" lang_en_list.txt >lang_en_list.txt.new
# mv lang_en_list.txt.new lang_en_list.txt

# mark the config files
if test "z$RPM_CONFIG_FILE_TAGS" != "z" ; then
    perl -pi -e "s|^($OOINSTBASE/help/.*\.xsl)\$|$RPM_CONFIG_FILE_TAGS \\1|;" \
	    -e "s|^($OOINSTBASE/help/.*\.css)\$|$RPM_CONFIG_FILE_TAGS \\1|;" \
	    -e "s|^($OOINSTBASE/program/[a-zA-Z0-9]*rc)\$|$RPM_CONFIG_FILE_TAGS \\1|;" \
	    -e "s|^($OOINSTBASE/program/.*\.xsl)\$|$RPM_CONFIG_FILE_TAGS \\1|;" \
	    -e "s|^($OOINSTBASE/share/config/[a-zA-Z0-9]*rc)\$|$RPM_CONFIG_FILE_TAGS \\1|;" \
	    -e "s|^($OOINSTBASE/share/dict/ooo/.*\.lst)\$|$RPM_CONFIG_FILE_TAGS \\1|;" \
	    -e "s|^($OOINSTBASE/share/psprint/.*\.conf)\$|$RPM_CONFIG_FILE_TAGS \\1|;" \
	    -e "s|^($OOINSTBASE/share/psprint/.*\.PS)\$|$RPM_CONFIG_FILE_TAGS \\1|;" \
	    -e "s|^($OOINSTBASE/share/registry/.*\.xcu)\$|$RPM_CONFIG_FILE_TAGS \\1|;" \
	    -e "s|^($OOINSTBASE/share/registry/.*\.properties)\$|$RPM_CONFIG_FILE_TAGS \\1|;" \
	    -e "s|^($OOINSTBASE/share/registry/.*\.xcs)\$|$RPM_CONFIG_FILE_TAGS \\1|;" \
	    -e "s|^($OOINSTBASE/user/config/.*\.so.)\$|$RPM_CONFIG_FILE_TAGS \\1|;" \
	*_list.txt
fi

# Red Hat Post-install cleanup
if test "z$VENDORNAME" = "zRedHat" ; then
	# Fix openoffice/share/kde/net/applnk paths
	perl -pi -e "/^Module gid_Module_Optional_Kde/ .. /^End/ and s|YES|NO|g" $PREFIX/lib/$OOOINSTALLDIRNAME/program/instdb.ins
	perl -pi -e "/^Installation gid_Installation/ .. /^End/ and s|$PREFIX||g" $PREFIX/lib/$OOOINSTALLDIRNAME/program/instdb.ins
	perl -pi -e "/^Directory gid_Dir_Home_Gnome_Apps_Product/ .. /^End/ and s|OpenOffice\.org\ 1\.1\.0|OpenOffice\.org|g" $PREFIX/lib/$OOOINSTALLDIRNAME/program/instdb.ins
	perl -pi -e "/^Directory gid_Dir_Share_Kde_Net_Applnk_Product/ .. /^End/ and s|OpenOffice\.org\ 1\.1\.0|OpenOffice\.org|g" $PREFIX/lib/$OOOINSTALLDIRNAME/program/instdb.ins
	perl -pi -e "/^Directory gid_Dir_Kde_Share_Applnk_Product/ .. /^End/ and s|OpenOffice\.org\ 1\.1\.0|OpenOffice\.org|g" $PREFIX/lib/$OOOINSTALLDIRNAME/program/instdb.ins
	perl -pi -e "/^Procedure gid_Procedure_Kde_Inst/ .. /^End/ and s|OpenOffice\.org\ 1\.1\.0|OpenOffice\.org|g" $PREFIX/lib/$OOOINSTALLDIRNAME/program/instdb.ins
	perl -pi -e "/^Procedure gid_Procedure_Gnome_Install/ .. /^End/ and s|OpenOffice\.org\ 1\.1\.0|OpenOffice\.org|g" $PREFIX/lib/$OOOINSTALLDIRNAME/program/instdb.ins
	perl -pi -e "/^Procedure gid_Procedure_Gnome_Deinstall/ .. /^End/ and s|1\.1\.0||g" $PREFIX/lib/$OOOINSTALLDIRNAME/program/instdb.ins

	## Fix instdb.ins, to *not* install local copies of these
	for entry in Kdeapplnk Kdemimetext Kdeicons Gnome_Apps Gnome_Icons Gnome2_Apps; do
		perl -pi -e "/^File gid_File_Extra_$entry/ .. /^End/ and (\
			s|^\tSize\s+\= .*|\tSize\t\t = 0;\r| or \
			s|^\tArchiveFiles\s+\= .*|\tArchiveFiles\t = 0;\r| or \
			s|^\tArchiveSize\s+\= .*|\tArchiveSize\t = 0;\r| or \
			s|^\tContains\s+\= .*|\tContains\t = ();\r| or \
			s|\t\t\t\t\t\".*|\r|g)" \
			$PREFIX/lib/$OOOINSTALLDIRNAME/program/instdb.ins
	done
fi

echo "Packaging succeeded";
exit 0;

