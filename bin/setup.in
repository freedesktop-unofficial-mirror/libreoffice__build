# ------------------------------------
# This file is generated from setup.in
# ------------------------------------


# The tree layout with WITH_SRC is:
#
#   ooo/ [ pointed to by WITH_SRC ]
#     binutils-2.13
#     gcc-3.0.4
#     j2sdk1.3.1
#     ooo-build-$BUILD_VERSION
#     etc.

BUILD_WIN32='@BUILD_WIN32@'
DISTRO='@DISTRO@'
VENDORNAME='@VENDORNAME@'
WITH_SRC='@WITH_SRC@'
SRCDIR=@SRCDIR@
VERSION='@OOO_VERSION@'
BINSUFFIX='@OOO_BINSUFFIX@'
CVSTAG='@CVSTAG@'
APPLY_DIR='@APPLY_DIR@'
BUILD_NCPUS='@BUILD_NCPUS@'
ENABLE_CCACHE='@ENABLE_CCACHE@'
ENABLE_ICECREAM='@ENABLE_ICECREAM@'
ICECREAM_JOBS='@ICECREAM_JOBS@'
ICECREAM_BINDIR='@ICECREAM_BINDIR@'
OOO_WIDGET_FLAGS='@OOO_WIDGET_FLAGS@'
GNOME_ICONS='@GNOME_ICONS@'
KDE_ICONS='@KDE_ICONS@'
OOO_BUILDVERSION='@OOO_BUILDVERSION@'

# WARNING: The --with-lang= configure option changed, see
# http://blog.janik.cz/archives/permalinks/2004-11-02T20_04_29.html
# e.g.
# LANGS="ALL"      # see solenv/inc/postset.mk
# LANGS="en-US cs"
# LANGS="ALL xy"
LANGS="en-US"

if test "z$BUILD_WIN32" != "z"; then
    CONFIGURE_OPTIONS="--with-lang=\"$LANGS\" --with-use-shell=tcsh \
		       --enable-libart --enable-crashdump=no \
		       --disable-mozilla"

else
    if test "z$CONFIGURE_OPTIONS" = "z"; then
	if [ -s ./setup.configure ]; then
		. ./setup.configure
		echo "Using configure options from the ./setup.configure file";
	else
		CONFIGURE_OPTIONS="--with-system-gcc --with-jdk-home=/usr/lib/SunJava2-1.4.2 \
        			   --with-lang=\"$LANGS\" --enable-libart --enable-libsn --enable-crashdump=no \
				   --with-system-zlib --with-system-freetype --with-system-jpeg \
				   --without-fonts --enable-fontconfig \
				   --with-ant-home=/usr/share/ant --disable-crashdump \
				   --with-system-python --disable-binfilter \
				   --with-system-mozilla \
				   --disable-epm --without-myspell-dicts \
				   --with-system-libxml";
# FIXME:
# --with-db-version=4.2 --with-system-db - when our system packages have java stuff included
	fi
    else
	echo "Using configure options from the environment";
    fi
fi

# build the right native widgets
CONFIGURE_OPTIONS="$CONFIGURE_OPTIONS $OOO_WIDGET_FLAGS"
if test "z$GNOME_ICONS" != "z"; then
    CONFIGURE_OPTIONS="$CONFIGURE_OPTIONS --with-gnome-icons=$SRCDIR/$GNOME_ICONS"
fi
if test "z$KDE_ICONS" != "z"; then
    CONFIGURE_OPTIONS="$CONFIGURE_OPTIONS --with-kde-icons=$SRCDIR/$KDE_ICONS"
fi

ENABLE_BONOBO=@ENABLE_BONOBO@
ENABLE_JAVA=@ENABLE_JAVA@
JDK_HOME=@JDK_HOME@
# Misc. internal
TOOLSDIR='@TOOLSDIR@'
OOBUILDDIR='@OOBUILDDIR@'
SYSTEM_GCC='@SYSTEM_GCC@'
FORCE_GCC33='@FORCE_GCC33@'
# the variable DESTDIR will be unset to do not break build, etc.
# the test allows to source setup twice
test "z$DESTDIR" = "z" || OODESTDIR=$DESTDIR

# clobber bogus env vars. they badly screw things up
unset DESTDIR;
unset CC;
unset CXX;
unset ERROR_FLAGS;
unset MAKE
unset WARN_CFLAGS

# Where to install to
PREFIXBASE=@prefix@
MANDIRBASE=@mandir@
DOCDIRBASE=@docdir@
PREFIX=$OODESTDIR$PREFIXBASE
MANDIR=$OODESTDIR$MANDIRBASE
DOCDIR=$OODESTDIR$DOCDIRBASE
SYSCONFBASE=@sysconfdir@
SYSCONFDIR=$OODESTDIR$SYSCONFBASE
OOINSTBASE=@prefix@/lib/@OOOINSTALLDIRNAME@
OOINSTDIR=$OODESTDIR$OOINSTBASE
OOOINSTALLDIRNAME=@OOOINSTALLDIRNAME@
OOO_BUILD_EXTENSION='@OOO_BUILD_EXTENSION@'
BUILDDIR=@BUILDDIR@
TCSH=/bin/tcsh

# setup paths
PATH="$BUILDDIR/bin:$PATH:$TOOLSDIR/bin"

echo "Hacked out valuable java conditional"
# if test "z$ENABLE_JAVA" = "zyes"; then
#    if test "z$JDK_HOME" != "z"; then
#        CONFIGURE_OPTIONS="$CONFIGURE_OPTIONS --with-jdk-home=$JDK_HOME"
#        PATH="$JDK_HOME:$PATH"
#    else
#        PATH="$BUILDDIR/jdk/bin:$PATH"
#   fi
#else
#    CONFIGURE_OPTIONS="$CONFIGURE_OPTIONS --disable-java"
#fi

CONFIGURE_OPTIONS="$CONFIGURE_OPTIONS $CONFIGURE_EXTRA_OPTIONS"

LD_LIBRARY_PATH="$BUILDDIR/lib:$LD_LIBRARY_PATH"

# gcc speedup
case "$ENABLE_CCACHE/$ENABLE_ICECREAM" in
    "yes/")
        export CC="ccache gcc"
        export CXX="ccache g++"
        ;;

    "/yes")
        export CC="$ICECREAM_BINDIR/gcc"
        export CXX="$ICECREAM_BINDIR/g++"
        ;;

    "yes/yes")
        export CC="ccache $ICECREAM_BINDIR/gcc"
        export CXX="ccache $ICECREAM_BINDIR/g++"
        ;;
esac

if test "z$CCACHE_DIR" = "z" ; then
    CCACHE_DIR=$BUILDDIR/.ccache
fi

# how to mark config files in file lists
if test "z$DISTRO" = "zNLD" -o "z$DISTRO" = "zSUSE" -o "z$VENDORNAME" = "zRedHat"; then
    RPM_CONFIG_FILE_TAGS="%config"
elif test "z$DISTRO" = "zPLD" ; then
    RPM_CONFIG_FILE_TAGS="%config(noreplace) %verify(not md5 size mtime)"
fi

# Tag file lists with language (for RPM)
if test "z$VENDORNAME" = "zRedHat"; then
    RPM_TAG_LANGPACKS=TRUE
fi


# ---------------------------
#   Source / Version setup:
# ---------------------------
GCC_VER=gcc-3.2.2
GCC_TARBALL=gcc-3.2.2.tar.bz2
GCC_UNTAR_OPTIONS=jxf

BINUTILS_VER=binutils-2.13.2.1
BINUTILS_TARBALL=binutils-2.13.2.1.tar.bz2
BINUTILS_UNTAR_OPTIONS=jxf
BINUTILS_PATCH=$TOOLSDIR/patches/ld-2.13.2.1.diff

if test "z$ENABLE_JAVA" = "zyes"; then
    # If the user didn't specify the location of the JDK,
    # use builtin/downloaded one
    if test "z$JDK_HOME" = "z"; then
        JDK_VER=j2sdk1.4.1
        JDK_TARBALL=j2sdk-1.4.1-01-linux-i586-gcc3.2.tar.bz2
        JDK_UNTAR_OPTIONS=jxf
    fi
fi

OOO_SCALED_ICONS_VER=ooo-scaled-icons
OOO_SCALED_ICONS_TARBALL=$OOO_SCALED_ICONS_VER.tar.gz
OOO_SCALED_ICONS_UNTAR_OPTIONS=xzf

OOO_TARBALL="$CVSTAG-core.tar.bz2"
OOO_SYSTEM_TARBALL="$CVSTAG-system.tar.bz2"
OOO_UNTAR_OPTIONS=jxf

UNICOWS_SRC=$SRCDIR/unicows.exe;
DBGINST_SRC=$SRCDIR/dbghinst.EXE;
ODMA_SRC=$SRCDIR/5_11_98Odma20.zip;


export LD_LIBRARY_PATH PATH CVSTAG APPLY_DIR
export CCACHE_DIR SRCDIR BUILDDIR OOBUILDDIR
export BUILD_FLAGS VERSION TOOLSDIR VENDORNAME
export PREFIX PREFIXBASE SYSCONFDIR SYSCONFBASE
export MANDIR MANDIRBASE DOCDIR DOCDIRBASE
export OOINSTDIR OOINSTBASE OOOINSTALLDIRNAME
export OODESTDIR CONFIGURE_OPTIONS WITH_SRC DISTRO
export BINSUFFIX ARCHITECTURE BUILD_MAGIC
export ENABLE_BONODO BONOBODIR ENABLE_JAVA
export BUILD_WIN32 
export OOO_BUILD_EXTENSION
export FORCE_GCC33

if test "z$RPM_TAG_LANGPACKS" != "z"; then
export RPM_TAG_LANGPACKS
fi

echo "Setup:"
echo " Tag:        '$CVSTAG'"
echo " Apply:      '$APPLY_DIR/apply'"
echo " Flags:      '$BUILD_FLAGS'"
echo " Suffix:     '$BINSUFFIX'"
echo " Dir:        '$BUILDDIR'"
echo " DestDir:    '$DESTDIR'"
echo " Path:       '$PATH'"
echo " Prefix:     '$PREFIX'"
echo " Mandir:     '$MANDIR'"
echo " Docdir:     '$DOCDIR'"
echo " Sysconf:    '$SYSCONFDIR'"
echo " OOInBase:   '$OOINSTBASE'"
echo " OOInstall:  '$OOINSTDIR'"
echo " OODestDir:  '$OODESTDIR'"
echo " Config:     '$CONFIGURE_OPTIONS'"
echo " OOo-Bonobo: '$ENABLE_BONOBO'"
echo " Use gcc33:  '$FORCE_GCC33'"
if test "$ENABLE_CCACHE" = "yes"; then
    echo " ccache:     yes, ccache directory is '$CCACHE_DIR'"
else
    echo " ccache:     no"
fi
if test "$ENABLE_ICECREAM" = "yes"; then
    echo " icecream:   yes, in '$ICECREAM_BINDIR'. Max number of jobs is '$ICECREAM_JOBS'"
else
    echo " icecream:   no"
fi

if test "z$WITH_SRC" != "z"; then
	echo "Build environment:";
	set
fi
