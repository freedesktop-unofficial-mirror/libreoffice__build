#!/usr/bin/perl -w

sub sniff_set($)
{
    my $build_dir = shift;
    my ($dirhandle, $fname);

    opendir ($dirhandle, $build_dir) || die "Can't open $build_dir";
    while ($fname = readdir ($dirhandle)) {
	$fname =~ /Set.sh$/ && last;
    }
    closedir ($dirhandle);

    return $fname;
}

sub rewrite_set($$)
{
    my $new_root = shift;
    my $set = shift;
    my $old_root;
    my $tmp_fname = "$new_root/$set.new";
    my $old_fname = "$new_root/$set";
    my $old_file;
    my $new_file;

    open ($old_file, $old_fname) || die "Can't open $old_fname: $!";
    open ($new_file, ">$tmp_fname") || die "Can't open $tmp_fname: $!";
    
    while (<$old_file>) {
	if (/\s*([^=]+)\s*=\s*\"([^\"]+)\"/) {
	    my ($name, $value) = ($1, $2);
	    if ($name eq 'SRC_ROOT') {
		$old_root = $value;
	    }
	    $value =~ s/$old_root/$new_root/g;
	    print $new_file "$name=\"$value\"\n";
	} else {
	    print $new_file $_;
	}
    }
    
    close ($new_file) || die "Failed to close $tmp_fname: $!";
    close ($old_file) || die "Failed to close $old_fname: $!";

    rename $tmp_fname, $old_fname || die "Failed to replace $old_fname: $!";

    return $old_root;
}

for $a (@ARGV) {
    if ($a eq '--help' || $a eq '-h') {
	print "relocate: syntax\n";
	print "  relocate /path/to/new/ooo/source_root\n";
    }
}

$OOO_BUILD = shift (@ARGV) || die "Pass path to relocated source tree";
$OOO_BUILD =~ /^\// || die "Path must be absolute";


$set = sniff_set($OOO_BUILD) || die "Can't find env. set";

$OLD_ROOT = rewrite_set($OOO_BUILD, $set);

print "$OLD_ROOT -> $OOO_BUILD\n";
