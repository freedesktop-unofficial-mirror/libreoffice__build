<?xml version="1.0" encoding="UTF-8"?>
<!--
 *   OpenOffice.org extension for syntax highlighting
 *   Copyright (C) 2008  CÃ©dric Bosdonnat cedricbosdo@openoffice.org
 *
 *   This library is free software; you can redistribute it and/or
 *   modify it under the terms of the GNU Library General Public
 *   License as published by the Free Software Foundation; 
 *   version 2 of the License.
 *
 *   This library is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *   Library General Public License for more details.
 *
 *   You should have received a copy of the GNU Library General Public
 *   License along with this library; if not, write to the Free
 *   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 -->
<project name="COOoder" default="package-oxt" basedir="..">


	<target name="init-env">
		<!-- set variables for the project structure -->
		<property file=".unoproject"/>
		<property file="package.properties"/>
		<dirname property="project.dir" file="package.properties"/>
		
		<property name="build.dir" value="${project.build}"/>
		<property name="build.classes.dir" value="${build.dir}/classes"/>
		<property name="dist.dir" value="${build.dir}/dist"/>
		
		<!-- set variables from SDK and Office -->
        <echo message="setting up UNO environment ..."/>
        <property file="ant/build.properties"/>
        	
        <property name="office.unopkg" value="${office.program.dir}${file.separator}unopkg"/>
        <property name="office.soffice" value="${office.program.dir}${file.separator}soffice"/>

		<property environment="env"/>
		<property name="office.tool.path" value="${env.PATH}${path.separator}${office.program.dir}"/>
    
        <property name="sdk.idl.dir" location="${sdk.dir}${file.separator}idl"/> 
        <property name="sdk.idlc" value="${sdk.dir}${file.separator}${sdk.bin.dir}${file.separator}idlc"/>
        <property name="sdk.regmerge" value="${sdk.dir}${file.separator}${sdk.bin.dir}${file.separator}regmerge"/>
        <property name="sdk.javamaker" value="${sdk.dir}${file.separator}${sdk.bin.dir}${file.separator}javamaker"/>
    
        <property name="uno.package.name" value="${project.dir}${file.separator}${dist.dir}${file.separator}${ant.project.name}.oxt"/>
        <property name="src.dir.absolute" value="${project.dir}${project.srcdir}"/>
		<property name="idl.dir" value="${project.dir}${project.idl}"/>
    
        <property name="idl.out" value="${project.dir}${file.separator}${build.dir}${file.separator}idl"/>
        <property name="idl.out.urd" value="${idl.out}${file.separator}urd"/>
        <property name="idl.out.rdb" value="${idl.out}${file.separator}rdb"/>
        <property name="idl.rdb.name" value="types.rdb"/>
        <property name="idl.rdb.fullpath" value="${idl.out.rdb}${file.separator}${idl.rdb.name}"/>
    
		<mkdir dir="${build.dir}" />
        <mkdir dir="${idl.out}"/>
        <mkdir dir="${idl.out.urd}"/>
        <mkdir dir="${idl.out.rdb}"/>
		<mkdir dir="${build.classes.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>
    
    <target name="clean" depends="init-env">
        <delete dir="${build.dir}"/>
    </target>
	
    <target name="package-oxt" depends="package-jar">
    	<!-- The manifest.xml file is extracted from the package build with Eclipse -->
    	
    	<zip destfile="${uno.package.name}" includes="${contents}">
    		<fileset dir="." includes="${contents}"/>
    		<zipfileset dir="descriptions" includes="**/*.txt" prefix="descriptions"/>
    		<zipfileset file="ant/manifest.xml" fullpath="META-INF/manifest.xml"/>
    		<zipfileset file="${dist.dir}/${ant.project.name}.jar" 
    			fullpath="${ant.project.name}.jar"/>
    		<zipfileset file="${idl.rdb.fullpath}" fullpath="types.rdb"/>
    	</zip>
    </target>
	
	<target name="package-jar" depends="compile-java">
		<jar destfile="${dist.dir}/${ant.project.name}.jar">
			<manifest>
				<attribute name="RegistrationClassName" value="${regclassname}"/>
			</manifest>
			<fileset dir="${build.classes.dir}">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="${src.dir.absolute}">
				<exclude name="**/*.java"/>
			</fileset>
		</jar>
	</target>
	
	<target name="compile-java" depends="types">
		<echo message="build classes: ${build.classes.dir}"/>
		<javac srcdir="${src.dir.absolute}" source="1.4" target="1.4" encoding="UTF-8"
			destdir="${build.classes.dir}" excludes="**/*Test*">
			<classpath>
				<fileset dir="${office.program.dir}${file.separator}classes">
					<include name="*.jar"/>
				</fileset>
				<pathelement location="${build.classes.dir}"/>
			</classpath>
		</javac>
	</target>
	
	<target name="types" depends="merge-urd">
		<echo message="Generating java class files from rdb..."/>
		<condition property="args.offapi" value=" -X${office.offapi.rdb}" else="">
			<length string="${office.offapi.rdb}" when="equal" length="0" trim="true"/>
		</condition>

        <exec executable="${sdk.javamaker}" dir="${office.program.dir}" failonerror="true">
            <env key="PATH" path="${office.tool.path}"/>    
            <env key="LD_LIBRARY_PATH" path="${office.tool.path}"/>
            <env key="DYLD_LIBRARY_PATH" path="${office.tool.path}"/>
			<arg value="-nD"/>
			<arg value="-Gc"/>
            <arg value="-BUCR"/>
            <arg value="-O"/>
            <arg value="${project.dir}${file.separator}${build.classes.dir}"/>
            <arg file="${idl.rdb.fullpath}"/>
            <arg value="-X${office.unotypes.rdb}${args.offapi}"/>
        </exec>
	</target>
	
	<target name="merge-urd" depends="compile-idl">
		<delete file="${idl.rdb.fullpath}"/>    
        <apply executable="${sdk.regmerge}" dir="${office.program.dir}" failonerror="true">
            <env key="PATH" path="${office.tool.path}"/>
            <env key="LD_LIBRARY_PATH" path="${office.tool.path}"/>
            <env key="DYLD_LIBRARY_PATH" path="${office.tool.path}"/> 
            <arg file="${idl.rdb.fullpath}"/>
            <arg value="/UCR"/>
            <fileset dir="${idl.out.urd}" includes="**/*.urd" casesensitive="yes"/>
        </apply>
	</target>
	
	<target name="compile-idl" depends="init-env">
		<echo message="${sdk.idlc}"/>
        <echo message="${office.tool.path}"/>

        <apply executable="${sdk.idlc}" dir="${office.program.dir}" failonerror="true">
            <env key="PATH" path="${office.tool.path}"/>
            <env key="LD_LIBRARY_PATH" path="${office.tool.path}"/>
            <env key="DYLD_LIBRARY_PATH" path="${office.tool.path}"/>
            <arg value="-C"/>
            <arg value="-O"/>
            <arg value="${idl.out.urd}"/>
            <arg value="-I"/>
            <arg value="${idl.dir}"/>
            <arg value="-I"/>
            <arg value="${sdk.idl.dir}"/>
            <fileset dir="${idl.dir}" includes="**/*.idl" casesensitive="yes"/>
        </apply>
	</target>
	
</project>
