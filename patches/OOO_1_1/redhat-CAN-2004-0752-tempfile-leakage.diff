--- unotools/source/ucbhelper/tempfile.cxx.umask	2004-08-18 16:22:04.000000000 -0400
+++ unotools/source/ucbhelper/tempfile.cxx	2004-08-18 16:23:34.000000000 -0400
@@ -70,6 +70,8 @@
 #include <tools/time.hxx>
 #include <tools/debug.hxx>
 #include <stdio.h>
+#include <sys/types.h>
+#include <sys/stat.h>
 
 using namespace osl;
 
@@ -240,7 +242,9 @@
         {
             DBG_ASSERT( bKeep, "Too expensive, use directory for creating name!" );
             File aFile( aTmp );
+            mode_t	old_mode = umask (077);	// Only let creator have read access
             FileBase::RC err = aFile.open(osl_File_OpenFlag_Create);
+            umask (old_mode);
             if (  err == FileBase::E_None )
             {
                 rName = aTmp;
@@ -318,7 +322,9 @@
         else
         {
             File aFile( aTmp );
+            mode_t	old_mode = umask (077);	// Only let creator have read access
             FileBase::RC err = aFile.open(osl_File_OpenFlag_Create);
+            umask (old_mode);
             if ( err == FileBase::E_None )
             {
                 pImp->aName = aTmp;
--- tools/source/fsys/tempfile.cxx.umask	2004-08-18 16:25:45.000000000 -0400
+++ tools/source/fsys/tempfile.cxx	2004-08-18 16:26:34.000000000 -0400
@@ -71,6 +71,8 @@
 #endif
 #include <debug.hxx>
 #include <stdio.h>
+#include <sys/types.h>
+#include <sys/stat.h>
 
 #ifdef UNX
 #define _MAX_PATH 260
@@ -179,7 +181,9 @@
         {
             DBG_ASSERT( bKeep, "Too expensive, use directory for creating name!" );
             File aFile( aTmp );
+            mode_t	old_mode = umask (077);	// Only let creator have read access
             FileBase::RC err = aFile.open(osl_File_OpenFlag_Create);
+            umask (old_mode);
             if (  err == FileBase::E_None )
             {
                 rName = aTmp;
@@ -257,7 +261,9 @@
         else
         {
             File aFile( aTmp );
+            mode_t	old_mode = umask (077);	// Only let creator have read access
             FileBase::RC err = aFile.open(osl_File_OpenFlag_Create);
+            umask (old_mode);
             if ( err == FileBase::E_None )
             {
                 pImp->aName = aTmp;
