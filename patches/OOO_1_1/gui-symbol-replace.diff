--- vcl/inc/svids.hrc.orig	2003-11-24 12:45:49.000000000 +0530
+++ vcl/inc/svids.hrc	2003-11-21 13:19:42.000000000 +0530
@@ -151,5 +151,7 @@
 #define SV_SHORTCUT_TODOCUMENT              10606
 #define SV_SHORTCUT_MENUBAR                 10607
 
+#define IL_SYM_TO_IMAGES_L	1090
+#define IL_SYM_TO_IMAGES_S	1095
 #define SV_FUNIT_STRINGS                    10700
 #endif	// _SV_SVIDS_HRC
--- vcl/source/src/images.src.orig	2003-11-18 12:12:15.000000000 +0530
+++ vcl/source/src/images.src	2003-11-21 17:22:01.000000000 +0530
@@ -64,6 +64,9 @@
 #ifndef _SV_SVIDS_HRC
 #include <svids.hrc>
 #endif
+#ifndef _SVX_SVXIDS_HRC
+#include <svx/svxids.hrc>
+#endif
 
 // =======================================================================
 
@@ -177,3 +180,27 @@
 	File = "splvarw.bmp";
 };
 
+#define IMG_IDLIST \
+	IdList =			   \
+	{					   \
+		SID_OUTLINE_UP;             \
+		SID_OUTLINE_DOWN;           \
+		SID_OUTLINE_LEFT;           \
+		SID_OUTLINE_RIGHT;          \
+	};					   \
+	IdCount = { 4 ; };
+
+ImageList IL_SYM_TO_IMAGES_L
+{
+      ImageBitmap = Bitmap { File = "lc_imgs.bmp" ; };
+      MaskColor = Color { Red = 0xFFFF ; Green = 0x0000 ; Blue = 0xFFFF ; };
+	IMG_IDLIST
+};
+
+ImageList IL_SYM_TO_IMAGES_S
+{
+      ImageBitmap = Bitmap { File = "sc_imgs.bmp" ; };
+      MaskColor = Color { Red = 0xFFFF ; Green = 0x0000 ; Blue = 0xFFFF ; };
+	IMG_IDLIST
+};
+
--- vcl/source/src/makefile.mk.orig	2002-10-25 17:15:39.000000000 +0530
+++ vcl/source/src/makefile.mk	2003-11-24 08:31:59.000000000 +0530
@@ -72,6 +72,7 @@
 .INCLUDE :	settings.mk
 .INCLUDE :	sv.mk
 
+IMGLST_SRS=$(SRS)$/svsrc.srs
 # --- Files --------------------------------------------------------
 
 SRCFILES=			images.src			\
--- vcl/inc/image.hxx.orig	2003-11-24 12:45:41.000000000 +0530
+++ vcl/inc/image.hxx	2003-11-27 09:59:35.000000000 +0530
@@ -111,6 +111,8 @@
 
 private:
 	ImplImage*		mpImplData;
+  static const USHORT symbol_to_image_table[];
+  static const int table_entry_size;
 
 public:
 					Image();
@@ -140,6 +142,7 @@
 	BOOL			operator!=( const Image& rImage ) const { return !(Image::operator==( rImage )); }
 
     void            ClearCaches();
+  static BOOL GetImageForSymbol(const USHORT nSymbolId, const Size objSize, Image& objImage);
 };
 
 inline BOOL Image::operator!() const
--- vcl/source/gdi/image.cxx.orig	2003-11-18 12:10:42.000000000 +0530
+++ vcl/source/gdi/image.cxx	2003-11-27 10:24:39.000000000 +0530
@@ -70,6 +70,13 @@
 #include <tools/stream.hxx>
 #endif
 
+#ifndef _SV_SVIDS_HRC
+#include <svids.hrc>
+#endif
+#ifndef _SV_SVDATA_HXX
+#include <svdata.hxx>
+#endif
+
 #ifndef _SV_RC_H
 #include <rc.h>
 #endif
@@ -94,6 +101,11 @@
 #endif
 #undef private
 
+
+#ifndef _SVX_SVXIDS_HRC
+#include <svx/svxids.hrc>
+#endif
+
 // =======================================================================
 
 DBG_NAME( Image );
@@ -212,6 +224,38 @@
 
 // =======================================================================
 
+static const USHORT Image::symbol_to_image_table[] = 
+  {
+    NULL,
+    NULL,
+    SID_OUTLINE_UP,
+    SID_OUTLINE_DOWN,
+    SID_OUTLINE_LEFT,
+    SID_OUTLINE_RIGHT
+  };
+
+static const int Image::table_entry_size = sizeof(symbol_to_image_table) / sizeof(symbol_to_image_table[0]);
+
+static BOOL Image::GetImageForSymbol(const USHORT nSymbolId, const Size objSize, Image& objImage)
+{
+  if (nSymbolId >= table_entry_size)
+    return FALSE;
+
+  long lHeight = objSize.getHeight();
+  long lWidth = objSize.getWidth();
+  long lMin = lHeight < lWidth ? lHeight : lWidth;
+
+  if (lMin < 16)
+    return FALSE;
+
+  ImageList objImageList = ImageList(ResId(lMin >= 24 ? IL_SYM_TO_IMAGES_L : IL_SYM_TO_IMAGES_S, ImplGetResMgr()));
+  objImage = objImageList.GetImage(symbol_to_image_table[nSymbolId]);
+
+    return TRUE;
+}
+
+// -----------------------------------------------------------------------
+
 Image::Image()
 {
 	DBG_CTOR( Image, NULL );
--- vcl/source/control/button.cxx.orig	2003-11-18 12:10:56.000000000 +0530
+++ vcl/source/control/button.cxx	2003-11-24 19:40:20.000000000 +0530
@@ -3318,7 +3318,20 @@
     }
 
     if ( RSC_IMAGEBUTTON_SYMBOL & nObjMask )
-        SetSymbol( (SymbolType)ReadShortRes() );
+    {
+	SymbolType s = (SymbolType)ReadShortRes();
+
+	Image objImage;
+
+	if ( Image::GetImageForSymbol(s, GetSizePixel(), objImage) )
+	{
+	  SetImage(objImage);
+	}
+	else
+	{
+	  SetSymbol(s);
+	}
+    }
 
     if ( RSC_IMAGEBUTTON_STATE & nObjMask )
         SetState( (TriState)ReadShortRes() );
