Index: sc/source/filter/lotus/filter.cxx
===================================================================
RCS file: /cvs/sc/sc/source/filter/lotus/filter.cxx,v
retrieving revision 1.3
diff -u -p -u -r1.3 filter.cxx
--- sc/source/filter/lotus/filter.cxx	15 Apr 2003 17:26:38 -0000	1.3
+++ sc/source/filter/lotus/filter.cxx	1 Jul 2004 11:08:39 -0000
@@ -93,7 +93,6 @@
 const UINT16		nBOF = 0x0000;
 
 
-
 // externe Variablen -----------------------------------------------------
 extern WKTYP		eTyp;	// Typ der gerade in bearbeitung befindlichen Datei
 WKTYP				eTyp;
@@ -116,95 +115,81 @@ extern sal_Char*	pDummy1;		// -> memory.
 
 extern OPCODE_FKT	pOpFkt[ FKT_LIMIT ];
 									// -> optab.cxx, Tabelle moeglicher Opcodes
+extern OPCODE_FKT	pOpFkt123[ FKT_LIMIT123 ];
+									// -> optab.cxx, Table of possible Opcodes
 
 extern long			nDateiLaenge;	// -> datei.cpp, ...der gerade offenen Datei
 
 LOTUS_ROOT*			pLotusRoot = NULL;
 
 
-WKTYP				ScanVersion( SvStream& aStream );
-
-
-extern FltError		ScImportLotus123old( SvStream&, ScDocument*, CharSet eSrc );
-
-
-
-FltError ScImportLotus123old( SvStream& aStream, ScDocument* pDocument, CharSet eSrc )
+static FltError
+generate_Opcodes( SvStream& aStream, ScDocument* pDoc,
+				  ScfStreamProgressBar& aPrgrsBar, WKTYP eTyp )
 {
-	aStream.Seek( 0UL );
-
-	// Zeiger auf Dokument global machen
-	pDoc = pDocument;
-
-	bEOF = FALSE;
-
-	eCharVon = eSrc;
-
-	// Speicher besorgen
-	if( !MemNew() )
-		return eERR_NOMEM;
+	OPCODE_FKT *pOps;
+	int         nOps;
 
-	InitPage(); // Seitenformat initialisieren (nur Tab 0!)
-
-	// Progressbar starten
-    ScfStreamProgressBar aPrgrsBar( aStream, pDocument->GetDocumentShell() );
-
-	// Datei-Typ ermitteln
-	eTyp = ScanVersion( aStream );
-
-	switch( eTyp )  // auswaehlen der Tabelle
+	switch(eTyp)
 	{
-		case eWK_1:
-		case eWK_2:		break;
-		case eWK3:		return eERR_NI;
-		case eWK_Error:	return eERR_FORMAT;
-		default:		return eERR_UNKN_WK;
+	case eWK_1:
+	case eWK_2:
+			pOps = pOpFkt;
+			nOps = FKT_LIMIT;
+			break;
+	case eWK123:
+			pOps = pOpFkt123;
+			nOps = FKT_LIMIT123;
+			break;
+	case eWK3:		return eERR_NI;
+	case eWK_Error:	return eERR_FORMAT;
+	default:		return eERR_UNKN_WK;
 	}
+    aStream.Seek( 0UL );
 
-	// Init von Lotus Root-Daten -> Ctor LotusImport
-
-	// Aufdroeseln der Opcodes
-
-	while( !bEOF )
-	{
-		UINT16			nOpcode, nLaenge;
-
-		// ein Lotus-Record einlesen
-		aStream >> nOpcode >> nLaenge;
-
+    while( !bEOF )
+    {
+		UINT16 nOpcode, nLength;
+
+		aStream >> nOpcode >> nLength;
+#ifdef DEBUG
+		fprintf( stderr, "nOpcode=%x nLength=%x\n", nOpcode, nLength);
+#endif
 		aPrgrsBar.Progress();
 
-
-		if( aStream.IsEof() )
-			bEOF = TRUE;
-		else if( nOpcode == 75 )
-			return eERR_FILEPASSWD;
-		else if( nOpcode < FKT_LIMIT )
-			( pOpFkt[ nOpcode ] )( aStream, nLaenge );
+		if( nOpcode == 1 )
+		    bEOF = TRUE;
 		else
-			aStream.SeekRel( nLaenge );
-	}
-
-	MemDelete();
-
-	pDoc->CalcAfterLoad();
-
-	return eERR_OK;
+		{
+			if( nOpcode == 75 ) // FIXME: badly factored
+				return eERR_FILEPASSWD;
+
+		    if( nOpcode < nOps )
+				pOps[ nOpcode ] ( aStream, nLength );
+		    else
+				aStream.SeekRel( nLength );
+		}
+    }
+
+    MemDelete();
+
+    pDoc->CalcAfterLoad();
+    
+    return eERR_OK;
 }
 
-
 WKTYP ScanVersion( SvStream& aStream )
 {
 	// PREC:    pWKDatei:   Zeiger auf offene Datei
 	// POST:    return:     Typ der Datei
-	UINT16			nOpcode, nVersNr, nRecLaenge;
+	UINT16			nOpcode, nVersNr, nRecLen;
 
 	// erstes Byte muss wegen BOF zwingend 0 sein!
 	aStream >> nOpcode;
 	if( nOpcode != nBOF )
 		return eWK_UNKNOWN;
 
-	aStream >> nRecLaenge >> nVersNr;
+	aStream >> nRecLen >> nVersNr;
 
 	if( aStream.IsEof() )
 		return eWK_Error;
@@ -212,14 +197,14 @@ WKTYP ScanVersion( SvStream& aStream )
 	switch( nVersNr )
 	{
 		case 0x0404:
-			if( nRecLaenge == 2 )
+			if( nRecLen == 2 )
 				return eWK_1;
 			else
 				return eWK_UNKNOWN;
 			break;
 
 		case 0x0406:
-			if( nRecLaenge == 2 )
+			if( nRecLen == 2 )
 				return eWK_2;
 			else
 				return eWK_UNKNOWN;
@@ -228,17 +213,54 @@ WKTYP ScanVersion( SvStream& aStream )
 		case 0x1000:
 			aStream >> nVersNr;
 			if( aStream.IsEof() ) return eWK_Error;
-			if( nVersNr == 0x0004 && nRecLaenge == 26 )
+			if( nVersNr == 0x0004 && nRecLen == 26 )
 			{	// 4 Bytes von 26 gelesen->22 ueberlesen
 				aStream.Read( pDummy1, 22 );
 				return eWK3;
 			}
 			break;
+		case 0x1003:
+			if( nRecLen == 0x1a )
+				return eWK123;
+			else
+				return eWK_UNKNOWN;
+			break;	
+		case 0x1005:
+			if( nRecLen == 0x1a )
+				return eWK123;
+			else
+				return eWK_UNKNOWN;
+			break;       
 	}
 
 	return eWK_UNKNOWN;
 }
 
 
+FltError ScImportLotus123old( SvStream& aStream, ScDocument* pDocument, CharSet eSrc )
+{
+	aStream.Seek( 0UL );
+
+	// Zeiger auf Dokument global machen
+	pDoc = pDocument;
 
+	bEOF = FALSE;
 
+	eCharVon = eSrc;
+
+	// Speicher besorgen
+	if( !MemNew() )
+		return eERR_NOMEM;
+
+	InitPage(); // Seitenformat initialisieren (nur Tab 0!)
+
+	// Progressbar starten
+    ScfStreamProgressBar aPrgrsBar( aStream, pDocument->GetDocumentShell() );
+
+	// Datei-Typ ermitteln
+	eTyp = ScanVersion( aStream );
+
+	fprintf( stderr, "ImportLotus123old (%d)\n", eTyp );
+
+	return generate_Opcodes( aStream, pDoc, aPrgrsBar, eTyp );
+}
Index: sc/source/filter/lotus/op.cxx
===================================================================
RCS file: /cvs/sc/sc/source/filter/lotus/op.cxx,v
retrieving revision 1.7
diff -u -p -u -r1.7 op.cxx
--- sc/source/filter/lotus/op.cxx	26 Mar 2003 18:05:30 -0000	1.7
+++ sc/source/filter/lotus/op.cxx	1 Jul 2004 11:08:40 -0000
@@ -71,6 +71,7 @@
 #include <rtl/math.hxx>
 #include <stdio.h>
 #include <string.h>
+#include <math.h>
 #include <ctype.h>
 #if defined( MAC ) || defined( ICC )
 #include <stdlib.h>
@@ -162,23 +163,20 @@ void OP_Label( SvStream& r, UINT16 n )
 {
 	BYTE			nFormat;
 	UINT16			nCol, nRow, nTab = 0;
-	sal_Char		pText[ 256 ];
 
 	r >> nFormat >> nCol >> nRow;
 	n -= 5;
 
+	sal_Char* pText = new sal_Char[n + 1];
 	r.Read( pText, n );
-	pText[ n + 1 ] = 0;   // zur Sicherheit Nullterminator anhaengen
-	// der Mega-Hack: bei Text wird HART Text als Format eingebrannt!!!!!!!
+	pText[n] = 0;
 	nFormat &= 0x80;    // Bit 7 belassen
 	nFormat |= 0x75;    // protected egal, special-text gesetzt
 
-	// Sonderzeichenanpassung
-	DosToSystem( pText );
-
 	PutFormString( nCol, nRow, nTab, pText );
-
 	SetFormat( nCol, nRow, nTab, nFormat, nDezStd );
+
+	delete pText;
 }
 
 
@@ -271,9 +269,7 @@ void OP_NamedRange( SvStream& r, UINT16 
 	else
 		strcpy( pAnsi, cPuffer );           // #100211# - checked
 
-	DosToSystem( pAnsi );
-
-	String				aTmp( pAnsi, pLotusRoot->eCharsetQ );
+	String aTmp( pAnsi, pLotusRoot->eCharsetQ );
 
     ScfTools::ConvertToScDefinedName( aTmp );
 
@@ -310,8 +306,6 @@ void OP_SymphNamedRange( SvStream& r, UI
 	else
 		strcpy( pAnsi, cPuffer );           // #100211# - checked
 
-	DosToSystem( pAnsi );
-
 	String		aTmp( pAnsi, pLotusRoot->eCharsetQ );
     ScfTools::ConvertToScDefinedName( aTmp );
 
@@ -389,3 +383,58 @@ void OP_Blank( SvStream& r, UINT16 n )
 }
 
 
+void OP_BOF123( SvStream& r, UINT16 n )
+{
+	r.SeekRel( 26 );        
+}
+
+
+void OP_EOF123( SvStream& r, UINT16 n )
+{
+	bEOF = TRUE;
+}
+
+void OP_Label123( SvStream& r, UINT16 n )
+{ 
+	BYTE      nTab, nCol;
+	UINT16    nRow;
+	r >> nRow >> nTab >> nCol;
+	n -= 4;
+
+	sal_Char* pText = new sal_Char[n + 1];
+	r.Read( pText, n );
+	pText[ n ] = 0;
+
+	PutFormString(( UINT16 )  nCol, nRow,( UINT16 )  nTab, pText );
+
+	delete pText;
+}
+
+void OP_Number123( SvStream& r, UINT16 n )
+{
+	BYTE    nCol,nTab;
+	UINT16  nRow;
+	INT32   nValue;
+
+	r >> nRow >> nTab >> nCol >> nValue;
+	double  fValue;
+
+	fValue = nValue >> 6;
+	if (nValue & 0x0f)
+	{
+	    if (nValue & 0x00000010)
+                fValue /= pow(10, (nValue & 0x0f));
+		else
+				fValue *= pow(10, (nValue & 0x0f));	
+	}
+
+	if ((nValue & 0x00000020))
+		fValue = -fValue;
+
+	ScValueCell *pCell = new ScValueCell( fValue );
+	pDoc->PutCell( ( UINT16 ) nCol, nRow, ( UINT16 ) nTab, pCell, ( BOOL ) TRUE );
+}
+
+void OP_For( SvStream& r, UINT16 n )
+{
+}
Index: sc/source/filter/lotus/optab.cxx
===================================================================
RCS file: /cvs/sc/sc/source/filter/lotus/optab.cxx,v
retrieving revision 1.1.1.1
diff -u -p -u -r1.1.1.1 optab.cxx
--- sc/source/filter/lotus/optab.cxx	18 Sep 2000 16:45:14 -0000	1.1.1.1
+++ sc/source/filter/lotus/optab.cxx	1 Jul 2004 11:08:40 -0000
@@ -176,3 +176,108 @@ OPCODE_FKT pOpFkt[ FKT_LIMIT ] =
 };
 
 
+OPCODE_FKT pOpFkt123[ FKT_LIMIT123 ] =
+{						//  Code
+	OP_BOF123,				//    0
+	OP_EOF123,				//    1
+	NI,					//    2
+	NI,					//    3
+	NI,					//    4
+	NI,					//    5
+	NI,					//    6
+	NI,			//    7
+	NI,		//    8
+	NI,					//    9
+	NI,					//   10
+	NI,		//   11
+	NI,			//   12
+	NI,			//   13
+	NI,			//   14
+	NI,			//   15
+	NI,			//   16
+	NI,					//   17
+	NI,					//   18
+	NI,					//   19
+	NI,					//   20
+	NI,					//   21
+	OP_Label123,				//   22
+	NI,					//   23
+	NI,					//   24
+	NI,					//   25
+	NI,					//   26
+	NI,					//   27
+	NI,					//   28
+	NI,					//   29
+	NI,					//   30
+	NI,					//   31
+	NI,					//   32
+	NI,					//   33
+	NI,					//   34
+	NI,					//   35
+	NI,					//   36
+	OP_Number123,  			        //   37
+	NI,			//   38
+	NI,					//   39
+	OP_For,			//   40
+	NI,					//   41
+	NI,					//   42
+	NI,					//   43
+	NI,					//   44
+	NI,					//   45
+	NI,					//   46
+	NI,					//   47
+	NI,					//   48
+	NI,					//   49
+	NI,					//   50
+	NI,					//   51
+	NI,					//   52
+	NI,					//   53
+	NI,					//   54
+	NI,					//   55
+	NI,					//   56
+	NI,					//   57
+	NI,					//   58
+	NI,					//   59
+	NI,					//   60
+	NI,					//   61
+	NI,					//   62
+	NI,					//   63
+	NI,					//   64
+	NI,					//   65
+	NI,					//   66
+	NI,					//   67
+	NI,					//   68
+	NI,					//   69
+	NI,					//   70
+	NI,	//   71
+	NI,					//   72
+	NI,					//   73
+	NI,					//   74
+	NI,					//   75
+	NI,					//   76
+	NI,					//   77
+	NI,					//   78
+	NI,					//   79
+	NI,					//   80
+	NI,					//   81
+	NI,					//   82
+	NI,					//   83
+	NI,					//   84
+	NI,					//   85
+	NI,					//   86
+	NI,					//   87
+	NI,					//   88
+	NI,					//   89
+	NI,					//   90
+	NI,					//   91
+	NI,					//   92
+	NI,					//   93
+	NI,					//   94
+	NI,					//   95
+	NI,					//   96
+	NI,					//   97
+	NI,					//   98
+	NI,					//   99
+	NI		//  100
+};
+
Index: sc/source/filter/lotus/tool.cxx
===================================================================
RCS file: /cvs/sc/sc/source/filter/lotus/tool.cxx,v
retrieving revision 1.6
diff -u -p -u -r1.6 tool.cxx
--- sc/source/filter/lotus/tool.cxx	26 Mar 2003 18:05:30 -0000	1.6
+++ sc/source/filter/lotus/tool.cxx	1 Jul 2004 11:08:40 -0000
@@ -219,16 +219,6 @@ void InitPage( void )
 }
 
 
-
-
-String DosToSystem( sal_Char* p )
-{	// Umwandlung vom internen in externen Zeichensatz
-	return String( p, pLotusRoot->eCharsetQ );
-}
-
-
-
-
 double SnumToDouble( INT16 nVal )
 {
 	const double pFacts[ 8 ] = {
