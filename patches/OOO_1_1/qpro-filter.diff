--- sc/inc/filter.hxx	2004-07-21 19:19:36.000000000 +0100
+++ sc/inc/filter.hxx	2004-10-19 15:17:47.907974240 +0100
@@ -122,6 +122,8 @@
 
 FltError ScImportLotus123( SfxMedium&, ScDocument*, CharSet eSrc = RTL_TEXTENCODING_DONTKNOW );
 
+FltError ScImportQuattroPro( SfxMedium&, ScDocument* );
+
 FltError ScImportExcel( SvStream&, ScDocument* );
 
 FltError ScImportExcel( SfxMedium&, ScDocument* );



--- /dev/null	2004-08-25 18:34:59.000000000 +0100
+++ sc/source/filter/qpro/qpro.cxx	2004-10-19 16:21:56.993824248 +0100
@@ -0,0 +1,92 @@
+#ifdef PCH
+#include "filt_pch.hxx"
+#endif
+
+#pragma hdrstop
+
+//------------------------------------------------------------------------
+
+#include <stdio.h>
+#include <sfx2/docfile.hxx>
+
+#include "flttools.hxx"
+#include "filter.hxx"
+#include "scerrors.hxx"
+
+// Stream wrapper class
+class BiffReader
+{
+  protected:
+	SvStream   *mpStream;
+	sal_uInt16  mnId;
+	sal_uInt16  mnLength;
+	sal_uInt32  mnOffset;
+
+  public:
+	           BiffReader( SfxMedium & rMedium );
+			   ~BiffReader();
+	bool       recordsLeft() { return mpStream && !mpStream->IsEof(); }
+	bool       nextRecord();
+	sal_uInt16 getId() { return mnId; }
+	sal_uInt16 getLength() { return mnLength; }
+
+	inline SvStream&  operator>>( sal_uInt8 & rByte ) { *mpStream >> rByte; }
+};
+
+BiffReader::BiffReader( SfxMedium & rMedium ) :
+		mnId(0),
+		mnLength(0),
+		mnOffset(0)
+{
+	mpStream = rMedium.GetInStream();
+	if( mpStream )
+		mpStream->SetBufferSize( 65536 );
+}
+BiffReader::~BiffReader()
+{
+	if( mpStream )
+		mpStream->SetBufferSize( 0 );
+}
+
+bool BiffReader::nextRecord()
+{
+	if( !recordsLeft() )
+		return false;
+
+	sal_uInt32 nPos = mpStream->Tell();
+	if( nPos != mnOffset + mnLength )
+		mpStream->Seek( mnOffset + mnLength );
+
+	mnLength = mnId = 0;
+	*mpStream >> mnId >> mnLength;
+
+	mnOffset = mpStream->Tell();
+#ifdef DEBUG
+	fprintf( stderr, "Read record 0x%x length 0x%x at offset 0x%x\n",
+			 mnId, mnLength, mnOffset );
+#endif
+	return true;
+}
+
+
+FltError ScImportQuattroPro( SfxMedium &rMedium, ScDocument *pDoc )
+{
+	FltError   eRet = eERR_OK;
+	BiffReader aReader( rMedium );
+
+	if( !aReader.recordsLeft() )
+		return eERR_OPEN;
+
+	while( aReader.nextRecord() ) {
+		switch( aReader.getId() )
+		{
+		case 0x0001:
+			// Implement record handling here ...
+			sal_uInt8 aData;
+			aReader >> aData;
+			break;
+		}
+	}
+
+	return eRet;
+}
