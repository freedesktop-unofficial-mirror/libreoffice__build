Index: sal/rtl/source/strtmpl.c
===================================================================
RCS file: /cvs/porting/sal/rtl/source/strtmpl.c,v
retrieving revision 1.14
diff -u -p -u -r1.14 strtmpl.c
--- sal/rtl/source/strtmpl.c	4 Nov 2002 15:36:28 -0000	1.14
+++ sal/rtl/source/strtmpl.c	26 May 2004 13:27:53 -0000
@@ -111,6 +111,8 @@ sal_Int32 SAL_CALL IMPL_RTL_STRNAME( com
                                                 const IMPL_RTL_STRCODE* pStr2 )
 {
     sal_Int32 nRet;
+	if(pStr1 == pStr2)
+		return 0;
     while ( ((nRet = ((sal_Int32)(IMPL_RTL_USTRCODE(*pStr1)))-
                      ((sal_Int32)(IMPL_RTL_USTRCODE(*pStr2)))) == 0) &&
             *pStr2 )
@@ -129,21 +131,21 @@ sal_Int32 SAL_CALL IMPL_RTL_STRNAME( com
                                                            const IMPL_RTL_STRCODE* pStr2,
                                                            sal_Int32 nStr2Len )
 {
-    const IMPL_RTL_STRCODE* pStr1End = pStr1 + nStr1Len;
-    const IMPL_RTL_STRCODE* pStr2End = pStr2 + nStr2Len;
-    sal_Int32 nRet;
-    while ( (pStr1 < pStr1End) && (pStr2 < pStr2End) )
-    {
-        nRet = ((sal_Int32)(IMPL_RTL_USTRCODE( *pStr1 )))-
-               ((sal_Int32)(IMPL_RTL_USTRCODE( *pStr2 )));
-        if ( nRet )
-            return nRet;
+    sal_Int32 nRet = nStr1Len - nStr2Len;
+    int nCount = (nRet <= 0) ? nStr1Len : nStr2Len;
 
-        pStr1++;
-        pStr2++;
-    }
+	if(pStr1 == pStr2)
+		return 0;
 
-    return nStr1Len - nStr2Len;
+    --pStr1;
+    --pStr2;
+    while( (--nCount >= 0) && (*++pStr1 == *++pStr2) );
+
+    if( nCount >= 0 )
+        nRet = ((sal_Int32)(IMPL_RTL_USTRCODE( *pStr1 )))
+             - ((sal_Int32)(IMPL_RTL_USTRCODE( *pStr2 )));
+
+    return nRet;
 }
 
 /* ----------------------------------------------------------------------- */
@@ -740,7 +742,7 @@ sal_Int32 SAL_CALL IMPL_RTL_STRNAME( val
 sal_Int32 SAL_CALL IMPL_RTL_STRNAME( valueOfChar )( IMPL_RTL_STRCODE* pStr,
                                                     IMPL_RTL_STRCODE c )
 {
-    *pStr = c;
+    *pStr++ = c;
     *pStr = 0;
     return 1;
 }

