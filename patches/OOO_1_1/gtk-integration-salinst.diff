Index: vcl/unx/source/app/salinst.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/salinst.cxx,v
retrieving revision 1.15
diff -u -p -u -r1.15 salinst.cxx
--- vcl/unx/source/app/salinst.cxx	10 Jun 2003 14:30:44 -0000	1.15
+++ vcl/unx/source/app/salinst.cxx	21 Aug 2003 13:59:33 -0000
@@ -100,6 +100,13 @@
 #ifndef _VCL_SM_HXX
 #include <sm.hxx>
 #endif
+
+#ifndef DISABLE_GTK_INTEGRATION
+#  include <prex.h>
+#  include <gdk/gdk.h>
+#  include <postx.h>
+#endif
+
 // -=-= C++ globals =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 
 void SalAbort( const XubString& rErrorText )
@@ -126,13 +133,65 @@ SalYieldMutex::SalYieldMutex()
 
 void SalYieldMutex::acquire()
 {
+#ifndef DISABLE_GTK_INTEGRATION
+	bool take_gdk = false;
+
+	OMutex::acquire();
+
+	while( mnThreadId != 0 &&
+	       mnThreadId != NAMESPACE_VOS(OThread)::getCurrentIdentifier() ) {
+		fprintf( stderr, "SalYieldMutex::acquire (%d) lock contention\n",
+			 (long) mnThreadId );
+		OMutex::release();
+		maUnlocked.wait();
+		OMutex::acquire();
+	}
+	maUnlocked.reset();
+
+	if( mnThreadId == NAMESPACE_VOS(OThread)::getCurrentIdentifier() )
+		mnCount++;
+
+	else if( mnThreadId == 0 )
+		take_gdk = true;
+
+	else
+		g_assert_not_reached();
+
+//	fprintf( stderr, "SalYieldMutex::acquire (%d)\n", (long) mnThreadId );
+
+	OMutex::release();
+
+	if (take_gdk) {
+		gdk_threads_enter();
+
+		OMutex::acquire(); // can race vs. gtk+ grabbing the lock
+		mnThreadId = NAMESPACE_VOS(OThread)::getCurrentIdentifier();
+		mnCount = 1;
+		OMutex::release();
+	}
+
+
+#else
 	OMutex::acquire();
 	mnThreadId = NAMESPACE_VOS(OThread)::getCurrentIdentifier();
 	mnCount++;
+#endif // DISABLE_GTK_INTEGRATION
 }
 
 void SalYieldMutex::release()
 {
+#ifndef DISABLE_GTK_INTEGRATION
+	OMutex::acquire();
+	g_assert( mnThreadId == NAMESPACE_VOS(OThread)::getCurrentIdentifier() );
+	mnCount--;
+	if (mnCount == 0) {
+		mnThreadId = 0;
+		gdk_threads_leave();
+		maUnlocked.set();
+	}
+//	fprintf( stderr, "SalYieldMutex::release (%d)\n", (long) mnThreadId );
+	OMutex::release();
+#else
 	if ( mnThreadId == NAMESPACE_VOS(OThread)::getCurrentIdentifier() )
 	{
 		if ( mnCount == 1 )
@@ -140,10 +199,63 @@ void SalYieldMutex::release()
 		mnCount--;
 	}
 	OMutex::release();
+#endif // DISABLE_GTK_INTEGRATION
+}
+
+#ifndef DISABLE_GTK_INTEGRATION
+void SalYieldMutex::Grab()
+{
+	OMutex::acquire();
+
+	// We know we own the gdk_threads lock:
+	g_assert( !g_mutex_trylock( gdk_threads_mutex ) );
+
+	// Possibly this mutex thinks it's owned by another thread
+	// right now - but it isn't. In that case it will be blocking
+	// in SalYieldMutex::acquire's gdk_threads_enter
+	mnThreadId = NAMESPACE_VOS(OThread)::getCurrentIdentifier();
+	mnCount = 1;
+
+	OMutex::release();
+}
+
+void SalYieldMutex::UnGrab()
+{
+	OMutex::acquire();
+
+	mnThreadId = 0;
+	mnCount = 0;
+
+	OMutex::release();
 }
+#endif // DISABLE_GTK_INTEGRATION
 
 sal_Bool SalYieldMutex::tryToAcquire()
 {
+#ifndef DISABLE_GTK_INTEGRATION
+	sal_Bool success;
+
+	OMutex::acquire();
+
+	if( mnThreadId == NAMESPACE_VOS(OThread)::getCurrentIdentifier() ) {
+		mnCount++;
+		success = TRUE;
+
+	} else if( mnThreadId == 0 ) {
+		mnThreadId = NAMESPACE_VOS(OThread)::getCurrentIdentifier();
+		mnCount++;
+		success = TRUE;
+
+	} else
+		success = FALSE;
+
+//	fprintf( stderr, "SalYieldMutex::tryToAcquire (%d): %d\n",
+//		 (long) mnThreadId, (int) success );
+
+	OMutex::release();
+
+	return success;
+#else
 	if ( OMutex::tryToAcquire() )
 	{
 		mnThreadId = NAMESPACE_VOS(OThread)::getCurrentIdentifier();
@@ -152,7 +264,11 @@ sal_Bool SalYieldMutex::tryToAcquire()
 	}
 	else
 		return False;
+#endif // DISABLE_GTK_INTEGRATION
 }
+
+	void          Grab(void);
+	void          UnGrab(void);
 
 //----------------------------------------------------------------------------
 
Index: vcl/unx/inc/salinst.h
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/salinst.h,v
retrieving revision 1.3
diff -u -p -u -r1.3 salinst.h
--- vcl/unx/inc/salinst.h	14 Jun 2001 13:31:23 -0000	1.3
+++ vcl/unx/inc/salinst.h	21 Aug 2003 13:59:48 -0000
@@ -82,6 +82,9 @@
 #ifndef _VOS_THREAD_HXX
 #include <vos/thread.hxx>
 #endif
+#ifndef _VOS_THREAD_HXX
+#include <vos/conditn.hxx>
+#endif
 
 class SalYieldMutex : public NAMESPACE_VOS(OMutex)
 {
@@ -97,6 +100,13 @@ public:
 
 	ULONG										GetAcquireCount() const { return mnCount; }
 	NAMESPACE_VOS(OThread)::TThreadIdentifier	GetThreadId() const { return mnThreadId; }
+
+#ifndef DISABLE_GTK_INTEGRATION
+	void          Grab(void);
+	void          UnGrab(void);
+ private:
+	vos::OCondition maUnlocked;
+#endif
 };
 
 // -=-= SalInstanceData =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
