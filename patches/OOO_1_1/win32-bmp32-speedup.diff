Index: vcl/win/source/gdi/salbmp.cxx
===================================================================
RCS file: /cvs/gsl/vcl/win/source/gdi/salbmp.cxx,v
retrieving revision 1.2
diff -u -p -u -r1.2 salbmp.cxx
--- vcl/win/source/gdi/salbmp.cxx	28 Jun 2001 13:13:55 -0000	1.2
+++ vcl/win/source/gdi/salbmp.cxx	14 Apr 2004 12:55:57 -0000
@@ -319,7 +319,7 @@ void SalBitmap::Destroy()
 {
 	if( mhDIB )
 		GlobalFree( mhDIB );
-	else if( mhDDB )
+	if( mhDDB )
 		DeleteObject( mhDDB );
 
 	maSize = Size();
@@ -360,11 +360,11 @@ USHORT SalBitmap::ImplGetDIBColorCount( 
 
 HGLOBAL SalBitmap::ImplCreateDIB( const Size& rSize, USHORT nBits, const BitmapPalette& rPal )
 {
-	DBG_ASSERT( nBits == 1 || nBits == 4 || nBits == 8 || nBits == 24, "Unsupported BitCount!" );
+	DBG_ASSERT( nBits == 1 || nBits == 4 || nBits == 8 || nBits == 24 || nBitCount == 32, "Unsupported BitCount!" );
 
 	HGLOBAL hDIB = 0;
 
-	if ( rSize.Width() && rSize.Height() && ( nBits == 1 || nBits == 4 || nBits == 8 || nBits == 24 ) )
+	if ( rSize.Width() && rSize.Height() && ( nBits == 1 || nBits == 4 || nBits == 8 || nBits == 24 || nBits == 32 ) )
 	{
 		const ULONG 	nImageSize = AlignedWidth4Bytes( nBits * rSize.Width() ) * rSize.Height();
 		const USHORT	nColors = ( nBits <= 8 ) ? ( 1 << nBits ) : 0;
@@ -455,6 +455,42 @@ BitmapBuffer* SalBitmap::AcquireBuffer( 
 {
 	BitmapBuffer* pBuffer = NULL;
 
+	if( !mhDIB && mhDDB )
+	{
+		mhDIB = ImplCreateDIB( maSize, mnBitCount, BitmapPalette() );
+
+		if( mhDIB )
+		{
+			PBITMAPINFO pBI = (PBITMAPINFO) GlobalLock( mhDIB );
+			const int	nLines = (int) maSize.Height();
+			HDC 		hDC = GetDC( 0 );
+			PBYTE		pBits = (PBYTE) pBI + *(DWORD*) pBI +
+								ImplGetDIBColorCount( mhDIB ) * sizeof( RGBQUAD );
+			SalData*	pSalData = GetSalData();
+			HPALETTE	hOldPal = 0;
+
+			if ( pSalData->mhDitherPal )
+			{
+				hOldPal = SelectPalette( hDC, pSalData->mhDitherPal, TRUE );
+				RealizePalette( hDC );
+			}
+
+			if( GetDIBits( hDC, mhDDB, 0, nLines, pBits, pBI, DIB_RGB_COLORS ) == nLines )
+				GlobalUnlock( mhDIB );
+			else
+			{
+				GlobalUnlock( mhDIB );
+				GlobalFree( mhDIB );
+				mhDIB = 0;
+			}
+
+			if( hOldPal )
+				SelectPalette( hDC, hOldPal, TRUE );
+
+			ReleaseDC( 0, hDC );
+		}
+	}
+
 	if( mhDIB )
 	{
 		PBITMAPINFO 		pBI = (PBITMAPINFO) GlobalLock( mhDIB );
@@ -496,7 +532,9 @@ BitmapBuffer* SalBitmap::AcquireBuffer( 
 								  pBIH->biBitCount == 8 ? BMP_FORMAT_8BIT_PAL :
 								  pBIH->biBitCount == 16 ? BMP_FORMAT_16BIT_TC_LSB_MASK :
 								  pBIH->biBitCount == 24 ? BMP_FORMAT_24BIT_TC_BGR :
-								  pBIH->biBitCount == 32 ? BMP_FORMAT_32BIT_TC_MASK : 0UL );
+								  //pBIH->biBitCount == 32 ? BMP_FORMAT_32BIT_TC_MASK : 0UL );
+                                  // #i22149# always assume BGRA for 32bit
+								  pBIH->biBitCount == 32 ? BMP_FORMAT_32BIT_TC_BGRA : 0UL );
 
 			if( BMP_SCANLINE_FORMAT( pBuffer->mnFormat ) )
 			{
@@ -543,6 +581,12 @@ BitmapBuffer* SalBitmap::AcquireBuffer( 
 		}
 		else
 			GlobalUnlock( mhDIB );
+	}
+
+	if (!bReadOnly && mhDDB )
+	{
+		DeleteObject( mhDDB );
+		mhDDB = NULL;
 	}
 
 	return pBuffer;
