Index: sc/source/ui/view/viewfunc.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/viewfunc.cxx,v
retrieving revision 1.19
diff -u -p -u -r1.19 viewfunc.cxx
--- sc/source/ui/view/viewfunc.cxx	8 Apr 2003 16:34:56 -0000	1.19
+++ sc/source/ui/view/viewfunc.cxx	30 Jan 2004 15:23:19 -0000
@@ -2114,6 +2114,38 @@ void ScViewFunc::SetMarkedWidthOrHeight(
 	rMark.MarkToSimple();
 }
 
+BOOL ScViewFunc::GetRowColHidden(BOOL col)
+{
+	ScDocument* pDoc = GetViewData()->GetDocument();
+	ScMarkData& rMark = GetViewData()->GetMarkData();
+	USHORT nCol = 0,nRow = 0,nTab = 0, nRangeCnt = 0;
+	USHORT* pRanges = new USHORT[MAXROW+1];
+	BOOL hidden = FALSE;
+
+	if ( col )
+		nRangeCnt = rMark.GetMarkColumnRanges( pRanges ); 
+	else
+		nRangeCnt = rMark.GetMarkRowRanges( pRanges );		
+
+	const USHORT* pTabRanges = pRanges;
+
+	for ( USHORT nRangeNo=0; nRangeNo<nRangeCnt; nRangeNo++ )
+	{
+		USHORT nStartNo = *(pTabRanges++);
+		USHORT nEndNo = *(pTabRanges++);
+		if ( col )
+			hidden = pDoc->IsColHidden(nStartNo,nEndNo,nTab);
+		else
+			hidden = pDoc->IsRowHidden(nStartNo,nEndNo,nTab);
+		/* Even if a single col/row is hidden set the var and break */
+		if ( hidden == TRUE ) 
+			break;
+	}
+
+	delete[] pRanges;
+	return hidden;
+}
+
 void ScViewFunc::ModifyCellSize( ScDirection eDir, BOOL bOptimal )
 {
 	//!	Schrittweiten einstellbar
