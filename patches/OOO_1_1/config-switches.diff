Index: bootstrap.1
===================================================================
RCS file: /cvs/tools/config_office/bootstrap.1,v
retrieving revision 1.13.22.1
diff -u -r1.13.22.1 bootstrap.1
--- config_office/bootstrap.1	17 Sep 2003 03:28:51 -0000	1.13.22.1
+++ config_office/bootstrap.1	20 Oct 2003 23:45:11 -0000
@@ -5,29 +5,32 @@
   setenv EXEEXT ""
 endif
 
-if ( ! -f $SRC_ROOT/dmake/dmake$EXEEXT ) then
+if ( "$BUILD_DMAKE" == "YES" ) then
 
-cd $SRC_ROOT/dmake
-if "$?" != "0" exit $?
+  if ( ! -f $SRC_ROOT/dmake/dmake$EXEEXT ) then
 
-# Special case! The w32/tcsh build needs CC pointing to the MSVC++ compiler
-# but we need a cygwin/gcc build dmake to understand the posix paths
-if ( $GUI == "WNT" && $USE_SHELL == "tcsh" ) then
-  setenv CC ""
-  setenv CXX ""
-endif
+  cd $SRC_ROOT/dmake
+  if "$?" != "0" exit $?
 
-./configure
-if "$?" != "0" exit $?
+  # Special case! The w32/tcsh build needs CC pointing to the MSVC++ compiler
+  # but we need a cygwin/gcc build dmake to understand the posix paths
+  if ( $GUI == "WNT" && $USE_SHELL == "tcsh" ) then
+    setenv CC ""
+    setenv CXX ""
+  endif
 
-## invoke the gnu make command set by configure.
-$GNUMAKE
-if "$?" != "0" exit $?
+  ./configure
+  if "$?" != "0" exit $?
 
-echo ""
-echo "dmake has been successfully built"
+  ## invoke the gnu make command set by configure.
+  $GNUMAKE
+  if "$?" != "0" exit $?
 
-cd ..
+  echo ""
+  echo "dmake has been successfully built"
 
-endif
+  cd ..
 
+  endif
+
+endif
Index: bootstrap.2
===================================================================
RCS file: /cvs/tools/config_office/bootstrap.2,v
retrieving revision 1.14.34.1
diff -u -r1.14.34.1 bootstrap.2
--- config_office/bootstrap.2	17 Sep 2003 03:28:52 -0000	1.14.34.1
+++ config_office/bootstrap.2	20 Oct 2003 23:45:11 -0000
@@ -2,7 +2,9 @@
 # unalias these commands if they are aliased
 
 mkdir -p $SOLARENV/$OUTPATH/bin
-cp -f $SRC_ROOT/dmake/dmake$EXEEXT $SOLARENV/$OUTPATH/bin
+if ( "$BUILD_DMAKE" == "YES" ) then
+    cp -f $SRC_ROOT/dmake/dmake$EXEEXT $SOLARENV/$OUTPATH/bin
+endif
 
 # create a minor.mk file
 
Index: configure.in
===================================================================
RCS file: /cvs/tools/config_office/configure.in,v
retrieving revision 1.55.6.4.2.2
diff -u -r1.55.6.4.2.2 configure.in
--- config_office/configure.in	9 Oct 2003 23:11:21 -0000	1.55.6.4.2.2
+++ config_office/configure.in	20 Oct 2003 23:45:12 -0000
@@ -36,6 +36,22 @@
 AC_ARG_ENABLE(libsn,
 [  --enable-libsn          Enables the use of libstartup-notification
 ],,)
+AC_ARG_ENABLE(fontconfig,
+[  --enable-fontconfig     Enables the use of fontconfig
+],,)
+AC_ARG_WITH(fonts,
+[  --without-fonts        Removes Bitstream Vera fonts from
+                          openoffice.org installation set, for people building
+                          for specific distributions where the fonts are known 
+                          to be already available
+],,)
+AC_ARG_ENABLE(mozilla,
+[  --enable-mozilla       OO.o may include a strangely hacked up mozilla
+			  binary for your platform, to build with this
+			  enabled, use this option.
+ 
+                          Usage: --enable-mozilla
+],,)
 AC_ARG_ENABLE(gcc3,
 [  --enable-gcc3           Deprecated: Now has no effect, checks compiler version
 ],,)
@@ -67,6 +83,40 @@
                           the static libraries instead of the dynmaic ones. 
                           (enables -Bstatic linker flag for gtk libraries)
 ],,)
+AC_ARG_ENABLE(rpath,
+[  --disable-rpath:        Disable the use of relative paths in shared libraries
+],,)
+AC_ARG_WITH(system-zlib,
+[  --with-system-zlib      Use zlib already on system
+],,)
+AC_ARG_WITH(system-nas,
+[  --with-system-nas       Use nas already on system
+],,)
+AC_ARG_WITH(system-freetype,
+   --with-system-freetype  Use freetype already on system
+],,)
+AC_ARG_WITH(system-db,
+[  --with-system-db        Use berkeleydb already on system
+],,)
+AC_ARG_WITH(db-version,
+[  --with-db-version=VERSION       Specify db version manually ],
+[	DB_VERSION="$withval"
+	DB_VERSION_MAJOR=$(echo $DB_VERSION | cut -d"." -f1)
+])
+AC_ARG_WITH(db-jar,
+[  --with-db-jar=JARFILE          Specify path to jarfile manually ],
+[ DB_JAR="$withval"
+])
+AC_ARG_WITH(system-sane,
+[  --with-system-sane-headers      Use sane.h already on system
+],,)
+AC_ARG_WITH(system-curl,
+[  --with-system-curl      Use curl already on system
+],,)
+AC_ARG_WITH(system-libs,
+[  --with-system-libs      Use libs already on system (enables all
+                           --with-system-* (_not_ -headers)
+],,)
 AC_ARG_WITH(stlport4-home,
 [  --with-stlport4-home    The location that STLport4 is installed in. The STL
                           header files are assumed to be in stlport4-home/stlport
@@ -108,6 +158,12 @@
  
                           Usage: --with-perl-home=<absolute path to Perl 5 home>
 ],,)
+AC_ARG_WITH(python,
+[  --with-python           If you want to use the Python on your system, instead of
+                          the internal version included in the source, use this flag.
+
+                          Usage: --with-python[=path-to-python]
+],,)
 AC_ARG_WITH(cl-home,
 [  --with-cl-home          For Windows NT users, please supply the path
                           for the Microsoft C/C++ compiler. 
@@ -418,6 +474,16 @@
 AC_SUBST(ENABLE_SYMBOLS)
 
 dnl ===================================================================
+dnl Disable rpath in shared libraries?
+dnl ===================================================================
+if test "$enable_rpath" = "no"; then
+   ENABLE_RPATH="no"
+else
+   ENABLE_RPATH="yes"
+fi
+AC_SUBST(ENABLE_RPATH)
+
+dnl ===================================================================
 dnl WINNT uses either 4nt or tcsh, all other O/S use tcsh.
 dnl The following sets the with_use_shell variable.
 dnl ===================================================================
@@ -1283,6 +1349,197 @@
 AC_SUBST(TCSH)
 
 dnl ===================================================================
+dnl Check whether we already have dmake
+dnl ===================================================================
+AC_PATH_PROG(DMAKE, dmake, no)
+if test "$DMAKE" = "no"; then
+    BUILD_DMAKE=YES
+else
+    AC_MSG_CHECKING([whether the found dmake is the right dmake])
+    # we need to find out whether that dmake we found is "our" dmake
+    # or the dmake from Sun's Workshop Compiler which is something
+    # different
+    # This test _should_ work because the one accepts -V (ours) and one
+    # (the other) not...
+    dmake -V 2>/dev/null | grep 'dmake .* Version 4.*, PL ' >/dev/null
+    if test $? -eq 0; then 
+       AC_MSG_RESULT([yes])
+    else
+       AC_MSG_RESULT([no])
+       BUILD_DMAKE=YES
+    fi
+fi
+AC_SUBST(BUILD_DMAKE)
+
+dnl ===================================================================
+dnl Check for system python
+dnl ===================================================================
+AC_MSG_CHECKING([which python to use])
+if test -n "$with_python"; then
+    AC_MSG_RESULT([external])
+    if test "$with_python" != "yes"; then
+        PYTHON="$with_python"
+    fi
+    AM_PATH_PYTHON([2.2])
+else
+    AC_MSG_RESULT([internal])
+    SCPDEFS="$SCPDEFS -DWITH_PYTHON"
+fi
+AC_SUBST(PYTHON)
+AC_SUBST(PYTHON_VERSION)
+
+dnl ===================================================================
+dnl Check for system zlib
+dnl ===================================================================
+AC_MSG_CHECKING([which zlib to use])
+if test -n "$with_system_zlib" -o -n "$with_system_libs"; then
+    AC_MSG_RESULT([external])
+    SYSTEM_ZLIB=YES
+    AC_CHECK_HEADER(zlib.h, [],
+        [AC_MSG_ERROR(zlib.h not found. install zlib)], [])
+    AC_CHECK_LIB(z, deflate, [ ZLIB=-lz ],
+        [AC_MSG_ERROR(zlib not found or functional)], [])
+else
+    AC_MSG_RESULT([internal])
+    SYSTEM_ZLIB=NO
+    ZLIB=-lzlib
+fi
+AC_SUBST(SYSTEM_ZLIB)
+AC_SUBST(ZLIB)
+
+dnl ===================================================================
+dnl Check for system nas
+dnl ===================================================================
+AC_MSG_CHECKING([which nas to use])
+if test -n "$with_system_nas" -o -n "$with_system_libs"; then
+    AC_MSG_RESULT([external])
+    SYSTEM_NAS=YES
+    AC_CHECK_HEADER(audio/audiolib.h, [ NAS_INCLUDES=/usr/include ],
+        [
+             CFLAGS=-I/usr/X11R6/include
+             AC_CHECK_HEADER(audio/audiolib.h,
+                 [ NAS_INCLUDES=/usr/X11R6/include ],
+                 [ AC_MSG_ERROR(no. install nas) ], []
+             )
+        ], []
+    )
+    AC_CHECK_LIB(audio, AuOpenServer, [],
+        [AC_MSG_ERROR(nas not found or functional)], [])
+else
+    AC_MSG_RESULT([internal])
+    SYSTEM_BAS=NO
+fi
+AC_SUBST(SYSTEM_NAS)
+AC_SUBST(NAS_INCLUDES)
+
+dnl ===================================================================
+dnl Check for system curl
+dnl ===================================================================
+AC_MSG_CHECKING([which curl to use])
+if test -n "$with_system_curl" -o -n "$with_system_libs"; then
+    AC_MSG_RESULT([external])
+    SYSTEM_CURL=YES
+    AC_CHECK_HEADER(curl/curl.h, [],
+    [ AC_MSG_ERROR([curl headers not found. install curl])], [])
+    AC_CHECK_LIB(curl, curl_easy_setopt, [],
+       [AC_MSG_ERROR(curl not found or functional)], [])
+    SCPDEFS="$SCPDEFS -DSYSTEM_CURL"
+else
+    AC_MSG_RESULT([internal])
+    SYSTEM_CURL=NO
+fi
+AC_SUBST(SYSTEM_CURL)
+AC_SUBST(SCPDEFS)
+
+dnl ===================================================================
+dnl Check for system db
+dnl ===================================================================
+AC_MSG_CHECKING([which db to use])
+if test -n "$with_system_db" -o -n "$with_system_libs"; then
+    SYSTEM_DB=YES
+    AC_MSG_RESULT([external])
+    AC_CHECK_FILE(/usr/lib/libdb_cxx.so, [],
+       [AC_MSG_ERROR(no. install db)])
+    AC_MSG_CHECKING([which db version to use])
+    if test -z $DB_VERSION && test -z $DB_VERSION_MAJOR; then
+      # (almost) all db packages (rpm/deb) I saw have this link pointing to
+      # libdb-cxx_X.so where X is the first two digits of the db version ..
+      # and because of that two versions cannot be installed at the same time..
+      DB_VERSION=$(readlink /usr/lib/libdb_cxx.so \
+	  | $SED -e s/libdb_cxx-// | $SED -e s/\.so//)
+      DB_VERSION_MAJOR=$(echo $DB_VERSION | cut -d"." -f1)
+    fi
+    AC_MSG_RESULT(db$DB_VERSION_MAJOR version $DB_VERSION)
+    AC_LANG(C++)
+    AC_CHECK_HEADER(db_cxx.h, [ DB_INCLUDES=/usr/include ],
+        [
+             CFLAGS=-I/usr/include/db$DB_VERSION_MAJOR
+             AC_CHECK_HEADER(db$DB_VERSION_MAJOR/db_cxx.h,
+             [ DB_INCLUDES=/usr/include/db$DB_VERSION_MAJOR ],
+             [ AC_MSG_ERROR(no. install the dbDB_VERSION_MAJOR libraries) ], []
+             )
+        ], []
+    )
+     if test "$enable_java" != "no"; then
+       if test -z $DB_JAR; then
+	  # three different naming methods *grumble* Are there even more?
+         AC_CHECK_FILE(/usr/share/java/db.jar, [ JARVER=0 ],
+           [
+             AC_CHECK_FILE(/usr/share/java/db-$DB_VERSION.jar, [ JARVER=1 ],
+               [ AC_CHECK_FILE(/usr/share/java/libdb$DB_VERSION-java.jar,
+                   [ JARVER_LONGSTYLE=1 ],
+                   [ AC_MSG_ERROR(db$DB_VERSION_MAJOR Java bindings not found)]
+                 )
+               ]
+             )
+           ]
+         )
+         if test "$JARVER" = "1"; then
+           DB_JAR=jar-$DB_VERSION.jar
+         else
+           DB_JAR=db.jar
+         fi
+         if test "$JARVER_LONGSTYLE" = "1"; then
+           DB_JAR=libdb$DB_VERSION-java.jar
+         fi
+       fi
+    fi
+    SCPDEFS="$SCPDEFS -DSYSTEM_DB"
+else
+    AC_MSG_RESULT([internal])
+    SYSTEM_DB=NO
+    DB_VERSION=$(ls -1 ../berkeleydb/download/db* \
+       | $SED -e s,\.\./berkeleydb/download/db-,, | $SED -e s,\.tar\.gz,, \
+       | cut -d"." -f1,2)
+    DB_VERSION_MAJOR=$(echo $DB_VERSION | cut -d"." -f1)
+    DB_JAR=db.jar
+fi
+SCPDEFS="$SCPDEFS -DDB_VERSION=$DB_VERSION"
+AC_SUBST(SYSTEM_DB)
+AC_SUBST(DB_INCLUDES)
+AC_SUBST(DB_VERSION)
+AC_SUBST(DB_VERSION_MAJOR)
+AC_SUBST(DB_JAR)
+AC_SUBST(SCPDEFS)
+
+dnl ===================================================================
+dnl Check for system sane
+dnl ===================================================================
+AC_MSG_CHECKING([which sane.h to use])
+if test -n "$with_system_sane_headers"; then
+    AC_MSG_RESULT([external])
+    SYSTEM_SANE_H=YES
+    AC_CHECK_HEADER(sane/sane.h, [],
+        [AC_MSG_ERROR(sane.h not found. install the sane headers)], [])
+else
+    AC_MSG_RESULT([internal])
+    SYSTEM_SANE_H=NO
+    SANE=" sane"
+fi
+AC_SUBST(SANE)
+AC_SUBST(SYSTEM_SANE_H)
+
+dnl ===================================================================
 dnl Check whether the gtk 2.0 libraries are available.
 dnl ===================================================================
 if test -n "$ENABLE_CRASHDUMP" ; then
@@ -1294,6 +1551,53 @@
 fi
 
 dnl ===================================================================
+dnl Check whether we want to use fontconfig and if the library is
+dnl available.
+dnl ===================================================================
+AC_MSG_CHECKING([whether to use fontconfig])
+if test -n "$enable_fontconfig"; then
+    AC_MSG_RESULT([yes])
+    PKG_CHECK_MODULES( FONTCONFIG, fontconfig >= 1.0.1 )
+    FONTCONFIG_FONTS=YES
+else
+    AC_MSG_RESULT([no])
+    FONTCONFIG_FONTS=NO
+fi
+AC_SUBST(FONTCONFIG_FONTS)
+AC_SUBST(FONTCONFIG_LIBS)
+
+dnl ===================================================================
+dnl Check for system freetype
+dnl ===================================================================
+AC_MSG_CHECKING([which freetype to use])
+if test -n "$with_system_freetype" -o -n "$with_system_libs"; then
+    AC_MSG_RESULT([external])
+    SYSTEM_FREETYPE=YES
+    USE_FREETYPE_CONFIG=NO
+    PKG_CHECK_MODULES( FREETYPE, freetype2,
+        [ USE_FREETYPE_CONFIG=NO ],
+        [ 
+            AC_PATH_PROG( FREETYPE_CONFIG, freetype-config )
+            if test -f "$FREETYPE_CONFIG"; then
+                USE_FREETYPE_CONFIG=YES
+            fi
+        ]
+    )
+    if test "$USE_FREETYPE_CONFIG" = "YES"; then
+        FREETYPE_LIBS=$(freetype-config --libs)
+        FREETYPE_CFLAGS=$(freetype-config --cflags)
+    fi
+    SCPDEFS="$SCPDEFS -DSYSTEM_FREETYPE"
+else
+    AC_MSG_RESULT([internal])
+    SYSTEM_FREETYPE=NO
+fi
+AC_SUBST(SYSTEM_FREETYPE)
+AC_SUBST(FREETYPE_LIBS)
+AC_SUBST(FREETYPE_CFLAGS)
+AC_SUBST(SCPDEFS)
+
+dnl ===================================================================
 dnl Checks for libraries.
 dnl ===================================================================
 dnl Check for Mac OS X native GUI, which may be used instead of X11.
@@ -1617,6 +1917,36 @@
 AC_SUBST(WITH_LIBSN)
 AC_SUBST(LIBSN_CFLAGS)
 AC_SUBST(LIBSN_LIBS)
+
+dnl ===================================================================
+dnl Disable mozilla if we can
+dnl ===================================================================
+
+AC_MSG_CHECKING([whether to build mozilla connectivity])
+if test -n "$enable_mozilla"; then
+   AC_MSG_RESULT([yes])
+   WITH_MOZILLA=YES
+else
+   AC_MSG_RESULT([no])
+   WITH_MOZILLA=NO
+   SCPDEFS="$SCPDEFS -DWITHOUT_MOZILLA"
+fi
+AC_SUBST(WITH_MOZILLA)
+
+dnl ===================================================================
+dnl Test whether to include fonts
+dnl ===================================================================
+AC_MSG_CHECKING([whether to include Bitstream Vera fonts])
+if test "$with_fonts" != "no" ; then
+  AC_MSG_RESULT([yes])
+  WITH_FONTS=YES
+  SCPDEFS="$SCPDEFS -DWITH_FONTS"
+else
+  AC_MSG_RESULT([no])
+  WITH_FONTS=NO
+fi
+AC_SUBST(WITH_FONTS)
+AC_SUBST(SCPDEFS)
 
 dnl ===================================================================
 dnl Test for the presence of Ant and that it works
Index: set_soenv.in
===================================================================
RCS file: /cvs/tools/config_office/set_soenv.in,v
retrieving revision 1.10.6.2.4.5
diff -u -r1.10.6.2.4.5 set_soenv.in
--- config_office/set_soenv.in	17 Oct 2003 20:55:32 -0000	1.10.6.2.4.5
+++ config_office/set_soenv.in	20 Oct 2003 23:45:16 -0000
@@ -1690,6 +1690,7 @@
   }
 }
 ToFile( "SOLARDEF",          $SOLARDEF,          "e" );
+ToFile( "SCPDEFS",           '@SCPDEFS@',        "e" );
 ToFile( "SOLAREXTRAINC",     $SOLAREXTRAINC,     "e" );
 ToFile( "SOLAREXTRALIB",     $SOLAREXTRALIB,     "e" );
 ToFile( "SOLARINCLUDES",     $SOLARINCLUDES,     "e" );
@@ -1714,6 +1715,31 @@
 ToFile( "WITH_LIBSN",        "@WITH_LIBSN@",       "e" );
 ToFile( "LIBSN_CFLAGS",      "@LIBSN_CFLAGS@",     "e" );
 ToFile( "LIBSN_LIBS",        "@LIBSN_LIBS@",       "e" );
+ToFile( "WITH_MOZILLA",      "@WITH_MOZILLA@",     "e" );
+ToFile( "WITH_FONTS",        "@WITH_FONTS@",       "e" );
+ToFile( "SYSTEM_PYTHON",     "@PYTHON@",           "e" );
+ToFile( "PYTHON_VERSION",    "@PYTHON_VERSION@",   "e" );
+if ( '@ENABLE_RPATH@' eq "no" ) {
+  ToFile( "LINKFLAGSRUNPATH",'',                   "e" );
+}
+ToFile( "SYSTEM_ZLIB",       "@SYSTEM_ZLIB@",      "e" );
+ToFile( "ZLIB",              "@ZLIB@",             "e" );
+ToFile( "SYSTEM_NAS",        "@SYSTEM_NAS@",       "e" );
+ToFile( "NAS_INCLUDES",      "@NAS_INCLUDES@",     "e" );
+ToFile( "FONTCONFIG_FONTS",  "@FONTCONFIG_FONTS@", "e" );
+ToFile( "FONTCONFIG_LIBS",   "@FONTCONFIG_LIBS@",  "e" );
+ToFile( "SYSTEM_FREETYPE",   "@SYSTEM_FREETYPE@",  "e" );
+ToFile( "FREETYPE_LIBS",     "@FREETYPE_LIBS@",    "e" );
+ToFile( "FREETYPE_CFLAGS",   "@FREETYPE_CFLAGS@",  "e" );
+ToFile( "BUILD_DMAKE",       "@BUILD_DMAKE@",      "e" );
+ToFile( "SYSTEM_DB",         "@SYSTEM_DB@",        "e" );
+ToFile( "DB_VERSION",        "@DB_VERSION@",       "e" );
+ToFile( "DB_INCLUDES",       "@DB_INCLUDES@",      "e" );
+ToFile( "SYSTEM_CURL",       "@SYSTEM_CURL@",      "e" );
+ToFile( "SANE",              "@SANE@",             "e" );
+ToFile( "SYSTEM_SANE_H",     "@SYSTEM_SANE_H@",    "e" );
+ToFile( "GTK_LIBS",          "@GTK_LIBS@",         "e" );
+ToFile( "GTK_CFLAGS",        "@GTK_CFLAGS@",       "e" );
 ToFile( "GXX_INCLUDE_PATH",  "@GXX_INCLUDE_PATH@", "e" );
 ToFile( "COMMON_BUILD_TOOLS",$COMMON_BUILD_TOOLS,  "e" );
 if ($platform ne "$Winnt")
Index: configure.in
===================================================================
RCS file: /cvs/tools/config_office/configure.in,v
retrieving revision 1.55.6.4.2.8
diff -u -r1.55.6.4.2.8 configure.in
--- config_office/configure.in	8 Nov 2003 08:28:53 -0000	1.55.6.4.2.8
+++ config_office/configure.in	11 Nov 2003 21:49:50 -0000
@@ -1848,6 +1848,8 @@
 AC_SUBST(WITH_MINGWIN)
 
 AC_OUTPUT([set_soenv])
+AC_OUTPUT(../berkeleydb/prj/d.lst \
+../extensions/prj/build.lst)
 
 dnl Executing the set_soenv script to setup the environment variables.
 chmod a+x set_soenv
--- config_office/configure.in	12 Dec 2003 13:45:13 -0000	1.55.6.4.12.1
+++ config_office/configure.in	21 Dec 2003 21:12:23 -0000
@@ -839,16 +839,11 @@
 AC_HEADER_STDC
 
 dnl ===================================================================
-dnl Check if pam-appl.h is available on Linux or FreeBSD
+dnl Check if pam_appl.h is available on Linux or FreeBSD
 dnl ===================================================================
 if test "$_os" = "Linux" -o "$_os" = "FreeBSD" -o "$_os" = "GNU"; then
-   AC_MSG_CHECKING([pam_appl.h])
-   if test -f "/usr/include/security/pam_appl.h"; then
-      AC_MSG_RESULT([yes])
-   else
-      AC_MSG_WARN([pam_appl.h could not be found in /usr/include/security])
-      echo "pam_appl.h could not be found in /usr/include/security" >> warn
-   fi
+   AC_CHECK_HEADER(security/pam_appl.h, [],
+   [AC_MSG_ERROR([pam_appl.h could not be found. libpam-dev missing?])], [])
 fi
 
 dnl ===================================================================
