Index: svx/source/msfilter/escherex.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/msfilter/escherex.cxx,v
retrieving revision 1.40
retrieving revision 1.40.170.1
diff -u -p -u -r1.40 -r1.40.170.1
--- svx/source/msfilter/escherex.cxx	1 Dec 2003 18:14:20 -0000	1.40
+++ svx/source/msfilter/escherex.cxx	29 Mar 2004 15:45:16 -0000	1.40.170.1
@@ -2518,10 +2518,7 @@ void EscherSolverContainer::WriteSolver(
 EscherEx::EscherEx( SvStream& rOutStrm, UINT32 nDrawings ) :
 	EscherGraphicProvider	( 0 ),
 	mpOutStrm				( &rOutStrm ),
-	mpOffsets				( new sal_uInt32[ 32 ] ),
-	mpRecTypes				( new sal_uInt16[ 32 ] ),
 	mnDrawings				( nDrawings ),
-	mnLevel					( 0 ),
 	mbEscherSpgr			( FALSE ),
 	mbEscherDgg				( FALSE ),										// TRUE, wenn jemals ein ESCHER_Dgg angelegt wurde, dieser wird dann im Dest. aktualisiert
 	mbEscherDg				( FALSE ),
@@ -2564,8 +2561,6 @@ void EscherEx::Flush( SvStream* pPicStre
 
 EscherEx::~EscherEx()
 {
-	delete[] mpRecTypes;
-	delete[] mpOffsets;
 	delete mpImplEscherExSdr;
 }
 
@@ -2599,12 +2594,13 @@ void EscherEx::InsertAtCurrentPos( UINT3
 		else
 			mpOutStrm->SeekRel( nSize );
 	}
-
-	// Container Offsets verschieben
-	for ( i = 1; i <= (UINT32)mnLevel; i++ )
-	{
-		if ( mpOffsets[ i ] > nCurPos )
-			mpOffsets[ i ] += nBytes;
+	std::vector< sal_uInt32 >::iterator aIter( mOffsets.begin() );
+	std::vector< sal_uInt32 >::iterator aEnd( mOffsets.end() );
+	while( aIter != aEnd )
+	{
+		if ( *aIter > nCurPos )
+			*aIter += nBytes;
+		aIter++;
 	}
 	mpOutStrm->Seek( STREAM_SEEK_TO_END );
 	nSource = mpOutStrm->Tell();
@@ -2694,9 +2690,8 @@ BOOL EscherEx::InsertAtPersistOffset( UI
 void EscherEx::OpenContainer( UINT16 nEscherContainer, int nRecInstance )
 {
 	*mpOutStrm << (UINT16)( ( nRecInstance << 4 ) | 0xf  ) << nEscherContainer << (UINT32)0;
-	mpOffsets[ ++mnLevel ] = mpOutStrm->Tell() - 4;
-	mpRecTypes[ mnLevel ] = nEscherContainer;
-
+	mOffsets.push_back( mpOutStrm->Tell() - 4 );
+	mRecTypes.push_back( nEscherContainer );
 	switch( nEscherContainer )
 	{
 		case ESCHER_DggContainer :
@@ -2767,11 +2762,11 @@ void EscherEx::OpenContainer( UINT16 nEs
 void EscherEx::CloseContainer()
 {
 	sal_uInt32 nSize, nPos = mpOutStrm->Tell();
-	nSize = ( nPos - mpOffsets[ mnLevel ] ) - 4;
-	mpOutStrm->Seek( mpOffsets[ mnLevel ] );
+	nSize = ( nPos - mOffsets.back() ) - 4;
+	mpOutStrm->Seek( mOffsets.back() );
 	*mpOutStrm << nSize;
 
-	switch( mpRecTypes[ mnLevel ] )
+	switch( mRecTypes.back() )
 	{
 		case ESCHER_DgContainer :
 		{
@@ -2838,7 +2833,8 @@ void EscherEx::CloseContainer()
 		default:
 		break;
 	}
-	mnLevel--;
+	mOffsets.pop_back();
+	mRecTypes.pop_back();
 	mpOutStrm->Seek( nPos );
 }
 
Index: svx/inc/escherex.hxx
===================================================================
RCS file: /cvs/graphics/svx/inc/escherex.hxx,v
retrieving revision 1.15
diff -u -p -u -r1.15 escherex.hxx
--- svx/inc/escherex.hxx	1 Nov 2002 13:35:13 -0000	1.15
+++ svx/inc/escherex.hxx	30 Mar 2004 11:48:51 -0000
@@ -95,6 +95,7 @@
 #ifndef _COM_SUN_STAR_BEANS_XPROPERTYSTATE_HPP_
 #include <com/sun/star/beans/XPropertyState.hpp>
 #endif
+#include <vector>
 
 		/*Record Name       FBT-Value   Instance                  Contents                                                          Wrd Exl PPt Ver*/
 // In der Mickysoft-Doku heissen die msofbt... statt ESCHER_...
@@ -1318,9 +1319,8 @@ class EscherEx : public EscherPersistTab
 		SvStream*				mpOutStrm;
 		ImplEscherExSdr*		mpImplEscherExSdr;
 		UINT32					mnStrmStartOfs;
-		int						mnLevel;
-		UINT32*					mpOffsets;
-		UINT16*					mpRecTypes;					// nimmt die Container RecTypes auf
+		std::vector<UINT32>		mOffsets;
+		std::vector<UINT16>		mRecTypes;					// nimmt die Container RecTypes auf
 
 		UINT32					mnDrawings;
 		UINT32					mnFIDCLs;					// anzahl der cluster ID's
Index: sd/source/filter/eppt/escherex.cxx
===================================================================
RCS file: /cvs/graphics/sd/source/filter/eppt/escherex.cxx,v
retrieving revision 1.8
retrieving revision 1.8.402.2
diff -u -p -u -r1.8 -r1.8.402.2
--- sd/source/filter/eppt/escherex.cxx	12 Dec 2000 17:32:48 -0000	1.8
+++ sd/source/filter/eppt/escherex.cxx	30 Mar 2004 16:05:26 -0000	1.8.402.2
@@ -212,8 +212,8 @@ PptEscherEx::~PptEscherEx()
 void PptEscherEx::OpenContainer( UINT16 n_EscherContainer, int nRecInstance )
 {
 	*mpOutStrm << (UINT16)( ( nRecInstance << 4 ) | 0xf  ) << n_EscherContainer << (UINT32)0;
-	mpOffsets[ ++mnLevel ] = mpOutStrm->Tell() - 4;
-	mpRecTypes[ mnLevel ] = n_EscherContainer;
+	mOffsets.push_back( mpOutStrm->Tell() - 4 );
+	mRecTypes.push_back( n_EscherContainer );
 
 	switch( n_EscherContainer )
 	{
@@ -258,111 +258,126 @@ void PptEscherEx::OpenContainer( UINT16 
 
 void PptEscherEx::CloseContainer()
 {
-	UINT32 nSize, nPos = mpOutStrm->Tell();
-	nSize = ( nPos - mpOffsets[ mnLevel ] ) - 4;
-	mpOutStrm->Seek( mpOffsets[ mnLevel ] );
-	*mpOutStrm << nSize;
-
-	switch( mpRecTypes[ mnLevel ] )
+	/* SJ: #Issue 26747#
+	   not creating group objects with a depth higher than 16, because then
+	   PPT is having a big performance problem when starting a slide show
+	*/
+	if ( ( mRecTypes.back() != ESCHER_SpgrContainer ) || ( mnGroupLevel < 12 ) )
 	{
-		case ESCHER_DgContainer :
+		UINT32 nSize, nPos = mpOutStrm->Tell();
+		nSize = ( nPos - mOffsets.back() ) - 4;
+		mpOutStrm->Seek( mOffsets.back() );
+		*mpOutStrm << nSize;
+
+		switch( mRecTypes.back() )
 		{
-			if ( mbEscherDg )
+			case ESCHER_DgContainer :
 			{
-				mbEscherDg = FALSE;
-				if ( DoSeek( ESCHER_Persist_Dg | mnCurrentDg ) )
+				if ( mbEscherDg )
 				{
-					// shapeanzahl des drawings setzen
-					mnTotalShapesDgg += mnTotalShapesDg;
-					*mpOutStrm << mnTotalShapesDg << mnCurrentShapeMaximumID;
-
-					if ( !mnTotalShapesDg )
-					{
-						maFIDCLs << (UINT32)0
-								 << (UINT32)0;
-					}
-					else
+					mbEscherDg = FALSE;
+					if ( DoSeek( ESCHER_Persist_Dg | mnCurrentDg ) )
 					{
-						if ( mnTotalShapeIdUsedDg )
+						// shapeanzahl des drawings setzen
+						mnTotalShapesDgg += mnTotalShapesDg;
+						*mpOutStrm << mnTotalShapesDg << mnCurrentShapeMaximumID;
+
+						if ( !mnTotalShapesDg )
+						{
+							maFIDCLs << (UINT32)0
+									<< (UINT32)0;
+						}
+						else
 						{
-							UINT32 i, nFIDCL = ( ( mnTotalShapeIdUsedDg - 1 ) / 0x400 );
-							if ( nFIDCL )
-								mnFIDCLs += nFIDCL;
-							for ( i = 0; i <= nFIDCL; i++ )
+							if ( mnTotalShapeIdUsedDg )
 							{
-								maFIDCLs << mnCurrentDg;			// drawing number
-								if ( i < nFIDCL )
-									maFIDCLs << 0x400;
-								else
+								UINT32 i, nFIDCL = ( ( mnTotalShapeIdUsedDg - 1 ) / 0x400 );
+								if ( nFIDCL )
+									mnFIDCLs += nFIDCL;
+								for ( i = 0; i <= nFIDCL; i++ )
 								{
-									UINT32 nShapesLeft = mnTotalShapeIdUsedDg % 0x400;
-									if ( !nShapesLeft )
-										nShapesLeft = 0x400;		// shape count in this IDCL
-									maFIDCLs << (UINT32)nShapesLeft;
+									maFIDCLs << mnCurrentDg;			// drawing number
+									if ( i < nFIDCL )
+										maFIDCLs << 0x400;
+									else
+									{
+										UINT32 nShapesLeft = mnTotalShapeIdUsedDg % 0x400;
+										if ( !nShapesLeft )
+											nShapesLeft = 0x400;		// shape count in this IDCL
+										maFIDCLs << (UINT32)nShapesLeft;
+									}
 								}
 							}
 						}
 					}
 				}
 			}
-		}
-		break;
+			break;
 
-		case ESCHER_SpgrContainer :
-		{
-			if ( mbEscherSpgr )
+			case ESCHER_SpgrContainer :
 			{
-				mbEscherSpgr = FALSE;
+				if ( mbEscherSpgr )
+				{
+					mbEscherSpgr = FALSE;
 
+				}
 			}
-		}
-		break;
+			break;
 
-		default:
-		break;
+			default:
+			break;
+		}
+		mOffsets.pop_back();
+		mRecTypes.pop_back();
+		mpOutStrm->Seek( nPos );
 	}
-	--mnLevel;
-	mpOutStrm->Seek( nPos );
 }
 
 // ---------------------------------------------------------------------------------------------
 
 void PptEscherEx::EnterGroup( Rectangle* pBoundRect, SvMemoryStream* pClientData )
 {
-	Rectangle aRect;
-	if ( pBoundRect )
-		aRect = *pBoundRect;
-
-	OpenContainer( ESCHER_SpgrContainer );
-	OpenContainer( ESCHER_SpContainer );
-	AddAtom( 16, ESCHER_Spgr, 1 );
-	PtReplaceOrInsert( ESCHER_Persist_Grouping_Snap | mnGroupLevel, mpOutStrm->Tell() );
-	*mpOutStrm	<< (INT32)aRect.Left()	// Bounding box fuer die Gruppierten shapes an die sie attached werden
-				<< (INT32)aRect.Top()
-				<< (INT32)aRect.Right()
-				<< (INT32)aRect.Bottom();
-
-	if ( !mnGroupLevel )
-		AddShape( ESCHER_ShpInst_Min, 5 );								// Flags: Group | Patriarch
-	else
+	/* SJ: #Issue 26747#
+	   not creating group objects with a depth higher than 16, because then
+	   PPT is having a big performance problem when starting a slide show
+	*/
+	if ( mnGroupLevel < 12 )
 	{
-		AddShape( ESCHER_ShpInst_Min, 0x201 );							// Flags: Group | HaveAnchor
-		AddAtom( 8, ESCHER_ClientAnchor );
-		PtReplaceOrInsert( ESCHER_Persist_Grouping_Logic | mnGroupLevel, mpOutStrm->Tell() );
-		*mpOutStrm << (INT16)aRect.Top() << (INT16)aRect.Left() << (INT16)aRect.Right() << (INT16)aRect.Bottom();
-	}
-	if ( pClientData )
-	{
-		pClientData->Seek( STREAM_SEEK_TO_END );
-		sal_uInt32 nSize = pClientData->Tell();
-		if ( nSize )
+		Rectangle aRect;
+		if ( pBoundRect )
+			aRect = *pBoundRect;
+
+		OpenContainer( ESCHER_SpgrContainer );
+		OpenContainer( ESCHER_SpContainer );
+		AddAtom( 16, ESCHER_Spgr, 1 );
+		PtReplaceOrInsert( ESCHER_Persist_Grouping_Snap | mnGroupLevel, mpOutStrm->Tell() );
+		*mpOutStrm	<< (INT32)aRect.Left()	// Bounding box fuer die Gruppierten shapes an die sie attached werden
+					<< (INT32)aRect.Top()
+					<< (INT32)aRect.Right()
+					<< (INT32)aRect.Bottom();
+
+		if ( !mnGroupLevel )
+			AddShape( ESCHER_ShpInst_Min, 5 );								// Flags: Group | Patriarch
+		else
+		{
+			AddShape( ESCHER_ShpInst_Min, 0x201 );							// Flags: Group | HaveAnchor
+			AddAtom( 8, ESCHER_ClientAnchor );
+			PtReplaceOrInsert( ESCHER_Persist_Grouping_Logic | mnGroupLevel, mpOutStrm->Tell() );
+			*mpOutStrm << (INT16)aRect.Top() << (INT16)aRect.Left() << (INT16)aRect.Right() << (INT16)aRect.Bottom();
+		}
+		if ( pClientData )
 		{
-			*mpOutStrm << (sal_uInt32)( ( ESCHER_ClientData << 16 ) | 0xf )
-					   << nSize;
-			mpOutStrm->Write( pClientData->GetData(), nSize );
+			pClientData->Seek( STREAM_SEEK_TO_END );
+			sal_uInt32 nSize = pClientData->Tell();
+			if ( nSize )
+			{
+				*mpOutStrm << (sal_uInt32)( ( ESCHER_ClientData << 16 ) | 0xf )
+						<< nSize;
+				mpOutStrm->Write( pClientData->GetData(), nSize );
+			}
 		}
+		CloseContainer();												// ESCHER_SpContainer
 	}
-	CloseContainer();												// ESCHER_SpContainer
 	mnGroupLevel++;
 }
 
