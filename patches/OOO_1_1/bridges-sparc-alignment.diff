Index: source/cpp_uno/gcc3_linux_sparc/cpp2uno.cxx
===================================================================
RCS file: /cvs/udk/bridges/source/cpp_uno/gcc3_linux_sparc/cpp2uno.cxx,v
retrieving revision 1.2
diff -u -u -r1.2 cpp2uno.cxx
--- bridges/source/cpp_uno/gcc3_linux_sparc/cpp2uno.cxx	28 Apr 2003 16:28:42 -0000	1.2
+++ bridges/source/cpp_uno/gcc3_linux_sparc/cpp2uno.cxx	10 Feb 2004 10:50:00 -0000
@@ -163,8 +163,21 @@
 			{
 			case typelib_TypeClass_HYPER:
 			case typelib_TypeClass_UNSIGNED_HYPER:
-			case typelib_TypeClass_DOUBLE:
-				pCppStack += sizeof(sal_Int32); // extra long
+            		case typelib_TypeClass_DOUBLE:
+            		{
+			if ((reinterpret_cast< long >(pCppStack) & 7) != 0)
+              		{
+		   		OSL_ASSERT( sizeof (double) == sizeof (sal_Int64) );
+                   		void * pDest = alloca( sizeof (sal_Int64) );
+                  	 	*reinterpret_cast< sal_Int32 * >(pDest) =
+                   		*reinterpret_cast< sal_Int32 const * >(pCppStack);
+                   		*(reinterpret_cast< sal_Int32 * >(pDest) + 1) =
+                   		*(reinterpret_cast< sal_Int32 const * >(pCppStack) + 1);
+                   		pCppArgs[nPos] = pUnoArgs[nPos] = pDest;
+			}
+		   	pCppStack += sizeof (sal_Int32); // extra long
+                   	break;
+			}
 			}
 			// no longer needed
 			TYPELIB_DANGER_RELEASE( pParamTypeDescr );
@@ -488,7 +501,7 @@
 	sal_Bool bComplex = nTableEntry & 0x80000000 ? sal_True : sal_False;
 
 	typelib_TypeClass aType =
-		cpp_mediate( nTableEntry, pCallStack+17, &nRegReturn );
+		cpp_mediate( nTableEntry, pCallStack+17, (sal_Int64*)&nRegReturn );
 
 	switch( aType )
 	{
Index: source/cpp_uno/gcc3_linux_sparc/uno2cpp.cxx
===================================================================
RCS file: /cvs/udk/bridges/source/cpp_uno/gcc3_linux_sparc/uno2cpp.cxx,v
retrieving revision 1.3
diff -u -u -r1.3 uno2cpp.cxx
--- bridges/source/cpp_uno/gcc3_linux_sparc/uno2cpp.cxx	18 Aug 2003 14:56:11 -0000	1.3
+++ bridges/source/cpp_uno/gcc3_linux_sparc/uno2cpp.cxx	10 Feb 2004 10:50:00 -0000
@@ -367,8 +367,20 @@
 			case typelib_TypeClass_HYPER:
 			case typelib_TypeClass_UNSIGNED_HYPER:
 			case typelib_TypeClass_DOUBLE:
-				pCppStack += sizeof(sal_Int32); // extra long
-			}
+
+                          OSL_ASSERT( sizeof (double) == sizeof (sal_Int64) );
+                          *reinterpret_cast< sal_Int32 * >(pCppStack) =
+                          *reinterpret_cast< sal_Int32 const * >(pUnoArgs[ nPos ]);
+                          pCppStack += sizeof (sal_Int32);
+                          *reinterpret_cast< sal_Int32 * >(pCppStack) =
+                          *(reinterpret_cast< sal_Int32 const * >(pUnoArgs[ nPos ] ) + 1);
+                          break;
+            		default:
+                          uno_copyAndConvertData(
+                             pCppArgs[nPos], pUnoArgs[nPos], pParamTypeDescr,
+                             &pThis->pBridge->aUno2Cpp );
+                          break;
+                        }
 			// no longer needed
 			TYPELIB_DANGER_RELEASE( pParamTypeDescr );
 		}
@@ -407,11 +419,15 @@
 
 	try
 	{
+		int nStackLongs = (pCppStack - pCppStackStart)/sizeof(sal_Int32);
 		OSL_ENSURE( !( (pCppStack - pCppStackStart ) & 3), "UNALIGNED STACK !!! (Please DO panic" );
 		callVirtualMethod(
-			pThis->pCppI, nVtableCall,
-			pCppReturn, pReturnTypeDescr->eTypeClass,
-			(sal_Int32 *)pCppStackStart, (pCppStack - pCppStackStart) / sizeof(sal_Int32) );
+			pThis->pCppI,
+			nVtableCall,
+			pCppReturn,
+			pReturnTypeDescr->eTypeClass,
+			(sal_Int32 *)pCppStackStart,
+			 nStackLongs);
 		// NO exception occured...
 		*ppUnoExc = 0;
 		
