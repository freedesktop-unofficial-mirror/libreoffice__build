--- misc/build/icu/source/runConfigureICU	2002-07-30 03:46:10.000000000 +0100
+++ misc/build/icu/source/runConfigureICU	2004-04-05 20:04:48.000000000 +0100
@@ -1,4 +1,6 @@
 #!/bin/sh
+# Copyright (c) 1999-2003, International Business Machines Corporation and
+# others. All Rights Reserved.
 
 # runConfigureICU: This script will run the "configure" script for the appropriate platform
 # Only supported platforms are recognized
@@ -30,20 +32,28 @@
     AIX4.3xlC               Use IBM's xlC on AIX 4.3
     AIX4.3xlC_nothreads     Use IBM's xlC on AIX 4.3 with no multithreading
     AIX4.3VA                Use IBM's Visual Age xlC_r compiler on AIX 4.3
-    AIX4.3VA_nothreads      Use IBM's Visual Age xlC_r compiler on AIX 4.3 with no multithreading
+    AIXGCC                  Use GCC on AIX
     ALPHA/LINUXGCC          Use GCC on Alpha/Linux systems
     ALPHA/LINUXCCC          Use Compaq C compiler on Alpha/Linux systems
+    BeOS                    Use the GNU C++ compiler on BeOS
+    Cygwin                  Use the GNU C++ compiler on Cygwin
+    Cygwin/MSVC             Use the Microsoft Visual C++ compiler on Cygwin
     FreeBSD                 Use the GNU C++ compiler on Free BSD
-    HP/UX11CC               Use HP's C++ compiler on HP-UX 11
-    HP/UX11ACC              Use the Advanced C++ compiler on HP-UX 11
+    HP-UX11ACC              Use the Advanced C++ compiler on HP-UX 11
+    HP-UX11CC               Use HP's C++ compiler on HP-UX 11
     LinuxRedHat             Use the GNU C++ compiler on Linux
-    CygWin                  Use the GNU C++ compiler on CygWin
+    LINUX/ECC               Use the Intel ECC compiler on Linux
+    LINUX/ICC               Use the Intel ICC compiler on Linux
     MacOSX                  Use the GNU C++ compiler on MacOS X (Darwin)
+    QNX                     Use QNX's QCC compiler on QNX/Neutrino
     SOLARISCC               Use Sun's CC compiler on Solaris
+    SOLARISCC/W4.2          Use Sun's Workshop 4.2 CC compiler on Solaris
     SOLARISGCC              Use the GNU C++ compiler on Solaris
     SOLARISX86              Use Sun's CC compiler on Solaris x86
     TRU64V5.1/CXX           Use Compaq's cxx compiler on Tru64 (OSF)
-    zOS/cxx                 Use IBM's cxx compiler on z/OS (os/390)
+    zOS                     Use IBM's cxx compiler on z/OS (os/390)
+    zOSV1R2                 Use IBM's cxx compiler for z/OS 1.2
+    OS390V2R10              Use IBM's cxx compiler for OS/390 2.10
 EOE
     fi
 
@@ -64,11 +74,11 @@
         ;;
     --enable-debug)
         debug=1
-        release=0
+        OPTS="$OPTS --enable-debug"
         ;;
     --disable-release)
-        debug=0
         release=0
+        OPTS="$OPTS --disable-release"
         ;;
     *)
         platform="$1"
@@ -142,16 +152,12 @@
         RELEASE_CXXFLAGS="-O2 -qmaxmem=-1"
         #LDFLAGS=-L/usr/lpp/xlC/lib; export LDFLAGS
         ;;
-    AIX4.3VA_nothreads)
+# For no threads use --enable-threads=no. Visual Age makes no distinction between xlC and xlC_r or any other _r programs.
+    AIXGCC)
         THE_OS=AIX
-        THE_COMP="xlC"
-        # Only in Visual Age, there is no different between xlc and xlc_r.
-        CC=`which xlc`; export CC
-        CXX=`which xlC`; export CXX
-        OPTS="$OPTS --enable-threads=no"
-        RELEASE_CFLAGS="-O2 -qmaxmem=-1"
-        RELEASE_CXXFLAGS="-O2 -qmaxmem=-1"
-        #LDFLAGS=-L/usr/lpp/xlC/lib; export LDFLAGS
+        THE_COMP="gcc"
+        CC=`which gcc`; export CC
+        CXX=`which g++`; export CXX
         ;;
     SOLARISX86)
         THE_OS="SOLARIS X86"
@@ -172,13 +178,23 @@
         RELEASE_CFLAGS=-xO4
         RELEASE_CXXFLAGS=-O4
         ;;
+    SOLARISCC/W4.2)
+        THE_OS=SOLARIS
+        THE_COMP="Sun's CC"
+        CC=`which cc`; export CC
+        CXX=`which CC`; export CXX
+        RELEASE_CFLAGS=-x04
+        RELEASE_CXXFLAGS="-O4 +d"
+        ;;
     SOLARISGCC)
         THE_OS=SOLARIS
         THE_COMP="the GNU C++"
         CXXFLAGS=-I/usr/local/include/g++; export CXXFLAGS
         LDFLAGS=-R/usr/local/lib; export LDFLAGS
+        RELEASE_CXXFLAGS=-O
+        RELEASE_CFLAGS=-O3
         ;;
-    HP/UX11CC)
+    HP-UX11CC)
         THE_OS="HP-UX 11"
         THE_COMP="HP's CC"
         CC=cc; export CC
@@ -186,7 +202,7 @@
         RELEASE_CFLAGS='+O2 +Ofltacc'
         RELEASE_CXXFLAGS='+O2 +Ofltacc'
         ;;
-    HP/UX11ACC)
+    HP-UX11ACC)
         THE_OS="HP-UX 11"
         THE_COMP="aCC"
         CC=cc; export CC
@@ -194,6 +210,12 @@
         RELEASE_CFLAGS='+O2 +Ofltacc'
         RELEASE_CXXFLAGS='+O2 +Ofltacc'
         ;;
+    TRU64V5.1/CXX)
+        THE_OS="OSF1"
+        THE_COMP="Compaq cxx"
+        CC=cc; export CC
+        CXX=cxx; export CXX
+        ;;
     ALPHA/LINUXCCC)
         THE_OS="Linux"
         THE_COMP="Compaq's CC"
@@ -202,12 +224,6 @@
         RELEASE_CFLAGS='-O4'
         RELEASE_CXXFLAGS='-O4'
         ;;
-    TRU64V5.1/CXX)
-        THE_OS="OSF1"
-        THE_COMP="Compaq cxx"
-        CC=ccc; export CC
-        CXX=cxx; export CXX
-        ;;
     ALPHA/LINUXGCC)
         THE_OS="Linux"
         THE_COMP="the GNU C++"
@@ -220,9 +236,38 @@
         CC=gcc; export CC
         CXX=g++; export CXX
         ;;
-    CygWin)
-        THE_OS="CygWin"
+    LINUX/ECC)
+        THE_OS="Linux"
+        THE_COMP="Intel ECC 7.1"
+        CC=ecc; export CC
+        CXX=ecpc; export CXX
+        RELEASE_CFLAGS='-O2'
+        RELEASE_CXXFLAGS='-O2'
+        ;;
+    LINUX/ICC)
+        THE_OS="Linux"
+        THE_COMP="Intel ICC 6.0"
+        CC=icc; export CC
+        CXX=icpc; export CXX
+        RELEASE_CFLAGS='-O0'
+        RELEASE_CXXFLAGS='-O0'
+        ;;
+    Cygwin)
+        THE_OS="Cygwin"
         THE_COMP="the GNU C++"
+        RELEASE_CFLAGS='-O3'
+        RELEASE_CXXFLAGS='-O3'
+        ;;
+    Cygwin/MSVC)
+        THE_OS="Windows with Cygwin"
+        THE_COMP="Microsoft Visual C++"
+        CC=cl; export CC
+        CXX=cl; export CXX
+        RELEASE_CFLAGS='/O2 /Ob2'
+        RELEASE_CXXFLAGS='/O2 /Ob2'
+        DEBUG_CFLAGS='/Zi'
+        DEBUG_CXXFLAGS='/Zi'
+        DEBUG_LDFLAGS='/DEBUG'
         ;;
     MacOSX)
         THE_OS="MacOS X (Darwin)"
@@ -236,12 +281,58 @@
         CC=gcc; export CC
         CXX=g++; export CXX
         ;;
-    zOS/cxx)
+    QNX)
+        THE_OS="QNX"
+        THE_COMP="QNX cc"
+        CC=qcc; export CC
+        CXX=QCC; export CXX
+        ;;
+    BeOS)
+        THE_OS="BeOS"
+        THE_COMP="the GNU C++"
+        OPTIMIZATIONS="-fdefault-inline -fdefer-pop -fforce-mem -fforce-addr \
+            -finline -finline-functions \
+            -fkeep-inline-functions -fkeep-static-consts -fbranch-count-reg \
+            -ffunction-cse -fstrength-reduce -fthread-jumps -fcse-follow-jumps \
+            -fcse-skip-blocks -frerun-cse-after-loop -frerun-loop-opt \
+            -fexpensive-optimizations -foptimize-register-move -fregmove \
+            -fschedule-insns -fschedule-insns2 -ffloat-store -funroll-loops \
+            -fmove-all-movables -freduce-all-givs -fpeephole \
+            -funroll-all-loops -ffunction-sections -fdata-sections"
+        RELEASE_CFLAGS="$OPTIMIZATIONS"
+        RELEASE_CXXFLAGS="$OPTIMIZATIONS"
+        ;;
+    zOS)
         THE_OS="z/OS (OS/390)"
         THE_COMP="z/OS 1.2 (through OS/390 v2r10) C/C++"
         CC=cc; export CC
         CXX=cxx; export CXX
-        export IEEE390=1
+        export RELEASE_CFLAGS='-2'
+        export RELEASE_CXXFLAGS='-2'
+        ;;
+    zOSV1R2)
+        THE_OS="z/OS 1.2"
+        THE_COMP="z/OS 1.2 C/C++"
+        CC=cc; export CC
+        CXX=cxx; export CXX
+        export COMPILE_LINK_ENVVAR='_CXX_CVERSION=0x41020000 _C89_CVERSION=0x41020000 _CC_CVERSION=0x41020000 _CXX_PVERSION=0x41020000 _C89_PVERSION=0x41020000 _CC_PVERSION=0x41020000'
+        export _CXX_CVERSION=0x41020000 _C89_CVERSION=0x41020000 _CC_CVERSION=0x41020000 _CXX_PVERSION=0x41020000 _C89_PVERSION=0x41020000 _CC_PVERSION=0x41020000
+        export LDFLAGS=-Wl,"compat=pm3"
+        export CFLAGS='-Wc,"target(zOSV1R2)"'
+        export CXXFLAGS='-Wc,"target(zOSV1R2)"'
+        export RELEASE_CFLAGS='-2'
+        export RELEASE_CXXFLAGS='-2'
+        ;;
+    OS390V2R10)
+        THE_OS="OS/390 2.10"
+        THE_COMP="OS/390 2.10 C/C++"
+        CC=cc; export CC
+        CXX=cxx; export CXX
+        export COMPILE_LINK_ENVVAR='_CXX_CVERSION=0x220A0000 _C89_CVERSION=0x220A0000 _CC_CVERSION=0x220A0000 _CXX_PVERSION=0x220A0000 _C89_PVERSION=0x220A0000 _CC_PVERSION=0x220A0000'
+        export _CXX_CVERSION=0x220A0000 _C89_CVERSION=0x220A0000 _CC_CVERSION=0x220A0000 _CXX_PVERSION=0x220A0000 _C89_PVERSION=0x220A0000 _CC_PVERSION=0x220A0000
+        export LDFLAGS=-Wl,"compat=pm3"
+        export CFLAGS='-Wc,"target(OSV2R10)"'
+        export CXXFLAGS='-Wc,"target(OSV2R10)"'
         export RELEASE_CFLAGS='-2'
         export RELEASE_CXXFLAGS='-2'
         ;;
@@ -295,7 +386,12 @@
         CXXFLAGS="$CXXFLAGS $DEBUG_CXXFLAGS"
     fi
     export CXXFLAGS
+    if test "$DEBUG_LDFLAGS" != ""
+    then
+        LDFLAGS="$LDFLAGS $DEBUG_LDFLAGS"
+    fi
+    export LDFLAGS
 fi
 
 # Run configure





--- misc/build/icu/source/config/mh-cygwin	2002-03-19 18:13:48.000000000 +0000
+++ misc/build/icu/source/config/mh-cygwin	2004-04-05 20:04:55.000000000 +0100
@@ -1,66 +1,146 @@
 
 ## Commands to generate dependency files
-GEN_DEPS.c=	$(CC) -E -MM $(DEFS) $(CPPFLAGS)
-GEN_DEPS.cc=	$(CXX) -E -MM $(DEFS) $(CPPFLAGS)
+GEN_DEPS.c=	:
+GEN_DEPS.cc=	:
+#GEN_DEPS.c=	$(COMPILE.c) /E
+#GEN_DEPS.cc=	$(COMPILE.cc) /E
+
+LIBDIR=$(top_builddir)/../../../lib
 
 ## Flags for position independent code
 SHAREDLIBCFLAGS = 
 SHAREDLIBCXXFLAGS = 
-SHAREDLIBCPPFLAGS = -DPIC
+SHAREDLIBCPPFLAGS =
 
 ## Additional flags when building libraries and with threads
-LIBCPPFLAGS = -D_REENTRANT
-THREADSCPPFLAGS = -D_REENTRANT
+LIBCPPFLAGS = 
+
+ifeq ($(ENABLE_DEBUG),1)
+# /MDd means 'compiles and links a debugable multithreaded program with DLL'
+THREADSCFLAGS += /MDd
+THREADSCXXFLAGS += /MDd
+else
+# /MD means 'compiles and links a multithreaded program with DLL'
+THREADSCFLAGS += /MD
+THREADSCXXFLAGS += /MD
+endif
+
+# /GF pools strings and places them into read-only memory
+# /GX enables exception handling
+CFLAGS += /GF
+CXXFLAGS += /GF /GX
+CPPFLAGS+=/nologo
+DEFS+=/D"WIN32"
+LDFLAGS+=/nologo
+
+# Commands to compile
+COMPILE.c=	$(CC) $(CPPFLAGS) $(DEFS) $(CFLAGS) /c
+COMPILE.cc=	$(CXX) $(CPPFLAGS) $(DEFS) $(CXXFLAGS) /c
+
+# Commands to link
+LINK.c=		LINK.EXE /subsystem:console $(LDFLAGS)
+LINK.cc=	LINK.EXE /subsystem:console $(LDFLAGS)
 
 ## Commands to make a shared library
-SHLIB.c=	$(CC) $(DEFS) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) -shared
-SHLIB.cc=	$(CXX) $(DEFS) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) -shared
+SHLIB.c=	LINK.EXE /DLL $(LDFLAGS)
+SHLIB.cc=	LINK.EXE /DLL $(LDFLAGS)
 
 ## Compiler switch to embed a runtime search path
 LD_RPATH=	
-LD_RPATH_PRE=	-Wl,-rpath,
+LD_RPATH_PRE=
 
 ## Compiler switch to embed a library name
-LD_SONAME = -Wl,-soname -Wl,$(MIDDLE_SO_TARGET)
+LD_SONAME =
 
 ## Shared object suffix
 SO = dll
 ## Non-shared intermediate object suffix
-STATIC_O = lib
+STATIC_O = o
+# OUTOPT is for creating a specific output name
+OUTOPT = /out:
+
+# Static library prefix and file extension
+LIBSICU = $(STATIC_PREFIX)$(ICUPREFIX)
+A = lib
+
+## An import library is needed for z/OS and MSVC
+IMPORT_LIB_EXT = .lib
+
+LIBICU = $(ICUPREFIX)
+DEFAULT_LIBS = advapi32.lib
+
+## Link commands to link to ICU libs
+LIBICUDT=	$(LIBDIR)/$(LIBICU)data$(ICULIBSUFFIX)$(SO_TARGET_VERSION_MAJOR).lib
+LIBICUUC=	$(LIBDIR)/$(LIBICU)uc$(ICULIBSUFFIX)$(SO_TARGET_VERSION_MAJOR).lib
+LIBICUI18N=	$(LIBDIR)/$(LIBICU)i18n$(ICULIBSUFFIX)$(SO_TARGET_VERSION_MAJOR).lib
+LIBICULE=	$(LIBDIR)/$(LIBICU)le$(ICULIBSUFFIX)$(SO_TARGET_VERSION_MAJOR).lib
+LIBICULX=	$(LIBDIR)/$(LIBICU)lx$(ICULIBSUFFIX)$(SO_TARGET_VERSION_MAJOR).lib
+LIBCTESTFW=	$(top_builddir)/tools/ctestfw/$(LIBICU)ctestfw$(ICULIBSUFFIX)$(SO_TARGET_VERSION_MAJOR).lib
+LIBICUTOOLUTIL=	$(LIBDIR)/$(LIBICU)tu$(ICULIBSUFFIX)$(SO_TARGET_VERSION_MAJOR).lib
+LIBICUIO=	$(LIBDIR)/$(LIBICU)io$(ICULIBSUFFIX)$(SO_TARGET_VERSION_MAJOR).lib
+
+# Current full path directory.
+CURR_FULL_DIR=$(shell cygpath -wma .)
+# Current full path directory for use in source code in a -D compiler option.
+CURR_SRCCODE_FULL_DIR=$(subst \,\\\\,$(shell cygpath -wa .))
 
 ## Compilation rules
 %.$(STATIC_O): $(srcdir)/%.c
-	$(COMPILE.c) $(STATICCPPFLAGS) $(STATICCFLAGS) -o $@ $<
+	$(COMPILE.c) $(STATICCPPFLAGS) $(STATICCFLAGS) /Fo$@ $<
 %.o: $(srcdir)/%.c
-	$(COMPILE.c) $(DYNAMICCPPFLAGS) $(DYNAMICCFLAGS) -o $@ $<
+	$(COMPILE.c) $(DYNAMICCPPFLAGS) $(DYNAMICCFLAGS) /Fo$@ $<
 
 %.$(STATIC_O): $(srcdir)/%.cpp
-	$(COMPILE.cc) $(STATICCPPFLAGS) $(STATICCXXFLAGS) -o $@ $<
+	$(COMPILE.cc) $(STATICCPPFLAGS) $(STATICCXXFLAGS) /Fo$@ $<
 %.o: $(srcdir)/%.cpp
-	$(COMPILE.cc) $(DYNAMICCPPFLAGS) $(DYNAMICCXXFLAGS) -o $@ $<
+	$(COMPILE.cc) $(DYNAMICCPPFLAGS) $(DYNAMICCXXFLAGS) /Fo$@ $<
 
-../data/%.o: ../data/%.c
-	$(COMPILE.c) $(DYNAMICCPPFLAGS) $(DYNAMICCFLAGS) -o $@ $<
 
 ## Dependency rules
-%.d: $(srcdir)/%.c
+## This is a start to how depdendencies could work
+# The commented out rules may not properly delete the file when ^C is pressed
+#   or the compiler fails.
+# make currently doesn't like rules with C:\\PROGRA~1\\.. in the depedency.
+#   So system headers are ignored by ignoring \\
+%.d : $(srcdir)/%.c
 	@echo "generating dependency information for $<"
-	@$(SHELL) -ec '$(GEN_DEPS.c) $< \
-		| sed '\''s%\($*\)\.o[ :]*%\1.o $@ : %g'\'' > $@; \
-		[ -s $@ ] || rm -f $@'
+	@$(GEN_DEPS.c) $< > $@
+#	@echo -n "generating dependency information for "
+#	@echo -n "$@ $(basename $<).o : " > $@
+#	@$(SHELL) -ec '$(GEN_DEPS.c) $< \
+#		| grep "#line 1 " | grep -v \\\\ | cut -d " " -f 3 \
+#		| /usr/bin/sort -u | sed s/\"$$/\\\\/ | sed s/^\"/\	/ >> $@ \
+#		|| (rm -f $@ && echo $@ && false)'
 
-%.d: $(srcdir)/%.cpp
+%.d : $(srcdir)/%.cpp
 	@echo "generating dependency information for $<"
-	@$(SHELL) -ec '$(GEN_DEPS.cc) $< \
-		| sed '\''s%\($*\)\.o[ :]*%\1.o $@ : %g'\'' > $@; \
-		[ -s $@ ] || rm -f $@'
+	@$(GEN_DEPS.cc) $< > $@
+#	@echo -n "generating dependency information for "
+#	@echo -n "$@ $(basename $<).o : " > $@
+#	@$(SHELL) -ec '$(GEN_DEPS.cc) $< \
+#		| grep "#line 1 " | grep -v \\\\ | cut -d " " -f 3 \
+#		| /usr/bin/sort -u | sed s/\"$$/\\\\/ | sed s/^\"/\	/ >> $@ \
+#		|| (rm -f $@ && echo $@ && false)'
+
+## Compile a Windows resource file
+%.res : $(srcdir)/%.rc
+	rc.exe /fo$@ $<
+
+## Versioned target for a shared library.
+FINAL_SO_TARGET= $(basename $(SO_TARGET))$(SO_TARGET_VERSION_MAJOR).$(SO)
+MIDDLE_SO_TARGET=$(SO_TARGET)
+PKGDATA_VERSIONING = -r $(SO_TARGET_VERSION_MAJOR)
+
+## Versioned import library names.
+IMPORT_LIB = $(LIBICU)$(TARGET_STUBNAME)$(ICULIBSUFFIX)$(IMPORT_LIB_EXT)
+MIDDLE_IMPORT_LIB = $(LIBICU)$(TARGET_STUBNAME)$(ICULIBSUFFIX)$(SO_TARGET_VERSION_MAJOR)$(IMPORT_LIB_EXT)
+FINAL_IMPORT_LIB := $(MIDDLE_IMPORT_LIB)
 
 ## Versioned libraries rules
-
-%.$(SO).$(SO_TARGET_VERSION_MAJOR): %.$(SO).$(SO_TARGET_VERSION)
-	$(RM) $@ && cp $< $@
-%.$(SO): %.$(SO).$(SO_TARGET_VERSION_MAJOR)
-	$(RM) $@ && cp $*.$(SO).$(SO_TARGET_VERSION) $@
+#%$(SO_TARGET_VERSION_MAJOR).$(SO): %$(SO_TARGET_VERSION).$(SO)
+#	$(RM) $@ && cp ${<F} $@
+%.$(SO): %$(SO_TARGET_VERSION_MAJOR).$(SO)
+	$(RM) $@ && ln -s ${<F} $@
 
 ##  Bind internal references
 
@@ -82,5 +158,12 @@
 # Environment variable to set a runtime search path
 LDLIBRARYPATH_ENVVAR = PATH
 
+# These are needed to allow the pkgdata nmake files to work
+PKGDATA_OPTS = -v
+PKGDATA_INVOKE_OPTS = MAKEFLAGS=
+
+# Include the version information in the shared library
+ENABLE_SO_VERSION_DATA=1
+
 ## End Cygwin-specific setup
 
