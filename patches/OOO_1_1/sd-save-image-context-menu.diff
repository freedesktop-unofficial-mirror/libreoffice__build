Index: sd/sdi/_drvwsh.sdi
===================================================================
--- sd/sdi/_drvwsh.sdi.orig	2003-04-04 18:14:25.000000000 +0200
+++ sd/sdi/_drvwsh.sdi	2004-02-27 19:00:54.000000000 +0100
@@ -115,6 +115,11 @@ interface DrawView : View
         ExecMethod = FuTemporary ;
         StateMethod = GetMenuState ;
     ]
+	SID_SAVEGRAPHIC // ole : yes, status : ?
+    [
+        ExecMethod = FuTemporary ;
+        StateMethod = GetMenuState ;
+    ]
     SID_CUT // ole : no, status : ?
     [
         ExecMethod = FuSupport ;
Index: sd/sdi/sdraw.sdi
===================================================================
--- sd/sdi/sdraw.sdi.orig	2003-04-04 19:28:47.000000000 +0200
+++ sd/sdi/sdraw.sdi	2004-02-27 19:01:11.000000000 +0100
@@ -5213,6 +5213,30 @@ SfxVoidItem OriginalSize SID_ORIGINAL_SI
 	GroupId = GID_MODIFY;
 ]
 
+SfxVoidItem SaveGraphic SID_SAVEGRAPHIC
+()
+[
+	/* flags: */  
+	AutoUpdate = FALSE, 
+	Cachable = Cachable, 
+	FastCall = FALSE, 
+	HasCoreId = FALSE, 
+	HasDialog = FALSE, 
+	ReadOnlyDoc = TRUE, 
+	Toggle = FALSE, 
+	Container = FALSE, 
+	RecordAbsolute = FALSE, 
+	RecordPerSet;
+	Synchron;
+
+	/* config: */ 
+	AccelConfig = FALSE, 
+	MenuConfig = FALSE, 
+	StatusBarConfig = FALSE, 
+	ToolBoxConfig = FALSE, 
+	GroupId = GID_MODIFY;
+]
+
 //--------------------------------------------------------------------------
 SfxBoolItem OutlineMode SID_OUTLINEMODE
 
Index: sd/source/ui/app/menuids.src
===================================================================
--- sd/source/ui/app/menuids.src.orig	2004-02-10 22:56:21.000000000 +0100
+++ sd/source/ui/app/menuids.src	2004-02-27 19:01:29.000000000 +0100
@@ -3233,6 +3233,43 @@
 		Text[ slovak ] = "P√¥vodn√° veƒæko~s≈•";\
 	};
 
+#define MN_SAVEGRAPHIC\
+    MenuItem\
+    {\
+        Identifier = SID_SAVEGRAPHIC ; \
+        HelpID = SID_SAVEGRAPHIC ; \
+		Text = "~Grafik speichern..." ; \
+		Text [ English ] = "Save ~Image..." ; \
+		Text [ dutch ] = "Afbeelding ops~laan..." ; \
+		Text [ italian ] = "~Salva immagine..." ; \
+		Text [ spanish ] = "Guardar ~imagen..." ; \
+		Text [ french ] = "Enregistrer l'~image..." ; \
+		Text [ english_us ] = "Save Graphics..." ; \
+		Text [ swedish ] = "~Spara grafik..." ; \
+		Text [ danish ] = "~Gem grafik..." ; \
+		Text [ portuguese ] = "~Guardar imagem..." ; \
+		Text [ portuguese_brazilian ] = "Salvar Figura..." ; \
+		Text[ chinese_simplified ] = "Â≠òÁõòÂõæÂΩ¢..."; \
+		Text[ russian ] = "—Óı‡ÌËÚ¸ „‡ÙË˜ÂÒÍËÈ Ó·˙ÂÍÚ..."; \
+		Text[ polish ] = "Zapisz grafikÍ..."; \
+		Text[ japanese ] = "Âõ≥„ÅÆ‰øùÂ≠ò..."; \
+		Text[ chinese_traditional ] = "ÂÑ≤Â≠òÂúñÂΩ¢..."; \
+		Text[ arabic ] = "...Õ›Ÿ «·’Ê—…"; \
+		Text[ dutch ] = "Afbeelding ops~laan..."; \
+		Text[ chinese_simplified ] = "Â≠òÁõòÂõæÂΩ¢..."; \
+		Text[ greek ] = "¡ÔËﬁÍÂıÛÁ ~„Ò·ˆÈÍÔ˝..."; \
+		Text[ korean ] = "Í∑∏Î¶º Ï†ÄÏû•..."; \
+		Text[ turkish ] = "Grafii kaydet..."; \
+		Text[ language_user1 ] = " "; \
+		Text[ catalan ] = "Desa ~imatge..."; \
+		Text[ finnish ] = "Tallenna grafiikka..."; \
+		Text[ thai ] = "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏£‡∏≤‡∏ü‡∏¥‡∏Ñ..."; \
+		Text[ czech ] = "Ulo≈æit obr√°zek"; \
+		Text[ hebrew ] = "Save ~Image..." ; \
+		Text[ hindi ] = "‡§∏‡•Å‡§ö‡§ø‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§Ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•ã..."; \
+		Text[ slovak ] = "Ulo≈æi≈• obr√°zok"; \
+	};
+
 #define MN_STARIMAGE\
     MenuItem\
     {\
Index: sd/source/ui/app/popup2.src
===================================================================
--- sd/source/ui/app/popup2.src.orig	2002-11-01 15:33:34.000000000 +0100
+++ sd/source/ui/app/popup2.src	2004-02-27 19:27:45.000000000 +0100
@@ -528,6 +528,7 @@
 		MN_ORIGINAL_SIZE
 		MN_STARIMAGE
 		MN_COLORRESOLUTION
+		MN_SAVEGRAPHIC
 		SEPARATOR
 		MN_CHAR_PARAGRAPH
 		SEPARATOR
Index: sd/source/ui/view/drviews2.cxx
===================================================================
--- sd/source/ui/view/drviews2.cxx.orig	2003-06-12 10:02:47.000000000 +0200
+++ sd/source/ui/view/drviews2.cxx	2004-03-02 17:50:56.000000000 +0100
@@ -145,6 +145,33 @@
 #ifndef _SVX_DLG_NAME_HXX
 #include <svx/dlgname.hxx>
 #endif
+#ifndef INCLUDED_SVTOOLS_PATHOPTIONS_HXX
+#include <svtools/pathoptions.hxx>
+#endif
+#ifndef _COM_SUN_STAR_UI_DIALOGS_XFILEPICKER_HPP_
+#include <com/sun/star/ui/dialogs/XFilePicker.hpp>
+#endif
+#ifndef _COM_SUN_STAR_UI_DIALOGS_XFILTERMANAGER_HPP_
+#include <com/sun/star/ui/dialogs/XFilterManager.hpp>
+#endif
+#ifndef  _COM_SUN_STAR_UI_DIALOGS_TEMPLATEDESCRIPTION_HPP_
+#include <com/sun/star/ui/dialogs/TemplateDescription.hpp>
+#endif
+#ifndef _FILEDLGHELPER_HXX
+#include <sfx2/filedlghelper.hxx>
+#endif
+#ifndef _URLOBJ_HXX
+#include <tools/urlobj.hxx>
+#endif
+#ifndef _FILTER_HXX
+#include <svtools/filter.hxx>
+#endif
+#ifndef _SVX_IMPGRF_HXX
+#include <svx/impgrf.hxx>
+#endif
+#ifndef _XOUTBMP_HXX
+#include <svx/xoutbmp.hxx>
+#endif
 
 #pragma hdrstop
 
@@ -1139,6 +1166,12 @@ void SdDrawViewShell::FuTemporary(SfxReq
 			rReq.Done();
 		break;
 
+		case SID_SAVEGRAPHIC:
+			SaveGraphic();
+			Cancel();
+			rReq.Ignore();
+		break;
+
 		default:
 		{
 			// switch Anweisung wegen CLOOKS aufgeteilt. Alle case-Anweisungen die
@@ -1355,3 +1388,85 @@ void SdDrawViewShell::CreateOrDuplicateP
         GetViewFrame()->GetDispatcher()->Execute(SID_OBJECT_SELECT, SFX_CALLMODE_ASYNCHRON);
     rReq.Done ();
 }
+
+// From sw/source/ui/docvw/romenu.cxx
+void lcl_GetPreferedExtension( String &rExt, const Graphic &rGrf )
+{
+	// dann ggfs. ueber die native-Info der Grafik den "besten"
+	// Filter vorschlagen
+	const sal_Char* pExt = "png";
+	switch( rGrf.GetLink().GetType() )
+	{
+		case GFX_LINK_TYPE_NATIVE_GIF:      pExt = "gif"; break;
+		case GFX_LINK_TYPE_NATIVE_TIF:      pExt = "tif"; break;
+		case GFX_LINK_TYPE_NATIVE_WMF:      pExt = "wmf"; break;
+		case GFX_LINK_TYPE_NATIVE_MET:      pExt = "met"; break;
+		case GFX_LINK_TYPE_NATIVE_PCT:		pExt = "pct"; break;
+		case GFX_LINK_TYPE_NATIVE_JPG:		pExt = "jpg"; break;
+	}
+	rExt.AssignAscii( pExt );
+}
+
+void SdDrawViewShell::SaveGraphic()
+{
+ 	using namespace ::com::sun::star::uno;
+	using namespace com::sun::star::ui::dialogs;
+	using namespace ::sfx2;
+
+	SvtPathOptions aPathOpt;
+	String sGrfPath( aPathOpt.GetGraphicPath() );
+
+    FileDialogHelper aDlgHelper( TemplateDescription::FILESAVE_SIMPLE, 0 );
+    Reference < XFilePicker > xFP = aDlgHelper.GetFilePicker();
+
+	INetURLObject aPath;
+	aPath.SetSmartURL( sGrfPath);
+
+	SdrGrafObj *pGrafObj = PTR_CAST( SdrGrafObj, pDrView->GetMarkList().GetMark( 0 )->GetObj() );
+	if (0 == pGrafObj )
+		return;
+
+	const Graphic &rGraphic = pGrafObj->GetGraphic();
+
+	String aExt;
+	lcl_GetPreferedExtension( aExt, rGraphic );
+	aExt.ToLowerAscii();
+	int nDfltFilter = INT_MAX;
+
+    xFP->setDisplayDirectory( aPath.GetMainURL(INetURLObject::DECODE_TO_IURI) );
+
+	GraphicFilter& rGF = *GetGrfFilter();
+	const USHORT nCount = rGF.GetExportFormatCount();
+
+    Reference<XFilterManager> xFltMgr(xFP, UNO_QUERY);
+
+	for ( int i = 0; i < nCount; i++ )
+	{
+        xFltMgr->appendFilter( rGF.GetExportFormatName( i ), rGF.GetExportWildcard( i ) );
+		if ( COMPARE_EQUAL == aExt.CompareIgnoreCaseToAscii(rGF.GetExportFormatShortName( i ).ToLowerAscii() ))
+			nDfltFilter = i;
+	}
+
+	if( INT_MAX == nDfltFilter )
+		return;
+	
+	xFltMgr->setCurrentFilter( rGF.GetExportFormatName( nDfltFilter ) );
+
+	if( aDlgHelper.Execute() == ERRCODE_NONE )
+	{
+		String sPath( xFP->getFiles().getConstArray()[0] );
+		//verwendeten Pfad merken - bitte nicht wieder wegoptimieren!
+		aPath.SetSmartURL( sPath);
+		sGrfPath = aPath.GetPath();
+		
+		int nFilter;
+		if ( xFltMgr->getCurrentFilter().getLength() && rGF.GetExportFormatCount() )
+			nFilter = rGF.GetExportFormatNumber( xFltMgr->getCurrentFilter() );
+		else
+			nFilter = GRFILTER_FORMAT_DONTKNOW;
+		String aFilter( rGF.GetExportFormatShortName( nFilter ) );
+		XOutBitmap::WriteGraphic( rGraphic, sPath, aFilter,
+								  XOUTBMP_DONT_EXPAND_FILENAME );
+		return;
+	}
+}
Index: sd/source/ui/view/drviewsj.cxx
===================================================================
--- sd/source/ui/view/drviewsj.cxx.orig	2003-05-16 16:18:23.000000000 +0200
+++ sd/source/ui/view/drviewsj.cxx	2004-03-02 11:13:29.000000000 +0100
@@ -184,7 +184,8 @@ void SdDrawViewShell::GetMenuStateSel( S
 			SFX_ITEM_AVAILABLE == rSet.GetItemState( SID_BEFORE_OBJ ) ||
 			SFX_ITEM_AVAILABLE == rSet.GetItemState( SID_BEHIND_OBJ ) ||
 			SFX_ITEM_AVAILABLE == rSet.GetItemState( SID_REVERSE_ORDER ) ||
-			SFX_ITEM_AVAILABLE == rSet.GetItemState( SID_ORIGINAL_SIZE ) )
+			SFX_ITEM_AVAILABLE == rSet.GetItemState( SID_ORIGINAL_SIZE ) ||
+ 			SFX_ITEM_AVAILABLE == rSet.GetItemState( SID_SAVEGRAPHIC ) )
 		{
 			const SdrObject* pObj = rMarkList.GetMark(0)->GetObj();
 			UINT32 nInv = pObj->GetObjInventor();
@@ -202,6 +203,11 @@ void SdDrawViewShell::GetMenuStateSel( S
 					rSet.DisableItem(SID_ORIGINAL_SIZE);
 			}
 
+			if ( !( pObj->ISA( SdrGrafObj ) ) )
+			{
+				rSet.DisableItem(SID_SAVEGRAPHIC);
+			}
+
 			// Wenn es sich um kein Gruppenobjekt oder 3D-Objekt handelt
 			// wird "Gruppe betreten" disabled
 			if( !( ( pObj->ISA( SdrObjGroup ) && nInv == SdrInventor ) ||
Index: sd/source/ui/inc/drviewsh.hxx
===================================================================
--- sd/source/ui/inc/drviewsh.hxx.orig	2004-02-27 22:45:16.000000000 +0100
+++ sd/source/ui/inc/drviewsh.hxx	2004-02-27 22:45:30.000000000 +0100
@@ -458,6 +458,9 @@ private:
             The request as passed to 
     */
     void CreateOrDuplicatePage (SfxRequest& rReq);
+
+	/** Saves the selected graphic to a user-specified file */
+	void SdDrawViewShell::SaveGraphic( );
 };
 
 #endif		// _SD_DRVIEWSH_HXX
Index: sd/inc/app.hrc
===================================================================
--- sd/inc/app.hrc.orig	2002-11-04 18:11:46.000000000 +0100
+++ sd/inc/app.hrc	2004-02-27 19:00:27.000000000 +0100
@@ -465,3 +465,5 @@
 #define SID_PREVIEW_QUALITY_CONTRAST   		(SID_SD_START+401)
 
 #define SID_RENAMEPAGE_QUICK                (SID_SD_START+405)
+// FIXME get an official SID
+#define SID_SAVEGRAPHIC						(SID_SD_START+450)
