--- sc/inc/document.hxx.orig	2003-11-22 15:35:41.000000000 +0530
+++ sc/inc/document.hxx	2004-01-06 11:58:36.000000000 +0530
@@ -494,6 +494,7 @@
 
 
 	inline BOOL 		RowHidden( USHORT nRow, USHORT nTab );		// FillInfo
+        BOOL                    ColHidden( USHORT nCol, USHORT nTab );          // FillInfo
 
 public:
 	long			GetCellCount() const;		// alle Zellen
@@ -655,6 +656,8 @@
 	void			ClearDrawPage(USHORT nTab);
 	void			SetVisible( USHORT nTab, BOOL bVisible );
 	BOOL			IsVisible( USHORT nTab ) const;
+        BOOL                    IsRowHidden(USHORT nStartRow, USHORT nEndRow, USHORT nTab) const;
+        BOOL                    IsColHidden(USHORT nStartCol, USHORT nEndCol, USHORT nTab) const;
 	void			SetScenario( USHORT nTab, BOOL bFlag );
 	BOOL			IsScenario( USHORT nTab ) const;
 	void			GetScenarioData( USHORT nTab, String& rComment,
--- sc/source/core/data/fillinfo.cxx.orig	2004-01-06 12:08:13.000000000 +0530
+++ sc/source/core/data/fillinfo.cxx	2004-01-06 11:33:06.000000000 +0530
@@ -184,12 +184,16 @@
 	rEndY = rStartY + pMerge->GetRowMerge() - 1;
 }
 
+BOOL ScDocument::ColHidden( USHORT nCol, USHORT nTab )
+{
+	return ( pTab[nTab]->pColFlags[nCol] & CR_HIDDEN ) != 0;
+}
+
 inline BOOL ScDocument::RowHidden( USHORT nRow, USHORT nTab )
 {
 	return ( pTab[nTab]->pRowFlags[nRow] & CR_HIDDEN ) != 0;
 }
 
-
 #define CELLINFO(x,y) pRowInfo[nArrY+y].pCellInfo[nArrX+x]
 
 USHORT ScDocument::FillInfo( RowInfo* pRowInfo, USHORT nX1, USHORT nY1, USHORT nX2, USHORT nY2,
--- sc/source/ui/inc/viewfunc.hxx.orig	2004-01-06 12:11:23.000000000 +0530
+++ sc/source/ui/inc/viewfunc.hxx	2004-01-05 14:50:37.000000000 +0530
@@ -243,6 +243,7 @@
 										ScMarkData* pMarkData = NULL );
 	void			SetMarkedWidthOrHeight( BOOL bWidth, ScSizeMode eMode, USHORT nSizeTwips,
 										BOOL bRecord = TRUE, BOOL bPaint = TRUE );
+	BOOL                    GetRowColHidden(BOOL col);
 	void			ShowMarkedColumns( BOOL bShow, BOOL bRecord = TRUE );
 	void			ShowMarkedRows( BOOL bShow, BOOL bRecord = TRUE );
 
--- sc/source/ui/view/cellsh.cxx.orig	2003-11-22 15:39:25.000000000 +0530
+++ sc/source/ui/view/cellsh.cxx	2004-01-05 14:57:27.000000000 +0530
@@ -775,9 +775,7 @@
 				break;
 
 			case FID_ROW_HIDE:
-			case FID_ROW_SHOW:
 			case FID_COL_HIDE:
-			case FID_COL_SHOW:
 			case FID_COL_OPT_WIDTH:
 			case FID_ROW_OPT_HEIGHT:
 			case FID_DELETE_CELL:
@@ -785,6 +783,19 @@
 					rSet.DisableItem( nWhich );
 				break;
 
+			case FID_ROW_SHOW:
+			        {
+					if( pDoc->IsTabProtected(nTab) || pDocSh->IsReadOnly() || !pTabViewShell->GetRowColHidden(FALSE) ) 
+						rSet.DisableItem( nWhich );
+				}
+				break;
+			case FID_COL_SHOW:
+			        {
+					if( pDoc->IsTabProtected(nTab) || pDocSh->IsReadOnly() || !pTabViewShell->GetRowColHidden(TRUE) ) 
+						rSet.DisableItem( nWhich );
+				}
+				break;
+
 /*	Zellschutz bei selektierten Zellen wird bei anderen Funktionen auch nicht abgefragt...
 			case SID_DELETE:
--- sc/source/ui/view/viewfunc.cxx.orig	2004-01-06 12:09:10.000000000 +0530
+++ sc/source/ui/view/viewfunc.cxx	2004-01-06 18:23:36.000000000 +0530
@@ -2114,6 +2114,50 @@
 	rMark.MarkToSimple();
 }
 
+BOOL ScViewFunc::GetRowColHidden(BOOL col)
+{
+	ScDocument* pDoc = GetViewData()->GetDocument();
+	ScMarkData& rMark = GetViewData()->GetMarkData();
+	USHORT nCol = 0,nRow = 0,nTab = 0;
+
+
+	rMark.MarkToMulti();
+	if (!rMark.IsMultiMarked())
+	{
+		nCol = GetViewData()->GetCurX();
+		nRow = GetViewData()->GetCurY();
+		nTab = GetViewData()->GetTabNo();
+		rMark.SetMultiMarkArea( ScRange( nCol,nRow,nTab ), TRUE );
+	}
+
+	USHORT* pRanges = new USHORT[MAXROW+1];
+	USHORT nRangeCnt = 0;
+	BOOL hidden = FALSE;
+
+	if( col )
+		nRangeCnt = rMark.GetMarkColumnRanges( pRanges ); 
+	else
+		nRangeCnt = rMark.GetMarkRowRanges( pRanges );		
+
+	const USHORT* pTabRanges = pRanges;
+
+	for (USHORT nRangeNo=0; nRangeNo<nRangeCnt; nRangeNo++)
+	{
+		USHORT nStartNo = *(pTabRanges++);
+		USHORT nEndNo = *(pTabRanges++);
+		if( col )
+			hidden = pDoc->IsColHidden(nStartNo,nEndNo,nTab);
+		else
+			hidden = pDoc->IsRowHidden(nStartNo,nEndNo,nTab);
+		/* Even if a single col/row is hidden set the var and break */
+		if( hidden == TRUE ) 
+			break;
+	}
+
+	delete[] pRanges;
+	return hidden;
+}
+
 void ScViewFunc::ModifyCellSize( ScDirection eDir, BOOL bOptimal )
 {
 	//!	Schrittweiten einstellbar
--- sc/source/core/data/document.cxx.orig	2003-11-22 15:35:08.000000000 +0530
+++ sc/source/core/data/document.cxx	2004-01-06 18:30:55.000000000 +0530
@@ -475,6 +475,28 @@
 	return FALSE;
 }
 
+BOOL ScDocument::IsRowHidden(USHORT nStartRow, USHORT nEndRow, USHORT nTab) const
+{
+        BOOL	rHidden = FALSE;
+        for(USHORT i=nStartRow; i<=nEndRow; i++)
+	  {
+		  if( RowHidden(i,nTab) )
+			  rHidden = TRUE;
+	  }
+	return rHidden;
+}
+
+BOOL ScDocument::IsColHidden(USHORT nStartCol, USHORT nEndCol, USHORT nTab) const
+{
+        BOOL	cHidden = FALSE;
+        for(USHORT i=nStartCol; i<=nEndCol; i++)
+	  {
+		  if(  ColHidden(i,nTab) )
+			  cHidden = TRUE;
+	  }
+	return cHidden;
+}
+
 /* ----------------------------------------------------------------------------
 	benutzten Bereich suchen:
 
