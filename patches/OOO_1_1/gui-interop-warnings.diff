--- officecfg/registry/schema/org/openoffice/Office/Common.xcs
+++ officecfg/registry/schema/org/openoffice/Office/Common.xcs
@@ -22629,7 +22629,15 @@
 				<desc xml:lang="ns">Specifies default settings of Microsoft-, Graphic- and HTML filters.</desc>
 				<desc xml:lang="af">Specifies default settings of Microsoft-, Graphic- and HTML filters.</desc>
 				<desc xml:lang="zu">Specifies default settings of Microsoft-, Graphic- and HTML filters.</desc>
-			</info>
+			</info> <!-- dummy -->
+			<group oor:name="Warning">
+				<prop oor:name="SaveAsNative" oor:type="xs:boolean">
+					<value>true</value>
+				</prop>
+				<prop oor:name="ShowLossOfInformation" oor:type="xs:boolean">
+					<value>true</value>
+				</prop>
+			</group>
 			<group oor:name="Microsoft">
 				<info>
 					<author>SJ</author>
Index: sfx2/inc/misccfg.hxx
===================================================================
RCS file: /cvs/framework/sfx2/inc/Attic/misccfg.hxx,v
retrieving revision 1.2
diff -u -r1.2 misccfg.hxx
--- sfx2/inc/misccfg.hxx	2 Mar 2001 15:53:18 -0000	1.2
+++ sfx2/inc/misccfg.hxx	31 Aug 2004 14:15:42 -0000
@@ -76,6 +76,8 @@
 	BOOL			bPaperOrientation;
 	BOOL			bNotFound;
 	sal_Int32		nYear2000;		// two digit year representation
+	BOOL            bSaveAsNative;
+	BOOL            bShowLoss;
 
 	const com::sun::star::uno::Sequence<rtl::OUString>& GetPropertyNames();
 	void					Load();
@@ -100,6 +102,11 @@
 	sal_Int32	GetYear2000()			const { return nYear2000; }
     void        SetYear2000( sal_Int32 nSet );
 
+	// Interop warnings
+	BOOL	    IsSaveAsNativeWarning() const { return bSaveAsNative; }
+	void 	    SetSaveAsNativeWarning( BOOL bSet );
+	BOOL	    IsShowLossOfInformation() const { return bShowLoss; }
+	void 	    SetShowLossOfInformation( BOOL bSet );
 };
 
 #endif // _MISCCFG_HXX
Index: sfx2/source/config/misccfg.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/config/Attic/misccfg.cxx,v
retrieving revision 1.2
diff -u -r1.2 misccfg.cxx
--- sfx2/source/config/misccfg.cxx	2 Mar 2001 15:54:11 -0000	1.2
+++ sfx2/source/config/misccfg.cxx	31 Aug 2004 14:15:42 -0000
@@ -138,6 +138,20 @@
 		SetModified();
 	nYear2000 = nSet;
 }
+
+void SfxMiscCfg::SetSaveAsNativeWarning( BOOL bSet )
+{
+	if(!bSaveAsNative != !bSet)
+		SetModified();
+	bSaveAsNative = bSet;
+}
+void SfxMiscCfg::SetShowLossOfInformation( BOOL bSet )
+{
+	if(!bShowLoss != !bSet)
+		SetModified();
+	bShowLoss = bSet;
+}
+
 /* -----------------------------02.03.01 15:31--------------------------------
 
  ---------------------------------------------------------------------------*/
@@ -152,8 +166,10 @@
    			"Print/Warning/PaperOrientation",		//  1
    			"Print/Warning/NotFound",				//  2
 			"DateFormat/TwoDigitYear",            	//  3
+			"Filter/Warning/SaveAsNative",			//  4
+			"Filter/Warning/ShowLossOfInformation"  //  5
 		};
-        const int nCount = 4;
+        const int nCount = 6;
 		aNames.realloc(nCount);
 		OUString* pNames = aNames.getArray();
 		for(int i = 0; i < nCount; i++)
@@ -183,6 +199,8 @@
                     case  1: bPaperOrientation = *(sal_Bool*)pValues[nProp].getValue();  break;     //"Print/Warning/PaperOrientation",
                     case  2: bNotFound         = *(sal_Bool*)pValues[nProp].getValue()  ;  break;   //"Print/Warning/NotFound",
 					case  3: pValues[nProp] >>= nYear2000;break;                                    //"DateFormat/TwoDigitYear",
+				    case  4: bSaveAsNative     = *(sal_Bool *)pValues[nProp].getValue(); break;     //"Filter/Warning/SaveAsNative",
+				    case  5: bShowLoss         = *(sal_Bool *)pValues[nProp].getValue(); break;     //"Filter/Warning/ShowLossOfInformation"
 				}
 			}
 		}
@@ -214,6 +232,8 @@
 			case  1: pValues[nProp].setValue(&bPaperOrientation, rType);break;     //"Print/Warning/PaperOrientation",
 			case  2: pValues[nProp].setValue(&bNotFound, rType);break;   //"Print/Warning/NotFound",
 			case  3: pValues[nProp] <<= nYear2000;break;                 //"DateFormat/TwoDigitYear",
+		    case  4: pValues[nProp].setValue(&bSaveAsNative, rType); break;   //"Filter/Warning/SaveAsNative",
+		    case  5: pValues[nProp].setValue(&bShowLoss, rType); break;       //"Filter/Warning/ShowLossOfInformation"
 		}
 	}
 	PutProperties(aNames, aValues);
