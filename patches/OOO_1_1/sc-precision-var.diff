--- sc/source/core/tool/interpr1.cxx
+++ sc/source/core/tool/interpr1.cxx
@@ -91,6 +91,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <math.h>
+#include <vector>
 
 #include "interpre.hxx"
 #include "patattr.hxx"
@@ -2389,9 +2390,12 @@
 {
 	BYTE nParamCount = GetByte();
 	USHORT i;
+	
+	std::vector<double> values;
 	double fSum    = 0.0;
-	double fSumSqr = 0.0;
-	double fVal;
+	double vSum    = 0.0;
+	double vMean    = 0.0;
+	double fVal = 0.0;
 	rValCount = 0.0;
 	ScAddress aAdr;
 	ScRange aRange;
@@ -2402,8 +2406,8 @@
 			case svDouble :
 			{
 				fVal = GetDouble();
+				values.push_back(fVal);
 				fSum    += fVal;
-				fSumSqr += fVal*fVal;
 				rValCount++;
 			}
 			break;
@@ -2414,12 +2418,15 @@
 				if (HasCellValueData(pCell))
 				{
 					fVal = GetCellValue( aAdr, pCell );
+					values.push_back(fVal);
 					fSum += fVal;
-					fSumSqr += fVal*fVal;
 					rValCount++;
 				}
 				else if ( bTextAsZero && HasCellStringData( pCell ) )
+				{
+					values.push_back(0.0);
 					rValCount++;
+				}
 			}
 			break;
 			case svDoubleRef :
@@ -2431,8 +2438,8 @@
 				{
 					do
 					{
+						values.push_back(fVal);
 						fSum += fVal;
-						fSumSqr += fVal*fVal;
 						rValCount++;
 					}
 					while ((nErr == 0) && aValIter.GetNext(fVal, nErr));
@@ -2453,12 +2460,15 @@
 							if (!pMat->IsString(i,j))
 							{
 								fVal= pMat->GetDouble(i,j);
+								values.push_back(fVal);
 								fSum += fVal;
-								fSumSqr += fVal * fVal;
 								rValCount++;
 							}
 							else if ( bTextAsZero )
+							{
+								values.push_back(0.0);
 								rValCount++;
+							}
 						}
 					}
 				}
@@ -2467,7 +2477,10 @@
 			case svString :
 			{
 				if ( bTextAsZero )
+				{
+					values.push_back(0.0);
 					rValCount++;
+				}
 				else
 				{
 					Pop();
@@ -2479,7 +2492,13 @@
 				SetError(errIllegalParameter);
 		}
 	}
-	rVal = ::rtl::math::approxSub( fSumSqr, fSum*fSum/rValCount );
+	
+	vMean = fSum / values.size();
+	
+	for (i = 0; i < values.size(); i++)
+		vSum += (values[i] - vMean) * (values[i] - vMean);
+
+	rVal = vSum;
 }
 
 
@@ -4548,9 +4567,13 @@
 
 void ScInterpreter::GetDBStVarParams( double& rVal, double& rValCount )
 {
+	std::vector<double> values;
+	double vSum    = 0.0;
+	double vMean    = 0.0;
+	int i = 0;
+
 	rValCount = 0.0;
 	double fSum    = 0.0;
-	double fSumSqr = 0.0;
 	USHORT nTab;
 	ScQueryParam aQueryParam;
     BOOL bMissingField = FALSE;
@@ -4564,8 +4587,8 @@
 			do
 			{
 				rValCount++;
+				values.push_back(fVal);
 				fSum += fVal;
-				fSumSqr += fVal*fVal;
 			}
 			while ((nErr == 0) && aValIter.GetNext(fVal, nErr));
 		}
@@ -4573,7 +4596,13 @@
 	}
 	else
 		SetIllegalParameter();
-	rVal = ::rtl::math::approxSub( fSumSqr, fSum*fSum/rValCount );
+
+	vMean = fSum / values.size();
+	
+	for (i = 0; i < values.size(); i++)
+		vSum += (values[i] - vMean) * (values[i] - vMean);
+
+	rVal = vSum;
 }
 
 
