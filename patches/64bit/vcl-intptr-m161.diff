--- vcl/inc/glyphcache.hxx	2006-03-24 11:53:04.000000000 +0000
+++ vcl/inc/glyphcache.hxx	2006-03-24 12:23:36.000000000 +0000
@@ -84,13 +84,13 @@
     void                        ClearFontPath();
     void                        AddFontPath( const String& rFontPath );
     void                        AddFontFile( const rtl::OString& rNormalizedName,
-                                    int nFaceNum, int nFontId, const ImplDevFontAttributes&,
+                                    int nFaceNum, sal_IntPtr nFontId, const ImplDevFontAttributes&,
                                     const ExtraKernInfo* = NULL );
     void                        AnnounceFonts( ImplDevFontList* ) const;
 
     ServerFont*                 CacheFont( const ImplFontSelectData& );
     void                        UncacheFont( ServerFont& );
-    void                        RemoveFont( int nFontId );
+    void                        RemoveFont( sal_IntPtr nFontId );
 
 private:
     friend class ServerFont;
@@ -357,7 +357,7 @@
 class VCL_DLLPUBLIC ExtraKernInfo
 {
 public:
-            ExtraKernInfo( int nFontId );
+    ExtraKernInfo( sal_IntPtr nFontId );
     virtual ~ExtraKernInfo() {}
 
     bool    HasKernPairs() const;
@@ -369,7 +369,7 @@
     virtual void Initialize() const = 0;
 
 protected:
-    int     mnFontId;
+    sal_IntPtr     mnFontId;
 
     // container to map a unicode pair to an unscaled kerning value
     struct PairEqual{ int operator()(const ImplKernPairData& rA, const ImplKernPairData& rB) const
--- vcl/inc/outfont.hxx	2006-03-24 11:53:04.000000000 +0000
+++ vcl/inc/outfont.hxx	2006-03-24 12:14:10.000000000 +0000
@@ -148,7 +148,7 @@
 
     virtual int             GetHeight() const           { return mnHeight; }
     virtual int             GetWidth() const            { return mnWidth; }
-    virtual int             GetFontId() const           { return 0; }
+    virtual sal_IntPtr      GetFontId() const           { return 0; }
     bool                    IsScalable() const          { return (mnHeight == 0); }
     bool                    CheckMagic( int n ) const   { return (n == mnMagic); }
     ImplFontData*           GetNextFace() const         { return mpNext; }
--- vcl/source/glyphs/gcach_ftyp.cxx	2006-03-24 11:53:03.000000000 +0000
+++ vcl/source/glyphs/gcach_ftyp.cxx	2006-03-24 12:25:42.000000000 +0000
@@ -295,7 +295,7 @@
 // =======================================================================
 
 FtFontInfo::FtFontInfo( const ImplDevFontAttributes& rDevFontAttributes,
-    const ::rtl::OString& rNativeFileName, int nFaceNum, int nFontId, int nSynthetic,
+    const ::rtl::OString& rNativeFileName, int nFaceNum, sal_IntPtr nFontId, int nSynthetic,
     const ExtraKernInfo* pExtraKernInfo )
 :
     mpFontFile( FtFontFile::FindFontFile( rNativeFileName ) ),
@@ -505,7 +505,7 @@
 // -----------------------------------------------------------------------
 
 void FreetypeManager::AddFontFile( const rtl::OString& rNormalizedName,
-    int nFaceNum, int nFontId, const ImplDevFontAttributes& rDevFontAttr,
+    int nFaceNum, sal_IntPtr nFontId, const ImplDevFontAttributes& rDevFontAttr,
     const ExtraKernInfo* pExtraKernInfo )
 {
     if( !rNormalizedName.getLength() )
@@ -633,7 +633,7 @@
     FtFontInfo* pFontInfo = NULL;
 
     // find a FontInfo matching to the font id
-    int nFontId = reinterpret_cast<int>( rFSD.mpFontData );
+    sal_IntPtr nFontId = reinterpret_cast<sal_IntPtr>( rFSD.mpFontData );
     FontList::iterator it = maFontList.find( nFontId );
     if( it != maFontList.end() )
         pFontInfo = it->second;
@@ -662,7 +662,7 @@
 {
     // tell lower layers about the imminent death
     // TODO: better integration with GlyphCache
-    int nFontId = GetFontId();
+    sal_IntPtr nFontId = GetFontId();
     GlyphCache::GetInstance().RemoveFont( nFontId );
 }
 
Only in vcl/source/glyphs: .gcach_ftyp.cxx.swp
--- vcl/source/glyphs/gcach_ftyp.hxx	2006-03-24 11:53:03.000000000 +0000
+++ vcl/source/glyphs/gcach_ftyp.hxx	2006-03-24 12:24:51.000000000 +0000
@@ -80,7 +80,7 @@
 public:
                            FtFontInfo( const ImplDevFontAttributes&,
                                const ::rtl::OString& rNativeFileName,
-                               int nFaceNum, int nFontId, int nSynthetic,
+                               int nFaceNum, sal_IntPtr nFontId, int nSynthetic,
                                 const ExtraKernInfo* );
                           ~FtFontInfo();
 
@@ -92,7 +92,7 @@
     const ::rtl::OString* GetFontFileName() const   { return mpFontFile->GetFileName(); }
     int                   GetFaceNum() const        { return mnFaceNum; }
     int                   GetSynthetic() const      { return mnSynthetic; }
-    int                   GetFontId() const         { return mnFontId; }
+    sal_IntPtr            GetFontId() const         { return mnFontId; }
 
     bool                  IsSymbolFont() const      { return maDevFontAttributes.IsSymbolFont(); }
     const ImplFontAttributes& GetFontAttributes() const { return maDevFontAttributes; }
@@ -113,7 +113,7 @@
     int             mnRefCount;
     const int       mnSynthetic;
 
-    int             mnFontId;
+    sal_IntPtr      mnFontId;
     ImplDevFontAttributes maDevFontAttributes;
 
     // cache unicode->glyphid mapping because looking it up is expensive
@@ -151,7 +151,7 @@
 
     long                AddFontDir( const String& rUrlName );
     void                AddFontFile( const rtl::OString& rNormalizedName,
-                            int nFaceNum, int nFontId, const ImplDevFontAttributes&,
+                            int nFaceNum, sal_IntPtr nFontId, const ImplDevFontAttributes&,
                             const ExtraKernInfo* );
     void                AnnounceFonts( ImplDevFontList* ) const;
     void                ClearFontList();
@@ -159,11 +159,11 @@
     FreetypeServerFont* CreateFont( const ImplFontSelectData& );
 
 private:
-    typedef ::std::hash_map<int,FtFontInfo*> FontList;
+    typedef ::std::hash_map<sal_IntPtr,FtFontInfo*> FontList;
     FontList            maFontList;
 
-    int                 mnMaxFontId;
-    int                 mnNextFontId;
+    sal_IntPtr          mnMaxFontId;
+    sal_IntPtr          mnNextFontId;
 };
 
 // -----------------------------------------------------------------------
@@ -240,7 +240,7 @@
 
     virtual ImplFontEntry*  CreateFontInstance( ImplFontSelectData& ) const;
     virtual ImplFontData*   Clone() const   { return new ImplFTSFontData( *this ); }
-    virtual int             GetFontId() const { return mpFtFontInfo->GetFontId(); }
+    virtual sal_IntPtr      GetFontId() const { return mpFtFontInfo->GetFontId(); }
 
     static bool             CheckFontData( const ImplFontData& r ) { return r.CheckMagic( IFTSFONT_MAGIC ); }
 };
--- vcl/source/glyphs/glyphcache.cxx	2006-03-24 11:53:03.000000000 +0000
+++ vcl/source/glyphs/glyphcache.cxx	2006-03-24 12:26:26.000000000 +0000
@@ -81,7 +81,7 @@
 size_t GlyphCache::IFSD_Hash::operator()( const ImplFontSelectData& rFontSelData ) const
 {
     // TODO: is it worth to improve this hash function?
-    int nFontId = reinterpret_cast<int>( rFontSelData.mpFontData );
+    sal_IntPtr nFontId = reinterpret_cast<sal_IntPtr>( rFontSelData.mpFontData );
     size_t nHash = nFontId << 8;
     nHash   += rFontSelData.mnHeight;
     nHash   += rFontSelData.mnOrientation;
@@ -96,8 +96,8 @@
 bool GlyphCache::IFSD_Equal::operator()( const ImplFontSelectData& rA, const ImplFontSelectData& rB) const
 {
     // check font ids
-    int nFontIdA = reinterpret_cast<int>( rA.mpFontData );
-    int nFontIdB = reinterpret_cast<int>( rB.mpFontData );
+    sal_IntPtr nFontIdA = reinterpret_cast<sal_IntPtr>( rA.mpFontData );
+    sal_IntPtr nFontIdB = reinterpret_cast<sal_IntPtr>( rB.mpFontData );
     if( nFontIdA != nFontIdB )
         return false;
 
@@ -151,7 +151,7 @@
 // -----------------------------------------------------------------------
 
 // this gets called when someone deletes the related ImplFontData
-void GlyphCache::RemoveFont( int nFontId )
+void GlyphCache::RemoveFont( sal_IntPtr nFontId )
 {
     // since the FontList no longer depends on FontData objects there is no
     // more need to be clean it up when some FontData is about to be deleted
@@ -187,7 +187,7 @@
 // -----------------------------------------------------------------------
 
 void GlyphCache::AddFontFile( const rtl::OString& rNormalizedName, int nFaceNum,
-    int nFontId, const ImplDevFontAttributes& rDFA, const ExtraKernInfo* pExtraKern )
+    sal_IntPtr nFontId, const ImplDevFontAttributes& rDFA, const ExtraKernInfo* pExtraKern )
 {
     if( mpFtManager )
         mpFtManager->AddFontFile( rNormalizedName, nFaceNum, nFontId, rDFA, pExtraKern );
@@ -210,7 +210,7 @@
     if( rFontSelData.mpFontData == NULL )
         return NULL;
     // a serverfont request has a fontid > 0
-    int nFontId = rFontSelData.mpFontData->GetFontId();
+    sal_IntPtr nFontId = rFontSelData.mpFontData->GetFontId();
     if( nFontId <= 0 )
         return NULL;
 
@@ -499,7 +499,7 @@
 
 // =======================================================================
 
-ExtraKernInfo::ExtraKernInfo( int nFontId )
+ExtraKernInfo::ExtraKernInfo( sal_IntPtr nFontId )
 :   mnFontId( nFontId ),
     mbInitialized( false )
 {}
--- vcl/unx/source/gdi/pspgraphics.cxx	2006-03-24 11:53:03.000000000 +0000
+++ vcl/unx/source/gdi/pspgraphics.cxx	2006-03-24 12:22:23.000000000 +0000
@@ -503,12 +503,12 @@
 {
 private:
     enum { PSPFD_MAGIC = 0xb5bf01f0 };
-    int                     mnFontId;
+    sal_IntPtr              mnFontId;
 
 public:
                             ImplPspFontData( const psp::FastPrintFontInfo& );
     virtual                 ~ImplPspFontData();
-    virtual int             GetFontId() const { return mnFontId; }
+    virtual sal_IntPtr      GetFontId() const { return mnFontId; }
     virtual ImplFontData*   Clone() const { return new ImplPspFontData( *this ); }
     virtual ImplFontEntry*  CreateFontInstance( ImplFontSelectData& ) const;
     static bool             CheckFontData( const ImplFontData& r ) { return r.CheckMagic( PSPFD_MAGIC ); }
@@ -526,7 +526,7 @@
 ImplPspFontData::~ImplPspFontData()
 {
     // TODO: better integration with GlyphCache
-    int nFontId = GetFontId();
+    sal_IntPtr nFontId = GetFontId();
     GlyphCache::GetInstance().RemoveFont( nFontId );
 }
 
@@ -549,7 +549,7 @@
     virtual void        DrawText( SalGraphics& ) const;
 private:
     ::psp::PrinterGfx&  mrPrinterGfx;
-    int                 mnFontID;
+    sal_IntPtr          mnFontID;
     int                 mnFontHeight;
     int                 mnFontWidth;
     bool                mbVertical;
@@ -660,7 +660,7 @@
     int					getMaxCharPos() const { return mnMinCharPos+maText.getLength()-1; }
 private:
     ::psp::PrinterGfx&  mrPrinterGfx;
-    int                 mnFontID;
+    sal_IntPtr          mnFontID;
     int                 mnFontHeight;
     int                 mnFontWidth;
     bool                mbVertical;
@@ -782,7 +782,7 @@
     if( !pEntry )
         return 0;
     
-    sal_Int32 nID = pEntry->mpFontData ? (sal_Int32)pEntry->mpFontData->GetFontId() : 0;
+    sal_IntPtr nID = pEntry->mpFontData ? pEntry->mpFontData->GetFontId() : 0;
 
     // determine which font attributes need to be emulated
     bool bArtItalic = false;
