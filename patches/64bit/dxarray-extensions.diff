Index: extensions/source/svg/svgaction.cxx
===================================================================
RCS file: /cvs/util/extensions/source/svg/svgaction.cxx,v
retrieving revision 1.7
retrieving revision 1.7.100.2
diff -u -p -u -p -r1.7 -r1.7.100.2
--- extensions/source/svg/svgaction.cxx	6 Jan 2004 12:41:25 -0000	1.7
+++ extensions/source/svg/svgaction.cxx	21 Jan 2005 16:22:53 -0000	1.7.100.2
@@ -802,7 +802,7 @@ void SVGActionWriter::ImplWriteGradientE
 // -----------------------------------------------------------------------------
 
 void SVGActionWriter::ImplWriteText( const Point& rPos, const String& rText, 
-									 const long* pDXArray, long nWidth,
+									 const sal_Int32* pDXArray, long nWidth,
 									 const NMSP_RTL::OUString* pStyle )
 {
 	String	aText( rText ); aText.EraseLeadingChars( ' ' );
@@ -811,19 +811,19 @@ void SVGActionWriter::ImplWriteText( con
 	if( nLen )
 	{
 		Size	aNormSize;
-		long*	pOwnArray;
-		long*	pDX;
+		sal_Int32*	pOwnArray;
+		sal_Int32*	pDX;
 
 		// get text sizes
 		if( pDXArray )
 		{
 			pOwnArray = NULL;
 			aNormSize = Size( mpVDev->GetTextWidth( aText ), 0 );
-			pDX = (long*) pDXArray;
+			pDX = const_cast< sal_Int32* >( pDXArray );
 		}
 		else
 		{	
-			pOwnArray = new long[ nLen ];
+			pOwnArray = new sal_Int32[ nLen ];
 			aNormSize = Size( mpVDev->GetTextArray( aText, pOwnArray ), 0 );
 			pDX = pOwnArray;
 		}
Index: extensions/source/svg/svgaction.hxx
===================================================================
RCS file: /cvs/util/extensions/source/svg/svgaction.hxx,v
retrieving revision 1.2
retrieving revision 1.2.346.1
diff -u -p -u -p -r1.2 -r1.2.346.1
--- extensions/source/svg/svgaction.hxx	22 Mar 2001 17:49:17 -0000	1.2
+++ extensions/source/svg/svgaction.hxx	9 Sep 2004 09:55:21 -0000	1.2.346.1
@@ -168,7 +168,7 @@ private:
 	void					ImplWritePolygon( const Polygon& rPoly, sal_Bool bLineOnly, const NMSP_RTL::OUString* pStyle = NULL );
 	void					ImplWritePolyPolygon( const PolyPolygon& rPolyPoly, sal_Bool bLineOnly, const NMSP_RTL::OUString* pStyle = NULL );
 	void					ImplWriteGradientEx( const PolyPolygon& rPolyPoly, const Gradient& rGradient, const NMSP_RTL::OUString* pStyle = NULL );
-	void					ImplWriteText( const Point& rPos, const String& rText, const long* pDXArray, long nWidth, const NMSP_RTL::OUString* pStyle = NULL );
+	void					ImplWriteText( const Point& rPos, const String& rText, const sal_Int32* pDXArray, long nWidth, const NMSP_RTL::OUString* pStyle = NULL );
 	void					ImplWriteBmp( const BitmapEx& rBmpEx, const Point& rPt, const Size& rSz, const Point& rSrcPt, const Size& rSrcSz, const NMSP_RTL::OUString* pStyle = NULL );
 
 	void					ImplCheckFontAttributes();
