Index: svtools/inc/cacheoptions.hxx
===================================================================
RCS file: /cvs/util/svtools/inc/cacheoptions.hxx,v
retrieving revision 1.2
retrieving revision 1.2.638.1
diff -u -p -r1.2 -r1.2.638.1
--- svtools/inc/cacheoptions.hxx	8 May 2001 09:05:17 -0000	1.2
+++ svtools/inc/cacheoptions.hxx	9 Sep 2004 09:17:41 -0000	1.2.638.1
@@ -165,8 +165,8 @@ class SvtCacheOptions
 
 		void		SetWriterOLE_Objects( sal_Int32 nObjects );
 		void		SetDrawingEngineOLE_Objects( sal_Int32 nObjects );
-		void		SetGraphicManagerTotalCacheSize( sal_Int32 nTotalCacheSize );
-		void		SetGraphicManagerObjectCacheSize( sal_Int32 nObjectCacheSize );
+		void		SetGraphicManagerTotalCacheSize( sal_Size nTotalCacheSize );
+		void		SetGraphicManagerObjectCacheSize( sal_Size nObjectCacheSize );
 		void        SetGraphicManagerObjectReleaseTime( sal_Int32 nReleaseTimeSeconds );
 
 	//-------------------------------------------------------------------------------------------------------------
Index: svtools/inc/calendar.hxx
===================================================================
RCS file: /cvs/util/svtools/inc/calendar.hxx,v
retrieving revision 1.2
retrieving revision 1.1.1.1.650.2
diff -u -p -r1.2 -r1.1.1.1.650.2
--- svtools/inc/calendar.hxx	28 Jun 2004 17:06:00 -0000	1.2
+++ svtools/inc/calendar.hxx	19 Oct 2004 16:31:48 -0000	1.1.1.1.650.2
@@ -222,7 +222,7 @@ private:
 	Rectangle		maPrevRect;
 	Rectangle		maNextRect;
 	String			maDayOfWeekText;
-	long			mnDayOfWeekAry[7];
+	sal_Int32		mnDayOfWeekAry[7];
 	Date			maOldFormatFirstDate;
 	Date			maOldFormatLastDate;
 	Date			maFirstDate;
Index: svtools/inc/filerec.hxx
===================================================================
RCS file: /cvs/util/svtools/inc/filerec.hxx,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.650.1
diff -u -p -r1.1.1.1 -r1.1.1.1.650.1
--- svtools/inc/filerec.hxx	18 Sep 2000 16:58:50 -0000	1.1.1.1
+++ svtools/inc/filerec.hxx	21 Jul 2004 17:34:07 -0000	1.1.1.1.650.1
@@ -72,24 +72,24 @@
 
 #include <tools/stream.hxx>
 
-SV_DECL_VARARR( SfxUINT32s, UINT32, 8, 8 );
+SV_DECL_VARARR( SfxUINT32s, sal_uInt32, 8, 8 );
 
 //------------------------------------------------------------------------
 
-#define SFX_BOOL_DONTCARE				BOOL(2) 	// Don't-Care-Wert f"ur BOOLs
+#define SFX_BOOL_DONTCARE				sal_Bool(2) 	// Don't-Care-Wert f"ur BOOLs
 
-#define SFX_REC_PRETAG_EXT				BYTE(0x00)	// Pre-Tag f"ur Extended-Records
-#define SFX_REC_PRETAG_EOR				BYTE(0xFF)	// Pre-Tag f"ur End-Of-Records
+#define SFX_REC_PRETAG_EXT				sal_uInt8(0x00)	// Pre-Tag f"ur Extended-Records
+#define SFX_REC_PRETAG_EOR				sal_uInt8(0xFF)	// Pre-Tag f"ur End-Of-Records
 
-#define SFX_REC_TYPE_NONE				BYTE(0x00)	// unbekannter Record-Typ
-#define SFX_REC_TYPE_FIRST				BYTE(0x01)
-#define SFX_REC_TYPE_SINGLE 			BYTE(0x01)	// Single-Content-Record
-#define SFX_REC_TYPE_FIXSIZE			BYTE(0x02)	// Fix-Size-Multi-Content-Record
-#define SFX_REC_TYPE_VARSIZE_RELOC      BYTE(0x03)	// variable Rec-Size
-#define SFX_REC_TYPE_VARSIZE            BYTE(0x04)	// alt (nicht verschiebbar)
-#define SFX_REC_TYPE_MIXTAGS_RELOC  	BYTE(0x07)	// Mixed Tag Content-Record
-#define SFX_REC_TYPE_MIXTAGS			BYTE(0x08)	// alt (nicht verschiebbar)
-#define SFX_REC_TYPE_LAST				BYTE(0x08)
+#define SFX_REC_TYPE_NONE				sal_uInt8(0x00)	// unbekannter Record-Typ
+#define SFX_REC_TYPE_FIRST				sal_uInt8(0x01)
+#define SFX_REC_TYPE_SINGLE 			sal_uInt8(0x01)	// Single-Content-Record
+#define SFX_REC_TYPE_FIXSIZE			sal_uInt8(0x02)	// Fix-Size-Multi-Content-Record
+#define SFX_REC_TYPE_VARSIZE_RELOC      sal_uInt8(0x03)	// variable Rec-Size
+#define SFX_REC_TYPE_VARSIZE            sal_uInt8(0x04)	// alt (nicht verschiebbar)
+#define SFX_REC_TYPE_MIXTAGS_RELOC  	sal_uInt8(0x07)	// Mixed Tag Content-Record
+#define SFX_REC_TYPE_MIXTAGS			sal_uInt8(0x08)	// alt (nicht verschiebbar)
+#define SFX_REC_TYPE_LAST				sal_uInt8(0x08)
 #define SFX_REC_TYPE_MINI					0x100	// Mini-Record
 #define SFX_REC_TYPE_DRAWENG				0x400	// Drawing-Engine-Record
 #define SFX_REC_TYPE_EOR					0xF00	// End-Of-Records
@@ -263,18 +263,18 @@ class SfxMiniRecordWriter
 {
 protected:
 	SvStream*		_pStream;	//	<SvStream>, in dem der Record liegt
-	UINT32			_nStartPos; //	Start-Position des Gesamt-Records im Stream
+	sal_uInt32	_nStartPos; //	Start-Position des Gesamt-Records im Stream
 	FASTBOOL		_bHeaderOk; /*	TRUE, wenn der Header schon geschrieben ist;
 									bei DBG_UTIL wird SFX_BOOL_DONTCARE ver-
 									wendet, um die Gr"o\se von Fix-Sized-Records
 									zu pr"ufen. */
-	BYTE			_nPreTag;	//	in den Header zu schreibendes 'Pre-Tag'
+	sal_uInt8			_nPreTag;	//	in den Header zu schreibendes 'Pre-Tag'
 
 public:
 	inline			SfxMiniRecordWriter( SvStream *pStream,
-										 BYTE nTag );
-	inline			SfxMiniRecordWriter( SvStream *pStream, BYTE nTag,
-										 UINT32 nSize );
+										 sal_uInt8 nTag );
+	inline			SfxMiniRecordWriter( SvStream *pStream, sal_uInt8 nTag,
+										 sal_uInt32 nSize );
 
 	inline			~SfxMiniRecordWriter();
 
@@ -282,7 +282,7 @@ public:
 
 	inline void		Reset();
 
-	UINT32			Close( FASTBOOL bSeekToEndOfRec = TRUE );
+	sal_uInt32			Close( FASTBOOL bSeekToEndOfRec = TRUE );
 
 private:
 					// not implementend, not allowed
@@ -322,35 +322,35 @@ class SfxMiniRecordReader
 {
 protected:
 	SvStream*			_pStream;	//	<SvStream>, aus dem gelesen wird
-	UINT32				_nEofRec;	//	Position direkt hinter dem Record
+	sal_uInt32		_nEofRec;	//	Position direkt hinter dem Record
 	FASTBOOL			_bSkipped;	//	TRUE: der Record wurde explizit geskippt
-	BYTE				_nPreTag;	//	aus dem Header gelesenes Pre-Tag
+	sal_uInt8			_nPreTag;	//	aus dem Header gelesenes Pre-Tag
 
 						// Drei-Phasen-Ctor f"ur Subklassen
 						SfxMiniRecordReader() {}
-   void 				Construct_Impl( SvStream *pStream, BYTE nTag )
+   void 				Construct_Impl( SvStream *pStream, sal_uInt8 nTag )
 						{
 							_pStream = pStream;
 							_bSkipped = FALSE;
 							_nPreTag = nTag;
 						}
-	inline FASTBOOL 	SetHeader_Impl( UINT32 nHeader );
+	inline FASTBOOL 	SetHeader_Impl( sal_uInt32 nHeader );
 
 						// als ung"ultig markieren und zur"uck-seeken
-	void				SetInvalid_Impl( UINT32 nRecordStartPos )
+	void				SetInvalid_Impl( sal_uInt32 nRecordStartPos )
 						{
 							_nPreTag = SFX_REC_PRETAG_EOR;
 							_pStream->Seek( nRecordStartPos );
 						}
 
 public:
-	static USHORT   	ScanRecordType( SvStream *pStream );
+	static sal_uInt16   	ScanRecordType( SvStream *pStream );
 
 						SfxMiniRecordReader( SvStream *pStream );
-						SfxMiniRecordReader( SvStream *pStream, BYTE nTag );
+						SfxMiniRecordReader( SvStream *pStream, sal_uInt8 nTag );
 	inline				~SfxMiniRecordReader();
 
-	inline BYTE 		GetTag() const;
+	inline sal_uInt8 		GetTag() const;
 	inline FASTBOOL 	IsValid() const;
 
 	inline SvStream&	operator*() const;
@@ -405,20 +405,20 @@ class SfxSingleRecordWriter: public SfxM
 
 {
 protected:
-					SfxSingleRecordWriter( BYTE nRecordType,
+					SfxSingleRecordWriter( sal_uInt8 nRecordType,
 										   SvStream *pStream,
-										   UINT16 nTag, BYTE nCurVer );
+										   sal_uInt16 nTag, sal_uInt8 nCurVer );
 
 public:
 					SfxSingleRecordWriter( SvStream *pStream,
-										   UINT16 nTag, BYTE nCurVer );
+										   sal_uInt16 nTag, sal_uInt8 nCurVer );
 					SfxSingleRecordWriter( SvStream *pStream,
-										   UINT16 nTag, BYTE nCurVer,
-										   UINT32 nSize );
+										   sal_uInt16 nTag, sal_uInt8 nCurVer,
+										   sal_uInt32 nSize );
 
 	inline void		Reset();
 
-	UINT32			Close( FASTBOOL bSeekToEndOfRec = TRUE );
+	sal_uInt32			Close( FASTBOOL bSeekToEndOfRec = TRUE );
 };
 
 //------------------------------------------------------------------------
@@ -454,9 +454,9 @@ class SfxSingleRecordReader: public SfxM
 
 {
 protected:
-	UINT16				_nRecordTag;	// Art des Gesamt-Inhalts
-	BYTE				_nRecordVer;	// Version des Gesamt-Inhalts
-	BYTE				_nRecordType;	// Record Type aus dem Header
+	sal_uInt16		_nRecordTag;	// Art des Gesamt-Inhalts
+	sal_uInt8			_nRecordVer;	// Version des Gesamt-Inhalts
+	sal_uInt8			_nRecordType;	// Record Type aus dem Header
 
 						// Drei-Phasen-Ctor f"ur Subklassen
 						SfxSingleRecordReader() {}
@@ -465,17 +465,17 @@ protected:
 							SfxMiniRecordReader::Construct_Impl(
 									pStream, SFX_REC_PRETAG_EXT );
 						}
-	FASTBOOL			FindHeader_Impl( UINT16 nTypes, UINT16 nTag );
-	FASTBOOL            ReadHeader_Impl( USHORT nTypes );
+	FASTBOOL			FindHeader_Impl( sal_uInt16 nTypes, sal_uInt16 nTag );
+	FASTBOOL            ReadHeader_Impl( sal_uInt16 nTypes );
 
 public:
 						SfxSingleRecordReader( SvStream *pStream );
-						SfxSingleRecordReader( SvStream *pStream, USHORT nTag );
+						SfxSingleRecordReader( SvStream *pStream, sal_uInt16 nTag );
 
-	inline UINT16		GetTag() const;
+	inline sal_uInt16		GetTag() const;
 
-	inline BYTE 		GetVersion() const;
-	inline FASTBOOL 	HasVersion( USHORT nVersion ) const;
+	inline sal_uInt8 		GetVersion() const;
+	inline FASTBOOL 	HasVersion( sal_uInt16 nVersion ) const;
 };
 
 //------------------------------------------------------------------------
@@ -520,7 +520,7 @@ class SfxMultiFixRecordWriter: public Sf
 
 	{
 		SfxMultiFixRecordWriter aRecord( pStream, MY_TAG_X, MY_VERSION );
-		for ( USHORT n = 0; n < Count(); ++n )
+		for ( sal_uInt16 n = 0; n < Count(); ++n )
 		{
 			aRecord.NewContent();
 			*aRecord << aMember1[n];
@@ -531,28 +531,28 @@ class SfxMultiFixRecordWriter: public Sf
 
 {
 protected:
-	UINT32			_nContentStartPos;	/*	Startposition des jeweiligen
+	sal_uInt32			_nContentStartPos;	/*	Startposition des jeweiligen
 											Contents - nur bei DBG_UTIL
 											und f"ur Subklassen */
-	UINT32			_nContentSize;		//	Gr"o\se jedes Contents
-	UINT16			_nContentCount; 	//	jeweilige Anzahl der Contents
+	sal_uInt32			_nContentSize;		//	Gr"o\se jedes Contents
+	sal_uInt16			_nContentCount; 	//	jeweilige Anzahl der Contents
 
-					SfxMultiFixRecordWriter( BYTE nRecordType,
+					SfxMultiFixRecordWriter( sal_uInt8 nRecordType,
 											 SvStream *pStream,
-											 UINT16 nTag, BYTE nCurVer,
-											 UINT32 nContentSize );
+											 sal_uInt16 nTag, sal_uInt8 nCurVer,
+											 sal_uInt32 nContentSize );
 
 public:
 					SfxMultiFixRecordWriter( SvStream *pStream,
-											 UINT16 nTag, BYTE nCurVer,
-											 UINT32 nContentSize );
+											 sal_uInt16 nTag, sal_uInt8 nCurVer,
+											 sal_uInt32 nContentSize );
 	inline			~SfxMultiFixRecordWriter();
 
 	inline void 	NewContent();
 
 	inline void		Reset();
 
-	UINT32			Close( FASTBOOL bSeekToEndOfRec = TRUE );
+	sal_uInt32			Close( FASTBOOL bSeekToEndOfRec = TRUE );
 };
 
 //------------------------------------------------------------------------
@@ -596,7 +596,7 @@ class SfxMultiVarRecordWriter: public Sf
 
 	{
 		SfxMultiVarRecordWriter aRecord( pStream, MY_TAG_X, MY_VERSION );
-		for ( USHORT n = 0; n < Count(); ++n )
+		for ( sal_uInt16 n = 0; n < Count(); ++n )
 		{
 			aRecord.NewContent();
 			*aRecord << aMember1[n];
@@ -608,24 +608,24 @@ class SfxMultiVarRecordWriter: public Sf
 {
 protected:
 	SfxUINT32s  		_aContentOfs;
-	USHORT              _nContentVer;   // nur f"ur SfxMultiMixRecordWriter
+	sal_uInt16              _nContentVer;   // nur f"ur SfxMultiMixRecordWriter
 
-						SfxMultiVarRecordWriter( BYTE nRecordType,
+						SfxMultiVarRecordWriter( sal_uInt8 nRecordType,
 												 SvStream *pStream,
-												 USHORT nRecordTag,
-												 BYTE nRecordVer );
+												 sal_uInt16 nRecordTag,
+												 sal_uInt8 nRecordVer );
 
 	void                FlushContent_Impl();
 
 public:
 						SfxMultiVarRecordWriter( SvStream *pStream,
-												 USHORT nRecordTag,
-												 BYTE nRecordVer );
+												 sal_uInt16 nRecordTag,
+												 sal_uInt8 nRecordVer );
 						~SfxMultiVarRecordWriter();
 
 	void				NewContent();
 
-	virtual UINT32		Close( FASTBOOL bSeekToEndOfRec = TRUE );
+	virtual sal_uInt32		Close( FASTBOOL bSeekToEndOfRec = TRUE );
 };
 
 //------------------------------------------------------------------------
@@ -668,10 +668,10 @@ class SfxMultiMixRecordWriter: public Sf
 {
 public:
 	inline				SfxMultiMixRecordWriter( SvStream *pStream,
-												 USHORT nRecordTag,
-												 BYTE nRecordVer );
+												 sal_uInt16 nRecordTag,
+												 sal_uInt8 nRecordVer );
 
-	void				NewContent( USHORT nTag, BYTE nVersion );
+	void				NewContent( sal_uInt16 nTag, sal_uInt8 nVersion );
 
 // private: geht nicht, da einige Compiler dann auch vorherige privat machen
 	void                NewContent()
@@ -697,7 +697,7 @@ class SfxMultiRecordReader: public SfxSi
 
 	{
 		SfxMultiRecordReader aRecord( pStream );
-		for ( USHORT nRecNo = 0; aRecord.GetContent(); ++nRecNo )
+		for ( sal_uInt16 nRecNo = 0; aRecord.GetContent(); ++nRecNo )
 		{
 			switch ( aRecord.GetTag() )
 			{
@@ -716,30 +716,30 @@ class SfxMultiRecordReader: public SfxSi
 */
 
 {
-	UINT32				_nStartPos;		//	Start-Position des Records
-	UINT32* 			_pContentOfs;	//	Offsets der Startpositionen
-	UINT32				_nContentSize;	//	Size jedes einzelnen / Tabellen-Pos
-	UINT16				_nContentCount; //	Anzahl der Contents im Record
-	UINT16				_nContentNo;	/*	der Index des aktuellen Contents
+	sal_uInt32				_nStartPos;		//	Start-Position des Records
+	sal_uInt32* 			_pContentOfs;	//	Offsets der Startpositionen
+	sal_uInt32				_nContentSize;	//	Size jedes einzelnen / Tabellen-Pos
+	sal_uInt16				_nContentCount; //	Anzahl der Contents im Record
+	sal_uInt16				_nContentNo;	/*	der Index des aktuellen Contents
 											enth"alt jeweils den Index des
 											Contents, der beim n"achsten
 											GetContent() geholt wird */
-	UINT16				_nContentTag;	//	Art-Kennung des aktuellen Contents
-	BYTE				_nContentVer;	//	Versions-Kennung des akt. Contents
+	sal_uInt16				_nContentTag;	//	Art-Kennung des aktuellen Contents
+	sal_uInt8				_nContentVer;	//	Versions-Kennung des akt. Contents
 
 	FASTBOOL			ReadHeader_Impl();
 
 public:
 						SfxMultiRecordReader( SvStream *pStream );
-						SfxMultiRecordReader( SvStream *pStream, UINT16 nTag );
+						SfxMultiRecordReader( SvStream *pStream, sal_uInt16 nTag );
 						~SfxMultiRecordReader();
 
 	FASTBOOL			GetContent();
-	inline UINT16		GetContentTag();
-	inline BYTE 		GetContentVersion() const;
-	inline FASTBOOL 	HasContentVersion( USHORT nVersion ) const;
+	inline sal_uInt16		GetContentTag();
+	inline sal_uInt8 		GetContentVersion() const;
+	inline FASTBOOL 	HasContentVersion( sal_uInt16 nVersion ) const;
 
-	inline UINT32		ContentCount() const;
+	inline sal_uInt32		ContentCount() const;
 };
 
 //=========================================================================
@@ -747,7 +747,7 @@ public:
 inline SfxMiniRecordWriter::SfxMiniRecordWriter
 (
 	SvStream*       pStream,        // Stream, in dem der Record angelegt wird
-	BYTE            nTag            // Record-Tag zwischen 0x01 und 0xFE
+	sal_uInt8            nTag            // Record-Tag zwischen 0x01 und 0xFE
 )
 
 /*  [Beschreibung]
@@ -773,8 +773,8 @@ inline SfxMiniRecordWriter::SfxMiniRecor
 inline SfxMiniRecordWriter::SfxMiniRecordWriter
 (
 	SvStream*		pStream,		// Stream, in dem der Record angelegt wird
-	BYTE			nTag,			// Record-Tag zwischen 0x01 und 0xFE
-	UINT32			nSize			// Gr"o\se der Daten in Bytes
+	sal_uInt8			nTag,			// Record-Tag zwischen 0x01 und 0xFE
+	sal_uInt32			nSize			// Gr"o\se der Daten in Bytes
 )
 
 /*	[Beschreibung]
@@ -869,7 +869,7 @@ inline void SfxMiniRecordReader::Skip()
 
 //-------------------------------------------------------------------------
 
-inline BYTE SfxMiniRecordReader::GetTag() const
+inline sal_uInt8 SfxMiniRecordReader::GetTag() const
 
 /*	[Beschreibung]
 
@@ -916,18 +916,18 @@ inline SvStream& SfxMiniRecordReader::op
 
 //=========================================================================
 
-inline UINT32 SfxSingleRecordWriter::Close( FASTBOOL bSeekToEndOfRec )
+inline sal_uInt32 SfxSingleRecordWriter::Close( FASTBOOL bSeekToEndOfRec )
 
 //	siehe <SfxMiniRecordWriter::Close(FASTBOOL)>
 
 {
-	UINT32 nRet = 0;
+	sal_uInt32 nRet = 0;
 
 	// wurde der Header noch nicht geschrieben?
 	if ( !_bHeaderOk )
 	{
 		// Basisklassen-Header schreiben
-		UINT32 nEndPos = SfxMiniRecordWriter::Close( bSeekToEndOfRec );
+		sal_uInt32 nEndPos = SfxMiniRecordWriter::Close( bSeekToEndOfRec );
 
 		// ggf. ans Ende des eigenen Headers seeken oder hinter Rec bleiben
 		if ( !bSeekToEndOfRec )
@@ -956,7 +956,7 @@ inline void	SfxSingleRecordWriter::Reset
 
 //=========================================================================
 
-inline UINT16 SfxSingleRecordReader::GetTag() const
+inline sal_uInt16 SfxSingleRecordReader::GetTag() const
 
 /*  [Beschreibung]
 
@@ -969,7 +969,7 @@ inline UINT16 SfxSingleRecordReader::Get
 
 //-------------------------------------------------------------------------
 
-inline BYTE SfxSingleRecordReader::GetVersion() const
+inline sal_uInt8 SfxSingleRecordReader::GetVersion() const
 
 /*	[Beschreibung]
 
@@ -982,7 +982,7 @@ inline BYTE SfxSingleRecordReader::GetVe
 
 //-------------------------------------------------------------------------
 
-inline FASTBOOL SfxSingleRecordReader::HasVersion( USHORT nVersion ) const
+inline FASTBOOL SfxSingleRecordReader::HasVersion( sal_uInt16 nVersion ) const
 
 /*	[Beschreibung]
 
@@ -1048,8 +1048,8 @@ inline void SfxMultiFixRecordWriter::New
 inline SfxMultiMixRecordWriter::SfxMultiMixRecordWriter
 (
 	SvStream*		pStream,	// Stream, in dem der Record angelegt wird
-	USHORT			nRecordTag, // Gesamt-Record-Art-Kennung
-	BYTE			nRecordVer	// Gesamt-Record-Versions-Kennung
+	sal_uInt16			nRecordTag, // Gesamt-Record-Art-Kennung
+	sal_uInt8			nRecordVer	// Gesamt-Record-Versions-Kennung
 )
 
 /*  [Beschreibung]
@@ -1076,7 +1076,7 @@ inline void	SfxMultiFixRecordWriter::Res
 
 //=========================================================================
 
-inline UINT16 SfxMultiRecordReader::GetContentTag()
+inline sal_uInt16 SfxMultiRecordReader::GetContentTag()
 
 /*	[Beschreibung]
 
@@ -1090,7 +1090,7 @@ inline UINT16 SfxMultiRecordReader::GetC
 
 //-------------------------------------------------------------------------
 
-inline BYTE SfxMultiRecordReader::GetContentVersion() const
+inline sal_uInt8 SfxMultiRecordReader::GetContentVersion() const
 
 /*  [Beschreibung]
 
@@ -1104,7 +1104,7 @@ inline BYTE SfxMultiRecordReader::GetCon
 
 //-------------------------------------------------------------------------
 
-inline FASTBOOL SfxMultiRecordReader::HasContentVersion( USHORT nVersion ) const
+inline FASTBOOL SfxMultiRecordReader::HasContentVersion( sal_uInt16 nVersion ) const
 
 /*  [Beschreibung]
 
@@ -1119,7 +1119,7 @@ inline FASTBOOL SfxMultiRecordReader::Ha
 
 //-------------------------------------------------------------------------
 
-inline UINT32 SfxMultiRecordReader::ContentCount() const
+inline sal_uInt32 SfxMultiRecordReader::ContentCount() const
 
 /*	[Beschreibung]
 
Index: svtools/inc/flbytes.hxx
===================================================================
RCS file: /cvs/util/svtools/inc/flbytes.hxx,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.650.1
diff -u -p -r1.1.1.1 -r1.1.1.1.650.1
--- svtools/inc/flbytes.hxx	18 Sep 2000 16:58:50 -0000	1.1.1.1
+++ svtools/inc/flbytes.hxx	21 Jul 2004 17:34:07 -0000	1.1.1.1.650.1
@@ -73,7 +73,7 @@
 class SvFillLockBytes : public SvLockBytes
 {
 	SvLockBytesRef xLockBytes;
-	ULONG nFilledSize;
+	sal_Size nFilledSize;
 	BOOL bTerminated;
 	BOOL bSync;
 public:
@@ -81,17 +81,17 @@ public:
 
 	SvFillLockBytes( SvLockBytes* pLockBytes );
 	virtual ErrCode ReadAt(
-		ULONG nPos, void* pBuffer, ULONG nCount, ULONG* pRead ) const;
+		sal_Size nPos, void* pBuffer, sal_Size nCount, sal_Size* pRead ) const;
 	virtual ErrCode WriteAt(
-		ULONG nPos, const void* pBuffer, ULONG nCount, ULONG* pWritten );
+		sal_Size nPos, const void* pBuffer, sal_Size nCount, sal_Size* pWritten );
 	virtual ErrCode Flush() const;
-	virtual ErrCode SetSize( ULONG nSize );
-	virtual ErrCode LockRegion( ULONG nPos, ULONG nCount, LockType );
-	virtual ErrCode UnlockRegion( ULONG nPos, ULONG nCount, LockType );
+	virtual ErrCode SetSize( sal_Size nSize );
+	virtual ErrCode LockRegion( sal_Size nPos, sal_Size nCount, LockType );
+	virtual ErrCode UnlockRegion( sal_Size nPos, sal_Size nCount, LockType );
 	virtual ErrCode Stat( SvLockBytesStat*, SvLockBytesStatFlag ) const;
-	ErrCode FillAppend( const void* pBuffer, ULONG nCount, ULONG *pWritten );
-	ULONG   Tell() const { return nFilledSize; }
-	void    Seek( ULONG nPos ) { nFilledSize = nPos; }
+	ErrCode FillAppend( const void* pBuffer, sal_Size nCount, sal_Size *pWritten );
+	sal_Size   Tell() const { return nFilledSize; }
+	void    Seek( sal_Size nPos ) { nFilledSize = nPos; }
 
 	void Terminate();
 };
@@ -133,34 +133,34 @@ public:
 	virtual BOOL IsSynchronMode() const
 	{ return m_xAsyncLockBytes->IsSynchronMode(); }
 
-	virtual ErrCode ReadAt(ULONG nPos, void * pBuffer, ULONG nCount,
-						   ULONG * pRead) const;
+	virtual ErrCode ReadAt(sal_Size nPos, void * pBuffer, sal_Size nCount,
+						   sal_Size * pRead) const;
 
-	virtual ErrCode WriteAt(ULONG nPos, const void * pBuffer, ULONG nCount,
-							ULONG * pWritten);
+	virtual ErrCode WriteAt(sal_Size nPos, const void * pBuffer, sal_Size nCount,
+							sal_Size * pWritten);
 
 	virtual ErrCode Flush() const { return m_xAsyncLockBytes->Flush(); }
 
-	virtual ErrCode SetSize(ULONG nSize)
+	virtual ErrCode SetSize(sal_Size nSize)
 	{ return m_xAsyncLockBytes->SetSize(nSize); }
 
-	virtual ErrCode LockRegion(ULONG nPos, ULONG nCount, LockType eType)
+	virtual ErrCode LockRegion(sal_Size nPos, sal_Size nCount, LockType eType)
 	{ return m_xAsyncLockBytes->LockRegion(nPos, nCount, eType); }
 
-	virtual ErrCode UnlockRegion(ULONG nPos, ULONG nCount, LockType eType)
+	virtual ErrCode UnlockRegion(sal_Size nPos, sal_Size nCount, LockType eType)
 	{ return m_xAsyncLockBytes->UnlockRegion(nPos, nCount, eType); }
 
 	virtual ErrCode Stat(SvLockBytesStat * pStat, SvLockBytesStatFlag eFlag)
 		const
 	{ return m_xAsyncLockBytes->Stat(pStat, eFlag); }
 
-	virtual ErrCode FillAppend(const void * pBuffer, ULONG nCount,
-							   ULONG * pWritten)
+	virtual ErrCode FillAppend(const void * pBuffer, sal_Size nCount,
+							   sal_Size * pWritten)
 	{ return m_xAsyncLockBytes->FillAppend(pBuffer, nCount, pWritten); }
 
-	virtual ULONG Tell() const { return m_xAsyncLockBytes->Tell(); }
+	virtual sal_Size Tell() const { return m_xAsyncLockBytes->Tell(); }
 
-	virtual ULONG Seek(ULONG nPos)
+	virtual sal_Size Seek(sal_Size nPos)
 	{ return m_xAsyncLockBytes->Seek(nPos); }
 
 	virtual void Terminate() { m_xAsyncLockBytes->Terminate(); }
@@ -187,19 +187,19 @@ public:
 	SvCompositeLockBytes( );
 	~SvCompositeLockBytes();
 
-	void Append( SvLockBytes* pLockBytes, ULONG nPos, ULONG nOffset );
-	ULONG RelativeOffset( ULONG nPos ) const;
+	void Append( SvLockBytes* pLockBytes, sal_Size nPos, sal_Size nOffset );
+	sal_Size RelativeOffset( sal_Size nPos ) const;
 	void  SetIsPending( BOOL bSet );
 	SvLockBytes*    GetLastLockBytes() const;
 
 	virtual ErrCode ReadAt(
-		ULONG nPos, void* pBuffer, ULONG nCount, ULONG* pRead ) const;
+		sal_Size nPos, void* pBuffer, sal_Size nCount, sal_Size* pRead ) const;
 	virtual ErrCode WriteAt(
-		ULONG nPos, const void* pBuffer, ULONG nCount, ULONG* pWritten );
+		sal_Size nPos, const void* pBuffer, sal_Size nCount, sal_Size* pWritten );
 	virtual ErrCode Flush() const;
-	virtual ErrCode SetSize( ULONG nSize );
-	virtual ErrCode LockRegion( ULONG nPos, ULONG nCount, LockType );
-	virtual ErrCode UnlockRegion( ULONG nPos, ULONG nCount, LockType );
+	virtual ErrCode SetSize( sal_Size nSize );
+	virtual ErrCode LockRegion( sal_Size nPos, sal_Size nCount, LockType );
+	virtual ErrCode UnlockRegion( sal_Size nPos, sal_Size nCount, LockType );
 	virtual ErrCode Stat( SvLockBytesStat*, SvLockBytesStatFlag ) const;
 };
 
Index: svtools/inc/roadmap.hxx
===================================================================
RCS file: /cvs/util/svtools/inc/roadmap.hxx,v
retrieving revision 1.2
retrieving revision 1.2.52.1
diff -u -p -r1.2 -r1.2.52.1
--- svtools/inc/roadmap.hxx	19 May 2004 13:59:12 -0000	1.2
+++ svtools/inc/roadmap.hxx	21 Jul 2004 17:34:07 -0000	1.2.52.1
@@ -135,7 +135,7 @@ namespace svt
         Link            GetItemSelectHdl( ) const;
 
     protected:
-        sal_Int32       PreNotify( NotifyEvent& rNEvt );
+        long            PreNotify( NotifyEvent& rNEvt );
 
     protected:
         /// called when an item has been selected by any means
Index: svtools/inc/sbxdef.hxx
===================================================================
RCS file: /cvs/util/svtools/inc/sbxdef.hxx,v
retrieving revision 1.5
retrieving revision 1.5.132.1
diff -u -p -r1.5 -r1.5.132.1
--- svtools/inc/sbxdef.hxx	17 Mar 2004 13:25:37 -0000	1.5
+++ svtools/inc/sbxdef.hxx	21 Jul 2004 17:34:07 -0000	1.5.132.1
@@ -88,54 +88,54 @@ enum SbxClassType {			// SBX-Klassen-IDs
 #define _SBX_DATA_TYPE
 
 enum SbxDataType {
-	SbxEMPTY 	  =  0,	// * Uninitialized
-	SbxNULL 	  =  1,	// * Contains no valid data
-	SbxINTEGER	  =  2,	// * Integer (INT16)
-	SbxLONG		  =  3,	// * Long integer (INT32)
-	SbxSINGLE	  =  4,	// * Single-precision floating point number (float)
-	SbxDOUBLE	  =  5,	// * Double-precision floating point number (double)
+	SbxEMPTY      =  0,	// * Uninitialized
+	SbxNULL       =  1,	// * Contains no valid data
+	SbxINTEGER    =  2,	// * Integer (INT16)
+	SbxLONG       =  3,	// * Long integer (INT32)
+	SbxSINGLE     =  4,	// * Single-precision floating point number (float)
+	SbxDOUBLE     =  5,	// * Double-precision floating point number (double)
 	SbxCURRENCY   =  6,	//   Currency (INT64)
-	SbxDATE		  =  7,	// * Date (double)
-	SbxSTRING	  =  8,	// * String (StarView)
+	SbxDATE       =  7,	// * Date (double)
+	SbxSTRING     =  8,	// * String (StarView)
 	SbxOBJECT     =  9,	// * SbxBase object pointer
 	SbxERROR      = 10,	// * Error (UINT16)
-	SbxBOOL		  = 11,	// * Boolean (0 or -1)
+	SbxBOOL       = 11,	// * Boolean (0 or -1)
 	SbxVARIANT    = 12,	// * Anzeige fuer varianten Datentyp
 	SbxDATAOBJECT = 13,	// * Common data object w/o ref count
 
-	SbxCHAR		  = 16,	// * signed char
-	SbxBYTE 	  = 17,	// * unsigned char
-	SbxUSHORT	  = 18,	// * unsigned short (UINT16)
-	SbxULONG 	  = 19,	// * unsigned long (UINT32)
-	SbxLONG64	  = 20,	//   signed 64-bit int
-	SbxULONG64	  = 21,	//   unsigned 64-bit int
-	SbxINT		  = 22,	// * signed machine-dependent int
-	SbxUINT		  = 23,	// * unsigned machine-dependent int
-	SbxVOID		  = 24,	// * no value (= SbxEMPTY)
-	SbxHRESULT	  = 25,	//   HRESULT
-	SbxPOINTER	  = 26,	//   generic pointer
-	SbxDIMARRAY	  = 27,	//   dimensioned array
-	SbxCARRAY	  = 28,	//   C style array
-	SbxUSERDEF	  = 29, //   user defined
-	SbxLPSTR	  = 30,	// * null terminated string
-	SbxLPWSTR	  = 31,	//   wide null terminated string
+	SbxCHAR       = 16,	// * signed char
+	SbxBYTE       = 17,	// * unsigned char
+	SbxUSHORT     = 18,	// * unsigned short (UINT16)
+	SbxULONG      = 19,	// * unsigned long (UINT32)
+	SbxLONG64     = 20,	//   signed 64-bit int
+	SbxULONG64    = 21,	//   unsigned 64-bit int
+	SbxINT        = 22,	// * NOTE: deprecated and aliased to SbxLONG
+	SbxUINT       = 23,	// * NOTE: deprecated and aliased to SbxULONG
+	SbxVOID       = 24,	// * no value (= SbxEMPTY)
+	SbxHRESULT    = 25,	//   HRESULT
+	SbxPOINTER    = 26,	//   generic pointer
+	SbxDIMARRAY   = 27,	//   dimensioned array
+	SbxCARRAY     = 28,	//   C style array
+	SbxUSERDEF    = 29, //   user defined
+	SbxLPSTR      = 30,	// * null terminated string
+	SbxLPWSTR     = 31,	//   wide null terminated string
 	SbxCoreSTRING = 32,	//   AB 10.4.97, fuer GetCoreString(), nur zum Konvertieren
-	SbxWSTRING	  = 33,	//   AB 4.10.2000 Reimplemented for backwards compatibility (#78919)
-	SbxWCHAR	  = 34,	//   AB 4.10.2000 Reimplemented for backwards compatibility (#78919)
-	SbxSALINT64	  = 35,	//   for UNO hyper
+	SbxWSTRING    = 33,	//   AB 4.10.2000 Reimplemented for backwards compatibility (#78919)
+	SbxWCHAR      = 34,	//   AB 4.10.2000 Reimplemented for backwards compatibility (#78919)
+	SbxSALINT64   = 35,	//   for UNO hyper
 	SbxSALUINT64  = 36,	//   for UNO unsigned hyper
 	SbxDECIMAL    = 37,	//   for UNO/automation Decimal
 
-	SbxVECTOR = 0x1000,	// simple counted array
-	SbxARRAY  = 0x2000,	// array
-	SbxBYREF  = 0x4000,	// access by reference
+	SbxVECTOR     = 0x1000,	// simple counted array
+	SbxARRAY      = 0x2000,	// array
+	SbxBYREF      = 0x4000,	// access by reference
 
-	SbxSV1 	  = 128,  	// first defined data type for StarView
-	SbxMEMORYSTREAM,	// SvMemoryStream
+	SbxSV1        = 128,  	// first defined data type for StarView
+	SbxMEMORYSTREAM,		// SvMemoryStream
 	SbxSTORAGE,			// SvStorage
 
-	SbxUSER1  = 256,  	// first user defined data type
-	SbxUSERn  = 2047  	// last user defined data type
+	SbxUSER1      = 256,  	// first user defined data type
+	SbxUSERn      = 2047  	// last user defined data type
 };
 
 #endif
Index: svtools/inc/sbxvar.hxx
===================================================================
RCS file: /cvs/util/svtools/inc/sbxvar.hxx,v
retrieving revision 1.7
retrieving revision 1.7.132.1
diff -u -p -r1.7 -r1.7.132.1
--- svtools/inc/sbxvar.hxx	17 Mar 2004 13:25:56 -0000	1.7
+++ svtools/inc/sbxvar.hxx	21 Jul 2004 17:34:08 -0000	1.7.132.1
@@ -81,19 +81,23 @@
 
 struct SbxINT64
 {
-	INT32 nHigh; UINT32 nLow;
+	sal_Int32 nHigh; sal_uInt32 nLow;
 
 #if _SOLAR__PRIVATE
 #if FALSE
-	SbxINT64()           : nHigh( 0 ), nLow( 0 ) {}
-	SbxINT64( UINT8  n ) : nHigh( 0 ), nLow( n ) {}
-	SbxINT64( UINT16 n ) : nHigh( 0 ), nLow( n ) {}
-	SbxINT64( UINT32 n ) : nHigh( 0 ), nLow( n ) {}
+	SbxINT64()               : nHigh( 0 ), nLow( 0 ) {}
+	SbxINT64( sal_uInt8  n ) : nHigh( 0 ), nLow( n ) {}
+	SbxINT64( sal_uInt16 n ) : nHigh( 0 ), nLow( n ) {}
+	SbxINT64( sal_uInt32 n ) : nHigh( 0 ), nLow( n ) {}
+#if 0
 	SbxINT64( unsigned int n ) : nHigh( 0 ), nLow( n ) {}
-	SbxINT64( INT8   n ) : nHigh( n < 0 ? -1 : 0 ), nLow( n ) {}
-	SbxINT64( INT16  n ) : nHigh( n < 0 ? -1 : 0 ), nLow( n ) {}
-	SbxINT64( INT32  n ) : nHigh( n < 0 ? -1 : 0 ), nLow( n ) {}
-	SbxINT64( int    n ) : nHigh( n < 0 ? -1 : 0 ), nLow( n ) {}
+#endif
+	SbxINT64( sal_Int8   n ) : nHigh( n < 0 ? -1 : 0 ), nLow( n ) {}
+	SbxINT64( sal_Int16  n ) : nHigh( n < 0 ? -1 : 0 ), nLow( n ) {}
+	SbxINT64( sal_Int32  n ) : nHigh( n < 0 ? -1 : 0 ), nLow( n ) {}
+#if 0
+	SbxINT64( int        n ) : nHigh( n < 0 ? -1 : 0 ), nLow( n ) {}
+#endif
 	SbxINT64( SbxINT64 &r ) : nHigh( r.nHigh ), nLow( r.nLow ) {}
 
 	SbxINT64( BigInt &r );
@@ -101,7 +105,7 @@ struct SbxINT64
 #endif
 	void CHS()
 	{
-		nLow  ^= (UINT32)-1;
+		nLow  ^= (sal_uInt32)-1;
 		nHigh ^= -1;
 		nLow++;
 		if( !nLow )
@@ -113,16 +117,16 @@ struct SbxINT64
 	{
 		if( n >= 0 )
 		{
-			nHigh = (INT32)(n / (double)4294967296.0);
-			nLow  = (UINT32)(n - ((double)nHigh * (double)4294967296.0));
+			nHigh = (sal_Int32)(n / (double)4294967296.0);
+			nLow  = (sal_uInt32)(n - ((double)nHigh * (double)4294967296.0));
 		}
 		else {
-			nHigh = (INT32)(-n / (double)4294967296.0);
-			nLow  = (UINT32)(-n - ((double)nHigh * (double)4294967296.0));
+			nHigh = (sal_Int32)(-n / (double)4294967296.0);
+			nLow  = (sal_uInt32)(-n - ((double)nHigh * (double)4294967296.0));
 			CHS();
 		}
 	}
-	void Set(INT32 n) { nHigh = n < 0 ? -1 : 0; nLow = n; }
+	void Set(sal_Int32 n) { nHigh = n < 0 ? -1 : 0; nLow = n; }
 
 	void SetMax()  { nHigh = 0x7FFFFFFF; nLow = 0xFFFFFFFF; }
 	void SetMin()  { nHigh = 0x80000000; nLow = 0x00000000; }
@@ -162,15 +166,15 @@ struct SbxINT64
 
 struct SbxUINT64
 {
-	UINT32 nHigh; UINT32 nLow;
+	sal_uInt32 nHigh; sal_uInt32 nLow;
 #if _SOLAR__PRIVATE
 	void Set(double n)
 	{
-		nHigh = (UINT32)(n / (double)4294967296.0);
-		nLow  = (UINT32)(n - ((double)nHigh * (double)4294967296.0));
+		nHigh = (sal_uInt32)(n / (double)4294967296.0);
+		nLow  = (sal_uInt32)(n - ((double)nHigh * (double)4294967296.0));
 	}
 
-	void Set(UINT32 n) { nHigh = 0; nLow = n; }
+	void Set(sal_uInt32 n) { nHigh = 0; nLow = n; }
 
 	void SetMax()  { nHigh = 0xFFFFFFFF; nLow = 0xFFFFFFFF; }
 	void SetMin()  { nHigh = 0x00000000; nLow = 0x00000000; }
@@ -212,54 +216,60 @@ class SbxDecimal;
 struct SbxValues
 {
 	union {
-		sal_Unicode		nChar;
-		BYTE			nByte;
-		INT16			nInteger;
-		INT32           nLong;
-		UINT16          nUShort;
-		UINT32          nULong;
+		sal_Unicode     nChar;
+		sal_uInt8       nByte;
+		sal_Int16       nInteger;
+		sal_Int32       nLong;
+		sal_uInt16      nUShort;
+		sal_uInt32      nULong;
 		float           nSingle;
 		double          nDouble;
 		SbxINT64        nLong64;
 		SbxUINT64       nULong64;
 		sal_Int64       nInt64;
 		sal_uInt64      uInt64;
+#if 0
 		int             nInt;
 		unsigned int    nUInt;
+#endif
 		String*         pString;
-		SbxDecimal*		pDecimal;
+		SbxDecimal*     pDecimal;
 
 		SbxBase*        pObj;
 		sal_Unicode*    pChar;
-		BYTE*	        pByte;
-		INT16*	        pInteger;
-		INT32*	        pLong;
-		UINT16*	        pUShort;
-		UINT32*	        pULong;
-		float*	        pSingle;
-		double*	        pDouble;
+		sal_uInt8*      pByte;
+		sal_Int16*      pInteger;
+		sal_Int32*      pLong;
+		sal_uInt16*     pUShort;
+		sal_uInt32*     pULong;
+		float*          pSingle;
+		double*         pDouble;
 		SbxINT64*       pLong64;
 		SbxUINT64*      pULong64;
 		sal_Int64*      pnInt64;
 		sal_uInt64*     puInt64;
-		int*	        pInt;
+#if 0
+		int*            pInt;
 		unsigned int*   pUInt;
-		void*	        pData;
+#endif
+		void*           pData;
 	};
 	SbxDataType	 eType;
 
 	SbxValues(): eType(SbxEMPTY), pData( NULL ) {}
 	SbxValues( SbxDataType e ): eType(e) {}
 	SbxValues( char _nChar ): nChar( _nChar ), eType(SbxCHAR) {}
-	SbxValues( BYTE _nByte ): nByte( _nByte ), eType(SbxBYTE) {}
-	SbxValues( short _nInteger ): nInteger( _nInteger ), eType(SbxINTEGER ) {}
-	SbxValues( long _nLong ): nLong( _nLong ), eType(SbxLONG) {}
-	SbxValues( USHORT _nUShort ): nUShort( _nUShort ), eType(SbxUSHORT) {}
-	SbxValues( ULONG _nULong ): nULong( _nULong ), eType(SbxULONG) {}
+	SbxValues( sal_uInt8 _nByte ): nByte( _nByte ), eType(SbxBYTE) {}
+	SbxValues( sal_Int16 _nInteger ): nInteger( _nInteger ), eType(SbxINTEGER ) {}
+	SbxValues( sal_Int32 _nLong ): nLong( _nLong ), eType(SbxLONG) {}
+	SbxValues( sal_uInt16 _nUShort ): nUShort( _nUShort ), eType(SbxUSHORT) {}
+	SbxValues( sal_uInt32 _nULong ): nULong( _nULong ), eType(SbxULONG) {}
 	SbxValues( float _nSingle ): nSingle( _nSingle ), eType(SbxSINGLE) {}
 	SbxValues( double _nDouble ): nDouble( _nDouble ), eType(SbxDOUBLE) {}
+#if 0
 	SbxValues( int _nInt ): nInt( _nInt ), eType(SbxINT) {}
 	SbxValues( unsigned int _nUInt ): nUInt( _nUInt ), eType(SbxUINT) {}
+#endif
 	SbxValues( const String* _pString ): pString( (String*) _pString ), eType(SbxSTRING) {}
 	SbxValues( SbxBase* _pObj ): pObj( _pObj ), eType(SbxOBJECT) {}
 	SbxValues( sal_Unicode* _pChar ): pChar( _pChar ), eType(SbxLPSTR) {}
@@ -316,8 +326,8 @@ public:
 	BOOL IsByte()    const { return BOOL( GetType() == SbxBYTE     ); }
 	BOOL IsUShort()  const { return BOOL( GetType() == SbxUSHORT   ); }
 	BOOL IsULong()   const { return BOOL( GetType() == SbxULONG    ); }
-	BOOL IsInt()     const { return BOOL( GetType() == SbxINT      ); }
-	BOOL IsUInt()    const { return BOOL( GetType() == SbxUINT     ); }
+	BOOL IsInt()     const { return BOOL( GetType() == SbxLONG     ); }
+	BOOL IsUInt()    const { return BOOL( GetType() == SbxULONG    ); }
 	BOOL IspChar()   const { return BOOL( GetType() == SbxLPSTR    ); }
 	BOOL IsNumeric() const;
 	BOOL IsNumericRTL() const;	// #41692 Schnittstelle fuer Basic
@@ -333,42 +343,42 @@ public:
 	const SbxValues& GetValues_Impl() const { return aData; }
 	virtual BOOL Put( const SbxValues& );
 
-	SbxINT64 GetCurrency() const;
-	SbxINT64 GetLong64() const;
-	SbxUINT64 GetULong64() const;
-	sal_Int64  GetInt64() const;
-	sal_uInt64 GetUInt64() const;
-	INT16  GetInteger() const;
-	INT32  GetLong() const;
-	float  GetSingle() const;
-	double GetDouble() const;
-	double GetDate() const;
-	BOOL   GetBool() const;
-	UINT16 GetErr() const;
-	const  String& GetString() const;
-	const  String& GetCoreString() const;
-	SbxDecimal* GetDecimal() const;
-	SbxBase* GetObject() const;
-	BOOL	 HasObject() const;
-	void*  GetData() const;
-	sal_Unicode GetChar() const;
-	BYTE   GetByte() const;
-	UINT16 GetUShort() const;
-	UINT32 GetULong() const;
-	int	   GetInt() const;
+	SbxINT64		GetCurrency() const;
+	SbxINT64		GetLong64() const;
+	SbxUINT64		GetULong64() const;
+	sal_Int64		GetInt64() const;
+	sal_uInt64	GetUInt64() const;
+	sal_Int16		GetInteger() const;
+	sal_Int32		GetLong() const;
+	float		GetSingle() const;
+	double		GetDouble() const;
+	double		GetDate() const;
+	BOOL			GetBool() const;
+	sal_uInt16	GetErr() const;
+	const String&	GetString() const;
+	const String&	GetCoreString() const;
+	SbxDecimal*	GetDecimal() const;
+	SbxBase*		GetObject() const;
+	BOOL			HasObject() const;
+	void*		GetData() const;
+	sal_Unicode	GetChar() const;
+	sal_uInt8		GetByte() const;
+	sal_uInt16	GetUShort() const;
+	sal_uInt32	GetULong() const;
+	sal_uInt32	GetInt() const;
 
 	BOOL PutCurrency( const SbxINT64& );
 	BOOL PutLong64( const SbxINT64& );
 	BOOL PutULong64( const SbxUINT64& );
 	BOOL PutInt64( sal_Int64 );
 	BOOL PutUInt64( sal_uInt64 );
-	BOOL PutInteger( INT16 );
-	BOOL PutLong( INT32 );
+	BOOL PutInteger( sal_Int16 );
+	BOOL PutLong( sal_Int32 );
 	BOOL PutSingle( float );
 	BOOL PutDouble( double );
 	BOOL PutDate( double );
 	BOOL PutBool( BOOL );
-	BOOL PutErr( USHORT );
+	BOOL PutErr( sal_uInt16 );
 	BOOL PutStringExt( const String& );	// mit erweiterter Auswertung (International, "TRUE"/"FALSE")
 	BOOL PutString( const String& );
 	BOOL PutString( const sal_Unicode* );	// Typ = SbxSTRING
@@ -377,10 +387,10 @@ public:
 	BOOL PutObject( SbxBase* );
 	BOOL PutData( void* );
 	BOOL PutChar( sal_Unicode );
-	BOOL PutByte( BYTE );
-	BOOL PutUShort( UINT16 );
-	BOOL PutULong( UINT32 );
-	BOOL PutInt( int );
+	BOOL PutByte( sal_uInt8 );
+	BOOL PutUShort( sal_uInt16 );
+	BOOL PutULong( sal_uInt32 );
+	BOOL PutInt( sal_uInt32 );
 	BOOL PutEmpty();
 	BOOL PutNull();
 
Index: svtools/inc/strmadpt.hxx
===================================================================
RCS file: /cvs/util/svtools/inc/strmadpt.hxx,v
retrieving revision 1.2
retrieving revision 1.2.628.1
diff -u -p -r1.2 -r1.2.628.1
--- svtools/inc/strmadpt.hxx	28 Sep 2001 13:02:30 -0000	1.2
+++ svtools/inc/strmadpt.hxx	21 Jul 2004 17:34:08 -0000	1.2.628.1
@@ -83,7 +83,7 @@ class SvOutputStreamOpenLockBytes: publi
 {
 	com::sun::star::uno::Reference< com::sun::star::io::XOutputStream >
 	    m_xOutputStream;
-	sal_uInt32 m_nPosition;
+	sal_Size m_nPosition;
 
 public:
 	TYPEINFO();
@@ -94,23 +94,23 @@ public:
 			    rTheOutputStream):
 		m_xOutputStream(rTheOutputStream), m_nPosition(0) {}
 
-	virtual ErrCode ReadAt(ULONG, void *, ULONG, ULONG *) const;
+	virtual ErrCode ReadAt(sal_Size, void *, sal_Size, sal_Size *) const;
 
-	virtual ErrCode WriteAt(ULONG nPos, const void * pBuffer, ULONG nCount,
-							ULONG * pWritten);
+	virtual ErrCode WriteAt(sal_Size nPos, const void * pBuffer, sal_Size nCount,
+							sal_Size * pWritten);
 
 	virtual ErrCode Flush() const;
 
-	virtual ErrCode SetSize(ULONG);
+	virtual ErrCode SetSize(sal_Size);
 
 	virtual ErrCode Stat(SvLockBytesStat * pStat, SvLockBytesStatFlag) const;
 
-	virtual ErrCode FillAppend(const void * pBuffer, ULONG nCount,
-							   ULONG * pWritten);
+	virtual ErrCode FillAppend(const void * pBuffer, sal_Size nCount,
+							   sal_Size * pWritten);
 
-	virtual ULONG Tell() const;
+	virtual sal_Size Tell() const;
 
-	virtual ULONG Seek(ULONG);
+	virtual sal_Size Seek(sal_Size);
 
 	virtual void Terminate();
 };
Index: svtools/source/config/cacheoptions.cxx
===================================================================
RCS file: /cvs/util/svtools/source/config/cacheoptions.cxx,v
retrieving revision 1.5
retrieving revision 1.5.16.1
diff -u -p -r1.5 -r1.5.16.1
--- svtools/source/config/cacheoptions.cxx	16 Jun 2004 10:06:14 -0000	1.5
+++ svtools/source/config/cacheoptions.cxx	9 Sep 2004 09:18:42 -0000	1.5.16.1
@@ -500,7 +500,7 @@ void SvtCacheOptions::SetDrawingEngineOL
 //*****************************************************************************************************************
 //	public method
 //*****************************************************************************************************************
-void SvtCacheOptions::SetGraphicManagerTotalCacheSize( sal_Int32 nGrfMgrTotalSize )
+void SvtCacheOptions::SetGraphicManagerTotalCacheSize( sal_Size nGrfMgrTotalSize )
 {
     MutexGuard aGuard( GetOwnStaticMutex() );
 	m_pDataContainer->SetGraphicManagerTotalCacheSize( nGrfMgrTotalSize );
@@ -509,7 +509,7 @@ void SvtCacheOptions::SetGraphicManagerT
 //*****************************************************************************************************************
 //	public method
 //*****************************************************************************************************************
-void SvtCacheOptions::SetGraphicManagerObjectCacheSize( sal_Int32 nGrfMgrObjectSize )
+void SvtCacheOptions::SetGraphicManagerObjectCacheSize( sal_Size nGrfMgrObjectSize )
 {
     MutexGuard aGuard( GetOwnStaticMutex() );
 	m_pDataContainer->SetGraphicManagerObjectCacheSize( nGrfMgrObjectSize );
Index: svtools/source/control/roadmap.cxx
===================================================================
RCS file: /cvs/util/svtools/source/control/roadmap.cxx,v
retrieving revision 1.3
retrieving revision 1.2.52.2
diff -u -p -r1.3 -r1.2.52.2
--- svtools/source/control/roadmap.cxx	20 Sep 2004 13:37:48 -0000	1.3
+++ svtools/source/control/roadmap.cxx	19 Oct 2004 16:51:59 -0000	1.2.52.2
@@ -683,7 +683,7 @@ namespace svt
     }
 
 	//---------------------------------------------------------------------
-    sal_Int32 ORoadmap::PreNotify( NotifyEvent& _rNEvt )
+    long ORoadmap::PreNotify( NotifyEvent& _rNEvt )
     {
         // capture KeyEvents for taskpane cycling
         if ( _rNEvt.GetType() == EVENT_KEYINPUT )
Index: svtools/source/control/taskmisc.cxx
===================================================================
RCS file: /cvs/util/svtools/source/control/taskmisc.cxx,v
retrieving revision 1.2
retrieving revision 1.2.16.1
diff -u -p -r1.2 -r1.2.16.1
--- svtools/source/control/taskmisc.cxx	16 Jun 2004 10:13:08 -0000	1.2
+++ svtools/source/control/taskmisc.cxx	21 Jul 2004 17:34:09 -0000	1.2.16.1
@@ -307,10 +307,10 @@ void WindowArrange::ImplCascade( const R
 	long		nRectHeight = nHeight;
 	long		nOff;
 	long		nCascadeWins;
-	long		nLeftBorder;
-	long		nTopBorder;
-	long		nRightBorder;
-	long		nBottomBorder;
+	sal_Int32	nLeftBorder;
+	sal_Int32	nTopBorder;
+	sal_Int32	nRightBorder;
+	sal_Int32	nBottomBorder;
 	long		nStartOverWidth;
 	long		nStartOverHeight;
 	long		nOverWidth = 0;
Index: svtools/source/dialogs/addresstemplate.cxx
===================================================================
RCS file: /cvs/util/svtools/source/dialogs/addresstemplate.cxx,v
retrieving revision 1.18
retrieving revision 1.18.62.1
diff -u -p -r1.18 -r1.18.62.1
--- svtools/source/dialogs/addresstemplate.cxx	8 Sep 2004 15:22:06 -0000	1.18
+++ svtools/source/dialogs/addresstemplate.cxx	29 Nov 2004 19:29:11 -0000	1.18.62.1
@@ -1047,7 +1047,7 @@ namespace svt
 	IMPL_LINK(AddressBookSourceDialog, OnFieldSelect, ListBox*, _pListbox)
 	{
 		// the index of the affected list box in our array
-		sal_Int32 nListBoxIndex = reinterpret_cast<sal_Int32>(_pListbox->GetEntryData(0));
+		sal_IntPtr nListBoxIndex = reinterpret_cast<sal_IntPtr>(_pListbox->GetEntryData(0));
 		DBG_ASSERT(nListBoxIndex >= 0 && nListBoxIndex < FIELD_CONTROLS_VISIBLE,
 			"AddressBookSourceDialog::OnFieldScroll: invalid list box entry!");
 
Index: svtools/source/edit/svmedit.cxx
===================================================================
RCS file: /cvs/util/svtools/source/edit/svmedit.cxx,v
retrieving revision 1.28
retrieving revision 1.26.64.2
diff -u -p -r1.28 -r1.26.64.2
--- svtools/source/edit/svmedit.cxx	20 Sep 2004 14:10:21 -0000	1.28
+++ svtools/source/edit/svmedit.cxx	19 Oct 2004 16:45:46 -0000	1.26.64.2
@@ -1238,7 +1238,7 @@ Size MultiLineEdit::CalcMinimumSize() co
 {
 	Size aSz = pImpSvMEdit->CalcMinimumSize();
 
-	long nLeft, nTop, nRight, nBottom;
+	sal_Int32 nLeft, nTop, nRight, nBottom;
 	((Window*)this)->GetBorder( nLeft, nTop, nRight, nBottom );
 	aSz.Width() += nLeft+nRight;
 	aSz.Height() += nTop+nBottom;
@@ -1249,14 +1249,14 @@ Size MultiLineEdit::CalcMinimumSize() co
 Size MultiLineEdit::CalcAdjustedSize( const Size& rPrefSize ) const
 {
 	Size aSz = rPrefSize;
-	long nLeft, nTop, nRight, nBottom;
+	sal_Int32 nLeft, nTop, nRight, nBottom;
 	((Window*)this)->GetBorder( nLeft, nTop, nRight, nBottom );
 
 	// In der Hoehe auf ganze Zeilen justieren
 
-	long nHeight = aSz.Height() - nTop - nBottom;
-	long nLineHeight = pImpSvMEdit->CalcSize( 1, 1 ).Height();
-	long nLines = nHeight / nLineHeight;
+	sal_Int32 nHeight = aSz.Height() - nTop - nBottom;
+	sal_Int32 nLineHeight = pImpSvMEdit->CalcSize( 1, 1 ).Height();
+	sal_Int32 nLines = nHeight / nLineHeight;
 	if ( nLines < 1 )
 		nLines = 1;
 
@@ -1270,7 +1270,7 @@ Size MultiLineEdit::CalcSize( USHORT nCo
 {
 	Size aSz = pImpSvMEdit->CalcSize( nColumns, nLines );
 
-	long nLeft, nTop, nRight, nBottom;
+	sal_Int32 nLeft, nTop, nRight, nBottom;
 	((Window*)this)->GetBorder( nLeft, nTop, nRight, nBottom );
 	aSz.Width() += nLeft+nRight;
 	aSz.Height() += nTop+nBottom;
@@ -1389,13 +1389,13 @@ void MultiLineEdit::Draw( OutputDevice* 
 
 	XubString aText = GetText();
 	Size aTextSz( pDev->GetTextWidth( aText ), pDev->GetTextHeight() );
-	ULONG nLines = (ULONG) (aSize.Height() / aTextSz.Height());
+	sal_uInt32 nLines = (sal_uInt32) (aSize.Height() / aTextSz.Height());
 	if ( !nLines )
 		nLines = 1;
 	aTextSz.Height() = nLines*aTextSz.Height();
-	long nOnePixel = GetDrawPixel( pDev, 1 );
-	long nOffX = 3*nOnePixel;
-	long nOffY = 2*nOnePixel;
+	sal_Int32 nOnePixel = GetDrawPixel( pDev, 1 );
+	sal_Int32 nOffX = 3*nOnePixel;
+	sal_Int32 nOffY = 2*nOnePixel;
 
 	// Clipping?
 	if ( ( nOffY < 0  ) || ( (nOffY+aTextSz.Height()) > aSize.Height() ) || ( (nOffX+aTextSz.Width()) > aSize.Width() ) )
Index: svtools/source/filepicker/iodlg.cxx
===================================================================
RCS file: /cvs/util/svtools/source/filepicker/iodlg.cxx,v
retrieving revision 1.81
retrieving revision 1.79.44.2
diff -u -p -r1.81 -r1.79.44.2
--- svtools/source/filepicker/iodlg.cxx	2 Aug 2004 14:37:46 -0000	1.81
+++ svtools/source/filepicker/iodlg.cxx	19 Oct 2004 17:08:36 -0000	1.79.44.2
@@ -2917,7 +2917,7 @@ void SvtFileDialog::Resize()
 	Size aDlgSize = GetResizeOutputSizePixel();
 	Size aOldSize = _pImp->_aDlgSize;
 	_pImp->_aDlgSize = aDlgSize;
-	long nWinDeltaW = 0;
+	sal_Int32 nWinDeltaW = 0;
 
 	if ( _pPrevWin &&
          _pPrevWin->GetPosPixel().X() > _pFileView->GetPosPixel().X() )
@@ -2927,8 +2927,8 @@ void SvtFileDialog::Resize()
 
 	Size aNewSize = _pFileView->GetSizePixel();
 	Point aBoxPos( _pFileView->GetPosPixel() );
-	long nDeltaY = aNewSize.Height();
-	long nDeltaX = aNewSize.Width();
+	sal_Int32 nDeltaY = aNewSize.Height();
+	sal_Int32 nDeltaX = aNewSize.Width();
 	aNewSize.Height() = aDlgSize.Height() - _pImp->_nFixDeltaHeight;
 	aNewSize.Width() = aDlgSize.Width() - aBoxPos.X() - _pImp->_a6Size.Width() - nWinDeltaW;
 	if ( aOldSize.Height() )
@@ -2948,7 +2948,7 @@ void SvtFileDialog::Resize()
 		// Dieses Resize wurde nur zum Ein - oder Ausblenden des Indicators aufgerufen
 		return;
 
-	long nMaxYPos = 0;
+	sal_Int32 nMaxYPos = 0;
 
 	// -------------
 	// move controls
Index: svtools/source/filerec/filerec.cxx
===================================================================
RCS file: /cvs/util/svtools/source/filerec/filerec.cxx,v
retrieving revision 1.4
retrieving revision 1.4.8.1
diff -u -p -r1.4 -r1.4.8.1
--- svtools/source/filerec/filerec.cxx	17 Jun 2004 13:18:52 -0000	1.4
+++ svtools/source/filerec/filerec.cxx	21 Jul 2004 17:34:10 -0000	1.4.8.1
@@ -68,7 +68,7 @@
 
 //========================================================================
 
-SV_IMPL_VARARR( SfxUINT32s, UINT32 );
+SV_IMPL_VARARR( SfxUINT32s, sal_uInt32 );
 
 //========================================================================
 
@@ -94,21 +94,21 @@ SV_IMPL_VARARR( SfxUINT32s, UINT32 );
 */
 
 #define SFX_REC_MINI_HEADER(nPreTag,nStartPos,nEndPos) \
-					( UINT32(nPreTag) | \
-					  UINT32(nEndPos-nStartPos-SFX_REC_HEADERSIZE_MINI) << 8 )
+					( sal_uInt32(nPreTag) | \
+					  sal_uInt32(nEndPos-nStartPos-SFX_REC_HEADERSIZE_MINI) << 8 )
 
 #define SFX_REC_HEADER(nRecType,nContentTag,nContentVer) \
-					( UINT32(nRecType) | \
-					  ( UINT32(nContentVer) << 8 ) | \
-					  ( UINT32(nContentTag) << 16 ) )
+					( sal_uInt32(nRecType) | \
+					  ( sal_uInt32(nContentVer) << 8 ) | \
+					  ( sal_uInt32(nContentTag) << 16 ) )
 
 #define SFX_REC_CONTENT_HEADER(nContentVer,n1StStartPos,nCurStartPos) \
-					( UINT32(nContentVer) | \
-					  UINT32( nCurStartPos - n1StStartPos ) << 8 )
+					( sal_uInt32(nContentVer) | \
+					  sal_uInt32( nCurStartPos - n1StStartPos ) << 8 )
 
 //=========================================================================
 
-UINT32 SfxMiniRecordWriter::Close
+sal_uInt32 SfxMiniRecordWriter::Close
 (
 	FASTBOOL	bSeekToEndOfRec 	/*	TRUE (default)
 										Der Stream wird an das Ende des Records
@@ -131,7 +131,7 @@ UINT32 SfxMiniRecordWriter::Close
 
 	[R"uckgabewert]
 
-	UINT32		!= 0
+	sal_uInt32	!= 0
 				Position im Stream, die direkt hinter dem Record liegt.
 				'bSeekToEndOfRecord==TRUE'
 				=> R"uckgabewert == aktuelle Stream-Position nach Aufruf
@@ -145,13 +145,13 @@ UINT32 SfxMiniRecordWriter::Close
 	if ( !_bHeaderOk )
 	{
 		// Header an den Anfang des Records schreiben
-		UINT32 nEndPos = _pStream->Tell();
-		_pStream->Seek( _nStartPos );
+		sal_uInt32 nEndPos = svstream_Size_to_u32( _pStream->Tell() );
+		_pStream->Seek( svstream_u32_to_Size(_nStartPos) );
 		*_pStream << SFX_REC_MINI_HEADER( _nPreTag, _nStartPos, nEndPos );
 
 		// je nachdem ans Ende des Records seeken oder hinter Header bleiben
 		if ( bSeekToEndOfRec )
-			_pStream->Seek( nEndPos );
+			_pStream->Seek( svstream_u32_to_Size(nEndPos) );
 
 		// Header wurde JETZT geschrieben
 		_bHeaderOk = TRUE;
@@ -162,14 +162,14 @@ UINT32 SfxMiniRecordWriter::Close
 	else if ( SFX_BOOL_DONTCARE == _bHeaderOk )
 	{
 		// Header auslesen, um Soll-Gr"o\se zu bestimmen
-		UINT32 nEndPos = _pStream->Tell();
-		_pStream->Seek( _nStartPos );
-		ULONG nHeader;
+		sal_uInt32 nEndPos = svstream_Size_to_u32( _pStream->Tell() );
+		_pStream->Seek( svstream_u32_to_Size(_nStartPos) );
+		sal_uInt32 nHeader;
 		*_pStream >> nHeader;
-		_pStream->Seek( nEndPos );
+		_pStream->Seek( svstream_u32_to_Size(nEndPos) );
 
 		// Soll-Gr"o\se mit Ist-Gr"o\se vergleichen
-		DBG_ASSERT( nEndPos - SFX_REC_OFS(nHeader) == _nStartPos + sizeof(UINT32),
+		DBG_ASSERT( nEndPos - SFX_REC_OFS(nHeader) == _nStartPos + sizeof(sal_uInt32),
 					"fixed record size incorrect" );
 		DbgOutf( "SfxFileRec: written record until %ul", nEndPos );
 	}
@@ -211,7 +211,7 @@ USHORT SfxMiniRecordReader::ScanRecordTy
 
 	[R"uckgabewert]
 
-	USHORT							SFX_REC_TYPE_EOR
+	sal_uInt16						SFX_REC_TYPE_EOR
 									An der aktuellen Position des Streams
 									steht eine End-Of-Records-Kennung.
 
@@ -256,11 +256,11 @@ USHORT SfxMiniRecordReader::ScanRecordTy
 
 {
 	// die ersten 4 Bytes als Mini-Header lesen
-	ULONG nHeader;
+	sal_uInt32 nHeader;
 	*pStream >> nHeader;
 
 	// k"onnte es sich um einen extended-Record handeln?
-	USHORT nPreTag = SFX_REC_PRE(nHeader);
+	sal_uInt16 nPreTag = SFX_REC_PRE(nHeader);
 	if ( SFX_REC_PRETAG_EXT == nPreTag )
 	{
 		// die n"achsten 4 Bytes als extended-Header lesen
@@ -270,7 +270,7 @@ USHORT SfxMiniRecordReader::ScanRecordTy
 		pStream->SeekRel(-8);
 
 		// liegt eine g"ultige Record-Kennung vor?
-		USHORT nType = SFX_REC_TYP(nHeader);
+		sal_uInt16 nType = SFX_REC_TYP(nHeader);
 		if ( nType >= SFX_REC_TYPE_FIRST && nType <= SFX_REC_TYPE_LAST )
 			// entsprechenden extended-Record-Typ zur"uckliefern
 			return nType;
@@ -287,7 +287,7 @@ USHORT SfxMiniRecordReader::ScanRecordTy
 		return nPreTag;
 
 	// liegt ein Drawin-Engine-Record vor?
-	if ( nHeader == UINT32(*"DRMD") || nHeader == UINT32(*"DRVW") )
+	if ( nHeader == sal_uInt32(*"DRMD") || nHeader == sal_uInt32(*"DRVW") )
 		return SFX_REC_TYPE_DRAWENG;
 
 	// alle anderen sind grunds"atzlich g"ultige Mini-Records
@@ -296,7 +296,7 @@ USHORT SfxMiniRecordReader::ScanRecordTy
 
 //-------------------------------------------------------------------------
 
-FASTBOOL SfxMiniRecordReader::SetHeader_Impl( UINT32 nHeader )
+FASTBOOL SfxMiniRecordReader::SetHeader_Impl( sal_uInt32 nHeader )
 
 /*	[Beschreibung]
 
@@ -311,7 +311,7 @@ FASTBOOL SfxMiniRecordReader::SetHeader_
 	FASTBOOL bRet = TRUE;
 
 	// Record-Ende und Pre-Tag aus dem Header ermitteln
-	_nEofRec = _pStream->Tell() + SFX_REC_OFS(nHeader);
+	_nEofRec = svstream_Size_to_u32(_pStream->Tell()) + SFX_REC_OFS(nHeader);
 	_nPreTag = SFX_REC_PRE(nHeader);
 
 	// wenn End-Of-Record-Kennung, dann Fehler
@@ -348,9 +348,9 @@ SfxMiniRecordReader::SfxMiniRecordReader
 	_bSkipped( FALSE )
 {
 	// Header einlesen
-	UINT32 nStartPos = pStream->Tell(); // um im Fehlerfall zur"uck zu-seeken
+	sal_uInt32 nStartPos = svstream_Size_to_u32( pStream->Tell() ); // um im Fehlerfall zur"uck zu-seeken
 	DBG( DbgOutf( "SfxFileRec: reading record at %ul", nStartPos ) );
-	UINT32 nHeader;
+	sal_uInt32 nHeader;
 	*pStream >> nHeader;
 
 	// Headerdaten extrahieren
@@ -362,7 +362,7 @@ SfxMiniRecordReader::SfxMiniRecordReader
 	else if ( _nPreTag == SFX_REC_PRETAG_EOR )
 		pStream->SetError( ERRCODE_IO_WRONGFORMAT );
 	if ( !IsValid() )
-		pStream->Seek( nStartPos );
+		pStream->Seek( svstream_u32_to_Size(nStartPos) );
 }
 
 //-------------------------------------------------------------------------
@@ -373,7 +373,7 @@ SfxMiniRecordReader::SfxMiniRecordReader
 										Position sich ein <SfxMiniRecord>
 										befindet.
 									*/
-	BYTE			nTag			//	Pre-Tag des gew"unschten Records
+	sal_uInt8		nTag			//	Pre-Tag des gew"unschten Records
 )
 
 /*	[Beschreibung]
@@ -420,14 +420,14 @@ SfxMiniRecordReader::SfxMiniRecordReader
 	}
 
 	// StartPos merken, um im Fehlerfall zur"uck-seeken zu k"onnen
-	UINT32 nStartPos = pStream->Tell();
+	sal_uInt32 nStartPos = svstream_Size_to_u32( pStream->Tell() );
 
 	// passenden Record suchen
 	while(TRUE)
 	{
 		// Header lesen
 		DBG( DbgOutf( "SfxFileRec: searching record at %ul", pStream->Tell() ) );
-		UINT32 nHeader;
+		sal_uInt32 nHeader;
 		*pStream >> nHeader;
 
 		// Headerdaten von Basisklasse extrahieren lassen
@@ -445,12 +445,12 @@ SfxMiniRecordReader::SfxMiniRecordReader
 				break;
 
 			// sonst skippen und weitersuchen
-			pStream->Seek( _nEofRec );
+			pStream->Seek( svstream_u32_to_Size(_nEofRec) );
 			continue;
 		}
 
 		// Fehler => zur"uck-seeken
-		pStream->Seek( nStartPos );
+		pStream->Seek( svstream_u32_to_Size(nStartPos) );
 		break;
 	}
 }
@@ -459,10 +459,10 @@ SfxMiniRecordReader::SfxMiniRecordReader
 
 SfxSingleRecordWriter::SfxSingleRecordWriter
 (
-	BYTE			nRecordType,	// f"ur Subklassen
+	sal_uInt8		nRecordType,	// f"ur Subklassen
 	SvStream*		pStream,		// Stream, in dem der Record angelegt wird
-	UINT16			nContentTag,	// Inhalts-Art-Kennung
-	BYTE			nContentVer 	// Inhalts-Versions-Kennung
+	sal_uInt16	nContentTag,	// Inhalts-Art-Kennung
+	sal_uInt8		nContentVer 	// Inhalts-Versions-Kennung
 )
 
 /*	[Beschreibung]
@@ -481,8 +481,8 @@ SfxSingleRecordWriter::SfxSingleRecordWr
 SfxSingleRecordWriter::SfxSingleRecordWriter
 (
 	SvStream*		pStream,		// Stream, in dem der Record angelegt wird
-	UINT16			nContentTag,	// Inhalts-Art-Kennung
-	BYTE			nContentVer 	// Inhalts-Versions-Kennung
+	sal_uInt16	nContentTag,	// Inhalts-Art-Kennung
+	sal_uInt8		nContentVer 	// Inhalts-Versions-Kennung
 )
 
 /*	[Beschreibung]
@@ -503,9 +503,9 @@ SfxSingleRecordWriter::SfxSingleRecordWr
 SfxSingleRecordWriter::SfxSingleRecordWriter
 (
 	SvStream*		pStream,		// Stream, in dem der Record angelegt wird
-	UINT16			nContentTag,	// Inhalts-Art-Kennung
-	BYTE			nContentVer,	// Inhalts-Versions-Kennung
-	UINT32			nContentSize	// Gr"o\se des Inhalts in Bytes
+	sal_uInt16	nContentTag,	// Inhalts-Art-Kennung
+	sal_uInt8		nContentVer,	// Inhalts-Versions-Kennung
+	sal_uInt32	nContentSize	// Gr"o\se des Inhalts in Bytes
 )
 
 /*  [Beschreibung]
@@ -523,7 +523,7 @@ SfxSingleRecordWriter::SfxSingleRecordWr
 
 //=========================================================================
 
-inline FASTBOOL SfxSingleRecordReader::ReadHeader_Impl( USHORT nTypes )
+inline FASTBOOL SfxSingleRecordReader::ReadHeader_Impl( sal_uInt16 nTypes )
 
 /*  [Beschreibung]
 
@@ -537,7 +537,7 @@ inline FASTBOOL SfxSingleRecordReader::R
 	FASTBOOL bRet;
 
 	// Basisklassen-Header einlesen
-	UINT32 nHeader;
+	sal_uInt32 nHeader;
 	*_pStream >> nHeader;
 	if ( !SetHeader_Impl( nHeader ) )
 		bRet = FALSE;
@@ -561,7 +561,7 @@ SfxSingleRecordReader::SfxSingleRecordRe
 :	SfxMiniRecordReader()
 {
 	// Startposition merken, um im Fehlerfall zur"uck-seeken zu k"onnen
-	UINT32 nStartPos = pStream->Tell();
+	sal_uInt32 nStartPos = svstream_Size_to_u32( pStream->Tell() );
 	DBG( DbgOutf( "SfxFileRec: reading record at %ul", nStartPos ) );
 
 	// Basisklasse initialisieren (nicht via Ctor, da der nur MiniRecs akzept.)
@@ -578,17 +578,17 @@ SfxSingleRecordReader::SfxSingleRecordRe
 
 //-------------------------------------------------------------------------
 
-SfxSingleRecordReader::SfxSingleRecordReader( SvStream *pStream, USHORT nTag )
+SfxSingleRecordReader::SfxSingleRecordReader( SvStream *pStream, sal_uInt16 nTag )
 {
 	// StartPos merken, um im Fehlerfall zur"uck-seeken zu k"onnen
-	UINT32 nStartPos = pStream->Tell();
+	sal_uInt32 nStartPos = svstream_Size_to_u32( pStream->Tell() );
 
 	// richtigen Record suchen, ggf. Error-Code setzen und zur"uck-seeken
 	Construct_Impl( pStream );
 	if ( !FindHeader_Impl( SFX_REC_TYPE_SINGLE, nTag ) )
 	{
 		// Error-Code setzen und zur"uck-seeken
-		pStream->Seek( nStartPos );
+		pStream->Seek( svstream_u32_to_Size(nStartPos) );
 		pStream->SetError( ERRCODE_IO_WRONGFORMAT );
 	}
 }
@@ -597,8 +597,8 @@ SfxSingleRecordReader::SfxSingleRecordRe
 
 FASTBOOL SfxSingleRecordReader::FindHeader_Impl
 (
-	UINT16		nTypes, 	// arithm. Veroderung erlaubter Record-Typen
-	UINT16		nTag		// zu findende Record-Art-Kennung
+	sal_uInt16		nTypes, 	// arithm. Veroderung erlaubter Record-Typen
+	sal_uInt16		nTag		// zu findende Record-Art-Kennung
 )
 
 /*	[Beschreibung]
@@ -613,13 +613,13 @@ FASTBOOL SfxSingleRecordReader::FindHead
 
 {
 	// StartPos merken, um im Fehlerfall zur"uck-seeken zu k"onnen
-	UINT32 nStartPos = _pStream->Tell();
+	sal_uInt32 nStartPos = svstream_Size_to_u32( _pStream->Tell() );
 
 	// richtigen Record suchen
 	while ( !_pStream->IsEof() )
 	{
 		// Header lesen
-		UINT32 nHeader;
+		sal_uInt32 nHeader;
 		DBG( DbgOutf( "SfxFileRec: searching record at %ul", _pStream->Tell() ) );
 		*_pStream >> nHeader;
 		if ( !SetHeader_Impl( nHeader ) )
@@ -649,12 +649,12 @@ FASTBOOL SfxSingleRecordReader::FindHead
 
 		// sonst skippen
 		if ( !_pStream->IsEof() )
-			_pStream->Seek( _nEofRec );
+			_pStream->Seek( svstream_u32_to_Size(_nEofRec) );
 	}
 
 	// Fehler setzen und zur"uck-seeken
 	_pStream->SetError( ERRCODE_IO_WRONGFORMAT );
-	_pStream->Seek( nStartPos );
+	_pStream->Seek( svstream_u32_to_Size(nStartPos) );
 	return FALSE;
 }
 
@@ -662,11 +662,11 @@ FASTBOOL SfxSingleRecordReader::FindHead
 
 SfxMultiFixRecordWriter::SfxMultiFixRecordWriter
 (
-	BYTE			nRecordType,	// Subklassen Record-Kennung
+	sal_uInt8		nRecordType,	// Subklassen Record-Kennung
 	SvStream*		pStream,		// Stream, in dem der Record angelegt wird
-	UINT16			nContentTag,	// Content-Art-Kennung
-	BYTE			nContentVer,	// Content-Versions-Kennung
-	UINT32			nContentSize	// Gr"o\se jedes einzelnen Contents in Bytes
+	sal_uInt16	nContentTag,	// Content-Art-Kennung
+	sal_uInt8		nContentVer,	// Content-Versions-Kennung
+	sal_uInt32	nContentSize	// Gr"o\se jedes einzelnen Contents in Bytes
 )
 
 /*  [Beschreibung]
@@ -686,9 +686,9 @@ SfxMultiFixRecordWriter::SfxMultiFixReco
 SfxMultiFixRecordWriter::SfxMultiFixRecordWriter
 (
 	SvStream*		pStream,		// Stream, in dem der Record angelegt wird
-	UINT16			nContentTag,	// Content-Art-Kennung
-	BYTE			nContentVer,	// Content-Versions-Kennung
-	UINT32			nContentSize	// Gr"o\se jedes einzelnen Contents in Bytes
+	sal_uInt16	nContentTag,	// Content-Art-Kennung
+	sal_uInt8		nContentVer,	// Content-Versions-Kennung
+	sal_uInt32	nContentSize	// Gr"o\se jedes einzelnen Contents in Bytes
 )
 
 /*  [Beschreibung]
@@ -707,7 +707,7 @@ SfxMultiFixRecordWriter::SfxMultiFixReco
 
 //------------------------------------------------------------------------
 
-UINT32 SfxMultiFixRecordWriter::Close( FASTBOOL bSeekToEndOfRec )
+sal_uInt32 SfxMultiFixRecordWriter::Close( FASTBOOL bSeekToEndOfRec )
 
 //	siehe <SfxMiniRecordWriter>
 
@@ -716,7 +716,7 @@ UINT32 SfxMultiFixRecordWriter::Close( F
 	if ( !_bHeaderOk )
 	{
 		// Position hinter Record merken, um sie restaurieren zu k"onnen
-		UINT32 nEndPos = SfxSingleRecordWriter::Close( FALSE );
+		sal_uInt32 nEndPos = SfxSingleRecordWriter::Close( FALSE );
 
 		// gegen"uber SfxSingleRecord erweiterten Header schreiben
 		*_pStream << _nContentCount;
@@ -724,7 +724,7 @@ UINT32 SfxMultiFixRecordWriter::Close( F
 
 		// je nachdem ans Ende des Records seeken oder hinter Header bleiben
 		if ( bSeekToEndOfRec )
-			_pStream->Seek(nEndPos);
+			_pStream->Seek( svstream_u32_to_Size(nEndPos) );
 		return nEndPos;
 	}
 
@@ -736,10 +736,10 @@ UINT32 SfxMultiFixRecordWriter::Close( F
 
 SfxMultiVarRecordWriter::SfxMultiVarRecordWriter
 (
-	BYTE			nRecordType,	// Record-Kennung der Subklasse
-	SvStream*       pStream,        // Stream, in dem der Record angelegt wird
-	UINT16			nRecordTag, 	// Gesamt-Art-Kennung
-	BYTE			nRecordVer		// Gesamt-Versions-Kennung
+	sal_uInt8		nRecordType,	// Record-Kennung der Subklasse
+	SvStream*		pStream,        // Stream, in dem der Record angelegt wird
+	sal_uInt16	nRecordTag, 	// Gesamt-Art-Kennung
+	sal_uInt8		nRecordVer		// Gesamt-Versions-Kennung
 )
 
 /*  [Beschreibung]
@@ -757,8 +757,8 @@ SfxMultiVarRecordWriter::SfxMultiVarReco
 SfxMultiVarRecordWriter::SfxMultiVarRecordWriter
 (
 	SvStream*       pStream,        // Stream, in dem der Record angelegt wird
-	UINT16			nRecordTag, 	// Gesamt-Art-Kennung
-	BYTE			nRecordVer		// Gesamt-Versions-Kennung
+	sal_uInt16	nRecordTag, 	// Gesamt-Art-Kennung
+	sal_uInt8		nRecordVer		// Gesamt-Versions-Kennung
 )
 
 /*  [Beschreibung]
@@ -826,13 +826,13 @@ void SfxMultiVarRecordWriter::NewContent
 		FlushContent_Impl();
 
 	// neuen Content beginnen
-	_nContentStartPos = _pStream->Tell();
+	_nContentStartPos = svstream_Size_to_u32( _pStream->Tell() );
 	++_nContentCount;
 }
 
 //-------------------------------------------------------------------------
 
-UINT32 SfxMultiVarRecordWriter::Close( FASTBOOL bSeekToEndOfRec )
+sal_uInt32 SfxMultiVarRecordWriter::Close( FASTBOOL bSeekToEndOfRec )
 
 // siehe <SfxMiniRecordWriter>
 
@@ -845,30 +845,30 @@ UINT32 SfxMultiVarRecordWriter::Close( F
 			FlushContent_Impl();
 
 		// Content-Offset-Tabelle schreiben
-		UINT32 nContentOfsPos = _pStream->Tell();
+		sal_uInt32 nContentOfsPos = svstream_Size_to_u32( _pStream->Tell() );
 		//! darf man das so einr"ucken?
 		#if defined(OSL_LITENDIAN)
 			_pStream->Write( _aContentOfs.GetData(),
-							 sizeof(UINT32)*_nContentCount );
+							 svstream_u32_to_Size(sizeof(sal_uInt32)*_nContentCount) );
 		#else
-			for ( USHORT n = 0; n < _nContentCount; ++n )
-				*_pStream << UINT32(_aContentOfs[n]);
+			for ( sal_uInt16 n = 0; n < _nContentCount; ++n )
+				*_pStream << sal_uInt32(_aContentOfs[n]);
 		#endif
 
 		// SfxMultiFixRecordWriter::Close() "uberspringen!
-		UINT32 nEndPos = SfxSingleRecordWriter::Close( FALSE );
+		sal_uInt32 nEndPos = SfxSingleRecordWriter::Close( FALSE );
 
 		// eigenen Header schreiben
 		*_pStream << _nContentCount;
 		if ( SFX_REC_TYPE_VARSIZE_RELOC == _nPreTag ||
 			 SFX_REC_TYPE_MIXTAGS_RELOC == _nPreTag )
-			*_pStream << nContentOfsPos - ( _pStream->Tell() + sizeof(UINT32) );
+			*_pStream << nContentOfsPos - (sal_uInt32)( svstream_Size_to_u32(_pStream->Tell()) + sizeof(sal_uInt32) );
 		else
 			*_pStream << nContentOfsPos;
 
 		// ans Ende des Records seeken bzw. am Ende des Headers bleiben
 		if ( bSeekToEndOfRec )
-			 _pStream->Seek(nEndPos);
+			 _pStream->Seek(svstream_u32_to_Size(nEndPos));
 		return nEndPos;
 	}
 
@@ -880,8 +880,8 @@ UINT32 SfxMultiVarRecordWriter::Close( F
 
 void SfxMultiMixRecordWriter::NewContent
 (
-	UINT16		nContentTag,	// Kennung f"ur die Art des Contents
-	BYTE		nContentVer 	// Kennung f"ur die Version des Contents
+	sal_uInt16	nContentTag,	// Kennung f"ur die Art des Contents
+	sal_uInt8		nContentVer 	// Kennung f"ur die Version des Contents
 )
 
 /*	[Beschreibung]
@@ -897,7 +897,7 @@ void SfxMultiMixRecordWriter::NewContent
 		FlushContent_Impl();
 
 	// Tag vor den Content schreiben, Version und Startposition merken
-	_nContentStartPos = _pStream->Tell();
+	_nContentStartPos = svstream_Size_to_u32( _pStream->Tell() );
 	++_nContentCount;
 	*_pStream << nContentTag;
 	_nContentVer = nContentVer;
@@ -924,21 +924,21 @@ FASTBOOL SfxMultiRecordReader::ReadHeade
 	if ( _nRecordType != SFX_REC_TYPE_FIXSIZE )
 	{
 		// Tabelle aus dem Stream einlesen
-		UINT32 nContentPos = _pStream->Tell();
+		sal_uInt32 nContentPos = svstream_Size_to_u32( _pStream->Tell() );
 		if ( _nRecordType == SFX_REC_TYPE_VARSIZE_RELOC ||
 			 _nRecordType == SFX_REC_TYPE_MIXTAGS_RELOC )
-			_pStream->SeekRel( + _nContentSize );
+			_pStream->SeekRel( + svstream_u32_to_Size(_nContentSize) );
 		else
-			_pStream->Seek( _nContentSize );
-		_pContentOfs = new UINT32[_nContentCount];
+			_pStream->Seek( svstream_u32_to_Size(_nContentSize) );
+		_pContentOfs = new sal_uInt32[_nContentCount];
 		//! darf man jetzt so einr"ucken
 		#if defined(OSL_LITENDIAN)
-			_pStream->Read( _pContentOfs, sizeof(UINT32)*_nContentCount );
+			_pStream->Read( _pContentOfs, svstream_u32_to_Size(sizeof(sal_uInt32)*_nContentCount) );
 		#else
-			for ( USHORT n = 0; n < _nContentCount; ++n )
+			for ( sal_uInt16 n = 0; n < _nContentCount; ++n )
 				*_pStream >> _pContentOfs[n];
 		#endif
-		_pStream->Seek( nContentPos );
+		_pStream->Seek( svstream_u32_to_Size(nContentPos) );
 	}
 
 	// Header konnte gelesen werden, wenn am Stream kein Error gesetzt ist
@@ -951,7 +951,7 @@ SfxMultiRecordReader::SfxMultiRecordRead
 :	_nContentNo(0), _pContentOfs( NULL )
 {
 	// Position im Stream merken, um im Fehlerfall zur"uck-seeken zu k"onnen
-	_nStartPos = pStream->Tell();
+	_nStartPos = svstream_Size_to_u32( pStream->Tell() );
 
 	// Basisklasse konstruieren (normaler Ctor w"urde nur SingleRecs lesen)
 	SfxSingleRecordReader::Construct_Impl( pStream );
@@ -971,7 +971,7 @@ SfxMultiRecordReader::SfxMultiRecordRead
 :	_nContentNo(0)
 {
 	// Position im Stream merken, um im Fehlerfall zur"uck-seeken zu k"onnen
-	_nStartPos = pStream->Tell();
+	_nStartPos = svstream_Size_to_u32( pStream->Tell() );
 
 	// passenden Record suchen und Basisklasse initialisieren
 	SfxSingleRecordReader::Construct_Impl( pStream );
@@ -1015,10 +1015,10 @@ FASTBOOL SfxMultiRecordReader::GetConten
 	if ( _nContentNo < _nContentCount )
 	{
 		// den Stream an den Anfang des Contents positionieren
-		UINT32 nOffset = _nRecordType == SFX_REC_TYPE_FIXSIZE
+		sal_uInt32 nOffset = _nRecordType == SFX_REC_TYPE_FIXSIZE
 					? _nContentNo * _nContentSize
 					: SFX_REC_CONTENT_OFS(_pContentOfs[_nContentNo]);
-		UINT32 nNewPos = _nStartPos + nOffset;
+		sal_uInt32 nNewPos = _nStartPos + nOffset;
 		DBG_ASSERT( nNewPos >= _pStream->Tell(), "SfxMultiRecordReader::GetContent() - New position before current, to much data red!" );
 
 		// #99366#: correct stream pos in every case;
@@ -1027,7 +1027,7 @@ FASTBOOL SfxMultiRecordReader::GetConten
         // gives errors when writing with 5.1 and reading with current
         // versions, so we decided to remove the if clause (KA-05/17/2002)
         // if ( nNewPos > _pStream->Tell() )
-		_pStream->Seek( nNewPos );
+		_pStream->Seek( svstream_u32_to_Size(nNewPos) );
 
 		// ggf. Content-Header lesen
 		if ( _nRecordType == SFX_REC_TYPE_MIXTAGS ||
Index: svtools/source/filter.vcl/filter/dlgexpor.cxx
===================================================================
RCS file: /cvs/util/svtools/source/filter.vcl/filter/dlgexpor.cxx,v
retrieving revision 1.4
retrieving revision 1.4.16.1
diff -u -p -r1.4 -r1.4.16.1
--- svtools/source/filter.vcl/filter/dlgexpor.cxx	16 Jun 2004 10:16:20 -0000	1.4
+++ svtools/source/filter.vcl/filter/dlgexpor.cxx	21 Jul 2004 17:34:11 -0000	1.4.16.1
@@ -208,7 +208,7 @@ IMPL_LINK( DlgExportPix, OK, void *, EMP
 {
 	// Config-Parameter schreiben
 
-	sal_Int32	nRes = Max( Min( aCbbRes.GetText().ToInt32(), 600L), 75L );
+	sal_Int32	nRes = Max( Min( aCbbRes.GetText().ToInt32(), (sal_Int32)600), (sal_Int32)75 );
 	::com::sun::star::awt::Size aSize(
 		(long)MetricField::ConvertDoubleValue( aMtfSizeX.GetValue(), 2, aMtfSizeX.GetUnit(), MAP_100TH_MM ),
 			(long)MetricField::ConvertDoubleValue( aMtfSizeY.GetValue(), 2, aMtfSizeY.GetUnit(), MAP_100TH_MM ) );
Index: svtools/source/filter.vcl/filter/filter.cxx
===================================================================
RCS file: /cvs/util/svtools/source/filter.vcl/filter/filter.cxx,v
retrieving revision 1.51
retrieving revision 1.48.16.2
diff -u -p -r1.51 -r1.48.16.2
--- svtools/source/filter.vcl/filter/filter.cxx	28 Jun 2004 16:12:08 -0000	1.51
+++ svtools/source/filter.vcl/filter/filter.cxx	19 Oct 2004 17:11:10 -0000	1.48.16.2
@@ -898,7 +898,7 @@ static Graphic ImpGetScaledGraphic( cons
 				MapMode		aMap( MAP_100TH_INCH );
 
 				sal_Int32	nDPI = rConfigItem.ReadInt32( String( ResId( KEY_RES, pResMgr ) ), 75 );
-				Fraction	aFrac( 1, Min( Max( nDPI, 75L ), 600L ) );
+				Fraction	aFrac( 1, Min( Max( nDPI, 75 ), 600 ) );
 
 				aMap.SetScaleX( aFrac );
 				aMap.SetScaleY( aFrac );
Index: svtools/source/filter.vcl/wmf/emfwr.cxx
===================================================================
RCS file: /cvs/util/svtools/source/filter.vcl/wmf/emfwr.cxx,v
retrieving revision 1.10
retrieving revision 1.10.16.1
diff -u -p -r1.10 -r1.10.16.1
--- svtools/source/filter.vcl/wmf/emfwr.cxx	16 Jun 2004 10:18:45 -0000	1.10
+++ svtools/source/filter.vcl/wmf/emfwr.cxx	21 Jul 2004 17:34:12 -0000	1.10.16.1
@@ -770,26 +770,26 @@ void EMFWriter::ImplWriteBmpRecord( cons
 
 // -----------------------------------------------------------------------------
 
-void EMFWriter::ImplWriteTextRecord( const Point& rPos, const String rText, const long* pDXArray, UINT32 nWidth )
+void EMFWriter::ImplWriteTextRecord( const Point& rPos, const String rText, const sal_Int32* pDXArray, sal_uInt32 nWidth )
 {
 	UINT32 nLen = rText.Len(), i;
 
 	if( nLen )
 	{
-		unsigned long nNormWidth;
-		long*		pOwnArray;
-		long*		pDX;
+		sal_uInt32	nNormWidth;
+		sal_Int32*	pOwnArray;
+		sal_Int32*	pDX;
 
 		// get text sizes
 		if( pDXArray )
 		{
 			pOwnArray = NULL;
 			nNormWidth = maVDev.GetTextWidth( rText );
-			pDX = (long*) pDXArray;
+			pDX = (sal_Int32*) pDXArray;
 		}
 		else
 		{	
-			pOwnArray = new long[ nLen ];
+			pOwnArray = new sal_Int32[ nLen ];
 			nNormWidth = maVDev.GetTextArray( rText, pOwnArray );
 			pDX = pOwnArray;
 		}
Index: svtools/source/filter.vcl/wmf/emfwr.hxx
===================================================================
RCS file: /cvs/util/svtools/source/filter.vcl/wmf/emfwr.hxx,v
retrieving revision 1.2
retrieving revision 1.2.612.1
diff -u -p -r1.2 -r1.2.612.1
--- svtools/source/filter.vcl/wmf/emfwr.hxx	4 Jul 2002 14:58:40 -0000	1.2
+++ svtools/source/filter.vcl/wmf/emfwr.hxx	21 Jul 2004 17:34:12 -0000	1.2.612.1
@@ -115,7 +115,7 @@ private:
 	void				ImplWritePolygonRecord( const Polygon& rPoly, BOOL bClose );
 	void				ImplWritePolyPolygonRecord( const PolyPolygon& rPolyPoly );
 	void				ImplWriteBmpRecord( const Bitmap& rBmp, const Point& rPt, const Size& rSz, UINT32 nROP );
-	void				ImplWriteTextRecord( const Point& rPos, const String rText, const long* pDXArray, UINT32 nWidth );
+	void				ImplWriteTextRecord( const Point& rPos, const String rText, const sal_Int32* pDXArray, sal_uInt32 nWidth );
 
 	void				ImplWrite( const GDIMetaFile& rMtf );
 
Index: svtools/source/filter.vcl/wmf/wmfwr.cxx
===================================================================
RCS file: /cvs/util/svtools/source/filter.vcl/wmf/wmfwr.cxx,v
retrieving revision 1.20
retrieving revision 1.19.8.2
diff -u -p -r1.20 -r1.19.8.2
--- svtools/source/filter.vcl/wmf/wmfwr.cxx	6 Jul 2004 12:12:30 -0000	1.20
+++ svtools/source/filter.vcl/wmf/wmfwr.cxx	19 Oct 2004 17:09:39 -0000	1.19.8.2
@@ -669,8 +669,8 @@ void WMFWriter::WMFRecord_ExtTextOut( co
     TrueExtTextOut(rPoint,rString,aByteString,pDXAry);
 }
 
-void WMFWriter::TrueExtTextOut( const Point & rPoint, const String & rString,
-    const ByteString & rByteString, const long * pDXAry )
+void WMFWriter::TrueExtTextOut( const Point & rPoint, const String & rString, 
+    const ByteString & rByteString, const sal_Int32 * pDXAry )
 {
 	WriteRecordHeader( 0, W_META_EXTTEXTOUT );
 	WritePointYX( rPoint );
@@ -920,7 +920,7 @@ void WMFWriter::WMFRecord_StretchDIB( co
 	// erzeugt, schreiben wir zuerst die Bitmap an die richtige Position
 	// Und ueberschreiben hinterher den FILEHEADER mit den Parametern.
 	nPosAnf=pWMF->Tell(); // Position merken, wo Parameter hin sollen
-	*pWMF << (long)0 << (long)0; // 8 bytes auffuellen (diese 8 bytes +
+	*pWMF << (sal_Int32)0 << (sal_Int32)0; // 8 bytes auffuellen (diese 8 bytes +
 								 // 14 bytes ueberfluessigen FILEHEADER
 								 // = 22 bytes Parameter)
 	*pWMF << rBitmap; // Bitmap schreiben
@@ -1291,7 +1291,7 @@ void WMFWriter::WriteRecords( const GDIM
 
 					pVirDev->SetFont( aSrcFont );
 					nLen = aTemp.Len();
-					sal_Int32* pDXAry = nLen ? new long[ nLen ] : NULL;
+					sal_Int32* pDXAry = nLen ? new sal_Int32[ nLen ] : NULL;
 					nNormSize = pVirDev->GetTextArray( aTemp, pDXAry );
 					for ( i = 0; i < ( nLen - 1 ); i++ )
 						pDXAry[ i ] = pDXAry[ i ] * (sal_Int32)pA->GetWidth() / nNormSize;
Index: svtools/source/filter.vcl/wmf/wmfwr.hxx
===================================================================
RCS file: /cvs/util/svtools/source/filter.vcl/wmf/wmfwr.hxx,v
retrieving revision 1.7
retrieving revision 1.7.380.1
diff -u -p -r1.7 -r1.7.380.1
--- svtools/source/filter.vcl/wmf/wmfwr.hxx	6 Jun 2003 10:47:51 -0000	1.7
+++ svtools/source/filter.vcl/wmf/wmfwr.hxx	21 Jul 2004 17:34:12 -0000	1.7.380.1
@@ -188,11 +188,11 @@ private:
 	void WMFRecord_DeleteObject(USHORT nObjectHandle);
 	void WMFRecord_Ellipse(const Rectangle & rRect);
 	void WMFRecord_Escape( sal_uInt32 nEsc, sal_uInt32 nLen, const sal_Int8* pData );
-	sal_Bool WMFRecord_Escape_Unicode( const Point& rPoint, const String& rStr, const long * pDXAry );
-	void WMFRecord_ExtTextOut(const Point & rPoint, const String & rString, const long * pDXAry);
+	sal_Bool WMFRecord_Escape_Unicode( const Point& rPoint, const String& rStr, const sal_Int32 * pDXAry );
+	void WMFRecord_ExtTextOut(const Point & rPoint, const String & rString, const sal_Int32 * pDXAry);
 
     void TrueExtTextOut(const Point & rPoint, const String & rString, 
-        const ByteString & rByteString, const long * pDXAry);
+        const ByteString & rByteString, const sal_Int32 * pDXAry);
     void TrueTextOut(const Point & rPoint, const ByteString& rString);
 	void WMFRecord_LineTo(const Point & rPoint);
 	void WMFRecord_MoveTo(const Point & rPoint);
Index: svtools/source/items/lckbitem.cxx
===================================================================
RCS file: /cvs/util/svtools/source/items/lckbitem.cxx,v
retrieving revision 1.3
retrieving revision 1.3.246.1
diff -u -p -r1.3 -r1.3.246.1
--- svtools/source/items/lckbitem.cxx	19 Sep 2003 08:10:50 -0000	1.3
+++ svtools/source/items/lckbitem.cxx	21 Jul 2004 17:34:13 -0000	1.3.246.1
@@ -216,9 +216,9 @@ BOOL SfxLockBytesItem::QueryValue( com::
 		else
 			return FALSE;
 
-		ULONG nRead = 0;
 		com::sun::star::uno::Sequence< sal_Int8 > aSeq( nLen );
 
+		sal_Size nRead = 0;
 		_xVal->ReadAt( 0, aSeq.getArray(), nLen, &nRead );
 		rVal <<= aSeq;
 	}
Index: svtools/source/items/ptitem.cxx
===================================================================
RCS file: /cvs/util/svtools/source/items/ptitem.cxx,v
retrieving revision 1.4
retrieving revision 1.4.614.1
diff -u -p -r1.4 -r1.4.614.1
--- svtools/source/items/ptitem.cxx	28 May 2002 11:03:20 -0000	1.4
+++ svtools/source/items/ptitem.cxx	21 Jul 2004 17:34:13 -0000	1.4.614.1
@@ -184,8 +184,8 @@ BOOL SfxPointItem::QueryValue( com::sun:
     switch ( nMemberId )
     {
         case 0: rVal <<= com::sun::star::awt::Point( aVal.getX(), aVal.getY() ); break;
-        case MID_X: rVal <<= aVal.getX(); break;
-        case MID_Y: rVal <<= aVal.getY(); break;
+        case MID_X: rVal <<= (sal_Int32)aVal.getX(); break;	// FIXME: possible truncation in 64-bit mode
+        case MID_Y: rVal <<= (sal_Int32)aVal.getY(); break;	// FIXME: possible truncation in 64-bit mode
         default: DBG_ERROR("Wrong MemberId!"); return FALSE;
     }
 
Index: svtools/source/items/rectitem.cxx
===================================================================
RCS file: /cvs/util/svtools/source/items/rectitem.cxx,v
retrieving revision 1.5
retrieving revision 1.5.614.1
diff -u -p -r1.5 -r1.5.614.1
--- svtools/source/items/rectitem.cxx	28 May 2002 14:17:17 -0000	1.5
+++ svtools/source/items/rectitem.cxx	21 Jul 2004 17:34:13 -0000	1.5.614.1
@@ -194,10 +194,10 @@ BOOL SfxRectangleItem::QueryValue( com::
 											 aVal.getHeight() );
             break;
         }
-        case MID_RECT_LEFT:  rVal <<= aVal.getX(); break;
-        case MID_RECT_RIGHT: rVal <<= aVal.getY(); break;
-        case MID_WIDTH: rVal <<= aVal.getWidth(); break;
-        case MID_HEIGHT: rVal <<= aVal.getHeight(); break;
+        case MID_RECT_LEFT:  rVal <<= (sal_Int32)aVal.getX(); break;	// FIXME: possible truncation in 64-bit mode
+        case MID_RECT_RIGHT: rVal <<= (sal_Int32)aVal.getY(); break;	// FIXME: possible truncation in 64-bit mode
+        case MID_WIDTH: rVal <<=  (sal_Int32)aVal.getWidth(); break;	// FIXME: possible truncation in 64-bit mode
+        case MID_HEIGHT: rVal <<= (sal_Int32)aVal.getHeight(); break;	// FIXME: possible truncation in 64-bit mode
         default: DBG_ERROR("Wrong MemberID!"); return FALSE;
     }
 
Index: svtools/source/items/szitem.cxx
===================================================================
RCS file: /cvs/util/svtools/source/items/szitem.cxx,v
retrieving revision 1.4
retrieving revision 1.4.614.1
diff -u -p -r1.4 -r1.4.614.1
--- svtools/source/items/szitem.cxx	28 May 2002 11:37:16 -0000	1.4
+++ svtools/source/items/szitem.cxx	21 Jul 2004 17:34:13 -0000	1.4.614.1
@@ -198,9 +198,9 @@ BOOL  SfxSizeItem::QueryValue( com::sun:
             break;
         }
         case MID_WIDTH:
-            rVal <<= aTmp.getWidth(); break;
+            rVal <<= (sal_Int32)aTmp.getWidth(); break;	// FIXME: possible truncation in 64-bit mode
         case MID_HEIGHT:
-            rVal <<= aTmp.getHeight(); break;
+            rVal <<= (sal_Int32)aTmp.getHeight(); break;	// FIXME: possible truncation in 64-bit mode
         default: DBG_ERROR("Wrong MemberId!"); return FALSE;
     }
 
Index: svtools/source/misc/flbytes.cxx
===================================================================
RCS file: /cvs/util/svtools/source/misc/flbytes.cxx,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.650.1
diff -u -p -r1.1.1.1 -r1.1.1.1.650.1
--- svtools/source/misc/flbytes.cxx	18 Sep 2000 16:59:02 -0000	1.1.1.1
+++ svtools/source/misc/flbytes.cxx	21 Jul 2004 17:34:14 -0000	1.1.1.1.650.1
@@ -79,9 +79,9 @@ namespace unnamed_svtools_flbytes {} usi
 //============================================================================
 namespace unnamed_svtools_flbytes {
 
-inline ULONG MyMin( long a, long b )
+inline sal_Int32 MyMin( sal_Int32 a, sal_Int32 b )
 {
-	return Max( long( Min(  a ,  b ) ), 0L );
+	return Max( sal_Int32( Min(  a ,  b ) ), 0 );
 }
 
 }
@@ -103,14 +103,14 @@ SvFillLockBytes::SvFillLockBytes( SvLock
 }
 
 //============================================================================
-ErrCode SvFillLockBytes::ReadAt( ULONG nPos, void* pBuffer, ULONG nCount,
-							 ULONG *pRead ) const
+ErrCode SvFillLockBytes::ReadAt( sal_Size nPos, void* pBuffer, sal_Size nCount,
+							 sal_Size *pRead ) const
 {
 	if( bTerminated )
 		return xLockBytes->ReadAt( nPos, pBuffer, nCount, pRead );
 	else
 	{
-		ULONG nWanted = nPos + nCount;
+		sal_Size nWanted = nPos + nCount;
 		if( IsSynchronMode() )
 		{
 			while( nWanted > nFilledSize && !bTerminated )
@@ -119,8 +119,8 @@ ErrCode SvFillLockBytes::ReadAt( ULONG n
 		}
 		else
 		{
-			ULONG nRead = MyMin( nCount, long( nFilledSize ) - nPos );
-			ULONG nErr = xLockBytes->ReadAt( nPos, pBuffer, nRead, pRead );
+			sal_Size nRead = MyMin( nCount, sal_Size( nFilledSize ) - nPos );
+			sal_Size nErr = xLockBytes->ReadAt( nPos, pBuffer, nRead, pRead );
 			return ( !nCount || nRead == nCount || nErr ) ?
 				nErr : ERRCODE_IO_PENDING;
 		}
@@ -128,14 +128,14 @@ ErrCode SvFillLockBytes::ReadAt( ULONG n
 }
 
 //============================================================================
-ErrCode SvFillLockBytes::WriteAt( ULONG nPos, const void* pBuffer,
-								  ULONG nCount, ULONG *pWritten )
+ErrCode SvFillLockBytes::WriteAt( sal_Size nPos, const void* pBuffer,
+								  sal_Size nCount, sal_Size *pWritten )
 {
 	if( bTerminated )
 		return xLockBytes->WriteAt( nPos, pBuffer, nCount, pWritten );
 	else
 	{
-		ULONG nWanted = nPos + nCount;
+		sal_Size nWanted = nPos + nCount;
 		if( IsSynchronMode() )
 		{
 			while( nWanted > nFilledSize && !bTerminated )
@@ -144,8 +144,8 @@ ErrCode SvFillLockBytes::WriteAt( ULONG 
 		}
 		else
 		{
-			ULONG nRead = MyMin( nCount, long( nFilledSize ) - nPos );
-			ULONG nErr = xLockBytes->WriteAt( nPos, pBuffer, nRead, pWritten );
+			sal_Size nRead = MyMin( nCount, sal_Size( nFilledSize ) - nPos );
+			sal_Size nErr = xLockBytes->WriteAt( nPos, pBuffer, nRead, pWritten );
 			return ( !nCount || nRead == nCount || nErr ) ?
 				nErr : ERRCODE_IO_PENDING;
 		}
@@ -159,20 +159,20 @@ ErrCode SvFillLockBytes::Flush() const
 }
 
 //============================================================================
-ErrCode SvFillLockBytes::SetSize( ULONG nSize )
+ErrCode SvFillLockBytes::SetSize( sal_Size nSize )
 {
 	return xLockBytes->SetSize( nSize );
 }
 
 //============================================================================
-ErrCode SvFillLockBytes::LockRegion( ULONG nPos, ULONG nCount, LockType eType)
+ErrCode SvFillLockBytes::LockRegion( sal_Size nPos, sal_Size nCount, LockType eType)
 {
 	return xLockBytes->LockRegion( nPos, nCount, eType );
 }
 
 //============================================================================
 ErrCode SvFillLockBytes::UnlockRegion(
-	ULONG nPos, ULONG nCount, LockType eType)
+	sal_Size nPos, sal_Size nCount, LockType eType)
 {
 	return xLockBytes->UnlockRegion( nPos, nCount, eType );
 }
@@ -185,7 +185,7 @@ ErrCode SvFillLockBytes::Stat(
 }
 
 //============================================================================
-ErrCode SvFillLockBytes::FillAppend( const void* pBuffer, ULONG nCount, ULONG *pWritten )
+ErrCode SvFillLockBytes::FillAppend( const void* pBuffer, sal_Size nCount, sal_Size *pWritten )
 {
 	ErrCode nRet = xLockBytes->WriteAt(
 		nFilledSize, pBuffer, nCount, pWritten );
@@ -212,12 +212,12 @@ TYPEINIT1(SvSyncLockBytes, SvOpenLockByt
 
 //============================================================================
 // virtual
-ErrCode SvSyncLockBytes::ReadAt(ULONG nPos, void * pBuffer, ULONG nCount,
-								ULONG * pRead) const
+ErrCode SvSyncLockBytes::ReadAt(sal_Size nPos, void * pBuffer, sal_Size nCount,
+								sal_Size * pRead) const
 {
-	for (ULONG nReadTotal = 0;;)
+	for (sal_Size nReadTotal = 0;;)
 	{
-		ULONG nReadCount = 0;
+		sal_Size nReadCount = 0;
 		ErrCode nError = m_xAsyncLockBytes->ReadAt(nPos, pBuffer, nCount,
 												   &nReadCount);
 		nReadTotal += nReadCount;
@@ -236,12 +236,12 @@ ErrCode SvSyncLockBytes::ReadAt(ULONG nP
 
 //============================================================================
 // virtual
-ErrCode SvSyncLockBytes::WriteAt(ULONG nPos, const void * pBuffer,
-								 ULONG nCount, ULONG * pWritten)
+ErrCode SvSyncLockBytes::WriteAt(sal_Size nPos, const void * pBuffer,
+								 sal_Size nCount, sal_Size * pWritten)
 {
-	for (ULONG nWrittenTotal = 0;;)
+	for (sal_Size nWrittenTotal = 0;;)
 	{
-		ULONG nWrittenCount = 0;
+		sal_Size nWrittenCount = 0;
 		ErrCode nError = m_xAsyncLockBytes->WriteAt(nPos, pBuffer, nCount,
 													&nWrittenCount);
 		nWrittenTotal += nWrittenCount;
@@ -270,34 +270,34 @@ struct SvCompositeLockBytes_Impl
 	SvULongs              aPositions;
 	SvULongs              aOffsets;
 	BOOL                  bPending;
-	ULONG RelativeOffset( ULONG nPos ) const;
+	sal_Size RelativeOffset( sal_Size nPos ) const;
 	ErrCode ReadWrite_Impl(
-		ULONG nPos, void* pBuffer, ULONG nCount, ULONG* pProcessed,
+		sal_Size nPos, void* pBuffer, sal_Size nCount, sal_Size* pProcessed,
 		BOOL bRead );
 	SvCompositeLockBytes_Impl() : bPending( FALSE ){}
 };
 
 //============================================================================
-ULONG SvCompositeLockBytes_Impl::RelativeOffset( ULONG nPos ) const
+sal_Size SvCompositeLockBytes_Impl::RelativeOffset( sal_Size nPos ) const
 {
 	const SvULongs& rPositions = aPositions;
 	const SvULongs& rOffsets = aOffsets;
 
-	USHORT nMinPos = 0;
-	USHORT nListCount = rPositions.Count();
+	sal_uInt16 nMinPos = 0;
+	sal_uInt16 nListCount = rPositions.Count();
 
 	// Erster Lockbytes, der bearbeitet werden muss
 	while( nMinPos + 1 < nListCount && rPositions[ nMinPos + 1 ] <= nPos )
 		nMinPos ++;
-	ULONG nSectionStart = rPositions[ nMinPos ];
+	sal_Size nSectionStart = rPositions[ nMinPos ];
 	if( nSectionStart > nPos )
-		return ULONG_MAX;
+		return SAL_MAX_SIZE;
 	return rOffsets[ nMinPos ] + nPos - nSectionStart;
 }
 
 //============================================================================
 ErrCode SvCompositeLockBytes_Impl::ReadWrite_Impl(
-	ULONG nPos, void* pBuffer, ULONG nCount, ULONG* pProcessed,
+	sal_Size nPos, void* pBuffer, sal_Size nCount, sal_Size* pProcessed,
 	BOOL bRead )
 {
 	ErrCode nErr = ERRCODE_NONE;
@@ -305,14 +305,14 @@ ErrCode SvCompositeLockBytes_Impl::ReadW
 	SvULongs& rOffsets = aOffsets;
 	SvLockBytesMemberList& rLockBytes = aLockBytes;
 
-	ULONG nBytes = nCount;
-	USHORT nListCount = rPositions.Count();
-	USHORT nMinPos = 0;
+	sal_Size nBytes = nCount;
+	sal_uInt16 nListCount = rPositions.Count();
+	sal_uInt16 nMinPos = 0;
 
 	// Erster Lockbytes, der bearbeitet werden muss
 	while( nMinPos + 1 < nListCount && rPositions[ nMinPos + 1 ] <= nPos )
 		nMinPos ++;
-	ULONG nSectionStart = rPositions[ nMinPos ];
+	sal_Size nSectionStart = rPositions[ nMinPos ];
 
 	if( nSectionStart > nPos )
 	{
@@ -321,22 +321,22 @@ ErrCode SvCompositeLockBytes_Impl::ReadW
 		return ERRCODE_IO_CANTREAD;
 	}
 
-	ULONG nDone;
+	sal_Size nDone;
 	while( nMinPos < nListCount )
 	{
-		ULONG nToProcess;
-		ULONG nSectionStop;
+		sal_Size nToProcess;
+		sal_Size nSectionStop;
 		if( nMinPos + 1 < nListCount )
 		{
 			nSectionStop = rPositions[ nMinPos + 1 ];
-			nToProcess = MyMin( long( nSectionStop ) - nPos, nBytes );
+			nToProcess = MyMin( sal_sSize( nSectionStop ) - nPos, nBytes );
 		}
 		else
 		{
 			nToProcess = nBytes;
 			nSectionStop = 0;
 		}
-		ULONG nAbsPos = nPos - nSectionStart + rOffsets[ nMinPos ];
+		sal_Size nAbsPos = nPos - nSectionStart + rOffsets[ nMinPos ];
 		SvLockBytes* pLB = rLockBytes.GetObject( nMinPos );
 		if( bRead )
 			nErr = pLB->ReadAt( nAbsPos, pBuffer, nToProcess, &nDone );
@@ -382,21 +382,21 @@ void  SvCompositeLockBytes::SetIsPending
 }
 
 //============================================================================
-ULONG SvCompositeLockBytes::RelativeOffset( ULONG nPos ) const
+sal_Size SvCompositeLockBytes::RelativeOffset( sal_Size nPos ) const
 {
 	return  pImpl->RelativeOffset( nPos );
 }
 
 //============================================================================
 ErrCode SvCompositeLockBytes::ReadAt(
-	ULONG nPos, void* pBuffer, ULONG nCount, ULONG* pRead ) const
+	sal_Size nPos, void* pBuffer, sal_Size nCount, sal_Size* pRead ) const
 {
 	return pImpl->ReadWrite_Impl( nPos, pBuffer, nCount, pRead, TRUE );
 }
 
 //============================================================================
 ErrCode SvCompositeLockBytes::WriteAt(
-	ULONG nPos, const void* pBuffer, ULONG nCount, ULONG* pWritten )
+	sal_Size nPos, const void* pBuffer, sal_Size nCount, sal_Size* pWritten )
 {
 	return pImpl->ReadWrite_Impl(
 		nPos, const_cast< void * >(pBuffer), nCount, pWritten, FALSE );
@@ -407,20 +407,20 @@ ErrCode SvCompositeLockBytes::Flush() co
 {
 	SvLockBytesMemberList& rLockBytes = pImpl->aLockBytes;
 	ErrCode nErr = ERRCODE_NONE;
-	for( USHORT nCount = (USHORT)rLockBytes.Count(); !nErr && nCount--; )
+	for( sal_uInt16 nCount = (sal_uInt16)rLockBytes.Count(); !nErr && nCount--; )
 		nErr = rLockBytes.GetObject( nCount )->Flush();
 	return nErr;
 }
 
 //============================================================================
-ErrCode SvCompositeLockBytes::SetSize( ULONG nSize )
+ErrCode SvCompositeLockBytes::SetSize( sal_Size nSize )
 {
 	DBG_ERROR( "not implemented" );
 	return ERRCODE_IO_NOTSUPPORTED;
 }
 
 //============================================================================
-ErrCode SvCompositeLockBytes::LockRegion( ULONG nPos, ULONG nCount, LockType )
+ErrCode SvCompositeLockBytes::LockRegion( sal_Size nPos, sal_Size nCount, LockType )
 {
 	DBG_ERROR( "not implemented" );
 	return ERRCODE_IO_NOTSUPPORTED;
@@ -428,7 +428,7 @@ ErrCode SvCompositeLockBytes::LockRegion
 
 //============================================================================
 ErrCode SvCompositeLockBytes::UnlockRegion(
-	ULONG nPos, ULONG nCount, LockType )
+	sal_Size nPos, sal_Size nCount, LockType )
 {
 	DBG_ERROR( "not implemented" );
 	return ERRCODE_IO_NOTSUPPORTED;
@@ -438,7 +438,7 @@ ErrCode SvCompositeLockBytes::UnlockRegi
 ErrCode SvCompositeLockBytes::Stat(
 	SvLockBytesStat* pStat, SvLockBytesStatFlag eFlag) const
 {
-	USHORT nMax = pImpl->aPositions.Count() - 1;
+	sal_uInt16 nMax = pImpl->aPositions.Count() - 1;
 
 	SvLockBytesStat aStat;
 	ErrCode nErr = pImpl->aLockBytes.GetObject( nMax )->Stat( &aStat, eFlag );
@@ -449,9 +449,9 @@ ErrCode SvCompositeLockBytes::Stat(
 
 //============================================================================
 void SvCompositeLockBytes::Append(
-	SvLockBytes* pLockBytes, ULONG nPos, ULONG nOffset )
+	SvLockBytes* pLockBytes, sal_Size nPos, sal_Size nOffset )
 {
-	USHORT nCount = pImpl->aOffsets.Count();
+	sal_uInt16 nCount = pImpl->aOffsets.Count();
 	pImpl->aLockBytes.Insert( pLockBytes, nCount );
 	pImpl->aPositions.Insert( nPos, nCount );
 	pImpl->aOffsets.Insert( nOffset, nCount );
Index: svtools/source/misc/graphictools.cxx
===================================================================
RCS file: /cvs/util/svtools/source/misc/graphictools.cxx,v
retrieving revision 1.6
retrieving revision 1.6.8.1
diff -u -p -r1.6 -r1.6.8.1
--- svtools/source/misc/graphictools.cxx	17 Jun 2004 13:21:09 -0000	1.6
+++ svtools/source/misc/graphictools.cxx	21 Jul 2004 17:34:14 -0000	1.6.8.1
@@ -361,13 +361,13 @@ SvStream& operator<<( SvStream& rOStm, c
     rClass.maEndArrow.Write( rOStm );
     rOStm << rClass.mfTransparency;
     rOStm << rClass.mfStrokeWidth;
-    UINT16 nTmp = rClass.maCapType;
+    sal_uInt16 nTmp = rClass.maCapType;
     rOStm << nTmp;
     nTmp = rClass.maJoinType;
     rOStm << nTmp;
     rOStm << rClass.mfMiterLimit;
 
-    rOStm << (sal_Size)rClass.maDashArray.size();
+    rOStm << svstream_Size_to_u32( rClass.maDashArray.size() );
     size_t i;
     for(i=0; i<rClass.maDashArray.size(); ++i)
         rOStm << rClass.maDashArray[i];
@@ -384,15 +384,16 @@ SvStream& operator>>( SvStream& rIStm, S
     rClass.maEndArrow.Read( rIStm );
     rIStm >> rClass.mfTransparency;
     rIStm >> rClass.mfStrokeWidth;
-    UINT16 nTmp;
+    sal_uInt16 nTmp;
     rIStm >> nTmp;
     rClass.maCapType = SvtGraphicStroke::CapType(nTmp);
     rIStm >> nTmp;
     rClass.maJoinType = SvtGraphicStroke::JoinType(nTmp);
     rIStm >> rClass.mfMiterLimit;
 
-    sal_Size nSize;
-    rIStm >> nSize;
+    sal_uInt32 nTemp;
+    rIStm >> nTemp;
+    sal_Size nSize = svstream_u32_to_Size(nTemp);
     rClass.maDashArray.resize(nSize);
     size_t i;
     for(i=0; i<rClass.maDashArray.size(); ++i)
Index: svtools/source/misc/strmadpt.cxx
===================================================================
RCS file: /cvs/util/svtools/source/misc/strmadpt.cxx,v
retrieving revision 1.5
retrieving revision 1.5.16.1
diff -u -p -r1.5 -r1.5.16.1
--- svtools/source/misc/strmadpt.cxx	16 Jun 2004 10:25:17 -0000	1.5
+++ svtools/source/misc/strmadpt.cxx	21 Jul 2004 17:34:15 -0000	1.5.16.1
@@ -195,7 +195,7 @@ TYPEINIT1(SvOutputStreamOpenLockBytes, S
 
 //============================================================================
 // virtual
-ErrCode SvOutputStreamOpenLockBytes::ReadAt(ULONG, void *, ULONG, ULONG *)
+ErrCode SvOutputStreamOpenLockBytes::ReadAt(sal_Size, void *, sal_Size, sal_Size *)
 	const
 {
 	return ERRCODE_IO_CANTREAD;
@@ -203,8 +203,8 @@ ErrCode SvOutputStreamOpenLockBytes::Rea
 
 //============================================================================
 // virtual
-ErrCode SvOutputStreamOpenLockBytes::WriteAt(ULONG nPos, void const * pBuffer,
-											 ULONG nCount, ULONG * pWritten)
+ErrCode SvOutputStreamOpenLockBytes::WriteAt(sal_Size nPos, void const * pBuffer,
+											 sal_Size nCount, sal_Size * pWritten)
 {
 	if (nPos != m_nPosition)
 		return ERRCODE_IO_CANTWRITE;
@@ -230,7 +230,7 @@ ErrCode SvOutputStreamOpenLockBytes::Flu
 
 //============================================================================
 // virtual
-ErrCode SvOutputStreamOpenLockBytes::SetSize(ULONG)
+ErrCode SvOutputStreamOpenLockBytes::SetSize(sal_Size)
 {
 	return ERRCODE_IO_NOTSUPPORTED;
 }
@@ -248,15 +248,15 @@ ErrCode SvOutputStreamOpenLockBytes::Sta
 //============================================================================
 // virtual
 ErrCode SvOutputStreamOpenLockBytes::FillAppend(void const * pBuffer,
-												ULONG nCount,
-												ULONG * pWritten)
+												sal_Size nCount,
+												sal_Size * pWritten)
 {
 	if (!m_xOutputStream.is())
 		return ERRCODE_IO_CANTWRITE;
 	if (nCount > 0
-		&& nCount > std::numeric_limits< ULONG >::max() - m_nPosition)
+		&& nCount > std::numeric_limits< sal_Size >::max() - m_nPosition)
 	{
-		nCount = std::numeric_limits< ULONG >::max() - m_nPosition;
+		nCount = std::numeric_limits< sal_Size >::max() - m_nPosition;
 		if (nCount == 0)
 			return ERRCODE_IO_CANTWRITE;
 	}
@@ -278,14 +278,14 @@ ErrCode SvOutputStreamOpenLockBytes::Fil
 
 //============================================================================
 // virtual
-ULONG SvOutputStreamOpenLockBytes::Tell() const
+sal_Size SvOutputStreamOpenLockBytes::Tell() const
 {
 	return m_nPosition;
 }
 
 //============================================================================
 // virtual
-ULONG SvOutputStreamOpenLockBytes::Seek(ULONG)
+sal_Size SvOutputStreamOpenLockBytes::Seek(sal_Size)
 {
 	return m_nPosition;
 }
@@ -344,21 +344,21 @@ SvLockBytesInputStream::readBytes(uno::S
 	if (!m_xLockBytes.Is())
 		throw io::NotConnectedException();
 	if (nBytesToRead < 0
-		|| m_nPosition > std::numeric_limits< ULONG >::max()
+		|| m_nPosition > std::numeric_limits< sal_uInt32 >::max()
 		   && nBytesToRead > 0)
 		throw io::IOException();
 	rData.realloc(nBytesToRead);
 	sal_Int32 nSize = 0;
 	while (nSize < nBytesToRead)
 	{
-		ULONG nCount;
-		ErrCode nError = m_xLockBytes->ReadAt(ULONG(m_nPosition),
+		sal_Size nCount;
+		ErrCode nError = m_xLockBytes->ReadAt(sal_Size(m_nPosition),
 											  rData.getArray() + nSize,
 											  nBytesToRead - nSize, &nCount);
 		if (nError != ERRCODE_NONE && nError != ERRCODE_IO_PENDING)
 			throw io::IOException();
-		m_nPosition += nCount;
-		nSize += nCount;
+		m_nPosition += (sal_uInt64)nCount;
+		nSize += svstream_Size_to_u32( nCount );
 		if (nError == ERRCODE_NONE && nCount == 0)
 			break;
 	}
@@ -375,29 +375,29 @@ SvLockBytesInputStream::readSomeBytes(un
 {
 	if (!m_xLockBytes.Is())
 		throw io::NotConnectedException();
-	if (m_nPosition > std::numeric_limits< ULONG >::max()
+	if (m_nPosition > std::numeric_limits< sal_uInt32 >::max()
 		&& nMaxBytesToRead > 0)
 		throw io::IOException();
 	rData.realloc(nMaxBytesToRead);
-	ULONG nCount = 0;
+	sal_Size nCount = 0;
 	if (nMaxBytesToRead > 0)
 	{
 		ErrCode nError;
 		do
 		{
-			nError = m_xLockBytes->ReadAt(ULONG(m_nPosition),
+			nError = m_xLockBytes->ReadAt(sal_Size(m_nPosition),
 										  rData.getArray(),
 										  nMaxBytesToRead < 0 ?
 										      0 : nMaxBytesToRead,
 										  &nCount);
 			if (nError != ERRCODE_NONE && nError != ERRCODE_IO_PENDING)
 				throw io::IOException();
-			m_nPosition += nCount;
+			m_nPosition += (sal_uInt64)nCount;
 		}
 		while (nCount == 0 && nError == ERRCODE_IO_PENDING);
 	}
-	rData.realloc(sal_Int32(nCount));
-	return sal_Int32(nCount);
+	rData.realloc(sal_Int32(svstream_Size_to_u32(nCount)));
+	return sal_Int32(svstream_Size_to_u32(nCount));
 }
 
 //============================================================================
@@ -504,7 +504,7 @@ bool SvInputStream::open()
 
 //============================================================================
 // virtual
-ULONG SvInputStream::GetData(void * pData, ULONG nSize)
+sal_uInt32 SvInputStream::GetData(void * pData, sal_uInt32 nSize)
 {
 	if (!open())
 	{
@@ -531,8 +531,8 @@ ULONG SvInputStream::GetData(void * pDat
 		{
 			sal_Int32 nRemain
 				= sal_Int32(
-					std::min(ULONG(nSize - nRead),
-							 ULONG(std::numeric_limits< sal_Int32 >::max())));
+					std::min(sal_uInt32(nSize - nRead),
+							 sal_uInt32(std::numeric_limits< sal_Int32 >::max())));
 			if (nRemain == 0)
 				break;
 			uno::Sequence< sal_Int8 > aBuffer;
@@ -568,8 +568,8 @@ ULONG SvInputStream::GetData(void * pDat
 				sal_Int32 nRemain
 					= sal_Int32(
 						std::min(
-							ULONG(nSize - nRead),
-							ULONG(std::numeric_limits< sal_Int32 >::max())));
+							sal_uInt32(nSize - nRead),
+							sal_uInt32(std::numeric_limits< sal_Int32 >::max())));
 				if (nRemain == 0)
 					break;
 				uno::Sequence< sal_Int8 > aBuffer;
@@ -599,7 +599,7 @@ ULONG SvInputStream::GetData(void * pDat
 
 //============================================================================
 // virtual
-ULONG SvInputStream::PutData(void const *, ULONG)
+sal_uInt32 SvInputStream::PutData(void const *, sal_uInt32)
 {
 	SetError(ERRCODE_IO_NOTSUPPORTED);
 	return 0;
@@ -612,7 +612,7 @@ void SvInputStream::FlushData()
 
 //============================================================================
 // virtual
-ULONG SvInputStream::SeekPos(ULONG nPos)
+sal_uInt32 SvInputStream::SeekPos(sal_uInt32 nPos)
 {
 	if (open())
 		if (nPos == STREAM_SEEK_TO_END)
@@ -625,7 +625,7 @@ ULONG SvInputStream::SeekPos(ULONG nPos)
 						if (nLength < STREAM_SEEK_TO_END)
 						{
 							m_nSeekedFrom = Tell();
-							return ULONG(nLength);
+							return sal_uInt32(nLength);
 						}
 					}
 					catch (io::IOException) {}
@@ -658,7 +658,7 @@ ULONG SvInputStream::SeekPos(ULONG nPos)
 
 //============================================================================
 // virtual
-void SvInputStream::SetSize(ULONG)
+void SvInputStream::SetSize(sal_uInt32)
 {
 	SetError(ERRCODE_IO_NOTSUPPORTED);
 }
@@ -697,7 +697,7 @@ USHORT SvInputStream::IsA() const
 
 //============================================================================
 // virtual
-void SvInputStream::AddMark(ULONG nPos)
+void SvInputStream::AddMark(sal_uInt32 nPos)
 {
 	if (open() && m_pPipe)
 		m_pPipe->addMark(nPos);
@@ -705,7 +705,7 @@ void SvInputStream::AddMark(ULONG nPos)
 
 //============================================================================
 // virtual
-void SvInputStream::RemoveMark(ULONG nPos)
+void SvInputStream::RemoveMark(sal_uInt32 nPos)
 {
 	if (open() && m_pPipe)
 		m_pPipe->removeMark(nPos);
@@ -718,7 +718,7 @@ void SvInputStream::RemoveMark(ULONG nPo
 //============================================================================
 
 // virtual
-ULONG SvOutputStream::GetData(void *, ULONG)
+sal_uInt32 SvOutputStream::GetData(void *, sal_uInt32)
 {
 	SetError(ERRCODE_IO_NOTSUPPORTED);
 	return 0;
@@ -726,20 +726,20 @@ ULONG SvOutputStream::GetData(void *, UL
 
 //============================================================================
 // virtual
-ULONG SvOutputStream::PutData(void const * pData, ULONG nSize)
+sal_uInt32 SvOutputStream::PutData(void const * pData, sal_uInt32 nSize)
 {
 	if (!m_xStream.is())
 	{
 		SetError(ERRCODE_IO_CANTWRITE);
 		return 0;
 	}
-	ULONG nWritten = 0;
+	sal_uInt32 nWritten = 0;
 	for (;;)
 	{
 		sal_Int32 nRemain
 			= sal_Int32(
-				std::min(ULONG(nSize - nWritten),
-						 ULONG(std::numeric_limits< sal_Int32 >::max())));
+				std::min(sal_uInt32(nSize - nWritten),
+						 sal_uInt32(std::numeric_limits< sal_Int32 >::max())));
 		if (nRemain == 0)
 			break;
 		try
@@ -761,7 +761,7 @@ ULONG SvOutputStream::PutData(void const
 
 //============================================================================
 // virtual
-ULONG SvOutputStream::SeekPos(ULONG)
+sal_uInt32 SvOutputStream::SeekPos(sal_uInt32)
 {
 	SetError(ERRCODE_IO_NOTSUPPORTED);
 	return 0;
@@ -785,7 +785,7 @@ void SvOutputStream::FlushData()
 
 //============================================================================
 // virtual
-void SvOutputStream::SetSize(ULONG)
+void SvOutputStream::SetSize(sal_uInt32)
 {
 	SetError(ERRCODE_IO_NOTSUPPORTED);
 }
Index: svtools/source/numbers/numhead.cxx
===================================================================
RCS file: /cvs/util/svtools/source/numbers/numhead.cxx,v
retrieving revision 1.4
retrieving revision 1.4.16.1
diff -u -p -r1.4 -r1.4.16.1
--- svtools/source/numbers/numhead.cxx	16 Jun 2004 10:27:57 -0000	1.4
+++ svtools/source/numbers/numhead.cxx	21 Jul 2004 17:34:15 -0000	1.4.16.1
@@ -82,7 +82,7 @@
 SvNumReadHeader::SvNumReadHeader(SvStream& rNewStream) :
 	rStream( rNewStream )
 {
-	ULONG nDataSize;
+	sal_uInt32 nDataSize;
 	rStream >> nDataSize;
 	nDataEnd = rStream.Tell() + nDataSize;
 }
@@ -91,7 +91,7 @@ SvNumReadHeader::SvNumReadHeader(SvStrea
 
 SvNumReadHeader::~SvNumReadHeader()
 {
-	ULONG nReadEnd = rStream.Tell();
+	sal_uInt32 nReadEnd = rStream.Tell();
 	DBG_ASSERT( nReadEnd <= nDataEnd, "zuviele Bytes gelesen" );
 	if ( nReadEnd != nDataEnd )
 		rStream.Seek(nDataEnd); 					// Rest ueberspringen
@@ -99,9 +99,9 @@ SvNumReadHeader::~SvNumReadHeader()
 
 //#pragma SEG_FUNCDEF(numhead_03)
 
-ULONG SvNumReadHeader::BytesLeft() const
+sal_uInt32 SvNumReadHeader::BytesLeft() const
 {
-	ULONG nReadEnd = rStream.Tell();
+	sal_uInt32 nReadEnd = rStream.Tell();
 	if (nReadEnd <= nDataEnd)
 		return nDataEnd-nReadEnd;
 
@@ -113,7 +113,7 @@ ULONG SvNumReadHeader::BytesLeft() const
 
 //#pragma SEG_FUNCDEF(numhead_04)
 
-SvNumWriteHeader::SvNumWriteHeader(SvStream& rNewStream, ULONG nDefault) :
+SvNumWriteHeader::SvNumWriteHeader(SvStream& rNewStream, sal_uInt32 nDefault) :
 	rStream( rNewStream )
 {
 	nDataSize = nDefault;
@@ -125,12 +125,12 @@ SvNumWriteHeader::SvNumWriteHeader(SvStr
 
 SvNumWriteHeader::~SvNumWriteHeader()
 {
-	ULONG nPos = rStream.Tell();
+	sal_uInt32 nPos = rStream.Tell();
 
 	if ( nPos - nDataPos != nDataSize )				// Default getroffen?
 	{
 		nDataSize = nPos - nDataPos;
-		rStream.Seek(nDataPos - sizeof(ULONG));
+		rStream.Seek(nDataPos - sizeof(sal_uInt32));
 		rStream << nDataSize;						// Groesse am Anfang eintragen
 		rStream.Seek(nPos);
 	}
@@ -145,26 +145,26 @@ SvNumWriteHeader::~SvNumWriteHeader()
 ImpSvNumMultipleReadHeader::ImpSvNumMultipleReadHeader(SvStream& rNewStream) :
 	rStream( rNewStream )
 {
-	ULONG nDataSize;
+	sal_uInt32 nDataSize;
 	rStream >> nDataSize;
-	ULONG nDataPos = rStream.Tell();
+	sal_uInt32 nDataPos = svstream_Size_to_u32( rStream.Tell() );
 	nEntryEnd = nDataPos;
 
-	rStream.SeekRel(nDataSize);
-	USHORT nID;
+	rStream.SeekRel(svstream_u32_to_Size(nDataSize));
+	sal_uInt16 nID;
 	rStream >> nID;
 	if (nID != SV_NUMID_SIZES)
 	{
 		DBG_ERROR("SV_NUMID_SIZES nicht gefunden");
 	}
-	ULONG nSizeTableLen;
+	sal_uInt32 nSizeTableLen;
 	rStream >> nSizeTableLen;
 	pBuf = new char[nSizeTableLen];
-	rStream.Read( pBuf, nSizeTableLen );
-	pMemStream = new SvMemoryStream( pBuf, nSizeTableLen, STREAM_READ );
+	rStream.Read( pBuf, svstream_u32_to_Size(nSizeTableLen) );
+	pMemStream = new SvMemoryStream( pBuf, svstream_u32_to_Size(nSizeTableLen), STREAM_READ );
 
-	nEndPos = rStream.Tell();
-	rStream.Seek( nDataPos );
+	nEndPos = svstream_Size_to_u32( rStream.Tell() );
+	rStream.Seek( svstream_u32_to_Size(nDataPos) );
 }
 
 //#pragma SEG_FUNCDEF(numhead_07)
@@ -176,43 +176,43 @@ ImpSvNumMultipleReadHeader::~ImpSvNumMul
 	delete pMemStream;
 	delete [] pBuf;
 
-	rStream.Seek(nEndPos);
+	rStream.Seek(svstream_u32_to_Size(nEndPos));
 }
 
 //! mit ctor synchron
 // static
 void ImpSvNumMultipleReadHeader::Skip( SvStream& rStream )
 {
-	ULONG nDataSize;
+	sal_uInt32 nDataSize;
 	rStream >> nDataSize;
-	rStream.SeekRel( nDataSize );
-	USHORT nID;
+	rStream.SeekRel( svstream_u32_to_Size(nDataSize) );
+	sal_uInt16 nID;
 	rStream >> nID;
 	if ( nID != SV_NUMID_SIZES )
 	{
 		DBG_ERROR("SV_NUMID_SIZES nicht gefunden");
 	}
-	ULONG nSizeTableLen;
+	sal_uInt32 nSizeTableLen;
 	rStream >> nSizeTableLen;
-	rStream.SeekRel( nSizeTableLen );
+	rStream.SeekRel( svstream_u32_to_Size(nSizeTableLen) );
 }
 
 //#pragma SEG_FUNCDEF(numhead_08)
 
 void ImpSvNumMultipleReadHeader::EndEntry()
 {
-	ULONG nPos = rStream.Tell();
+	sal_uInt32 nPos = svstream_Size_to_u32( rStream.Tell() );
 	DBG_ASSERT( nPos <= nEntryEnd, "zuviel gelesen" );
 	if ( nPos != nEntryEnd )
-		rStream.Seek( nEntryEnd );			// Rest ueberspringen
+		rStream.Seek( svstream_u32_to_Size(nEntryEnd) );	// Rest ueberspringen
 }
 
 //#pragma SEG_FUNCDEF(numhead_0d)
 
 void ImpSvNumMultipleReadHeader::StartEntry()
 {
-	ULONG nPos = rStream.Tell();
-	ULONG nEntrySize;
+	sal_uInt32 nPos = svstream_Size_to_u32( rStream.Tell() );
+	sal_uInt32 nEntrySize;
 	(*pMemStream) >> nEntrySize;
 
 	nEntryEnd = nPos + nEntrySize;
@@ -220,9 +220,9 @@ void ImpSvNumMultipleReadHeader::StartEn
 
 //#pragma SEG_FUNCDEF(numhead_09)
 
-ULONG ImpSvNumMultipleReadHeader::BytesLeft() const
+sal_uInt32 ImpSvNumMultipleReadHeader::BytesLeft() const
 {
-	ULONG nReadEnd = rStream.Tell();
+	sal_uInt32 nReadEnd = svstream_Size_to_u32( rStream.Tell() );
 	if (nReadEnd <= nEntryEnd)
 		return nEntryEnd-nReadEnd;
 
@@ -235,14 +235,14 @@ ULONG ImpSvNumMultipleReadHeader::BytesL
 //#pragma SEG_FUNCDEF(numhead_0a)
 
 ImpSvNumMultipleWriteHeader::ImpSvNumMultipleWriteHeader(SvStream& rNewStream,
-												   ULONG nDefault) :
+												   sal_uInt32 nDefault) :
 	rStream( rNewStream ),
 	aMemStream( 4096, 4096 )
 {
 	nDataSize = nDefault;
 	rStream << nDataSize;
 
-	nDataPos = rStream.Tell();
+	nDataPos = svstream_Size_to_u32( rStream.Tell() );
 	nEntryStart = nDataPos;
 }
 
@@ -250,19 +250,19 @@ ImpSvNumMultipleWriteHeader::ImpSvNumMul
 
 ImpSvNumMultipleWriteHeader::~ImpSvNumMultipleWriteHeader()
 {
-	ULONG nDataEnd = rStream.Tell();
+	sal_uInt32 nDataEnd = svstream_Size_to_u32( rStream.Tell() );
 
-	rStream << (USHORT) SV_NUMID_SIZES;
-	rStream << aMemStream.Tell();
+	rStream << (sal_uInt16) SV_NUMID_SIZES;
+	rStream << svstream_Size_to_u32( aMemStream.Tell() );
 	rStream.Write( aMemStream.GetData(), aMemStream.Tell() );
 
 	if ( nDataEnd - nDataPos != nDataSize )					// Default getroffen?
 	{
 		nDataSize = nDataEnd - nDataPos;
-		ULONG nPos = rStream.Tell();
-		rStream.Seek(nDataPos-sizeof(ULONG));
+		sal_uInt32 nPos = svstream_Size_to_u32( rStream.Tell() );
+		rStream.Seek(svstream_u32_to_Size(nDataPos-sizeof(sal_uInt32)));
 		rStream << nDataSize;								// Groesse am Anfang eintragen
-		rStream.Seek(nPos);
+		rStream.Seek(svstream_u32_to_Size(nPos));
 	}
 }
 
@@ -270,7 +270,7 @@ ImpSvNumMultipleWriteHeader::~ImpSvNumMu
 
 void ImpSvNumMultipleWriteHeader::EndEntry()
 {
-	ULONG nPos = rStream.Tell();
+	sal_uInt32 nPos = svstream_Size_to_u32( rStream.Tell() );
 	aMemStream << nPos - nEntryStart;
 }
 
@@ -278,7 +278,7 @@ void ImpSvNumMultipleWriteHeader::EndEnt
 
 void ImpSvNumMultipleWriteHeader::StartEntry()
 {
-	ULONG nPos = rStream.Tell();
+	sal_uInt32 nPos = svstream_Size_to_u32( rStream.Tell() );
 	nEntryStart = nPos;
 }
 
Index: svtools/source/sbx/sbxvals.cxx
===================================================================
RCS file: /cvs/util/svtools/source/sbx/sbxvals.cxx,v
retrieving revision 1.1.1.1
retrieving revision 1.1.1.1.650.1
diff -u -p -r1.1.1.1 -r1.1.1.1.650.1
--- svtools/source/sbx/sbxvals.cxx	18 Sep 2000 16:59:04 -0000	1.1.1.1
+++ svtools/source/sbx/sbxvals.cxx	21 Jul 2004 17:34:15 -0000	1.1.1.1.650.1
@@ -85,7 +85,7 @@ BOOL BigInt::INT64( SbxINT64 *p ) const
 			p->CHS();
 	}
 	else
-		p->Set( nVal );
+		p->Set( (sal_Int32)nVal );
 
 	return TRUE;
 }
Index: svtools/source/sbx/sbxvalue.cxx
===================================================================
RCS file: /cvs/util/svtools/source/sbx/sbxvalue.cxx,v
retrieving revision 1.10
retrieving revision 1.9.8.2
diff -u -p -r1.10 -r1.9.8.2
--- svtools/source/sbx/sbxvalue.cxx	9 Sep 2004 07:42:07 -0000	1.10
+++ svtools/source/sbx/sbxvalue.cxx	19 Oct 2004 16:42:30 -0000	1.9.8.2
@@ -284,6 +284,7 @@ SbxValue::SbxValue( SbxDataType t, void*
 		case SbxULONG64:	n |= SbxBYREF; aData.pULong64 = (SbxUINT64*) p; break;
 		case SbxLONG64:
 		case SbxCURRENCY:	n |= SbxBYREF; aData.pLong64 = (SbxINT64*) p; break;
+		case SbxINT:
 		case SbxLONG:		n |= SbxBYREF; aData.pLong = (INT32*) p; break;
 		case SbxSINGLE:		n |= SbxBYREF; aData.pSingle = (float*) p; break;
 		case SbxDATE:
@@ -295,7 +296,6 @@ SbxValue::SbxValue( SbxDataType t, void*
 		case SbxULONG:		n |= SbxBYREF; aData.pULong = (UINT32*) p; break;
 		case SbxCHAR:		n |= SbxBYREF; aData.pChar = (xub_Unicode*) p; break;
 		case SbxBYTE:		n |= SbxBYREF; aData.pByte = (BYTE*) p; break;
-		case SbxINT:		n |= SbxBYREF; aData.pInt = (int*) p; break;
 		case SbxOBJECT:
 			aData.pObj = (SbxBase*) p;
 			if( p )
@@ -559,6 +559,7 @@ BOOL SbxValue::Get( SbxValues& rRes ) co
 				case SbxNULL:	 break;
 				case SbxVARIANT: rRes = p->aData; break;
 				case SbxINTEGER: rRes.nInteger = ImpGetInteger( &p->aData ); break;
+				case SbxINT:
 				case SbxLONG:	 rRes.nLong = ImpGetLong( &p->aData ); break;
 				case SbxSINGLE:	 rRes.nSingle = ImpGetSingle( &p->aData ); break;
 				case SbxDOUBLE:	 rRes.nDouble = ImpGetDouble( &p->aData ); break;
@@ -569,26 +570,13 @@ BOOL SbxValue::Get( SbxValues& rRes ) co
 				case SbxCHAR:	 rRes.nChar = ImpGetChar( &p->aData ); break;
 				case SbxBYTE:	 rRes.nByte = ImpGetByte( &p->aData ); break;
 				case SbxUSHORT:	 rRes.nUShort = ImpGetUShort( &p->aData ); break;
+				case SbxUINT:
 				case SbxULONG:	 rRes.nULong = ImpGetULong( &p->aData ); break;
 				case SbxLPSTR:
 				case SbxSTRING:	 p->aPic = ImpGetString( &p->aData );
 								 rRes.pString = &p->aPic; break;
 				case SbxCoreSTRING:	p->aPic = ImpGetCoreString( &p->aData );
 									rRes.pString = &p->aPic; break;
-				case SbxINT:
-#if SAL_TYPES_SIZEOFINT == 2
-					rRes.nInt = (int) ImpGetInteger( &p->aData );
-#else
-					rRes.nInt = (int) ImpGetLong( &p->aData );
-#endif
-					break;
-				case SbxUINT:
-#if SAL_TYPES_SIZEOFINT == 2
-					rRes.nUInt = (int) ImpGetUShort( &p->aData );
-#else
-					rRes.nUInt = (int) ImpGetULong( &p->aData );
-#endif
-					break;
 				case SbxOBJECT:
 					if( p->aData.eType == SbxOBJECT )
 						rRes.pObj = p->aData.pObj;
@@ -690,7 +678,6 @@ GET( GetDate,     SbxDATE,       double,
 GET( GetData,     SbxDATAOBJECT, void*,            pData )
 GET( GetDouble,   SbxDOUBLE,     double,           nDouble )
 GET( GetErr,      SbxERROR,      UINT16,           nUShort )
-GET( GetInt,      SbxINT,        int,              nInt )
 GET( GetInteger,  SbxINTEGER,    INT16,            nInteger )
 GET( GetLong,     SbxLONG,       INT32,            nLong )
 GET( GetLong64,   SbxLONG64,     SbxINT64,         nLong64 )
@@ -734,6 +721,7 @@ BOOL SbxValue::Put( const SbxValues& rVa
 				case SbxVOID:
 				case SbxNULL:		break;
 				case SbxINTEGER:	ImpPutInteger( &p->aData, rVal.nInteger ); break;
+				case SbxINT:
 				case SbxLONG:		ImpPutLong( &p->aData, rVal.nLong ); break;
 				case SbxSINGLE:		ImpPutSingle( &p->aData, rVal.nSingle ); break;
 				case SbxDOUBLE:		ImpPutDouble( &p->aData, rVal.nDouble ); break;
@@ -744,23 +732,10 @@ BOOL SbxValue::Put( const SbxValues& rVa
 				case SbxCHAR:		ImpPutChar( &p->aData, rVal.nChar ); break;
 				case SbxBYTE:		ImpPutByte( &p->aData, rVal.nByte ); break;
 				case SbxUSHORT:		ImpPutUShort( &p->aData, rVal.nUShort ); break;
+				case SbxUINT:
 				case SbxULONG:		ImpPutULong( &p->aData, rVal.nULong ); break;
 				case SbxLPSTR:
 				case SbxSTRING:		ImpPutString( &p->aData, rVal.pString ); break;
-				case SbxINT:
-#if SAL_TYPES_SIZEOFINT == 2
-					ImpPutInteger( &p->aData, (INT16) rVal.nInt );
-#else
-					ImpPutLong( &p->aData, (INT32) rVal.nInt );
-#endif
-					break;
-				case SbxUINT:
-#if SAL_TYPES_SIZEOFINT == 2
-					ImpPutUShort( &p->aData, (UINT16) rVal.nUInt );
-#else
-					ImpPutULong( &p->aData, (UINT32) rVal.nUInt );
-#endif
-					break;
 				case SbxOBJECT:
 					if( !p->IsFixed() || p->aData.eType == SbxOBJECT )
 					{
@@ -955,7 +930,6 @@ PUT( PutDate,     SbxDATE,       double,
 PUT( PutData,     SbxDATAOBJECT, void*,            pData )
 PUT( PutDouble,   SbxDOUBLE,     double,           nDouble )
 PUT( PutErr,      SbxERROR,      UINT16,           nUShort )
-PUT( PutInt,      SbxINT,        int,              nInt )
 PUT( PutInteger,  SbxINTEGER,    INT16,            nInteger )
 PUT( PutLong,     SbxLONG,       INT32,            nLong )
 PUT( PutLong64,   SbxLONG64,     const SbxINT64&,  nLong64 )
@@ -1598,6 +1572,7 @@ BOOL SbxValue::LoadData( SvStream& r, US
 		case SbxBOOL:
 		case SbxINTEGER:
 			r >> aData.nInteger; break;
+		case SbxINT:
 		case SbxLONG:
 			r >> aData.nLong; break;
 		case SbxSINGLE:
@@ -1680,30 +1655,9 @@ BOOL SbxValue::LoadData( SvStream& r, US
 		}
 		case SbxBYTE:
 			r >> aData.nByte; break;
+		case SbxUINT:
 		case SbxULONG:
 			r >> aData.nULong; break;
-		case SbxINT:
-		{
-			BYTE n;
-			r >> n;
-			// Passt der Int auf diesem System?
-			if( n > SAL_TYPES_SIZEOFINT )
-				r >> aData.nLong, aData.eType = SbxLONG;
-			else
-				r >> aData.nInt;
-			break;
-		}
-		case SbxUINT:
-		{
-			BYTE n;
-			r >> n;
-			// Passt der UInt auf diesem System?
-			if( n > SAL_TYPES_SIZEOFINT )
-				r >> aData.nULong, aData.eType = SbxULONG;
-			else
-				r >> (sal_uInt32&)aData.nUInt;
-			break;
-		}
 		case SbxEMPTY:
 		case SbxNULL:
 		case SbxVOID:
@@ -1734,6 +1688,7 @@ BOOL SbxValue::StoreData( SvStream& r ) 
 		case SbxBOOL:
 		case SbxINTEGER:
 			r << aData.nInteger; break;
+		case SbxINT:
 		case SbxLONG:
 			r << aData.nLong; break;
 		case SbxDATE:
@@ -1794,20 +1749,9 @@ BOOL SbxValue::StoreData( SvStream& r ) 
 		}
 		case SbxBYTE:
 			r << aData.nByte; break;
+		case SbxUINT:
 		case SbxULONG:
 			r << aData.nULong; break;
-		case SbxINT:
-		{
-			BYTE n = SAL_TYPES_SIZEOFINT;
-			r << n << (sal_Int32)aData.nInt;
-			break;
-		}
-		case SbxUINT:
-		{
-			BYTE n = SAL_TYPES_SIZEOFINT;
-			r << n << (sal_uInt32)aData.nUInt;
-			break;
-		}
 		case SbxEMPTY:
 		case SbxNULL:
 		case SbxVOID:
#Index: svtools/source/svhtml/parhtml.cxx
#===================================================================
#RCS file: /cvs/util/svtools/source/svhtml/parhtml.cxx,v
#retrieving revision 1.6
#retrieving revision 1.6.16.1
#diff -u -p -r1.6 -r1.6.16.1
#--- svtools/source/svhtml/parhtml.cxx	16 Jun 2004 10:30:12 -0000	1.6
#+++ svtools/source/svhtml/parhtml.cxx	21 Jul 2004 17:34:16 -0000	1.6.16.1
#@@ -261,7 +261,7 @@ void HTMLOption::GetNumbers( SvULongs &r
# 				nPos++;
# 
# 			if( nPos==aValue.Len() )
#-				rLongs.Insert( 0UL, rLongs.Count() );
#+				rLongs.Insert( 0U, rLongs.Count() );
# 			else
# 			{
# 				sal_uInt32 nEnd = aValue.Search( (sal_Unicode)',', nPos );
Index: svtools/source/uno/imgprod.cxx
===================================================================
RCS file: /cvs/util/svtools/source/uno/imgprod.cxx,v
retrieving revision 1.9
retrieving revision 1.8.16.2
diff -u -p -r1.9 -r1.8.16.2
--- svtools/source/uno/imgprod.cxx	23 Jul 2004 10:48:03 -0000	1.9
+++ svtools/source/uno/imgprod.cxx	19 Oct 2004 16:45:30 -0000	1.8.16.2
@@ -148,8 +148,11 @@ ErrCode ImgProdLockBytes::ReadAt( sal_uI
 {
 	if( GetStream() )
 	{
+		sal_Size	temp_read;
 		( (SvStream*) GetStream() )->ResetError();
-		const ErrCode nErr = SvLockBytes::ReadAt( nPos, pBuffer, nCount, pRead );
+		const ErrCode nErr = SvLockBytes::ReadAt( svstream_u32_to_Size(nPos), pBuffer,
+							svstream_u32_to_Size(nCount), &temp_read );
+		*pRead = svstream_Size_to_u32( temp_read );
 		( (SvStream*) GetStream() )->ResetError();
 		return nErr;
 	}
@@ -178,7 +181,15 @@ ErrCode ImgProdLockBytes::ReadAt( sal_uI
 ErrCode ImgProdLockBytes::WriteAt( sal_uInt32 nPos, const void* pBuffer, sal_uInt32 nCount, sal_uInt32* pWritten )
 {
 	if( GetStream() )
-		return SvLockBytes::WriteAt( nPos, pBuffer, nCount, pWritten );
+	{
+		ErrCode	err;
+		sal_Size	temp_written;
+
+		err = SvLockBytes::WriteAt( svstream_u32_to_Size(nPos), pBuffer,
+						svstream_u32_to_Size(nCount), &temp_written );
+		*pWritten = svstream_Size_to_u32( temp_written );
+		return err;
+	}
 	else
 	{
 		DBG_ASSERT( xStmRef.is(), "ImgProdLockBytes::WriteAt: xInputStream has no reference..." );
Index: svtools/source/uno/unoiface.cxx
===================================================================
RCS file: /cvs/util/svtools/source/uno/unoiface.cxx,v
retrieving revision 1.14
retrieving revision 1.12.48.2
diff -u -p -r1.14 -r1.12.48.2
--- svtools/source/uno/unoiface.cxx	5 Jul 2004 16:17:19 -0000	1.14
+++ svtools/source/uno/unoiface.cxx	19 Oct 2004 16:44:51 -0000	1.12.48.2
@@ -1750,7 +1750,7 @@ void SVTXRoadmap::setColorModel( sal_Int
 {
 	::vos::OGuard aGuard( GetMutex() );
 
-	maImageConsumer.SetColorModel( BitCount, RGBAPal.getLength(), (const unsigned long*) RGBAPal.getConstArray(), RedMask, GreenMask, BlueMask, AlphaMask );
+	maImageConsumer.SetColorModel( BitCount, RGBAPal.getLength(), (const sal_uInt32*) RGBAPal.getConstArray(), RedMask, GreenMask, BlueMask, AlphaMask );
 }
 
 
@@ -1766,7 +1766,7 @@ void SVTXRoadmap::setPixelsByLongs( sal_
 {
 	::vos::OGuard aGuard( GetMutex() );
 
-	maImageConsumer.SetPixelsByLongs( X, Y, Width, Height, (const unsigned long*) ProducerData.getConstArray(), Offset, Scansize );
+	maImageConsumer.SetPixelsByLongs( X, Y, Width, Height, (const sal_uInt32*) ProducerData.getConstArray(), Offset, Scansize );
 	ImplUpdateImage( sal_True );
 }
 
Index: svtools/workben/makefile.mk
===================================================================
RCS file: /cvs/util/svtools/workben/makefile.mk,v
retrieving revision 1.5
retrieving revision 1.4.606.2
diff -u -p -r1.5 -r1.4.606.2
--- svtools/workben/makefile.mk	30 Jul 2004 15:20:13 -0000	1.5
+++ svtools/workben/makefile.mk	19 Oct 2004 17:17:32 -0000	1.4.606.2
Index: svtools/workben/svdem.cxx
===================================================================
RCS file: /cvs/util/svtools/workben/svdem.cxx,v
retrieving revision 1.5
retrieving revision 1.4.208.2
diff -u -p -r1.5 -r1.4.208.2
--- svtools/workben/svdem.cxx	30 Jul 2004 15:20:26 -0000	1.5
+++ svtools/workben/svdem.cxx	19 Oct 2004 17:17:39 -0000	1.4.208.2
