--- sw/source/filter/w4w/w4wpar1.cxx	16 Feb 2005 17:47:34 -0000	1.27
+++ sw/source/filter/w4w/w4wpar1.cxx	10 Mar 2005 01:59:38 -0000	1.26.8.2
@@ -1951,7 +1951,7 @@ void SwW4WParser::Read_DateTime()			// (
 		// tell the Formatter about the new entry
 		UINT16 nCheckPos = 0;
 		INT16  nType = NUMBERFORMAT_DEFINED;
-		ULONG  nKey;
+		sal_uInt32 nKey;
 
 		pFormatter->PutandConvertEntry( *pFirst, nCheckPos, nType, nKey,
 										LANGUAGE_GERMAN,
--- sw/source/filter/ww8/writerwordglue.cxx	16 Nov 2004 12:53:22 -0000	1.13
+++ sw/source/filter/ww8/writerwordglue.cxx	2 Mar 2005 15:55:09 -0000	1.13.106.1
@@ -931,8 +931,8 @@ namespace sw
         {
             // tell the Formatter about the new entry
             UINT16 nCheckPos = 0;
-            INT16  nType = NUMBERFORMAT_DEFINED;
-            ULONG  nKey = 0;
+            short  nType = NUMBERFORMAT_DEFINED;
+            sal_uInt32  nKey = 0;
 
             SwapQuotesInField(rParams);
 
--- sw/inc/fldbas.hxx	21 Jan 2005 16:54:49 -0000	1.10.76.1
+++ sw/inc/fldbas.hxx	21 Jan 2005 16:54:49 -0000	1.10.76.1
@@ -295,11 +295,11 @@
 	Beschreibung: Allgemeine Tools
  --------------------------------------------------------------------*/
 
-String	GetResult(double nVal, ULONG nNumFmt, USHORT nLang = LANGUAGE_SYSTEM);
+String	GetResult(double nVal, sal_uInt32 nNumFmt, USHORT nLang = LANGUAGE_SYSTEM);
 void    SetErrorStr(const String& rStr);
 //String	ExpandDate(const Date& rDate, ULONG nFmt, USHORT nLang);
 //String 	ExpandTime(const Time& rTime, ULONG nFmt, USHORT nLang);
-String  FormatNumber(USHORT nNum, ULONG nFormat);
+String  FormatNumber(USHORT nNum, sal_uInt32 nFormat);
 
 /*--------------------------------------------------------------------
 	Beschreibung: 	Instanzen von SwFields und Abgeleiteten kommen 0-n mal vor.
@@ -360,14 +360,14 @@
 {
 	USHORT				nLang;	// Immer ueber SetLanguage aendern!
     BOOL                bIsAutomaticLanguage;
-	ULONG 				nFormat;
+	sal_uInt32			nFormat;
 
 	SwFieldType* 		pType;
 
 protected:
-	void				SetFormat(ULONG nSet) {nFormat = nSet;}
+	void				SetFormat(sal_uInt32 nSet) {nFormat = nSet;}
 
-	SwField(SwFieldType* pTyp, ULONG nFmt = 0, USHORT nLang = LANGUAGE_SYSTEM);
+	SwField(SwFieldType* pTyp, sal_uInt32 nFmt = 0, USHORT nLang = LANGUAGE_SYSTEM);
 
 public:
 	virtual 			~SwField();
@@ -403,13 +403,13 @@
 	virtual void		SetLanguage(USHORT nLng);
 
 	// Parameter fuer Dialog und BASIC erfragen
-	inline ULONG		GetFormat() const;
+	inline sal_uInt32	GetFormat() const;
 	virtual const String& GetPar1() const;
 	virtual String		GetPar2() 	const;
 
 	virtual String		GetFormula() const;
 
-	virtual void  		ChangeFormat(ULONG n);
+	virtual void  		ChangeFormat(sal_uInt32 n);
 	virtual void		SetPar1(const String& rStr);
 	virtual void		SetPar2(const String& rStr);
 
@@ -429,7 +429,7 @@
 inline SwFieldType*	SwField::GetTyp() const
 	{ return pType; 	}
 
-inline ULONG SwField::GetFormat() const
+inline sal_uInt32 SwField::GetFormat() const
 	{ return nFormat; 	}
 
 inline USHORT SwField::GetLanguage() const
@@ -456,9 +456,9 @@
 	inline BOOL		UseFormat() const					{ return bUseFormat; }
 	inline void		EnableFormat(BOOL bFormat = TRUE)	{ bUseFormat = bFormat; }
 
-	String			ExpandValue(const double& rVal, ULONG nFmt, USHORT nLng=0) const;
+	String			ExpandValue(const double& rVal, sal_uInt32 nFmt, USHORT nLng=0) const;
 	void			DoubleToString(String &rValue, const double &rVal, LanguageType eLng) const;
-	void			DoubleToString(String &rValue, const double &rVal, ULONG nFmt) const;
+	void			DoubleToString(String &rValue, const double &rVal, sal_uInt32 nFmt) const;
 };
 
 class SW_DLLPUBLIC SwValueField : public SwField
@@ -467,7 +467,7 @@
 //	String sExpand;
 
 protected:
-	SwValueField( SwValueFieldType* pFldType, ULONG nFmt = 0, USHORT nLang = LANGUAGE_SYSTEM, const double fVal = 0.0 );
+	SwValueField( SwValueFieldType* pFldType, sal_uInt32 nFmt = 0, USHORT nLang = LANGUAGE_SYSTEM, const double fVal = 0.0 );
 	SwValueField( const SwValueField& rFld );
 
 public:
@@ -483,10 +483,10 @@
 	virtual double			GetValue() const;
 	virtual void 			SetValue( const double& rVal );
 
-	inline String	ExpandValue(const double& rVal, ULONG nFmt, USHORT nLng=0) const
+	inline String	ExpandValue(const double& rVal, sal_uInt32 nFmt, USHORT nLng=0) const
 		{ return ((SwValueFieldType*)GetTyp())->ExpandValue(rVal, nFmt, nLng); }
 
-	static ULONG			GetSystemFormat(SvNumberFormatter* pFormatter, ULONG nFmt);
+	static sal_uInt32		GetSystemFormat(SvNumberFormatter* pFormatter, sal_uInt32 nFmt);
 };
 
 class SwFormulaField : public SwValueField
@@ -494,7 +494,7 @@
 	String sFormula;
 
 protected:
-	SwFormulaField( SwValueFieldType* pFldType, ULONG nFmt = 0, const double fVal = 0.0 );
+	SwFormulaField( SwValueFieldType* pFldType, sal_uInt32 nFmt = 0, const double fVal = 0.0 );
 	SwFormulaField( const SwFormulaField& rFld );
 
 public:
--- sw/source/core/doc/swtable.cxx	21 Jan 2005 16:57:20 -0000	1.15.104.1
+++ sw/source/core/doc/swtable.cxx	21 Jan 2005 16:57:20 -0000	1.15.104.1
@@ -2027,7 +2027,7 @@
 									if( NUMBERFORMAT_PERCENT ==
 										pNumFmtr->GetType( nNewFmt ))
 									{
-										ULONG nTmpFmt = 0;
+										sal_uInt32 nTmpFmt = 0;
 										if( pNumFmtr->IsNumberFormat(
 													aTxt, nTmpFmt, fVal ))
 										{
@@ -2097,7 +2097,7 @@
 	SwFrmFmt::Modify( pOld, pNew );
 }
 
-BOOL SwTableBox::HasNumCntnt( double& rNum, ULONG& rFmtIndex,
+BOOL SwTableBox::HasNumCntnt( double& rNum, sal_uInt32& rFmtIndex,
 							BOOL& rIsEmptyTxtNd ) const
 {
 	BOOL bRet = FALSE;
@@ -2120,7 +2120,7 @@
 			if( !rIsEmptyTxtNd &&
 				NUMBERFORMAT_PERCENT == pNumFmtr->GetType( rFmtIndex ))
 			{
-				ULONG nTmpFmt = 0;
+				sal_uInt32 nTmpFmt = 0;
 				if( pNumFmtr->IsNumberFormat( aTxt, nTmpFmt, rNum ) &&
 					NUMBERFORMAT_NUMBER == pNumFmtr->GetType( nTmpFmt ))
 					aTxt += '%';
--- sw/source/core/fields/cellfml.cxx	5 Jan 2005 15:59:52 -0000	1.6
+++ sw/source/core/fields/cellfml.cxx	21 Jan 2005 16:57:50 -0000	1.6.34.1
@@ -287,7 +287,7 @@ double SwTableBox::GetValue( SwTblCalcPa
 
 			double aNum;
 			String sTxt( rTxt.Copy( nSttPos ) );
-			ULONG nFmtIndex = GetFrmFmt()->GetTblBoxNumFmt().GetValue();
+			sal_uInt32 nFmtIndex = GetFrmFmt()->GetTblBoxNumFmt().GetValue();
 
 			SvNumberFormatter* pNumFmtr = pDoc->GetNumberFormatter();
 
@@ -297,7 +297,7 @@ double SwTableBox::GetValue( SwTblCalcPa
 			else if( sTxt.Len() &&
 					NUMBERFORMAT_PERCENT == pNumFmtr->GetType( nFmtIndex ))
 			{
-				ULONG nTmpFmt = 0;
+				sal_uInt32 nTmpFmt = 0;
 				if( pNumFmtr->IsNumberFormat( sTxt, nTmpFmt, aNum ) &&
 					NUMBERFORMAT_NUMBER == pNumFmtr->GetType( nTmpFmt ))
 					sTxt += '%';
--- sw/source/core/fields/fldbas.cxx	21 Jan 2005 16:58:05 -0000	1.17.76.1
+++ sw/source/core/fields/fldbas.cxx	21 Jan 2005 16:58:05 -0000	1.17.76.1
@@ -273,7 +273,7 @@
 					Felder sind n-mal vorhanden, Feldtypen nur einmal
  --------------------------------------------------------------------*/
 
-SwField::SwField(SwFieldType* pTyp, ULONG nFmt, USHORT nLng) :
+SwField::SwField(SwFieldType* pTyp, sal_uInt32 nFmt, USHORT nLng) :
 	nFormat(nFmt),
     nLang(nLng),
     bIsAutomaticLanguage(TRUE)
@@ -484,7 +484,7 @@
 	nLang = nLng;
 }
 
-void SwField::ChangeFormat(ULONG n)
+void SwField::ChangeFormat(sal_uInt32 n)
 {
 	nFormat = n;
 }
@@ -523,7 +523,7 @@
 	Beschreibung: Numerierung expandieren
  --------------------------------------------------------------------*/
 
-String FormatNumber(USHORT nNum, ULONG nFormat)
+String FormatNumber(USHORT nNum, sal_uInt32 nFormat)
 {
     if(SVX_NUM_PAGEDESC == nFormat)
         return  String::CreateFromInt32( nNum );
@@ -558,7 +558,7 @@
  --------------------------------------------------------------------*/
 
 String SwValueFieldType::ExpandValue( const double& rVal,
-										ULONG nFmt, USHORT nLng) const
+										sal_uInt32 nFmt, USHORT nLng) const
 {
 	if (rVal >= DBL_MAX)		// FehlerString fuer Calculator
 		return ViewShell::GetShellRes()->aCalc_Error;
@@ -579,7 +579,7 @@
 
 		if (pEntry && nLng != pEntry->GetLanguage())
 		{
-			ULONG nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(nFmt,
+			sal_uInt32 nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(nFmt,
 													(LanguageType)nFmtLng);
 
 			if (nNewFormat == nFmt)
@@ -613,7 +613,7 @@
  --------------------------------------------------------------------*/
 
 void SwValueFieldType::DoubleToString( String &rValue, const double &rVal,
-										ULONG nFmt) const
+										sal_uInt32 nFmt) const
 {
 	SvNumberFormatter* pFormatter = pDoc->GetNumberFormatter();
 	const SvNumberformat* pEntry = pFormatter->GetEntry(nFmt);
@@ -644,7 +644,7 @@
 	Beschreibung: CTOR SwValueField
  --------------------------------------------------------------------*/
 
-SwValueField::SwValueField( SwValueFieldType* pFldType, ULONG nFmt,
+SwValueField::SwValueField( SwValueFieldType* pFldType, sal_uInt32 nFmt,
 							USHORT nLang, const double fVal )
 	: SwField(pFldType, nFmt, nLang),
 	fValue(fVal)
@@ -697,14 +697,14 @@
 	Beschreibung: Format in Office-Sprache ermitteln
  --------------------------------------------------------------------*/
 
-ULONG SwValueField::GetSystemFormat(SvNumberFormatter* pFormatter, ULONG nFmt)
+sal_uInt32 SwValueField::GetSystemFormat(SvNumberFormatter* pFormatter, sal_uInt32 nFmt)
 {
 	const SvNumberformat* pEntry = pFormatter->GetEntry(nFmt);
 	USHORT nLng = SvxLocaleToLanguage( GetAppLocaleData().getLocale() );
 
 	if (pEntry && nLng != pEntry->GetLanguage())
 	{
-		ULONG nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(nFmt,
+		sal_uInt32 nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(nFmt,
 														(LanguageType)nLng);
 
 		if (nNewFormat == nFmt)
@@ -715,7 +715,7 @@
 
 			String sFmt(pEntry->GetFormatstring());
 
-			ULONG nFormat = nFmt;
+			sal_uInt32 nFormat = nFmt;
 			pFormatter->PutandConvertEntry(sFmt, nDummy, nType,
 								nFormat, pEntry->GetLanguage(), nLng);
 			nFmt = nFormat;
@@ -735,7 +735,7 @@
 {
     if( IsAutomaticLanguage() && 
             ((SwValueFieldType *)GetTyp())->UseFormat() &&
-		GetFormat() != ULONG_MAX )
+		GetFormat() != SAL_MAX_UINT32 )
 	{
 		// wegen Bug #60010
 		SvNumberFormatter* pFormatter = GetDoc()->GetNumberFormatter();
@@ -750,7 +750,7 @@
 
 			if( pEntry && nFmtLng != pEntry->GetLanguage() )
 			{
-				ULONG nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(
+				sal_uInt32 nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(
 										GetFormat(), (LanguageType)nFmtLng );
 
 				if( nNewFormat == GetFormat() )
@@ -791,7 +791,7 @@
 	Beschreibung: SwFormulaField
  --------------------------------------------------------------------*/
 
-SwFormulaField::SwFormulaField( SwValueFieldType* pFldType, ULONG nFmt, const double fVal)
+SwFormulaField::SwFormulaField( SwValueFieldType* pFldType, sal_uInt32 nFmt, const double fVal)
 	: SwValueField(pFldType, nFmt, LANGUAGE_SYSTEM, fVal)
 {
 }
@@ -821,7 +821,7 @@
 
 	ULONG nFmt(GetFormat());
 
-	if( nFmt && ULONG_MAX != nFmt )
+	if( nFmt && SAL_MAX_UINT32 != nFmt )
 	{
 		xub_StrLen nPos = 0;
 		double fValue;
@@ -836,9 +836,9 @@
 
 void SwFormulaField::SetExpandedFormula( const String& rStr )
 {
-	ULONG nFmt(GetFormat());
+	sal_uInt32 nFmt(GetFormat());
 
-	if (nFmt && nFmt != ULONG_MAX && ((SwValueFieldType *)GetTyp())->UseFormat())
+	if (nFmt && nFmt != SAL_MAX_UINT32 && ((SwValueFieldType *)GetTyp())->UseFormat())
 	{
 		double fValue;
 
@@ -862,9 +862,9 @@
 
 String SwFormulaField::GetExpandedFormula() const
 {
-	ULONG nFmt(GetFormat());
+	sal_uInt32 nFmt(GetFormat());
 
-	if (nFmt && nFmt != ULONG_MAX && ((SwValueFieldType *)GetTyp())->UseFormat())
+	if (nFmt && nFmt != SAL_MAX_UINT32 && ((SwValueFieldType *)GetTyp())->UseFormat())
 	{
 		String sFormattedValue;
 		Color* pCol = 0;
--- sw/source/filter/html/htmlfld.cxx	21 Jan 2005 17:00:10 -0000	1.7.262.1
+++ sw/source/filter/html/htmlfld.cxx	21 Jan 2005 17:00:10 -0000	1.7.262.1
@@ -429,7 +429,7 @@
 			USHORT nSub = 0;
 
 			SvNumberFormatter *pFormatter =	pDoc->GetNumberFormatter();
-			ULONG nNumFmt;
+			sal_uInt32 nNumFmt;
 			LanguageType eLang;
 			double dValue = GetTableDataOptionsValNum(
 								nNumFmt, eLang, aNumValue, aNumFmt,
@@ -500,7 +500,7 @@
 					nSub |= nExtSub;
 				}
 
-				ULONG nNumFmt = 0;
+				sal_uInt32 nNumFmt = 0;
 				double dValue = 0;
 				if( bHasNumFmt && (DI_SUB_DATE==nExtSub || DI_SUB_TIME==nExtSub) )
 				{
--- sw/source/ui/shells/tabsh.cxx	9 Nov 2004 16:24:06 -0000	1.33
+++ sw/source/ui/shells/tabsh.cxx	21 Jan 2005 17:06:12 -0000	1.33.124.1
@@ -1662,7 +1662,7 @@ void SwTableShell::ExecNumberFormat(SfxR
 	//	Sprache immer von Cursorposition besorgen
 	LanguageType eLang = rSh.GetCurLang();
 	SvNumberFormatter* pFormatter = rSh.GetNumberFormatter();
-	ULONG nNumberFormat = NUMBERFORMAT_ENTRY_NOT_FOUND;
+	sal_uInt32 nNumberFormat = NUMBERFORMAT_ENTRY_NOT_FOUND;
 	USHORT nFmtType = 0, nOffset = 0;
 
 	switch ( nSlot )
--- sw/inc/chpfld.hxx	9 Dec 2003 11:36:02 -0000	1.3
+++ sw/inc/chpfld.hxx	21 Jan 2005 16:55:08 -0000	1.3.256.1
@@ -105,7 +105,7 @@ class SwChapterField : public SwField
 	BYTE nLevel;
 	String sTitle, sNumber, sPre, sPost;
 public:
-	SwChapterField(SwChapterFieldType*, ULONG nFmt = 0);
+	SwChapterField(SwChapterFieldType*, sal_uInt32 nFmt = 0);
 
 	void ChangeExpansion(const SwFrm*, const SwTxtNode*, 
 		BOOL bSrchNum = FALSE);
--- sw/inc/docsh.hxx	11 Jan 2005 12:16:49 -0000	1.29
+++ sw/inc/docsh.hxx	21 Jan 2005 16:54:07 -0000	1.29.8.1
@@ -263,7 +263,7 @@ public:
 								const ::com::sun::star::uno::Any & rValue );
     virtual ::sfx2::SvLinkSource* DdeCreateLinkSource( const String& rItem );
 	virtual void FillClass( SvGlobalName * pClassName,
-								   ULONG * pClipFormat,
+								   sal_uInt32 * pClipFormat,
 								   String * pAppName,
 								   String * pLongUserName,
                                    String * pUserName,
--- sw/inc/docufld.hxx	8 Sep 2004 14:49:42 -0000	1.7
+++ sw/inc/docufld.hxx	21 Jan 2005 16:54:24 -0000	1.7.76.1
@@ -186,7 +186,7 @@ class SwPageNumberFieldType : public SwF
 public:
 	SwPageNumberFieldType();
 
-	String& Expand( ULONG nFmt, short nOff, const String&, String& rRet ) const;
+	String& Expand( sal_uInt32 nFmt, short nOff, const String&, String& rRet ) const;
 	void ChangeExpansion( SwDoc* pDoc, USHORT nNum, USHORT nMax,
 							BOOL bVirtPageNum, const sal_Int16* pNumFmt = 0 );
 	inline sal_Int16 GetNumFormat() const { return nNumberingType; }
@@ -205,7 +205,7 @@ class SwPageNumberField : public SwField
 
 public:
 	SwPageNumberField(SwPageNumberFieldType*, USHORT nSub = PG_RANDOM,
-					  ULONG nFmt = 0, short nOff = 0);
+					  sal_uInt32 nFmt = 0, short nOff = 0);
 
 	virtual String		Expand() const;
 	virtual SwField*	Copy() const;
@@ -244,7 +244,7 @@ class SwAuthorField : public SwField
 	String	aContent;
 
 public:
-	SwAuthorField(SwAuthorFieldType*, ULONG nFmt = 0);
+	SwAuthorField(SwAuthorFieldType*, sal_uInt32 nFmt = 0);
 
 	virtual String	 	Expand() const;
 	virtual SwField* 	Copy() const;
@@ -279,7 +279,7 @@ class SwFileNameField : public SwField
 	String aContent;
 
 public:
-	SwFileNameField(SwFileNameFieldType*, ULONG nFmt = 0);
+	SwFileNameField(SwFileNameFieldType*, sal_uInt32 nFmt = 0);
 
 	virtual String	 	Expand() const;
 	virtual SwField* 	Copy() const;
@@ -312,7 +312,7 @@ public:
 class SwTemplNameField : public SwField
 {
 public:
-	SwTemplNameField(SwTemplNameFieldType*, ULONG nFmt = 0);
+	SwTemplNameField(SwTemplNameFieldType*, sal_uInt32 nFmt = 0);
 
 	virtual String	 	Expand() const;
 	virtual SwField* 	Copy() const;
@@ -332,7 +332,7 @@ class SwDocStatFieldType : public SwFiel
 
 public:
 	SwDocStatFieldType(SwDoc*);
-	String 					Expand(USHORT nSubType, ULONG nFmt) const;
+	String 					Expand(USHORT nSubType, sal_uInt32 nFmt) const;
 	virtual SwFieldType*    Copy() const;
 
 	inline sal_Int16 		GetNumFormat() const 		{ return nNumberingType; }
@@ -349,7 +349,7 @@ class SwDocStatField : public SwField
 
 public:
 	SwDocStatField( SwDocStatFieldType*,
-					USHORT nSubType = 0, ULONG nFmt = 0);
+					USHORT nSubType = 0, sal_uInt32 nFmt = 0);
 
 	void ChangeExpansion( const SwFrm* pFrm );
 
@@ -585,7 +585,7 @@ class SwDocInfoFieldType : public SwValu
 public:
 	SwDocInfoFieldType(SwDoc* pDc);
 
-	String					Expand(USHORT nSubType, ULONG nFormat, USHORT nLang) const;
+	String					Expand(USHORT nSubType, sal_uInt32 nFormat, USHORT nLang) const;
 	virtual SwFieldType*    Copy() const;
 };
 
@@ -595,7 +595,7 @@ class SwDocInfoField : public SwValueFie
 	String  aContent;
 
 public:
-	SwDocInfoField(SwDocInfoFieldType*, USHORT nSub, ULONG nFmt=0);
+	SwDocInfoField(SwDocInfoFieldType*, USHORT nSub, sal_uInt32 nFmt=0);
 
 	virtual void        	SetSubType(USHORT);
 	virtual USHORT	 		GetSubType() const;
@@ -623,7 +623,7 @@ public:
 	inline const String& 	GetData() const					{ return aData; }
 	inline void			 	SetData(const String& rStr)		{ aData = rStr; }
 
-	String					Expand(USHORT nSubType, ULONG nFormat) const;
+	String					Expand(USHORT nSubType, sal_uInt32 nFormat) const;
 	virtual SwFieldType*    Copy() const;
 };
 
@@ -633,7 +633,7 @@ class SwExtUserField : public SwField
 	USHORT 	nType;
 
 public:
-	SwExtUserField(SwExtUserFieldType*, USHORT nSub, ULONG nFmt=0);
+	SwExtUserField(SwExtUserFieldType*, USHORT nSub, sal_uInt32 nFmt=0);
 
 	virtual String		Expand() const;
 	virtual SwField*	Copy() const;
@@ -723,7 +723,7 @@ class SwRefPageGetField : public SwField
 {
 	String sTxt;
 public:
-	SwRefPageGetField( SwRefPageGetFieldType*, ULONG nFmt );
+	SwRefPageGetField( SwRefPageGetFieldType*, sal_uInt32 nFmt );
 
 	virtual String		Expand() const;
 	virtual SwField*	Copy() const;
@@ -759,7 +759,7 @@ class SwJumpEditField : public SwField
 {
 	String sTxt, sHelp;
 public:
-	SwJumpEditField( SwJumpEditFieldType*, ULONG nFormat,
+	SwJumpEditField( SwJumpEditFieldType*, sal_uInt32 nFormat,
 					const String& sText, const String& sHelp );
 
 	virtual String		Expand() const;
--- sw/inc/globdoc.hxx	4 Oct 2004 18:58:36 -0000	1.5
+++ sw/inc/globdoc.hxx	21 Jan 2005 16:55:02 -0000	1.5.66.1
@@ -77,7 +77,7 @@ public:
 	~SwGlobalDocShell();
 
 	virtual void	FillClass( SvGlobalName * pClassName,
-								   ULONG * pClipFormat,
+								   sal_uInt32 * pClipFormat,
 								   String * pAppName,
 								   String * pLongUserName,
                                    String * pUserName,
--- sw/inc/swtable.hxx	23 Aug 2004 08:39:39 -0000	1.8
+++ sw/inc/swtable.hxx	21 Jan 2005 16:55:15 -0000	1.8.92.1
@@ -385,7 +385,7 @@ public:
 	BOOL IsInHeadline( const SwTable* pTbl = 0 ) const;
 
 	// enthaelt die Box Inhalt, der als Nummer formatiert werden kann?
-	BOOL HasNumCntnt( double& rNum, ULONG& rFmtIndex,
+	BOOL HasNumCntnt( double& rNum, sal_uInt32& rFmtIndex,
 					BOOL& rIsEmptyTxtNd ) const;
 	ULONG IsValidNumTxtNd( BOOL bCheckAttr = TRUE ) const;
 	// teste ob der BoxInhalt mit der Nummer uebereinstimmt, wenn eine
--- sw/inc/usrfld.hxx	23 Aug 2004 08:42:14 -0000	1.3
+++ sw/inc/usrfld.hxx	21 Jan 2005 16:55:28 -0000	1.3.92.1
@@ -92,10 +92,10 @@ public:
 	virtual const String&	GetName() const;
 	virtual SwFieldType*	Copy() const;
 
-	String					Expand(ULONG nFmt, USHORT nSubType, USHORT nLng);
+	String					Expand(sal_uInt32 nFmt, USHORT nSubType, USHORT nLng);
 
-	String					GetContent( ULONG nFmt = 0 );
-		   void				SetContent( const String& rStr, ULONG nFmt = 0 );
+	String					GetContent( sal_uInt32 nFmt = 0 );
+		   void				SetContent( const String& rStr, sal_uInt32 nFmt = 0 );
 		   void				CtrlSetContent( const String& rStr );
 
 	inline BOOL 			IsValid() const;
@@ -147,7 +147,7 @@ class SwUserField : public SwValueField
 	USHORT  nSubType;
 
 public:
-	SwUserField(SwUserFieldType*, USHORT nSub = 0, ULONG nFmt = 0);
+	SwUserField(SwUserFieldType*, USHORT nSub = 0, sal_uInt32 nFmt = 0);
 
 	virtual USHORT	 		GetSubType() const;
 	virtual void	 		SetSubType(USHORT nSub);
--- sw/inc/wdocsh.hxx	4 Oct 2004 19:01:20 -0000	1.6
+++ sw/inc/wdocsh.hxx	21 Jan 2005 16:55:59 -0000	1.6.66.1
@@ -85,7 +85,7 @@ public:
 	~SwWebDocShell();
 
 	virtual void		FillClass( SvGlobalName * pClassName,
-								   ULONG * pClipFormat,
+								   sal_uInt32 * pClipFormat,
 								   String * pAppName,
                                    String * pLongUserName,
                                    String * pUserName,
--- sw/source/core/doc/tblafmt.cxx	11 Jan 2005 12:18:41 -0000	1.14
+++ sw/source/core/doc/tblafmt.cxx	21 Jan 2005 16:57:27 -0000	1.14.8.1
@@ -782,7 +782,7 @@ void SwTableAutoFmt::UpdateToSet( BYTE n
                short nType;
                BOOL bNew;
                xub_StrLen nCheckPos;
-				ULONG nKey = pNFmtr->GetIndexPuttingAndConverting( sFmt, eLng,
+				sal_uInt32 nKey = pNFmtr->GetIndexPuttingAndConverting( sFmt, eLng,
                        eSys, nType, bNew, nCheckPos);
				rSet.Put( SwTblBoxNumFormat( nKey ));
			}
--- sw/source/core/docnode/ndtbl.cxx	21 Jan 2005 10:30:20 -0000	1.26
+++ sw/source/core/docnode/ndtbl.cxx	10 Mar 2005 01:52:59 -0000	1.25.98.2
@@ -3699,7 +3699,7 @@ void SwDoc::ChkBoxNumFmt( SwTableBox& rB
 	SwUndoTblNumFmt* pUndo = 0;
 
 	BOOL bIsEmptyTxtNd, bChgd = TRUE;
-	ULONG nFmtIdx;
+	sal_uInt32 nFmtIdx;
 	double fNumber;
 	if( rBox.HasNumCntnt( fNumber, nFmtIdx, bIsEmptyTxtNd ) )
 	{
--- sw/source/core/edit/edtab.cxx	22 Oct 2004 08:12:34 -0000	1.11
+++ sw/source/core/edit/edtab.cxx	21 Jan 2005 16:57:42 -0000	1.11.180.1
@@ -440,7 +440,7 @@ BOOL SwEditShell::IsTableBoxTextFormat()
 	if( !pBox )
 		return FALSE;
 
-	ULONG nFmt;
+	sal_uInt32 nFmt;
 	const SfxPoolItem* pItem;
 	if( SFX_ITEM_SET == pBox->GetFrmFmt()->GetAttrSet().GetItemState(
 		RES_BOXATR_FORMAT, TRUE, &pItem ))
--- sw/source/core/fields/dbfld.cxx	2 Aug 2004 14:19:12 -0000	1.18
+++ sw/source/core/fields/dbfld.cxx	21 Jan 2005 16:57:56 -0000	1.18.126.1
@@ -434,7 +434,7 @@ void SwDBField::Evaluate()
     if(!pMgr || !pMgr->IsDataSourceOpen(aTmpData.sDataSource, aTmpData.sCommand, sal_True))
 		return ;
 
-	ULONG nFmt;
+	sal_uInt32 nFmt;
 
 	// Passenden Spaltennamen suchen
 	String aColNm( ((SwDBFieldType*)GetTyp())->GetColumnName() );
--- sw/source/core/fields/usrfld.cxx	17 Apr 2003 14:07:33 -0000	1.9
+++ sw/source/core/fields/usrfld.cxx	21 Jan 2005 16:58:11 -0000	1.9.574.1
@@ -321,7 +321,7 @@ double SwUserFieldType::GetValue( SwCalc
 
 String SwUserFieldType::GetContent( sal_uInt32 nFmt )
 {
-	if (nFmt && nFmt != ULONG_MAX)
+	if (nFmt && nFmt != SAL_MAX_UINT32)
 	{
 		String sFormattedValue;
 		Color* pCol = 0;
@@ -341,7 +341,7 @@ void SwUserFieldType::SetContent( const 
 	{
 		aContent = rStr;
 
-		if (nFmt && nFmt != ULONG_MAX)
+		if (nFmt && nFmt != SAL_MAX_UINT32)
 		{
 			double fValue;
 
--- sw/source/filter/excel/exctools.cxx	12 Aug 2004 12:46:36 -0000	1.6
+++ sw/source/filter/excel/exctools.cxx	21 Jan 2005 16:59:15 -0000	1.6.96.1
@@ -857,7 +857,7 @@ void XF_Buffer::SetItemSets(UINT16 nCol,
 }
 
 // --------------------------------------------- XF_Buffer::GetNumFormat -
-UINT32 XF_Buffer::GetNumFormat( UINT16 nIndex )
+sal_uInt32 XF_Buffer::GetNumFormat( UINT16 nIndex )
 	{
 //	DBG_ASSERT( nIndex < nCount ,
 //		"+XF_Buffer::GetNumFormat(): das ist zuviel des Guten!" );
--- sw/source/filter/excel/excxfbuf.hxx	12 Aug 2004 12:47:02 -0000	1.2
+++ sw/source/filter/excel/excxfbuf.hxx	21 Jan 2005 16:59:28 -0000	1.2.96.1
@@ -232,7 +232,7 @@ class XF_Buffer
 		inline void		GetItemSets( USHORT nIndex, const SfxItemSet *pTxtAttr,
 							const SfxItemSet *pBoxAttr );
 
-		ULONG			GetNumFormat( USHORT nIndex );
+		sal_uInt32		GetNumFormat( USHORT nIndex );
 		void			SetItemSets( USHORT nCol, USHORT nSR, USHORT nER,
 							USHORT nXF );
 	};
--- sw/source/filter/ww8/ww8par.hxx	11 Jan 2005 13:26:42 -0000	1.135
+++ sw/source/filter/ww8/ww8par.hxx	21 Jan 2005 17:03:22 -0000	1.128.64.4
@@ -262,7 +262,7 @@ private:
     WW8LFOInfos* pLFOInfos;// D. aus PLF LFO, sortiert genau wie im WW8 Stream
     USHORT       nUniqueList; // current number for creating unique list names
     BYTE* GrpprlHasSprm(USHORT nId, BYTE& rSprms, BYTE nLen);
-    WW8LSTInfo* GetLSTByListId(    ULONG  nIdLst     ) const;
+    WW8LSTInfo* GetLSTByListId(    sal_uInt32  nIdLst     ) const;
     //the rParaSprms returns back the original word paragraph indent
     //sprms which are attached to this numbering level
     bool ReadLVL(SwNumFmt& rNumFmt, SfxItemSet*& rpItemSet, USHORT nLevelStyle,
--- sw/source/filter/ww8/ww8par5.cxx	16 Feb 2005 17:47:49 -0000	1.87
+++ sw/source/filter/ww8/ww8par5.cxx	10 Mar 2005 02:00:53 -0000	1.86.8.2
@@ -1700,7 +1700,7 @@ eF_ResT SwWW8ImplReader::Read_F_DocInfo(
             break;
     }
 
-    ULONG nFormat = 0;
+    sal_uInt32 nFormat = 0;
 
     USHORT nLang(0);
     if (bDateTime)
@@ -1777,7 +1777,7 @@ eF_ResT SwWW8ImplReader::Read_F_DateTime
         }
     }
 
-    ULONG nFormat = 0;
+    sal_uInt32 nFormat = 0;
 
     USHORT nLang(0);
     short nDT = GetTimeDatePara(rStr, nFormat, nLang, ww::eDATE, bHijri);
--- sw/source/ui/app/docsh2.cxx	22 Feb 2005 08:23:34 -0000	1.74
+++ sw/source/ui/app/docsh2.cxx	10 Mar 2005 01:26:00 -0000	1.64.62.5
@@ -1613,7 +1613,7 @@ long SwDocShell::DdeSetData( const Strin
  --------------------------------------------------------------------*/
 
 void SwDocShell::FillClass( SvGlobalName * pClassName,
-								   ULONG * pClipFormat,
+								   sal_uInt32 * pClipFormat,
 								   String * pAppName,
 								   String * pLongUserName,
                                    String * pUserName,
--- sw/source/ui/globdoc/globdoc.cxx	4 Oct 2004 19:27:59 -0000	1.11
+++ sw/source/ui/globdoc/globdoc.cxx	21 Jan 2005 17:05:46 -0000	1.11.66.1
@@ -92,7 +92,7 @@ SwGlobalDocShell::~SwGlobalDocShell()
 }
 
 void SwGlobalDocShell::FillClass( SvGlobalName * pClassName,
-								   ULONG * pClipFormat,
+								   sal_uInt32 * pClipFormat,
 								   String * pAppName,
 								   String * pLongUserName,
                                    String * pUserName,
--- sw/source/ui/inc/dbinsdlg.hxx	7 Jun 2001 16:20:19 -0000	1.8
+++ sw/source/ui/inc/dbinsdlg.hxx	21 Jan 2005 17:05:55 -0000	1.8.768.1
@@ -123,7 +123,7 @@ struct SwInsDBColumn
 {
 	rtl::OUString sColumn, sUsrNumFmt;
 	sal_Int32 nDBNumFmt;
-	ULONG nUsrNumFmt;
+	sal_uInt32 nUsrNumFmt;
 	LanguageType eUsrNumFmtLng;
 	USHORT nCol;
 	BOOL bHasFmt : 1;
--- sw/source/ui/table/tautofmt.cxx	23 Aug 2004 09:10:40 -0000	1.15
+++ sw/source/ui/table/tautofmt.cxx	21 Jan 2005 17:06:27 -0000	1.15.92.1
@@ -799,7 +799,7 @@ MAKENUMSTR:
                short nType;
                BOOL bNew;
                xub_StrLen nCheckPos;
-				ULONG nKey = pNumFmt->GetIndexPuttingAndConverting( sFmt, eLng,
+				sal_uInt32 nKey = pNumFmt->GetIndexPuttingAndConverting( sFmt, eLng,
                        eSys, nType, bNew, nCheckPos);
				Color* pDummy;
				pNumFmt->GetOutputString( nVal, nKey, cellString, &pDummy );
--- sw/source/ui/utlui/numfmtlb.cxx	12 Aug 2004 13:13:32 -0000	1.14
+++ sw/source/ui/utlui/numfmtlb.cxx	21 Jan 2005 17:07:08 -0000	1.14.96.1
@@ -519,7 +519,7 @@ IMPL_LINK( NumFormatListBox, SelectHdl, 
 
 			if( pItem && 0 != ((SvxNumberInfoItem*)pItem)->GetDelCount() )
 			{
-				const ULONG* pDelArr = ((SvxNumberInfoItem*)pItem)->GetDelArray();
+				const sal_uInt32* pDelArr = ((SvxNumberInfoItem*)pItem)->GetDelArray();
 
 				for ( USHORT i = 0; i < ((SvxNumberInfoItem*)pItem)->GetDelCount(); i++ )
 					pFormatter->DeleteEntry( pDelArr[i] );
--- sw/source/ui/web/wdocsh.cxx	4 Oct 2004 19:35:24 -0000	1.11
+++ sw/source/ui/web/wdocsh.cxx	21 Jan 2005 17:07:18 -0000	1.11.66.1
@@ -120,7 +120,7 @@ SwWebDocShell::~SwWebDocShell()
 
 
 void SwWebDocShell::FillClass( SvGlobalName * pClassName,
-								   ULONG * pClipFormat,
+								   sal_uInt32 * pClipFormat,
 								   String * pAppName,
 								   String * pLongUserName,
                                    String * pUserName,
