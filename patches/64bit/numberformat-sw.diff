--- sw/source/filter/w4w/w4wpar1.cxx	16 Feb 2005 17:47:34 -0000	1.27
+++ sw/source/filter/w4w/w4wpar1.cxx	10 Mar 2005 01:59:38 -0000	1.26.8.2
@@ -1951,7 +1951,7 @@ void SwW4WParser::Read_DateTime()			// (
 		// tell the Formatter about the new entry
 		UINT16 nCheckPos = 0;
 		INT16  nType = NUMBERFORMAT_DEFINED;
-		ULONG  nKey;
+		sal_uInt32 nKey;
 
 		pFormatter->PutandConvertEntry( *pFirst, nCheckPos, nType, nKey,
 										LANGUAGE_GERMAN,
--- sw/source/filter/ww8/writerwordglue.cxx	16 Nov 2004 12:53:22 -0000	1.13
+++ sw/source/filter/ww8/writerwordglue.cxx	2 Mar 2005 15:55:09 -0000	1.13.106.1
@@ -931,8 +931,8 @@ namespace sw
         {
             // tell the Formatter about the new entry
             UINT16 nCheckPos = 0;
-            INT16  nType = NUMBERFORMAT_DEFINED;
-            ULONG  nKey = 0;
+            short  nType = NUMBERFORMAT_DEFINED;
+            sal_uInt32  nKey = 0;
 
             SwapQuotesInField(rParams);
 
--- sw/inc/fldbas.hxx	8 Sep 2004 14:50:07 -0000	1.10
+++ sw/inc/fldbas.hxx	21 Jan 2005 16:54:49 -0000	1.10.76.1
@@ -483,10 +483,10 @@ public:
 	virtual double			GetValue() const;
 	virtual void 			SetValue( const double& rVal );
 
-	inline String	ExpandValue(const double& rVal, ULONG nFmt, USHORT nLng=0) const
+	inline String	ExpandValue(const double& rVal, sal_uInt32 nFmt, USHORT nLng=0) const
 		{ return ((SwValueFieldType*)GetTyp())->ExpandValue(rVal, nFmt, nLng); }
 
-	static ULONG			GetSystemFormat(SvNumberFormatter* pFormatter, ULONG nFmt);
+	static sal_uInt32		GetSystemFormat(SvNumberFormatter* pFormatter, sal_uInt32 nFmt);
 };
 
 class SwFormulaField : public SwValueField
--- sw/source/core/doc/swtable.cxx	16 Nov 2004 15:39:44 -0000	1.15
+++ sw/source/core/doc/swtable.cxx	21 Jan 2005 16:57:20 -0000	1.15.104.1
@@ -2027,7 +2027,7 @@ void SwTableBoxFmt::Modify( SfxPoolItem*
 									if( NUMBERFORMAT_PERCENT ==
 										pNumFmtr->GetType( nNewFmt ))
 									{
-										ULONG nTmpFmt = 0;
+										sal_uInt32 nTmpFmt = 0;
 										if( pNumFmtr->IsNumberFormat(
 													aTxt, nTmpFmt, fVal ))
 										{
@@ -2120,7 +2120,7 @@ BOOL SwTableBox::HasNumCntnt( double& rN
 			if( !rIsEmptyTxtNd &&
 				NUMBERFORMAT_PERCENT == pNumFmtr->GetType( rFmtIndex ))
 			{
-				ULONG nTmpFmt = 0;
+				sal_uInt32 nTmpFmt = 0;
 				if( pNumFmtr->IsNumberFormat( aTxt, nTmpFmt, rNum ) &&
 					NUMBERFORMAT_NUMBER == pNumFmtr->GetType( nTmpFmt ))
 					aTxt += '%';
--- sw/source/core/fields/cellfml.cxx	5 Jan 2005 15:59:52 -0000	1.6
+++ sw/source/core/fields/cellfml.cxx	21 Jan 2005 16:57:50 -0000	1.6.34.1
@@ -287,7 +287,7 @@ double SwTableBox::GetValue( SwTblCalcPa
 
 			double aNum;
 			String sTxt( rTxt.Copy( nSttPos ) );
-			ULONG nFmtIndex = GetFrmFmt()->GetTblBoxNumFmt().GetValue();
+			sal_uInt32 nFmtIndex = GetFrmFmt()->GetTblBoxNumFmt().GetValue();
 
 			SvNumberFormatter* pNumFmtr = pDoc->GetNumberFormatter();
 
@@ -297,7 +297,7 @@ double SwTableBox::GetValue( SwTblCalcPa
 			else if( sTxt.Len() &&
 					NUMBERFORMAT_PERCENT == pNumFmtr->GetType( nFmtIndex ))
 			{
-				ULONG nTmpFmt = 0;
+				sal_uInt32 nTmpFmt = 0;
 				if( pNumFmtr->IsNumberFormat( sTxt, nTmpFmt, aNum ) &&
 					NUMBERFORMAT_NUMBER == pNumFmtr->GetType( nTmpFmt ))
 					sTxt += '%';
--- sw/source/core/fields/fldbas.cxx	8 Sep 2004 14:55:34 -0000	1.17
+++ sw/source/core/fields/fldbas.cxx	21 Jan 2005 16:58:05 -0000	1.17.76.1
@@ -613,7 +613,7 @@ String SwValueFieldType::ExpandValue( co
  --------------------------------------------------------------------*/
 
 void SwValueFieldType::DoubleToString( String &rValue, const double &rVal,
-										ULONG nFmt) const
+										sal_uInt32 nFmt) const
 {
 	SvNumberFormatter* pFormatter = pDoc->GetNumberFormatter();
 	const SvNumberformat* pEntry = pFormatter->GetEntry(nFmt);
@@ -697,14 +697,14 @@ void SwValueField::ChangeFormat(ULONG n)
 	Beschreibung: Format in Office-Sprache ermitteln
  --------------------------------------------------------------------*/
 
-ULONG SwValueField::GetSystemFormat(SvNumberFormatter* pFormatter, ULONG nFmt)
+sal_uInt32 SwValueField::GetSystemFormat(SvNumberFormatter* pFormatter, sal_uInt32 nFmt)
 {
 	const SvNumberformat* pEntry = pFormatter->GetEntry(nFmt);
 	USHORT nLng = SvxLocaleToLanguage( GetAppLocaleData().getLocale() );
 
 	if (pEntry && nLng != pEntry->GetLanguage())
 	{
-		ULONG nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(nFmt,
+		sal_uInt32 nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(nFmt,
 														(LanguageType)nLng);
 
 		if (nNewFormat == nFmt)
@@ -735,7 +735,7 @@ void SwValueField::SetLanguage( USHORT n
 {
     if( IsAutomaticLanguage() && 
             ((SwValueFieldType *)GetTyp())->UseFormat() &&
-		GetFormat() != ULONG_MAX )
+		GetFormat() != SAL_MAX_UINT32 )
 	{
 		// wegen Bug #60010
 		SvNumberFormatter* pFormatter = GetDoc()->GetNumberFormatter();
--- sw/source/filter/html/htmlfld.cxx	1 Dec 2003 17:25:47 -0000	1.7
+++ sw/source/filter/html/htmlfld.cxx	21 Jan 2005 17:00:10 -0000	1.7.262.1
@@ -429,7 +429,7 @@ void SwHTMLParser::NewField()
 			USHORT nSub = 0;
 
 			SvNumberFormatter *pFormatter =	pDoc->GetNumberFormatter();
-			ULONG nNumFmt;
+			sal_uInt32 nNumFmt;
 			LanguageType eLang;
 			double dValue = GetTableDataOptionsValNum(
 								nNumFmt, eLang, aNumValue, aNumFmt,
--- sw/source/ui/shells/tabsh.cxx	9 Nov 2004 16:24:06 -0000	1.33
+++ sw/source/ui/shells/tabsh.cxx	21 Jan 2005 17:06:12 -0000	1.33.124.1
@@ -1662,7 +1662,7 @@ void SwTableShell::ExecNumberFormat(SfxR
 	//	Sprache immer von Cursorposition besorgen
 	LanguageType eLang = rSh.GetCurLang();
 	SvNumberFormatter* pFormatter = rSh.GetNumberFormatter();
-	ULONG nNumberFormat = NUMBERFORMAT_ENTRY_NOT_FOUND;
+	sal_uInt32 nNumberFormat = NUMBERFORMAT_ENTRY_NOT_FOUND;
 	USHORT nFmtType = 0, nOffset = 0;
 
 	switch ( nSlot )
