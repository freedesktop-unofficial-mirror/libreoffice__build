Index: dbaccess/source/ui/app/AppDetailPageHelper.cxx
===================================================================
RCS file: /cvs/dba/dbaccess/source/ui/app/AppDetailPageHelper.cxx,v
retrieving revision 1.5
retrieving revision 1.4.48.2
diff -u -p -u -p -r1.5 -r1.4.48.2
--- dbaccess/source/ui/app/AppDetailPageHelper.cxx	21 Jan 2005 17:06:18 -0000	1.5
+++ dbaccess/source/ui/app/AppDetailPageHelper.cxx	9 Mar 2005 18:55:44 -0000	1.4.48.2
@@ -534,7 +534,7 @@ sal_Bool OAppDetailPageHelper::isLeaf(Sv
 	if ( nPos < CONTROL_COUNT && _pEntry )
 	{
 		DBTreeListBox& rTree = *m_pLists[nPos];
-		bLeafSelected = reinterpret_cast<sal_Int32>(_pEntry->GetUserData()) != FOLDER_TYPE;
+		bLeafSelected = reinterpret_cast<sal_IntPtr>(_pEntry->GetUserData()) != FOLDER_TYPE;
 	}
 	return bLeafSelected;
 }
@@ -549,7 +549,7 @@ sal_Bool OAppDetailPageHelper::isALeafSe
 		SvLBoxEntry* pEntry = rTree.FirstSelected( );
 		while( !bLeafSelected && pEntry )
 		{
-			bLeafSelected = reinterpret_cast<sal_Int32>(pEntry->GetUserData()) != FOLDER_TYPE;
+			bLeafSelected = reinterpret_cast<sal_IntPtr>(pEntry->GetUserData()) != FOLDER_TYPE;
 			pEntry = rTree.NextSelected(pEntry);
 		}
 	}
Index: dbaccess/source/ui/control/tabletree.cxx
===================================================================
RCS file: /cvs/dba/dbaccess/source/ui/control/tabletree.cxx,v
retrieving revision 1.26
retrieving revision 1.25.32.2
diff -u -p -u -p -r1.26 -r1.25.32.2
--- dbaccess/source/ui/control/tabletree.cxx	21 Jan 2005 17:10:27 -0000	1.26
+++ dbaccess/source/ui/control/tabletree.cxx	9 Mar 2005 19:08:49 -0000	1.25.32.2
@@ -157,7 +157,7 @@ void OTableTreeListBox::notifyHiContrast
 	SvLBoxEntry* pEntryLoop = First();
 	while (pEntryLoop)
 	{
-		sal_Int32 nType = reinterpret_cast<sal_Int32>(pEntryLoop->GetUserData());
+		sal_Int32 nType = reinterpret_cast<sal_IntPtr>(pEntryLoop->GetUserData());
 		if ( nType )
 		{
 			USHORT nCount = pEntryLoop->ItemCount();
Index: dbaccess/source/ui/dlg/generalpage.cxx
===================================================================
RCS file: /cvs/dba/dbaccess/source/ui/dlg/generalpage.cxx,v
retrieving revision 1.41
retrieving revision 1.40.32.2
diff -u -p -u -p -r1.41 -r1.40.32.2
--- dbaccess/source/ui/dlg/generalpage.cxx	21 Jan 2005 17:15:41 -0000	1.41
+++ dbaccess/source/ui/dlg/generalpage.cxx	9 Mar 2005 19:01:32 -0000	1.40.32.2
@@ -540,7 +540,7 @@ namespace dbaui
         if ( bCommitTypeSelection )
         {
 		    USHORT nEntry = m_pDatasourceType->GetSelectEntryPos();
-			DATASOURCE_TYPE eSelectedType = static_cast<DATASOURCE_TYPE>(reinterpret_cast<sal_Int32>(m_pDatasourceType->GetEntryData(nEntry)));
+			DATASOURCE_TYPE eSelectedType = static_cast<DATASOURCE_TYPE>(reinterpret_cast<sal_IntPtr>(m_pDatasourceType->GetEntryData(nEntry)));
 			if (m_DBWizardMode)
 			{
                 if  (  ( m_pDatasourceType->GetSavedValue() != nEntry )
@@ -570,7 +570,7 @@ namespace dbaui
 	{
 		// get the type from the entry data
 		sal_Int16 nSelected = _pBox->GetSelectEntryPos();
-		DATASOURCE_TYPE eSelectedType = static_cast<DATASOURCE_TYPE>(reinterpret_cast<sal_Int32>(_pBox->GetEntryData(nSelected)));
+		DATASOURCE_TYPE eSelectedType = static_cast<DATASOURCE_TYPE>(reinterpret_cast<sal_IntPtr>(_pBox->GetEntryData(nSelected)));
 
 		setParentTitle(eSelectedType);
 		// let the impl method do all the stuff
--- dbaccess/source/ui/app/AppController.cxx	2005-04-06 13:40:09.000000000 +0200
+++ dbaccess/source/ui/app/AppController.cxx	2005-04-21 13:28:51.871178772 +0200
@@ -1751,7 +1751,7 @@ Reference< XComponent > OApplicationCont
 // -----------------------------------------------------------------------------
 IMPL_LINK( OApplicationController, OnCreateWithPilot, void*, _pType )
 {
-    ElementType eType = (ElementType)reinterpret_cast< int >( _pType );
+    ElementType eType = (ElementType)reinterpret_cast< sal_IntPtr >( _pType );
     newElementWithPilot( eType );
     return 0L;
 }
--- dbaccess/source/ui/dlg/indexdialog.cxx	2005-09-08 13:42:46.340059049 +0200
+++ dbaccess/source/ui/dlg/indexdialog.cxx	2005-09-08 13:47:36.218926915 +0200
@@ -352,7 +352,7 @@ namespace dbaui
 		if (pSelected)
 		{
 			// is the current entry modified?
-			Indexes::const_iterator aSelectedPos = m_pIndexes->begin() + reinterpret_cast<sal_Int32>(pSelected->GetUserData());
+			Indexes::const_iterator aSelectedPos = m_pIndexes->begin() + reinterpret_cast<sal_IntPtr>(pSelected->GetUserData());
 			m_aActions.EnableItem(ID_INDEX_SAVE, aSelectedPos->isModified() || aSelectedPos->isNew());
 			m_aActions.EnableItem(ID_INDEX_RESET, aSelectedPos->isModified() || aSelectedPos->isNew());
             bSelectedAnything = bSelectedAnything && !aSelectedPos->bPrimaryKey;
@@ -406,7 +406,7 @@ namespace dbaui
 	{
 		DBG_ASSERT(_pEntry, "DbaIndexDialog::implCommit: invalid entry!");
 
-		Indexes::iterator aCommitPos = m_pIndexes->begin() + reinterpret_cast< sal_Int32 >(_pEntry->GetUserData());
+		Indexes::iterator aCommitPos = m_pIndexes->begin() + reinterpret_cast<sal_IntPtr>(_pEntry->GetUserData());
 
 		// if it's not a new index, remove it
 		// (we can't modify indexes, only drop'n'insert)
@@ -514,7 +514,7 @@ namespace dbaui
 	sal_Bool DbaIndexDialog::implDropIndex(SvLBoxEntry* _pEntry, sal_Bool _bRemoveFromCollection)
 	{
 		// do the drop
-		Indexes::iterator aDropPos = m_pIndexes->begin() + reinterpret_cast< sal_Int32 >(_pEntry->GetUserData());
+		Indexes::iterator aDropPos = m_pIndexes->begin() + reinterpret_cast<sal_IntPtr>(_pEntry->GetUserData());
 		DBG_ASSERT(aDropPos != m_pIndexes->end(), "DbaIndexDialog::OnDropIndex: did not find the index in my collection!");
 
 		SQLExceptionInfo aExceptionInfo;
@@ -596,7 +596,7 @@ namespace dbaui
 		SvLBoxEntry* pSelected = m_aIndexes.FirstSelected();
 		DBG_ASSERT(pSelected, "DbaIndexDialog::OnResetIndex: invalid call!");
 
-		Indexes::iterator aResetPos = m_pIndexes->begin() + reinterpret_cast< sal_Int32 >(pSelected->GetUserData());
+		Indexes::iterator aResetPos = m_pIndexes->begin() + reinterpret_cast<sal_IntPtr>(pSelected->GetUserData());
 
 		if (aResetPos->isNew())
 		{
@@ -669,7 +669,7 @@ namespace dbaui
 		if (pSelected)
 		{
 			// the descriptor
-			Indexes::const_iterator aSelected = m_pIndexes->begin() + reinterpret_cast<sal_Int32>(pSelected->GetUserData());
+			Indexes::const_iterator aSelected = m_pIndexes->begin() + reinterpret_cast<sal_IntPtr>(pSelected->GetUserData());
 			
 			if (aSelected->isModified() || aSelected->isNew())
 			{
@@ -706,7 +706,7 @@ namespace dbaui
 	//------------------------------------------------------------------
 	IMPL_LINK( DbaIndexDialog, OnEntryEdited, SvLBoxEntry*, _pEntry )
 	{
-		Indexes::iterator aPosition = m_pIndexes->begin() + reinterpret_cast<sal_Int32>(_pEntry->GetUserData());
+		Indexes::iterator aPosition = m_pIndexes->begin() + reinterpret_cast<sal_IntPtr>(_pEntry->GetUserData());
 		
 		DBG_ASSERT(aPosition >= m_pIndexes->begin() && aPosition < m_pIndexes->end(),
 			"DbaIndexDialog::OnEntryEdited: invalid entry!");
@@ -755,7 +755,7 @@ namespace dbaui
 			if (m_pFields->IsModified() && !m_pFields->SaveModified())
 				return sal_False;
 
-			Indexes::iterator aPreviouslySelected = m_pIndexes->begin() + reinterpret_cast<sal_Int32>(m_pPreviousSelection->GetUserData());
+			Indexes::iterator aPreviouslySelected = m_pIndexes->begin() + reinterpret_cast<sal_IntPtr>(m_pPreviousSelection->GetUserData());
 
 			// the unique flag
 			aPreviouslySelected->bUnique = m_aUnique.IsChecked();
@@ -816,7 +816,7 @@ namespace dbaui
 	{
 		if (m_pPreviousSelection)
 		{
-			Indexes::iterator aPreviouslySelected = m_pIndexes->begin() + reinterpret_cast<sal_Int32>(m_pPreviousSelection->GetUserData());
+			Indexes::iterator aPreviouslySelected = m_pIndexes->begin() + reinterpret_cast<sal_IntPtr>(m_pPreviousSelection->GetUserData());
 
 			if (!implSaveModified())
 				return sal_False;
@@ -833,7 +833,7 @@ namespace dbaui
 	IMPL_LINK( DbaIndexDialog, OnModified, void*, NOTINTERESTEDIN )
 	{
 		DBG_ASSERT(m_pPreviousSelection, "DbaIndexDialog, OnModified: invalid call!");
-		Indexes::iterator aPosition = m_pIndexes->begin() + reinterpret_cast<sal_Int32>(m_pPreviousSelection->GetUserData());
+		Indexes::iterator aPosition = m_pIndexes->begin() + reinterpret_cast<sal_IntPtr>(m_pPreviousSelection->GetUserData());
 
 		aPosition->setModified(sal_True);
 		updateToolbox();
@@ -847,7 +847,7 @@ namespace dbaui
 		if (_pEntry)
 		{
 			// the descriptor of the selected index
-			Indexes::const_iterator aSelectedIndex = m_pIndexes->begin() + reinterpret_cast<sal_Int32>(_pEntry->GetUserData());
+			Indexes::const_iterator aSelectedIndex = m_pIndexes->begin() + reinterpret_cast<sal_IntPtr>(_pEntry->GetUserData());
 
 			// fill the controls
 			m_aUnique.Check(aSelectedIndex->bUnique);
