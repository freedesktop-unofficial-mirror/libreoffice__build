--- sw/inc/doc.hxx	2004-12-10 15:33:48.000000000 +0100
+++ sw/inc/doc.hxx	2005-01-06 10:40:48.901079843 +0100
@@ -1098,7 +1098,7 @@ public:
 		// eine erzeugte Liste aller Felder mit uebergegeben werden.
 		// (ist die Adresse != 0, und der Pointer == 0 wird eine neue
 		// Liste returnt.)
-	void FldsToCalc( SwCalc& rCalc, sal_uInt32 nLastNd = ULONG_MAX,
+	void FldsToCalc( SwCalc& rCalc, ULONG nLastNd = ULONG_MAX,
 					sal_uInt16 nLastCntnt = USHRT_MAX );
 	void FldsToCalc( SwCalc& rCalc, const _SetGetExpFld& rToThisFld );
 	void FldsToExpand( SwHash**& ppTbl, sal_uInt16& rTblSize,
@@ -1521,7 +1521,7 @@ public:
 											const SwTOXBase& rTOX,
 											const SfxItemSet* pSet = 0,
 											sal_Bool bExpand = sal_False );
-	const SwTOXBaseSection* InsertTableOf( sal_uInt32 nSttNd, sal_uInt32 nEndNd,
+	const SwTOXBaseSection* InsertTableOf( ULONG nSttNd, ULONG nEndNd,
 											const SwTOXBase& rTOX,
 											const SfxItemSet* pSet = 0											);
 	const SwTOXBase* GetCurTOX( const SwPosition& rPos ) const;
@@ -1821,7 +1821,7 @@ public:
 	//Einfuegen einer Beschriftung - falls ein FlyFormat erzeugt wird, so
 	// returne dieses.
 	SwFlyFrmFmt* InsertLabel( const SwLabelType eType, const String &rTxt,
-					const sal_Bool bBefore, const sal_uInt16 nId, const sal_uInt32 nIdx,
+					const sal_Bool bBefore, const sal_uInt16 nId, const ULONG nIdx,
                     const String& rCharacterStyle, 
 					const sal_Bool bCpyBrd = sal_True );
 	SwFlyFrmFmt* InsertDrawLabel( const String &rTxt, const sal_uInt16 nId,
--- sw/inc/docsh.hxx	2004-10-15 12:43:12.000000000 +0200
+++ sw/inc/docsh.hxx	2005-01-05 14:32:37.940906847 +0100
@@ -263,7 +263,7 @@ public:
 								const ::com::sun::star::uno::Any & rValue );
     virtual ::sfx2::SvLinkSource* DdeCreateLinkSource( const String& rItem );
 	virtual void FillClass( SvGlobalName * pClassName,
-								   ULONG * pClipFormat,
+								   sal_uInt32 * pClipFormat,
 								   String * pAppName,
 								   String * pLongUserName,
                                    String * pUserName,
--- sw/inc/docufld.hxx	2004-09-08 16:49:42.000000000 +0200
+++ sw/inc/docufld.hxx	2005-01-06 12:47:04.393045302 +0100
@@ -186,7 +186,7 @@ class SwPageNumberFieldType : public SwF
 public:
 	SwPageNumberFieldType();
 
-	String& Expand( ULONG nFmt, short nOff, const String&, String& rRet ) const;
+	String& Expand( sal_uInt32 nFmt, short nOff, const String&, String& rRet ) const;
 	void ChangeExpansion( SwDoc* pDoc, USHORT nNum, USHORT nMax,
 							BOOL bVirtPageNum, const sal_Int16* pNumFmt = 0 );
 	inline sal_Int16 GetNumFormat() const { return nNumberingType; }
@@ -205,7 +205,7 @@ class SwPageNumberField : public SwField
 
 public:
 	SwPageNumberField(SwPageNumberFieldType*, USHORT nSub = PG_RANDOM,
-					  ULONG nFmt = 0, short nOff = 0);
+					  sal_uInt32 nFmt = 0, short nOff = 0);
 
 	virtual String		Expand() const;
 	virtual SwField*	Copy() const;
@@ -231,7 +231,7 @@ class SwAuthorFieldType : public SwField
 public:
 	SwAuthorFieldType();
 
-	String 					Expand(ULONG) const;
+	String 					Expand(sal_uInt32) const;
 	virtual SwFieldType*    Copy() const;
 };
 
@@ -244,7 +244,7 @@ class SwAuthorField : public SwField
 	String	aContent;
 
 public:
-	SwAuthorField(SwAuthorFieldType*, ULONG nFmt = 0);
+	SwAuthorField(SwAuthorFieldType*, sal_uInt32 nFmt = 0);
 
 	virtual String	 	Expand() const;
 	virtual SwField* 	Copy() const;
@@ -266,7 +266,7 @@ class SwFileNameFieldType : public SwFie
 public:
 	SwFileNameFieldType(SwDoc*);
 
-	String					Expand(ULONG) const;
+	String					Expand(sal_uInt32) const;
 	virtual SwFieldType*    Copy() const;
 };
 
@@ -279,7 +279,7 @@ class SwFileNameField : public SwField
 	String aContent;
 
 public:
-	SwFileNameField(SwFileNameFieldType*, ULONG nFmt = 0);
+	SwFileNameField(SwFileNameFieldType*, sal_uInt32 nFmt = 0);
 
 	virtual String	 	Expand() const;
 	virtual SwField* 	Copy() const;
@@ -301,7 +301,7 @@ class SwTemplNameFieldType : public SwFi
 public:
 	SwTemplNameFieldType(SwDoc*);
 
-	String					Expand(ULONG) const;
+	String					Expand(sal_uInt32) const;
 	virtual SwFieldType*    Copy() const;
 };
 
@@ -312,7 +312,7 @@ public:
 class SwTemplNameField : public SwField
 {
 public:
-	SwTemplNameField(SwTemplNameFieldType*, ULONG nFmt = 0);
+	SwTemplNameField(SwTemplNameFieldType*, sal_uInt32 nFmt = 0);
 
 	virtual String	 	Expand() const;
 	virtual SwField* 	Copy() const;
@@ -332,7 +332,7 @@ class SwDocStatFieldType : public SwFiel
 
 public:
 	SwDocStatFieldType(SwDoc*);
-	String 					Expand(USHORT nSubType, ULONG nFmt) const;
+	String 					Expand(USHORT nSubType, sal_uInt32 nFmt) const;
 	virtual SwFieldType*    Copy() const;
 
 	inline sal_Int16 		GetNumFormat() const 		{ return nNumberingType; }
@@ -349,7 +349,7 @@ class SwDocStatField : public SwField
 
 public:
 	SwDocStatField( SwDocStatFieldType*,
-					USHORT nSubType = 0, ULONG nFmt = 0);
+					USHORT nSubType = 0, sal_uInt32 nFmt = 0);
 
 	void ChangeExpansion( const SwFrm* pFrm );
 
@@ -585,7 +585,7 @@ class SwDocInfoFieldType : public SwValu
 public:
 	SwDocInfoFieldType(SwDoc* pDc);
 
-	String					Expand(USHORT nSubType, ULONG nFormat, USHORT nLang) const;
+	String					Expand(USHORT nSubType, sal_uInt32 nFormat, USHORT nLang) const;
 	virtual SwFieldType*    Copy() const;
 };
 
@@ -595,7 +595,7 @@ class SwDocInfoField : public SwValueFie
 	String  aContent;
 
 public:
-	SwDocInfoField(SwDocInfoFieldType*, USHORT nSub, ULONG nFmt=0);
+	SwDocInfoField(SwDocInfoFieldType*, USHORT nSub, sal_uInt32 nFmt=0);
 
 	virtual void        	SetSubType(USHORT);
 	virtual USHORT	 		GetSubType() const;
@@ -623,7 +623,7 @@ public:
 	inline const String& 	GetData() const					{ return aData; }
 	inline void			 	SetData(const String& rStr)		{ aData = rStr; }
 
-	String					Expand(USHORT nSubType, ULONG nFormat) const;
+	String					Expand(USHORT nSubType, sal_uInt32 nFormat) const;
 	virtual SwFieldType*    Copy() const;
 };
 
@@ -633,7 +633,7 @@ class SwExtUserField : public SwField
 	USHORT 	nType;
 
 public:
-	SwExtUserField(SwExtUserFieldType*, USHORT nSub, ULONG nFmt=0);
+	SwExtUserField(SwExtUserFieldType*, USHORT nSub, sal_uInt32 nFmt=0);
 
 	virtual String		Expand() const;
 	virtual SwField*	Copy() const;
@@ -723,7 +723,7 @@ class SwRefPageGetField : public SwField
 {
 	String sTxt;
 public:
-	SwRefPageGetField( SwRefPageGetFieldType*, ULONG nFmt );
+	SwRefPageGetField( SwRefPageGetFieldType*, sal_uInt32 nFmt );
 
 	virtual String		Expand() const;
 	virtual SwField*	Copy() const;
@@ -759,7 +759,7 @@ class SwJumpEditField : public SwField
 {
 	String sTxt, sHelp;
 public:
-	SwJumpEditField( SwJumpEditFieldType*, ULONG nFormat,
+	SwJumpEditField( SwJumpEditFieldType*, sal_uInt32 nFormat,
 					const String& sText, const String& sHelp );
 
 	virtual String		Expand() const;
--- sw/inc/fldbas.hxx	2004-09-08 16:50:07.000000000 +0200
+++ sw/inc/fldbas.hxx	2005-01-06 11:31:48.830817352 +0100
@@ -295,11 +295,11 @@ extern USHORT __FAR_DATA aTypeTab[];
 	Beschreibung: Allgemeine Tools
  --------------------------------------------------------------------*/
 
-String	GetResult(double nVal, ULONG nNumFmt, USHORT nLang = LANGUAGE_SYSTEM);
+String	GetResult(double nVal, sal_uInt32 nNumFmt, USHORT nLang = LANGUAGE_SYSTEM);
 void    SetErrorStr(const String& rStr);
 //String	ExpandDate(const Date& rDate, ULONG nFmt, USHORT nLang);
 //String 	ExpandTime(const Time& rTime, ULONG nFmt, USHORT nLang);
-String  FormatNumber(USHORT nNum, ULONG nFormat);
+String  FormatNumber(USHORT nNum, sal_uInt32 nFormat);
 
 /*--------------------------------------------------------------------
 	Beschreibung: 	Instanzen von SwFields und Abgeleiteten kommen 0-n mal vor.
@@ -360,14 +360,14 @@ class SW_DLLPUBLIC SwField
 {
 	USHORT				nLang;	// Immer ueber SetLanguage aendern!
     BOOL                bIsAutomaticLanguage;
-	ULONG 				nFormat;
+	sal_uInt32			nFormat;
 
 	SwFieldType* 		pType;
 
 protected:
-	void				SetFormat(ULONG nSet) {nFormat = nSet;}
+	void				SetFormat(sal_uInt32 nSet) {nFormat = nSet;}
 
-	SwField(SwFieldType* pTyp, ULONG nFmt = 0, USHORT nLang = LANGUAGE_SYSTEM);
+	SwField(SwFieldType* pTyp, sal_uInt32 nFmt = 0, USHORT nLang = LANGUAGE_SYSTEM);
 
 public:
 	virtual 			~SwField();
@@ -403,13 +403,13 @@ public:
 	virtual void		SetLanguage(USHORT nLng);
 
 	// Parameter fuer Dialog und BASIC erfragen
-	inline ULONG		GetFormat() const;
+	inline sal_uInt32	GetFormat() const;
 	virtual const String& GetPar1() const;
 	virtual String		GetPar2() 	const;
 
 	virtual String		GetFormula() const;
 
-	virtual void  		ChangeFormat(ULONG n);
+	virtual void  		ChangeFormat(sal_uInt32 n);
 	virtual void		SetPar1(const String& rStr);
 	virtual void		SetPar2(const String& rStr);
 
@@ -429,7 +429,7 @@ public:
 inline SwFieldType*	SwField::GetTyp() const
 	{ return pType; 	}
 
-inline ULONG SwField::GetFormat() const
+inline sal_uInt32 SwField::GetFormat() const
 	{ return nFormat; 	}
 
 inline USHORT SwField::GetLanguage() const
@@ -456,9 +456,9 @@ public:
 	inline BOOL		UseFormat() const					{ return bUseFormat; }
 	inline void		EnableFormat(BOOL bFormat = TRUE)	{ bUseFormat = bFormat; }
 
-	String			ExpandValue(const double& rVal, ULONG nFmt, USHORT nLng=0) const;
+	String			ExpandValue(const double& rVal, sal_uInt32 nFmt, USHORT nLng=0) const;
 	void			DoubleToString(String &rValue, const double &rVal, LanguageType eLng) const;
-	void			DoubleToString(String &rValue, const double &rVal, ULONG nFmt) const;
+	void			DoubleToString(String &rValue, const double &rVal, sal_uInt32 nFmt) const;
 };
 
 class SW_DLLPUBLIC SwValueField : public SwField
@@ -467,7 +467,7 @@ class SW_DLLPUBLIC SwValueField : public
 //	String sExpand;
 
 protected:
-	SwValueField( SwValueFieldType* pFldType, ULONG nFmt = 0, USHORT nLang = LANGUAGE_SYSTEM, const double fVal = 0.0 );
+	SwValueField( SwValueFieldType* pFldType, sal_uInt32 nFmt = 0, USHORT nLang = LANGUAGE_SYSTEM, const double fVal = 0.0 );
 	SwValueField( const SwValueField& rFld );
 
 public:
@@ -483,10 +483,10 @@ public:
 	virtual double			GetValue() const;
 	virtual void 			SetValue( const double& rVal );
 
-	inline String	ExpandValue(const double& rVal, ULONG nFmt, USHORT nLng=0) const
+	inline String	ExpandValue(const double& rVal, sal_uInt32 nFmt, USHORT nLng=0) const
 		{ return ((SwValueFieldType*)GetTyp())->ExpandValue(rVal, nFmt, nLng); }
 
-	static ULONG			GetSystemFormat(SvNumberFormatter* pFormatter, ULONG nFmt);
+	static sal_uInt32		GetSystemFormat(SvNumberFormatter* pFormatter, sal_uInt32 nFmt);
 };
 
 class SwFormulaField : public SwValueField
@@ -494,7 +494,7 @@ class SwFormulaField : public SwValueFie
 	String sFormula;
 
 protected:
-	SwFormulaField( SwValueFieldType* pFldType, ULONG nFmt = 0, const double fVal = 0.0 );
+	SwFormulaField( SwValueFieldType* pFldType, sal_uInt32 nFmt = 0, const double fVal = 0.0 );
 	SwFormulaField( const SwFormulaField& rFld );
 
 public:
--- sw/inc/globdoc.hxx	2004-10-15 12:43:13.000000000 +0200
+++ sw/inc/globdoc.hxx	2005-01-05 14:32:57.492520705 +0100
@@ -77,7 +77,7 @@ public:
 	~SwGlobalDocShell();
 
 	virtual void	FillClass( SvGlobalName * pClassName,
-								   ULONG * pClipFormat,
+								   sal_uInt32 * pClipFormat,
 								   String * pAppName,
 								   String * pLongUserName,
                                    String * pUserName,
--- sw/inc/chpfld.hxx	2003-12-09 12:36:02.000000000 +0100
+++ sw/inc/chpfld.hxx	2005-01-06 11:25:36.949089831 +0100
@@ -105,7 +105,7 @@ class SwChapterField : public SwField
 	BYTE nLevel;
 	String sTitle, sNumber, sPre, sPost;
 public:
-	SwChapterField(SwChapterFieldType*, ULONG nFmt = 0);
+	SwChapterField(SwChapterFieldType*, sal_uInt32 nFmt = 0);
 
 	void ChangeExpansion(const SwFrm*, const SwTxtNode*, 
 		BOOL bSrchNum = FALSE);
--- sw/inc/swtable.hxx	2004-08-23 10:39:39.000000000 +0200
+++ sw/inc/swtable.hxx	2005-01-06 11:06:24.167062684 +0100
@@ -385,7 +385,7 @@ public:
 	BOOL IsInHeadline( const SwTable* pTbl = 0 ) const;
 
 	// enthaelt die Box Inhalt, der als Nummer formatiert werden kann?
-	BOOL HasNumCntnt( double& rNum, ULONG& rFmtIndex,
+	BOOL HasNumCntnt( double& rNum, sal_uInt32& rFmtIndex,
 					BOOL& rIsEmptyTxtNd ) const;
 	ULONG IsValidNumTxtNd( BOOL bCheckAttr = TRUE ) const;
 	// teste ob der BoxInhalt mit der Nummer uebereinstimmt, wenn eine
--- sw/inc/usrfld.hxx	2004-08-23 10:42:14.000000000 +0200
+++ sw/inc/usrfld.hxx	2005-01-06 13:02:52.615135557 +0100
@@ -92,10 +92,10 @@ public:
 	virtual const String&	GetName() const;
 	virtual SwFieldType*	Copy() const;
 
-	String					Expand(ULONG nFmt, USHORT nSubType, USHORT nLng);
+	String					Expand(sal_uInt32 nFmt, USHORT nSubType, USHORT nLng);
 
-	String					GetContent( ULONG nFmt = 0 );
-		   void				SetContent( const String& rStr, ULONG nFmt = 0 );
+	String					GetContent( sal_uInt32 nFmt = 0 );
+		   void				SetContent( const String& rStr, sal_uInt32 nFmt = 0 );
 		   void				CtrlSetContent( const String& rStr );
 
 	inline BOOL 			IsValid() const;
@@ -147,7 +147,7 @@ class SwUserField : public SwValueField
 	USHORT  nSubType;
 
 public:
-	SwUserField(SwUserFieldType*, USHORT nSub = 0, ULONG nFmt = 0);
+	SwUserField(SwUserFieldType*, USHORT nSub = 0, sal_uInt32 nFmt = 0);
 
 	virtual USHORT	 		GetSubType() const;
 	virtual void	 		SetSubType(USHORT nSub);
--- sw/inc/viewsh.hxx	2004-10-15 12:43:19.000000000 +0200
+++ sw/inc/viewsh.hxx	2005-01-06 14:00:12.562873238 +0100
@@ -338,7 +338,7 @@ public:
 
 	//Wird intern fuer die Shell gerufen die Druckt. Formatiert die Seiten.
 	void CalcPagesForPrint( sal_uInt16 nMax, SfxProgress* pProgress = 0,
-		const String* pStr = NULL, sal_uInt32 nMergeAct = 0, sal_uInt32 nMergeCnt = 0 );
+		const String* pStr = NULL, ULONG nMergeAct = 0, ULONG nMergeCnt = 0 );
 
 	//All about fields.
 	void UpdateFlds(sal_Bool bCloseDB = sal_False);
--- sw/inc/wdocsh.hxx	2004-10-15 12:43:19.000000000 +0200
+++ sw/inc/wdocsh.hxx	2005-01-05 14:33:10.394286333 +0100
@@ -85,7 +85,7 @@ public:
 	~SwWebDocShell();
 
 	virtual void		FillClass( SvGlobalName * pClassName,
-								   ULONG * pClipFormat,
+								   sal_uInt32 * pClipFormat,
 								   String * pAppName,
                                    String * pLongUserName,
                                    String * pUserName,
Pouze v sw/source/core/doc: .doc.cxx.swp
--- sw/source/core/doc/docedt.cxx	2004-11-16 11:41:28.000000000 +0100
+++ sw/source/core/doc/docedt.cxx	2005-01-05 18:06:31.776356941 +0100
@@ -1718,13 +1718,13 @@ uno::Any SwDoc::Spell( SwPaM& rPaM,
                             pSttPos->nNode.GetNode().GetTxtNode(), pSttPos->nContent,
                             pEndPos->nNode.GetNode().GetTxtNode(), pEndPos->nContent );
 
-	sal_uInt32 nCurrNd = pSttPos->nNode.GetIndex();
-	sal_uInt32 nEndNd = pEndPos->nNode.GetIndex();
+	ULONG nCurrNd = pSttPos->nNode.GetIndex();
+	ULONG nEndNd = pEndPos->nNode.GetIndex();
 
 	if( nCurrNd <= nEndNd )
 	{
 		SwCntntFrm* pCntFrm;
-		sal_uInt32 nCount = nEndNd - nCurrNd;
+		ULONG nCount = nEndNd - nCurrNd;
 		sal_Bool bGoOn = sal_True;
 		while( bGoOn )
 		{
@@ -2246,7 +2246,7 @@ sal_Bool SwDoc::DelFullPara( SwPaM& rPam
 
 	/* #i9185# This whould lead to a segmentation fault if not catched
        above. */
-	sal_uInt32 nNextNd = rEnd.nNode.GetIndex() + 1;
+	ULONG nNextNd = rEnd.nNode.GetIndex() + 1;
 	SwTableNode* pTblNd = aNodes[ nNextNd ]->GetTableNode();
 
 	if( pTblNd && pNd->IsCntntNode() )
--- sw/source/core/doc/docfld.cxx	2004-10-15 12:43:26.000000000 +0200
+++ sw/source/core/doc/docfld.cxx	2005-01-06 10:39:35.973807005 +0100
@@ -2221,7 +2221,7 @@ void SwDoc::SetFixFields( BOOL bOnlyTime
 		ResetModified();
 }
 
-BOOL SwDoc::SetFieldsDirty( BOOL b, const SwNode* pChk, ULONG nLen )
+BOOL SwDoc::SetFieldsDirty( BOOL b, const SwNode* pChk, sal_uInt32 nLen )
 {
 	// teste ggfs. mal, ob die angegbenen Nodes ueberhaupt Felder beinhalten.
 	// wenn nicht, braucht das Flag nicht veraendert werden.
--- sw/source/core/doc/doclay.cxx	2004-12-07 14:27:18.000000000 +0100
+++ sw/source/core/doc/doclay.cxx	2005-01-05 18:05:07.369650197 +0100
@@ -1339,7 +1339,7 @@ void lcl_CpyAttr( SfxItemSet &rNewSet, c
 
 
 SwFlyFrmFmt* SwDoc::InsertLabel( const SwLabelType eType, const String &rTxt,
-			const sal_Bool bBefore, const sal_uInt16 nId, const sal_uInt32 nNdIdx,
+			const sal_Bool bBefore, const sal_uInt16 nId, const ULONG nNdIdx,
             const String& rCharacterStyle,
 			const sal_Bool bCpyBrd )
 {
@@ -1390,7 +1390,7 @@ SwFlyFrmFmt* SwDoc::InsertLabel( const S
 			{
 				SwStartNode *pSttNd = GetNodes()[nNdIdx]->GetStartNode();
 				ASSERT( pSttNd, "Kein StartNode in InsertLabel." );
-				sal_uInt32 nNode;
+				ULONG nNode;
 				if( bBefore )
 				{
 					nNode = pSttNd->GetIndex();
--- sw/source/core/doc/docnum.cxx	2004-12-10 15:33:55.000000000 +0100
+++ sw/source/core/doc/docnum.cxx	2005-01-06 10:36:30.316241366 +0100
@@ -2577,7 +2577,7 @@ void lcl_NodeNumReset(SwNodeNum & rNum, 
    @param rName           name of the numbering rule to search for
    @param nUpdatePos      document position to start at
  */
-void SwDoc::UpdateNumRule( const String& rName, ULONG nUpdatePos )
+void SwDoc::UpdateNumRule( const String& rName, sal_uInt32 nUpdatePos )
 {
     SwNumRule * pRule = FindNumRulePtr(rName);
     ASSERT(pRule, "numrule not found");
--- sw/source/core/doc/swtable.cxx	2004-11-29 09:58:59.000000000 +0100
+++ sw/source/core/doc/swtable.cxx	2005-01-06 11:05:31.369184452 +0100
@@ -2011,7 +2011,7 @@ void SwTableBoxFmt::Modify( SfxPoolItem*
 							ULONG nNdPos = pBox->IsValidNumTxtNd( TRUE );
 							if( ULONG_MAX != nNdPos )
 							{
-								ULONG nTmpFmtIdx = nNewFmt;
+								sal_uInt32 nTmpFmtIdx = nNewFmt;
 								String aTxt( GetDoc()->GetNodes()[ nNdPos ]
 												->GetTxtNode()->GetRedlineTxt());
 								if( !aTxt.Len() )
@@ -2027,7 +2027,7 @@ void SwTableBoxFmt::Modify( SfxPoolItem*
 									if( NUMBERFORMAT_PERCENT ==
 										pNumFmtr->GetType( nNewFmt ))
 									{
-										ULONG nTmpFmt = 0;
+										sal_uInt32 nTmpFmt = 0;
 										if( pNumFmtr->IsNumberFormat(
 													aTxt, nTmpFmt, fVal ))
 										{
@@ -2097,7 +2097,7 @@ void SwTableBoxFmt::Modify( SfxPoolItem*
 	SwFrmFmt::Modify( pOld, pNew );
 }
 
-BOOL SwTableBox::HasNumCntnt( double& rNum, ULONG& rFmtIndex,
+BOOL SwTableBox::HasNumCntnt( double& rNum, sal_uInt32& rFmtIndex,
 							BOOL& rIsEmptyTxtNd ) const
 {
 	BOOL bRet = FALSE;
@@ -2120,7 +2120,7 @@ BOOL SwTableBox::HasNumCntnt( double& rN
 			if( !rIsEmptyTxtNd &&
 				NUMBERFORMAT_PERCENT == pNumFmtr->GetType( rFmtIndex ))
 			{
-				ULONG nTmpFmt = 0;
+				sal_uInt32 nTmpFmt = 0;
 				if( pNumFmtr->IsNumberFormat( aTxt, nTmpFmt, rNum ) &&
 					NUMBERFORMAT_NUMBER == pNumFmtr->GetType( nTmpFmt ))
 					aTxt += '%';
--- sw/source/core/doc/tblafmt.cxx	2004-09-17 21:41:44.000000000 +0200
+++ sw/source/core/doc/tblafmt.cxx	2005-01-06 11:20:04.856449711 +0100
@@ -782,7 +782,7 @@ void SwTableAutoFmt::UpdateToSet( BYTE n
 			rChg.GetValueFormat( sFmt, eLng, eSys );
 			if( sFmt.Len() )
 			{
-				ULONG nKey = 0;
+				sal_uInt32 nKey = 0;
 				if ( eLng == LANGUAGE_SYSTEM && eSys != ::GetAppLanguage() )
 				{
 					//	#53381# wenn System beim Speichern etwas anderes war,
--- sw/source/core/docnode/ndtbl.cxx	2004-12-07 14:27:18.000000000 +0100
+++ sw/source/core/docnode/ndtbl.cxx	2005-01-06 13:15:03.739761889 +0100
@@ -3701,7 +3701,7 @@ void SwDoc::ChkBoxNumFmt( SwTableBox& rB
 	SwUndoTblNumFmt* pUndo = 0;
 
 	BOOL bIsEmptyTxtNd, bChgd = TRUE;
-	ULONG nFmtIdx;
+	sal_uInt32 nFmtIdx;
 	double fNumber;
 	if( rBox.HasNumCntnt( fNumber, nFmtIdx, bIsEmptyTxtNd ) )
 	{
--- sw/source/core/edit/edtab.cxx	2004-11-16 11:41:35.000000000 +0100
+++ sw/source/core/edit/edtab.cxx	2005-01-05 16:47:03.036952242 +0100
@@ -440,7 +440,7 @@ BOOL SwEditShell::IsTableBoxTextFormat()
 	if( !pBox )
 		return FALSE;
 
-	ULONG nFmt;
+	sal_uInt32 nFmt;
 	const SfxPoolItem* pItem;
 	if( SFX_ITEM_SET == pBox->GetFrmFmt()->GetAttrSet().GetItemState(
 		RES_BOXATR_FORMAT, TRUE, &pItem ))
--- sw/source/core/fields/cellfml.cxx	2004-05-03 15:45:20.000000000 +0200
+++ sw/source/core/fields/cellfml.cxx	2005-01-05 16:47:59.292161782 +0100
@@ -287,7 +287,7 @@ double SwTableBox::GetValue( SwTblCalcPa
 
 			double aNum;
 			String sTxt( rTxt.Copy( nSttPos ) );
-			ULONG nFmtIndex = GetFrmFmt()->GetTblBoxNumFmt().GetValue();
+			sal_uInt32 nFmtIndex = GetFrmFmt()->GetTblBoxNumFmt().GetValue();
 
 			SvNumberFormatter* pNumFmtr = pDoc->GetNumberFormatter();
 
@@ -297,7 +297,7 @@ double SwTableBox::GetValue( SwTblCalcPa
 			else if( sTxt.Len() &&
 					NUMBERFORMAT_PERCENT == pNumFmtr->GetType( nFmtIndex ))
 			{
-				ULONG nTmpFmt = 0;
+				sal_uInt32 nTmpFmt = 0;
 				if( pNumFmtr->IsNumberFormat( sTxt, nTmpFmt, aNum ) &&
 					NUMBERFORMAT_NUMBER == pNumFmtr->GetType( nTmpFmt ))
 					sTxt += '%';
--- sw/source/core/fields/dbfld.cxx	2004-08-02 16:19:12.000000000 +0200
+++ sw/source/core/fields/dbfld.cxx	2005-01-06 12:36:03.766625599 +0100
@@ -434,7 +434,7 @@ void SwDBField::Evaluate()
     if(!pMgr || !pMgr->IsDataSourceOpen(aTmpData.sDataSource, aTmpData.sCommand, sal_True))
 		return ;
 
-	ULONG nFmt;
+	sal_uInt32 nFmt;
 
 	// Passenden Spaltennamen suchen
 	String aColNm( ((SwDBFieldType*)GetTyp())->GetColumnName() );
--- sw/source/core/fields/fldbas.cxx	2004-09-08 16:55:34.000000000 +0200
+++ sw/source/core/fields/fldbas.cxx	2005-01-06 14:39:15.541412737 +0100
@@ -273,7 +273,7 @@ BOOL SwFieldType::PutValue( const uno::A
 					Felder sind n-mal vorhanden, Feldtypen nur einmal
  --------------------------------------------------------------------*/
 
-SwField::SwField(SwFieldType* pTyp, ULONG nFmt, USHORT nLng) :
+SwField::SwField(SwFieldType* pTyp, sal_uInt32 nFmt, USHORT nLng) :
 	nFormat(nFmt),
     nLang(nLng),
     bIsAutomaticLanguage(TRUE)
@@ -484,7 +484,7 @@ void SwField::SetLanguage(USHORT nLng)
 	nLang = nLng;
 }
 
-void SwField::ChangeFormat(ULONG n)
+void SwField::ChangeFormat(sal_uInt32 n)
 {
 	nFormat = n;
 }
@@ -523,7 +523,7 @@ FASTBOOL SwField::IsFixed() const
 	Beschreibung: Numerierung expandieren
  --------------------------------------------------------------------*/
 
-String FormatNumber(USHORT nNum, ULONG nFormat)
+String FormatNumber(USHORT nNum, sal_uInt32 nFormat)
 {
     if(SVX_NUM_PAGEDESC == nFormat)
         return  String::CreateFromInt32( nNum );
@@ -558,7 +558,7 @@ SwValueFieldType::SwValueFieldType( cons
  --------------------------------------------------------------------*/
 
 String SwValueFieldType::ExpandValue( const double& rVal,
-										ULONG nFmt, USHORT nLng) const
+										sal_uInt32 nFmt, USHORT nLng) const
 {
 	if (rVal >= DBL_MAX)		// FehlerString fuer Calculator
 		return ViewShell::GetShellRes()->aCalc_Error;
@@ -579,7 +579,7 @@ String SwValueFieldType::ExpandValue( co
 
 		if (pEntry && nLng != pEntry->GetLanguage())
 		{
-			ULONG nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(nFmt,
+			sal_uInt32 nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(nFmt,
 													(LanguageType)nFmtLng);
 
 			if (nNewFormat == nFmt)
@@ -613,7 +613,7 @@ String SwValueFieldType::ExpandValue( co
  --------------------------------------------------------------------*/
 
 void SwValueFieldType::DoubleToString( String &rValue, const double &rVal,
-										ULONG nFmt) const
+										sal_uInt32 nFmt) const
 {
 	SvNumberFormatter* pFormatter = pDoc->GetNumberFormatter();
 	const SvNumberformat* pEntry = pFormatter->GetEntry(nFmt);
@@ -644,7 +644,7 @@ void SwValueFieldType::DoubleToString( S
 	Beschreibung: CTOR SwValueField
  --------------------------------------------------------------------*/
 
-SwValueField::SwValueField( SwValueFieldType* pFldType, ULONG nFmt,
+SwValueField::SwValueField( SwValueFieldType* pFldType, sal_uInt32 nFmt,
 							USHORT nLang, const double fVal )
 	: SwField(pFldType, nFmt, nLang),
 	fValue(fVal)
@@ -697,14 +697,14 @@ void SwValueField::ChangeFormat(ULONG n)
 	Beschreibung: Format in Office-Sprache ermitteln
  --------------------------------------------------------------------*/
 
-ULONG SwValueField::GetSystemFormat(SvNumberFormatter* pFormatter, ULONG nFmt)
+sal_uInt32 SwValueField::GetSystemFormat(SvNumberFormatter* pFormatter, sal_uInt32 nFmt)
 {
 	const SvNumberformat* pEntry = pFormatter->GetEntry(nFmt);
 	USHORT nLng = SvxLocaleToLanguage( GetAppLocaleData().getLocale() );
 
 	if (pEntry && nLng != pEntry->GetLanguage())
 	{
-		ULONG nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(nFmt,
+		sal_uInt32 nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(nFmt,
 														(LanguageType)nLng);
 
 		if (nNewFormat == nFmt)
@@ -715,7 +715,7 @@ ULONG SwValueField::GetSystemFormat(SvNu
 
 			String sFmt(pEntry->GetFormatstring());
 
-			ULONG nFormat = nFmt;
+			sal_uInt32 nFormat = nFmt;
 			pFormatter->PutandConvertEntry(sFmt, nDummy, nType,
 								nFormat, pEntry->GetLanguage(), nLng);
 			nFmt = nFormat;
@@ -735,7 +735,7 @@ void SwValueField::SetLanguage( USHORT n
 {
     if( IsAutomaticLanguage() && 
             ((SwValueFieldType *)GetTyp())->UseFormat() &&
-		GetFormat() != ULONG_MAX )
+		GetFormat() != SAL_MAX_UINT32 )
 	{
 		// wegen Bug #60010
 		SvNumberFormatter* pFormatter = GetDoc()->GetNumberFormatter();
@@ -750,7 +750,7 @@ void SwValueField::SetLanguage( USHORT n
 
 			if( pEntry && nFmtLng != pEntry->GetLanguage() )
 			{
-				ULONG nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(
+				sal_uInt32 nNewFormat = pFormatter->GetFormatForLanguageIfBuiltIn(
 										GetFormat(), (LanguageType)nFmtLng );
 
 				if( nNewFormat == GetFormat() )
@@ -791,7 +791,7 @@ void SwValueField::SetValue( const doubl
 	Beschreibung: SwFormulaField
  --------------------------------------------------------------------*/
 
-SwFormulaField::SwFormulaField( SwValueFieldType* pFldType, ULONG nFmt, const double fVal)
+SwFormulaField::SwFormulaField( SwValueFieldType* pFldType, sal_uInt32 nFmt, const double fVal)
 	: SwValueField(pFldType, nFmt, LANGUAGE_SYSTEM, fVal)
 {
 }
@@ -821,7 +821,7 @@ void SwFormulaField::SetFormula(const St
 
 	ULONG nFmt(GetFormat());
 
-	if( nFmt && ULONG_MAX != nFmt )
+	if( nFmt && SAL_MAX_UINT32 != nFmt )
 	{
 		xub_StrLen nPos = 0;
 		double fValue;
@@ -836,9 +836,9 @@ void SwFormulaField::SetFormula(const St
 
 void SwFormulaField::SetExpandedFormula( const String& rStr )
 {
-	ULONG nFmt(GetFormat());
+	sal_uInt32 nFmt(GetFormat());
 
-	if (nFmt && nFmt != ULONG_MAX && ((SwValueFieldType *)GetTyp())->UseFormat())
+	if (nFmt && nFmt != SAL_MAX_UINT32 && ((SwValueFieldType *)GetTyp())->UseFormat())
 	{
 		double fValue;
 
@@ -862,9 +862,9 @@ void SwFormulaField::SetExpandedFormula(
 
 String SwFormulaField::GetExpandedFormula() const
 {
-	ULONG nFmt(GetFormat());
+	sal_uInt32 nFmt(GetFormat());
 
-	if (nFmt && nFmt != ULONG_MAX && ((SwValueFieldType *)GetTyp())->UseFormat())
+	if (nFmt && nFmt != SAL_MAX_UINT32 && ((SwValueFieldType *)GetTyp())->UseFormat())
 	{
 		String sFormattedValue;
 		Color* pCol = 0;
--- sw/source/core/fields/usrfld.cxx	2003-04-17 16:07:33.000000000 +0200
+++ sw/source/core/fields/usrfld.cxx	2005-01-06 13:01:52.986386361 +0100
@@ -321,7 +321,7 @@ double SwUserFieldType::GetValue( SwCalc
 
 String SwUserFieldType::GetContent( sal_uInt32 nFmt )
 {
-	if (nFmt && nFmt != ULONG_MAX)
+	if (nFmt && nFmt != SAL_MAX_UINT32)
 	{
 		String sFormattedValue;
 		Color* pCol = 0;
@@ -341,7 +341,7 @@ void SwUserFieldType::SetContent( const 
 	{
 		aContent = rStr;
 
-		if (nFmt && nFmt != ULONG_MAX)
+		if (nFmt && nFmt != SAL_MAX_UINT32)
 		{
 			double fValue;
 
--- sw/source/core/inc/frmtool.hxx	2004-12-10 15:33:57.000000000 +0100
+++ sw/source/core/inc/frmtool.hxx	2005-01-06 13:47:00.229958655 +0100
@@ -121,7 +121,7 @@ void SwAlignGrfRect( SwRect *pGrfRect, c
 SwFlyFrm *GetFlyFromMarked( const SdrMarkList *pLst, ViewShell *pSh );
 
 //Nicht gleich die math.lib anziehen.
-ULONG MA_FASTCALL SqRt( BigInt nX );
+sal_uInt32 MA_FASTCALL SqRt( BigInt nX );
 
 //CntntNodes besorgen, CntntFrms erzeugen und in den LayFrm haengen.
 void MA_FASTCALL _InsertCnt( SwLayoutFrm *pLay, SwDoc *pDoc, ULONG nIndex,
--- sw/source/core/layout/flycnt.cxx	2004-11-29 09:59:02.000000000 +0100
+++ sw/source/core/layout/flycnt.cxx	2005-01-06 13:28:50.340262636 +0100
@@ -897,7 +897,7 @@ ULONG MA_FASTCALL lcl_FindCntDiff( const
 		{
 			//Jetzt die Entfernung zwischen den beiden Punkten berechnen.
 			//'Delta' X^2 + 'Delta'Y^2 = 'Entfernung'^2
-			ULONG dX = Max( pCnt->Frm().Left(), rPt.X() ) -
+			sal_uInt32 dX = Max( pCnt->Frm().Left(), rPt.X() ) -
 					   Min( pCnt->Frm().Left(), rPt.X() ),
 				  dY = Max( pCnt->Frm().Top(), rPt.Y() ) -
 					   Min( pCnt->Frm().Top(), rPt.Y() );
--- sw/source/core/layout/frmtool.cxx	2004-11-29 09:59:02.000000000 +0100
+++ sw/source/core/layout/frmtool.cxx	2005-01-06 13:47:34.230185660 +0100
@@ -2648,7 +2648,7 @@ void RestoreCntnt( SwFrm *pSav, SwLayout
 |*
 |*************************************************************************/
 
-ULONG MA_FASTCALL SqRt( BigInt nX )
+sal_uInt32 MA_FASTCALL SqRt( BigInt nX )
 {
 	BigInt nErg = 1;
 
@@ -2661,7 +2661,7 @@ ULONG MA_FASTCALL SqRt( BigInt nX )
 			nOldErg = nErg;
 		}
 	}
-	return nErg >= BigInt((ULONG)ULONG_MAX) ? ULONG_MAX : (ULONG)nErg;
+	return nErg >= BigInt(SAL_MAX_UINT32) ? SAL_MAX_UINT32 : (sal_uInt32)nErg;
 }
 
 /*************************************************************************
--- sw/source/core/layout/trvlfrm.cxx	2004-09-08 18:10:36.000000000 +0200
+++ sw/source/core/layout/trvlfrm.cxx	2005-01-06 13:49:09.871094267 +0100
@@ -1131,11 +1131,11 @@ BOOL GetFrmInPage( const SwCntntFrm *pCn
 |*	Letzte Aenderung	MA 09. Jan. 97
 |*
 |*************************************************************************/
-ULONG CalcDiff( const Point &rPt1, const Point &rPt2 )
+sal_uInt32 CalcDiff( const Point &rPt1, const Point &rPt2 )
 {
 	//Jetzt die Entfernung zwischen den beiden Punkten berechnen.
 	//'Delta' X^2 + 'Delta'Y^2 = 'Entfernung'^2
-	ULONG dX = Max( rPt1.X(), rPt2.X() ) -
+	sal_uInt32 dX = Max( rPt1.X(), rPt2.X() ) -
 			   Min( rPt1.X(), rPt2.X() ),
 		  dY = Max( rPt1.Y(), rPt2.Y() ) -
 			   Min( rPt1.Y(), rPt2.Y() );
@@ -1196,7 +1196,7 @@ const SwCntntFrm *SwLayoutFrm::GetCntntP
 	const SwLayoutFrm *pInside = NULL;
 	USHORT nMaxPage = GetPhyPageNum() + (bDefaultExpand ? 1 : 0);
 	Point aPoint = rPoint;
-	ULONG nDistance = ULONG_MAX;
+	sal_uInt32 nDistance = SAL_MAX_UINT32;
 
 	while ( TRUE ) 	//Sicherheitsschleifchen, damit immer einer gefunden wird.
 	{
@@ -1249,7 +1249,7 @@ const SwCntntFrm *SwLayoutFrm::GetCntntP
 					if( !pInside || ( pInside->IsAnLower( pCntnt ) &&
 						( !pCntnt->IsInFtn() || pInside->IsFtnContFrm() ) ) )
 					{
-						const ULONG nDiff = ::CalcDiff( aCntntPoint, rPoint );
+						const sal_uInt32 nDiff = ::CalcDiff( aCntntPoint, rPoint );
 						BOOL bBetter = nDiff < nDistance;  // Dichter dran
 						if( !pInside )
 						{
@@ -1410,7 +1410,7 @@ void SwPageFrm::GetCntntPosition( const 
 
 	const SwCntntFrm *pAct = pCntnt;
 	Point aAct 		 = rPt;
-	ULONG nDist		 = ULONG_MAX;
+	sal_uInt32 nDist = SAL_MAX_UINT32;
 
 	while ( pCntnt )
 	{
@@ -1437,7 +1437,7 @@ void SwPageFrm::GetCntntPosition( const 
 		else if ( aCntFrm.Right() < rPt.X() )
 			aPoint.X() = aCntFrm.Right();
 
-		const ULONG nDiff = ::CalcDiff( aPoint, rPt );
+		const sal_uInt32 nDiff = ::CalcDiff( aPoint, rPt );
 		if ( nDiff < nDist )
 		{
 			aAct	= aPoint;
--- sw/source/core/unocore/unoobj.cxx	2004-12-07 14:27:22.000000000 +0100
+++ sw/source/core/unocore/unoobj.cxx	2005-01-06 13:55:18.197827274 +0100
@@ -911,14 +911,14 @@ SwFmtColl* SwXTextCursor::GetCurTxtFmtCo
 	sal_Bool bError = sal_False;
 	FOREACHUNOPAM_START(&rPam)
 
-		sal_uInt32 nSttNd = PUNOPAM->GetMark()->nNode.GetIndex(),
+		ULONG nSttNd = PUNOPAM->GetMark()->nNode.GetIndex(),
 			  nEndNd = PUNOPAM->GetPoint()->nNode.GetIndex();
 		xub_StrLen nSttCnt = PUNOPAM->GetMark()->nContent.GetIndex(),
 				nEndCnt = PUNOPAM->GetPoint()->nContent.GetIndex();
 
 		if( nSttNd > nEndNd || ( nSttNd == nEndNd && nSttCnt > nEndCnt ))
 		{
-			sal_uInt32 nTmp = nSttNd; nSttNd = nEndNd; nEndNd = nTmp;
+			ULONG nTmp = nSttNd; nSttNd = nEndNd; nEndNd = nTmp;
 			nTmp = nSttCnt; nSttCnt = nEndCnt; nEndCnt = (sal_uInt16)nTmp;
 		}
 
@@ -929,7 +929,7 @@ SwFmtColl* SwXTextCursor::GetCurTxtFmtCo
 		}
 
 		const SwNodes& rNds = rPam.GetDoc()->GetNodes();
-		for( sal_uInt32 n = nSttNd; n <= nEndNd; ++n )
+		for( ULONG n = nSttNd; n <= nEndNd; ++n )
 		{
 			const SwTxtNode* pNd = rNds[ n ]->GetTxtNode();
 			if( pNd )
--- sw/source/core/unocore/unoobj2.cxx	2004-10-15 12:43:44.000000000 +0200
+++ sw/source/core/unocore/unoobj2.cxx	2005-01-05 15:20:29.486265480 +0100
@@ -1051,14 +1051,14 @@ void SwXTextCursor::GetCrsrAttr(SwPaM& r
 	SwPaM *_pStartCrsr = &rPam;
 	do
 	{
-		sal_uInt32 nSttNd = _pStartCrsr->GetMark()->nNode.GetIndex(),
+		ULONG nSttNd = _pStartCrsr->GetMark()->nNode.GetIndex(),
 					nEndNd = _pStartCrsr->GetPoint()->nNode.GetIndex();
 			xub_StrLen nSttCnt = _pStartCrsr->GetMark()->nContent.GetIndex(),
 					nEndCnt = _pStartCrsr->GetPoint()->nContent.GetIndex();
 
 			if( nSttNd > nEndNd || ( nSttNd == nEndNd && nSttCnt > nEndCnt ))
 			{
-				sal_uInt32 nTmp = nSttNd; nSttNd = nEndNd; nEndNd = nTmp;
+				ULONG nTmp = nSttNd; nSttNd = nEndNd; nEndNd = nTmp;
 				nTmp = nSttCnt; nSttCnt = nEndCnt; nEndCnt = (sal_uInt16)nTmp;
 			}
 
@@ -1071,7 +1071,7 @@ void SwXTextCursor::GetCrsrAttr(SwPaM& r
 
 			// beim 1.Node traegt der Node die Werte in den GetSet ein (Initial)
 			// alle weiteren Nodes werden zum GetSet zu gemergt
-			for( sal_uInt32 n = nSttNd; n <= nEndNd; ++n )
+			for( ULONG n = nSttNd; n <= nEndNd; ++n )
 			{
 				SwNode* pNd = rPam.GetDoc()->GetNodes()[ n ];
 				switch( pNd->GetNodeType() )
--- sw/source/filter/excel/exctools.cxx	2004-08-12 14:46:36.000000000 +0200
+++ sw/source/filter/excel/exctools.cxx	2005-01-05 14:30:53.213047244 +0100
@@ -857,7 +857,7 @@ void XF_Buffer::SetItemSets(UINT16 nCol,
 }
 
 // --------------------------------------------- XF_Buffer::GetNumFormat -
-UINT32 XF_Buffer::GetNumFormat( UINT16 nIndex )
+sal_uInt32 XF_Buffer::GetNumFormat( UINT16 nIndex )
 	{
 //	DBG_ASSERT( nIndex < nCount ,
 //		"+XF_Buffer::GetNumFormat(): das ist zuviel des Guten!" );
@@ -1353,14 +1353,14 @@ void ValueFormBuffer::_NewValueFormat5( 
 	}
 
 //------------------------------------------------------------------------
-UINT32 ValueFormBuffer::__GetValueFormat( UINT16 nExcIndex )
+sal_uInt32 ValueFormBuffer::__GetValueFormat( UINT16 nExcIndex )
 	{
 	Init();
 	return ( this->*_GetValueFormat )( nExcIndex );
 	}
 
 //------------------------------------------------------------------------
-UINT32 ValueFormBuffer::_GetValueFormatX5( UINT16 nExcIndex )
+sal_uInt32 ValueFormBuffer::_GetValueFormatX5( UINT16 nExcIndex )
 	{
 	DBG_ASSERT( nExcIndex < nCount,
 		"+ValueFormBuffer::GetValueFormat(): Da kann ich auch nichts fuer!" );
--- sw/source/filter/excel/excvfbff.hxx	2004-08-12 14:46:49.000000000 +0200
+++ sw/source/filter/excel/excvfbff.hxx	2005-01-05 14:30:53.213047244 +0100
@@ -76,18 +76,18 @@ typedef ULONG				( ValueFormBuffer::*Fkt
 #endif
 
 class ValueFormBuffer
-	{
+{
 	private:
 #if !defined(BLC) && !defined(MAC)
-// MSC will es auf jeden Fall hier
+		// MSC will es auf jeden Fall hier
 		typedef void		( ValueFormBuffer::*Fkt_rString )( String & );
-		typedef ULONG		( ValueFormBuffer::*Fkt_USHORT )( USHORT );
+		typedef sal_uInt32	( ValueFormBuffer::*Fkt_USHORT )( USHORT );
 #endif
 
-		ULONG				*pHandles;		// Array mit Handles...
+		sal_uInt32			*pHandles;		// Array mit Handles...
 		USHORT				nMax;  			// Groesse des Arrays
 		USHORT				nCount;			// Index des naechsten freien Eintrags
-		ULONG				nDefaultHandle;
+		sal_uInt32			nDefaultHandle;
 
 		// nur fuer Excel5
 		static const USHORT nAnzBuiltin;	// bekannte Formate
@@ -100,17 +100,17 @@ class ValueFormBuffer
 		void				Init( void );
 							// fuer 1. Nutzung
 		void				__NewValueFormat( String &rFormString );
-		ULONG				__GetValueFormat( USHORT nExcIndex );
+		sal_uInt32			__GetValueFormat( USHORT nExcIndex );
 							// fuer n-te Nutzung
 		void				_NewValueFormatX( String &rFormString );
 		void				_NewValueFormat5( String &rFormString );
-		ULONG				_GetValueFormatX5( USHORT nExcIndex );
+		sal_uInt32			_GetValueFormatX5( USHORT nExcIndex );
 	public:
 		ValueFormBuffer( const USHORT nSize = 2048 );
 		~ValueFormBuffer();
 
 		inline void			NewValueFormat( String &rFormString );
-		inline ULONG		GetValueFormat( USHORT nExcIndex );
+		inline sal_uInt32	GetValueFormat( USHORT nExcIndex );
 	};
 
 inline void ValueFormBuffer::NewValueFormat( String &rFormString )
@@ -118,7 +118,7 @@ inline void ValueFormBuffer::NewValueFor
 	( this->*_NewValueFormat )( rFormString );
 	}
 
-inline ULONG ValueFormBuffer::GetValueFormat( USHORT nExcIndex )
+inline sal_uInt32 ValueFormBuffer::GetValueFormat( USHORT nExcIndex )
 	{
 	return ( this->*_GetValueFormat )( nExcIndex );
 	}
--- sw/source/filter/excel/excxfbuf.hxx	2004-08-12 14:47:02.000000000 +0200
+++ sw/source/filter/excel/excxfbuf.hxx	2005-01-05 14:30:53.213047244 +0100
@@ -232,7 +232,7 @@ class XF_Buffer
 		inline void		GetItemSets( USHORT nIndex, const SfxItemSet *pTxtAttr,
 							const SfxItemSet *pBoxAttr );
 
-		ULONG			GetNumFormat( USHORT nIndex );
+		sal_uInt32		GetNumFormat( USHORT nIndex );
 		void			SetItemSets( USHORT nCol, USHORT nSR, USHORT nER,
 							USHORT nXF );
 	};
--- sw/source/filter/html/css1atr.cxx	2004-12-16 12:23:38.000000000 +0100
+++ sw/source/filter/html/css1atr.cxx	2005-01-05 14:43:12.242136709 +0100
@@ -2246,7 +2246,7 @@ Writer& OutCSS1_NumBulListStyleOpt( Writ
 //-----------------------------------------------------------------------
 
 void SwHTMLWriter::OutCSS1_FrmFmtOptions( const SwFrmFmt& rFrmFmt,
-										  ULONG nFrmOpts,
+										  sal_uInt32 nFrmOpts,
 										  const SdrObject *pSdrObj,
 										  const SfxItemSet *pItemSet )
 {
--- sw/source/filter/html/htmlatr.cxx	2004-12-07 14:27:22.000000000 +0100
+++ sw/source/filter/html/htmlatr.cxx	2005-01-05 14:44:11.678882115 +0100
@@ -2880,7 +2880,7 @@ Writer& OutHTML_SwTxtNode( Writer& rWrt,
 }
 
 
-ULONG SwHTMLWriter::ToPixel( ULONG nVal ) const
+sal_uInt32 SwHTMLWriter::ToPixel( sal_uInt32 nVal ) const
 {
 	if( Application::GetDefaultDevice() && nVal )
 	{
--- sw/source/filter/html/htmlcss1.cxx	2004-12-16 12:23:38.000000000 +0100
+++ sw/source/filter/html/htmlcss1.cxx	2005-01-05 16:19:41.171433185 +0100
@@ -206,7 +206,7 @@ void SwCSS1Parser::ChgPageDesc( const Sw
 	ASSERT( i<nPageDescs, "Seitenvorlage nicht gefunden" );
 }
 
-SwCSS1Parser::SwCSS1Parser( SwDoc *pD, ULONG aFHeights[7], const String& rBaseURL, BOOL bNewDoc ) :
+SwCSS1Parser::SwCSS1Parser( SwDoc *pD, sal_uInt32 aFHeights[7], const String& rBaseURL, BOOL bNewDoc ) :
     SvxCSS1Parser( pD->GetAttrPool(), rBaseURL, MM50/2,
 				   (USHORT*)&aItemIds, sizeof(aItemIds) / sizeof(USHORT) ),
 	nDropCapCnt( 0 ), bIsNewDoc( bNewDoc ), pDoc( pD ),
@@ -1236,7 +1236,7 @@ BOOL SwCSS1Parser::StyleParsed( const CS
 	return TRUE;
 }
 
-ULONG SwCSS1Parser::GetFontHeight( USHORT nSize ) const
+sal_uInt32 SwCSS1Parser::GetFontHeight( USHORT nSize ) const
 {
 	return aFontHeights[ nSize>6 ? 6 : nSize ];
 }
--- sw/source/filter/html/htmlfld.cxx	2003-12-01 18:25:47.000000000 +0100
+++ sw/source/filter/html/htmlfld.cxx	2005-01-05 14:48:19.437145051 +0100
@@ -429,7 +429,7 @@ void SwHTMLParser::NewField()
 			USHORT nSub = 0;
 
 			SvNumberFormatter *pFormatter =	pDoc->GetNumberFormatter();
-			ULONG nNumFmt;
+			sal_uInt32 nNumFmt;
 			LanguageType eLang;
 			double dValue = GetTableDataOptionsValNum(
 								nNumFmt, eLang, aNumValue, aNumFmt,
@@ -500,7 +500,7 @@ void SwHTMLParser::NewField()
 					nSub |= nExtSub;
 				}
 
-				ULONG nNumFmt = 0;
+				sal_uInt32 nNumFmt = 0;
 				double dValue = 0;
 				if( bHasNumFmt && (DI_SUB_DATE==nExtSub || DI_SUB_TIME==nExtSub) )
 				{
--- sw/source/filter/html/htmlfly.cxx	2004-05-25 17:20:29.000000000 +0200
+++ sw/source/filter/html/htmlfly.cxx	2005-01-06 14:45:29.005244985 +0100
@@ -466,7 +466,7 @@ void SwHTMLWriter::CollectFlyFrms()
 	}
 }
 
-BOOL SwHTMLWriter::OutFlyFrm( ULONG nNdIdx, xub_StrLen nCntntIdx, BYTE nPos, 
+BOOL SwHTMLWriter::OutFlyFrm( sal_uInt32 nNdIdx, xub_StrLen nCntntIdx, BYTE nPos,
							  HTMLOutContext *pContext )
 {
 	BOOL bFlysLeft = FALSE;	// Noch Flys an aktueller Node-Position da?
@@ -629,7 +629,7 @@ void SwHTMLWriter::OutFrmFmt( BYTE nMode
 void SwHTMLWriter::OutFrmFmtOptions( const SwFrmFmt &rFrmFmt,
 									 const String& rAlternateTxt,
 									 ByteString &rEndTags,
-									 ULONG nFrmOpts )
+									 sal_uInt32 nFrmOpts )
 {
 	ByteString sOut;
 	const SfxPoolItem* pItem;
@@ -900,7 +900,7 @@ void SwHTMLWriter::OutFrmFmtOptions( con
 
 Writer& OutHTML_Image( Writer& rWrt, const SwFrmFmt &rFrmFmt,
 					   const String &rGrfName, const String& rAlternateTxt,
-					   const Size &rRealSize, ULONG nFrmOpts,
+					   const Size &rRealSize, sal_uInt32 nFrmOpts,
 					   const sal_Char *pMarkType,
 					   const ImageMap *pAltImgMap )
 {
@@ -1642,7 +1642,7 @@ static Writer & OutHTML_FrmFmtAsImage( W
 
 	aGrfNm = URIHelper::SmartRelToAbs( aGrfNm );
 	Size aSz( 0, 0 );
-	ULONG nFrmFlags = bInCntnr ? HTML_FRMOPTS_GENIMG_CNTNR
+	sal_uInt32 nFrmFlags = bInCntnr ? HTML_FRMOPTS_GENIMG_CNTNR
 								: HTML_FRMOPTS_GENIMG;
 	OutHTML_Image( rWrt, rFrmFmt, aGrfNm, rFrmFmt.GetName(), aSz,
 					HTML_FRMOPTS_GENIMG, pMarkToFrame,
@@ -1705,7 +1705,7 @@ static Writer& OutHTML_FrmFmtGrfNode( Wr
 			rWrt.CopyLocalFileToINet( aGrfNm );
 	}
 
-	ULONG nFrmFlags = bInCntnr ? HTML_FRMOPTS_IMG_CNTNR : HTML_FRMOPTS_IMG;
+	sal_uInt32 nFrmFlags = bInCntnr ? HTML_FRMOPTS_IMG_CNTNR : HTML_FRMOPTS_IMG;
 	if( rHTMLWrt.IsHTMLMode( HTMLMODE_ABS_POS_FLY ) && !bInCntnr )
 		nFrmFlags |= HTML_FRMOPTS_IMG_CSS1;
 	OutHTML_Image( rWrt, rFrmFmt, aGrfNm, pGrfNd->GetAlternateText(),
--- sw/source/filter/html/htmlforw.cxx	2003-12-01 18:26:26.000000000 +0100
+++ sw/source/filter/html/htmlforw.cxx	2005-01-05 14:50:20.998181262 +0100
@@ -443,7 +443,7 @@ void SwHTMLWriter::OutForm( sal_Bool bTa
             aHTMLControls[i]->nNdIdx <= nEndIdx; i++ )
         {
             const SwStartNode *pCntrlStNd =
-                pDoc->GetNodes()[aHTMLControls[i]->nNdIdx]->FindStartNode();
+                pDoc->GetNodes()[ ULONG( aHTMLControls[i]->nNdIdx ) ]->FindStartNode();
 
             if( xCurrentFormComps.is() )
             {
--- sw/source/filter/html/htmlnum.cxx	2004-12-07 14:27:23.000000000 +0100
+++ sw/source/filter/html/htmlnum.cxx	2005-01-05 14:51:27.886647340 +0100
@@ -745,7 +745,7 @@ void SwHTMLWriter::FillNextNumInfo()
 {
 	pNextNumRuleInfo = 0;
 
-	sal_uInt32 nPos = pCurPam->GetPoint()->nNode.GetIndex() + 1;
+	ULONG nPos = pCurPam->GetPoint()->nNode.GetIndex() + 1;
 
 	sal_Bool bDone = sal_False;
 	sal_Bool bTable = sal_False;
@@ -820,7 +820,7 @@ Writer& OutHTML_NumBulListStart( SwHTMLW
 				bStartValue = sal_True;
 				if( rInfo.GetDepth() > 1 )
 				{
-					sal_uInt32 nPos =
+					ULONG nPos =
 						rWrt.pCurPam->GetPoint()->nNode.GetIndex() + 1;
 					do
 					{
--- sw/source/filter/html/htmlsect.cxx	2004-10-15 12:43:46.000000000 +0200
+++ sw/source/filter/html/htmlsect.cxx	2005-01-05 14:41:10.701149922 +0100
@@ -503,7 +503,7 @@ void SwHTMLParser::FixHeaderFooterDistan
 	const SwFmtCntnt& rFlyCntnt = pHdFtFmt->GetCntnt();
 	const SwNodeIndex& rCntntStIdx = *rFlyCntnt.GetCntntIdx();
 
-	sal_uInt32 nPrvNxtIdx;
+	ULONG nPrvNxtIdx;
 	if( bHeader )
 	{
 		nPrvNxtIdx = pDoc->GetNodes()[rCntntStIdx]->EndOfSectionIndex()-1;
@@ -878,7 +878,7 @@ void SwHTMLParser::InsertFlyFrame( const
 /*  */
 
 void SwHTMLParser::MovePageDescAttrs( SwNode *pSrcNd,
-									  sal_uInt32 nDestIdx,
+									  ULONG nDestIdx,
 									  sal_Bool bFmtBreak )
 {
 	SwCntntNode* pDestCntntNd =
--- sw/source/filter/html/htmltabw.cxx	2004-05-03 15:49:32.000000000 +0200
+++ sw/source/filter/html/htmltabw.cxx	2005-01-05 15:23:03.658840412 +0100
@@ -415,7 +415,7 @@ void SwHTMLWrtTable::OutTableCell( SwHTM
 	sal_Bool bHead = sal_False;
 	if( pSttNd )
 	{
-		sal_uInt32 nNdPos = pSttNd->GetIndex()+1;
+		ULONG nNdPos = pSttNd->GetIndex()+1;
 
 		// Art der Zelle (TD/TH) bestimmen
 		SwNode* pNd;
--- sw/source/filter/html/svxcss1.cxx	2003-12-01 18:27:07.000000000 +0100
+++ sw/source/filter/html/svxcss1.cxx	2005-01-05 16:13:52.043667293 +0100
@@ -1062,7 +1062,7 @@ void SvxCSS1Parser::SetBorderWidth( SvxB
 	aBorderLine.SetDistance( aWidths[i+3] );
 }
 
-ULONG SvxCSS1Parser::GetFontHeight( USHORT nSize ) const
+sal_uInt32 SvxCSS1Parser::GetFontHeight( USHORT nSize ) const
 {
 	USHORT nHeight;
 
--- sw/source/filter/html/swcss1.hxx	2001-10-09 16:57:36.000000000 +0200
+++ sw/source/filter/html/swcss1.hxx	2005-01-05 16:15:36.059718777 +0100
@@ -85,7 +85,7 @@ class SwCSS1Parser : public SvxCSS1Parse
 {
 	SwDoc *pDoc;
 
-	ULONG aFontHeights[7];
+	sal_uInt32 aFontHeights[7];
 
 	USHORT nDropCapCnt;
 
@@ -118,13 +118,13 @@ protected:
 							  SfxItemSet& rItemSet,
 							  SvxCSS1PropertyInfo& rPropInfo );
 public:
-	SwCSS1Parser( SwDoc *pDoc, ULONG aFHeight[7], const String& rBaseURL, BOOL bNewDoc );
+	SwCSS1Parser( SwDoc *pDoc, sal_uInt32 aFHeight[7], const String& rBaseURL, BOOL bNewDoc );
 	virtual ~SwCSS1Parser();
 
 	virtual BOOL ParseStyleSheet( const String& rIn );
 
 	// Die Font-Hoehe fuer eine bestimmte Font-Groesse (0-6) ermitteln
-	virtual ULONG GetFontHeight( USHORT nSize ) const;
+	virtual sal_uInt32 GetFontHeight( USHORT nSize ) const;
 
 	// Die aktuelle Font-Liste holen (auch 0 ist erlaubt)
 	virtual const FontList *GetFontList() const;
--- sw/source/filter/html/swhtml.hxx	2004-08-12 14:48:54.000000000 +0200
+++ sw/source/filter/html/swhtml.hxx	2005-01-05 14:42:33.649800753 +0100
@@ -641,7 +641,7 @@ class SwHTMLParser : public SfxHTMLParse
 	void GetULSpaceFromContext( sal_uInt16 &rUpper, sal_uInt16 &rLower ) const;
 
 
-	void MovePageDescAttrs( SwNode *pSrcNd, sal_uInt32 nDestIdx, sal_Bool bFmtBreak );
+	void MovePageDescAttrs( SwNode *pSrcNd, ULONG nDestIdx, sal_Bool bFmtBreak );
 
 	// Behandlung von Tags auf Absatz-Ebene
 
--- sw/source/filter/html/wrthtml.cxx	2004-10-15 12:43:47.000000000 +0200
+++ sw/source/filter/html/wrthtml.cxx	2005-01-05 16:28:39.555385081 +0100
@@ -287,7 +287,7 @@ __EXPORT SwHTMLWriter::~SwHTMLWriter()
 	delete pNumRuleInfo;
 }
 
-sal_uInt32 SwHTMLWriter::WriteStream()
+ULONG SwHTMLWriter::WriteStream()
 {
 	// neue Konfiguration setzen
 	SvxHtmlOptions* pHtmlOptions = SvxHtmlOptions::Get();
@@ -666,7 +666,7 @@ const SwFmtCol *lcl_html_GetFmtCol( cons
 	return pCol;
 }
 
-sal_Bool lcl_html_IsMultiColStart( const SwHTMLWriter& rHTMLWrt, sal_uInt32 nIndex )
+sal_Bool lcl_html_IsMultiColStart( const SwHTMLWriter& rHTMLWrt, ULONG nIndex )
 {
 	sal_Bool bRet = sal_False;
 	const SwSectionNode *pSectNd =
@@ -682,7 +682,7 @@ sal_Bool lcl_html_IsMultiColStart( const
 	return bRet;
 }
 
-sal_Bool lcl_html_IsMultiColEnd( const SwHTMLWriter& rHTMLWrt, sal_uInt32 nIndex )
+sal_Bool lcl_html_IsMultiColEnd( const SwHTMLWriter& rHTMLWrt, ULONG nIndex )
 {
 	sal_Bool bRet = sal_False;
 	const SwEndNode *pEndNd = rHTMLWrt.pDoc->GetNodes()[nIndex]->GetEndNode();
@@ -838,8 +838,8 @@ static Writer& OutHTML_Section( Writer& 
 	const SwSection *pSurrSection = 0;
 	const SwFmtCol *pSurrCol = 0;
 
-	sal_uInt32 nSectSttIdx = rSectNd.GetIndex();
-	sal_uInt32 nSectEndIdx = rSectNd.EndOfSectionIndex();
+	ULONG nSectSttIdx = rSectNd.GetIndex();
+	ULONG nSectEndIdx = rSectNd.EndOfSectionIndex();
 	const SwFmtCol *pCol = lcl_html_GetFmtCol( rHTMLWrt, rSection, *pFmt );
 	if( pCol )
 	{
@@ -1046,8 +1046,8 @@ static void OutBodyColor( const sal_Char
 
 sal_uInt16 SwHTMLWriter::OutHeaderAttrs()
 {
-	sal_uInt32 nIdx = pCurPam->GetPoint()->nNode.GetIndex();
-	sal_uInt32 nEndIdx = pCurPam->GetMark()->nNode.GetIndex();
+	ULONG nIdx = pCurPam->GetPoint()->nNode.GetIndex();
+	ULONG nEndIdx = pCurPam->GetMark()->nNode.GetIndex();
 
 	SwTxtNode *pTxtNd = 0;
 	while( nIdx<=nEndIdx &&
@@ -1121,7 +1121,7 @@ const SwPageDesc *SwHTMLWriter::MakeHead
 	//{
 		// In Nicht-HTML-Dokumenten wird die erste gesetzte Seitenvorlage
 		// exportiert und wenn keine gesetzt ist die Standard-Vorlage
-		sal_uInt32 nNodeIdx = pCurPam->GetPoint()->nNode.GetIndex();
+		ULONG nNodeIdx = pCurPam->GetPoint()->nNode.GetIndex();
 
 		while( nNodeIdx < pDoc->GetNodes().Count() )
 		{
@@ -1505,8 +1505,8 @@ sal_uInt16 SwHTMLWriter::GetHTMLFontSize
 
 // Struktur speichert die aktuellen Daten des Writers zwischen, um
 // einen anderen Dokument-Teil auszugeben, wie z.B. Header/Footer
-HTMLSaveData::HTMLSaveData( SwHTMLWriter& rWriter, sal_uInt32 nStt,
-							sal_uInt32 nEnd, sal_Bool bSaveNum,
+HTMLSaveData::HTMLSaveData( SwHTMLWriter& rWriter, ULONG nStt,
+							ULONG nEnd, sal_Bool bSaveNum,
 	   					 	const SwFrmFmt *pFrmFmt	)
 	: rWrt( rWriter ),
 	pOldPam( rWrt.pCurPam ), pOldEnd( rWrt.GetEndPaM() ),
--- sw/source/filter/html/wrthtml.hxx	2004-08-12 14:49:08.000000000 +0200
+++ sw/source/filter/html/wrthtml.hxx	2005-01-05 16:28:24.754952010 +0100
@@ -260,7 +260,7 @@ class SwHTMLWriter : public Writer
 	void CollectLinkTargets();
 
 protected:
-	sal_uInt32 WriteStream();
+	ULONG WriteStream();
 
 public:
 #if defined(MAC) || defined(UNX)
@@ -588,7 +588,7 @@ struct HTMLSaveData
 	sal_Bool bOldOutFlyFrame : 1;
 	const SwFlyFrmFmt* pOldFlyFmt;
 
-	HTMLSaveData( SwHTMLWriter&, sal_uInt32 nStt, sal_uInt32 nEnd,
+	HTMLSaveData( SwHTMLWriter&, ULONG nStt, ULONG nEnd,
 				  sal_Bool bSaveNum=sal_True,
 		   		  const SwFrmFmt *pFrmFmt=0	);
 	~HTMLSaveData();
--- sw/source/filter/ww8/writerwordglue.cxx	2004-11-29 09:59:09.000000000 +0100
+++ sw/source/filter/ww8/writerwordglue.cxx	2005-01-06 13:25:41.028603441 +0100
@@ -932,7 +932,7 @@ namespace sw
             // tell the Formatter about the new entry
             UINT16 nCheckPos = 0;
             INT16  nType = NUMBERFORMAT_DEFINED;
-            ULONG  nKey = 0;
+            sal_uInt32 nKey = 0;
 
             SwapQuotesInField(rParams);
 
--- sw/source/filter/ww8/wrtw8esh.cxx	2004-12-29 19:00:01.475197880 +0100
+++ sw/source/filter/ww8/wrtw8esh.cxx	2005-01-06 13:22:31.945886476 +0100
@@ -2065,13 +2065,13 @@ SwEscherEx::SwEscherEx(SvStream* pStrm, 
 
         EnterGroup( 0 );
 
-        ULONG nSecondShapeId = pSdrObjs == rWrt.pSdrObjs ? GetShapeID() : 0;
+        sal_uInt32 nSecondShapeId = pSdrObjs == rWrt.pSdrObjs ? GetShapeID() : 0;
 
         // write now all Writer-/DrawObjects
         DrawObjPointerVector aSorted;
         MakeZOrderArrAndFollowIds(pSdrObjs->GetObjArr(), aSorted);
 
-        ULONG nShapeId=0;
+        sal_uInt32 nShapeId=0;
         DrawObjPointerIter aEnd = aSorted.end();
         for (DrawObjPointerIter aIter = aSorted.begin(); aIter != aEnd; ++aIter)
         {
Pouze v sw/source/filter/ww8: .wrtw8nds.cxx.swp
--- sw/source/filter/ww8/ww8par.hxx	2004-12-29 19:00:01.564182426 +0100
+++ sw/source/filter/ww8/ww8par.hxx	2005-01-06 13:21:10.263881729 +0100
@@ -262,7 +262,7 @@ private:
     WW8LFOInfos* pLFOInfos;// D. aus PLF LFO, sortiert genau wie im WW8 Stream
     USHORT       nUniqueList; // current number for creating unique list names
     BYTE* GrpprlHasSprm(USHORT nId, BYTE& rSprms, BYTE nLen);
-    WW8LSTInfo* GetLSTByListId(    ULONG  nIdLst     ) const;
+    WW8LSTInfo* GetLSTByListId(    sal_uInt32  nIdLst     ) const;
     //the rParaSprms returns back the original word paragraph indent
     //sprms which are attached to this numbering level
     bool ReadLVL(SwNumFmt& rNumFmt, SfxItemSet*& rpItemSet, USHORT nLevelStyle,
@@ -1496,7 +1496,7 @@ public:     // eigentlich private, geht 
     eF_ResT Read_F_DocInfo( WW8FieldDesc* pF, String& rStr );
     eF_ResT Read_F_Author( WW8FieldDesc*, String& );
     eF_ResT Read_F_TemplName( WW8FieldDesc*, String& );
-    short GetTimeDatePara(String& rStr, ULONG& rFormat, USHORT &rLang, 
+    short GetTimeDatePara(String& rStr, sal_uInt32& rFormat, USHORT &rLang, 
         int nWhichDefault, bool bHijri = false);
     bool ForceFieldLanguage(SwField &rFld, USHORT nLang);
     eF_ResT Read_F_DateTime( WW8FieldDesc*, String& rStr );
--- sw/source/filter/ww8/ww8par5.cxx	2004-11-29 09:59:09.000000000 +0100
+++ sw/source/filter/ww8/ww8par5.cxx	2005-01-06 13:23:58.027191753 +0100
@@ -706,7 +706,7 @@ String GetWordDefaultDateStringAsUS(SvNu
     return sParams;
 }
 
-short SwWW8ImplReader::GetTimeDatePara(String& rStr, ULONG& rFormat,
+short SwWW8ImplReader::GetTimeDatePara(String& rStr, sal_uInt32& rFormat,
     USHORT &rLang, int nWhichDefault, bool bHijri)
 {
     bool bRTL = false;
@@ -757,7 +757,7 @@ short SwWW8ImplReader::GetTimeDatePara(S
         return bHasTime ? NUMBERFORMAT_DATETIME : NUMBERFORMAT_DATE;
     }
 
-    ULONG nFmtIdx =
+    sal_uInt32 nFmtIdx =
         sw::ms::MSDateTimeFormatToSwFormat(sParams, pFormatter, rLang, bHijri);
     short nNumFmtType = NUMBERFORMAT_UNDEFINED;
     if (nFmtIdx)
@@ -1699,7 +1699,7 @@ eF_ResT SwWW8ImplReader::Read_F_DocInfo(
             break;
     }
 
-    ULONG nFormat = 0;
+    sal_uInt32 nFormat = 0;
 
     USHORT nLang(0);
     if (bDateTime)
@@ -1776,7 +1776,7 @@ eF_ResT SwWW8ImplReader::Read_F_DateTime
         }
     }
 
-    ULONG nFormat = 0;
+    sal_uInt32 nFormat = 0;
 
     USHORT nLang(0);
     short nDT = GetTimeDatePara(rStr, nFormat, nLang, ww::eDATE, bHijri);
--- sw/source/filter/w4w/w4wpar1.cxx	2004-05-25 17:09:40.000000000 +0200
+++ sw/source/filter/w4w/w4wpar1.cxx	2005-01-05 17:46:56.418348786 +0100
@@ -1948,7 +1948,7 @@ void SwW4WParser::Read_DateTime()			// (
 		// tell the Formatter about the new entry
 		UINT16 nCheckPos = 0;
 		INT16  nType = NUMBERFORMAT_DEFINED;
-		ULONG  nKey;
+		sal_uInt32 nKey;
 
 		pFormatter->PutandConvertEntry( *pFirst, nCheckPos, nType, nKey,
 										LANGUAGE_GERMAN,
--- sw/source/filter/xml/swxml.cxx	2004-11-16 11:42:12.000000000 +0100
+++ sw/source/filter/xml/swxml.cxx	2005-01-06 14:27:43.393265951 +0100
@@ -447,7 +447,7 @@ sal_Int32 ReadThroughComponent(
     }
 }
 
-sal_uInt32 XMLReader::Read( SwDoc &rDoc, const String& rBaseURL, SwPaM &rPaM, const String & rName )
+ULONG XMLReader::Read( SwDoc &rDoc, const String& rBaseURL, SwPaM &rPaM, const String & rName )
 {
 	// Get service factory
 	Reference< lang::XMultiServiceFactory > xServiceFactory =
--- sw/source/filter/xml/wrtxml.cxx	2004-11-16 11:42:12.000000000 +0100
+++ sw/source/filter/xml/wrtxml.cxx	2005-01-06 14:30:58.074874740 +0100
@@ -166,7 +166,7 @@ __EXPORT SwXMLWriter::~SwXMLWriter()
 }
 
 
-sal_uInt32 SwXMLWriter::_Write()
+ULONG SwXMLWriter::_Write()
 {
 	// Get service factory
 	Reference< lang::XMultiServiceFactory > xServiceFactory =
@@ -552,12 +552,12 @@ sal_uInt32 SwXMLWriter::_Write()
 	return 0;
 }
 
-sal_uInt32 SwXMLWriter::WriteStorage()
+ULONG SwXMLWriter::WriteStorage()
 {
 	return _Write();
 }
 
-sal_uInt32 SwXMLWriter::Write( SwPaM& rPaM, SfxMedium& rMed,
+ULONG SwXMLWriter::Write( SwPaM& rPaM, SfxMedium& rMed,
 							   const String* pFileName )
 {
 	return IsStgWriter()
--- sw/source/filter/xml/wrtxml.hxx	2004-10-15 12:43:54.000000000 +0200
+++ sw/source/filter/xml/wrtxml.hxx	2005-01-06 14:30:36.001662503 +0100
@@ -81,10 +81,10 @@ namespace com { namespace sun { namespac
 
 class SwXMLWriter : public StgWriter
 {
-	sal_uInt32 _Write();
+	ULONG _Write();
 
 protected:
-	virtual sal_uInt32 WriteStorage();
+	virtual ULONG WriteStorage();
 
 public:
 
--- sw/source/filter/xml/xmlimp.cxx	2004-12-07 14:27:25.000000000 +0100
+++ sw/source/filter/xml/xmlimp.cxx	2005-01-06 14:32:34.101391635 +0100
@@ -843,7 +843,7 @@ void SwXMLImport::endDocument( void )
 		if( !pPos->nContent.GetIndex() )
 		{
 			SwTxtNode* pCurrNd;
-			sal_uInt32 nNodeIdx = pPos->nNode.GetIndex();
+			ULONG nNodeIdx = pPos->nNode.GetIndex();
 			pDoc = pPaM->GetDoc();
 
 			DBG_ASSERT( pPos->nNode.GetNode().IsCntntNode(),
--- sw/source/filter/xml/xmltble.cxx	2004-12-07 14:27:25.000000000 +0100
+++ sw/source/filter/xml/xmltble.cxx	2005-01-06 14:33:24.744695559 +0100
@@ -746,7 +746,7 @@ void SwXMLExport::ExportTableLinesAutoSt
 				pColumn->SetWidthOpt( (sal_uInt16)nColAbsWidth, sal_False );
 			}
 
-			sal_uInt32 nExpPos = 0;
+			ULONG nExpPos = 0;
 			if( rExpCols.Seek_Entry( pColumn, &nExpPos ) )
 			{
 				pColumn->SetStyleName(
--- sw/source/ui/app/docsh2.cxx	2004-12-29 19:00:01.580179648 +0100
+++ sw/source/ui/app/docsh2.cxx	2005-01-05 14:33:46.929959311 +0100
@@ -1593,7 +1593,7 @@ long SwDocShell::DdeSetData( const Strin
  --------------------------------------------------------------------*/
 
 void SwDocShell::FillClass( SvGlobalName * pClassName,
-								   ULONG * pClipFormat,
+								   sal_uInt32 * pClipFormat,
 								   String * pAppName,
 								   String * pLongUserName,
                                    String * pUserName,
--- sw/source/ui/globdoc/globdoc.cxx	2004-10-15 12:44:03.000000000 +0200
+++ sw/source/ui/globdoc/globdoc.cxx	2005-01-05 14:34:14.941108868 +0100
@@ -92,7 +92,7 @@ SwGlobalDocShell::~SwGlobalDocShell()
 }
 
 void SwGlobalDocShell::FillClass( SvGlobalName * pClassName,
-								   ULONG * pClipFormat,
+								   sal_uInt32 * pClipFormat,
 								   String * pAppName,
 								   String * pLongUserName,
                                    String * pUserName,
--- sw/source/ui/inc/dbinsdlg.hxx	2001-06-07 18:20:19.000000000 +0200
+++ sw/source/ui/inc/dbinsdlg.hxx	2005-01-05 16:33:27.134527173 +0100
@@ -123,7 +123,7 @@ struct SwInsDBColumn
 {
 	rtl::OUString sColumn, sUsrNumFmt;
 	sal_Int32 nDBNumFmt;
-	ULONG nUsrNumFmt;
+	sal_uInt32 nUsrNumFmt;
 	LanguageType eUsrNumFmtLng;
 	USHORT nCol;
 	BOOL bHasFmt : 1;
--- sw/source/ui/shells/tabsh.cxx	2004-11-16 11:42:54.000000000 +0100
+++ sw/source/ui/shells/tabsh.cxx	2005-01-06 13:12:35.299214659 +0100
@@ -906,7 +906,7 @@ void SwTableShell::Execute(SfxRequest &r
 
 					if( pItem && 0 != ((SvxNumberInfoItem*)pItem)->GetDelCount() )
 					{
-						const ULONG* pDelArr = ((SvxNumberInfoItem*)
+						const sal_uInt32* pDelArr = ((SvxNumberInfoItem*)
 														pItem)->GetDelArray();
 
 						for ( USHORT i = 0; i < ((SvxNumberInfoItem*)pItem)->GetDelCount(); i++ )
@@ -1662,7 +1662,7 @@ void SwTableShell::ExecNumberFormat(SfxR
 	//	Sprache immer von Cursorposition besorgen
 	LanguageType eLang = rSh.GetCurLang();
 	SvNumberFormatter* pFormatter = rSh.GetNumberFormatter();
-	ULONG nNumberFormat = NUMBERFORMAT_ENTRY_NOT_FOUND;
+	sal_uInt32 nNumberFormat = NUMBERFORMAT_ENTRY_NOT_FOUND;
 	USHORT nFmtType = 0, nOffset = 0;
 
 	switch ( nSlot )
--- sw/source/ui/table/tautofmt.cxx	2004-08-23 11:10:40.000000000 +0200
+++ sw/source/ui/table/tautofmt.cxx	2005-01-05 16:59:35.427143243 +0100
@@ -799,7 +799,7 @@ MAKENUMSTR:
 				String sFmt; LanguageType eLng, eSys;
 				aCurData.GetBoxFmt( (BYTE)nNum ).GetValueFormat( sFmt, eLng, eSys );
 
-				ULONG nKey = 0;
+				sal_uInt32 nKey = 0;
 				if ( eLng == LANGUAGE_SYSTEM && eSys != ::GetAppLanguage() )
 				{
 					//	#53381# wenn System beim Speichern etwas anderes war,
--- sw/source/ui/uiview/viewstat.cxx	2004-12-07 14:27:37.000000000 +0100
+++ sw/source/ui/uiview/viewstat.cxx	2005-01-06 13:09:40.483179491 +0100
@@ -615,7 +615,7 @@ void SwView::GetDrawState(SfxItemSet &rS
 	Beschreibung:
  --------------------------------------------------------------------*/
 
-sal_Bool SwView::HasUIFeature( sal_uInt32 nFeature )
+sal_Bool SwView::HasUIFeature( ULONG nFeature )
 {
     sal_Bool bRet = sal_False;
     switch(nFeature)
--- sw/source/ui/utlui/content.cxx	2004-09-08 17:04:57.000000000 +0200
+++ sw/source/ui/utlui/content.cxx	2005-01-05 16:41:54.131709713 +0100
@@ -2327,7 +2327,7 @@ DragDropMode SwContentTree::NotifyStartD
 
 
 sal_Bool  SwContentTree::NotifyMoving( SvLBoxEntry*  pTarget,
-		SvLBoxEntry*  pEntry, SvLBoxEntry*& , sal_uInt32& )
+		SvLBoxEntry*  pEntry, SvLBoxEntry*& , ULONG& )
 {
 	if(!bDocChgdInDragging)
 	{
@@ -2367,7 +2367,7 @@ sal_Bool  SwContentTree::NotifyMoving( S
 
 
 sal_Bool  SwContentTree::NotifyCopying( SvLBoxEntry*  pTarget,
-		SvLBoxEntry*  pEntry, SvLBoxEntry*& , sal_uInt32& )
+		SvLBoxEntry*  pEntry, SvLBoxEntry*& , ULONG& )
 {
 	if(!bDocChgdInDragging)
 	{
--- sw/source/ui/utlui/numfmtlb.cxx	2004-08-12 15:13:32.000000000 +0200
+++ sw/source/ui/utlui/numfmtlb.cxx	2005-01-05 16:39:53.056672323 +0100
@@ -519,7 +519,7 @@ IMPL_LINK( NumFormatListBox, SelectHdl, 
 
 			if( pItem && 0 != ((SvxNumberInfoItem*)pItem)->GetDelCount() )
 			{
-				const ULONG* pDelArr = ((SvxNumberInfoItem*)pItem)->GetDelArray();
+				const sal_uInt32* pDelArr = ((SvxNumberInfoItem*)pItem)->GetDelArray();
 
 				for ( USHORT i = 0; i < ((SvxNumberInfoItem*)pItem)->GetDelCount(); i++ )
 					pFormatter->DeleteEntry( pDelArr[i] );
--- sw/source/ui/web/wdocsh.cxx	2004-10-15 12:44:18.000000000 +0200
+++ sw/source/ui/web/wdocsh.cxx	2005-01-05 14:34:00.413624427 +0100
@@ -120,7 +120,7 @@ SwWebDocShell::~SwWebDocShell()
 
 
 void SwWebDocShell::FillClass( SvGlobalName * pClassName,
-								   ULONG * pClipFormat,
+								   sal_uInt32 * pClipFormat,
 								   String * pAppName,
 								   String * pLongUserName,
                                    String * pUserName,
