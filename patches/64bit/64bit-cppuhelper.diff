Index: cppuhelper/inc/cppuhelper/implbase_ex.hxx
===================================================================
RCS file: /cvs/udk/cppuhelper/inc/cppuhelper/implbase_ex.hxx,v
retrieving revision 1.3
retrieving revision 1.3.142.1
diff -u -p -u -r1.3 -r1.3.142.1
--- cppuhelper/inc/cppuhelper/implbase_ex.hxx	9 Nov 2001 13:49:15 -0000	1.3
+++ cppuhelper/inc/cppuhelper/implbase_ex.hxx	27 Aug 2004 14:03:45 -0000	1.3.142.1
@@ -104,7 +104,7 @@ struct type_entry
     } m_type;
     /** offset for interface pointer
     */
-    sal_Int32 m_offset;
+    sal_IntPtr m_offset;
 };
 
 /** identical dummy struct for casting class_dataN to class_data
Index: cppuhelper/source/implbase_ex.cxx
===================================================================
RCS file: /cvs/udk/cppuhelper/source/implbase_ex.cxx,v
retrieving revision 1.9
retrieving revision 1.9.12.1
diff -u -p -u -r1.9 -r1.9.12.1
--- cppuhelper/source/implbase_ex.cxx	4 Jun 2004 03:21:16 -0000	1.9
+++ cppuhelper/source/implbase_ex.cxx	27 Aug 2004 14:04:24 -0000	1.9.12.1
@@ -123,7 +123,7 @@ static inline bool isXInterface( rtl_uSt
     return (((OUString const *)&pStr)->equalsAsciiL( RTL_CONSTASCII_STRINGPARAM("com.sun.star.uno.XInterface") ) != sal_False);
 }
 //--------------------------------------------------------------------------------------------------
-static inline void * makeInterface( sal_Int32 nOffset, void * that ) SAL_THROW( () )
+static inline void * makeInterface( sal_IntPtr nOffset, void * that ) SAL_THROW( () )
 {
     return (((char *)that) + nOffset);
 }
@@ -189,7 +189,7 @@ namespace {
 
 bool recursivelyFindType(
     typelib_TypeDescriptionReference const * demandedType,
-    typelib_InterfaceTypeDescription const * type, sal_Int32 * offset)
+    typelib_InterfaceTypeDescription const * type, sal_IntPtr * offset)
 {
     // This code assumes that the vtables of a multiple-inheritance class (the
     // offset amount by which to adjust the this pointer) follow one another in
@@ -249,7 +249,7 @@ static inline void * __queryDeepNoXInter
                     nBaseTypes > 0,
                 "### want to implement XInterface:"
                     " template argument is XInterface?!?!?!" );
-            sal_Int32 offset = pEntries[n].m_offset;
+            sal_IntPtr offset = pEntries[n].m_offset;
             bool found = recursivelyFindType(
                 pDemandedTDR,
                 reinterpret_cast< typelib_InterfaceTypeDescription * >(pTD),
