Index: source/misc/asyncnotification.cxx
===================================================================
RCS file: /cvs/util/comphelper/source/misc/asyncnotification.cxx,v
retrieving revision 1.4
retrieving revision 1.4.6.1
diff -u -p -r1.4 -r1.4.6.1
--- comphelper/source/misc/asyncnotification.cxx	14 Mar 2006 11:40:02 -0000	1.4
+++ comphelper/source/misc/asyncnotification.cxx	20 Mar 2006 21:18:54 -0000	1.4.6.1
@@ -213,7 +213,7 @@ namespace comphelper
     {
         ::osl::MutexGuard aGuard( m_pImpl->aMutex );
 
-        OSL_TRACE( "AsyncEventNotifier(%08X): adding %08X\n", (int)this, (int)_rEvent.get() );
+        OSL_TRACE( "AsyncEventNotifier(%p): adding %p\n", this, _rEvent.get() );
         // remember this event
         m_pImpl->aEvents.push_back( ProcessableEvent( _rEvent, _xProcessor ) );
 
@@ -242,7 +242,7 @@ namespace comphelper
                 xNextProcessor = aEvent.xProcessor;
                 m_pImpl->aEvents.pop_front();
 
-                OSL_TRACE( "AsyncEventNotifier(%08X): popping %08X\n", (int)this, (int)aNextEvent.get() );
+                OSL_TRACE( "AsyncEventNotifier(%p): popping %p\n", this, aNextEvent.get() );
 
                 if ( !aNextEvent.get() )
                     continue;
@@ -253,7 +253,7 @@ namespace comphelper
                 {
                     m_pImpl->m_aDeadProcessors.erase( xNextProcessor );
                     xNextProcessor.clear();
-                    OSL_TRACE( "AsyncEventNotifier(%08X): removing %08X\n", (int)this, (int)aNextEvent.get() );
+                    OSL_TRACE( "AsyncEventNotifier(%p): removing %p\n", this, aNextEvent.get() );
                 }
 
                 // if there was a termination request (->terminate), respect it
