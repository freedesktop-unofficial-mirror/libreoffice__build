Index: basic/inc/sbxvar.hxx
===================================================================
--- basic/inc/sbxvar.hxx.orig	2005-07-05 12:42:32.000000000 +0200
+++ basic/inc/sbxvar.hxx	2005-07-05 15:53:45.192757040 +0200
@@ -505,7 +505,7 @@
 	USHORT		 nHash;			// Hash-ID fuer die Suche
 protected:
 	SbxInfoRef  pInfo;			// Evtl. angeforderte Infos
-	UINT32      nUserData;		// Benutzerdaten fuer Call()
+	sal_IntPtr  nUserData;		// Benutzerdaten fuer Call()
 	SbxObject* 	pParent;  		// aktuell zugeordnetes Objekt
 	virtual ~SbxVariable();
 	virtual BOOL LoadData( SvStream&, USHORT );
@@ -526,8 +526,8 @@
 
 	virtual void SetModified( BOOL );
 
-	UINT32 GetUserData() const 	   { return nUserData; }
-	void   SetUserData( UINT32 n ) { nUserData = n;    }
+	sal_IntPtr GetUserData() const 	   { return nUserData; }
+	void   SetUserData( sal_IntPtr n ) { nUserData = n;    }
 
 	virtual SbxDataType  GetType()  const;
 	virtual SbxClassType GetClass() const;
Index: basic/source/runtime/dllmgr.cxx
===================================================================
--- basic/source/runtime/dllmgr.cxx.orig	2005-07-05 12:42:32.000000000 +0200
+++ basic/source/runtime/dllmgr.cxx	2005-07-05 15:52:27.808521232 +0200
@@ -616,7 +616,7 @@
                     strcpy( pStr, rStr.GetBuffer() ); // #100211# - checked
 					// ist nicht so sauber, aber wir sparen ein Pointerarray
 					DBG_ASSERT(sizeof(UINT32)>=sizeof(char*),"Gleich krachts im Basic");
-					pVar->SetUserData( (UINT32)pStr );
+					pVar->SetUserData( (sal_IntPtr)pStr );
 					*((const char**)pTop) = pStr;
 					pTop += sizeof( char* );
 					}
@@ -668,9 +668,8 @@
 					char* pStr = new char[ pVar->GetString().Len() + 1 ];
 					ByteString aByteStr( pVar->GetString(), gsl_getSystemTextEncoding() );
                     strcpy( pStr, aByteStr.GetBuffer() ); // #100211# - checked
-					// ist nicht so sauber, aber wir sparen ein Pointerarray
-					DBG_ASSERT(sizeof(UINT32)>=sizeof(char*),"Gleich krachts im Basic");
-					pVar->SetUserData( (UINT32)pStr );
+					DBG_ASSERT(sizeof(sal_IntPtr)>=sizeof(char*),"Gleich krachts im Basic");
+					pVar->SetUserData( (sal_IntPtr)pStr );
 					*((const char**)pTop) = pStr;
 					pTop += sizeof( char* );
 					}
