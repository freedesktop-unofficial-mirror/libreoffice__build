Index: sw/inc/ndindex.hxx
===================================================================
RCS file: /cvs/sw/sw/inc/ndindex.hxx,v
retrieving revision 1.2
retrieving revision 1.2.760.1
diff -u -p -u -r1.2 -r1.2.760.1
--- sw/inc/ndindex.hxx	28 Sep 2001 07:03:31 -0000	1.2
+++ sw/inc/ndindex.hxx	9 Sep 2004 09:53:00 -0000	1.2.760.1
@@ -94,8 +94,8 @@ class SwNodeIndex
 
 public:
 	SwNodeIndex( SwNodes& rNds, ULONG nIdx = 0 );
-	SwNodeIndex( const SwNodeIndex &, long nDiff = 0 );
-	SwNodeIndex( const SwNode&, long nDiff = 0 );
+	SwNodeIndex( const SwNodeIndex &, sal_Int32 nDiff = 0 );
+	SwNodeIndex( const SwNode&, sal_Int32 nDiff = 0 );
 	~SwNodeIndex() { Remove(); }
 
 	inline ULONG operator++();
@@ -133,7 +133,7 @@ public:
 
 	// ermoeglicht Zuweisungen ohne Erzeugen eines temporaeren Objektes
 	SwNodeIndex& Assign( SwNodes& rNds, ULONG );
-	SwNodeIndex& Assign( const SwNode& rNd, long nOffset = 0 );
+	SwNodeIndex& Assign( const SwNode& rNd, sal_Int32 nOffset = 0 );
 
 		// Herausgabe des Pointers auf das NodesArray,
 	inline const SwNodes& GetNodes() const;
Index: sw/inc/ndtxt.hxx
===================================================================
RCS file: /cvs/sw/sw/inc/ndtxt.hxx,v
retrieving revision 1.25
retrieving revision 1.25.22.1
diff -u -p -u -r1.25 -r1.25.22.1
--- sw/inc/ndtxt.hxx	11 Jun 2004 15:32:19 -0000	1.25
+++ sw/inc/ndtxt.hxx	9 Sep 2004 09:53:00 -0000	1.25.22.1
@@ -249,7 +249,7 @@ public:
 	void Replace( const SwIndex& rStart, xub_Unicode cCh );
 	void Replace( const SwIndex& rStart, xub_StrLen nLen, const XubString& rText );
 	void ReplaceTextOnly( xub_StrLen nPos, xub_StrLen nLen, const XubString& rText,
-					const ::com::sun::star::uno::Sequence<long>& rOffsets );
+					const ::com::sun::star::uno::Sequence<sal_Int32>& rOffsets );
 
 	// virtuelle Methoden aus dem CntntNode
 	virtual SwCntntFrm *MakeFrm();
Index: sw/inc/undobj.hxx
===================================================================
RCS file: /cvs/sw/sw/inc/undobj.hxx,v
retrieving revision 1.9
retrieving revision 1.9.64.1
diff -u -p -u -r1.9 -r1.9.64.1
--- sw/inc/undobj.hxx	18 May 2004 14:37:55 -0000	1.9
+++ sw/inc/undobj.hxx	9 Sep 2004 09:53:00 -0000	1.9.64.1
@@ -1694,7 +1694,7 @@ public:
 	virtual void Repeat( SwUndoIter& rUndoIter );
 
 	void AddChanges( const SwTxtNode& rTNd, xub_StrLen nStart, xub_StrLen nLen,
-		 			::com::sun::star::uno::Sequence <long>& rOffsets );
+		 			::com::sun::star::uno::Sequence <sal_Int32>& rOffsets );
 	BOOL HasData() const {return 0 != pData; }
 };
 
Index: sw/source/core/access/acccontext.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/access/acccontext.cxx,v
retrieving revision 1.47
retrieving revision 1.47.20.1
diff -u -p -u -r1.47 -r1.47.20.1
--- sw/source/core/access/acccontext.cxx	16 Jun 2004 09:29:33 -0000	1.47
+++ sw/source/core/access/acccontext.cxx	9 Sep 2004 09:53:01 -0000	1.47.20.1
@@ -665,7 +665,7 @@ sal_Int32 SAL_CALL SwAccessibleContext::
 }
 
 Reference< XAccessible> SAL_CALL
-	SwAccessibleContext::getAccessibleChild( long nIndex )
+	SwAccessibleContext::getAccessibleChild( sal_Int32 nIndex )
         throw (::com::sun::star::uno::RuntimeException,
 				::com::sun::star::lang::IndexOutOfBoundsException)
 {
Index: sw/source/core/access/acccontext.hxx
===================================================================
RCS file: /cvs/sw/sw/source/core/access/acccontext.hxx,v
retrieving revision 1.33
retrieving revision 1.33.520.1
diff -u -p -u -r1.33 -r1.33.520.1
--- sw/source/core/access/acccontext.hxx	12 Jun 2003 08:06:50 -0000	1.33
+++ sw/source/core/access/acccontext.hxx	9 Sep 2004 09:53:01 -0000	1.33.520.1
@@ -262,12 +262,12 @@ public:
 	//=====  XAccessibleContext  ==============================================
 
     ///	Return the number of currently visible children.
-    virtual long SAL_CALL getAccessibleChildCount (void)
+    virtual sal_Int32 SAL_CALL getAccessibleChildCount (void)
         throw (::com::sun::star::uno::RuntimeException);
 
     ///	Return the specified child or NULL if index is invalid.
     virtual ::com::sun::star::uno::Reference< ::com::sun::star::accessibility::XAccessible> SAL_CALL
-    	getAccessibleChild (long nIndex)
+    	getAccessibleChild (sal_Int32 nIndex)
         throw (::com::sun::star::uno::RuntimeException,
 				::com::sun::star::lang::IndexOutOfBoundsException);
 
Index: sw/source/core/access/accdoc.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/access/accdoc.cxx,v
retrieving revision 1.23
retrieving revision 1.23.538.1
diff -u -p -u -r1.23 -r1.23.538.1
--- sw/source/core/access/accdoc.cxx	22 May 2003 12:50:41 -0000	1.23
+++ sw/source/core/access/accdoc.cxx	9 Sep 2004 09:53:01 -0000	1.23.538.1
@@ -219,7 +219,7 @@ sal_Int32 SAL_CALL SwAccessibleDocumentB
 }
 
 Reference< XAccessible> SAL_CALL 
-	SwAccessibleDocumentBase::getAccessibleChild( long nIndex )
+	SwAccessibleDocumentBase::getAccessibleChild( sal_Int32 nIndex )
         throw (::com::sun::star::uno::RuntimeException,
 				::com::sun::star::lang::IndexOutOfBoundsException)
 {
Index: sw/source/core/access/accdoc.hxx
===================================================================
RCS file: /cvs/sw/sw/source/core/access/accdoc.hxx,v
retrieving revision 1.16
retrieving revision 1.16.538.1
diff -u -p -u -r1.16 -r1.16.538.1
--- sw/source/core/access/accdoc.hxx	22 May 2003 12:50:53 -0000	1.16
+++ sw/source/core/access/accdoc.hxx	9 Sep 2004 09:53:02 -0000	1.16.538.1
@@ -106,12 +106,12 @@ public:
 	//=====  XAccessibleContext  ==============================================
 
     ///	Return the number of currently visible children.
-    virtual long SAL_CALL getAccessibleChildCount (void)
+    virtual sal_Int32 SAL_CALL getAccessibleChildCount (void)
         throw (::com::sun::star::uno::RuntimeException);
 
     ///	Return the specified child or NULL if index is invalid.
     virtual ::com::sun::star::uno::Reference< ::com::sun::star::accessibility::XAccessible> SAL_CALL
-    	getAccessibleChild (long nIndex)
+    	getAccessibleChild (sal_Int32 nIndex)
         throw (::com::sun::star::uno::RuntimeException,
 				::com::sun::star::lang::IndexOutOfBoundsException);
 
Index: sw/source/core/docnode/ndindex.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/docnode/ndindex.cxx,v
retrieving revision 1.2
retrieving revision 1.2.574.1
diff -u -p -u -r1.2 -r1.2.574.1
--- sw/source/core/docnode/ndindex.cxx	17 Apr 2003 13:56:15 -0000	1.2
+++ sw/source/core/docnode/ndindex.cxx	9 Sep 2004 09:53:02 -0000	1.2.574.1
@@ -106,7 +106,7 @@ SwNodeIndex::SwNodeIndex( SwNodes& rNds,
 }
 
 
-SwNodeIndex::SwNodeIndex( const SwNodeIndex& rIdx, long nDiff )
+SwNodeIndex::SwNodeIndex( const SwNodeIndex& rIdx, sal_Int32 nDiff )
 	: pNext( 0 ), pPrev( 0 )
 {
 	if( nDiff )
@@ -121,7 +121,7 @@ SwNodeIndex::SwNodeIndex( const SwNodeIn
 }
 
 
-SwNodeIndex::SwNodeIndex( const SwNode& rNd, long nDiff )
+SwNodeIndex::SwNodeIndex( const SwNode& rNd, sal_Int32 nDiff )
 	: pNext( 0 ), pPrev( 0 )
 {
 	if( nDiff )
@@ -180,7 +180,7 @@ SwNodeIndex& SwNodeIndex::Assign( SwNode
 	return *this;
 }
 
-SwNodeIndex& SwNodeIndex::Assign( const SwNode& rNd, long nOffset )
+SwNodeIndex& SwNodeIndex::Assign( const SwNode& rNd, sal_Int32 nOffset )
 {
 	if( &pNd->GetNodes() != &rNd.GetNodes() )
 	{
Index: sw/source/core/inc/scriptinfo.hxx
===================================================================
RCS file: /cvs/sw/sw/source/core/inc/scriptinfo.hxx,v
retrieving revision 1.4
retrieving revision 1.4.94.1
diff -u -p -u -r1.4 -r1.4.94.1
--- sw/source/core/inc/scriptinfo.hxx	27 Apr 2004 13:42:22 -0000	1.4
+++ sw/source/core/inc/scriptinfo.hxx	9 Sep 2004 09:53:02 -0000	1.4.94.1
@@ -245,7 +245,7 @@ public:
     USHORT HasKana( xub_StrLen nStart, const xub_StrLen nEnd ) const;
 
     // modifies the kerning array according to a given compress value
-    long Compress( long* pKernArray, xub_StrLen nIdx, xub_StrLen nLen,
+    long Compress( sal_Int32* pKernArray, xub_StrLen nIdx, xub_StrLen nLen,
                    const USHORT nCompress, const USHORT nFontHeight,
                    Point* pPoint = NULL ) const;
 
@@ -265,7 +265,7 @@ public:
                 The value which has to be added to a kashida opportunity.
     @return The number of kashida opportunities in the given range
 */
-    USHORT KashidaJustify( long* pKernArray ,long* pScrArray,
+    USHORT KashidaJustify( sal_Int32* pKernArray ,sal_Int32* pScrArray,
                            xub_StrLen nIdx, xub_StrLen nLen,
                            USHORT nSpace = 0 ) const;
 
@@ -296,8 +296,8 @@ public:
                 The value which has to be added to the cells.
     @return The number of extra spaces in the given range
 */
-    static USHORT ThaiJustify( const XubString& rTxt, long* pKernArray,
-                               long* pScrArray, xub_StrLen nIdx,
+    static USHORT ThaiJustify( const XubString& rTxt, sal_Int32* pKernArray,
+                               sal_Int32* pScrArray, xub_StrLen nIdx,
                                xub_StrLen nLen, USHORT nSpace = 0 );
 
     static SwScriptInfo* GetScriptInfo( const SwTxtNode& rNode,
Index: sw/source/core/text/porlay.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/text/porlay.cxx,v
retrieving revision 1.48
retrieving revision 1.48.94.1
diff -u -p -u -r1.48 -r1.48.94.1
--- sw/source/core/text/porlay.cxx	27 Apr 2004 13:42:37 -0000	1.48
+++ sw/source/core/text/porlay.cxx	9 Sep 2004 09:53:03 -0000	1.48.94.1
@@ -1471,7 +1471,7 @@ USHORT SwScriptInfo::HasKana( xub_StrLen
  *                      SwScriptInfo::Compress()
  *************************************************************************/
 
-long SwScriptInfo::Compress( long* pKernArray, xub_StrLen nIdx, xub_StrLen nLen,
+long SwScriptInfo::Compress( sal_Int32* pKernArray, xub_StrLen nIdx, xub_StrLen nLen,
                              const USHORT nCompress, const USHORT nFontHeight,
                              Point* pPoint ) const
 {
@@ -1585,7 +1585,7 @@ long SwScriptInfo::Compress( long* pKern
  *                      SwScriptInfo::KashidaJustify()
  *************************************************************************/
 
-USHORT SwScriptInfo::KashidaJustify( long* pKernArray, long* pScrArray,
+USHORT SwScriptInfo::KashidaJustify( sal_Int32* pKernArray, sal_Int32* pScrArray,
                                      xub_StrLen nStt, xub_StrLen nLen,
                                      USHORT nSpace ) const
 {
@@ -1672,8 +1672,8 @@ sal_Bool SwScriptInfo::IsArabicLanguage(
  *                      SwScriptInfo::ThaiJustify()
  *************************************************************************/
 
-USHORT SwScriptInfo::ThaiJustify( const XubString& rTxt, long* pKernArray,
-                                  long* pScrArray, xub_StrLen nStt,
+USHORT SwScriptInfo::ThaiJustify( const XubString& rTxt, sal_Int32* pKernArray,
+                                  sal_Int32* pScrArray, xub_StrLen nStt,
                                   xub_StrLen nLen, USHORT nSpace )
 {
     ASSERT( nStt + nLen <= rTxt.Len(), "String in ThaiJustify too small" )
Index: sw/source/core/txtnode/fntcache.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/txtnode/fntcache.cxx,v
retrieving revision 1.76
retrieving revision 1.76.270.1
diff -u -p -u -r1.76 -r1.76.270.1
--- sw/source/core/txtnode/fntcache.cxx	25 Nov 2003 10:46:47 -0000	1.76
+++ sw/source/core/txtnode/fntcache.cxx	9 Sep 2004 09:53:03 -0000	1.76.270.1
@@ -1018,7 +1018,7 @@ void SwFntObj::DrawText( SwDrawTextInfo 
         if ( pGrid && GRID_LINES_CHARS == pGrid->GetGridType() )
         {
             const USHORT nGridWidth = pGrid->GetBaseHeight();
-            long* pKernArray = new long[rInf.GetLen()];
+            sal_Int32* pKernArray = new sal_Int32[rInf.GetLen()];
 
             if ( pPrinter )
                 pPrinter->GetTextArray( rInf.GetText(), pKernArray,
@@ -1119,7 +1119,7 @@ void SwFntObj::DrawText( SwDrawTextInfo 
         // Simple kerning is handled by DrawStretchText
         if( rInf.GetSpace() || rInf.GetKanaComp() )
         {
-            long *pKernArray = new long[ rInf.GetLen() ];
+            sal_Int32 *pKernArray = new sal_Int32[ rInf.GetLen() ];
             rInf.GetOut().GetTextArray( rInf.GetText(), pKernArray,
                                        rInf.GetIdx(), rInf.GetLen() );
 
@@ -1330,12 +1330,12 @@ void SwFntObj::DrawText( SwDrawTextInfo 
         BOOL bBullet = rInf.GetBullet();
         if( bSymbol )
             bBullet = FALSE;
-        long *pKernArray = new long[ rInf.GetLen() ];
+        sal_Int32 *pKernArray = new sal_Int32[ rInf.GetLen() ];
         CreateScrFont( *rInf.GetShell(), rInf.GetOut() );
         long nScrPos;
 
         // get screen array
-        long* pScrArray = new long[ rInf.GetLen() ];
+        sal_Int32* pScrArray = new sal_Int32[ rInf.GetLen() ];
         rInf.GetOut().GetTextArray( rInf.GetText(), pScrArray,
                                     rInf.GetIdx(), rInf.GetLen() );
 
@@ -1902,7 +1902,7 @@ Size SwFntObj::GetTextSize( SwDrawTextIn
 		aTxtSize.Width() = pPrinter->GetTextWidth( rInf.GetText(),
                                                    rInf.GetIdx(), nLn );
 		aTxtSize.Height() = pPrinter->GetTextHeight();
-		long *pKernArray = new long[nLn];
+		sal_Int32 *pKernArray = new sal_Int32[nLn];
         CreateScrFont( *rInf.GetShell(), rInf.GetOut() );
         if( !GetScrFont()->IsSameInstance( rInf.GetOut().GetFont() ) )
             rInf.GetOut().SetFont( *pScrFont );
@@ -1920,7 +1920,7 @@ Size SwFntObj::GetTextSize( SwDrawTextIn
             nScrPos = pKernArray[ nLn - 1 ];
         else
         {
-            long* pScrArray = new long[ rInf.GetLen() ];
+            sal_Int32* pScrArray = new sal_Int32[ rInf.GetLen() ];
             rInf.GetOut().GetTextArray( rInf.GetText(), pScrArray,
                                         rInf.GetIdx(), rInf.GetLen() );
             nScrPos = pScrArray[ 0 ];
@@ -1971,7 +1971,7 @@ Size SwFntObj::GetTextSize( SwDrawTextIn
             rInf.GetOut().SetFont( *pPrtFont );
 		if( bCompress )
 		{
-			long *pKernArray = new long[nLn];
+			sal_Int32 *pKernArray = new sal_Int32[nLn];
             rInf.GetOut().GetTextArray( rInf.GetText(), pKernArray,
                                         rInf.GetIdx(), nLn );
             rInf.SetKanaDiff( rInf.GetScriptInfo()->Compress( pKernArray,
@@ -2011,7 +2011,7 @@ xub_StrLen SwFntObj::GetCrsrOfst( SwDraw
 		nKern -= nSpaceAdd;
 		nSpaceAdd = 0;
 	}
-    long *pKernArray = new long[ rInf.GetLen() ];
+    sal_Int32 *pKernArray = new sal_Int32[ rInf.GetLen() ];
 
     if ( pPrinter )
     {
@@ -2329,7 +2329,7 @@ xub_StrLen SwFont::GetTxtBreak( SwDrawTe
         {
             const USHORT nGridWidth = pGrid->GetBaseHeight();
 
-            long* pKernArray = new long[rInf.GetLen()];
+            sal_Int32* pKernArray = new sal_Int32[rInf.GetLen()];
             rInf.GetOut().GetTextArray( rInf.GetText(), pKernArray,
                                         rInf.GetIdx(), rInf.GetLen() );
 
@@ -2431,7 +2431,7 @@ xub_StrLen SwFont::GetTxtBreak( SwDrawTe
 			nLn = 1;
 		else if( nLn > 2 * nTxtBreak )
 			nLn = 2 * nTxtBreak;
-		long *pKernArray = new long[ nLn ];
+		sal_Int32 *pKernArray = new sal_Int32[ nLn ];
 		rInf.GetOut().GetTextArray( rInf.GetText(), pKernArray,
 									rInf.GetIdx(), nLn );
         if( rInf.GetScriptInfo()->Compress( pKernArray, rInf.GetIdx(), nLn,
Index: sw/source/core/txtnode/txtedt.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/txtnode/txtedt.cxx,v
retrieving revision 1.53
retrieving revision 1.53.92.1
diff -u -p -u -r1.53 -r1.53.92.1
--- sw/source/core/txtnode/txtedt.cxx	27 Apr 2004 15:39:27 -0000	1.53
+++ sw/source/core/txtnode/txtedt.cxx	9 Sep 2004 09:53:04 -0000	1.53.92.1
@@ -628,12 +628,12 @@ BOOL SwScanner::NextWord()
                 pBreakIt->xBreak->getScriptType( rText, nBegin );
 
         XubString aTmpWord = rText.Copy( nBegin, aBound.endPos - nBegin );
-        const long nScriptEnd = nBegin +
+        const sal_Int32 nScriptEnd = nBegin +
             pBreakIt->xBreak->endOfScript( aTmpWord, 0, nCurrScript );
         const long nEnd = Min( aBound.endPos, nScriptEnd );
 
         // restrict word start to last script change position
-        long nScriptBegin = 0;
+        sal_Int32 nScriptBegin = 0;
         if ( aBound.startPos < nBegin )
         {
             // search from nBegin backwards until the next script change
@@ -651,7 +651,7 @@ BOOL SwScanner::NextWord()
         const USHORT nCurrScript =
                 pBreakIt->xBreak->getScriptType( rText, aBound.startPos );
         XubString aTmpWord = rText.Copy( aBound.startPos, aBound.endPos - aBound.startPos );
-        const long nScriptEnd = aBound.startPos +
+        const sal_Int32 nScriptEnd = aBound.startPos +
             pBreakIt->xBreak->endOfScript( aTmpWord, 0, nCurrScript );
         const long nEnd = Min( aBound.endPos, nScriptEnd );
         nBegin = (xub_StrLen)aBound.startPos;
@@ -1498,7 +1498,7 @@ void SwTxtNode::TransliterateText( utl::
 			}
 			xub_StrLen nLen = nEndPos - nStart;
 
-			Sequence <long> aOffsets;
+			Sequence <sal_Int32> aOffsets;
 			String sChgd( rTrans.transliterate( aText, nLang, nStart, nLen,
 													&aOffsets ));
 			if( !aText.Equals( sChgd, nStart, nLen ) )
@@ -1515,12 +1515,12 @@ void SwTxtNode::TransliterateText( utl::
 
 void SwTxtNode::ReplaceTextOnly( xub_StrLen nPos, xub_StrLen nLen,
 								const XubString& rText,
-								const Sequence<long>& rOffsets )
+								const Sequence<sal_Int32>& rOffsets )
 {
 	aText.Replace( nPos, nLen, rText );
 
 	xub_StrLen nTLen = rText.Len();
-	const long* pOffsets = rOffsets.getConstArray();
+	const sal_Int32* pOffsets = rOffsets.getConstArray();
 	// now look for no 1-1 mapping -> move the indizies!
 	xub_StrLen nI, nMyOff;
 	for( nI = 0, nMyOff = nPos; nI < nTLen; ++nI, ++nMyOff )
Index: sw/source/core/undo/unovwr.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/undo/unovwr.cxx,v
retrieving revision 1.12
retrieving revision 1.12.64.1
diff -u -p -u -r1.12 -r1.12.64.1
--- sw/source/core/undo/unovwr.cxx	18 May 2004 14:08:58 -0000	1.12
+++ sw/source/core/undo/unovwr.cxx	9 Sep 2004 09:53:05 -0000	1.12.64.1
@@ -408,7 +408,7 @@ struct _UndoTransliterate_Data
 	String sText;
 	_UndoTransliterate_Data* pNext;
 	SwHistory* pHistory;
-	Sequence <long>* pOffsets;
+	Sequence <sal_Int32>* pOffsets;
 	ULONG nNdIdx;
 	xub_StrLen nStart, nLen;
 
@@ -475,7 +475,7 @@ void SwUndoTransliterate::Repeat( SwUndo
 
 void SwUndoTransliterate::AddChanges( const SwTxtNode& rTNd,
 					xub_StrLen nStart, xub_StrLen nLen,
-		 			::com::sun::star::uno::Sequence <long>& rOffsets )
+		 			::com::sun::star::uno::Sequence <sal_Int32>& rOffsets )
 {
 	long nOffsLen = rOffsets.getLength();
 	_UndoTransliterate_Data* pNew = new _UndoTransliterate_Data(
@@ -487,17 +487,17 @@ void SwUndoTransliterate::AddChanges( co
 		pData = pNew;
 	pLastData = pNew;
 
-	const long* pOffsets = rOffsets.getConstArray();
+	const sal_Int32* pOffsets = rOffsets.getConstArray();
 	// where did we need less memory ?
 	// check for 1-1 mappings:
 	BOOL bOneToOne = TRUE;
-	const long* p = pOffsets;
+	const sal_Int32* p = pOffsets;
 	for( long n = 0; n < nOffsLen; ++n, ++p )
 		if( *p != ( nStart + n ))
 		{
 			// create the Offset array
-			pNew->pOffsets = new Sequence <long> ( nLen );
-			long* pIdx = pNew->pOffsets->getArray();
+			pNew->pOffsets = new Sequence <sal_Int32> ( nLen );
+			sal_Int32* pIdx = pNew->pOffsets->getArray();
 			p = pOffsets;
 			long nMyOff, nNewVal = nStart;
 			for( n = 0, nMyOff = nStart; n < nOffsLen; ++p, ++n, ++nMyOff )
@@ -551,12 +551,12 @@ void _UndoTransliterate_Data::SetChangeA
 	SwTxtNode* pTNd = rDoc.GetNodes()[ nNdIdx ]->GetTxtNode();
 	if( pTNd )
 	{
-		Sequence <long> aOffsets( pOffsets ? pOffsets->getLength() : nLen );
+		Sequence <sal_Int32> aOffsets( pOffsets ? pOffsets->getLength() : nLen );
 		if( pOffsets )
 			aOffsets = *pOffsets;
 		else
 		{
-			long* p = aOffsets.getArray();
+			sal_Int32* p = aOffsets.getArray();
 			for( xub_StrLen n = 0; n < nLen; ++n, ++p )
 				*p = n + nStart;
 		}
Index: sw/source/core/unocore/unosett.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/unocore/unosett.cxx,v
retrieving revision 1.37
retrieving revision 1.37.62.1
diff -u -p -u -r1.37 -r1.37.62.1
--- sw/source/core/unocore/unosett.cxx	25 May 2004 15:07:14 -0000	1.37
+++ sw/source/core/unocore/unosett.cxx	9 Sep 2004 09:53:05 -0000	1.37.62.1
@@ -1123,7 +1123,7 @@ void SwXLineNumberingProperties::setProp
 				{
 					INT32 nVal;
 					aValue >>= nVal;
-					aInfo.SetPosFromLeft(Min(MM100_TO_TWIP(nVal), sal_Int32(0xffff)));
+					aInfo.SetPosFromLeft(Min((sal_Int32)MM100_TO_TWIP(nVal), sal_Int32(0xffff)));
 				}
 				break;
 				case WID_INTERVAL   :
Index: sw/source/filter/ww8/wrtw8esh.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/ww8/wrtw8esh.cxx,v
retrieving revision 1.77
retrieving revision 1.77.8.1
diff -u -p -u -r1.77 -r1.77.8.1
--- sw/source/filter/ww8/wrtw8esh.cxx	17 Jun 2004 13:47:45 -0000	1.77
+++ sw/source/filter/ww8/wrtw8esh.cxx	9 Sep 2004 09:53:06 -0000	1.77.8.1
@@ -564,7 +564,7 @@ bool RTLGraphicsHack(long &rLeft, long n
     return bRet;
 }
 
-bool RTLDrawingsHack(long &rLeft, long nWidth, 
+bool RTLDrawingsHack(sal_Int32 &rLeft, long nWidth, 
     SwHoriOrient eHoriOri, SwRelationOrient eHoriRel, SwTwips nPageLeft,
     SwTwips nPageRight, SwTwips nPageSize)
 {
@@ -589,14 +589,14 @@ bool RTLDrawingsHack(long &rLeft, long n
     return bRet;
 }
 
-bool SwWW8Writer::MiserableRTLFrmFmtHack(long &rLeft, long &rRight,
+bool SwWW8Writer::MiserableRTLFrmFmtHack(sal_Int32 &rLeft, sal_Int32 &rRight,
     const sw::Frame &rFrmFmt)
 {
     //Require nasty bidi swap
     if (FRMDIR_HORI_RIGHT_TOP != pDoc->GetTextDirection(rFrmFmt.GetPosition()))
         return false;
 
-    long nWidth = rRight - rLeft;
+    sal_Int32 nWidth = rRight - rLeft;
     SwTwips nPageLeft, nPageRight;
     SwTwips nPageSize = CurrentPageWidth(nPageLeft, nPageRight);
 
@@ -614,7 +614,7 @@ bool SwWW8Writer::MiserableRTLFrmFmtHack
     }
     else
     {
-        if (RTLGraphicsHack(rLeft, nWidth, rHOr.GetHoriOrient(),
+        if (RTLGraphicsHack((long)rLeft, nWidth, rHOr.GetHoriOrient(),
             rHOr.GetRelationOrient(), nPageLeft, nPageRight, nPageSize))
         {
             bRet = true;
@@ -849,7 +849,7 @@ bool WW8_WrPlcTxtBoxes::WriteTxt(SwWW8Wr
 {
     bool bRet = false;
     rWrt.bInWriteEscher = true;
-    long& rccp=TXT_TXTBOX == nTyp ? rWrt.pFib->ccpTxbx : rWrt.pFib->ccpHdrTxbx;
+    sal_Int32& rccp=TXT_TXTBOX == nTyp ? rWrt.pFib->ccpTxbx : rWrt.pFib->ccpHdrTxbx;
 
     bRet = WriteGenericTxt( rWrt, nTyp, rccp );
 
Index: sw/source/filter/ww8/wrtw8sty.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/ww8/wrtw8sty.cxx,v
retrieving revision 1.33
retrieving revision 1.33.64.1
diff -u -p -u -r1.33 -r1.33.64.1
--- sw/source/filter/ww8/wrtw8sty.cxx	25 May 2004 15:11:16 -0000	1.33
+++ sw/source/filter/ww8/wrtw8sty.cxx	9 Sep 2004 09:53:06 -0000	1.33.64.1
@@ -1765,7 +1765,7 @@ void WW8_WrPlcPostIt::Append( WW8_CP nCp
 }
 
 bool WW8_WrPlcSubDoc::WriteGenericTxt(SwWW8Writer& rWrt, BYTE nTTyp, 
-    long& rCount)
+    sal_Int32& rCount)
 {
     bool bRet = false;
     USHORT nLen = aCntnt.Count();
@@ -1862,7 +1862,7 @@ bool WW8_WrPlcSubDoc::WriteGenericTxt(Sw
 }
 
 void WW8_WrPlcSubDoc::WriteGenericPlc( SwWW8Writer& rWrt, BYTE nTTyp,
-    long& rTxtStart, long& rTxtCount, long& rRefStart, long& rRefCount ) const
+    WW8_FC& rTxtStart, sal_Int32& rTxtCount, WW8_FC& rRefStart, sal_Int32& rRefCount ) const
 {
     typedef ::std::vector<String>::iterator myiter;
 
Index: sw/source/filter/ww8/wrtww8.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/ww8/wrtww8.cxx,v
retrieving revision 1.67
retrieving revision 1.67.8.1
diff -u -p -u -r1.67 -r1.67.8.1
--- sw/source/filter/ww8/wrtww8.cxx	17 Jun 2004 13:48:16 -0000	1.67
+++ sw/source/filter/ww8/wrtww8.cxx	9 Sep 2004 09:53:06 -0000	1.67.8.1
@@ -752,7 +752,7 @@ bool WW8_WrPlcFld::Write(SwWW8Writer& rW
     if( WW8_WrPlc1::Count() <= 1 )
         return false;
 
-    long *pfc, *plc;
+    sal_Int32 *pfc, *plc;
     switch (nTxtTyp)
     {
         case TXT_MAINTEXT:
Index: sw/source/filter/ww8/wrtww8.hxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/ww8/wrtww8.hxx,v
retrieving revision 1.59
retrieving revision 1.59.96.1
diff -u -p -u -r1.59 -r1.59.96.1
--- sw/source/filter/ww8/wrtww8.hxx	27 Apr 2004 14:12:50 -0000	1.59
+++ sw/source/filter/ww8/wrtww8.hxx	9 Sep 2004 09:53:07 -0000	1.59.96.1
@@ -704,7 +704,7 @@ public:
     USHORT DupNumRuleWithLvlStart(const SwNumRule *pRule,BYTE nLvl,USHORT nVal);
 
     SwTwips CurrentPageWidth(SwTwips &rLeft, SwTwips &rRight) const;
-    bool MiserableRTLFrmFmtHack(long &rLeft, long &rRight, 
+    bool MiserableRTLFrmFmtHack(sal_Int32 &rLeft, sal_Int32 &rRight, 
         const sw::Frame &rFrmFmt);
     void InsUInt16( UINT16 n )      { SwWW8Writer::InsUInt16( *pO, n ); }
     void InsUInt32( UINT32 n )      { SwWW8Writer::InsUInt32( *pO, n ); }
@@ -758,9 +758,9 @@ protected:
     WW8_WrPlcSubDoc();
     virtual ~WW8_WrPlcSubDoc();
 
-    bool WriteGenericTxt(SwWW8Writer& rWrt, BYTE nTTyp, long& rCount);
-    void WriteGenericPlc( SwWW8Writer& rWrt, BYTE nTTyp, long& rTxtStt, 
-        long& rTxtCnt, long& rRefStt, long& rRefCnt ) const;
+    bool WriteGenericTxt(SwWW8Writer& rWrt, BYTE nTTyp, sal_Int32& rCount);
+    void WriteGenericPlc( SwWW8Writer& rWrt, BYTE nTTyp, WW8_FC& rTxtStt, 
+        sal_Int32& rTxtCnt, WW8_FC& rRefStt, sal_Int32& rRefCnt ) const;
 
     virtual const SvULongs* GetShapeIdArr() const;
 };
Index: sw/source/filter/ww8/ww8glsy.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/ww8/ww8glsy.cxx,v
retrieving revision 1.18
retrieving revision 1.18.238.1
diff -u -p -u -r1.18 -r1.18.238.1
--- sw/source/filter/ww8/ww8glsy.cxx	13 Jan 2004 17:10:45 -0000	1.18
+++ sw/source/filter/ww8/ww8glsy.cxx	9 Sep 2004 09:53:07 -0000	1.18.238.1
@@ -353,7 +353,7 @@ UINT32 WW8GlossaryFib::FindGlossaryFibOf
         SvStream &rStrm, const WW8Fib &rFib)
 {
     WW8PLCF aPlc( &rTableStrm, rFib.fcPlcfsed, rFib.lcbPlcfsed, 12 );
-    long start,ende;
+    WW8_CP start,ende;
     void *pData;
     aPlc.Get(start,ende,pData);
     UINT32 nPo = SVBT32ToLong((BYTE *)pData+2);
Index: sw/source/filter/ww8/ww8graf.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/ww8/ww8graf.cxx,v
retrieving revision 1.118
retrieving revision 1.118.8.1
diff -u -p -u -r1.118 -r1.118.8.1
--- sw/source/filter/ww8/ww8graf.cxx	17 Jun 2004 13:48:57 -0000	1.118
+++ sw/source/filter/ww8/ww8graf.cxx	9 Sep 2004 09:53:07 -0000	1.118.8.1
@@ -979,7 +979,7 @@ void SwWW8ImplReader::InsertTxbxAttrs(lo
     aSave.Restore(this);
 }
 
-bool SwWW8ImplReader::GetTxbxTextSttEndCp(long& rStartCp, long& rEndCp,
+bool SwWW8ImplReader::GetTxbxTextSttEndCp(WW8_CP& rStartCp, WW8_CP& rEndCp,
     USHORT nTxBxS, USHORT nSequence)
 {
     // rasch den TextBox-PLCF greifen
@@ -1114,7 +1114,7 @@ SwFrmFmt* SwWW8ImplReader::InsertTxbxTex
     rbEraseTextObj = false;
 
     String aString;
-    long nStartCp, nEndCp;
+    WW8_CP nStartCp, nEndCp;
     bool bContainsGraphics = false;
     bool bTextWasRead = GetTxbxTextSttEndCp( nStartCp, nEndCp, nTxBxS,
         nSequence ) && GetTxbxText( aString, nStartCp, nEndCp );
@@ -1516,7 +1516,7 @@ SdrObject* SwWW8ImplReader::ReadGrafPrim
 void SwWW8ImplReader::ReadGrafLayer1( WW8PLCFspecial* pPF, long nGrafAnchorCp )
 {
     pPF->SeekPos( nGrafAnchorCp );
-    long nStartFc;
+    WW8_CP nStartFc;
     void* pF0;
     if( !pPF->Get( nStartFc, pF0 ) )
     {
@@ -2701,7 +2701,7 @@ SwFrmFmt* SwWW8ImplReader::Read_GrafLaye
     //Normal case of Word 8+ version stuff
     pPF->SeekPos( nGrafAnchorCp );
 
-    long nStartFc;
+    WW8_CP nStartFc;
     void* pF0;
     if( !pPF->Get( nStartFc, pF0 ) ){
         ASSERT( !this, "+Wo ist die Grafik (2) ?" );
Index: sw/source/filter/ww8/ww8par.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/ww8/ww8par.cxx,v
retrieving revision 1.136
retrieving revision 1.136.64.1
diff -u -p -u -r1.136 -r1.136.64.1
--- sw/source/filter/ww8/ww8par.cxx	18 May 2004 15:50:31 -0000	1.136
+++ sw/source/filter/ww8/ww8par.cxx	9 Sep 2004 09:53:08 -0000	1.136.64.1
@@ -2596,7 +2596,7 @@ bool SwWW8ImplReader::AddTextToParagraph
 }
 
 // Returnwert: true for para end
-bool SwWW8ImplReader::ReadChars(long& rPos, long nNextAttr, long nTextEnd,
+bool SwWW8ImplReader::ReadChars(WW8_CP& rPos, long nNextAttr, long nTextEnd,
     long nCpOfs)
 {
     long nEnd = ( nNextAttr < nTextEnd ) ? nNextAttr : nTextEnd;
@@ -2616,7 +2616,7 @@ bool SwWW8ImplReader::ReadChars(long& rP
 
     while (true)
     {
-        if (ReadPlainChars(rPos, nEnd, nCpOfs))
+        if (ReadPlainChars((long)rPos, nEnd, nCpOfs))
             return false;                   // Fertig
 
         bool bStartLine = ReadChar(rPos, nCpOfs);
@@ -2786,7 +2786,7 @@ bool SwWW8ImplReader::ReadChar(long nPos
                 if (pTest && pTest->SeekPosExact(nPosCp+1+nCpOfs) &&
                     pTest->Where() == nPosCp+1+nCpOfs)
                 {
-                    long nPos;
+                    WW8_CP nPos;
                     void *pData;
                     pTest->Get(nPos, pData);
                     sal_uInt32 nData = SVBT32ToLong(*(SVBT32*)pData);
@@ -2866,7 +2866,7 @@ void SwWW8ImplReader::ProcessAktCollChan
     }
 }
 
-long SwWW8ImplReader::ReadTextAttr(long& rTxtPos, bool& rbStartLine)
+long SwWW8ImplReader::ReadTextAttr(WW8_CP& rTxtPos, bool& rbStartLine)
 {
     long nSkipChars = 0;
     WW8PLCFManResult aRes;
@@ -2964,7 +2964,7 @@ long SwWW8ImplReader::ReadTextAttr(long&
     return nNext;
 }
 
-void SwWW8ImplReader::ReadAttrs(long& rNext, long& rTxtPos, bool& rbStartLine)
+void SwWW8ImplReader::ReadAttrs(WW8_CP& rNext, WW8_CP& rTxtPos, bool& rbStartLine)
 {
     if( rTxtPos >= rNext )
     {           // Stehen Attribute an ?
@@ -4470,7 +4470,7 @@ BOOL SwMSDffManager::GetOLEStorageName(l
         // sein. Wir brauchen hier aber nur das Sprm fuer die Picture Id
         long nOldPos = rReader.pStrm->Tell();
         {
-            long nStartCp, nEndCp;
+            WW8_CP nStartCp, nEndCp;
             rReader.GetTxbxTextSttEndCp(nStartCp, nEndCp,
                 static_cast<sal_uInt16>((nOLEId >> 16) & 0xFFFF),
                 static_cast<sal_uInt16>(nOLEId & 0xFFFF));
Index: sw/source/filter/ww8/ww8par.hxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/ww8/ww8par.hxx,v
retrieving revision 1.128
retrieving revision 1.128.64.1
diff -u -p -u -r1.128 -r1.128.64.1
--- sw/source/filter/ww8/ww8par.hxx	18 May 2004 14:56:55 -0000	1.128
+++ sw/source/filter/ww8/ww8par.hxx	9 Sep 2004 09:53:09 -0000	1.128.64.1
@@ -1148,14 +1148,14 @@ private:
     bool HandlePageBreakChar();
     bool ReadChar(long nPosCp, long nCpOfs);
     bool ReadPlainChars(long& rPos, long nEnd, long nCpOfs);
-    bool ReadChars(long& rPos, long nNextAttr, long nTextEnd, long nCpOfs);
+    bool ReadChars(WW8_CP& rPos, long nNextAttr, long nTextEnd, long nCpOfs);
 
     void SetDocumentGrid(SwFrmFmt &rFmt, const wwSection &rSection);
 
     void ProcessAktCollChange(WW8PLCFManResult& rRes, bool* pStartAttr,
         bool bCallProcessSpecial);
-    long ReadTextAttr(long& rTxtPos, bool& rbStartLine);
-    void ReadAttrs(long& rNext, long& rTxtPos, bool& rbStartLine);
+    long ReadTextAttr(WW8_CP& rTxtPos, bool& rbStartLine);
+    void ReadAttrs(WW8_CP& rNext, WW8_CP& rTxtPos, bool& rbStartLine);
     void CloseAttrEnds();
     bool ReadText(long nStartCp, long nTextLen, short nType);
 
@@ -1315,7 +1315,7 @@ private:
     void InsertTxbxStyAttrs( SfxItemSet& rS, USHORT nColl );
     void InsertTxbxAttrs(long nStartCp, long nEndCp, bool bONLYnPicLocFc);
 
-    bool GetTxbxTextSttEndCp(long& rStartCp, long& rEndCp, USHORT nTxBxS, 
+    bool GetTxbxTextSttEndCp(WW8_CP& rStartCp, WW8_CP& rEndCp, USHORT nTxBxS, 
         USHORT nSequence);
     bool GetTxbxText(String& rString, long StartCp, long nEndCp);
     SwFrmFmt* InsertTxbxText(SdrTextObj* pTextObj, Size* pObjSiz, 
Index: sw/source/filter/ww8/ww8par6.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/ww8/ww8par6.cxx,v
retrieving revision 1.153
retrieving revision 1.153.62.1
diff -u -p -u -r1.153 -r1.153.62.1
--- sw/source/filter/ww8/ww8par6.cxx	18 May 2004 14:57:19 -0000	1.153
+++ sw/source/filter/ww8/ww8par6.cxx	9 Sep 2004 09:53:09 -0000	1.153.62.1
@@ -973,7 +973,7 @@ void wwSectionManager::CreateSep(const l
             pWkb->Where() == nTxtPos)
     {
         void* pData;
-        long nTest;
+        WW8_CP nTest;
         pWkb->Get(nTest, pData);
         String sSectionName = mrReader.aLinkStringMap[SVBT16ToShort( ((WW8_WKB*)pData)->nLinkId) ];
         mrReader.ConvertFFileName(sSectionName, sSectionName);
Index: sw/source/filter/ww8/ww8scan.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/ww8/ww8scan.cxx,v
retrieving revision 1.110
retrieving revision 1.110.8.1
diff -u -p -u -r1.110 -r1.110.8.1
--- sw/source/filter/ww8/ww8scan.cxx	17 Jun 2004 13:49:29 -0000	1.110
+++ sw/source/filter/ww8/ww8scan.cxx	9 Sep 2004 09:53:10 -0000	1.110.8.1
@@ -1138,7 +1138,7 @@ WW8_CP WW8PLCFx_PCD::Where()
     return pPcdI ? pPcdI->Where() : LONG_MAX;
 }
 
-long WW8PLCFx_PCD::GetNoSprms( long& rStart, long& rEnd, long& rLen )
+long WW8PLCFx_PCD::GetNoSprms( WW8_CP& rStart, WW8_CP& rEnd, long& rLen )
 {
     void* pData;
     rLen = 0;
@@ -1188,7 +1188,7 @@ WW8_FC WW8PLCFx_PCD::AktPieceStartCp2Fc(
 }
 
 
-void WW8PLCFx_PCD::AktPieceFc2Cp( long& rStartPos, long& rEndPos,
+void WW8PLCFx_PCD::AktPieceFc2Cp( WW8_CP& rStartPos, WW8_CP& rEndPos,
     const WW8ScannerBase *pSBase )
 {
     //No point going anywhere with this
@@ -1491,7 +1491,7 @@ WW8_CP WW8ScannerBase::WW8Fc2Cp( WW8_FC 
         for (pPieceIter->SetIdx(0);
             pPieceIter->GetIdx() < pPieceIter->GetIMax();(*pPieceIter)++)
         {
-            long nCpStart, nCpEnd;
+            WW8_CP nCpStart, nCpEnd;
             void* pData;
             if( !pPieceIter->Get( nCpStart, nCpEnd, pData ) )
             {   // ausserhalb PLCFfpcd ?
@@ -1566,7 +1566,7 @@ WW8_FC WW8ScannerBase::WW8Cp2Fc(WW8_CP n
                 ASSERT( !this, "Falscher CP an WW8Cp2Fc() uebergeben" );
             return LONG_MAX;
         }
-        long nCpStart, nCpEnd;
+        WW8_CP nCpStart, nCpEnd;
         void* pData;
         if( !pPieceIter->Get( nCpStart, nCpEnd, pData ) )
         {
@@ -1844,7 +1844,7 @@ WW8ScannerBase::~WW8ScannerBase()
 static bool WW8SkipField(WW8PLCFspecial& rPLCF)
 {
     void* pData;
-    long nP;
+    WW8_CP nP;
 
     if (!rPLCF.Get(nP, pData))              // Ende des PLCFspecial ?
         return false;
@@ -2195,12 +2195,12 @@ bool WW8PLCFspecial::SeekPosExact(long n
     return false;
 }
 
-bool WW8PLCFspecial::Get(long& rPos, void*& rpValue) const
+bool WW8PLCFspecial::Get(WW8_CP& rPos, void*& rpValue) const
 {
     return GetData( nIdx, rPos, rpValue );
 }
 
-bool WW8PLCFspecial::GetData(long nInIdx, long& rPos, void*& rpValue) const
+bool WW8PLCFspecial::GetData(WW8_CP nInIdx, WW8_CP& rPos, void*& rpValue) const
 {
     if ( nInIdx >= nIMax )
     {
@@ -2344,7 +2344,7 @@ bool WW8PLCF::SeekPos(long nPos)
     return false;
 }
 
-bool WW8PLCF::Get(long& rStart, long& rEnd, void*& rpValue) const
+bool WW8PLCF::Get(WW8_CP& rStart, WW8_CP& rEnd, void*& rpValue) const
 {
     if ( nIdx >= nIMax )
     {
@@ -2357,7 +2357,7 @@ bool WW8PLCF::Get(long& rStart, long& rE
     return true;
 }
 
-long WW8PLCF::Where() const
+WW8_CP WW8PLCF::Where() const
 {
     if ( nIdx >= nIMax )
         return LONG_MAX;
@@ -2431,7 +2431,7 @@ bool WW8PLCFpcd_Iter::SeekPos(long nPos)
     return false;
 }
 
-bool WW8PLCFpcd_Iter::Get(long& rStart, long& rEnd, void*& rpValue) const
+bool WW8PLCFpcd_Iter::Get(WW8_CP& rStart, WW8_CP& rEnd, void*& rpValue) const
 {
     if( nIdx >= rPLCF.nIMax )
     {
@@ -2444,7 +2444,7 @@ bool WW8PLCFpcd_Iter::Get(long& rStart, 
     return true;
 }
 
-long WW8PLCFpcd_Iter::Where() const
+WW8_FC WW8PLCFpcd_Iter::Where() const
 {
     if ( nIdx >= rPLCF.nIMax )
         return LONG_MAX;
@@ -2652,7 +2652,7 @@ bool WW8PLCFx_Fc_FKP::WW8Fkp::SeekPos(WW
     return false;
 }
 
-BYTE* WW8PLCFx_Fc_FKP::WW8Fkp::Get(WW8_FC& rStart, WW8_FC& rEnd, long& rLen)
+BYTE* WW8PLCFx_Fc_FKP::WW8Fkp::Get(WW8_FC& rStart, WW8_FC& rEnd, WW8_CP& rLen)
     const
 {
     rLen = 0;
@@ -2680,7 +2680,7 @@ bool WW8PLCFx_Fc_FKP::WW8Fkp::SetIdx(sal
     return false;
 }
 
-BYTE* WW8PLCFx_Fc_FKP::WW8Fkp::GetLenAndIStdAndSprms(long& rLen) const
+BYTE* WW8PLCFx_Fc_FKP::WW8Fkp::GetLenAndIStdAndSprms(WW8_CP& rLen) const
 {
     rLen = maEntries[mnIdx].mnLen;
     return maEntries[mnIdx].mpData;
@@ -2691,7 +2691,7 @@ const BYTE* WW8PLCFx_Fc_FKP::WW8Fkp::Has
     if (mnIdx >= mnIMax)
         return 0;
 
-    long nLen;
+    WW8_CP nLen;
     BYTE* pSprms = GetLenAndIStdAndSprms( nLen );
 
     WW8SprmIter aIter(pSprms, nLen, maSprmParser);
@@ -2704,7 +2704,7 @@ bool WW8PLCFx_Fc_FKP::WW8Fkp::HasSprm(US
     if (mnIdx >= mnIMax)
        return false;
 
-    long nLen;
+    WW8_CP nLen;
     BYTE* pSprms = GetLenAndIStdAndSprms( nLen );
 
     WW8SprmIter aIter(pSprms, nLen, maSprmParser);
@@ -2729,7 +2729,7 @@ void WW8PLCFx::GetSprms( WW8PLCFxDesc* p
     return;
 }
 
-long WW8PLCFx::GetNoSprms( long& rStart, long& rEnd, long& rLen )
+WW8_CP WW8PLCFx::GetNoSprms( WW8_CP& rStart, WW8_CP& rEnd, WW8_CP& rLen )
 {
     ASSERT( !this, "Falsches GetNoSprms gerufen" );
     rStart = rEnd = LONG_MAX;
@@ -2761,7 +2761,7 @@ public:
 //-----------------------------------------
 bool WW8PLCFx_Fc_FKP::NewFkp()
 {
-    long nPLCFStart, nPLCFEnd;
+    WW8_CP nPLCFStart, nPLCFEnd;
     void* pPage;
 
     static const int WW8FkpSizeTabVer6[ PLCF_END ] =
@@ -2890,7 +2890,7 @@ bool WW8PLCFx_Fc_FKP::SeekPos(WW8_FC nFc
     bool bRet = pPLCF->SeekPos(nFcPos);
 
     // make FKP invalid?
-    long nPLCFStart, nPLCFEnd;
+    WW8_CP nPLCFStart, nPLCFEnd;
     void* pPage;
     if( pFkp && pPLCF->Get( nPLCFStart, nPLCFEnd, pPage ) )
     {
@@ -2919,7 +2919,7 @@ WW8_FC WW8PLCFx_Fc_FKP::Where()
     return Where();                     // am einfachsten rekursiv
 }
 
-BYTE* WW8PLCFx_Fc_FKP::GetSprmsAndPos(WW8_FC& rStart, WW8_FC& rEnd, long& rLen)
+BYTE* WW8PLCFx_Fc_FKP::GetSprmsAndPos(WW8_FC& rStart, WW8_FC& rEnd, WW8_CP& rLen)
 {
     rLen = 0;                               // Default
     rStart = rEnd = LONG_MAX;
@@ -3186,7 +3186,7 @@ void WW8PLCFx_Cp_FKP::GetSprms(WW8PLCFxD
                 FC of the piece, the end of the paragraph that contains the
                 character is at the FKP FC minus 1.
                 */
-                long nCpStart, nCpEnd;
+                WW8_CP nCpStart, nCpEnd;
                 void* pData;
                 pPieceIter->Get(nCpStart, nCpEnd, pData);
 
@@ -3302,7 +3302,7 @@ WW8PLCFx& WW8PLCFx_Cp_FKP::operator ++( 
         return *this;
     }
 
-    long nFkpLen;                               // Fkp-Eintrag
+    WW8_CP nFkpLen;                               // Fkp-Eintrag
     // Fkp-Eintrag holen
     WW8PLCFx_Fc_FKP::GetSprmsAndPos(nAttrStart, nAttrEnd, nFkpLen);
 
@@ -3542,7 +3542,7 @@ void WW8PLCFx_SubDoc::GetSprms(WW8PLCFxD
     ULONG nNr = pRef->GetIdx();
 
     void *pData;
-    long nFoo;
+    WW8_CP nFoo;
     if (!pRef->Get(p->nStartPos, nFoo, pData))
     {
         p->nEndPos = p->nStartPos = LONG_MAX;
@@ -3650,7 +3650,7 @@ WW8_CP WW8PLCFx_FLD::Where()
 bool WW8PLCFx_FLD::StartPosIsFieldStart()
 {
     void* pData;
-    long nTest;
+    WW8_CP nTest;
     if (
          (!pPLCF || !pPLCF->Get(nTest, pData) ||
          ((((BYTE*)pData)[0] & 0x1f) != 0x13))
@@ -3670,7 +3670,7 @@ bool WW8PLCFx_FLD::EndPosIsFieldEnd()
         (*pPLCF)++;
 
         void* pData;
-        long nTest;
+        WW8_CP nTest;
         if ( pPLCF->Get(nTest, pData) && ((((BYTE*)pData)[0] & 0x1f) == 0x15) )
             bRet = true;
 
@@ -3695,7 +3695,7 @@ void WW8PLCFx_FLD::GetSprms(WW8PLCFxDesc
 
     long n = pPLCF->GetIdx();
 
-    long nP;
+    WW8_CP nP;
     void *pData;
     if (!pPLCF->Get(nP, pData))             // Ende des PLCFspecial ?
     {
@@ -3933,7 +3933,7 @@ WW8_CP WW8PLCFx_Book::Where()
     return pBook[nIsEnd]->Where();
 }
 
-long WW8PLCFx_Book::GetNoSprms( long& rStart, long& rEnd, long& rLen )
+WW8_CP WW8PLCFx_Book::GetNoSprms( WW8_CP& rStart, WW8_CP& rEnd, WW8_CP& rLen )
 {
     void* pData;
     rEnd = LONG_MAX;
Index: sw/source/filter/ww8/ww8scan.hxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/ww8/ww8scan.hxx,v
retrieving revision 1.67
retrieving revision 1.67.216.1
diff -u -p -u -r1.67 -r1.67.216.1
--- sw/source/filter/ww8/ww8scan.hxx	4 Feb 2004 11:59:43 -0000	1.67
+++ sw/source/filter/ww8/ww8scan.hxx	9 Sep 2004 09:53:10 -0000	1.67.216.1
@@ -223,9 +223,9 @@ struct WW8FieldDesc
 {
     long nLen;              // Gesamtlaenge ( zum Text ueberlesen )
     WW8_CP nSCode;           // Anfang Befehlscode
-    long nLCode;            // Laenge
+    WW8_CP nLCode;            // Laenge
     WW8_CP nSRes;           // Anfang Ergebnis
-    long nLRes;             // Laenge ( == 0, falls kein Ergebnis )
+    WW8_CP nLRes;             // Laenge ( == 0, falls kein Ergebnis )
     USHORT nId;             // WW-Id fuer Felder
     BYTE nOpt;              // WW-Flags ( z.B.: vom User geaendert )
     BYTE bCodeNest:1;       // Befehl rekursiv verwendet
@@ -255,7 +255,7 @@ private:
     INT32* pPLCF_PosArray;  // Pointer auf Pos-Array und auf ganze Struktur
     BYTE*  pPLCF_Contents;  // Pointer auf Inhalts-Array-Teil des Pos-Array
     long nIMax;             // Anzahl der Elemente
-    long nIdx;              // Merker, wo wir gerade sind
+    WW8_CP nIdx;              // Merker, wo wir gerade sind
     long nStru;
 public:
     WW8PLCFspecial( SvStream* pSt, long nFilePos, long nPLCF,
@@ -267,10 +267,10 @@ public:
     bool SeekPos(long nPos);            // geht ueber FC- bzw. CP-Wert
                                         // bzw. naechste groesseren Wert
     bool SeekPosExact(long nPos);
-    long Where() const 
+    WW8_FC Where() const 
         { return ( nIdx >= nIMax ) ? LONG_MAX : pPLCF_PosArray[nIdx]; }
-    bool Get(long& rStart, void*& rpValue) const;
-    bool GetData(long nIdx, long& rPos, void*& rpValue) const;
+    bool Get(WW8_CP& rStart, void*& rpValue) const;
+    bool GetData(WW8_CP nIdx, WW8_CP& rPos, void*& rpValue) const;
 
     const void* GetData( long nInIdx ) const 
     {
@@ -346,8 +346,8 @@ public:
     void SetIdx( long nI ) { nIdx = nI; }
     long GetIMax() const { return nIMax; }
     bool SeekPos(long nPos);
-    long Where() const;
-    bool Get(long& rStart, long& rEnd, void*& rpValue) const;
+    WW8_FC Where() const;
+    bool Get(WW8_CP& rStart, WW8_CP& rEnd, void*& rpValue) const;
     WW8PLCF& operator ++( int ) { if( nIdx < nIMax ) nIdx++; return *this; }
 
     const void* GetData( long nInIdx ) const 
@@ -386,8 +386,8 @@ public:
     void SetIdx( long nI ) { nIdx = nI; }
     long GetIMax() const { return rPLCF.nIMax; }
     bool SeekPos(long nPos);
-    long Where() const;
-    bool Get(long& rStart, long& rEnd, void*& rpValue) const;
+    WW8_FC Where() const;
+    bool Get(WW8_CP& rStart, WW8_CP& rEnd, void*& rpValue) const;
     WW8PLCFpcd_Iter& operator ++( int ) 
     { 
         if( nIdx < rPLCF.nIMax ) 
@@ -425,9 +425,9 @@ public:
     virtual ULONG GetIdx2() const;
     virtual void SetIdx2( ULONG nIdx );
     virtual bool SeekPos(WW8_CP nCpPos) = 0;
-    virtual long Where() = 0;
+    virtual WW8_FC Where() = 0;
     virtual void GetSprms( WW8PLCFxDesc* p );
-    virtual long GetNoSprms( long& rStart, long&, long& rLen );
+    virtual WW8_CP GetNoSprms( WW8_CP& rStart, WW8_CP&, WW8_CP& rLen );
     virtual WW8PLCFx& operator ++( int ) = 0;
     virtual USHORT GetIstd() const { return 0xffff; }
     virtual void Save( WW8PLCFxSave1& rSave ) const;
@@ -458,7 +458,7 @@ public:
     virtual ULONG GetIdx() const;
     virtual void SetIdx( ULONG nI );
     virtual bool SeekPos(WW8_CP nCpPos);
-    virtual long Where();
+    virtual WW8_FC Where();
     virtual void GetSprms( WW8PLCFxDesc* p );
     virtual WW8PLCFx& operator ++( int );
 
@@ -483,12 +483,12 @@ public:
     virtual ULONG GetIdx() const;
     virtual void SetIdx( ULONG nI );
     virtual bool SeekPos(WW8_CP nCpPos);
-    virtual long Where();
-    virtual long GetNoSprms( long& rStart, long&, long& rLen );
+    virtual WW8_FC Where();
+    virtual long GetNoSprms( WW8_CP& rStart, WW8_CP&, long& rLen );
     virtual WW8PLCFx& operator ++( int );
     WW8_CP AktPieceStartFc2Cp( WW8_FC nStartPos );
     WW8_FC AktPieceStartCp2Fc( WW8_CP nCp );
-    void AktPieceFc2Cp(long& rStartPos, long& rEndPos, 
+    void AktPieceFc2Cp(WW8_CP& rStartPos, WW8_CP& rEndPos, 
         const WW8ScannerBase *pSBase);
     WW8PLCFpcd_Iter* GetPLCFIter() { return pPcdI; }
     void SetClipStart(WW8_CP nIn) { nClipStart = nIn; }
@@ -559,14 +559,14 @@ public:
                 mnIdx++;
             return *this; 
         }
-        BYTE* Get( WW8_FC& rStart, WW8_FC& rEnd, long& rLen ) const;
+        BYTE* Get( WW8_FC& rStart, WW8_FC& rEnd, WW8_CP& rLen ) const;
         sal_uInt16 GetIstd() const { return maEntries[mnIdx].mnIStd; }
 
         /*
             liefert einen echten Pointer auf das Sprm vom Typ nId,
             falls ein solches im Fkp drin ist.
         */
-        BYTE* GetLenAndIStdAndSprms(long& rLen) const;
+        BYTE* GetLenAndIStdAndSprms(WW8_CP& rLen) const;
 
         /*
             ruft GetLenAndIStdAndSprms() auf...
@@ -615,7 +615,7 @@ public:
     virtual void SetIdx( ULONG nIdx );
     virtual bool SeekPos(WW8_FC nFcPos);
     virtual WW8_FC Where();
-    BYTE* GetSprmsAndPos( WW8_FC& rStart, WW8_FC& rEnd, long& rLen );
+    BYTE* GetSprmsAndPos( WW8_FC& rStart, WW8_FC& rEnd, WW8_CP& rLen );
     virtual WW8PLCFx& operator ++( int );
     virtual USHORT GetIstd() const;
     void GetPCDSprms( WW8PLCFxDesc& rDesc );
@@ -678,7 +678,7 @@ public:
     virtual void SetIdx( ULONG nIdx );
     long GetIMax() const { return ( pPLCF ) ? pPLCF->GetIMax() : 0; }
     virtual bool SeekPos(WW8_CP nCpPos);
-    virtual long Where();
+    virtual WW8_FC Where();
     virtual void GetSprms( WW8PLCFxDesc* p );
     virtual WW8PLCFx& operator ++( int );
     const BYTE* HasSprm( USHORT nId ) const;
@@ -706,7 +706,7 @@ public:
     virtual ULONG GetIdx() const;
     virtual void SetIdx( ULONG nIdx );
     virtual bool SeekPos(WW8_CP nCpPos);
-    virtual long Where();
+    virtual WW8_FC Where();
 
     // liefert Reference Descriptoren
     const void* GetData( long nIdx = -1 ) const
@@ -736,7 +736,7 @@ public:
     virtual ULONG GetIdx() const;
     virtual void SetIdx( ULONG nIdx );
     virtual bool SeekPos(WW8_CP nCpPos);
-    virtual long Where();
+    virtual WW8_FC Where();
     virtual void GetSprms(WW8PLCFxDesc* p);
     virtual WW8PLCFx& operator ++( int );
     bool StartPosIsFieldStart();
@@ -768,8 +768,8 @@ public:
     virtual ULONG GetIdx2() const;
     virtual void SetIdx2( ULONG nIdx );
     virtual bool SeekPos(WW8_CP nCpPos);
-    virtual long Where();
-    virtual long GetNoSprms( long& rStart, long& rEnd, long& rLen );
+    virtual WW8_FC Where();
+    virtual WW8_CP GetNoSprms( WW8_CP& rStart, WW8_CP& rEnd, WW8_CP& rLen );
     virtual WW8PLCFx& operator ++( int );
     const String* GetName() const;
     WW8_CP GetStartPos() const
@@ -821,8 +821,8 @@ struct WW8PLCFxDesc
     const BYTE* pMemPos;// wo liegen die Sprm(s)
     long nOrigSprmsLen;
 
-    long nStartPos;
-    long nEndPos;
+    WW8_CP nStartPos;
+    WW8_CP nEndPos;
 
     long nOrigStartPos;
     long nOrigEndPos;   // The ending character position of a paragraph is
@@ -836,8 +836,8 @@ struct WW8PLCFxDesc
                         // it can be used as the beginning cp of the next set
                         // of properties
 
-    long nCp2OrIdx;     // wo liegen die NoSprm(s)
-    long nSprmsLen;     // wie viele Bytes fuer weitere Sprms / Laenge Fussnote
+    WW8_CP nCp2OrIdx;     // wo liegen die NoSprm(s)
+    WW8_CP nSprmsLen;     // wie viele Bytes fuer weitere Sprms / Laenge Fussnote
     long nCpOfs;        // fuer Offset Header .. Footnote
     bool bFirstSprm;    // fuer Erkennung erster Sprm einer Gruppe
     bool bRealLineEnd;  // false bei Pap-Piece-Ende
@@ -897,7 +897,7 @@ public:
         Where fragt, an welcher naechsten Position sich irgendein
         Attr aendert...
     */
-    long Where() const;
+    WW8_FC Where() const;
 
     bool Get(WW8PLCFManResult* pResult) const;
     WW8PLCFMan& operator ++( int );
Index: sw/source/filter/xml/xmlimpit.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/xml/xmlimpit.cxx,v
retrieving revision 1.10
retrieving revision 1.10.62.1
diff -u -p -u -r1.10 -r1.10.62.1
--- sw/source/filter/xml/xmlimpit.cxx	18 May 2004 14:58:02 -0000	1.10
+++ sw/source/filter/xml/xmlimpit.cxx	9 Sep 2004 09:53:11 -0000	1.10.62.1
@@ -798,7 +798,7 @@ sal_Bool SvXMLImportItemMapper::PutXMLVa
                         }
                         else if( -1 != aToken.indexOf( sal_Unicode('%') ) )
                         {
-                            long nPrc = 50;
+                            sal_Int32 nPrc = 50;
                             if( rUnitConverter.convertPercent( nPrc, aToken ) )
                             {
                                 if( !bHori )
Index: sw/source/filter/xml/xmlithlp.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/xml/xmlithlp.cxx,v
retrieving revision 1.1
retrieving revision 1.1.766.1
diff -u -p -u -r1.1 -r1.1.766.1
--- sw/source/filter/xml/xmlithlp.cxx	9 Jul 2001 20:10:43 -0000	1.1
+++ sw/source/filter/xml/xmlithlp.cxx	9 Sep 2004 09:53:11 -0000	1.1.766.1
@@ -224,7 +224,7 @@ sal_Bool lcl_frmitems_parseXMLBorder( co
     rWidth = 0;
     rNamedWidth = USHRT_MAX;
 
-    long nTemp;
+    sal_Int32 nTemp;
     while( aTokens.getNextToken( aToken ) && aToken.getLength() != 0 )
     {
         if( !rHasWidth &&
Index: sw/source/filter/xml/xmltexti.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/xml/xmltexti.cxx,v
retrieving revision 1.33
retrieving revision 1.33.304.1
diff -u -p -u -r1.33 -r1.33.304.1
--- sw/source/filter/xml/xmltexti.cxx	19 Sep 2003 08:45:16 -0000	1.33
+++ sw/source/filter/xml/xmltexti.cxx	9 Sep 2004 09:53:11 -0000	1.33.304.1
@@ -190,7 +190,7 @@ const XMLServiceMapEntry_Impl aServiceMa
 };
 static void lcl_putHeightAndWidth ( SfxItemSet &rItemSet,
 		sal_Int32 nHeight, sal_Int32 nWidth,
-		sal_Int32 *pTwipHeight=0, sal_Int32 *pTwipWidth=0 )
+		long *pTwipHeight=0, long *pTwipWidth=0 )
 {
 	if( nWidth > 0 && nHeight > 0 )
 	{
Index: sw/source/ui/app/docsh2.cxx
===================================================================
RCS file: /cvs/sw/sw/source/ui/app/docsh2.cxx,v
retrieving revision 1.64
retrieving revision 1.64.62.1
diff -u -p -u -r1.64 -r1.64.62.1
--- sw/source/ui/app/docsh2.cxx	25 May 2004 15:12:29 -0000	1.64
+++ sw/source/ui/app/docsh2.cxx	9 Sep 2004 09:53:12 -0000	1.64.62.1
@@ -1148,9 +1148,9 @@ void SwDocShell::Execute(SfxRequest& rRe
 								if ( aLockBytes.Stat( &aStat, SVSTATFLAG_DEFAULT ) == ERRCODE_NONE )
 								{
 									sal_uInt32 nLen = aStat.nSize;
-									ULONG nRead = 0;
+									sal_Size nRead = 0;
 									com::sun::star::uno::Sequence< sal_Int8 > aSeq( nLen );
-									aLockBytes.ReadAt( 0, aSeq.getArray(), nLen, &nRead );
+									aLockBytes.ReadAt( 0UL, aSeq.getArray(), nLen, &nRead );
 
 						        	::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue > aArgs(1);
 									aArgs[0].Name = ::rtl::OUString::createFromAscii("RtfOutline");
@@ -1218,7 +1218,7 @@ void SwDocShell::Execute(SfxRequest& rRe
 								if ( aLockBytes.Stat( &aStat, SVSTATFLAG_DEFAULT ) == ERRCODE_NONE )
 								{
 									sal_uInt32 nLen = aStat.nSize;
-									ULONG nRead = 0;
+									sal_Size nRead = 0;
 									com::sun::star::uno::Sequence< sal_Int8 > aSeq( nLen );
 									aLockBytes.ReadAt( 0, aSeq.getArray(), nLen, &nRead );
 
