Index: configmgr/source/data/types.cxx
===================================================================
RCS file: /cvs/util/configmgr/source/data/types.cxx,v
retrieving revision 1.1
retrieving revision 1.1.154.1
diff -u -p -r1.1 -r1.1.154.1
--- configmgr/source/data/types.cxx	11 Feb 2002 14:55:53 -0000	1.1
+++ configmgr/source/data/types.cxx	21 Sep 2004 09:04:08 -0000	1.1.154.1
@@ -87,8 +87,8 @@ namespace configmgr
         using memory::Allocator;
         using memory::Accessor;
 //-----------------------------------------------------------------------------	
-sal_Size const c_nDataOffset        = sizeof(sal_Int32);
-sal_Size const c_nStringCharSize    = sizeof(sal_Unicode);
+HeapSize const c_nDataOffset        = sizeof(sal_Int32);
+HeapSize const c_nStringCharSize    = sizeof(sal_Unicode);
 //-----------------------------------------------------------------------------	
 static inline
 sal_Int32& implGetLength(Allocator const& _anAllocator, String _aString)
@@ -142,7 +142,7 @@ NameChar const * accessName(Accessor con
 String allocString(Allocator const& _anAllocator, rtl::OUString const & _sString)
 {
     sal_Int32 nLength = _sString.getLength();
-    sal_Int32 nTextSize = (nLength + 1) * c_nStringCharSize;
+    HeapSize nTextSize = HeapSize(nLength + 1) * c_nStringCharSize;
 
     String anAddress = _anAllocator.allocate(c_nDataOffset + nTextSize);
     if (anAddress)
Index: configmgr/source/inc/heap.hxx
===================================================================
RCS file: /cvs/util/configmgr/source/inc/heap.hxx,v
retrieving revision 1.3
retrieving revision 1.3.154.1
diff -u -p -r1.3 -r1.3.154.1
--- configmgr/source/inc/heap.hxx	15 Mar 2002 11:39:06 -0000	1.3
+++ configmgr/source/inc/heap.hxx	21 Sep 2004 09:04:08 -0000	1.3.154.1
@@ -90,9 +90,6 @@ namespace configmgr
             typedef HeapManager::HeapIdParam HeapIdParam;
             typedef HeapManager::Address     Address;
 
-        //    typedef sal_uInt32 Size;
-        //    typedef sal_uInt32 Address;
-
             Heap(HeapManager& _impl);
             Heap(HeapManager& _impl, Size _nInitialSize);
             Heap(HeapManager& _impl, HeapIdParam _anId);
Index: configmgr/source/inc/heapmanager.hxx
===================================================================
RCS file: /cvs/util/configmgr/source/inc/heapmanager.hxx,v
retrieving revision 1.3
retrieving revision 1.3.154.1
diff -u -p -r1.3 -r1.3.154.1
--- configmgr/source/inc/heapmanager.hxx	15 Mar 2002 13:50:51 -0000	1.3
+++ configmgr/source/inc/heapmanager.hxx	21 Sep 2004 09:04:09 -0000	1.3.154.1
@@ -62,6 +62,9 @@
 #ifndef CONFIGMGR_DATAHEAPMANAGER_HXX
 #define CONFIGMGR_DATAHEAPMANAGER_HXX
 
+#ifndef CONFIGMGR_MEMORYMODEL_HXX
+#include "memorymodel.hxx"
+#endif
 #ifndef CONFIGMGR_DATALOCK_HXX
 #include "datalock.hxx"
 #endif
@@ -84,9 +87,9 @@ namespace configmgr
         public:
             typedef struct Opaque_ * Handle;
 
-            typedef sal_uInt32      Size;
-            typedef sal_uInt32      Address;
-            typedef rtl::OString    HeapId;
+            typedef memory::HeapSize    Size;
+            typedef memory::Address     Address;
+            typedef rtl::OString        HeapId;
             typedef rtl::OString const & HeapIdParam;
 
         //    virtual HeapId newHeapId() = 0;
Index: configmgr/source/inc/memorymodel.hxx
===================================================================
RCS file: configmgr/source/inc/memorymodel.hxx
diff -N configmgr/source/inc/memorymodel.hxx
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ configmgr/source/inc/memorymodel.hxx	21 Sep 2004 09:00:56 -0000	1.1.2.1
@@ -0,0 +1,95 @@
+/*************************************************************************
+ *
+ *
+ *
+ *
+ *
+ *
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2002 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+#ifndef CONFIGMGR_MEMORYMODEL_HXX
+#define CONFIGMGR_MEMORYMODEL_HXX
+
+#ifndef _SAL_TYPES_H_
+#include <sal/types.h>
+#endif
+
+//-----------------------------------------------------------------------------
+// no full heap implementation available yet - storing pointer value in Address
+#define CFG_ADDRESS_HOLDS_POINTER
+//-----------------------------------------------------------------------------
+
+namespace configmgr
+{
+//-----------------------------------------------------------------------------
+
+    namespace memory 
+    {
+    //-----------------------------------------------------------------------------
+    // some base types that describe our memory model
+#ifndef CFG_ADDRESS_HOLDS_POINTER
+        typedef sal_uInt32 Address; // points to relative location in memory segment
+#else
+        typedef sal_uIntPtr Address; // points to absolute location in memory
+#endif
+        typedef sal_uInt32 HeapSize; // memory block size within private heap
+        typedef sal_uInt8  Byte;  
+    //-----------------------------------------------------------------------------
+    }
+//-----------------------------------------------------------------------------
+}
+
+
+#endif // CONFIGMGR_MEMORYMODEL_HXX 
Index: configmgr/source/inc/pointer.hxx
===================================================================
RCS file: /cvs/util/configmgr/source/inc/pointer.hxx,v
retrieving revision 1.3
retrieving revision 1.3.44.1
diff -u -p -r1.3 -r1.3.44.1
--- configmgr/source/inc/pointer.hxx	1 Dec 2003 16:05:48 -0000	1.3
+++ configmgr/source/inc/pointer.hxx	21 Sep 2004 09:04:09 -0000	1.3.44.1
@@ -62,12 +62,8 @@
 #ifndef CONFIGMGR_POINTER_HXX
 #define CONFIGMGR_POINTER_HXX
 
-#ifndef _SAL_TYPES_H_
-#include <sal/types.h>
-#endif
-
-#ifndef INCLUDED_SHARABLE_BASETYPES_HXX
-#include "types.hxx"
+#ifndef CONFIGMGR_MEMORYMODEL_HXX
+#include "memorymodel.hxx"
 #endif
 
 namespace configmgr
@@ -85,7 +81,7 @@ namespace configmgr
             friend class Accessor;
             friend class UpdateAccessor;
 
-            typedef sharable::Address AddressType;
+            typedef memory::Address AddressType;
 
             AddressType m_value;
 
Index: configmgr/source/inc/types.hxx
===================================================================
RCS file: /cvs/util/configmgr/source/inc/types.hxx,v
retrieving revision 1.1
retrieving revision 1.1.154.1
diff -u -p -r1.1 -r1.1.154.1
--- configmgr/source/inc/types.hxx	11 Feb 2002 14:29:07 -0000	1.1
+++ configmgr/source/inc/types.hxx	21 Sep 2004 09:04:09 -0000	1.1.154.1
@@ -62,6 +62,10 @@
 #ifndef INCLUDED_SHARABLE_BASETYPES_HXX
 #define INCLUDED_SHARABLE_BASETYPES_HXX
 
+#ifndef CONFIGMGR_MEMORYMODEL_HXX
+#include "memorymodel.hxx"
+#endif
+
 #ifndef _SAL_TYPES_H_
 #include <sal/types.h>
 #endif
@@ -81,7 +85,8 @@ namespace configmgr
     {
     //-----------------------------------------------------------------------------
     // some base types
-        typedef sal_uInt32 Address; // points to absolute location in memory segment
+        typedef memory::Address  Address;  // points to absolute location in memory segment
+        typedef memory::HeapSize HeapSize; // size of memory block within heap
         typedef sal_uInt16 Offset;  // Offset relative to 'this' in array of nodes
         typedef sal_uInt8  Byte;  
 
Index: configmgr/source/inc/updateaccessor.hxx
===================================================================
RCS file: /cvs/util/configmgr/source/inc/updateaccessor.hxx,v
retrieving revision 1.3
retrieving revision 1.3.110.1
diff -u -p -r1.3 -r1.3.110.1
--- configmgr/source/inc/updateaccessor.hxx	15 Apr 2003 17:17:28 -0000	1.3
+++ configmgr/source/inc/updateaccessor.hxx	21 Sep 2004 09:04:09 -0000	1.3.110.1
@@ -65,6 +65,9 @@
 #ifndef CONFIGMGR_UTILITY_HXX_
 #include "utility.hxx"
 #endif
+#ifndef CONFIGMGR_MEMORYMODEL_HXX
+#include "memorymodel.hxx"
+#endif
 #ifndef CONFIGMGR_ACCESSOR_HXX
 #include "accessor.hxx"
 #endif
@@ -84,8 +87,8 @@ namespace configmgr
             SegmentHeap *   m_heap;
 
         public:
-            typedef sal_uInt32 Address;
-            typedef sal_uInt32 Size;
+            typedef memory::Address Address;
+            typedef memory::HeapSize Size;
 
             Address allocate(Size _sz) const;
             void deallocate(Address _addr) const;
