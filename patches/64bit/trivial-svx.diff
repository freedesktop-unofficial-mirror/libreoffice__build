--- svx/inc/editeng.hxx	21 Jan 2005 14:23:04 -0000	1.45
+++ svx/inc/editeng.hxx	9 Mar 2005 23:51:42 -0000	1.41.138.5
@@ -235,19 +235,19 @@ public:
 
 	String			GetText( LineEnd eEnd = LINEEND_LF ) const;
 	String			GetText( const ESelection& rSelection, const LineEnd eEnd = LINEEND_LF ) const;
-	ULONG			GetTextLen() const;
-	ULONG			GetTextHeight() const;
-	ULONG			CalcTextWidth();
+	sal_uInt32		GetTextLen() const;
+	sal_uInt32		GetTextHeight() const;
+	sal_uInt32		CalcTextWidth();
 
 	String 			GetText( USHORT nParagraph ) const;
 	xub_StrLen			GetTextLen( USHORT nParagraph ) const;
-	ULONG			GetTextHeight( USHORT nParagraph ) const;
+	sal_uInt32		GetTextHeight( USHORT nParagraph ) const;
 
 	USHORT 			GetParagraphCount() const;
 
 	USHORT			GetLineCount( USHORT nParagraph ) const;
 	xub_StrLen		GetLineLen( USHORT nParagraph, USHORT nLine ) const;
-	ULONG			GetLineHeight( USHORT nParagraph, USHORT nLine = 0 );
+	sal_uInt32		GetLineHeight( USHORT nParagraph, USHORT nLine = 0 );
 	USHORT			GetFirstLineOffset( USHORT nParagraph );
 	ParagraphInfos 	GetParagraphInfos( USHORT nPara );
 	USHORT			FindParagraph( long nDocPosY );
@@ -329,9 +329,9 @@ public:
 	void			Draw( OutputDevice* pOutDev, const Rectangle& rOutRect, const Point& rStartDocPos, BOOL bClip );
 	void			Draw( OutputDevice* pOutDev, const Point& rStartPos, short nOrientation = 0 );
 
-//  ULONG: Fehlercode des Streams.
-    ULONG           Read( SvStream& rInput, const String& rBaseURL, EETextFormat, SvKeyValueIterator* pHTTPHeaderAttrs = NULL );
-	ULONG			Write( SvStream& rOutput, EETextFormat );
+//  sal_uInt32: Fehlercode des Streams.
+	sal_uInt32		Read( SvStream& rInput, const String& rBaseURL, EETextFormat, SvKeyValueIterator* pHTTPHeaderAttrs = NULL );
+	sal_uInt32		Write( SvStream& rOutput, EETextFormat );
 
 	void			SetStatusEventHdl( const Link& rLink );
 	Link			GetStatusEventHdl() const;
@@ -346,8 +346,8 @@ public:
 	BOOL			IsFlatMode() const;
 	void			SetFlatMode( BOOL bFlat );
 
-	void			SetControlWord( ULONG nWord );
-	ULONG			GetControlWord() const;
+	void			SetControlWord( sal_uInt32 nWord );
+	sal_uInt32		GetControlWord() const;
 
 	void			QuickSetAttribs( const SfxItemSet& rSet, const ESelection& rSel );
 	void 			QuickRemoveCharAttribs( USHORT nPara, USHORT nWhich = 0 );
@@ -475,7 +475,7 @@ public:
 	virtual Rectangle GetBulletArea( USHORT nPara );
 
 	static SfxItemPool*	CreatePool( BOOL bLoadRefCounts = TRUE );
-	static ULONG	RegisterClipboardFormatName();
+	static sal_uInt32	RegisterClipboardFormatName();
 	static BOOL		DoesKeyChangeText( const KeyEvent& rKeyEvent );
 	static BOOL		DoesKeyMoveCursor( const KeyEvent& rKeyEvent );
 	static BOOL		IsSimpleCharInput( const KeyEvent& rKeyEvent );
--- svx/inc/editstat.hxx	27 Aug 2002 14:28:31 -0000	1.4
+++ svx/inc/editstat.hxx	21 Jan 2005 16:03:42 -0000	1.4.828.1
@@ -127,7 +127,7 @@
 	EE_STAT_CRSRLEFTPARA zur Zeit bei Cursorbewegungen und Return.
 */
 
-inline void SetFlags( ULONG& rBits, const ULONG nMask, FASTBOOL bOn )
+inline void SetFlags( sal_uInt32& rBits, const sal_uInt32 nMask, FASTBOOL bOn )
 {
 	if ( bOn )
 		rBits |= nMask;
@@ -138,22 +138,22 @@ inline void SetFlags( ULONG& rBits, cons
 class EditStatus
 {
 protected:
-	ULONG	nStatusBits;
-	ULONG	nControlBits;
+	sal_uInt32	nStatusBits;
+	sal_uInt32	nControlBits;
 	USHORT	nPrevPara;					// fuer EE_STAT_CRSRLEFTPARA
 
 public:
 			EditStatus()				{ nStatusBits = 0; nControlBits = 0; nPrevPara = 0xFFFF; }
 
 	void	Clear() 					{ nStatusBits = 0; }
-	void	SetControlBits( ULONG nMask, FASTBOOL bOn )
+	void	SetControlBits( sal_uInt32 nMask, FASTBOOL bOn )
 				{ SetFlags( nControlBits, nMask, bOn ); }
 
-	ULONG	GetStatusWord() const		{ return nStatusBits; }
-	ULONG&	GetStatusWord() 			{ return nStatusBits; }
+	sal_uInt32	GetStatusWord() const		{ return nStatusBits; }
+	sal_uInt32&	GetStatusWord() 			{ return nStatusBits; }
 
-	ULONG	GetControlWord() const		{ return nControlBits; }
-	ULONG&	GetControlWord() 			{ return nControlBits; }
+	sal_uInt32	GetControlWord() const		{ return nControlBits; }
+	sal_uInt32&	GetControlWord() 			{ return nControlBits; }
 
 	USHORT	GetPrevParagraph() const	{ return nPrevPara; }
 	USHORT&	GetPrevParagraph() 			{ return nPrevPara; }
--- svx/inc/editview.hxx	21 Jan 2005 14:23:44 -0000	1.14
+++ svx/inc/editview.hxx	9 Mar 2005 23:46:36 -0000	1.13.26.2
@@ -225,14 +225,14 @@ public:
 	void				RemoveAttribs( BOOL bRemoveParaAttribs = FALSE, USHORT nWhich = 0 );
 	void 				RemoveCharAttribs( USHORT nPara, USHORT nWhich = 0 );
 
-    ULONG           Read( SvStream& rInput, const String& rBaseURL, EETextFormat eFormat, BOOL bSelect = FALSE, SvKeyValueIterator* pHTTPHeaderAttrs = NULL );
-	ULONG			Write( SvStream& rOutput, EETextFormat eFormat );
+	sal_uInt32		Read( SvStream& rInput, const String& rBaseURL, EETextFormat eFormat, BOOL bSelect = FALSE, SvKeyValueIterator* pHTTPHeaderAttrs = NULL );
+	sal_uInt32		Write( SvStream& rOutput, EETextFormat eFormat );
 
 	void 			SetBackgroundColor( const Color& rColor );
 	Color			GetBackgroundColor() const;
 
-	void			SetControlWord( ULONG nWord );
-	ULONG			GetControlWord() const;
+	void			SetControlWord( sal_uInt32 nWord );
+	sal_uInt32		GetControlWord() const;
 
 	EditTextObject*	CreateTextObject();
 	void			InsertText( const EditTextObject& rTextObject );
--- svx/inc/lrspitem.hxx	21 Jan 2005 14:55:17 -0000	1.5
+++ svx/inc/lrspitem.hxx	9 Mar 2005 23:50:59 -0000	1.4.854.2
@@ -127,8 +127,8 @@ public:
 	TYPEINFO();
 
 	SvxLRSpaceItem( const USHORT nId = ITEMID_LRSPACE );
-	SvxLRSpaceItem( const long nLeft, const long nRight,
-					const long nTLeft = 0, const short nOfset = 0,
+	SvxLRSpaceItem( const sal_Int32 nLeft, const sal_Int32 nRight,
+					const sal_Int32 nTLeft = 0, const short nOfset = 0,
 					const USHORT nId = ITEMID_LRSPACE );
 	inline SvxLRSpaceItem& operator=( const SvxLRSpaceItem &rCpy );
 
--- svx/inc/msdffimp.hxx	21 Feb 2005 16:16:53 -0000	1.26
+++ svx/inc/msdffimp.hxx	9 Mar 2005 23:30:24 -0000	1.20.98.5
@@ -540,9 +540,9 @@ public:
 	static BOOL ReadCommonRecordHeader( DffRecordHeader& rRec, SvStream& rIn );
 	static BOOL ReadCommonRecordHeader( SvStream& rSt,
 										BYTE&     rVer,
-										USHORT&   rInst,
-										USHORT&   rFbt,
-										ULONG&    rLength );
+										sal_uInt16& rInst,
+										sal_uInt16& rFbt,
+										sal_uInt32& rLength );
 /*
 	Konstruktor
 	===========
@@ -590,7 +590,7 @@ public:
 
 	void SetModel(SdrModel* pModel, long nApplicationScale);
 	SdrModel*  GetModel() const { return pSdrModel; }
-	void Scale(long& rVal) const;
+	void Scale(sal_Int32& rVal) const;
 	void Scale(Point& rPos) const;
 	void Scale(Size& rSiz) const;
 	void Scale(Rectangle& rRect) const;
@@ -598,7 +598,7 @@ public:
 	void Scale(PolyPolygon& rPoly) const;
 	void Scale(XPolygon& rPoly) const;
 	void Scale(XPolyPolygon& rPoly) const;
-	void ScaleEmu(long& rVal) const;
+	void ScaleEmu(sal_Int32& rVal) const;
 	UINT32 ScalePt( UINT32 nPt ) const;
 	INT32 ScalePoint( INT32 nVal ) const;
 
--- svx/inc/rulritem.hxx	21 Jan 2005 15:11:35 -0000	1.7
+++ svx/inc/rulritem.hxx	10 Mar 2005 00:03:20 -0000	1.6.222.2
@@ -229,7 +229,7 @@ typedef SvPtrarr SvxColumns;
 class SVX_DLLPUBLIC SvxColumnItem : public SfxPoolItem
 {
 	SvxColumns aColumns;// Spaltenarray
-	long	nLeft,		// Linker Rand bei Tabelle
+	sal_Int32	nLeft,		// Linker Rand bei Tabelle
 		   nRight;		// Rechter Rand bei Tabelle; bei Spalten immer gleich
 						// zum umgebenden Rahmen
 	USHORT nActColumn;	// die aktuelle Spalte
@@ -297,10 +297,10 @@ public:
 class SVX_DLLPUBLIC SvxObjectItem : public SfxPoolItem
 {
 private:
-	long   nStartX;					   /* Beginn in X-Richtung */
-	long   nEndX;					   /* Ende in X-Richtung */
-	long   nStartY;                    /* Beginn in Y-Richtung */
-	long   nEndY;                      /* Ende in Y-Richtung */
+	sal_Int32   nStartX;					   /* Beginn in X-Richtung */
+	sal_Int32   nEndX;					   /* Ende in X-Richtung */
+	sal_Int32   nStartY;                    /* Beginn in Y-Richtung */
+	sal_Int32   nEndY;                      /* Ende in Y-Richtung */
 	BOOL   bLimits;					   /* Grenzwertkontrolle durch die Applikation */
 protected:
 	virtual int 			 operator==( const SfxPoolItem& ) const;
@@ -325,10 +325,10 @@ public:
 
 	BOOL   HasLimits() const { return bLimits; }
 
-	long   GetStartX() const { return nStartX; }
-	long   GetEndX() const { return nEndX; }
-	long   GetStartY() const { return nStartY; }
-	long   GetEndY() const { return nEndY; }
+	sal_Int32   GetStartX() const { return nStartX; }
+	sal_Int32   GetEndX() const { return nEndX; }
+	sal_Int32   GetStartY() const { return nStartY; }
+	sal_Int32   GetEndY() const { return nEndY; }
 
 	void   SetStartX(long l) { nStartX = l; }
 	void   SetEndX(long l) { nEndX = l; }
--- svx/inc/svdmodel.hxx	16 Feb 2005 17:54:17 -0000	1.47
+++ svx/inc/svdmodel.hxx	9 Mar 2005 23:27:32 -0000	1.42.108.4
@@ -422,10 +422,10 @@ public:
 	// Zeichenobjekte verwenden moechte. Setzt man degegen nur vom abstrakten
 	// Basisobjekt SdrObject abgeleitete Objekte ein, so ist man frei in der
 	// Wahl des Pools.
-	SdrModel(SfxItemPool* pPool=NULL, SfxObjectShell* pPers=NULL, INT32 bLoadRefCounts = LOADREFCOUNTS);
-	SdrModel(const String& rPath, SfxItemPool* pPool=NULL, SfxObjectShell* pPers=NULL, INT32 bLoadRefCounts = LOADREFCOUNTS);
-	SdrModel(SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, INT32 bLoadRefCounts = LOADREFCOUNTS);
-	SdrModel(const String& rPath, SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, INT32 bLoadRefCounts = LOADREFCOUNTS);
+	SdrModel(SfxItemPool* pPool=NULL, SfxObjectShell* pPers=NULL, sal_Bool bLoadRefCounts = LOADREFCOUNTS);
+	SdrModel(const String& rPath, SfxItemPool* pPool=NULL, SfxObjectShell* pPers=NULL, sal_Bool bLoadRefCounts = LOADREFCOUNTS);
+	SdrModel(SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, sal_Bool bLoadRefCounts = LOADREFCOUNTS);
+	SdrModel(const String& rPath, SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, sal_Bool bLoadRefCounts = LOADREFCOUNTS);
 	virtual ~SdrModel();
 
 	// #116168#
--- svx/inc/tstpitem.hxx	21 Jan 2005 15:40:13 -0000	1.5
+++ svx/inc/tstpitem.hxx	10 Mar 2005 00:07:00 -0000	1.4.676.2
@@ -88,7 +88,7 @@
 class SVX_DLLPUBLIC SvxTabStop
 {
 private:
-	long            nTabPos;
+	sal_Int32            nTabPos;
 
 	SvxTabAdjust    eAdjustment;
 	sal_Unicode		cDecimal;
@@ -110,8 +110,8 @@ public:
 				const sal_Unicode cFil = cDfltFillChar );
 #endif
 
-	long&           GetTabPos() { return nTabPos; }
-	long            GetTabPos() const { return nTabPos; }
+	sal_Int32&           GetTabPos() { return nTabPos; }
+	sal_Int32            GetTabPos() const { return nTabPos; }
 
 	SvxTabAdjust&   GetAdjustment() { return eAdjustment; }
 	SvxTabAdjust    GetAdjustment() const { return eAdjustment; }
--- svx/inc/xhatch.hxx	21 Jan 2005 16:09:16 -0000	1.3
+++ svx/inc/xhatch.hxx	9 Mar 2005 23:32:17 -0000	1.2.298.2
@@ -81,8 +81,8 @@ class SVX_DLLPUBLIC XHatch
 protected:
 	XHatchStyle		eStyle;
 	Color			aColor;
-	long			nDistance;
-	long			nAngle;
+	sal_Int32		nDistance;
+	sal_Int32			nAngle;
 
 public:
 					XHatch() {}
@@ -98,8 +98,8 @@ public:
 
 	XHatchStyle		GetHatchStyle() const { return eStyle; }
 	Color			GetColor() const { return aColor; }
-	long			GetDistance() const { return nDistance; }
-	long			GetAngle() const { return nAngle; }
+	sal_Int32			GetDistance() const { return nDistance; }
+	sal_Int32			GetAngle() const { return nAngle; }
 };
 
 #endif
--- svx/source/accessibility/AccessibleShape.cxx	26 Nov 2004 18:11:37 -0000	1.46
+++ svx/source/accessibility/AccessibleShape.cxx	19 Jan 2005 02:06:54 -0000	1.44.222.2
@@ -1080,7 +1080,7 @@ void AccessibleShape::ViewForwarderChang
     // of the same type.  If such an index where not given to the
     // constructor then use the z-order instead.  If even that does not exist
     // we throw an exception.
-    long nIndex = mnIndex;
+    sal_Int32 nIndex = mnIndex;
     if (nIndex == -1)
     {
         try
--- svx/source/accessibility/AccessibleStringWrap.cxx	24 Apr 2003 16:55:35 -0000	1.3
+++ svx/source/accessibility/AccessibleStringWrap.cxx	9 Sep 2004 09:39:57 -0000	1.3.642.1
@@ -104,7 +104,7 @@ sal_Bool AccessibleStringWrap::GetCharac
     }
     else
     {
-        long aXArray[2];
+        sal_Int32 aXArray[2];
         mrDev.GetCaretPositions( maText, aXArray, static_cast< USHORT >(nIndex), 1 );
         rRect.Left() = 0;
         rRect.Top() = 0;
--- svx/source/accessibility/DGColorNameLookUp.cxx	26 May 2003 09:05:12 -0000	1.2
+++ svx/source/accessibility/DGColorNameLookUp.cxx	9 Sep 2004 09:39:57 -0000	1.2.600.1
@@ -112,7 +112,7 @@ DGColorNameLookUp& DGColorNameLookUp::In
 
 
 
-OUString DGColorNameLookUp::LookUpColor (long int nColor) const
+OUString DGColorNameLookUp::LookUpColor (sal_Int32 nColor) const
 {
     OUString sColorName;
     tColorValueToNameMap::const_iterator I;
@@ -172,7 +172,7 @@ DGColorNameLookUp::DGColorNameLookUp (vo
             try
             {
                 uno::Any aColor (xNA->getByName (aNames[i]));
-                long nColor;
+                sal_Int32 nColor;
                 aColor >>= nColor;
                 maColorValueToNameMap[nColor] = aNames[i];
             }
--- svx/source/accessibility/DescriptionGenerator.cxx	26 May 2003 09:05:24 -0000	1.6
+++ svx/source/accessibility/DescriptionGenerator.cxx	9 Sep 2004 09:39:58 -0000	1.6.600.1
@@ -354,7 +354,7 @@ void DescriptionGenerator::AddColor (con
     try
     {
         
-        long nValue;
+        sal_Int32 nValue;
         if (mxSet.is())
         {
             uno::Any aValue = mxSet->getPropertyValue (sPropertyName);
@@ -394,7 +394,7 @@ void DescriptionGenerator::AddInteger (c
         if (mxSet.is())
         {
             uno::Any aValue = mxSet->getPropertyValue (sPropertyName);
-            long nValue;
+            sal_Int32 nValue;
             aValue >>= nValue;
             msDescription.append (nValue);
         }
--- svx/source/dialog/connpooloptions.cxx	21 Jan 2005 16:29:51 -0000	1.4
+++ svx/source/dialog/connpooloptions.cxx	10 Mar 2005 00:58:45 -0000	1.3.94.2
@@ -142,7 +142,7 @@ namespace offapp
 		virtual void CursorMoved();
 
 	protected:
-		virtual ULONG GetTotalCellWidth(long nRow, USHORT nColId);
+		virtual sal_uInt32 GetTotalCellWidth(long nRow, USHORT nColId);
 
 
 	private:
@@ -261,7 +261,7 @@ namespace offapp
 	}
 
 	//--------------------------------------------------------------------
-	ULONG DriverListControl::GetTotalCellWidth(long nRow, USHORT nColId)
+	sal_uInt32 DriverListControl::GetTotalCellWidth(long nRow, USHORT nColId)
 	{
 		return GetDataWindow().GetTextWidth(GetCellText(nRow, nColId));
 	}
--- svx/source/dialog/optdict.cxx	21 Jan 2005 16:44:23 -0000	1.4
+++ svx/source/dialog/optdict.cxx	10 Mar 2005 00:50:37 -0000	1.3.110.3
@@ -612,8 +612,8 @@ void SvxEditDictionaryDialog::ShowWords_
 
 	if (aWordsLB.GetEntryCount())
 	{
-		aWordED	  .SetText( aWordsLB.GetEntryText(0LU, 0) );
-		aReplaceED.SetText( aWordsLB.GetEntryText(0LU, 1) );
+		aWordED	  .SetText( aWordsLB.GetEntryText(0UL, 0) );
+		aReplaceED.SetText( aWordsLB.GetEntryText(0UL, 1) );
 	}
 
 	LeaveWait();
--- svx/source/dialog/optmemory.cxx	21 Jan 2005 16:46:26 -0000	1.6
+++ svx/source/dialog/optmemory.cxx	10 Mar 2005 00:57:06 -0000	1.4.130.3
@@ -199,34 +199,34 @@ using namespace ::sfx2;
 #define BYTES2NF		(1.0/NF2BYTES)					// 10/2^20
 
 
-inline long OfaMemoryOptionsPage::GetNfGraphicCacheVal( void ) const
+inline sal_Size OfaMemoryOptionsPage::GetNfGraphicCacheVal( void ) const
 {
 	return aNfGraphicCache.GetValue() << 20;
 }
 
-inline void OfaMemoryOptionsPage::SetNfGraphicCacheVal( long nSizeInBytes )
+inline void OfaMemoryOptionsPage::SetNfGraphicCacheVal( sal_Size nSizeInBytes )
 {
 	aNfGraphicCache.SetValue( nSizeInBytes >> 20 );
 }
 
-long OfaMemoryOptionsPage::GetNfGraphicObjectCacheVal( void ) const
+sal_Size OfaMemoryOptionsPage::GetNfGraphicObjectCacheVal( void ) const
 {
-	return long( ::rtl::math::round( double( aNfGraphicObjectCache.GetValue() ) * NF2BYTES ) );
+	return sal_Size( ::rtl::math::round( double( aNfGraphicObjectCache.GetValue() ) * NF2BYTES ) );
 }
 
-void OfaMemoryOptionsPage::SetNfGraphicObjectCacheVal( long nSizeInBytes )
+void OfaMemoryOptionsPage::SetNfGraphicObjectCacheVal( sal_Size nSizeInBytes )
 {
-	aNfGraphicObjectCache.SetValue( long( ::rtl::math::round( double( nSizeInBytes ) * BYTES2NF ) ) );
+	aNfGraphicObjectCache.SetValue( sal_Size( ::rtl::math::round( double( nSizeInBytes ) * BYTES2NF ) ) );
 }
 
-inline void OfaMemoryOptionsPage::SetNfGraphicObjectCacheMax( long nSizeInBytes )
+inline void OfaMemoryOptionsPage::SetNfGraphicObjectCacheMax( sal_Size nSizeInBytes )
 {
-	aNfGraphicObjectCache.SetMax( long( double( nSizeInBytes ) * BYTES2NF ) );
+	aNfGraphicObjectCache.SetMax( sal_Size( double( nSizeInBytes ) * BYTES2NF ) );
 }
 
-inline void OfaMemoryOptionsPage::SetNfGraphicObjectCacheLast( long nSizeInBytes )
+inline void OfaMemoryOptionsPage::SetNfGraphicObjectCacheLast( sal_Size nSizeInBytes )
 {
-	aNfGraphicObjectCache.SetLast( long( double( nSizeInBytes ) * BYTES2NF ) );
+	aNfGraphicObjectCache.SetLast( sal_Size( double( nSizeInBytes ) * BYTES2NF ) );
 }
 
 int OfaMemoryOptionsPage::DeactivatePage( SfxItemSet* pSet )
@@ -341,7 +341,7 @@ void OfaMemoryOptionsPage::Reset( const 
     aUndoEdit.SaveValue();
 
     // GraphicCache
-	long	n = aCacheOptions.GetGraphicManagerTotalCacheSize();
+	sal_Size	n = aCacheOptions.GetGraphicManagerTotalCacheSize();
 	SetNfGraphicCacheVal( n );
 	SetNfGraphicObjectCacheVal( Min( GetNfGraphicCacheVal(), aCacheOptions.GetGraphicManagerObjectCacheSize() ) );
 
@@ -363,7 +363,7 @@ void OfaMemoryOptionsPage::Reset( const 
 
 IMPL_LINK( OfaMemoryOptionsPage, GraphicCacheConfigHdl, NumericField*, pEd )
 {
-	long	n = GetNfGraphicCacheVal();
+	sal_Size	n = GetNfGraphicCacheVal();
 	SetNfGraphicObjectCacheMax( n );
 	SetNfGraphicObjectCacheLast( n );
 
--- svx/source/dialog/optmemory.hxx	11 Feb 2004 16:40:13 -0000	1.3
+++ svx/source/dialog/optmemory.hxx	9 Sep 2004 09:39:59 -0000	1.3.264.1
@@ -110,13 +110,13 @@ private:
 
 	DECL_LINK( GraphicCacheConfigHdl, NumericField* );
 
-	inline long			GetNfGraphicCacheVal( void ) const;					// returns # of Bytes
-	inline void			SetNfGraphicCacheVal( long nSizeInBytes );
+	inline sal_Size			GetNfGraphicCacheVal( void ) const;					// returns # of Bytes
+	inline void			SetNfGraphicCacheVal( sal_Size nSizeInBytes );
 
-	long				GetNfGraphicObjectCacheVal( void ) const;			// returns # of Bytes
-	void				SetNfGraphicObjectCacheVal( long nSizeInBytes );
-	inline void			SetNfGraphicObjectCacheMax( long nSizeInBytes );
-	inline void			SetNfGraphicObjectCacheLast( long nSizeInBytes );
+	sal_Size				GetNfGraphicObjectCacheVal( void ) const;			// returns # of Bytes
+	void				SetNfGraphicObjectCacheVal( sal_Size nSizeInBytes );
+	inline void			SetNfGraphicObjectCacheMax( sal_Size nSizeInBytes );
+	inline void			SetNfGraphicObjectCacheLast( sal_Size nSizeInBytes );
 protected:
 	virtual int         DeactivatePage( SfxItemSet* pSet = NULL );
 
--- svx/source/dialog/swpossizetabpage.cxx	21 Jan 2005 16:50:41 -0000	1.6
+++ svx/source/dialog/swpossizetabpage.cxx	10 Mar 2005 00:40:14 -0000	1.5.152.2
@@ -1004,12 +1004,12 @@ void SvxSwPosSizeTabPage::Reset( const S
     }
 
     pItem = GetItem( rSet, SID_ATTR_TRANSFORM_WIDTH );
-    sal_Int32 nWidth = Max( pItem ? ( static_cast<const SfxUInt32Item*>(pItem)->GetValue()) : 0, (UINT32)1 );
+    sal_Int32 nWidth = Max( pItem ? ( static_cast<const SfxUInt32Item*>(pItem)->GetValue()) : 0, sal_uInt32( 1 ) );
 
     m_aWidthMF.SetValue(m_aWidthMF.Normalize(nWidth), FUNIT_TWIP);
 
     pItem = GetItem( rSet, SID_ATTR_TRANSFORM_HEIGHT );
-    sal_Int32 nHeight = Max( pItem ? ( static_cast<const SfxUInt32Item*>(pItem)->GetValue()) : 0, (UINT32)1 );
+    sal_Int32 nHeight = Max( pItem ? ( static_cast<const SfxUInt32Item*>(pItem)->GetValue()) : 0, sal_uInt32( 1 ) );
     m_aHeightMF.SetValue(m_aHeightMF.Normalize(nHeight), FUNIT_TWIP);
     m_fWidthHeightRatio = nHeight ? double(nWidth) / double(nHeight) : 1.0;
 
--- svx/source/dialog/tpline.cxx	21 Jan 2005 16:53:26 -0000	1.28
+++ svx/source/dialog/tpline.cxx	10 Mar 2005 00:47:23 -0000	1.23.270.4
@@ -1040,7 +1040,7 @@ void SvxLineTabPage::Reset( const SfxIte
 		VirtualDevice aVDev;
 		aVDev.SetMapMode(MapMode(MAP_100TH_MM));
 
-		SdrModel* pModel = new SdrModel(NULL, NULL, LOADREFCOUNTS);
+		SdrModel* pModel = new SdrModel((SfxItemPool*)NULL, (SfxObjectShell*)NULL, (sal_Bool)LOADREFCOUNTS);
 		pModel->GetItemPool().FreezeIdRanges();
 		SdrPage* pPage = new SdrPage( *pModel, FALSE );
 		pPage->SetSize(Size(1000,1000));
--- svx/source/dialog/transfrm.cxx	21 Jan 2005 16:54:37 -0000	1.18
+++ svx/source/dialog/transfrm.cxx	10 Mar 2005 00:55:22 -0000	1.15.316.4
@@ -1197,10 +1197,10 @@ void SvxPositionSizeTabPage::Reset( cons
 */  }
 
 	pItem = GetItem( mrOutAttrs, SID_ATTR_TRANSFORM_WIDTH );
-	mlOldWidth = Max( pItem ? ( (const SfxUInt32Item*)pItem )->GetValue() : 0, (UINT32)1 );
+	mlOldWidth = Max( pItem ? ( (const SfxUInt32Item*)pItem )->GetValue() : 0, sal_uInt32( 1 ) );
 
 	pItem = GetItem( mrOutAttrs, SID_ATTR_TRANSFORM_HEIGHT );
-	mlOldHeight = Max( pItem ? ( (const SfxUInt32Item*)pItem )->GetValue() : 0, (UINT32)1 );
+	mlOldHeight = Max( pItem ? ( (const SfxUInt32Item*)pItem )->GetValue() : 0, sal_uInt32( 1 ) );
 
 	Fraction aUIScale = mpView->GetModel()->GetUIScale();
 
@@ -1305,8 +1305,8 @@ int SvxPositionSizeTabPage::DeactivatePa
 {
 	if( pSet )
 	{
-		INT32 lX = maMtrPosX.GetValue();
-		INT32 lY = maMtrPosY.GetValue();
+		long lX = maMtrPosX.GetValue();
+		long lY = maMtrPosY.GetValue();
 
 		// #106330#
 		// The below BugFix assumed that GetTopLeftPosition()
@@ -1601,7 +1601,7 @@ void SvxPositionSizeTabPage::SetMinMaxPo
 
 //------------------------------------------------------------------------
 
-void SvxPositionSizeTabPage::GetTopLeftPosition( INT32& rX, INT32& rY,
+void SvxPositionSizeTabPage::GetTopLeftPosition( long& rX, long& rY,
 												const Rectangle& rRect )
 {
 	switch ( maCtlPos.GetActualRP() )
--- svx/source/dialog/transfrm.hxx	28 Jun 2004 14:07:02 -0000	1.3
+++ svx/source/dialog/transfrm.hxx	19 Oct 2004 18:45:16 -0000	1.2.270.2
@@ -185,7 +185,7 @@ private:
 //  DECL_LINK( SetOrientHdl, ListBox * );
 
 	void SetMinMaxPosition();
-	void GetTopLeftPosition( INT32& rX, INT32& rY, const Rectangle& rRect );
+	void GetTopLeftPosition( long& rX, long& rY, const Rectangle& rRect );
 #endif
 
 #if _SOLAR__PRIVATE
--- svx/source/editeng/editdoc.hxx	1 Sep 2003 12:00:48 -0000	1.20
+++ svx/source/editeng/editdoc.hxx	21 Jan 2005 16:09:43 -0000	1.20.364.2
@@ -484,7 +484,7 @@ public:
 
 class ParaPortion;
 
-SV_DECL_VARARR( CharPosArray, long, 0, CHARPOSGROW );
+SV_DECL_VARARR( CharPosArray, sal_Int32, 0, CHARPOSGROW );
 
 // ------------------------------------------------------------------------
 // class EditLine
--- svx/source/editeng/editdoc2.cxx	28 Aug 2002 15:20:19 -0000	1.11
+++ svx/source/editeng/editdoc2.cxx	21 Jan 2005 16:10:20 -0000	1.11.826.2
@@ -98,7 +98,7 @@
 
 DBG_NAME( EE_ParaPortion );
 
-SV_IMPL_VARARR( CharPosArray, long );
+SV_IMPL_VARARR( CharPosArray, sal_Int32 );
 
 /*
 
--- svx/source/editeng/editeng.cxx	11 Jan 2005 12:58:08 -0000	1.93
+++ svx/source/editeng/editeng.cxx	19 Jan 2005 02:05:11 -0000	1.90.138.3
@@ -2416,7 +2416,7 @@ BOOL EditEngine::IsVerboseTextComments()
 // =====================================================================
 // ======================   Virtuelle Methoden   =======================
 // =====================================================================
-void __EXPORT EditEngine::DrawingText( const Point&, const XubString&, USHORT nTextStart, USHORT nTextLen, const long*, const SvxFont&, sal_uInt16 nPara, sal_uInt16 nIndex, BYTE nRightToLeft )
+void __EXPORT EditEngine::DrawingText( const Point&, const XubString&, USHORT nTextStart, USHORT nTextLen, const sal_Int32*, const SvxFont&, sal_uInt16 nPara, sal_uInt16 nIndex, BYTE nRightToLeft )
 {
 	DBG_CHKTHIS( EditEngine, 0 );
 }
--- svx/source/editeng/impedit2.cxx	11 Jan 2005 12:59:41 -0000	1.98
+++ svx/source/editeng/impedit2.cxx	21 Jan 2005 16:11:54 -0000	1.95.138.4
@@ -2827,14 +2827,14 @@ EditPaM ImpEditEngine::GetPaM( Point aDo
 	return aPaM;
 }
 
-ULONG ImpEditEngine::GetTextHeight() const
+sal_uInt32 ImpEditEngine::GetTextHeight() const
 {
 	DBG_ASSERT( GetUpdateMode(), "Sollte bei Update=FALSE nicht verwendet werden: GetTextHeight" );
 	DBG_ASSERT( IsFormatted() || IsFormatting(), "GetTextHeight: Nicht formatiert" );
 	return nCurTextHeight;
 }
 
-ULONG ImpEditEngine::CalcTextWidth( BOOL bIgnoreExtraSpace )
+sal_uInt32 ImpEditEngine::CalcTextWidth( BOOL bIgnoreExtraSpace )
 {
 	// Wenn noch nicht formatiert und nicht gerade dabei.
 	// Wird in der Formatierung bei AutoPageSize gerufen.
@@ -2897,10 +2897,10 @@ ULONG ImpEditEngine::CalcTextWidth( BOOL
 		nMaxWidth = 0;
 
 	nMaxWidth++; // Ein breiter, da in CreateLines bei >= umgebrochen wird.
-	return (ULONG)nMaxWidth;
+	return (sal_uInt32)nMaxWidth;
 }
 
-ULONG ImpEditEngine::CalcLineWidth( ParaPortion* pPortion, EditLine* pLine, BOOL bIgnoreExtraSpace )
+sal_uInt32 ImpEditEngine::CalcLineWidth( ParaPortion* pPortion, EditLine* pLine, BOOL bIgnoreExtraSpace )
 {
 	USHORT nPara = GetEditDoc().GetPos( pPortion->GetNode() );
     
@@ -2897,7 +2897,7 @@
     SvxAdjust eJustification = GetJustification( nPara );
 
     // Berechnung der Breite ohne die Indents...
-	ULONG nWidth = 0;
+	sal_uInt32 nWidth = 0;
     USHORT nPos = pLine->GetStart();
 	for ( USHORT nTP = pLine->GetStartPortion(); nTP <= pLine->GetEndPortion(); nTP++ )
 	{
@@ -2948,10 +2948,10 @@ ULONG ImpEditEngine::CalcLineWidth( Para
     return nWidth;
 }
 
-ULONG ImpEditEngine::CalcTextHeight()
+sal_uInt32 ImpEditEngine::CalcTextHeight()
 {
 	DBG_ASSERT( GetUpdateMode(), "Sollte bei Update=FALSE nicht verwendet werden: CalcTextHeight" );
-	ULONG nY = 0;
+	sal_uInt32 nY = 0;
 	for ( USHORT nPortion = 0; nPortion < GetParaPortions().Count(); nPortion++ )
 		nY += GetParaPortions()[nPortion]->GetHeight();
 	return nY;
@@ -2998,9 +2998,9 @@ USHORT ImpEditEngine::GetLineHeight( USH
 	return 0xFFFF;
 }
 
-ULONG ImpEditEngine::GetParaHeight( USHORT nParagraph )
+sal_uInt32 ImpEditEngine::GetParaHeight( USHORT nParagraph )
 {
-	ULONG nHeight = 0;
+	sal_uInt32 nHeight = 0;
 
 	ParaPortion* pPPortion = GetParaPortions().SaveGetObject( nParagraph );
 	DBG_ASSERT( pPPortion, "Absatz nicht gefunden: GetParaHeight" );
--- svx/source/editeng/impedit3.cxx	26 Nov 2004 18:12:55 -0000	1.94
+++ svx/source/editeng/impedit3.cxx	21 Jan 2005 16:12:20 -0000	1.91.220.4
@@ -482,7 +482,7 @@ void ImpEditEngine::FormatDoc()
 			aStatus.GetStatusWord() |= !IsVertical() ? EE_STAT_TEXTHEIGHTCHANGED : EE_STAT_TEXTWIDTHCHANGED;
 		if ( nNewHeight < nCurTextHeight )
 		{
-			aInvalidRec.Bottom() = (long)Max( nNewHeight, nCurTextHeight );
+			aInvalidRec.Bottom() = Max( long(nNewHeight), long(nCurTextHeight) );
 			if ( aInvalidRec.IsEmpty() )
 			{
 				aInvalidRec.Top() = 0;
@@ -773,7 +773,7 @@ sal_Bool ImpEditEngine::CreateLines( USH
 	SvxFont aTmpFont( pNode->GetCharAttribs().GetDefFont() );
 
 	sal_Bool bCalcCharPositions = sal_True;
-	long* pBuf = new long[ pNode->Len() ];
+	sal_Int32* pBuf = new sal_Int32[ pNode->Len() ];
 
 	sal_Bool bSameLineAgain = sal_False;	// Fuer TextRanger, wenn sich die Hoehe aendert.
 	TabInfo aCurrentTab;
@@ -1085,7 +1085,7 @@ sal_Bool ImpEditEngine::CreateLines( USH
 
                 // And now check for Compression:
                 if ( pPortion->GetLen() && GetAsianCompressionMode() )
-                    bCompressedChars |= ImplCalcAsianCompression( pNode, pPortion, nTmpPos, (long*)pLine->GetCharPosArray().GetData() + (nTmpPos-pLine->GetStart()), 10000, FALSE );
+                    bCompressedChars |= ImplCalcAsianCompression( pNode, pPortion, nTmpPos, const_cast< sal_Int32* >( pLine->GetCharPosArray().GetData() + (nTmpPos-pLine->GetStart()) ), 10000, FALSE );
 
 				nTmpWidth += pPortion->GetSize().Width();
 
--- svx/source/editeng/impedit4.cxx	11 Jan 2005 12:59:55 -0000	1.55
+++ svx/source/editeng/impedit4.cxx	19 Jan 2005 02:06:20 -0000	1.52.136.3
@@ -2669,7 +2669,7 @@ EditSelection ImpEditEngine::Translitera
 
 			xub_StrLen nLen = nCurrentEnd - nCurrentStart;
 
-			Sequence <long> aOffsets;
+			Sequence <sal_Int32> aOffsets;
 			String aNewText( aTranslitarationWrapper.transliterate( *pNode, nLanguage, nCurrentStart, nLen, &aOffsets ) );
 
 			if( ( nLen != aNewText.Len() ) || !pNode->Equals( aNewText, nCurrentStart, nLen ) )
@@ -2694,7 +2694,7 @@ EditSelection ImpEditEngine::Translitera
 
                 // Change text without loosing the attributes
                 USHORT nCharsAfterTransliteration = aOffsets.getLength();
-                const long* pOffsets = aOffsets.getConstArray();
+                const sal_Int32* pOffsets = aOffsets.getConstArray();
                 short nDiffs = 0;
                 for ( USHORT n = 0; n < nCharsAfterTransliteration; n++ )
                 {
--- svx/source/fmcomp/fmgridcl.cxx	17 Feb 2005 10:54:24 -0000	1.46
+++ svx/source/fmcomp/fmgridcl.cxx	10 Mar 2005 01:01:04 -0000	1.43.108.4
@@ -2207,7 +2207,7 @@ void FmGridControl::Select()
 	}
 }
 // -----------------------------------------------------------------------------
-long FmGridControl::GetSelectedColumn() const		
+sal_Int32 FmGridControl::GetSelectedColumn() const		
 { 
 	return m_nCurrentSelectedColumn; 
 }
--- svx/source/form/filtnav.cxx	8 Sep 2004 14:40:16 -0000	1.37
+++ svx/source/form/filtnav.cxx	21 Jan 2005 16:12:44 -0000	1.37.94.1
@@ -1373,7 +1373,7 @@ sal_Bool FmFilterNavigator::EditedEntry(
 	if (aText.Len() == 0)
 	{
 		// deleting the entry asynchron
-		sal_uInt32 nEvent;
+		sal_uIntPtr nEvent;
 		PostUserEvent(nEvent, LINK(this, FmFilterNavigator, OnRemove), pEntry);
 	}
 	else
--- svx/source/form/fmexpl.cxx	16 Nov 2004 11:23:04 -0000	1.31
+++ svx/source/form/fmexpl.cxx	21 Jan 2005 16:13:05 -0000	1.31.156.1
@@ -411,7 +411,7 @@ FmEntryData::FmEntryData( const FmEntryD
 void FmEntryData::Clear()
 {
     FmEntryData* pEntryData;
-    while( pEntryData = GetChildList()->Remove(sal_uInt32(0)) )
+    while( pEntryData = GetChildList()->Remove(0UL) )
         delete pEntryData;
 }
 
--- svx/source/form/fmvwimp.cxx	17 Feb 2005 10:56:51 -0000	1.42
+++ svx/source/form/fmvwimp.cxx	10 Mar 2005 00:31:19 -0000	1.33.104.4
@@ -1696,8 +1696,8 @@ void FmXFormView::createControlLabelPair
 	aRealSize.Height()= aDefSize.Height();
 
 	// je nach Skalierung des Zieldevices muss die Groesse noch normiert werden (#53523#)
-	aRealSize.Width() = sal_Int32(Fraction(aRealSize.Width(), 1) * eTargetMode.GetScaleX());
-	aRealSize.Height() = sal_Int32(Fraction(aRealSize.Height(), 1) * eTargetMode.GetScaleY());
+	aRealSize.Width() = Fraction(aRealSize.Width(), 1) * eTargetMode.GetScaleX();
+	aRealSize.Height() = Fraction(aRealSize.Height(), 1) * eTargetMode.GetScaleY();
 	_rpLabel->SetLogicRect(
 		::Rectangle(	_pOutDev->LogicToLogic(Point(0, _nYOffsetMM), eSourceMode, eTargetMode),
 					_pOutDev->LogicToLogic(aRealSize, eSourceMode, eTargetMode)
@@ -1717,8 +1717,8 @@ void FmXFormView::createControlLabelPair
 		szControlSize = aDefSize;
 
 	// normieren wie oben
-	szControlSize.Width() = sal_Int32(Fraction(szControlSize.Width(), 1) * eTargetMode.GetScaleX());
-	szControlSize.Height() = sal_Int32(Fraction(szControlSize.Height(), 1) * eTargetMode.GetScaleY());
+	szControlSize.Width() = Fraction(szControlSize.Width(), 1) * eTargetMode.GetScaleX();
+	szControlSize.Height() = Fraction(szControlSize.Height(), 1) * eTargetMode.GetScaleY();
 	_rpControl->SetLogicRect(
 		::Rectangle(	_pOutDev->LogicToLogic(Point(aRealSize.Width(), _nYOffsetMM), eSourceMode, eTargetMode),
 					_pOutDev->LogicToLogic(szControlSize, eSourceMode, eTargetMode)
--- svx/source/inc/DGColorNameLookUp.hxx	26 May 2003 09:05:56 -0000	1.2
+++ svx/source/inc/DGColorNameLookUp.hxx	9 Sep 2004 09:40:03 -0000	1.2.600.1
@@ -102,7 +102,7 @@ public:
             color or, when no name exists, a string of the form "#RRGGBB"
             with two hexadecimal digits for each color component.
     */
-    ::rtl::OUString LookUpColor (long int nColor) const;
+    ::rtl::OUString LookUpColor (sal_Int32 nColor) const;
 
 private:
     /// Define hash map type to convert numerical color values to names.
--- svx/source/items/paraitem.cxx	4 Apr 2003 18:03:45 -0000	1.27
+++ svx/source/items/paraitem.cxx	9 Sep 2004 09:40:04 -0000	1.27.664.1
@@ -148,8 +148,8 @@ using namespace ::rtl;
 using namespace ::com::sun::star;
 
 // Konvertierung fuer UNO
-#define TWIP_TO_MM100(TWIP) 	((TWIP) >= 0 ? (((TWIP)*127L+36L)/72L) : (((TWIP)*127L-36L)/72L))
-#define MM100_TO_TWIP(MM100)	((MM100) >= 0 ? (((MM100)*72L+63L)/127L) : (((MM100)*72L-63L)/127L))
+#define TWIP_TO_MM100(TWIP) 	((TWIP) >= 0 ? (((TWIP)*127+36)/72) : (((TWIP)*127-36)/72))
+#define MM100_TO_TWIP(MM100)	((MM100) >= 0 ? (((MM100)*72+63)/127) : (((MM100)*72-63)/127))
 
 
 // STATIC DATA -----------------------------------------------------------
--- svx/source/msfilter/msdffimp.cxx	2 Mar 2005 09:21:14 -0000	1.118
+++ svx/source/msfilter/msdffimp.cxx	10 Mar 2005 01:09:38 -0000	1.97.10.5
@@ -3448,7 +3448,7 @@ struct EscherBlipCacheEntry
         aUniqueID( rUniqueID ) {}
 };
 
-void SvxMSDffManager::Scale( long& rVal ) const
+void SvxMSDffManager::Scale( sal_Int32& rVal ) const
 {
 	if ( bNeedMap )
 		rVal = BigMulDiv( rVal, nMapMul, nMapDiv );
@@ -3522,7 +3522,7 @@ void SvxMSDffManager::Scale( XPolyPolygo
 		Scale( rPoly[ nPolyNum ] );
 }
 
-void SvxMSDffManager::ScaleEmu( long& rVal ) const
+void SvxMSDffManager::ScaleEmu( sal_Int32& rVal ) const
 {
 	rVal = BigMulDiv( rVal, nEmuMul, nEmuDiv );
 }
@@ -4803,7 +4803,7 @@ SdrObject* SvxMSDffManager::ImportShape(
 	aObjData.bChildAnchor = maShapeRecords.SeekToContent( rSt, DFF_msofbtChildAnchor, SEEK_FROM_CURRENT_AND_RESTART );
 	if ( aObjData.bChildAnchor )
 	{
-        INT32 l, o, r, u;
+        sal_Int32 l, o, r, u;
         rSt >> l >> o >> r >> u;
         Scale( l );
         Scale( o );
@@ -5408,7 +5408,7 @@ Rectangle SvxMSDffManager::GetGlobalChil
 					{
 						sal_Int16 ls, os, rs, us;
 						rSt >> os >> ls >> rs >> us; // etwas seltsame Koordinatenreihenfolge ...
-						long l = ls, o = os, r = rs, u = us;
+						sal_Int32 l = ls, o = os, r = rs, u = us;
 						Scale( l );
 						Scale( o );
 						Scale( r );
@@ -6344,9 +6344,9 @@ void SvxMSDffManager::GetCtrlData( long 
 	rStCtrl.Seek( nOffsDgg );
 
 	BYTE   nVer;
-	USHORT nInst;
-	USHORT nFbt;
-	ULONG  nLength;
+	sal_uInt16 nInst;
+	sal_uInt16 nFbt;
+	sal_uInt32 nLength;
 	if( !this->ReadCommonRecordHeader( rStCtrl, nVer, nInst, nFbt, nLength ) ) return;
 
 	BOOL bOk;
@@ -6389,9 +6389,9 @@ void SvxMSDffManager::GetCtrlData( long 
 void SvxMSDffManager::GetDrawingGroupContainerData( SvStream& rSt, ULONG nLenDgg )
 {
 	BYTE   nVer;
-	USHORT nInst;
-	USHORT nFbt;
-	ULONG  nLength;
+	sal_uInt16 nInst;
+	sal_uInt16 nFbt;
+	sal_uInt32 nLength;
 
 	ULONG nLenBStoreCont = 0, nLenFBSE = 0, nRead = 0;
 
@@ -6476,7 +6476,10 @@ void SvxMSDffManager::GetDrawingGroupCon
 //
 void SvxMSDffManager::GetDrawingContainerData( SvStream& rSt, ULONG nLenDg )
 {
-	BYTE nVer;USHORT nInst;USHORT nFbt;ULONG nLength;
+	BYTE nVer;
+	sal_uInt16 nInst;
+	sal_uInt16 nFbt;
+	sal_uInt32 nLength;
 
 	ULONG nReadDg = 0;
 
@@ -6509,7 +6512,10 @@ BOOL SvxMSDffManager::GetShapeGroupConta
 												  ULONG nLenShapeGroupCont,
 												  BOOL bPatriarch )
 {
-	BYTE nVer;USHORT nInst;USHORT nFbt;ULONG nLength;
+	BYTE nVer;
+	sal_uInt16 nInst;
+	sal_uInt16 nFbt;
+	sal_uInt32 nLength;
 	long nStartShapeGroupCont = rSt.Tell();
 	// Wir stehen in einem Shape Group Container (ggfs. mehrere pro Seite)
 	// und muessen nun
@@ -6548,7 +6554,10 @@ BOOL SvxMSDffManager::GetShapeGroupConta
 
 BOOL SvxMSDffManager::GetShapeContainerData( SvStream& rSt, ULONG nLenShapeCont, ULONG nPosGroup )
 {
-	BYTE nVer;USHORT nInst;USHORT nFbt;ULONG nLength;
+	BYTE nVer;
+	sal_uInt16 nInst;
+	sal_uInt16 nFbt;
+	sal_uInt32 nLength;
 	long  nStartShapeCont = rSt.Tell();
 	// Wir stehen in einem Shape Container (ggfs. mehrere pro Sh. Group)
 	// und muessen nun
@@ -6911,9 +6920,9 @@ BOOL SvxMSDffManager::GetBLIPDirect(SvSt
 	int nRes = GRFILTER_OPENERROR;  // Fehlervariable initialisieren
 
 	// nachschauen, ob es sich auch wirklich um ein BLIP handelt
-	ULONG  nLength;
-	USHORT nInst, nFbt;
 	BYTE   nVer;
+	sal_uInt16 nInst, nFbt;
+	sal_uInt32 nLength;
 	if( ReadCommonRecordHeader( rBLIPStream, nVer, nInst, nFbt, nLength) && ( 0xF018 <= nFbt ) && ( 0xF117 >= nFbt ) )
 	{
 		Size		aMtfSize100;
@@ -7081,9 +7090,9 @@ BOOL SvxMSDffManager::ReadCommonRecordHe
 /* auch static */
 BOOL SvxMSDffManager::ReadCommonRecordHeader( SvStream& rSt,
 											  BYTE&     rVer,
-											  USHORT&   rInst,
-											  USHORT&   rFbt,
-											  ULONG&    rLength )
+											  sal_uInt16& rInst,
+											  sal_uInt16& rFbt,
+											  sal_uInt32& rLength )
 {
 	sal_uInt16 nTmp;
 	rSt >> nTmp >> rFbt >> rLength;
--- svx/source/outliner/outliner.cxx	11 Jan 2005 13:02:09 -0000	1.58
+++ svx/source/outliner/outliner.cxx	19 Jan 2005 02:31:52 -0000	1.56.298.2
@@ -1197,14 +1197,14 @@ void Outliner::PaintBullet( USHORT nPara
 				else
 				{
 					Font aSvxFont( aBulletFont );
-					long* pBuf = new long[ pPara->GetText().Len() ];
+					sal_Int32* pBuf = new sal_Int32[ pPara->GetText().Len() ];
 					pOutDev->GetTextArray( pPara->GetText(), pBuf );
 					// aTextPos ist Bottom, jetzt die Baseline liefern:
 					FontMetric aMetric( pOutDev->GetFontMetric() );
 					aTextPos.Y() -= aMetric.GetDescent();
 
 					// #101498#
-					DrawingText( aTextPos, pPara->GetText(), 0, pPara->GetText().Len(), pBuf, aSvxFont, nPara, 0xFFFF, 0xFF);
+					DrawingText( aTextPos, pPara->GetText(), (USHORT)0, pPara->GetText().Len(), pBuf, aSvxFont, nPara, 0xFFFF, 0xFF);
 
 					delete[] pBuf;
 				}
--- svx/source/svdraw/svdedtv2.cxx	18 Nov 2004 11:03:53 -0000	1.17
+++ svx/source/svdraw/svdedtv2.cxx	21 Jan 2005 16:14:26 -0000	1.17.154.1
@@ -913,7 +913,7 @@ void SdrEditView::DistributeMarkedObject
 
 					// clear list
 					while(aEntryList.Count())
-						delete aEntryList.Remove((UINT32)0L);
+						delete aEntryList.Remove(0UL);
 				}
 
 				if(eVer != SvxDistributeVerticalNone)
@@ -1001,7 +1001,7 @@ void SdrEditView::DistributeMarkedObject
 
 					// clear list
 					while(aEntryList.Count())
-						delete aEntryList.Remove((UINT32)0L);
+						delete aEntryList.Remove(0UL);
 				}
 
 				// UNDO-Comment and end of UNDO
--- svx/source/svdraw/svdfppt.cxx	11 Jan 2005 13:02:57 -0000	1.130
+++ svx/source/svdraw/svdfppt.cxx	19 Jan 2005 02:40:56 -0000	1.122.10.3
@@ -830,7 +830,7 @@ void SdrEscherImport::ProcessClientAncho
 {
 	INT16 ls, os, rs, us;
 	rSt >> os >> ls >> rs >> us; // etwas seltsame Koordinatenreihenfolge ...
-	long l = ls, o = os, r = rs, u = us;
+	sal_Int32 l = ls, o = os, r = rs, u = us;
 	Scale( l );
 	Scale( o );
 	Scale( r );
--- svx/source/svdraw/svdmodel.cxx	3 Nov 2004 10:57:13 -0000	1.60
+++ svx/source/svdraw/svdmodel.cxx	19 Jan 2005 02:45:36 -0000	1.56.8.3
@@ -456,7 +456,7 @@ void SdrModel::ImpCtor(SfxItemPool* pPoo
 	ImpCreateTables();
 }
 
-SdrModel::SdrModel(SfxItemPool* pPool, SfxObjectShell* pPers, INT32 bLoadRefCounts):
+SdrModel::SdrModel(SfxItemPool* pPool, SfxObjectShell* pPers, sal_Bool bLoadRefCounts):
 //BFS01	aInfo(TRUE),
 	maPages(1024,32,32),
 	maMaPag(1024,32,32)
@@ -469,7 +469,7 @@ SdrModel::SdrModel(SfxItemPool* pPool, S
 	ImpCtor(pPool,pPers,FALSE, (FASTBOOL)bLoadRefCounts);
 }
 
-SdrModel::SdrModel(const String& rPath, SfxItemPool* pPool, SfxObjectShell* pPers, INT32 bLoadRefCounts):
+SdrModel::SdrModel(const String& rPath, SfxItemPool* pPool, SfxObjectShell* pPers, sal_Bool bLoadRefCounts):
 //BFS01	aInfo(TRUE),
 	maPages(1024,32,32),
 	maMaPag(1024,32,32),
@@ -483,7 +483,7 @@ SdrModel::SdrModel(const String& rPath, 
 	ImpCtor(pPool,pPers,FALSE, (FASTBOOL)bLoadRefCounts);
 }
 
-SdrModel::SdrModel(SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, INT32 bLoadRefCounts):
+SdrModel::SdrModel(SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, sal_Bool bLoadRefCounts):
 //BFS01	aInfo(TRUE),
 	maPages(1024,32,32),
 	maMaPag(1024,32,32)
@@ -496,7 +496,7 @@ SdrModel::SdrModel(SfxItemPool* pPool, S
 	ImpCtor(pPool,pPers,bUseExtColorTable, (FASTBOOL)bLoadRefCounts);
 }
 
-SdrModel::SdrModel(const String& rPath, SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, INT32 bLoadRefCounts):
+SdrModel::SdrModel(const String& rPath, SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, sal_Bool bLoadRefCounts):
 //BFS01	aInfo(TRUE),
 	maPages(1024,32,32),
 	maMaPag(1024,32,32),
--- svx/source/svdraw/svdoattr.cxx	3 Nov 2004 10:58:05 -0000	1.41
+++ svx/source/svdraw/svdoattr.cxx	19 Jan 2005 02:42:27 -0000	1.39.320.3
@@ -570,11 +570,11 @@ INT32 SdrAttrObj::ImpGetLineEndAdd() con
 	nSttWdt /= 2;
 
 	// Lieber etwas mehr, dafuer keine Wurzel ziehen
-	long nSttAdd = Max(nSttWdt, nSttHgt);
+	sal_Int32 nSttAdd = Max(nSttWdt, nSttHgt);
 	nSttAdd *= 3;
 	nSttAdd /= 2;
 
-	long nEndWdt = ((const XLineEndWidthItem&)(rSet.Get(XATTR_LINEENDWIDTH))).GetValue();
+	sal_Int32 nEndWdt = ((const XLineEndWidthItem&)(rSet.Get(XATTR_LINEENDWIDTH))).GetValue();
 
 	if(nEndWdt < 0)
 		nEndWdt = -nLineWdt * nEndWdt / 100; // <0 = relativ
--- svx/source/svdraw/svdopath.cxx	3 Nov 2004 11:01:41 -0000	1.27
+++ svx/source/svdraw/svdopath.cxx	19 Jan 2005 02:37:29 -0000	1.25.32.2
@@ -104,6 +104,8 @@
 // #104018# replace macros above with type-safe methods
 inline sal_Int32 ImplTwipsToMM(sal_Int32 nVal) { return ((nVal * 127 + 36) / 72); }
 inline sal_Int32 ImplMMToTwips(sal_Int32 nVal) { return ((nVal * 72 + 63) / 127); }
+inline sal_Int64 ImplTwipsToMM(sal_Int64 nVal) { return ((nVal * 127 + 36) / 72); }
+inline sal_Int64 ImplMMToTwips(sal_Int64 nVal) { return ((nVal * 72 + 63) / 127); }
 inline double ImplTwipsToMM(double fVal) { return (fVal * (127.0 / 72.0)); }
 inline double ImplMMToTwips(double fVal) { return (fVal * (72.0 / 127.0)); }
 
