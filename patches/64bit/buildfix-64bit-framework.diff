--- framework/source/layoutmanager/layoutmanager.cxx	2004-12-16 11:51:02.000000000 +0100
+++ framework/source/layoutmanager/layoutmanager.cxx	2004-12-27 10:42:32.120611749 +0100
@@ -1454,7 +1454,7 @@ void LayoutManager::implts_findNextDocki
     sal_Int32 nFreeRowColPixelPos( 0 );
     sal_Int32 nMaxSpace( 0 );
     sal_Int32 nNeededSpace( 0 );
-    sal_Int32 nTopDockingAreaSize( 0 );
+    long nTopDockingAreaSize( 0 );
     sal_Bool  bFoundRowColumn( sal_False );
 
     if (( DockingArea == DockingArea_DOCKINGAREA_TOP ) ||
@@ -1971,7 +1971,7 @@ void LayoutManager::implts_getDockingAre
         return rMovedElementRect;
     else
     {
-        sal_Int32 nSpace( 0 );
+        long nSpace( 0 );
         ::Rectangle aFrontDockingRect( rMovedElementRect );
         for ( sal_uInt32 i = 0; i < aRowColumnWindowData.aRowColumnWindows.size(); i++ )
         {
@@ -2119,11 +2119,11 @@ LayoutManager::implts_determineDockingOp
     sal_Bool bHorizontalDockArea( ( eDockingArea == DockingArea_DOCKINGAREA_TOP ) ||
                                   ( eDockingArea == DockingArea_DOCKINGAREA_BOTTOM ));
 
-    sal_Int32 nTopDockingAreaSize( implts_getTopBottomDockingAreaSizes().Width() );
-    sal_Int32 nBottomDockingAreaSize( implts_getTopBottomDockingAreaSizes().Height() );
+    long nTopDockingAreaSize( implts_getTopBottomDockingAreaSizes().Width() );
+    long nBottomDockingAreaSize( implts_getTopBottomDockingAreaSizes().Height() );
     
     ::Size  aStatusBarSize( implts_getStatusBarSize() );
-    sal_Int32 nMaxLeftRightDockAreaSize = rContainerWinSize.Height() - 
+    long nMaxLeftRightDockAreaSize = rContainerWinSize.Height() - 
                                           nTopDockingAreaSize - 
                                           nBottomDockingAreaSize - 
                                           aStatusBarSize.Height();
@@ -2131,13 +2131,11 @@ LayoutManager::implts_determineDockingOp
     ::Rectangle aTrackingRect( rTrackingRect );
     if ( bHorizontalDockArea )
     {
-        sal_Int32 nPosX( std::max( sal_Int32( rTrackingRect.Left()), sal_Int32( 0 )));
+        long nPosX( std::max( rTrackingRect.Left(), 0L ));
         if (( nPosX + rTrackingRect.getWidth()) > rContainerWinSize.Width() )
-            nPosX = std::min( nPosX,
-                                std::max( sal_Int32( rContainerWinSize.Width() - rTrackingRect.getWidth() ),
-                                          sal_Int32( 0 )));
+            nPosX = std::min( nPosX, std::max( rContainerWinSize.Width() - rTrackingRect.getWidth(), 0L));
 
-        sal_Int32 nSize = std::min( rContainerWinSize.Width(), rTrackingRect.getWidth() );
+        long nSize = std::min( rContainerWinSize.Width(), rTrackingRect.getWidth() );
         
         aTrackingRect.SetPos( ::Point( nPosX, rRowColumnRect.Top() ));
         aTrackingRect.setWidth( nSize );
@@ -2149,16 +2147,15 @@ LayoutManager::implts_determineDockingOp
     }
     else
     {
-        sal_Int32 nMaxDockingAreaHeight = std::max( sal_Int32( 0 ),
-                                                    sal_Int32( nMaxLeftRightDockAreaSize ));
+        long nMaxDockingAreaHeight = std::max( 0L, nMaxLeftRightDockAreaSize );
 
-        sal_Int32 nPosY( std::max( sal_Int32( aTrackingRect.Top()), sal_Int32( nTopDockingAreaSize )));
+        long nPosY( std::max( aTrackingRect.Top(), nTopDockingAreaSize ));
         if (( nPosY + aTrackingRect.getHeight()) > ( nTopDockingAreaSize + nMaxDockingAreaHeight ))
             nPosY = std::min( nPosY,
-                                std::max( sal_Int32( nTopDockingAreaSize + ( nMaxDockingAreaHeight - aTrackingRect.getHeight() )),
-                                        sal_Int32( nTopDockingAreaSize )));
+                                std::max( nTopDockingAreaSize + ( nMaxDockingAreaHeight - aTrackingRect.getHeight() ),
+                                          nTopDockingAreaSize ));
 
-        sal_Int32 nSize = std::min( nMaxDockingAreaHeight, aTrackingRect.getHeight() );
+        long nSize = std::min( nMaxDockingAreaHeight, aTrackingRect.getHeight() );
 
         aTrackingRect.SetPos( ::Point( rRowColumnRect.Left(), nPosY ));
         aTrackingRect.setWidth( rRowColumnRect.getWidth() );
@@ -2233,12 +2230,12 @@ void LayoutManager::implts_calcDockingPo
     Reference< css::awt::XWindow >          xDockingAreaWindow;
     ::Rectangle                             aTrackingRect( rTrackingRect );
     drafts::com::sun::star::ui::DockingArea eDockedArea( (drafts::com::sun::star::ui::DockingArea)rUIElement.m_aDockedData.m_nDockedArea );
-    sal_Int32                               nTopDockingAreaSize( implts_getTopBottomDockingAreaSizes().Width() );
-    sal_Int32                               nBottomDockingAreaSize( implts_getTopBottomDockingAreaSizes().Height() );
+    long                                    nTopDockingAreaSize( implts_getTopBottomDockingAreaSizes().Width() );
+    long                                    nBottomDockingAreaSize( implts_getTopBottomDockingAreaSizes().Height() );
     sal_Bool                                bHorizontalDockArea( ( eDockedArea == DockingArea_DOCKINGAREA_TOP ) ||
                                                                  ( eDockedArea == DockingArea_DOCKINGAREA_BOTTOM ));
     ::Size                                  aStatusBarSize( implts_getStatusBarSize() );
-    sal_Int32                               nMaxLeftRightDockAreaSize = aContainerWinSize.Height() - 
+    long                                    nMaxLeftRightDockAreaSize = aContainerWinSize.Height() - 
                                                                         nTopDockingAreaSize - 
                                                                         nBottomDockingAreaSize - 
                                                                         aStatusBarSize.Height();
@@ -2333,8 +2330,7 @@ void LayoutManager::implts_calcDockingPo
                     {
                         if ( bHorizontalDockArea )
                         {
-                            sal_Int32 nSize = ::std::max( sal_Int32( 0 ), std::min( sal_Int32( aContainerWinSize.Width() -  aWindowRect.Left() ),
-                                                                                    sal_Int32( aTrackingRect.getWidth() )));
+                            long nSize = ::std::max( 0L, std::min( aContainerWinSize.Width() -  aWindowRect.Left(), aTrackingRect.getWidth() ));
                             if ( nSize == 0 )
                                 nSize = aWindowRect.getWidth();
                             
@@ -2347,9 +2343,8 @@ void LayoutManager::implts_calcDockingPo
                         }
                         else
                         {
-                            sal_Int32 nSize = ::std::max( sal_Int32( 0 ), std::min( sal_Int32( 
-                                                    nTopDockingAreaSize + nMaxLeftRightDockAreaSize - aWindowRect.Top() ),
-                                                    sal_Int32( aTrackingRect.getHeight() )));
+                            long nSize = ::std::max( 0L, std::min( nTopDockingAreaSize + nMaxLeftRightDockAreaSize - aWindowRect.Top(),
+                                                     aTrackingRect.getHeight() ));
                             if ( nSize == 0 )
                                 nSize = aWindowRect.getHeight();
                             
@@ -2370,8 +2365,7 @@ void LayoutManager::implts_calcDockingPo
                     {
                         if ( bHorizontalDockArea )
                         {
-                            sal_Int32 nSize = ::std::max( sal_Int32( 0 ), std::min( sal_Int32(( aContainerWinSize.Width() ) - aWindowRect.Right() ),
-                                                                                    sal_Int32( aTrackingRect.getWidth() )));
+                            long nSize = ::std::max( 0L, std::min( aContainerWinSize.Width() - aWindowRect.Right(), aTrackingRect.getWidth() ));
                             if ( nSize == 0 )
                             {
                                 aUIElementRect.SetPos( ::Point( aContainerWinSize.Width() - aTrackingRect.getWidth(), aWindowRect.Top() ));
@@ -2390,8 +2384,8 @@ void LayoutManager::implts_calcDockingPo
                         }
                         else
                         {
-                            sal_Int32 nSize = ::std::max( sal_Int32( 0 ), std::min( sal_Int32( nTopDockingAreaSize + nMaxLeftRightDockAreaSize - aWindowRect.Bottom() ),
-                                                                                    sal_Int32( aTrackingRect.getHeight() )));
+                            long nSize = ::std::max( 0L, std::min( nTopDockingAreaSize + nMaxLeftRightDockAreaSize - aWindowRect.Bottom(),
+                                                                  aTrackingRect.getHeight() ));
                             aUIElementRect.SetPos( ::Point( aWindowRect.Left(), aWindowRect.Bottom() ));
                             aUIElementRect.SetSize( ::Size( aWindowRect.getWidth(), nSize ));
 
@@ -2487,14 +2481,12 @@ void LayoutManager::implts_calcDockingPo
         
         if ( bHorizontalDockArea )
         {
-            sal_Int32 nPosX( std::max( sal_Int32( rTrackingRect.Left()), sal_Int32( 0 )));
+            long nPosX( std::max( rTrackingRect.Left(), 0L ));
             if (( nPosX + rTrackingRect.getWidth()) > aContainerWinSize.Width() )
-                nPosX = std::min( nPosX,
-                                std::max( sal_Int32( aContainerWinSize.Width() - rTrackingRect.getWidth() ),
-                                          sal_Int32( 0 )));
+                nPosX = std::min( nPosX, std::max( aContainerWinSize.Width() - rTrackingRect.getWidth(), 0L ));
 
-            sal_Int32 nSize = std::min( aContainerWinSize.Width(), rTrackingRect.getWidth() );
-            sal_Int32 nDockHeight = std::max( aDockingAreaRect.getHeight(), sal_Int32( 0 ));
+            long nSize = std::min( aContainerWinSize.Width(), rTrackingRect.getWidth() );
+            long nDockHeight = std::max( aDockingAreaRect.getHeight(), 0L );
             if ( nDockHeight == 0 )
             {
                 sal_Int32 nPosY( std::max( aDockingAreaRect.Top(), aDockingAreaRect.Bottom() ));
@@ -2532,17 +2524,16 @@ void LayoutManager::implts_calcDockingPo
         }
         else
         {
-            sal_Int32 nMaxDockingAreaHeight = std::max( sal_Int32( 0 ),
-                                                        sal_Int32( nMaxLeftRightDockAreaSize ));
+            long nMaxDockingAreaHeight = std::max( 0L, nMaxLeftRightDockAreaSize );
 
-            sal_Int32 nPosY( std::max( sal_Int32( aTrackingRect.Top()), sal_Int32( nTopDockingAreaSize )));
+            long nPosY( std::max( aTrackingRect.Top(), nTopDockingAreaSize ) );
             if (( nPosY + aTrackingRect.getHeight()) > ( nTopDockingAreaSize + nMaxDockingAreaHeight ))
                 nPosY = std::min( nPosY,
-                                std::max( sal_Int32( nTopDockingAreaSize + ( nMaxDockingAreaHeight - aTrackingRect.getHeight() )),
-                                        sal_Int32( nTopDockingAreaSize )));
+                                std::max( nTopDockingAreaSize + ( nMaxDockingAreaHeight - aTrackingRect.getHeight() ),
+                                          nTopDockingAreaSize ));
 
-            sal_Int32 nSize = std::min( nMaxDockingAreaHeight, aTrackingRect.getHeight() );
-            sal_Int32 nDockWidth = std::max( aDockingAreaRect.getWidth(), sal_Int32( 0 ));
+            long nSize = std::min( nMaxDockingAreaHeight, aTrackingRect.getHeight() );
+            long nDockWidth = std::max( aDockingAreaRect.getWidth(), 0L );
             if ( nDockWidth == 0 )
             {
                 sal_Int32 nPosX( std::max( aDockingAreaRect.Left(), aDockingAreaRect.Right() ));
@@ -4636,7 +4627,7 @@ void LayoutManager::implts_doLayout( sal
             // Position the status bar
             if ( aStatusBarSize.Height() > 0 )
             {
-                implts_setStatusBarPosSize( ::Point( 0, std::max(( aContainerSize.Height() ), sal_Int32( 0 ))),
+                implts_setStatusBarPosSize( ::Point( 0, std::max( aContainerSize.Height(), 0L )),
                                             ::Size( aContainerSize.Width(),aStatusBarSize.Height() ));
             }
     
@@ -4686,8 +4677,8 @@ void LayoutManager::implts_calcWindowPos
 {
     sal_Int32   nDiff( 0 );
     sal_Int32   nSpace( rRowColumnWindowData.nSpace );
-    sal_Int32   nTopDockingAreaSize;
-    sal_Int32   nBottomDockingAreaSize;
+    long        nTopDockingAreaSize;
+    long        nBottomDockingAreaSize;
     sal_Int32   nContainerClientSize;
 
     if ( rRowColumnWindowData.aRowColumnWindows.size() == 0 )
@@ -5028,7 +5019,7 @@ void LayoutManager::implts_setDockingAre
                                                                   aRectangle.Height - aInfo.TopInset  - aInfo.BottomInset );
     ::Size               aStatusBarSize         = implts_getStatusBarSize();
 
-    sal_Int32 nLeftRightDockingAreaHeight( aContainerClientSize.Height );
+    long nLeftRightDockingAreaHeight( aContainerClientSize.Height );
     if ( rBorderSpace.Y >= 0 )
     {
         // Top docking area window
@@ -5044,8 +5035,8 @@ void LayoutManager::implts_setDockingAre
     if ( rBorderSpace.Height >= 0 )
     {
         // Bottom docking area window
-        sal_Int32 nBottomPos = std::max( sal_Int32( aContainerClientSize.Height - rBorderSpace.Height - aStatusBarSize.Height() ), sal_Int32( 0 ));
-        sal_Int32 nHeight = ( nBottomPos == 0 ) ? 0 : rBorderSpace.Height;
+        long nBottomPos = std::max( aContainerClientSize.Height - rBorderSpace.Height - aStatusBarSize.Height(), 0L );
+        long nHeight = ( nBottomPos == 0 ) ? 0L : rBorderSpace.Height;
 
         ReadGuard aReadLock( m_aLock );
         Reference< css::awt::XWindow > xDockAreaWindow( m_xDockAreaWindows[DockingArea_DOCKINGAREA_BOTTOM] );
@@ -5065,7 +5056,7 @@ void LayoutManager::implts_setDockingAre
         aReadLock.unlock();
 
         // We also have to change our right docking area window if the top or bottom area has changed. They have a higher priority!
-        sal_Int32 nHeight = std::max( sal_Int32( 0 ), sal_Int32( nLeftRightDockingAreaHeight ));
+        long nHeight = std::max( 0L, nLeftRightDockingAreaHeight );
 
         xDockAreaWindow->setPosSize( 0, rBorderSpace.Y, rBorderSpace.X, nHeight, css::awt::PosSize::POSSIZE );
         xDockAreaWindow->setVisible( sal_True );
@@ -5078,9 +5069,9 @@ void LayoutManager::implts_setDockingAre
         aReadLock.unlock();
 
         // We also have to change our right docking area window if the top or bottom area has changed. They have a higher priority!
-        sal_Int32 nLeftPos  = std::max( sal_Int32( 0 ), sal_Int32( aContainerClientSize.Width - rBorderSpace.Width ));
-        sal_Int32 nHeight   = std::max( sal_Int32( 0 ), sal_Int32( nLeftRightDockingAreaHeight ));
-        sal_Int32 nWidth    = ( nLeftPos == 0 ) ? 0 : rBorderSpace.Width;
+        long nLeftPos  = std::max( 0L, aContainerClientSize.Width - rBorderSpace.Width );
+        long nHeight   = std::max( 0L, nLeftRightDockingAreaHeight );
+        long nWidth    = ( nLeftPos == 0 ) ? 0L : rBorderSpace.Width;
 
         xDockAreaWindow->setPosSize( nLeftPos, rBorderSpace.Y, nWidth, nHeight, css::awt::PosSize::POSSIZE );
         xDockAreaWindow->setVisible( sal_True );
@@ -5089,7 +5080,7 @@ void LayoutManager::implts_setDockingAre
     // Position the status bar
     if ( aStatusBarSize.Height() > 0 )
     {
-        implts_setStatusBarPosSize( ::Point( 0, std::max(( aContainerClientSize.Height - aStatusBarSize.Height() ), sal_Int32( 0 ))),
+        implts_setStatusBarPosSize( ::Point( 0, std::max( aContainerClientSize.Height - aStatusBarSize.Height(), 0L )),
                                     ::Size( aContainerClientSize.Width, aStatusBarSize.Height() ));
     }    
 }
