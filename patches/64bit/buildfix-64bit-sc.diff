--- sc/inc/address.hxx	2004-08-23 11:22:05.000000000 +0200
+++ sc/inc/address.hxx	2005-01-04 12:51:55.597794014 +0100
@@ -147,9 +147,6 @@ typedef sal_Int32 SCsCOLROW;
 // size_t typedef to be able to find places where code was changed from USHORT
 // to size_t and is used to read/write from/to streams.
 typedef size_t SCSIZE;
-// resolve ambiguity, TODO: move to tools/solar.h, or even better use ::std::min/max
-inline size_t Min( size_t a, size_t b) { return a<b ? a : b; }
-inline size_t Max( size_t a, size_t b) { return a<b ? a : b; }
 
 // Maximum possible value of data type, NOT maximum row value.
 // MSC confuses numeric_limit max() with macro max() if vcl/wintypes.hxx is
--- sc/inc/document.hxx	2004-11-29 09:46:01.000000000 +0100
+++ sc/inc/document.hxx	2005-01-04 14:56:27.217716897 +0100
@@ -195,10 +195,10 @@ namespace com { namespace sun { namespac
 
 
 #ifdef _ZFORLIST_DECLARE_TABLE
-class SvULONGTable;
+class Svsal_uInt32Table;
 #else
 class Table;
-typedef Table SvULONGTable;
+typedef Table Svsal_uInt32Table;
 #endif
 
 
@@ -287,7 +287,7 @@ private:
 	XColorTable*		pColorTable;
 	ScConditionalFormatList* pCondFormList;				// bedingte Formate
 	ScValidationDataList* pValidationList;				// Gueltigkeit
-	SvULONGTable*		pFormatExchangeList;			// zum Umsetzen von Zahlenformaten
+	Svsal_uInt32Table*	pFormatExchangeList;			// zum Umsetzen von Zahlenformaten
 	ScTable*			pTab[MAXTABCOUNT];
 	ScRangeName*		pRangeName;
 	ScDBCollection*		pDBCollection;
@@ -523,7 +523,7 @@ SC_DLLPUBLIC	ScDBCollection*	GetDBCollec
 	SC_DLLPUBLIC BOOL			GetName( SCTAB nTab, String& rName ) const;
 	BOOL			GetTable( const String& rName, SCTAB& rTab ) const;
 	inline SCTAB	GetTableCount() const { return nMaxTableNumber; }
-	SvULONGTable*	GetFormatExchangeList() const { return pFormatExchangeList; }
+	Svsal_uInt32Table* GetFormatExchangeList() const { return pFormatExchangeList; }
 
 	void			SetDocProtection( BOOL bProtect, const com::sun::star::uno::Sequence <sal_Int8>& aPass );
 	void			SetTabProtection( SCTAB nTab, BOOL bProtect, const com::sun::star::uno::Sequence <sal_Int8>& aPass );
@@ -734,8 +734,8 @@ SC_DLLPUBLIC	ScDBCollection*	GetDBCollec
 	void			GetValue( SCCOL nCol, SCROW nRow, SCTAB nTab, double& rValue );
 	double			RoundValueAsShown( double fVal, ULONG nFormat );
 	void			GetNumberFormat( SCCOL nCol, SCROW nRow, SCTAB nTab,
-									 ULONG& rFormat );
-	ULONG			GetNumberFormat( const ScAddress& ) const;
+									 sal_uInt32& rFormat );
+	sal_uInt32		GetNumberFormat( const ScAddress& ) const;
 					/// if no number format attribute is set the calculated
 					/// number format of the formula cell is returned
 	void			GetNumberFormatInfo( short& nType, ULONG& nIndex,
@@ -1125,7 +1125,7 @@ SC_DLLPUBLIC	ScDBCollection*	GetDBCollec
 									BOOL bPutToPool = FALSE );
 	void			SetPattern( SCCOL nCol, SCROW nRow, SCTAB nTab, const ScPatternAttr& rAttr,
 									BOOL bPutToPool = FALSE );
-	void            DeleteNumberFormat( const ULONG* pDelKeys, ULONG nCount );
+	void            DeleteNumberFormat( const sal_uInt32* pDelKeys, sal_uInt32 nCount );
 
 	void			AutoFormat( SCCOL nStartCol, SCROW nStartRow, SCCOL nEndCol, SCROW nEndRow,
 									USHORT nFormatNo, const ScMarkData& rMark );
--- sc/source/core/data/column3.cxx	2004-11-16 11:24:45.000000000 +0100
+++ sc/source/core/data/column3.cxx	2005-01-04 14:33:13.639537575 +0100
@@ -1257,7 +1257,7 @@ BOOL ScColumn::SetString( SCROW nRow, SC
 		if (rString.Len() > 0)
 		{
 			double nVal;
-			ULONG nIndex, nOldIndex;
+			sal_uInt32 nIndex, nOldIndex;
 			sal_Unicode cFirstChar;
 			SvNumberFormatter* pFormatter = pDocument->GetFormatTable();
 			SfxObjectShell* pDocSh = pDocument->GetDocumentShell();
--- sc/source/core/data/dociter.cxx	2004-11-29 09:46:44.000000000 +0100
+++ sc/source/core/data/dociter.cxx	2005-01-04 14:34:28.439610964 +0100
@@ -524,7 +524,7 @@ ScQueryValueIterator::ScQueryValueIterat
 	for (i=0; (i<nCount) && (aParam.GetEntry(i).bDoQuery); i++)
 	{
 		ScQueryEntry& rEntry = aParam.GetEntry(i);
-		ULONG nIndex = 0;
+		sal_uInt32 nIndex = 0;
 		rEntry.bQueryByString =
 				!(pDoc->GetFormatTable()->IsNumberFormat(*rEntry.pStr, nIndex, rEntry.nVal));
 	}
@@ -806,7 +806,7 @@ ScQueryCellIterator::ScQueryCellIterator
 		for (i=0; (i<MAXQUERY) && (aParam.GetEntry(i).bDoQuery); i++)
 		{
 			ScQueryEntry& rEntry = aParam.GetEntry(i);
-			ULONG nIndex = 0;
+			sal_uInt32 nIndex = 0;
 			rEntry.bQueryByString =
 					 !(pDoc->GetFormatTable()->IsNumberFormat(*rEntry.pStr,
 															  nIndex, rEntry.nVal));
--- sc/source/core/data/document.cxx	2004-11-29 09:46:45.000000000 +0100
+++ sc/source/core/data/document.cxx	2005-01-04 15:06:39.218930597 +0100
@@ -1641,7 +1641,7 @@ void ScDocument::CopyFromClip( const ScR
 			SvNumberFormatter* pOtherFormatter = pClipDoc->xPoolHelper->GetFormTable();
 			if (pOtherFormatter && pOtherFormatter != pThisFormatter)
 			{
-				SvULONGTable* pExchangeList =
+				Svsal_uInt32Table* pExchangeList =
 						 pThisFormatter->MergeFormatter(*(pOtherFormatter));
 				if (pExchangeList->Count() > 0)
 					pFormatExchangeList = pExchangeList;
@@ -2131,7 +2131,7 @@ double ScDocument::GetValue( const ScAdd
 
 
 void ScDocument::GetNumberFormat( SCCOL nCol, SCROW nRow, SCTAB nTab,
-								  ULONG& rFormat )
+								  sal_uInt32& rFormat )
 {
 	if (VALIDTAB(nTab))
 		if (pTab[nTab])
@@ -2143,7 +2143,7 @@ void ScDocument::GetNumberFormat( SCCOL 
 }
 
 
-ULONG ScDocument::GetNumberFormat( const ScAddress& rPos ) const
+sal_uInt32 ScDocument::GetNumberFormat( const ScAddress& rPos ) const
 {
 	SCTAB nTab = rPos.Tab();
 	if ( pTab[nTab] )
--- sc/source/core/data/documen2.cxx	2004-11-29 09:46:44.000000000 +0100
+++ sc/source/core/data/documen2.cxx	2005-01-04 14:50:49.196124092 +0100
@@ -1367,7 +1367,7 @@ void ScDocument::SetLostData()
 	bLostData = TRUE;
 }
 
-void ScDocument::DeleteNumberFormat( const ULONG* pDelKeys, ULONG nCount )
+void ScDocument::DeleteNumberFormat( const sal_uInt32* pDelKeys, sal_uInt32 nCount )
 {
 /*
 	for (ULONG i = 0; i < nCount; i++)
@@ -1737,7 +1737,7 @@ ULONG ScDocument::TransferTab( ScDocumen
 		SvNumberFormatter* pOtherFormatter = pSrcDoc->xPoolHelper->GetFormTable();
 		if (pOtherFormatter && pOtherFormatter != pThisFormatter)
 		{
-			SvULONGTable* pExchangeList =
+			Svsal_uInt32Table* pExchangeList =
 					 pThisFormatter->MergeFormatter(*(pOtherFormatter));
 			if (pExchangeList->Count() > 0)
 				pFormatExchangeList = pExchangeList;
--- sc/source/core/data/documen8.cxx	2004-12-23 11:43:45.000000000 +0100
+++ sc/source/core/data/documen8.cxx	2005-01-11 14:08:10.970669450 +0100
@@ -357,7 +357,7 @@ void ScDocument::CopyStdStylesFrom( ScDo
     SvNumberFormatter* pOtherFormatter = pSrcDoc->xPoolHelper->GetFormTable();
     if (pOtherFormatter && pOtherFormatter != pThisFormatter)
     {
-        SvULONGTable* pExchangeList =
+        Svsal_uInt32Table* pExchangeList =
                 pThisFormatter->MergeFormatter(*(pOtherFormatter));
         if (pExchangeList->Count() > 0)
             pFormatExchangeList = pExchangeList;
--- sc/source/core/data/dpdimsave.cxx	2004-08-03 13:30:39.000000000 +0200
+++ sc/source/core/data/dpdimsave.cxx	2005-01-04 15:04:39.353648440 +0100
@@ -156,7 +156,7 @@ void ScDPSaveGroupItem::AddToData( ScDPG
 
     for ( std::vector<String>::const_iterator aIter(aElements.begin()); aIter != aElements.end(); aIter++ )
     {
-        ULONG nFormat = 0;      //! ...
+        sal_uInt32 nFormat = 0;      //! ...
         double fValue;
         if ( pFormatter->IsNumberFormat( *aIter, nFormat, fValue ) )
             aData = ScDPItemData( *aIter, fValue, TRUE );
--- sc/source/core/data/dpshttab.cxx	2004-06-04 12:24:58.000000000 +0200
+++ sc/source/core/data/dpshttab.cxx	2005-01-04 15:07:49.085854976 +0100
@@ -130,7 +130,7 @@ ScSheetDPData::ScSheetDPData( ScDocument
             }
             else
             {
-		        ULONG nIndex = 0;
+		        sal_uInt32 nIndex = 0;
 		        rEntry.bQueryByString =
 					        !(pD->GetFormatTable()->
 						        IsNumberFormat(*rEntry.pStr, nIndex, rEntry.nVal));
--- sc/source/core/data/patattr.cxx	2004-12-23 11:44:18.000000000 +0100
+++ sc/source/core/data/patattr.cxx	2005-01-11 14:09:34.600281370 +0100
@@ -941,7 +941,7 @@ SfxStyleSheetBase* lcl_CopyStyleToPool
 		SfxStyleSheetBase*		pSrcStyle,
 		SfxStyleSheetBasePool*	pSrcPool,
         SfxStyleSheetBasePool*	pDestPool,
-        const SvULONGTable*     pFormatExchangeList
+        const Svsal_uInt32Table*     pFormatExchangeList
 	)
 {
 	if ( !pSrcStyle || !pDestPool || !pSrcPool )
@@ -1045,7 +1045,7 @@ ScPatternAttr* ScPatternAttr::PutInPool(
 
 						ScStyleSheetPool* pSrcSPool = pSrcDoc->GetStyleSheetPool();
 						ScStyleSheetPool* pDestSPool = pDestDoc->GetStyleSheetPool();
-                        const SvULONGTable* pFormatExchangeList = pDestDoc->GetFormatExchangeList();
+                        const Svsal_uInt32Table* pFormatExchangeList = pDestDoc->GetFormatExchangeList();
 						USHORT nStlCnt = pOldData->Count();
 						for (USHORT i=0; i<nStlCnt; i++)
 						{
--- sc/source/core/data/table3.cxx	2004-12-29 18:59:52.881690307 +0100
+++ sc/source/core/data/table3.cxx	2005-01-04 15:23:03.414703482 +0100
@@ -1332,7 +1332,7 @@ SCSIZE ScTable::Query(ScQueryParam& rPar
 
 		if ( rEntry.bQueryByString )
 		{
-			ULONG nIndex = 0;
+			sal_uInt32 nIndex = 0;
 			rEntry.bQueryByString = !(pDocument->GetFormatTable()->
 				IsNumberFormat( *rEntry.pStr, nIndex, rEntry.nVal ));
 		}
--- sc/source/core/data/validat.cxx	2004-06-04 12:29:49.000000000 +0200
+++ sc/source/core/data/validat.cxx	2005-01-04 15:23:58.713134768 +0100
@@ -560,7 +560,7 @@ BOOL ScValidationData::IsDataValid( cons
 
 	//	Test, was es denn ist - wie in ScColumn::SetString
 
-	ULONG nFormat = rPattern.GetNumberFormat( pFormatter );
+	sal_uInt32 nFormat = rPattern.GetNumberFormat( pFormatter );
 
 	double nVal;
 	BOOL bIsVal = pFormatter->IsNumberFormat( rTest, nFormat, nVal );
--- sc/source/core/tool/compiler.cxx	2004-11-29 09:46:50.000000000 +0100
+++ sc/source/core/tool/compiler.cxx	2005-01-04 15:27:50.301064640 +0100
@@ -888,7 +888,7 @@ BOOL ScCompiler::IsOpCode2( const String
 BOOL ScCompiler::IsValue( const String& rSym )
 {
     double fVal;
-    ULONG nIndex = ( pSymbolTable == pSymbolTableEnglish ?
+    sal_uInt32 nIndex = ( pSymbolTable == pSymbolTableEnglish ?
         pDoc->GetFormatTable()->GetStandardIndex( LANGUAGE_ENGLISH_US ) : 0 );
 //  ULONG nIndex = 0;
 ////    ULONG nIndex = pDoc->GetFormatTable()->GetStandardIndex(ScGlobal::eLnge);
--- sc/source/core/tool/ddelink.cxx	2004-10-15 12:33:03.000000000 +0200
+++ sc/source/core/tool/ddelink.cxx	2005-01-04 15:27:25.432367255 +0100
@@ -239,7 +239,7 @@ void __EXPORT ScDdeLink::DataChanged( co
 			for (SCSIZE nC=0; nC<nCols; nC++)
 			{
 				aEntry = aLine.GetToken( (xub_StrLen) nC, '\t' );
-				ULONG nIndex = nStdFormat;
+				sal_uInt32 nIndex = nStdFormat;
 				double fVal;
 				if ( nMode != SC_DDE_TEXT && pFormatter->IsNumberFormat( aEntry, nIndex, fVal ) )
 					pResult->PutDouble( fVal, nC, nR );
--- sc/source/core/tool/chartarr.cxx	2004-08-20 11:11:50.000000000 +0200
+++ sc/source/core/tool/chartarr.cxx	2005-01-04 16:00:27.535115078 +0100
@@ -758,7 +758,7 @@ SchMemChart* ScChartArray::CreateMemChar
 							nVal = ((ScValueCell*)pCell)->GetValue();
 							if ( bCalcAsShown && nVal != 0.0 )
 							{
-								ULONG nFormat;
+								sal_uInt32 nFormat;
 								pDocument->GetNumberFormat( pCols[nCol],
 									pRows[nRow], nTab1, nFormat );
 								nVal = pDocument->RoundValueAsShown( nVal, nFormat );
--- sc/source/core/tool/interpr1.cxx	2004-11-29 09:46:50.000000000 +0100
+++ sc/source/core/tool/interpr1.cxx	2005-01-04 16:32:26.922328547 +0100
@@ -2354,7 +2354,7 @@ void ScInterpreter::ScT()
 void ScInterpreter::ScValue()
 {
 	String aInputString = GetString();
-	ULONG nFIndex = 0;					// damit default Land/Spr.
+	sal_uInt32 nFIndex = 0;					// damit default Land/Spr.
 	double fVal;
 	if (pFormatter->IsNumberFormat(aInputString, nFIndex, fVal))
 		PushDouble(fVal);
@@ -2664,7 +2664,7 @@ double ScInterpreter::IterateParameters(
 				if( eFunc == ifCOUNT )
 				{
 					String aStr( PopString() );
-					ULONG nFIndex = 0;					// damit default Land/Spr.
+					sal_uInt32 nFIndex = 0;					// damit default Land/Spr.
 					if ( bTextAsZero || pFormatter->IsNumberFormat(aStr, nFIndex, fVal))
 						nCount++;
 				}
@@ -3709,7 +3709,7 @@ void ScInterpreter::ScCountIf()
 			else if( rString.Len() )
 			{
 				rParam.FillInExcelSyntax(rString, 0);
-				ULONG nIndex = 0;
+				sal_uInt32 nIndex = 0;
 				rEntry.bQueryByString =
 					!(pFormatter->IsNumberFormat(
 						*rEntry.pStr, nIndex, rEntry.nVal));
@@ -3891,7 +3891,7 @@ void ScInterpreter::ScSumIf()
 			else
 			{
 				rParam.FillInExcelSyntax(rString, 0);
-				ULONG nIndex = 0;
+				sal_uInt32 nIndex = 0;
 				rEntry.bQueryByString =
 					!(pFormatter->IsNumberFormat(
 						*rEntry.pStr, nIndex, rEntry.nVal));
@@ -5026,7 +5026,7 @@ BOOL ScInterpreter::GetDBParams(SCTAB& r
 						ScQueryEntry& rEntry = rParam.GetEntry(i);
 						if ( rEntry.bDoQuery )
 						{
-							ULONG nIndex = 0;
+							sal_uInt32 nIndex = 0;
 							rEntry.bQueryByString = !pFormatter->IsNumberFormat(
 								*rEntry.pStr, nIndex, rEntry.nVal );
 							if ( rEntry.bQueryByString && !rParam.bRegExp )
--- sc/source/core/tool/interpr2.cxx	2004-11-29 09:46:50.000000000 +0100
+++ sc/source/core/tool/interpr2.cxx	2005-01-04 16:30:23.542757356 +0100
@@ -197,7 +197,7 @@ void ScInterpreter::ScGetHour()
 void ScInterpreter::ScGetDateValue()
 {
 	String aInputString = GetString();
-	ULONG nFIndex = 0;					// damit default Land/Spr.
+	sal_uInt32 nFIndex = 0;					// damit default Land/Spr.
 	double fVal;
 	if (pFormatter->IsNumberFormat(aInputString, nFIndex, fVal))
 	{
@@ -414,7 +414,7 @@ void ScInterpreter::ScGetDiffDate360()
 void ScInterpreter::ScGetTimeValue()
 {
 	String aInputString = GetString();
-	ULONG nFIndex = 0;					// damit default Land/Spr.
+	sal_uInt32 nFIndex = 0;					// damit default Land/Spr.
 	double fVal;
 	if (pFormatter->IsNumberFormat(aInputString, nFIndex, fVal))
 	{
--- sc/source/core/tool/interpr4.cxx	2004-11-29 09:46:50.000000000 +0100
+++ sc/source/core/tool/interpr4.cxx	2005-01-04 16:33:48.894093528 +0100
@@ -1459,7 +1459,7 @@ double ScInterpreter::GetDouble()
 		case svString:
 		{
 			String aStr(PopString());
-			ULONG nFIndex = 0;					// damit default Land/Spr.
+			sal_uInt32 nFIndex = 0;					// damit default Land/Spr.
 			if(!pFormatter->IsNumberFormat( aStr, nFIndex, nVal ) )
 			{
 				SetError(errIllegalArgument);
--- sc/source/core/tool/zforauto.cxx	2004-09-17 21:40:46.000000000 +0200
+++ sc/source/core/tool/zforauto.cxx	2005-01-04 16:29:32.858561359 +0100
@@ -154,7 +154,7 @@ ULONG ScNumFormatAbbrev::GetFormatIndex(
 
 	xub_StrLen nCheckPos;
 	short nType;
-	ULONG nKey = rFormatter.GetEntryKey(sFormatstring, eLnge);
+	sal_uInt32 nKey = rFormatter.GetEntryKey(sFormatstring, eLnge);
 	if (nKey == NUMBERFORMAT_ENTRY_NOT_FOUND)
 	{
 		BOOL res = rFormatter.PutEntry(sFormatstring,
--- sc/source/filter/dif/difimp.cxx	2004-06-04 12:40:40.000000000 +0200
+++ sc/source/filter/dif/difimp.cxx	2005-01-04 16:48:16.962466577 +0100
@@ -522,7 +522,7 @@ DATASET	DifParser::GetNextDataset( void 
 				{	// ...und zur Strafe mit'm Numberformatter...
 					DBG_ASSERT( pNumFormatter, "-DifParser::GetNextDataset(): No Formatter, more fun!" );
 					String			aTestVal( pAkt );
-					ULONG			nFormat = 0;
+					sal_uInt32		nFormat = 0;
 					double			fTmpVal;
 					if( pNumFormatter->IsNumberFormat( aTestVal, nFormat, fTmpVal ) )
 					{
--- sc/source/filter/excel/excrecds.cxx	2004-11-16 11:24:51.000000000 +0100
+++ sc/source/filter/excel/excrecds.cxx	2005-01-04 16:45:25.756158726 +0100
@@ -463,7 +463,7 @@ ExcBundlesheetBase::ExcBundlesheetBase()
 void ExcBundlesheetBase::UpdateStreamPos( XclExpStream& rStrm )
 {
 	rStrm.SetStreamPos( nOwnPos );
-	rStrm << nStrPos;
+	rStrm << (sal_uInt32)nStrPos;
 }
 
 
@@ -720,7 +720,7 @@ BOOL XclExpAutofilter::AddEntry( const S
 	else
 	{
 		double	fVal	= 0.0;
-		ULONG	nIndex	= 0;
+		sal_uInt32	nIndex	= 0;
         BOOL    bIsNum  = bLen ? GetFormatter().IsNumberFormat( sText, nIndex, fVal ) : TRUE;
 		String*	pText	= bIsNum ? NULL : &sText;
 
--- sc/source/filter/excel/xestyle.cxx	2004-11-16 11:24:52.000000000 +0100
+++ sc/source/filter/excel/xestyle.cxx	2005-01-04 16:57:57.323861209 +0100
@@ -1056,7 +1056,7 @@ void XclExpNumFmtBuffer::WriteFormatReco
             {
                 xub_StrLen nCheckPos;
                 short nType = NUMBERFORMAT_DEFINED;
-                ULONG nKey;
+                sal_uInt32 nKey;
                 String aTemp( pEntry->GetFormatstring() );
                 mxFormatter->PutandConvertEntry( aTemp, nCheckPos, nType, nKey, eLang, LANGUAGE_ENGLISH_US );
                 DBG_ASSERT( nCheckPos == 0, "XclExpNumFmtBuffer::WriteFormatRecord - format code not convertible" );
--- sc/source/filter/excel/xiescher.cxx	2004-12-07 14:18:02.000000000 +0100
+++ sc/source/filter/excel/xiescher.cxx	2005-01-04 16:59:03.783350501 +0100
@@ -1496,7 +1496,7 @@ SdrObject* XclImpDffManager::ProcessObj(
             // automatic margin is handled by host
             if( GetPropertyBool( DFF_Prop_AutoTextMargin ) )
             {
-                long nMargin = EXC_ESCHER_AUTOMARGIN;
+                sal_Int32 nMargin = EXC_ESCHER_AUTOMARGIN;
                 ScaleEmu( nMargin );
                 pRetSdrObj->SetMergedItem( SdrTextLeftDistItem( nMargin ) );
                 pRetSdrObj->SetMergedItem( SdrTextRightDistItem( nMargin ) );
--- sc/source/filter/excel/xistyle.cxx	2004-11-16 11:24:52.000000000 +0100
+++ sc/source/filter/excel/xistyle.cxx	2005-01-04 17:00:03.265048769 +0100
@@ -570,7 +570,7 @@ void XclImpNumFmtBuffer::CreateScFormats
         // insert/convert the Excel number format
         xub_StrLen nCheckPos;
         short nType = NUMBERFORMAT_DEFINED;
-        ULONG nKey;
+        sal_uInt32 nKey;
         if( rNumFmt.maFormat.Len() )
         {
             String aFormat( rNumFmt.maFormat );
--- sc/source/filter/html/htmlpars.cxx	2004-12-29 18:59:52.901686834 +0100
+++ sc/source/filter/html/htmlpars.cxx	2005-01-04 13:05:33.169688376 +0100
@@ -192,7 +192,7 @@ ScHTMLLayoutParser::~ScHTMLLayoutParser(
 }
 
 
-ULONG ScHTMLLayoutParser::Read( SvStream& rStream, const String& rBaseURL )
+sal_uInt32 ScHTMLLayoutParser::Read( SvStream& rStream, const String& rBaseURL )
 {
     Link aOldLink = pEdit->GetImportHdl();
     pEdit->SetImportHdl( LINK( this, ScHTMLLayoutParser, HTMLImportHdl ) );
@@ -221,7 +221,7 @@ ULONG ScHTMLLayoutParser::Read( SvStream
         }
     }
 
-    ULONG nErr = pEdit->Read( rStream, rBaseURL, EE_FORMAT_HTML, pAttributes );
+    sal_uInt32 nErr = pEdit->Read( rStream, rBaseURL, EE_FORMAT_HTML, pAttributes );
 
     pEdit->SetImportHdl( aOldLink );
     // Spaltenbreiten erzeugen
--- sc/source/filter/inc/eeparser.hxx	2004-06-04 12:52:19.000000000 +0200
+++ sc/source/filter/inc/eeparser.hxx	2005-01-04 13:02:23.472424286 +0100
@@ -184,7 +184,7 @@ public:
 						ScEEParser( EditEngine* );
 	virtual				~ScEEParser();
 
-	virtual ULONG		Read( SvStream&, const String& rBaseURL ) = 0;
+	virtual sal_uInt32	Read( SvStream&, const String& rBaseURL ) = 0;
 
 	void				GetDimensions( SCCOL& nCols, SCROW& nRows ) const
 							{ nCols = nColMax; nRows = nRowMax; }
--- sc/source/filter/inc/htmlpars.hxx	2004-06-04 12:54:49.000000000 +0200
+++ sc/source/filter/inc/htmlpars.hxx	2005-01-04 13:18:54.085488021 +0100
@@ -230,7 +230,7 @@ private:
 public:
                         ScHTMLLayoutParser( EditEngine*, const Size& aPageSize, ScDocument* );
     virtual             ~ScHTMLLayoutParser();
-	virtual ULONG		Read( SvStream&, const String& rBaseURL );
+	virtual sal_uInt32	Read( SvStream&, const String& rBaseURL );
     virtual const ScHTMLTable*  GetGlobalTable() const;
 };
 
--- sc/source/filter/inc/rtfparse.hxx	2004-06-04 12:56:48.000000000 +0200
+++ sc/source/filter/inc/rtfparse.hxx	2005-01-04 13:03:12.927889816 +0100
@@ -116,7 +116,7 @@ private:
 public:
 						ScRTFParser( EditEngine* );
 	virtual				~ScRTFParser();
-	virtual ULONG		Read( SvStream&, const String& rBaseURL );
+	virtual sal_uInt32	Read( SvStream&, const String& rBaseURL );
 };
 
 
--- sc/source/filter/rtf/eeimpars.cxx	2004-12-07 14:18:04.000000000 +0100
+++ sc/source/filter/rtf/eeimpars.cxx	2005-01-04 13:00:32.174630759 +0100
@@ -252,7 +252,7 @@ void ScEEImport::WriteToDocument( BOOL b
 			// HTML
 			String aValStr, aNumStr;
 			double fVal;
-			ULONG nNumForm;
+			sal_uInt32 nNumForm;
 			LanguageType eNumLang;
 			if ( pE->pNumStr )
 			{	// SDNUM muss sein wenn SDVAL
--- sc/source/filter/rtf/rtfparse.cxx	2004-06-04 13:05:19.000000000 +0200
+++ sc/source/filter/rtf/rtfparse.cxx	2005-01-04 13:04:24.524534442 +0100
@@ -119,11 +119,11 @@ ScRTFParser::~ScRTFParser()
 }
 
 
-ULONG ScRTFParser::Read( SvStream& rStream, const String& rBaseURL )
+sal_uInt32 ScRTFParser::Read( SvStream& rStream, const String& rBaseURL )
 {
 	Link aOldLink = pEdit->GetImportHdl();
 	pEdit->SetImportHdl( LINK( this, ScRTFParser, RTFImportHdl ) );
-	ULONG nErr = pEdit->Read( rStream, rBaseURL, EE_FORMAT_RTF );
+	sal_uInt32 nErr = pEdit->Read( rStream, rBaseURL, EE_FORMAT_RTF );
 	if ( nLastToken == RTF_PAR )
 	{
 		ScEEParseEntry* pE = pList->Last();
--- sc/source/filter/xcl97/XclImpChangeTrack.cxx	2004-11-16 11:24:53.000000000 +0100
+++ sc/source/filter/xcl97/XclImpChangeTrack.cxx	2005-01-04 12:59:35.161469394 +0100
@@ -172,7 +172,7 @@ void XclImpChangeTrack::DoInsertRange( c
 
 void XclImpChangeTrack::DoDeleteRange( const ScRange& rRange )
 {
-	sal_uInt32 nFirst, nLast;
+	ULONG nFirst, nLast;
 	pChangeTrack->AppendDeleteRange( rRange, NULL, nFirst, nLast );
 	DoAcceptRejectAction( nFirst, nLast );
 }
--- sc/source/filter/xcl97/xcl97rec.cxx	2004-12-29 18:59:52.902686661 +0100
+++ sc/source/filter/xcl97/xcl97rec.cxx	2005-01-04 12:56:58.953427091 +0100
@@ -285,7 +285,7 @@ ULONG XclMsodrawinggroup::GetLen() const
 
 // --- class XclMsodrawing --------------------------------------
 
-XclMsodrawing::XclMsodrawing( const XclExpRoot& rRoot, UINT16 nEscherType, UINT32 nInitialSize ) :
+XclMsodrawing::XclMsodrawing( const XclExpRoot& rRoot, UINT16 nEscherType, ULONG nInitialSize ) :
     XclMsodrawing_Base( *rRoot.mpRD->pEscher, nInitialSize )
 {
 	if ( nEscherType )
--- sc/source/ui/app/inputhdl.cxx	2004-10-15 12:33:11.000000000 +0200
+++ sc/source/ui/app/inputhdl.cxx	2005-01-04 16:55:51.578646874 +0100
@@ -2096,7 +2096,7 @@ void ScInputHandler::EnterHandler( BYTE 
 			ScDocument* pDoc = pActiveViewSh->GetViewData()->GetDocument();
 			SvNumberFormatter* pFormatter = pDoc->GetFormatTable();
 			// without conditional format, as in ScColumn::SetString
-			ULONG nFormat = pLastPattern->GetNumberFormat( pFormatter );
+			sal_uInt32 nFormat = pLastPattern->GetNumberFormat( pFormatter );
 			double nVal;
 			if ( pFormatter->IsNumberFormat( aString, nFormat, nVal ) )
 			{
--- sc/source/ui/docshell/docfunc.cxx	2004-09-08 15:52:34.000000000 +0200
+++ sc/source/ui/docshell/docfunc.cxx	2005-01-04 14:25:14.905277670 +0100
@@ -1008,7 +1008,7 @@ ScBaseCell* ScDocFunc::InterpretEnglishS
 	else		// (nur) auf englisches Zahlformat testen
 	{
 		SvNumberFormatter* pFormatter = pDoc->GetFormatTable();
-		ULONG nEnglish = pFormatter->GetStandardIndex(LANGUAGE_ENGLISH_US);
+		sal_uInt32 nEnglish = pFormatter->GetStandardIndex(LANGUAGE_ENGLISH_US);
 		double fVal;
 		if ( pFormatter->IsNumberFormat( rText, nEnglish, fVal ) )
 			pNewCell = new ScValueCell( fVal );
--- sc/source/ui/docshell/docsh.cxx	2004-12-07 14:18:07.000000000 +0100
+++ sc/source/ui/docshell/docsh.cxx	2005-01-04 14:28:31.315330372 +0100
@@ -231,7 +231,7 @@ TYPEINIT1( ScDocShell, SfxObjectShell );
 //------------------------------------------------------------------
 
 void __EXPORT ScDocShell::FillClass( SvGlobalName* pClassName,
-										ULONG* pFormat,
+										sal_uInt32* pFormat,
 										String* pAppName,
 										String* pFullTypeName,
 										String* pShortTypeName,
@@ -1540,7 +1540,7 @@ void ScDocShell::AsciiSave( SvStream& rS
                     }
                     else if ( ((ScFormulaCell*)pCell)->IsValue() )
                     {
-                        ULONG nFormat;
+                        sal_uInt32 nFormat;
                         aDocument.GetNumberFormat( nCol, nRow, nTab, nFormat );
                         if ( bFixedWidth )
                         {
@@ -1574,7 +1574,7 @@ void ScDocShell::AsciiSave( SvStream& rS
                 break;
             case CELLTYPE_VALUE :
                 {
-                    ULONG nFormat;
+                    sal_uInt32 nFormat;
                     aDocument.GetNumberFormat( nCol, nRow, nTab, nFormat );
                     if ( bFixedWidth )
                     {
--- sc/source/ui/docshell/docsh8.cxx	2004-06-04 13:24:52.000000000 +0200
+++ sc/source/ui/docshell/docsh8.cxx	2005-01-04 14:23:58.161542583 +0100
@@ -607,7 +607,7 @@ void lcl_GetColumnTypes( ScDocShell& rDo
 				nDbType = sdbc::DataType::VARCHAR;
 			else
 			{
-				ULONG nFormat;
+				sal_uInt32 nFormat;
 				pDoc->GetNumberFormat( nCol, nFirstDataRow, nTab, nFormat );
 				if ( pCell && pCell->GetCellType() == CELLTYPE_FORMULA
 				  && ((nFormat % SV_COUNTRY_LANGUAGE_OFFSET) == 0) )
@@ -994,7 +994,7 @@ ULONG ScDocShell::DBaseExport( const Str
 								}
 								else
 								{
-									ULONG nFormat;
+									sal_uInt32 nFormat;
 									Color* pColor;
 									aDocument.GetNumberFormat( nDocCol, nDocRow, nTab, nFormat );
 									ScCellFormat::GetString( pCell, nFormat, aString, &pColor, *pNumFmt );
--- sc/source/ui/docshell/impex.cxx	2004-10-15 12:33:16.000000000 +0200
+++ sc/source/ui/docshell/impex.cxx	2005-01-04 14:30:32.917313930 +0100
@@ -832,7 +832,7 @@ bool lcl_PutString( ScDocument* pDoc, SC
 		//!	SetString mit Extra-Flag ???
 
 		SvNumberFormatter* pFormatter = pDoc->GetFormatTable();
-		ULONG nEnglish = pFormatter->GetStandardIndex(LANGUAGE_ENGLISH_US);
+		sal_uInt32 nEnglish = pFormatter->GetStandardIndex(LANGUAGE_ENGLISH_US);
 		double fVal;
 		if ( pFormatter->IsNumberFormat( rStr, nEnglish, fVal ) )
 		{
@@ -1536,7 +1536,7 @@ BOOL ScImportExport::Sylk2Doc( SvStream&
                         aCode.Erase( nPos, 1 );
                     xub_StrLen nCheckPos;
                     short nType;
-                    ULONG nKey;
+                    sal_uInt32 nKey;
                     pDoc->GetFormatTable()->PutandConvertEntry(
                         aCode, nCheckPos, nType, nKey, LANGUAGE_ENGLISH_US,
                         ScGlobal::eLnge );
--- sc/source/ui/inc/docsh.hxx	2004-12-07 14:18:08.000000000 +0100
+++ sc/source/ui/inc/docsh.hxx	2005-01-04 13:33:02.007198058 +0100
@@ -223,7 +223,7 @@ public:
 	virtual SfxUndoManager*     GetUndoManager();
 
 	virtual void	FillClass( SvGlobalName * pClassName,
-							   ULONG * pFormat,
+							   sal_uInt32 * pFormat,
 							   String * pAppName,
 							   String * pFullTypeName,
 							   String * pShortTypeName,
--- sc/source/ui/miscdlgs/filldlg.cxx	2004-08-23 11:36:22.000000000 +0200
+++ sc/source/ui/miscdlgs/filldlg.cxx	2005-01-04 16:52:41.604579803 +0100
@@ -268,7 +268,7 @@ void ScFillSeriesDlg::Init( USHORT nPoss
 BOOL __EXPORT ScFillSeriesDlg::CheckStartVal()
 {
 	BOOL bValOk = FALSE;
-	ULONG  nKey = 0;
+	sal_uInt32 nKey = 0;
 	String aStr( aEdStartVal.GetText() );
 
 	if ( aStr.Len() == 0 || aBtnAutoFill.IsChecked())
@@ -287,7 +287,7 @@ BOOL __EXPORT ScFillSeriesDlg::CheckStar
 
 BOOL __EXPORT ScFillSeriesDlg::CheckIncrementVal()
 {
-	ULONG  nKey = 0;
+	sal_uInt32 nKey = 0;
 	String aStr( aEdIncrement.GetText() );
 
 	return rDoc.GetFormatTable()->IsNumberFormat( aStr, nKey, fIncrement );
@@ -299,7 +299,7 @@ BOOL __EXPORT ScFillSeriesDlg::CheckIncr
 BOOL __EXPORT ScFillSeriesDlg::CheckEndVal()
 {
 	BOOL	bValOk = FALSE;
-	ULONG	nKey = 0;
+	sal_uInt32 nKey = 0;
 	String	aStr( aEdEndVal.GetText() );
 
 	if ( aStr.Len() == 0 )
--- sc/source/ui/miscdlgs/solvrdlg.cxx	2004-02-04 15:28:04.000000000 +0100
+++ sc/source/ui/miscdlgs/solvrdlg.cxx	2005-01-04 16:52:07.324523031 +0100
@@ -248,7 +248,7 @@ BOOL ScSolverDlg::IsRefInputMode() const
 
 BOOL __EXPORT ScSolverDlg::CheckTargetValue( String& rStrVal )
 {
-	ULONG  n1 = 0;
+	sal_uInt32 n1 = 0;
 	double n2;
 
 	return pDoc->GetFormatTable()->IsNumberFormat( rStrVal, n1, n2 );
--- sc/source/ui/unoobj/cellsuno.cxx	2004-11-16 11:25:13.000000000 +0100
+++ sc/source/ui/unoobj/cellsuno.cxx	2005-01-04 16:51:44.466486097 +0100
@@ -1349,7 +1349,7 @@ String lcl_GetInputString( ScDocShell* p
                 // Since the English formatter was constructed with
                 // LANGUAGE_ENGLISH_US the "General" format has index key 0,
                 // we don't have to query.
-				ULONG nNumFmt = bEnglish ?
+				sal_uInt32 nNumFmt = bEnglish ?
 //						pFormatter->GetStandardIndex(LANGUAGE_ENGLISH_US) :
                         0 :
 						pDoc->GetNumberFormat( rPosition );
--- sc/source/ui/view/cellsh1.cxx	2004-12-29 18:59:40.582826266 +0100
+++ sc/source/ui/view/cellsh1.cxx	2005-01-04 14:07:29.346357217 +0100
@@ -620,7 +620,7 @@ void ScCellShell::ExecuteEdit( SfxReques
 					const SfxPoolItem* pItem;
 					String	aFillDir, aFillCmd, aFillDateCmd;
 					String	aFillStep, aFillStart, aFillMax;
-					ULONG	nKey;
+					sal_uInt32 nKey;
 					double	fTmpVal;
 
 					bDoIt=FALSE;
@@ -684,7 +684,7 @@ void ScCellShell::ExecuteEdit( SfxReques
 				else // (pReqArgs == NULL) => Dialog hochziehen
 				{
 					//
-					ULONG nPrivFormat;
+					sal_uInt32 nPrivFormat;
 					CellType eCellType;
 					pDoc->GetNumberFormat( nStartCol, nStartRow, nStartTab, nPrivFormat );
 					pDoc->GetCellType( nStartCol, nStartRow, nStartTab,eCellType );
--- sc/source/ui/view/gridwin.cxx	2004-12-29 18:59:52.915684403 +0100
+++ sc/source/ui/view/gridwin.cxx	2005-01-04 13:37:03.840469755 +0100
@@ -4629,8 +4629,8 @@ BOOL ScGridWindow::GetEditUrlOrError( BO
     Size aPaperSize = Size( 1000000, 1000000 );
     if(pCell->GetCellType() == CELLTYPE_FORMULA)
     {
-        long nSizeX  = 0;
-        long nSizeY  = 0;
+        sal_Int32 nSizeX  = 0;
+        sal_Int32 nSizeY  = 0;
         pViewData->GetMergeSizePixel( nPosX, nPosY, nSizeX, nSizeY );
         aPaperSize = Size(nSizeX, nSizeY );
         aPaperSize = PixelToLogic(aPaperSize);
--- sc/source/ui/view/gridwin4.cxx	2004-12-29 18:59:52.916684230 +0100
+++ sc/source/ui/view/gridwin4.cxx	2005-01-04 13:37:58.377059392 +0100
@@ -1329,8 +1329,8 @@ Rectangle ScGridWindow::GetListValButton
     SCCOL nCol = rButtonPos.Col();
     SCROW nRow = rButtonPos.Row();
 
-    long nCellSizeX;    // width of this cell, including merged
-    long nDummy;
+    sal_Int32 nCellSizeX;    // width of this cell, including merged
+    sal_Int32 nDummy;
     pViewData->GetMergeSizePixel( nCol, nRow, nCellSizeX, nDummy );
 
     // for height, only the cell's row is used, excluding merged cells
--- sc/source/ui/view/tabvwsha.cxx	2004-10-15 12:33:36.000000000 +0200
+++ sc/source/ui/view/tabvwsha.cxx	2005-01-04 14:16:03.015623261 +0100
@@ -131,7 +131,7 @@ BOOL ScTabViewShell::GetFunction( String
 		aStr += '=';
 
 		//	Anzahl im Standardformat, die anderen nach Cursorposition
-		ULONG nNumFmt = 0;
+		sal_uInt32 nNumFmt = 0;
 		SvNumberFormatter* pFormatter = pDoc->GetFormatTable();
 		if ( eFunc != SUBTOTAL_FUNC_CNT && eFunc != SUBTOTAL_FUNC_CNT2 )
 		{
@@ -560,7 +560,7 @@ void ScTabViewShell::UpdateInputHandler(
 					//!	Auch bei Zahlformat "Text"? -> dann beim Editieren wegnehmen
 
 					SvNumberFormatter* pFormatter = pDoc->GetFormatTable();
-					ULONG nNumFmt;
+					sal_uInt32 nNumFmt;
 					pDoc->GetNumberFormat( nPosX, nPosY, nTab, nNumFmt );
 					double fDummy;
 					if ( pFormatter->IsNumberFormat(aString, nNumFmt, fDummy) )
--- sc/source/ui/view/tabvwsh5.cxx	2004-06-04 14:07:53.000000000 +0200
+++ sc/source/ui/view/tabvwsh5.cxx	2005-01-04 13:45:30.083115833 +0100
@@ -443,11 +443,11 @@ void ScTabViewShell::UpdateNumberFormatt
 						ScDocument* 			 pDoc,
 						const SvxNumberInfoItem& rInfoItem )
 {
-	const ULONG nDelCount = rInfoItem.GetDelCount();
+	const sal_uInt32 nDelCount = rInfoItem.GetDelCount();
 
 	if ( nDelCount > 0 )
 	{
-		const ULONG* pDelArr = rInfoItem.GetDelArray();
+		const sal_uInt32* pDelArr = rInfoItem.GetDelArray();
 
 		for ( USHORT i=0; i<nDelCount; i++ )
 			rInfoItem.GetNumberFormatter()->DeleteEntry( pDelArr[i] );
--- sc/source/ui/view/viewfunc.cxx	2004-09-09 11:31:12.000000000 +0200
+++ sc/source/ui/view/viewfunc.cxx	2005-01-04 14:22:28.129102681 +0100
@@ -999,9 +999,9 @@ void ScViewFunc::ApplyAttributes( const 
 
 	if ( pDialogSet->GetItemState( ATTR_VALUE_FORMAT ) == SFX_ITEM_SET )
 	{	// #82521# don't reset to default SYSTEM GENERAL if not intended
-		ULONG nOldFormat =
+		sal_uInt32 nOldFormat =
 			((const SfxUInt32Item&)pOldSet->Get( ATTR_VALUE_FORMAT )).GetValue();
-		ULONG nNewFormat =
+		sal_uInt32 nNewFormat =
 			((const SfxUInt32Item&)pDialogSet->Get( ATTR_VALUE_FORMAT )).GetValue();
 		if ( nNewFormat != nOldFormat )
 		{
@@ -1019,7 +1019,7 @@ void ScViewFunc::ApplyAttributes( const 
 					SvxLanguageItem( eNewLang, ATTR_LANGUAGE_FORMAT ) );
 
 				//	#40606# nur die Sprache geaendert -> Zahlformat-Attribut nicht anfassen
-				ULONG nNewMod = nNewFormat % SV_COUNTRY_LANGUAGE_OFFSET;
+				sal_uInt32 nNewMod = nNewFormat % SV_COUNTRY_LANGUAGE_OFFSET;
 				if ( nNewMod == ( nOldFormat % SV_COUNTRY_LANGUAGE_OFFSET ) &&
 				 	nNewMod <= SV_MAX_ANZ_STANDARD_FORMATE )
 					aNewAttrs.GetItemSet().ClearItem( ATTR_VALUE_FORMAT );
@@ -2393,7 +2393,7 @@ void ScViewFunc::SetNumberFormat( short 
 		return;
 	}
 
-	ULONG				nNumberFormat = 0;
+	sal_uInt32			nNumberFormat = 0;
 	ScViewData*			pViewData = GetViewData();
 	ScDocument*			pDoc = pViewData->GetDocument();
 	SvNumberFormatter*	pNumberFormatter = pDoc->GetFormatTable();
@@ -2402,7 +2402,7 @@ void ScViewFunc::SetNumberFormat( short 
 
 	//	#67936# always take language from cursor position, even if there is a selection
 
-	ULONG nCurrentNumberFormat;
+	sal_uInt32 nCurrentNumberFormat;
 	pDoc->GetNumberFormat( pViewData->GetCurX(),
 						   pViewData->GetCurY(),
 						   pViewData->GetTabNo(),
@@ -2435,7 +2435,7 @@ void ScViewFunc::SetNumFmtByStr( const S
 
 	//	Sprache immer von Cursorposition
 
-	ULONG nCurrentNumberFormat;
+	sal_uInt32 nCurrentNumberFormat;
 	pDoc->GetNumberFormat( pViewData->GetCurX(), pViewData->GetCurY(),
 						   pViewData->GetTabNo(), nCurrentNumberFormat );
 	const SvNumberformat* pEntry = pFormatter->GetEntry( nCurrentNumberFormat );
@@ -2444,7 +2444,7 @@ void ScViewFunc::SetNumFmtByStr( const S
 	//	Index fuer String bestimmen
 
 	BOOL bOk = TRUE;
-	ULONG nNumberFormat = pFormatter->GetEntryKey( rCode, eLanguage );
+	sal_uInt32 nNumberFormat = pFormatter->GetEntryKey( rCode, eLanguage );
 	if ( nNumberFormat == NUMBERFORMAT_ENTRY_NOT_FOUND )
 	{
 		//	neu eintragen
@@ -2484,7 +2484,7 @@ void ScViewFunc::ChangeNumFmtDecimals( B
 	SCROW nRow = GetViewData()->GetCurY();
 	SCTAB nTab = GetViewData()->GetTabNo();
 
-	ULONG nOldFormat;
+	sal_uInt32 nOldFormat;
 	pDoc->GetNumberFormat( nCol, nRow, nTab, nOldFormat );
 	const SvNumberformat* pOldEntry = pFormatter->GetEntry( nOldFormat );
 	if (!pOldEntry)
@@ -2495,7 +2495,7 @@ void ScViewFunc::ChangeNumFmtDecimals( B
 
 	//	was haben wir denn da?
 
-	ULONG nNewFormat = nOldFormat;
+	sal_uInt32 nNewFormat = nOldFormat;
 	BOOL bError = FALSE;
 
 	LanguageType eLanguage = pOldEntry->GetLanguage();
