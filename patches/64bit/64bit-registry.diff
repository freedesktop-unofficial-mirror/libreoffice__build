Index: registry/tools/checksingleton.cxx
===================================================================
RCS file: /cvs/udk/registry/tools/checksingleton.cxx,v
retrieving revision 1.6
retrieving revision 1.6.82.1
diff -u -p -u -r1.6 -r1.6.82.1
--- registry/tools/checksingleton.cxx	26 Mar 2003 15:37:48 -0000	1.6
+++ registry/tools/checksingleton.cxx	25 Aug 2004 12:44:14 -0000	1.6.82.1
@@ -59,6 +59,7 @@
  *
  ************************************************************************/
 #include <stdio.h>
+#include <strings.h>
 
 #include <set>
 
Index: registry/tools/regcompare.cxx
===================================================================
RCS file: /cvs/udk/registry/tools/regcompare.cxx,v
retrieving revision 1.18
retrieving revision 1.18.8.1
diff -u -p -u -r1.18 -r1.18.8.1
--- registry/tools/regcompare.cxx	4 Jun 2004 02:46:32 -0000	1.18
+++ registry/tools/regcompare.cxx	25 Aug 2004 13:25:05 -0000	1.18.8.1
@@ -90,6 +90,9 @@
 #ifndef _OSL_FILE_HXX_
 #include <osl/file.hxx>
 #endif
+#ifndef _SAL_TYPES_H_
+#include <sal/types.h>
+#endif
 
 #ifdef SAL_UNX
 #define SEPARATOR '/'
@@ -97,6 +100,13 @@
 #define SEPARATOR '\\'
 #endif
 
+#if SAL_TYPES_SIZEOFPOINTER == 8
+#define PRIdINTPTR "ld"
+#else
+#define PRIdINTPTR "d"
+#endif
+
+
 using namespace ::rtl;
 using namespace ::osl;
 
@@ -473,25 +483,25 @@ static sal_Char* getTypeClass(RTTypeClas
 	switch (typeClass)
 	{
 		case RT_TYPE_INTERFACE:
-			return "INTERFACE";
+			return (sal_Char*)"INTERFACE";
 		case RT_TYPE_MODULE:
-			return "MODULE";
+			return (sal_Char*)"MODULE";
 		case RT_TYPE_STRUCT:
-			return "STRUCT";
+			return (sal_Char*)"STRUCT";
 		case RT_TYPE_ENUM:
-			return "ENUM";
+			return (sal_Char*)"ENUM";
 		case RT_TYPE_EXCEPTION:
-			return "EXCEPTION";
+			return (sal_Char*)"EXCEPTION";
 		case RT_TYPE_TYPEDEF:
-			return "TYPEDEF";
+			return (sal_Char*)"TYPEDEF";
 		case RT_TYPE_SERVICE:
-			return "SERVICE";
+			return (sal_Char*)"SERVICE";
 		case RT_TYPE_OBJECT:
-			return "OBJECT";
+			return (sal_Char*)"OBJECT";
 		case RT_TYPE_CONSTANTS:
-			return "CONSTANTS";
+			return (sal_Char*)"CONSTANTS";
 	}
-	return "INVALID";
+	return (sal_Char*)"INVALID";
 }	
 
 static OString getFieldAccess(RTFieldAccess fieldAccess)
@@ -561,29 +571,29 @@ static sal_Char* getConstValueType(RTCon
 	switch (constValue.m_type)
 	{
 		case RT_TYPE_BOOL:
-			return "sal_Bool";
+			return (sal_Char*)"sal_Bool";
 		case RT_TYPE_BYTE:
-			return "sal_uInt8";
+			return (sal_Char*)"sal_uInt8";
 		case RT_TYPE_INT16:
-			return "sal_Int16";
+			return (sal_Char*)"sal_Int16";
 		case RT_TYPE_UINT16:
-			return "sal_uInt16";
+			return (sal_Char*)"sal_uInt16";
 		case RT_TYPE_INT32:
-			return "sal_Int32";
+			return (sal_Char*)"sal_Int32";
 		case RT_TYPE_UINT32:
-			return "sal_uInt32";
+			return (sal_Char*)"sal_uInt32";
 //		case RT_TYPE_INT64:
-//			return "sal_Int64";
+//			return (sal_Char*)"sal_Int64";
 //		case RT_TYPE_UINT64:
-//			return "sal_uInt64";
+//			return (sal_Char*)"sal_uInt64";
 		case RT_TYPE_FLOAT:
-			return "float";
+			return (sal_Char*)"float";
 		case RT_TYPE_DOUBLE:
-			return "double";
+			return (sal_Char*)"double";
 		case RT_TYPE_STRING:
-			return "sal_Unicode*";
+			return (sal_Char*)"sal_Unicode*";
 	}	
-	return "NONE";
+	return (sal_Char*)"NONE";
 }	
 static void printConstValue(RTConstValue& constValue)
 {
@@ -927,15 +937,15 @@ static sal_Char* getMethodMode(RTMethodM
 	switch ( methodMode )
 	{
 		case RT_MODE_ONEWAY:
-			return "ONEWAY";
+			return (sal_Char*)"ONEWAY";
 		case RT_MODE_ONEWAY_CONST:
-			return "ONEWAY,CONST";
+			return (sal_Char*)"ONEWAY,CONST";
 		case RT_MODE_TWOWAY:
-			return "NONE";
+			return (sal_Char*)"NONE";
 		case RT_MODE_TWOWAY_CONST:
-			return "CONST";
+			return (sal_Char*)"CONST";
 	}
-	return "INVALID";
+	return (sal_Char*)"INVALID";
 } 
 
 static sal_Char* getParamMode(RTParamMode paramMode)
@@ -943,13 +953,13 @@ static sal_Char* getParamMode(RTParamMod
 	switch ( paramMode )
 	{
 		case RT_PARAM_IN:
-			return "IN";
+			return (sal_Char*)"IN";
 		case RT_PARAM_OUT:
-			return "OUT";
+			return (sal_Char*)"OUT";
 		case RT_PARAM_INOUT:
-			return "INOUT";
+			return (sal_Char*)"INOUT";
 	}
-	return "INVALID";
+	return (sal_Char*)"INVALID";
 } 
 
 static sal_uInt32 checkMethod(const OUString& keyName,
@@ -1170,15 +1180,15 @@ static sal_Char* getReferenceType(RTRefe
 	switch (refType)
 	{
 		case RT_REF_SUPPORTS:
-			return "RT_REF_SUPPORTS";
+			return (sal_Char*)"RT_REF_SUPPORTS";
 		case RT_REF_OBSERVES:
-			return "RT_REF_OBSERVES";
+			return (sal_Char*)"RT_REF_OBSERVES";
 		case RT_REF_EXPORTS:
-			return "RT_REF_EXPORTS";
+			return (sal_Char*)"RT_REF_EXPORTS";
 		case RT_REF_NEEDS:
-			return "RT_REF_NEEDS";
+			return (sal_Char*)"RT_REF_NEEDS";
 	}
-	return "RT_REF_INVALID";
+	return (sal_Char*)"RT_REF_INVALID";
 }
 
 static sal_uInt32 checkReference(const OUString& keyName,
@@ -1822,7 +1832,7 @@ static sal_uInt32 checkValueDifference(R
 			case RG_VALUETYPE_LONG:
 				fprintf(stdout, "    Registry 1: Value: Type = RG_VALUETYPE_LONG\n");
 				fprintf(stdout, "                       Size = %d\n", size1);
-				fprintf(stdout, "                       Data = %d\n", (sal_Int32)value1);
+				fprintf(stdout, "                       Data = %" PRIdINTPTR "\n", (sal_IntPtr)value1);
 				break;
 			case RG_VALUETYPE_STRING:
 				fprintf(stdout, "    Registry 1: Value: Type = RG_VALUETYPE_STRING\n");
@@ -1905,7 +1915,7 @@ static sal_uInt32 checkValueDifference(R
 			case RG_VALUETYPE_LONG:
 				fprintf(stdout, "    Registry 2: Value: Type = RG_VALUETYPE_LONG\n");
 				fprintf(stdout, "                       Size = %d\n", size2);
-				fprintf(stdout, "                       Data = %d\n", (sal_Int32)value2);
+				fprintf(stdout, "                       Data = %" PRIdINTPTR "\n", (sal_IntPtr)value2);
 				break;
 			case RG_VALUETYPE_STRING:
 				fprintf(stdout, "    Registry 2: Value: Type = RG_VALUETYPE_STRING\n");
Index: registry/workben/regspeed.cxx
===================================================================
RCS file: /cvs/udk/registry/workben/regspeed.cxx,v
retrieving revision 1.2
retrieving revision 1.2.80.1
diff -u -p -u -r1.2 -r1.2.80.1
--- registry/workben/regspeed.cxx	28 Apr 2003 16:22:43 -0000	1.2
+++ registry/workben/regspeed.cxx	25 Aug 2004 13:26:03 -0000	1.2.80.1
@@ -228,7 +228,7 @@ int _cdecl main( int argc, char * argv[]
 			printf("\n %d keys oeffnen und schliessen dauert ... ", (S1 * S2 * S3));
 			aTimer.start();
 			
-			for (i=0; i < S1; i++)
+			for (sal_Int32 i=0; i < S1; i++)
 			{
 				keyName1 = OUString::createFromAscii("/");
 				keyName1 += sName1;
