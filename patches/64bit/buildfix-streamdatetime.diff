--- tools/inc/date.hxx	2005-09-09 15:37:19.000000000 +0200
+++ tools/inc/date.hxx	2006-03-22 17:16:10.000000000 +0100
@@ -63,21 +63,21 @@ enum DayOfWeek { MONDAY, TUESDAY, WEDNES
 class TOOLS_DLLPUBLIC Date
 {
 private:
-	ULONG			nDate;
+	sal_uInt32		nDate;
 
 public:
 					Date();
 					Date( const ResId & rResId );
-					Date( ULONG _nDate ) { Date::nDate = _nDate; }
+					Date( sal_uInt32 _nDate ) { Date::nDate = _nDate; }
 					Date( const Date& rDate )
 						{ nDate = rDate.nDate; }
 					Date( USHORT nDay, USHORT nMonth, USHORT nYear )
-						{ nDate = ((ULONG)(nDay%100)) +
-								  (((ULONG)(nMonth%100))*100) +
-								  (((ULONG)nYear%10000)*10000); }
+						{ nDate = (   sal_uInt32( nDay   % 100 ) ) +
+								  ( ( sal_uInt32( nMonth % 100 ) ) * 100 ) +
+								  ( ( sal_uInt32( nYear  % 10000 ) ) * 10000); }
 
-	void			SetDate( ULONG nNewDate ) { nDate = nNewDate; }
-	ULONG			GetDate() const { return nDate; }
+	void			SetDate( sal_uInt32 nNewDate ) { nDate = nNewDate; }
+	sal_uInt32		GetDate() const { return nDate; }
 
 	void			SetDay( USHORT nNewDay );
 	void			SetMonth( USHORT nNewMonth );
--- svtools/inc/httpcook.hxx	2006-02-20 14:34:16.000000000 +0000
+++ svtools/inc/httpcook.hxx	2006-02-20 14:34:41.000000000 +0000
@@ -126,7 +126,7 @@
 		SfxPoolItem::readUnicodeString(rStrm, m_aDomain, bUnicode);
 		SfxPoolItem::readUnicodeString(rStrm, m_aPath, bUnicode);
 
-		ULONG nValue = 0;
+		sal_uInt32 nValue = 0;
 		rStrm >> nValue;
 		m_aExpires.SetDate (nValue);
 		rStrm >> nValue;
--- svtools/source/items1/dateitem.cxx	2006-02-16 11:45:16.000000000 +0000
+++ svtools/source/items1/dateitem.cxx	2006-02-16 12:12:34.000000000 +0000
@@ -135,8 +135,8 @@
 SfxPoolItem* SfxDateTimeItem::Create( SvStream& rStream, USHORT ) const
 {
 	DBG_CHKTHIS(SfxDateTimeItem, 0);
-	ULONG nDate = 0;
-	long nTime = 0;
+	sal_uInt32 nDate = 0;
+	sal_Int32 nTime = 0;
 	rStream >> nDate;
 	rStream >> nTime;
 	DateTime aDT(nDate, nTime);
--- svtools/source/items1/dtritem.cxx	2006-02-16 11:45:16.000000000 +0000
+++ svtools/source/items1/dtritem.cxx	2006-02-16 12:14:01.000000000 +0000
@@ -121,8 +121,8 @@
 {
 	DBG_CHKTHIS(SfxDateTimeRangeItem, 0);
 
-	ULONG	nStartDate, nEndDate;
-	long	nStartTime, nEndTime;
+	sal_uInt32 nStartDate, nEndDate;
+	sal_Int32 nStartTime, nEndTime;
 
 	rStream >> nStartDate;
 	rStream >> nStartTime;
--- svx/inc/flditem.hxx	2006-03-14 13:08:11.000000000 +0000
+++ svx/inc/flditem.hxx	2006-03-14 13:13:49.000000000 +0000
@@ -143,7 +143,7 @@
 
 class SVX_DLLPUBLIC SvxDateField : public SvxFieldData
 {
-	ULONG					nFixDate;
+	sal_uInt32				nFixDate;
 	SvxDateType				eType;
 	SvxDateFormat			eFormat;
 
@@ -155,7 +155,7 @@
 								SvxDateType eType = SVXDATETYPE_VAR,
 								SvxDateFormat eFormat = SVXDATEFORMAT_STDSMALL );
 
-	ULONG					GetFixDate() const { return nFixDate; }
+	sal_uInt32				GetFixDate() const { return nFixDate; }
 	void					SetFixDate( const Date& rDate ) { nFixDate = rDate.GetDate(); }
 
 	SvxDateType				GetType() const { return eType; }
@@ -284,7 +284,7 @@
 class SVX_DLLPUBLIC SvxExtTimeField : public SvxFieldData
 {
 private:
-	ULONG					nFixTime;
+	sal_uInt32				nFixTime;
 	SvxTimeType				eType;
 	SvxTimeFormat			eFormat;
 
@@ -295,7 +295,7 @@
 								SvxTimeType eType = SVXTIMETYPE_VAR,
 								SvxTimeFormat eFormat = SVXTIMEFORMAT_STANDARD );
 
-	ULONG					GetFixTime() const { return nFixTime; }
+	sal_uInt32				GetFixTime() const { return nFixTime; }
 	void					SetFixTime( const Time& rTime ) { nFixTime = rTime.GetTime(); }
 
 	SvxTimeType				GetType() const { return eType; }
