diff -ru svx.orig/inc/editeng.hxx svx/inc/editeng.hxx
--- svx.orig/inc/editeng.hxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/inc/editeng.hxx	2006-03-22 09:21:19.000000000 +0000
@@ -209,19 +209,19 @@
 
 	String			GetText( LineEnd eEnd = LINEEND_LF ) const;
 	String			GetText( const ESelection& rSelection, const LineEnd eEnd = LINEEND_LF ) const;
-	ULONG			GetTextLen() const;
-	ULONG			GetTextHeight() const;
-	ULONG			CalcTextWidth();
+	sal_uInt32		GetTextLen() const;
+	sal_uInt32		GetTextHeight() const;
+	sal_uInt32		CalcTextWidth();
 
 	String 			GetText( USHORT nParagraph ) const;
-	xub_StrLen			GetTextLen( USHORT nParagraph ) const;
-	ULONG			GetTextHeight( USHORT nParagraph ) const;
+	xub_StrLen		GetTextLen( USHORT nParagraph ) const;
+	sal_uInt32		GetTextHeight( USHORT nParagraph ) const;
 
 	USHORT 			GetParagraphCount() const;
 
 	USHORT			GetLineCount( USHORT nParagraph ) const;
 	xub_StrLen		GetLineLen( USHORT nParagraph, USHORT nLine ) const;
-	ULONG			GetLineHeight( USHORT nParagraph, USHORT nLine = 0 );
+	sal_uInt32		GetLineHeight( USHORT nParagraph, USHORT nLine = 0 );
 	USHORT			GetFirstLineOffset( USHORT nParagraph );
 	ParagraphInfos 	GetParagraphInfos( USHORT nPara );
 	USHORT			FindParagraph( long nDocPosY );
@@ -325,8 +325,8 @@
 	BOOL			IsFlatMode() const;
 	void			SetFlatMode( BOOL bFlat );
 
-	void			SetControlWord( ULONG nWord );
-	ULONG			GetControlWord() const;
+	void			SetControlWord( sal_uInt32 nWord );
+	sal_uInt32		GetControlWord() const;
 
 	void			QuickSetAttribs( const SfxItemSet& rSet, const ESelection& rSel );
 	void 			QuickRemoveCharAttribs( USHORT nPara, USHORT nWhich = 0 );
@@ -454,7 +454,7 @@
 	virtual Rectangle GetBulletArea( USHORT nPara );
 
 	static SfxItemPool*	CreatePool( BOOL bLoadRefCounts = TRUE );
-	static ULONG	RegisterClipboardFormatName();
+	static sal_uInt32	RegisterClipboardFormatName();
 	static BOOL		DoesKeyChangeText( const KeyEvent& rKeyEvent );
 	static BOOL		DoesKeyMoveCursor( const KeyEvent& rKeyEvent );
 	static BOOL		IsSimpleCharInput( const KeyEvent& rKeyEvent );
diff -ru svx.orig/inc/editview.hxx svx/inc/editview.hxx
--- svx.orig/inc/editview.hxx	2006-03-21 15:11:02.000000000 +0000
+++ svx/inc/editview.hxx	2006-03-22 08:39:15.000000000 +0000
@@ -205,8 +205,8 @@
 	void 			SetBackgroundColor( const Color& rColor );
 	Color			GetBackgroundColor() const;
 
-	void			SetControlWord( ULONG nWord );
-	ULONG			GetControlWord() const;
+	void			SetControlWord( sal_uInt32 nWord );
+	sal_uInt32		GetControlWord() const;
 
 	EditTextObject*	CreateTextObject();
 	void			InsertText( const EditTextObject& rTextObject );
diff -ru svx.orig/inc/msdffimp.hxx svx/inc/msdffimp.hxx
--- svx.orig/inc/msdffimp.hxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/inc/msdffimp.hxx	2006-03-22 09:25:58.000000000 +0000
@@ -517,7 +517,7 @@
 										BYTE&     rVer,
 										USHORT&   rInst,
 										USHORT&   rFbt,
-										ULONG&    rLength );
+										UINT32&    rLength );
 /*
 	Konstruktor
 	===========
@@ -565,7 +565,7 @@
 
 	void SetModel(SdrModel* pModel, long nApplicationScale);
 	SdrModel*  GetModel() const { return pSdrModel; }
-	void Scale(long& rVal) const;
+	void Scale(sal_Int32& rVal) const;
 	void Scale(Point& rPos) const;
 	void Scale(Size& rSiz) const;
 	void Scale(Rectangle& rRect) const;
@@ -573,7 +573,7 @@
 	void Scale(PolyPolygon& rPoly) const;
 	void Scale(XPolygon& rPoly) const;
 	void Scale(XPolyPolygon& rPoly) const;
-	void ScaleEmu(long& rVal) const;
+	void ScaleEmu(sal_Int32& rVal) const;
 	UINT32 ScalePt( UINT32 nPt ) const;
 	INT32 ScalePoint( INT32 nVal ) const;
 
diff -ru svx.orig/inc/svdmodel.hxx svx/inc/svdmodel.hxx
--- svx.orig/inc/svdmodel.hxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/inc/svdmodel.hxx	2006-03-21 16:01:39.000000000 +0000
@@ -362,10 +362,10 @@
 	// Zeichenobjekte verwenden moechte. Setzt man degegen nur vom abstrakten
 	// Basisobjekt SdrObject abgeleitete Objekte ein, so ist man frei in der
 	// Wahl des Pools.
-	SdrModel(SfxItemPool* pPool=NULL, SfxObjectShell* pPers=NULL, INT32 bLoadRefCounts = LOADREFCOUNTS);
-	SdrModel(const String& rPath, SfxItemPool* pPool=NULL, SfxObjectShell* pPers=NULL, INT32 bLoadRefCounts = LOADREFCOUNTS);
-	SdrModel(SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, INT32 bLoadRefCounts = LOADREFCOUNTS);
-	SdrModel(const String& rPath, SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, INT32 bLoadRefCounts = LOADREFCOUNTS);
+	SdrModel(SfxItemPool* pPool=NULL, SfxObjectShell* pPers=NULL, sal_Bool bLoadRefCounts = LOADREFCOUNTS);
+	SdrModel(const String& rPath, SfxItemPool* pPool=NULL, SfxObjectShell* pPers=NULL, sal_Bool bLoadRefCounts = LOADREFCOUNTS);
+	SdrModel(SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, sal_Bool bLoadRefCounts = LOADREFCOUNTS);
+	SdrModel(const String& rPath, SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, sal_Bool bLoadRefCounts = LOADREFCOUNTS);
 	virtual ~SdrModel();
 
 	// #116168#
diff -ru svx.orig/source/accessibility/AccessibleContextBase.cxx svx/source/accessibility/AccessibleContextBase.cxx
--- svx.orig/source/accessibility/AccessibleContextBase.cxx	2006-03-21 15:11:00.000000000 +0000
+++ svx/source/accessibility/AccessibleContextBase.cxx	2006-03-21 15:11:08.000000000 +0000
@@ -261,7 +261,7 @@
     an exception for a wrong index.
 */
 uno::Reference<XAccessible> SAL_CALL
-    AccessibleContextBase::getAccessibleChild (long nIndex)
+    AccessibleContextBase::getAccessibleChild (sal_Int32 nIndex)
     throw (::com::sun::star::lang::IndexOutOfBoundsException, ::com::sun::star::uno::RuntimeException)
 {
     ThrowIfDisposed ();
diff -ru svx.orig/source/accessibility/AccessibleStringWrap.cxx svx/source/accessibility/AccessibleStringWrap.cxx
--- svx.orig/source/accessibility/AccessibleStringWrap.cxx	2006-03-21 15:11:00.000000000 +0000
+++ svx/source/accessibility/AccessibleStringWrap.cxx	2006-03-21 15:17:39.000000000 +0000
@@ -78,7 +78,7 @@
     }
     else
     {
-        long aXArray[2];
+        sal_Int32 aXArray[2];
         mrDev.GetCaretPositions( maText, aXArray, static_cast< USHORT >(nIndex), 1 );
         rRect.Left() = 0;
         rRect.Top() = 0;
diff -ru svx.orig/source/dialog/connpooloptions.cxx svx/source/dialog/connpooloptions.cxx
--- svx.orig/source/dialog/connpooloptions.cxx	2006-03-21 15:10:59.000000000 +0000
+++ svx/source/dialog/connpooloptions.cxx	2006-03-21 15:40:51.000000000 +0000
@@ -116,7 +116,7 @@
 		virtual void CursorMoved();
 
 	protected:
-		virtual ULONG GetTotalCellWidth(long nRow, USHORT nColId);
+		virtual sal_uInt32 GetTotalCellWidth(long nRow, USHORT nColId);
 
 
 	private:
@@ -235,7 +235,7 @@
 	}
 
 	//--------------------------------------------------------------------
-	ULONG DriverListControl::GetTotalCellWidth(long nRow, USHORT nColId)
+	sal_uInt32 DriverListControl::GetTotalCellWidth(long nRow, USHORT nColId)
 	{
 		return GetDataWindow().GetTextWidth(GetCellText(nRow, nColId));
 	}
diff -ru svx.orig/source/dialog/optmemory.cxx svx/source/dialog/optmemory.cxx
--- svx.orig/source/dialog/optmemory.cxx	2006-03-21 15:10:59.000000000 +0000
+++ svx/source/dialog/optmemory.cxx	2006-03-21 15:43:42.000000000 +0000
@@ -317,7 +317,7 @@
     // GraphicCache
 	long	n = aCacheOptions.GetGraphicManagerTotalCacheSize();
 	SetNfGraphicCacheVal( n );
-	SetNfGraphicObjectCacheVal( Min( GetNfGraphicCacheVal(), aCacheOptions.GetGraphicManagerObjectCacheSize() ) );
+	SetNfGraphicObjectCacheVal( Min( static_cast<sal_Int32>(GetNfGraphicCacheVal()), aCacheOptions.GetGraphicManagerObjectCacheSize() ) );
 
 	sal_Int32 nTime = aCacheOptions.GetGraphicManagerObjectReleaseTime();
     Time aTime( (USHORT)( nTime / 3600 ), (USHORT)( ( nTime % 3600 ) / 60 ), (USHORT)( ( nTime % 3600 ) % 60 ) );
diff -ru svx.orig/source/dialog/transfrm.cxx svx/source/dialog/transfrm.cxx
--- svx.orig/source/dialog/transfrm.cxx	2006-03-21 15:10:59.000000000 +0000
+++ svx/source/dialog/transfrm.cxx	2006-03-21 16:05:34.000000000 +0000
@@ -1279,8 +1279,8 @@
 {
 	if( pSet )
 	{
-		INT32 lX = maMtrPosX.GetValue();
-		INT32 lY = maMtrPosY.GetValue();
+		long lX = maMtrPosX.GetValue();
+		long lY = maMtrPosY.GetValue();
 
 		// #106330#
 		// The below BugFix assumed that GetTopLeftPosition()
@@ -1575,7 +1575,7 @@
 
 //------------------------------------------------------------------------
 
-void SvxPositionSizeTabPage::GetTopLeftPosition( INT32& rX, INT32& rY,
+void SvxPositionSizeTabPage::GetTopLeftPosition( long& rX, long& rY,
 												const Rectangle& rRect )
 {
 	switch ( maCtlPos.GetActualRP() )
diff -ru svx.orig/source/dialog/transfrm.hxx svx/source/dialog/transfrm.hxx
--- svx.orig/source/dialog/transfrm.hxx	2006-03-21 15:10:59.000000000 +0000
+++ svx/source/dialog/transfrm.hxx	2006-03-21 16:04:19.000000000 +0000
@@ -159,7 +159,7 @@
 //  DECL_LINK( SetOrientHdl, ListBox * );
 
 	void SetMinMaxPosition();
-	void GetTopLeftPosition( INT32& rX, INT32& rY, const Rectangle& rRect );
+	void GetTopLeftPosition( long& rX, long& rY, const Rectangle& rRect );
 #endif
 
 #if _SOLAR__PRIVATE
diff -ru svx.orig/source/editeng/editdoc2.cxx svx/source/editeng/editdoc2.cxx
--- svx.orig/source/editeng/editdoc2.cxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/source/editeng/editdoc2.cxx	2006-03-22 09:16:14.000000000 +0000
@@ -72,7 +72,7 @@
 
 DBG_NAME( EE_ParaPortion );
 
-SV_IMPL_VARARR( CharPosArray, long );
+SV_IMPL_VARARR( CharPosArray, sal_Int32 );
 
 /*
 
diff -ru svx.orig/source/editeng/editdoc.hxx svx/source/editeng/editdoc.hxx
--- svx.orig/source/editeng/editdoc.hxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/source/editeng/editdoc.hxx	2006-03-22 09:15:56.000000000 +0000
@@ -447,7 +447,7 @@
 
 class ParaPortion;
 
-SV_DECL_VARARR( CharPosArray, long, 0, CHARPOSGROW );
+SV_DECL_VARARR( CharPosArray, sal_Int32, 0, CHARPOSGROW );
 
 // ------------------------------------------------------------------------
 // class EditLine
diff -ru svx.orig/source/editeng/editeng.cxx svx/source/editeng/editeng.cxx
--- svx.orig/source/editeng/editeng.cxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/source/editeng/editeng.cxx	2006-03-22 09:21:34.000000000 +0000
@@ -1248,7 +1248,7 @@
 		pImpEditEngine->FormatAndUpdate();
 }
 
-sal_uInt32 EditEngine::Read( SvStream& rInput, const String& rBaseURL, EETextFormat eFormat, SvKeyValueIterator* pHTTPHeaderAttrs /* = NULL */ )
+ULONG EditEngine::Read( SvStream& rInput, const String& rBaseURL, EETextFormat eFormat, SvKeyValueIterator* pHTTPHeaderAttrs /* = NULL */ )
 {
 	DBG_CHKTHIS( EditEngine, 0 );
 	sal_Bool bUndoEnabled = pImpEditEngine->IsUndoEnabled();
@@ -1260,7 +1260,7 @@
 	return rInput.GetError();
 }
 
-sal_uInt32 EditEngine::Write( SvStream& rOutput, EETextFormat eFormat )
+ULONG EditEngine::Write( SvStream& rOutput, EETextFormat eFormat )
 {
 	DBG_CHKTHIS( EditEngine, 0 );
 	EditPaM aStartPaM( pImpEditEngine->GetEditDoc().GetStartPaM() );
@@ -2367,7 +2367,7 @@
 // =====================================================================
 // ======================   Virtuelle Methoden   =======================
 // =====================================================================
-void __EXPORT EditEngine::DrawingText( const Point&, const XubString&, USHORT nTextStart, USHORT nTextLen, const long*, const SvxFont&, sal_uInt16 nPara, sal_uInt16 nIndex, BYTE nRightToLeft )
+void __EXPORT EditEngine::DrawingText( const Point&, const XubString&, USHORT nTextStart, USHORT nTextLen, const sal_Int32*, const SvxFont&, sal_uInt16 nPara, sal_uInt16 nIndex, BYTE nRightToLeft )
 {
 	DBG_CHKTHIS( EditEngine, 0 );
 }
diff -ru svx.orig/source/editeng/editview.cxx svx/source/editeng/editview.cxx
--- svx.orig/source/editeng/editview.cxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/source/editeng/editview.cxx	2006-03-22 08:38:50.000000000 +0000
@@ -532,7 +532,7 @@
 	PIMPEE->Redo( this );
 }
 
-sal_uInt32 EditView::Read( SvStream& rInput, const String& rBaseURL, EETextFormat eFormat, sal_Bool bSelect, SvKeyValueIterator* pHTTPHeaderAttrs )
+ULONG EditView::Read( SvStream& rInput, const String& rBaseURL, EETextFormat eFormat, sal_Bool bSelect, SvKeyValueIterator* pHTTPHeaderAttrs )
 {
 	DBG_CHKTHIS( EditView, 0 );
 	DBG_CHKOBJ( pImpEditView->pEditEngine, EditEngine, 0 );
@@ -556,7 +556,7 @@
 }
 
 #ifndef SVX_LIGHT
-sal_uInt32 EditView::Write( SvStream& rOutput, EETextFormat eFormat )
+ULONG EditView::Write( SvStream& rOutput, EETextFormat eFormat )
 {
 	DBG_CHKTHIS( EditView, 0 );
 	DBG_CHKOBJ( pImpEditView->pEditEngine, EditEngine, 0 );
diff -ru svx.orig/source/editeng/impedit2.cxx svx/source/editeng/impedit2.cxx
--- svx.orig/source/editeng/impedit2.cxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/source/editeng/impedit2.cxx	2006-03-22 09:17:13.000000000 +0000
@@ -2927,14 +2927,14 @@
 	return aPaM;
 }
 
-ULONG ImpEditEngine::GetTextHeight() const
+sal_uInt32 ImpEditEngine::GetTextHeight() const
 {
 	DBG_ASSERT( GetUpdateMode(), "Sollte bei Update=FALSE nicht verwendet werden: GetTextHeight" );
 	DBG_ASSERT( IsFormatted() || IsFormatting(), "GetTextHeight: Nicht formatiert" );
 	return nCurTextHeight;
 }
 
-ULONG ImpEditEngine::CalcTextWidth( BOOL bIgnoreExtraSpace )
+sal_uInt32 ImpEditEngine::CalcTextWidth( BOOL bIgnoreExtraSpace )
 {
 	// Wenn noch nicht formatiert und nicht gerade dabei.
 	// Wird in der Formatierung bei AutoPageSize gerufen.
@@ -2997,10 +2997,10 @@
 		nMaxWidth = 0;
 
 	nMaxWidth++; // Ein breiter, da in CreateLines bei >= umgebrochen wird.
-	return (ULONG)nMaxWidth;
+	return (sal_uInt32)nMaxWidth;
 }
 
-ULONG ImpEditEngine::CalcLineWidth( ParaPortion* pPortion, EditLine* pLine, BOOL bIgnoreExtraSpace )
+sal_uInt32 ImpEditEngine::CalcLineWidth( ParaPortion* pPortion, EditLine* pLine, BOOL bIgnoreExtraSpace )
 {
 	USHORT nPara = GetEditDoc().GetPos( pPortion->GetNode() );
     
@@ -3013,7 +3013,7 @@
     SvxAdjust eJustification = GetJustification( nPara );
 
     // Berechnung der Breite ohne die Indents...
-	ULONG nWidth = 0;
+	sal_uInt32 nWidth = 0;
     USHORT nPos = pLine->GetStart();
 	for ( USHORT nTP = pLine->GetStartPortion(); nTP <= pLine->GetEndPortion(); nTP++ )
 	{
@@ -3051,10 +3051,10 @@
     return nWidth;
 }
 
-ULONG ImpEditEngine::CalcTextHeight()
+sal_uInt32 ImpEditEngine::CalcTextHeight()
 {
 	DBG_ASSERT( GetUpdateMode(), "Sollte bei Update=FALSE nicht verwendet werden: CalcTextHeight" );
-	ULONG nY = 0;
+	sal_uInt32 nY = 0;
 	for ( USHORT nPortion = 0; nPortion < GetParaPortions().Count(); nPortion++ )
 		nY += GetParaPortions()[nPortion]->GetHeight();
 	return nY;
@@ -3101,9 +3101,9 @@
 	return 0xFFFF;
 }
 
-ULONG ImpEditEngine::GetParaHeight( USHORT nParagraph )
+sal_uInt32 ImpEditEngine::GetParaHeight( USHORT nParagraph )
 {
-	ULONG nHeight = 0;
+	sal_uInt32 nHeight = 0;
 
 	ParaPortion* pPPortion = GetParaPortions().SaveGetObject( nParagraph );
 	DBG_ASSERT( pPPortion, "Absatz nicht gefunden: GetParaHeight" );
@@ -3959,7 +3959,7 @@
 						{
 							USHORT n = nIndex - nTextPortionStart;
 							const sal_Int32* pDXArray = pLine->GetCharPosArray().GetData()+( nTextPortionStart-pLine->GetStart() );
-							long nCharWidth = ( ( (n+1) < pPortion->GetLen() ) ? pDXArray[n] : pPortion->GetSize().Width() )
+							sal_Int32 nCharWidth = ( ( (n+1) < pPortion->GetLen() ) ? pDXArray[n] : pPortion->GetSize().Width() )
 															- ( n ? pDXArray[n-1] : 0 );
 							if ( (n+1) < pPortion->GetLen() )
 							{
@@ -3967,9 +3967,9 @@
 								nType = GetCharTypeForCompression( pParaPortion->GetNode()->GetChar( nIndex+1 ) );
 								if ( nType == CHAR_PUNCTUATIONRIGHT )
 								{
-									long nNextCharWidth = ( ( (n+2) < pPortion->GetLen() ) ? pDXArray[n+1] : pPortion->GetSize().Width() )
+									sal_Int32 nNextCharWidth = ( ( (n+2) < pPortion->GetLen() ) ? pDXArray[n+1] : pPortion->GetSize().Width() )
 																	- pDXArray[n];
-									long nCompressed = nNextCharWidth/2;
+									sal_Int32 nCompressed = nNextCharWidth/2;
 									nCompressed *= pPortion->GetExtraInfos()->nMaxCompression100thPercent;
 									nCompressed /= 10000;
 									nCharWidth += nCompressed;
diff -ru svx.orig/source/editeng/impedit3.cxx svx/source/editeng/impedit3.cxx
--- svx.orig/source/editeng/impedit3.cxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/source/editeng/impedit3.cxx	2006-03-22 09:21:01.000000000 +0000
@@ -751,7 +751,7 @@
 	SvxFont aTmpFont( pNode->GetCharAttribs().GetDefFont() );
 
 	sal_Bool bCalcCharPositions = sal_True;
-	long* pBuf = new long[ pNode->Len() ];
+	sal_Int32* pBuf = new sal_Int32[ pNode->Len() ];
 
 	sal_Bool bSameLineAgain = sal_False;	// Fuer TextRanger, wenn sich die Hoehe aendert.
 	TabInfo aCurrentTab;
@@ -1063,7 +1063,7 @@
 
                 // And now check for Compression:
                 if ( pPortion->GetLen() && GetAsianCompressionMode() )
-                    bCompressedChars |= ImplCalcAsianCompression( pNode, pPortion, nTmpPos, (long*)pLine->GetCharPosArray().GetData() + (nTmpPos-pLine->GetStart()), 10000, FALSE );
+                    bCompressedChars |= ImplCalcAsianCompression( pNode, pPortion, nTmpPos, (sal_Int32*)pLine->GetCharPosArray().GetData() + (nTmpPos-pLine->GetStart()), 10000, FALSE );
 
 				nTmpWidth += pPortion->GetSize().Width();
 
@@ -1236,7 +1236,7 @@
             if ( bCompressedChars && ( pPortion->GetLen() > 1 ) && pPortion->GetExtraInfos() && pPortion->GetExtraInfos()->bCompressed )
             {
                 // I need the manipulated DXArray for determining the break postion...
-                ImplCalcAsianCompression( pNode, pPortion, nPortionStart, const_cast< sal_Int32* >( pLine->GetCharPosArray().GetData() + (nPortionStart-pLine->GetStart()) ), 10000, TRUE );
+                ImplCalcAsianCompression( pNode, pPortion, nPortionStart, const_cast<sal_Int32*>(( pLine->GetCharPosArray().GetData() + (nPortionStart-pLine->GetStart()) )), 10000, TRUE );
             }
 			ImpBreakLine( pParaPortion, pLine, pPortion, nPortionStart,
 											nRemainingWidth, bCanHyphenate && bHyphenatePara );
diff -ru svx.orig/source/editeng/impedit4.cxx svx/source/editeng/impedit4.cxx
--- svx.orig/source/editeng/impedit4.cxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/source/editeng/impedit4.cxx	2006-03-22 08:54:50.000000000 +0000
@@ -2813,7 +2813,7 @@
 
 			xub_StrLen nLen = nCurrentEnd - nCurrentStart;
 
-			Sequence <long> aOffsets;
+			Sequence <sal_Int32> aOffsets;
 			String aNewText( aTranslitarationWrapper.transliterate( *pNode, nLanguage, nCurrentStart, nLen, &aOffsets ) );
 
 			if( ( nLen != aNewText.Len() ) || !pNode->Equals( aNewText, nCurrentStart, nLen ) )
@@ -2838,7 +2838,7 @@
 
                 // Change text without loosing the attributes
                 USHORT nCharsAfterTransliteration = aOffsets.getLength();
-                const long* pOffsets = aOffsets.getConstArray();
+                const sal_Int32* pOffsets = aOffsets.getConstArray();
                 short nDiffs = 0;
                 for ( USHORT n = 0; n < nCharsAfterTransliteration; n++ )
                 {
diff -ru svx.orig/source/editeng/impedit.hxx svx/source/editeng/impedit.hxx
--- svx.orig/source/editeng/impedit.hxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/source/editeng/impedit.hxx	2006-03-22 09:18:53.000000000 +0000
@@ -273,7 +273,7 @@
 
 
 	long				nInvMore;
-	sal_uInt32			nControl;
+	ULONG				nControl;
 	sal_uInt32			nTravelXPos;
     sal_uInt16          nExtraCursorFlags;
     sal_uInt16          nCursorBidiLevel;
diff -ru svx.orig/source/fmcomp/fmgridcl.cxx svx/source/fmcomp/fmgridcl.cxx
--- svx.orig/source/fmcomp/fmgridcl.cxx	2006-03-21 15:11:00.000000000 +0000
+++ svx/source/fmcomp/fmgridcl.cxx	2006-03-22 08:57:03.000000000 +0000
@@ -2198,7 +2198,7 @@
 	}
 }
 // -----------------------------------------------------------------------------
-long FmGridControl::GetSelectedColumn() const		
+sal_Int32 FmGridControl::GetSelectedColumn() const		
 { 
 	return m_nCurrentSelectedColumn; 
 }
diff -ru svx.orig/source/form/filtnav.cxx svx/source/form/filtnav.cxx
--- svx.orig/source/form/filtnav.cxx	2006-03-21 15:11:00.000000000 +0000
+++ svx/source/form/filtnav.cxx	2006-03-22 09:04:32.000000000 +0000
@@ -1347,7 +1347,7 @@
 	if (aText.Len() == 0)
 	{
 		// deleting the entry asynchron
-		sal_uInt32 nEvent;
+		ULONG nEvent;
 		PostUserEvent(nEvent, LINK(this, FmFilterNavigator, OnRemove), pEntry);
 	}
 	else
diff -ru svx.orig/source/form/fmexpl.cxx svx/source/form/fmexpl.cxx
--- svx.orig/source/form/fmexpl.cxx	2006-03-21 15:11:00.000000000 +0000
+++ svx/source/form/fmexpl.cxx	2006-03-22 09:05:29.000000000 +0000
@@ -385,7 +385,7 @@
 void FmEntryData::Clear()
 {
     FmEntryData* pEntryData;
-    while( pEntryData = GetChildList()->Remove(sal_uInt32(0)) )
+    while( pEntryData = GetChildList()->Remove(ULONG(0)) )
         delete pEntryData;
 }
 
diff -ru svx.orig/source/form/fmvwimp.cxx svx/source/form/fmvwimp.cxx
--- svx.orig/source/form/fmvwimp.cxx	2006-03-21 15:11:00.000000000 +0000
+++ svx/source/form/fmvwimp.cxx	2006-03-22 09:07:16.000000000 +0000
@@ -1726,8 +1726,8 @@
 	aRealSize.Height()= aDefSize.Height();
 
 	// je nach Skalierung des Zieldevices muss die Groesse noch normiert werden (#53523#)
-	aRealSize.Width() = sal_Int32(Fraction(aRealSize.Width(), 1) * eTargetMode.GetScaleX());
-	aRealSize.Height() = sal_Int32(Fraction(aRealSize.Height(), 1) * eTargetMode.GetScaleY());
+	aRealSize.Width() = long(Fraction(aRealSize.Width(), 1) * eTargetMode.GetScaleX());
+	aRealSize.Height() = long(Fraction(aRealSize.Height(), 1) * eTargetMode.GetScaleY());
 	_rpLabel->SetLogicRect(
 		::Rectangle(	_pOutDev->LogicToLogic(Point(0, _nYOffsetMM), eSourceMode, eTargetMode),
 					_pOutDev->LogicToLogic(aRealSize, eSourceMode, eTargetMode)
@@ -1747,8 +1747,8 @@
 		szControlSize = aDefSize;
 
 	// normieren wie oben
-	szControlSize.Width() = sal_Int32(Fraction(szControlSize.Width(), 1) * eTargetMode.GetScaleX());
-	szControlSize.Height() = sal_Int32(Fraction(szControlSize.Height(), 1) * eTargetMode.GetScaleY());
+	szControlSize.Width() = long(Fraction(szControlSize.Width(), 1) * eTargetMode.GetScaleX());
+	szControlSize.Height() = long(Fraction(szControlSize.Height(), 1) * eTargetMode.GetScaleY());
 	_rpControl->SetLogicRect(
 		::Rectangle(	_pOutDev->LogicToLogic(Point(aRealSize.Width(), _nYOffsetMM), eSourceMode, eTargetMode),
 					_pOutDev->LogicToLogic(szControlSize, eSourceMode, eTargetMode)
diff -ru svx.orig/source/inc/GraphCtlAccessibleContext.hxx svx/source/inc/GraphCtlAccessibleContext.hxx
--- svx.orig/source/inc/GraphCtlAccessibleContext.hxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/source/inc/GraphCtlAccessibleContext.hxx	2006-03-21 15:18:40.000000000 +0000
@@ -184,8 +184,8 @@
 
 	//=====  XAccessibleContext  ==============================================
 
-    virtual long SAL_CALL getAccessibleChildCount (void) throw (::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Reference< ::com::sun::star::accessibility::XAccessible> SAL_CALL getAccessibleChild (long nIndex) throw (::com::sun::star::uno::RuntimeException, ::com::sun::star::lang::IndexOutOfBoundsException);
+    virtual sal_Int32 SAL_CALL getAccessibleChildCount (void) throw (::com::sun::star::uno::RuntimeException);
+    virtual ::com::sun::star::uno::Reference< ::com::sun::star::accessibility::XAccessible> SAL_CALL getAccessibleChild (sal_Int32 nIndex) throw (::com::sun::star::uno::RuntimeException, ::com::sun::star::lang::IndexOutOfBoundsException);
 	virtual ::com::sun::star::uno::Reference< ::com::sun::star::accessibility::XAccessible> SAL_CALL getAccessibleParent (void) throw (::com::sun::star::uno::RuntimeException);
 	virtual	sal_Int32 SAL_CALL getAccessibleIndexInParent (void) throw (::com::sun::star::uno::RuntimeException);
 	virtual sal_Int16 SAL_CALL getAccessibleRole (void) throw (::com::sun::star::uno::RuntimeException);
diff -ru svx.orig/source/inc/svxrectctaccessiblecontext.hxx svx/source/inc/svxrectctaccessiblecontext.hxx
--- svx.orig/source/inc/svxrectctaccessiblecontext.hxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/source/inc/svxrectctaccessiblecontext.hxx	2006-03-21 15:19:12.000000000 +0000
@@ -199,11 +199,11 @@
 
 	//=====  XAccessibleContext  ==============================================
 
-	virtual long SAL_CALL
+	virtual sal_Int32 SAL_CALL
 		getAccessibleChildCount( void ) throw( ::com::sun::star::uno::RuntimeException );
 
 	virtual ::com::sun::star::uno::Reference< ::com::sun::star::accessibility::XAccessible> SAL_CALL
-		getAccessibleChild( long nIndex )
+		getAccessibleChild( sal_Int32 nIndex )
 			throw( ::com::sun::star::uno::RuntimeException, ::com::sun::star::lang::IndexOutOfBoundsException );
 
 	virtual ::com::sun::star::uno::Reference< ::com::sun::star::accessibility::XAccessible> SAL_CALL
diff -ru svx.orig/source/items/frmitems.cxx svx/source/items/frmitems.cxx
--- svx.orig/source/items/frmitems.cxx	2006-03-21 15:11:01.000000000 +0000
+++ svx/source/items/frmitems.cxx	2006-03-22 09:09:08.000000000 +0000
@@ -504,8 +504,8 @@
 
 // -----------------------------------------------------------------------
 
-SvxLRSpaceItem::SvxLRSpaceItem( const sal_Int32 nLeft, const sal_Int32 nRight,
-								const sal_Int32 nTLeft, const short nOfset,
+SvxLRSpaceItem::SvxLRSpaceItem( const long nLeft, const long nRight,
+								const long nTLeft, const short nOfset,
 								const sal_uInt16 nId ) :
 
 	SfxPoolItem( nId ),
diff -ru svx.orig/source/msfilter/msdffimp.cxx svx/source/msfilter/msdffimp.cxx
--- svx.orig/source/msfilter/msdffimp.cxx	2006-03-21 15:11:00.000000000 +0000
+++ svx/source/msfilter/msdffimp.cxx	2006-03-22 09:28:23.000000000 +0000
@@ -3454,7 +3454,7 @@
         aUniqueID( rUniqueID ) {}
 };
 
-void SvxMSDffManager::Scale( long& rVal ) const
+void SvxMSDffManager::Scale( sal_Int32& rVal ) const
 {
 	if ( bNeedMap )
 		rVal = BigMulDiv( rVal, nMapMul, nMapDiv );
@@ -3528,7 +3528,7 @@
 		Scale( rPoly[ nPolyNum ] );
 }
 
-void SvxMSDffManager::ScaleEmu( long& rVal ) const
+void SvxMSDffManager::ScaleEmu( sal_Int32& rVal ) const
 {
 	rVal = BigMulDiv( rVal, nEmuMul, nEmuDiv );
 }
@@ -5423,7 +5423,7 @@
 					{
 						sal_Int16 ls, os, rs, us;
 						rSt >> os >> ls >> rs >> us; // etwas seltsame Koordinatenreihenfolge ...
-						long l = ls, o = os, r = rs, u = us;
+						sal_Int32 l = ls, o = os, r = rs, u = us;
 						Scale( l );
 						Scale( o );
 						Scale( r );
@@ -6361,7 +6361,7 @@
 	BYTE   nVer;
 	USHORT nInst;
 	USHORT nFbt;
-	ULONG  nLength;
+	UINT32  nLength;
 	if( !this->ReadCommonRecordHeader( rStCtrl, nVer, nInst, nFbt, nLength ) ) return;
 
 	BOOL bOk;
@@ -6406,7 +6406,7 @@
 	BYTE   nVer;
 	USHORT nInst;
 	USHORT nFbt;
-	ULONG  nLength;
+	UINT32 nLength;
 
 	ULONG nLenBStoreCont = 0, nLenFBSE = 0, nRead = 0;
 
@@ -6491,7 +6491,7 @@
 //
 void SvxMSDffManager::GetDrawingContainerData( SvStream& rSt, ULONG nLenDg )
 {
-	BYTE nVer;USHORT nInst;USHORT nFbt;ULONG nLength;
+	BYTE nVer;USHORT nInst;USHORT nFbt;UINT32 nLength;
 
 	ULONG nReadDg = 0;
 
@@ -6524,7 +6524,7 @@
 												  ULONG nLenShapeGroupCont,
 												  BOOL bPatriarch )
 {
-	BYTE nVer;USHORT nInst;USHORT nFbt;ULONG nLength;
+	BYTE nVer;USHORT nInst;USHORT nFbt;UINT32 nLength;
 	long nStartShapeGroupCont = rSt.Tell();
 	// Wir stehen in einem Shape Group Container (ggfs. mehrere pro Seite)
 	// und muessen nun
@@ -6563,7 +6563,7 @@
 
 BOOL SvxMSDffManager::GetShapeContainerData( SvStream& rSt, ULONG nLenShapeCont, ULONG nPosGroup )
 {
-	BYTE nVer;USHORT nInst;USHORT nFbt;ULONG nLength;
+	BYTE nVer;USHORT nInst;USHORT nFbt;UINT32 nLength;
 	long  nStartShapeCont = rSt.Tell();
 	// Wir stehen in einem Shape Container (ggfs. mehrere pro Sh. Group)
 	// und muessen nun
@@ -6926,7 +6926,7 @@
 	int nRes = GRFILTER_OPENERROR;  // Fehlervariable initialisieren
 
 	// nachschauen, ob es sich auch wirklich um ein BLIP handelt
-	ULONG  nLength;
+	UINT32 nLength;
 	USHORT nInst, nFbt;
 	BYTE   nVer;
 	if( ReadCommonRecordHeader( rBLIPStream, nVer, nInst, nFbt, nLength) && ( 0xF018 <= nFbt ) && ( 0xF117 >= nFbt ) )
@@ -7101,7 +7101,7 @@
 											  BYTE&     rVer,
 											  USHORT&   rInst,
 											  USHORT&   rFbt,
-											  ULONG&    rLength )
+											  UINT32&    rLength )
 {
 	sal_uInt16 nTmp;
 	rSt >> nTmp >> rFbt >> rLength;
diff -ru svx.orig/source/outliner/outliner.cxx svx/source/outliner/outliner.cxx
--- svx.orig/source/outliner/outliner.cxx	2006-03-21 15:11:00.000000000 +0000
+++ svx/source/outliner/outliner.cxx	2006-03-22 09:30:55.000000000 +0000
@@ -1173,7 +1173,7 @@
 				else
 				{
 					Font aSvxFont( aBulletFont );
-					long* pBuf = new long[ pPara->GetText().Len() ];
+					sal_Int32* pBuf = new sal_Int32[ pPara->GetText().Len() ];
 					pOutDev->GetTextArray( pPara->GetText(), pBuf );
 					// aTextPos ist Bottom, jetzt die Baseline liefern:
 					FontMetric aMetric( pOutDev->GetFontMetric() );
diff -ru svx.orig/source/svdraw/svdedtv2.cxx svx/source/svdraw/svdedtv2.cxx
--- svx.orig/source/svdraw/svdedtv2.cxx	2006-03-21 15:11:00.000000000 +0000
+++ svx/source/svdraw/svdedtv2.cxx	2006-03-22 09:35:34.000000000 +0000
@@ -875,7 +875,7 @@
 
 					// clear list
 					while(aEntryList.Count())
-						delete aEntryList.Remove((UINT32)0L);
+						delete aEntryList.Remove((ULONG)0L);
 				}
 
 				if(eVer != SvxDistributeVerticalNone)
@@ -963,7 +963,7 @@
 
 					// clear list
 					while(aEntryList.Count())
-						delete aEntryList.Remove((UINT32)0L);
+						delete aEntryList.Remove((ULONG)0L);
 				}
 
 				// UNDO-Comment and end of UNDO
diff -ru svx.orig/source/svdraw/svdfppt.cxx svx/source/svdraw/svdfppt.cxx
--- svx.orig/source/svdraw/svdfppt.cxx	2006-03-21 15:11:00.000000000 +0000
+++ svx/source/svdraw/svdfppt.cxx	2006-03-22 09:34:01.000000000 +0000
@@ -804,7 +804,7 @@
 {
 	INT16 ls, os, rs, us;
 	rSt >> os >> ls >> rs >> us; // etwas seltsame Koordinatenreihenfolge ...
-	long l = ls, o = os, r = rs, u = us;
+	sal_Int32 l = ls, o = os, r = rs, u = us;
 	Scale( l );
 	Scale( o );
 	Scale( r );
diff -ru svx.orig/source/svdraw/svdmodel.cxx svx/source/svdraw/svdmodel.cxx
--- svx.orig/source/svdraw/svdmodel.cxx	2006-03-21 15:11:00.000000000 +0000
+++ svx/source/svdraw/svdmodel.cxx	2006-03-22 09:37:49.000000000 +0000
@@ -303,7 +303,7 @@
 	ImpCreateTables();
 }
 
-SdrModel::SdrModel(SfxItemPool* pPool, SfxObjectShell* pPers, INT32 bLoadRefCounts):
+SdrModel::SdrModel(SfxItemPool* pPool, SfxObjectShell* pPers, sal_Bool bLoadRefCounts):
 	maPages(1024,32,32),
 	maMaPag(1024,32,32)
 {
@@ -315,7 +315,7 @@
 	ImpCtor(pPool,pPers,FALSE, (FASTBOOL)bLoadRefCounts);
 }
 
-SdrModel::SdrModel(const String& rPath, SfxItemPool* pPool, SfxObjectShell* pPers, INT32 bLoadRefCounts):
+SdrModel::SdrModel(const String& rPath, SfxItemPool* pPool, SfxObjectShell* pPers, sal_Bool bLoadRefCounts):
 	maPages(1024,32,32),
 	maMaPag(1024,32,32),
 	aTablePath(rPath)
@@ -328,7 +328,7 @@
 	ImpCtor(pPool,pPers,FALSE, (FASTBOOL)bLoadRefCounts);
 }
 
-SdrModel::SdrModel(SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, INT32 bLoadRefCounts):
+SdrModel::SdrModel(SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, sal_Bool bLoadRefCounts):
 	maPages(1024,32,32),
 	maMaPag(1024,32,32)
 {
@@ -340,7 +340,7 @@
 	ImpCtor(pPool,pPers,bUseExtColorTable, (FASTBOOL)bLoadRefCounts);
 }
 
-SdrModel::SdrModel(const String& rPath, SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, INT32 bLoadRefCounts):
+SdrModel::SdrModel(const String& rPath, SfxItemPool* pPool, SfxObjectShell* pPers, FASTBOOL bUseExtColorTable, sal_Bool bLoadRefCounts):
 	maPages(1024,32,32),
 	maMaPag(1024,32,32),
 	aTablePath(rPath)
diff -ru svx.orig/source/svdraw/svdoattr.cxx svx/source/svdraw/svdoattr.cxx
--- svx.orig/source/svdraw/svdoattr.cxx	2006-03-21 15:11:00.000000000 +0000
+++ svx/source/svdraw/svdoattr.cxx	2006-03-22 09:38:49.000000000 +0000
@@ -544,11 +544,11 @@
 	nSttWdt /= 2;
 
 	// Lieber etwas mehr, dafuer keine Wurzel ziehen
-	long nSttAdd = Max(nSttWdt, nSttHgt);
+	sal_Int32 nSttAdd = Max(nSttWdt, nSttHgt);
 	nSttAdd *= 3;
 	nSttAdd /= 2;
 
-	long nEndWdt = ((const XLineEndWidthItem&)(rSet.Get(XATTR_LINEENDWIDTH))).GetValue();
+	sal_Int32 nEndWdt = ((const XLineEndWidthItem&)(rSet.Get(XATTR_LINEENDWIDTH))).GetValue();
 
 	if(nEndWdt < 0)
 		nEndWdt = -nLineWdt * nEndWdt / 100; // <0 = relativ
diff -ru svx.orig/source/svdraw/svdopath.cxx svx/source/svdraw/svdopath.cxx
--- svx.orig/source/svdraw/svdopath.cxx	2006-03-21 15:11:00.000000000 +0000
+++ svx/source/svdraw/svdopath.cxx	2006-03-22 09:40:10.000000000 +0000
@@ -78,6 +78,8 @@
 // #104018# replace macros above with type-safe methods
 inline sal_Int32 ImplTwipsToMM(sal_Int32 nVal) { return ((nVal * 127 + 36) / 72); }
 inline sal_Int32 ImplMMToTwips(sal_Int32 nVal) { return ((nVal * 72 + 63) / 127); }
+inline sal_Int64 ImplTwipsToMM(sal_Int64 nVal) { return ((nVal * 127 + 36) / 72); }
+inline sal_Int64 ImplMMToTwips(sal_Int64 nVal) { return ((nVal * 72 + 63) / 127); }
 inline double ImplTwipsToMM(double fVal) { return (fVal * (127.0 / 72.0)); }
 inline double ImplMMToTwips(double fVal) { return (fVal * (72.0 / 127.0)); }
 
