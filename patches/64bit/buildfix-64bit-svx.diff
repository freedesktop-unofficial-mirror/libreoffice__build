--- svx/inc/editeng.hxx	2004-12-29 12:18:00.434818895 +0100
+++ svx/inc/editeng.hxx	2004-12-29 16:11:45.541520357 +0100
@@ -231,19 +231,19 @@ public:
 
 	String			GetText( LineEnd eEnd = LINEEND_LF ) const;
 	String			GetText( const ESelection& rSelection, const LineEnd eEnd = LINEEND_LF ) const;
-	ULONG			GetTextLen() const;
-	ULONG			GetTextHeight() const;
-	ULONG			CalcTextWidth();
+	sal_uInt32		GetTextLen() const;
+	sal_uInt32		GetTextHeight() const;
+	sal_uInt32		CalcTextWidth();
 
 	String 			GetText( USHORT nParagraph ) const;
 	xub_StrLen			GetTextLen( USHORT nParagraph ) const;
-	ULONG			GetTextHeight( USHORT nParagraph ) const;
+	sal_uInt32		GetTextHeight( USHORT nParagraph ) const;
 
 	USHORT 			GetParagraphCount() const;
 
 	USHORT			GetLineCount( USHORT nParagraph ) const;
 	xub_StrLen		GetLineLen( USHORT nParagraph, USHORT nLine ) const;
-	ULONG			GetLineHeight( USHORT nParagraph, USHORT nLine = 0 );
+	sal_uInt32		GetLineHeight( USHORT nParagraph, USHORT nLine = 0 );
 	USHORT			GetFirstLineOffset( USHORT nParagraph );
 	ParagraphInfos 	GetParagraphInfos( USHORT nPara );
 	USHORT			FindParagraph( long nDocPosY );
@@ -326,8 +326,8 @@ public:
 	void			Draw( OutputDevice* pOutDev, const Point& rStartPos, short nOrientation = 0 );
 
 //  ULONG: Fehlercode des Streams.
-	ULONG			Read( SvStream& rInput, EETextFormat, SvKeyValueIterator* pHTTPHeaderAttrs = NULL );
-	ULONG			Write( SvStream& rOutput, EETextFormat );
+	sal_uInt32		Read( SvStream& rInput, EETextFormat, SvKeyValueIterator* pHTTPHeaderAttrs = NULL );
+	sal_uInt32		Write( SvStream& rOutput, EETextFormat );
 
 	void			SetStatusEventHdl( const Link& rLink );
 	Link			GetStatusEventHdl() const;
@@ -342,8 +342,8 @@ public:
 	BOOL			IsFlatMode() const;
 	void			SetFlatMode( BOOL bFlat );
 
-	void			SetControlWord( ULONG nWord );
-	ULONG			GetControlWord() const;
+	void			SetControlWord( sal_uInt32 nWord );
+	sal_uInt32		GetControlWord() const;
 
 	void			QuickSetAttribs( const SfxItemSet& rSet, const ESelection& rSel );
 	void 			QuickRemoveCharAttribs( USHORT nPara, USHORT nWhich = 0 );
@@ -471,7 +471,7 @@ public:
 	virtual Rectangle GetBulletArea( USHORT nPara );
 
 	static SfxItemPool*	CreatePool( BOOL bLoadRefCounts = TRUE );
-	static ULONG	RegisterClipboardFormatName();
+	static sal_uInt32	RegisterClipboardFormatName();
 	static BOOL		DoesKeyChangeText( const KeyEvent& rKeyEvent );
 	static BOOL		DoesKeyMoveCursor( const KeyEvent& rKeyEvent );
 	static BOOL		IsSimpleCharInput( const KeyEvent& rKeyEvent );
--- svx/inc/editstat.hxx	2002-08-27 16:28:31.000000000 +0200
+++ svx/inc/editstat.hxx	2004-12-29 16:02:02.574243536 +0100
@@ -127,7 +127,7 @@
 	EE_STAT_CRSRLEFTPARA zur Zeit bei Cursorbewegungen und Return.
 */
 
-inline void SetFlags( ULONG& rBits, const ULONG nMask, FASTBOOL bOn )
+inline void SetFlags( sal_uInt32& rBits, const sal_uInt32 nMask, FASTBOOL bOn )
 {
 	if ( bOn )
 		rBits |= nMask;
@@ -138,22 +138,22 @@ inline void SetFlags( ULONG& rBits, cons
 class EditStatus
 {
 protected:
-	ULONG	nStatusBits;
-	ULONG	nControlBits;
+	sal_uInt32	nStatusBits;
+	sal_uInt32	nControlBits;
 	USHORT	nPrevPara;					// fuer EE_STAT_CRSRLEFTPARA
 
 public:
 			EditStatus()				{ nStatusBits = 0; nControlBits = 0; nPrevPara = 0xFFFF; }
 
 	void	Clear() 					{ nStatusBits = 0; }
-	void	SetControlBits( ULONG nMask, FASTBOOL bOn )
+	void	SetControlBits( sal_uInt32 nMask, FASTBOOL bOn )
 				{ SetFlags( nControlBits, nMask, bOn ); }
 
-	ULONG	GetStatusWord() const		{ return nStatusBits; }
-	ULONG&	GetStatusWord() 			{ return nStatusBits; }
+	sal_uInt32	GetStatusWord() const		{ return nStatusBits; }
+	sal_uInt32&	GetStatusWord() 			{ return nStatusBits; }
 
-	ULONG	GetControlWord() const		{ return nControlBits; }
-	ULONG&	GetControlWord() 			{ return nControlBits; }
+	sal_uInt32	GetControlWord() const		{ return nControlBits; }
+	sal_uInt32&	GetControlWord() 			{ return nControlBits; }
 
 	USHORT	GetPrevParagraph() const	{ return nPrevPara; }
 	USHORT&	GetPrevParagraph() 			{ return nPrevPara; }
--- svx/inc/editview.hxx	2004-09-17 15:57:11.000000000 +0200
+++ svx/inc/editview.hxx	2004-12-29 16:14:31.724807363 +0100
@@ -221,14 +221,14 @@ public:
 	void				RemoveAttribs( BOOL bRemoveParaAttribs = FALSE, USHORT nWhich = 0 );
 	void 				RemoveCharAttribs( USHORT nPara, USHORT nWhich = 0 );
 
-	ULONG			Read( SvStream& rInput, EETextFormat eFormat, BOOL bSelect = FALSE, SvKeyValueIterator* pHTTPHeaderAttrs = NULL );
-	ULONG			Write( SvStream& rOutput, EETextFormat eFormat );
+	sal_uInt32		Read( SvStream& rInput, EETextFormat eFormat, BOOL bSelect = FALSE, SvKeyValueIterator* pHTTPHeaderAttrs = NULL );
+	sal_uInt32		Write( SvStream& rOutput, EETextFormat eFormat );
 
 	void 			SetBackgroundColor( const Color& rColor );
 	Color			GetBackgroundColor() const;
 
-	void			SetControlWord( ULONG nWord );
-	ULONG			GetControlWord() const;
+	void			SetControlWord( sal_uInt32 nWord );
+	sal_uInt32			GetControlWord() const;
 
 	EditTextObject*	CreateTextObject();
 	void			InsertText( const EditTextObject& rTextObject );
--- svx/inc/msdffimp.hxx	2004-12-29 12:18:00.436818549 +0100
+++ svx/inc/msdffimp.hxx	2004-12-29 13:53:31.365423839 +0100
@@ -527,9 +527,9 @@ public:
 	static BOOL ReadCommonRecordHeader( DffRecordHeader& rRec, SvStream& rIn );
 	static BOOL ReadCommonRecordHeader( SvStream& rSt,
 										BYTE&     rVer,
-										USHORT&   rInst,
-										USHORT&   rFbt,
-										ULONG&    rLength );
+										sal_uInt16& rInst,
+										sal_uInt16& rFbt,
+										sal_uInt32& rLength );
 /*
 	Konstruktor
 	===========
--- svx/inc/numfmtsh.hxx	2002-07-23 12:47:36.000000000 +0200
+++ svx/inc/numfmtsh.hxx	2004-12-29 18:05:55.054901616 +0100
@@ -135,12 +135,12 @@ class SvxNumberFormatShell
 {
 public:
 						SvxNumberFormatShell( SvNumberFormatter* pNumFormatter,
-											  ULONG              nFormatKey,
+											  sal_uInt32		 nFormatKey,
 											  SvxNumberValueType eNumValType,
 											  const String&		 rNumStr );
 
 						SvxNumberFormatShell( SvNumberFormatter* pNumFormatter,
-											  ULONG				 nFormatKey,
+											  sal_uInt32		 nFormatKey,
 											  SvxNumberValueType eNumValType,
 											  double			 nNumVal,
 											  const String*		 pNumStr = NULL );
@@ -149,12 +149,12 @@ public:
 
 
 	static SvxNumberFormatShell*	Create( SvNumberFormatter* pNumFormatter,
-											  ULONG              nFormatKey,
+											  sal_uInt32		 nFormatKey,
 											  SvxNumberValueType eNumValType,
 											  const String&		 rNumStr );
 
 	static SvxNumberFormatShell*	Create( SvNumberFormatter* pNumFormatter,
-											  ULONG				 nFormatKey,
+											  sal_uInt32		 nFormatKey,
 											  SvxNumberValueType eNumValType,
 											  double			 nNumVal,
 											  const String*		 pNumStr = NULL );
@@ -180,7 +180,7 @@ public:
                                        Color*& rpFontColor );
 
 	BOOL				AddFormat( String&    rFormat,
-								   ULONG&     rErrPos,
+								   sal_uInt32& rErrPos,
 								   USHORT&    rCatLbSelPos,
 								   short&     rFmtSelPos,
 								   SvStrings& rFmtEntries );
@@ -215,15 +215,15 @@ public:
 
 	BOOL				IsUserDefined( const String& rFmtString );
 	BOOL				IsTmpCurrencyFormat( const String& rFmtString );
-	BOOL				FindEntry( const String& rFmtString, ULONG* pAt = NULL );
+	BOOL				FindEntry( const String& rFmtString, sal_uInt32* pAt = NULL );
 
 	void				ValidateNewEntries( BOOL bValidate = TRUE ) { bUndoAddList = !bValidate; }
-	ULONG				GetUpdateDataCount() const;
-	void				GetUpdateData( ULONG* pDelArray, const ULONG nSize );
+	sal_uInt32			GetUpdateDataCount() const;
+	void				GetUpdateData( sal_uInt32* pDelArray, const sal_uInt32 nSize );
 
-	void				SetCurNumFmtKey( ULONG nNew )		{ nCurFormatKey = nNew; }
+	void				SetCurNumFmtKey( sal_uInt32 nNew )	{ nCurFormatKey = nNew; }
 	void				SetCurLanguage( LanguageType eNew ) { eCurLanguage = eNew; }
-	ULONG				GetCurNumFmtKey() const				{ return nCurFormatKey; }
+	sal_uInt32			GetCurNumFmtKey() const				{ return nCurFormatKey; }
 	LanguageType		GetCurLanguage() const				{ return eCurLanguage; }
 
 	String				GetComment4Entry(short nEntry);
@@ -234,12 +234,12 @@ public:
 
 	BOOL				IsBankingSymbol(USHORT nPos);
 	void				SetCurrencySymbol(USHORT nPos);
-	ULONG				GetCurrencySymbol();
+	sal_uInt32			GetCurrencySymbol();
 	USHORT				FindCurrencyFormat( const String& rFmtString );
 	USHORT				FindCurrencyFormat(const NfCurrencyEntry* pTmpCurrencyEntry,BOOL bTmpBanking);
 	NfCurrencyEntry*	GetCurCurrencyEntry();
 	void				SetCurCurrencyEntry(NfCurrencyEntry*);
-	short				GetListPos4Entry(ULONG nIdx);
+	short				GetListPos4Entry(sal_uInt32 nIdx);
 	short				GetListPos4Entry( const String& rFmtString );
 
 	void				GetCurrencySymbols(SvStringsDtor& rList,const XubString& rStrEurope,USHORT* pPos);
@@ -262,8 +262,8 @@ private:
 	SvULongs				aAddList;
 	SvULongs				aDelList;
 	SvULongs				aCurEntryList;
-	ULONG					nInitFormatKey;
-	ULONG					nCurFormatKey;
+	sal_uInt32				nInitFormatKey;
+	sal_uInt32				nCurFormatKey;
 	short					nCurCategory;
 	LanguageType			eCurLanguage;
 	SvUShorts				aCurCurrencyList;
@@ -286,8 +286,8 @@ private:
 	short					FillEListWithUserCurrencys( SvStrings& rList,short nSelPos);
 
 	short					FillEListWithUsD_Impl( SvStrings& rList, sal_uInt16 nPrivCat, short Pos );
-	BOOL					IsRemoved_Impl( ULONG nKey );
-	BOOL					IsAdded_Impl( ULONG nKey );
+	BOOL					IsRemoved_Impl( sal_uInt32 nKey );
+	BOOL					IsAdded_Impl( sal_uInt32 nKey );
 	void					GetPreviewString_Impl( String& rString,
                                                    Color*& rpColor );
 	void					PosToCategory_Impl( USHORT nPos, short& rCategory );
--- svx/inc/numinf.hxx	2001-05-13 05:27:40.000000000 +0200
+++ svx/inc/numinf.hxx	2004-12-29 18:10:59.757206043 +0100
@@ -114,12 +114,12 @@ public:
 	double					GetValueDouble() const 	{ return nDoubleVal; }
 	void					SetDoubleValue( const double& rNewVal );
 
-	const ULONG*			GetDelArray() const { return pDelFormatArr; }
-	void					SetDelFormatArray( const ULONG* pData,
-											   const ULONG  nCount );
+	const sal_uInt32*		GetDelArray() const { return pDelFormatArr; }
+	void					SetDelFormatArray( const sal_uInt32* pData,
+											   const sal_uInt32  nCount );
 
 	SvxNumberValueType		GetValueType() const { return eValueType; }
-	ULONG					GetDelCount() const  { return nDelCount; }
+	sal_uInt32				GetDelCount() const  { return nDelCount; }
 
 private:
 	SvNumberFormatter*	pFormatter;
@@ -127,8 +127,8 @@ private:
 	String				aStringVal;
 	double				nDoubleVal;
 
-	ULONG*				pDelFormatArr;
-	ULONG				nDelCount;
+	sal_uInt32*			pDelFormatArr;
+	sal_uInt32			nDelCount;
 };
 
 #endif
--- svx/source/customshapes/EnhancedCustomShapeFontWork.cxx	2004-11-29 09:57:49.000000000 +0100
+++ svx/source/customshapes/EnhancedCustomShapeFontWork.cxx	2004-12-29 15:53:45.614107229 +0100
@@ -319,7 +319,7 @@ void GetTextAreaOutline( const FWData& r
 
 			SvxCharScaleWidthItem& rCharScaleWidthItem = (SvxCharScaleWidthItem&)pCustomShape->GetMergedItem( EE_CHAR_FONTWIDTH );
 			sal_uInt16 nCharScaleWidth = rCharScaleWidthItem.GetValue();
-			long* pDXArry = NULL;
+			sal_Int32* pDXArry = NULL;
 			sal_Int32 nWidth = 0;
 
 			if ( bIsVertical )
@@ -383,7 +383,7 @@ void GetTextAreaOutline( const FWData& r
 			{
 				if ( ( nCharScaleWidth != 100 ) && nCharScaleWidth )
 				{	// applying character spacing
-					pDXArry = new long[ rText.getLength() ];
+					pDXArry = new sal_Int32[ rText.getLength() ];
 					aVirDev.GetTextArray( rText, pDXArry, 0, STRING_LEN );
 					FontMetric aFontMetric( aVirDev.GetFontMetric() );
 					aFont.SetWidth( (sal_Int32)( (double)aFontMetric.GetWidth() * ( (double)100 / (double)nCharScaleWidth ) ) );
--- svx/source/dialog/connpooloptions.cxx	2004-09-08 16:39:37.000000000 +0200
+++ svx/source/dialog/connpooloptions.cxx	2004-12-29 13:53:31.366423666 +0100
@@ -138,7 +138,7 @@ namespace offapp
 		virtual void CursorMoved();
 
 	protected:
-		virtual ULONG GetTotalCellWidth(long nRow, USHORT nColId);
+		virtual sal_uInt32 GetTotalCellWidth(long nRow, USHORT nColId);
 
 
 	private:
@@ -257,7 +257,7 @@ namespace offapp
 	}
 
 	//--------------------------------------------------------------------
-	ULONG DriverListControl::GetTotalCellWidth(long nRow, USHORT nColId)
+	sal_uInt32 DriverListControl::GetTotalCellWidth(long nRow, USHORT nColId)
 	{
 		return GetDataWindow().GetTextWidth(GetCellText(nRow, nColId));
 	}
--- svx/source/dialog/frmdirlbox.cxx	2004-08-02 19:44:27.000000000 +0200
+++ svx/source/dialog/frmdirlbox.cxx	2004-12-29 13:53:31.366423666 +0100
@@ -78,7 +78,7 @@ inline void* lclEnumToVoid( SvxFrameDire
 
 inline SvxFrameDirection lclVoidToEnum( void* pDirection )
 {
-    return static_cast< SvxFrameDirection >( reinterpret_cast< sal_uInt32 >( pDirection ) );
+    return static_cast< SvxFrameDirection >( reinterpret_cast< sal_IntPtr >( pDirection ) );
 }
 
 } // namespace
--- svx/source/dialog/numfmt.cxx	2004-07-05 17:48:46.000000000 +0200
+++ svx/source/dialog/numfmt.cxx	2004-12-29 18:12:16.979851412 +0100
@@ -853,7 +853,7 @@ BOOL SvxNumberFormatTabPage::FillItemSet
         // OK chosen - Is format code input entered already taken over?
         // If not, simulate Add. Upon syntax error ignore input and prevent Put.
 		String		aFormat	= aEdFormat.GetText();
-		ULONG nCurKey = pNumFmtShell->GetCurNumFmtKey();
+		sal_uInt32 nCurKey = pNumFmtShell->GetCurNumFmtKey();
 
         if ( aIbAdd.IsEnabled() || pNumFmtShell->IsTmpCurrencyFormat(aFormat) )
         {   // #79599# It is not sufficient to just add the format code (or
@@ -888,11 +888,11 @@ BOOL SvxNumberFormatTabPage::FillItemSet
 		// --------------------------------------------------------------
         // List of changed user defined formats:
         // -------------------------------------
-		const ULONG nDelCount = pNumFmtShell->GetUpdateDataCount();
+		const sal_uInt32 nDelCount = pNumFmtShell->GetUpdateDataCount();
 
 		if ( nDelCount > 0 )
 		{
-			ULONG*			pDelArr = new ULONG[nDelCount];
+			sal_uInt32*			pDelArr = new sal_uInt32[nDelCount];
 
 			pNumFmtShell->GetUpdateData( pDelArr, nDelCount );
 			pNumItem->SetDelFormatArray( pDelArr, nDelCount );
@@ -1133,7 +1133,7 @@ void SvxNumberFormatTabPage::UpdateOptio
 	}
 	else if ( aLbFormat.GetEntryCount() > 0 )
 	{
-		ULONG nCurEntryKey=NUMKEY_UNDEFINED;
+		sal_uInt32 nCurEntryKey=NUMKEY_UNDEFINED;
 		if(!pNumFmtShell->FindEntry( aEdFormat.GetText(),&nCurEntryKey))
 		{
 			aLbFormat.SetNoSelection();
@@ -1510,7 +1510,7 @@ IMPL_LINK( SvxNumberFormatTabPage, Click
 		SvxDelStrgs	a2EntryList;
 		USHORT		nCatLbSelPos = 0;
 		short		nFmtLbSelPos = SELPOS_NONE;
-		ULONG		nErrPos=0;
+		sal_uInt32	nErrPos=0;
 
 		pNumFmtShell->SetCurCurrencyEntry(NULL);
 		bAdded = pNumFmtShell->AddFormat( aFormat, nErrPos,
@@ -1665,7 +1665,7 @@ IMPL_LINK( SvxNumberFormatTabPage, Click
 
 IMPL_LINK( SvxNumberFormatTabPage, EditHdl_Impl, Edit*, pEdFormat )
 {
-	ULONG nCurKey = NUMKEY_UNDEFINED;
+	sal_uInt32 nCurKey = NUMKEY_UNDEFINED;
 
 	if ( aEdFormat.GetText().Len() == 0 )
 	{
--- svx/source/dialog/optdict.cxx	2004-12-29 12:18:00.447816649 +0100
+++ svx/source/dialog/optdict.cxx	2004-12-29 13:53:31.367423493 +0100
@@ -610,8 +610,8 @@ void SvxEditDictionaryDialog::ShowWords_
 
 	if (aWordsLB.GetEntryCount())
 	{
-		aWordED	  .SetText( aWordsLB.GetEntryText(0U, 0) );
-		aReplaceED.SetText( aWordsLB.GetEntryText(0U, 1) );
+		aWordED	  .SetText( aWordsLB.GetEntryText(0UL, 0) );
+		aReplaceED.SetText( aWordsLB.GetEntryText(0UL, 1) );
 	}
 
 	LeaveWait();
--- svx/source/dialog/swpossizetabpage.cxx	2004-11-29 09:57:59.000000000 +0100
+++ svx/source/dialog/swpossizetabpage.cxx	2004-12-29 13:53:31.369423147 +0100
@@ -1001,12 +1001,12 @@ void SvxSwPosSizeTabPage::Reset( const S
     }
 
     pItem = GetItem( rSet, SID_ATTR_TRANSFORM_WIDTH );
-    sal_Int32 nWidth = Max( pItem ? ( static_cast<const SfxUInt32Item*>(pItem)->GetValue()) : 0, (UINT32)1 );
+    sal_Int32 nWidth = Max( pItem ? ( static_cast<const SfxUInt32Item*>(pItem)->GetValue()) : 0, 1 );
 
     m_aWidthMF.SetValue(m_aWidthMF.Normalize(nWidth), FUNIT_TWIP);
 
     pItem = GetItem( rSet, SID_ATTR_TRANSFORM_HEIGHT );
-    sal_Int32 nHeight = Max( pItem ? ( static_cast<const SfxUInt32Item*>(pItem)->GetValue()) : 0, (UINT32)1 );
+    sal_Int32 nHeight = Max( pItem ? ( static_cast<const SfxUInt32Item*>(pItem)->GetValue()) : 0, 1 );
     m_aHeightMF.SetValue(m_aHeightMF.Normalize(nHeight), FUNIT_TWIP);
     m_fWidthHeightRatio = nHeight ? double(nWidth) / double(nHeight) : 1.0;
 
--- svx/source/dialog/transfrm.cxx	2004-12-29 12:18:00.451815958 +0100
+++ svx/source/dialog/transfrm.cxx	2004-12-29 13:53:31.370422974 +0100
@@ -1195,10 +1195,10 @@ void SvxPositionSizeTabPage::Reset( cons
 */  }
 
 	pItem = GetItem( mrOutAttrs, SID_ATTR_TRANSFORM_WIDTH );
-	mlOldWidth = Max( pItem ? ( (const SfxUInt32Item*)pItem )->GetValue() : 0, (UINT32)1 );
+	mlOldWidth = Max( pItem ? ( (const SfxUInt32Item*)pItem )->GetValue() : 0, 1 );
 
 	pItem = GetItem( mrOutAttrs, SID_ATTR_TRANSFORM_HEIGHT );
-	mlOldHeight = Max( pItem ? ( (const SfxUInt32Item*)pItem )->GetValue() : 0, (UINT32)1 );
+	mlOldHeight = Max( pItem ? ( (const SfxUInt32Item*)pItem )->GetValue() : 0, 1 );
 
 	Fraction aUIScale = mpView->GetModel()->GetUIScale();
 
--- svx/source/editeng/editdoc.hxx	2004-12-29 12:18:00.452815786 +0100
+++ svx/source/editeng/editdoc.hxx	2004-12-29 17:40:17.843666408 +0100
@@ -403,13 +403,13 @@ struct ExtraPortionInfo
     BOOL    bFirstCharIsRightPunktuation;
     BOOL    bCompressed;
 
-    long*    pOrgDXArray;
+    sal_Int32*    pOrgDXArray;
 
 
             ExtraPortionInfo();
             ~ExtraPortionInfo();
 
-    void    SaveOrgDXArray( const long* pDXArray, USHORT nLen );
+    void    SaveOrgDXArray( const sal_Int32* pDXArray, USHORT nLen );
     void    DestroyOrgDXArray();
 };
 
--- svx/source/editeng/editdoc2.cxx	2004-12-29 12:18:00.453815613 +0100
+++ svx/source/editeng/editdoc2.cxx	2004-12-29 17:39:14.319646236 +0100
@@ -200,11 +200,11 @@ ExtraPortionInfo::~ExtraPortionInfo()
     delete[] pOrgDXArray;
 }
 
-void ExtraPortionInfo::SaveOrgDXArray( const long* pDXArray, USHORT nLen ) 
+void ExtraPortionInfo::SaveOrgDXArray( const sal_Int32* pDXArray, USHORT nLen ) 
 {
     delete[] pOrgDXArray;
-    pOrgDXArray = new long[nLen];
-    memcpy( pOrgDXArray, pDXArray, nLen*sizeof(long) );
+    pOrgDXArray = new sal_Int32[nLen];
+    memcpy( pOrgDXArray, pDXArray, nLen*sizeof(sal_Int32) );
 }
 
 void ExtraPortionInfo::DestroyOrgDXArray()
--- svx/source/editeng/impedit.hxx	2004-12-07 14:26:14.000000000 +0100
+++ svx/source/editeng/impedit.hxx	2004-12-29 17:04:56.060253037 +0100
@@ -680,7 +680,7 @@ private:
 	BOOL				IsScriptChange( const EditPaM& rPaM ) const;
     BOOL                HasScriptType( USHORT nPara, USHORT nType ) const;
 
-    BOOL                ImplCalcAsianCompression( ContentNode* pNode, TextPortion* pTextPortion, USHORT nStartPos, long* pDXArray, USHORT n100thPercentFromMax, BOOL bManipulateDXArray );
+    BOOL                ImplCalcAsianCompression( ContentNode* pNode, TextPortion* pTextPortion, USHORT nStartPos, sal_Int32* pDXArray, USHORT n100thPercentFromMax, BOOL bManipulateDXArray );
     void                ImplExpandCompressedPortions( EditLine* pLine, ParaPortion* pParaPortion, long nRemainingWidth );
 
     void                ImplInitLayoutMode( OutputDevice* pOutDev, USHORT nPara, USHORT nIndex );
@@ -757,7 +757,7 @@ private:
                                               const String&							rTxt,
                                               const USHORT 							nIdx, 
                                               const USHORT 							nLen, 
-                                              const long* 							pDXArray ) const;
+                                              const sal_Int32* 						pDXArray ) const;
 
 protected:
 	virtual void			Notify( SfxBroadcaster& rBC, const SfxHint& rHint );
--- svx/source/editeng/impedit2.cxx	2004-12-29 12:18:00.457814922 +0100
+++ svx/source/editeng/impedit2.cxx	2004-12-29 16:20:37.064684214 +0100
@@ -2835,14 +2835,14 @@ EditPaM ImpEditEngine::GetPaM( Point aDo
 	return aPaM;
 }
 
-ULONG ImpEditEngine::GetTextHeight() const
+sal_uInt32 ImpEditEngine::GetTextHeight() const
 {
 	DBG_ASSERT( GetUpdateMode(), "Sollte bei Update=FALSE nicht verwendet werden: GetTextHeight" );
 	DBG_ASSERT( IsFormatted() || IsFormatting(), "GetTextHeight: Nicht formatiert" );
 	return nCurTextHeight;
 }
 
-ULONG ImpEditEngine::CalcTextWidth( BOOL bIgnoreExtraSpace )
+sal_uInt32 ImpEditEngine::CalcTextWidth( BOOL bIgnoreExtraSpace )
 {
 	// Wenn noch nicht formatiert und nicht gerade dabei.
 	// Wird in der Formatierung bei AutoPageSize gerufen.
@@ -2905,20 +2905,20 @@ ULONG ImpEditEngine::CalcTextWidth( BOOL
 		nMaxWidth = 0;
 
 	nMaxWidth++; // Ein breiter, da in CreateLines bei >= umgebrochen wird.
-	return (ULONG)nMaxWidth;
+	return (sal_uInt32)nMaxWidth;
 }
 
-ULONG ImpEditEngine::CalcLineWidth( ParaPortion* pPortion, EditLine* pLine, BOOL bIgnoreExtraSpace )
+sal_uInt32 ImpEditEngine::CalcLineWidth( ParaPortion* pPortion, EditLine* pLine, BOOL bIgnoreExtraSpace )
 {
 	USHORT nPara = GetEditDoc().GetPos( pPortion->GetNode() );
-    ULONG nOldLayoutMode = GetRefDevice()->GetLayoutMode();
+    sal_uInt32 nOldLayoutMode = GetRefDevice()->GetLayoutMode();
 
     ImplInitLayoutMode( GetRefDevice(), nPara, 0xFFFF );
 
     SvxAdjust eJustification = GetJustification( nPara );
 
     // Berechnung der Breite ohne die Indents...
-	ULONG nWidth = 0;
+	sal_uInt32 nWidth = 0;
     USHORT nPos = pLine->GetStart();
 	for ( USHORT nTP = pLine->GetStartPortion(); nTP <= pLine->GetEndPortion(); nTP++ )
 	{
@@ -2956,10 +2956,10 @@ ULONG ImpEditEngine::CalcLineWidth( Para
     return nWidth;
 }
 
-ULONG ImpEditEngine::CalcTextHeight()
+sal_uInt32 ImpEditEngine::CalcTextHeight()
 {
 	DBG_ASSERT( GetUpdateMode(), "Sollte bei Update=FALSE nicht verwendet werden: CalcTextHeight" );
-	ULONG nY = 0;
+	sal_uInt32 nY = 0;
 	for ( USHORT nPortion = 0; nPortion < GetParaPortions().Count(); nPortion++ )
 		nY += GetParaPortions()[nPortion]->GetHeight();
 	return nY;
@@ -3006,9 +3006,9 @@ USHORT ImpEditEngine::GetLineHeight( USH
 	return 0xFFFF;
 }
 
-ULONG ImpEditEngine::GetParaHeight( USHORT nParagraph )
+sal_uInt32 ImpEditEngine::GetParaHeight( USHORT nParagraph )
 {
-	ULONG nHeight = 0;
+	sal_uInt32 nHeight = 0;
 
 	ParaPortion* pPPortion = GetParaPortions().SaveGetObject( nParagraph );
 	DBG_ASSERT( pPPortion, "Absatz nicht gefunden: GetParaHeight" );
--- svx/source/editeng/impedit3.cxx	2004-12-29 12:18:00.460814404 +0100
+++ svx/source/editeng/impedit3.cxx	2004-12-29 17:52:39.601457401 +0100
@@ -482,7 +482,7 @@ void ImpEditEngine::FormatDoc()
 			aStatus.GetStatusWord() |= !IsVertical() ? EE_STAT_TEXTHEIGHTCHANGED : EE_STAT_TEXTWIDTHCHANGED;
 		if ( nNewHeight < nCurTextHeight )
 		{
-			aInvalidRec.Bottom() = (long)Max( nNewHeight, nCurTextHeight );
+			aInvalidRec.Bottom() = Max( long(nNewHeight), long(nCurTextHeight) );
 			if ( aInvalidRec.IsEmpty() )
 			{
 				aInvalidRec.Top() = 0;
@@ -1085,7 +1085,7 @@ sal_Bool ImpEditEngine::CreateLines( USH
 
                 // And now check for Compression:
                 if ( pPortion->GetLen() && GetAsianCompressionMode() )
-                    bCompressedChars |= ImplCalcAsianCompression( pNode, pPortion, nTmpPos, (long*)pLine->GetCharPosArray().GetData() + (nTmpPos-pLine->GetStart()), 10000, FALSE );
+                    bCompressedChars |= ImplCalcAsianCompression( pNode, pPortion, nTmpPos, const_cast< sal_Int32* >( pLine->GetCharPosArray().GetData() + (nTmpPos-pLine->GetStart()) ), 10000, FALSE );
 
 				nTmpWidth += pPortion->GetSize().Width();
 
@@ -1258,7 +1258,7 @@ sal_Bool ImpEditEngine::CreateLines( USH
             if ( bCompressedChars && ( pPortion->GetLen() > 1 ) && pPortion->GetExtraInfos() && pPortion->GetExtraInfos()->bCompressed )
             {
                 // I need the manipulated DXArray for determining the break postion...
-                ImplCalcAsianCompression( pNode, pPortion, nPortionStart, (long*)pLine->GetCharPosArray().GetData() + (nPortionStart-pLine->GetStart()), 10000, TRUE );
+                ImplCalcAsianCompression( pNode, pPortion, nPortionStart, const_cast< sal_Int32* >( pLine->GetCharPosArray().GetData() + (nPortionStart-pLine->GetStart()) ), 10000, TRUE );
             }
 			ImpBreakLine( pParaPortion, pLine, pPortion, nPortionStart,
 											nRemainingWidth, bCanHyphenate && bHyphenatePara );
@@ -4108,7 +4108,7 @@ Color ImpEditEngine::GetAutoColor() cons
 }
 
 
-BOOL ImpEditEngine::ImplCalcAsianCompression( ContentNode* pNode, TextPortion* pTextPortion, USHORT nStartPos, long* pDXArray, USHORT n100thPercentFromMax, BOOL bManipulateDXArray )
+BOOL ImpEditEngine::ImplCalcAsianCompression( ContentNode* pNode, TextPortion* pTextPortion, USHORT nStartPos, sal_Int32* pDXArray, USHORT n100thPercentFromMax, BOOL bManipulateDXArray )
 {
     DBG_ASSERT( GetAsianCompressionMode(), "ImplCalcAsianCompression - Why?" );
     DBG_ASSERT( pTextPortion->GetLen(), "ImplCalcAsianCompression - Empty Portion?" );
@@ -4279,9 +4279,9 @@ void ImpEditEngine::ImplExpandCompressed
                 USHORT nTxtPortion = pParaPortion->GetTextPortions().GetPos( pTP );
                 USHORT nTxtPortionStart = pParaPortion->GetTextPortions().GetStartPos( nTxtPortion );
                 DBG_ASSERT( nTxtPortionStart >= pLine->GetStart(), "Portion doesn't belong to the line!!!" );
-                long* pDXArray = (long*)pLine->GetCharPosArray().GetData()+( nTxtPortionStart-pLine->GetStart() );
+                sal_Int32* pDXArray = const_cast< sal_Int32* >( pLine->GetCharPosArray().GetData()+( nTxtPortionStart-pLine->GetStart() ) );
                 if ( pTP->GetExtraInfos()->pOrgDXArray )
-                    memcpy( pDXArray, pTP->GetExtraInfos()->pOrgDXArray, (pTP->GetLen()-1)*sizeof(long) );
+                    memcpy( pDXArray, pTP->GetExtraInfos()->pOrgDXArray, (pTP->GetLen()-1)*sizeof(sal_Int32) );
                 ImplCalcAsianCompression( pParaPortion->GetNode(), pTP, nTxtPortionStart, pDXArray, (USHORT)nCompressPercent, TRUE );
             }
         }
@@ -4299,7 +4299,7 @@ void ImpEditEngine::ImplDrawWithComments
                                           const String&			rTxt,
                                           const USHORT 			nIdx, 
                                           const USHORT 			nLen, 
-                                          const long* 			pDXArray ) const
+                                          const sal_Int32* 			pDXArray ) const
 {
     Reference< i18n::XBreakIterator > xBI( ImplGetBreakIterator() );
 
--- svx/source/form/filtnav.cxx	2004-09-08 16:40:16.000000000 +0200
+++ svx/source/form/filtnav.cxx	2004-12-29 15:42:51.066210732 +0100
@@ -1373,7 +1373,7 @@ sal_Bool FmFilterNavigator::EditedEntry(
 	if (aText.Len() == 0)
 	{
 		// deleting the entry asynchron
-		sal_uInt32 nEvent;
+		ULONG nEvent;
 		PostUserEvent(nEvent, LINK(this, FmFilterNavigator, OnRemove), pEntry);
 	}
 	else
--- svx/source/form/fmexpl.cxx	2004-11-29 09:57:59.000000000 +0100
+++ svx/source/form/fmexpl.cxx	2004-12-29 15:44:10.814430811 +0100
@@ -411,7 +411,7 @@ FmEntryData::FmEntryData( const FmEntryD
 void FmEntryData::Clear()
 {
     FmEntryData* pEntryData;
-    while( pEntryData = GetChildList()->Remove(sal_uInt32(0)) )
+    while( pEntryData = GetChildList()->Remove(0UL) )
         delete pEntryData;
 }
 
--- svx/source/items/flditem.cxx	2004-04-29 18:26:50.000000000 +0200
+++ svx/source/items/flditem.cxx	2004-12-29 17:55:02.791707779 +0100
@@ -798,7 +798,7 @@ String SvxExtTimeField::GetFormatted( Ti
         break;
 	}
 
-    ULONG nFormatKey;
+    sal_uInt32 nFormatKey;
 
 	switch( eFormat )
 	{
--- svx/source/msfilter/msdffimp.cxx	2004-12-29 12:18:00.473812159 +0100
+++ svx/source/msfilter/msdffimp.cxx	2004-12-29 13:53:31.375422109 +0100
@@ -6028,9 +6028,9 @@ void SvxMSDffManager::GetCtrlData( long 
 	rStCtrl.Seek( nOffsDgg );
 
 	BYTE   nVer;
-	USHORT nInst;
-	USHORT nFbt;
-	ULONG  nLength;
+	sal_uInt16 nInst;
+	sal_uInt16 nFbt;
+	sal_uInt32 nLength;
 	if( !this->ReadCommonRecordHeader( rStCtrl, nVer, nInst, nFbt, nLength ) ) return;
 
 	BOOL bOk;
@@ -6073,9 +6073,9 @@ void SvxMSDffManager::GetCtrlData( long 
 void SvxMSDffManager::GetDrawingGroupContainerData( SvStream& rSt, ULONG nLenDgg )
 {
 	BYTE   nVer;
-	USHORT nInst;
-	USHORT nFbt;
-	ULONG  nLength;
+	sal_uInt16 nInst;
+	sal_uInt16 nFbt;
+	sal_uInt32 nLength;
 
 	ULONG nLenBStoreCont = 0, nLenFBSE = 0, nRead = 0;
 
@@ -6160,7 +6160,10 @@ void SvxMSDffManager::GetDrawingGroupCon
 //
 void SvxMSDffManager::GetDrawingContainerData( SvStream& rSt, ULONG nLenDg )
 {
-	BYTE nVer;USHORT nInst;USHORT nFbt;ULONG nLength;
+	BYTE nVer;
+	sal_uInt16 nInst;
+	sal_uInt16 nFbt;
+	sal_uInt32 nLength;
 
 	ULONG nReadDg = 0;
 
@@ -6193,7 +6196,10 @@ BOOL SvxMSDffManager::GetShapeGroupConta
 												  ULONG nLenShapeGroupCont,
 												  BOOL bPatriarch )
 {
-	BYTE nVer;USHORT nInst;USHORT nFbt;ULONG nLength;
+	BYTE nVer;
+	sal_uInt16 nInst;
+	sal_uInt16 nFbt;
+	sal_uInt32 nLength;
 	long nStartShapeGroupCont = rSt.Tell();
 	// Wir stehen in einem Shape Group Container (ggfs. mehrere pro Seite)
 	// und muessen nun
@@ -6232,7 +6238,10 @@ BOOL SvxMSDffManager::GetShapeGroupConta
 
 BOOL SvxMSDffManager::GetShapeContainerData( SvStream& rSt, ULONG nLenShapeCont, ULONG nPosGroup )
 {
-	BYTE nVer;USHORT nInst;USHORT nFbt;ULONG nLength;
+	BYTE nVer;
+	sal_uInt16 nInst;
+	sal_uInt16 nFbt;
+	sal_uInt32 nLength;
 	long  nStartShapeCont = rSt.Tell();
 	// Wir stehen in einem Shape Container (ggfs. mehrere pro Sh. Group)
 	// und muessen nun
@@ -6595,9 +6604,9 @@ BOOL SvxMSDffManager::GetBLIPDirect(SvSt
 	int nRes = GRFILTER_OPENERROR;  // Fehlervariable initialisieren
 
 	// nachschauen, ob es sich auch wirklich um ein BLIP handelt
-	ULONG  nLength;
-	USHORT nInst, nFbt;
 	BYTE   nVer;
+	sal_uInt16 nInst, nFbt;
+	sal_uInt32 nLength;
 	if( ReadCommonRecordHeader( rBLIPStream, nVer, nInst, nFbt, nLength) && ( 0xF018 <= nFbt ) && ( 0xF117 >= nFbt ) )
 	{
 		Size		aMtfSize100;
@@ -6759,9 +6768,9 @@ BOOL SvxMSDffManager::ReadCommonRecordHe
 /* auch static */
 BOOL SvxMSDffManager::ReadCommonRecordHeader( SvStream& rSt,
 											  BYTE&     rVer,
-											  USHORT&   rInst,
-											  USHORT&   rFbt,
-											  ULONG&    rLength )
+											  sal_uInt16& rInst,
+											  sal_uInt16& rFbt,
+											  sal_uInt32& rLength )
 {
 	sal_uInt16 nTmp;
 	rSt >> nTmp >> rFbt >> rLength;
--- svx/source/svdraw/svdedtv2.cxx	2004-11-29 09:58:06.000000000 +0100
+++ svx/source/svdraw/svdedtv2.cxx	2004-12-29 13:53:31.376421936 +0100
@@ -913,7 +913,7 @@ void SdrEditView::DistributeMarkedObject
 
 					// clear list
 					while(aEntryList.Count())
-						delete aEntryList.Remove((UINT32)0L);
+						delete aEntryList.Remove(0UL);
 				}
 
 				if(eVer != SvxDistributeVerticalNone)
@@ -1001,7 +1001,7 @@ void SdrEditView::DistributeMarkedObject
 
 					// clear list
 					while(aEntryList.Count())
-						delete aEntryList.Remove((UINT32)0L);
+						delete aEntryList.Remove(0UL);
 				}
 
 				// UNDO-Comment and end of UNDO
