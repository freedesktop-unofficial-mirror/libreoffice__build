Index: config_office/set_soenv.in
===================================================================
RCS file: /cvs/tools/config_office/set_soenv.in,v
retrieving revision 1.10.2.8
diff -u -p -u -r1.10.2.8 set_soenv.in
--- config_office/set_soenv.in	29 Jul 2003 14:30:13 -0000	1.10.2.8
+++ config_office/set_soenv.in	11 Aug 2003 13:44:04 -0000
@@ -1009,37 +1009,31 @@ if ($platform eq "$Winnt")
 }
      
 # The general environment path.
-if ($platform eq "$Solaris") 
-{  $PATH              = $cur_dir.
-                        $ps.'$SOLARVER'.$ds.'$UPD'.$ds.'$INPATH'.$BIN.
-                        $ps.'$SOLARENV'.$ds.'$OUTPATH'.$BIN.
-                        $ps.'$SOLARENV'.$BIN.
-                        $ps.$USR_CCS.$BIN;
-   if ( $JAVA_HOME ne "" )
-   {
-      $PATH .=          $ps.'$JAVA_HOME'.$BIN;
-   }
-
-   $PATH             .= GetCorrectPath($COMPATH, $PERL_PATH, $TCSH_PATH, $compiler);
-
-   $PATH             .= $ps.$oldPATH;
-}
-elsif (($platform eq "$Linux")  || ($platform eq "$NetBSD") ||
-	($platform eq "$Tru64")  || ($platform eq "$Irix") ||
-	($platform eq "$Irix64") || ($platform eq "$FreeBSD") ||
-	($platform eq "AIX"))
+if (($platform eq "$Linux")  || ($platform eq "$NetBSD") ||
+    ($platform eq "$Tru64")  || ($platform eq "$Irix") ||
+    ($platform eq "$Irix64") || ($platform eq "$FreeBSD") ||
+    ($platform eq "AIX")     || ($platform eq "$Solaris"))
 {  $PATH              = $cur_dir.
                         $ps.'$SOLARVER'.$ds.'$UPD'.$ds.'$INPATH'.$BIN.
                         $ps.'$SOLARENV'.$ds.'$OUTPATH'.$BIN.
                         $ps.'$SOLARENV'.$BIN;
-   if ( $JAVA_HOME ne "" )
-   {
-      $PATH .=          $ps.'$JAVA_HOME'.$BIN;
+
+   if ($platform eq "$Solaris") {
+	$PATH .= $ps.$USR_CCS.$BIN;
    }
-   $PATH             .= $ps.$oldPATH;
 
-   $PATH             .= GetCorrectPath($COMPATH, $PERL_PATH, $TCSH_PATH, $compiler);
+   $PATH             .= $ps.$oldPATH;
 
+   my @javaBits;
+   if ( $JAVA_HOME ne "" ) {
+      @javaBits = ( $ps.'$JAVA_HOME'.$BIN, 'javac' );
+   } else {
+      @javaBits = (); 
+   }
+   $PATH             .= GetCorrectPath ($PATH, $COMPATH, $CC,
+                                        $PERL_PATH, 'perl',
+					$TCSH_PATH, 'tcsh',
+                                        @javaBits);
 }
 
 elsif ($platform eq "$Winnt")
@@ -2277,53 +2275,99 @@ sub CreateBuildEnv 
    mkdir( $src_root, 0777 ) || 
       print ( "Cannot create directory $src_root \n");
 }
+
 #--------------------------------------------------------
 # Function name: GetCorrectPath
 # Description:   Creates the build environment. 
-# Arguments:     1. $COMPATH:     Compiler Path.
-#                2. $PERL_PATH:   Perl executable Path.
-#                2. $TCSH_PATH:   Tcsh executable Path.
+# Arguments:     1.   existing / original path
+#                2... pairs of <path, executable>
 # Return value:  String - Correct Path
 #--------------------------------------------------------
-sub GetCorrectPath 
-{  my ( $compath, $perl_path, $tcsh_path, $compiler, $perl_compath, $compath_perl, $correct_path );
-   $compath  = $_[ 0 ];
-   $perl_path = $_[ 1 ];
-   $tcsh_path = $_[ 2 ];
-   $compiler = $_[ 3 ];
-   if ($compath ne $perl_path) 
-   {  $perl_compath .= $compath.$ds."perl";
-      if ( !( -f $perl_compath ) ) 
-      {  $correct_path = $ps.$compath.
-                         $ps.$perl_path;
-      }
-      else 
-      {  $compath_perl .= $perl_path.$ds.$compiler;
-         if ( !( -f $compath_perl ) ) 
-         {  $correct_path = $ps.$perl_path.
-                         $ps.$compath;
-         }
-         else
-         {  AddWarning( "set_soenv", "Compiler path and Perl Path conflict, fix and run ./configure again" );
-            $correct_path = "";
-         }
-      }
-   }
-   else 
-   {  $correct_path = $ps.$compath;
-   }
-   if (($tcsh_path ne $compath) && ($tcsh_path ne $perl_path) && 
-       ($tcsh_path ne $USR.$BIN) && ($tcsh_path ne $BIN)) 
-   {  $correct_path .= $ps.$tcsh_path;
-   }
-   if (($compath ne $USR.$BIN) && ($perl_path ne $USR.$BIN) && ($tcsh_path ne $USR.$BIN)) 
-   {  $correct_path .= $ps.$USR.$BIN;
-   }
-   if (($compath ne $BIN) && ($perl_path ne $BIN)) 
-   {  $correct_path .= $ps.$BIN;
-   } 
-   return $correct_path;
+sub GetCorrectPath
+{
+	sub PathLookup
+	{
+	    my $cmd = shift;
+	    while (@_) {
+		my $elem = shift;
+		
+		-x "$elem/$cmd" && return $elem;
+	    }
+	    return '';
+	}
+
+	sub CleanupPath
+	{
+	    my $elem = shift;
+	    my @rest = @_;
+	    my @result = ($elem);
+	    
+	    if (@rest) {
+		my @chew = CleanupPath(@rest);
+		
+		for $a (@chew) {
+		    if (!($a eq $elem)) {
+			push @result, $a;
+		    }
+		}
+		return @result;
+	    } else {
+		return $elem;
+	    }
+	}
+
+	my $oldPath = shift;
+	my @originalPairs = @_;
+	my @pairs = @originalPairs;
+	my @Path = split /$ds/, $oldPath;
+
+	while (@pairs) {
+	    my $path = shift @pairs;
+	    my $cmd = shift @pairs;
+	    my $to_append = 1;
+	    my $elem;
+
+	    if (! -x "$path/$cmd") {
+		AddWarning ("Missing executable $path/$cmd\n");
+		next;
+	    }
+
+	    for $elem (@Path) {
+		if ($elem eq $path) {
+#		    print "Hit duplicate path in path; break\n";
+		    $to_append = 0;
+		    last;
+		}
+		if (-f "$elem/$cmd") {
+#		    print "Element already in path ...\n";
+		    unshift @Path, $path;
+		    $to_append = 0;
+		    last;
+		} else {
+#		    print "No file $elem/$cmd\n";
+		}
+	    }
+	    if ($to_append) {
+		push @Path, $path;
+	    }
+	}
+
+	@pairs = @originalPairs;
+	while (@pairs) {
+	    my $path = shift @pairs;
+	    my $cmd = shift @pairs;
+	    my $realpath;
+
+	    $realpath = PathLookup ($cmd, @Path);
+	    if (!($realpath eq $path)) {
+		AddWarning ("Path conflict for executables " .
+                            "$path/$cmd against $realpath");
+	    }
+	}
+
+	return join $ps, CleanupPath (@Path);
 }
+
 #------------------------------------------------------------
 # Function name: AddWarning 
 # Description:   Adds any kind of warning for the user.
