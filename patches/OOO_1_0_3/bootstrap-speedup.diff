--- sal/rtl/source/bootstrap.cxx
+++ sal/rtl/source/bootstrap.cxx
@@ -353,20 +353,36 @@
 extern "C"
 {
 
+typedef ::std::list<Bootstrap_Impl *> BootstrapList;
 
 rtlBootstrapHandle SAL_CALL rtl_bootstrap_args_open(rtl_uString * pIniName) 
 {
 	OUString workDir;
 	OUString iniName = OUString(pIniName);
+	Bootstrap_Impl *pBootstrap_Impl;
 
+	static BootstrapList cache;
+
 	osl_getProcessWorkingDir(&workDir.pData);
 	FileBase::getAbsoluteFileURL(workDir, iniName, iniName);
+
+	{
+            MutexGuard aGuard( Mutex::getGlobalMutex() );
+	    
+	    for(BootstrapList::iterator ii = cache.begin();
+		ii != cache.end(); ++ii) {
+	      if ((*ii)->_iniName == iniName)
+		return *ii;
+	    }
 	
-	Bootstrap_Impl * pBootstrap_Impl = new Bootstrap_Impl;
+	    pBootstrap_Impl = new Bootstrap_Impl;
+
+	    pBootstrap_Impl->_iniName = iniName;
+	    fillFromIniFile(pBootstrap_Impl, getIniFileNameImpl());
+	    fillFromIniFile(pBootstrap_Impl, iniName);
 
-	pBootstrap_Impl->_iniName = iniName;
-	fillFromIniFile(pBootstrap_Impl, getIniFileNameImpl());
-	fillFromIniFile(pBootstrap_Impl, iniName);
+	    cache.push_back (pBootstrap_Impl);
+	}
 
 	return pBootstrap_Impl;
 }
@@ -374,7 +390,7 @@
 
 void SAL_CALL rtl_bootstrap_args_close(rtlBootstrapHandle handle)
 {
-	delete (Bootstrap_Impl *)handle;
+  //	delete (Bootstrap_Impl *)handle;
 }
 
 sal_Bool SAL_CALL rtl_bootstrap_get_from_handle(rtlBootstrapHandle handle, rtl_uString *pName, rtl_uString **ppValue, rtl_uString *pDefault)
