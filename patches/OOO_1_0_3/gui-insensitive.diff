Index: vcl/source/gdi/impimage.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/gdi/impimage.cxx,v
retrieving revision 1.1.1.1
diff -u -p -u -r1.1.1.1 impimage.cxx
--- vcl/source/gdi/impimage.cxx	18 Sep 2000 17:05:38 -0000	1.1.1.1
+++ vcl/source/gdi/impimage.cxx	21 Feb 2003 12:55:28 -0000
@@ -462,7 +463,7 @@ void ImplImageBmp::Draw( USHORT nPos, Ou
 
 				if( !aDisa )
 				{
-					aDisa = Bitmap( aBmpEx.GetSizePixel(), 1 );
+					aDisa = Bitmap( aBmpEx.GetSizePixel(), aBmpEx.GetBitCount() );
 					ImplUpdateDisaBmp( DISA_ALL );
 #ifndef REMOTE_APPSERVER
 					aDisaDisp = aDisa.CreateDisplayBitmap( pOutDev );
@@ -474,107 +475,22 @@ void ImplImageBmp::Draw( USHORT nPos, Ou
 				if( !aDisaDisp && !!aDisa )
 					aDisaDisp = aDisa.CreateDisplayBitmap( pOutDev );
 
-				pOutDev->DrawMask( aOutPos1, aOutSize, aPos, aSize,
-								   aDisaDisp, rSettings.GetLightColor() );
-				pOutDev->DrawMask( aOutPos, aOutSize, aPos, aSize,
-								   aDisaDisp, rSettings.GetShadowColor() );
+				if (aDisaDisp.GetBitCount() == 1)
+				  { // A mask
+				    pOutDev->DrawMask( aOutPos1, aOutSize, aPos, aSize,
+						       aDisaDisp, rSettings.GetLightColor() );
+				    pOutDev->DrawMask( aOutPos, aOutSize, aPos, aSize,
+						       aDisaDisp, rSettings.GetShadowColor() );
+				  }
+				else
+				  {
+				    BitmapEx tBmpEx = BitmapEx( aDisa, aBmpEx.GetMask() );
+				    pOutDev->DrawBitmapEx( aOutPos, aOutSize, IPOS( nPos ), aSize, tBmpEx );
+				  }
 			}
-			else
-			{
-				BOOL bDrawn = FALSE; 
-
-				if( nStyle & ( IMAGE_DRAW_HIGHLIGHT | IMAGE_DRAW_DEACTIVE ) )
-				{
-					Bitmap				aTmpBmp( aBmp );
-					BitmapWriteAccess*	pAcc;
-
-					aTmpBmp.Crop( Rectangle( IPOS( nPos ), aSize ) );
-					pAcc = aTmpBmp.AcquireWriteAccess();
-
-					if( pAcc )
-					{
-						const StyleSettings&	rSettings = pOutDev->GetSettings().GetStyleSettings();
-						Color					aColor;
-						BitmapColor				aCol;
-						const long				nW = pAcc->Width();
-						const long				nH = pAcc->Height();
-						BYTE*					pMapR = new BYTE[ 256 ];
-						BYTE*					pMapG = new BYTE[ 256 ];
-						BYTE*					pMapB = new BYTE[ 256 ];
-						long					nX, nY;
-
-						if( nStyle & IMAGE_DRAW_HIGHLIGHT )
-							aColor = rSettings.GetHighlightColor();
-						else
-							aColor = rSettings.GetDeactiveColor();
-
-						const BYTE cR = aColor.GetRed();
-						const BYTE cG = aColor.GetGreen();
-						const BYTE cB = aColor.GetBlue();
-
-						for( nX = 0L; nX < 256L; nX++ )
-						{
-							pMapR[ nX ] = (BYTE) ( ( ( nY = ( nX + cR ) >> 1 ) > 255 ) ? 255 : nY );
-							pMapG[ nX ] = (BYTE) ( ( ( nY = ( nX + cG ) >> 1 ) > 255 ) ? 255 : nY );
-							pMapB[ nX ] = (BYTE) ( ( ( nY = ( nX + cB ) >> 1 ) > 255 ) ? 255 : nY );
-						}
-
-						if( pAcc->HasPalette() )
-						{
-							for( USHORT i = 0, nCount = pAcc->GetPaletteEntryCount(); i < nCount; i++ )
-							{
-								const BitmapColor& rCol = pAcc->GetPaletteColor( i ); 
-								aCol.SetRed( pMapR[ rCol.GetRed() ] );
-								aCol.SetGreen( pMapG[ rCol.GetGreen() ] );
-								aCol.SetBlue( pMapB[ rCol.GetBlue() ] );
-								pAcc->SetPaletteColor( i, aCol );
-							}
-						}
-						else if( pAcc->GetScanlineFormat() == BMP_FORMAT_24BIT_TC_BGR )
-						{
-							for( nY = 0L; nY < nH; nY++ )
-							{
-								Scanline pScan = pAcc->GetScanline( nY );
-
-								for( nX = 0L; nX < nW; nX++ )
-								{
-									*pScan = pMapB[ *pScan ]; pScan++;
-									*pScan = pMapG[ *pScan ]; pScan++;
-									*pScan = pMapR[ *pScan ]; pScan++;
-								}
-							}
-						}
-						else
-						{
-							for( nY = 0L; nY < nH; nY++ )
-							{
-								for( nX = 0L; nX < nW; nX++ )
-								{
-									aCol = pAcc->GetPixel( nY, nX );
-									aCol.SetRed( pMapR[ aCol.GetRed() ] );
-									aCol.SetGreen( pMapG[ aCol.GetGreen() ] );
-									aCol.SetBlue( pMapB[ aCol.GetBlue() ] );
-									pAcc->SetPixel( nY, nX, aCol );
-								}
-							}
-						}
-
-						delete[] pMapR;
-						delete[] pMapG;
-						delete[] pMapB;
-						aTmpBmp.ReleaseAccess( pAcc );
-
-						Bitmap aTmpMsk( aMask );
-						aTmpMsk.Crop( Rectangle( IPOS( nPos), aSize ) );
-						pOutDev->DrawBitmapEx( aOutPos, BitmapEx( aTmpBmp, aTmpMsk ) );
-						bDrawn = TRUE;
-					}
-				}
-
-				if( !bDrawn )
-					pOutDev->DrawBitmapEx( aOutPos, aOutSize, IPOS( nPos), aSize, aBmpEx );
-			}
-
+			else // else RIP unused code
+			  pOutDev->DrawBitmapEx( aOutPos, aOutSize, IPOS( nPos), aSize, aBmpEx );
+			
 			pOutDev->mbMap = bOldMap;
 
 #ifdef FASTTRANSPARENT
@@ -652,7 +568,7 @@ void ImplImageBmp::ImplUpdateDisaBmp( US
 			}
 		}
 		else if( pAcc->GetScanlineFormat() == BMP_FORMAT_8BIT_PAL &&
-				 pMsk->GetScanlineFormat() == BMP_FORMAT_1BIT_MSB_PAL )
+			 pMsk->GetScanlineFormat() == BMP_FORMAT_1BIT_MSB_PAL )
 		{
 			// optimized version
 			const BYTE cAccTest = aAccWhite.GetIndex();
@@ -675,16 +591,53 @@ void ImplImageBmp::ImplUpdateDisaBmp( US
 				}
 			}
 		}
+		else if (pAcc->GetBitCount() == 32)
+		{
+			// aDisa = Bitmap( aBmpEx.GetSizePixel(), 32 );
+			// pDis = aDisa.AcquireWriteAccess();
+
+			for( long nY = nTop; nY < nBottom; nY++ )
+			{
+				for( long nX = nLeft; nX < nRight; nX++ )
+				{
+					BitmapColor col = pAcc->GetPixel( nY, nX );
+
+					if ((nY + nX) % 2 == 0)
+					  {
+					    unsigned char i;
+					    i = ( col.GetRed() * 0.3 + // magic numbers from gdk-pixbuf
+						  col.GetGreen() * 0.59 +
+						  col.GetBlue () * 0.11 );
+
+					    col.SetRed   (i / 2 + 127);
+					    col.SetGreen (i / 2 + 127);
+					    col.SetBlue  (i / 2 + 127);
+					  }
+					else
+					  {
+#define GT_ZERO(c) (((c) >= 0) ? c : 0)
+					    col.SetRed   (GT_ZERO (( col.GetRed ())   * 0.7));
+					    col.SetGreen (GT_ZERO (( col.GetGreen ()) * 0.7));
+					    col.SetBlue  (GT_ZERO (( col.GetBlue ())  * 0.7));
+#undef GT_ZERO
+					  }
+					col.SetAlpha( col.GetAlpha() / 2 );
+					pDis->SetPixel( nY, nX, col );
+				}
+			}
+		}
 		else
 		{	
 			for( long nY = nTop; nY < nBottom; nY++ )
 			{
 				for( long nX = nLeft; nX < nRight; nX++ )
 				{
-					if( ( aMskWhite == pMsk->GetPixel( nY, nX ) ) || ( aAccWhite == pAcc->GetPixel( nY, nX ) ) )
-						pDis->SetPixel( nY, nX, aDisWhite );
-					else
+				  if( ( aMskWhite == pMsk->GetPixel( nY, nX )  ||
+				        pAcc->GetPixel( nY, nX ).GetAlpha() > 127 ) &&
+				      ( aAccWhite != pAcc->GetPixel( nY, nX ) ) )
 						pDis->SetPixel( nY, nX, aDisBlack );
+					else
+						pDis->SetPixel( nY, nX, aDisWhite );
 				}
 			}
 		}
