Index: embeddedobj/source/commonembedding/embedobj.cxx
===================================================================
RCS file: /cvs/framework/embeddedobj/source/commonembedding/embedobj.cxx,v
retrieving revision 1.9
retrieving revision 1.9.14.2
diff -u -p -u -p -r1.9 -r1.9.14.2
--- embeddedobj/source/commonembedding/embedobj.cxx	5 Jan 2005 12:46:53 -0000	1.9
+++ embeddedobj/source/commonembedding/embedobj.cxx	15 Feb 2005 08:56:58 -0000	1.9.14.2
@@ -77,6 +77,10 @@
 #ifndef _COM_SUN_STAR_EMBED_XWINDOWSUPPLIER_HPP_
 #include <com/sun/star/embed/XWindowSupplier.hpp>
 #endif
+#ifndef _COM_SUN_STAR_EMBED_STATECHANGEINPROGRESSEXCEPTION_HPP_
+#include <com/sun/star/embed/StateChangeInProgressException.hpp>
+#endif
+
 
 #ifndef _COM_SUN_STAR_AWT_XWINDOWPEER_HPP_
 #include <com/sun/star/awt/XWindowPeer.hpp>
@@ -106,6 +110,7 @@
 #include <com/sun/star/lang/DisposedException.hpp>
 #endif
 
+#include <targetstatecontrol.hxx>
 
 #include "commonembobj.hxx"
 #include "convert.hxx"
@@ -462,37 +467,49 @@ void SAL_CALL OCommonEmbeddedObject::cha
 			throw embed::WrongStateException( ::rtl::OUString::createFromAscii( "The object has no persistence!\n" ),
 											uno::Reference< uno::XInterface >( reinterpret_cast< ::cppu::OWeakObject* >(this) ) );
 
-		// in case the object is already in requested state 
-		if ( m_nObjectState == nNewState )
-		{
-			// if active object is activated again, bring it's window to top
-			if ( m_nObjectState == embed::EmbedStates::ACTIVE )
-				m_pDocHolder->Show();
-	
-			return;
-		}
-
 		sal_Int32 nOldState = m_nObjectState;
 
-		// retrieve sequence of states that should be passed to reach desired state
-		uno::Sequence< sal_Int32 > aIntermediateStates = GetIntermediateStatesSequence_Impl( nNewState );
-		
-		// notify listeners that the object is going to change the state
-		StateChangeNotification_Impl( sal_True, nOldState, nNewState,aGuard );
-
-		try {
-			for ( sal_Int32 nInd = 0; nInd < aIntermediateStates.getLength(); nInd++ )
-				SwitchStateTo_Impl( aIntermediateStates[nInd] );
-
-			SwitchStateTo_Impl( nNewState );
+		if ( m_nTargetState != -1 )
+		{
+			// means that the object is currently trying to reach the target state
+			throw embed::StateChangeInProgressException( ::rtl::OUString(),
+														uno::Reference< uno::XInterface >(),
+														m_nTargetState );
 		}
-		catch( uno::Exception& )
+		else
 		{
-			if ( nOldState != m_nObjectState )
-				// notify listeners that the object has changed the state
-				StateChangeNotification_Impl( sal_False, nOldState, m_nObjectState ,aGuard);
+			TargetStateControl_Impl aControl( m_nTargetState, nNewState );
 
-			throw;
+			// in case the object is already in requested state 
+			if ( m_nObjectState == nNewState )
+			{
+				// if active object is activated again, bring it's window to top
+				if ( m_nObjectState == embed::EmbedStates::ACTIVE )
+					m_pDocHolder->Show();
+		
+				return;
+			}
+	
+			// retrieve sequence of states that should be passed to reach desired state
+			uno::Sequence< sal_Int32 > aIntermediateStates = GetIntermediateStatesSequence_Impl( nNewState );
+			
+			// notify listeners that the object is going to change the state
+			StateChangeNotification_Impl( sal_True, nOldState, nNewState,aGuard );
+	
+			try {
+				for ( sal_Int32 nInd = 0; nInd < aIntermediateStates.getLength(); nInd++ )
+					SwitchStateTo_Impl( aIntermediateStates[nInd] );
+	
+				SwitchStateTo_Impl( nNewState );
+			}
+			catch( uno::Exception& )
+			{
+				if ( nOldState != m_nObjectState )
+					// notify listeners that the object has changed the state
+					StateChangeNotification_Impl( sal_False, nOldState, m_nObjectState ,aGuard);
+	
+				throw;
+			}
 		}
 
 		// notify listeners that the object has changed the state
Index: embeddedobj/source/commonembedding/miscobj.cxx
===================================================================
RCS file: /cvs/framework/embeddedobj/source/commonembedding/miscobj.cxx,v
retrieving revision 1.13
retrieving revision 1.13.2.1
diff -u -p -u -p -r1.13 -r1.13.2.1
--- embeddedobj/source/commonembedding/miscobj.cxx	31 Jan 2005 09:01:20 -0000	1.13
+++ embeddedobj/source/commonembedding/miscobj.cxx	9 Feb 2005 12:37:44 -0000	1.13.2.1
@@ -106,6 +106,7 @@ OCommonEmbeddedObject::OCommonEmbeddedOb
 , m_bDisposed( sal_False )
 , m_bClosed( sal_False )
 , m_nObjectState( -1 )
+, m_nTargetState( -1 )
 , m_nUpdateMode ( embed::EmbedUpdateModes::ALWAYS_UPDATE )
 , m_xFactory( xFactory )
 , m_nMiscStatus( 0 )
@@ -128,6 +129,7 @@ OCommonEmbeddedObject::OCommonEmbeddedOb
 , m_bDisposed( sal_False )
 , m_bClosed( sal_False )
 , m_nObjectState( embed::EmbedStates::LOADED )
+, m_nTargetState( -1 )
 , m_nUpdateMode ( embed::EmbedUpdateModes::ALWAYS_UPDATE )
 , m_xFactory( xFactory )
 , m_nMiscStatus( 0 )
Index: embeddedobj/source/inc/commonembobj.hxx
===================================================================
RCS file: /cvs/framework/embeddedobj/source/inc/commonembobj.hxx,v
retrieving revision 1.12
retrieving revision 1.12.2.1
diff -u -p -u -p -r1.12 -r1.12.2.1
--- embeddedobj/source/inc/commonembobj.hxx	31 Jan 2005 09:02:03 -0000	1.12
+++ embeddedobj/source/inc/commonembobj.hxx	9 Feb 2005 12:37:45 -0000	1.12.2.1
@@ -166,6 +166,7 @@ protected:
 	sal_Bool m_bClosed;
 
 	sal_Int32 m_nObjectState;
+	sal_Int32 m_nTargetState; // should be -1 exept during state changing
 	sal_Int32 m_nUpdateMode;
 
 	::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory > m_xFactory;
Index: embeddedobj/source/inc/oleembobj.hxx
===================================================================
RCS file: /cvs/framework/embeddedobj/source/inc/oleembobj.hxx,v
retrieving revision 1.13
retrieving revision 1.13.2.1
diff -u -p -u -p -r1.13 -r1.13.2.1
--- embeddedobj/source/inc/oleembobj.hxx	31 Jan 2005 09:02:18 -0000	1.13
+++ embeddedobj/source/inc/oleembobj.hxx	9 Feb 2005 12:37:45 -0000	1.13.2.1
@@ -130,6 +130,7 @@ class OleEmbeddedObject : public ::cppu:
 
 	sal_Int32 m_bDisposed;
 	sal_Int32 m_nObjectState;
+	sal_Int32 m_nTargetState;
 	sal_Int32 m_nUpdateMode;
 
 	::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory > m_xFactory;
Index: embeddedobj/source/inc/targetstatecontrol.hxx
===================================================================
RCS file: embeddedobj/source/inc/targetstatecontrol.hxx
diff -N embeddedobj/source/inc/targetstatecontrol.hxx
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ embeddedobj/source/inc/targetstatecontrol.hxx	9 Feb 2005 12:38:18 -0000	1.1.2.1
@@ -0,0 +1,82 @@
+/*************************************************************************
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+#include <sal/types.h>
+#include <osl/diagnose.h>
+
+class TargetStateControl_Impl
+{
+	sal_Int32& m_nTargetStateVariable;
+public:
+	TargetStateControl_Impl( sal_Int32& nVariable, sal_Int32 nValue )
+	: m_nTargetStateVariable( nVariable )
+	{
+		OSL_ENSURE( m_nTargetStateVariable == -1, "The target state variable is not initialized properly!\n" );
+		m_nTargetStateVariable = nValue;
+	}
+
+	~TargetStateControl_Impl()
+	{
+		m_nTargetStateVariable = -1;
+	}
+};
+
+
Index: embeddedobj/source/msole/oleembed.cxx
===================================================================
RCS file: /cvs/framework/embeddedobj/source/msole/oleembed.cxx,v
retrieving revision 1.9
retrieving revision 1.9.2.1
diff -u -p -u -p -r1.9 -r1.9.2.1
--- embeddedobj/source/msole/oleembed.cxx	31 Jan 2005 09:02:47 -0000	1.9
+++ embeddedobj/source/msole/oleembed.cxx	9 Feb 2005 12:37:45 -0000	1.9.2.1
@@ -85,6 +85,9 @@
 #ifndef _COM_SUN_STAR_EMBED_NEEDSRUNNINGSTATEEXCEPTION_HPP_
 #include <com/sun/star/embed/NeedsRunningStateException.hpp>
 #endif
+#ifndef _COM_SUN_STAR_EMBED_STATECHANGEINPROGRESSEXCEPTION_HPP_
+#include <com/sun/star/embed/StateChangeInProgressException.hpp>
+#endif
 
 #ifndef _COM_SUN_STAR_IO_XSEEKABLE_HPP_
 #include <com/sun/star/io/XSeekable.hpp>
@@ -95,6 +98,8 @@
 #include <com/sun/star/lang/DisposedException.hpp>
 #endif
 
+#include <targetstatecontrol.hxx>
+
 #include <olecomponent.hxx>
 
 #include "ownview.hxx"
@@ -178,6 +183,16 @@ void SAL_CALL OleEmbeddedObject::changeS
 #ifdef WNT
 	if ( m_pOleComponent )
 	{
+		if ( m_nTargetState != -1 )
+		{
+			// means that the object is currently trying to reach the target state
+			throw embed::StateChangeInProgressException( ::rtl::OUString(),
+														uno::Reference< uno::XInterface >(),
+														m_nTargetState );
+		}
+
+		TargetStateControl_Impl aControl( m_nTargetState, nNewState );
+
 		// TODO: additional verbs can be a problem, since nobody knows how the object
 		//		 will behave after activation
 
@@ -351,6 +366,15 @@ void SAL_CALL OleEmbeddedObject::doVerb(
 		// StateChangeNotification_Impl( sal_True, nOldState, nNewState );
 		if ( m_nObjectState == embed::EmbedStates::LOADED )
 		{
+			if ( m_nTargetState != -1 )
+			{
+				// means that the object is currently trying to reach the target state
+				throw embed::StateChangeInProgressException( ::rtl::OUString(),
+															uno::Reference< uno::XInterface >(),
+															m_nTargetState );
+			}
+			TargetStateControl_Impl aControl( m_nTargetState, embed::EmbedStates::RUNNING );
+
 			// if the target object is in loaded state
 			// it must be switched to running state to execute verb
 			
Index: embeddedobj/source/msole/olemisc.cxx
===================================================================
RCS file: /cvs/framework/embeddedobj/source/msole/olemisc.cxx,v
retrieving revision 1.15
retrieving revision 1.15.2.1
diff -u -p -u -p -r1.15 -r1.15.2.1
--- embeddedobj/source/msole/olemisc.cxx	31 Jan 2005 09:26:56 -0000	1.15
+++ embeddedobj/source/msole/olemisc.cxx	9 Feb 2005 12:37:46 -0000	1.15.2.1
@@ -91,6 +91,7 @@ OleEmbeddedObject::OleEmbeddedObject( co
 , m_bReadOnly( sal_False )
 , m_bDisposed( sal_False )
 , m_nObjectState( -1 )
+, m_nTargetState( -1 )
 , m_nUpdateMode ( embed::EmbedUpdateModes::ALWAYS_UPDATE )
 , m_xFactory( xFactory )
 , m_aClassID( aClassID )
@@ -119,6 +120,7 @@ OleEmbeddedObject::OleEmbeddedObject( co
 , m_bReadOnly( sal_False )
 , m_bDisposed( sal_False )
 , m_nObjectState( -1 )
+, m_nTargetState( -1 )
 , m_nUpdateMode ( embed::EmbedUpdateModes::ALWAYS_UPDATE )
 , m_xFactory( xFactory )
 , m_bWaitSaveCompleted( sal_False )
Index: xmloff/source/draw/ximpshap.cxx
===================================================================
RCS file: /cvs/xml/xmloff/source/draw/ximpshap.cxx,v
retrieving revision 1.100
retrieving revision 1.95.34.3
diff -u -p -u -p -r1.100 -r1.95.34.3
--- xmloff/source/draw/ximpshap.cxx	7 Feb 2005 14:10:39 -0000	1.100
+++ xmloff/source/draw/ximpshap.cxx	15 Feb 2005 14:08:13 -0000	1.95.34.3
@@ -91,6 +91,10 @@
 #include <com/sun/star/media/ZoomLevel.hpp>
 #endif
 
+#ifndef _COM_SUN_STAR_AWT_RECTANGLE_HPP_
+#include <com/sun/star/awt/Rectangle.hpp>
+#endif
+
 #ifndef _COMPHELPER_EXTRACT_HXX_
 #include <comphelper/extract.hxx>
 #endif
@@ -2764,6 +2768,14 @@ void SdXMLAppletShapeContext::EndElement
 	{
 		uno::Any aAny;
 
+		if ( maSize.Width && maSize.Height )
+		{
+			// the visual area for applet must be set on loading
+			awt::Rectangle aRect( 0, 0, maSize.Width, maSize.Height );
+			aAny <<= aRect;
+			xProps->setPropertyValue( OUString( RTL_CONSTASCII_USTRINGPARAM( "VisibleArea" ) ), aAny );
+		}
+	
 		if( maParams.getLength() )
 		{
 			aAny <<= maParams;
@@ -2933,6 +2945,14 @@ void SdXMLPluginShapeContext::EndElement
 	{
 		uno::Any aAny;
 
+		if ( maSize.Width && maSize.Height )
+		{
+			// the visual area for a plugin must be set on loading
+			awt::Rectangle aRect( 0, 0, maSize.Width, maSize.Height );
+			aAny <<= aRect;
+			xProps->setPropertyValue( OUString( RTL_CONSTASCII_USTRINGPARAM( "VisibleArea" ) ), aAny );
+		}
+
 		if( !mbMedia )
 		{
 			// in case we have a plugin object
@@ -3145,6 +3165,20 @@ void SdXMLFloatingFrameShapeContext::pro
 
 void SdXMLFloatingFrameShapeContext::EndElement()
 {
+	uno::Reference< beans::XPropertySet > xProps( mxShape, uno::UNO_QUERY );
+
+	if( xProps.is() )
+	{
+		if ( maSize.Width && maSize.Height )
+		{
+			// the visual area for a floating frame must be set on loading
+			awt::Rectangle aRect( 0, 0, maSize.Width, maSize.Height );
+			uno::Any aAny;
+			aAny <<= aRect;
+			xProps->setPropertyValue( OUString( RTL_CONSTASCII_USTRINGPARAM( "VisibleArea" ) ), aAny );
+		}
+	}
+
 	SetThumbnail();
 	SdXMLShapeContext::EndElement();
 }
Index: unotools/source/ucbhelper/xtempfile.cxx
===================================================================
RCS file: /cvs/util/unotools/source/ucbhelper/xtempfile.cxx,v
retrieving revision 1.7
retrieving revision 1.7.92.1
diff -u -p -u -p -r1.7 -r1.7.92.1
--- unotools/source/ucbhelper/xtempfile.cxx	11 Sep 2003 10:32:06 -0000	1.7
+++ unotools/source/ucbhelper/xtempfile.cxx	11 Feb 2005 15:09:20 -0000	1.7.92.1
@@ -125,17 +125,6 @@ XTempFile::XTempFile ()
 , mbInClosed( sal_False )
 , mbOutClosed( sal_False )
 {
-	if ( ! TempFile::GetTempNameBaseDirectory().Len())
-	{
-		OUString aUserPath, aTmp;
-		ConfigManager* pCfgMgr = ConfigManager::GetConfigManager();
-		Any aAny = pCfgMgr->GetDirectConfigProperty( ConfigManager::INSTALLPATH );
-		aAny >>= aUserPath;
-
-		aUserPath += OUString ( RTL_CONSTASCII_USTRINGPARAM (DESKTOP_TEMPNAMEBASE_DIR ) );	 
-    	FileBase::getFileURLFromSystemPath( aUserPath, aTmp );
-    	TempFile::SetTempNameBaseDirectory( aTmp );
-	}
 	mpTempFile = new TempFile;
 	mpTempFile->EnableKillingFile ( sal_True );
 	mpStream = mpTempFile->GetStream ( STREAM_STD_READWRITE );
Index: sw/source/core/unocore/unoframe.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/unocore/unoframe.cxx,v
retrieving revision 1.96
retrieving revision 1.95.120.2
diff -u -p -u -p -r1.96 -r1.95.120.2
--- sw/source/core/unocore/unoframe.cxx	31 Jan 2005 09:10:35 -0000	1.96
+++ sw/source/core/unocore/unoframe.cxx	7 Feb 2005 15:12:33 -0000	1.95.120.2
@@ -80,6 +80,8 @@
 #include <swtypes.hxx>
 #include <cmdid.h>
 
+#include <memory>
+
 #ifndef _HINTS_HXX //autogen
 #include <hints.hxx>
 #endif
@@ -2230,6 +2232,7 @@ void SwXFrame::attachToRange(const uno::
             OUString aCLSID;
             SvGlobalName aClassName;
             uno::Reference < embed::XEmbeddedObject > xIPObj;
+            std::auto_ptr < comphelper::EmbeddedObjectContainer > pCnt;
             if( (*pCLSID) >>= aCLSID )
             {
                 sal_Bool bInternal = sal_True;
@@ -2240,9 +2243,9 @@ void SwXFrame::attachToRange(const uno::
                     throw aExcept;
                 }
 
-                comphelper::EmbeddedObjectContainer aCnt;
+                pCnt.reset( new comphelper::EmbeddedObjectContainer );
                 ::rtl::OUString aName;
-                xIPObj = aCnt.CreateEmbeddedObject( aClassName.GetByteSequence(), aName );
+                xIPObj = pCnt->CreateEmbeddedObject( aClassName.GetByteSequence(), aName );
             }
             if ( xIPObj.is() )
             {
Index: sw/source/filter/xml/xmltexti.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/xml/xmltexti.cxx,v
retrieving revision 1.38
retrieving revision 1.37.44.2.2.1
diff -u -p -u -p -r1.38 -r1.37.44.2.2.1
--- sw/source/filter/xml/xmltexti.cxx	31 Jan 2005 09:11:02 -0000	1.38
+++ sw/source/filter/xml/xmltexti.cxx	1 Feb 2005 11:57:37 -0000	1.37.44.2.2.1
@@ -713,6 +713,12 @@ Reference< XPropertySet > SwXMLTextImpor
 	SwApplet_Impl aAppletImpl ( aItemSet );
     aAppletImpl.CreateApplet ( rCode, rName, bMayScript, rHRef, GetXMLImport().GetBaseURL() );
 
+	// set the size of the applet
+	lcl_setObjectVisualArea( aAppletImpl.GetApplet(),
+							embed::Aspects::MSOLE_CONTENT,
+							Size( nWidth, nHeight ),
+							MAP_100TH_MM );
+
 	SwFrmFmt *pFrmFmt = pDoc->Insert( *pTxtCrsr->GetPaM(),
 									   aAppletImpl.GetApplet(),
 									   &aAppletImpl.GetItemSet());
@@ -749,7 +755,7 @@ Reference< XPropertySet > SwXMLTextImpor
    	INetURLObject aURLObj;
     
     bool bValidURL = rHRef.getLength() != 0 &&
-                     aURLObj.SetURL( rHRef );
+                     aURLObj.SetURL( URIHelper::SmartRel2Abs( INetURLObject( GetXMLImport().GetBaseURL() ), rHRef ) );
     bool bValidMimeType = rMimeType.getLength() != 0;
 	if( !bValidURL && !bValidMimeType )
 		return xPropSet;
@@ -766,6 +772,13 @@ Reference< XPropertySet > SwXMLTextImpor
             uno::Reference < embed::XEmbeddedObject >( xFactory->createInstanceInitNew(
             aClass, ::rtl::OUString(), xStorage, aName,
             uno::Sequence < beans::PropertyValue >() ), uno::UNO_QUERY );
+
+		// set size to the object
+		lcl_setObjectVisualArea( xObj,
+								embed::Aspects::MSOLE_CONTENT,
+								Size( nWidth, nHeight ),
+								MAP_100TH_MM );
+
         if ( svt::EmbeddedObjectRef::TryRunningState( xObj ) )
         {
             uno::Reference < beans::XPropertySet > xSet( xObj->getComponent(), uno::UNO_QUERY );
@@ -890,6 +903,13 @@ Reference< XPropertySet > SwXMLTextImpor
             uno::Reference < embed::XEmbeddedObject >( xFactory->createInstanceInitNew(
             aClass, ::rtl::OUString(), xStorage, aName,
             uno::Sequence < beans::PropertyValue >() ), uno::UNO_QUERY );
+
+		// set size to the object
+		lcl_setObjectVisualArea( xObj,
+								embed::Aspects::MSOLE_CONTENT,
+								Size( nWidth, nHeight ),
+								MAP_100TH_MM );
+
         if ( svt::EmbeddedObjectRef::TryRunningState( xObj ) )
         {
             uno::Reference < beans::XPropertySet > xSet( xObj->getComponent(), uno::UNO_QUERY );
Index: offapi/com/sun/star/embed/StateChangeInProgressException.idl
===================================================================
RCS file: offapi/com/sun/star/embed/StateChangeInProgressException.idl
diff -N offapi/com/sun/star/embed/StateChangeInProgressException.idl
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ offapi/com/sun/star/embed/StateChangeInProgressException.idl	9 Feb 2005 12:39:26 -0000	1.1.2.1
@@ -0,0 +1,96 @@
+/*************************************************************************
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+#ifndef __com_sun_star_embed_StateChangeInProgressException_idl__ 
+#define __com_sun_star_embed_StateChangeInProgressException_idl__ 
+ 
+#ifndef __com_sun_star_embed_WrongStateException_idl__ 
+#include <com/sun/star/embed/WrongStateException.idl> 
+#endif 
+ 
+ 
+//============================================================================
+ 
+ module com {  module sun {  module star {  module embed {  
+ 
+//============================================================================
+ 
+/** This exception can be thrown in case the object does not allow
+	to call requested functionality currently because the object is changing
+	state.
+ */
+exception StateChangeInProgressException: com::sun::star::embed::WrongStateException
+{
+	//------------------------------------------------------------------------
+	/** contains the target state the object tries to reach currently.
+
+		<p>
+		Contains a value from <type>EmbedStates</type> constant set.
+		</p>
+	 */
+	long TargetState;
+}; 
+ 
+//============================================================================
+ 
+}; }; }; };  
+ 
+#endif
+
Index: offapi/com/sun/star/embed/Storage.idl
===================================================================
RCS file: /cvs/api/offapi/com/sun/star/embed/Storage.idl,v
retrieving revision 1.4
retrieving revision 1.4.58.1
diff -u -p -u -p -r1.4 -r1.4.58.1
--- offapi/com/sun/star/embed/Storage.idl	17 Nov 2004 12:35:24 -0000	1.4
+++ offapi/com/sun/star/embed/Storage.idl	9 Feb 2005 12:47:01 -0000	1.4.58.1
@@ -332,6 +332,25 @@ service Storage
 	[property] string MediaType;
 
 	// -----------------------------------------------------------------------
+	/** allows to detect whether mediatype is detected by using fallback
+		approach.
+
+		<p>
+		Can be set to true if the mediatype can not be detected in standard
+		way, but there is a fallback solution allows to do it.
+		</p>
+
+		<p>
+		Usually means that the document validity is questionable, although
+		the package itself is not corrupted. The decision about document
+		validity in this case is in application hands. It is up to user of
+		the storage to deside whether he accepts the fallback approach for
+		an implementation of this service, outputs a warning or an error.
+		</p>
+	 */
+	[property, readonly] boolean MediaTypeFallbackIsUsed;
+
+	// -----------------------------------------------------------------------
 	/** allows to detect whether the storage is a root one.
 	 */
 	[property, readonly] boolean IsRoot;
Index: offapi/com/sun/star/embed/makefile.mk
===================================================================
RCS file: /cvs/api/offapi/com/sun/star/embed/makefile.mk,v
retrieving revision 1.8
retrieving revision 1.8.56.1
diff -u -p -u -p -r1.8 -r1.8.56.1
--- offapi/com/sun/star/embed/makefile.mk	26 Nov 2004 20:44:30 -0000	1.8
+++ offapi/com/sun/star/embed/makefile.mk	9 Feb 2005 12:39:09 -0000	1.8.56.1
@@ -124,6 +124,7 @@ IDLFILES=\
 	XPackageStructureCreator.idl\
 	UnreachableStateException.idl\
 	UseBackupException.idl\
+	StateChangeInProgressException.idl\
 	WrongStateException.idl\
 	ObjectSaveVetoException.idl\
 	InvalidStorageException.idl\
Index: svx/source/unodraw/unoprov.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/unodraw/unoprov.cxx,v
retrieving revision 1.58
retrieving revision 1.56.174.2
diff -u -p -u -p -r1.58 -r1.56.174.2
--- svx/source/unodraw/unoprov.cxx	21 Jan 2005 17:02:29 -0000	1.58
+++ svx/source/unodraw/unoprov.cxx	7 Feb 2005 17:29:09 -0000	1.56.174.2
@@ -542,6 +542,7 @@ SfxItemPropertyMap* ImplGetSvxPluginProp
 		{ MAP_CHAR_LEN(UNO_NAME_MISC_OBJ_SIZEPROTECT),		SDRATTR_OBJSIZEPROTECT, &::getBooleanCppuType(),0, 0},
 		{ MAP_CHAR_LEN(UNO_NAME_OLE2_PERSISTNAME),	OWN_ATTR_PERSISTNAME		, &::getCppuType(( const ::rtl::OUString*)0), 0, 0 },
 	    { MAP_CHAR_LEN(UNO_NAME_MISC_OBJ_BOUNDRECT), OWN_ATTR_BOUNDRECT,			&::getCppuType((const ::com::sun::star::awt::Rectangle*)0), ::com::sun::star::beans::PropertyAttribute::READONLY, 0},
+		{ MAP_CHAR_LEN("VisibleArea"),				OWN_ATTR_OLE_VISAREA		, &::getCppuType((const ::com::sun::star::awt::Rectangle*)0), 0, 0},
 		{0,0,0,0,0}
 	};
 
@@ -571,6 +572,7 @@ SfxItemPropertyMap* ImplGetSvxFramePrope
 		{ MAP_CHAR_LEN(UNO_NAME_MISC_OBJ_SIZEPROTECT),		SDRATTR_OBJSIZEPROTECT, &::getBooleanCppuType(),0, 0},
 		{ MAP_CHAR_LEN(UNO_NAME_OLE2_PERSISTNAME),	OWN_ATTR_PERSISTNAME		, &::getCppuType(( const ::rtl::OUString*)0), 0, 0 },
 	    { MAP_CHAR_LEN(UNO_NAME_MISC_OBJ_BOUNDRECT), OWN_ATTR_BOUNDRECT,			&::getCppuType((const ::com::sun::star::awt::Rectangle*)0), ::com::sun::star::beans::PropertyAttribute::READONLY, 0},
+		{ MAP_CHAR_LEN("VisibleArea"),				OWN_ATTR_OLE_VISAREA		, &::getCppuType((const ::com::sun::star::awt::Rectangle*)0), 0, 0},
 		{0,0,0,0,0}
 	};
 
@@ -598,6 +600,7 @@ SfxItemPropertyMap* ImplGetSvxAppletProp
 		{ MAP_CHAR_LEN(UNO_NAME_MISC_OBJ_SIZEPROTECT),		SDRATTR_OBJSIZEPROTECT, &::getBooleanCppuType(),0, 0},
 		{ MAP_CHAR_LEN(UNO_NAME_OLE2_PERSISTNAME),	OWN_ATTR_PERSISTNAME		, &::getCppuType(( const ::rtl::OUString*)0), 0, 0 },
 	    { MAP_CHAR_LEN(UNO_NAME_MISC_OBJ_BOUNDRECT), OWN_ATTR_BOUNDRECT,			&::getCppuType((const ::com::sun::star::awt::Rectangle*)0), ::com::sun::star::beans::PropertyAttribute::READONLY, 0},
+		{ MAP_CHAR_LEN("VisibleArea"),				OWN_ATTR_OLE_VISAREA		, &::getCppuType((const ::com::sun::star::awt::Rectangle*)0), 0, 0},
 		{0,0,0,0,0}
 	};
 
Index: sfx2/inc/docfile.hxx
===================================================================
RCS file: /cvs/framework/sfx2/inc/docfile.hxx,v
retrieving revision 1.36
retrieving revision 1.36.16.1
diff -u -p -u -p -r1.36 -r1.36.16.1
--- sfx2/inc/docfile.hxx	31 Jan 2005 08:42:51 -0000	1.36
+++ sfx2/inc/docfile.hxx	11 Feb 2005 11:04:09 -0000	1.36.16.1
@@ -423,6 +423,7 @@ public:
 
 	static SfxVersionTableDtor* GetVersionList(
 					const ::com::sun::star::uno::Reference< ::com::sun::star::embed::XStorage >& xStorage );
+	static sal_Bool EqualURLs( const ::rtl::OUString& aFirstURL, const ::rtl::OUString& aSecondURL );
 };
 
 SV_DECL_IMPL_REF( SfxMedium )
Index: sfx2/inc/objsh.hxx
===================================================================
RCS file: /cvs/framework/sfx2/inc/objsh.hxx,v
retrieving revision 1.52
retrieving revision 1.51.16.4
diff -u -p -u -p -r1.52 -r1.51.16.4
--- sfx2/inc/objsh.hxx	7 Feb 2005 14:48:55 -0000	1.52
+++ sfx2/inc/objsh.hxx	15 Feb 2005 14:11:51 -0000	1.51.16.4
@@ -358,7 +358,11 @@ public:
     SAL_DLLPRIVATE void SetMacroMode_Impl(sal_Bool bModal=sal_True);
 #endif
 
-    BOOL                        HasMacros_Impl() const;
+    BOOL                        HasMacrosLib_Impl() const;
+    BOOL                        HasMacrosStor_Impl() const;
+
+    static sal_Bool             StorageHasMacros( const ::com::sun::star::uno::Reference< ::com::sun::star::embed::XStorage >& xStorage );
+
     void                        ResetError();
     sal_uInt32                  GetError() const;
     sal_uInt32                  GetErrorCode() const;
@@ -389,7 +393,8 @@ public:
     sal_Bool                    SaveChildren(BOOL bObjectsOnly=FALSE);
     sal_Bool                    SaveAsChildren( SfxMedium &rMedium );
     sal_Bool                    SwitchChildrenPersistance(
-                                    const ::com::sun::star::uno::Reference< ::com::sun::star::embed::XStorage >& xStorage );
+                                    const ::com::sun::star::uno::Reference< ::com::sun::star::embed::XStorage >& xStorage,
+									sal_Bool bForceNonModified = sal_False );
     sal_Bool                    SaveCompletedChildren( sal_Bool bSuccess );
 
     sal_Bool                    ImportFrom( SfxMedium &rMedium );
@@ -718,6 +723,9 @@ public:
 										const ::rtl::OUString& aVersionName,
 										const ::rtl::OUString& aPasswd );
 
+	SAL_DLLPRIVATE static sal_Bool NoDependencyFromManifest_Impl(
+					const ::com::sun::star::uno::Reference< ::com::sun::star::embed::XStorage >& xStorage );
+
 	SAL_DLLPRIVATE static SEQUENCE< OUSTRING > GetEventNames_Impl();
     SAL_DLLPRIVATE void InitBasicManager_Impl(
         const ::com::sun::star::uno::Reference< ::com::sun::star::embed::XStorage >& xStorage, const String* pName = NULL );
Index: sfx2/source/appl/appuno.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/appl/appuno.cxx,v
retrieving revision 1.108
retrieving revision 1.108.8.1
diff -u -p -u -p -r1.108 -r1.108.8.1
--- sfx2/source/appl/appuno.cxx	2 Feb 2005 14:01:38 -0000	1.108
+++ sfx2/source/appl/appuno.cxx	9 Feb 2005 08:57:20 -0000	1.108.8.1
@@ -1738,8 +1738,12 @@ ErrCode SfxMacroLoader::loadMacro( const
             }
             else if ( pSh && pSh->GetMedium() )
             {
+                pSh->AdjustMacroMode( String() );
                 SFX_ITEMSET_ARG( pSh->GetMedium()->GetItemSet(), pUpdateDocItem, SfxUInt16Item, SID_UPDATEDOCMODE, sal_False);
-                if ( pUpdateDocItem && pUpdateDocItem->GetValue() == document::UpdateDocMode::NO_UPDATE )
+                SFX_ITEMSET_ARG( pSh->GetMedium()->GetItemSet(), pMacroExecModeItem, SfxUInt16Item, SID_MACROEXECMODE, sal_False);
+                if ( pUpdateDocItem && pMacroExecModeItem
+				  && pUpdateDocItem->GetValue() == document::UpdateDocMode::NO_UPDATE
+				  && pMacroExecModeItem->GetValue() == document::MacroExecMode::NEVER_EXECUTE )
                     return ERRCODE_IO_ACCESSDENIED;;
             }
 
Index: sfx2/source/doc/docfile.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/doc/docfile.cxx,v
retrieving revision 1.159
retrieving revision 1.158.20.5
diff -u -p -u -p -r1.159 -r1.158.20.5
--- sfx2/source/doc/docfile.cxx	31 Jan 2005 08:53:35 -0000	1.159
+++ sfx2/source/doc/docfile.cxx	14 Feb 2005 14:04:08 -0000	1.158.20.5
@@ -89,6 +89,12 @@
 #ifndef _COM_SUN_STAR_UCB_XCOMMANDENVIRONMENT_HPP_
 #include <com/sun/star/ucb/XCommandEnvironment.hpp>
 #endif
+#ifndef _COM_SUN_STAR_UCB_XCONTENTIDENTIFIERFACTORY_HPP_
+#include <com/sun/star/ucb/XContentIdentifierFactory.hpp>
+#endif
+#ifndef _COM_SUN_STAR_UCB_XCONTENTPROVIDER_HPP_
+#include <com/sun/star/ucb/XContentProvider.hpp>
+#endif
 #ifndef _COM_SUN_STAR_UCB_XPROGRESSHANDLER_HPP_
 #include <com/sun/star/ucb/XProgressHandler.hpp>
 #endif
@@ -378,6 +384,7 @@ public:
     sal_Bool bIsCharsetInitialized: 1;
     sal_Bool bDisposeStorage: 1;
     sal_Bool bStorageBasedOnInStream: 1;
+    sal_Bool m_bSalvageMode: 1;
     uno::Reference < embed::XStorage > xStorage;
 
     SfxPoolCancelManager_ImplRef xCancelManager;
@@ -460,7 +467,8 @@ SfxMedium_Impl::SfxMedium_Impl( SfxMediu
 	bUseInteractionHandler( sal_True ),
 	bAllowDefaultIntHdl( sal_False ),
 	m_bRemoveBackup( sal_False ),
-    bStorageBasedOnInStream( sal_False )
+    bStorageBasedOnInStream( sal_False ),
+	m_bSalvageMode( sal_False )
 {
     aDoneLink.CreateMutex();
 }
@@ -1035,8 +1043,16 @@ uno::Reference < embed::XStorage > SfxMe
 			DBG_ERROR("Physical name not convertable!");
 
         CloseOutStream();
-        pImp->xStorage = comphelper::OStorageHelper::GetStorageFromURL( pImp->pTempFile->GetURL(), nStorOpenMode&STREAM_WRITE ?
-                embed::ElementModes::READWRITE : embed::ElementModes::READ );
+		try
+		{
+			pImp->xStorage = comphelper::OStorageHelper::GetStorageFromURL(
+				pImp->pTempFile->GetURL(),
+				nStorOpenMode&STREAM_WRITE ? embed::ElementModes::READWRITE : embed::ElementModes::READ );
+		}
+		catch( uno::Exception& )
+		{
+			//TODO/LATER: error handling; Error and LastStorageError
+		}
 
     	pImp->bStorageBasedOnInStream = sal_False;
     }
@@ -1385,10 +1401,38 @@ sal_Bool SfxMedium::TransactedTransferFo
 	Reference< XSimpleFileAccess > aSimpleAccess;
 	::ucb::Content aOriginalContent;
 
-	DBG_ASSERT( ::utl::LocalFileHelper::IsLocalFile( aDest.GetMainURL( INetURLObject::NO_DECODE ) ),
-				"SfxMedium::TransactedTransferForFS() should be used only for local contents!" );
+//  actualy it should work even for contents different from file content
+//	DBG_ASSERT( ::utl::LocalFileHelper::IsLocalFile( aDest.GetMainURL( INetURLObject::NO_DECODE ) ),
+//				"SfxMedium::TransactedTransferForFS() should be used only for local contents!" );
+    try
+    {
+        aOriginalContent = ::ucb::Content( aDest.GetMainURL( INetURLObject::NO_DECODE ), xComEnv );
+    }
+    catch ( ::com::sun::star::ucb::CommandAbortedException& )
+    {
+        eError = ERRCODE_ABORT;
+    }
+    catch ( ::com::sun::star::ucb::CommandFailedException& )
+    {
+        eError = ERRCODE_ABORT;
+    }
+    catch (const ::com::sun::star::ucb::ContentCreationException& ex)
+    {
+        eError = ERRCODE_IO_GENERAL;
+        if (
+            (ex.eError == ::com::sun::star::ucb::ContentCreationError_NO_CONTENT_PROVIDER    ) ||
+            (ex.eError == ::com::sun::star::ucb::ContentCreationError_CONTENT_CREATION_FAILED)
+           )
+        {
+            eError = ERRCODE_IO_NOTEXISTSPATH;
+        }
+    }
+    catch (const ::com::sun::star::uno::Exception&)
+    {
+       eError = ERRCODE_IO_GENERAL;
+    }
 
-	if( ::ucb::Content::create( aDest.GetMainURL( INetURLObject::NO_DECODE ), xComEnv, aOriginalContent ) )
+    if( !eError )
 	{
 		Close();
 		::ucb::Content aTempCont;
@@ -1455,13 +1499,12 @@ sal_Bool SfxMedium::TransactedTransferFo
 
    			if ( bResult )
    			{
-				pImp->pTempFile->EnableKillingFile( sal_True );
-   				delete pImp->pTempFile;
-   				pImp->pTempFile = NULL;
-
-				// without a TempFile the physical and logical name should be the same
-  				::utl::LocalFileHelper::ConvertURLToPhysicalName( GetURLObject().GetMainURL( INetURLObject::NO_DECODE ),
-																  aName );
+				if ( pImp->pTempFile )
+				{
+					pImp->pTempFile->EnableKillingFile( sal_True );
+   					delete pImp->pTempFile;
+   					pImp->pTempFile = NULL;
+				}
    			}
 			else if ( bTransactStarted )
 			{
@@ -1479,18 +1522,18 @@ sal_Bool SfxMedium::TransactedTransferFo
 //------------------------------------------------------------------
 void SfxMedium::Transfer_Impl()
 {
+	// The transfer is required only in two cases: either if there is a temporary file or if there is a salvage item
 	String aNameURL;
 	if ( pImp->pTempFile )
 		aNameURL = pImp->pTempFile->GetURL();
-	else if ( aLogicName.Len() )
+	else if ( aLogicName.Len() && pImp->m_bSalvageMode )
 	{
 		// makes sence only in case logic name is set
 		if ( !::utl::LocalFileHelper::ConvertPhysicalNameToURL( aName, aNameURL ) )
 			OSL_ENSURE( sal_False, "The medium name is not convertable!\n" );
 	}
 
-	if ( aNameURL.Len() && !aLogicName.EqualsIgnoreCaseAscii( aNameURL )
-	  && ( !eError || eError & ERRCODE_WARNING_MASK ) )
+	if ( aNameURL.Len() && ( !eError || eError & ERRCODE_WARNING_MASK ) )
     {
         Reference < ::com::sun::star::ucb::XCommandEnvironment > xEnv;
 		Reference< XOutputStream > rOutStream;
@@ -1649,13 +1692,11 @@ void SfxMedium::Transfer_Impl()
 			xComEnv = new ::ucb::CommandEnvironment( xInteractionHandler,
 													  Reference< ::com::sun::star::ucb::XProgressHandler >() );
 
-        if ( ::utl::LocalFileHelper::IsLocalFile( aDest.GetMainURL( INetURLObject::NO_DECODE ) ) )
+        if ( ::utl::LocalFileHelper::IsLocalFile( aDest.GetMainURL( INetURLObject::NO_DECODE ) ) || !aDest.removeSegment() )
 		{
 			TransactedTransferForFS_Impl( aSource, aDest, xComEnv );
-			return;
 		}
-
-        if ( aDest.removeSegment() )
+		else
         {
             // create content for the parent folder and call transfer on that content with the source content
             // and the destination file name as parameters
@@ -1742,6 +1783,14 @@ void SfxMedium::Transfer_Impl()
 				// do not switch from temporary file in case of nonfile protocol
 	    	}
 		}
+
+		if ( !eError && !pImp->pTempFile )
+		{
+			// without a TempFile the physical and logical name should be the same after successful transfer
+  			::utl::LocalFileHelper::ConvertURLToPhysicalName( GetURLObject().GetMainURL( INetURLObject::NO_DECODE ),
+														  	aName );
+			pImp->m_bSalvageMode = sal_False;
+		}
     }
 }
 
@@ -2132,7 +2181,10 @@ void SfxMedium::Init_Impl()
     }
 
     if ( pSalvageItem && pSalvageItem->GetValue().Len() )
+	{
         aLogicName = pSalvageItem->GetValue();
+		pImp->m_bSalvageMode = sal_True;
+	}
 
 	// in case output stream is by mistake here
 	// clear the reference
@@ -3171,6 +3223,53 @@ void SfxMedium::SignContents_Impl( sal_B
 }
 
 //----------------------------------------------------------------
+sal_Bool SfxMedium::EqualURLs( const ::rtl::OUString& aFirstURL, const ::rtl::OUString& aSecondURL )
+{
+	sal_Bool bResult = sal_False;
+
+	if ( aFirstURL.getLength() && aSecondURL.getLength() )
+	{
+		INetURLObject aFirst( aFirstURL );
+		INetURLObject aSecond( aSecondURL );
+
+        if ( aFirst.GetProtocol() != INET_PROT_NOT_VALID && aSecond.GetProtocol() != INET_PROT_NOT_VALID )
+		{
+			try
+			{
+    			::ucb::ContentBroker* pBroker = ::ucb::ContentBroker::get();
+				if ( !pBroker )
+					throw uno::RuntimeException();
+
+				uno::Reference< ::com::sun::star::ucb::XContentIdentifierFactory > xIdFac
+					= pBroker->getContentIdentifierFactoryInterface();
+				if ( !xIdFac.is() )
+					throw uno::RuntimeException();
+
+				uno::Reference< ::com::sun::star::ucb::XContentIdentifier > xIdFirst
+					= xIdFac->createContentIdentifier( aFirst.GetMainURL( INetURLObject::NO_DECODE ) );
+				uno::Reference< ::com::sun::star::ucb::XContentIdentifier > xIdSecond
+					= xIdFac->createContentIdentifier( aSecond.GetMainURL( INetURLObject::NO_DECODE ) );
+	
+				if ( xIdFirst.is() && xIdSecond.is() )
+				{
+					uno::Reference< ::com::sun::star::ucb::XContentProvider > xProvider =
+															pBroker->getContentProviderInterface();
+					if ( !xProvider.is() )
+						throw uno::RuntimeException();
+					bResult = !xProvider->compareContentIds( xIdFirst, xIdSecond );
+				}
+			}
+			catch( uno::Exception& )
+			{
+				OSL_ENSURE( sal_False, "Can't compare URL's, treat as different!\n" );
+			}
+		}
+	}
+
+	return bResult;
+}
+
+//----------------------------------------------------------------
 #define nActVersion 1
 
 SvStream& SfxVersionTableDtor::Read( SvStream& rStrm )
Index: sfx2/source/doc/objmisc.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/doc/objmisc.cxx,v
retrieving revision 1.57
retrieving revision 1.57.16.1
diff -u -p -u -p -r1.57 -r1.57.16.1
--- sfx2/source/doc/objmisc.cxx	31 Jan 2005 08:44:54 -0000	1.57
+++ sfx2/source/doc/objmisc.cxx	9 Feb 2005 08:57:21 -0000	1.57.16.1
@@ -1772,14 +1772,6 @@ void SfxObjectShell::AdjustMacroMode( co
 		pImp->nMacroMode = pMacroModeItem ? pMacroModeItem->GetValue() : MacroExecMode::NEVER_EXECUTE;
 	}
 
-    SFX_ITEMSET_ARG( pMedium->GetItemSet(), pUpdateDocItem, SfxUInt16Item, SID_UPDATEDOCMODE, sal_False);
-    if ( pUpdateDocItem && pUpdateDocItem->GetValue() == document::UpdateDocMode::NO_UPDATE )
-    {
-        // no execution of macros if all updates and dialogs prohibited
-        pImp->nMacroMode = MacroExecMode::NEVER_EXECUTE;
-        return;
-    }
-
 	// get setting from configuration if required
 	sal_Int16 nAutoConformation = 0;
 	if ( pImp->nMacroMode == MacroExecMode::USE_CONFIG
@@ -2123,7 +2115,7 @@ void SfxObjectShell::InPlaceActivate( BO
     } */
 }
 
-BOOL SfxObjectShell::HasMacros_Impl() const
+BOOL SfxObjectShell::HasMacrosLib_Impl() const
 {
     BOOL bHasMacros = (pImp->pBasicLibContainer != 0);
     try
@@ -2156,5 +2148,37 @@ BOOL SfxObjectShell::HasMacros_Impl() co
     return bHasMacros;
 }
 
+BOOL SfxObjectShell::HasMacrosStor_Impl() const
+{
+	sal_Bool bHasMacros = sal_False;
+	if ( pImp->m_xDocStorage.is() )
+		bHasMacros = StorageHasMacros( pImp->m_xDocStorage );
+	
+	return bHasMacros;
+}
+
+BOOL SfxObjectShell::StorageHasMacros( const uno::Reference< embed::XStorage >& xStorage )
+{
+	sal_Bool bHasMacros = sal_False;
+
+	if ( xStorage.is() )
+	{
+		try
+		{
+			bHasMacros =
+				( xStorage->hasByName( ::rtl::OUString::createFromAscii("Basic") )
+					&& xStorage->isStorageElement( ::rtl::OUString::createFromAscii("Basic") ) )
+				||  ( xStorage->hasByName( ::rtl::OUString::createFromAscii("Scripts") )
+					&& xStorage->isStorageElement( ::rtl::OUString::createFromAscii("Scripts") ) );
+		}
+		catch ( uno::Exception& )
+		{
+			OSL_ASSERT( "Something is wrong with the checked storage!\n" );
+		}
+	}
+
+    return bHasMacros;
+}
+
 
 
Index: sfx2/source/doc/objserv.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/doc/objserv.cxx,v
retrieving revision 1.79
retrieving revision 1.77.20.2
diff -u -p -u -p -r1.79 -r1.77.20.2
--- sfx2/source/doc/objserv.cxx	31 Jan 2005 08:45:08 -0000	1.79
+++ sfx2/source/doc/objserv.cxx	7 Feb 2005 17:39:14 -0000	1.77.20.2
@@ -519,6 +519,14 @@ void SfxObjectShell::ExecFile_Impl(SfxRe
                     	return;
             	}
 
+				if ( nId == SID_SAVEASDOC )
+				{
+					// in case of plugin mode the SaveAs operation means SaveTo
+					SFX_ITEMSET_ARG( GetMedium()->GetItemSet(), pViewOnlyItem, SfxBoolItem, SID_VIEWONLY, FALSE );
+					if ( pViewOnlyItem && pViewOnlyItem->GetValue() )
+						rReq.AppendItem( SfxBoolItem( SID_SAVETO, sal_True ) );
+				}
+
 				// TODO/LATER: do the following GUI related actions in standalown method
 				// ========================================================================================================
 				// Introduce a status indicator for GUI operation
Index: sfx2/source/doc/objstor.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/doc/objstor.cxx,v
retrieving revision 1.153
retrieving revision 1.149.20.8
diff -u -p -u -p -r1.153 -r1.149.20.8
--- sfx2/source/doc/objstor.cxx	7 Feb 2005 14:55:08 -0000	1.153
+++ sfx2/source/doc/objstor.cxx	16 Feb 2005 10:28:16 -0000	1.149.20.8
@@ -168,6 +168,11 @@
 #include <com/sun/star/io/XTruncate.hpp>
 #endif
 
+#ifndef _COM_SUN_STAR_UTIL_XMODIFIABLE_HPP_
+#include <com/sun/star/util/XModifiable.hpp>
+#endif
+
+
 #ifndef _UNOTOOLS_PROCESSFACTORY_HXX_
 #include <comphelper/processfactory.hxx>
 #endif
@@ -288,6 +293,31 @@ sal_Bool GetPasswd_Impl( const SfxItemSe
 }
 
 //-------------------------------------------------------------------------
+sal_Bool SfxObjectShell::NoDependencyFromManifest_Impl( const uno::Reference< embed::XStorage >& xStorage )
+{
+	uno::Sequence< ::rtl::OUString > aElements = xStorage->getElementNames();
+	for ( sal_Int32 nInd = 0; nInd < aElements.getLength(); nInd++ )
+	{
+		if ( xStorage->isStorageElement( aElements[nInd] ) )
+		{
+			// if there are other standard elements that do not need manifest.xml the following
+			// list can be extended
+			if ( !aElements[nInd].equals( ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Pictures" ) ) )
+			  && !aElements[nInd].equals( ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Configurations" ) ) )
+			  && !aElements[nInd].equals( ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Configurations2" ) ) )
+			  && !aElements[nInd].equals( ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Thumbnails" ) ) )
+			  && !aElements[nInd].equals( ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Basic" ) ) ) )
+			{
+				// the substorage is not know as one that does not need manifest.xml
+				return sal_False;
+			}
+		}
+	}
+
+	return sal_True;
+}
+
+//-------------------------------------------------------------------------
 sal_Bool SfxObjectShell::PutURLContentsToVersionStream_Impl(
 											::rtl::OUString aURL,
 											const uno::Reference< embed::XStorage >& xDocStorage,
@@ -794,13 +824,24 @@ sal_Bool SfxObjectShell::DoLoad( SfxMedi
 
             try
             {
-                if ( xStorage->getElementNames().getLength() )
+				sal_Bool bWarnMediaTypeFallback = sal_False;
+				SFX_ITEMSET_ARG( pMedium->GetItemSet(), pRepairPackageItem, SfxBoolItem, SID_REPAIRPACKAGE, sal_False);
+
+				// treat the package as broken if the mediatype was retrieved as a fallback
+				uno::Reference< beans::XPropertySet > xStorProps( xStorage, uno::UNO_QUERY_THROW );
+				xStorProps->getPropertyValue( ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "MediaTypeFallbackUsed" ) ) )
+																	>>= bWarnMediaTypeFallback;
+
+				if ( bWarnMediaTypeFallback && pRepairPackageItem && pRepairPackageItem->GetValue() )
+				{
+					// the mediatype was retrieved by using fallback solution but this is a repairing mode
+					// so it is acceptable to open the document if there is no contents that required manifest.xml
+					bWarnMediaTypeFallback = !NoDependencyFromManifest_Impl( xStorage );
+				}
+
+                if ( !bWarnMediaTypeFallback && xStorage->getElementNames().getLength() )
                 {
-                    BOOL bHasMacros =
-                            ( xStorage->hasByName( ::rtl::OUString::createFromAscii("Basic") )
-                                && xStorage->isStorageElement( ::rtl::OUString::createFromAscii("Basic") ) )
-                            ||  ( xStorage->hasByName( ::rtl::OUString::createFromAscii("Scripts") )
-                                && xStorage->isStorageElement( ::rtl::OUString::createFromAscii("Scripts") ) );
+                    BOOL bHasMacros = StorageHasMacros( xStorage );
 
                     if ( bHasMacros )
                     {
@@ -886,7 +927,7 @@ sal_Bool SfxObjectShell::DoLoad( SfxMedi
                 bOk = ConvertFrom(*pMedium);
             }
 
-            if ( HasMacros_Impl() )
+            if ( HasMacrosLib_Impl() )
             {
                 // no signing in alien formats!
                 AdjustMacroMode( String() );
@@ -1177,6 +1218,51 @@ sal_Bool SfxObjectShell::DoSave()
 			}
 			else
 				bOk = sal_True;
+
+			try
+			{
+				// The basic and dialogs related contents are still not able to proceed with save operation ( saveTo only )
+				// so since the document storage is locked a workaround has to be used
+
+				uno::Reference< embed::XStorage > xTmpStorage = ::comphelper::OStorageHelper::GetTemporaryStorage();
+				DBG_ASSERT( xTmpStorage.is(), "If a storage can not be created an exception must be thrown!\n" );
+				if ( !xTmpStorage.is() )
+					throw uno::RuntimeException();
+
+				::rtl::OUString aBasicStorageName( RTL_CONSTASCII_USTRINGPARAM( "Basic" ) );
+				::rtl::OUString aDialogsStorageName( RTL_CONSTASCII_USTRINGPARAM( "Dialogs" ) );
+				if ( GetMedium()->GetStorage()->hasByName( aBasicStorageName ) )
+					GetMedium()->GetStorage()->copyElementTo( aBasicStorageName, xTmpStorage, aBasicStorageName );
+				if ( GetMedium()->GetStorage()->hasByName( aDialogsStorageName ) )
+					GetMedium()->GetStorage()->copyElementTo( aDialogsStorageName, xTmpStorage, aDialogsStorageName );
+
+				GetBasicManager();
+				SfxDialogLibraryContainer* pDialogCont = pImp->pDialogLibContainer;
+				SfxScriptLibraryContainer* pBasicCont = pImp->pBasicLibContainer;
+
+				// disconnect from the current storage
+				if( pDialogCont )
+					pDialogCont->setStorage( xTmpStorage );
+				if( pBasicCont )
+					pBasicCont->setStorage( xTmpStorage );
+
+				// store to the current storage
+				if( pDialogCont )
+					pDialogCont->storeLibrariesToStorage( GetMedium()->GetStorage() );
+				if( pBasicCont )
+					pBasicCont->storeLibrariesToStorage( GetMedium()->GetStorage() );
+
+				// connect to the current storage back
+				if( pDialogCont )
+					pDialogCont->setStorage( GetMedium()->GetStorage() );
+				if( pBasicCont )
+					pBasicCont->setStorage( GetMedium()->GetStorage() );
+			}
+			catch( uno::Exception& )
+			{
+				SetError( ERRCODE_IO_GENERAL );
+				bOk = sal_False;
+			}
 		}
 
 		if ( bOk )
@@ -1237,14 +1323,11 @@ sal_Bool SfxObjectShell::SaveTo_Impl
 	sal_Bool bOwnSource = IsOwnStorageFormat_Impl( *pMedium );
 	sal_Bool bOwnTarget = IsOwnStorageFormat_Impl( rMedium );
 
-    //TODO/LATER: use UCB for case sensitive/insensitive file name comparison
-#ifdef WNT
-	if ( pMedium && ( rMedium.GetName().EqualsIgnoreCaseAscii( pMedium->GetName() ) )
-#else
-    // on UNIX the case must not be ignored
-	if ( pMedium && ( rMedium.GetName().Equals( pMedium->GetName() ) )
-#endif
-	  && rMedium.GetName().CompareIgnoreCaseToAscii( "private:stream", 14 ) != COMPARE_EQUAL )
+    // use UCB for case sensitive/insensitive file name comparison
+	if ( pMedium 
+	  && pMedium->GetName().CompareIgnoreCaseToAscii( "private:stream", 14 ) != COMPARE_EQUAL
+	  && rMedium.GetName().CompareIgnoreCaseToAscii( "private:stream", 14 ) != COMPARE_EQUAL
+	  && SfxMedium::EqualURLs( pMedium->GetName(), rMedium.GetName() ) )
 	{
 		// the target file is the same as original ( Save procedure )
 
@@ -3082,7 +3165,8 @@ sal_Bool SfxObjectShell::SaveCompletedCh
 	return bResult;
 }
 
-sal_Bool SfxObjectShell::SwitchChildrenPersistance( const uno::Reference< embed::XStorage >& xStorage )
+sal_Bool SfxObjectShell::SwitchChildrenPersistance( const uno::Reference< embed::XStorage >& xStorage,
+													sal_Bool bForceNonModified )
 {
 	if ( !xStorage.is() )
 	{
@@ -3109,7 +3193,6 @@ sal_Bool SfxObjectShell::SwitchChildrenP
 												  embed::EntryInitModes::NO_INIT,
 												  uno::Sequence< beans::PropertyValue >(),
 												  uno::Sequence< beans::PropertyValue >() );
-
 				}
 				catch( uno::Exception& )
 				{
@@ -3117,6 +3200,20 @@ sal_Bool SfxObjectShell::SwitchChildrenP
 					bResult = sal_False;
 					break;
 				}
+
+				if ( bForceNonModified )
+				{
+					// if this method is used as part of SaveCompleted the object must stay unmodified after execution
+					try
+					{
+						uno::Reference< util::XModifiable > xModif( xObj->getComponent(), uno::UNO_QUERY_THROW );
+						if ( xModif->isModified() )
+							xModif->setModified( sal_False );
+					}
+					catch( uno::Exception& )
+					{
+					}
+				}
 			}
 		}
 	}
@@ -3140,7 +3237,7 @@ sal_Bool SfxObjectShell::SaveCompleted( 
 	{
         if ( pImp->mpObjectContainer )
             GetEmbeddedObjectContainer().SwitchPersistence( xStorage );
-		bResult = SwitchChildrenPersistance( xStorage );
+		bResult = SwitchChildrenPersistance( xStorage, sal_True );
 	}
 
 	if ( bResult )
Index: sfx2/source/doc/sfxbasemodel.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/doc/sfxbasemodel.cxx,v
retrieving revision 1.82
retrieving revision 1.81.16.2
diff -u -p -u -p -r1.82 -r1.81.16.2
--- sfx2/source/doc/sfxbasemodel.cxx	7 Feb 2005 14:49:32 -0000	1.82
+++ sfx2/source/doc/sfxbasemodel.cxx	15 Feb 2005 14:12:21 -0000	1.81.16.2
@@ -2217,6 +2217,8 @@ void SAL_CALL SfxBaseModel::load(	const 
     					pMedium->GetItemSet()->Put( SfxBoolItem( SID_REPAIRPACKAGE, sal_True ) );
                 		pMedium->GetItemSet()->Put( SfxBoolItem( SID_TEMPLATE, sal_True ) );
 						pMedium->GetItemSet()->Put( SfxStringItem( SID_DOCINFO_TITLE, aDocName ) );
+
+						m_pData->m_pObjectShell->ResetError();
 						if ( !m_pData->m_pObjectShell->DoLoad(pMedium) )
 							nError=ERRCODE_IO_GENERAL;
 						nError = m_pData->m_pObjectShell->GetErrorCode();
Index: sfx2/source/view/ipclient.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/view/ipclient.cxx,v
retrieving revision 1.5
retrieving revision 1.5.16.1
diff -u -p -u -p -r1.5 -r1.5.16.1
--- sfx2/source/view/ipclient.cxx	31 Jan 2005 08:45:49 -0000	1.5
+++ sfx2/source/view/ipclient.cxx	9 Feb 2005 12:37:05 -0000	1.5.16.1
@@ -92,6 +92,9 @@
 #ifndef _COM_SUN_STAR_EMBED_XSTATECHANGELISTENER_HPP_
 #include <com/sun/star/embed/XStateChangeListener.hpp>
 #endif
+#ifndef _COM_SUN_STAR_EMBED_STATECHANGEINPROGRESSEXCEPTION_HPP_
+#include <com/sun/star/embed/StateChangeInProgressException.hpp>
+#endif
 
 #include <svtools/embedhlp.hxx>
 
@@ -878,6 +881,7 @@ ErrCode SfxInPlaceClient::DoVerb( long n
 {
     SfxErrorContext aEc( ERRCTX_SO_DOVERB, m_pViewSh->GetWindow(), RID_SO_ERRCTX );
     ErrCode nError = ERRCODE_NONE;
+
     if ( m_pImp->m_xObject.is() )
     {
 		sal_Bool bSaveCopyAs = sal_False;
@@ -931,6 +935,11 @@ ErrCode SfxInPlaceClient::DoVerb( long n
 					}
 				}
 			}
+			catch ( embed::StateChangeInProgressException& )
+			{
+				// TODO/LATER: it would be nice to be able to provide the current target state outside
+				nError = ERRCODE_SO_CANNOT_DOVERB_NOW;
+			}
         	catch ( uno::Exception& )
         	{
 				nError = ERRCODE_SO_GENERALERROR;
@@ -941,6 +950,7 @@ ErrCode SfxInPlaceClient::DoVerb( long n
 
     if( nError )
         ErrorHandler::HandleError( nError );
+
     return nError;
 }
 
Index: sfx2/source/view/viewfrm.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/view/viewfrm.cxx,v
retrieving revision 1.104
retrieving revision 1.104.8.1
diff -u -p -u -p -r1.104 -r1.104.8.1
--- sfx2/source/view/viewfrm.cxx	2 Feb 2005 14:03:36 -0000	1.104
+++ sfx2/source/view/viewfrm.cxx	9 Feb 2005 08:57:23 -0000	1.104.8.1
@@ -4049,7 +4049,7 @@ SfxMacro* SfxViewFrame::GetRecordingMacr
 void SfxViewFrame::UpdateDocument_Impl()
 {
     SfxObjectShell* pDoc = GetObjectShell();
-    if ( pDoc->HasMacros_Impl() )
+    if ( pDoc->HasMacrosLib_Impl() || pDoc->HasMacrosStor_Impl() )
         pDoc->AdjustMacroMode( String() );
 	else
 	{
Index: package/inc/ZipPackage.hxx
===================================================================
RCS file: /cvs/xml/package/inc/ZipPackage.hxx,v
retrieving revision 1.36
retrieving revision 1.36.34.1
diff -u -p -u -p -r1.36 -r1.36.34.1
--- package/inc/ZipPackage.hxx	4 Oct 2004 21:07:34 -0000	1.36
+++ package/inc/ZipPackage.hxx	10 Feb 2005 14:11:04 -0000	1.36.34.1
@@ -139,6 +139,7 @@ protected:
 	sal_Bool 		 bUseManifest;
 	sal_Bool		 bForceRecovery;
 	
+	sal_Bool		m_bMediaTypeFallbackUsed;
 	sal_Bool		m_bPackageFormat;
 	
 	InitialisationMode eMode;
Index: package/source/xstor/xstorage.cxx
===================================================================
RCS file: /cvs/xml/package/source/xstor/xstorage.cxx,v
retrieving revision 1.16
retrieving revision 1.16.18.1
diff -u -p -u -p -r1.16 -r1.16.18.1
--- package/source/xstor/xstorage.cxx	29 Nov 2004 11:00:31 -0000	1.16
+++ package/source/xstor/xstorage.cxx	10 Feb 2005 14:11:04 -0000	1.16.18.1
@@ -266,6 +266,7 @@ OStorage_Impl::OStorage_Impl(	uno::Refer
 , m_bHasCommonPassword( sal_False )
 , m_pParent( NULL )
 , m_bControlMediaType( sal_False )
+, m_bMTFallbackUsed( sal_False )
 {
 	// all the checks done below by assertion statements must be done by factory
 	OSL_ENSURE( xInputStream.is(), "No input stream is provided!\n" );
@@ -296,6 +297,7 @@ OStorage_Impl::OStorage_Impl(	uno::Refer
 , m_bHasCommonPassword( sal_False )
 , m_pParent( NULL )
 , m_bControlMediaType( sal_False )
+, m_bMTFallbackUsed( sal_False )
 {
 	// all the checks done below by assertion statements must be done by factory
 	OSL_ENSURE( xStream.is(), "No stream is provided!\n" );
@@ -331,6 +333,7 @@ OStorage_Impl::OStorage_Impl(	OStorage_I
 , m_bHasCommonPassword( sal_False )
 , m_pParent( pParent ) // can be empty in case of temporary readonly substorages
 , m_bControlMediaType( sal_False )
+, m_bMTFallbackUsed( sal_False )
 {
 	OSL_ENSURE( xPackageFolder.is(), "No package folder!\n" );
 }
@@ -526,11 +529,12 @@ void OStorage_Impl::GetStorageProperties
 {
 	if ( !m_bControlMediaType )
 	{
-		uno::Reference< beans::XPropertySet > xProps( m_xPackageFolder, uno::UNO_QUERY );
-		if ( !xProps.is() )
-			throw uno::RuntimeException(); // TODO:
+		uno::Reference< beans::XPropertySet > xPackageProps( m_xPackage, uno::UNO_QUERY_THROW );
+		xPackageProps->getPropertyValue( ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "MediaTypeFallbackUsed" ) ) )
+																									>>= m_bMTFallbackUsed;
 
-		xProps->getPropertyValue( ::rtl::OUString::createFromAscii( "MediaType" ) ) >>= m_aMediaType;
+		uno::Reference< beans::XPropertySet > xProps( m_xPackageFolder, uno::UNO_QUERY_THROW );
+		xProps->getPropertyValue( ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "MediaType" ) ) ) >>= m_aMediaType;
 		m_bControlMediaType = sal_True;
 	}
 }
@@ -978,6 +982,9 @@ void OStorage_Impl::Commit()
 
 	SetModifiedInternally( sal_False );
 
+	// after commit the mediatype treated as the correct one
+	m_bMTFallbackUsed = sal_False;
+
 	// when the storage is commited the parent is modified
 	if ( m_pParent )
 		m_pParent->SetModifiedInternally( sal_True );
@@ -3570,7 +3577,8 @@ void SAL_CALL OStorage::setPropertyValue
 	else if ( m_pImpl->m_bIsRoot && ( aPropertyName.equalsAscii( "HasEncryptedEntries" )
 									|| aPropertyName.equalsAscii( "URL" )
 									|| aPropertyName.equalsAscii( "RepairPackage" ) )
-		   || aPropertyName.equalsAscii( "IsRoot" ) )
+		   || aPropertyName.equalsAscii( "IsRoot" )
+		   || aPropertyName.equalsAscii( "MediaTypeFallbackUsed" ) )
 		throw beans::PropertyVetoException(); // TODO
 	else
 		throw beans::UnknownPropertyException(); // TODO
@@ -3588,7 +3596,8 @@ uno::Any SAL_CALL OStorage::getPropertyV
 	if ( !m_pImpl )
 		throw lang::DisposedException();
 
-	if ( aPropertyName.equalsAscii( "MediaType" ) )
+	if ( aPropertyName.equalsAscii( "MediaType" )
+	  || aPropertyName.equalsAscii( "MediaTypeFallbackUsed" ) )
 	{
 		try
 		{
@@ -3607,7 +3616,10 @@ uno::Any SAL_CALL OStorage::getPropertyV
 										aCaught );
 		}
 
-		return uno::makeAny( m_pImpl->m_aMediaType );
+		if ( aPropertyName.equalsAscii( "MediaType" ) )
+			return uno::makeAny( m_pImpl->m_aMediaType );
+		else
+			return uno::makeAny( m_pImpl->m_bMTFallbackUsed );
 	}
 	else if ( aPropertyName.equalsAscii( "IsRoot" ) )
 	{
Index: package/source/xstor/xstorage.hxx
===================================================================
RCS file: /cvs/xml/package/source/xstor/xstorage.hxx,v
retrieving revision 1.7
retrieving revision 1.7.18.1
diff -u -p -u -p -r1.7 -r1.7.18.1
--- package/source/xstor/xstorage.hxx	26 Nov 2004 20:46:00 -0000	1.7
+++ package/source/xstor/xstorage.hxx	10 Feb 2005 14:11:05 -0000	1.7.18.1
@@ -241,6 +241,7 @@ struct OStorage_Impl
 
 	sal_Bool		m_bControlMediaType;
 	::rtl::OUString m_aMediaType;
+	sal_Bool		m_bMTFallbackUsed;
 
 	//////////////////////////////////////////
 	// Constructors
Index: package/source/zippackage/ZipPackage.cxx
===================================================================
RCS file: /cvs/xml/package/source/zippackage/ZipPackage.cxx,v
retrieving revision 1.96
retrieving revision 1.96.6.1
diff -u -p -u -p -r1.96 -r1.96.6.1
--- package/source/zippackage/ZipPackage.cxx	27 Jan 2005 12:25:22 -0000	1.96
+++ package/source/zippackage/ZipPackage.cxx	10 Feb 2005 14:11:05 -0000	1.96.6.1
@@ -304,6 +304,7 @@ ZipPackage::ZipPackage (const Reference 
 , xFactory( xNewFactory )
 , bHasEncryptedEntries ( sal_False )
 , bUseManifest ( sal_True )
+, m_bMediaTypeFallbackUsed ( sal_False )
 , m_bPackageFormat( sal_True )
 , bForceRecovery ( sal_False )
 , eMode ( e_IMode_None )
@@ -393,6 +394,7 @@ void ZipPackage::getZipFileContents()
 
 	if ( m_bPackageFormat )
 	{
+		sal_Bool bManifestParsed = sal_False;
 		const OUString sMeta ( RTL_CONSTASCII_USTRINGPARAM ( "META-INF" ) );
 		if ( xRootFolder->hasByName( sMeta ) )
 		{
@@ -498,6 +500,8 @@ void ZipPackage::getZipFileContents()
 									}
 								}
 							}
+
+							bManifestParsed = sal_True;
 						}
 						else
 							VOS_ENSURE ( 0, "Couldn't get a ManifestReader!" ); // throw RuntimeException?
@@ -516,7 +520,40 @@ void ZipPackage::getZipFileContents()
 
 		const OUString sMimetype ( RTL_CONSTASCII_USTRINGPARAM ( "mimetype" ) );
 		if ( xRootFolder->hasByName( sMimetype ) )
-		xRootFolder->removeByName( sMimetype );
+		{
+			if ( !bManifestParsed )
+			{
+				// try to get mediatype from the "mimetype" stream
+				uno::Reference< lang::XUnoTunnel > xMimeTypeTunnel;
+				xRootFolder->getByName( sMimetype ) >>= xMimeTypeTunnel;
+				uno::Reference < io::XActiveDataSink > xMimeSink( xMimeTypeTunnel, UNO_QUERY );
+				if ( xMimeSink.is() )
+				{
+					uno::Reference< io::XInputStream > xMimeInStream = xMimeSink->getInputStream();
+					if ( xMimeInStream.is() )
+					{
+						// Mediatypes longer than 1024 symbols should not appear here
+						uno::Sequence< sal_Int8 > aData( 1024 );
+						sal_Int32 nRead = xMimeInStream->readBytes( aData, 1024 );
+						OSL_ENSURE( nRead == aData.getLength(), "Difference between reading result and data!\n" );
+						if ( nRead > aData.getLength() )
+							nRead = aData.getLength();
+						if ( nRead )
+						{
+							::rtl::OUString aFallBack( (sal_Char*)aData.getConstArray(), nRead, RTL_TEXTENCODING_ASCII_US );
+							if ( aFallBack.compareToAscii( RTL_CONSTASCII_STRINGPARAM( "application/vnd." ) ) == 0 )
+							{
+								// accept only types that look similar to own mediatypes
+								pRootFolder->SetMediaType( aFallBack );
+								m_bMediaTypeFallbackUsed = sal_True;
+							}
+						}
+					}
+				}
+				
+			}
+			xRootFolder->removeByName( sMimetype );
+		}
 	}
 }
 // XInitialization
@@ -1318,6 +1355,9 @@ void SAL_CALL ZipPackage::commitChanges(
 		}
 	}
 
+	// after successful storing it can be set to false
+	m_bMediaTypeFallbackUsed = sal_False;
+
 	RTL_LOGFILE_TRACE_AUTHOR ( "package", LOGFILE_AUTHOR, "} ZipPackage::commitChanges" );	
 }
 
@@ -1447,8 +1487,9 @@ Reference< XPropertySetInfo > SAL_CALL Z
 void SAL_CALL ZipPackage::setPropertyValue( const OUString& aPropertyName, const Any& aValue ) 
 		throw(UnknownPropertyException, PropertyVetoException, IllegalArgumentException, WrappedTargetException, RuntimeException)
 {
-	if (aPropertyName.equalsAsciiL(RTL_CONSTASCII_STRINGPARAM("HasEncryptedEntries") ) )
-		throw IllegalArgumentException (); // This property is read-only
+	if (aPropertyName.equalsAsciiL(RTL_CONSTASCII_STRINGPARAM("HasEncryptedEntries") )
+	  ||aPropertyName.equalsAsciiL(RTL_CONSTASCII_STRINGPARAM("MediaTypeFallbackUsed") ) )
+		throw PropertyVetoException();
 	else if (aPropertyName.equalsAsciiL(RTL_CONSTASCII_STRINGPARAM("EncryptionKey") ) )
 	{
 		if ( !m_bPackageFormat )
@@ -1487,6 +1528,11 @@ Any SAL_CALL ZipPackage::getPropertyValu
 		aAny <<= bUseManifest;
 		return aAny;
 	}
+	else if (PropertyName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM ( "MediaTypeFallbackUsed" ) ) )
+	{
+		aAny <<= m_bMediaTypeFallbackUsed;
+		return aAny;
+	}
 	throw UnknownPropertyException();
 }
 void SAL_CALL ZipPackage::addPropertyChangeListener( const OUString& aPropertyName, const Reference< XPropertyChangeListener >& xListener ) 
Index: extensions/source/activex/main/SOActiveX.cpp
===================================================================
RCS file: /cvs/util/extensions/source/activex/main/SOActiveX.cpp,v
retrieving revision 1.8
retrieving revision 1.8.132.1
diff -u -p -u -p -r1.8 -r1.8.132.1
--- extensions/source/activex/main/SOActiveX.cpp	11 Jun 2004 18:23:15 -0000	1.8
+++ extensions/source/activex/main/SOActiveX.cpp	25 Jan 2005 14:58:18 -0000	1.8.132.1
@@ -513,11 +513,12 @@ HRESULT CSOActiveX::CallDispatchMethod( 
 
 HRESULT CSOActiveX::LoadURLToFrame( )
 {
-	CComVariant aArgNames[2] = { L"ReadOnly", L"ViewOnly" };
-	CComVariant aArgVals[2];
+	CComVariant aArgNames[3] = { L"ReadOnly", L"ViewOnly", L"AsTemplate" };
+	CComVariant aArgVals[3];
 	aArgVals[0].vt = VT_BOOL; aArgVals[0].boolVal = mbViewOnly ? VARIANT_TRUE : VARIANT_FALSE;
 	aArgVals[1].vt = VT_BOOL; aArgVals[1].boolVal = mbViewOnly ? VARIANT_TRUE : VARIANT_FALSE;
-	HRESULT hr = CallDispatchMethod( mCurFileUrl, aArgNames, aArgVals, 2 );
+	aArgVals[2].vt = VT_BOOL; aArgVals[2].boolVal = VARIANT_FALSE;
+	HRESULT hr = CallDispatchMethod( mCurFileUrl, aArgNames, aArgVals, 3 );
 	if( !SUCCEEDED( hr ) ) return hr;
 
 	CComVariant aBarName( L"MenuBarVisible" );
Index: extensions/source/activex/main/so_activex.cpp
===================================================================
RCS file: /cvs/util/extensions/source/activex/main/so_activex.cpp,v
retrieving revision 1.9
retrieving revision 1.9.6.2
diff -u -p -u -p -r1.9 -r1.9.6.2
--- extensions/source/activex/main/so_activex.cpp	18 Jan 2005 15:05:21 -0000	1.9
+++ extensions/source/activex/main/so_activex.cpp	4 Feb 2005 09:48:05 -0000	1.9.6.2
@@ -58,17 +58,29 @@ STDAPI DllGetClassObject(REFCLSID rclsid
 // DllRegisterServer - Adds entries to the system registry
 
 // for now database component and chart are always installed
-#define SUPPORTED_EXT_NUM 19
-const char* aFileExt[] = { ".sds", ".sda", ".sdd", ".sdc", ".sdw", ".smf",
+#define SUPPORTED_EXT_NUM 30
+const char* aFileExt[] = { ".vor",
+						   ".sds", ".sda", ".sdd", ".sdc", ".sdw", ".smf",
+						   ".stw", ".stc", ".sti", ".std", ".stm",
 						   ".sxw", ".sxc", ".sxi", ".sxd", ".sxg", ".sxm",
+						   ".ott", ".otg", ".otp", ".ots", ".otf",
 						   ".odt", ".odm", ".odg", ".odp", ".ods", ".odf", ".odb"};
-const char* aMimeType[] = { "application/vnd.stardivision.chart", 
+const char* aMimeType[] = {
+                          "application/vnd.stardivision.writer",
+
+						  "application/vnd.stardivision.chart", 
                           "application/vnd.stardivision.draw",
                           "application/vnd.stardivision.impress",
                           "application/vnd.stardivision.calc",
                           "application/vnd.stardivision.writer",
                           "application/vnd.stardivision.math",
-						  
+	
+						  "application/vnd.sun.xml.writer.template", 
+						  "application/vnd.sun.xml.calc.template", 
+						  "application/vnd.sun.xml.impress.template", 
+						  "application/vnd.sun.xml.draw.template", 
+						  "application/vnd.sun.xml.math.template",
+
 						  "application/vnd.sun.xml.writer", 
 						  "application/vnd.sun.xml.calc", 
 						  "application/vnd.sun.xml.impress", 
@@ -76,6 +88,12 @@ const char* aMimeType[] = { "application
 						  "application/vnd.sun.xml.writer.global",
 						  "application/vnd.sun.xml.math",
 
+						  MIMETYPE_OASIS_OPENDOCUMENT_TEXT_TEMPLATE_ASCII,
+						  MIMETYPE_OASIS_OPENDOCUMENT_DRAWING_TEMPLATE_ASCII,
+						  MIMETYPE_OASIS_OPENDOCUMENT_PRESENTATION_TEMPLATE_ASCII,
+						  MIMETYPE_OASIS_OPENDOCUMENT_SPREADSHEET_TEMPLATE_ASCII,
+						  MIMETYPE_OASIS_OPENDOCUMENT_FORMULA_TEMPLATE_ASCII,
+
 						  MIMETYPE_OASIS_OPENDOCUMENT_TEXT_ASCII,
 						  MIMETYPE_OASIS_OPENDOCUMENT_TEXT_GLOBAL_ASCII,
 						  MIMETYPE_OASIS_OPENDOCUMENT_DRAWING_ASCII,
@@ -84,8 +102,11 @@ const char* aMimeType[] = { "application
 						  MIMETYPE_OASIS_OPENDOCUMENT_FORMULA_ASCII,
 						  MIMETYPE_OASIS_OPENDOCUMENT_DATABASE_ASCII };
 
-const int nForModes[] = {  1,  2,  4,  8, 16, 32,
+const int nForModes[] = { 16,
+						   1,  2,  4,  8, 16, 32,
+						  16,  8,  4,  2, 32,
 						  16,  8,  4,  2, 16, 32,
+						  16,  2,  4,  8, 32,
 						  16, 16,  2,  4,  8, 32, 1 };
 
 const char* aClassID = "{67F2A879-82D5-4A6D-8CC5-FFB3C114B69D}";
