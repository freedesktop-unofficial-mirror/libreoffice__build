Index: xmloff/inc/txtimp.hxx
===================================================================
RCS file: /cvs/xml/xmloff/inc/txtimp.hxx,v
retrieving revision 1.85
retrieving revision 1.85.26.1
diff -u -p -u -p -r1.85 -r1.85.26.1
--- xmloff/inc/txtimp.hxx	27 Jan 2005 11:24:59 -0000	1.85
+++ xmloff/inc/txtimp.hxx	11 Feb 2005 20:30:23 -0000	1.85.26.1
@@ -739,6 +739,8 @@ public:
 	static SvXMLImportPropertyMapper *CreateCharExtPropMapper(SvXMLImport&, XMLFontStylesContext *pFontDecls = NULL);
 	static SvXMLImportPropertyMapper *CreateParaExtPropMapper(SvXMLImport&, XMLFontStylesContext *pFontDecls = NULL);
     static SvXMLImportPropertyMapper* CreateParaDefaultExtPropMapper(SvXMLImport&, XMLFontStylesContext* pFontDecls = NULL);
+    static SvXMLImportPropertyMapper* CreateTableDefaultExtPropMapper(SvXMLImport&, XMLFontStylesContext* pFontDecls = NULL);
+    static SvXMLImportPropertyMapper* CreateTableRowDefaultExtPropMapper(SvXMLImport&, XMLFontStylesContext* pFontDecls = NULL);
 
 	static sal_Bool HasDrawNameAttribute(
 		const ::com::sun::star::uno::Reference<
Index: xmloff/source/text/txtimp.cxx
===================================================================
RCS file: /cvs/xml/xmloff/source/text/txtimp.cxx,v
retrieving revision 1.112
retrieving revision 1.112.26.1
diff -u -p -u -p -r1.112 -r1.112.26.1
--- xmloff/source/text/txtimp.cxx	27 Jan 2005 11:27:01 -0000	1.112
+++ xmloff/source/text/txtimp.cxx	11 Feb 2005 20:30:24 -0000	1.112.26.1
@@ -741,6 +741,26 @@ SvXMLImportPropertyMapper *XMLTextImport
 	return pImportMapper;
 }
 
+SvXMLImportPropertyMapper* 
+    XMLTextImportHelper::CreateTableDefaultExtPropMapper(
+        SvXMLImport& rImport,
+        XMLFontStylesContext* pFontDecls )
+{
+	XMLPropertySetMapper *pPropMapper =
+		new XMLTextPropertySetMapper( TEXT_PROP_MAP_TABLE_DEFAULTS );
+	return new SvXMLImportPropertyMapper( pPropMapper, rImport );
+}
+
+SvXMLImportPropertyMapper* 
+    XMLTextImportHelper::CreateTableRowDefaultExtPropMapper(
+        SvXMLImport& rImport,
+        XMLFontStylesContext* pFontDecls )
+{
+	XMLPropertySetMapper *pPropMapper =
+		new XMLTextPropertySetMapper( TEXT_PROP_MAP_TABLE_ROW_DEFAULTS );
+	return new SvXMLImportPropertyMapper( pPropMapper, rImport );
+}
+
 void XMLTextImportHelper::SetCursor( const Reference < XTextCursor > & rCursor )
 {
 	xCursor = rCursor;
Index: xmloff/source/text/txtstyli.cxx
===================================================================
RCS file: /cvs/xml/xmloff/source/text/txtstyli.cxx,v
retrieving revision 1.23
retrieving revision 1.23.80.1
diff -u -p -u -p -r1.23 -r1.23.80.1
--- xmloff/source/text/txtstyli.cxx	26 Nov 2004 13:08:02 -0000	1.23
+++ xmloff/source/text/txtstyli.cxx	11 Feb 2005 20:30:24 -0000	1.23.80.1
@@ -240,6 +240,10 @@ SvXMLImportContext *XMLTextStyleContext:
 			nFamily = XML_TYPE_PROP_PARAGRAPH;
 		else if( IsXMLToken( rLocalName, XML_SECTION_PROPERTIES ) )
 			nFamily = XML_TYPE_PROP_SECTION;
+        else if( IsDefaultStyle() && IsXMLToken( rLocalName, XML_TABLE_PROPERTIES ) )
+            nFamily = XML_TYPE_PROP_TABLE;
+        else if( IsDefaultStyle() && IsXMLToken( rLocalName, XML_TABLE_ROW_PROPERTIES ) )
+            nFamily = XML_TYPE_PROP_TABLE_ROW;
 		if( nFamily )
 		{
 			UniReference < SvXMLImportPropertyMapper > xImpPrMap =
@@ -316,7 +320,9 @@ void XMLTextStyleContext::CreateAndInser
 
 void XMLTextStyleContext::SetDefaults( )
 {
-    if (GetFamily() == XML_STYLE_FAMILY_TEXT_PARAGRAPH )
+    if( ( GetFamily() == XML_STYLE_FAMILY_TEXT_PARAGRAPH ) ||
+        ( GetFamily() == XML_STYLE_FAMILY_TABLE_TABLE ) ||
+        ( GetFamily() == XML_STYLE_FAMILY_TABLE_ROW ) )
     {
         Reference < XMultiServiceFactory > xFactory ( GetImport().GetModel(), UNO_QUERY); 
         if (xFactory.is())
@@ -455,18 +461,20 @@ void XMLTextStyleContext::FillPropertySe
         // value; if we didn't find one, we'll set to false, the file
         // format default.
         // border-model: same
-        if( IsDefaultStyle() )
+        if( IsDefaultStyle() && GetFamily() == XML_STYLE_FAMILY_TABLE_ROW )
         {
             OUString sIsSplitAllowed = 
                 OUString( RTL_CONSTASCII_USTRINGPARAM( "IsSplitAllowed" ) );
-
             DBG_ASSERT( rPropSet->getPropertySetInfo()->hasPropertyByName( sIsSplitAllowed ),
                         "property missing?" );
             rPropSet->setPropertyValue( sIsSplitAllowed, 
                 (aContextIDs[1].nIndex == -1) 
                 ? makeAny( false ) 
                 : GetProperties()[aContextIDs[1].nIndex].maValue );
+        }
 
+        if( IsDefaultStyle() && GetFamily() == XML_STYLE_FAMILY_TABLE_TABLE )
+        {
             OUString sCollapsingBorders = 
                 OUString( RTL_CONSTASCII_USTRINGPARAM( "CollapsingBorders" ) );
             DBG_ASSERT( rPropSet->getPropertySetInfo()->hasPropertyByName( sCollapsingBorders ),
Index: sw/inc/doc.hxx
===================================================================
RCS file: /cvs/sw/sw/inc/doc.hxx,v
retrieving revision 1.100
retrieving revision 1.100.36.1
diff -u -p -u -p -r1.100 -r1.100.36.1
--- sw/inc/doc.hxx	25 Jan 2005 14:41:12 -0000	1.100
+++ sw/inc/doc.hxx	21 Feb 2005 12:48:03 -0000	1.100.36.1
@@ -1607,9 +1607,11 @@ public:
         - sal_True called from shel
         - sal_False else
     */
-	void SetNumRule( const SwPaM&, const SwNumRule&,
-                     sal_Bool bSetAbsLSpace = sal_True,
+    // --> OD 2005-02-18 #i42921# - re-use unused 3rd parameter
+    void SetNumRule( const SwPaM&, const SwNumRule&,
+                     sal_Bool bSetItem = sal_True,
                      sal_Bool bCalledFromShell = sal_False );
+    // <--
 		// ab hier neu starten lassen oder den Start wieder aufheben
 
     /**
Index: sw/inc/fesh.hxx
===================================================================
RCS file: /cvs/sw/sw/inc/fesh.hxx,v
retrieving revision 1.50
retrieving revision 1.50.36.1
diff -u -p -u -p -r1.50 -r1.50.36.1
--- sw/inc/fesh.hxx	25 Jan 2005 14:41:25 -0000	1.50
+++ sw/inc/fesh.hxx	21 Feb 2005 12:50:23 -0000	1.50.36.1
@@ -811,6 +811,11 @@ public:
     SwTxtNode * GetNumRuleNodeAtPos(const Point &rPot);
     BOOL IsNumLabel( const Point &rPt, int nMaxOffset = -1 );
     // <- #i23726#
+    // --> OD 2005-02-21 #i42921#
+    bool IsVerticalModeAtNdAndPos( const SwTxtNode& _rTxtNode,
+                                   const Point& _rDocPos ) const;
+    // <--
+
 };
 
 #endif
Index: sw/inc/node.hxx
===================================================================
RCS file: /cvs/sw/sw/inc/node.hxx,v
retrieving revision 1.10
retrieving revision 1.10.298.1
diff -u -p -u -p -r1.10 -r1.10.298.1
--- sw/inc/node.hxx	23 Aug 2004 08:37:03 -0000	1.10
+++ sw/inc/node.hxx	21 Feb 2005 12:53:11 -0000	1.10.298.1
@@ -457,6 +457,12 @@ public:
 	// spaetestend in EndAction einer Shell geupdatet
 	BOOL InvalidateNumRule();
 
+    // --> OD 2005-02-21 #i42921# - determines the text direction for a certain
+    // position. Return -1, if text direction could *not* be determined.
+    short GetTextDirection( const SwPosition& rPos,
+                            const Point* pPt ) const;
+    // <--
+
 private:
 	// privater Constructor, weil nie kopiert werden darf !!
 	SwCntntNode( const SwCntntNode & rNode );
Index: sw/source/core/doc/docbm.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/doc/docbm.cxx,v
retrieving revision 1.12
retrieving revision 1.12.158.1
diff -u -p -u -p -r1.12 -r1.12.158.1
--- sw/source/core/doc/docbm.cxx	16 Nov 2004 15:39:14 -0000	1.12
+++ sw/source/core/doc/docbm.cxx	22 Feb 2005 16:35:39 -0000	1.12.158.1
@@ -1011,12 +1011,12 @@ void _RestoreCntntIdx( SvULongs& rSaveAr
 	const SwSpzFrmFmts* pSpz = pDoc->GetSpzFrmFmts();
 	SwCntntNode* pCNd = (SwCntntNode*)rNd.GetCntntNode();
 
-	USHORT n = 0;
-	while( n < rSaveArr.Count() )
+	while( rSaveArr.Count() >= 2 )
 	{
+        USHORT n = 0;
 		_SwSaveTypeCountContent aSave( rSaveArr, n );
 		if( aSave.GetContent() >= nChkLen )
-			rSaveArr[ n + 1 ] -= nChkLen;
+			rSaveArr[ 1 ] -= nChkLen;
 		else
 		{
 			SwPosition* pPos = 0;
@@ -1141,8 +1141,7 @@ void _RestoreCntntIdx( SvULongs& rSaveAr
 				pPos->nContent.Assign( pCNd, Min( aSave.GetContent(), nLen ) );
 			}
 
-			rSaveArr.Remove( n, 2 );
-			n -= 2;
+			rSaveArr.Remove( 0, 2 );
 		}
 	}
 }
Index: sw/source/core/doc/docfmt.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/doc/docfmt.cxx,v
retrieving revision 1.34
retrieving revision 1.34.36.1
diff -u -p -u -p -r1.34 -r1.34.36.1
--- sw/source/core/doc/docfmt.cxx	27 Jan 2005 11:10:21 -0000	1.34
+++ sw/source/core/doc/docfmt.cxx	21 Feb 2005 12:56:41 -0000	1.34.36.1
@@ -1600,26 +1600,6 @@ BOOL lcl_SetTxtFmtColl( const SwNodePtr&
         SwTxtFmtColl* pFmt = static_cast<SwTxtFmtColl*>(pPara->pFmtColl);
         pCNd->ChgFmtColl( pFmt );
 
-        // --> FME 2005-01-12 #i39855# Move numbering update code from
-        // to SwDoc::SetTxtFmtColl() to lcl_SetTxtFmtColl()
-        SwDoc& rDoc = *pCNd->GetDoc();
-        const SfxPoolItem* pItem = NULL;
-        const SwNumRule * pRule = NULL;
-
-        if ( pFmt->GetOutlineLevel() < NO_NUMLEVEL )
-            pRule = rDoc.GetOutlineNumRule();
-        else if ( SFX_ITEM_SET ==
-                  pFmt->GetAttrSet().GetItemState(RES_PARATR_NUMRULE, TRUE, &pItem))
-            pRule = rDoc.FindNumRulePtr(reinterpret_cast<const SwNumRuleItem *>
-                    (pItem)->GetValue());
-
-        if (pRule)
-        {
-            SwPaM aPam(*pCNd);
-            rDoc.SetNumRule(aPam, *pRule);
-        }
-        // <--
-
 		pPara->nWhich++;
 	}
 	return TRUE;
@@ -2394,9 +2374,6 @@ void SwDoc::ChgFmt(SwFmt & rFmt, const S
     }
 
     rFmt.SetAttr(rSet);
-
-    if (SFX_ITEM_SET == rSet.GetItemState(RES_PARATR_NUMRULE, FALSE, NULL))
-        SetNumRuleFromColl(rFmt);
 }
 
 void SwDoc::RenameFmt(SwFmt & rFmt, const String & sNewName,
Index: sw/source/core/doc/doclay.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/doc/doclay.cxx,v
retrieving revision 1.31
retrieving revision 1.31.36.1
diff -u -p -u -p -r1.31 -r1.31.36.1
--- sw/source/core/doc/doclay.cxx	27 Jan 2005 11:10:37 -0000	1.31
+++ sw/source/core/doc/doclay.cxx	21 Feb 2005 12:58:27 -0000	1.31.36.1
@@ -2238,31 +2238,16 @@ short SwDoc::GetTextDirection( const SwP
                                const Point* pPt ) const
 {
     short nRet;
-	Point aPt;
-	if( pPt )
-		aPt = *pPt;
 
 	SwCntntNode *pNd = rPos.nNode.GetNode().GetCntntNode();
-	SwCntntFrm *pFrm;
 
-	if( pNd && 0 != (pFrm = pNd->GetFrm( &aPt, &rPos )) )
+    // --> OD 2005-02-21 #i42921# - use new method <SwCntntNode::GetTextDirection(..)>
+    if ( pNd )
     {
-        if ( pFrm->IsVertical() )
-        {
-            if ( pFrm->IsRightToLeft() )
-                nRet = FRMDIR_VERT_TOP_LEFT;
-            else
-                nRet = FRMDIR_VERT_TOP_RIGHT;
-        }
-        else
-        {
-            if ( pFrm->IsRightToLeft() )
-                nRet = FRMDIR_HORI_RIGHT_TOP;
-            else
-                nRet = FRMDIR_HORI_LEFT_TOP;
-        }
+        nRet = pNd->GetTextDirection( rPos, pPt );
     }
-    else
+    if ( nRet == -1 )
+    // <--
 	{
 		const SvxFrameDirectionItem* pItem = 0;
 		if( pNd )
Index: sw/source/core/doc/docnum.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/doc/docnum.cxx,v
retrieving revision 1.44
retrieving revision 1.44.2.4
diff -u -p -u -p -r1.44 -r1.44.2.4
--- sw/source/core/doc/docnum.cxx	4 Feb 2005 11:14:52 -0000	1.44
+++ sw/source/core/doc/docnum.cxx	21 Feb 2005 12:49:17 -0000	1.44.2.4
@@ -174,7 +174,7 @@ SwNumRule * SwDoc::GetOutlineNumRule() c
     if (pNumRuleTbl)
     {
         for (ULONG nI = 0; nI < pNumRuleTbl->Count(); nI++)
-            if ((*pNumRuleTbl)[nI]->GetName() == 
+            if ((*pNumRuleTbl)[nI]->GetName() ==
                 String(SwNumRule::GetOutlineRuleName(),
                        RTL_TEXTENCODING_ASCII_US))
             {
@@ -329,14 +329,14 @@ void SwDoc::PropagateOutlineRule()
             while (pClient)
             {
                 SwTxtNode * pTxtNode = ((SwTxtNode *) pClient);
-                
+
                 const SwPaM aPam(*pTxtNode);
                 SetNumRule(aPam, *GetOutlineNumRule());
 
                 pTxtNode->SetLevel(pColl->GetOutlineLevel());
 
                 pClient = aIter.Next();
-            }            
+            }
         }
     }
 }
@@ -1004,8 +1004,11 @@ void lcl_ChgNumRule( SwDoc& rDoc, const 
 		delete pUpd;
 }
 
+// --> OD 2005-02-18 #i42921# - re-use unused 3rd parameter - it replaces local
+// variable <bSetItem>
 void SwDoc::SetNumRule( const SwPaM& rPam, const SwNumRule& rRule,
-						sal_Bool bSetAbsLSpace, sal_Bool bCalledFromShell )
+                        sal_Bool bSetItem, sal_Bool bCalledFromShell )
+// <--
 {
 	SwUndoInsNum* pUndo;
 	if( DoesUndo() )
@@ -1018,7 +1021,6 @@ void SwDoc::SetNumRule( const SwPaM& rPa
 		pUndo = 0;
 
 	ULONG nPamPos = rPam.Start()->nNode.GetIndex();
-	BOOL bSetItem = TRUE;
 	SwNumRule* pNew = FindNumRulePtr( rRule.GetName() );
 
 	if( !pNew )
@@ -1116,7 +1118,7 @@ void SwDoc::SetNumRule( const SwPaM& rPa
 					pTxtNd->GetNum()->IsStart() )
 					break;
 
-			bSetItem = FALSE;
+            bSetItem = sal_False;
 			nPamPos = ULONG_MAX;
 			if( !pNew->IsAutoRule() || nFirst || nLast != aUpd.GetList().Count() )
 			{
@@ -1507,6 +1509,8 @@ BOOL SwDoc::ReplaceNumRule( const SwPosi
 
 void SwDoc::MakeUniqueNumRules(const SwPaM & rPaM)
 {
+    ASSERT( rPaM.GetDoc() == this, "need same doc" );
+
     map<SwNumRule *, SwNumRule *> aNumRuleMap;
 
  	ULONG nStt = rPaM.Start()->nNode.GetIndex();
@@ -2434,7 +2438,7 @@ SwNumRule* SwDoc::FindNumRulePtr( const 
             if ((*pNumRuleTbl)[n]->GetName() == rName)
             {
                 pResult = (*pNumRuleTbl)[n];
-                
+
                 break;
             }
         }
@@ -2446,7 +2450,7 @@ SwNumRule* SwDoc::FindNumRulePtr( const 
 // #i36749#
 void SwDoc::AddNumRule(SwNumRule * pRule)
 {
-    pNumRuleTbl->Insert(pRule, pNumRuleTbl->Count());    
+    pNumRuleTbl->Insert(pRule, pNumRuleTbl->Count());
     aNumRuleMap[pRule->GetName()] = pRule;
     pRule->SetNumRuleMap(&aNumRuleMap);
 }
@@ -2662,6 +2666,19 @@ void lcl_UpdateNumRuleRange( SwNumRule &
     /* counter for continuous numbering */
     int nCount = 0;
 
+    while (nUpdatePos < nLast)
+    {
+        SwTxtNode * pTxtNode = rNumRuleInfo.GetList().GetObject(nUpdatePos);
+
+        if (pTxtNode->MayBeNumbered())
+            break;
+
+        nUpdatePos++;
+    }
+
+    if (nUpdatePos >= nLast)
+        return;
+
     /* If all paragraphs found are to be processed initialize all
        levels with their start values.*/
     if ( bInit )
@@ -2846,7 +2863,7 @@ void lcl_UpdateNumRuleRange( SwNumRule &
     @param rRule        the SwNumRule we wish to update
     @param rNumRuleInfo contains the list of nodes using rRule to be updated
     @param rNode        SwNode whose section will be updated
-                        Note: the entire section from rNode.FindStartNode() 
+                        Note: the entire section from rNode.FindStartNode()
                         will be updated (see also nUpdatePos)
     @param nUpdatePos   update nodes >= rNumRuleInfo.GetList()[nUpdatePos]
 */
@@ -2871,7 +2888,7 @@ void lcl_UpdateNumRuleSection( SwNumRule
         // restart numbering unless nUpdatePos forces an update into the
         // middle of a section
         BOOL bInit = ( nUpdatePos <= nStartPos );
-        lcl_UpdateNumRuleRange( rRule, rNumRuleInfo, 
+        lcl_UpdateNumRuleRange( rRule, rNumRuleInfo,
                                 nStartPos, nEndPos, bInit );
     }
 }
@@ -2950,17 +2967,17 @@ void SwDoc::UpdateNumRule( SwNumRule & r
     }
 
     /* number each range (frames, redlines, footnotes, etc.) seperately */
-    lcl_UpdateNumRuleSectionOfSections( 
+    lcl_UpdateNumRuleSectionOfSections(
         rRule, aNumRuleInfo, aNodes.GetEndOfPostIts(), nUpdatePos );
-    lcl_UpdateNumRuleSectionOfSections( 
+    lcl_UpdateNumRuleSectionOfSections(
         rRule, aNumRuleInfo, aNodes.GetEndOfInserts(), nUpdatePos );
-    lcl_UpdateNumRuleSectionOfSections( 
+    lcl_UpdateNumRuleSectionOfSections(
         rRule, aNumRuleInfo, aNodes.GetEndOfAutotext(), nUpdatePos );
-    lcl_UpdateNumRuleSectionOfSections( 
+    lcl_UpdateNumRuleSectionOfSections(
         rRule, aNumRuleInfo, aNodes.GetEndOfRedlines(), nUpdatePos );
-    lcl_UpdateNumRuleSectionOfSections( 
+    lcl_UpdateNumRuleSectionOfSections(
         rRule, aNumRuleInfo, aNodes.GetEndOfExtras(), nUpdatePos );
-    lcl_UpdateNumRuleSection( 
+    lcl_UpdateNumRuleSection(
         rRule, aNumRuleInfo, aNodes.GetEndOfContent(), nUpdatePos );
 }
 
@@ -3066,7 +3083,7 @@ void SwDoc::UpdateNumRuleOld( SwNumRule 
 				{
 					aNum.SetStart( TRUE );
                     // OD 10.12.2002 #106111# - correct reset of level numbers
-                    for ( int nSubLvl = GetRealLevel(nLevel); 
+                    for ( int nSubLvl = GetRealLevel(nLevel);
                           nSubLvl < MAXLEVEL; ++nSubLvl)
                         aNum.GetLevelVal()[ nSubLvl ] = 0;
 					if( pRule->IsContinusNum() )
@@ -3100,7 +3117,7 @@ void SwDoc::UpdateNumRuleOld( SwNumRule 
 						nInitLevels |= ( 1 << nPrevLvl );
 				}
 
-				aNum.SetLevel( nLevel );                
+				aNum.SetLevel( nLevel );
                 aNum.SetNoNum(! IsNum(nLevel));
 
 				pStt->UpdateNum( aNum );
@@ -3138,7 +3155,7 @@ void SwDoc::UpdateNumRuleOld( SwNumRule 
                             if( !(nInitLevels & ( 1 << nPrevLvl )) )
                                 ++nPrevLvl;
 
-                            for( int ii = nPrevLvl; ii < GetRealLevel(nLevel); 
+                            for( int ii = nPrevLvl; ii < GetRealLevel(nLevel);
                                  ++ii )
                             {
                                 nInitLevels &= ~( 1 << ii );
@@ -3151,19 +3168,18 @@ void SwDoc::UpdateNumRuleOld( SwNumRule 
 								: aNum.GetSetValue();
                         }
                         else if( USHRT_MAX != aNum.GetSetValue() )
-                            aNum.GetLevelVal()[ GetRealLevel(nLevel) ] = 
+                            aNum.GetLevelVal()[ GetRealLevel(nLevel) ] =
                                 aNum.GetSetValue();
                         else if( nInitLevels & ( 1 << GetRealLevel(nLevel) ))
                             aNum.GetLevelVal()[ GetRealLevel(nLevel) ] =
                                 pRule->Get( GetRealLevel(nLevel) ).GetStart();
                         else
                         {
-                            const SwNumFmt * pTmpNumFmt = 
-                                pRule->GetNumFmt(GetRealLevel(nLevel));
+                            const SwNumFmt & rTmpNumFmt =
+                                pRule->Get(GetRealLevel(nLevel));
 
-                            if (pTmpNumFmt &&
-                                SVX_NUM_NUMBER_NONE !=
-                                pTmpNumFmt->GetNumberingType())
+                            if (SVX_NUM_NUMBER_NONE !=
+                                rTmpNumFmt.GetNumberingType())
                                 aNum.GetLevelVal()[ GetRealLevel(nLevel) ]++;
                         }
                     }
@@ -3175,7 +3191,7 @@ void SwDoc::UpdateNumRuleOld( SwNumRule 
                     // OD 10.12.2002 #106111# - reset numbers of all sublevels and
                     // note in <nInitLevels> that numbering of all sublevels have
                     // to be restarted.
-                    for ( int nSubLvl = GetRealLevel(nLevel)+1; 
+                    for ( int nSubLvl = GetRealLevel(nLevel)+1;
                           nSubLvl < MAXLEVEL; ++nSubLvl)
                     {
                         aNum.GetLevelVal()[ nSubLvl ] = 0;
Index: sw/source/core/docnode/ndsect.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/docnode/ndsect.cxx,v
retrieving revision 1.19
retrieving revision 1.19.158.1
diff -u -p -u -p -r1.19 -r1.19.158.1
--- sw/source/core/docnode/ndsect.cxx	16 Nov 2004 10:22:33 -0000	1.19
+++ sw/source/core/docnode/ndsect.cxx	11 Feb 2005 15:49:03 -0000	1.19.158.1
@@ -579,6 +579,9 @@ SwSectionFmt* SwDoc::MakeSectionFmt( SwS
 void SwDoc::DelSectionFmt( SwSectionFmt *pFmt, BOOL bDelNodes )
 {
 	USHORT nPos = pSectionFmtTbl->GetPos( pFmt );
+
+    StartUndo(UNDO_DELSECTION);
+
 	if( USHRT_MAX != nPos )
 	{
 		const SwNodeIndex* pIdx = pFmt->GetCntnt( FALSE ).GetCntntIdx();
@@ -654,6 +657,9 @@ void SwDoc::DelSectionFmt( SwSectionFmt 
 				pCNd->ChkCondColl();
 //FEATURE::CONDCOLL
 	}
+
+    EndUndo(UNDO_DELSECTION);
+
 	SetModified();
 }
 
Index: sw/source/core/docnode/node.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/docnode/node.cxx,v
retrieving revision 1.18
retrieving revision 1.18.300.1
diff -u -p -u -p -r1.18 -r1.18.300.1
--- sw/source/core/docnode/node.cxx	12 Aug 2004 12:20:46 -0000	1.18
+++ sw/source/core/docnode/node.cxx	21 Feb 2005 12:53:45 -0000	1.18.300.1
@@ -66,6 +66,11 @@
 #include <hintids.hxx>
 #endif
 
+// --> OD 2005-02-21 #i42921#
+#ifndef _SVX_FRMDIRITEM_HXX
+#include <svx/frmdiritem.hxx>
+#endif
+// <--
 #ifndef _SVX_PROTITEM_HXX //autogen
 #include <svx/protitem.hxx>
 #endif
@@ -1902,6 +1907,41 @@ void SwCntntNode::ChkCondColl()
 	}
 }
 
+// --> OD 2005-02-21 #i42921#
+short SwCntntNode::GetTextDirection( const SwPosition& rPos,
+                                     const Point* pPt ) const
+{
+    short nRet = -1;
+
+    Point aPt;
+    if( pPt )
+        aPt = *pPt;
+
+    SwFrm* pFrm = GetFrm( &aPt, &rPos );
+
+    if ( pFrm )
+    {
+        if ( pFrm->IsVertical() )
+        {
+            if ( pFrm->IsRightToLeft() )
+                nRet = FRMDIR_VERT_TOP_LEFT;
+            else
+                nRet = FRMDIR_VERT_TOP_RIGHT;
+        }
+        else
+        {
+            if ( pFrm->IsRightToLeft() )
+                nRet = FRMDIR_HORI_RIGHT_TOP;
+            else
+                nRet = FRMDIR_HORI_LEFT_TOP;
+        }
+    }
+
+
+    return nRet;
+}
+// <--
+
 //FEATURE::CONDCOLL
 // Metoden aus Node.hxx - erst hier ist der TxtNode bekannt !!
 // os: nur fuer ICC, da der zum optimieren zu dumm ist
Index: sw/source/core/edit/eddel.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/edit/eddel.cxx,v
retrieving revision 1.8
retrieving revision 1.8.36.1
diff -u -p -u -p -r1.8 -r1.8.36.1
--- sw/source/core/edit/eddel.cxx	25 Jan 2005 13:59:35 -0000	1.8
+++ sw/source/core/edit/eddel.cxx	15 Feb 2005 18:51:05 -0000	1.8.36.1
@@ -271,7 +271,7 @@ long SwEditShell::Copy( SwEditShell* pDe
 			continue;
 
         SwPaM aInsertPaM(*pPos, aSttNdIdx);
-        GetDoc()->MakeUniqueNumRules(aInsertPaM);
+        pDestShell->GetDoc()->MakeUniqueNumRules(aInsertPaM);
 
 		bRet = TRUE;
 	FOREACHPAM_END()
Index: sw/source/core/edit/ednumber.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/edit/ednumber.cxx,v
retrieving revision 1.11
retrieving revision 1.11.300.2
diff -u -p -u -p -r1.11 -r1.11.300.2
--- sw/source/core/edit/ednumber.cxx	12 Aug 2004 12:23:18 -0000	1.11
+++ sw/source/core/edit/ednumber.cxx	25 Feb 2005 12:17:18 -0000	1.11.300.2
@@ -231,9 +231,9 @@ BOOL SwEditShell::HasNumber() const
 {
     BOOL bResult = FALSE;
 
-    const SwTxtNode * pTxtNd = 
+    const SwTxtNode * pTxtNd =
         GetCrsr()->GetPoint()->nNode.GetNode().GetTxtNode();
-    
+
     if (pTxtNd)
     {
         bResult = pTxtNd->HasNumber();
@@ -246,9 +246,9 @@ BOOL SwEditShell::HasBullet() const
 {
     BOOL bResult = FALSE;
 
-    const SwTxtNode * pTxtNd = 
+    const SwTxtNode * pTxtNd =
         GetCrsr()->GetPoint()->nNode.GetNode().GetTxtNode();
-    
+
     if (pTxtNd)
     {
         bResult = pTxtNd->HasBullet();
@@ -318,7 +318,7 @@ BOOL SwEditShell::IsFirstOfNumRule() con
     if (pCrsr->GetNext() == pCrsr)
     {
         bResult = IsFirstOfNumRule(*pCrsr);
-    }    
+    }
 
     return bResult;
 }
@@ -341,7 +341,10 @@ void SwEditShell::NumIndent(short nInden
 
     SwNumRule aRule(*GetCurNumRule());
 
-    aRule.Indent(nIndent, nLevel, bRelative);
+    // --> OD 2005-02-18 #i42921# - correction:
+    // consider change of synopsis: 3rd parameter has to be -1
+    aRule.Indent(nIndent, nLevel, -1, bRelative);
+    // <--
 
     SetCurNumRule(aRule);
 
@@ -353,7 +356,7 @@ void SwEditShell::NumIndent(short nInden
     StartAllAction();
 
     SwNumRule *pCurNumRule = GetDoc()->GetCurrNumRule(rPos);
-    
+
     if (pCurNumRule)
     {
         SwPaM aPaM(rPos);
@@ -361,14 +364,17 @@ void SwEditShell::NumIndent(short nInden
 
         int nLevel = -1;
         int nReferenceLevel = pTxtNode->GetNum()->GetLevel();
-        
+
         if (! IsFirstOfNumRule(aPaM) && pTxtNode->GetNum())
             nLevel = nReferenceLevel;
-                
+
         SwNumRule aRule(*pCurNumRule);
         aRule.Indent(nIndent, nLevel, nReferenceLevel, FALSE);
-        
+
+        // --> OD 2005-02-18 #i42921# - 3rd parameter = false in order to
+        // suppress setting of num rule at <aPaM>.
         GetDoc()->SetNumRule(aPaM, aRule, sal_False, sal_True);
+        // <--
     }
 
     EndAllAction();
@@ -586,7 +592,7 @@ BOOL SwEditShell::IsProtectedOutlinePara
 	return bRet;
 }
 
-/** Test whether outline may be moved (bCopy == false) 
+/** Test whether outline may be moved (bCopy == false)
  *                           or copied (bCopy == true)
  * Verify these conditions:
  * 1) outline must be within main body (and not in redline)
@@ -750,13 +756,17 @@ void SwEditShell::SetCurNumRule( const S
 		SwPaM aPam( *pCrsr->GetPoint() );
 		for( USHORT n = 0; n < aRangeArr.Count(); ++n )
             /* #109308# adapt to new signature of SetNumRule */
-			GetDoc()->SetNumRule( aRangeArr.SetPam( n, aPam ), rRule, 
-                                  sal_False, sal_True );
+            // --> OD 2005-02-25 #i42921# - adapt to changed signature
+			GetDoc()->SetNumRule( aRangeArr.SetPam( n, aPam ), rRule,
+                                  sal_True, sal_True );
+            // <--
 		GetDoc()->EndUndo( UNDO_END );
 	}
 	else
         /* #109308# adapt to new signature of SetNumRule */
-		GetDoc()->SetNumRule( *pCrsr, rRule, sal_False, sal_True );
+        // --> OD 2005-02-25 #i42921# - adapt to changed signature
+        GetDoc()->SetNumRule( *pCrsr, rRule, sal_True, sal_True );
+        // <--
 
 	EndAllAction();
 }
Index: sw/source/core/frmedt/fetab.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/frmedt/fetab.cxx,v
retrieving revision 1.34
retrieving revision 1.34.48.1
diff -u -p -u -p -r1.34 -r1.34.48.1
--- sw/source/core/frmedt/fetab.cxx	21 Jan 2005 10:31:40 -0000	1.34
+++ sw/source/core/frmedt/fetab.cxx	21 Feb 2005 12:51:15 -0000	1.34.48.1
@@ -2221,6 +2221,35 @@ BOOL SwFEShell::IsNumLabel( const Point 
 }
 // <- #i23726#
 
+// --> OD 2005-02-21 #i42921#
+bool SwFEShell::IsVerticalModeAtNdAndPos( const SwTxtNode& _rTxtNode,
+                                          const Point& _rDocPos ) const
+{
+    bool bRet( false );
+
+    const short nTextDir =
+        _rTxtNode.GetTextDirection( SwPosition(_rTxtNode), &_rDocPos );
+    switch ( nTextDir )
+    {
+        case -1:
+        case FRMDIR_HORI_RIGHT_TOP:
+        case FRMDIR_HORI_LEFT_TOP:
+        {
+            bRet = false;
+        }
+        break;
+        case FRMDIR_VERT_TOP_LEFT:
+        case FRMDIR_VERT_TOP_RIGHT:
+        {
+            bRet = true;
+        }
+        break;
+    }
+
+    return bRet;
+}
+// <--
+
 /*************************************************************************
 |*
 |*	SwFEShell::GetMouseTabCols()
Index: sw/source/core/txtnode/ndtxt.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/txtnode/ndtxt.cxx,v
retrieving revision 1.43
retrieving revision 1.43.98.1
diff -u -p -u -p -r1.43 -r1.43.98.1
--- sw/source/core/txtnode/ndtxt.cxx	5 Jan 2005 11:47:24 -0000	1.43
+++ sw/source/core/txtnode/ndtxt.cxx	21 Feb 2005 13:01:12 -0000	1.43.98.1
@@ -1000,11 +1000,11 @@ void SwTxtNode::Update( const SwIndex & 
 		{
 			// Bookmarks must never grow to either side, when
 			// editing (directly) to the left or right (#i29942#)!
-			// And a bookmark with same start and end must remain 
+			// And a bookmark with same start and end must remain
 			// to the left of the inserted text (used in XML import).
 			const SwPosition* pEnd = rBkmk[i]->End();
 			pIdx = (SwIndex*)&pEnd->nContent;
-			if( this == &pEnd->nNode.GetNode() && 
+			if( this == &pEnd->nNode.GetNode() &&
 				aPos.GetIndex() == pIdx->GetIndex() )
 				pIdx->Assign( &aTmpIdxReg, pIdx->GetIndex() );
 		}
@@ -1054,12 +1054,12 @@ void SwTxtNode::_ChgTxtCollUpdateNum( co
 	{
 		// Numerierung aufheben, falls sie aus der Vorlage kommt
 		// und nicht nicht aus der neuen
-		if( NO_NUMBERING != nNewLevel && pNdNum && 
+		if( NO_NUMBERING != nNewLevel && pNdNum &&
             ( !GetpSwAttrSet() ||
-              SFX_ITEM_SET != 
+              SFX_ITEM_SET !=
               GetpSwAttrSet()->GetItemState(RES_PARATR_NUMRULE, FALSE )))
         {
-            if ((!pNewColl || 
+            if ((!pNewColl ||
                  SFX_ITEM_SET != pNewColl->GetItemState(RES_PARATR_NUMRULE )) )
                 delete pNdNum, pNdNum = 0;
         }
@@ -1068,20 +1068,6 @@ void SwTxtNode::_ChgTxtCollUpdateNum( co
 			rNds.UpdateOutlineNode( *this, nOldLevel, nNewLevel );
 	}
 
-    const SfxPoolItem * pItem = NULL;
-    if (SFX_ITEM_SET == 
-        pNewColl->GetItemState(RES_PARATR_NUMRULE, FALSE, &pItem))
-    {
-        SwNumRule * pRule = 
-            GetDoc()->FindNumRulePtr(((SwNumRuleItem *) pItem)->GetValue());
-
-        if (pRule)
-        {
-            SwPaM aPam(*this);
-            GetDoc()->SetNumRule(aPam, *pRule);
-        }
-    }
-
 	// Update beim Level 0 noch die Fussnoten !!
 	if( (!nNewLevel || !nOldLevel) && pDoc->GetFtnIdxs().Count() &&
 		FTNNUM_CHAPTER == pDoc->GetFtnInfo().eNum &&
@@ -2555,14 +2541,14 @@ XubString SwTxtNode::GetNumString() cons
     {
         const SwNumRule* pRule = GetNumRule();
 
-        if (pRule && 
-            pNum->GetLevel() < MAXLEVEL && 
+        if (pRule &&
+            pNum->GetLevel() < MAXLEVEL &&
             pRule->Get(pNum->GetLevel()).IsTxtFmt())
             return pRule->MakeNumString(*pNum);
     }
 
     return aEmptyStr;
-            
+
 #if 0
 	if( (( 0 != ( pNum = GetNum() ) &&
 			0 != ( pRule = GetNumRule() )) ||
@@ -3061,7 +3047,7 @@ const SwNodeNum * SwTxtNode::GetNum(BOOL
         if (bUpdate && pRule->IsInvalidRule())
             const_cast<SwDoc *>(GetDoc())->UpdateNumRule(*pRule, 0);
     }
- 
+
     return pNdNum;
 }
 
@@ -3072,7 +3058,7 @@ BOOL SwTxtNode::IsOutline() const
 
     if (pRule && pRule->IsOutlineRule())
         bResult = TRUE;
-    
+
     return bResult;
 }
 
@@ -3109,7 +3095,7 @@ BYTE SwTxtNode::GetOutlineLevel() const
 
     if (pNum)
         aResult = pNum->GetRealLevel();
-    else 
+    else
     {
         SwFmtColl * pFmtColl = GetFmtColl();
 
@@ -3142,7 +3128,7 @@ void SwTxtNode::SetOutlineLevel(BYTE nLe
     else
     {
         SwFmtColl * pFmtColl = GetFmtColl();
-        
+
         if (pFmtColl)
             ((SwTxtFmtColl *) pFmtColl)->SetOutlineLevel(nLevel);
     }
Index: sw/source/core/undo/unins.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/undo/unins.cxx,v
retrieving revision 1.17
retrieving revision 1.17.36.1
diff -u -p -u -p -r1.17 -r1.17.36.1
--- sw/source/core/undo/unins.cxx	25 Jan 2005 14:42:30 -0000	1.17
+++ sw/source/core/undo/unins.cxx	11 Feb 2005 14:22:39 -0000	1.17.36.1
@@ -234,7 +234,7 @@ SwUndoInsert::SwUndoInsert( const SwNode
 
 // #111827#
 SwUndoInsert::SwUndoInsert( const SwNodeIndex& rNd )
-	: SwUndo(UNDO_TYPING), nNode( rNd.GetIndex() ), nCntnt(0), nLen(1),
+	: SwUndo(UNDO_SPLITNODE), nNode( rNd.GetIndex() ), nCntnt(0), nLen(1),
 		bIsWordDelim( FALSE ), bIsAppend( TRUE ), pPos( 0 ), pTxt( 0 ),
 		pRedlData( 0 )
 {
Index: sw/source/core/undo/unnum.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/undo/unnum.cxx,v
retrieving revision 1.6
retrieving revision 1.6.284.1
diff -u -p -u -p -r1.6 -r1.6.284.1
--- sw/source/core/undo/unnum.cxx	8 Sep 2004 15:00:34 -0000	1.6
+++ sw/source/core/undo/unnum.cxx	25 Feb 2005 12:16:06 -0000	1.6.284.1
@@ -197,7 +197,9 @@ void SwUndoInsNum::Redo( SwUndoIter& rUn
 			rDoc.ReplaceNumRule( *rUndoIter.pAktPam->GetPoint(),
 								sReplaceRule, aNumRule.GetName() );
 		else
-			rDoc.SetNumRule( *rUndoIter.pAktPam, aNumRule, FALSE );
+            // --> OD 2005-02-25 #i42921# - adapt to changed signature
+            rDoc.SetNumRule( *rUndoIter.pAktPam, aNumRule );
+            // <--
 	}
 }
 
@@ -212,7 +214,9 @@ void SwUndoInsNum::Repeat( SwUndoIter& r
 	if( nSttNode )
 	{
 		if( !sReplaceRule.Len() )
-			rUndoIter.GetDoc().SetNumRule( *rUndoIter.pAktPam, aNumRule, FALSE );
+            // --> OD 2005-02-25 #i42921# - adapt to changed signature
+            rUndoIter.GetDoc().SetNumRule( *rUndoIter.pAktPam, aNumRule );
+            // <--
 	}
 	else
 		rUndoIter.GetDoc().ChgNumRuleFmts( aNumRule );
@@ -372,7 +376,7 @@ void SwUndoMoveNum::Repeat( SwUndoIter& 
 
 
 SwUndoNumUpDown::SwUndoNumUpDown( const SwPaM& rPam, short nOff )
-	: SwUndo( nOff > 0 ? UNDO_NUMUP : UNDO_NUMDOWN ), SwUndRng( rPam ), 
+	: SwUndo( nOff > 0 ? UNDO_NUMUP : UNDO_NUMDOWN ), SwUndRng( rPam ),
       nOffset( nOff )
 {
 	// nOffset: Down 	=>  1
@@ -402,7 +406,7 @@ void SwUndoNumUpDown::Repeat( SwUndoIter
 /*  */
 
 // #115901#
-SwUndoNumOrNoNum::SwUndoNumOrNoNum( const SwNodeIndex& rIdx, 
+SwUndoNumOrNoNum::SwUndoNumOrNoNum( const SwNodeIndex& rIdx,
                                     const SwNodeNum & rOldNum,
                                     const SwNodeNum & rNewNum)
 	: SwUndo( UNDO_NUMORNONUM ), nIdx( rIdx.GetIndex() ), mNewNum(rNewNum),
Index: sw/source/core/unocore/unofield.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/unocore/unofield.cxx,v
retrieving revision 1.86
retrieving revision 1.86.150.1
diff -u -p -u -p -r1.86 -r1.86.150.1
--- sw/source/core/unocore/unofield.cxx	27 Nov 2004 09:01:50 -0000	1.86
+++ sw/source/core/unocore/unofield.cxx	16 Feb 2005 16:22:46 -0000	1.86.150.1
@@ -750,8 +750,7 @@ void SwXFieldMaster::setPropertyValue( c
 		if( bSetValue )
 		{
             // nothing special to be done here for the properties
-            // UNO_NAME_DATA_BASE_NAME, UNO_NAME_DATA_BASE_URL and
-            // UNO_NAME_DATA_BASE_RESOURCE.
+            // UNO_NAME_DATA_BASE_NAME and UNO_NAME_DATA_BASE_URL.
             // We just call PutValue (empty string is allowed). 
             // Thus the last property set will be used as Data Source.
 
@@ -855,10 +854,8 @@ void SwXFieldMaster::setPropertyValue( c
                 rValue >>= nParam2;
             if(rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_URL)))
                 ::GetString( rValue, sParam5 );
-            if(rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_RESOURCE)))
-                ::GetString( rValue, sParam6 );
 
-            if((sParam1.Len() || sParam5.Len() || sParam6.Len()) 
+            if((sParam1.Len() || sParam5.Len()) 
                     && sParam2.Len() && sParam3.Len())
                 GetFldType();
 			break;
@@ -908,10 +905,7 @@ SwFieldType* SwXFieldMaster::GetFldType(
             aAcc[ svx::daDataSource ]       <<= OUString(sParam1); // DataBaseName
         else if( sParam5.Len() > 0 )
             aAcc[ svx::daDatabaseLocation]  <<= OUString(sParam5); // DataBaseURL
-        String aDataSrc( aAcc.getDataSource() );
-        if (aDataSrc.Len() == 0)
-            aDataSrc = sParam6; // DataBaseResource
-        aData.sDataSource = aDataSrc;
+        aData.sDataSource = aAcc.getDataSource();
 
         aData.sCommand = sParam2;
         aData.nCommandType = nParam2;
@@ -997,8 +991,7 @@ uno::Any SwXFieldMaster::getPropertyValu
 				pType->QueryValue( aRet, nMId );
 
                 if( rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_NAME)) ||
-                    rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_URL))  ||
-                    rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_RESOURCE)))
+                    rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_URL)))
                 {
                     OUString aDataSource;
                     aRet >>= aDataSource;
@@ -1006,22 +999,14 @@ uno::Any SwXFieldMaster::getPropertyValu
 
                     OUString *pStr = 0;     // only one of this properties will return
                                             // a non-empty string.
-                    Reference< XMultiServiceFactory > xMgr = ::comphelper::getProcessServiceFactory();
-                    Reference< XInterface > xInstance = xMgr->createInstance( C2U( "com.sun.star.sdb.DatabaseContext" ) );
-                    Reference< XNameAccess > xDBContext( xInstance, UNO_QUERY ) ;
-                    if ( xDBContext->hasByName( aDataSource ) &&
-                         rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_NAME)) )
-                        pStr = &aDataSource;            // DataBaseName
-                    else
-                    {
-                        INetURLObject aObj;
-                        aObj.SetURL( aDataSource );
-                        BOOL bIsURL = aObj.GetProtocol() != INET_PROT_NOT_VALID;
-                        if (bIsURL && rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_URL)))
-                            pStr = &aDataSource;        // DataBaseURL
-                        else if (!bIsURL && rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_RESOURCE)))
-                            pStr = &aDataSource;        // DataBaseResource
-                    }
+                    INetURLObject aObj;
+                    aObj.SetURL( aDataSource );
+                    BOOL bIsURL = aObj.GetProtocol() != INET_PROT_NOT_VALID;
+                    if (bIsURL && rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_URL)))
+                        pStr = &aDataSource;        // DataBaseURL
+                    else if (!bIsURL && rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_NAME)))
+                        pStr = &aDataSource;        // DataBaseName
+
                     if (pStr)
                         aRet <<= *pStr;
                 }            
@@ -1060,27 +1045,17 @@ uno::Any SwXFieldMaster::getPropertyValu
 				break;
 			case RES_DBFLD:
                 if(rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_NAME)) ||
-                   rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_URL))  ||
-                   rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_RESOURCE)))
+                   rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_URL)))
                 {
                     pStr = 0;   // only one of this properties will return
                                 // a non-empty string.
-                    Reference< XMultiServiceFactory > xMgr = ::comphelper::getProcessServiceFactory();
-                    Reference< XInterface > xInstance = xMgr->createInstance( C2U( "com.sun.star.sdb.DatabaseContext" ) );
-                    Reference< XNameAccess > xDBContext( xInstance, UNO_QUERY ) ;
-                    if ( xDBContext->hasByName( sParam1 ) &&
-                         rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_NAME)))
+                    INetURLObject aObj;
+                    aObj.SetURL( sParam5 );  // SetSmartURL
+                    BOOL bIsURL = aObj.GetProtocol() != INET_PROT_NOT_VALID;
+                    if (bIsURL && rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_URL)))
+                        pStr = &sParam5;        // DataBaseURL
+                    else if ( rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_NAME)))
                         pStr = &sParam1;            // DataBaseName
-                    else
-                    {
-                        INetURLObject aObj;
-                        aObj.SetURL( sParam5 );  // SetSmartURL
-                        BOOL bIsURL = aObj.GetProtocol() != INET_PROT_NOT_VALID;
-                        if (bIsURL && rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_URL)))
-                            pStr = &sParam5;        // DataBaseURL
-                        else if (!bIsURL && rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_RESOURCE)))
-                            pStr = &sParam6;        // DataBaseResource
-                    }
                 }
 				else if(rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_TABLE_NAME)))
 					pStr = &sParam2;
@@ -2096,7 +2071,6 @@ void SwXTextField::setPropertyValue(cons
 		if( RES_DBFLD == nWhich &&
 			(rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_NAME)) ||
             rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_URL))||
-            rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_BASE_RESOURCE))||
 			rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_TABLE_NAME))||
 			rPropertyName.equalsAsciiL( SW_PROP_NAME(UNO_NAME_DATA_COLUMN_NAME))))
 		{
Index: sw/source/core/unocore/unomap.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/unocore/unomap.cxx,v
retrieving revision 1.171
retrieving revision 1.171.22.1
diff -u -p -u -p -r1.171 -r1.171.22.1
--- sw/source/core/unocore/unomap.cxx	28 Jan 2005 15:27:22 -0000	1.171
+++ sw/source/core/unocore/unomap.cxx	16 Feb 2005 16:22:46 -0000	1.171.22.1
@@ -2031,7 +2031,7 @@ const SfxItemPropertyMap* SwUnoPropertyM
 			{
 				static SfxItemPropertyMap aDBNextSetFieldPropMap	[] =
 				{
-                    // Note: DATA_BASE_NAME, DATA_BASE_URL and DATA_BASE_RESOURCE
+                    // Note: DATA_BASE_NAME and DATA_BASE_URL
                     // are mapped to the same nMId, because internally  we only use
                     // them as DataSource and it does not matter which one it is.
 
@@ -2039,7 +2039,6 @@ const SfxItemPropertyMap* SwUnoPropertyM
                     {SW_PROP_NMID(UNO_NAME_DATA_TABLE_NAME) , FIELD_PROP_PAR2, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
 					{SW_PROP_NMID(UNO_NAME_CONDITION)	,	  FIELD_PROP_PAR3, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_DATA_BASE_URL ) ,  FIELD_PROP_PAR1, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
-                    {SW_PROP_NMID(UNO_NAME_DATA_BASE_RESOURCE ) , FIELD_PROP_PAR1, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_DATA_COMMAND_TYPE), FIELD_PROP_SHORT1, CPPU_E2T(CPPUTYPE_INT32),   PROPERTY_NONE, 0},
                     {0,0,0,0}
 				};
@@ -2050,7 +2049,7 @@ const SfxItemPropertyMap* SwUnoPropertyM
 			{
 				static SfxItemPropertyMap aDBNumSetFieldPropMap	[] =
 				{
-                    // Note: DATA_BASE_NAME, DATA_BASE_URL and DATA_BASE_RESOURCE
+                    // Note: DATA_BASE_NAME and DATA_BASE_URL
                     // are mapped to the same nMId, because internally  we only use
                     // them as DataSource and it does not matter which one it is.
 
@@ -2058,7 +2057,6 @@ const SfxItemPropertyMap* SwUnoPropertyM
                     {SW_PROP_NMID(UNO_NAME_DATA_TABLE_NAME  ), FIELD_PROP_PAR2, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_CONDITION),         FIELD_PROP_PAR3, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_DATA_BASE_URL ) ,   FIELD_PROP_PAR1, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
-                    {SW_PROP_NMID(UNO_NAME_DATA_BASE_RESOURCE ) , FIELD_PROP_PAR1, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_DATA_COMMAND_TYPE), FIELD_PROP_SHORT1, CPPU_E2T(CPPUTYPE_INT32),   PROPERTY_NONE, 0},
 					{SW_PROP_NMID(UNO_NAME_SET_NUMBER		), FIELD_PROP_FORMAT, CPPU_E2T(CPPUTYPE_INT32), PROPERTY_NONE,	0},
                     {0,0,0,0}
@@ -2070,14 +2068,13 @@ const SfxItemPropertyMap* SwUnoPropertyM
 			{
 				static SfxItemPropertyMap aDBSetNumFieldPropMap	[] =
 				{
-                    // Note: DATA_BASE_NAME, DATA_BASE_URL and DATA_BASE_RESOURCE
+                    // Note: DATA_BASE_NAME and DATA_BASE_URL
                     // are mapped to the same nMId, because internally  we only use
                     // them as DataSource and it does not matter which one it is.
 
                     {SW_PROP_NMID(UNO_NAME_DATA_BASE_NAME ) , FIELD_PROP_PAR1, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_DATA_TABLE_NAME) , FIELD_PROP_PAR2, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_DATA_BASE_URL ) ,  FIELD_PROP_PAR1, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
-                    {SW_PROP_NMID(UNO_NAME_DATA_BASE_RESOURCE ) , FIELD_PROP_PAR1, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_DATA_COMMAND_TYPE), FIELD_PROP_SHORT1, CPPU_E2T(CPPUTYPE_INT32),   PROPERTY_NONE, 0},
 					{SW_PROP_NMID(UNO_NAME_NUMBERING_TYPE), 	  FIELD_PROP_USHORT1, CPPU_E2T(CPPUTYPE_INT16), PROPERTY_NONE,	0},
 					{SW_PROP_NMID(UNO_NAME_SET_NUMBER		), FIELD_PROP_FORMAT, CPPU_E2T(CPPUTYPE_INT32), PROPERTY_NONE,	0},
@@ -2105,14 +2102,13 @@ const SfxItemPropertyMap* SwUnoPropertyM
 			{
 				static SfxItemPropertyMap aDBNameFieldPropMap		[] =
 				{
-                    // Note: DATA_BASE_NAME, DATA_BASE_URL and DATA_BASE_RESOURCE
+                    // Note: DATA_BASE_NAME and DATA_BASE_URL
                     // are mapped to the same nMId, because internally  we only use
                     // them as DataSource and it does not matter which one it is.
 
                     {SW_PROP_NMID(UNO_NAME_DATA_BASE_NAME ) , FIELD_PROP_PAR1, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_DATA_TABLE_NAME) , FIELD_PROP_PAR2, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_DATA_BASE_URL ) ,  FIELD_PROP_PAR1, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
-                    {SW_PROP_NMID(UNO_NAME_DATA_BASE_RESOURCE ) , FIELD_PROP_PAR1, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_DATA_COMMAND_TYPE), FIELD_PROP_SHORT1, CPPU_E2T(CPPUTYPE_INT32),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_IS_VISIBLE),       FIELD_PROP_BOOL2,   CPPU_E2T(CPPUTYPE_BOOLEAN),    PROPERTY_NONE, 0},
                     {0,0,0,0}
@@ -2278,7 +2274,7 @@ const SfxItemPropertyMap* SwUnoPropertyM
 			{
 				static SfxItemPropertyMap aDBFieldTypePropMap			[] =
 				{
-                    // Note: DATA_BASE_NAME, DATA_BASE_URL and DATA_BASE_RESOURCE
+                    // Note: DATA_BASE_NAME and DATA_BASE_URL
                     // are mapped to the same nMId, because internally  we only use
                     // them as DataSource and it does not matter which one it is.
 
@@ -2287,7 +2283,6 @@ const SfxItemPropertyMap* SwUnoPropertyM
                     {SW_PROP_NMID(UNO_NAME_DATA_COLUMN_NAME ), FIELD_PROP_PAR3, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_INSTANCE_NAME),     FIELD_PROP_PAR4, CPPU_E2T(CPPUTYPE_OUSTRING), PropertyAttribute::READONLY, 0},
                     {SW_PROP_NMID(UNO_NAME_DATA_BASE_URL ) ,   FIELD_PROP_PAR1, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
-                    {SW_PROP_NMID(UNO_NAME_DATA_BASE_RESOURCE ) , FIELD_PROP_PAR1, CPPU_E2T(CPPUTYPE_OUSTRING),   PROPERTY_NONE, 0},
                     {SW_PROP_NMID(UNO_NAME_DATA_COMMAND_TYPE), FIELD_PROP_SHORT1, CPPU_E2T(CPPUTYPE_INT32),   PROPERTY_NONE, 0},
 					{SW_PROP_NMID(UNO_NAME_DEPENDENT_TEXT_FIELDS),	FIELD_PROP_PROP_SEQ,	CPPU_E2T(CPPUTYPE_SEQDEPTXTFLD), PropertyAttribute::READONLY, 0},
 					{0,0,0,0}
Index: sw/source/filter/ww8/ww8par3.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/ww8/ww8par3.cxx,v
retrieving revision 1.64
retrieving revision 1.64.150.1
diff -u -p -u -p -r1.64 -r1.64.150.1
--- sw/source/filter/ww8/ww8par3.cxx	26 Nov 2004 13:29:23 -0000	1.64
+++ sw/source/filter/ww8/ww8par3.cxx	14 Feb 2005 17:11:02 -0000	1.64.150.1
@@ -638,10 +638,28 @@ bool WW8ListManager::ReadLVL(SwNumFmt& r
                         {
                             USHORT nDesired = aLVL.nDxaLeft + aLVL.nDxaLeft1;
 
-                            aLVL.nDxaLeft = (0 < nTabPos) ? (sal_uInt16)nTabPos
-                                : (sal_uInt16)(-nTabPos);
+                            bool bDoAdjust = false;
+                            if (nDesired < aLVL.nDxaLeft)
+                            {
+                                if (nDesired < nTabPos && 
+                                    nTabPos < aLVL.nDxaLeft)
+                                    bDoAdjust = true;
+                            }
+                            else
+                            {
+                                if (aLVL.nDxaLeft < nTabPos && 
+                                    nTabPos < nDesired)
+                                    bDoAdjust = true;
+                            }
+
+                            if (bDoAdjust)
+                            {
+                                aLVL.nDxaLeft = 
+                                    (0 < nTabPos) ? (sal_uInt16)nTabPos
+                                    : (sal_uInt16)(-nTabPos);
 
-                            aLVL.nDxaLeft1 = nDesired - aLVL.nDxaLeft;
+                                aLVL.nDxaLeft1 = nDesired - aLVL.nDxaLeft;
+                            }
 
                             bDone=true;
                         }
Index: sw/source/filter/xml/xmlfmt.cxx
===================================================================
RCS file: /cvs/sw/sw/source/filter/xml/xmlfmt.cxx,v
retrieving revision 1.27
retrieving revision 1.27.150.1
diff -u -p -u -p -r1.27 -r1.27.150.1
--- sw/source/filter/xml/xmlfmt.cxx	26 Nov 2004 13:29:59 -0000	1.27
+++ sw/source/filter/xml/xmlfmt.cxx	11 Feb 2005 20:30:54 -0000	1.27.150.1
@@ -857,7 +857,7 @@ protected:
 		const Reference< xml::sax::XAttributeList > & xAttrList );
 	// HACK
 	virtual UniReference < SvXMLImportPropertyMapper > GetImportPropertyMapper(
-						sal_uInt16 nFamily ) const;
+        sal_uInt16 nFamily ) const;
 
 	virtual ::com::sun::star::uno::Reference <
 					::com::sun::star::container::XNameContainer >
@@ -934,6 +934,8 @@ SvXMLStyleContext *SwXMLStylesContext_Im
 	switch( nFamily )
 	{
 	case XML_STYLE_FAMILY_TEXT_PARAGRAPH:
+    case XML_STYLE_FAMILY_TABLE_TABLE:
+	case XML_STYLE_FAMILY_TABLE_ROW:
 		pStyle = new XMLTextStyleContext( GetImport(), nPrefix, rLocalName,
 										  xAttrList, *this, nFamily, 
 										  sal_True );
@@ -1005,15 +1007,17 @@ sal_Bool SwXMLStylesContext_Impl::Insert
 }
 
 UniReference < SvXMLImportPropertyMapper > SwXMLStylesContext_Impl::GetImportPropertyMapper(
-						sal_uInt16 nFamily ) const
+        sal_uInt16 nFamily ) const
 {
 	UniReference < SvXMLImportPropertyMapper > xMapper;
-//	if( XML_STYLE_FAMILY_SD_GRAPHICS_ID == nFamily )
-//		xMapper = ((SvXMLImport *)&GetImport())->GetTextImport()
-//					 ->GetFrameImportPropertySetMapper();
-//	else
-		xMapper = SvXMLStylesContext::GetImportPropertyMapper( nFamily );
-
+    if( nFamily == XML_STYLE_FAMILY_TABLE_TABLE )
+        xMapper = XMLTextImportHelper::CreateTableDefaultExtPropMapper( 
+            const_cast<SwXMLStylesContext_Impl*>( this )->GetImport() );
+    else if( nFamily == XML_STYLE_FAMILY_TABLE_ROW )
+        xMapper = XMLTextImportHelper::CreateTableRowDefaultExtPropMapper(
+            const_cast<SwXMLStylesContext_Impl*>( this )->GetImport() );
+    else
+        xMapper = SvXMLStylesContext::GetImportPropertyMapper( nFamily );
 	return xMapper;
 }
 
Index: sw/source/ui/app/docstyle.cxx
===================================================================
RCS file: /cvs/sw/sw/source/ui/app/docstyle.cxx,v
retrieving revision 1.17
retrieving revision 1.16.98.2
diff -u -p -u -p -r1.17 -r1.16.98.2
--- sw/source/ui/app/docstyle.cxx	16 Feb 2005 17:02:33 -0000	1.17
+++ sw/source/ui/app/docstyle.cxx	24 Feb 2005 09:47:56 -0000	1.16.98.2
@@ -2845,11 +2845,14 @@ void  SwStyleSheetIterator::Notify( SfxB
 		SFX_STYLESHEET_ERASED == ((SfxStyleSheetHint&) rHint).GetHint() )
 	{
 		SfxStyleSheetBase* pStyle = ((SfxStyleSheetHint&)rHint).GetStyleSheet();
-
-		USHORT nTmpPos = lcl_FindName( aLst, pStyle->GetFamily(),
-										pStyle->GetName() );
-		if( nTmpPos < aLst.Count() )
-			aLst.DeleteAndDestroy( nTmpPos );
+        
+        if (pStyle)
+        {
+            USHORT nTmpPos = lcl_FindName( aLst, pStyle->GetFamily(),
+                                           pStyle->GetName() );
+            if( nTmpPos < aLst.Count() )
+                aLst.DeleteAndDestroy( nTmpPos );
+        }
 	}
 }
 
Index: sw/source/ui/docvw/edtwin.cxx
===================================================================
RCS file: /cvs/sw/sw/source/ui/docvw/edtwin.cxx,v
retrieving revision 1.107
retrieving revision 1.107.34.1
diff -u -p -u -p -r1.107 -r1.107.34.1
--- sw/source/ui/docvw/edtwin.cxx	27 Jan 2005 11:13:03 -0000	1.107
+++ sw/source/ui/docvw/edtwin.cxx	21 Feb 2005 13:04:17 -0000	1.107.34.1
@@ -2511,12 +2511,16 @@ void SwEditWin::MouseButtonDown(const Mo
     else if (bTmp &&
              rSh.IsNumLabel(aDocPos))
     {
-        rView.SetNumRuleNodeFromDoc(rSh.GetNumRuleNodeAtPos(aDocPos));
+        SwTxtNode* pNodeAtPos = rSh.GetNumRuleNodeAtPos( aDocPos );
+        rView.SetNumRuleNodeFromDoc( pNodeAtPos );
 		rView.InvalidateRulerPos();
 		SfxBindings& rBind = rView.GetViewFrame()->GetBindings();
 		rBind.Update();
 
-        if (RulerMarginDrag( rView , rMEvt))
+        // --> OD 2005-02-21 #i42921#
+        if ( RulerMarginDrag( rView ,rMEvt,
+                        rSh.IsVerticalModeAtNdAndPos( *pNodeAtPos, aDocPos ) ) )
+        // <--
 		{
 			rView.SetNumRuleNodeFromDoc( NULL );
 			rView.InvalidateRulerPos();
@@ -2525,7 +2529,7 @@ void SwEditWin::MouseButtonDown(const Mo
 		}
 		else
 		{
-			return;
+            return;
 		}
     }
 
@@ -3329,7 +3333,14 @@ void SwEditWin::MouseMove(const MouseEve
         // #i23726#
         else if (rSh.IsNumLabel(aDocPt, RULER_MOUSE_MARGINWIDTH))
         {
-            SetPointer( POINTER_HSIZEBAR );
+            // --> OD 2005-02-21 #i42921# - consider vertical mode
+            SwTxtNode* pNodeAtPos = rSh.GetNumRuleNodeAtPos( aDocPt );
+            const USHORT nPointer =
+                    rSh.IsVerticalModeAtNdAndPos( *pNodeAtPos, aDocPt )
+                    ? POINTER_VSIZEBAR
+                    : POINTER_HSIZEBAR;
+            SetPointer( nPointer );
+            // <--
 
             return;
         }
Index: sw/source/ui/docvw/edtwin3.cxx
===================================================================
RCS file: /cvs/sw/sw/source/ui/docvw/edtwin3.cxx,v
retrieving revision 1.8
retrieving revision 1.8.302.1
diff -u -p -u -p -r1.8 -r1.8.302.1
--- sw/source/ui/docvw/edtwin3.cxx	12 Aug 2004 13:01:31 -0000	1.8
+++ sw/source/ui/docvw/edtwin3.cxx	21 Feb 2005 13:04:18 -0000	1.8.302.1
@@ -181,11 +181,16 @@ BOOL SwEditWin::RulerColumnDrag( SwView&
 }
 
 // #i23726#
-BOOL SwEditWin::RulerMarginDrag( SwView& rView , const MouseEvent& rMEvt)
+// --> OD 2005-02-18 #i42921# - add 3rd parameter <bVerticalMode> in order
+// to consider vertical layout
+BOOL SwEditWin::RulerMarginDrag( SwView& rView,
+                                 const MouseEvent& rMEvt,
+                                 const bool bVerticalMode )
 {
-    SvxRuler& rRuler = rView.GetHLineal();
+    SvxRuler& rRuler = bVerticalMode ?  rView.GetVLineal() : rView.GetHLineal();
     return !rRuler.StartDocDrag( rMEvt, RULER_TYPE_INDENT);
 }
+// <--
 
 Dialog* GetSearchDialog()
 {
Index: sw/source/ui/inc/edtwin.hxx
===================================================================
RCS file: /cvs/sw/sw/source/ui/inc/edtwin.hxx,v
retrieving revision 1.18
retrieving revision 1.18.98.1
diff -u -p -u -p -r1.18 -r1.18.98.1
--- sw/source/ui/inc/edtwin.hxx	5 Jan 2005 16:10:33 -0000	1.18
+++ sw/source/ui/inc/edtwin.hxx	21 Feb 2005 13:03:08 -0000	1.18.98.1
@@ -313,7 +313,11 @@ public:
     //#i3370# remove quick help to prevent saving of autocorrection suggestions
     void StopQuickHelp();
 
-    BOOL SwEditWin::RulerMarginDrag( SwView& rView , const MouseEvent& rMEvt);
+    // --> OD 2005-02-18 #i42921# - add parameter <bVerticalMode>
+    BOOL SwEditWin::RulerMarginDrag( SwView& rView,
+                                     const MouseEvent& rMEvt,
+                                     const bool bVerticalMode );
+    // <--
 
 	SwEditWin(Window *pParent, SwView &);
 	virtual ~SwEditWin();
Index: sw/source/ui/uiview/viewtab.cxx
===================================================================
RCS file: /cvs/sw/sw/source/ui/uiview/viewtab.cxx,v
retrieving revision 1.27
retrieving revision 1.27.398.1
diff -u -p -u -p -r1.27 -r1.27.398.1
--- sw/source/ui/uiview/viewtab.cxx	17 Jun 2004 16:07:28 -0000	1.27
+++ sw/source/ui/uiview/viewtab.cxx	21 Feb 2005 13:06:13 -0000	1.27.398.1
@@ -142,7 +142,7 @@
 #include "section.hxx"
 
 // -> #i23726#
-#include "ndtxt.hxx" 
+#include "ndtxt.hxx"
 #include "pam.hxx"
 // <- #i23726#
 
@@ -689,13 +689,18 @@ void SwView::ExecTabWin( SfxRequest& rRe
         aParaMargin.SetTxtLeft(aParaMargin.GetTxtLeft() - nLeftBorderDistance );
 
 		aParaMargin.SetWhich( RES_LR_SPACE );
-		SwTxtFmtColl* pColl = rSh.GetCurTxtFmtColl();        
+		SwTxtFmtColl* pColl = rSh.GetCurTxtFmtColl();
 
         // #i23726#
         if (pNumRuleNodeFromDoc)
         {
             SwPosition aPos(*pNumRuleNodeFromDoc);
             rSh.NumIndent(aParaMargin.GetTxtLeft(), aPos);
+            // --> OD 2005-02-18 #i42921# - invalidate state of indent in order
+            // to get a ruler update.
+            aParaMargin.SetWhich( nSlot );
+            GetViewFrame()->GetBindings().SetState( aParaMargin );
+            // <--
         }
 		else if(	pColl && pColl->IsAutoUpdateFmt() )
 		{
@@ -1242,7 +1247,7 @@ void SwView::StateTabWin(SfxItemSet& rSe
                     SvxLRSpaceItem aDistLR(SID_RULER_BORDER_DISTANCE);
                     aDistLR.SetLeft((USHORT)rBox.GetDistance(BOX_LINE_LEFT ));
                     aDistLR.SetRight((USHORT)rBox.GetDistance(BOX_LINE_RIGHT));
-                    
+
                     //add the border distance of the paragraph
                     SfxItemSet aCoreSet1( GetPool(),
                                             RES_BOX, RES_BOX,
@@ -1257,23 +1262,23 @@ void SwView::StateTabWin(SfxItemSet& rSe
                 }
                 else if ( !rSh.IsDirectlyInSection() )
                 {
-                    //get the page/header/footer border distance 
+                    //get the page/header/footer border distance
                     const SwFrmFmt& rMaster = rDesc.GetMaster();
                     const SvxBoxItem& rBox = (const SvxBoxItem&)rMaster.GetAttrSet().Get(RES_BOX);
                     SvxLRSpaceItem aDistLR(SID_RULER_BORDER_DISTANCE);
                     aDistLR.SetLeft((USHORT)rBox.GetDistance(BOX_LINE_LEFT ));
                     aDistLR.SetRight((USHORT)rBox.GetDistance(BOX_LINE_RIGHT));
-                    
+
                     const SvxBoxItem* pBox = 0;
                     if(nFrmType & FRMTYPE_HEADER)
-                    {        
+                    {
                         rMaster.GetHeader();
                         const SwFmtHeader& rHeaderFmt = rMaster.GetHeader();
                         SwFrmFmt *pHeaderFmt = (SwFrmFmt*)rHeaderFmt.GetHeaderFmt();
                         pBox = & (const SvxBoxItem&)pHeaderFmt->GetBox();
                     }
                     else if(nFrmType & FRMTYPE_FOOTER )
-                    {        
+                    {
                         const SwFmtFooter& rFooterFmt = rMaster.GetFooter();
                         SwFrmFmt *pFooterFmt = (SwFrmFmt*)rFooterFmt.GetFooterFmt();
                         pBox = & (const SvxBoxItem&)pFooterFmt->GetBox();
@@ -1282,8 +1287,8 @@ void SwView::StateTabWin(SfxItemSet& rSe
                     {
                         aDistLR.SetLeft((USHORT)pBox->GetDistance(BOX_LINE_LEFT ));
                         aDistLR.SetRight((USHORT)pBox->GetDistance(BOX_LINE_RIGHT));
-                    }            
-                    
+                    }
+
                     //add the border distance of the paragraph
                     SfxItemSet aCoreSet( GetPool(),
                                             RES_BOX, RES_BOX,
@@ -1295,7 +1300,7 @@ void SwView::StateTabWin(SfxItemSet& rSe
                     rSet.Put(aDistLR);
                     nLeftBorderDistance = aDistLR.GetLeft();
                     nRightBorderDistance = aDistLR.GetRight();
-                }        
+                }
             }
         }
         break;
@@ -1318,7 +1323,7 @@ void SwView::StateTabWin(SfxItemSet& rSe
 		{
             BOOL bFrameRTL;
             BOOL bFrameHasVerticalColumns =  rSh.IsFrmVertical(FALSE, bFrameRTL) && bFrmSelection;
-            BOOL bHasTable = ( IsTabColFromDoc() || 
+            BOOL bHasTable = ( IsTabColFromDoc() ||
                     ( rSh.GetTableFmt() && !bFrmSelection &&
                     !(nFrmType & FRMTYPE_COLSECT ) ) );
 
@@ -1379,7 +1384,7 @@ void SwView::StateTabWin(SfxItemSet& rSe
                         nEnd  = (USHORT)aTabCols.GetRight();
                         nEnd  -=  (USHORT)rEntry.nPos;
                         SvxColumnDescription aColDesc( nStart, nEnd,
-                                    (USHORT(aTabCols.GetRight() - rEntry.nMax)), 
+                                    (USHORT(aTabCols.GetRight() - rEntry.nMax)),
                                     (USHORT(aTabCols.GetRight() - rEntry.nMin)),
                                                     !aTabCols.IsHidden(i - 1) );
                         aColItem.Append(aColDesc);
@@ -1396,12 +1401,12 @@ void SwView::StateTabWin(SfxItemSet& rSe
                         const SwTabColsEntry& rEntry = aTabCols.GetEntry( i );
                         nEnd  = rEntry.nPos - aTabCols.GetLeft();
                         SvxColumnDescription aColDesc( nStart, nEnd,
-                                rEntry.nMin - aTabCols.GetLeft(), rEntry.nMax - aTabCols.GetLeft(), 
+                                rEntry.nMin - aTabCols.GetLeft(), rEntry.nMax - aTabCols.GetLeft(),
                                                     !aTabCols.IsHidden(i) );
                         aColItem.Append(aColDesc);
                         nStart = nEnd;
                     }
-                    SvxColumnDescription aColDesc(nStart, aTabCols.GetRight() - aTabCols.GetLeft(), 
+                    SvxColumnDescription aColDesc(nStart, aTabCols.GetRight() - aTabCols.GetLeft(),
                                 0, 0,
                                     TRUE);
                     aColItem.Append(aColDesc);
@@ -1472,7 +1477,7 @@ void SwView::StateTabWin(SfxItemSet& rSe
 						const SwFmtCol& rCol = pFmt->GetCol();
 						if(rSh.IsInRightToLeftText())
 							nNum = rCol.GetColumns().Count() - nNum;
-						else 
+						else
 							nNum--;
 						SvxColumnItem aColItem(nNum);
 						const SwRect &rSizeRect = rSh.GetAnyCurRect(RECT_FLY_PRT_EMBEDDED, pPt);
@@ -1541,9 +1546,9 @@ void SwView::StateTabWin(SfxItemSet& rSe
                 rSet.DisableItem(nWhich);
 			break;
 		}
-        case SID_RULER_ROWS : 
+        case SID_RULER_ROWS :
         case SID_RULER_ROWS_VERTICAL:
-        {    
+        {
             BOOL bFrameRTL;
             BOOL bFrameHasVerticalColumns =  rSh.IsFrmVertical(FALSE, bFrameRTL) && bFrmSelection;
 
@@ -1591,15 +1596,15 @@ void SwView::StateTabWin(SfxItemSet& rSe
                     if(bVerticalWriting)
 					{
                         nEnd  = USHORT(aTabCols.GetRight() - rEntry.nPos);
-                        SvxColumnDescription aColDesc( nStart, nEnd, 
-                            aTabCols.GetRight() - rEntry.nMax, aTabCols.GetRight() - rEntry.nMin, 
+                        SvxColumnDescription aColDesc( nStart, nEnd,
+                            aTabCols.GetRight() - rEntry.nMax, aTabCols.GetRight() - rEntry.nMin,
 													!aTabCols.IsHidden(i) );
 						aColItem.Append(aColDesc);
 					}
 					else
 					{
                         nEnd  = USHORT(rEntry.nPos - aTabCols.GetLeft());
-						SvxColumnDescription aColDesc( nStart, nEnd, 
+						SvxColumnDescription aColDesc( nStart, nEnd,
                                 USHORT(rEntry.nMin - aTabCols.GetLeft()), USHORT(rEntry.nMax - aTabCols.GetLeft()),
 													!aTabCols.IsHidden(i) );
 						aColItem.Append(aColDesc);
@@ -1614,12 +1619,12 @@ void SwView::StateTabWin(SfxItemSet& rSe
                 // due to a page break inside of a row
                 if(!aTabCols.IsLastRowAllowedToChange())
 					bPutContentProtection = sal_True;
-                        
-                SvxColumnDescription aColDesc( nStart, nEnd, 
-                    aTabCols.GetRight(), aTabCols.GetRight(), 
+
+                SvxColumnDescription aColDesc( nStart, nEnd,
+                    aTabCols.GetRight(), aTabCols.GetRight(),
                                             FALSE );
                 aColItem.Append(aColDesc);
-                            
+
                 rSet.Put(aColItem, nWhich);
             }
             else
@@ -1896,7 +1901,7 @@ void SwView::StateTabWin(SfxItemSet& rSe
 		nWhich = aIter.NextWhich();
 	}
     if(bPutContentProtection)
-    {        
+    {
         SvxProtectItem aProtect(SID_RULER_PROTECT);
         aProtect.SetCntntProtect(TRUE);
         rSet.Put(aProtect);
