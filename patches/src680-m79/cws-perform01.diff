Index: framework/inc/services.h
===================================================================
RCS file: /cvs/framework/framework/inc/services.h,v
retrieving revision 1.30
retrieving revision 1.30.38.1
diff -u -p -u -p -r1.30 -r1.30.38.1
--- framework/inc/services.h	26 Nov 2004 20:36:32 -0000	1.30
+++ framework/inc/services.h	26 Jan 2005 10:11:36 -0000	1.30.38.1
@@ -191,6 +191,7 @@ namespace framework{
 #define IMPLEMENTATIONNAME_HEADERMENUCONTROLLER                 DECLARE_ASCII("com.sun.star.comp.framework.HeaderMenuController"    )
 #define IMPLEMENTATIONNAME_FOOTERMENUCONTROLLER                 DECLARE_ASCII("com.sun.star.comp.framework.FooterMenuController"    )
 #define IMPLEMENTATIONNAME_CONTROLMENUCONTROLLER                DECLARE_ASCII("com.sun.star.comp.framework.ControlMenuController"   )
+#define IMPLEMENTATIONNAME_NEWMENUCONTROLLER                    DECLARE_ASCII("com.sun.star.comp.framework.NewMenuController"       )
 #define IMPLEMENTATIONNAME_UICOMMANDDESCRIPTION                 DECLARE_ASCII("com.sun.star.comp.framework.UICommandDescription"    )
 #define IMPLEMENTATIONNAME_UIELEMENTFACTORYMANAGER              DECLARE_ASCII("com.sun.star.comp.framework.UIElementFactoryManager" )
 #define IMPLEMENTATIONNAME_MODULEMANAGER                        DECLARE_ASCII("com.sun.star.comp.framework.ModuleManager"           )
Index: framework/inc/uielement/menubarmanager.hxx
===================================================================
RCS file: /cvs/framework/framework/inc/uielement/menubarmanager.hxx,v
retrieving revision 1.6
retrieving revision 1.6.40.1
diff -u -p -u -p -r1.6 -r1.6.40.1
--- framework/inc/uielement/menubarmanager.hxx	15 Nov 2004 17:15:39 -0000	1.6
+++ framework/inc/uielement/menubarmanager.hxx	26 Jan 2005 10:11:37 -0000	1.6.40.1
@@ -172,14 +172,6 @@ class MenuBarManager : public com::sun::
 {
     protected:
 		// #110897#
-		MenuBarManager(
-			const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory >& xServiceFactory,
-			com::sun::star::uno::Reference< com::sun::star::frame::XFrame >& rFrame,
-			BmkMenu*			pBmkMenu,
-			sal_Bool			bDelete,
-			sal_Bool			bDeleteChildren );
-
-		// #110897#
 		MenuBarManager( 
 			const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory >& xServiceFactory,
 			com::sun::star::uno::Reference< com::sun::star::frame::XFrame >& rFrame,
Index: framework/inc/uielement/newmenucontroller.hxx
===================================================================
RCS file: framework/inc/uielement/newmenucontroller.hxx
diff -N framework/inc/uielement/newmenucontroller.hxx
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ framework/inc/uielement/newmenucontroller.hxx	26 Jan 2005 10:11:37 -0000	1.1.2.1
@@ -0,0 +1,205 @@
+/*************************************************************************
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+#ifndef __FRAMEWORK_UIELEMENT_NEWMENUCONTROLLER_HXX_
+#define __FRAMEWORK_UIELEMENT_NEWMENUCONTROLLER_HXX_
+
+//_________________________________________________________________________________________________________________
+//	my own includes
+//_________________________________________________________________________________________________________________
+
+#ifndef __FRAMEWORK_HELPER_POPUPMENUCONTROLLERBASE_HXX_
+#include <helper/popupmenucontrollerbase.hxx>
+#endif
+#ifndef __FRAMEWORK_STDTYPES_H_
+#include <stdtypes.h>
+#endif
+
+//_________________________________________________________________________________________________________________
+//	interface includes
+//_________________________________________________________________________________________________________________
+
+#ifndef _COM_SUN_STAR_LANG_XSERVICEINFO_HPP_
+#include <com/sun/star/lang/XServiceInfo.hpp>
+#endif
+#ifndef _COM_SUN_STAR_LANG_XTYPEPROVIDER_HPP_
+#include <com/sun/star/lang/XTypeProvider.hpp>
+#endif
+#ifndef _COM_SUN_STAR_LANG_XINITIALIZATION_HPP_
+#include <com/sun/star/lang/XInitialization.hpp>
+#endif
+#ifndef _COM_SUN_STAR_LANG_XMULTISERVICEFACTORY_HPP_
+#include <com/sun/star/lang/XMultiServiceFactory.hpp>
+#endif
+#ifndef _COM_SUN_STAR_FRAME_XFRAME_HPP_
+#include <com/sun/star/frame/XFrame.hpp>
+#endif
+#ifndef _COM_SUN_STAR_FRAME_XDISPATCHPROVIDER_HPP_
+#include <com/sun/star/frame/XDispatchProvider.hpp>
+#endif
+#ifndef _COM_SUN_STAR_FRAME_XDISPATCH_HPP_
+#include <com/sun/star/frame/XDispatch.hpp>
+#endif
+#ifndef _COM_SUN_STAR_FRAME_XSTATUSLISTENER_HPP_
+#include <com/sun/star/frame/XStatusListener.hpp>
+#endif
+#ifndef _DRAFTS_COM_SUN_STAR_FRAME_XPOPUPMENUCONTROLLER_HPP_
+#include <drafts/com/sun/star/frame/XPopupMenuController.hpp>
+#endif
+#ifndef _COM_SUN_STAR_BEANS_XPROPERTYSET_HPP_
+#include <com/sun/star/beans/XPropertySet.hpp>
+#endif
+#ifndef _COM_SUN_STAR_UTIL_XURLTRANSFORMER_HPP_
+#include <com/sun/star/util/XURLTransformer.hpp>
+#endif
+#ifndef _DRAFTS_COM_SUN_STAR_UI_XACCELERATORCONFIGURATION_HPP_
+#include <drafts/com/sun/star/ui/XAcceleratorConfiguration.hpp>
+#endif
+
+//_________________________________________________________________________________________________________________
+//	includes of other projects
+//_________________________________________________________________________________________________________________
+
+#ifndef _TOOLKIT_AWT_VCLXMENU_HXX_
+#include <toolkit/awt/vclxmenu.hxx>
+#endif
+#ifndef _CPPUHELPER_WEAK_HXX_
+#include <cppuhelper/weak.hxx>
+#endif
+#ifndef _RTL_USTRING_HXX_
+#include <rtl/ustring.hxx>
+#endif
+#ifndef _SV_ACCEL_HXX
+#include <vcl/accel.hxx>
+#endif
+#ifndef _VCL_MENU_HXX_
+#include <vcl/menu.hxx>
+#endif
+#include <hash_map>
+
+namespace framework
+{
+    struct NewDocument
+    {
+        ::com::sun::star::util::URL                                                 aTargetURL;
+        ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue >   aArgSeq;
+        ::com::sun::star::uno::Reference< ::com::sun::star::frame::XDispatch >      xDispatch;
+    };
+
+    class NewMenuController :  public PopupMenuControllerBase
+    {
+		public:
+		    NewMenuController( const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory >& xServiceManager );
+		    virtual ~NewMenuController();
+		    
+            // XServiceInfo
+		    DECLARE_XSERVICEINFO
+
+            // XPopupMenuController
+            virtual void SAL_CALL updatePopupMenu() throw (::com::sun::star::uno::RuntimeException);
+            virtual void SAL_CALL setPopupMenu( const ::com::sun::star::uno::Reference< ::com::sun::star::awt::XPopupMenu >& PopupMenu ) throw (::com::sun::star::uno::RuntimeException);
+		    
+            // XInitialization
+            virtual void SAL_CALL initialize( const ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Any >& aArguments ) throw (::com::sun::star::uno::Exception, ::com::sun::star::uno::RuntimeException);
+
+		    // XStatusListener
+		    virtual void SAL_CALL statusChanged( const ::com::sun::star::frame::FeatureStateEvent& Event ) throw ( ::com::sun::star::uno::RuntimeException );
+
+            // XMenuListener
+            virtual void SAL_CALL highlight( const ::com::sun::star::awt::MenuEvent& rEvent ) throw (::com::sun::star::uno::RuntimeException);
+            virtual void SAL_CALL select( const ::com::sun::star::awt::MenuEvent& rEvent ) throw (::com::sun::star::uno::RuntimeException);
+            virtual void SAL_CALL activate( const ::com::sun::star::awt::MenuEvent& rEvent ) throw (::com::sun::star::uno::RuntimeException);
+            virtual void SAL_CALL deactivate( const ::com::sun::star::awt::MenuEvent& rEvent ) throw (::com::sun::star::uno::RuntimeException);
+
+		    // XEventListener
+		    virtual void SAL_CALL disposing( const com::sun::star::lang::EventObject& Source ) throw ( ::com::sun::star::uno::RuntimeException );
+
+            DECL_STATIC_LINK( NewMenuController, ExecuteHdl_Impl, NewDocument* ); 
+    
+        private:
+            typedef ::std::hash_map< int, ::rtl::OUString > TargetFrameForId;
+                
+            void fillPopupMenu( com::sun::star::uno::Reference< com::sun::star::awt::XPopupMenu >& rPopupMenu );
+            void retrieveShortcutsFromConfiguration( const ::com::sun::star::uno::Reference< ::drafts::com::sun::star::ui::XAcceleratorConfiguration >& rAccelCfg,
+                                                     const ::com::sun::star::uno::Sequence< rtl::OUString >& rCommands,
+                                                     std::vector< KeyCode >& aMenuShortCuts );
+            void setAccelerators( PopupMenu* pPopupMenu );
+            void determineAndSetNewDocAccel( PopupMenu* pPopupMenu, const KeyCode& rKeyCode );
+
+        private:
+            // members
+            sal_Bool            m_bShowImages : 1,
+                                m_bHiContrast : 1,
+                                m_bNewMenu    : 1,
+                                m_bModuleIdentified : 1,
+                                m_bAcceleratorCfg : 1;
+            TargetFrameForId    m_aTargetFrameForItem;
+            rtl::OUString       m_aTargetFrame;
+            rtl::OUString       m_aModuleIdentifier;
+            rtl::OUString       m_aEmptyDocURL;
+            ::com::sun::star::uno::Reference< ::com::sun::star::util::XURLTransformer >                 m_xURLTransformer;
+            ::com::sun::star::uno::Reference< ::drafts::com::sun::star::ui::XAcceleratorConfiguration > m_xDocAcceleratorManager;
+            ::com::sun::star::uno::Reference< ::drafts::com::sun::star::ui::XAcceleratorConfiguration > m_xModuleAcceleratorManager;
+            ::com::sun::star::uno::Reference< ::drafts::com::sun::star::ui::XAcceleratorConfiguration > m_xGlobalAcceleratorManager;
+    };
+}
+
+#endif // __FRAMEWORK_UIELEMENT_NEWMENUCONTROLLER_HXX_
Index: framework/source/register/registerservices.cxx
===================================================================
RCS file: /cvs/framework/framework/source/register/registerservices.cxx,v
retrieving revision 1.28
retrieving revision 1.28.38.1
diff -u -p -u -p -r1.28 -r1.28.38.1
--- framework/source/register/registerservices.cxx	26 Nov 2004 14:32:29 -0000	1.28
+++ framework/source/register/registerservices.cxx	26 Jan 2005 10:11:24 -0000	1.28.38.1
@@ -271,6 +271,10 @@
 #include <uiconfiguration/uicategorydescription.hxx>
 #endif
 
+#ifndef __FRAMEWORK_UIELEMENT_NEWMENUCONTROLLER_HXX_
+#include <uielement/newmenucontroller.hxx>
+#endif
+
 COMPONENTGETIMPLEMENTATIONENVIRONMENT
 
 COMPONENTWRITEINFO  (   COMPONENTINFO( ::framework::URLTransformer                          )
@@ -317,6 +321,7 @@ COMPONENTWRITEINFO  (   COMPONENTINFO( :
                         COMPONENTINFO( ::framework::StatusBarFactory                        )
                         COMPONENTINFO( ::framework::UICategoryDescription                   )
 						COMPONENTINFO( ::framework::StatusbarControllerFactory              )
+						COMPONENTINFO( ::framework::NewMenuController                       )
                     )
 
 COMPONENTGETFACTORY	(	IFFACTORY( ::framework::URLTransformer					        )	else
@@ -362,6 +367,7 @@ COMPONENTGETFACTORY	(	IFFACTORY( ::frame
                         IFFACTORY( ::framework::RecentFilesMenuController               )   else
                         IFFACTORY( ::framework::StatusBarFactory                        )   else
                         IFFACTORY( ::framework::UICategoryDescription                   )	else
-						IFFACTORY( ::framework::StatusbarControllerFactory              )
+						IFFACTORY( ::framework::StatusbarControllerFactory              )   else
+						IFFACTORY( ::framework::NewMenuController                       )
 			)
 
Index: framework/source/services/desktop.cxx
===================================================================
RCS file: /cvs/framework/framework/source/services/desktop.cxx,v
retrieving revision 1.53
retrieving revision 1.53.38.1
diff -u -p -u -p -r1.53 -r1.53.38.1
--- framework/source/services/desktop.cxx	26 Nov 2004 14:33:05 -0000	1.53
+++ framework/source/services/desktop.cxx	7 Feb 2005 15:57:33 -0000	1.53.38.1
@@ -860,6 +860,7 @@ css::uno::Reference< css::lang::XCompone
     css::uno::Reference< css::lang::XMultiServiceFactory > xSMGR = m_xFactory;
     aReadLock.unlock();
 
+    RTL_LOGFILE_CONTEXT( aLog2, "PERFORMANCE - Desktop::loadComponentFromURL()" );
     return LoadEnv::loadComponentFromURL(xThis, xSMGR, sURL, sTargetFrameName, nSearchFlags, lArguments);
 }
 
Index: framework/source/services/frame.cxx
===================================================================
RCS file: /cvs/framework/framework/source/services/frame.cxx,v
retrieving revision 1.79
retrieving revision 1.79.38.1
diff -u -p -u -p -r1.79 -r1.79.38.1
--- framework/source/services/frame.cxx	26 Nov 2004 14:33:19 -0000	1.79
+++ framework/source/services/frame.cxx	7 Feb 2005 15:05:23 -0000	1.79.38.1
@@ -717,9 +717,9 @@ void SAL_CALL Frame::initialize( const c
         xLayoutManager->setDockingAreaAcceptor(xDockingAreaAcceptor);
         
         // create the status bar ... but dont show it here!
-        xLayoutManager->lock();
-        xLayoutManager->createElement( DECLARE_ASCII( "private:resource/statusbar/statusbar" ));
-        xLayoutManager->unlock();
+//        xLayoutManager->lock();
+//        xLayoutManager->createElement( DECLARE_ASCII( "private:resource/statusbar/statusbar" ));
+//        xLayoutManager->unlock();
     }
 
     // create progress helper
Index: framework/source/services/modulemanager.cxx
===================================================================
RCS file: /cvs/framework/framework/source/services/modulemanager.cxx,v
retrieving revision 1.3
retrieving revision 1.3.8.1
diff -u -p -u -p -r1.3 -r1.3.8.1
--- framework/source/services/modulemanager.cxx	18 Jan 2005 15:42:25 -0000	1.3
+++ framework/source/services/modulemanager.cxx	7 Feb 2005 16:16:27 -0000	1.3.8.1
@@ -131,7 +131,7 @@ DEFINE_XTYPEPROVIDER_5(ModuleManager    
 /*-----------------------------------------------
     04.12.2003 09:35
 -----------------------------------------------*/
-DEFINE_XSERVICEINFO_MULTISERVICE(ModuleManager                   ,
+DEFINE_XSERVICEINFO_ONEINSTANCESERVICE(ModuleManager                   ,
                                  ::cppu::OWeakObject             ,
                                  SERVICENAME_MODULEMANAGER       ,
                                  IMPLEMENTATIONNAME_MODULEMANAGER)
Index: framework/source/uiconfiguration/moduleimagemanager.cxx
===================================================================
RCS file: /cvs/framework/framework/source/uiconfiguration/moduleimagemanager.cxx,v
retrieving revision 1.7
retrieving revision 1.7.30.1
diff -u -p -u -p -r1.7 -r1.7.30.1
--- framework/source/uiconfiguration/moduleimagemanager.cxx	13 Dec 2004 12:26:47 -0000	1.7
+++ framework/source/uiconfiguration/moduleimagemanager.cxx	7 Feb 2005 15:05:25 -0000	1.7.30.1
@@ -310,11 +310,8 @@ void CmdImageList::impl_fillCommandToIma
 
 ImageList* CmdImageList::impl_getImageList( sal_Int16 nImageType )
 {
-    RTL_LOGFILE_CONTEXT( aLog, "framework: CmdImageList::impl_getImageList" );
-
     if ( !m_pImageList[nImageType] )
     {
-        impl_fillCommandToImageNameMap();
         m_pImageList[nImageType] = new ImageList( m_aImageNameVector,
                                                   OUString::createFromAscii( ImageType_Prefixes[nImageType] ),
                                                   NULL );
@@ -335,12 +332,12 @@ std::vector< rtl::OUString >& CmdImageLi
 
 Image CmdImageList::getImageFromCommandURL( sal_Int16 nImageType, const rtl::OUString& rCommandURL )
 {
-    ImageList* pImageList = impl_getImageList( nImageType );
-    if ( pImageList )
+    impl_fillCommandToImageNameMap();
+    CommandToImageNameMap::const_iterator pIter = m_aCommandToImageNameMap.find( rCommandURL );
+    if ( pIter != m_aCommandToImageNameMap.end() )
     {
-        CommandToImageNameMap::const_iterator pIter = m_aCommandToImageNameMap.find( rCommandURL );
-        if ( pIter != m_aCommandToImageNameMap.end() )
-            return pImageList->GetImage( pIter->second );
+        ImageList* pImageList = impl_getImageList( nImageType );
+        return pImageList->GetImage( pIter->second );
     }
 
     return Image();
@@ -348,15 +345,12 @@ Image CmdImageList::getImageFromCommandU
 
 bool CmdImageList::hasImage( sal_Int16 nImageType, const rtl::OUString& rCommandURL )
 {
-    ImageList* pImageList = impl_getImageList( nImageType );
-    if ( pImageList )
-    {
-        CommandToImageNameMap::const_iterator pIter = m_aCommandToImageNameMap.find( rCommandURL );
-        if ( pIter != m_aCommandToImageNameMap.end() )
-            return ( pImageList->GetImagePos( pIter->second ) != IMAGELIST_IMAGE_NOTFOUND );
-    }
-
-    return false;
+    impl_fillCommandToImageNameMap();
+    CommandToImageNameMap::const_iterator pIter = m_aCommandToImageNameMap.find( rCommandURL );
+    if ( pIter != m_aCommandToImageNameMap.end() )
+        return true;
+    else
+        return false;
 }
 
 ::std::vector< rtl::OUString >& CmdImageList::getImageNames()
Index: framework/source/uielement/makefile.mk
===================================================================
RCS file: /cvs/framework/framework/source/uielement/makefile.mk,v
retrieving revision 1.6
retrieving revision 1.6.92.1
diff -u -p -u -p -r1.6 -r1.6.92.1
--- framework/source/uielement/makefile.mk	9 Sep 2004 17:11:04 -0000	1.6
+++ framework/source/uielement/makefile.mk	26 Jan 2005 10:11:24 -0000	1.6.92.1
@@ -102,7 +102,8 @@ SLOFILES=			\
                     $(SLO)$/statusbarmanager.obj			\
                     $(SLO)$/recentfilesmenucontroller.obj   \
                     $(SLO)$/progressbarwrapper.obj          \
-                    $(SLO)$/statusindicatorinterfacewrapper.obj
+                    $(SLO)$/statusindicatorinterfacewrapper.obj \
+                    $(SLO)$/newmenucontroller.obj
 
 # --- Targets ------------------------------------------------------
 
Index: framework/source/uielement/menubarmanager.cxx
===================================================================
RCS file: /cvs/framework/framework/source/uielement/menubarmanager.cxx,v
retrieving revision 1.20
retrieving revision 1.17.16.4
diff -u -p -u -p -r1.20 -r1.17.16.4
--- framework/source/uielement/menubarmanager.cxx	31 Jan 2005 15:25:58 -0000	1.20
+++ framework/source/uielement/menubarmanager.cxx	3 Feb 2005 15:14:30 -0000	1.17.16.4
@@ -275,10 +275,6 @@ namespace framework
 #define DESKTOP_SERVICE			::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.frame.Desktop" ))
 
 const ::rtl::OUString aSlotString( RTL_CONSTASCII_USTRINGPARAM( "slot:" ));
-const ::rtl::OUString aSlotNewDocDirect( RTL_CONSTASCII_USTRINGPARAM( "slot:5537" ));
-const ::rtl::OUString aCmdNewDocDirect( RTL_CONSTASCII_USTRINGPARAM( ".uno:AddDirect" ));
-const ::rtl::OUString aSlotAutoPilot( RTL_CONSTASCII_USTRINGPARAM( "slot:6381" ));
-const ::rtl::OUString aCmdAutoPilot( RTL_CONSTASCII_USTRINGPARAM( ".uno:AutoPilotMenu" ));
 const ::rtl::OUString aCmdHelpIndex( RTL_CONSTASCII_USTRINGPARAM( ".uno:HelpIndex" ));
 const ::rtl::OUString aCmdToolsMenu( RTL_CONSTASCII_USTRINGPARAM( ".uno:ToolsMenu" ));
 
@@ -325,94 +321,6 @@ MenuBarManager::MenuBarManager(
 	FillMenuManager( pMenu, rFrame, bDelete, bDeleteChildren );
 }
 
-
-// #110897#
-MenuBarManager::MenuBarManager(
-	const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory >& xServiceFactory,
-	Reference< XFrame >& rFrame, BmkMenu* pBmkMenu, sal_Bool bDelete, sal_Bool bDeleteChildren )
-:	// #110897#
-	mxServiceFactory(xServiceFactory),
-	ThreadHelpBase( &Application::GetSolarMutex() )
-    , OWeakObject()
-    , m_aListenerContainer( m_aLock.getShareableOslMutex() )
-    , m_bDisposed( sal_False )
-    , m_bModuleIdentified( sal_False )
-    , m_bRetrieveImages( sal_False )
-    , m_bAcceleratorCfg( sal_False )
-{
-	m_bActive			= sal_False;
-	m_bDeleteMenu		= bDelete;
-	m_bDeleteChildren	= bDeleteChildren;
-	m_pVCLMenu			= pBmkMenu;
-	m_xFrame			= rFrame;
-	m_bInitialized		= sal_False;
-	m_bIsBookmarkMenu	= sal_True;
-
-    m_xPopupMenuControllerRegistration = Reference< drafts::com::sun::star::frame::XUIControllerRegistration >(
-		// #110897# ::comphelper::getProcessServiceFactory()->createInstance( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "drafts.com.sun.star.frame.PopupMenuControllerFactory" ))),
-		getServiceFactory()->createInstance( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "drafts.com.sun.star.frame.PopupMenuControllerFactory" ))),
-		UNO_QUERY );
-
-	const StyleSettings& rSettings = Application::GetSettings().GetStyleSettings();
-	m_bWasHiContrast	= rSettings.GetMenuColor().IsDark();
-
-    Reference< XDispatch > xDispatch;
-    Reference< XStatusListener > xStatusListener;
-	int nItemCount = pBmkMenu->GetItemCount();
-	for ( int i = 0; i < nItemCount; i++ )
-	{
-		USHORT nItemId = pBmkMenu->GetItemId( i );
-
-		::rtl::OUString aItemCommand = pBmkMenu->GetItemCommand( nItemId );
-		if ( !aItemCommand.getLength() )
-		{
-			aItemCommand = aSlotString;
-			aItemCommand += ::rtl::OUString::valueOf( (sal_Int32)nItemId );
-			pBmkMenu->SetItemCommand( nItemId, aItemCommand );
-		}
-
-		PopupMenu* pPopupMenu = pBmkMenu->GetPopupMenu( nItemId );
-		if ( pPopupMenu )
-		{
-			// #110897# MenuBarManager* pSubMenuManager = new MenuBarManager( rFrame, pPopupMenu, bDeleteChildren, bDeleteChildren );
-			MenuBarManager* pSubMenuManager = new MenuBarManager( getServiceFactory(), rFrame, pPopupMenu, bDeleteChildren, bDeleteChildren );
-
-			Reference< XStatusListener > xSubMenuManager( static_cast< OWeakObject *>( pSubMenuManager ), UNO_QUERY );
-
-			// store menu item command as we later have to know which menu is active (see Acivate handler)
-			pSubMenuManager->m_aMenuItemCommand = aItemCommand;
-
-			MenuItemHandler* pMenuItemHandler = new MenuItemHandler(
-														nItemId,
-														xSubMenuManager,
-														xDispatch );
-			m_aMenuItemHandlerVector.push_back( pMenuItemHandler );
-		}
-		else
-		{
-			if ( pBmkMenu->GetItemType( i ) != MENUITEM_SEPARATOR )
-			{
-				MenuConfiguration::Attributes* pBmkAttributes = (MenuConfiguration::Attributes *)(pBmkMenu->GetUserValue( nItemId ));
-				MenuItemHandler* pMenuItemHandler = new MenuItemHandler( nItemId, xStatusListener, xDispatch );
-
-				if ( pBmkAttributes )
-				{
-					// read additional attributes from attributes struct and BmkMenu implementation will delete all attributes itself!!
-					pMenuItemHandler->aTargetFrame = pBmkAttributes->aTargetFrame;
-				}
-
-				m_aMenuItemHandlerVector.push_back( pMenuItemHandler );
-			}
-		}
-	}
-
-	m_pVCLMenu->SetHighlightHdl( LINK( this, MenuBarManager, Highlight ));
-	m_pVCLMenu->SetActivateHdl( LINK( this, MenuBarManager, Activate ));
-	m_pVCLMenu->SetDeactivateHdl( LINK( this, MenuBarManager, Deactivate ));
-	m_pVCLMenu->SetSelectHdl( LINK( this, MenuBarManager, Select ));
-}
-
-
 // #110897#
 MenuBarManager::MenuBarManager(
 	const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory >& xServiceFactory,
@@ -1227,12 +1135,13 @@ IMPL_LINK( MenuBarManager, Activate, Men
 		        MenuItemHandler* pMenuItemHandler = *p;
                 
                 // Set key code, workaround for hard-coded shortcut F1 mapped to .uno:HelpIndex
+                // Only non-popup menu items can have a short-cut
                 if ( pMenuItemHandler->aMenuItemURL == aCmdHelpIndex )
                 {
                     KeyCode aKeyCode( KEY_F1 );
                     pMenu->SetAccelKey( pMenuItemHandler->nItemId, aKeyCode );
                 }
-                else
+                else if ( pMenu->GetPopupMenu( pMenuItemHandler->nItemId ) == 0 )
                     pMenu->SetAccelKey( pMenuItemHandler->nItemId, pMenuItemHandler->aKeyCode );
             }
         }
@@ -1260,7 +1169,7 @@ IMPL_LINK( MenuBarManager, Activate, Men
 					    // because they are handled directly through XFrame->activate!!!
                         // Don't update dispatches for special file menu items.
 					    if ( !(( pMenuItemHandler->nItemId >= START_ITEMID_WINDOWLIST &&
-					            pMenuItemHandler->nItemId < END_ITEMID_WINDOWLIST )))
+					             pMenuItemHandler->nItemId < END_ITEMID_WINDOWLIST )))
 					    {
                             Reference< XDispatch > xMenuItemDispatch;
 
@@ -1281,8 +1190,9 @@ IMPL_LINK( MenuBarManager, Activate, Men
 						    else
 							    xMenuItemDispatch = xDispatchProvider->queryDispatch( aTargetURL, ::rtl::OUString(), 0 );
 
+                            sal_Bool bPopupMenu( sal_False );
                             if ( !pMenuItemHandler->xPopupMenuController.is() &&
-                                m_xPopupMenuControllerRegistration->hasController( aItemCommand, rtl::OUString() ))
+                                 m_xPopupMenuControllerRegistration->hasController( aItemCommand, rtl::OUString() ))
                             {
                                 // Try instanciate a popup menu controller. It is stored in the menu item handler.
                                 Reference< XMultiComponentFactory > xPopupMenuControllerFactory( m_xPopupMenuControllerRegistration, UNO_QUERY );
@@ -1319,6 +1229,7 @@ IMPL_LINK( MenuBarManager, Activate, Men
                                         // Provide our awt popup menu to the popup menu controller
                                         pMenuItemHandler->xPopupMenuController = xPopupMenuController;
                                         xPopupMenuController->setPopupMenu( pMenuItemHandler->xPopupMenu );
+                                        bPopupMenu = sal_True;
                                     }
                                 }
                             }
@@ -1326,16 +1237,20 @@ IMPL_LINK( MenuBarManager, Activate, Men
                             {
                                 // Force update of popup menu
                                 pMenuItemHandler->xPopupMenuController->updatePopupMenu();
+                                bPopupMenu = sal_True;
                             }
 
                             if ( xMenuItemDispatch.is() )
 						    {
 							    pMenuItemHandler->xMenuItemDispatch = xMenuItemDispatch;
 							    pMenuItemHandler->aMenuItemURL		= aTargetURL.Complete;
-
-                                // We need only an update to reflect the current state
-                                xMenuItemDispatch->addStatusListener( static_cast< XStatusListener* >( this ), aTargetURL );
-                                xMenuItemDispatch->removeStatusListener( static_cast< XStatusListener* >( this ), aTargetURL );
+                                
+                                if ( !bPopupMenu )
+                                {
+                                    // We need only an update to reflect the current state
+                                    xMenuItemDispatch->addStatusListener( static_cast< XStatusListener* >( this ), aTargetURL );
+                                    xMenuItemDispatch->removeStatusListener( static_cast< XStatusListener* >( this ), aTargetURL );
+                                }
 						    }
 						    else
 							    pMenu->EnableItem( pMenuItemHandler->nItemId, sal_False );
@@ -1724,128 +1639,58 @@ void MenuBarManager::FillMenuManager( Me
 				}
 			}
 		}
-		else
+        else if ( pMenu->GetItemType( i ) != MENUITEM_SEPARATOR )
 		{
-			if ( nItemId == SID_NEWDOCDIRECT ||
-				 aItemCommand == aSlotNewDocDirect ||
-				 aItemCommand == aCmdNewDocDirect )
-			{
-				// #110897#
-                // Reference< ::com::sun::star::lang::XMultiServiceFactory > aMultiServiceFactory(::comphelper::getProcessServiceFactory());
-				// MenuConfiguration aMenuCfg( aMultiServiceFactory );
-				MenuConfiguration aMenuCfg( getServiceFactory() );
-
-				BmkMenu* pSubMenu = (BmkMenu*)aMenuCfg.CreateBookmarkMenu( rFrame, BOOKMARK_NEWMENU );
-				pMenu->SetPopupMenu( nItemId, pSubMenu );
-
-				// #110897# MenuBarManager* pSubMenuManager = new MenuBarManager( rFrame, pSubMenu, sal_True, sal_False );
-				MenuBarManager* pSubMenuManager = new MenuBarManager( getServiceFactory(), rFrame, pSubMenu, sal_True, sal_False );
-
-				Reference< XStatusListener > xSubMenuManager( static_cast< OWeakObject *>( pSubMenuManager ), UNO_QUERY );
-                rFrame->addFrameActionListener( Reference< XFrameActionListener >( xSubMenuManager, UNO_QUERY ));
-
-				MenuItemHandler* pMenuItemHandler = new MenuItemHandler(
-															nItemId,
-															xSubMenuManager,
-															xDispatch );
-                pMenuItemHandler->aMenuItemURL = aItemCommand;
-				if ( pMenu->GetItemText( nItemId ).Len() == 0 )
-					aQueryLabelItemIdVector.push_back( nItemId );
-				m_aMenuItemHandlerVector.push_back( pMenuItemHandler );
-
-				if ( m_bShowMenuImages && !pMenu->GetItemImage( nItemId ))
-				{
-					Image aImage = GetImageFromURL( rFrame, aItemCommand, FALSE, m_bWasHiContrast );
-                	if ( !!aImage )
-                   		pMenu->SetItemImage( nItemId, aImage );
-				}
-			}
-			else if ( nItemId == SID_AUTOPILOTMENU ||
-					  aItemCommand == aSlotAutoPilot ||
-					  aItemCommand == aCmdAutoPilot )
+			if ( m_bShowMenuImages )
 			{
-				// #110897#
-                // Reference< ::com::sun::star::lang::XMultiServiceFactory > aMultiServiceFactory(::comphelper::getProcessServiceFactory());
-				// MenuConfiguration aMenuCfg( aMultiServiceFactory );
-				MenuConfiguration aMenuCfg( getServiceFactory() );
-
-				BmkMenu* pSubMenu = (BmkMenu*)aMenuCfg.CreateBookmarkMenu( rFrame, BOOKMARK_WIZARDMENU );
-				pMenu->SetPopupMenu( nItemId, pSubMenu );
-
-				// #110897# MenuBarManager* pSubMenuManager = new MenuBarManager( rFrame, pSubMenu, sal_True, sal_False );
-				MenuBarManager* pSubMenuManager = new MenuBarManager( getServiceFactory(), rFrame, pSubMenu, sal_True, sal_False );
-
-				Reference< XStatusListener > xSubMenuManager( static_cast< OWeakObject *>( pSubMenuManager ), UNO_QUERY );
-                rFrame->addFrameActionListener( Reference< XFrameActionListener >( xSubMenuManager, UNO_QUERY ));
-
-				MenuItemHandler* pMenuItemHandler = new MenuItemHandler(
-															nItemId,
-															xSubMenuManager,
-															xDispatch );
-                pMenuItemHandler->aMenuItemURL = aItemCommand;
-				if ( pMenu->GetItemText( nItemId ).Len() == 0 )
-					aQueryLabelItemIdVector.push_back( nItemId );
-				m_aMenuItemHandlerVector.push_back( pMenuItemHandler );
-
-				if ( m_bShowMenuImages && !pMenu->GetItemImage( nItemId ))
-				{
-					Image aImage = GetImageFromURL( rFrame, aItemCommand, FALSE, m_bWasHiContrast );
-                	if ( !!aImage )
-                   		pMenu->SetItemImage( nItemId, aImage );
-				}
-			}
-			else if ( pMenu->GetItemType( i ) != MENUITEM_SEPARATOR )
-			{
-			    if ( m_bShowMenuImages )
+			    if ( AddonMenuManager::IsAddonMenuId( nItemId ))
 			    {
-			        if ( AddonMenuManager::IsAddonMenuId( nItemId ))
-			        {
-                        // Add-Ons uses images from different places
-                        Image           aImage;
-                        rtl::OUString   aImageId;
+                    // Add-Ons uses images from different places
+                    Image           aImage;
+                    rtl::OUString   aImageId;
 
-						MenuConfiguration::Attributes* pMenuAttributes =
-							(MenuConfiguration::Attributes*)pMenu->GetUserValue( nItemId );
+					MenuConfiguration::Attributes* pMenuAttributes =
+						(MenuConfiguration::Attributes*)pMenu->GetUserValue( nItemId );
 
-						if ( pMenuAttributes && pMenuAttributes->aImageId.getLength() > 0 )
-						{
-						    // Retrieve image id from menu attributes
-						    aImage = GetImageFromURL( rFrame, aImageId, FALSE, m_bWasHiContrast );
-                        }
+					if ( pMenuAttributes && pMenuAttributes->aImageId.getLength() > 0 )
+					{
+						// Retrieve image id from menu attributes
+						aImage = GetImageFromURL( rFrame, aImageId, FALSE, m_bWasHiContrast );
+                    }
 
+	                if ( !aImage )
+	                {
+						aImage = GetImageFromURL( rFrame, aItemCommand, FALSE, m_bWasHiContrast );
 	                    if ( !aImage )
-	                    {
-						    aImage = GetImageFromURL( rFrame, aItemCommand, FALSE, m_bWasHiContrast );
-	                        if ( !aImage )
-                                aImage = AddonsOptions().GetImageFromURL( aItemCommand, FALSE, m_bWasHiContrast );
-                        }
+                            aImage = AddonsOptions().GetImageFromURL( aItemCommand, FALSE, m_bWasHiContrast );
+                    }
 
 		                if ( !!aImage )
 		                    pMenu->SetItemImage( nItemId, aImage );
-			        }
                     else
                         m_bRetrieveImages = sal_True;
 			    }
+                m_bRetrieveImages = sal_True;
+            }
 
-                MenuItemHandler* pItemHandler = new MenuItemHandler( nItemId, xStatusListener, xDispatch );
-                pItemHandler->aMenuItemURL = aItemCommand;
+            MenuItemHandler* pItemHandler = new MenuItemHandler( nItemId, xStatusListener, xDispatch );
+            pItemHandler->aMenuItemURL = aItemCommand;
 
-                if ( m_xPopupMenuControllerRegistration.is() &&
-                     m_xPopupMenuControllerRegistration->hasController( aItemCommand, rtl::OUString() ))
-                {
-                    // Check if we have to create a popup menu for a uno based popup menu controller.
-                    // We have to set an empty popup menu into our menu structure so the controller also
-                    // works with inplace OLE.
-                    VCLXPopupMenu* pVCLXPopupMenu = new VCLXPopupMenu;
-                    PopupMenu* pPopupMenu = (PopupMenu *)pVCLXPopupMenu->GetMenu();
-                    pMenu->SetPopupMenu( pItemHandler->nItemId, pPopupMenu );
-                    pItemHandler->xPopupMenu = Reference< com::sun::star::awt::XPopupMenu >( (OWeakObject *)pVCLXPopupMenu, UNO_QUERY );
-                }
+            if ( m_xPopupMenuControllerRegistration.is() &&
+                    m_xPopupMenuControllerRegistration->hasController( aItemCommand, rtl::OUString() ))
+            {
+                // Check if we have to create a popup menu for a uno based popup menu controller.
+                // We have to set an empty popup menu into our menu structure so the controller also
+                // works with inplace OLE.
+                VCLXPopupMenu* pVCLXPopupMenu = new VCLXPopupMenu;
+                PopupMenu* pPopupMenu = (PopupMenu *)pVCLXPopupMenu->GetMenu();
+                pMenu->SetPopupMenu( pItemHandler->nItemId, pPopupMenu );
+                pItemHandler->xPopupMenu = Reference< com::sun::star::awt::XPopupMenu >( (OWeakObject *)pVCLXPopupMenu, UNO_QUERY );
+            }
 
-				m_aMenuItemHandlerVector.push_back( pItemHandler );
-				if ( pMenu->GetItemText( nItemId ).Len() == 0 )
-					aQueryLabelItemIdVector.push_back( nItemId );
-			}
+			m_aMenuItemHandlerVector.push_back( pItemHandler );
+			if ( pMenu->GetItemText( nItemId ).Len() == 0 )
+				aQueryLabelItemIdVector.push_back( nItemId );
 		}
 	}
 
@@ -2004,7 +1849,6 @@ void MenuBarManager::RetrieveImageManage
 void MenuBarManager::FillMenu( USHORT& nId, Menu* pMenu, const Reference< XIndexAccess >& rItemContainer )
 {
     // Fill menu bar with container contents
-
     for ( sal_Int32 n = 0; n < rItemContainer->getCount(); n++ )
     {
         Sequence< PropertyValue >   aProp;
Index: framework/source/uielement/menubarwrapper.cxx
===================================================================
RCS file: /cvs/framework/framework/source/uielement/menubarwrapper.cxx,v
retrieving revision 1.5
retrieving revision 1.4.102.4
diff -u -p -u -p -r1.5 -r1.4.102.4
--- framework/source/uielement/menubarwrapper.cxx	21 Jan 2005 09:51:50 -0000	1.5
+++ framework/source/uielement/menubarwrapper.cxx	3 Feb 2005 15:14:30 -0000	1.4.102.4
@@ -329,3 +329,4 @@ Reference< XInterface > SAL_CALL MenuBar
 }
 
 } // namespace framework
+
Index: framework/source/uielement/newmenucontroller.cxx
===================================================================
RCS file: framework/source/uielement/newmenucontroller.cxx
diff -N framework/source/uielement/newmenucontroller.cxx
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ framework/source/uielement/newmenucontroller.cxx	26 Jan 2005 10:11:25 -0000	1.1.2.1
@@ -0,0 +1,687 @@
+/*************************************************************************
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+#ifndef __FRAMEWORK_UIELEMENT_NEWMENUCONTROLLER_HXX_
+#include <uielement/newmenucontroller.hxx>
+#endif
+
+//_________________________________________________________________________________________________________________
+//	my own includes
+//_________________________________________________________________________________________________________________
+
+#ifndef __FRAMEWORK_THREADHELP_RESETABLEGUARD_HXX_
+#include <threadhelp/resetableguard.hxx>
+#endif
+#ifndef __FRAMEWORK_SERVICES_H_
+#include "services.h"
+#endif
+#ifndef __FRAMEWORK_CLASSES_RESOURCE_HRC_
+#include <classes/resource.hrc>
+#endif
+#ifndef __FRAMEWORK_CLASSES_FWKRESID_HXX_
+#include <classes/fwkresid.hxx>
+#endif
+#ifndef __FRAMEWORK_CLASSES_BMKMENU_HXX
+#include <classes/bmkmenu.hxx>
+#endif
+#ifndef __FRAMEWORK_HELPER_IMAGEPRODUCER_HXX_
+#include <helper/imageproducer.hxx>
+#endif
+#ifndef __FRAMEWORK_CLASSES_MENUCONFIGURATION_HXX_
+#include <classes/menuconfiguration.hxx>
+#endif
+
+//_________________________________________________________________________________________________________________
+//	interface includes
+//_________________________________________________________________________________________________________________
+
+#ifndef _COM_SUN_STAR_AWT_XDEVICE_HPP_
+#include <com/sun/star/awt/XDevice.hpp>
+#endif
+#ifndef _COM_SUN_STAR_BEANS_PROPERTYVALUE_HPP_
+#include <com/sun/star/beans/PropertyValue.hpp>
+#endif
+#ifndef _COM_SUN_STAR_AWT_MENUITEMSTYLE_HPP_
+#include <com/sun/star/awt/MenuItemStyle.hpp>
+#endif
+#ifndef _DRAFTS_COM_SUN_STAR_UI_XMODULEUICONFIGURATIONMANAGERSUPPLIER_HPP_
+#include <drafts/com/sun/star/ui/XModuleUIConfigurationManagerSupplier.hpp>
+#endif
+#ifndef _DRAFTS_COM_SUN_STAR_UI_XUICONFIGURATIONMANAGERSUPPLIER_HPP_
+#include <drafts/com/sun/star/ui/XUIConfigurationManagerSupplier.hpp>
+#endif
+#ifndef _DRAFTS_COM_SUN_STAR_FRAME_XMODULEMANAGER_HPP_
+#include <drafts/com/sun/star/frame/XModuleManager.hpp>
+#endif
+#ifndef _COM_SUN_STAR_CONTAINER_XNAMEACCESS_HPP_
+#include <com/sun/star/container/XNameAccess.hpp>
+#endif
+
+//_________________________________________________________________________________________________________________
+//	includes of other projects
+//_________________________________________________________________________________________________________________
+
+#ifndef _SV_SVAPP_HXX
+#include <vcl/svapp.hxx>
+#endif
+#ifndef _VCL_I18NHELP_HXX
+#include <vcl/i18nhelp.hxx>
+#endif
+#ifndef _URLOBJ_HXX
+#include <tools/urlobj.hxx>
+#endif
+#ifndef _RTL_USTRBUF_HXX_
+#include <rtl/ustrbuf.hxx>
+#endif
+#ifndef _CPPUHELPER_IMPLBASE1_HXX_
+#include <cppuhelper/implbase1.hxx>
+#endif
+#ifndef _OSL_FILE_HXX_
+#include <osl/file.hxx>
+#endif
+#ifndef INCLUDED_SVTOOLS_MENUOPTIONS_HXX
+#include <svtools/menuoptions.hxx>
+#endif
+#ifndef INCLUDED_SVTOOLS_ACCELERATOREXECUTE_HXX 
+#include <svtools/acceleratorexecute.hxx>
+#endif
+#ifndef INCLUDED_SVTOOLS_MODULEOPTIONS_HXX
+#include <svtools/moduleoptions.hxx>
+#endif 
+
+//_________________________________________________________________________________________________________________
+//	Defines
+//_________________________________________________________________________________________________________________
+//
+
+using namespace com::sun::star::uno;
+using namespace com::sun::star::lang;
+using namespace com::sun::star::frame;
+using namespace com::sun::star::beans;
+using namespace com::sun::star::util;
+using namespace com::sun::star::container;
+using namespace drafts::com::sun::star::ui;
+using namespace drafts::com::sun::star::frame;
+
+static const char SFX_REFERER_USER[] = "private:user";
+
+namespace framework
+{
+
+DEFINE_XSERVICEINFO_MULTISERVICE        (   NewMenuController                           ,
+                                            OWeakObject                                 ,
+                                            SERVICENAME_POPUPMENUCONTROLLER		        ,
+											IMPLEMENTATIONNAME_NEWMENUCONTROLLER
+										)
+
+DEFINE_INIT_SERVICE                     (   NewMenuController, {} )
+
+void SetMenuImages( PopupMenu* pPopupMenu, Reference< XFrame >& xFrame, sal_Bool bSetImages, sal_Bool bHiContrast )
+{
+	int   nItemCount = pPopupMenu->GetItemCount();
+    Image aImage;
+	
+    for ( int i = 0; i < nItemCount; i++ )
+    {
+		USHORT nItemId = pPopupMenu->GetItemId( i );
+        if ( bSetImages )
+        {
+            aImage = GetImageFromURL( xFrame, 
+                                      pPopupMenu->GetItemCommand( nItemId ), 
+                                      FALSE, 
+                                      bHiContrast );
+            if ( !!aImage )
+                pPopupMenu->SetItemImage( nItemId, aImage );
+        }
+        else
+            pPopupMenu->SetItemImage( nItemId, aImage );
+    }
+}
+
+void NewMenuController::determineAndSetNewDocAccel( PopupMenu* pPopupMenu, const KeyCode& rKeyCode )
+{
+    USHORT        nCount( pPopupMenu->GetItemCount() );
+    USHORT        nId( 0 );
+    sal_Bool      bFound( sal_False );
+    rtl::OUString aCommand;
+    
+    if ( m_aEmptyDocURL.getLength() > 0 )
+    {
+        // Search for the empty document URL
+
+        for ( sal_uInt32 i = 0; i < sal_uInt32( nCount ); i++ )
+        {
+            nId = pPopupMenu->GetItemId( USHORT( i ));
+            if ( nId != 0 && pPopupMenu->GetItemType( nId ) != MENUITEM_SEPARATOR )
+            {
+                aCommand = pPopupMenu->GetItemCommand( nId );
+                if ( aCommand.indexOf( m_aEmptyDocURL ) == 0 )
+                {
+                    pPopupMenu->SetAccelKey( nId, rKeyCode );
+                    bFound = sal_True;
+                    break;
+                }
+            }
+        }
+    }
+    
+    if ( !bFound )
+    {
+        // Search for the default module name
+        rtl::OUString aDefaultModuleName( SvtModuleOptions().GetDefaultModuleName() );
+        if ( aDefaultModuleName.getLength() > 0 )
+        {
+            for ( sal_uInt32 i = 0; i < sal_uInt32( nCount ); i++ )
+            {
+                nId = pPopupMenu->GetItemId( USHORT( i ));
+                if ( nId != 0 && pPopupMenu->GetItemType( nId ) != MENUITEM_SEPARATOR )
+                {
+                    aCommand = pPopupMenu->GetItemCommand( nId );
+                    if ( aCommand.indexOf( aDefaultModuleName ) >= 0 )
+                    {
+                        pPopupMenu->SetAccelKey( nId, rKeyCode );
+                        break;
+                    }
+                }
+            }
+        }
+    }
+}
+
+void NewMenuController::setAccelerators( PopupMenu* pPopupMenu )
+{
+    if ( m_bModuleIdentified )
+    {
+        Reference< XAcceleratorConfiguration > xDocAccelCfg( m_xDocAcceleratorManager );
+        Reference< XAcceleratorConfiguration > xModuleAccelCfg( m_xModuleAcceleratorManager );
+        Reference< XAcceleratorConfiguration > xGlobalAccelCfg( m_xGlobalAcceleratorManager );
+
+        if ( !m_bAcceleratorCfg )
+        {
+            // Retrieve references on demand
+            m_bAcceleratorCfg = sal_True;
+            if ( !xDocAccelCfg.is() )
+            {
+                Reference< XController > xController = m_xFrame->getController();
+                Reference< XModel > xModel;
+                if ( xController.is() )
+                {
+                    xModel = xController->getModel();
+                    if ( xModel.is() )
+                    {
+                        Reference< XUIConfigurationManagerSupplier > xSupplier( xModel, UNO_QUERY );
+                        if ( xSupplier.is() )
+                        {
+                            Reference< XUIConfigurationManager > xDocUICfgMgr( xSupplier->getUIConfigurationManager(), UNO_QUERY );
+                            if ( xDocUICfgMgr.is() )
+                            {
+                                xDocAccelCfg = Reference< XAcceleratorConfiguration >( xDocUICfgMgr->getShortCutManager(), UNO_QUERY );
+                                m_xDocAcceleratorManager = xDocAccelCfg;
+                            }
+                        }
+                    }
+                }
+            }
+
+            if ( !xModuleAccelCfg.is() )
+            {
+                Reference< XModuleUIConfigurationManagerSupplier > xModuleCfgMgrSupplier( m_xServiceManager->createInstance(
+                                                                                            SERVICENAME_MODULEUICONFIGURATIONMANAGERSUPPLIER ),
+                                                                                        UNO_QUERY );
+                Reference< XUIConfigurationManager > xUICfgMgr = xModuleCfgMgrSupplier->getUIConfigurationManager( m_aModuleIdentifier );
+                if ( xUICfgMgr.is() )
+                {
+                    xModuleAccelCfg = Reference< XAcceleratorConfiguration >( xUICfgMgr->getShortCutManager(), UNO_QUERY );
+                    m_xModuleAcceleratorManager = xModuleAccelCfg;
+                }
+            }
+
+            if ( !xGlobalAccelCfg.is() )
+            {
+                xGlobalAccelCfg = Reference< XAcceleratorConfiguration >( m_xServiceManager->createInstance(
+                                                                            SERVICENAME_GLOBALACCELERATORCONFIGURATION ),
+                                                                          UNO_QUERY );
+                m_xGlobalAcceleratorManager = xGlobalAccelCfg;
+            }
+        }
+
+        KeyCode                         aEmptyKeyCode;
+        sal_uInt32                      nItemCount( pPopupMenu->GetItemCount() );
+        std::vector< KeyCode >          aMenuShortCuts;
+        std::vector< rtl::OUString >    aCmds;
+        std::vector< sal_uInt32 >       aIds;
+        for ( sal_uInt32 i = 0; i < nItemCount; i++ )
+        {
+            USHORT nId( pPopupMenu->GetItemId( USHORT( i )));
+            if ( nId & ( pPopupMenu->GetItemType( nId ) != MENUITEM_SEPARATOR ))
+            {
+                aIds.push_back( nId );
+                aMenuShortCuts.push_back( aEmptyKeyCode );
+                aCmds.push_back( pPopupMenu->GetItemCommand( nId ));
+            }
+        }
+        
+        sal_uInt32 nSeqCount( aIds.size() );
+
+        if ( m_bNewMenu )
+            nSeqCount+=1;
+
+        Sequence< rtl::OUString > aSeq( nSeqCount );
+        
+        // Add a special command for our "New" menu.
+        if ( m_bNewMenu )
+        {
+            aSeq[nSeqCount-1] = m_aCommandURL;
+            aMenuShortCuts.push_back( aEmptyKeyCode );
+        }
+        
+        for ( sal_uInt32 i = 0; i < aCmds.size(); i++ )
+            aSeq[i] = aCmds[i];
+        
+        if ( m_xGlobalAcceleratorManager.is() )
+            retrieveShortcutsFromConfiguration( xGlobalAccelCfg, aSeq, aMenuShortCuts );
+        if ( m_xModuleAcceleratorManager.is() )
+            retrieveShortcutsFromConfiguration( xModuleAccelCfg, aSeq, aMenuShortCuts );
+        if ( m_xDocAcceleratorManager.is() )
+            retrieveShortcutsFromConfiguration( xGlobalAccelCfg, aSeq, aMenuShortCuts );
+
+        for ( sal_uInt32 i = 0; i < aIds.size(); i++ )
+            pPopupMenu->SetAccelKey( USHORT( aIds[i] ), aMenuShortCuts[i] );
+
+        // Special handling for "New" menu short-cut should be set at the
+        // document which will be opened using it.
+        if ( m_bNewMenu )
+        {
+            if ( aMenuShortCuts[nSeqCount-1] != aEmptyKeyCode )
+                determineAndSetNewDocAccel( pPopupMenu, aMenuShortCuts[nSeqCount-1] );
+        }
+    }
+}
+
+void NewMenuController::retrieveShortcutsFromConfiguration( 
+    const Reference< XAcceleratorConfiguration >& rAccelCfg,
+    const Sequence< rtl::OUString >& rCommands,
+    std::vector< KeyCode >& aMenuShortCuts )
+{
+    if ( rAccelCfg.is() )
+    {
+        try
+        {
+            com::sun::star::awt::KeyEvent aKeyEvent;
+            Sequence< Any > aSeqKeyCode = rAccelCfg->getPreferredKeyEventsForCommandList( rCommands );
+            for ( sal_Int32 i = 0; i < aSeqKeyCode.getLength(); i++ )
+            {
+                if ( aSeqKeyCode[i] >>= aKeyEvent )
+                    aMenuShortCuts[i] = svt::AcceleratorExecute::st_AWTKey2VCLKey( aKeyEvent );
+            }
+        }
+        catch ( IllegalArgumentException& )
+        {
+        }
+    }
+}
+
+NewMenuController::NewMenuController( const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory >& xServiceManager ) :
+    PopupMenuControllerBase( xServiceManager ),
+    m_bShowImages( sal_True ),
+    m_bHiContrast( sal_False ),
+    m_bNewMenu( sal_False ),
+    m_bModuleIdentified( sal_False ),
+    m_bAcceleratorCfg( sal_False ),
+    m_aTargetFrame( RTL_CONSTASCII_USTRINGPARAM( "_default" ))
+{
+    m_xURLTransformer = Reference< XURLTransformer >( 
+                            xServiceManager->createInstance(
+                                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.util.URLTransformer" ))),
+                            UNO_QUERY );
+}
+
+NewMenuController::~NewMenuController()
+{
+}
+
+// private function
+void NewMenuController::fillPopupMenu( Reference< css::awt::XPopupMenu >& rPopupMenu )
+{
+    VCLXPopupMenu* pPopupMenu    = (VCLXPopupMenu *)VCLXMenu::GetImplementation( rPopupMenu );
+    PopupMenu*     pVCLPopupMenu = 0;
+
+    vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );
+
+    resetPopupMenu( rPopupMenu );
+    if ( pPopupMenu )
+        pVCLPopupMenu = (PopupMenu *)pPopupMenu->GetMenu();
+
+    if ( pVCLPopupMenu )
+    {
+        MenuConfiguration aMenuCfg( m_xServiceManager );
+        BmkMenu* pSubMenu( 0 );
+        
+        if ( m_bNewMenu )
+            pSubMenu = (BmkMenu*)aMenuCfg.CreateBookmarkMenu( m_xFrame, BOOKMARK_NEWMENU );
+        else
+            pSubMenu = (BmkMenu*)aMenuCfg.CreateBookmarkMenu( m_xFrame, BOOKMARK_WIZARDMENU );
+
+        // copy entries as we have to use the provided popup menu
+        *pVCLPopupMenu = *pSubMenu;
+
+	    int             nItemCount = pVCLPopupMenu->GetItemCount();
+        Image           aImage;
+        rtl::OUString   aTargetFrame;
+    	
+        // retrieve additional parameters from bookmark menu and
+        // store it in a hash_map.
+        for ( int i = 0; i < pSubMenu->GetItemCount(); i++ )
+        {
+		    USHORT nItemId = pSubMenu->GetItemId( i );
+            if (( nItemId != 0 ) && 
+                ( pSubMenu->GetItemType( nItemId ) != MENUITEM_SEPARATOR ))
+            {
+				MenuConfiguration::Attributes* pBmkAttributes = (MenuConfiguration::Attributes *)(pSubMenu->GetUserValue( nItemId ));
+                aTargetFrame = pBmkAttributes->aTargetFrame;
+                m_aTargetFrameForItem.insert( TargetFrameForId::value_type( nItemId, aTargetFrame ));
+            }
+        }
+            
+        if ( m_bShowImages )
+            SetMenuImages( pVCLPopupMenu, m_xFrame, m_bShowImages, m_bHiContrast );
+            
+        delete pSubMenu;
+    }
+}
+
+// XEventListener
+void SAL_CALL NewMenuController::disposing( const EventObject& Source ) throw ( RuntimeException )
+{
+    Reference< css::awt::XMenuListener > xHolder(( OWeakObject *)this, UNO_QUERY );
+
+    ResetableGuard aLock( m_aLock );
+    m_xFrame.clear();
+    m_xDispatch.clear();
+
+    if ( m_xPopupMenu.is() )
+        m_xPopupMenu->removeMenuListener( Reference< css::awt::XMenuListener >(( OWeakObject *)this, UNO_QUERY ));
+    m_xPopupMenu.clear();
+}
+
+// XStatusListener
+void SAL_CALL NewMenuController::statusChanged( const FeatureStateEvent& Event ) throw ( RuntimeException )
+{
+}
+
+// XMenuListener
+void SAL_CALL NewMenuController::highlight( const css::awt::MenuEvent& rEvent ) throw (RuntimeException)
+{
+}
+
+void SAL_CALL NewMenuController::select( const css::awt::MenuEvent& rEvent ) throw (RuntimeException)
+{
+    Reference< css::awt::XPopupMenu > xPopupMenu;
+    Reference< XDispatch >            xDispatch;
+    Reference< XDispatchProvider >    xDispatchProvider;
+    Reference< XMultiServiceFactory > xServiceManager;
+    Reference< XURLTransformer >      xURLTransformer;
+
+    ResetableGuard aLock( m_aLock );
+    xPopupMenu          = m_xPopupMenu;
+    xDispatchProvider   = Reference< XDispatchProvider >( m_xFrame, UNO_QUERY );
+    xServiceManager     = m_xServiceManager;
+    xURLTransformer     = m_xURLTransformer;
+    aLock.unlock();
+
+    css::util::URL aTargetURL;
+    Sequence< PropertyValue > aArgsList( 1 );
+
+    if ( xPopupMenu.is() && xDispatchProvider.is() )
+    {
+        VCLXPopupMenu* pPopupMenu = (VCLXPopupMenu *)VCLXPopupMenu::GetImplementation( xPopupMenu );
+        if ( pPopupMenu )
+        {
+            {
+                vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );
+                PopupMenu* pVCLPopupMenu = (PopupMenu *)pPopupMenu->GetMenu();
+                aTargetURL.Complete = pVCLPopupMenu->GetItemCommand( rEvent.MenuId );
+            }
+
+            xURLTransformer->parseStrict( aTargetURL );
+
+            aArgsList[0].Name = ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Referer" ));
+	        aArgsList[0].Value = makeAny( ::rtl::OUString::createFromAscii( SFX_REFERER_USER ));
+
+            rtl::OUString aTargetFrame( m_aTargetFrame );
+            TargetFrameForId::const_iterator pItem = m_aTargetFrameForItem.find( rEvent.MenuId );
+            if ( pItem != m_aTargetFrameForItem.end() )
+                aTargetFrame = pItem->second;
+
+            xDispatch = xDispatchProvider->queryDispatch( aTargetURL, aTargetFrame, 0 );
+        }
+    }
+
+    if ( xDispatch.is() )
+    {
+        // Call dispatch asychronously as we can be destroyed while dispatch is
+        // executed. VCL is not able to survive this as it wants to call listeners
+        // after select!!!
+        NewDocument* pNewDocument = new NewDocument;
+        pNewDocument->xDispatch  = xDispatch;
+        pNewDocument->aTargetURL = aTargetURL;
+        pNewDocument->aArgSeq    = aArgsList;
+        Application::PostUserEvent( STATIC_LINK(0, NewMenuController, ExecuteHdl_Impl), pNewDocument );
+    }
+}
+
+void SAL_CALL NewMenuController::activate( const css::awt::MenuEvent& rEvent ) throw (RuntimeException)
+{
+    vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );
+    if ( m_xFrame.is() && m_xPopupMenu.is() )
+    {
+        VCLXPopupMenu* pPopupMenu = (VCLXPopupMenu *)VCLXPopupMenu::GetImplementation( m_xPopupMenu );
+        if ( pPopupMenu )
+        {
+            const StyleSettings& rSettings = Application::GetSettings().GetStyleSettings();
+            sal_Bool bShowImages( SvtMenuOptions().IsMenuIconsEnabled() );
+            sal_Bool bHiContrast( rSettings.GetMenuColor().IsDark() );
+
+            PopupMenu* pVCLPopupMenu = (PopupMenu *)pPopupMenu->GetMenu();
+            
+            if (( m_bShowImages != bShowImages ) || 
+                ( m_bHiContrast != bHiContrast ))
+            {
+                m_bShowImages = bShowImages;
+                m_bHiContrast = bHiContrast;
+
+                SetMenuImages( pVCLPopupMenu, m_xFrame, m_bShowImages, m_bHiContrast );
+            }
+        
+            setAccelerators( pVCLPopupMenu );
+        }
+    }
+}
+
+void SAL_CALL NewMenuController::deactivate( const css::awt::MenuEvent& rEvent ) throw (RuntimeException)
+{
+}
+
+// XPopupMenuController
+void SAL_CALL NewMenuController::setPopupMenu( const Reference< css::awt::XPopupMenu >& xPopupMenu ) throw ( RuntimeException )
+{
+    ResetableGuard aLock( m_aLock );
+
+    if ( m_xFrame.is() && !m_xPopupMenu.is() )
+    {
+        // Create popup menu on demand
+        vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );
+
+        m_xPopupMenu = xPopupMenu;
+	    m_xPopupMenu->addMenuListener( Reference< css::awt::XMenuListener >( (OWeakObject*)this, UNO_QUERY ));
+
+        Reference< XDispatchProvider > xDispatchProvider( m_xFrame, UNO_QUERY );
+
+        com::sun::star::util::URL aTargetURL;
+        aTargetURL.Complete = m_aCommandURL;
+        m_xURLTransformer->parseStrict( aTargetURL );
+        m_xDispatch = xDispatchProvider->queryDispatch( aTargetURL, ::rtl::OUString(), 0 );
+
+        if ( m_xPopupMenu.is() )
+            fillPopupMenu( m_xPopupMenu );
+
+        // Identify module that we are attach to. It's our context that we need to know.
+        Reference< XModuleManager > xModuleManager( m_xServiceManager->createInstance( SERVICENAME_MODULEMANAGER ),UNO_QUERY );
+        if ( xModuleManager.is() )
+        {
+            try
+            {
+                m_aModuleIdentifier = xModuleManager->identify( m_xFrame );
+                m_bModuleIdentified = sal_True;
+
+                Reference< XNameAccess > xNameAccess( xModuleManager, UNO_QUERY );
+                if (( m_aModuleIdentifier.getLength() > 0 ) && xNameAccess.is() )
+                {
+                    Sequence< PropertyValue > aSeq;
+
+                    Any a = xNameAccess->getByName( m_aModuleIdentifier );
+                    if ( a >>= aSeq )
+                    {
+                        for ( sal_Int32 y = 0; y < aSeq.getLength(); y++ )
+                        {
+                            if ( aSeq[y].Name.equalsAscii("ooSetupFactoryEmptyDocumentURL") )
+                            {
+                                aSeq[y].Value >>= m_aEmptyDocURL;
+                                break;
+                            }
+                        }
+                    }
+                }
+            }
+            catch ( RuntimeException& e )
+            {
+                throw e;
+            }
+            catch ( Exception& )
+            {
+            }
+        }
+    }
+}
+
+void SAL_CALL NewMenuController::updatePopupMenu() throw (RuntimeException)
+{
+}
+
+// XInitialization
+void SAL_CALL NewMenuController::initialize( const Sequence< Any >& aArguments ) throw ( Exception, RuntimeException )
+{
+    const rtl::OUString aFrameName( RTL_CONSTASCII_USTRINGPARAM( "Frame" ));
+    const rtl::OUString aCommandURLName( RTL_CONSTASCII_USTRINGPARAM( "CommandURL" ));
+
+    ResetableGuard aLock( m_aLock );
+
+    sal_Bool bInitalized( m_bInitialized );
+    if ( !bInitalized )
+    {
+        PropertyValue       aPropValue;
+        rtl::OUString       aCommandURL;
+        Reference< XFrame > xFrame;
+
+        for ( int i = 0; i < aArguments.getLength(); i++ )
+        {
+            if ( aArguments[i] >>= aPropValue )
+            {
+                if ( aPropValue.Name.equalsAscii( "Frame" ))
+                    aPropValue.Value >>= xFrame;
+                else if ( aPropValue.Name.equalsAscii( "CommandURL" ))
+                    aPropValue.Value >>= aCommandURL;
+            }
+        }
+
+        if ( xFrame.is() && aCommandURL.getLength() )
+        {
+            ResetableGuard aLock( m_aLock );
+            m_xFrame        = xFrame;
+            m_aCommandURL   = aCommandURL;
+            m_bInitialized  = sal_True;
+            m_bShowImages   = SvtMenuOptions().IsMenuIconsEnabled();
+	        
+            const StyleSettings& rSettings = Application::GetSettings().GetStyleSettings();
+	        m_bHiContrast	= rSettings.GetMenuColor().IsDark();
+            m_bNewMenu      = m_aCommandURL.equalsAscii( ".uno:AddDirect" );
+        }
+    }
+}
+
+IMPL_STATIC_LINK( NewMenuController, ExecuteHdl_Impl, NewDocument*, pNewDocument )
+{
+    try
+    {
+        // Asynchronous execution as this can lead to our own destruction!
+        // Framework can recycle our current frame and the layout manager disposes all user interface
+        // elements if a component gets detached from its frame!
+        pNewDocument->xDispatch->dispatch( pNewDocument->aTargetURL, pNewDocument->aArgSeq );
+    }
+    catch ( Exception& )
+    {
+    }
+
+    delete pNewDocument;
+    return 0;
+}
+
+}
Index: framework/source/uielement/uicommanddescription.cxx
===================================================================
RCS file: /cvs/framework/framework/source/uielement/uicommanddescription.cxx,v
retrieving revision 1.6
retrieving revision 1.6.38.1
diff -u -p -u -p -r1.6 -r1.6.38.1
--- framework/source/uielement/uicommanddescription.cxx	26 Nov 2004 18:31:42 -0000	1.6
+++ framework/source/uielement/uicommanddescription.cxx	7 Feb 2005 15:05:27 -0000	1.6.38.1
@@ -248,6 +248,7 @@ class ConfigurationAccess_UICommand : //
         Sequence< rtl::OUString > getAllCommands();
         void                      resetCache();
         sal_Bool                  fillCache();
+        sal_Bool                  addGenericInfoToCache();
 
     private:
         typedef ::std::hash_map< ::rtl::OUString,
@@ -282,6 +283,7 @@ class ConfigurationAccess_UICommand : //
         CommandToInfoCache                m_aCmdInfoCache;
         sal_Bool                          m_bConfigAccessInitialized;
         sal_Bool                          m_bCacheFilled;
+        sal_Bool                          m_bGenericDataRetrieved;
 };
 
 //*****************************************************************************************************************
@@ -311,6 +313,7 @@ ConfigurationAccess_UICommand::Configura
     m_aPropUIContextLabel( RTL_CONSTASCII_USTRINGPARAM( CONFIGURATION_PROPERTY_CONTEXT_LABEL )),
     m_bConfigAccessInitialized( sal_False ),
     m_bCacheFilled( sal_False ),
+    m_bGenericDataRetrieved( sal_False ),
     m_aConfigCmdAccess( RTL_CONSTASCII_USTRINGPARAM( CONFIGURATION_ROOT_ACCESS )),
     m_aConfigPopupAccess( RTL_CONSTASCII_USTRINGPARAM( CONFIGURATION_ROOT_ACCESS )),
     m_aPropLabel( RTL_CONSTASCII_USTRINGPARAM( PROPSET_LABEL )),
@@ -372,6 +375,8 @@ throw ( NoSuchElementException, WrappedT
     {
         // special keys to retrieve information about a set of commands
         // SAFE
+        addGenericInfoToCache();
+
         if ( rCommandURL.equalsIgnoreAsciiCaseAscii( UICOMMANDDESCRIPTION_NAMEACCESS_COMMANDIMAGELIST ))
             return makeAny( m_aCommandImageList );
         else if ( rCommandURL.equalsIgnoreAsciiCaseAscii( UICOMMANDDESCRIPTION_NAMEACCESS_COMMANDROTATEIMAGELIST ))
@@ -461,6 +466,7 @@ void ConfigurationAccess_UICommand::rese
 {
     m_aCmdInfoCache.clear();
     m_bCacheFilled = sal_False;
+    m_bGenericDataRetrieved = sal_False;
 }
 
 sal_Bool ConfigurationAccess_UICommand::fillCache()
@@ -554,7 +560,14 @@ sal_Bool ConfigurationAccess_UICommand::
     m_aCommandRotateImageList = comphelper::containerToSequence< rtl::OUString >( aImageRotateVector );
     m_aCommandMirrorImageList = comphelper::containerToSequence< rtl::OUString >( aImageMirrorVector );
 
-    if ( m_xGenericUICommands.is() )
+    m_bCacheFilled = sal_True;
+
+    return sal_True;
+}
+
+sal_Bool ConfigurationAccess_UICommand::addGenericInfoToCache()
+{
+    if ( m_xGenericUICommands.is() && !m_bGenericDataRetrieved )
     {
         Sequence< rtl::OUString > aCommandNameSeq;
         try
@@ -563,6 +576,10 @@ sal_Bool ConfigurationAccess_UICommand::
                     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( UICOMMANDDESCRIPTION_NAMEACCESS_COMMANDROTATEIMAGELIST ))) >>= aCommandNameSeq )
                 m_aCommandRotateImageList = comphelper::concatSequences< rtl::OUString >( m_aCommandRotateImageList, aCommandNameSeq );
         }
+        catch ( RuntimeException& e )
+        {
+            throw e;
+        }
         catch ( Exception& )
         {
         }
@@ -573,12 +590,16 @@ sal_Bool ConfigurationAccess_UICommand::
                     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( UICOMMANDDESCRIPTION_NAMEACCESS_COMMANDMIRRORIMAGELIST ))) >>= aCommandNameSeq )
                 m_aCommandMirrorImageList = comphelper::concatSequences< rtl::OUString >( m_aCommandMirrorImageList, aCommandNameSeq );
         }
+        catch ( RuntimeException& e )
+        {
+            throw e;
+        }
         catch ( Exception& )
         {
         }
-    }
 
-    m_bCacheFilled = sal_True;
+        m_bGenericDataRetrieved = sal_True;
+    }
 
     return sal_True;
 }
Index: framework/util/makefile.mk
===================================================================
RCS file: /cvs/framework/framework/util/makefile.mk,v
retrieving revision 1.89
retrieving revision 1.89.38.1
diff -u -p -u -p -r1.89 -r1.89.38.1
--- framework/util/makefile.mk	26 Nov 2004 14:33:51 -0000	1.89
+++ framework/util/makefile.mk	26 Jan 2005 10:11:10 -0000	1.89.38.1
@@ -330,7 +330,8 @@ SHL4OBJS=       \
                 $(SLO)$/progressbarwrapper.obj          \
                 $(SLO)$/statusindicatorinterfacewrapper.obj \
                 $(SLO)$/uicategorydescription.obj       \
-				$(SLO)$/vclstatusindicator.obj
+				$(SLO)$/vclstatusindicator.obj      \
+				$(SLO)$/newmenucontroller.obj
 
 SHL4STDLIBS=	\
 				$(FWILIB)                           \
Index: framework/util/defs/wntmsci10
===================================================================
RCS file: /cvs/framework/framework/util/defs/wntmsci10,v
retrieving revision 1.113
retrieving revision 1.113.2.1
diff -u -p -u -p -r1.113 -r1.113.2.1
--- framework/util/defs/wntmsci10	1 Feb 2005 18:00:45 -0000	1.113
+++ framework/util/defs/wntmsci10	7 Feb 2005 15:57:33 -0000	1.113.2.1
@@ -3279,3 +3279,17 @@ __CTA2?AVWrappedTargetException@lang@sta
 ?m_pInstance@?1??create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXInteractionFilterSelect@document@star@sun@com@@V?$WeakImplHelper1@VXInteractionFilterSelect@document@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0x3b17f44b@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXInteractionFilterSelect@document@star@sun@com@@V?$WeakImplHelper1@VXInteractionFilterSelect@document@star@sun@com@@@cppu@@@5@VGetGlobalMutex@osl@@@Z@4PAU45@A
 ?m_pInstance@?1??create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXInteractionRequest@task@star@sun@com@@V?$WeakImplHelper1@VXInteractionRequest@task@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0x3b17f44b@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXInteractionRequest@task@star@sun@com@@V?$WeakImplHelper1@VXInteractionRequest@task@star@sun@com@@@cppu@@@5@VGetGlobalMutex@osl@@@Z@4PAU45@A
 ?DbgIsAssert@@YAKXZ
+?create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXPropertySetInfo@beans@star@sun@com@@V?$WeakImplHelper1@VXPropertySetInfo@beans@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0xb8b269dc@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXPropertySetInfo@beans@star@sun@com@@V?$WeakImplHelper1@VXPropertySetInfo@beans@star@sun@com@@@cppu@@@4@VGetGlobalMutex@osl@@@Z
+?m_pInstance@?1??create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXPropertySetInfo@beans@star@sun@com@@V?$WeakImplHelper1@VXPropertySetInfo@beans@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0xb8b269dc@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXPropertySetInfo@beans@star@sun@com@@V?$WeakImplHelper1@VXPropertySetInfo@beans@star@sun@com@@@cppu@@@5@VGetGlobalMutex@osl@@@Z@4PAU45@A
+?create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXInteractionAbort@task@star@sun@com@@V?$WeakImplHelper1@VXInteractionAbort@task@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0x334a0d1b@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXInteractionAbort@task@star@sun@com@@V?$WeakImplHelper1@VXInteractionAbort@task@star@sun@com@@@cppu@@@4@VGetGlobalMutex@osl@@@Z
+?create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXInteractionFilterSelect@document@star@sun@com@@V?$WeakImplHelper1@VXInteractionFilterSelect@document@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0x334a0d1b@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXInteractionFilterSelect@document@star@sun@com@@V?$WeakImplHelper1@VXInteractionFilterSelect@document@star@sun@com@@@cppu@@@4@VGetGlobalMutex@osl@@@Z
+?create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXInteractionRequest@task@star@sun@com@@V?$WeakImplHelper1@VXInteractionRequest@task@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0x334a0d1b@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXInteractionRequest@task@star@sun@com@@V?$WeakImplHelper1@VXInteractionRequest@task@star@sun@com@@@cppu@@@4@VGetGlobalMutex@osl@@@Z
+?m_pInstance@?1??create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXInteractionAbort@task@star@sun@com@@V?$WeakImplHelper1@VXInteractionAbort@task@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0x334a0d1b@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXInteractionAbort@task@star@sun@com@@V?$WeakImplHelper1@VXInteractionAbort@task@star@sun@com@@@cppu@@@5@VGetGlobalMutex@osl@@@Z@4PAU45@A
+?m_pInstance@?1??create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXInteractionFilterSelect@document@star@sun@com@@V?$WeakImplHelper1@VXInteractionFilterSelect@document@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0x334a0d1b@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXInteractionFilterSelect@document@star@sun@com@@V?$WeakImplHelper1@VXInteractionFilterSelect@document@star@sun@com@@@cppu@@@5@VGetGlobalMutex@osl@@@Z@4PAU45@A
+?m_pInstance@?1??create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXInteractionRequest@task@star@sun@com@@V?$WeakImplHelper1@VXInteractionRequest@task@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0x334a0d1b@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXInteractionRequest@task@star@sun@com@@V?$WeakImplHelper1@VXInteractionRequest@task@star@sun@com@@@cppu@@@5@VGetGlobalMutex@osl@@@Z@4PAU45@A
+?create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXOutputStream@io@star@sun@com@@V?$WeakImplHelper1@VXOutputStream@io@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0x51003d87@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXOutputStream@io@star@sun@com@@V?$WeakImplHelper1@VXOutputStream@io@star@sun@com@@@cppu@@@4@VGetGlobalMutex@osl@@@Z
+?m_pInstance@?1??create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXOutputStream@io@star@sun@com@@V?$WeakImplHelper1@VXOutputStream@io@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0x51003d87@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXOutputStream@io@star@sun@com@@V?$WeakImplHelper1@VXOutputStream@io@star@sun@com@@@cppu@@@5@VGetGlobalMutex@osl@@@Z@4PAU45@A
+?create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXOutputStream@io@star@sun@com@@V?$WeakImplHelper1@VXOutputStream@io@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0xfe0deaba@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXOutputStream@io@star@sun@com@@V?$WeakImplHelper1@VXOutputStream@io@star@sun@com@@@cppu@@@4@VGetGlobalMutex@osl@@@Z
+?m_pInstance@?1??create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXOutputStream@io@star@sun@com@@V?$WeakImplHelper1@VXOutputStream@io@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0xfe0deaba@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXOutputStream@io@star@sun@com@@V?$WeakImplHelper1@VXOutputStream@io@star@sun@com@@@cppu@@@5@VGetGlobalMutex@osl@@@Z@4PAU45@A
+?create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXAttributeList@sax@xml@star@sun@com@@V?$WeakImplHelper1@VXAttributeList@sax@xml@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0xbc28b44d@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXAttributeList@sax@xml@star@sun@com@@V?$WeakImplHelper1@VXAttributeList@sax@xml@star@sun@com@@@cppu@@@4@VGetGlobalMutex@osl@@@Z
+?m_pInstance@?1??create@?$rtl_Instance@Uclass_data@cppu@@U?$ImplClassData1@VXAttributeList@sax@xml@star@sun@com@@V?$WeakImplHelper1@VXAttributeList@sax@xml@star@sun@com@@@cppu@@@2@V?$Guard@VMutex@osl@@@osl@@VGetGlobalMutex@5@HH@?A0xbc28b44d@@SAPAUclass_data@cppu@@U?$ImplClassData1@VXAttributeList@sax@xml@star@sun@com@@V?$WeakImplHelper1@VXAttributeList@sax@xml@star@sun@com@@@cppu@@@5@VGetGlobalMutex@osl@@@Z@4PAU45@A
Index: officecfg/registry/data/org/openoffice/Office/UI/Controller.xcu
===================================================================
RCS file: /cvs/util/officecfg/registry/data/org/openoffice/Office/UI/Controller.xcu,v
retrieving revision 1.8
retrieving revision 1.8.74.1
diff -u -p -u -p -r1.8 -r1.8.74.1
--- officecfg/registry/data/org/openoffice/Office/UI/Controller.xcu	17 Nov 2004 14:07:29 -0000	1.8
+++ officecfg/registry/data/org/openoffice/Office/UI/Controller.xcu	26 Jan 2005 10:12:51 -0000	1.8.74.1
@@ -162,6 +162,28 @@
           <value>com.sun.star.comp.framework.RecentFilesMenuController</value>
         </prop>
       </node>
+	  <node oor:name="c11" oor:op="replace">
+	    <prop oor:name="Command">
+	      <value>.uno:AddDirect</value>
+	    </prop>
+	    <prop oor:name="Module">
+	      <value/>
+	    </prop>
+	    <prop oor:name="Controller">
+	      <value>com.sun.star.comp.framework.NewMenuController</value>
+	    </prop>
+	  </node>
+	  <node oor:name="c12" oor:op="replace">
+	    <prop oor:name="Command">
+	      <value>.uno:AutoPilotMenu</value>
+	    </prop>
+	    <prop oor:name="Module">
+	      <value/>
+	    </prop>
+	    <prop oor:name="Controller">
+	      <value>com.sun.star.comp.framework.NewMenuController</value>
+	    </prop>
+      </node>
     </node>
     <node oor:name="ToolBar">
       <node oor:name="c1" oor:op="replace">
Index: officecfg/registry/data/org/openoffice/Office/UI/StartModuleCommands.xcu
===================================================================
RCS file: /cvs/util/officecfg/registry/data/org/openoffice/Office/UI/StartModuleCommands.xcu,v
retrieving revision 1.3
retrieving revision 1.3.266.1
diff -u -p -u -p -r1.3 -r1.3.266.1
--- officecfg/registry/data/org/openoffice/Office/UI/StartModuleCommands.xcu	6 Jul 2004 11:53:33 -0000	1.3
+++ officecfg/registry/data/org/openoffice/Office/UI/StartModuleCommands.xcu	7 Feb 2005 15:33:02 -0000	1.3.266.1
@@ -1,10 +1,283 @@
 <?xml version="1.0" encoding="UTF-8"?>
+<!--***********************************************************************
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRUNTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRUNTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc..
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************ -->
 <!DOCTYPE oor:component-data SYSTEM "../../../../../component-update.dtd">
 <oor:component-data oor:name="StartModuleCommands" oor:package="org.openoffice.Office.UI" xmlns:oor="http://openoffice.org/2001/registry" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 	<node oor:name="UserInterface">
 		<node oor:name="Commands">
+			<node oor:name=".uno:AddDirect" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">~Neu</value>
+					<value xml:lang="en-US">~New</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:CloseDoc" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">S~chließen</value>
+					<value xml:lang="en-US">~Close</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:CloseWin" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">Fenster schließen</value>
+					<value xml:lang="en-US">Close Window</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:Copy" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">~Kopieren</value>
+					<value xml:lang="en-US">~Copy</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:Cut" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">~Ausschneiden</value>
+					<value xml:lang="en-US">Cu~t</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:ExtendedHelp" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">~Direkthilfe</value>
+					<value xml:lang="en-US">What's ~This?</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:HelpIndex" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">%PRODUCTNAME ~Hilfe</value>
+					<value xml:lang="en-US">%PRODUCTNAME ~Help</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:NewDoc" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">Neues Dokument aus Vorlage</value>
+					<value xml:lang="en-US">New Document From Template</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:Open" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">Ö~ffnen...</value>
+					<value xml:lang="en-US">~Open...</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:OpenUrl" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">URL laden</value>
+					<value xml:lang="en-US">Load URL</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:Paste" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">E~infügen</value>
+					<value xml:lang="en-US">~Paste</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:Print" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">~Drucken...</value>
+					<value xml:lang="en-US">~Print...</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:PrinterSetup" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">Druckereinstellun~g...</value>
+					<value xml:lang="en-US">P~rinter Settings...</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:Quit" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">~Beenden</value>
+					<value xml:lang="en-US">E~xit</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:Save" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">~Speichern</value>
+					<value xml:lang="en-US">~Save</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:SaveAs" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">Speichern ~unter...</value>
+					<value xml:lang="en-US">Save ~As...</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:SendMail" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">Dokument als ~E-Mail...</value>
+					<value xml:lang="en-US">Document as ~E-mail...</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:SetDocumentProperties" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">E~igenschaften...</value>
+					<value xml:lang="en-US">Propert~ies...</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:Undo" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">Rückgängig unmöglich</value>
+					<value xml:lang="en-US">Can&apos;t Undo</value>
+				</prop>
+				<prop oor:name="Properties" oor:type="xs:int">
+					<value>1</value>
+				</prop>
+			</node>
 		</node>
 		<node oor:name="Popups">
+			<node oor:name=".uno:EditMenu" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">~Bearbeiten</value>
+					<value xml:lang="en-US">~Edit</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:HelpMenu" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">~Hilfe</value>
+					<value xml:lang="en-US">~Help</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:MacrosMenu" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">~Makros</value>
+					<value xml:lang="en-US">~Macros</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:PickList" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">~Datei</value>
+					<value xml:lang="en-US">~File</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:ToolsMenu" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">E~xtras</value>
+					<value xml:lang="en-US">~Tools</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:ViewMenu" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">~Ansicht</value>
+					<value xml:lang="en-US">~View</value>
+				</prop>
+			</node>
+			<node oor:name=".uno:WindowList" oor:op="replace">
+				<prop oor:name="Label" oor:type="xs:string">
+					<value xml:lang="de">Fen~ster</value>
+					<value xml:lang="en-US">~Window</value>
+				</prop>
+			</node>
 		</node>
 	</node>
 </oor:component-data>
Index: sfx2/source/appl/appopen.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/appl/appopen.cxx,v
retrieving revision 1.87
retrieving revision 1.87.48.1
diff -u -p -u -p -r1.87 -r1.87.48.1
--- sfx2/source/appl/appopen.cxx	18 Jan 2005 16:01:45 -0000	1.87
+++ sfx2/source/appl/appopen.cxx	7 Feb 2005 16:29:05 -0000	1.87.48.1
@@ -177,6 +177,8 @@
 
 #include <vos/mutex.hxx>
 
+#include <rtl/logfile.hxx>
+
 #ifndef GCC
 #pragma hdrstop
 #endif
@@ -1510,6 +1512,7 @@ void SfxApplication::OpenDocExec_Impl( S
 
             Reference < XDispatchProvider > xProv( xFrame, UNO_QUERY );
             Reference < XDispatch > xDisp = xProv.is() ? xProv->queryDispatch( aURL, aTarget, FrameSearchFlag::ALL ) : Reference < XDispatch >();;
+			RTL_LOGFILE_CONTEXT( aLog2, "PERFORMANCE - SfxApplication::OpenDocExec_Impl" );
             if ( xDisp.is() )
                 xDisp->dispatch( aURL, aArgs );
         }
Index: sfx2/source/doc/sfxbasemodel.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/doc/sfxbasemodel.cxx,v
retrieving revision 1.81
retrieving revision 1.81.12.1
diff -u -p -u -p -r1.81 -r1.81.12.1
--- sfx2/source/doc/sfxbasemodel.cxx	31 Jan 2005 09:15:48 -0000	1.81
+++ sfx2/source/doc/sfxbasemodel.cxx	7 Feb 2005 16:29:05 -0000	1.81.12.1
@@ -226,6 +226,7 @@
 #include <comphelper/storagehelper.hxx>
 #include <toolkit/helper/vclunohelper.hxx>
 #include <svtools/transfer.hxx>
+#include <rtl/logfile.hxx>
 
 //________________________________________________________________________________________________________
 //	includes of my own project
@@ -1980,6 +1981,8 @@ void SAL_CALL SfxBaseModel::storeSelf( c
 				::com::sun::star::io::IOException,
 				::com::sun::star::uno::RuntimeException )
 {
+	RTL_LOGFILE_CONTEXT( aPerfLog, "PERFORMANCE - SfxBaseModel::storeSelf" );
+
 	// object already disposed?
     ::vos::OGuard aGuard( Application::GetSolarMutex() );
 	if ( impl_isDisposed() )
@@ -2062,6 +2065,8 @@ void SAL_CALL SfxBaseModel::storeAsURL(	
 										const	SEQUENCE< PROPERTYVALUE >&	rArgs	)
         throw (::com::sun::star::io::IOException, ::com::sun::star::uno::RuntimeException)
 {
+	RTL_LOGFILE_CONTEXT( aPerfLog, "PERFORMANCE - SfxBaseModel::storeAsURL" );
+
 	// object already disposed?
     ::vos::OGuard aGuard( Application::GetSolarMutex() );
 	if ( impl_isDisposed() )
Index: sal/osl/w32/file.cxx
===================================================================
RCS file: /cvs/porting/sal/osl/w32/file.cxx,v
retrieving revision 1.4
retrieving revision 1.4.58.1
diff -u -p -u -p -r1.4 -r1.4.58.1
--- sal/osl/w32/file.cxx	8 Sep 2004 16:15:55 -0000	1.4
+++ sal/osl/w32/file.cxx	20 Jan 2005 09:36:28 -0000	1.4.58.1
@@ -1130,7 +1130,18 @@ namespace /* private */
 		    lpComponentEnd = lpCurrent;
 	    }
 
-	    /* Test wether the component specifies a device name what is not allowed */
+		/* Test wether the component specifies a device name what is not allowed */
+		
+		// MT: PERFORMANCE: 
+		// This is very expensive. A lot of calls to _tcsicmp.
+		// in SRC6870m71 67.000 calls of this method while empty office start result into more than 1.500.00 calls of _tcsicmp!
+		// Possible optimizations
+		// - Array should be const static
+		// - Sorted array, use binary search
+		// - More intelligent check for com1-9, lpt1-9
+		// Maybe make szComponent upper case, don't search case intensitive
+		// Talked to HRO: Could be removed. Shouldn't be used in OOo, and if used for something like a filename, it will lead to an error anyway.
+		/*
 	    if ( fValid )
 	    {
 		    LPCTSTR	alpDeviceNames[] =
@@ -1165,7 +1176,7 @@ namespace /* private */
 		    LPCTSTR	lpDot;
 		    int		i;
 
-		    /* A device name with an extension is also invalid */
+		    // A device name with an extension is also invalid
 		    lpDot = _tcschr( lpComponent, '.' );
 
 		    if ( !lpDot || lpDot > lpComponentEnd )
@@ -1185,19 +1196,20 @@ namespace /* private */
 				    break;
 			    }
 		    }
+	    }
+	    */
 
-		    if ( fValid )
-		    {
-			    /* Empty components are not allowed */
-			    if ( lpComponentEnd - lpComponent < 1 )
-				    fValid = FALSE;
-
-			    /* If we reached the end of the string NULL is returned */
-			    else if ( !*lpComponentEnd )
-				    lpComponentEnd = NULL;
+		if ( fValid )
+		{
+			// Empty components are not allowed
+			if ( lpComponentEnd - lpComponent < 1 )
+				fValid = FALSE;
+
+			// If we reached the end of the string NULL is returned
+			else if ( !*lpComponentEnd )
+				lpComponentEnd = NULL;
 
-		    }
-	    }
+		}
 
 	    if ( lppComponentEnd )
 		    *lppComponentEnd = lpComponentEnd;
Index: desktop/source/app/app.cxx
===================================================================
RCS file: /cvs/framework/desktop/source/app/app.cxx,v
retrieving revision 1.165
retrieving revision 1.162.26.6
diff -u -p -u -p -r1.165 -r1.162.26.6
--- desktop/source/app/app.cxx	31 Jan 2005 09:29:39 -0000	1.165
+++ desktop/source/app/app.cxx	7 Feb 2005 17:07:50 -0000	1.162.26.6
@@ -1300,7 +1300,9 @@ void Desktop::Main()
             new DesktopContext( com::sun::star::uno::getCurrentContext() ) );
 
         // Startup screen
+        RTL_LOGFILE_CONTEXT_TRACE( aLog, "desktop (lo119109) Desktop::Main { OpenSplashScreen" );
         OpenSplashScreen();
+        RTL_LOGFILE_CONTEXT_TRACE( aLog, "desktop (lo119109) Desktop::Main } OpenSplashScreen" );
 
         // Use a temporary error handler during user install.
         ConfigurationErrorHandler aConfigErrHandler;
@@ -1369,6 +1371,7 @@ void Desktop::Main()
             aConfigErrHandler.activate();
 
         // check if accessibility is enabled but not working and allow to quit
+        RTL_LOGFILE_CONTEXT_TRACE( aLog, "{ GetEnableATToolSupport" );
         if( Application::GetSettings().GetMiscSettings().GetEnableATToolSupport() )
         {
             BOOL bQuitApp;
@@ -1377,6 +1380,7 @@ void Desktop::Main()
                 if( bQuitApp )
                     return;
         }
+        RTL_LOGFILE_CONTEXT_TRACE( aLog, "} GetEnableATToolSupport" );
         
         // terminate if requested...
         if( pCmdLineArgs->IsTerminateAfterInit() ) return;
@@ -1477,9 +1481,12 @@ void Desktop::Main()
             DEFINE_CONST_UNICODE( "com.sun.star.frame.GlobalEventBroadcaster" ) ), UNO_QUERY );
 
         // initialize test-tool library (if available)
+        RTL_LOGFILE_CONTEXT_TRACE( aLog, "{ tools::InitTestToolLib" );
         tools::InitTestToolLib();
+        RTL_LOGFILE_CONTEXT_TRACE( aLog, "} tools::InitTestToolLib" );
 
         // First Start Wizard
+        RTL_LOGFILE_CONTEXT_TRACE( aLog, "{ FirstStartWizard" );
         FirstStartWizard fsw(NULL);
         if (!fsw.Execute()) {
             Reference< XDesktop > xDesktop( xSMgr->createInstance(
@@ -1487,15 +1494,20 @@ void Desktop::Main()
             xDesktop.is() && xDesktop->terminate();
             return;
         }
+        RTL_LOGFILE_CONTEXT_TRACE( aLog, "} FirstStartWizard" );
 
         SetSplashScreenProgress(50);
 
         // Backing Component
         sal_Bool bCrashed            = sal_False;
         sal_Bool bExistsRecoveryData = sal_False;
+        
+        RTL_LOGFILE_CONTEXT_TRACE( aLog, "{ impl_checkRecoveryState" );
         impl_checkRecoveryState(bCrashed, bExistsRecoveryData);
+        RTL_LOGFILE_CONTEXT_TRACE( aLog, "} impl_checkRecoveryState" );
+
         if (
-            (pCmdLineArgs->IsEmpty()                                               ) &&
+            (pCmdLineArgs->IsEmptyOrAcceptOnly()                                   ) &&
             (SvtModuleOptions().IsModuleInstalled(SvtModuleOptions::E_SSTARTMODULE)) &&
             (!bExistsRecoveryData                                                  )
            )
@@ -1649,7 +1661,7 @@ void Desktop::Main()
         Application::AcquireSolarMutex( nAcquireCount );
 
     // call Application::Execute to process messages in vcl message loop
-    RTL_LOGFILE_CONTEXT_TRACE( aLog, "call ::Application::Execute" );
+    RTL_LOGFILE_TRACE( "PERFORMANCE - enter Application::Execute()" );
 
     try
     {
@@ -1871,7 +1883,7 @@ IMPL_STATIC_LINK( Desktop, AsyncTerminat
 
 IMPL_LINK( Desktop, OpenClients_Impl, void*, pvoid )
 {
-    RTL_LOGFILE_CONTEXT( aLog, "desktop (cd100003) ::Desktop::OpenClients_Impl" );
+	RTL_LOGFILE_CONTEXT( aLog, "PERFORMANCE - DesktopOpenClients_Impl()" );
 
     OpenClients();
 
Index: desktop/source/app/cmdlineargs.cxx
===================================================================
RCS file: /cvs/framework/desktop/source/app/cmdlineargs.cxx,v
retrieving revision 1.24
retrieving revision 1.24.98.1
diff -u -p -u -p -r1.24 -r1.24.98.1
--- desktop/source/app/cmdlineargs.cxx	2 Aug 2004 14:39:15 -0000	1.24
+++ desktop/source/app/cmdlineargs.cxx	7 Feb 2005 17:07:51 -0000	1.24.98.1
@@ -158,6 +158,7 @@ void CommandLineArgs::ParseCommandLine_S
     sal_Bool	bForceNewEvent	= sal_False;
 	sal_Bool 	bDisplaySpec	= sal_False;
 
+    m_nArgumentCount = 0;
     m_bEmpty = (aCmdLineString.getLength()<1);
 
     sal_Int32 nIndex = 0;
@@ -168,6 +169,7 @@ void CommandLineArgs::ParseCommandLine_S
 
 		if ( aArg.getLength() > 0 )
 		{
+		    m_nArgumentCount++;
 			if ( !InterpretCommandLineParameter( aArg ))
 			{
 				if ( aArgStr.GetChar(0) == '-' )
@@ -527,6 +529,7 @@ void CommandLineArgs::ResetParamValues()
 	for ( i = 0; i < CMD_STRINGPARAM_COUNT; i++ )
 		m_aStrSetParams[i] = sal_False;
     m_bEmpty = sal_True;
+    m_nArgumentCount = 0;
 }
 
 sal_Bool CommandLineArgs::GetBoolParam( BoolParam eParam ) const
@@ -850,4 +853,11 @@ sal_Bool CommandLineArgs::IsEmpty() cons
     return m_bEmpty;
 }
 
+sal_Bool CommandLineArgs::IsEmptyOrAcceptOnly() const
+{
+    osl::MutexGuard  aMutexGuard( m_aMutex );
+
+    return m_bEmpty || ( ( m_nArgumentCount == 1 ) && ( m_aStrParams[ CMD_STRINGPARAM_ACCEPT ].getLength() ) );
+}
+
 } // namespace desktop
Index: desktop/source/app/cmdlineargs.hxx
===================================================================
RCS file: /cvs/framework/desktop/source/app/cmdlineargs.hxx,v
retrieving revision 1.19
retrieving revision 1.19.98.1
diff -u -p -u -p -r1.19 -r1.19.98.1
--- desktop/source/app/cmdlineargs.hxx	2 Aug 2004 14:39:27 -0000	1.19
+++ desktop/source/app/cmdlineargs.hxx	7 Feb 2005 17:07:51 -0000	1.19.98.1
@@ -200,6 +200,7 @@ class CommandLineArgs
         // Special analyzed states (does not match directly to a command line parameter!)
         sal_Bool                IsPrinting() const;
         sal_Bool                IsEmpty() const;
+        sal_Bool                IsEmptyOrAcceptOnly() const;
 
 	private:
 		struct GroupDefinition
@@ -225,6 +226,7 @@ class CommandLineArgs
 		rtl::OUString			m_aStrParams[ CMD_STRINGPARAM_COUNT ];		// Stores string parameters
 		sal_Bool				m_aStrSetParams[ CMD_STRINGPARAM_COUNT ];	// Stores if string parameters are provided on cmdline
         sal_Bool                m_bEmpty;                                   // indicates an empty command line
+        sal_Int16               m_nArgumentCount;                           // Number of Args
 		mutable ::osl::Mutex	m_aMutex;
 
 		// static definition for groups where only one member can be true
Index: desktop/source/app/main.cxx
===================================================================
RCS file: /cvs/framework/desktop/source/app/main.cxx,v
retrieving revision 1.2
retrieving revision 1.2.72.2
diff -u -p -u -p -r1.2 -r1.2.72.2
--- desktop/source/app/main.cxx	28 Oct 2004 16:29:23 -0000	1.2
+++ desktop/source/app/main.cxx	7 Feb 2005 15:27:32 -0000	1.2.72.2
@@ -87,12 +87,16 @@
 
 #include "app.hxx"
 
+#include <rtl/logfile.hxx>
+
+
 BOOL SVMain();
 
 // -=-= main() -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 
 SAL_IMPLEMENT_MAIN()
 {
+	RTL_LOGFILE_TRACE( "PERFORMANCE - enter Main()" );
 	UNLIMIT_DESCRIPTORS();
 
 	desktop::Desktop aDesktop;
Index: desktop/source/splash/splash.cxx
===================================================================
RCS file: /cvs/framework/desktop/source/splash/splash.cxx,v
retrieving revision 1.9
retrieving revision 1.9.16.1
diff -u -p -u -p -r1.9 -r1.9.16.1
--- desktop/source/splash/splash.cxx	21 Jan 2005 13:44:45 -0000	1.9
+++ desktop/source/splash/splash.cxx	7 Feb 2005 14:59:21 -0000	1.9.16.1
@@ -79,6 +79,7 @@
 #ifndef _SV_SVAPP_HXX
 #include <vcl/svapp.hxx>
 #endif
+#include <rtl/logfile.hxx>
 
 
 using namespace ::rtl;
@@ -175,7 +176,10 @@ void SAL_CALL SplashScreen::setText(cons
 void SAL_CALL SplashScreen::setValue(sal_Int32 nValue)
 	throw (RuntimeException)
 {
-	::vos::OGuard aSolarGuard( Application::GetSolarMutex() );
+    RTL_LOGFILE_CONTEXT( aLog, "::SplashScreen::setValue (lo119109)" );
+    RTL_LOGFILE_CONTEXT_TRACE1( aLog, "value=%d", nValue );
+	
+    ::vos::OGuard aSolarGuard( Application::GetSolarMutex() );
     if (_bVisible) {
         Show();
 	    if (nValue >= _iMax) _iProgress = _iMax;
