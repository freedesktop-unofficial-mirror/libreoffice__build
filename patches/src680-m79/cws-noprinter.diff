Index: sw/source/core/doc/docdesc.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/doc/docdesc.cxx,v
retrieving revision 1.24
retrieving revision 1.24.22.1
diff -u -p -u -p -r1.24 -r1.24.22.1
--- sw/source/core/doc/docdesc.cxx	11 Jan 2005 12:18:01 -0000	1.24
+++ sw/source/core/doc/docdesc.cxx	1 Feb 2005 13:53:19 -0000	1.24.22.1
@@ -195,110 +195,76 @@
 
 using namespace com::sun::star;
 
-static void lcl_DefaultPageFmt( sal_uInt16 nPoolFmtId, SwFrmFmt &rFmt1,
-						 SwFrmFmt &rFmt2, SfxPrinter *pPrt, BOOL bCheck )
-{
-	//Einstellung von Seitengroesse und Seitenraendern. Dazu wird
-	//der Default-Printer benutzt.
-	//Die Physikalische Seitengroesse ist die des Printers
-	//oder DIN-A4 wenn der Printer eine Groesse von 0 liefert.
-	//Der Seitenrand ergibt sich aus der Seitengroesse, der Output-
-	//SSize des Printers und einem Offset der die linke obere Ecke
-	//der Output-SSize relativ zur Physikalischen Pagesize angibt.
-	//Wenn der Offset 0 ist, werden eingestellt.
-	//!!!Die Seitengroesse wird hier im Attribut eingestellt,
-	//dies wird im Ctor des SwPageFrm beachtet.
+static void lcl_DefaultPageFmt( sal_uInt16 nPoolFmtId,
+                                SwFrmFmt &rFmt1,
+                                SwFrmFmt &rFmt2 )
+{
+    // --> FME 2005-01-21 #i41075# Printer on demand
+    // This function does not require a printer anymore.
+    // The default page size is obtained from the application
+    //locale
+    // <--
+
+    // Size and Margin
+    SvxPaper ePaper;
+    const ULONG nAppLanguage = GetAppLanguage();
+    switch ( nAppLanguage )
+    {
+        case LANGUAGE_ENGLISH_US: 
+        case LANGUAGE_ENGLISH_CAN:
+        case LANGUAGE_FRENCH_CANADIAN:
+            ePaper = SvxPaper( SVX_PAPER_LETTER );
+            break;
+        default:
+            ePaper = SvxPaper( SVX_PAPER_A4 );
+    }
 
-	SvxLRSpaceItem aLR;
-	SvxULSpaceItem aUL;
 	SwFmtFrmSize aFrmSize( ATT_FIX_SIZE );
-	BOOL bSetFmt1 = TRUE,
-		 bSetFmt2 = TRUE;
-	if ( pPrt )
-	{
-		if ( bCheck )
-		{
-			const SwFmtFrmSize &rFrmSize = rFmt1.GetFrmSize();
-			const SwFmtFrmSize &rFrmSize2 = rFmt2.GetFrmSize();
-			bSetFmt1 = LONG_MAX == rFrmSize.GetWidth() ||
-					   LONG_MAX == rFrmSize.GetHeight();
-			bSetFmt2 = LONG_MAX == rFrmSize2.GetWidth() ||
-					   LONG_MAX == rFrmSize2.GetHeight();
-			if ( !bSetFmt1 && !bSetFmt2 )
-				return;
-		}
-
-		//Seitengrosse
-		//fuer das Erfragen von SV, ob ein Drucker angeschlossen ist,
-		//werden die SV'ler noch eine Methode anbieten.
-		const Size aPhysSize( SvxPaperInfo::GetPaperSize( (Printer*)pPrt ));
-
-		//if ( aPhysSize.Width() <= 0 )
-		//	aPhysSize.Width() = lA4Width;
-		//if ( aPhysSize.Height() <= 0 )
-		//	aPhysSize.Height() = lA4Height;
-		aFrmSize.SetSize( aPhysSize );
-
-		//Raender
-		Point	aOffst(	pPrt->GetPageOffset() );
-        aOffst += pPrt->GetMapMode().GetOrigin();
-
-		//Auf Default-Raender vorbereiten.
-		//Raender haben eine defaultmaessige Mindestgroesse.
-		//wenn der Drucker einen groesseren Rand vorgibt, so
-		//ist mir dass auch recht.
-		// MIB 06/25/2002, #99397#: The HTML page desc had A4 as page size
-		// always. This has been changed to take the page size from the printer.
-		// Unfortunately, the margins of the HTML page desc are smaller than
-		// the margins used here in general, so one extra case is required.
-		// In the long term, this needs to be changed to always keep the
-		// margins from the page desc.
-		sal_Int32 nMinTop, nMinBottom, nMinLeft, nMinRight;
-		if( RES_POOLPAGE_HTML == nPoolFmtId )
-		{
-			nMinRight = nMinTop = nMinBottom = GetMetricVal( CM_1 );
-			nMinLeft = nMinRight * 2;
-		}
-		else if( MEASURE_METRIC == GetAppLocaleData().getMeasurementSystemEnum() )
-		{
-			nMinTop = nMinBottom = nMinLeft = nMinRight = 1134;	//2 Zentimeter
-		}
-		else
-		{
-			nMinTop = nMinBottom = 1440;	//al la WW: 1Inch
-			nMinLeft = nMinRight = 1800;	//			1,25 Inch
-		}
+    const Size aPhysSize = SvxPaperInfo::GetPaperSize( ePaper );
+    aFrmSize.SetSize( aPhysSize );
 
-		//Raender einstellen.
-		aUL.SetUpper( static_cast< sal_uInt16 >(
-						nMinTop > aOffst.Y() ? nMinTop : aOffst.Y() ) );
-		aUL.SetLower( static_cast< sal_uInt16 >(
-						nMinBottom > aOffst.Y() ? nMinBottom : aOffst.Y() ));
-		aLR.SetRight( nMinRight > aOffst.X() ? nMinRight : aOffst.X() );
-		aLR.SetLeft(  nMinLeft > aOffst.X() ? nMinLeft : aOffst.X());
-	}
+    //Auf Default-Raender vorbereiten.
+    //Raender haben eine defaultmaessige Mindestgroesse.
+    //wenn der Drucker einen groesseren Rand vorgibt, so
+    //ist mir dass auch recht.
+    // MIB 06/25/2002, #99397#: The HTML page desc had A4 as page size
+    // always. This has been changed to take the page size from the printer.
+    // Unfortunately, the margins of the HTML page desc are smaller than
+    // the margins used here in general, so one extra case is required.
+    // In the long term, this needs to be changed to always keep the
+    // margins from the page desc.
+    sal_Int32 nMinTop, nMinBottom, nMinLeft, nMinRight;
+    if( RES_POOLPAGE_HTML == nPoolFmtId )
+    {
+        nMinRight = nMinTop = nMinBottom = GetMetricVal( CM_1 );
+        nMinLeft = nMinRight * 2;
+    }
+    else if( MEASURE_METRIC == GetAppLocaleData().getMeasurementSystemEnum() )
+    {
+        nMinTop = nMinBottom = nMinLeft = nMinRight = 1134; //2 Zentimeter
+    }
     else
     {
-        aFrmSize.SetWidth( LONG_MAX );
-        aFrmSize.SetHeight( LONG_MAX );
-        aUL.SetUpper( 0 );
-        aUL.SetLower( 0 );
-        aLR.SetRight( 0 );
-        aLR.SetLeft(  0 );
+        nMinTop = nMinBottom = 1440;    //al la WW: 1Inch
+        nMinLeft = nMinRight = 1800;    //          1,25 Inch
     }
 
-	if ( bSetFmt1 )
-	{
-		rFmt1.SetAttr( aFrmSize );
-		rFmt1.SetAttr( aLR );
-		rFmt1.SetAttr( aUL );
-	}
-	if ( bSetFmt2 )
-	{
-		rFmt2.SetAttr( aFrmSize );
-		rFmt2.SetAttr( aLR );
-		rFmt2.SetAttr( aUL );
-	}
+    //Raender einstellen.
+	SvxLRSpaceItem aLR;
+	SvxULSpaceItem aUL;
+
+    aUL.SetUpper( (USHORT)nMinTop );
+    aUL.SetLower( (USHORT)nMinBottom );
+    aLR.SetRight( nMinRight );
+    aLR.SetLeft( nMinLeft );
+
+	rFmt1.SetAttr( aFrmSize );
+	rFmt1.SetAttr( aLR );
+	rFmt1.SetAttr( aUL );
+
+    rFmt2.SetAttr( aFrmSize );
+	rFmt2.SetAttr( aLR );
+	rFmt2.SetAttr( aUL );
 }
 
 /*************************************************************************
@@ -743,8 +709,7 @@ USHORT SwDoc::MakePageDesc( const String
 	{
 		pNew = new SwPageDesc( rName, GetDfltFrmFmt(), this );
 		//Default-Seitenformat einstellen.
-		lcl_DefaultPageFmt( USHRT_MAX, pNew->GetMaster(), pNew->GetLeft(),
-							  GetPrt(), FALSE );
+        lcl_DefaultPageFmt( USHRT_MAX, pNew->GetMaster(), pNew->GetLeft() );
 
         SvxFrameDirection aFrameDirection = bRegardLanguage ?
             GetDefaultFrameDirection(GetAppLanguage())
@@ -752,10 +717,6 @@ USHORT SwDoc::MakePageDesc( const String
 
 		pNew->GetMaster().SetAttr( SvxFrameDirectionItem(aFrameDirection) );
 		pNew->GetLeft().SetAttr( SvxFrameDirectionItem(aFrameDirection) );
-
-    	if( GetPrt() )
-			pNew->SetLandscape( ORIENTATION_LANDSCAPE ==
-								GetPrt()->GetOrientation() );
 	}
 	aPageDescs.Insert( pNew, aPageDescs.Count() );
 
@@ -799,6 +760,12 @@ void SwDoc::PrtDataChanged()
 {
 //!!!!!!!! Bei Aenderungen hier bitte ggf. InJobSetup im Sw3io mitpflegen
 
+    // --> FME 2005-01-21 #i41075#
+    ASSERT( com::sun::star::document::PrinterIndependentLayout::DISABLED !=
+            IsUseVirtualDevice() ||
+            0 != GetPrt(), "PrtDataChanged will be called recursive!" )
+    // <--
+
 	SwWait *pWait = 0;
 	BOOL bEndAction = FALSE;
 
@@ -990,36 +957,18 @@ void SwDoc::SetPrt( SfxPrinter *pP, sal_
 {
 	ASSERT( pP, "Kein Drucker!" );
 
-	const BOOL bInitPageDesc = pPrt == 0;
-
 	if ( (ULONG) pP != (ULONG) pPrt)
 	{
 		delete pPrt;
 		pPrt = pP;
 	}
-    // OD 05.03.2003 #107870# - first adjust page description, before trigger formatting.
-    if( bInitPageDesc )
-    {
-        // JP 17.04.97: Bug 38924 - falls noch kein Drucker gesetzt war
-        //              und der PageDesc nicht eingelesen wurde
-        //      -> passe an den Drucker an
-        if( pPrt && LONG_MAX == _GetPageDesc( 0 ).GetMaster().GetFrmSize().GetWidth() )
-            _GetPageDesc( 0 ).SetLandscape( ORIENTATION_LANDSCAPE ==
-                                            pPrt->GetOrientation() );
-
-        //MA 11. Mar. 97: Das sollten wir fuer alle Formate tun, weil die
-        //Werte auf LONG_MAX initalisiert sind (spaetes anlegen des Druckers)
-        //und die Reader u.U. "unfertige" Formate stehenlassen.
-        for ( USHORT i = 0; i < GetPageDescCnt(); ++i )
-        {
-            SwPageDesc& rDesc = _GetPageDesc( i );
-            lcl_DefaultPageFmt( rDesc.GetPoolFmtId(), rDesc.GetMaster(),
-                                  rDesc.GetLeft(), pPrt, TRUE );
-        }
-        }
 
-    if ( bCallPrtDataChanged )
-		PrtDataChanged();
+    if ( bCallPrtDataChanged &&
+         // --> FME 2005-01-21 #i41075# Do not call PrtDataChanged() if we do not
+         // use the printer for formatting:
+         com::sun::star::document::PrinterIndependentLayout::DISABLED == IsUseVirtualDevice() )
+        // <--
+        PrtDataChanged();
 }
 
 void SwDoc::SetUseVirtualDevice( short nNew )
@@ -1038,6 +987,16 @@ void SwDoc::SetUseVirtualDevice( short n
                 pVirDev->SetReferenceDevice( VirtualDevice::REFDEV_MODE_MSO1 );
             }
         }
+        else
+        {
+            // --> FME 2005-01-21 #i41075#
+            // We have to take care that a printer exists before calling
+            // PrtDataChanged() in order to prevent that PrtDataChanged()
+            // triggers this funny situation:
+            // GetRevDef() -> GetPrt() -> _GetPrt() ->SetPrt() -> PrtDataChanged()
+            GetPrt( sal_True );
+            // <--
+        }
 
         _SetUseVirtualDevice( nNew );
         PrtDataChanged();
Index: sw/source/core/doc/docnew.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/doc/docnew.cxx,v
retrieving revision 1.49
retrieving revision 1.49.106.1
diff -u -p -u -p -r1.49 -r1.49.106.1
--- sw/source/core/doc/docnew.cxx	27 Nov 2004 11:40:43 -0000	1.49
+++ sw/source/core/doc/docnew.cxx	1 Feb 2005 13:53:20 -0000	1.49.106.1
@@ -305,6 +305,7 @@ SwDoc::SwDoc() :
 	pUpdtFlds( new SwDocUpdtFld() ),
 	pFldTypes( new SwFldTypes() ),
 	pPrt( 0 ),
+    pVirDev( 0 ),
     pPrtData( 0 ),
 	pGlossaryDoc( 0 ),
 	pOutlineRule( 0 ),
@@ -402,15 +403,6 @@ SwDoc::SwDoc() :
 
 	pMacroTable = new SvxMacroTableDtor;
 
-    /*
-     * Builds and sets the virtual device
-     */
-    pVirDev = new VirtualDevice( 1 );
-    pVirDev->SetReferenceDevice(VirtualDevice::REFDEV_MODE_MSO1);
-    MapMode aMapMode( pVirDev->GetMapMode() );
-    aMapMode.SetMapUnit( MAP_TWIP );
-    pVirDev->SetMapMode( aMapMode );
-
 	/*
 	 * Defaultformate und DefaultFormatsammlungen (FmtColl)
 	 * werden an der Position 0 in das jeweilige Array eingetragen.
@@ -490,7 +482,7 @@ SwDoc::SwDoc() :
 	short nUseVirtualDev = aOptions.IsUsePrtDevice()
 		? PrinterIndependentLayout::DISABLED
 		: PrinterIndependentLayout::HIGH_RESOLUTION;
-	SetUseVirtualDevice( nUseVirtualDev );
+	_SetUseVirtualDevice( nUseVirtualDev );
 	SetParaSpaceMax( aOptions.IsAddSpacing(), aOptions.IsAddSpacingAtPages() );
 	SetAddParaSpacingToTableCells( aOptions.IsAddTableSpacing() );
 	SetUseFormerLineSpacing( aOptions.IsUseLineSpacing() );
@@ -743,9 +735,9 @@ void SwDoc::SetJobsetup( const JobSetup 
 			bDataChanged = TRUE;
 		}
 	}
-    if ( com::sun::star::document::PrinterIndependentLayout::DISABLED == IsUseVirtualDevice() &&
-         bDataChanged )
-		PrtDataChanged();
+    if ( bDataChanged &&
+         com::sun::star::document::PrinterIndependentLayout::DISABLED == IsUseVirtualDevice() )
+        PrtDataChanged();
 }
 
 //---------------------------------------------------
@@ -800,6 +792,10 @@ SfxPrinter& SwDoc::_GetPrt() const
 {
     ASSERT( ! pPrt, "Do not call _GetPrt(), call GetPrt() instead" )
 
+#if OSL_DEBUG_LEVEL > 1
+    ASSERT( false, "Printer will be created!" )
+#endif
+
     // wir erzeugen einen default SfxPrinter.
 	// Das ItemSet wird vom Sfx geloescht!
 	SfxItemSet *pSet = new SfxItemSet( ((SwDoc*)this)->GetAttrPool(),
Index: sw/source/core/doc/poolfmt.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/doc/poolfmt.cxx,v
retrieving revision 1.35
retrieving revision 1.35.48.1
diff -u -p -u -p -r1.35 -r1.35.48.1
--- sw/source/core/doc/poolfmt.cxx	3 Jan 2005 17:18:48 -0000	1.35
+++ sw/source/core/doc/poolfmt.cxx	1 Feb 2005 13:53:20 -0000	1.35.48.1
@@ -234,34 +234,13 @@ long lcl_GetRightMargin( SwDoc& rDoc )
 {
 	// sorge dafuer, dass die Druckereinstellungen in die Standard-
 	// Seitenvorlage uebernommen wurden.
-	long nLeft, nRight, nWidth;
-	const SfxPrinter* pPrt = rDoc.GetPrt( !rDoc.IsInReading() );
-	if( !pPrt )
-	{
-		SvxPaper ePaper;
-		if( MEASURE_METRIC == GetAppLocaleData().getMeasurementSystemEnum() )
-		{
-			ePaper = SVX_PAPER_A4;
-			nLeft = nRight = 1134;	//2 Zentimeter
-		}
-		else
-		{
-			ePaper = SVX_PAPER_LEGAL;
-			nLeft = nRight = 1800;	// 1,25 Inch
-		}
-
-		nWidth = SvxPaperInfo::GetPaperSize( ePaper ).Width();
-	}
-	else
-	{
-		const SwFrmFmt& rPgDscFmt =
+    const SwFrmFmt& rPgDscFmt =
             const_cast<const SwDoc *>(&rDoc)->GetPageDesc( 0 ).GetMaster();
-		const SvxLRSpaceItem& rLR = rPgDscFmt.GetLRSpace();
-		nLeft = rLR.GetLeft();
-		nRight = rLR.GetRight();
-		nWidth = rPgDscFmt.GetFrmSize().GetWidth();
-	}
-	return nWidth - nLeft - nRight;
+    const SvxLRSpaceItem& rLR = rPgDscFmt.GetLRSpace();
+    const long nLeft = rLR.GetLeft();
+    const long nRight = rLR.GetRight();
+    const long nWidth = rPgDscFmt.GetFrmSize().GetWidth();
+    return nWidth - nLeft - nRight;
 }
 
 void SetAllScriptItem( SfxItemSet& rSet, const SfxPoolItem& rItem )
Index: sw/source/core/view/vnew.cxx
===================================================================
RCS file: /cvs/sw/sw/source/core/view/vnew.cxx,v
retrieving revision 1.19
retrieving revision 1.19.114.1
diff -u -p -u -p -r1.19 -r1.19.114.1
--- sw/source/core/view/vnew.cxx	16 Nov 2004 10:24:29 -0000	1.19
+++ sw/source/core/view/vnew.cxx	1 Feb 2005 13:53:21 -0000	1.19.114.1
@@ -68,6 +68,9 @@
 #ifndef _RTL_LOGFILE_HXX_
 #include <rtl/logfile.hxx>
 #endif
+#ifndef _COM_SUN_STAR_DOCUMENT_PRINTERINDEPENDENTLAYOUT_HPP_
+#include <com/sun/star/document/PrinterIndependentLayout.hpp>
+#endif
 
 #ifndef _DOC_HXX
 #include <doc.hxx>
@@ -118,6 +121,7 @@
 #include <accessibilityoptions.hxx>
 #endif
 
+
 /*************************************************************************
 |*
 |*	ViewShell::Init()
@@ -171,11 +175,13 @@ void ViewShell::Init( const SwViewOption
 
 	RTL_LOGFILE_CONTEXT_TRACE( aLog, "View::Init - before InitPrt" );
 
-    // Setup the printer. This has to be done even if we use the virtual
-    // device for formatting, because the default page format is obtained
-    // from the printer
-    if( GetPrt( ! pDoc->IsBrowseMode() ) )
+    // --> FME 2005-01-21 #i41075#
+    // Only setup the printer if we need one:
+    if( GetPrt( !pDoc->IsBrowseMode() &&
+                com::sun::star::document::PrinterIndependentLayout::DISABLED ==
+                pDoc->IsUseVirtualDevice() ) )
         InitPrt( GetPrt() );
+    // <--
 
 	RTL_LOGFILE_CONTEXT_TRACE( aLog, "View::Init - after InitPrt" );
 
@@ -203,7 +209,7 @@ void ViewShell::Init( const SwViewOption
             MakeDrawView();
         pOpt->SetFormView( ! GetDrawView()->IsDesignMode() );
     }
-    // <-- #i31958# 
+    // <-- #i31958#
 }
 
 /*************************************************************************
Index: svx/source/dialog/page.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/dialog/page.cxx,v
retrieving revision 1.26
retrieving revision 1.25.482.2
diff -u -p -u -p -r1.26 -r1.25.482.2
--- svx/source/dialog/page.cxx	21 Jan 2005 16:47:18 -0000	1.26
+++ svx/source/dialog/page.cxx	1 Feb 2005 17:20:14 -0000	1.25.482.2
@@ -141,14 +141,14 @@
 #include <svtools/stritem.hxx>
 #endif
 
-#include "svxids.hrc" //CHINA001 
-#ifndef _SFXSLSTITM_HXX //CHINA001 
-#include <svtools/slstitm.hxx> //CHINA001 
-#endif //CHINA001 
-#ifndef _AEITEM_HXX //CHINA001 
-#include <svtools/aeitem.hxx> //CHINA001 
-#endif //CHINA001 
-#include <sfx2/request.hxx> //CHINA001 
+#include "svxids.hrc" //CHINA001
+#ifndef _SFXSLSTITM_HXX //CHINA001
+#include <svtools/slstitm.hxx> //CHINA001
+#endif //CHINA001
+#ifndef _AEITEM_HXX //CHINA001
+#include <svtools/aeitem.hxx> //CHINA001
+#endif //CHINA001
+#include <sfx2/request.hxx> //CHINA001
 // configuration helper =======================================================
 
 /** Helper to get a configuration setting.
@@ -283,8 +283,15 @@ BOOL IsEqualSize_Impl( const SvxSizeItem
 struct SvxPage_Impl
 {
 	MarginPosition	m_nPos;
+    Printer*        mpDefPrinter;
+    bool            mbDelPrinter;
 
-	SvxPage_Impl() : m_nPos( 0 ) {}
+    SvxPage_Impl() :
+        m_nPos( 0 ),
+        mpDefPrinter( 0 ),
+        mbDelPrinter( false ) {}
+
+    ~SvxPage_Impl() { if ( mbDelPrinter ) delete mpDefPrinter; }
 };
 
 // class SvxPageDescPage --------------------------------------------------
@@ -412,35 +419,30 @@ SvxPageDescPage::SvxPageDescPage( Window
 	SetFieldUnit( aPaperWidthEdit, eFUnit );
 	SetFieldUnit( aPaperHeightEdit, eFUnit );
 
-	Printer* pDefPrinter = 0;
-	BOOL bPrinterDel = FALSE;
-
-	if ( SfxViewShell::Current() && SfxViewShell::Current()->GetPrinter() )
-		pDefPrinter = (Printer*)SfxViewShell::Current()->GetPrinter();
+    if ( SfxViewShell::Current() && SfxViewShell::Current()->GetPrinter() )
+        pImpl->mpDefPrinter = (Printer*)SfxViewShell::Current()->GetPrinter();
 	else
 	{
-		pDefPrinter = new Printer;
-		bPrinterDel = TRUE;
+        pImpl->mpDefPrinter = new Printer;
+        pImpl->mbDelPrinter = true;
 	}
 
-	MapMode aOldMode = pDefPrinter->GetMapMode();
-	pDefPrinter->SetMapMode( MAP_TWIP );
+    MapMode aOldMode = pImpl->mpDefPrinter->GetMapMode();
+    pImpl->mpDefPrinter->SetMapMode( MAP_TWIP );
 
 	// First- und Last-Werte f"ur die R"ander setzen
-	Size aPaperSize = pDefPrinter->GetPaperSize();
-	Size aPrintSize = pDefPrinter->GetOutputSize();
+    Size aPaperSize = pImpl->mpDefPrinter->GetPaperSize();
+    Size aPrintSize = pImpl->mpDefPrinter->GetOutputSize();
 	/*
 	 * einen Punkt ( 0,0 ) in logische Koordinaten zu konvertieren,
 	 * sieht aus wie Unsinn; ist aber sinnvoll, wenn der Ursprung des
 	 * Koordinatensystems verschoben ist.
 	 */
-	Point aPrintOffset = pDefPrinter->GetPageOffset() -
-						 pDefPrinter->PixelToLogic( Point() );
-	pDefPrinter->SetMapMode( aOldMode );
+    Point aPrintOffset = pImpl->mpDefPrinter->GetPageOffset() -
+                         pImpl->mpDefPrinter->PixelToLogic( Point() );
+    pImpl->mpDefPrinter->SetMapMode( aOldMode );
 
-	if ( bPrinterDel )
-		delete pDefPrinter;
-	long nOffset = !aPrintOffset.X() && !aPrintOffset.Y() ? 0 : PRINT_OFFSET;
+    long nOffset = !aPrintOffset.X() && !aPrintOffset.Y() ? 0 : PRINT_OFFSET;
 	aLeftMarginEdit.SetFirst( aLeftMarginEdit.Normalize( aPrintOffset.X() ), FUNIT_TWIP );
 	nFirstLeftMargin = aLeftMarginEdit.GetFirst();
 	aRightMarginEdit.SetFirst( aRightMarginEdit.Normalize(
@@ -550,21 +552,9 @@ void SvxPageDescPage::Reset( const SfxIt
 			(USHORT)ConvertLong_Impl( (long)rULSpace.GetLower(), eUnit ) );
 	}
 
-	// Printer f"ur die Sch"achte besorgen
-	Printer* pDefPrinter = 0;
-	BOOL bPrinterDel = FALSE;
-
-	if ( SfxViewShell::Current() && SfxViewShell::Current()->GetPrinter() )
-		pDefPrinter = (Printer*)SfxViewShell::Current()->GetPrinter();
-	else
-	{
-		pDefPrinter = new Printer;
-		bPrinterDel = TRUE;
-	}
-
-	// allgemeine Seitendaten
+    // allgemeine Seitendaten
 	SvxNumType eNumType = SVX_ARABIC;
-	bLandscape = ( pDefPrinter->GetOrientation() == ORIENTATION_LANDSCAPE );
+    bLandscape = ( pImpl->mpDefPrinter->GetOrientation() == ORIENTATION_LANDSCAPE );
 	USHORT nUse = (USHORT)SVX_PAGE_ALL;
 	pItem = GetItem( rSet, SID_ATTR_PAGE );
 
@@ -593,7 +583,7 @@ void SvxPageDescPage::Reset( const SfxIt
 	{
 		nPaperBin = ( (const SvxPaperBinItem*)pItem )->GetValue();
 
-		if ( nPaperBin >= pDefPrinter->GetPaperBinCount() )
+        if ( nPaperBin >= pImpl->mpDefPrinter->GetPaperBinCount() )
 			nPaperBin = PAPERBIN_PRINTER_SETTINGS;
 	}
 
@@ -602,21 +592,21 @@ void SvxPageDescPage::Reset( const SfxIt
 	if ( PAPERBIN_PRINTER_SETTINGS	== nPaperBin )
 		aBinName = SVX_RESSTR( RID_SVXSTR_PAPERBIN_SETTINGS );
 	else
-		aBinName = pDefPrinter->GetPaperBinName( (USHORT)nPaperBin );
+        aBinName = pImpl->mpDefPrinter->GetPaperBinName( (USHORT)nPaperBin );
 
 	USHORT nEntryPos = aPaperTrayBox.InsertEntry( aBinName );
 	aPaperTrayBox.SetEntryData( nEntryPos, (void*)(ULONG)nPaperBin );
 	aPaperTrayBox.SelectEntry( aBinName );
 
 	// Size rausholen
-	Size aPaperSize = SvxPaperInfo::GetPaperSize( pDefPrinter );
+    Size aPaperSize = SvxPaperInfo::GetPaperSize( pImpl->mpDefPrinter );
 	pItem = GetItem( rSet, SID_ATTR_PAGE_SIZE );
 
 	if ( pItem )
 		aPaperSize = ( (const SvxSizeItem*)pItem )->GetSize();
 
 	FASTBOOL bOrientationSupport =
-		pDefPrinter->HasSupport( SUPPORT_SET_ORIENTATION );
+        pImpl->mpDefPrinter->HasSupport( SUPPORT_SET_ORIENTATION );
 #ifdef OS2
 	// unter OS/2 wird bei HasSupport() immer TRUE returned
 	// aber nur als Dummy, deshalb FALSE
@@ -666,11 +656,7 @@ void SvxPageDescPage::Reset( const SfxIt
 	// aktuelles Papierformat selektieren
 	aPaperSizeBox.SelectEntryPos( nActPos );
 
-	// ggf. angelegten Printer wieder l"oschen
-	if ( bPrinterDel )
-		delete pDefPrinter;
-
-	// Applikationsspezifisch
+    // Applikationsspezifisch
 
 	switch ( eMode )
 	{
@@ -1044,16 +1030,6 @@ IMPL_LINK( SvxPageDescPage, PaperBinHdl_
 	if ( aPaperTrayBox.GetEntryCount() > 1 )
 		// schon gef"ullt
 		return 0;
-	Printer* pDefPrinter = 0;
-	BOOL bPrinterDel = FALSE;
-
-	if ( SfxViewShell::Current() && SfxViewShell::Current()->GetPrinter() )
-		pDefPrinter = (Printer*)SfxViewShell::Current()->GetPrinter();
-	else
-	{
-		pDefPrinter = new Printer;
-		bPrinterDel = TRUE;
-	}
 
 	// Schacht-Box initialisieren
 	String aOldName = aPaperTrayBox.GetSelectEntry();
@@ -1064,11 +1040,11 @@ IMPL_LINK( SvxPageDescPage, PaperBinHdl_
 	aPaperTrayBox.SetEntryData( nEntryPos,
 		(void*)(ULONG)PAPERBIN_PRINTER_SETTINGS );
 	String aPaperBin( SVX_RES( RID_SVXSTR_PAPERBIN ) );
-	USHORT nBinCount = pDefPrinter->GetPaperBinCount();
+    USHORT nBinCount = pImpl->mpDefPrinter->GetPaperBinCount();
 
 	for ( USHORT i = 0; i < nBinCount; ++i )
 	{
-		String aName = pDefPrinter->GetPaperBinName(i);
+        String aName = pImpl->mpDefPrinter->GetPaperBinName(i);
 
 		if ( !aName.Len() )
 		{
@@ -1082,9 +1058,7 @@ IMPL_LINK( SvxPageDescPage, PaperBinHdl_
 	aPaperTrayBox.SelectEntry( aOldName );
 	aPaperTrayBox.SetUpdateMode( TRUE );
 
-	if ( bPrinterDel )
-		delete pDefPrinter;
-	return 0;
+    return 0;
 }
 
 // -----------------------------------------------------------------------
@@ -1217,43 +1191,29 @@ IMPL_LINK( SvxPageDescPage, SwapOrientat
 
 void SvxPageDescPage::SwapFirstValues_Impl( FASTBOOL bSet )
 {
-	Printer* pDefPrinter = 0;
-	BOOL bPrinterDel = FALSE;
-
-	if ( SfxViewShell::Current() && SfxViewShell::Current()->GetPrinter() )
-		pDefPrinter = (Printer*)SfxViewShell::Current()->GetPrinter();
-	else
-	{
-		pDefPrinter = new Printer;
-		bPrinterDel = TRUE;
-	}
-
-	MapMode aOldMode = pDefPrinter->GetMapMode();
+    MapMode aOldMode = pImpl->mpDefPrinter->GetMapMode();
 	Orientation	eOri = ORIENTATION_PORTRAIT;
 
 	if ( bLandscape )
 		eOri = ORIENTATION_LANDSCAPE;
-	Orientation	eOldOri = pDefPrinter->GetOrientation();
-	pDefPrinter->SetOrientation( eOri );
-	pDefPrinter->SetMapMode( MAP_TWIP );
+    Orientation eOldOri = pImpl->mpDefPrinter->GetOrientation();
+    pImpl->mpDefPrinter->SetOrientation( eOri );
+    pImpl->mpDefPrinter->SetMapMode( MAP_TWIP );
 
 	// First- und Last-Werte f"ur die R"ander setzen
-	Size aPaperSize = pDefPrinter->GetPaperSize();
-	Size aPrintSize = pDefPrinter->GetOutputSize();
+    Size aPaperSize = pImpl->mpDefPrinter->GetPaperSize();
+    Size aPrintSize = pImpl->mpDefPrinter->GetOutputSize();
 	/*
 	 * einen Punkt ( 0,0 ) in logische Koordinaten zu konvertieren,
 	 * sieht aus wie Unsinn; ist aber sinnvoll, wenn der Ursprung des
 	 * Koordinatensystems verschoben ist.
 	 */
-	Point aPrintOffset = pDefPrinter->GetPageOffset() -
-						 pDefPrinter->PixelToLogic( Point() );
-	pDefPrinter->SetMapMode( aOldMode );
-	pDefPrinter->SetOrientation( eOldOri );
-
-	if ( bPrinterDel )
-		delete pDefPrinter;
+    Point aPrintOffset = pImpl->mpDefPrinter->GetPageOffset() -
+                         pImpl->mpDefPrinter->PixelToLogic( Point() );
+    pImpl->mpDefPrinter->SetMapMode( aOldMode );
+    pImpl->mpDefPrinter->SetOrientation( eOldOri );
 
-	long nSetL = aLeftMarginEdit.Denormalize(
+    long nSetL = aLeftMarginEdit.Denormalize(
 					aLeftMarginEdit.GetValue( FUNIT_TWIP ) );
 	long nSetR = aRightMarginEdit.Denormalize(
 					aRightMarginEdit.GetValue( FUNIT_TWIP ) );
@@ -1829,7 +1789,7 @@ bool SvxPageDescPage::IsMarginOutOfRange
 	return bRet;
 }
 
-void SvxPageDescPage::PageCreated (SfxAllItemSet aSet) //add CHINA001 
+void SvxPageDescPage::PageCreated (SfxAllItemSet aSet) //add CHINA001
 {
 	SFX_ITEMSET_ARG (&aSet,pModeItem,SfxAllEnumItem,SID_ENUM_PAGE_MODE,sal_False);
 	SFX_ITEMSET_ARG (&aSet,pPaperStartItem,SfxAllEnumItem,SID_PAPER_START,sal_False);
