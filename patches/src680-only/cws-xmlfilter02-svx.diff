--- svx/inc/svx/ruler.hxx	11 Apr 2007 16:06:52 -0000	1.2
+++ svx/inc/svx/ruler.hxx	29 Nov 2007 14:21:43 -0000	1.2.48.1
@@ -281,6 +281,9 @@ public:
 	BOOL IsActive() const { return bActive; }
 
 	void ForceUpdate() { Update(); }
+
+    //#i24363# tab stops relative to indent
+    void SetTabsRelativeToIndent( BOOL bRel = TRUE );
 };
 
 #endif
--- svx/source/dialog/svxruler.cxx	27 Jun 2007 17:42:41 -0000	1.37
+++ svx/source/dialog/svxruler.cxx	29 Nov 2007 14:22:03 -0000	1.37.50.1
@@ -244,6 +244,8 @@ struct SvxRuler_Impl  {
 									  // Muesste vielleicht fuer weitere Werte
 									  // aufgebohrt werden
     BOOL bIsTableRows : 1;      // pColumnItem contains table rows instead of columns
+    //#i24363# tab stops relative to indent
+    BOOL bIsTabsRelativeToIndent : 1; // Tab stops relative to paragraph indent?
     SvxRuler_Impl() :
     pPercBuf(0), pBlockBuf(0),
     nPercSize(0), nTotalDist(0),
@@ -255,7 +257,8 @@ struct SvxRuler_Impl  {
     nIdx(0),
     nColLeftPix(0), nColRightPix(0),
 
-    bIsTableRows(FALSE)
+    bIsTableRows(FALSE),
+    bIsTabsRelativeToIndent(TRUE)
 	{
 	}
 	~SvxRuler_Impl()
@@ -1229,8 +1232,13 @@ void SvxRuler::UpdateTabs()
         long nLeftFrameMargin = GetLeftFrameMargin();
         long nRightFrameMargin = GetRightFrameMargin();
 
-		const long lParaIndent =
-			nLeftFrameMargin + pParaItem->GetTxtLeft();
+    //#i24363# tab stops relative to indent
+        const long nParaItemTxtLeft = pRuler_Imp->bIsTabsRelativeToIndent ?
+                                      pParaItem->GetTxtLeft() :
+                                      0;
+
+        const long lParaIndent = nLeftFrameMargin + nParaItemTxtLeft;
+
 		const long lLastTab =
 			 pTabStopItem->Count()?
 			  ConvertHPosPixel((*pTabStopItem)[pTabStopItem->Count()-1].GetTabPos()): 0;
@@ -1256,7 +1264,8 @@ void SvxRuler::UpdateTabs()
 
 		nTabCount = 0;
 		USHORT j;
-		const long lRightPixMargin = ConvertSizePixel(nRightFrameMargin - pParaItem->GetTxtLeft());
+        //#i24363# tab stops relative to indent
+        const long lRightPixMargin = ConvertSizePixel(nRightFrameMargin - nParaItemTxtLeft );
 		const long lParaIndentPix = ConvertSizePixel(lParaIndent);
 		for(j = 0; j < pTabStopItem->Count(); ++j)
 		{
@@ -2496,12 +2505,27 @@ void SvxRuler::ApplyTabs()
 		else
 		{
 			if(bRTL)
+            {
+                //#i24363# tab stops relative to indent
+                const long nTmpLeftIndent = pRuler_Imp->bIsTabsRelativeToIndent ?
+                                            GetLeftIndent() :
+                                            ConvertHPosPixel( GetRightFrameMargin() + lAppNullOffset );
+
 				aTabStop.GetTabPos() = PixelHAdjust(
-					ConvertHPosLogic(GetLeftIndent() - pTabs[nCoreIdx+TAB_GAP].nPos) - lAppNullOffset,
+                    ConvertHPosLogic( nTmpLeftIndent - pTabs[nCoreIdx+TAB_GAP].nPos) - lAppNullOffset,
 																						aTabStop.GetTabPos());
+            }
 			else
+            {
+                //#i24363# tab stops relative to indent
+                const long nTmpLeftIndent = pRuler_Imp->bIsTabsRelativeToIndent ?
+                                            GetLeftIndent() :
+                                            0;
+
 				aTabStop.GetTabPos() = PixelHAdjust(
-					ConvertHPosLogic(pTabs[nCoreIdx+TAB_GAP].nPos - GetLeftIndent()) - lAppNullOffset, aTabStop.GetTabPos());
+                    ConvertHPosLogic( pTabs[nCoreIdx+TAB_GAP].nPos - nTmpLeftIndent ) - lAppNullOffset,
+                                                                                         aTabStop.GetTabPos() );
+            }
 		}
 		pTabStopItem->Remove(nCoreIdx);
 		pTabStopItem->Insert(aTabStop);
@@ -2805,10 +2829,18 @@ void __EXPORT SvxRuler::Click()
 		{
 			//convert position in left-to-right text
 			long nTabPos;
+    //#i24363# tab stops relative to indent
 			if(bRTL)
-				nTabPos = GetLeftIndent() - lPos;
-			else
-				nTabPos = lPos - GetLeftIndent();
+                nTabPos = ( pRuler_Imp->bIsTabsRelativeToIndent ?
+                            GetLeftIndent() :
+                            ConvertHPosPixel( GetRightFrameMargin() + lAppNullOffset ) ) -
+                          lPos;
+            else
+                nTabPos = lPos -
+                          ( pRuler_Imp->bIsTabsRelativeToIndent ?
+                            GetLeftIndent() :
+                            0 );
+
 			SvxTabStop aTabStop(ConvertHPosLogic(nTabPos),
 								ToAttrTab_Impl(nDefTabType));
 			pTabStopItem->Insert(aTabStop);
@@ -3906,4 +3938,11 @@ long SvxRuler::CalcPropMaxRight(USHORT n
 		}
 	}
 }
+/*-- 29.11.2007 08:24:23---------------------------------------------------
+    //#i24363# tab stops relative to indent
+  -----------------------------------------------------------------------*/
+void SvxRuler::SetTabsRelativeToIndent( BOOL bRel )
+{
+    pRuler_Imp->bIsTabsRelativeToIndent = bRel;
+}
 
--- svx/source/unodraw/unoshap2.cxx	18 Jul 2007 10:58:28 -0000	1.65
+++ svx/source/unodraw/unoshap2.cxx	24 Jul 2007 19:18:00 -0000	1.51.276.9
@@ -1735,6 +1735,15 @@ void SAL_CALL SvxGraphicObject::setPrope
 				}
 			}
 		}
+		else if( aValue.getValueType() == INTERFACE_TYPE( graphic::XGraphic ))
+		{
+			Reference< graphic::XGraphic > xGraphic( aValue, UNO_QUERY );
+			if( xGraphic.is() )
+			{
+				Graphic aGraphic( xGraphic );
+				((SdrGrafObj*)mpObj.get())->SetGraphic(aGraphic);
+			}
+		}
 	}
 	else if( mpObj.is() && aPropertyName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM(UNO_NAME_GRAPHOBJ_GRAFURL)))
 	{
@@ -2157,6 +2166,7 @@ void SAL_CALL SvxCustomShape::setPropert
 
 	if ( bCustomShapeGeometry )
 	{
+		((SdrObjCustomShape*)pObject)->MergeDefaultAttributes(0);
 		Rectangle aRect( pObject->GetSnapRect() );
 
 		// #i38892#
--- svx/source/unodraw/unoshap4.cxx	27 Jun 2007 19:26:50 -0000	1.30
+++ svx/source/unodraw/unoshap4.cxx	6 Sep 2007 21:36:27 -0000	1.30.50.2
@@ -166,6 +166,22 @@ void SAL_CALL SvxOle2Shape::setPropertyV
 
 		throw IllegalArgumentException();
 	}
+	else if( aPropertyName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( "Graphic" ) ) )
+	{
+		uno::Reference< graphic::XGraphic > xGraphic;
+		if( aValue >>= xGraphic )
+		{
+			SdrOle2Obj* pOle = dynamic_cast< SdrOle2Obj* >( mpObj.get() );
+			if( pOle )
+			{
+				GraphicObject aGrafObj( xGraphic );
+				const Graphic aGraphic( aGrafObj.GetGraphic() );
+				pOle->SetGraphicToObj( aGraphic, rtl::OUString() );
+			}
+			return;
+		}
+		throw IllegalArgumentException();
+	}
     else if( aPropertyName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( UNO_NAME_OLE2_PERSISTNAME ) ) )
     {
 		OUString aPersistName;
--- svx/source/unodraw/unoshape.cxx	28 Aug 2007 13:45:51 -0000	1.164
+++ svx/source/unodraw/unoshape.cxx	31 Oct 2007 15:35:15 -0000	1.164.36.1
@@ -3016,7 +3016,6 @@ void SAL_CALL SvxShape::setPropertyValue
 			catch( beans::UnknownPropertyException& e )
 			{
 				(void)e;
-				DBG_ERROR("svx::SvxShape::setPropertyValues(), unknown property!" );
 			}
             catch( uno::Exception& ex )
             {
@@ -3039,7 +3038,6 @@ void SAL_CALL SvxShape::setPropertyValue
 			catch( beans::UnknownPropertyException& e )
 			{
 				(void)e;
-				DBG_ERROR("svx::SvxShape::setPropertyValues(), unknown property!" );
 			}
             catch( uno::Exception& ex )
             {
--- svx/source/xoutdev/xattrbmp.cxx	27 Jun 2007 19:33:53 -0000	1.16
+++ svx/source/xoutdev/xattrbmp.cxx	24 Jul 2007 19:23:25 -0000	1.13.276.3
@@ -36,6 +36,7 @@
 // MARKER(update_precomp.py): autogen include statement, do not remove
 #include "precompiled_svx.hxx"
 #include <com/sun/star/awt/XBitmap.hpp>
+#include <com/sun/star/graphic/XGraphic.hpp>
 #include <tools/stream.hxx>
 #include <vcl/window.hxx>
 #include <vcl/virdev.hxx>
@@ -802,6 +803,7 @@ sal_Bool XFillBitmapItem::PutValue( cons
     ::rtl::OUString aName;
     ::rtl::OUString aURL;
     ::com::sun::star::uno::Reference< ::com::sun::star::awt::XBitmap > xBmp;
+    ::com::sun::star::uno::Reference< ::com::sun::star::graphic::XGraphic > xGraphic;
 
     bool bSetName   = false;
     bool bSetURL    = false;
@@ -812,7 +814,11 @@ sal_Bool XFillBitmapItem::PutValue( cons
     else if( nMemberId == MID_GRAFURL )
 		bSetURL = (rVal >>= aURL);
 	else if( nMemberId == MID_BITMAP )
+	{
         bSetBitmap = (rVal >>= xBmp);
+		if ( !bSetBitmap )
+			bSetBitmap = (rVal >>= xGraphic );
+	}
     else
     {
         DBG_ASSERT( nMemberId == 0, "invalid member-id" );
@@ -843,8 +849,17 @@ sal_Bool XFillBitmapItem::PutValue( cons
     }
     if( bSetBitmap )
     {
+		Bitmap aInput;
+		if ( xBmp.is() )
+		{
         BitmapEx aInputEx( VCLUnoHelper::GetBitmap( xBmp ) );
-        Bitmap aInput( aInputEx.GetBitmap() );
+		    aInput = aInputEx.GetBitmap();
+		}
+		else if ( xGraphic.is() )
+		{
+			Graphic aGraphic( xGraphic );
+		    aInput = aGraphic.GetBitmap();
+		}
 
         // note: aXOBitmap is the member bitmap
         aXOBitmap.SetBitmap( aInput );
