Index: framework/inc/threadhelp/lockhelper.hxx
===================================================================
RCS file: /cvs/framework/framework/inc/threadhelp/lockhelper.hxx,v
retrieving revision 1.2
retrieving revision 1.2.188.1
diff -u -p -u -r1.2 -r1.2.188.1
--- framework/inc/threadhelp/lockhelper.hxx	26 Jun 2001 05:28:51 -0000	1.2
+++ framework/inc/threadhelp/lockhelper.hxx	24 Nov 2003 14:03:46 -0000	1.2.188.1
@@ -222,6 +222,7 @@ class LockHelper : public  IMutex
         mutable ::osl::Mutex*   m_pOwnMutex             ;
         mutable ::vos::IMutex*  m_pSolarMutex           ;
         mutable ::osl::Mutex*   m_pShareableOslMutex    ;
+        mutable sal_Bool        m_bDummySolarMutex      ;
 };
 
 }		//	namespace framework
Index: framework/source/threadhelp/lockhelper.cxx
===================================================================
RCS file: /cvs/framework/framework/source/threadhelp/lockhelper.cxx,v
retrieving revision 1.2
retrieving revision 1.2.188.1
diff -u -p -u -r1.2 -r1.2.188.1
--- framework/source/threadhelp/lockhelper.cxx	19 Jun 2001 08:25:36 -0000	1.2
+++ framework/source/threadhelp/lockhelper.cxx	24 Nov 2003 14:03:49 -0000	1.2.188.1
@@ -122,6 +122,7 @@ LockHelper::LockHelper( ::vos::IMutex* p
     ,   m_pSolarMutex       ( NULL )
     ,   m_pFairRWLock       ( NULL )
     ,   m_pShareableOslMutex( NULL )
+    ,   m_bDummySolarMutex  ( sal_False )
 {
     m_eLockType = implts_getLockType();
     switch( m_eLockType )
@@ -134,7 +135,8 @@ LockHelper::LockHelper( ::vos::IMutex* p
         case E_SOLARMUTEX   :   {
                                     if( pSolarMutex == NULL )
                                     {
-                                        m_pSolarMutex = new ::vos::OMutex;
+                                        m_pSolarMutex      = new ::vos::OMutex;
+                                        m_bDummySolarMutex = sal_True;
                                     }
                                     else
                                     {
@@ -184,6 +186,11 @@ LockHelper::~LockHelper()
     }
     if( m_pSolarMutex != NULL )
     {
+        if (m_bDummySolarMutex)
+        {
+            delete static_cast<vos::OMutex*>(m_pSolarMutex);
+            m_bDummySolarMutex = sal_False;
+        }
         m_pSolarMutex = NULL;
     }
     if( m_pFairRWLock != NULL )
