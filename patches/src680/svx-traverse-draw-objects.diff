--- svx/inc/svx/svdmark.hxx	2007-04-11 18:21:43.000000000 +0200
+++ svx/inc/svx/svdmark.hxx	2007-06-07 16:37:09.000000000 +0200
@@ -69,7 +69,7 @@ class SdrUShortCont 
 	sal_Bool											mbSorted;
 
 private:
-	void CheckSort(sal_uInt32 nPos);
+	void CheckSort(ULONG nPos);
 
 public:
 	SdrUShortCont(sal_uInt16 nBlock, sal_uInt16 nInit, sal_uInt16 nResize)
@@ -115,9 +115,9 @@ public:
 		}
 	}
 
-	void Insert(sal_uInt16 nElem, sal_uInt32 nPos = CONTAINER_APPEND) 
+	void Insert(sal_uInt16 nElem, ULONG nPos = CONTAINER_APPEND) 
 	{ 
-		maArray.Insert((void*)sal_uInt32(nElem),nPos); 
+		maArray.Insert((void*)ULONG(nElem),nPos); 
 
 		if(mbSorted) 
 		{
@@ -125,14 +125,14 @@ public:
 		}
 	}
 
-	void Remove(sal_uInt32 nPos) 
+	void Remove(ULONG nPos) 
 	{ 
 		maArray.Remove(nPos); 
 	}
 
-	void Replace(sal_uInt16 nElem, sal_uInt32 nPos)
+	void Replace(sal_uInt16 nElem, ULONG nPos)
 	{ 
-		maArray.Replace((void*)sal_uInt32(nElem), nPos); 
+		maArray.Replace((void*)ULONG(nElem), nPos); 
 
 		if(mbSorted)
 		{
@@ -140,24 +140,24 @@ public:
 		}
 	}
 
-	sal_uInt16 GetObject(sal_uInt32 nPos) const 
+	sal_uInt16 GetObject(ULONG nPos) const 
 	{ 
 		return sal_uInt16(sal_uIntPtr(maArray.GetObject(nPos))); 
 	}
 
-	sal_uInt32 GetPos(sal_uInt16 nElem) const
+	ULONG GetPos(sal_uInt16 nElem) const
 	{ 
-		return maArray.GetPos((void*)(sal_uInt32)nElem); 
+		return maArray.GetPos((void*)(ULONG)nElem); 
 	}
 
-	sal_uInt32 GetCount() const
+	ULONG GetCount() const
 	{ 
 		return maArray.Count(); 
 	}
 
 	sal_Bool Exist(sal_uInt16 nElem) const
 	{ 
-		return (CONTAINER_ENTRY_NOTFOUND != maArray.GetPos((void*)(sal_uInt32)nElem)); 
+		return (CONTAINER_ENTRY_NOTFOUND != maArray.GetPos((void*)(ULONG)nElem)); 
 	}
 };
 
@@ -338,20 +338,20 @@ public:
 		mbSorted = sal_False; 
 	}
 
-	sal_uInt32 GetMarkCount() const 
+	ULONG GetMarkCount() const 
 	{ 
 		return maList.Count(); 
 	}
 
-	SdrMark* GetMark(sal_uInt32 nNum) const 
+	SdrMark* GetMark(ULONG nNum) const 
 	{ 
 		return (SdrMark*)(maList.GetObject(nNum)); 
 	}
 
-	sal_uInt32 FindObject(const SdrObject* pObj) const;
+	ULONG FindObject(const SdrObject* pObj) const;
 	void InsertEntry(const SdrMark& rMark, sal_Bool bChkSort = sal_True);
-	void DeleteMark(sal_uInt32 nNum);
-	void ReplaceMark(const SdrMark& rNewMark, sal_uInt32 nNum);
+	void DeleteMark(ULONG nNum);
+	void ReplaceMark(const SdrMark& rNewMark, ULONG nNum);
 	void Merge(const SdrMarkList& rSrcList, sal_Bool bReverse = sal_False);
 	sal_Bool DeletePageView(const SdrPageView& rPV);
 	sal_Bool InsertPageView(const SdrPageView& rPV);
--- svx/inc/svx/svdmrkv.hxx	2007-04-11 18:22:18.000000000 +0200
+++ svx/inc/svx/svdmrkv.hxx	2007-06-07 16:39:30.000000000 +0200
@@ -156,7 +156,7 @@ protected:
     Rectangle					aMarkedGluePointsRect;
 
     USHORT						nFrameHandlesLimit;
-    sal_uInt32					mnInsPointNum;      // Nummer des InsPoint
+    ULONG					mnInsPointNum;      // Nummer des InsPoint
     ULONG						nMarkableObjCount;
 
     SdrDragMode					eDragMode;        // Persistent
@@ -289,11 +289,11 @@ protected:
 public:
 	// all available const methods for read access to selection
     const SdrMarkList& GetMarkedObjectList() const { return mpSdrViewSelection->GetMarkedObjectList(); }
-	sal_uInt32 TryToFindMarkedObject(const SdrObject* pObj) const { return GetMarkedObjectList().FindObject(pObj); }
-	SdrPageView* GetSdrPageViewOfMarkedByIndex(sal_uInt32 nNum) const { return GetMarkedObjectList().GetMark(nNum)->GetPageView(); }
-	SdrMark* GetSdrMarkByIndex(sal_uInt32 nNum) const { return GetMarkedObjectList().GetMark(nNum); }
-	SdrObject* GetMarkedObjectByIndex(sal_uInt32 nNum) const { return (GetMarkedObjectList().GetMark(nNum))->GetMarkedSdrObj(); }
-    sal_uInt32 GetMarkedObjectCount() const { return GetMarkedObjectList().GetMarkCount(); }
+    ULONG TryToFindMarkedObject(const SdrObject* pObj) const { return GetMarkedObjectList().FindObject(pObj); }
+    SdrPageView* GetSdrPageViewOfMarkedByIndex(ULONG nNum) const { return GetMarkedObjectList().GetMark(nNum)->GetPageView(); }
+    SdrMark* GetSdrMarkByIndex(ULONG nNum) const { return GetMarkedObjectList().GetMark(nNum); }
+    SdrObject* GetMarkedObjectByIndex(ULONG nNum) const { return (GetMarkedObjectList().GetMark(nNum))->GetMarkedSdrObj(); }
+    ULONG GetMarkedObjectCount() const { return GetMarkedObjectList().GetMarkCount(); }
     void SortMarkedObjects() const { GetMarkedObjectList().ForceSort(); }
 	sal_Bool AreObjectsMarked() const { return (0L != GetMarkedObjectList().GetMarkCount()); }
     String GetDescriptionOfMarkedObjects() const { return GetMarkedObjectList().GetMarkDescription(); }
--- svx/source/form/fmvwimp.cxx	2007-01-15 15:27:08.000000000 +0100
+++ svx/source/form/fmvwimp.cxx	2007-06-07 17:04:39.000000000 +0200
@@ -1897,8 +1897,8 @@ void FmXFormView::ObjectRemovedInAliveMo
 	// muss ich es jetzt da rausnehmen, da ich sonst beim Zurueckschalten versuche, die Markierung wieder zu setzen
 	// (interesanterweise geht das nur bei gruppierten Objekten schief (beim Zugriff auf deren ObjList GPF), nicht bei einzelnen)
 
-	sal_uInt32 nCount = m_aMark.GetMarkCount();
-	for (sal_uInt32 i = 0; i < nCount; ++i)
+	ULONG nCount = m_aMark.GetMarkCount();
+	for (ULONG i = 0; i < nCount; ++i)
 	{
 		SdrMark* pMark = m_aMark.GetMark(i);
 		SdrObject* pCurrent = pMark->GetMarkedSdrObj();
@@ -1945,8 +1945,8 @@ void FmXFormView::saveMarkList( sal_Bool
 		m_aMark = m_pView->GetMarkedObjectList();
 		if ( _bSmartUnmark )
 		{
-			sal_uInt32 nCount = m_aMark.GetMarkCount( );
-			for ( sal_uInt32 i = 0; i < nCount; ++i )
+			ULONG nCount = m_aMark.GetMarkCount( );
+			for ( ULONG i = 0; i < nCount; ++i )
 			{
 				SdrMark*   pMark = m_aMark.GetMark(i);
 				SdrObject* pObj  = pMark->GetMarkedSdrObj();
@@ -2012,15 +2012,15 @@ void FmXFormView::restoreMarkList( SdrMa
 			sal_Bool bMisMatch = sal_False;
 
 			// loop through all current marks
-			sal_uInt32 nCurrentCount = rCurrentList.GetMarkCount();
-			for ( sal_uInt32 i=0; i<nCurrentCount&& !bMisMatch; ++i )
+			ULONG nCurrentCount = rCurrentList.GetMarkCount();
+			for ( ULONG i=0; i<nCurrentCount&& !bMisMatch; ++i )
 			{
 				const SdrObject* pCurrentMarked = rCurrentList.GetMark( i )->GetMarkedSdrObj();
 
 				// loop through all saved marks, check for equality
 				sal_Bool bFound = sal_False;
-				sal_uInt32 nSavedCount = m_aMark.GetMarkCount();
-				for ( sal_uInt32 j=0; j<nSavedCount && !bFound; ++j )
+				ULONG nSavedCount = m_aMark.GetMarkCount();
+				for ( ULONG j=0; j<nSavedCount && !bFound; ++j )
 				{
 					if ( m_aMark.GetMark( j )->GetMarkedSdrObj() == pCurrentMarked )
 						bFound = sal_True;
@@ -2045,8 +2045,8 @@ void FmXFormView::restoreMarkList( SdrMa
 		sal_Bool bFound = sal_True;
 
 		// gibt es noch alle Objecte
-		sal_uInt32 nCount = m_aMark.GetMarkCount();
-		for (sal_uInt32 i = 0; i < nCount && bFound; i++)
+		ULONG nCount = m_aMark.GetMarkCount();
+		for (ULONG i = 0; i < nCount && bFound; i++)
 		{
 			SdrMark*   pMark = m_aMark.GetMark(i);
 			SdrObject* pObj  = pMark->GetMarkedSdrObj();
@@ -2067,7 +2067,7 @@ void FmXFormView::restoreMarkList( SdrMa
 			// Das LastObject auswerten
 			if (nCount) // Objecte jetzt Markieren
 			{
-				for (sal_uInt32 i = 0; i < nCount; i++)
+				for (ULONG i = 0; i < nCount; i++)
 				{
 					SdrMark* pMark = m_aMark.GetMark(i);
 					SdrObject* pObj = pMark->GetMarkedSdrObj();
--- svx/source/svdraw/svdedtv2.cxx	2007-04-26 09:51:38.000000000 +0200
+++ svx/source/svdraw/svdedtv2.cxx	2007-06-07 17:05:58.000000000 +0200
@@ -1925,7 +1925,7 @@ void SdrEditView::DoImportMarkedMtf(SvdP
 	if(aNewMarked.GetMarkCount())
 	{
 		// Neue Selektion bilden
-		for(sal_uInt32 a(0); a < aNewMarked.GetMarkCount(); a++)
+		for(ULONG a(0); a < aNewMarked.GetMarkCount(); a++)
 		{
 			GetMarkedObjectListWriteAccess().InsertEntry(*aNewMarked.GetMark(a));
 		}
--- svx/source/svdraw/svdmark.cxx	2006-10-12 15:10:39.000000000 +0200
+++ svx/source/svdraw/svdmark.cxx	2007-06-07 16:36:29.000000000 +0200
@@ -94,7 +94,7 @@ void SdrUShortCont::Sort() const
 	aSort.DoSort();
 	((SdrUShortCont*)this)->mbSorted = sal_True;
 
-	sal_uInt32 nNum(GetCount());
+	ULONG nNum(GetCount());
 
 	if(nNum > 1) 
 	{
@@ -116,9 +116,9 @@ void SdrUShortCont::Sort() const
 	}
 }
 
-void SdrUShortCont::CheckSort(sal_uInt32 nPos)
+void SdrUShortCont::CheckSort(ULONG nPos)
 {
-	sal_uInt32 nAnz(maArray.Count());
+	ULONG nAnz(maArray.Count());
 
 	if(nPos > nAnz) 
 		nPos = nAnz;
@@ -352,8 +352,8 @@ int ImpSdrMarkListSorter::Compare(const 
 
 	if(pOL1 == pOL2) 
 	{
-		sal_uInt32 nObjOrd1((pObj1) ? pObj1->GetOrdNum() : 0);
-		sal_uInt32 nObjOrd2((pObj2) ? pObj2->GetOrdNum() : 0);
+		ULONG nObjOrd1((pObj1) ? pObj1->GetOrdNum() : 0);
+		ULONG nObjOrd2((pObj2) ? pObj2->GetOrdNum() : 0);
 
 		return (nObjOrd1 < nObjOrd2 ? -1 : 1);
 	} 
@@ -378,7 +378,7 @@ void SdrMarkList::ImpForceSort()
 	if(!mbSorted) 
 	{
 		mbSorted = sal_True;
-		sal_uInt32 nAnz = maList.Count();
+		ULONG nAnz = maList.Count();
 
 		if(nAnz > 1) 
 		{
@@ -421,7 +421,7 @@ void SdrMarkList::ImpForceSort()
 
 void SdrMarkList::Clear()
 {
-	for(sal_uInt32 i(0L); i < GetMarkCount(); i++) 
+	for(ULONG i(0L); i < GetMarkCount(); i++) 
 	{
 		SdrMark* pMark = GetMark(i);
 		delete pMark;
@@ -435,7 +435,7 @@ void SdrMarkList::operator=(const SdrMar
 {
 	Clear();
 
-	for(sal_uInt32 i(0L); i < rLst.GetMarkCount(); i++) 
+	for(ULONG i(0L); i < rLst.GetMarkCount(); i++) 
 	{
 		SdrMark* pMark = rLst.GetMark(i);
 		SdrMark* pNeuMark = new SdrMark(*pMark);
@@ -451,7 +451,7 @@ void SdrMarkList::operator=(const SdrMar
 	mbSorted = rLst.mbSorted;
 }
 
-sal_uInt32 SdrMarkList::FindObject(const SdrObject* pObj) const
+ULONG SdrMarkList::FindObject(const SdrObject* pObj) const
 {
 	// #109658#
 	//
@@ -466,7 +466,7 @@ sal_uInt32 SdrMarkList::FindObject(const
 	// less dangerous to change this method then changing SdrObject::GetOrdNum().
 	if(pObj && maList.Count())
 	{
-		for(sal_uInt32 a(0L); a < maList.Count(); a++)
+		for(ULONG a(0L); a < maList.Count(); a++)
 		{
 			if(((SdrMark*)(maList.GetObject(a)))->GetMarkedSdrObj() == pObj)
 			{
@@ -481,7 +481,7 @@ sal_uInt32 SdrMarkList::FindObject(const
 void SdrMarkList::InsertEntry(const SdrMark& rMark, sal_Bool bChkSort)
 {
 	SetNameDirty();
-	sal_uInt32 nAnz(maList.Count());
+	ULONG nAnz(maList.Count());
 
 	if(!bChkSort || !mbSorted || nAnz == 0) 
 	{
@@ -492,7 +492,7 @@ void SdrMarkList::InsertEntry(const SdrM
 	} 
 	else 
 	{
-		SdrMark* pLast = GetMark(sal_uInt32(nAnz - 1));
+		SdrMark* pLast = GetMark(ULONG(nAnz - 1));
 		const SdrObject* pLastObj = pLast->GetMarkedSdrObj();
 		const SdrObject* pNeuObj = rMark.GetMarkedSdrObj();
 
@@ -517,8 +517,8 @@ void SdrMarkList::InsertEntry(const SdrM
 
 			if(pLastOL == pNeuOL) 
 			{
-				const sal_uInt32 nLastNum(pLastObj!=0L ? pLastObj->GetOrdNum() : 0);
-				const sal_uInt32 nNeuNum(pNeuObj !=0L ? pNeuObj ->GetOrdNum() : 0);
+				const ULONG nLastNum(pLastObj!=0L ? pLastObj->GetOrdNum() : 0);
+				const ULONG nNeuNum(pNeuObj !=0L ? pNeuObj ->GetOrdNum() : 0);
 
 				if(nNeuNum < nLastNum) 
 				{
@@ -537,7 +537,7 @@ void SdrMarkList::InsertEntry(const SdrM
 	return;
 }
 
-void SdrMarkList::DeleteMark(sal_uInt32 nNum)
+void SdrMarkList::DeleteMark(ULONG nNum)
 {
 	SdrMark* pMark = GetMark(nNum);
 	DBG_ASSERT(pMark!=0L,"DeleteMark: MarkEntry nicht gefunden");
@@ -550,7 +550,7 @@ void SdrMarkList::DeleteMark(sal_uInt32 
 	}
 }
 
-void SdrMarkList::ReplaceMark(const SdrMark& rNewMark, sal_uInt32 nNum)
+void SdrMarkList::ReplaceMark(const SdrMark& rNewMark, ULONG nNum)
 {
 	SdrMark* pMark = GetMark(nNum);
 	DBG_ASSERT(pMark!=0L,"ReplaceMark: MarkEntry nicht gefunden");
@@ -567,7 +567,7 @@ void SdrMarkList::ReplaceMark(const SdrM
 
 void SdrMarkList::Merge(const SdrMarkList& rSrcList, sal_Bool bReverse)
 {
-	sal_uInt32 nAnz(rSrcList.maList.Count());
+	ULONG nAnz(rSrcList.maList.Count());
 
 	if(rSrcList.mbSorted) 
 	{
@@ -577,7 +577,7 @@ void SdrMarkList::Merge(const SdrMarkLis
 
 	if(!bReverse)
 	{
-		for(sal_uInt32 i(0L); i < nAnz; i++) 
+		for(ULONG i(0L); i < nAnz; i++) 
 		{
 			SdrMark* pM = (SdrMark*)(rSrcList.maList.GetObject(i));
 			InsertEntry(*pM);
@@ -585,7 +585,7 @@ void SdrMarkList::Merge(const SdrMarkLis
 	}
 	else
 	{
-		for(sal_uInt32 i(nAnz); i > 0;) 
+		for(ULONG i(nAnz); i > 0;) 
 		{
 			i--;
 			SdrMark* pM = (SdrMark*)(rSrcList.maList.GetObject(i));
@@ -598,7 +598,7 @@ sal_Bool SdrMarkList::DeletePageView(con
 {
 	sal_Bool bChgd(sal_False);
 
-	for(sal_uInt32 i(GetMarkCount()); i > 0; ) 
+	for(ULONG i(GetMarkCount()); i > 0; ) 
 	{
 		i--;
 		SdrMark* pMark = GetMark(i);
@@ -621,9 +621,9 @@ sal_Bool SdrMarkList::InsertPageView(con
 	DeletePageView(rPV); // erstmal alle raus, dann die ganze Seite hinten dran
 	SdrObject* pObj;
 	const SdrObjList* pOL = rPV.GetObjList();
-	sal_uInt32 nObjAnz(pOL->GetObjCount());
+	ULONG nObjAnz(pOL->GetObjCount());
 
-	for(sal_uInt32 nO(0L); nO < nObjAnz; nO++) 
+	for(ULONG nO(0L); nO < nObjAnz; nO++) 
 	{
 		pObj = pOL->GetObj(nO);
 		sal_Bool bDoIt(rPV.IsObjMarkable(pObj));
@@ -642,7 +642,7 @@ sal_Bool SdrMarkList::InsertPageView(con
 
 const XubString& SdrMarkList::GetMarkDescription() const
 {
-	sal_uInt32 nAnz(GetMarkCount());
+	ULONG nAnz(GetMarkCount());
 	
 	if(mbNameOk && 1L == nAnz) 
 	{
@@ -680,7 +680,7 @@ const XubString& SdrMarkList::GetMarkDes
 				XubString aStr1;
 				sal_Bool bEq(sal_True);
 				
-				for(sal_uInt32 i = 1; i < GetMarkCount() && bEq; i++) 
+				for(ULONG i = 1; i < GetMarkCount() && bEq; i++) 
 				{
 					SdrMark* pMark2 = GetMark(i);
 					pMark2->GetMarkedSdrObj()->TakeObjNamePlural(aStr1);
@@ -708,20 +708,20 @@ const XubString& SdrMarkList::GetPointMa
 {
 	sal_Bool& rNameOk = (sal_Bool&)(bGlue ? mbGluePointNameOk : mbPointNameOk);
 	XubString& rName = (XubString&)(bGlue ? maGluePointName : maPointName);
-	sal_uInt32 nMarkAnz(GetMarkCount());
-	sal_uInt32 nMarkPtAnz(0L);
-	sal_uInt32 nMarkPtObjAnz(0L);
-	sal_uInt32 n1stMarkNum(0xFFFFFFFF);
+	ULONG nMarkAnz(GetMarkCount());
+	ULONG nMarkPtAnz(0L);
+	ULONG nMarkPtObjAnz(0L);
+	ULONG n1stMarkNum(ULONG_MAX);
 	
-	for(sal_uInt32 nMarkNum(0L); nMarkNum < nMarkAnz; nMarkNum++) 
+	for(ULONG nMarkNum(0L); nMarkNum < nMarkAnz; nMarkNum++) 
 	{
 		const SdrMark* pMark = GetMark(nMarkNum);
 		const SdrUShortCont* pPts = bGlue ? pMark->GetMarkedGluePoints() : pMark->GetMarkedPoints();
-		sal_uInt32 nAnz(pPts ? pPts->GetCount() : 0);
+		ULONG nAnz(pPts ? pPts->GetCount() : 0);
 		
 		if(nAnz) 
 		{
-			if(n1stMarkNum == 0xFFFFFFFF) 
+			if(n1stMarkNum == ULONG_MAX) 
 			{
 				n1stMarkNum = nMarkNum;
 			}
@@ -776,7 +776,7 @@ const XubString& SdrMarkList::GetPointMa
 			XubString aStr1;
 			sal_Bool bEq(sal_True);
 			
-			for(sal_uInt32 i(n1stMarkNum + 1L); i < GetMarkCount() && bEq; i++) 
+			for(ULONG i(n1stMarkNum + 1L); i < GetMarkCount() && bEq; i++) 
 			{
 				const SdrMark* pMark2 = GetMark(i);
 				const SdrUShortCont* pPts = bGlue ? pMark2->GetMarkedGluePoints() : pMark2->GetMarkedPoints();
@@ -822,7 +822,7 @@ sal_Bool SdrMarkList::TakeBoundRect(SdrP
 	sal_Bool bFnd(sal_False);
 	Rectangle aR;
 
-	for(sal_uInt32 i(0L); i < GetMarkCount(); i++) 
+	for(ULONG i(0L); i < GetMarkCount(); i++) 
 	{
 		SdrMark* pMark = GetMark(i);
 
@@ -852,7 +852,7 @@ sal_Bool SdrMarkList::TakeSnapRect(SdrPa
 {
 	sal_Bool bFnd(sal_False);
 
-	for(sal_uInt32 i(0L); i < GetMarkCount(); i++) 
+	for(ULONG i(0L); i < GetMarkCount(); i++) 
 	{
 		SdrMark* pMark = GetMark(i);
 
@@ -943,7 +943,7 @@ namespace sdr
 			{
 				SdrObjList* pList = pObj->GetSubList();
 
-				for(sal_uInt32 a(0L); a < pList->GetObjCount(); a++)
+				for(ULONG a(0L); a < pList->GetObjCount(); a++)
 				{
 					SdrObject* pObj2 = pList->GetObj(a);
 					ImplCollectCompleteSelection(pObj2);
@@ -965,9 +965,9 @@ namespace sdr
 			maAllMarkedObjects.Clear();
 
 			// #126320# GetMarkCount after ForceSort
-			const sal_uInt32 nMarkAnz(maMarkedObjectList.GetMarkCount());
+			const ULONG nMarkAnz(maMarkedObjectList.GetMarkCount());
 
-			for(sal_uInt32 a(0L); a < nMarkAnz; a++)
+			for(ULONG a(0L); a < nMarkAnz; a++)
 			{
 				SdrObject* pCandidate = maMarkedObjectList.GetMark(a)->GetMarkedSdrObj();
 
--- svx/source/svdraw/svdmrkv.cxx	2007-05-30 18:38:37.000000000 +0200
+++ svx/source/svdraw/svdmrkv.cxx	2007-06-07 17:00:22.000000000 +0200
@@ -951,7 +951,7 @@ void SdrMarkView::AddDragModeHdl(SdrDrag
 		case SDRDRAG_TRANSPARENCE:
 		{
 			// add interactive transparence handle
-			UINT32 nMarkAnz = GetMarkedObjectCount();
+			ULONG nMarkAnz = GetMarkedObjectCount();
 			if(nMarkAnz == 1)
 			{
 				SdrObject* pObj = GetMarkedObjectByIndex(0);
@@ -1013,7 +1013,7 @@ void SdrMarkView::AddDragModeHdl(SdrDrag
 		case SDRDRAG_GRADIENT:
 		{
 			// add interactive gradient handle
-			UINT32 nMarkAnz = GetMarkedObjectCount();
+			ULONG nMarkAnz = GetMarkedObjectCount();
 			if(nMarkAnz == 1)
 			{
 				SdrObject* pObj = GetMarkedObjectByIndex(0);
@@ -1324,8 +1324,8 @@ BOOL SdrMarkView::MarkNextObj(BOOL bPrev
 
 	SortMarkedObjects();
 	ULONG  nMarkAnz=GetMarkedObjectCount();
-	ULONG  nChgMarkNum=0xFFFFFFFF; // Nummer des zu ersetzenden MarkEntries
-	ULONG  nSearchObjNum=bPrev ? 0 : 0xFFFFFFFF;
+	ULONG  nChgMarkNum = ULONG_MAX; // Nummer des zu ersetzenden MarkEntries
+	ULONG  nSearchObjNum = bPrev ? 0 : ULONG_MAX;
 	if (nMarkAnz!=0) {
 		nChgMarkNum=bPrev ? 0 : ULONG(nMarkAnz-1);
 		SdrMark* pM=GetSdrMarkByIndex(nChgMarkNum);
@@ -1354,7 +1354,7 @@ BOOL SdrMarkView::MarkNextObj(BOOL bPrev
 		return FALSE;
 	}
 
-	if (nChgMarkNum!=0xFFFFFFFF) 
+	if (nChgMarkNum!=ULONG_MAX) 
 	{
 		GetMarkedObjectListWriteAccess().DeleteMark(nChgMarkNum);
 	}
@@ -1806,7 +1806,7 @@ BOOL SdrMarkView::PickMarkedObj(const Po
 		SdrObject* pBestObj=NULL;
 		SdrPageView* pBestPV=NULL;
 		ULONG nBestMarkNum=0;
-		ULONG nBestDist=0xFFFFFFFF;
+		ULONG nBestDist=ULONG_MAX;
 		for (nMarkNum=nMarkAnz; nMarkNum>0 && !bFnd;) {
 			nMarkNum--;
 			SdrMark* pM=GetSdrMarkByIndex(nMarkNum);
--- svx/source/svdraw/svdpoev.cxx	2006-11-14 14:49:18.000000000 +0100
+++ svx/source/svdraw/svdpoev.cxx	2007-06-07 16:56:46.000000000 +0200
@@ -86,7 +86,7 @@ SdrPolyEditView::~SdrPolyEditView()
 void SdrPolyEditView::ImpCheckPolyPossibilities()
 {
 	ImpResetPolyPossibilityFlags();
-	const sal_uInt32 nMarkAnz(GetMarkedObjectCount());
+	const ULONG nMarkAnz(GetMarkedObjectCount());
 
 	if(nMarkAnz && !ImpIsFrameHandles())
 	{
@@ -98,7 +98,7 @@ void SdrPolyEditView::ImpCheckPolyPossib
 		bool bSegmFuz(false);
 		basegfx::B2VectorContinuity eSmooth = basegfx::CONTINUITY_NONE;
 
-		for(sal_uInt32 nMarkNum(0L); nMarkNum < nMarkAnz; nMarkNum++) 
+		for(ULONG nMarkNum(0L); nMarkNum < nMarkAnz; nMarkNum++) 
 		{
 			SdrMark* pM = GetSdrMarkByIndex(nMarkNum);
 			SdrObject* pObj = pM->GetMarkedSdrObj();
@@ -226,9 +226,9 @@ void SdrPolyEditView::SetMarkedPointsSmo
 	{
 		SortMarkedObjects();
 		BegUndo(ImpGetResStr(STR_EditSetPointsSmooth), GetDescriptionOfMarkedPoints());
-		sal_uInt32 nMarkAnz(GetMarkedObjectCount());
+		ULONG nMarkAnz(GetMarkedObjectCount());
 
-		for(sal_uInt32 nMarkNum(nMarkAnz); nMarkNum > 0L;) 
+		for(ULONG nMarkNum(nMarkAnz); nMarkNum > 0L;) 
 		{
 			nMarkNum--;
 			SdrMark* pM = GetSdrMarkByIndex(nMarkNum);
@@ -287,9 +287,9 @@ void SdrPolyEditView::SetMarkedSegmentsK
 	{
 		SortMarkedObjects();
 		BegUndo(ImpGetResStr(STR_EditSetSegmentsKind), GetDescriptionOfMarkedPoints());
-		sal_uInt32 nMarkAnz(GetMarkedObjectCount());
+		ULONG nMarkAnz(GetMarkedObjectCount());
 		
-		for(sal_uInt32 nMarkNum(nMarkAnz); nMarkNum > 0L;) 
+		for(ULONG nMarkNum(nMarkAnz); nMarkNum > 0L;) 
 		{
 			nMarkNum--;
 			SdrMark* pM = GetSdrMarkByIndex(nMarkNum);
@@ -460,10 +460,10 @@ void SdrPolyEditView::RipUpAtMarkedPoint
 	if(HasMarkedPoints()) 
 	{
 		SortMarkedObjects();
-		sal_uInt32 nMarkAnz(GetMarkedObjectCount());
+		ULONG nMarkAnz(GetMarkedObjectCount());
 		BegUndo(ImpGetResStr(STR_EditRipUp), GetDescriptionOfMarkedPoints());
 
-		for(sal_uInt32 nMarkNum(nMarkAnz); nMarkNum > 0L;) 
+		for(ULONG nMarkNum(nMarkAnz); nMarkNum > 0L;) 
 		{
 			nMarkNum--;
 			SdrMark* pM = GetSdrMarkByIndex(nMarkNum);
