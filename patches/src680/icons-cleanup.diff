--- dbaccess/source/ui/dlg/indexdialog.cxx	2005-03-23 10:48:55.000000000 +0100
+++ dbaccess/source/ui/dlg/indexdialog.cxx	2005-04-18 16:58:53.219723911 +0200
@@ -942,7 +942,7 @@ namespace dbaui
 	{
 		sal_Int16 nN = IMG_INDEX_DLG_SC;
 		sal_Int16 nH = IMG_INDEX_DLG_SCH;
-		if ( _eBitmapSet == SFX_SYMBOLS_LARGE )	 	 
+		if ( _eBitmapSet == SFX_SYMBOLS_SIZE_LARGE )	 	 
 		{
 			nN = IMG_INDEX_DLG_LC;
 			nH = IMG_INDEX_DLG_LCH;
--- dbaccess/source/ui/inc/ToolBoxHelper.hxx	2004-01-06 17:47:26.000000000 +0100
+++ dbaccess/source/ui/inc/ToolBoxHelper.hxx	2005-04-18 17:22:05.903384960 +0200
@@ -81,7 +81,7 @@ namespace dbaui
 	class OToolBoxHelper
 	{
 		sal_Bool		m_bIsHiContrast;// true when the toolbox is in hi contrast mode
-		sal_Int16		m_nBitmapSet;	// shows the toolbox large or small bitmaps
+		sal_Int16		m_nSymbolsSize;	// shows the toolbox large or small bitmaps
 		ToolBox*		m_pToolBox;		// our toolbox (may be NULL)
 	public:
 		OToolBoxHelper();
@@ -94,12 +94,12 @@ namespace dbaui
 		virtual void resizeControls(const Size& _rDiff) = 0;
 
 		/** will be called whenthe id of the image list is needed.
-			@param	_eBitmapSet
+			@param	_eSymbolsSize
 				<svtools/imgdef.hxx>
 			@param	_bHiContast
 				<TRUE/> when in high contrast mode.
 		*/
-		virtual sal_Int16 getImageListId(sal_Int16 _eBitmapSet,sal_Bool _bHiContast) const = 0;
+		virtual sal_Int16 getImageListId(sal_Int16 _eSymbolsSize,sal_Bool _bHiContast) const = 0;
 
 		/** only the member will be set, derived classes can overload this function and do what need to be done.
 			@param	_pTB
@@ -117,7 +117,6 @@ namespace dbaui
 	    
 	    /** retrieve the current symbol set from misc options
 	        and system settings */
-	    sal_Int16 getCurrentSymbolSet();
 		
 		inline sal_Bool isToolBoxHiContrast() const { return m_bIsHiContrast; }
 	protected:
--- dbaccess/source/ui/misc/ToolBoxHelper.cxx	2003-05-19 14:55:49.000000000 +0200
+++ dbaccess/source/ui/misc/ToolBoxHelper.cxx	2005-04-18 18:23:00.558651557 +0200
@@ -86,9 +86,9 @@ namespace dbaui
 	OToolBoxHelper::OToolBoxHelper()
 		: m_bIsHiContrast(sal_False)
 		,m_pToolBox(NULL)
-		,m_nBitmapSet(-1 )
+		,m_nSymbolsSize(-1 )
 	{
-		OSL_ENSURE(m_nBitmapSet != getCurrentSymbolSet(),"BitmapSet should not be identical");
+		OSL_ENSURE(m_nSymbolsSize != SvtMiscOptions().GetCurrentSymbolsSize(),"SymbolsSize should not be identical");
 		SvtMiscOptions().AddListener( LINK( this, OToolBoxHelper, ConfigOptionsChanged ) );
 		Application::AddEventListener( LINK( this, OToolBoxHelper, SettingsChanged ) );
 	}
@@ -98,39 +98,21 @@ namespace dbaui
 		SvtMiscOptions().RemoveListener( LINK( this, OToolBoxHelper, ConfigOptionsChanged ) );
 		Application::RemoveEventListener( LINK( this, OToolBoxHelper, SettingsChanged ) );
 	}	
-	// -----------------------------------------------------------------------------
-	sal_Int16 OToolBoxHelper::getCurrentSymbolSet()
-	{
-        sal_Int16   eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-        if ( eOptSymbolSet == SFX_SYMBOLS_AUTO ) 
-        {
-            // Use system settings, we have to retrieve the toolbar icon size from the
-            // Application class
-            ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-            if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-                eOptSymbolSet = SFX_SYMBOLS_LARGE;
-            else
-                eOptSymbolSet = SFX_SYMBOLS_SMALL;
-        }
-        
-        return eOptSymbolSet;
-	}
 	
 	// -----------------------------------------------------------------------------
 	void OToolBoxHelper::checkImageList()
 	{
 		if ( m_pToolBox )
 		{
-			sal_Int16 nCurBitmapSet = getCurrentSymbolSet();
-			if ( nCurBitmapSet != m_nBitmapSet || 
+			sal_Int16 nCurSymbolsSize = SvtMiscOptions().GetCurrentSymbolsSize();
+			if ( nCurSymbolsSize != m_nSymbolsSize || 
 				m_bIsHiContrast != m_pToolBox->GetBackground().GetColor().IsDark() )
 			{
-				m_nBitmapSet	= nCurBitmapSet;
+				m_nSymbolsSize	= nCurSymbolsSize;
 				m_bIsHiContrast = m_pToolBox->GetBackground().GetColor().IsDark();
 
 				
-				m_pToolBox->SetImageList( ModuleRes( getImageListId(m_nBitmapSet,m_bIsHiContrast) ) );
+				m_pToolBox->SetImageList( ModuleRes( getImageListId(m_nSymbolsSize,m_bIsHiContrast) ) );
 				Size aTbOldSize = m_pToolBox->GetSizePixel();
 				adjustToolBoxSize(m_pToolBox);
 				Size aTbNewSize = m_pToolBox->GetSizePixel();
--- extensions/source/bibliography/toolbar.cxx	2004-11-09 17:45:49.000000000 +0100
+++ extensions/source/bibliography/toolbar.cxx	2005-04-19 10:54:27.985075514 +0200
@@ -278,11 +278,12 @@ BibToolBar::BibToolBar(Window* pParent, 
 	nSelMenuItem(0),
 	nMenuId(0),
 	aLayoutManager( aLink ),
-	nSymbolSet( SFX_SYMBOLS_SMALL ),
+	nSymbolsSize( SFX_SYMBOLS_SIZE_SMALL ),
 	nOutStyle( 0 )
 {
-	nSymbolSet = GetCurrentSymbolSet();
-	nOutStyle  = SvtMiscOptions().GetToolboxStyle();
+	SvtMiscOptions aSvtMiscOptions;
+	nSymbolsSize = aSvtMiscOptions.GetCurrentSymbolsSize();
+	nOutStyle  = aSvtMiscOptions.GetToolboxStyle();
 
     ApplyImageList();
     SetStyle(GetStyle()|nStyle);
@@ -632,9 +632,10 @@ void BibToolBar::DataChanged( const Data
 IMPL_LINK( BibToolBar, OptionsChanged_Impl, void*, pVoid )
 {
     sal_Bool bRebuildToolBar = sal_False;
-    if ( nSymbolSet != GetCurrentSymbolSet() )
+    sal_Int16 eSymbolsSize = SvtMiscOptions().GetCurrentSymbolsSize();
+    if ( nSymbolsSize != eSymbolsSize )
     {
-        nSymbolSet = GetCurrentSymbolSet();
+        nSymbolsSize = eSymbolsSize;
         bRebuildToolBar = sal_True;
     }
     else if ( nOutStyle != SvtMiscOptions().GetToolboxStyle() )
@@ -655,10 +655,10 @@ IMPL_LINK( BibToolBar, OptionsChanged_Im
 IMPL_LINK( BibToolBar, SettingsChanged_Impl, void*, pVoid )
 {
     // Check if toolbar button size have changed and we have to use system settings
-    sal_Int16 eSymbolSet = GetCurrentSymbolSet();
-    if ( eSymbolSet != nSymbolSet )
+    sal_Int16 eSymbolsSize = SvtMiscOptions().GetCurrentSymbolsSize();
+    if ( eSymbolsSize != nSymbolsSize )
     {
-        nSymbolSet = eSymbolSet;
+        nSymbolsSize = eSymbolsSize;
         RebuildToolbar();
     }
     
@@ -666,26 +666,6 @@ IMPL_LINK( BibToolBar, SettingsChanged_I
 }
 
 //-----------------------------------------------------------------------------
-
-sal_Int16 BibToolBar::GetCurrentSymbolSet()
-{
-    sal_Int16   eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO ) 
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-    
-    return eOptSymbolSet;
-}
-
-//-----------------------------------------------------------------------------
 void BibToolBar::RebuildToolbar()
 {
     ApplyImageList();
@@ -697,7 +677,7 @@ void BibToolBar::RebuildToolbar()
 
 void BibToolBar::ApplyImageList()
 {
-    ImageList& rList = ( nSymbolSet == SFX_SYMBOLS_SMALL ) ? 
+    ImageList& rList = ( nSymbolsSize == SFX_SYMBOLS_SIZE_SMALL ) ? 
                        ( GetDisplayBackground().GetColor().IsDark() ? aImgLstHC : aImgLst ) :
                        ( GetDisplayBackground().GetColor().IsDark() ? aBigImgLstHC : aBigImgLst );
     
--- extensions/source/bibliography/toolbar.hxx	2004-06-17 18:16:13.000000000 +0200
+++ extensions/source/bibliography/toolbar.hxx	2005-04-19 10:53:57.834296799 +0200
@@ -195,7 +195,7 @@ class BibToolBar:	public ToolBox
 		sal_uInt16				nSelMenuItem;
 		rtl::OUString			aQueryField;
 		Link                    aLayoutManager;
-		sal_Int16               nSymbolSet;
+		sal_Int16               nSymbolsSize;
 		sal_Int16               nOutStyle;
 
 		BibDataManager* 		pDatMan;
@@ -215,7 +215,6 @@ class BibToolBar:	public ToolBox
 		virtual void			Select();
 		virtual void			Click();
         long                    PreNotify( NotifyEvent& rNEvt );
-		sal_Int16               GetCurrentSymbolSet();
 
 
 	public:
--- framework/inc/services/layoutmanager.hxx	2005-03-30 11:21:41.000000000 +0200
+++ framework/inc/services/layoutmanager.hxx	2005-04-18 17:16:04.439762811 +0200
@@ -483,7 +483,7 @@ namespace framework
             void implts_createCustomToolBar( const rtl::OUString& aTbxResName, const rtl::OUString& aTitle );
             void implts_toggleFloatingUIElementsVisibility( sal_Bool bActive );
             sal_Bool implts_isEmbeddedLayoutManager() const;
-            sal_Int16 implts_getCurrentSymbolSet();
+            sal_Int16 implts_getCurrentSymbolsSize();
             ::com::sun::star::uno::Reference< com::sun::star::awt::XWindowPeer > implts_createToolkitWindow( const ::com::sun::star::uno::Reference< com::sun::star::awt::XWindowPeer >& rParent );
             ::com::sun::star::uno::Reference< ::com::sun::star::ui::XUIElement > implts_createElement( const rtl::OUString& aName );
             rtl::OUString implts_generateGenericAddonToolbarTitle( sal_Int32 nNumber ) const;
@@ -619,7 +619,7 @@ namespace framework
             rtl::OUString                                                               m_aPropLocked;
             AddonsOptions*                                                              m_pAddonOptions;
             SvtMiscOptions*                                                             m_pMiscOptions;
-            sal_Int16                                                                   m_eSymbolSet;
+            sal_Int16                                                                   m_eSymbolsSize;
 	        Timer				                                                        m_aAsyncLayoutTimer;
             ::cppu::OMultiTypeInterfaceContainerHelper                                  m_aListenerContainer; // container for ALL Listener
     };
--- framework/inc/uielement/toolbarmanager.hxx	2005-03-21 15:02:18.000000000 +0100
+++ framework/inc/uielement/toolbarmanager.hxx	2005-04-19 11:12:42.631881032 +0200
@@ -190,7 +190,6 @@ class ToolBarManager : public ::com::sun
         void RefreshImages();
         void FillToolbar( const ::com::sun::star::uno::Reference< ::com::sun::star::container::XIndexAccess >& rToolBarData );
         void notifyRegisteredControllers( const rtl::OUString& aUIElementName, const rtl::OUString& aCommand );
-        static sal_Int16 GetCurrentSymbolSize();
 
     protected:
         struct ControllerParams
--- framework/source/layoutmanager/layoutmanager.cxx	2005-04-01 18:13:36.000000000 +0200
+++ framework/source/layoutmanager/layoutmanager.cxx	2005-04-19 11:06:11.033664726 +0200
@@ -460,7 +460,7 @@ LayoutManager::LayoutManager( const Refe
 
     m_pMiscOptions->AddListener( LINK( this, LayoutManager, OptionsChanged ) );
     Application::AddEventListener( LINK( this, LayoutManager, SettingsChanged ) );
-    m_eSymbolSet = m_pMiscOptions->GetSymbolSet();
+    m_eSymbolsSize = m_pMiscOptions->GetSymbolsSize();
 
 	m_aAsyncLayoutTimer.SetTimeout( 50 );
 	m_aAsyncLayoutTimer.SetTimeoutHdl( LINK( this, LayoutManager, AsyncLayoutHdl ) );
@@ -5595,27 +5595,18 @@ void LayoutManager::implts_clearMenuBarC
     }
 }
 
-sal_Int16 LayoutManager::implts_getCurrentSymbolSet()
+sal_Int16 LayoutManager::implts_getCurrentSymbolsSize()
 {
-    sal_Int16 eOptSymbolSet( 0 );
-    ReadGuard aReadLock( m_aLock );
-    if ( m_pMiscOptions )
-        eOptSymbolSet = m_pMiscOptions->GetSymbolSet();
-    aReadLock.unlock();
+    sal_Int16 eOptSymbolsSize( 0 );
 
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
     {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        vos::OGuard	aGuard( Application::GetSolarMutex() );
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
+        ReadGuard aReadLock( m_aLock );
+        vos::OGuard aGuard( Application::GetSolarMutex() );
+        if ( m_pMiscOptions )
+            eOptSymbolsSize = m_pMiscOptions->GetCurrentSymbolsSize();
     }
 
-    return eOptSymbolSet;
+    return eOptSymbolsSize;
 }
 
 IMPL_LINK( LayoutManager, MenuBarClose, MenuBar *, pMenu )
@@ -5638,17 +5629,17 @@ IMPL_LINK( LayoutManager, MenuBarClose, 
 
 IMPL_LINK( LayoutManager, OptionsChanged, void*, pVoid )
 {
-    sal_Int16 eOldSymbolSet( 0 );
-    sal_Int16 eSymbolSet( implts_getCurrentSymbolSet() );
+    sal_Int16 eOldSymbolsSize( 0 );
+    sal_Int16 eSymbolsSize( implts_getCurrentSymbolsSize() );
 
     ReadGuard aReadLock( m_aLock );
-    eOldSymbolSet = m_eSymbolSet;
+    eOldSymbolsSize = m_eSymbolsSize;
     aReadLock.unlock();
 
-    if ( eSymbolSet != eOldSymbolSet )
+    if ( eSymbolsSize != eOldSymbolsSize )
     {
         WriteGuard aWriteLock( m_aLock );
-        m_eSymbolSet = eSymbolSet;
+        m_eSymbolsSize = eSymbolsSize;
         aWriteLock.unlock();
 
         std::vector< Reference< XUpdatable > > aToolBarVector;
--- framework/source/uielement/addonstoolbarmanager.cxx	2005-03-01 20:41:19.000000000 +0100
+++ framework/source/uielement/addonstoolbarmanager.cxx	2005-04-19 11:12:10.059521237 +0200
@@ -267,8 +267,7 @@ void SAL_CALL AddonsToolBarManager::disp
 
 void AddonsToolBarManager::RefreshImages()
 {
-    sal_Int16 nSymbolSet = GetCurrentSymbolSize();
-    sal_Bool  bBigImages( nSymbolSet == SFX_SYMBOLS_LARGE );
+    sal_Bool  bBigImages( SvtMiscOptions().AreCurrentSymbolsLarge() );
     for ( USHORT nPos = 0; nPos < m_pToolBar->GetItemCount(); nPos++ )
     {
         USHORT nId( m_pToolBar->GetItemId( nPos ) );
@@ -298,7 +297,6 @@ void AddonsToolBarManager::FillToolbar( 
         return;
     
     USHORT    nId( 1 );
-    sal_Int16 nSymbolSet( GetCurrentSymbolSize() );
 
     RemoveControllers();
 	
--- framework/source/uielement/toolbarmanager.cxx	2005-04-18 11:59:45.612799000 +0200
+++ framework/source/uielement/toolbarmanager.cxx	2005-04-19 11:19:36.040271561 +0200
@@ -316,7 +316,7 @@ ToolBarManager::ToolBarManager( const Re
     m_pToolBar( pToolBar ),
     m_bDisposed( sal_False ),
     m_bIsHiContrast( pToolBar->GetDisplayBackground().GetColor().IsDark() ),
-    m_bSmallSymbols( GetCurrentSymbolSize() == SFX_SYMBOLS_SMALL ),
+    m_bSmallSymbols( !SvtMiscOptions().AreCurrentSymbolsLarge() ),
     m_bModuleIdentified( sal_False ),
     m_aResourceName( rResourceName ),
     m_bAddedToTaskPaneList( sal_True ),
@@ -414,10 +414,11 @@ void ToolBarManager::CheckAndUpdateImage
 	    m_bIsHiContrast = sal_False;
 	}
 
-    if ( m_bSmallSymbols != ( GetCurrentSymbolSize() == SFX_SYMBOLS_SMALL ))
+    bool bCurrentSymbolsSmall = !SvtMiscOptions().AreCurrentSymbolsLarge();
+    if ( m_bSmallSymbols != bCurrentSymbolsSmall )
     {
         bRefreshImages = sal_True;
-        m_bSmallSymbols = ( GetCurrentSymbolSize() == SFX_SYMBOLS_SMALL );
+        m_bSmallSymbols = bCurrentSymbolsSmall;
     }
 
     // Refresh images if requested
@@ -429,8 +430,7 @@ void ToolBarManager::RefreshImages()
 {
     ResetableGuard aGuard( m_aLock );
 
-    sal_Int16 nSymbolSet = GetCurrentSymbolSize();
-    sal_Bool  bBigImages( nSymbolSet == SFX_SYMBOLS_LARGE );
+    sal_Bool  bBigImages( SvtMiscOptions().AreCurrentSymbolsLarge() );
     for ( USHORT nPos = 0; nPos < m_pToolBar->GetItemCount(); nPos++ )
     {
         USHORT nId( m_pToolBar->GetItemId( nPos ) );
@@ -713,7 +713,7 @@ void SAL_CALL ToolBarManager::elementIns
     Reference< XNameAccess > xNameAccess;
     sal_Int16                nImageType;
     sal_Int16                nCurrentImageType = getImageTypeFromBools(
-                                                    ( GetCurrentSymbolSize() == SFX_SYMBOLS_LARGE ),
+                                                    SvtMiscOptions().AreCurrentSymbolsLarge(),
                                                     m_bIsHiContrast );
 
     if (( Event.aInfo >>= nImageType ) &&
@@ -763,7 +763,7 @@ void SAL_CALL ToolBarManager::elementRem
     Reference< XNameAccess > xNameAccess;
     sal_Int16                nImageType;
     sal_Int16                nCurrentImageType = getImageTypeFromBools(
-                                                    ( GetCurrentSymbolSize() == SFX_SYMBOLS_LARGE ),
+                                                    SvtMiscOptions().AreCurrentSymbolsLarge(),
                                                     m_bIsHiContrast );
 
     if (( Event.aInfo >>= nImageType ) &&
@@ -816,7 +816,7 @@ void SAL_CALL ToolBarManager::elementRep
     Reference< XNameAccess > xNameAccess;
     sal_Int16                nImageType;
     sal_Int16                nCurrentImageType = getImageTypeFromBools(
-                                                    ( GetCurrentSymbolSize() == SFX_SYMBOLS_LARGE ),
+                                                    SvtMiscOptions().AreCurrentSymbolsLarge(),
                                                     m_bIsHiContrast );
 
     if (( Event.aInfo >>= nImageType ) &&
@@ -854,24 +854,6 @@ void SAL_CALL ToolBarManager::elementRep
     }
 }
 
-sal_Int16 ToolBarManager::GetCurrentSymbolSize()
-{
-    sal_Int16 eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    return eOptSymbolSet;
-}
-
 void ToolBarManager::RemoveControllers()
 {
     ResetableGuard aGuard( m_aLock );
@@ -1360,8 +1342,6 @@ void ToolBarManager::RequestImages()
 {
     RTL_LOGFILE_CONTEXT( aLog, "framework (cd100003) ::ToolBarManager::RequestImages" );
 
-    sal_Int16 nSymbolSet( ToolBarManager::GetCurrentSymbolSize() );
-
     // Request images from image manager
     Sequence< rtl::OUString > aCmdURLSeq( m_aCommandMap.size() );
     Sequence< Reference< XGraphic > > aDocGraphicSeq;
@@ -1376,7 +1356,7 @@ void ToolBarManager::RequestImages()
     }
 
     m_bIsHiContrast = m_pToolBar->GetDisplayBackground().GetColor().IsDark();
-    sal_Int16 j = getImageTypeFromBools( ( nSymbolSet == SFX_SYMBOLS_LARGE ), m_bIsHiContrast );
+    sal_Int16 j = getImageTypeFromBools( SvtMiscOptions().AreCurrentSymbolsLarge(), m_bIsHiContrast );
 
     if ( m_xDocImageManager.is() )
         aDocGraphicSeq = m_xDocImageManager->getImages( j, aCmdURLSeq );
--- sfx2/inc/imgmgr.hxx	2005-01-11 15:43:12.000000000 +0100
+++ sfx2/inc/imgmgr.hxx	2005-04-18 17:54:21.994254618 +0200
@@ -87,7 +87,6 @@ class SFX2_DLLPUBLIC SfxImageManager
 	SfxImageManager_Impl* pImp;
 
 public:
-    static sal_Int16         GetCurrentSymbolSet();
     static SfxImageManager*  GetImageManager( SfxModule* );
 
                     SfxImageManager( SfxModule* pModule = 0 );
--- sfx2/source/appl/appcfg.cxx	2005-03-30 10:41:22.000000000 +0200
+++ sfx2/source/appl/appcfg.cxx	2005-04-18 18:07:44.167812451 +0200
@@ -315,18 +315,7 @@ BOOL SfxApplication::GetOptions( SfxItem
 					break;
     			case SID_ATTR_BUTTON_BIGSIZE :
                 {
-                    sal_Int16 eOptSymbolSet = aMiscOptions.GetSymbolSet();
-                    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-                    {
-                        // Use system settings, we have to retrieve the toolbar icon size from the
-                        // Application class
-                        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-                        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-                            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-                        else
-                            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-                    }
-					if(rSet.Put( SfxBoolItem( rPool.GetWhich( SID_ATTR_BUTTON_BIGSIZE ), eOptSymbolSet == SFX_SYMBOLS_LARGE)))
+					if( rSet.Put( SfxBoolItem( rPool.GetWhich( SID_ATTR_BUTTON_BIGSIZE ), aMiscOptions.AreCurrentSymbolsLarge() ) ) )
 						bRet = TRUE;
 					break;
                 }
@@ -776,7 +765,7 @@ void SfxApplication::SetOptions_Impl( co
     {
         DBG_ASSERT(pItem->ISA(SfxBoolItem), "BoolItem expected");
 		BOOL bBigSize = ( (const SfxBoolItem*)pItem )->GetValue();
-        aMiscOptions.SetSymbolSet( bBigSize ? SFX_SYMBOLS_LARGE : SFX_SYMBOLS_SMALL );
+        aMiscOptions.SetSymbolsSize( bBigSize ? SFX_SYMBOLS_SIZE_LARGE : SFX_SYMBOLS_SIZE_SMALL );
         SfxViewFrame* pViewFrame = SfxViewFrame::GetFirst();
         while ( pViewFrame )
         {
--- sfx2/source/appl/newhelp.cxx	2005-04-01 18:15:47.000000000 +0200
+++ sfx2/source/appl/newhelp.cxx	2005-04-18 18:08:10.491269252 +0200
@@ -2269,29 +2269,11 @@ sal_Bool SfxHelpTextWindow_Impl::HasSele
 	return bRet;
 }
 
-static sal_Int16 GetCurrentSymbolSet()
-{
-    sal_Int16   eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    return eOptSymbolSet;
-}
-
 // -----------------------------------------------------------------------
 
 void SfxHelpTextWindow_Impl::InitToolBoxImages()
 {
-	sal_Bool bLarge = ( GetCurrentSymbolSet() == SFX_SYMBOLS_LARGE );
+	sal_Bool bLarge = SvtMiscOptions().AreCurrentSymbolsLarge();
 	sal_Bool bHiContrast = GetBackground().GetColor().IsDark();
 
 	aIndexOnImage = Image( SfxResId(
--- sfx2/source/toolbox/imgmgr.cxx	2004-11-19 12:37:34.000000000 +0100
+++ sfx2/source/toolbox/imgmgr.cxx	2005-04-18 18:14:20.481413532 +0200
@@ -101,7 +101,7 @@ struct ToolBoxInf_Impl
 class SfxImageManager_Impl
 {
 public:
-    sal_Int16                       m_nSet;
+    sal_Int16                       m_nSymbolsSize;
     SvtMiscOptions		            m_aOpt;
     std::vector< ToolBoxInf_Impl* > m_aToolBoxes;
 	ImageList*			            m_pImageList[IMAGELIST_COUNT];
@@ -109,7 +109,7 @@ public:
 
     ImageList*              GetImageList( BOOL bBig, BOOL bHiContrast );
     Image                   GetImage( USHORT nId, BOOL bBig, BOOL bHiContrast );
-    void                    SetSymbolSet_Impl( sal_Int16 );
+    void                    SetSymbolsSize_Impl( sal_Int16 );
     
     DECL_LINK( OptionsChanged_Impl, void* );
     DECL_LINK( SettingsChanged_Impl, void* );
@@ -197,7 +197,7 @@ static sal_Int16 impl_convertBools( sal_
 
 SfxImageManager_Impl::SfxImageManager_Impl( SfxModule* pModule ) :
     m_pModule( pModule ),
-    m_nSet( SfxImageManager::GetCurrentSymbolSet() )
+    m_nSymbolsSize( SvtMiscOptions().GetCurrentSymbolsSize() )
 {
     for ( sal_uInt32 i = 0; i < IMAGELIST_COUNT; i++ )
         m_pImageList[i] = 0;
@@ -245,14 +245,14 @@ Image SfxImageManager_Impl::GetImage( US
 
 //-------------------------------------------------------------------------
 
-void SfxImageManager_Impl::SetSymbolSet_Impl( sal_Int16 nNewSet )
+void SfxImageManager_Impl::SetSymbolsSize_Impl( sal_Int16 nNewSymbolsSize )
 {
     ::vos::OGuard aGuard( Application::GetSolarMutex() );
     
-    if ( nNewSet != m_nSet )
+    if ( nNewSymbolsSize != m_nSymbolsSize )
 	{
-        m_nSet = nNewSet;
-        BOOL bLarge( m_nSet == SFX_SYMBOLS_LARGE );
+        m_nSymbolsSize = nNewSymbolsSize;
+        BOOL bLarge( m_nSymbolsSize == SFX_SYMBOLS_SIZE_LARGE );
 
         for ( sal_uInt32 n=0; n < m_aToolBoxes.size(); n++ )
 		{
@@ -294,7 +294,7 @@ void SfxImageManager_Impl::SetSymbolSet_
 
 IMPL_LINK( SfxImageManager_Impl, OptionsChanged_Impl, void*, pVoid )
 {
-    SetSymbolSet_Impl( SfxImageManager::GetCurrentSymbolSet() );
+    SetSymbolsSize_Impl( SvtMiscOptions().GetCurrentSymbolsSize() );
     return 0L;
 }
 
@@ -303,32 +303,14 @@ IMPL_LINK( SfxImageManager_Impl, Options
 IMPL_LINK( SfxImageManager_Impl, SettingsChanged_Impl, void*, pVoid )
 {
     // Check if toolbar button size have changed and we have to use system settings
-    sal_Int16 nSymbolSet = SfxImageManager::GetCurrentSymbolSet();
-    if ( m_nSet != nSymbolSet )
-        SetSymbolSet_Impl( nSymbolSet );
+    sal_Int16 nSymbolsSize = SvtMiscOptions().GetCurrentSymbolsSize();
+    if ( m_nSymbolsSize != nSymbolsSize )
+        SetSymbolsSize_Impl( nSymbolsSize );
     return 0L;
 }
 
 //-------------------------------------------------------------------------
 
-sal_Int16 SfxImageManager::GetCurrentSymbolSet()
-{
-    sal_Int16 eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    return eOptSymbolSet;
-}
-
 //=========================================================================
 
 SfxImageManager::SfxImageManager( SfxModule* pModule )
@@ -374,7 +356,7 @@ Image SfxImageManager::GetImage( USHORT 
 
 Image SfxImageManager::GetImage( USHORT nId, BOOL bHiContrast ) const
 {
-    BOOL bLarge = ( GetCurrentSymbolSet() == SFX_SYMBOLS_LARGE );
+    BOOL bLarge = SvtMiscOptions().AreCurrentSymbolsLarge();
     return GetImage( nId, bLarge, bHiContrast );
 }
 
@@ -399,7 +381,7 @@ Image SfxImageManager::SeekImage( USHORT
 
 Image SfxImageManager::SeekImage( USHORT nId, BOOL bHiContrast ) const
 {
-    BOOL bLarge = ( GetCurrentSymbolSet() == SFX_SYMBOLS_LARGE );
+    BOOL bLarge = SvtMiscOptions().AreCurrentSymbolsLarge();
     return SeekImage( nId, bLarge, bHiContrast );
 }
 
@@ -469,7 +451,7 @@ void SfxImageManager::SetImagesForceSize
 
 void SfxImageManager::SetImages( ToolBox& rToolBox )
 {
-	BOOL bLarge = ( pImp->m_nSet == SFX_SYMBOLS_LARGE );
+    BOOL bLarge = ( pImp->m_nSymbolsSize == SFX_SYMBOLS_SIZE_LARGE );
     BOOL bHiContrast = rToolBox.GetBackground().GetColor().IsDark();
     SetImagesForceSize( rToolBox, bHiContrast, bLarge );
 }
--- sfx2/source/toolbox/tbxitem.cxx	2005-04-18 16:29:59.227953000 +0200
+++ sfx2/source/toolbox/tbxitem.cxx	2005-04-18 18:16:42.286939278 +0200
@@ -1670,24 +1670,6 @@ SfxPopupWindow* SfxAppToolBoxControl_Imp
 	return 0;
 }
 
-static sal_Int16 GetCurrentSymbolSet()
-{
-    sal_Int16   eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    return eOptSymbolSet;
-}
-
 void SfxAppToolBoxControl_Impl::SetImage( const String &rURL )
 {
     /* We accept URL's here only, which exist as items of our internal popup menu.
@@ -1699,7 +1681,7 @@ void SfxAppToolBoxControl_Impl::SetImage
     if (!bValid)
         aURL = sFallback;
 
-	BOOL bBig = ( GetCurrentSymbolSet() == SFX_SYMBOLS_LARGE );
+    BOOL bBig = SvtMiscOptions().AreCurrentSymbolsLarge();
     BOOL bHC = GetToolBox().GetBackground().GetColor().IsDark();
     Image aImage = SvFileInformationManager::GetImageNoDefault( INetURLObject( aURL ), bBig, bHC );
     if ( !aImage )
--- svtools/inc/imgdef.hxx	2003-04-04 19:21:02.000000000 +0200
+++ svtools/inc/imgdef.hxx	2005-04-18 17:02:52.830373947 +0200
@@ -62,11 +62,11 @@
 #ifndef _SVTOOLS_IMGDEF_HXX
 #define _SVTOOLS_IMGDEF_HXX
 
-enum SfxSymbolSet
+enum SfxSymbolsSize
 {
-	SFX_SYMBOLS_SMALL,
-    SFX_SYMBOLS_LARGE,
-	SFX_SYMBOLS_AUTO
+    SFX_SYMBOLS_SIZE_SMALL,
+    SFX_SYMBOLS_SIZE_LARGE,
+    SFX_SYMBOLS_SIZE_AUTO
 };
 
 #define SFX_TOOLBOX_CHANGESYMBOLSET		0x0001
--- svtools/inc/miscopt.hxx	2003-03-27 15:36:23.000000000 +0100
+++ svtools/inc/miscopt.hxx	2005-04-18 18:04:27.111822219 +0200
@@ -156,8 +156,11 @@ class SvtMiscOptions
         sal_Bool IsPluginsEnabled() const;
 		void SetPluginsEnabled( sal_Bool bEnable );
 
-        sal_Int16 GetSymbolSet() const;
-        void SetSymbolSet( sal_Int16 eSet );
+        sal_Int16 GetSymbolsSize() const;
+        void SetSymbolsSize( sal_Int16 eSet );
+        sal_Int16 GetCurrentSymbolsSize() const;
+        bool AreCurrentSymbolsLarge() const;
+
         sal_Int16 GetToolboxStyle() const;
         void SetToolboxStyle( sal_Int16 nStyle );
 
--- svtools/source/config/miscopt.cxx	2005-04-19 14:56:12.068555758 +0200
+++ svtools/source/config/miscopt.cxx	2005-04-19 15:04:38.876190433 +0200
@@ -104,6 +104,9 @@
 #include <rtl/logfile.hxx>
 #include "itemholder1.hxx"
 
+#include <imgdef.hxx>
+#include <vcl/svapp.hxx>
+
 //_________________________________________________________________________________________________________________
 //	namespaces
 //_________________________________________________________________________________________________________________
@@ -149,7 +152,7 @@ class SvtMiscOptions_Impl : public Confi
 
 	private:
     LinkList    aList;
-    sal_Int16   m_nSymbolSet;
+    sal_Int16   m_nSymbolsSize;
     sal_Int16   m_nToolboxStyle;
     sal_Bool    m_bPluginsEnabled;
     sal_Bool    m_bUseSystemFileDialog;
@@ -222,10 +225,10 @@ class SvtMiscOptions_Impl : public Confi
 
         void SetPluginsEnabled( sal_Bool bEnable );
 
-        inline sal_Int16 GetSymbolSet()
-        { return m_nSymbolSet; }
+        inline sal_Int16 GetSymbolsSize() const
+        { return m_nSymbolsSize; }
 
-        void SetSymbolSet( sal_Int16 nSet );
+        void SetSymbolsSize( sal_Int16 nSet );
 
         // translate to VCL settings ( "0" = 3D, "1" = FLAT )
         inline sal_Int16 GetToolboxStyle()
@@ -270,7 +273,7 @@ class SvtMiscOptions_Impl : public Confi
 SvtMiscOptions_Impl::SvtMiscOptions_Impl()
 	// Init baseclasses first
     : ConfigItem( ROOTNODE_MISC )
-	, m_nSymbolSet( 0 )
+    , m_nSymbolsSize( 0 )
     , m_nToolboxStyle( 1 )
 {
 	// Use our static list of configuration keys to get his values.
@@ -298,7 +301,7 @@ SvtMiscOptions_Impl::SvtMiscOptions_Impl
                                                         }
 													break;
             case PROPERTYHANDLE_SYMBOLSET           :   {
-                                                            if( !(seqValues[nProperty] >>= m_nSymbolSet) )
+                                                            if( !(seqValues[nProperty] >>= m_nSymbolsSize) )
                                                                 DBG_ERROR("Wrong type of \"Misc\\SymbolSet\"!" );
                                                         }
                                                     break;
@@ -374,7 +377,7 @@ void SvtMiscOptions_Impl::Load( const Se
                                                         }
                                                     break;
             case PROPERTYHANDLE_SYMBOLSET           :   {
-                                                            if( !(seqValues[nProperty] >>= m_nSymbolSet) )
+                                                            if( !(seqValues[nProperty] >>= m_nSymbolsSize) )
                                                                 DBG_ERROR("Wrong type of \"Misc\\SymbolSet\"!" );
                                                         }
                                                     break;
@@ -423,9 +426,9 @@ void SvtMiscOptions_Impl::SetToolboxStyl
 	CallListeners();
 }
 
-void SvtMiscOptions_Impl::SetSymbolSet( sal_Int16 nSet )
+void SvtMiscOptions_Impl::SetSymbolsSize( sal_Int16 nSet )
 {
-    m_nSymbolSet = nSet;
+    m_nSymbolsSize = nSet;
     SetModified();
 	CallListeners();
 }
@@ -464,7 +467,7 @@ void SvtMiscOptions_Impl::Commit()
 													}
                 									break;
             case PROPERTYHANDLE_SYMBOLSET           :   {
-                                                        seqValues[nProperty] <<= m_nSymbolSet;
+                                                        seqValues[nProperty] <<= m_nSymbolsSize;
 													}
                 									break;
             case PROPERTYHANDLE_TOOLBOXSTYLE        :   {
@@ -557,9 +560,32 @@ void SvtMiscOptions::SetPluginsEnabled( 
 	m_pDataContainer->SetPluginsEnabled( bEnable );
 }
 
-sal_Int16 SvtMiscOptions::GetSymbolSet() const
+sal_Int16 SvtMiscOptions::GetSymbolsSize() const
+{
+    return m_pDataContainer->GetSymbolsSize();
+}
+
+sal_Int16 SvtMiscOptions::GetCurrentSymbolsSize() const
+{
+    sal_Int16 eOptSymbolsSize = m_pDataContainer->GetSymbolsSize();
+
+    if ( eOptSymbolsSize == SFX_SYMBOLS_SIZE_AUTO )
+    {
+        // Use system settings, we have to retrieve the toolbar icon size from the
+        // Application class
+        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
+        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
+            eOptSymbolsSize = SFX_SYMBOLS_SIZE_LARGE;
+        else
+            eOptSymbolsSize = SFX_SYMBOLS_SIZE_SMALL;
+    }
+
+    return eOptSymbolsSize;
+}
+
+bool SvtMiscOptions::AreCurrentSymbolsLarge() const
 {
-    return m_pDataContainer->GetSymbolSet();
+    return ( GetCurrentSymbolsSize() == SFX_SYMBOLS_SIZE_LARGE );
 }
 
 void SvtMiscOptions::SetUseSystemFileDialog( sal_Bool bEnable )
@@ -572,9 +598,9 @@ sal_Bool SvtMiscOptions::UseSystemFileDi
     return m_pDataContainer->UseSystemFileDialog();
 }
 
-void SvtMiscOptions::SetSymbolSet( sal_Int16 nSet )
+void SvtMiscOptions::SetSymbolsSize( sal_Int16 nSet )
 {
-    m_pDataContainer->SetSymbolSet( nSet );
+    m_pDataContainer->SetSymbolsSize( nSet );
 }
 
 sal_Int16 SvtMiscOptions::GetToolboxStyle() const
--- svtools/source/contnr/templwin.cxx	2005-04-18 11:59:49.005213000 +0200
+++ svtools/source/contnr/templwin.cxx	2005-04-19 10:44:31.664226600 +0200
@@ -1450,7 +1450,7 @@ void SvtTemplateWindow::InitToolBoxes()
 void SvtTemplateWindow::InitToolBoxImages()
 {
 	SvtMiscOptions aMiscOpt;
-	BOOL bLarge = ( aMiscOpt.GetSymbolSet() == SFX_SYMBOLS_LARGE );
+	BOOL bLarge = aMiscOpt.AreCurrentSymbolsLarge();
 	sal_Bool bHiContrast = aFileViewTB.GetBackground().GetColor().IsDark();
 
 	aFileViewTB.SetItemImage( TI_DOCTEMPLATE_BACK, Image( SvtResId(
--- svtools/source/uno/toolboxcontroller.cxx	2005-03-01 20:52:07.000000000 +0100
+++ svtools/source/uno/toolboxcontroller.cxx	2005-04-19 10:50:35.300355921 +0200
@@ -691,21 +691,7 @@ sal_Bool ToolboxController::isBound() co
 
 sal_Bool ToolboxController::hasBigImages() const
 {
-    sal_Bool  bBig( sal_False );
-    sal_Int16 eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO ) 
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    return ( eOptSymbolSet == SFX_SYMBOLS_LARGE );
+    return SvtMiscOptions().AreCurrentSymbolsLarge();
 }
 
 sal_Bool ToolboxController::isHighContrast() const
--- svtools/util/makefile.mk	2005-04-19 15:18:40.494768096 +0200
+++ svtools/util/makefile.mk	2005-04-19 15:21:18.304471659 +0200
@@ -235,6 +235,7 @@ SHL2IMPLIB= _isvl
 SHL1OBJS=$(SLO)$/svtdata.obj
 
 SHL2STDLIBS= \
+		$(VCLLIB)			\
 		$(UNOTOOLSLIB)		\
 		$(TOOLSLIB) 		\
 		$(UCBHELPERLIB)		\
--- svx/source/dialog/cfg.cxx	2005-03-23 12:46:49.000000000 +0100
+++ svx/source/dialog/cfg.cxx	2005-04-18 18:48:11.040956600 +0200
@@ -450,22 +450,7 @@ void InitImageType()
 		css::ui::ImageType::COLOR_NORMAL |
 		css::ui::ImageType::SIZE_DEFAULT;
 
-    sal_Int16 eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-    {
-        // Use system settings, we have to retrieve the toolbar icon size
-		// from the Application class
-        ULONG nStyleIconSize =
-			Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    if ( eOptSymbolSet != SFX_SYMBOLS_SMALL )
+    if ( SvtMiscOptions().AreCurrentSymbolsLarge() )
 	{
         theImageType |= css::ui::ImageType::SIZE_LARGE;
 	}
--- svx/source/dialog/optgdlg.cxx	2005-04-18 11:59:58.745532000 +0200
+++ svx/source/dialog/optgdlg.cxx	2005-04-19 10:37:08.903594129 +0200
@@ -828,16 +828,16 @@ BOOL OfaViewTabPage::FillItemSet( SfxIte
 	if( nBigLB_InitialSelection != nBigLB_NewSelection )
 	{
 		// from now on it's modified, even if via auto setting the same size was set as now selected in the LB
-        sal_Int16 eSet = SFX_SYMBOLS_AUTO;
+        sal_Int16 eSet = SFX_SYMBOLS_SIZE_AUTO;
         switch( nBigLB_NewSelection )
 		{
-            case 0: eSet = SFX_SYMBOLS_AUTO;  break;
-            case 1: eSet = SFX_SYMBOLS_SMALL; break;
-            case 2: eSet = SFX_SYMBOLS_LARGE; break;
+            case 0: eSet = SFX_SYMBOLS_SIZE_AUTO;  break;
+            case 1: eSet = SFX_SYMBOLS_SIZE_SMALL; break;
+            case 2: eSet = SFX_SYMBOLS_SIZE_LARGE; break;
             default:
 				DBG_ERROR( "OfaViewTabPage::FillItemSet(): This state should not be possible!" );
 		}
-        aMiscOptions.SetSymbolSet( eSet );
+        aMiscOptions.SetSymbolsSize( eSet );
     }
 
     BOOL bAppearanceChanged = FALSE;
@@ -996,24 +996,6 @@ BOOL OfaViewTabPage::FillItemSet( SfxIte
 /*-----------------06.12.96 11.50-------------------
 
 --------------------------------------------------*/
-static sal_Int16 GetCurrentSymbolSet()
-{
-    sal_Int16   eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    return eOptSymbolSet;
-}
-
 void OfaViewTabPage::Reset( const SfxItemSet& rSet )
 {
 
@@ -1026,8 +1008,8 @@ void OfaViewTabPage::Reset( const SfxIte
 
     SvtMiscOptions aMiscOptions;
 
-    if( aMiscOptions.GetSymbolSet() != SFX_SYMBOLS_AUTO )
-        nBigLB_InitialSelection = ( GetCurrentSymbolSet() == SFX_SYMBOLS_LARGE )? 2 : 1;
+    if( aMiscOptions.GetSymbolsSize() != SFX_SYMBOLS_SIZE_AUTO )
+        nBigLB_InitialSelection = ( aMiscOptions.AreCurrentSymbolsLarge() )? 2 : 1;
     aIconSizeLB.SelectEntryPos( nBigLB_InitialSelection );
     aIconSizeLB.SaveValue();
 
--- svx/source/gallery2/galbrws2.cxx	2005-02-04 12:28:31.000000000 +0100
+++ svx/source/gallery2/galbrws2.cxx	2005-04-19 10:39:03.820797183 +0200
@@ -1243,21 +1243,14 @@ IMPL_LINK( GalleryBrowser2, SelectTbxHdl
 IMPL_LINK( GalleryBrowser2, MiscHdl, void*, p )
 {
 	sal_uInt16      nIconResId, nListResId;
-	sal_Int16       eOptSymbolSet = maMiscOptions.GetSymbolSet();
 	const sal_Bool  bHC = GALLERY_DLG_COLOR.IsDark();
  
-    if( SFX_SYMBOLS_AUTO == eOptSymbolSet )
-    {
-        eOptSymbolSet = ( Application::GetSettings().GetStyleSettings().GetToolbarIconSize() == STYLE_TOOLBAR_ICONSIZE_LARGE ) ?
-                        SFX_SYMBOLS_LARGE : SFX_SYMBOLS_SMALL;
-    }
-
     maViewBox.SetOutStyle( maMiscOptions.GetToolboxStyle() );
 	
 	BitmapEx aIconBmpEx = BitmapEx( Image( GAL_RESID( bHC? RID_SVXIMG_GALLERY_VIEW_ICON_HC : RID_SVXIMG_GALLERY_VIEW_ICON ) ).GetBitmapEx() );
 	BitmapEx aListBmpEx = BitmapEx( Image( GAL_RESID( bHC? RID_SVXIMG_GALLERY_VIEW_LIST_HC : RID_SVXIMG_GALLERY_VIEW_LIST ) ).GetBitmapEx() );
 	
-	if( SFX_SYMBOLS_SMALL != eOptSymbolSet )
+	if( maMiscOptions.AreCurrentSymbolsLarge() )
 	{
 		const Size aLargeSize( 24, 24);
 	
