--- sc/source/filter/excel/excform.cxx	2005-04-19 09:07:42.000000000 +0530
+++ sc/source/filter/excel/excform.cxx	2005-04-22 10:28:40.189224145 +0530
@@ -1435,9 +1435,6 @@ void ExcelToSc::DoMulArgs( DefTokenId eI
 		else if( eId == ocIndirect && nAnz == 2 )
 			nSkipEnd = 0;
 
-		else if( eId == ocAdress && nAnz > 3 )
-			nNull = nAnz - 4;
-
 		// Joost-Spezialfaelle
 		else if( eId == ocIf )
 		{
--- sc/source/ui/src/scfuncs.src	2005-04-14 09:49:55.000000000 +0530
+++ sc/source/ui/src/scfuncs.src	2005-04-22 10:28:59.008693174 +0530
@@ -9024,7 +9024,7 @@ Resource RID_SC_FUNCTION_DESCRIPTIONS2
 		{
 			ID_FUNCTION_GRP_TABLE;
 			U2S( HID_FUNC_ADRESSE );
-			4;	0;	0;	1;	1;
+			5;	0;	0;	1;	1;	1;
 		};
 		String 2 // Name of Parameter 1
 		{
@@ -9064,11 +9064,23 @@ Resource RID_SC_FUNCTION_DESCRIPTIONS2
 		};
 		String 8 // Name of Parameter 4
 		{
+			Text [ de ] = " ";
+			Text [ en-US ] = "A1";
+			Text [ x-comment ] = " ";
+		};
+		String 9 // Description of Parameter 4
+		{
+			Text [ de ] = " ";
+			Text [ en-US ] = "If TRUE (or 1) or omitted generate A1 style address, otherwise produce R1C1 style address.";
+			Text [ x-comment ] = " ";
+		};
+		String 10 // Name of Parameter 5
+		{
 			Text [ de ] = "Tabelle" ;
 			Text [ en-US ] = "sheet" ;
 			Text [ x-comment ] = " ";
 		};
-		String 9 // Description of Parameter 4
+		String 11 // Description of Parameter 5
 		{
 			Text [ de ] = "Der Tabellenname des Zellbezugs." ;
 			Text [ en-US ] = "The spreadsheet name of the cell reference." ;
--- sc/source/filter/excel/xeformula.cxx	2005-04-14 09:50:11.000000000 +0530
+++ sc/source/filter/excel/xeformula.cxx	2005-04-22 10:28:28.800755995 +0530
@@ -1398,9 +1398,6 @@ void XclExpFmlaCompImpl::AppendDefaultPa
 
     switch( rFuncData.GetOpCode() )
     {
-        case ocAdress:
-            AppendBoolToken( true );
-        break;
         case ocExternal:
             AppendAddInFuncToken( rFuncData.GetExtFuncName(), EXC_TOKCLASS_REF );
         break;
--- sc/source/filter/excel/xlformula.cxx	2005-04-14 09:50:10.000000000 +0530
+++ sc/source/filter/excel/xlformula.cxx	2005-04-22 10:28:32.897204965 +0530
@@ -227,7 +227,7 @@ static const XclFunctionInfo saFuncTable
     { ocRKP,                51,     1,  4,  A, { R, R, V, V } },    // BIFF2: 1-2, BIFF3: 1-4
     { ocGrowth,             52,     1,  4,  A, { R, R, R, V } },    // BIFF2: 1-3, BIFF3: 1-4
     { ocTrunc,              197,    1,  2,  V, { V } },             // BIFF2: 1,   BIFF3: 1-2
-    { ocAdress,             219,    2,  5,  V, { V, V, V, E, V } },
+    { ocAdress,             219,    2,  5,  V, { V, V, V, V, V } },
     { ocGetDiffDate360,     220,    2,  2,  V, { V, V, C, I } },
     { ocGetActDate,         221,    0,  0,  V, {}, true },
     { ocVBD,                222,    5,  7,  V, { V } },
--- sc/source/core/tool/interpr1.cxx	2005-04-22 10:38:28.000000000 +0530
+++ sc/source/core/tool/interpr1.cxx	2005-04-25 15:03:00.965600393 +0530
@@ -5311,41 +5311,76 @@ void ScInterpreter::ScIndirect()
 	}
 }
 
+static String lcl_getSBraN(sal_Int64 n)
+{
+	String aStr;
+	aStr.Insert('[');
+	aStr.Insert(String::CreateFromInt64(n));
+	aStr.Insert(']');
+	return aStr;
+}
 
 void ScInterpreter::ScAdress()
+// named as ScAdress to avoid confusion with ScAddress (class)
 {
 	BYTE nParamCount = GetByte();
-	if ( MustHaveParamCount( nParamCount, 2, 4 ) )
+	if ( MustHaveParamCount( nParamCount, 2, 5 ) )
 	{
 		String sTabStr;
+		bool bA1 = TRUE;
+
 		USHORT nAbs = 1;
-		if (nParamCount == 4)
+		if (nParamCount == 5)
 			sTabStr = GetString();
+
+		if (nParamCount >= 4)
+			bA1 = GetBool();
+			
 		if (nParamCount >= 3)
 			nAbs = (USHORT) ::rtl::math::approxFloor(GetDouble());
+
 		SCCOL nCol = (SCCOL) ::rtl::math::approxFloor(GetDouble());
 		SCROW nRow = (SCROW) ::rtl::math::approxFloor(GetDouble());
 		if (nCol < 1 || nCol > MAXCOL + 1 || nRow < 1 || nRow > MAXROW + 1)
 		{
-			SetIllegalParameter();
+			SetNV();
 			return;
 		}
-		else
+
+		if (bA1 == TRUE)
 		{
 			nRow--;
 			nCol--;
 		}
 		String aRefStr;
 		ScAddress aAdr( nCol, nRow, 0);
-		if (nAbs == 4)
-			aRefStr = aAdr.GetColRowString();
+		if (nAbs > 8 || nAbs == 0)
+		{
+			SetNV();
+			return;
+		}
+		if (nAbs > 4 ) 
+			nAbs -= 4;
+
+		if (bA1 == TRUE)
+		{
+			nAbs--; // map from 1..4 -> 0..3
+			aRefStr = ScRefAddress (aAdr, ((nAbs & 1) != 0), ((nAbs & 2) != 0), 
+									true).GetRefString(pDok,0);
+		}
 		else
 		{
-			aRefStr = aAdr.GetColRowString(TRUE);
-			if (nAbs == 2)
-				aRefStr.EraseLeadingChars('$');
-			else if (nAbs == 3)
-				aRefStr.Erase(aRefStr.Search('$',1),1);
+			aRefStr = String('R');
+			if (nAbs == 3 || nAbs == 4)
+				aRefStr.Insert( lcl_getSBraN( nRow ) );
+			else
+				aRefStr.Insert( String::CreateFromInt64( nRow ) );
+
+			aRefStr.Insert('C');
+			if (nAbs == 2 || nAbs == 4)
+				aRefStr.Insert( lcl_getSBraN( nCol ) );
+			else
+				aRefStr.Insert( String::CreateFromInt64( nCol ) );
 		}
 		if ( sTabStr.Len() )
 		{
