--- /dev/null	2007-04-20 15:46:12.000000000 +0100
+++ offapi/com/sun/star/awt/XMetricField.idl	2007-07-25 15:03:47.000000000 +0100
@@ -0,0 +1,194 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile: XNumericField.idl,v $
+ *
+ *  $Revision: 1.11 $
+ *
+ *  last change: $Author: rt $ $Date: 2005/09/07 21:48:40 $
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *    MA  02111-1307  USA
+ *
+ ************************************************************************/
+#ifndef __com_sun_star_awt_XMetricField_idl__ 
+#define __com_sun_star_awt_XMetricField_idl__ 
+ 
+#ifndef __com_sun_star_uno_XInterface_idl__ 
+#include <com/sun/star/uno/XInterface.idl> 
+#endif 
+#ifndef __com_sun_star_util_MeasureUnit_idl__ 
+#include <com/sun/star/util/MeasureUnit.idl> 
+#endif
+  
+//============================================================================= 
+ 
+ module com {  module sun {  module star {  module awt {  
+ 
+//============================================================================= 
+
+/** specifies attributes for the MetricField map units.
+
+	<p><b>IMPORTANT:</b> These constands have to be disjunct with
+	constants in <type>util/MeasureUnit</type>.</p>
+ */
+constants FieldUnit
+{
+    const short FUNIT_NONE = 0;
+    const short FUNIT_MM = 1;
+    const short FUNIT_CM = 2;
+    const short FUNIT_M = 3;
+    const short FUNIT_KM = 4;
+    const short FUNIT_TWIP = 5;
+    const short FUNIT_POINT = 6;
+    const short FUNIT_PICA = 7;
+    const short FUNIT_INCH = 8;
+    const short FUNIT_FOOT = 9;
+    const short FUNIT_MILE = 10;
+    const short FUNIT_CUSTOM = 11;
+    const short FUNIT_PERCENT = 12;
+    const short FUNIT_100TH_MM = 13;
+};
+ 
+/** gives access to the value and formatting of a metric field.
+ */
+interface XMetricField: com::sun::star::uno::XInterface
+{ 
+	//------------------------------------------------------------------------- 
+		
+	/** sets the value which is displayed in the metric field.
+	 */
+	[oneway] void setValue( [in] hyper Value, [in] short FieldUnit ); 
+ 
+	//------------------------------------------------------------------------- 
+		
+	/** sets the user value which is displayed in the metric field.
+	 */
+	[oneway] void setUserValue( [in] hyper Value, [in] short FieldUnit ); 
+ 
+	//------------------------------------------------------------------------- 
+	 
+	/** returns the value which is currently displayed in the metric field.
+	 */
+	hyper getValue( [in] short FieldUnit );
+
+	//------------------------------------------------------------------------- 
+		
+	/** returns the corrected value which is displayed in the metric field.
+	 */
+	hyper getCorrectedValue( [in] short FieldUnit ); 
+ 
+	//------------------------------------------------------------------------- 
+		
+	/** sets the minimum value that can be entered by the user.
+	 */
+	[oneway] void setMin( [in] hyper Value, [in] short FieldUnit ); 
+ 
+	//------------------------------------------------------------------------- 
+	 
+	/** returns the currently set minimum value that can be entered by the
+        user.
+	 */
+	hyper getMin( [in] short FieldUnit );
+ 
+	//------------------------------------------------------------------------- 
+		
+	/** sets the maximum value that can be entered by the user.
+	 */
+	[oneway] void setMax( [in] hyper Value, [in] short FieldUnit ); 
+ 
+	//------------------------------------------------------------------------- 
+	 
+	/** returns the currently set maximum value that can be entered by the
+        user.
+	 */
+	hyper getMax( [in] short FieldUnit );
+ 
+	//------------------------------------------------------------------------- 
+		
+	/** sets the first value to be set on POS1 key.
+	 */    
+	[oneway] void setFirst( [in] hyper Value, [in] short FieldUnit );
+ 
+	//------------------------------------------------------------------------- 
+	 
+	/** returns the currently set first value which is set on POS1 key.
+	 */    
+	hyper getFirst( [in] short FieldUnit );
+ 
+	//------------------------------------------------------------------------- 
+		
+	/** sets the last value to be set on END key.
+	 */    
+	[oneway] void setLast( [in] hyper Value, [in] short FieldUnit );
+ 
+	//------------------------------------------------------------------------- 
+	 
+	/** returns the currently set last value which is set on END key.
+	 */    
+	hyper getLast( [in] short FieldUnit );
+ 
+	//------------------------------------------------------------------------- 
+		
+	/** sets the increment value for the spin button.
+	 */    
+	[oneway] void setSpinSize( [in] hyper Value ); 
+ 
+	//------------------------------------------------------------------------- 
+	 
+	/** returns the currently set increment value for the spin button.
+	 */    
+	hyper getSpinSize(); 
+ 
+	//------------------------------------------------------------------------- 
+		
+	/** sets the number of decimals.
+	 */    
+	[oneway] void setDecimalDigits( [in] short nDigits ); 
+ 
+	//------------------------------------------------------------------------- 
+	 
+	/** returns the currently set number of decimals.
+	 */    
+	short getDecimalDigits(); 
+ 
+	//------------------------------------------------------------------------- 
+		
+	/** determines if the format is checked during user input.
+	 */    
+	[oneway] void setStrictFormat( [in] boolean bStrict ); 
+ 
+	//------------------------------------------------------------------------- 
+	 
+	/** returns whether the format is currently checked during user input.
+	 */    
+	boolean isStrictFormat();
+    
+}; 
+ 
+//============================================================================= 
+ 
+}; }; }; };  
+ 
+#endif 
