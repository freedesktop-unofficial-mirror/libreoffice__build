--- desktop/prj/build.lst	2006-08-03 13:55:33.000000000 +0200
+++ desktop/prj/build.lst	2006-08-03 16:52:30.000000000 +0200
@@ -14,6 +14,8 @@ dt	desktop\win32\source\setup				nmake	-
 dt	desktop\win32\source\officeloader		nmake	-	w	dt_officeloader NULL
 dt	desktop\win32\source\applauncher		nmake	-	w	dt_applauncher NULL
 dt	desktop\win32\source\applauncher\ooo	nmake	-	w	dt_applauncher_ooo dt_applauncher.w NULL
+dt	desktop\unx\source					nmake	-	u	dt_uwrapper NULL
+dt	desktop\unx\splash					nmake	-	u	dt_usplash NULL
 dt	desktop\source\pagein					nmake	-	u	dt_pagein NULL
 dt	desktop\source\pkgchk					nmake	-	all	dt_pkgchk dt_dp_misc dt_app NULL
 dt	desktop\source\pkgchk\msi				nmake	-	w	dt_pkgchk_msi dt_pkgchk NULL
@@ -32,4 +34,4 @@ dt	desktop\source\deployment\registry\co
 dt	desktop\scripts 						nmake	-	u	dt_scripts NULL
 dt	desktop\macosx\source					nmake	-	u	dt_macosx_bundle	NULL
 dt	desktop\macosx\source\misc				nmake	-	u	dt_misc_macosxrc	NULL
-dt	desktop\util							nmake	-	all	dt_util dt_app dt_so_comp dt_spl dt_wrapper.w dt_officeloader.w dt_migr dt_macosx_bundle.u NULL
+dt	desktop\util							nmake	-	all	dt_util dt_app dt_so_comp dt_spl dt_uwrapper.u dt_usplash.u dt_wrapper.w dt_officeloader.w dt_migr dt_macosx_bundle.u NULL
--- desktop/source/app/app.cxx	2006-08-03 16:32:10.000000000 +0200
+++ desktop/source/app/app.cxx	2006-08-03 17:28:07.000000000 +0200
@@ -2903,14 +2903,18 @@ void Desktop::OpenSplashScreen()
         else if ( pCmdLine->IsWeb() )
             aAppName = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "web" ));
 
+        // Which splash to use
+        OUString aSplashService( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.office.SplashScreen" ));
+        if ( pCmdLine->GetStringParam( CommandLineArgs::CMD_STRINGPARAM_SPLASHPIPE ).getLength() )
+            aSplashService = OUString::createFromAscii("com.sun.star.office.PipeSplashScreen");
+
         bVisible = sal_True;
         Sequence< Any > aSeq( 2 );
         aSeq[0] <<= bVisible;
         aSeq[1] <<= aAppName;
         m_rSplashScreen = Reference<XStatusIndicator>(
             comphelper::getProcessServiceFactory()->createInstanceWithArguments(
-            OUString::createFromAscii("com.sun.star.office.SplashScreen"),
-            aSeq), UNO_QUERY);
+            aSplashService, aSeq), UNO_QUERY);
 
         if(m_rSplashScreen.is())
                 m_rSplashScreen->start(OUString::createFromAscii("SplashScreen"), 100);
--- desktop/source/app/cmdlineargs.hxx	2006-08-03 16:57:06.000000000 +0200
+++ desktop/source/app/cmdlineargs.hxx	2006-08-03 16:57:34.000000000 +0200
@@ -121,8 +121,8 @@ class CommandLineArgs
 		sal_Bool				GetBoolParam( BoolParam eParam ) const;
 		void					SetBoolParam( BoolParam eParam, sal_Bool bNewValue );
 
-		const rtl::OUString&	GetStringParam( BoolParam eParam ) const;
-		void					SetStringParam( BoolParam eParam, const rtl::OUString& bNewValue );
+		const rtl::OUString&	GetStringParam( StringParam eParam ) const;
+		void					SetStringParam( StringParam eParam, const rtl::OUString& bNewValue );
 
 		// Access to bool parameters
 		sal_Bool				IsMinimized() const;
--- desktop/source/app/cmdlineargs.cxx	2006-08-03 16:57:15.000000000 +0200
+++ desktop/source/app/cmdlineargs.cxx	2006-08-03 16:57:46.000000000 +0200
@@ -557,7 +557,7 @@ void CommandLineArgs::SetBoolParam( Bool
 	m_aBoolParams[eParam] = bNewValue;
 }
 
-const rtl::OUString& CommandLineArgs::GetStringParam( BoolParam eParam ) const
+const rtl::OUString& CommandLineArgs::GetStringParam( StringParam eParam ) const
 {
 	osl::MutexGuard  aMutexGuard( m_aMutex );
 
@@ -565,7 +565,7 @@ const rtl::OUString& CommandLineArgs::Ge
 	return m_aStrParams[eParam];
 }
 
-void CommandLineArgs::SetStringParam( BoolParam eParam, const rtl::OUString& aNewValue )
+void CommandLineArgs::SetStringParam( StringParam eParam, const rtl::OUString& aNewValue )
 {
 	osl::MutexGuard  aMutexGuard( m_aMutex );
 
