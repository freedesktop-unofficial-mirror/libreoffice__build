--- vcl/unx/gtk/window/gtkframe.cxx
+++ vcl/unx/gtk/window/gtkframe.cxx
@@ -1170,6 +1170,10 @@ void GtkSalFrame::SetInputContext( SalIn
                           G_CALLBACK (signalIMRetrieveSurrounding), this );
         g_signal_connect( m_pIMContext, "delete_surrounding",
                           G_CALLBACK (signalIMDeleteSurrounding), this );
+        g_signal_connect( m_pIMContext, "preedit_start",
+                          G_CALLBACK (signalIMPreeditStart), this );
+        g_signal_connect( m_pIMContext, "preedit_end",
+                          G_CALLBACK (signalIMPreeditEnd), this );
 
         gtk_im_context_set_client_window( m_pIMContext, GTK_WIDGET(m_pWindow)->window );
 		gtk_im_context_focus_in( m_pIMContext );
@@ -1851,10 +1855,13 @@ gboolean GtkSalFrame::signalKey( GtkWidg
 
 	vcl::DeletionListener aDel( pThis );
 
-    if( pThis->m_pIMContext )
+    if( pThis->m_pIMContext && pEvent->type == GDK_KEY_PRESS )
     {
-		if( pEvent->type == GDK_KEY_PRESS )
-        {
+		GObject* pRef = G_OBJECT( g_object_ref( G_OBJECT( pThis->m_pIMContext ) ) );
+		gboolean bResult = gtk_im_context_filter_keypress( pThis->m_pIMContext, pEvent );
+		g_object_unref( pRef );
+		if( bResult )
+		{
             // Add this key press event to the list of previous key presses
             // to which we compare key release events.  If a later key release
             // event has a matching key press event in this list, we swallow
@@ -1870,12 +1877,8 @@ gboolean GtkSalFrame::signalKey( GtkWidg
                 pThis->m_aPrevKeyPresses.pop_front();
                 pThis->m_nPrevKeyPresses--;
             }
-        
-            GObject* pRef = G_OBJECT( g_object_ref( G_OBJECT( pThis->m_pIMContext ) ) );
-            gboolean bResult = gtk_im_context_filter_keypress( pThis->m_pIMContext, pEvent );
-            g_object_unref( pRef );
-            if( bResult )
-                return TRUE;
+
+			return TRUE;
         }
     }
     
@@ -2145,6 +2148,11 @@ void GtkSalFrame::signalIMPreeditChanged
                                        &pText,
                                        &pAttribs,
                                        &nCursorPos );
+#if OSL_DEBUG_LEVEL > 1
+	fprintf( stderr, ":signalImPreeditChanged '%s'\n", pText );
+#endif
+	bool bEndPreedit = (!pText || !strlen( pText )) && pThis->m_bWasPreedit;
+
     SalExtTextInputEvent aTextEvent;
 
     aTextEvent.mnTime 			= 0;
@@ -2164,10 +2172,14 @@ void GtkSalFrame::signalIMPreeditChanged
     g_free( pText );
     pango_attr_list_unref( pAttribs );
     
+	vcl::DeletionListener aDel( pThis );
     GTK_YIELD_GRAB();
     pThis->m_bWasPreedit = true;
     pThis->CallCallback( SALEVENT_EXTTEXTINPUT, (void*)&aTextEvent);
 
+	if( bEndPreedit && !aDel.isDeleted() )
+			signalIMPreeditEnd( pContext, frame );
+
     delete [] pSalAttribs;
 }
 
@@ -2178,7 +2190,13 @@ void GtkSalFrame::signalIMPreeditStart( 
 
 void GtkSalFrame::signalIMPreeditEnd( GtkIMContext* pContext, gpointer frame )
 {
-//    GtkSalFrame* pThis = (GtkSalFrame*)frame;
+    GtkSalFrame* pThis = (GtkSalFrame*)frame;
+#if OSL_DEBUG_LEVEL > 1
+	fprintf( stderr, ":signalImPreeditEnd\n" );
+#endif
+    GTK_YIELD_GRAB();
+	pThis->m_bWasPreedit = false;
+	pThis->CallCallback( SALEVENT_ENDEXTTEXTINPUT, (void*)NULL );
 }
 
 gboolean GtkSalFrame::signalIMRetrieveSurrounding( GtkIMContext* pContext, gpointer frame )
