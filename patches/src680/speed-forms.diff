Index: svx/source/form/fmdocumentclassification.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/form/fmdocumentclassification.cxx,v
retrieving revision 1.8
diff -u -r1.8 fmdocumentclassification.cxx
--- svx/source/form/fmdocumentclassification.cxx	17 Feb 2005 10:55:25 -0000	1.8
+++ svx/source/form/fmdocumentclassification.cxx	1 Jul 2005 11:24:20 -0000
@@ -130,6 +130,25 @@
 	//= DocumentClassification
 	//====================================================================
 	//--------------------------------------------------------------------
+
+    bool DocumentClassification::isEnhancedForm( const Reference< XModel >& _rxDocumentModel ) SAL_THROW(())
+	{
+		if( !_rxDocumentModel.is() )
+			return false;
+        try
+        {
+            Reference< XNameContainer > xXForms;
+            Reference< XFormsSupplier > xSuppForms( _rxDocumentModel, UNO_QUERY );
+            xXForms = xSuppForms.is() ? xSuppForms->getXForms() : Reference< XNameContainer >();
+            if ( xXForms.is() )
+                return true;
+		}
+        catch( const Exception& )
+		{
+		}
+		return false;
+	}
+
     DocumentType DocumentClassification::classifyDocument( const Reference< XModel >& _rxDocumentModel ) SAL_THROW(())
     {
         DocumentType eType( eUnknownDocumentType );
@@ -140,14 +159,8 @@
 
         try
         {
-            // XForms
-            {
-                Reference< XNameContainer > xXForms;
-                Reference< XFormsSupplier > xSuppForms( _rxDocumentModel, UNO_QUERY );
-                xXForms = xSuppForms.is() ? xSuppForms->getXForms() : Reference< XNameContainer >();
-                if ( xXForms.is() )
-                    return eEnhancedForm;
-            }
+			if( DocumentClassification::isEnhancedForm( _rxDocumentModel ) )
+				return eEnhancedForm;
 
             // check for database forms before asking the service info
             if ( OStaticDataAccessTools().isEmbeddedInDatabase( _rxDocumentModel ) )
Index: svx/source/form/fmshell.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/form/fmshell.cxx,v
retrieving revision 1.61
diff -u -r1.61 fmshell.cxx
--- svx/source/form/fmshell.cxx	10 Mar 2005 16:23:34 -0000	1.61
+++ svx/source/form/fmshell.cxx	1 Jul 2005 11:24:23 -0000
@@ -683,7 +685,7 @@
     }
 	else if ((nFeature & FM_UI_FEATURE_SHOW_DATANAVIGATOR) == FM_UI_FEATURE_SHOW_DATANAVIGATOR)
 	{
-        bResult = ( GetImpl()->getDocumentType() == eEnhancedForm );
+        bResult = GetImpl()->isEnhancedForm();
 	}
     else if (  ( ( nFeature & FM_UI_FEATURE_TB_CONTROLS ) == FM_UI_FEATURE_TB_CONTROLS )
             || ( ( nFeature & FM_UI_FEATURE_TB_MORECONTROLS ) == FM_UI_FEATURE_TB_MORECONTROLS )
@@ -1198,7 +1202,7 @@
 				break;
 
 			case SID_FM_USE_WIZARDS:
-                if ( GetImpl()->getDocumentType() == eEnhancedForm )
+                if ( GetImpl()->isEnhancedForm() )
 					rSet.Put( SfxVisibilityItem( nWhich, sal_False ) );
 				else if (!m_bDesignMode || !GetFormModel())
 					rSet.DisableItem( nWhich );
@@ -1225,7 +1229,7 @@
 			case SID_FM_CURRENCYFIELD:
 			case SID_FM_PATTERNFIELD:
 			case SID_FM_DBGRID:
-                if ( GetImpl()->getDocumentType() == eEnhancedForm )
+                if ( GetImpl()->isEnhancedForm() )
                 {
                     // in XForms mode, several controls are disabled:
                     rSet.Put( SfxVisibilityItem( nWhich, sal_False ) );
@@ -1301,7 +1305,7 @@
 					rSet.DisableItem(nWhich);
 
                 // special case for data navigator: hide if not in XML form document
-                if ( nWhich == SID_FM_SHOW_DATANAVIGATOR && ( GetImpl()->getDocumentType() != eEnhancedForm ) )
+                if ( nWhich == SID_FM_SHOW_DATANAVIGATOR && !GetImpl()->isEnhancedForm() )
                     rSet.Put( SfxVisibilityItem( nWhich, sal_False ) );
 			}	break;
 
@@ -1337,7 +1341,7 @@
 				if (GetImpl()->IsSelectionUpdatePending())
 					GetImpl()->ForceUpdateSelection(sal_False);
 
-                if ( GetImpl()->getDocumentType() == eEnhancedForm ) 
+                if ( GetImpl()->isEnhancedForm() )
                 {
                     rSet.Put( SfxVisibilityItem( nWhich, sal_False ) );
                     break;
@@ -1364,7 +1368,7 @@
 				rSet.Put(SfxUInt16Item(nWhich, m_nLastSlot));
 				break;
 			case SID_FM_DESIGN_MODE:
-				if ( GetImpl()->getDocumentType() == eEnhancedForm )
+                if ( GetImpl()->isEnhancedForm() )
                     rSet.Put( SfxVisibilityItem( nWhich, sal_False ) );
                 else if (!m_pFormView || GetImpl()->IsReadonlyDoc() )
 					rSet.DisableItem( nWhich );
@@ -1412,7 +1416,7 @@
 			case SID_FM_CONVERTTO_IMAGECONTROL	:
             case SID_FM_CONVERTTO_SCROLLBAR     :
             case SID_FM_CONVERTTO_NAVIGATIONBAR :
-                if ( GetImpl()->getDocumentType() == eEnhancedForm )
+                if ( GetImpl()->isEnhancedForm() )
                 {
                     rSet.Put( SfxVisibilityItem( nWhich, sal_False ) );
                     break;
Index: svx/source/form/fmshimp.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/form/fmshimp.cxx,v
retrieving revision 1.66
diff -u -r1.66 fmshimp.cxx
--- svx/source/form/fmshimp.cxx	30 Mar 2005 11:54:21 -0000	1.66
+++ svx/source/form/fmshimp.cxx	1 Jul 2005 11:24:27 -0000
@@ -687,6 +687,31 @@
 	DBG_DTOR(FmXFormShell,NULL);
 }
 
+Reference< XModel > FmXFormShell::getContextDocument() const
+{
+    Reference< XModel > xModel;
+
+    // determine the type of document we live in
+    Reference< XController > xController;
+    if ( !m_xAttachedFrame.is() )
+		return xModel;
+	
+	xController = m_xAttachedFrame->getController();
+    if ( !xController.is() )
+		return xModel;
+	
+	return xController->getModel();
+}
+
+bool
+FmXFormShell::isEnhancedForm() const
+{
+    if ( m_eDocumentType != eUnknownDocumentType )
+		return m_eDocumentType == eEnhancedForm;
+
+	return DocumentClassification::isEnhancedForm( getContextDocument() );
+}
+
 //------------------------------------------------------------------
 ::svxform::DocumentType FmXFormShell::getDocumentType() const
 {
@@ -694,12 +719,7 @@
         return m_eDocumentType;
 
     // determine the type of document we live in
-    Reference< XController > xController;
-    if ( m_xAttachedFrame.is() )
-        xController = m_xAttachedFrame->getController();
-    Reference< XModel > xModel;
-    if ( xController.is() )
-        xModel = xController->getModel();
+    Reference< XModel > xModel = getContextDocument();
     if ( xModel.is() )
         m_eDocumentType = DocumentClassification::classifyDocument( xModel );
     else
Index: svx/source/form/fmview.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/form/fmview.cxx,v
retrieving revision 1.38
diff -u -r1.38 fmview.cxx
--- svx/source/form/fmview.cxx	13 Apr 2005 08:30:30 -0000	1.38
+++ svx/source/form/fmview.cxx	1 Jul 2005 11:24:29 -0000
@@ -607,7 +607,7 @@
 		return;
 
     // #i31958# don't call wizards in XForms mode
-    if( pFormShell->GetImpl()->getDocumentType() == eEnhancedForm )
+	if ( pFormShell->GetImpl()->isEnhancedForm() )
         return;
 
 	Reference< XChild >  xChild(xSet, UNO_QUERY);
Index: svx/source/form/navigatortree.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/form/navigatortree.cxx,v
retrieving revision 1.18
diff -u -r1.18 navigatortree.cxx
--- svx/source/form/navigatortree.cxx	16 Nov 2004 11:26:56 -0000	1.18
+++ svx/source/form/navigatortree.cxx	1 Jul 2005 11:24:31 -0000
@@ -539,7 +539,7 @@
 
                     // in XML forms, we don't allow for the properties of a form
                     // #i36484# / 2004-11-04 /- fs@openoffice.org
-                    if ( pFormShell->GetImpl()->getDocumentType() == eEnhancedForm && !m_nControlsSelected )
+                    if ( pFormShell->GetImpl()->isEnhancedForm() && !m_nControlsSelected )
                         aContextMenu.RemoveItem( aContextMenu.GetItemPos( SID_FM_SHOW_PROPERTY_BROWSER ) );
 
                     // if the property browser is already open, we don't allow for the properties, too
Index: source/inc/fmdocumentclassification.hxx
===================================================================
RCS file: /cvs/graphics/svx/source/inc/fmdocumentclassification.hxx,v
retrieving revision 1.3
diff -u -r1.3 fmdocumentclassification.hxx
--- svx/source/inc/fmdocumentclassification.hxx	16 Nov 2004 11:30:02 -0000	1.3
+++ svx/source/inc/fmdocumentclassification.hxx	1 Jul 2005 11:24:31 -0000
@@ -97,6 +97,10 @@
     public:
         /** classifies a document model
         */
+		static bool isEnhancedForm( 
+                                const ::com::sun::star::uno::Reference< ::com::sun::star::frame::XModel >& _rxDocumentModel
+                            ) SAL_THROW(());
+
         static DocumentType classifyDocument(
                                 const ::com::sun::star::uno::Reference< ::com::sun::star::frame::XModel >& _rxDocumentModel
                             ) SAL_THROW(());
Index: source/inc/fmshimp.hxx
===================================================================
RCS file: /cvs/graphics/svx/source/inc/fmshimp.hxx,v
retrieving revision 1.26
diff -u -r1.26 fmshimp.hxx
--- svx/source/inc/fmshimp.hxx	10 Mar 2005 16:24:42 -0000	1.26
+++ svx/source/inc/fmshimp.hxx	1 Jul 2005 11:24:32 -0000
@@ -597,6 +597,7 @@
     /// classifies our host document
     ::svxform::DocumentType
             getDocumentType() const;
+	bool    isEnhancedForm() const;
 
     /// determines whether our host document is currently read-only
     bool    IsReadonlyDoc() const;
@@ -606,6 +607,7 @@
 	inline sal_Bool	IsSelectionUpdatePending();
 	void		    ForceUpdateSelection(sal_Bool bLockInvalidation);
 
+	::com::sun::star::uno::Reference< ::com::sun::star::frame::XModel>			getContextDocument() const;
 	::com::sun::star::uno::Reference< ::com::sun::star::form::XForm>			getInternalForm(const ::com::sun::star::uno::Reference< ::com::sun::star::form::XForm>& _xForm) const;
 	::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XResultSet>		getInternalForm(const ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XResultSet>& _xForm) const;
 		// if the form belongs to the controller (extern) displaying a grid, the according internal form will
