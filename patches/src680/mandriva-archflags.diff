--- solenv/inc/unxlngi6.mk.mdkconfig	2005-12-30 15:52:05.000000000 +0100
+++ solenv/inc/unxlngi6.mk	2005-12-30 16:03:04.000000000 +0100
@@ -65,6 +65,14 @@
 # architecture dependent flags for the C and C++ compiler that can be changed by
 # exporting the variable ARCH_FLAGS="..." in the shell, which is used to start build
 ARCH_FLAGS*=-mtune=pentiumpro
+ARCH_FLAGS_CC*=$(ARCH_FLAGS)
+ARCH_FLAGS_CXX*=$(ARCH_FLAGS)
+# Compiler flags for enabling optimizations
+.IF "$(PRODUCT)"!=""
+ARCH_FLAGS_OPT=-Os -fno-strict-aliasing -Wuninitialized		# optimizing for products
+.ELSE 	# "$(PRODUCT)"!=""
+ARCH_FLAGS_OPT=   							# no optimizing for non products
+.ENDIF	# "$(PRODUCT)"!=""
 
 # name of C++ Compiler
 CXX*=g++
@@ -86,14 +94,14 @@
 .ENDIF
 
 # flags for the C++ Compiler
-CFLAGSCC= -pipe $(ARCH_FLAGS)
+CFLAGSCC=$(ARCH_FLAGS_CC)
 # Flags for enabling exception handling
 CFLAGSEXCEPTIONS=-fexceptions -fno-enforce-eh-specs
 # Flags for disabling exception handling
 CFLAGS_NO_EXCEPTIONS=-fno-exceptions
 
 # -fpermissive should be removed as soon as possible
-CFLAGSCXX= -pipe $(ARCH_FLAGS)
+CFLAGSCXX=$(ARCH_FLAGS_CXX)
 CFLAGSCXX+= -Wno-ctor-dtor-privacy
 PICSWITCH:=-fpic
 .IF "$(HAVE_GCC_VISIBILITY_FEATURE)" == "TRUE"
@@ -117,13 +125,7 @@
 # Compiler flags for debugging
 CFLAGSDEBUG=-g
 CFLAGSDBGUTIL=
-# Compiler flags for enabling optimizations
-.IF "$(PRODUCT)"!=""
-CFLAGSOPT=-Os -fno-strict-aliasing		# optimizing for products
-CFLAGSOPT+=-Wuninitialized				# not supported without optimization
-.ELSE 	# "$(PRODUCT)"!=""
-CFLAGSOPT=   							# no optimizing for non products
-.ENDIF	# "$(PRODUCT)"!=""
+CFLAGSOPT=$(ARCH_OPT_FLAGS)
 # Compiler flags for disabling optimizations
 CFLAGSNOOPT=-O0
 # Compiler flags for describing the output path
--- solenv/inc/unxlngi5.mk.mdkconfig	2005-12-30 15:52:05.000000000 +0100
+++ solenv/inc/unxlngi5.mk	2005-12-30 15:59:58.000000000 +0100
@@ -65,6 +65,13 @@
 # architecture dependent flags for the C and C++ compiler that can be changed by
 # exporting the variable ARCH_FLAGS="..." in the shell, which is used to start build
 ARCH_FLAGS*=-mcpu=pentiumpro
+ARCH_FLAGS_CC*=$(ARCH_FLAGS)
+ARCH_FLAGS_CXX*=$(ARCH_FLAGS)
+.IF "$(PRODUCT)"!=""
+ARCH_FLAGS_OPT*=-Os -fno-strict-aliasing              # optimizing for products
+.ELSE   # "$(PRODUCT)"!=""
+ARCH_FLAGS_OPT*=                                                      # no optimizing for non products
+.ENDIF	# "$(PRODUCT)"!=""
 
 # name of C++ Compiler
 CXX*=g++
@@ -90,13 +97,13 @@
 
 
 # flags for the C++ Compiler
-CFLAGSCC= -pipe $(ARCH_FLAGS)
+CFLAGSCC= $(ARCH_FLAGS_CC)
 # Flags for enabling exception handling
 CFLAGSEXCEPTIONS=-fexceptions -fno-enforce-eh-specs
 # Flags for disabling exception handling
 CFLAGS_NO_EXCEPTIONS=-fno-exceptions
 
-CFLAGSCXX= -pipe $(ARCH_FLAGS)
+CFLAGSCXX= $(ARCH_FLAGS_CXX)
 CFLAGSCXX+= -Wno-ctor-dtor-privacy
 PICSWITCH:=-fpic
 
@@ -118,11 +125,7 @@
 CFLAGSDEBUG=-g
 CFLAGSDBGUTIL=
 # Compiler flags for enabling optimizations
-.IF "$(PRODUCT)"!=""
-CFLAGSOPT=-Os -fno-strict-aliasing		# optimizing for products
-.ELSE 	# "$(PRODUCT)"!=""
-CFLAGSOPT=   							# no optimizing for non products
-.ENDIF	# "$(PRODUCT)"!=""
+CFLAGSOPT=$(ARCH_FLAGS_OPT)
 # Compiler flags for disabling optimizations
 CFLAGSNOOPT=-O0
 # Compiler flags for describing the output path
--- solenv/inc/unxlngi4.mk.mdkconfig	2005-12-30 15:52:05.000000000 +0100
+++ solenv/inc/unxlngi4.mk	2005-12-30 15:57:55.000000000 +0100
@@ -64,6 +64,9 @@
 # architecture dependent flags for the C and C++ compiler that can be changed by
 # exporting the variable ARCH_FLAGS="..." in the shell, which is used to start build
 ARCH_FLAGS*=-mcpu=pentiumpro
+ARCH_FLAGS_CC*=$(ARCH_FLAGS)
+ARCH_FLAGS_CXX*=$(ARCH_FLAGS)
+ARCH_FLAGS_OPT*=-O1
 
 # name of C++ Compiler
 CXX*=g++
@@ -80,13 +83,13 @@
 .ENDIF
 
 # flags for the C++ Compiler
-CFLAGSCC= -pipe $(ARCH_FLAGS)
+CFLAGSCC=$(ARCH_FLAGS_CC)
 # Flags for enabling exception handling
 CFLAGSEXCEPTIONS=-fexceptions -fno-enforce-eh-specs
 # Flags for disabling exception handling
 CFLAGS_NO_EXCEPTIONS=-fno-exceptions
 
-CFLAGSCXX= -pipe $(ARCH_FLAGS)
+CFLAGSCXX=$(ARCH_FLAGS_CXX)
 CFLAGSCXX+= -Wno-ctor-dtor-privacy
 
 # HACK: enable Hamburg developers to build on glibc-2.2 machines but compile vs. glibc-2.1 headers
@@ -115,7 +118,7 @@
 # Compiler flags for enabling optimizations
 # CFLAGSOPT=-O2
 # reduce to -O1 to avoid optimization problems
-CFLAGSOPT=-O1
+CFLAGSOPT=$(ARCH_FLAGS_OPT)
 # Compiler flags for disabling optimizations
 CFLAGSNOOPT=-O0
 # Compiler flags for describing the output path
