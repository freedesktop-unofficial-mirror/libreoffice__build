--- sw/source/filter/ww8/ww8par5.cxx	2008-07-07 18:23:57.000000000 +0200
+++ sw/source/filter/ww8/ww8par5.cxx	2008-07-07 18:24:02.000000000 +0200
@@ -527,6 +527,7 @@ void SwWW8ImplReader::ConvertFFileName( 
 {
     rName = rOrg;
     rName.SearchAndReplaceAllAscii( "\\\\", String( '\\' ));
+    rName.SearchAndReplaceAllAscii( "%20", String( ' ' ));
 
     // ggfs. anhaengende Anfuehrungszeichen entfernen
     if( rName.Len() &&  '"' == rName.GetChar( rName.Len()-1 ))
--- sw/source/filter/ww8/wrtw8nds.cxx	2008-07-07 13:37:02.000000000 +0200
+++ sw/source/filter/ww8/wrtw8nds.cxx	2008-07-07 17:52:26.000000000 +0200
@@ -1055,13 +1055,31 @@ void WW8_AttrIter::StartURL(const String
             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
         };
 
-	if (eProto == INET_PROT_SMB) { // #n261623# Convert smb notation to \\
-	    sURL = aURL.GetMainURL(INetURLObject::NO_DECODE);
-	    sURL = String(sURL.GetBuffer()+strlen("smb:"));
-	    sURL.SearchAndReplaceAll('/', '\\');
-	} else {
-	    sURL = aURL.PathToFileName();
-	}
+        // n#405712 save the file:// and smb:// hyperlinks as relative
+        sURL = URIHelper::simpleNormalizedMakeRelative( rWrt.GetBaseURL(), sURL );
+        if ( eProto == INET_PROT_FILE && sURL.EqualsAscii( "/", 0, 1 ) )
+            sURL = aURL.PathToFileName();
+
+        // special case for the windows names
+        // (convert '/c:/blah' into 'c:/blah', regardless of the protocol -
+        // for the relativized smb case)
+        sal_Unicode aDrive = ( sURL.Len() > 1 )? sURL.GetChar( 1 ): 0;
+        if ( sURL.EqualsAscii( "/", 0, 1 ) &&
+             ( ( aDrive >= 'A' && aDrive <= 'Z' ) || ( aDrive >= 'a' && aDrive <= 'z' ) ) &&
+             sURL.EqualsAscii( ":", 2, 1 ) )
+        {
+            sURL.Erase( 0, 1 );
+            sURL.SearchAndReplaceAll( '/', '\\' );
+        }
+
+        // n#261623 convert smb notation to '\\'
+        const char pSmb[] = "smb://";
+        if ( eProto == INET_PROT_SMB &&
+             sURL.EqualsAscii( pSmb, 0, sizeof( pSmb ) - 1 ) )
+        {
+            sURL.Erase( 0, sizeof( pSmb ) - 3 );
+            sURL.SearchAndReplaceAll( '/', '\\' );
+        }
 
         rWrt.pDataStrm->Write( MAGIC_C, sizeof(MAGIC_C) );
         SwWW8Writer::WriteLong( *rWrt.pDataStrm, sURL.Len()+1 );
