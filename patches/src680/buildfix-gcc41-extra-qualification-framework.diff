--- framework/inc/uielement/macrosmenucontroller.hxx.old	2005-09-09 02:44:45.000000000 +0200
+++ framework/inc/uielement/macrosmenucontroller.hxx	2005-11-22 13:44:51.000000000 +0100
@@ -97,7 +97,7 @@
 		private:
             void fillPopupMenu( com::sun::star::uno::Reference< com::sun::star::awt::XPopupMenu >& rPopupMenu );
             String RetrieveLabelFromCommand( const String& aCmdURL ); 
-            void MacrosMenuController::addScriptItems( PopupMenu* pPopupMenu, USHORT startItemId );
+            void addScriptItems( PopupMenu* pPopupMenu, USHORT startItemId );
     };
 }
 
--- framework/inc/services/sessionlistener.hxx.old	2005-09-09 02:34:11.000000000 +0200
+++ framework/inc/services/sessionlistener.hxx	2005-11-22 13:47:20.000000000 +0100
@@ -225,7 +225,7 @@
 
 
         // XInitialization
-        virtual void SAL_CALL SessionListener::initialize(const css::uno::Sequence< css::uno::Any  >& args) throw (css::uno::RuntimeException);
+        virtual void SAL_CALL initialize(const css::uno::Sequence< css::uno::Any  >& args) throw (css::uno::RuntimeException);
 
         // XSessionManagerListener
         virtual void SAL_CALL doSave( sal_Bool bShutdown, sal_Bool bCancelable ) 
--- framework/inc/services/substitutepathvars.hxx.old	2005-09-09 02:34:26.000000000 +0200
+++ framework/inc/services/substitutepathvars.hxx	2005-11-22 13:49:28.000000000 +0100
@@ -262,7 +262,7 @@
 	sal_Int32		nVarValueLength;
 	PreDefVariable	eVariable;
 
-	bool ReSubstFixedVarOrder::operator< ( const ReSubstFixedVarOrder& aFixedVarOrder ) const
+	bool operator< ( const ReSubstFixedVarOrder& aFixedVarOrder ) const
 	{
 		// Reverse operator< to have high to low ordering
 		return ( nVarValueLength > aFixedVarOrder.nVarValueLength );
@@ -274,7 +274,7 @@
 	sal_Int32		nVarValueLength;
 	rtl::OUString	aVarName;
 
-	bool ReSubstUserVarOrder::operator< ( const ReSubstUserVarOrder& aUserVarOrder ) const
+	bool operator< ( const ReSubstUserVarOrder& aUserVarOrder ) const
 	{
 		// Reverse operator< to have high to low ordering
 		return ( nVarValueLength > aUserVarOrder.nVarValueLength );
