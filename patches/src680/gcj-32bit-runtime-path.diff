--- jvmfwk/plugins/sunmajor/pluginlib/gnujre.cxx.old	2006-08-19 19:24:48.853803000 +0200
+++ jvmfwk/plugins/sunmajor/pluginlib/gnujre.cxx	2006-08-19 19:28:33.583803000 +0200
@@ -37,6 +37,11 @@
 #include "osl/thread.h"
 #include "gnujre.hxx"
 #include "util.hxx"
+extern "C"
+{
+#include <sys/utsname.h>
+#include <string.h>
+}

 using namespace rtl;
 using namespace std;
@@ -56,7 +61,9 @@
         "gij",
         "bin/gij",
        "gij-4.1",
-       "bin/gij-4.1"
+       "bin/gij-4.1",
+       "gij-4.2",
+       "bin/gij-4.2"
     };
     *size = sizeof (ar) / sizeof (char*);
     return ar;
@@ -67,7 +74,10 @@
     static char const* ar[]= {
           "/lib/" JFW_PLUGIN_ARCH "/client/libjvm.so",
           "/gcj-4.1.1/libjvm.so",
+          "/gcj-4.1/libjvm.so",	
-          "/libgcj.so.7",
+         "/libgcj.so.8",
+          "/libgcj.so.70",
+         "/libgcj.so.7",
           "/libgcj.so.6"
     };
     *size = sizeof(ar) / sizeof (char*);
@@ -154,7 +161,19 @@

     if (!bRt)
     {
-        m_sHome = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("file:///usr/lib"));
+#ifdef X86_64
+        m_sHome = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("file:///usr/lib64"));
+#else
+#if defined (__linux__) && defined (__i386__)
+       struct utsname uts;
+       uname(&uts);
+       if(!strcmp("x86_64",uts.machine)) {
+               m_sHome = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("file:///usr/lib32"));
+       } else {
+               m_sHome = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("file:///usr/lib"));
+       }
+#endif
+#endif
         for(i_path ip = libpaths.begin(); ip != libpaths.end(); ip++)
         {
             //Construct an absolute path to the possible runtime
