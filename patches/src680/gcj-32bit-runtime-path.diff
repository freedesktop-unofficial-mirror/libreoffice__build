--- jvmfwk/plugins/sunmajor/pluginlib/gnujre.cxx.old	2006-08-19 19:24:48.853803000 +0200
+++ jvmfwk/plugins/sunmajor/pluginlib/gnujre.cxx	2006-08-19 19:28:33.583803000 +0200
@@ -37,6 +37,11 @@
 #include "osl/thread.h"
 #include "gnujre.hxx"
 #include "util.hxx"
+extern "C"
+{
+#include <sys/utsname.h>
+#include <string.h>
+}
 
 using namespace rtl;
 using namespace std;
@@ -55,6 +60,10 @@
     static char const * ar[] = {
         "gij",
         "bin/gij",
+	"gij-4.2",
+	"bin/gij-4.2",
+	"gij-4.1",
+	"bin/gij-4.1",
 	"gij-4.0",
 	"bin/gij-4.0"
     };
@@ -66,15 +75,40 @@
 {
     static char const* ar[]= {
 #ifdef X86_64
+          "/lib64/libgcj.so.8",
+          "/lib64/libgcj.so.70",
           "/lib64/libgcj.so.7",
           "/lib64/libgcj.so.6"
 #else
+          "/lib/libgcj.so.8",
+          "/lib/libgcj.so.70",
           "/lib/libgcj.so.7",
           "/lib/libgcj.so.6"
 #endif
     };
+#if defined(__linux__) && defined (__i386__)
+    struct utsname uts;
+    static char const* ar64[]= {
+          "/lib32/libgcj.so.8",
+          "/lib32/libgcj.so.70",
+          "/lib32/libgcj.so.7",
+          "/lib32/libgcj.so.6"
+    };
+    uname(&uts);
+    if (!strcmp("x86_64", uts.machine))
+    {
+        *size = sizeof(ar64) / sizeof (char*);
+	return ar64;
+    }
+    else
+    {
+        *size = sizeof(ar) / sizeof (char*);
+	return ar;
+    }
+#else
     *size = sizeof(ar) / sizeof (char*);
     return ar;
+#endif
 }
 
 bool GnuInfo::initialize(vector<pair<OUString, OUString> > props)
