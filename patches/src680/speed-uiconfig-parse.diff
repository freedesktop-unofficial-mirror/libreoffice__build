Index: svx/source/dialog/cfg.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/dialog/cfg.cxx,v
retrieving revision 1.23
diff -u -p -u -r1.23 cfg.cxx
--- svx/source/dialog/cfg.cxx	8 Sep 2005 20:38:51 -0000	1.23
+++ svx/source/dialog/cfg.cxx	26 Oct 2005 16:03:20 -0000
@@ -4161,7 +4146,7 @@ SvxEntries*	ToolbarSaveInData::GetEntrie
 
 		uno::Sequence< uno::Sequence < beans::PropertyValue > > info =
 			GetConfigManager()->getUIElementsInfo(
-				css::ui::UIElementType::TOOLBAR );
+				css::ui::UIElementType::TOOLBAR, sal_True );
 
 		for ( sal_Int32 i = 0; i < info.getLength(); i++ )
 		{
@@ -4241,7 +4226,7 @@ SvxEntries*	ToolbarSaveInData::GetEntrie
             // config manager.
 		    uno::Sequence< uno::Sequence < beans::PropertyValue > > info =
 			    xParentCfgMgr->getUIElementsInfo(
-				    css::ui::UIElementType::TOOLBAR );
+				    css::ui::UIElementType::TOOLBAR, sal_True );
 
 		    for ( sal_Int32 i = 0; i < info.getLength(); i++ )
 		    {

Index: offapi/com/sun/star/ui/XUIConfigurationManager.idl
===================================================================
RCS file: /cvs/api/offapi/com/sun/star/ui/XUIConfigurationManager.idl,v
retrieving revision 1.3
diff -u -p -u -r1.3 XUIConfigurationManager.idl
--- offapi/com/sun/star/ui/XUIConfigurationManager.idl	8 Sep 2005 08:30:05 -0000	1.3
+++ offapi/com/sun/star/ui/XUIConfigurationManager.idl	26 Oct 2005 16:03:20 -0000
@@ -123,7 +123,8 @@ interface XUIConfigurationManager : ::co
 
         @see UIElementType
     */
-    sequence< sequence< com::sun::star::beans::PropertyValue > > getUIElementsInfo( [in] short ElementType ) raises ( com::sun::star::lang::IllegalArgumentException );
+    sequence< sequence< com::sun::star::beans::PropertyValue > > getUIElementsInfo( [in] short ElementType,
+																					[in] boolean bUIName) raises ( com::sun::star::lang::IllegalArgumentException );
 
     /** creates an empty settings data container.
 


Index: framework/inc/services/layoutmanager.hxx
===================================================================
RCS file: /cvs/framework/framework/inc/services/layoutmanager.hxx,v
retrieving revision 1.22
diff -u -p -u -r1.22 layoutmanager.hxx
--- framework/inc/services/layoutmanager.hxx	9 Sep 2005 00:31:01 -0000	1.22
+++ framework/inc/services/layoutmanager.hxx	26 Oct 2005 16:03:22 -0000
@@ -445,6 +445,8 @@ namespace framework
             UIElement& impl_findElement( const rtl::OUString& aName );
 
             void implts_writeNewStateData( const rtl::OUString aName, const ::com::sun::star::uno::Reference< com::sun::star::awt::XWindow >& xWindow );
+            sal_Bool implts_isTypedElementVisible( const rtl::OUString &rName,
+												   const rtl::OUString &rType);
             sal_Bool implts_readWindowStateData( const rtl::OUString& rName, UIElement& rElementData );
             void implts_writeWindowStateData( const rtl::OUString& rName, const UIElement& rElementData );
             void implts_setElementData( UIElement& rUIElement, const ::com::sun::star::uno::Reference< ::com::sun::star::awt::XDockableWindow >& rDockWindow );
@@ -452,7 +455,8 @@ namespace framework
             void implts_createAddonsToolBars();
             void implts_createCustomToolBars();
             void implts_createNonContextSensitiveToolBars();
-            void implts_createCustomToolBars( const ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue > >& aCustomTbxSeq );
+            bool implts_isCustomURL(const rtl::OUString &rName);
+            void implts_createCustomToolBars( const css::uno::Reference< ::com::sun::star::ui::XUIConfigurationManager > &xCfgMgr );
             void implts_createCustomToolBar( const rtl::OUString& aTbxResName, const rtl::OUString& aTitle );
             void implts_toggleFloatingUIElementsVisibility( sal_Bool bActive );
             sal_Bool implts_isEmbeddedLayoutManager() const;

Index: framework/inc/uiconfiguration/moduleuiconfigurationmanager.hxx
===================================================================
RCS file: /cvs/framework/framework/inc/uiconfiguration/moduleuiconfigurationmanager.hxx,v
retrieving revision 1.8
diff -u -p -u -r1.8 moduleuiconfigurationmanager.hxx
--- framework/inc/uiconfiguration/moduleuiconfigurationmanager.hxx	9 Sep 2005 00:40:34 -0000	1.8
+++ framework/inc/uiconfiguration/moduleuiconfigurationmanager.hxx	26 Oct 2005 16:03:22 -0000
@@ -185,7 +185,7 @@ namespace framework
 
             // XUIConfigurationManager
             virtual void SAL_CALL reset() throw (::com::sun::star::uno::RuntimeException);
-            virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue > > SAL_CALL getUIElementsInfo( sal_Int16 ElementType ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
+            virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue > > SAL_CALL getUIElementsInfo( sal_Int16 ElementType, sal_Bool bUIName ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
             virtual ::com::sun::star::uno::Reference< ::com::sun::star::container::XIndexContainer > SAL_CALL createSettings(  ) throw (::com::sun::star::uno::RuntimeException);
             virtual sal_Bool SAL_CALL hasSettings( const ::rtl::OUString& ResourceURL ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
             virtual ::com::sun::star::uno::Reference< ::com::sun::star::container::XIndexAccess > SAL_CALL getSettings( const ::rtl::OUString& ResourceURL, sal_Bool bWriteable ) throw (::com::sun::star::container::NoSuchElementException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
@@ -266,7 +266,7 @@ namespace framework
             // private methods
             void            impl_Initialize();
             void            implts_notifyContainerListener( const ::com::sun::star::ui::ConfigurationEvent& aEvent, NotifyOp eOp );
-            void            impl_fillSequenceWithElementTypeInfo( UIElementInfoHashMap& aUIElementInfoCollection, sal_Int16 nElementType );
+            void            impl_fillSequenceWithElementTypeInfo( UIElementInfoHashMap& aUIElementInfoCollection, sal_Int16 nElementType , bool bUIName);
             void            impl_preloadUIElementTypeList( Layer eLayer, sal_Int16 nElementType );
             UIElementData*  impl_findUIElementData( const rtl::OUString& aResourceURL, sal_Int16 nElementType, bool bLoad = true );
             void            impl_requestUIElementData( sal_Int16 nElementType, Layer eLayer, UIElementData& aUIElementData );
Index: framework/inc/uiconfiguration/uiconfigurationmanager.hxx
===================================================================
RCS file: /cvs/framework/framework/inc/uiconfiguration/uiconfigurationmanager.hxx,v
retrieving revision 1.7
diff -u -p -u -r1.7 uiconfigurationmanager.hxx
--- framework/inc/uiconfiguration/uiconfigurationmanager.hxx	9 Sep 2005 00:41:13 -0000	1.7
+++ framework/inc/uiconfiguration/uiconfigurationmanager.hxx	26 Oct 2005 16:03:22 -0000
@@ -169,7 +169,7 @@ namespace framework
 
             // XUIConfigurationManager
             virtual void SAL_CALL reset() throw (::com::sun::star::uno::RuntimeException);
-            virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue > > SAL_CALL getUIElementsInfo( sal_Int16 ElementType ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
+            virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue > > SAL_CALL getUIElementsInfo( sal_Int16 ElementType, sal_Bool bUIName ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
             virtual ::com::sun::star::uno::Reference< ::com::sun::star::container::XIndexContainer > SAL_CALL createSettings(  ) throw (::com::sun::star::uno::RuntimeException);
             virtual sal_Bool SAL_CALL hasSettings( const ::rtl::OUString& ResourceURL ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
             virtual ::com::sun::star::uno::Reference< ::com::sun::star::container::XIndexAccess > SAL_CALL getSettings( const ::rtl::OUString& ResourceURL, sal_Bool bWriteable ) throw (::com::sun::star::container::NoSuchElementException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);


 
Index: framework/source/layoutmanager/layoutmanager.cxx
===================================================================
RCS file: /cvs/framework/framework/source/layoutmanager/layoutmanager.cxx,v
retrieving revision 1.37
diff -u -p -u -r1.37 layoutmanager.cxx
--- framework/source/layoutmanager/layoutmanager.cxx	23 Sep 2005 15:41:41 -0000	1.37
+++ framework/source/layoutmanager/layoutmanager.cxx	26 Oct 2005 16:03:23 -0000
@@ -832,13 +839,52 @@ void LayoutManager::implts_createCustomT
     }
 }
 
+bool LayoutManager::implts_isCustomURL(const OUString &rName)
+{
+	return rName.getLength() > 0 && rName.indexOf( m_aCustomTbxPrefix ) != -1;
+}
+
 void LayoutManager::implts_createCustomToolBars(
-	const ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue > >& aTbxSeqSeq )
+	const css::uno::Reference< ::com::sun::star::ui::XUIConfigurationManager > &xCfgMgr )
 {
+	Sequence< Sequence< PropertyValue > > aTbxSeqSeq;
+	aTbxSeqSeq = xCfgMgr->getUIElementsInfo( UIElementType::TOOLBAR, sal_False );
+	bool bHasCustom = false;
+
+
+	// 1st quickly check for any custom toolbars
 	const Sequence< PropertyValue >* pTbxSeq = aTbxSeqSeq.getConstArray();
     for ( sal_Int32 i = 0; i < aTbxSeqSeq.getLength(); i++ )
     {
         const Sequence< PropertyValue >& rTbxSeq = pTbxSeq[i];
+        for ( sal_Int32 j = 0; j < rTbxSeq.getLength() && !bHasCustom; j++ )
+        {
+			OUString aTbxResName;
+            if ( rTbxSeq[j].Name.equalsAscii( "ResourceURL" ))
+			{
+				rTbxSeq[j].Value >>= aTbxResName;
+				if ( implts_isCustomURL( aTbxResName ) )
+					bHasCustom = true;
+			}
+		}
+	}
+
+	if (!bHasCustom) 
+	{
+		fprintf (stderr, "Skip slow xml parse foo - no custom-ers\n");
+		return;
+	}
+	fprintf (stderr, "Has custom - get really slow ...\n");
+
+	// If we have a custom toolbar - we get to parse all the UI xml files
+	// FIXME: this still sucks - we should fetch the data by URL - for just
+	// that URL.
+	aTbxSeqSeq = xCfgMgr->getUIElementsInfo( UIElementType::TOOLBAR, sal_True );
+	pTbxSeq = aTbxSeqSeq.getConstArray();
+
+    for ( sal_Int32 i = 0; i < aTbxSeqSeq.getLength(); i++ )
+    {
+        const Sequence< PropertyValue >& rTbxSeq = pTbxSeq[i];
         OUString aTbxResName;
         OUString aTbxTitle;
         for ( sal_Int32 j = 0; j < rTbxSeq.getLength(); j++ )
@@ -875,17 +921,11 @@ void LayoutManager::implts_createCustomT
             return; // no custom toolbars for preview frame!
 
         sal_Int32 i( 0 );
-        Sequence< Sequence< PropertyValue > > aTbxSeq;
-        if ( xDocCfgMgr.is() )
-        {
-            aTbxSeq = xDocCfgMgr->getUIElementsInfo( UIElementType::TOOLBAR );
-            implts_createCustomToolBars( aTbxSeq ); // first create all document based toolbars
-        }
-        if ( xModuleCfgMgr.is() )
-        {
-            aTbxSeq = xModuleCfgMgr->getUIElementsInfo( UIElementType::TOOLBAR );
-            implts_createCustomToolBars( aTbxSeq ); // second create module based toolbars
-        }
+        if ( xDocCfgMgr.is() ) // first create all document based toolbars
+            implts_createCustomToolBars( xDocCfgMgr );
+
+        if ( xModuleCfgMgr.is() ) // second create module based toolbars
+            implts_createCustomToolBars( xModuleCfgMgr ); 
     }
 }
 


Index: framework/source/uiconfiguration/moduleuiconfigurationmanager.cxx
===================================================================
RCS file: /cvs/framework/framework/source/uiconfiguration/moduleuiconfigurationmanager.cxx,v
retrieving revision 1.14
diff -u -p -u -r1.14 moduleuiconfigurationmanager.cxx
--- framework/source/uiconfiguration/moduleuiconfigurationmanager.cxx	9 Sep 2005 01:50:52 -0000	1.14
+++ framework/source/uiconfiguration/moduleuiconfigurationmanager.cxx	26 Oct 2005 16:03:24 -0000
@@ -214,7 +215,7 @@ static OUString RetrieveNameFromResource
     return OUString();
 }
 
-void ModuleUIConfigurationManager::impl_fillSequenceWithElementTypeInfo( UIElementInfoHashMap& aUIElementInfoCollection, sal_Int16 nElementType )
+void ModuleUIConfigurationManager::impl_fillSequenceWithElementTypeInfo( UIElementInfoHashMap& aUIElementInfoCollection, sal_Int16 nElementType, bool bUIName )
 {
     // preload list of element types on demand
     impl_preloadUIElementTypeList( LAYER_USERDEFINED, nElementType );
@@ -225,7 +226,7 @@ void ModuleUIConfigurationManager::impl_
 
     while ( pUserIter != rUserElements.end() )
     {
-        UIElementData* pDataSettings = impl_findUIElementData( pUserIter->second.aResourceURL, nElementType );
+        UIElementData* pDataSettings = impl_findUIElementData( pUserIter->second.aResourceURL, nElementType, bUIName );
         if ( pDataSettings )
         {
             // Retrieve user interface name from XPropertySet interface
@@ -251,7 +252,7 @@ void ModuleUIConfigurationManager::impl_
         UIElementInfoHashMap::const_iterator pIterInfo = aUIElementInfoCollection.find( pDefIter->second.aResourceURL );
         if ( pIterInfo == aUIElementInfoCollection.end() )
         {
-            UIElementData* pDataSettings = impl_findUIElementData( pDefIter->second.aResourceURL, nElementType );
+            UIElementData* pDataSettings = impl_findUIElementData( pDefIter->second.aResourceURL, nElementType, bUIName );
             if ( pDataSettings )
             {
                 // Retrieve user interface name from XPropertySet interface
@@ -1012,7 +1015,8 @@ void SAL_CALL ModuleUIConfigurationManag
     }    
 }
 
-Sequence< Sequence< PropertyValue > > SAL_CALL ModuleUIConfigurationManager::getUIElementsInfo( sal_Int16 ElementType )
+Sequence< Sequence< PropertyValue > > SAL_CALL ModuleUIConfigurationManager::getUIElementsInfo( sal_Int16 ElementType,
+																								sal_Bool bUIName)
 throw ( IllegalArgumentException, RuntimeException )
 {
     if (( ElementType < 0 ) || ( ElementType >= ::com::sun::star::ui::UIElementType::COUNT ))
@@ -1025,14 +1029,15 @@ throw ( IllegalArgumentException, Runtim
     if ( ElementType == ::com::sun::star::ui::UIElementType::UNKNOWN )
     {
         for ( sal_Int16 i = 0; i < ::com::sun::star::ui::UIElementType::COUNT; i++ )
-            impl_fillSequenceWithElementTypeInfo( aUIElementInfoCollection, sal_Int16( i ) );
+            impl_fillSequenceWithElementTypeInfo( aUIElementInfoCollection, sal_Int16( i ), bUIName );
     }
     else
-        impl_fillSequenceWithElementTypeInfo( aUIElementInfoCollection, ElementType );
+        impl_fillSequenceWithElementTypeInfo( aUIElementInfoCollection, ElementType, bUIName );
 
-    Sequence< PropertyValue > aUIElementInfo( 2 );
+    Sequence< PropertyValue > aUIElementInfo( bUIName ? 2 : 1 );
     aUIElementInfo[0].Name = m_aPropResourceURL;
-    aUIElementInfo[1].Name = m_aPropUIName;
+	if (bUIName)
+	    aUIElementInfo[1].Name = m_aPropUIName;
 
     aElementInfoSeq.realloc( aUIElementInfoCollection.size() );
     UIElementInfoHashMap::const_iterator pIter = aUIElementInfoCollection.begin();
@@ -1044,7 +1054,8 @@ throw ( IllegalArgumentException, Runtim
     while ( pIter != aUIElementInfoCollection.end() )
     {
         aUIElementInfo[0].Value <<= pIter->second.aResourceURL;
-        aUIElementInfo[1].Value <<= pIter->second.aUIName;
+		if (bUIName)
+			aUIElementInfo[1].Value <<= pIter->second.aUIName;
         aElementInfoSeq[n++] = aUIElementInfo;
         ++pIter;
     }

Index: framework/source/uiconfiguration/uiconfigurationmanager.cxx
===================================================================
RCS file: /cvs/framework/framework/source/uiconfiguration/uiconfigurationmanager.cxx,v
retrieving revision 1.14
diff -u -p -u -r1.14 uiconfigurationmanager.cxx
--- framework/source/uiconfiguration/uiconfigurationmanager.cxx	9 Sep 2005 01:51:20 -0000	1.14
+++ framework/source/uiconfiguration/uiconfigurationmanager.cxx	26 Oct 2005 16:03:25 -0000
@@ -831,7 +831,8 @@ void SAL_CALL UIConfigurationManager::re
     }    
 }
 
-Sequence< Sequence< PropertyValue > > SAL_CALL UIConfigurationManager::getUIElementsInfo( sal_Int16 ElementType )
+Sequence< Sequence< PropertyValue > > SAL_CALL UIConfigurationManager::getUIElementsInfo( sal_Int16 ElementType,
+																						  sal_Bool bUIName)
 throw ( IllegalArgumentException, RuntimeException )
 {
     if (( ElementType < 0 ) || ( ElementType >= ::com::sun::star::ui::UIElementType::COUNT ))



Index: framework/source/uielement/toolbarsmenucontroller.cxx
===================================================================
RCS file: /cvs/framework/framework/source/uielement/toolbarsmenucontroller.cxx,v
retrieving revision 1.13
diff -u -p -u -r1.13 toolbarsmenucontroller.cxx
--- framework/source/uielement/toolbarsmenucontroller.cxx	9 Sep 2005 01:59:06 -0000	1.13
+++ framework/source/uielement/toolbarsmenucontroller.cxx	26 Oct 2005 16:03:28 -0000
@@ -410,14 +416,14 @@ void ToolbarsMenuController::fillPopupMe
         if ( m_xDocCfgMgr.is() )
         {
             Sequence< Sequence< com::sun::star::beans::PropertyValue > > aSeqDocToolBars =
-                m_xDocCfgMgr->getUIElementsInfo( UIElementType::TOOLBAR );
+                m_xDocCfgMgr->getUIElementsInfo( UIElementType::TOOLBAR, sal_True );
             fillHashMap( aSeqDocToolBars, aToolbarHashMap );
         }
 
         if ( m_xModuleCfgMgr.is() )
         {
             Sequence< Sequence< com::sun::star::beans::PropertyValue > > aSeqToolBars =
-                m_xModuleCfgMgr->getUIElementsInfo( UIElementType::TOOLBAR );
+                m_xModuleCfgMgr->getUIElementsInfo( UIElementType::TOOLBAR, sal_True );
             fillHashMap( aSeqToolBars, aToolbarHashMap );
         }        
         
