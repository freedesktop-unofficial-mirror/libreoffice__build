Index: scp2/source/ooo/file_library_ooo.scp
===================================================================
RCS file: /cvs/installation/scp2/source/ooo/file_library_ooo.scp,v
retrieving revision 1.146
diff -u -p -u -r1.146 file_library_ooo.scp
--- scp2/source/ooo/file_library_ooo.scp	10 Oct 2005 08:22:49 -0000	1.146
+++ scp2/source/ooo/file_library_ooo.scp	2 Nov 2005 14:22:33 -0000
@@ -762,6 +858,18 @@ File gid_File_Lib_I18npool
   #endif
 End
 
+File gid_File_Lib_I18npool_Asian
+    TXT_FILE_BODY;
+    Styles = (PACKED,UNO_COMPONENT,PATCH);
+    RegistryID = gid_Starregistry_Services_Rdb;
+    Dir = gid_Dir_Program;
+  #ifdef UNX
+    Name = STRING(CONCAT2(i18npool_asian.uno,UNXSUFFIX));
+  #else
+    Name = STRING(CONCAT2(i18npool_asian.uno,.dll));
+  #endif
+End
+
 File gid_File_Lib_I18nregexp
     TXT_FILE_BODY;
     Styles = (PACKED);



Index: i18npool/prj/d.lst
===================================================================
RCS file: /cvs/l10n/i18npool/prj/d.lst,v
retrieving revision 1.9
diff -u -p -u -r1.9 d.lst
--- i18npool/prj/d.lst	2 Feb 2004 19:23:02 -0000	1.9
+++ i18npool/prj/d.lst	2 Nov 2005 14:22:33 -0000
@@ -7,6 +7,10 @@ mkdir: %_DEST%\inc%_EXT%\i18npool
 ..\%__SRC%\lib\i18npool.uno.so %_DEST%\lib%_EXT%\i18npool.uno.so
 ..\%__SRC%\lib\i18npool.uno.dylib %_DEST%\lib%_EXT%\i18npool.uno.dylib
 
+..\%__SRC%\bin\i18npool_asian.uno.dll %_DEST%\bin%_EXT%\i18npool_asian.uno.dll
+..\%__SRC%\lib\i18npool_asian.uno.so %_DEST%\lib%_EXT%\i18npool_asian.uno.so
+..\%__SRC%\lib\i18npool_asian.uno.dylib %_DEST%\lib%_EXT%\i18npool_asian.uno.dylib
+
 ..\%__SRC%\bin\i18nsearch.uno.dll %_DEST%\bin%_EXT%\i18nsearch.uno.dll
 ..\%__SRC%\lib\i18nsearch.uno.so %_DEST%\lib%_EXT%\i18nsearch.uno.so
 ..\%__SRC%\lib\i18nsearch.uno.dylib %_DEST%\lib%_EXT%\i18nsearch.uno.dylib
Index: i18npool/source/collator/makefile.mk
===================================================================
RCS file: /cvs/l10n/i18npool/source/collator/makefile.mk,v
retrieving revision 1.8
diff -u -p -u -r1.8 makefile.mk
--- i18npool/source/collator/makefile.mk	7 Sep 2005 17:07:53 -0000	1.8
+++ i18npool/source/collator/makefile.mk	2 Nov 2005 14:22:33 -0000
@@ -37,6 +37,7 @@ PRJ=..$/..
 
 PRJNAME=i18npool
 TARGET=collator
+LIBTARGET=NO
 
 ENABLE_EXCEPTIONS=TRUE
 
@@ -48,10 +49,12 @@ ENABLE_EXCEPTIONS=TRUE
 
 # --- Files --------------------------------------------------------
 
-SLOFILES=   \
+COMMON_OBJECTS= \
 		$(SLO)$/collatorImpl.obj \
 		$(SLO)$/chaptercollator.obj \
-		$(SLO)$/collator_unicode.obj \
+		$(SLO)$/collator_unicode.obj
+ASIAN_OBJECTS= \
+		$(COMMON_OBJECTS) \
 		$(SLO)$/collator_zh_pinyin.obj \
 		$(SLO)$/collator_dz_charset.obj \
 		$(SLO)$/collator_zh_radical.obj \
@@ -69,6 +72,14 @@ SLOFILES=   \
 		$(SLO)$/collator_ja_phonetic_alphanumeric_last.obj
 
 
+SLOFILES= $(COMMON_OBJECTS) $(ASIAN_OBJECTS)
+
+LIB1TARGET= $(SLB)$/$(TARGET).lib
+LIB1OBJFILES= $(COMMON_OBJECTS)
+
+LIB2TARGET= $(SLB)$/$(TARGET)_asian.lib
+LIB2OBJFILES= $(ASIAN_OBJECTS)
+
 APP1TARGET = gencoll_rule
 
 APP1OBJS   = $(OBJ)$/gencoll_rule.obj
Index: i18npool/source/registerservices/makefile.mk
===================================================================
RCS file: /cvs/l10n/i18npool/source/registerservices/makefile.mk,v
retrieving revision 1.6
diff -u -p -u -r1.6 makefile.mk
--- i18npool/source/registerservices/makefile.mk	7 Sep 2005 17:22:04 -0000	1.6
+++ i18npool/source/registerservices/makefile.mk	2 Nov 2005 14:22:34 -0000
@@ -37,6 +37,7 @@ PRJ=..$/..
 
 PRJNAME=i18npool
 TARGET=registerservices
+LIBTARGET=NO
 
 ENABLE_EXCEPTIONS=TRUE
 
@@ -48,8 +49,16 @@ ENABLE_EXCEPTIONS=TRUE
 
 # --- Files --------------------------------------------------------
 
-SLOFILES=   \
-			$(SLO)$/registerservices.obj
+COMMON_OBJECTS= $(SLO)$/registerservices.obj
+ASIAN_OBJECTS=  $(SLO)$/registerservices_asian.obj
+
+SLOFILES= $(COMMON_OBJECTS) $(ASIAN_OBJECTS)
+
+LIB1TARGET= $(SLB)$/$(TARGET).lib
+LIB1OBJFILES= $(COMMON_OBJECTS)
+
+LIB2TARGET= $(SLB)$/$(TARGET)_asian.lib
+LIB2OBJFILES= $(ASIAN_OBJECTS)
 
 # --- Targets ------------------------------------------------------
 
Index: i18npool/source/registerservices/registerservices.cxx
===================================================================
RCS file: /cvs/l10n/i18npool/source/registerservices/registerservices.cxx,v
retrieving revision 1.37
diff -u -p -u -r1.37 registerservices.cxx
--- i18npool/source/registerservices/registerservices.cxx	7 Sep 2005 17:22:20 -0000	1.37
+++ i18npool/source/registerservices/registerservices.cxx	2 Nov 2005 14:22:34 -0000
@@ -33,24 +33,7 @@
  *
  ************************************************************************/
 
-#ifndef _COM_SUN_STAR_LANG_XSINGLESERVICEFACTORY_HPP_
-#include <com/sun/star/lang/XSingleServiceFactory.hpp>
-#endif
-#ifndef _COM_SUN_STAR_LANG_XMULTISERVICEFACTORY_HPP_
-#include <com/sun/star/lang/XMultiServiceFactory.hpp>
-#endif
-#ifndef _COM_SUN_STAR_REGISTRY_XREGISTRYKEY_HPP_
-#include <com/sun/star/registry/XRegistryKey.hpp>
-#endif
-
-#include <cppuhelper/factory.hxx>
-
-#ifndef _CPPUHELPER_WEAK_HXX_
-#include <cppuhelper/weak.hxx>
-#endif
-#ifndef _OSL_MUTEX_HXX_
-#include <osl/mutex.hxx>
-#endif
+#include <registerservices.hxx>
 
 #include <localedata.hxx>
 #include <numberformatcode.hxx>
@@ -105,37 +88,6 @@
 #include <textconversionImpl.hxx>
 #include <textconversion.hxx>
 
-#define IMPL_CREATEINSTANCE( ImplName ) \
-    ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >   \
-        SAL_CALL ImplName##_CreateInstance(                                 \
-            const ::com::sun::star::uno::Reference<                         \
-                    ::com::sun::star::lang::XMultiServiceFactory >& )       \
-{                                                                           \
-    return ::com::sun::star::uno::Reference <                               \
-            ::com::sun::star::uno::XInterface >( ( ::cppu::OWeakObject* )   \
-                                    new ImplName );                         \
-}
-
-#define IMPL_CREATEINSTANCE_MSF( ImplName ) \
-    ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >   \
-        SAL_CALL ImplName##_CreateInstance(                                 \
-            const ::com::sun::star::uno::Reference<                         \
-                    ::com::sun::star::lang::XMultiServiceFactory >& rxMSF ) \
-{                                                                           \
-    return ::com::sun::star::uno::Reference <                               \
-            ::com::sun::star::uno::XInterface >( ( ::cppu::OWeakObject* )   \
-                                    new ImplName( rxMSF ) );                \
-}
-
-typedef ::com::sun::star::uno::Reference<
-        ::com::sun::star::uno::XInterface > (SAL_CALL *FN_CreateInstance)(
-            const ::com::sun::star::uno::Reference<
-                ::com::sun::star::lang::XMultiServiceFactory >& );
-
-#define IMPL_TRANSLITERATION_ITEM( implName ) \
-    {       TRLT_SERVICELNAME_L10N, \
-        TRLT_IMPLNAME_PREFIX  #implName, \
-        &implName##_CreateInstance }
 
 // -------------------------------------------------------------------------------------
 
@@ -178,21 +130,6 @@ IMPL_CREATEINSTANCE( BreakIterator_hi )
 IMPL_CREATEINSTANCE_MSF( ChapterCollator )
 IMPL_CREATEINSTANCE_MSF( CollatorImpl )
 IMPL_CREATEINSTANCE( Collator_Unicode )
-IMPL_CREATEINSTANCE( Collator_dz_charset )
-IMPL_CREATEINSTANCE( Collator_zh_pinyin )
-IMPL_CREATEINSTANCE( Collator_zh_radical )
-IMPL_CREATEINSTANCE( Collator_zh_stroke )
-IMPL_CREATEINSTANCE( Collator_zh_zhuyin )
-IMPL_CREATEINSTANCE( Collator_zh_TW_radical )
-IMPL_CREATEINSTANCE( Collator_zh_TW_stroke )
-IMPL_CREATEINSTANCE( Collator_ko_charset )
-IMPL_CREATEINSTANCE( Collator_zh_charset )
-IMPL_CREATEINSTANCE( Collator_ja_charset )
-IMPL_CREATEINSTANCE( Collator_ja_phonetic_alphanumeric_first )
-IMPL_CREATEINSTANCE( Collator_ja_phonetic_alphanumeric_last )
-IMPL_CREATEINSTANCE( Collator_zh_TW_charset )
-IMPL_CREATEINSTANCE( Collator_ne_charset )
-IMPL_CREATEINSTANCE( Collator_km_charset )
 
 IMPL_CREATEINSTANCE_MSF( CharacterClassificationImpl )
 IMPL_CREATEINSTANCE_MSF( cclass_Unicode )
@@ -442,45 +379,6 @@ static const struct InstancesArray {
     {   "com.sun.star.i18n.Collator_Unicode",
         "com.sun.star.i18n.Collator_Unicode",
         &Collator_Unicode_CreateInstance },
-    {   "com.sun.star.i18n.Collator_dz_charset",
-        "com.sun.star.i18n.Collator_dz_charset",
-        &Collator_dz_charset_CreateInstance },
-    {   "com.sun.star.i18n.Collator_zh_pinyin",
-        "com.sun.star.i18n.Collator_zh_pinyin",
-        &Collator_zh_pinyin_CreateInstance },
-    {   "com.sun.star.i18n.Collator_zh_radical",
-        "com.sun.star.i18n.Collator_zh_radical",
-        &Collator_zh_radical_CreateInstance },
-    {   "com.sun.star.i18n.Collator_zh_stroke",
-        "com.sun.star.i18n.Collator_zh_stroke",
-        &Collator_zh_stroke_CreateInstance },
-    {   "com.sun.star.i18n.Collator_zh_zhuyin",
-        "com.sun.star.i18n.Collator_zh_zhuyin",
-        &Collator_zh_zhuyin_CreateInstance },
-    {   "com.sun.star.i18n.Collator_zh_TW_radical",
-        "com.sun.star.i18n.Collator_zh_TW_radical",
-        &Collator_zh_TW_radical_CreateInstance },
-    {   "com.sun.star.i18n.Collator_zh_TW_stroke",
-        "com.sun.star.i18n.Collator_zh_TW_stroke",
-        &Collator_zh_TW_stroke_CreateInstance },
-    {   "com.sun.star.i18n.Collator_ko_charset",
-        "com.sun.star.i18n.Collator_ko_charset",
-        &Collator_ko_charset_CreateInstance },
-    {   "com.sun.star.i18n.Collator_ja_phonetic (alphanumeric first)",
-        "com.sun.star.i18n.Collator_ja_phonetic (alphanumeric first)",
-        &Collator_ja_phonetic_alphanumeric_first_CreateInstance },
-    {   "com.sun.star.i18n.Collator_ja_phonetic (alphanumeric last)",
-        "com.sun.star.i18n.Collator_ja_phonetic (alphanumeric last)",
-        &Collator_ja_phonetic_alphanumeric_last_CreateInstance },
-    {   "com.sun.star.i18n.Collator_ja_charset",
-        "com.sun.star.i18n.Collator_ja_charset",
-        &Collator_ja_charset_CreateInstance },
-    {   "com.sun.star.i18n.Collator_zh_charset",
-        "com.sun.star.i18n.Collator_zh_charset",
-        &Collator_zh_charset_CreateInstance },
-    {   "com.sun.star.i18n.Collator_zh_TW_charset",
-        "com.sun.star.i18n.Collator_zh_TW_charset",
-        &Collator_zh_TW_charset_CreateInstance },
     {   "com.sun.star.i18n.ScriptTypeDetector",
         "com.sun.star.i18n.ScriptTypeDetector",
         &ScriptTypeDetector_CreateInstance },
@@ -634,15 +532,6 @@ static const struct InstancesArray {
     IMPL_TRANSLITERATION_ITEM (NumToTextHangulCircledSyllable_ko),
     IMPL_TRANSLITERATION_ITEM (NumToTextTianGan_zh),
     IMPL_TRANSLITERATION_ITEM (NumToTextDiZi_zh),
-
-    {   "com.sun.star.i18n.Collator_ne_charset",
-        "com.sun.star.i18n.Collator_ne_charset",
-        &Collator_ne_charset_CreateInstance },
-
-    {   "com.sun.star.i18n.Collator_km_charset",
-        "com.sun.star.i18n.Collator_km_charset",
-        &Collator_km_charset_CreateInstance },
-
 // add here new services !!
     { 0, 0, 0 }
 };
Index: i18npool/util/makefile.mk
===================================================================
RCS file: /cvs/l10n/i18npool/util/makefile.mk,v
retrieving revision 1.20
diff -u -p -u -r1.20 makefile.mk
--- i18npool/util/makefile.mk	7 Sep 2005 17:38:27 -0000	1.20
+++ i18npool/util/makefile.mk	2 Nov 2005 14:22:34 -0000
@@ -36,7 +36,7 @@
 PRJ=..
 
 PRJNAME=i18npool
-TARGET=i18npool.uno
+TARGET=i18npool
 
 # --- Settings -----------------------------------------------------------
 
@@ -45,7 +45,7 @@ DLLPRE =
 
 # --- Allgemein ----------------------------------------------------------
 
-LIB1TARGET= $(SLB)$/$(TARGET).lib
+LIB1TARGET= $(SLB)$/$(TARGET).uno.lib
 LIB1FILES=	$(SLB)$/defaultnumberingprovider.lib	\
 		$(SLB)$/nativenumber.lib		\
 		$(SLB)$/registerservices.lib		\
@@ -60,7 +60,7 @@ LIB1FILES=	$(SLB)$/defaultnumberingprovi
 		$(SLB)$/inputchecker.lib \
 		$(SLB)$/textconversion.lib
 
-SHL1TARGET= $(TARGET)
+SHL1TARGET= $(TARGET).uno
 # WNT needs implib name even if there is none
 SHL1IMPLIB= i$(SHL1TARGET)
 
@@ -68,7 +68,6 @@ SHL1DEPN=	makefile.mk
 SHL1VERSIONMAP=$(PRJNAME).map
 SHL1DEF=$(MISC)$/$(SHL1TARGET).def
 DEF1NAME=$(SHL1TARGET)
-
 SHL1LIBS=$(LIB1TARGET)
 SHL1STDLIBS= \
 		$(I18NUTILLIB) \
@@ -78,6 +77,15 @@ SHL1STDLIBS= \
 		$(ICUINLIB) \
 		$(ICUUCLIB)
 
+LIB2TARGET= $(SLB)$/$(TARGET)_asian.uno.lib
+LIB2FILES= $(SLB)$/collator_asian.lib \
+	   $(SLB)$/registerservices_asian.lib
+
+SHL2TARGET= $(TARGET)_asian.uno
+SHL2DEF=$(MISC)$/$(SHL1TARGET).def
+SHL2LIBS=$(LIB2TARGET)
+SHL2STDLIBS=$(SHL1STDLIBS)
+
 # --- Targets ------------------------------------------------------------
 
 .INCLUDE :	target.mk
--- /dev/null	2005-11-02 09:05:41.708345250 +0000
+++ i18npool/source/registerservices/registerservices.hxx	2005-11-02 12:44:35.000000000 +0000
@@ -0,0 +1,50 @@
+#ifndef _COM_SUN_STAR_LANG_XSINGLESERVICEFACTORY_HPP_
+#include <com/sun/star/lang/XSingleServiceFactory.hpp>
+#endif
+#ifndef _COM_SUN_STAR_LANG_XMULTISERVICEFACTORY_HPP_
+#include <com/sun/star/lang/XMultiServiceFactory.hpp>
+#endif
+#ifndef _COM_SUN_STAR_REGISTRY_XREGISTRYKEY_HPP_
+#include <com/sun/star/registry/XRegistryKey.hpp>
+#endif
+
+#include <cppuhelper/factory.hxx>
+
+#ifndef _CPPUHELPER_WEAK_HXX_
+#include <cppuhelper/weak.hxx>
+#endif
+#ifndef _OSL_MUTEX_HXX_
+#include <osl/mutex.hxx>
+#endif
+
+#define IMPL_CREATEINSTANCE( ImplName ) \
+    ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >   \
+        SAL_CALL ImplName##_CreateInstance(                                 \
+            const ::com::sun::star::uno::Reference<                         \
+                    ::com::sun::star::lang::XMultiServiceFactory >& )       \
+{                                                                           \
+    return ::com::sun::star::uno::Reference <                               \
+            ::com::sun::star::uno::XInterface >( ( ::cppu::OWeakObject* )   \
+                                    new ImplName );                         \
+}
+
+#define IMPL_CREATEINSTANCE_MSF( ImplName ) \
+    ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >   \
+        SAL_CALL ImplName##_CreateInstance(                                 \
+            const ::com::sun::star::uno::Reference<                         \
+                    ::com::sun::star::lang::XMultiServiceFactory >& rxMSF ) \
+{                                                                           \
+    return ::com::sun::star::uno::Reference <                               \
+            ::com::sun::star::uno::XInterface >( ( ::cppu::OWeakObject* )   \
+                                    new ImplName( rxMSF ) );                \
+}
+
+typedef ::com::sun::star::uno::Reference<
+        ::com::sun::star::uno::XInterface > (SAL_CALL *FN_CreateInstance)(
+            const ::com::sun::star::uno::Reference<
+                ::com::sun::star::lang::XMultiServiceFactory >& );
+
+#define IMPL_TRANSLITERATION_ITEM( implName ) \
+    {       TRLT_SERVICELNAME_L10N, \
+        TRLT_IMPLNAME_PREFIX  #implName, \
+        &implName##_CreateInstance }
--- /dev/null	2005-11-02 09:05:41.708345250 +0000
+++ i18npool/source/registerservices/registerservices_asian.cxx	2005-11-02 12:44:54.000000000 +0000
@@ -0,0 +1,234 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *    MA  02111-1307  USA
+ *
+ ************************************************************************/
+
+#include <registerservices.hxx>
+
+#include <localedata.hxx>
+#include <numberformatcode.hxx>
+#include <nativenumbersupplier.hxx>
+#include <defaultnumberingprovider.hxx>
+#include <servicename.hxx>
+
+#define TRANSLITERATION_ALL
+#include <transliterationImpl.hxx>
+#include <transliteration_body.hxx>
+#include <transliteration_caseignore.hxx>
+#include <transliteration_Ignore.hxx>
+#include <transliteration_OneToOne.hxx>
+#include <textToPronounce_zh.hxx>
+#include <numtotext_cjk.hxx>
+#include <numtochar.hxx>
+#include <texttonum.hxx>
+#include <chartonum.hxx>
+
+#include <calendarImpl.hxx>
+#include <calendar_gregorian.hxx>
+#include <calendar_hijri.hxx>
+#include <calendar_jewish.hxx>
+
+#define BREAKITERATOR_ALL
+#include <breakiteratorImpl.hxx>
+#include <breakiterator_cjk.hxx>
+#include <breakiterator_th.hxx>
+#include <breakiterator_hi.hxx>
+#include <breakiterator_unicode.hxx>
+
+#define INDEXENTRYSUPPLIER_ALL
+#include <indexentrysupplier.hxx>
+#include <indexentrysupplier_asian.hxx>
+#include <indexentrysupplier_common.hxx>
+#include <indexentrysupplier_default.hxx>
+
+#define CCLASS_ALL
+#include <characterclassificationImpl.hxx>
+#include <scripttypedetector.hxx>
+#include <cclass_unicode.hxx>
+
+#define COLLATOR_ALL
+#include <collatorImpl.hxx>
+#include <chaptercollator.hxx>
+#include <collator_unicode.hxx>
+
+#include <inputsequencechecker.hxx>
+#include <inputsequencechecker_th.hxx>
+#include <inputsequencechecker_hi.hxx>
+
+#include <textconversionImpl.hxx>
+#include <textconversion.hxx>
+
+
+// -------------------------------------------------------------------------------------
+
+using namespace ::com::sun::star::i18n;
+
+IMPL_CREATEINSTANCE( Collator_dz_charset )
+IMPL_CREATEINSTANCE( Collator_zh_pinyin )
+IMPL_CREATEINSTANCE( Collator_zh_radical )
+IMPL_CREATEINSTANCE( Collator_zh_stroke )
+IMPL_CREATEINSTANCE( Collator_zh_zhuyin )
+IMPL_CREATEINSTANCE( Collator_zh_TW_radical )
+IMPL_CREATEINSTANCE( Collator_zh_TW_stroke )
+IMPL_CREATEINSTANCE( Collator_ko_charset )
+IMPL_CREATEINSTANCE( Collator_zh_charset )
+IMPL_CREATEINSTANCE( Collator_ja_charset )
+IMPL_CREATEINSTANCE( Collator_ja_phonetic_alphanumeric_first )
+IMPL_CREATEINSTANCE( Collator_ja_phonetic_alphanumeric_last )
+IMPL_CREATEINSTANCE( Collator_zh_TW_charset )
+IMPL_CREATEINSTANCE( Collator_ne_charset )
+IMPL_CREATEINSTANCE( Collator_km_charset )
+
+static const struct InstancesArray {
+        const sal_Char* pServiceNm;
+        const sal_Char* pImplementationNm;
+        FN_CreateInstance pFn;
+} aInstances[] = {
+    {   "com.sun.star.i18n.Collator_dz_charset",
+        "com.sun.star.i18n.Collator_dz_charset",
+        &Collator_dz_charset_CreateInstance },
+    {   "com.sun.star.i18n.Collator_zh_pinyin",
+        "com.sun.star.i18n.Collator_zh_pinyin",
+        &Collator_zh_pinyin_CreateInstance },
+    {   "com.sun.star.i18n.Collator_zh_radical",
+        "com.sun.star.i18n.Collator_zh_radical",
+        &Collator_zh_radical_CreateInstance },
+    {   "com.sun.star.i18n.Collator_zh_stroke",
+        "com.sun.star.i18n.Collator_zh_stroke",
+        &Collator_zh_stroke_CreateInstance },
+    {   "com.sun.star.i18n.Collator_zh_zhuyin",
+        "com.sun.star.i18n.Collator_zh_zhuyin",
+        &Collator_zh_zhuyin_CreateInstance },
+    {   "com.sun.star.i18n.Collator_zh_TW_radical",
+        "com.sun.star.i18n.Collator_zh_TW_radical",
+        &Collator_zh_TW_radical_CreateInstance },
+    {   "com.sun.star.i18n.Collator_zh_TW_stroke",
+        "com.sun.star.i18n.Collator_zh_TW_stroke",
+        &Collator_zh_TW_stroke_CreateInstance },
+    {   "com.sun.star.i18n.Collator_ko_charset",
+        "com.sun.star.i18n.Collator_ko_charset",
+        &Collator_ko_charset_CreateInstance },
+    {   "com.sun.star.i18n.Collator_ja_phonetic (alphanumeric first)",
+        "com.sun.star.i18n.Collator_ja_phonetic (alphanumeric first)",
+        &Collator_ja_phonetic_alphanumeric_first_CreateInstance },
+    {   "com.sun.star.i18n.Collator_ja_phonetic (alphanumeric last)",
+        "com.sun.star.i18n.Collator_ja_phonetic (alphanumeric last)",
+        &Collator_ja_phonetic_alphanumeric_last_CreateInstance },
+    {   "com.sun.star.i18n.Collator_ja_charset",
+        "com.sun.star.i18n.Collator_ja_charset",
+        &Collator_ja_charset_CreateInstance },
+    {   "com.sun.star.i18n.Collator_zh_charset",
+        "com.sun.star.i18n.Collator_zh_charset",
+        &Collator_zh_charset_CreateInstance },
+    {   "com.sun.star.i18n.Collator_zh_TW_charset",
+        "com.sun.star.i18n.Collator_zh_TW_charset",
+        &Collator_zh_TW_charset_CreateInstance },
+    {   "com.sun.star.i18n.Collator_ne_charset",
+        "com.sun.star.i18n.Collator_ne_charset",
+        &Collator_ne_charset_CreateInstance },
+    {   "com.sun.star.i18n.Collator_km_charset",
+        "com.sun.star.i18n.Collator_km_charset",
+        &Collator_km_charset_CreateInstance },
+// add new services here !!
+    { 0, 0, 0 }
+};
+
+
+/*
+ * Cut/paste - ugly - macro generate instead ? have a .impl include ?
+ */
+extern "C"
+{
+
+void SAL_CALL component_getImplementationEnvironment( const sal_Char** ppEnvTypeName, uno_Environment** ppEnv )
+{
+    *ppEnvTypeName = CPPU_CURRENT_LANGUAGE_BINDING_NAME;
+}
+
+sal_Bool SAL_CALL component_writeInfo( void* _pServiceManager, void* _pRegistryKey )
+{
+    if (_pRegistryKey)
+    {
+        ::com::sun::star::registry::XRegistryKey * pRegistryKey =
+            reinterpret_cast< ::com::sun::star::registry::XRegistryKey* >(
+                                _pRegistryKey );
+        ::com::sun::star::uno::Reference<
+                        ::com::sun::star::registry::XRegistryKey > xNewKey;
+
+        for( const InstancesArray* pArr = aInstances; pArr->pServiceNm; ++pArr )
+        {
+            xNewKey = pRegistryKey->createKey(
+                    ::rtl::OUString::createFromAscii( pArr->pImplementationNm )  );
+            xNewKey = xNewKey->createKey(
+                    ::rtl::OUString::createFromAscii( "/UNO/SERVICES" ) );
+            xNewKey->createKey(
+                    ::rtl::OUString::createFromAscii( pArr->pServiceNm ) );
+        }
+    }
+    return sal_True;
+}
+
+void* SAL_CALL component_getFactory( const sal_Char* sImplementationName, void* _pServiceManager, void* _pRegistryKey )
+{
+    void* pRet = NULL;
+
+    ::com::sun::star::lang::XMultiServiceFactory* pServiceManager =
+        reinterpret_cast< ::com::sun::star::lang::XMultiServiceFactory* >
+            ( _pServiceManager );
+    ::com::sun::star::uno::Reference<
+            ::com::sun::star::lang::XSingleServiceFactory > xFactory;
+
+    for( const InstancesArray* pArr = aInstances; pArr->pServiceNm; ++pArr )
+    {
+        if( 0 == rtl_str_compare( sImplementationName, pArr->pImplementationNm ) )
+        {
+            ::com::sun::star::uno::Sequence< ::rtl::OUString > aServiceNames(1);
+            aServiceNames.getArray()[0] =
+                ::rtl::OUString::createFromAscii( pArr->pServiceNm );
+            xFactory = ::cppu::createSingleFactory(
+                    pServiceManager, aServiceNames.getArray()[0],
+                    *pArr->pFn, aServiceNames );
+            break;
+        }
+    }
+
+    if ( xFactory.is() )
+    {
+        xFactory->acquire();
+        pRet = xFactory.get();
+    }
+
+    return pRet;
+}
+
+}   // "C"
