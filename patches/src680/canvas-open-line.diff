Index: canvas/source/tools/linepolypolygonbase.cxx
===================================================================
RCS file: /cvs/gsl/canvas/source/tools/linepolypolygonbase.cxx,v
retrieving revision 1.2
diff -u -p -u -r1.2 linepolypolygonbase.cxx
--- canvas/source/tools/linepolypolygonbase.cxx	26 Nov 2004 17:08:07 -0000	1.2
+++ canvas/source/tools/linepolypolygonbase.cxx	8 Mar 2005 15:03:39 -0000
@@ -163,12 +162,17 @@ namespace canvas
 			sal_Int32 index, 
 			sal_Bool closedState ) throw (uno::RuntimeException)
 		{
-			// fetch polygon, change state
-			::basegfx::B2DPolygon aTmp( maPolyPoly.getB2DPolygon(index) );
-			aTmp.setClosed( closedState );
-
-			// set back to container
-			maPolyPoly.setB2DPolygon( index, aTmp );
+			if (index == -1) // set all
+				maPolyPoly.setClosed( closedState );
+			else
+			{
+				// fetch polygon, change state
+				::basegfx::B2DPolygon aTmp( maPolyPoly.getB2DPolygon(index) );
+				aTmp.setClosed( closedState );
+				// set back to container
+				maPolyPoly.setB2DPolygon( index, aTmp );
+			}
+			
 		}
 
 		uno::Sequence< uno::Sequence< geometry::RealPoint2D > > SAL_CALL LinePolyPolygonBase::getPoints(


Index: canvas/source/vcl/canvashelper.cxx
===================================================================
RCS file: /cvs/gsl/canvas/source/vcl/canvashelper.cxx,v
retrieving revision 1.2
diff -u -p -u -r1.2 canvashelper.cxx
--- canvas/source/vcl/canvashelper.cxx	26 Nov 2004 17:12:04 -0000	1.2
+++ canvas/source/vcl/canvashelper.cxx	8 Mar 2005 15:03:41 -0000
@@ -234,10 +240,22 @@ namespace vclcanvas
 
             const PolyPolygon aPolyPoly( tools::mapPolyPolygon( tools::polyPolygonFromXPolyPolygon2D(xPolyPolygon),
                                                                 viewState, renderState ) );
-            mpOutDev->getOutDev().DrawPolyPolygon( aPolyPoly );
-
-            if( mp2ndOutDev.get() )
-                mp2ndOutDev->getOutDev().DrawPolyPolygon( aPolyPoly );
+			for( long i = 0; i < xPolyPolygon->getNumberOfPolygons(); i++ )
+			{
+				const Polygon &rPoly = aPolyPoly.GetObject( i );
+				if( xPolyPolygon->isClosed( i ) )
+				{
+					mpOutDev->getOutDev().DrawPolygon( rPoly );
+					if( mp2ndOutDev.get() )
+						mp2ndOutDev->getOutDev().DrawPolygon( rPoly );
+				}
+				else
+				{
+					mpOutDev->getOutDev().DrawPolyLine( rPoly );
+					if( mp2ndOutDev.get() )
+						mp2ndOutDev->getOutDev().DrawPolyLine( rPoly );
+				}
+			}
         }
 
         // TODO(P1): Provide caching here.


Index: cppcanvas/source/mtfrenderer/polypolyaction.cxx
===================================================================
RCS file: /cvs/gsl/cppcanvas/source/mtfrenderer/polypolyaction.cxx,v
retrieving revision 1.3
diff -u -p -u -r1.3 polypolyaction.cxx
--- cppcanvas/source/mtfrenderer/polypolyaction.cxx	26 Nov 2004 20:56:36 -0000	1.3
+++ cppcanvas/source/mtfrenderer/polypolyaction.cxx	8 Mar 2005 15:03:45 -0000
@@ -145,7 +144,8 @@ namespace cppcanvas 
         PolyPolyAction::PolyPolyAction( const ::PolyPolygon& 	rPolyPoly,  
                                         const CanvasSharedPtr& 	rCanvas, 
                                         const OutDevState&		rState,
-                                        Mode					mode		) :
+                                        Mode					mode,
+										bool                    bClose     ) :
             mxPolyPoly( ::vcl::unotools::xPolyPolygonFromPolyPolygon( rCanvas->getUNOCanvas()->getDevice(), 
                                                                       rPolyPoly ) ),
             mpCanvas( rCanvas ),
@@ -157,7 +157,7 @@ namespace cppcanvas 
             mbStroke( rState.isLineColorSet )
         {
             tools::initRenderState(maState,rState);
-
+			mxPolyPoly->setClosed( -1, bClose );
             if( mbStroke )
                 maStrokeColor = rState.lineColor;
         }

Index: cppcanvas/source/mtfrenderer/polypolyaction.hxx
===================================================================
RCS file: /cvs/gsl/cppcanvas/source/mtfrenderer/polypolyaction.hxx,v
retrieving revision 1.3
diff -u -p -u -r1.3 polypolyaction.hxx
--- cppcanvas/source/mtfrenderer/polypolyaction.hxx	26 Nov 2004 20:56:50 -0000	1.3
+++ cppcanvas/source/mtfrenderer/polypolyaction.hxx	8 Mar 2005 15:03:45 -0000
@@ -106,7 +106,8 @@ namespace cppcanvas 
             PolyPolyAction( const ::PolyPolygon&,  
                             const CanvasSharedPtr&, 
                             const OutDevState&,
-                            Mode				); 
+                            Mode				,
+							bool                bClose = true ); 
             /// For transparent painting of the given polygon (normally, we take the colors always opaque)
             PolyPolyAction( const ::PolyPolygon&,  
                             const CanvasSharedPtr&, 

Index: cppcanvas/source/mtfrenderer/implrenderer.cxx
===================================================================
RCS file: /cvs/gsl/cppcanvas/source/mtfrenderer/implrenderer.cxx,v
retrieving revision 1.6
diff -u -p -u -r1.6 implrenderer.cxx
--- cppcanvas/source/mtfrenderer/implrenderer.cxx	8 Feb 2005 11:31:24 -0000	1.6
+++ cppcanvas/source/mtfrenderer/implrenderer.cxx	8 Mar 2005 15:03:44 -0000
@@ -2023,7 +2023,8 @@ namespace cppcanvas
                                             rVDev.LogicToPixel( pPolyLineAct->GetPolygon() ),
                                             rCanvas,
                                             rState,
-                                            internal::PolyPolyAction::strokeOnly ) ),
+                                            internal::PolyPolyAction::strokeOnly,
+											false ) ),
                                     io_rCurrActionIndex ) );
                         }
                     }

