--- canvas/source/tools/page.cxx	2006-09-17 04:26:19.000000000 +0100
+++ canvas/source/tools/page.cxx	2006-11-09 21:41:56.062500000 +0000
@@ -96,7 +96,11 @@ namespace canvas
 		// currently be deleted. in either case, simply
 		// remove the reference from our internal storage.
 		FragmentContainer_t::iterator it(
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+			remove(
+#else
 			std::remove(
+#endif
 				mpFragments.begin(),mpFragments.end(),pFragment));
 		mpFragments.erase(it,mpFragments.end());
 	}
--- canvas/source/tools/pagemanager.cxx	2006-09-17 04:26:32.000000000 +0100
+++ canvas/source/tools/pagemanager.cxx	2006-11-09 21:43:24.765625000 +0000
@@ -100,7 +100,11 @@ namespace canvas
 		// erase the reference to the given fragment from our
 		// internal container.
 		FragmentContainer_t::iterator it(
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+			remove(
+#else
 			std::remove(
+#endif
 				maFragments.begin(),maFragments.end(),pFragment));
 		maFragments.erase(it,maFragments.end());
 
--- connectivity/source/drivers/jdbc/Statement.cxx	2006-09-17 03:49:32.000000000 +0100
+++ connectivity/source/drivers/jdbc/Statement.cxx	2006-11-09 21:44:13.765625000 +0000
@@ -206,7 +206,11 @@ Sequence< Type > SAL_CALL java_sql_State
 	Sequence< Type > aOldTypes = java_sql_Statement_BASE::getTypes();
 	if ( m_pConnection && !m_pConnection->isAutoRetrievingEnabled() )
 	{
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+		remove(aOldTypes.getArray(),aOldTypes.getArray() + aOldTypes.getLength(),
+#else
 		::std::remove(aOldTypes.getArray(),aOldTypes.getArray() + aOldTypes.getLength(),
+#endif
 						::getCppuType( (const Reference< XGeneratedResultSet > *)0 ));
 		aOldTypes.realloc(aOldTypes.getLength() - 1);
 	}
--- vcl/source/gdi//outdev3.cxx	2006-11-09 21:04:02.015625000 +0000
+++ vcl/source/gdi/outdev3.cxx	2006-11-09 21:46:06.359375000 +0000
@@ -3202,7 +3202,13 @@ ImplFontEntry* ImplFontCache::GetFallbac
         for (std::vector<sal_Unicode>::const_iterator aI = aGlyphs.begin(); aI != aEnd; ++aI)
         {
             std::vector<sal_Unicode>::iterator aNewEnd = 
+		// very strange indicates a probably serious problem in the std
+		// namespace
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+                remove(rMissingGlyphs.begin(), rMissingGlyphs.end(), *aI);
+#else
                 std::remove(rMissingGlyphs.begin(), rMissingGlyphs.end(), *aI);
+#endif
             if (aNewEnd != rMissingGlyphs.end())
                 rMissingGlyphs.erase(aNewEnd);
             //In this case only the first missing symbol has been taken into account and is
--- slideshow/source/engine/eventmultiplexer.cxx	2006-10-12 14:53:17.000000000 +0100
+++ slideshow/source/engine/eventmultiplexer.cxx	2006-11-09 21:47:13.140625000 +0000
@@ -185,7 +185,11 @@ void EventMultiplexer::removeHandler(
         "EventMultiplexer::removeHandler(): Invalid handler" );
     
     const typename Container::iterator aEnd( rContainer.end() );
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+    rContainer.erase( remove(rContainer.begin(), aEnd, rHandler), aEnd );
+#else
     rContainer.erase( ::std::remove(rContainer.begin(), aEnd, rHandler), aEnd );
+#endif
 }
 
 template <typename XSlideShowViewFunc>
--- slideshow/source/engine/layer.cxx	2006-09-17 09:26:25.000000000 +0100
+++ slideshow/source/engine/layer.cxx	2006-11-09 21:47:44.671875000 +0000
@@ -119,7 +119,11 @@ namespace presentation
             ViewLayerVector::iterator aIter;
 
             // remove from local list
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+            if( (aIter=remove( maViewLayers.begin(),
+#else
             if( (aIter=::std::remove( maViewLayers.begin(),
+#endif
                                       aEnd,
                                       rLayer )) == aEnd )
             {
--- slideshow/source/engine/unoviewcontainer.cxx	2006-09-17 09:29:46.000000000 +0100
+++ slideshow/source/engine/unoviewcontainer.cxx	2006-11-09 21:49:34.234375000 +0000
@@ -120,7 +120,11 @@ namespace presentation
             // remove locally
             const UnoViewVector::iterator aEnd( maViews.end() );
             UnoViewVector::iterator aIter;
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+            if( (aIter=remove( maViews.begin(), 
+#else
             if( (aIter=::std::remove( maViews.begin(), 
+#endif
                                       aEnd, 
                                       rView )) == aEnd )
             {
--- dbaccess/source/ui/querydesign/QueryTabWinUndoAct.hxx	2006-07-10 16:41:24.000000000 +0100
+++ dbaccess/source/ui/querydesign/QueryTabWinUndoAct.hxx	2006-11-09 21:54:50.109375000 +0000
@@ -83,7 +83,11 @@ namespace dbaui
 		void InsertConnection( OTableConnection* pConnection ) { m_vTableConnection.push_back(pConnection); }
 		void RemoveConnection( OTableConnection* pConnection ) 
 		{ 
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+			m_vTableConnection.erase(remove(m_vTableConnection.begin(),m_vTableConnection.end(),pConnection),m_vTableConnection.end());
+#else
 			m_vTableConnection.erase(::std::remove(m_vTableConnection.begin(),m_vTableConnection.end(),pConnection),m_vTableConnection.end());
+#endif
 		}
 	};
 
--- dbaccess/source/ui/querydesign/JoinController.cxx	2006-09-17 08:20:17.000000000 +0100
+++ dbaccess/source/ui/querydesign/JoinController.cxx	2006-11-09 21:52:57.781250000 +0000
@@ -436,7 +436,11 @@ void OJoinController::SaveTabWinsPosSize
 // -----------------------------------------------------------------------------
 void OJoinController::removeConnectionData(OTableConnectionData* _pData)
 {
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+	m_vTableConnectionData.erase( remove(m_vTableConnectionData.begin(),m_vTableConnectionData.end(),_pData),m_vTableConnectionData.end());
+#else
 	m_vTableConnectionData.erase( ::std::remove(m_vTableConnectionData.begin(),m_vTableConnectionData.end(),_pData),m_vTableConnectionData.end());
+#endif
 }
 // -----------------------------------------------------------------------------
 void OJoinController::describeSupportedFeatures()
--- dbaccess/source/ui/querydesign/QueryTableView.cxx	2006-09-17 08:23:21.000000000 +0100
+++ dbaccess/source/ui/querydesign/QueryTableView.cxx	2006-11-09 21:57:24.671875000 +0000
@@ -379,8 +379,11 @@ void OQueryTableView::ReSync()
 			pTabWin->clearListBox();
 			delete pTabWin;
 			arrInvalidTables.push_back(pData->GetAliasName());
-
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+			pTabWinDataList->erase( remove(pTabWinDataList->begin(),pTabWinDataList->end(),*aIter) ,pTabWinDataList->end());
+#else
 			pTabWinDataList->erase( ::std::remove(pTabWinDataList->begin(),pTabWinDataList->end(),*aIter) ,pTabWinDataList->end());
+#endif
 			delete pData;
 			continue;
 		}
@@ -409,7 +412,11 @@ void OQueryTableView::ReSync()
 
 		if (bInvalid)
 		{	// nein -> Pech gehabt, die Connection faellt weg
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+			pTabConnDataList->erase( remove(pTabConnDataList->begin(),pTabConnDataList->end(),*aConIter) ,pTabConnDataList->end());
+#else
 			pTabConnDataList->erase( ::std::remove(pTabConnDataList->begin(),pTabConnDataList->end(),*aConIter) ,pTabConnDataList->end());
+#endif
 			delete pTabConnData;
 			continue;
 		}
@@ -961,7 +968,11 @@ void OQueryTableView::HideTabWin( OQuery
 
 		// die Daten zum TabWin muessen auch aus meiner Verantwortung entlassen werden
 		::std::vector< OTableWindowData*>* pTabWinDataList = m_pView->getController()->getTableWindowData();
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+		pTabWinDataList->erase( remove(pTabWinDataList->begin(),pTabWinDataList->end(),pTabWin->GetData()),pTabWinDataList->end());
+#else
 		pTabWinDataList->erase( ::std::remove(pTabWinDataList->begin(),pTabWinDataList->end(),pTabWin->GetData()),pTabWinDataList->end());
+#endif
 			// NICHT loeschen, da ja das TabWin selber - das noch lebt - sie auch noch braucht
 			// Entweder geht es irgendwann wieder in meine Verantwortung ueber, (ueber ShowTabWin), dann fuege ich
 			// auch die Daten wieder ein, oder die Undo-Action, die im Augenblick die alleinige Verantwortung fuer das Fenster
--- dbaccess/source/ui/relationdesign/RelationTableView.cxx	2006-09-17 08:28:33.000000000 +0100
+++ dbaccess/source/ui/relationdesign/RelationTableView.cxx	2006-11-09 22:15:03.406250000 +0000
@@ -189,8 +189,11 @@ void ORelationTableView::ReSync()
 			pTabWin->clearListBox();
 			delete pTabWin;
 			arrInvalidTables.push_back(pData->GetTableName());
-
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+			pTabWinDataList->erase( remove(pTabWinDataList->begin(),pTabWinDataList->end(),*aIter) ,pTabWinDataList->end());
+#else
 			pTabWinDataList->erase( ::std::remove(pTabWinDataList->begin(),pTabWinDataList->end(),*aIter) ,pTabWinDataList->end());
+#endif
 			delete pData;
 			continue;
 		}
@@ -220,7 +223,11 @@ void ORelationTableView::ReSync()
 
 			if (bInvalid)
 			{	// nein -> Pech gehabt, die Connection faellt weg
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+				pTabConnDataList->erase( remove(pTabConnDataList->begin(),pTabConnDataList->end(),*aConIter),pTabConnDataList->end() );
+#else
 				pTabConnDataList->erase( ::std::remove(pTabConnDataList->begin(),pTabConnDataList->end(),*aConIter),pTabConnDataList->end() );
+#endif
 				delete pTabConnData;
 				continue;
 			}
--- svx/source/accessibility/AccessibleControlShape.cxx	2006-09-17 04:59:45.000000000 +0100
+++ svx/source/accessibility/AccessibleControlShape.cxx	2006-11-09 21:58:43.921875000 +0000
@@ -520,7 +520,11 @@ Sequence< Type > SAL_CALL AccessibleCont
 		Type aThisRoundType = *pBegin;
 		if ( ++pBegin != pEnd )
 		{
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+			pEnd = remove( pBegin, pEnd, aThisRoundType );
+#else
 			pEnd = ::std::remove( pBegin, pEnd, aThisRoundType );
+#endif
 			// now all types between begin and (the old) end which equal aThisRoundType
 			// are moved behind the new end
 		}
--- connectivity/source/drivers/odbc/OStatement.cxx	2006-09-17 04:07:43.000000000 +0100
+++ connectivity/source/drivers/odbc/OStatement.cxx	2006-11-09 21:44:59.703125000 +0000
@@ -199,7 +199,11 @@ Sequence< Type > SAL_CALL OStatement_Bas
 	Sequence< Type > aOldTypes = OStatement_BASE::getTypes();
 	if ( m_pConnection && !m_pConnection->isAutoRetrievingEnabled() )
 	{
+#if defined(_MSC_VER) && (_MSC_VER > 1310)
+		remove(aOldTypes.getArray(),aOldTypes.getArray() + aOldTypes.getLength(),
+#else
 		::std::remove(aOldTypes.getArray(),aOldTypes.getArray() + aOldTypes.getLength(),
+#endif
 						::getCppuType( (const Reference< XGeneratedResultSet > *)0 ));
 		aOldTypes.realloc(aOldTypes.getLength() - 1);
 	}
