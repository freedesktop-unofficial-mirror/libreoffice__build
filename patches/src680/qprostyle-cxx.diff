--- /dev/null	2004-07-26 17:21:14.000000000 +0530
+++ sc/source/filter/qpro/qprostyle.cxx	2005-05-31 12:55:39.000000000 +0530
@@ -0,0 +1,188 @@
+/*************************************************************************
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+
+#include <sal/config.h>
+#include <stdio.h>
+#include <sfx2/docfile.hxx>
+                                                                                                                             
+#include "qproform.hxx"
+#include "qpro.hxx"
+#include "qprostyle.hxx"
+                                                                                                                             
+#include <tools/color.hxx>
+#include <scitems.hxx>
+#include <svx/algitem.hxx>
+#include <svx/udlnitem.hxx>
+#include <svx/wghtitem.hxx>
+#include <svx/postitem.hxx>
+#include <svx/crsditem.hxx>
+#include <svx/fontitem.hxx>
+#include <map>
+                                                                                                                             
+#include "global.hxx"
+#include "scerrors.hxx"
+#include "docpool.hxx"
+#include "patattr.hxx"
+#include "filter.hxx"
+#include "document.hxx"
+#include "cell.hxx"
+
+void ScQProStyle::SetFormat( ScDocument *pDoc, sal_uInt8 nCol, sal_uInt16 nRow, sal_uInt8 nTab, sal_uInt16 nStyle )
+{
+    ScPatternAttr aPattern(pDoc->GetPool());
+    SfxItemSet& rItemSet = aPattern.GetItemSet();
+
+    if( nStyle >= maAlignLimit )
+        return;
+
+    sal_uInt8 nTmp = maAlign[ nStyle ];
+    sal_uInt8 nHor = ( nTmp & 0x07 );
+    sal_uInt8 nVer = ( nTmp & 0x18 );
+    sal_uInt8 nOrient = ( nTmp & 0x60 );
+                                                                                                                           
+    // Horizontal Alignment
+    SvxHorJustifyItem aJustify = SVX_HOR_JUSTIFY_STANDARD;
+    switch( nHor )
+    {
+        case 0x00:
+            aJustify = SVX_HOR_JUSTIFY_STANDARD;
+            break;
+
+        case 0x01:
+            aJustify = SVX_HOR_JUSTIFY_LEFT;
+            break;
+                                                                                                                            
+        case 0x02:
+            aJustify = SVX_HOR_JUSTIFY_CENTER;
+            break;
+
+        case 0x03:
+            aJustify = SVX_HOR_JUSTIFY_RIGHT;
+            break;
+
+        case 0x04:
+            aJustify = SVX_HOR_JUSTIFY_BLOCK;
+            break;
+    }
+    rItemSet.Put( aJustify );
+                                                                                                                           
+    // Vertical Alignment
+    SvxVerJustifyItem aVerJustify = SVX_VER_JUSTIFY_STANDARD;
+    switch( nVer )
+    {
+        case 0x00:
+            aVerJustify = SVX_VER_JUSTIFY_BOTTOM;
+            break;
+                                                                                                                            
+        case 0x08:
+            aVerJustify = SVX_VER_JUSTIFY_CENTER;
+            break;
+                                                                                                                             
+        case 0x10:
+            aVerJustify = SVX_VER_JUSTIFY_TOP;
+            break;
+    }
+    rItemSet.Put( aVerJustify );
+                                                                                                                             
+    // Orientation
+    SvxOrientationItem aOrientItem = SVX_ORIENTATION_STANDARD;
+    switch( nOrient )
+    {
+        case 0x20:
+            aOrientItem = SVX_ORIENTATION_TOPBOTTOM;
+            break;
+                                                                                                                             
+    }   
+    rItemSet.Put( aOrientItem );
+                                                                                                                             
+    // Wrap cell contents
+    if( nTmp & 0x80 )
+    {
+        SfxBoolItem aWrapItem( ATTR_LINEBREAK );
+        aWrapItem.SetValue( TRUE );
+        rItemSet.Put( aWrapItem );
+    }
+                                                                                                                             
+    // Font Attributes
+    if( nStyle >= maFontLimit )
+        return;
+    sal_uInt16 nTmpFnt = maFontRecord[ maFont[ nStyle ] ];
+    BOOL bIsBold, bIsItalic, bIsUnderLine, bIsStrikeThrough;
+
+    bIsBold = ( nTmpFnt & 0x0001 );
+    bIsItalic = ( nTmpFnt & 0x0002 );
+    bIsUnderLine = ( nTmpFnt & 0x0004 );
+    bIsStrikeThrough = (nTmpFnt & 0x0020 );
+                                                                                                                           
+    if( bIsBold )
+        rItemSet.Put( SvxWeightItem( WEIGHT_BOLD,ATTR_FONT_WEIGHT) );
+    if( bIsItalic )
+        rItemSet.Put( SvxPostureItem( ITALIC_NORMAL, ATTR_FONT_POSTURE ) );
+    if( bIsUnderLine )
+        rItemSet.Put( SvxUnderlineItem( UNDERLINE_SINGLE, ATTR_FONT_UNDERLINE ) );
+                                                                                                                            
+    String fntName = maFontType[ maFont[ nStyle ] ];
+    rItemSet.Put( SvxFontItem( FAMILY_SYSTEM, fntName, EMPTY_STRING ) );
+                                                                                                                             
+    pDoc->ApplyPattern( nCol, nRow, nTab, aPattern );
+}
+
