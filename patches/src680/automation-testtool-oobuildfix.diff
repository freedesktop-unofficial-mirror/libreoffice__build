Index: automation/source/app/testbasi.cxx
===================================================================
RCS file: /cvs/util/automation/source/app/testbasi.cxx,v
retrieving revision 1.5
diff -u -p -r1.5 testbasi.cxx
--- automation/source/app/testbasi.cxx	7 Sep 2005 19:15:51 -0000	1.5
+++ automation/source/app/testbasi.cxx	3 Feb 2006 17:40:28 -0000
@@ -128,6 +128,10 @@ IMPL_LINK( TTBasic, CErrorImpl, ErrorEnt
 BOOL TTBasic::Compile( SbModule* p )
 {
 	p->SetComment( ((TestToolObj*)pTestObject)->GetRevision(p->GetSource()) );
+	// the default ooo-build compatibilty options stuff
+	// up the testtool make sure they are false
+	p->SetCompatibleMode( false );
+
 	SbModule* pOldModule = GetCompileModule();
 	SetCompileModule( p );
 	p->SetSource( ((TestToolObj*)pTestObject)->PreCompile(p->GetSource()) );
Index: automation/source/testtool/objtest.cxx
===================================================================
RCS file: /cvs/util/automation/source/testtool/objtest.cxx,v
retrieving revision 1.20
diff -u -p -r1.20 objtest.cxx
--- automation/source/testtool/objtest.cxx	6 Oct 2005 12:37:43 -0000	1.20
+++ automation/source/testtool/objtest.cxx	3 Feb 2006 17:40:30 -0000
@@ -1849,6 +1849,10 @@ void TestToolObj::SFX_NOTIFY( SfxBroadca
     						{
     							SbModule *pMod;
     							pMod = pBasic->MakeModule( CUniString("--"), String() );
+									if ( pMod )
+										// the default ooo-build compatibilty options stuff
+										// up the testtool
+										pMod->SetCompatibleMode( false );
     							pMod->Clear();
     							if ( Load( aFullPathname, pMod ) )
     							{
@@ -2715,7 +2719,8 @@ void TestToolObj::DebugFindNoErrors( BOO
 
 SbxVariable* TestToolObj::Find( const String& Str, SbxClassType Type)
 {
-	if ( BasicRuntimeAccess::IsRunInit() )            // wegen Find im "Global" Befehl des Basic
+	if ( BasicRuntimeAccess::IsRunInit() 
+	|| ( Str ==String( RTL_CONSTASCII_USTRINGPARAM( "ThisComponent" ) ) ) )            // wegen Find im "Global" Befehl des Basic
     	return NULL;
 
 	SbxVariableRef Old = SbxObject::Find(Str, Type );
