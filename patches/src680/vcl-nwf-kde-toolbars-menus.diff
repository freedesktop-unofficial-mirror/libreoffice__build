--- vcl/unx/kde/salnativewidgets-kde.cxx	2005-01-07 10:25:28.000000000 +0100
+++ vcl/unx/kde/salnativewidgets-kde.cxx	2005-02-24 15:08:14.159978812 +0100
@@ -71,14 +71,22 @@
 #include <qframe.h>
 #include <qlineedit.h>
 #include <qlistview.h>
+#include <qmainwindow.h>
 #include <qpainter.h>
 #include <qpushbutton.h>
 #include <qradiobutton.h>
 #include <qrangecontrol.h>
 #include <qtabbar.h>
 #include <qtabwidget.h>
+#include <qtoolbar.h>
+#include <qtoolbutton.h>
 #include <qwidget.h>
 
+// Ugly hack to be able to access QMenuItem::is_enabled
+#define private public
+#include <qmenudata.h>
+#undef private
+
 #include <kaboutdata.h>
 #include <kapplication.h>
 #include <kcmdlineargs.h>
@@ -229,6 +237,36 @@ class WidgetPainter
 	*/
 	QScrollBar   *m_pScrollBar;
 
+        /** Cached dock area. Needed for proper functionality of tool bars.
+
+          @see m_pPushButton
+          */
+        QMainWindow  *m_pMainWindow;
+
+        /** Cached tool bar.
+
+          @see m_pPushButton
+        */
+        QToolBar     *m_pToolBarHoriz, *m_pToolBarVert;
+
+        /** Cached tool button.
+
+          @see m_pPushButton
+        */
+        QToolButton  *m_pToolButton;
+
+        /** Cached menu bar.
+
+          @see m_pPushButton
+        */
+        QMenuBar     *m_pMenuBar;
+
+        /** Cached popup menu.
+
+          @see m_pPushButton
+        */
+        QPopupMenu   *m_pPopupMenu;
+
 	// TODO other widgets
 
     public:
@@ -272,9 +310,10 @@ class WidgetPainter
 	    @param gc
 	    The graphics context.
 	*/
-	BOOL drawStyledWidget( QWidget *pWidget,
-		ControlState nState, const ImplControlValue& aValue,
-		Display *dpy, XLIB_Window drawable, GC gc );
+        BOOL drawStyledWidget( QWidget *pWidget,
+                ControlState nState, const ImplControlValue& aValue,
+                Display *dpy, XLIB_Window drawable, GC gc,
+                ControlPart nPart = PART_ENTIRE_CONTROL );
 
 	/** 'Get' method for push button.
 
@@ -344,6 +383,30 @@ class WidgetPainter
 	QScrollBar   *scrollBar( const Region& rControlRegion,
 		BOOL bHorizontal, const ImplControlValue& aValue );
 
+        /** 'Get' method for tool bar.
+
+          @see pushButton()
+        */
+        QToolBar     *toolBar( const Region& rControlRegion, BOOL bHorizontal );
+
+        /** 'Get' method for tool button.
+
+          @see pushButton()
+        */
+        QToolButton  *toolButton( const Region& rControlRegion );
+
+        /** 'Get' method for menu bar.
+
+          @see pushButton()
+        */
+        QMenuBar     *menuBar( const Region& rControlRegion );
+
+        /** 'Get' method for popup menu.
+
+          @see pushButton()
+        */
+        QPopupMenu   *popupMenu( const Region& rControlRegion );
+
 	// TODO other widgets
 
     protected:
@@ -390,7 +453,13 @@ WidgetPainter::WidgetPainter( void )
       m_pTabBar( NULL ),
       m_pTabWidget( NULL ),
       m_pListView( NULL ),
-      m_pScrollBar( NULL )
+      m_pScrollBar( NULL ),
+      m_pMainWindow( NULL ),
+      m_pToolBarHoriz( NULL ),
+      m_pToolBarVert( NULL ),
+      m_pToolButton( NULL ),
+      m_pMenuBar( NULL ),
+      m_pPopupMenu( NULL )
 {
 }
 
@@ -413,11 +482,18 @@ WidgetPainter::~WidgetPainter( void )
     delete m_pTabWidget, m_pTabWidget = NULL;
     delete m_pListView, m_pListView = NULL;
     delete m_pScrollBar, m_pScrollBar = NULL;
+    delete m_pToolBarHoriz, m_pToolBarHoriz = NULL;
+    delete m_pToolBarVert, m_pToolBarVert = NULL;
+    delete m_pMainWindow, m_pMainWindow = NULL;
+    delete m_pToolButton, m_pToolButton = NULL;
+    delete m_pMenuBar, m_pMenuBar = NULL;
+    delete m_pPopupMenu, m_pPopupMenu = NULL;
 }
 
 BOOL WidgetPainter::drawStyledWidget( QWidget *pWidget,
 	ControlState nState, const ImplControlValue& aValue,
-	Display *dpy, XLIB_Window drawable, GC gc )
+        Display *dpy, XLIB_Window drawable, GC gc,
+        ControlPart nPart )
 {
     if ( !pWidget )
 	return FALSE;
@@ -659,6 +735,94 @@ BOOL WidgetPainter::drawStyledWidget( QW
 		pWidget->colorGroup(), nStyle | eHoriz,
 		QStyle::SC_All, eActive );
     }
+    else if ( strcmp( "QToolBar", pClassName ) == 0 )
+    {
+        QToolBar *pToolBar = static_cast< QToolBar * >( pWidget->qt_cast( "QToolBar" ) );
+        bool bIsHorizontal = false;
+        if ( pToolBar && pToolBar->orientation() == Qt::Horizontal )
+        {
+            nStyle |= QStyle::Style_Horizontal;
+            bIsHorizontal = true;
+        }
+
+        kapp->style().drawControl( QStyle::CE_DockWindowEmptyArea,
+                &qPainter, pWidget, qRect,
+                pWidget->colorGroup(), nStyle );
+
+        kapp->style().drawPrimitive( QStyle::PE_PanelDockWindow,
+                &qPainter, qRect, pWidget->colorGroup(), nStyle );
+        
+        if ( nPart == PART_THUMB_HORZ || nPart == PART_THUMB_VERT )
+        {
+            ToolbarValue *pValue = static_cast< ToolbarValue * >( aValue.getOptionalVal() );
+            
+            QRect qThumbRect = region2QRect( pValue->maGripRect );
+            if ( bIsHorizontal )
+            {
+                qThumbRect.addCoords( 0, 1, 0, -2 );    // make the thumb a bit nicer
+                qRect.setWidth( qThumbRect.width() );   // draw just the thumb part
+            }
+            else
+            {
+                qThumbRect.addCoords( 1, 0, -2, 0 );    // make the thumb a bit nicer
+                qRect.setHeight( qThumbRect.height() ); // draw just the thumb part
+            }
+
+            if ( kapp->style().inherits( "KStyle" ) )
+            {
+                // Workaround for the workaround in KStyle::drawPrimitive()
+                KStyle *pStyle = static_cast< KStyle * >( &kapp->style() );
+                pStyle->drawKStylePrimitive( KStyle::KPE_ToolBarHandle,
+                        &qPainter, pToolBar, qThumbRect,
+                        pWidget->colorGroup(), nStyle );
+            }
+            else
+                kapp->style().drawPrimitive( QStyle::PE_DockWindowHandle,
+                        &qPainter, qThumbRect, pWidget->colorGroup(), nStyle );
+        }
+    }
+    else if ( strcmp( "QToolButton", pClassName ) == 0 )
+    {
+        kapp->style().drawComplexControl( QStyle::CC_ToolButton,
+                &qPainter, pWidget, qRect,
+                pWidget->colorGroup(), nStyle,
+                QStyle::SC_ToolButton );
+    }
+    else if ( strcmp( "QMenuBar", pClassName ) == 0 )
+    {
+        if ( nPart == PART_ENTIRE_CONTROL )
+        {
+            kapp->style().drawControl( QStyle::CE_MenuBarEmptyArea,
+                    &qPainter, pWidget, qRect,
+                    pWidget->colorGroup(), nStyle );
+        }
+        else if ( nPart == PART_MENU_ITEM )
+        {
+            QMenuItem qMenuItem;
+            qMenuItem.is_enabled = bool( nStyle & QStyle::Style_Enabled );
+
+            if ( nStyle & QStyle::Style_Selected )
+                nStyle |= QStyle::Style_Active | QStyle::Style_Down | QStyle::Style_HasFocus;
+
+            kapp->style().drawControl( QStyle::CE_MenuBarItem,
+                    &qPainter, pWidget, qRect,
+                    pWidget->colorGroup(), nStyle,
+                    QStyleOption( &qMenuItem ) );
+        }
+    }
+    else if ( strcmp( "QPopupMenu", pClassName ) == 0 )
+    {
+        QMenuItem qMenuItem;
+        qMenuItem.is_enabled = bool( nStyle & QStyle::Style_Enabled );
+
+        if ( nStyle & QStyle::Style_Selected )
+            nStyle |= QStyle::Style_Active;
+
+        kapp->style().drawControl( QStyle::CE_PopupMenuItem,
+                &qPainter, pWidget, qRect,
+                pWidget->colorGroup(), nStyle,
+                QStyleOption( &qMenuItem, 0, 0 ) );
+    }
     else
 	return FALSE;
 
@@ -911,6 +1075,78 @@ QScrollBar *WidgetPainter::scrollBar( co
     return m_pScrollBar;
 }
 
+QToolBar *WidgetPainter::toolBar( const Region& rControlRegion, BOOL bHorizontal )
+{
+    if ( !m_pMainWindow )
+        m_pMainWindow = new QMainWindow( NULL, "main_window" );
+
+    QToolBar *pToolBar;
+    if ( bHorizontal )
+    {
+        if ( !m_pToolBarHoriz )
+        {
+            m_pToolBarHoriz = new QToolBar( m_pMainWindow, "tool_bar_horiz" );
+            m_pMainWindow->moveDockWindow( m_pToolBarHoriz, Qt::DockTop );
+        }
+        pToolBar = m_pToolBarHoriz;
+    }
+    else
+    {
+        if ( !m_pToolBarVert )
+        {
+            m_pToolBarVert = new QToolBar( m_pMainWindow, "tool_bar_horiz" );
+            m_pMainWindow->moveDockWindow( m_pToolBarVert, Qt::DockLeft );
+        }
+        pToolBar = m_pToolBarVert;
+    }
+
+    QRect qRect = region2QRect( rControlRegion );
+
+    pToolBar->move( qRect.topLeft() );
+    pToolBar->resize( qRect.size() );
+
+    return pToolBar;
+}
+
+QToolButton *WidgetPainter::toolButton( const Region& rControlRegion)
+{
+    if ( !m_pToolButton )
+	m_pToolButton = new QToolButton( NULL, "tool_button" );
+
+    QRect qRect = region2QRect( rControlRegion );
+
+    m_pToolButton->move( qRect.topLeft() );
+    m_pToolButton->resize( qRect.size() );
+
+    return m_pToolButton;
+}
+
+QMenuBar *WidgetPainter::menuBar( const Region& rControlRegion)
+{
+    if ( !m_pMenuBar )
+	m_pMenuBar = new QMenuBar( NULL, "menu_bar" );
+
+    QRect qRect = region2QRect( rControlRegion );
+
+    m_pMenuBar->move( qRect.topLeft() );
+    m_pMenuBar->resize( qRect.size() );
+
+    return m_pMenuBar;
+}
+
+QPopupMenu *WidgetPainter::popupMenu( const Region& rControlRegion)
+{
+    if ( !m_pPopupMenu )
+	m_pPopupMenu = new QPopupMenu( NULL, "popup_menu" );
+
+    QRect qRect = region2QRect( rControlRegion );
+
+    m_pPopupMenu->move( qRect.topLeft() );
+    m_pPopupMenu->resize( qRect.size() );
+
+    return m_pPopupMenu;
+}
+
 QStyle::SFlags WidgetPainter::vclStateValue2SFlags( ControlState nState,
 	const ImplControlValue& aValue )
 {
@@ -997,10 +1233,16 @@ BOOL KDESalGraphics::IsNativeControlSupp
 	( (nType == CTRL_TAB_PANE)    && (nPart == PART_ENTIRE_CONTROL) ) ||
 	// no CTRL_TAB_BODY for KDE
 	( (nType == CTRL_SCROLLBAR)   && (nPart == PART_ENTIRE_CONTROL || nPart == PART_DRAW_BACKGROUND_HORZ || nPart == PART_DRAW_BACKGROUND_VERT) ) ||
-	( (nType == CTRL_SCROLLBAR)   && (nPart == HAS_THREE_BUTTONS) ); // TODO small optimization is possible here: return this only if the style really has 3 buttons
+	( (nType == CTRL_SCROLLBAR)   && (nPart == HAS_THREE_BUTTONS) ) || // TODO small optimization is possible here: return this only if the style really has 3 buttons
 	// CTRL_GROUPBOX not supported
 	// CTRL_FIXEDLINE not supported
 	// CTRL_FIXEDBORDER not supported
+        ( (nType == CTRL_TOOLBAR)     && (nPart == PART_ENTIRE_CONTROL ||
+                                          nPart == PART_DRAW_BACKGROUND_HORZ || nPart == PART_DRAW_BACKGROUND_VERT ||
+                                          nPart == PART_THUMB_HORZ || nPart == PART_THUMB_VERT ||
+                                          nPart == PART_BUTTON) ) ||
+        ( (nType == CTRL_MENUBAR)     && (nPart == PART_ENTIRE_CONTROL || nPart == PART_MENU_ITEM) ) ||
+        ( (nType == CTRL_MENU_POPUP)  && (nPart == PART_ENTIRE_CONTROL || nPart == PART_MENU_ITEM) );
 }
 
 
@@ -1202,6 +1444,34 @@ BOOL KDESalGraphics::drawNativeControl( 
 		nState, aValue,
 		dpy, drawable, gc );
     }
+    else if ( (nType == CTRL_TOOLBAR) && (nPart == PART_DRAW_BACKGROUND_HORZ || nPart == PART_DRAW_BACKGROUND_VERT || nPart == PART_THUMB_HORZ || nPart == PART_THUMB_VERT) )
+    {
+        bReturn = pWidgetPainter->drawStyledWidget(
+                pWidgetPainter->toolBar( rControlRegion, nPart == PART_DRAW_BACKGROUND_HORZ || nPart == PART_THUMB_VERT ),
+                nState, aValue,
+                dpy, drawable, gc, nPart );
+    }
+    else if ( (nType == CTRL_TOOLBAR) && (nPart == PART_BUTTON) )
+    {
+        bReturn = pWidgetPainter->drawStyledWidget(
+                pWidgetPainter->toolButton( rControlRegion ),
+                nState, aValue,
+                dpy, drawable, gc, nPart );
+    }
+    else if ( (nType == CTRL_MENUBAR) && (nPart == PART_ENTIRE_CONTROL || nPart == PART_MENU_ITEM) )
+    {
+        bReturn = pWidgetPainter->drawStyledWidget(
+                pWidgetPainter->menuBar( rControlRegion ),
+                nState, aValue,
+                dpy, drawable, gc, nPart );
+    }
+    else if ( (nType == CTRL_MENU_POPUP) && (nPart == PART_ENTIRE_CONTROL || nPart == PART_MENU_ITEM) )
+    {
+        bReturn = pWidgetPainter->drawStyledWidget(
+                pWidgetPainter->popupMenu( rControlRegion ),
+                nState, aValue,
+                dpy, drawable, gc );
+    }
 
     return bReturn;
 }
@@ -1578,10 +1848,7 @@ void KDESalFrame::UpdateSettings( AllSet
     aStyleSettings.SetGroupFont( aFont );
 
     // Menu
-    KMainWindow qMainWindow;
-    qMainWindow.createGUI( "/dev/null" ); // hack
-
-    KMenuBar *pMenuBar = qMainWindow.menuBar();
+    QMenuBar *pMenuBar = pWidgetPainter->menuBar( Region() );
     if ( pMenuBar )
     {
         // Color
@@ -1599,7 +1866,7 @@ void KDESalFrame::UpdateSettings( AllSet
     }
 
     // Tool bar
-    KToolBar *pToolBar = qMainWindow.toolBar();
+    QToolBar *pToolBar = pWidgetPainter->toolBar( Region(), true );
     if ( pToolBar )
     {
         Font aFont= aStyleSettings.GetToolFont();
@@ -1675,11 +1942,18 @@ KDESalInstance::CreateFrame( SalFrame *p
 
 void KDEData::initNWF()
 {
-	pWidgetPainter = new WidgetPainter();
+    ImplSVData *pSVData = ImplGetSVData();
+    // draw toolbars on separate lines
+    pSVData->maNWFData.mbDockingAreaSeparateTB = true;
+
+    pWidgetPainter = new WidgetPainter();
 }
 
 void KDEData::deInitNWF()
 {
-	delete pWidgetPainter;
-	pWidgetPainter = NULL;
+    delete pWidgetPainter;
+    pWidgetPainter = NULL;
+
+    // We have to destroy the style early
+    kapp->setStyle( NULL );
 }
