--- basctl/inc/basidesh.hxx	2007-01-24 18:24:39.000000000 +0100
+++ basctl/inc/basidesh.hxx	2007-02-19 18:12:19.000000000 +0100
@@ -200,7 +200,7 @@ public:
 	void				ExecuteBasic( SfxRequest& rReq );
 	void				ExecuteDialog( SfxRequest& rReq );
 
-	virtual	BOOL		HasUIFeature( ULONG nFeature );
+	virtual	sal_Bool	HasUIFeature( sal_uInt32 nFeature );
 
 	long				CallBasicErrorHdl( StarBASIC* pBasic );
 	long				CallBasicBreakHdl( StarBASIC* pBasic );
--- basctl/source/basicide/basides1.cxx	2007-01-02 16:49:14.000000000 +0100
+++ basctl/source/basicide/basides1.cxx	2007-02-19 18:12:44.000000000 +0100
@@ -1113,15 +1113,15 @@ void __EXPORT BasicIDEShell::GetState(Sf
 		pCurWin->GetState( rSet );
 }
 
-BOOL BasicIDEShell::HasUIFeature( ULONG nFeature )
+sal_Bool BasicIDEShell::HasUIFeature( sal_uInt32 nFeature )
 {
-    BOOL bResult = FALSE;
+    sal_Bool bResult = sal_False;
 
     if ( (nFeature & BASICIDE_UI_FEATURE_SHOW_BROWSER) == BASICIDE_UI_FEATURE_SHOW_BROWSER )
     {
         // fade out (in) property browser in module (dialog) windows
 	    if ( pCurWin && pCurWin->IsA( TYPE( DialogWindow ) ) && !pCurWin->IsReadOnly() )
-            bResult = TRUE;
+            bResult = sal_True;
     }
 
     return bResult;
--- binfilter/bf_sfx2/source/control/sfx2_shell.cxx	2006-10-27 21:10:22.000000000 +0200
+++ binfilter/bf_sfx2/source/control/sfx2_shell.cxx	2007-02-19 18:26:16.000000000 +0100
@@ -1383,9 +1383,9 @@ DBG_BF_ASSERT(0, "STRIP"); //STRIP001 	(
 /*N*/ 	return SFX_APP()->GetSlotPool( GetFrame() );
 /*N*/ }
 
-/*N*/ BOOL SfxShell::HasUIFeature( ULONG )
+/*N*/ sal_Bool SfxShell::HasUIFeature( sal_uInt32 )
 /*N*/ {
-/*N*/ 	return FALSE;
+/*N*/ 	return sal_False;
 /*N*/ }
 
 /*N*/ long DispatcherUpdate_Impl( void* pObj, void* pArg )
--- binfilter/bf_sch/source/ui/view/sch_viewshe4.cxx	2006-10-27 20:00:56.000000000 +0200
+++ binfilter/bf_sch/source/ui/view/sch_viewshe4.cxx	2007-02-19 18:27:49.000000000 +0100
@@ -442,28 +442,28 @@ namespace binfilter {
 
 
 
-/** Returns TRUE if the corresponding feature is available,
+/** Returns sal_True if the corresponding feature is available,
     eg it returns only true if the chart is three dimensional
     and the 3d effect flyer is to be displayed
 */
-/*N*/ BOOL SchViewShell::HasUIFeature( ULONG nFeature )
+/*N*/ sal_Bool SchViewShell::HasUIFeature( sal_uInt32 nFeature )
 /*N*/ {
 /*N*/     switch( nFeature )
 /*N*/     {
 /*N*/         case SCH_UI_FEATURE_THREE_D:
 /*N*/             if( pDocSh )
 /*N*/                 return pDocSh->GetDoc().IsReal3D();
-/*?*/             return FALSE;
+/*?*/             return sal_False;
 /*N*/ 
 /*N*/         case SCH_UI_FEATURE_OWN_DATA:
 /*N*/             // ToDo: If chart is inside Calc/Writer using external data, FALSE
 /*N*/             // should be returned. It currently works in a different way (hack)
-/*N*/             return TRUE;
+/*N*/             return sal_True;
 /*N*/ 
 /*?*/         default:
 /*?*/             DBG_ERRORFILE( "Unknown UI Feature requested!" );
-/*?*/             return FALSE;
 /*N*/     }
+/*?*/     return sal_False;
 /*N*/ }
 
 
--- binfilter/bf_sw/source/ui/inc/view.hxx	2006-10-28 03:00:02.000000000 +0200
+++ binfilter/bf_sw/source/ui/inc/view.hxx	2007-02-19 18:31:21.000000000 +0100
@@ -365,7 +365,7 @@ public:
 
 	SfxDispatcher 	&GetDispatcher();
 
-	virtual	BOOL			HasUIFeature( sal_uInt32 nFeature );
+	virtual	sal_Bool		HasUIFeature( sal_uInt32 nFeature );
 	virtual	void			ShowCursor( FASTBOOL bOn = TRUE );
 
 	ShellModes				GetShellMode();
--- binfilter/inc/bf_sfx2/shell.hxx	2006-10-28 05:09:03.000000000 +0200
+++ binfilter/inc/bf_sfx2/shell.hxx	2007-02-19 18:23:50.000000000 +0100
@@ -235,7 +235,7 @@ public:
 	SfxDispatcher*				GetDispatcher() const;
 	SfxViewFrame*				GetFrame() const;
 	ResMgr* 					GetResMgr() const;
-	virtual	BOOL				HasUIFeature( ULONG nFeature );
+	virtual	sal_Bool			HasUIFeature( sal_uInt32 nFeature );
 	void						UIFeatureChanged();
 
 	// Items
--- binfilter/inc/bf_sch/viewshel.hxx	2006-10-28 04:50:58.000000000 +0200
+++ binfilter/inc/bf_sch/viewshel.hxx	2007-02-19 18:23:41.000000000 +0100
@@ -174,7 +174,7 @@ public:
 	
 	// drag and drop
 	
-	virtual	BOOL HasUIFeature( ULONG nFeature );
+	virtual	sal_Bool HasUIFeature( sal_uInt32 nFeature );
 
     // SfxListener
 	virtual void		Notify( SfxBroadcaster& rBC, const SfxHint& rHint );
--- sfx2/inc/objface.hxx	2006-10-12 17:44:51.000000000 +0200
+++ sfx2/inc/objface.hxx	2007-02-19 17:48:55.000000000 +0100
@@ -107,19 +107,19 @@ public:
 	const SfxInterface*		GetRealInterfaceForSlot( const SfxSlot* ) const;
 
 	void					RegisterObjectBar( USHORT, const ResId&, const String* pST=0 );
-	void					RegisterObjectBar( USHORT, const ResId&, ULONG nFeature, const String* pST=0 );
+	void					RegisterObjectBar( USHORT, const ResId&, sal_uInt32 nFeature, const String* pST=0 );
 	void					RegisterChildWindow( USHORT, BOOL bContext, const String* pST=0 );
-	void					RegisterChildWindow( USHORT, BOOL bContext, ULONG nFeature, const String* pST=0 );
+	void					RegisterChildWindow( USHORT, BOOL bContext, sal_uInt32 nFeature, const String* pST=0 );
 	void					RegisterStatusBar( const ResId& );
 	const ResId&			GetObjectBarResId( USHORT nNo ) const;
 	USHORT                  GetObjectBarPos( USHORT nNo ) const;
-	ULONG                   GetObjectBarFeature( USHORT nNo ) const;
+	sal_uInt32              GetObjectBarFeature( USHORT nNo ) const;
 	USHORT					GetObjectBarCount() const;
 	void                    SetObjectBarPos( USHORT nPos, USHORT nId );
 	const String*           GetObjectBarName( USHORT nNo ) const;
 	BOOL					IsObjectBarVisible( USHORT nNo) const;
-	ULONG					GetChildWindowFeature( USHORT nNo ) const;
-	ULONG					GetChildWindowId( USHORT nNo ) const;
+	sal_uInt32				GetChildWindowFeature( USHORT nNo ) const;
+	sal_uInt32				GetChildWindowId( USHORT nNo ) const;
 	USHORT					GetChildWindowCount() const;
 	void					RegisterPopupMenu( const ResId& );
 	const ResId&			GetPopupMenuResId() const;
@@ -164,7 +164,7 @@ public:
                     SfxIFConfig_Impl();
 			        ~SfxIFConfig_Impl();
 	BOOL    		Store(SvStream&);
-    void            RegisterObjectBar( USHORT, const ResId&, ULONG nFeature, const String* pST=0 );
+    void            RegisterObjectBar( USHORT, const ResId&, sal_uInt32 nFeature, const String* pST=0 );
     USHORT          GetType();
 };
 #endif
--- sfx2/inc/shell.hxx	2006-06-20 00:04:31.000000000 +0200
+++ sfx2/inc/shell.hxx	2007-02-19 18:34:07.000000000 +0100
@@ -255,7 +255,7 @@ public:
 	SfxDispatcher*				GetDispatcher() const;
 	SfxViewFrame*				GetFrame() const;
 	ResMgr* 					GetResMgr() const;
-	virtual	BOOL				HasUIFeature( ULONG nFeature );
+	virtual	sal_Bool			HasUIFeature( sal_uInt32 nFeature );
 	void						UIFeatureChanged();
 
 	// Items
--- sfx2/source/appl/workwin.cxx	2007-02-16 15:29:45.000000000 +0100
+++ sfx2/source/appl/workwin.cxx	2007-02-19 12:23:40.000000000 +0100
@@ -2142,7 +2142,7 @@ void SfxWorkWindow::ConfigChild_Impl(Sfx
 
 //--------------------------------------------------------------------
 
-void SfxWorkWindow::SetChildWindowVisible_Impl( ULONG lId, BOOL bEnabled, USHORT nMode )
+void SfxWorkWindow::SetChildWindowVisible_Impl( sal_uInt32 lId, BOOL bEnabled, USHORT nMode )
 {
 	USHORT nInter = (USHORT) ( lId >> 16 );
 	USHORT nId = (USHORT) ( lId & 0xFFFF );
--- sfx2/source/control/dispatch.cxx	2006-11-01 19:26:15.000000000 +0100
+++ sfx2/source/control/dispatch.cxx	2007-02-19 17:12:02.000000000 +0100
@@ -1829,7 +1829,7 @@ long SfxDispatcher::Update_Impl( sal_Boo
 
 sal_uInt32 SfxDispatcher::_Update_Impl( sal_Bool bUIActive, sal_Bool bIsMDIApp, sal_Bool bIsIPOwner, SfxWorkWindow *pTaskWin )
 {
-	sal_uInt32 nHelpId = 0L;
+	sal_uInt32 nHelpId = 0;
 	SFX_APP();
     SfxWorkWindow *pWorkWin = pImp->pFrame->GetFrame()->GetWorkWindow_Impl();
 	sal_Bool bIsActive = sal_False;
--- sfx2/source/control/objface.cxx	2006-10-12 17:51:28.000000000 +0200
+++ sfx2/source/control/objface.cxx	2007-02-19 17:51:36.000000000 +0100
@@ -88,9 +88,9 @@ struct SfxObjectUI_Impl
 	BOOL	bVisible;
 	BOOL	bContext;
 	String* pName;
-	ULONG	nFeature;
+	sal_uInt32	nFeature;
 
-	SfxObjectUI_Impl(USHORT n, const ResId& rResId, BOOL bVis, ULONG nFeat) :
+	SfxObjectUI_Impl(USHORT n, const ResId& rResId, BOOL bVis, sal_uInt32 nFeat) :
 		nPos(n),
 		aResId(rResId.GetId(), rResId.GetResMgr()),
 		bVisible(bVis),
@@ -140,7 +140,7 @@ struct SfxInterface_Impl
 	}
 };
 
-static SfxObjectUI_Impl* CreateObjectBarUI_Impl( USHORT nPos, const ResId& rResId, ULONG nFeature, const String *pStr );
+static SfxObjectUI_Impl* CreateObjectBarUI_Impl( USHORT nPos, const ResId& rResId, sal_uInt32 nFeature, const String *pStr );
 
 //====================================================================
 
@@ -432,14 +432,14 @@ void SfxInterface::RegisterObjectBar( US
 }
 
 
-void SfxInterface::RegisterObjectBar( USHORT nPos, const ResId& rResId, ULONG nFeature, const String *pStr )
+void SfxInterface::RegisterObjectBar( USHORT nPos, const ResId& rResId, sal_uInt32 nFeature, const String *pStr )
 {
     SfxObjectUI_Impl* pUI = CreateObjectBarUI_Impl( nPos, rResId, nFeature, pStr );
     if ( pUI )
         pImpData->pObjectBars->Append(pUI);
 }
 
-SfxObjectUI_Impl* CreateObjectBarUI_Impl( USHORT nPos, const ResId& rResId, ULONG nFeature, const String *pStr )
+SfxObjectUI_Impl* CreateObjectBarUI_Impl( USHORT nPos, const ResId& rResId, sal_uInt32 nFeature, const String *pStr )
 {
 	if ((nPos & SFX_VISIBILITY_MASK) == 0)
         nPos |= SFX_VISIBILITY_STANDARD;
@@ -524,7 +524,7 @@ void SfxInterface::RegisterChildWindow(U
 	RegisterChildWindow( nId, bContext, 0UL, pChildWinName );
 }
 
-void SfxInterface::RegisterChildWindow(USHORT nId, BOOL bContext, ULONG nFeature, const String*)
+void SfxInterface::RegisterChildWindow(USHORT nId, BOOL bContext, sal_uInt32 nFeature, const String*)
 {
 	SfxObjectUI_Impl* pUI = new SfxObjectUI_Impl(0, nId, TRUE, nFeature);
 	pUI->bContext = bContext;
@@ -537,7 +537,7 @@ void SfxInterface::RegisterStatusBar(con
 }
 
 
-ULONG SfxInterface::GetChildWindowId (USHORT nNo) const
+sal_uInt32 SfxInterface::GetChildWindowId (USHORT nNo) const
 {
 	if ( pGenoType )
 	{
@@ -554,13 +554,13 @@ ULONG SfxInterface::GetChildWindowId (US
 	USHORT nCWCount = pImpData->pChildWindows->Count();
 	DBG_ASSERT( nNo<nCWCount,"ChildWindow ist unbekannt!" );
 #endif
-	ULONG nRet = (ULONG) (*pImpData->pChildWindows)[nNo]->aResId.GetId();
+	sal_uInt32 nRet = (*pImpData->pChildWindows)[nNo]->aResId.GetId();
 	if ( (*pImpData->pChildWindows)[nNo]->bContext )
-		nRet += ( (ULONG) nClassId ) << 16;
+		nRet += sal_uInt32( nClassId ) << 16;
 	return nRet;
 }
 
-ULONG SfxInterface::GetChildWindowFeature (USHORT nNo) const
+sal_uInt32 SfxInterface::GetChildWindowFeature (USHORT nNo) const
 {
 	if ( pGenoType )
 	{
@@ -577,8 +577,7 @@ ULONG SfxInterface::GetChildWindowFeatur
 	USHORT nCWCount = pImpData->pChildWindows->Count();
 	DBG_ASSERT( nNo<nCWCount,"ChildWindow ist unbekannt!" );
 #endif
-	ULONG nRet = (ULONG) (*pImpData->pChildWindows)[nNo]->nFeature;
-	return nRet;
+	return (*pImpData->pChildWindows)[nNo]->nFeature;
 }
 
 //--------------------------------------------------------------------
@@ -630,7 +629,7 @@ const String* SfxInterface::GetObjectBar
 	return (*pImpData->pObjectBars)[nNo]->pName;
 }
 
-ULONG SfxInterface::GetObjectBarFeature ( USHORT nNo ) const
+sal_uInt32 SfxInterface::GetObjectBarFeature ( USHORT nNo ) const
 {
 	BOOL bGenoType = (pGenoType != 0 && !pGenoType->HasName());
 	if ( bGenoType )
--- sfx2/source/control/shell.cxx	2006-10-12 17:51:54.000000000 +0200
+++ sfx2/source/control/shell.cxx	2007-02-19 18:14:36.000000000 +0100
@@ -1293,9 +1294,9 @@ SfxObjectShell* SfxShell::GetObjectShell
 
 //--------------------------------------------------------------------
 
-BOOL SfxShell::HasUIFeature( ULONG )
+sal_Bool SfxShell::HasUIFeature( sal_uInt32 )
 {
-	return FALSE;
+	return sal_False;
 }
 
 long DispatcherUpdate_Impl( void*, void* pArg )
--- sfx2/source/inc/workwin.hxx	2007-02-16 15:29:39.000000000 +0100
+++ sfx2/source/inc/workwin.hxx	2007-02-16 15:30:39.000000000 +0100
@@ -171,7 +171,7 @@ struct SfxChildWin_Impl
 	BOOL							bEnable;
 	BOOL							bDisabled;
 
-	SfxChildWin_Impl( ULONG nID ) :
+	SfxChildWin_Impl( sal_uInt32 nID ) :
 		nSaveId((USHORT) (nID & 0xFFFF) ),
 		nInterfaceId((USHORT) (nID >> 16)),
 		nId(nSaveId),
@@ -375,7 +375,7 @@ public:
 	// Methoden f"ur ChildWindows
 	void            		UpdateChildWindows_Impl();
 	void					ResetChildWindows_Impl();
-	void					SetChildWindowVisible_Impl( ULONG, BOOL, USHORT );
+	void					SetChildWindowVisible_Impl( sal_uInt32, BOOL, USHORT );
     void                    ToggleChildWindow_Impl(USHORT,BOOL);
 	BOOL					HasChildWindow_Impl(USHORT);
 	BOOL					KnowsChildWindow_Impl(USHORT);
--- sch/inc/viewshel.hxx	2007-01-24 18:14:14.000000000 +0100
+++ sch/inc/viewshel.hxx	2007-02-19 18:22:46.000000000 +0100
@@ -199,7 +199,7 @@ public:
 	virtual sal_Int8 AcceptDrop( const AcceptDropEvent& rEvt, SchWindow* pWin );
 	virtual sal_Int8 ExecuteDrop( const ExecuteDropEvent& rEvt, SchWindow* pWin );
 	
-	virtual	BOOL HasUIFeature( ULONG nFeature );
+	virtual	sal_Bool HasUIFeature( sal_uInt32 nFeature );
 
     // SfxListener
 	virtual void		Notify( SfxBroadcaster& rBC, const SfxHint& rHint );
--- sch/source/ui/view/viewshe4.cxx	2007-01-24 18:14:41.000000000 +0100
+++ sch/source/ui/view/viewshe4.cxx	2007-02-19 18:23:17.000000000 +0100
@@ -673,24 +673,24 @@ USHORT SchViewShell::PrepareClose(BOOL b
     eg it returns only true if the chart is three dimensional
     and the 3d effect flyer is to be displayed
 */
-BOOL SchViewShell::HasUIFeature( ULONG nFeature )
+sal_Bool SchViewShell::HasUIFeature( sal_uInt32 nFeature )
 {
     switch( nFeature )
     {
         case SCH_UI_FEATURE_THREE_D:
             if( pDocSh )
                 return pDocSh->GetDoc().IsReal3D();
-            return FALSE;
+            return sal_False;
 
         case SCH_UI_FEATURE_OWN_DATA:
             // ToDo: If chart is inside Calc/Writer using external data, FALSE
             // should be returned. It currently works in a different way (hack)
-            return TRUE;
+            return sal_True;
 
         default:
             DBG_ERRORFILE( "Unknown UI Feature requested!" );
-            return FALSE;
     }
+    return sal_False;
 }
 
 void SchViewShell::AllowSelectionChangeBroadcasts( sal_Bool bAllow )
--- sw/source/ui/inc/view.hxx	2007-01-24 18:20:23.000000000 +0100
+++ sw/source/ui/inc/view.hxx	2007-02-19 18:35:01.000000000 +0100
@@ -435,7 +435,7 @@ public:
 
 	void                    GotFocus() const;
 	virtual SdrView*		GetDrawView() const;
-	virtual	BOOL			HasUIFeature( sal_uInt32 nFeature );
+	virtual	sal_Bool		HasUIFeature( sal_uInt32 nFeature );
 	virtual	void			ShowCursor( FASTBOOL bOn = TRUE );
 	virtual ErrCode			DoVerb( long nVerb );
 
