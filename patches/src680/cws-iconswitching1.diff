Index: officecfg/registry/data/org/openoffice/Setup.xcu
===================================================================
RCS file: /cvs/util/officecfg/registry/data/org/openoffice/Setup.xcu,v
retrieving revision 1.24
retrieving revision 1.22.20.3
diff -u -p -u -p -r1.24 -r1.22.20.3
--- officecfg/registry/data/org/openoffice/Setup.xcu	11 Nov 2005 08:56:33 -0000	1.24
+++ officecfg/registry/data/org/openoffice/Setup.xcu	30 Nov 2005 13:14:49 -0000	1.22.20.3
@@ -614,6 +614,7 @@
                         org.openoffice.Office.Common/Misc/SymbolSet
                         org.openoffice.Office.Common/Misc/UseSystemFileDialog
                         org.openoffice.Office.Common/Misc/UseSystemFileDialog
+                        org.openoffice.Office.Common/Misc/SymbolsStyle
                         org.openoffice.Office.Common/OfficeObjects
                         org.openoffice.Office.Common/Passwords
                         org.openoffice.Office.Common/Print/PrintingModifiesDocument
Index: officecfg/registry/schema/org/openoffice/Office/Common.xcs
===================================================================
RCS file: /cvs/util/officecfg/registry/schema/org/openoffice/Office/Common.xcs,v
retrieving revision 1.110
retrieving revision 1.107.122.5
diff -u -p -u -p -r1.110 -r1.107.122.5
--- officecfg/registry/schema/org/openoffice/Office/Common.xcs	16 Nov 2005 09:17:02 -0000	1.110
+++ officecfg/registry/schema/org/openoffice/Office/Common.xcs	30 Nov 2005 13:19:59 -0000	1.107.122.5
@@ -4907,7 +4907,7 @@ Dymamic border coloring means that when 
 				<!-- UIHints: Tools  Options General View -->
 				<info>
 					<author>MBA</author>
-					<desc>Specifies which symbol set is used for the toolbars.</desc>
+					<desc>Specifies which size of the symbols is used for the toolbars.</desc>
 				</info>
 				<constraints>
 					<enumeration oor:value="0">
@@ -4922,6 +4922,41 @@ Dymamic border coloring means that when 
 					</enumeration>
 				</constraints>
 				<value>0</value>
+			</prop>
+			<prop oor:name="SymbolsStyle" oor:type="xs:string">
+				<!-- UIHints: Tools  Options General View -->
+				<info>
+					<author>kendy</author>
+					<desc>Specifies which style of the symbols is used for the toolbars, menus, etc.</desc>
+				</info>
+				<constraints>
+					<enumeration oor:value="auto">
+						<info>
+							<desc>Automatic, chosen according to the desktop</desc>
+						</info>
+					</enumeration>
+					<enumeration oor:value="default">
+						<info>
+							<desc>Default - the OpenOffice.org default theme</desc>
+						</info>
+					</enumeration>
+					<enumeration oor:value="hicontrast">
+						<info>
+							<desc>HiContrast</desc>
+						</info>
+					</enumeration>
+					<enumeration oor:value="industrial">
+						<info>
+							<desc>Industrial - the Gnome default theme</desc>
+						</info>
+					</enumeration>
+					<!--enumeration oor:value="crystal">
+						<info>
+							<desc>Crystal - the KDE default theme</desc>
+						</info>
+					</enumeration-->
+				</constraints>
+				<value>auto</value>
 			</prop>
 			<prop oor:name="ToolboxStyle" oor:type="xs:short">
 				<!-- UIHints: Tools  Options General View -->
Index: ooo_custom_images/README.txt
===================================================================
RCS file: ooo_custom_images/README.txt
diff -N ooo_custom_images/README.txt
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ ooo_custom_images/README.txt	22 Jul 2005 13:06:19 -0000	1.1.2.3
@@ -0,0 +1,172 @@
+How to add a new image set:
+---------------------------
+
+- Create a directory for it here (let's call it e.g. new_set)
+
+- Add it to CUSTOM_IMAGE_SETS in solenv/inc/settings.mk
+  (e.g. CUSTOM_IMAGE_SETS=hicontrast industrial crystal new_set
+
+- Add a SfxSymbolsStyle constant for it in svtools/inc/imgdef.hxx, e.g.
+  SFX_SYMBOLS_STYLE_NEW_SET
+
+- Add a vcl constant for it in vcl/inc/settings.hxx, e.g.
+  #define STYLE_SYMBOLS_NEW_SET ((ULONG)5)
+
+- Map the vcl constant to its real name in
+    ::rtl::OUString StyleSettings::GetCurrentSymbolsStyleName() const
+  in vcl/source/app/settings.cxx, e.g.
+    case STYLE_SYMBOLS_NEW_SET: return ::rtl::OUString::createFromAscii( "new_set" );
+
+- Enhance the SFX_SYMBOLS_STYLE <-> STYLE_SYMBOLS converting functions
+    static sal_Int16 implSymbolsStyleFromVCL( ULONG nStyle )
+  and
+    static ULONG implSymbolsStyleToVCL( sal_Int16 nStyle )
+  in svtools/source/config/miscopt.cxx.
+
+- Add SFX_SYMBOLS_STYLE constant to 'switch( nStyleLB_NewSelection )' in 
+    BOOL OfaViewTabPage::FillItemSet( SfxItemSet& rSet )
+  and to 'switch ( aMiscOptions.GetCurrentSymbolsStyle() )' in
+    void OfaViewTabPage::Reset( const SfxItemSet& rSet )
+  both in svx/source/dialog/optgdlg.cxx. 
+
+- Add the new_set to 'SymbolsStyle' property
+  in officecfg/registry/schema/org/openoffice/Office/Common.xcs.
+
+NOTE: The Crystal icon set is currently disabled, but reserved to be no. 4; it
+cannot be committed to the OOo CVS at the moment.
+Some Linux distros enable it and use ooo_crystal_images-*.tar.bz2 from
+http://www.go-oo.org/packages/SRC680/ , here is the patch:
+
+--- officecfg/registry/schema/org/openoffice/Office/Common.xcs	2005-07-21 19:25:53.000000000 +0200
++++ officecfg/registry/schema/org/openoffice/Office/Common.xcs	2005-07-21 19:49:08.000000000 +0200
+@@ -4949,11 +4949,11 @@ Dymamic border coloring means that when 
+ 							<desc>Industrial</desc>
+ 						</info>
+ 					</enumeration>
+-					<!--enumeration oor:value="4">
++					<enumeration oor:value="4">
+ 						<info>
+ 							<desc>Crystal</desc>
+ 						</info>
+-					</enumeration-->
++					</enumeration>
+ 				</constraints>
+ 				<value>0</value>
+ 			</prop>
+--- solenv/inc/settings.mk	2005-07-21 17:47:34.000000000 +0200
++++ solenv/inc/settings.mk	2005-07-21 20:11:52.000000000 +0200
+@@ -1111,7 +1111,7 @@ RSCDEFS+= -DDEBUG
+ .ENDIF
+ 
+ # additional image sets
+-CUSTOM_IMAGE_SETS=hicontrast industrial
++CUSTOM_IMAGE_SETS=hicontrast industrial crystal
+ 
+ UNOIDL=unoidl
+ 
+--- svtools/inc/imgdef.hxx	2005-07-21 19:38:26.000000000 +0200
++++ svtools/inc/imgdef.hxx	2005-07-20 16:04:06.000000000 +0200
+@@ -74,8 +74,8 @@ enum SfxSymbolsStyle
+     SFX_SYMBOLS_STYLE_AUTO,
+     SFX_SYMBOLS_STYLE_DEFAULT,
+     SFX_SYMBOLS_STYLE_HICONTRAST,
+-    SFX_SYMBOLS_STYLE_INDUSTRIAL
+-//    SFX_SYMBOLS_STYLE_CRYSTAL
++    SFX_SYMBOLS_STYLE_INDUSTRIAL,
++    SFX_SYMBOLS_STYLE_CRYSTAL
+ };
+ 
+ #define SFX_TOOLBOX_CHANGESYMBOLSET		0x0001
+--- svtools/source/config/miscopt.cxx	2005-07-21 19:39:08.000000000 +0200
++++ svtools/source/config/miscopt.cxx	2005-07-20 16:23:18.000000000 +0200
+@@ -282,7 +282,7 @@ static sal_Int16 implSymbolsStyleFromVCL
+ 		case STYLE_SYMBOLS_DEFAULT:    return SFX_SYMBOLS_STYLE_DEFAULT;
+ 		case STYLE_SYMBOLS_HICONTRAST: return SFX_SYMBOLS_STYLE_HICONTRAST;
+ 		case STYLE_SYMBOLS_INDUSTRIAL: return SFX_SYMBOLS_STYLE_INDUSTRIAL;
+-//		case STYLE_SYMBOLS_CRYSTAL:    return SFX_SYMBOLS_STYLE_CRYSTAL;
++		case STYLE_SYMBOLS_CRYSTAL:    return SFX_SYMBOLS_STYLE_CRYSTAL;
+ 	}
+ 
+ 	return SFX_SYMBOLS_STYLE_AUTO;
+@@ -296,7 +296,7 @@ static ULONG implSymbolsStyleToVCL( sal_
+ 		case SFX_SYMBOLS_STYLE_DEFAULT:    return STYLE_SYMBOLS_DEFAULT;
+ 		case SFX_SYMBOLS_STYLE_HICONTRAST: return STYLE_SYMBOLS_HICONTRAST;
+ 		case SFX_SYMBOLS_STYLE_INDUSTRIAL: return STYLE_SYMBOLS_INDUSTRIAL;
+-//		case SFX_SYMBOLS_STYLE_CRYSTAL:    return STYLE_SYMBOLS_CRYSTAL;
++		case SFX_SYMBOLS_STYLE_CRYSTAL:    return STYLE_SYMBOLS_CRYSTAL;
+ 	}
+ 
+ 	return STYLE_SYMBOLS_AUTO;
+--- svx/source/dialog/optgdlg.cxx	2005-07-21 19:34:37.000000000 +0200
++++ svx/source/dialog/optgdlg.cxx	2005-07-20 16:13:44.000000000 +0200
+@@ -853,7 +853,7 @@ BOOL OfaViewTabPage::FillItemSet( SfxIte
+             case 1: eSet = SFX_SYMBOLS_STYLE_DEFAULT;    break;
+             case 2: eSet = SFX_SYMBOLS_STYLE_HICONTRAST; break;
+             case 3: eSet = SFX_SYMBOLS_STYLE_INDUSTRIAL; break;
+-//            case 4: eSet = SFX_SYMBOLS_STYLE_CRYSTAL;    break;
++            case 4: eSet = SFX_SYMBOLS_STYLE_CRYSTAL;    break;
+             default:
+                 DBG_ERROR( "OfaViewTabPage::FillItemSet(): This state of aIconStyleLB should not be possible!" );
+         }
+@@ -1040,7 +1040,7 @@ void OfaViewTabPage::Reset( const SfxIte
+             case SFX_SYMBOLS_STYLE_DEFAULT:    nStyleLB_InitialSelection = 1; break;
+             case SFX_SYMBOLS_STYLE_HICONTRAST: nStyleLB_InitialSelection = 2; break;
+             case SFX_SYMBOLS_STYLE_INDUSTRIAL: nStyleLB_InitialSelection = 3; break;
+-//            case SFX_SYMBOLS_STYLE_CRYSTAL:    nStyleLB_InitialSelection = 4; break;
++            case SFX_SYMBOLS_STYLE_CRYSTAL:    nStyleLB_InitialSelection = 4; break;
+             default:                           nStyleLB_InitialSelection = 0; break;
+         }
+     }
+--- svx/source/dialog/optgdlg.src	2005-07-21 19:35:26.000000000 +0200
++++ svx/source/dialog/optgdlg.src	2005-07-20 16:13:46.000000000 +0200
+@@ -289,7 +289,7 @@ TabPage OFA_TP_VIEW
+             < "Standard" ; > ;
+             < "HiContrast" ; > ;
+             < "Industrial" ; > ;
+-//            < "Crystal" ; > ;
++            < "Crystal" ; > ;
+         };
+         StringList [ en-US ] =
+         {
+@@ -297,7 +297,7 @@ TabPage OFA_TP_VIEW
+             < "Default" ; > ;
+             < "HiContrast" ; > ;
+             < "Industrial" ; > ;
+-//            < "Crystal" ; > ;
++            < "Crystal" ; > ;
+         };
+     };
+ 	CheckBox CB_SYSTEM_FONT
+--- vcl/inc/settings.hxx	2005-07-21 19:36:18.000000000 +0200
++++ vcl/inc/settings.hxx	2005-07-20 16:04:07.000000000 +0200
+@@ -548,7 +548,7 @@ private:
+ #define STYLE_SYMBOLS_DEFAULT		((ULONG)1)
+ #define STYLE_SYMBOLS_HICONTRAST	((ULONG)2)
+ #define STYLE_SYMBOLS_INDUSTRIAL	((ULONG)3)
+-//#define STYLE_SYMBOLS_CRYSTAL		((ULONG)4)
++#define STYLE_SYMBOLS_CRYSTAL		((ULONG)4)
+ 
+ #define STYLE_CURSOR_NOBLINKTIME    ((ULONG)0xFFFFFFFF)
+ 
+--- vcl/source/app/settings.cxx	2005-07-21 19:37:27.000000000 +0200
++++ vcl/source/app/settings.cxx	2005-07-20 16:04:08.000000000 +0200
+@@ -755,8 +755,8 @@ ULONG StyleSettings::GetCurrentSymbolsSt
+ 
+ 			if( rDesktopEnvironment.equalsIgnoreAsciiCaseAscii( "gnome" ) )
+ 				snDesktopStyle = STYLE_SYMBOLS_INDUSTRIAL;
+-//			else if( rDesktopEnvironment.equalsIgnoreAsciiCaseAscii( "kde" ) )
+-//				snDesktopStyle = STYLE_SYMBOLS_CRYSTAL;
++			else if( rDesktopEnvironment.equalsIgnoreAsciiCaseAscii( "kde" ) )
++				snDesktopStyle = STYLE_SYMBOLS_CRYSTAL;
+ 
+ 			sbDesktopChecked = true;
+ 		}
+@@ -775,7 +775,7 @@ ULONG StyleSettings::GetCurrentSymbolsSt
+ 	{
+ 		case STYLE_SYMBOLS_HICONTRAST: return ::rtl::OUString::createFromAscii( "hicontrast" );
+ 		case STYLE_SYMBOLS_INDUSTRIAL: return ::rtl::OUString::createFromAscii( "industrial" );
+-//		case STYLE_SYMBOLS_CRYSTAL:    return ::rtl::OUString::createFromAscii( "crystal" );
++		case STYLE_SYMBOLS_CRYSTAL:    return ::rtl::OUString::createFromAscii( "crystal" );
+ 	}
+ 
+ 	return ::rtl::OUString();
Index: svx/source/dialog/cfg.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/dialog/cfg.cxx,v
retrieving revision 1.24
retrieving revision 1.22.32.3
diff -u -p -u -p -r1.24 -r1.22.32.3
--- svx/source/dialog/cfg.cxx	3 Nov 2005 11:53:21 -0000	1.24
+++ svx/source/dialog/cfg.cxx	30 Nov 2005 13:28:38 -0000	1.22.32.3
@@ -424,22 +424,7 @@ void InitImageType()
 		css::ui::ImageType::COLOR_NORMAL |
 		css::ui::ImageType::SIZE_DEFAULT;
 
-    sal_Int16 eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-    {
-        // Use system settings, we have to retrieve the toolbar icon size
-		// from the Application class
-        ULONG nStyleIconSize =
-			Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    if ( eOptSymbolSet != SFX_SYMBOLS_SMALL )
+    if ( SvtMiscOptions().AreCurrentSymbolsLarge() )
 	{
         theImageType |= css::ui::ImageType::SIZE_LARGE;
 	}
Index: svx/source/dialog/optgdlg.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/dialog/optgdlg.cxx,v
retrieving revision 1.27
retrieving revision 1.23.180.5
diff -u -p -u -p -r1.27 -r1.23.180.5
--- svx/source/dialog/optgdlg.cxx	16 Nov 2005 10:03:21 -0000	1.27
+++ svx/source/dialog/optgdlg.cxx	30 Nov 2005 13:33:35 -0000	1.23.180.5
@@ -680,8 +680,9 @@ OfaViewTabPage::OfaViewTabPage(Window* p
     aUserInterfaceFL    ( this, ResId( FL_USERINTERFACE ) ),
     aWindowSizeFT       ( this, ResId( FT_WINDOWSIZE ) ),
     aWindowSizeMF       ( this, ResId( MF_WINDOWSIZE ) ),
-    aIconSizeFT              ( this, ResId( FT_ICONSIZE ) ),
+    aIconSizeStyleFT    ( this, ResId( FT_ICONSIZESTYLE ) ),
     aIconSizeLB              ( this, ResId( LB_ICONSIZE ) ),
+    aIconStyleLB        ( this, ResId( LB_ICONSTYLE ) ),
     m_aSystemFont				(this, ResId( CB_SYSTEM_FONT ) ),
 #if defined( UNX )
 	aFontAntiAliasing	( this, ResId( CB_FONTANTIALIASING )),
@@ -827,20 +828,37 @@ BOOL OfaViewTabPage::FillItemSet( SfxIte
 	BOOL bMenuOptModified = FALSE;
 
     SvtMiscOptions aMiscOptions;
-    UINT16 nBigLB_NewSelection = aIconSizeLB.GetSelectEntryPos();
-	if( nBigLB_InitialSelection != nBigLB_NewSelection )
+    UINT16 nSizeLB_NewSelection = aIconSizeLB.GetSelectEntryPos();
+    if( nSizeLB_InitialSelection != nSizeLB_NewSelection )
 	{
 		// from now on it's modified, even if via auto setting the same size was set as now selected in the LB
-        sal_Int16 eSet = SFX_SYMBOLS_AUTO;
-        switch( nBigLB_NewSelection )
+        sal_Int16 eSet = SFX_SYMBOLS_SIZE_AUTO;
+        switch( nSizeLB_NewSelection )
 		{
-            case 0: eSet = SFX_SYMBOLS_AUTO;  break;
-            case 1: eSet = SFX_SYMBOLS_SMALL; break;
-            case 2: eSet = SFX_SYMBOLS_LARGE; break;
+            case 0: eSet = SFX_SYMBOLS_SIZE_AUTO;  break;
+            case 1: eSet = SFX_SYMBOLS_SIZE_SMALL; break;
+            case 2: eSet = SFX_SYMBOLS_SIZE_LARGE; break;
             default:
-				DBG_ERROR( "OfaViewTabPage::FillItemSet(): This state should not be possible!" );
+                DBG_ERROR( "OfaViewTabPage::FillItemSet(): This state of aIconSizeLB should not be possible!" );
 		}
-        aMiscOptions.SetSymbolSet( eSet );
+        aMiscOptions.SetSymbolsSize( eSet );
+    }
+
+    UINT16 nStyleLB_NewSelection = aIconStyleLB.GetSelectEntryPos();
+    if( nStyleLB_InitialSelection != nStyleLB_NewSelection )
+    {
+        sal_Int16 eSet = SFX_SYMBOLS_STYLE_AUTO;
+        switch( nStyleLB_NewSelection )
+        {
+            case 0: eSet = SFX_SYMBOLS_STYLE_AUTO;       break;
+            case 1: eSet = SFX_SYMBOLS_STYLE_DEFAULT;    break;
+            case 2: eSet = SFX_SYMBOLS_STYLE_HICONTRAST; break;
+            case 3: eSet = SFX_SYMBOLS_STYLE_INDUSTRIAL; break;
+//            case 4: eSet = SFX_SYMBOLS_STYLE_CRYSTAL;    break;
+            default:
+                DBG_ERROR( "OfaViewTabPage::FillItemSet(): This state of aIconStyleLB should not be possible!" );
+        }
+        aMiscOptions.SetSymbolsStyle( eSet );
     }
 
     BOOL bAppearanceChanged = FALSE;
@@ -999,24 +1017,6 @@ BOOL OfaViewTabPage::FillItemSet( SfxIte
 /*-----------------06.12.96 11.50-------------------
 
 --------------------------------------------------*/
-static sal_Int16 GetCurrentSymbolSet()
-{
-    sal_Int16   eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    return eOptSymbolSet;
-}
-
 void OfaViewTabPage::Reset( const SfxItemSet& rSet )
 {
 
@@ -1029,10 +1029,24 @@ void OfaViewTabPage::Reset( const SfxIte
 
     SvtMiscOptions aMiscOptions;
 
-    if( aMiscOptions.GetSymbolSet() != SFX_SYMBOLS_AUTO )
-        nBigLB_InitialSelection = ( GetCurrentSymbolSet() == SFX_SYMBOLS_LARGE )? 2 : 1;
-    aIconSizeLB.SelectEntryPos( nBigLB_InitialSelection );
+    if( aMiscOptions.GetSymbolsSize() != SFX_SYMBOLS_SIZE_AUTO )
+        nSizeLB_InitialSelection = ( aMiscOptions.AreCurrentSymbolsLarge() )? 2 : 1;
+    aIconSizeLB.SelectEntryPos( nSizeLB_InitialSelection );
     aIconSizeLB.SaveValue();
+
+    if( aMiscOptions.GetSymbolsStyle() != SFX_SYMBOLS_STYLE_AUTO )
+    {
+        switch ( aMiscOptions.GetCurrentSymbolsStyle() )
+        {
+            case SFX_SYMBOLS_STYLE_DEFAULT:    nStyleLB_InitialSelection = 1; break;
+            case SFX_SYMBOLS_STYLE_HICONTRAST: nStyleLB_InitialSelection = 2; break;
+            case SFX_SYMBOLS_STYLE_INDUSTRIAL: nStyleLB_InitialSelection = 3; break;
+//            case SFX_SYMBOLS_STYLE_CRYSTAL:    nStyleLB_InitialSelection = 4; break;
+            default:                           nStyleLB_InitialSelection = 0; break;
+        }
+    }
+    aIconStyleLB.SelectEntryPos( nStyleLB_InitialSelection );
+    aIconStyleLB.SaveValue();
 
     if( m_aSystemFont.IsEnabled() )
     {
Index: svx/source/dialog/optgdlg.hrc
===================================================================
RCS file: /cvs/graphics/svx/source/dialog/optgdlg.hrc,v
retrieving revision 1.16
retrieving revision 1.14.234.3
diff -u -p -u -p -r1.16 -r1.14.234.3
--- svx/source/dialog/optgdlg.hrc	11 Nov 2005 11:50:25 -0000	1.16
+++ svx/source/dialog/optgdlg.hrc	30 Nov 2005 13:33:46 -0000	1.14.234.3
@@ -70,9 +70,9 @@
 //#define OFFS_PUSHBUTTON_FIXEDTEXT(base)	(base+(RSC_CD_PUSHBUTTON_HEIGHT-RSC_CD_FIXEDTEXT_HEIGHT)/2)
 
 #define ROW_MF_SCALING          (13)
-#define ROW_FT_ICONSIZE         (ROW_MF_SCALING+RSC_CD_DROPDOWN_HEIGHT+ROWSPACE)
-#define ROW_LB_ICONSIZE         (ROW_FT_ICONSIZE+RSC_CD_FIXEDTEXT_HEIGHT+ROWSPACE)
-#define ROW_CB_SYSTEM_FONT      (ROW_LB_ICONSIZE+RSC_CD_DROPDOWN_HEIGHT+ROWSPACE)
+#define ROW_FT_ICONSIZESTYLE    (ROW_MF_SCALING+RSC_CD_DROPDOWN_HEIGHT+ROWSPACE)
+#define ROW_LB_ICONSIZESTYLE    (ROW_FT_ICONSIZESTYLE+RSC_CD_FIXEDTEXT_HEIGHT+ROWSPACE)
+#define ROW_CB_SYSTEM_FONT      (ROW_LB_ICONSIZESTYLE+RSC_CD_DROPDOWN_HEIGHT+ROWSPACE)
 #define ROW_CB_FONTANTIALIASING (ROW_CB_SYSTEM_FONT+ (2 * RSC_CD_DROPDOWN_HEIGHT) +ROWSPACE)
 #define ROW_NF_AA_POINTLIMIT	(ROW_CB_FONTANTIALIASING+RSC_CD_FIXEDLINE_HEIGHT+ROWSPACE)
 
@@ -132,8 +132,9 @@
 #define BTN_DOCVIEW					51
 #define BTN_OPENWIN					52
 #define LB_ICONSIZE					53
-#define FT_ICONSIZE					54
-#define CB_SYSTEM_FONT				55
+#define FT_ICONSIZESTYLE			54
+#define LB_ICONSTYLE				55
+#define CB_SYSTEM_FONT				56
 
 #define CB_FONT_SHOW				60
 #define CB_SHOW_INACTIVE			61
Index: svx/source/dialog/optgdlg.hxx
===================================================================
RCS file: /cvs/graphics/svx/source/dialog/optgdlg.hxx,v
retrieving revision 1.15
retrieving revision 1.13.270.3
diff -u -p -u -p -r1.15 -r1.13.270.3
--- svx/source/dialog/optgdlg.hxx	11 Nov 2005 11:50:38 -0000	1.15
+++ svx/source/dialog/optgdlg.hxx	30 Nov 2005 13:33:57 -0000	1.13.270.3
@@ -110,8 +110,9 @@ private:
     FixedLine       aUserInterfaceFL;
     FixedText       aWindowSizeFT;
     MetricField     aWindowSizeMF;
-    FixedText       aIconSizeFT;
+    FixedText       aIconSizeStyleFT;
     ListBox         aIconSizeLB;
+    ListBox         aIconStyleLB;
 	CheckBox   		m_aSystemFont;
 
 #if defined( UNX )
@@ -147,7 +148,8 @@ private:
 	FixedText		aMouseMiddleFT;
 	ListBox			aMouseMiddleLB;
 
-	UINT16			nBigLB_InitialSelection;
+	UINT16			nSizeLB_InitialSelection;
+	UINT16			nStyleLB_InitialSelection;
 	BOOL			bSfxSymbolsAuto;
 
     SvtTabAppearanceCfg* pAppearanceCfg;
Index: svx/source/dialog/optgdlg.src
===================================================================
RCS file: /cvs/graphics/svx/source/dialog/optgdlg.src,v
retrieving revision 1.19
retrieving revision 1.16.234.4
diff -u -p -u -p -r1.19 -r1.16.234.4
--- svx/source/dialog/optgdlg.src	11 Nov 2005 11:50:55 -0000	1.19
+++ svx/source/dialog/optgdlg.src	30 Nov 2005 13:34:06 -0000	1.16.234.4
@@ -229,17 +229,17 @@ TabPage OFA_TP_VIEW
 		Unit = FUNIT_CUSTOM ;
 		CustomUnitText = "%" ;
 	};
-    FixedText FT_ICONSIZE
+    FixedText FT_ICONSIZESTYLE
 	{
-        Pos = MAP_APPFONT ( 12 , ROW_FT_ICONSIZE  ) ;
+        Pos = MAP_APPFONT ( 12 , ROW_FT_ICONSIZESTYLE  ) ;
         Size = MAP_APPFONT ( 114 , 8 ) ;
-        Text [ de ] = "Symbolgröße" ;
-        Text [ en-US ] = "Icon size" ;
+        Text [ de ] = "Symbolgröße und Symbolstil" ;
+        Text [ en-US ] = "Icon size and style" ;
     };
     ListBox LB_ICONSIZE
 	{
-        Pos = MAP_APPFONT ( 12 , ROW_LB_ICONSIZE ) ;
-        Size = MAP_APPFONT ( 114 , 60 ) ;
+        Pos = MAP_APPFONT ( 12 , ROW_LB_ICONSIZESTYLE ) ;
+        Size = MAP_APPFONT ( 55 , 60 ) ;
 		DropDown = TRUE ;
 		Border = TRUE ;
 		TabStop = TRUE ;
@@ -256,6 +256,30 @@ TabPage OFA_TP_VIEW
 			< "Large" ; > ;
 		};
 	};
+    ListBox LB_ICONSTYLE
+    {
+        Pos = MAP_APPFONT ( 71 , ROW_LB_ICONSIZESTYLE ) ;
+        Size = MAP_APPFONT ( 55 , 60 ) ;
+        DropDown = TRUE ;
+        Border = TRUE ;
+        TabStop = TRUE ;
+        StringList [ de ] =
+        {
+            < "Automatisch" ; > ;
+            < "Standard" ; > ;
+            < "HiContrast" ; > ;
+            < "Industrial" ; > ;
+//            < "Crystal" ; > ;
+        };
+        StringList [ en-US ] =
+        {
+            < "Automatic" ; > ;
+            < "Default" ; > ;
+            < "HiContrast" ; > ;
+            < "Industrial" ; > ;
+//            < "Crystal" ; > ;
+        };
+    };
 	CheckBox CB_SYSTEM_FONT
 	{
 		TabStop = TRUE ;
Index: svx/source/gallery2/galbrws2.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/gallery2/galbrws2.cxx,v
retrieving revision 1.47
retrieving revision 1.45.332.3
diff -u -p -u -p -r1.47 -r1.45.332.3
--- svx/source/gallery2/galbrws2.cxx	11 Nov 2005 11:03:30 -0000	1.47
+++ svx/source/gallery2/galbrws2.cxx	30 Nov 2005 13:37:25 -0000	1.45.332.3
@@ -1222,21 +1222,14 @@ IMPL_LINK( GalleryBrowser2, SelectTbxHdl
 IMPL_LINK( GalleryBrowser2, MiscHdl, void*, p )
 {
 	sal_uInt16      nIconResId, nListResId;
-	sal_Int16       eOptSymbolSet = maMiscOptions.GetSymbolSet();
 	const sal_Bool  bHC = GALLERY_DLG_COLOR.IsDark();
  
-    if( SFX_SYMBOLS_AUTO == eOptSymbolSet )
-    {
-        eOptSymbolSet = ( Application::GetSettings().GetStyleSettings().GetToolbarIconSize() == STYLE_TOOLBAR_ICONSIZE_LARGE ) ?
-                        SFX_SYMBOLS_LARGE : SFX_SYMBOLS_SMALL;
-    }
-
     maViewBox.SetOutStyle( maMiscOptions.GetToolboxStyle() );
 	
 	BitmapEx aIconBmpEx = BitmapEx( Image( GAL_RESID( bHC? RID_SVXIMG_GALLERY_VIEW_ICON_HC : RID_SVXIMG_GALLERY_VIEW_ICON ) ).GetBitmapEx() );
 	BitmapEx aListBmpEx = BitmapEx( Image( GAL_RESID( bHC? RID_SVXIMG_GALLERY_VIEW_LIST_HC : RID_SVXIMG_GALLERY_VIEW_LIST ) ).GetBitmapEx() );
 	
-	if( SFX_SYMBOLS_SMALL != eOptSymbolSet )
+	if( maMiscOptions.AreCurrentSymbolsLarge() )
 	{
 		const Size aLargeSize( 24, 24);
 	
Index: instsetoo_native/packimages/makefile.mk
===================================================================
RCS file: /cvs/installation/instsetoo_native/packimages/makefile.mk,v
retrieving revision 1.10
retrieving revision 1.9.90.2
diff -u -p -u -p -r1.10 -r1.9.90.2
--- instsetoo_native/packimages/makefile.mk	7 Sep 2005 18:24:44 -0000	1.10
+++ instsetoo_native/packimages/makefile.mk	1 Nov 2005 14:35:03 -0000	1.9.90.2
@@ -47,7 +47,7 @@ IMAGES := $(COMMONBIN)$/images.zip
 CUSTOM_PREFERRED_FALLBACK=$(SOLARSRC)$/ooo_custom_images$/industrial
 CUSTOM_IMAGES=$(foreach,i,$(CUSTOM_IMAGE_SETS) images_$i)
 
-ALLTAR : $(IMAGES) $(CUSTOM_IMAGES)
+ALLTAR : $(IMAGES) $(SOLARSRC)$/ooo_custom_images$/hicontrast $(CUSTOM_IMAGES)
 
 $(RES)$/img$/commandimagelist.ilst .PHONY :
     +-$(MKDIR) $(RES)$/img
@@ -62,5 +62,8 @@ $(RES)$/img$/commandimagelist.ilst .PHON
 $(COMMONBIN)$/images.zip .PHONY: $(RES)$/img$/commandimagelist.ilst
     +$(PERL) $(SOLARENV)$/bin$/packimages.pl -g $(SOLARSRC)$/$(RSCDEFIMG) -m $(SOLARSRC)$/$(RSCDEFIMG) -c $(RSCCUSTOMIMG) -l $(SOLARCOMMONRESDIR)$/img -l $(RES)$/img -o $@
 
-images_% : 
+images_% : $(RES)$/img$/commandimagelist.ilst
     +$(PERL) $(SOLARENV)$/bin$/packimages.pl -g $(SOLARSRC)$/$(RSCDEFIMG) -m $(SOLARSRC)$/$(RSCDEFIMG) -c $(RSCCUSTOMIMG) -c $(SOLARSRC)$/ooo_custom_images/$(@:s/images_//) -c $(CUSTOM_PREFERRED_FALLBACK) -l $(SOLARCOMMONRESDIR)$/img -l $(RES)$/img -o $(COMMONBIN)$/$@.zip
+
+$(SOLARSRC)$/ooo_custom_images$/hicontrast : $(RES)$/img$/commandimagelist.ilst
+    +$(PERL) $(SOLARENV)$/bin$/hicontrast-to-theme.pl $(SOLARSRC)$/default_images $@
Index: dbaccess/source/ui/dlg/indexdialog.cxx
===================================================================
RCS file: /cvs/dba/dbaccess/source/ui/dlg/indexdialog.cxx,v
retrieving revision 1.23
retrieving revision 1.19.76.2
diff -u -p -u -p -r1.23 -r1.19.76.2
--- dbaccess/source/ui/dlg/indexdialog.cxx	5 Oct 2005 14:46:33 -0000	1.23
+++ dbaccess/source/ui/dlg/indexdialog.cxx	1 Nov 2005 15:33:12 -0000	1.19.76.2
@@ -923,7 +923,7 @@ DBG_NAME(DbaIndexDialog)
 	{
 		sal_Int16 nN = IMG_INDEX_DLG_SC;
 		sal_Int16 nH = IMG_INDEX_DLG_SCH;
-		if ( _eBitmapSet == SFX_SYMBOLS_LARGE )	 	 
+		if ( _eBitmapSet == SFX_SYMBOLS_SIZE_LARGE )	 	 
 		{
 			nN = IMG_INDEX_DLG_LC;
 			nH = IMG_INDEX_DLG_LCH;
Index: dbaccess/source/ui/inc/ToolBoxHelper.hxx
===================================================================
RCS file: /cvs/dba/dbaccess/source/ui/inc/ToolBoxHelper.hxx,v
retrieving revision 1.6
retrieving revision 1.5.264.2
diff -u -p -u -p -r1.6 -r1.5.264.2
--- dbaccess/source/ui/inc/ToolBoxHelper.hxx	8 Sep 2005 15:40:11 -0000	1.6
+++ dbaccess/source/ui/inc/ToolBoxHelper.hxx	1 Nov 2005 15:47:41 -0000	1.5.264.2
@@ -55,7 +55,7 @@ namespace dbaui
 	class OToolBoxHelper
 	{
 		sal_Bool		m_bIsHiContrast;// true when the toolbox is in hi contrast mode
-		sal_Int16		m_nBitmapSet;	// shows the toolbox large or small bitmaps
+		sal_Int16		m_nSymbolsSize;	// shows the toolbox large or small bitmaps
 		ToolBox*		m_pToolBox;		// our toolbox (may be NULL)
 	public:
 		OToolBoxHelper();
@@ -68,12 +68,12 @@ namespace dbaui
 		virtual void resizeControls(const Size& _rDiff) = 0;
 
 		/** will be called whenthe id of the image list is needed.
-			@param	_eBitmapSet
+			@param	_eSymbolsSize
 				<svtools/imgdef.hxx>
 			@param	_bHiContast
 				<TRUE/> when in high contrast mode.
 		*/
-		virtual sal_Int16 getImageListId(sal_Int16 _eBitmapSet,sal_Bool _bHiContast) const = 0;
+		virtual sal_Int16 getImageListId(sal_Int16 _eSymbolsSize,sal_Bool _bHiContast) const = 0;
 
 		/** only the member will be set, derived classes can overload this function and do what need to be done.
 			@param	_pTB
@@ -91,7 +91,6 @@ namespace dbaui
 	    
 	    /** retrieve the current symbol set from misc options
 	        and system settings */
-	    sal_Int16 getCurrentSymbolSet();
 		
 		inline sal_Bool isToolBoxHiContrast() const { return m_bIsHiContrast; }
 	protected:
Index: dbaccess/source/ui/misc/ToolBoxHelper.cxx
===================================================================
RCS file: /cvs/dba/dbaccess/source/ui/misc/ToolBoxHelper.cxx,v
retrieving revision 1.5
retrieving revision 1.3.378.2
diff -u -p -u -p -r1.5 -r1.3.378.2
--- dbaccess/source/ui/misc/ToolBoxHelper.cxx	23 Sep 2005 12:38:14 -0000	1.5
+++ dbaccess/source/ui/misc/ToolBoxHelper.cxx	1 Nov 2005 16:03:27 -0000	1.3.378.2
@@ -61,11 +61,11 @@ namespace dbaui
 	OToolBoxHelper::OToolBoxHelper()
 		: m_bIsHiContrast(sal_False)
 		,m_pToolBox(NULL)
-		,m_nBitmapSet(-1 )
+		,m_nSymbolsSize(-1 )
 	{
-        DBG_CTOR(OToolBoxHelper,NULL);
+		DBG_CTOR(OToolBoxHelper,NULL);
 
-		OSL_ENSURE(m_nBitmapSet != getCurrentSymbolSet(),"BitmapSet should not be identical");
+		OSL_ENSURE(m_nSymbolsSize != SvtMiscOptions().GetCurrentSymbolsSize(),"SymbolsSize should not be identical");
 		SvtMiscOptions().AddListener( LINK( this, OToolBoxHelper, ConfigOptionsChanged ) );
 		Application::AddEventListener( LINK( this, OToolBoxHelper, SettingsChanged ) );
 	}
@@ -74,42 +74,23 @@ namespace dbaui
 	{
 		SvtMiscOptions().RemoveListener( LINK( this, OToolBoxHelper, ConfigOptionsChanged ) );
 		Application::RemoveEventListener( LINK( this, OToolBoxHelper, SettingsChanged ) );
-	
-        DBG_DTOR(OToolBoxHelper,NULL);
-    }	
-	// -----------------------------------------------------------------------------
-	sal_Int16 OToolBoxHelper::getCurrentSymbolSet()
-	{
-        sal_Int16   eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-        if ( eOptSymbolSet == SFX_SYMBOLS_AUTO ) 
-        {
-            // Use system settings, we have to retrieve the toolbar icon size from the
-            // Application class
-            ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-            if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-                eOptSymbolSet = SFX_SYMBOLS_LARGE;
-            else
-                eOptSymbolSet = SFX_SYMBOLS_SMALL;
-        }
-        
-        return eOptSymbolSet;
-	}
+		DBG_DTOR(OToolBoxHelper,NULL);
+	}	
 	
 	// -----------------------------------------------------------------------------
 	void OToolBoxHelper::checkImageList()
 	{
 		if ( m_pToolBox )
 		{
-			sal_Int16 nCurBitmapSet = getCurrentSymbolSet();
-			if ( nCurBitmapSet != m_nBitmapSet || 
+			sal_Int16 nCurSymbolsSize = SvtMiscOptions().GetCurrentSymbolsSize();
+			if ( nCurSymbolsSize != m_nSymbolsSize || 
 				m_bIsHiContrast != m_pToolBox->GetBackground().GetColor().IsDark() )
 			{
-				m_nBitmapSet	= nCurBitmapSet;
+				m_nSymbolsSize	= nCurSymbolsSize;
 				m_bIsHiContrast = m_pToolBox->GetBackground().GetColor().IsDark();
 
 				
-				m_pToolBox->SetImageList( ModuleRes( getImageListId(m_nBitmapSet,m_bIsHiContrast) ) );
+				m_pToolBox->SetImageList( ModuleRes( getImageListId(m_nSymbolsSize,m_bIsHiContrast) ) );
 				Size aTbOldSize = m_pToolBox->GetSizePixel();
 				adjustToolBoxSize(m_pToolBox);
 				Size aTbNewSize = m_pToolBox->GetSizePixel();
Index: vcl/inc/image.hxx
===================================================================
RCS file: /cvs/gsl/vcl/inc/image.hxx,v
retrieving revision 1.12
retrieving revision 1.11.148.2
diff -u -p -u -p -r1.12 -r1.11.148.2
--- vcl/inc/image.hxx	9 Sep 2005 11:01:51 -0000	1.12
+++ vcl/inc/image.hxx	1 Nov 2005 16:47:34 -0000	1.11.148.2
@@ -206,6 +206,7 @@ private:
 
     SAL_DLLPRIVATE void    ImplInitBitmapEx( const ::rtl::OUString& rUserImageName,
                                              const ::std::vector< ::rtl::OUString >& rImageNames,
+                                             const ::rtl::OUString& rSymbolsStyle,
                                              BitmapEx& rBmpEx,
                                              const Color* pMaskColor ) const;
 	SAL_DLLPRIVATE void    ImplInit( const BitmapEx& rBitmapEx, USHORT nInit, const USHORT* pIdAry, const ::std::vector< ::rtl::OUString >* pNames, USHORT nGrow );
Index: vcl/inc/impimagetree.hxx
===================================================================
RCS file: /cvs/gsl/vcl/inc/impimagetree.hxx,v
retrieving revision 1.7
retrieving revision 1.6.148.2
diff -u -p -u -p -r1.7 -r1.6.148.2
--- vcl/inc/impimagetree.hxx	9 Sep 2005 11:04:33 -0000	1.7
+++ vcl/inc/impimagetree.hxx	1 Nov 2005 16:48:52 -0000	1.6.148.2
@@ -63,7 +63,10 @@ public:
 					ImplImageTree();
 					~ImplImageTree();
 
-	bool 			loadImage( const ::rtl::OUString& rName, BitmapEx& rReturn, bool bSearchLanguageDependent = false );
+	bool 			loadImage( const ::rtl::OUString& rName,
+							   const ::rtl::OUString& rSymbolsStyle,
+							   BitmapEx& rReturn,
+							   bool bSearchLanguageDependent = false );
 	void			addUserImage( const ::rtl::OUString& rName, const BitmapEx& rReturn );
 	
 	static void     cleanup();
@@ -75,15 +78,17 @@ private:
 	::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > 			mxPathSettings;
 	::com::sun::star::uno::Reference< ::com::sun::star::ucb::XSimpleFileAccess > 		mxFileAccess;
 	bool																				mbInit;
-			
+	::rtl::OUString																		maSymbolsStyle;
+
 	bool					implInit();
-	const ::rtl::OUString&	implGetZipFileURL() const;
+	::rtl::OUString			implGetZipFileURL( bool bWithStyle = true ) const;
 	const ::rtl::OUString&	implGetUserDirURL() const;
 	::rtl::OUString 		implGetUserFileURL( const ::rtl::OUString& rName ) const;
 	void					implCheckUserCache();
 	bool					implLoadFromStream( SvStream& rIStm, const ::rtl::OUString& rFileName, BitmapEx& rReturn );
     ::std::auto_ptr< SvStream > implGetStream( const ::com::sun::star::uno::Reference< 
                                                         ::com::sun::star::io::XInputStream >& rxIStm ) const;
+	void					implUpdateSymbolsStyle( const ::rtl::OUString& rSymbolsStyle );
 };
 
 typedef ::salhelper::SingletonRef< ImplImageTree > ImplImageTreeSingletonRef;
Index: vcl/inc/settings.hxx
===================================================================
RCS file: /cvs/gsl/vcl/inc/settings.hxx,v
retrieving revision 1.30
retrieving revision 1.29.210.4
diff -u -p -u -p -r1.30 -r1.29.210.4
--- vcl/inc/settings.hxx	9 Sep 2005 11:25:28 -0000	1.30
+++ vcl/inc/settings.hxx	4 Nov 2005 14:56:06 -0000	1.29.210.4
@@ -428,6 +428,7 @@ private:
     ULONG                           mnLogoDisplayTime;
     ULONG                           mnDisplayOptions;
     ULONG                           mnToolbarIconSize;
+    ULONG                           mnSymbolsStyle;
     ULONG                           mnUseFlatMenues;
     ULONG                           mnOptions;
     USHORT                          mnScreenZoom;
@@ -517,6 +518,12 @@ private:
 #define STYLE_TOOLBAR_ICONSIZE_SMALL		((ULONG)1)
 #define STYLE_TOOLBAR_ICONSIZE_LARGE		((ULONG)2)
 
+#define STYLE_SYMBOLS_AUTO			((ULONG)0)
+#define STYLE_SYMBOLS_DEFAULT		((ULONG)1)
+#define STYLE_SYMBOLS_HICONTRAST	((ULONG)2)
+#define STYLE_SYMBOLS_INDUSTRIAL	((ULONG)3)
+//#define STYLE_SYMBOLS_CRYSTAL		((ULONG)4)
+
 #define STYLE_CURSOR_NOBLINKTIME    ((ULONG)0xFFFFFFFF)
 
 class VCL_DLLPUBLIC StyleSettings
@@ -904,6 +911,19 @@ public:
     ULONG							GetToolbarIconSize() const
     									{ return mpData->mnToolbarIconSize; }
 
+    void							SetSymbolsStyle( ULONG nStyle )
+    									{ CopyData(); mpData->mnSymbolsStyle = nStyle; }
+    ULONG							GetSymbolsStyle() const
+    									{ return mpData->mnSymbolsStyle; }
+    ULONG							GetCurrentSymbolsStyle() const;
+
+    void							SetSymbolsStyleName( const ::rtl::OUString &rName )
+										{ return SetSymbolsStyle( ImplNameToSymbolsStyle( rName ) ); }
+    ::rtl::OUString					GetSymbolsStyleName() const
+										{ return ImplSymbolsStyleToName( GetSymbolsStyle() ); }
+    ::rtl::OUString					GetCurrentSymbolsStyleName() const
+										{ return ImplSymbolsStyleToName( GetCurrentSymbolsStyle() ); }
+
     void                            SetStandardStyles();
     void                            SetStandardWinStyles();
     void                            SetStandardOS2Styles();
@@ -915,6 +935,10 @@ public:
     BOOL                            operator ==( const StyleSettings& rSet ) const;
     BOOL                            operator !=( const StyleSettings& rSet ) const
                                         { return !(*this == rSet); }
+
+protected:
+    ::rtl::OUString					ImplSymbolsStyleToName( ULONG nStyle ) const;
+    ULONG							ImplNameToSymbolsStyle( const ::rtl::OUString &rName ) const;
 };
 
 // ----------------
Index: vcl/source/app/settings.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/app/settings.cxx,v
retrieving revision 1.54
retrieving revision 1.53.182.4
diff -u -p -u -p -r1.54 -r1.53.182.4
--- vcl/source/app/settings.cxx	9 Sep 2005 11:41:53 -0000	1.54
+++ vcl/source/app/settings.cxx	4 Nov 2005 14:56:07 -0000	1.53.182.4
@@ -40,6 +40,9 @@
 #include <tools/isolang.hxx>
 #endif
 
+#ifndef _SV_SVAPP_HXX
+#include <svapp.hxx>
+#endif
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
 #endif
@@ -464,6 +467,7 @@ ImplStyleData::ImplStyleData()
     mnOptions                   = 0;
     mnAutoMnemonic				= 1;
     mnToolbarIconSize			= STYLE_TOOLBAR_ICONSIZE_UNKNOWN;
+    mnSymbolsStyle				= STYLE_SYMBOLS_AUTO;
 
     SetStandardStyles();
 }
@@ -561,6 +565,7 @@ ImplStyleData::ImplStyleData( const Impl
     mnAutoMnemonic				= rData.mnAutoMnemonic;
     mnUseImagesInMenus			= rData.mnUseImagesInMenus;
     mnToolbarIconSize			= rData.mnToolbarIconSize;
+    mnSymbolsStyle				= rData.mnSymbolsStyle;
 }
 
 // -----------------------------------------------------------------------
@@ -705,6 +710,66 @@ void StyleSettings::Set3DColors( const C
         mpData->maLightColor    = Color( COL_WHITE );
         mpData->maShadowColor   = Color( COL_GRAY );
     }
+}
+
+// -----------------------------------------------------------------------
+
+::rtl::OUString StyleSettings::ImplSymbolsStyleToName( ULONG nStyle ) const
+{
+	switch ( nStyle )
+	{
+		case STYLE_SYMBOLS_DEFAULT:    return ::rtl::OUString::createFromAscii( "default" );
+		case STYLE_SYMBOLS_HICONTRAST: return ::rtl::OUString::createFromAscii( "hicontrast" );
+		case STYLE_SYMBOLS_INDUSTRIAL: return ::rtl::OUString::createFromAscii( "industrial" );
+//		case STYLE_SYMBOLS_CRYSTAL:    return ::rtl::OUString::createFromAscii( "crystal" );
+	}
+
+	return ::rtl::OUString::createFromAscii( "auto" );
+}
+
+// -----------------------------------------------------------------------
+
+ULONG StyleSettings::ImplNameToSymbolsStyle( const ::rtl::OUString &rName ) const
+{
+	if ( rName == ::rtl::OUString::createFromAscii( "default" ) )
+		return STYLE_SYMBOLS_DEFAULT;
+	else if ( rName == ::rtl::OUString::createFromAscii( "hicontrast" ) )
+		return STYLE_SYMBOLS_HICONTRAST;
+	else if ( rName == ::rtl::OUString::createFromAscii( "industrial" ) )
+		return STYLE_SYMBOLS_INDUSTRIAL;
+//	else if ( rName == ::rtl::OUString::createFromAscii( "crystal" ) )
+//		return STYLE_SYMBOLS_CRYSTAL;
+
+	return STYLE_SYMBOLS_AUTO;
+}
+
+// -----------------------------------------------------------------------
+
+ULONG StyleSettings::GetCurrentSymbolsStyle() const
+{
+	ULONG nStyle = GetSymbolsStyle();
+
+	if ( nStyle == STYLE_SYMBOLS_AUTO )
+	{
+		static bool sbDesktopChecked = false;
+		static ULONG snDesktopStyle = STYLE_SYMBOLS_DEFAULT;
+
+		if ( !sbDesktopChecked )
+		{
+			const ::rtl::OUString &rDesktopEnvironment = Application::GetDesktopEnvironment();
+
+			if( rDesktopEnvironment.equalsIgnoreAsciiCaseAscii( "gnome" ) )
+				snDesktopStyle = STYLE_SYMBOLS_INDUSTRIAL;
+//			else if( rDesktopEnvironment.equalsIgnoreAsciiCaseAscii( "kde" ) )
+//				snDesktopStyle = STYLE_SYMBOLS_CRYSTAL;
+
+			sbDesktopChecked = true;
+		}
+
+		nStyle = GetHighContrastMode()? STYLE_SYMBOLS_HICONTRAST: snDesktopStyle;
+	}
+
+	return nStyle;
 }
 
 // -----------------------------------------------------------------------
Index: vcl/source/gdi/bitmapex.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/gdi/bitmapex.cxx,v
retrieving revision 1.16
retrieving revision 1.15.14.2
diff -u -p -u -p -r1.16 -r1.15.14.2
--- vcl/source/gdi/bitmapex.cxx	9 Sep 2005 11:53:46 -0000	1.16
+++ vcl/source/gdi/bitmapex.cxx	1 Nov 2005 17:18:39 -0000	1.15.14.2
@@ -67,6 +67,9 @@
 #ifndef _SV_RC_H
 #include <tools/rc.h>
 #endif
+#ifndef _SV_SVAPP_HXX
+#include <svapp.hxx>
+#endif
 
 // ------------
 // - BitmapEx -
@@ -104,8 +107,9 @@ BitmapEx::BitmapEx( const ResId& rResId 
 	pResMgr->ReadLong();
 	
 	const String aFileName( pResMgr->ReadString() );
+	::rtl::OUString aCurrentSymbolsStyle = Application::GetSettings().GetStyleSettings().GetCurrentSymbolsStyleName();
 	
-	if( !aImageTree->loadImage( aFileName, *this ) )
+	if( !aImageTree->loadImage( aFileName, aCurrentSymbolsStyle, *this ) )
 	{
 #ifdef DBG_UTIL		
 		ByteString aErrorStr( "BitmapEx::BitmapEx( const ResId& rResId ): could not load image <" );
Index: vcl/source/gdi/image.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/gdi/image.cxx,v
retrieving revision 1.21
retrieving revision 1.20.148.2
diff -u -p -u -p -r1.21 -r1.20.148.2
--- vcl/source/gdi/image.cxx	9 Sep 2005 11:59:48 -0000	1.21
+++ vcl/source/gdi/image.cxx	1 Nov 2005 17:21:44 -0000	1.20.148.2
@@ -535,8 +535,11 @@ ImageList::ImageList( const ResId& rResI
 
         aUserImageName += ::rtl::OUString::valueOf( static_cast< sal_Int32 >( rResId.GetId() ) );
         aUserImageName += ::rtl::OUString::valueOf( nCount );
+
+        ::rtl::OUString aCurrentSymbolsStyle = Application::GetSettings().GetStyleSettings().GetCurrentSymbolsStyleName();
+        aUserImageName += aCurrentSymbolsStyle;
         
-        ImplInitBitmapEx( aUserImageName, aImageNames, aBmpEx, spMaskColor.get() );
+        ImplInitBitmapEx( aUserImageName, aImageNames, aCurrentSymbolsStyle, aBmpEx, spMaskColor.get() );
 
 		if( nObjMask & RSC_IMAGELIST_IDCOUNT )
 			pResMgr->ReadShort();
@@ -568,8 +571,11 @@ ImageList::ImageList( const ::std::vecto
         
     aUserImageName = ( ( aUserImageName += rLocale.Language ) += rLocale.Country ).replace( '/', '_' );
     aUserImageName += ::rtl::OUString::valueOf( static_cast< sal_Int32 >( rNameVector.size() ) );
+
+    ::rtl::OUString aCurrentSymbolsStyle = Application::GetSettings().GetStyleSettings().GetCurrentSymbolsStyleName();
+    aUserImageName += aCurrentSymbolsStyle;
     
-    ImplInitBitmapEx( aUserImageName, aImageNames, aBmpEx, pMaskColor );
+    ImplInitBitmapEx( aUserImageName, aImageNames, aCurrentSymbolsStyle, aBmpEx, pMaskColor );
 	ImplInit( aBmpEx, static_cast< USHORT >( rNameVector.size() ), NULL, &rNameVector, 4 );
 }
 
@@ -669,12 +675,13 @@ ImageList::~ImageList()
 
 void ImageList::ImplInitBitmapEx( const ::rtl::OUString& rUserImageName,
                                   const ::std::vector< ::rtl::OUString >& rImageNames,
+                                  const ::rtl::OUString& rSymbolsStyle,
                                   BitmapEx& rBmpEx, 
                                   const Color* pMaskColor ) const
 {
     static ImplImageTreeSingletonRef aImageTree;
     
-    if( !aImageTree->loadImage( rUserImageName, rBmpEx ) )
+    if( !aImageTree->loadImage( rUserImageName, rSymbolsStyle, rBmpEx ) )
     {
         BitmapEx    aCurBmpEx;
         Size        aItemSizePixel;
@@ -682,7 +689,7 @@ void ImageList::ImplInitBitmapEx( const 
         
         for( sal_Int32 i = 0, nCount = rImageNames.size(); i < nCount; ++i )
         {
-            if( aImageTree->loadImage( rImageNames[ i ], aCurBmpEx, true ) )
+            if( aImageTree->loadImage( rImageNames[ i ], rSymbolsStyle, aCurBmpEx, true ) )
             {
                 const Size aCurSizePixel( aCurBmpEx.GetSizePixel() );
            
Index: vcl/source/gdi/impimagetree.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/gdi/impimagetree.cxx,v
retrieving revision 1.8
retrieving revision 1.7.148.2
diff -u -p -u -p -r1.8 -r1.7.148.2
--- vcl/source/gdi/impimagetree.cxx	9 Sep 2005 12:01:47 -0000	1.8
+++ vcl/source/gdi/impimagetree.cxx	1 Nov 2005 17:22:54 -0000	1.7.148.2
@@ -92,7 +92,8 @@
 #include <hash_map>
 
 #define DEFAULT_PROJECTNAME "res"
-#define IMAGES_ZIPFILENAME	"images.zip"
+#define IMAGES_ZIPFILENAME_PREFIX	"images"
+#define IMAGES_ZIPFILENAME_SUFFIX	".zip"
 #define IMAGES_CACHEDIR		"imagecache"
 
 using namespace ::com::sun::star;
@@ -107,7 +108,8 @@ static BmpExHashMap aBmpExHashMap;
 // -----------------------------------------------------------------------
 
 ImplImageTree::ImplImageTree() :
-	mbInit( false )
+	mbInit( false ),
+	maSymbolsStyle( Application::GetSettings().GetStyleSettings().GetCurrentSymbolsStyleName() )
 {
 }
 
@@ -186,13 +188,20 @@ bool ImplImageTree::implInit()
 
 // -----------------------------------------------------------------------
 
-const ::rtl::OUString& ImplImageTree::implGetZipFileURL() const
+::rtl::OUString ImplImageTree::implGetZipFileURL( bool bWithStyle ) const
 {
-	static ::rtl::OUString aRet;
+	::rtl::OUString aRet;
 	
 	if( !aRet.getLength() && mxPathSettings.is() && mxFileAccess.is() )
 	{
-		const ::rtl::OUString	aZipFileName( ::rtl::OUString::createFromAscii( IMAGES_ZIPFILENAME ) );
+		::rtl::OUString	aZipFileName( ::rtl::OUString::createFromAscii( IMAGES_ZIPFILENAME_PREFIX ) );
+		if ( bWithStyle && maSymbolsStyle.getLength() > 0 )
+		{
+			aZipFileName += ::rtl::OUString::createFromAscii( "_" );
+			aZipFileName += maSymbolsStyle;
+		}
+		aZipFileName += ::rtl::OUString::createFromAscii( IMAGES_ZIPFILENAME_SUFFIX );
+
 		uno::Any 				aAny( mxPathSettings->getPropertyValue( ::rtl::OUString::createFromAscii( "UserConfig" ) ) );
 		INetURLObject			aZipURL;
 	
@@ -212,7 +221,10 @@ const ::rtl::OUString& ImplImageTree::im
 				
 					if( !mxFileAccess->exists( aRet = aZipURL.GetMainURL( INetURLObject::NO_DECODE ) ) )
 					{
-						aRet = ::rtl::OUString();
+						if ( bWithStyle && maSymbolsStyle.getLength() > 0 )
+							aRet = implGetZipFileURL( false ); // Try without style
+						else
+							aRet = ::rtl::OUString();
 					}
 				}
 			}
@@ -369,8 +381,35 @@ bool ImplImageTree::implLoadFromStream( 
 
 // ------------------------------------------------------------------------------
 
-bool ImplImageTree::loadImage( const ::rtl::OUString& rName, BitmapEx& rReturn, bool bSearchLanguageDependent )
+void ImplImageTree::implUpdateSymbolsStyle( const ::rtl::OUString& rSymbolsStyle )
 {
+	if ( rSymbolsStyle != maSymbolsStyle )
+	{
+		maSymbolsStyle = rSymbolsStyle;
+		if ( mbInit )
+		{
+			mxNameAcc.clear();
+			mxZipAcc.clear();
+			mxFileAccess.clear();
+			mxPathSettings.clear();
+
+			BmpExHashMap aTmp;
+			aBmpExHashMap.swap( aTmp );
+
+			mbInit = false;
+		}
+	}
+}
+
+// ------------------------------------------------------------------------------
+
+bool ImplImageTree::loadImage( const ::rtl::OUString& rName,
+		const ::rtl::OUString& rSymbolsStyle,
+		BitmapEx& rReturn,
+		bool bSearchLanguageDependent )
+{
+	implUpdateSymbolsStyle( rSymbolsStyle );
+
 	const BmpExHashMap::const_iterator	aBmpExFindIter( aBmpExHashMap.find( rName ) );
 	
 	if( aBmpExFindIter != aBmpExHashMap.end() )
Index: extensions/source/bibliography/toolbar.cxx
===================================================================
RCS file: /cvs/util/extensions/source/bibliography/toolbar.cxx,v
retrieving revision 1.16
retrieving revision 1.14.154.2
diff -u -p -u -p -r1.16 -r1.14.154.2
--- extensions/source/bibliography/toolbar.cxx	23 Sep 2005 12:51:27 -0000	1.16
+++ extensions/source/bibliography/toolbar.cxx	1 Nov 2005 18:52:32 -0000	1.14.154.2
@@ -259,11 +259,12 @@ BibToolBar::BibToolBar(Window* pParent, 
 	nSelMenuItem(0),
 	nMenuId(0),
 	aLayoutManager( aLink ),
-	nSymbolSet( SFX_SYMBOLS_SMALL ),
+	nSymbolsSize( SFX_SYMBOLS_SIZE_SMALL ),
 	nOutStyle( 0 )
 {
-	nSymbolSet = GetCurrentSymbolSet();
-	nOutStyle  = SvtMiscOptions().GetToolboxStyle();
+	SvtMiscOptions aSvtMiscOptions;
+	nSymbolsSize = aSvtMiscOptions.GetCurrentSymbolsSize();
+	nOutStyle  = aSvtMiscOptions.GetToolboxStyle();
 
     ApplyImageList();
     SetStyle(GetStyle()|nStyle);
@@ -613,9 +614,10 @@ void BibToolBar::DataChanged( const Data
 IMPL_LINK( BibToolBar, OptionsChanged_Impl, void*, pVoid )
 {
     sal_Bool bRebuildToolBar = sal_False;
-    if ( nSymbolSet != GetCurrentSymbolSet() )
+    sal_Int16 eSymbolsSize = SvtMiscOptions().GetCurrentSymbolsSize();
+    if ( nSymbolsSize != eSymbolsSize )
     {
-        nSymbolSet = GetCurrentSymbolSet();
+        nSymbolsSize = eSymbolsSize;
         bRebuildToolBar = sal_True;
     }
     else if ( nOutStyle != SvtMiscOptions().GetToolboxStyle() )
@@ -636,10 +638,10 @@ IMPL_LINK( BibToolBar, OptionsChanged_Im
 IMPL_LINK( BibToolBar, SettingsChanged_Impl, void*, pVoid )
 {
     // Check if toolbar button size have changed and we have to use system settings
-    sal_Int16 eSymbolSet = GetCurrentSymbolSet();
-    if ( eSymbolSet != nSymbolSet )
+    sal_Int16 eSymbolsSize = SvtMiscOptions().GetCurrentSymbolsSize();
+    if ( eSymbolsSize != nSymbolsSize )
     {
-        nSymbolSet = eSymbolSet;
+        nSymbolsSize = eSymbolsSize;
         RebuildToolbar();
     }
     
@@ -647,26 +649,6 @@ IMPL_LINK( BibToolBar, SettingsChanged_I
 }
 
 //-----------------------------------------------------------------------------
-
-sal_Int16 BibToolBar::GetCurrentSymbolSet()
-{
-    sal_Int16   eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO ) 
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-    
-    return eOptSymbolSet;
-}
-
-//-----------------------------------------------------------------------------
 void BibToolBar::RebuildToolbar()
 {
     ApplyImageList();
@@ -678,7 +660,7 @@ void BibToolBar::RebuildToolbar()
 
 void BibToolBar::ApplyImageList()
 {
-    ImageList& rList = ( nSymbolSet == SFX_SYMBOLS_SMALL ) ? 
+    ImageList& rList = ( nSymbolsSize == SFX_SYMBOLS_SIZE_SMALL ) ? 
                        ( GetDisplayBackground().GetColor().IsDark() ? aImgLstHC : aImgLst ) :
                        ( GetDisplayBackground().GetColor().IsDark() ? aBigImgLstHC : aBigImgLst );
     
Index: extensions/source/bibliography/toolbar.hxx
===================================================================
RCS file: /cvs/util/extensions/source/bibliography/toolbar.hxx,v
retrieving revision 1.8
retrieving revision 1.7.234.2
diff -u -p -u -p -r1.8 -r1.7.234.2
--- extensions/source/bibliography/toolbar.hxx	8 Sep 2005 19:21:38 -0000	1.8
+++ extensions/source/bibliography/toolbar.hxx	1 Nov 2005 18:52:50 -0000	1.7.234.2
@@ -169,7 +169,7 @@ class BibToolBar:	public ToolBox
 		sal_uInt16				nSelMenuItem;
 		rtl::OUString			aQueryField;
 		Link                    aLayoutManager;
-		sal_Int16               nSymbolSet;
+		sal_Int16               nSymbolsSize;
 		sal_Int16               nOutStyle;
 
 		BibDataManager* 		pDatMan;
@@ -189,7 +189,6 @@ class BibToolBar:	public ToolBox
 		virtual void			Select();
 		virtual void			Click();
         long                    PreNotify( NotifyEvent& rNEvt );
-		sal_Int16               GetCurrentSymbolSet();
 
 
 	public:
Index: framework/inc/services/layoutmanager.hxx
===================================================================
RCS file: /cvs/framework/framework/inc/services/layoutmanager.hxx,v
retrieving revision 1.24
retrieving revision 1.21.18.4
diff -u -p -u -p -r1.24 -r1.21.18.4
--- framework/inc/services/layoutmanager.hxx	11 Nov 2005 12:55:02 -0000	1.24
+++ framework/inc/services/layoutmanager.hxx	30 Nov 2005 14:25:32 -0000	1.21.18.4
@@ -459,7 +459,8 @@ namespace framework
             void implts_createCustomToolBar( const rtl::OUString& aTbxResName, const rtl::OUString& aTitle );
             void implts_toggleFloatingUIElementsVisibility( sal_Bool bActive );
             sal_Bool implts_isEmbeddedLayoutManager() const;
-            sal_Int16 implts_getCurrentSymbolSet();
+            sal_Int16 implts_getCurrentSymbolsSize();
+            sal_Int16 implts_getCurrentSymbolsStyle();
             ::com::sun::star::uno::Reference< com::sun::star::awt::XWindowPeer > implts_createToolkitWindow( const ::com::sun::star::uno::Reference< com::sun::star::awt::XWindowPeer >& rParent );
             ::com::sun::star::uno::Reference< ::com::sun::star::ui::XUIElement > implts_createElement( const rtl::OUString& aName );
             rtl::OUString implts_generateGenericAddonToolbarTitle( sal_Int32 nNumber ) const;
@@ -600,7 +601,8 @@ namespace framework
             rtl::OUString                                                               m_aCustomizeCmd;
             AddonsOptions*                                                              m_pAddonOptions;
             SvtMiscOptions*                                                             m_pMiscOptions;
-            sal_Int16                                                                   m_eSymbolSet;
+            sal_Int16                                                                   m_eSymbolsSize;
+            sal_Int16                                                                   m_eSymbolsStyle;
 	        Timer				                                                        m_aAsyncLayoutTimer;
             ::cppu::OMultiTypeInterfaceContainerHelper                                  m_aListenerContainer; // container for ALL Listener
     };
Index: framework/inc/uiconfiguration/moduleimagemanager.hxx
===================================================================
RCS file: /cvs/framework/framework/inc/uiconfiguration/moduleimagemanager.hxx,v
retrieving revision 1.4
retrieving revision 1.3.106.2
diff -u -p -u -p -r1.4 -r1.3.106.2
--- framework/inc/uiconfiguration/moduleimagemanager.hxx	9 Sep 2005 00:40:04 -0000	1.4
+++ framework/inc/uiconfiguration/moduleimagemanager.hxx	1 Nov 2005 20:25:36 -0000	1.3.106.2
@@ -174,6 +174,7 @@ namespace framework
             ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory > m_xServiceManager;
             ::std::vector< rtl::OUString >                                                   m_aImageNameVector;
             ::std::vector< rtl::OUString >                                                   m_aImageCommandNameVector;
+            sal_Int16                                                                        m_nSymbolsStyle;
     };
 
     class GlobalImageList : public CmdImageList, public rtl::IReference
Index: framework/inc/uielement/menubarmanager.hxx
===================================================================
RCS file: /cvs/framework/framework/inc/uielement/menubarmanager.hxx,v
retrieving revision 1.13
retrieving revision 1.11.52.3
diff -u -p -u -p -r1.13 -r1.11.52.3
--- framework/inc/uielement/menubarmanager.hxx	11 Nov 2005 12:04:08 -0000	1.13
+++ framework/inc/uielement/menubarmanager.hxx	30 Nov 2005 14:25:47 -0000	1.11.52.3
@@ -297,6 +297,7 @@ class MenuBarManager : public com::sun::
         ::com::sun::star::uno::Reference< ::com::sun::star::ui::XAcceleratorConfiguration >            m_xGlobalAcceleratorManager;
 		// #110897#
 		const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory >&        mxServiceFactory;
+		sal_Int16                                                                                      m_nSymbolsStyle;
 };
 
 } // namespace
Index: framework/inc/uielement/toolbarmanager.hxx
===================================================================
RCS file: /cvs/framework/framework/inc/uielement/toolbarmanager.hxx,v
retrieving revision 1.11
retrieving revision 1.10.4.3
diff -u -p -u -p -r1.11 -r1.10.4.3
--- framework/inc/uielement/toolbarmanager.hxx	9 Sep 2005 00:48:02 -0000	1.11
+++ framework/inc/uielement/toolbarmanager.hxx	1 Nov 2005 20:30:08 -0000	1.10.4.3
@@ -165,7 +165,6 @@ class ToolBarManager : public ::com::sun
         void FillToolbar( const ::com::sun::star::uno::Reference< ::com::sun::star::container::XIndexAccess >& rToolBarData );
         void notifyRegisteredControllers( const rtl::OUString& aUIElementName, const rtl::OUString& aCommand );
         void Destroy();
-        static sal_Int16 GetCurrentSymbolSize();
 
     protected:
         struct ControllerParams
@@ -248,6 +247,7 @@ class ToolBarManager : public ::com::sun
         CommandToInfoMap                                                                                m_aCommandMap;
         SubToolBarToSubToolBarControllerMap                                                             m_aSubToolBarControllerMap;
         Timer				                                                                            m_aAsyncUpdateControllersTimer;
+        sal_Int16                                                                                       m_nSymbolsStyle;
 };
     
 }
Index: framework/source/layoutmanager/layoutmanager.cxx
===================================================================
RCS file: /cvs/framework/framework/source/layoutmanager/layoutmanager.cxx,v
retrieving revision 1.40
retrieving revision 1.35.4.4
diff -u -p -u -p -r1.40 -r1.35.4.4
--- framework/source/layoutmanager/layoutmanager.cxx	11 Nov 2005 12:05:54 -0000	1.40
+++ framework/source/layoutmanager/layoutmanager.cxx	30 Nov 2005 14:28:44 -0000	1.35.4.4
@@ -444,7 +444,8 @@ LayoutManager::LayoutManager( const Refe
 
     m_pMiscOptions->AddListener( LINK( this, LayoutManager, OptionsChanged ) );
     Application::AddEventListener( LINK( this, LayoutManager, SettingsChanged ) );
-    m_eSymbolSet = m_pMiscOptions->GetSymbolSet();
+    m_eSymbolsSize = m_pMiscOptions->GetSymbolsSize();
+    m_eSymbolsStyle = m_pMiscOptions->GetCurrentSymbolsStyle();
 
 	m_aAsyncLayoutTimer.SetTimeout( 50 );
 	m_aAsyncLayoutTimer.SetTimeoutHdl( LINK( this, LayoutManager, AsyncLayoutHdl ) );
@@ -5730,27 +5731,32 @@ void LayoutManager::implts_clearMenuBarC
     }
 }
 
-sal_Int16 LayoutManager::implts_getCurrentSymbolSet()
+sal_Int16 LayoutManager::implts_getCurrentSymbolsSize()
 {
-    sal_Int16 eOptSymbolSet( 0 );
-    ReadGuard aReadLock( m_aLock );
-    if ( m_pMiscOptions )
-        eOptSymbolSet = m_pMiscOptions->GetSymbolSet();
-    aReadLock.unlock();
+    sal_Int16 eOptSymbolsSize( 0 );
 
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
     {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        vos::OGuard	aGuard( Application::GetSolarMutex() );
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
+        ReadGuard aReadLock( m_aLock );
+        vos::OGuard aGuard( Application::GetSolarMutex() );
+        if ( m_pMiscOptions )
+            eOptSymbolsSize = m_pMiscOptions->GetCurrentSymbolsSize();
+    }
+
+    return eOptSymbolsSize;
+}
+
+sal_Int16 LayoutManager::implts_getCurrentSymbolsStyle()
+{
+    sal_Int16 eOptSymbolsStyle( 0 );
+
+    {
+        ReadGuard aReadLock( m_aLock );
+        vos::OGuard aGuard( Application::GetSolarMutex() );
+        if ( m_pMiscOptions )
+            eOptSymbolsStyle = m_pMiscOptions->GetCurrentSymbolsStyle();
     }
 
-    return eOptSymbolSet;
+    return eOptSymbolsStyle;
 }
 
 IMPL_LINK( LayoutManager, MenuBarClose, MenuBar *, pMenu )
@@ -5773,17 +5779,19 @@ IMPL_LINK( LayoutManager, MenuBarClose, 
 
 IMPL_LINK( LayoutManager, OptionsChanged, void*, pVoid )
 {
-    sal_Int16 eOldSymbolSet( 0 );
-    sal_Int16 eSymbolSet( implts_getCurrentSymbolSet() );
+    sal_Int16 eSymbolsSize( implts_getCurrentSymbolsSize() );
+    sal_Int16 eSymbolsStyle( implts_getCurrentSymbolsStyle() );
 
     ReadGuard aReadLock( m_aLock );
-    eOldSymbolSet = m_eSymbolSet;
+    sal_Int16 eOldSymbolsSize = m_eSymbolsSize;
+    sal_Int16 eOldSymbolsStyle = m_eSymbolsStyle;
     aReadLock.unlock();
 
-    if ( eSymbolSet != eOldSymbolSet )
+    if ( eSymbolsSize != eOldSymbolsSize || eSymbolsStyle != eOldSymbolsStyle )
     {
         WriteGuard aWriteLock( m_aLock );
-        m_eSymbolSet = eSymbolSet;
+        m_eSymbolsSize = eSymbolsSize;
+        m_eSymbolsStyle = eSymbolsStyle;
         aWriteLock.unlock();
 
         std::vector< Reference< XUpdatable > > aToolBarVector;
Index: framework/source/uiconfiguration/moduleimagemanager.cxx
===================================================================
RCS file: /cvs/framework/framework/source/uiconfiguration/moduleimagemanager.cxx,v
retrieving revision 1.11
retrieving revision 1.10.10.2
diff -u -p -u -p -r1.11 -r1.10.10.2
--- framework/source/uiconfiguration/moduleimagemanager.cxx	9 Sep 2005 01:50:22 -0000	1.11
+++ framework/source/uiconfiguration/moduleimagemanager.cxx	1 Nov 2005 21:07:52 -0000	1.10.10.2
@@ -114,6 +114,10 @@
 #include <vcl/pngwrite.hxx>
 #endif
 
+#ifndef INCLUDED_SVTOOLS_MISCOPT_HXX
+#include "svtools/miscopt.hxx"
+#endif
+
 //_________________________________________________________________________________________________________________
 //	namespaces
 //_________________________________________________________________________________________________________________
@@ -204,7 +208,8 @@ static GlobalImageList* getGlobalImageLi
 CmdImageList::CmdImageList( const uno::Reference< XMultiServiceFactory >& rServiceManager, const rtl::OUString& aModuleIdentifier ) :
     m_aModuleIdentifier( aModuleIdentifier ),
     m_bVectorInit( sal_False ),
-    m_xServiceManager( rServiceManager )
+    m_xServiceManager( rServiceManager ),
+    m_nSymbolsStyle( SvtMiscOptions().GetCurrentSymbolsStyle() )
 {
     for ( sal_Int32 n=0; n < ImageType_COUNT; n++ )
         m_pImageList[n] = 0;
@@ -284,6 +289,16 @@ void CmdImageList::impl_fillCommandToIma
 
 ImageList* CmdImageList::impl_getImageList( sal_Int16 nImageType )
 {
+    SvtMiscOptions aMiscOptions;
+
+    sal_Int16 nSymbolsStyle = aMiscOptions.GetCurrentSymbolsStyle();
+    if ( nSymbolsStyle != m_nSymbolsStyle )
+    {
+        m_nSymbolsStyle = nSymbolsStyle;
+        for ( sal_Int32 n=0; n < ImageType_COUNT; n++ )
+            delete m_pImageList[n], m_pImageList[n] = NULL;
+    }
+
     if ( !m_pImageList[nImageType] )
     {
         m_pImageList[nImageType] = new ImageList( m_aImageNameVector,
Index: framework/source/uielement/addonstoolbarmanager.cxx
===================================================================
RCS file: /cvs/framework/framework/source/uielement/addonstoolbarmanager.cxx,v
retrieving revision 1.6
retrieving revision 1.4.106.3
diff -u -p -u -p -r1.6 -r1.4.106.3
--- framework/source/uielement/addonstoolbarmanager.cxx	11 Nov 2005 12:07:42 -0000	1.6
+++ framework/source/uielement/addonstoolbarmanager.cxx	30 Nov 2005 14:30:07 -0000	1.4.106.3
@@ -242,8 +242,7 @@ void SAL_CALL AddonsToolBarManager::disp
 
 void AddonsToolBarManager::RefreshImages()
 {
-    sal_Int16 nSymbolSet = GetCurrentSymbolSize();
-    sal_Bool  bBigImages( nSymbolSet == SFX_SYMBOLS_LARGE );
+    sal_Bool  bBigImages( SvtMiscOptions().AreCurrentSymbolsLarge() );
     for ( USHORT nPos = 0; nPos < m_pToolBar->GetItemCount(); nPos++ )
     {
         USHORT nId( m_pToolBar->GetItemId( nPos ) );
@@ -273,7 +272,6 @@ void AddonsToolBarManager::FillToolbar( 
         return;
     
     USHORT    nId( 1 );
-    sal_Int16 nSymbolSet( GetCurrentSymbolSize() );
 
     RemoveControllers();
 	
Index: framework/source/uielement/menubarmanager.cxx
===================================================================
RCS file: /cvs/framework/framework/source/uielement/menubarmanager.cxx,v
retrieving revision 1.29
retrieving revision 1.26.52.3
diff -u -p -u -p -r1.29 -r1.26.52.3
--- framework/source/uielement/menubarmanager.cxx	11 Nov 2005 12:07:59 -0000	1.29
+++ framework/source/uielement/menubarmanager.cxx	30 Nov 2005 14:30:15 -0000	1.26.52.3
@@ -192,6 +192,10 @@
 #include <rtl/logfile.hxx>
 #endif
 
+#ifndef INCLUDED_SVTOOLS_MISCOPT_HXX
+#include "svtools/miscopt.hxx"
+#endif
+
 //_________________________________________________________________________________________________________________
 //	namespace
 //_________________________________________________________________________________________________________________
@@ -292,6 +296,7 @@ MenuBarManager::MenuBarManager(
     , m_bModuleIdentified( sal_False )
     , m_bRetrieveImages( sal_False )
     , m_bAcceleratorCfg( sal_False )
+    , m_nSymbolsStyle( SvtMiscOptions().GetCurrentSymbolsStyle() )
 {
     m_xPopupMenuControllerRegistration = Reference< ::com::sun::star::frame::XUIControllerRegistration >(
 		getServiceFactory()->createInstance( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.frame.PopupMenuControllerFactory" ))),
@@ -312,6 +317,7 @@ MenuBarManager::MenuBarManager(
     , m_bModuleIdentified( sal_False )
     , m_bRetrieveImages( sal_False )
     , m_bAcceleratorCfg( sal_False )
+    , m_nSymbolsStyle( SvtMiscOptions().GetCurrentSymbolsStyle() )
 {
 	m_bActive			= sal_False;
 	m_bDeleteMenu		= bDelete;
@@ -399,6 +405,7 @@ MenuBarManager::MenuBarManager(
     , m_bModuleIdentified( sal_False )
     , m_bRetrieveImages( sal_False )
     , m_bAcceleratorCfg( sal_False )
+    , m_nSymbolsStyle( SvtMiscOptions().GetCurrentSymbolsStyle() )
 {
 	m_bActive			= sal_False;
 	m_bDeleteMenu		= bDelete;
@@ -1077,15 +1084,18 @@ IMPL_LINK( MenuBarManager, Activate, Men
 		// Check if some modes have changed so we have to update our menu images
 		const StyleSettings& rSettings = Application::GetSettings().GetStyleSettings();
 		sal_Bool bIsHiContrast = rSettings.GetMenuColor().IsDark();
+		sal_Int16 nSymbolsStyle = SvtMiscOptions().GetCurrentSymbolsStyle();
 
 		if ( m_bRetrieveImages ||
              m_bWasHiContrast != bIsHiContrast ||
-             bShowMenuImages != m_bShowMenuImages )
+             bShowMenuImages != m_bShowMenuImages ||
+             nSymbolsStyle != m_nSymbolsStyle )
 		{
 			// The mode changed so we have to replace all images
 			m_bWasHiContrast	= bIsHiContrast;
 			m_bShowMenuImages	= bShowMenuImages;
 			m_bRetrieveImages	= sal_False;
+			m_nSymbolsStyle		= nSymbolsStyle;
 			AddonsOptions		aAddonOptions;
 
 			for ( USHORT nPos = 0; nPos < pMenu->GetItemCount(); nPos++ )
Index: framework/source/uielement/toolbarmanager.cxx
===================================================================
RCS file: /cvs/framework/framework/source/uielement/toolbarmanager.cxx,v
retrieving revision 1.22
retrieving revision 1.19.4.4
diff -u -p -u -p -r1.22 -r1.19.4.4
--- framework/source/uielement/toolbarmanager.cxx	11 Nov 2005 14:14:06 -0000	1.22
+++ framework/source/uielement/toolbarmanager.cxx	30 Nov 2005 14:30:40 -0000	1.19.4.4
@@ -293,7 +293,7 @@ ToolBarManager::ToolBarManager( const Re
     m_pToolBar( pToolBar ),
     m_bDisposed( sal_False ),
     m_bIsHiContrast( pToolBar->GetDisplayBackground().GetColor().IsDark() ),
-    m_bSmallSymbols( GetCurrentSymbolSize() == SFX_SYMBOLS_SMALL ),
+    m_bSmallSymbols( !SvtMiscOptions().AreCurrentSymbolsLarge() ),
     m_bModuleIdentified( sal_False ),
     m_aResourceName( rResourceName ),
     m_bAddedToTaskPaneList( sal_True ),
@@ -302,7 +302,8 @@ ToolBarManager::ToolBarManager( const Re
     m_bImageOrientationRegistered( sal_False ),
     m_bImageMirrored( sal_False ),
     m_bCanBeCustomized( sal_True ),
-    m_lImageRotation( 0 )
+    m_lImageRotation( 0 ),
+    m_nSymbolsStyle( SvtMiscOptions().GetCurrentSymbolsStyle() )
 {
     Window* pWindow = m_pToolBar;
     while ( pWindow && !pWindow->IsSystemWindow() )
@@ -396,10 +397,19 @@ void ToolBarManager::CheckAndUpdateImage
 	    m_bIsHiContrast = sal_False;
 	}
 
-    if ( m_bSmallSymbols != ( GetCurrentSymbolSize() == SFX_SYMBOLS_SMALL ))
+    SvtMiscOptions aMiscOptions;
+    bool bCurrentSymbolsSmall = !aMiscOptions.AreCurrentSymbolsLarge();
+    if ( m_bSmallSymbols != bCurrentSymbolsSmall )
     {
         bRefreshImages = sal_True;
-        m_bSmallSymbols = ( GetCurrentSymbolSize() == SFX_SYMBOLS_SMALL );
+        m_bSmallSymbols = bCurrentSymbolsSmall;
+    }
+
+    sal_Int16 nCurrentSymbolsStyle = aMiscOptions.GetCurrentSymbolsStyle();
+    if ( m_nSymbolsStyle != nCurrentSymbolsStyle )
+    {
+        bRefreshImages = sal_True;
+        m_nSymbolsStyle = nCurrentSymbolsStyle;
     }
 
     // Refresh images if requested
@@ -411,8 +421,7 @@ void ToolBarManager::RefreshImages()
 {
     ResetableGuard aGuard( m_aLock );
 
-    sal_Int16 nSymbolSet = GetCurrentSymbolSize();
-    sal_Bool  bBigImages( nSymbolSet == SFX_SYMBOLS_LARGE );
+    sal_Bool  bBigImages( SvtMiscOptions().AreCurrentSymbolsLarge() );
     for ( USHORT nPos = 0; nPos < m_pToolBar->GetItemCount(); nPos++ )
     {
         USHORT nId( m_pToolBar->GetItemId( nPos ) );
@@ -689,7 +698,7 @@ void SAL_CALL ToolBarManager::elementIns
     Reference< XNameAccess > xNameAccess;
     sal_Int16                nImageType;
     sal_Int16                nCurrentImageType = getImageTypeFromBools(
-                                                    ( GetCurrentSymbolSize() == SFX_SYMBOLS_LARGE ),
+                                                    SvtMiscOptions().AreCurrentSymbolsLarge(),
                                                     m_bIsHiContrast );
 
     if (( Event.aInfo >>= nImageType ) &&
@@ -739,7 +748,7 @@ void SAL_CALL ToolBarManager::elementRem
     Reference< XNameAccess > xNameAccess;
     sal_Int16                nImageType;
     sal_Int16                nCurrentImageType = getImageTypeFromBools(
-                                                    ( GetCurrentSymbolSize() == SFX_SYMBOLS_LARGE ),
+                                                    SvtMiscOptions().AreCurrentSymbolsLarge(),
                                                     m_bIsHiContrast );
 
     if (( Event.aInfo >>= nImageType ) &&
@@ -792,7 +801,7 @@ void SAL_CALL ToolBarManager::elementRep
     Reference< XNameAccess > xNameAccess;
     sal_Int16                nImageType;
     sal_Int16                nCurrentImageType = getImageTypeFromBools(
-                                                    ( GetCurrentSymbolSize() == SFX_SYMBOLS_LARGE ),
+                                                    SvtMiscOptions().AreCurrentSymbolsLarge(),
                                                     m_bIsHiContrast );
 
     if (( Event.aInfo >>= nImageType ) &&
@@ -830,24 +839,6 @@ void SAL_CALL ToolBarManager::elementRep
     }
 }
 
-sal_Int16 ToolBarManager::GetCurrentSymbolSize()
-{
-    sal_Int16 eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    return eOptSymbolSet;
-}
-
 void ToolBarManager::RemoveControllers()
 {
     ResetableGuard aGuard( m_aLock );
@@ -1361,8 +1352,6 @@ void ToolBarManager::RequestImages()
 {
     RTL_LOGFILE_CONTEXT( aLog, "framework (cd100003) ::ToolBarManager::RequestImages" );
 
-    sal_Int16 nSymbolSet( ToolBarManager::GetCurrentSymbolSize() );
-
     // Request images from image manager
     Sequence< rtl::OUString > aCmdURLSeq( m_aCommandMap.size() );
     Sequence< Reference< XGraphic > > aDocGraphicSeq;
@@ -1377,7 +1366,7 @@ void ToolBarManager::RequestImages()
     }
 
     m_bIsHiContrast = m_pToolBar->GetDisplayBackground().GetColor().IsDark();
-    sal_Int16 j = getImageTypeFromBools( ( nSymbolSet == SFX_SYMBOLS_LARGE ), m_bIsHiContrast );
+    sal_Int16 j = getImageTypeFromBools( SvtMiscOptions().AreCurrentSymbolsLarge(), m_bIsHiContrast );
 
     if ( m_xDocImageManager.is() )
         aDocGraphicSeq = m_xDocImageManager->getImages( j, aCmdURLSeq );
Index: svtools/inc/imgdef.hxx
===================================================================
RCS file: /cvs/util/svtools/inc/imgdef.hxx,v
retrieving revision 1.3
retrieving revision 1.2.890.4
diff -u -p -u -p -r1.3 -r1.2.890.4
--- svtools/inc/imgdef.hxx	8 Sep 2005 09:42:15 -0000	1.3
+++ svtools/inc/imgdef.hxx	1 Nov 2005 21:37:38 -0000	1.2.890.4
@@ -36,11 +36,20 @@
 #ifndef _SVTOOLS_IMGDEF_HXX
 #define _SVTOOLS_IMGDEF_HXX
 
-enum SfxSymbolSet
+enum SfxSymbolsSize
 {
-	SFX_SYMBOLS_SMALL,
-    SFX_SYMBOLS_LARGE,
-	SFX_SYMBOLS_AUTO
+    SFX_SYMBOLS_SIZE_SMALL,
+    SFX_SYMBOLS_SIZE_LARGE,
+    SFX_SYMBOLS_SIZE_AUTO
+};
+
+enum SfxSymbolsStyle
+{
+    SFX_SYMBOLS_STYLE_AUTO,
+    SFX_SYMBOLS_STYLE_DEFAULT,
+    SFX_SYMBOLS_STYLE_HICONTRAST,
+    SFX_SYMBOLS_STYLE_INDUSTRIAL
+//    SFX_SYMBOLS_STYLE_CRYSTAL
 };
 
 #define SFX_TOOLBOX_CHANGESYMBOLSET		0x0001
Index: svtools/inc/miscopt.hxx
===================================================================
RCS file: /cvs/util/svtools/inc/miscopt.hxx,v
retrieving revision 1.10
retrieving revision 1.8.112.4
diff -u -p -u -p -r1.10 -r1.8.112.4
--- svtools/inc/miscopt.hxx	11 Nov 2005 12:11:31 -0000	1.10
+++ svtools/inc/miscopt.hxx	30 Nov 2005 14:32:14 -0000	1.8.112.4
@@ -136,9 +136,17 @@ class SVL_DLLPUBLIC SvtMiscOptions
         void        SetPluginsEnabled( sal_Bool bEnable );
         sal_Bool    IsPluginsEnabledReadOnly() const;
 
-        sal_Int16   GetSymbolSet() const;
-        void        SetSymbolSet( sal_Int16 eSet );
-        sal_Bool    IsGetSymbolSetReadOnly() const;
+        sal_Int16   GetSymbolsSize() const;
+        void        SetSymbolsSize( sal_Int16 eSet );
+        sal_Int16   GetCurrentSymbolsSize() const;
+        bool        AreCurrentSymbolsLarge() const;
+        sal_Bool    IsGetSymbolsSizeReadOnly() const;
+
+        sal_Int16   GetSymbolsStyle() const;
+        void        SetSymbolsStyle( sal_Int16 eSet );
+        sal_Int16   GetCurrentSymbolsStyle() const;
+        ::rtl::OUString GetCurrentSymbolsStyleName() const;
+        sal_Bool    IsGetSymbolsStyleReadOnly() const;
 
         sal_Int16   GetToolboxStyle() const;
         void        SetToolboxStyle( sal_Int16 nStyle );
Index: svtools/source/config/miscopt.cxx
===================================================================
RCS file: /cvs/util/svtools/source/config/miscopt.cxx,v
retrieving revision 1.14
retrieving revision 1.11.126.8
diff -u -p -u -p -r1.14 -r1.11.126.8
--- svtools/source/config/miscopt.cxx	11 Nov 2005 13:51:22 -0000	1.14
+++ svtools/source/config/miscopt.cxx	2 Dec 2005 10:05:01 -0000	1.11.126.8
@@ -78,6 +78,9 @@
 #include <rtl/logfile.hxx>
 #include "itemholder1.hxx"
 
+#include <imgdef.hxx>
+#include <vcl/svapp.hxx>
+
 //_________________________________________________________________________________________________________________
 //	namespaces
 //_________________________________________________________________________________________________________________
@@ -104,8 +107,10 @@ using namespace ::com::sun::star;
 #define PROPERTYHANDLE_TOOLBOXSTYLE			2
 #define PROPERTYNAME_USESYSTEMFILEDIALOG	ASCII_STR("UseSystemFileDialog")
 #define PROPERTYHANDLE_USESYSTEMFILEDIALOG	3
+#define PROPERTYNAME_SYMBOLSSTYLE			ASCII_STR("SymbolsStyle")
+#define PROPERTYHANDLE_SYMBOLSSTYLE			4
 
-#define PROPERTYCOUNT						4
+#define PROPERTYCOUNT						5
 
 #define VCL_TOOLBOX_STYLE_FLAT				((USHORT)0x0004) // from <vcl/toolbox.hxx>
 
@@ -127,8 +132,9 @@ class SvtMiscOptions_Impl : public Confi
     sal_Bool    m_bIsUseSystemFileDialogRO;
     sal_Bool    m_bPluginsEnabled;
     sal_Bool    m_bIsPluginsEnabledRO;
-    sal_Int16   m_nSymbolSet;
-    sal_Bool    m_bIsSymbolSetRO;
+    sal_Int16   m_nSymbolsSize;
+    sal_Bool    m_bIsSymbolsSizeRO;
+    sal_Bool    m_bIsSymbolsStyleRO;
     sal_Int16   m_nToolboxStyle;
     sal_Bool    m_bIsToolboxStyleRO;
 
@@ -207,13 +213,26 @@ class SvtMiscOptions_Impl : public Confi
         inline sal_Bool IsPluginsEnabledReadOnly() const
         { return m_bIsPluginsEnabledRO; }
 
-        inline sal_Int16 GetSymbolSet()
-        { return m_nSymbolSet; }
+        inline sal_Int16 GetSymbolsSize()
+        { return m_nSymbolsSize; }
+
+        void SetSymbolsSize( sal_Int16 nSet );
 
-        void SetSymbolSet( sal_Int16 nSet );
+        inline sal_Bool IsGetSymbolsSizeReadOnly()
+        { return m_bIsSymbolsSizeRO; }
 
-        inline sal_Bool IsGetSymbolSetReadOnly()
-        { return m_bIsSymbolSetRO; }
+        sal_Int16 GetSymbolsStyle() const;
+        ::rtl::OUString GetSymbolsStyleName() const;
+        sal_Int16 GetCurrentSymbolsStyle() const;
+
+        inline void SetSymbolsStyle( sal_Int16 nSet )
+        { ImplSetSymbolsStyle( true, nSet, ::rtl::OUString() ); }
+		
+        inline void SetSymbolsStyleName( ::rtl::OUString &rName )
+        { ImplSetSymbolsStyle( false, 0, rName ); }
+
+        inline sal_Bool IsGetSymbolsStyleReadOnly()
+        { return m_bIsSymbolsStyleRO; }
 
         // translate to VCL settings ( "0" = 3D, "1" = FLAT )
         inline sal_Int16 GetToolboxStyle()
@@ -249,12 +268,43 @@ class SvtMiscOptions_Impl : public Confi
 		*//*-*****************************************************************************************************/
 
 		static Sequence< OUString > GetPropertyNames();
+
+    protected:
+        void ImplSetSymbolsStyle( bool bValue, sal_Int16 nSet, const ::rtl::OUString &rName );
 };
 
 //_________________________________________________________________________________________________________________
 //	definitions
 //_________________________________________________________________________________________________________________
 
+static sal_Int16 implSymbolsStyleFromVCL( ULONG nStyle )
+{
+	switch ( nStyle )
+	{
+		case STYLE_SYMBOLS_AUTO:       return SFX_SYMBOLS_STYLE_AUTO;
+		case STYLE_SYMBOLS_DEFAULT:    return SFX_SYMBOLS_STYLE_DEFAULT;
+		case STYLE_SYMBOLS_HICONTRAST: return SFX_SYMBOLS_STYLE_HICONTRAST;
+		case STYLE_SYMBOLS_INDUSTRIAL: return SFX_SYMBOLS_STYLE_INDUSTRIAL;
+//		case STYLE_SYMBOLS_CRYSTAL:    return SFX_SYMBOLS_STYLE_CRYSTAL;
+	}
+
+	return SFX_SYMBOLS_STYLE_AUTO;
+}
+
+static ULONG implSymbolsStyleToVCL( sal_Int16 nStyle )
+{
+	switch ( nStyle )
+	{
+		case SFX_SYMBOLS_STYLE_AUTO:       return STYLE_SYMBOLS_AUTO;
+		case SFX_SYMBOLS_STYLE_DEFAULT:    return STYLE_SYMBOLS_DEFAULT;
+		case SFX_SYMBOLS_STYLE_HICONTRAST: return STYLE_SYMBOLS_HICONTRAST;
+		case SFX_SYMBOLS_STYLE_INDUSTRIAL: return STYLE_SYMBOLS_INDUSTRIAL;
+//		case SFX_SYMBOLS_STYLE_CRYSTAL:    return STYLE_SYMBOLS_CRYSTAL;
+	}
+
+	return STYLE_SYMBOLS_AUTO;
+}
+
 //*****************************************************************************************************************
 //	constructor
 //*****************************************************************************************************************
@@ -266,8 +316,9 @@ SvtMiscOptions_Impl::SvtMiscOptions_Impl
     , m_bIsUseSystemFileDialogRO( sal_False )
     , m_bPluginsEnabled( sal_False )
     , m_bIsPluginsEnabledRO( sal_False )
-    , m_nSymbolSet( 0 )
-    , m_bIsSymbolSetRO( sal_False )
+    , m_nSymbolsSize( 0 )
+    , m_bIsSymbolsSizeRO( sal_False )
+    , m_bIsSymbolsStyleRO( sal_False )
     , m_nToolboxStyle( 1 )
     , m_bIsToolboxStyleRO( sal_False )
 
@@ -302,9 +353,9 @@ SvtMiscOptions_Impl::SvtMiscOptions_Impl
 
             case PROPERTYHANDLE_SYMBOLSET :
             {
-                if( !(seqValues[nProperty] >>= m_nSymbolSet) )
+                if( !(seqValues[nProperty] >>= m_nSymbolsSize) )
                     DBG_ERROR("Wrong type of \"Misc\\SymbolSet\"!" );
-                m_bIsSymbolSetRO = seqRO[nProperty];
+                m_bIsSymbolsSizeRO = seqRO[nProperty];
                 break;
             }
 
@@ -323,6 +374,17 @@ SvtMiscOptions_Impl::SvtMiscOptions_Impl
                 m_bIsUseSystemFileDialogRO = seqRO[nProperty];
                 break;
             }
+
+            case PROPERTYHANDLE_SYMBOLSSTYLE :
+            {
+                ::rtl::OUString aSymbolsStyle;
+                if( seqValues[nProperty] >>= aSymbolsStyle )
+                    SetSymbolsStyleName( aSymbolsStyle );
+                else
+                    DBG_ERROR("Wrong type of \"Misc\\SymbolsStyle\"!" );
+                m_bIsSymbolsStyleRO = seqRO[nProperty];
+                break;
+            }
         }
 	}
 
@@ -385,7 +447,7 @@ void SvtMiscOptions_Impl::Load( const Se
                                                         }
                                                     break;
             case PROPERTYHANDLE_SYMBOLSET           :   {
-                                                            if( !(seqValues[nProperty] >>= m_nSymbolSet) )
+                                                            if( !(seqValues[nProperty] >>= m_nSymbolsSize) )
                                                                 DBG_ERROR("Wrong type of \"Misc\\SymbolSet\"!" );
                                                         }
                                                     break;
@@ -399,6 +461,14 @@ void SvtMiscOptions_Impl::Load( const Se
                                                                 DBG_ERROR("Wrong type of \"Misc\\PluginsEnabled\"!" );
                                                         }
                                                     break;
+            case PROPERTYHANDLE_SYMBOLSSTYLE        :   {
+                                                            ::rtl::OUString aSymbolsStyle;
+                                                            if( seqValues[nProperty] >>= aSymbolsStyle )
+                                                                SetSymbolsStyleName( aSymbolsStyle );
+                                                            else
+                                                                DBG_ERROR("Wrong type of \"Misc\\SymbolsStyle\"!" );
+                                                        }
+                                                    break;
         }
     }
 }
@@ -434,13 +504,50 @@ void SvtMiscOptions_Impl::SetToolboxStyl
 	CallListeners();
 }
 
-void SvtMiscOptions_Impl::SetSymbolSet( sal_Int16 nSet )
+void SvtMiscOptions_Impl::SetSymbolsSize( sal_Int16 nSet )
 {
-    m_nSymbolSet = nSet;
+    m_nSymbolsSize = nSet;
     SetModified();
 	CallListeners();
 }
 
+sal_Int16 SvtMiscOptions_Impl::GetSymbolsStyle() const
+{
+	return implSymbolsStyleFromVCL( Application::GetSettings().GetStyleSettings().GetSymbolsStyle() );
+}
+
+::rtl::OUString SvtMiscOptions_Impl::GetSymbolsStyleName() const
+{
+	return Application::GetSettings().GetStyleSettings().GetSymbolsStyleName();
+}
+
+sal_Int16 SvtMiscOptions_Impl::GetCurrentSymbolsStyle() const
+{
+	return implSymbolsStyleFromVCL( Application::GetSettings().GetStyleSettings().GetCurrentSymbolsStyle() );
+}
+
+void SvtMiscOptions_Impl::ImplSetSymbolsStyle( bool bValue, sal_Int16 nSet, const ::rtl::OUString &rName )
+{
+	if ( ( bValue && ( nSet != GetSymbolsStyle() ) ) ||
+		 ( !bValue && ( rName != GetSymbolsStyleName() ) ) )
+	{
+		AllSettings aAllSettings = Application::GetSettings();
+		StyleSettings aStyleSettings = aAllSettings.GetStyleSettings();
+		
+		if ( bValue )
+			aStyleSettings.SetSymbolsStyle( implSymbolsStyleToVCL( nSet ) );
+		else
+			aStyleSettings.SetSymbolsStyleName( rName );
+		
+		aAllSettings.SetStyleSettings(aStyleSettings);
+		Application::MergeSystemSettings( aAllSettings );
+		Application::SetSettings(aAllSettings);
+
+		SetModified();
+		CallListeners();
+	}
+}
+
 void SvtMiscOptions_Impl::SetPluginsEnabled( sal_Bool bEnable )
 {
     m_bPluginsEnabled = bEnable;
@@ -479,8 +586,8 @@ void SvtMiscOptions_Impl::Commit()
 
             case PROPERTYHANDLE_SYMBOLSET :
             {
-                if ( !m_bIsSymbolSetRO )
-                   seqValues[nProperty] <<= m_nSymbolSet;
+                if ( !m_bIsSymbolsSizeRO )
+                   seqValues[nProperty] <<= m_nSymbolsSize;
                 break;
             }
 
@@ -497,6 +604,13 @@ void SvtMiscOptions_Impl::Commit()
                     seqValues[nProperty] <<= m_bUseSystemFileDialog;
                 break;
             }
+
+            case PROPERTYHANDLE_SYMBOLSSTYLE :
+			{
+				if ( !m_bIsSymbolsStyleRO )
+					seqValues[nProperty] <<= GetSymbolsStyleName();
+				break;
+			}
         }
 	}
 	// Set properties in configuration.
@@ -514,7 +628,8 @@ Sequence< OUString > SvtMiscOptions_Impl
         PROPERTYNAME_PLUGINSENABLED,
         PROPERTYNAME_SYMBOLSET,
         PROPERTYNAME_TOOLBOXSTYLE,
-        PROPERTYNAME_USESYSTEMFILEDIALOG
+        PROPERTYNAME_USESYSTEMFILEDIALOG,
+        PROPERTYNAME_SYMBOLSSTYLE
 	};
 
 	// Initialize return sequence with these list ...
@@ -597,19 +712,67 @@ sal_Bool SvtMiscOptions::IsPluginsEnable
     return m_pDataContainer->IsPluginsEnabledReadOnly();
 }
 
-sal_Int16 SvtMiscOptions::GetSymbolSet() const
+sal_Int16 SvtMiscOptions::GetSymbolsSize() const
+{
+    return m_pDataContainer->GetSymbolsSize();
+}
+
+void SvtMiscOptions::SetSymbolsSize( sal_Int16 nSet )
+{
+    m_pDataContainer->SetSymbolsSize( nSet );
+}
+
+sal_Int16 SvtMiscOptions::GetCurrentSymbolsSize() const
+{
+    sal_Int16 eOptSymbolsSize = m_pDataContainer->GetSymbolsSize();
+
+    if ( eOptSymbolsSize == SFX_SYMBOLS_SIZE_AUTO )
+    {
+        // Use system settings, we have to retrieve the toolbar icon size from the
+        // Application class
+        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
+        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
+            eOptSymbolsSize = SFX_SYMBOLS_SIZE_LARGE;
+        else
+            eOptSymbolsSize = SFX_SYMBOLS_SIZE_SMALL;
+    }
+
+    return eOptSymbolsSize;
+}
+
+bool SvtMiscOptions::AreCurrentSymbolsLarge() const
+{
+    return ( GetCurrentSymbolsSize() == SFX_SYMBOLS_SIZE_LARGE );
+}
+
+sal_Bool SvtMiscOptions::IsGetSymbolsSizeReadOnly() const
+{
+    return m_pDataContainer->IsGetSymbolsSizeReadOnly();
+}
+
+sal_Int16 SvtMiscOptions::GetSymbolsStyle() const
+{
+    return m_pDataContainer->GetSymbolsStyle();
+}
+
+sal_Int16 SvtMiscOptions::GetCurrentSymbolsStyle() const
+{
+    return m_pDataContainer->GetCurrentSymbolsStyle();
+}
+
+OUString SvtMiscOptions::GetCurrentSymbolsStyleName() const
 {
-    return m_pDataContainer->GetSymbolSet();
+    return Application::GetSettings().GetStyleSettings().GetCurrentSymbolsStyleName();
 }
 
-void SvtMiscOptions::SetSymbolSet( sal_Int16 nSet )
+void SvtMiscOptions::SetSymbolsStyle( sal_Int16 nSet )
 {
-    m_pDataContainer->SetSymbolSet( nSet );
+    m_pDataContainer->SetSymbolsStyle( nSet );
 }
 
-sal_Bool SvtMiscOptions::IsGetSymbolSetReadOnly() const
+sal_Bool SvtMiscOptions::IsGetSymbolsStyleReadOnly() const
 {
-    return m_pDataContainer->IsGetSymbolSetReadOnly();
+    return m_pDataContainer->IsGetSymbolsStyleReadOnly();
 }
 
 sal_Int16 SvtMiscOptions::GetToolboxStyle() const
Index: svtools/source/contnr/templwin.cxx
===================================================================
RCS file: /cvs/util/svtools/source/contnr/templwin.cxx,v
retrieving revision 1.68
retrieving revision 1.66.106.3
diff -u -p -u -p -r1.68 -r1.66.106.3
--- svtools/source/contnr/templwin.cxx	11 Nov 2005 12:14:15 -0000	1.68
+++ svtools/source/contnr/templwin.cxx	30 Nov 2005 14:41:04 -0000	1.66.106.3
@@ -1431,7 +1431,7 @@ void SvtTemplateWindow::InitToolBoxes()
 void SvtTemplateWindow::InitToolBoxImages()
 {
 	SvtMiscOptions aMiscOpt;
-	BOOL bLarge = ( aMiscOpt.GetSymbolSet() == SFX_SYMBOLS_LARGE );
+	BOOL bLarge = aMiscOpt.AreCurrentSymbolsLarge();
 	sal_Bool bHiContrast = aFileViewTB.GetBackground().GetColor().IsDark();
 
 	aFileViewTB.SetItemImage( TI_DOCTEMPLATE_BACK, Image( SvtResId(
Index: svtools/source/uno/toolboxcontroller.cxx
===================================================================
RCS file: /cvs/util/svtools/source/uno/toolboxcontroller.cxx,v
retrieving revision 1.8
retrieving revision 1.7.4.2
diff -u -p -u -p -r1.8 -r1.7.4.2
--- svtools/source/uno/toolboxcontroller.cxx	8 Sep 2005 16:55:29 -0000	1.8
+++ svtools/source/uno/toolboxcontroller.cxx	1 Nov 2005 23:20:02 -0000	1.7.4.2
@@ -669,21 +669,7 @@ sal_Bool ToolboxController::isBound() co
 
 sal_Bool ToolboxController::hasBigImages() const
 {
-    sal_Bool  bBig( sal_False );
-    sal_Int16 eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO ) 
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    return ( eOptSymbolSet == SFX_SYMBOLS_LARGE );
+    return SvtMiscOptions().AreCurrentSymbolsLarge();
 }
 
 sal_Bool ToolboxController::isHighContrast() const
Index: svtools/util/makefile.mk
===================================================================
RCS file: /cvs/util/svtools/util/makefile.mk,v
retrieving revision 1.55
retrieving revision 1.54.2.2
diff -u -p -u -p -r1.55 -r1.54.2.2
--- svtools/util/makefile.mk	8 Sep 2005 16:59:58 -0000	1.55
+++ svtools/util/makefile.mk	1 Nov 2005 23:23:01 -0000	1.54.2.2
@@ -195,6 +195,7 @@ SHL2IMPLIB= _isvl
 SHL2USE_EXPORTS=ordinal
 
 SHL2STDLIBS= \
+		$(VCLLIB)			\
 		$(UNOTOOLSLIB)		\
 		$(TOOLSLIB) 		\
 		$(UCBHELPERLIB)		\
Index: solenv/bin/hicontrast-to-theme.pl
===================================================================
RCS file: solenv/bin/hicontrast-to-theme.pl
diff -N solenv/bin/hicontrast-to-theme.pl
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ solenv/bin/hicontrast-to-theme.pl	11 Nov 2005 12:06:40 -0000	1.1.2.2
@@ -0,0 +1,126 @@
+:
+    eval 'exec perl -S $0 ${1+"$@"}'
+        if 0;
+#*************************************************************************
+#
+#   OpenOffice.org - a multi-platform office productivity suite
+#
+#   $RCSfile$
+#
+#   $Revision$
+#
+#   last change: $Author$ $Date$
+#
+#   The Contents of this file are made available subject to
+#   the terms of GNU Lesser General Public License Version 2.1.
+#
+#
+#     GNU Lesser General Public License Version 2.1
+#     =============================================
+#     Copyright 2005 by Sun Microsystems, Inc.
+#     901 San Antonio Road, Palo Alto, CA 94303, USA
+#
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License version 2.1, as published by the Free Software Foundation.
+#
+#     This library is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
+#
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+#     MA  02111-1307  USA
+#
+#*************************************************************************
+#
+# Create ordinary theme from HiContrast images.
+#
+
+use File::Copy;
+use File::Find;
+use File::Path;
+use File::Spec;
+
+( $src, $dst ) = @ARGV;
+
+if ( $src eq "" || $dst eq "" ) {
+    print STDERR "Usage: hicontrast-to-theme.pl src dest\n\n";
+    print STDERR "Create ordinary theme from HiContrast images.\n";
+    exit 1;
+}
+
+$dst = File::Spec->rel2abs( $dst );
+
+@hc_table = (
+    [ ".*_h.png",         "_h.png",    ".png" ],
+    [ ".*_sch.png",       "_sch.png",  ".png" ],
+    [ ".*_hc.png",        "_hc.png",   ".png" ],
+    [ "lch_.*.png",       "lch_",      "lc_" ],
+    [ "sch_.*.png",       "sch_",      "sc_" ],
+    [ "lch[0-9].*.png",   "lch",       "lc" ],
+    [ "sch[0-9].*.png",   "sch",       "sc" ],
+    [ "loh[0-9].*.png",   "loh",       "lo" ],
+    [ "lxh[0-9].*.png",   "lxh",       "lx" ],
+    [ "sxh[0-9].*.png",   "sxh",       "sx" ],
+    [ "avh[0-9].*.png",   "avh",       "av" ],
+    [ "avlh[0-9].*.png",  "avlh",      "avl" ],
+    [ "idh[0-9].*.png",   "idh",       "id" ],
+    [ "imh[0-9].*.png",   "imh",       "im" ],
+    [ "mih[0-9].*.png",   "mih",       "mi" ],
+    [ "tbh[0-9].*.png",   "tbh",       "tb" ],
+    [ "nah[0-9].*.png",   "nah",       "na" ],
+    [ "nch[0-9].*.png",   "nch",       "nc" ],
+    [ "nvh[0-9].*.png",   "nvh",       "nv" ],
+    [ "ouh[0-9].*.png",   "ouh",       "ou" ],
+    [ "ddh[0-9].*.png",   "ddh",       "dd" ],
+    [ "sfh[0-9].*.png",   "sfh",       "sf" ],
+    [ "srh[0-9].*.png",   "srh",       "sr" ],
+    [ "wrh[0-9].*.png",   "wrh",       "wr" ],
+    [ "alh[0-9].*.png",   "alh",       "al" ],
+    [ "ath[0-9].*.png",   "ath",       "at" ],
+    [ "bih[0-9].*.png",   "bih",       "bi" ],
+    [ "coh[0-9].*.png",   "coh",       "co" ],
+    [ "foh[0-9].*.png",   "foh",       "fo" ],
+    [ "fuh[0-9].*.png",   "fuh",       "fu" ],
+    [ "oph[0-9].*.png",   "oph",       "op" ],
+    [ "unh[0-9].*.png",   "unh",       "un" ],
+    [ "edh[0-9].*.png",   "edh",       "ed" ],
+    [ "cdh[0-9].*.png",   "cdh",       "cd" ],
+    [ "frh[0-9].*.png",   "frh",       "fr" ],
+    [ "fwh[0-9].*.png",   "fwh",       "fw" ],
+    [ "nuh[0-9].*.png",   "nuh",       "nu" ],
+    [ "prh[0-9].*.png",   "prh",       "pr" ],
+    [ "shh[0-9].*.png",   "shh",       "sh" ],
+    [ "trh[0-9].*.png",   "trh",       "tr" ],
+    [ "reh[0-9].*.png",   "reh",       "re" ],
+    [ "joh[0-9].*.png",   "joh",       "jo" ],
+    [ "fph[0-9].*.png",   "fph",       "fp" ],
+    [ "dah[0-9].*.png",   "dah",       "da" ]
+);
+
+sub copy_normalized {
+    $file = $_;
+    for $hc ( @hc_table ) {
+        ( $what, $from, $to ) = @$hc;
+        if ( $file =~ /$what/ ) {
+            my $dir = File::Spec->catdir( $dst, $File::Find::dir );
+
+            if ( ! -d $dir ) {
+                mkpath( $dir );
+            }
+
+            ( my $copy = $file ) =~ s/$from/$to/;
+            $copy = File::Spec->catfile( $dir, $copy );
+
+            copy( $file, $copy ) || die $!;
+
+            last;
+        }
+    }
+}
+
+chdir( $src );
+find( \&copy_normalized, '.' );
Index: solenv/inc/settings.mk
===================================================================
RCS file: /cvs/tools/solenv/inc/settings.mk,v
retrieving revision 1.178
retrieving revision 1.172.14.4
diff -u -p -u -p -r1.178 -r1.172.14.4
--- solenv/inc/settings.mk	14 Nov 2005 09:33:05 -0000	1.178
+++ solenv/inc/settings.mk	30 Nov 2005 14:51:54 -0000	1.172.14.4
@@ -1092,6 +1092,9 @@ RSCEXTINC=.
 RSCDEFS+= -DDEBUG
 .ENDIF
 
+# additional image sets
+CUSTOM_IMAGE_SETS=hicontrast industrial
+
 UNOIDL=unoidl
 
 # settings for mozilla idl compiler
Index: config_office/configure.in
===================================================================
RCS file: /cvs/tools/config_office/configure.in,v
retrieving revision 1.139
retrieving revision 1.128.2.3
diff -u -p -u -p -r1.139 -r1.128.2.3
--- config_office/configure.in	25 Oct 2005 11:23:57 -0000	1.139
+++ config_office/configure.in	30 Nov 2005 14:53:24 -0000	1.128.2.3
@@ -428,12 +428,6 @@ AC_ARG_ENABLE(macos9,
 [  --enable-macos9         Use this option option if you want to generate a
                           macos9 environment on macosx.
 ],,)
-AC_ARG_WITH(images,
-[  --with-images           Select different image sets to build & install in
-                          addition to the default set.
-
-                          Usage: --with-images="industrial crystal"
-],with_images=$withval,with_images=)
 AC_ARG_WITH(lang,
 [  --with-lang             Use this option to build OpenOffice.org with
                           additional language support. English (US) is always
@@ -4189,15 +4183,6 @@ else
    AC_MSG_RESULT([no])
 fi
 AC_SUBST(ENABLE_STATIC_GTK)
-
-AC_MSG_CHECKING([whether to use custom image sets])
-if test -z "$with_images"; then
-   AC_MSG_RESULT([no])
-else
-   CUSTOM_IMAGE_SETS="$with_images"
-   AC_MSG_RESULT([$CUSTOM_IMAGE_SETS])
-fi
-AC_SUBST(CUSTOM_IMAGE_SETS)
 
 dnl ===================================================================
 dnl Setting up the environment.
Index: config_office/set_soenv.in
===================================================================
RCS file: /cvs/tools/config_office/set_soenv.in,v
retrieving revision 1.78
retrieving revision 1.70.2.3
diff -u -p -u -p -r1.78 -r1.70.2.3
--- config_office/set_soenv.in	28 Oct 2005 11:59:53 -0000	1.78
+++ config_office/set_soenv.in	30 Nov 2005 14:53:34 -0000	1.70.2.3
@@ -1522,7 +1522,6 @@ ToFile( "ENABLE_KDE",        "@ENABLE_KD
 ToFile( "KDE_CFLAGS",        "@KDE_CFLAGS@",       "e" );
 ToFile( "KDE_LIBS",          "@KDE_LIBS@",         "e" );
 ToFile( "MOC",               "@MOC@",              "e" );
-ToFile( "CUSTOM_IMAGE_SETS", "@CUSTOM_IMAGE_SETS@","e" );
 ToFile( "PSPRINT",           "TRUE",             "e" );
 # [ed] 5/14/02 If we're building Aqua graphics, insert a C macro to indicate this.
 # There may be a better way to do this, like splitting unxmacxp into two, but
Index: xmlhelp/inc/provider/databases.hxx
===================================================================
RCS file: /cvs/util/xmlhelp/inc/provider/databases.hxx,v
retrieving revision 1.27
retrieving revision 1.25.10.3
diff -u -p -u -p -r1.27 -r1.25.10.3
--- xmlhelp/inc/provider/databases.hxx	11 Nov 2005 12:16:16 -0000	1.27
+++ xmlhelp/inc/provider/databases.hxx	30 Nov 2005 14:53:44 -0000	1.25.10.3
@@ -206,9 +206,9 @@ namespace chelp {
 		 *  Input is the installdirectory in system dependent notation
 		 */
 	  
-	  Databases( sal_Bool showBasic,
+		Databases( sal_Bool showBasic,
 				 const rtl::OUString& instPath,
-				 const rtl::OUString& imageZip,
+				 const com::sun::star::uno::Sequence< rtl::OUString >& imagesZipPaths,
 				 const rtl::OUString& productName,
 				 const rtl::OUString& productVersion,
 				 const rtl::OUString& vendorName,
@@ -362,7 +362,9 @@ namespace chelp {
             prodName,prodVersion,vendName,vendVersion,vendShort;
 		
 		rtl::OUString          m_aInstallDirectory;                // Installation directory
+		com::sun::star::uno::Sequence< rtl::OUString > m_aImagesZipPaths;
         rtl::OString           m_aImagesZipFileURL;
+		sal_Int16              m_nSymbolsStyle;
 		rtl::OUString          m_aInstallDirectoryWithoutEncoding; // a work around for a Sablot bug.
 		rtl::OUString          m_aInstallDirectoryAsSystemPath;    // Installation directory
 		
Index: xmlhelp/prj/build.lst
===================================================================
RCS file: /cvs/util/xmlhelp/prj/build.lst,v
retrieving revision 1.9
retrieving revision 1.8.154.2
diff -u -p -u -p -r1.9 -r1.8.154.2
--- xmlhelp/prj/build.lst	23 Sep 2005 13:48:31 -0000	1.9
+++ xmlhelp/prj/build.lst	2 Nov 2005 00:05:46 -0000	1.8.154.2
@@ -1,4 +1,4 @@
-xh	xmlhelp	:	ucbhelper XmlSearch SABLOT:sablot jut unoil BERKELEYDB:berkeleydb NULL
+xh	xmlhelp	:	ucbhelper XmlSearch SABLOT:sablot jut unoil BERKELEYDB:berkeleydb svtools NULL
 xh	xmlhelp									usr1	-	all	xh_mkout NULL
 xh	xmlhelp\source\helpprovider				nmake	-	all	xh_helpprovider NULL
 xh	xmlhelp\source\treeview					nmake	-	all	xh_treeview NULL
Index: xmlhelp/source/cxxhelp/provider/databases.cxx
===================================================================
RCS file: /cvs/util/xmlhelp/source/cxxhelp/provider/databases.cxx,v
retrieving revision 1.43
retrieving revision 1.41.10.3
diff -u -p -u -p -r1.43 -r1.41.10.3
--- xmlhelp/source/cxxhelp/provider/databases.cxx	11 Nov 2005 12:16:51 -0000	1.43
+++ xmlhelp/source/cxxhelp/provider/databases.cxx	30 Nov 2005 14:54:37 -0000	1.41.10.3
@@ -63,6 +63,9 @@
 #ifndef _RTL_USTRBUF_HXX_
 #include <rtl/ustrbuf.hxx>
 #endif
+#ifndef INCLUDED_SVTOOLS_MISCOPT_HXX
+#include <svtools/miscopt.hxx>
+#endif
 #include "inputstream.hxx"
 #include <algorithm>
 
@@ -77,7 +80,7 @@ using namespace com::sun::star::lang;
 
 Databases::Databases( sal_Bool showBasic,
 					  const rtl::OUString& instPath,
-                      const rtl::OUString& imageZip,
+					  const com::sun::star::uno::Sequence< rtl::OUString >& imagesZipPaths,
 					  const rtl::OUString& productName,
 					  const rtl::OUString& productVersion,
 					  const rtl::OUString& vendorName,
@@ -92,12 +95,9 @@ Databases::Databases( sal_Bool showBasic
 	  m_nCustomCSSDocLength( 0 ),
 	  m_pCustomCSSDoc( 0 ),
 	  m_aCSS(styleSheet.toAsciiLowerCase()),
-      m_aImagesZipFileURL(rtl::OUStringToOString(
-                              rtl::Uri::encode(
-                                  imageZip,
-                                  rtl_UriCharClassPchar,
-                                  rtl_UriEncodeIgnoreEscapes,
-                                  RTL_TEXTENCODING_UTF8 ),RTL_TEXTENCODING_UTF8)),
+	  m_aImagesZipPaths( imagesZipPaths ),
+	  m_aImagesZipFileURL(),
+	  m_nSymbolsStyle( 0 ),
 	  newProdName(rtl::OUString::createFromAscii( "$[officename]" ) ),
       newProdVersion(rtl::OUString::createFromAscii( "$[officeversion]" ) ),
       prodName( rtl::OUString::createFromAscii( "%PRODUCTNAME" ) ),
@@ -174,9 +174,66 @@ Databases::~Databases()
 
 }
 
+static bool impl_getZipFile(
+        Sequence< rtl::OUString > & rImagesZipPaths,
+        const rtl::OUString & rZipName,
+        rtl::OUString & rFileName )
+{
+    const rtl::OUString *pPathArray = rImagesZipPaths.getArray();
+    for ( int i = 0; i < rImagesZipPaths.getLength(); ++i )
+    {
+        rFileName = pPathArray[ i ];
+        if ( rFileName.getLength() )
+        {
+            if ( 1 + rFileName.lastIndexOf( '/' ) != rFileName.getLength() )
+            {
+                rFileName += rtl::OUString::createFromAscii( "/" );
+            }
+            rFileName += rZipName;
+
+            // test existence
+            osl::DirectoryItem aDirItem;
+            if ( osl::DirectoryItem::get( rFileName, aDirItem ) == osl::FileBase::E_None )
+                return true;
+        }
+    }
+    return false;
+}
 
 rtl::OString Databases::getImagesZipFileURL()
 {
+    sal_Int16 nSymbolsStyle = SvtMiscOptions().GetCurrentSymbolsStyle();
+    if ( !m_aImagesZipFileURL.getLength() || ( m_nSymbolsStyle != nSymbolsStyle ) )
+    {
+        m_nSymbolsStyle = nSymbolsStyle;
+
+        rtl::OUString aImageZip;
+        rtl::OUString aSymbolsStyleName = SvtMiscOptions().GetCurrentSymbolsStyleName();
+        bool bFound = false;
+
+        if ( aSymbolsStyleName.getLength() != 0 )
+        {
+            rtl::OUString aZipName = rtl::OUString::createFromAscii( "images_" );
+            aZipName += aSymbolsStyleName;
+            aZipName += rtl::OUString::createFromAscii( ".zip" );
+
+            bFound = impl_getZipFile( m_aImagesZipPaths, aZipName, aImageZip );
+        }
+
+        if ( ! bFound )
+            bFound = impl_getZipFile( m_aImagesZipPaths, rtl::OUString::createFromAscii( "images.zip" ), aImageZip );
+
+        if ( ! bFound )
+            aImageZip = rtl::OUString();
+
+        m_aImagesZipFileURL = rtl::OUStringToOString(
+                    rtl::Uri::encode(
+                        aImageZip,
+                        rtl_UriCharClassPchar,
+                        rtl_UriEncodeIgnoreEscapes,
+                        RTL_TEXTENCODING_UTF8 ), RTL_TEXTENCODING_UTF8 );
+    }
+
     return m_aImagesZipFileURL;
 }
 
Index: xmlhelp/source/cxxhelp/provider/provider.cxx
===================================================================
RCS file: /cvs/util/xmlhelp/source/cxxhelp/provider/provider.cxx,v
retrieving revision 1.19
retrieving revision 1.17.44.3
diff -u -p -u -p -r1.19 -r1.17.44.3
--- xmlhelp/source/cxxhelp/provider/provider.cxx	11 Nov 2005 12:17:07 -0000	1.19
+++ xmlhelp/source/cxxhelp/provider/provider.cxx	30 Nov 2005 14:54:45 -0000	1.17.44.3
@@ -370,36 +370,23 @@ void ContentProvider::init()
 	rtl::OUString vendorshort = vendorname;
 
 	
-    bool found = false;
+    Sequence< rtl::OUString > aImagesZipPaths( 2 );
     xHierAccess = getHierAccess( sProvider,
 								 "org.openoffice.Office.Common" );
-    rtl::OUString imageZip(getKey(xHierAccess,"Path/Current/UserConfig"));
-    subst(imageZip);
-    if(imageZip.getLength()) {
-        // test existence
-        if(1+imageZip.lastIndexOf('/') == imageZip.getLength())
-            imageZip += rtl::OUString::createFromAscii("images.zip");
-        else
-            imageZip += rtl::OUString::createFromAscii("/images.zip");
-        osl::DirectoryItem aDirItem;
-        if(osl::DirectoryItem::get(imageZip,aDirItem) == osl::FileBase::E_None)
-            found = true;
-    }
-    
-    if(!found) {
-        imageZip = getKey(xHierAccess,"Path/Current/Config");
-        subst(imageZip);
-        if(1+imageZip.lastIndexOf('/') == imageZip.getLength())
-            imageZip += rtl::OUString::createFromAscii("images.zip");
-        else
-            imageZip += rtl::OUString::createFromAscii("/images.zip");        
-    }
 	
-	sal_Bool showBasic = getBooleanKey(xHierAccess,"Help/ShowBasic");
+    rtl::OUString aPath( getKey( xHierAccess, "Path/Current/UserConfig" ) );
+    subst( aPath );
+    aImagesZipPaths[ 0 ] = aPath;
+
+    aPath = getKey( xHierAccess, "Path/Current/Config" );
+    subst( aPath );
+    aImagesZipPaths[ 1 ] = aPath;
+	
+    sal_Bool showBasic = getBooleanKey(xHierAccess,"Help/ShowBasic");
     m_pDatabases = new Databases( showBasic, 
 								  instPath,
-                                  imageZip,
-                                  productname,
+								  aImagesZipPaths,
+								  productname,
 								  productversion,
 								  vendorname,
 								  vendorversion,
Index: xmlhelp/util/makefile.mk
===================================================================
RCS file: /cvs/util/xmlhelp/util/makefile.mk,v
retrieving revision 1.8
retrieving revision 1.7.10.2
diff -u -p -u -p -r1.8 -r1.7.10.2
--- xmlhelp/util/makefile.mk	9 Sep 2005 12:27:33 -0000	1.8
+++ xmlhelp/util/makefile.mk	2 Nov 2005 00:12:04 -0000	1.7.10.2
@@ -78,6 +78,7 @@ SHL1STDLIBS=                     \
 	$(SABLOT3RDLIB)          \
 	$(EXPATASCII3RDLIB)      \
 	$(UCBHELPERLIB)          \
+	$(SVLLIB)             \
 	$(BERKELEYLIB)
 #	$(BERKELEYCPPLIB)
 
Index: sfx2/inc/imgmgr.hxx
===================================================================
RCS file: /cvs/framework/sfx2/inc/imgmgr.hxx,v
retrieving revision 1.16
retrieving revision 1.15.258.2
diff -u -p -u -p -r1.16 -r1.15.258.2
--- sfx2/inc/imgmgr.hxx	7 Sep 2005 16:58:13 -0000	1.16
+++ sfx2/inc/imgmgr.hxx	2 Nov 2005 00:19:15 -0000	1.15.258.2
@@ -61,7 +61,6 @@ class SFX2_DLLPUBLIC SfxImageManager
 	SfxImageManager_Impl* pImp;
 
 public:
-    static sal_Int16         GetCurrentSymbolSet();
     static SfxImageManager*  GetImageManager( SfxModule* );
 
                     SfxImageManager( SfxModule* pModule = 0 );
Index: sfx2/source/appl/appcfg.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/appl/appcfg.cxx,v
retrieving revision 1.63
retrieving revision 1.62.120.2
diff -u -p -u -p -r1.63 -r1.62.120.2
--- sfx2/source/appl/appcfg.cxx	7 Sep 2005 17:32:10 -0000	1.63
+++ sfx2/source/appl/appcfg.cxx	2 Nov 2005 00:34:34 -0000	1.62.120.2
@@ -289,18 +289,7 @@ BOOL SfxApplication::GetOptions( SfxItem
 					break;
     			case SID_ATTR_BUTTON_BIGSIZE :
                 {
-                    sal_Int16 eOptSymbolSet = aMiscOptions.GetSymbolSet();
-                    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-                    {
-                        // Use system settings, we have to retrieve the toolbar icon size from the
-                        // Application class
-                        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-                        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-                            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-                        else
-                            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-                    }
-					if(rSet.Put( SfxBoolItem( rPool.GetWhich( SID_ATTR_BUTTON_BIGSIZE ), eOptSymbolSet == SFX_SYMBOLS_LARGE)))
+					if( rSet.Put( SfxBoolItem( rPool.GetWhich( SID_ATTR_BUTTON_BIGSIZE ), aMiscOptions.AreCurrentSymbolsLarge() ) ) )
 						bRet = TRUE;
 					break;
                 }
@@ -750,7 +739,7 @@ void SfxApplication::SetOptions_Impl( co
     {
         DBG_ASSERT(pItem->ISA(SfxBoolItem), "BoolItem expected");
 		BOOL bBigSize = ( (const SfxBoolItem*)pItem )->GetValue();
-        aMiscOptions.SetSymbolSet( bBigSize ? SFX_SYMBOLS_LARGE : SFX_SYMBOLS_SMALL );
+        aMiscOptions.SetSymbolsSize( bBigSize ? SFX_SYMBOLS_SIZE_LARGE : SFX_SYMBOLS_SIZE_SMALL );
         SfxViewFrame* pViewFrame = SfxViewFrame::GetFirst();
         while ( pViewFrame )
         {
Index: sfx2/source/appl/newhelp.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/appl/newhelp.cxx,v
retrieving revision 1.114
retrieving revision 1.112.8.3
diff -u -p -u -p -r1.114 -r1.112.8.3
--- sfx2/source/appl/newhelp.cxx	4 Nov 2005 15:49:35 -0000	1.114
+++ sfx2/source/appl/newhelp.cxx	30 Nov 2005 14:57:10 -0000	1.112.8.3
@@ -2251,29 +2251,11 @@ sal_Bool SfxHelpTextWindow_Impl::HasSele
 	return bRet;
 }
 
-static sal_Int16 GetCurrentSymbolSet()
-{
-    sal_Int16   eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    return eOptSymbolSet;
-}
-
 // -----------------------------------------------------------------------
 
 void SfxHelpTextWindow_Impl::InitToolBoxImages()
 {
-	sal_Bool bLarge = ( GetCurrentSymbolSet() == SFX_SYMBOLS_LARGE );
+	sal_Bool bLarge = SvtMiscOptions().AreCurrentSymbolsLarge();
 	sal_Bool bHiContrast = GetBackground().GetColor().IsDark();
 
 	aIndexOnImage = Image( SfxResId(
Index: sfx2/source/toolbox/imgmgr.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/toolbox/imgmgr.cxx,v
retrieving revision 1.25
retrieving revision 1.24.308.2
diff -u -p -u -p -r1.25 -r1.24.308.2
--- sfx2/source/toolbox/imgmgr.cxx	7 Sep 2005 19:22:11 -0000	1.25
+++ sfx2/source/toolbox/imgmgr.cxx	2 Nov 2005 01:28:10 -0000	1.24.308.2
@@ -75,7 +75,7 @@ struct ToolBoxInf_Impl
 class SfxImageManager_Impl
 {
 public:
-    sal_Int16                       m_nSet;
+    sal_Int16                       m_nSymbolsSize;
     SvtMiscOptions		            m_aOpt;
     std::vector< ToolBoxInf_Impl* > m_aToolBoxes;
 	ImageList*			            m_pImageList[IMAGELIST_COUNT];
@@ -83,7 +83,7 @@ public:
 
     ImageList*              GetImageList( BOOL bBig, BOOL bHiContrast );
     Image                   GetImage( USHORT nId, BOOL bBig, BOOL bHiContrast );
-    void                    SetSymbolSet_Impl( sal_Int16 );
+    void                    SetSymbolsSize_Impl( sal_Int16 );
     
     DECL_LINK( OptionsChanged_Impl, void* );
     DECL_LINK( SettingsChanged_Impl, void* );
@@ -171,7 +171,7 @@ static sal_Int16 impl_convertBools( sal_
 
 SfxImageManager_Impl::SfxImageManager_Impl( SfxModule* pModule ) :
     m_pModule( pModule ),
-    m_nSet( SfxImageManager::GetCurrentSymbolSet() )
+    m_nSymbolsSize( SvtMiscOptions().GetCurrentSymbolsSize() )
 {
     for ( sal_uInt32 i = 0; i < IMAGELIST_COUNT; i++ )
         m_pImageList[i] = 0;
@@ -219,14 +219,14 @@ Image SfxImageManager_Impl::GetImage( US
 
 //-------------------------------------------------------------------------
 
-void SfxImageManager_Impl::SetSymbolSet_Impl( sal_Int16 nNewSet )
+void SfxImageManager_Impl::SetSymbolsSize_Impl( sal_Int16 nNewSymbolsSize )
 {
     ::vos::OGuard aGuard( Application::GetSolarMutex() );
     
-    if ( nNewSet != m_nSet )
+    if ( nNewSymbolsSize != m_nSymbolsSize )
 	{
-        m_nSet = nNewSet;
-        BOOL bLarge( m_nSet == SFX_SYMBOLS_LARGE );
+        m_nSymbolsSize = nNewSymbolsSize;
+        BOOL bLarge( m_nSymbolsSize == SFX_SYMBOLS_SIZE_LARGE );
 
         for ( sal_uInt32 n=0; n < m_aToolBoxes.size(); n++ )
 		{
@@ -268,7 +268,7 @@ void SfxImageManager_Impl::SetSymbolSet_
 
 IMPL_LINK( SfxImageManager_Impl, OptionsChanged_Impl, void*, pVoid )
 {
-    SetSymbolSet_Impl( SfxImageManager::GetCurrentSymbolSet() );
+    SetSymbolsSize_Impl( SvtMiscOptions().GetCurrentSymbolsSize() );
     return 0L;
 }
 
@@ -277,32 +277,14 @@ IMPL_LINK( SfxImageManager_Impl, Options
 IMPL_LINK( SfxImageManager_Impl, SettingsChanged_Impl, void*, pVoid )
 {
     // Check if toolbar button size have changed and we have to use system settings
-    sal_Int16 nSymbolSet = SfxImageManager::GetCurrentSymbolSet();
-    if ( m_nSet != nSymbolSet )
-        SetSymbolSet_Impl( nSymbolSet );
+    sal_Int16 nSymbolsSize = SvtMiscOptions().GetCurrentSymbolsSize();
+    if ( m_nSymbolsSize != nSymbolsSize )
+        SetSymbolsSize_Impl( nSymbolsSize );
     return 0L;
 }
 
 //-------------------------------------------------------------------------
 
-sal_Int16 SfxImageManager::GetCurrentSymbolSet()
-{
-    sal_Int16 eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    return eOptSymbolSet;
-}
-
 //=========================================================================
 
 SfxImageManager::SfxImageManager( SfxModule* pModule )
@@ -348,7 +330,7 @@ Image SfxImageManager::GetImage( USHORT 
 
 Image SfxImageManager::GetImage( USHORT nId, BOOL bHiContrast ) const
 {
-    BOOL bLarge = ( GetCurrentSymbolSet() == SFX_SYMBOLS_LARGE );
+    BOOL bLarge = SvtMiscOptions().AreCurrentSymbolsLarge();
     return GetImage( nId, bLarge, bHiContrast );
 }
 
@@ -373,7 +355,7 @@ Image SfxImageManager::SeekImage( USHORT
 
 Image SfxImageManager::SeekImage( USHORT nId, BOOL bHiContrast ) const
 {
-    BOOL bLarge = ( GetCurrentSymbolSet() == SFX_SYMBOLS_LARGE );
+    BOOL bLarge = SvtMiscOptions().AreCurrentSymbolsLarge();
     return SeekImage( nId, bLarge, bHiContrast );
 }
 
@@ -443,7 +425,7 @@ void SfxImageManager::SetImagesForceSize
 
 void SfxImageManager::SetImages( ToolBox& rToolBox )
 {
-	BOOL bLarge = ( pImp->m_nSet == SFX_SYMBOLS_LARGE );
+    BOOL bLarge = ( pImp->m_nSymbolsSize == SFX_SYMBOLS_SIZE_LARGE );
     BOOL bHiContrast = rToolBox.GetBackground().GetColor().IsDark();
     SetImagesForceSize( rToolBox, bHiContrast, bLarge );
 }
Index: sfx2/source/toolbox/tbxitem.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/toolbox/tbxitem.cxx,v
retrieving revision 1.53
retrieving revision 1.50.16.3
diff -u -p -u -p -r1.53 -r1.50.16.3
--- sfx2/source/toolbox/tbxitem.cxx	11 Nov 2005 14:24:46 -0000	1.53
+++ sfx2/source/toolbox/tbxitem.cxx	30 Nov 2005 15:00:51 -0000	1.50.16.3
@@ -1707,24 +1707,6 @@ SfxPopupWindow* SfxAppToolBoxControl_Imp
 	return 0;
 }
 
-static sal_Int16 GetCurrentSymbolSet()
-{
-    sal_Int16   eOptSymbolSet = SvtMiscOptions().GetSymbolSet();
-
-    if ( eOptSymbolSet == SFX_SYMBOLS_AUTO )
-    {
-        // Use system settings, we have to retrieve the toolbar icon size from the
-        // Application class
-        ULONG nStyleIconSize = Application::GetSettings().GetStyleSettings().GetToolbarIconSize();
-        if ( nStyleIconSize == STYLE_TOOLBAR_ICONSIZE_LARGE )
-            eOptSymbolSet = SFX_SYMBOLS_LARGE;
-        else
-            eOptSymbolSet = SFX_SYMBOLS_SMALL;
-    }
-
-    return eOptSymbolSet;
-}
-
 void SfxAppToolBoxControl_Impl::SetImage( const String &rURL )
 {
     /* We accept URL's here only, which exist as items of our internal popup menu.
@@ -1736,7 +1718,7 @@ void SfxAppToolBoxControl_Impl::SetImage
     if (!bValid)
         aURL = sFallback;
 
-	BOOL bBig = ( GetCurrentSymbolSet() == SFX_SYMBOLS_LARGE );
+    BOOL bBig = SvtMiscOptions().AreCurrentSymbolsLarge();
     BOOL bHC = GetToolBox().GetBackground().GetColor().IsDark();
     Image aImage = SvFileInformationManager::GetImageNoDefault( INetURLObject( aURL ), bBig, bHC );
     if ( !aImage )
