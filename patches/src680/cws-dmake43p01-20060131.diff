diff -Nur m148/dmake/acinclude.m4 dmake43p01/dmake/acinclude.m4
--- dmake/acinclude.m4	2004-10-22 10:03:07.000000000 +0200
+++ dmake/acinclude.m4	2005-04-22 03:04:34.000000000 +0200
@@ -1,14 +1,3 @@
 ##   -*- autoconf -*-
 
-dnl set the dmake root
-AC_DEFUN([AC_SET_DMAKEROOT],
-[
-if test "${prefix}" != NONE; then
-	DMAKEROOT=${prefix}/share/startup/startup.mk
-	export DMAKEROOT
-else
-	DMAKEROOT=startup.mk
-	export DMAKEROOT
-fi
-])
-
+dnl Currently no local macros are needed.
diff -Nur m148/dmake/aclocal.m4 dmake43p01/dmake/aclocal.m4
--- dmake/aclocal.m4	2004-10-22 10:03:37.000000000 +0200
+++ dmake/aclocal.m4	2005-09-20 02:50:39.000000000 +0200
@@ -1,7 +1,7 @@
-# generated automatically by aclocal 1.9.1 -*- Autoconf -*-
+# generated automatically by aclocal 1.9.6 -*- Autoconf -*-
 
-# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004
-# Free Software Foundation, Inc.
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
+# 2005  Free Software Foundation, Inc.
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -11,23 +11,11 @@
 # even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 # PARTICULAR PURPOSE.
 
-#                                                        -*- Autoconf -*-
-# Copyright (C) 2002, 2003  Free Software Foundation, Inc.
-# Generated from amversion.in; do not edit by hand.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+# Copyright (C) 2002, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
 # AM_AUTOMAKE_VERSION(VERSION)
 # ----------------------------
@@ -40,26 +28,15 @@
 # Call AM_AUTOMAKE_VERSION so it can be traced.
 # This function is AC_REQUIREd by AC_INIT_AUTOMAKE.
 AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],
-	 [AM_AUTOMAKE_VERSION([1.9.1])])
-
-# AM_AUX_DIR_EXPAND
+	 [AM_AUTOMAKE_VERSION([1.9.6])])
 
-# Copyright (C) 2001, 2003 Free Software Foundation, Inc.
+# AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
 # For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets
 # $ac_aux_dir to `$srcdir/foo'.  In other projects, it is set to
@@ -106,26 +83,16 @@
 am_aux_dir=`cd $ac_aux_dir && pwd`
 ])
 
-# AM_CONDITIONAL                                              -*- Autoconf -*-
-
-# Copyright (C) 1997, 2000, 2001, 2003, 2004 Free Software Foundation, Inc.
+# AM_CONDITIONAL                                            -*- Autoconf -*-
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 1997, 2000, 2001, 2003, 2004, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# serial 6
+# serial 7
 
 # AM_CONDITIONAL(NAME, SHELL-CONDITION)
 # -------------------------------------
@@ -149,26 +116,15 @@
 Usually this means the macro was only invoked conditionally.]])
 fi])])
 
-# serial 7						-*- Autoconf -*-
 
-# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004
+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005
 # Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
-
+# serial 8
 
 # There are a few dirty hacks below to avoid letting `AC_PROG_CC' be
 # written in clear, in which case automake, when reading aclocal.m4,
@@ -177,7 +133,6 @@
 # CC etc. in the Makefile, will ask for an AC_PROG_CC use...
 
 
-
 # _AM_DEPENDENCIES(NAME)
 # ----------------------
 # See how the compiler implements dependency checking.
@@ -317,27 +272,16 @@
 AC_SUBST([AMDEPBACKSLASH])
 ])
 
-# Generate code to set up dependency tracking.   -*- Autoconf -*-
-
-# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004
-#   Free Software Foundation, Inc.
+# Generate code to set up dependency tracking.              -*- Autoconf -*-
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-#serial 2
+#serial 3
 
 # _AM_OUTPUT_DEPENDENCY_COMMANDS
 # ------------------------------
@@ -396,54 +340,19 @@
      [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
 ])
 
-# Like AC_CONFIG_HEADER, but automatically create stamp file. -*- Autoconf -*-
-
-# Copyright (C) 1996, 1997, 2000, 2001, 2003 Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
-
-# serial 7
-
-# AM_CONFIG_HEADER is obsolete.  It has been replaced by AC_CONFIG_HEADERS.
-AU_DEFUN([AM_CONFIG_HEADER], [AC_CONFIG_HEADERS($@)])
+# Do all the work for Automake.                             -*- Autoconf -*-
 
-# Do all the work for Automake.                            -*- Autoconf -*-
-
-# This macro actually does too much some checks are only needed if
-# your package does certain things.  But this isn't really a big deal.
-
-# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005
 # Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# serial 12
 
-# serial 11
+# This macro actually does too much.  Some checks are only needed if
+# your package does certain things.  But this isn't really a big deal.
 
 # AM_INIT_AUTOMAKE(PACKAGE, VERSION, [NO-DEFINE])
 # AM_INIT_AUTOMAKE([OPTIONS])
@@ -545,51 +454,27 @@
 done
 echo "timestamp for $1" >`AS_DIRNAME([$1])`/stamp-h[]$_am_stamp_count])
 
+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
 # AM_PROG_INSTALL_SH
 # ------------------
 # Define $install_sh.
-
-# Copyright (C) 2001, 2003 Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
-
 AC_DEFUN([AM_PROG_INSTALL_SH],
 [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
 install_sh=${install_sh-"$am_aux_dir/install-sh"}
 AC_SUBST(install_sh)])
 
-#                                                          -*- Autoconf -*-
-# Copyright (C) 2003  Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# serial 1
+# serial 2
 
 # Check whether the underlying file-system supports filenames
 # with a leading dot.  For instance MS-DOS doesn't.
@@ -604,28 +489,17 @@
 rmdir .tst 2>/dev/null
 AC_SUBST([am__leading_dot])])
 
-# Add --enable-maintainer-mode option to configure.
+# Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-
 # From Jim Meyering
 
-# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004
+# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005
 # Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
-
-# serial 3
+# serial 4
 
 AC_DEFUN([AM_MAINTAINER_MODE],
 [AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])
@@ -644,26 +518,15 @@
 
 AU_DEFUN([jm_MAINTAINER_MODE], [AM_MAINTAINER_MODE])
 
-# Check to see how 'make' treats includes.	-*- Autoconf -*-
-
-# Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
+# Check to see how 'make' treats includes.	            -*- Autoconf -*-
 
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# serial 2
+# serial 3
 
 # AM_MAKE_INCLUDE()
 # -----------------
@@ -707,27 +570,16 @@
 rm -f confinc confmf
 ])
 
-#  -*- Autoconf -*-
+# Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-
 
+# Copyright (C) 1997, 1999, 2000, 2001, 2003, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# Copyright (C) 1997, 1999, 2000, 2001, 2003 Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
-
-# serial 3
+# serial 4
 
 # AM_MISSING_PROG(NAME, PROGRAM)
 # ------------------------------
@@ -753,27 +605,16 @@
 fi
 ])
 
+# Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
 # AM_PROG_MKDIR_P
 # ---------------
 # Check whether `mkdir -p' is supported, fallback to mkinstalldirs otherwise.
-
-# Copyright (C) 2003, 2004 Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
-
+#
 # Automake 1.8 used `mkdir -m 0755 -p --' to ensure that directories
 # created by `make install' are always world readable, even if the
 # installer happens to have an overly restrictive umask (e.g. 077).
@@ -827,26 +668,15 @@
 fi
 AC_SUBST([mkdir_p])])
 
-# Helper functions for option handling.                    -*- Autoconf -*-
-
-# Copyright (C) 2001, 2002, 2003  Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
+# Helper functions for option handling.                     -*- Autoconf -*-
 
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# serial 2
+# serial 3
 
 # _AM_MANGLE_OPTION(NAME)
 # -----------------------
@@ -871,28 +701,16 @@
 AC_DEFUN([_AM_IF_OPTION],
 [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
 
-#
-# Check to make sure that the build environment is sane.
-#
-
-# Copyright (C) 1996, 1997, 2000, 2001, 2003 Free Software Foundation, Inc.
+# Check to make sure that the build environment is sane.    -*- Autoconf -*-
 
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 1996, 1997, 2000, 2001, 2003, 2005
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
-# serial 3
+# serial 4
 
 # AM_SANITY_CHECK
 # ---------------
@@ -935,25 +753,14 @@
 fi
 AC_MSG_RESULT(yes)])
 
-# AM_PROG_INSTALL_STRIP
-
-# Copyright (C) 2001, 2003 Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
+# AM_PROG_INSTALL_STRIP
+# ---------------------
 # One issue with vendor `install' (even GNU) is that you can't
 # specify the program used to strip binaries.  This is especially
 # annoying in cross-compiling environments, where the build's strip
@@ -976,25 +783,13 @@
 
 # Check how to create a tarball.                            -*- Autoconf -*-
 
-# Copyright (C) 2004  Free Software Foundation, Inc.
-
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2, or (at your option)
-# any later version.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA.
-
-# serial 1
+# Copyright (C) 2004, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
 
+# serial 2
 
 # _AM_PROG_TAR(FORMAT)
 # --------------------
diff -Nur m148/dmake/autogen.sh dmake43p01/dmake/autogen.sh
--- dmake/autogen.sh	2003-03-25 15:02:08.000000000 +0100
+++ dmake/autogen.sh	2005-09-02 02:25:33.000000000 +0200
@@ -23,15 +23,12 @@
 (autoconf --version ) < /dev/null > /dev/null 2>&1 || {
 	echo
 	echo "You must have autoconf installed to compile $PROJECT."
-	echo "Get ftp://ftp.gnu.org/gnu/gettext/autoconf/autoconf-2.13.tar.gz"
 	DIE=1
 }
 
-(automake --version) < /dev/null > /dev/null 2>&1 || {
+(automake --version ) < /dev/null > /dev/null 2>&1 || {
 	echo
 	echo "You must have automake installed to compile $PROJECT."
-	echo "Get ftp://ftp.gnu.org/gnu/gettext/automake/automake-1.4.tar.gz"
-	echo "(or a newer version if it is available)"
 	DIE=1
 }
 
@@ -49,35 +46,13 @@
         echo "to pass any to it, please specify them on the $0 command line."
 fi
 
-if test -z "$ACLOCAL_FLAGS"; then
+# After the first run of autoconf a configure file exists.
+# 'configure --enable-maintainer-mode' will start all other needed autotool helpers.
+# autoconf
 
-	acdir=`aclocal --print-ac-dir`
-        m4list="glib.m4"
+# needed when autotools version changed
+aclocal
 
-	for file in $m4list
-	do
-		if [ ! -f "$acdir/$file" ]; then
-			echo "WARNING: aclocal's directory is $acdir, but..."
-			echo "         no file $acdir/$file"
-			echo "         You may see fatal macro warnings below."
-			echo "         If these files are installed in /some/dir, set the ACLOCAL_FLAGS "
-			echo "         environment variable to \"-I /some/dir\", or install"
-			echo "         $acdir/$file."
-			echo ""
-		fi
-	done
-fi
-
-#
-
-chmod 666 aclocal.m4
-aclocal $ACLOCAL_FLAGS
-
-# optionally feature autoheader
-(autoheader --version)  < /dev/null > /dev/null 2>&1 && autoheader
-
-automake -a --include-deps $am_opt
-autoconf
 cd $ORIGDIR
 
 $srcdir/configure --enable-maintainer-mode  --prefix=/usr/local "$@"
diff -Nur m148/dmake/ChangeLog dmake43p01/dmake/ChangeLog
--- dmake/ChangeLog	2004-10-22 10:01:58.000000000 +0200
+++ dmake/ChangeLog	2006-01-12 00:59:28.000000000 +0100
@@ -1 +1,2222 @@
-Use cvs log to obtain detailed change logs.
+2006-01-11 12:46  rene
+
+	* config.guess, config.sub:
+
+	#i60375# update config.{sub,guess}
+
+2006-01-08 17:20  vq
+
+	* Makefile.in, configure, configure.in:
+
+	#i60168# Expand internal configure variable before using it and
+	regenerate autotool files.
+
+2006-01-08 16:44  vq
+
+	* Makefile.in, configure:
+
+	#i60168# Regenerate autotool files.
+
+2006-01-08 16:37  vq
+
+	* configure.in:
+
+	#i60168# Use the --datadir swich to determine where the startup dir is
+	placed and adapt the default DMAKEROOT macro setting accordingly.
+
+2006-01-05 20:35  vq
+
+	* tests/Makefile.in:
+
+	#i58259# Regenerate autotool files.
+
+2006-01-05 20:24  vq
+
+	* tests/: misc-6, Makefile.am:
+
+	#i58259# Add testcase.
+
+2006-01-03 23:07  vq
+
+	* make.c:
+
+	#i58259# Fix thinko and solve the problems with all testcases from the
+	issue.
+
+2006-01-03 21:13  vq
+
+	* make.c, dmake.h:
+
+	#i58259# Partial fix. This fixes the use of dp after it was freed.
+
+2005-12-15 15:04  vq
+
+	* sysintf.c:
+
+	#i58391# Create better temporary filenames when .NET2003 or newer are used.
+
+2005-10-25 13:19  vq
+
+	* Makefile.in, config.h.in, configure, configure.in, function.c:
+
+	#i53148# Restore old behaviour for non-*NIX dmake versions.
+
+2005-10-11 14:01  vq
+
+	* Makefile.in, tests/Makefile.am, tests/Makefile.in, tests/README,
+	  tests/misc-4:
+
+	#i39248# Add testcase and regenerate configure and other autotools files.
+
+2005-10-11 13:48  vq
+
+	* tests/misc-5:
+
+	#i54938# Add testcase for .INCLUDE generation in parallel builds.
+
+2005-10-11 13:39  vq
+
+	* function.c, getinp.c, make.c, vextern.h, unix/runargv.c:
+
+	#i54938# Fix problem when building infered .INCLUDE makefiles and doing
+	parallel builds.
+
+2005-10-04 00:33  vq
+
+	* man/: dmake.nc, dmake.tf:
+
+	#i10000# Fix markup error in man page source and regenerate the ascii version.
+
+2005-09-25 20:43  vq
+
+	* dbug/dbug/: dbug.txt, example1.c, example2.c, example3.c,
+	  factorial.c, main.c, makeman.sh, readme, user.r:
+
+	#i55070# Restore the documentation for Fred Fish's "C Program Debugging
+	Package" DBUG.
+
+2005-09-25 20:33  vq
+
+	* Makefile.am, Makefile.in, configure, configure.in, extern.h,
+	  dbug/dbug/dbug.c, msdos/Makefile.in, startup/Makefile.in,
+	  startup/unix/Makefile.in, startup/unix/cygwin/Makefile.in,
+	  startup/unix/linux/Makefile.in, startup/unix/macosx/Makefile.in,
+	  startup/unix/solaris/Makefile.in,
+	  startup/unix/sysvr4/Makefile.in, startup/winnt/Makefile.in,
+	  startup/winnt/mingw/Makefile.in, startup/winnt/msvc6/Makefile.in,
+	  tests/Makefile.in, unix/Makefile.in, win95/Makefile.in,
+	  win95/microsft/Makefile.in:
+
+	#i55070# Fix Fred Fishes DBUG macros and add --enable-dbug to enable them
+	in a configure type build. Also regenerate autotool files.
+
+2005-09-21 21:46  vq
+
+	* tempnam.c:
+
+	#i52899# Remove unused file.
+
+2005-09-19 20:50  vq
+
+	* Makefile.in, aclocal.m4, configure, msdos/Makefile.in,
+	  startup/Makefile.in, startup/unix/Makefile.in,
+	  startup/unix/cygwin/Makefile.in, startup/unix/linux/Makefile.in,
+	  startup/unix/macosx/Makefile.in,
+	  startup/unix/solaris/Makefile.in,
+	  startup/unix/sysvr4/Makefile.in, startup/winnt/Makefile.in,
+	  startup/winnt/mingw/Makefile.in, startup/winnt/msvc6/Makefile.in,
+	  tests/Makefile.am, tests/Makefile.in, tests/misc-3,
+	  unix/Makefile.in, win95/Makefile.in, win95/microsft/Makefile.in:
+
+	#i49461# Add testcase and regenerate configure and other autotools files.
+
+2005-09-19 20:01  vq
+
+	* NEWS, man/dmake.nc, man/dmake.tf:
+
+	#i53148# Update NEWS file and man page.
+
+2005-09-19 19:48  vq
+
+	* unix/runargv.c:
+
+	#i53148# Move include directive to get some macros defined before using
+	them.
+
+2005-09-17 19:25  vq
+
+	* unix/runargv.c:
+
+	#i53148# Make sure that the command started from _exec_shell really
+	finished before returning.
+
+2005-09-17 15:47  vq
+
+	* Makefile.in:
+
+	RESYNC: (1.11-1.12); FILE MERGED
+
+2005-09-17 15:47  vq
+
+	* Makefile.am:
+
+	RESYNC: (1.8-1.9); FILE MERGED
+
+2005-09-08 14:00  rt
+
+	* unix/cygwin/public.h:
+
+	INTEGRATION: CWS ooo19126 (1.4.34); FILE MERGED
+	2005/09/05 17:12:52 rt 1.4.34.1: #i54170# Change license header: remove SISSL
+
+2005-09-06 21:39  vq
+
+	* unix/runargv.c:
+
+	#i53148# Make sure _attach_cmd can not be used for _exec_shell calls.
+
+2005-09-05 17:10  vq
+
+	* tests/: Makefile.am, function_macros-3, function_macros-4:
+
+	#i53148# Add another testcase.
+
+2005-09-05 16:56  vq
+
+	* dmake.c, function.c, vextern.h, unix/runargv.c:
+
+	#i53148# Move redirection of stdout from parent to child and avoid
+	capturing spurious output from other process queues.
+
+2005-09-05 13:23  vq
+
+	* dmake.c, function.c, vextern.h, unix/runargv.c:
+
+	#i53148# Additional patch to make sure that the shell escapes is executed
+	after all previous recipe lines from the same target have finished.
+
+2005-09-04 23:17  vq
+
+	* tests/: Makefile.am, function_macros-3, misc-2:
+
+	#i53148# Add testcase.
+
+2005-09-04 15:38  vq
+
+	* dmake.c, function.c, sysintf.c, vextern.h, unix/runargv.c:
+
+	#i53148# Fix $(shell ...) handling for parallel builds with MAXPROCESS > 1.
+	This certainly includes the -P# switch with # > 1.
+
+2005-09-01 20:25  vq
+
+	* Makefile.in, aclocal.m4, autogen.sh, msdos/Makefile.in,
+	  startup/Makefile.in, startup/unix/Makefile.in,
+	  startup/unix/cygwin/Makefile.in, startup/unix/linux/Makefile.in,
+	  startup/unix/macosx/Makefile.in,
+	  startup/unix/solaris/Makefile.in,
+	  startup/unix/sysvr4/Makefile.in, startup/winnt/Makefile.in,
+	  startup/winnt/mingw/Makefile.in, startup/winnt/msvc6/Makefile.in,
+	  tests/Makefile.in, unix/Makefile.in, win95/Makefile.in,
+	  win95/microsft/Makefile.in:
+
+	#i52238# Regenerate configure and other autotools files.
+
+2005-09-01 19:27  vq
+
+	* tests/: Makefile.am, misc-2:
+
+	#i52238# Add a testcase.
+
+2005-06-04 14:07  vq
+
+	* Makefile.in, startup/Makefile.am, startup/Makefile.in,
+	  startup/unix/Makefile.am, startup/unix/Makefile.in,
+	  startup/winnt/Makefile.am, startup/winnt/Makefile.in,
+	  tests/Makefile.am, tests/Makefile.in, tests/misc-1:
+
+	#i39248# Add another testcase.
+
+2005-06-01 23:58  vq
+
+	* NEWS:
+
+	#i39248# Add entry to NEWS file.
+
+2005-06-01 23:41  vq
+
+	* Makefile.am, Makefile.in, configure, configure.in,
+	  tests/Makefile.am, tests/Makefile.in, tests/function_macros-1,
+	  tests/function_macros-2, tests/infra-0, tests/macros-1,
+	  tests/recipes-1:
+
+	#i39248# Add testsuite for dmake (only tor targets using the autotools).
+
+2005-06-01 19:48  vq
+
+	* function.c:
+
+	#i50091# Echo shell function macro commands.
+
+2005-05-31 22:51  vq
+
+	* unix/dcache.c:
+
+	#i50142# Remove an unneeded warning that was introduced with issue 47135.
+
+2005-05-31 22:27  vq
+
+	* parse.c:
+
+	#i50053# Fix bogus check.
+
+2005-05-31 18:13  vq
+
+	* parse.c:
+
+	#i50053# Fix typo.
+
+2005-05-30 14:37  vq
+
+	* parse.c:
+
+	#i50053# Fix dmake correctly parsing empty makefile lines. This was a
+	regression introduced by issue 44959 and worked before only because
+	the trailing \n of empty lines were accidentally not removed.
+
+2005-05-20 14:18  vq
+
+	* getinp.c:
+
+	#i49461# Fix fall-out from issue 44959. Continued comment lines were not
+	ended if the following line was empty.
+
+2005-05-05 19:12  vq
+
+	* Makefile.in:
+
+	#i47851# Regenerate configure and other autotools files.
+
+2005-05-05 19:06  vq
+
+	* Makefile.am:
+
+	#i47851# Fix dependency checking for subdirectories.
+
+2005-05-05 17:59  vq
+
+	* posix.h:
+
+	#i47135# Leave a comment that the _POSIX_*_MAX values should be set in
+	the architecture dependent sysintf.h files instead of clobbering them
+	in posix.h
+
+2005-05-05 17:45  vq
+
+	* dmake.c, tempnam.c:
+
+	Issue number: 38830
+	Submitted by: waratah@openoffice.org
+	Change dmake's diagnosic output to use "Warning:" or "Error:". Adding the
+	colon makes it easier grep for these diagnostics in long logfiles.
+
+2005-05-05 17:27  vq
+
+	* infer.c, make.c, rulparse.c, sysintf.c:
+
+	#i43310# Fix dmakes handling of multiple (::) targets concerning attributes
+	and flags. Note: An attribute given for a subtarget will also be applied for
+	all other subtargets. (Also add a few comments.)
+
+2005-04-22 00:22  vq
+
+	* stdmacs.h, win95/microsft/config.h, winnt/microsft/config.h:
+
+	Issue number: 47866
+	Submitted by: shay@openoffice.org, vq@openoffice.org
+	Fix MSVC compiler warnings.
+
+2005-04-21 21:27  vq
+
+	* Makefile.in, aclocal.m4, configure, msdos/Makefile.in,
+	  startup/Makefile.in, startup/unix/Makefile.in,
+	  startup/unix/cygwin/Makefile.in, startup/unix/linux/Makefile.in,
+	  startup/unix/macosx/Makefile.in,
+	  startup/unix/solaris/Makefile.in,
+	  startup/unix/sysvr4/Makefile.in, startup/winnt/Makefile.in,
+	  startup/winnt/mingw/Makefile.in, startup/winnt/msvc6/Makefile.in,
+	  unix/Makefile.in, win95/Makefile.in, win95/microsft/Makefile.in:
+
+	#i47851# Regenerate configure and other autotools files.
+
+2005-04-21 21:17  vq
+
+	* infer.c:
+
+	#i43310# Fix cast.
+
+2005-04-21 21:04  vq
+
+	* NEWS, acinclude.m4, autogen.sh, config.h.in, configure.in,
+	  dmake.c, dmakeroot.h.in, win95/microsft/config.h,
+	  winnt/microsft/config.h:
+
+	#i47851# Increase the version number to 4.4-cvs and slightly rearrange the
+	output of "dmake -V".
+	Remove the hardcoded (in autotools builds) OS macro. It had the wrong value
+	to be usable with the startup/*.mk and is not mentioned in the man page.
+	Clean up configure.in and friends.
+
+2005-04-21 00:31  vq
+
+	* expand.c:
+
+	#i37053# Fix (unreached) typo.
+
+2005-04-20 11:26  vq
+
+	* NEWS, dmdump.c, infer.c:
+
+	#i43310# Fix percent (%) rules to recognize prerequisites that are defined
+	with the multiple target rule operator (::).
+	This implicitly fixes the similar problem for .<suffix>.<suffix> targets.
+
+2005-04-18 18:08  vq
+
+	* unix/dcache.c:
+
+	#i47135# Fix variable name.
+
+2005-04-18 18:03  vq
+
+	* sysintf.c, unix/dcache.c:
+
+	#i47135# Add code to warn if a filename is longer than NAMEMAX permits.
+
+2005-04-17 12:47  vq
+
+	* win95/borland/sysintf.h, win95/microsft/sysintf.h,
+	  winnt/borland/sysintf.h, winnt/microsft/sysintf.h,
+	  winnt/mingw/sysintf.h:
+
+	Issue number: 47135
+	Submitted by: shay@openoffice.org
+	Define _POSIX_NAME_MAX and _POSIX_PATH_MAX using the compiler defaults.
+
+2005-04-16 19:05  vq
+
+	* Makefile.in, aclocal.m4, configure, msdos/Makefile.in,
+	  startup/Makefile.in, startup/unix/Makefile.in,
+	  startup/unix/cygwin/Makefile.in, startup/unix/linux/Makefile.in,
+	  startup/unix/macosx/Makefile.in,
+	  startup/unix/solaris/Makefile.in,
+	  startup/unix/sysvr4/Makefile.in, startup/winnt/Makefile.in,
+	  startup/winnt/mingw/Makefile.in, startup/winnt/msvc6/Makefile.in,
+	  unix/Makefile.in, win95/Makefile.in, win95/microsft/Makefile.in:
+
+	#i47578# Regenerate configure and other autotools files.
+
+2005-04-16 18:53  vq
+
+	* startup/Makefile.am:
+
+	#i47578# Install startup/config.mk instead of the unused startup/template.mk.
+
+2005-04-16 18:29  vq
+
+	* configure.in, startup/config.mk.in:
+
+	#i47578# Generate startup/config.mk during build with autotools.
+
+2005-04-16 12:53  vq
+
+	* NEWS, expand.c, man/dmake.nc, man/dmake.tf:
+
+	#i46987# Fix $(mktmp ...) documentation and add the map escape codes
+	$(macro:m) macro expansion.
+
+2005-04-15 19:55  vq
+
+	* win95/borland/ruletab.c, win95/microsft/ruletab.c,
+	  winnt/borland/ruletab.c, winnt/microsft/ruletab.c:
+
+	Issue number: 47137
+	Submitted by: shay@openoffice.org
+	Increase default MAXLINELENGHT to 8190.
+
+2005-04-15 19:34  vq
+
+	* man/: dmake.nc, dmake.tf:
+
+	#i47135# Fix the documentation of the NAMEMAX macro. (Not .NAMEMAX)
+
+2005-04-11 18:16  vq
+
+	* expand.c:
+
+	#i36027# Fix sanity check for end of macro.
+
+2005-04-11 17:13  vq
+
+	* dag.c:
+
+	#i47137# Elaborate a comment.
+
+2005-04-11 16:41  vq
+
+	* getinp.c:
+
+	#i47137# Report and abort when makefile lines are read that are longer than
+	MAXLINELENGTH.
+
+2005-04-10 23:38  vq
+
+	* man/dmake.nc:
+
+	#i43252# Regenerate typeset version of the manual page.
+
+2005-04-10 23:28  vq
+
+	* NEWS, dmake.c, dmake.h, sysintf.c, vextern.h, man/dmake.tf,
+	  win95/startup.h, winnt/startup.h:
+
+	#i43252# Introduce the macro ABSMAKECMD that's value for a native Windows
+	dmake executable (compiled with MS Visual C++ or MinGW) is the absolute
+	filename and NULL for other operating systems or dmake build with other
+	compilers.
+	If DMAKEROOT is not changed and only for native Windows dmake versions the
+	value of DMAKEROOT now defaults to "$(ABSMAKECMD:d)startup".
+
+2005-04-09 17:41  vq
+
+	* startup/startup.mk:
+
+	Issue number: 43254
+	Submitted by: shay@openoffice.org
+	Don't import OS, OSRELEASE and OSENVIRONMENT from environment in startup.mk.
+
+2005-04-09 17:22  vq
+
+	* dmake.c, mac/ruletab.c, msdos/ruletab.c, msdos/startup.h,
+	  msdos/zortech/startup.mk, os2/ruletab.c, qssl/ruletab.c,
+	  qssl/startup.h, startup/msdos/macros.mk, startup/os2/macros.mk,
+	  startup/win95/macros.mk, startup/winnt/macros.mk, tos/ruletab.c,
+	  tos/startup.h, unix/ruletab.c, win95/startup.h,
+	  win95/borland/ruletab.c, win95/microsft/ruletab.c,
+	  winnt/startup.h, winnt/borland/ruletab.c,
+	  winnt/microsft/ruletab.c:
+
+	#i43254# Make the usage of DMAKEROOT consistent with the man page for
+	all OSs. This includes the removal of "SOLARVER UPD INPATH OS UPDMINOREXT"
+	from the list of macros that are always imported from the environment.
+	Patch inspired in part by shay@openoffice.org.
+
+2005-04-08 11:26  vq
+
+	* msdos/zortech/startup.mk, startup/msdos/macros.mk,
+	  startup/os2/macros.mk, startup/win95/macros.mk,
+	  startup/winnt/macros.mk:
+
+	Issue number: 47004
+	Submitted by: shay@openoffice
+	Fix syntax errors (warnings) in subst macros.
+
+2005-04-08 11:18  vq
+
+	* NEWS, readme/read1st.txt:
+
+	Issue number: 43241
+	Submitted by: shay@openoffice.org, vq@openoffice.org
+	Add documentation and update NEWS file.
+
+2005-04-07 18:30  vq
+
+	* makefile.mk, win95/microsft/config.mk,
+	  win95/microsft/vpp40/mk.bat:
+
+	Issue number: 43241
+	Submitted by: shay@openoffice.org
+	Allow dmake to be build on windows without 4NT.
+
+2005-03-27 10:42  vq
+
+	* man/: dmake.nc, dmake.tf:
+
+	#i43147# Fix man page.
+
+2005-03-16 00:25  vq
+
+	* NEWS:
+
+	#i44959# Update NEWS file.
+
+2005-03-15 01:02  vq
+
+	* getinp.c:
+
+	#i44959# Comment fix.
+
+2005-03-15 00:55  vq
+
+	* getinp.c:
+
+	#i44959# Make sure not to strip the wrong \n.
+
+2005-03-15 00:20  vq
+
+	* getinp.c:
+
+	#i44959# Fix dmake problems for makefiles when continued lines are
+	followed by empty lines.
+
+2005-03-13 22:21  vq
+
+	* dag.c, expand.c, getinp.c, make.c:
+
+	#i37053# Fix continuation char handling.
+
+2005-02-19 15:41  vq
+
+	* NEWS:
+
+	#i36027#, #i37053#, #i37491# Update NEWS file to mention the latest changes.
+
+2004-11-25 11:12  vq
+
+	* getinp.c:
+
+	#i37053# Treat continuation chars as whitespace.
+
+2004-11-25 11:09  vq
+
+	* function.c:
+
+	#i36027# Fix MSVC compilation problem.
+
+2004-11-23 14:57  vq
+
+	* man/: dmake.nc, dmake.tf:
+
+	#i37491# Add documentation for SPACECHAR macro.
+
+2004-11-21 13:00  vq
+
+	* expand.c:
+
+	#i36027# Certainly closing brackets are only accepted when no
+	closing separator is found. fixed.
+
+2004-11-21 12:40  vq
+
+	* function.c:
+
+	#i36027# Improve parsing for dmake function macros.
+
+2004-11-21 12:07  vq
+
+	* expand.c:
+
+	#i36027# Relax the syntax check for closing seperator for subst modifiers.
+
+2004-11-19 20:05  vq
+
+	* imacs.c, vextern.h:
+
+	#i37491# Add a predefined SPACECHAR macro.
+
+2004-11-19 19:31  vq
+
+	* expand.c:
+
+	#i36027# This fixes the problems with the :s#pat#rep# modifier and also
+	handles a missing closing braket for macros with macro modifiers in general.
+
+2004-11-11 22:45  vq
+
+	* dag.c, getinp.c, make.c:
+
+	#i37053# dmake line continuation fix.
+
+2004-10-22 04:11  rt
+
+	* win95/microsft/config.h:
+
+	INTEGRATION: CWS dmake43 (1.5.2); FILE MERGED
+	2004/10/12 19:07:26 vq 1.5.2.1: #i31647# Update version number for the "native" MS compiler build.
+
+2004-10-22 04:11  rt
+
+	* win95/microsft/Makefile.in:
+
+	INTEGRATION: CWS dmake43 (1.3.18); FILE MERGED
+	2004/10/12 18:47:52 vq 1.3.18.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:10  rt
+
+	* unix/Makefile.in:
+
+	INTEGRATION: CWS dmake43 (1.8.18); FILE MERGED
+	2004/10/12 18:47:51 vq 1.8.18.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:09  rt
+
+	* startup/winnt/msvc6/Makefile.in, win95/Makefile.in:
+
+	INTEGRATION: CWS dmake43 (1.3.18); FILE MERGED
+	2004/10/12 18:47:51 vq 1.3.18.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:09  rt
+
+	* startup/winnt/: Makefile.in, mingw/Makefile.in:
+
+	INTEGRATION: CWS dmake43 (1.3.18); FILE MERGED
+	2004/10/12 18:47:50 vq 1.3.18.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:09  rt
+
+	* startup/unix/sysvr4/Makefile.in:
+
+	INTEGRATION: CWS dmake43 (1.3.18); FILE MERGED
+	2004/10/12 18:47:49 vq 1.3.18.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:08  rt
+
+	* startup/unix/solaris/Makefile.in:
+
+	INTEGRATION: CWS dmake43 (1.6.18); FILE MERGED
+	2004/10/12 18:47:49 vq 1.6.18.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:08  rt
+
+	* startup/unix/macosx/Makefile.in:
+
+	INTEGRATION: CWS dmake43 (1.6.18); FILE MERGED
+	2004/10/12 18:47:48 vq 1.6.18.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:08  rt
+
+	* startup/unix/linux/Makefile.in:
+
+	INTEGRATION: CWS dmake43 (1.8.18); FILE MERGED
+	2004/10/12 18:47:48 vq 1.8.18.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:08  rt
+
+	* startup/unix/cygwin/Makefile.in:
+
+	INTEGRATION: CWS dmake43 (1.3.18); FILE MERGED
+	2004/10/12 18:47:48 vq 1.3.18.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:07  rt
+
+	* startup/: Makefile.in, unix/Makefile.in:
+
+	INTEGRATION: CWS dmake43 (1.8.18); FILE MERGED
+	2004/10/12 18:47:47 vq 1.8.18.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:07  rt
+
+	* readme/: intro.txt, read1st.txt:
+
+	INTEGRATION: CWS dmake43 (1.1.1.1.130); FILE MERGED
+	2004/10/07 21:57:37 vq 1.1.1.1.130.1: #i31647# Bump the dmake version number to 4.3 plus some small cleanups.
+
+	Note: The _head file was renamed to COPYING, COPYING is not a new file,
+	      but was empty befor.
+
+2004-10-22 04:06  rt
+
+	* msdos/Makefile.in:
+
+	INTEGRATION: CWS dmake43 (1.3.18); FILE MERGED
+	2004/10/12 18:47:47 vq 1.3.18.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:06  rt
+
+	* man/dmake.tf:
+
+	INTEGRATION: CWS dmake43 (1.4.2); FILE MERGED
+	2004/10/07 22:02:56 vq 1.4.2.1: #i31647# Change the man page also to version 4.3.
+
+2004-10-22 04:06  rt
+
+	* man/dmake.nc:
+
+	INTEGRATION: CWS dmake43 (1.2.2); FILE MERGED
+	2004/10/07 22:02:56 vq 1.2.2.1: #i31647# Change the man page also to version 4.3.
+
+2004-10-22 04:05  rt
+
+	* sysintf.c:
+
+	INTEGRATION: CWS dmake43 (1.5.28); FILE MERGED
+	2004/10/07 22:18:47 vq 1.5.28.1: #i34746# Fix timestamp of phony targets with prerequisites.
+
+2004-10-22 04:05  rt
+
+	* makefile.mk:
+
+	INTEGRATION: CWS dmake43 (1.2.78); FILE MERGED
+	2004/10/07 21:57:36 vq 1.2.78.1: #i31647# Bump the dmake version number to 4.3 plus some small cleanups.
+
+	Note: The _head file was renamed to COPYING, COPYING is not a new file,
+	      but was empty befor.
+
+2004-10-22 04:04  rt
+
+	* imacs.c:
+
+	INTEGRATION: CWS dmake43 (1.1.1.1.130); FILE MERGED
+	2004/10/07 21:57:36 vq 1.1.1.1.130.1: #i31647# Bump the dmake version number to 4.3 plus some small cleanups.
+
+	Note: The _head file was renamed to COPYING, COPYING is not a new file,
+	      but was empty befor.
+
+2004-10-22 04:04  rt
+
+	* dmake.c:
+
+	INTEGRATION: CWS dmake43 (1.4.2); FILE MERGED
+	2004/10/07 21:57:36 vq 1.4.2.1: #i31647# Bump the dmake version number to 4.3 plus some small cleanups.
+
+	Note: The _head file was renamed to COPYING, COPYING is not a new file,
+	      but was empty befor.
+
+2004-10-22 04:04  rt
+
+	* configure.in:
+
+	INTEGRATION: CWS dmake43 (1.21.16); FILE MERGED
+	2004/10/12 19:07:26 vq 1.21.16.2: #i31647# Update version number for the "native" MS compiler build.
+	2004/10/07 21:57:36 vq 1.21.16.1: #i31647# Bump the dmake version number to 4.3 plus some small cleanups.
+
+	Note: The _head file was renamed to COPYING, COPYING is not a new file,
+	      but was empty befor.
+
+2004-10-22 04:04  rt
+
+	* configure:
+
+	INTEGRATION: CWS dmake43 (1.14.16); FILE MERGED
+	2004/10/12 18:47:46 vq 1.14.16.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:03  rt
+
+	* config.h.in:
+
+	INTEGRATION: CWS dmake43 (1.11.16); FILE MERGED
+	2004/10/12 18:47:46 vq 1.11.16.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:03  rt
+
+	* aclocal.m4:
+
+	INTEGRATION: CWS dmake43 (1.7.18); FILE MERGED
+	2004/10/12 18:47:45 vq 1.7.18.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:02  rt
+
+	* NEWS:
+
+	INTEGRATION: CWS dmake43 (1.2.78); FILE MERGED
+	2004/10/07 22:18:47 vq 1.2.78.2: #i34746# Fix timestamp of phony targets with prerequisites.
+	2004/10/07 21:57:35 vq 1.2.78.1: #i31647# Bump the dmake version number to 4.3 plus some small cleanups.
+
+	Note: The _head file was renamed to COPYING, COPYING is not a new file,
+	      but was empty befor.
+
+2004-10-22 04:02  rt
+
+	* Makefile.in:
+
+	INTEGRATION: CWS dmake43 (1.10.18); FILE MERGED
+	2004/10/12 18:47:45 vq 1.10.18.1: #i31647# Regenerate the autotools files with autogen.sh.
+
+2004-10-22 04:01  rt
+
+	* COPYING, acinclude.m4:
+
+	INTEGRATION: CWS dmake43 (1.1.118); FILE MERGED
+	2004/10/07 21:57:35 vq 1.1.118.1: #i31647# Bump the dmake version number to 4.3 plus some small cleanups.
+
+	Note: The _head file was renamed to COPYING, COPYING is not a new file,
+	      but was empty befor.
+
+2004-09-08 12:10  rt
+
+	* unix/linux/gnu/public.h, win95/microsft/config.h:
+
+	INTEGRATION: CWS ooo20040704 (1.4.22); FILE MERGED
+	2004/07/15 19:47:39 vq 1.4.22.1: #i30887# Remove the wrongly added LGPL/SISSL license headers.
+
+2004-09-08 12:09  rt
+
+	* unix/runargv.c:
+
+	INTEGRATION: CWS ooo20040704 (1.7.68); FILE MERGED
+	2004/07/15 19:47:38 vq 1.7.68.1: #i30887# Remove the wrongly added LGPL/SISSL license headers.
+
+2004-09-08 12:09  rt
+
+	* unix/: dcache.c, rmprq.c, ruletab.c:
+
+	INTEGRATION: CWS ooo20040704 (1.3.68); FILE MERGED
+	2004/07/15 19:47:38 vq 1.3.68.1: #i30887# Remove the wrongly added LGPL/SISSL license headers.
+
+2004-09-08 12:08  rt
+
+	* man/readme:
+
+	INTEGRATION: CWS ooo20040704 (1.1.1.1.120); FILE MERGED
+	2004/07/11 15:15:18 vq 1.1.1.1.120.1: #i31255#, #i17992# Update the documentation of dmake to the new features.
+
+2004-09-08 12:08  rt
+
+	* man/dmake.tf:
+
+	INTEGRATION: CWS ooo20040704 (1.3.22); FILE MERGED
+	2004/07/11 15:15:17 vq 1.3.22.1: #i31255#, #i17992# Update the documentation of dmake to the new features.
+
+2004-09-08 12:07  rt
+
+	* man/dmake.nc:
+
+	INTEGRATION: CWS ooo20040704 (1.1.1.1.120); FILE MERGED
+	2004/07/11 15:15:17 vq 1.1.1.1.120.1: #i31255#, #i17992# Update the documentation of dmake to the new features.
+
+2004-09-08 12:07  rt
+
+	* rulparse.c:
+
+	INTEGRATION: CWS ooo20040704 (1.5.68); FILE MERGED
+	2004/07/15 19:47:37 vq 1.5.68.3: #i30887# Remove the wrongly added LGPL/SISSL license headers.
+	2004/07/11 14:48:37 vq 1.5.68.2: #i31255# Add verbose recipe echoing option (-vr) to dmake.
+	2004/07/06 00:03:43 vq 1.5.68.1: #i30779# Fix to allow dmake to echo recipe lines when inference is used
+	to create files that are be read by .INCLUDE.
+
+	Note that this only fixes the possibility to do so. Recipes that start
+	with @ are still not echoed, but dmake -n now shows the recipes.
+
+2004-09-08 12:06  rt
+
+	* parse.c, quit.c, stdmacs.h, unix/arlib.c:
+
+	INTEGRATION: CWS ooo20040704 (1.3.68); FILE MERGED
+	2004/07/15 19:47:37 vq 1.3.68.1: #i30887# Remove the wrongly added LGPL/SISSL license headers.
+
+2004-09-08 12:06  rt
+
+	* make.c:
+
+	INTEGRATION: CWS ooo20040704 (1.4.24); FILE MERGED
+	2004/07/15 19:47:36 vq 1.4.24.1: #i30887# Remove the wrongly added LGPL/SISSL license headers.
+
+2004-09-08 12:06  rt
+
+	* function.c:
+
+	INTEGRATION: CWS ooo20040704 (1.6.22); FILE MERGED
+	2004/07/15 19:47:36 vq 1.6.22.1: #i30887# Remove the wrongly added LGPL/SISSL license headers.
+
+2004-09-08 12:06  rt
+
+	* extern.h:
+
+	INTEGRATION: CWS ooo20040704 (1.7.68); FILE MERGED
+	2004/07/15 19:47:36 vq 1.7.68.1: #i30887# Remove the wrongly added LGPL/SISSL license headers.
+
+2004-09-08 12:05  rt
+
+	* expand.c, infer.c:
+
+	INTEGRATION: CWS ooo20040704 (1.3.68); FILE MERGED
+	2004/07/15 19:47:36 vq 1.3.68.1: #i30887# Remove the wrongly added LGPL/SISSL license headers.
+
+2004-09-08 12:05  rt
+
+	* dmake.h:
+
+	INTEGRATION: CWS ooo20040704 (1.1.1.1.120); FILE MERGED
+	2004/07/11 14:48:37 vq 1.1.1.1.120.1: #i31255# Add verbose recipe echoing option (-vr) to dmake.
+
+2004-09-08 12:05  rt
+
+	* dag.c, dmake.c:
+
+	INTEGRATION: CWS ooo20040704 (1.3.68); FILE MERGED
+	2004/07/15 19:47:35 vq 1.3.68.2: #i30887# Remove the wrongly added LGPL/SISSL license headers.
+	2004/07/11 14:48:36 vq 1.3.68.1: #i31255# Add verbose recipe echoing option (-vr) to dmake.
+
+2004-09-08 12:04  rt
+
+	* INSTALL:
+
+	INTEGRATION: CWS ooo20040704 (1.1.108); FILE MERGED
+	2004/07/11 15:15:16 vq 1.1.108.1: #i31255#, #i17992# Update the documentation of dmake to the new features.
+
+2004-04-21 10:10  svesik
+
+	* itypes.h:
+
+	INTEGRATION: CWS ooo20040329 (1.2.54); FILE MERGED
+	2004/03/19 12:41:09 waratah 1.2.54.1: #i13620# extra definitions to use internal types defined in AIX
+
+2004-04-21 10:10  svesik
+
+	* getinp.c:
+
+	INTEGRATION: CWS ooo20040329 (1.4.8); FILE MERGED
+	2004/04/01 16:24:25 mmeeks 1.4.8.1: #27319
+
+2004-04-21 10:10  svesik
+
+	* configure.in:
+
+	INTEGRATION: CWS ooo20040329 (1.20.14); FILE MERGED
+	2004/03/19 12:36:41 waratah 1.20.14.1: #i13620# allow configure to pick up on types defined by AIX and also allow AIX to work in configure
+
+2004-04-21 10:09  svesik
+
+	* configure:
+
+	INTEGRATION: CWS ooo20040329 (1.13.4); FILE MERGED
+	2004/03/19 12:37:40 waratah 1.13.4.1: #i13620# allow configure to pick up on types defined by AIX and also allow AIX to work in configure
+
+2004-04-21 10:09  svesik
+
+	* config.h.in:
+
+	INTEGRATION: CWS ooo20040329 (1.10.4); FILE MERGED
+	2004/03/19 12:40:18 waratah 1.10.4.1: #i13620# Extra defines as used by configure
+
+2004-02-25 08:56  kz
+
+	* win95/: Makefile.in, microsft/Makefile.am, microsft/Makefile.in:
+
+	INTEGRATION: CWS geordi2q15 (1.2.48); FILE MERGED
+	2004/02/20 12:29:04 hr 1.2.48.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:56  kz
+
+	* win95/Makefile.am:
+
+	INTEGRATION: CWS geordi2q15 (1.2.48); FILE MERGED
+	2004/02/20 12:29:03 hr 1.2.48.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:56  kz
+
+	* unix/Makefile.in:
+
+	INTEGRATION: CWS geordi2q15 (1.7.48); FILE MERGED
+	2004/02/20 12:29:03 hr 1.7.48.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:56  kz
+
+	* unix/Makefile.am:
+
+	INTEGRATION: CWS geordi2q15 (1.4.66); FILE MERGED
+	2004/02/20 12:29:03 hr 1.4.66.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:55  kz
+
+	* startup/winnt/: mingw/Makefile.in, msvc6/Makefile.in:
+
+	INTEGRATION: CWS geordi2q15 (1.2.48); FILE MERGED
+	2004/02/20 12:29:02 hr 1.2.48.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:55  kz
+
+	* startup/: unix/sysvr4/Makefile.in, winnt/Makefile.in:
+
+	INTEGRATION: CWS geordi2q15 (1.2.48); FILE MERGED
+	2004/02/20 12:29:01 hr 1.2.48.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:54  kz
+
+	* startup/unix/: macosx/Makefile.in, solaris/Makefile.in:
+
+	INTEGRATION: CWS geordi2q15 (1.5.48); FILE MERGED
+	2004/02/20 12:29:00 hr 1.5.48.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:54  kz
+
+	* startup/unix/linux/Makefile.in:
+
+	INTEGRATION: CWS geordi2q15 (1.7.48); FILE MERGED
+	2004/02/20 12:28:59 hr 1.7.48.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:54  kz
+
+	* startup/unix/cygwin/Makefile.in:
+
+	INTEGRATION: CWS geordi2q15 (1.2.48); FILE MERGED
+	2004/02/20 12:28:59 hr 1.2.48.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:54  kz
+
+	* startup/: Makefile.in, unix/Makefile.in:
+
+	INTEGRATION: CWS geordi2q15 (1.7.48); FILE MERGED
+	2004/02/20 12:28:58 hr 1.7.48.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:53  kz
+
+	* msdos/Makefile.in:
+
+	INTEGRATION: CWS geordi2q15 (1.2.48); FILE MERGED
+	2004/02/20 12:28:58 hr 1.2.48.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:53  kz
+
+	* msdos/Makefile.am:
+
+	INTEGRATION: CWS geordi2q15 (1.2.48); FILE MERGED
+	2004/02/20 12:28:57 hr 1.2.48.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:53  kz
+
+	* configure:
+
+	INTEGRATION: CWS geordi2q15 (1.12.10); FILE MERGED
+	2004/02/20 12:28:56 hr 1.12.10.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:53  kz
+
+	* config.h.in:
+
+	INTEGRATION: CWS geordi2q15 (1.9.10); FILE MERGED
+	2004/02/20 12:28:56 hr 1.9.10.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:52  kz
+
+	* aclocal.m4:
+
+	INTEGRATION: CWS geordi2q15 (1.6.48); FILE MERGED
+	2004/02/20 12:28:56 hr 1.6.48.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:52  kz
+
+	* Makefile.in:
+
+	INTEGRATION: CWS geordi2q15 (1.9.48); FILE MERGED
+	2004/02/20 12:28:56 hr 1.9.48.1: #111934#: merge CWS ooo111fix3
+
+2004-02-25 08:52  kz
+
+	* Makefile.am:
+
+	INTEGRATION: CWS geordi2q15 (1.7.48); FILE MERGED
+	2004/02/20 12:28:56 hr 1.7.48.1: #111934#: merge CWS ooo111fix3
+
+2004-01-28 08:21  hjs
+
+	* getinp.c:
+
+	#i17992# applied patch to enable komplex logic in .IF statements
+
+2003-12-17 11:19  vg
+
+	* winnt/msvc6/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.2.38); FILE MERGED
+	2003/12/16 11:17:47 hr 1.2.38.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:18  vg
+
+	* winnt/mingw/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.2.38); FILE MERGED
+	2003/12/16 11:17:46 hr 1.2.38.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:18  vg
+
+	* winnt/microsft/vpp40/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:46 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:18  vg
+
+	* winnt/borland/bcc50/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:45 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:17  vg
+
+	* win95/microsft/vpp40/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.3.38); FILE MERGED
+	2003/12/16 11:17:44 hr 1.3.38.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:17  vg
+
+	* win95/microsft/vpp40/mk.bat:
+
+	INTEGRATION: CWS geordi2q11 (1.2.38); FILE MERGED
+	2003/12/16 11:17:44 hr 1.2.38.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:17  vg
+
+	* win95/microsft/config.h:
+
+	INTEGRATION: CWS geordi2q11 (1.3.38); FILE MERGED
+	2003/12/16 11:17:43 hr 1.3.38.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:16  vg
+
+	* win95/borland/bcc50/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:43 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:16  vg
+
+	* unix/xenix/pwd/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:42 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:15  vg
+
+	* unix/xenix/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:41 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:15  vg
+
+	* unix/: sysvr3/pwd/public.h, sysvr4/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:40 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:14  vg
+
+	* unix/sysvr3/gnu/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:39 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:14  vg
+
+	* unix/sysvr3/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:38 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:13  vg
+
+	* unix/: solaris/gnu/public.h, sysvr1/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:37 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:13  vg
+
+	* unix/solaris/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.2.46); FILE MERGED
+	2003/12/16 11:17:36 hr 1.2.46.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:12  vg
+
+	* unix/macosx/gnu/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.3.38); FILE MERGED
+	2003/12/16 11:17:35 hr 1.3.38.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:12  vg
+
+	* unix/linux/gnu/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.3.38); FILE MERGED
+	2003/12/16 11:17:33 hr 1.3.38.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:11  vg
+
+	* unix/cygwin/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.3.38); FILE MERGED
+	2003/12/16 11:17:32 hr 1.3.38.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:11  vg
+
+	* unix/coherent/ver42/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:31 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:10  vg
+
+	* unix/: bsdarm32/public.h, coherent/ver40/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:30 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:10  vg
+
+	* unix/bsd43/vf/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:29 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:09  vg
+
+	* unix/bsd43/: public.h, uw/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:28 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:08  vg
+
+	* unix/386ix/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:27 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:07  vg
+
+	* qssl/public.h, tos/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:26 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:07  vg
+
+	* os2/ibm/icc3/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:25 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:06  vg
+
+	* os2/ibm/icc/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:24 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:05  vg
+
+	* msdos/: microsft/msc60/public.h, zortech/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:23 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:05  vg
+
+	* msdos/microsft/msc51/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:22 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:04  vg
+
+	* msdos/borland/: bcc50/public.h, tcc20/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:21 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:03  vg
+
+	* msdos/borland/bcc45/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:20 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:02  vg
+
+	* msdos/borland/: bcc30/public.h, bcc40/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:19 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:02  vg
+
+	* man/dmake.tf:
+
+	INTEGRATION: CWS geordi2q11 (1.2.56); FILE MERGED
+	2003/12/16 11:17:18 hr 1.2.56.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:02  vg
+
+	* mac/public.h:
+
+	INTEGRATION: CWS geordi2q11 (1.4.30); FILE MERGED
+	2003/12/16 11:17:17 hr 1.4.30.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:01  vg
+
+	* sysintf.c:
+
+	INTEGRATION: CWS geordi2q11 (1.4.52); FILE MERGED
+	2003/12/16 11:17:16 hr 1.4.52.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:01  vg
+
+	* function.c:
+
+	INTEGRATION: CWS geordi2q11 (1.5.8); FILE MERGED
+	2003/12/16 11:17:16 hr 1.5.8.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:00  vg
+
+	* configure.in:
+
+	INTEGRATION: CWS geordi2q11 (1.19.38); FILE MERGED
+	2003/12/16 11:17:15 hr 1.19.38.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 11:00  vg
+
+	* configure:
+
+	INTEGRATION: CWS geordi2q11 (1.11.38); FILE MERGED
+	2003/12/16 11:17:15 hr 1.11.38.1: #111934#: join CWS ooo111fix1
+
+2003-12-17 10:59  vg
+
+	* config.h.in:
+
+	INTEGRATION: CWS geordi2q11 (1.8.38); FILE MERGED
+	2003/12/16 11:17:14 hr 1.8.38.1: #111934#: join CWS ooo111fix1
+
+2003-12-01 12:58  rt
+
+	* make.c:
+
+	INTEGRATION: CWS ooo20031110 (1.3.24); FILE MERGED
+	2003/10/19 22:38:29 waratah 1.3.24.1: #i20504#  Correct processing of library code, not always built
+
+2003-08-18 11:04  hjs
+
+	* function.c:
+
+	INTEGRATION: CWS geordi2q01 (1.4.22); FILE MERGED
+	2003/08/18 12:53:30 hr 1.4.22.1: #i18350#: join changes from CWS ooo11rc3
+
+2003-06-12 06:56  vg
+
+	* winnt/microsft/vpp40/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:27 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:56  vg
+
+	* winnt/borland/bcc50/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:26 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:56  vg
+
+	* win95/borland/bcc50/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:25 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:56  vg
+
+	* unix/xenix/pwd/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:24 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:55  vg
+
+	* unix/: sysvr4/public.h, xenix/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:23 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:55  vg
+
+	* unix/sysvr3/pwd/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:22 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:54  vg
+
+	* unix/sysvr3/: public.h, gnu/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:21 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:54  vg
+
+	* unix/sysvr1/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:20 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:54  vg
+
+	* unix/solaris/gnu/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:19 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:54  vg
+
+	* unix/coherent/: ver40/public.h, ver42/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:18 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:54  vg
+
+	* unix/bsdarm32/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:17 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:53  vg
+
+	* unix/bsd43/vf/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:16 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:53  vg
+
+	* unix/bsd43/uw/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:15 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:53  vg
+
+	* unix/: 386ix/public.h, bsd43/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:14 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:53  vg
+
+	* tos/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:13 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:52  vg
+
+	* qssl/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:12 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:52  vg
+
+	* os2/ibm/icc3/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:11 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:52  vg
+
+	* os2/ibm/icc/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:10 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:52  vg
+
+	* msdos/zortech/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:09 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:52  vg
+
+	* msdos/microsft/msc60/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:08 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:51  vg
+
+	* msdos/microsft/msc51/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:07 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:51  vg
+
+	* msdos/borland/tcc20/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:06 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:51  vg
+
+	* msdos/borland/bcc50/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:05 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:51  vg
+
+	* msdos/borland/bcc45/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:04 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:51  vg
+
+	* msdos/borland/bcc40/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:03 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:50  vg
+
+	* msdos/borland/bcc30/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:02 mh 1.3.8.1: join: from beta2
+
+2003-06-12 06:50  vg
+
+	* mac/public.h:
+
+	INTEGRATION: CWS mh11rc (1.3.8); FILE MERGED
+	2003/06/06 09:59:01 mh 1.3.8.1: join: from beta2
+
+2003-03-25 09:02  hr
+
+	* Makefile.am, Makefile.in, NEWS, aclocal.m4, autogen.sh,
+	  config.h.in, configure, configure.in, dag.c, dmake.c,
+	  dmakeroot.h.in, expand.c, extern.h, function.c, infer.c,
+	  itypes.h, make.c, makefile.mk, parse.c, posix.h, quit.c,
+	  rulparse.c, stdmacs.h, tempnam.c, mac/main.c, mac/public.h,
+	  msdos/Makefile.am, msdos/Makefile.in,
+	  msdos/borland/bcc30/public.h, msdos/borland/bcc40/public.h,
+	  msdos/borland/bcc45/public.h, msdos/borland/bcc50/public.h,
+	  msdos/borland/tcc20/public.h, msdos/microsft/msc51/public.h,
+	  msdos/microsft/msc60/public.h, msdos/zortech/public.h,
+	  os2/ibm/icc/public.h, os2/ibm/icc3/public.h, qssl/public.h,
+	  startup/Makefile.am, startup/Makefile.in,
+	  startup/unix/Makefile.in, startup/unix/cygwin/Makefile.in,
+	  startup/unix/linux/Makefile.in, startup/unix/macosx/Makefile.in,
+	  startup/unix/solaris/Makefile.in,
+	  startup/unix/sysvr4/Makefile.in, startup/winnt/Makefile.am,
+	  startup/winnt/Makefile.in, startup/winnt/mingw/Makefile.am,
+	  startup/winnt/mingw/Makefile.in, startup/winnt/mingw/macros.mk,
+	  startup/winnt/msvc6/Makefile.am, startup/winnt/msvc6/Makefile.in,
+	  startup/winnt/msvc6/macros.mk, tos/public.h, unix/Makefile.in,
+	  unix/arlib.c, unix/dcache.c, unix/rmprq.c, unix/ruletab.c,
+	  unix/runargv.c, unix/386ix/public.h, unix/bsd43/public.h,
+	  unix/bsd43/uw/public.h, unix/bsd43/vf/public.h,
+	  unix/bsdarm32/public.h, unix/coherent/ver40/public.h,
+	  unix/coherent/ver42/public.h, unix/cygwin/public.h,
+	  unix/linux/gnu/public.h, unix/macosx/gnu/public.h,
+	  unix/solaris/gnu/public.h, unix/sysvr1/public.h,
+	  unix/sysvr3/public.h, unix/sysvr3/gnu/public.h,
+	  unix/sysvr3/pwd/public.h, unix/sysvr4/public.h,
+	  unix/xenix/public.h, unix/xenix/pwd/public.h, win95/Makefile.am,
+	  win95/Makefile.in, win95/borland/bcc50/public.h,
+	  win95/microsft/Makefile.am, win95/microsft/Makefile.in,
+	  win95/microsft/config.h, win95/microsft/ruletab.c,
+	  win95/microsft/vpp40/mk.bat, win95/microsft/vpp40/obj.rsp,
+	  win95/microsft/vpp40/public.h, winnt/borland/bcc50/public.h,
+	  winnt/microsft/vpp40/public.h, winnt/mingw/public.h,
+	  winnt/mingw/sysintf.h, winnt/msvc6/public.h,
+	  winnt/msvc6/sysintf.h:
+
+	MWS_SRX644: migrate branch mws_srx644 -> HEAD
+
+2003-01-13 09:27  waratah
+
+	* mac/main.c, mac/public.h, msdos/borland/bcc30/public.h,
+	  msdos/borland/bcc40/public.h, msdos/borland/bcc45/public.h,
+	  msdos/borland/bcc50/public.h, msdos/borland/tcc20/public.h,
+	  msdos/microsft/msc51/public.h, msdos/microsft/msc60/public.h,
+	  msdos/zortech/public.h, os2/ibm/icc/public.h,
+	  os2/ibm/icc3/public.h, qssl/public.h, tos/public.h,
+	  unix/386ix/public.h, unix/bsd43/public.h, unix/bsd43/uw/public.h,
+	  unix/bsd43/vf/public.h, unix/bsdarm32/public.h,
+	  unix/coherent/ver40/public.h, unix/coherent/ver42/public.h,
+	  unix/cygwin/public.h, unix/solaris/public.h,
+	  unix/solaris/gnu/public.h, unix/sysvr1/public.h,
+	  unix/sysvr3/public.h, unix/sysvr3/gnu/public.h,
+	  unix/sysvr3/pwd/public.h, unix/sysvr4/public.h,
+	  unix/xenix/public.h, unix/xenix/pwd/public.h,
+	  win95/borland/bcc50/public.h, win95/microsft/vpp40/public.h,
+	  winnt/borland/bcc50/public.h, winnt/microsft/vpp40/public.h:
+
+	dmake:  Remove the incorrect definition of main to void
+
+2003-01-04 08:08  waratah
+
+	* unix/macosx/gnu/public.h:
+
+	Remove main definition, it is wrong and it is failing compile on the mac platform
+
+2003-01-04 08:02  waratah
+
+	* unix/runargv.c:
+
+	Implement a test around wait so it is not included when the platform does not define it
+
+2003-01-04 07:53  waratah
+
+	* config.h.in, configure, configure.in:
+
+	Implement a test for wait.h, failing build on mac under gcc
+
+2002-10-15 08:27  waratah
+
+	* config.guess:
+
+	dmake: Implement the latest config.guess, not working on ppc64
+
+2002-10-11 09:42  waratah
+
+	* Makefile.in, config.h.in, configure, configure.in, dag.c,
+	  dmake.c, expand.c, extern.h, function.c, getinp.c, infer.c,
+	  make.c, parse.c, quit.c, rulparse.c, sysintf.c, unix/arlib.c,
+	  unix/dcache.c, unix/rmprq.c, unix/runargv.c,
+	  unix/linux/gnu/public.h:
+
+	dmake: Implement fix for Lost child problem. Correct some checks for functions (assumed present) and also fix up all gcc warnings using -Wall.
+
+2002-10-08 05:21  waratah
+
+	* win95/microsft/config.h:
+
+	dmake: Volker 4nt patches
+
+2002-10-07 09:40  waratah
+
+	* startup/unix/cygwin/: Makefile.am, Makefile.in, macros.mk:
+
+	dmake: Add the cygwin configure files
+
+2002-10-07 09:36  waratah
+
+	* extern.h:
+
+	dmake:  Correct some undefined functions in some modules
+
+2002-10-07 09:34  waratah
+
+	* configure:
+
+	dmake: Additional header checks for better source control, add cygwin support, GNU hurd support
+
+2002-10-07 09:33  waratah
+
+	* config.h.in:
+
+	dmake: Additional header checks for better source control
+
+2002-10-07 08:09  waratah
+
+	* configure.in:
+
+	dmake:  Add gnu hurd and some additional header checks, and the cygwin makefiles
+
+2002-10-04 10:34  waratah
+
+	* configure:
+
+	dmake: Patches for the osf1 operating system
+
+2002-10-04 10:14  waratah
+
+	* startup/unix/sysvr4/Makefile.in:
+
+	dmake:  Add osf1 support
+
+2002-10-04 10:01  haggai
+
+	* startup/unix/sysvr4/Makefile.am, configure.in:
+
+	Fix build for OSF1.  Approved by Ken.
+
+2002-10-04 09:31  waratah
+
+	* Makefile.in, aclocal.m4, config.h.in, configure, configure.in,
+	  extern.h, function.c, startup/Makefile.in,
+	  startup/unix/Makefile.in, startup/unix/linux/Makefile.in,
+	  startup/unix/macosx/Makefile.in,
+	  startup/unix/solaris/Makefile.in, unix/Makefile.in:
+
+	Dmake:  Convert the configure to a better configure process without individual conf.h files for every platform
+
+2002-10-03 08:59  waratah
+
+	* configure, configure.in, depcomp:
+
+	dmake:  remove cygwin makefile temporarily and implement depcomp
+
+2002-10-03 08:29  waratah
+
+	* Makefile.in, aclocal.m4, configure, configure.in, stdmacs.h,
+	  man/dmake.tf, startup/Makefile.in, startup/unix/Makefile.in,
+	  startup/unix/linux/Makefile.in, startup/unix/macosx/Makefile.in,
+	  startup/unix/solaris/Makefile.in, unix/Makefile.in:
+
+	dmake:  This is a reworked version of the configure process, without automake and aclocal
+
+2002-10-02 09:42  waratah
+
+	* Makefile.am, Makefile.in, aclocal.m4, autogen.sh, config.h.in,
+	  configure, configure.in, startup/Makefile.in,
+	  startup/unix/Makefile.in, startup/unix/linux/Makefile.in,
+	  startup/unix/macosx/Makefile.in,
+	  startup/unix/solaris/Makefile.in, unix/Makefile.am,
+	  unix/Makefile.in:
+
+	dmake:  Allow the whole configure process to work,  not needs update to bootstrap to activate
+
+2002-10-01 11:08  waratah
+
+	* Makefile.in, startup/Makefile.in, startup/unix/Makefile.in,
+	  startup/unix/linux/Makefile.in, startup/unix/macosx/Makefile.in,
+	  startup/unix/solaris/Makefile.in, unix/Makefile.in:
+
+	dmake:  Add all the automake files, premade so developers do not require automake installed
+
+2002-07-11 04:53  mh
+
+	* Makefile.am, configure.in, extern.h, rulparse.c,
+	  startup/unix/Makefile.am, startup/unix/macosx/Makefile.am,
+	  unix/Makefile.am, unix/tempnam.c:
+
+	join: from OOO_STABLE_1
+
+2002-07-11 04:44  mh
+
+	* autogen.sh:
+
+	join: from OOO_STABLE_1
+
+2002-04-10 11:40  hjs
+
+	* rulparse.c:
+
+	don't search INCLUDEDIRS if filename of include starts at fs-root
+
+2002-04-09 13:21  mh
+
+	* configure.in:
+
+	fixed typo for FreeBSD
+
+2002-04-09 13:10  hjs
+
+	* Makefile.am, configure.in:
+
+	cygwin support
+
+2002-03-26 09:23  mh
+
+	* configure.in:
+
+	add: cygwin
+
+2002-03-26 09:22  mh
+
+	* unix/cygwin/public.h:
+
+	add for cygwin
+
+2001-10-16 08:11  mh
+
+	* configure.in:
+
+	add: FreeBSD
+
+2001-10-16 08:10  mh
+
+	* autogen.sh:
+
+	fix: for non writable aclocal.m4 and missing README
+
+2001-08-20 05:57  mh
+
+	* configure.in:
+
+	del: AC_CONFIG_HEADERS
+
+2001-06-14 13:31  mh
+
+	* configure.in:
+
+	don't check C++
+
+2001-06-13 09:34  mh
+
+	* Makefile.am, configure.in, unix/Makefile.am:
+
+	add: OS_VERSION to differ the Unix's
+
+2001-06-13 09:13  mh
+
+	* startup/unix/solaris/Makefile.am:
+
+	add: startup/unix/solaris/
+
+2001-05-29 18:43  pluby
+
+	* unix/runargv.c:
+
+	Added forceful exit to avoid infinite loop that sometimes occurs when there is a fatal error.
+
+2001-05-07 08:47  mh
+
+	* unix/runargv.c:
+
+	add: CYGWIN changes
+
+2001-05-04 06:47  mh
+
+	* Makefile.am, aclocal.m4, config.h.in, configure:
+
+	chg: comments
+
+2001-04-23 08:41  mh
+
+	* unix/Makefile.in, startup/Makefile.in, startup/unix/Makefile.in,
+	  startup/unix/linux/Makefile.in:
+
+	del:
+
+2001-04-23 08:24  mh
+
+	* Makefile.in:
+
+	del:
+
+2001-04-23 08:22  mh
+
+	* Makefile.in:
+
+	del
+
+2001-04-23 08:10  mh
+
+	* configure.in:
+
+	add: PACKAGE
+
+2001-04-23 07:06  mh
+
+	* unix/Makefile.am:
+
+	add: Makefile.am
+
+2001-04-23 07:01  mh
+
+	* aclocal.m4:
+
+	add: acloacl.m4
+
+2001-04-23 06:50  mh
+
+	* unix/Makefile.in, startup/Makefile.in, startup/unix/Makefile.in,
+	  startup/unix/linux/Makefile.in:
+
+	add: Makefile.in
+
+2001-04-23 06:50  mh
+
+	* Makefile.in:
+
+	add Makefile.in
+
+2001-04-20 10:24  mh
+
+	* startup/: Makefile.am, unix/Makefile.am, unix/linux/Makefile.am:
+
+	add: Makefile.am
+
+2001-04-20 10:23  mh
+
+	* unix/ruletab.c:
+
+	use installation directory from configure for DMAKEROOT, DMAKEROOT can still be overridden by environment
+
+2001-04-20 10:21  mh
+
+	* extern.h:
+
+	avoid clash with autoconf config.h
+
+2001-04-20 10:15  mh
+
+	* AUTHORS, COPYING, INSTALL, Makefile.am, NEWS, acinclude.m4,
+	  autogen.sh, config.guess, config.h.in, config.sub, configure,
+	  configure.in, dmakeroot.h.in, install-sh, missing, mkinstalldirs,
+	  stamp-h:
+
+	preparation for autoconf and automake for dmake
+
+2001-02-22 22:44  pluby
+
+	* unix/macosx/: tempnam.c, gnu/make.sh:
+
+	Correct Mac OS X "tempnam" bug
+
+2001-02-19 11:08  hjs
+
+	* sysintf.c:
+
+	remove useless part of change
+
+2001-02-13 07:43  hjs
+
+	* sysintf.c:
+
+	fixed left tmpfiles when building group targets
+
+2000-11-01 07:27  hjs
+
+	* unix/runargv.c:
+
+	FreeBSD patch
+
+2000-10-20 07:12  hjs
+
+	* getinp.c:
+
+	has an extraneous ; after the function closure
+
+2000-09-22 11:33  hr
+
+	* dag.c, dmake.c, dmake.h, expand.c, extern.h, function.c,
+	  getinp.c, imacs.c, infer.c, itypes.h, make.c, makefile.mk,
+	  parse.c, posix.h, quit.c, rulparse.c, stdmacs.h, sysintf.c,
+	  tempnam.c, mac/main.c, mac/public.h, man/dmake.nc, man/dmake.tf,
+	  man/readme, msdos/borland/bcc30/public.h,
+	  msdos/borland/bcc40/public.h, msdos/borland/bcc45/public.h,
+	  msdos/borland/bcc50/public.h, msdos/borland/tcc20/public.h,
+	  msdos/microsft/msc51/public.h, msdos/microsft/msc60/public.h,
+	  msdos/zortech/public.h, os2/ibm/icc/public.h,
+	  os2/ibm/icc3/public.h, qssl/public.h, readme/intro.txt,
+	  readme/read1st.txt, tos/public.h, unix/arlib.c, unix/dcache.c,
+	  unix/rmprq.c, unix/ruletab.c, unix/runargv.c,
+	  unix/386ix/public.h, unix/bsd43/public.h, unix/bsd43/uw/public.h,
+	  unix/bsd43/vf/public.h, unix/bsdarm32/public.h,
+	  unix/coherent/ver40/public.h, unix/coherent/ver42/public.h,
+	  unix/linux/gnu/make.sh, unix/linux/gnu/public.h,
+	  unix/macosx/gnu/make.sh, unix/macosx/gnu/public.h,
+	  unix/solaris/public.h, unix/solaris/gnu/public.h,
+	  unix/sysvr1/public.h, unix/sysvr3/public.h,
+	  unix/sysvr3/gnu/public.h, unix/sysvr3/pwd/public.h,
+	  unix/sysvr4/public.h, unix/xenix/public.h,
+	  unix/xenix/pwd/public.h, win95/borland/bcc50/public.h,
+	  win95/microsft/config.h, win95/microsft/ruletab.c,
+	  win95/microsft/vpp40/mk.bat, win95/microsft/vpp40/obj.rsp,
+	  win95/microsft/vpp40/public.h, winnt/borland/bcc50/public.h,
+	  winnt/microsft/vpp40/public.h:
+
+	Initial revision
+
+2000-09-22 11:33  hr
+
+	* alloc.h, db.h, dmdump.c, dmstring.c, dstdarg.h, hash.c,
+	  macparse.c, make.bat, make.cmd, path.c, percent.c, rcsclean.awk,
+	  stat.c, state.c, struct.h, vextern.h, dbug/dbug.mk, dbug/getwd.c,
+	  dbug/readme, dbug/dbug/dbug.c, dbug/dbug/dbug.h,
+	  dbug/dbug/dbug.uue, dbug/dbug/readme, dbug/malloc/_changes,
+	  dbug/malloc/_readme, dbug/malloc/calloc.c, dbug/malloc/debug.h,
+	  dbug/malloc/dump.c, dbug/malloc/free.c, dbug/malloc/m_init.c,
+	  dbug/malloc/m_perror.c, dbug/malloc/makefile,
+	  dbug/malloc/malloc.3, dbug/malloc/malloc.c, dbug/malloc/malloc.h,
+	  dbug/malloc/mallopt.c, dbug/malloc/memory.c,
+	  dbug/malloc/mlc_chk.c, dbug/malloc/mlc_chn.c,
+	  dbug/malloc/patchlev, dbug/malloc/realloc.c,
+	  dbug/malloc/string.c, dbug/malloc/testmem.c,
+	  dbug/malloc/testmlc.c, dbug/malloc/tostring.c,
+	  dbug/malloc/tostring.h, mac/arlib.c, mac/make_mac.sh,
+	  mac/bogus.c, mac/config.mk, mac/dirbrk.c, mac/directry.c,
+	  mac/dompwmak, mac/environ.c, mac/eold.c, mac/make.sh,
+	  mac/rmprq.c, mac/ruletab.c, mac/startup.h, mac/sysintf.h,
+	  mac/template.mk, mac/tempnam.c, mac/tomacfil.c, msdos/arlib.c,
+	  msdos/config.mk, msdos/dchdir.c, msdos/dirbrk.c, msdos/dirent.h,
+	  msdos/dirlib.c, msdos/dosdta.h, msdos/dstrlwr.c, msdos/exec.asm,
+	  msdos/exec.h, msdos/exec.uue, msdos/find.c, msdos/rmprq.c,
+	  msdos/ruletab.c, msdos/runargv.c, msdos/spawn.c, msdos/startup.h,
+	  msdos/switchar.c, msdos/sysintf.h, msdos/tee.c,
+	  msdos/borland/config.mk, msdos/borland/tempnam.c,
+	  msdos/borland/utime.c, msdos/borland/bcc30/config.h,
+	  msdos/borland/bcc30/config.mk, msdos/borland/bcc30/lib.rsp,
+	  msdos/borland/bcc30/libswp.rsp, msdos/borland/bcc30/mkswp.bat,
+	  msdos/borland/bcc30/obj.rsp, msdos/borland/bcc30/objswp.rsp,
+	  msdos/borland/bcc30/template.mk, msdos/borland/bcc40/config.h,
+	  msdos/borland/bcc40/config.mk, msdos/borland/bcc40/lib.rsp,
+	  msdos/borland/bcc40/libswp.rsp, msdos/borland/bcc40/mkswp.bat,
+	  msdos/borland/bcc40/obj.rsp, msdos/borland/bcc40/objswp.rsp,
+	  msdos/borland/bcc40/template.mk, msdos/borland/bcc45/config.h,
+	  msdos/borland/bcc45/config.mk, msdos/borland/bcc45/lib.rsp,
+	  msdos/borland/bcc45/libswp.rsp, msdos/borland/bcc45/mkswp.bat,
+	  msdos/borland/bcc45/obj.rsp, msdos/borland/bcc45/objswp.rsp,
+	  msdos/borland/bcc45/template.mk, msdos/borland/bcc50/config.h,
+	  msdos/borland/bcc50/config.mk, msdos/borland/bcc50/lib.rsp,
+	  msdos/borland/bcc50/libswp.rsp, msdos/borland/bcc50/mkswp.bat,
+	  msdos/borland/bcc50/obj.rsp, msdos/borland/bcc50/objswp.rsp,
+	  msdos/borland/bcc50/template.mk, msdos/borland/tcc20/config.h,
+	  msdos/borland/tcc20/config.mk, msdos/borland/tcc20/libswp.rsp,
+	  msdos/borland/tcc20/mkswp.bat, msdos/borland/tcc20/objswp.rsp,
+	  msdos/borland/tcc20/template.mk, msdos/microsft/config.h,
+	  msdos/microsft/config.mk, msdos/microsft/optoff.h,
+	  msdos/microsft/tempnam.c, msdos/microsft/msc51/config.mk,
+	  msdos/microsft/msc51/lib.rsp, msdos/microsft/msc51/libswp.rsp,
+	  msdos/microsft/msc51/mk.bat, msdos/microsft/msc51/mkswp.bat,
+	  msdos/microsft/msc51/obj.rsp, msdos/microsft/msc51/objswp.rsp,
+	  msdos/microsft/msc51/template.mk, msdos/microsft/msc60/config.mk,
+	  msdos/microsft/msc60/lib.rsp, msdos/microsft/msc60/libswp.rsp,
+	  msdos/microsft/msc60/mk.bat, msdos/microsft/msc60/mkswp.bat,
+	  msdos/microsft/msc60/obj.rsp, msdos/microsft/msc60/objswp.rsp,
+	  msdos/microsft/msc60/template.mk, msdos/zortech/config.h,
+	  msdos/zortech/config.mk, msdos/zortech/environ.c,
+	  msdos/zortech/lib.rsp, msdos/zortech/libswp.rsp,
+	  msdos/zortech/mkswp.bat, msdos/zortech/obj.rsp,
+	  msdos/zortech/objswp.rsp, msdos/zortech/startup.mk,
+	  msdos/zortech/tempnam.c, os2/config.mk, os2/dchdir.c,
+	  os2/dirent.h, os2/ruletab.c, os2/startup.h, os2/switchar.c,
+	  os2/sysintf.h, os2/ibm/config.h, os2/ibm/config.mk,
+	  os2/ibm/tempnam.c, os2/ibm/icc/config.mk, os2/ibm/icc/lib.rsp,
+	  os2/ibm/icc/mk.cmd, os2/ibm/icc/obj.rsp, os2/ibm/icc/template.mk,
+	  os2/ibm/icc3/config.mk, os2/ibm/icc3/lib.rsp,
+	  os2/ibm/icc3/mk.cmd, os2/ibm/icc3/obj.rsp,
+	  os2/ibm/icc3/template.mk, qssl/config.mk, qssl/make.sh,
+	  qssl/ruletab.c, qssl/runargv.c, qssl/setup, qssl/startup.h,
+	  qssl/stdlib.h, qssl/sysintf.h, qssl/template.mk, qssl/tempnam.c,
+	  qssl/time.h, readme/license.txt, readme/release.txt,
+	  readme/public/install.txt, readme/public/mac.txt,
+	  readme/public/msdos.txt, readme/public/os2.txt,
+	  readme/public/qssl-qnx.txt, readme/public/srcorg.txt,
+	  readme/public/tos.txt, readme/public/unix.txt,
+	  startup/startup.mk, startup/summary, startup/template.mk,
+	  startup/mac/macros.mk, startup/msdos/macros.mk,
+	  startup/msdos/recipes.mk, startup/msdos/borland/macros.mk,
+	  startup/msdos/borland/bcc30/macros.mk,
+	  startup/msdos/borland/bcc40/macros.mk,
+	  startup/msdos/borland/bcc45/macros.mk,
+	  startup/msdos/borland/bcc50/macros.mk,
+	  startup/msdos/borland/bcc50.32/macros.mk,
+	  startup/msdos/borland/tcc20/macros.mk,
+	  startup/msdos/microsft/macros.mk,
+	  startup/msdos/zortech/macros.mk, startup/os2/macros.mk,
+	  startup/os2/ibm/macros.mk, startup/qssl/macros.mk,
+	  startup/qssl/recipes.mk, startup/qssl/qnx/macros.mk,
+	  startup/qssl/qnx/recipes.mk, startup/templates/mac/template.mk,
+	  startup/templates/msdos/borland/bcc30/template.mk,
+	  startup/templates/msdos/borland/bcc40/template.mk,
+	  startup/templates/msdos/borland/bcc45/template.mk,
+	  startup/templates/msdos/borland/bcc50/template.mk,
+	  startup/templates/msdos/borland/tcc20/template.mk,
+	  startup/templates/msdos/microsft/msc51/template.mk,
+	  startup/templates/msdos/microsft/msc60/template.mk,
+	  startup/templates/os2/ibm/icc/template.mk,
+	  startup/templates/qssl/template.mk,
+	  startup/templates/tos/template.mk,
+	  startup/templates/unix/386ix/template.mk,
+	  startup/templates/unix/bsd43/template.mk,
+	  startup/templates/unix/bsd43/uw/template.mk,
+	  startup/templates/unix/bsd43/vf/template.mk,
+	  startup/templates/unix/coherent/ver40/template.mk,
+	  startup/templates/unix/coherent/ver42/template.mk,
+	  startup/templates/unix/linux/gnu/template.mk,
+	  startup/templates/unix/solaris/template.mk,
+	  startup/templates/unix/solaris/gnu/template.mk,
+	  startup/templates/unix/sysvr1/template.mk,
+	  startup/templates/unix/sysvr3/template.mk,
+	  startup/templates/unix/sysvr3/pwd/template.mk,
+	  startup/templates/unix/sysvr4/template.mk,
+	  startup/templates/unix/xenix/template.mk,
+	  startup/templates/unix/xenix/pwd/template.mk,
+	  startup/templates/win95/borland/bcc50/template.mk,
+	  startup/templates/win95/microsft/vpp40/template.mk,
+	  startup/templates/winnt/borland/bcc50/template.mk,
+	  startup/templates/winnt/microsft/vpp40/template.mk,
+	  startup/tos/macros.mk, startup/unix/macros.mk,
+	  startup/unix/recipes.mk, startup/unix/386ix/macros.mk,
+	  startup/unix/bsd43/macros.mk, startup/unix/bsd43/recipes.mk,
+	  startup/unix/coherent/macros.mk,
+	  startup/unix/coherent/recipes.mk, startup/unix/linux/macros.mk,
+	  startup/unix/linux/gnu/macros.mk, startup/unix/macosx/macros.mk,
+	  startup/unix/macosx/gnu/macros.mk,
+	  startup/unix/solaris/macros.mk, startup/unix/sysvr1/macros.mk,
+	  startup/unix/sysvr3/macros.mk, startup/unix/sysvr3/gnu/macros.mk,
+	  startup/unix/sysvr4/macros.mk, startup/unix/xenix/macros.mk,
+	  startup/win95/macros.mk, startup/win95/recipes.mk,
+	  startup/win95/borland/macros.mk,
+	  startup/win95/microsft/macros.mk, startup/winnt/macros.mk,
+	  startup/winnt/recipes.mk, startup/winnt/borland/macros.mk,
+	  startup/winnt/microsft/macros.mk, tos/config.mk, tos/make.sh,
+	  tos/putenv.c, tos/ruletab.c, tos/startup.h, tos/sysintf.h,
+	  tos/template.mk, tos/tempnam.c, unix/config.mk, unix/dirbrk.c,
+	  unix/startup.h, unix/sysintf.h, unix/386ix/ar.h,
+	  unix/386ix/config.mk, unix/386ix/make.sh, unix/386ix/stdlib.h,
+	  unix/386ix/template.mk, unix/386ix/time.h, unix/bsd43/config.mk,
+	  unix/bsd43/dirent.h, unix/bsd43/limits.h, unix/bsd43/make.sh,
+	  unix/bsd43/template.mk, unix/bsd43/putenv.c,
+	  unix/bsd43/setvbuf.c, unix/bsd43/stdlib.h, unix/bsd43/string.h,
+	  unix/bsd43/tempnam.c, unix/bsd43/utime.c,
+	  unix/bsd43/uw/config.mk, unix/bsd43/uw/make.sh,
+	  unix/bsd43/uw/template.mk, unix/bsd43/vf/config.mk,
+	  unix/bsd43/vf/ctype.h, unix/bsd43/vf/make.sh,
+	  unix/bsd43/vf/memcpy.c, unix/bsd43/vf/template.mk,
+	  unix/bsd43/vf/vfprintf.c, unix/bsdarm32/config.mk,
+	  unix/bsdarm32/dirent.h, unix/bsdarm32/limits.h,
+	  unix/bsdarm32/make.sh, unix/bsdarm32/putenv.c,
+	  unix/bsdarm32/stdlib.h, unix/bsdarm32/string.h,
+	  unix/bsdarm32/template.mk, unix/bsdarm32/tempnam.c,
+	  unix/bsdarm32/utime.c, unix/coherent/config.mk,
+	  unix/coherent/stdlib.h, unix/coherent/time.h,
+	  unix/coherent/ver40/config.mk, unix/coherent/ver40/getcwd.c,
+	  unix/coherent/ver40/make.sh, unix/coherent/ver40/template.mk,
+	  unix/coherent/ver40/vfprintf.c, unix/coherent/ver42/config.mk,
+	  unix/coherent/ver42/template.mk, unix/coherent/ver42/make.sh,
+	  unix/linux/config.mk, unix/linux/gnu/config.mk,
+	  unix/linux/gnu/template.mk, unix/macosx/config.mk,
+	  unix/macosx/gnu/config.mk, unix/macosx/gnu/template.mk,
+	  unix/solaris/config.mk, unix/solaris/getcwd.c,
+	  unix/solaris/make.sh, unix/solaris/template.mk,
+	  unix/solaris/tempnam.c, unix/solaris/gnu/config.mk,
+	  unix/solaris/gnu/make.sh, unix/solaris/gnu/template.mk,
+	  unix/sysvr1/config.mk, unix/sysvr1/make.sh, unix/sysvr1/putenv.c,
+	  unix/sysvr1/stdlib.h, unix/sysvr1/template.mk,
+	  unix/sysvr1/time.h, unix/sysvr1/vfprintf.c,
+	  unix/sysvr3/config.mk, unix/sysvr3/make.sh, unix/sysvr3/stdlib.h,
+	  unix/sysvr3/template.mk, unix/sysvr3/time.h,
+	  unix/sysvr3/pwd/config.mk, unix/sysvr3/pwd/template.mk,
+	  unix/sysvr3/pwd/getcwd.c, unix/sysvr3/pwd/make.sh,
+	  unix/sysvr4/config.mk, unix/sysvr4/make.sh,
+	  unix/sysvr4/template.mk, unix/xenix/config.mk,
+	  unix/xenix/make.sh, unix/xenix/stdlib.h, unix/xenix/template.mk,
+	  unix/xenix/time.h, unix/xenix/pwd/config.mk,
+	  unix/xenix/pwd/getcwd.c, unix/xenix/pwd/make.sh,
+	  unix/xenix/pwd/template.mk, win95/config.mk, win95/dchdir.c,
+	  win95/startup.h, win95/switchar.c, win95/borland/config.mk,
+	  win95/borland/ruletab.c, win95/borland/sysintf.h,
+	  win95/borland/tempnam.c, win95/borland/bcc50/config.h,
+	  win95/borland/bcc50/config.mk, win95/borland/bcc50/lib.rsp,
+	  win95/borland/bcc50/mk.bat, win95/borland/bcc50/obj.rsp,
+	  win95/borland/bcc50/template.mk, win95/microsft/config.mk,
+	  win95/microsft/optoff.h, win95/microsft/sysintf.h,
+	  win95/microsft/tempnam.c, win95/microsft/vpp40/config.mk,
+	  win95/microsft/vpp40/lib.rsp, win95/microsft/vpp40/runargv.c,
+	  win95/microsft/vpp40/template.mk, win95/microsft/vpp40/tempnam.c,
+	  winnt/config.mk, winnt/dchdir.c, winnt/startup.h,
+	  winnt/borland/config.mk, winnt/borland/ruletab.c,
+	  winnt/borland/sysintf.h, winnt/borland/tempnam.c,
+	  winnt/borland/bcc50/config.h, winnt/borland/bcc50/config.mk,
+	  winnt/borland/bcc50/lib.rsp, winnt/borland/bcc50/mk.bat,
+	  winnt/borland/bcc50/mk.cmd, winnt/borland/bcc50/obj.rsp,
+	  winnt/borland/bcc50/template.mk, winnt/microsft/config.h,
+	  winnt/microsft/config.mk, winnt/microsft/optoff.h,
+	  winnt/microsft/ruletab.c, winnt/microsft/sysintf.h,
+	  winnt/microsft/tempnam.c, winnt/microsft/vpp40/config.mk,
+	  winnt/microsft/vpp40/lib.rsp, winnt/microsft/vpp40/mk.bat,
+	  winnt/microsft/vpp40/mk.cmd, winnt/microsft/vpp40/obj.rsp,
+	  winnt/microsft/vpp40/runargv.c, winnt/microsft/vpp40/template.mk,
+	  winnt/microsft/vpp40/tempnam.c:
+
+	initial import
+
diff -Nur m148/dmake/config.guess dmake43p01/dmake/config.guess
--- dmake/config.guess	2002-10-15 14:27:52.000000000 +0200
+++ dmake/config.guess	2006-01-11 18:46:02.000000000 +0100
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Attempt to guess a canonical system name.
 #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
-#   2000, 2001, 2002 Free Software Foundation, Inc.
+#   2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.
 
-timestamp='2002-09-03'
+timestamp='2005-08-03'
 
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
@@ -17,13 +17,15 @@
 #
 # You should have received a copy of the GNU General Public License
 # along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA
+# 02110-1301, USA.
 #
 # As a special exception to the GNU General Public License, if you
 # distribute this file as part of a program that contains a
 # configuration script generated by Autoconf, you may include it under
 # the same distribution terms that you use for the rest of that program.
 
+
 # Originally written by Per Bothner <per@bothner.com>.
 # Please send patches to <config-patches@gnu.org>.  Submit a context
 # diff and a properly formatted ChangeLog entry.
@@ -53,7 +55,7 @@
 GNU config.guess ($timestamp)
 
 Originally written by Per Bothner.
-Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005
 Free Software Foundation, Inc.
 
 This is free software; see the source for copying conditions.  There is NO
@@ -66,11 +68,11 @@
 while test $# -gt 0 ; do
   case $1 in
     --time-stamp | --time* | -t )
-       echo "$timestamp" ; exit 0 ;;
+       echo "$timestamp" ; exit ;;
     --version | -v )
-       echo "$version" ; exit 0 ;;
+       echo "$version" ; exit ;;
     --help | --h* | -h )
-       echo "$usage"; exit 0 ;;
+       echo "$usage"; exit ;;
     -- )     # Stop option processing
        shift; break ;;
     - )	# Use stdin as input.
@@ -98,30 +100,32 @@
 # Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still
 # use `HOST_CC' if defined, but it is deprecated.
 
-# This shell variable is my proudest work .. or something. --bje
+# Portable tmp directory creation inspired by the Autoconf team.
 
-set_cc_for_build='tmpdir=${TMPDIR-/tmp}/config-guess-$$ ;
-(old=`umask` && umask 077 && mkdir $tmpdir && umask $old && unset old)
-   || (echo "$me: cannot create $tmpdir" >&2 && exit 1) ;
-dummy=$tmpdir/dummy ;
-files="$dummy.c $dummy.o $dummy.rel $dummy" ;
-trap '"'"'rm -f $files; rmdir $tmpdir; exit 1'"'"' 1 2 15 ;
+set_cc_for_build='
+trap "exitcode=\$?; (rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null) && exit \$exitcode" 0 ;
+trap "rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null; exit 1" 1 2 13 15 ;
+: ${TMPDIR=/tmp} ;
+ { tmp=`(umask 077 && mktemp -d -q "$TMPDIR/cgXXXXXX") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
+ { test -n "$RANDOM" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||
+ { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo "Warning: creating insecure temp directory" >&2 ; } ||
+ { echo "$me: cannot create a temporary directory in $TMPDIR" >&2 ; exit 1 ; } ;
+dummy=$tmp/dummy ;
+tmpfiles="$dummy.c $dummy.o $dummy.rel $dummy" ;
 case $CC_FOR_BUILD,$HOST_CC,$CC in
  ,,)    echo "int x;" > $dummy.c ;
 	for c in cc gcc c89 c99 ; do
-	  if ($c $dummy.c -c -o $dummy.o) >/dev/null 2>&1 ; then
+	  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then
 	     CC_FOR_BUILD="$c"; break ;
 	  fi ;
 	done ;
-	rm -f $files ;
 	if test x"$CC_FOR_BUILD" = x ; then
 	  CC_FOR_BUILD=no_compiler_found ;
 	fi
 	;;
  ,,*)   CC_FOR_BUILD=$CC ;;
  ,*,*)  CC_FOR_BUILD=$HOST_CC ;;
-esac ;
-unset files'
+esac ; set_cc_for_build= ;'
 
 # This is needed to find uname on a Pyramid OSx when run in the BSD universe.
 # (ghazi@noc.rutgers.edu 1994-08-24)
@@ -178,144 +182,125 @@
 		;;
 	esac
 	# The OS release
-	release=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
+	# Debian GNU/NetBSD machines have a different userland, and
+	# thus, need a distinct triplet. However, they do not need
+	# kernel version information, so it can be replaced with a
+	# suitable tag, in the style of linux-gnu.
+	case "${UNAME_VERSION}" in
+	    Debian*)
+		release='-gnu'
+		;;
+	    *)
+		release=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
+		;;
+	esac
 	# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:
 	# contains redundant information, the shorter form:
 	# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.
 	echo "${machine}-${os}${release}"
-	exit 0 ;;
-    amiga:OpenBSD:*:*)
-	echo m68k-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    arc:OpenBSD:*:*)
-	echo mipsel-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    hp300:OpenBSD:*:*)
-	echo m68k-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    mac68k:OpenBSD:*:*)
-	echo m68k-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    macppc:OpenBSD:*:*)
-	echo powerpc-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    mvme68k:OpenBSD:*:*)
-	echo m68k-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    mvme88k:OpenBSD:*:*)
-	echo m88k-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    mvmeppc:OpenBSD:*:*)
-	echo powerpc-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    pmax:OpenBSD:*:*)
-	echo mipsel-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    sgi:OpenBSD:*:*)
-	echo mipseb-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    sun3:OpenBSD:*:*)
-	echo m68k-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    wgrisc:OpenBSD:*:*)
-	echo mipsel-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     *:OpenBSD:*:*)
-	echo ${UNAME_MACHINE}-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
+	UNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`
+	echo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}
+	exit ;;
+    *:ekkoBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}
+	exit ;;
+    macppc:MirBSD:*:*)
+	echo powerppc-unknown-mirbsd${UNAME_RELEASE}
+	exit ;;
+    *:MirBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}
+	exit ;;
     alpha:OSF1:*:*)
-	if test $UNAME_RELEASE = "V4.0"; then
+	case $UNAME_RELEASE in
+	*4.0)
 		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`
-	fi
+		;;
+	*5.*)
+	        UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`
+		;;
+	esac
+	# According to Compaq, /usr/sbin/psrinfo has been available on
+	# OSF/1 and Tru64 systems produced since 1995.  I hope that
+	# covers most systems running today.  This code pipes the CPU
+	# types through head -n 1, so we only detect the type of CPU 0.
+	ALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \(.*\) processor.*$/\1/p' | head -n 1`
+	case "$ALPHA_CPU_TYPE" in
+	    "EV4 (21064)")
+		UNAME_MACHINE="alpha" ;;
+	    "EV4.5 (21064)")
+		UNAME_MACHINE="alpha" ;;
+	    "LCA4 (21066/21068)")
+		UNAME_MACHINE="alpha" ;;
+	    "EV5 (21164)")
+		UNAME_MACHINE="alphaev5" ;;
+	    "EV5.6 (21164A)")
+		UNAME_MACHINE="alphaev56" ;;
+	    "EV5.6 (21164PC)")
+		UNAME_MACHINE="alphapca56" ;;
+	    "EV5.7 (21164PC)")
+		UNAME_MACHINE="alphapca57" ;;
+	    "EV6 (21264)")
+		UNAME_MACHINE="alphaev6" ;;
+	    "EV6.7 (21264A)")
+		UNAME_MACHINE="alphaev67" ;;
+	    "EV6.8CB (21264C)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.8AL (21264B)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.8CX (21264D)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.9A (21264/EV69A)")
+		UNAME_MACHINE="alphaev69" ;;
+	    "EV7 (21364)")
+		UNAME_MACHINE="alphaev7" ;;
+	    "EV7.9 (21364A)")
+		UNAME_MACHINE="alphaev79" ;;
+	esac
+	# A Pn.n version is a patched version.
 	# A Vn.n version is a released version.
 	# A Tn.n version is a released field test version.
 	# A Xn.n version is an unreleased experimental baselevel.
 	# 1.2 uses "1.2" for uname -r.
-	eval $set_cc_for_build
-	cat <<EOF >$dummy.s
-	.data
-\$Lformat:
-	.byte 37,100,45,37,120,10,0	# "%d-%x\n"
-
-	.text
-	.globl main
-	.align 4
-	.ent main
-main:
-	.frame \$30,16,\$26,0
-	ldgp \$29,0(\$27)
-	.prologue 1
-	.long 0x47e03d80 # implver \$0
-	lda \$2,-1
-	.long 0x47e20c21 # amask \$2,\$1
-	lda \$16,\$Lformat
-	mov \$0,\$17
-	not \$1,\$18
-	jsr \$26,printf
-	ldgp \$29,0(\$26)
-	mov 0,\$16
-	jsr \$26,exit
-	.end main
-EOF
-	$CC_FOR_BUILD $dummy.s -o $dummy 2>/dev/null
-	if test "$?" = 0 ; then
-		case `$dummy` in
-			0-0)
-				UNAME_MACHINE="alpha"
-				;;
-			1-0)
-				UNAME_MACHINE="alphaev5"
-				;;
-			1-1)
-				UNAME_MACHINE="alphaev56"
-				;;
-			1-101)
-				UNAME_MACHINE="alphapca56"
-				;;
-			2-303)
-				UNAME_MACHINE="alphaev6"
-				;;
-			2-307)
-				UNAME_MACHINE="alphaev67"
-				;;
-			2-1307)
-				UNAME_MACHINE="alphaev68"
-				;;
-			3-1307)
-				UNAME_MACHINE="alphaev7"
-				;;
-		esac
-	fi
-	rm -f $dummy.s $dummy && rmdir $tmpdir
-	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
-	exit 0 ;;
+	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
+	exit ;;
     Alpha\ *:Windows_NT*:*)
 	# How do we know it's Interix rather than the generic POSIX subsystem?
 	# Should we change UNAME_MACHINE based on the output of uname instead
 	# of the specific Alpha model?
 	echo alpha-pc-interix
-	exit 0 ;;
+	exit ;;
     21064:Windows_NT:50:3)
 	echo alpha-dec-winnt3.5
-	exit 0 ;;
+	exit ;;
     Amiga*:UNIX_System_V:4.0:*)
 	echo m68k-unknown-sysv4
-	exit 0;;
+	exit ;;
     *:[Aa]miga[Oo][Ss]:*:*)
 	echo ${UNAME_MACHINE}-unknown-amigaos
-	exit 0 ;;
+	exit ;;
     *:[Mm]orph[Oo][Ss]:*:*)
 	echo ${UNAME_MACHINE}-unknown-morphos
-	exit 0 ;;
+	exit ;;
     *:OS/390:*:*)
 	echo i370-ibm-openedition
-	exit 0 ;;
+	exit ;;
+    *:z/VM:*:*)
+	echo s390-ibm-zvmoe
+	exit ;;
+    *:OS400:*:*)
+        echo powerpc-ibm-os400
+	exit ;;
     arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)
 	echo arm-acorn-riscix${UNAME_RELEASE}
-	exit 0;;
+	exit ;;
+    arm:riscos:*:*|arm:RISCOS:*:*)
+	echo arm-unknown-riscos
+	exit ;;
     SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)
 	echo hppa1.1-hitachi-hiuxmpp
-	exit 0;;
+	exit ;;
     Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)
 	# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.
 	if test "`(/bin/universe) 2>/dev/null`" = att ; then
@@ -323,29 +308,32 @@
 	else
 		echo pyramid-pyramid-bsd
 	fi
-	exit 0 ;;
+	exit ;;
     NILE*:*:*:dcosx)
 	echo pyramid-pyramid-svr4
-	exit 0 ;;
-    DRS?6000:UNIX_SV:4.2*:7*)
+	exit ;;
+    DRS?6000:unix:4.0:6*)
+	echo sparc-icl-nx6
+	exit ;;
+    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)
 	case `/usr/bin/uname -p` in
-	    sparc) echo sparc-icl-nx7 && exit 0 ;;
+	    sparc) echo sparc-icl-nx7; exit ;;
 	esac ;;
     sun4H:SunOS:5.*:*)
 	echo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
-	exit 0 ;;
+	exit ;;
     sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)
 	echo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
-	exit 0 ;;
+	exit ;;
     i86pc:SunOS:5.*:*)
 	echo i386-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
-	exit 0 ;;
+	exit ;;
     sun4*:SunOS:6*:*)
 	# According to config.sub, this is the proper way to canonicalize
 	# SunOS6.  Hard to guess exactly what SunOS6 will be like, but
 	# it's likely to be more like Solaris than SunOS4.
 	echo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
-	exit 0 ;;
+	exit ;;
     sun4*:SunOS:*:*)
 	case "`/usr/bin/arch -k`" in
 	    Series*|S4*)
@@ -354,10 +342,10 @@
 	esac
 	# Japanese Language versions have a version number like `4.1.3-JL'.
 	echo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`
-	exit 0 ;;
+	exit ;;
     sun3*:SunOS:*:*)
 	echo m68k-sun-sunos${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     sun*:*:4.2BSD:*)
 	UNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
 	test "x${UNAME_RELEASE}" = "x" && UNAME_RELEASE=3
@@ -369,10 +357,10 @@
 		echo sparc-sun-sunos${UNAME_RELEASE}
 		;;
 	esac
-	exit 0 ;;
+	exit ;;
     aushp:SunOS:*:*)
 	echo sparc-auspex-sunos${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     # The situation for MiNT is a little confusing.  The machine name
     # can be virtually everything (everything which is not
     # "atarist" or "atariste" at least should have a processor
@@ -383,37 +371,40 @@
     # be no problem.
     atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
         echo m68k-atari-mint${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
 	echo m68k-atari-mint${UNAME_RELEASE}
-        exit 0 ;;
+        exit ;;
     *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
         echo m68k-atari-mint${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
         echo m68k-milan-mint${UNAME_RELEASE}
-        exit 0 ;;
+        exit ;;
     hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
         echo m68k-hades-mint${UNAME_RELEASE}
-        exit 0 ;;
+        exit ;;
     *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
         echo m68k-unknown-mint${UNAME_RELEASE}
-        exit 0 ;;
+        exit ;;
+    m68k:machten:*:*)
+	echo m68k-apple-machten${UNAME_RELEASE}
+	exit ;;
     powerpc:machten:*:*)
 	echo powerpc-apple-machten${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     RISC*:Mach:*:*)
 	echo mips-dec-mach_bsd4.3
-	exit 0 ;;
+	exit ;;
     RISC*:ULTRIX:*:*)
 	echo mips-dec-ultrix${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     VAX*:ULTRIX*:*:*)
 	echo vax-dec-ultrix${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     2020:CLIX:*:* | 2430:CLIX:*:*)
 	echo clipper-intergraph-clix${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     mips:*:*:UMIPS | mips:*:*:RISCos)
 	eval $set_cc_for_build
 	sed 's/^	//' << EOF >$dummy.c
@@ -437,33 +428,33 @@
 	  exit (-1);
 	}
 EOF
-	$CC_FOR_BUILD $dummy.c -o $dummy \
-	  && $dummy `echo "${UNAME_RELEASE}" | sed -n 's/\([0-9]*\).*/\1/p'` \
-	  && rm -f $dummy.c $dummy && rmdir $tmpdir && exit 0
-	rm -f $dummy.c $dummy && rmdir $tmpdir
+	$CC_FOR_BUILD -o $dummy $dummy.c &&
+	  dummyarg=`echo "${UNAME_RELEASE}" | sed -n 's/\([0-9]*\).*/\1/p'` &&
+	  SYSTEM_NAME=`$dummy $dummyarg` &&
+	    { echo "$SYSTEM_NAME"; exit; }
 	echo mips-mips-riscos${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     Motorola:PowerMAX_OS:*:*)
 	echo powerpc-motorola-powermax
-	exit 0 ;;
+	exit ;;
     Motorola:*:4.3:PL8-*)
 	echo powerpc-harris-powermax
-	exit 0 ;;
-    Night_Hawk:*:*:PowerMAX_OS)
+	exit ;;
+    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)
 	echo powerpc-harris-powermax
-	exit 0 ;;
+	exit ;;
     Night_Hawk:Power_UNIX:*:*)
 	echo powerpc-harris-powerunix
-	exit 0 ;;
+	exit ;;
     m88k:CX/UX:7*:*)
 	echo m88k-harris-cxux7
-	exit 0 ;;
+	exit ;;
     m88k:*:4*:R4*)
 	echo m88k-motorola-sysv4
-	exit 0 ;;
+	exit ;;
     m88k:*:3*:R3*)
 	echo m88k-motorola-sysv3
-	exit 0 ;;
+	exit ;;
     AViiON:dgux:*:*)
         # DG/UX returns AViiON for all architectures
         UNAME_PROCESSOR=`/usr/bin/uname -p`
@@ -479,29 +470,29 @@
 	else
 	    echo i586-dg-dgux${UNAME_RELEASE}
 	fi
- 	exit 0 ;;
+ 	exit ;;
     M88*:DolphinOS:*:*)	# DolphinOS (SVR3)
 	echo m88k-dolphin-sysv3
-	exit 0 ;;
+	exit ;;
     M88*:*:R3*:*)
 	# Delta 88k system running SVR3
 	echo m88k-motorola-sysv3
-	exit 0 ;;
+	exit ;;
     XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)
 	echo m88k-tektronix-sysv3
-	exit 0 ;;
+	exit ;;
     Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)
 	echo m68k-tektronix-bsd
-	exit 0 ;;
+	exit ;;
     *:IRIX*:*:*)
 	echo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`
-	exit 0 ;;
+	exit ;;
     ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.
-	echo romp-ibm-aix      # uname -m gives an 8 hex-code CPU id
-	exit 0 ;;              # Note that: echo "'`uname -s`'" gives 'AIX '
+	echo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id
+	exit ;;               # Note that: echo "'`uname -s`'" gives 'AIX '
     i*86:AIX:*:*)
 	echo i386-ibm-aix
-	exit 0 ;;
+	exit ;;
     ia64:AIX:*:*)
 	if [ -x /usr/bin/oslevel ] ; then
 		IBM_REV=`/usr/bin/oslevel`
@@ -509,7 +500,7 @@
 		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
 	fi
 	echo ${UNAME_MACHINE}-ibm-aix${IBM_REV}
-	exit 0 ;;
+	exit ;;
     *:AIX:2:3)
 	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
 		eval $set_cc_for_build
@@ -524,15 +515,18 @@
 			exit(0);
 			}
 EOF
-		$CC_FOR_BUILD $dummy.c -o $dummy && $dummy && rm -f $dummy.c $dummy && rmdir $tmpdir && exit 0
-		rm -f $dummy.c $dummy && rmdir $tmpdir
-		echo rs6000-ibm-aix3.2.5
+		if $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`
+		then
+			echo "$SYSTEM_NAME"
+		else
+			echo rs6000-ibm-aix3.2.5
+		fi
 	elif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then
 		echo rs6000-ibm-aix3.2.4
 	else
 		echo rs6000-ibm-aix3.2
 	fi
-	exit 0 ;;
+	exit ;;
     *:AIX:*:[45])
 	IBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`
 	if /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then
@@ -546,28 +540,28 @@
 		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
 	fi
 	echo ${IBM_ARCH}-ibm-aix${IBM_REV}
-	exit 0 ;;
+	exit ;;
     *:AIX:*:*)
 	echo rs6000-ibm-aix
-	exit 0 ;;
+	exit ;;
     ibmrt:4.4BSD:*|romp-ibm:BSD:*)
 	echo romp-ibm-bsd4.4
-	exit 0 ;;
+	exit ;;
     ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and
 	echo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to
-	exit 0 ;;                           # report: romp-ibm BSD 4.3
+	exit ;;                             # report: romp-ibm BSD 4.3
     *:BOSX:*:*)
 	echo rs6000-bull-bosx
-	exit 0 ;;
+	exit ;;
     DPX/2?00:B.O.S.:*:*)
 	echo m68k-bull-sysv3
-	exit 0 ;;
+	exit ;;
     9000/[34]??:4.3bsd:1.*:*)
 	echo m68k-hp-bsd
-	exit 0 ;;
+	exit ;;
     hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)
 	echo m68k-hp-bsd4.4
-	exit 0 ;;
+	exit ;;
     9000/[34678]??:HP-UX:*:*)
 	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
 	case "${UNAME_MACHINE}" in
@@ -623,17 +617,37 @@
                   exit (0);
               }
 EOF
-		    (CCOPTS= $CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null) && HP_ARCH=`$dummy`
-		    if test -z "$HP_ARCH"; then HP_ARCH=hppa; fi
-		    rm -f $dummy.c $dummy && rmdir $tmpdir
+		    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`
+		    test -z "$HP_ARCH" && HP_ARCH=hppa
 		fi ;;
 	esac
+	if [ ${HP_ARCH} = "hppa2.0w" ]
+	then
+	    eval $set_cc_for_build
+
+	    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating
+	    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler
+	    # generating 64-bit code.  GNU and HP use different nomenclature:
+	    #
+	    # $ CC_FOR_BUILD=cc ./config.guess
+	    # => hppa2.0w-hp-hpux11.23
+	    # $ CC_FOR_BUILD="cc +DA2.0w" ./config.guess
+	    # => hppa64-hp-hpux11.23
+
+	    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |
+		grep __LP64__ >/dev/null
+	    then
+		HP_ARCH="hppa2.0w"
+	    else
+		HP_ARCH="hppa64"
+	    fi
+	fi
 	echo ${HP_ARCH}-hp-hpux${HPUX_REV}
-	exit 0 ;;
+	exit ;;
     ia64:HP-UX:*:*)
 	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
 	echo ia64-hp-hpux${HPUX_REV}
-	exit 0 ;;
+	exit ;;
     3050*:HI-UX:*:*)
 	eval $set_cc_for_build
 	sed 's/^	//' << EOF >$dummy.c
@@ -661,146 +675,166 @@
 	  exit (0);
 	}
 EOF
-	$CC_FOR_BUILD $dummy.c -o $dummy && $dummy && rm -f $dummy.c $dummy && rmdir $tmpdir && exit 0
-	rm -f $dummy.c $dummy && rmdir $tmpdir
+	$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&
+		{ echo "$SYSTEM_NAME"; exit; }
 	echo unknown-hitachi-hiuxwe2
-	exit 0 ;;
+	exit ;;
     9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )
 	echo hppa1.1-hp-bsd
-	exit 0 ;;
+	exit ;;
     9000/8??:4.3bsd:*:*)
 	echo hppa1.0-hp-bsd
-	exit 0 ;;
+	exit ;;
     *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)
 	echo hppa1.0-hp-mpeix
-	exit 0 ;;
+	exit ;;
     hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )
 	echo hppa1.1-hp-osf
-	exit 0 ;;
+	exit ;;
     hp8??:OSF1:*:*)
 	echo hppa1.0-hp-osf
-	exit 0 ;;
+	exit ;;
     i*86:OSF1:*:*)
 	if [ -x /usr/sbin/sysversion ] ; then
 	    echo ${UNAME_MACHINE}-unknown-osf1mk
 	else
 	    echo ${UNAME_MACHINE}-unknown-osf1
 	fi
-	exit 0 ;;
+	exit ;;
     parisc*:Lites*:*:*)
 	echo hppa1.1-hp-lites
-	exit 0 ;;
+	exit ;;
     C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)
 	echo c1-convex-bsd
-        exit 0 ;;
+        exit ;;
     C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)
 	if getsysinfo -f scalar_acc
 	then echo c32-convex-bsd
 	else echo c2-convex-bsd
 	fi
-        exit 0 ;;
+        exit ;;
     C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)
 	echo c34-convex-bsd
-        exit 0 ;;
+        exit ;;
     C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)
 	echo c38-convex-bsd
-        exit 0 ;;
+        exit ;;
     C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)
 	echo c4-convex-bsd
-        exit 0 ;;
+        exit ;;
     CRAY*Y-MP:*:*:*)
 	echo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
-	exit 0 ;;
+	exit ;;
     CRAY*[A-Z]90:*:*:*)
 	echo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \
 	| sed -e 's/CRAY.*\([A-Z]90\)/\1/' \
 	      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \
 	      -e 's/\.[^.]*$/.X/'
-	exit 0 ;;
+	exit ;;
     CRAY*TS:*:*:*)
 	echo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
-	exit 0 ;;
-    CRAY*T3D:*:*:*)
-	echo alpha-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
-	exit 0 ;;
+	exit ;;
     CRAY*T3E:*:*:*)
 	echo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
-	exit 0 ;;
+	exit ;;
     CRAY*SV1:*:*:*)
 	echo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
-	exit 0 ;;
+	exit ;;
+    *:UNICOS/mp:*:*)
+	echo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
     F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)
 	FUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
         FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
         FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`
         echo "${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
-        exit 0 ;;
+        exit ;;
+    5000:UNIX_System_V:4.*:*)
+        FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
+        FUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`
+        echo "sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
+	exit ;;
     i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\ Embedded/OS:*:*)
 	echo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     sparc*:BSD/OS:*:*)
 	echo sparc-unknown-bsdi${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     *:BSD/OS:*:*)
 	echo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     *:FreeBSD:*:*)
-	# Determine whether the default compiler uses glibc.
-	eval $set_cc_for_build
-	sed 's/^	//' << EOF >$dummy.c
-	#include <features.h>
-	#if __GLIBC__ >= 2
-	LIBC=gnu
-	#else
-	LIBC=
-	#endif
-EOF
-	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^LIBC=`
-	rm -f $dummy.c && rmdir $tmpdir
-	echo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`${LIBC:+-$LIBC}
-	exit 0 ;;
+	echo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
+	exit ;;
     i*:CYGWIN*:*)
 	echo ${UNAME_MACHINE}-pc-cygwin
-	exit 0 ;;
+	exit ;;
     i*:MINGW*:*)
 	echo ${UNAME_MACHINE}-pc-mingw32
-	exit 0 ;;
+	exit ;;
+    i*:windows32*:*)
+    	# uname -m includes "-pc" on this system.
+    	echo ${UNAME_MACHINE}-mingw32
+	exit ;;
     i*:PW*:*)
 	echo ${UNAME_MACHINE}-pc-pw32
-	exit 0 ;;
-    x86:Interix*:3*)
-	echo i386-pc-interix3
-	exit 0 ;;
+	exit ;;
+    x86:Interix*:[34]*)
+	echo i586-pc-interix${UNAME_RELEASE}|sed -e 's/\..*//'
+	exit ;;
+    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)
+	echo i${UNAME_MACHINE}-pc-mks
+	exit ;;
     i*:Windows_NT*:* | Pentium*:Windows_NT*:*)
 	# How do we know it's Interix rather than the generic POSIX subsystem?
 	# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we
 	# UNAME_MACHINE based on the output of uname instead of i386?
-	echo i386-pc-interix
-	exit 0 ;;
+	echo i586-pc-interix
+	exit ;;
     i*:UWIN*:*)
 	echo ${UNAME_MACHINE}-pc-uwin
-	exit 0 ;;
+	exit ;;
+    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)
+	echo x86_64-unknown-cygwin
+	exit ;;
     p*:CYGWIN*:*)
 	echo powerpcle-unknown-cygwin
-	exit 0 ;;
+	exit ;;
     prep*:SunOS:5.*:*)
 	echo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
-	exit 0 ;;
+	exit ;;
     *:GNU:*:*)
+	# the GNU system
 	echo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`
-	exit 0 ;;
+	exit ;;
+    *:GNU/*:*:*)
+	# other systems with GNU libc and userland
+	echo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-gnu
+	exit ;;
     i*86:Minix:*:*)
 	echo ${UNAME_MACHINE}-pc-minix
-	exit 0 ;;
+	exit ;;
     arm*:Linux:*:*)
 	echo ${UNAME_MACHINE}-unknown-linux-gnu
-	exit 0 ;;
+	exit ;;
+    cris:Linux:*:*)
+	echo cris-axis-linux-gnu
+	exit ;;
+    crisv32:Linux:*:*)
+	echo crisv32-axis-linux-gnu
+	exit ;;
+    frv:Linux:*:*)
+    	echo frv-unknown-linux-gnu
+	exit ;;
     ia64:Linux:*:*)
 	echo ${UNAME_MACHINE}-unknown-linux-gnu
-	exit 0 ;;
+	exit ;;
+    m32r*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
     m68*:Linux:*:*)
 	echo ${UNAME_MACHINE}-unknown-linux-gnu
-	exit 0 ;;
+	exit ;;
     mips:Linux:*:*)
 	eval $set_cc_for_build
 	sed 's/^	//' << EOF >$dummy.c
@@ -818,15 +852,36 @@
 	#endif
 EOF
 	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^CPU=`
-	rm -f $dummy.c && rmdir $tmpdir
-	test x"${CPU}" != x && echo "${CPU}-pc-linux-gnu" && exit 0
+	test x"${CPU}" != x && { echo "${CPU}-unknown-linux-gnu"; exit; }
+	;;
+    mips64:Linux:*:*)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#undef CPU
+	#undef mips64
+	#undef mips64el
+	#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)
+	CPU=mips64el
+	#else
+	#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
+	CPU=mips64
+	#else
+	CPU=
+	#endif
+	#endif
+EOF
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^CPU=`
+	test x"${CPU}" != x && { echo "${CPU}-unknown-linux-gnu"; exit; }
 	;;
+    or32:Linux:*:*)
+	echo or32-unknown-linux-gnu
+	exit ;;
     ppc:Linux:*:*)
 	echo powerpc-unknown-linux-gnu
-	exit 0 ;;
+	exit ;;
     ppc64:Linux:*:*)
 	echo powerpc64-unknown-linux-gnu
-	exit 0 ;;
+	exit ;;
     alpha:Linux:*:*)
 	case `sed -n '/^cpu model/s/^.*: \(.*\)/\1/p' < /proc/cpuinfo` in
 	  EV5)   UNAME_MACHINE=alphaev5 ;;
@@ -840,7 +895,7 @@
 	objdump --private-headers /bin/sh | grep ld.so.1 >/dev/null
 	if test "$?" = 0 ; then LIBC="libc1" ; else LIBC="" ; fi
 	echo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC}
-	exit 0 ;;
+	exit ;;
     parisc:Linux:*:* | hppa:Linux:*:*)
 	# Look for CPU level
 	case `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in
@@ -848,22 +903,25 @@
 	  PA8*) echo hppa2.0-unknown-linux-gnu ;;
 	  *)    echo hppa-unknown-linux-gnu ;;
 	esac
-	exit 0 ;;
+	exit ;;
     parisc64:Linux:*:* | hppa64:Linux:*:*)
 	echo hppa64-unknown-linux-gnu
-	exit 0 ;;
+	exit ;;
     s390:Linux:*:* | s390x:Linux:*:*)
 	echo ${UNAME_MACHINE}-ibm-linux
-	exit 0 ;;
+	exit ;;
+    sh64*:Linux:*:*)
+    	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
     sh*:Linux:*:*)
 	echo ${UNAME_MACHINE}-unknown-linux-gnu
-	exit 0 ;;
+	exit ;;
     sparc:Linux:*:* | sparc64:Linux:*:*)
 	echo ${UNAME_MACHINE}-unknown-linux-gnu
-	exit 0 ;;
+	exit ;;
     x86_64:Linux:*:*)
 	echo x86_64-unknown-linux-gnu
-	exit 0 ;;
+	exit ;;
     i*86:Linux:*:*)
 	# The BFD linker knows what the default object file format is, so
 	# first see if it will tell us. cd to the root directory to prevent
@@ -881,15 +939,15 @@
 		;;
 	  a.out-i386-linux)
 		echo "${UNAME_MACHINE}-pc-linux-gnuaout"
-		exit 0 ;;
+		exit ;;
 	  coff-i386)
 		echo "${UNAME_MACHINE}-pc-linux-gnucoff"
-		exit 0 ;;
+		exit ;;
 	  "")
 		# Either a pre-BFD a.out linker (linux-gnuoldld) or
 		# one that does not give us useful --help.
 		echo "${UNAME_MACHINE}-pc-linux-gnuoldld"
-		exit 0 ;;
+		exit ;;
 	esac
 	# Determine whether the default compiler is a.out or elf
 	eval $set_cc_for_build
@@ -912,18 +970,23 @@
 	LIBC=gnuaout
 	#endif
 	#endif
+	#ifdef __dietlibc__
+	LIBC=dietlibc
+	#endif
 EOF
 	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^LIBC=`
-	rm -f $dummy.c && rmdir $tmpdir
-	test x"${LIBC}" != x && echo "${UNAME_MACHINE}-pc-linux-${LIBC}" && exit 0
-	test x"${TENTATIVE}" != x && echo "${TENTATIVE}" && exit 0
+	test x"${LIBC}" != x && {
+		echo "${UNAME_MACHINE}-pc-linux-${LIBC}"
+		exit
+	}
+	test x"${TENTATIVE}" != x && { echo "${TENTATIVE}"; exit; }
 	;;
     i*86:DYNIX/ptx:4*:*)
 	# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.
 	# earlier versions are messed up and put the nodename in both
 	# sysname and nodename.
 	echo i386-sequent-sysv4
-	exit 0 ;;
+	exit ;;
     i*86:UNIX_SV:4.2MP:2.*)
         # Unixware is an offshoot of SVR4, but it has its own version
         # number series starting with 2...
@@ -931,7 +994,27 @@
 	# I just have to hope.  -- rms.
         # Use sysv4.2uw... so that sysv4* matches it.
 	echo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}
-	exit 0 ;;
+	exit ;;
+    i*86:OS/2:*:*)
+	# If we were able to find `uname', then EMX Unix compatibility
+	# is probably installed.
+	echo ${UNAME_MACHINE}-pc-os2-emx
+	exit ;;
+    i*86:XTS-300:*:STOP)
+	echo ${UNAME_MACHINE}-unknown-stop
+	exit ;;
+    i*86:atheos:*:*)
+	echo ${UNAME_MACHINE}-unknown-atheos
+	exit ;;
+    i*86:syllable:*:*)
+	echo ${UNAME_MACHINE}-pc-syllable
+	exit ;;
+    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.0*:*)
+	echo i386-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    i*86:*DOS:*:*)
+	echo ${UNAME_MACHINE}-pc-msdosdjgpp
+	exit ;;
     i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)
 	UNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\/MP$//'`
 	if grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then
@@ -939,15 +1022,16 @@
 	else
 		echo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}
 	fi
-	exit 0 ;;
-    i*86:*:5:[78]*)
+	exit ;;
+    i*86:*:5:[678]*)
+    	# UnixWare 7.x, OpenUNIX and OpenServer 6.
 	case `/bin/uname -X | grep "^Machine"` in
 	    *486*)	     UNAME_MACHINE=i486 ;;
 	    *Pentium)	     UNAME_MACHINE=i586 ;;
 	    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;
 	esac
 	echo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}
-	exit 0 ;;
+	exit ;;
     i*86:*:3.2:*)
 	if test -f /usr/options/cb.name; then
 		UNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`
@@ -965,76 +1049,73 @@
 	else
 		echo ${UNAME_MACHINE}-pc-sysv32
 	fi
-	exit 0 ;;
-    i*86:*DOS:*:*)
-	echo ${UNAME_MACHINE}-pc-msdosdjgpp
-	exit 0 ;;
+	exit ;;
     pc:*:*:*)
 	# Left here for compatibility:
         # uname -m prints for DJGPP always 'pc', but it prints nothing about
         # the processor, so we play safe by assuming i386.
 	echo i386-pc-msdosdjgpp
-        exit 0 ;;
+        exit ;;
     Intel:Mach:3*:*)
 	echo i386-pc-mach3
-	exit 0 ;;
+	exit ;;
     paragon:*:*:*)
 	echo i860-intel-osf1
-	exit 0 ;;
+	exit ;;
     i860:*:4.*:*) # i860-SVR4
 	if grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then
 	  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4
 	else # Add other i860-SVR4 vendors below as they are discovered.
 	  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4
 	fi
-	exit 0 ;;
+	exit ;;
     mini*:CTIX:SYS*5:*)
 	# "miniframe"
 	echo m68010-convergent-sysv
-	exit 0 ;;
+	exit ;;
     mc68k:UNIX:SYSTEM5:3.51m)
 	echo m68k-convergent-sysv
-	exit 0 ;;
-    M68*:*:R3V[567]*:*)
-	test -r /sysV68 && echo 'm68k-motorola-sysv' && exit 0 ;;
-    3[34]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0)
+	exit ;;
+    M680?0:D-NIX:5.3:*)
+	echo m68k-diab-dnix
+	exit ;;
+    M68*:*:R3V[5678]*:*)
+	test -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;
+    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)
 	OS_REL=''
 	test -r /etc/.relid \
 	&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
 	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
-	  && echo i486-ncr-sysv4.3${OS_REL} && exit 0
+	  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }
 	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
-	  && echo i586-ncr-sysv4.3${OS_REL} && exit 0 ;;
+	  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;
     3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
         /bin/uname -p 2>/dev/null | grep 86 >/dev/null \
-          && echo i486-ncr-sysv4 && exit 0 ;;
+          && { echo i486-ncr-sysv4; exit; } ;;
     m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)
 	echo m68k-unknown-lynxos${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     mc68030:UNIX_System_V:4.*:*)
 	echo m68k-atari-sysv4
-	exit 0 ;;
-    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.0*:*)
-	echo i386-unknown-lynxos${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     TSUNAMI:LynxOS:2.*:*)
 	echo sparc-unknown-lynxos${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     rs6000:LynxOS:2.*:*)
 	echo rs6000-unknown-lynxos${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.0*:*)
 	echo powerpc-unknown-lynxos${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     SM[BE]S:UNIX_SV:*:*)
 	echo mips-dde-sysv${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     RM*:ReliantUNIX-*:*:*)
 	echo mips-sni-sysv4
-	exit 0 ;;
+	exit ;;
     RM*:SINIX-*:*:*)
 	echo mips-sni-sysv4
-	exit 0 ;;
+	exit ;;
     *:SINIX-*:*:*)
 	if uname -p 2>/dev/null >/dev/null ; then
 		UNAME_MACHINE=`(uname -p) 2>/dev/null`
@@ -1042,64 +1123,73 @@
 	else
 		echo ns32k-sni-sysv
 	fi
-	exit 0 ;;
+	exit ;;
     PENTIUM:*:4.0*:*) # Unisys `ClearPath HMP IX 4000' SVR4/MP effort
                       # says <Richard.M.Bartel@ccMail.Census.GOV>
         echo i586-unisys-sysv4
-        exit 0 ;;
+        exit ;;
     *:UNIX_System_V:4*:FTX*)
 	# From Gerald Hewes <hewes@openmarket.com>.
 	# How about differentiating between stratus architectures? -djm
 	echo hppa1.1-stratus-sysv4
-	exit 0 ;;
+	exit ;;
     *:*:*:FTX*)
 	# From seanf@swdc.stratus.com.
 	echo i860-stratus-sysv4
-	exit 0 ;;
+	exit ;;
+    i*86:VOS:*:*)
+	# From Paul.Green@stratus.com.
+	echo ${UNAME_MACHINE}-stratus-vos
+	exit ;;
     *:VOS:*:*)
 	# From Paul.Green@stratus.com.
 	echo hppa1.1-stratus-vos
-	exit 0 ;;
+	exit ;;
     mc68*:A/UX:*:*)
 	echo m68k-apple-aux${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     news*:NEWS-OS:6*:*)
 	echo mips-sony-newsos6
-	exit 0 ;;
+	exit ;;
     R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)
 	if [ -d /usr/nec ]; then
 	        echo mips-nec-sysv${UNAME_RELEASE}
 	else
 	        echo mips-unknown-sysv${UNAME_RELEASE}
 	fi
-        exit 0 ;;
+        exit ;;
     BeBox:BeOS:*:*)	# BeOS running on hardware made by Be, PPC only.
 	echo powerpc-be-beos
-	exit 0 ;;
+	exit ;;
     BeMac:BeOS:*:*)	# BeOS running on Mac or Mac clone, PPC only.
 	echo powerpc-apple-beos
-	exit 0 ;;
+	exit ;;
     BePC:BeOS:*:*)	# BeOS running on Intel PC compatible.
 	echo i586-pc-beos
-	exit 0 ;;
+	exit ;;
     SX-4:SUPER-UX:*:*)
 	echo sx4-nec-superux${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     SX-5:SUPER-UX:*:*)
 	echo sx5-nec-superux${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     SX-6:SUPER-UX:*:*)
 	echo sx6-nec-superux${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     Power*:Rhapsody:*:*)
 	echo powerpc-apple-rhapsody${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     *:Rhapsody:*:*)
 	echo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     *:Darwin:*:*)
-	echo `uname -p`-apple-darwin${UNAME_RELEASE}
-	exit 0 ;;
+	UNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown
+	case $UNAME_PROCESSOR in
+	    *86) UNAME_PROCESSOR=i686 ;;
+	    unknown) UNAME_PROCESSOR=powerpc ;;
+	esac
+	echo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}
+	exit ;;
     *:procnto*:*:* | *:QNX:[0123456789]*:*)
 	UNAME_PROCESSOR=`uname -p`
 	if test "$UNAME_PROCESSOR" = "x86"; then
@@ -1107,22 +1197,25 @@
 		UNAME_MACHINE=pc
 	fi
 	echo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     *:QNX:*:4*)
 	echo i386-pc-qnx
-	exit 0 ;;
-    NSR-[DGKLNPTVW]:NONSTOP_KERNEL:*:*)
+	exit ;;
+    NSE-?:NONSTOP_KERNEL:*:*)
+	echo nse-tandem-nsk${UNAME_RELEASE}
+	exit ;;
+    NSR-?:NONSTOP_KERNEL:*:*)
 	echo nsr-tandem-nsk${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     *:NonStop-UX:*:*)
 	echo mips-compaq-nonstopux
-	exit 0 ;;
+	exit ;;
     BS2000:POSIX*:*:*)
 	echo bs2000-siemens-sysv
-	exit 0 ;;
+	exit ;;
     DS/*:UNIX_System_V:*:*)
 	echo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     *:Plan9:*:*)
 	# "uname -m" is not consistent, so use $cputype instead. 386
 	# is converted to i386 for consistency with other x86
@@ -1133,36 +1226,44 @@
 	    UNAME_MACHINE="$cputype"
 	fi
 	echo ${UNAME_MACHINE}-unknown-plan9
-	exit 0 ;;
-    i*86:OS/2:*:*)
-	# If we were able to find `uname', then EMX Unix compatibility
-	# is probably installed.
-	echo ${UNAME_MACHINE}-pc-os2-emx
-	exit 0 ;;
+	exit ;;
     *:TOPS-10:*:*)
 	echo pdp10-unknown-tops10
-	exit 0 ;;
+	exit ;;
     *:TENEX:*:*)
 	echo pdp10-unknown-tenex
-	exit 0 ;;
+	exit ;;
     KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)
 	echo pdp10-dec-tops20
-	exit 0 ;;
+	exit ;;
     XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)
 	echo pdp10-xkl-tops20
-	exit 0 ;;
+	exit ;;
     *:TOPS-20:*:*)
 	echo pdp10-unknown-tops20
-	exit 0 ;;
+	exit ;;
     *:ITS:*:*)
 	echo pdp10-unknown-its
-	exit 0 ;;
-    i*86:XTS-300:*:STOP)
-	echo ${UNAME_MACHINE}-unknown-stop
-	exit 0 ;;
-    i*86:atheos:*:*)
-	echo ${UNAME_MACHINE}-unknown-atheos
-	exit 0 ;;
+	exit ;;
+    SEI:*:*:SEIUX)
+        echo mips-sei-seiux${UNAME_RELEASE}
+	exit ;;
+    *:DragonFly:*:*)
+	echo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
+	exit ;;
+    *:*VMS:*:*)
+    	UNAME_MACHINE=`(uname -p) 2>/dev/null`
+	case "${UNAME_MACHINE}" in
+	    A*) echo alpha-dec-vms ; exit ;;
+	    I*) echo ia64-dec-vms ; exit ;;
+	    V*) echo vax-dec-vms ; exit ;;
+	esac ;;
+    *:XENIX:*:SysV)
+	echo i386-pc-xenix
+	exit ;;
+    i*86:skyos:*:*)
+	echo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'
+	exit ;;
 esac
 
 #echo '(No uname command or uname output not recognized.)' 1>&2
@@ -1194,7 +1295,7 @@
 #endif
 
 #if defined (__arm) && defined (__acorn) && defined (__unix)
-  printf ("arm-acorn-riscix"); exit (0);
+  printf ("arm-acorn-riscix\n"); exit (0);
 #endif
 
 #if defined (hp300) && !defined (hpux)
@@ -1283,12 +1384,12 @@
 }
 EOF
 
-$CC_FOR_BUILD $dummy.c -o $dummy 2>/dev/null && $dummy && rm -f $dummy.c $dummy && rmdir $tmpdir && exit 0
-rm -f $dummy.c $dummy && rmdir $tmpdir
+$CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null && SYSTEM_NAME=`$dummy` &&
+	{ echo "$SYSTEM_NAME"; exit; }
 
 # Apollos put the system type in the environment.
 
-test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit 0; }
+test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit; }
 
 # Convex versions that predate uname can use getsysinfo(1)
 
@@ -1297,22 +1398,22 @@
     case `getsysinfo -f cpu_type` in
     c1*)
 	echo c1-convex-bsd
-	exit 0 ;;
+	exit ;;
     c2*)
 	if getsysinfo -f scalar_acc
 	then echo c32-convex-bsd
 	else echo c2-convex-bsd
 	fi
-	exit 0 ;;
+	exit ;;
     c34*)
 	echo c34-convex-bsd
-	exit 0 ;;
+	exit ;;
     c38*)
 	echo c38-convex-bsd
-	exit 0 ;;
+	exit ;;
     c4*)
 	echo c4-convex-bsd
-	exit 0 ;;
+	exit ;;
     esac
 fi
 
@@ -1323,7 +1424,9 @@
 the operating system you are using. It is advised that you
 download the most up to date version of the config scripts from
 
-    ftp://ftp.gnu.org/pub/gnu/config/
+  http://savannah.gnu.org/cgi-bin/viewcvs/*checkout*/config/config/config.guess
+and
+  http://savannah.gnu.org/cgi-bin/viewcvs/*checkout*/config/config/config.sub
 
 If the version you run ($0) is already up to date, please
 send the following data and any information you think might be
diff -Nur m148/dmake/config.h.in dmake43p01/dmake/config.h.in
--- dmake/config.h.in	2004-10-22 10:03:52.000000000 +0200
+++ dmake/config.h.in	2006-01-26 03:54:26.000000000 +0100
@@ -1,5 +1,8 @@
 /* config.h.in.  Generated from configure.in by autoheader.  */
 
+/* Build info string */
+#undef BUILDINFO
+
 /* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.
    */
 #undef HAVE_DIRENT_H
@@ -126,6 +129,10 @@
 /* Define to 1 if you have the <wait.h> header file. */
 #undef HAVE_WAIT_H
 
+/* Do not check for drive letters. Introduced as an optimization for iz61170.
+   */
+#undef NO_DRIVE_LETTERS
+
 /* Name of package */
 #undef PACKAGE
 
@@ -162,6 +169,10 @@
 /* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
 #undef TIME_WITH_SYS_TIME
 
+/* Use sane redirection mechanism for systems that support parallel building,
+   see iz53148. */
+#undef USE_SANE_EXEC_SHELL_REDIR
+
 /* Version number of package */
 #undef VERSION
 
diff -Nur m148/dmake/config.sub dmake43p01/dmake/config.sub
--- dmake/config.sub	2001-04-20 16:15:45.000000000 +0200
+++ dmake/config.sub	2006-01-11 18:46:02.000000000 +0100
@@ -1,6 +1,10 @@
 #! /bin/sh
-# Configuration validation subroutine script, version 1.1.
-#   Copyright (C) 1991, 92-97, 1998, 1999 Free Software Foundation, Inc.
+# Configuration validation subroutine script.
+#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
+#   2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.
+
+timestamp='2005-07-08'
+
 # This file is (in principle) common to ALL GNU software.
 # The presence of a machine in this file suggests that SOME GNU software
 # can handle that machine.  It does not imply ALL GNU software can.
@@ -17,14 +21,18 @@
 #
 # You should have received a copy of the GNU General Public License
 # along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330,
-# Boston, MA 02111-1307, USA.
-
+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA
+# 02110-1301, USA.
+#
 # As a special exception to the GNU General Public License, if you
 # distribute this file as part of a program that contains a
 # configuration script generated by Autoconf, you may include it under
 # the same distribution terms that you use for the rest of that program.
 
+
+# Please send patches to <config-patches@gnu.org>.  Submit a context
+# diff and a properly formatted ChangeLog entry.
+#
 # Configuration subroutine to validate and canonicalize a configuration type.
 # Supply the specified configuration type as an argument.
 # If it is invalid, we print an error message on stderr and exit with code 1.
@@ -45,30 +53,74 @@
 #	CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM
 # It is wrong to echo any other type of specification.
 
-if [ x$1 = x ]
-then
-	echo Configuration name missing. 1>&2
-	echo "Usage: $0 CPU-MFR-OPSYS" 1>&2
-	echo "or     $0 ALIAS" 1>&2
-	echo where ALIAS is a recognized configuration type. 1>&2
-	exit 1
-fi
+me=`echo "$0" | sed -e 's,.*/,,'`
 
-# First pass through any local machine types.
-case $1 in
-	*local*)
-		echo $1
-		exit 0
-		;;
-	*)
-	;;
+usage="\
+Usage: $0 [OPTION] CPU-MFR-OPSYS
+       $0 [OPTION] ALIAS
+
+Canonicalize a configuration name.
+
+Operation modes:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.sub ($timestamp)
+
+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005
+Free Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try \`$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit ;;
+    --version | -v )
+       echo "$version" ; exit ;;
+    --help | --h* | -h )
+       echo "$usage"; exit ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help"
+       exit 1 ;;
+
+    *local*)
+       # First pass through any local machine types.
+       echo $1
+       exit ;;
+
+    * )
+       break ;;
+  esac
+done
+
+case $# in
+ 0) echo "$me: missing argument$help" >&2
+    exit 1;;
+ 1) ;;
+ *) echo "$me: too many arguments$help" >&2
+    exit 1;;
 esac
 
 # Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).
 # Here we must recognize all the valid KERNEL-OS combinations.
 maybe_os=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
 case $maybe_os in
-  linux-gnu*)
+  nto-qnx* | linux-gnu* | linux-dietlibc | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | \
+  kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* | storm-chaos* | os2-emx* | rtmk-nova*)
     os=-$maybe_os
     basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
     ;;
@@ -94,7 +146,7 @@
 	-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\
 	-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \
 	-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \
-	-apple)
+	-apple | -axis | -knuth | -cray)
 		os=
 		basic_machine=$1
 		;;
@@ -105,9 +157,17 @@
 	-scout)
 		;;
 	-wrs)
-		os=vxworks
+		os=-vxworks
+		basic_machine=$1
+		;;
+	-chorusos*)
+		os=-chorusos
 		basic_machine=$1
 		;;
+ 	-chorusrdb)
+ 		os=-chorusrdb
+		basic_machine=$1
+ 		;;
 	-hiux*)
 		os=-hiuxwe2
 		;;
@@ -156,33 +216,81 @@
 	-psos*)
 		os=-psos
 		;;
+	-mint | -mint[0-9]*)
+		basic_machine=m68k-atari
+		os=-mint
+		;;
 esac
 
 # Decode aliases for certain CPU-COMPANY combinations.
 case $basic_machine in
 	# Recognize the basic CPU types without company name.
 	# Some are omitted here because they have special meanings below.
-	tahoe | i860 | m32r | m68k | m68000 | m88k | ns32k | arc | arm \
-		| arme[lb] | pyramid | mn10200 | mn10300 | tron | a29k \
-		| 580 | i960 | h8300 \
-		| hppa | hppa1.0 | hppa1.1 | hppa2.0 | hppa2.0w | hppa2.0n \
-		| alpha | alphaev[4-7] | alphaev56 | alphapca5[67] \
-		| we32k | ns16k | clipper | i370 | sh | powerpc | powerpcle \
-		| 1750a | dsp16xx | pdp11 | mips16 | mips64 | mipsel | mips64el \
-		| mips64orion | mips64orionel | mipstx39 | mipstx39el \
-		| mips64vr4300 | mips64vr4300el | mips64vr4100 | mips64vr4100el \
-		| mips64vr5000 | miprs64vr5000el \
-		| sparc | sparclet | sparclite | sparc64 | sparcv9 | v850 | c4x \
-		| thumb | d10v)
+	1750a | 580 \
+	| a29k \
+	| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \
+	| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \
+	| am33_2.0 \
+	| arc | arm | arm[bl]e | arme[lb] | armv[2345] | armv[345][lb] | avr \
+	| bfin \
+	| c4x | clipper \
+	| d10v | d30v | dlx | dsp16xx \
+	| fr30 | frv \
+	| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \
+	| i370 | i860 | i960 | ia64 \
+	| ip2k | iq2000 \
+	| m32r | m32rle | m68000 | m68k | m88k | maxq | mcore \
+	| mips | mipsbe | mipseb | mipsel | mipsle \
+	| mips16 \
+	| mips64 | mips64el \
+	| mips64vr | mips64vrel \
+	| mips64orion | mips64orionel \
+	| mips64vr4100 | mips64vr4100el \
+	| mips64vr4300 | mips64vr4300el \
+	| mips64vr5000 | mips64vr5000el \
+	| mips64vr5900 | mips64vr5900el \
+	| mipsisa32 | mipsisa32el \
+	| mipsisa32r2 | mipsisa32r2el \
+	| mipsisa64 | mipsisa64el \
+	| mipsisa64r2 | mipsisa64r2el \
+	| mipsisa64sb1 | mipsisa64sb1el \
+	| mipsisa64sr71k | mipsisa64sr71kel \
+	| mipstx39 | mipstx39el \
+	| mn10200 | mn10300 \
+	| ms1 \
+	| msp430 \
+	| ns16k | ns32k \
+	| or32 \
+	| pdp10 | pdp11 | pj | pjl \
+	| powerpc | powerpc64 | powerpc64le | powerpcle | ppcbe \
+	| pyramid \
+	| sh | sh[1234] | sh[24]a | sh[23]e | sh[34]eb | shbe | shle | sh[1234]le | sh3ele \
+	| sh64 | sh64le \
+	| sparc | sparc64 | sparc64b | sparc86x | sparclet | sparclite \
+	| sparcv8 | sparcv9 | sparcv9b \
+	| strongarm \
+	| tahoe | thumb | tic4x | tic80 | tron \
+	| v850 | v850e \
+	| we32k \
+	| x86 | xscale | xscalee[bl] | xstormy16 | xtensa \
+	| z8k)
 		basic_machine=$basic_machine-unknown
 		;;
-	m88110 | m680[12346]0 | m683?2 | m68360 | m5200 | z8k | v70 | h8500 | w65)
+	m32c)
+		basic_machine=$basic_machine-unknown
+		;;
+	m6811 | m68hc11 | m6812 | m68hc12)
+		# Motorola 68HC11/12.
+		basic_machine=$basic_machine-unknown
+		os=-none
+		;;
+	m88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)
 		;;
 
 	# We use `pc' rather than `unknown'
 	# because (1) that's what they normally are, and
 	# (2) the word "unknown" tends to confuse beginning users.
-	i[34567]86)
+	i*86 | x86_64)
 	  basic_machine=$basic_machine-pc
 	  ;;
 	# Object if more than one company name word.
@@ -191,23 +299,67 @@
 		exit 1
 		;;
 	# Recognize the basic CPU types with company name.
-	vax-* | tahoe-* | i[34567]86-* | i860-* | m32r-* | m68k-* | m68000-* \
-	      | m88k-* | sparc-* | ns32k-* | fx80-* | arc-* | arm-* | c[123]* \
-	      | mips-* | pyramid-* | tron-* | a29k-* | romp-* | rs6000-* \
-	      | power-* | none-* | 580-* | cray2-* | h8300-* | h8500-* | i960-* \
-	      | xmp-* | ymp-* \
-	      | hppa-* | hppa1.0-* | hppa1.1-* | hppa2.0-* | hppa2.0w-* | hppa2.0n-* \
-	      | alpha-* | alphaev[4-7]-* | alphaev56-* | alphapca5[67]-* \
-	      | we32k-* | cydra-* | ns16k-* | pn-* | np1-* | xps100-* \
-	      | clipper-* | orion-* \
-	      | sparclite-* | pdp11-* | sh-* | powerpc-* | powerpcle-* \
-	      | sparc64-* | sparcv9-* | sparc86x-* | mips16-* | mips64-* | mipsel-* \
-	      | mips64el-* | mips64orion-* | mips64orionel-* \
-	      | mips64vr4100-* | mips64vr4100el-* | mips64vr4300-* | mips64vr4300el-* \
-	      | mipstx39-* | mipstx39el-* \
-	      | f301-* | armv*-* | t3e-* \
-	      | m88110-* | m680[01234]0-* | m683?2-* | m68360-* | z8k-* | d10v-* \
-	      | thumb-* | v850-* | d30v-* | tic30-* | c30-* )
+	580-* \
+	| a29k-* \
+	| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \
+	| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \
+	| alphapca5[67]-* | alpha64pca5[67]-* | arc-* \
+	| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \
+	| avr-* \
+	| bfin-* | bs2000-* \
+	| c[123]* | c30-* | [cjt]90-* | c4x-* | c54x-* | c55x-* | c6x-* \
+	| clipper-* | craynv-* | cydra-* \
+	| d10v-* | d30v-* | dlx-* \
+	| elxsi-* \
+	| f30[01]-* | f700-* | fr30-* | frv-* | fx80-* \
+	| h8300-* | h8500-* \
+	| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \
+	| i*86-* | i860-* | i960-* | ia64-* \
+	| ip2k-* | iq2000-* \
+	| m32r-* | m32rle-* \
+	| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \
+	| m88110-* | m88k-* | maxq-* | mcore-* \
+	| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \
+	| mips16-* \
+	| mips64-* | mips64el-* \
+	| mips64vr-* | mips64vrel-* \
+	| mips64orion-* | mips64orionel-* \
+	| mips64vr4100-* | mips64vr4100el-* \
+	| mips64vr4300-* | mips64vr4300el-* \
+	| mips64vr5000-* | mips64vr5000el-* \
+	| mips64vr5900-* | mips64vr5900el-* \
+	| mipsisa32-* | mipsisa32el-* \
+	| mipsisa32r2-* | mipsisa32r2el-* \
+	| mipsisa64-* | mipsisa64el-* \
+	| mipsisa64r2-* | mipsisa64r2el-* \
+	| mipsisa64sb1-* | mipsisa64sb1el-* \
+	| mipsisa64sr71k-* | mipsisa64sr71kel-* \
+	| mipstx39-* | mipstx39el-* \
+	| mmix-* \
+	| ms1-* \
+	| msp430-* \
+	| none-* | np1-* | ns16k-* | ns32k-* \
+	| orion-* \
+	| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \
+	| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* | ppcbe-* \
+	| pyramid-* \
+	| romp-* | rs6000-* \
+	| sh-* | sh[1234]-* | sh[24]a-* | sh[23]e-* | sh[34]eb-* | shbe-* \
+	| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \
+	| sparc-* | sparc64-* | sparc64b-* | sparc86x-* | sparclet-* \
+	| sparclite-* \
+	| sparcv8-* | sparcv9-* | sparcv9b-* | strongarm-* | sv1-* | sx?-* \
+	| tahoe-* | thumb-* \
+	| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \
+	| tron-* \
+	| v850-* | v850e-* | vax-* \
+	| we32k-* \
+	| x86-* | x86_64-* | xps100-* | xscale-* | xscalee[bl]-* \
+	| xstormy16-* | xtensa-* \
+	| ymp-* \
+	| z8k-*)
+		;;
+	m32c-*)
 		;;
 	# Recognize the various machine names and aliases which stand
 	# for a CPU type and a company and sometimes even an OS.
@@ -225,6 +377,9 @@
 		basic_machine=a29k-amd
 		os=-udi
 		;;
+    	abacus)
+		basic_machine=abacus-unknown
+		;;
 	adobe68k)
 		basic_machine=m68010-adobe
 		os=-scout
@@ -239,19 +394,25 @@
 		basic_machine=a29k-none
 		os=-bsd
 		;;
+	amd64)
+		basic_machine=x86_64-pc
+		;;
+	amd64-*)
+		basic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
 	amdahl)
 		basic_machine=580-amdahl
 		os=-sysv
 		;;
 	amiga | amiga-*)
-		basic_machine=m68k-cbm
+		basic_machine=m68k-unknown
 		;;
 	amigaos | amigados)
-		basic_machine=m68k-cbm
+		basic_machine=m68k-unknown
 		os=-amigaos
 		;;
 	amigaunix | amix)
-		basic_machine=m68k-cbm
+		basic_machine=m68k-unknown
 		os=-sysv4
 		;;
 	apollo68)
@@ -270,6 +431,10 @@
 		basic_machine=ns32k-sequent
 		os=-dynix
 		;;
+	c90)
+		basic_machine=c90-cray
+		os=-unicos
+		;;
 	convex-c1)
 		basic_machine=c1-convex
 		os=-bsd
@@ -290,27 +455,45 @@
 		basic_machine=c38-convex
 		os=-bsd
 		;;
-	cray | ymp)
-		basic_machine=ymp-cray
+	cray | j90)
+		basic_machine=j90-cray
 		os=-unicos
 		;;
-	cray2)
-		basic_machine=cray2-cray
-		os=-unicos
+	craynv)
+		basic_machine=craynv-cray
+		os=-unicosmp
 		;;
-	[ctj]90-cray)
-		basic_machine=c90-cray
-		os=-unicos
+	cr16c)
+		basic_machine=cr16c-unknown
+		os=-elf
 		;;
 	crds | unos)
 		basic_machine=m68k-crds
 		;;
+	crisv32 | crisv32-* | etraxfs*)
+		basic_machine=crisv32-axis
+		;;
+	cris | cris-* | etrax*)
+		basic_machine=cris-axis
+		;;
+	crx)
+		basic_machine=crx-unknown
+		os=-elf
+		;;
 	da30 | da30-*)
 		basic_machine=m68k-da30
 		;;
 	decstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)
 		basic_machine=mips-dec
 		;;
+	decsystem10* | dec10*)
+		basic_machine=pdp10-dec
+		os=-tops10
+		;;
+	decsystem20* | dec20*)
+		basic_machine=pdp10-dec
+		os=-tops20
+		;;
 	delta | 3300 | motorola-3300 | motorola-delta \
 	      | 3300-motorola | delta-motorola)
 		basic_machine=m68k-motorola
@@ -319,6 +502,10 @@
 		basic_machine=m88k-motorola
 		os=-sysv3
 		;;
+	djgpp)
+		basic_machine=i586-pc
+		os=-msdosdjgpp
+		;;
 	dpx20 | dpx20-*)
 		basic_machine=rs6000-bull
 		os=-bosx
@@ -352,6 +539,10 @@
 		basic_machine=tron-gmicro
 		os=-sysv
 		;;
+	go32)
+		basic_machine=i386-pc
+		os=-go32
+		;;
 	h3050r* | hiux*)
 		basic_machine=hppa1.1-hitachi
 		os=-hiuxwe2
@@ -425,22 +616,21 @@
 		;;
 	i370-ibm* | ibm*)
 		basic_machine=i370-ibm
-		os=-mvs
 		;;
 # I'm not sure what "Sysv32" means.  Should this be sysv3.2?
-	i[34567]86v32)
+	i*86v32)
 		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
 		os=-sysv32
 		;;
-	i[34567]86v4*)
+	i*86v4*)
 		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
 		os=-sysv4
 		;;
-	i[34567]86v)
+	i*86v)
 		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
 		os=-sysv
 		;;
-	i[34567]86sol2)
+	i*86sol2)
 		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
 		os=-solaris2
 		;;
@@ -452,14 +642,6 @@
 		basic_machine=i386-unknown
 		os=-vsta
 		;;
-	i386-go32 | go32)
-		basic_machine=i386-unknown
-		os=-go32
-		;;
-	i386-mingw32 | mingw32)
-		basic_machine=i386-unknown
-		os=-mingw32
-		;;
 	iris | iris4d)
 		basic_machine=mips-sgi
 		case $os in
@@ -485,21 +667,17 @@
 		basic_machine=ns32k-utek
 		os=-sysv
 		;;
+	mingw32)
+		basic_machine=i386-pc
+		os=-mingw32
+		;;
 	miniframe)
 		basic_machine=m68000-convergent
 		;;
-	*mint | *MiNT)
+	*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)
 		basic_machine=m68k-atari
 		os=-mint
 		;;
-	mipsel*-linux*)
-		basic_machine=mipsel-unknown
-		os=-linux-gnu
-		;;
-	mips*-linux*)
-		basic_machine=mips-unknown
-		os=-linux-gnu
-		;;
 	mips3*-*)
 		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`
 		;;
@@ -510,10 +688,18 @@
 		basic_machine=m68k-rom68k
 		os=-coff
 		;;
+	morphos)
+		basic_machine=powerpc-unknown
+		os=-morphos
+		;;
 	msdos)
-		basic_machine=i386-unknown
+		basic_machine=i386-pc
 		os=-msdos
 		;;
+	mvs)
+		basic_machine=i370-ibm
+		os=-mvs
+		;;
 	ncr3000)
 		basic_machine=i486-ncr
 		os=-sysv4
@@ -523,7 +709,7 @@
 		os=-netbsd
 		;;
 	netwinder)
-		basic_machine=armv4l-corel
+		basic_machine=armv4l-rebel
 		os=-linux
 		;;
 	news | news700 | news800 | news900)
@@ -571,13 +757,27 @@
 		basic_machine=i960-intel
 		os=-mon960
 		;;
+	nonstopux)
+		basic_machine=mips-compaq
+		os=-nonstopux
+		;;
 	np1)
 		basic_machine=np1-gould
 		;;
+	nsr-tandem)
+		basic_machine=nsr-tandem
+		;;
 	op50n-* | op60c-*)
 		basic_machine=hppa1.1-oki
 		os=-proelf
 		;;
+	openrisc | openrisc-*)
+		basic_machine=or32-unknown
+		;;
+	os400)
+		basic_machine=powerpc-ibm
+		os=-os400
+		;;
 	OSE68000 | ose68000)
 		basic_machine=m68000-ericsson
 		os=-ose
@@ -600,45 +800,65 @@
 	pbb)
 		basic_machine=m68k-tti
 		;;
-        pc532 | pc532-*)
+	pc532 | pc532-*)
 		basic_machine=ns32k-pc532
 		;;
-	pentium | p5 | k5 | k6 | nexen)
+	pentium | p5 | k5 | k6 | nexgen | viac3)
 		basic_machine=i586-pc
 		;;
-	pentiumpro | p6 | 6x86)
+	pentiumpro | p6 | 6x86 | athlon | athlon_*)
 		basic_machine=i686-pc
 		;;
-	pentiumii | pentium2)
+	pentiumii | pentium2 | pentiumiii | pentium3)
+		basic_machine=i686-pc
+		;;
+	pentium4)
 		basic_machine=i786-pc
 		;;
-	pentium-* | p5-* | k5-* | k6-* | nexen-*)
+	pentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)
 		basic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
-	pentiumpro-* | p6-* | 6x86-*)
+	pentiumpro-* | p6-* | 6x86-* | athlon-*)
 		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
-	pentiumii-* | pentium2-*)
+	pentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)
+		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentium4-*)
 		basic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
 	pn)
 		basic_machine=pn-gould
 		;;
-	power)	basic_machine=rs6000-ibm
+	power)	basic_machine=power-ibm
 		;;
 	ppc)	basic_machine=powerpc-unknown
-	        ;;
+		;;
 	ppc-*)	basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
 	ppcle | powerpclittle | ppc-le | powerpc-little)
 		basic_machine=powerpcle-unknown
-	        ;;
+		;;
 	ppcle-* | powerpclittle-*)
 		basic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
+	ppc64)	basic_machine=powerpc64-unknown
+		;;
+	ppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppc64le | powerpc64little | ppc64-le | powerpc64-little)
+		basic_machine=powerpc64le-unknown
+		;;
+	ppc64le-* | powerpc64little-*)
+		basic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
 	ps2)
 		basic_machine=i386-ibm
 		;;
+	pw32)
+		basic_machine=i586-unknown
+		os=-pw32
+		;;
 	rom68k)
 		basic_machine=m68k-rom68k
 		os=-coff
@@ -649,10 +869,26 @@
 	rtpc | rtpc-*)
 		basic_machine=romp-ibm
 		;;
+	s390 | s390-*)
+		basic_machine=s390-ibm
+		;;
+	s390x | s390x-*)
+		basic_machine=s390x-ibm
+		;;
 	sa29200)
 		basic_machine=a29k-amd
 		os=-udi
 		;;
+	sb1)
+		basic_machine=mipsisa64sb1-unknown
+		;;
+	sb1el)
+		basic_machine=mipsisa64sb1el-unknown
+		;;
+	sei)
+		basic_machine=mips-sei
+		os=-seiux
+		;;
 	sequent)
 		basic_machine=i386-sequent
 		;;
@@ -660,7 +896,10 @@
 		basic_machine=sh-hitachi
 		os=-hms
 		;;
-	sparclite-wrs)
+	sh64)
+		basic_machine=sh64-unknown
+		;;
+	sparclite-wrs | simso-wrs)
 		basic_machine=sparclite-wrs
 		os=-vxworks
 		;;
@@ -718,23 +957,51 @@
 	sun386 | sun386i | roadrunner)
 		basic_machine=i386-sun
 		;;
+	sv1)
+		basic_machine=sv1-cray
+		os=-unicos
+		;;
 	symmetry)
 		basic_machine=i386-sequent
 		os=-dynix
 		;;
 	t3e)
-		basic_machine=t3e-cray
+		basic_machine=alphaev5-cray
 		os=-unicos
 		;;
+	t90)
+		basic_machine=t90-cray
+		os=-unicos
+		;;
+	tic54x | c54x*)
+		basic_machine=tic54x-unknown
+		os=-coff
+		;;
+	tic55x | c55x*)
+		basic_machine=tic55x-unknown
+		os=-coff
+		;;
+	tic6x | c6x*)
+		basic_machine=tic6x-unknown
+		os=-coff
+		;;
 	tx39)
 		basic_machine=mipstx39-unknown
 		;;
 	tx39el)
 		basic_machine=mipstx39el-unknown
 		;;
+	toad1)
+		basic_machine=pdp10-xkl
+		os=-tops20
+		;;
 	tower | tower-32)
 		basic_machine=m68k-ncr
 		;;
+	tpf)
+		basic_machine=s390x-ibm
+		os=-tpf
+		;;
 	udi29k)
 		basic_machine=a29k-amd
 		os=-udi
@@ -756,8 +1023,8 @@
 		os=-vms
 		;;
 	vpp*|vx|vx-*)
-               basic_machine=f301-fujitsu
-               ;;
+		basic_machine=f301-fujitsu
+		;;
 	vxworks960)
 		basic_machine=i960-wrs
 		os=-vxworks
@@ -778,13 +1045,17 @@
 		basic_machine=hppa1.1-winbond
 		os=-proelf
 		;;
-	xmp)
-		basic_machine=xmp-cray
-		os=-unicos
+	xbox)
+		basic_machine=i686-pc
+		os=-mingw32
 		;;
-        xps | xps100)
+	xps | xps100)
 		basic_machine=xps100-honeywell
 		;;
+	ymp)
+		basic_machine=ymp-cray
+		os=-unicos
+		;;
 	z8k-*-coff)
 		basic_machine=z8k-unknown
 		os=-sim
@@ -805,32 +1076,35 @@
 	op60c)
 		basic_machine=hppa1.1-oki
 		;;
-	mips)
-		if [ x$os = x-linux-gnu ]; then
-			basic_machine=mips-unknown
-		else
-			basic_machine=mips-mips
-		fi
-		;;
 	romp)
 		basic_machine=romp-ibm
 		;;
+	mmix)
+		basic_machine=mmix-knuth
+		;;
 	rs6000)
 		basic_machine=rs6000-ibm
 		;;
 	vax)
 		basic_machine=vax-dec
 		;;
+	pdp10)
+		# there are many clones, so DEC is not a safe bet
+		basic_machine=pdp10-unknown
+		;;
 	pdp11)
 		basic_machine=pdp11-dec
 		;;
 	we32k)
 		basic_machine=we32k-att
 		;;
-	sparc | sparcv9)
+	sh[1234] | sh[24]a | sh[34]eb | sh[1234]le | sh[23]ele)
+		basic_machine=sh-unknown
+		;;
+	sparc | sparcv8 | sparcv9 | sparcv9b)
 		basic_machine=sparc-sun
 		;;
-        cydra)
+	cydra)
 		basic_machine=cydra-cydrome
 		;;
 	orion)
@@ -845,9 +1119,8 @@
 	pmac | pmac-mpw)
 		basic_machine=powerpc-apple
 		;;
-	c4x*)
-		basic_machine=c4x-none
-		os=-coff
+	*-unknown)
+		# Make sure to match an already-canonicalized machine name.
 		;;
 	*)
 		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
@@ -901,22 +1174,47 @@
 	      | -aos* \
 	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
 	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
-	      | -hiux* | -386bsd* | -netbsd* | -openbsd* | -freebsd* | -riscix* \
-	      | -lynxos* | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \
+	      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* | -openbsd* \
+	      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \
+	      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \
 	      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \
 	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
+	      | -chorusos* | -chorusrdb* \
 	      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
-	      | -mingw32* | -linux-gnu* | -uxpv* | -beos* | -mpeix* | -udk* \
-	      | -interix* | -uwin* | -rhapsody* | -openstep* | -oskit*)
+	      | -mingw32* | -linux-gnu* | -linux-uclibc* | -uxpv* | -beos* | -mpeix* | -udk* \
+	      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \
+	      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \
+	      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \
+	      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \
+	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
+	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
+	      | -skyos* | -haiku*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
+	-qnx*)
+		case $basic_machine in
+		    x86-* | i*86-*)
+			;;
+		    *)
+			os=-nto$os
+			;;
+		esac
+		;;
+	-nto-qnx*)
+		;;
+	-nto*)
+		os=`echo $os | sed -e 's|nto|nto-qnx|'`
+		;;
 	-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \
-	      | -windows* | -osx | -abug | -netware* | -os9* | -beos* \
-	      | -macos* | -mpw* | -magic* | -mon960* | -lnews*)
+	      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \
+	      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)
 		;;
 	-mac*)
 		os=`echo $os | sed -e 's|mac|macos|'`
 		;;
+	-linux-dietlibc)
+		os=-linux-dietlibc
+		;;
 	-linux*)
 		os=`echo $os | sed -e 's|linux|linux-gnu|'`
 		;;
@@ -926,6 +1224,15 @@
 	-sunos6*)
 		os=`echo $os | sed -e 's|sunos6|solaris3|'`
 		;;
+	-opened*)
+		os=-openedition
+		;;
+        -os400*)
+		os=-os400
+		;;
+	-wince*)
+		os=-wince
+		;;
 	-osfrose*)
 		os=-osfrose
 		;;
@@ -941,14 +1248,26 @@
 	-acis*)
 		os=-aos
 		;;
+	-atheos*)
+		os=-atheos
+		;;
+	-syllable*)
+		os=-syllable
+		;;
 	-386bsd)
 		os=-bsd
 		;;
 	-ctix* | -uts*)
 		os=-sysv
 		;;
+	-nova*)
+		os=-rtmk-nova
+		;;
 	-ns2 )
-	        os=-nextstep2
+		os=-nextstep2
+		;;
+	-nsk*)
+		os=-nsk
 		;;
 	# Preserve the version number of sinix5.
 	-sinix5.*)
@@ -957,6 +1276,9 @@
 	-sinix*)
 		os=-sysv4
 		;;
+        -tpf*)
+		os=-tpf
+		;;
 	-triton*)
 		os=-sysv3
 		;;
@@ -984,8 +1306,17 @@
 	-xenix)
 		os=-xenix
 		;;
-        -*mint | -*MiNT)
-	        os=-mint
+	-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+		os=-mint
+		;;
+	-aros*)
+		os=-aros
+		;;
+	-kaos*)
+		os=-kaos
+		;;
+	-zvmoe)
+		os=-zvmoe
 		;;
 	-none)
 		;;
@@ -1012,13 +1343,20 @@
 	*-acorn)
 		os=-riscix1.2
 		;;
-	arm*-corel)
+	arm*-rebel)
 		os=-linux
 		;;
 	arm*-semi)
 		os=-aout
 		;;
-        pdp11-*)
+    c4x-* | tic4x-*)
+        os=-coff
+        ;;
+	# This must come before the *-dec entry.
+	pdp10-*)
+		os=-tops20
+		;;
+	pdp11-*)
 		os=-none
 		;;
 	*-dec | vax-*)
@@ -1045,6 +1383,9 @@
 	mips*-*)
 		os=-elf
 		;;
+	or32-*)
+		os=-coff
+		;;
 	*-tti)	# must be before sparc entry or we get the wrong os.
 		os=-sysv3
 		;;
@@ -1054,9 +1395,15 @@
 	*-be)
 		os=-beos
 		;;
+	*-haiku)
+		os=-haiku
+		;;
 	*-ibm)
 		os=-aix
 		;;
+    	*-knuth)
+		os=-mmixware
+		;;
 	*-wec)
 		os=-proelf
 		;;
@@ -1108,25 +1455,25 @@
 	*-next)
 		os=-nextstep3
 		;;
-        *-gould)
+	*-gould)
 		os=-sysv
 		;;
-        *-highlevel)
+	*-highlevel)
 		os=-bsd
 		;;
 	*-encore)
 		os=-bsd
 		;;
-        *-sgi)
+	*-sgi)
 		os=-irix
 		;;
-        *-siemens)
+	*-siemens)
 		os=-sysv4
 		;;
 	*-masscomp)
 		os=-rtu
 		;;
-	f301-fujitsu)
+	f30[01]-fujitsu | f700-fujitsu)
 		os=-uxpv
 		;;
 	*-rom68k)
@@ -1186,13 +1533,19 @@
 			-genix*)
 				vendor=ns
 				;;
-			-mvs*)
+			-mvs* | -opened*)
+				vendor=ibm
+				;;
+			-os400*)
 				vendor=ibm
 				;;
 			-ptx*)
 				vendor=sequent
 				;;
-			-vxsim* | -vxworks*)
+			-tpf*)
+				vendor=ibm
+				;;
+			-vxsim* | -vxworks* | -windiss*)
 				vendor=wrs
 				;;
 			-aux*)
@@ -1204,12 +1557,23 @@
 			-mpw* | -macos*)
 				vendor=apple
 				;;
-			-*mint | -*MiNT)
+			-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
 				vendor=atari
 				;;
+			-vos*)
+				vendor=stratus
+				;;
 		esac
 		basic_machine=`echo $basic_machine | sed "s/unknown/$vendor/"`
 		;;
 esac
 
 echo $basic_machine$os
+exit
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
diff -Nur m148/dmake/configure dmake43p01/dmake/configure
diff -Nur m148/dmake/configure.in dmake43p01/dmake/configure.in
--- dmake/configure.in	2004-10-22 10:04:28.000000000 +0200
+++ dmake/configure.in	2006-01-26 03:54:27.000000000 +0100
@@ -3,16 +3,25 @@
 AC_PREREQ(2.52)
 
 dnl Set the package version
-dnl Don't forget to update the PACKAGE and VERSION macros in
+dnl Don't forget to update the PACKAGE, VERSION and BUILDINFO macros in
 dnl dmake/win95/microsft/config.h to keep the native Microsoft C++
 dnl compiler build happy. 
-AC_INIT(dmake, 4.3)
+AC_INIT(dmake, 4.4-cvs)
+AC_CANONICAL_BUILD
+BUILDINFO="$build"
 
 AC_CONFIG_SRCDIR(man/dmake.tf)
 AM_INIT_AUTOMAKE
 
 AM_MAINTAINER_MODE
 
+AC_CONFIG_HEADER(config.h)
+
+dnl Extra parameters
+AC_ARG_ENABLE(dbug,
+[  --enable-dbug:          Enable build with dbug macros.
+],,)
+
 dnl Checks for programs.
 AC_PROG_CC
 AC_PROG_CPP
@@ -24,39 +33,6 @@
 dnl Checks for utilities.
 AC_PROG_AWK
 
-dnl Checks for libraries.
-
-dnl Initialize libtool
-#AM_PROG_LIBTOOL
-
-
-dnl Checks for header files.
-AC_HEADER_DIRENT
-AC_HEADER_STDC
-AC_CHECK_HEADERS(fcntl.h limits.h strings.h sys/types.h sys/stat.h unistd.h errno.h utime.h spawn.h wait.h sys/wait.h)
-
-dnl Checks for typedefs, structures, and compiler characteristics.
-AC_C_CONST
-AC_TYPE_OFF_T
-AC_TYPE_SIZE_T
-AC_CHECK_TYPES(int8)
-AC_CHECK_TYPES(uint8)
-AC_CHECK_TYPES(int16)
-AC_CHECK_TYPES(uint16)
-AC_CHECK_TYPES(int32)
-AC_CHECK_TYPES(uint32)
-AC_HEADER_TIME
-AC_CHECK_SIZEOF(short, 2)
-AC_CHECK_SIZEOF(int, 4)
-AC_CHECK_SIZEOF(long, 4)
-
-dnl Checks for library functions.
-AC_FUNC_MEMCMP
-AC_TYPE_SIGNAL
-AC_FUNC_UTIME_NULL
-AC_FUNC_VPRINTF
-AC_CHECK_FUNCS(getcwd getwd putenv strcspn strerror strspn strstr setvbuf tzset settz mkstemp tempnam)
-
 dnl Checks for OS
 AC_MSG_CHECKING([the operating system])
 
@@ -93,10 +69,12 @@
 	"MINGW")
 	  OS_VERSION=mingw
 	  OS_TYPE=winnt
+	  BUILDINFO="Windows / MinGW"
 	  ;;
 	"MSVC6")
 	  OS_VERSION=msvc6
 	  OS_TYPE=winnt
+	  BUILDINFO="Windows / MS Visual C++"
 	  ;;
 	"Darwin")
 	  OS_VERSION=macosx
@@ -129,6 +107,7 @@
 
 AC_MSG_RESULT([checked ($_os)])
 
+dnl Set OS dependent settings
 if test x$OS_TYPE = xunix; then
   OS_SUBDIRS=["unix startup"]
   OS_LIBRARY=unix/libunix.a
@@ -139,66 +118,85 @@
 
 AC_SUBST(OS_TYPE)
 AC_SUBST(OS_VERSION)
+AC_DEFINE_UNQUOTED(BUILDINFO, "$BUILDINFO", [Build info string])
 AC_SUBST(OS_SUBDIRS)
 AC_SUBST(OS_LIBRARY)
 
-AM_CONFIG_HEADER(config.h)
+if test xOS_TYPE != xwinnt; then
+dnl See iz53148. Only *nix like builds enable parallel makefile processing
+dnl and use stdout redirection in the child for _exec_shell()
+AC_DEFINE(USE_SANE_EXEC_SHELL_REDIR, 1, [Use sane redirection mechanism for systems that support parallel building, see iz53148.])
+dnl iz61170 needs to know of DOS style file names with drive letters.
+AC_DEFINE(NO_DRIVE_LETTERS, 1, [Do not check for drive letters. Introduced as an optimization for iz61170.])
+fi
+
+dnl =============================================
+dnl Enable dbug
+dnl =============================================
+AC_MSG_CHECKING([whether to do a build with dbug macros])
+if test -n "$enable_dbug" && test "$enable_dbug" != "no"; then
+   DBUG="1"
+   CPPFLAGS="$CPPFLAGS -DDBUG=1 -I\$(top_srcdir)/dbug/dbug"
+   AC_MSG_RESULT([yes])
+else
+   DBUG=""
+   AC_MSG_RESULT([no])
+fi
+AM_CONDITIONAL(DBUG, test -n "$DBUG")
+
+dnl Predefine the DMAKEROOT macro for unix targets.
+eval dmakerootprefix="$datadir"
+# $datadir is ${prefix}/share if not overridden
+test "x$dmakerootprefix" != "x${dmakerootprefix##NONE}" && dmakerootprefix=${ac_default_prefix}/share
 
-AC_CONFIG_FILES(Makefile unix/Makefile startup/Makefile startup/unix/Makefile \
+if test x$OS_TYPE = xunix; then
+DMAKEROOT_H_LINE1='"DMAKEROOT := '${dmakerootprefix}'/startup",'
+fi
+AC_SUBST(DMAKEROOT_H_LINE1)
+
+dnl List (all possible) *.in files
+AC_CONFIG_FILES(dmakeroot.h Makefile unix/Makefile startup/config.mk \
+		startup/Makefile startup/unix/Makefile \
 		startup/unix/linux/Makefile startup/unix/solaris/Makefile \
 		startup/unix/macosx/Makefile startup/unix/sysvr4/Makefile \
 		startup/unix/cygwin/Makefile \
 		startup/winnt/Makefile startup/winnt/mingw/Makefile \
 		startup/winnt/msvc6/Makefile \
-		msdos/Makefile win95/Makefile win95/microsft/Makefile )
+		msdos/Makefile win95/Makefile win95/microsft/Makefile \
+		tests/Makefile)
+
+dnl Checks for libraries.
+
+dnl Initialize libtool
+#AM_PROG_LIBTOOL
+
+dnl Checks for header files.
+AC_HEADER_DIRENT
+AC_HEADER_STDC
+AC_CHECK_HEADERS(fcntl.h limits.h strings.h sys/types.h sys/stat.h unistd.h errno.h utime.h spawn.h wait.h sys/wait.h)
+
+dnl Checks for typedefs, structures, and compiler characteristics.
+AC_C_CONST
+AC_TYPE_OFF_T
+AC_TYPE_SIZE_T
+AC_CHECK_TYPES(int8)
+AC_CHECK_TYPES(uint8)
+AC_CHECK_TYPES(int16)
+AC_CHECK_TYPES(uint16)
+AC_CHECK_TYPES(int32)
+AC_CHECK_TYPES(uint32)
+AC_HEADER_TIME
+AC_CHECK_SIZEOF(short, 2)
+AC_CHECK_SIZEOF(int, 4)
+AC_CHECK_SIZEOF(long, 4)
+
+dnl Checks for library functions.
+AC_FUNC_MEMCMP
+AC_TYPE_SIGNAL
+AC_FUNC_UTIME_NULL
+AC_FUNC_VPRINTF
+AC_CHECK_FUNCS(getcwd getwd putenv strcspn strerror strspn strstr setvbuf tzset settz mkstemp tempnam)
 
-dnl ******************************
-dnl *** output the whole stuff ***
-dnl ******************************
-
-AC_CONFIG_COMMANDS_POST([
-
-
-## Generate `dmakeroot.h' in two cases
-## 1. `config.status' is run either explicitly, or via configure.
-##     Esp. not when it is run in `Makefile' to generate makefiles and
-##     config.h
-## 2. CONFIG_OTHER is set explicitly
-##
-## Case 1 is difficult.  We know that `automake' sets one of
-## CONFIG_FILES or CONFIG_HEADERS to empty.  This heuristic works
-## only when AM_CONFIG_HEADER is set, however.
-
-if test -n "${CONFIG_FILES}" && test -n "${CONFIG_HEADERS}"; then
-	# Both CONFIG_FILES and CONFIG_HEADERS are non-empty ==> Case 1
-	CONFIG_OTHER=${CONFIG_OTHER:-dmakeroot.h}
-fi
-    outfile=dmakeroot.h-tmp
-    cat > $outfile <<\_______EOF
-	/* dmakeroot.h
-	 *
-  	 * This is a generated file.  Please modify `configure.in'
-     */
-
-_______EOF
-
-if test x$prefix != x; then
-   if test x$OS_TYPE = xunix; then
-       echo '"DMAKEROOT := '$prefix'/share/startup",' >> $outfile
-   fi
-   echo '"OS := '${OS_VERSION}'",' >> $outfile
-fi
-if cmp -s $outfile dmakeroot.h; then
-    echo dmakeroot.h is unchanged
-    rm -f $outfile
-else
-    mv $outfile dmakeroot.h
-fi
-])
-							  
-				   
-dnl set the DMAKEROOT
-AC_SET_DMAKEROOT
 
 dnl *** output to disk ***
 AC_OUTPUT
diff -Nur m148/dmake/dag.c dmake43p01/dmake/dag.c
--- dmake/dag.c	2004-09-08 18:05:07.000000000 +0200
+++ dmake/dag.c	2005-04-11 23:13:05.000000000 +0200
@@ -1,6 +1,6 @@
 /* $RCSfile: dag.c,v $
--- $Revision: 1.4 $
--- last change: $Author: rt $ $Date: 2004/09/08 16:05:07 $
+-- $Revision: 1.4.6.3 $
+-- last change: $Author: vq $ $Date: 2005/04/11 21:13:05 $
 --
 -- SYNOPSIS
 --      Routines to construct the internal dag.
@@ -48,8 +48,11 @@
          
          tvalue = atoi(hp->ht_value);
          if( hp->MV_IVAR == &Buffer_size ) {
-	    /* If Buffer_size is modified then make sure you change the
-             * size of the real buffer as well. */
+	    /* If Buffer_size (MAXLINELENGTH) is modified then make sure
+	     * you change the size of the real buffer as well. As the
+	     * value will at least be BUFSIZ this might lead to the
+	     * situation that the (string) value of MAXLINELENGTH is
+	     * smaller than the integer value. */
             tvalue = (tvalue < (BUFSIZ-2)) ? BUFSIZ : tvalue+2;
             if( Buffer_size == tvalue ) break;
             if( Buffer ) FREE(Buffer);
@@ -280,7 +283,7 @@
 
    if( (value != NIL(char)) && (*value) ) {
       /* strip out any \<nl> combinations where \ is the current CONTINUATION
-       * char */
+       * char */ 
 
       for( p = value; (p = strchr(p, CONTINUATION_CHAR)) != NIL(char); )
          if( p[1] == '\n' )
diff -Nur m148/dmake/dbug/dbug/dbug.c dmake43p01/dmake/dbug/dbug/dbug.c
--- dmake/dbug/dbug/dbug.c	2000-09-22 17:33:26.000000000 +0200
+++ dmake/dbug/dbug/dbug.c	2005-09-26 02:33:12.000000000 +0200
@@ -153,7 +153,8 @@
  *	be accessed via the macro package facilities.
  */
 
-EXPORT FILE *_db_fp_ = stderr;		/* Output stream, default stderr */
+EXPORT FILE *_db_fp_ = (FILE *)0;	/* Output stream, default is set to
+					 * stderr later */
 EXPORT FILE *_db_pfp_ = (FILE *)0;	/* Profile stream, 'dbugmon.out' */
 EXPORT char *_db_process_ = "dbug";	/* Pointer to process name; argv[0] */
 EXPORT BOOLEAN _db_on_ = FALSE;		/* TRUE if debugging currently on */
@@ -163,6 +164,9 @@
  *	Externally supplied functions.
  */
 
+/* Disable the manual definitions, if something is missing use #include's! */
+#if 0
+
 #ifdef unix			/* Only needed for unix */
 IMPORT VOID perror ();		/* Print system/library error */
 IMPORT int chown ();		/* Change owner of a file */
@@ -196,6 +200,8 @@
 IMPORT int fflush ();		/* Flush output for stream */
 #endif
 
+#endif
+
 
 /*
  *	The user may specify a list of functions to trace or 
@@ -263,6 +269,8 @@
 LOCAL VOID DoPrefix ();		/* Print debugger line prefix */
 LOCAL VOID FreeList ();		/* Free memory from linked list */
 LOCAL VOID Indent ();		/* Indent line to specified indent */
+LOCAL int DelayArg (int value); /* Convert D flag argument */
+LOCAL BOOLEAN DoProfile ();	/* Check if profiling is enabled */
 
 				/* Supplied in Sys V runtime environ */
 LOCAL char *strtok ();		/* Break string into tokens */
@@ -431,6 +439,9 @@
     REGISTER char *scan;
     REGISTER struct link *temp;
 
+    if (!_db_fp_)
+	_db_fp_ = stderr;	/* Output stream, default stderr */
+
     if (control && *control == '-') {
 	if (*++control == '#') {
 	    control++;
diff -Nur m148/dmake/dbug/dbug/dbug.txt dmake43p01/dmake/dbug/dbug/dbug.txt
--- dmake/dbug/dbug/dbug.txt	1970-01-01 01:00:00.000000000 +0100
+++ dmake/dbug/dbug/dbug.txt	2005-09-26 02:43:26.000000000 +0200
@@ -0,0 +1,1452 @@
+       
+
+
+
+
+
+                                 D B U G
+
+                       C Program Debugging Package
+
+                                    by
+                                Fred Fish
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+                                   - 1 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+                               INTRODUCTION
+
+
+            Almost  every program development environment worthy of
+       the name provides some sort of debugging facility.   Usually
+       this  takes  the  form  of  a  program  which  is capable of
+       controlling execution of other programs  and  examining  the
+       internal  state of other executing programs.  These types of
+       programs will be referred to as external debuggers since the
+       debugger  is not part of the executing program.  Examples of
+       this type of debugger include  the  adb  and  sdb  debuggers
+       provided with the UNIX1 operating system.
+
+
+            One of the problems associated with developing programs
+       in an environment  with  good  external  debuggers  is  that
+       developed  programs  tend  to  have  little  or  no internal
+       instrumentation.  This is usually  not  a  problem  for  the
+       developer  since  he  is,  or at least should be, intimately
+       familiar with the internal  organization,  data  structures,
+       and  control  flow  of  the program being debugged.  It is a
+       serious  problem  for  maintenance  programmers,   who   are
+       unlikely  to  have  such  familiarity with the program being
+       maintained, modified, or ported to another environment.   It
+       is  also a problem, even for the developer, when the program
+       is moved to an environment with a  primitive  or  unfamiliar
+       debugger, or even no debugger.
+
+
+            On  the  other  hand, dbug is an example of an internal
+       debugger.  Because it requires internal instrumentation of a
+       program,  and  its  usage  does  not  depend  on any special
+       capabilities of the  execution  environment,  it  is  always
+       available  and  will  execute  in  any  environment that the
+       program itself will execute in.  In addition, since it is  a
+       complete   package  with  a  specific  user  interface,  all
+       programs  which  use  it  will  be  provided  with   similar
+       debugging  capabilities.  This is in sharp contrast to other
+       forms of internal instrumentation where each  developer  has
+       their  own, usually less capable, form of internal debugger.
+       In summary, because dbug is an internal debugger it provides
+       consistency across operating environments, and because it is
+       available to all developers it provides  consistency  across
+       all programs in the same environment.
+
+
+            The dbug package imposes only a slight speed penalty on
+       executing programs, typically much less than 10 percent, and
+       a  modest  size  penalty,  typically  10  to 20 percent.  By
+       defining a specific C preprocessor symbol both of these  can
+       be  reduced  to  zero with no changes required to the source
+
+       ____________________
+
+       1. UNIX is a trademark of AT&T Bell Laboratories.
+
+                                   - 2 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+       code.
+
+
+            The  following  list  is  a  quick   summary   of   the
+       capabilities  of  the  dbug package.  Each capability can be
+       individually enabled or disabled at the time  a  program  is
+       invoked   by   specifying   the   appropriate  command  line
+       arguments.
+
+               o Execution trace  showing  function  level  control
+                 flow    in   a   semi-graphically   manner   using
+                 indentation to indicate nesting depth.
+
+               o Output the values of all, or any  subset  of,  key
+                 internal variables.
+
+               o Limit   actions   to   a  specific  set  of  named
+                 functions.
+
+               o Limit function trace to a specified nesting depth.
+
+               o Label  each  output line with source file name and
+                 line number.
+
+               o Label  each  output  line  with  name  of  current
+                 process.
+
+               o Push  or  pop  internal  debugging  state to allow
+                 execution with built in debugging defaults.
+
+               o Redirect  the  debug  output  stream  to  standard
+                 output  (stdout)  or  a  named  file.  The default
+                 output stream is  standard  error  (stderr).   The
+                 redirection mechanism is completely independent of
+                 normal command line redirection  to  avoid  output
+                 conflicts.
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+                                   - 3 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+       PRIMITIVE DEBUGGING TECHNIQUES
+
+
+            Internal  instrumentation is already a familiar concept
+       to most programmers, since it is usually the first debugging
+       technique   learned.    Typically,   "print statements"  are
+       inserted in the source code at interesting points, the  code
+       is  recompiled  and  executed,  and  the resulting output is
+       examined in an attempt to determine where the problem is.
+
+       The procedure is iterative,  with  each  iteration  yielding
+       more  and  more  output,  and  hopefully  the  source of the
+       problem is discovered before the output becomes too large to
+       deal  with  or  previously  inserted  statements  need to be
+       removed.  Figure 1 is an example of this type  of  primitive
+       debugging technique.
+
+
+
+                 #include <stdio.h>
+
+                 main (argc, argv)
+                 int argc;
+                 char *argv[];
+                 {
+                     printf ("argv[0] = %d\n", argv[0]);
+                     /*
+                      *    Rest of program
+                      */
+                     printf ("== done ==\n");
+                 }
+
+
+                                        Figure 1
+                              Primitive Debugging Technique
+
+
+
+
+
+            Eventually,   and   usually   after  at  least  several
+       iterations, the problem will be  found  and  corrected.   At
+       this  point,  the  newly  inserted  print statements must be
+       dealt with.  One obvious solution is to simply  delete  them
+       all.   Beginners usually do this a few times until they have
+       to repeat the entire process every time a new bug  pops  up.
+       The  second  most obvious solution is to somehow disable the
+       output, either through the  source  code  comment  facility,
+       creation of a debug variable to be switched on or off, or by
+       using the C preprocessor.  Figure 2 is  an  example  of  all
+       three techniques.
+
+
+
+
+
+                                   - 4 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+                 #include <stdio.h>
+
+                 int debug = 0;
+
+                 main (argc, argv)
+                 int argc;
+                 char *argv[];
+                 {
+                     /* printf ("argv = %x\n", argv) */
+                     if (debug) printf ("argv[0] = %d\n", argv[0]);
+                     /*
+                      *    Rest of program
+                      */
+                 #ifdef DEBUG
+                     printf ("== done ==\n");
+                 #endif
+                 }
+
+
+                                        Figure 2
+                                Debug Disable Techniques
+
+
+
+
+
+            Each  technique  has  its  advantages and disadvantages
+       with respect to dynamic vs static  activation,  source  code
+       overhead,  recompilation  requirements, ease of use, program
+       readability, etc.   Overuse  of  the  preprocessor  solution
+       quickly  leads  to problems with source code readability and
+       maintainability when  multiple  #ifdef  symbols  are  to  be
+       defined  or  undefined  based  on  specific  types  of debug
+       desired.  The source code can be made slightly more readable
+       by suitable indentation of the #ifdef arguments to match the
+       indentation of the code, but not all C  preprocessors  allow
+       this.    The  only  requirement  for  the  standard  UNIX  C
+       preprocessor is for the '#' character to appear in the first
+       column,   but   even   this  seems  like  an  arbitrary  and
+       unreasonable restriction.  Figure 3 is an  example  of  this
+       usage.
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+                                   - 5 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+                 #include <stdio.h>
+
+                 main (argc, argv)
+                 int argc;
+                 char *argv[];
+                 {
+                 #   ifdef DEBUG
+                     printf ("argv[0] = %d\n", argv[0]);
+                 #   endif
+                     /*
+                      *    Rest of program
+                      */
+                 #   ifdef DEBUG
+                     printf ("== done ==\n");
+                 #   endif
+                 }
+
+
+                                        Figure 3
+                            More Readable Preprocessor Usage
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+                                   - 6 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+       FUNCTION TRACE EXAMPLE
+
+
+            We  will  start  off learning about the capabilities of
+       the dbug package by using  a  simple  minded  program  which
+       computes  the  factorial  of  a  number.  In order to better
+       demonstrate the function trace mechanism,  this  program  is
+       implemented  recursively.  Figure 4 is the main function for
+       this factorial program.
+
+
+
+                 #include <stdio.h>
+                 /* User programs should use <local/dbug.h> */
+                 #include "dbug.h"
+
+                 int main (argc, argv)
+                      int argc;
+                      char *argv[];
+                 {
+                   register int result, ix;
+                   extern int factorial (), atoi ();
+
+                   DBUG_ENTER ("main");
+                   DBUG_PROCESS (argv[0]);
+                   for (ix = 1; ix < argc && argv[ix][0] == '-'; ix++) {
+                     switch (argv[ix][1]) {
+                     case '#':
+                       DBUG_PUSH (&(argv[ix][2]));
+                       break;
+                     }
+                   }
+                   for (; ix < argc; ix++) {
+                     DBUG_PRINT ("args", ("argv[%d] = %s", ix, argv[ix]));
+                     result = factorial (atoi (argv[ix]));
+                     printf ("%d\n", result);
+                   }
+                   DBUG_RETURN (0);
+                 }
+
+
+                                        Figure 4
+                               Factorial Program Mainline
+
+
+
+
+
+            The main function is  responsible  for  processing  any
+       command   line  option  arguments  and  then  computing  and
+       printing the factorial of each non-option argument.
+
+            First of all, notice that all of the debugger functions
+       are  implemented  via  preprocessor  macros.   This does not
+
+
+                                   - 7 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+       detract from the readability of the code and makes disabling
+       all debug compilation trivial (a single preprocessor symbol,
+       DBUG_OFF, forces the macro expansions to be null).
+
+            Also notice the inclusion of  the  header  file  dbug.h
+       from the local header file directory.  (The version included
+       here is the test version in  the  dbug  source  distribution
+       directory).   This file contains all the definitions for the
+       debugger macros, which all have the form DBUG_XX...XX.
+
+
+            The DBUG_ENTER macro informs that debugger that we have
+       entered  the function named main.  It must be the very first
+       "executable" line in a function, after all declarations  and
+       before any other executable line.  The DBUG_PROCESS macro is
+       generally used only once per program to inform the  debugger
+       what name the program was invoked with.  The DBUG_PUSH macro
+       modifies the current debugger state by saving  the  previous
+       state  and  setting  a new state based on the control string
+       passed as its argument.  The DBUG_PRINT  macro  is  used  to
+       print  the  values of each argument for which a factorial is
+       to be computed.  The DBUG_RETURN macro  tells  the  debugger
+       that  the  end  of the current function has been reached and
+       returns a value to  the  calling  function.   All  of  these
+       macros will be fully explained in subsequent sections.
+
+            To  use  the debugger, the factorial program is invoked
+       with a command line of the form:
+
+                          factorial -#d:t 1 2 3
+
+       The  main  function  recognizes  the  "-#d:t"  string  as  a
+       debugger  control  string, and passes the debugger arguments
+       ("d:t")  to  the  dbug  runtime  support  routines  via  the
+       DBUG_PUSH macro.  This particular string enables output from
+       the DBUG_PRINT macro with the 'd' flag and enables  function
+       tracing  with  the 't' flag.  The factorial function is then
+       called three times, with the arguments "1",  "2",  and  "3".
+       Note  that  the DBUG_PRINT takes exactly two arguments, with
+       the second argument (a format string and list  of  printable
+       values) enclosed in parenthesis.
+
+            Debug  control  strings  consist of a header, the "-#",
+       followed by a colon separated list  of  debugger  arguments.
+       Each  debugger  argument is a single character flag followed
+       by an optional comma separated list of arguments specific to
+       the given flag.  Some examples are:
+
+                          -#d:t:o
+                          -#d,in,out:f,main:F:L
+
+       Note   that  previously  enabled  debugger  actions  can  be
+       disabled by the control string "-#".
+
+
+
+                                   - 8 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+            The definition of the factorial function, symbolized as
+       "N!", is given by:
+
+                         N! = N * N-1 * ... 2 * 1
+
+       Figure  5  is  the  factorial function which implements this
+       algorithm recursively.  Note that this  is  not  necessarily
+       the  best  way  to  do  factorials  and error conditions are
+       ignored completely.
+
+
+
+                 #include <stdio.h>
+                 /* User programs should use <local/dbug.h> */
+                 #include "dbug.h"
+
+                 int factorial (value)
+                      register int value;
+                 {
+                   DBUG_ENTER ("factorial");
+                   DBUG_PRINT ("find", ("find %d factorial", value));
+                   if (value > 1) {
+                     value *= factorial (value - 1);
+                   }
+                   DBUG_PRINT ("result", ("result is %d", value));
+                   DBUG_RETURN (value);
+                 }
+
+
+                                        Figure 5
+                                   Factorial Function
+
+
+
+
+
+            One advantage (some may not consider it  so)  to  using
+       the  dbug  package  is  that  it  strongly  encourages fully
+       structured coding with only one entry and one exit point  in
+       each  function.  Multiple exit points, such as early returns
+       to escape a loop, may be used, but each such point  requires
+       the  use  of  an appropriate DBUG_RETURN or DBUG_VOID_RETURN
+       macro.
+
+
+            To build  the  factorial  program  on  a  UNIX  system,
+       compile and link with the command:
+
+                cc -o factorial main.c factorial.c -ldbug
+
+       The  "-ldbug"  argument  tells  the  loader  to  link in the
+       runtime support modules for the dbug package.  Executing the
+       factorial program with a command of the form:
+
+
+
+                                   - 9 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+                           factorial 1 2 3 4 5
+
+       generates the output shown in figure 6.
+
+
+
+                 1
+                 2
+                 6
+                 24
+                 120
+                                        Figure 6
+                                   factorial 1 2 3 4 5
+
+
+
+
+
+            Function  level  tracing  is  enabled  by  passing  the
+       debugger the 't' flag in the debug control string.  Figure 7
+       is     the     output    resulting    from    the    command
+       "factorial -#t:o 3 2".
+
+
+
+                 |   >factorial
+                 |   |   >factorial
+                 |   |   <factorial
+                 |   <factorial
+                 2
+                 |   >factorial
+                 |   |   >factorial
+                 |   |   |   >factorial
+                 |   |   |   <factorial
+                 |   |   <factorial
+                 |   <factorial
+                 6
+                 <main
+
+
+                                        Figure 7
+                                   factorial -#t:o 3 2
+
+
+
+
+
+            Each entry to or return from a function is indicated by
+       '>'  for  the  entry  point  and  '<'  for  the  exit point,
+       connected by vertical bars to allow matching  points  to  be
+       easily found when separated by large distances.
+
+
+            This  trace  output indicates that there was an initial
+
+
+                                  - 10 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+       call to factorial from main (to compute 2!), followed  by  a
+       single  recursive call to factorial to compute 1!.  The main
+       program then  output  the  result  for  2!  and  called  the
+       factorial  function  again  with  the  second  argument,  3.
+       Factorial called itself recursively to compute  2!  and  1!,
+       then returned control to main, which output the value for 3!
+       and exited.
+
+
+            Note that there is no matching entry point "main>"  for
+       the  return point "<main" because at the time the DBUG_ENTER
+       macro was reached in main, tracing was not enabled yet.   It
+       was  only  after  the  macro  DBUG_PUSH  was  executing that
+       tracing became enabled.  This implies that the argument list
+       should  be  processed  as  early  as possible since all code
+       preceding  the  first  call  to  DBUG_PUSH  is   essentially
+       invisible  to dbug (this can be worked around by inserting a
+       temporary   DBUG_PUSH(argv[1])   immediately    after    the
+       DBUG_ENTER("main") macro.
+
+
+            One  last  note, the trace output normally comes out on
+       the standard error.  Since the factorial program prints  its
+       result  on  the standard output, there is the possibility of
+       the output on  the  terminal  being  scrambled  if  the  two
+       streams  are not synchronized.  Thus the debugger is told to
+       write its output on the standard output instead, via the 'o'
+       flag  character.   Note  that  no  'o'  implies  the default
+       (standard error), a 'o' with  no  arguments  means  standard
+       output,  and  a  'o'  with  an argument means used the named
+       file.  I.E, "factorial -#t:o,logfile 3 2"  would  write  the
+       trace  output  in "logfile".  Because of UNIX implementation
+       details, programs usually run faster when writing to  stdout
+       rather than stderr, though this is not a prime consideration
+       in this example.
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+                                  - 11 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+       USE OF DBUG_PRINT MACRO
+
+
+            The mechanism used to produce "printf" style output  is
+       the DBUG_PRINT macro.
+
+
+            To  allow selection of output from specific macros, the
+       first argument to every DBUG_PRINT macro is a dbug  keyword.
+       When  this  keyword  appears in the argument list of the 'd'
+       flag    in    a    debug    control    string,     as     in
+       "-#d,keyword1,keyword2,...:t", output from the corresponding
+       macro is enabled.  The default when there is no 'd' flag  in
+       the  control  string is to enable output from all DBUG_PRINT
+       macros.
+
+
+            Typically, a program will be run once, with no keywords
+       specified,  to  determine  what keywords are significant for
+       the current problem (the keywords are printed in  the  macro
+       output  line).  Then the program will be run again, with the
+       desired  keywords,  to  examine  only  specific   areas   of
+       interest.
+
+
+            The second argument to a DBUG_PRINT macro is a standard
+       printf style format string and  one  or  more  arguments  to
+       print, all enclosed in parenthesis so that they collectively
+       become a  single  macro  argument.   This  is  how  variable
+       numbers  of  printf arguments are supported.  Also note that
+       no explicit newline is required at the  end  of  the  format
+       string.  As a matter of style, two or three small DBUG_PRINT
+       macros are preferable to a single macro with a  huge  format
+       string.   Figure  8 shows the output for default tracing and
+       debug.
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+                                  - 12 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+                 |   args: argv[2] = 3
+                 |   >factorial
+                 |   |   find: find 3 factorial
+                 |   |   >factorial
+                 |   |   |   find: find 2 factorial
+                 |   |   |   >factorial
+                 |   |   |   |   find: find 1 factorial
+                 |   |   |   |   result: result is 1
+                 |   |   |   <factorial
+                 |   |   |   result: result is 2
+                 |   |   <factorial
+                 |   |   result: result is 6
+                 |   <factorial
+                 6
+                 <main
+
+
+                                        Figure 8
+                                   factorial -#d:t:o 3
+
+
+
+
+
+            The output from the DBUG_PRINT  macro  is  indented  to
+       match  the  trace output for the function in which the macro
+       occurs.  When debugging  is  enabled,  but  not  trace,  the
+       output starts at the left margin, without indentation.
+
+
+            To demonstrate selection of specific macros for output,
+       figure 9 shows the result  when  the  factorial  program  is
+       invoked with the debug control string "-#d,result:o".
+
+
+
+                 factorial: result: result is 1
+                 factorial: result: result is 2
+                 factorial: result: result is 6
+                 factorial: result: result is 24
+                 24
+                                        Figure 9
+                                factorial -#d,result:o 4
+
+
+
+
+
+            It  is  sometimes  desirable  to restrict debugging and
+       trace actions to a specific function or list  of  functions.
+       This  is  accomplished  with  the  'f' flag character in the
+       debug control string.   Figure  10  is  the  output  of  the
+       factorial   program   when   run  with  the  control  string
+       "-#d:f,factorial:F:L:o".  The 'F' flag enables  printing  of
+
+
+                                  - 13 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+       the  source  file  name and the 'L' flag enables printing of
+       the source file line number.
+
+
+
+                    factorial.c:     9: factorial: find: find 3 factorial
+                    factorial.c:     9: factorial: find: find 2 factorial
+                    factorial.c:     9: factorial: find: find 1 factorial
+                    factorial.c:    13: factorial: result: result is 1
+                    factorial.c:    13: factorial: result: result is 2
+                    factorial.c:    13: factorial: result: result is 6
+                 6
+
+
+                                        Figure 10
+                            factorial -#d:f,factorial:F:L:o 3
+
+
+
+
+
+            The output in figure 10 shows that the "find" macro  is
+       in  file  "factorial.c"  at  source  line 8 and the "result"
+       macro is in the same file at source line 12.
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+                                  - 14 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+       SUMMARY OF MACROS
+
+
+            This section summarizes  the  usage  of  all  currently
+       defined  macros in the dbug package.  The macros definitions
+       are found in the user include file dbug.h from the  standard
+       include directory.
+
+
+
+               DBUG_ENTER  Used  to tell the runtime support module
+                           the name of the function being  entered.
+                           The argument must be of type "pointer to
+                           character".  The DBUG_ENTER  macro  must
+                           precede  all  executable  lines  in  the
+                           function just  entered,  and  must  come
+                           after   all  local  declarations.   Each
+                           DBUG_ENTER macro must  have  a  matching
+                           DBUG_RETURN or DBUG_VOID_RETURN macro at
+                           the function  exit  points.   DBUG_ENTER
+                           macros    used    without   a   matching
+                           DBUG_RETURN  or  DBUG_VOID_RETURN  macro
+                           will  cause  warning  messages  from the
+                           dbug package runtime support module.
+
+                           EX: DBUG_ENTER ("main");
+
+              DBUG_RETURN  Used at each exit point  of  a  function
+                           containing  a  DBUG_ENTER  macro  at the
+                           entry point.  The argument is the  value
+                           to  return.   Functions  which return no
+                           value    (void)    should    use     the
+                           DBUG_VOID_RETURN  macro.  It is an error
+                           to     have     a     DBUG_RETURN     or
+                           DBUG_VOID_RETURN  macro  in  a  function
+                           which has no matching DBUG_ENTER  macro,
+                           and  the  compiler  will complain if the
+                           macros are actually used (expanded).
+
+                           EX: DBUG_RETURN (value);
+                           EX: DBUG_VOID_RETURN;
+
+             DBUG_PROCESS  Used to name the current  process  being
+                           executed.   A  typical argument for this
+                           macro is "argv[0]", though  it  will  be
+                           perfectly happy with any other string.
+
+                           EX: DBUG_PROCESS (argv[0]);
+
+                DBUG_PUSH  Sets a new debugger state by pushing the
+                           current  dbug  state  onto  an  internal
+                           stack and setting up the new state using
+                           the debug control string passed  as  the
+                           macro  argument.   The most common usage
+
+
+                                  - 15 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+                           is to set the state specified by a debug
+                           control   string   retrieved   from  the
+                           argument list.  Note  that  the  leading
+                           "-#" in a debug control string specified
+                           as a command line argument must  not  be
+                           passed  as  part  of the macro argument.
+                           The proper usage is to pass a pointer to
+                           the   first  character  after  the  "-#"
+                           string.
+
+                           EX: DBUG_PUSH ((argv[i][2]));
+                           EX: DBUG_PUSH ("d:t");
+                           EX: DBUG_PUSH ("");
+
+                 DBUG_POP  Restores the previous debugger state  by
+                           popping  the state stack.  Attempting to
+                           pop more  states  than  pushed  will  be
+                           ignored  and  no  warning will be given.
+                           The DBUG_POP macro has no arguments.
+
+                           EX: DBUG_POP ();
+
+                DBUG_FILE  The  DBUG_FILE  macro  is  used  to   do
+                           explicit I/O on the debug output stream.
+                           It is used in the  same  manner  as  the
+                           symbols  "stdout"  and  "stderr"  in the
+                           standard I/O package.
+
+                           EX: fprintf (DBUG_FILE, "Doing  my   own
+                           I/O!\n");
+
+             DBUG_EXECUTE  The   DBUG_EXECUTE   macro  is  used  to
+                           execute any arbitrary C code.  The first
+                           argument  is  the debug keyword, used to
+                           trigger execution of the code  specified
+                           as the second argument.  This macro must
+                           be used  cautiously  because,  like  the
+                           DBUG_PRINT  macro,  it  is automatically
+                           selected by  default  whenever  the  'd'
+                           flag  has  no  argument  list  (I.E.,  a
+                           "-#d:t" control string).
+
+                           EX: DBUG_EXECUTE ("abort", abort ());
+
+                   DBUG_N  These macros, where N is  in  the  range
+                           2-5,  are currently obsolete and will be
+                           removed in a future  release.   Use  the
+                           new DBUG_PRINT macro.
+
+               DBUG_PRINT  Used  to  do  printing via the "fprintf"
+                           library function on  the  current  debug
+                           stream,  DBUG_FILE.   The first argument
+                           is a debug  keyword,  the  second  is  a
+                           format   string  and  the  corresponding
+
+
+                                  - 16 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+                           argument list.   Note  that  the  format
+                           string  and  argument  list  are all one
+                           macro argument and must be  enclosed  in
+                           parenthesis.
+
+                           EX: DBUG_PRINT ("eof", ("end of file found"));
+                           EX: DBUG_PRINT ("type", ("type is %x",
+                           type));
+                           EX: DBUG_PRINT ("stp", ("%x -> %s", stp,
+                           stp -> name));
+
+              DBUG_SETJMP  Used in place of the  setjmp()  function
+                           to first save the current debugger state
+                           and then  execute  the  standard  setjmp
+                           call.   This  allows  to the debugger to
+                           restore it's state when the DBUG_LONGJMP
+                           macro  is  used  to  invoke the standard
+                           longjmp() call.  Currently all instances
+                           of  DBUG_SETJMP  must  occur  within the
+                           same function and at the  same  function
+                           nesting level.
+
+                           EX: DBUG_SETJMP (env);
+
+             DBUG_LONGJMP  Used  in place of the longjmp() function
+                           to first restore the  previous  debugger
+                           state   at   the   time   of   the  last
+                           DBUG_SETJMP   and   then   execute   the
+                           standard   longjmp()  call.   Note  that
+                           currently   all   DBUG_LONGJMP    macros
+                           restore  the  state  at  the time of the
+                           last DBUG_SETJMP.  It would be  possible
+                           to  maintain  separate  DBUG_SETJMP  and
+                           DBUG_LONGJMP   pairs   by   having   the
+                           debugger  runtime support module use the
+                           first  argument  to  differentiate   the
+                           pairs.
+
+                           EX: DBUG_LONGJMP (env,val);
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+                                  - 17 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+       DEBUG CONTROL STRING
+
+
+            The  debug  control  string is used to set the state of
+       the  debugger  via  the  DBUG_PUSH  macro.    This   section
+       summarizes  the currently available debugger options and the
+       flag characters which  enable  or  disable  them.   Argument
+       lists enclosed in '[' and ']' are optional.
+
+
+                d[,keywords] Enable   output   from   macros   with
+                             specified keywords.  A  null  list  of
+                             keywords implies that all keywords are
+                             selected.
+
+                    D[,time] Delay for specified  time  after  each
+                             output  line,  to  let  output  drain.
+                             Time is given in tenths  of  a  second
+                             (value  of 10 is one second).  Default
+                             is zero.
+
+               f[,functions] Limit   debugger   actions   to    the
+                             specified  list  of functions.  A null
+                             list of  functions  implies  that  all
+                             functions are selected.
+
+                           F Mark  each  debugger  output line with
+                             the name of the source file containing
+                             the macro causing the output.
+
+                           L Mark  each  debugger  output line with
+                             the source file  line  number  of  the
+                             macro causing the output.
+
+                           n Mark  each  debugger  output line with
+                             the current function nesting depth.
+
+                           N Sequentially  number   each   debugger
+                             output  line  starting  at 1.  This is
+                             useful  for  reference  purposes  when
+                             debugger  output  is interspersed with
+                             program output.
+
+                    o[,file] Redirect the debugger output stream to
+                             the   specified   file.   The  default
+                             output  stream  is  stderr.   A   null
+                             argument  list  causes  output  to  be
+                             redirected to stdout.
+
+               p[,processes] Limit   debugger   actions   to    the
+                             specified   processes.   A  null  list
+                             implies all processes.  This is useful
+                             for    processes   which   run   child
+                             processes.  Note  that  each  debugger
+
+
+                                  - 18 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+                             output  line  can  be  marked with the
+                             name of the current  process  via  the
+                             'P' flag.  The process name must match
+                             the    argument    passed    to    the
+                             DBUG_PROCESS macro.
+
+                           P Mark  each  debugger  output line with
+                             the name of the current process.  Most
+                             useful  when used with a process which
+                             runs child  processes  that  are  also
+                             being  debugged.  Note that the parent
+                             process must arrange for the  debugger
+                             control  string  to  be  passed to the
+                             child processes.
+
+                           r Used in conjunction with the DBUG_PUSH
+                             macro to reset the current indentation
+                             level back to zero.  Most useful  with
+                             DBUG_PUSH  macros  used to temporarily
+                             alter the debugger state.
+
+                       t[,N] Enable function control flow  tracing.
+                             The maximum nesting depth is specified
+                             by N, and defaults to 200.
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+                                  - 19 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+       HINTS AND MISCELLANEOUS
+
+
+            One of the most useful capabilities of the dbug package
+       is  to  compare  the  executions  of  a given program in two
+       different environments.  This is typically done by executing
+       the program in the environment where it behaves properly and
+       saving the debugger output in a reference file.  The program
+       is  then  run with identical inputs in the environment where
+       it  misbehaves  and  the  output  is  again  captured  in  a
+       reference  file.   The  two  reference  files  can  then  be
+       differentially compared to determine exactly where execution
+       of the two processes diverges.
+
+
+            A   related  usage  is  regression  testing  where  the
+       execution  of  a  current  version   is   compared   against
+       executions  of  previous versions.  This is most useful when
+       there are only minor changes.
+
+
+            It is not difficult to modify an existing  compiler  to
+       implement  some  of  the  functionality  of the dbug package
+       automatically, without source code changes  to  the  program
+       being debugged.  In fact, such changes were implemented in a
+       version of the Portable C Compiler by  the  author  in  less
+       than  a  day.   However,  it is strongly encouraged that all
+       newly developed code continue to use the debugger macros for
+       the   portability   reasons  noted  earlier.   The  modified
+       compiler should be used only for testing existing  programs.
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+                                  - 20 -
+
+
+
+
+
+       DBUG User Manual                            October 29, 1986
+
+
+
+       CAVEATS
+
+
+            The  dbug  package  works best with programs which have
+       "line oriented" output, such  as  text  processors,  general
+       purpose  utilities,  etc.   It can be interfaced with screen
+       oriented programs such as visual editors by  redefining  the
+       appropriate  macros to call special functions for displaying
+       the  debugger  results.   Of  course,  this  caveat  is  not
+       applicable  if  the  debugger output is simply dumped into a
+       file for post-execution examination.
+
+
+            Programs which use memory  allocation  functions  other
+       than  malloc  will  usually have problems using the standard
+       dbug package.  The most common problem is multiply allocated
+       memory.
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+                                  - 21 -
+
+
+
+
+
+
+
+
+                                 D B U G
+                       C Program Debugging Package
+
+                                    by
+                                Fred Fish
+
+
+
+                                 ABSTRACT
+
+
+       This  document  introduces  dbug,  a macro based C debugging
+       package which has proven to be a very  flexible  and  useful
+       tool for debugging, testing, and porting C programs.
+
+
+            All  of the features of the dbug package can be enabled
+       or disabled dynamically at execution time.  This means  that
+       production  programs will run normally when debugging is not
+       enabled, and eliminates the need to  maintain  two  separate
+       versions of a program.
+
+
+            Many   of   the   things   easily   accomplished   with
+       conventional debugging tools, such  as  symbolic  debuggers,
+       are  difficult  or  impossible  with  this package, and vice
+       versa.  Thus the dbug package should not be thought of as  a
+       replacement  or  substitute  for  other debugging tools, but
+       simply as a useful addition to the program  development  and
+       maintenance environment.
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+                                  - 22 -
+
+
diff -Nur m148/dmake/dbug/dbug/example1.c dmake43p01/dmake/dbug/dbug/example1.c
--- dmake/dbug/dbug/example1.c	1970-01-01 01:00:00.000000000 +0100
+++ dmake/dbug/dbug/example1.c	2005-09-26 02:43:26.000000000 +0200
@@ -0,0 +1,12 @@
+#include <stdio.h>
+
+main (argc, argv)
+int argc;
+char *argv[];
+{
+    printf ("argv[0] = %d\n", argv[0]);
+    /*
+     *	Rest of program
+     */
+    printf ("== done ==\n");
+}
diff -Nur m148/dmake/dbug/dbug/example2.c dmake43p01/dmake/dbug/dbug/example2.c
--- dmake/dbug/dbug/example2.c	1970-01-01 01:00:00.000000000 +0100
+++ dmake/dbug/dbug/example2.c	2005-09-26 02:43:26.000000000 +0200
@@ -0,0 +1,17 @@
+#include <stdio.h>
+
+int debug = 0;
+
+main (argc, argv)
+int argc;
+char *argv[];
+{
+    /* printf ("argv = %x\n", argv) */
+    if (debug) printf ("argv[0] = %d\n", argv[0]);
+    /*
+     *	Rest of program
+     */
+#ifdef DEBUG
+    printf ("== done ==\n");
+#endif
+}
diff -Nur m148/dmake/dbug/dbug/example3.c dmake43p01/dmake/dbug/dbug/example3.c
--- dmake/dbug/dbug/example3.c	1970-01-01 01:00:00.000000000 +0100
+++ dmake/dbug/dbug/example3.c	2005-09-26 02:43:27.000000000 +0200
@@ -0,0 +1,16 @@
+#include <stdio.h>
+
+main (argc, argv)
+int argc;
+char *argv[];
+{
+#   ifdef DEBUG
+    printf ("argv[0] = %d\n", argv[0]);
+#   endif
+    /*
+     *	Rest of program
+     */
+#   ifdef DEBUG
+    printf ("== done ==\n");
+#   endif
+}
diff -Nur m148/dmake/dbug/dbug/factorial.c dmake43p01/dmake/dbug/dbug/factorial.c
--- dmake/dbug/dbug/factorial.c	1970-01-01 01:00:00.000000000 +0100
+++ dmake/dbug/dbug/factorial.c	2005-09-26 02:43:27.000000000 +0200
@@ -0,0 +1,15 @@
+#include <stdio.h>
+/* User programs should use <local/dbug.h> */
+#include "dbug.h"
+
+int factorial (value)
+     register int value;
+{
+  DBUG_ENTER ("factorial");
+  DBUG_PRINT ("find", ("find %d factorial", value));
+  if (value > 1) {
+    value *= factorial (value - 1);
+  }
+  DBUG_PRINT ("result", ("result is %d", value));
+  DBUG_RETURN (value);
+}
diff -Nur m148/dmake/dbug/dbug/main.c dmake43p01/dmake/dbug/dbug/main.c
--- dmake/dbug/dbug/main.c	1970-01-01 01:00:00.000000000 +0100
+++ dmake/dbug/dbug/main.c	2005-09-26 02:43:27.000000000 +0200
@@ -0,0 +1,27 @@
+#include <stdio.h>
+/* User programs should use <local/dbug.h> */
+#include "dbug.h"
+
+int main (argc, argv)
+     int argc;
+     char *argv[];
+{
+  register int result, ix;
+  extern int factorial (), atoi ();
+
+  DBUG_ENTER ("main");
+  DBUG_PROCESS (argv[0]);
+  for (ix = 1; ix < argc && argv[ix][0] == '-'; ix++) {
+    switch (argv[ix][1]) {
+    case '#':
+      DBUG_PUSH (&(argv[ix][2]));
+      break;
+    }
+  }
+  for (; ix < argc; ix++) {
+    DBUG_PRINT ("args", ("argv[%d] = %s", ix, argv[ix]));
+    result = factorial (atoi (argv[ix]));
+    printf ("%d\n", result);
+  }
+  DBUG_RETURN (0);
+}
diff -Nur m148/dmake/dbug/dbug/makeman.sh dmake43p01/dmake/dbug/dbug/makeman.sh
--- dmake/dbug/dbug/makeman.sh	1970-01-01 01:00:00.000000000 +0100
+++ dmake/dbug/dbug/makeman.sh	2005-09-26 02:43:28.000000000 +0200
@@ -0,0 +1,18 @@
+#!/bin/bash
+
+gcc -o factorial main.c factorial.c dbug.c
+
+for i in example?.c main.c factorial.c ;
+do
+  sed -e 's!\\!\\\\!g' $i > ${i/\.c/\.r}
+done
+
+./factorial 1 2 3 4 5 | cat > output1.r
+./factorial -\#t:o 2 3 | cat > output2.r
+./factorial -\#d:t:o 3 | cat > output3.r
+./factorial -\#d,result:o 4 | cat > output4.r
+./factorial -\#d:f,factorial:F:L:o 3 | cat >output5.r
+
+#nroff -mm user.r > user.t
+#groff -mm user.r > user.ps
+groff -mm -rcR=0 -Tlatin1 -P -bcu user.r > dbug.txt
diff -Nur m148/dmake/dbug/dbug/readme dmake43p01/dmake/dbug/dbug/readme
--- dmake/dbug/dbug/readme	2000-09-22 17:33:26.000000000 +0200
+++ dmake/dbug/dbug/readme	2005-09-26 02:43:28.000000000 +0200
@@ -1,6 +1,52 @@
-To unpack the DBUG manual page please issue the following sequence of
-commands:
+This directory contains DBUG the "C Program Debugging Package" by Fred Fish.
 
-	uudecode dbug.uue
-	uncompress dbug.Z
-	mv dbug dbug.p
+/******************************************************************************
+ *									      *
+ *	                           N O T I C E				      *
+ *									      *
+ *	              Copyright Abandoned, 1987, Fred Fish		      *
+ *									      *
+ *									      *
+ *	This previously copyrighted work has been placed into the  public     *
+ *	domain  by  the  author  and  may be freely used for any purpose,     *
+ *	private or commercial.						      *
+ *									      *
+ *	Because of the number of inquiries I was receiving about the  use     *
+ *	of this product in commercially developed works I have decided to     *
+ *	simply make it public domain to further its unrestricted use.   I     *
+ *	specifically  would  be  most happy to see this material become a     *
+ *	part of the standard Unix distributions by AT&T and the  Berkeley     *
+ *	Computer  Science  Research Group, and a standard part of the GNU     *
+ *	system from the Free Software Foundation.			      *
+ *									      *
+ *	I would appreciate it, as a courtesy, if this notice is  left  in     *
+ *	all copies and derivative works.  Thank you.			      *
+ *									      *
+ *	The author makes no warranty of any kind  with  respect  to  this     *
+ *	product  and  explicitly disclaims any implied warranties of mer-     *
+ *	chantability or fitness for any particular purpose.		      *
+ *									      *
+ ******************************************************************************
+ */
+
+The original package is no longer mainained, but copies can found here
+  <http://sourceforge.net/projects/dbug/>
+or in the dbug directory of the MySQL 4.0 (and older)
+  <http://dev.mysql.com/downloads/>
+sources.
+
+The files found here are:
+
+  dbug.c     - runtime support routines for dbug package
+  dbug.h     - user include file for programs using the dbug package
+  user.r     - nroff source for the manual page.
+  dbug.txt   - a typeset version of the manual page containing no control
+               characters. Generated with makeman.sh:
+               Copy it as dbug.1 into a directory in your search path for
+               man pages to be able to view it with the man command. 
+  makeman.sh - helper script to generate the documentation
+  example1.c - Additional/demo sources for the documentation.
+  example2.c
+  example3.c
+  main.c
+  factorial.c
diff -Nur m148/dmake/dbug/dbug/user.r dmake43p01/dmake/dbug/dbug/user.r
--- dmake/dbug/dbug/user.r	1970-01-01 01:00:00.000000000 +0100
+++ dmake/dbug/dbug/user.r	2005-09-26 02:43:28.000000000 +0200
@@ -0,0 +1,938 @@
+.\"           @(#)user.r      1.13 10/29/86
+.\"
+.\"           DBUG (Macro Debugger Package) nroff source
+.\"
+.\"           nroff -mm user.r >user.t
+.\"
+.\" ===================================================
+.\"
+.\"           === Some sort of black magic, but I forget...
+.tr ~
+.\"           === Hyphenation control (1 = on)
+.\".nr Hy 1
+.\"           === Force all first level headings to start on new page
+.nr Ej 1
+.\"           === Set for breaks after headings for levels 1-3
+.nr Hb 3
+.\"           === Set for space after headings for levels 1-3
+.nr Hs 3
+.\"           === Set standard indent for one/half inch
+.nr Si 10
+.\"           === Set page header - set date to source date
+.\".PH "/DBUG User Manual//\*(DT/"
+.PH "/DBUG User Manual//October 29, 1986"
+.\"           === Set page footer
+.PF "// - % - //"
+.\"           === Set page offset
+.\".po 0.60i
+.\"           === Set line length
+.\".ll 6.5i
+.TL
+D B U G
+.P 0
+C Program Debugging Package
+.P 0
+by
+.AU "Fred Fish"
+.AF ""
+.SA 1
+.\"           === All paragraphs indented.
+.nr Pt 1
+.AS 1
+This document introduces
+.I dbug ,
+a macro based C debugging
+package which has proven to be a very flexible and useful tool
+for debugging, testing, and porting C programs.
+
+.P
+All of the features of the
+.I dbug
+package can be enabled or disabled dynamically at execution time.
+This means that production programs will run normally when
+debugging is not enabled, and eliminates the need to maintain two
+separate versions of a program.
+
+.P
+Many of the things easily accomplished with conventional debugging
+tools, such as symbolic debuggers, are difficult or impossible with this
+package, and vice versa.
+Thus the
+.I dbug
+package should 
+.I not
+be thought of as a replacement or substitute for
+other debugging tools, but simply as a useful
+.I addition
+to the
+program development and maintenance environment.
+
+.AE
+.MT 4
+.SK
+.B
+INTRODUCTION
+.R
+
+.P
+Almost every program development environment worthy of the name
+provides some sort of debugging facility.
+Usually this takes the form of a program which is capable of
+controlling execution of other programs and examining the internal
+state of other executing programs.
+These types of programs will be referred to as external debuggers
+since the debugger is not part of the executing program.
+Examples of this type of debugger include the
+.B adb
+and
+.B sdb
+debuggers provided with the 
+.B UNIX\*F
+.FS
+UNIX is a trademark of AT&T Bell Laboratories.
+.FE
+operating system.
+
+.P
+One of the problems associated with developing programs in an environment
+with good external debuggers is that developed programs tend to have 
+little or no internal instrumentation.
+This is usually not a problem for the developer since he is,
+or at least should be, intimately familiar with the internal organization,
+data structures, and control flow of the program being debugged.
+It is a serious problem for maintenance programmers, who
+are unlikely to have such familiarity with the program being
+maintained, modified, or ported to another environment.
+It is also a problem, even for the developer, when the program is
+moved to an environment with a primitive or unfamiliar debugger,
+or even no debugger.
+
+.P
+On the other hand,
+.I dbug
+is an example of an internal debugger.
+Because it requires internal instrumentation of a program,
+and its usage does not depend on any special capabilities of
+the execution environment, it is always available and will
+execute in any environment that the program itself will
+execute in.
+In addition, since it is a complete package with a specific
+user interface, all programs which use it will be provided
+with similar debugging capabilities.
+This is in sharp contrast to other forms of internal instrumentation
+where each developer has their own, usually less capable, form
+of internal debugger.
+In summary,
+because 
+.I dbug
+is an internal debugger it provides consistency across operating
+environments, 
+and because it is available to all developers it provides
+consistency across all programs in the same environment.
+
+.P
+The
+.I dbug
+package imposes only a slight speed penalty on executing
+programs, typically much less than 10 percent, and a modest size
+penalty, typically 10 to 20 percent.
+By defining a specific C preprocessor symbol both of these
+can be reduced to zero with no changes required to the
+source code.
+
+.P
+The following list is a quick summary of the capabilities
+of the
+.I dbug
+package.
+Each capability can be individually enabled or disabled
+at the time a program is invoked by specifying the appropriate
+command line arguments.
+.SP 1
+.ML o 1i
+.LI
+Execution trace showing function level control flow in a
+semi-graphically manner using indentation to indicate nesting
+depth.
+.LI
+Output the values of all, or any subset of, key internal variables.
+.LI
+Limit actions to a specific set of named functions.
+.LI
+Limit function trace to a specified nesting depth.
+.LI
+Label each output line with source file name and line number.
+.LI
+Label each output line with name of current process.
+.LI
+Push or pop internal debugging state to allow execution with
+built in debugging defaults.
+.LI
+Redirect the debug output stream to standard output (stdout)
+or a named file.
+The default output stream is standard error (stderr).
+The redirection mechanism is completely independent of
+normal command line redirection to avoid output conflicts.
+.LE
+
+.SK
+.B
+PRIMITIVE DEBUGGING TECHNIQUES
+.R
+
+.P
+Internal instrumentation is already a familiar concept
+to most programmers, since it is usually the first debugging
+technique learned.
+Typically, "print\ statements" are inserted in the source
+code at interesting points, the code is recompiled and executed,
+and the resulting output is examined in an attempt to determine
+where the problem is.
+
+The procedure is iterative, with each iteration yielding more
+and more output, and hopefully the source of the problem is
+discovered before the output becomes too large to deal with
+or previously inserted statements need to be removed.
+Figure 1 is an example of this type of primitive debugging
+technique.
+.DS I N
+.SP 2
+.so example1.r
+.SP 2
+.ll -5
+.ce
+Figure 1
+.ce
+Primitive Debugging Technique
+.ll +5
+.SP 2
+.DE
+
+.P
+Eventually, and usually after at least several iterations, the
+problem will be found and corrected.
+At this point, the newly inserted print statements must be 
+dealt with.
+One obvious solution is to simply delete them all.
+Beginners usually do this a few times until they have to
+repeat the entire process every time a new bug pops up.
+The second most obvious solution is to somehow disable
+the output, either through the source code comment facility,
+creation of a debug variable to be switched on or off, or by using the
+C preprocessor.
+Figure 2 is an example of all three techniques.
+.DS I N
+.SP 2
+.so example2.r
+.SP 2
+.ll -5
+.ce
+Figure 2
+.ce
+Debug Disable Techniques
+.ll +5
+.SP 2
+.DE
+
+.P
+Each technique has its advantages and disadvantages with respect
+to dynamic vs static activation, source code overhead, recompilation
+requirements, ease of use, program readability, etc.
+Overuse of the preprocessor solution quickly leads to problems with
+source code readability and maintainability when multiple 
+.B #ifdef
+symbols are to be defined or undefined based on specific types
+of debug desired.
+The source code can be made slightly more readable by suitable indentation
+of the 
+.B #ifdef
+arguments to match the indentation of the code, but
+not all C preprocessors allow this.
+The only requirement for the standard 
+.B UNIX
+C preprocessor is for the '#' character to appear
+in the first column, but even this seems
+like an arbitrary and unreasonable restriction.
+Figure 3 is an example of this usage.
+.DS I N
+.SP 2
+.so example3.r
+.SP 2
+.ll -5
+.ce
+Figure 3
+.ce
+More Readable Preprocessor Usage
+.ll +5
+.SP 2
+.DE
+
+.SK
+.B
+FUNCTION TRACE EXAMPLE
+.R
+
+.P
+We will start off learning about the capabilities of the
+.I dbug
+package by using a simple minded program which computes the
+factorial of a number.
+In order to better demonstrate the function trace mechanism, this
+program is implemented recursively.
+Figure 4 is the main function for this factorial program.
+.DS I N
+.SP 2
+.so main.r
+.SP 2
+.ll -5
+.ce
+Figure 4
+.ce
+Factorial Program Mainline
+.ll +5
+.SP 2
+.DE
+
+.P
+The 
+.B main
+function is responsible for processing any command line
+option arguments and then computing and printing the factorial of
+each non-option argument.
+.P
+First of all, notice that all of the debugger functions are implemented
+via preprocessor macros.
+This does not detract from the readability of the code and makes disabling
+all debug compilation trivial (a single preprocessor symbol, 
+.B DBUG_OFF ,
+forces the macro expansions to be null).
+.P
+Also notice the inclusion of the header file
+.B dbug.h
+from the local header file directory.
+(The version included here is the test version in the dbug source
+distribution directory).
+This file contains all the definitions for the debugger macros, which
+all have the form 
+.B DBUG_XX...XX .
+
+.P
+The 
+.B DBUG_ENTER 
+macro informs that debugger that we have entered the
+function named 
+.B main .
+It must be the very first "executable" line in a function, after
+all declarations and before any other executable line.
+The 
+.B DBUG_PROCESS
+macro is generally used only once per program to
+inform the debugger what name the program was invoked with.
+The
+.B DBUG_PUSH
+macro modifies the current debugger state by
+saving the previous state and setting a new state based on the
+control string passed as its argument.
+The
+.B DBUG_PRINT
+macro is used to print the values of each argument
+for which a factorial is to be computed.
+The 
+.B DBUG_RETURN
+macro tells the debugger that the end of the current
+function has been reached and returns a value to the calling
+function.
+All of these macros will be fully explained in subsequent sections.
+.P
+To use the debugger, the factorial program is invoked with a command
+line of the form:
+.DS CB N
+factorial -#d:t 1 2 3
+.DE
+The 
+.B main
+function recognizes the "-#d:t" string as a debugger control
+string, and passes the debugger arguments ("d:t") to the 
+.I dbug
+runtime support routines via the
+.B DBUG_PUSH 
+macro.
+This particular string enables output from the
+.B DBUG_PRINT
+macro with the 'd' flag and enables function tracing with the 't' flag.
+The factorial function is then called three times, with the arguments
+"1", "2", and "3".
+Note that the DBUG_PRINT takes exactly
+.B two
+arguments, with the second argument (a format string and list
+of printable values) enclosed in parenthesis.
+.P
+Debug control strings consist of a header, the "-#", followed
+by a colon separated list of debugger arguments.
+Each debugger argument is a single character flag followed
+by an optional comma separated list of arguments specific
+to the given flag.
+Some examples are:
+.DS CB N
+-#d:t:o
+-#d,in,out:f,main:F:L
+.DE
+Note that previously enabled debugger actions can be disabled by the
+control string "-#".
+
+.P
+The definition of the factorial function, symbolized as "N!", is
+given by:
+.DS CB N
+N! = N * N-1 * ... 2 * 1
+.DE
+Figure 5 is the factorial function which implements this algorithm
+recursively.
+Note that this is not necessarily the best way to do factorials
+and error conditions are ignored completely.
+.DS I N
+.SP 2
+.so factorial.r
+.SP 2
+.ll -5
+.ce
+Figure 5
+.ce
+Factorial Function
+.ll +5
+.SP 2
+.DE
+
+.P
+One advantage (some may not consider it so) to using the
+.I dbug
+package is that it strongly encourages fully structured coding
+with only one entry and one exit point in each function.
+Multiple exit points, such as early returns to escape a loop,
+may be used, but each such point requires the use of an
+appropriate 
+.B DBUG_RETURN
+or
+.B DBUG_VOID_RETURN
+macro.
+
+.P
+To build the factorial program on a 
+.B UNIX
+system, compile and
+link with the command:
+.DS CB N
+cc -o factorial main.c factorial.c -ldbug
+.DE
+The "-ldbug" argument tells the loader to link in the
+runtime support modules for the
+.I dbug
+package.
+Executing the factorial program with a command of the form:
+.DS CB N
+factorial 1 2 3 4 5
+.DE
+generates the output shown in figure 6.
+.DS I N
+.SP 2
+.so output1.r
+.SP 2
+.ll -5
+.ce
+Figure 6
+.ce
+factorial 1 2 3 4 5
+.ll +5
+.SP 2
+.DE
+
+.P
+Function level tracing is enabled by passing the debugger
+the 't' flag in the debug control string.
+Figure 7 is the output resulting from the command
+"factorial\ -#t:o\ 3\ 2".
+.DS I N
+.SP 2
+.so output2.r
+.SP 2
+.ll -5
+.ce
+Figure 7
+.ce
+factorial -#t:o 3 2
+.ll +5
+.SP 2
+.DE
+
+.P
+Each entry to or return from a function is indicated by '>' for the
+entry point and '<' for the exit point, connected by
+vertical bars to allow matching points to be easily found
+when separated by large distances.
+
+.P
+This trace output indicates that there was an initial call
+to factorial from main (to compute 2!), followed by
+a single recursive call to factorial to compute 1!.
+The main program then output the result for 2! and called the
+factorial function again with the second argument, 3.
+Factorial called itself recursively to compute 2! and 1!, then
+returned control to main, which output the value for 3! and exited.
+
+.P
+Note that there is no matching entry point "main>" for the
+return point "<main" because at the time the 
+.B DBUG_ENTER
+macro was reached in main, tracing was not enabled yet.
+It was only after the macro
+.B DBUG_PUSH
+was executing that tracing became enabled.
+This implies that the argument list should be processed as early as
+possible since all code preceding the first call to
+.B DBUG_PUSH 
+is
+essentially invisible to 
+.B dbug
+(this can be worked around by
+inserting a temporary 
+.B DBUG_PUSH(argv[1])
+immediately after the
+.B DBUG_ENTER("main")
+macro.
+
+.P
+One last note,
+the trace output normally comes out on the standard error.
+Since the factorial program prints its result on the standard
+output, there is the possibility of the output on the terminal
+being scrambled if the two streams are not synchronized.
+Thus the debugger is told to write its output on the standard
+output instead, via the 'o' flag character.
+Note that no 'o' implies the default (standard error), a 'o' 
+with no arguments means standard output, and a 'o' 
+with an argument means used the named file.
+I.E, "factorial\ -#t:o,logfile\ 3\ 2" would write the trace
+output in "logfile".
+Because of 
+.B UNIX
+implementation details, programs usually run
+faster when writing to stdout rather than stderr, though this
+is not a prime consideration in this example.
+
+.SK
+.B
+USE OF DBUG_PRINT MACRO
+.R
+
+.P
+The mechanism used to produce "printf" style output is the
+.B DBUG_PRINT
+macro.
+
+.P
+To allow selection of output from specific macros, the first argument
+to every 
+.B DBUG_PRINT
+macro is a 
+.I dbug
+keyword.
+When this keyword appears in the argument list of the 'd' flag in
+a debug control string, as in "-#d,keyword1,keyword2,...:t",
+output from the corresponding macro is enabled.
+The default when there is no 'd' flag in the control string is to
+enable output from all 
+.B DBUG_PRINT
+macros.
+
+.P
+Typically, a program will be run once, with no keywords specified,
+to determine what keywords are significant for the current problem
+(the keywords are printed in the macro output line).
+Then the program will be run again, with the desired keywords,
+to examine only specific areas of interest.
+
+.P
+The second argument to a
+.B DBUG_PRINT 
+macro is a standard printf style
+format string and one or more arguments to print, all
+enclosed in parenthesis so that they collectively become a single macro
+argument.
+This is how variable numbers of printf arguments are supported.
+Also note that no explicit newline is required at the end of the format string.
+As a matter of style, two or three small 
+.B DBUG_PRINT
+macros are preferable
+to a single macro with a huge format string.
+Figure 8 shows the output for default tracing and debug.
+.DS I N
+.SP 2
+.so output3.r
+.SP 2
+.ll -5
+.ce
+Figure 8
+.ce
+factorial -#d:t:o 3
+.ll +5
+.SP 2
+.DE
+
+.P
+The output from the 
+.B DBUG_PRINT
+macro is indented to match the trace output
+for the function in which the macro occurs.
+When debugging is enabled, but not trace, the output starts at the left
+margin, without indentation.
+
+.P
+To demonstrate selection of specific macros for output, figure
+9 shows the result when the factorial program is invoked with
+the debug control string "-#d,result:o".
+.DS I N
+.SP 2
+.so output4.r
+.SP 2
+.ll -5
+.ce
+Figure 9
+.ce
+factorial -#d,result:o 4
+.ll +5
+.SP 2
+.DE
+
+.P
+It is sometimes desirable to restrict debugging and trace actions
+to a specific function or list of functions.
+This is accomplished with the 'f' flag character in the debug
+control string.
+Figure 10 is the output of the factorial program when run with the
+control string "-#d:f,factorial:F:L:o".
+The 'F' flag enables printing of the source file name and the 'L'
+flag enables printing of the source file line number.
+.DS I N
+.SP 2
+.so output5.r
+.SP 2
+.ll -5
+.ce
+Figure 10
+.ce
+factorial -#d:f,factorial:F:L:o 3
+.ll +5
+.SP 2
+.DE
+
+.P
+The output in figure 10 shows that the "find" macro is in file
+"factorial.c" at source line 8 and the "result" macro is in the same
+file at source line 12.
+
+.SK
+.B
+SUMMARY OF MACROS
+.R
+
+.P
+This section summarizes the usage of all currently defined macros
+in the 
+.I dbug
+package.
+The macros definitions are found in the user include file
+.B dbug.h
+from the standard include directory.
+
+.SP 2
+.BL 20
+.LI DBUG_ENTER\ 
+Used to tell the runtime support module the name of the function
+being entered.
+The argument must be of type "pointer to character".
+The 
+DBUG_ENTER
+macro must precede all executable lines in the
+function just entered, and must come after all local declarations.
+Each 
+DBUG_ENTER
+macro must have a matching 
+DBUG_RETURN 
+or
+DBUG_VOID_RETURN
+macro 
+at the function exit points.
+DBUG_ENTER 
+macros used without a matching 
+DBUG_RETURN 
+or 
+DBUG_VOID_RETURN
+macro 
+will cause warning messages from the 
+.I dbug
+package runtime support module.
+.SP 1
+EX:\ DBUG_ENTER\ ("main");
+.SP 1
+.LI DBUG_RETURN\ 
+Used at each exit point of a function containing a 
+DBUG_ENTER 
+macro
+at the entry point.
+The argument is the value to return.
+Functions which return no value (void) should use the 
+DBUG_VOID_RETURN
+macro.
+It 
+is an error to have a 
+DBUG_RETURN 
+or 
+DBUG_VOID_RETURN 
+macro in a function
+which has no matching 
+DBUG_ENTER 
+macro, and the compiler will complain
+if the macros are actually used (expanded).
+.SP 1
+EX:\ DBUG_RETURN\ (value);
+.br
+EX:\ DBUG_VOID_RETURN;
+.SP 1
+.LI DBUG_PROCESS\ 
+Used to name the current process being executed.
+A typical argument for this macro is "argv[0]", though
+it will be perfectly happy with any other string.
+.SP 1
+EX:\ DBUG_PROCESS\ (argv[0]);
+.SP 1
+.LI DBUG_PUSH\ 
+Sets a new debugger state by pushing the current
+.B dbug
+state onto an
+internal stack and setting up the new state using the debug control
+string passed as the macro argument.
+The most common usage is to set the state specified by a debug
+control string retrieved from the argument list.
+Note that the leading "-#" in a debug control string specified
+as a command line argument must
+.B not
+be passed as part of the macro argument.
+The proper usage is to pass a pointer to the first character
+.B after
+the "-#" string.
+.SP 1
+EX:\ DBUG_PUSH\ (\&(argv[i][2]));
+.br
+EX:\ DBUG_PUSH\ ("d:t");
+.br
+EX:\ DBUG_PUSH\ ("");
+.SP 1
+.LI DBUG_POP\ 
+Restores the previous debugger state by popping the state stack.
+Attempting to pop more states than pushed will be ignored and no
+warning will be given.
+The 
+DBUG_POP 
+macro has no arguments.
+.SP 1
+EX:\ DBUG_POP\ ();
+.SP 1
+.LI DBUG_FILE\ 
+The 
+DBUG_FILE 
+macro is used to do explicit I/O on the debug output
+stream.
+It is used in the same manner as the symbols "stdout" and "stderr"
+in the standard I/O package.
+.SP 1
+EX:\ fprintf\ (DBUG_FILE,\ "Doing my own I/O!\\n");
+.SP 1
+.LI DBUG_EXECUTE\ 
+The DBUG_EXECUTE macro is used to execute any arbitrary C code.
+The first argument is the debug keyword, used to trigger execution
+of the code specified as the second argument.
+This macro must be used cautiously because, like the 
+DBUG_PRINT 
+macro,
+it is automatically selected by default whenever the 'd' flag has
+no argument list (I.E., a "-#d:t" control string).
+.SP 1
+EX:\ DBUG_EXECUTE\ ("abort",\ abort\ ());
+.SP 1
+.LI DBUG_N\ 
+These macros, where N is in the range 2-5, are currently obsolete
+and will be removed in a future release.
+Use the new DBUG_PRINT macro.
+.LI DBUG_PRINT\ 
+Used to do printing via the "fprintf" library function on the
+current debug stream,
+DBUG_FILE.
+The first argument is a debug keyword, the second is a format string
+and the corresponding argument list.
+Note that the format string and argument list are all one macro argument
+and
+.B must
+be enclosed in parenthesis.
+.SP 1
+EX:\ DBUG_PRINT\ ("eof",\ ("end\ of\ file\ found"));
+.br
+EX:\ DBUG_PRINT\ ("type",\ ("type\ is\ %x", type));
+.br
+EX:\ DBUG_PRINT\ ("stp",\ ("%x\ ->\ %s", stp, stp\ ->\ name));
+.LI DBUG_SETJMP\ 
+Used in place of the setjmp() function to first save the current
+debugger state and then execute the standard setjmp call.
+This allows to the debugger to restore it's state when the
+DBUG_LONGJMP macro is used to invoke the standard longjmp() call.
+Currently all instances of DBUG_SETJMP must occur within the
+same function and at the same function nesting level.
+.SP 1
+EX:\ DBUG_SETJMP\ (env);
+.LI DBUG_LONGJMP\ 
+Used in place of the longjmp() function to first restore the
+previous debugger state at the time of the last DBUG_SETJMP
+and then execute the standard longjmp() call.
+Note that currently all DBUG_LONGJMP macros restore the state
+at the time of the last DBUG_SETJMP.
+It would be possible to maintain separate DBUG_SETJMP and DBUG_LONGJMP
+pairs by having the debugger runtime support module use the first
+argument to differentiate the pairs.
+.SP 1
+EX:\ DBUG_LONGJMP\ (env,val);
+.LE
+
+.SK
+.B
+DEBUG CONTROL STRING
+.R
+
+.P
+The debug control string is used to set the state of the debugger
+via the 
+.B DBUG_PUSH 
+macro.
+This section summarizes the currently available debugger options
+and the flag characters which enable or disable them.
+Argument lists enclosed in '[' and ']' are optional.
+.SP 2
+.BL 22
+.LI d[,keywords]
+Enable output from macros with specified keywords.
+A null list of keywords implies that all keywords are selected.
+.LI D[,time]
+Delay for specified time after each output line, to let output drain.
+Time is given in tenths of a second (value of 10 is one second).
+Default is zero.
+.LI f[,functions]
+Limit debugger actions to the specified list of functions.
+A null list of functions implies that all functions are selected.
+.LI F
+Mark each debugger output line with the name of the source file
+containing the macro causing the output.
+.LI L
+Mark each debugger output line with the source file line number of
+the macro causing the output.
+.LI n
+Mark each debugger output line with the current function nesting depth.
+.LI N
+Sequentially number each debugger output line starting at 1.
+This is useful for reference purposes when debugger output is
+interspersed with program output.
+.LI o[,file]
+Redirect the debugger output stream to the specified file.
+The default output stream is stderr.
+A null argument list causes output to be redirected to stdout.
+.LI p[,processes]
+Limit debugger actions to the specified processes.
+A null list implies all processes.
+This is useful for processes which run child processes.
+Note that each debugger output line can be marked with the name of
+the current process via the 'P' flag.
+The process name must match the argument passed to the
+.B DBUG_PROCESS
+macro.
+.LI P
+Mark each debugger output line with the name of the current process.
+Most useful when used with a process which runs child processes that
+are also being debugged.
+Note that the parent process must arrange for the debugger control
+string to be passed to the child processes.
+.LI r
+Used in conjunction with the 
+.B DBUG_PUSH 
+macro to reset the current
+indentation level back to zero.
+Most useful with 
+.B DBUG_PUSH 
+macros used to temporarily alter the
+debugger state.
+.LI t[,N]
+Enable function control flow tracing.
+The maximum nesting depth is specified by N, and defaults to
+200.
+.LE
+.SK
+.B
+HINTS AND MISCELLANEOUS
+.R
+
+.P
+One of the most useful capabilities of the 
+.I dbug 
+package is to compare the executions of a given program in two
+different environments.
+This is typically done by executing the program in the environment
+where it behaves properly and saving the debugger output in a
+reference file.
+The program is then run with identical inputs in the environment where 
+it misbehaves and the output is again captured in a reference file.
+The two reference files can then be differentially compared to
+determine exactly where execution of the two processes diverges.
+
+.P
+A related usage is regression testing where the execution of a current
+version is compared against executions of previous versions.
+This is most useful when there are only minor changes.
+
+.P
+It is not difficult to modify an existing compiler to implement
+some of the functionality of the 
+.I dbug
+package automatically, without source code changes to the
+program being debugged.
+In fact, such changes were implemented in a version of the
+Portable C Compiler by the author in less than a day.
+However, it is strongly encouraged that all newly
+developed code continue to use the debugger macros
+for the portability reasons noted earlier.
+The modified compiler should be used only for testing existing
+programs.
+
+.SK
+.B
+CAVEATS
+.R
+
+.P
+The 
+.I dbug
+package works best with programs which have "line\ oriented"
+output, such as text processors, general purpose utilities, etc.
+It can be interfaced with screen oriented programs such as
+visual editors by redefining the appropriate macros to call
+special functions for displaying the debugger results.
+Of course, this caveat is not applicable if the debugger output
+is simply dumped into a file for post-execution examination.
+
+.P
+Programs which use memory allocation functions other than
+.B malloc
+will usually have problems using the standard
+.I dbug
+package.
+The most common problem is multiply allocated memory.
+.SP 2
+.\" .DE nroff dident like this. davida 900108
+.CS
+
+
diff -Nur m148/dmake/dmake.c dmake43p01/dmake/dmake.c
--- dmake/dmake.c	2004-10-22 10:04:42.000000000 +0200
+++ dmake/dmake.c	2005-09-05 22:56:44.000000000 +0200
@@ -1,6 +1,6 @@
 /* $RCSfile: dmake.c,v $
--- $Revision: 1.5 $
--- last change: $Author: rt $ $Date: 2004/10/22 08:04:42 $
+-- $Revision: 1.5.2.7 $
+-- last change: $Author: vq $ $Date: 2005/09/05 20:56:44 $
 --
 -- SYNOPSIS
 --      The main program.
@@ -141,6 +141,10 @@
    Create_macro_vars();
    Catch_signals(Quit);
 
+   /* This macro is only defined for some OSs, see sysintf.c for details *
+    * and NULL if undefined.                                             */
+   Def_macro("ABSMAKECMD", AbsPname, M_PRECIOUS|M_NOEXPORT );
+
    Def_macro( "MAKECMD", Pname, M_PRECIOUS|M_NOEXPORT );
    Pname = Basename(Pname);
 
@@ -165,8 +169,11 @@
    m_export  = FALSE;
    cmdmacs   = NIL(char);
    targets   = NIL(char);
+   Is_exec_shell = FALSE;
+   Shell_exec_target = NIL(CELL);
+   stdout_redir = NIL(FILE);
 
-   Verbose     = V_NONE;
+   Verbose     = V_NOFLAG;
    Transitive  = TRUE;
    Nest_level  = 0;
    Line_number = 0;
@@ -330,6 +337,7 @@
    if( Rules ) {
       char *fname;
 
+      /* Search_file() also checks the environment variable. */
       if( (mkfil=Search_file("MAKESTARTUP", &fname)) != NIL(FILE) ) {
          Parse(mkfil);
 	 Def_macro( "MAKESTARTUP", fname, M_EXPANDED|M_MULTI|M_FORCE );
@@ -684,9 +692,9 @@
       if( f != NIL(char) ) fprintf(stderr, "%s:  line %d:  ", f, Line_number);
 
       if( errflg )
-         fprintf(stderr, "Error -- ");
+         fprintf(stderr, "Error: -- ");
       else if( warn )
-         fprintf(stderr, "Warning -- ");
+         fprintf(stderr, "Warning: -- ");
 
       vfprintf( stderr, fmt, args );
       putc( '\n', stderr );
@@ -838,20 +846,13 @@
    extern char **Rule_tab;
    char **p;
    
-   printf("%s - %s, ", Pname, sccid);
-   printf("Version %s\n\n", VERSION);
+   printf("%s - Version %s (%s)\n", Pname, VERSION, BUILDINFO);
+   printf("%s\n\n", sccid);
 
    puts("Default Configuration:");
    for (p=Rule_tab;  *p != NIL(char);  p++)
       printf("\t%s\n", *p);
 
    printf("\n");
-printf("Please read the file readme/release for the latest release notes.\n");
-#if 0
-printf("\n");
-printf("Please support the DMAKE Reference Manual project.  See the file\n");
-printf("readme/release for additional information on where to send contributions.\n");
-printf("Or, send mail to dvadura@plg.uwaterloo.ca for additional information if the\n");
-printf("above file is not readily available.\n");
-#endif
+printf("Please read the file readme/read1st.txt for the latest release notes.\n");
 }
diff -Nur m148/dmake/dmake.h dmake43p01/dmake/dmake.h
--- dmake/dmake.h	2004-09-08 18:05:34.000000000 +0200
+++ dmake/dmake.h	2006-01-04 03:13:12.000000000 +0100
@@ -1,4 +1,4 @@
-/* RCS  $Id: dmake.h,v 1.2 2004/09/08 16:05:34 rt Exp $
+/* RCS  $Id: dmake.h,v 1.2.6.2 2006/01/04 02:13:12 vq Exp $
 --
 -- SYNOPSIS
 --      Global defines for dmake.
@@ -124,7 +124,7 @@
 #define F_REMOVE         0x1000         /* marks an intermediate target */
 #define F_MAGIC          0x2000         /* marks a magic target         */
 #define F_INFER          0x4000         /* target is result of inference*/
-#define F_MADE           0x8000         /* target is manufactured       */
+#define F_MADE           0x8000         /* target is currently made     */
 
 
 /* Definitions for the Parser states */
@@ -175,7 +175,7 @@
 #define ST_IFNEQ       14
 
 /* Flags for controling use of -v switch */
-#define V_NONE          0x00
+#define V_NOFLAG        0x00   /* V_NONE is used in MinGW w32api/oleauto.h */
 #define V_LEAVE_TMP     0x01
 #define V_DIR_SET       0x02
 #define V_DIR_CACHE     0x04
diff -Nur m148/dmake/dmakeroot.h.in dmake43p01/dmake/dmakeroot.h.in
--- dmake/dmakeroot.h.in	2003-03-25 15:02:10.000000000 +0100
+++ dmake/dmakeroot.h.in	2005-04-22 03:04:35.000000000 +0200
@@ -1,2 +1,6 @@
+	/* dmakeroot.h
+	 *
+	 * This is a generated file.  Please modify `configure.in'
+	 */
 
-/* Test */
+@DMAKEROOT_H_LINE1@
diff -Nur m148/dmake/dmdump.c dmake43p01/dmake/dmdump.c
--- dmake/dmdump.c	2000-09-22 17:33:25.000000000 +0200
+++ dmake/dmdump.c	2005-04-20 17:26:16.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: dmdump.c,v 1.1.1.1 2000/09/22 15:33:25 hr Exp $
+/* RCS  $Id: dmdump.c,v 1.1.1.1.132.1 2005/04/20 15:26:16 vq Exp $
 --
 -- SYNOPSIS
 --      Dump the internal dag to stdout.
@@ -218,7 +218,10 @@
 
 
 static void
-dump_prerequisites( lp, namecp, quote, recurse, flag )
+dump_prerequisites( lp, namecp, quote, recurse, flag )/*
+========================================================
+	Dump as prerequisites if recurse is FALSE or as targets
+	if recurse is TRUE. (For F_MULTI targets.) */
 LINKPTR lp;
 CELLPTR namecp;
 int     quote;
diff -Nur m148/dmake/expand.c dmake43p01/dmake/expand.c
--- dmake/expand.c	2004-09-08 18:05:48.000000000 +0200
+++ dmake/expand.c	2005-04-21 06:31:41.000000000 +0200
@@ -1,6 +1,6 @@
 /* $RCSfile: expand.c,v $
--- $Revision: 1.4 $
--- last change: $Author: rt $ $Date: 2004/09/08 16:05:48 $
+-- $Revision: 1.4.6.7 $
+-- last change: $Author: vq $ $Date: 2005/04/21 04:31:41 $
 --
 -- SYNOPSIS
 --      Macro expansion code.
@@ -37,14 +37,18 @@
 --               D or d      - Directory portion of token including separator
 --               F or f      - File portion of token including suffix
 --               B or b      - basename portion of token not including suffix
---		 T or t      - for tokenization
---		 E or e      - Suffix portion of name
---		 L or l	     - translate to lower case
---	         U or u      - translate to upper case
---		 I or i	     - return inferred names
+--               E or e      - Suffix portion of name
+--               L or l	     - translate to lower case
+--               U or u      - translate to upper case
+--               I or i	     - return inferred names
+--               1           - return the first white space separated token
 --
---	  or a single
+--	  or a single one of:
+--               M or m      - map escape codes
 --               S or s      - pattern substitution (simple)
+--               T or t      - for tokenization
+--               ^           - prepend a prefix to each token
+--               +           - append a suffix to each token
 --               
 --        NOTE:  Modifiers are applied once the macro value has been found.
 --               Thus the construct $($(test):s/joe/mary/) is defined and
@@ -636,6 +640,7 @@
    DB_ENTER( "_scan_macro" );
 
    /* Check for $ at end of line, or $ followed by white space */
+   /* FIXME: Shouldn't a single '$' be an error? */
    if( !*s || strchr(" \t", *s) != NIL(char)) {
       *ps = s;
       DB_RETURN( DmStrDup("") );
@@ -652,7 +657,7 @@
    else
       edelim = '}';
 
-   start = s;           /* build up macro name, find its end*/
+   start = s;           /* build up macro name, find its end */
    while( !done ) {
       switch( *s ) {
          case '(':				/* open macro brace */
@@ -667,12 +672,26 @@
             if( lev == 1 && !fflag && doexpand ) {
                done = TRUE;
                mflag = 1;
-            }
+            } else                              /* must be $: */
+	      done = !lev;
             break;
 
+	 case '\n':                             /* Not possible because of the
+                                                 * following case. */
+	    Fatal( "DEBUG: No standalone '\n' [%s].\n", start );
+	    break;
+
+	 case '\\':                             /* Transform \<nl> -> ' '. */
+            if( s[1] != '\n' ) {
+	      done = !lev;
+	      break;
+            } else {
+	      s[1] = ' ';
+	      strcpy( s, s+1 );
+	    }
+	    /*FALLTHRU*/
 	 case ' ':
 	 case '\t':
-	 case '\n':
 	    if ( lev == 1 ) fflag = 1;
 	    break;
             
@@ -682,7 +701,8 @@
 	    if( lev ) {
 	       bflag = 0;
 	       s     = start;
-	    }
+	    } else
+	      Fatal( "DEBUG: This cannot occur! [%s].\n", start ); 
 	    break;
          
          case ')':				/* close macro brace */
@@ -690,7 +710,7 @@
 	    if( *s == edelim && lev ) --lev;
 	    /*FALLTHRU*/
 
-         default:
+         default:				/* Done when lev == 0 */
 	    done = !lev;
       }
       s++;
@@ -703,6 +723,7 @@
    else
       macro_name = DmSubStr( start, s );
 
+   /* If we don't have to expand the macro we're done. */
    if (!doexpand) {
       *ps = s;
       DB_RETURN(macro_name);
@@ -760,6 +781,18 @@
       char *pat2;
       char *p;
 
+      /* We are inside of a macro expansion. The "build up macro name,
+       * find its while loop above should have caught all \<nl> and
+       * converted them to a real space. Let's verify this. */
+      for( p=s; *p && *p != edelim && *p; p++ ) {
+	if( p[0] == '\\' && p[1] == '\n' ) {
+	  p[1] = ' ';
+	  strcpy( p, p+1 );
+	}
+      }
+      if( !*p )
+	 Fatal( "Syntax error in macro modifier pattern [$%s]. The closing bracket [%c] is missing.\n", start, edelim );
+
       /* Yet another brain damaged AUGMAKE kludge.  We should accept the 
        * AUGMAKE bullshit of $(f:pat=sub) form of macro expansion.  In
        * order to do this we will forgo the normal processing if the
@@ -779,7 +812,7 @@
 	 p = _scan_ballanced_parens(s+1, edelim);
 
 	 if ( !*p ) {
-	    Warning( "Incomplete macro expression [%s]", s );
+	    Fatal( "Incomplete macro expression [%s]", s );
 	    p = s+1;
 	 }
 	 pat2 = Expand(tmp = DmSubStr(s,p)); FREE(tmp);
@@ -819,6 +852,26 @@
 	       case 'u':
 	       case 'U': modifier_list |= TOUPPER_FLAG; break;
 
+	       case 'm':
+	       case 'M':
+		  if( modifier_list || ( (*s != edelim) && (*s != ':') ) ) {
+		     Warning( "Map escape modifier must appear alone, ignored");
+		     modifier_list = 0;
+		  }
+		  else {
+		     /* map the escape codes in the separator string first */
+		     for(p=result; (p = strchr(p,ESCAPE_CHAR)) != NIL(char); p++)
+		        Map_esc( p );
+		  }
+		  /* find the end of the macro spec, or the start of a new
+		   * modifier list for further processing of the result */
+
+		  for( ; (*s != edelim) && (*s != ':') && *s; s++ );
+		  if( !*s )
+		     Fatal( "Syntax error in macro. [$%s].\n", start );
+		  if( *s == ':' ) s++;
+		  break;
+
 	       case 'S':
 	       case 's':
 		  if( modifier_list ) {
@@ -827,14 +880,30 @@
 		  }
 		  else {
 		     separator = *s++;
-		     for( p=s; *p != separator && *p != edelim; p++ );
+		     for( p=s; *p != separator && *p; p++ );
 
-		     if( *p == edelim )
-		        Warning("Syntax error in edit pattern, ignored");
+		     if( !*p )
+		        Fatal( "Syntax error in subst macro. [$%s].\n", start );
 		     else {
 			char *t1, *t2;
 			pat1 = DmSubStr( s, p );
-			for(s=p=p+1; (*p != separator) && (*p != edelim); p++ );
+			for(s=p=p+1; (*p != separator) && *p; p++ );
+			/* Before the parsing fixes in iz36027 the :s macro modifier
+			 * erroneously worked with patterns with missing pattern
+			 * separator, i.e. $(XXX:s#pat#sub). This is an error because
+			 * it prohibits the use of following macro modifiers.
+			 * I.e. $(XXX:s#pat#sub:u) falsely replaces with "sub:u".
+			 * ??? Remove this special case once OOo compiles without
+			 * any of this warnings. */
+			if( !*p ) {
+			   if( *(p-1) == edelim ) {
+			      p--;
+			      Warning( "Syntax error in subst macro. Bracket found, but third delimiter [%c] missing in [$%s].\n", separator, start );
+			   }
+			   else {
+			      Fatal( "Syntax error in subst macro. Third delimiter [%c] missing in [$%s].\n", separator, start );
+			   }
+			}
 			pat2 = DmSubStr( s, p );
 			t1 = Expand(pat1); FREE(pat1);
 			t2 = Expand(pat2); FREE(pat2);
@@ -847,7 +916,9 @@
 		  /* find the end of the macro spec, or the start of a new
 		   * modifier list for further processing of the result */
 
-		  for( ; (*s != edelim) && (*s != ':'); s++ );
+		  for( ; (*s != edelim) && (*s != ':') && *s; s++ );
+		  if( !*s )
+		     Fatal( "Syntax error in macro. [$%s].\n", start );
 		  if( *s == ':' ) s++;
 		  break;
 
diff -Nur m148/dmake/extern.h dmake43p01/dmake/extern.h
--- dmake/extern.h	2004-09-08 18:06:06.000000000 +0200
+++ dmake/extern.h	2005-09-26 02:33:12.000000000 +0200
@@ -1,6 +1,6 @@
 /* $RCSfile: extern.h,v $
--- $Revision: 1.8 $
--- last change: $Author: rt $ $Date: 2004/09/08 16:06:06 $
+-- $Revision: 1.8.6.1 $
+-- last change: $Author: vq $ $Date: 2005/09/26 00:33:12 $
 --
 -- SYNOPSIS
 --      External declarations for dmake functions.
@@ -116,4 +116,10 @@
 #  define setvbuf(fp,bp,type,len) setbuf(fp,NULL)
 #endif
 
+/* coreleft is used in some debug macros. Only Turbo C seems to provide
+ * this function. Define it here so that the code compiles. */
+#ifdef DBUG
+#define coreleft() 0L
+#endif
+
 #endif
diff -Nur m148/dmake/function.c dmake43p01/dmake/function.c
--- dmake/function.c	2004-09-08 18:06:20.000000000 +0200
+++ dmake/function.c	2005-10-25 19:19:43.000000000 +0200
@@ -1,6 +1,6 @@
 /* $RCSfile: function.c,v $
--- $Revision: 1.7 $
--- last change: $Author: rt $ $Date: 2004/09/08 16:06:20 $
+-- $Revision: 1.7.6.8 $
+-- last change: $Author: vq $ $Date: 2005/10/25 17:19:43 $
 --
 -- SYNOPSIS
 --      GNU style functions for dmake.
@@ -58,23 +58,48 @@
    char *args;
    char *mod1;
    char *mod2 = NIL(char);
+   int mod_count = 0;
    char *res  = NIL(char);
 
    /* This must succeed since the presence of ' ', \t or \n is what
-    * determines if this function is called in the first place. */
+    * determines if this function is called in the first place.
+    * Unfortunately this prohibits the use of whitespaces in parameters
+    * for macro functions. */
+   /* ??? Using ScanToken to find the next ' ', \t or \n and discarding
+    * the returned, evaluated result is a misuse of that function. */
    FREE(ScanToken(buf, &args, FALSE));
    fname = DmSubStr(buf, args);
+   /* args points to the whitespace after the found token, this leads
+    * to leading whitespaces. */
+   if( *args ) {
+      args = DmStrSpn(args," \t"); /* strip whitespace before */ 
+      if( *args ) {                /* ... and after value */
+	 char *q;
+	 for(q=args+strlen(args)-1; ((*q == ' ')||(*q == '\t')); q--);
+	 *++q = '\0';
+      }
+   }
 
+   /* ??? Some function macros expect comma seperated parameters, but
+    * no decent parser is included. The desirable solution would be
+    * to parse fname for the correct number of parameters in fname
+    * when a function is recognized. We only count the parameters
+    * at the moment. Note "" is a valid parameter. */
    if( (mod1 = strchr(fname,',')) != NIL(char) ){
       *mod1 = '\0';
       mod1++;
+      mod_count++;
 
       if( (mod2 = strchr(mod1,',')) != NIL(char) ){
 	 *mod2 = '\0';
 	 mod2++;
+	 mod_count++;
       }
    }
 
+   /* ??? At the moment only the leading part of fname compared if it
+    * matches a known function macro. For example assignXXX or even
+    * assign,,,, is also erroneously accepted. */ 
    switch( *fname ) {
       case 'a':
 	 if(strncmp(fname,"assign",6) == 0)
@@ -87,7 +112,10 @@
 
       case 'e':
 	 if(strncmp(fname,"eq",2) == 0)
-	    res = _exec_iseq(mod1,mod2,args,TRUE);
+	    if( mod_count == 2 )
+	      res = _exec_iseq(mod1,mod2,args,TRUE);
+	    else
+	      Fatal( "Two comma-seperated arguments expected in [%s].\n", buf );
 	 else if (strncmp(fname,"echo",4) == 0)
 	    res = _exec_echo(args);
          else
@@ -96,16 +124,22 @@
 
       case 'f':
 	 if(strncmp(fname,"foreach",7) == 0)
-  	    res = _exec_foreach(mod1,mod2,args);
-         else
-            res = _exec_call(fname,args);
+	    if( mod_count == 2 )
+	      res = _exec_foreach(mod1,mod2,args);
+	    else
+	      Fatal( "Two comma-seperated arguments expected in [%s].\n", buf );
+	 else
+	    res = _exec_call(fname,args);
 	 break;
 
       case 'm':
 	 if(strncmp(fname,"mktmp",5) == 0)
-            res = _exec_mktmp(mod1,mod2,args);
-         else
-            res = _exec_call(fname,args);
+	    if( mod_count < 3 )
+	      res = _exec_mktmp(mod1,mod2,args);
+	    else
+	      Fatal( "Maximal two comma-seperated arguments expected in [%s].\n", buf );
+	 else
+	    res = _exec_call(fname,args);
 	 break;
 
       case 'n':
@@ -123,9 +157,12 @@
 	 if(strncmp(fname,"!null",5) == 0)
 	    res = _exec_iseq(mod1,NIL(char),args,FALSE);
 	 else if(strncmp(fname,"!eq",3) ==0)
-            res = _exec_iseq(mod1,mod2,args,FALSE);
-         else
-            res = _exec_call(fname,args);
+	    if( mod_count == 2 )
+	      res = _exec_iseq(mod1,mod2,args,FALSE);
+	    else
+	      Fatal( "Two comma-seperated arguments expected in [%s].\n", buf );
+	 else
+	    res = _exec_call(fname,args);
 	 break;
 
       case 'o':
@@ -142,8 +179,12 @@
 	    res = _exec_shell(args,mod1);
 	 else if(strncmp(fname,"strip",5)==0)
 	    res = Tokenize(Expand(args)," ",'t',TRUE);
-	 else if(strncmp(fname,"subst",5)==0)
-	    res = _exec_subst(mod1,mod2,args);
+	 else if(strncmp(fname,"subst",5)==0) {
+	    if( mod_count == 2 )
+	      res = _exec_subst(mod1,mod2,args);
+	    else
+	      Fatal( "Two comma-seperated arguments expected in [%s].\n", buf );
+	 }
          else
             res = _exec_call(fname,args);
 	 break;
@@ -455,6 +496,8 @@
 
    pat = Expand(pat);
    subst = Expand(subst);
+
+   /* This implies FREE(Expand(data)) */
    res = Apply_edit( Expand(data), pat, subst, TRUE, FALSE );
    FREE(pat);
    FREE(subst);
@@ -464,19 +507,24 @@
 
 
 static char *
-_exec_shell( data, mod1 )
+_exec_shell( data, mod1 )/*
+===========================
+   Capture the stdout of an execuded command. */
 char *data;
 char *mod1;
 {
    extern char *tempnam();
-   static int  nestlevel = 0;
-   static int  org_out;
-   static int  bsize;
-   static char *buffer;
-   static char *tmpnm;
-   static FILE *tmp;
+   int  bsize;
+   char *buffer;
+   char *tmpnm;
+   FILE *old_stdout_redir = stdout_redir;
+#if !defined(USE_SANE_EXEC_SHELL_REDIR)
+   int old_stdout;
+#endif
 
    int wait     = Wait_for_completion;
+   int old_is_exec_shell = Is_exec_shell;
+   CELLPTR old_Shell_exec_target = Shell_exec_target;
    uint16 vflag = Verbose;
    int tflag    = Trace;
    char *res    = NIL(char);
@@ -507,60 +555,75 @@
    cell.ce_flag   = F_TARGET|F_RULES;
    cell.ce_attr   = A_PHONY|A_SILENT;
 
-   if( nestlevel == 0 ) {
-      org_out = dup(1);
-
-      if( (tmp = Get_temp(&tmpnm, "", "w+")) == NIL(FILE) )
-	 Open_temp_error( tmpnm, cname.ht_name );
-
-      close(1);
-      dup( fileno(tmp) );
-
-      bsize  = (Buffer_size < BUFSIZ)?BUFSIZ:Buffer_size;
-      buffer = MALLOC(bsize,char);
-   }
-
+   /* Print the shell escape command. */
+   if( !(rcp.st_attr & A_SILENT) ) {
+      printf( "%s: Executing shell macro: %s\n", Pname, data );
+      fflush(stdout);
+   }
+
+   if( (stdout_redir = Get_temp(&tmpnm, "", "w+")) == NIL(FILE) )
+      Open_temp_error( tmpnm, cname.ht_name );
+
+   bsize  = (Buffer_size < BUFSIZ)?BUFSIZ:Buffer_size;
+   buffer = MALLOC(bsize,char);
+
+   /* As this function redirects the output of stdout we have to make sure
+    * that only this single command is executed and all previous recipe lines
+    * that belong to the same target have finished. With Shell_exec_target and
+    * Wait_for_completion set this is realized. Current_target being NIL(CELL)
+    * outside of recipe lines makes sure that no waiting for previous recipe
+    * lines has to be done. */
    Wait_for_completion = TRUE;
+   Is_exec_shell = TRUE;
+   Shell_exec_target = Current_target;
    Verbose &= V_LEAVE_TMP;
    Trace   = FALSE;
-   nestlevel++;
+
+   /* Only unix type builds define the redirection of stdout in the forked
+    * child process. Other OSs have to do it here, in the parent process.
+    * Note! This is not save for parallel builds, see #iz53148#, but parallel
+    * builds are not supported for non-unix like builds anyway. */
+#if !defined(USE_SANE_EXEC_SHELL_REDIR)
+   old_stdout = dup(1);
+   close(1);
+   dup( fileno(stdout_redir) );
+#endif
    Exec_commands( &cell );
+#if !defined(USE_SANE_EXEC_SHELL_REDIR)
+   close(1);
+   dup(old_stdout);
+#endif
    Unlink_temp_files( &cell );
-   nestlevel--;
+
    Trace   = tflag;
    Verbose = vflag;
    Wait_for_completion = wait;
+   Is_exec_shell = old_is_exec_shell;
+   Shell_exec_target = old_Shell_exec_target;
 
    /* Now we have to read the temporary file, get the tokens and return them
     * as a string. */
-   rewind(tmp);
-   while( fgets(buffer, bsize, tmp) ) {
+   rewind(stdout_redir);
+   while( fgets(buffer, bsize, stdout_redir) ) {
       char *p = strchr(buffer, '\n');
 
       if( p == NIL(char) )
 	 res = DmStrJoin(res,buffer,-1,TRUE);
       else {
 	 *p = '\0';
+	 /* You might encounter '\r\n' on windows, handle it. */
+	 if( p > buffer && *(p-1) == '\r')
+	    *(p-1) = '\0';
          res = DmStrApp(res,buffer);
       }
    }
 
-   fclose(tmp);
-   if( nestlevel == 0 ) {
-      close(1);
-      dup(org_out);
-      close(org_out);
-      Remove_file(tmpnm);
-      FREE(tmpnm);
-      FREE(buffer);
-   }
-   else {
-      if( (tmp = fopen(tmpnm, "w+")) == NIL(FILE) )
-	 Open_temp_error( tmpnm, cname.ht_name );
+   fclose(stdout_redir);
+   Remove_file(tmpnm);
+   FREE(tmpnm);
+   FREE(buffer);
 
-      close(1);
-      dup( fileno(tmp) );
-   }
+   stdout_redir = old_stdout_redir;
 
    if ( mod1 ) {
       mod1 = Expand(res);
diff -Nur m148/dmake/getinp.c dmake43p01/dmake/getinp.c
--- dmake/getinp.c	2004-04-21 16:10:17.000000000 +0200
+++ dmake/getinp.c	2005-10-11 19:39:38.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: getinp.c,v 1.5 2004/04/21 14:10:17 svesik Exp $
+/* RCS  $Id: getinp.c,v 1.5.18.9 2005/10/11 17:39:38 vq Exp $
 --
 -- SYNOPSIS
 --      Handle reading of input.
@@ -106,6 +106,7 @@
 do_again:
    do {
       p = buf+pos;
+      /* fgets() reads at most one less than Buffer_size-pos characters. */
       if(feof( fil ) || (fgets( p, Buffer_size-pos, fil ) == NIL(char)))
 	 DB_RETURN( TRUE );
 
@@ -116,72 +117,86 @@
 
       Line_number++;
 
-      /* ignore input if ignore flag set and line ends in a continuation
-	 character. */
+      /* Set q to the last char in p before the \n\0. */
       q = p+strlen(p)-2;
-      if( q<p ) q=p;
+      if( q >= p ) {	/* Only check for special cases if p points
+			 * to a non-empty line. */
 
-      /* ignore each RETURN at the end of a line before any further
-       * processing */
-      if( q[0] == '\r' && q[1] == '\n' ) {
-	 q[0] = '\n';
-	 q[1] = '\0';
-	 q--;
-      }
-      /* you also have to deal with END_OF_FILE chars to process raw
-       * DOS-Files. Normally they are the last chars in file, but after
-       * working on these file with vi, there is an additional NEWLINE
-       * after the last END_OF_FILE. So if the second last char in the
-       * actual line is END_OF_FILE, you can skip the last char. Then
-       * you can search the line back until you find no more END_OF_FILE
-       * and nuke each you found by string termination. */
-      if( q[0] == '\032' )
-	 q--;
-      while( q[1] == '\032' ) {
-	 q[1] = '\0';
-	 q--;
-      }
+	 /* ignore each RETURN at the end of a line before any further
+	  * processing */
+	 if( q[0] == '\r' && q[1] == '\n' ) {
+	    q[0] = '\n';
+	    q[1] = '\0';
+	    q--;
+	 }
+	 /* you also have to deal with END_OF_FILE chars to process raw
+	  * DOS-Files. Normally they are the last chars in file, but after
+	  * working on these file with vi, there is an additional NEWLINE
+	  * after the last END_OF_FILE. So if the second last char in the
+	  * actual line is END_OF_FILE, you can skip the last char. Then
+	  * you can search the line back until you find no more END_OF_FILE
+	  * and nuke each you found by string termination. */
+	 if( q[0] == '\032' )
+	    q--;
+	 while( q[1] == '\032' ) {
+	    q[1] = '\0';
+	    q--;
+	 }
 
-      if( ignore ) {
-	 if( q[0] != CONTINUATION_CHAR || q[1] != '\n' )  ignore = FALSE;
-	 *p = '\0';
-	 continue;
-      }
+	 /* ignore input if ignore flag set and line ends in a continuation
+	    character. */
+
+	 if( ignore ) {
+	    if( q[0] != CONTINUATION_CHAR || q[1] != '\n' )  ignore = FALSE;
+	    *p = '\0';
+	    continue;
+	 }
 
-      c = Do_comment(p, &q, Group || (*buf == '\t') || (Notabs && *buf ==' '));
+	 /* If a comment is found the line does not end in \n anymore. */
+	 c = Do_comment(p, &q, Group || (*buf == '\t') || (Notabs && *buf ==' '));
 
-      /* Does the end of the line end in a continuation sequence? */
+	 /* Does the end of the line end in a continuation sequence? */
 
-      if( (q[0] == CONTINUATION_CHAR) && (q[1] == '\n')) {
+	 if( (q[0] == CONTINUATION_CHAR) && (q[1] == '\n')) {
 	 /* If the continuation was at the end of a comment then ignore the
 	  * next input line, (or lines until we get one ending in just <nl>)
 	  * else it's a continuation, so build the input line from several
 	  * text lines on input.  The maximum size of this is governened by
 	  * Buffer_size */
-	 if( q != p && q[-1] == CONTINUATION_CHAR ) {
-	    strcpy( q, q+1 );
-	    q--;
+	    if( q != p && q[-1] == CONTINUATION_CHAR ) {
+	       strcpy( q, q+1 );
+	       q--;
+	       cont = FALSE;
+	    }
+	    else if( c != NIL(char) )
+	       ignore = TRUE;
+	    else
+	       cont   = TRUE;	/* Keep the \<nl>. */
+	 }
+	 else {
 	    cont = FALSE;
 	 }
-	 else if( c != NIL(char) )
-	    ignore = TRUE;
-	 else
-	    cont   = TRUE;
+
+	 q = ( c == NIL(char) ) ? q+2 : c;
       }
-      else {
+      else {  /* empty line or "" */
 	 cont = FALSE;
+	 ignore = FALSE;
+	 q = p+strlen(p);  /* strlen(p) is 1 or 0 */
       }
 
-      q    = ( c == NIL(char) ) ? q+2 : c;
       pos += q-p;
    }
-   while( (cont || !*buf) && (pos <= Buffer_size) );
+   while( (cont || !*buf) && (pos < Buffer_size-1) );
+
+   if( pos >= Buffer_size-1 )
+      Fatal( "Input line too long, increase MAXLINELENGTH" );
 
-   if( buf[ pos-1 ] == '\n' )
-      buf[ --pos ] = '\0';
-   else
-      if( pos == Buffer_size-1 )
-	 Fatal( "Input line too long, increase MAXLINELENGTH" );
+   /* Lines that had comments don't contain \n anymore. */
+   /* ??? Continued lines that are followed by an empty or comment only
+    * line will end in \<nl>. */
+   if( (q > p) && (buf[ pos-1 ] == '\n') )
+      buf[ --pos ] = '\0';   /* Remove the final \n. */
 
    /* STUPID AUGMAKE uses "include" at the start of a line as
     * a signal to include a new file, so let's look for it.
@@ -274,6 +289,7 @@
 	    if( pend ) (*pend)--;    /* shift tail pointer left */
 	 }
 	 else {
+	    /* Check/execute if shebang command is present. */
 	    if(    !No_exec
 		&& c == str
 	        && c[1] == '!'
@@ -287,6 +303,7 @@
 	       Swap_on_exec = TRUE;
 	       Wait_for_completion = TRUE;
 	       Do_cmnd(cmnd, FALSE, TRUE, Current_target, FALSE, FALSE, TRUE);
+	       Wait_for_completion = FALSE;
 	    }
 
 	    *c = '\0';               /* a true comment so break */
diff -Nur m148/dmake/imacs.c dmake43p01/dmake/imacs.c
--- dmake/imacs.c	2004-10-22 10:04:58.000000000 +0200
+++ dmake/imacs.c	2004-11-20 02:05:55.000000000 +0100
@@ -1,4 +1,4 @@
-/* RCS  $Id: imacs.c,v 1.2 2004/10/22 08:04:58 rt Exp $
+/* RCS  $Id: imacs.c,v 1.2.2.1 2004/11/20 01:05:55 vq Exp $
 --
 -- SYNOPSIS
 --      Define default internal macros.
@@ -108,7 +108,12 @@
    _set_string_var("TMD",  "",       M_DEFAULT|M_NOEXPORT, &Tmd);
 
    Def_macro("NULL", "", M_PRECIOUS|M_NOEXPORT|M_FLAG);
- 
+
+   /* Initialize a macro that contains a space. As leading and trailing
+    * spaces are stripped by Def_macro a little cheating is necessary. */
+   _set_string_var("SPACECHAR", "x", M_PRECIOUS|M_NOEXPORT|M_FLAG, &Spacechar );
+   Spacechar[0] = ' ';
+
    _set_int_var( "MAXLINELENGTH", "0", M_DEFAULT|M_NOEXPORT, &Buffer_size );
    _set_int_var( "PREP",          "0", M_DEFAULT, &Prep );
    (void) Def_macro("MAXLINELENGTH", "1024", M_FLAG | M_DEFAULT);
diff -Nur m148/dmake/infer.c dmake43p01/dmake/infer.c
--- dmake/infer.c	2004-09-08 18:06:32.000000000 +0200
+++ dmake/infer.c	2005-05-05 23:27:20.000000000 +0200
@@ -1,6 +1,6 @@
 /* $RCSfile: infer.c,v $
--- $Revision: 1.4 $
--- last change: $Author: rt $ $Date: 2004/09/08 16:06:32 $
+-- $Revision: 1.4.6.3 $
+-- last change: $Author: vq $ $Date: 2005/05/05 21:27:20 $
 --
 -- SYNOPSIS
 --      Infer how to make a target.
@@ -166,9 +166,12 @@
 	 }
       }
 
-      /* MATCH now points at the derived recipe.  We must now take cp, and
-       * construct the correct graph so that the make may proceed. */
+      /* MATCH now points at the derived prerequisite chain(s).  We must now
+       * take cp, and construct the correct graph so that the make may
+       * proceed.  */
 
+      /* The folowing shows only the first element, i.e. the last matching
+       * recipe that was found.  */ 
       if( Verbose & V_INFER ) {
 	 char *tmp = dump_inf_chain(match, TRUE, FALSE);
 	 printf("%s:  Inferring prerequistes and recipes using:\n%s:  ... %s\n",
@@ -409,7 +412,25 @@
 	    thp = Get_name( iprqh.ht_name, Defs, FALSE );
 	    if(thp != NIL(HASH)) {
 	       iprq = *thp->CP_OWNR;
-	       ircp = iprq.ce_recipe;
+	       /* Check if a recipe for this target exists. Targets with F_MULTI
+		* set need each cell checked for existing recipes.
+		*/
+	       if( iprq.ce_flag & F_MULTI ) {
+		  /* Walk through all cells of this target. */
+		  LINKPTR mtcp = iprq.ce_prq;
+		  ircp = NIL(STRING);
+		  for( ; mtcp != NIL(LINK); mtcp = mtcp->cl_next ) {
+		     /* If a recipe is found stop searching and set ircp to that result.
+		      * ircp is not used but only checked if it is set.
+		      */
+		     if( mtcp->cl_prq->ce_recipe != NIL(STRING) ) {
+			ircp = mtcp->cl_prq->ce_recipe;
+			break;
+		     }
+		  }
+	       }
+	       else
+		  ircp = iprq.ce_recipe;
 	    }
 	    else
 	       ircp = NIL(STRING);
@@ -718,7 +739,10 @@
 
 static char *
 dump_inf_chain( ip, flag, print )/*
-====================================*/
+===================================
+Return string with infered prerequisites.
+flag == TRUE adds the top of the chain.
+print == TRUE prints to screen with number "print" and returns NULL. */
 ICELLPTR ip;
 int      flag;
 int	 print;
diff -Nur m148/dmake/mac/ruletab.c dmake43p01/dmake/mac/ruletab.c
--- dmake/mac/ruletab.c	2000-09-22 17:33:27.000000000 +0200
+++ dmake/mac/ruletab.c	2005-04-09 23:22:30.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: ruletab.c,v 1.1.1.1 2000/09/22 15:33:27 hr Exp $
+/* RCS  $Id: ruletab.c,v 1.1.1.1.132.1 2005/04/09 21:22:30 vq Exp $
 --
 -- SYNOPSIS
 --      Default initial configuration of dmake.
@@ -33,7 +33,7 @@
     "MAXLINELENGTH := 4094",
     "MAXPROCESSLIMIT := 1",
     "MAXPROCESS := 1",
-	".IMPORT .IGNORE: DMAKEROOT SOLARVER UPD INPATH OS UPDMINOREXT",
+    ".IMPORT .IGNORE: DMAKEROOT",
     ".MAKEFILES : makefile.mk Makefile makefile",
     ".SOURCE    : .NULL",
 #include "startup.h"
diff -Nur m148/dmake/make.c dmake43p01/dmake/make.c
--- dmake/make.c	2004-09-08 18:06:46.000000000 +0200
+++ dmake/make.c	2006-01-27 02:16:41.000000000 +0100
@@ -1,6 +1,6 @@
 /* $RCSfile: make.c,v $
--- $Revision: 1.5 $
--- last change: $Author: rt $ $Date: 2004/09/08 16:06:46 $
+-- $Revision: 1.5.6.8 $
+-- last change: $Author: vq $ $Date: 2006/01/27 01:16:41 $
 --
 -- SYNOPSIS
 --      Perform the update of all outdated targets.
@@ -281,6 +281,11 @@
    }
 
    DB_PRINT( "mem", ("%s:-A mem %ld", cp->CE_NAME, (long) coreleft()) );
+
+   /* FIXME: F_MULTI targets don't have cp->ce_recipe set but the recipes
+    * are known nevertheless. It is not necessary to infer them.
+    * If (cp->ce_flag & F_MULTI) is true the recipes of the corresponding
+    * subtargets can be used. */
    if( cp->ce_recipe == NIL(STRING) ) {
       char *dir = cp->ce_dir;
       
@@ -318,6 +323,7 @@
 	 /* Inherit the stat info from the parent. */
 	 cp->ce_time  = cp->ce_parent->ce_time;
 	 cp->ce_flag |= F_STAT;
+	 /* Propagate the A_PRECIOUS attribute from the parent. */
 	 cp->ce_attr |= cp->ce_parent->ce_attr & A_PRECIOUS;
       }
       else {
@@ -403,6 +409,7 @@
       }
    }
 
+   /* First round, will be repeated a second time below. */
    for( prev=NULL,dp=cp->ce_prq; dp != NIL(LINK); prev=dp, dp=next ) {
       int seq;
       int nesting_count;
@@ -453,6 +460,7 @@
 	 if( strcmp(name,cp->CE_NAME) == 0 )
 	    Fatal("Detected circular dynamic dependency; generated '%s'",name);
 
+	 /* Call helper for dynamic prerequisite expansion. */
 	 dp = _expand_dynamic_prq( cp->ce_prq, dp, name );
 	 FREE( name );
 
@@ -469,9 +477,11 @@
 	 FREE(dp);
 	 if ( prev == NIL(LINK) ) {
 	    cp->ce_prq = next;
+	    dp = NULL;		/* dp will be the new value of prev. */
 	 }
 	 else {
 	    prev->cl_next = next;
+	    dp = prev;
 	 }
 	 continue;
       }
@@ -516,6 +526,9 @@
    for( dp = cp->ce_prq; dp != NIL(LINK); dp = dp->cl_next ) {
       int  tgflg;
       tcp  = dp->cl_prq;
+      if( tcp == NIL(CELL) )
+	 Fatal("Internal Error: Found prerequisite list cell without prerequisite!");
+
       name = tcp->ce_fname;
 
       /* make certain that all prerequisites are made prior to advancing. */
@@ -553,8 +566,11 @@
    DB_PRINT( "make", ("I make '%s' if %ld > %ld", cp->CE_NAME, otime,
 	      cp->ce_time) );
 
-   if( Verbose & V_MAKE && !(cp->ce_flag & F_MULTI) ) {
+   if( Verbose & V_MAKE ) {
       printf( "%s:  >>>> Making ", Pname );
+      /* Also print the F_MULTI master target. */
+      if( cp->ce_flag & F_MULTI )
+	 printf( "(::-\"master\" target) " );
       if( cp->ce_count != 0 )
 	 printf( "[%s::{%d}]\n", cp->CE_NAME, cp->ce_count );
       else
@@ -616,6 +632,7 @@
 	 Update_time_stamp( cp );
       }
       else if( cp->ce_recipe != NIL(STRING) ) {
+	 /* If a recipe is found use it. Note this misses F_MULTI targets. */
 	 if( !(cp->ce_flag & F_SINGLE) )
 	       rval = Exec_commands( cp );
 	 else {
@@ -623,19 +640,27 @@
 
 	    _drop_mac( m_q );
 
+	    /* Build all out of date prerequisites. */
 	    if( outall && *outall ) {
+	       /* Wait for each prerequisite to finish, save the status
+		* of Wait_for_completion. */
+	       int wait_for_completion_status = Wait_for_completion;
+	       Wait_for_completion = TRUE;
+
 	       SET_TOKEN( &tk, outall );
 
+	       /* No need to update the target timestamp until all
+		* prerequisites are done. */
 	       Doing_bang = TRUE;
 	       name = Get_token( &tk, "", FALSE );
 	       do {
 		  m_q->ht_value = name;
 
-		  Wait_for_completion = TRUE;	/* Reset in Exec_commands */
 		  rval = Exec_commands( cp );
 		  Unlink_temp_files(cp);
 	       }
 	       while( *(name = Get_token( &tk, "", FALSE )) != '\0' );
+	       Wait_for_completion = wait_for_completion_status;
 	       Doing_bang = FALSE;
 	    }
 
@@ -644,10 +669,17 @@
 	 }
       }
       else if( !(cp->ce_flag & F_RULES) && !(cp->ce_flag & F_STAT) &&
-	       (!(cp->ce_attr & A_ROOT) || !(cp->ce_flag & F_EXPLICIT)) )
+	       (!(cp->ce_attr & A_ROOT) || !(cp->ce_flag & F_EXPLICIT)) &&
+	       !(cp->ce_count) )
+	 /* F_MULTI subtargets should evaluate its parents F_RULES value
+	  * but _make_multi always sets the F_RULES value of the master
+	  * target. Assume F_RULES is set for subtargets. This might not
+	  * be true if there are no prerequisites and no recipes in any
+	  * of the subtargets. (FIXME) */
 	 Fatal( "Don't know how to make `%s'",cp->CE_NAME );
       else {
          /* Empty recipe, set the flag as MADE and update the time stamp */
+         /* This might be a the master cell of a F_MULTI target. */
 	 Update_time_stamp( cp );
       }
    }
@@ -793,19 +825,25 @@
 
 
 static LINKPTR
-_expand_dynamic_prq( head, lp, name )
+_expand_dynamic_prq( head, lp, name )/*
+=======================================
+   The string name can contain one or more target names. Check if these are
+   already a prerequisite for the current target. If not add them to the list
+   of prerequisites. If no prerequisites were added set lp->cl_prq to NULL. */
 LINKPTR head;
 LINKPTR lp;
 char *name;
 {
    CELLPTR cur = lp->cl_prq;
 
+   /* If condition is true, no space is found. */
    if ( strchr(name, ' ') == NIL(char) ) {
       CELLPTR prq = Def_cell(name);
       LINKPTR tmp;
 
       for(tmp=head;tmp != NIL(LINK) && tmp->cl_prq != prq;tmp=tmp->cl_next);
 
+      /* If tmp is NULL then the prerequisite is new and is added to the list. */
       if ( !tmp )
 	 lp->cl_prq = prq;
    }
@@ -816,14 +854,18 @@
       char  *p;
       int   first=TRUE;
 
+      /* Handle more than one prerequisite. */
       SET_TOKEN(&token, name);
       while (*(p=Get_token(&token, "", FALSE)) != '\0') {
 	 CELLPTR prq = Def_cell(p);
 	 LINKPTR tmp;
 
 	 for(tmp=head;tmp != NIL(LINK) && tmp->cl_prq != prq;tmp=tmp->cl_next);
+	 
+	 /* If tmp is not NULL the prerequisite already exists. */
 	 if ( tmp ) continue;
 
+	 /* Add list elements when more then one new prerequisite is found. */
 	 if ( first ) {
 	    first = FALSE;
 	 }
@@ -839,6 +881,7 @@
       CLEAR_TOKEN( &token );
    }
 
+   /* If the condition is true no new prerequisits were found. */
    if ( lp->cl_prq == cur ) {
       lp->cl_prq = NIL(CELL);
       lp->cl_flag = 0;
@@ -961,6 +1004,9 @@
 
    DB_ENTER( "Exec_commands" );
 
+   if( cp->ce_recipe == NIL(STRING) )
+      Fatal("Internal Error: No recipe found!");
+
    attr  = Glob_attr | cp->ce_attr;
    trace = Trace || !(attr & A_SILENT);
    group = cp->ce_flag & F_GROUP;
@@ -1066,7 +1112,9 @@
 
       /* We force execution of the recipe if we are tracing and the .EXECUTE
        * attribute was given or if the it is not a group recipe and the
-       * recipe line contains the string $(MAKE). */
+       * recipe line contains the string $(MAKE). Wait_for_completion might
+       * be changed gobaly but this is without consequences as we wait for
+       * every recipe with .EXECUTE and don't start anything else. */
       if( Trace
        && ((l_attr & A_EXECUTE)||(!group && DmStrStr(rp->st_string,"$(MAKE)")))
       ) {
@@ -1108,7 +1156,6 @@
 		     TRUE, TRUE);
    }
 
-   Wait_for_completion = FALSE;
    _recipes[ RP_RECIPE ] = orp;
    cp->ce_attr &= ~A_ERROR;
    DB_RETURN( rval );
@@ -1119,8 +1166,11 @@
 Print_cmnd( cmnd, echo, map )/*
 ================================
    This routine is called to print out the command to stdout.  If echo is
-   false the printing to stdout is supressed, but the new lines in the command
-   are still deleted. */
+   false the printing to stdout is supressed.
+   The routine is also used to remove the line continuation sequence
+   \<nl> from the command string and convert escape sequences if the
+   map flag is set.
+   The changed string is used later to actually to execute the command. */
 char *cmnd;
 int  echo;
 int  map;
@@ -1141,11 +1191,14 @@
    tmp[2] = '\0';
 
    for( p=cmnd; *(n = DmStrPbrk(p,tmp)) != '\0'; )
+      /* Remove the \<nl> sequences. */
       if(*n == CONTINUATION_CHAR && n[1] == '\n') {
 	 DB_PRINT( "make", ("fixing [%s]", p) );
 	 strcpy( n, n+2 );
 	 p = n;
       }
+      /* Look for an escape sequence and replace it by it's corresponding
+       * character value. */
       else {
          if( *n == ESCAPE_CHAR && map ) Map_esc( n );
 	 p = n+1;
@@ -1259,45 +1312,97 @@
 static void
 _set_tmd()/*
 ============
-   Set the TWD Macro */
+   Set the TMD Macro */
 {
-   TKSTR md, pd;
    char  *m, *p;
+   char  *mend, *pend;
+   char  *mtd, *ptd;
+   int   mleadslash, pleadslash;
    char  *tmd;
-   int   is_sep;
    int   first = 1;
 
-   SET_TOKEN( &md, Makedir );
-   SET_TOKEN( &pd, Pwd );
+   /* Don't use Get_token because this fails on paths that contain spaces. */
+   m = DmStrSpn(Makedir, DirBrkStr);
+   mleadslash = m - Makedir;
+   p = DmStrSpn(Pwd, DirBrkStr);
+   pleadslash = p - Pwd;
+
+   /* leading slashes can only mean POSIX paths or Windows resources (two)
+    * slashes. In any case if the number of slashes are not equal there
+    * can be no relative path from one two the other. Use the Makedir path. */
+   if(mleadslash != pleadslash) {
+      tmd = Makedir;
+      goto tmd_end;
+   }
 
-   m = Get_token( &md, DirBrkStr, FALSE );
-   (void) Get_token( &pd, DirBrkStr, FALSE );
-   is_sep = (strchr(DirBrkStr, *m) != NIL(char));
    tmd = DmStrDup( "" );
 
+   /* If Makedir and Pwd are identical skip to the end. */
+   for(mend=m, pend=p; *mend && *pend && *mend==*pend; mend++, pend++)
+      ;
+   if( ( ! *mend ) && ( ! *pend ) )
+      goto tmd_end;
+
    do {
-      m = Get_token( &md, DirBrkStr, FALSE );
-      p = Get_token( &pd, DirBrkStr, FALSE );
 
-      if( !is_sep && strcmp(m, p) ) {	/* they differ */
+      /* get the next top directory name */
+      mend = DmStrPbrk( m, DirBrkStr );
+      /* For DOSish filenames the first part might be a drive letter */
+#if !defined(NO_DRIVE_LETTERS)
+      if( first && *mend == ':' )
+	 mend++;
+#endif
+
+      mtd = DmSubStr( m, mend ); /* Free later */
+      /* {m|p}end either points to a DirBrkStr member or the end of string. */
+      if(*mend) mend++;
+      m = mend;
+
+      pend = DmStrPbrk( p, DirBrkStr );
+#if !defined(NO_DRIVE_LETTERS)
+      if( first && *pend == ':' )
+	 pend++;
+#endif
+
+      ptd = DmSubStr( p, pend ); /* Free later */
+      if(*pend) pend++;
+      p = pend;
+
+      if( strcmp(mtd, ptd) ) {	/* they differ */
 	 char *tmp = 0;
+
 	 if( first ) {		/* They differ in the first component	*/
+	    FREE( tmd );
+	    FREE( mtd );
+	    FREE( ptd );
 	    tmd = Makedir;	/* In this case use the full path	*/
 	    break;
 	 }
 
-	 if( *p ) tmp = Build_path( "..", tmd );
-	 if( *m ) tmp = Build_path( tmd, m );
-	 FREE( tmd );
-	 tmd = DmStrDup( tmp );
+	 if( *ptd ) {
+	    /* Build_path puts a DirSepStr behind the first parameter if
+	     * its length is greater null, even if the second parameter
+	     * is empty. */
+	    if(*tmd)
+	       tmp = Build_path( "..", tmd );
+	    else
+	       tmp = "..";
+	    FREE( tmd );
+	    tmd = DmStrDup( tmp );
+	 }
+	 if( *mtd ) {
+	    tmp = Build_path( tmd, mtd );
+	    FREE( tmd );
+	    tmd = DmStrDup( tmp );
+	 }
       }
 
-      is_sep = 1-is_sep;
+      FREE( mtd );
+      FREE( ptd );
       first  = 0;
    } while (*m || *p);
 
-   CLEAR_TOKEN( &md );
-   CLEAR_TOKEN( &pd );
+tmd_end:
 
    Def_macro( "TMD", tmd, M_MULTI | M_EXPANDED );
    if( tmd != Makedir ) FREE( tmd );
diff -Nur m148/dmake/Makefile.am dmake43p01/dmake/Makefile.am
--- dmake/Makefile.am	2005-09-08 19:59:52.000000000 +0200
+++ dmake/Makefile.am	2005-09-26 02:33:11.000000000 +0200
@@ -4,9 +4,9 @@
 #
 #   $RCSfile: Makefile.am,v $
 #
-#   $Revision: 1.9 $
+#   $Revision: 1.8.20.4 $
 #
-#   last change: $Author: rt $ $Date: 2005/09/08 17:59:52 $
+#   last change: $Author: vq $ $Date: 2005/09/26 00:33:11 $
 #
 #   The Contents of this file are made available subject to
 #   the terms of GNU Lesser General Public License Version 2.1.
@@ -43,15 +43,19 @@
 	infer.c make.c stat.c expand.c dmstring.c hash.c dag.c dmake.c\
 	path.c imacs.c sysintf.c parse.c getinp.c quit.c state.c\
 	dmdump.c macparse.c rulparse.c percent.c function.c
+if DBUG
+dmake_SOURCES += dbug/dbug/dbug.c
+endif
 
 #dmake_LDADD   = unix/libunix.a
 #dmake_LDADD   = win95/libwin95.a msdos/libmsdos.a win95/microsft/libmsft.a
-dmake_LDADD   = $(OS_LIBRARY)
+dmake_LDADD = @OS_LIBRARY@
+dmake_DEPENDENCIES = @OS_LIBRARY@
 
-DIST_SUBDIRS = unix startup win95 msdos
-SUBDIRS = $(OS_SUBDIRS)
+DIST_SUBDIRS = unix startup win95 msdos tests
+SUBDIRS = $(OS_SUBDIRS) tests
 
-EXTRA_DIST = make.c 
+EXTRA_DIST = NEWS ChangeLog
 
 # set the include path found by configure
 INCLUDES = -I$(top_srcdir) -I$(top_builddir) -I$(top_srcdir)/@OS_TYPE@/@OS_VERSION@ -I$(top_srcdir)/@OS_TYPE@ -I$(top_srcdir)/@OS_TYPE@/@OS_VERSION@/gnu 
diff -Nur m148/dmake/Makefile.in dmake43p01/dmake/Makefile.in
--- dmake/Makefile.in	2005-09-08 20:00:08.000000000 +0200
+++ dmake/Makefile.in	2006-01-26 03:54:25.000000000 +0100
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -20,9 +20,9 @@
 #
 #   $RCSfile: Makefile.in,v $
 #
-#   $Revision: 1.12 $
+#   $Revision: 1.11.2.14 $
 #
-#   last change: $Author: rt $ $Date: 2005/09/08 18:00:08 $
+#   last change: $Author: vq $ $Date: 2006/01/26 02:54:25 $
 #
 #   The Contents of this file are made available subject to
 #   the terms of GNU Lesser General Public License Version 2.1.
@@ -49,8 +49,6 @@
 #
 #*************************************************************************
 
-SOURCES = $(dmake_SOURCES)
-
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
 VPATH = @srcdir@
@@ -71,13 +69,16 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 bin_PROGRAMS = dmake$(EXEEXT)
-subdir = .
+@DBUG_TRUE@am__append_1 = dbug/dbug/dbug.c
 DIST_COMMON = $(am__configure_deps) $(srcdir)/Makefile.am \
 	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
-	$(top_srcdir)/configure AUTHORS COPYING ChangeLog INSTALL NEWS \
-	config.guess config.sub depcomp install-sh missing \
-	mkinstalldirs
+	$(srcdir)/dmakeroot.h.in $(top_srcdir)/configure AUTHORS \
+	COPYING ChangeLog INSTALL NEWS config.guess config.sub depcomp \
+	install-sh missing mkinstalldirs
+subdir = .
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.in
@@ -87,20 +88,23 @@
  configure.lineno configure.status.lineno
 mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
 CONFIG_HEADER = config.h
-CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_FILES = dmakeroot.h
 am__installdirs = "$(DESTDIR)$(bindir)"
 binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
 PROGRAMS = $(bin_PROGRAMS)
+am__dmake_SOURCES_DIST = infer.c make.c stat.c expand.c dmstring.c \
+	hash.c dag.c dmake.c path.c imacs.c sysintf.c parse.c getinp.c \
+	quit.c state.c dmdump.c macparse.c rulparse.c percent.c \
+	function.c dbug/dbug/dbug.c
+@DBUG_TRUE@am__objects_1 = dbug.$(OBJEXT)
 am_dmake_OBJECTS = infer.$(OBJEXT) make.$(OBJEXT) stat.$(OBJEXT) \
 	expand.$(OBJEXT) dmstring.$(OBJEXT) hash.$(OBJEXT) \
 	dag.$(OBJEXT) dmake.$(OBJEXT) path.$(OBJEXT) imacs.$(OBJEXT) \
 	sysintf.$(OBJEXT) parse.$(OBJEXT) getinp.$(OBJEXT) \
 	quit.$(OBJEXT) state.$(OBJEXT) dmdump.$(OBJEXT) \
 	macparse.$(OBJEXT) rulparse.$(OBJEXT) percent.$(OBJEXT) \
-	function.$(OBJEXT)
+	function.$(OBJEXT) $(am__objects_1)
 dmake_OBJECTS = $(am_dmake_OBJECTS)
-am__DEPENDENCIES_1 =
-dmake_DEPENDENCIES = $(am__DEPENDENCIES_1)
 DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
 depcomp = $(SHELL) $(top_srcdir)/depcomp
 am__depfiles_maybe = depfiles
@@ -109,7 +113,7 @@
 CCLD = $(CC)
 LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
 SOURCES = $(dmake_SOURCES)
-DIST_SOURCES = $(dmake_SOURCES)
+DIST_SOURCES = $(am__dmake_SOURCES_DIST)
 RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
 	html-recursive info-recursive install-data-recursive \
 	install-exec-recursive install-info-recursive \
@@ -143,8 +147,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -191,7 +198,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -213,18 +224,18 @@
 
 # require "new" automake >= 1.7
 AUTOMAKE_OPTIONS = 1.7 foreign
-dmake_SOURCES = \
-	infer.c make.c stat.c expand.c dmstring.c hash.c dag.c dmake.c\
-	path.c imacs.c sysintf.c parse.c getinp.c quit.c state.c\
-	dmdump.c macparse.c rulparse.c percent.c function.c
-
+dmake_SOURCES = infer.c make.c stat.c expand.c dmstring.c hash.c dag.c \
+	dmake.c path.c imacs.c sysintf.c parse.c getinp.c quit.c \
+	state.c dmdump.c macparse.c rulparse.c percent.c function.c \
+	$(am__append_1)
 
 #dmake_LDADD   = unix/libunix.a
 #dmake_LDADD   = win95/libwin95.a msdos/libmsdos.a win95/microsft/libmsft.a
-dmake_LDADD = $(OS_LIBRARY)
-DIST_SUBDIRS = unix startup win95 msdos
-SUBDIRS = $(OS_SUBDIRS)
-EXTRA_DIST = make.c 
+dmake_LDADD = @OS_LIBRARY@
+dmake_DEPENDENCIES = @OS_LIBRARY@
+DIST_SUBDIRS = unix startup win95 msdos tests
+SUBDIRS = $(OS_SUBDIRS) tests
+EXTRA_DIST = NEWS ChangeLog
 
 # set the include path found by configure
 INCLUDES = -I$(top_srcdir) -I$(top_builddir) -I$(top_srcdir)/@OS_TYPE@/@OS_VERSION@ -I$(top_srcdir)/@OS_TYPE@ -I$(top_srcdir)/@OS_TYPE@/@OS_VERSION@/gnu 
@@ -283,6 +294,8 @@
 
 distclean-hdr:
 	-rm -f config.h stamp-h1
+dmakeroot.h: $(top_builddir)/config.status $(srcdir)/dmakeroot.h.in
+	cd $(top_builddir) && $(SHELL) ./config.status $@
 install-binPROGRAMS: $(bin_PROGRAMS)
 	@$(NORMAL_INSTALL)
 	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
@@ -317,6 +330,7 @@
 	-rm -f *.tab.c
 
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dag.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dbug.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dmake.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dmdump.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dmstring.Po@am__quote@
@@ -350,6 +364,20 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`
+
+dbug.o: dbug/dbug/dbug.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dbug.o -MD -MP -MF "$(DEPDIR)/dbug.Tpo" -c -o dbug.o `test -f 'dbug/dbug/dbug.c' || echo '$(srcdir)/'`dbug/dbug/dbug.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dbug.Tpo" "$(DEPDIR)/dbug.Po"; else rm -f "$(DEPDIR)/dbug.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dbug/dbug/dbug.c' object='dbug.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dbug.o `test -f 'dbug/dbug/dbug.c' || echo '$(srcdir)/'`dbug/dbug/dbug.c
+
+dbug.obj: dbug/dbug/dbug.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dbug.obj -MD -MP -MF "$(DEPDIR)/dbug.Tpo" -c -o dbug.obj `if test -f 'dbug/dbug/dbug.c'; then $(CYGPATH_W) 'dbug/dbug/dbug.c'; else $(CYGPATH_W) '$(srcdir)/dbug/dbug/dbug.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dbug.Tpo" "$(DEPDIR)/dbug.Po"; else rm -f "$(DEPDIR)/dbug.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dbug/dbug/dbug.c' object='dbug.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dbug.obj `if test -f 'dbug/dbug/dbug.c'; then $(CYGPATH_W) 'dbug/dbug/dbug.c'; else $(CYGPATH_W) '$(srcdir)/dbug/dbug/dbug.c'; fi`
 uninstall-info-am:
 
 # This directory's subdirectories are mostly independent; you can cd
@@ -359,7 +387,13 @@
 #     (which will cause the Makefiles to be regenerated when you run `make');
 # (2) otherwise, pass the desired values on the `make' command line.
 $(RECURSIVE_TARGETS):
-	@set fnord $$MAKEFLAGS; amf=$$2; \
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
 	dot_seen=no; \
 	target=`echo $@ | sed s/-recursive//`; \
 	list='$(SUBDIRS)'; for subdir in $$list; do \
@@ -371,7 +405,7 @@
 	    local_target="$$target"; \
 	  fi; \
 	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
-	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	  || eval $$failcom; \
 	done; \
 	if test "$$dot_seen" = "no"; then \
 	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
@@ -379,7 +413,13 @@
 
 mostlyclean-recursive clean-recursive distclean-recursive \
 maintainer-clean-recursive:
-	@set fnord $$MAKEFLAGS; amf=$$2; \
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
 	dot_seen=no; \
 	case "$@" in \
 	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
@@ -400,7 +440,7 @@
 	    local_target="$$target"; \
 	  fi; \
 	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
-	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	  || eval $$failcom; \
 	done && test -z "$$fail"
 tags-recursive:
 	list='$(SUBDIRS)'; for subdir in $$list; do \
@@ -475,6 +515,7 @@
 distdir: $(DISTFILES)
 	$(am__remove_distdir)
 	mkdir $(distdir)
+	$(mkdir_p) $(distdir)/. $(distdir)/startup
 	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
 	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
 	list='$(DISTFILES)'; for file in $$list; do \
diff -Nur m148/dmake/makefile.mk dmake43p01/dmake/makefile.mk
--- dmake/makefile.mk	2004-10-22 10:05:12.000000000 +0200
+++ dmake/makefile.mk	2005-04-08 00:30:57.000000000 +0200
@@ -79,11 +79,11 @@
 
 # Use this for install targets
 .IF $(SHELL) == mpw
-    $(MKCONFIG) : template.mk
+$(MKCONFIG) : template.mk
 	duplicate :$(<:s,/,:,) $@
 .ELSE
-    $(MKCONFIG) : template.mk
-	$(eq,$(SHELL),$(COMSPEC) +copy cp) $< $@
+$(MKCONFIG) : template.mk
+	$(eq,$(SHELL),$(COMSPEC) +copy cp) $< $(eq,$(SHELL),$(COMSPEC) $(@:s,/,\,) $@)
 .ENDIF
 
 # how to make public.h
diff -Nur m148/dmake/man/dmake.nc dmake43p01/dmake/man/dmake.nc
--- dmake/man/dmake.nc	2004-10-22 10:06:14.000000000 +0200
+++ dmake/man/dmake.nc	2005-10-04 06:33:35.000000000 +0200
@@ -61,7 +61,7 @@
 
 
 
-Version 4.3                           UW                                     1
+Version 4.4                           UW                                     1
 
 
 
@@ -127,7 +127,7 @@
 
 
 
-Version 4.3                           UW                                     2
+Version 4.4                           UW                                     2
 
 
 
@@ -193,7 +193,7 @@
 
 
 
-Version 4.3                           UW                                     3
+Version 4.4                           UW                                     3
 
 
 
@@ -260,7 +260,7 @@
 
 
 
-Version 4.3                           UW                                     4
+Version 4.4                           UW                                     4
 
 
 
@@ -327,7 +327,7 @@
 
 
 
-Version 4.3                           UW                                     5
+Version 4.4                           UW                                     5
 
 
 
@@ -345,67 +345,78 @@
                      ROOT)/startup.mk",  so  you can set the environment vari-
                      able DMAKEROOT to the location of your startup directory.
 
+                     If  DMAKEROOT  is  not  changed, for native Windows dmake
+                     versions its value defaults  to  "$(ABSMAKECMD:d)startup"
+                     (see  definition  of  ABSMAKECMD  for details).  For unix
+                     like versions build with the autotools  build  system  it
+                     defaults  to  the  value  of "${prefix}/share/startup" at
+                     build time. The  actual  value,  usually  something  like
+                     /usr/local/share/startup  can be checked with the -V com-
+                     mand line switch.
+
        The above search is disabled by specifying the -r option on the command
        line.  An error is issued if a startup makefile cannot be found and the
-       -r  option  was  not specified.  A user may substitute a custom startup
-       file by defining the MAKESTARTUP environment variable or by  redefining
-       the  MAKESTARTUP  macro  on the command line.  To determine where dmake
+       -r option was not specified.  A user may substitute  a  custom  startup
+       file  by defining the MAKESTARTUP environment variable or by redefining
+       the MAKESTARTUP macro on the command line.  To  determine  where  dmake
        looks for the default startup file, check your environment or issue the
        command "dmake -V".
 
        A similar search is performed to locate a default user makefile when no
        -f command line option is specified.  By default, the prerequisite list
-       of  the special target .MAKEFILES specifies the names of possible make-
-       files and the search order that dmake should use to  determine  if  one
+       of the special target .MAKEFILES specifies the names of possible  make-
+       files  and  the  search order that dmake should use to determine if one
        exists.  A typical definition for this target is:
 
               .MAKEFILES : makefile.mk Makefile makefile
 
-       dmake  will  first look for makefile.mk and then the others.  If a pre-
-       requisite cannot be found dmake will try to make it before going on  to
-       the  next prerequisite.  For example, makefile.mk can be checked out of
+       dmake will first look for makefile.mk and then the others.  If  a  pre-
+       requisite  cannot be found dmake will try to make it before going on to
+       the next prerequisite.  For example, makefile.mk can be checked out  of
        an RCS file if the proper rules for doing so are defined in the startup
        file.
 
        If the first line of the user makefile is of the form:
 
+              #!command command_args
 
-       then  dmake  will expand and run the command prior to reading any addi-
-       tional input.  If the return code of the command  is  zero  then  dmake
-       will  continue on to process the remainder of the user makefile, if the
+       then dmake will expand and run the command prior to reading  any  addi-
+       tional  input.   If  the  return code of the command is zero then dmake
+       will continue on to process the remainder of the user makefile, if  the
        return code is non-zero then dmake will exit.
 
-       dmake builds the internal dependency graph as it parses a  user  speci-
-       fied  makefile.  The graph is rooted at the special target .ROOT. .ROOT
-       is the top level target that dmake builds when it starts to build  tar-
+       dmake  builds  the internal dependency graph as it parses a user speci-
+       fied makefile.  The graph is rooted at the special target .ROOT.  .ROOT
+       is  the top level target that dmake builds when it starts to build tar-
        gets.  All user specified targets (those from the command line or taken
-       as defaults from the makefile) are made prerequisites  of  the  special
-       target  .TARGETS.  dmake by default creates the relationship that .ROOT
-       depends on .TARGETS and as a result everything is made.  This  approach
-       allows  the  user  to  customize,  within their makefile, the order and
-       which, target, is built first.  For example the default makefiles  come
-       with settings for .ROOT that specify:
+       as  defaults  from  the makefile) are made prerequisites of the special
+       target .TARGETS.  dmake by default creates the relationship that  .ROOT
 
-              .ROOT .PHONY .NOSTATE .SEQUENTIAL : .INIT .TARGETS .DONE
 
-       with .INIT and .DONE defined as:
 
-              .INIT .DONE .PHONY:;
+Version 4.4                           UW                                     6
 
 
 
-Version 4.3                           UW                                     6
 
 
+DMAKE(1)                                                              DMAKE(1)
 
 
+       depends  on .TARGETS and as a result everything is made.  This approach
+       allows the user to customize, within  their  makefile,  the  order  and
+       which,  target, is built first.  For example the default makefiles come
+       with settings for .ROOT that specify:
 
-DMAKE(1)                                                              DMAKE(1)
+              .ROOT .PHONY .NOSTATE .SEQUENTIAL : .INIT .TARGETS .DONE
+
+       with .INIT and .DONE defined as:
 
+              .INIT .DONE .PHONY:;
 
-       which  nicely  emulates  the  behaviour  of Sun's make extensions.  The
-       building of .ROOT's prerequisites is always forced  to  be  sequential.
-       However,  this  definition is trivially chaned by supplying the defini-
+       which nicely emulates the behaviour  of  Sun's  make  extensions.   The
+       building  of  .ROOT's  prerequisites is always forced to be sequential.
+       However, this definition is trivially chaned by supplying  the  defini-
        tion:
 
               .ROOT : .TARGETS
@@ -413,11 +424,11 @@
        which skips the preamble and postamble phases of building .TARGETS.
 
 SYNTAX
-       This section is a summary of the syntax of  makefile  statements.   The
+       This  section  is  a summary of the syntax of makefile statements.  The
        description is given in a style similar to BNF, where { } enclose items
-       that may appear zero or more times, and [  ]  enclose  items  that  are
-       optional.   Alternative  productions for a left hand side are indicated
-       by '->', and newlines are significant.  All symbols in  bold  type  are
+       that  may  appear  zero  or  more times, and [ ] enclose items that are
+       optional.  Alternative productions for a left hand side  are  indicated
+       by  '->',  and  newlines are significant.  All symbols in bold type are
        text or names representing text supplied by the user.
 
 
@@ -447,29 +458,29 @@
               Conditional ->  .IF expression
                                  Makefile
                               [ .ELIF expression
-                                 Makefile ]
-                              [ .ELSE
-                                 Makefile ]
-                              .END
 
 
-              expression -> LINE
-                         -> STRING == LINE
-                         -> STRING != LINE
-                         -> STRING <= LINE
-                         -> STRING >= LINE
 
+Version 4.4                           UW                                     7
 
 
-Version 4.3                           UW                                     7
 
 
 
+DMAKE(1)                                                              DMAKE(1)
 
 
-DMAKE(1)                                                              DMAKE(1)
+                                 Makefile ]
+                              [ .ELSE
+                                 Makefile ]
+                              .END
 
 
+              expression -> LINE
+                         -> STRING == LINE
+                         -> STRING != LINE
+                         -> STRING <= LINE
+                         -> STRING >= LINE
                          -> ( expression )
                          -> expression || expression
                          -> expression && expression
@@ -515,20 +526,9 @@
               Attribute-Definition -> attrs : targets
 
 
-              attribute -> .EPILOG
-                        -> .ERRREMOVE
-                        -> .EXECUTE
-                        -> .GROUP
-                        -> .IGNORE
-                        -> .IGNOREGROUP
-                        -> .LIBRARY
-                        -> .MKSARGS
-                        -> .NOINFER
-                        -> .NOSTATE
 
 
-
-Version 4.3                           UW                                     8
+Version 4.4                           UW                                     8
 
 
 
@@ -537,6 +537,16 @@
 DMAKE(1)                                                              DMAKE(1)
 
 
+              attribute -> .EPILOG
+                        -> .ERRREMOVE
+                        -> .EXECUTE
+                        -> .GROUP
+                        -> .IGNORE
+                        -> .IGNOREGROUP
+                        -> .LIBRARY
+                        -> .MKSARGS
+                        -> .NOINFER
+                        -> .NOSTATE
                         -> .PHONY
                         -> .PRECIOUS
                         -> .PROLOG
@@ -565,37 +575,27 @@
 
 
        Where, TAB represents a <tab> character, STRING represents an arbitrary
-       sequence of characters, and LINE represents a possibly  empty  sequence
-       of  characters terminated by a non-escaped (not immediately preceded by
-       a backslash '\') new-line character.  MACRO, PREREQUISITE,  and  TARGET
-       each  represent a string of characters not including space or tab which
-       respectively form the name of a macro,  prerequisite  or  target.   The
+       sequence  of  characters, and LINE represents a possibly empty sequence
+       of characters terminated by a non-escaped (not immediately preceded  by
+       a  backslash  '\') new-line character.  MACRO, PREREQUISITE, and TARGET
+       each represent a string of characters not including space or tab  which
+       respectively  form  the  name  of a macro, prerequisite or target.  The
        name may itself be a macro expansion expression.  A LINE can be contin-
-       ued over several physical lines by terminating it with a  single  back-
-       slash  character.   Comments are initiated by the pound # character and
+       ued  over  several physical lines by terminating it with a single back-
+       slash character.  Comments are initiated by the pound #  character  and
        extend to the end of line.  All comment text is discarded, a '#' may be
-       placed  into  the  makefile text by escaping it with '\' (ie. \# trans-
+       placed into the makefile text by escaping it with '\'  (ie.  \#  trans-
        lates to # when it is parsed).  An exception to this occurs when a # is
        seen inside a recipe line that begins with a <tab> or is inside a group
-       recipe.  If you specify the -c command line switch then  this  behavior
-       is  disabled  and dmake will treat all # characters as start of comment
-       indicators unless they are escaped by \.  A set of continued lines  may
-       be  commented out by placing a single # at the start of the first line.
+       recipe.   If  you specify the -c command line switch then this behavior
+       is disabled and dmake will treat all # characters as start  of  comment
+       indicators  unless they are escaped by \.  A set of continued lines may
+       be commented out by placing a single # at the start of the first  line.
        A continued line cannot span more than one makefile.
 
-       white space is defined to be any combination of <space>, <tab>, and the
-       sequence \<nl> when \<nl> is used to terminate a LINE.  When processing
-       macro definition lines, any amount of white space is allowed on  either
-       side of the macro operator and white space is stripped from both before
-       and after the macro value string.  The sequence  \<nl>  is  treated  as
-       white  space  during  recipe  expansion  and  is deleted from the final
-       recipe string.  You must escape the \<nl> with another \  in  order  to
-       get  a  \  at  the end of a recipe line.  The \<nl> sequence is deleted
-       from macro values when they are expanded.
-
 
 
-Version 4.3                           UW                                     9
+Version 4.4                           UW                                     9
 
 
 
@@ -604,266 +604,270 @@
 DMAKE(1)                                                              DMAKE(1)
 
 
-       When processing target definition lines, the recipe for a target  must,
-       in  general,  follow  the first definition of the target (See the RULES
-       AND TARGETS section for an exception), and  the  recipe  may  not  span
-       across  multiple  makefiles.   Any targets and prerequisites found on a
-       target definition line are taken to be white  space  separated  tokens.
-       The  rule  operator  (op  in SYNTAX section) is also considered to be a
-       token but does not require white space to precede or follow it.   Since
-       the  rule  operator  begins with a `:', traditional versions of make do
-       not allow the `:' character to form a valid target name.  dmake  allows
-       `:'  to  be  present in target/prerequisite names as long as the entire
+       white space is defined to be any combination of <space>, <tab>, and the
+       sequence \<nl> when \<nl> is used to terminate a LINE.  When processing
+       macro  definition lines, any amount of white space is allowed on either
+       side of the macro operator and white space is stripped from both before
+       and  after  the  macro  value string.  The sequence \<nl> is treated as
+       white space during recipe expansion  and  is  deleted  from  the  final
+       recipe  string.   You  must escape the \<nl> with another \ in order to
+       get a \ at the end of a recipe line.  The  \<nl>  sequence  is  deleted
+       from macro values when they are expanded.
+
+       When  processing target definition lines, the recipe for a target must,
+       in general, follow the first definition of the target  (See  the  RULES
+       AND  TARGETS  section  for  an  exception), and the recipe may not span
+       across multiple makefiles.  Any targets and prerequisites  found  on  a
+       target  definition  line  are taken to be white space separated tokens.
+       The rule operator (op in SYNTAX section) is also  considered  to  be  a
+       token  but does not require white space to precede or follow it.  Since
+       the rule operator begins with a `:', traditional versions  of  make  do
+       not  allow the `:' character to form a valid target name.  dmake allows
+       `:' to be present in target/prerequisite names as long  as  the  entire
        target/prerequisite name is quoted.  For example:
 
        a:fred : test
 
-       would be parsed as TARGET = a, PREREQUISITES={fred, :, test}, which  is
+       would  be parsed as TARGET = a, PREREQUISITES={fred, :, test}, which is
        not what was intended.  To fix this you must write:
 
        "a:fred" : test
 
        Which will be parsed as expected.  Quoted target and prerequisite spec-
-       ifications may also contain white space thereby  allowing  the  use  of
-       complex  function macro expressions..  See the EXAMPLES section for how
+       ifications  may  also  contain  white space thereby allowing the use of
+       complex function macro expressions..  See the EXAMPLES section for  how
        to apply " quoting to a list of targets.
 
 ATTRIBUTES
        dmake defines several target attributes.  Attributes may be assigned to
        a single target, a group of targets, or to all targets in the makefile.
-       Attributes are used to modify dmake actions during target update.   The
+       Attributes  are used to modify dmake actions during target update.  The
        recognized attributes are:
 
 
-       .EPILOG     Insert  shell  epilog  code  when  executing a group recipe
+       .EPILOG     Insert shell epilog code  when  executing  a  group  recipe
                    associated with any target having this attribute set.
 
-       .ERRREMOVE  Always remove any target having this attribute if an  error
-                   is  encountered  while making them.  Setting this attribute
+       .ERRREMOVE  Always  remove any target having this attribute if an error
+                   is encountered while making them.  Setting  this  attribute
                    overrides the .PRECIOUS attribute.
 
        .EXECUTE    If the -n flag was given then execute the recipe associated
                    with any target having this attribute set.
 
-       .FIRST      Used  in  conjunction with .INCLUDE.  Terminates the inclu-
+       .FIRST      Used in conjunction with .INCLUDE.  Terminates  the  inclu-
                    sion with the first successfully included prerequisite.
 
        .GROUP      Force execution of a target's recipe as a group recipe.
 
-       .IGNORE     Ignore an error when trying to make any  target  with  this
-                   attribute set.
 
-       .IGNOREGROUP
-                   Disable  the  special  meaning  of  '[' to initiate a group
-                   recipe.
 
-       .LIBRARY    Target is a library.
 
+Version 4.4                           UW                                    10
 
 
 
-Version 4.3                           UW                                    10
 
 
+DMAKE(1)                                                              DMAKE(1)
 
 
+       .IGNORE     Ignore  an  error  when trying to make any target with this
+                   attribute set.
 
-DMAKE(1)                                                              DMAKE(1)
+       .IGNOREGROUP
+                   Disable the special meaning of  '['  to  initiate  a  group
+                   recipe.
 
+       .LIBRARY    Target is a library.
 
-       .MKSARGS    If running in an MSDOS environment then  use  MKS  extended
+       .MKSARGS    If  running  in  an MSDOS environment then use MKS extended
                    argument passing conventions to pass arguments to commands.
                    Non-MSDOS environments ignore this attribute.
 
        .NOINFER    Any target with this attribute set will not be subjected to
                    transitive closure if it is inferred as a prerequisite of a
-                   target whose recipe and prerequisites are  being  inferred.
+                   target  whose  recipe and prerequisites are being inferred.
                    (i.e. the inference algorithm will not use any prerequisite
-                   with this attribute set,  as  a  target)  If  specified  as
+                   with  this  attribute  set,  as  a  target) If specified as
                    '.NOINFER:' (ie. with no prerequisites or targets) then the
-                   effect is equivalent to specifying -T on the command  line.
+                   effect  is equivalent to specifying -T on the command line.
 
-       .NOSTATE    Any  target  with  this attribute set will not have command
-                   line  flag  information  stored  in  the  state   file   if
+       .NOSTATE    Any target with this attribute set will  not  have  command
+                   line   flag   information  stored  in  the  state  file  if
                    .KEEP_STATE has been enabled.
 
-       .PHONY      Any  target  with  this  attribute set will have its recipe
+       .PHONY      Any target with this attribute set  will  have  its  recipe
                    executed each time the target is made even if a file match-
-                   ing  the target name can be located.  Any targets that have
-                   a .PHONY attributed target as a prerequisite will  be  made
+                   ing the target name can be located.  Any targets that  have
+                   a  .PHONY  attributed target as a prerequisite will be made
                    each time the .PHONY attributed prerequisite is made.
 
-       .PRECIOUS   Do  not  remove  associated target under any circumstances.
-                   Set by default for any targets  whose  corresponding  files
+       .PRECIOUS   Do not remove associated target  under  any  circumstances.
+                   Set  by  default  for any targets whose corresponding files
                    exist in the file system prior to the execution of dmake.
 
-       .PROLOG     Insert  shell  prolog  code  when  executing a group recipe
+       .PROLOG     Insert shell prolog code  when  executing  a  group  recipe
                    associated with any target having this attribute set.
 
-       .SEQUENTIAL Force a sequential make of the associated target's  prereq-
+       .SEQUENTIAL Force  a sequential make of the associated target's prereq-
                    uisites.
 
-       .SETDIR     Change  current  working  directory  to specified directory
-                   when making the associated target.  You  must  specify  the
-                   directory  at  the  time the attribute is specified.  To do
-                   this simply give .SETDIR=path as the  attribute.   path  is
-                   expanded  and the result is used as the value of the direc-
-                   tory to change to.  If path contains $$@ then the  name  of
-                   the  target  to  be  built is used in computing the path to
-                   change directory to.   If  path  is  surrounded  by  single
-                   quotes  then path is not expanded, and is used literally as
-                   the directory name.  If the path contains any  `:'  charac-
-                   ters  then the entire attribute string must be quoted using
-                   ".  If a target having this  attribute  set  also  has  the
-                   .IGNORE  attribute  set then if the change to the specified
-                   directory fails it will be ignored, and  no  error  message
+       .SETDIR     Change current working  directory  to  specified  directory
+                   when  making  the  associated target.  You must specify the
+                   directory at the time the attribute is  specified.   To  do
+                   this  simply  give  .SETDIR=path as the attribute.  path is
+                   expanded and the result is used as the value of the  direc-
+                   tory  to  change to.  If path contains $$@ then the name of
+                   the target to be built is used in  computing  the  path  to
+                   change  directory  to.   If  path  is  surrounded by single
+                   quotes then path is not expanded, and is used literally  as
+                   the  directory  name.  If the path contains any `:' charac-
+                   ters then the entire attribute string must be quoted  using
+                   ".   If  a  target  having  this attribute set also has the
+                   .IGNORE attribute set then if the change to  the  specified
+                   directory  fails  it  will be ignored, and no error message
                    will be issued.
 
-       .SILENT     Do  not  echo  the recipe lines when making any target with
-                   this attribute set, and do not issue any warnings.
 
-       .SWAP       Under MSDOS when making a target with  this  attribute  set
-                   swap  the  dmake  executable to disk prior to executing the
-                   recipe line.  Also see the '%' recipe line flag defined  in
-                   the RECIPES section.
 
+Version 4.4                           UW                                    11
 
 
-Version 4.3                           UW                                    11
 
 
 
+DMAKE(1)                                                              DMAKE(1)
 
 
-DMAKE(1)                                                              DMAKE(1)
+       .SILENT     Do not echo the recipe lines when making  any  target  with
+                   this attribute set, and do not issue any warnings.
 
+       .SWAP       Under  MSDOS  when  making a target with this attribute set
+                   swap the dmake executable to disk prior  to  executing  the
+                   recipe  line.  Also see the '%' recipe line flag defined in
+                   the RECIPES section.
 
-       .SYMBOL     Target  is  a  library  member and is an entry point into a
-                   module in the library.  This attribute is  used  only  when
-                   searching  a  library  for  a  target.  Targets of the form
+       .SYMBOL     Target is a library member and is an  entry  point  into  a
+                   module  in  the  library.  This attribute is used only when
+                   searching a library for a  target.   Targets  of  the  form
                    lib((entry)) have this attribute set automatically.
 
-       .USESHELL   Force each recipe line of a target to be executed  using  a
+       .USESHELL   Force  each  recipe line of a target to be executed using a
                    shell.  Specifying this attribute is equivalent to specify-
-                   ing the '+' character at the start of each line of  a  non-
+                   ing  the  '+' character at the start of each line of a non-
                    group recipe.
 
-       .UPDATEALL  Indicates  that  all  the  targets  listed in this rule are
-                   updated by the execution of  the  accompanying  recipe.   A
+       .UPDATEALL  Indicates that all the targets  listed  in  this  rule  are
+                   updated  by  the  execution  of the accompanying recipe.  A
                    common example is the production of the y.tab.c and y.tab.h
-                   files by yacc when it is  run  on  a  grammar.   Specifying
-                   .UPDATEALL  in  such  a  rule  prevents the running of yacc
-                   twice, once for the y.tab.c file and once for  the  y.tab.h
-                   file.   .UPDATEALL  targets  that are specified in a single
-                   rule are treated as a single target and all timestamps  are
+                   files  by  yacc  when  it  is run on a grammar.  Specifying
+                   .UPDATEALL in such a rule  prevents  the  running  of  yacc
+                   twice,  once  for the y.tab.c file and once for the y.tab.h
+                   file.  .UPDATEALL targets that are specified  in  a  single
+                   rule  are treated as a single target and all timestamps are
                    updated whenever any target in the set is made.  As a side-
-                   effect, dmake internally sorts such  targets  in  ascending
-                   alphabetical  order and the value of $@ is always the first
+                   effect,  dmake  internally  sorts such targets in ascending
+                   alphabetical order and the value of $@ is always the  first
                    target in the sorted set.
 
-       All attributes are user setable and except for .UPDATEALL, .SETDIR  and
-       .MKSARGS  may  be  used in one of two forms.  The .MKSARGS attribute is
-       restricted to use as a global attribute, and the use of the  .UPDATEALL
-       and  .SETDIR attributes is restricted to rules of the second form only.
+       All  attributes are user setable and except for .UPDATEALL, .SETDIR and
+       .MKSARGS may be used in one of two forms.  The  .MKSARGS  attribute  is
+       restricted  to use as a global attribute, and the use of the .UPDATEALL
+       and .SETDIR attributes is restricted to rules of the second form  only.
 
        ATTRIBUTE_LIST : targets
 
-       assigns the attributes specified by ATTRIBUTE_LIST to  each  target  in
+       assigns  the  attributes  specified by ATTRIBUTE_LIST to each target in
        targets or
 
        targets ATTRIBUTE_LIST : ...
 
-       assigns  the  attributes  specified by ATTRIBUTE_LIST to each target in
+       assigns the attributes specified by ATTRIBUTE_LIST to  each  target  in
        targets.  In the first form if targets is empty (ie. a NULL list), then
-       the  list of attributes will apply to all targets in the makefile (this
-       is equivalent to the common Make construct of ".IGNORE :" but has  been
-       modified  to  the  notion of an attribute instead of a special target).
+       the list of attributes will apply to all targets in the makefile  (this
+       is  equivalent to the common Make construct of ".IGNORE :" but has been
+       modified to the notion of an attribute instead of  a  special  target).
        Not  all  of  the  attributes  have  global  meaning.   In  particular,
-       .LIBRARY,  .NOSTATE,  .PHONY,  .SETDIR,  .SYMBOL and .UPDATEALL have no
+       .LIBRARY, .NOSTATE, .PHONY, .SETDIR, .SYMBOL  and  .UPDATEALL  have  no
        assigned global meaning.
 
-       Any attribute may be used with any target, even with the  special  tar-
-       gets.   Some  combinations are useless (e.g. .INCLUDE .PRECIOUS: ... ),
-       while others are useful (e.g. .INCLUDE .IGNORE  :  "file.mk"  will  not
-       complain  if  file.mk  cannot  be  found  using the include file search
-       rules, see  the  section  on  SPECIAL  TARGETS  for  a  description  of
-       .INCLUDE).   If a specified attribute will not be used with the special
-       target a warning is issued and the attribute is ignored.
+       Any  attribute  may be used with any target, even with the special tar-
+       gets.  Some combinations are useless (e.g. .INCLUDE .PRECIOUS:  ...  ),
+       while  others  are  useful  (e.g. .INCLUDE .IGNORE : "file.mk" will not
+       complain if file.mk cannot be  found  using  the  include  file  search
 
-MACROS
-       dmake supports six forms of macro assignment.
 
 
+Version 4.4                           UW                                    12
 
 
-Version 4.3                           UW                                    12
 
 
 
+DMAKE(1)                                                              DMAKE(1)
 
 
-DMAKE(1)                                                              DMAKE(1)
+       rules,  see  the  section  on  SPECIAL  TARGETS  for  a  description of
+       .INCLUDE).  If a specified attribute will not be used with the  special
+       target a warning is issued and the attribute is ignored.
+
+MACROS
+       dmake supports six forms of macro assignment.
 
 
-        MACRO = LINE   This is the most common  and  familiar  form  of  macro
-                       assignment.   It assigns LINE literally as the value of
-                       MACRO.  Future expansions of MACRO  recursively  expand
+        MACRO = LINE   This  is  the  most  common  and familiar form of macro
+                       assignment.  It assigns LINE literally as the value  of
+                       MACRO.   Future  expansions of MACRO recursively expand
                        its value.
 
-        MACRO *= LINE  This  form  behaves exactly as the simple '=' form with
-                       the exception that if MACRO already has  a  value  then
+        MACRO *= LINE  This form behaves exactly as the simple '='  form  with
+                       the  exception  that  if MACRO already has a value then
                        the assignment is not performed.
 
-        MACRO := LINE  This  form  differs from the simple '=' form in that it
-                       expands LINE prior to assigning  it  as  the  value  of
-                       MACRO.   Future  expansions of MACRO do not recursively
+        MACRO := LINE  This form differs from the simple '=' form in  that  it
+                       expands  LINE  prior  to  assigning  it as the value of
+                       MACRO.  Future expansions of MACRO do  not  recursively
                        expand its value.
 
-        MACRO *:= LINE This form behaves exactly as the  ':='  form  with  the
-                       exception  that  if  MACRO already has a value then the
+        MACRO *:= LINE This  form  behaves  exactly  as the ':=' form with the
+                       exception that if MACRO already has a  value  then  the
                        assignment and expansion are not performed.
 
-        MACRO += LINE  This form of macro assignment allows  macro  values  to
-                       grow.   It  takes the literal value of LINE and appends
+        MACRO += LINE  This  form  of  macro assignment allows macro values to
+                       grow.  It takes the literal value of LINE  and  appends
                        it to the previous value of MACRO separating the two by
                        a single space.  Future expansions of MACRO recursively
                        expand its value.
 
-        MACRO +:= LINE This form is similar to the '+=' form except  that  the
-                       value  of  LINE is expanded prior to being added to the
+        MACRO +:= LINE This  form  is similar to the '+=' form except that the
+                       value of LINE is expanded prior to being added  to  the
                        value of MACRO.
 
-       Macro expressions specified on the command line allow the  macro  value
-       to  be redefined within the makefile only if the macro is defined using
+       Macro  expressions  specified on the command line allow the macro value
+       to be redefined within the makefile only if the macro is defined  using
        the '+=' and '+:=' operators.  Other operators will define a macro that
        cannot be further modified.
 
-       Each  of the preceeding macro assignment operators may be prefixed by !
-       to indicate that the assignment should be forced and that  no  warnings
-       should  be issued.  Thus, specifying ! has the effect of silently forc-
+       Each of the preceeding macro assignment operators may be prefixed by  !
+       to  indicate  that the assignment should be forced and that no warnings
+       should be issued.  Thus, specifying ! has the effect of silently  forc-
        ing the specified macro assignment.
 
        When dmake defines a non-environment macro it strips leading and trail-
-       ing  white  space from the macro value.  Macros imported from the envi-
-       ronment via either the .IMPORT special target (see the SPECIAL  TARGETS
-       section),  or the -e, or -E flags are an exception to this rule.  Their
-       values are always taken literally and white space  is  never  stripped.
-       In  addition,  named macros defined using the .IMPORT special target do
-       not have their values expanded when they are used  within  a  makefile.
+       ing white space from the macro value.  Macros imported from  the  envi-
+       ronment  via either the .IMPORT special target (see the SPECIAL TARGETS
+       section), or the -e, or -E flags are an exception to this rule.   Their
+       values  are  always  taken literally and white space is never stripped.
+       In addition, named macros defined using the .IMPORT special  target  do
+       not  have  their  values expanded when they are used within a makefile.
        In contrast, environment macros that are imported due to the specifica-
        tion of the -e or -E flags are subject to expansion when used.
 
-       To specify a macro expansion enclose the name in () or {}  and  precede
-       it  with  a dollar sign $.  Thus $(TEST) represents an expansion of the
-       macro variable named TEST.  If TEST is defined then $(TEST) is replaced
-       by  its expanded value.  If TEST is not defined then $(TEST) expands to
-       the NULL string (this is equivalent to defining a macro as  'TEST='  ).
-       A  short  form  may be used for single character named macros.  In this
-       case the parentheses are optional, and $(I) is equivalent to $I.  Macro
 
 
 
-Version 4.3                           UW                                    13
+Version 4.4                           UW                                    13
 
 
 
@@ -872,52 +876,74 @@
 DMAKE(1)                                                              DMAKE(1)
 
 
-       expansion  is recursive, hence, if the value string contains an expres-
-       sion representing a macro expansion, the expansion is performed.   Cir-
+       To  specify  a macro expansion enclose the name in () or {} and precede
+       it with a dollar sign $.  Thus $(TEST) represents an expansion  of  the
+       macro variable named TEST.  If TEST is defined then $(TEST) is replaced
+       by its expanded value.  If TEST is not defined then $(TEST) expands  to
+       the  NULL  string (this is equivalent to defining a macro as 'TEST=' ).
+       A short form may be used for single character named  macros.   In  this
+       case the parentheses are optional, and $(I) is equivalent to $I.  Macro
+       expansion is recursive, hence, if the value string contains an  expres-
+       sion  representing a macro expansion, the expansion is performed.  Cir-
        cular macro expansions are detected and cause an error to be issued.
 
-       When  defining  a  macro  the given macro name is first expanded before
-       being used to define the macro.  Thus it is possible to  define  macros
+       When defining a macro the given macro name  is  first  expanded  before
+       being  used  to define the macro.  Thus it is possible to define macros
        whose names depend on values of other macros.  For example, suppose CWD
        is defined as
 
        CWD = $(PWD:b)
 
-       then the value of $(CWD) is the name of the  current  directory.   This
+       then  the  value  of $(CWD) is the name of the current directory.  This
        can be used to define macros specific to this directory, for example:
 
        _$(CWD).prt = list of files to print...
 
-       The  actual  name  of  the  defined  macro is a function of the current
-       directory.  A construct such as this is useful when processing a  hier-
-       archy  of directories using .SETDIR attributed targets and a collection
+       The actual name of the defined macro  is  a  function  of  the  current
+       directory.   A construct such as this is useful when processing a hier-
+       archy of directories using .SETDIR attributed targets and a  collection
        of small distributed makefile stubs.
 
-       Macro variables may be defined within  the  makefile,  on  the  command
+       Macro  variables  may  be  defined  within the makefile, on the command
        line, or imported from the environment.
 
-       dmake  supports  several non-standard macro expansions: The first is of
+       dmake supports several non-standard macro expansions: The first  is  of
        the form:
 
               $(macro_name:modifier_list:modifier_list:...)
 
-       where modifier_list is chosen from the set { B or b, D or d, E or e,  F
-       or f, I or i, L or l, S or s, T or t, U or u, ^, +, 1 } and
+       where modifier_list may be a combination of:
 
-              b  - file (not including suffix) portion of path names
-              d  - directory portion of all path names
-              e  - suffix portion of path names
-              f  - file (including suffix) portion of path names
-              i  - inferred names of targets
-              l  - macro value in lower case
-              s  - simple pattern substitution
-              t  - tokenization.
-              u  - macro value in upper case
-              ^  - prepend a prefix to each token
-              +  - append a suffix to each token
-              1  - return the first white space separated token from value
+              b or B - file (not including suffix) portion of path names
+              d or D - directory portion of all path names
+              e or E - suffix portion of path names
+              f or F - file (including suffix) portion of path names
+              i or I - inferred names of targets
+              l or L - macro value in lower case
+              u or U - macro value in upper case
+              1      - return the first white space separated token from value
+
+       or a single one of:
+
+              m or M - map escape codes found in macro to their ASCII value
+              s or S - simple pattern substitution
+              t or T - tokenization.
+              ^      - prepend a prefix to each token
+              +      - append a suffix to each token
 
        Thus if we have the example:
+
+
+
+Version 4.4                           UW                                    14
+
+
+
+
+
+DMAKE(1)                                                              DMAKE(1)
+
+
               test = d1/d2/d3/a.out f.out d1/k.out
        The  following macro expansions produce the values on the right of '->'
        after expansion.
@@ -932,30 +958,27 @@
               $(test:u)             -> D1/D2/D3/A.OUT F.OUT D1/K.OUT
               $(test:1)             -> d1/d2/d3/a.out
 
-
-
-
-Version 4.3                           UW                                    14
-
-
-
-
-
-DMAKE(1)                                                              DMAKE(1)
-
-
        If a token ends in a string  composed  from  the  value  of  the  macro
        DIRBRKSTR  (ie. ends in a directory separator string, e.g. '/' in UNIX)
        and you use the :d modifier then the expansion  returns  the  directory
        name  less the final directory separator string.  Thus successive pairs
        of :d modifiers each remove a level of directory in the token string.
 
+       The map escape codes modifier changes the following escape codes \a  =>
+       <bel>,  \b => <backspace>, \f => <formfeed>, \n => <nl>, \r => <cr>, \t
+       => <tab>, \v => <vertical tab>, \" => ", and \xxx => <xxx> where xxx is
+       the  octal  representation  of a character into the corresponding ASCII
+       value.
+
+       The tokenization, prepend and append modifier may use the  same  escape
+       codes that are supported by the map escape codes modifier in the string
+       that is inserted, prepended or added by the respective macro  modifier.
+       These  modifiers may quote this string to include otherwise problematic
+       characters.  E.g. spaces, colons and parentheses.
+
        The tokenization modifier takes all white space separated  tokens  from
-       the macro value and separates them by the quoted separator string.  The
-       separator string may contain the following escape codes \a => <bel>, \b
-       =>  <backspace>, \f => <formfeed>, \n => <nl>, \r => <cr>, \t => <tab>,
-       \v => <vertical tab>, \" => ", and \xxx => <xxx> where xxx is the octal
-       representation of a character.  Thus the expansion:
+       the  macro  value and separates them by the separator string.  Thus the
+       expansion:
 
               $(test:f:t"+\n")
        produces:
@@ -963,64 +986,64 @@
               f.out+
               k.out
 
-       The  prefix  operator ^ takes all white space separated tokens from the
+       The prefix operator ^ takes all white space separated tokens  from  the
        macro value and prepends string to each.
 
               $(test:f:^mydir/)
        produces:
               mydir/a.out mydir/f.out mydir/k.out
 
-       The suffix operator + takes all white space separated tokens  from  the
+       The  suffix  operator + takes all white space separated tokens from the
        macro value and appends string to each.
 
               $(test:b:+.c)
        produces:
               a.c f.c k.c
 
-       The  next  non-standard  form  of  macro expansion allows for recursive
-       macros.  It is possible to specify  a  $(macro_name)  or  ${macro_name}
-       expansion  where  macro_name  contains  more $( ... ) or ${ ... } macro
-       expansions itself.
 
-       For    example    $(CC$(_HOST)$(_COMPILER))    will    first     expand
-       CC$(_HOST)$(_COMPILER)  to get a result and use that result as the name
-       of the macro to expand.  This is useful for writing a makefile for more
-       than  one  target  environment.   As  an example consider the following
-       hypothetical case.  Suppose that _HOST and _COMPILER are imported  from
-       the  environment and are set to represent the host machine type and the
-       host compiler respectively.
 
-              CFLAGS_VAX_CC = -c -O  # _HOST == "_VAX", _COMPILER == "_CC"
-              CFLAGS_PC_MSC = -c -ML # _HOST == "_PC",  _COMPILER == "_MSC"
 
-              # redefine CFLAGS macro as:
+Version 4.4                           UW                                    15
 
-              CFLAGS := $(CFLAGS$(_HOST)$(_COMPILER))
 
-       This causes CFLAGS to take on a value that corresponds to the  environ-
-       ment in which the make is being invoked.
 
-       The final non-standard macro expansion is of the form:
 
-              string1{token_list}string2
 
+DMAKE(1)                                                              DMAKE(1)
 
 
+       The next non-standard form of  macro  expansion  allows  for  recursive
+       macros.   It  is  possible  to specify a $(macro_name) or ${macro_name}
+       expansion where macro_name contains more $( ... ) or  ${  ...  }  macro
+       expansions itself.
 
-Version 4.3                           UW                                    15
+       For     example    $(CC$(_HOST)$(_COMPILER))    will    first    expand
+       CC$(_HOST)$(_COMPILER) to get a result and use that result as the  name
+       of the macro to expand.  This is useful for writing a makefile for more
+       than one target environment.  As  an  example  consider  the  following
+       hypothetical  case.  Suppose that _HOST and _COMPILER are imported from
+       the environment and are set to represent the host machine type and  the
+       host compiler respectively.
 
+              CFLAGS_VAX_CC = -c -O  # _HOST == "_VAX", _COMPILER == "_CC"
+              CFLAGS_PC_MSC = -c -ML # _HOST == "_PC",  _COMPILER == "_MSC"
 
+              # redefine CFLAGS macro as:
 
+              CFLAGS := $(CFLAGS$(_HOST)$(_COMPILER))
 
+       This  causes CFLAGS to take on a value that corresponds to the environ-
+       ment in which the make is being invoked.
 
-DMAKE(1)                                                              DMAKE(1)
+       The final non-standard macro expansion is of the form:
 
+              string1{token_list}string2
 
-       where  string1,  string2 and token_list are expanded.  After expansion,
-       string1 is prepended to each token found in token_list and  string2  is
-       appended  to  each  resulting token from the previous prepend.  string1
-       and string2 are not delimited by white  space  whereas  the  tokens  in
-       token_list  are.  A null token in the token list is specified using "".
+       where string1, string2 and token_list are expanded.   After  expansion,
+       string1  is  prepended to each token found in token_list and string2 is
+       appended to each resulting token from the  previous  prepend.   string1
+       and  string2  are  not  delimited  by white space whereas the tokens in
+       token_list are.  A null token in the token list is specified using  "".
        Thus using another example we have:
 
               test/{f1 f2}.o     --> test/f1.o test/f2.o
@@ -1033,9 +1056,9 @@
               test/{d1 d2}/{f1 f2}.o --> test/d1/f1.o test/d1/f2.o
                                          test/d2/f1.o test/d2/f2.o
 
-       This last expansion is activated only  when  the  first  characters  of
+       This  last  expansion  is  activated  only when the first characters of
        token_list appear immediately after the opening '{' with no intervening
-       white space.  The reason for this restriction is the  following  incom-
+       white  space.   The reason for this restriction is the following incom-
        patibility with Bourne Shell recipes.  The line
 
               { echo hello;}
@@ -1044,74 +1067,86 @@
 
               {echo hello;}
 
-       is  not.  Hence  the latter triggers the enhanced macro expansion while
-       the former causes it to be suppressed.  See the SPECIAL MACROS  section
-       for  a  description of the special macros that dmake defines and under-
+       is not. Hence the latter triggers the enhanced  macro  expansion  while
+
+
+
+Version 4.4                           UW                                    16
+
+
+
+
+
+DMAKE(1)                                                              DMAKE(1)
+
+
+       the  former causes it to be suppressed.  See the SPECIAL MACROS section
+       for a description of the special macros that dmake defines  and  under-
        stands.
 
 RULES AND TARGETS
-       A makefile contains a series  of  entries  that  specify  dependencies.
-       Such  entries are called target/prerequisite or rule definitions.  Each
+       A  makefile  contains  a  series  of entries that specify dependencies.
+       Such entries are called target/prerequisite or rule definitions.   Each
        rule definition is optionally followed by a set of lines that provide a
-       recipe  for  updating  any targets defined by the rule.  Whenever dmake
-       attempts to bring a target up to date and an explicit  recipe  is  pro-
-       vided  with  a  rule defining the target, that recipe is used to update
-       the target.  A rule definition begins with a line having the  following
+       recipe for updating any targets defined by the  rule.   Whenever  dmake
+       attempts  to  bring  a target up to date and an explicit recipe is pro-
+       vided with a rule defining the target, that recipe is  used  to  update
+       the  target.  A rule definition begins with a line having the following
        syntax:
 
               <targets> [<attributes>] <ruleop> [<prerequisites>] [;<recipe>]
 
-       targets  is  a  non-empty  list of targets.  If the target is a special
+       targets is a non-empty list of targets.  If the  target  is  a  special
        target (see SPECIAL TARGETS section below) then it must appear alone on
        the rule line.  For example:
 
               .IMPORT .ERROR : ...
 
        is not allowed since both .IMPORT and .ERROR are special targets.  Spe-
-       cial targets are not used in the construction of the  dependency  graph
+       cial  targets  are not used in the construction of the dependency graph
        and will not be made.
 
-       attributes  is  a  possibly  empty  list  of attributes.  Any attribute
+       attributes is a possibly  empty  list  of  attributes.   Any  attribute
        defined  in  the  ATTRIBUTES  section  above  may  be  specified.   All
-       attributes  will  be  applied  to the list of named targets in the rule
+       attributes will be applied to the list of named  targets  in  the  rule
        definition.  No other targets will be affected.
 
 
+        NOTE:  As  stated  earlier,  if  both the target list and prerequisite
+               list are empty but the attributes list is not, then the  speci-
+               fied attributes affect all targets in the makefile.
 
 
-Version 4.3                           UW                                    16
+       ruleop  is  a  separator which is used to identify the targets from the
+       prerequisites.  Optionally it also provides a  facility  for  modifying
+       the  way  in  which dmake handles the making of the associated targets.
+       In its simplest form the operator is a single ':', and need not be sep-
+       arated by white space from its neighboring tokens.  It may additionally
+       be followed by any of the modifiers { !, ^, -, :, | }, where:
 
 
+       !      says execute the recipe for the associated targets once for each
+              out  of  date  prerequisite.   Ordinarily the recipe is executed
+              once for all out of date prerequisites at the same time.
 
+       ^      says to insert the specified prerequisites, if any,  before  any
+              other  prerequisites  already associated with the specified tar-
+              gets.  In general, it is not useful to specify ^ with  an  empty
+              list of prerequisites.
 
+       -      says  to  clear the previous list of prerequisites before adding
+              the new prerequisites.  Thus,
 
-DMAKE(1)                                                              DMAKE(1)
 
 
-        NOTE:  As stated earlier, if both the  target  list  and  prerequisite
-               list  are empty but the attributes list is not, then the speci-
-               fied attributes affect all targets in the makefile.
+Version 4.4                           UW                                    17
 
 
-       ruleop is a separator which is used to identify the  targets  from  the
-       prerequisites.   Optionally  it  also provides a facility for modifying
-       the way in which dmake handles the making of  the  associated  targets.
-       In its simplest form the operator is a single ':', and need not be sep-
-       arated by white space from its neighboring tokens.  It may additionally
-       be followed by any of the modifiers { !, ^, -, :, | }, where:
 
 
-       !      says execute the recipe for the associated targets once for each
-              out of date prerequisite.  Ordinarily  the  recipe  is  executed
-              once for all out of date prerequisites at the same time.
 
-       ^      says  to  insert the specified prerequisites, if any, before any
-              other prerequisites already associated with the  specified  tar-
-              gets.   In  general, it is not useful to specify ^ with an empty
-              list of prerequisites.
+DMAKE(1)                                                              DMAKE(1)
 
-       -      says to clear the previous list of prerequisites  before  adding
-              the new prerequisites.  Thus,
 
               .SUFFIXES :
               .SUFFIXES : .a .b
@@ -1120,27 +1155,27 @@
 
               .SUFFIXES :- .a .b
 
-              however  the old form still works as expected.  NOTE:  .SUFFIXES
+              however the old form still works as expected.  NOTE:   .SUFFIXES
               is ignored by dmake it is used here simply as an example.
 
-       :      When the rule operator is not modified by a second ':' only  one
-              set  of  rules  may  be specified for making a target.  Multiple
+       :      When  the rule operator is not modified by a second ':' only one
+              set of rules may be specified for  making  a  target.   Multiple
               definitions may be used to add to the list of prerequisites that
-              a  target  depends on.  However, if a target is multiply defined
-              only one definition may specify a recipe for making the  target.
+              a target depends on.  However, if a target is  multiply  defined
+              only  one definition may specify a recipe for making the target.
 
-              When  a  target's  rule operator is modified by a second ':' (::
+              When a target's rule operator is modified by a  second  ':'  (::
               for example) then this definition may not be the only definition
               with a recipe for the target.  There may be other :: target def-
               inition lines that specify a different set of prerequisites with
-              a  different recipe for updating the target.  Any such target is
-              made if any of the definitions find it to be out  of  date  with
-              respect  to  the  related  prerequisites  and  the corresponding
-              recipe is used to update the target.   By  definition  all  '::'
+              a different recipe for updating the target.  Any such target  is
+              made  if  any  of the definitions find it to be out of date with
+              respect to  the  related  prerequisites  and  the  corresponding
+              recipe  is  used  to  update the target.  By definition all '::'
               recipes that are found to be out of date for are executed.
 
-              In  the  following  simple example, each rule has a `::' ruleop.
-              In such an operator we call the first `:' the operator, and  the
+              In the following simple example, each rule has  a  `::'  ruleop.
+              In  such an operator we call the first `:' the operator, and the
               second `:' the modifier.
 
               a.o :: a.c b.h
@@ -1149,23 +1184,12 @@
               a.o :: a.y b.h
                  second recipe for making a.o
 
-
-
-Version 4.3                           UW                                    17
-
-
-
-
-
-DMAKE(1)                                                              DMAKE(1)
-
-
-              If  a.o  is found to be out of date with respect to a.c then the
-              first recipe is used to make a.o.  If it is found  out  of  date
-              with  respect  to a.y then the second recipe is used.  If a.o is
+              If a.o is found to be out of date with respect to a.c  then  the
+              first  recipe  is  used to make a.o.  If it is found out of date
+              with respect to a.y then the second recipe is used.  If  a.o  is
               out of date with respect to b.h then both recipes are invoked to
-              make  a.o.  In the last case the order of invocation corresponds
-              to the order in which the rule definitions appear in  the  make-
+              make a.o.  In the last case the order of invocation  corresponds
+              to  the  order in which the rule definitions appear in the make-
               file.
 
        |      Is defined only for PERCENT rule target definitions.  When spec-
@@ -1180,13 +1204,25 @@
               %.o : %.r ; some rule
               %.o : %.f ; some rule
 
-       Targets  defined using a single `:' operator with a recipe may be rede-
-       fined again with a new recipe by using a `:' operator with a `:'  modi-
-       fier.   This  is  equivalent  to a target having been initially defined
+
+
+
+Version 4.4                           UW                                    18
+
+
+
+
+
+DMAKE(1)                                                              DMAKE(1)
+
+
+       Targets defined using a single `:' operator with a recipe may be  rede-
+       fined  again with a new recipe by using a `:' operator with a `:' modi-
+       fier.  This is equivalent to a target  having  been  initially  defined
        with a rule using a `:' modifier.  Once a target is defined using a `:'
-       modifier  it  may not be defined again with a recipe using only the `:'
+       modifier it may not be defined again with a recipe using only  the  `:'
        operator with no `:' modifier.  In both cases the use of a `:' modifier
-       creates  a new list of prerequisites and makes it the current prerequi-
+       creates a new list of prerequisites and makes it the current  prerequi-
        site list for the target.  The `:' operator with no recipe always modi-
        fies the current list of prerequisites.  Thus assuming each of the fol-
        lowing definitions has a recipe attached, then:
@@ -1199,8 +1235,8 @@
               joe :: fred ...     (3)
               joe :: more ...     (4)
 
-       are legal and mean:  add the recipe associated with (2), or (4) to  the
-       set  of recipes for joe, placing them after existing recipes for making
+       are  legal and mean:  add the recipe associated with (2), or (4) to the
+       set of recipes for joe, placing them after existing recipes for  making
        joe.  The constructs:
 
               joe :: fred ...     (5)
@@ -1211,19 +1247,35 @@
               joe : fred ... (7)
               joe : more ... (8)
 
-       are errors since we have two sets of perfectly good recipes for  making
+       are  errors since we have two sets of perfectly good recipes for making
        the target.
 
-       prerequisites  is a possibly empty list of targets that must be brought
+       prerequisites is a possibly empty list of targets that must be  brought
        up to date before making the current target.
 
-       recipe is a short form and allows the user to specify short rule  defi-
+       recipe  is a short form and allows the user to specify short rule defi-
        nitions on a single line.  It is taken to be the first recipe line in a
-       larger recipe if additional lines follow the rule definition.   If  the
+       larger  recipe  if additional lines follow the rule definition.  If the
+       semi-colon is present but the recipe line is empty  (ie.  null  string)
+       then it is taken to be an empty rule.  Any target so defined causes the
+       Don't know how to make ...  error message to be suppressed  when  dmake
+       tries  to  make  the  target and fails.  This silence is maintained for
+       rules that are terminated by a semicolon and have no  following  recipe
+       lines,  for  targets  listed  on the command line, for the first target
+       found in the makefile, and for any target having no recipe but contain-
+       ing  a  list  of  prerequisites  (see  the COMPATIBILITY section for an
+       exception to this rule if the AUGMAKE (-A) flag was specified.
+
+RECIPES
+       The traditional format used by most versions of Make defines the recipe
+       lines  as  arbitrary  strings  that may contain macro expansions.  They
+       follow a rule definition line and may be spaced  apart  by  comment  or
+       blank  lines.   The  list of recipe lines defining the recipe is termi-
+       nated by a new target definition, a macro definition,  or  end-of-file.
 
 
 
-Version 4.3                           UW                                    18
+Version 4.4                           UW                                    19
 
 
 
@@ -1232,34 +1284,18 @@
 DMAKE(1)                                                              DMAKE(1)
 
 
-       semi-colon  is  present  but the recipe line is empty (ie. null string)
-       then it is taken to be an empty rule.  Any target so defined causes the
-       Don't  know  how to make ...  error message to be suppressed when dmake
-       tries to make the target and fails.  This  silence  is  maintained  for
-       rules  that  are terminated by a semicolon and have no following recipe
-       lines, for targets listed on the command line,  for  the  first  target
-       found in the makefile, and for any target having no recipe but contain-
-       ing a list of prerequisites  (see  the  COMPATIBILITY  section  for  an
-       exception to this rule if the AUGMAKE (-A) flag was specified.
-
-RECIPES
-       The traditional format used by most versions of Make defines the recipe
-       lines as arbitrary strings that may  contain  macro  expansions.   They
-       follow  a  rule  definition  line and may be spaced apart by comment or
-       blank lines.  The list of recipe lines defining the  recipe  is  termi-
-       nated  by  a new target definition, a macro definition, or end-of-file.
        Each recipe line MUST begin with a <TAB> character which may optionally
-       be  followed  with  one or all of the characters '@%+-'.  The '-' indi-
-       cates that non-zero exit values (ie. errors) are  to  be  ignored  when
+       be followed with one or all of the characters '@%+-'.   The  '-'  indi-
+       cates  that  non-zero  exit  values (ie. errors) are to be ignored when
        this recipe line is executed, the '+' indicates that the current recipe
-       line is to be executed using the shell, the '%'  indicates  that  dmake
+       line  is  to  be executed using the shell, the '%' indicates that dmake
        should swap itself out to secondary storage (MSDOS only) before running
-       the recipe and the '@' indicates that the recipe  line  should  NOT  be
-       echoed  to the terminal prior to being executed.  Each switch is off by
-       default (ie. by default, errors are significant, commands  are  echoed,
-       no  swapping  is  done and a shell is used only if the recipe line con-
-       tains a character found in the value of the SHELLMETAS macro).   Global
-       settings  activated  via  command  line options or special attribute or
+       the  recipe  and  the  '@' indicates that the recipe line should NOT be
+       echoed to the terminal prior to being executed.  Each switch is off  by
+       default  (ie.  by default, errors are significant, commands are echoed,
+       no swapping is done and a shell is used only if the  recipe  line  con-
+       tains  a character found in the value of the SHELLMETAS macro).  Global
+       settings activated via command line options  or  special  attribute  or
        target names may also affect these settings.  An example recipe:
 
               target :
@@ -1271,17 +1307,17 @@
               +and one that is executed using a shell.
 
        The second and new format of the recipe block begins the block with the
-       character  '['  (the  open group character) in the last non-white space
-       position of a line, and terminates the block  with  the  character  ']'
-       (the  close group character) in the first non-white space position of a
+       character '[' (the open group character) in the  last  non-white  space
+       position  of  a  line,  and terminates the block with the character ']'
+       (the close group character) in the first non-white space position of  a
        line.  In this form each recipe line need not have a leading TAB.  This
        is called a recipe group.  Groups so defined are fed intact as a single
-       unit to a shell for execution whenever the corresponding  target  needs
-       to  be  updated.  If the open group character '[' is preceded by one or
-       all of -, @ or % then they apply to the entire group in  the  same  way
-       that  they  apply to single recipe lines.  You may also specify '+' but
-       it is redundant as a shell is already being used  to  run  the  recipe.
-       See  the  MAKING TARGETS section for a description of how dmake invokes
+       unit  to  a shell for execution whenever the corresponding target needs
+       to be updated.  If the open group character '[' is preceded by  one  or
+       all  of  -,  @ or % then they apply to the entire group in the same way
+       that they apply to single recipe lines.  You may also specify  '+'  but
+       it  is  redundant  as  a shell is already being used to run the recipe.
+       See the MAKING TARGETS section for a description of how  dmake  invokes
        recipes.  Here is an example of a group recipe:
 
               target :
@@ -1293,30 +1329,32 @@
               ]
 
 
+TEXT DIVERSIONS
+       dmake  supports  the  notion of text diversions.  If a recipe line con-
+       tains the macro expression
 
+              $(mktmp[,[file][,text]] data)
 
-Version 4.3                           UW                                    19
+       then all text contained in the data expression is expanded and is writ-
+       ten  to  a  temporary file.  The data in the file will always be termi-
+       nated from a new line character.  The return value of the macro is  the
+       name  of  the  temporary  file unless the text parameter is defined. In
+       this case the return value is the expanded value of text.
 
 
 
+Version 4.4                           UW                                    20
 
 
-DMAKE(1)                                                              DMAKE(1)
 
 
-TEXT DIVERSIONS
-       dmake supports the notion of text diversions.  If a  recipe  line  con-
-       tains the macro expression
 
-              $(mktmp[,[file][,text]] data)
+DMAKE(1)                                                              DMAKE(1)
 
-       then all text contained in the data expression is expanded and is writ-
-       ten to a temporary file.  The return value of the macro is the name  of
-       the temporary file.
 
-       data  can be any text and must be separated from the 'mktmp' portion of
-       the macro name by white-space.  The only restriction on the  data  text
-       is  that  it  must contain a balanced number of parentheses of the same
+       data can be any text and must be separated from the 'mktmp' portion  of
+       the  macro  name by white-space.  The only restriction on the data text
+       is that it must contain a balanced number of parentheses  of  the  same
        kind as are used to initiate the $(mktmp ...) expression.  For example:
 
               $(mktmp $(XXX))
@@ -1330,31 +1368,28 @@
 
               ${mktmp text (to dump to file}
 
-       Since the temporary file is opened when the macro containing  the  text
-       diversion  expression  is  expanded,  diversions  may be nested and any
-       diversions that are created as part of ':='  macro  expansions  persist
-       for  the duration of the dmake run.  The diversion text may contain the
-       same escape codes as those described in the MACROS  section.   Thus  if
-       the  data  text is to contain new lines they must be inserted using the
-       \n escape sequence.  For example the expression:
+       Since  the  temporary file is opened when the macro containing the text
+       diversion expression is expanded, diversions  may  be  nested  and  any
+       diversions  that  are  created as part of ':=' macro expansions persist
+       for the duration of the dmake run.  If the data text is to contain  new
+       lines the map escape codes macro expasion can be used.  For example the
+       expression:
 
+              mytext:=this is a\ntest of the text diversion
               all:
-                   cat $(mktmp this is a\n\
-                   test of the text diversion\n)
+                   cat $(mktmp $(mytext:m))
 
        is replaced by:
 
               cat /tmp/mk12294AA
 
        where the temporary file contains two lines both of  which  are  termi-
-       nated  by  a  new-line.   If  the data text spans multiple lines in the
-       makefile then each line must be continued via the use of a \.  A second
-       more  illustrative  example  generates a response file to an MSDOS link
-       command:
+       nated  by  a  new-line.  A second more illustrative example generates a
+       response file to an MSDOS link command:
 
               OBJ = fred.obj mary.obj joe.obj
               all : $(OBJ)
-                   link @$(mktmp $(^:t"+\n")\n)
+                   link @$(mktmp $(^:t"+\n"))
 
        The result of making `all' in the second example is the command:
 
@@ -1364,26 +1399,26 @@
 
               fred.obj+
               mary.obj+
+              joe.obj
 
+       The last line of the file is terminated by a new-line which  is  always
+       inserted at the end of the data string.
 
+       If  the  optional  file specifier is present then its expanded value is
+       the name of the temporary file to create.  An  example  that  would  be
+       useful for MSDOS users with a Turbo-C compiler
 
-Version 4.3                           UW                                    20
 
 
 
+Version 4.4                           UW                                    21
 
 
-DMAKE(1)                                                              DMAKE(1)
 
 
-              joe.obj
 
-       The last line of the file is terminated by a new-line which is inserted
-       due to the \n found at the end of the data string.
+DMAKE(1)                                                              DMAKE(1)
 
-       If  the  optional  file specifier is present then its expanded value is
-       the name of the temporary file to create.  An  example  that  would  be
-       useful for MSDOS users with a Turbo-C compiler
 
               $(mktmp,turboc.cfg $(CFLAGS))
 
@@ -1436,11 +1471,15 @@
                      target, in extreme cases this may cause some problems.
 
        .EXIT         If this target is encountered while  parsing  a  makefile
-                     then   the   parsing   of  the  makefile  is  immediately
+                     then  the  parsing  of the makefile is immediately termi-
+                     nated at that point.
+
+       .EXPORT       All prerequisites associated with this target are assumed
+                     to  correspond  to  macro names and they and their values
 
 
 
-Version 4.3                           UW                                    21
+Version 4.4                           UW                                    22
 
 
 
@@ -1449,71 +1488,66 @@
 DMAKE(1)                                                              DMAKE(1)
 
 
-                     terminated at that point.
-
-       .EXPORT       All prerequisites associated with this target are assumed
-                     to  correspond  to  macro names and they and their values
                      are exported to the environment as environment strings at
                      the  point  in the makefile at which this target appears.
                      Any attributes specified with this  target  are  ignored.
                      Only macros which have been assigned a value in the make-
                      file prior to the export directive are  exported,  macros
                      as  yet  undefined  or macros whose value contains any of
-                     the characters "+=:*" are not exported.  is suppre
+                     the characters "+=:*" are not exported.
+
+                     Note that macros that are not expanded during  the  macro
+                     assignment  and contain other macros will be written into
+                     the environment containing these other macros in the form
+                     of $(macroname).
 
        .IMPORT       Prerequisite names specified for this target are searched
-                     for  in  the environment and defined as macros with their
-                     value taken from the environment.  If  the  special  name
+                     for in the environment and defined as macros  with  their
+                     value  taken  from  the environment.  If the special name
                      .EVERYTHING is used as a prerequisite name then all envi-
-                     ronment  variables  defined  in   the   environment   are
+                     ronment   variables   defined   in  the  environment  are
                      imported.  The functionality of the -E flag can be forced
-                     by placing the construct .IMPORT  :  .EVERYTHING  at  the
+                     by  placing  the  construct  .IMPORT : .EVERYTHING at the
                      start of a makefile.  Similarly, by placing the construct
-                     at the end, one can emulate the effect of the -e  command
+                     at  the end, one can emulate the effect of the -e command
                      line flag.  If a prerequisite name cannot be found in the
-                     environment an error message is issued.  .IMPORT  accepts
-                     the  .IGNORE  attribute.   When given, it causes dmake to
-                     ignore the above error.  See the  MACROS  section  for  a
+                     environment  an error message is issued.  .IMPORT accepts
+                     the .IGNORE attribute.  When given, it  causes  dmake  to
+                     ignore  the  above  error.   See the MACROS section for a
                      description of the processing of imported macro values.
 
-       .INCLUDE      Parse  another makefile just as if it had been located at
-                     the point of the .INCLUDE in the current  makefile.   The
-                     list  of prerequisites gives the list of makefiles to try
-                     to read.  If the list contains  multiple  makefiles  then
+       .INCLUDE      Parse another makefile just as if it had been located  at
+                     the  point  of the .INCLUDE in the current makefile.  The
+                     list of prerequisites gives the list of makefiles to  try
+                     to  read.   If  the list contains multiple makefiles then
                      they are read in order from left to right.  The following
                      search rules are used when trying to locate the file.  If
                      the filename is surrounded by " or just by itself then it
-                     is searched for in the current directory.  If it  is  not
-                     found  it is then searched for in each of the directories
-                     specified as prerequisites of  the  .INCLUDEDIRS  special
-                     target.   If the file name is surrounded by < and >, (ie.
+                     is  searched  for in the current directory.  If it is not
+                     found it is then searched for in each of the  directories
+                     specified  as  prerequisites  of the .INCLUDEDIRS special
+                     target.  If the file name is surrounded by < and >,  (ie.
                      <my_spiffy_new_makefile>) then it is searched for only in
                      the directories given by the .INCLUDEDIRS special target.
-                     In both cases if the file name is a fully qualified  name
-                     starting  at  the root of the file system then it is only
-                     searched for once, and the .INCLUDEDIRS list is  ignored.
-                     If  .INCLUDE fails to find the file it invokes the infer-
+                     In  both cases if the file name is a fully qualified name
+                     starting at the root of the file system then it  is  only
+                     searched  for once, and the .INCLUDEDIRS list is ignored.
+                     If .INCLUDE fails to find the file it invokes the  infer-
                      ence engine to try to infer and hence make the file to be
-                     included.   In this way the file can be checked out of an
-                     RCS  repository  for  example.   .INCLUDE   accepts   the
-                     .IGNORE,   .SETDIR,  and  .NOINFER  attributes.   If  the
-                     .IGNORE attribute is given and the file cannot  be  found
-                     then  dmake continues processing, otherwise an error mes-
-                     sage is generated.  If the .NOINFER  attribute  is  given
-                     and  the file cannot be found then dmake will not attempt
+                     included.  In this way the file can be checked out of  an
+                     RCS   repository   for  example.   .INCLUDE  accepts  the
+                     .IGNORE,  .SETDIR,  and  .NOINFER  attributes.   If   the
+                     .IGNORE  attribute  is given and the file cannot be found
+                     then dmake continues processing, otherwise an error  mes-
+                     sage  is  generated.   If the .NOINFER attribute is given
+                     and the file cannot be found then dmake will not  attempt
                      to infer and make the file.  The .SETDIR attribute causes
-                     dmake  to  change  directories to the specified directory
-                     prior to attempting the include operation.  If all  fails
-                     dmake  attempts to make the file to be included.  If mak-
-                     ing the file  fails  then  dmake  terminates  unless  the
-                     .INCLUDE  directive also specified the .IGNORE attribute.
-                     If .FIRST is specified along  with  .INCLUDE  then  dmake
-                     attempts to include each named prerequisite and will ter-
-                     minate the inclusion with  the  first  prerequisite  that
+                     dmake to change directories to  the  specified  directory
+                     prior  to attempting the include operation.  If all fails
 
 
 
-Version 4.3                           UW                                    22
+Version 4.4                           UW                                    23
 
 
 
@@ -1522,80 +1556,95 @@
 DMAKE(1)                                                              DMAKE(1)
 
 
+                     dmake attempts to make the file to be included.  If  mak-
+                     ing  the  file  fails  then  dmake  terminates unless the
+                     .INCLUDE directive also specified the .IGNORE  attribute.
+                     If  .FIRST  is  specified  along with .INCLUDE then dmake
+                     attempts to include each named prerequisite and will ter-
+                     minate  the  inclusion  with  the first prerequisite that
                      results in a successful inclusion.
 
-       .INCLUDEDIRS  The  list  of  prerequisites  specified  for  this target
-                     defines the set of directories to search when  trying  to
+       .INCLUDEDIRS  The list  of  prerequisites  specified  for  this  target
+                     defines  the  set of directories to search when trying to
                      include a makefile.
 
        .KEEP_STATE   This special target is a synonym for the macro definition
 
                      .KEEP_STATE := _state.mk
 
-                     It's effect is to turn on STATE  keeping  and  to  define
+                     It's  effect  is  to  turn on STATE keeping and to define
                      _state.mk as the state file.
 
-       .MAKEFILES    The  list  of prerequisites is the set of files to try to
-                     read as the default makefile.  By default this target  is
+       .MAKEFILES    The list of prerequisites is the set of files to  try  to
+                     read  as the default makefile.  By default this target is
                      defined as:
 
                      .MAKEFILES : makefile.mk Makefile makefile
 
 
-       .SOURCE       The  prerequisite  list  of  this target defines a set of
-                     directories to check when trying to locate a target  file
-                     name.   See  the  section  on BINDING of targets for more
+       .SOURCE       The prerequisite list of this target  defines  a  set  of
+                     directories  to check when trying to locate a target file
+                     name.  See the section on BINDING  of  targets  for  more
                      information.
 
        .SOURCE.suff  The same as .SOURCE, except that the .SOURCE.suff list is
-                     searched  first when trying to locate a file matching the
+                     searched first when trying to locate a file matching  the
                      a target whose name ends in the suffix .suff.
 
        .REMOVE       The recipe of this target is used whenever dmake needs to
-                     remove  intermediate  targets  that  were made but do not
-                     need to be kept around.  Such  targets  result  from  the
+                     remove intermediate targets that were  made  but  do  not
+                     need  to  be  kept  around.  Such targets result from the
                      application  of  transitive  closure  on  the  dependency
                      graph.
 
-       In addition to the special targets above, several other forms  of  tar-
-       gets  are  recognized  and are considered special, their exact form and
+       In  addition  to the special targets above, several other forms of tar-
+       gets are recognized and are considered special, their  exact  form  and
        use is defined in the sections that follow.
 
 SPECIAL MACROS
-       dmake defines a number of special macros.  They are divided into  three
-       classes:  control  macros,  run-time  macros, and function macros.  The
-       control macros are used by dmake to configure its actions, and are  the
+       dmake  defines a number of special macros.  They are divided into three
+       classes: control macros, run-time macros,  and  function  macros.   The
+       control  macros are used by dmake to configure its actions, and are the
        preferred method of doing so.  In the case when a control macro has the
        same function as a special target or attribute they share the same name
-       as  the  special  target or attribute.  The run-time macros are defined
-       when dmake makes targets and may be used by the  user  inside  recipes.
-       The  function  macros provide higher level functions dealing with macro
+       as the special target or attribute.  The run-time  macros  are  defined
+       when  dmake  makes  targets and may be used by the user inside recipes.
+       The function macros provide higher level functions dealing  with  macro
        expansion and diversion file processing.
 
-CONTROL MACROS
-       To use the control macros simply assign them  a  value  just  like  any
-       other  macro.  The control macros are divided into three groups: string
-       valued macros, character valued macros, and boolean valued macros.
 
-       The following are all of  the  string  valued  macros.   This  list  is
-       divided  into  two  groups.   The  first  group gives the string valued
-       macros that are defined internally and cannot be directly  set  by  the
-       user.
 
-       INCDEPTH        This  macro's  value is a string of digits representing
-                       the current depth of makefile inclusion.  In the  first
 
+Version 4.4                           UW                                    24
 
 
-Version 4.3                           UW                                    23
 
 
 
+DMAKE(1)                                                              DMAKE(1)
 
 
-DMAKE(1)                                                              DMAKE(1)
+CONTROL MACROS
+       To  use  the  control  macros  simply assign them a value just like any
+       other macro.  The control macros are divided into three groups:  string
+       valued macros, character valued macros, and boolean valued macros.
+
+       The  following  are  all  of  the  string  valued macros.  This list is
+       divided into two groups.  The  first  group  gives  the  string  valued
+       macros  that  are  defined internally and cannot be directly set by the
+       user.
 
+       ABSMAKECMD      Warning! This macro's value is differently defined  for
+                       a  native  Windows  dmake  executable (compiled with MS
+                       Visual C++ or MinGW) and dmake for other operating sys-
+                       tems or build with other compilers.
+
+                       In the first case its value is the absolute filename of
+                       the executable of the current dmake process,  otherwise
+                       it is defined as the NULL string.
 
+       INCDEPTH        This  macro's  value is a string of digits representing
+                       the current depth of makefile inclusion.  In the  first
                        makefile level this value is zero.
 
        MFLAGS          Is  the  list  of  flags that were given on the command
@@ -1633,6 +1682,23 @@
        PWD             Is the full path to the current directory in which make
                        is executing.
 
+
+
+Version 4.4                           UW                                    25
+
+
+
+
+
+DMAKE(1)                                                              DMAKE(1)
+
+
+       SPACECHAR       Is  permanently defined to contain one space character.
+                       This is useful when using space characters in  function
+                       macros,  e.g.  subst,  that otherwise would get deleted
+                       (leading/trailing spaces) or for using spaces in  func-
+                       tion macro parameters.
+
        TMPFILE         Is  set  to  the name of the most recent temporary file
                        opened by dmake.  Temporary files  are  used  for  text
                        diversions and for group recipe processing.
@@ -1659,25 +1725,13 @@
        .DIRCACHERESPCASE
                        If set to "yes" causes the directory cache, if enabled,
                        to respect file case, if set to "no" facilities of  the
-
-
-
-Version 4.3                           UW                                    24
-
-
-
-
-
-DMAKE(1)                                                              DMAKE(1)
-
-
                        native OS are used to match file case.
 
-       .NAMEMAX        Defines  the  maximum  length  of a filename component.
+       NAMEMAX         Defines  the  maximum  length  of a filename component.
                        The value of the variable is initialized at startup  to
                        the value of the compiled macro NAME_MAX.  On some sys-
                        tems the value of NAME_MAX is  too  short  by  default.
-                       Setting a new value for .NAMEMAX will override the com-
+                       Setting  a new value for NAMEMAX will override the com-
                        piled value.
 
        .NOTABS         When set to "yes" enables the use of spaces as well  as
@@ -1696,6 +1750,18 @@
 
        DIRBRKSTR       Contains the string of chars used to terminate the name
                        of  a directory in a pathname.  Under UNIX its value is
+
+
+
+Version 4.4                           UW                                    26
+
+
+
+
+
+DMAKE(1)                                                              DMAKE(1)
+
+
                        "/", under MSDOS its value is "/\:".
 
        DIRSEPSTR       Contains the string that is used to separate  directory
@@ -1734,18 +1800,6 @@
                        end in the suffix .sh.  Under MSDOS if  you  are  using
                        command.com  as  your GROUPSHELL, then this suffix must
                        be set to .bat in order for group recipes  to  function
-
-
-
-Version 4.3                           UW                                    25
-
-
-
-
-
-DMAKE(1)                                                              DMAKE(1)
-
-
                        correctly.   The  setting of GROUPSUFFIX and GROUPSHELL
                        is done automatically for command.com in the startup.mk
                        files.
@@ -1765,6 +1819,18 @@
                        shown  via the -V option.  A buffer of this size plus 2
                        is allocated for reading makefile text.  The buffer  is
                        freed  before  any  targets  are made, thereby allowing
+
+
+
+Version 4.4                           UW                                    27
+
+
+
+
+
+DMAKE(1)                                                              DMAKE(1)
+
+
                        files containing long input lines to be processed with-
                        out  consuming  memory  during  the  actual make.  This
                        macro can only be used to extend the line length beyond
@@ -1809,18 +1875,6 @@
                        without the use of a shell.
 
 
-
-
-
-Version 4.3                           UW                                    26
-
-
-
-
-
-DMAKE(1)                                                              DMAKE(1)
-
-
        There  is  only  one  character valued macro defined by dmake: SWITCHAR
        contains the switch character used  to  introduce  options  on  command
        lines.   For  UNIX its value is `-', and for MSDOS its value may be `/'
@@ -1834,6 +1888,18 @@
        All boolean macros currently understood by dmake correspond directly to
        the previously defined attributes.  These macros provide a  second  way
        to apply global attributes, and represent the preferred method of doing
+
+
+
+Version 4.4                           UW                                    28
+
+
+
+
+
+DMAKE(1)                                                              DMAKE(1)
+
+
        so.  They are used by assigning them a value.  If the value  is  not  a
        NULL string then the boolean condition is set to on.  If the value is a
        NULL string then the condition is set to off.  There  are  five  condi-
@@ -1887,9 +1953,14 @@
               $& --> joe amy hello my.c your.h his.h her.h
 
 
+FUNCTION MACROS
+       dmake  supports  a  full  set  of functional macros.  One of these, the
+       $(mktmp ...)  macro, is discussed in detail in the TEXT DIVERSION  sec-
+       tion and is not covered here.
+
 
 
-Version 4.3                           UW                                    27
+Version 4.4                           UW                                    29
 
 
 
@@ -1898,10 +1969,9 @@
 DMAKE(1)                                                              DMAKE(1)
 
 
-FUNCTION MACROS
-       dmake  supports  a  full  set  of functional macros.  One of these, the
-       $(mktmp ...)  macro, is discussed in detail in the TEXT DIVERSION  sec-
-       tion and is not covered here.
+       Note that some of these macros take comma separated parameters but that
+       these parameters must not contain literal whitespaces.  Whitespaces  in
+       macros used in these parameters are allowed.
 
 
               $(and macroterm ...)
@@ -1955,25 +2025,26 @@
                              [[a] [b] [c]]
 
                      The iterator variable is defined as a local  variable  to
-                     this  foreach  instance.  The following expression illus-
-                     trates this:
+                     this   foreach   instance.    The   following  expression
 
-                             $(foreach,i,$(foreach,i,$(sort c a b) root/$i) [$i/f.h])
 
-                     when evaluated the result is:
 
-                             [root/a/f.h] [root/b/f.h] [root/c/f.h]
+Version 4.4                           UW                                    30
 
 
 
-Version 4.3                           UW                                    28
 
 
+DMAKE(1)                                                              DMAKE(1)
 
 
+                     illustrates this:
 
-DMAKE(1)                                                              DMAKE(1)
+                             $(foreach,i,$(foreach,i,$(sort c a b) root/$i) [$i/f.h])
 
+                     when evaluated the result is:
+
+                             [root/a/f.h] [root/b/f.h] [root/c/f.h]
 
                      The specification of list must be a valid  macro  expres-
                      sion, such as:
@@ -2024,6 +2095,18 @@
                      separated by a single  space,  all  the  non-white  space
                      terms written to stdout by the command.  For example:
 
+
+
+
+Version 4.4                           UW                                    31
+
+
+
+
+
+DMAKE(1)                                                              DMAKE(1)
+
+
                              $(shell ls *.c)
 
                      will  return  "a.c b.c c.c d.c" if the files exist in the
@@ -2035,31 +2118,25 @@
 
                      will run the command using the current shell.
 
+                     Note that if the macro is part of a  recipe  it  will  be
+                     evaluated  after all previous recipe lines have been exe-
+                     cuted. For obvious reasons it will  be  evaluated  before
+                     the current recipe line or group recipe is executed.
+
               $(shell,expand command)
-                     Is an extension to the  $(shell...  function  macro  that
-                     expands the result of running command.
+                     Is  an  extension  to the $(shell command) function macro
+                     that expands the result of running command.
 
               $(sort list)
-                     Will  take  all  white-space separated tokens in list and
+                     Will take all white-space separated tokens  in  list  and
                      will return their sorted equivalent list.
 
-
-
-Version 4.3                           UW                                    29
-
-
-
-
-
-DMAKE(1)                                                              DMAKE(1)
-
-
               $(strip data)
                      Will replace all strings of white-space in data by a sin-
                      gle space.
 
               $(subst,pat,replacement data)
-                     Will  search  for pat in data and will replace any occur-
+                     Will search for pat in data and will replace  any  occur-
                      rence of pat with the replacement string.  The expansion
 
                      $(subst,.o,.c $(OBJECTS))
@@ -2070,23 +2147,35 @@
 
 
               $(uniq list)
-                     Will take all white-space separated tokens  in  list  and
-                     will  return  their  sorted equivalent list containing no
+                     Will  take  all  white-space separated tokens in list and
+                     will return their sorted equivalent  list  containing  no
                      duplicates.
 
 CONDITIONAL MACROS
-       dmake supports conditional macros.  These allow the definition of  tar-
+       dmake  supports conditional macros.  These allow the definition of tar-
        get specific macro values.  You can now say the following:
 
               target ?= MacroName MacroOp Value
 
-       This  creates a definition for MacroName whose value is Value only when
-       target is being made.  You may use a conditional macro assignment  any-
-       where  that  a  regular  macro  assignment may appear, including as the
+       This creates a definition for MacroName whose value is Value only  when
+       target  is being made.  You may use a conditional macro assignment any-
+       where that a regular macro assignment  may  appear,  including  as  the
        value of a $(assign ...) macro.
 
-       The new definition is associated with the most recent  cell  definition
-       for  target.   If  no prior definition exists then one is created.  The
+       The  new  definition is associated with the most recent cell definition
+       for target.  If no prior definition exists then one  is  created.   The
+
+
+
+Version 4.4                           UW                                    32
+
+
+
+
+
+DMAKE(1)                                                              DMAKE(1)
+
+
        implications of this are immediately evident in the following example:
 
               foo := hello
@@ -2101,16 +2190,16 @@
               cond .SETDIR=msdos::;@echo $(foo) $(bar)
                    cond ?= foo := hihi
 
-       The first conditional assignment creates a binding for  'bar'  that  is
-       activated  when  'cond' is made.  The bindings following the :: defini-
-       tions are activated when their respective recipe rules are used.   Thus
-       the  first binding serves to provide a global value for 'bar' while any
-       of the cond :: rules are processed, and the local  bindings  for  'foo'
+       The  first  conditional  assignment creates a binding for 'bar' that is
+       activated when 'cond' is made.  The bindings following the  ::  defini-
+       tions  are activated when their respective recipe rules are used.  Thus
+       the first binding serves to provide a global value for 'bar' while  any
+       of  the  cond  :: rules are processed, and the local bindings for 'foo'
        come into effect when their associated :: rule is processed.
 
-       Conditionals  for  targets  of  .UPDATEALL are all activated before the
-       target group is made.  Assignments are processed in order.   Note  that
-       the  value of a conditional macro assignment is NOT AVAILABLE until the
+       Conditionals for targets of .UPDATEALL are  all  activated  before  the
+       target  group  is made.  Assignments are processed in order.  Note that
+       the value of a conditional macro assignment is NOT AVAILABLE until  the
        associated target is made, thus the construct
 
               mytarget ?= bar := hello
@@ -2122,137 +2211,138 @@
               mytarget ?= bar := hello
               mytarget ?= foo  = $(bar)
 
+       Once a target is made any associated conditional macros are deactivated
+       and their values are no longer available.  Activation occurrs after all
+       inference, and .SETDIR directives have been processed and after  $@  is
+       assigned,  but  before  prerequisites are processed; thereby making the
+       values of conditional macro definitions available  during  construction
+       of prerequisites.
+
+       If  a  %-meta rule target has associated conditional macro assignments,
+       and the rule is chosen by the inference algorithm then the  conditional
+       macro assignments are inferred together with the associated recipe.
 
+DYNAMIC PREREQUISITES
+       dmake looks for prerequisites whose names contain macro expansions dur-
+       ing target processing.  Any such prerequisites  are  expanded  and  the
+       result  of the expansion is used as the prerequisite name.  As an exam-
+       ple the line:
 
-Version 4.3                           UW                                    30
+       fred : $$@.c
 
+       causes the $$@ to be  expanded  when  dmake  is  making  fred,  and  it
+       resolves  to the target fred.  This enables dynamic prerequisites to be
+       generated.  The value of @ may be modified by any of  the  valid  macro
 
 
 
+Version 4.4                           UW                                    33
 
-DMAKE(1)                                                              DMAKE(1)
 
 
-       Once a target is made any associated conditional macros are deactivated
-       and their values are no longer available.  Activation occurrs after all
-       inference,  and  .SETDIR directives have been processed and after $@ is
-       assigned, but before prerequisites are processed;  thereby  making  the
-       values  of  conditional macro definitions available during construction
-       of prerequisites.
 
-       If a %-meta rule target has associated conditional  macro  assignments,
-       and  the rule is chosen by the inference algorithm then the conditional
-       macro assignments are inferred together with the associated recipe.
 
-DYNAMIC PREREQUISITES
-       dmake looks for prerequisites whose names contain macro expansions dur-
-       ing  target  processing.   Any  such prerequisites are expanded and the
-       result of the expansion is used as the prerequisite name.  As an  exam-
-       ple the line:
+DMAKE(1)                                                              DMAKE(1)
 
-       fred : $$@.c
 
-       causes  the  $$@  to  be  expanded  when  dmake  is making fred, and it
-       resolves to the target fred.  This enables dynamic prerequisites to  be
-       generated.   The  value  of @ may be modified by any of the valid macro
        modifiers.  So you can say for example:
 
        fred.out : $$(@:b).c
 
-       where the $$(@:b) expands to fred.  Note the use of $$ instead of $  to
-       indicate  the  dynamic expansion, this is due to the fact that the rule
-       line is expanded when it is initially parsed, and  $$  then  returns  $
+       where  the $$(@:b) expands to fred.  Note the use of $$ instead of $ to
+       indicate the dynamic expansion, this is due to the fact that  the  rule
+       line  is  expanded  when  it is initially parsed, and $$ then returns $
        which later triggers the dynamic prerequisite expansion.  If you really
-       want a $ to be part of a prerequisite name you must use $$$$.   Dynamic
+       want  a $ to be part of a prerequisite name you must use $$$$.  Dynamic
        macro expansion is performed in all user defined rules, and the special
        targets .SOURCE*, and .INCLUDEDIRS.
 
-       If dynamic macro expansion results in multiple  white  space  separated
-       tokens  then  these  are inserted into the prerequisite list inplace of
-       the dynamic prerequisite.  If the new list contains additional  dynamic
+       If  dynamic  macro  expansion results in multiple white space separated
+       tokens then these are inserted into the prerequisite  list  inplace  of
+       the  dynamic prerequisite.  If the new list contains additional dynamic
        prerequisites they will be expanded when they are processed.  The level
-       of recursion in this expansion is controlled by the value of the  vari-
+       of  recursion in this expansion is controlled by the value of the vari-
        able DYNAMICNESTINGLEVEL and is set to 100 by default.
 
 BINDING TARGETS
        This operation takes a target name and binds it to an existing file, if
-       possible.  dmake makes a distinction between the internal  target  name
+       possible.   dmake  makes a distinction between the internal target name
        of a target and its associated external file name.  Thus it is possible
-       for a target's internal name and its external file name to differ.   To
-       perform  the  binding, the following set of rules is used.  Assume that
-       we are trying to bind a target whose name is of the form X.suff,  where
+       for  a target's internal name and its external file name to differ.  To
+       perform the binding, the following set of rules is used.   Assume  that
+       we  are trying to bind a target whose name is of the form X.suff, where
        .suff is the suffix and X is the stem portion (ie. that part which con-
-       tains the directory and the basename).  dmake takes  this  target  name
-       and  performs a series of search operations that try to find a suitably
-       named file in the external file system.  The search operation  is  user
+       tains  the  directory  and the basename).  dmake takes this target name
+       and performs a series of search operations that try to find a  suitably
+       named  file  in the external file system.  The search operation is user
        controlled via the settings of the various .SOURCE targets.
 
-              1.     If  target has the .SYMBOL attribute set then look for it
-                     in the library.  If found, replace the target  name  with
+              1.     If target has the .SYMBOL attribute set then look for  it
+                     in  the  library.  If found, replace the target name with
                      the library member name and continue with step 2.  If the
                      name is not found then return.
 
-              2.     Extract the suffix portion (that following  the  `.')  of
-                     the  target name.  If the suffix is not null, look up the
+              2.     Extract  the  suffix  portion (that following the `.') of
+                     the target name.  If the suffix is not null, look up  the
                      special target .SOURCE.<suff> (<suff> is the suffix).  If
-                     the  special  target  exists  then  search each directory
-                     given in the .SOURCE.<suff>  prerequisite  list  for  the
-                     target.   If  the target's suffix was null (ie. .suff was
-                     empty) then perform the above search but use the  special
-                     target  .SOURCE.NULL instead.  If at any point a match is
+                     the special target  exists  then  search  each  directory
+                     given  in  the  .SOURCE.<suff>  prerequisite list for the
+                     target.  If the target's suffix was null (ie.  .suff  was
+                     empty)  then perform the above search but use the special
+                     target .SOURCE.NULL instead.  If at any point a match  is
+                     found  then  terminate the search.  If a directory in the
+                     prerequisite list is the special name `.NULL ' perform  a
+                     search  for  the  full target name without prepending any
+                     directory portion (ie. prepend the NULL directory).
 
+              3.     The search in step 2. failed.  Repeat the same search but
+                     this  time  use  the  special target .SOURCE.  (a default
+                     target of '.SOURCE  :  .NULL'  is  defined  by  dmake  at
+                     startup, and is user redefinable)
 
+              4.     The  search  in  step  3.  failed.  If the target has the
+                     library member attribute (.LIBMEMBER)  set  then  try  to
 
-Version 4.3                           UW                                    31
 
 
+Version 4.4                           UW                                    34
 
 
 
-DMAKE(1)                                                              DMAKE(1)
 
 
-                     found then terminate the search.  If a directory  in  the
-                     prerequisite  list is the special name `.NULL ' perform a
-                     search for the full target name  without  prepending  any
-                     directory portion (ie. prepend the NULL directory).
+DMAKE(1)                                                              DMAKE(1)
 
-              3.     The search in step 2. failed.  Repeat the same search but
-                     this time use the special  target  .SOURCE.   (a  default
-                     target  of  '.SOURCE  :  .NULL'  is  defined  by dmake at
-                     startup, and is user redefinable)
 
-              4.     The search in step 3. failed.   If  the  target  has  the
-                     library  member  attribute  (.LIBMEMBER)  set then try to
-                     find the target in the library  which  was  passed  along
-                     with  the  .LIBMEMBER attribute (see the MAKING LIBRARIES
+                     find  the  target  in  the library which was passed along
+                     with the .LIBMEMBER attribute (see the  MAKING  LIBRARIES
                      section).  The bound file name assigned to a target which
-                     is  successfully  located  in  a library is the same name
+                     is successfully located in a library  is  the  same  name
                      that would be assigned had the search failed (see 5.).
 
-              5.     The search failed.  Either the target was  not  found  in
-                     any  of  the  search directories or no applicable .SOURCE
-                     special targets exist.   If  applicable  .SOURCE  special
-                     targets  exist,  but the target was not found, then dmake
-                     assigns the first name searched as the bound  file  name.
-                     If  no applicable .SOURCE special targets exist, then the
+              5.     The  search  failed.   Either the target was not found in
+                     any of the search directories or  no  applicable  .SOURCE
+                     special  targets  exist.   If  applicable .SOURCE special
+                     targets exist, but the target was not found,  then  dmake
+                     assigns  the  first name searched as the bound file name.
+                     If no applicable .SOURCE special targets exist, then  the
                      full original target name becomes the bound file name.
 
-       There is potential here for a lot of search operations.  The  trick  is
-       to  define  .SOURCE.x special targets with short search lists and leave
-       .SOURCE as short as possible.  The search algorithm has  the  following
-       useful  side effect.  When a target having the .LIBMEMBER (library mem-
+       There  is  potential here for a lot of search operations.  The trick is
+       to define .SOURCE.x special targets with short search lists  and  leave
+       .SOURCE  as  short as possible.  The search algorithm has the following
+       useful side effect.  When a target having the .LIBMEMBER (library  mem-
        ber) attribute is searched for, it is first searched for as an ordinary
-       file.   When  a number of library members require updating it is desir-
-       able to compile all of them first and to update the library at the  end
-       in  a  single  operation.   If  one of the members does not compile and
-       dmake stops, then the user may fix the error  and  make  again.   dmake
+       file.  When a number of library members require updating it  is  desir-
+       able  to compile all of them first and to update the library at the end
+       in a single operation.  If one of the  members  does  not  compile  and
+       dmake  stops,  then  the  user may fix the error and make again.  dmake
        will not remake any of the targets whose object files have already been
-       generated as long as none of their prerequisite files have  been  modi-
+       generated  as  long as none of their prerequisite files have been modi-
        fied as a result of the fix.
 
-       When  dmake constructs target pathnames './' substrings are removed and
-       substrings of the form 'foo/..' are eliminated.   This  may  result  in
+       When dmake constructs target pathnames './' substrings are removed  and
+       substrings  of  the  form  'foo/..' are eliminated.  This may result in
        somewhat unexpected values of the macro expansion $@, but is infact the
        corect result.
 
@@ -2262,27 +2352,29 @@
        is equivalent to
 
 
-       dmake correctly handles the UNIX Make variable  VPATH.   By  definition
+       dmake  correctly  handles  the UNIX Make variable VPATH.  By definition
        VPATH contains a list of ':' separated directories to search when look-
        ing for a target.  dmake maps VPATH to the following special rule:
 
 
-       Which takes the value of VPATH and sets .SOURCE  to  the  same  set  of
+       Which  takes  the  value  of  VPATH and sets .SOURCE to the same set of
        directories as specified in VPATH.
 
 PERCENT(%) RULES AND MAKING INFERENCES
-       When  dmake  makes a target, the target's set of prerequisites (if any)
-       must exist and the target must have a recipe which  dmake  can  use  to
-       make  it.   If the makefile does not specify an explicit recipe for the
-       target then dmake uses special rules to try to infer a recipe which  it
-       can  use  to  make  the target.  Previous versions of Make perform this
-       task by using rules that are defined by  targets  of  the  form  .<suf-
-       fix>.<suffix>  and  by using the .SUFFIXES list of suffixes.  The exact
-       workings of this mechanism were sometimes difficult to  understand  and
+       When dmake makes a target, the target's set of prerequisites  (if  any)
+       must  exist  and  the  target must have a recipe which dmake can use to
+       make it.  If the makefile does not specify an explicit recipe  for  the
+       target  then dmake uses special rules to try to infer a recipe which it
+       can use to make the target.  Previous versions  of  Make  perform  this
+       task  by  using  rules  that  are defined by targets of the form .<suf-
+       fix>.<suffix> and by using the .SUFFIXES list of suffixes.   The  exact
+       workings  of  this mechanism were sometimes difficult to understand and
+       often limiting in their usefulness.  Instead, dmake supports  the  con-
+       cept  of  %-meta rules.  The syntax and semantics of these rules differ
 
 
 
-Version 4.3                           UW                                    32
+Version 4.4                           UW                                    35
 
 
 
@@ -2291,23 +2383,21 @@
 DMAKE(1)                                                              DMAKE(1)
 
 
-       often  limiting  in their usefulness.  Instead, dmake supports the con-
-       cept of %-meta rules.  The syntax and semantics of these  rules  differ
        from standard rule lines as follows:
 
               <%-target> [<attributes>] <ruleop> [<%-prerequisites>] [;<recipe>]
 
-       where  %-target  is  a  target  containing  exactly  a single `%' sign,
-       attributes is a list (possibly empty)  of  attributes,  ruleop  is  the
+       where %-target is a  target  containing  exactly  a  single  `%'  sign,
+       attributes  is  a  list  (possibly  empty) of attributes, ruleop is the
        standard set of rule operators, %-prerequisites , if present, is a list
-       of prerequisites containing zero or more  `%'  signs,  and  recipe,  if
+       of  prerequisites  containing  zero  or  more `%' signs, and recipe, if
        present, is the first line of the recipe.
 
-       The  %-target  defines a pattern against which a target whose recipe is
-       being inferred gets matched.  The pattern match goes as  follows:   all
-       chars  are  matched  exactly from left to right up to but not including
-       the % sign in the pattern, % then matches the longest string  from  the
-       actual  target  name not ending in the suffix given after the % sign in
+       The %-target defines a pattern against which a target whose  recipe  is
+       being  inferred  gets matched.  The pattern match goes as follows:  all
+       chars are matched exactly from left to right up to  but  not  including
+       the  %  sign in the pattern, % then matches the longest string from the
+       actual target name not ending in the suffix given after the %  sign  in
        the pattern.  Consider the following examples:
 
               %.c       matches fred.c but not joe.c.Z
@@ -2315,15 +2405,15 @@
               fred/%    matches fred/joe.c but not f/joe.c
               %         matches anything
 
-       In each case the part of the target name that matched  the  %  sign  is
+       In  each  case  the  part of the target name that matched the % sign is
        retained and is substituted for any % signs in the prerequisite list of
-       the %-meta rule when the rule is selected during  inference  and  dmake
-       constructs  the  new  dependency.   As  an example the following %-meta
+       the  %-meta  rule  when the rule is selected during inference and dmake
+       constructs the new dependency.  As  an  example  the  following  %-meta
        rules describe the following:
 
               %.c : %.y ; recipe...
 
-       describes how to make any file ending in .c  if  a  corresponding  file
+       describes  how  to  make  any file ending in .c if a corresponding file
        ending in .y can be found.
 
               foo%.o : fee%.k ; recipe...
@@ -2332,7 +2422,7 @@
 
               %.a :; recipe...
 
-       describes  how  to make a file whose suffix is .a without inferring any
+       describes how to make a file whose suffix is .a without  inferring  any
        prerequisites.
 
               %.c : %.y yaccsrc/%.y ; recipe...
@@ -2343,74 +2433,74 @@
               %.c : yaccsrc/%.y ; recipe...
 
        ie. It is possible to specify the same recipe for two %-rules by giving
-       more  than one prerequisite in the prerequisite list.  A more interest-
+       more than one prerequisite in the prerequisite list.  A more  interest-
        ing example is:
 
               % : RCS/%,v ; co $<
 
-       which describes how to take any target and check  it  out  of  the  RCS
-       directory  if  the corresponding file exists in the RCS directory.  The
-       equivalent SCCS rule would be:
+       which  describes  how  to  take  any target and check it out of the RCS
+       directory if the corresponding file exists in the RCS  directory.   The
 
-              % : s.% ; get $<
 
 
-       The previous RCS example defines an infinite rule, because it says  how
-       to make anything from RCS/%,v, and anything also includes RCS/fred.c,v.
-       To limit the size of the graph that results from such rules dmake  uses
+Version 4.4                           UW                                    36
 
 
 
-Version 4.3                           UW                                    33
 
 
+DMAKE(1)                                                              DMAKE(1)
 
 
+       equivalent SCCS rule would be:
 
-DMAKE(1)                                                              DMAKE(1)
+              % : s.% ; get $<
 
 
-       the  macro  variable  PREP  (stands  for % repetition).  By default the
+       The  previous RCS example defines an infinite rule, because it says how
+       to make anything from RCS/%,v, and anything also includes RCS/fred.c,v.
+       To  limit the size of the graph that results from such rules dmake uses
+       the macro variable PREP (stands for  %  repetition).   By  default  the
        value of this variable is 0, which says that no repetitions of a %-rule
-       are  to  be  generated.  If it is set to something greater than 0, then
-       that many repetitions of any infinite %-rule are allowed.   If  in  the
-       above  example  PREP was set to 1, then dmake would generate the depen-
+       are to be generated.  If it is set to something greater  than  0,  then
+       that  many  repetitions  of any infinite %-rule are allowed.  If in the
+       above example PREP was set to 1, then dmake would generate  the  depen-
        dency graph:
 
               % --> RCS/%,v --> RCS/RCS/%,v,v
 
-       Where each link is assigned the same recipe as the  first  link.   PREP
-       should  be  used  only in special cases, since it may result in a large
+       Where  each  link  is assigned the same recipe as the first link.  PREP
+       should be used only in special cases, since it may result  in  a  large
        increase in the number of possible prerequisites tested.  dmake further
        assumes that any target that has no suffix can be made from a prerequi-
        site that has at least one suffix.
 
-       dmake supports dynamic prerequisite  generation  for  prerequisites  of
-       %-meta  rules.   This  is best illustrated by an example.  The RCS rule
-       shown above can infer how to check out a file from a corresponding  RCS
-       file  only if the target is a simple file name with no directory infor-
-       mation.  That is, the above rule can infer  how  to  find  RCS/fred.c,v
-       from    the   target   fred.c,   but   cannot   infer   how   to   find
-       srcdir/RCS/fred.c,v from srcdir/fred.c  because  the  above  rule  will
-       cause  dmake  to  look  for  RCS/srcdir/fred.c,v;  which does not exist
+       dmake  supports  dynamic  prerequisite  generation for prerequisites of
+       %-meta rules.  This is best illustrated by an example.   The  RCS  rule
+       shown  above can infer how to check out a file from a corresponding RCS
+       file only if the target is a simple file name with no directory  infor-
+       mation.   That  is,  the  above rule can infer how to find RCS/fred.c,v
+       from   the   target   fred.c,   but   cannot   infer   how   to    find
+       srcdir/RCS/fred.c,v  from  srcdir/fred.c  because  the  above rule will
+       cause dmake to look  for  RCS/srcdir/fred.c,v;  which  does  not  exist
        (assume that srcdir has its own RCS directory as is the common case).
 
-       A more versatile formulation of the above RCS check  out  rule  is  the
+       A  more  versatile  formulation  of the above RCS check out rule is the
        following:
 
               % :  $$(@:d)RCS/$$(@:f),v : co $@
 
-       This  rule uses the dynamic macro $@ to specify the prerequisite to try
-       to infer.  During inference of this rule the macro $@  is  set  to  the
+       This rule uses the dynamic macro $@ to specify the prerequisite to  try
+       to  infer.   During  inference  of this rule the macro $@ is set to the
        value of the target of the %-meta rule and the appropriate prerequisite
        is generated by extracting the directory portion of the target name (if
-       any),  appending  the  string RCS/ to it, and appending the target file
+       any), appending the string RCS/ to it, and appending  the  target  file
        name with a trailing ,v attached to the previous result.
 
-       dmake can also infer indirect prerequisites.  An  inferred  target  can
-       have  a  list of prerequisites added that will not show up in the value
-       of $< but will show up in the value of $? and $&.   Indirect  prerequi-
-       sites  are  specified  in an inference rule by quoting the prerequisite
+       dmake  can  also  infer indirect prerequisites.  An inferred target can
+       have a list of prerequisites added that will not show up in  the  value
+       of  $<  but will show up in the value of $? and $&.  Indirect prerequi-
+       sites are specified in an inference rule by  quoting  the  prerequisite
        with single quotes.  For example, if you had the explicit dependency:
 
               fred.o : fred.c ; rule to make fred.o
@@ -2420,34 +2510,33 @@
 
               %.o : %.c 'local.h' ; makes a .o from a .c
 
-       You  may  infer indirect prerequisites that are a function of the value
-       of '%' in the current rule.  The meta-rule:
 
-              %.o : %.c '$(INC)/%.h' ; rule to make a .o from a .c
-
-       infers an indirect prerequisite found in the INC directory  whose  name
-       is  the  same  as  the  expansion  of $(INC), and the prerequisite name
-       depends on the base name of the current target.  The  set  of  indirect
-       prerequisites  is attached to the meta rule in which they are specified
-       and are inferred only if the rule is used to infer a recipe for a  tar-
-       get.   They  do  not play an active role in driving the inference algo-
-       rithm.  The construct:
 
-              %.o : %.c %.f 'local.h'; recipe
+Version 4.4                           UW                                    37
 
-       is equivalent to:
 
 
 
 
-Version 4.3                           UW                                    34
+DMAKE(1)                                                              DMAKE(1)
 
 
+       You may infer indirect prerequisites that are a function of  the  value
+       of '%' in the current rule.  The meta-rule:
 
+              %.o : %.c '$(INC)/%.h' ; rule to make a .o from a .c
 
+       infers  an  indirect prerequisite found in the INC directory whose name
+       is the same as the expansion  of  $(INC),  and  the  prerequisite  name
+       depends  on  the  base name of the current target.  The set of indirect
+       prerequisites is attached to the meta rule in which they are  specified
+       and  are inferred only if the rule is used to infer a recipe for a tar-
+       get.  They do not play an active role in driving  the  inference  algo-
+       rithm.  The construct:
 
-DMAKE(1)                                                              DMAKE(1)
+              %.o : %.c %.f 'local.h'; recipe
 
+       is equivalent to:
 
               %.o : %.c 'local.h' : recipe
 
@@ -2464,19 +2553,19 @@
        If any of the attributes .SETDIR, .EPILOG, .PROLOG, .SILENT, .USESHELL,
        .SWAP, .PRECIOUS, .LIBRARY, .NOSTATE and .IGNORE are given for a %-rule
        then when that rule is bound to a target as the result of an inference,
-       the  target's set of attributes is augmented by the attributes from the
-       above set that are specified in the  bound  %-rule.   Other  attributes
-       specified  for %-meta rules are not inherited by the target.  The .SET-
+       the target's set of attributes is augmented by the attributes from  the
+       above  set  that  are  specified in the bound %-rule.  Other attributes
+       specified for %-meta rules are not inherited by the target.  The  .SET-
        DIR attribute is treated in a special way.  If the target already had a
-       .SETDIR  attribute  set  then  dmake changes to that directory prior to
-       performing the inference.  During inference any .SETDIR attributes  for
-       the  inferred prerequisite are honored.  The directories must exist for
-       a %-meta rule to be selected as a  possible  inference  path.   If  the
+       .SETDIR attribute set then dmake changes to  that  directory  prior  to
+       performing  the inference.  During inference any .SETDIR attributes for
+       the inferred prerequisite are honored.  The directories must exist  for
+       a  %-meta  rule  to  be  selected as a possible inference path.  If the
        directories do not exist no error message is issued, instead the corre-
        sponding path in the inference graph is rejected.
 
        dmake also supports the old format special target .<suffix>.<suffix> by
-       identifying  any rules of this form and mapping them to the appropriate
+       identifying any rules of this form and mapping them to the  appropriate
        %-rule.  So for example if an old makefile contains the construct:
 
               .c.o :; cc -c $< -o $@
@@ -2486,10 +2575,21 @@
               %.o : %.c; cc -c $< -o $@
 
        Furthermore, dmake understands several SYSV AUGMAKE special targets and
-       maps  them  into corresponding %-meta rules.  These transformation must
-       be enabled by providing the -A flag on the command line or  by  setting
+       maps them into corresponding %-meta rules.  These  transformation  must
+       be  enabled  by providing the -A flag on the command line or by setting
        the value of AUGMAKE to non-NULL.  The construct
 
+
+
+Version 4.4                           UW                                    38
+
+
+
+
+
+DMAKE(1)                                                              DMAKE(1)
+
+
               .suff :; recipe
 
        gets mapped into:
@@ -2504,85 +2604,85 @@
 
               %.o : s.%.c ; recipe
 
-       In  general,  a  special  target of the form .<str>~ is replaced by the
-       %-rule construct s.%.<str>, thereby providing support  for  the  syntax
-       used  by  SYSV AUGMAKE for providing SCCS support.  When enabled, these
-       mappings allow processing of existing SYSV makefiles without  modifica-
+       In general, a special target of the form .<str>~  is  replaced  by  the
+       %-rule  construct  s.%.<str>,  thereby providing support for the syntax
+       used by SYSV AUGMAKE for providing SCCS support.  When  enabled,  these
+       mappings  allow processing of existing SYSV makefiles without modifica-
        tions.
 
-       dmake  bases  all  of its inferences on the inference graph constructed
-       from the %-rules defined in the makefile.  It knows exactly which  tar-
-       gets  can  be  made  from  which prerequisites by making queries on the
-       inference graph.  For this reason .SUFFIXES is not needed and  is  com-
+       dmake bases all of its inferences on the  inference  graph  constructed
+       from  the %-rules defined in the makefile.  It knows exactly which tar-
+       gets can be made from which prerequisites  by  making  queries  on  the
+       inference  graph.   For this reason .SUFFIXES is not needed and is com-
        pletely ignored.
 
+       For a %-meta rule to be inferred as the rule whose recipe will be  used
+       to  make  a  target, the target's name must match the %-target pattern,
+       and any inferred %-prerequisite must already exist or have an  explicit
+       recipe  so  that the prerequisite can be made.  Without transitive clo-
+       sure on the inference graph the above rule describes precisely when  an
+       inference  match  terminates  the  search.   If  transitive  closure is
+       enabled (the usual case), and a prerequisite does not exist  or  cannot
+       be  made, then dmake invokes the inference algorithm recursively on the
+       prerequisite to see if there is some way the prerequisite can be  manu-
+       factured.  For, if the prerequisite can be made then the current target
+       can also be made using the current %-meta rule.  This means that  there
+       is  no  longer  a  need to give a rule for making a .o from a .y if you
+       have already given a rule for making a .o from a .c and a .c from a .y.
+       In  such  cases  dmake can infer how to make the .o from the .y via the
+       intermediary .c and will remove the .c when the .o is made.  Transitive
+       closure can be disabled by giving the -T switch on the command line.
 
+       A  word  of  caution.  dmake bases its transitive closure on the %-meta
+       rule targets.  When it performs transitive closure  it  infers  how  to
+       make  a  target from a prerequisite by performing a pattern match as if
+       the potential prerequisite were a new target.  The set of rules:
 
+              %.o : %.c :; rule for making .o from .c
+              %.c : %.y :; rule for making .c from .y
+              % : RCS/%,v :; check out of RCS file
 
-Version 4.3                           UW                                    35
+       will, by performing transitive closure, allow dmake  to  infer  how  to
+       make  a  .o  from  a  .y  using a .c as an intermediate temporary file.
+       Additionally it will be able to infer how to make  a  .y  from  an  RCS
+       file,  as  long as that RCS file is in the RCS directory and has a name
+       which  ends  in  .y,v.   The  transitivity  computation  is   performed
 
 
 
+Version 4.4                           UW                                    39
 
 
-DMAKE(1)                                                              DMAKE(1)
 
 
-       For  a %-meta rule to be inferred as the rule whose recipe will be used
-       to make a target, the target's name must match  the  %-target  pattern,
-       and  any inferred %-prerequisite must already exist or have an explicit
-       recipe so that the prerequisite can be made.  Without  transitive  clo-
-       sure  on the inference graph the above rule describes precisely when an
-       inference match  terminates  the  search.   If  transitive  closure  is
-       enabled  (the  usual case), and a prerequisite does not exist or cannot
-       be made, then dmake invokes the inference algorithm recursively on  the
-       prerequisite  to see if there is some way the prerequisite can be manu-
-       factured.  For, if the prerequisite can be made then the current target
-       can  also be made using the current %-meta rule.  This means that there
-       is no longer a need to give a rule for making a .o from  a  .y  if  you
-       have already given a rule for making a .o from a .c and a .c from a .y.
-       In such cases dmake can infer how to make the .o from the  .y  via  the
-       intermediary .c and will remove the .c when the .o is made.  Transitive
-       closure can be disabled by giving the -T switch on the command line.
 
-       A word of caution.  dmake bases its transitive closure  on  the  %-meta
-       rule  targets.   When  it  performs transitive closure it infers how to
-       make a target from a prerequisite by performing a pattern match  as  if
-       the potential prerequisite were a new target.  The set of rules:
+DMAKE(1)                                                              DMAKE(1)
 
-              %.o : %.c :; rule for making .o from .c
-              %.c : %.y :; rule for making .c from .y
-              % : RCS/%,v :; check out of RCS file
 
-       will,  by  performing  transitive  closure, allow dmake to infer how to
-       make a .o from a .y using a  .c  as  an  intermediate  temporary  file.
-       Additionally  it  will  be  able  to infer how to make a .y from an RCS
-       file, as long as that RCS file is in the RCS directory and has  a  name
-       which  ends in .y,v.  The transitivity computation is performed dynami-
-       cally for each target that does not have a recipe.  This has  potential
-       to  be  costly  if  the  %-meta rules are not carefully specified.  The
-       .NOINFER attribute is used to mark a %-meta node as being a final  tar-
-       get  during  inference.   Any  node with this attribute set will not be
-       used for subsequent inferences.  As an  example  the  node  RCS/%,v  is
-       marked  as  a  final  node  since we know that if the RCS file does not
-       exist there likely is no other way  to  make  it.   Thus  the  standard
+       dynamically  for  each  target  that  does not have a recipe.  This has
+       potential to be costly if the %-meta rules are not carefully specified.
+       The  .NOINFER  attribute is used to mark a %-meta node as being a final
+       target during inference.  Any node with this attribute set will not  be
+       used  for  subsequent  inferences.   As  an example the node RCS/%,v is
+       marked as a final node since we know that if  the  RCS  file  does  not
+       exist  there  likely  is  no  other  way to make it.  Thus the standard
        startup makefile contains an entry similar to:
               .NOINFER : RCS/%,v
        Thereby indicating that the RCS file is the end of the inference chain.
-       Whenever the inference algorithm determines that a target can  be  made
-       from  more  than  one prerequisite and the inference chains for the two
-       methods are the same length the  algorithm  reports  an  ambiguity  and
+       Whenever  the  inference algorithm determines that a target can be made
+       from more than one prerequisite and the inference chains  for  the  two
+       methods  are  the  same  length  the algorithm reports an ambiguity and
        prints the ambiguous inference chains.
 
        dmake tries to remove intermediate files resulting from transitive clo-
-       sure if the file is not marked as being PRECIOUS, or the  -u  flag  was
+       sure  if  the  file is not marked as being PRECIOUS, or the -u flag was
        not given on the command line, and if the inferred intermediate did not
-       previously exist.  Intermediate targets that  existed  prior  to  being
-       made  are  never  removed.  This is in keeping with the philosophy that
-       dmake should never remove things from the file system that it  did  not
-       add.   If  the  special target .REMOVE is defined and has a recipe then
-       dmake constructs a list of the intermediate files  to  be  removed  and
-       makes  them  prerequisites  of  .REMOVE.  It then makes .REMOVE thereby
+       previously  exist.   Intermediate  targets  that existed prior to being
+       made are never removed.  This is in keeping with  the  philosophy  that
+       dmake  should  never remove things from the file system that it did not
+       add.  If the special target .REMOVE is defined and has  a  recipe  then
+       dmake  constructs  a  list  of the intermediate files to be removed and
+       makes them prerequisites of .REMOVE.  It  then  makes  .REMOVE  thereby
        removing the prerequisites if the recipe of .REMOVE says to.  Typically
        .REMOVE is defined in the startup file as:
 
@@ -2590,58 +2690,58 @@
 
 MAKING TARGETS
        In order to update a target dmake must execute a recipe.  When a recipe
-       needs to be executed it is first expanded so that  any  macros  in  the
-       recipe  text  are  expanded, and it is then either executed directly or
-       passed to a shell.  dmake supports two types of recipes.   The  regular
+       needs  to  be  executed  it is first expanded so that any macros in the
+       recipe text are expanded, and it is then either  executed  directly  or
+       passed  to  a shell.  dmake supports two types of recipes.  The regular
        recipes and group recipes.
 
+       When a regular recipe is invoked dmake executes each line of the recipe
+       separately  using  a  new copy of a shell if a shell is required.  Thus
+       effects of commands do not generally persist across recipe lines  (e.g.
+       cd  requests  in  a  recipe  line  do not carry over to the next recipe
+       line).  This is true even in environments such as  MSDOS,  where  dmake
+       internally  sets the current working director to match the directory it
+       was in before the command was executed.
 
+       The decision on whether a shell is required to  execute  a  command  is
+       based  on  the value of the macro SHELLMETAS or on the specification of
+       '+' or .USESHELL for the current recipe or target respectively.  If any
+       character  in  the  value of SHELLMETAS is found in the expanded recipe
+       text-line or the use of a shell is  requested  explicitly  via  '+'  or
+       .USESHELL  then  the  command  is executed using a shell, otherwise the
+       command is executed directly.  The shell that is used for execution  is
+       given  by  the  value of the macro SHELL.  The flags that are passed to
+       the shell are given by the value of SHELLFLAGS.  Thus dmake  constructs
+       the command line:
 
+       $(SHELL) $(SHELLFLAGS) $(expanded_recipe_command)
 
-Version 4.3                           UW                                    36
 
 
 
+Version 4.4                           UW                                    40
 
 
-DMAKE(1)                                                              DMAKE(1)
 
 
-       When a regular recipe is invoked dmake executes each line of the recipe
-       separately using a new copy of a shell if a shell  is  required.   Thus
-       effects  of commands do not generally persist across recipe lines (e.g.
-       cd requests in a recipe line do not  carry  over  to  the  next  recipe
-       line).   This  is  true even in environments such as MSDOS, where dmake
-       internally sets the current working director to match the directory  it
-       was in before the command was executed.
 
-       The  decision  on  whether  a shell is required to execute a command is
-       based on the value of the macro SHELLMETAS or on the  specification  of
-       '+' or .USESHELL for the current recipe or target respectively.  If any
-       character in the value of SHELLMETAS is found in  the  expanded  recipe
-       text-line  or  the  use  of  a shell is requested explicitly via '+' or
-       .USESHELL then the command is executed using  a  shell,  otherwise  the
-       command  is executed directly.  The shell that is used for execution is
-       given by the value of the macro SHELL.  The flags that  are  passed  to
-       the  shell are given by the value of SHELLFLAGS.  Thus dmake constructs
-       the command line:
+DMAKE(1)                                                              DMAKE(1)
 
-       $(SHELL) $(SHELLFLAGS) $(expanded_recipe_command)
 
-       Normally dmake writes the command line that it is about  to  invoke  to
+       Normally  dmake  writes  the command line that it is about to invoke to
        standard output.  If the .SILENT attribute is set for the target or for
        the recipe line (via @), then the recipe line is not echoed.
 
-       Group recipe processing is similar to that of regular  recipes,  except
-       that  a shell is always invoked.  The shell that is invoked is given by
-       the value of the macro GROUPSHELL, and its flags  are  taken  from  the
-       value  of  the macro GROUPFLAGS.  If a target has the .PROLOG attribute
-       set then dmake prepends to the shell script the recipe associated  with
+       Group  recipe  processing is similar to that of regular recipes, except
+       that a shell is always invoked.  The shell that is invoked is given  by
+       the  value  of  the  macro GROUPSHELL, and its flags are taken from the
+       value of the macro GROUPFLAGS.  If a target has the  .PROLOG  attribute
+       set  then dmake prepends to the shell script the recipe associated with
        the special target .GROUPPROLOG, and if the attribute .EPILOG is set as
-       well, then the recipe associated with the special  target  .GROUPEPILOG
-       is  appended  to  the script file.  This facility can be used to always
-       prepend a common header and common trailer  to  group  recipes.   Group
-       recipes  are  echoed to standard output just like standard recipes, but
+       well,  then  the recipe associated with the special target .GROUPEPILOG
+       is appended to the script file.  This facility can be  used  to  always
+       prepend  a  common  header  and common trailer to group recipes.  Group
+       recipes are echoed to standard output just like standard  recipes,  but
        are enclosed by lines beginning with [ and ].
 
        The recipe flags [+,-,%,@] are recognized at the start of a recipe line
@@ -2658,16 +2758,16 @@
               +echo hi
 
 
-       The  last  step  performed by dmake prior to running a recipe is to set
+       The last step performed by dmake prior to running a recipe  is  to  set
        the macro CMNDNAME to the name of the command to execute (determined by
-       finding  the  first  white-space ending token in the command line).  It
-       then sets the macro CMNDARGS to be the remainder of  the  line.   dmake
+       finding the first white-space ending token in the  command  line).   It
+       then  sets  the  macro CMNDARGS to be the remainder of the line.  dmake
        then expands the macro COMMAND which by default is set to
 
               COMMAND = $(CMNDNAME) $(CMNDARGS)
 
-       The  result  of  this  final expansion is the command that will be exe-
-       cuted.  The reason for this expansion  is  to  allow  for  a  different
+       The result of this final expansion is the command  that  will  be  exe-
+       cuted.   The  reason  for  this  expansion  is to allow for a different
        interface to the argument passing facilities (esp. under DOS) than that
        provided by dmake.  You can for example define COMMAND to be
 
@@ -2675,35 +2775,36 @@
 
        which dumps the arguments into a temporary file and runs the command
 
+              $(CMNDNAME) @/tmp/ASAD23043
 
+       which has a much shorter argument list.  It is now up to the command to
+       use the supplied argument as the source for all other arguments.  As an
+       optimization,  if  COMMAND  is  not  defined dmake does not perform the
+       above expansion.  On systems, such as UNIX, that  handle  long  command
+       lines this provides a slight saving in processing the makefiles.
 
-Version 4.3                           UW                                    37
+MAKING LIBRARIES
+       Libraries  are  easy to maintain using dmake.  A library is a file con-
+       taining a collection of object files.   Thus  to  make  a  library  you
 
 
 
+Version 4.4                           UW                                    41
 
 
-DMAKE(1)                                                              DMAKE(1)
 
 
-              $(CMNDNAME) @/tmp/ASAD23043
 
-       which has a much shorter argument list.  It is now up to the command to
-       use the supplied argument as the source for all other arguments.  As an
-       optimization, if COMMAND is not defined  dmake  does  not  perform  the
-       above  expansion.   On  systems, such as UNIX, that handle long command
-       lines this provides a slight saving in processing the makefiles.
+DMAKE(1)                                                              DMAKE(1)
 
-MAKING LIBRARIES
-       Libraries are easy to maintain using dmake.  A library is a  file  con-
-       taining  a collection of object files.  Thus to make a library you sim-
-       ply specify it as a target with the .LIBRARY attribute set and  specify
-       its list of prerequisites.  The prerequisites should be the object mem-
-       bers that are to go into the library.  When  dmake  makes  the  library
-       target  it uses the .LIBRARY attribute to pass to the prerequisites the
-       .LIBMEMBER attribute and the name of the  library.   This  enables  the
-       file  binding  mechanism  to  look  for the member in the library if an
-       appropriate object file  cannot  be  found.   dmake  now  supports  Elf
+
+       simply specify it as a target with the .LIBRARY attribute set and spec-
+       ify its list of prerequisites.  The prerequisites should be the  object
+       members  that are to go into the library.  When dmake makes the library
+       target it uses the .LIBRARY attribute to pass to the prerequisites  the
+       .LIBMEMBER  attribute  and  the  name of the library.  This enables the
+       file binding mechanism to look for the member  in  the  library  if  an
+       appropriate  object  file  cannot  be  found.   dmake  now supports Elf
        libraries on systems that support Elf and hence supports, on those sys-
        tems, long member file names.  A small example best illustrates this.
 
@@ -2714,18 +2815,18 @@
               # equivalent to:  '%.o : %.c ; ...'
               .c.o :; rules for making .o from .c say
 
-       dmake will use the .c.o rule for making the library members  if  appro-
-       priate  .c  files  can be found using the search rules.  NOTE:  this is
+       dmake  will  use the .c.o rule for making the library members if appro-
+       priate .c files can be found using the search rules.   NOTE:   this  is
        not specific in any way to C programs, they are simply used as an exam-
        ple.
 
-       dmake  tries  to  handle the old library construct format in a sensible
-       way.  The construct lib(member.o) is separated and the lib  portion  is
-       declared  as  a  library  target.   The  new target is defined with the
-       .LIBRARY attribute set and the member.o portion  of  the  construct  is
-       declared  as  a  prerequisite  of  the  lib  target.   If the construct
-       lib(member.o) appears as a prerequisite of a target  in  the  makefile,
-       that  target  has the new name of the lib assigned as its prerequisite.
+       dmake tries to handle the old library construct format  in  a  sensible
+       way.   The  construct lib(member.o) is separated and the lib portion is
+       declared as a library target.  The  new  target  is  defined  with  the
+       .LIBRARY  attribute  set  and  the member.o portion of the construct is
+       declared as a  prerequisite  of  the  lib  target.   If  the  construct
+       lib(member.o)  appears  as  a prerequisite of a target in the makefile,
+       that target has the new name of the lib assigned as  its  prerequisite.
        Thus the following example:
 
               a.out : ml.a(a.o) ml.a(b.o); $(CC) -o $@  $<
@@ -2749,14 +2850,16 @@
 
        and making a.out then works as expected.
 
-       The same thing happens for any target of the form lib((entry)).   These
-       targets  have  an  additional  feature in that the entry target has the
+       The  same thing happens for any target of the form lib((entry)).  These
+       targets have an additional feature in that the  entry  target  has  the
        .SYMBOL attribute set automatically.
 
+       NOTE:  If the notion of entry points is supported by the archive and by
+       dmake (currently not the case) then dmake will search the  archive  for
 
 
 
-Version 4.3                           UW                                    38
+Version 4.4                           UW                                    42
 
 
 
@@ -2765,77 +2868,68 @@
 DMAKE(1)                                                              DMAKE(1)
 
 
-       NOTE:  If the notion of entry points is supported by the archive and by
-       dmake  (currently  not the case) then dmake will search the archive for
        the entry point and return not only the modification time of the member
-       which  defines  the  entry  but also the name of the member file.  This
-       name will then replace entry and will be used  for  making  the  member
+       which defines the entry but also the name of  the  member  file.   This
+       name  will  then  replace  entry and will be used for making the member
        file.  Once bound to an archive member the .SYMBOL attribute is removed
        from the target.  This feature is presently disabled as there is little
-       standardization  among archive formats, and we have yet to find a make-
-       file utilizing this feature (possibly due to the fact that it is  unim-
+       standardization among archive formats, and we have yet to find a  make-
+       file  utilizing this feature (possibly due to the fact that it is unim-
        plemented in most versions of UNIX Make).
 
        Finally, when dmake looks for a library member it must first locate the
-       library file.  It does so by first looking for the library relative  to
-       the  current directory and if it is not found it then looks relative to
+       library  file.  It does so by first looking for the library relative to
+       the current directory and if it is not found it then looks relative  to
        the current value of $(TMD).  This allows commonly used libraries to be
        kept near the root of a source tree and to be easily found by dmake.
 
 KEEP STATE
-       dmake  supports  the  keeping  of state information for targets that it
+       dmake supports the keeping of state information  for  targets  that  it
        makes whenever the macro .KEEP_STATE is assigned a value.  The value of
-       the  macro  should  be  the  name of a state file that will contain the
-       state information.  If state keeping is enabled then each  target  that
-       does  not  poses the .NOSTATE attribute will have a record written into
+       the macro should be the name of a state  file  that  will  contain  the
+       state  information.   If state keeping is enabled then each target that
+       does not poses the .NOSTATE attribute will have a record  written  into
        the state file indicating the target's name, the current directory, the
-       command  used to update the target, and which, if any, :: rule is being
-       used.  When you make this target again if any of this information  does
+       command used to update the target, and which, if any, :: rule is  being
+       used.   When you make this target again if any of this information does
        not match the previous settings and the target is not out dated it will
-       still be re-made.  The assumption is that one of the  conditions  above
-       has  changed and that we wish to remake the target.  For example, state
-       keeping is used in the maintenance of dmake to test  compile  different
-       versions  of  the  source using different compilers.  Changing the com-
+       still  be  re-made.  The assumption is that one of the conditions above
+       has changed and that we wish to remake the target.  For example,  state
+       keeping  is  used in the maintenance of dmake to test compile different
+       versions of the source using different compilers.   Changing  the  com-
        piler causes the compilation flags to be modified and hence all sources
        to be recompiled.
 
-       The  state  file is an ascii file and is portable, however it is not in
-       human readable form as the entries represent hash  keys  of  the  above
+       The state file is an ascii file and is portable, however it is  not  in
+       human  readable  form  as  the entries represent hash keys of the above
        information.
 
        The Sun Microsystem's Make construct
 
               .KEEP_STATE :
 
-       is  recognized and is mapped to .KEEP_STATE:=_state.mk.  The dmake ver-
-       sion of state keeping does not include  scanning  C  source  files  for
-       dependencies  like Sun Make.  This is specific to C programs and it was
+       is recognized and is mapped to .KEEP_STATE:=_state.mk.  The dmake  ver-
+       sion  of  state  keeping  does  not include scanning C source files for
+       dependencies like Sun Make.  This is specific to C programs and it  was
        felt that it does not belong in make.  dmake instead provides the tool,
-       cdepend,  to  scan C source files and to produce depedency information.
-       Users are free to modify cdepend to  produce  other  dependency  files.
-       (NOTE:  cdepend  does  not come with the distribution at this time, but
+       cdepend, to scan C source files and to produce  depedency  information.
+       Users  are  free  to  modify cdepend to produce other dependency files.
+       (NOTE: cdepend does not come with the distribution at  this  time,  but
        will be available in a patch in the near future)
 
 MULTI PROCESSING
-       If the architecture supports it then dmake is capable of making a  tar-
-       get's  prerequisites  in parallel.  dmake will make as much in parallel
-       as it can and use a number of child processes up to the maximum  speci-
-       fied  by  MAXPROCESS  or  by  the value supplied to the -P command line
-       flag.  A parallel make is enabled by setting the  value  of  MAXPROCESS
-       (either  directly  or  via  -P  option) to a value which is > 1.  dmake
-       guarantees that all dependencies as specified in the makefile are  hon-
-       ored.   A  target  will not be made until all of its prerequisites have
-       been made.  Note that when you specify -P 4 then four  child  processes
-       are  run  concurrently but dmake actually displays the fifth command it
-       will run immediately upon a child process becomming free.  This  is  an
-       artifact of the method used to traverse the dependency graph and cannot
-       be removed.  If a parallel make is being performed then  the  following
-       restrictions on parallelism are enforced.
-
+       If  the architecture supports it then dmake is capable of making a tar-
+       get's prerequisites in parallel.  dmake will make as much  in  parallel
+       as  it can and use a number of child processes up to the maximum speci-
+       fied by MAXPROCESS or by the value supplied  to  the  -P  command  line
+       flag.   A  parallel  make is enabled by setting the value of MAXPROCESS
+       (either directly or via -P option) to a value  which  is  >  1.   dmake
+       guarantees  that all dependencies as specified in the makefile are hon-
+       ored.  A target will not be made until all of  its  prerequisites  have
 
 
 
-Version 4.3                           UW                                    39
+Version 4.4                           UW                                    43
 
 
 
@@ -2844,36 +2938,43 @@
 DMAKE(1)                                                              DMAKE(1)
 
 
-              1.     Individual  recipe  lines  in a non-group recipe are per-
+       been  made.   Note that when you specify -P 4 then four child processes
+       are run concurrently but dmake actually displays the fifth  command  it
+       will  run  immediately upon a child process becomming free.  This is an
+       artifact of the method used to traverse the dependency graph and cannot
+       be  removed.   If a parallel make is being performed then the following
+       restrictions on parallelism are enforced.
+
+              1.     Individual recipe lines in a non-group  recipe  are  per-
                      formed sequentially in the order in which they are speci-
                      fied within the makefile and in parallel with the recipes
                      of other targets.
 
-              2.     If a target contains multiple recipe definitions (cf.  ::
+              2.     If  a target contains multiple recipe definitions (cf. ::
                      rules) then these are performed sequentially in the order
-                     in which the :: rules are specified within  the  makefile
+                     in  which  the :: rules are specified within the makefile
                      and in parallel with the recipes of other targets.
 
-              3.     If  a  target  rule  contains  the `!' modifier, then the
+              3.     If a target rule contains  the  `!'  modifier,  then  the
                      recipe is performed sequentially for the list of outdated
-                     prerequisites  and  in parallel with the recipes of other
+                     prerequisites and in parallel with the recipes  of  other
                      targets.
 
               4.     If a target has the .SEQUENTIAL attribute set then all of
-                     its  prerequisites  are made sequentially relative to one
-                     another (as if MAXPROCESS=1), but in parallel with  other
+                     its prerequisites are made sequentially relative  to  one
+                     another  (as if MAXPROCESS=1), but in parallel with other
                      targets in the makefile.
 
-       Note:   If  you specify a parallel make then the order of target update
+       Note:  If you specify a parallel make then the order of  target  update
        and the order in which the associated recipes are invoked will not cor-
        respond to that displayed by the -n flag.
 
 CONDITIONALS
-       dmake  supports  a  makefile construct called a conditional.  It allows
-       the user to conditionally select portions of makefile  text  for  input
-       processing  and  to  discard  other  portions.  This becomes useful for
-       writing makefiles that are intended to function for more than one  tar-
-       get  host  and environment.  The conditional expression is specified as
+       dmake supports a makefile construct called a  conditional.   It  allows
+       the  user  to  conditionally select portions of makefile text for input
+       processing and to discard other  portions.   This  becomes  useful  for
+       writing  makefiles that are intended to function for more than one tar-
+       get host and environment.  The conditional expression is  specified  as
        follows:
 
               .IF  expression
@@ -2884,9 +2985,9 @@
                  ... else text ...
               .END
 
-       The .ELSE and .ELIF portions are optional, and the conditionals may  be
-       nested  (ie.   the  text may contain another conditional).  .IF, .ELSE,
-       and .END may appear anywhere in the makefile, but a single  conditional
+       The  .ELSE and .ELIF portions are optional, and the conditionals may be
+       nested (ie.  the text may contain another  conditional).   .IF,  .ELSE,
+       and  .END may appear anywhere in the makefile, but a single conditional
        expression may not span multiple makefiles.
 
        expression can be one of the following forms:
@@ -2895,36 +2996,36 @@
        <text> | <text> == <text> | <text> != <text>
 
        Numeric evaluation
-       <text> <= <text> | <text> >= <text>
 
-       Boolean evaluation
-       ( <text> ) | <text> || <text> | <text> && <text>
 
-       where  text  is either text or a macro expression.  In any case, before
-       the comparison is made, the expression is expanded.  The text  portions
-       are then selected and compared.  In the case of the numeric comparisons
-       the expanded expressions are converted to an integer  number.   Expres-
-       sions  can  be  nested with () and the use of || or &&.  White space at
-       the start and end of the text portion is discarded before the  compari-
-       son.  This means that a macro that evaluates to nothing but white space
-       is considered a NULL value for the purpose of the comparison.   In  the
-       first case the expression evaluates TRUE if the text is not NULL other-
-       wise it evaluates FALSE.  The remaining two  cases  both  evaluate  the
-       expression  on the basis of a string comparison.  If a macro expression
 
+Version 4.4                           UW                                    44
 
 
-Version 4.3                           UW                                    40
 
 
 
+DMAKE(1)                                                              DMAKE(1)
 
 
-DMAKE(1)                                                              DMAKE(1)
+       <text> <= <text> | <text> >= <text>
 
+       Boolean evaluation
+       ( <text> ) | <text> || <text> | <text> && <text>
 
-       needs to be equated to a NULL string then compare it to  the  value  of
-       the  macro  $(NULL).   You  can use the $(shell ...) macro to construct
+       where text is either text or a macro expression.  In any  case,  before
+       the  comparison is made, the expression is expanded.  The text portions
+       are then selected and compared.  In the case of the numeric comparisons
+       the  expanded  expressions are converted to an integer number.  Expres-
+       sions can be nested with () and the use of || or &&.   White  space  at
+       the  start and end of the text portion is discarded before the compari-
+       son.  This means that a macro that evaluates to nothing but white space
+       is  considered  a NULL value for the purpose of the comparison.  In the
+       first case the expression evaluates TRUE if the text is not NULL other-
+       wise  it  evaluates  FALSE.   The remaining two cases both evaluate the
+       expression on the basis of a string comparison.  If a macro  expression
+       needs  to  be  equated to a NULL string then compare it to the value of
+       the macro $(NULL).  You can use the $(shell  ...)  macro  to  construct
        more complex test expressions.
 
 EXAMPLES
@@ -2938,9 +3039,9 @@
                    cc b.c -o $@
 
        In the previous example prgm is remade only if a.o and/or b.o is out of
-       date  with respect to prgm.  These dependencies can be stated more con-
-       cisely by using the inference rules defined  in  the  standard  startup
-       file.   The default rule for making .o's from .c's looks something like
+       date with respect to prgm.  These dependencies can be stated more  con-
+       cisely  by  using  the  inference rules defined in the standard startup
+       file.  The default rule for making .o's from .c's looks something  like
        this:
 
        %.o : %.c; cc -c $(CFLAGS) -o $@ $<
@@ -2953,7 +3054,7 @@
                    cc -o prgm $<
               a.o b.o : g.h
 
-       A more general way to say the above  using  the  new  macro  expansions
+       A  more  general  way  to  say the above using the new macro expansions
        would be:
 
               SRC = a b
@@ -2964,7 +3065,19 @@
 
               $(OBJ) : g.h
 
-       If  we want to keep the objects in a separate directory, called objdir,
+       If we want to keep the objects in a separate directory, called  objdir,
+
+
+
+Version 4.4                           UW                                    45
+
+
+
+
+
+DMAKE(1)                                                              DMAKE(1)
+
+
        then we would write something like this.
 
               SRC = a b
@@ -2980,7 +3093,7 @@
 
               .SOURCE.o : objdir   # tell dmake to look here for .o's
 
-       An example of building library members would go  something  like  this:
+       An  example  of  building library members would go something like this:
        (NOTE:  The same rules as above will be used to produce .o's from .c's)
 
               SRC= a b
@@ -2990,24 +3103,12 @@
               prgm: $(LIB)
                    cc -o $@ $(LIB)
 
-
-
-
-Version 4.3                           UW                                    41
-
-
-
-
-
-DMAKE(1)                                                              DMAKE(1)
-
-
               $(LIB) .LIBRARY : $(LIBm)
                    ar rv $@ $<
                    rm $<
 
-       Finally, suppose that each of the source files in the previous  example
-       had  the  `:'  character in their target name.  Then we would write the
+       Finally,  suppose that each of the source files in the previous example
+       had the `:' character in their target name.  Then we  would  write  the
        above example as:
 
               SRC= f:a f:b
@@ -3022,75 +3123,75 @@
                    rm $<
 
 COMPATIBILITY
-       There are two notable differences between dmake and the  standard  ver-
+       There  are  two notable differences between dmake and the standard ver-
        sion of BSD UNIX 4.2/4.3 Make.
 
-              1. BSD  UNIX  4.2/4.3 Make supports wild card filename expansion
-                 for prerequisite names.  Thus if a  directory  contains  a.h,
+              1. BSD UNIX 4.2/4.3 Make supports wild card  filename  expansion
+                 for  prerequisite  names.   Thus if a directory contains a.h,
                  b.h and c.h, then a line like
 
                  target: *.h
 
-                 will  cause  UNIX  make to expand the *.h into "a.h b.h c.h".
+                 will cause UNIX make to expand the *.h into  "a.h  b.h  c.h".
                  dmake does not support this type of filename expansion.
 
-              2. Unlike UNIX make, touching a library member causes  dmake  to
-                 search  the  library  for  the  member name and to update the
-                 library time stamp.  This is only  implemented  in  the  UNIX
-                 version.   MSDOS  and  other versions may not have librarians
-                 that keep file time stamps, as a  result  dmake  touches  the
-                 library file itself, and prints a warning.
+              2. Unlike  UNIX  make, touching a library member causes dmake to
+                 search the library for the member  name  and  to  update  the
 
-       dmake  is  not  compatible  with  GNU  Make.  In particular it does not
-       understand GNU Make's macro expansions that query the file system.
 
-       dmake is fully compatible with SYSV AUGMAKE, and supports the following
-       AUGMAKE features:
 
-              1. GNU  Make  style  include,  and  if/else/endif directives are
-                 allowed in non-group recipes.  Thus, the word include appear-
-                 ing at the start of a line that is not part of a gruop recipe
-                 will be mapped to the ".INCLUDE" directive that  damke  uses.
-                 Similarly,  the  words  ifeq,ifneq,elif,else,  and  endif are
-                 mapped to their corresponding dmake equivalents.
+Version 4.4                           UW                                    46
 
-              2. The macro modifier expression $(macro:str=sub) is  understood
-                 and  is equivalent to the expression $(macro:s/str/sub), with
-                 the restriction that str must  match  the  following  regular
-                 expression:
 
-                 str[ |\t][ |\t]*
 
-                 (ie.  str  only  matches at the end of a token where str is a
-                 suffix and is terminated by a space, a tab, or end  of  line)
-                 Normally  sub is expanded before the substitution is made, if
-                 you specify -A on the command line then sub is not  expanded.
 
-              3. The  macro  % is defined to be $@ (ie. $% expands to the same
-                 value as $@).
 
+DMAKE(1)                                                              DMAKE(1)
 
 
+                 library  time  stamp.   This  is only implemented in the UNIX
+                 version.  MSDOS and other versions may  not  have  librarians
+                 that  keep  file  time  stamps, as a result dmake touches the
+                 library file itself, and prints a warning.
 
-Version 4.3                           UW                                    42
+       dmake is not compatible with GNU  Make.   In  particular  it  does  not
+       understand GNU Make's macro expansions that query the file system.
 
+       dmake is fully compatible with SYSV AUGMAKE, and supports the following
+       AUGMAKE features:
 
+              1. GNU Make style  include,  and  if/else/endif  directives  are
+                 allowed in non-group recipes.  Thus, the word include appear-
+                 ing at the start of a line that is not part of a gruop recipe
+                 will  be  mapped to the ".INCLUDE" directive that damke uses.
+                 Similarly, the  words  ifeq,ifneq,elif,else,  and  endif  are
+                 mapped to their corresponding dmake equivalents.
 
+              2. The  macro modifier expression $(macro:str=sub) is understood
+                 and is equivalent to the expression $(macro:s/str/sub),  with
+                 the  restriction  that  str  must match the following regular
+                 expression:
 
+                 str[ |\t][ |\t]*
 
-DMAKE(1)                                                              DMAKE(1)
+                 (ie. str only matches at the end of a token where  str  is  a
+                 suffix  and  is terminated by a space, a tab, or end of line)
+                 Normally sub is expanded before the substitution is made,  if
+                 you  specify -A on the command line then sub is not expanded.
 
+              3. The macro % is defined to be $@ (ie. $% expands to  the  same
+                 value as $@).
 
               4. The AUGMAKE notion of libraries is handled correctly.
 
               5. When defining special targets for the inference rules and the
-                 AUGMAKE  special  target handling is enabled then the special
+                 AUGMAKE special target handling is enabled then  the  special
                  target .X is equivalent to the %-rule "% : %.X".
 
-              6. Directories are always made if you specify -A.  This is  con-
+              6. Directories  are always made if you specify -A.  This is con-
                  sistent with other UNIX versions of Make.
 
-              7. Makefiles  that  utilize  virtual  targets to force making of
+              7. Makefiles that utilize virtual targets  to  force  making  of
                  other targets work as expected if AUGMAKE special target han-
                  dling is enabled.  For example:
 
@@ -3101,40 +3202,52 @@
 
                  'dmake -A FRC=FRC'
 
-                 but  fails  with a 'don't know how to make FRC' error message
+                 but fails with a 'don't know how to make FRC'  error  message
                  if you do not specify AUGMAKE special target handling via the
                  -A flag (or by setting AUGMAKE:=yes internally).
 
-              8. The  MSDOS version of dmake now supports a single buitin run-
-                 time command noop, which returns  success  if  requested  and
+              8. The MSDOS version of dmake now supports a single buitin  run-
+                 time  command  noop,  which  returns success if requested and
+
+
+
+Version 4.4                           UW                                    47
+
+
+
+
+
+DMAKE(1)                                                              DMAKE(1)
+
+
                  does nothing.
 
 LIMITS
-       In  some  environments  the length of an argument string is restricted.
-       (e.g. MSDOS command line arguments cannot be longer than 128  bytes  if
-       you  are  using  the  standard  command.com command interpreter as your
+       In some environments the length of an argument  string  is  restricted.
+       (e.g.  MSDOS  command line arguments cannot be longer than 128 bytes if
+       you are using the standard  command.com  command  interpreter  as  your
        shell, dmake text diversions may help in these situations.)
 
 PORTABILITY
-       To write makefiles that can be moved from one  environment  to  another
+       To  write  makefiles  that can be moved from one environment to another
        requires some forethought.  In particular you must define as macros all
-       those things that may be different in the new environment.   dmake  has
-       two  facilities that help to support writing portable makefiles, recur-
-       sive macros and conditional expressions.  The recursive  macros,  allow
-       one  to define environment configurations that allow different environ-
-       ments for similar types of operating systems.   For  example  the  same
+       those  things  that may be different in the new environment.  dmake has
+       two facilities that help to support writing portable makefiles,  recur-
+       sive  macros  and conditional expressions.  The recursive macros, allow
+       one to define environment configurations that allow different  environ-
+       ments  for  similar  types  of operating systems.  For example the same
        make script can be used for SYSV and BSD but with different macro defi-
        nitions.
 
-       To write a makefile that is portable between UNIX  and  MSDOS  requires
-       both  features  since  in  almost all cases you will need to define new
+       To  write  a  makefile that is portable between UNIX and MSDOS requires
+       both features since in almost all cases you will  need  to  define  new
        recipes for making targets.  The recipes will probably be quite differ-
-       ent  since the capabilities of the tools on each machine are different.
-       Different macros will be needed to help handle the smaller  differences
+       ent since the capabilities of the tools on each machine are  different.
+       Different  macros will be needed to help handle the smaller differences
        in the two environments.
 
 FILES
-       Makefile,  makefile,  startup.mk  (use  dmake  -V to tell you where the
+       Makefile, makefile, startup.mk (use dmake -V  to  tell  you  where  the
        startup file is)
 
 SEE ALSO
@@ -3143,44 +3256,44 @@
 
 AUTHOR
        Dennis Vadura, dvadura@wticorp.com
-       Many thanks to Carl Seger for his helpful suggestions,  and  to  Trevor
+       Many  thanks  to  Carl Seger for his helpful suggestions, and to Trevor
        John Thompson for his many excellent ideas and informative bug reports.
-       Many thanks also go to those on the NET  that  have  helped  in  making
+       Many  thanks  also  go  to  those on the NET that have helped in making
        dmake one of the best Make tools available.
 
+BUGS
+       Some system commands return non-zero status  inappropriately.   Use  -i
+       (`-' within the makefile) to overcome the difficulty.
 
+       Some systems do not have easily accessible time stamps for library mem-
+       bers (MSDOS, AMIGA, etc) for these dmake uses the  time  stamp  of  the
+       library  instead  and prints a warning the first time it does so.  This
+       is almost always ok, except when multiple  makefiles  update  a  single
+       library  file.   In these instances it is possible to miss an update if
+       one is not careful.
 
+       This man page is way too long.
 
-Version 4.3                           UW                                    43
+WARNINGS
+       Rules supported by make(1) may not work if transitive closure is turned
+       off (-T, .NOINFER).
 
+       PWD from csh/ksh will cause problems if a cd operation is performed and
 
 
 
+Version 4.4                           UW                                    48
 
-DMAKE(1)                                                              DMAKE(1)
 
 
-BUGS
-       Some  system  commands  return non-zero status inappropriately.  Use -i
-       (`-' within the makefile) to overcome the difficulty.
 
-       Some systems do not have easily accessible time stamps for library mem-
-       bers  (MSDOS,  AMIGA,  etc)  for these dmake uses the time stamp of the
-       library instead and prints a warning the first time it does  so.   This
-       is  almost  always  ok,  except when multiple makefiles update a single
-       library file.  In these instances it is possible to miss an  update  if
-       one is not careful.
 
-       This man page is way too long.
+DMAKE(1)                                                              DMAKE(1)
 
-WARNINGS
-       Rules supported by make(1) may not work if transitive closure is turned
-       off (-T, .NOINFER).
 
-       PWD from csh/ksh will cause problems if a cd operation is performed and
        -e or -E option is used.
 
-       Using  internal  macros  such  as COMMAND, may wreak havoc if you don't
+       Using internal macros such as COMMAND, may wreak  havoc  if  you  don't
        understand their functionality.
 
 
@@ -3230,6 +3343,16 @@
 
 
 
-Version 4.3                           UW                                    44
+
+
+
+
+
+
+
+
+
+
+Version 4.4                           UW                                    49
 
 
diff -Nur m148/dmake/man/dmake.tf dmake43p01/dmake/man/dmake.tf
--- dmake/man/dmake.tf	2004-10-22 10:06:32.000000000 +0200
+++ dmake/man/dmake.tf	2005-10-04 06:33:35.000000000 +0200
@@ -19,7 +19,7 @@
 .IP "\\$1" \\n[dmake-indent]u
 .it 1 PD
 ..
-.TH DMAKE 1  "UW" "Version 4.3"
+.TH DMAKE 1  "UW" "Version 4.4"
 .SH NAME
 \fBdmake\fR \- maintain program groups, or interdependent files
 .SH SYNOPSIS
@@ -311,6 +311,14 @@
 internal definition of MAKESTARTUP is "$(DMAKEROOT)/startup.mk", so you
 can set the environment variable DMAKEROOT to the location of your startup
 directory.
+.sp
+If DMAKEROOT is not changed, for native Windows dmake versions its value
+defaults to "$(ABSMAKECMD:d)startup" (see definition of ABSMAKECMD for
+details).
+For unix like versions build with the autotools build system it defaults
+to the value of "${prefix}/share/startup" at build time. The actual value,
+usually something like /usr/local/share/startup can be checked with the \-V
+command line switch.
 .RE
 .LP
 The above search is disabled by specifying the \-r option on the command line.
@@ -344,7 +352,7 @@
 If the first line of the user makefile is of the form:
 .RS
 .sp
-\#! command command_args
+#!command command_args
 .sp
 .RE
 then \fBdmake\fP will expand and run the command prior to reading any
@@ -776,35 +784,41 @@
 .LP
 where
 .I modifier_list
-is chosen from the set { B or b, D or d, E or e, F or f, I or i, L or l, S or
-s, T or t, U or u, ^, +, 1 } and
+may be a combination of:
 .RS
 .sp
-.Is "b  "
-.Ii "b "
+.Is "b or B "
+.Ii "b or B"
 \- file (not including suffix) portion of path names
-.Ii "d"
+.Ii "d or D"
 \- directory portion of all path names
-.Ii "e"
+.Ii "e or E"
 \- suffix portion of path names
-.Ii "f"
+.Ii "f or F"
 \- file (including suffix) portion of path names
-.Ii "i"
+.Ii "i or I"
 \- inferred names of targets
-.Ii "l"
+.Ii "l or L"
 \- macro value in lower case
-.Ii "s"
+.Ii "u or U"
+\- macro value in upper case
+.Ii "1"
+\- return the first white space separated token from value
+.RE
+.sp
+or a single one of:
+.RS
+.sp
+.Ii "m or M"
+\- map escape codes found in macro to their ASCII value
+.Ii "s or S"
 \- simple pattern substitution
-.Ii "t"
+.Ii "t or T"
 \- tokenization.
-.Ii "u"
-\- macro value in upper case
 .Ii "^"
 \- prepend a prefix to each token
 .Ii "+"
 \- append a suffix to each token
-.Ii "1"
-\- return the first white space separated token from value
 .sp
 .RE
 .fi
@@ -844,12 +858,20 @@
 final directory separator string.  Thus successive pairs of :d modifiers
 each remove a level of directory in the token string.
 .PP
-The tokenization modifier takes all white space separated tokens from the
-macro value and separates them by the quoted separator string.  The separator
-string may contain the following escape codes \ea => <bel>,
+The map escape codes modifier changes the following escape codes \ea => <bel>,
 \&\eb => <backspace>, \ef => <formfeed>, \en => <nl>, \er => <cr>,
 \&\et => <tab>, \ev => <vertical tab>, \e" => ", and \exxx => <xxx> where
-xxx is the octal representation of a character.  Thus the
+xxx is the octal representation of a character into the corresponding ASCII
+value.
+.PP
+The tokenization, prepend and append modifier may use the same escape codes
+that are supported by the map escape codes modifier in the string that is
+inserted, prepended or added by the respective macro modifier.
+These modifiers may quote this string to include otherwise problematic
+characters.  E.g. spaces, colons and parentheses.
+.PP
+The tokenization modifier takes all white space separated tokens from the
+macro value and separates them by the separator string.  Thus the
 expansion:
 .LP
 .RS
@@ -1256,8 +1278,11 @@
 .sp
 .RE
 then all text contained in the \fIdata\fP expression is expanded and
-is written to a temporary file.  The return
-value of the macro is the name of the temporary file.
+is written to a temporary file.  The \fIdata\fP in the file will always
+be terminated from a new line character.  The return
+value of the macro is the name of the temporary file unless the \fItext\fP
+parameter is defined. In this case the return value is the expanded value
+of \fItext\fP.
 .PP
 .I data
 can be any text and must be separated from the 'mktmp' portion of the
@@ -1288,16 +1313,14 @@
 expansions persist for the duration of the
 .B dmake
 run.
-The diversion text may contain
-the same escape codes as those described in the MACROS section.
-Thus if the \fIdata\fP text is to contain new lines they must be inserted
-using the \en escape sequence.  For example the expression:
+If the \fIdata\fP text is to contain new lines the map escape codes macro
+expasion can be used.  For example the expression:
 .RS
 .sp
 .nf
+mytext:=this is a\entest of the text diversion
 all:
-	cat $(mktmp this is a\en\e
-	test of the text diversion\en)
+	cat $(mktmp $(mytext:m))
 .fi
 .sp
 .RE
@@ -1308,8 +1331,7 @@
 .sp
 .RE
 where the temporary file contains two lines both of which are terminated
-by a new-line.  If the \fIdata\fP text spans multiple lines in the makefile
-then each line must be continued via the use of a \e.
+by a new-line.
 A second more illustrative example generates a response file to an MSDOS
 link command:
 .RS
@@ -1317,7 +1339,7 @@
 .nf
 OBJ = fred.obj mary.obj joe.obj
 all : $(OBJ)
-	link @$(mktmp $(^:t"+\en")\en)
+	link @$(mktmp $(^:t"+\en"))
 .fi
 .sp
 .RE
@@ -1337,8 +1359,8 @@
 .fi
 .sp
 .RE
-The last line of the file is terminated by a new-line which is inserted
-due to the \en found at the end of the \fIdata\fP string.
+The last line of the file is terminated by a new-line which is always
+inserted at the end of the \fIdata\fP string.
 .PP
 If the optional \fIfile\fP specifier is present then its expanded value
 is the name of the temporary file to create.  An example that would be useful
@@ -1414,7 +1436,10 @@
 export directive are exported, macros as yet undefined
 or macros whose value contains any of the characters "+=:*"
 are not exported.
-is suppre
+.sp
+Note that macros that are not expanded during the macro assignment and contain
+other macros will be written into the environment containing these other
+macros in the form of $(macroname).
 .IP \fB.IMPORT\fP 1.4i
 Prerequisite names specified for this target are searched for in the
 environment and defined as macros with their value taken from the environment.
@@ -1522,6 +1547,13 @@
 This list is divided into two groups.  The first group gives the string
 valued macros that are defined internally and cannot be directly set by the
 user.
+.IP \fBABSMAKECMD\fP 1.6i
+\fBWarning!\fP This macro's value is differently defined for a native Windows
+dmake executable (compiled with MS Visual C++ or MinGW) and dmake for other
+operating systems or build with other compilers.
+.sp
+In the first case its value is the absolute filename of the executable of
+the current dmake process, otherwise it is defined as the NULL string.
 .IP \fBINCDEPTH\fP 1.6i
 This macro's value is a string of digits representing
 the current depth of makefile inclusion.
@@ -1559,6 +1591,11 @@
 .IP \fBPWD\fP 1.6i
 Is the full path to the
 current directory in which make is executing.
+.IP \fBSPACECHAR\fP 1.6i
+Is permanently defined to contain one space character. This is useful
+when using space characters in function macros, e.g. subst, that
+otherwise would get deleted (leading/trailing spaces) or for using
+spaces in function macro parameters.
 .IP \fBTMPFILE\fP 1.6i
 Is set to the name of the most recent temporary file opened by \fBdmake\fP.
 Temporary files are used for text diversions and for group recipe processing.
@@ -1583,11 +1620,11 @@
 If set to "yes" causes the directory cache, if enabled, to respect
 file case, if set to "no" facilities of the native OS are used to
 match file case.
-.IP \fB.NAMEMAX\fP 1.6i
+.IP \fBNAMEMAX\fP 1.6i
 Defines the maximum length of a filename component.  The value of the variable
 is initialized at startup to the value of the compiled macro NAME_MAX.  On
 some systems the value of NAME_MAX is too short by default.  Setting a new
-value for .NAMEMAX will override the compiled value.
+value for NAMEMAX will override the compiled value.
 .IP \fB.NOTABS\fP 1.6i
 When set to "yes" enables the use of spaces as well as <tabs> to begin
 recipe lines.
@@ -1795,6 +1832,10 @@
 supports a full set of functional macros.  One of these, the $(mktmp ...)
 macro, is discussed in detail in the TEXT DIVERSION section and is not
 covered here.
+.PP
+Note that some of these macros take comma separated parameters
+but that these parameters must not contain literal whitespaces. Whitespaces
+in macros used in these parameters are allowed.
 .RS
 .sp
 .IP "$(\fBand\fP \fBmacroterm ...\fP)"
@@ -1947,10 +1988,14 @@
 .sp
 .RE
 will run the command using the current shell.
+.LP
+\fBNote\fP that if the macro is part of a recipe it will be evaluated after
+all previous recipe lines have been executed. For obvious reasons it will be
+evaluated before the current recipe line or group recipe is executed.
 .RE
 .IP "$(\fBshell,expand\fP \fBcommand\fP)"
-Is an extension to the \fB$(shell...\fP function macro that expands the result
-of running \fBcommand\fP.
+Is an extension to the \fB$(shell command)\fP function macro that expands the
+result of running \fBcommand\fP.
 .IP "$(\fBsort\fP \fBlist\fP)"
 Will take all white\-space separated tokens in \fIlist\fP and will
 return their sorted equivalent list.
diff -Nur m148/dmake/msdos/Makefile.in dmake43p01/dmake/msdos/Makefile.in
--- dmake/msdos/Makefile.in	2004-10-22 10:06:46.000000000 +0200
+++ dmake/msdos/Makefile.in	2005-09-26 02:33:13.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -14,8 +14,6 @@
 
 @SET_MAKE@
 
-SOURCES = $(libmsdos_a_SOURCES)
-
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
 VPATH = @srcdir@
@@ -36,6 +34,8 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = msdos
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -80,8 +80,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -128,7 +131,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -168,9 +175,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  msdos/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  msdos/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  msdos/Makefile
+	  $(AUTOMAKE) --foreign  msdos/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
diff -Nur m148/dmake/msdos/ruletab.c dmake43p01/dmake/msdos/ruletab.c
--- dmake/msdos/ruletab.c	2000-09-22 17:33:27.000000000 +0200
+++ dmake/msdos/ruletab.c	2005-04-09 23:22:30.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: ruletab.c,v 1.1.1.1 2000/09/22 15:33:27 hr Exp $
+/* RCS  $Id: ruletab.c,v 1.1.1.1.132.1 2005/04/09 21:22:30 vq Exp $
 --
 -- SYNOPSIS
 --      Default initial configuration of dmake.
@@ -35,7 +35,7 @@
 	"MAXLINELENGTH := 2046",
 	"MAXPROCESSLIMIT := 1",
 	"MAXPROCESS := 1",
-	".IMPORT .IGNORE: ROOTDIR",
+	".IMPORT .IGNORE: DMAKEROOT",
 	".MAKEFILES : makefile.mk makefile",
 	".SOURCE    : .NULL",
 #include "startup.h"
diff -Nur m148/dmake/msdos/startup.h dmake43p01/dmake/msdos/startup.h
--- dmake/msdos/startup.h	2000-09-22 17:33:27.000000000 +0200
+++ dmake/msdos/startup.h	2005-04-09 23:22:31.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: startup.h,v 1.1.1.1 2000/09/22 15:33:27 hr Exp $
+/* RCS  $Id: startup.h,v 1.1.1.1.132.1 2005/04/09 21:22:31 vq Exp $
 --
 -- SYNOPSIS
 --      Dmake startup header file definition.
@@ -23,4 +23,4 @@
 --      Use cvs log to obtain detailed change logs.
 */
 
-"MAKESTARTUP := $(MAKECMD:d)startup/startup.mk",
+"MAKESTARTUP := $(DMAKEROOT)\\startup.mk",
diff -Nur m148/dmake/msdos/zortech/startup.mk dmake43p01/dmake/msdos/zortech/startup.mk
--- dmake/msdos/zortech/startup.mk	2000-09-22 17:33:29.000000000 +0200
+++ dmake/msdos/zortech/startup.mk	2005-04-09 23:22:31.000000000 +0200
@@ -22,8 +22,8 @@
 V := 		# RCS suffix
 
 # See if these are defined
-TMPDIR := $(ROOTDIR)/tmp
-.IMPORT .IGNORE : TMPDIR SHELL COMSPEC
+.IMPORT .IGNORE : TMPDIR SHELL COMSPEC ROOTDIR
+TMPDIR *:= $(ROOTDIR)/tmp
 
 # Recipe execution configurations
 # First set SHELL, If it is not defined, use COMSPEC, otherwise
@@ -46,14 +46,14 @@
    SHELLMETAS  := *"?<>
    GROUPSUFFIX := .bat
    DIRSEPSTR   := \\\
-   DIVFILE      = $(TMPFILE:s,/,\)
+   DIVFILE      = $(TMPFILE:s,/,\,)
 .ELSE
    SHELLFLAGS  := -c
    GROUPFLAGS  := 
    SHELLMETAS  := *"?<>|()&][$$\#`'
    GROUPSUFFIX := .ksh
    .MKSARGS    := yes
-   DIVFILE      = $(TMPFILE:s,/,${DIVSEP_shell_${USESHELL}})
+   DIVFILE      = $(TMPFILE:s,/,${DIVSEP_shell_${USESHELL}},)
    DIVSEP_shell_yes := \\\
    DIVSEP_shell_no  := \\
 .END
diff -Nur m148/dmake/NEWS dmake43p01/dmake/NEWS
--- dmake/NEWS	2004-10-22 10:02:25.000000000 +0200
+++ dmake/NEWS	2005-09-20 02:01:26.000000000 +0200
@@ -2,6 +2,69 @@
 cvs. #i<number># denote issues tracked by the OpenOffice.org issue tracking
 system, see <http://qa.openoffice.org/issue_handling/project_issues.html>.
 
+Version 4.4-cvs <unreleased>
+============================
+
+2005/09/19 Volker Quetschke (vq@openoffice.org)
+#i53148# Fix $(shell ...) macro picking up the output of earlier
+recipe lines in parallel builds.
+#i54766# Ensure that all previous recipe lines to a recipe
+line containing a $(shell ...) macro have finished before executing
+the macro in parallel builds.
+
+2005/06/01 Volker Quetschke (vq@openoffice.org)
+#i39248# Add a testsuite to test some dmake features (only for autotools
+ builds). Start the tests with "make check".
+
+2005/04/21 Volker Quetschke (vq@openoffice.org)
+#i47851# Increase the version number to 4.4-cvs and slightly rearrange the
+output of "dmake -V".
+Remove the hardcoded (in autotools builds) OS macro. It had the wrong value
+to be usable with the startup/*.mk and is not mentioned in the man page.
+Clean up configure.in and friends.
+
+2005/04/20 Volker Quetschke (vq@openoffice.org)
+#i43310# Fix percent (%) rules to recognize prerequisites that are defined
+with the multiple target rule operator (::). 
+This implicitly fixes the similar problem for .<suffix>.<suffix> targets.
+
+2005/04/16 Volker Quetschke (vq@openoffice.org)
+#i46987# Fix the documentation of the $(mktmp ...) function macro. This is
+not necessarily a new feature as the macro works this way since dmake was
+imported into the OpenOffice.org cvs but mentioning it here might help users
+of dmake upgrading from very old versions.
+
+Add the "map escape codes" $(...:m) macro expansion that allows to expand
+escape codes in macros.  It can also be used to reproduce the former (pre
+OpenOffice.org cvs) $(mktmp ...) behavior.
+
+2005/04/10 Volker Quetschke (vq@openoffice.org)
+#i43252# Introduce the macro ABSMAKECMD that's value for a native Windows
+dmake executable (compiled with MS Visual C++ or MinGW) is the absolute
+filename and NULL for other operating systems or dmake build with other
+compilers.
+If DMAKEROOT is not changed and only for native Windows dmake versions the
+value of DMAKEROOT now defaults to "$(ABSMAKECMD:d)startup".
+This allows to use the startup files from the startup directory from the
+same location where the dmake.exe is located.
+
+2005/04/08 Steve Hay (shay@openoffice.org)
+#i43241# Fix build problems with VC++ (in non-OOo environment) and fix
+the dmake makefiles so that dmake can rebuild itself (VC++ only).
+
+2005/03/14 Volker Quetschke (vq@openoffice.org)
+#i44959# Fix problems when a continued line is followed by an empty
+or comment line.
+
+2005/03/13 Volker Quetschke (vq@openoffice.org)
+#i37053# Fix function macro problems with continued lines.
+
+2004/11/23 Volker Quetschke (vq@openoffice.org)
+#i37491# Predefine dmake macro containing one space (SPACECHAR).
+
+2004/11/21 Volker Quetschke (vq@openoffice.org)
+#i36027# Improve function macro parameter parsing.
+
 Version 4.3
 ===========
 
diff -Nur m148/dmake/os2/ruletab.c dmake43p01/dmake/os2/ruletab.c
--- dmake/os2/ruletab.c	2000-09-22 17:33:30.000000000 +0200
+++ dmake/os2/ruletab.c	2005-04-09 23:22:31.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: ruletab.c,v 1.1.1.1 2000/09/22 15:33:30 hr Exp $
+/* RCS  $Id: ruletab.c,v 1.1.1.1.132.1 2005/04/09 21:22:31 vq Exp $
 --
 -- SYNOPSIS
 --      Default initial configuration of dmake.
@@ -36,7 +36,7 @@
 static char *_rules[] = {
 	"MAXLINELENGTH := 2046",
 	"MAXPROCESSLIMIT := 16",
-	".IMPORT .IGNORE: DMAKEROOT SOLARVER UPD INPATH OS UPDMINOREXT"
+	".IMPORT .IGNORE: DMAKEROOT"
 	".MAKEFILES : makefile.mk Makefile",
 	".SOURCE    : .NULL",
 #include "startup.h"
diff -Nur m148/dmake/parse.c dmake43p01/dmake/parse.c
--- dmake/parse.c	2004-09-08 18:06:58.000000000 +0200
+++ dmake/parse.c	2005-06-01 04:27:09.000000000 +0200
@@ -1,6 +1,6 @@
 /* $RCSfile: parse.c,v $
--- $Revision: 1.4 $
--- last change: $Author: rt $ $Date: 2004/09/08 16:06:58 $
+-- $Revision: 1.4.6.3 $
+-- last change: $Author: vq $ $Date: 2005/06/01 02:27:09 $
 --
 -- SYNOPSIS
 --      Parse the input, and perform semantic analysis
@@ -107,8 +107,9 @@
                   }
                   else if( *p == ']' )
                      Fatal( "Found unmatched ']'" );
-                  else if( (*pTmpBuf && *p) || (Notabs && !*pTmpBuf && !*p))
+                  else if( *pTmpBuf ) /* Something that was no recipe. */
 		     State = NORMAL_SCAN;
+		  /* The only thing that was not handled was an empty line. */
                }
  
                if( State == RULE_SCAN ) break;     /* ie. keep going    */
@@ -152,8 +153,8 @@
 	       if( Parse_macro(pTmpBuf, M_DEFAULT) ) break;/* it's a macro def*/
 	       if( Parse_rule_def( &State ) ) 	    break;/* it's a rule def */
 
-	       /* if just blank line then ignore it */
-	       if( *DmStrSpn( Buffer, " \t\r\n" ) == '\0' ) break;
+	       /* if it is an empty or blank line then ignore it */
+	       if( !*Buffer || *DmStrSpn( Buffer, " \t\r\n" ) == '\0' ) break;
 	       
 	       /* otherwise assume it was a line of unrecognized input, or a
 	        * recipe line out of place so print a message */
diff -Nur m148/dmake/posix.h dmake43p01/dmake/posix.h
--- dmake/posix.h	2003-03-25 15:02:13.000000000 +0100
+++ dmake/posix.h	2005-05-05 23:59:52.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: posix.h,v 1.2 2003/03/25 14:02:13 hr Exp $
+/* RCS  $Id: posix.h,v 1.2.80.1 2005/05/05 21:59:52 vq Exp $
 --
 -- SYNOPSIS
 --      Definition for POSIX conforming defines in dmake.
@@ -53,7 +53,8 @@
 #define CHILD_MAX _POSIX_CHILD_MAX
 #endif
 
-/* now fix these since some values are all wet */
+/* FIXME! This is a very big hammer, these values should be set to
+ * sensible values in the architecture dependent sysintf.h files. */
 #if NAME_MAX < 255
 #undef NAME_MAX
 #define NAME_MAX 255
diff -Nur m148/dmake/qssl/ruletab.c dmake43p01/dmake/qssl/ruletab.c
--- dmake/qssl/ruletab.c	2000-09-22 17:33:30.000000000 +0200
+++ dmake/qssl/ruletab.c	2005-04-09 23:22:32.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: ruletab.c,v 1.1.1.1 2000/09/22 15:33:30 hr Exp $
+/* RCS  $Id: ruletab.c,v 1.1.1.1.132.1 2005/04/09 21:22:32 vq Exp $
 --
 -- SYNOPSIS
 --      Default initial configuration of dmake.
@@ -32,7 +32,7 @@
 static char *_rules[] = {
 	"MAXPROCESSLIMIT := 10",
 	"MAXLINELENGTH := 8190",
-	".IMPORT .IGNORE: ROOTDIR",
+	".IMPORT .IGNORE: ROOTDIR DMAKEROOT",
 	".MAKEFILES : makefile.mk Makefile makefile",
 	".SOURCE    : .NULL",
 #include "startup.h"
diff -Nur m148/dmake/qssl/startup.h dmake43p01/dmake/qssl/startup.h
--- dmake/qssl/startup.h	2000-09-22 17:33:30.000000000 +0200
+++ dmake/qssl/startup.h	2005-04-09 23:22:32.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: startup.h,v 1.1.1.1 2000/09/22 15:33:30 hr Exp $
+/* RCS  $Id: startup.h,v 1.1.1.1.132.1 2005/04/09 21:22:32 vq Exp $
 --
 -- SYNOPSIS
 --      Definition of MAKESTARTUP
@@ -24,4 +24,5 @@
 --      Use cvs log to obtain detailed change logs.
 */
 
-"MAKESTARTUP := $(ROOTDIR)/usr/local/lib/dmake/startup/startup.mk",
+"DMAKEROOT *:= $(ROOTDIR)/usr/local/lib/dmake/startup",
+"MAKESTARTUP := $(DMAKEROOT)/startup.mk",
diff -Nur m148/dmake/quit.c dmake43p01/dmake/quit.c
--- dmake/quit.c	2004-09-08 18:07:13.000000000 +0200
+++ dmake/quit.c	2006-01-30 21:28:18.000000000 +0100
@@ -1,6 +1,6 @@
 /* $RCSfile: quit.c,v $
--- $Revision: 1.4 $
--- last change: $Author: rt $ $Date: 2004/09/08 16:07:13 $
+-- $Revision: 1.4.6.1 $
+-- last change: $Author: vq $ $Date: 2006/01/30 20:28:18 $
 --
 -- SYNOPSIS
 --      End the dmake session.
@@ -50,7 +50,11 @@
 }
 
 
-const int in_quit( void )
+PUBLIC const int
+in_quit( void )/*
+=================
+   Called to check if we are already quitting.
+   (Only used in unix/runargv.c.) */
 {
 	return _dont_quit;
 }
diff -Nur m148/dmake/readme/read1st.txt dmake43p01/dmake/readme/read1st.txt
--- dmake/readme/read1st.txt	2004-10-22 10:07:30.000000000 +0200
+++ dmake/readme/read1st.txt	2005-04-08 17:18:32.000000000 +0200
@@ -34,7 +34,18 @@
 
 With Microsoft C++ compiler
 ---------------------------
-For MS Visual C++ 6 and up start "make.bat win95-vpp40" in a command shell.
+For MS Visual C++ 6 and up run "make.bat win95-vpp40" in a command shell.
+This should create a dmake.exe in the top-level directory.
+
+It is possible to rename this to, say, dmake0.exe, delete the objects/
+sub-directory and then simply run "dmake0.exe" to build a new dmake.exe.
+Note that it is not necessary to have dmake rebuild itself in this way,
+but it is a nice test that your new dmake is working to see that it can.
+
+To install dmake, simply copy dmake.exe and the startup/ sub-directory to
+a directory of your choice.  You may also want to copy the man/
+sub-directory for future access to the manual page.
+
 
 All other systems might look in the public/ directory for usefull hints.
 
diff -Nur m148/dmake/rulparse.c dmake43p01/dmake/rulparse.c
--- dmake/rulparse.c	2004-09-08 18:07:25.000000000 +0200
+++ dmake/rulparse.c	2005-05-05 23:27:21.000000000 +0200
@@ -1,6 +1,6 @@
 /* $RCSfile: rulparse.c,v $
--- $Revision: 1.6 $
--- last change: $Author: rt $ $Date: 2004/09/08 16:07:25 $
+-- $Revision: 1.6.6.1 $
+-- last change: $Author: vq $ $Date: 2005/05/05 21:27:21 $
 --
 -- SYNOPSIS
 --      Perform semantic analysis on input
@@ -138,7 +138,7 @@
 	 op = Rule_op( tok );
 
 	 if( !op ) {
-	    /* define a new cell, or get old cell  */
+	    /* Define a new cell, or get pointer to pre-existing cell.  */
 	    cp = Def_cell( tok );
 	    DB_PRINT( "par", ("tg_cell [%s]", tok) );
 	    
@@ -721,12 +721,16 @@
 
 static int
 _do_targets( op, attr, set_dir, targets, prereq )/*
-================================================= */
-int	op;
-t_attr	attr;
-char	*set_dir;
-CELLPTR targets;
-CELLPTR prereq;
+===================================================
+   Evaluate the values derived from the current target definition
+   line.  */
+int	op;		/* rule operator                           */
+t_attr	attr;		/* attribute flags for current targets     */
+char	*set_dir;	/* value of setdir attribute               */
+CELLPTR targets;	/* list of targets (each cell maybe already
+			 * defined by a previous target definition
+			 * line.  */
+CELLPTR prereq;		/* list of prerequisites                   */
 {
    CELLPTR	tg1;		/* temporary target pointer		*/
    CELLPTR	tp1;		/* temporary prerequisite pointer	*/
@@ -777,7 +781,7 @@
       /* Check each target.  Check for inconsistencies between :: and : rule
        * sets.  :: may follow either : or :: but not the reverse.
        *
-       * Any targets that contain :: rules are represented by a prerequisite
+       * Any F_MULTI target (contains :: rules) is represented by a prerequisite
        * list hanging off the main target cell where each of the prerequisites
        * is a copy of the target cell but is not entered into the hash table.
        */
@@ -805,6 +809,16 @@
 	 CELLPTR tmp_cell = _make_multi(tg1);
 	 tflag |= _add_root(tg1);
 	 targets = _replace_cell( targets, tg1, tmp_cell );
+
+	/* We have to set (add) the attributes also for the F_MULTI
+	 * target cell. As there is no recipe the setdir value is not
+	 * needed. _set_attributes() that follows in approx. 8 lines
+	 * will set the attributes for the current target cell.  */
+	 tg1->ce_attr |= (attr & ~A_SETDIR);
+
+	 /* Now switch tg1 to the current (F_MULTI prereq.) target.
+	  * All recipes have to be added to that cell and not to the
+	  * F_MULTI master.  */
 	 tg1 = tmp_cell;
       }
 
@@ -910,7 +924,10 @@
 
 
 static CELLPTR
-_replace_cell( lst, cell, rep )
+_replace_cell( lst, cell, rep )/*
+=================================
+   Replace cell with rep in lst. Note if cell is not part of lst we are in
+   real trouble. */
 CELLPTR lst;
 CELLPTR cell;
 CELLPTR rep;
@@ -1109,7 +1126,13 @@
 
 
 static CELLPTR
-_make_multi( tg )
+_make_multi( tg )/*
+===================
+   This function is called to convert tg into an F_MULTI target.
+   I don't know what the author intended but the ce_index entry is only
+   used in this function (set to 0 for added targets) and undefined otherwise!
+   The undefined value is hopefully set to 0 by the C compiler as each added
+   target sets its ce_count to ++ce_index (==1). (FIXME) */
 CELLPTR tg;
 {
    CELLPTR cp;
@@ -1137,6 +1160,8 @@
    TALLOC(cp, 1, CELL);
    *cp = *tg;
 
+   /* This is reached if the target already exists, but without having
+    * prerequisites or recepies. */
    if( !(tg->ce_flag & F_MULTI) ) {
       tg->ce_prq    = NIL(LINK);
       tg->ce_flag  |= F_RULES|F_MULTI|F_TARGET;
@@ -1145,6 +1170,8 @@
       tg->ce_dir    = NIL(char);
       cp->ce_cond   = NIL(STRING);
    }
+   /* This handles the case of adding an additional target as a 
+    * prerequisite to a F_MULTI target. */
    else {
       cp->ce_flag  &= ~(F_RULES|F_MULTI);
       cp->ce_attr  &= ~A_SEQ;
diff -Nur m148/dmake/startup/config.mk.in dmake43p01/dmake/startup/config.mk.in
--- dmake/startup/config.mk.in	1970-01-01 01:00:00.000000000 +0100
+++ dmake/startup/config.mk.in	2005-04-17 00:29:17.000000000 +0200
@@ -0,0 +1,5 @@
+# ** DO NOT PLACE LOCAL DEFINITIONS INTO THIS FILE IT IS AUTO GENERATED
+
+OS            := @OS_TYPE@
+OSRELEASE     := @OS_VERSION@
+#OSENVIRONMENT := ???
diff -Nur m148/dmake/startup/Makefile.am dmake43p01/dmake/startup/Makefile.am
--- dmake/startup/Makefile.am	2003-03-25 15:02:31.000000000 +0100
+++ dmake/startup/Makefile.am	2005-06-04 20:07:37.000000000 +0200
@@ -1,9 +1,7 @@
 
 startupdir = $(datadir)/startup
 
-startup_DATA = startup.mk template.mk
+startup_DATA = startup.mk config.mk
 
-#SUBDIRS = mac msdos os2 qssl unix win95 winnt
+DIST_SUBDIRS = unix winnt
 SUBDIRS = @OS_TYPE@ 
-
-                                                                                
diff -Nur m148/dmake/startup/Makefile.in dmake43p01/dmake/startup/Makefile.in
--- dmake/startup/Makefile.in	2004-10-22 10:07:44.000000000 +0200
+++ dmake/startup/Makefile.in	2005-09-26 02:33:13.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -34,8 +34,11 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = startup
-DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
+	$(srcdir)/config.mk.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.in
@@ -43,7 +46,7 @@
 	$(ACLOCAL_M4)
 mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
 CONFIG_HEADER = $(top_builddir)/config.h
-CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_FILES = config.mk
 SOURCES =
 DIST_SOURCES =
 RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
@@ -63,7 +66,6 @@
 DATA = $(startup_DATA)
 ETAGS = etags
 CTAGS = ctags
-DIST_SUBDIRS = $(SUBDIRS)
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 ACLOCAL = @ACLOCAL@
 AMDEP_FALSE = @AMDEP_FALSE@
@@ -79,8 +81,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -127,7 +132,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -147,9 +156,8 @@
 sysconfdir = @sysconfdir@
 target_alias = @target_alias@
 startupdir = $(datadir)/startup
-startup_DATA = startup.mk template.mk
-
-#SUBDIRS = mac msdos os2 qssl unix win95 winnt
+startup_DATA = startup.mk config.mk
+DIST_SUBDIRS = unix winnt
 SUBDIRS = @OS_TYPE@ 
 all: all-recursive
 
@@ -163,9 +171,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  startup/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  startup/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  startup/Makefile
+	  $(AUTOMAKE) --foreign  startup/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
@@ -183,6 +191,8 @@
 	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
 $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
 	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+config.mk: $(top_builddir)/config.status $(srcdir)/config.mk.in
+	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
 uninstall-info-am:
 install-startupDATA: $(startup_DATA)
 	@$(NORMAL_INSTALL)
@@ -209,7 +219,13 @@
 #     (which will cause the Makefiles to be regenerated when you run `make');
 # (2) otherwise, pass the desired values on the `make' command line.
 $(RECURSIVE_TARGETS):
-	@set fnord $$MAKEFLAGS; amf=$$2; \
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
 	dot_seen=no; \
 	target=`echo $@ | sed s/-recursive//`; \
 	list='$(SUBDIRS)'; for subdir in $$list; do \
@@ -221,7 +237,7 @@
 	    local_target="$$target"; \
 	  fi; \
 	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
-	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	  || eval $$failcom; \
 	done; \
 	if test "$$dot_seen" = "no"; then \
 	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
@@ -229,7 +245,13 @@
 
 mostlyclean-recursive clean-recursive distclean-recursive \
 maintainer-clean-recursive:
-	@set fnord $$MAKEFLAGS; amf=$$2; \
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
 	dot_seen=no; \
 	case "$@" in \
 	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
@@ -250,7 +272,7 @@
 	    local_target="$$target"; \
 	  fi; \
 	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
-	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	  || eval $$failcom; \
 	done && test -z "$$fail"
 tags-recursive:
 	list='$(SUBDIRS)'; for subdir in $$list; do \
diff -Nur m148/dmake/startup/msdos/macros.mk dmake43p01/dmake/startup/msdos/macros.mk
--- dmake/startup/msdos/macros.mk	2000-09-22 17:33:31.000000000 +0200
+++ dmake/startup/msdos/macros.mk	2005-04-09 23:22:32.000000000 +0200
@@ -4,7 +4,7 @@
 # Execution environment configuration.
 # Grab the current setting of COMSPEC.
 #
-.IMPORT .IGNORE : COMSPEC
+.IMPORT .IGNORE : COMSPEC ROOTDIR
 
 # First check if SHELL is defined to be something other than COMSPEC.
 # If it is, then assume that SHELL is a Korn compatible shell like MKS's
@@ -37,7 +37,7 @@
    GROUPFLAGS       *:= $(SHELLFLAGS)
    SHELLMETAS       *:= "<>|
    GROUPSUFFIX      *:= .bat
-   DIVFILE          *=  $(TMPFILE:s,/,\)
+   DIVFILE          *=  $(TMPFILE:s,/,\,)
    RM               *=  del
    RMFLAGS          *=
    MV	            *=  rename
@@ -52,7 +52,7 @@
    RM               *=  $(ROOTDIR)$/bin$/rm
    RMFLAGS          *=  -f
    MV	            *=  $(ROOTDIR)$/bin$/mv
-   DIVFILE          *=  $(TMPFILE:s,/,${__.DIVSEP-sh-${USESHELL}})
+   DIVFILE          *=  $(TMPFILE:s,/,${__.DIVSEP-sh-${USESHELL}},)
    __.DIVSEP-sh-yes *:= \\\
    __.DIVSEP-sh-no  *:= \\
 .ENDIF
diff -Nur m148/dmake/startup/os2/macros.mk dmake43p01/dmake/startup/os2/macros.mk
--- dmake/startup/os2/macros.mk	2000-09-22 17:33:31.000000000 +0200
+++ dmake/startup/os2/macros.mk	2005-04-09 23:22:33.000000000 +0200
@@ -7,7 +7,7 @@
 # Execution environment configuration.
 # Grab the current setting of COMSPEC.
 #
-.IMPORT .IGNORE : COMSPEC
+.IMPORT .IGNORE : COMSPEC ROOTDIR
 
 # First check if SHELL is defined to be something other than COMSPEC.
 # If it is assume that SHELL is a Korn compatible shell like MKS's
@@ -41,7 +41,7 @@
    SHELLMETAS       *:= *"?<>
    GROUPSUFFIX      *:= .bat
    DIRSEPSTR        *:= \\\
-   DIVFILE          *=  $(TMPFILE:s,/,\)
+   DIVFILE          *=  $(TMPFILE:s,/,\,)
    RM               *=  del
    RMFLAGS          *=
    MV	            *=  rename
@@ -54,7 +54,7 @@
    RM               *=  $(ROOTDIR)$/bin$/rm
    RMFLAGS          *=  -f
    MV	            *=  $(ROOTDIR)$/bin$/mv
-   DIVFILE          *=  $(TMPFILE:s,/,${__.DIVSEP-sh-${USESHELL}})
+   DIVFILE          *=  $(TMPFILE:s,/,${__.DIVSEP-sh-${USESHELL}},)
    __.DIVSEP-sh-yes !:= \\\
    __.DIVSEP-sh-no  !:= \\
 .ENDIF
diff -Nur m148/dmake/startup/startup.mk dmake43p01/dmake/startup/startup.mk
--- dmake/startup/startup.mk	2000-09-22 17:33:31.000000000 +0200
+++ dmake/startup/startup.mk	2005-04-09 23:41:13.000000000 +0200
@@ -24,7 +24,9 @@
 __.EXECS     !:= yes            # yes => define how to build executables.
 
 # Grab key definitions from the environment
-.IMPORT .IGNORE : OS OSRELEASE OSENVIRONMENT TMPDIR SHELL
+# The variables OS OSRELEASE OSENVIRONMENT were removed from this
+# list because of windows. See issue 43254 for details. 
+.IMPORT .IGNORE : TMPDIR SHELL
 
 # Default DMAKE configuration, if not overriden by environment
 .INCLUDE .NOINFER $(!null,$(OS) .IGNORE) : $(INCFILENAME:d)config.mk
diff -Nur m148/dmake/startup/unix/cygwin/Makefile.in dmake43p01/dmake/startup/unix/cygwin/Makefile.in
--- dmake/startup/unix/cygwin/Makefile.in	2004-10-22 10:08:12.000000000 +0200
+++ dmake/startup/unix/cygwin/Makefile.in	2005-09-26 02:33:14.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -34,6 +34,8 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = startup/unix/cygwin
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -70,8 +72,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -118,7 +123,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -151,9 +160,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  startup/unix/cygwin/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  startup/unix/cygwin/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  startup/unix/cygwin/Makefile
+	  $(AUTOMAKE) --foreign  startup/unix/cygwin/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
diff -Nur m148/dmake/startup/unix/linux/Makefile.in dmake43p01/dmake/startup/unix/linux/Makefile.in
--- dmake/startup/unix/linux/Makefile.in	2004-10-22 10:08:26.000000000 +0200
+++ dmake/startup/unix/linux/Makefile.in	2005-09-26 02:33:14.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -34,6 +34,8 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = startup/unix/linux
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -70,8 +72,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -118,7 +123,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -151,9 +160,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  startup/unix/linux/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  startup/unix/linux/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  startup/unix/linux/Makefile
+	  $(AUTOMAKE) --foreign  startup/unix/linux/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
diff -Nur m148/dmake/startup/unix/macosx/Makefile.in dmake43p01/dmake/startup/unix/macosx/Makefile.in
--- dmake/startup/unix/macosx/Makefile.in	2004-10-22 10:08:39.000000000 +0200
+++ dmake/startup/unix/macosx/Makefile.in	2005-09-26 02:33:15.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -34,6 +34,8 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = startup/unix/macosx
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -70,8 +72,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -118,7 +123,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -151,9 +160,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  startup/unix/macosx/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  startup/unix/macosx/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  startup/unix/macosx/Makefile
+	  $(AUTOMAKE) --foreign  startup/unix/macosx/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
diff -Nur m148/dmake/startup/unix/Makefile.am dmake43p01/dmake/startup/unix/Makefile.am
--- dmake/startup/unix/Makefile.am	2002-07-11 10:53:31.000000000 +0200
+++ dmake/startup/unix/Makefile.am	2005-06-04 20:07:38.000000000 +0200
@@ -3,6 +3,6 @@
 
 startup_DATA = macros.mk recipes.mk
 
-#SUBDIRS = 386ix bsd43 coherent linux macosx solaris sysvr1 sysvr3 sysvr4 xenix
+DIST_SUBDIRS = cygwin linux macosx solaris sysvr4
 SUBDIRS = @OS_VERSION@
 
diff -Nur m148/dmake/startup/unix/Makefile.in dmake43p01/dmake/startup/unix/Makefile.in
--- dmake/startup/unix/Makefile.in	2004-10-22 10:07:57.000000000 +0200
+++ dmake/startup/unix/Makefile.in	2005-09-26 02:33:14.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -34,6 +34,8 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = startup/unix
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -63,7 +65,6 @@
 DATA = $(startup_DATA)
 ETAGS = etags
 CTAGS = ctags
-DIST_SUBDIRS = $(SUBDIRS)
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 ACLOCAL = @ACLOCAL@
 AMDEP_FALSE = @AMDEP_FALSE@
@@ -79,8 +80,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -127,7 +131,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -148,8 +156,7 @@
 target_alias = @target_alias@
 startupdir = $(datadir)/startup/unix
 startup_DATA = macros.mk recipes.mk
-
-#SUBDIRS = 386ix bsd43 coherent linux macosx solaris sysvr1 sysvr3 sysvr4 xenix
+DIST_SUBDIRS = cygwin linux macosx solaris sysvr4
 SUBDIRS = @OS_VERSION@
 all: all-recursive
 
@@ -163,9 +170,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  startup/unix/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  startup/unix/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  startup/unix/Makefile
+	  $(AUTOMAKE) --foreign  startup/unix/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
@@ -209,7 +216,13 @@
 #     (which will cause the Makefiles to be regenerated when you run `make');
 # (2) otherwise, pass the desired values on the `make' command line.
 $(RECURSIVE_TARGETS):
-	@set fnord $$MAKEFLAGS; amf=$$2; \
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
 	dot_seen=no; \
 	target=`echo $@ | sed s/-recursive//`; \
 	list='$(SUBDIRS)'; for subdir in $$list; do \
@@ -221,7 +234,7 @@
 	    local_target="$$target"; \
 	  fi; \
 	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
-	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	  || eval $$failcom; \
 	done; \
 	if test "$$dot_seen" = "no"; then \
 	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
@@ -229,7 +242,13 @@
 
 mostlyclean-recursive clean-recursive distclean-recursive \
 maintainer-clean-recursive:
-	@set fnord $$MAKEFLAGS; amf=$$2; \
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
 	dot_seen=no; \
 	case "$@" in \
 	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
@@ -250,7 +269,7 @@
 	    local_target="$$target"; \
 	  fi; \
 	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
-	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	  || eval $$failcom; \
 	done && test -z "$$fail"
 tags-recursive:
 	list='$(SUBDIRS)'; for subdir in $$list; do \
diff -Nur m148/dmake/startup/unix/solaris/Makefile.in dmake43p01/dmake/startup/unix/solaris/Makefile.in
--- dmake/startup/unix/solaris/Makefile.in	2004-10-22 10:08:53.000000000 +0200
+++ dmake/startup/unix/solaris/Makefile.in	2005-09-26 02:33:15.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -34,6 +34,8 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = startup/unix/solaris
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -70,8 +72,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -118,7 +123,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -151,9 +160,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  startup/unix/solaris/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  startup/unix/solaris/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  startup/unix/solaris/Makefile
+	  $(AUTOMAKE) --foreign  startup/unix/solaris/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
diff -Nur m148/dmake/startup/unix/sysvr4/Makefile.in dmake43p01/dmake/startup/unix/sysvr4/Makefile.in
--- dmake/startup/unix/sysvr4/Makefile.in	2004-10-22 10:09:07.000000000 +0200
+++ dmake/startup/unix/sysvr4/Makefile.in	2005-09-26 02:33:15.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -34,6 +34,8 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = startup/unix/sysvr4
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -70,8 +72,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -118,7 +123,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -151,9 +160,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  startup/unix/sysvr4/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  startup/unix/sysvr4/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  startup/unix/sysvr4/Makefile
+	  $(AUTOMAKE) --foreign  startup/unix/sysvr4/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
diff -Nur m148/dmake/startup/win95/macros.mk dmake43p01/dmake/startup/win95/macros.mk
--- dmake/startup/win95/macros.mk	2000-09-22 17:33:33.000000000 +0200
+++ dmake/startup/win95/macros.mk	2005-04-09 23:22:33.000000000 +0200
@@ -4,7 +4,7 @@
 # Execution environment configuration.
 # Grab the current setting of COMSPEC.
 #
-.IMPORT .IGNORE : COMSPEC
+.IMPORT .IGNORE : COMSPEC ROOTDIR
 
 # First check if SHELL is defined to be something other than COMSPEC.
 # If it is, then assume that SHELL is a Korn compatible shell like MKS's
@@ -37,7 +37,7 @@
    GROUPFLAGS       *:= $(SHELLFLAGS)
    SHELLMETAS       *:= "<>|
    GROUPSUFFIX      *:= .bat
-   DIVFILE          *=  $(TMPFILE:s,/,\)
+   DIVFILE          *=  $(TMPFILE:s,/,\,)
    RM               *=  del
    RMFLAGS          *=
    MV	            *=  rename
@@ -54,7 +54,7 @@
    RM               *=  $(ROOTDIR)$/bin$/rm
    RMFLAGS          *=  -f
    MV	            *=  $(ROOTDIR)$/bin$/mv
-   DIVFILE          *=  $(TMPFILE:s,/,${__.DIVSEP-sh-${USESHELL}})
+   DIVFILE          *=  $(TMPFILE:s,/,${__.DIVSEP-sh-${USESHELL}},)
    __.DIVSEP-sh-yes *:= \\\
    __.DIVSEP-sh-no  *:= \\
 .ENDIF
diff -Nur m148/dmake/startup/winnt/macros.mk dmake43p01/dmake/startup/winnt/macros.mk
--- dmake/startup/winnt/macros.mk	2000-09-22 17:33:33.000000000 +0200
+++ dmake/startup/winnt/macros.mk	2005-04-09 23:22:34.000000000 +0200
@@ -4,7 +4,7 @@
 # Execution environment configuration.
 # Grab the current setting of COMSPEC.
 #
-.IMPORT .IGNORE : COMSPEC
+.IMPORT .IGNORE : COMSPEC ROOTDIR
 
 # First check if SHELL is defined to be something other than COMSPEC.
 # If it is, then assume that SHELL is a Korn compatible shell like MKS's
@@ -37,7 +37,7 @@
    GROUPFLAGS       *:= $(SHELLFLAGS)
    SHELLMETAS       *:= "<>|
    GROUPSUFFIX      *:= .cmd
-   DIVFILE          *=  $(TMPFILE:s,/,\)
+   DIVFILE          *=  $(TMPFILE:s,/,\,)
    RM               *=  del
    RMFLAGS          *=
    MV	            *=  rename
@@ -54,7 +54,7 @@
    RM               *=  $(ROOTDIR)$/bin$/rm
    RMFLAGS          *=  -f
    MV	            *=  $(ROOTDIR)$/bin$/mv
-   DIVFILE          *=  $(TMPFILE:s,/,${__.DIVSEP-sh-${USESHELL}})
+   DIVFILE          *=  $(TMPFILE:s,/,${__.DIVSEP-sh-${USESHELL}},)
    __.DIVSEP-sh-yes *:= \\\
    __.DIVSEP-sh-no  *:= \\
 .ENDIF
diff -Nur m148/dmake/startup/winnt/Makefile.am dmake43p01/dmake/startup/winnt/Makefile.am
--- dmake/startup/winnt/Makefile.am	2003-03-25 15:02:36.000000000 +0100
+++ dmake/startup/winnt/Makefile.am	2005-06-04 20:07:39.000000000 +0200
@@ -3,6 +3,6 @@
 
 startup_DATA = macros.mk recipes.mk
 
-#SUBDIRS = mingw
+DIST_SUBDIRS = mingw msvc6
 SUBDIRS = @OS_VERSION@
 
diff -Nur m148/dmake/startup/winnt/Makefile.in dmake43p01/dmake/startup/winnt/Makefile.in
--- dmake/startup/winnt/Makefile.in	2004-10-22 10:09:23.000000000 +0200
+++ dmake/startup/winnt/Makefile.in	2005-09-26 02:33:16.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -34,6 +34,8 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = startup/winnt
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -63,7 +65,6 @@
 DATA = $(startup_DATA)
 ETAGS = etags
 CTAGS = ctags
-DIST_SUBDIRS = $(SUBDIRS)
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 ACLOCAL = @ACLOCAL@
 AMDEP_FALSE = @AMDEP_FALSE@
@@ -79,8 +80,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -127,7 +131,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -148,8 +156,7 @@
 target_alias = @target_alias@
 startupdir = $(datadir)/startup/winnt
 startup_DATA = macros.mk recipes.mk
-
-#SUBDIRS = mingw
+DIST_SUBDIRS = mingw msvc6
 SUBDIRS = @OS_VERSION@
 all: all-recursive
 
@@ -163,9 +170,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  startup/winnt/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  startup/winnt/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  startup/winnt/Makefile
+	  $(AUTOMAKE) --foreign  startup/winnt/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
@@ -209,7 +216,13 @@
 #     (which will cause the Makefiles to be regenerated when you run `make');
 # (2) otherwise, pass the desired values on the `make' command line.
 $(RECURSIVE_TARGETS):
-	@set fnord $$MAKEFLAGS; amf=$$2; \
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
 	dot_seen=no; \
 	target=`echo $@ | sed s/-recursive//`; \
 	list='$(SUBDIRS)'; for subdir in $$list; do \
@@ -221,7 +234,7 @@
 	    local_target="$$target"; \
 	  fi; \
 	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
-	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	  || eval $$failcom; \
 	done; \
 	if test "$$dot_seen" = "no"; then \
 	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
@@ -229,7 +242,13 @@
 
 mostlyclean-recursive clean-recursive distclean-recursive \
 maintainer-clean-recursive:
-	@set fnord $$MAKEFLAGS; amf=$$2; \
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
 	dot_seen=no; \
 	case "$@" in \
 	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
@@ -250,7 +269,7 @@
 	    local_target="$$target"; \
 	  fi; \
 	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
-	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	  || eval $$failcom; \
 	done && test -z "$$fail"
 tags-recursive:
 	list='$(SUBDIRS)'; for subdir in $$list; do \
diff -Nur m148/dmake/startup/winnt/mingw/Makefile.in dmake43p01/dmake/startup/winnt/mingw/Makefile.in
--- dmake/startup/winnt/mingw/Makefile.in	2004-10-22 10:09:37.000000000 +0200
+++ dmake/startup/winnt/mingw/Makefile.in	2005-09-26 02:33:16.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -34,6 +34,8 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = startup/winnt/mingw
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -70,8 +72,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -118,7 +123,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -151,9 +160,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  startup/winnt/mingw/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  startup/winnt/mingw/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  startup/winnt/mingw/Makefile
+	  $(AUTOMAKE) --foreign  startup/winnt/mingw/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
diff -Nur m148/dmake/startup/winnt/msvc6/Makefile.in dmake43p01/dmake/startup/winnt/msvc6/Makefile.in
--- dmake/startup/winnt/msvc6/Makefile.in	2004-10-22 10:09:53.000000000 +0200
+++ dmake/startup/winnt/msvc6/Makefile.in	2005-09-26 02:33:17.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -34,6 +34,8 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = startup/winnt/msvc6
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -70,8 +72,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -118,7 +123,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -151,9 +160,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  startup/winnt/msvc6/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  startup/winnt/msvc6/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  startup/winnt/msvc6/Makefile
+	  $(AUTOMAKE) --foreign  startup/winnt/msvc6/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
diff -Nur m148/dmake/stdmacs.h dmake43p01/dmake/stdmacs.h
--- dmake/stdmacs.h	2004-09-08 18:07:37.000000000 +0200
+++ dmake/stdmacs.h	2005-04-22 06:22:27.000000000 +0200
@@ -1,6 +1,6 @@
 /* $RCSfile: stdmacs.h,v $
--- $Revision: 1.4 $
--- last change: $Author: rt $ $Date: 2004/09/08 16:07:37 $
+-- $Revision: 1.4.6.1 $
+-- last change: $Author: vq $ $Date: 2005/04/22 04:22:27 $
 --
 -- SYNOPSIS
 --      General use macros.
@@ -37,7 +37,8 @@
 #define  __STDC__ 0
 #endif
 
-#if __STDC__ || defined(__TURBOC__) || defined(__IBMC__)
+/* MSVC 6 and newer understand ANSI prototypes */
+#if __STDC__ || defined(__TURBOC__) || defined(__IBMC__) || defined (_MSC_VER)
 #define ANSI(x)	x
 #else
 #define ANSI(x)	()
diff -Nur m148/dmake/sysintf.c dmake43p01/dmake/sysintf.c
--- dmake/sysintf.c	2004-10-22 10:05:43.000000000 +0200
+++ dmake/sysintf.c	2005-12-15 21:04:05.000000000 +0100
@@ -1,4 +1,4 @@
-/* RCS  $Id: sysintf.c,v 1.6 2004/10/22 08:05:43 rt Exp $
+/* RCS  $Id: sysintf.c,v 1.6.2.5 2005/12/15 20:04:05 vq Exp $
 --
 -- SYNOPSIS
 --      System independent interface
@@ -59,6 +59,16 @@
 --      Use cvs log to obtain detailed change logs.
 */
 
+/* The following two include files are only needed for GetModuleFileName() *
+ * therefore they are not included in extern.h. Unfortunately they cannot  *
+ * be loaded after extern.h because extern.h defines PVOID and this leads  *
+ * to conflicts when including windows.h.                                  */
+#if defined(_MSC_VER) || defined(__MINGW32__)
+#   define HAVE_GETMODULEFILENAMEFUNC 1
+#   include <windows.h>
+#   include <winbase.h>
+#endif
+
 #include "extern.h"
 #include "sysintf.h"
 
@@ -100,10 +110,13 @@
    buf.st_mtime = (time_t)0L;
    if( lib != NIL(char) )
       return( seek_arch(Basename(name), lib) );
+   else if( strlen(Basename(name)) > NameMax ) {
+      Warning( "Filename [%s] longer than value of NAMEMAX [%d].\n\
+      Assume unix time 0.\n", Basename(name), NameMax );
+      return((time_t)0L);
+   }
    else if( STOBOOL(UseDirCache) )
       return(CacheStat(name,force));
-   else if( strlen(Basename(name)) > NameMax )
-      return((time_t)0L);
    else
       return(really_dostat(name,&buf));
 }
@@ -122,8 +135,11 @@
 
    if (lib != NIL(char))
       return( touch_arch(Basename(name), lib) );
-   else if( strlen(Basename(name)) > NameMax )
+   else if( strlen(Basename(name)) > NameMax ) {
+      Warning( "Filename [%s] longer than value of NAMEMAX [%d].\n\
+      File timestamp not updated to present time.\n", Basename(name), NameMax );
       return(-1);
+   }
    else
 #ifdef HAVE_UTIME_NULL
       return( utime(name, NULL) );
@@ -198,6 +214,7 @@
    if( Max_proc == 1 ) Wait_for_completion = TRUE;
 
    if( (i = runargv(target, ignore, group, last, shell, cmd)) == -1 )
+      /* Only fails for failed spawn. (Spawn is disabled ATM.) */
       Quit();
 
    /* NOTE:  runargv must return either 0 or 1, 0 ==> command executed, and
@@ -377,6 +394,15 @@
 char* argv[];
 {
    Pname = (argc == 0) ? DEF_MAKE_PNAME : argv[0];
+
+   /* Only some native Windows compilers provide this functionality. */
+#ifdef HAVE_GETMODULEFILENAMEFUNC
+   if( (AbsPname = MALLOC( PATH_MAX, char)) == NIL(char) ) No_ram();
+   GetModuleFileName(NULL, AbsPname, PATH_MAX*sizeof(char));
+#else
+   AbsPname = "";
+#endif
+
    Root = Def_cell( ".ROOT" );
    Targets = Def_cell( ".TARGETS" );
    Add_prerequisite(Root, Targets, FALSE, FALSE);
@@ -465,7 +491,19 @@
    umask(mask);
 
 #elif defined(HAVE_TEMPNAM)
-   *path = DmStrJoin( tempnam(tmpdir, "mk"), suff, -1, TRUE );
+   char pidbuff[32];
+#if _MSC_VER >= 1300
+   /* Create more unique filename for .NET2003 and newer. */
+   long npid;
+   long nticks;
+
+   npid = _getpid();
+   nticks = GetTickCount() & 0xfff;
+   sprintf(pidbuff,"mk%d_%d_",npid,nticks);
+#else   
+   sprintf(pidbuff,"mk");
+#endif   
+   *path = DmStrJoin( tempnam(tmpdir, pidbuff), suff, -1, TRUE );
    fd = open(*path, O_CREAT | O_EXCL | O_TRUNC | O_RDWR, 0600);
 #else
 
@@ -699,7 +737,11 @@
 
 
 PUBLIC void
-Update_time_stamp( cp )
+Update_time_stamp( cp )/*
+=========================
+   Update the time stamp of cp and scan the list of its prerequisites for
+   files being marked as removable (ie. an inferred intermediate node).
+   Remove them if there are any. */
 CELLPTR cp;
 {
    HASHPTR hp;
@@ -747,7 +789,7 @@
    }
 
    /* Scan the list of prerequisites and if we find one that is
-    * marked as being removable, (ie. an inferred intermediate node
+    * marked as being removable, (ie. an inferred intermediate node)
     * then remove it.  We remove a prerequisite by running the recipe
     * associated with the special target .REMOVE, with $< set to
     * the list of prerequisites to remove. */
@@ -770,11 +812,17 @@
 	 register CELLPTR prq = dp->cl_prq;
 
 	 attr = Glob_attr | prq->ce_attr;
+	 /* We seem to have problems here that F_MULTI subtargets get removed
+	  * that even though they are still needed because the A_PRECIOUS
+	  * was not propagated correctly. Solution: Don't remove subtargets, the
+	  * master target will be removed if is not needed. */
 	 rem  = (prq->ce_flag & F_REMOVE) &&
 		(prq->ce_flag & F_MADE  ) &&
+	        !(prq->ce_count ) && /* Don't remove F_MULTI subtargets. */
 		!(prq->ce_attr & A_PHONY) &&
 		!(attr & A_PRECIOUS);
 
+	 /* remove if rem is != 0 */
 	 if(rem) {
 	    LINKPTR tdp;
 
diff -Nur m148/dmake/tempnam.c dmake43p01/dmake/tempnam.c
--- dmake/tempnam.c	2003-03-25 15:02:15.000000000 +0100
+++ dmake/tempnam.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,138 +0,0 @@
-#include <ctype.h>
-#include <fcntl.h>
-#include <sys/stat.h>
-#include <stdio.h>
-#include <stdlib.h>
-
-/**/
-#ifdef __IBMC__ 
-#define _O_CREAT	O_CREAT			
-#define _O_EXCL		O_EXCL			
-#define _S_IWRITE	S_IWRITE			
-#define _S_IREAD	S_IREAD			
-#endif
-
-#define DirEntryKind	int
-/* The Windows API sets this value to 260 */
-#ifndef _MAX_PATH
-#define _MAX_PATH 1024
-#endif
-#define WNT
-
-char* dtempnam( char* nix, char* prefix )
-{
-/*    char *ret_val;*/
-    size_t i;
-
-/*    // dertermine Directory, Prefix and Extension*/
-    char pfx[6] = "";
-    char ext[5] = "";
-    char dir[2000] = "";
-	char sBuf[_MAX_PATH];
-
-	char ret_val[_MAX_PATH];
-	static unsigned long u;
-	unsigned long nOld;
-	unsigned nTemp;
-	FILE *pFile;
-	int nhandle;
-	char* pRet = 0L;
-	int n = 0;
-
-	const int TempVarianten = 2;		
-	char *TempPath[] = { "tmp", "temp" };
-	
-    strcpy( pfx, prefix );
-    if ( nix )
-		strncpy( dir, nix, sizeof(dir) -1 );
-
-/* wurde kein Dir angegeben, dann nehmen wir ein passendes TEMP-Verz. */
-
-
-/*    if ( eFlag == FSYS_FLAG_CURRENT || ( !pParent && pWild ) )*/
-/*        dir = TempDirImpl(sBuf);*/
-	
-	while ( dir[0] == '\0' && n < TempVarianten)
-	{
-		char *EnvTempPath = getenv(TempPath[n]);
-		if ( EnvTempPath != NULL )
-			strncpy( dir, EnvTempPath, sizeof(dir)-1 );
-		n++;
-	}
-	if ( dir[0] == '\0' )
-#if defined(UNX)
-		strcpy( dir, "/tmp" );
-#else
-		strcpy( dir, "c:\\tmp" );
-#endif
-	
-/*    // ab hier leicht modifizierter Code von VB*/
-    i = strlen(dir);
-/*    ret_val = new char[i+2 /* '\0' & '\\' *//* + 8 /*root*//* + 4 /*.ext*//*];*/
-    if (ret_val)
-    {
-        strncpy(ret_val,dir, sizeof(ret_val)-1);
-
-        /* Make sure directory ends with a separator    */
-#if defined(DOS) || defined(PM2) || defined(WIN) || defined(WNT)
-        if ( i>0 && ret_val[i-1] != '\\' && ret_val[i-1] != '/' &&
-             ret_val[i-1] != ':')
-            ret_val[i++] = '\\';
-#elif (UNX)
-        if (i>0 && ret_val[i-1] != '/')
-            ret_val[i++] = '/';
-#elif (MAC)
-        if (i>0 && ret_val[i-1] != ':')
-            ret_val[i++] = ':';
-#else
-#error unknown operating system
-#endif
-
-        strncpy(ret_val + i, pfx, 5);
-        ret_val[i + 5] = '\0';      /* strncpy doesn't put a 0 if more  */
-        i = strlen(ret_val);        /* than 'n' chars.          */
-
-        /* Prefix can have 5 chars, leaving 3 for numbers.
-           26 ** 3 == 17576
-         */
-#if (defined (MSC) || defined (BLC) || defined(ICC) ) && ( defined (WIN) || defined (WNT))
-    	u = GetTickCount();
-#else
-		u = clock();
-#endif
-
-        for ( nOld = u; ++u != nOld; )
-        {
-             u %= (26*26*26);
-             nTemp = (unsigned)u;
-#if defined(OS2) || defined(WIN) || defined(WNT) || defined(DOS)
-            itoa(nTemp,ret_val + i,26);
-#else
-            snprintf(ret_val+i, sizeof(ret_val) + i, "%03u", nTemp);
-#endif
-            strcat(ret_val,ext);
-			nhandle = _open( ret_val, _O_CREAT | _O_EXCL, _S_IWRITE | _S_IREAD );
-			if ( nhandle != -1 )
-			{
-				_lseek( nhandle, 0, SEEK_END);
-				if ( 0 == _tell( nhandle ) )
-				{
-					_close( nhandle );
-					pRet = malloc( strlen( ret_val ) );
-					strcpy(pRet, ret_val );
-					break;
-				}
-				_close( nhandle );
-			}
-        }
-    }
-	if ( pRet == 0L )
-		fprintf(stderr,"ERROR - could not open tempfile\n");
-#if FALSE
-	else
-		fprintf(stderr,"tempfile name %s\n",pRet);
-#endif
-	return pRet;
-}
-
-
diff -Nur m148/dmake/tests/function_macros-1 dmake43p01/dmake/tests/function_macros-1
--- dmake/tests/function_macros-1	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/function_macros-1	2005-06-02 05:41:19.000000000 +0200
@@ -0,0 +1,96 @@
+#!/bin/sh
+
+# 01.06.2005 Volker Quetschke
+# Tests for dmake function macros. (issue 36027, issue 37053)
+
+: ${DMAKEPROG:=dmake}
+file1="mymakefile.mk"
+tmpfiles="$file1"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+trap 'rm -rf $tmpfiles' 1 2 3 15 
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+cat > $file1 <<EOT
+# Testing function macros
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+TEST1:=a b c
+
+all:
+	@echo \$\$(and ...) section
+	test "::" = ":\$(and  \$(nil) \$(nil)  ):"
+	test ":t:" = ":\$(and  a b  ):"
+	test "::" = ":\$(and  \$(nil) \
+ \$(nil)  ):"
+	test "::" = ":\$(and   \
+   ):"
+
+	@echo -e \n\$\$(assign ...) section
+	test ":A:" =  ":\$(assign A := B ):"
+	test "\$(A)" = "B"
+	test ":A:" = ":\$(assign A\
+ := C ):"
+	test "\$(A)" = "C"
+
+	@echo -e \n\$\$(echo ...) section
+	test ":123:" = ":\$(echo 123    ):"
+	test ":123:" = ":\$(echo  123    ):"
+	test ":123:" = ":\$(echo\
+ 123    ):"
+	test ":123:" = ":\$(echo     \
+ 123    ):"
+
+	@echo -e \n\$\$(eq ...) section
+	test ":true:" = ":\$(eq,1,1 true false):"
+	test ":true:" = ":\$(eq,1,1\
+ true false):"
+
+#       These tests need to use a shell
+	+@echo -e '\n\$\$(foreach ...) section'
+	+test ":[a] [b] [c]:" = ":\$(foreach,i,\$(TEST1) [\$i]):"
+	+test ":[a] [b] [c]:" = ":\$(foreach,i,\$(TEST1)     [\$i]):"
+	+test ":[a] [b] [c]:" = ":\$(foreach,i,\$(TEST1) [\$i]  ):"
+	+test ":[a] [b] [c]:" = ":\$(foreach,i,\$(TEST1) \
+    [\$i]  ):"
+
+	@echo -e \n\$\$(nil ...) section
+	test "::" = ":\$(nil abc):"
+#   Fails with syntax error
+	test "::" = ":\$(nil \
+          ):"
+
+	@echo -e \n\$\$(not ...) section
+	test "::" = ":\$(not abc):"
+	test ":t:" = ":\$(not \$(NULL)):"
+	test ":t:" = ":\$(not   ):"
+	test ":t:" = ":\$(not  \
+     ):"
+
+	@echo -e \n\$\$(null ...) section
+	test ":true:" = ":\$(null, true      false):"
+	test ":false:" = ":\$(null,a true false):"
+	test ":false:" = ":\$(null,a true false    ):"
+	test ":false:" = ":\$(null,a \
+     true false    ):"
+	test ":true:" = ":\$(null, \
+     true false    ):"
+
+	@echo -e \n\$\$(or ...) section
+	test "::" = ":\$(or  \$(nil) \$(nil)  ):"
+	test ":t:" = ":\$(or  a \$(nil)  ):"
+	test "::" = ":\$(or  \$(nil) \
+ \$(nil)  ):"
+	test "::" = ":\$(or   \
+   ):"
+
+EOT
+
+${DMAKEPROG} -r -f $file1
+result=$?
+
+test $result -eq 0 && echo "Success - Cleaning up" && rm -f ${tmpfiles}
+test $result -ne 0 && echo "Failure!"
+exit $result
\ Kein Zeilenumbruch am Dateiende.
diff -Nur m148/dmake/tests/function_macros-2 dmake43p01/dmake/tests/function_macros-2
--- dmake/tests/function_macros-2	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/function_macros-2	2005-06-02 05:41:19.000000000 +0200
@@ -0,0 +1,64 @@
+#!/bin/sh
+
+# 01.06.2005 Volker Quetschke
+# Tests for dmake function macros - part 2.
+# (issue 36027, issue 37053, issue 37491)
+
+: ${DMAKEPROG:=dmake}
+file1="mymakefile.mk"
+tmpfiles="$file1"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+trap 'rm -rf $tmpfiles' 1 2 3 15 
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+cat > $file1 <<EOT
+# Testing function macros
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+TEST1:=a b c
+PAT:=Z
+
+all:
+	+@echo -e '\n\$\$(shell ...) section'
+	+test ":123:" = ":\$(shell echo 123  ):"
+	+test ":123:" = ":\$(shell   \
+     echo 123  ):"
+	+test ":123:" = ":\$(shell echo \
+     123  ):"
+
+	+@echo -e '\n\$\$(sort ...) section'
+	+test ":a b c:" = ":\$(sort c  a b   ):"
+	+test ":a b c:" = ":\$(sort\
+     c  a b   ):"
+	+test ":a b c:" = ":\$(sort   c \
+    a b   ):"
+
+	+@echo -e '\n\$\$(strip ...) section'
+	+test ":c a b:" = ":\$(strip    c   a b   ):"
+	+test ":c a b:" = ":\$(strip    c \
+     a b   ):"
+
+	+@echo -e '\n\$\$(subst ...) section' 
+	+test ":aZbZc:" = ":\$(subst,\$(SPACECHAR),\$(PAT) \$(TEST1)):"
+	+test ":aZbZc:" = ":\$(subst,%Z*Z%,\$(PAT) \$(TEST1:s/ /%Z*Z%/)):"
+	+test ":aZbZc:" = ":\$(subst,Y,\$(PAT)       aYbYc         ):"
+	+test ":aZbZc:" = ":{\$(subst,Y,Z       aYbYc         )}:"
+# Undefined
+#	+test ":Should error out:BUG:\$(subst, ,\$(PAT) \$(TEST1)):"
+
+	+@echo -e '\n\$\$(uniq ...) section'
+	+test ":a b c:" = ":\$(uniq    c   a b c ):"
+	+test ":a b c:" = ":\$(uniq    c   \
+     a b c ):"
+
+EOT
+
+${DMAKEPROG} -r -f $file1
+result=$?
+
+test $result -eq 0 && echo "Success - Cleaning up" && rm -f ${tmpfiles}
+test $result -ne 0 && echo "Failure!"
+exit $result
\ Kein Zeilenumbruch am Dateiende.
diff -Nur m148/dmake/tests/function_macros-3 dmake43p01/dmake/tests/function_macros-3
--- dmake/tests/function_macros-3	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/function_macros-3	2005-09-05 23:10:17.000000000 +0200
@@ -0,0 +1,40 @@
+#!/bin/sh
+
+# 04.09.2005 Volker Quetschke
+# Tests $(shell ..) function macro when using two concurrend processes.
+# (issue 53148)
+
+: ${DMAKEPROG:=dmake}
+file1="makefile.mk"
+file2="stdout.txt"
+tmpfiles="$file1 $file2"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+trap 'rm -rf $tmpfiles' 1 2 3 15 
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+cat > $file1 <<EOT
+# Testing continuation char in recipes
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+AA=X\$(shell +echo shellexec)X
+
+$file2 :
+	+@echo b0
+	+@echo b1
+	+@echo b2
+	+@echo A\$(AA)A > $file2
+EOT
+
+${DMAKEPROG} -P2 -r -f $file1
+result=$?
+if test "`cat $file2`" != "AXshellexecXA"; then
+  echo "Wrong result: `cat $file2`, AXshellexecXA expected!"
+  result=1
+fi
+
+test $result -eq 0 && echo "Success - Cleaning up" && rm -f ${tmpfiles}
+test $result -ne 0 && echo "Failure!"
+exit $result
diff -Nur m148/dmake/tests/function_macros-4 dmake43p01/dmake/tests/function_macros-4
--- dmake/tests/function_macros-4	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/function_macros-4	2005-09-05 23:10:17.000000000 +0200
@@ -0,0 +1,35 @@
+#!/bin/sh
+
+# 04.09.2005 Volker Quetschke
+# Tests $(shell ..) if function macro is executed after previous recipe lines
+# when using two concurrend (or more) processes.
+# (issue 53148)
+
+: ${DMAKEPROG:=dmake}
+file1="makefile.mk"
+file2="stdout.txt"
+tmpfiles="$file1 $file2"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+trap 'rm -rf $tmpfiles' 1 2 3 15 
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+cat > $file1 <<EOT
+# Testing continuation char in recipes
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+aaa :
+	+echo b0
+	+echo b1
+	+echo teststring > $file2
+	+echo A\$(shell cat $file2)A
+EOT
+
+${DMAKEPROG} -P2 -r -f $file1
+result=$?
+
+test $result -eq 0 && echo "Success - Cleaning up" && rm -f ${tmpfiles}
+test $result -ne 0 && echo "Failure!"
+exit $result
diff -Nur m148/dmake/tests/infra-0 dmake43p01/dmake/tests/infra-0
--- dmake/tests/infra-0	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/infra-0	2005-06-02 05:41:20.000000000 +0200
@@ -0,0 +1,42 @@
+#!/bin/sh
+
+# 01.06.2005 Volker Quetschke
+# Basic test of dmake existence and the needed infrastructure.
+
+: ${DMAKEPROG:=dmake}
+file1="mymakefile.mk"
+file2="mytestfile"
+tmpfiles="$file1 $file2"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+# Test for "test" programm in path
+which test > /dev/null || { echo "Failure! \"test\" program missing." ; exit 1; } 
+echo "Found \"test\" program."
+
+# Test for "echo" programm in path
+which echo  > /dev/null || { echo "Failure! \"echo\" program missing." ; exit 1; }
+echo "Found \"echo\" program."
+
+# Test for dmake program
+test -x "${DMAKEPROG}" || { echo "Failure! \"dmake\" is missing." ; exit 1; }
+echo "Found \"dmake\" program."
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+cat > $file1 <<EOT
+# simple makefile
+${file2}:
+	@echo 'Generating ${file2}'
+	touch ${file2}
+EOT
+
+${DMAKEPROG} -r -f $file1
+result=$?
+if test ! -e "${file2}"; then
+  echo "File missing"
+  result=1
+fi
+
+test $result -eq 0 && echo "Success - Cleaning up" && rm -f ${tmpfiles}
+test $result -ne 0 && echo "Failure!"
+exit $result
\ Kein Zeilenumbruch am Dateiende.
diff -Nur m148/dmake/tests/macros-1 dmake43p01/dmake/tests/macros-1
--- dmake/tests/macros-1	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/macros-1	2005-06-02 05:41:20.000000000 +0200
@@ -0,0 +1,40 @@
+#!/bin/sh
+
+# 01.06.2005 Volker Quetschke
+# Tests for special dmake macros.
+# (issue 37491)
+
+: ${DMAKEPROG:=dmake}
+file1="mymakefile.mk"
+tmpfiles="$file1"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+trap 'rm -rf $tmpfiles' 1 2 3 15 
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+cat > $file1 <<EOT
+# Testing macros
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+TEST1:=a b c
+PAT:=Z
+
+all:
+	+@echo -e '\n\$\$(SPACECHAR) section' 
+	+test ": :" = ":\$(SPACECHAR):"
+
+	+@echo -e '\n\$\$(MACRO:s/pat/rep/) section' 
+	+test ":aZbZc:" = ":\$(TEST1:s/ /Z/):"
+	+test ":aZbZc:" = ":\$(TEST1:s/\$(SPACECHAR)/Z/):"
+	+test ":aZbZc:" = ":\$(TEST1:s/ /\$(PAT)/  ):"
+
+EOT
+
+${DMAKEPROG} -r -f $file1
+result=$?
+
+test $result -eq 0 && echo "Success - Cleaning up" && rm -f ${tmpfiles}
+test $result -ne 0 && echo "Failure!"
+exit $result
\ Kein Zeilenumbruch am Dateiende.
diff -Nur m148/dmake/tests/macros-2 dmake43p01/dmake/tests/macros-2
--- dmake/tests/macros-2	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/macros-2	2006-01-27 02:22:36.000000000 +0100
@@ -0,0 +1,61 @@
+#!/bin/sh
+
+# 26.01.2006 Volker Quetschke
+# TMD is sometimes set incorrectly (issue 61170).
+
+: ${DMAKEPROG:=dmake}
+file1="mfile1.mk"
+file2="mfile2.mk"
+file3="\"dirwith space\""
+tmpfiles="$file1 $file2 $file3"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+# Remove files from prior failed run
+rm -rf $tmpfiles
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+# Testcase 1
+cat > $file1 <<EOT
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+all .SETDIR=${TMP} :
+	+@echo \$(TMD)
+
+EOT
+
+# Testcase 2
+mkdir -p "dirwith space"
+cat > $file2 <<EOT
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+
+all ".SETDIR=dirwith space" :
+	+@echo \$(TMD)
+EOT
+
+output1=$(${DMAKEPROG} -r -f $file1)
+result1=$?
+output2=$(${DMAKEPROG} -r -f $file2)
+result2=$?
+
+if test "$output1" = ""; then
+  echo "Test 1: Wrong result"
+  result1=1
+fi
+if test "$output2" != ".."; then
+  echo "Test 2: Wrong result"
+  result2=1
+fi
+
+if test $result1 -eq 0 -a $result2 -eq 0; then
+  echo "Success - Cleaning up"
+  rm -rf ${tmpfiles}
+  result=0
+else
+  echo "Failure!"
+  result=1
+fi
+exit $result 
diff -Nur m148/dmake/tests/Makefile.am dmake43p01/dmake/tests/Makefile.am
--- dmake/tests/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/Makefile.am	2006-01-27 02:22:35.000000000 +0100
@@ -0,0 +1,9 @@
+## Makefile for the tests subdirectory of dmake.
+
+TESTS = infra-0 function_macros-1 function_macros-2 function_macros-3 \
+        function_macros-4 macros-1 macros-2 recipes-1 \
+        misc-1 misc-2 misc-3 misc-4 misc-5 misc-6
+
+TESTS_ENVIRONMENT = DMAKEPROG="../dmake"
+
+EXTRA_DIST = $(TESTS)
diff -Nur m148/dmake/tests/Makefile.in dmake43p01/dmake/tests/Makefile.in
--- dmake/tests/Makefile.in	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/Makefile.in	2006-01-27 02:22:35.000000000 +0100
@@ -0,0 +1,371 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
+subdir = tests
+DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
+	$(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJEXT = @OBJEXT@
+OS_LIBRARY = @OS_LIBRARY@
+OS_SUBDIRS = @OS_SUBDIRS@
+OS_TYPE = @OS_TYPE@
+OS_VERSION = @OS_VERSION@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host_alias = @host_alias@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+TESTS = infra-0 function_macros-1 function_macros-2 function_macros-3 \
+        function_macros-4 macros-1 macros-2 recipes-1 \
+        misc-1 misc-2 misc-3 misc-4 misc-5 misc-6
+
+TESTS_ENVIRONMENT = DMAKEPROG="../dmake"
+EXTRA_DIST = $(TESTS)
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  tests/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign  tests/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+uninstall-info-am:
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+check-TESTS: $(TESTS)
+	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
+	srcdir=$(srcdir); export srcdir; \
+	list='$(TESTS)'; \
+	if test -n "$$list"; then \
+	  for tst in $$list; do \
+	    if test -f ./$$tst; then dir=./; \
+	    elif test -f $$tst; then dir=; \
+	    else dir="$(srcdir)/"; fi; \
+	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
+	      all=`expr $$all + 1`; \
+	      case " $(XFAIL_TESTS) " in \
+	      *" $$tst "*) \
+		xpass=`expr $$xpass + 1`; \
+		failed=`expr $$failed + 1`; \
+		echo "XPASS: $$tst"; \
+	      ;; \
+	      *) \
+		echo "PASS: $$tst"; \
+	      ;; \
+	      esac; \
+	    elif test $$? -ne 77; then \
+	      all=`expr $$all + 1`; \
+	      case " $(XFAIL_TESTS) " in \
+	      *" $$tst "*) \
+		xfail=`expr $$xfail + 1`; \
+		echo "XFAIL: $$tst"; \
+	      ;; \
+	      *) \
+		failed=`expr $$failed + 1`; \
+		echo "FAIL: $$tst"; \
+	      ;; \
+	      esac; \
+	    else \
+	      skip=`expr $$skip + 1`; \
+	      echo "SKIP: $$tst"; \
+	    fi; \
+	  done; \
+	  if test "$$failed" -eq 0; then \
+	    if test "$$xfail" -eq 0; then \
+	      banner="All $$all tests passed"; \
+	    else \
+	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
+	    fi; \
+	  else \
+	    if test "$$xpass" -eq 0; then \
+	      banner="$$failed of $$all tests failed"; \
+	    else \
+	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
+	    fi; \
+	  fi; \
+	  dashes="$$banner"; \
+	  skipped=""; \
+	  if test "$$skip" -ne 0; then \
+	    skipped="($$skip tests were not run)"; \
+	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
+	      dashes="$$skipped"; \
+	  fi; \
+	  report=""; \
+	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
+	    report="Please report to $(PACKAGE_BUGREPORT)"; \
+	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
+	      dashes="$$report"; \
+	  fi; \
+	  dashes=`echo "$$dashes" | sed s/./=/g`; \
+	  echo "$$dashes"; \
+	  echo "$$banner"; \
+	  test -z "$$skipped" || echo "$$skipped"; \
+	  test -z "$$report" || echo "$$report"; \
+	  echo "$$dashes"; \
+	  test "$$failed" -eq 0; \
+	else :; fi
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
+check: check-am
+all-am: Makefile
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: all all-am check check-TESTS check-am clean clean-generic \
+	distclean distclean-generic distdir dvi dvi-am html html-am \
+	info info-am install install-am install-data install-data-am \
+	install-exec install-exec-am install-info install-info-am \
+	install-man install-strip installcheck installcheck-am \
+	installdirs maintainer-clean maintainer-clean-generic \
+	mostlyclean mostlyclean-generic pdf pdf-am ps ps-am uninstall \
+	uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -Nur m148/dmake/tests/misc-1 dmake43p01/dmake/tests/misc-1
--- dmake/tests/misc-1	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/misc-1	2005-06-04 20:07:42.000000000 +0200
@@ -0,0 +1,34 @@
+#!/bin/sh
+
+# 04.06.2005 Volker Quetschke
+# Test for a bug that dmake complained about a continuation char followed
+# by a newline. This could happen if /<nl> was used in an imported 
+# environment variable.
+# This bug was <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=310107?>
+
+: ${DMAKEPROG:=dmake}
+file1="mymakefile.mk"
+tmpfiles="$file1"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+trap 'rm -rf $tmpfiles' 1 2 3 15 
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+cat > $file1 <<EOT
+# Testing continuation char in recipes
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+.IMPORT : MYMACRO
+all:
+	+echo "\$(MYMACRO)"
+
+EOT
+
+export MYMACRO="aa\\
+aa"; ${DMAKEPROG} -r -f $file1
+result=$?
+
+test $result -eq 0 && echo "Success - Cleaning up" && rm -f ${tmpfiles}
+test $result -ne 0 && echo "Failure!"
+exit $result
\ Kein Zeilenumbruch am Dateiende.
diff -Nur m148/dmake/tests/misc-2 dmake43p01/dmake/tests/misc-2
--- dmake/tests/misc-2	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/misc-2	2005-09-05 05:17:14.000000000 +0200
@@ -0,0 +1,39 @@
+#!/bin/sh
+
+# 01.09.2005 Volker Quetschke
+# Tests if dmake can work with makefiles with DOS lineendings.
+# (issue 52238)
+
+: ${DMAKEPROG:=dmake}
+file1="mymakefile.mk"
+file2="mymakefile_dos.mk"
+tmpfiles="$file1 $file2"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+trap 'rm -rf $tmpfiles' 1 2 3 15 
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+cat > $file1 <<EOT
+# Testing continuation char in recipes
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+.NOTABS	  !:= yes
+
+all:
+
+	echo aaa
+
+EOT
+
+#more compatible version of: unix2dos $file1
+: ${AWK:=awk}
+$AWK 'sub("$", "\r")' $file1 > $file2
+
+${DMAKEPROG} -r -f $file2
+result=$?
+
+test $result -eq 0 && echo "Success - Cleaning up" && rm -f ${tmpfiles}
+test $result -ne 0 && echo "Failure!"
+exit $result
diff -Nur m148/dmake/tests/misc-3 dmake43p01/dmake/tests/misc-3
--- dmake/tests/misc-3	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/misc-3	2005-09-20 02:50:47.000000000 +0200
@@ -0,0 +1,44 @@
+#!/bin/sh
+
+# 17.09.2005 Volker Quetschke
+# Test for line continuation in comments.
+# (issue 49461)
+
+: ${DMAKEPROG:=dmake}
+file1="mymakefile.mk"
+tmpfiles="$file1"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+trap 'rm -rf $tmpfiles' 1 2 3 15 
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+cat > $file1 <<EOT
+# Testing continuation char in recipes
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+AAA:=aaa
+
+# A continued comment line followed/ended by an empty line \
+
+AAA+=bbb
+
+all:
+	+@echo \$(AAA)
+
+EOT
+
+output=$(${DMAKEPROG} -r -f $file1)
+result=$?
+
+# The space between aaa and bbb comes from the +=
+if test "$output" != "aaa bbb"; then
+  echo "Wrong result"
+  result=1
+fi
+
+
+test $result -eq 0 && echo "Success - Cleaning up" && rm -f ${tmpfiles}
+test $result -ne 0 && echo "Failure!"
+exit $result
diff -Nur m148/dmake/tests/misc-4 dmake43p01/dmake/tests/misc-4
--- dmake/tests/misc-4	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/misc-4	2005-10-11 20:01:42.000000000 +0200
@@ -0,0 +1,62 @@
+#!/bin/sh
+
+# 06.10.2005 Volker Quetschke
+# Test for parallel operation.
+# (no issue, sanity check only)
+
+: ${DMAKEPROG:=dmake}
+file1="mymakefile.mk"
+file2="testfile"
+file3="testfile1"
+file4="testfile2"
+file5="testfile3"
+tmpfiles="$file1 $file2 $file3 $file4 $file5"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+# Remove files from prior failed run
+rm -rf $tmpfiles
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+cat > $file1 <<EOT
+# Testing parallel execution
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+testfile : testfile2 testfile3 testfile1
+	+@echo xx > \$@
+
+testfile1 :
+	+@echo making \$@ 1>&2
+	+@sleep 1
+	+@echo -n t1
+	+@echo 1 > \$@
+
+testfile2 :
+	+@echo making \$@ 1>&2
+	+@sleep 2
+	+@echo -n t2
+	+@echo 2 > \$@
+
+testfile3 :
+	+@echo making \$@ 1>&2
+	+@sleep 3
+	+@echo -n t3
+	+@echo 3 > \$@
+
+EOT
+
+output=$(${DMAKEPROG} -r -P3 -f $file1)
+result=$?
+
+# In parallel operation the targets with the smaller sleep value
+# will finish first.
+if test "$output" != "t1t2t3"; then
+  echo "Wrong result"
+  result=1
+fi
+
+
+test $result -eq 0 && echo "Success - Cleaning up" && rm -f ${tmpfiles}
+test $result -ne 0 && echo "Failure!"
+exit $result
diff -Nur m148/dmake/tests/misc-5 dmake43p01/dmake/tests/misc-5
--- dmake/tests/misc-5	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/misc-5	2005-10-11 19:48:48.000000000 +0200
@@ -0,0 +1,49 @@
+#!/bin/sh
+
+# 06.10.2005 Volker Quetschke
+# Test if infered makefile generation works.
+# (issue 54938)
+
+: ${DMAKEPROG:=dmake}
+file1="mymakefile.mk"
+file2="incfile.mk"
+file3="incfiledepend"
+tmpfiles="$file1 $file2 $file3"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+# Remove files from prior failed run
+rm -rf $tmpfiles
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+cat > $file1 <<EOT
+# Verify that makefile generation is finished when using it
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+incfile.mk : incfiledepend
+	+@echo AA:=123 > \$@
+
+incfiledepend :
+	+@sleep 1
+	+@echo 1234 > \$@
+
+.INCLUDE : incfile.mk
+
+all :
+	+@echo aa:\$(AA):bb 
+EOT
+
+output=$(${DMAKEPROG} -r -P2 -f $file1 all)
+result=$?
+
+# The space between aaa and bbb comes from the +=
+if test "$output" != "aa:123:bb"; then
+  echo "Wrong result"
+  result=1
+fi
+
+
+test $result -eq 0 && echo "Success - Cleaning up" && rm -f ${tmpfiles}
+test $result -ne 0 && echo "Failure!"
+exit $result
diff -Nur m148/dmake/tests/misc-6 dmake43p01/dmake/tests/misc-6
--- dmake/tests/misc-6	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/misc-6	2006-01-06 02:24:07.000000000 +0100
@@ -0,0 +1,65 @@
+#!/bin/sh
+
+# 05.01.2006 Volker Quetschke
+# Old dmakes throw a segmentation fault in special cases with
+# dynamic prerequisits ( $$@ ).
+# (issue 58259)
+
+: ${DMAKEPROG:=dmake}
+file1="mfile1.mk"
+file2="mfile2.mk"
+tmpfiles="$file1 $file2"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+# Remove files from prior failed run
+rm -rf $tmpfiles
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+# Testcase 1
+cat > $file1 <<EOT
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+all : allA allB
+
+all  : \$\$@A \$\$@B
+
+allA :
+	+echo XaX
+
+allB :
+	+echo XbX
+EOT
+
+# Testcase 2
+cat > $file2 <<EOT
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+all  : \$\$@A \$\$@B
+
+all : allA allB
+
+allA :
+	+echo XaX
+
+allB :
+	+echo XbX
+EOT
+
+${DMAKEPROG} -r -f $file1 >/dev/null 2>&1
+result1=$?
+${DMAKEPROG} -r -f $file2 >/dev/null 2>&1
+result2=$?
+
+if test $result1 -eq 0 -a $result2 -eq 0; then
+  echo "Success - Cleaning up"
+  rm -f ${tmpfiles}
+  result=0
+else
+  test $result1 -ne 0 && echo "Failure in testcase 1! Remove the corefile!"
+  test $result2 -ne 0 && echo "Failure in testcase 2! Remove the corefile!"
+  result=1
+fi
+exit $result
diff -Nur m148/dmake/tests/README dmake43p01/dmake/tests/README
--- dmake/tests/README	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/README	2005-10-11 20:01:41.000000000 +0200
@@ -0,0 +1,12 @@
+DMAKE TESTCASES
+===============
+
+The testcases in this directory will be executed by "make check" in
+this or the top directory.
+
+Each test can be executed as a standalone script that will test the
+first dmake that is found in the path. A different dmake to be tested
+can be specified by setting the DMAKEPROG environment variable.
+
+Example:
+$ DMAKEPROG=../dmake ./misc-4
diff -Nur m148/dmake/tests/recipes-1 dmake43p01/dmake/tests/recipes-1
--- dmake/tests/recipes-1	1970-01-01 01:00:00.000000000 +0100
+++ dmake/tests/recipes-1	2005-06-02 05:41:20.000000000 +0200
@@ -0,0 +1,37 @@
+#!/bin/sh
+
+# 01.06.2005 Volker Quetschke
+# Tests for line continuation in recipes.
+# (issue 37053)
+
+: ${DMAKEPROG:=dmake}
+file1="mymakefile.mk"
+tmpfiles="$file1"
+
+trap '{ echo "trapped signal - removing temporary files" ; rm -rf $tmpfiles ; }' 1 2 3 15
+
+trap 'rm -rf $tmpfiles' 1 2 3 15 
+
+# Remember to quote variables in generated makefiles( $ -> \$ ).
+cat > $file1 <<EOT
+# Testing continuation char in recipes
+SHELL*:=/bin/sh 
+SHELLFLAGS*:=-ce
+
+all:
+	+@echo line1\
+line2
+
+EOT
+
+output=$(${DMAKEPROG} -r -f $file1)
+result=$?
+if test "$output" != "line1line2"; then
+  echo "Wrong result"
+  result=1
+fi
+
+
+test $result -eq 0 && echo "Success - Cleaning up" && rm -f ${tmpfiles}
+test $result -ne 0 && echo "Failure!"
+exit $result
\ Kein Zeilenumbruch am Dateiende.
diff -Nur m148/dmake/tos/ruletab.c dmake43p01/dmake/tos/ruletab.c
--- dmake/tos/ruletab.c	2000-09-22 17:33:33.000000000 +0200
+++ dmake/tos/ruletab.c	2005-04-09 23:22:34.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: ruletab.c,v 1.1.1.1 2000/09/22 15:33:33 hr Exp $
+/* RCS  $Id: ruletab.c,v 1.1.1.1.132.1 2005/04/09 21:22:34 vq Exp $
 --
 -- SYNOPSIS
 --      Default initial configuration of dmake.
@@ -33,7 +33,7 @@
 	"MAXPROCESSLIMIT := 1",
 	"MAXPROCESS := 1",
 	"MAXLINELENGTH := 8190",
-	".IMPORT .IGNORE: ROOTDIR",
+	".IMPORT .IGNORE: ROOTDIR DMAKEROOT",
 	".MAKEFILES : makefile.mk Makefile makefile",
 	".SOURCE    : .NULL",
 #include "startup.h"
diff -Nur m148/dmake/tos/startup.h dmake43p01/dmake/tos/startup.h
--- dmake/tos/startup.h	2000-09-22 17:33:33.000000000 +0200
+++ dmake/tos/startup.h	2005-04-09 23:22:34.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: startup.h,v 1.1.1.1 2000/09/22 15:33:33 hr Exp $
+/* RCS  $Id: startup.h,v 1.1.1.1.132.1 2005/04/09 21:22:34 vq Exp $
 --
 -- SYNOPSIS
 --      Definition of MAKESTARTUP
@@ -24,4 +24,5 @@
 --      Use cvs log to obtain detailed change logs.
 */
 
-"MAKESTARTUP := $(ROOTDIR)/etc/startup/startup.mk",
+"DMAKEROOT *:= $(ROOTDIR)/etc/startup",
+"MAKESTARTUP := $(DMAKEROOT)/startup.mk",
diff -Nur m148/dmake/unix/cygwin/public.h dmake43p01/dmake/unix/cygwin/public.h
--- dmake/unix/cygwin/public.h	2005-09-08 20:00:23.000000000 +0200
+++ dmake/unix/cygwin/public.h	2006-01-30 21:28:19.000000000 +0100
@@ -1,37 +1,46 @@
-/*************************************************************************
- *
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: public.h,v $
- *
- *  $Revision: 1.5 $
- *
- *  last change: $Author: rt $ $Date: 2005/09/08 18:00:23 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
- *
- ************************************************************************/
+/* $RCSfile: public.h,v $
+-- $Revision: 1.5.2.1 $
+-- last change: $Author: vq $ $Date: 2006/01/30 20:28:19 $
+--
+-- WARNING  -- This file is AUTOMATICALLY GENERATED DO NOT EDIT IT
+--
+--
+-- SYNOPSIS
+--      Local functions exported to be visible by others.
+--
+-- DESCRIPTION
+--      This file is generated by 'genpub'.  Function declarations
+--      that appear in this file are extracted by 'genpub' from
+--      source files.  Any function in the source file whose definition
+--      appears like:
+--
+--          PUBLIC return_type
+--          function( arg_list );
+--          type_expr1 arg1;
+--          ...
+--
+--      has its definition extracted and a line of the form:
+--
+--          return_type function ANSI((type_expr1,type_expr2,...));
+--
+--      entered into the output file.
+--
+-- AUTHOR
+--      Dennis Vadura, dvadura@dmake.wticorp.com
+--
+-- WWW
+--      http://dmake.wticorp.com/
+--
+-- COPYRIGHT
+--      Copyright (c) 1996,1997 by WTI Corp.  All rights reserved.
+-- 
+--      This program is NOT free software; you can redistribute it and/or
+--      modify it under the terms of the Software License Agreement Provided
+--      in the file <distribution-root>/readme/license.txt.
+--
+-- LOG
+--      Use cvs log to obtain detailed change logs.
+*/
 
 #ifndef _DMAKE_PUBLIC_h
 #define _DMAKE_PUBLIC_h
@@ -131,6 +140,7 @@
 char *Do_comment ANSI((char *, char **, int));
 char *Get_token ANSI((TKSTRPTR, char *, int));
 void Quit ANSI(());
+const int in_quit ANSI((void));
 void Read_state ANSI(());
 void Write_state ANSI(());
 int Check_state ANSI((CELLPTR, STRINGPTR *, int));
@@ -154,5 +164,8 @@
 int Wait_for_child ANSI((int, int));
 void Clean_up_processes ANSI(());
 time_t CacheStat ANSI((char *, int));
+int touch_arch ANSI(( char *, char *));
+void void_lcache ANSI(( char *, char *));
+
 
 #endif
diff -Nur m148/dmake/unix/dcache.c dmake43p01/dmake/unix/dcache.c
--- dmake/unix/dcache.c	2004-09-08 18:09:00.000000000 +0200
+++ dmake/unix/dcache.c	2005-06-01 04:51:26.000000000 +0200
@@ -1,6 +1,6 @@
 /* $RCSfile: dcache.c,v $
--- $Revision: 1.4 $
--- last change: $Author: rt $ $Date: 2004/09/08 16:09:00 $
+-- $Revision: 1.4.6.3 $
+-- last change: $Author: vq $ $Date: 2005/06/01 02:51:26 $
 --
 -- SYNOPSIS
 --      Directory cache management routines.
@@ -173,6 +173,9 @@
 
    if( force && !loaded) {
       if (strlen(comp) > NameMax || DMSTAT(spath,&stbuf) != 0) {
+	 if (strlen(comp) > NameMax)
+	    Warning( "File [%s] longer than value of NAMEMAX [%d].\n\
+	Assume unix time 0.\n", comp, NameMax );
 	 if(ep)
 	    ep->mtime = 0L;
       }
diff -Nur m148/dmake/unix/Makefile.in dmake43p01/dmake/unix/Makefile.in
--- dmake/unix/Makefile.in	2004-10-22 10:10:09.000000000 +0200
+++ dmake/unix/Makefile.in	2005-09-26 02:33:17.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -14,8 +14,6 @@
 
 @SET_MAKE@
 
-SOURCES = $(libunix_a_SOURCES)
-
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
 VPATH = @srcdir@
@@ -36,6 +34,8 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = unix
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -81,8 +81,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -129,7 +132,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -164,9 +171,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  unix/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  unix/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  unix/Makefile
+	  $(AUTOMAKE) --foreign  unix/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
diff -Nur m148/dmake/unix/ruletab.c dmake43p01/dmake/unix/ruletab.c
--- dmake/unix/ruletab.c	2004-09-08 18:09:26.000000000 +0200
+++ dmake/unix/ruletab.c	2005-04-09 23:22:35.000000000 +0200
@@ -1,6 +1,6 @@
 /* $RCSfile: ruletab.c,v $
--- $Revision: 1.4 $
--- last change: $Author: rt $ $Date: 2004/09/08 16:09:26 $
+-- $Revision: 1.4.6.1 $
+-- last change: $Author: vq $ $Date: 2005/04/09 21:22:35 $
 --
 -- SYNOPSIS
 --      Default initial configuration of dmake.
@@ -35,7 +35,7 @@
 	"MAXPROCESSLIMIT := 10",
 	"MAXLINELENGTH := 8190",
 #include "dmakeroot.h"
-	".IMPORT .IGNORE: DMAKEROOT SOLARVER UPD INPATH OS UPDMINOREXT",
+	".IMPORT .IGNORE: DMAKEROOT",
 	".MAKEFILES : makefile.mk Makefile makefile",
 	".SOURCE    : .NULL",
 #include "startup.h"
diff -Nur m148/dmake/unix/runargv.c dmake43p01/dmake/unix/runargv.c
--- dmake/unix/runargv.c	2004-09-08 18:09:39.000000000 +0200
+++ dmake/unix/runargv.c	2005-10-11 19:39:40.000000000 +0200
@@ -1,6 +1,6 @@
 /* $RCSfile: runargv.c,v $
--- $Revision: 1.8 $
--- last change: $Author: rt $ $Date: 2004/09/08 16:09:39 $
+-- $Revision: 1.8.6.7 $
+-- last change: $Author: vq $ $Date: 2005/10/11 17:39:40 $
 --
 -- SYNOPSIS
 --      Invoke a sub process.
@@ -24,8 +24,50 @@
 -- LOG
 --      Use cvs log to obtain detailed change logs.
 */
+/*
+This file (runargv.c) provides all the parallel process handling routines
+for dmake on unix like operating systems. The following text briefly
+describes the process flow.
+
+Exec_commands() [make.c] builds the recipes associated to the given target.
+  They are build sequentially in a loop that calls Do_cmnd() for each of them.
+
+Do_cmnd() [sysintf.c] feeds the given command or command group to runargv().
+
+runargv() [unix/runargv] The actual child processes are started in this
+  function, even in non parallel builds (MAXPROCESS==1) child processes are
+  created.
+  If recipes for a target are currently running attach them to the process
+  queue (_procs[i]) of that target and return.
+  If the maximum number of running process queues is reached
+  Wait_for_child(?, -1) is used to wait for one to be available.
+  New child processes are started using:
+    spawn:       currently disabled, see line 40.
+    fork/execvp: Create a client process with fork and run the command with
+                 execvp.
+  The parent calls _add_child() to track the child.
+
+_add_child() [unix/runargv] creates a new process queue and enters the child
+  parameters.
+  If Wait_for_completion (global variable) is set the function calls
+  Wait_for_child to waits for the new process queue to be finished.
+
+Wait_for_child(?, pid) [unix/runargv] waits for process queues to finish.
+  All finished processes are handled by calling _finished_child() for each
+  of them.
+  If pid = -1 wait for the next child process to finish.
+  If Wait_for_completion is set handle all finished processes until the
+  process with the given pid is reached.
+
+_finished_child(pid, ?) [unix/runargv] removes the finished child from its
+  process queue. If there are more commands in this queue start the next
+  with runargv().
+*/
 
 #include <signal.h>
+
+#include "extern.h"
+
 #ifdef HAVE_WAIT_H
 #  include <wait.h>
 #else 
@@ -34,8 +76,6 @@
 # endif
 #endif
 
-#include "extern.h"
-
 /*  temporarily comment out spawn code as it does not actually work yet */
 #undef HAVE_SPAWN_H
 #if HAVE_SPAWN_H
@@ -113,13 +153,23 @@
 char	*cmd;
 {
    int          pid;
+   int          st_pq = 0; /* Current _exec_shell target process queue */
    char         **argv;
 
-   if( _running(target) /*&& Max_proc != 1*/ ) {
-      /* The command will be executed when the previous recipe
-       * line completes. */
-      _attach_cmd( cmd, group, ignore, target, last, shell );
-      return(1);
+   /* Special handling for the shell function macro is required. If the currend
+    * command is called as part of a shell escape in a recipe make sure that all
+    * previous recipe lines of this target have finished. */
+   if( Is_exec_shell ) {
+      if( (st_pq = _running(Shell_exec_target)) != -1 ) {
+	 Wait_for_child(FALSE, _procs[st_pq].pr_pid);
+      }
+   } else {
+      if( _running(target) != -1 /*&& Max_proc != 1*/ ) {
+	 /* The command will be executed when the previous recipe
+	  * line completes. */
+	 _attach_cmd( cmd, group, ignore, target, last, shell );
+	 return(1);
+      }
    }
 
 	/*  Any Fatal call can potentially loop by recursion because we
@@ -149,6 +199,7 @@
    }
 #else  /* HAVE_SPAWN_H */
 
+   fflush(stdout);
    switch( pid=fork() ){
 
    case -1: /* fork failed */
@@ -157,7 +208,14 @@
       return(-1);
 
    case 0:  /* child */
+      /* redirect stdout for _exec_shell */
+      if( Is_exec_shell ) {
+	 /* org_out = dup(1); */
+         close(1);
+         dup( fileno(stdout_redir) );
+      }
       execvp(argv[0], argv);
+      /* restoring stdout is not needed */
       Continue = TRUE;   /* survive error message */
       Error("%s: %s", argv[0], strerror( errno ));
       kill(getpid(), SIGTERM);
@@ -181,13 +239,24 @@
    int wid;
    int status;
    int waitchild;
+   int is_exec_shell_status = Is_exec_shell;
+
+   /* It is impossible that processes that were started from _exec_shell
+    * have follow-up commands in its process queue. Unset Is_exec_shell
+    * to prevent piping of child processes that are started from the
+    * _finished_child subroutine and reset to its original value when
+    * leaving this function. */
+   Is_exec_shell = FALSE;
 
    waitchild = (pid == -1)? FALSE : Wait_for_completion;
 
    do {
       wid = wait(&status);
-      if( wid  == -1 )
-		 return(-1);
+
+      if( wid  == -1 ) {
+	 Is_exec_shell = is_exec_shell_status;
+	 return(-1);
+      }
 
       _abort_flg = abort_flg;
       _finished_child(wid, status);
@@ -195,6 +264,7 @@
    }
    while( waitchild && pid != wid );
 
+   Is_exec_shell = is_exec_shell_status;
    return(0);
 }
 
@@ -319,14 +389,14 @@
 {
    register int i;
 
-   if( !_procs ) return(FALSE);
+   if( !_procs ) return( -1 );
 
    for( i=0; i<Max_proc; i++ )
       if( _procs[i].pr_valid &&
 	  _procs[i].pr_target == cp  )
 	 break;
 	 
-   return( i != Max_proc );
+   return( i == Max_proc ? -1 : i );
 }
 
 
diff -Nur m148/dmake/vextern.h dmake43p01/dmake/vextern.h
--- dmake/vextern.h	2000-09-22 17:33:26.000000000 +0200
+++ dmake/vextern.h	2005-10-11 19:39:39.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: vextern.h,v 1.1.1.1 2000/09/22 15:33:26 hr Exp $
+/* RCS  $Id: vextern.h,v 1.1.1.1.132.6 2005/10/11 17:39:39 vq Exp $
 --
 -- SYNOPSIS
 --      Global variable declarations.
@@ -46,10 +46,12 @@
 EXTERN	char*	GShell_flags;	/* pointer to macro value for GROUPFLAGS  */
 EXTERN	char*	Shell_metas;	/* pointer to macro value for SHELLMETAS  */
 EXTERN	char*	Grp_suff;	/* pointer to macro value for GROUPSUFFIX */
-EXTERN  char*   DirSepStr;	/* pointer to macro value for DIRSEPSTR   */
+EXTERN	char*   DirSepStr;	/* pointer to macro value for DIRSEPSTR   */
+EXTERN	char*	AbsPname;	/* pointer to macro value for ABSMAKECMD  */
 EXTERN	char*	Pname;		/* dmake process invoke name              */
 EXTERN	char*	Pwd;		/* current working dir, value of PWD	  */
 EXTERN	char*	Tmd;		/* path to directory where dmake started  */
+EXTERN	char*	Spacechar;	/* pointer to macro value for SPACECHAR   */
 EXTERN	char*	Keep_state;	/* current .KEEP_STATE file		  */
 EXTERN  char*   Escape_char;	/* Current escape character               */
 EXTERN  char*   LastMacName;	/* Last macro successfully parsed	  */
@@ -72,8 +74,12 @@
 EXTERN  CELLPTR Targets;	/* Targets in makefile 			  */
  
 EXTERN  CELLPTR Current_target; /* cell of current target being made      */
-EXTERN  int	Wait_for_completion;
-EXTERN  int	Doing_bang;
+EXTERN  int	Wait_for_completion; /* Wait for subprocess to finish     */
+EXTERN  int	Is_exec_shell;  /* Indicate shell escape                  */
+EXTERN  CELLPTR Shell_exec_target; /* Keep Current_target for _exec__shell */
+EXTERN  FILE*	stdout_redir;   /* For _exec_shell client redirects       */
+EXTERN  int	Doing_bang;	/* TRUE if target timestamp needs not to be
+				 * updated immediately. */
 EXTERN  int	Packed_shell;	/* TRUE if packed args to use a shell	  */
 EXTERN  int	Swap_on_exec;	/* TRUE if going to swap on exec call     */
 EXTERN  int	State;		/* parser state				  */
diff -Nur m148/dmake/win95/borland/ruletab.c dmake43p01/dmake/win95/borland/ruletab.c
--- dmake/win95/borland/ruletab.c	2000-09-22 17:33:36.000000000 +0200
+++ dmake/win95/borland/ruletab.c	2005-04-16 01:55:45.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: ruletab.c,v 1.1.1.1 2000/09/22 15:33:36 hr Exp $
+/* RCS  $Id: ruletab.c,v 1.1.1.1.132.2 2005/04/15 23:55:45 vq Exp $
 --
 -- SYNOPSIS
 --      Default initial configuration of dmake.
@@ -32,9 +32,9 @@
 #include <stdio.h>
 
 static char *_rules[] = {
-	"MAXLINELENGTH := 2046",
+	"MAXLINELENGTH := 8190",
 	"MAXPROCESSLIMIT := 4",
-	".IMPORT .IGNORE: ROOTDIR",
+	".IMPORT .IGNORE: DMAKEROOT",
 	".MAKEFILES : makefile.mk makefile",
 	".SOURCE    : .NULL",
 #include "startup.h"
diff -Nur m148/dmake/win95/borland/sysintf.h dmake43p01/dmake/win95/borland/sysintf.h
--- dmake/win95/borland/sysintf.h	2000-09-22 17:33:36.000000000 +0200
+++ dmake/win95/borland/sysintf.h	2005-04-17 18:47:03.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: sysintf.h,v 1.1.1.1 2000/09/22 15:33:36 hr Exp $
+/* RCS  $Id: sysintf.h,v 1.1.1.1.132.1 2005/04/17 16:47:03 vq Exp $
 --
 -- SYNOPSIS
 --      Interfaces for sysintf.c
@@ -48,9 +48,9 @@
 #ifdef _POSIX_NAME_MAX
 #undef  _POSIX_NAME_MAX
 #endif
-#define _POSIX_NAME_MAX 12
+#define _POSIX_NAME_MAX _MAX_FNAME
 
 #ifdef _POSIX_PATH_MAX
 #undef _POSIX_PATH_MAX
 #endif
-#define _POSIX_PATH_MAX 64
+#define _POSIX_PATH_MAX _MAX_PATH
diff -Nur m148/dmake/win95/Makefile.in dmake43p01/dmake/win95/Makefile.in
--- dmake/win95/Makefile.in	2004-10-22 10:11:08.000000000 +0200
+++ dmake/win95/Makefile.in	2005-09-26 02:33:18.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -14,8 +14,6 @@
 
 @SET_MAKE@
 
-SOURCES = $(libwin95_a_SOURCES)
-
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
 VPATH = @srcdir@
@@ -36,6 +34,8 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = win95
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -86,8 +86,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -134,7 +137,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -172,9 +179,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  win95/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  win95/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  win95/Makefile
+	  $(AUTOMAKE) --foreign  win95/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
@@ -231,7 +238,13 @@
 #     (which will cause the Makefiles to be regenerated when you run `make');
 # (2) otherwise, pass the desired values on the `make' command line.
 $(RECURSIVE_TARGETS):
-	@set fnord $$MAKEFLAGS; amf=$$2; \
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
 	dot_seen=no; \
 	target=`echo $@ | sed s/-recursive//`; \
 	list='$(SUBDIRS)'; for subdir in $$list; do \
@@ -243,7 +256,7 @@
 	    local_target="$$target"; \
 	  fi; \
 	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
-	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	  || eval $$failcom; \
 	done; \
 	if test "$$dot_seen" = "no"; then \
 	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
@@ -251,7 +264,13 @@
 
 mostlyclean-recursive clean-recursive distclean-recursive \
 maintainer-clean-recursive:
-	@set fnord $$MAKEFLAGS; amf=$$2; \
+	@failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
 	dot_seen=no; \
 	case "$@" in \
 	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
@@ -272,7 +291,7 @@
 	    local_target="$$target"; \
 	  fi; \
 	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
-	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	  || eval $$failcom; \
 	done && test -z "$$fail"
 tags-recursive:
 	list='$(SUBDIRS)'; for subdir in $$list; do \
diff -Nur m148/dmake/win95/microsft/config.h dmake43p01/dmake/win95/microsft/config.h
--- dmake/win95/microsft/config.h	2004-10-22 10:11:51.000000000 +0200
+++ dmake/win95/microsft/config.h	2005-04-22 06:22:29.000000000 +0200
@@ -1,6 +1,6 @@
 /* $RCSfile: config.h,v $
--- $Revision: 1.6 $
--- last change: $Author: rt $ $Date: 2004/10/22 08:11:51 $
+-- $Revision: 1.6.2.2 $
+-- last change: $Author: vq $ $Date: 2005/04/22 04:22:29 $
 --
 -- SYNOPSIS
 --      Configurarion include file.
@@ -38,7 +38,8 @@
 
 /* Name and version number of this package */
 #define PACKAGE "dmake"
-#define VERSION "4.3"
+#define VERSION "4.4-cvs"
+#define BUILDINFO "Windows / MS Visual C++"
 
 #if defined (_MSC_VER)
 # if _MSC_VER < 500
@@ -79,8 +80,10 @@
 #   define SIGQUIT SIGTERM
 #endif
 
-/* MSC doesn't seem to care about CONST */
-#define CONST
+/* MSC didn't seem to care about CONST in the past */
+#ifndef CONST
+#   define CONST
+#endif
 
 /* MSC has sys/types.h and sys/stat.h (this is tested only with MSVC++ 6.0) */
 #define HAVE_SYS_TYPES_H 1
diff -Nur m148/dmake/win95/microsft/config.mk dmake43p01/dmake/win95/microsft/config.mk
--- dmake/win95/microsft/config.mk	2000-09-22 17:33:36.000000000 +0200
+++ dmake/win95/microsft/config.mk	2005-04-08 00:30:57.000000000 +0200
@@ -14,7 +14,7 @@
 # Definition of macros for library, and C startup code.
 
 # The following sources are required for MSC
-OSR_SRC += tempnam.c ruletab.c
+OSR_SRC += ruletab.c
 DOS_SRC += runargv.c rmprq.c
 
 .SETDIR=$(osrdir) : $(OSR_SRC)
@@ -27,13 +27,14 @@
 ASFLAGS   += -t -mx $(S_$(MODEL))
 
 # Microsoft C doesn't need tail but needs head
+LDOBJS         != $(CSTARTUP) $(OBJDIR)/{$(<:f)}
 LDTAIL         !=
 LDHEAD         != $(LDFLAGS)
 LDARGS	       != $(LDHEAD) -out:$(TARGET) @$(LDTMPOBJ) $(LDTAIL)
 LDTAIL	       != $(_libs)
 _libs          != $(!null,$(LDLIBS) ,@$(LDTMPLIB))
-LDTMPOBJ       != $(mktmp,,$(DIVFILE) $(LDOBJS:s,/,\\,:t"\n")\n)
-LDTMPLIB       != $(mktmp,,$(DIVFILE) $(LDLIBS:s,/,\\,:t"\n")\n)
+LDTMPOBJ       != $(mktmp,,$(DIVFILE) $(LDOBJS:s,/,\,:t"\n"))
+LDTMPLIB       != $(mktmp,,$(DIVFILE) $(LDLIBS:s,/,\,:t"\n"))
 
 # Debugging libraries and flags
 DB_LDFLAGS += /nologo /co /li /map
diff -Nur m148/dmake/win95/microsft/Makefile.in dmake43p01/dmake/win95/microsft/Makefile.in
--- dmake/win95/microsft/Makefile.in	2004-10-22 10:11:22.000000000 +0200
+++ dmake/win95/microsft/Makefile.in	2005-09-26 02:33:18.000000000 +0200
@@ -1,8 +1,8 @@
-# Makefile.in generated by automake 1.9.1 from Makefile.am.
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
 # @configure_input@
 
 # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004  Free Software Foundation, Inc.
+# 2003, 2004, 2005  Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -14,8 +14,6 @@
 
 @SET_MAKE@
 
-SOURCES = $(libmsft_a_SOURCES)
-
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
 VPATH = @srcdir@
@@ -36,6 +34,8 @@
 NORMAL_UNINSTALL = :
 PRE_UNINSTALL = :
 POST_UNINSTALL = :
+build_triplet = @build@
+LIBOBJDIR =
 subdir = win95/microsft
 DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -79,8 +79,11 @@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
 CYGPATH_W = @CYGPATH_W@
+DBUG_FALSE = @DBUG_FALSE@
+DBUG_TRUE = @DBUG_TRUE@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
+DMAKEROOT_H_LINE1 = @DMAKEROOT_H_LINE1@
 ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
@@ -127,7 +130,11 @@
 am__tar = @am__tar@
 am__untar = @am__untar@
 bindir = @bindir@
+build = @build@
 build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
 datadir = @datadir@
 exec_prefix = @exec_prefix@
 host_alias = @host_alias@
@@ -162,9 +169,9 @@
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  win95/microsft/Makefile'; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  win95/microsft/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(AUTOMAKE) --gnu  win95/microsft/Makefile
+	  $(AUTOMAKE) --foreign  win95/microsft/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
diff -Nur m148/dmake/win95/microsft/ruletab.c dmake43p01/dmake/win95/microsft/ruletab.c
--- dmake/win95/microsft/ruletab.c	2003-03-25 15:02:53.000000000 +0100
+++ dmake/win95/microsft/ruletab.c	2005-04-16 01:55:45.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: ruletab.c,v 1.2 2003/03/25 14:02:53 hr Exp $
+/* RCS  $Id: ruletab.c,v 1.2.80.2 2005/04/15 23:55:45 vq Exp $
 --
 -- SYNOPSIS
 --      Default initial configuration of dmake.
@@ -32,10 +32,10 @@
 #include <stdio.h>
 
 static char *_rules[] = {
-	"MAXLINELENGTH := 2046",
+	"MAXLINELENGTH := 8190",
 	"MAXPROCESSLIMIT := 4",
 	"MAXPROCESS := 1",
-	".IMPORT .IGNORE: DMAKEROOT SOLARVER UPD INPATH OS UPDMINOREXT",
+	".IMPORT .IGNORE: DMAKEROOT",
 	".MAKEFILES : makefile.mk makefile",
 	".SOURCE    : .NULL",
 #include "startup.h"
diff -Nur m148/dmake/win95/microsft/sysintf.h dmake43p01/dmake/win95/microsft/sysintf.h
--- dmake/win95/microsft/sysintf.h	2000-09-22 17:33:37.000000000 +0200
+++ dmake/win95/microsft/sysintf.h	2005-04-17 18:47:03.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: sysintf.h,v 1.1.1.1 2000/09/22 15:33:37 hr Exp $
+/* RCS  $Id: sysintf.h,v 1.1.1.1.132.1 2005/04/17 16:47:03 vq Exp $
 --
 -- SYNOPSIS
 --      Interfaces for sysintf.c
@@ -50,7 +50,7 @@
 #ifdef _POSIX_NAME_MAX
 #undef  _POSIX_NAME_MAX
 #endif
-#define _POSIX_NAME_MAX 12
+#define _POSIX_NAME_MAX _MAX_FNAME
 
 #ifdef _POSIX_PATH_MAX
 #undef _POSIX_PATH_MAX
diff -Nur m148/dmake/win95/microsft/vpp40/mk.bat dmake43p01/dmake/win95/microsft/vpp40/mk.bat
--- dmake/win95/microsft/vpp40/mk.bat	2003-12-17 17:17:27.000000000 +0100
+++ dmake/win95/microsft/vpp40/mk.bat	2005-04-08 00:30:57.000000000 +0200
@@ -1,41 +1,41 @@
-if "%1" != "" goto link 
-del /FY objects
-del config.h
-del dmake.exe
+if not "%1" == "" goto link 
+if exist objects rd /S /Q objects
+if exist config.h del config.h
+if exist dmake.exe del dmake.exe
 md objects
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\infer.obj infer.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\make.obj make.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\stat.obj stat.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\expand.obj expand.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dmstring.obj dmstring.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\hash.obj hash.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dag.obj dag.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dmake.obj dmake.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\path.obj path.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\imacs.obj imacs.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\sysintf.obj sysintf.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\parse.obj parse.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\getinp.obj getinp.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\quit.obj quit.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\state.obj state.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dmdump.obj dmdump.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\macparse.obj macparse.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\rulparse.obj rulparse.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\percent.obj percent.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\function.obj function.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dchdir.obj win95\dchdir.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\switchar.obj win95\switchar.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dstrlwr.obj msdos\dstrlwr.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\arlib.obj msdos\arlib.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dirbrk.obj msdos\dirbrk.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\infer.obj infer.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\make.obj make.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\stat.obj stat.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\expand.obj expand.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dmstring.obj dmstring.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\hash.obj hash.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dag.obj dag.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dmake.obj dmake.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\path.obj path.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\imacs.obj imacs.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\sysintf.obj sysintf.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\parse.obj parse.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\getinp.obj getinp.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\quit.obj quit.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\state.obj state.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dmdump.obj dmdump.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\macparse.obj macparse.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\rulparse.obj rulparse.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\percent.obj percent.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\function.obj function.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dchdir.obj win95\dchdir.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\switchar.obj win95\switchar.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dstrlwr.obj msdos\dstrlwr.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\arlib.obj msdos\arlib.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\dirbrk.obj msdos\dirbrk.c
 rem Not needed for MSVC 6 and up. Lesser versions not supported
-rem cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\tempnam.obj tempnam.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\ruletab.obj win95\microsft\ruletab.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\runargv.obj msdos\runargv.c
-cl -c %c_flg -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\rmprq.obj msdos\rmprq.c
+rem cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\tempnam.obj tempnam.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\ruletab.obj win95\microsft\ruletab.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\runargv.obj msdos\runargv.c
+cl -c %c_flg% -I. -Iwin95 -Iwin95\microsft -Iwin95\microsft\vpp40 /nologo -Od -GF -Ge -Foobjects\rmprq.obj msdos\rmprq.c
 
 :link
 rem link /nologo /out:dmake.exe @fix95nt\win95\microsft\vpp40\obj.rsp
-if "%c_flg" == "" link /out:dmake.exe @.\win95\microsft\vpp40\obj.rsp
-if "%c_flg" != "" link /DEBUG:notmapped,full /DEBUGTYPE:cv /PDB:NONE /out:dmake.exe @.\win95\microsft\vpp40\obj.rsp
+if "%c_flg%" == "" link /out:dmake.exe @.\win95\microsft\vpp40\obj.rsp
+if not "%c_flg%" == "" link /DEBUG:notmapped,full /DEBUGTYPE:cv /PDB:NONE /out:dmake.exe @.\win95\microsft\vpp40\obj.rsp
 copy win95\microsft\vpp40\template.mk startup\config.mk
diff -Nur m148/dmake/win95/startup.h dmake43p01/dmake/win95/startup.h
--- dmake/win95/startup.h	2000-09-22 17:33:36.000000000 +0200
+++ dmake/win95/startup.h	2005-04-11 05:28:55.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: startup.h,v 1.1.1.1 2000/09/22 15:33:36 hr Exp $
+/* RCS  $Id: startup.h,v 1.1.1.1.132.2 2005/04/11 03:28:55 vq Exp $
 --
 -- SYNOPSIS
 --      Definition of MAKESTARTUP
@@ -24,5 +24,5 @@
 --      Use cvs log to obtain detailed change logs.
 */
 
-/*"MAKESTARTUP := $(MAKECMD:d)startup/startup.mk",*/
+"DMAKEROOT *= $(ABSMAKECMD:d)startup",
 "MAKESTARTUP := $(DMAKEROOT)\\startup.mk",
diff -Nur m148/dmake/winnt/borland/ruletab.c dmake43p01/dmake/winnt/borland/ruletab.c
--- dmake/winnt/borland/ruletab.c	2000-09-22 17:33:37.000000000 +0200
+++ dmake/winnt/borland/ruletab.c	2005-04-16 01:55:46.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: ruletab.c,v 1.1.1.1 2000/09/22 15:33:37 hr Exp $
+/* RCS  $Id: ruletab.c,v 1.1.1.1.132.2 2005/04/15 23:55:46 vq Exp $
 --
 -- SYNOPSIS
 --      Default initial configuration of dmake.
@@ -32,9 +32,9 @@
 #include <stdio.h>
 
 static char *_rules[] = {
-	"MAXLINELENGTH := 2046",
+	"MAXLINELENGTH := 8190",
 	"MAXPROCESSLIMIT := 4",
-	".IMPORT .IGNORE: ROOTDIR",
+	".IMPORT .IGNORE: DMAKEROOT",
 	".MAKEFILES : makefile.mk makefile",
 	".SOURCE    : .NULL",
 #include "startup.h"
diff -Nur m148/dmake/winnt/borland/sysintf.h dmake43p01/dmake/winnt/borland/sysintf.h
--- dmake/winnt/borland/sysintf.h	2000-09-22 17:33:37.000000000 +0200
+++ dmake/winnt/borland/sysintf.h	2005-04-17 18:47:04.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: sysintf.h,v 1.1.1.1 2000/09/22 15:33:37 hr Exp $
+/* RCS  $Id: sysintf.h,v 1.1.1.1.132.1 2005/04/17 16:47:04 vq Exp $
 --
 -- SYNOPSIS
 --      Interfaces for sysintf.c
@@ -48,9 +48,9 @@
 #ifdef _POSIX_NAME_MAX
 #undef  _POSIX_NAME_MAX
 #endif
-#define _POSIX_NAME_MAX 12
+#define _POSIX_NAME_MAX _MAX_FNAME
 
 #ifdef _POSIX_PATH_MAX
 #undef _POSIX_PATH_MAX
 #endif
-#define _POSIX_PATH_MAX 64
+#define _POSIX_PATH_MAX _MAX_PATH
diff -Nur m148/dmake/winnt/microsft/config.h dmake43p01/dmake/winnt/microsft/config.h
--- dmake/winnt/microsft/config.h	2000-09-22 17:33:37.000000000 +0200
+++ dmake/winnt/microsft/config.h	2005-04-22 06:22:30.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: config.h,v 1.1.1.1 2000/09/22 15:33:37 hr Exp $
+/* RCS  $Id: config.h,v 1.1.1.1.132.2 2005/04/22 04:22:30 vq Exp $
 --
 -- SYNOPSIS
 --      Configurarion include file.
@@ -25,6 +25,11 @@
 --      Use cvs log to obtain detailed change logs.
 */
 
+/* Name and version number of this package */
+#define PACKAGE "dmake"
+#define VERSION "4.4-cvs"
+#define BUILDINFO "Windows / MS Visual C++"
+
 #if defined (_MSC_VER)
 # if _MSC_VER < 500
 	Force a compile-time blowup.
@@ -63,8 +68,10 @@
 #   define SIGQUIT SIGTERM
 #endif
 
-/* MSC doesn't seem to care about CONST */
-#define CONST
+/* MSC didn't seem to care about CONST in the past */
+#ifndef CONST
+#   define CONST
+#endif
 
 #ifndef MSDOS
 #   define MSDOS 1
diff -Nur m148/dmake/winnt/microsft/ruletab.c dmake43p01/dmake/winnt/microsft/ruletab.c
--- dmake/winnt/microsft/ruletab.c	2000-09-22 17:33:37.000000000 +0200
+++ dmake/winnt/microsft/ruletab.c	2005-04-16 01:55:46.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: ruletab.c,v 1.1.1.1 2000/09/22 15:33:37 hr Exp $
+/* RCS  $Id: ruletab.c,v 1.1.1.1.132.2 2005/04/15 23:55:46 vq Exp $
 --
 -- SYNOPSIS
 --      Default initial configuration of dmake.
@@ -32,10 +32,10 @@
 #include <stdio.h>
 
 static char *_rules[] = {
-	"MAXLINELENGTH := 2046",
+	"MAXLINELENGTH := 8190",
 	"MAXPROCESSLIMIT := 4",
 	"MAXPROCESS := 1",
-	".IMPORT .IGNORE: DMAKEROOT SOLARVER UPD INPATH OS UPDMINOREXT"
+	".IMPORT .IGNORE: DMAKEROOT"
 	".MAKEFILES : makefile.mk makefile",
 	".SOURCE    : .NULL",
 #include "startup.h"
diff -Nur m148/dmake/winnt/microsft/sysintf.h dmake43p01/dmake/winnt/microsft/sysintf.h
--- dmake/winnt/microsft/sysintf.h	2000-09-22 17:33:37.000000000 +0200
+++ dmake/winnt/microsft/sysintf.h	2005-04-17 18:47:05.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: sysintf.h,v 1.1.1.1 2000/09/22 15:33:37 hr Exp $
+/* RCS  $Id: sysintf.h,v 1.1.1.1.132.1 2005/04/17 16:47:05 vq Exp $
 --
 -- SYNOPSIS
 --      Interfaces for sysintf.c
@@ -50,9 +50,9 @@
 #ifdef _POSIX_NAME_MAX
 #undef  _POSIX_NAME_MAX
 #endif
-#define _POSIX_NAME_MAX 12
+#define _POSIX_NAME_MAX _MAX_FNAME
 
 #ifdef _POSIX_PATH_MAX
 #undef _POSIX_PATH_MAX
 #endif
-#define _POSIX_PATH_MAX 64
+#define _POSIX_PATH_MAX _MAX_PATH
diff -Nur m148/dmake/winnt/mingw/sysintf.h dmake43p01/dmake/winnt/mingw/sysintf.h
--- dmake/winnt/mingw/sysintf.h	2003-03-25 15:02:56.000000000 +0100
+++ dmake/winnt/mingw/sysintf.h	2005-04-17 18:47:05.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: sysintf.h,v 1.2 2003/03/25 14:02:56 hr Exp $
+/* RCS  $Id: sysintf.h,v 1.2.80.1 2005/04/17 16:47:05 vq Exp $
 --
 -- SYNOPSIS
 --      Interfaces for sysintf.c
@@ -55,7 +55,7 @@
 #ifdef _POSIX_NAME_MAX
 #undef  _POSIX_NAME_MAX
 #endif
-#define _POSIX_NAME_MAX 12
+#define _POSIX_NAME_MAX _MAX_FNAME
 
 #ifdef _POSIX_PATH_MAX
 #undef _POSIX_PATH_MAX
diff -Nur m148/dmake/winnt/startup.h dmake43p01/dmake/winnt/startup.h
--- dmake/winnt/startup.h	2000-09-22 17:33:37.000000000 +0200
+++ dmake/winnt/startup.h	2005-04-11 05:28:55.000000000 +0200
@@ -1,4 +1,4 @@
-/* RCS  $Id: startup.h,v 1.1.1.1 2000/09/22 15:33:37 hr Exp $
+/* RCS  $Id: startup.h,v 1.1.1.1.132.2 2005/04/11 03:28:55 vq Exp $
 --
 -- SYNOPSIS
 --      Definition of MAKESTARTUP
@@ -24,6 +24,6 @@
 --      Use cvs log to obtain detailed change logs.
 */
 
-/*"MAKESTARTUP := $(MAKECMD:d)startup/startup.mk",*/
+"DMAKEROOT *= $(ABSMAKECMD:d)startup",
 "MAKESTARTUP := $(DMAKEROOT)\\startup.mk",
 
