--- ../../../2.0.2-pristine/build/OOO_2_0_2/scp2/source/ooo/file_library_ooo.scp	2006-06-02 13:06:38.003914500 +0000
+++ scp2/source/ooo/file_library_ooo.scp	2006-05-31 16:15:01.893875000 +0000
@@ -2414,3 +2425,13 @@
 End
 
 
+#ifdef WNT
+
+File gid_File_Lib_sellangmsi
+    TXT_FILE_BODY;
+    Styles = (PACKED, BINARYTABLE, BINARYTABLE_ONLY);
+    Dir = gid_Dir_Program;
+    Name = "sellangmsi.dll";
+End
+
+#endif
--- ../../../2.0.2-pristine/build/OOO_2_0_2/scp2/source/ooo/windowscustomaction_ooo.scp	2006-02-16 14:16:57.000000000 +0000
+++ scp2/source/ooo/windowscustomaction_ooo.scp	2006-06-02 08:03:48.643875000 +0000
@@ -316,3 +316,13 @@
       Assignment1 = ("InstallExecuteSequence", "Not REMOVE=\"ALL\" And Not PATCH", "CostInitialize");
       Assignment2 = ("InstallUISequence", "Not REMOVE=\"ALL\" And Not PATCH", "CostInitialize");
 End
+
+WindowsCustomAction gid_Customaction_SelectLanguage
+	Name = "SelectLanguage";
+	Typ = "321";
+	Source = "sellangmsi.dll";
+	Target = "SelectLanguage";
+	Inbinarytable = 1;
+	Assignment1 = ("InstallExecuteSequence", "Not REMOVE=\"ALL\" And Not PATCH", "behind_CostFinalize");
+	Assignment2 = ("InstallUISequence", "Not REMOVE=\"ALL\" And Not PATCH", "behind_CostFinalize");
+End
--- ../../../2.0.2-pristine/build/OOO_2_0_2/setup_native/prj/build.lst	2006-02-16 14:15:43.000000000 +0000
+++ setup_native/prj/build.lst	2006-05-31 12:16:31.550125000 +0000
@@ -5,6 +5,7 @@
 pk  setup_native\source\win32\customactions\regactivex    nmake   -  w   sn_regactivex NULL
 pk  setup_native\source\win32\customactions\reg4msdoc     nmake   -  w   sn_reg4msdoc NULL
 pk  setup_native\source\win32\customactions\regpython     nmake   -  w   sn_regpython NULL
+pk  setup_native\source\win32\customactions\sellang       nmake   -  w   sn_sellang NULL
 pk  setup_native\source\win32\customactions\javafilter    nmake   -  w   sn_javafilter NULL
 pk  setup_native\source\win32\customactions\quickstarter  nmake   -  w   sn_quickstarter NULL
 pk  setup_native\source\win32\customactions\shellextensions nmake   -  w   sn_shellextensions NULL
--- /dev/null
+++ setup_native/source/win32/customactions/sellang/exports.dxp	2006-05-31 12:15:54.268875000 +0000
@@ -0,0 +1 @@
+SelectLanguage
--- /dev/null
+++ setup_native/source/win32/customactions/sellang/makefile.mk	2006-05-31 12:13:28.331375000 +0000
@@ -0,0 +1,86 @@
+#*************************************************************************
+#
+#   OpenOffice.org - a multi-platform office productivity suite
+#
+#   $RCSfile$
+#
+#   $Revision$
+#
+#   last change: $Author$ $Date$
+#
+#   The Contents of this file are made available subject to
+#   the terms of GNU Lesser General Public License Version 2.1.
+#
+#
+#     GNU Lesser General Public License Version 2.1
+#     =============================================
+#     Copyright 2005 by Sun Microsystems, Inc.
+#     901 San Antonio Road, Palo Alto, CA 94303, USA
+#
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License version 2.1, as published by the Free Software Foundation.
+#
+#     This library is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
+#
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+#     MA  02111-1307  USA
+#
+#*************************************************************************
+
+PRJ=..$/..$/..$/..
+PRJNAME=setup_native
+TARGET=sellangmsi
+
+.IF "$(GUI)"=="WNT"
+
+# --- Settings -----------------------------------------------------
+
+ENABLE_EXCEPTIONS=TRUE
+NO_DEFAULT_STL=TRUE
+DYNAMIC_CRT=
+USE_DEFFILE=TRUE
+
+.INCLUDE : settings.mk
+
+CFLAGS+=-D_STLP_USE_STATIC_LIB
+
+# --- Files --------------------------------------------------------
+
+UWINAPILIB=
+
+SLOFILES = \
+	$(SLO)$/sellang.obj
+
+SHL1STDLIBS=	kernel32.lib\
+				user32.lib\
+				advapi32.lib\
+				shell32.lib\
+				msi.lib\
+				$(LIBSTLPORTST)								
+
+SHL1LIBS = $(SLB)$/$(TARGET).lib 
+
+SHL1TARGET = $(TARGET)
+SHL1IMPLIB = i$(TARGET)
+
+SHL1DEF = $(MISC)$/$(SHL1TARGET).def
+SHL1DEPN = $(SLB)$/$(TARGET).lib
+SHL1BASE = 0x1c000000
+DEF1NAME=$(SHL1TARGET)
+DEF1EXPORTFILE=exports.dxp
+
+# --- Targets --------------------------------------------------------------
+
+.INCLUDE : target.mk
+
+# -------------------------------------------------------------------------
+
+
+.ENDIF
+
--- /dev/null
+++ setup_native/source/win32/customactions/sellang/sellang.cxx	2006-06-02 09:13:53.893875000 +0000
@@ -0,0 +1,255 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *    MA  02111-1307  USA
+ *
+ ************************************************************************/
+
+#define WIN32_LEAN_AND_MEAN
+#define _WIN32_WINNT 0x0500
+#define WINVER 0x0500
+
+#include <windows.h>
+#include <msiquery.h>
+#include <malloc.h>
+
+#ifdef UNICODE
+#define _UNICODE
+#define _tstring	wstring
+#else
+#define _tstring	string
+#endif
+#include <tchar.h>
+#include <string>
+#include <stdio.h>
+
+#include <systools/win32/uwinapi.h>
+
+extern "C" UINT __stdcall SelectLanguage( MSIHANDLE handle )
+{
+	char tem[200], feature[100];
+	MSIHANDLE database, view, record;
+	DWORD length;
+	int nlangs = 0;
+	/* Keeping this code simple and stupid... won't bother with any
+	 * dynamic arrays or whatnot. 100 is more than enough for this purpose.
+	 */
+	char langs[100][6];
+
+	database = MsiGetActiveDatabase(handle);
+
+	if (MsiDatabaseOpenViewA(database, "SELECT Feature from Feature", &view) != ERROR_SUCCESS) {
+		MsiCloseHandle(database);
+		return ERROR_SUCCESS;
+	}
+
+	// MessageBoxA(NULL, "MsiDatabaseOpenViewA success!", "SelectLanguage", MB_OK);
+
+	if (MsiViewExecute(view, NULL) != ERROR_SUCCESS) {
+		MsiCloseHandle(view);
+		MsiCloseHandle(database);
+		return ERROR_SUCCESS;
+	}
+
+	// MessageBoxA(NULL, "MsiViewExecute success!", "SelectLanguage", MB_OK);
+
+	while (MsiViewFetch(view, &record) == ERROR_SUCCESS) {
+		length = sizeof(feature);
+		if (MsiRecordGetStringA(record, 1, feature, &length) != ERROR_SUCCESS) {
+			MsiCloseHandle(record);
+			MsiCloseHandle(view);
+			MsiCloseHandle(database);
+			return ERROR_SUCCESS;
+		}
+
+		/* Keep track of what languages are included in this installer, if
+		 * it is a multilangiage one.
+		 */
+		if (strncmp (feature, "gm_Dynamic_Language_", strlen ("gm_Dynamic_Language_")) == 0 &&
+			strcmp(feature, "gm_Dynamic_Language_TOP") != 0 &&
+			strcmp(feature, "gm_Dynamic_Language_en-US") != 0 &&
+			strlen(feature) <= strlen("gm_Dynamic_Language_xx-XX"))
+			strcpy(langs[nlangs++], feature + strlen("gm_Dynamic_Language_"));
+
+		MsiCloseHandle(record);
+	}
+
+	MsiCloseHandle(view);
+
+	if (nlangs > 0) {
+		/* Deselect those languages that don't match the system
+		 * default UI language.
+		 */
+
+		int i;
+		LANGID default_language = GetSystemDefaultUILanguage();
+		const char *s;
+		int have_default_lang = 0;
+
+		/* Map from LANGID to string. Same order as in
+		 * setup_native/source/win32/msi-encodinglist.txt.
+		 */
+		switch (default_language) {
+#define CASE(primary, sub, name) \
+		case MAKELANGID(LANG_##primary, SUBLANG_##sub): s = #name; break
+
+		case MAKELANGID(LANG_ENGLISH, SUBLANG_DEFAULT): s = "en-US"; have_default_lang = 1; break;
+		case MAKELANGID(LANG_SERBIAN, 0x05): s = "bs"; break;
+		CASE(PORTUGUESE, PORTUGUESE, pt);
+		CASE(RUSSIAN, DEFAULT, ru);
+		CASE(GREEK, DEFAULT, el);
+		CASE(DUTCH, DEFAULT, nl);
+		CASE(FRENCH, DEFAULT, fr);
+		CASE(FRENCH, FRENCH_CANADIAN, fr-CA);
+		CASE(SPANISH, DEFAULT, es);
+		CASE(FINNISH, DEFAULT, fi);
+		CASE(HUNGARIAN, DEFAULT, hu);
+		CASE(CATALAN, DEFAULT, ca);
+		CASE(ITALIAN, DEFAULT, it);
+		CASE(CZECH, DEFAULT, cs);
+		CASE(SLOVAK, DEFAULT, sk);
+		CASE(ENGLISH, ENGLISH_UK, en-GB);
+		CASE(ENGLISH, ENGLISH_SOUTH_AFRICA, en-ZA);
+		CASE(DANISH, DEFAULT, da);
+		CASE(SWEDISH, DEFAULT, sv);
+		CASE(NORWEGIAN, NORWEGIAN_BOKMAL, nb);
+		CASE(NORWEGIAN, NORWEGIAN_NYNORSK, nn);
+		CASE(POLISH, DEFAULT, pl);
+		CASE(GERMAN, DEFAULT, de);
+		CASE(PORTUGUESE, PORTUGUESE_BRAZILIAN, pt-BR);
+		CASE(THAI, DEFAULT, th);
+		CASE(ESTONIAN, DEFAULT, et);
+		CASE(JAPANESE, DEFAULT, ja);
+		CASE(KOREAN, DEFAULT, ko);
+		// CASE(KHMER, DEFAULT, km);
+		// CASE(WELSH, DEFAULT, cy);
+		CASE(CHINESE, CHINESE_SIMPLIFIED, zh-CN);
+		CASE(CHINESE, CHINESE_TRADITIONAL, zh-TW);
+		CASE(TURKISH, DEFAULT, tr);
+		CASE(HINDI, DEFAULT, hi-IN);
+		CASE(PUNJABI, DEFAULT, pa-IN);
+		CASE(TAMIL, DEFAULT, ta-IN);
+		CASE(ARABIC, DEFAULT, ar);
+		CASE(HEBREW, DEFAULT, he);
+		CASE(AFRIKAANS, DEFAULT, af);
+		CASE(ALBANIAN, DEFAULT, sq);
+		CASE(ARMENIAN, DEFAULT, hy);
+		CASE(BASQUE, DEFAULT, eu);
+		CASE(BELARUSIAN, DEFAULT, be-BY);
+		case MAKELANGID(LANG_BENGALI, 0x02): s = "bn-BD"; break;
+		CASE(BENGALI, DEFAULT, bn-IN);
+		CASE(BULGARIAN, DEFAULT, bg);
+		CASE(ICELANDIC, DEFAULT, is);
+		CASE(INDONESIAN, DEFAULT, id);
+		// CASE(LAO, DEFAULT, lo);
+		CASE(LATVIAN, DEFAULT, lv);
+		CASE(LITHUANIAN, DEFAULT, lt);
+		// CASE(MALTESE, DEFAULT, mt);
+		CASE(MARATHI, DEFAULT, mr);
+		// CASE(ROMANSH, DEFAULT, rm);
+		CASE(ROMANIAN, DEFAULT, ro);
+		// CASE(KINYARWANDA, DEFAULT, rw);
+		CASE(SANSKRIT, DEFAULT, sa);
+		// CASE(SERBIAN, SERBIAN_CYRILLIC, sr-SP);
+		// CASE(SETSWANA, DEFAULT, tn);
+		CASE(SERBIAN, DEFAULT, hr);
+		CASE(FARSI, DEFAULT, fa);
+		CASE(FAEROESE, DEFAULT, fo);
+		CASE(SLOVENIAN, DEFAULT, sl);
+		// CASE(SORBIAN, DEFAULT, sb);
+		// CASE(SUTU, DEFAULT, st);
+		CASE(SWAHILI, DEFAULT, sw-TZ); // MSFT says Kenya, but OOo has Tanzania
+		CASE(TATAR, DEFAULT, tt);
+		// CASE(TSONGA, DEFAULT, ts);
+		CASE(UKRAINIAN, DEFAULT, uk);
+		CASE(URDU, DEFAULT, ur);
+		CASE(VIETNAMESE, DEFAULT, vi);
+		// CASE(XHOSA, DEFAULT, xh);
+		// CASE(SOTHO, DEFAULT, ns);
+		// CASE(YIDDISH, DEFAULT, yi);
+		// CASE(ZULU, DEFAULT, zu);
+		CASE(GUJARATI, DEFAULT, gu-IN);
+		// CASE(BRETON, DEFAULT, br);
+		CASE(ORIYA, DEFAULT, or);
+		CASE(NEPALI, DEFAULT, ne);
+		CASE(SERBIAN, SERBIAN_LATIN, sh-YU);
+		CASE(SERBIAN, SERBIAN_CYRILLIC, sr-CS);
+		// CASE(NDEBELE, DEFAULT, nr);
+		// CASE(SWAZI, DEFAULT, ss);
+		// CASE(SOTHO, SOTHO_SOUTHERN, st);
+		// CASE(VENDA, DEFAULT, ve);
+		// CASE(IRISH, DEFAULT, ga);
+		CASE(MACEDONIAN, DEFAULT, mk);
+		CASE(GALICIAN, DEFAULT, gl);
+		CASE(KANNADA, DEFAULT, kn);
+		CASE(MALAY, DEFAULT, ms);
+#undef CASE
+		default: s = "";
+		}
+
+		// sprintf(tem, "GetSystemDefaultUILanguage(): %#x = %s", default_language, s);
+		// MessageBoxA(NULL, tem, "SelectLanguage", MB_OK);
+
+		/* If one of the alternative languages in a multi-language installer
+		 * is the system default UI language, deselect the other languages.
+		 */
+		if (s[0]) {
+			for (i = 0; i < nlangs; i++) {
+				if (strcmp (s, langs[i]) == 0) {
+					// sprintf(tem, "We have the default language %s in the installer", s);
+					// MessageBoxA(NULL, tem, "SelectLanguage", MB_OK);
+					have_default_lang = 1;
+				}
+			}
+		}
+
+		if (have_default_lang) {
+			for (i = 0; i < nlangs; i++) {
+				if (strcmp(s, langs[i]) != 0) {
+					UINT rc;
+					sprintf(feature, "gm_Dynamic_Language_%s", langs[i]);
+					rc = MsiSetFeatureStateA(handle, feature, INSTALLSTATE_ABSENT); 
+					if (rc != ERROR_SUCCESS) {
+						// sprintf(tem, "MsiSetFeatureStateA %s failed: %d", feature, rc);
+						// MessageBoxA(NULL, tem, "SelectLanguage", MB_OK);
+					} else {
+						// sprintf(tem, "MsiSetFeatureStateA %s OK!", feature);
+						// MessageBoxA(NULL, tem, "SelectLanguage", MB_OK);
+					}
+				}
+			}
+		}
+	}
+
+	MsiCloseHandle(database);
+
+	return ERROR_SUCCESS;
+}
--- /cygdrive/c/src/2.0.2-pristine/build/OOO_2_0_2/instsetoo_native/inc_openoffice/windows/msi_languages/Langpack.ulf	2006-01-05 14:51:00.000000000 +0000
+++ instsetoo_native/inc_openoffice/windows/msi_languages/Langpack.ulf	2006-06-07 11:00:21.628125000 +0000
@@ -321,3 +321,236 @@
 [OOO_LANGPACK_DESC_1121]
 en-US = "Installs Nepali support in %PRODUCTNAME %PRODUCTVERSION"
 de = "Nepali"
+
+[OOO_LANGPACK_NAME_1025]
+en-US = "Arabic"
+de = "Arabisch"
+
+[OOO_LANGPACK_DESC_1025]
+en-US = "Installs Arabic support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Arabisch"
+
+[OOO_LANGPACK_NAME_1029]
+en-US = "Catalan"
+de = "Katalanisch"
+
+[OOO_LANGPACK_DESC_1029]
+en-US = "Installs Catalan support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Katalanisch"
+
+[OOO_LANGPACK_NAME_1030]
+en-US = "Danish"
+de = "Dänisch"
+
+[OOO_LANGPACK_DESC_1030]
+en-US = "Installs Danish support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Dänisch"
+
+[OOO_LANGPACK_NAME_1035]
+en-US = "Finnish"
+de = "Finnisch"
+
+[OOO_LANGPACK_DESC_1035]
+en-US = "Installs Finnish support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Finnisch"
+
+[OOO_LANGPACK_NAME_1037]
+en-US = "Hebrew"
+de = "Hebräisch"
+
+[OOO_LANGPACK_DESC_1037]
+en-US = "Installs Hebrew support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Hebräisch"
+
+[OOO_LANGPACK_NAME_1039]
+en-US = "Icelandic"
+de = "Isländisch"
+
+[OOO_LANGPACK_DESC_1039]
+en-US = "Installs Icelandic support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Isländisch"
+
+[OOO_LANGPACK_NAME_1044]
+en-US = "Norwegian (Bokmål)"
+de = "Norwegisch (Bokmål)"
+
+[OOO_LANGPACK_DESC_1044]
+en-US = "Installs Norwegian (Bokmål) support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Norwegisch (Bokmål)"
+
+[OOO_LANGPACK_NAME_1047]
+en-US = "Raeto-Romance"
+de = "Rätoromanisch"
+
+[OOO_LANGPACK_DESC_1047]
+en-US = "Installs Raeto-Romance support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Rätoromanisch"
+
+[OOO_LANGPACK_NAME_1048]
+en-US = "Romanian"
+de = "Rumänisch"
+
+[OOO_LANGPACK_DESC_1048]
+en-US = "Installs Romanian support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Rumänisch"
+
+[OOO_LANGPACK_NAME_1052]
+en-US = "Albanian"
+de = "Albanisch"
+
+[OOO_LANGPACK_DESC_1052]
+en-US = "Installs Albanian support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Albanisch"
+
+[OOO_LANGPACK_NAME_1054]
+en-US = "Thai"
+de = "Thailändisch"
+
+[OOO_LANGPACK_DESC_1054]
+en-US = "Installs Thai support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Thailändisch"
+
+[OOO_LANGPACK_NAME_1055]
+en-US = "Turkish"
+de = "Türkisch"
+
+[OOO_LANGPACK_DESC_1055]
+en-US = "Installs Turkish support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Türkisch"
+
+[OOO_LANGPACK_NAME_1056]
+en-US = "Urdu"
+de = "Urdu"
+
+[OOO_LANGPACK_DESC_1056]
+en-US = "Installs Urdu support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Urdu"
+
+[OOO_LANGPACK_NAME_1057]
+en-US = "Indonesian"
+de = "Indonesisch"
+
+[OOO_LANGPACK_DESC_1057]
+en-US = "Installs Indonesian support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Indonesisch"
+
+[OOO_LANGPACK_NAME_1058]
+en-US = "Ukrainian"
+de = "Ukrainisch"
+
+[OOO_LANGPACK_DESC_1058]
+en-US = "Installs Ukrainian support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Ukrainisch"
+
+[OOO_LANGPACK_NAME_1060]
+en-US = "Slovenian"
+de = "Slowenisch"
+
+[OOO_LANGPACK_DESC_1060]
+en-US = "Installs Slovenian support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Slowenisch"
+
+[OOO_LANGPACK_NAME_1062]
+en-US = "Latvian"
+de = "Lettisch"
+
+[OOO_LANGPACK_DESC_1062]
+en-US = "Installs Latvian support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Lettisch"
+
+[OOO_LANGPACK_NAME_1063]
+en-US = "Lithuanian"
+de = "Litauisch"
+
+[OOO_LANGPACK_DESC_1063]
+en-US = "Installs Lithuanian support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Litauisch"
+
+[OOO_LANGPACK_NAME_1067]
+en-US = "Armenian"
+de = "Armenisch"
+
+[OOO_LANGPACK_DESC_1067]
+en-US = "Installs Armenian support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Armenisch"
+
+[OOO_LANGPACK_NAME_1069]
+en-US = "Basque"
+de = "Baskisch"
+
+[OOO_LANGPACK_DESC_1069]
+en-US = "Installs Basque support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Baskisch"
+
+[OOO_LANGPACK_NAME_1071]
+en-US = "Macedonian"
+de = "Mazedonisch"
+
+[OOO_LANGPACK_DESC_1071]
+en-US = "Installs Macedonian support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Mazedonisch"
+
+[OOO_LANGPACK_NAME_1082]
+en-US = "Maltese"
+de = "Maltesisch"
+
+[OOO_LANGPACK_DESC_1082]
+en-US = "Installs Maltese support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Maltesisch"
+
+[OOO_LANGPACK_NAME_1102]
+en-US = "Marathi"
+de = "Marathi"
+
+[OOO_LANGPACK_DESC_1102]
+en-US = "Installs Marathi support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Marathi"
+
+[OOO_LANGPACK_NAME_1106]
+en-US = "Welsh"
+de = "Walisisch"
+
+[OOO_LANGPACK_DESC_1106]
+en-US = "Installs Welsh support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Walisisch"
+
+[OOO_LANGPACK_NAME_1110]
+en-US = "Galician"
+de = "Galicisch"
+
+[OOO_LANGPACK_DESC_1110]
+en-US = "Installs Galician support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Galicisch"
+
+[OOO_LANGPACK_NAME_2068]
+en-US = "Norwegian (Nynorsk)"
+de = "Norwegisch (Nynorsk)"
+
+[OOO_LANGPACK_DESC_2068]
+en-US = "Installs Norwegian (Nynorsk) support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Norwegisch (Nynorsk)"
+
+[OOO_LANGPACK_NAME_2074]
+en-US = "Serbian (Latin)"
+de = "Serbisch (Latinisch)"
+
+[OOO_LANGPACK_DESC_2074]
+en-US = "Installs Serbian (Latin) support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Serbisch (Latinisch)"
+
+[OOO_LANGPACK_NAME_2108]
+en-US = "Irish"
+de = "Irisch"
+
+[OOO_LANGPACK_DESC_2108]
+en-US = "Installs Irish support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Irisch"
+
+[OOO_LANGPACK_NAME_3098]
+en-US = "Serbian (Cyrillic)"
+de = "Serbisch (Kyrillisch)"
+
+[OOO_LANGPACK_DESC_3098]
+en-US = "Installs Serbian (Cyrillic) support in %PRODUCTNAME %PRODUCTVERSION"
+de = "Serbisch (Kyrillisch)"
+
--- /cygdrive/c/src/2.0.2-pristine/build/OOO_2_0_2/config_office/configure.in	2006-06-02 13:07:07.207039500 +0000
+++ config_office/configure.in	2006-06-06 09:00:38.128125000 +0000
@@ -473,6 +473,13 @@
 
                           Usage: --with-lang="es sw tu cs sk"
 ],,)
+AC_ARG_WITH(poor-help-localizations,
+[  --with-poor-help-localizations Use this option to specify which languages
+                          have unusable help localizations. Separate 
+                          multiple languages with space.
+
+                          Usage: --with-poor-help-localizations="af ar be-BY ca cy fi"
+],,)
 AC_ARG_WITH(dict,
 [  --with-dict             Use this option to build OpenOffice.org with
                           dictionary support. ALL dictionaries are always
@@ -4484,6 +4491,15 @@
 fi
 AC_SUBST(WITH_LANG)
 
+AC_MSG_CHECKING([which languages have poor help localizations])
+WITH_POOR_HELP_LOCALIZATIONS="$with_poor_help_localizations"
+if test -z "$WITH_POOR_HELP_LOCALIZATIONS"; then
+   AC_MSG_RESULT([none])
+else
+   AC_MSG_RESULT([$WITH_POOR_HELP_LOCALIZATIONS])
+fi
+AC_SUBST(WITH_POOR_HELP_LOCALIZATIONS)
+
 AC_MSG_CHECKING([which dictionaries to include])
 if test -z "$with_dict"; then
    WITH_DICT=,ALL,
--- /cygdrive/c/src/2.0.2-pristine/build/OOO_2_0_2/config_office/set_soenv.in	2006-06-02 13:07:07.238289500 +0000
+++ config_office/set_soenv.in	2006-06-06 09:00:38.159375000 +0000
@@ -1476,6 +1476,7 @@
 }
 # Languages
 ToFile( "WITH_LANG",         "@WITH_LANG@",      "e" );
+ToFile( "WITH_POOR_HELP_LOCALIZATIONS", "@WITH_POOR_HELP_LOCALIZATIONS@", "e" );
 
 ToFile( "CALL_CDECL",        $CALL_CDECL,        "e" );
 ToFile( "COMMON_OUTDIR",     $COMMON_OUTDIR,     "e" );
--- /cygdrive/c/src/2.0.2-pristine/build/OOO_2_0_2/scp2/macros/macro.pl	2005-09-09 01:16:18.000000000 +0000
+++ scp2/macros/macro.pl	2006-06-06 12:01:38.659375000 +0000
@@ -42,6 +42,12 @@
 	exit 1;
 }
 
+my $poorhelplocalizations_var = $ENV{WITH_POOR_HELP_LOCALIZATIONS};
+my %poorhelplocalizations;
+foreach $lang (split (/ /, $poorhelplocalizations_var)) {
+  $poorhelplocalizations{$lang}++;
+}
+
 startup_check();
 if ( "$completelangiso_var" eq "$lastcompletelangiso_var" ) {
     print STDERR "No new languages. Keeping old file\n";
@@ -61,6 +67,7 @@
 write_DIR_ISOLANGUAGE_ALL_LANG();
 write_DIR_IDENT_ALL_LANG();
 write_EXTRA_ALL_LANG();
+write_EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG();
 write_EXTRA_IDENT_ALL_LANG();
 write_RESFILE_ALL_LANG();
 write_SHORT_RESFILE_ALL_LANG();
@@ -130,6 +137,19 @@
 	print OUTFILE "\n\n";
 }
 
+sub write_EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG
+{
+    my $first = 1;
+	print OUTFILE "#define EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG(name) ";
+	foreach $lang (@completelangiso) {
+		next if ( $poorhelplocalizations{$lang} );
+		print OUTFILE ";" unless $first;
+		$first = 0;
+		print OUTFILE "\\\n\tName ($lang) = EXTRAFILENAME(name,_$lang)";
+	}
+	print OUTFILE "\n\n";
+}
+
 sub write_EXTRA_IDENT_ALL_LANG
 {
 	print OUTFILE "#define EXTRA_IDENT_ALL_LANG(name) ";
--- /cygdrive/c/src/2.0.2-pristine/build/OOO_2_0_2/scp2/source/base/file_base.scp	2006-02-10 11:48:24.000000000 +0000
+++ scp2/source/base/file_base.scp	2006-06-05 20:18:39.737500000 +0000
@@ -68,7 +68,7 @@
 File gid_File_Help_Sdatabase_Zip
     Dir = gid_Dir_Help_Isolanguage;
     ARCHIVE_TXT_FILE_BODY_PATCH;
-    EXTRA_ALL_LANG(sdatabase);
+    EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG(sdatabase);
     Patchfiles = ("sdatabase.db",
                   "sdatabase.ht",
                   "sdatabase.jar",
--- /cygdrive/c/src/2.0.2-pristine/build/OOO_2_0_2/scp2/source/calc/file_calc.scp	2006-02-10 11:48:40.000000000 +0000
+++ scp2/source/calc/file_calc.scp	2006-06-05 20:18:50.221875000 +0000
@@ -82,7 +82,7 @@
 File gid_File_Help_Scalc_Zip
     Dir = gid_Dir_Help_Isolanguage;
     ARCHIVE_TXT_FILE_BODY_PATCH;
-    EXTRA_ALL_LANG(scalc);
+    EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG(scalc);
     Patchfiles = ("scalc.db",
                   "scalc.ht",
                   "scalc.jar",
--- /cygdrive/c/src/2.0.2-pristine/build/OOO_2_0_2/scp2/source/draw/file_draw.scp	2006-02-10 11:48:53.000000000 +0000
+++ scp2/source/draw/file_draw.scp	2006-06-05 20:19:05.331250000 +0000
@@ -47,7 +47,7 @@
 File gid_File_Help_Sdraw_Zip
     Dir = gid_Dir_Help_Isolanguage;
     ARCHIVE_TXT_FILE_BODY_PATCH;
-    EXTRA_ALL_LANG(sdraw);
+    EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG(sdraw);
     Patchfiles = ("sdraw.db",
                   "sdraw.ht",
                   "sdraw.jar",
--- /cygdrive/c/src/2.0.2-pristine/build/OOO_2_0_2/scp2/source/impress/file_impress.scp	2006-02-10 11:49:08.000000000 +0000
+++ scp2/source/impress/file_impress.scp	2006-06-05 20:19:18.596875000 +0000
@@ -58,7 +58,7 @@
     Dir = gid_Dir_Help_Isolanguage;
     TXT_FILE_BODY;
     Styles = (ARCHIVE,DONT_OVERWRITE,PATCH);
-    EXTRA_ALL_LANG(simpress);
+    EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG(simpress);
     Patchfiles = ("simpress.db",
                   "simpress.ht",
                   "simpress.jar",
--- /cygdrive/c/src/2.0.2-pristine/build/OOO_2_0_2/scp2/source/math/file_math.scp	2006-02-10 12:42:16.000000000 +0000
+++ scp2/source/math/file_math.scp	2006-06-05 20:19:37.221875000 +0000
@@ -82,7 +82,7 @@
 File gid_File_Help_Smath_Zip
     Dir = gid_Dir_Help_Isolanguage;
     ARCHIVE_TXT_FILE_BODY_PATCH;
-    EXTRA_ALL_LANG(smath);
+    EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG(smath);
 	Patchfiles=("smath.ht");
 End
 
--- /cygdrive/c/src/2.0.2-pristine/build/OOO_2_0_2/scp2/source/ooo/file_ooo.scp	2006-06-02 13:05:20.847664500 +0000
+++ scp2/source/ooo/file_ooo.scp	2006-06-06 08:58:54.425000000 +0000
@@ -581,7 +581,7 @@
 File gid_File_Help_Common_Zip
     Dir = gid_Dir_Help_Isolanguage;
     ARCHIVE_TXT_FILE_BODY_PATCH;
-    EXTRA_ALL_LANG(shared);
+    EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG(shared);
     Patchfiles = ("shared.db",
                   "shared.ht",
                   "shared.jar",
@@ -599,7 +599,7 @@
 File gid_File_Help_Sbasic_Zip
     Dir = gid_Dir_Help_Isolanguage;
     ARCHIVE_TXT_FILE_BODY_PATCH;
-    EXTRA_ALL_LANG(sbasic);
+    EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG(sbasic);
     Patchfiles = ("sbasic.db",
                   "sbasic.ht",
                   "sbasic.jar",
@@ -619,7 +619,7 @@
 File gid_File_Help_Schart_Zip
     Dir = gid_Dir_Help_Isolanguage;
     ARCHIVE_TXT_FILE_BODY_PATCH;
-    EXTRA_ALL_LANG(schart);
+    EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG(schart);
 End
 
 #endif
--- /cygdrive/c/src/2.0.2-pristine/build/OOO_2_0_2/scp2/source/ooo/file_ooo.scp.orig	2006-06-02 13:04:05.378914500 +0000
+++ scp2/source/ooo/file_ooo.scp.orig	2006-06-06 08:57:52.409375000 +0000
@@ -567,7 +567,7 @@
 File gid_File_Help_Common_Zip
     Dir = gid_Dir_Help_Isolanguage;
     ARCHIVE_TXT_FILE_BODY_PATCH;
-    EXTRA_ALL_LANG(shared);
+    EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG(shared);
     Patchfiles = ("shared.db",
                   "shared.ht",
                   "shared.jar",
@@ -585,7 +585,7 @@
 File gid_File_Help_Sbasic_Zip
     Dir = gid_Dir_Help_Isolanguage;
     ARCHIVE_TXT_FILE_BODY_PATCH;
-    EXTRA_ALL_LANG(sbasic);
+    EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG(sbasic);
     Patchfiles = ("sbasic.db",
                   "sbasic.ht",
                   "sbasic.jar",
@@ -605,7 +605,7 @@
 File gid_File_Help_Schart_Zip
     Dir = gid_Dir_Help_Isolanguage;
     ARCHIVE_TXT_FILE_BODY_PATCH;
-    EXTRA_ALL_LANG(schart);
+    EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG(schart);
 End
 
 #endif
--- /cygdrive/c/src/2.0.2-pristine/build/OOO_2_0_2/scp2/source/writer/file_writer.scp	2006-02-10 11:49:54.000000000 +0000
+++ scp2/source/writer/file_writer.scp	2006-06-05 20:07:17.346875000 +0000
@@ -79,7 +79,7 @@
 File gid_File_Help_Swriter_Zip
     Dir = gid_Dir_Help_Isolanguage;
     ARCHIVE_TXT_FILE_BODY_PATCH;
-    EXTRA_ALL_LANG(swriter);
+    EXTRA_ALL_GOOD_HELP_LOCALIZATIONS_LANG(swriter);
     Patchfiles = ("swriter.db",
                   "swriter.ht",
                   "swriter.jar",

