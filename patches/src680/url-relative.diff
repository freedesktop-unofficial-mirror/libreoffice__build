Index: tools/source/fsys/urlobj.cxx
===================================================================
RCS file: /cvs/util/tools/source/fsys/urlobj.cxx,v
retrieving revision 1.52
diff -u -p -u -r1.52 urlobj.cxx
--- tools/source/fsys/urlobj.cxx	11 Jan 2005 13:14:17 -0000	1.52
+++ tools/source/fsys/urlobj.cxx	24 Feb 2005 20:46:33 -0000
@@ -709,7 +709,7 @@ guessFSysStyleByCounting(sal_Unicode con
 		           INetURLObject::FSYS_DOS : INetURLObject::FSYS_MAC;
 }
 
-rtl::OUString parseScheme(sal_Unicode const ** begin, sal_Unicode const * end) {
+static rtl::OUString parseScheme(sal_Unicode const ** begin, sal_Unicode const * end) {
     sal_Unicode const * p = *begin;
     if (p != end && INetMIME::isAlpha(*p)) {
         do {
@@ -1493,7 +1501,17 @@ bool INetURLObject::convertRelToAbs(rtl:
 	sal_uInt32 nFragmentDelimiter = '#';
 	Part ePart = PART_VISIBLE;
 
-	if (!pPrefix && bSmart)
+	bool bHasPrefix = ( pPrefix != NULL );
+	if (!pPrefix) {
+		pPrefixBegin = p;
+		rtl::OUString aScheme = parseScheme(&pPrefixBegin, pEnd);
+		// #i34835# To avoid problems with Windows file paths like "C:\foo", do not
+		// accept generic schemes that are only one character long:
+		if (aScheme.getLength() >= 2 && p != pEnd && *p != nFragmentDelimiter)
+			bHasPrefix = true;
+	}
+
+	if (!bHasPrefix && bSmart)
 	{
 		// If the input matches any of the following productions (for which
 		// the appropriate style bit is set in eStyle), it is assumed to be an
@@ -1593,7 +1613,7 @@ bool INetURLObject::convertRelToAbs(rtl:
 	rWasAbsolute = pPrefix != 0;
 
 	// Fast solution for non-relative URIs:
-	if (pPrefix)
+	if (bHasPrefix)
 	{
 		INetURLObject aNewURI(rTheRelURIRef, eMechanism, eCharset);
 		if (aNewURI.HasError())
