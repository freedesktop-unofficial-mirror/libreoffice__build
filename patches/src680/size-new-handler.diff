Index: sfx2/source/bastyp/newhdl.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/bastyp/newhdl.cxx,v
retrieving revision 1.9
diff -u -p -r1.9 newhdl.cxx
--- sfx2/source/bastyp/newhdl.cxx	25 Sep 2006 13:36:49 -0000	1.9
+++ sfx2/source/bastyp/newhdl.cxx	8 Dec 2006 16:42:00 -0000
@@ -51,12 +51,6 @@
 #endif
 
 #include <vcl/msgbox.hxx>
-#if defined( MAC )
-#include <mac_start.h>
-#include <Memory.h>						// FreeMem()
-#include <mac_end.h>
-#include <vcl/sysdep.hxx>				// Sysdepen::CallNewHandler()
-#endif
 
 #include "newhdl.hxx"
 #include "sfxtypes.hxx"
@@ -77,22 +71,6 @@ using namespace vos;
 SfxNewHdl* SfxNewHdl::pInstance = NULL;
 
 // -----------------------------------------------------------------------
-//	F"ur die vielen Plattformem ein _GetFreeMem()
-
-#if defined( WIN ) || defined( WNT )
-long    _GetFreeMem()	{ return GetFreeSpace(0); }
-#endif
-#if defined( MAC )
-long    _GetFreeMem()   { return FreeMem(); }
-#endif
-#if defined( OS2 )
-long    _GetFreeMem()   { DBG_ERRORFILE( "Kein _GetFreeMem()" ); return 0; }
-#endif
-#if defined( UNX )
-long    _GetFreeMem()   { DBG_ERRORFILE( "Kein _GetFreeMem()" ); return 0; }
-#endif
-
-// -----------------------------------------------------------------------
 
 void SfxNewHandler_Impl()
 
@@ -119,13 +97,8 @@ void SfxNewHdl::MemoryWarning()
 {
 	//fprintf ( stderr, "%s\n", "MemoryWarning" );
 
-#if defined(MAC)
-    MAC_SetCursor(&qd.arrow);
-    short itemHit = Alert( 130, nil );
-#else
     WarningBox aWarningBox( NULL, WinBits( WB_OK | WB_DEF_OK | WB_3DLOOK ), aMemWarningString );
     aWarningBox.Execute();
-#endif
 }
 
 //--------------------------------------------------------------------
@@ -186,14 +159,6 @@ SfxNewHdl::SfxNewHdl()
 // -----------------------------------------------------------------------
 
 SfxNewHdl::~SfxNewHdl()
-
-/*	[Beschreibung]
-
-	Destruktor der Klasse SfxNewHdl.
-	Die beiden MemoryBuffer werden freigegeben und der new-Handler
-	wird deinstalliert.
-
-*/
 {
 	FlushWarnMem();
 	FlushExceptMem();
@@ -204,11 +169,6 @@ SfxNewHdl::~SfxNewHdl()
 #endif
 }
 
-SfxNewHdl* SfxNewHdl::Get()
-{
-	return pInstance;
-}
-
 SfxNewHdl* SfxNewHdl::GetOrCreate()
 {
 	vos::OGuard  aGuard( vos::OMutex::getGlobalMutex() );
@@ -225,101 +185,47 @@ void SfxNewHdl::Delete()
 
 // -----------------------------------------------------------------------
 
-BOOL SfxNewHdl::TryAllocBuffer()
-/*	[Beschreibung]
-
-	Gfs. wird versucht, den Buffer f"ur das WarningLevel zu reallozieren.
-
-*/
+void SfxNewHdl::TryAllocBuffer()
+// Allocate a buffer for warnings if we have memory ...
 {
-//	fprintf (stderr, "%s\n", "TryAllocBuffer" );
-
-	if(!pWarnMem)
+	if (!pInstance)
+			return;
+	if (!pInstance->pWarnMem)
 	{
-		const ULONG nFree = _GetFreeMem();
-		if ( nFree >= WARN_MEM_SIZE + SAVE_MEM_SIZE )
-#ifndef MAC
-		{
-//            fprintf (stderr, "%s\n", "Reallocating" );
-			pWarnMem = new char[WARN_MEM_SIZE];
-		}
-#else
-		{
-			Sysdepen::CallNewHandler( FALSE );
-			pWarnMem = (MAC_Ptr) NewHandleClear(WARN_MEM_SIZE);
-			if ( pWarnMem )
-			{
-				MoveHHi((Handle) pWarnMem);
-				HLock ((Handle) pWarnMem);
-			}
-			Sysdepen::CallNewHandler( TRUE );
-		}
+#if defined( WIN ) || defined( WNT )
+		if ( GetFreeSpace(0) >= WARN_MEM_SIZE + SAVE_MEM_SIZE )
+// else - no meaningful GetFreeSpace method
 #endif
+			pInstance->pWarnMem = new char[WARN_MEM_SIZE];
 	}
-	return pWarnMem ? TRUE : FALSE;
 }
 
 // -----------------------------------------------------------------------
 
-BOOL SfxNewHdl::FlushWarnMem()
-
-/*	[Beschreibung]
-
-	Freigabe Buffer f"ur das WarningLevel
-*/
+// Free memory for warning
+bool SfxNewHdl::FlushWarnMem()
 {
-//	fprintf (stderr, "%s\n", "FlushWarnmem" );
 	if ( pWarnMem )
 	{
-#ifndef MAC
         delete [] pWarnMem;
         pWarnMem = NULL;
-#else
-	#ifdef DBG_UTIL
-		// Ist unser Handle immer noch NULL ?
-		if (memcmp(*((Handle) pWarnMem),
-				   *((Handle) pWarnMem)+ WARN_MEM_SIZE / 2,
-					 WARN_MEM_SIZE / 2) != 0)
-			DebugStr("\ppWarnMem wurde ueberschrieben");
-	#endif
-		DisposeHandle((Handle) pWarnMem);
-		pWarnMem = NULL;
-#endif
-		return TRUE;
+		return true;
 	}
-	return FALSE;
+	return false;
 }
 
 // -----------------------------------------------------------------------
 
-BOOL SfxNewHdl::FlushExceptMem()
-
-/*	[Beschreibung]
-
-	Freigabe Buffer f"ur das ErrorLevel
-*/
+// Free memory for error flagging
+bool SfxNewHdl::FlushExceptMem()
 {
-//	fprintf (stderr, "%s\n", "FlushExceptMem" );
-
 	if ( pExceptMem )
 	{
-#ifndef MAC
         delete [] pExceptMem;
         pExceptMem = NULL;
-#else
-	#ifdef DBG_UTIL
-		// Ist unser Handle immer noch NULL ?
-		if (memcmp(*((Handle) pExceptMem),
-				   *((Handle) pExceptMem)+EXCEPT_MEM_SIZE / 2,
-					 EXCEPT_MEM_SIZE / 2) != 0)
-			DebugStr("\ppExceptMem wurde ueberschrieben");
-	#endif
-		DisposeHandle((Handle) pExceptMem);
-		pExceptMem = NULL;
-#endif
-		return TRUE;
+		return true;
 	}
-	return FALSE;
+	return false;
 }
 
 // -----------------------------------------------------------------------
@@ -327,25 +233,8 @@ BOOL SfxNewHdl::FlushExceptMem()
 IMPL_LINK( SfxNewHdl, InitMem_Impl, void *, pvoid )
 {
     (void)pvoid; // unused variable
-#ifndef MAC
 	pWarnMem 	= new char [WARN_MEM_SIZE];
 	pExceptMem 	= new char [EXCEPT_MEM_SIZE];
-#else
-	Sysdepen::CallNewHandler( FALSE );
-	pExceptMem = (MAC_Ptr) NewHandleClear(EXCEPT_MEM_SIZE);
-	if ( pExceptMem )
-	{
-		MoveHHi((Handle) pExceptMem);
-		HLock ((Handle) pExceptMem);
-	}
-	pWarnMem = (MAC_Ptr) NewHandleClear(WARN_MEM_SIZE);
-	if ( pWarnMem )
-	{
-		MoveHHi((Handle) pWarnMem);
-		HLock ((Handle) pWarnMem);
-	}
-	Sysdepen::CallNewHandler( TRUE );
-#endif
 	return 0;
 }
 
Index: sfx2/inc/newhdl.hxx
===================================================================
RCS file: /cvs/framework/sfx2/inc/newhdl.hxx,v
retrieving revision 1.2
diff -u -p -r1.2 newhdl.hxx
--- sfx2/inc/newhdl.hxx	7 Sep 2005 17:07:48 -0000	1.2
+++ sfx2/inc/newhdl.hxx	8 Dec 2006 16:42:00 -0000
@@ -50,24 +50,19 @@ private:
 	char*				pExceptMem;
 	String				aMemWarningString;
 	String				aMemExceptionString;
+	bool 				FlushWarnMem();
+	bool 				FlushExceptMem();
     void				MemoryWarning();
     void    			MemoryError();
 						SfxNewHdl();
 						~SfxNewHdl();
+
 public:
-	BOOL				TryAllocBuffer();
-	BOOL 				FlushWarnMem();
-	BOOL 				FlushExceptMem();
+	static void         TryAllocBuffer();
 	DECL_LINK(			InitMem_Impl, void* );
 
-	static SfxNewHdl* 	Get();
 	static SfxNewHdl* 	GetOrCreate();
 	static void			Delete();
-
-	const String&		GetMemExceptionString()
-						{ return aMemExceptionString; }
-	const String&		GetMemWarningString()
-						{ return aMemWarningString; }
 };
 
 #endif
Index: sfx2/source/view/viewfrm.cxx
===================================================================
RCS file: /cvs/framework/sfx2/source/view/viewfrm.cxx,v
retrieving revision 1.124
diff -u -p -r1.124 viewfrm.cxx
--- sfx2/source/view/viewfrm.cxx	17 Sep 2006 16:51:23 -0000	1.124
+++ sfx2/source/view/viewfrm.cxx	8 Dec 2006 16:42:01 -0000
@@ -1778,7 +1778,7 @@ SfxViewFrame::~SfxViewFrame()
     // Member l"oschen
     KillDispatcher_Impl();
 
-    SfxNewHdl::Get()->TryAllocBuffer();
+    SfxNewHdl::TryAllocBuffer();
     delete pImp;
 }
 
