Index: sc/source/ui/dbgui/fieldwnd.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/dbgui/fieldwnd.cxx,v
retrieving revision 1.19
retrieving revision 1.19.290.1
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.19 -r1.19.290.1
--- sc/source/ui/dbgui/fieldwnd.cxx	27 Feb 2007 13:02:48 -0000	1.19
+++ sc/source/ui/dbgui/fieldwnd.cxx	18 Feb 2008 18:47:16 -0000	1.19.290.1
@@ -644,7 +644,7 @@
 
 void ScDPFieldWindow::ClearFields()
 {
-    if( eType == TYPE_SELECT )
+    if( eType == TYPE_SELECT || eType == TYPE_PAGE || eType == TYPE_COL || eType == TYPE_ROW || eType == TYPE_DATA)
 	{
         com::sun::star::uno::Reference < com::sun::star::accessibility::XAccessible > xTempAcc = xAccessible;
         if (!xTempAcc.is() && pAccessible)
Index: sc/source/ui/dbgui/pivot.hrc
===================================================================
RCS file: /cvs/sc/sc/source/ui/dbgui/pivot.hrc,v
retrieving revision 1.7
retrieving revision 1.7.660.1
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.7 -r1.7.660.1
--- sc/source/ui/dbgui/pivot.hrc	8 Sep 2005 20:39:01 -0000	1.7
+++ sc/source/ui/dbgui/pivot.hrc	18 Feb 2008 18:47:16 -0000	1.7.660.1
@@ -71,6 +71,10 @@
 #define BTN_FILTER              29
 #define BTN_DRILLDOWN           30
 
+#define FT_INAREA               40
+#define RB_INAREA               41
+#define ED_INAREA               42
+
 #define PIVOTSTR_SUM			1
 #define PIVOTSTR_COUNT			2
 #define PIVOTSTR_AVG			3
Index: sc/source/ui/dbgui/pivot.src
===================================================================
RCS file: /cvs/sc/sc/source/ui/dbgui/pivot.src,v
retrieving revision 1.59
retrieving revision 1.59.262.1
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.59 -r1.59.262.1
--- sc/source/ui/dbgui/pivot.src	19 Apr 2007 16:27:18 -0000	1.59
+++ sc/source/ui/dbgui/pivot.src	18 Feb 2008 18:47:16 -0000	1.59.262.1
@@ -163,7 +163,7 @@
         Size = MAP_APPFONT ( 50 , 14 ) ;
 		TabStop = TRUE ;
 		MapUnit = MAP_APPFONT ;
-        Delta = 73 ;
+        Delta = 90 ;
 	};
 	Window WND_FIELD
 	{
@@ -183,17 +183,42 @@
 		Text [ en-US ] = "Result" ;
 		Hide = TRUE ;
 	};
-	FixedText FT_OUTAREA
+
+    FixedText FT_INAREA
 	{
         Pos = MAP_APPFONT ( 12 , 203 ) ;
         Size = MAP_APPFONT ( 59 , 8 ) ;
 		Hide = TRUE ;
+        Text [ en-US ] = "Selection from" ;
+    };
+    Edit ED_INAREA
+    {
+        Border = TRUE ;
+        Pos = MAP_APPFONT ( 73 , 201 ) ;
+        Size = MAP_APPFONT ( 100 , 12 ) ;
+        TabStop = TRUE ;
+        Hide = TRUE ;
+    };
+    ImageButton RB_INAREA
+    {
+        Pos = MAP_APPFONT ( 177 , 200 ) ;
+        Size = MAP_APPFONT ( 13 , 15 ) ;
+        TabStop = TRUE ;
+        Hide = TRUE ;
+        QuickHelpText [ en-US ] = "Shrink" ;
+    };
+
+	FixedText FT_OUTAREA
+	{
+        Pos = MAP_APPFONT ( 12 , 221 ) ;
+        Size = MAP_APPFONT ( 59 , 8 ) ;
+		Hide = TRUE ;
 		Text [ en-US ] = "Results to" ;
 	};
 	ListBox LB_OUTAREA
 	{
 		Border = TRUE ;
-        Pos = MAP_APPFONT ( 73 , 201 ) ;
+        Pos = MAP_APPFONT ( 73 , 219 ) ;
         Size = MAP_APPFONT ( 75 , 90 ) ;
 		TabStop = TRUE ;
 		DropDown = TRUE ;
@@ -202,14 +227,14 @@
 	Edit ED_OUTAREA
 	{
 		Border = TRUE ;
-        Pos = MAP_APPFONT ( 152 , 201 ) ;
+        Pos = MAP_APPFONT ( 152 , 219 ) ;
         Size = MAP_APPFONT ( 100 , 12 ) ;
 		TabStop = TRUE ;
 		Hide = TRUE ;
 	};
 	ImageButton RB_OUTAREA
 	{
-        Pos = MAP_APPFONT ( 256 , 200 ) ;
+        Pos = MAP_APPFONT ( 256 , 218 ) ;
 		Size = MAP_APPFONT ( 13 , 15 ) ;
         TabStop = TRUE ;
         Hide = TRUE ;
@@ -217,7 +242,7 @@
 	};
 	CheckBox BTN_IGNEMPTYROWS
 	{
-        Pos = MAP_APPFONT ( 12 , 219 ) ;
+        Pos = MAP_APPFONT ( 12 , 237 ) ;
         Size = MAP_APPFONT ( 124 , 10 ) ;
 		TabStop = TRUE ;
 		Hide = TRUE ;
@@ -225,7 +250,7 @@
 	};
 	CheckBox BTN_DETECTCAT
 	{
-        Pos = MAP_APPFONT ( 142 , 219 ) ;
+        Pos = MAP_APPFONT ( 142 , 237 ) ;
         Size = MAP_APPFONT ( 124 , 10 ) ;
 		TabStop = TRUE ;
 		Hide = TRUE ;
@@ -233,7 +258,7 @@
 	};
 	CheckBox BTN_TOTALCOL
 	{
-        Pos = MAP_APPFONT ( 12 , 233 ) ;
+        Pos = MAP_APPFONT ( 12 , 251 ) ;
         Size = MAP_APPFONT ( 124 , 10 ) ;
 		TabStop = TRUE ;
 		Hide = TRUE ;
@@ -241,7 +266,7 @@
 	};
 	CheckBox BTN_TOTALROW
 	{
-        Pos = MAP_APPFONT ( 142 , 233 ) ;
+        Pos = MAP_APPFONT ( 142 , 251 ) ;
         Size = MAP_APPFONT ( 124 , 10 ) ;
 		TabStop = TRUE ;
 		Hide = TRUE ;
@@ -249,7 +274,7 @@
 	};
     CheckBox BTN_FILTER
     {
-        Pos = MAP_APPFONT ( 12 , 247 ) ;
+        Pos = MAP_APPFONT ( 12 , 265 ) ;
         Size = MAP_APPFONT ( 124 , 10 ) ;
         TabStop = TRUE ;
         Hide = TRUE ;
@@ -257,7 +282,7 @@
     };
     CheckBox BTN_DRILLDOWN
     {
-        Pos = MAP_APPFONT ( 142 , 247 ) ;
+        Pos = MAP_APPFONT ( 142 , 265 ) ;
         Size = MAP_APPFONT ( 124 , 10 ) ;
         TabStop = TRUE ;
         Hide = TRUE ;
Index: sc/source/ui/dbgui/pvlaydlg.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/dbgui/pvlaydlg.cxx,v
retrieving revision 1.27
retrieving revision 1.27.92.1
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.27 -r1.27.92.1
--- sc/source/ui/dbgui/pvlaydlg.cxx	20 Nov 2007 17:41:39 -0000	1.27
+++ sc/source/ui/dbgui/pvlaydlg.cxx	18 Feb 2008 18:47:16 -0000	1.27.92.1
@@ -41,6 +41,7 @@
 //----------------------------------------------------------------------------
 
 #include "pvlaydlg.hxx"
+#include "dbdocfun.hxx"
 
 #include <sfx2/dispatch.hxx>
 #include <vcl/msgbox.hxx>
@@ -61,6 +62,7 @@
 #include "pivot.hrc"
 #include "dpobject.hxx"
 #include "dpsave.hxx"
+#include "dpshttab.hxx"
 #include "scmod.hxx"
 
 #include "sc.hrc" //CHINA001
@@ -125,6 +127,11 @@
 		aFtInfo			( this, ScResId( FT_INFO ) ),
 
         aFlAreas        ( this, ScResId( FL_OUTPUT ) ),
+
+        aFtInArea		( this, ScResId( FT_INAREA) ),
+        aEdInPos		( this, ScResId( ED_INAREA) ),
+        aRbInPos		( this, ScResId( RB_INAREA ), &aEdInPos ),
+
 		aLbOutPos		( this, ScResId( LB_OUTAREA ) ),
 		aFtOutArea		( this, ScResId( FT_OUTAREA ) ),
 		aEdOutPos		( this, ScResId( ED_OUTAREA ) ),
@@ -148,6 +155,8 @@
 
 		bIsDrag			( FALSE ),
 
+        pEditActive     ( NULL ),
+
         eLastActiveType ( TYPE_SELECT ),
 		nOffset			( 0 ),
 		//
@@ -209,6 +218,10 @@
     for ( USHORT i = 0; i < FUNC_COUNT; ++i )
         aFuncNameArr.push_back( String( ScResId( i + 1 ) ) );
 
+    aBtnMore.AddWindow( &aFlAreas );
+    aBtnMore.AddWindow( &aFtInArea );
+    aBtnMore.AddWindow( &aEdInPos );
+    aBtnMore.AddWindow( &aRbInPos );
 	aBtnMore.AddWindow( &aFtOutArea );
 	aBtnMore.AddWindow( &aLbOutPos );
 	aBtnMore.AddWindow( &aEdOutPos );
@@ -219,7 +232,6 @@
 	aBtnMore.AddWindow( &aBtnTotalRow );
     aBtnMore.AddWindow( &aBtnFilter );
     aBtnMore.AddWindow( &aBtnDrillDown );
-    aBtnMore.AddWindow( &aFlAreas );
     aBtnMore.SetClickHdl( LINK( this, ScDPLayoutDlg, MoreClickHdl ) );
 
 	{
@@ -237,31 +249,35 @@
     aRowArr.resize( MAX_FIELDS );
     aDataArr.resize( MAX_FIELDS );
 
-	InitWndSelect( thePivotData.ppLabelArr, static_cast<long>(thePivotData.nLabels) );
-    InitWnd( thePivotData.aPageArr, static_cast<long>(thePivotData.nPageCount), TYPE_PAGE );
-	InitWnd( thePivotData.aColArr,  static_cast<long>(thePivotData.nColCount),  TYPE_COL );
-	InitWnd( thePivotData.aRowArr,  static_cast<long>(thePivotData.nRowCount),  TYPE_ROW );
-	InitWnd( thePivotData.aDataArr, static_cast<long>(thePivotData.nDataCount), TYPE_DATA );
-
-    aSlider.SetPageSize( PAGE_SIZE );
-    aSlider.SetVisibleSize( PAGE_SIZE );
-    aSlider.SetLineSize( LINE_SIZE );
-    aSlider.SetRange( Range( 0, static_cast<long>(((thePivotData.nLabels+LINE_SIZE-1)/LINE_SIZE)*LINE_SIZE) ) );
-
-	if ( thePivotData.nLabels > PAGE_SIZE )
+    ScRange inRange;
+    String inString;
+    if (xDlgDPObject->GetSheetDesc())
 	{
-        aSlider.SetEndScrollHdl( LINK( this, ScDPLayoutDlg, ScrollHdl ) );
-		aSlider.Show();
+        aEdInPos.Enable();
+        aRbInPos.Enable();
+        aOldRange = xDlgDPObject->GetSheetDesc()->aSourceRange;
+        aOldRange.Format( inString, SCR_ABS_3D, pDoc);
+        aEdInPos.SetText(inString);
 	}
 	else
-		aSlider.Hide();
+    {
+        /* Data is not reachable, so could be a remote database */
+        aEdInPos.Disable();
+        aRbInPos.Disable();
+    }
 
-	// Ein-/Ausgabebereiche: ----------------------------------------------
+    InitFields();
 
     aLbOutPos .SetSelectHdl( LINK( this, ScDPLayoutDlg, SelAreaHdl ) );
     aEdOutPos .SetModifyHdl( LINK( this, ScDPLayoutDlg, EdModifyHdl ) );
+    aEdInPos  .SetModifyHdl( LINK( this, ScDPLayoutDlg, EdInModifyHdl ) );	
     aBtnOk    .SetClickHdl ( LINK( this, ScDPLayoutDlg, OkHdl ) );
     aBtnCancel.SetClickHdl ( LINK( this, ScDPLayoutDlg, CancelHdl ) );
+    Link aLink = LINK( this, ScDPLayoutDlg, GetFocusHdl );
+    if ( aEdInPos.IsEnabled() )
+        // Once disabled it will never get enabled, so no need to handle focus.
+        aEdInPos.SetGetFocusHdl( aLink );
+    aEdOutPos.SetGetFocusHdl( aLink );
 
 	if ( pViewData && pDoc )
 	{
@@ -480,6 +496,27 @@
         aWndSelect.GrabFocus();
 }
 
+void ScDPLayoutDlg::InitFields()
+{
+    InitWndSelect( thePivotData.ppLabelArr, static_cast<long>(thePivotData.nLabels) );
+    InitWnd( thePivotData.aPageArr, static_cast<long>(thePivotData.nPageCount), TYPE_PAGE );
+    InitWnd( thePivotData.aColArr,  static_cast<long>(thePivotData.nColCount),  TYPE_COL );
+    InitWnd( thePivotData.aRowArr,  static_cast<long>(thePivotData.nRowCount),  TYPE_ROW );
+    InitWnd( thePivotData.aDataArr, static_cast<long>(thePivotData.nDataCount), TYPE_DATA );
+
+    aSlider.SetPageSize( PAGE_SIZE );
+    aSlider.SetVisibleSize( PAGE_SIZE );
+    aSlider.SetLineSize( LINE_SIZE );
+    aSlider.SetRange( Range( 0, static_cast<long>(((thePivotData.nLabels+LINE_SIZE-1)/LINE_SIZE)*LINE_SIZE) ) );
+
+    if ( thePivotData.nLabels > PAGE_SIZE )
+    {
+        aSlider.SetEndScrollHdl( LINK( this, ScDPLayoutDlg, ScrollHdl ) );
+        aSlider.Show();
+    }
+    else
+        aSlider.Hide();
+}
 
 //----------------------------------------------------------------------------
 
@@ -1314,22 +1351,78 @@
 	return bFit;
 }
 
+void ScDPLayoutDlg::UpdateSrcRange()
+{
+    String  theCurPosStr = aEdInPos.GetText();
+    USHORT  nResult = ScRange().Parse(theCurPosStr, pDoc);
+
+    if ( SCA_VALID != (nResult & SCA_VALID) )
+        // invalid source range.
+        return;
+
+    ScRefAddress start, end;
+    ConvertDoubleRef(pDoc, theCurPosStr, 1,  start, end);
+    ScRange aNewRange(start.GetAddress(), end.GetAddress());
+    ScSheetSourceDesc inSheet = *xDlgDPObject->GetSheetDesc();
+
+    if (inSheet.aSourceRange == aNewRange)
+        // new range is identical to the current range.  Nothing to do.
+        return;
+
+    ScTabViewShell * pTabViewShell = pViewData->GetViewShell();
+    inSheet.aSourceRange = aNewRange;
+    xDlgDPObject->SetSheetDesc(inSheet);
+    xDlgDPObject->InvalidateSource();
+    xDlgDPObject->FillOldParam( thePivotData, FALSE );
+    xDlgDPObject->FillLabelData(thePivotData);
+
+    pTabViewShell->SetDialogDPObject(xDlgDPObject.get());
+    aLabelDataArr.clear();
+    aWndSelect.ClearFields();
+    aWndData.ClearFields();
+    aWndRow.ClearFields();
+    aWndCol.ClearFields();
+    aWndPage.ClearFields();
+
+    for (USHORT i = 0; i < MAX_LABELS; ++i)
+        aSelectArr[i].reset();
+
+    for (USHORT i = 0; i < MAX_FIELDS; ++i)
+    {
+        RemoveField(TYPE_COL,  i);
+        RemoveField(TYPE_ROW,  i);
+        RemoveField(TYPE_DATA, i);
+    }
+
+    for (USHORT i = 0; i < MAX_PAGEFIELDS; ++i)
+        RemoveField(TYPE_PAGE, i);
+
+    InitFields();
+
+    return;
+}
 
 //----------------------------------------------------------------------------
 
 void ScDPLayoutDlg::SetReference( const ScRange& rRef, ScDocument* pDocP )
 {
-	if ( bRefInputMode )
-	{
+    if ( !bRefInputMode || !pEditActive )
+        return;
+
 		if ( rRef.aStart != rRef.aEnd )
-			RefInputStart( &aEdOutPos );
-/*
-		ScAddress	aAdr( nStartCol, nStartRow, nStartTab );
-		aAdr.PutInOrder( ScAddress( nEndCol, nEndRow, nEndTab ) );
-*/
+        RefInputStart( pEditActive );
+
+    if ( pEditActive == &aEdInPos )
+    {
 		String aRefStr;
-        rRef.aStart.Format( aRefStr, STD_FORMAT, pDocP );
-		aEdOutPos.SetRefString( aRefStr );
+        rRef.Format( aRefStr, SCR_ABS_3D, pDocP, pDocP->GetAddressConvention() );
+        pEditActive->SetRefString( aRefStr );
+    }
+    else if ( pEditActive == &aEdOutPos )
+    {
+        String aRefStr;
+        rRef.aStart.Format( aRefStr, STD_FORMAT, pDocP, pDocP->GetAddressConvention() );
+        pEditActive->SetRefString( aRefStr );
 	}
 }
 
@@ -1340,7 +1433,12 @@
 {
 	if ( bRefInputMode )
 	{
-		aEdOutPos.GrabFocus();
+        if ( pEditActive )
+            pEditActive->GrabFocus();
+
+        if ( pEditActive == &aEdInPos )
+            EdInModifyHdl( NULL );
+        else if ( pEditActive == &aEdOutPos )
 		EdModifyHdl( NULL );
 	}
 	else
@@ -1497,12 +1595,11 @@
 
 //----------------------------------------------------------------------------
 
-IMPL_LINK_INLINE_START( ScDPLayoutDlg, CancelHdl, CancelButton *, EMPTYARG )
+IMPL_LINK( ScDPLayoutDlg, CancelHdl, CancelButton *, EMPTYARG )
 {
 	Close();
 	return 0;
 }
-IMPL_LINK_INLINE_END( ScDPLayoutDlg, CancelHdl, CancelButton *, EMPTYARG )
 
 
 //----------------------------------------------------------------------------
@@ -1514,9 +1611,18 @@
 		bRefInputMode = TRUE;
 		//@BugID 54702 Enablen/Disablen nur noch in Basisklasse
 		//SFX_APPWINDOW->Enable();
+        if ( aEdInPos.IsEnabled() )
+        {
+            aEdInPos.Enable();
+            aEdInPos.GrabFocus();
+            aEdInPos.Enable();
+        }
+        else
+        {
 		aEdOutPos.Enable();
 		aEdOutPos.GrabFocus();
-        aRbOutPos.Enable();
+            aEdOutPos.Enable();
+        }
 	}
 	else
 	{
@@ -1557,6 +1663,13 @@
 }
 
 
+IMPL_LINK( ScDPLayoutDlg, EdInModifyHdl, Edit *, EMPTYARG )
+{
+    UpdateSrcRange();
+    return 0;
+}
+
+
 //----------------------------------------------------------------------------
 
 IMPL_LINK( ScDPLayoutDlg, SelAreaHdl, ListBox *, EMPTYARG )
@@ -1610,4 +1723,16 @@
 	return 0;
 }
 
+//----------------------------------------------------------------------------
+
+IMPL_LINK( ScDPLayoutDlg, GetFocusHdl, Control*, pCtrl )
+{
+    pEditActive = NULL;
+    if ( pCtrl == &aEdInPos )
+        pEditActive = &aEdInPos;
+    else if ( pCtrl == &aEdOutPos )
+        pEditActive = &aEdOutPos;
+
+	return 0;
+}
 
Index: sc/source/ui/inc/pvlaydlg.hxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/inc/pvlaydlg.hxx,v
retrieving revision 1.11
retrieving revision 1.11.632.1
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.11 -r1.11.632.1
--- sc/source/ui/inc/pvlaydlg.hxx	21 Oct 2005 12:04:24 -0000	1.11
+++ sc/source/ui/inc/pvlaydlg.hxx	18 Feb 2008 18:47:17 -0000	1.11.632.1
@@ -143,10 +143,18 @@
     FixedInfo               aFtInfo;
 
     FixedLine               aFlAreas;
+
+    // DP source selection
+    FixedText               aFtInArea;
+    ScRefEdit               aEdInPos;
+    ScRefButton             aRbInPos;
+
+    // DP output location
     ListBox                 aLbOutPos;
     FixedText               aFtOutArea;
     ScRefEdit               aEdOutPos;
     ScRefButton             aRbOutPos;
+
     CheckBox                aBtnIgnEmptyRows;
     CheckBox                aBtnDetectCat;
     CheckBox                aBtnTotalCol;
@@ -169,6 +177,8 @@
     size_t                  nDnDFromIndex;
     BOOL                    bIsDrag;
 
+    ScRefEdit*              pEditActive;
+
     Rectangle               aRectPage;
     Rectangle               aRectRow;
     Rectangle               aRectCol;
@@ -187,6 +197,7 @@
     ScDPFuncDataVec         aDataArr;
 
     ScDPObjectPtr           xDlgDPObject;
+    ScRange                 aOldRange;
     ScPivotParam            thePivotData;
     ScViewData*             pViewData;
     ScDocument*             pDoc;
@@ -198,6 +209,7 @@
     void                    InitWndSelect   ( LabelData** ppLabelArr, long nLabels );
     void                    InitWnd         ( PivotField* pArr, long nCount, ScDPFieldType eType );
     void                    InitFocus       ();
+    void                    InitFields      ();
     void                    CalcWndSizes    ();
     Point                   DlgPos2WndPos   ( const Point& rPt, Window& rWnd );
     ScDPLabelData*          GetLabelData    ( SCsCOL nCol, size_t* pPos = NULL );
@@ -221,14 +233,19 @@
                                               USHORT&       rColCount,
                                               USHORT&       rRowCount,
                                               USHORT&       rDataCount );
+
+    void                    UpdateSrcRange();
+
 	// Handler
     DECL_LINK( ClickHdl, PushButton * );
 	DECL_LINK( ScrollHdl, ScrollBar * );
 	DECL_LINK( SelAreaHdl, ListBox * );
 	DECL_LINK( MoreClickHdl, MoreButton * );
 	DECL_LINK( EdModifyHdl, Edit * );
+    DECL_LINK( EdInModifyHdl, Edit * );
 	DECL_LINK( OkHdl, OKButton * );
 	DECL_LINK( CancelHdl, CancelButton * );
+    DECL_LINK( GetFocusHdl, Control* );
 };
 
 
