--- sw/source/core/access/acccontext.hxx.old	2005-11-21 15:55:30.000000000 +0100
+++ sw/source/core/access/acccontext.hxx	2005-11-25 13:11:56.000000000 +0100
@@ -182,12 +182,12 @@
 
 	// Dispose children of the specified SwFrm. The SwFrm might belong to
 	// the current object or to any other child or grandchild.
-	void SwAccessibleContext::DisposeChildren( const SwFrm *pFrm,
+	void DisposeChildren( const SwFrm *pFrm,
 									   sal_Bool bRecursive );
 
-	void SwAccessibleContext::DisposeShape( const SdrObject *pObj,
+	void DisposeShape( const SdrObject *pObj,
 								::accessibility::AccessibleShape *pAccImpl );
-	void SwAccessibleContext::ScrolledInShape( const SdrObject *pObj,
+	void ScrolledInShape( const SdrObject *pObj,
 								::accessibility::AccessibleShape *pAccImpl );
 
 	virtual void _InvalidateContent( sal_Bool bVisibleDataFired );
--- sw/source/ui/inc/edtwin.hxx.old	2005-09-09 11:12:40.000000000 +0200
+++ sw/source/ui/inc/edtwin.hxx	2005-11-25 16:06:40.000000000 +0100
@@ -289,7 +289,7 @@
     void StopQuickHelp();
 
     // --> OD 2005-02-18 #i42921# - add parameter <bVerticalMode>
-    BOOL SwEditWin::RulerMarginDrag( SwView& rView,
+    BOOL RulerMarginDrag( SwView& rView,
                                      const MouseEvent& rMEvt,
                                      const bool bVerticalMode );
     // <--
--- sw/source/core/inc/frame.hxx.old	2005-10-19 14:35:01.000000000 +0200
+++ sw/source/core/inc/frame.hxx	2005-11-25 13:04:33.000000000 +0100
@@ -834,7 +834,7 @@
     void MakeUpperPos( const SwFrm*, const SwFrm*, BOOL );
     void MakeLeftPos( const SwFrm*, const SwFrm*, BOOL );
     void MakeRightPos( const SwFrm*, const SwFrm*, BOOL );
-    inline BOOL SwFrm::IsNeighbourFrm() const
+    inline BOOL IsNeighbourFrm() const
         { return GetType() & FRM_NEIGHBOUR ? TRUE : FALSE; }
 
 #ifndef PRODUCT
--- sw/inc/grfatr.hxx.old	2005-09-09 03:56:14.000000000 +0200
+++ sw/inc/grfatr.hxx	2005-11-25 13:26:00.000000000 +0100
@@ -84,7 +84,7 @@
 	SwMirrorGrf( USHORT nMiro = RES_DONT_MIRROR_GRF )
 		: SfxEnumItem( RES_GRFATR_MIRRORGRF, nMiro ), bGrfToggle( sal_False )
 	{}
-	SwMirrorGrf::SwMirrorGrf( const SwMirrorGrf &rMirrorGrf )
+	SwMirrorGrf( const SwMirrorGrf &rMirrorGrf )
 		: SfxEnumItem( RES_GRFATR_MIRRORGRF, rMirrorGrf.GetValue()),
 		bGrfToggle( rMirrorGrf.IsGrfToggle() )
 	{}
--- sw/source/ui/inc/maildispatcher.hxx.old	2005-09-09 11:39:38.000000000 +0200
+++ sw/source/ui/inc/maildispatcher.hxx	2005-11-25 16:10:18.000000000 +0100
@@ -110,7 +110,7 @@
         Dequeues a mail message. 
         This enables the caller to remove attachments when sending mails is to be cancelled.
     */
-    ::com::sun::star::uno::Reference< ::com::sun::star::mail::XMailMessage> MailDispatcher::dequeueMailMessage();
+    ::com::sun::star::uno::Reference< ::com::sun::star::mail::XMailMessage> dequeueMailMessage();
     
     /**
         Start sending mail messages asynchronously. A client may register
--- sw/source/core/inc/rootfrm.hxx.old	2005-09-09 05:53:50.000000000 +0200
+++ sw/source/core/inc/rootfrm.hxx	2005-11-25 13:13:34.000000000 +0100
@@ -170,7 +170,7 @@
 	~SwRootFrm();
 
 	ViewShell *GetCurrShell() const { return pCurrShell; }
-	void SwRootFrm::DeRegisterShell( ViewShell *pSh );
+	void DeRegisterShell( ViewShell *pSh );
 
 	//Start-/EndAction fuer alle Shells auf moeglichst hoeher
 	//(Shell-Ableitungs-)Ebene aufsetzen. Fuer die StarONE Anbindung, die
--- sw/source/core/inc/scriptinfo.hxx.old	2005-10-05 15:14:08.000000000 +0200
+++ sw/source/core/inc/scriptinfo.hxx	2005-11-25 13:28:49.000000000 +0100
@@ -152,7 +152,7 @@
 
     inline USHORT CountHiddenChg() const;
     inline xub_StrLen GetHiddenChg( const USHORT nCnt ) const;
-    static void SwScriptInfo::CalcHiddenRanges( const SwTxtNode& rNode,
+    static void CalcHiddenRanges( const SwTxtNode& rNode,
                                                 MultiSelection& rHiddenMulti );
 
     // "high" level operations, nPos refers to string position
--- sw/source/core/inc/tabfrm.hxx.old	2005-09-09 06:00:05.000000000 +0200
+++ sw/source/core/inc/tabfrm.hxx	2005-11-25 13:10:09.000000000 +0100
@@ -201,7 +201,7 @@
     }
     // <--
 
-    bool SwTabFrm::RemoveFollowFlowLine();
+    bool RemoveFollowFlowLine();
     //
     // End: New stuff for breaking table rows
     //
@@ -211,7 +211,7 @@
 
     SwTwips CalcHeightOfFirstContentLine() const;
 
-	bool SwTabFrm::IsInHeadline( const SwFrm& rFrm ) const;
+	bool IsInHeadline( const SwFrm& rFrm ) const;
     SwRowFrm* GetFirstNonHeadlineRow() const;
 
     bool IsLayoutSplitAllowed() const;
--- sw/inc/undobj.hxx.old	2005-11-08 18:13:46.000000000 +0100
+++ sw/inc/undobj.hxx	2005-11-25 13:27:24.000000000 +0100
@@ -382,7 +382,7 @@
     SwDoc * pDoc;
 
     void Init(const SwNodeIndex & rNode);
-    String * SwUndoInsert::GetTxtFromDoc() const;
+    String * GetTxtFromDoc() const;
 
 public:
 	SwUndoInsert( const SwNodeIndex& rNode, xub_StrLen nCntnt, xub_StrLen nLen,
--- sw/inc/unoobj.hxx.old	2005-09-09 04:27:30.000000000 +0200
+++ sw/inc/unoobj.hxx	2005-11-25 13:16:20.000000000 +0100
@@ -496,7 +496,7 @@
     virtual void SAL_CALL setPropertyToDefault( const ::rtl::OUString& PropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
     virtual ::com::sun::star::uno::Any SAL_CALL getPropertyDefault( const ::rtl::OUString& aPropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
 
-    static void SwXTextCursor::SetPropertyValue(
+    static void SetPropertyValue(
                         SwPaM& rPaM,
                         const SfxItemPropertySet& rPropSet,
                         const rtl::OUString& rPropertyName,
@@ -508,11 +508,11 @@
                                 ::com::sun::star::lang::IllegalArgumentException,
                                 ::com::sun::star::lang::WrappedTargetException,
                                 ::com::sun::star::uno::RuntimeException);
- 	static ::com::sun::star::uno::Any  SwXTextCursor::GetPropertyValue(	SwPaM& rPaM, const SfxItemPropertySet& rPropSet, const ::rtl::OUString& rPropertyName) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
- 	static ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyState > SwXTextCursor::GetPropertyStates(	SwPaM& rPaM, SfxItemPropertySet& rPropSet,		const ::com::sun::star::uno::Sequence< ::rtl::OUString >& PropertyNames, SwGetPropertyStatesCaller eCaller = SW_PROPERTY_STATE_CALLER_DEFAULT)			throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
- 	static ::com::sun::star::beans::PropertyState SwXTextCursor::GetPropertyState( SwPaM& rPaM, SfxItemPropertySet& rPropSet, const ::rtl::OUString& rPropertyName)		throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
- 	static void SwXTextCursor::SetPropertyToDefault( SwPaM& rPaM, const SfxItemPropertySet& rPropSet,	const rtl::OUString& rPropertyName)	throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
-	static ::com::sun::star::uno::Any  SwXTextCursor::GetPropertyDefault( SwPaM& rPaM, const SfxItemPropertySet& rPropSet,	const ::rtl::OUString& rPropertyName)	throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+ 	static ::com::sun::star::uno::Any  GetPropertyValue(	SwPaM& rPaM, const SfxItemPropertySet& rPropSet, const ::rtl::OUString& rPropertyName) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+ 	static ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyState > GetPropertyStates(	SwPaM& rPaM, SfxItemPropertySet& rPropSet,		const ::com::sun::star::uno::Sequence< ::rtl::OUString >& PropertyNames, SwGetPropertyStatesCaller eCaller = SW_PROPERTY_STATE_CALLER_DEFAULT)			throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
+ 	static ::com::sun::star::beans::PropertyState GetPropertyState( SwPaM& rPaM, SfxItemPropertySet& rPropSet, const ::rtl::OUString& rPropertyName)		throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
+ 	static void SetPropertyToDefault( SwPaM& rPaM, const SfxItemPropertySet& rPropSet,	const rtl::OUString& rPropertyName)	throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
+	static ::com::sun::star::uno::Any  GetPropertyDefault( SwPaM& rPaM, const SfxItemPropertySet& rPropSet,	const ::rtl::OUString& rPropertyName)	throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
 
     //XDocumentInsertable - neu
 	virtual void SAL_CALL insertDocumentFromURL(const rtl::OUString& rURL, const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue >& aOptions) throw( ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::io::IOException, ::com::sun::star::uno::RuntimeException );
--- sw/inc/unoport.hxx.old	2005-09-09 04:27:45.000000000 +0200
+++ sw/inc/unoport.hxx	2005-11-25 13:17:30.000000000 +0100
@@ -162,7 +162,7 @@
                                     ::com::sun::star::uno::Any *pValues,
                                     sal_Int32 nLength );
 
-    void SwXTextPortion::GetPropertyValue( ::com::sun::star::uno::Any &rVal,
+    void GetPropertyValue( ::com::sun::star::uno::Any &rVal,
                 const SfxItemPropertyMap *pEntry, SwUnoCrsr *pUnoCrsr, SfxItemSet *&pSet );
 
 //    ::com::sun::star::uno::Sequence< ::com::sun::star::beans::GetDirectPropertyTolerantResult > SAL_CALL GetPropertyValuesTolerant_Impl(
--- sw/inc/unosett.hxx.old	2005-09-09 04:28:44.000000000 +0200
+++ sw/inc/unosett.hxx	2005-11-25 14:12:21.000000000 +0100
@@ -217,7 +217,7 @@
 	SwXNumberingRules(SwDoc& rDoc); //create a new instance
 	
 
-	static const ::com::sun::star::uno::Sequence< sal_Int8 > & SwXNumberingRules::getUnoTunnelId();
+	static const ::com::sun::star::uno::Sequence< sal_Int8 > & getUnoTunnelId();
 
 	virtual sal_Int64 SAL_CALL getSomething( const ::com::sun::star::uno::Sequence< sal_Int8 >& aIdentifier ) throw(::com::sun::star::uno::RuntimeException);
 
--- sw/source/ui/inc/view.hxx.old	2005-11-04 17:02:18.000000000 +0100
+++ sw/source/ui/inc/view.hxx	2005-11-25 15:58:37.000000000 +0100
@@ -632,7 +632,7 @@
     void ApplyAccessiblityOptions(SvtAccessibilityOptions& rAccessibilityOptions);
 
     // get print options (SwPrtOptions)
-    static void SwView::MakeOptions( PrintDialog* pDlg, SwPrtOptions& rOpts, 
+    static void MakeOptions( PrintDialog* pDlg, SwPrtOptions& rOpts, 
             BOOL* pPrtProspect, BOOL bWeb, SfxPrinter* pPrt, SwPrintData* pData );
 
 	SwView(SfxViewFrame* pFrame, SfxViewShell*);
