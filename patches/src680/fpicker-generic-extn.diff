--- fpicker/source/office/iodlgimp.hxx	2005-05-10 16:39:30.000000000 +0530
+++ fpicker/source/office/iodlgimp.hxx	2005-05-10 16:39:39.000000000 +0530
@@ -125,6 +125,7 @@
 
 	const String&		GetName() const		{ return m_aName; }
 	const String&		GetType() const		{ return m_aType; }
+	const String		GetExtension() const	{ return m_aType.Copy( 2 ); }
 
 	sal_Bool			isGroupSeparator() const	{ return 0 == m_aType.Len(); }
 };
--- fpicker/source/office/iodlg.cxx	2005-05-10 16:37:23.000000000 +0530
+++ fpicker/source/office/iodlg.cxx	2005-05-10 16:39:39.000000000 +0530
@@ -309,14 +309,22 @@
 	}
 
 	//-----------------------------------------------------------------------------
-	String GetFsysExtension_Impl( const String& rFile )
+	String GetFsysExtension_Impl( const String& rFile, const String& rLastFilterExt )
 	{
 		const sal_Unicode* p0 = rFile.GetBuffer();
 		const sal_Unicode* p1 = p0 + rFile.Len() - 1;
 		while ( p1 >= p0 && *p1 != sal_Unicode( '.' ) )
 			p1--;
 		if ( p1 >= p0 )
-			return String( rFile.Copy( p1 - p0 + 1 ) );
+		{
+			if ( rLastFilterExt.Len() )
+			{
+				if ( rFile.Copy( p1 - p0 + 1).EqualsIgnoreCaseAscii( rLastFilterExt ) )
+					return String( rFile.Copy( p1 - p0 + 1 ) );
+			}
+			else
+				return String( rFile.Copy( p1 - p0 + 1 ) );
+		}
 		return String();
 	}
 
@@ -363,14 +371,14 @@
 	}
 
     //-------------------------------------------------------------------------
-	void lcl_autoUpdateFileExtension( SvtFileDialog* _pDialog )
+	void lcl_autoUpdateFileExtension( SvtFileDialog* _pDialog, const String& _rLastFilterExt )
 	{
 		// if auto extension is enabled ....
 		if ( _pDialog->isAutoExtensionEnabled() )
 		{
 			// automatically switch to the extension of the (maybe just newly selected) extension
 			String aNewFile = _pDialog->getCurrentFileText( );
-			String aExt = GetFsysExtension_Impl( aNewFile );
+			String aExt = GetFsysExtension_Impl( aNewFile, _rLastFilterExt );
 
 			// but only if there already is an extension
 			if ( aExt.Len() )
@@ -1075,7 +1083,7 @@
 	if ( !_bAllowUserDefExt || bUseCurFilterExt )
 	{
 		if ( _pImp->GetCurFilter( ) )
-			SetDefaultExt( _pImp->GetCurFilter( )->GetType().Copy(2) );
+			SetDefaultExt( _pImp->GetCurFilter( )->GetExtension() );
 		else
 			EraseDefaultExt();
 	}
@@ -1535,20 +1543,22 @@
 				||	pThis->_pImp->_pUserFilter
 				)
 		{
-			// Ggf. Filter des Benutzers entfernen.
+			// Store the old filter for the auto extension handling
+			const String& rLastFilterExt = pThis->_pImp->GetCurFilter()->GetExtension();
 			DELETEZ( pThis->_pImp->_pUserFilter );
+			
+			// Ggf. Filter des Benutzers entfernen.
 			pThis->_pImp->SetCurFilter( pSelectedFilter, sSelectedFilterDisplayName );
 
 			// Ggf. Endung anzeigen.
-			const String& rType = pSelectedFilter->GetType();
-			pThis->SetDefaultExt( rType.Copy( 2 ) );
+			pThis->SetDefaultExt( pSelectedFilter->GetExtension() );
 			USHORT nSepPos = pThis->GetDefaultExt().Search( FILEDIALOG_DEF_EXTSEP );
 
 			if ( nSepPos != STRING_NOTFOUND )
 				pThis->EraseDefaultExt( nSepPos );
 
 			// update the extension of the current file if necessary
-			lcl_autoUpdateFileExtension( pThis );
+			lcl_autoUpdateFileExtension( pThis, rLastFilterExt );
 
 			// wenn der Benutzer schnell durch die Filterbox
 			// travelt, nicht sofort Filtern
@@ -1848,7 +1858,7 @@
                                 CHECKBOX_AUTOEXTENSION );
 
 	// update the extension of the current file if necessary
-	lcl_autoUpdateFileExtension( this );
+	lcl_autoUpdateFileExtension( this, this->_pImp->GetCurFilter()->GetExtension() );
 
     return 0;
 }
@@ -2097,8 +2107,7 @@
 
 		// Anzeige anpassen.
 		_pImp->SelectFilterListEntry( _pImp->GetCurFilter()->GetName() );
-		String aType( _pImp->GetCurFilter()->GetType() );
-		SetDefaultExt( aType.Copy( 2 ) );
+		SetDefaultExt( _pImp->GetCurFilter()->GetExtension() );
 		USHORT nSepPos = GetDefaultExt().Search( FILEDIALOG_DEF_EXTSEP );
 		if ( nSepPos != STRING_NOTFOUND )
 			EraseDefaultExt( nSepPos );
