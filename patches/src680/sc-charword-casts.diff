diff -puwr sc/inc/compiler.hxx sc/inc/compiler.hxx
--- sc/inc/compiler.hxx	2006-10-18 08:16:39.000000000 -0400
+++ sc/inc/compiler.hxx	2006-11-29 10:54:05.000000000 -0500
@@ -393,21 +393,25 @@ public:
 	BOOL HasModifiedRange();
 
 	/// If the character is allowed as first character in sheet names or references
-	static inline BOOL IsCharWordChar( sal_Unicode c,
+	static inline BOOL IsCharWordChar( String const & rStr,
+									   xub_StrLen nPos,
 									   const ScAddress::Convention eConv = ScAddress::CONV_OOO )
 		{
+			sal_Unicode c = rStr.GetChar( nPos );
 			return c < 128 ?
 				((pConventions[eConv]->mpCharTable[ UINT8(c) ] & SC_COMPILER_C_CHAR_WORD) == SC_COMPILER_C_CHAR_WORD) :
-				ScGlobal::pCharClass->isLetterNumeric( c );
+				ScGlobal::pCharClass->isLetterNumeric( rStr, nPos );
 		}
 
 	/// If the character is allowed in sheet names or references
-	static inline BOOL IsWordChar( sal_Unicode c,
+	static inline BOOL IsWordChar( String const & rStr,
+								   xub_StrLen nPos,
 								   const ScAddress::Convention eConv = ScAddress::CONV_OOO )
 		{
+			sal_Unicode c = rStr.GetChar( nPos );
 			return c < 128 ?
 				((pConventions[eConv]->mpCharTable[ UINT8(c) ] & SC_COMPILER_C_WORD) == SC_COMPILER_C_WORD) :
-				ScGlobal::pCharClass->isLetterNumeric( c );
+				ScGlobal::pCharClass->isLetterNumeric( rStr, nPos );
 		}
 
 private:
diff -puwr sc/source/core/tool/compiler.cxx sc/source/core/tool/compiler.cxx
--- sc/source/core/tool/compiler.cxx	2006-11-14 23:36:21.000000000 -0500
+++ sc/source/core/tool/compiler.cxx	2006-11-29 10:59:39.000000000 -0500
@@ -1018,20 +1018,20 @@ ScCompiler::ScCompiler(ScDocument* pDocu
 void ScCompiler::CheckTabQuotes( String& rString,
 								 const ScAddress::Convention eConv )
 {
-    register const sal_Unicode* p = rString.GetBuffer();
-    register const sal_Unicode* const pEnd = p + rString.Len();
+	register const xub_StrLen nLen = rString.Len();
+	register xub_StrLen i;
+
 	bool bNeedsQuote = false;
 
-    while ( p < pEnd )
+    for ( i = 0 ; i < nLen ; i++ )
     {
-        if( !IsWordChar( *p ) )
+        if( !IsWordChar( rString, i ) )
         {
 			bNeedsQuote = true;
 			break;
         }
-        p++;
     }
-    if ( CharClass::isAsciiNumeric( rString ) )
+    if ( !bNeedsQuote && CharClass::isAsciiNumeric( rString ) )
     {
 			bNeedsQuote = true;
     }
diff -puwr sc/source/core/tool/rangenam.cxx sc/source/core/tool/rangenam.cxx
--- sc/source/core/tool/rangenam.cxx	2006-10-18 08:23:17.000000000 -0400
+++ sc/source/core/tool/rangenam.cxx	2006-11-29 10:56:11.000000000 -0500
@@ -540,20 +540,20 @@ void ScRangeData::MakeValidName( String&
 	//	ungueltige Zeichen vorne weglassen
 	xub_StrLen nPos = 0;
 	xub_StrLen nLen = rName.Len();
-	while ( nPos < nLen && !ScCompiler::IsWordChar( rName.GetChar(nPos) ) )
+	while ( nPos < nLen && !ScCompiler::IsWordChar( rName, nPos) )
 		++nPos;
 	if ( nPos>0 )
 		rName.Erase(0,nPos);
 
 	//	wenn vorne ein ungueltiges Anfangszeichen steht, '_' davor
-	if ( rName.Len() && !ScCompiler::IsCharWordChar( rName.GetChar(0) ) )
+	if ( rName.Len() && !ScCompiler::IsCharWordChar( rName, 0 ) )
 		rName.Insert('_',0);
 
 	//	ungueltige durch '_' ersetzen
 	nLen = rName.Len();
 	for (nPos=0; nPos<nLen; nPos++)
 	{
-		if ( !ScCompiler::IsWordChar( rName.GetChar(nPos) ) )
+		if ( !ScCompiler::IsWordChar( rName, nPos) )
 			rName.SetChar( nPos, '_' );
 	}
 
@@ -584,11 +584,11 @@ BOOL ScRangeData::IsNameValid( const Str
         needs to be changed too. */
 	xub_StrLen nPos = 0;
 	xub_StrLen nLen = rName.Len();
-	if ( !nLen || !ScCompiler::IsCharWordChar( rName.GetChar(nPos++) ) )
+	if ( !nLen || !ScCompiler::IsCharWordChar( rName, nPos++ ) )
 		return FALSE;
 	while ( nPos < nLen )
 	{
-		if ( !ScCompiler::IsWordChar( rName.GetChar(nPos++) ) )
+		if ( !ScCompiler::IsWordChar( rName, nPos++ ) )
 			return FALSE;
 	}
 	// Parse nicht auf VALID pruefen, es reicht, wenn irgendein Bestandteil
diff -puwr sc/source/filter/ftools/ftools.cxx sc/source/filter/ftools/ftools.cxx
--- sc/source/filter/ftools/ftools.cxx	2006-07-21 08:25:55.000000000 -0400
+++ sc/source/filter/ftools/ftools.cxx	2006-11-29 10:55:46.000000000 -0500
@@ -198,10 +198,10 @@ void ScfTools::ConvertToScSheetName( Str
 void ScfTools::ConvertToScDefinedName( String& rName )
 {
     xub_StrLen nLen = rName.Len();
-    if( nLen && !ScCompiler::IsCharWordChar( rName.GetChar( 0 ) ) )
+    if( nLen && !ScCompiler::IsCharWordChar( rName, 0 ) )
         rName.SetChar( 0, '_' );
     for( xub_StrLen nPos = 1; nPos < nLen; ++nPos )
-        if( !ScCompiler::IsWordChar( rName.GetChar( nPos ) ) )
+        if( !ScCompiler::IsWordChar( rName, nPos ) )
             rName.SetChar( nPos, '_' );
 }
 
