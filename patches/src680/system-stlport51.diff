--- canvas/source/tools/page.cxx.orig	2006-12-27 11:59:14.000000000 +0100
+++ canvas/source/tools/page.cxx	2006-12-27 11:59:03.000000000 +0100
@@ -36,8 +36,8 @@
 // MARKER(update_precomp.py): autogen include statement, do not remove
 #include "precompiled_canvas.hxx"
 
-#include <boost/bind.hpp>
 #include "page.hxx"
+#include <boost/bind.hpp>
 
 namespace canvas
 {
--- canvas/source/tools/pagemanager.cxx.orig	2006-12-27 12:01:26.000000000 +0100
+++ canvas/source/tools/pagemanager.cxx	2006-12-27 12:01:36.000000000 +0100
@@ -36,8 +36,8 @@
 // MARKER(update_precomp.py): autogen include statement, do not remove
 #include "precompiled_canvas.hxx"
 
-#include <boost/bind.hpp>
 #include "pagemanager.hxx"
+#include <boost/bind.hpp>
 
 namespace canvas
 {
--- canvas/source/tools/surfaceproxy.cxx.orig	2006-12-27 12:02:58.000000000 +0100
+++ canvas/source/tools/surfaceproxy.cxx	2006-12-27 12:03:13.000000000 +0100
@@ -36,11 +36,11 @@
 // MARKER(update_precomp.py): autogen include statement, do not remove
 #include "precompiled_canvas.hxx"
 
-#include <boost/bind.hpp>
 #include <basegfx/polygon/b2dpolygoncutandtouch.hxx>
 #include <basegfx/polygon/b2dpolygontriangulator.hxx>
 #include <basegfx/polygon/b2dpolypolygontools.hxx>
 #include "surfaceproxy.hxx"
+#include <boost/bind.hpp>
 
 namespace canvas
 {
--- chart2/source/tools/CharacterProperties.cxx.orig	2006-12-27 15:17:18.000000000 +0100
+++ chart2/source/tools/CharacterProperties.cxx	2006-12-27 15:28:37.000000000 +0100
@@ -485,40 +485,62 @@
     bool bIncludeStyleProperties /* = false */ )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_FONT_NAME ));
-    rOutMap[ PROP_CHAR_FONT_NAME ] =
-        uno::makeAny( ::rtl::OUString( C2U( "Albany" )));
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_FONT_NAME,
+        uno::makeAny( ::rtl::OUString( C2U( "Albany" )))
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_FONT_FAMILY ));
-    rOutMap[ PROP_CHAR_FONT_FAMILY ] =
-        uno::makeAny( awt::FontFamily::SWISS );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_FONT_FAMILY,
+        uno::makeAny( awt::FontFamily::SWISS )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_FONT_CHAR_SET ));
-    rOutMap[ PROP_CHAR_FONT_CHAR_SET ] =
-        uno::makeAny( awt::CharSet::SYSTEM );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_FONT_CHAR_SET,
+        uno::makeAny( awt::CharSet::SYSTEM )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_FONT_PITCH ));
-    rOutMap[ PROP_CHAR_FONT_PITCH ] =
-        uno::makeAny( awt::FontPitch::VARIABLE );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_FONT_PITCH,
+        uno::makeAny( awt::FontPitch::VARIABLE )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_COLOR ));
-    rOutMap[ PROP_CHAR_COLOR ] =
-        uno::makeAny( sal_Int32(-1) );//automatic color (COL_AUTO)
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_COLOR,
+        uno::makeAny( sal_Int32(-1) )//automatic color (COL_AUTO)
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_CHAR_HEIGHT ));
-    rOutMap[ PROP_CHAR_CHAR_HEIGHT ] =
-        uno::makeAny( float( 12.0 ));
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_CHAR_HEIGHT,
+        uno::makeAny( float( 12.0 ))
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_UNDERLINE ));
-    rOutMap[ PROP_CHAR_UNDERLINE ] =
-        uno::makeAny( awt::FontUnderline::NONE );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_UNDERLINE,
+        uno::makeAny( awt::FontUnderline::NONE )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_UNDERLINE_HAS_COLOR ));
-    rOutMap[ PROP_CHAR_UNDERLINE_HAS_COLOR ] =
-        uno::makeAny( sal_Bool( sal_False ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_UNDERLINE_HAS_COLOR,
+        uno::makeAny( sal_Bool( sal_False ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_WEIGHT ));
-    rOutMap[ PROP_CHAR_WEIGHT ] =
-        uno::makeAny( awt::FontWeight::NORMAL );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_WEIGHT,
+        uno::makeAny( awt::FontWeight::NORMAL )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_POSTURE ));
-    rOutMap[ PROP_CHAR_POSTURE ] =
-        uno::makeAny( awt::FontSlant_NONE );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_POSTURE,
+        uno::makeAny( awt::FontSlant_NONE )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_AUTO_KERNING ));
-    rOutMap[ PROP_CHAR_AUTO_KERNING ] =
-        uno::makeAny( sal_True );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_AUTO_KERNING,
+        uno::makeAny( sal_True )
+        ));
 //     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_CASE_MAPPING ));
 //     rOutMap[ PROP_CHAR_CASE_MAPPING ] =
 //         uno::makeAny( style::CaseMap::NONE );
@@ -529,18 +551,24 @@
 //     rOutMap[ PROP_CHAR_SCALE_WIDTH ] =
 //         uno::makeAny( sal_Int16( 71 ) );
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_ESCAPEMENT_HEIGHT ));
-    rOutMap[ PROP_CHAR_ESCAPEMENT_HEIGHT ] =
-        uno::makeAny( sal_Int8( 0 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_ESCAPEMENT_HEIGHT,
+        uno::makeAny( sal_Int8( 0 ) )
+        ));
 
 //     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_CROSSED_OUT ));
 //     rOutMap[ PROP_CHAR_CROSSED_OUT ] =
 //         uno::makeAny( sal_Bool( sal_False ) );
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_STRIKE_OUT ));
-    rOutMap[ PROP_CHAR_STRIKE_OUT ] =
-        uno::makeAny( sal_Bool( sal_False ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_STRIKE_OUT,
+        uno::makeAny( sal_Bool( sal_False ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_WORD_MODE ));
-    rOutMap[ PROP_CHAR_WORD_MODE ] =
-        uno::makeAny( sal_Bool( sal_False ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_WORD_MODE,
+        uno::makeAny( sal_Bool( sal_False ) )
+        ));
 //     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_FLASH ));
 //     rOutMap[ PROP_CHAR_FLASH ] =
 //         uno::makeAny( sal_Bool( sal_False ) );
@@ -549,18 +577,26 @@
 //     rOutMap[ PROP_CHAR_LOCALE ] =
 //         uno::makeAny( );
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_SHADOWED ));
-    rOutMap[ PROP_CHAR_SHADOWED ] =
-        uno::makeAny( sal_Bool( sal_False ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_SHADOWED,
+        uno::makeAny( sal_Bool( sal_False ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_CONTOURED ));
-    rOutMap[ PROP_CHAR_CONTOURED ] =
-        uno::makeAny( sal_Bool( sal_False ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_CONTOURED,
+        uno::makeAny( sal_Bool( sal_False ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_RELIEF ));
-    rOutMap[ PROP_CHAR_RELIEF ] =
-        uno::makeAny( text::FontRelief::NONE );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_RELIEF,
+        uno::makeAny( text::FontRelief::NONE )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_EMPHASIS ));
-    rOutMap[ PROP_CHAR_EMPHASIS ] =
-        uno::makeAny( text::FontEmphasis::NONE );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_EMPHASIS,
+        uno::makeAny( text::FontEmphasis::NONE )
+        ));
 //     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_RUBY_ADJUST ));
 //     rOutMap[ PROP_CHAR_RUBY_ADJUST ] =
 //         uno::makeAny( text::RubyAdjust_INDENT_BLOCK );
@@ -574,13 +610,17 @@
 
     // Asian (com.sun.star.style.CharacterPropertiesAsian)
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_ASIAN_CHAR_HEIGHT ));
-    rOutMap[ PROP_CHAR_ASIAN_CHAR_HEIGHT ] =
-        uno::makeAny( float( 12.0 ));
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_ASIAN_CHAR_HEIGHT,
+        uno::makeAny( float( 12.0 ))
+        ));
 
     // Complex Text Layout (com.sun.star.style.CharacterPropertiesComplex)
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHAR_COMPLEX_CHAR_HEIGHT ));
-    rOutMap[ PROP_CHAR_COMPLEX_CHAR_HEIGHT ] =
-        uno::makeAny( float( 12.0 ));
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHAR_COMPLEX_CHAR_HEIGHT,
+        uno::makeAny( float( 12.0 ))
+        ));
 }
 
 } //  namespace chart
--- chart2/source/tools/ErrorBar.cxx.orig	2006-12-27 15:30:30.000000000 +0100
+++ chart2/source/tools/ErrorBar.cxx	2006-12-27 15:33:54.000000000 +0100
@@ -127,23 +127,35 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_ERROR_BAR_STYLE ));
-    rOutMap[ PROP_ERROR_BAR_STYLE ] =
-        uno::makeAny( chart2::ErrorBarStyle_VARIANCE );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_ERROR_BAR_STYLE,
+        uno::makeAny( chart2::ErrorBarStyle_VARIANCE )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_ERROR_BAR_POS_ERROR ));
-    rOutMap[ PROP_ERROR_BAR_POS_ERROR ] =
-        uno::makeAny( 0.0 );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_ERROR_BAR_POS_ERROR,
+        uno::makeAny( 0.0 )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_ERROR_BAR_NEG_ERROR ));
-    rOutMap[ PROP_ERROR_BAR_NEG_ERROR ] =
-        uno::makeAny( 0.0 );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_ERROR_BAR_NEG_ERROR,
+        uno::makeAny( 0.0 )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_ERROR_BAR_WEIGHT ));
-    rOutMap[ PROP_ERROR_BAR_WEIGHT ] =
-        uno::makeAny( 1.0 );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_ERROR_BAR_WEIGHT,
+        uno::makeAny( 1.0 )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_ERROR_BAR_SHOW_POS_ERROR ));
-    rOutMap[ PROP_ERROR_BAR_SHOW_POS_ERROR ] =
-        uno::makeAny( sal_True );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_ERROR_BAR_SHOW_POS_ERROR,
+        uno::makeAny( sal_True )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_ERROR_BAR_SHOW_NEG_ERROR ));
-    rOutMap[ PROP_ERROR_BAR_SHOW_NEG_ERROR ] =
-        uno::makeAny( sal_True );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_ERROR_BAR_SHOW_NEG_ERROR,
+        uno::makeAny( sal_True )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/tools/FillProperties.cxx.orig	2006-12-27 15:35:27.000000000 +0100
+++ chart2/source/tools/FillProperties.cxx	2006-12-27 15:39:10.000000000 +0100
@@ -137,17 +137,25 @@
     bool bIncludeStyleProperties /* = false */ )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_FILL_STYLE ));
-    rOutMap[ PROP_FILL_STYLE ] =
-        uno::makeAny( drawing::FillStyle_SOLID );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_FILL_STYLE,
+        uno::makeAny( drawing::FillStyle_SOLID )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_FILL_COLOR ));
-    rOutMap[ PROP_FILL_COLOR ] =
-        uno::makeAny( sal_Int32( 0xe0eeee ) ); // azure2
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_FILL_COLOR,
+        uno::makeAny( sal_Int32( 0xe0eeee ) ) // azure2
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_FILL_TRANSPARENCE ));
-    rOutMap[ PROP_FILL_TRANSPARENCE ] =
-        uno::makeAny( sal_Int16( 0 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_FILL_TRANSPARENCE,
+        uno::makeAny( sal_Int16( 0 ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_FILL_TRANSPARENCY_STYLE ));
-    rOutMap[ PROP_FILL_TRANSPARENCY_STYLE ] =
-        uno::makeAny( chart2::TransparencyStyle_NONE );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_FILL_TRANSPARENCY_STYLE,
+        uno::makeAny( chart2::TransparencyStyle_NONE )
+        ));
 }
 
 } //  namespace chart
--- chart2/source/tools/LineProperties.cxx.orig	2006-12-27 15:40:19.000000000 +0100
+++ chart2/source/tools/LineProperties.cxx	2006-12-27 15:42:21.000000000 +0100
@@ -120,20 +120,30 @@
     bool bIncludeStyleProperties /* = false */ )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LINE_STYLE ));
-    rOutMap[ PROP_LINE_STYLE ] =
-        uno::makeAny( drawing::LineStyle_SOLID );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LINE_STYLE,
+        uno::makeAny( drawing::LineStyle_SOLID )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LINE_WIDTH ));
-    rOutMap[ PROP_LINE_WIDTH ] =
-        uno::makeAny( sal_Int32( 0 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LINE_WIDTH,
+        uno::makeAny( sal_Int32( 0 ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LINE_COLOR ));
-    rOutMap[ PROP_LINE_COLOR ] =
-        uno::makeAny( sal_Int32( 0x000000 ) );  // black
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LINE_COLOR,
+        uno::makeAny( sal_Int32( 0x000000 ) )  // black
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LINE_TRANSPARENCE ));
-    rOutMap[ PROP_LINE_TRANSPARENCE ] =
-        uno::makeAny( sal_Int16( 0 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LINE_TRANSPARENCE,
+        uno::makeAny( sal_Int16( 0 ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LINE_JOINT ));
-    rOutMap[ PROP_LINE_JOINT ] =
-        uno::makeAny( drawing::LineJoint_NONE );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LINE_JOINT,
+        uno::makeAny( drawing::LineJoint_NONE )
+        ));
 }
 
 } //  namespace chart
--- chart2/source/controller/chartapiwrapper/DataSeriesPointWrapper.cxx.orig	2006-12-27 15:45:04.000000000 +0100
+++ chart2/source/controller/chartapiwrapper/DataSeriesPointWrapper.cxx	2006-12-27 15:47:01.000000000 +0100
@@ -211,21 +211,31 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_SERIES_ATTACHED_AXIS ));
-    rOutMap[ PROP_SERIES_ATTACHED_AXIS ] =
-        uno::makeAny( sal_Int32( ::com::sun::star::chart::ChartAxisAssign::PRIMARY_Y ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_SERIES_ATTACHED_AXIS,
+        uno::makeAny( sal_Int32( ::com::sun::star::chart::ChartAxisAssign::PRIMARY_Y ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_SERIES_DATA_CAPTION ));
-    rOutMap[ PROP_SERIES_DATA_CAPTION ] =
-        uno::makeAny( sal_Int32( ::com::sun::star::chart::ChartDataCaption::NONE ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_SERIES_DATA_CAPTION,
+        uno::makeAny( sal_Int32( ::com::sun::star::chart::ChartDataCaption::NONE ) )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_SERIES_CONST_ERROR_LOW ));
-    rOutMap[ PROP_SERIES_CONST_ERROR_LOW ] =
-        uno::makeAny( double( 0.0 ));
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_SERIES_CONST_ERROR_LOW,
+        uno::makeAny( double( 0.0 ))
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_SERIES_CONST_ERROR_HIGH ));
-    rOutMap[ PROP_SERIES_CONST_ERROR_HIGH ] =
-        uno::makeAny( double( 0.0 ));
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_SERIES_CONST_ERROR_HIGH,
+        uno::makeAny( double( 0.0 ))
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_SERIES_MEAN_VALUE ));
-    rOutMap[ PROP_SERIES_MEAN_VALUE ] =
-        uno::makeAny( sal_False );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_SERIES_MEAN_VALUE,
+        uno::makeAny( sal_False )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/controller/chartapiwrapper/DiagramWrapper.cxx.orig	2006-12-27 15:48:25.000000000 +0100
+++ chart2/source/controller/chartapiwrapper/DiagramWrapper.cxx	2006-12-27 15:50:20.000000000 +0100
@@ -110,11 +110,15 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DIAGRAM_PERCENT_STACKED ));
-    rOutMap[ PROP_DIAGRAM_PERCENT_STACKED ] =
-        uno::makeAny( sal_False );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DIAGRAM_PERCENT_STACKED,
+        uno::makeAny( sal_False )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DIAGRAM_STACKED ));
-    rOutMap[ PROP_DIAGRAM_STACKED ] =
-        uno::makeAny( sal_False );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DIAGRAM_STACKED,
+        uno::makeAny( sal_False )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/controller/chartapiwrapper/LegendWrapper.cxx.orig	2006-12-27 15:51:44.000000000 +0100
+++ chart2/source/controller/chartapiwrapper/LegendWrapper.cxx	2006-12-27 15:52:14.000000000 +0100
@@ -111,8 +111,10 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LEGEND_ALIGNMENT ));
-    rOutMap[ PROP_LEGEND_ALIGNMENT ] =
-        uno::makeAny( ::com::sun::star::chart::ChartLegendPosition_RIGHT );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LEGEND_ALIGNMENT,
+        uno::makeAny( ::com::sun::star::chart::ChartLegendPosition_RIGHT )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/controller/chartapiwrapper/TitleWrapper.cxx.orig	2006-12-27 15:53:16.000000000 +0100
+++ chart2/source/controller/chartapiwrapper/TitleWrapper.cxx	2006-12-27 15:54:22.000000000 +0100
@@ -114,11 +114,15 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TITLE_TEXT_ROTATION ));
-    rOutMap[ PROP_TITLE_TEXT_ROTATION ] =
-        uno::makeAny( sal_Int32( 0 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TITLE_TEXT_ROTATION,
+        uno::makeAny( sal_Int32( 0 ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TITLE_TEXT_STACKED ));
-    rOutMap[ PROP_TITLE_TEXT_STACKED ] =
-        uno::makeAny( sal_Bool( sal_False ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TITLE_TEXT_STACKED,
+        uno::makeAny( sal_Bool( sal_False ) )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/main/Axis.cxx.orig	2006-12-27 16:09:43.000000000 +0100
+++ chart2/source/model/main/Axis.cxx	2006-12-27 16:13:02.000000000 +0100
@@ -196,43 +196,63 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_AXIS_DISPLAY_LABELS ));
-    rOutMap[ PROP_AXIS_DISPLAY_LABELS ] =
-        uno::makeAny( sal_Bool( sal_True ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_AXIS_DISPLAY_LABELS,
+        uno::makeAny( sal_Bool( sal_True ) )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_AXIS_TEXT_ROTATION ));
-    rOutMap[ PROP_AXIS_TEXT_ROTATION ] =
-        uno::makeAny( double( 0.0 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_AXIS_TEXT_ROTATION,
+        uno::makeAny( double( 0.0 ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_AXIS_TEXT_BREAK ));
-    rOutMap[ PROP_AXIS_TEXT_BREAK ] =
-        uno::makeAny( sal_Bool( sal_True ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_AXIS_TEXT_BREAK,
+        uno::makeAny( sal_Bool( sal_True ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_AXIS_TEXT_OVERLAP ));
-    rOutMap[ PROP_AXIS_TEXT_OVERLAP ] =
-        uno::makeAny( sal_Bool( sal_False ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_AXIS_TEXT_OVERLAP,
+        uno::makeAny( sal_Bool( sal_False ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_AXIS_TEXT_STACKED ));
-    rOutMap[ PROP_AXIS_TEXT_STACKED ] =
-        uno::makeAny( sal_Bool( sal_False ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_AXIS_TEXT_STACKED,
+        uno::makeAny( sal_Bool( sal_False ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_AXIS_TEXT_ARRANGE_ORDER ));
-    rOutMap[ PROP_AXIS_TEXT_ARRANGE_ORDER ] =
-        uno::makeAny( ::com::sun::star::chart::ChartAxisArrangeOrderType_AUTO );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_AXIS_TEXT_ARRANGE_ORDER,
+        uno::makeAny( ::com::sun::star::chart::ChartAxisArrangeOrderType_AUTO )
+        ));
     chart2::NumberFormat aFormat( C2U( "Standard" ),
                                   lang::Locale( C2U( "DE" ), C2U( "de" ), ::rtl::OUString()));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_AXIS_NUMBER_FORMAT ));
-    rOutMap[ PROP_AXIS_NUMBER_FORMAT ] =
-        uno::makeAny( aFormat );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_AXIS_NUMBER_FORMAT,
+        uno::makeAny( aFormat )
+        ));
 
     // todo: default is just for testing. should be void
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_AXIS_REFERENCE_DIAGRAM_SIZE ));
-    rOutMap[ PROP_AXIS_REFERENCE_DIAGRAM_SIZE ] =
-        uno::makeAny( awt::Size( 20000, 15000 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_AXIS_REFERENCE_DIAGRAM_SIZE,
+        uno::makeAny( awt::Size( 20000, 15000 ) )
+        ));
 
     // for Testing only!
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_AXIS_MAJOR_TICKMARKS ));
-    rOutMap[ PROP_AXIS_MAJOR_TICKMARKS ] =
-        uno::makeAny( sal_Int32( 2 /* CHAXIS_MARK_OUTER */ ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_AXIS_MAJOR_TICKMARKS,
+        uno::makeAny( sal_Int32( 2 /* CHAXIS_MARK_OUTER */ ) )
+        ));
     // for Testing only!
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_AXIS_MINOR_TICKMARKS ));
-    rOutMap[ PROP_AXIS_MINOR_TICKMARKS ] =
-        uno::makeAny( sal_Int32( 0 /* CHAXIS_MARK_NONE */ ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_AXIS_MINOR_TICKMARKS,
+        uno::makeAny( sal_Int32( 0 /* CHAXIS_MARK_NONE */ ) )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/main/DataPointProperties.cxx.orig	2006-12-27 16:14:21.000000000 +0100
+++ chart2/source/model/main/DataPointProperties.cxx	2006-12-27 16:22:13.000000000 +0100
@@ -286,63 +286,95 @@
     bool bIncludeStyleProperties /* = false */ )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_COLOR ));
-    rOutMap[ PROP_DATAPOINT_COLOR ] =
-        uno::makeAny( sal_Int32( 0x0000b8ff ));  // blue 7
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_COLOR,
+        uno::makeAny( sal_Int32( 0x0000b8ff ))  // blue 7
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_TRANSPARENCY ));
-    rOutMap[ PROP_DATAPOINT_TRANSPARENCY ] =
-        uno::makeAny( sal_Int16( 0 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_TRANSPARENCY,
+        uno::makeAny( sal_Int16( 0 ) )
+        ));
 
     //fill
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_FILL_STYLE ));
-    rOutMap[ PROP_DATAPOINT_FILL_STYLE ] =
-        uno::makeAny( drawing::FillStyle_SOLID );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_FILL_STYLE,
+        uno::makeAny( drawing::FillStyle_SOLID )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_TRANSPARENCY_STYLE ));
-    rOutMap[ PROP_DATAPOINT_TRANSPARENCY_STYLE ] =
-        uno::makeAny( chart2::TransparencyStyle_NONE );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_TRANSPARENCY_STYLE,
+        uno::makeAny( chart2::TransparencyStyle_NONE )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_TRANSPARENCY_GRADIENT ));
-    rOutMap[ PROP_DATAPOINT_TRANSPARENCY_GRADIENT ] =
-        uno::Any();//need this empty default value otherwise get a costly exception in DataSeries::GetDefaultValue
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_TRANSPARENCY_GRADIENT,
+        uno::Any()//need this empty default value otherwise get a costly exception in DataSeries::GetDefaultValue
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_GRADIENT ));
-    rOutMap[ PROP_DATAPOINT_GRADIENT ] =
-        uno::Any();//need this empty default value otherwise get a costly exception in DataSeries::GetDefaultValue
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_GRADIENT,
+        uno::Any()//need this empty default value otherwise get a costly exception in DataSeries::GetDefaultValue
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_HATCH ));
-    rOutMap[ PROP_DATAPOINT_HATCH ] =
-        uno::Any();//need this empty default value otherwise get a costly exception in DataSeries::GetDefaultValue
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_HATCH,
+        uno::Any()//need this empty default value otherwise get a costly exception in DataSeries::GetDefaultValue
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_FILL_BITMAP ));
-    rOutMap[ PROP_DATAPOINT_FILL_BITMAP ] =
-        uno::Any();//need this empty default value otherwise get a costly exception in DataSeries::GetDefaultValue
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_FILL_BITMAP,
+        uno::Any()//need this empty default value otherwise get a costly exception in DataSeries::GetDefaultValue
+        ));
 
     //border
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_BORDER_COLOR ));
-    rOutMap[ PROP_DATAPOINT_BORDER_COLOR ] =
-        uno::makeAny( sal_Int32( 0x00000000 ));  // black
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_BORDER_COLOR,
+        uno::makeAny( sal_Int32( 0x00000000 ))  // black
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_BORDER_STYLE ));
-    rOutMap[ PROP_DATAPOINT_BORDER_STYLE ] =
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_BORDER_STYLE,
 //         uno::makeAny( drawing::LineStyle_SOLID );
-        uno::makeAny( drawing::LineStyle_NONE );
+        uno::makeAny( drawing::LineStyle_NONE )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_BORDER_WIDTH ));
-    rOutMap[ PROP_DATAPOINT_BORDER_WIDTH ] =
-        uno::makeAny( sal_Int32( 0 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_BORDER_WIDTH,
+        uno::makeAny( sal_Int32( 0 ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_BORDER_DASH ));
-    rOutMap[ PROP_DATAPOINT_BORDER_DASH ] =
-        uno::Any();//need this empty default value otherwise get a costly exception in DataSeries::GetDefaultValue
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_BORDER_DASH,
+        uno::Any()//need this empty default value otherwise get a costly exception in DataSeries::GetDefaultValue
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_BORDER_TRANSPARENCY ));
-    rOutMap[ PROP_DATAPOINT_BORDER_TRANSPARENCY ] =
-        uno::makeAny( sal_Int16( 0 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_BORDER_TRANSPARENCY,
+        uno::makeAny( sal_Int16( 0 ) )
+        ));
 
     //line
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_LINE_STYLE ));
-    rOutMap[ PROP_DATAPOINT_LINE_STYLE ] =
-        uno::makeAny( drawing::LineStyle_SOLID );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_LINE_STYLE,
+        uno::makeAny( drawing::LineStyle_SOLID )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_LINE_WIDTH ));
-    rOutMap[ PROP_DATAPOINT_LINE_WIDTH ] =
-        uno::makeAny( sal_Int32( 0 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_LINE_WIDTH,
+        uno::makeAny( sal_Int32( 0 ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_LINE_DASH ));
-    rOutMap[ PROP_DATAPOINT_LINE_DASH ] =
-        uno::Any();//need this empty default value otherwise get a costly exception in DataSeries::GetDefaultValue
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_LINE_DASH,
+        uno::Any()//need this empty default value otherwise get a costly exception in DataSeries::GetDefaultValue
+        ));
 
 
     //others
@@ -352,33 +384,43 @@
     aSymbProp.aSize = awt::Size( 423, 423 ); // 12pt x 12pt
     aSymbProp.nFillColor = 0xee4000;         // OrangeRed2
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_SYMBOL_PROP ));
-    rOutMap[ PROP_DATAPOINT_SYMBOL_PROP ] =
-        uno::makeAny( aSymbProp );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_SYMBOL_PROP,
+        uno::makeAny( aSymbProp )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_OFFSET ));
-    rOutMap[ PROP_DATAPOINT_OFFSET ] =
-        uno::makeAny( double( 0.0 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_OFFSET,
+        uno::makeAny( double( 0.0 ) )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_LABEL ));
-    rOutMap[ PROP_DATAPOINT_LABEL ] =
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_LABEL,
         uno::makeAny( chart2::DataPointLabel(
                           sal_False, // ShowNumber
                           sal_False, // ShowNumberInPercent
                           sal_False, // ShowCategoryName
                           sal_False // ShowLegendSymbol
-                          ));
+                          ))
+        ));
 
     chart2::NumberFormat aFormat(
         C2U( "Standard" ),
         lang::Locale( C2U( "DE" ), C2U( "de" ), ::rtl::OUString()));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_NUMBER_FORMAT ));
-    rOutMap[ PROP_DATAPOINT_NUMBER_FORMAT ] =
-        uno::makeAny( aFormat );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_NUMBER_FORMAT,
+        uno::makeAny( aFormat )
+        ));
 
     // todo: default is just for testing. should be void
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATAPOINT_REFERENCE_DIAGRAM_SIZE ));
-    rOutMap[ PROP_DATAPOINT_REFERENCE_DIAGRAM_SIZE ] =
-        uno::makeAny( awt::Size( 20000, 15000 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DATAPOINT_REFERENCE_DIAGRAM_SIZE,
+        uno::makeAny( awt::Size( 20000, 15000 ) )
+        ));
 }
 
 } //  namespace chart
--- chart2/source/model/main/DataSeriesProperties.cxx.orig	2006-12-27 16:53:26.000000000 +0100
+++ chart2/source/model/main/DataSeriesProperties.cxx	2006-12-27 16:54:33.000000000 +0100
@@ -94,8 +94,10 @@
     bool bIncludeStyleProperties /* = false */ )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DATASERIES_DATA_POINT_STYLE ));
-    rOutMap[ PROP_DATASERIES_DATA_POINT_STYLE ] =
-        uno::makeAny( Reference< style::XStyle >() );
+    rOutMap.insert(helper::tPropertyValueMap::value_type(
+        PROP_DATASERIES_DATA_POINT_STYLE,
+        uno::makeAny( Reference< style::XStyle >() )
+        ));
 
     // PROP_DATASERIES_ATTRIBUTED_DATA_POINTS has no default
 
--- chart2/source/model/main/Diagram.cxx.orig	2006-12-27 16:57:08.000000000 +0100
+++ chart2/source/model/main/Diagram.cxx	2006-12-27 16:58:44.000000000 +0100
@@ -128,8 +128,10 @@
         /* aShadeMode */         drawing::ShadeMode_SMOOTH );
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_DIAGRAM_SCENE_PROPERTIES ));
-    rOutMap[ PROP_DIAGRAM_SCENE_PROPERTIES ] =
-        uno::makeAny( aSceneDescr );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_DIAGRAM_SCENE_PROPERTIES,
+        uno::makeAny( aSceneDescr )
+        ));
 }
 
 const Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/main/Grid.cxx.orig	2006-12-27 17:07:38.000000000 +0100
+++ chart2/source/model/main/Grid.cxx	2006-12-27 17:08:38.000000000 +0100
@@ -108,12 +108,16 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_GRID_SHOW ));
-    rOutMap[ PROP_GRID_SHOW ] =
-        uno::makeAny( sal_True );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_GRID_SHOW,
+        uno::makeAny( sal_True )
+        ));
 
     // override other defaults
-    rOutMap[ ::chart::LineProperties::PROP_LINE_COLOR ] =
-        uno::makeAny( sal_Int32( 0xb3b3b3) ); // gray30
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        ::chart::LineProperties::PROP_LINE_COLOR,
+        uno::makeAny( sal_Int32( 0xb3b3b3) ) // gray30
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/main/Legend.cxx.orig	2006-12-27 17:16:23.000000000 +0100
+++ chart2/source/model/main/Legend.cxx	2006-12-27 17:17:43.000000000 +0100
@@ -135,17 +135,23 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LEGEND_ANCHOR_POSITION ));
-    rOutMap[ PROP_LEGEND_ANCHOR_POSITION ] =
-        uno::makeAny( chart2::LegendPosition_LINE_END );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LEGEND_ANCHOR_POSITION,
+        uno::makeAny( chart2::LegendPosition_LINE_END )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LEGEND_SHOW ));
-    rOutMap[ PROP_LEGEND_SHOW ] =
-        uno::makeAny( sal_True );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LEGEND_SHOW,
+        uno::makeAny( sal_True )
+        ));
 
     // todo: default is just for testing. should be void
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LEGEND_REF_PAGE_SIZE ));
-    rOutMap[ PROP_LEGEND_REF_PAGE_SIZE ] =
-        uno::makeAny( awt::Size( 20000, 15000 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LEGEND_REF_PAGE_SIZE,
+        uno::makeAny( awt::Size( 20000, 15000 ) )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/main/PageBackground.cxx.orig	2006-12-27 17:18:36.000000000 +0100
+++ chart2/source/model/main/PageBackground.cxx	2006-12-27 17:19:12.000000000 +0100
@@ -74,8 +74,10 @@
 void lcl_AddDefaultsToMap(
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
-    rOutMap[ ::chart::FillProperties::PROP_FILL_STYLE ] =
-        uno::makeAny( drawing::FillStyle_NONE );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        ::chart::FillProperties::PROP_FILL_STYLE,
+        uno::makeAny( drawing::FillStyle_NONE )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/main/Title.cxx.orig	2006-12-27 17:20:15.000000000 +0100
+++ chart2/source/model/main/Title.cxx	2006-12-27 17:22:59.000000000 +0100
@@ -177,40 +177,60 @@
 {
     // ParagraphProperties
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TITLE_PARA_ADJUST ));
-    rOutMap[ PROP_TITLE_PARA_ADJUST ] =
-        uno::makeAny( ::com::sun::star::style::ParagraphAdjust_CENTER );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TITLE_PARA_ADJUST,
+        uno::makeAny( ::com::sun::star::style::ParagraphAdjust_CENTER )
+        ));
     // PROP_TITLE_PARA_LAST_LINE_ADJUST
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TITLE_PARA_LEFT_MARGIN ));
-    rOutMap[ PROP_TITLE_PARA_LEFT_MARGIN ] =
-        uno::makeAny( sal_Int32( 0 ));
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TITLE_PARA_LEFT_MARGIN,
+        uno::makeAny( sal_Int32( 0 ))
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TITLE_PARA_RIGHT_MARGIN ));
-    rOutMap[ PROP_TITLE_PARA_RIGHT_MARGIN ] =
-        uno::makeAny( sal_Int32( 0 ));
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TITLE_PARA_RIGHT_MARGIN,
+        uno::makeAny( sal_Int32( 0 ))
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TITLE_PARA_TOP_MARGIN ));
-    rOutMap[ PROP_TITLE_PARA_TOP_MARGIN ] =
-        uno::makeAny( sal_Int32( 0 ));
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TITLE_PARA_TOP_MARGIN,
+        uno::makeAny( sal_Int32( 0 ))
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TITLE_PARA_BOTTOM_MARGIN ));
-    rOutMap[ PROP_TITLE_PARA_BOTTOM_MARGIN ] =
-        uno::makeAny( sal_Int32( 0 ));
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TITLE_PARA_BOTTOM_MARGIN,
+        uno::makeAny( sal_Int32( 0 ))
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TITLE_PARA_IS_HYPHENATION ));
-    rOutMap[ PROP_TITLE_PARA_IS_HYPHENATION ] =
-        uno::makeAny( sal_True );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TITLE_PARA_IS_HYPHENATION,
+        uno::makeAny( sal_True )
+        ));
 
     // own properties
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TITLE_TEXT_ROTATION ));
-    rOutMap[ PROP_TITLE_TEXT_ROTATION ] =
-        uno::makeAny( double( 0.0 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TITLE_TEXT_ROTATION,
+        uno::makeAny( double( 0.0 ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TITLE_TEXT_STACKED ));
-    rOutMap[ PROP_TITLE_TEXT_STACKED ] =
-        uno::makeAny( sal_Bool( sal_False ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TITLE_TEXT_STACKED,
+        uno::makeAny( sal_Bool( sal_False ) )
+        ));
 
     // override other defaults
-    rOutMap[ ::chart::FillProperties::PROP_FILL_STYLE ] =
-        uno::makeAny( drawing::FillStyle_NONE );
-    rOutMap[ ::chart::LineProperties::PROP_LINE_STYLE ] =
-        uno::makeAny( drawing::LineStyle_NONE );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        ::chart::FillProperties::PROP_FILL_STYLE,
+        uno::makeAny( drawing::FillStyle_NONE )
+        ));
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        ::chart::LineProperties::PROP_LINE_STYLE,
+        uno::makeAny( drawing::LineStyle_NONE )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/main/Wall.cxx.orig	2006-12-27 17:25:01.000000000 +0100
+++ chart2/source/model/main/Wall.cxx	2006-12-27 17:25:33.000000000 +0100
@@ -97,8 +97,10 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     // override other defaults
-    rOutMap[ ::chart::LineProperties::PROP_LINE_STYLE ] =
-        uno::makeAny( drawing::LineStyle_NONE );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        ::chart::LineProperties::PROP_LINE_STYLE,
+        uno::makeAny( drawing::LineStyle_NONE )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/template/AreaChartTypeTemplate.cxx.orig	2006-12-27 17:26:35.000000000 +0100
+++ chart2/source/model/template/AreaChartTypeTemplate.cxx	2006-12-27 17:33:51.000000000 +0100
@@ -84,8 +84,10 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_AREA_TEMPLATE_DIMENSION ));
-    rOutMap[ PROP_AREA_TEMPLATE_DIMENSION ] =
-        uno::makeAny( sal_Int32( 2 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_AREA_TEMPLATE_DIMENSION,
+        uno::makeAny( sal_Int32( 2 ) )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/template/BarChartTypeTemplate.cxx.orig	2006-12-27 17:34:48.000000000 +0100
+++ chart2/source/model/template/BarChartTypeTemplate.cxx	2006-12-27 17:36:10.000000000 +0100
@@ -91,11 +91,15 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_BAR_TEMPLATE_DIMENSION ));
-    rOutMap[ PROP_BAR_TEMPLATE_DIMENSION ] =
-        uno::makeAny( sal_Int32( 2 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_BAR_TEMPLATE_DIMENSION,
+        uno::makeAny( sal_Int32( 2 ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_BAR_TEMPLATE_SOLID_TYPE ));
-    rOutMap[ PROP_BAR_TEMPLATE_SOLID_TYPE ] =
-        uno::makeAny( ::com::sun::star::chart::ChartSolidType::RECTANGULAR_SOLID );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_BAR_TEMPLATE_SOLID_TYPE,
+        uno::makeAny( ::com::sun::star::chart::ChartSolidType::RECTANGULAR_SOLID )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/template/ChartType.cxx.orig	2006-12-27 17:36:34.000000000 +0100
+++ chart2/source/model/template/ChartType.cxx	2006-12-27 17:37:01.000000000 +0100
@@ -77,8 +77,10 @@
 {
     // must match default in CTOR!
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_CHARTTYPE_DIMENSION ));
-    rOutMap[ PROP_CHARTTYPE_DIMENSION ] =
-        uno::makeAny( sal_Int32( 2 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_CHARTTYPE_DIMENSION,
+        uno::makeAny( sal_Int32( 2 ) )
+        ));
 }
 
 const Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/template/ChartTypeManager.cxx.orig	2006-12-27 17:37:52.000000000 +0100
+++ chart2/source/model/template/ChartTypeManager.cxx	2006-12-27 17:38:52.000000000 +0100
@@ -153,25 +153,33 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TEMPLATE_MANAGER_CHART_TEMPLATE_NAME ));
-    rOutMap[ PROP_TEMPLATE_MANAGER_CHART_TEMPLATE_NAME ] =
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TEMPLATE_MANAGER_CHART_TEMPLATE_NAME,
         uno::makeAny(
-            ::rtl::OUString( C2U( "com.sun.star.chart2.template.Column" )));
+            ::rtl::OUString( C2U( "com.sun.star.chart2.template.Column" )))
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TEMPLATE_MANAGER_SOLID_TYPE ));
-    rOutMap[ PROP_TEMPLATE_MANAGER_SOLID_TYPE ] =
-        uno::makeAny( ::com::sun::star::chart::ChartSolidType::RECTANGULAR_SOLID );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TEMPLATE_MANAGER_SOLID_TYPE,
+        uno::makeAny( ::com::sun::star::chart::ChartSolidType::RECTANGULAR_SOLID )
+        ));
 
 //     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TEMPLATE_MANAGER_NUMBER_OF_LINES ));
 //     rOutMap[ PROP_TEMPLATE_MANAGER_NUMBER_OF_LINES ] =
 //         uno::makeAny( sal_Int32( 0 ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TEMPLATE_MANAGER_SPLINE_ORDER ));
-    rOutMap[ PROP_TEMPLATE_MANAGER_SPLINE_ORDER ] =
-        uno::makeAny( sal_Int32( 3 ));
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TEMPLATE_MANAGER_SPLINE_ORDER,
+        uno::makeAny( sal_Int32( 3 ))
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_TEMPLATE_MANAGER_SPLINE_RESOLUTION ));
-    rOutMap[ PROP_TEMPLATE_MANAGER_SPLINE_RESOLUTION ] =
-        uno::makeAny( sal_Int32( 20 ));
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_TEMPLATE_MANAGER_SPLINE_RESOLUTION,
+        uno::makeAny( sal_Int32( 20 ))
+        ));
 }
 
 const Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/template/ColumnLineChartTypeTemplate.cxx.orig	2006-12-27 17:40:28.000000000 +0100
+++ chart2/source/model/template/ColumnLineChartTypeTemplate.cxx	2006-12-27 17:40:50.000000000 +0100
@@ -87,8 +87,10 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_COL_LINE_NUMBER_OF_LINES ));
-    rOutMap[ PROP_COL_LINE_NUMBER_OF_LINES ] =
-        uno::makeAny( sal_Int32( 1 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_COL_LINE_NUMBER_OF_LINES,
+        uno::makeAny( sal_Int32( 1 ) )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/template/LineChartType.cxx.orig	2006-12-27 17:41:29.000000000 +0100
+++ chart2/source/model/template/LineChartType.cxx	2006-12-27 17:42:11.000000000 +0100
@@ -103,22 +103,30 @@
 {
     // must match default in CTOR!
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LINECHARTTYPE_DIMENSION ));
-    rOutMap[ PROP_LINECHARTTYPE_DIMENSION ] =
-        uno::makeAny( sal_Int32( 2 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LINECHARTTYPE_DIMENSION,
+        uno::makeAny( sal_Int32( 2 ) )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LINECHARTTYPE_CURVE_STYLE ));
-    rOutMap[ PROP_LINECHARTTYPE_CURVE_STYLE ] =
-        uno::makeAny( chart2::CurveStyle_LINES );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LINECHARTTYPE_CURVE_STYLE,
+        uno::makeAny( chart2::CurveStyle_LINES )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LINECHARTTYPE_CURVE_RESOLUTION ));
-    rOutMap[ PROP_LINECHARTTYPE_CURVE_RESOLUTION ] =
-        uno::makeAny( sal_Int32( 20 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LINECHARTTYPE_CURVE_RESOLUTION,
+        uno::makeAny( sal_Int32( 20 ) )
+        ));
 
     // todo: check whether order 3 means polygons of order 3 or 2. (see
     // http://www.people.nnov.ru/fractal/Splines/Basis.htm )
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LINECHARTTYPE_SPLINE_ORDER ));
-    rOutMap[ PROP_LINECHARTTYPE_SPLINE_ORDER ] =
-        uno::makeAny( sal_Int32( 3 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LINECHARTTYPE_SPLINE_ORDER,
+        uno::makeAny( sal_Int32( 3 ) )
+        ));
 }
 
 const Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/template/LineChartTypeTemplate.cxx.orig	2006-12-27 17:42:44.000000000 +0100
+++ chart2/source/model/template/LineChartTypeTemplate.cxx	2006-12-27 17:43:12.000000000 +0100
@@ -104,14 +104,18 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LINECHARTTYPE_TEMPLATE_CURVE_RESOLUTION ));
-    rOutMap[ PROP_LINECHARTTYPE_TEMPLATE_CURVE_RESOLUTION ] =
-        uno::makeAny( sal_Int32( 20 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LINECHARTTYPE_TEMPLATE_CURVE_RESOLUTION,
+        uno::makeAny( sal_Int32( 20 ) )
+        ));
 
     // todo: check whether order 3 means polygons of order 3 or 2. (see
     // http://www.people.nnov.ru/fractal/Splines/Basis.htm )
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_LINECHARTTYPE_TEMPLATE_SPLINE_ORDER ));
-    rOutMap[ PROP_LINECHARTTYPE_TEMPLATE_SPLINE_ORDER ] =
-        uno::makeAny( sal_Int32( 3 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_LINECHARTTYPE_TEMPLATE_SPLINE_ORDER,
+        uno::makeAny( sal_Int32( 3 ) )
+        ));
 }
 
 const Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/template/PieChartType.cxx.orig	2006-12-27 17:44:13.000000000 +0100
+++ chart2/source/model/template/PieChartType.cxx	2006-12-27 17:44:40.000000000 +0100
@@ -85,12 +85,16 @@
 {
     // must match default in CTOR!
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_PIECHARTTYPE_DIMENSION ));
-    rOutMap[ PROP_PIECHARTTYPE_DIMENSION ] =
-        uno::makeAny( sal_Int32( 2 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_PIECHARTTYPE_DIMENSION,
+        uno::makeAny( sal_Int32( 2 ) )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_PIECHARTTYPE_OFFSET ));
-    rOutMap[ PROP_PIECHARTTYPE_OFFSET ] =
-        uno::makeAny( sal_Int32( 0 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_PIECHARTTYPE_OFFSET,
+        uno::makeAny( sal_Int32( 0 ) )
+        ));
 }
 
 const Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/template/PieChartTypeTemplate.cxx.orig	2006-12-27 17:45:11.000000000 +0100
+++ chart2/source/model/template/PieChartTypeTemplate.cxx	2006-12-27 17:46:02.000000000 +0100
@@ -109,17 +109,25 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_PIE_TEMPLATE_OFFSET_MODE ));
-    rOutMap[ PROP_PIE_TEMPLATE_OFFSET_MODE ] =
-        uno::makeAny( chart2::PieChartOffsetMode_NONE );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_PIE_TEMPLATE_OFFSET_MODE,
+        uno::makeAny( chart2::PieChartOffsetMode_NONE )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_PIE_TEMPLATE_DEFAULT_OFFSET ));
-    rOutMap[ PROP_PIE_TEMPLATE_DEFAULT_OFFSET ] =
-        uno::makeAny( sal_Int32( 10 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_PIE_TEMPLATE_DEFAULT_OFFSET,
+        uno::makeAny( sal_Int32( 10 ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_PIE_TEMPLATE_DIMENSION ));
-    rOutMap[ PROP_PIE_TEMPLATE_DIMENSION ] =
-        uno::makeAny( sal_Int32( 2 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_PIE_TEMPLATE_DIMENSION,
+        uno::makeAny( sal_Int32( 2 ) )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_PIE_TEMPLATE_USE_RINGS ));
-    rOutMap[ PROP_PIE_TEMPLATE_USE_RINGS ] =
-        uno::makeAny( sal_False );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_PIE_TEMPLATE_USE_RINGS,
+        uno::makeAny( sal_False )
+        ));
 }
 
 const uno::Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/template/ScatterChartType.cxx.orig	2006-12-27 17:46:29.000000000 +0100
+++ chart2/source/model/template/ScatterChartType.cxx	2006-12-27 17:47:04.000000000 +0100
@@ -103,22 +103,30 @@
 {
     // must match default in CTOR!
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_SCATTERCHARTTYPE_DIMENSION ));
-    rOutMap[ PROP_SCATTERCHARTTYPE_DIMENSION ] =
-        uno::makeAny( sal_Int32( 2 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_SCATTERCHARTTYPE_DIMENSION,
+        uno::makeAny( sal_Int32( 2 ) )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_SCATTERCHARTTYPE_CURVE_STYLE ));
-    rOutMap[ PROP_SCATTERCHARTTYPE_CURVE_STYLE ] =
-        uno::makeAny( chart2::CurveStyle_LINES );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_SCATTERCHARTTYPE_CURVE_STYLE,
+        uno::makeAny( chart2::CurveStyle_LINES )
+        ));
 
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_SCATTERCHARTTYPE_CURVE_RESOLUTION ));
-    rOutMap[ PROP_SCATTERCHARTTYPE_CURVE_RESOLUTION ] =
-        uno::makeAny( sal_Int32( 20 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_SCATTERCHARTTYPE_CURVE_RESOLUTION,
+        uno::makeAny( sal_Int32( 20 ) )
+        ));
 
     // todo: check whether order 3 means polygons of order 3 or 2. (see
     // http://www.people.nnov.ru/fractal/Splines/Basis.htm )
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_SCATTERCHARTTYPE_SPLINE_ORDER ));
-    rOutMap[ PROP_SCATTERCHARTTYPE_SPLINE_ORDER ] =
-        uno::makeAny( sal_Int32( 3 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_SCATTERCHARTTYPE_SPLINE_ORDER,
+        uno::makeAny( sal_Int32( 3 ) )
+        ));
 }
 
 const Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/template/ScatterChartTypeTemplate.cxx.orig	2006-12-27 17:47:35.000000000 +0100
+++ chart2/source/model/template/ScatterChartTypeTemplate.cxx	2006-12-27 17:48:04.000000000 +0100
@@ -104,14 +104,18 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_SCATTERCHARTTYPE_TEMPLATE_CURVE_RESOLUTION ));
-    rOutMap[ PROP_SCATTERCHARTTYPE_TEMPLATE_CURVE_RESOLUTION ] =
-        uno::makeAny( sal_Int32( 20 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_SCATTERCHARTTYPE_TEMPLATE_CURVE_RESOLUTION,
+        uno::makeAny( sal_Int32( 20 ) )
+        ));
 
     // todo: check whether order 3 means polygons of order 3 or 2. (see
     // http://www.people.nnov.ru/fractal/Splines/Basis.htm )
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_SCATTERCHARTTYPE_TEMPLATE_SPLINE_ORDER ));
-    rOutMap[ PROP_SCATTERCHARTTYPE_TEMPLATE_SPLINE_ORDER ] =
-        uno::makeAny( sal_Int32( 3 ) );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_SCATTERCHARTTYPE_TEMPLATE_SPLINE_ORDER,
+        uno::makeAny( sal_Int32( 3 ) )
+        ));
 }
 
 const Sequence< Property > & lcl_GetPropertySequence()
--- chart2/source/model/template/StockChartTypeTemplate.cxx.orig	2006-12-27 17:48:53.000000000 +0100
+++ chart2/source/model/template/StockChartTypeTemplate.cxx	2006-12-27 17:49:25.000000000 +0100
@@ -113,14 +113,20 @@
     ::chart::helper::tPropertyValueMap & rOutMap )
 {
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_STOCKCHARTTYPE_TEMPLATE_VOLUME ));
-    rOutMap[ PROP_STOCKCHARTTYPE_TEMPLATE_VOLUME ] =
-        uno::makeAny( sal_False );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_STOCKCHARTTYPE_TEMPLATE_VOLUME,
+        uno::makeAny( sal_False )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_STOCKCHARTTYPE_TEMPLATE_OPEN ));
-    rOutMap[ PROP_STOCKCHARTTYPE_TEMPLATE_OPEN ] =
-        uno::makeAny( sal_False );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_STOCKCHARTTYPE_TEMPLATE_OPEN,
+        uno::makeAny( sal_False )
+        ));
     OSL_ASSERT( rOutMap.end() == rOutMap.find( PROP_STOCKCHARTTYPE_TEMPLATE_LOW_HIGH ));
-    rOutMap[ PROP_STOCKCHARTTYPE_TEMPLATE_LOW_HIGH ] =
-        uno::makeAny( sal_True );
+    rOutMap.insert(::chart::helper::tPropertyValueMap::value_type(
+        PROP_STOCKCHARTTYPE_TEMPLATE_LOW_HIGH,
+        uno::makeAny( sal_True )
+        ));
 }
 
 const Sequence< Property > & lcl_GetPropertySequence()
--- sc/inc/postit.hxx.orig	2006-12-28 01:31:34.000000000 +0100
+++ sc/inc/postit.hxx	2006-12-28 01:31:44.000000000 +0100
@@ -38,8 +38,6 @@
 #ifndef SC_POSTIT_HXX
 #define SC_POSTIT_HXX
 
-#include <boost/shared_ptr.hpp>
-
 #include <svtools/pathoptions.hxx>
 #include <svtools/useroptions.hxx>
 
@@ -71,6 +69,8 @@
 #include <com/sun/star/drawing/XShape.hpp>
 #endif
 
+#include <boost/shared_ptr.hpp>
+
 //	indicative text length for a note object
 #define SC_NOTE_SMALLTEXT	100
 
--- sc/source/filter/html/htmlpars.cxx.orig	2006-12-28 01:49:56.000000000 +0100
+++ sc/source/filter/html/htmlpars.cxx	2006-12-28 01:50:04.000000000 +0100
@@ -36,8 +36,6 @@
 // MARKER(update_precomp.py): autogen include statement, do not remove
 #include "precompiled_sc.hxx"
 
-#include <boost/shared_ptr.hpp>
-
 #define SC_HTMLPARS_CXX
 #include "scitems.hxx"
 #include <svx/eeitem.hxx>
@@ -85,6 +83,8 @@
 #include "document.hxx"
 #include "rangelst.hxx"
 
+#include <boost/shared_ptr.hpp>
+
 
 SV_IMPL_VARARR_SORT( ScHTMLColOffset, ULONG );
 
--- sd/source/ui/slidesorter/inc/controller/SlideSorterController.hxx.orig	2006-12-28 12:50:04.000000000 +0100
+++ sd/source/ui/slidesorter/inc/controller/SlideSorterController.hxx	2006-12-28 13:03:30.000000000 +0100
@@ -36,6 +36,7 @@
 #ifndef SD_SLIDESORTER_SLIDE_SORTER_CONTROLLER_HXX
 #define SD_SLIDESORTER_SLIDE_SORTER_CONTROLLER_HXX
 
+#include <memory>
 #include "model/SlsSharedPageDescriptor.hxx"
 #include "ViewShell.hxx"
 
@@ -51,7 +52,6 @@
 #ifndef _SV_GEN_HXX
 #include <tools/gen.hxx>
 #endif
-#include <memory>
 #include <comphelper/implementationreference.hxx>
 
 class TabBar;
--- sd/source/ui/slidesorter/inc/controller/SlsFocusManager.hxx.orig	2006-12-28 13:07:29.000000000 +0100
+++ sd/source/ui/slidesorter/inc/controller/SlsFocusManager.hxx	2006-12-28 13:07:38.000000000 +0100
@@ -35,13 +35,13 @@
 #ifndef SD_SLIDESORTER_FOCUS_MANAGER_HXX
 #define SD_SLIDESORTER_FOCUS_MANAGER_HXX
 
+#include <vector>
 #include <model/SlsSharedPageDescriptor.hxx>
 
 #include <sal/types.h>
 #ifndef _LINK_HXX
 #include <tools/link.hxx>
 #endif
-#include <vector>
 
 namespace sd { namespace slidesorter { namespace controller {
 
--- sd/source/ui/slidesorter/controller/SlsPageObjectFactory.cxx.orig	2006-12-28 13:11:40.000000000 +0100
+++ sd/source/ui/slidesorter/controller/SlsPageObjectFactory.cxx	2006-12-28 13:11:46.000000000 +0100
@@ -36,12 +36,12 @@
 // MARKER(update_precomp.py): autogen include statement, do not remove
 #include "precompiled_sd.hxx"
 
-#include "controller/SlsPageObjectFactory.hxx"
-
 #include "view/SlsPageObject.hxx"
 #include "view/SlsPageObjectViewContact.hxx"
 #include "view/SlsPageObjectViewObjectContact.hxx"
 
+#include "controller/SlsPageObjectFactory.hxx"
+
 #include "sdpage.hxx"
 
 
--- sd/source/ui/slidesorter/inc/controller/SlsPageSelector.hxx.orig	2006-12-28 13:14:01.000000000 +0100
+++ sd/source/ui/slidesorter/inc/controller/SlsPageSelector.hxx	2006-12-28 13:14:08.000000000 +0100
@@ -35,11 +35,11 @@
 #ifndef SD_SLIDESORTER_PAGE_SELECTOR_HXX
 #define SD_SLIDESORTER_PAGE_SELECTOR_HXX
 
-#include "model/SlsSharedPageDescriptor.hxx"
-
 #include <set>
 #include <memory>
 
+#include "model/SlsSharedPageDescriptor.hxx"
+
 class SdPage;
 
 namespace sd { namespace slidesorter { namespace model {
--- sd/source/ui/slidesorter/inc/view/SlsViewOverlay.hxx.orig	2006-12-28 13:21:53.000000000 +0100
+++ sd/source/ui/slidesorter/inc/view/SlsViewOverlay.hxx	2006-12-28 13:22:02.000000000 +0100
@@ -36,11 +36,11 @@
 #ifndef SD_SLIDESORTER_VIEW_OVERLAY_HXX
 #define SD_SLIDESORTER_VIEW_OVERLAY_HXX
 
+#include <vector>
 #include "model/SlsSharedPageDescriptor.hxx"
 
 #include <osl/mutex.hxx>
 #include <tools/gen.hxx>
-#include <vector>
 #include <boost/weak_ptr.hpp>
 
 class OutputDevice;
