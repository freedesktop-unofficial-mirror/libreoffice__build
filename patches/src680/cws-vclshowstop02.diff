Index: framework/source/services/sessionlistener.cxx
===================================================================
RCS file: /cvs/framework/framework/source/services/sessionlistener.cxx,v
retrieving revision 1.3
retrieving revision 1.3.8.1
diff -u -p -r1.3 -r1.3.8.1
--- framework/source/services/sessionlistener.cxx	29 Mar 2005 14:55:20 -0000	1.3
+++ framework/source/services/sessionlistener.cxx	7 Apr 2005 17:48:06 -0000	1.3.8.1
@@ -58,7 +58,6 @@
  *
  *
  ************************************************************************/
-
 //_______________________________________________
 // my own includes
 
@@ -318,7 +317,10 @@ void SAL_CALL SessionListener::doSave( s
             if (m_rSessionManager.is() && !bDispatched)
                 m_rSessionManager->saveDone(this);
         }
-    }    
+    }
+    // we don't have anything to do so tell the session manager we're done
+    else if( m_rSessionManager.is() )
+        m_rSessionManager->saveDone( this );
 }
 
    
Index: vcl/source/app/session.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/app/session.cxx,v
retrieving revision 1.3
retrieving revision 1.3.14.1
diff -u -p -r1.3 -r1.3.14.1
--- vcl/source/app/session.cxx	29 Mar 2005 14:52:06 -0000	1.3
+++ vcl/source/app/session.cxx	7 Apr 2005 17:47:12 -0000	1.3.14.1
@@ -58,7 +58,6 @@
  *
  *
  ************************************************************************/
-
 #ifndef _SV_SVAPP_HXX
 #include <svapp.hxx>
 #endif
@@ -201,6 +200,15 @@ void VCLSession::callSaveRequested( bool
         // without session we assume UI is always possible,
         // so it was reqeusted and granted
         m_bInteractionRequested = m_bInteractionGranted = m_pSession ? false : true;
+        
+        // answer the session manager even if no listeners available anymore
+        DBG_ASSERT( ! aListeners.empty(), "saveRequested but no listeners !" );
+        if( aListeners.empty() )
+        {
+            if( m_pSession )
+                m_pSession->saveDone();
+            return;
+        }
     }
 
     ULONG nAcquireCount = Application::ReleaseSolarMutex();
@@ -215,17 +223,26 @@ void VCLSession::callInteractionGranted(
     {
         osl::MutexGuard aGuard( m_aMutex );
         // copy listener list since calling a listener may remove it.
-        aListeners = m_aListeners;
+        for( std::list< Listener >::const_iterator it = m_aListeners.begin(); it != m_aListeners.end(); ++it )
+            if( it->m_bInteractionRequested )
+                aListeners.push_back( *it );
 
         m_bInteractionGranted = bInteractionGranted;
+
+        // answer the session manager even if no listeners available anymore
+        DBG_ASSERT( ! aListeners.empty(), "interactionGranted but no listeners !" );
+        if( aListeners.empty() )
+        {
+            if( m_pSession )
+                m_pSession->interactionDone();
+            return;
+        }
     }
 
     ULONG nAcquireCount = Application::ReleaseSolarMutex();
     for( std::list< Listener >::const_iterator it = aListeners.begin(); it != aListeners.end(); ++it )
-    {
-        if( it->m_bInteractionRequested )
-            it->m_xListener->approveInteraction( bInteractionGranted );
-    }
+        it->m_xListener->approveInteraction( bInteractionGranted );
+    
     Application::AcquireSolarMutex( nAcquireCount );
 }
 
