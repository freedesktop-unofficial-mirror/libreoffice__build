Index: bridges/source/cpp_uno/msvc_win32_intel/dllinit.cxx
===================================================================
RCS file: bridges/source/cpp_uno/msvc_win32_intel/dllinit.cxx
diff -N bridges/source/cpp_uno/msvc_win32_intel/dllinit.cxx
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ bridges/source/cpp_uno/msvc_win32_intel/dllinit.cxx	20 Jun 2007 10:29:46 -0000	1.1.2.1
@@ -0,0 +1,66 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *    MA  02111-1307  USA
+ *
+ ************************************************************************/
+
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_bridges.hxx"
+
+
+#pragma warning(push,1) // disable warnings within system headers
+#include <windows.h>
+#pragma warning(pop)
+
+ 
+void dso_init(void);
+void dso_exit(void);
+
+
+extern "C" BOOL WINAPI DllMain(HMODULE hModule, DWORD dwReason, LPVOID lpvReserved)
+{
+    switch(dwReason) {
+    case DLL_PROCESS_ATTACH:
+        DisableThreadLibraryCalls(hModule);
+
+        dso_init();
+        break;
+
+    case DLL_PROCESS_DETACH:
+        if (!lpvReserved)
+            dso_exit();
+        break;
+    }
+
+    return TRUE;
+}
Index: bridges/source/cpp_uno/msvc_win32_intel/makefile.mk
===================================================================
RCS file: /cvs/udk/bridges/source/cpp_uno/msvc_win32_intel/makefile.mk,v
retrieving revision 1.13
retrieving revision 1.13.10.1
diff -u -p -u -p -r1.13 -r1.13.10.1
--- bridges/source/cpp_uno/msvc_win32_intel/makefile.mk	26 Mar 2007 13:15:33 -0000	1.13
+++ bridges/source/cpp_uno/msvc_win32_intel/makefile.mk	20 Jun 2007 10:29:46 -0000	1.13.10.1
@@ -57,9 +57,11 @@ CFLAGS += -DLEAK_STATIC_DATA
 .ENDIF
 .ENDIF
 
+
 SLOFILES= \
 	$(SLO)$/cpp2uno.obj		\
 	$(SLO)$/uno2cpp.obj		\
+	$(SLO)$/dllinit.obj		\
 	$(SLO)$/except.obj
 
 NOOPTFILES= \
Index: bridges/source/cpp_uno/shared/component.cxx
===================================================================
RCS file: /cvs/udk/bridges/source/cpp_uno/shared/component.cxx,v
retrieving revision 1.6
retrieving revision 1.6.4.1
diff -u -p -u -p -r1.6 -r1.6.4.1
--- bridges/source/cpp_uno/shared/component.cxx	9 May 2007 13:24:21 -0000	1.6
+++ bridges/source/cpp_uno/shared/component.cxx	6 Jun 2007 07:38:41 -0000	1.6.4.1
@@ -107,12 +107,12 @@ const ::rtl::OUString & SAL_CALL cppu_cp
 
 extern "C" {
 
-static void s_stub_computeObjectIdentifier(va_list param)
+static void s_stub_computeObjectIdentifier(va_list * pParam)
     SAL_THROW( () )
 {
-	uno_ExtEnvironment  * pEnv       = va_arg(param, uno_ExtEnvironment *);
-	rtl_uString        ** ppOId      = va_arg(param, rtl_uString **);
-	void                * pInterface = va_arg(param, void *);
+	uno_ExtEnvironment  * pEnv       = va_arg(*pParam, uno_ExtEnvironment *);
+	rtl_uString        ** ppOId      = va_arg(*pParam, rtl_uString **);
+	void                * pInterface = va_arg(*pParam, void *);
 
 
     OSL_ENSURE( pEnv && ppOId && pInterface, "### null ptr!" );
@@ -168,11 +168,11 @@ static void SAL_CALL computeObjectIdenti
 	uno_Environment_invoke(&pExtEnv->aBase, s_stub_computeObjectIdentifier, pExtEnv, ppOId, pInterface);
 }
 
-static void s_stub_acquireInterface(va_list param)
+static void s_stub_acquireInterface(va_list * pParam)
     SAL_THROW( () )
 {
-	/*uno_ExtEnvironment * pExtEnv = */va_arg(param, uno_ExtEnvironment *);
-	void               * pCppI   = va_arg(param, void *);
+	/*uno_ExtEnvironment * pExtEnv = */va_arg(*pParam, uno_ExtEnvironment *);
+	void               * pCppI   = va_arg(*pParam, void *);
 
     reinterpret_cast< ::com::sun::star::uno::XInterface * >( pCppI )->acquire();
 }
@@ -183,11 +183,11 @@ static void SAL_CALL acquireInterface( u
 	uno_Environment_invoke(&pExtEnv->aBase, s_stub_acquireInterface, pExtEnv, pCppI);
 }
 
-static void s_stub_releaseInterface(va_list param)
+static void s_stub_releaseInterface(va_list * pParam)
     SAL_THROW( () )
 {
-	/*uno_ExtEnvironment * pExtEnv = */va_arg(param, uno_ExtEnvironment *);
-	void               * pCppI   = va_arg(param, void *);
+	/*uno_ExtEnvironment * pExtEnv = */va_arg(*pParam, uno_ExtEnvironment *);
+	void               * pCppI   = va_arg(*pParam, void *);
 
     reinterpret_cast< ::com::sun::star::uno::XInterface * >( pCppI )->release();
 }
Index: bridges/source/cpp_uno/shared/cppinterfaceproxy.cxx
===================================================================
RCS file: /cvs/udk/bridges/source/cpp_uno/shared/cppinterfaceproxy.cxx,v
retrieving revision 1.6
retrieving revision 1.6.50.1
diff -u -p -u -p -r1.6 -r1.6.50.1
--- bridges/source/cpp_uno/shared/cppinterfaceproxy.cxx	16 Sep 2006 15:56:12 -0000	1.6
+++ bridges/source/cpp_uno/shared/cppinterfaceproxy.cxx	20 Jun 2007 10:29:46 -0000	1.6.50.1
@@ -33,6 +33,7 @@
  *
  ************************************************************************/
 
+
 // MARKER(update_precomp.py): autogen include statement, do not remove
 #include "precompiled_bridges.hxx"
 
@@ -54,12 +55,39 @@
 #include <cstddef>
 #include <new>
 
+
+static bridges::cpp_uno::shared::VtableFactory * pInstance;
+
+#ifdef __GNUG__
+void dso_init(void) __attribute__((constructor));
+void dso_exit(void) __attribute__((destructor));
+#endif
+
+void dso_init(void) {
+    if (!pInstance)
+        pInstance = new bridges::cpp_uno::shared::VtableFactory();
+}
+
+void dso_exit(void) {
+    if (pInstance) 
+    {
+        delete pInstance;
+        pInstance = NULL;
+    }
+}
+
+#ifdef __SUNPRO_CC
+# pragma init(dso_init)
+# pragma fini(dso_exit)
+#endif
+
+
+
 namespace {
 
 struct InitVtableFactory {
     bridges::cpp_uno::shared::VtableFactory * operator()() {
-        static bridges::cpp_uno::shared::VtableFactory instance;
-        return &instance;
+        return pInstance;
     }
 };
 
Index: bridges/source/cpp_uno/shared/makefile.mk
===================================================================
RCS file: /cvs/udk/bridges/source/cpp_uno/shared/makefile.mk,v
retrieving revision 1.3
retrieving revision 1.3.122.1
diff -u -p -u -p -r1.3 -r1.3.122.1
--- bridges/source/cpp_uno/shared/makefile.mk	7 Sep 2005 22:34:55 -0000	1.3
+++ bridges/source/cpp_uno/shared/makefile.mk	20 Jun 2007 12:21:31 -0000	1.3.122.1
@@ -41,6 +41,12 @@ ENABLE_EXCEPTIONS = TRUE
 
 .INCLUDE: settings.mk
 
+# disable optimization for cppinterfaceproxy.cxx -
+# attribute constructor / destructor get not called otherwise
+.IF "$(COM)" == "GCC"
+CFLAGS+=$(CFLAGSNOOPT)
+.ENDIF
+
 SLOFILES = \
     $(SLO)$/bridge.obj \
     $(SLO)$/component.obj \
Index: cppuhelper/source/component_context.cxx
===================================================================
RCS file: /cvs/udk/cppuhelper/source/component_context.cxx,v
retrieving revision 1.30
retrieving revision 1.30.6.1
diff -u -p -u -p -r1.30 -r1.30.6.1
--- cppuhelper/source/component_context.cxx	9 May 2007 13:25:10 -0000	1.30
+++ cppuhelper/source/component_context.cxx	6 Jun 2007 07:40:31 -0000	1.30.6.1
@@ -833,13 +833,13 @@ ComponentContext::ComponentContext(
 
 
 //##################################################################################################
-extern "C" { static void s_createComponentContext_v(va_list param)
+extern "C" { static void s_createComponentContext_v(va_list * pParam)
 {
-    ContextEntry_Init const  * pEntries     = va_arg(param, ContextEntry_Init const *);
-	sal_Int32                  nEntries     = va_arg(param, sal_Int32);
-	XComponentContext        * pDelegatee   = va_arg(param, XComponentContext *);
-	void                    ** ppContext    = va_arg(param, void **);
-	uno::Mapping             * pTarget2curr = va_arg(param, uno::Mapping *);
+    ContextEntry_Init const  * pEntries     = va_arg(*pParam, ContextEntry_Init const *);
+	sal_Int32                  nEntries     = va_arg(*pParam, sal_Int32);
+	XComponentContext        * pDelegatee   = va_arg(*pParam, XComponentContext *);
+	void                    ** ppContext    = va_arg(*pParam, void **);
+	uno::Mapping             * pTarget2curr = va_arg(*pParam, uno::Mapping *);
 
 	Reference<XComponentContext> xDelegate(pDelegatee, SAL_NO_ACQUIRE);
 	Reference<XComponentContext> xContext;
Index: cppuhelper/source/shlib.cxx
===================================================================
RCS file: /cvs/udk/cppuhelper/source/shlib.cxx,v
retrieving revision 1.27
retrieving revision 1.27.6.1
diff -u -p -u -p -r1.27 -r1.27.6.1
--- cppuhelper/source/shlib.cxx	9 May 2007 13:26:03 -0000	1.27
+++ cppuhelper/source/shlib.cxx	6 Jun 2007 07:40:31 -0000	1.27.6.1
@@ -322,13 +322,13 @@ static OUString getLibEnv(OUString      
 	return aExcMsg;
 }
 
-extern "C" {static void s_getFactory(va_list param) 
+extern "C" {static void s_getFactory(va_list * pParam) 
 {
-	component_getFactoryFunc         pSym      = va_arg(param, component_getFactoryFunc);
-	OString                  const * pImplName = va_arg(param, OString const *);
-	void                           * pSMgr     = va_arg(param, void *);
-	void                           * pKey      = va_arg(param, void *);
-	void                          ** ppSSF     = va_arg(param, void **);
+	component_getFactoryFunc         pSym      = va_arg(*pParam, component_getFactoryFunc);
+	OString                  const * pImplName = va_arg(*pParam, OString const *);
+	void                           * pSMgr     = va_arg(*pParam, void *);
+	void                           * pKey      = va_arg(*pParam, void *);
+	void                          ** ppSSF     = va_arg(*pParam, void **);
 
 	*ppSSF = pSym(pImplName->getStr(), pSMgr, pKey);
 }}
@@ -469,12 +469,12 @@ Reference< XInterface > SAL_CALL loadSha
 }
 
 //==============================================================================
-extern "C" { static void s_writeInfo(va_list param) 
+extern "C" { static void s_writeInfo(va_list * pParam) 
 {
-	component_writeInfoFunc         pSym      = va_arg(param, component_writeInfoFunc);
-	void                          * pSMgr     = va_arg(param, void *);
-	void                          * pKey      = va_arg(param, void *);
-    sal_Bool                      * pbRet     = va_arg(param, sal_Bool *);
+	component_writeInfoFunc         pSym      = va_arg(*pParam, component_writeInfoFunc);
+	void                          * pSMgr     = va_arg(*pParam, void *);
+	void                          * pKey      = va_arg(*pParam, void *);
+    sal_Bool                      * pbRet     = va_arg(*pParam, sal_Bool *);
 
 	*pbRet = pSym(pSMgr, pKey);
 
Index: cppuhelper/test/bootstrap/TestEnv.cxx
===================================================================
RCS file: /cvs/udk/cppuhelper/test/bootstrap/TestEnv.cxx,v
retrieving revision 1.2
retrieving revision 1.2.6.2
diff -u -p -u -p -r1.2 -r1.2.6.2
--- cppuhelper/test/bootstrap/TestEnv.cxx	9 May 2007 13:26:30 -0000	1.2
+++ cppuhelper/test/bootstrap/TestEnv.cxx	8 Jun 2007 09:53:51 -0000	1.2.6.2
@@ -33,6 +33,9 @@
  *
  ************************************************************************/
 
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_cppuhelper.hxx"
+
 #include "cppu/EnvDcp.hxx"
 
 #include "cppu/helper/purpenv/Environment.hxx"
@@ -64,8 +67,8 @@ protected:
 	virtual void v_enter(void);
 	virtual void v_leave(void);
 
-	virtual void v_callInto_v(uno_EnvCallee * pCallee, va_list param);
-	virtual void v_callOut_v (uno_EnvCallee * pCallee, va_list param);
+	virtual void v_callInto_v(uno_EnvCallee * pCallee, va_list * pParam);
+	virtual void v_callOut_v (uno_EnvCallee * pCallee, va_list * pParam);
 
 	virtual int  v_isValid   (rtl::OUString * pReason);
 };
@@ -82,17 +85,17 @@ TestEnv::~TestEnv(void)
 }
 
 
-void TestEnv::v_callInto_v(uno_EnvCallee * pCallee, va_list param)
+void TestEnv::v_callInto_v(uno_EnvCallee * pCallee, va_list * pParam)
 {
 	++ m_inCount;
-	pCallee(param);
+	pCallee(pParam);
 	-- m_inCount;
 }
 
-void TestEnv::v_callOut_v(uno_EnvCallee * pCallee, va_list param)
+void TestEnv::v_callOut_v(uno_EnvCallee * pCallee, va_list * pParam)
 {
 	-- m_inCount;
-	pCallee(param);
+	pCallee(pParam);
 	++ m_inCount;
 }
 
Index: cppuhelper/test/bootstrap/TestEnv.def
===================================================================
RCS file: cppuhelper/test/bootstrap/TestEnv.def
diff -N cppuhelper/test/bootstrap/TestEnv.def
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cppuhelper/test/bootstrap/TestEnv.def	8 Jun 2007 09:54:32 -0000	1.3.2.2
@@ -0,0 +1,8 @@
+HEAPSIZE	  0
+EXPORTS
+	uno_initEnvironment
+	uno_ext_getMapping
+
+
+
+
Index: cppuhelper/test/testcmp/TestComponent.cxx
===================================================================
RCS file: /cvs/udk/cppuhelper/test/testcmp/TestComponent.cxx,v
retrieving revision 1.2
retrieving revision 1.2.6.1
diff -u -p -u -p -r1.2 -r1.2.6.1
--- cppuhelper/test/testcmp/TestComponent.cxx	9 May 2007 13:27:36 -0000	1.2
+++ cppuhelper/test/testcmp/TestComponent.cxx	8 Jun 2007 09:53:51 -0000	1.2.6.1
@@ -33,6 +33,10 @@
  *
  ************************************************************************/
 
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_cppuhelper.hxx"
+
+
 #define CPPUHELPER_TEST_COMPONENT_IMPL
 #include "TestComponent.hxx"
 
Index: cppuhelper/test/testcmp/TestComponent.uno.def
===================================================================
RCS file: cppuhelper/test/testcmp/TestComponent.uno.def
diff -N cppuhelper/test/testcmp/TestComponent.uno.def
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cppuhelper/test/testcmp/TestComponent.uno.def	8 Jun 2007 09:54:32 -0000	1.3.2.2
@@ -0,0 +1,11 @@
+HEAPSIZE	  0
+EXPORTS
+	component_getImplementationEnvironmentExt;
+	component_getFactory;
+	component_writeInfo;
+	?g_envDcp@@3VOUString@rtl@@A;
+
+
+
+
+
Index: ure/source/README
===================================================================
RCS file: /cvs/udk/ure/source/README,v
retrieving revision 1.11
retrieving revision 1.11.8.2
diff -u -p -u -p -r1.11 -r1.11.8.2
--- ure/source/README	25 Jan 2007 10:54:01 -0000	1.11
+++ ure/source/README	22 Jun 2007 11:08:49 -0000	1.11.8.2
@@ -55,6 +55,8 @@ Linux x86, Solaris x86, and Solaris SPAR
 /opt/openoffice.org/ure/lib/libuno_salhelperC52.so.3  [Solaris only]
 /opt/openoffice.org/ure/lib/libstlport_gcc.so  [Linux x86 only]
 /opt/openoffice.org/ure/lib/libstlport_sunpro.so  [Solaris only]
+/opt/openoffice.org/ure/lib/libuno_purpenvhelpergcc3.so.3  [Linux x86 only]
+/opt/openoffice.org/ure/lib/libuno_purpenvhelperC52.so.3  [Solaris only]
 /opt/openoffice.org/ure/share/java/unoloader.jar
 /opt/openoffice.org/ure/share/java/juh.jar
 /opt/openoffice.org/ure/share/java/jurt.jar
@@ -112,6 +114,8 @@ Linux x86, Solaris x86, and Solaris SPAR
 /opt/openoffice.org/ure/lib/libstdc++.so.6  [private; Linux x86 only]
 /opt/openoffice.org/ure/share/java/java_uno.jar  [private]
 /opt/openoffice.org/ure/share/misc/javavendors.xml  [private]
+/opt/openoffice.org/ure/lib/libunsafe_uno_uno.so  [private]
+/opt/openoffice.org/ure/lib/libaffine_uno_uno.so  [private]
 
 Windows:
 
@@ -127,6 +131,7 @@ Program Files\URE\bin\cppuhelper3MSC.dll
 Program Files\URE\bin\sal3.dll
 Program Files\URE\bin\salhelper3MSC.dll
 Program Files\URE\bin\stlport_vc7145.dll
+Program Files\URE\bin\purpenvhelper3MSC.dll
 Program Files\URE\java\unoloader.jar
 Program Files\URE\java\juh.jar
 Program Files\URE\java\jurt.jar
@@ -181,6 +186,8 @@ Program Files\URE\bin\unicows.dll  [priv
 Program Files\URE\bin\uwinapi.dll  [private]
 Program Files\URE\java\java_uno.jar  [private]
 Program Files\URE\misc\javavendors.xml  [private]
+Program Files\URE\bin\unsafe_uno_uno.dll  [private]
+Program Files\URE\bin\affine_uno_uno.dll  [private]
 
 Files marked as [private] are private to the URE installation.  To avoid
 stability issues, applications that use the URE should not access the
@@ -203,7 +210,7 @@ Developer's Guide.
 enables Java executables to use a Java VM, such as the Sun JDK/JRE.  Executables
 such as uno and regcomp run this helper automatically.
 
-- cppu, cppuhelper, sal, and salhelper are the public C++ UNO runtime dynamic
+- cppu, cppuhelper, sal, salhelper and purpenvhelper are the public C++ UNO runtime dynamic
 libraries that client code can call.  For details on the functionality that
 these libraries offer, see the "C++ Reference" section of the SDK HTML
 documentation.  The corresponding C++ header files are not in the URE, but
@@ -347,10 +354,10 @@ C++ and Java UNO Components
 
 C++ UNO components run from within the uno executable can depend on an
 environment in which the public C++ UNO runtime dynamic libraries (cppu,
-cppuhelper, sal, salhelper, stlport) are already available (that is, on
-Linux x86, Solaris x86, and Solaris SPARC, a component dynamic library need not
-make sure that the UNO runtime dynamic libraries it needs can be found on its
-RPATH).
+cppuhelper, sal, salhelper, stlport, purpenvhelper) are already available (that 
+is, on Linux x86, Solaris x86, and Solaris SPARC, a component dynamic library 
+need not make sure that the UNO runtime dynamic libraries it needs can be found
+on its RPATH).
 
 Similarly, Java UNO components can depend on an environment in which the public
 Java UNO runtime JARs are already available (that is, a component JAR need not
Index: cppu/inc/cppu/Enterable.hxx
===================================================================
RCS file: /cvs/udk/cppu/inc/cppu/Enterable.hxx,v
retrieving revision 1.2
retrieving revision 1.2.2.1
diff -u -p -u -p -r1.2 -r1.2.2.1
--- cppu/inc/cppu/Enterable.hxx	9 May 2007 13:32:35 -0000	1.2
+++ cppu/inc/cppu/Enterable.hxx	5 Jun 2007 15:00:52 -0000	1.2.2.1
@@ -52,11 +52,11 @@ class Enterable : public uno_Enterable
 public:
     /* These methods need to be implemented in a derived class.
      */
-	virtual void v_enter     (void)                                   = 0;
-	virtual void v_leave     (void)                                   = 0;
-	virtual void v_callInto_v(uno_EnvCallee * pCallee, va_list param) = 0;
-	virtual void v_callOut_v (uno_EnvCallee * pCallee, va_list param) = 0;
-	virtual int  v_isValid   (rtl::OUString * pReason)                = 0;
+	virtual void v_enter     (void)                                      = 0;
+	virtual void v_leave     (void)                                      = 0;
+	virtual void v_callInto_v(uno_EnvCallee * pCallee, va_list * pParam) = 0;
+	virtual void v_callOut_v (uno_EnvCallee * pCallee, va_list * pParam) = 0;
+	virtual int  v_isValid   (rtl::OUString * pReason)                   = 0;
 
     virtual ~Enterable() {};
 
@@ -66,8 +66,8 @@ public:
 	inline void enter(void) {m_enter(this);};
 	inline void leave(void) {m_leave(this);};
 
-	inline void callInto_v(uno_EnvCallee * pCallee, va_list param) {m_callInto_v(this, pCallee, param);};
-	inline void callOut_v (uno_EnvCallee * pCallee, va_list param) {m_callOut_v (this, pCallee, param);};
+	inline void callInto_v(uno_EnvCallee * pCallee, va_list * pParam) {m_callInto_v(this, pCallee, pParam);};
+	inline void callOut_v (uno_EnvCallee * pCallee, va_list * pParam) {m_callOut_v (this, pCallee, pParam);};
 
 	inline void callInto(uno_EnvCallee * pCallee, ...);
 	inline void callOut (uno_EnvCallee * pCallee, ...);
@@ -81,10 +81,10 @@ private:
 
 extern "C" inline void Enterable_call_enter (void * context) { ((Enterable *)context)->v_enter(); };
 extern "C" inline void Enterable_call_leave (void * context) { ((Enterable *)context)->v_leave(); };
-extern "C" inline void Enterable_call_callInto_v(void * context, uno_EnvCallee * pCallee, va_list param) 
-    { ((Enterable *)context)->v_callInto_v(pCallee, param); };
-extern "C" inline void Enterable_call_callOut_v (void * context, uno_EnvCallee * pCallee, va_list param) 
-    { ((Enterable *)context)->v_callOut_v(pCallee, param); };
+extern "C" inline void Enterable_call_callInto_v(void * context, uno_EnvCallee * pCallee, va_list * pParam) 
+    { ((Enterable *)context)->v_callInto_v(pCallee, pParam); };
+extern "C" inline void Enterable_call_callOut_v (void * context, uno_EnvCallee * pCallee, va_list * pParam) 
+    { ((Enterable *)context)->v_callOut_v(pCallee, pParam); };
 extern "C" inline int  Enterable_call_isValid   (void * context, rtl_uString ** pReason)
     {return ((Enterable *)context)->v_isValid((rtl::OUString *)pReason);}
 
@@ -103,7 +103,7 @@ void Enterable::callInto(uno_EnvCallee *
 	va_list param;
 
 	va_start(param, pCallee);
-	callInto_v(pCallee, param);
+	callInto_v(pCallee, &param);
 	va_end(param);
 }
 
@@ -112,7 +112,7 @@ void Enterable::callOut(uno_EnvCallee * 
 	va_list param;
 
 	va_start(param, pCallee);
-	callOut_v(pCallee, param);
+	callOut_v(pCallee, &param);
 	va_end(param);
 }
 
Index: cppu/inc/uno/Enterable.h
===================================================================
RCS file: /cvs/udk/cppu/inc/uno/Enterable.h,v
retrieving revision 1.2
retrieving revision 1.2.2.1
diff -u -p -u -p -r1.2 -r1.2.2.1
--- cppu/inc/uno/Enterable.h	9 May 2007 13:33:57 -0000	1.2
+++ cppu/inc/uno/Enterable.h	5 Jun 2007 15:00:52 -0000	1.2.2.1
@@ -68,10 +68,10 @@ typedef void uno_Enterable_leave     (vo
     
 	@param context
     @param pCallee  the function to be called
-    @param param    the parameter pointer to be passed to the function
+    @param pParam   the parameter pointer to be passed to the function
     @since UDK 3.2.7
 */
-typedef void uno_Enterable_callInto_v(void * context, uno_EnvCallee * pCallee, va_list param);
+typedef void uno_Enterable_callInto_v(void * context, uno_EnvCallee * pCallee, va_list * pParam);
 
 
 /** Generic function type declaration for calling out of an Environment.
@@ -79,10 +79,10 @@ typedef void uno_Enterable_callInto_v(vo
     
 	@param context
     @param pCallee  the function to be called
-    @param param    the parameter pointer to be passed to the function
+    @param pParam   the parameter pointer to be passed to the function
     @since UDK 3.2.7
 */
-typedef void uno_Enterable_callOut_v (void * context, uno_EnvCallee * pCallee, va_list param);
+typedef void uno_Enterable_callOut_v (void * context, uno_EnvCallee * pCallee, va_list * pParam);
 
 
 /** Generic function type declaration for checking if calling on managed object is
Index: cppu/inc/uno/environment.h
===================================================================
RCS file: /cvs/udk/cppu/inc/uno/environment.h,v
retrieving revision 1.11
retrieving revision 1.11.2.1
diff -u -p -u -p -r1.11 -r1.11.2.1
--- cppu/inc/uno/environment.h	9 May 2007 13:34:52 -0000	1.11
+++ cppu/inc/uno/environment.h	5 Jun 2007 15:00:52 -0000	1.11.2.1
@@ -349,16 +349,16 @@ void SAL_CALL uno_getCurrentEnvironment(
 
 /** Typedef for variable argument function.
  */
-typedef void SAL_CALL uno_EnvCallee(va_list param);
+typedef void SAL_CALL uno_EnvCallee(va_list * pParam);
 
 /** Invoke the passed function in the given environment.
 
     @param pEnv     the target environment
     @param pCallee  the function to call
-    @param param    the parameter pointer passed to the function
+    @param pParam   the parameter pointer passed to the function
     @since UDK 3.2.7
  */
-void SAL_CALL uno_Environment_invoke_v(uno_Environment * pEnv, uno_EnvCallee * pCallee, va_list param)
+void SAL_CALL uno_Environment_invoke_v(uno_Environment * pEnv, uno_EnvCallee * pCallee, va_list * pParam)
 	SAL_THROW_EXTERN_C();
 
 /** Invoke the passed function in the given environment. 
Index: cppu/inc/uno/environment.hxx
===================================================================
RCS file: /cvs/udk/cppu/inc/uno/environment.hxx,v
retrieving revision 1.8
retrieving revision 1.8.2.1
diff -u -p -u -p -r1.8 -r1.8.2.1
--- cppu/inc/uno/environment.hxx	9 May 2007 13:35:05 -0000	1.8
+++ cppu/inc/uno/environment.hxx	5 Jun 2007 15:00:52 -0000	1.8.2.1
@@ -167,10 +167,10 @@ public:
 	/** Invoke the passed function in this environment.
 
 		@param pCallee  the function to call
-		@param param    the parameter pointer to be passed to the function
+		@param pParam   the parameter pointer to be passed to the function
         @since UDK 3.2.7
 	*/
-	inline void SAL_CALL invoke_v(uno_EnvCallee * pCallee, va_list param) const SAL_THROW( () );
+	inline void SAL_CALL invoke_v(uno_EnvCallee * pCallee, va_list * pParam) const SAL_THROW( () );
 
 	/** Invoke the passed function in this environment. 
 
@@ -242,10 +242,10 @@ inline Environment & Environment::operat
 	return *this;
 }
 //__________________________________________________________________________________________________
-inline void SAL_CALL Environment::invoke_v(uno_EnvCallee * pCallee, va_list param) const SAL_THROW( () )
+inline void SAL_CALL Environment::invoke_v(uno_EnvCallee * pCallee, va_list * pParam) const SAL_THROW( () )
 {
 	if (_pEnv)
-		uno_Environment_invoke_v(_pEnv, pCallee, param);
+		uno_Environment_invoke_v(_pEnv, pCallee, pParam);
 }
 //__________________________________________________________________________________________________
 inline void SAL_CALL Environment::invoke(uno_EnvCallee * pCallee, ...) const SAL_THROW( () )
@@ -255,7 +255,7 @@ inline void SAL_CALL Environment::invoke
 		va_list param;
 		
 		va_start(param, pCallee);
-		uno_Environment_invoke_v(_pEnv, pCallee, param);
+		uno_Environment_invoke_v(_pEnv, pCallee, &param);
 		va_end(param);
 	}
 	
Index: cppu/source/AffineBridge/AffineBridge.cxx
===================================================================
RCS file: /cvs/udk/cppu/source/AffineBridge/AffineBridge.cxx,v
retrieving revision 1.3
retrieving revision 1.3.2.1
diff -u -p -u -p -r1.3 -r1.3.2.1
--- cppu/source/AffineBridge/AffineBridge.cxx	14 May 2007 09:32:30 -0000	1.3
+++ cppu/source/AffineBridge/AffineBridge.cxx	5 Jun 2007 15:04:23 -0000	1.3.2.1
@@ -71,7 +71,7 @@ public:
 
 	Msg                   m_message;
 	uno_EnvCallee       * m_pCallee;
-	va_list               m_param;
+	va_list             * m_pParam;
 
 	osl::Mutex            m_innerMutex;
 	oslThreadIdentifier   m_innerThreadId;
@@ -87,8 +87,8 @@ public:
 	explicit  AffineBridge(void);
 	virtual  ~AffineBridge(void);
 
-	virtual void  v_callInto_v(uno_EnvCallee * pCallee, va_list param);
-	virtual void  v_callOut_v (uno_EnvCallee * pCallee, va_list param);
+	virtual void  v_callInto_v(uno_EnvCallee * pCallee, va_list * pParam);
+	virtual void  v_callOut_v (uno_EnvCallee * pCallee, va_list * pParam);
 
 	virtual void  v_enter(void);
 	virtual void  v_leave(void);
@@ -207,7 +207,7 @@ void AffineBridge::outerDispatch(int loo
 			
 		case CB_FPOINTER: 
 		{
-			m_pCallee(m_param);
+			m_pCallee(m_pParam);
 			
 			m_message = CB_DONE;
 			m_innerCondition.set();
@@ -241,7 +241,7 @@ void AffineBridge::innerDispatch(void)
 			
 		case CB_FPOINTER: 
 		{
-			m_pCallee(m_param);
+			m_pCallee(m_pParam);
 			
 			m_message = CB_DONE;
 			m_outerCondition.set();
@@ -254,7 +254,7 @@ void AffineBridge::innerDispatch(void)
 	while(mm != CB_DONE);
 }
 
-void AffineBridge::v_callInto_v(uno_EnvCallee * pCallee, va_list param)
+void AffineBridge::v_callInto_v(uno_EnvCallee * pCallee, va_list * pParam)
 {
 	osl::MutexGuard guard(m_outerMutex); // only one thread at a time can call into
 
@@ -273,7 +273,7 @@ void AffineBridge::v_callInto_v(uno_EnvC
 
 	m_message = CB_FPOINTER;
 	m_pCallee = pCallee;
-	m_param   = param;
+	m_pParam  = pParam;
 	m_innerCondition.set();
 
 	outerDispatch(1);
@@ -282,7 +282,7 @@ void AffineBridge::v_callInto_v(uno_EnvC
 		m_outerThreadId = 0;
 }
 
-void AffineBridge::v_callOut_v(uno_EnvCallee * pCallee, va_list param)
+void AffineBridge::v_callOut_v(uno_EnvCallee * pCallee, va_list * pParam)
 {
 	OSL_ASSERT(m_innerThreadId);
 
@@ -306,7 +306,7 @@ void AffineBridge::v_callOut_v(uno_EnvCa
 
 	m_message = CB_FPOINTER;
 	m_pCallee = pCallee;
-	m_param   = param;
+	m_pParam  = pParam;
 	m_outerCondition.set();
 
 	innerDispatch();
Index: cppu/source/UnsafeBridge/UnsafeBridge.cxx
===================================================================
RCS file: /cvs/udk/cppu/source/UnsafeBridge/UnsafeBridge.cxx,v
retrieving revision 1.3
retrieving revision 1.3.2.1
diff -u -p -u -p -r1.3 -r1.3.2.1
--- cppu/source/UnsafeBridge/UnsafeBridge.cxx	14 May 2007 09:32:30 -0000	1.3
+++ cppu/source/UnsafeBridge/UnsafeBridge.cxx	5 Jun 2007 15:04:34 -0000	1.3.2.1
@@ -68,8 +68,8 @@ class SAL_DLLPRIVATE UnsafeBridge : publ
 public:
 	explicit UnsafeBridge(void);
 
-	virtual void v_callInto_v(uno_EnvCallee * pCallee, va_list param);
-	virtual void v_callOut_v (uno_EnvCallee * pCallee, va_list param);
+	virtual void v_callInto_v(uno_EnvCallee * pCallee, va_list * pParam);
+	virtual void v_callOut_v (uno_EnvCallee * pCallee, va_list * pParam);
 
 	virtual void v_enter(void);
 	virtual void v_leave(void);
@@ -91,19 +91,19 @@ UnsafeBridge::~UnsafeBridge(void)
 	OSL_ASSERT(m_count >= 0);
 }
 
-void UnsafeBridge::v_callInto_v(uno_EnvCallee * pCallee, va_list param)
+void UnsafeBridge::v_callInto_v(uno_EnvCallee * pCallee, va_list * pParam)
 {
 	enter();
-	pCallee(param);
+	pCallee(pParam);
 	leave();
 }
 
-void UnsafeBridge::v_callOut_v(uno_EnvCallee * pCallee, va_list param)
+void UnsafeBridge::v_callOut_v(uno_EnvCallee * pCallee, va_list * pParam)
 {
 	OSL_ASSERT(m_count > 0);
 
 	-- m_count;
-	pCallee(param);
+	pCallee(pParam);
 	++ m_count;
 
 	if (!m_threadId)
Index: cppu/source/helper/purpenv/helper_purpenv_Environment.cxx
===================================================================
RCS file: /cvs/udk/cppu/source/helper/purpenv/helper_purpenv_Environment.cxx,v
retrieving revision 1.3
retrieving revision 1.3.2.1
diff -u -p -u -p -r1.3 -r1.3.2.1
--- cppu/source/helper/purpenv/helper_purpenv_Environment.cxx	14 May 2007 09:32:30 -0000	1.3
+++ cppu/source/helper/purpenv/helper_purpenv_Environment.cxx	5 Jun 2007 15:04:44 -0000	1.3.2.1
@@ -119,8 +119,8 @@ public:
 
 	virtual void v_enter     (void);
 	virtual void v_leave     (void);
-	virtual void v_callInto_v(uno_EnvCallee * pCallee, va_list param);
-	virtual void v_callOut_v (uno_EnvCallee * pCallee, va_list param);
+	virtual void v_callInto_v(uno_EnvCallee * pCallee, va_list * pParam);
+	virtual void v_callOut_v (uno_EnvCallee * pCallee, va_list * pParam);
 	virtual int  v_isValid   (rtl::OUString * pReason);
 
 protected:
@@ -331,15 +331,15 @@ void Base::releaseWeak(void)
 }
 
 
-extern "C" { static void s_registerProxyInterface_v(va_list param) 
+extern "C" { static void s_registerProxyInterface_v(va_list * pParam) 
 {
-	uno_ExtEnvironment                   * pExtEnv    = va_arg(param, uno_ExtEnvironment *);
-	void                                ** ppProxy    = va_arg(param, void **);
-	uno_freeProxyFunc                      freeProxy  = va_arg(param, uno_freeProxyFunc);
-	rtl_uString                          * pOId       = va_arg(param, rtl_uString *);
-	typelib_InterfaceTypeDescription     * pTypeDescr = va_arg(param, typelib_InterfaceTypeDescription *);
+	uno_ExtEnvironment                   * pExtEnv    = va_arg(*pParam, uno_ExtEnvironment *);
+	void                                ** ppProxy    = va_arg(*pParam, void **);
+	uno_freeProxyFunc                      freeProxy  = va_arg(*pParam, uno_freeProxyFunc);
+	rtl_uString                          * pOId       = va_arg(*pParam, rtl_uString *);
+	typelib_InterfaceTypeDescription     * pTypeDescr = va_arg(*pParam, typelib_InterfaceTypeDescription *);
 	ExtEnv_registerProxyInterface  * pRegisterProxyInterface
-		= va_arg(param, ExtEnv_registerProxyInterface *);
+		= va_arg(*pParam, ExtEnv_registerProxyInterface *);
 
 	pRegisterProxyInterface(pExtEnv, ppProxy, freeProxy, pOId, pTypeDescr);
 }}
@@ -360,11 +360,11 @@ void Base::registerProxyInterface(void  
 }
 
 
-extern "C" { static void s_revokeInterface_v(va_list param) 
+extern "C" { static void s_revokeInterface_v(va_list * pParam) 
 {
-	uno_ExtEnvironment * pExtEnv    = va_arg(param, uno_ExtEnvironment *);
-	void               * pInterface = va_arg(param, void *);
-	ExtEnv_revokeInterface * pRevokeInterface = va_arg(param, ExtEnv_revokeInterface *);
+	uno_ExtEnvironment * pExtEnv    = va_arg(*pParam, uno_ExtEnvironment *);
+	void               * pInterface = va_arg(*pParam, void *);
+	ExtEnv_revokeInterface * pRevokeInterface = va_arg(*pParam, ExtEnv_revokeInterface *);
 
 	pRevokeInterface(pExtEnv, pInterface);
 }}
@@ -379,13 +379,13 @@ void Base::revokeInterface(void * pInter
 }
 
 
-extern "C" { static void s_getObjectIdentifier_v(va_list param) 
+extern "C" { static void s_getObjectIdentifier_v(va_list * pParam) 
 {
-	uno_ExtEnvironment * pExtEnv    = va_arg(param, uno_ExtEnvironment *);
-	void               * pInterface = va_arg(param, void *);
-	rtl::OUString      * pOId       = va_arg(param, rtl::OUString *);
+	uno_ExtEnvironment * pExtEnv    = va_arg(*pParam, uno_ExtEnvironment *);
+	void               * pInterface = va_arg(*pParam, void *);
+	rtl::OUString      * pOId       = va_arg(*pParam, rtl::OUString *);
 	ExtEnv_getObjectIdentifier * pGetObjectIdentifier
-		= va_arg(param, ExtEnv_getObjectIdentifier *);
+		= va_arg(*pParam, ExtEnv_getObjectIdentifier *);
 
 	pGetObjectIdentifier(pExtEnv, reinterpret_cast<rtl_uString **>(pOId), pInterface);
 }}
@@ -401,14 +401,14 @@ void Base::getObjectIdentifier(void * pI
 }
 
 
-extern "C" { static void s_getRegisteredInterface_v(va_list param) 
+extern "C" { static void s_getRegisteredInterface_v(va_list * pParam) 
 {
-	uno_ExtEnvironment                   * pExtEnv     = va_arg(param, uno_ExtEnvironment *);
-	void                                ** ppInterface = va_arg(param, void **);
-	rtl_uString                          * pOId        = va_arg(param, rtl_uString *);
-	typelib_InterfaceTypeDescription     * pTypeDescr  = va_arg(param, typelib_InterfaceTypeDescription *);
+	uno_ExtEnvironment                   * pExtEnv     = va_arg(*pParam, uno_ExtEnvironment *);
+	void                                ** ppInterface = va_arg(*pParam, void **);
+	rtl_uString                          * pOId        = va_arg(*pParam, rtl_uString *);
+	typelib_InterfaceTypeDescription     * pTypeDescr  = va_arg(*pParam, typelib_InterfaceTypeDescription *);
 	ExtEnv_getRegisteredInterface  * pGetRegisteredInterface
-		= va_arg(param, ExtEnv_getRegisteredInterface *);
+		= va_arg(*pParam, ExtEnv_getRegisteredInterface *);
 
 	pGetRegisteredInterface(pExtEnv, ppInterface, pOId, pTypeDescr);
 }}
@@ -427,14 +427,14 @@ void Base::getRegisteredInterface(void *
 }
 
 
-extern "C" { static void s_getRegisteredInterfaces_v(va_list param) 
+extern "C" { static void s_getRegisteredInterfaces_v(va_list * pParam) 
 {
-	uno_ExtEnvironment   * pExtEnv      = va_arg(param, uno_ExtEnvironment *);
-	void               *** pppInterface = va_arg(param, void ***);
-	sal_Int32            * pnLen        = va_arg(param, sal_Int32 *);
-	uno_memAlloc           memAlloc     = va_arg(param, uno_memAlloc);
+	uno_ExtEnvironment   * pExtEnv      = va_arg(*pParam, uno_ExtEnvironment *);
+	void               *** pppInterface = va_arg(*pParam, void ***);
+	sal_Int32            * pnLen        = va_arg(*pParam, sal_Int32 *);
+	uno_memAlloc           memAlloc     = va_arg(*pParam, uno_memAlloc);
 	ExtEnv_getRegisteredInterfaces * pGetRegisteredInterfaces
-		= va_arg(param, ExtEnv_getRegisteredInterfaces *);
+		= va_arg(*pParam, ExtEnv_getRegisteredInterfaces *);
 
 	pGetRegisteredInterfaces(pExtEnv, pppInterface, pnLen, memAlloc);
 }}
@@ -453,13 +453,13 @@ void Base::getRegisteredInterfaces(void 
 }
 
 
-extern "C" { static void s_computeObjectIdentifier_v(va_list param) 
+extern "C" { static void s_computeObjectIdentifier_v(va_list * pParam) 
 {
-	uno_ExtEnvironment * pExtEnv    = va_arg(param, uno_ExtEnvironment *);
-	void               * pInterface = va_arg(param, void *);
-	rtl::OUString      * pOId       = va_arg(param, rtl::OUString *);
+	uno_ExtEnvironment * pExtEnv    = va_arg(*pParam, uno_ExtEnvironment *);
+	void               * pInterface = va_arg(*pParam, void *);
+	rtl::OUString      * pOId       = va_arg(*pParam, rtl::OUString *);
 	ExtEnv_computeObjectIdentifier * pComputeObjectIdentifier
-		= va_arg(param, ExtEnv_computeObjectIdentifier *);
+		= va_arg(*pParam, ExtEnv_computeObjectIdentifier *);
 
 	pComputeObjectIdentifier(pExtEnv, reinterpret_cast<rtl_uString **>(pOId), pInterface);
 }}
@@ -475,12 +475,12 @@ void Base::computeObjectIdentifier(void 
 }
 
 
-extern "C" { static void s_acquireInterface_v(va_list param) 
+extern "C" { static void s_acquireInterface_v(va_list * pParam) 
 {
-	uno_ExtEnvironment * pExtEnv    = va_arg(param, uno_ExtEnvironment *);
-	void               * pInterface = va_arg(param, void *);
+	uno_ExtEnvironment * pExtEnv    = va_arg(*pParam, uno_ExtEnvironment *);
+	void               * pInterface = va_arg(*pParam, void *);
 	ExtEnv_acquireInterface * pAcquireInterface 
-		= va_arg(param, ExtEnv_acquireInterface *);
+		= va_arg(*pParam, ExtEnv_acquireInterface *);
 
 	pAcquireInterface(pExtEnv, pInterface);
 }}
@@ -491,12 +491,12 @@ void Base::acquireInterface(void * pInte
 }
 
 
-extern "C" { static void s_releaseInterface_v(va_list param) 
+extern "C" { static void s_releaseInterface_v(va_list * pParam) 
 {
-	uno_ExtEnvironment * pExtEnv    = va_arg(param, uno_ExtEnvironment *);
-	void               * pInterface = va_arg(param, void *);
+	uno_ExtEnvironment * pExtEnv    = va_arg(*pParam, uno_ExtEnvironment *);
+	void               * pInterface = va_arg(*pParam, void *);
 	ExtEnv_releaseInterface * pReleaseInterface
-		= va_arg(param, ExtEnv_releaseInterface *);
+		= va_arg(*pParam, ExtEnv_releaseInterface *);
 
 	pReleaseInterface(pExtEnv, pInterface);
 }}
@@ -520,14 +520,14 @@ void Base::v_leave(void)
     m_pEnterable->leave();
 }
 
-void Base::v_callInto_v(uno_EnvCallee * pCallee, va_list param)
+void Base::v_callInto_v(uno_EnvCallee * pCallee, va_list * pParam)
 {
-    m_pEnterable->callInto_v(pCallee, param);
+    m_pEnterable->callInto_v(pCallee, pParam);
 }
 
-void Base::v_callOut_v(uno_EnvCallee * pCallee, va_list param)
+void Base::v_callOut_v(uno_EnvCallee * pCallee, va_list * pParam)
 {
-    m_pEnterable->callOut_v(pCallee, param);
+    m_pEnterable->callOut_v(pCallee, pParam);
 }
 
 int Base::v_isValid(rtl::OUString * pReason) 
Index: cppu/source/helper/purpenv/helper_purpenv_Mapping.cxx
===================================================================
RCS file: /cvs/udk/cppu/source/helper/purpenv/helper_purpenv_Mapping.cxx,v
retrieving revision 1.3
retrieving revision 1.3.2.1
diff -u -p -u -p -r1.3 -r1.3.2.1
--- cppu/source/helper/purpenv/helper_purpenv_Mapping.cxx	14 May 2007 09:32:30 -0000	1.3
+++ cppu/source/helper/purpenv/helper_purpenv_Mapping.cxx	5 Jun 2007 15:04:44 -0000	1.3.2.1
@@ -116,11 +116,11 @@ static void SAL_CALL s_release(uno_Mappi
 }
 
 
-static void s_getIdentifier_v(va_list param)
+static void s_getIdentifier_v(va_list * pParam)
 {
-	uno_ExtEnvironment *  pEnv  = va_arg(param, uno_ExtEnvironment *);
-	rtl_uString        ** ppOid = va_arg(param, rtl_uString **);
-	uno_Interface      *  pUnoI = va_arg(param, uno_Interface *);
+	uno_ExtEnvironment *  pEnv  = va_arg(*pParam, uno_ExtEnvironment *);
+	rtl_uString        ** ppOid = va_arg(*pParam, rtl_uString **);
+	uno_Interface      *  pUnoI = va_arg(*pParam, uno_Interface *);
 	
 	pEnv->getObjectIdentifier(pEnv, ppOid, pUnoI);
 }
Index: cppu/source/helper/purpenv/helper_purpenv_Proxy.cxx
===================================================================
RCS file: /cvs/udk/cppu/source/helper/purpenv/helper_purpenv_Proxy.cxx,v
retrieving revision 1.3
retrieving revision 1.3.2.1
diff -u -p -u -p -r1.3 -r1.3.2.1
--- cppu/source/helper/purpenv/helper_purpenv_Proxy.cxx	14 May 2007 09:32:30 -0000	1.3
+++ cppu/source/helper/purpenv/helper_purpenv_Proxy.cxx	5 Jun 2007 15:04:44 -0000	1.3.2.1
@@ -211,12 +211,12 @@ static void SAL_CALL s_Proxy_release(uno
 	pProxy->release();
 }
 
-static void s_acquireAndRegister_v(va_list param) 
+static void s_acquireAndRegister_v(va_list * pParam) 
 {
-	uno_Interface                    * pUnoI      = va_arg(param, uno_Interface *);
-	rtl_uString                      * pOid       = va_arg(param, rtl_uString *);
-	typelib_InterfaceTypeDescription * pTypeDescr = va_arg(param, typelib_InterfaceTypeDescription *);
-	uno_ExtEnvironment               * pEnv       = va_arg(param, uno_ExtEnvironment *);
+	uno_Interface                    * pUnoI      = va_arg(*pParam, uno_Interface *);
+	rtl_uString                      * pOid       = va_arg(*pParam, rtl_uString *);
+	typelib_InterfaceTypeDescription * pTypeDescr = va_arg(*pParam, typelib_InterfaceTypeDescription *);
+	uno_ExtEnvironment               * pEnv       = va_arg(*pParam, uno_ExtEnvironment *);
 
 	pUnoI->acquire(pUnoI);
  	pEnv->registerInterface(pEnv, reinterpret_cast<void **>(&pUnoI), pOid, pTypeDescr);
@@ -260,10 +260,10 @@ Proxy::Proxy(uno::Mapping               
     uno_Interface::pDispatcher = s_Proxy_dispatch;
 }
 
-extern "C" { static void s_releaseAndRevoke_v(va_list param) 
+extern "C" { static void s_releaseAndRevoke_v(va_list * pParam) 
 {
-	uno_ExtEnvironment * pEnv  = va_arg(param, uno_ExtEnvironment *);
-	uno_Interface      * pUnoI = va_arg(param, uno_Interface *);
+	uno_ExtEnvironment * pEnv  = va_arg(*pParam, uno_ExtEnvironment *);
+	uno_Interface      * pUnoI = va_arg(*pParam, uno_Interface *);
 
 	pEnv->revokeInterface(pEnv, reinterpret_cast<void *>(pUnoI));
     pUnoI->release(pUnoI);
@@ -383,21 +383,21 @@ void Proxy::release(void) 
 
 
 extern "C" {
-static void s_type_destructData_v(va_list param)
+static void s_type_destructData_v(va_list * pParam)
 {
-	void * ret = va_arg(param, void *);
-	typelib_TypeDescriptionReference * pReturnTypeRef = va_arg(param, typelib_TypeDescriptionReference *);
+	void * ret = va_arg(*pParam, void *);
+	typelib_TypeDescriptionReference * pReturnTypeRef = va_arg(*pParam, typelib_TypeDescriptionReference *);
 
 	uno_type_destructData(ret, pReturnTypeRef, 0);
 }
 
-static void s_dispatcher_v(va_list param)
+static void s_dispatcher_v(va_list * pParam)
 {
-	uno_Interface                 * pUnoI       = va_arg(param, uno_Interface *);
-	typelib_TypeDescription const * pMemberType = va_arg(param, typelib_TypeDescription const *);
-	void                          * pReturn     = va_arg(param, void *);
-	void                         ** pArgs       = va_arg(param, void **);
-	uno_Any                      ** ppException = va_arg(param, uno_Any **);
+	uno_Interface                 * pUnoI       = va_arg(*pParam, uno_Interface *);
+	typelib_TypeDescription const * pMemberType = va_arg(*pParam, typelib_TypeDescription const *);
+	void                          * pReturn     = va_arg(*pParam, void *);
+	void                         ** pArgs       = va_arg(*pParam, void **);
+	uno_Any                      ** ppException = va_arg(*pParam, uno_Any **);
 
 	pUnoI->pDispatcher(pUnoI, pMemberType, pReturn, pArgs, ppException);
 }
Index: cppu/source/threadpool/thread.cxx
===================================================================
RCS file: /cvs/udk/cppu/source/threadpool/thread.cxx,v
retrieving revision 1.11
retrieving revision 1.11.36.2
diff -u -p -u -p -r1.11 -r1.11.36.2
--- cppu/source/threadpool/thread.cxx	17 Sep 2006 00:19:42 -0000	1.11
+++ cppu/source/threadpool/thread.cxx	7 Jun 2007 10:54:33 -0000	1.11.36.2
@@ -65,7 +65,7 @@ namespace cppu_threadpool {
 #if OSL_DEBUG_LEVEL > 1
 		if( m_lst.size() )
 		{
-			fprintf( stderr, "%d Threads left\n" , m_lst.size() );
+			fprintf( stderr, "%lu Threads left\n" , static_cast<unsigned long>(m_lst.size()) );
 		}
 #endif
 	}
Index: cppu/source/threadpool/threadpool.cxx
===================================================================
RCS file: /cvs/udk/cppu/source/threadpool/threadpool.cxx,v
retrieving revision 1.16
retrieving revision 1.16.36.2
diff -u -p -u -p -r1.16 -r1.16.36.2
--- cppu/source/threadpool/threadpool.cxx	17 Sep 2006 00:20:10 -0000	1.16
+++ cppu/source/threadpool/threadpool.cxx	7 Jun 2007 10:54:33 -0000	1.16.36.2
@@ -72,7 +72,7 @@ namespace cppu_threadpool
 #if OSL_DEBUG_LEVEL > 1
 		if( !m_lst.empty() )
 		{
-			printf( "DisposedCallerList : %d left\n" , m_lst.size( ));
+			printf( "DisposedCallerList : %lu left\n" , static_cast<unsigned long>(m_lst.size( )));
 		}
 #endif
 	}
@@ -120,7 +120,7 @@ namespace cppu_threadpool
 #if OSL_DEBUG_LEVEL > 1
 		if( m_mapQueue.size() )
 		{
-			printf( "ThreadIdHashMap : %d left\n" , m_mapQueue.size() );
+			printf( "ThreadIdHashMap : %lu left\n" , static_cast<unsigned long>(m_mapQueue.size()) );
 		}
 #endif
 	}
Index: cppu/source/uno/EnvStack.cxx
===================================================================
RCS file: /cvs/udk/cppu/source/uno/EnvStack.cxx,v
retrieving revision 1.3
retrieving revision 1.3.2.1
diff -u -p -u -p -r1.3 -r1.3.2.1
--- cppu/source/uno/EnvStack.cxx	16 May 2007 15:21:55 -0000	1.3
+++ cppu/source/uno/EnvStack.cxx	5 Jun 2007 15:06:18 -0000	1.3.2.1
@@ -225,22 +225,22 @@ static int s_getNextEnv(uno_Environment 
 	return res;
 } 
 
-extern "C" { static void s_pull(va_list param)
+extern "C" { static void s_pull(va_list * pParam)
 {
-	uno_EnvCallee * pCallee = va_arg(param, uno_EnvCallee *);
-       va_list       * xparam  = va_arg(param, va_list *);
+	uno_EnvCallee * pCallee = va_arg(*pParam, uno_EnvCallee *);
+    va_list       * pXparam = va_arg(*pParam, va_list *);
 
-       pCallee(*xparam);
+    pCallee(pXparam);
 }}
 
-static void s_callInto_v(uno_Environment * pEnv, uno_EnvCallee * pCallee, va_list param)
+static void s_callInto_v(uno_Environment * pEnv, uno_EnvCallee * pCallee, va_list * pParam)
 {
 	cppu::Enterable * pEnterable = reinterpret_cast<cppu::Enterable *>(pEnv->pReserved);
 	if (pEnterable)
-               pEnterable->callInto(s_pull, pCallee, &param);
+		pEnterable->callInto(s_pull, pCallee, pParam);
 				
 	else
-		pCallee(param);
+		pCallee(pParam);
 }
 
 static void s_callInto(uno_Environment * pEnv, uno_EnvCallee * pCallee, ...)
@@ -248,18 +248,18 @@ static void s_callInto(uno_Environment *
 	va_list param;
 
 	va_start(param, pCallee);
-	s_callInto_v(pEnv, pCallee, param);
+	s_callInto_v(pEnv, pCallee, &param);
 	va_end(param);
 }
 
-static void s_callOut_v(uno_Environment * pEnv, uno_EnvCallee * pCallee, va_list param)
+static void s_callOut_v(uno_Environment * pEnv, uno_EnvCallee * pCallee, va_list * pParam)
 {
 	cppu::Enterable * pEnterable = reinterpret_cast<cppu::Enterable *>(pEnv->pReserved);
 	if (pEnterable)
-		pEnterable->callOut_v(pCallee, param);
+		pEnterable->callOut_v(pCallee, pParam);
 
 	else
-		pCallee(param);
+		pCallee(pParam);
 }
 
 static void s_callOut(uno_Environment * pEnv, uno_EnvCallee * pCallee, ...)
@@ -267,44 +267,44 @@ static void s_callOut(uno_Environment * 
 	va_list param;
 
 	va_start(param, pCallee);
-	s_callOut_v(pEnv, pCallee, param);
+	s_callOut_v(pEnv, pCallee, &param);
 	va_end(param);
 }
 
-static void s_environment_invoke_v(uno_Environment *, uno_Environment *, uno_EnvCallee *, va_list);
+static void s_environment_invoke_v(uno_Environment *, uno_Environment *, uno_EnvCallee *, va_list *);
 
-extern "C" { static void s_environment_invoke_vv(va_list param)
+extern "C" { static void s_environment_invoke_vv(va_list * pParam)
 {
-	uno_Environment * pCurrEnv    = va_arg(param, uno_Environment *);
-	uno_Environment * pTargetEnv  = va_arg(param, uno_Environment *);
-	uno_EnvCallee   * pCallee = va_arg(param, uno_EnvCallee *);
-       va_list         *  xparam  = va_arg(param, va_list *);
+	uno_Environment * pCurrEnv    = va_arg(*pParam, uno_Environment *);
+	uno_Environment * pTargetEnv  = va_arg(*pParam, uno_Environment *);
+	uno_EnvCallee   * pCallee     = va_arg(*pParam, uno_EnvCallee *);
+    va_list         * pXparam     = va_arg(*pParam, va_list *);
 
-       s_environment_invoke_v(pCurrEnv, pTargetEnv, pCallee, *xparam);
+    s_environment_invoke_v(pCurrEnv, pTargetEnv, pCallee, pXparam);
 }}
 
-static void s_environment_invoke_v(uno_Environment * pCurrEnv, uno_Environment * pTargetEnv, uno_EnvCallee * pCallee, va_list param)
+static void s_environment_invoke_v(uno_Environment * pCurrEnv, uno_Environment * pTargetEnv, uno_EnvCallee * pCallee, va_list * pParam)
 {
 	uno_Environment * pNextEnv = NULL;
 	switch(s_getNextEnv(&pNextEnv, pCurrEnv, pTargetEnv))
 	{
 	case -1:
 		s_setCurrent(pNextEnv);
-               s_callOut(pCurrEnv, s_environment_invoke_vv, pNextEnv, pTargetEnv, pCallee, &param);
+		s_callOut(pCurrEnv, s_environment_invoke_vv, pNextEnv, pTargetEnv, pCallee, pParam);
 		s_setCurrent(pCurrEnv);
 		break;
 
 	case 0: {
 		uno_Environment * hld = s_getCurrent();
 		s_setCurrent(pCurrEnv);
-		pCallee(param);
+		pCallee(pParam);
 		s_setCurrent(hld);
 	}
 		break;
 
 	case 1:
 		s_setCurrent(pNextEnv);
-               s_callInto(pNextEnv, s_environment_invoke_vv, pNextEnv, pTargetEnv, pCallee, &param);
+		s_callInto(pNextEnv, s_environment_invoke_vv, pNextEnv, pTargetEnv, pCallee, pParam);
 		s_setCurrent(pCurrEnv);
 		break;
 	}
@@ -313,10 +313,10 @@ static void s_environment_invoke_v(uno_E
 		pNextEnv->release(pNextEnv);
 }
 
-extern "C" void SAL_CALL uno_Environment_invoke_v(uno_Environment * pTargetEnv, uno_EnvCallee * pCallee, va_list param)
+extern "C" void SAL_CALL uno_Environment_invoke_v(uno_Environment * pTargetEnv, uno_EnvCallee * pCallee, va_list * pParam)
 	SAL_THROW_EXTERN_C()
 {
-	s_environment_invoke_v(s_getCurrent(), pTargetEnv, pCallee, param);
+	s_environment_invoke_v(s_getCurrent(), pTargetEnv, pCallee, pParam);
 }
 
 extern "C" void SAL_CALL uno_Environment_invoke(uno_Environment * pEnv, uno_EnvCallee * pCallee, ...)
@@ -325,7 +325,7 @@ extern "C" void SAL_CALL uno_Environment
 	va_list param;
 
 	va_start(param, pCallee);
-	uno_Environment_invoke_v(pEnv, pCallee, param);
+	uno_Environment_invoke_v(pEnv, pCallee, &param);
 	va_end(param);
 }
 
Index: cppu/source/uno/cascade_mapping.cxx
===================================================================
RCS file: /cvs/udk/cppu/source/uno/cascade_mapping.cxx,v
retrieving revision 1.2
retrieving revision 1.2.2.1
diff -u -p -u -p -r1.2 -r1.2.2.1
--- cppu/source/uno/cascade_mapping.cxx	9 May 2007 13:38:28 -0000	1.2
+++ cppu/source/uno/cascade_mapping.cxx	5 Jun 2007 15:06:18 -0000	1.2.2.1
@@ -149,12 +149,12 @@ void MediatorMapping::release(void)
 	}
 }
 
-extern "C" { static void s_mapInterface_v(va_list param)
+extern "C" { static void s_mapInterface_v(va_list * pParam)
 {
-	void                            ** ppOut               = va_arg(param, void **);
-	void                             * pInterface          = va_arg(param, void *);
-	typelib_InterfaceTypeDescription * pInterfaceTypeDescr = va_arg(param, typelib_InterfaceTypeDescription *);
-	uno_Mapping                      * pMapping            = va_arg(param, uno_Mapping *);
+	void                            ** ppOut               = va_arg(*pParam, void **);
+	void                             * pInterface          = va_arg(*pParam, void *);
+	typelib_InterfaceTypeDescription * pInterfaceTypeDescr = va_arg(*pParam, typelib_InterfaceTypeDescription *);
+	uno_Mapping                      * pMapping            = va_arg(*pParam, uno_Mapping *);
 
 	pMapping->mapInterface(pMapping, ppOut, pInterface, pInterfaceTypeDescr);
 }}
Index: cppu/source/uno/lbenv.cxx
===================================================================
RCS file: /cvs/udk/cppu/source/uno/lbenv.cxx,v
retrieving revision 1.36
retrieving revision 1.36.2.1
diff -u -p -u -p -r1.36 -r1.36.2.1
--- cppu/source/uno/lbenv.cxx	9 May 2007 13:39:11 -0000	1.36
+++ cppu/source/uno/lbenv.cxx	5 Jun 2007 15:06:18 -0000	1.36.2.1
@@ -375,10 +375,10 @@ static void SAL_CALL defenv_registerProx
 }
 
 //------------------------------------------------------------------------------
-static void SAL_CALL s_stub_defenv_revokeInterface(va_list param)
+static void SAL_CALL s_stub_defenv_revokeInterface(va_list * pParam)
 {
-	uno_ExtEnvironment * pEnv       = va_arg(param, uno_ExtEnvironment *);
-	void               * pInterface = va_arg(param, void *);
+	uno_ExtEnvironment * pEnv       = va_arg(*pParam, uno_ExtEnvironment *);
+	void               * pInterface = va_arg(*pParam, void *);
 
     OSL_ENSURE( pEnv && pInterface, "### null ptr!" );
     uno_DefaultEnvironment * that =
Index: cppu/test/EnvStack_tester/EnvStack.tester.cxx
===================================================================
RCS file: /cvs/udk/cppu/test/EnvStack_tester/EnvStack.tester.cxx,v
retrieving revision 1.2
retrieving revision 1.2.2.1
diff -u -p -u -p -r1.2 -r1.2.2.1
--- cppu/test/EnvStack_tester/EnvStack.tester.cxx	9 May 2007 13:41:59 -0000	1.2
+++ cppu/test/EnvStack_tester/EnvStack.tester.cxx	5 Jun 2007 15:09:13 -0000	1.2.2.1
@@ -61,9 +61,9 @@ static rtl::OUString s_getCurrentEnvDcp(
 	return env_dcp;
 }
 
-extern "C" { static void s_getCurrentEnvDcp_v(va_list param)
+extern "C" { static void s_getCurrentEnvDcp_v(va_list * pParam)
 {
-	rtl_uString ** ppEnvDcp  = va_arg(param, rtl_uString **);
+	rtl_uString ** ppEnvDcp  = va_arg(*pParam, rtl_uString **);
 
 	rtl::OUString env_dcp(s_getCurrentEnvDcp());
 	
Index: cppu/test/EnvStack_tester/ProbeEnv.cxx
===================================================================
RCS file: /cvs/udk/cppu/test/EnvStack_tester/ProbeEnv.cxx,v
retrieving revision 1.2
retrieving revision 1.2.2.1
diff -u -p -u -p -r1.2 -r1.2.2.1
--- cppu/test/EnvStack_tester/ProbeEnv.cxx	9 May 2007 13:42:24 -0000	1.2
+++ cppu/test/EnvStack_tester/ProbeEnv.cxx	5 Jun 2007 15:09:13 -0000	1.2.2.1
@@ -33,6 +33,9 @@
  *
  ************************************************************************/
 
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_cppu.hxx"
+
 #include "cppu/EnvDcp.hxx"
 
 #include "cppu/helper/purpenv/Environment.hxx"
@@ -65,8 +68,8 @@ protected:
 	virtual void v_enter(void);
 	virtual void v_leave(void);
 
-	virtual void v_callInto_v(uno_EnvCallee * pCallee, va_list param);
-	virtual void v_callOut_v (uno_EnvCallee * pCallee, va_list param);
+	virtual void v_callInto_v(uno_EnvCallee * pCallee, va_list * pParam);
+	virtual void v_callOut_v (uno_EnvCallee * pCallee, va_list * pParam);
 
 	virtual int  v_isValid   (rtl::OUString * pReason);
 };
@@ -98,24 +101,24 @@ static void s_checkGEnvValidity(void)
 	}
 }
 
-void TestEnv::v_callInto_v(uno_EnvCallee * pCallee, va_list param)
+void TestEnv::v_callInto_v(uno_EnvCallee * pCallee, va_list * pParam)
 {
 	g_commentStack += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("-into"));
 	g_commentStack += cppu::EnvDcp::getPurpose(m_pEnv->pTypeName);
 
 	s_checkGEnvValidity();
 
-	pCallee(param);
+	pCallee(pParam);
 }
 
-void TestEnv::v_callOut_v(uno_EnvCallee * pCallee, va_list param)
+void TestEnv::v_callOut_v(uno_EnvCallee * pCallee, va_list * pParam)
 {
 	g_commentStack += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("-out"));
 	g_commentStack += cppu::EnvDcp::getPurpose(m_pEnv->pTypeName);
 
 	s_checkGEnvValidity();
 
-	pCallee(param);
+	pCallee(pParam);
 }
 
 void TestEnv::v_enter(void)
Index: cppu/test/EnvStack_tester/ProbeEnv.def
===================================================================
RCS file: cppu/test/EnvStack_tester/ProbeEnv.def
diff -N cppu/test/EnvStack_tester/ProbeEnv.def
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cppu/test/EnvStack_tester/ProbeEnv.def	31 May 2007 08:41:36 -0000	1.3.2.2
@@ -0,0 +1,8 @@
+HEAPSIZE	  0
+EXPORTS
+	uno_initEnvironment
+	uno_ext_getMapping
+
+
+
+
Index: cppu/test/ObjectFactory/CppObject.cxx
===================================================================
RCS file: /cvs/udk/cppu/test/ObjectFactory/CppObject.cxx,v
retrieving revision 1.2
retrieving revision 1.2.2.1
diff -u -p -u -p -r1.2 -r1.2.2.1
--- cppu/test/ObjectFactory/CppObject.cxx	9 May 2007 13:43:47 -0000	1.2
+++ cppu/test/ObjectFactory/CppObject.cxx	5 Jun 2007 15:15:55 -0000	1.2.2.1
@@ -33,6 +33,9 @@
  *
  ************************************************************************/
 
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_cppu.hxx"
+
 #include "cppu/EnvDcp.hxx"
 #include "cppuhelper/implbase1.hxx"
 
Index: cppu/test/ObjectFactory/ObjectFactory.cxx
===================================================================
RCS file: /cvs/udk/cppu/test/ObjectFactory/ObjectFactory.cxx,v
retrieving revision 1.2
retrieving revision 1.2.2.1
diff -u -p -u -p -r1.2 -r1.2.2.1
--- cppu/test/ObjectFactory/ObjectFactory.cxx	9 May 2007 13:44:08 -0000	1.2
+++ cppu/test/ObjectFactory/ObjectFactory.cxx	5 Jun 2007 15:15:55 -0000	1.2.2.1
@@ -33,6 +33,9 @@
  *
  ************************************************************************/
 
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_cppu.hxx"
+
 #define CPPU_test_ObjectFactory_IMPL
 
 #include "UnoObject.hxx"
Index: cppu/test/ObjectFactory/UnoObject.cxx
===================================================================
RCS file: /cvs/udk/cppu/test/ObjectFactory/UnoObject.cxx,v
retrieving revision 1.2
retrieving revision 1.2.2.1
diff -u -p -u -p -r1.2 -r1.2.2.1
--- cppu/test/ObjectFactory/UnoObject.cxx	9 May 2007 13:44:33 -0000	1.2
+++ cppu/test/ObjectFactory/UnoObject.cxx	5 Jun 2007 15:15:55 -0000	1.2.2.1
@@ -33,6 +33,9 @@
  *
  ************************************************************************/
 
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_cppu.hxx"
+
 #include "osl/interlck.h"
 #include "uno/environment.h"
 #include "uno/mapping.h"
Index: cppu/test/ObjectFactory/empty.def
===================================================================
RCS file: cppu/test/ObjectFactory/empty.def
diff -N cppu/test/ObjectFactory/empty.def
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cppu/test/ObjectFactory/empty.def	5 Jun 2007 15:15:12 -0000	1.1.4.2
@@ -0,0 +1,5 @@
+HEAPSIZE	  0
+EXPORTS
+
+
+
Index: cppu/test/cascade_mapping/TestMapping.def
===================================================================
RCS file: cppu/test/cascade_mapping/TestMapping.def
diff -N cppu/test/cascade_mapping/TestMapping.def
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cppu/test/cascade_mapping/TestMapping.def	5 Jun 2007 15:15:12 -0000	1.3.2.2
@@ -0,0 +1,11 @@
+LIBRARY	  cppu3
+DESCRIPTION	'StarView 3.00  680 m124'
+DATA		  READ WRITE SHARED
+HEAPSIZE	  0
+EXPORTS
+	uno_initEnvironment
+	uno_ext_getMapping
+
+
+
+
Index: cppu/test/cascade_mapping/makefile.mk
===================================================================
RCS file: /cvs/udk/cppu/test/cascade_mapping/makefile.mk,v
retrieving revision 1.2
retrieving revision 1.2.2.1
diff -u -p -u -p -r1.2 -r1.2.2.1
--- cppu/test/cascade_mapping/makefile.mk	9 May 2007 13:46:59 -0000	1.2
+++ cppu/test/cascade_mapping/makefile.mk	5 Jun 2007 15:16:31 -0000	1.2.2.1
@@ -44,6 +44,7 @@ NO_SHL_DESCRIPTION := TRUE
 
 .INCLUDE :  settings.mk
 
+CFLAGS += -fPIC
 
 VERSIONOBJ := # NO GetVersionInfo symbols :-)
 ENVINCPRE  := -I$(OUT)$/inc$/$(TARGET)
Index: cppu/test/cascade_mapping/path.test.def
===================================================================
RCS file: cppu/test/cascade_mapping/path.test.def
diff -N cppu/test/cascade_mapping/path.test.def
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cppu/test/cascade_mapping/path.test.def	5 Jun 2007 15:15:12 -0000	1.3.2.2
@@ -0,0 +1,8 @@
+LIBRARY	  cppu3
+DESCRIPTION	'StarView 3.00  680 m124'
+DATA		  READ WRITE SHARED
+HEAPSIZE	  0
+EXPORTS
+  CALLEE
+
+
Index: cppu/test/env_tester/TestEnvironment.cxx
===================================================================
RCS file: /cvs/udk/cppu/test/env_tester/TestEnvironment.cxx,v
retrieving revision 1.2
retrieving revision 1.2.2.1
diff -u -p -u -p -r1.2 -r1.2.2.1
--- cppu/test/env_tester/TestEnvironment.cxx	9 May 2007 13:47:51 -0000	1.2
+++ cppu/test/env_tester/TestEnvironment.cxx	8 Jun 2007 09:10:17 -0000	1.2.2.1
@@ -33,6 +33,9 @@
  *
  ************************************************************************/
 
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_cppu.hxx"
+
 #include "uno/environment.h"
 
 
Index: cppu/test/env_tester/TestEnvironment.def
===================================================================
RCS file: cppu/test/env_tester/TestEnvironment.def
diff -N cppu/test/env_tester/TestEnvironment.def
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cppu/test/env_tester/TestEnvironment.def	5 Jun 2007 15:15:13 -0000	1.3.2.2
@@ -0,0 +1,7 @@
+LIBRARY	  cppu3
+DESCRIPTION	'StarView 3.00  680 m124'
+DATA		  READ WRITE SHARED
+HEAPSIZE	  0
+EXPORTS
+  uno_initEnvironment
+
Index: cppu/test/env_tester/register.test.cxx
===================================================================
RCS file: /cvs/udk/cppu/test/env_tester/register.test.cxx,v
retrieving revision 1.2
retrieving revision 1.2.2.1
diff -u -p -u -p -r1.2 -r1.2.2.1
--- cppu/test/env_tester/register.test.cxx	9 May 2007 13:48:45 -0000	1.2
+++ cppu/test/env_tester/register.test.cxx	5 Jun 2007 15:16:32 -0000	1.2.2.1
@@ -50,7 +50,7 @@ static rtl::OUString s_test_getEnvironme
 	rtl::OUString result(RTL_CONSTASCII_USTRINGPARAM("\ts_test_getEnvironment("));
 	result += envDcp;
 	result += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(", "));
-	result += rtl::OUString::valueOf((sal_Int32)pContext);
+	result += rtl::OUString::valueOf((long)pContext);
 	result += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(")\n"));
 
 	uno::Environment env(envDcp, pContext);
@@ -80,9 +80,9 @@ static rtl::OUString s_test_regetEnviron
 	result += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(", "));
 	result += envDcp2;
 	result += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(", "));
-	result += rtl::OUString::valueOf((sal_Int32)pContext1);
+	result += rtl::OUString::valueOf((long)pContext1);
 	result += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(", " ));
-	result += rtl::OUString::valueOf((sal_Int32)pContext2);
+	result += rtl::OUString::valueOf((long)pContext2);
 	result += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(")\n"));
 
 	uno::Environment env1(envDcp1, pContext1);
@@ -135,7 +135,7 @@ static rtl::OUString s_test_uno_getRegis
 	rtl::OUString result(RTL_CONSTASCII_USTRINGPARAM("\ts_test_uno_getRegisteredEnvironments_registered("));
 	result += envDcp;
 	result += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(", "));
-	result += rtl::OUString::valueOf((sal_Int32)pContext);
+	result += rtl::OUString::valueOf((long)pContext);
 	result += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(")\n"));
 
 	uno::Environment env(envDcp, pContext);
@@ -151,7 +151,7 @@ static rtl::OUString s_test_uno_getRegis
 	rtl::OUString result(RTL_CONSTASCII_USTRINGPARAM("\ts_test_uno_getRegisteredEnvironments_notRegistered("));
 	result += envDcp;
 	result += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(", "));
-	result += rtl::OUString::valueOf((sal_Int32)pContext);
+	result += rtl::OUString::valueOf((long)pContext);
 	result += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(")\n"));
 
 	uno::Environment env(envDcp, pContext);
@@ -168,7 +168,7 @@ static rtl::OUString s_test_uno_createEn
 	rtl::OUString result(RTL_CONSTASCII_USTRINGPARAM("\ts_test_uno_createEnvironment("));
 	result += envDcp;
 	result += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(", "));
-	result += rtl::OUString::valueOf((sal_Int32)pContext);
+	result += rtl::OUString::valueOf((long)pContext);
 	result += rtl::OUString(RTL_CONSTASCII_USTRINGPARAM(")\n"));
 
 	uno_Environment * pEnv = NULL;
Index: cppu/test/purpenvhelper/TestEnv.cxx
===================================================================
RCS file: /cvs/udk/cppu/test/purpenvhelper/TestEnv.cxx,v
retrieving revision 1.2
retrieving revision 1.2.2.2
diff -u -p -u -p -r1.2 -r1.2.2.2
--- cppu/test/purpenvhelper/TestEnv.cxx	9 May 2007 13:49:26 -0000	1.2
+++ cppu/test/purpenvhelper/TestEnv.cxx	8 Jun 2007 09:10:17 -0000	1.2.2.2
@@ -33,6 +33,10 @@
  *
  ************************************************************************/
 
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_cppu.hxx"
+
+
 #include "cppu/EnvDcp.hxx"
 
 #include "cppu/helper/purpenv/Environment.hxx"
@@ -64,8 +68,8 @@ protected:
 	virtual void v_enter(void);
 	virtual void v_leave(void);
 
-	virtual void v_callInto_v(uno_EnvCallee * pCallee, va_list param);
-	virtual void v_callOut_v (uno_EnvCallee * pCallee, va_list param);
+	virtual void v_callInto_v(uno_EnvCallee * pCallee, va_list * pParam);
+	virtual void v_callOut_v (uno_EnvCallee * pCallee, va_list * pParam);
 
 	virtual int  v_isValid   (rtl::OUString * pReason);
 };
@@ -82,17 +86,17 @@ TestEnv::~TestEnv(void)
 }
 
 
-void TestEnv::v_callInto_v(uno_EnvCallee * pCallee, va_list param)
+void TestEnv::v_callInto_v(uno_EnvCallee * pCallee, va_list * pParam)
 {
 	++ m_inCount;
-	pCallee(param);
+	pCallee(pParam);
 	-- m_inCount;
 }
 
-void TestEnv::v_callOut_v(uno_EnvCallee * pCallee, va_list param)
+void TestEnv::v_callOut_v(uno_EnvCallee * pCallee, va_list * pParam)
 {
 	-- m_inCount;
-	pCallee(param);
+	pCallee(pParam);
 	++ m_inCount;
 }
 
Index: cppu/util/makefile.mk
===================================================================
RCS file: /cvs/udk/cppu/util/makefile.mk,v
retrieving revision 1.9
retrieving revision 1.9.2.1
diff -u -p -u -p -r1.9 -r1.9.2.1
--- cppu/util/makefile.mk	9 May 2007 13:51:06 -0000	1.9
+++ cppu/util/makefile.mk	5 Jun 2007 15:18:13 -0000	1.9.2.1
@@ -79,7 +79,11 @@ DEF1NAME=$(SHL1TARGET)
 
 SHL2TARGET  := $(NAMEpurpenv_helper)
 DEF2NAME    := $(SHL2TARGET)
+.IF "$(CPUNAME)" == "X86_64"
+SHL2VERSIONMAP:=$(SHL2TARGET).$(CPUNAME).map
+.ELSE
 SHL2VERSIONMAP:=$(SHL2TARGET).map
+.ENDIF
 SHL2DEF     := $(MISC)$/$(SHL2TARGET).def
 SHL2IMPLIB  := i$(SHL2TARGET)
 SHL2STDLIBS := $(CPPULIB) $(SALHELPERLIB) $(SALLIB) 
Index: cppu/util/uno_purpenvhelpergcc3.X86_64.map
===================================================================
RCS file: cppu/util/uno_purpenvhelpergcc3.X86_64.map
diff -N cppu/util/uno_purpenvhelpergcc3.X86_64.map
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ cppu/util/uno_purpenvhelpergcc3.X86_64.map	5 Jun 2007 15:18:13 -0000	1.1.2.1
@@ -0,0 +1,8 @@
+UDK_3_0_0 {
+    global:
+        _ZN4cppu6helper7purpenv13createMappingEPP12_uno_MappingP16_uno_EnvironmentS6_PFvbPvS7_P33_typelib_TypeDescriptionReferenceP24_typelib_MethodParameteriPK24_typelib_TypeDescriptionS7_PS7_PP8_uno_AnyES7_;
+        _ZN4cppu6helper7purpenv29Environment_initWithEnterableEP16_uno_EnvironmentPNS_9EnterableE;
+
+    local:
+        *;
+};
