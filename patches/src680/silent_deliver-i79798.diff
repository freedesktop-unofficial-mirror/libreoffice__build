--- solenv/bin/build.pl	27 Jun 2007 17:47:49 -0000	1.157
+++ solenv/bin/build.pl	19 Jul 2007 13:15:08 -0000
@@ -219,7 +219,7 @@
     $StandDir = get_stand_dir();   # This also sets $CurrentPrj
     provide_consistency() if (defined $ENV{CWS_WORK_STAMP} && defined($ENV{COMMON_ENV_TOOLS}));
 
-    $deliver_commando = $ENV{DELIVER};
+    $deliver_commando = $ENV{DELIVER} . " -silent";
     $deliver_commando .= ' '. $dlv_switch if ($dlv_switch);
     $ENV{mk_tmp}++;
     %prj_platform = ();
--- solenv/bin/deliver.pl	5 Jul 2007 09:01:17 -0000	1.120
+++ solenv/bin/deliver.pl	19 Jul 2007 13:15:08 -0000
@@ -107,6 +107,7 @@ $opt_force          = 0;            # op
 $opt_minor          = 0;            # option deliver in minor
 $opt_check          = 0;            # do actually execute any action
 $opt_zip            = 0;            # create an additional zip file
+$opt_silent         = 0;            # be silent, only report errors
 $opt_log            = 1;            # create an additional log file
 $opt_link           = 0;            # hard link files into the solver to save disk space
 $opt_deloutput      = 0;            # delete the output tree for the project once successfully delivered
@@ -157,7 +158,7 @@ write_log() if $opt_log;
 zip_files() if $opt_zip;
 cleanup() if $opt_delete;
 delete_output() if $opt_deloutput;
-print_stats();
+print_stats() if !$opt_silent;
 
 exit($error);
 
@@ -288,19 +289,21 @@ sub do_linklib 
         }
 
         if ( $opt_check ) {
-            if ( $opt_delete ) {
-                print "REMOVE: $to_dir/$lib_major\n" if $long;
-                print "REMOVE: $to_dir/$lib_base\n";
-            }
-            else {
-                print "LINKLIB: $to_dir/$lib -> $to_dir/$lib_major\n" if $long;
-                print "LINKLIB: $to_dir/$lib -> $to_dir/$lib_base\n";
+            if ( !$opt_silent ) {
+                if ( $opt_delete ) {
+                    print "REMOVE: $to_dir/$lib_major\n" if $long;
+                    print "REMOVE: $to_dir/$lib_base\n";
+                }
+                else {
+                    print "LINKLIB: $to_dir/$lib -> $to_dir/$lib_major\n" if $long;
+                    print "LINKLIB: $to_dir/$lib -> $to_dir/$lib_base\n";
+                }
             }
         }
         else {
             if ( $opt_delete ) {
-                print "REMOVE: $to_dir/$lib_major\n" if $long;
-                print "REMOVE: $to_dir/$lib_base\n";
+                print "REMOVE: $to_dir/$lib_major\n" if $long && !$opt_silent;
+                print "REMOVE: $to_dir/$lib_base\n" if !$opt_silent;
                 unlink "$to_dir/$lib_major" if $long;
                 unlink "$to_dir/$lib_base";
                 if ( $opt_zip ) {
@@ -322,7 +325,7 @@ sub do_linklib 
             # remove old symlinks
             unlink(@symlibs);
             foreach $symlib (@symlibs) {
-                print "LINKLIB: $lib -> $symlib\n";
+                print "LINKLIB: $lib -> $symlib\n" if !$opt_silent;
                 if ( !symlink("$lib", "$symlib") ) {
                     print_error("can't symlink $lib -> $symlib: $!",0);
                 }
@@ -375,14 +378,14 @@ sub do_symlink
     
     if ( $opt_check ) {
         if ( $opt_delete ) {
-            print "REMOVE: $to\n";
+            print "REMOVE: $to\n" if !$opt_silent;
         }
         else {
             print "SYMLINK $from -> $to\n";
         }
     }
     else {
-        print "REMOVE: $to\n";
+        print "REMOVE: $to\n" if !$opt_silent;
         unlink $to;
         if ( $opt_delete ) {
             push_on_ziplist($to) if $opt_zip;
@@ -422,6 +425,7 @@ sub parse_options 
         $arg =~ /^-force$/  and $opt_force  = 1 and next;
         $arg =~ /^-minor$/  and $opt_minor  = 1 and next;
         $arg =~ /^-check$/  and $opt_check  = 1 and next;
+        $arg =~ /^-silent$/ and $opt_silent = 1 and next;
         $arg =~ /^-zip$/    and $opt_zip    = 1 and next;
         $arg =~ /^-delete$/ and $opt_delete = 1 and next;
         $arg =~ /^-dontdeletecommon$/ and $dontdeletecommon = 1 and next;
@@ -799,7 +803,7 @@ sub copy_if_newer 
     return 0 unless ($from_stat_ref = is_newer($from, $to, $touch));
 
     if ( $opt_delete ) {
-        print "REMOVE: $to\n";
+        print "REMOVE: $to\n" if !$opt_silent;
         return 1 if $opt_check;
         my $rc = unlink($to);
         return 1 if $rc;
@@ -809,16 +813,16 @@ sub copy_if_newer 
     if( !$opt_check && $opt_link ) {
         # hard link if possible
         if( link($from, $to) ){
-            print "LINK: $from -> $to\n";
+            print "LINK: $from -> $to\n" if !$opt_silent;
             return 1;
         }
     }
 
     if( $touch ) {
-       print "TOUCH: $from -> $to\n";
+       print "TOUCH: $from -> $to\n" if !$opt_silent;
     }
     else {
-       print "COPY: $from -> $to\n";
+        print "COPY: $from -> $to\n" if !$opt_silent;
     }
      
     return 1 if( $opt_check );
@@ -1317,11 +1321,11 @@ sub write_log
     foreach my $log ( @logs ) {
         $log_file{$log} = expand_macros( $log_file{$log} );
         if ( $opt_delete ) {
-            print "LOG: removing $log_file{$log}\n";
+            print "LOG: removing $log_file{$log}\n" if !$opt_silent;;
             next if ( $opt_check );
             unlink $log_file{$log};
         } else {
-            print "LOG: writing $log_file{$log}\n";
+            print "LOG: writing $log_file{$log}\n" if !$opt_silent;
             next if ( $opt_check );
             open( LOGFILE, "> $log_file{$log}" ) or warn "Error: could not open log file.";
             foreach my $item ( @$log ) {
@@ -1488,6 +1492,7 @@ sub usage 
         print STDERR "  -link        hard link files into the solver to save disk space\n";
     }
     print STDERR "  -minor       deliver into minor (milestone)\n";
+    print STDERR "  -silent      be silent, only report errors\n";
     print STDERR "  -zip         additionally create zip files of delivered content\n";
     print STDERR "The option -zip and a destination-path are mutually exclusive.\n";
     exit($exit_code);
