--- io/prj/tests.lst	1970-01-01 01:00:00.000000000 +0100
+++ io/prj/tests.lst	2007-09-07 08:12:53.000000000 +0200
@@ -0,0 +1,2 @@
+io   io\test\stm                                        nmake - all io_test_stm NULL
+io   io\test                                            nmake - all io_test NULL
--- io/test/stm/datatest.cxx	2006-09-17 01:45:12.000000000 +0200
+++ io/test/stm/datatest.cxx	2007-09-07 11:12:59.000000000 +0200
@@ -693,8 +693,8 @@ public:
 
 
 private:
-	void OObjectStreamTest::testObject( 	const Reference <XObjectOutputStream > &rOut, 
-											const Reference <XObjectInputStream> &rIn );
+	void testObject( 	const Reference <XObjectOutputStream > &rOut, 
+						const Reference <XObjectInputStream> &rIn );
 
 private:
 };
--- io/test/stm/pipetest.cxx	2006-09-17 01:45:38.000000000 +0200
+++ io/test/stm/pipetest.cxx	2007-09-07 11:12:22.000000000 +0200
@@ -362,7 +362,7 @@ void OPipeTest::testBufferResizing( cons
 		output->writeBytes( createIntSeq( i ) );
 	}
 
-	for( i = 0 ; i < iMax ; i ++ ) {
+	for( int i = 0 ; i < iMax ; i ++ ) {
 		input->readBytes( seqRead, createIntSeq(i).getLength() );
 		ERROR_ASSERT( ! strcmp( 	(char*) seqRead.getArray() ,
 									(char*) createIntSeq(i).getArray() ) ,
@@ -397,7 +397,8 @@ void OPipeTest::testMultithreading( cons
 
 	p->create();
 
-	for(int  i = 0 ; sal_True ; i ++ ) {
+    int i = 0;
+	for( ; sal_True ; i ++ ) {
 		if( 0 == input->readBytes( seqRead, createIntSeq(i).getLength() ) ) {
 			// eof reached !
 			break;
