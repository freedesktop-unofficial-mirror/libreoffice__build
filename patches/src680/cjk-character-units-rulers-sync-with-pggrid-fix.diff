diff -uNr svtools/inc/ruler.hxx svtools/inc/ruler.hxx
--- svtools/inc/ruler.hxx	2007-12-26 14:54:40.000000000 +0800
+++ svtools/inc/ruler.hxx	2007-12-26 15:01:40.000000000 +0800
@@ -894,6 +894,8 @@
 
     void                SetCharWidth( long nWidth ) { mnCharWidth = nWidth ; }
     void                SetLineHeight( long nHeight ) { mnLineHeight = nHeight ; }
+
+    void                DrawTicks();
 };
 
 #endif  // _RULER_HXX
diff -uNr svtools/source/control/ruler.cxx svtools/source/control/ruler.cxx
--- svtools/source/control/ruler.cxx	2007-12-26 14:54:42.000000000 +0800
+++ svtools/source/control/ruler.cxx	2007-12-26 15:01:48.000000000 +0800
@@ -492,14 +492,14 @@
     long    nTick2 ;
     if ( mnUnitIndex == RULER_UNIT_CHAR )
     {
-        nTick3 = mnCharWidth;
+        nTick3 = mnCharWidth*2;
         nTickCount = mnCharWidth;
         nTickUnit = mnCharWidth;
         nTick2 = mnCharWidth;
     }
     else if ( mnUnitIndex == RULER_UNIT_LINE )
     {
-        nTick3 = mnLineHeight;
+        nTick3 = mnLineHeight*2;
         nTickCount = mnLineHeight;
         nTickUnit = mnLineHeight;
         nTick2 = mnLineHeight;
@@ -3235,3 +3235,12 @@
 USHORT              Ruler::GetIndentCount() const { return mpData->nIndents; }
 const RulerIndent*  Ruler::GetIndents() const { return mpData->pIndents; }
 
+/* ---------------------------------------------------
+ *
+ * ---------------------------------------------------*/
+void Ruler::DrawTicks()
+{
+    mbFormat = TRUE;
+    ImplDraw();
+}
+
diff -uNr sw/source/ui/inc/pggrid.hxx sw/source/ui/inc/pggrid.hxx
--- sw/source/ui/inc/pggrid.hxx	2007-12-26 14:54:15.000000000 +0800
+++ sw/source/ui/inc/pggrid.hxx	2007-12-26 15:00:30.000000000 +0800
@@ -99,6 +99,8 @@
     Size            m_aPageSize;
     sal_Bool        m_bVertical;
 	sal_Bool		m_bSquaredMode;
+    sal_Bool        m_bHRulerChanged;
+    sal_Bool        m_bVRulerChanged;
 
     SwTextGridPage(Window *pParent, const SfxItemSet &rSet);
     ~SwTextGridPage();
diff -uNr sw/source/ui/misc/pggrid.cxx sw/source/ui/misc/pggrid.cxx
--- sw/source/ui/misc/pggrid.cxx	2007-12-26 14:54:15.000000000 +0800
+++ sw/source/ui/misc/pggrid.cxx	2007-12-26 15:00:31.000000000 +0800
@@ -128,7 +128,9 @@
     m_bRubyUserValue(sal_False),
     m_aPageSize(MM50, MM50),
     m_bVertical(sal_False),
-    m_bSquaredMode(sal_False)
+    m_bSquaredMode(sal_False),
+    m_bHRulerChanged( sal_False ),
+    m_bVRulerChanged( sal_False )
 {
     FreeResource();
 
@@ -261,7 +263,12 @@
         PutGridItem(rSet);
         bRet = TRUE;
     }
-
+    // draw ticks of ruler
+    SwView * pView = ::GetActiveView();
+    if ( m_bHRulerChanged )
+        pView->GetHLineal().DrawTicks();
+    if ( m_bVRulerChanged )
+        pView->GetVLineal().DrawTicks();
     return bRet;
 }
 /*-- 06.02.2002 15:25:40---------------------------------------------------
@@ -349,10 +356,17 @@
         aGridItem.SetColor(aColorLB.GetSelectEntryColor());
         rSet.Put(aGridItem);
 /// Amelia
-        SwView * pView = ::GetActiveView();
-        pView->GetHLineal().SetCharWidth((long)(aCharWidthMF.GetValue(FUNIT_TWIP)/56.7));
-        pView->GetVLineal().SetLineHeight((long)(aTextSizeMF.GetValue(FUNIT_TWIP)/56.7));
-
+        if ( aGridItem.GetGridType() != GRID_NONE )
+        {
+            SwView * pView = ::GetActiveView();
+            if ( aGridItem.GetGridType() == GRID_LINES_CHARS )
+            {
+                pView->GetHLineal().SetCharWidth((long)(aCharWidthMF.GetValue(FUNIT_TWIP)/56.7));
+                m_bHRulerChanged = sal_True;
+            }
+            pView->GetVLineal().SetLineHeight((long)(aTextSizeMF.GetValue(FUNIT_TWIP)/56.7));
+            m_bVRulerChanged = sal_True;
+        }
 }
 /* -----------------------------08.02.2002 10:54------------------------------
 
