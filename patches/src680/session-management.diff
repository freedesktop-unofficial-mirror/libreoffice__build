--- vcl/unx/source/app/sm.cxx	2005-11-01 11:38:27.000000000 +0100
+++ vcl/unx/source/app/sm.cxx	2006-02-17 15:02:36.000000000 +0100
@@ -201,6 +201,7 @@ int					ICEConnectionObserver::nWakeupFi
 // HACK
 bool SessionManagerClient::bDocSaveDone = false;
 
+bool SessionManagerClient::bSaveDoneSent = false;
 
 static SmProp*	pSmProps = NULL;
 static SmProp**	ppSmProps = NULL;
@@ -286,12 +287,21 @@ IMPL_STATIC_LINK( SessionManagerClient, 
 IMPL_STATIC_LINK( SessionManagerClient, InteractionHdl, void*, pDummy )
 {
     SMprintf( "interaction link\n" );
-    if( pOneInstance )
-    {
-        SalSessionInteractionEvent aEvent( true );
-        pOneInstance->CallCallback( &aEvent );
-    }
+ 
+	bool bExit = GetpApp()->QueryExit();
+
+// 	if( pOneInstance )
+//     {
+//         SalSessionInteractionEvent aEvent( true );
+//         pOneInstance->CallCallback( &aEvent );
+//     }
+
     
+	interactionDone( !bExit );
+
+ 	if( !bSaveDoneSent )
+ 		saveDone();
+
     return 0;
 }
 
@@ -304,6 +314,9 @@ IMPL_STATIC_LINK( SessionManagerClient, 
         pOneInstance->CallCallback( &aEvent );
     }
     
+ 	if( !bSaveDoneSent )
+ 		saveDone( false );
+
     return 0;
 }
 
@@ -326,6 +339,7 @@ void SessionManagerClient::SaveYourselfP
                 ( interact_style == SmInteractStyleAny ? "SmInteractStyleAny" : "<unknown>" ) ),
               false ? "true" : "false"
               );
+	bSaveDoneSent = false;
 	BuildSmPropertyList();
 #ifdef USE_SM_EXTENSION
     bDocSaveDone = false;
@@ -340,7 +354,11 @@ void SessionManagerClient::SaveYourselfP
         SessionManagerClient::saveDone();
         return;
     }
-    Application::PostUserEvent( STATIC_LINK( (void*)(shutdown ? 0xffffffff : 0x0), SessionManagerClient, SaveYourselfHdl ) );
+	if( shutdown && interact_style == SmInteractStyleAny && !fast ) {
+		queryInteraction();
+		saveDone();
+	} else
+		Application::PostUserEvent( STATIC_LINK( (void*)(shutdown ? 0xffffffff : 0x0), SessionManagerClient, SaveYourselfHdl ) );
     SMprintf( "waiting for save yourself event to be processed\n" );
 #endif
 }
@@ -393,20 +411,21 @@ void SessionManagerClient::InteractProc(
         Application::PostUserEvent( STATIC_LINK( NULL, SessionManagerClient, InteractionHdl ) );
 }
 
-void SessionManagerClient::saveDone()
+void SessionManagerClient::saveDone( bool bSuccess )
 {
     if( aSmcConnection )
     {
         ICEConnectionObserver::lock();
-        SmcSetProperties( aSmcConnection, nSmProps, ppSmProps );
-        SmcSaveYourselfDone( aSmcConnection, True );
+		if( bSuccess )
+			SmcSetProperties( aSmcConnection, nSmProps, ppSmProps );
+        SmcSaveYourselfDone( aSmcConnection, bSuccess );
         SMprintf( "sent SaveYourselfDone\n" );
-        bDocSaveDone = true;
+        bDocSaveDone = bSuccess;
+		bSaveDoneSent = true;
         ICEConnectionObserver::unlock();
     }
 }
 
-
 void SessionManagerClient::open()
 {
 	static SmcCallbacks aCallbacks;
@@ -505,12 +524,12 @@ bool SessionManagerClient::queryInteract
     return bRet;
 }
 
-void SessionManagerClient::interactionDone()
+void SessionManagerClient::interactionDone( bool bCancelShutdown )
 {
     if( aSmcConnection )
     {
         ICEConnectionObserver::lock();
-        SmcInteractDone( aSmcConnection, False );
+        SmcInteractDone( aSmcConnection, bCancelShutdown );
         ICEConnectionObserver::unlock();
     }
 }
--- vcl/unx/inc/sm.hxx	2005-11-01 11:36:58.000000000 +0100
+++ vcl/unx/inc/sm.hxx	2006-02-17 14:36:13.000000000 +0100
@@ -44,7 +44,8 @@ class SessionManagerClient
 {
 	static SmcConn			aSmcConnection;
 	static ByteString		aClientID;
-    static bool			bDocSaveDone;
+    static bool			    bDocSaveDone;
+	static bool             bSaveDoneSent;
 
 	static void SaveYourselfProc(		SmcConn connection,
 										SmPointer client_data,
@@ -73,8 +74,8 @@ public:
 
     static bool checkDocumentsSaved();
     static bool queryInteraction();
-    static void saveDone();
-    static void interactionDone();
+    static void saveDone( bool bSuccess = true );
+    static void interactionDone( bool bCancelShutdown = false );
 
 	static String getExecName();
 	static VCL_DLLPUBLIC const ByteString&  getSessionID();
