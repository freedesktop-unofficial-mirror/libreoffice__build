Index: psprint/inc/psprint/fontcache.hxx
===================================================================
RCS file: /cvs/gsl/psprint/inc/psprint/fontcache.hxx,v
retrieving revision 1.5
diff -u -r1.5 fontcache.hxx
--- psprint/inc/psprint/fontcache.hxx	31 Jan 2005 08:58:41 -0000	1.5
+++ psprint/inc/psprint/fontcache.hxx	27 Jun 2005 09:53:52 -0000
@@ -85,7 +85,6 @@
     typedef std::list< PrintFontManager::PrintFont* > FontCacheEntry;
     struct FontFile
     {
-        sal_Int64			m_nTimestamp;
         FontCacheEntry		m_aEntry;
     };
 
Index: psprint/source/fontmanager/fontcache.cxx
===================================================================
RCS file: /cvs/gsl/psprint/source/fontmanager/fontcache.cxx,v
retrieving revision 1.13
diff -u -r1.13 fontcache.cxx
--- psprint/source/fontmanager/fontcache.cxx	6 Jun 2005 16:07:21 -0000	1.13
+++ psprint/source/fontmanager/fontcache.cxx	27 Jun 2005 09:53:55 -0000
@@ -177,13 +177,6 @@
             if( rEntry.begin() == rEntry.end() )
                 continue;
 
-            struct stat aStat;
-            ByteString aFileName( aDirectory );
-            aFileName.Append( '/' );
-            aFileName.Append( ByteString( entry_it->first ) );
-            if( stat( aFileName.GetBuffer(), &aStat ) )
-                continue;
-
             aLine = "File:";
             aLine.Append( ByteString( entry_it->first ) );
             aStream.WriteLine( aLine );
@@ -192,7 +185,7 @@
             // write: type;mtime;nfonts
             aLine = ByteString::CreateFromInt32( rEntry.front()->m_eType );
             aLine.Append( ';' );
-            aLine.Append( ByteString::CreateFromInt64( aStat.st_mtime ) );
+            aLine.Append( ByteString::CreateFromInt64( 0 ) );
             aLine.Append( ';' );
             aLine.Append( ByteString::CreateFromInt32( nEntrySize ) );
             aStream.WriteLine( aLine );
@@ -376,7 +370,6 @@
             
             sal_Int32 nFonts = aLine.GetToken( 0, ';', nIndex ).ToInt32();
             
-            (*pDir)[ aFile ].m_nTimestamp = nTime;
             for( int n = 0; n < nFonts; n++ )
             {
                 aStream.ReadLine( aLine );
@@ -781,9 +776,6 @@
         ByteString aPath = rManager.getDirectory( nDirID );
         aPath.Append( '/' );
         aPath.Append( ByteString( aFile ) );
-        struct stat aStat;
-        if( ! stat( aPath.GetBuffer(), &aStat ) )
-            m_aCache[nDirID].m_aEntries[aFile].m_nTimestamp = (sal_Int64)aStat.st_mtime;
         m_bDoFlush = true;
     }
     if( bFlush )


Index: psprint/source/helper/helper.cxx
===================================================================
RCS file: /cvs/gsl/psprint/source/helper/helper.cxx,v
retrieving revision 1.21
diff -u -r1.21 helper.cxx
--- psprint/source/helper/helper.cxx	13 Apr 2005 08:14:49 -0000	1.21
+++ psprint/source/helper/helper.cxx	27 Jun 2005 13:08:50 -0000
@@ -400,9 +400,14 @@
     return bSuccess;
 }
 
+//
+// Do a fast & fairly good job of converting relative
+// paths into absolute ones.
+//
 void psp::normPath( OString& rPath )
 {
     char buf[PATH_MAX];
+
     ByteString aPath( rPath );
     
     // double slashes and slash at end are probably
@@ -413,6 +418,12 @@
     if( aPath.Len() > 0 && aPath.GetChar( aPath.Len()-1 ) == '/' )
         aPath.Erase( aPath.Len()-1 );
 
+	if( aPath.Search( "./" ) == STRING_NOTFOUND &&
+		aPath.Search( "~" ) == STRING_NOTFOUND ) {
+		rPath = aPath;
+		return;
+	}
+
     if( realpath( aPath.GetBuffer(), buf ) )
         rPath = buf;
     else
