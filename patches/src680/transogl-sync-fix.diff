diff -rup slideshow/source/engine/OGLTrans-orig1/OGLTrans_TransitionerImpl.cxx slideshow/source/engine/OGLTrans/OGLTrans_TransitionerImpl.cxx
--- slideshow/source/engine/OGLTrans-orig1/OGLTrans_TransitionerImpl.cxx	2008-03-28 11:00:45.000000000 +0100
+++ slideshow/source/engine/OGLTrans/OGLTrans_TransitionerImpl.cxx	2008-03-28 11:22:52.000000000 +0100
@@ -183,16 +183,6 @@ void OGLTransitionerImpl::initialize( co
         instance = new OGLTransitionerImpl( NULL );
         instance->initWindowFromSlideShowView( xView, 0, 0 );
 
-        if( instance->GLWin.HasGLXExtension("GLX_SGI_swap_control" ) ) {
-            // enable vsync
-            typedef GLint (*glXSwapIntervalProc)(GLint);
-            glXSwapIntervalProc glXSwapInterval = (glXSwapIntervalProc) unx::glXGetProcAddress( (const GLubyte*) "glXSwapIntervalSGI" );
-            if( glXSwapInterval ) {
-                glXSwapInterval( 1 );
-                OSL_TRACE("set swap interval to 1 (enable vsync)");
-            }
-        }
-
         const GLubyte* version = glGetString( GL_VERSION );
         if( version && version[0] ) {
             cnGLVersion = version[0] - '0';
@@ -349,6 +339,16 @@ bool OGLTransitionerImpl::initWindowFrom
         return false;
     }
 
+    if( GLWin.HasGLXExtension("GLX_SGI_swap_control" ) ) {
+        // enable vsync
+        typedef GLint (*glXSwapIntervalProc)(GLint);
+        glXSwapIntervalProc glXSwapInterval = (glXSwapIntervalProc) unx::glXGetProcAddress( (const GLubyte*) "glXSwapIntervalSGI" );
+        if( glXSwapInterval ) {
+            glXSwapInterval( 1 );
+            OSL_TRACE("set swap interval to 1 (enable vsync)");
+        }
+    }
+
     glEnable(GL_CULL_FACE);
     glCullFace(GL_BACK);
     glClearColor (0, 0, 0, 0);
@@ -557,6 +557,10 @@ void SAL_CALL OGLTransitionerImpl::updat
 	unx::glXSwapBuffers(GLWin.dpy, GLWin.win);
 	if( pWindow )
         pWindow->Show();
+
+    /* flush & sync */
+    glFlush();
+    XSync( GLWin.dpy, false );
 }
 
 // we are about to be disposed (someone call dispose() on us)
