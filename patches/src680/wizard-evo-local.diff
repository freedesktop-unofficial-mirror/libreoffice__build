Index: extensions/source/abpilot/abpresid.hrc
===================================================================
RCS file: /cvs/util/extensions/source/abpilot/abpresid.hrc,v
retrieving revision 1.10
diff -u -p -u -r1.10 abpresid.hrc
--- extensions/source/abpilot/abpresid.hrc	19 Dec 2005 17:26:07 -0000	1.10
+++ extensions/source/abpilot/abpresid.hrc	16 Feb 2006 12:45:37 -0000
@@ -174,6 +174,8 @@
 #define RB_OUTLOOK				6
 #define RB_OUTLOOKEXPRESS		7
 #define RB_OTHER				8
+#define RB_EVOLUTION_GROUPWISE  9
+#define RB_EVOLUTION_LDAP		10
 
 //........................................................................
 #define ET_DATASOURCENAME		1
Index: extensions/source/abpilot/abspilot.cxx
===================================================================
RCS file: /cvs/util/extensions/source/abpilot/abspilot.cxx,v
retrieving revision 1.13
diff -u -p -u -r1.13 abspilot.cxx
--- extensions/source/abpilot/abspilot.cxx	19 Dec 2005 17:26:24 -0000	1.13
+++ extensions/source/abpilot/abspilot.cxx	16 Feb 2006 12:45:38 -0000
@@ -151,12 +151,9 @@ namespace abp
 		m_pCancel->SetClickHdl( LINK( this, OAddessBookSourcePilot, OnCancelClicked) );
 
 		// some initial settings
-#ifdef WITH_MOZILLA
 #ifdef UNX
-		m_aSettings.eType = AST_MORK;
-#else
-		m_aSettings.eType = AST_OE;
-#endif
+// FIXME: if KDE use KAB instead
+		m_aSettings.eType = AST_EVOLUTION;
 #else
 		m_aSettings.eType = AST_OTHER;
 #endif
@@ -410,6 +407,14 @@ namespace abp
 				m_aNewDataSource = aContext.createNewEvolution( m_aSettings.sDataSourceName );
 				break;
 
+			case AST_EVOLUTION_GROUPWISE:
+				m_aNewDataSource = aContext.createNewEvolutionGroupwise( m_aSettings.sDataSourceName );
+				break;
+
+			case AST_EVOLUTION_LDAP:
+				m_aNewDataSource = aContext.createNewEvolutionLdap( m_aSettings.sDataSourceName );
+				break;
+
 			case AST_KAB:
 				m_aNewDataSource = aContext.createNewKab( m_aSettings.sDataSourceName );
 				break;
Index: extensions/source/abpilot/abspilot.src
===================================================================
RCS file: /cvs/util/extensions/source/abpilot/abspilot.src,v
retrieving revision 1.54
diff -u -p -u -r1.54 abspilot.src
--- extensions/source/abpilot/abspilot.src	21 Dec 2005 18:07:05 -0000	1.54
+++ extensions/source/abpilot/abspilot.src	16 Feb 2006 12:45:38 -0000
@@ -129,6 +129,7 @@ TabPage RID_PAGE_SELECTABTYPE
 		Text [ de ] = "Mozilla / Netscape";
 		Text [ en-US ] = "Mozilla / Netscape";
 	};
+// All position & size/height data below this is not used
 	RadioButton RB_THUNDERBIRD
 	{
 		Pos		= MAP_APPFONT ( 15, 79 ) ;
@@ -145,6 +146,22 @@ TabPage RID_PAGE_SELECTABTYPE
 		Text [ de ] = "Evolution";
 		Text [ en-US ] = "Evolution";
 	};
+	RadioButton RB_EVOLUTION_GROUPWISE
+ 	{
+ 		Pos		= MAP_APPFONT ( 15, 90 ) ;
+ 		Size	= MAP_APPFONT ( WINDOW_SIZE_X - 30, 8 ) ;
+
+		Text [ de ] = "Groupwise";
+		Text [ en-US ] = "Groupwise";
+	};
+	RadioButton RB_EVOLUTION_LDAP
+ 	{
+ 		Pos		= MAP_APPFONT ( 15, 90 ) ;
+ 		Size	= MAP_APPFONT ( WINDOW_SIZE_X - 30, 8 ) ;
+
+		Text [ de ] = "Evolution LDAP";
+		Text [ en-US ] = "Evolution LDAP";
+	};
 	RadioButton RB_KAB
  	{
  		Pos		= MAP_APPFONT ( 15, 101 ) ;
Index: extensions/source/abpilot/addresssettings.hxx
===================================================================
RCS file: /cvs/util/extensions/source/abpilot/addresssettings.hxx,v
retrieving revision 1.7
diff -u -p -u -r1.7 addresssettings.hxx
--- extensions/source/abpilot/addresssettings.hxx	19 Dec 2005 17:27:17 -0000	1.7
+++ extensions/source/abpilot/addresssettings.hxx	16 Feb 2006 12:45:38 -0000
@@ -56,6 +56,8 @@ namespace abp
 		AST_MORK,
         AST_THUNDERBIRD,
 		AST_EVOLUTION,
+		AST_EVOLUTION_GROUPWISE,
+		AST_EVOLUTION_LDAP,
 		AST_KAB,
 		AST_LDAP,
 		AST_OUTLOOK,
Index: extensions/source/abpilot/datasourcehandling.cxx
===================================================================
RCS file: /cvs/util/extensions/source/abpilot/datasourcehandling.cxx,v
retrieving revision 1.9
diff -u -p -u -r1.9 datasourcehandling.cxx
--- extensions/source/abpilot/datasourcehandling.cxx	19 Dec 2005 17:27:30 -0000	1.9
+++ extensions/source/abpilot/datasourcehandling.cxx	16 Feb 2006 12:45:38 -0000
@@ -330,9 +330,19 @@ namespace abp
 	}
 
 	//---------------------------------------------------------------------
+	ODataSource	ODataSourceContext::createNewEvolutionLdap( const ::rtl::OUString& _rName) SAL_THROW (( ))
+	{
+		return lcl_implCreateAndSetURL( m_pImpl->xORB, _rName, "sdbc:address:evolution:ldap" );
+	}
+	//---------------------------------------------------------------------
+	ODataSource	ODataSourceContext::createNewEvolutionGroupwise( const ::rtl::OUString& _rName) SAL_THROW (( ))
+	{
+		return lcl_implCreateAndSetURL( m_pImpl->xORB, _rName, "sdbc:address:evolution:groupwise" );
+	}
+	//---------------------------------------------------------------------
 	ODataSource	ODataSourceContext::createNewEvolution( const ::rtl::OUString& _rName) SAL_THROW (( ))
 	{
-		return lcl_implCreateAndSetURL( m_pImpl->xORB, _rName, "sdbc:address:evolution" );
+		return lcl_implCreateAndSetURL( m_pImpl->xORB, _rName, "sdbc:address:evolution:local" );
 	}
 
 	//---------------------------------------------------------------------
Index: extensions/source/abpilot/datasourcehandling.hxx
===================================================================
RCS file: /cvs/util/extensions/source/abpilot/datasourcehandling.hxx,v
retrieving revision 1.7
diff -u -p -u -r1.7 datasourcehandling.hxx
--- extensions/source/abpilot/datasourcehandling.hxx	19 Dec 2005 17:27:42 -0000	1.7
+++ extensions/source/abpilot/datasourcehandling.hxx	16 Feb 2006 12:45:38 -0000
@@ -89,9 +89,15 @@ namespace abp
 		/// creates a new Thunderbird data source
 		ODataSource createNewThunderbird( const ::rtl::OUString& _rName ) SAL_THROW (( ));
 
-		/// creates a new Evolution data source
+		/// creates a new Evolution local data source
 		ODataSource createNewEvolution( const ::rtl::OUString& _rName ) SAL_THROW (( ));
 
+		/// creates a new Evolution LDAP data source
+		ODataSource createNewEvolutionLdap( const ::rtl::OUString& _rName ) SAL_THROW (( ));
+
+		/// creates a new Evolution GROUPWISE data source
+		ODataSource createNewEvolutionGroupwise( const ::rtl::OUString& _rName ) SAL_THROW (( ));
+
 		/// creates a new KDE address book data source
 		ODataSource createNewKab( const ::rtl::OUString& _rName ) SAL_THROW (( ));
 
Index: extensions/source/abpilot/typeselectionpage.cxx
===================================================================
RCS file: /cvs/util/extensions/source/abpilot/typeselectionpage.cxx,v
retrieving revision 1.9
diff -u -p -u -r1.9 typeselectionpage.cxx
--- extensions/source/abpilot/typeselectionpage.cxx	19 Dec 2005 17:28:09 -0000	1.9
+++ extensions/source/abpilot/typeselectionpage.cxx	16 Feb 2006 12:45:38 -0000
@@ -57,43 +57,6 @@ namespace abp
 	using namespace ::com::sun::star::uno;
 	using namespace ::com::sun::star::sdbc;
 
-    //---------------------------------------------------------------------
-    namespace
-    {
-        void lcl_hideChoice( ::std::vector< RadioButton* >& _allTypes, RadioButton& _typeToHide )
-        {
-            for (   ::std::vector< RadioButton* >::iterator loop = _allTypes.begin();
-                    loop != _allTypes.end();
-                    ++loop
-                )
-            {
-                if ( *loop == &_typeToHide )
-                {
-                    // remove the element from the allTypes array
-                    ::std::copy( loop + 1, _allTypes.end(), loop );
-                    _allTypes.resize( _allTypes.size() - 1 );
-
-                    // hide the control in question
-                    _typeToHide.Hide();
-
-                    // change position of all subsequent controls
-                    if ( loop != _allTypes.end() )
-                    {
-                        sal_Int32 nMoveUp = (*loop)->GetPosPixel().Y() - _typeToHide.GetPosPixel().Y();
-                        do
-                        {
-                            Point aPos = (*loop)->GetPosPixel();
-                            aPos.Y() -= nMoveUp;
-                            (*loop)->SetPosPixel( aPos );
-                        }
-                        while ( ++loop != _allTypes.end() );
-                    }
-                    break;
-                }
-            }
-        }
-    }
-
 	//=====================================================================
 	//= TypeSelectionPage
 	//=====================================================================
@@ -105,65 +68,73 @@ namespace abp
 		,m_aMORK			(this,	ResId(RB_MORK))
 		,m_aThunderbird     (this,  ResId(RB_THUNDERBIRD))
 		,m_aEvolution		(this,	ResId(RB_EVOLUTION))
+		,m_aEvolutionGroupwise (this,	ResId(RB_EVOLUTION_GROUPWISE))
+		,m_aEvolutionLdap	   (this,	ResId(RB_EVOLUTION_LDAP))
 		,m_aKab				(this,	ResId(RB_KAB))
 		,m_aLDAP			(this,	ResId(RB_LDAP))
 		,m_aOutlook			(this,	ResId(RB_OUTLOOK))
 		,m_aOE				(this,	ResId(RB_OUTLOOKEXPRESS))
 		,m_aOther			(this,	ResId(RB_OTHER))
 	{
+		Point aTopLeft;
+		Size  aItemSize;
+
 		FreeResource();
 
-		::std::vector< RadioButton* > allTypes;
-		    // must be sorted by ascending y-coordinate
-		allTypes.push_back( &m_aMORK );
-		allTypes.push_back( &m_aThunderbird );
-		allTypes.push_back( &m_aEvolution );
-		allTypes.push_back( &m_aKab );
-		allTypes.push_back( &m_aLDAP );
-		allTypes.push_back( &m_aOutlook );
-		allTypes.push_back( &m_aOE );
-		allTypes.push_back( &m_aOther );
+		aTopLeft = m_aMORK.GetPosPixel();
+		aItemSize = m_aMORK.GetSizePixel();
+
+		bool bWithMozilla = true, bUnx = true;
+		bool bHaveEvolution = true, bHaveKab = true;
 
 #ifndef WITH_MOZILLA
-		// the following 5 types are provided by the Mozilla-based database driver. If we're compiled without
-		// without Mozilla support, then they're not available.
-		lcl_hideChoice( allTypes, m_aMORK );
-		lcl_hideChoice( allTypes, m_aThunderbird );
-		lcl_hideChoice( allTypes, m_aLDAP );
-		lcl_hideChoice( allTypes, m_aOutlook );
-		lcl_hideChoice( allTypes, m_aOE );
+		bWithMozilla = false
 #endif
-
 #ifndef UNX
-		// no Evolution nor KDE address book on Windows systems
-		lcl_hideChoice( allTypes, m_aEvolution );
-		lcl_hideChoice( allTypes, m_aKab );
-#endif
-
-#ifdef UNX
-		// no Outlook / Outlook Express for ~NIX systems
-		lcl_hideChoice( allTypes, m_aOutlook );
-		lcl_hideChoice( allTypes, m_aOE );
-
+		bUnx = false;
+		bHaveEvolution = false;
+		bHaveKab = false;
+#else
 		Reference< XDriverAccess> xManager(_pParent->getORB()->createInstance(::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("com.sun.star.sdbc.DriverManager"))), UNO_QUERY);
 
 		// check whether Evolution is available
-		Reference< XDriver > xDriver( xManager->getDriverByURL(::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("sdbc:address:evolution"))) );
+		Reference< XDriver > xDriver( xManager->getDriverByURL(::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("sdbc:address:evolution:local"))) );
 		if ( !xDriver.is() )
-		    lcl_hideChoice( allTypes, m_aEvolution );
+			bHaveEvolution = false;
 
 		// check whether KDE address book is available
 		xDriver = xManager->getDriverByURL(::rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("sdbc:address:kab")));
 		if ( !xDriver.is() )
-		    lcl_hideChoice( allTypes, m_aKab );
+			bHaveKab = false;
 #endif
 
+		// Items are displayed in list order
+		m_aAllTypes.push_back( ButtonItem( &m_aEvolution, AST_EVOLUTION, bHaveEvolution ) );
+		m_aAllTypes.push_back( ButtonItem( &m_aEvolutionGroupwise, AST_EVOLUTION_GROUPWISE, bHaveEvolution ) );
+		m_aAllTypes.push_back( ButtonItem( &m_aEvolutionLdap, AST_EVOLUTION_LDAP, bHaveEvolution ) );
+		m_aAllTypes.push_back( ButtonItem( &m_aMORK, AST_MORK, bWithMozilla ) );
+		m_aAllTypes.push_back( ButtonItem( &m_aThunderbird, AST_THUNDERBIRD, bWithMozilla ) );
+		m_aAllTypes.push_back( ButtonItem( &m_aKab, AST_KAB, bHaveKab ) );
+		m_aAllTypes.push_back( ButtonItem( &m_aLDAP, AST_LDAP, bWithMozilla ) );
+		m_aAllTypes.push_back( ButtonItem( &m_aOutlook, AST_OUTLOOK, bWithMozilla && !bUnx ) );
+		m_aAllTypes.push_back( ButtonItem( &m_aOE, AST_OE, bWithMozilla && !bUnx ) );
+		m_aAllTypes.push_back( ButtonItem( &m_aOther, AST_OTHER, true ) );
+
 		Link aTypeSelectionHandler = LINK(this, TypeSelectionPage, OnTypeSelected );
-		for (   ::std::vector< RadioButton* >::const_iterator loop = allTypes.begin();
-		        loop != allTypes.end();
-		        ++loop
-		    )
-			(*loop)->SetClickHdl( aTypeSelectionHandler );
+		for ( ::std::vector< ButtonItem >::const_iterator loop = m_aAllTypes.begin();
+			  loop != m_aAllTypes.end(); ++loop )
+		{
+			ButtonItem aItem = *loop;
+			if (!aItem.m_bVisible)
+				aItem.m_pItem->Hide();
+			else
+			{
+				aItem.m_pItem->SetPosPixel( aTopLeft );
+				aTopLeft.Y() += (aItemSize.Height() * 5) / 4;
+				aItem.m_pItem->SetClickHdl( aTypeSelectionHandler );
+				aItem.m_pItem->Show();
+			}
+		}
 	}
 
 	//---------------------------------------------------------------------
@@ -171,15 +145,16 @@ namespace abp
 	{
 		AddressBookSourcePage::ActivatePage();
 
-        RadioButton* pOptions[] = {
-            &m_aMORK, &m_aThunderbird, &m_aEvolution, &m_aKab, &m_aLDAP, &m_aOutlook, &m_aOE, &m_aOther, NULL
-        };
-        for ( RadioButton** pCheck = pOptions; *pCheck; ++pCheck )
-            if ( (*pCheck)->IsChecked() )
-            {
-                (*pCheck)->GrabFocus();
+		for ( ::std::vector< ButtonItem >::const_iterator loop = m_aAllTypes.begin();
+			  loop != m_aAllTypes.end(); ++loop )
+		{
+			ButtonItem aItem = (*loop);
+			if( aItem.m_pItem->IsChecked() && aItem.m_bVisible )
+			{
+				aItem.m_pItem->GrabFocus();
                 break;
             }
+		}
 
         getDialog()->enableButtons(WZB_PREVIOUS, sal_False);
 	}
@@ -194,35 +169,24 @@ namespace abp
 	//---------------------------------------------------------------------
 	void TypeSelectionPage::selectType( AddressSourceType _eType )
 	{
-		m_aMORK.Check(AST_MORK == _eType);
-		m_aThunderbird.Check(AST_THUNDERBIRD == _eType);
-		m_aEvolution.Check(AST_EVOLUTION == _eType);
-		m_aKab.Check(AST_KAB == _eType);
-		m_aLDAP.Check(AST_LDAP == _eType);
-		m_aOutlook.Check(AST_OUTLOOK == _eType);
-		m_aOE.Check(AST_OE == _eType);
-		m_aOther.Check(AST_OTHER == _eType);
+		for ( ::std::vector< ButtonItem >::const_iterator loop = m_aAllTypes.begin();
+			  loop != m_aAllTypes.end(); ++loop )
+		{
+			ButtonItem aItem = (*loop);
+			aItem.m_pItem->Check( _eType == aItem.m_eType );
+		}
 	}
 
 	//---------------------------------------------------------------------
-	AddressSourceType TypeSelectionPage::getSelectedType( )
-	{
-		if (m_aMORK.IsChecked())
-			return AST_MORK;
-		else if (m_aThunderbird.IsChecked())
-			return AST_THUNDERBIRD;
-		else if (m_aEvolution.IsChecked())
-			return AST_EVOLUTION;
-		else if (m_aKab.IsChecked())
-			return AST_KAB;
-		else if (m_aLDAP.IsChecked())
-			return AST_LDAP;
-		else if (m_aOutlook.IsChecked())
-			return AST_OUTLOOK;
-		else if (m_aOE.IsChecked())
-			return AST_OE;
-		else if (m_aOther.IsChecked())
-			return AST_OTHER;
+	AddressSourceType TypeSelectionPage::getSelectedType()
+	{
+		for ( ::std::vector< ButtonItem >::const_iterator loop = m_aAllTypes.begin();
+			  loop != m_aAllTypes.end(); ++loop )
+		{
+			ButtonItem aItem = (*loop);
+			if ( aItem.m_pItem->IsChecked() )
+				return aItem.m_eType;
+		}
 
 		return AST_INVALID;
 	}
Index: extensions/source/abpilot/typeselectionpage.hxx
===================================================================
RCS file: /cvs/util/extensions/source/abpilot/typeselectionpage.hxx,v
retrieving revision 1.8
diff -u -p -u -r1.8 typeselectionpage.hxx
--- extensions/source/abpilot/typeselectionpage.hxx	19 Dec 2005 17:28:44 -0000	1.8
+++ extensions/source/abpilot/typeselectionpage.hxx	16 Feb 2006 12:45:38 -0000
@@ -61,6 +61,8 @@ namespace abp
 		FixedLine		m_aTypeSep;
 		RadioButton		m_aMORK;
 		RadioButton		m_aThunderbird;
+		RadioButton		m_aEvolutionGroupwise;
+		RadioButton		m_aEvolutionLdap;
 		RadioButton		m_aEvolution;
 		RadioButton		m_aKab;
 		RadioButton		m_aLDAP;
@@ -68,6 +70,22 @@ namespace abp
 		RadioButton		m_aOE;
 		RadioButton		m_aOther;
 
+		struct ButtonItem {
+			RadioButton *m_pItem;
+			AddressSourceType m_eType;
+			bool         m_bVisible;
+
+			ButtonItem( RadioButton *pItem,
+						AddressSourceType eType,
+						bool         bVisible ) :
+					m_pItem( pItem ),
+					m_eType( eType ),
+					m_bVisible( bVisible )
+			{}
+		};
+
+		::std::vector< ButtonItem > m_aAllTypes;
+
 	public:
 		TypeSelectionPage( OAddessBookSourcePilot* _pParent );
 
