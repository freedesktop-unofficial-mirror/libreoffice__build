--- binfilter/bf_forms/source/component/DatabaseForm.hxx.old	2005-09-07 17:31:14.000000000 +0200
+++ binfilter/bf_forms/source/component/DatabaseForm.hxx	2005-12-02 18:57:45.000000000 +0100
@@ -457,7 +457,7 @@
 	static	::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL getSupportedServiceNames_Static();
 	static	::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL getCurrentServiceNames_Static();
 	static	::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL getCompatibleServiceNames_Static();
-	static	::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > SAL_CALL ODatabaseForm::Create( const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory >& _rxFactory );
+	static	::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > SAL_CALL Create( const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory >& _rxFactory );
 
 	// com::sun::star::io::XPersistObject
     virtual ::rtl::OUString SAL_CALL getServiceName() throw(::com::sun::star::uno::RuntimeException);
--- binfilter/inc/bf_svx/editeng.hxx.old	2005-09-09 15:20:51.000000000 +0200
+++ binfilter/inc/bf_svx/editeng.hxx	2005-12-05 10:16:06.000000000 +0100
@@ -129,7 +129,7 @@
 #endif
 
 public:
-					EditEngine::EditEngine( SfxItemPool* pItemPool );
+					EditEngine( SfxItemPool* pItemPool );
 	virtual			~EditEngine();
 
 	const SfxItemSet& 	GetEmptyItemSet();
--- binfilter/bf_sw/source/core/inc/frame.hxx.old	2005-09-08 11:29:30.000000000 +0200
+++ binfilter/bf_sw/source/core/inc/frame.hxx	2005-12-05 13:32:42.000000000 +0100
@@ -768,7 +768,7 @@
     void MakeUpperPos( const SwFrm*, const SwFrm*, BOOL );
     void MakeLeftPos( const SwFrm*, const SwFrm*, BOOL );
     void MakeRightPos( const SwFrm*, const SwFrm*, BOOL );
-    inline BOOL SwFrm::IsNeighbourFrm() const
+    inline BOOL IsNeighbourFrm() const
         { return GetType() & FRM_NEIGHBOUR ? TRUE : FALSE; }
 
     inline  SwCntntFrm* GetNextCntntFrm() const;
--- binfilter/inc/bf_sw/grfatr.hxx.old	2005-09-09 18:09:43.000000000 +0200
+++ binfilter/inc/bf_sw/grfatr.hxx	2005-12-05 13:34:32.000000000 +0100
@@ -82,7 +82,7 @@
 	SwMirrorGrf( USHORT nMiro = RES_DONT_MIRROR_GRF )
 		: SfxEnumItem( RES_GRFATR_MIRRORGRF, nMiro ), bGrfToggle( sal_False )
 	{}
-	SwMirrorGrf::SwMirrorGrf( const SwMirrorGrf &rMirrorGrf )
+	SwMirrorGrf( const SwMirrorGrf &rMirrorGrf )
 		: SfxEnumItem( RES_GRFATR_MIRRORGRF, rMirrorGrf.GetValue()),
 		bGrfToggle( rMirrorGrf.IsGrfToggle() )
 	{}
--- binfilter/bf_sw/source/core/text/inftxt.hxx.old	2005-09-08 12:15:27.000000000 +0200
+++ binfilter/bf_sw/source/core/text/inftxt.hxx	2005-12-05 18:27:01.000000000 +0100
@@ -325,10 +325,10 @@
     //
 //STRIP001     xub_StrLen SwTxtSizeInfo::GetTxtBreak( const long nLineWidth,
 //STRIP001                                            const xub_StrLen nMaxLen ) const;
-    xub_StrLen SwTxtSizeInfo::GetTxtBreak( const long nLineWidth,
+    xub_StrLen GetTxtBreak( const long nLineWidth,
                                            const xub_StrLen nMaxLen,
                                            const USHORT nComp ) const;
-    xub_StrLen SwTxtSizeInfo::GetTxtBreak( const long nLineWidth,
+    xub_StrLen GetTxtBreak( const long nLineWidth,
                                            const xub_StrLen nMaxLen,
                                            const USHORT nComp,
                                            xub_StrLen& rExtraCharPos ) const;
--- binfilter/bf_linguistic/source/lngopt.hxx.old	2005-09-07 18:02:39.000000000 +0200
+++ binfilter/bf_linguistic/source/lngopt.hxx	2005-12-06 12:17:53.000000000 +0100
@@ -107,7 +107,7 @@
 
 	//! uses default assignment-operator
 
-	BOOL LinguOptions::SetLocale_Impl( INT16 &rLanguage,
+	BOOL SetLocale_Impl( INT16 &rLanguage,
 			::com::sun::star::uno::Any &rOld,
 			const ::com::sun::star::uno::Any &rVal);
 
--- binfilter/bf_sw/source/core/inc/rootfrm.hxx.old	2005-09-08 11:36:05.000000000 +0200
+++ binfilter/bf_sw/source/core/inc/rootfrm.hxx	2005-12-05 14:03:36.000000000 +0100
@@ -172,7 +174,7 @@
 	~SwRootFrm();
 
 	ViewShell *GetCurrShell() const { return pCurrShell; }
-	void SwRootFrm::DeRegisterShell( ViewShell *pSh );
+	void DeRegisterShell( ViewShell *pSh );
 
 	//Start-/EndAction fuer alle Shells auf moeglichst hoeher
 	//(Shell-Ableitungs-)Ebene aufsetzen. Fuer die StarONE Anbindung, die
--- binfilter/bf_sfx2/source/doc/sfx2_sfxbasemodel.cxx.old	2005-11-04 16:38:34.000000000 +0100
+++ binfilter/bf_sfx2/source/doc/sfx2_sfxbasemodel.cxx	2005-12-05 10:03:59.000000000 +0100
@@ -304,7 +304,7 @@
 	REFERENCE< ::com::sun::star::view::XPrintJob>     m_xPrintJob				;
 	::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue > m_aPrintOptions;
 
-	IMPL_SfxBaseModel_DataContainer::IMPL_SfxBaseModel_DataContainer(	MUTEX&			aMutex			,
+	IMPL_SfxBaseModel_DataContainer(	MUTEX&			aMutex			,
 																		SfxObjectShell*	pObjectShell	)
 			:	m_pObjectShell			( pObjectShell	)
 //			,	m_pObjectShellLock		( pObjectShell	)
--- binfilter/inc/bf_xmloff/SchXMLExportHelper.hxx.old	2005-09-09 19:13:49.000000000 +0200
+++ binfilter/inc/bf_xmloff/SchXMLExportHelper.hxx	2005-12-05 10:02:19.000000000 +0100
@@ -176,7 +176,7 @@
 					  sal_Bool bIncludeTable );
 
 	/// returns the string corresponding to the current FileFormat CLSID for Chart
-	const ::rtl::OUString& SchXMLExportHelper::getChartCLSID();
+	const ::rtl::OUString& getChartCLSID();
 
 	UniReference< XMLPropertySetMapper > GetPropertySetMapper() const { return mxPropertySetMapper; }
 
--- binfilter/bf_xmloff/source/chart/SchXMLTableContext.hxx.old	2005-09-09 09:34:19.000000000 +0200
+++ binfilter/bf_xmloff/source/chart/SchXMLTableContext.hxx	2005-12-05 18:59:37.000000000 +0100
@@ -100,7 +100,7 @@
 
 public:
 	/// The data for the ChartDocument is applied linearly
-	static void SchXMLTableHelper::applyTableSimple(
+	static void applyTableSimple(
 		const SchXMLTable& rTable,
 		::com::sun::star::uno::Reference< ::com::sun::star::chart::XChartDocument > xChartDoc );
 
--- binfilter/bf_svx/source/editeng/svx_impedit3.cxx.old	2005-09-08 07:26:45.000000000 +0200
+++ binfilter/bf_svx/source/editeng/svx_impedit3.cxx	2005-12-05 12:22:49.000000000 +0100
@@ -171,7 +171,7 @@
 	long		nStartPosX;
 	long		nTabPos;
 
-	TabInfo::TabInfo() { bValid = FALSE; }
+	TabInfo() { bValid = FALSE; }
 };
 
 //STRIP001 Point Rotate( const Point& rPoint, short nOrientation, const Point& rOrigin )
--- binfilter/inc/bf_xmloff/txtflde.hxx.old	2005-09-09 19:34:38.000000000 +0200
+++ binfilter/inc/bf_xmloff/txtflde.hxx	2005-12-05 19:21:37.000000000 +0100
@@ -240,7 +240,7 @@
 	SvXMLExport& GetExport() { return rExport; }
 
 	/// export a field after <text:span> is already written
-	void XMLTextFieldExport::ExportFieldHelper(
+	void ExportFieldHelper(
 		const ::com::sun::star::uno::Reference<
 				::com::sun::star::text::XTextField> & rTextField,
 		const ::com::sun::star::uno::Reference<
--- binfilter/inc/bf_starmath/unomodel.hxx.old	2005-09-09 14:52:10.000000000 +0200
+++ binfilter/inc/bf_starmath/unomodel.hxx	2005-12-05 12:14:54.000000000 +0100
@@ -105,7 +105,7 @@
 	virtual ::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL getSupportedServiceNames(void)
 			throw( ::com::sun::star::uno::RuntimeException );
 
-	inline ::rtl::OUString SmModel::getImplementationName_Static() throw(  );
+	inline ::rtl::OUString getImplementationName_Static() throw(  );
 };
 
 inline ::rtl::OUString SmModel::getImplementationName_Static() throw(  )
--- binfilter/inc/bf_sw/unoobj.hxx.old	2005-09-09 18:46:23.000000000 +0200
+++ binfilter/inc/bf_sw/unoobj.hxx	2005-12-05 13:40:29.000000000 +0100
@@ -489,7 +489,7 @@
     virtual void SAL_CALL setPropertyToDefault( const ::rtl::OUString& PropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
     virtual ::com::sun::star::uno::Any SAL_CALL getPropertyDefault( const ::rtl::OUString& aPropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
 
-    static void SwXTextCursor::SetPropertyValue(
+    static void SetPropertyValue(
                         SwPaM& rPaM, 
                         const SfxItemPropertySet& rPropSet, 
                         const ::rtl::OUString& rPropertyName, 
@@ -501,11 +501,11 @@
                                 ::com::sun::star::lang::IllegalArgumentException, 
                                 ::com::sun::star::lang::WrappedTargetException, 
                                 ::com::sun::star::uno::RuntimeException);
- 	static ::com::sun::star::uno::Any  SwXTextCursor::GetPropertyValue(	SwPaM& rPaM, const SfxItemPropertySet& rPropSet, const ::rtl::OUString& rPropertyName) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
- 	static ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyState > SwXTextCursor::GetPropertyStates(	SwPaM& rPaM, SfxItemPropertySet& rPropSet,		const ::com::sun::star::uno::Sequence< ::rtl::OUString >& PropertyNames, SwGetPropertyStatesCaller eCaller = SW_PROPERTY_STATE_CALLER_DEFAULT)			throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
- 	static ::com::sun::star::beans::PropertyState SwXTextCursor::GetPropertyState( SwPaM& rPaM, SfxItemPropertySet& rPropSet, const ::rtl::OUString& rPropertyName)		throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
- 	static void SwXTextCursor::SetPropertyToDefault( SwPaM& rPaM, const SfxItemPropertySet& rPropSet,	const ::rtl::OUString& rPropertyName)	throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
-	static ::com::sun::star::uno::Any  SwXTextCursor::GetPropertyDefault( SwPaM& rPaM, const SfxItemPropertySet& rPropSet,	const ::rtl::OUString& rPropertyName)	throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+ 	static ::com::sun::star::uno::Any  GetPropertyValue(	SwPaM& rPaM, const SfxItemPropertySet& rPropSet, const ::rtl::OUString& rPropertyName) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+ 	static ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyState > GetPropertyStates(	SwPaM& rPaM, SfxItemPropertySet& rPropSet,		const ::com::sun::star::uno::Sequence< ::rtl::OUString >& PropertyNames, SwGetPropertyStatesCaller eCaller = SW_PROPERTY_STATE_CALLER_DEFAULT)			throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
+ 	static ::com::sun::star::beans::PropertyState GetPropertyState( SwPaM& rPaM, SfxItemPropertySet& rPropSet, const ::rtl::OUString& rPropertyName)		throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
+ 	static void SetPropertyToDefault( SwPaM& rPaM, const SfxItemPropertySet& rPropSet,	const ::rtl::OUString& rPropertyName)	throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
+	static ::com::sun::star::uno::Any  GetPropertyDefault( SwPaM& rPaM, const SfxItemPropertySet& rPropSet,	const ::rtl::OUString& rPropertyName)	throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
 
     //XDocumentInsertable - neu
 	virtual void SAL_CALL insertDocumentFromURL(const ::rtl::OUString& rURL, const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue >& aOptions) throw( ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::io::IOException, ::com::sun::star::uno::RuntimeException );
--- binfilter/bf_svx/source/inc/unopracc.hxx.old	2005-09-08 08:12:58.000000000 +0200
+++ binfilter/bf_svx/source/inc/unopracc.hxx	2005-12-05 13:15:46.000000000 +0100
@@ -81,7 +81,7 @@
     virtual ::com::sun::star::uno::Sequence< sal_Int8 > SAL_CALL getImplementationId() throw(::com::sun::star::uno::RuntimeException);
 
 	// XServiceName
-    ::rtl::OUString SAL_CALL SvxAccessibleTextPropertySet::getServiceName() throw (::com::sun::star::uno::RuntimeException);
+    ::rtl::OUString SAL_CALL getServiceName() throw (::com::sun::star::uno::RuntimeException);
 };
 
 }//end of namespace binfilter
--- binfilter/inc/bf_sw/unosett.hxx.old	2005-09-09 18:47:44.000000000 +0200
+++ binfilter/inc/bf_sw/unosett.hxx	2005-12-05 14:08:22.000000000 +0100
@@ -220,7 +220,7 @@
 	SwXNumberingRules(SwDoc& rDoc); //create a new instance
 	
 
-	static const ::com::sun::star::uno::Sequence< sal_Int8 > & SwXNumberingRules::getUnoTunnelId();
+	static const ::com::sun::star::uno::Sequence< sal_Int8 > & getUnoTunnelId();
 
 	virtual sal_Int64 SAL_CALL getSomething( const ::com::sun::star::uno::Sequence< sal_Int8 >& aIdentifier ) throw(::com::sun::star::uno::RuntimeException);
 
--- binfilter/inc/bf_svx/unoshape.hxx.old	2005-09-09 17:18:33.000000000 +0200
+++ binfilter/inc/bf_svx/unoshape.hxx	2005-12-05 09:53:08.000000000 +0100
@@ -187,7 +187,7 @@
 	// call this in your derivated getTypes() after you call SvxShape::getTypes() but
 	// only if maTypeSequence.getLength() is equal 0. See implementation of
 	// SvxShape::getTypes() for more information
-	static void SvxShape::addStaticTypes( sal_Int16 nNewTypes, /* uno::Type* */ ... ) throw();
+	static void addStaticTypes( sal_Int16 nNewTypes, /* uno::Type* */ ... ) throw();
 
 	sal_Bool SAL_CALL SetFillAttribute( sal_Int32 nWID, const ::rtl::OUString& rName );
 
--- binfilter/bf_sw/source/ui/inc/view.hxx.old	2005-09-09 08:01:43.000000000 +0200
+++ binfilter/bf_sw/source/ui/inc/view.hxx	2005-12-05 18:44:13.000000000 +0100
@@ -600,7 +600,7 @@
     void ApplyAccessiblityOptions(SvtAccessibilityOptions& rAccessibilityOptions);
 
     // get print options (SwPrtOptions)
-    static void SwView::MakeOptions( PrintDialog* pDlg, SwPrtOptions& rOpts, 
+    static void MakeOptions( PrintDialog* pDlg, SwPrtOptions& rOpts, 
             BOOL* pPrtProspect, BOOL bWeb, SfxPrinter* pPrt, SwPrintData* pData );
 
 	SwView(SfxViewFrame* pFrame, SfxViewShell*);
--- binfilter/inc/bf_xmloff/XMLFootnoteConfigurationImportContext.hxx.old	2005-09-09 19:21:15.000000000 +0200
+++ binfilter/inc/bf_xmloff/XMLFootnoteConfigurationImportContext.hxx	2005-12-05 19:17:52.000000000 +0100
@@ -115,8 +115,7 @@
 	/// set configuration at document; calls ProcessSettings
 	/// Uses CreateAndInsertLate() to ensure that all styles it references 
 	/// have been set.
-	virtual void XMLFootnoteConfigurationImportContext::CreateAndInsertLate( 
-		sal_Bool bOverwrite );
+	virtual void CreateAndInsertLate( sal_Bool bOverwrite );
 
 	/// set configuration at document
 	void ProcessSettings(
--- binfilter/inc/bf_xmloff/xmlnumi.hxx.old	2005-09-09 19:42:24.000000000 +0200
+++ binfilter/inc/bf_xmloff/xmlnumi.hxx	2005-12-05 19:06:08.000000000 +0100
@@ -107,11 +107,11 @@
 
 	static ::com::sun::star::uno::Reference <
 		::com::sun::star::container::XIndexReplace >
-	SvxXMLListStyleContext::CreateNumRule(
+	CreateNumRule(
 		const ::com::sun::star::uno::Reference <
 			::com::sun::star::frame::XModel > & rModel );
 
-	static void SvxXMLListStyleContext::SetDefaultStyle(
+	static void SetDefaultStyle(
 		const ::com::sun::star::uno::Reference <
 			::com::sun::star::container::XIndexReplace > & rNumRule,
 		sal_Int16 nLevel,
