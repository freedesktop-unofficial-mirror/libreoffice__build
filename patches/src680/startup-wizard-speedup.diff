diff --git a/desktop/source/app/app.cxx b/desktop/source/app/app.cxx
index 353b36f..96ce066 100644
--- desktop/source/app/app.cxx
+++ desktop/source/app/app.cxx
@@ -349,6 +349,10 @@ namespace desktop
 static SalMainPipeExchangeSignalHandler* pSignalHandler = 0;
 static sal_Bool _bCrashReporterEnabled = sal_True;
 
+static const OUString sConfigSrvc = OUString::createFromAscii("com.sun.star.configuration.ConfigurationProvider");
+static const OUString sAccessSrvc = OUString::createFromAscii("com.sun.star.configuration.ConfigurationAccess");
+static const OUString sUpdAccSrvc = OUString::createFromAscii("com.sun.star.configuration.ConfigurationUpdateAccess");
+
 // ----------------------------------------------------------------------------
 
 ResMgr* Desktop::GetDesktopResManager()
@@ -1306,6 +1310,37 @@ void Desktop::AppEvent( const ApplicationEvent& rAppEvent )
     HandleAppEvent( rAppEvent );
 }
 
+static sal_Bool impl_probablyNeedsFirstStartWizard()
+{
+    // Do we need to show EULA?
+    ::rtl::OUString sValue;
+    static const ::rtl::OUString BOOTPARAM_SHOWLICENSE = ::rtl::OUString::createFromAscii("HideEula");
+    sal_Bool bParamExists = ::rtl::Bootstrap::get(BOOTPARAM_SHOWLICENSE, sValue);
+    sal_Bool bShowEula = !( bParamExists && sValue.toBoolean() );
+
+    // Are we at the first start?
+    try {
+        Reference < XMultiServiceFactory > xFactory = ::comphelper::getProcessServiceFactory();
+        // get configuration provider
+        Reference< XMultiServiceFactory > theConfigProvider = Reference< XMultiServiceFactory >(
+        xFactory->createInstance(sConfigSrvc), UNO_QUERY_THROW);
+        Sequence< Any > theArgs(1);
+        NamedValue v(OUString::createFromAscii("NodePath"), 
+            makeAny(OUString::createFromAscii("org.openoffice.Setup/Office")));
+        theArgs[0] <<= v;
+        Reference< XPropertySet > pset = Reference< XPropertySet >(
+            theConfigProvider->createInstanceWithArguments(sUpdAccSrvc, theArgs), UNO_QUERY_THROW);
+        Any result = pset->getPropertyValue(OUString::createFromAscii("FirstStartWizardCompleted"));
+        sal_Bool bCompleted = sal_False;
+        if ((result >>= bCompleted) && bCompleted && !bShowEula)
+            return sal_False;  // wizard was already completed, no EULA to show
+    } catch (const Exception&)
+    {
+    }
+
+    return sal_True;
+}
+
 void Desktop::Main()
 {
     RTL_LOGFILE_CONTEXT( aLog, "desktop (cd100003) ::Desktop::Main" );
@@ -1502,6 +1537,7 @@ void Desktop::Main()
         RTL_LOGFILE_CONTEXT_TRACE( aLog, "} tools::InitTestToolLib" );
 
         // First Start Wizard
+        if ( impl_probablyNeedsFirstStartWizard() )
         {
             sal_Bool bWidthUI = sal_True;
             if (pCmdLineArgs->IsNoFirstStartWizard())
@@ -2223,9 +2259,6 @@ void Desktop::PreloadConfigurationData()
         }
     }
 
-    OUString sConfigSrvc = OUString::createFromAscii("com.sun.star.configuration.ConfigurationProvider");
-    OUString sAccessSrvc = OUString::createFromAscii("com.sun.star.configuration.ConfigurationAccess");
-
     // get configuration provider
     Reference< XMultiServiceFactory > xConfigProvider;
     xConfigProvider = Reference< XMultiServiceFactory > (
