--- sw/source/filter/ww8/wrtw8nds.cxx	2008-06-02 11:37:38.000000000 +0200
+++ sw/source/filter/ww8/wrtw8nds.cxx	2008-06-02 13:07:41.000000000 +0200
@@ -2391,7 +2391,7 @@
         SwTwips nSz = 0, nCalc;
         SwWW8Writer::InsUInt16( aAt, (USHORT)nTblOffset );
 
-        for (nBox = 0, nRealBox = 0; nRealBox < nWWColMax; ++nBox)
+        for (nBox = 0, nRealBox = 0; nRealBox < nWWColMax && nBox < nColCnt; ++nBox)
         {
             if( (nBox > 0 && pBoxArr[ nBox-1 ] == pBoxArr[ nBox ])
                 || pBoxArr[nBox] == NULL)
@@ -2410,7 +2410,7 @@
             ++nRealBox;
         }
 
-        for (nBox = 0, nRealBox = 0; nRealBox < nWWColMax; ++nBox)
+        for (nBox = 0, nRealBox = 0; nRealBox < nWWColMax && nBox < nColCnt; ++nBox)
         {
             if( nBox && pBoxArr[ nBox-1 ] == pBoxArr[ nBox ] )
                 continue;
@@ -2462,7 +2462,7 @@
             const USHORT* pBrd = aBorders;
 
             //Export non default border spacing
-            for( nBox = 0, nRealBox = 0; nRealBox < nWWColMax; ++nBox)
+            for( nBox = 0, nRealBox = 0; nRealBox < nWWColMax && nBox < nColCnt; ++nBox)
             {
                 if( nBox && pBoxArr[ nBox-1 ] == pBoxArr[ nBox ] )
                     continue;
@@ -2487,7 +2487,7 @@
             }
 
             //Export any vertical direction cells
-            for (nBox = 0, nRealBox = 0; nRealBox < nWWColMax; ++nBox)
+            for (nBox = 0, nRealBox = 0; nRealBox < nWWColMax && nBox < nColCnt; ++nBox)
             {
                 if( nBox && pBoxArr[nBox-1] == pBoxArr[nBox])
                     continue;
@@ -2529,7 +2529,7 @@
         else
         {
             nBackg = 0;
-            for( nBox = 0, nRealBox = 0; nRealBox < nWWColMax; ++nBox )
+            for( nBox = 0, nRealBox = 0; nRealBox < nWWColMax && nBox < nColCnt; ++nBox )
             {
                 if( nBox && pBoxArr[ nBox-1 ] == pBoxArr[ nBox ] )
                     continue;
@@ -2556,7 +2556,7 @@
             Color *pColors = new Color[nBackg];
 
             const SfxPoolItem* pI;
-            for( nBox = 0, nRealBox = 0; nRealBox < nBackg; ++nBox )
+            for( nBox = 0, nRealBox = 0; nRealBox < nBackg && nBox < nColCnt; ++nBox )
             {
                 if( nBox && pBoxArr[ nBox-1 ] == pBoxArr[ nBox ] )
                     continue;
