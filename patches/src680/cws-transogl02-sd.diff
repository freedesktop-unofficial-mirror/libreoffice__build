--- sd/inc/TransitionPreset.hxx	9 Sep 2005 02:52:23 -0000	1.3
+++ sd/inc/TransitionPreset.hxx	7 Jan 2008 20:35:53 -0000	1.3.568.1
@@ -49,6 +49,7 @@
 #endif
 
 #include <list>
+#include <hash_map>
 
 namespace com { namespace sun { namespace star { 
 	namespace animations { class XAnimationNode; }
@@ -56,12 +57,14 @@ namespace com { namespace sun { namespac
 } } }
 
 class SdPage;
+class String;
 
 namespace sd {
 
 class TransitionPreset;
 typedef boost::shared_ptr< TransitionPreset > TransitionPresetPtr;
 typedef std::list< TransitionPresetPtr > TransitionPresetList;
+typedef std::hash_map< rtl::OUString, rtl::OUString, comphelper::UStringHash, comphelper::UStringEqual > UStringMap;
 
 class TransitionPreset
 {
@@ -90,6 +93,11 @@ private:
 	rtl::OUString maUIName;
 
 	static sd::TransitionPresetList* mpTransitionPresetList;
+
+    static bool importTransitionsFile( TransitionPresetList& rList,
+                                       ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory >& xServiceFactory,
+                                       UStringMap& rTransitionNameMape,
+                                       String aFilaname );
 };
 
 }
--- sd/source/core/CustomAnimationPreset.cxx	12 Dec 2006 16:29:29 -0000	1.5
+++ sd/source/core/CustomAnimationPreset.cxx	16 Jan 2008 00:01:03 -0000	1.5.242.2
@@ -39,6 +39,9 @@
 #ifndef _COM_SUN_STAR_UTIL_XCLONEABLE_HPP_
 #include <com/sun/star/util/XCloneable.hpp>
 #endif
+#ifndef _COM_SUN_STAR_UTIL_XMACROEXPANDER_HPP_
+#include <com/sun/star/util/XMacroExpander.hpp>
+#endif
 #ifndef _COM_SUN_STAR_ANIMATIONS_XANIMATIONNODESUPPLIER_HPP_
 #include <com/sun/star/animations/XAnimationNodeSupplier.hpp>
 #endif
@@ -57,6 +60,9 @@
 #ifndef _COM_SUN_STAR_BEANS_PROPERTYVALUE_HPP_
 #include <com/sun/star/beans/PropertyValue.hpp>
 #endif
+#ifndef _COM_SUN_STAR_BEANS_XPROPERTYSET_HPP_
+#include <com/sun/star/beans/XPropertySet.hpp>
+#endif
 #ifndef _COM_SUN_STAR_PRESENTATION_EFFECTPRESETCLASS_HPP_
 #include <com/sun/star/presentation/EffectPresetClass.hpp>
 #endif
@@ -85,6 +91,7 @@
 #endif
 
 #include <tools/debug.hxx>
+#include <rtl/uri.hxx>
 
 #ifndef _SV_SVAPP_HXX
 #include <vcl/svapp.hxx>
@@ -375,6 +382,8 @@ Reference< XAnimationNode > implImportEf
 	return xRootNode;
 }
 
+#define EXPAND_PROTOCOL "vnd.sun.star.expand:"
+
 void CustomAnimationPresets::importEffects()
 {
 	try
@@ -385,12 +394,50 @@ void CustomAnimationPresets::importEffec
 		if( !xServiceFactory.is() )
 			return;
 
-		INetURLObject	aURL( SvtPathOptions().GetConfigPath() );
-		aURL.Append( String( RTL_CONSTASCII_USTRINGPARAM("soffice.cfg") ) );
-		aURL.Append( String( RTL_CONSTASCII_USTRINGPARAM("simpress" ) ) );
-		aURL.Append( String( RTL_CONSTASCII_USTRINGPARAM("effects.xml" ) ) );
-		const OUString aPath( aURL.GetMainURL( INetURLObject::NO_DECODE ) );
-		mxRootNode = implImportEffects( xServiceFactory, aPath );
+        uno::Reference< beans::XPropertySet > xProps( xServiceFactory, UNO_QUERY );
+        uno::Reference< uno::XComponentContext > xContext;
+        xProps->getPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DefaultContext" ))) >>= xContext;
+
+        uno::Reference< util::XMacroExpander > xMacroExpander;
+        if( xContext.is() )
+            xMacroExpander.set( xContext->getValueByName( 
+                                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "/singletons/com.sun.star.util.theMacroExpander"))),
+                                UNO_QUERY );
+
+		Reference< XMultiServiceFactory > xConfigProvider(
+			xServiceFactory->createInstance( 
+				OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.configuration.ConfigurationProvider" ))),
+			UNO_QUERY_THROW );
+
+        // read path to transition effects files from config
+        Any propValue = uno::makeAny( 
+            beans::PropertyValue(
+				OUString( RTL_CONSTASCII_USTRINGPARAM( "nodepath" )), -1,
+                uno::makeAny( OUString( RTL_CONSTASCII_USTRINGPARAM("/org.openoffice.Office.Impress/Misc") )),
+                beans::PropertyState_DIRECT_VALUE ) );
+
+        Reference<container::XNameAccess> xNameAccess(
+            xConfigProvider->createInstanceWithArguments(
+                OUString( RTL_CONSTASCII_USTRINGPARAM("com.sun.star.configuration.ConfigurationAccess")),
+                Sequence<Any>( &propValue, 1 ) ), UNO_QUERY_THROW );
+        uno::Sequence< rtl::OUString > aFiles;
+        xNameAccess->getByName(
+            OUString( RTL_CONSTASCII_USTRINGPARAM("EffectFiles"))) >>= aFiles;
+
+        for( sal_Int32 i=0; i<aFiles.getLength(); ++i )
+        {
+            rtl::OUString aURL = aFiles[i];
+            if( aURL.compareToAscii( RTL_CONSTASCII_STRINGPARAM( EXPAND_PROTOCOL )) == 0 )
+            {
+                // cut protocol
+                rtl::OUString aMacro( aURL.copy( sizeof ( EXPAND_PROTOCOL ) -1 ) );
+                // decode uric class chars
+                aMacro = rtl::Uri::decode( aMacro, rtl_UriDecodeWithCharset, RTL_TEXTENCODING_UTF8 );
+                // expand macro string
+                aURL = xMacroExpander->expandMacros( aMacro );
+            }
+
+            mxRootNode = implImportEffects( xServiceFactory, aURL );
 
 		if( mxRootNode.is() )
 		{
@@ -419,6 +466,7 @@ void CustomAnimationPresets::importEffec
 			}
 		}
 	}
+    }
 	catch( xml::sax::SAXParseException& r )
 	{
         (void)r;
--- sd/source/core/TransitionPreset.cxx	23 Nov 2006 12:12:54 -0000	1.5
+++ sd/source/core/TransitionPreset.cxx	16 Jan 2008 00:01:03 -0000	1.5.252.3
@@ -45,9 +45,18 @@
 #ifndef _COM_SUN_STAR_CONTAINER_XENUMERATIONACCESS_HPP_
 #include <com/sun/star/container/XEnumerationAccess.hpp>
 #endif
+#ifndef _COM_SUN_STAR_CONTAINER_XNAMEACCESS_HPP_
+#include <com/sun/star/container/XNameAccess.hpp>
+#endif
 #ifndef _COM_SUN_STAR_BEANS_NAMEDVALUE_HPP_
 #include <com/sun/star/beans/NamedValue.hpp>
 #endif
+#ifndef _COM_SUN_STAR_BEANS_XPROPERTYSET_HPP_
+#include <com/sun/star/beans/XPropertySet.hpp>
+#endif
+#ifndef _COM_SUN_STAR_UTIL_XMACROEXPANDER_HPP_
+#include <com/sun/star/util/XMacroExpander.hpp>
+#endif
 #ifndef _COM_SUN_STAR_ANIMATIONS_ANIMATIONNODETYPE_HPP_
 #include <com/sun/star/animations/AnimationNodeType.hpp>
 #endif
@@ -79,6 +88,7 @@
 #include <tools/stream.hxx>
 #endif
 
+#include <rtl/uri.hxx>
 #include <tools/debug.hxx>
 
 #ifndef _SD_CUSTOMANIMATIONPRESET_HXX
@@ -92,7 +102,6 @@
 #include <algorithm>
 
 #include "sdpage.hxx"
-#include <hash_map>
 
 using namespace ::vos;
 using namespace ::com::sun::star;
@@ -112,7 +121,6 @@ using ::com::sun::star::beans::NamedValu
 
 namespace sd {
 
-typedef std::hash_map<rtl::OUString, rtl::OUString, comphelper::UStringHash, comphelper::UStringEqual> UStringMap;
 extern Reference< XAnimationNode > implImportEffects( const Reference< XMultiServiceFactory >& xConfigProvider, const OUString& rPath );
 extern void implImportLabels( const Reference< XMultiServiceFactory >& xConfigProvider, const OUString& rNodePath, UStringMap& rStringMap );
 
@@ -142,34 +150,19 @@ TransitionPreset::TransitionPreset( cons
 	mnFadeColor = xTransition->getFadeColor();
 }
 
-bool TransitionPreset::importTransitionPresetList( TransitionPresetList& rList )
+bool TransitionPreset::importTransitionsFile( TransitionPresetList& rList,
+                                              Reference< XMultiServiceFactory >& xServiceFactory,
+                                              UStringMap& rTransitionNameMape,
+                                              String aURL )
 {
-	try
-	{
-		// Get service factory
-		Reference< XMultiServiceFactory > xServiceFactory( comphelper::getProcessServiceFactory() );
-		DBG_ASSERT( xServiceFactory.is(), "sd::CustomAnimationPresets::import(), got no service manager" );
-		if( !xServiceFactory.is() )
-			return false;
-
-		// import ui strings
-		Reference< XMultiServiceFactory > xConfigProvider(
-			xServiceFactory->createInstance( 
-				OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.configuration.ConfigurationProvider" ))),
-			UNO_QUERY_THROW );
-
-		UStringMap aTransitionNameMape;
-		const OUString aTransitionPath( RTL_CONSTASCII_USTRINGPARAM( "/org.openoffice.Office.UI.Effects/UserInterface/Transitions" ) );
-		implImportLabels( xConfigProvider, aTransitionPath, aTransitionNameMape );
-
 		// import transition presets
-		INetURLObject	aURL( SvtPathOptions().GetConfigPath() );
-		aURL.Append( String( RTL_CONSTASCII_USTRINGPARAM("soffice.cfg") ) );
-		aURL.Append( String( RTL_CONSTASCII_USTRINGPARAM("simpress" ) ) );
-		aURL.Append( String( RTL_CONSTASCII_USTRINGPARAM("transitions.xml" ) ) );
+    Reference< XAnimationNode > xAnimationNode;
 
-		Reference< XEnumerationAccess > xEnumerationAccess( implImportEffects( xServiceFactory, aURL.GetMainURL( INetURLObject::NO_DECODE ) ), UNO_QUERY_THROW );
+    try {
+        xAnimationNode = implImportEffects( xServiceFactory, aURL );
+        Reference< XEnumerationAccess > xEnumerationAccess( xAnimationNode, UNO_QUERY_THROW );
 		Reference< XEnumeration > xEnumeration( xEnumerationAccess->createEnumeration(), UNO_QUERY_THROW );
+
 		while( xEnumeration->hasMoreElements() )
 		{
 			Reference< XAnimationNode > xChildNode( xEnumeration->nextElement(), UNO_QUERY_THROW );
@@ -182,8 +175,8 @@ bool TransitionPreset::importTransitionP
 				OUString aPresetId( pPreset->getPresetId() );
 				if( aPresetId.getLength() )
 				{
-					UStringMap::const_iterator aIter( aTransitionNameMape.find( aPresetId ) );
-					if( aIter != aTransitionNameMape.end() )
+                    UStringMap::const_iterator aIter( rTransitionNameMape.find( aPresetId ) );
+                    if( aIter != rTransitionNameMape.end() )
 						pPreset->maUIName = (*aIter).second;
 
 					// add it
@@ -196,16 +189,90 @@ bool TransitionPreset::importTransitionP
 				break;
 			}
 		}
+    } catch( Exception& ) {
+        return false;
+    }
 
 		return true;
 	}
+
+#define EXPAND_PROTOCOL "vnd.sun.star.expand:"
+
+bool TransitionPreset::importTransitionPresetList( TransitionPresetList& rList )
+{
+    bool bRet = false;
+
+	try
+	{
+		// Get service factory
+		Reference< XMultiServiceFactory > xServiceFactory( comphelper::getProcessServiceFactory() );
+		DBG_ASSERT( xServiceFactory.is(), "sd::CustomAnimationPresets::import(), got no service manager" );
+		if( !xServiceFactory.is() )
+			return false;
+
+        uno::Reference< beans::XPropertySet > xProps( xServiceFactory, UNO_QUERY );
+        uno::Reference< uno::XComponentContext > xContext;
+        xProps->getPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DefaultContext" ))) >>= xContext;
+
+        uno::Reference< util::XMacroExpander > xMacroExpander;
+        if( xContext.is() )
+            xMacroExpander.set( xContext->getValueByName( 
+                                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "/singletons/com.sun.star.util.theMacroExpander"))),
+                                UNO_QUERY );
+
+		// import ui strings
+		Reference< XMultiServiceFactory > xConfigProvider(
+			xServiceFactory->createInstance( 
+				OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.configuration.ConfigurationProvider" ))),
+			UNO_QUERY_THROW );
+
+		UStringMap aTransitionNameMape;
+		const OUString aTransitionPath( RTL_CONSTASCII_USTRINGPARAM( "/org.openoffice.Office.UI.Effects/UserInterface/Transitions" ) );
+		implImportLabels( xConfigProvider, aTransitionPath, aTransitionNameMape );
+
+        // read path to transition effects files from config
+        Any propValue = uno::makeAny( 
+            beans::PropertyValue(
+                OUString( RTL_CONSTASCII_USTRINGPARAM("nodepath")), -1,
+                uno::makeAny( OUString( RTL_CONSTASCII_USTRINGPARAM("/org.openoffice.Office.Impress/Misc"))),
+                beans::PropertyState_DIRECT_VALUE ) );
+
+        Reference<container::XNameAccess> xNameAccess(
+            xConfigProvider->createInstanceWithArguments(
+                OUString( RTL_CONSTASCII_USTRINGPARAM("com.sun.star.configuration.ConfigurationAccess")),
+                Sequence<Any>( &propValue, 1 ) ), UNO_QUERY_THROW );
+        uno::Sequence< rtl::OUString > aFiles;
+        xNameAccess->getByName(
+            OUString( RTL_CONSTASCII_USTRINGPARAM("TransitionFiles"))) >>= aFiles;
+
+        for( sal_Int32 i=0; i<aFiles.getLength(); ++i )
+        {
+            rtl::OUString aURL = aFiles[i];
+            if( aURL.compareToAscii( RTL_CONSTASCII_STRINGPARAM( EXPAND_PROTOCOL )) == 0 )
+            {
+                // cut protocol
+                rtl::OUString aMacro( aURL.copy( sizeof ( EXPAND_PROTOCOL ) -1 ) );
+                // decode uric class chars
+                aMacro = rtl::Uri::decode( aMacro, rtl_UriDecodeWithCharset, RTL_TEXTENCODING_UTF8 );
+                // expand macro string
+                aURL = xMacroExpander->expandMacros( aMacro );
+            }
+
+            bRet |= importTransitionsFile( rList, 
+                                           xServiceFactory, 
+                                           aTransitionNameMape, 
+                                           aURL );
+        }
+
+		return bRet;
+	}
 	catch( Exception& e )
 	{
 		(void)e;
 		DBG_ERROR( "sd::TransitionPreset::importResources(), Exception cought!" );
 	}
 
-	return false;
+	return bRet;
 }
 
 TransitionPresetList* TransitionPreset::mpTransitionPresetList = 0;
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ sd/xml/transitions-ogl	7 Jan 2008 20:35:54 -0000	1.1.2.1
@@ -0,0 +1,33 @@
+<?xml version="1.0"?>
+<anim:seq xmlns:office="urn:oasis:names:tc:openoffice:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:openoffice:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:openoffice:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:openoffice:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:openoffice:xmlns:drawing:1.0" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:openoffice:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:openoffice:xmlns:datastyle:1.0" xmlns:pres="urn:oasis:names:tc:openoffice:xmlns:presentation:1.0" xmlns:svg="http://www.w3.org/2000/svg" xmlns:chart="urn:oasis:names:tc:openoffice:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:openoffice:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:openoffice:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:openoffice:xmlns:script:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:smil="http://www.w3.org/2001/SMIL20" xmlns:anim="urn:oasis:names:tc:openoffice:xmlns:animation:1.0" pres:node-type="main-sequence">
+ <anim:par pres:preset-id="tile-flip">
+  <anim:transitionFilter smil:type="miscShapeWipe" smil:subtype="across"/>
+ </anim:par>
+ <anim:par pres:preset-id="outside-cube">
+  <anim:transitionFilter smil:type="miscShapeWipe" smil:subtype="cornersOut"/>
+ </anim:par>
+ <anim:par pres:preset-id="revolving-circles">
+  <anim:transitionFilter smil:type="miscShapeWipe" smil:subtype="circle"/>
+ </anim:par>
+ <anim:par pres:preset-id="turning-helix">
+  <anim:transitionFilter smil:type="miscShapeWipe" smil:subtype="fanOutHorizontal"/>
+ </anim:par>
+ <anim:par pres:preset-id="inside-cube">
+  <anim:transitionFilter smil:type="miscShapeWipe" smil:subtype="cornersIn"/>
+ </anim:par>
+ <anim:par pres:preset-id="fall">
+  <anim:transitionFilter smil:type="miscShapeWipe" smil:subtype="leftToRight"/>
+ </anim:par>
+ <anim:par pres:preset-id="turn-around">
+  <anim:transitionFilter smil:type="miscShapeWipe" smil:subtype="topToBottom"/>
+ </anim:par>
+ <anim:par pres:preset-id="iris">
+  <anim:transitionFilter smil:type="miscShapeWipe" smil:subtype="topLeft"/>
+ </anim:par>
+ <anim:par pres:preset-id="turn-down">
+  <anim:transitionFilter smil:type="miscShapeWipe" smil:subtype="topRight"/>
+ </anim:par>
+ <anim:par pres:preset-id="rochade">
+  <anim:transitionFilter smil:type="miscShapeWipe" smil:subtype="bottomRight"/>
+ </anim:par>
+ </anim:seq>
