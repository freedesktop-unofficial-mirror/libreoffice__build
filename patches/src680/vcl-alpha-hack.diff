Index: vcl/inc/bitmapex.hxx
===================================================================
RCS file: /cvs/gsl/vcl/inc/bitmapex.hxx,v
retrieving revision 1.9
diff -u -r1.9 bitmapex.hxx
--- vcl/inc/bitmapex.hxx	21 May 2004 16:20:50 -0000	1.9
+++ vcl/inc/bitmapex.hxx	20 Dec 2004 21:57:57 -0000
@@ -267,6 +267,9 @@
     BOOL				CopyPixel( const Rectangle& rRectDst,
 								   const Rectangle& rRectSrc,
 								   const BitmapEx* pBmpExSrc = NULL );
+    BOOL				CopyPixelAlpha( const Rectangle& rRectDst,
+										const Rectangle& rRectSrc,
+										const AlphaMask* pAlphaSrc = NULL );
 
     /** Fill the entire bitmap with the given color
 
Index: vcl/source/gdi/bitmapex.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/gdi/bitmapex.cxx,v
retrieving revision 1.12
diff -u -r1.12 bitmapex.cxx
--- vcl/source/gdi/bitmapex.cxx	8 Sep 2004 15:05:36 -0000	1.12
+++ vcl/source/gdi/bitmapex.cxx	20 Dec 2004 21:57:58 -0000
@@ -575,6 +575,14 @@
 
 // ------------------------------------------------------------------
 
+BOOL BitmapEx::CopyPixelAlpha( const Rectangle& rRectDst,
+							   const Rectangle& rRectSrc,
+							   const AlphaMask* pAlphaSrc )
+{
+	if( IsAlpha() )
+		aMask.CopyPixel( rRectDst, rRectSrc, pAlphaSrc );
+}
+
 BOOL BitmapEx::CopyPixel( const Rectangle& rRectDst, const Rectangle& rRectSrc,
 						  const BitmapEx* pBmpExSrc )
 {
Index: vcl/source/gdi/image.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/gdi/image.cxx,v
retrieving revision 1.18
diff -u -r1.18 image.cxx
--- vcl/source/gdi/image.cxx	26 Nov 2004 14:34:14 -0000	1.18
+++ vcl/source/gdi/image.cxx	20 Dec 2004 21:57:59 -0000
@@ -602,6 +605,15 @@
 					
 					const Rectangle aRectDst( Point( aItemSizePixel.Width() * i, 0 ), aItemSizePixel );
 					const Rectangle aRectSrc( Point( 0, 0 ), aWorkSizePixel );
+
+					if( aItemSizePixel != aWorkSizePixel )
+					{
+							BYTE aTransparent = 255;
+							static AlphaMask aMask( Size( 32, 32), &aTransparent );
+							fprintf (stderr, "Clobber size difference (1)\n");
+							const Rectangle aRectAlpha( Point( 0, 0 ), aItemSizePixel );
+							aBmpEx.CopyPixelAlpha( aRectDst, aRectAlpha, &aMask );
+					}
 					
 					aBmpEx.CopyPixel( aRectDst, aRectSrc, &aWorkBmpEx );			
 				}
@@ -696,6 +708,15 @@
 				const Rectangle aRectDst( Point( aItemSizePixel.Width() * i, 0 ), aItemSizePixel );
 				const Rectangle aRectSrc( Point( 0, 0 ), aWorkSizePixel );
 				
+					if( aItemSizePixel != aWorkSizePixel )
+					{
+							BYTE aTransparent = 255;
+							static AlphaMask aMask( Size( 32, 32), &aTransparent );
+							fprintf (stderr, "Clobber size difference (1)\n");
+							const Rectangle aRectAlpha( Point( 0, 0 ), aItemSizePixel );
+							aBmpEx.CopyPixelAlpha( aRectDst, aRectAlpha, &aMask );
+					}
+
 				aBmpEx.CopyPixel( aRectDst, aRectSrc, &aWorkBmpEx );			
 			}
 #ifdef DBG_UTIL		
