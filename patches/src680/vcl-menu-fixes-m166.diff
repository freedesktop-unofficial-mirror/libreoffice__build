Index: vcl/inc/menu.hxx
===================================================================
RCS file: /cvs/gsl/vcl/inc/menu.hxx,v
retrieving revision 1.32
diff -u -r1.32 menu.hxx
--- vcl/inc/menu.hxx	30 Aug 2004 16:34:28 -0000	1.32
+++ vcl/inc/menu.hxx	18 Oct 2004 20:16:06 -0000
@@ -148,6 +148,9 @@
 // overrides default hiding of disabled entries in popup menus
 #define MENU_FLAG_ALWAYSSHOWDISABLEDENTRIES	0x0004
 
+// forces images & toggle visibility for toolbar config popup
+#define MENU_FLAG_SHOWCHECKIMAGES     0x0008
+
 // --------
 // - Menu -
 // --------
Index: vcl/source/window/menu.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/menu.cxx,v
retrieving revision 1.114
diff -u -r1.114 menu.cxx
--- vcl/source/window/menu.cxx	17 Nov 2004 13:19:35 -0000	1.114
+++ vcl/source/window/menu.cxx	14 Dec 2004 15:21:14 -0000
@@ -2172,11 +2503,14 @@
     }
 
     if ( !bIsMenuBar )
     {
+		int nCheckWidth = 0;
+		if ((nMenuFlags & MENU_FLAG_SHOWCHECKIMAGES) || aMaxImgSz.Width() <= 0)
+			nCheckWidth = nFontHeight/2 + nExtra;
         USHORT gfxExtra = (USHORT) Max( nExtra, 7L ); // #107710# increase space between checkmarks/images/text
         nCheckPos = (USHORT)nExtra;
-        nImagePos = (USHORT)(nCheckPos + nFontHeight/2 + gfxExtra );
+        nImagePos = (USHORT)(nCheckPos + nCheckWidth );
         nTextPos = (USHORT)(nImagePos+aMaxImgSz.Width());
         if ( aMaxImgSz.Width() )
             nTextPos += gfxExtra;
 
@@ -2304,10 +2642,15 @@
                 // Image:
                 if ( !bLayout && !bIsMenuBar && ( ( pData->eType == MENUITEM_IMAGE ) || ( pData->eType == MENUITEM_STRINGIMAGE ) ) )
                 {
-                    aTmpPos.Y() = aPos.Y();
-                    aTmpPos.X() = aPos.X() + nImagePos;
-                    aTmpPos.Y() += (pData->aSz.Height()-pData->aImage.GetSizePixel().Height())/2;
-                    pWin->DrawImage( aTmpPos, pData->aImage, nImageStyle );
+					// Don't render an image for a check thing
+					if ((nMenuFlags & MENU_FLAG_SHOWCHECKIMAGES) ||
+                     (!(pData->nBits & (MIB_RADIOCHECK | MIB_CHECKABLE | MIB_AUTOCHECK)) && !pData->bChecked))
+					{
+	                    aTmpPos.Y() = aPos.Y();
+	                    aTmpPos.X() = aPos.X() + nImagePos;
+	                    aTmpPos.Y() += (pData->aSz.Height()-pData->aImage.GetSizePixel().Height())/2;
+	                    pWin->DrawImage( aTmpPos, pData->aImage, nImageStyle );
+					}
                 }
 
                 // Text:

Index: framework/source/uielement/toolbarmanager.cxx
===================================================================
RCS file: /cvs/framework/framework/source/uielement/toolbarmanager.cxx,v
retrieving revision 1.12
diff -u -r1.12 toolbarmanager.cxx
--- framework/source/uielement/toolbarmanager.cxx	21 Jan 2005 12:42:13 -0000	1.12
+++ framework/source/uielement/toolbarmanager.cxx	1 Feb 2005 14:41:35 -0000
@@ -1580,6 +1580,9 @@
             aPopupMenu.EnableItem( MENUITEM_TOOLBAR_CUSTOMIZETOOLBAR, sal_False );
         }
 
+		pItemMenu->SetMenuFlags (pItemMenu->GetMenuFlags () | 
+								 MENU_FLAG_SHOWCHECKIMAGES);
+
         for ( nPos = 0; nPos < m_pToolBar->GetItemCount(); ++nPos )
 	    {
 		    if ( m_pToolBar->GetItemType(nPos) == TOOLBOXITEM_BUTTON )
