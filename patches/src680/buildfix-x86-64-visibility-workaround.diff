diff --git a/config_office/configure.in b/config_office/configure.in
index b2faf3a..68e4904 100644
--- config_office/configure.in
+++ config_office/configure.in
@@ -2369,6 +2369,7 @@ AC_SUBST(USE_SYSTEM_STL)
 dnl ===================================================================
 dnl system stl sanity tests
 dnl ===================================================================
+HAVE_GCC_VISIBILITY_BROKEN=
 if test "$USE_SYSTEM_STL" = "YES"; then
    AC_MSG_CHECKING([if hash_map will be in __gnu_cxx namespace])
    AC_LANG_PUSH([C++])
@@ -2405,13 +2406,14 @@ using namespace std;
 
       AC_MSG_RESULT([$gccvisok])
       if test "$gccvisok" = "no"; then
-         AC_MSG_ERROR([Your gcc is not -fvisibility-inlines-hidden safe. Try with --with-stlport])
+         HAVE_GCC_VISIBILITY_BROKEN="TRUE"
       fi
 
    fi
 
    AC_LANG_POP([C++])
 fi
+AC_SUBST(HAVE_GCC_VISIBILITY_BROKEN)
 
 dnl ===================================================================
 dnl allocator
diff --git a/config_office/set_soenv.in b/config_office/set_soenv.in
index f1538b9..488597a 100644
--- config_office/set_soenv.in
+++ config_office/set_soenv.in
@@ -1917,6 +1917,8 @@ ToFile( "JAVAHOME",          $JAVAHOME,          "e" );
 ToFile( "CC",                $CC,                "e" );
 ToFile( "HAVE_GCC_VISIBILITY_FEATURE",
 		"@HAVE_GCC_VISIBILITY_FEATURE@", "e" );
+ToFile( "HAVE_GCC_VISIBILITY_BROKEN",
+		"@HAVE_GCC_VISIBILITY_BROKEN@", "e" );
 ToFile( "HAVE_LD_HASH_STYLE","@HAVE_LD_HASH_STYLE@","e" );
 ToFile( "HAVE_LD_BDIRECT",   "@HAVE_LD_BDIRECT@","e" );
 ToFile( "CXX",               $CXX,               "e" );
diff --git a/hwpfilter/source/hwpeq.cpp b/hwpfilter/source/hwpeq.cpp
index 600a443..c5824a7 100644
--- hwpfilter/source/hwpeq.cpp
+++ hwpfilter/source/hwpeq.cpp
@@ -42,7 +42,13 @@
 
 // DVO: always use standard headers:
 #include <istream>
+#ifdef GCC_VISIBILITY_BROKEN
+#pragma GCC visibility push(default)
+#endif
 #include <sstream>
+#ifdef GCC_VISIBILITY_BROKEN
+#pragma GCC visibility pop
+#endif
 using namespace std;
 
 #include "mzstring.h"
diff --git a/scsolver/source/inc/numeric/matrix.hxx b/scsolver/source/inc/numeric/matrix.hxx
index bd10dd6..023e48a 100644
--- scsolver/source/inc/numeric/matrix.hxx
+++ scsolver/source/inc/numeric/matrix.hxx
@@ -29,7 +29,13 @@
 #ifndef _SCSOLVER_NUMERIC_MATRIX_HXX_
 #define _SCSOLVER_NUMERIC_MATRIX_HXX_
 
+#ifdef GCC_VISIBILITY_BROKEN
+#pragma GCC visibility push(default)
+#endif
 #include <boost/numeric/ublas/matrix.hpp>
+#ifdef GCC_VISIBILITY_BROKEN
+#pragma GCC visibility pop
+#endif
 #include <boost/numeric/ublas/matrix_proxy.hpp>
 
 #include <vector>
diff --git a/shell/inc/internal/xml_parser.hxx b/shell/inc/internal/xml_parser.hxx
index 0a86ffa..48eda4d 100644
--- shell/inc/internal/xml_parser.hxx
+++ shell/inc/internal/xml_parser.hxx
@@ -41,7 +41,14 @@
 #else
 #include <external/expat/xmlparse.h>
 #endif
+
+#ifdef GCC_VISIBILITY_BROKEN
+#pragma GCC visibility push(default)
+#endif
 #include <stdexcept>
+#ifdef GCC_VISIBILITY_BROKEN
+#pragma GCC visibility pop
+#endif
 
 //-----------------------------------------------------
 class xml_parser_exception : public std::runtime_error  
diff --git a/solenv/inc/unxlngx6.mk b/solenv/inc/unxlngx6.mk
index 4afa0b6..91d9bf1 100644
--- solenv/inc/unxlngx6.mk
+++ solenv/inc/unxlngx6.mk
@@ -103,6 +103,9 @@ CFLAGSCXX+= -fno-use-cxa-atexit
 PICSWITCH:=-fpic
 .IF "$(HAVE_GCC_VISIBILITY_FEATURE)" == "TRUE"
 CFLAGSCXX += -fvisibility-inlines-hidden
+.IF "$(HAVE_GCC_VISIBILITY_BROKEN)" == "TRUE"
+CFLAGSCXX += -DGCC_VISIBILITY_BROKEN
+.ENDIF # "$(HAVE_GCC_VISIBILITY_BROKEN)" == "TRUE"
 .ENDIF # "$(HAVE_GCC_VISIBILITY_FEATURE)" == "TRUE"
 
 # Compiler flags for compiling static object in multi threaded environment with graphical user interface
diff --git a/xmlhelp/source/com/sun/star/help/HelpCompiler.hxx b/xmlhelp/source/com/sun/star/help/HelpCompiler.hxx
index d33007a..77e7cc4 100644
--- xmlhelp/source/com/sun/star/help/HelpCompiler.hxx
+++ xmlhelp/source/com/sun/star/help/HelpCompiler.hxx
@@ -36,13 +36,19 @@
 #ifndef HELPCOMPILER_HXX
 #define HELPCOMPILER_HXX
 
+#ifdef GCC_VISIBILITY_BROKEN
+#pragma GCC visibility push(default)
+#endif
 #include <string>
+#include <fstream>
+#include <sstream>
+#ifdef GCC_VISIBILITY_BROKEN
+#pragma GCC visibility pop
+#endif
 #include <hash_map>
 #include <vector>
 #include <list>
-#include <fstream>
 #include <iostream>
-#include <sstream>
 #include <algorithm>
 #include <ctype.h>
 #ifdef SYSTEM_DB
