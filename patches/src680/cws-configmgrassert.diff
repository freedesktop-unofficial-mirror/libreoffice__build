Index: configmgr/source/inc/node.hxx
===================================================================
RCS file: /cvs/util/configmgr/source/inc/node.hxx,v
retrieving revision 1.5
diff -u -p -u -r1.5 node.hxx
--- configmgr/source/inc/node.hxx	6 Nov 2006 14:48:08 -0000	1.5
+++ configmgr/source/inc/node.hxx	13 Dec 2006 15:20:17 -0000
@@ -122,6 +122,13 @@ namespace configmgr
 									 Address _aTemplateData);
             static
             void releaseTemplateData(memory::Allocator const & _anAllocator, Address _aTemplateData);
+
+            static
+            rtl::OUString getTemplateDataName(memory::Accessor const & _anAccessor,
+											  Address _aTemplateData);
+            static
+            rtl::OUString getTemplateDataModule(memory::Accessor const & _anAccessor,
+												Address _aTemplateData);
         };
     //-----------------------------------------------------------------------------
         struct ValueNode
Index: configmgr/source/tree/builddata.cxx
===================================================================
RCS file: /cvs/util/configmgr/source/tree/builddata.cxx,v
retrieving revision 1.10
diff -u -p -u -r1.10 builddata.cxx
--- configmgr/source/tree/builddata.cxx	6 Nov 2006 14:49:40 -0000	1.10
+++ configmgr/source/tree/builddata.cxx	13 Dec 2006 15:20:17 -0000
@@ -304,7 +304,7 @@ namespace configmgr
         Result handle(GroupNodeAccess const & _aNode);
         Result handle(SetNodeAccess const & _aNode);
 
-        Address makeTemplateData(Address _aSourceTemplate);
+		Address makeTemplateData(Accessor const & _aSourceAccessor, Address _aSourceTemplate);
     };
 //-----------------------------------------------------------------------------
 
@@ -799,7 +799,7 @@ NodeVisitor::Result CopyingDataTreeBuild
 
     sharable::Name aNodeName = allocName( aSrc.info.getName());
     Flags::Field aFlags = aSrc.info.flags;
-    Address aTemplate = this->makeTemplateData(aSrc.elementType);
+    Address aTemplate = this->makeTemplateData(_aNode.accessor(), aSrc.elementType);
     
     this->builder().addSet(aNodeName,aFlags,aTemplate);
 
@@ -812,9 +812,12 @@ NodeVisitor::Result CopyingDataTreeBuild
 }
 //-----------------------------------------------------------------------------
         
-Address CopyingDataTreeBuilder::makeTemplateData(Address _aSourceTemplate)
+Address CopyingDataTreeBuilder::makeTemplateData(Accessor const & _aSourceAccessor, Address _aSourceTemplate)
 {
-    return SetNode::copyTemplateData(allocator(), _aSourceTemplate);
+    rtl::OUString aTemplateName      = SetNode::getTemplateDataName(_aSourceAccessor,_aSourceTemplate);
+    rtl::OUString aTemplateModule    = SetNode::getTemplateDataModule(_aSourceAccessor,_aSourceTemplate);
+
+    return SetNode::allocTemplateData(allocator(), aTemplateName, aTemplateModule );
 }
 //-----------------------------------------------------------------------------
 
Index: configmgr/source/tree/node.cxx
===================================================================
RCS file: /cvs/util/configmgr/source/tree/node.cxx,v
retrieving revision 1.9
diff -u -p -u -r1.9 node.cxx
--- configmgr/source/tree/node.cxx	6 Nov 2006 14:50:21 -0000	1.9
+++ configmgr/source/tree/node.cxx	13 Dec 2006 15:20:18 -0000
@@ -283,6 +283,20 @@ void SetNode::releaseTemplateData(memory
     _anAllocator.deallocate(_aTemplateData);
 }
 
+rtl::OUString SetNode::getTemplateDataName(memory::Accessor const & _anAccessor,
+										   Address _aTemplateData)
+{
+    SetNodeTemplateData const * pData = readTemplateData(_anAccessor,_aTemplateData);
+	return pData->name;
+}
+
+rtl::OUString SetNode::getTemplateDataModule(memory::Accessor const & _anAccessor,
+											 Address _aTemplateData)
+{
+    SetNodeTemplateData const * pData = readTemplateData(_anAccessor,_aTemplateData);
+	return pData->module;
+}
+
 //-----------------------------------------------------------------------------
 
 rtl::OUString SetNode::getElementTemplateName(memory::Accessor const & _anAccessor)   const
