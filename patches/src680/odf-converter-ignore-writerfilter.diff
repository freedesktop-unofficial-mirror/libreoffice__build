diff --git oox/source/core/filterdetect.cxx oox/source/core/filterdetect.cxx
index e090c61..b5c97ce 100644
--- oox/source/core/filterdetect.cxx
+++ oox/source/core/filterdetect.cxx
@@ -48,6 +48,9 @@
 #include <cppuhelper/implbase1.hxx>
 #include <cppuhelper/implbase2.hxx>
 
+#include <unotools/bootstrap.hxx>
+#include <osl/file.hxx>
+
 #include "oox/helper/attributelist.hxx"
 #include "oox/helper/helper.hxx"
 #include "oox/core/fasttokenhandler.hxx"
@@ -325,6 +328,19 @@ FilterDetect::~FilterDetect()
 
 OUString SAL_CALL FilterDetect::detect( Sequence< PropertyValue >& lDescriptor ) throw( RuntimeException )
 {
+    // hack for odf-converter - we ignore the built-in oox import filter if
+    // OdfConverter is present
+    rtl::OUString aPath;
+    ::utl::Bootstrap::PathStatus aBaseLocateResult = ::utl::Bootstrap::locateBaseInstallation( aPath );
+    if ( aBaseLocateResult == ::utl::Bootstrap::PATH_EXISTS )
+    {
+        aPath += rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "/program/OdfConverter" ) );
+
+        osl::DirectoryItem aDirItem;
+        if ( osl::DirectoryItem::get( aPath, aDirItem ) == osl::FileBase::E_None )
+            return rtl::OUString();
+    }
+
     OUString aFilter;
 
     Reference< XFastDocumentHandler > xHandler( new FilterDetectDocHandler(aFilter) );
diff --git oox/util/makefile.mk oox/util/makefile.mk
index 69713a6..3c69e95 100644
--- oox/util/makefile.mk
+++ oox/util/makefile.mk
@@ -74,6 +74,7 @@ SHL1STDLIBS= \
 		$(RTLLIB)		\
 		$(SALLIB)		\
 		$(BASEGFXLIB)	\
+		$(UNOTOOLSLIB)	\
 		$(SAXLIB)
 
 SHL1DEF=    $(MISC)$/$(SHL1TARGET).def
diff --git writerfilter/source/filter/WriterFilterDetection.cxx writerfilter/source/filter/WriterFilterDetection.cxx
index e9030ac..9f910ae 100644
--- writerfilter/source/filter/WriterFilterDetection.cxx
+++ writerfilter/source/filter/WriterFilterDetection.cxx
@@ -58,6 +58,10 @@
 #ifndef _UNOTOOLS_STREAMHELPER_HXX_
 #include <unotools/ucbstreamhelper.hxx>
 #endif
+
+#include <unotools/bootstrap.hxx>
+#include <osl/file.hxx>
+
 using namespace ::rtl;
 using namespace ::cppu;
 using namespace ::com::sun::star;
@@ -91,6 +95,19 @@ OUString WriterFilterDetection_getImplementationName () throw (uno::RuntimeExcep
 OUString WriterFilterDetection::detect( uno::Sequence< beans::PropertyValue >& rDescriptor )
    throw( uno::RuntimeException )
 {
+    // hack for odf-converter - we ignore the built-in oox import filter if
+    // OdfConverter is present
+    rtl::OUString aPath;
+    ::utl::Bootstrap::PathStatus aBaseLocateResult = ::utl::Bootstrap::locateBaseInstallation( aPath );
+    if ( aBaseLocateResult == ::utl::Bootstrap::PATH_EXISTS )
+    {
+        aPath += rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "/program/OdfConverter" ) );
+
+        osl::DirectoryItem aDirItem;
+        if ( osl::DirectoryItem::get( aPath, aDirItem ) == osl::FileBase::E_None )
+            return rtl::OUString();
+    }
+
     OUString sTypeName;
     bool bWord = false;
     sal_Int32 nPropertyCount = rDescriptor.getLength();
