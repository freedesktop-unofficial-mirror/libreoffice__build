Index: canvas/inc/canvas/base/graphicdevicebase.hxx
===================================================================
RCS file: /cvs/gsl/canvas/inc/canvas/base/graphicdevicebase.hxx,v
retrieving revision 1.2
retrieving revision 1.2.6.1
diff -u -p -u -p -r1.2 -r1.2.6.1
--- canvas/inc/canvas/base/graphicdevicebase.hxx	2 Nov 2005 12:43:16 -0000	1.2
+++ canvas/inc/canvas/base/graphicdevicebase.hxx	7 Nov 2005 17:24:11 -0000	1.2.6.1
@@ -513,7 +513,9 @@ namespace canvas
 
         void setDumpScreenContent( const ::com::sun::star::uno::Any& rAny )
         {
-            mbDumpScreenContent = rAny.get< bool >();
+            // TODO(Q1): this was mbDumpScreenContent =
+            // rAny.get<bool>(), only that gcc3.3 wouldn't eat it
+            rAny >>= mbDumpScreenContent;
         }
 
         HelperType 		   maDeviceHelper;
Index: canvas/source/tools/image.cxx
===================================================================
RCS file: /cvs/gsl/canvas/source/tools/image.cxx,v
retrieving revision 1.2
retrieving revision 1.2.6.1
diff -u -p -u -p -r1.2 -r1.2.6.1
--- canvas/source/tools/image.cxx	2 Nov 2005 12:52:42 -0000	1.2
+++ canvas/source/tools/image.cxx	7 Nov 2005 17:21:09 -0000	1.2.6.1
@@ -103,8 +103,6 @@
 // platform-dependend includes [wrapped into their own namepsaces]
 //////////////////////////////////////////////////////////////////////////////////
 
-#include <malloc.h>		// _alloca
-
 #if defined(WNT)
 	namespace  win32 
     {
@@ -969,10 +967,10 @@ namespace canvas { namespace
 //////////////////////////////////////////////////////////////////////////////////
 
 template<class pixel_format>
-void Image::drawLinePolyPolygon( const ::basegfx::B2DPolyPolygon&   rPoly,
-							double                             fStrokeWidth,
-							const rendering::ViewState&        viewState, 
-							const rendering::RenderState&      renderState )
+void Image::drawLinePolyPolygonImpl( const ::basegfx::B2DPolyPolygon&   rPoly,
+                                     double                             fStrokeWidth,
+                                     const rendering::ViewState&        viewState, 
+                                     const rendering::RenderState&      renderState )
 {
     ::basegfx::B2DPolyPolygon aPolyPolygon( rPoly );
     ARGB                      aRenderColor;
@@ -1087,10 +1085,10 @@ void Image::drawLinePolyPolygon( const :
 	switch(maDesc.eFormat)
 	{
 		case FMT_R8G8B8:
-			drawLinePolyPolygon<agg::pixfmt_rgb24>(rPoly,fStrokeWidth,viewState,renderState);
+			drawLinePolyPolygonImpl<agg::pixfmt_rgb24>(rPoly,fStrokeWidth,viewState,renderState);
 			break;
 		case FMT_A8R8G8B8:
-			drawLinePolyPolygon<agg::pixfmt_rgba32>(rPoly,fStrokeWidth,viewState,renderState);
+			drawLinePolyPolygonImpl<agg::pixfmt_rgba32>(rPoly,fStrokeWidth,viewState,renderState);
 			break;
         default:
             OSL_ENSURE(false, "Unexpected pixel format");
@@ -1216,7 +1214,7 @@ class cachedPrimitiveFTPP : public Image
 //////////////////////////////////////////////////////////////////////////////////
 
 template<class pixel_format,class span_gen_type>
-ImageCachedPrimitiveSharedPtr Image::fillTexturedPolyPolygon(
+ImageCachedPrimitiveSharedPtr Image::fillTexturedPolyPolygonImpl(
 									 const Image&					  rTexture,
                                      const ::basegfx::B2DPolyPolygon& rPolyPolygon,
                                      const ::basegfx::B2DHomMatrix&   rOverallTransform,
@@ -1430,39 +1428,43 @@ ImageCachedPrimitiveSharedPtr Image::fil
 
 	if(nDest == FMT_R8G8B8 && nSource == FMT_R8G8B8)
     {
-		return fillTexturedPolyPolygon< agg::pixfmt_rgb24,
-								 span_gen_type_rgb >( rTexture,
-													  rPolyPolygon,
-													  rOverallTransform,
-													  rViewTransform,
-													  texture );
+		return fillTexturedPolyPolygonImpl< agg::pixfmt_rgb24,
+                                            span_gen_type_rgb >( 
+                                                rTexture,
+                                                rPolyPolygon,
+                                                rOverallTransform,
+                                                rViewTransform,
+                                                texture );
     }
 	else if(nDest == FMT_R8G8B8 && nSource == FMT_A8R8G8B8)
     {
-		return fillTexturedPolyPolygon< agg::pixfmt_rgb24,
-								 span_gen_type_rgba >( rTexture,
-													   rPolyPolygon,
-													   rOverallTransform,
-													   rViewTransform,
-													   texture );
+		return fillTexturedPolyPolygonImpl< agg::pixfmt_rgb24,
+                                            span_gen_type_rgba >( 
+                                                rTexture,
+                                                rPolyPolygon,
+                                                rOverallTransform,
+                                                rViewTransform,
+                                                texture );
     }
 	else if(nDest == FMT_A8R8G8B8 && nSource == FMT_R8G8B8)
     {
-		return fillTexturedPolyPolygon< agg::pixfmt_rgba32,
-								 span_gen_type_rgb >( rTexture,
-													  rPolyPolygon,
-													  rOverallTransform,
-													  rViewTransform,
-													  texture );
+		return fillTexturedPolyPolygonImpl< agg::pixfmt_rgba32,
+                                            span_gen_type_rgb >( 
+                                                rTexture,
+                                                rPolyPolygon,
+                                                rOverallTransform,
+                                                rViewTransform,
+                                                texture );
     }
 	else if(nDest == FMT_A8R8G8B8 && nSource == FMT_A8R8G8B8)
     {
-		return fillTexturedPolyPolygon< agg::pixfmt_rgba32,
-								 span_gen_type_rgba >( rTexture,
-													  rPolyPolygon,
-													  rOverallTransform,
-													  rViewTransform,
-													  texture );
+		return fillTexturedPolyPolygonImpl< agg::pixfmt_rgba32,
+                                            span_gen_type_rgba >( 
+                                                rTexture,
+                                                rPolyPolygon,
+                                                rOverallTransform,
+                                                rViewTransform,
+                                                texture );
     }
     else
     {
@@ -1477,12 +1479,12 @@ ImageCachedPrimitiveSharedPtr Image::fil
 //////////////////////////////////////////////////////////////////////////////////
 
 template<class pixel_format>
-void Image::fillGradient( const ParametricPolyPolygon::Values& rValues,
-                          const uno::Sequence< double >&       rUnoColor1,
-                          const uno::Sequence< double >&       rUnoColor2,
-                          const ::basegfx::B2DPolyPolygon&     rPolyPolygon,
-                          const ::basegfx::B2DHomMatrix&       rOverallTransform,
-                          const rendering::Texture&            texture )
+void Image::fillGradientImpl( const ParametricPolyPolygon::Values& rValues,
+                              const uno::Sequence< double >&       rUnoColor1,
+                              const uno::Sequence< double >&       rUnoColor2,
+                              const ::basegfx::B2DPolyPolygon&     rPolyPolygon,
+                              const ::basegfx::B2DHomMatrix&       rOverallTransform,
+                              const rendering::Texture&            texture )
 {
     const ARGB aColor1(0xFFFFFFFF,
                        rUnoColor1);
@@ -1665,10 +1667,10 @@ void Image::fillGradient( const Parametr
 	switch(maDesc.eFormat)
 	{
 		case FMT_R8G8B8:
-			fillGradient<agg::pixfmt_rgb24>(rValues,rUnoColor1,rUnoColor2,rPolyPolygon,rOverallTransform,texture);
+			fillGradientImpl<agg::pixfmt_rgb24>(rValues,rUnoColor1,rUnoColor2,rPolyPolygon,rOverallTransform,texture);
 			break;
 		case FMT_A8R8G8B8:
-			fillGradient<agg::pixfmt_rgba32>(rValues,rUnoColor1,rUnoColor2,rPolyPolygon,rOverallTransform,texture);
+			fillGradientImpl<agg::pixfmt_rgba32>(rValues,rUnoColor1,rUnoColor2,rPolyPolygon,rOverallTransform,texture);
 			break;
         default:
             OSL_ENSURE(false, "Unexpected pixel format");
@@ -1804,7 +1806,7 @@ Image::~Image()
 //////////////////////////////////////////////////////////////////////////////////
 
 template<class pixel_format>
-void Image::implClear( sal_uInt8 a,
+void Image::clearImpl( sal_uInt8 a,
                        sal_uInt8 r,
                        sal_uInt8 g,
                        sal_uInt8 b )
@@ -1827,9 +1829,9 @@ void Image::clear( sal_uInt8 a,
 	switch(maDesc.eFormat)
 	{
 		case FMT_R8G8B8:
-			return implClear<agg::pixfmt_rgb24>(a,r,g,b);
+			return clearImpl<agg::pixfmt_rgb24>(a,r,g,b);
 		case FMT_A8R8G8B8:
-			return implClear<agg::pixfmt_rgba32>(a,r,g,b);
+			return clearImpl<agg::pixfmt_rgba32>(a,r,g,b);
         default:
             OSL_ENSURE(false, "Unexpected pixel format");
             break;
@@ -1852,10 +1854,10 @@ void Image::fillB2DPolyPolygon( 
 	switch(maDesc.eFormat)
 	{
 		case FMT_R8G8B8:
-			fillPolyPolygon<agg::pixfmt_rgb24>(rPolyPolygon,viewState,renderState);
+			fillPolyPolygonImpl<agg::pixfmt_rgb24>(rPolyPolygon,viewState,renderState);
             break;
 		case FMT_A8R8G8B8:
-			fillPolyPolygon<agg::pixfmt_rgba32>(rPolyPolygon,viewState,renderState);
+			fillPolyPolygonImpl<agg::pixfmt_rgba32>(rPolyPolygon,viewState,renderState);
             break;
         default:
             OSL_ENSURE(false, "Unexpected pixel format");
@@ -2067,7 +2069,7 @@ ImageCachedPrimitiveSharedPtr Image::str
 //////////////////////////////////////////////////////////////////////////////////
 
 template<class pixel_format>
-ImageCachedPrimitiveSharedPtr Image::fillPolyPolygon( 
+ImageCachedPrimitiveSharedPtr Image::fillPolyPolygonImpl( 
             const ::basegfx::B2DPolyPolygon&                    rPolyPolygon, 
             const rendering::ViewState&                         viewState, 
             const rendering::RenderState&                       renderState )
@@ -2172,9 +2174,9 @@ ImageCachedPrimitiveSharedPtr Image::fil
 	switch(maDesc.eFormat)
 	{
 		case FMT_R8G8B8:
-			return fillPolyPolygon<agg::pixfmt_rgb24>(aPoly,viewState,renderState);
+			return fillPolyPolygonImpl<agg::pixfmt_rgb24>(aPoly,viewState,renderState);
 		case FMT_A8R8G8B8:
-			return fillPolyPolygon<agg::pixfmt_rgba32>(aPoly,viewState,renderState);
+			return fillPolyPolygonImpl<agg::pixfmt_rgba32>(aPoly,viewState,renderState);
         default:
             OSL_ENSURE(false, "Unexpected pixel format");
             break;
Index: canvas/source/tools/image.hxx
===================================================================
RCS file: /cvs/gsl/canvas/source/tools/image.hxx,v
retrieving revision 1.2
retrieving revision 1.2.6.1
diff -u -p -u -p -r1.2 -r1.2.6.1
--- canvas/source/tools/image.hxx	2 Nov 2005 12:52:56 -0000	1.2
+++ canvas/source/tools/image.hxx	7 Nov 2005 17:21:09 -0000	1.2.6.1
@@ -232,13 +232,13 @@ namespace canvas
         bool fromVCLBitmap( ::BitmapEx& rBmpEx );
 
 		template<class pixel_format>
-		void drawLinePolyPolygon( const ::basegfx::B2DPolyPolygon&   rPoly,
-								  double                             fStrokeWidth,
-								  const ::com::sun::star::rendering::ViewState&        viewState, 
-								  const ::com::sun::star::rendering::RenderState&      renderState );
+		void drawLinePolyPolygonImpl( const ::basegfx::B2DPolyPolygon&                  rPoly,
+                                      double                                            fStrokeWidth,
+                                      const ::com::sun::star::rendering::ViewState&     viewState, 
+                                      const ::com::sun::star::rendering::RenderState&   renderState );
 
 		template<class pixel_format,class span_gen_type>
-        ImageCachedPrimitiveSharedPtr fillTexturedPolyPolygon(
+        ImageCachedPrimitiveSharedPtr fillTexturedPolyPolygonImpl(
 									  const Image&                                   rTexture,
                                       const ::basegfx::B2DPolyPolygon&               rPolyPolygon,
                                       const ::basegfx::B2DHomMatrix&                 rOverallTransform,
@@ -246,20 +246,20 @@ namespace canvas
                                       const ::com::sun::star::rendering::Texture&    texture );
 		
 		template<class pixel_format>
-		void fillGradient( const ParametricPolyPolygon::Values& rValues,
-								const ::com::sun::star::uno::Sequence< double >&       rUnoColor1,
-								const ::com::sun::star::uno::Sequence< double >&       rUnoColor2,
-								const ::basegfx::B2DPolyPolygon&     rPolyPolygon,
-								const ::basegfx::B2DHomMatrix&       rOverallTransform,
-								const ::com::sun::star::rendering::Texture&            texture );
+		void fillGradientImpl( const ParametricPolyPolygon::Values&             rValues,
+                               const ::com::sun::star::uno::Sequence< double >& rUnoColor1,
+                               const ::com::sun::star::uno::Sequence< double >& rUnoColor2,
+                               const ::basegfx::B2DPolyPolygon&                 rPolyPolygon,
+                               const ::basegfx::B2DHomMatrix&                   rOverallTransform,
+                               const ::com::sun::star::rendering::Texture&      texture );
 
 		template<class pixel_format>
-		ImageCachedPrimitiveSharedPtr fillPolyPolygon(
+		ImageCachedPrimitiveSharedPtr fillPolyPolygonImpl(
             const ::basegfx::B2DPolyPolygon&                    rPolyPolygon, 
             const ::com::sun::star::rendering::ViewState&       viewState, 
             const ::com::sun::star::rendering::RenderState&     renderState );
 
-        template<class pixel_format> void implClear( sal_uInt8 a,
+        template<class pixel_format> void clearImpl( sal_uInt8 a,
                                                      sal_uInt8 r,
                                                      sal_uInt8 g,
                                                      sal_uInt8 b );
Index: agg/source/makefile.mk
===================================================================
RCS file: /cvs/external/agg/source/makefile.mk,v
retrieving revision 1.2
retrieving revision 1.2.2.1
diff -u -p -u -p -r1.2 -r1.2.2.1
--- agg/source/makefile.mk	26 Oct 2005 19:26:06 -0000	1.2
+++ agg/source/makefile.mk	7 Nov 2005 17:14:25 -0000	1.2.2.1
@@ -85,6 +85,8 @@ DEF1DEPN	=$(MISC)$/$(SHL1TARGET).flt \
 DEF1DES		=agg
 DEFLIB1NAME	=$(TARGET)
 
+NO_SHL1DESCRIPTION=TRUE
+
 # --- Targets ----------------------------------
 
 .INCLUDE : target.mk
