Index: fpicker/source/unx/gnome/SalGtkFilePicker.cxx
===================================================================
RCS file: /cvs/gsl/fpicker/source/unx/gnome/SalGtkFilePicker.cxx,v
retrieving revision 1.17
diff -u -p -u -r1.17 SalGtkFilePicker.cxx
--- fpicker/source/unx/gnome/SalGtkFilePicker.cxx	16 Sep 2006 17:52:09 -0000	1.17
+++ fpicker/source/unx/gnome/SalGtkFilePicker.cxx	25 Jan 2007 15:44:10 -0000
@@ -1006,10 +1009,7 @@ uno::Sequence<rtl::OUString> SAL_CALL Sa
 
 			// if AutoExtension is enabled and checked and current filter is not *, 
 			// then complete the file name by concatinating the filter
-			if( mbToggleVisibility[AUTOEXTENSION] 
-			     && ( !bExtensionTypedIn )
-			     && ( gtk_toggle_button_get_active( GTK_TOGGLE_BUTTON( m_pToggles[AUTOEXTENSION] ) ) ) 
-			     && ( !sToken.equalsAscii( "*" ) ) )
+			if( !bExtensionTypedIn && ( !sToken.equalsAscii( "*" ) ) )
 			{
 				//if the filename does not already have the auto extension, stick it on
 				OUString sExtension = OUString::createFromAscii( "." ) + sToken;
@@ -1667,53 +1670,44 @@ void SAL_CALL SalGtkFilePicker::initiali
 			eAction = GTK_FILE_CHOOSER_ACTION_SAVE;
 			first_button_text = GTK_STOCK_SAVE;
 			OSL_TRACE( "2all true\n" );
-		        break;
+            break;
 		case FILESAVE_AUTOEXTENSION_PASSWORD:
 			eAction = GTK_FILE_CHOOSER_ACTION_SAVE;
 			first_button_text = GTK_STOCK_SAVE;
-			mbToggleVisibility[AUTOEXTENSION] = true;
 			mbToggleVisibility[PASSWORD] = true;
 			OSL_TRACE( "1all true\n" );
-			// TODO
 			break;
 		case FILESAVE_AUTOEXTENSION_PASSWORD_FILTEROPTIONS:
 			eAction = GTK_FILE_CHOOSER_ACTION_SAVE;
 			first_button_text = GTK_STOCK_SAVE;
-			mbToggleVisibility[AUTOEXTENSION] = true;
 			mbToggleVisibility[PASSWORD] = true;
 			mbToggleVisibility[FILTEROPTIONS] = true;
 			OSL_TRACE( "4all true\n" );
-			// TODO
-		        break;
+            break;
 		case FILESAVE_AUTOEXTENSION_SELECTION:
 			eAction = GTK_FILE_CHOOSER_ACTION_SAVE; // SELECT_FOLDER ?
 			first_button_text = GTK_STOCK_SAVE;
-			mbToggleVisibility[AUTOEXTENSION] = true;
 			mbToggleVisibility[SELECTION] = true;
 			OSL_TRACE( "5all true\n" );
-			// TODO
-		        break;
+            break;
 		case FILESAVE_AUTOEXTENSION_TEMPLATE:
 			eAction = GTK_FILE_CHOOSER_ACTION_SAVE;
 			first_button_text = GTK_STOCK_SAVE;
-			mbToggleVisibility[AUTOEXTENSION] = true;
 			mbListVisibility[TEMPLATE] = true;
 			OSL_TRACE( "6all true\n" );
-			// TODO
-		        break;
+            break;
 		case FILEOPEN_LINK_PREVIEW_IMAGE_TEMPLATE:
 			eAction = GTK_FILE_CHOOSER_ACTION_OPEN;
 			first_button_text = GTK_STOCK_OPEN;
 			mbToggleVisibility[LINK] = true;
 			mbToggleVisibility[PREVIEW] = true;
 			mbListVisibility[IMAGE_TEMPLATE] = true;
-			// TODO
-		        break;
+            break;
 		case FILEOPEN_PLAY:        
 			eAction = GTK_FILE_CHOOSER_ACTION_OPEN;
 			first_button_text = GTK_STOCK_OPEN;
 			// TODO
-		        break;
+            break;
 		case FILEOPEN_READONLY_VERSION:
 			eAction = GTK_FILE_CHOOSER_ACTION_OPEN;
 			first_button_text = GTK_STOCK_OPEN;
@@ -1725,17 +1719,14 @@ void SAL_CALL SalGtkFilePicker::initiali
 			first_button_text = GTK_STOCK_OPEN;
 			mbToggleVisibility[LINK] = true;
 			mbToggleVisibility[PREVIEW] = true;
-			// TODO
-		        break;
+            break;
 		case FILESAVE_AUTOEXTENSION:
 			eAction = GTK_FILE_CHOOSER_ACTION_SAVE;
 			first_button_text = GTK_STOCK_SAVE;
-			mbToggleVisibility[AUTOEXTENSION] = true;
 			OSL_TRACE( "7all true\n" );
-			// TODO
-		        break;
+            break;
 		default:
-		        throw lang::IllegalArgumentException(
+            throw lang::IllegalArgumentException(
 				rtl::OUString::createFromAscii( "Unknown template" ),
 				static_cast< XFilePicker* >( this ),
 				1 );
