diff --git officecfg/registry/data/org/openoffice/ucb/Configuration.xcu officecfg/registry/data/org/openoffice/ucb/Configuration.xcu
index 4c5f119..e553404 100644
--- officecfg/registry/data/org/openoffice/ucb/Configuration.xcu
+++ officecfg/registry/data/org/openoffice/ucb/Configuration.xcu
@@ -150,18 +150,62 @@
                 <value/>
               </prop>
             </node>
-   		    <node oor:name="Provider12" oor:op="replace">
-			  <prop oor:name="ServiceName">
-			    <value>com.sun.star.ucb.WebDAVContentProvider</value>
-			  </prop>
-			  <prop oor:name="URLTemplate">
-				<value>https</value>
-			  </prop>
-			  <prop oor:name="Arguments">
-			    <value/>
-			  </prop>
-			</node>
-		  </node>
+	    <node oor:name="Provider12" oor:op="replace">
+		<prop oor:name="ServiceName">
+		    <value>com.sun.star.ucb.WebDAVContentProvider</value>
+		</prop>
+		<prop oor:name="URLTemplate">
+		    <value>https</value>
+		</prop>
+		<prop oor:name="Arguments">
+		    <value/>
+		</prop>
+	    </node>
+	    <node oor:name="Provider13" oor:op="replace">
+		<prop oor:name="ServiceName">
+		    <value>com.sun.star.ucb.WebDAVContentProvider</value>
+		</prop>
+		<prop oor:name="URLTemplate">
+		    <value>dav</value>
+		</prop>
+		<prop oor:name="Arguments">
+		    <value/>
+		</prop>
+	    </node>
+	    <node oor:name="Provider14" oor:op="replace">
+		<prop oor:name="ServiceName">
+		    <value>com.sun.star.ucb.WebDAVContentProvider</value>
+		</prop>
+		<prop oor:name="URLTemplate">
+		    <value>davs</value>
+		</prop>
+		<prop oor:name="Arguments">
+		    <value/>
+		</prop>
+	    </node>
+	    <node oor:name="Provider15" oor:op="replace">
+		<prop oor:name="ServiceName">
+		    <value>com.sun.star.ucb.WebDAVContentProvider</value>
+		</prop>
+		<prop oor:name="URLTemplate">
+		    <value>webdav</value>
+		</prop>
+		<prop oor:name="Arguments">
+		    <value/>
+		</prop>
+	    </node>
+	    <node oor:name="Provider16" oor:op="replace">
+		<prop oor:name="ServiceName">
+		    <value>com.sun.star.ucb.WebDAVContentProvider</value>
+		</prop>
+		<prop oor:name="URLTemplate">
+		    <value>webdavs</value>
+		</prop>
+		<prop oor:name="Arguments">
+		    <value/>
+		</prop>
+	    </node>
+        </node>
         </node>
       </node>
     </node>
diff --git tools/inc/tools/urlobj.hxx tools/inc/tools/urlobj.hxx
index 199079f..477c1ec 100644
--- tools/inc/tools/urlobj.hxx
+++ tools/inc/tools/urlobj.hxx
@@ -163,9 +163,13 @@ enum INetProtocol
     INET_PROT_VND_SUN_STAR_EXPAND = 29,
     INET_PROT_VND_SUN_STAR_TDOC = 30,
     INET_PROT_SMB = 31,
-    INET_PROT_GENERIC = 32,
-    INET_PROT_GENERIC_HIERARCHICAL = 33,
-    INET_PROT_END = 34
+    INET_PROT_DAV = 32,
+    INET_PROT_DAVS = 33,
+    INET_PROT_WEBDAV = 34,
+    INET_PROT_WEBDAVS = 35,
+    INET_PROT_GENERIC = 36,
+    INET_PROT_GENERIC_HIERARCHICAL = 37,
+    INET_PROT_END = 38
 };
 
 //============================================================================
diff --git tools/source/fsys/urlobj.cxx tools/source/fsys/urlobj.cxx
index 431bfb5..b5a51f9 100644
--- tools/source/fsys/urlobj.cxx
+++ tools/source/fsys/urlobj.cxx
@@ -464,6 +464,14 @@ static INetURLObject::SchemeInfo const aSchemeInfoMap[INET_PROT_END]
           false, false, false, true, false },
         { "smb", "smb://", 139, true, true, false, true, true, true, true,
           true },
+        { "dav", "dav://", 80, true, false, false, false, true, true, true,
+          true },
+        { "davs", "davs://", 443, true, false, false, false, true, true,
+          true, true },
+        { "webdav", "webdav://", 80, true, false, false, false, true, true, true,
+          true },
+        { "webdavs", "webdavs://", 443, true, false, false, false, true, true,
+          true, true },
         { "", "", 0, false, false, false, false, false, false, false, false },
         { "", "", 0, false, false, false, false, false, false, true, false }
       };
@@ -2113,6 +2121,8 @@ INetURLObject::getPrefix(sal_Unicode const *& rBegin,
 			  PrefixInfo::INTERNAL },
 			{ "cid:", 0, INET_PROT_CID, PrefixInfo::OFFICIAL },
 			{ "data:", 0, INET_PROT_DATA, PrefixInfo::OFFICIAL },
+			{ "dav:", 0, INET_PROT_DAV, PrefixInfo::OFFICIAL },
+			{ "davs:", 0, INET_PROT_DAVS, PrefixInfo::OFFICIAL },
 			{ "db:", "staroffice.db:", INET_PROT_DB, PrefixInfo::INTERNAL },
 			{ "file:", 0, INET_PROT_FILE, PrefixInfo::OFFICIAL },
 			{ "ftp:", 0, INET_PROT_FTP, PrefixInfo::OFFICIAL },
@@ -2194,6 +2204,8 @@ INetURLObject::getPrefix(sal_Unicode const *& rBegin,
 			  PrefixInfo::OFFICIAL },
 			{ "vnd.sun.star.wfs:", 0, INET_PROT_VND_SUN_STAR_WFS,
 			  PrefixInfo::OFFICIAL },
+			{ "webdav:", 0, INET_PROT_WEBDAV, PrefixInfo::OFFICIAL },
+			{ "webdavs:", 0, INET_PROT_WEBDAVS, PrefixInfo::OFFICIAL },
 			{ "wfs:", "vnd.sun.star.wfs:", INET_PROT_VND_SUN_STAR_WFS,
 			  PrefixInfo::ALIAS } };
 	PrefixInfo const * pFirst = aMap + 1;
@@ -2986,6 +2998,10 @@ bool INetURLObject::parsePath(INetProtocol eScheme,
 		case INET_PROT_VND_SUN_STAR_WEBDAV:
 		case INET_PROT_HTTPS:
         case INET_PROT_SMB:
+        case INET_PROT_DAV:
+        case INET_PROT_DAVS:
+        case INET_PROT_WEBDAV:
+        case INET_PROT_WEBDAVS:
 			if (pPos < pEnd && *pPos != '/')
 				return false;
 			while (pPos < pEnd && *pPos != nQueryDelimiter
diff --git ucb/source/ucp/webdav/webdavcontent.cxx ucb/source/ucp/webdav/webdavcontent.cxx
index 16223f6..6fae616 100644
--- ucb/source/ucp/webdav/webdavcontent.cxx
+++ ucb/source/ucp/webdav/webdavcontent.cxx
@@ -2814,11 +2814,23 @@ void Content::transfer(
         //
         const rtl::OUString aScheme = sourceURI.GetScheme().toAsciiLowerCase();
         if ( aScheme.equalsAsciiL(
-                RTL_CONSTASCII_STRINGPARAM( WEBDAV_URL_SCHEME ) ) )
+                RTL_CONSTASCII_STRINGPARAM( WEBDAV_URL_SCHEME ) ) ||
+             aScheme.equalsAsciiL(
+                RTL_CONSTASCII_STRINGPARAM( DAV_URL_SCHEME ) ) ||
+             aScheme.equalsAsciiL(
+                RTL_CONSTASCII_STRINGPARAM( PLAIN_WEBDAV_URL_SCHEME ) ) )
         {
             sourceURI.SetScheme(
                 rtl::OUString::createFromAscii( HTTP_URL_SCHEME ) );
         }
+        else if ( aScheme.equalsAsciiL(
+                     RTL_CONSTASCII_STRINGPARAM( DAVS_URL_SCHEME ) ) ||
+                  aScheme.equalsAsciiL(
+                     RTL_CONSTASCII_STRINGPARAM( PLAIN_WEBDAVS_URL_SCHEME ) ) )
+        {
+            sourceURI.SetScheme(
+                rtl::OUString::createFromAscii( HTTPS_URL_SCHEME ) );
+        }
         else
         {
             if ( !aScheme.equalsAsciiL(
@@ -2838,9 +2850,23 @@ void Content::transfer(
         }
 
         if ( targetURI.GetScheme().toAsciiLowerCase().equalsAsciiL(
-                 RTL_CONSTASCII_STRINGPARAM( WEBDAV_URL_SCHEME ) ) )
+                 RTL_CONSTASCII_STRINGPARAM( WEBDAV_URL_SCHEME ) ) ||
+             targetURI.GetScheme().toAsciiLowerCase().equalsAsciiL(
+                 RTL_CONSTASCII_STRINGPARAM( DAV_URL_SCHEME ) ) ||
+             targetURI.GetScheme().toAsciiLowerCase().equalsAsciiL(
+                 RTL_CONSTASCII_STRINGPARAM( PLAIN_WEBDAV_URL_SCHEME ) ) )
+        {
             targetURI.SetScheme(
                 rtl::OUString::createFromAscii( HTTP_URL_SCHEME ) );
+        }
+        else if ( targetURI.GetScheme().toAsciiLowerCase().equalsAsciiL(
+                      RTL_CONSTASCII_STRINGPARAM( DAVS_URL_SCHEME ) ) ||
+                  targetURI.GetScheme().toAsciiLowerCase().equalsAsciiL(
+                      RTL_CONSTASCII_STRINGPARAM( PLAIN_WEBDAVS_URL_SCHEME ) ) )
+        {
+            targetURI.SetScheme(
+                rtl::OUString::createFromAscii( HTTPS_URL_SCHEME ) );
+        }
 	
         // @@@ This implementation of 'transfer' only works
         //     if the source and target are located at same host.
diff --git ucb/source/ucp/webdav/webdavprovider.cxx ucb/source/ucp/webdav/webdavprovider.cxx
index 9790870..6b219ef 100644
--- ucb/source/ucp/webdav/webdavprovider.cxx
+++ ucb/source/ucp/webdav/webdavprovider.cxx
@@ -42,6 +42,8 @@
 
  *************************************************************************/
 
+#include <string.h>
+
 #ifndef _UCBHELPER_CONTENTIDENTIFIER_HXX
 #include <ucbhelper/contentidentifier.hxx>
 #endif
@@ -146,10 +146,17 @@ ContentProvider::queryContent(
          !aScheme.equalsAsciiL(
             RTL_CONSTASCII_STRINGPARAM( HTTPS_URL_SCHEME ) ) &&
          !aScheme.equalsAsciiL(
-            RTL_CONSTASCII_STRINGPARAM( WEBDAV_URL_SCHEME ) )
-         &&
+            RTL_CONSTASCII_STRINGPARAM( WEBDAV_URL_SCHEME ) ) &&
          !aScheme.equalsAsciiL(
-            RTL_CONSTASCII_STRINGPARAM( FTP_URL_SCHEME ) )
+            RTL_CONSTASCII_STRINGPARAM( FTP_URL_SCHEME ) ) &&
+         !aScheme.equalsAsciiL(
+            RTL_CONSTASCII_STRINGPARAM( DAV_URL_SCHEME ) ) &&
+         !aScheme.equalsAsciiL(
+            RTL_CONSTASCII_STRINGPARAM( DAVS_URL_SCHEME ) ) &&
+         !aScheme.equalsAsciiL(
+            RTL_CONSTASCII_STRINGPARAM( PLAIN_WEBDAV_URL_SCHEME ) ) &&
+         !aScheme.equalsAsciiL(
+            RTL_CONSTASCII_STRINGPARAM( PLAIN_WEBDAVS_URL_SCHEME ) )
        )
         throw ucb::IllegalIdentifierException();
 
@@ -168,14 +175,27 @@ ContentProvider::queryContent(
     uno::Reference< ucb::XContentIdentifier > xCanonicId;
 
     bool bNewId = false;
-    if ( aScheme.equalsAsciiL(
-            RTL_CONSTASCII_STRINGPARAM( WEBDAV_URL_SCHEME ) ) )
+    struct {
+        const char *from;
+        const char *to;
+    } const *pScheme, pReplace[] = {
+        { WEBDAV_URL_SCHEME, HTTP_URL_SCHEME },
+        { DAV_URL_SCHEME, HTTP_URL_SCHEME },
+        { DAVS_URL_SCHEME, HTTPS_URL_SCHEME },
+        { PLAIN_WEBDAV_URL_SCHEME, HTTP_URL_SCHEME },
+        { PLAIN_WEBDAVS_URL_SCHEME, HTTPS_URL_SCHEME },
+        { NULL, NULL }
+    };
+    for ( pScheme = pReplace; pScheme->from ; ++pScheme )
     {
-        aURL = aURL.replaceAt( 0,
-                               WEBDAV_URL_SCHEME_LENGTH,
-                               rtl::OUString::createFromAscii(
-                                                    HTTP_URL_SCHEME ) );
-        bNewId = true;
+        if ( aScheme.equalsAscii( pScheme->from ) )
+        {
+            aURL = aURL.replaceAt( 0,
+                    strlen( pScheme->from ),
+                    rtl::OUString::createFromAscii( pScheme->to ) );
+            bNewId = true;
+            break;
+        }
     }
 
     sal_Int32 nPos = aURL.lastIndexOf( '/' );
diff --git ucb/source/ucp/webdav/webdavprovider.hxx ucb/source/ucp/webdav/webdavprovider.hxx
index 7068b41..f6d7228 100644
--- ucb/source/ucp/webdav/webdavprovider.hxx
+++ ucb/source/ucp/webdav/webdavprovider.hxx
@@ -71,16 +71,19 @@ namespace webdav_ucp {
 // contents ) according to this scheme.
 #define WEBDAV_URL_SCHEME \
 				"vnd.sun.star.webdav"
-#define WEBDAV_URL_SCHEME_LENGTH	19
 
 #define HTTP_URL_SCHEME 		"http"
-#define HTTP_URL_SCHEME_LENGTH	4
 
 #define HTTPS_URL_SCHEME 		"https"
-#define HTTPS_URL_SCHEME_LENGTH	5
 
 #define FTP_URL_SCHEME "ftp"
 
+#define DAV_URL_SCHEME "dav"
+#define DAVS_URL_SCHEME "davs"
+
+#define PLAIN_WEBDAV_URL_SCHEME "webdav"
+#define PLAIN_WEBDAVS_URL_SCHEME "webdavs"
+
 #define HTTP_CONTENT_TYPE \
 				"application/" HTTP_URL_SCHEME "-content"
 
diff --git unotools/source/ucbhelper/ucblockbytes.cxx unotools/source/ucbhelper/ucblockbytes.cxx
index 7cda473..ab428c2 100644
--- unotools/source/ucbhelper/ucblockbytes.cxx
+++ unotools/source/ucbhelper/ucblockbytes.cxx
@@ -1026,6 +1026,10 @@ static sal_Bool UCBOpenContentSync(
     if( ! aScheme.equalsIgnoreAsciiCaseAscii("http")                &&
 		! aScheme.equalsIgnoreAsciiCaseAscii("https")                &&
         ! aScheme.equalsIgnoreAsciiCaseAscii("vnd.sun.star.webdav") &&
+        ! aScheme.equalsIgnoreAsciiCaseAscii("dav") &&
+        ! aScheme.equalsIgnoreAsciiCaseAscii("davs") &&
+        ! aScheme.equalsIgnoreAsciiCaseAscii("webdav") &&
+        ! aScheme.equalsIgnoreAsciiCaseAscii("webdavs") &&
         ! aScheme.equalsIgnoreAsciiCaseAscii("ftp"))
 		return _UCBOpenContentSync(
 			xLockBytes,xContent,rArg,xSink,xInteract,xProgress,xHandler);
