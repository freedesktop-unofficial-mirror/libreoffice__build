--- sfx2/source/view/viewsh.cxx	2005-04-12 12:07:27.000000000 +0530
+++ sfx2/source/view/viewsh.cxx	2005-04-25 16:46:59.000000000 +0530
@@ -345,6 +345,7 @@ void SfxViewShell::GetState_Impl( SfxIte
 			case SID_SETUPPRINTER:
 			{
 				BOOL bEnabled = pImp->bCanPrint && !pImp->nPrinterLocks;
+				bEnabled = bEnabled  && !Application::GetSettings().GetMiscSettings().GetDisablePrinting();
 				if ( bEnabled )
 				{
 					SfxPrinter *pPrinter = GetPrinter(FALSE);
--- officecfg/registry/data/org/openoffice/VCL.xcu	2005-04-12 12:07:27.000000000 +0530
+++ officecfg/registry/data/org/openoffice/VCL.xcu	2005-04-22 14:57:50.000000000 +0530
@@ -67,6 +67,11 @@
         <value>false</value>
       </prop>
     </node>
+    <node oor:name="DesktopManagement" oor:op="replace">
+      <prop oor:name="DisablePrinting" oor:type="xs:string" oor:op="replace">
+        <value>false</value>
+      </prop>
+    </node>
 	<node oor:name="Transfer" oor:op="replace">
 	  <prop oor:name="SelectionTimeout" oor:type="xs:string" oor:op="replace">
 	    <value>3</value>
--- vcl/inc/settings.hxx	2005-01-31 18:49:19.000000000 +0530
+++ vcl/inc/settings.hxx	2005-05-03 12:09:32.000000000 +0530
@@ -958,6 +958,7 @@ private:
     USHORT                          mnRefCount;
     USHORT                          mnTwoDigitYearStart;
     USHORT                          mnEnableATT;
+    USHORT                          mnDisablePrinting;
     BOOL                            mbEnableLocalizedDecimalSep;
 };
 
@@ -983,6 +984,8 @@ public:
                                         { return mpData->mnTwoDigitYearStart; }
     void							SetEnableATToolSupport( BOOL bEnable );
     BOOL							GetEnableATToolSupport() const;
+    void							SetDisablePrinting( BOOL bEnable );
+    BOOL							GetDisablePrinting() const;
     void							SetEnableLocalizedDecimalSep( BOOL bEnable );
     BOOL							GetEnableLocalizedDecimalSep() const;
     const MiscSettings&             operator =( const MiscSettings& rSet );
--- vcl/source/app/settings.cxx	2005-04-12 12:07:27.000000000 +0530
+++ vcl/source/app/settings.cxx	2005-05-03 13:44:27.000000000 +0530
@@ -981,6 +981,7 @@ ImplMiscData::ImplMiscData()
     mnRefCount                  = 1;
     mnTwoDigitYearStart         = 1930;
     mnEnableATT					= ~0;
+    mnDisablePrinting			= ~0;
     static const char* pEnv = getenv("SAL_DECIMALSEP_ENABLED" ); // set default without UI
     mbEnableLocalizedDecimalSep = (pEnv != NULL) ? TRUE : FALSE;
 }
@@ -992,6 +993,7 @@ ImplMiscData::ImplMiscData( const ImplMi
     mnRefCount                  = 1;
     mnTwoDigitYearStart         = rData.mnTwoDigitYearStart;
     mnEnableATT					= rData.mnEnableATT;
+    mnDisablePrinting			= rData.mnDisablePrinting;
     mbEnableLocalizedDecimalSep = rData.mbEnableLocalizedDecimalSep;
 }
 
@@ -1065,6 +1067,7 @@ BOOL MiscSettings::operator ==( const Mi
 
     if ( (mpData->mnTwoDigitYearStart   == rSet.mpData->mnTwoDigitYearStart ) &&
          (mpData->mnEnableATT			== rSet.mpData->mnEnableATT ) &&
+         (mpData->mnDisablePrinting		== rSet.mpData->mnDisablePrinting ) &&
          (mpData->mbEnableLocalizedDecimalSep == rSet.mpData->mbEnableLocalizedDecimalSep ) )
         return TRUE;
     else
@@ -1073,6 +1076,21 @@ BOOL MiscSettings::operator ==( const Mi
 
 // -----------------------------------------------------------------------
 
+BOOL MiscSettings::GetDisablePrinting() const
+{
+    if( mpData->mnDisablePrinting == (USHORT)~0 )
+    {
+        rtl::OUString aEnable =
+            vcl::SettingsConfigItem::get()->
+            getValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DesktopManagement" ) ),
+                      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DisablePrinting" ) ) );
+        mpData->mnDisablePrinting = aEnable.equalsIgnoreAsciiCaseAscii( "true" ) ? 1 : 0;
+    }
+    
+    return (BOOL)mpData->mnDisablePrinting;
+}
+// -----------------------------------------------------------------------
+
 BOOL MiscSettings::GetEnableATToolSupport() const
 {
     
@@ -1135,6 +1153,20 @@ BOOL MiscSettings::GetEnableATToolSuppor
 
 // -----------------------------------------------------------------------
 
+void MiscSettings::SetDisablePrinting( BOOL bEnable )
+{
+    if ( bEnable != mpData->mnDisablePrinting )
+    {
+        vcl::SettingsConfigItem::get()->
+            setValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DesktopManagement" ) ),
+                      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DisablePrinting" ) ),
+                      rtl::OUString::createFromAscii( bEnable ? "true" : "false" ) );
+        mpData->mnDisablePrinting = bEnable ? 1 : 0;
+    }
+}
+
+// -----------------------------------------------------------------------
+
 void MiscSettings::SetEnableATToolSupport( BOOL bEnable )
 {
     if ( bEnable != mpData->mnEnableATT )
--- shell/source/backends/gconfbe/gconfbackend.cxx	2005-04-19 20:15:00.000000000 +0530
+++ shell/source/backends/gconfbe/gconfbackend.cxx	2005-05-11 12:01:52.329607488 +0530
@@ -97,6 +97,10 @@
 #include <rtl/byteseq.h>
 #endif
 
+#ifndef _SV_SVAPP_HXX
+#include <vcl/svapp.hxx>
+#endif
+
 #include <stdio.h>
 
 //==============================================================================
@@ -130,7 +134,7 @@ GconfBackend* GconfBackend::createInstan
 
 GconfBackend::GconfBackend(const uno::Reference<uno::XComponentContext>& xContext)
         throw (backend::BackendAccessException)
-    : BackendBase(mMutex), m_xContext(xContext)
+    : BackendBase(mMutex), m_xContext(xContext), mGconfCallback(0)
 //    , mNotificationThread(NULL)
           
 		
@@ -143,6 +147,7 @@ GconfBackend::~GconfBackend(void) {
   
     
 //    delete (mNotificationThread);
+    gconf_client_notify_remove( GconfBackend::getGconfClient(), mGconfCallback );
     GconfBackend::mClient = NULL;
 
 }
@@ -151,6 +156,22 @@ GconfBackend::~GconfBackend(void) {
 
 GConfClient* GconfBackend::mClient= 0;
 
+//------------------------------------------------------------------------------
+extern "C" { 
+static void GconfChangedCallback( GConfClient *aClient, guint aID, GConfEntry *aEntry, gpointer aPtr )
+{
+    AllSettings aAllSettings = Application::GetSettings();
+    MiscSettings aMiscSettings = aAllSettings.GetMiscSettings();
+    
+    aMiscSettings.SetDisablePrinting( 
+        (BOOL) gconf_client_get_bool( aClient,
+        "/desktop/gnome/lockdown/disable_printing", NULL) );
+    aAllSettings.SetMiscSettings( aMiscSettings );
+    Application::SetSettings( aAllSettings );
+    
+    Application::MergeSystemSettings( aAllSettings );
+}
+}
 
 GConfClient* GconfBackend::getGconfClient()
 {
@@ -204,6 +224,13 @@ uno::Reference<backend::XLayer> SAL_CALL
         xLayer = new GconfVCLLayer(m_xContext);
     }
     
+    if( !mGconfCallback )
+    {
+        gconf_client_add_dir( GconfBackend::getGconfClient(), "/desktop/gnome/lockdown",  GCONF_CLIENT_PRELOAD_ONELEVEL, NULL);
+        mGconfCallback = gconf_client_notify_add( GconfBackend::getGconfClient(), "/desktop/gnome/lockdown/disable_printing",
+            GconfChangedCallback, NULL, NULL, NULL );
+    }
+    
     return xLayer;
 }
 
--- shell/source/backends/gconfbe/gconfbackend.hxx	2005-03-23 14:44:02.000000000 +0530
+++ shell/source/backends/gconfbe/gconfbackend.hxx	2005-05-11 11:44:00.039764647 +0530
@@ -247,6 +247,7 @@ class GconfBackend : public BackendBase 
         
         /**Connection to Gconf */
         static GConfClient* mClient;
+        guint mGconfCallback;
 
 //       ONotificationThread* mNotificationThread;  
 } ;
--- shell/source/backends/gconfbe/gconfvcllayer.cxx	2005-03-23 14:45:05.000000000 +0530
+++ shell/source/backends/gconfbe/gconfvcllayer.cxx	2005-04-22 15:28:38.247828786 +0530
@@ -82,6 +82,7 @@
 #include <stdio.h>
 
 #include <gconf/gconf-client.h>
+#include <rtl/strbuf.hxx>
 
 //==============================================================================
 
@@ -117,7 +118,8 @@ void SAL_CALL GconfVCLLayer::readData( c
         ) ), static_cast < backend::XLayer * > (this) );
     }
     
-    uno::Sequence<backend::PropertyInfo> aPropInfoList(1);
+    uno::Sequence<backend::PropertyInfo> aPropInfoList(2);
+    sal_Int32 nProperties = 0;
     
     GError* aError;
     GConfClient* aClient = GconfBackend::getGconfClient();
@@ -127,14 +129,31 @@ void SAL_CALL GconfVCLLayer::readData( c
     aGconfValue = gconf_client_get(aClient, "/desktop/gnome/interface/accessibility" , &aError);
     
     if( aError == NULL && aGconfValue != NULL ) {
-        aPropInfoList[0].Name = rtl::OUString(
+        aPropInfoList[nProperties].Name = rtl::OUString(
             RTL_CONSTASCII_USTRINGPARAM( "org.openoffice.VCL/Settings/Accessibility/EnableATToolSupport") );
-        aPropInfoList[0].Type = rtl::OUString( 
+        aPropInfoList[nProperties].Type = rtl::OUString( 
             RTL_CONSTASCII_USTRINGPARAM( "string" ) );
-        aPropInfoList[0].Protected = sal_False;
-        aPropInfoList[0].Value = uno::makeAny(
+        aPropInfoList[nProperties].Protected = sal_False;
+        aPropInfoList[nProperties++].Value = uno::makeAny(
             rtl::OUString::valueOf( (sal_Bool) gconf_value_get_bool(aGconfValue) ) );
-        
+    }
+
+    aError = NULL;
+    aGconfValue = gconf_client_get(aClient, "/desktop/gnome/lockdown/disable_printing" , &aError);
+    
+    if( aError == NULL && aGconfValue != NULL ) {
+        aPropInfoList[nProperties].Name = rtl::OUString(
+            RTL_CONSTASCII_USTRINGPARAM( "org.openoffice.VCL/Settings/DesktopManagement/DisablePrinting") );
+        aPropInfoList[nProperties].Type = rtl::OUString( 
+            RTL_CONSTASCII_USTRINGPARAM( "string" ) );
+        aPropInfoList[nProperties].Protected = sal_True;
+        aPropInfoList[nProperties++].Value = uno::makeAny(
+            rtl::OUString::valueOf( (sal_Bool) gconf_value_get_bool(aGconfValue) ) );
+    }
+
+    if( nProperties > 0 )
+    {
+        aPropInfoList.realloc(nProperties);
         m_xLayerContentDescriber->describeLayer(xHandler, aPropInfoList);
     }
 }
@@ -144,6 +163,8 @@ void SAL_CALL GconfVCLLayer::readData( c
 rtl::OUString SAL_CALL GconfVCLLayer::getTimestamp(void) 
     throw (uno::RuntimeException)
 {
+    rtl::OStringBuffer aTimeStamp;
+    
     GError* aError;
     GConfClient* aClient = GconfBackend::getGconfClient();
     GConfValue* aGconfValue;
@@ -153,10 +174,16 @@ rtl::OUString SAL_CALL GconfVCLLayer::ge
     
     // Return the value as timestamp to avoid regenerating the binary cache
     // on each office launch.
+    if( aError == NULL && aGconfValue != NULL )
+        aTimeStamp.append( rtl::OString::valueOf( 
+			(sal_Bool) gconf_value_get_bool(aGconfValue)) );
     
-    if( aError == NULL && aGconfValue != NULL ) {
-       return rtl::OUString::valueOf( (sal_Bool) gconf_value_get_bool(aGconfValue) );
-    }
+    aError = NULL;
+    aGconfValue = gconf_client_get(aClient, "/desktop/gnome/lockdown/disable_printing" , &aError);
     
-    return rtl::OUString();
+    if( aError == NULL && aGconfValue != NULL )
+        aTimeStamp.append( rtl::OString::valueOf( 
+			(sal_Bool) gconf_value_get_bool(aGconfValue)) );
+
+    return rtl::OUString::valueOf( aTimeStamp.makeStringAndClear().hashCode() );
 }
