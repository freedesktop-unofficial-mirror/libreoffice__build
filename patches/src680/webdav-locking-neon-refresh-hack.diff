--- ucb/source/ucp/webdav/NeonSession.cxx	2008-07-04 11:22:17.000000000 +0200
+++ ucb/source/ucp/webdav/NeonSession.cxx	2008-07-04 12:56:23.000000000 +0200
@@ -1632,7 +1632,33 @@ void NeonSession::Lockit( ucb::Lock & rL
             }
         }
         else
+        {
+#if NEON_VERSION >= 0x0260
             nRet = ne_lock_refresh( m_pHttpSession, theLock );
+#else
+            // workaround for a bug in neon 0.24
+            // we have to call with a bigger structure that is used internally
+            // and initialize parts of it
+
+            struct lock_ctx
+            {
+                struct ne_lock active; /* activelock */
+                char *token; /* the token we're after. */
+                int found;
+                ne_buffer *cdata;
+            };
+
+            struct lock_ctx ctx;
+
+            memset( &ctx, 0, sizeof ctx );
+            ctx.cdata = ne_buffer_create();
+            
+            memcpy( &ctx, theLock, sizeof( *theLock ) );
+            nRet = ne_lock_refresh( m_pHttpSession, reinterpret_cast<NeonLock*>( &ctx ) );
+
+            ne_buffer_destroy( ctx.cdata );
+#endif
+        }
 
         if ( ( nRet == NE_ERROR ) && ( getStatusCode( m_pHttpSession ) == SC_LOCKED ) )
         {
