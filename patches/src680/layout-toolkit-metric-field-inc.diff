Index: toolkit/inc/toolkit/awt/vclxwindows.hxx
===================================================================
RCS file: /cvs/gsl/toolkit/inc/toolkit/awt/vclxwindows.hxx,v
retrieving revision 1.36.114.1
diff -u -p -u -r1.36.114.1 vclxwindows.hxx
--- toolkit/inc/toolkit/awt/vclxwindows.hxx	13 Jul 2007 17:43:51 -0000	1.36.114.1
+++ toolkit/inc/toolkit/awt/vclxwindows.hxx	25 Jul 2007 14:18:46 -0000
@@ -142,6 +142,9 @@
 #ifndef _COM_SUN_STAR_AWT_XNUMERICFIELD_HPP_
 #include <com/sun/star/awt/XNumericField.hpp>
 #endif
+#ifndef _COM_SUN_STAR_AWT_XMetricFIELD_HPP_
+#include <com/sun/star/awt/XMetricField.hpp>
+#endif
 #ifndef _COM_SUN_STAR_AWT_XBUTTON_HPP_
 #include <com/sun/star/awt/XButton.hpp>
 #endif
@@ -1024,6 +1027,58 @@ public:
 };
 
 //	----------------------------------------------------
+//	class VCLXMetricField
+//	----------------------------------------------------
+class MetricFormatter;
+class MetricField;
+class VCLXMetricField :	public ::com::sun::star::awt::XMetricField,
+                        public VCLXFormattedSpinField
+{
+    MetricFormatter *GetMetricFormatter() throw(::com::sun::star::uno::RuntimeException);
+    MetricField     *GetMetricField() throw(::com::sun::star::uno::RuntimeException);
+    void CallListeners();
+public:
+    VCLXMetricField();
+    ~VCLXMetricField();
+
+	// ::com::sun::star::uno::XInterface
+    ::com::sun::star::uno::Any					SAL_CALL queryInterface( const ::com::sun::star::uno::Type & rType ) throw(::com::sun::star::uno::RuntimeException);
+	void										SAL_CALL acquire() throw()	{ OWeakObject::acquire(); }
+	void										SAL_CALL release() throw()	{ OWeakObject::release(); }
+
+    // ::com::sun::star::lang::XTypeProvider
+	::com::sun::star::uno::Sequence< ::com::sun::star::uno::Type >	SAL_CALL getTypes() throw(::com::sun::star::uno::RuntimeException);
+	::com::sun::star::uno::Sequence< sal_Int8 >						SAL_CALL getImplementationId() throw(::com::sun::star::uno::RuntimeException);
+
+	// ::com::sun::star::awt::XMetricField
+    virtual void SAL_CALL setValue( ::sal_Int64 Value, ::sal_Int16 Unit ) throw (::com::sun::star::uno::RuntimeException);
+    virtual void SAL_CALL setUserValue( ::sal_Int64 Value, ::sal_Int16 Unit ) throw (::com::sun::star::uno::RuntimeException);
+    virtual ::sal_Int64 SAL_CALL getValue( ::sal_Int16 Unit ) throw (::com::sun::star::uno::RuntimeException);
+    virtual ::sal_Int64 SAL_CALL getCorrectedValue( ::sal_Int16 Unit ) throw (::com::sun::star::uno::RuntimeException);
+    virtual void SAL_CALL setMin( ::sal_Int64 Value, ::sal_Int16 Unit ) throw (::com::sun::star::uno::RuntimeException);
+    virtual ::sal_Int64 SAL_CALL getMin( ::sal_Int16 Unit ) throw (::com::sun::star::uno::RuntimeException);
+    virtual void SAL_CALL setMax( ::sal_Int64 Value, ::sal_Int16 Unit ) throw (::com::sun::star::uno::RuntimeException);
+    virtual ::sal_Int64 SAL_CALL getMax( ::sal_Int16 Unit ) throw (::com::sun::star::uno::RuntimeException);
+    virtual void SAL_CALL setFirst( ::sal_Int64 Value, ::sal_Int16 Unit ) throw (::com::sun::star::uno::RuntimeException);
+    virtual ::sal_Int64 SAL_CALL getFirst( ::sal_Int16 Unit ) throw (::com::sun::star::uno::RuntimeException);
+    virtual void SAL_CALL setLast( ::sal_Int64 Value, ::sal_Int16 Unit ) throw (::com::sun::star::uno::RuntimeException);
+    virtual ::sal_Int64 SAL_CALL getLast( ::sal_Int16 Unit ) throw (::com::sun::star::uno::RuntimeException);
+    virtual void SAL_CALL setSpinSize( ::sal_Int64 Value ) throw (::com::sun::star::uno::RuntimeException);
+    virtual ::sal_Int64 SAL_CALL getSpinSize(  ) throw (::com::sun::star::uno::RuntimeException);
+    virtual void SAL_CALL setDecimalDigits( ::sal_Int16 nDigits ) throw (::com::sun::star::uno::RuntimeException);
+    virtual ::sal_Int16 SAL_CALL getDecimalDigits(  ) throw (::com::sun::star::uno::RuntimeException);
+    virtual void SAL_CALL setStrictFormat( ::sal_Bool bStrict ) throw (::com::sun::star::uno::RuntimeException);
+    virtual ::sal_Bool SAL_CALL isStrictFormat(  ) throw (::com::sun::star::uno::RuntimeException);
+
+	// ::com::sun::star::awt::VclWindowPeer
+    void SAL_CALL setProperty( const ::rtl::OUString& PropertyName, const ::com::sun::star::uno::Any& Value ) throw(::com::sun::star::uno::RuntimeException);
+    ::com::sun::star::uno::Any SAL_CALL getProperty( const ::rtl::OUString& PropertyName ) throw(::com::sun::star::uno::RuntimeException);
+
+    static void     ImplGetPropertyIds( std::list< sal_uInt16 > &aIds );
+    virtual void    GetPropertyIds( std::list< sal_uInt16 > &aIds ) { return ImplGetPropertyIds( aIds ); }
+};
+
+//	----------------------------------------------------
 //	class VCLXCurrencyField
 //	----------------------------------------------------
 class VCLXCurrencyField :	public ::com::sun::star::awt::XCurrencyField,
