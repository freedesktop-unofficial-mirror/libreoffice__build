--- /dev/null	
+++ scsolver/source/numeric/lpbase.cxx	
@@ -0,0 +1,62 @@
+/*************************************************************************
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Kohei Yoshida.
+ *    1039 Kingsway Dr., Apex, NC 27502, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *    MA  02111-1307  USA
+ *
+ ************************************************************************/
+
+
+#include <numeric/lpbase.hxx>
+#include <cstddef>
+
+
+namespace scsolver { namespace numeric { namespace opres { namespace lp {
+
+const char* ConstraintError::what() const throw()
+{
+	return "Constraint error";
+}
+
+const char* AssertionWrong::what() const throw()
+{
+	return "Wrong assertion! (tell Kohei immediately)";
+}
+
+const char* ModelInfeasible::what() const throw()
+{
+	return "Model infeasible";
+}
+
+BaseAlgorithm::BaseAlgorithm() : m_pModel( NULL )
+{
+}
+
+BaseAlgorithm::~BaseAlgorithm() {}
+
+void BaseAlgorithm::setSolution( const Matrix& other )
+{
+	Matrix m( other );
+	m_Solution.swap( m );
+}
+
+}}}}
