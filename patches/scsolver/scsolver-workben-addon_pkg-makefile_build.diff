--- /dev/null	
+++ scsolver/workben/addon_pkg/Makefile_build	
@@ -0,0 +1,175 @@
+TARGET=scsolver.uno
+
+BASEDIR=../../../source
+SLVDIR=../../../../solver/680/unxlngi6.pro
+
+LDFLAGS= -lsal -lcppuhelpergcc3 -lcppu -lstlport_gcc
+CXXCPP=-I$(SLVDIR)/inc -I$(BASEDIR) -I$(BASEDIR)/inc
+CXX_DEFINES=-DUNX -DGCC -DLINUX -DCPPU_ENV=gcc3 -DHAVE_GCC_VISIBILITY_FEATURE
+CXX_SHARED_FLAGS=-fPIC -fno-common -export-dynamic #-fvisibility=hidden
+#CXX=/usr/local/gcc-3.4.1/bin/g++
+CXX=/usr/bin/g++
+
+CPPFLAGS=-DDEBUG -Wall -Os -mtune=pentium3
+
+BINDIR=$(SLVDIR)/bin
+
+
+HEADER= \
+	$(BASEDIR)/inc/numeric/matrix.hxx \
+	$(BASEDIR)/inc/numeric/funcobj.hxx \
+	$(BASEDIR)/inc/numeric/lpmodel.hxx \
+	$(BASEDIR)/inc/numeric/lpbase.hxx \
+	$(BASEDIR)/inc/numeric/lpsimplex.hxx \
+	$(BASEDIR)/inc/numeric/nlpbase.hxx \
+	$(BASEDIR)/inc/numeric/nlpmodel.hxx \
+	$(BASEDIR)/inc/numeric/nlpnewton.hxx \
+	$(BASEDIR)/inc/numeric/diff.hxx \
+	$(BASEDIR)/inc/global.hxx \
+	$(BASEDIR)/inc/unoglobal.hxx \
+	$(BASEDIR)/inc/solver.hxx \
+	$(BASEDIR)/inc/dialog.hxx \
+	$(BASEDIR)/inc/baselistener.hxx \
+	$(BASEDIR)/inc/listener.hxx \
+	$(BASEDIR)/inc/lpbuilder.hxx \
+	$(BASEDIR)/inc/xcalc.hxx \
+	$(BASEDIR)/inc/basedlg.hxx \
+	$(BASEDIR)/inc/type.hxx \
+	$(BASEDIR)/inc/solvemodel.hxx \
+	$(BASEDIR)/inc/unohelper.hxx \
+	$(BASEDIR)/inc/msgdlg.hxx
+
+OBJFILES= \
+	matrix.o lpbase.o lpmodel.o lpsimplex.o nlpqnewton.o nlpbase.o \
+	nlpmodel.o diff.o funcobj.o service.o basedlg.o baselistener.o \
+	dialog.o global.o listener.o lpbuilder.o msgdlg.o solvemodel.o \
+	unoglobal.o unohelper.o xcalc.o	
+
+XCUFILES = ../Addons.xcu ../ProtocolHandler.xcu
+
+
+all: $(TARGET).zip
+
+
+#----------------------------------------------------------------------------
+# Numeric
+
+NUMDIR=$(BASEDIR)/numeric
+
+funcobj.o: $(HEADER) $(NUMDIR)/funcobj.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(NUMDIR)/funcobj.cxx
+
+matrix.o: $(HEADER) $(NUMDIR)/matrix.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(NUMDIR)/matrix.cxx
+
+diff.o: $(HEADER) $(NUMDIR)/diff.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(NUMDIR)/diff.cxx
+
+lpbase.o: $(HEADER) $(NUMDIR)/lpbase.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(NUMDIR)/lpbase.cxx
+	
+lpmodel.o: $(HEADER) $(NUMDIR)/lpmodel.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(NUMDIR)/lpmodel.cxx
+
+lpsimplex.o: $(HEADER) $(NUMDIR)/lpsimplex.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(NUMDIR)/lpsimplex.cxx
+
+nlpmodel.o: $(HEADER) $(NUMDIR)/nlpmodel.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(NUMDIR)/nlpmodel.cxx
+
+nlpbase.o: $(HEADER) $(NUMDIR)/nlpbase.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(NUMDIR)/nlpbase.cxx
+
+nlpqnewton.o: $(HEADER) $(NUMDIR)/nlpqnewton.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(NUMDIR)/nlpqnewton.cxx
+
+
+#----------------------------------------------------------------------------
+# Service
+
+SRVDIR=$(BASEDIR)/service
+
+service.o: $(HEADER) $(SRVDIR)/service.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(SRVDIR)/service.cxx
+
+
+#----------------------------------------------------------------------------
+# UI
+
+UIDIR=$(BASEDIR)/ui
+
+basedlg.o: $(HEADER) $(UIDIR)/basedlg.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(UIDIR)/basedlg.cxx
+
+baselistener.o: $(HEADER) $(UIDIR)/baselistener.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(UIDIR)/baselistener.cxx
+
+dialog.o: $(HEADER) $(UIDIR)/dialog.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(UIDIR)/dialog.cxx
+
+global.o: $(HEADER) $(UIDIR)/global.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(UIDIR)/global.cxx
+
+listener.o: $(HEADER) $(UIDIR)/listener.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(UIDIR)/listener.cxx
+
+lpbuilder.o: $(HEADER) $(UIDIR)/lpbuilder.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(UIDIR)/lpbuilder.cxx
+
+msgdlg.o: $(HEADER) $(UIDIR)/msgdlg.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(UIDIR)/msgdlg.cxx
+
+solvemodel.o: $(HEADER) $(UIDIR)/solvemodel.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(UIDIR)/solvemodel.cxx
+
+unoglobal.o: $(HEADER) $(UIDIR)/unoglobal.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(UIDIR)/unoglobal.cxx
+
+unohelper.o: $(HEADER) $(UIDIR)/unohelper.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(UIDIR)/unohelper.cxx
+
+xcalc.o: $(HEADER) $(UIDIR)/xcalc.cxx
+	$(CXX) $(CPPFLAGS) $(CXXCPP) $(CXX_DEFINES) $(CPP_LIBS) \
+	-o $@ $(CXX_SHARED_FLAGS) -c $(UIDIR)/xcalc.cxx
+
+
+#----------------------------------------------------------------------------
+# Misc
+
+$(TARGET).zip: $(TARGET).so
+	zip -j $@ $< $(TARGET).rdb $(XCUFILES)
+
+$(TARGET).so: $(OBJFILES)
+	export LD_LIBRARY_PATH=$(SLVDIR)/lib && \
+	$(CXX) -shared -Wl,-soname,$@ -o $@ -lc $(OBJFILES) && \
+ 	$(BINDIR)/regcomp -register -r $(TARGET).rdb -c $@
+
+regview:
+	$(BINDIR)/regview $(TARGET).rdb
+
+clean:
+	rm -f $(OBJFILES)
+	
+distclean: clean
+	rm -f $(TARGET).* *~ 
+
