All the smartart work, including UI

From: Thorsten Behrens <thb@openoffice.org>


---

 oox/inc/oox/core/filterbase.hxx                    |    5 
 oox/inc/oox/core/xmlfilterbase.hxx                 |   45 +
 oox/inc/oox/drawingml/chart/converterbase.hxx      |    2 
 oox/inc/oox/drawingml/customshapeproperties.hxx    |    5 
 oox/inc/oox/drawingml/diagram/datamodelcontext.hxx |   57 -
 oox/inc/oox/drawingml/diagram/diagram.hxx          |  242 +-----
 .../drawingml/diagram/diagramfragmenthandler.hxx   |  103 --
 .../oox/drawingml/diagram/diagramlayoutatoms.hxx   |  212 -----
 oox/inc/oox/drawingml/drawingmltypes.hxx           |    3 
 oox/inc/oox/drawingml/graphicshapecontext.hxx      |    5 
 oox/inc/oox/drawingml/shape.hxx                    |   28 +
 oox/inc/oox/drawingml/theme.hxx                    |    8 
 oox/inc/oox/ppt/dgmimport.hxx                      |   68 ++
 oox/inc/oox/ppt/dgmlayout.hxx                      |   69 ++
 oox/inc/oox/ppt/pptimport.hxx                      |    2 
 oox/inc/oox/xls/excelfilter.hxx                    |    2 
 oox/inc/oox/xls/workbookhelper.hxx                 |    2 
 oox/source/core/facreg.cxx                         |    6 
 oox/source/core/filterbase.cxx                     |   17 
 oox/source/core/xmlfilterbase.cxx                  |  164 +++-
 oox/source/drawingml/chart/chartspaceconverter.cxx |    5 
 oox/source/drawingml/chart/converterbase.cxx       |    4 
 oox/source/drawingml/chart/datasourceconverter.cxx |   12 
 oox/source/drawingml/clrscheme.cxx                 |    2 
 oox/source/drawingml/color.cxx                     |    4 
 oox/source/drawingml/customshapegeometry.cxx       |    6 
 .../drawingml/diagram/constraintlistcontext.cxx    |  102 ++
 .../drawingml/diagram/constraintlistcontext.hxx    |   54 +
 oox/source/drawingml/diagram/datamodelcontext.cxx  |  234 ++++--
 oox/source/drawingml/diagram/datamodelcontext.hxx  |   57 +
 oox/source/drawingml/diagram/diagram.cxx           |  503 ++++++++++--
 oox/source/drawingml/diagram/diagram.hxx           |  320 ++++++++
 .../drawingml/diagram/diagramdefinitioncontext.cxx |   15 
 .../drawingml/diagram/diagramdefinitioncontext.hxx |    2 
 .../drawingml/diagram/diagramfragmenthandler.cxx   |  188 +++--
 .../drawingml/diagram/diagramfragmenthandler.hxx   |  117 +++
 .../drawingml/diagram/diagramlayoutatoms.cxx       |  834 +++++++++++++++++++-
 .../drawingml/diagram/diagramlayoutatoms.hxx       |  318 ++++++++
 oox/source/drawingml/diagram/layoutnodecontext.cxx |  146 ++--
 oox/source/drawingml/diagram/layoutnodecontext.hxx |    3 
 oox/source/drawingml/diagram/makefile.mk           |    1 
 oox/source/drawingml/drawingmltypes.cxx            |    4 
 oox/source/drawingml/fillproperties.cxx            |    3 
 oox/source/drawingml/graphicshapecontext.cxx       |   61 -
 oox/source/drawingml/lineproperties.cxx            |    6 
 oox/source/drawingml/shape.cxx                     |   73 ++
 oox/source/drawingml/shapepropertiescontext.cxx    |    5 
 oox/source/drawingml/textparagraph.cxx             |    9 
 oox/source/drawingml/textparagraphproperties.cxx   |    1 
 oox/source/helper/storagebase.cxx                  |   20 
 oox/source/ppt/dgmimport.cxx                       |  124 +++
 oox/source/ppt/dgmlayout.cxx                       |  183 ++++
 oox/source/ppt/makefile.mk                         |    2 
 oox/source/ppt/pptimport.cxx                       |    4 
 oox/source/ppt/presentationfragmenthandler.cxx     |   22 +
 oox/source/shape/ShapeFilterBase.cxx               |    4 
 oox/source/shape/ShapeFilterBase.hxx               |    2 
 oox/source/token/makefile.mk                       |   11 
 oox/source/xls/excelfilter.cxx                     |    2 
 oox/source/xls/workbookhelper.cxx                  |    4 
 sc/source/filter/excel/xestream.cxx                |    5 
 sc/source/filter/inc/xestream.hxx                  |    2 
 sd/inc/glob.hrc                                    |    1 
 sd/inc/helpids.h                                   |    1 
 sd/inc/sdpage.hxx                                  |   14 
 sd/prj/build.lst                                   |    3 
 sd/source/core/sdpage2.cxx                         |   10 
 sd/source/filter/pptx/epptooxml.hxx                |    2 
 sd/source/filter/pptx/pptx-epptooxml.cxx           |    4 
 sd/source/filter/xml/sdxmlwrp.cxx                  |   31 +
 .../ui/animations/CustomAnimationCreateDialog.cxx  |    6 
 sd/source/ui/animations/motionpathtag.cxx          |    5 
 sd/source/ui/animations/motionpathtag.hxx          |    4 
 sd/source/ui/app/strings.src                       |    6 
 sd/source/ui/diagram/DiagramDesignPane.cxx         |  685 ++++++++++++++++
 sd/source/ui/diagram/DiagramDesignPane.hrc         |   56 +
 sd/source/ui/diagram/DiagramDesignPane.hxx         |  131 +++
 sd/source/ui/diagram/DiagramDesignPane.src         |  173 ++++
 sd/source/ui/diagram/diagramtag.cxx                |  671 ++++++++++++++++
 sd/source/ui/diagram/diagramtag.hxx                |   94 ++
 sd/source/ui/diagram/makefile.mk                   |   59 +
 sd/source/ui/framework/tools/FrameworkHelper.cxx   |    2 
 sd/source/ui/func/smarttag.cxx                     |   39 +
 sd/source/ui/inc/TaskPaneViewShell.hxx             |    1 
 sd/source/ui/inc/framework/FrameworkHelper.hxx     |    1 
 sd/source/ui/inc/smarttag.hxx                      |   15 
 sd/source/ui/toolpanel/TaskPaneViewShell.cxx       |   17 
 .../ui/toolpanel/controls/DiagramDesignPanel.cxx   |  104 ++
 .../ui/toolpanel/controls/DiagramDesignPanel.hxx   |   78 ++
 sd/source/ui/toolpanel/controls/makefile.mk        |    1 
 sd/source/ui/unoidl/unopage.cxx                    |   18 
 sd/source/ui/view/drviewse.cxx                     |    5 
 sd/source/ui/view/viewshel.cxx                     |   14 
 sd/util/makefile.mk                                |    2 
 svx/inc/svdstr.hrc                                 |    5 
 .../overlay/overlayprimitive2dsequenceobject.hxx   |    2 
 svx/inc/svx/svdobj.hxx                             |    1 
 svx/inc/svx/svdodiagram.hxx                        |  118 +++
 svx/inc/svx/unoprov.hxx                            |    3 
 svx/inc/svx/unoshape.hxx                           |   24 +
 svx/inc/svx/unoshprp.hxx                           |    6 
 svx/prj/d.lst                                      |    2 
 svx/source/svdraw/makefile.mk                      |    1 
 svx/source/svdraw/svdobj.cxx                       |    2 
 svx/source/svdraw/svdodiagram.cxx                  |  309 +++++++
 svx/source/svdraw/svdstr.src                       |    9 
 svx/source/unodraw/unopage.cxx                     |    3 
 svx/source/unodraw/unoprov.cxx                     |   26 +
 svx/source/unodraw/unoshap2.cxx                    |    7 
 svx/source/unodraw/unoshape.cxx                    |  113 +++
 svx/source/unodraw/unoshtxt.cxx                    |   48 +
 xmloff/inc/xmlnmspe.hxx                            |    1 
 xmloff/inc/xmloff/shapeexport.hxx                  |    2 
 xmloff/inc/xmloff/xmlexp.hxx                       |    4 
 xmloff/inc/xmloff/xmlimp.hxx                       |    9 
 xmloff/inc/xmloff/xmltoken.hxx                     |    9 
 xmloff/source/core/xmlexp.cxx                      |   79 ++
 xmloff/source/core/xmlimp.cxx                      |   51 +
 xmloff/source/core/xmltoken.cxx                    |    8 
 xmloff/source/draw/sdxmlexp.cxx                    |   15 
 xmloff/source/draw/sdxmlimp.cxx                    |    6 
 xmloff/source/draw/sdxmlimp_impl.hxx               |    3 
 xmloff/source/draw/shapeexport.cxx                 |   10 
 xmloff/source/draw/shapeexport2.cxx                |   56 +
 xmloff/source/draw/shapeexport4.cxx                |   25 -
 xmloff/source/draw/ximpgrp.cxx                     |   39 +
 xmloff/source/draw/ximpshap.cxx                    |   18 
 xmloff/source/draw/ximpstyl.cxx                    |    7 
 128 files changed, 6691 insertions(+), 1102 deletions(-)
 delete mode 100644 oox/inc/oox/drawingml/diagram/datamodelcontext.hxx
 delete mode 100644 oox/inc/oox/drawingml/diagram/diagramfragmenthandler.hxx
 delete mode 100644 oox/inc/oox/drawingml/diagram/diagramlayoutatoms.hxx
 create mode 100644 oox/inc/oox/ppt/dgmimport.hxx
 create mode 100644 oox/inc/oox/ppt/dgmlayout.hxx
 create mode 100644 oox/source/drawingml/diagram/constraintlistcontext.cxx
 create mode 100644 oox/source/drawingml/diagram/constraintlistcontext.hxx
 create mode 100644 oox/source/drawingml/diagram/datamodelcontext.hxx
 create mode 100644 oox/source/drawingml/diagram/diagram.hxx
 create mode 100644 oox/source/drawingml/diagram/diagramfragmenthandler.hxx
 create mode 100644 oox/source/drawingml/diagram/diagramlayoutatoms.hxx
 create mode 100644 oox/source/ppt/dgmimport.cxx
 create mode 100644 oox/source/ppt/dgmlayout.cxx
 create mode 100644 sd/source/ui/diagram/DiagramDesignPane.cxx
 create mode 100644 sd/source/ui/diagram/DiagramDesignPane.hrc
 create mode 100644 sd/source/ui/diagram/DiagramDesignPane.hxx
 create mode 100644 sd/source/ui/diagram/DiagramDesignPane.src
 create mode 100644 sd/source/ui/diagram/diagramtag.cxx
 create mode 100644 sd/source/ui/diagram/diagramtag.hxx
 create mode 100644 sd/source/ui/diagram/makefile.mk
 create mode 100644 sd/source/ui/toolpanel/controls/DiagramDesignPanel.cxx
 create mode 100644 sd/source/ui/toolpanel/controls/DiagramDesignPanel.hxx
 create mode 100644 svx/inc/svx/svdodiagram.hxx
 create mode 100644 svx/source/svdraw/svdodiagram.cxx


diff --git oox/inc/oox/core/filterbase.hxx oox/inc/oox/core/filterbase.hxx
index 445123f..d9ac5ed 100644
--- oox/inc/oox/core/filterbase.hxx
+++ oox/inc/oox/core/filterbase.hxx
@@ -50,6 +50,7 @@ namespace com { namespace sun { namespace star {
     namespace frame { class XModel; }
     namespace task { class XStatusIndicator; }
     namespace task { class XInteractionHandler; }
+    namespace drawing { class XShape; }
     namespace io { class XInputStream; }
     namespace io { class XOutputStream; }
     namespace io { class XStream; }
@@ -100,6 +101,10 @@ public:
     const ::com::sun::star::uno::Reference< ::com::sun::star::frame::XModel >&
                         getModel() const;
 
+    /// Returns the parent shape to load into (if any)
+    const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape >&
+                        getParentShape() const;
+
     /** Returns the status indicator. */
     const ::com::sun::star::uno::Reference< ::com::sun::star::task::XStatusIndicator >&
                         getStatusIndicator() const;
diff --git oox/inc/oox/core/xmlfilterbase.hxx oox/inc/oox/core/xmlfilterbase.hxx
index 1f4edc3..afb8723 100644
--- oox/inc/oox/core/xmlfilterbase.hxx
+++ oox/inc/oox/core/xmlfilterbase.hxx
@@ -45,6 +45,8 @@ namespace com { namespace sun { namespace star {
     namespace document { class XDocumentProperties; }
     namespace xml { namespace sax { class XLocator; } }
     namespace xml { namespace sax { class XFastDocumentHandler; } }
+    namespace xml { namespace dom { class XDocument; } }
+    namespace xml { namespace sax { class XFastSAXSerializable; } }
 } } }
 
 namespace oox { namespace drawingml { class Theme; } }
@@ -81,17 +83,19 @@ public:
     /** Has to be implemented by each filter to resolve scheme colors. */
     virtual sal_Int32   getSchemeClr( sal_Int32 nColorSchemeToken ) const = 0;
 
-    /** Has to be implemented by each filter to return drawings collection. */
+    /** Has to be implemented by each filter to return the table style list. */
+	virtual const ::oox::drawingml::table::TableStyleListPtr getTableStyles() = 0;
+
+    // ------------------------------------------------------------------------
+
+    /** Override to return drawings collection. */
     virtual const ::oox::vml::DrawingPtr
-                        getDrawings() = 0;
+                        getDrawings();
 
-    /** Has to be implemented by each filter, returns a filter-specific chart
+    /** Override to return a filter-specific chart
         converter object, that should be global per imported document. */
-    virtual ::oox::drawingml::chart::ChartConverter&
-                        getChartConverter() = 0;
-
-    /** Has to be implemented by each filter to return the table style list. */
-	virtual const ::oox::drawingml::table::TableStyleListPtr getTableStyles() = 0;
+    virtual ::oox::drawingml::chart::ChartConverter*
+                        getChartConverter();
 
     // ------------------------------------------------------------------------
 
@@ -106,6 +110,31 @@ public:
      */
     bool                importFragment( const ::rtl::Reference< FragmentHandler >& rxHandler );
 
+    /** Imports a fragment into an xml::dom::XDocument.
+
+        @param rFragmentPath path to fragment
+
+        @return a non-empty reference to the XDocument, if the
+        fragment could be imported.
+     */
+    ::com::sun::star::uno::Reference<
+       ::com::sun::star::xml::dom::XDocument> importFragment( const ::rtl::OUString& rFragmentPath );
+
+    /** Imports a fragment from an xml::dom::XDocument using the
+        passed fragment handler
+
+        @param rxHandler fragment handler; path to fragment is
+        ignored, input source is the rxSerializer
+
+        @param rxSerializer usually retrieved from a
+        xml::dom::XDocument, will get serialized into rxHandler
+
+        @return true, if the fragment could be imported.
+     */
+    bool importFragment( const ::rtl::Reference< FragmentHandler >& rxHandler,
+                         const ::com::sun::star::uno::Reference< 
+                               ::com::sun::star::xml::sax::XFastSAXSerializable >& rxSerializer );
+
     /** Imports the relations fragment associated with the specified fragment.
 
         @return  The relations collection of the specified fragment.
diff --git oox/inc/oox/drawingml/chart/converterbase.hxx oox/inc/oox/drawingml/chart/converterbase.hxx
index f456d95..35fa990 100644
--- oox/inc/oox/drawingml/chart/converterbase.hxx
+++ oox/inc/oox/drawingml/chart/converterbase.hxx
@@ -79,7 +79,7 @@ protected:
     /** Returns the filter object of the imported/exported document. */
     ::oox::core::XmlFilterBase& getFilter() const;
     /** Returns the chart converter. */
-    ChartConverter&     getChartConverter() const;
+    ChartConverter*     getChartConverter() const;
     /** Returns the API chart document model. */
     ::com::sun::star::uno::Reference< ::com::sun::star::chart2::XChartDocument >
                         getChartDocument() const;
diff --git oox/inc/oox/drawingml/customshapeproperties.hxx oox/inc/oox/drawingml/customshapeproperties.hxx
index 55faac8..cb7cca0 100644
--- oox/inc/oox/drawingml/customshapeproperties.hxx
+++ oox/inc/oox/drawingml/customshapeproperties.hxx
@@ -77,8 +77,9 @@ public:
             const ::com::sun::star::uno::Reference < ::com::sun::star::beans::XPropertySet > & xPropSet,
                         const ::com::sun::star::uno::Reference < ::com::sun::star::drawing::XShape > & xShape) const;
 
-	void setShapePresetType( const rtl::OUString& rShapePresetType ){ maShapePresetType = rShapePresetType; };
-	std::vector< CustomShapeGuide >& getAdjustmentValues(){ return maAdjustmentValues; };
+	void setShapePresetType( const rtl::OUString& rShapePresetType ){ maShapePresetType = rShapePresetType; }
+	const rtl::OUString& getShapePresetType() const { return maShapePresetType; }
+	std::vector< CustomShapeGuide >& getAdjustmentValues(){ return maAdjustmentValues; }
 
     double getValue( const std::vector< CustomShapeGuide >&, sal_uInt32 nIndex ) const;
     ::basegfx::B2DPolyPolygon& getPolygon() { return maPolygon; }
diff --git oox/inc/oox/drawingml/diagram/datamodelcontext.hxx oox/inc/oox/drawingml/diagram/datamodelcontext.hxx
deleted file mode 100644
index 9cbeb96..0000000
--- oox/inc/oox/drawingml/diagram/datamodelcontext.hxx
+++ /dev/null
@@ -1,57 +0,0 @@
-/*************************************************************************
- *
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- * 
- * Copyright 2008 by Sun Microsystems, Inc.
- *
- * OpenOffice.org - a multi-platform office productivity suite
- *
- * $RCSfile: datamodelcontext.hxx,v $
- * $Revision: 1.4 $
- *
- * This file is part of OpenOffice.org.
- *
- * OpenOffice.org is free software: you can redistribute it and/or modify
- * it under the terms of the GNU Lesser General Public License version 3
- * only, as published by the Free Software Foundation.
- *
- * OpenOffice.org is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU Lesser General Public License version 3 for more details
- * (a copy is included in the LICENSE file that accompanied this code).
- *
- * You should have received a copy of the GNU Lesser General Public License
- * version 3 along with OpenOffice.org.  If not, see
- * <http://www.openoffice.org/license.html>
- * for a copy of the LGPLv3 License.
- *
- ************************************************************************/
-
-
-#ifndef OOX_DRAWINGML_SHAPECONTEXT_HXX
-#define OOX_DRAWINGML_SHAPECONTEXT_HXX
-
-#include <com/sun/star/drawing/XShapes.hpp>
-
-#include "oox/core/contexthandler.hxx"
-#include "oox/drawingml/diagram/diagram.hxx"
-
-namespace oox { namespace drawingml {
-
-// CT_DataModel
-class DataModelContext : public ::oox::core::ContextHandler
-{
-public:
-    DataModelContext( ::oox::core::ContextHandler& rParent, const DiagramDataPtr & pDataModelPtr );
-	virtual ~DataModelContext();
-
-    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastContextHandler > SAL_CALL createFastChildContext( ::sal_Int32 Element, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& Attribs ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
-
-protected:
-    DiagramDataPtr mpDataModel;
-};
-
-} }
-
-#endif  //  OOX_DRAWINGML_SHAPEGROUPCONTEXT_HXX
diff --git oox/inc/oox/drawingml/diagram/diagram.hxx oox/inc/oox/drawingml/diagram/diagram.hxx
index b1c2ddd..732959b 100644
--- oox/inc/oox/drawingml/diagram/diagram.hxx
+++ oox/inc/oox/drawingml/diagram/diagram.hxx
@@ -28,232 +28,40 @@
  *
  ************************************************************************/
 
-
-
 #ifndef OOX_DRAWINGML_DIAGRAM_HXX
 #define OOX_DRAWINGML_DIAGRAM_HXX
 
-#include <vector>
-#include <boost/shared_ptr.hpp>
-#include <boost/enable_shared_from_this.hpp>
+#include <rtl/ustring.hxx>
 #include "oox/drawingml/shape.hxx"
-#include "oox/drawingml/diagram/diagramlayoutatoms.hxx"
-
-namespace oox { namespace drawingml {
-
-namespace dgm {
+#include "oox/core/xmlfilterbase.hxx"
 
-/** A Connection
- */
-class Connection
-{
-public:
-	Connection()
-		: mnType( 0 )
-		, mnSourceOrder( 0 )
-		, mnDestOrder( 0 )
-		{
-		}
+#include <com/sun/star/xml/dom/XDocument.hpp>
 
-	void dump();
-
-	sal_Int32 mnType;
-	::rtl::OUString msModelId;
-	::rtl::OUString msSourceId;
-	::rtl::OUString msDestId;
-	::rtl::OUString msParTransId;
-	::rtl::OUString msPresId;
-	::rtl::OUString msSibTransId;
-	sal_Int32 mnSourceOrder;
-	sal_Int32 mnDestOrder;
-
-};
-
-typedef boost::shared_ptr< Connection > ConnectionPtr;
-typedef std::vector< ConnectionPtr > Connections;
+namespace oox { namespace drawingml {
 
-class Point;
+/** load diagram data, and put resulting graphic into shape
 
-typedef boost::shared_ptr< Point > PointPtr;
-typedef std::vector< PointPtr >      Points;
-/** A point
+    This method loads the diagram data fragments from the given paths,
+    generate and layout the shapes, and push it as children into the
+    referenced shape.
  */
-class Point
-{
-public:
-	Point();
-	ShapePtr & getShape( )
-		{ return mpShape; }
-
-	void setCnxId( const ::rtl::OUString & sCnxId )
-		{ msCnxId = sCnxId; }
-	void setModelId( const ::rtl::OUString & sModelId );
-	const ::rtl::OUString & getModelId() const
-		{ return msModelId; }
-	void setType( const sal_Int32 nType )
-		{ mnType = nType; }
-	sal_Int32 getType() const
-		{ return mnType; }
-
-	void dump();
-private:
-	ShapePtr        mpShape;
-	::rtl::OUString msCnxId;
-	::rtl::OUString msModelId;
-	sal_Int32       mnType;
-};
-
-
-class PointsTree;
-typedef boost::shared_ptr< PointsTree > PointsTreePtr;
-
-/** a points tree node */
-class PointsTree
-	: public boost::enable_shared_from_this< PointsTree >
-{
-public:
-	typedef std::vector< PointsTreePtr > Childrens;
-	PointsTree()
-		{};
-	PointsTree( const PointPtr & pPoint )
-		: mpNode( pPoint )
-		{ }
-	bool addChild( const PointsTreePtr & pChild );
-	const PointPtr & getPoint() const
-		{ return mpNode; }
-	PointsTreePtr getParent() const;
-	Childrens::const_iterator beginChild() const
-		{ return maChildrens.begin(); }
-	Childrens::const_iterator endChild() const
-		{ return maChildrens.end(); }
-private:
-	PointPtr                           mpNode;
-	boost::weak_ptr< PointsTree >      mpParent;
-	Childrens       maChildrens;
-};
-
-}
-
-////////////////////
-
-class DiagramData
-{
-public:
-
-	DiagramData();
-	FillPropertiesPtr & getFillProperties()
-		{ return mpFillProperties; }
-	dgm::Connections & getConnections()
-		{ return maConnections; }
-	dgm::Points & getPoints()
-		{ return maPoints; }
-	void dump();
-private:
-	FillPropertiesPtr   mpFillProperties;
-	dgm::Connections    maConnections;
-	dgm::Points         maPoints;
-};
-
-typedef boost::shared_ptr< DiagramData > DiagramDataPtr;
-
-
-
-////////////////////
-
-class DiagramLayout
-{
-public:
-	void setDefStyle( const ::rtl::OUString & sDefStyle )
-		{ msDefStyle = sDefStyle; }
-	void setMinVer( const ::rtl::OUString & sMinVer )
-		{ msMinVer = sMinVer; }
-	void setUniqueId( const ::rtl::OUString & sUniqueId )
-		{ msUniqueId = sUniqueId; }
-	const ::rtl::OUString & getUniqueId()
-		{ return msUniqueId; }
-	void setTitle( const ::rtl::OUString & sTitle )
-		{ msTitle = sTitle; }
-	void setDesc( const ::rtl::OUString & sDesc )
-		{ msDesc = sDesc; }
-
-	LayoutNodePtr & getNode()
-		{ return mpNode; }
-	const LayoutNodePtr & getNode() const
-		{ return mpNode; }
-	DiagramDataPtr & getSampData()
-		{ return mpSampData; }
-	const DiagramDataPtr & getSampData() const
-		{ return mpSampData; }
-	DiagramDataPtr & getStyleData()
-		{ return mpStyleData; }
-	const DiagramDataPtr & getStyleData() const
-		{ return mpStyleData; }
-
-	void layout( const dgm::PointsTreePtr & pTree, const com::sun::star::awt::Point & pt );
-private:
-	::rtl::OUString msDefStyle;
-	::rtl::OUString msMinVer;
-	::rtl::OUString msUniqueId;
-
-	::rtl::OUString msTitle;
-	::rtl::OUString msDesc;
-	LayoutNodePtr  mpNode;
-	DiagramDataPtr mpSampData;
-	DiagramDataPtr mpStyleData;
-	// TODO
-	// catLst
-	// clrData
-};
-
-typedef boost::shared_ptr< DiagramLayout > DiagramLayoutPtr;
-
-///////////////////////
-
-class DiagramQStyles
-{
-
-};
-
-typedef boost::shared_ptr< DiagramQStyles > DiagramQStylesPtr;
-
-///////////////////////
-
-class DiagramColors
-{
-
-};
-
-typedef boost::shared_ptr< DiagramColors > DiagramColorsPtr;
-
-///////////////////////
-
-class Diagram
-{
-public:
-	void setData( const DiagramDataPtr & );
-	void setLayout( const DiagramLayoutPtr & );
-	DiagramLayoutPtr getLayout() const
-		{
-			return mpLayout;
-		}
-	void setQStyles( const DiagramQStylesPtr & );
-	void setColors( const DiagramColorsPtr & );
-
-	void addTo( const ShapePtr & pShape );
-	::rtl::OUString getLayoutId() const;
-private:
-	void build( );
-	DiagramDataPtr    mpData;
-	DiagramLayoutPtr  mpLayout;
-	DiagramQStylesPtr mpQStyles;
-	DiagramColorsPtr  mpColors;
-	std::map< ::rtl::OUString, ShapePtr > maShapeMap;
-	dgm::PointsTreePtr  mpRoot;
-};
-
-
-typedef boost::shared_ptr< Diagram > DiagramPtr;
-
+void loadDiagram( const ShapePtr& pShape,
+                  core::XmlFilterBase& rFilter,
+                  const ::rtl::OUString& rDataModelPath,
+                  const ::rtl::OUString& rLayoutPath,
+                  const ::rtl::OUString& rQStylePath,
+                  const ::rtl::OUString& rColorStylePath );
+
+void loadDiagram( const ShapePtr& pShape,
+                  core::XmlFilterBase& rFilter,
+                  const ::com::sun::star::uno::Reference<
+                     ::com::sun::star::xml::dom::XDocument>& rXDataModelDom,
+                  const ::com::sun::star::uno::Reference<
+                     ::com::sun::star::xml::dom::XDocument>& rXLayoutDom,
+                  const ::com::sun::star::uno::Reference<
+                     ::com::sun::star::xml::dom::XDocument>& rXQStyleDom,
+                  const ::com::sun::star::uno::Reference<
+                     ::com::sun::star::xml::dom::XDocument>& rXColorStyleDom );
 } }
 
 #endif
diff --git oox/inc/oox/drawingml/diagram/diagramfragmenthandler.hxx oox/inc/oox/drawingml/diagram/diagramfragmenthandler.hxx
deleted file mode 100644
index 278dfe5..0000000
--- oox/inc/oox/drawingml/diagram/diagramfragmenthandler.hxx
+++ /dev/null
@@ -1,103 +0,0 @@
-/*************************************************************************
- *
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- * 
- * Copyright 2008 by Sun Microsystems, Inc.
- *
- * OpenOffice.org - a multi-platform office productivity suite
- *
- * $RCSfile: diagramfragmenthandler.hxx,v $
- * $Revision: 1.4 $
- *
- * This file is part of OpenOffice.org.
- *
- * OpenOffice.org is free software: you can redistribute it and/or modify
- * it under the terms of the GNU Lesser General Public License version 3
- * only, as published by the Free Software Foundation.
- *
- * OpenOffice.org is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU Lesser General Public License version 3 for more details
- * (a copy is included in the LICENSE file that accompanied this code).
- *
- * You should have received a copy of the GNU Lesser General Public License
- * version 3 along with OpenOffice.org.  If not, see
- * <http://www.openoffice.org/license.html>
- * for a copy of the LGPLv3 License.
- *
- ************************************************************************/
-
-
-#ifndef OOX_DRAWINGML_DIAGRAMFRAGMENTHANDLER
-#define OOX_DRAWINGML_DIAGRAMFRAGMENTHANDLER
-
-#include "oox/core/fragmenthandler.hxx"
-#include "oox/drawingml/diagram/diagram.hxx"
-
-namespace oox { namespace drawingml {
-
-
-class DiagramDataFragmentHandler : public ::oox::core::FragmentHandler
-{
-public:
-    DiagramDataFragmentHandler( oox::core::XmlFilterBase& rFilter, const ::rtl::OUString& rFragmentPath, const DiagramDataPtr pDataPtr ) throw();
-	virtual ~DiagramDataFragmentHandler() throw();
-
-    virtual void SAL_CALL endDocument() throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastContextHandler > SAL_CALL createFastChildContext( ::sal_Int32 Element, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& Attribs ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
-
-private:
-
-	DiagramDataPtr	mpDataPtr;
-};
-
-
-
-class DiagramLayoutFragmentHandler : public ::oox::core::FragmentHandler
-{
-public:
-    DiagramLayoutFragmentHandler( oox::core::XmlFilterBase& rFilter, const ::rtl::OUString& rFragmentPath, const DiagramLayoutPtr pDataPtr ) throw();
-	virtual ~DiagramLayoutFragmentHandler() throw();
-
-    virtual void SAL_CALL endDocument() throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastContextHandler > SAL_CALL createFastChildContext( ::sal_Int32 Element, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& Attribs ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
-
-private:
-
-	DiagramLayoutPtr	mpDataPtr;
-};
-
-class DiagramQStylesFragmentHandler : public ::oox::core::FragmentHandler
-{
-public:
-    DiagramQStylesFragmentHandler( oox::core::XmlFilterBase& rFilter, const ::rtl::OUString& rFragmentPath, const DiagramQStylesPtr pDataPtr ) throw();
-	virtual ~DiagramQStylesFragmentHandler() throw();
-
-    virtual void SAL_CALL endDocument() throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastContextHandler > SAL_CALL createFastChildContext( ::sal_Int32 Element, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& Attribs ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
-
-private:
-
-	DiagramQStylesPtr	mpDataPtr;
-};
-
-
-class DiagramColorsFragmentHandler : public ::oox::core::FragmentHandler
-{
-public:
-    DiagramColorsFragmentHandler( ::oox::core::XmlFilterBase& rFilter, const ::rtl::OUString& rFragmentPath, const DiagramColorsPtr pDataPtr ) throw();
-	virtual ~DiagramColorsFragmentHandler() throw();
-
-    virtual void SAL_CALL endDocument() throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastContextHandler > SAL_CALL createFastChildContext( ::sal_Int32 Element, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& Attribs ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
-
-private:
-
-	DiagramColorsPtr	mpDataPtr;
-};
-
-} }
-
-
-#endif
diff --git oox/inc/oox/drawingml/diagram/diagramlayoutatoms.hxx oox/inc/oox/drawingml/diagram/diagramlayoutatoms.hxx
deleted file mode 100644
index 80c2dcd..0000000
--- oox/inc/oox/drawingml/diagram/diagramlayoutatoms.hxx
+++ /dev/null
@@ -1,212 +0,0 @@
-/*************************************************************************
- *
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- * 
- * Copyright 2008 by Sun Microsystems, Inc.
- *
- * OpenOffice.org - a multi-platform office productivity suite
- *
- * $RCSfile: diagramlayoutatoms.hxx,v $
- * $Revision: 1.3 $
- *
- * This file is part of OpenOffice.org.
- *
- * OpenOffice.org is free software: you can redistribute it and/or modify
- * it under the terms of the GNU Lesser General Public License version 3
- * only, as published by the Free Software Foundation.
- *
- * OpenOffice.org is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU Lesser General Public License version 3 for more details
- * (a copy is included in the LICENSE file that accompanied this code).
- *
- * You should have received a copy of the GNU Lesser General Public License
- * version 3 along with OpenOffice.org.  If not, see
- * <http://www.openoffice.org/license.html>
- * for a copy of the LGPLv3 License.
- *
- ************************************************************************/
-
-
-
-
-
-#ifndef OOX_DRAWINGML_DIAGRAMLAYOUTATOMS_HXX
-#define OOX_DRAWINGML_DIAGRAMLAYOUTATOMS_HXX
-
-#include <map>
-#include <string>
-
-#include <boost/shared_ptr.hpp>
-#include <boost/array.hpp>
-
-#include <com/sun/star/uno/Any.hxx>
-#include <com/sun/star/xml/sax/XFastAttributeList.hpp>
-
-#include "oox/drawingml/shape.hxx"
-
-
-namespace oox { namespace drawingml {
-
-
-// AG_IteratorAttributes
-class IteratorAttr
-{
-public:
-	IteratorAttr();
-
-	// not sure this belong here, but wth
-	void loadFromXAttr( const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& xAttributes );
-
-private:
-	sal_Int32 mnAxis;
-	sal_Int32 mnCnt;
-	sal_Bool  mbHideLastTrans;
-	sal_Int32 mnPtType;
-	sal_Int32 mnSt;
-	sal_Int32 mnStep;
-};
-
-class ConditionAttr
-{
-public:
-	ConditionAttr();
-
-	// not sure this belong here, but wth
-	void loadFromXAttr( const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& xAttributes );
-
-private:
-	sal_Int32 mnFunc;
-	sal_Int32 mnArg;
-	sal_Int32 mnOp;
-	::rtl::OUString msVal;
-};
-
-class LayoutAtom;
-
-typedef boost::shared_ptr< LayoutAtom > LayoutAtomPtr;
-
-/** abstract Atom for the layout */
-class LayoutAtom
-{
-public:
-	virtual ~LayoutAtom()
-		{}
-	// TODO change signature to the proper one
-	virtual void processAtom() = 0;
-	void setName( const ::rtl::OUString & sName )
-		{ msName = sName; }
-	void addChild( const LayoutAtomPtr & pNode )
-		{ mpChildNodes.push_back( pNode ); }
-
-	// dump for debug
-	virtual void dump(int level = 0);
-protected:
-	std::vector< LayoutAtomPtr > mpChildNodes;
-	::rtl::OUString msName;
-};
-
-class AlgAtom
-	: public LayoutAtom
-{
-public:
-	virtual ~AlgAtom()
-		{}
-	typedef std::map< std::string, ::com::sun::star::uno::Any > ParamMap;
-
-	virtual void processAtom()
-		{}
-private:
-	ParamMap mParams;
-};
-
-
-class ForEachAtom
-	: public LayoutAtom
-{
-public:
-	virtual ~ForEachAtom()
-		{}
-	
-	IteratorAttr & iterator()
-		{ return maIter; }
-	virtual void processAtom();
-private:
-	IteratorAttr maIter;
-};
-
-typedef boost::shared_ptr< ForEachAtom > ForEachAtomPtr;
-
-
-class ConditionAtom
-	: public LayoutAtom
-{
-public:
-	ConditionAtom( bool bElse = false )
-		: LayoutAtom( )
-		, mbElse( bElse )
-		{}
-	virtual ~ConditionAtom()
-		{}
-	bool test();
-	virtual void processAtom()
-		{}
-	IteratorAttr & iterator()
-		{ return maIter; }
-	ConditionAttr & cond()
-		{ return maCond; }
-private:
-	bool          mbElse;
-	IteratorAttr  maIter;
-	ConditionAttr maCond;
-};
-
-typedef boost::shared_ptr< ConditionAtom > ConditionAtomPtr;
-
-
-/** "choose" statements. Atoms will be tested in order. */
-class ChooseAtom
-	: public LayoutAtom
-{
-public:
-	virtual ~ChooseAtom()
-		{}
-	virtual void processAtom();
-};
-
-class LayoutNode
-	: public LayoutAtom
-{
-public:
-	enum {
-		VAR_animLvl = 0,
-		VAR_animOne,
-		VAR_bulletEnabled,
-		VAR_chMax,
-		VAR_chPref,
-		VAR_dir,
-		VAR_hierBranch,
-		VAR_orgChart,
-		VAR_resizeHandles
-	};
-	// we know that the array is of fixed size
-	// the use of Any allow having empty values
-	typedef boost::array< ::com::sun::star::uno::Any, 9 > VarMap;
-
-	virtual ~LayoutNode()
-		{}
-	virtual void processAtom()
-		{}
-	VarMap & variables()
-		{ return mVariables; }
-private:
-	VarMap                       mVariables;
-	std::vector< ShapePtr >      mpShapes;
-};
-
-typedef boost::shared_ptr< LayoutNode > LayoutNodePtr;
-
-} }
-
-#endif
diff --git oox/inc/oox/drawingml/drawingmltypes.hxx oox/inc/oox/drawingml/drawingmltypes.hxx
index 50cf46a..6df0017 100644
--- oox/inc/oox/drawingml/drawingmltypes.hxx
+++ oox/inc/oox/drawingml/drawingmltypes.hxx
@@ -50,6 +50,9 @@ typedef ::boost::shared_ptr< LineProperties > LinePropertiesPtr;
 struct FillProperties;
 typedef ::boost::shared_ptr< FillProperties > FillPropertiesPtr;
 
+struct Shape3DProperties;
+typedef ::boost::shared_ptr< Shape3DProperties > Shape3DPropertiesPtr;
+
 struct TextCharacterProperties;
 typedef ::boost::shared_ptr< TextCharacterProperties > TextCharacterPropertiesPtr;
 
diff --git oox/inc/oox/drawingml/graphicshapecontext.hxx oox/inc/oox/drawingml/graphicshapecontext.hxx
index f6093ac..605c39e 100644
--- oox/inc/oox/drawingml/graphicshapecontext.hxx
+++ oox/inc/oox/drawingml/graphicshapecontext.hxx
@@ -33,7 +33,6 @@
 
 #include "oox/drawingml/shape.hxx"
 #include "oox/drawingml/shapecontext.hxx"
-#include "oox/drawingml/diagram/diagram.hxx"
 
 namespace oox { namespace drawingml {
 
@@ -78,6 +77,8 @@ private:
 
 // ====================================================================
 
+class Diagram;
+
 class DiagramGraphicDataContext
     : public ShapeContext
 {
@@ -87,8 +88,6 @@ public:
     virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastContextHandler > SAL_CALL createFastChildContext( ::sal_Int32 Element, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& Attribs ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
 
 private:
-	DiagramPtr loadDiagram();
-
     ::rtl::OUString msDm;
     ::rtl::OUString msLo;
     ::rtl::OUString msQs;
diff --git oox/inc/oox/drawingml/shape.hxx oox/inc/oox/drawingml/shape.hxx
index 9e584c6..144263f 100644
--- oox/inc/oox/drawingml/shape.hxx
+++ oox/inc/oox/drawingml/shape.hxx
@@ -83,7 +83,8 @@ class Shape
 {
 public:
 
-    Shape( const sal_Char* pServiceType = NULL );
+    explicit Shape( const sal_Char* pServiceType = NULL );
+    explicit Shape( const ShapePtr& pSourceShape );
     virtual ~Shape();
 
     rtl::OUString&                  getServiceName(){ return msServiceName; }
@@ -100,10 +101,17 @@ public:
     FillPropertiesPtr               getGraphicProperties() { return mpGraphicPropertiesPtr; }
     CustomShapePropertiesPtr        getCustomShapeProperties(){ return mpCustomShapePropertiesPtr; }
 
+    Shape3DProperties&              get3DProperties() { return *mp3DPropertiesPtr; }
+    const Shape3DProperties&        get3DProperties() const { return *mp3DPropertiesPtr; }
+
     table::TablePropertiesPtr		getTableProperties();
 
-    void                            setPosition( com::sun::star::awt::Point nPosition ){ maPosition = nPosition; }
-    void                            setSize( com::sun::star::awt::Size aSize ){ maSize = aSize; }
+    void                              setPosition( com::sun::star::awt::Point nPosition ){ maPosition = nPosition; }
+    const com::sun::star::awt::Point& getPosition() const { return maPosition; }
+
+    void                              setSize( com::sun::star::awt::Size aSize ){ maSize = aSize; }
+    const com::sun::star::awt::Size&  getSize() const { return maSize; }
+
     void                            setRotation( sal_Int32 nRotation ) { mnRotation = nRotation; }
     void                            setFlip( sal_Bool bFlipH, sal_Bool bFlipV ) { mbFlipH = bFlipH; mbFlipV = bFlipV; }
     void                            addChild( const ShapePtr pChildPtr ) { maChildren.push_back( pChildPtr ); }
@@ -139,6 +147,13 @@ public:
                             const ::com::sun::star::awt::Rectangle* pShapeRect = 0,
                             ShapeIdMap* pShapeMap = 0 );
 
+    void                addChildren(
+                            const ::oox::core::XmlFilterBase& rFilterBase,
+                            const ThemePtr& rxTheme,
+                            const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShapes >& rxShapes,
+                            const ::com::sun::star::awt::Rectangle* pShapeRect = 0,
+                            ShapeIdMap* pShapeMap = 0 );
+
     void				setXShape( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape >& rXShape )
                             { mxShape = rXShape; };
     const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > &
@@ -171,6 +186,7 @@ protected:
     FillPropertiesPtr           mpGraphicPropertiesPtr;
     CustomShapePropertiesPtr    mpCustomShapePropertiesPtr;
     table::TablePropertiesPtr	mpTablePropertiesPtr;
+    Shape3DPropertiesPtr        mp3DPropertiesPtr;
     PropertyMap                 maShapeProperties;
     TextListStylePtr            mpMasterTextListStyle;
     ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > mxShape;
@@ -193,7 +209,11 @@ private:
     sal_Bool                        mbFlipV;
 };
 
-::rtl::OUString GetShapeType( sal_Int32 nType );
+// ---------------------------------------------------------------------
+
+/** Get custom shape preset string from xml token id
+ */
+::rtl::OUString GetShapePresetType( sal_Int32 nType );
 
 } }
 
diff --git oox/inc/oox/drawingml/theme.hxx oox/inc/oox/drawingml/theme.hxx
index 17f23e5..2f34a33 100644
--- oox/inc/oox/drawingml/theme.hxx
+++ oox/inc/oox/drawingml/theme.hxx
@@ -35,6 +35,7 @@
 #include "oox/drawingml/clrscheme.hxx"
 #include "oox/drawingml/shape.hxx"
 #include "oox/drawingml/textfont.hxx"
+#include <com/sun/star/xml/dom/XDocument.hpp>
 
 namespace oox {
 namespace drawingml {
@@ -97,6 +98,11 @@ public:
     inline Shape&                   getTxDef() { return maTxDef; }
     inline const Shape&             getTxDef() const { return maTxDef; }
 
+    void                            setFragment( const ::com::sun::star::uno::Reference<
+                                                    ::com::sun::star::xml::dom::XDocument>& xRef ) { mxFragment=xRef; }
+    const ::com::sun::star::uno::Reference<
+        ::com::sun::star::xml::dom::XDocument>& getFragment() const { return mxFragment; }
+
 private:
     ::rtl::OUString     maStyleName;
     ClrScheme           maClrScheme;
@@ -108,6 +114,8 @@ private:
     Shape               maSpDef;
     Shape               maLnDef;
     Shape               maTxDef;
+    ::com::sun::star::uno::Reference<
+        ::com::sun::star::xml::dom::XDocument> mxFragment;
 };
 
 // ============================================================================
diff --git oox/inc/oox/ppt/dgmimport.hxx oox/inc/oox/ppt/dgmimport.hxx
new file mode 100644
index 0000000..bfb2f38
--- /dev/null
+++ oox/inc/oox/ppt/dgmimport.hxx
@@ -0,0 +1,68 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: pptimport.hxx,v $
+ * $Revision: 1.6 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef OOX_POWERPOINT_QUICKDIAGRAMMINGIMPORT_HXX
+#define OOX_POWERPOINT_QUICKDIAGRAMMINGIMPORT_HXX
+
+#include "oox/core/xmlfilterbase.hxx"
+
+#include <com/sun/star/animations/XAnimationNode.hpp>
+#include <oox/drawingml/theme.hxx>
+#include "oox/ppt/presentationfragmenthandler.hxx"
+#include "oox/ppt/slidepersist.hxx"
+#include "tokens.hxx"
+#include <vector>
+#include <map>
+
+namespace oox { namespace ppt {
+
+// ---------------------------------------------------------------------
+
+class QuickDiagrammingImport : public oox::core::XmlFilterBase
+{
+public:
+
+	QuickDiagrammingImport( const com::sun::star::uno::Reference< com::sun::star::lang::XMultiServiceFactory > & rSMgr  );
+
+    // from FilterBase
+    virtual bool importDocument() throw();
+    virtual bool exportDocument() throw();
+
+    virtual const ::oox::drawingml::Theme* getCurrentTheme() const;
+    virtual sal_Int32 getSchemeClr( sal_Int32 nColorSchemeToken ) const;
+	virtual const oox::drawingml::table::TableStyleListPtr getTableStyles();
+
+private:
+    virtual ::rtl::OUString implGetImplementationName() const;
+};
+
+} }
+
+#endif // OOX_POWERPOINT_QUICKDIAGRAMMINGIMPORT_HXX
diff --git oox/inc/oox/ppt/dgmlayout.hxx oox/inc/oox/ppt/dgmlayout.hxx
new file mode 100644
index 0000000..d597ef4
--- /dev/null
+++ oox/inc/oox/ppt/dgmlayout.hxx
@@ -0,0 +1,69 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: pptimport.hxx,v $
+ * $Revision: 1.6 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef OOX_POWERPOINT_QUICKDIAGRAMMINGLAYOUT_HXX
+#define OOX_POWERPOINT_QUICKDIAGRAMMINGLAYOUT_HXX
+
+#include "oox/core/xmlfilterbase.hxx"
+
+#include <com/sun/star/animations/XAnimationNode.hpp>
+#include <oox/drawingml/theme.hxx>
+#include "oox/ppt/presentationfragmenthandler.hxx"
+#include "oox/ppt/slidepersist.hxx"
+#include "tokens.hxx"
+#include <vector>
+#include <map>
+
+namespace oox { namespace ppt {
+
+// ---------------------------------------------------------------------
+
+class QuickDiagrammingLayout : public oox::core::XmlFilterBase
+{
+public:
+
+	QuickDiagrammingLayout( const com::sun::star::uno::Reference< com::sun::star::lang::XMultiServiceFactory > & rSMgr  );
+
+    // from FilterBase
+    virtual bool importDocument() throw();
+    virtual bool exportDocument() throw();
+
+    virtual const ::oox::drawingml::Theme* getCurrentTheme() const;
+    virtual sal_Int32 getSchemeClr( sal_Int32 nColorSchemeToken ) const;
+	virtual const oox::drawingml::table::TableStyleListPtr getTableStyles();
+
+private:
+    virtual ::rtl::OUString implGetImplementationName() const;
+    drawingml::ThemePtr mpThemePtr;
+};
+
+} }
+
+#endif // OOX_POWERPOINT_QUICKDIAGRAMMINGLAYOUT_HXX
diff --git oox/inc/oox/ppt/pptimport.hxx oox/inc/oox/ppt/pptimport.hxx
index 2df0f71..c1a62f5 100644
--- oox/inc/oox/ppt/pptimport.hxx
+++ oox/inc/oox/ppt/pptimport.hxx
@@ -62,7 +62,7 @@ public:
 
     virtual const oox::vml::DrawingPtr getDrawings();
     virtual const oox::drawingml::table::TableStyleListPtr getTableStyles();
-    virtual ::oox::drawingml::chart::ChartConverter& getChartConverter();
+    virtual ::oox::drawingml::chart::ChartConverter* getChartConverter();
 
     void													setActualSlidePersist( SlidePersistPtr pActualSlidePersist ){ mpActualSlidePersist = pActualSlidePersist; };
     std::map< rtl::OUString, oox::drawingml::ThemePtr >&	getThemes(){ return maThemes; };
diff --git oox/inc/oox/xls/excelfilter.hxx oox/inc/oox/xls/excelfilter.hxx
index cff5f5a..7dada9c 100644
--- oox/inc/oox/xls/excelfilter.hxx
+++ oox/inc/oox/xls/excelfilter.hxx
@@ -56,7 +56,7 @@ public:
 
     virtual const ::oox::vml::DrawingPtr getDrawings();
     virtual const ::oox::drawingml::table::TableStyleListPtr getTableStyles();
-    virtual ::oox::drawingml::chart::ChartConverter& getChartConverter();
+    virtual ::oox::drawingml::chart::ChartConverter* getChartConverter();
 
     virtual sal_Bool SAL_CALL filter( const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue >& rDescriptor ) throw( ::com::sun::star::uno::RuntimeException );
 
diff --git oox/inc/oox/xls/workbookhelper.hxx oox/inc/oox/xls/workbookhelper.hxx
index e9f5ed9..11120a9 100644
--- oox/inc/oox/xls/workbookhelper.hxx
+++ oox/inc/oox/xls/workbookhelper.hxx
@@ -231,7 +231,7 @@ public:
     /** Returns the converter for string to cell address/range conversion. */
     AddressConverter&   getAddressConverter() const;
     /** Returns the chart object converter. */
-    ExcelChartConverter& getChartConverter() const;
+    ExcelChartConverter* getChartConverter() const;
 
     // property helpers -------------------------------------------------------
 
diff --git oox/source/core/facreg.cxx oox/source/core/facreg.cxx
index f1ead12..e3daa0d 100644
--- oox/source/core/facreg.cxx
+++ oox/source/core/facreg.cxx
@@ -60,6 +60,8 @@ extern uno::Reference< uno::XInterface > SAL_CALL className##_createInstance(
 namespace oox {
     namespace core { SERVICE( FilterDetect ); }
     namespace ppt { SERVICE( PowerPointImport ); }
+    namespace ppt { SERVICE( QuickDiagrammingImport ); }
+    namespace ppt { SERVICE( QuickDiagrammingLayout ); }
     namespace xls { SERVICE( BiffDetector ); }
     namespace xls { SERVICE( ExcelFilter ); }
     namespace xls { SERVICE( ExcelBiffFilter ); }
@@ -102,6 +104,8 @@ OOX_DLLPUBLIC sal_Bool SAL_CALL component_writeInfo( void * , void * pRegistryKe
 
             WRITEINFO( ::oox::core::FilterDetect );
             WRITEINFO( ::oox::ppt::PowerPointImport );
+			WRITEINFO( ::oox::ppt::QuickDiagrammingImport );
+			WRITEINFO( ::oox::ppt::QuickDiagrammingLayout );
             WRITEINFO( ::oox::xls::BiffDetector );
             WRITEINFO( ::oox::xls::ExcelFilter );
             WRITEINFO( ::oox::xls::ExcelBiffFilter );
@@ -150,6 +154,8 @@ OOX_DLLPUBLIC void * SAL_CALL component_getFactory( const sal_Char * pImplName,
         // impress oasis import
         SINGLEFACTORY( ::oox::core::FilterDetect )
         else SINGLEFACTORY( oox::ppt::PowerPointImport )
+        else SINGLEFACTORY( oox::ppt::QuickDiagrammingImport )
+        else SINGLEFACTORY( oox::ppt::QuickDiagrammingLayout )
         else SINGLEFACTORY( ::oox::xls::BiffDetector )
         else SINGLEFACTORY( ::oox::xls::ExcelFilter )
         else SINGLEFACTORY( ::oox::xls::ExcelBiffFilter )
diff --git oox/source/core/filterbase.cxx oox/source/core/filterbase.cxx
index e3babee..37e7128 100644
--- oox/source/core/filterbase.cxx
+++ oox/source/core/filterbase.cxx
@@ -32,6 +32,7 @@
 #include <com/sun/star/frame/XModel.hpp>
 #include <com/sun/star/task/XStatusIndicator.hpp>
 #include <com/sun/star/task/XInteractionHandler.hpp>
+#include <com/sun/star/drawing/XShape.hpp>
 #include <rtl/uri.hxx>
 #include <comphelper/mediadescriptor.hxx>
 
@@ -52,6 +53,7 @@ using ::com::sun::star::io::XOutputStream;
 using ::com::sun::star::io::XStream;
 using ::com::sun::star::task::XStatusIndicator;
 using ::com::sun::star::task::XInteractionHandler;
+using ::com::sun::star::drawing::XShape;
 using ::comphelper::MediaDescriptor;
 
 namespace oox {
@@ -72,6 +74,7 @@ struct FilterBaseImpl
     Reference< XStream >                mxStream;
     Reference< XStatusIndicator >       mxStatusIndicator;
     Reference< XInteractionHandler >    mxInteractionHandler;
+    Reference< XShape >                 mxParentShape;
 
     explicit            FilterBaseImpl( const Reference< XMultiServiceFactory >& rxFactory );
     void                setMediaDescriptor( const Sequence< PropertyValue >& rDescriptor );
@@ -89,14 +92,15 @@ void FilterBaseImpl::setMediaDescriptor( const Sequence< PropertyValue >& rDescr
 {
     maDescriptor = rDescriptor;
 
+    mxStream = maDescriptor.getUnpackedValueOrDefault( MediaDescriptor::PROP_STREAMFOROUTPUT(), mxStream );
+    if( !mxStream.is() )
+        maDescriptor.addInputStream();
+
     maFileUrl = maDescriptor.getUnpackedValueOrDefault( MediaDescriptor::PROP_URL(), maFileUrl );
     mxInStream = maDescriptor.getUnpackedValueOrDefault( MediaDescriptor::PROP_INPUTSTREAM(), mxInStream );
-    mxStream = maDescriptor.getUnpackedValueOrDefault( MediaDescriptor::PROP_STREAMFOROUTPUT(), mxStream );
     mxStatusIndicator = maDescriptor.getUnpackedValueOrDefault( MediaDescriptor::PROP_STATUSINDICATOR(), mxStatusIndicator );
     mxInteractionHandler = maDescriptor.getUnpackedValueOrDefault( MediaDescriptor::PROP_INTERACTIONHANDLER(), mxInteractionHandler );
-
-    if( mxInStream.is() )
-        maDescriptor.addInputStream();
+    mxParentShape = maDescriptor.getUnpackedValueOrDefault( CREATE_OUSTRING( "ParentShape" ), mxParentShape );
 }
 
 // ============================================================================
@@ -137,6 +141,11 @@ const Reference< XModel >& FilterBase::getModel() const
     return mxImpl->mxModel;
 }
 
+const Reference< XShape >& FilterBase::getParentShape() const
+{
+    return mxImpl->mxParentShape;
+}
+
 const Reference< XStatusIndicator >& FilterBase::getStatusIndicator() const
 {
     return mxImpl->mxStatusIndicator;
diff --git oox/source/core/xmlfilterbase.cxx oox/source/core/xmlfilterbase.cxx
index 545ef5c..f143761 100644
--- oox/source/core/xmlfilterbase.cxx
+++ oox/source/core/xmlfilterbase.cxx
@@ -43,16 +43,20 @@
 #include <cstdio>
 
 #include <rtl/ustrbuf.hxx>
+#include <rtl/instance.hxx>
 
 #include <com/sun/star/beans/XPropertySet.hpp>
 #include <com/sun/star/container/XNameContainer.hpp>
 #include <com/sun/star/document/XDocumentSubStorageSupplier.hpp>
+#include <com/sun/star/document/XDocumentProperties.hpp>
 #include <com/sun/star/embed/ElementModes.hpp>
 #include <com/sun/star/embed/XTransactedObject.hpp>
 #include <com/sun/star/embed/XRelationshipAccess.hpp>
 #include <com/sun/star/xml/sax/InputSource.hpp>
 #include <com/sun/star/xml/sax/XFastParser.hpp>
-#include <com/sun/star/document/XDocumentProperties.hpp>
+#include <com/sun/star/xml/sax/XFastSAXSerializable.hpp>
+#include <com/sun/star/xml/dom/XDocument.hpp>
+#include <com/sun/star/xml/dom/XDocumentBuilder.hpp>
 #include <sax/fshelper.hxx>
 
 #include "tokens.hxx"
@@ -61,6 +65,7 @@ using ::rtl::OUString;
 using ::rtl::OUStringBuffer;
 using ::com::sun::star::beans::XPropertySet;
 using ::com::sun::star::beans::StringPair;
+using ::com::sun::star::beans::Pair;
 using ::com::sun::star::uno::Reference;
 using ::com::sun::star::uno::Sequence;
 using ::com::sun::star::uno::Exception;
@@ -78,6 +83,8 @@ using ::com::sun::star::io::XOutputStream;
 using ::com::sun::star::io::XStream;
 using ::com::sun::star::container::XNameContainer;
 using ::com::sun::star::document::XDocumentSubStorageSupplier;
+using ::com::sun::star::xml::dom::XDocument;
+using ::com::sun::star::xml::dom::XDocumentBuilder;
 using ::com::sun::star::xml::sax::XFastParser;
 using ::com::sun::star::xml::sax::XFastTokenHandler;
 using ::com::sun::star::xml::sax::XFastDocumentHandler;
@@ -87,6 +94,7 @@ using ::com::sun::star::document::XDocumentProperties;
 using ::com::sun::star::util::DateTime;
 using ::sax_fastparser::FastSerializerHelper;
 using ::sax_fastparser::FSHelperPtr;
+using namespace ::com::sun::star;
 
 namespace oox {
 namespace core {
@@ -119,6 +127,64 @@ XmlFilterBaseImpl::XmlFilterBaseImpl() :
 
 // ============================================================================
 
+namespace 
+{ 
+    struct NamespaceIds: public rtl::StaticWithInit<
+        Sequence< Pair< OUString, sal_Int32 > >,
+        NamespaceIds> 
+    {
+        Sequence< Pair< OUString, sal_Int32 > > operator()()
+        {
+            static const char* const namespaceURIs[] = {
+                "http://www.w3.org/XML/1998/namespace",
+                "http://schemas.openxmlformats.org/package/2006/relationships",
+                "http://schemas.openxmlformats.org/officeDocument/2006/relationships",
+                "http://schemas.openxmlformats.org/drawingml/2006/main",
+                "http://schemas.openxmlformats.org/drawingml/2006/diagram",
+                "http://schemas.openxmlformats.org/drawingml/2006/chart",
+                "urn:schemas-microsoft-com:vml",
+                "urn:schemas-microsoft-com:office:office",
+                "urn:schemas-microsoft-com:office:word",
+                "urn:schemas-microsoft-com:office:excel",
+                "urn:schemas-microsoft-com:office:powerpoint",
+                "http://schemas.microsoft.com/office/2006/activeX",
+                "http://schemas.openxmlformats.org/spreadsheetml/2006/main",
+                "http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing",
+                "http://schemas.microsoft.com/office/excel/2006/main",
+                "http://schemas.openxmlformats.org/presentationml/2006/main"
+            };
+
+            static const sal_Int32 namespaceIds[] = {
+                NMSP_XML,
+                NMSP_PACKAGE_RELATIONSHIPS,
+                NMSP_RELATIONSHIPS,
+                NMSP_DRAWINGML,
+                NMSP_DIAGRAM,
+                NMSP_CHART,
+                NMSP_VML,
+                NMSP_OFFICE,
+                NMSP_VML_DOC,
+                NMSP_VML_XLS,
+                NMSP_VML_PPT,
+                NMSP_AX,
+                NMSP_XLS,
+                NMSP_XDR,
+                NMSP_XM,
+                NMSP_PPT
+            };
+
+            Sequence< Pair< OUString, sal_Int32 > > aRet(STATIC_ARRAY_SIZE(namespaceIds));
+            for( sal_Int32 i=0; i<aRet.getLength(); ++i )
+                aRet[i] = beans::make_Pair(
+                    ::rtl::OUString::createFromAscii(namespaceURIs[i]),
+                    namespaceIds[i]);
+            return aRet;
+        }
+    }; 
+}
+
+// ============================================================================
+
 XmlFilterBase::XmlFilterBase( const Reference< XMultiServiceFactory >& rxFactory ) :
     FilterBase( rxFactory ),
     mxImpl( new XmlFilterBaseImpl ),
@@ -133,6 +199,18 @@ XmlFilterBase::~XmlFilterBase()
 
 // ----------------------------------------------------------------------------
 
+const ::oox::vml::DrawingPtr XmlFilterBase::getDrawings()
+{
+    return ::oox::vml::DrawingPtr();
+}
+
+::oox::drawingml::chart::ChartConverter* XmlFilterBase::getChartConverter()
+{
+    return 0;
+}
+
+// ----------------------------------------------------------------------------
+
 OUString XmlFilterBase::getFragmentPathFromType( const OUString& rType )
 {
     return importRelations( OUString() )->getTargetFromType( rType );
@@ -193,26 +271,10 @@ bool XmlFilterBase::importFragment( const ::rtl::Reference< FragmentHandler >& r
         xParser->setTokenHandler( mxImpl->mxTokenHandler );
 
         // register XML namespaces
-        xParser->registerNamespace( CREATE_OUSTRING( "http://www.w3.org/XML/1998/namespace" ), NMSP_XML );
-        xParser->registerNamespace( CREATE_OUSTRING( "http://schemas.openxmlformats.org/package/2006/relationships" ), NMSP_PACKAGE_RELATIONSHIPS );
-        xParser->registerNamespace( CREATE_OUSTRING( "http://schemas.openxmlformats.org/officeDocument/2006/relationships" ), NMSP_RELATIONSHIPS );
-
-        xParser->registerNamespace( CREATE_OUSTRING( "http://schemas.openxmlformats.org/drawingml/2006/main" ), NMSP_DRAWINGML );
-        xParser->registerNamespace( CREATE_OUSTRING( "http://schemas.openxmlformats.org/drawingml/2006/diagram" ), NMSP_DIAGRAM );
-        xParser->registerNamespace( CREATE_OUSTRING( "http://schemas.openxmlformats.org/drawingml/2006/chart" ), NMSP_CHART );
-
-        xParser->registerNamespace( CREATE_OUSTRING( "urn:schemas-microsoft-com:vml" ), NMSP_VML );
-        xParser->registerNamespace( CREATE_OUSTRING( "urn:schemas-microsoft-com:office:office" ), NMSP_OFFICE );
-        xParser->registerNamespace( CREATE_OUSTRING( "urn:schemas-microsoft-com:office:word" ), NMSP_VML_DOC );
-        xParser->registerNamespace( CREATE_OUSTRING( "urn:schemas-microsoft-com:office:excel" ), NMSP_VML_XLS );
-        xParser->registerNamespace( CREATE_OUSTRING( "urn:schemas-microsoft-com:office:powerpoint" ), NMSP_VML_PPT );
-        xParser->registerNamespace( CREATE_OUSTRING( "http://schemas.microsoft.com/office/2006/activeX" ), NMSP_AX );
-
-        xParser->registerNamespace( CREATE_OUSTRING( "http://schemas.openxmlformats.org/spreadsheetml/2006/main"), NMSP_XLS );
-        xParser->registerNamespace( CREATE_OUSTRING( "http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing" ), NMSP_XDR );
-        xParser->registerNamespace( CREATE_OUSTRING( "http://schemas.microsoft.com/office/excel/2006/main" ), NMSP_XM );
-
-        xParser->registerNamespace( CREATE_OUSTRING( "http://schemas.openxmlformats.org/presentationml/2006/main"), NMSP_PPT );
+        const Sequence< Pair< OUString, sal_Int32 > > ids=
+            NamespaceIds::get();
+        for( sal_Int32 i=0; i<ids.getLength(); ++i )
+            xParser->registerNamespace( ids[i].First, ids[i].Second );
 
         // create the input source and parse the stream
         InputSource aSource;
@@ -227,6 +289,66 @@ bool XmlFilterBase::importFragment( const ::rtl::Reference< FragmentHandler >& r
     return false;
 }
 
+Reference<XDocument> XmlFilterBase::importFragment( const ::rtl::OUString& aFragmentPath )
+{
+    Reference<XDocument> xRet;
+
+    // path to fragment stream valid?
+    OSL_ENSURE( aFragmentPath.getLength() > 0, "XmlFilterBase::importFragment - empty fragment path" );
+    if( aFragmentPath.getLength() == 0 )
+        return xRet;
+
+    // try to open the fragment stream (this may fail - do not assert)
+    Reference< XInputStream > xInStrm = openInputStream( aFragmentPath );
+    if( !xInStrm.is() )
+        return xRet;
+
+    // binary streams (fragment extension is '.bin') currently not supported
+    sal_Int32 nBinSuffixPos = aFragmentPath.getLength() - mxImpl->maBinSuffix.getLength();
+    if( (nBinSuffixPos >= 0) && aFragmentPath.match( mxImpl->maBinSuffix, nBinSuffixPos ) )
+        return xRet;
+
+    // try to import XML stream
+    try
+    {
+        // create the dom parser
+        Reference<XDocumentBuilder> xDomBuilder( 
+            getGlobalFactory()->createInstance(
+                CREATE_OUSTRING( "com.sun.star.xml.dom.DocumentBuilder" ) ), 
+            UNO_QUERY_THROW );
+
+        // create DOM from fragment
+        xRet = xDomBuilder->parse(xInStrm);
+    }
+    catch( Exception& )
+    {
+    }
+
+    return xRet;
+}
+
+bool XmlFilterBase::importFragment( const ::rtl::Reference< FragmentHandler >& rxHandler,
+                                    const Reference< xml::sax::XFastSAXSerializable >& rxSerializer )
+{
+    Reference< XFastDocumentHandler > xDocHandler( rxHandler.get() );
+    if( !xDocHandler.is() )
+        return false;
+
+    // try to import XML stream
+    try
+    {
+        rxSerializer->fastSerialize( xDocHandler,
+                                     mxImpl->mxTokenHandler,
+                                     uno::Sequence< beans::StringPair >(),
+                                     NamespaceIds::get() );
+        return true;
+    }
+    catch( Exception& )
+    {}
+
+    return false;
+}
+
 RelationsRef XmlFilterBase::importRelations( const OUString& rFragmentPath )
 {
     // try to find cached relations
diff --git oox/source/drawingml/chart/chartspaceconverter.cxx oox/source/drawingml/chart/chartspaceconverter.cxx
index 22e4be7..1957245 100644
--- oox/source/drawingml/chart/chartspaceconverter.cxx
+++ oox/source/drawingml/chart/chartspaceconverter.cxx
@@ -67,9 +67,12 @@ ChartSpaceConverter::~ChartSpaceConverter()
 
 void ChartSpaceConverter::convertFromModel()
 {
+    if( !getChartConverter() )
+        return;
+
     /*  create data provider (virtual function in the ChartConverter class,
         derived converters may create an external data provider) */
-    getChartConverter().createDataProvider( getChartDocument() );
+    getChartConverter()->createDataProvider( getChartDocument() );
 
     // attach number formatter of container document to data receiver
     try
diff --git oox/source/drawingml/chart/converterbase.cxx oox/source/drawingml/chart/converterbase.cxx
index c9b91e3..c5509c2 100644
--- oox/source/drawingml/chart/converterbase.cxx
+++ oox/source/drawingml/chart/converterbase.cxx
@@ -145,9 +145,9 @@ XmlFilterBase& ConverterRoot::getFilter() const
     return mxData->mrFilter;
 }
 
-ChartConverter& ConverterRoot::getChartConverter() const
+ChartConverter* ConverterRoot::getChartConverter() const
 {
-    return mxData->mrConverter;
+    return &mxData->mrConverter;
 }
 
 Reference< XChartDocument > ConverterRoot::getChartDocument() const
diff --git oox/source/drawingml/chart/datasourceconverter.cxx oox/source/drawingml/chart/datasourceconverter.cxx
index be55030..ee880cc 100644
--- oox/source/drawingml/chart/datasourceconverter.cxx
+++ oox/source/drawingml/chart/datasourceconverter.cxx
@@ -56,11 +56,15 @@ DataSequenceConverter::~DataSequenceConverter()
 Reference< XDataSequence > DataSequenceConverter::createDataSequence( const OUString& rRole )
 {
     // create data sequence from data source model (virtual call at chart converter)
-    Reference< XDataSequence > xDataSeq = getChartConverter().createDataSequence( getChartDocument()->getDataProvider(), mrModel );
+    Reference< XDataSequence > xDataSeq;
+    if( getChartConverter() )
+    {
+        getChartConverter()->createDataSequence( getChartDocument()->getDataProvider(), mrModel );
 
-    // set sequence role
-    PropertySet aSeqProp( xDataSeq );
-    aSeqProp.setProperty( CREATE_OUSTRING( "Role" ), rRole );
+        // set sequence role
+        PropertySet aSeqProp( xDataSeq );
+        aSeqProp.setProperty( CREATE_OUSTRING( "Role" ), rRole );
+    }
 
     return xDataSeq;
 }
diff --git oox/source/drawingml/clrscheme.cxx oox/source/drawingml/clrscheme.cxx
index 131fdb5..9f2582c 100644
--- oox/source/drawingml/clrscheme.cxx
+++ oox/source/drawingml/clrscheme.cxx
@@ -28,6 +28,7 @@
  *
  ************************************************************************/
 
+#include <osl/diagnose.h>
 #include "oox/drawingml/clrscheme.hxx"
 #include "tokens.hxx"
 
@@ -64,6 +65,7 @@ ClrScheme::~ClrScheme()
 
 sal_Bool ClrScheme::getColor( sal_Int32 nSchemeClrToken, sal_Int32& rColor ) const
 {
+    OSL_ASSERT((nSchemeClrToken & sal_Int32(0xFFFF0000))==0);
     switch( nSchemeClrToken )
     {
         case XML_bg1 : nSchemeClrToken = XML_lt1; break;
diff --git oox/source/drawingml/color.cxx oox/source/drawingml/color.cxx
index b5b02cd..3931ea4 100644
--- oox/source/drawingml/color.cxx
+++ oox/source/drawingml/color.cxx
@@ -116,6 +116,7 @@ Color::~Color()
 
 sal_Int32 Color::getPresetColor( sal_Int32 nToken )
 {
+    OSL_ASSERT((nToken & sal_Int32(0xFFFF0000))==0);
     switch( nToken )
     {
         case XML_aliceBlue:         return 0xF0F8FF;
@@ -265,6 +266,8 @@ sal_Int32 Color::getPresetColor( sal_Int32 nToken )
 
 sal_Int32 Color::getSystemColor( sal_Int32 nToken, sal_Int32 nDefault )
 {
+    OSL_ASSERT((nToken & sal_Int32(0xFFFF0000))==0);
+
     //! TODO: get colors from system
     switch( nToken )
     {
@@ -381,6 +384,7 @@ sal_Int32 Color::getColor( const ::oox::core::XmlFilterBase& rFilter, sal_Int32
 
     for( TransformVec::const_iterator aIt = maTransforms.begin(), aEnd = maTransforms.end(); aIt != aEnd; ++aIt )
     {
+        OSL_ASSERT((aIt->mnToken & sal_Int32(0xFFFF0000))==0);
         switch( aIt->mnToken )
         {
             case XML_red:       toCrgb(); lclSetValue( mnC1, aIt->mnValue );    break;
diff --git oox/source/drawingml/customshapegeometry.cxx oox/source/drawingml/customshapegeometry.cxx
index e7acf6a..2277ccf 100644
--- oox/source/drawingml/customshapegeometry.cxx
+++ oox/source/drawingml/customshapegeometry.cxx
@@ -269,8 +269,9 @@ void PathListContext::endFastElement( sal_Int32 aElementToken ) throw (SAXExcept
 
 // ---------------------------------------------------------------------
 
-OUString GetShapeType( sal_Int32 nType )
+OUString GetShapePresetType( sal_Int32 nType )
 {
+    OSL_ASSERT((nType & sal_Int32(0xFFFF0000))==0);
     OUString sType;
      switch( nType )
     {
@@ -898,6 +899,7 @@ OUString GetShapeType( sal_Int32 nType )
 
 static OUString GetTextShapeType( sal_Int32 nType )
 {
+    OSL_ASSERT((nType & sal_Int32(0xFFFF0000))==0);
     OUString sType;
     switch( nType )
     {
@@ -1104,7 +1106,7 @@ PresetShapeGeometryContext::PresetShapeGeometryContext( ContextHandler& rParent,
     OUString sShapeType;
     sal_Int32 nShapeType = xAttribs->getOptionalValueToken( XML_prst, FastToken::DONTKNOW );
     if ( nShapeType != FastToken::DONTKNOW )
-		sShapeType = GetShapeType( nShapeType );
+		sShapeType = GetShapePresetType( nShapeType );
     OSL_ENSURE( sShapeType.getLength(), "oox::drawingml::CustomShapeCustomGeometryContext::CustomShapeCustomGeometryContext(), unknown shape type" );
     mrCustomShapeProperties.setShapePresetType( sShapeType );
 }
diff --git oox/source/drawingml/diagram/constraintlistcontext.cxx oox/source/drawingml/diagram/constraintlistcontext.cxx
new file mode 100644
index 0000000..6ef7f18
--- /dev/null
+++ oox/source/drawingml/diagram/constraintlistcontext.cxx
@@ -0,0 +1,102 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include "constraintlistcontext.hxx"
+#include "oox/helper/attributelist.hxx"
+#include "oox/core/namespaces.hxx"
+
+using namespace ::oox::core;
+using namespace ::com::sun::star::uno;
+using namespace ::com::sun::star::xml::sax;
+using ::rtl::OUString;
+
+namespace oox { namespace drawingml {
+
+// CT_ConstraintLists
+ConstraintListContext::ConstraintListContext( ContextHandler& rParent,
+                                              const Reference< XFastAttributeList >&,
+                                              const LayoutAtomPtr &pNode )
+    : ContextHandler( rParent )
+	, mpNode( pNode )
+{
+	OSL_ENSURE( pNode, "Node must NOT be NULL" );
+}
+
+
+ConstraintListContext::~ConstraintListContext()
+{
+}
+
+void SAL_CALL ConstraintListContext::endFastElement( ::sal_Int32 )
+	throw (SAXException, RuntimeException)
+{
+}
+
+Reference< XFastContextHandler > SAL_CALL
+ConstraintListContext::createFastChildContext( ::sal_Int32 aElement,
+                                               const Reference< XFastAttributeList >& xAttribs )
+	throw (SAXException, RuntimeException)
+{
+	Reference< XFastContextHandler > xRet;
+
+    OUString aEmptyStr;
+
+	switch( aElement )
+	{
+	case NMSP_DIAGRAM|XML_constr:
+	{
+		ConstraintAtomPtr pNode( new ConstraintAtom() );
+		mpNode->addChild( pNode );
+
+        AttributeList aAttribs( xAttribs );
+        pNode->setFor( aAttribs.getToken( XML_for, XML_none ) );
+        pNode->setForName( aAttribs.getString( XML_forName, aEmptyStr ) );
+        pNode->setPointType( aAttribs.getToken( XML_ptType, XML_none ) );
+        pNode->setType( aAttribs.getToken( XML_type, XML_none ) );
+        pNode->setRefFor( aAttribs.getToken( XML_refFor, XML_none ) );
+        pNode->setRefForName( aAttribs.getString( XML_refForName, aEmptyStr ) );
+        pNode->setRefType( aAttribs.getToken( XML_refType, XML_none ) );
+        pNode->setRefPointType( aAttribs.getToken( XML_refPtType, XML_none ) );
+        pNode->setFactor( aAttribs.getDouble( XML_fact, 1.0 ) );
+        pNode->setValue( aAttribs.getDouble( XML_val, 0.0 ) );
+        pNode->setOperator( aAttribs.getToken( XML_op, XML_none ) );
+		break;
+	}
+	default:
+		break;
+	}
+	if( !xRet.is() )
+		xRet.set(this);
+
+	return xRet;
+}
+
+
+} }
diff --git oox/source/drawingml/diagram/constraintlistcontext.hxx oox/source/drawingml/diagram/constraintlistcontext.hxx
new file mode 100644
index 0000000..7d48811
--- /dev/null
+++ oox/source/drawingml/diagram/constraintlistcontext.hxx
@@ -0,0 +1,54 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef OOX_DRAWINGML_CONSTRAINTLISTCONTEXT_HXX
+#define OOX_DRAWINGML_CONSTRAINTLISTCONTEXT_HXX
+
+#include "oox/core/contexthandler.hxx"
+#include "diagramlayoutatoms.hxx"
+#include "diagram.hxx"
+
+namespace oox { namespace drawingml {
+
+class ConstraintListContext : public ::oox::core::ContextHandler
+{
+public:
+    ConstraintListContext( ContextHandler& rParent, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& xAttributes, const LayoutAtomPtr &pNode );
+	virtual ~ConstraintListContext();
+
+	virtual void SAL_CALL endFastElement( ::sal_Int32 Element ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
+	virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastContextHandler > SAL_CALL createFastChildContext( ::sal_Int32 Element, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& Attribs ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
+private:
+	LayoutAtomPtr mpNode;
+};
+
+} }
+
+#endif
diff --git oox/source/drawingml/diagram/datamodelcontext.cxx oox/source/drawingml/diagram/datamodelcontext.cxx
index d4dc7ad..f3db16c 100644
--- oox/source/drawingml/diagram/datamodelcontext.cxx
+++ oox/source/drawingml/diagram/datamodelcontext.cxx
@@ -28,7 +28,7 @@
  *
  ************************************************************************/
 
-#include "oox/drawingml/diagram/datamodelcontext.hxx"
+#include "datamodelcontext.hxx"
 #include "oox/helper/attributelist.hxx"
 #include "oox/core/skipcontext.hxx"
 #include "oox/core/namespaces.hxx"
@@ -43,43 +43,46 @@ using ::rtl::OUString;
 
 namespace oox { namespace drawingml {
 
-
-
-// CL_Cxn
-class CxnContext
+// CT_CxnList
+class CxnListContext
     : public ContextHandler
 {
 public:
-    CxnContext( ContextHandler& rParent,
-				const Reference< XFastAttributeList >& xAttribs,
-				const dgm::ConnectionPtr & pConnection )
+    CxnListContext( ContextHandler& rParent,  dgm::Connections & aConnections )
         : ContextHandler( rParent )
-		, mpConnection( pConnection )
+		, mrConnections( aConnections )
         {
-			sal_Int32 nType = xAttribs->getOptionalValueToken( XML_type, XML_parOf );
-			pConnection->mnType = nType;
-			pConnection->msModelId = xAttribs->getOptionalValue( XML_modelId );
-			pConnection->msSourceId = xAttribs->getOptionalValue( XML_srcId );
-			pConnection->msDestId  = xAttribs->getOptionalValue( XML_destId );
-			pConnection->msPresId  = xAttribs->getOptionalValue( XML_presId );
-			pConnection->msSibTransId  = xAttribs->getOptionalValue( XML_sibTransId );
-			AttributeList attribs( xAttribs );
-			pConnection->mnSourceOrder = attribs.getInteger( XML_srcOrd, 0 );
-			pConnection->mnDestOrder = attribs.getInteger( XML_destOrd, 0 );
         }
-
     virtual Reference< XFastContextHandler > SAL_CALL
     createFastChildContext( sal_Int32 aElementToken,
-							const Reference< XFastAttributeList >& /*xAttribs*/ )
+							const Reference< XFastAttributeList >& xAttribs )
         throw (SAXException, RuntimeException)
         {
             Reference< XFastContextHandler > xRet;
 
             switch( aElementToken )
             {
-			case NMSP_DIAGRAM|XML_extLst:
+			case NMSP_DIAGRAM|XML_cxn:
+			{
+				mrConnections.push_back( dgm::Connection() );
+                dgm::Connection& rConnection=mrConnections.back();
+
+                const sal_Int32 nType = xAttribs->getOptionalValueToken( XML_type, XML_parOf );
+                rConnection.mnType = nType;
+                rConnection.msModelId = xAttribs->getOptionalValue( XML_modelId );
+                rConnection.msSourceId = xAttribs->getOptionalValue( XML_srcId );
+                rConnection.msDestId  = xAttribs->getOptionalValue( XML_destId );
+                rConnection.msPresId  = xAttribs->getOptionalValue( XML_presId );
+                rConnection.msSibTransId  = xAttribs->getOptionalValue( XML_sibTransId );
+                rConnection.msParTransId  = xAttribs->getOptionalValue( XML_parTransId );
+                const AttributeList attribs( xAttribs );
+                rConnection.mnSourceOrder = attribs.getInteger( XML_srcOrd, 0 );
+                rConnection.mnDestOrder = attribs.getInteger( XML_destOrd, 0 );
+
+                // skip CT_extLst
                 xRet.set( new SkipContext( *this ) );
                 break;
+			}
             default:
                 break;
             }
@@ -87,35 +90,135 @@ public:
                 xRet.set( this );
             return xRet;
         }
+
 private:
-	dgm::ConnectionPtr mpConnection;
+	dgm::Connections& mrConnections;
 };
 
 
-// CT_CxnList
-class CxnListContext
+// CT_presLayoutVars
+class PresLayoutVarsContext
     : public ContextHandler
 {
 public:
-    CxnListContext( ContextHandler& rParent,  dgm::Connections & aConnections )
-        : ContextHandler( rParent )
-		, maConnections( aConnections )
+    PresLayoutVarsContext( ContextHandler& rParent,
+                           dgm::Point & rPoint ) :
+        ContextHandler( rParent ),
+		mrPoint( rPoint )
+    {
+    }
+    virtual Reference< XFastContextHandler > SAL_CALL
+	createFastChildContext( sal_Int32 aElementToken,
+							const Reference< XFastAttributeList >& xAttribs )
+		throw (SAXException, RuntimeException)
         {
+			Reference< XFastContextHandler > xRet;
+            AttributeList aAttribs( xAttribs );
+
+			switch( aElementToken )
+			{
+                // TODO
+			case NMSP_DIAGRAM|XML_animLvl:
+			case NMSP_DIAGRAM|XML_animOne:
+				break;
+			case NMSP_DIAGRAM|XML_bulletEnabled:
+                mrPoint.mbBulletEnabled = aAttribs.getBool( XML_val, false );
+                break;
+			case NMSP_DIAGRAM|XML_chMax:
+                mrPoint.mnMaxChildren = aAttribs.getInteger( XML_val, -1 );
+                break;
+			case NMSP_DIAGRAM|XML_chPref:
+                mrPoint.mnPreferredChildren = aAttribs.getInteger( XML_val, -1 );
+                break;
+			case NMSP_DIAGRAM|XML_dir:
+                mrPoint.mnDirection = aAttribs.getToken( XML_val, XML_norm );
+                break;
+			case NMSP_DIAGRAM|XML_hierBranch:
+                mrPoint.mnHierarchyBranch = aAttribs.getToken( XML_val, XML_std );
+                break;
+			case NMSP_DIAGRAM|XML_orgChart:
+                mrPoint.mbOrgChartEnabled = aAttribs.getBool( XML_val, false );
+                break;
+			case NMSP_DIAGRAM|XML_resizeHandles:
+                mrPoint.mnResizeHandles = aAttribs.getToken( XML_val, XML_rel );
+                break;
+			default:
+				break;
+			}
+			if( !xRet.is() )
+				xRet.set( this );
+			return xRet;
         }
+
+private:
+    dgm::Point& mrPoint;
+};
+
+
+// CT_prSet
+class PropertiesContext
+    : public ContextHandler
+{
+public:
+    PropertiesContext( ContextHandler& rParent,
+                       dgm::Point & rPoint,
+                       const Reference< XFastAttributeList >& xAttribs ) :
+        ContextHandler( rParent ),
+		mrPoint( rPoint )
+    {
+        OUString aEmptyStr;
+        AttributeList aAttribs( xAttribs );
+
+        mrPoint.msColorTransformCategoryId = aAttribs.getString( XML_csCatId, aEmptyStr );
+        mrPoint.msColorTransformTypeId = aAttribs.getString( XML_csTypeId, aEmptyStr );
+        mrPoint.msLayoutCategoryId = aAttribs.getString( XML_loCatId, aEmptyStr );
+        mrPoint.msLayoutTypeId = aAttribs.getString( XML_loTypeId, aEmptyStr );
+        mrPoint.msPlaceholderText = aAttribs.getString( XML_phldrT, aEmptyStr );
+        mrPoint.msPresentationAssociationId = aAttribs.getString( XML_presAssocID, aEmptyStr );
+        mrPoint.msPresentationLayoutName = aAttribs.getString( XML_presName, aEmptyStr );
+        mrPoint.msPresentationLayoutStyleLabel = aAttribs.getString( XML_presStyleLbl, aEmptyStr );
+        mrPoint.msQuickStyleCategoryId = aAttribs.getString( XML_qsCatId, aEmptyStr );
+        mrPoint.msQuickStyleTypeId = aAttribs.getString( XML_qsTypeId, aEmptyStr );
+
+        mrPoint.mnCustomAngle = aAttribs.getInteger( XML_custAng, -1 );
+        mrPoint.mnPercentageNeighbourWidth = aAttribs.getInteger( XML_custLinFactNeighborX, -1 );
+        mrPoint.mnPercentageNeighbourHeight = aAttribs.getInteger( XML_custLinFactNeighborY, -1 );
+        mrPoint.mnPercentageOwnWidth = aAttribs.getInteger( XML_custLinFactX, -1 );
+        mrPoint.mnPercentageOwnHeight = aAttribs.getInteger( XML_custLinFactY, -1 );
+        mrPoint.mnIncludeAngleScale = aAttribs.getInteger( XML_custRadScaleInc, -1 );
+        mrPoint.mnRadiusScale = aAttribs.getInteger( XML_custRadScaleRad, -1 );
+        mrPoint.mnWidthScale = aAttribs.getInteger( XML_custScaleX, -1 );
+        mrPoint.mnHeightScale = aAttribs.getInteger( XML_custScaleY, -1 );
+        mrPoint.mnWidthOverride = aAttribs.getInteger( XML_custSzX, -1 );
+        mrPoint.mnHeightOverride = aAttribs.getInteger( XML_custSzY, -1 );
+        mrPoint.mnLayoutStyleCount = aAttribs.getInteger( XML_presStyleCnt, -1 );
+        mrPoint.mnLayoutStyleIndex = aAttribs.getInteger( XML_presStyleIdx, -1 );
+
+        mrPoint.mbCoherent3DOffset = aAttribs.getBool( XML_coherent3DOff, false );
+        mrPoint.mbCustomHorizontalFlip = aAttribs.getBool( XML_custFlipHor, false );
+        mrPoint.mbCustomVerticalFlip = aAttribs.getBool( XML_custFlipVert, false );
+        mrPoint.mbCustomText = aAttribs.getBool( XML_custT, false );
+        mrPoint.mbIsPlaceholder = aAttribs.getBool( XML_phldr, false );
+    }
     virtual Reference< XFastContextHandler > SAL_CALL
     createFastChildContext( sal_Int32 aElementToken,
-							const Reference< XFastAttributeList >& xAttribs )
+							const Reference< XFastAttributeList >& )
         throw (SAXException, RuntimeException)
         {
             Reference< XFastContextHandler > xRet;
 
             switch( aElementToken )
             {
-			case NMSP_DIAGRAM|XML_cxn:
+			case NMSP_DIAGRAM|XML_presLayoutVars:
+			{
+                xRet.set( new PresLayoutVarsContext( *this, mrPoint ) );
+				break;
+			}
+			case NMSP_DIAGRAM|XML_style:
             {
-				dgm::ConnectionPtr pConnection( new dgm::Connection() );
-				maConnections.push_back( pConnection );
-                xRet.set( new CxnContext( *this, xAttribs, pConnection ) );
+                // TODO
+                // skip CT_shapeStyle
+                xRet.set( new SkipContext( *this ) );
                 break;
             }
             default:
@@ -127,11 +230,10 @@ public:
         }
 
 private:
-	dgm::Connections  & maConnections;
+    dgm::Point& mrPoint;
 };
 
 
-
 // CL_Pt
 class PtContext
     : public ContextHandler
@@ -139,27 +241,25 @@ class PtContext
 public:
     PtContext( ContextHandler& rParent,
                const Reference< XFastAttributeList >& xAttribs,
-			   const dgm::PointPtr & pPoint)
-        : ContextHandler( rParent )
-		, mpPoint( pPoint )
-		{
-			mpPoint->setModelId( xAttribs->getOptionalValue( XML_modelId ) );
-			//
-			// the default type is XML_node
-			sal_Int32 nType  = xAttribs->getOptionalValueToken( XML_type, XML_node );
-			mpPoint->setType( nType );
-
-			// ignore the cxnId unless it is this type. See 5.15.3.1.3 in Primer
-			if( ( nType == XML_parTrans ) || ( nType == XML_sibTrans ) )
-			{
-				mpPoint->setCnxId( xAttribs->getOptionalValue( XML_cxnId ) );
-			}
-		}
+			   dgm::Point & rPoint):
+        ContextHandler( rParent ),
+		mrPoint( rPoint )
+    {
+        mrPoint.msModelId = xAttribs->getOptionalValue( XML_modelId );
+
+        // the default type is XML_node
+        const sal_Int32 nType  = xAttribs->getOptionalValueToken( XML_type, XML_node );
+        mrPoint.mnType = nType;
+        
+        // ignore the cxnId unless it is this type. See 5.15.3.1.3 in Primer    
+        if( ( nType == XML_parTrans ) || ( nType == XML_sibTrans ) )
+            mrPoint.msCnxId = xAttribs->getOptionalValue( XML_cxnId );
+    }
 
 
     virtual Reference< XFastContextHandler > SAL_CALL
     createFastChildContext( sal_Int32 aElementToken,
-							const Reference< XFastAttributeList >& /*xAttribs*/ )
+							const Reference< XFastAttributeList >& xAttribs )
         throw (SAXException, RuntimeException)
         {
             Reference< XFastContextHandler > xRet;
@@ -170,18 +270,22 @@ public:
                 xRet.set( new SkipContext( *this ) );
                 break;
             case NMSP_DIAGRAM|XML_prSet:
-				// TODO
-				// CT_ElemPropSet
+				OSL_TRACE( "diagram property set for point");
+                xRet = new PropertiesContext( *this, mrPoint, xAttribs );
                 break;
             case NMSP_DIAGRAM|XML_spPr:
                 OSL_TRACE( "shape props for point");
-                xRet = new ShapePropertiesContext( *this, *mpPoint->getShape() );
+                if( !mrPoint.mpShape )
+                    mrPoint.mpShape.reset( new Shape() );
+                xRet = new ShapePropertiesContext( *this, *(mrPoint.mpShape) );
                 break;
             case NMSP_DIAGRAM|XML_t:
             {
                 OSL_TRACE( "shape text body for point");
                 TextBodyPtr xTextBody( new TextBody );
-                mpPoint->getShape()->setTextBody( xTextBody );
+                if( !mrPoint.mpShape )
+                    mrPoint.mpShape.reset( new Shape() );
+                mrPoint.mpShape->setTextBody( xTextBody );
                 xRet = new TextBodyContext( *this, *xTextBody );
                 break;
             }
@@ -194,7 +298,7 @@ public:
         }
 
 private:
-	dgm::PointPtr mpPoint;
+	dgm::Point& mrPoint;
 };
 
 
@@ -204,11 +308,10 @@ class PtListContext
     : public ContextHandler
 {
 public:
-    PtListContext( ContextHandler& rParent,  dgm::Points & aPoints)
-        : ContextHandler( rParent )
-		, maPoints( aPoints )
-		{
-		}
+    PtListContext( ContextHandler& rParent,  dgm::Points& rPoints) :
+        ContextHandler( rParent ),
+		mrPoints( rPoints )
+    {}
     virtual Reference< XFastContextHandler > SAL_CALL
     createFastChildContext( sal_Int32 aElementToken,
                             const Reference< XFastAttributeList >& xAttribs )
@@ -221,9 +324,8 @@ public:
             case NMSP_DIAGRAM|XML_pt:
             {
                 // CT_Pt
-				dgm::PointPtr pPoint( new dgm::Point() );
-				maPoints.push_back( pPoint );
-                xRet.set( new PtContext( *this, xAttribs, pPoint ) );
+				mrPoints.push_back( dgm::Point() );
+                xRet.set( new PtContext( *this, xAttribs, mrPoints.back() ) );
                 break;
             }
             default:
@@ -235,7 +337,7 @@ public:
         }
 
 private:
-	dgm::Points  & maPoints;
+	dgm::Points& mrPoints;
 };
 
 // CT_BackgroundFormatting
diff --git oox/source/drawingml/diagram/datamodelcontext.hxx oox/source/drawingml/diagram/datamodelcontext.hxx
new file mode 100644
index 0000000..526385b
--- /dev/null
+++ oox/source/drawingml/diagram/datamodelcontext.hxx
@@ -0,0 +1,57 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: datamodelcontext.hxx,v $
+ * $Revision: 1.4 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+
+#ifndef OOX_DRAWINGML_SHAPECONTEXT_HXX
+#define OOX_DRAWINGML_SHAPECONTEXT_HXX
+
+#include <com/sun/star/drawing/XShapes.hpp>
+
+#include "oox/core/contexthandler.hxx"
+#include "diagram.hxx"
+
+namespace oox { namespace drawingml {
+
+// CT_DataModel
+class DataModelContext : public ::oox::core::ContextHandler
+{
+public:
+    DataModelContext( ::oox::core::ContextHandler& rParent, const DiagramDataPtr & pDataModelPtr );
+	virtual ~DataModelContext();
+
+    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastContextHandler > SAL_CALL createFastChildContext( ::sal_Int32 Element, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& Attribs ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
+
+protected:
+    DiagramDataPtr mpDataModel;
+};
+
+} }
+
+#endif  //  OOX_DRAWINGML_SHAPEGROUPCONTEXT_HXX
diff --git oox/source/drawingml/diagram/diagram.cxx oox/source/drawingml/diagram/diagram.cxx
index 9499d54..7044130 100644
--- oox/source/drawingml/diagram/diagram.cxx
+++ oox/source/drawingml/diagram/diagram.cxx
@@ -34,10 +34,22 @@
 
 #include <com/sun/star/awt/Point.hpp>
 #include <com/sun/star/awt/Size.hpp>
+#include <com/sun/star/xml/dom/XDocument.hpp>
+#include <com/sun/star/xml/sax/XFastSAXSerializable.hpp>
+#include <rtl/ustrbuf.hxx>
+#include "oox/drawingml/textbody.hxx"
+#include "oox/drawingml/textparagraph.hxx"
+#include "oox/drawingml/textrun.hxx"
 #include "oox/drawingml/diagram/diagram.hxx"
 #include "oox/drawingml/fillproperties.hxx"
 #include "oox/core/namespaces.hxx"
 #include "tokens.hxx"
+#include "diagram.hxx"
+#include "diagramlayoutatoms.hxx"
+#include "diagramfragmenthandler.hxx"
+
+#include <iostream>
+#include <fstream>
 
 using rtl::OUString;
 using namespace ::com::sun::star;
@@ -49,58 +61,26 @@ namespace dgm {
 
 void Connection::dump()
 {
-	OSL_TRACE("dgm: cnx modelId %s, srcId %s, dstId %s",
-			  OUSTRING_TO_CSTR( msModelId ),
+	OSL_TRACE("dgm: cnx modelId %s, srcId %s, dstId %s, parTransId %s, presId %s, sibTransId %s, srcOrd %d, dstOrd %d",
+			  OUSTRING_TO_CSTR( msModelId ), 
               OUSTRING_TO_CSTR( msSourceId ),
-			  OUSTRING_TO_CSTR( msDestId ) );
-}
-
-Point::Point()
-	: mpShape( new Shape( "com.sun.star.drawing.GraphicObjectShape" ) )
-	, mnType( 0 )
-{
+			  OUSTRING_TO_CSTR( msDestId ),
+			  OUSTRING_TO_CSTR( msParTransId ),
+			  OUSTRING_TO_CSTR( msPresId ),
+			  OUSTRING_TO_CSTR( msSibTransId ),
+			  mnSourceOrder,
+			  mnDestOrder );
 }
 
 void Point::dump()
 {
-	OSL_TRACE( "dgm: pt cnxId %s, modelId %s",
+	OSL_TRACE( "dgm: pt text %x, cnxId %s, modelId %s, type %d",
+			   mpShape.get(),
                OUSTRING_TO_CSTR( msCnxId ),
-			   OUSTRING_TO_CSTR( msModelId ) );
-}
-
-void Point::setModelId( const ::rtl::OUString & sModelId )
-{
-	msModelId = sModelId;
-	mpShape->setName( msModelId );
+			   OUSTRING_TO_CSTR( msModelId ),
+               mnType );
 }
 
-
-bool PointsTree::addChild( const PointsTreePtr & pChild )
-{
-	bool added = false;
-
-	OSL_ENSURE( pChild->mpParent.expired(), "can't add, has already a parent" );
-	OSL_ENSURE( mpNode, "has no node" );
-	if( mpNode && pChild->mpParent.expired() )
-	{
-		pChild->mpParent = shared_from_this();
-		maChildrens.push_back( pChild );
-		added = true;
-	}
-
-	return added;
-}
-
-PointsTreePtr PointsTree::getParent() const
-{
-	if( !mpParent.expired() )
-	{
-		return mpParent.lock() ;
-	}
-	return PointsTreePtr();
-}
-
-
 } // dgm namespace
 
 DiagramData::DiagramData()
@@ -118,18 +98,10 @@ void DiagramData::dump()
                   boost::bind( &dgm::Point::dump, _1 ) );
 }
 
-static void setPosition( const dgm::PointPtr & pPoint, const awt::Point & pt )
-{
-	ShapePtr pShape = pPoint->getShape();
-	awt::Size sz;
-	sz.Width = 50;
-	sz.Height = 50;
-	pShape->setPosition( pt );
-	pShape->setSize( sz );
-}
-
-void DiagramLayout::layout( const dgm::PointsTreePtr & pTree, const awt::Point & pt )
+void DiagramLayout::layout( const dgm::Points & pTree, const awt::Point & pt )
 {
+    // TODO
+#if 0
     setPosition( pTree->getPoint(), pt );
     awt::Point nextPt = pt;
     nextPt.Y += 50;
@@ -139,6 +111,7 @@ void DiagramLayout::layout( const dgm::PointsTreePtr & pTree, const awt::Point &
         layout( *iter, nextPt );
         nextPt.X += 50;
     }
+#endif
 }
 
 void Diagram::setData( const DiagramDataPtr & pData)
@@ -152,19 +125,244 @@ void Diagram::setLayout( const DiagramLayoutPtr & pLayout)
     mpLayout = pLayout;
 }
 
-void Diagram::setQStyles( const DiagramQStylesPtr & pStyles)
+#if OSL_DEBUG_LEVEL > 1
+rtl::OString normalizeDotName( const rtl::OUString& rStr )
 {
-	mpQStyles = pStyles;
-}
+    rtl::OUStringBuffer aBuf;
+    aBuf.append((sal_Unicode)'N');
 
+    const sal_Int32 nLen(rStr.getLength());
+    sal_Int32 nCurrIndex(0);
+    while( nCurrIndex < nLen )
+    {
+        const sal_Int32 aChar=rStr.iterateCodePoints(&nCurrIndex);
+        if( aChar != '-' && aChar != '{' && aChar != '}' )
+            aBuf.append((sal_Unicode)aChar);
+    }
 
-void Diagram::setColors( const DiagramColorsPtr & pColors)
+    return rtl::OUStringToOString(aBuf.makeStringAndClear(),
+                                  RTL_TEXTENCODING_UTF8);
+}
+#endif
+
+static sal_Int32 calcDepth( const rtl::OUString& rNodeName, 
+                            const dgm::Connections& rCnx )
 {
-	mpColors = pColors;
+    // find length of longest path in 'isChild' graph, ending with rNodeName
+	dgm::Connections::const_iterator aCurrCxn( rCnx.begin() );
+	const dgm::Connections::const_iterator aEndCxn( rCnx.end() );
+    while( aCurrCxn != aEndCxn )
+    {
+        if( aCurrCxn->msParTransId.getLength() &&
+            aCurrCxn->msSibTransId.getLength() &&
+            aCurrCxn->msSourceId.getLength() &&
+            aCurrCxn->msDestId.getLength() &&
+            aCurrCxn->mnType != XML_presOf && 
+            aCurrCxn->mnType != XML_presParOf &&
+            rNodeName == aCurrCxn->msDestId )
+        {
+            return calcDepth(aCurrCxn->msSourceId,
+                             rCnx) + 1;
+        }
+        ++aCurrCxn;
+    }
+
+    return 0;
 }
 
+
 void Diagram::build(  )
 {
+    // build name-object maps
+    // ======================
+
+#if OSL_DEBUG_LEVEL > 1
+    std::ofstream output("/tmp/tree.dot");
+
+    output << "digraph datatree {" << std::endl;
+#endif
+
+	dgm::Points::iterator aCurrPoint( getData()->getPoints( ).begin() );
+	const dgm::Points::iterator aEndPoint( getData()->getPoints( ).end() );
+    while( aCurrPoint != aEndPoint )
+    {
+#if OSL_DEBUG_LEVEL > 1
+        output << "\t" 
+               << normalizeDotName(aCurrPoint->msModelId).getStr()
+               << "[";
+
+        if( aCurrPoint->msPresentationLayoutName.getLength() )
+            output << "label=\"" 
+                   << rtl::OUStringToOString(
+                       aCurrPoint->msPresentationLayoutName,
+                       RTL_TEXTENCODING_UTF8).getStr() << "\", ";
+        else
+            output << "label=\"" 
+                   << rtl::OUStringToOString(
+                       aCurrPoint->msModelId,
+                       RTL_TEXTENCODING_UTF8).getStr() << "\", ";
+
+        switch( aCurrPoint->mnType )
+        {
+            case XML_doc: output << "style=filled, color=red"; break;
+            case XML_asst: output << "style=filled, color=green"; break;
+            default:
+            case XML_node: output << "style=filled, color=blue"; break;
+            case XML_pres: output << "style=filled, color=yellow"; break;
+            case XML_parTrans: output << "color=grey"; break;
+            case XML_sibTrans: output << " "; break;
+        }
+
+        output << "];" << std::endl;
+
+        // does currpoint have any text set?
+        if( aCurrPoint->mpShape && 
+            aCurrPoint->mpShape->getTextBody() &&
+            !aCurrPoint->mpShape->getTextBody()->getParagraphs().empty() &&
+            !aCurrPoint->mpShape->getTextBody()->getParagraphs().front()->getRuns().empty() )
+        {
+            static sal_Int32 nCount=0;
+
+            output << "\t" 
+                   << "textNode" << nCount
+                   << " ["
+                   << "label=\""
+                   << rtl::OUStringToOString(
+                       aCurrPoint->mpShape->getTextBody()->getParagraphs().front()->getRuns().front()->getText(),
+                       RTL_TEXTENCODING_UTF8).getStr()
+                   << "\"" << "];" << std::endl;
+            output << "\t" 
+                   << normalizeDotName(aCurrPoint->msModelId).getStr()
+                   << " -> "
+                   << "textNode" << nCount++
+                   << ";" << std::endl;
+        }
+            
+
+#if 0
+        // msPresentationAssociationId does not appear to be
+        // valid/used, the relation this imposed for several examples
+        // was ~broken
+        if( aCurrPoint->msPresentationAssociationId.getLength() )
+            output << "\t" 
+                   << normalizeDotName(aCurrPoint->msModelId).getStr()
+                   << " -> "
+                   << normalizeDotName(aCurrPoint->msPresentationAssociationId).getStr()
+                   << " [style=dotted, color=red, "
+                   << "label=\"presAssocID\"];" << std::endl;
+#endif
+
+#endif
+
+        const bool bInserted1=getData()->getPointNameMap().insert(
+            std::make_pair(aCurrPoint->msModelId,&(*aCurrPoint))).second;
+        (void)bInserted1;
+
+        OSL_ENSURE(bInserted1,"Diagram::build(): non-unique point model id");
+
+        if( aCurrPoint->msPresentationLayoutName.getLength() )
+        {
+            DiagramData::PointsNameMap::value_type::second_type& rVec=
+                getData()->getPointsPresNameMap()[aCurrPoint->msPresentationLayoutName];
+            rVec.push_back(&(*aCurrPoint));
+        }
+        ++aCurrPoint;
+    }
+
+	dgm::Connections::const_iterator aCurrCxn( getData()->getConnections( ).begin() );
+	const dgm::Connections::const_iterator aEndCxn( getData()->getConnections( ).end() );
+    while( aCurrCxn != aEndCxn )
+    {
+#if OSL_DEBUG_LEVEL > 1
+        if( aCurrCxn->msParTransId.getLength() || 
+            aCurrCxn->msSibTransId.getLength() )
+        {
+            if( aCurrCxn->msSourceId.getLength() || 
+                aCurrCxn->msDestId.getLength() )
+            {
+                output << "\t" 
+                       << normalizeDotName(aCurrCxn->msSourceId).getStr()
+                       << " -> "
+                       << normalizeDotName(aCurrCxn->msParTransId).getStr()
+                       << " -> "
+                       << normalizeDotName(aCurrCxn->msSibTransId).getStr()
+                       << " -> "
+                       << normalizeDotName(aCurrCxn->msDestId).getStr()
+                       << " [style=dotted,"
+                       << ((aCurrCxn->mnType == XML_presOf) ? " color=red, " : ((aCurrCxn->mnType == XML_presParOf) ? " color=green, " : " "))
+                       << "label=\"" 
+                       << rtl::OUStringToOString(aCurrCxn->msModelId,
+                                                 RTL_TEXTENCODING_UTF8 ).getStr()
+                       << "\"];" << std::endl;
+            }
+            else
+            {
+                output << "\t" 
+                       << normalizeDotName(aCurrCxn->msParTransId).getStr()
+                       << " -> "
+                       << normalizeDotName(aCurrCxn->msSibTransId).getStr()
+                       << " ["
+                       << ((aCurrCxn->mnType == XML_presOf) ? " color=red, " : ((aCurrCxn->mnType == XML_presParOf) ? " color=green, " : " "))
+                       << "label=\"" 
+                       << rtl::OUStringToOString(aCurrCxn->msModelId,
+                                                 RTL_TEXTENCODING_UTF8 ).getStr()
+                       << "\"];" << std::endl;
+            }
+        }
+        else if( aCurrCxn->msSourceId.getLength() || 
+                 aCurrCxn->msDestId.getLength() )
+            output << "\t" 
+                   << normalizeDotName(aCurrCxn->msSourceId).getStr()
+                   << " -> "
+                   << normalizeDotName(aCurrCxn->msDestId).getStr()
+                   << " [label=\"" 
+                   << rtl::OUStringToOString(aCurrCxn->msModelId,
+                                             RTL_TEXTENCODING_UTF8 ).getStr()
+                   << ((aCurrCxn->mnType == XML_presOf) ? "\", color=red]" : ((aCurrCxn->mnType == XML_presParOf) ? "\", color=green]" : "\"]"))
+                   << ";" << std::endl;
+#endif
+
+        const bool bInserted1=getData()->getConnectionNameMap().insert(
+            std::make_pair(aCurrCxn->msModelId,&(*aCurrCxn))).second;
+        (void)bInserted1;
+
+        OSL_ENSURE(bInserted1,"Diagram::build(): non-unique connection model id");
+
+        if( aCurrCxn->mnType == XML_presOf )
+        {
+            DiagramData::StringMap::value_type::second_type& rVec=getData()->getPresOfNameMap()[aCurrCxn->msDestId];
+            rVec.push_back(
+                std::make_pair(
+                    aCurrCxn->msSourceId,sal_Int32(0)));
+        }
+
+        ++aCurrCxn;
+    }
+
+    // assign outline levels
+    DiagramData::StringMap::iterator aPresOfIter=getData()->getPresOfNameMap().begin();
+    const DiagramData::StringMap::iterator aPresOfEnd=getData()->getPresOfNameMap().end();
+    while( aPresOfIter != aPresOfEnd )
+    {
+        DiagramData::StringMap::value_type::second_type::iterator aPresOfNodeIterCalcLevel=aPresOfIter->second.begin();
+        const DiagramData::StringMap::value_type::second_type::iterator aPresOfNodeEnd=aPresOfIter->second.end();
+        while(aPresOfNodeIterCalcLevel != aPresOfNodeEnd)
+        {
+            const sal_Int32 nDepth=calcDepth(aPresOfNodeIterCalcLevel->first, 
+                                             getData()->getConnections());
+            aPresOfNodeIterCalcLevel->second = nDepth != 0 ? nDepth : -1;
+            ++aPresOfNodeIterCalcLevel;
+        }
+
+        ++aPresOfIter;
+    }
+
+#if OSL_DEBUG_LEVEL > 1
+    output << "}" << std::endl;
+#endif
+
+    // TODO
+#if 0
     OSL_TRACE( "building diagram" );
     typedef std::map< OUString, dgm::PointPtr > PointsMap;
     PointsMap aPointsMap;
@@ -240,30 +438,33 @@ void Diagram::build(  )
     }
     // check bounds
     OSL_ENSURE( aRoots.size() == 1, "more than one root" );
-    // #i92239# roots may be empty
-    if( !aRoots.empty() )
-    {
-        mpRoot = aRoots.begin()->second;
-        OSL_TRACE( "root is %s", OUSTRING_TO_CSTR( mpRoot->getPoint()->getModelId() ) );
-        for( PointsTreeMap::iterator iter = aTreeMap.begin();
-             iter != aTreeMap.end(); iter++ )
-        {
-            if(! iter->second->getParent() )
-            {
-                OSL_TRACE("node without parent %s", OUSTRING_TO_CSTR( iter->first ) );
-            }
-        }
-    }
+	mpRoot = aRoots.begin()->second;
+	OSL_TRACE( "root is %s", OUSTRING_TO_CSTR( mpRoot->getPoint()->getModelId() ) );
+	for( PointsTreeMap::iterator iter = aTreeMap.begin();
+		 iter != aTreeMap.end(); iter++ )
+	{
+		if(! iter->second->getParent() ) 
+		{
+			OSL_TRACE("node without parent %s", OUSTRING_TO_CSTR( iter->first ) );
+		}
+	}
+#endif
 }
 
 
 void Diagram::addTo( const ShapePtr & pParentShape )
 {
+    // collect data, init maps
+	build( );
+    
+    // create Shape hierarchy
+    ShapeCreationVisitor aCreationVisitor(pParentShape, *this);
+    mpLayout->getNode()->accept(aCreationVisitor);
+
+#if 0
     dgm::Points & aPoints( mpData->getPoints( ) );
     dgm::Points::iterator aPointsIter;
-	build( );
-    if( mpRoot.get() )
-        mpLayout->layout( mpRoot, awt::Point( 0, 0 ) );
+	mpLayout->layout( mpRoot, awt::Point( 0, 0 ) );
 
     for( aPointsIter = aPoints.begin(); aPointsIter != aPoints.end(); ++aPointsIter )
     {
@@ -286,6 +487,7 @@ void Diagram::addTo( const ShapePtr & pParentShape )
     {
         OSL_TRACE( "Dgm: shape name %s", OUSTRING_TO_CSTR( (*iter)->getName() ) );
     }
+#endif
 }
 
 OUString Diagram::getLayoutId() const
@@ -298,5 +500,152 @@ OUString Diagram::getLayoutId() const
     return sLayoutId;
 }
 
+uno::Reference<xml::dom::XDocument> loadFragment( 
+    core::XmlFilterBase& rFilter,
+    const rtl::Reference< core::FragmentHandler >& rxHandler )
+{
+    // load diagramming fragments into DOM representation, that later
+    // gets serialized back to SAX events and parsed
+    return rFilter.importFragment( rxHandler->getFragmentPath() );
+}
+
+void importFragment( core::XmlFilterBase& rFilter,
+                     const uno::Reference<xml::dom::XDocument>& rXDom,
+                     const char* pPropName,
+                     const ShapePtr& pShape,
+                     const rtl::Reference< core::FragmentHandler >& rxHandler )
+{
+    uno::Reference<xml::sax::XFastSAXSerializable> xSerializer( 
+        rXDom, uno::UNO_QUERY_THROW);
+
+    // now serialize DOM tree into internal data structures
+    rFilter.importFragment( rxHandler, xSerializer );
+
+    // tack XDocument onto shape
+    pShape->getShapeProperties().setProperty(
+        OUString::createFromAscii(pPropName),
+        rXDom);
+}
+
+void loadDiagram( const ShapePtr& pShape,
+                  core::XmlFilterBase& rFilter,
+                  const ::rtl::OUString& rDataModelPath,
+                  const ::rtl::OUString& rLayoutPath,
+                  const ::rtl::OUString& rQStylePath,
+                  const ::rtl::OUString& rColorStylePath )
+{
+	DiagramPtr pDiagram( new Diagram() );
+
+    DiagramDataPtr pData( new DiagramData() );
+    pDiagram->setData( pData );
+    
+    DiagramLayoutPtr pLayout( new DiagramLayout() );
+    pDiagram->setLayout( pLayout );
+    
+	// data
+	if( rDataModelPath.getLength() > 0 )
+    {
+        rtl::Reference< core::FragmentHandler > xRef(
+            new DiagramDataFragmentHandler( rFilter, rDataModelPath, pData ));
+
+        importFragment(rFilter,
+                       loadFragment(rFilter,xRef),
+                       "DiagramData",
+                       pShape,
+                       xRef);
+    }
+
+	// layout
+	if( rLayoutPath.getLength() > 0 )
+    {
+        rtl::Reference< core::FragmentHandler > xRef(
+            new DiagramLayoutFragmentHandler( rFilter, rLayoutPath, pLayout ));
+        importFragment(rFilter,
+                       loadFragment(rFilter,xRef),
+                       "DiagramLayout",
+                       pShape,
+                       xRef);
+    }
+
+	// style
+	if( rQStylePath.getLength() > 0 )
+    {
+        rtl::Reference< core::FragmentHandler > xRef(
+            new DiagramQStylesFragmentHandler( rFilter, rQStylePath, pDiagram->getStyles() ));
+        importFragment(rFilter,
+                       loadFragment(rFilter,xRef),
+                       "DiagramQStyle",
+                       pShape,
+                       xRef);
+    }
+
+	// colors
+	if( rColorStylePath.getLength() > 0 )
+    {
+        rtl::Reference< core::FragmentHandler > xRef(
+            new ColorFragmentHandler( rFilter, rColorStylePath, pDiagram->getColors() ));
+        importFragment(rFilter,
+                       loadFragment(rFilter,xRef),
+                       "DiagramColorStyle",
+                       pShape,
+                       xRef);
+    }
+    
+    // diagram loaded. now lump together & attach to shape
+	pDiagram->addTo(pShape);
+}
+
+void loadDiagram( const ShapePtr& pShape,
+                  core::XmlFilterBase& rFilter,
+                  const uno::Reference<xml::dom::XDocument>& rXDataModelDom,
+                  const uno::Reference<xml::dom::XDocument>& rXLayoutDom,
+                  const uno::Reference<xml::dom::XDocument>& rXQStyleDom,
+                  const uno::Reference<xml::dom::XDocument>& rXColorStyleDom )
+{
+	DiagramPtr pDiagram( new Diagram() );
+
+    DiagramDataPtr pData( new DiagramData() );
+    pDiagram->setData( pData );
+    
+    DiagramLayoutPtr pLayout( new DiagramLayout() );
+    pDiagram->setLayout( pLayout );
+
+    OUString aEmpty;
+    
+	// data
+	if( rXDataModelDom.is() )
+        importFragment(rFilter,
+                       rXDataModelDom,
+                       "DiagramData",
+                       pShape,
+                       new DiagramDataFragmentHandler( rFilter, aEmpty, pData ));
+
+	// layout
+	if( rXLayoutDom.is() )
+        importFragment(rFilter,
+                       rXLayoutDom,
+                       "DiagramLayout",
+                       pShape,
+                       new DiagramLayoutFragmentHandler( rFilter, aEmpty, pLayout ));
+
+	// style
+	if( rXQStyleDom.is() )
+        importFragment(rFilter,
+                       rXQStyleDom,
+                       "DiagramQStyle",
+                       pShape,
+                       new DiagramQStylesFragmentHandler( rFilter, aEmpty, pDiagram->getStyles() ));
+
+	// colors
+	if( rXColorStyleDom.is() )
+        importFragment(rFilter,
+                       rXColorStyleDom,
+                       "DiagramColorStyle",
+                       pShape,
+                       new ColorFragmentHandler( rFilter, aEmpty, pDiagram->getColors() ));
+    
+    // diagram loaded. now lump together & attach to shape
+	pDiagram->addTo(pShape);
+}
 
 } }
diff --git oox/source/drawingml/diagram/diagram.hxx oox/source/drawingml/diagram/diagram.hxx
new file mode 100644
index 0000000..cb932d4
--- /dev/null
+++ oox/source/drawingml/diagram/diagram.hxx
@@ -0,0 +1,320 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef OOX_DRAWINGML_DIAGRAM_DIAGRAM_HXX
+#define OOX_DRAWINGML_DIAGRAM_DIAGRAM_HXX
+
+#include <map>
+#include <vector>
+
+#include <boost/shared_ptr.hpp>
+#include <boost/enable_shared_from_this.hpp>
+
+#include <rtl/ustring.hxx>
+
+#include "oox/drawingml/shape.hxx"
+#include "oox/drawingml/fillproperties.hxx"
+#include "tokens.hxx"
+
+namespace com { namespace sun { namespace star {
+    namespace xml { namespace dom { class XDocument; } }
+} } }
+
+namespace oox { namespace drawingml {
+
+namespace dgm {
+
+/** A Connection 
+ */
+struct Connection
+{
+	Connection() : 
+        mnType( 0 ),
+		mnSourceOrder( 0 ),
+		mnDestOrder( 0 )
+    {}
+
+	void dump();
+
+	sal_Int32 mnType;
+	::rtl::OUString msModelId;
+	::rtl::OUString msSourceId;
+	::rtl::OUString msDestId;
+	::rtl::OUString msParTransId;
+	::rtl::OUString msPresId;
+	::rtl::OUString msSibTransId;
+	sal_Int32 mnSourceOrder;
+	sal_Int32 mnDestOrder;
+	
+};
+
+typedef std::vector< Connection > Connections;
+
+
+/** A point
+ */
+struct Point
+{
+	Point() : 
+        mnType(0),
+        mnMaxChildren(-1),
+        mnPreferredChildren(-1),
+        mnDirection(XML_norm),
+        mnHierarchyBranch(XML_std),
+        mnResizeHandles(XML_rel),
+        mnCustomAngle(-1),
+        mnPercentageNeighbourWidth(-1),
+        mnPercentageNeighbourHeight(-1),
+        mnPercentageOwnWidth(-1),
+        mnPercentageOwnHeight(-1),
+        mnIncludeAngleScale(-1),
+        mnRadiusScale(-1),
+        mnWidthScale(-1),
+        mnHeightScale(-1),
+        mnWidthOverride(-1),
+        mnHeightOverride(-1),
+        mnLayoutStyleCount(-1),
+        mnLayoutStyleIndex(-1),
+
+        mbOrgChartEnabled(false),
+        mbBulletEnabled(false),
+        mbCoherent3DOffset(false),
+        mbCustomHorizontalFlip(false),
+        mbCustomVerticalFlip(false),
+        mbCustomText(false),
+        mbIsPlaceholder(false)
+    {}
+	void dump();
+
+    ShapePtr      mpShape;
+
+    rtl::OUString msCnxId;
+    rtl::OUString msModelId;
+    rtl::OUString msColorTransformCategoryId;
+    rtl::OUString msColorTransformTypeId;
+    rtl::OUString msLayoutCategoryId;
+    rtl::OUString msLayoutTypeId;
+    rtl::OUString msPlaceholderText;
+    rtl::OUString msPresentationAssociationId;
+    rtl::OUString msPresentationLayoutName;
+    rtl::OUString msPresentationLayoutStyleLabel;
+    rtl::OUString msQuickStyleCategoryId;
+    rtl::OUString msQuickStyleTypeId; 
+
+    sal_Int32     mnType;
+    sal_Int32     mnMaxChildren;
+    sal_Int32     mnPreferredChildren;
+    sal_Int32     mnDirection;
+    sal_Int32     mnHierarchyBranch;
+    sal_Int32     mnResizeHandles;
+    sal_Int32     mnCustomAngle;
+    sal_Int32     mnPercentageNeighbourWidth;
+    sal_Int32     mnPercentageNeighbourHeight;
+    sal_Int32     mnPercentageOwnWidth;
+    sal_Int32     mnPercentageOwnHeight;
+    sal_Int32     mnIncludeAngleScale;
+    sal_Int32     mnRadiusScale;
+    sal_Int32     mnWidthScale;
+    sal_Int32     mnHeightScale;
+    sal_Int32     mnWidthOverride;
+    sal_Int32     mnHeightOverride;
+    sal_Int32     mnLayoutStyleCount;
+    sal_Int32     mnLayoutStyleIndex;
+
+    bool          mbOrgChartEnabled;
+    bool          mbBulletEnabled;
+    bool          mbCoherent3DOffset;
+    bool          mbCustomHorizontalFlip;
+    bool          mbCustomVerticalFlip;
+    bool          mbCustomText;
+    bool          mbIsPlaceholder;
+};
+
+typedef std::vector< Point >        Points;
+
+}
+
+class LayoutNode;
+typedef boost::shared_ptr< LayoutNode > LayoutNodePtr;
+
+////////////////////
+
+class DiagramData 
+{
+public:
+    typedef std::map< rtl::OUString, dgm::Point* > PointNameMap;
+    typedef std::map< rtl::OUString, 
+                      std::vector<dgm::Point*> >   PointsNameMap;
+    typedef std::map< rtl::OUString, const dgm::Connection* > ConnectionNameMap;
+    typedef std::map< rtl::OUString, 
+                      std::vector<std::pair<rtl::OUString,sal_Int32> > > StringMap;
+
+	DiagramData();
+	FillPropertiesPtr & getFillProperties()
+		{ return mpFillProperties; }
+	dgm::Connections & getConnections()
+		{ return maConnections; }
+	dgm::Points & getPoints()
+		{ return maPoints; }
+	ConnectionNameMap & getConnectionNameMap()
+		{ return maConnectionNameMap; }
+	StringMap & getPresOfNameMap()
+		{ return maPresOfNameMap; }
+	PointNameMap & getPointNameMap()
+		{ return maPointNameMap; }
+	PointsNameMap & getPointsPresNameMap()
+		{ return maPointsPresNameMap; }
+	void dump();
+private:
+    FillPropertiesPtr mpFillProperties;
+    dgm::Connections  maConnections;
+    dgm::Points       maPoints;
+    PointNameMap      maPointNameMap;
+    PointsNameMap     maPointsPresNameMap;
+    ConnectionNameMap maConnectionNameMap;
+    StringMap         maPresOfNameMap;
+};
+
+typedef boost::shared_ptr< DiagramData > DiagramDataPtr;
+
+
+
+////////////////////
+
+class DiagramLayout
+{
+public:
+	void setDefStyle( const ::rtl::OUString & sDefStyle )
+		{ msDefStyle = sDefStyle; }
+	void setMinVer( const ::rtl::OUString & sMinVer )
+		{ msMinVer = sMinVer; }
+	void setUniqueId( const ::rtl::OUString & sUniqueId )
+		{ msUniqueId = sUniqueId; }
+	const ::rtl::OUString & getUniqueId()
+		{ return msUniqueId; }
+	void setTitle( const ::rtl::OUString & sTitle )
+		{ msTitle = sTitle; }
+	void setDesc( const ::rtl::OUString & sDesc )
+		{ msDesc = sDesc; }
+
+	LayoutNodePtr & getNode()
+		{ return mpNode; }
+	const LayoutNodePtr & getNode() const
+		{ return mpNode; }
+	DiagramDataPtr & getSampData()
+		{ return mpSampData; }
+	const DiagramDataPtr & getSampData() const
+		{ return mpSampData; }
+	DiagramDataPtr & getStyleData()
+		{ return mpStyleData; }
+	const DiagramDataPtr & getStyleData() const
+		{ return mpStyleData; }
+
+	void layout( const dgm::Points & pTree, const com::sun::star::awt::Point & pt );
+
+private:
+	::rtl::OUString msDefStyle;
+	::rtl::OUString msMinVer;
+	::rtl::OUString msUniqueId;	
+
+	::rtl::OUString msTitle;
+	::rtl::OUString msDesc;
+	LayoutNodePtr  mpNode;
+	DiagramDataPtr mpSampData;
+	DiagramDataPtr mpStyleData;
+	// TODO
+	// catLst
+	// clrData
+};
+
+typedef boost::shared_ptr< DiagramLayout > DiagramLayoutPtr;
+
+///////////////////////
+
+struct DiagramStyle
+{
+    ShapeStyleRef maFillStyle;
+    ShapeStyleRef maLineStyle;
+    ShapeStyleRef maEffectStyle;
+    ShapeStyleRef maTextStyle;
+};
+
+typedef std::map<rtl::OUString,DiagramStyle> DiagramQStyleMap;
+
+struct DiagramColor
+{
+    oox::drawingml::Color maFillColor;
+    oox::drawingml::Color maLineColor;
+    oox::drawingml::Color maEffectColor;
+    oox::drawingml::Color maTextFillColor;
+    oox::drawingml::Color maTextLineColor;
+    oox::drawingml::Color maTextEffectColor;
+};
+
+typedef std::map<rtl::OUString,DiagramColor> DiagramColorMap;
+
+///////////////////////
+
+class Diagram
+{
+public:
+	void setData( const DiagramDataPtr & );
+	DiagramDataPtr getData() const
+		{
+			return mpData;
+		}
+	void setLayout( const DiagramLayoutPtr & );
+	DiagramLayoutPtr getLayout() const
+		{
+			return mpLayout;
+		}
+
+    DiagramQStyleMap& getStyles() { return maStyles; }
+    const DiagramQStyleMap& getStyles() const { return maStyles; }
+    DiagramColorMap& getColors() { return maColors; }
+    const DiagramColorMap& getColors() const { return maColors; }
+
+	void addTo( const ShapePtr & pShape );
+	::rtl::OUString getLayoutId() const;
+private:
+	void build( );
+	DiagramDataPtr                             mpData;
+	DiagramLayoutPtr                           mpLayout;
+	DiagramQStyleMap                           maStyles;
+	DiagramColorMap                            maColors;
+	std::map< ::rtl::OUString, ShapePtr >      maShapeMap;
+};
+
+
+typedef boost::shared_ptr< Diagram > DiagramPtr;
+
+} }
+
+#endif
diff --git oox/source/drawingml/diagram/diagramdefinitioncontext.cxx oox/source/drawingml/diagram/diagramdefinitioncontext.cxx
index e4ba441..4098d40 100644
--- oox/source/drawingml/diagram/diagramdefinitioncontext.cxx
+++ oox/source/drawingml/diagram/diagramdefinitioncontext.cxx
@@ -30,10 +30,9 @@
 
 #include "oox/core/skipcontext.hxx"
 #include "oox/core/namespaces.hxx"
-#include "oox/helper/helper.hxx"
-#include "layoutnodecontext.hxx"
 #include "diagramdefinitioncontext.hxx"
-#include "oox/drawingml/diagram/datamodelcontext.hxx"
+#include "layoutnodecontext.hxx"
+#include "datamodelcontext.hxx"
 #include "tokens.hxx"
 
 using namespace ::oox::core;
@@ -91,9 +90,15 @@ DiagramDefinitionContext::createFastChildContext( ::sal_Int32 aElement,
         mpLayout->setDesc( xAttribs->getOptionalValue( XML_val ) );
         break;
     case NMSP_DIAGRAM|XML_layoutNode:
-		mpLayout->getNode().reset( new LayoutNode() );
-        xRet.set( new LayoutNodeContext( *this, xAttribs, mpLayout->getNode() ) );
+    {
+		LayoutNodePtr pNode( new LayoutNode() );
+		mpLayout->getNode() = pNode;
+        pNode->setChildOrder( xAttribs->getOptionalValueToken( XML_chOrder, XML_b ) );
+        pNode->setMoveWith( xAttribs->getOptionalValue( XML_moveWith ) );
+        pNode->setStyleLabel( xAttribs->getOptionalValue( XML_styleLbl ) );
+        xRet.set( new LayoutNodeContext( *this, xAttribs, pNode ) );
         break;
+    }
      case NMSP_DIAGRAM|XML_clrData:
         // TODO, does not matter for the UI. skip.
         xRet.set( new SkipContext( *this ) );
diff --git oox/source/drawingml/diagram/diagramdefinitioncontext.hxx oox/source/drawingml/diagram/diagramdefinitioncontext.hxx
index bfe44ca..ed0ec6a 100644
--- oox/source/drawingml/diagram/diagramdefinitioncontext.hxx
+++ oox/source/drawingml/diagram/diagramdefinitioncontext.hxx
@@ -32,7 +32,7 @@
 #define OOX_DRAWINGML_DIAGRAMDEFINITIONCONTEXT_HXX
 
 #include "oox/core/contexthandler.hxx"
-#include "oox/drawingml/diagram/diagram.hxx"
+#include "diagram.hxx"
 
 namespace oox { namespace drawingml {
 
diff --git oox/source/drawingml/diagram/diagramfragmenthandler.cxx oox/source/drawingml/diagram/diagramfragmenthandler.cxx
index 00ad2a8..a4e5b66 100644
--- oox/source/drawingml/diagram/diagramfragmenthandler.cxx
+++ oox/source/drawingml/diagram/diagramfragmenthandler.cxx
@@ -30,10 +30,12 @@
 
 #include <osl/diagnose.h>
 
-#include "oox/drawingml/diagram/diagramfragmenthandler.hxx"
-#include "oox/drawingml/diagram/datamodelcontext.hxx"
 #include "oox/core/namespaces.hxx"
+#include "oox/drawingml/colorchoicecontext.hxx"
+#include "oox/drawingml/stylematrixreferencecontext.hxx"
 #include "diagramdefinitioncontext.hxx"
+#include "diagramfragmenthandler.hxx"
+#include "datamodelcontext.hxx"
 #include "tokens.hxx"
 
 using namespace ::oox::core;
@@ -134,94 +136,144 @@ DiagramLayoutFragmentHandler::createFastChildContext( ::sal_Int32 aElement,
 ///////////////////////
 
 DiagramQStylesFragmentHandler::DiagramQStylesFragmentHandler( XmlFilterBase& rFilter,
-														const OUString& rFragmentPath,
-														const DiagramQStylesPtr pDataPtr )
-	throw( )
-    : FragmentHandler( rFilter, rFragmentPath )
-	, mpDataPtr( pDataPtr )
+                                                              const OUString& rFragmentPath,
+                                                              DiagramQStyleMap& rStylesMap ) :
+    FragmentHandler2( rFilter, rFragmentPath ),
+    maStyleName(),
+    maStyleEntry(),
+	mrStylesMap( rStylesMap )
+{}
+
+::oox::core::ContextWrapper DiagramQStylesFragmentHandler::createStyleMatrixContext(
+    sal_Int32 nElement, 
+    const AttributeList& rAttribs,
+    ShapeStyleRef& o_rStyle )
 {
+    o_rStyle.mnThemedIdx = (nElement == (NMSP_DRAWINGML|XML_fontRef)) ? 
+        rAttribs.getToken( XML_idx, XML_none ) : rAttribs.getInteger( XML_idx, 0 );
+    return new StyleMatrixReferenceContext( *this, 
+                                            o_rStyle.maPhClr );
 }
 
-DiagramQStylesFragmentHandler::~DiagramQStylesFragmentHandler( ) throw ()
+::oox::core::ContextWrapper DiagramQStylesFragmentHandler::onCreateContext( sal_Int32 nElement, 
+                                                                            const AttributeList& rAttribs )
 {
+    // state-table like way of navigating the color fragment. we
+    // currently ignore everything except styleLbl in the colorsDef
+    // element
+    switch( getCurrentElement() )
+    {
+        case XML_ROOT_CONTEXT:
+            return nElement == (NMSP_DIAGRAM|XML_styleDef);
+        case NMSP_DIAGRAM|XML_styleDef:
+            return nElement == (NMSP_DIAGRAM|XML_styleLbl);
+        case NMSP_DIAGRAM|XML_styleLbl:
+            return nElement == (NMSP_DIAGRAM|XML_style);
+        case NMSP_DIAGRAM|XML_style:
+        {
+            switch( nElement )
+            {
+                case NMSP_DRAWINGML|XML_lnRef :     // CT_StyleMatrixReference
+                    return createStyleMatrixContext(nElement,rAttribs,
+                                                    maStyleEntry.maLineStyle);
+                case NMSP_DRAWINGML|XML_fillRef :   // CT_StyleMatrixReference
+                    return createStyleMatrixContext(nElement,rAttribs,
+                                                    maStyleEntry.maFillStyle);
+                case NMSP_DRAWINGML|XML_effectRef : // CT_StyleMatrixReference
+                    return createStyleMatrixContext(nElement,rAttribs,
+                                                    maStyleEntry.maEffectStyle);
+                case NMSP_DRAWINGML|XML_fontRef :   // CT_FontRe    ference
+                    return createStyleMatrixContext(nElement,rAttribs,
+                                                    maStyleEntry.maTextStyle);
+            }
+            return false;
+        }
+    }
 
+    return false;
 }
 
-void SAL_CALL DiagramQStylesFragmentHandler::endDocument()
-	throw (SAXException, RuntimeException)
+void DiagramQStylesFragmentHandler::onStartElement( const AttributeList& rAttribs )
 {
-
+    if( getCurrentElement() == (NMSP_DIAGRAM|XML_styleLbl) )
+    {
+        maStyleName = rAttribs.getString( XML_name, OUString() );
+        maStyleEntry = mrStylesMap[maStyleName];
+    }
 }
 
-
-Reference< XFastContextHandler > SAL_CALL
-DiagramQStylesFragmentHandler::createFastChildContext( ::sal_Int32 aElement,
-													const Reference< XFastAttributeList >& )
-	throw ( SAXException, RuntimeException)
+void DiagramQStylesFragmentHandler::onEndElement( const ::rtl::OUString& )
 {
-	Reference< XFastContextHandler > xRet;
-
-	switch( aElement )
-	{
-	case NMSP_DIAGRAM|XML_styleDef:
-		// TODO
-		break;
-	default:
-		break;
-	}
-
-	if( !xRet.is() )
-        xRet = getFastContextHandler();
-
-	return xRet;
+    if( getCurrentElement() == (NMSP_DIAGRAM|XML_styleLbl) )
+        mrStylesMap[maStyleName] = maStyleEntry;
 }
 
-/////////////////////
-
-DiagramColorsFragmentHandler::DiagramColorsFragmentHandler( XmlFilterBase& rFilter,
-														const OUString& rFragmentPath,
-														const DiagramColorsPtr pDataPtr )
-	throw( )
-    : FragmentHandler( rFilter, rFragmentPath )
-	, mpDataPtr( pDataPtr )
-{
-}
+///////////////////////
 
-DiagramColorsFragmentHandler::~DiagramColorsFragmentHandler( ) throw ()
+ColorFragmentHandler::ColorFragmentHandler( ::oox::core::XmlFilterBase& rFilter,
+                                            const ::rtl::OUString& rFragmentPath,
+                                            DiagramColorMap& rColorsMap ) :
+    FragmentHandler2(rFilter,rFragmentPath),
+    maColorName(),
+    maColorEntry(),
+    mrColorsMap(rColorsMap)
+{}
+
+::oox::core::ContextWrapper ColorFragmentHandler::onCreateContext( sal_Int32 nElement, 
+                                                                   const AttributeList& /*rAttribs*/ )
 {
+    // state-table like way of navigating the color fragment. we
+    // currently ignore everything except styleLbl in the colorsDef
+    // element
+    switch( getCurrentElement() )
+    {
+        case XML_ROOT_CONTEXT:
+            return nElement == (NMSP_DIAGRAM|XML_colorsDef);
+        case NMSP_DIAGRAM|XML_colorsDef:
+            return nElement == (NMSP_DIAGRAM|XML_styleLbl);
+        case NMSP_DIAGRAM|XML_styleLbl:
+            return  (nElement == (NMSP_DIAGRAM|XML_fillClrLst)) ||
+                (nElement == (NMSP_DIAGRAM|XML_linClrLst)) ||
+                (nElement == (NMSP_DIAGRAM|XML_effectClrLst)) ||
+                (nElement == (NMSP_DIAGRAM|XML_txLinClrLst)) ||
+                (nElement == (NMSP_DIAGRAM|XML_txFillClrLst)) ||
+                (nElement == (NMSP_DIAGRAM|XML_txEffectClrLst));
+
+        // the actual colors - defer to color fragment handlers. 
+            
+        // TODO(F1): well, actually, there might be *several* color
+        // definitions in it, after all it's called list. but
+        // apparently colorChoiceContext doesn't handle that anyway...
+        case NMSP_DIAGRAM|XML_fillClrLst:
+            return new colorChoiceContext( *this, maColorEntry.maFillColor );
+        case NMSP_DIAGRAM|XML_linClrLst:
+            return new colorChoiceContext( *this, maColorEntry.maLineColor );
+        case NMSP_DIAGRAM|XML_effectClrLst:
+            return new colorChoiceContext( *this, maColorEntry.maEffectColor );
+        case NMSP_DIAGRAM|XML_txFillClrLst:
+            return new colorChoiceContext( *this, maColorEntry.maTextFillColor );
+        case NMSP_DIAGRAM|XML_txLinClrLst:
+            return new colorChoiceContext( *this, maColorEntry.maTextLineColor );
+        case NMSP_DIAGRAM|XML_txEffectClrLst:
+            return new colorChoiceContext( *this, maColorEntry.maTextEffectColor );
+    }
 
+    return false;
 }
 
-void SAL_CALL DiagramColorsFragmentHandler::endDocument()
-	throw (SAXException, RuntimeException)
+void ColorFragmentHandler::onStartElement( const AttributeList& rAttribs )
 {
-
+    if( getCurrentElement() == (NMSP_DIAGRAM|XML_styleLbl) )
+    {
+        maColorName = rAttribs.getString( XML_name, OUString() );
+        maColorEntry = mrColorsMap[maColorName];
+    }
 }
 
-
-Reference< XFastContextHandler > SAL_CALL
-DiagramColorsFragmentHandler::createFastChildContext( ::sal_Int32 aElement,
-													const Reference< XFastAttributeList >& )
-	throw ( SAXException, RuntimeException)
+void ColorFragmentHandler::onEndElement( const ::rtl::OUString& )
 {
-	Reference< XFastContextHandler > xRet;
-
-	switch( aElement )
-	{
-	case NMSP_DIAGRAM|XML_colorsDef:
-		// TODO
-		break;
-	default:
-		break;
-	}
-
-	if( !xRet.is() )
-        xRet = getFastContextHandler();
-
-	return xRet;
+    if( getCurrentElement() == (NMSP_DIAGRAM|XML_styleLbl) )
+        mrColorsMap[maColorName] = maColorEntry;
 }
 
-
-
-
 } }
diff --git oox/source/drawingml/diagram/diagramfragmenthandler.hxx oox/source/drawingml/diagram/diagramfragmenthandler.hxx
new file mode 100644
index 0000000..67bfbb2
--- /dev/null
+++ oox/source/drawingml/diagram/diagramfragmenthandler.hxx
@@ -0,0 +1,117 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: diagramfragmenthandler.hxx,v $
+ * $Revision: 1.4 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+
+#ifndef OOX_DRAWINGML_DIAGRAMFRAGMENTHANDLER
+#define OOX_DRAWINGML_DIAGRAMFRAGMENTHANDLER
+
+#include "oox/core/fragmenthandler.hxx"
+#include "oox/core/fragmenthandler2.hxx"
+#include "oox/drawingml/diagram/diagram.hxx"
+
+namespace oox { namespace drawingml {
+
+
+class DiagramDataFragmentHandler : public ::oox::core::FragmentHandler
+{
+public:
+    DiagramDataFragmentHandler( oox::core::XmlFilterBase& rFilter, const ::rtl::OUString& rFragmentPath, const DiagramDataPtr pDataPtr ) throw();
+	virtual ~DiagramDataFragmentHandler() throw();
+
+    virtual void SAL_CALL endDocument() throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
+    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastContextHandler > SAL_CALL createFastChildContext( ::sal_Int32 Element, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& Attribs ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
+
+private:
+
+	DiagramDataPtr	mpDataPtr;
+};
+
+
+
+class DiagramLayoutFragmentHandler : public ::oox::core::FragmentHandler
+{
+public:
+    DiagramLayoutFragmentHandler( oox::core::XmlFilterBase& rFilter, const ::rtl::OUString& rFragmentPath, const DiagramLayoutPtr pDataPtr ) throw();
+	virtual ~DiagramLayoutFragmentHandler() throw();
+
+    virtual void SAL_CALL endDocument() throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
+    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastContextHandler > SAL_CALL createFastChildContext( ::sal_Int32 Element, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& Attribs ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
+
+private:
+
+	DiagramLayoutPtr	mpDataPtr;
+};
+
+class DiagramQStylesFragmentHandler : public ::oox::core::FragmentHandler2
+{
+public:
+    DiagramQStylesFragmentHandler( 
+        oox::core::XmlFilterBase& rFilter, 
+        const ::rtl::OUString& rFragmentPath,
+        DiagramQStyleMap& rStylesMap );
+
+    virtual ::oox::core::ContextWrapper onCreateContext( sal_Int32 nElement, const AttributeList& rAttribs );
+
+    virtual void onStartElement( const AttributeList& rAttribs );
+    virtual void onEndElement( const ::rtl::OUString& rChars );
+
+private:
+    ::oox::core::ContextWrapper createStyleMatrixContext(sal_Int32 nElement, 
+                                                         const AttributeList& rAttribs,
+                                                         ShapeStyleRef& o_rStyle);
+
+    ::rtl::OUString   maStyleName;
+    DiagramStyle      maStyleEntry;
+	DiagramQStyleMap& mrStylesMap;
+};
+
+class ColorFragmentHandler : public ::oox::core::FragmentHandler2
+{
+public:
+    ColorFragmentHandler(
+        ::oox::core::XmlFilterBase& rFilter,
+        const ::rtl::OUString& rFragmentPath,
+        DiagramColorMap& rColorMap );
+
+    virtual ::oox::core::ContextWrapper onCreateContext( sal_Int32 nElement, const AttributeList& rAttribs );
+
+    virtual void onStartElement( const AttributeList& rAttribs );
+    virtual void onEndElement( const ::rtl::OUString& rChars );
+
+private:
+    ::rtl::OUString   maColorName;
+    DiagramColor      maColorEntry;
+    DiagramColorMap&  mrColorsMap;
+};
+
+} }
+
+
+#endif
diff --git oox/source/drawingml/diagram/diagramlayoutatoms.cxx oox/source/drawingml/diagram/diagramlayoutatoms.cxx
index 4b1d6e4..654c2c5 100644
--- oox/source/drawingml/diagram/diagramlayoutatoms.cxx
+++ oox/source/drawingml/diagram/diagramlayoutatoms.cxx
@@ -28,14 +28,24 @@
  *
  ************************************************************************/
 
-#include "oox/drawingml/diagram/diagramlayoutatoms.hxx"
+#include "diagramlayoutatoms.hxx"
 
 #include <functional>
 #include <boost/bind.hpp>
 
+#include <basegfx/numeric/ftools.hxx>
+
 #include "oox/helper/attributelist.hxx"
+#include "oox/drawingml/customshapeproperties.hxx"
+#include "oox/drawingml/fillproperties.hxx"
+#include "oox/drawingml/lineproperties.hxx"
+#include "oox/drawingml/textbody.hxx"
+#include "oox/drawingml/textparagraph.hxx"
+#include "oox/drawingml/textrun.hxx"
+#include "diagramlayoutatoms.hxx"
 #include "layoutnodecontext.hxx"
 
+using namespace ::com::sun::star;
 using namespace ::com::sun::star::uno;
 using namespace ::com::sun::star::xml::sax;
 using namespace ::oox::core;
@@ -45,7 +55,7 @@ namespace oox { namespace drawingml {
 
 IteratorAttr::IteratorAttr( )
     : mnAxis( 0 )
-	, mnCnt( 0 )
+	, mnCnt( -1 )
     , mbHideLastTrans( false )
     , mnPtType( 0 )
     , mnSt( 0 )
@@ -57,7 +67,7 @@ void IteratorAttr::loadFromXAttr( const Reference< XFastAttributeList >& xAttr )
 {
     AttributeList attr( xAttr );
     mnAxis = xAttr->getOptionalValueToken( XML_axis, 0 );
-	mnCnt = attr.getInteger( XML_cnt, 0 );
+	mnCnt = attr.getInteger( XML_cnt, -1 );
     mbHideLastTrans = attr.getBool( XML_hideLastTrans, false );
     mnPtType = xAttr->getOptionalValueToken( XML_ptType, 0 );
     mnSt = attr.getInteger( XML_st, 0 );
@@ -90,55 +100,803 @@ void LayoutAtom::dump(int level)
     OSL_TRACE( "level = %d - %s of type %s", level,
                OUSTRING_TO_CSTR( msName ),
                typeid(*this).name() );
-	std::for_each( mpChildNodes.begin(), mpChildNodes.end(),
-				  boost::bind( &LayoutAtom::dump, _1, level + 1 ) );
+    const std::vector<LayoutAtomPtr>& pChildren=getChildren();
+	std::for_each( pChildren.begin(), pChildren.end(),
+                   boost::bind( &LayoutAtom::dump, _1, level + 1 ) );
+}
+
+
+ForEachAtom::ForEachAtom(const Reference< XFastAttributeList >& xAttributes) 
+{
+    maIter.loadFromXAttr(xAttributes);
+}
+
+void ForEachAtom::accept( LayoutAtomVisitor& rVisitor )
+{
+    rVisitor.visit(*this);
 }
 
+void ChooseAtom::accept( LayoutAtomVisitor& rVisitor )
+{
+    rVisitor.visit(*this);
+}
 
-void ForEachAtom::processAtom()
+ConditionAtom::ConditionAtom(const Reference< XFastAttributeList >& xAttributes) : 
+    mbElse( false )
 {
-	// TODO there is likely some conditions
-	std::for_each( mpChildNodes.begin(), mpChildNodes.end(),
-				   boost::bind( &LayoutAtom::processAtom, _1 ) );
+    maIter.loadFromXAttr( xAttributes );
+    maCond.loadFromXAttr( xAttributes );
 }
 
-/** call ConditionAtom::test() if pAtom is one
- * if it is not a ConditionAtom, then return false.
- */
-static bool _test_atom( const LayoutAtomPtr & pAtom)
+const std::vector<LayoutAtomPtr>& ConditionAtom::getChildren() const
 {
-	try {
-		bool bResult = false;
-		const ConditionAtomPtr pCond = boost::dynamic_pointer_cast< ConditionAtom >(pAtom);
-		if( pCond )
-		{
-			bResult = pCond->test();
-		}
-		return bResult;
-	}
-	catch(...)
-	{
-	}
-	return false;
+    bool bDecisionVar=true;
+    // HACK
+    if( maCond.mnFunc==XML_var && maCond.mnArg==XML_dir && 
+        maCond.mnOp==XML_equ && !maCond.msVal.equalsAscii("norm") )
+        bDecisionVar=false;
+
+    if( bDecisionVar )
+        return mpChildNodes;
+    else
+        return mpElseChildNodes;
 }
 
-void ChooseAtom::processAtom()
+void ConditionAtom::accept( LayoutAtomVisitor& rVisitor )
 {
-	std::vector< LayoutAtomPtr >::iterator
-		iter = std::find_if( mpChildNodes.begin(), mpChildNodes.end(),
-							 boost::bind( &_test_atom, _1 ) );
-	if( iter != mpChildNodes.end() )
-	{
-		// TODO do something
-		(*iter)->processAtom();
-	}
+    rVisitor.visit(*this);
 }
 
-bool ConditionAtom::test()
+void ConditionAtom::addChild( const LayoutAtomPtr & pNode )
 {
-	// TODO
-	return false;
+    if( mbElse )
+        mpElseChildNodes.push_back( pNode ); 
+    else
+        mpChildNodes.push_back( pNode ); 
 }
 
+void ConstraintAtom::accept( LayoutAtomVisitor& rVisitor )
+{
+    rVisitor.visit(*this);
+}
+
+void AlgAtom::accept( LayoutAtomVisitor& rVisitor )
+{
+    rVisitor.visit(*this);
+}
+
+void AlgAtom::layoutShape( const ShapePtr& rShape, 
+                           const Diagram& rDgm,
+                           const rtl::OUString& rName ) const
+{
+    switch(mnType)
+    {
+        case XML_composite:
+        {
+            if( rShape->getChildren().empty() )
+            {
+                rShape->setSize(awt::Size(50,50));
+                break;
+            }
+
+            // just put stuff below each other
+            const sal_Int32 nIncX=0;
+            const sal_Int32 nIncY=1;
+
+            std::vector<ShapePtr>::const_iterator aCurrShape=rShape->getChildren().begin();
+            const std::vector<ShapePtr>::const_iterator aLastShape=rShape->getChildren().end();
+
+            // find biggest shape
+            awt::Size aMaxSize;
+            while( aCurrShape != aLastShape )
+            {
+                const awt::Size& sz=(*aCurrShape)->getSize();
+
+                aMaxSize.Width = std::max(
+                    aMaxSize.Width,
+                    sz.Width);
+                aMaxSize.Height = std::max(
+                    aMaxSize.Height,
+                    sz.Height);
+
+                ++aCurrShape;
+            }
+
+            aCurrShape=rShape->getChildren().begin();
+            const awt::Point aStartPos=(*aCurrShape)->getPosition();
+            awt::Point aCurrPos=aStartPos;
+            awt::Size  aTotalSize;
+            aTotalSize.Width = aMaxSize.Width;
+            while( aCurrShape != aLastShape )
+            {
+                const awt::Size& sz=(*aCurrShape)->getSize();
+                (*aCurrShape)->setPosition(aCurrPos);
+                (*aCurrShape)->setSize(
+                    awt::Size(aMaxSize.Width,
+                              sz.Height));
+
+                aTotalSize.Height = std::max(
+                    aTotalSize.Height,
+                    aCurrPos.Y + sz.Height);
+
+                aCurrPos.X += nIncX*sz.Width;
+                aCurrPos.Y += nIncY*sz.Height;
+
+                ++aCurrShape;
+            }
+
+            rShape->setSize(aTotalSize);
+            break;
+        }
+
+        case XML_conn:
+            break;
+
+        case XML_cycle:
+        {
+            if( rShape->getChildren().empty() )
+            {
+                rShape->setSize(awt::Size(50,50));
+                break;
+            }
+
+            const sal_Int32 nStartAngle=maMap.count(XML_stAng) ? maMap.find(XML_stAng)->second : 0;
+            const sal_Int32 nSpanAngle=maMap.count(XML_spanAng) ? maMap.find(XML_spanAng)->second : 360;
+
+            std::vector<ShapePtr>::const_iterator aCurrShape=rShape->getChildren().begin();
+            const std::vector<ShapePtr>::const_iterator aLastShape=rShape->getChildren().end();
+            const sal_Int32 nShapes=aLastShape-aCurrShape;
+
+            // find biggest shape
+            awt::Size aMaxSize;
+            while( aCurrShape != aLastShape )
+            {
+                const awt::Size& sz=(*aCurrShape)->getSize();
+
+                aMaxSize.Width = std::max(
+                    aMaxSize.Width,
+                    sz.Width);
+                aMaxSize.Height = std::max(
+                    aMaxSize.Height,
+                    sz.Height);
+
+                ++aCurrShape;
+            }
+
+            // layout shapes
+            const sal_Int32 nMaxDim=std::max(aMaxSize.Width,aMaxSize.Height);
+            awt::Size aTotalSize;
+            aCurrShape=rShape->getChildren().begin();
+            for( sal_Int32 i=0; i<nShapes; ++i, ++aCurrShape )
+            {
+                const awt::Size& sz=(*aCurrShape)->getSize();
+
+                const double r=nShapes*nMaxDim/F_2PI * 360.0/nSpanAngle;
+                const awt::Point aCurrPos(
+                    r + r*sin( (double(i)*nSpanAngle/nShapes + nStartAngle)*F_PI180 ),
+                    r - r*cos( (double(i)*nSpanAngle/nShapes + nStartAngle)*F_PI180 ) );
+                (*aCurrShape)->setPosition(aCurrPos);
+
+                aTotalSize.Width = std::max(
+                    aTotalSize.Width,
+                    aCurrPos.X + sz.Width);
+                aTotalSize.Height = std::max(
+                    aTotalSize.Height,
+                    aCurrPos.Y + sz.Height);
+            }
+
+            rShape->setSize(aTotalSize);
+            break;
+        }
+
+        case XML_hierChild:
+            // FALLTHROUGH intended
+        case XML_hierRoot:
+            // FALLTHROUGH intended
+        case XML_lin:
+        {
+            if( rShape->getChildren().empty() )
+            {
+                rShape->setSize(awt::Size(50,50));
+                break;
+            }
+
+            const sal_Int32 nDir=maMap.count(XML_linDir) ? maMap.find(XML_linDir)->second : XML_fromL;
+            const sal_Int32 nIncX=nDir==XML_fromL ? 1 : (nDir==XML_fromR ? -1 : 0);
+            const sal_Int32 nIncY=nDir==XML_fromT ? 1 : (nDir==XML_fromB ? -1 : 0);
+
+            std::vector<ShapePtr>::const_iterator aCurrShape=rShape->getChildren().begin();
+            const std::vector<ShapePtr>::const_iterator aLastShape=rShape->getChildren().end();
+            const awt::Point aStartPos=(*aCurrShape)->getPosition();
+            awt::Point aCurrPos=aStartPos;
+            awt::Size  aTotalSize;
+            while( aCurrShape != aLastShape )
+            {
+                const awt::Size& sz=(*aCurrShape)->getSize();
+                (*aCurrShape)->setPosition(aCurrPos);
+
+                aTotalSize.Width = std::max(
+                    aTotalSize.Width,
+                    aCurrPos.X + sz.Width);
+                aTotalSize.Height = std::max(
+                    aTotalSize.Height,
+                    aCurrPos.Y + sz.Height);
+
+                // HACK: the spacing is arbitrary
+                aCurrPos.X += nIncX*(sz.Width+5);
+                aCurrPos.Y += nIncY*(sz.Height+5);
+
+                ++aCurrShape;
+            }
+
+            rShape->setSize(aTotalSize);
+            break;
+        }
+
+        case XML_pyra:
+        {
+            if( rShape->getChildren().empty() )
+            {
+                rShape->setSize(awt::Size(50,50));
+                break;
+            }
+
+            std::vector<ShapePtr>::const_iterator aCurrShape=rShape->getChildren().begin();
+            const std::vector<ShapePtr>::const_iterator aLastShape=rShape->getChildren().end();
+            const sal_Int32 nShapes=aLastShape-aCurrShape;
+
+            // find biggest shape
+            awt::Size aMaxSize;
+            while( aCurrShape != aLastShape )
+            {
+                const awt::Size& sz=(*aCurrShape)->getSize();
+
+                aMaxSize.Width = std::max(
+                    aMaxSize.Width,
+                    sz.Width);
+                aMaxSize.Height = std::max(
+                    aMaxSize.Height,
+                    sz.Height);
+
+                ++aCurrShape;
+            }
+
+            // calc levels of pyramid - number of elements is one more
+            // per row, so total number is
+            // n=height(height+1)/2. Solving for height (and not
+            // filling the last row completely):
+            //
+            // height=ceil( sqrt(0.25+2n) - 0.5 )
+            //
+            const sal_Int32 nHeight( ceil(sqrt(0.25+2*nShapes) - 0.5) );
+
+            // layout shapes
+            awt::Size aTotalSize;
+            aCurrShape=rShape->getChildren().begin();
+            for( sal_Int32 i=0, nLevel=0, k=0; i<nShapes; ++i, ++aCurrShape )
+            {
+                const awt::Size& sz=(*aCurrShape)->getSize();
+
+                const awt::Point aCurrPos(
+                    aMaxSize.Width*(nHeight - nLevel)/2 + k*aMaxSize.Width,
+                    aMaxSize.Height*nLevel );
+                (*aCurrShape)->setPosition(aCurrPos);
+
+                aTotalSize.Width = std::max(
+                    aTotalSize.Width,
+                    aCurrPos.X + sz.Width);
+                aTotalSize.Height = std::max(
+                    aTotalSize.Height,
+                    aCurrPos.Y + sz.Height);
+
+                ++k;
+                if( k > nLevel )
+                {
+                    k=0; ++nLevel;
+                }
+            }
+
+            rShape->setSize(aTotalSize);
+            break;
+        }
+    
+        case XML_snake:
+        {
+            if( rShape->getChildren().empty() )
+            {
+                rShape->setSize(awt::Size(50,50));
+                break;
+            }
+
+            std::vector<ShapePtr>::const_iterator aCurrShape=rShape->getChildren().begin();
+            const std::vector<ShapePtr>::const_iterator aLastShape=rShape->getChildren().end();
+            const sal_Int32 nShapes=aLastShape-aCurrShape;
+
+            // find biggest shape
+            awt::Size aMaxSize;
+            while( aCurrShape != aLastShape )
+            {
+                const awt::Size& sz=(*aCurrShape)->getSize();
+
+                aMaxSize.Width = std::max(
+                    aMaxSize.Width,
+                    sz.Width);
+                aMaxSize.Height = std::max(
+                    aMaxSize.Height,
+                    sz.Height);
+
+                ++aCurrShape;
+            }
+
+            // assume square snake, leave last row partially filled: 
+            //
+            // nRows or nCols=ceil( sqrt(nShapes) )
+            //
+            const sal_Int32 nShapesPerDimension( ceil(sqrt(nShapes)) );
+
+            // layout shapes
+            awt::Size aTotalSize;
+            aCurrShape=rShape->getChildren().begin();
+            for( sal_Int32 i=0, nRow=0, nCol=0; i<nShapes; ++i, ++aCurrShape )
+            {
+                const awt::Size& sz=(*aCurrShape)->getSize();
+
+                const awt::Point aCurrPos(
+                    nRow % 2 ? 
+                    (nShapesPerDimension-nCol)*aMaxSize.Width :
+                    nCol*aMaxSize.Width,
+                    aMaxSize.Height*nRow );
+                (*aCurrShape)->setPosition(aCurrPos);
+
+                aTotalSize.Width = std::max(
+                    aTotalSize.Width,
+                    aCurrPos.X + sz.Width);
+                aTotalSize.Height = std::max(
+                    aTotalSize.Height,
+                    aCurrPos.Y + sz.Height);
+
+                ++nCol;
+                if( nCol >= nShapesPerDimension )
+                {
+                    nCol=0; ++nRow;
+                }
+            }
+
+            rShape->setSize(aTotalSize);
+            break;
+        }
+
+        case XML_sp:
+            // HACK. Handled one level higher. Or rather, planned to
+            break;
+
+        case XML_tx:
+        {
+            TextBodyPtr pTextBody=rShape->getTextBody();
+            if( !pTextBody ||
+                pTextBody->getParagraphs().empty() ||
+                pTextBody->getParagraphs().front()->getRuns().empty() )
+            {
+                rShape->setSize(awt::Size(5,5));
+                break;
+            }
+
+            // HACK - count chars & paragraphs to come up with *some*
+            // notion of necessary size
+            const sal_Int32 nHackyFontHeight=50;
+            const sal_Int32 nHackyFontWidth=20;
+            awt::Size aTotalSize;
+            for( sal_Int32 nPara=0; nPara<pTextBody->getParagraphs().size(); ++nPara )
+            {
+                aTotalSize.Height += nHackyFontHeight;
+
+                sal_Int32 nLocalWidth=0;
+                for( sal_Int32 nRun=0; nRun<pTextBody->getParagraphs().at(nPara)->getRuns().size(); ++nRun )
+                    nLocalWidth += 
+                        pTextBody->getParagraphs().at(nPara)->getRuns().at(nRun)->getText().getLength() 
+                        * nHackyFontWidth;
+
+                aTotalSize.Width = std::max(
+                    aTotalSize.Width,
+                    nLocalWidth);
+            }
+
+            rShape->setSize(aTotalSize);
+        }
+
+        default:
+            break;
+    }
+
+    OSL_TRACE("Layouting shape %s: (%d,%d,%d,%d)",
+              OUSTRING_TO_CSTR( rName ),
+              rShape->getPosition().X,
+              rShape->getPosition().Y,
+              rShape->getSize().Width,
+              rShape->getSize().Height);
+}
+
+void LayoutNode::accept( LayoutAtomVisitor& rVisitor )
+{
+    rVisitor.visit(*this);
+}
+
+bool LayoutNode::setupShape( const ShapePtr& rShape, const Diagram& rDgm, sal_Int32 nIdx ) const
+{
+    // find the data node to grab text from
+    DiagramData::PointsNameMap::const_iterator aDataNode=rDgm.getData()->getPointsPresNameMap().find(msName);
+    if( aDataNode->second.size() > nIdx &&
+        aDataNode != rDgm.getData()->getPointsPresNameMap().end() )
+    {
+        OSL_TRACE( "Filling content from %d th layout node named \"%s\", modelId \"%s\"", 
+                   nIdx,
+                   OUSTRING_TO_CSTR( msName ),
+                   OUSTRING_TO_CSTR( aDataNode->second.at(nIdx)->msModelId ) );
+        
+        // got the presentation node - now, need the actual data node:
+        const DiagramData::StringMap::const_iterator aNodeName=rDgm.getData()->getPresOfNameMap().find(
+            aDataNode->second.at(nIdx)->msModelId);
+        if( aNodeName != rDgm.getData()->getPresOfNameMap().end() )
+        {
+            DiagramData::StringMap::value_type::second_type::const_iterator aVecIter=aNodeName->second.begin();
+            const DiagramData::StringMap::value_type::second_type::const_iterator aVecEnd=aNodeName->second.end();
+            while( aVecIter != aVecEnd )
+            {
+                DiagramData::PointNameMap::const_iterator aDataNode2=rDgm.getData()->getPointNameMap().find(aVecIter->first);
+                if( aVecIter->second == 0 || aVecIter->second == -1 )
+                {
+                    // grab shape attr from topmost element(s)
+                    rShape->getShapeProperties() = aDataNode2->second->mpShape->getShapeProperties();
+                    rShape->getLineProperties() = aDataNode2->second->mpShape->getLineProperties();
+                    rShape->getFillProperties() = aDataNode2->second->mpShape->getFillProperties();
+                    rShape->getCustomShapeProperties() = aDataNode2->second->mpShape->getCustomShapeProperties();
+                    rShape->setMasterTextListStyle( aDataNode2->second->mpShape->getMasterTextListStyle() );
+
+                    OSL_TRACE( "Custom shape with preset type %s added for layout node named \"%s\"", 
+                               OUSTRING_TO_CSTR( 
+                                   rShape->getCustomShapeProperties()->getShapePresetType()),
+                               OUSTRING_TO_CSTR( msName ) );
+                }
+
+                // append text with right outline level
+                if( aDataNode2->second->mpShape->getTextBody() &&
+                    !aDataNode2->second->mpShape->getTextBody()->getParagraphs().empty() &&
+                    !aDataNode2->second->mpShape->getTextBody()->getParagraphs().front()->getRuns().empty() )
+                {
+                    TextBodyPtr pTextBody=rShape->getTextBody();
+                    if( !pTextBody )
+                    {
+                        pTextBody.reset( new TextBody() );
+
+                        // also copy text attrs
+                        pTextBody->getTextListStyle() = 
+                            aDataNode2->second->mpShape->getTextBody()->getTextListStyle();
+                        pTextBody->getTextProperties() = 
+                            aDataNode2->second->mpShape->getTextBody()->getTextProperties();
+
+                        rShape->setTextBody(pTextBody);
+                    }
+
+                    TextParagraph& rPara=pTextBody->addParagraph();
+                    if( aVecIter->second != -1 )
+                        rPara.getProperties().setLevel(aVecIter->second);
+
+                    rPara.addRun(
+                        aDataNode2->second->mpShape->getTextBody()->getParagraphs().front()->getRuns().front());
+                    rPara.getProperties().apply(
+                        aDataNode2->second->mpShape->getTextBody()->getParagraphs().front()->getProperties());
+                }
+
+                ++aVecIter;
+            }
+        }
+        else
+        {
+            OSL_TRACE("ShapeCreationVisitor::visit: no data node name found while processing shape type %s for layout node named \"%s\"", 
+                      OUSTRING_TO_CSTR( 
+                          rShape->getCustomShapeProperties()->getShapePresetType()),
+                      OUSTRING_TO_CSTR( msName ) );
+        }
+
+        // TODO(Q1): apply styling & coloring - taking
+        // layout node's styleLbl for both style & color
+        // now, but docs are a bit unclear on this
+        if( msStyleLabel.getLength() )
+        {
+            OSL_TRACE("setting style with label %s", 
+                      OUSTRING_TO_CSTR( msStyleLabel ) ); 
+
+            const DiagramQStyleMap::const_iterator aStyle=rDgm.getStyles().find(msStyleLabel);
+            if( aStyle != rDgm.getStyles().end() )
+            {
+                rShape->getShapeStyleRefs()[XML_fillRef] = aStyle->second.maFillStyle;
+                OSL_TRACE("added fill style with id %d", aStyle->second.maFillStyle.mnThemedIdx);
+                rShape->getShapeStyleRefs()[XML_lnRef] = aStyle->second.maLineStyle;
+                OSL_TRACE("added line style with id %d", aStyle->second.maLineStyle.mnThemedIdx);
+                rShape->getShapeStyleRefs()[XML_effectRef] = aStyle->second.maEffectStyle;
+                OSL_TRACE("added effect style with id %d", aStyle->second.maEffectStyle.mnThemedIdx);
+                rShape->getShapeStyleRefs()[XML_fontRef] = aStyle->second.maTextStyle;
+                OSL_TRACE("added fontref style with id %d", aStyle->second.maTextStyle.mnThemedIdx);
+                Color aColor=aStyle->second.maTextStyle.maPhClr;
+                OSL_TRACE("added fontref color with alpha %d", aColor.getTransparence() );
+            }
+
+            const DiagramColorMap::const_iterator aColor=rDgm.getColors().find(msStyleLabel);
+            if( aColor != rDgm.getColors().end() )
+            {
+                const DiagramColor& rColor=aColor->second;
+                if( rColor.maFillColor.isUsed() )
+                    rShape->getShapeStyleRefs()[XML_fillRef].maPhClr = rColor.maFillColor;
+                if( rColor.maLineColor.isUsed() )
+                    rShape->getShapeStyleRefs()[XML_lnRef].maPhClr = rColor.maLineColor;
+                if( rColor.maEffectColor.isUsed() )
+                    rShape->getShapeStyleRefs()[XML_effectRef].maPhClr = rColor.maEffectColor;
+                if( rColor.maTextFillColor.isUsed() )
+                    rShape->getShapeStyleRefs()[XML_fontRef].maPhClr = rColor.maTextFillColor;
+            }
+        }
+
+        // even if no data node found, successful anyway. it's
+        // contained at the layoutnode
+        return true;
+    }
+    else
+    {
+        OSL_TRACE("ShapeCreationVisitor::visit: no text found while processing shape type %s for layout node named \"%s\"", 
+                  OUSTRING_TO_CSTR( 
+                      rShape->getCustomShapeProperties()->getShapePresetType()),
+                  OUSTRING_TO_CSTR( msName ) );
+    }
+
+    return false;
+}
+
+///////////////////////////////////////////////////////////////////////
+//
+// Visitation
+//
+
+class ShapeLayoutingVisitor : public LayoutAtomVisitor
+{
+    ShapePtr mpParentShape;
+    const Diagram& mrDgm;
+    rtl::OUString maName;
+
+    virtual void visit(ConstraintAtom& rAtom);
+    virtual void visit(AlgAtom& rAtom);
+    virtual void visit(ForEachAtom& rAtom);
+    virtual void visit(ConditionAtom& rAtom);
+    virtual void visit(ChooseAtom& rAtom);
+    virtual void visit(LayoutNode& rAtom);
+
+public:
+    ShapeLayoutingVisitor(const ShapePtr& rParentShape, 
+                          const Diagram& rDgm,
+                          const rtl::OUString& rName) :
+        mpParentShape(rParentShape),
+        mrDgm(rDgm),
+        maName(rName)
+    {}
+
+    void defaultVisit(LayoutAtom& rAtom);
+};
+
+class ShallowPresNameVisitor : public LayoutAtomVisitor
+{
+    const Diagram& mrDgm;
+    size_t mnCnt;
+
+    void defaultVisit(LayoutAtom& rAtom);
+    virtual void visit(ConstraintAtom& rAtom);
+    virtual void visit(AlgAtom& rAtom);
+    virtual void visit(ForEachAtom& rAtom);
+    virtual void visit(ConditionAtom& rAtom);
+    virtual void visit(ChooseAtom& rAtom);
+    virtual void visit(LayoutNode& rAtom);
+
+public:
+    ShallowPresNameVisitor(const Diagram& rDgm) :
+        mrDgm(rDgm),
+        mnCnt(0)
+    {}
+
+    size_t getCount() const 
+        { return mnCnt; }
+};
+
+void ShapeCreationVisitor::defaultVisit(LayoutAtom& rAtom)
+{
+    const std::vector<LayoutAtomPtr>& pChildren=rAtom.getChildren();
+    std::for_each( pChildren.begin(), pChildren.end(),
+                   boost::bind( &LayoutAtom::accept, 
+                                _1,
+                                boost::ref(*this)) );
+}
+
+void ShapeCreationVisitor::visit(ConstraintAtom& /*rAtom*/)
+{
+    // TODO: eval the constraints
+}
+
+void ShapeCreationVisitor::visit(AlgAtom& rAtom)
+{
+    defaultVisit(rAtom);
+}
+
+void ShapeCreationVisitor::visit(ForEachAtom& rAtom)
+{
+    const std::vector<LayoutAtomPtr>& pChildren=rAtom.getChildren();
+
+    sal_Int32 nChildren=1;
+    if( rAtom.iterator().mnPtType == XML_node )
+    {
+        // cound child data nodes - check all child Atoms for "name"
+        // attribute that is contained in diagram's
+        // getPointsPresNameMap()
+        ShallowPresNameVisitor aVisitor(mrDgm);
+        std::for_each( pChildren.begin(), pChildren.end(),
+                       boost::bind( &LayoutAtom::accept,
+                                    _1,
+                                    boost::ref(aVisitor)) );
+        nChildren = aVisitor.getCount();
+    }
+    
+    const sal_Int32 nCnt = std::min(
+        nChildren,
+        rAtom.iterator().mnCnt==-1 ? nChildren : rAtom.iterator().mnCnt);
+
+    const sal_Int32 nOldIdx=mnCurrIdx;
+    const sal_Int32 nStep=rAtom.iterator().mnStep;
+    for( mnCurrIdx=0; mnCurrIdx<nCnt && nStep>0; mnCurrIdx+=nStep )
+    {
+        // TODO there is likely some conditions
+        std::for_each( pChildren.begin(), pChildren.end(),
+                       boost::bind( &LayoutAtom::accept,
+                                    _1,
+                                    boost::ref(*this)) );
+    }
+
+    // and restore idx
+    mnCurrIdx = nOldIdx;
+}
+
+void ShapeCreationVisitor::visit(ConditionAtom& rAtom)
+{
+    defaultVisit(rAtom);
+}
+
+void ShapeCreationVisitor::visit(ChooseAtom& rAtom)
+{
+    defaultVisit(rAtom);
+}
+
+void ShapeCreationVisitor::visit(LayoutNode& rAtom)
+{
+    ShapePtr pCurrParent(mpParentShape);
+    ShapePtr pCurrShape(rAtom.getShape());
+    if( pCurrShape )
+    {
+        OSL_TRACE("ShapeCreationVisitor::visit: processing shape type %s",
+                  OUSTRING_TO_CSTR(
+                      pCurrShape->getCustomShapeProperties()->getShapePresetType()) );
+
+        // TODO(F3): cloned shape shares all properties by reference,
+        // don't change them!
+        ShapePtr pClonedShape(
+            new Shape( pCurrShape ));
+
+        if( rAtom.setupShape(pClonedShape, mrDgm, mnCurrIdx) )
+        {
+            pCurrParent->addChild(pClonedShape);
+            pCurrParent = pClonedShape;
+        }
+    }
+    else
+    {
+        OSL_TRACE("ShapeCreationVisitor::visit: no shape set while processing layoutnode named %s",
+                  OUSTRING_TO_CSTR( rAtom.getName() ) );
+    }
+
+    // set new parent for children
+    ShapePtr pPreviousParent(mpParentShape);
+    mpParentShape=pCurrParent;
+
+    // process children
+    defaultVisit(rAtom);
+
+    // restore parent
+    mpParentShape=pPreviousParent;
+
+    // layout shapes - now all child shapes are created
+    ShapeLayoutingVisitor aLayoutingVisitor(pCurrParent, 
+                                            mrDgm,
+                                            rAtom.getName());
+    aLayoutingVisitor.defaultVisit(rAtom);
+}
+
+void ShapeLayoutingVisitor::defaultVisit(LayoutAtom& rAtom)
+{
+    // visit all children, one of them need to be the layout algoritm
+    const std::vector<LayoutAtomPtr>& pChildren=rAtom.getChildren();
+    std::for_each( pChildren.begin(), pChildren.end(),
+                   boost::bind( &LayoutAtom::accept, 
+                                _1,
+                                boost::ref(*this)) );
+}
+
+void ShapeLayoutingVisitor::visit(ConstraintAtom& rAtom)
+{
+    // stop processing
+}
+
+void ShapeLayoutingVisitor::visit(AlgAtom& rAtom)
+{
+    rAtom.layoutShape(mpParentShape,mrDgm,maName);
+}
+
+void ShapeLayoutingVisitor::visit(ForEachAtom& rAtom)
+{
+    // stop processing
+}
+
+void ShapeLayoutingVisitor::visit(ConditionAtom& rAtom)
+{
+    defaultVisit(rAtom);
+}
+
+void ShapeLayoutingVisitor::visit(ChooseAtom& rAtom)
+{
+    defaultVisit(rAtom);
+}
+
+void ShapeLayoutingVisitor::visit(LayoutNode& rAtom)
+{
+    // stop processing - only traverse Condition/Choose atoms
+}
+
+void ShallowPresNameVisitor::defaultVisit(LayoutAtom& rAtom)
+{
+    // visit all children, at least one of them needs to have proper
+    // name set
+    const std::vector<LayoutAtomPtr>& pChildren=rAtom.getChildren();
+    std::for_each( pChildren.begin(), pChildren.end(),
+                   boost::bind( &LayoutAtom::accept, 
+                                _1,
+                                boost::ref(*this)) );
+}
+
+void ShallowPresNameVisitor::visit(ConstraintAtom& rAtom)
+{
+    // stop processing
+}
+
+void ShallowPresNameVisitor::visit(AlgAtom& rAtom)
+{
+    // stop processing
+}
+
+void ShallowPresNameVisitor::visit(ForEachAtom& rAtom)
+{
+    defaultVisit(rAtom);
+}
+
+void ShallowPresNameVisitor::visit(ConditionAtom& rAtom)
+{
+    defaultVisit(rAtom);
+}
+
+void ShallowPresNameVisitor::visit(ChooseAtom& rAtom)
+{
+    defaultVisit(rAtom);
+}
+
+void ShallowPresNameVisitor::visit(LayoutNode& rAtom)
+{
+    DiagramData::PointsNameMap::const_iterator aDataNode=
+        mrDgm.getData()->getPointsPresNameMap().find(rAtom.getName());
+    if( aDataNode != mrDgm.getData()->getPointsPresNameMap().end() )
+        mnCnt = std::max(mnCnt,
+                         aDataNode->second.size());
+}
 
 } }
diff --git oox/source/drawingml/diagram/diagramlayoutatoms.hxx oox/source/drawingml/diagram/diagramlayoutatoms.hxx
new file mode 100644
index 0000000..ae9e7c3
--- /dev/null
+++ oox/source/drawingml/diagram/diagramlayoutatoms.hxx
@@ -0,0 +1,318 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: diagramlayoutatoms.hxx,v $
+ * $Revision: 1.3 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef OOX_DRAWINGML_DIAGRAMLAYOUTATOMS_HXX
+#define OOX_DRAWINGML_DIAGRAMLAYOUTATOMS_HXX
+
+#include <map>
+#include <string>
+
+#include <boost/shared_ptr.hpp>
+#include <boost/array.hpp>
+
+#include <com/sun/star/uno/Any.hxx>
+#include <com/sun/star/xml/sax/XFastAttributeList.hpp>
+
+#include "oox/drawingml/shape.hxx"
+#include "diagram.hxx"
+
+
+namespace oox { namespace drawingml {
+
+class DiagramLayout;
+typedef boost::shared_ptr< DiagramLayout > DiagramLayoutPtr;
+
+// AG_IteratorAttributes
+struct IteratorAttr
+{
+	IteratorAttr();
+
+	// not sure this belong here, but wth
+	void loadFromXAttr( const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& xAttributes );
+
+	sal_Int32 mnAxis;
+	sal_Int32 mnCnt;
+	sal_Bool  mbHideLastTrans;
+	sal_Int32 mnPtType;
+	sal_Int32 mnSt;
+	sal_Int32 mnStep;
+};
+
+struct ConditionAttr
+{
+	ConditionAttr();
+
+	// not sure this belong here, but wth
+	void loadFromXAttr( const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& xAttributes );
+
+	sal_Int32 mnFunc;
+	sal_Int32 mnArg;
+	sal_Int32 mnOp;
+	::rtl::OUString msVal;
+};
+
+struct LayoutAtomVisitor;
+class LayoutAtom;
+
+typedef boost::shared_ptr< LayoutAtom > LayoutAtomPtr;
+
+/** abstract Atom for the layout */
+class LayoutAtom
+{
+public:
+	/** visitor acceptance
+     */
+	virtual void accept( LayoutAtomVisitor& ) = 0;
+
+	void setName( const ::rtl::OUString& sName )
+		{ msName = sName; }
+	const ::rtl::OUString& getName() const
+		{ return msName; }
+
+	virtual void addChild( const LayoutAtomPtr & pNode )
+		{ mpChildNodes.push_back( pNode ); }
+    virtual const std::vector<LayoutAtomPtr>& getChildren() const 
+        { return mpChildNodes; }
+
+	// dump for debug
+	void dump(int level = 0);
+protected:
+    std::vector< LayoutAtomPtr > mpChildNodes;
+    ::rtl::OUString              msName;
+};
+
+class ConstraintAtom
+	: public LayoutAtom
+{
+public:
+    ConstraintAtom() :
+        mnFor(-1), msForName(), mnPointType(-1), mnType(-1), mnRefFor(-1), msRefForName(),
+        mnRefType(-1), mnRefPointType(-1), mfFactor(1.0), mfValue(0.0), mnOperator(0)
+    {}
+
+	virtual void accept( LayoutAtomVisitor& );
+
+	void setFor( sal_Int32 nToken )
+		{ mnFor = nToken; }
+	void setForName( const ::rtl::OUString & sName )
+		{ msForName = sName; }
+	void setPointType( sal_Int32 nToken )
+		{ mnPointType = nToken; }
+	void setType( sal_Int32 nToken )
+		{ mnType = nToken; }
+	void setRefFor( sal_Int32 nToken )
+		{ mnRefFor = nToken; }
+	void setRefForName( const ::rtl::OUString & sName )
+		{ msRefForName = sName; }
+	void setRefType( sal_Int32 nToken )
+		{ mnRefType = nToken; }
+	void setRefPointType( sal_Int32 nToken )
+		{ mnRefPointType = nToken; }
+	void setFactor( const double& fVal )
+		{ mfFactor = fVal; }
+	void setValue( const double& fVal )
+		{ mfValue = fVal; }
+	void setOperator( sal_Int32 nToken )
+		{ mnOperator = nToken; }
+private:
+    sal_Int32 mnFor;
+    ::rtl::OUString msForName;
+	sal_Int32 mnPointType;
+	sal_Int32 mnType;
+	sal_Int32 mnRefFor;
+	::rtl::OUString msRefForName;
+	sal_Int32 mnRefType;
+	sal_Int32 mnRefPointType;
+	double mfFactor;
+	double mfValue;
+	sal_Int32 mnOperator;
+};
+
+typedef boost::shared_ptr< ConstraintAtom > ConstraintAtomPtr;
+
+class AlgAtom
+	: public LayoutAtom
+{
+public:
+    AlgAtom() : mnType(0), maMap() {}
+
+    typedef std::map<sal_Int32,sal_Int32> ParamMap;
+
+	virtual void accept( LayoutAtomVisitor& );
+
+	void setType( sal_Int32 nToken )
+		{ mnType = nToken; }
+	void addParam( sal_Int32 nType, sal_Int32 nVal )
+        { maMap[nType]=nVal; }
+    void layoutShape( const ShapePtr& rShape, 
+                      const Diagram& rDgm,
+                      const rtl::OUString& rName ) const;
+private:
+	sal_Int32 mnType;
+    ParamMap  maMap;
+};
+
+typedef boost::shared_ptr< AlgAtom > AlgAtomPtr;
+
+class ForEachAtom
+	: public LayoutAtom
+{
+public:
+    explicit ForEachAtom(const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& xAttributes);
+	
+	IteratorAttr & iterator()
+		{ return maIter; }
+	virtual void accept( LayoutAtomVisitor& );
+
+private:
+	IteratorAttr maIter;
+};
+
+typedef boost::shared_ptr< ForEachAtom > ForEachAtomPtr;
+
+
+class ConditionAtom
+	: public LayoutAtom
+{
+public:
+    explicit ConditionAtom(const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& xAttributes);
+	bool test();
+	virtual void accept( LayoutAtomVisitor& );
+	IteratorAttr & iterator()
+		{ return maIter; }
+	ConditionAttr & cond()
+		{ return maCond; }
+    void readElseBranch() 
+		{ mbElse=true; }
+    virtual void addChild( const LayoutAtomPtr & pNode );
+    virtual const std::vector<LayoutAtomPtr>& getChildren() const;
+private:
+	bool          mbElse;
+	IteratorAttr  maIter;
+	ConditionAttr maCond;
+    std::vector< LayoutAtomPtr > mpElseChildNodes;
+};
+
+typedef boost::shared_ptr< ConditionAtom > ConditionAtomPtr;
+
+
+/** "choose" statements. Atoms will be tested in order. */
+class ChooseAtom
+	: public LayoutAtom
+{
+public:
+	virtual void accept( LayoutAtomVisitor& );
+};
+
+class LayoutNode
+	: public LayoutAtom
+{
+public:
+	enum {
+		VAR_animLvl = 0,
+		VAR_animOne,
+		VAR_bulletEnabled,
+		VAR_chMax,
+		VAR_chPref,
+		VAR_dir,
+		VAR_hierBranch,
+		VAR_orgChart,
+		VAR_resizeHandles
+	};
+	// we know that the array is of fixed size
+	// the use of Any allow having empty values
+	typedef boost::array< ::com::sun::star::uno::Any, 9 > VarMap;
+
+    LayoutNode() : mnChildOrder(0) {}
+	virtual void accept( LayoutAtomVisitor& );
+	VarMap & variables()
+		{ return mVariables; }
+	void setMoveWith( const ::rtl::OUString & sName )
+		{ msMoveWith = sName; }
+	void setStyleLabel( const ::rtl::OUString & sLabel )
+		{ msStyleLabel = sLabel; }
+	void setChildOrder( sal_Int32 nOrder )
+		{ mnChildOrder = nOrder; }
+	void setShape( const ShapePtr& pShape )
+		{ mpShape = pShape; }
+    const ShapePtr& getShape() const
+        { return mpShape; }
+
+    bool setupShape( const ShapePtr& rShape,
+                     const Diagram& rDgm,
+                     sal_Int32 nIdx ) const;
+
+private:
+    VarMap                       mVariables;
+    ::rtl::OUString              msMoveWith;
+    ::rtl::OUString              msStyleLabel;
+    ShapePtr                     mpShape;
+    sal_Int32                    mnChildOrder;
+};
+
+typedef boost::shared_ptr< LayoutNode > LayoutNodePtr;
+
+struct LayoutAtomVisitor
+{
+    virtual ~LayoutAtomVisitor() {}
+    virtual void visit(ConstraintAtom& rAtom) = 0;
+    virtual void visit(AlgAtom& rAtom) = 0;
+    virtual void visit(ForEachAtom& rAtom) = 0;
+    virtual void visit(ConditionAtom& rAtom) = 0;
+    virtual void visit(ChooseAtom& rAtom) = 0;
+    virtual void visit(LayoutNode& rAtom) = 0;
+};
+
+class ShapeCreationVisitor : public LayoutAtomVisitor
+{
+    ShapePtr mpParentShape;
+    const Diagram& mrDgm;
+    sal_Int32 mnCurrIdx;
+
+    void defaultVisit(LayoutAtom& rAtom);
+    virtual void visit(ConstraintAtom& rAtom);
+    virtual void visit(AlgAtom& rAtom);
+    virtual void visit(ForEachAtom& rAtom);
+    virtual void visit(ConditionAtom& rAtom);
+    virtual void visit(ChooseAtom& rAtom);
+    virtual void visit(LayoutNode& rAtom);
+
+public:
+    ShapeCreationVisitor(const ShapePtr& rParentShape,
+                         const Diagram& rDgm) :
+        mpParentShape(rParentShape),
+        mrDgm(rDgm),
+        mnCurrIdx(0)
+    {}
+};
+
+} }
+
+#endif
diff --git oox/source/drawingml/diagram/layoutnodecontext.cxx oox/source/drawingml/diagram/layoutnodecontext.cxx
index 40d0245..81c6ed7 100644
--- oox/source/drawingml/diagram/layoutnodecontext.cxx
+++ oox/source/drawingml/diagram/layoutnodecontext.cxx
@@ -35,7 +35,9 @@
 #include "oox/core/namespaces.hxx"
 #include "oox/drawingml/diagram/diagram.hxx"
 #include "oox/drawingml/shapecontext.hxx"
+#include "oox/drawingml/customshapeproperties.hxx"
 #include "diagramdefinitioncontext.hxx"
+#include "constraintlistcontext.hxx"
 
 using namespace ::oox::core;
 using namespace ::com::sun::star::uno;
@@ -50,15 +52,9 @@ class IfContext
 public:
     IfContext( ContextHandler& rParent,
                const Reference< XFastAttributeList >& xAttribs,
-			   const LayoutAtomPtr & pNode )
-        : LayoutNodeContext( rParent, xAttribs, pNode )
-		{
-			ConditionAtomPtr pAtom( boost::dynamic_pointer_cast< ConditionAtom >(pNode) );
-			OSL_ENSURE( pAtom, "Must pass a ConditionAtom" );
-
-			pAtom->iterator().loadFromXAttr( xAttribs );
-			pAtom->cond().loadFromXAttr( xAttribs );
-		}
+			   const ConditionAtomPtr& pAtom )
+        : LayoutNodeContext( rParent, xAttribs, pAtom )
+    {}
 };
 
 
@@ -67,21 +63,47 @@ class AlgorithmContext
     : public ContextHandler
 {
 public:
-    AlgorithmContext( ContextHandler& rParent, const Reference< XFastAttributeList >& xAttribs, const LayoutAtomPtr & pNode )
+    AlgorithmContext( ContextHandler& rParent, const Reference< XFastAttributeList >& xAttribs, const AlgAtomPtr & pNode )
         : ContextHandler( rParent )
         , mnRevision( 0 )
-		, mnType( 0 )
         , mpNode( pNode )
         {
             AttributeList aAttribs( xAttribs );
             mnRevision = aAttribs.getInteger( XML_rev, 0 );
-			mnType = xAttribs->getOptionalValueToken( XML_type, 0 );
+            pNode->setType(xAttribs->getOptionalValueToken(XML_type, 0));
+		}
+
+	virtual Reference< XFastContextHandler > SAL_CALL
+	createFastChildContext( ::sal_Int32 aElement,
+							const Reference< XFastAttributeList >& xAttribs )
+		throw (SAXException, RuntimeException)
+		{
+			Reference< XFastContextHandler > xRet;
+
+			switch( getToken(aElement) )
+			{
+                case XML_param:
+                {
+                    AttributeList aAttribs( xAttribs );
+                    const sal_Int32 nValTok=aAttribs.getToken( XML_val, 0 );
+                    mpNode->addParam(
+                        aAttribs.getToken( XML_type, 0 ),
+                        nValTok>0 ? nValTok : aAttribs.getInteger( XML_val, 0 ) );
+                    break;
+                }
+                default:
+                    break;
+			}
+
+			if( !xRet.is() )
+				xRet.set(this);
+
+			return xRet;
         }
 
 private:
-	sal_Int32     mnRevision;
-	sal_Int32     mnType;
-	LayoutAtomPtr mpNode;
+	sal_Int32  mnRevision;
+	AlgAtomPtr mpNode;
 };
 
 
@@ -91,7 +113,6 @@ class ChooseContext
 public:
     ChooseContext( ContextHandler& rParent, const Reference< XFastAttributeList >& xAttribs, const LayoutAtomPtr & pNode )
         : ContextHandler( rParent )
-		, mbHasElse( false )
         , mpNode( pNode )
         {
             msName = xAttribs->getOptionalValue( XML_name );
@@ -104,24 +125,23 @@ public:
         {
             Reference< XFastContextHandler > xRet;
 
-			switch( aElement )
+			switch( getToken(aElement) )
             {
             case XML_if:
             {
                 // CT_When
-				LayoutAtomPtr pAtom( new ConditionAtom( false ) );
-				mpNode->addChild( pAtom );
-                xRet.set( new IfContext( *this, xAttribs, pAtom ) );
+				mpConditionNode.reset( new ConditionAtom(xAttribs) );
+				mpNode->addChild( mpConditionNode );
+                xRet.set( new IfContext( *this, xAttribs, mpConditionNode ) );
                 break;
             }
             case XML_else:
                 // CT_Otherwise
-				if( !mbHasElse )
+				if( mpConditionNode )
                 {
-					LayoutAtomPtr pAtom( new ConditionAtom( true ) );
-					mpNode->addChild( pAtom );
-                    xRet.set( new IfContext( *this, xAttribs, pAtom ) );
-					mbHasElse = true;
+                    mpConditionNode->readElseBranch();
+                    xRet.set( new IfContext( *this, xAttribs, mpConditionNode ) );
+                    mpConditionNode.reset();
                 }
                 else
                 {
@@ -138,9 +158,9 @@ public:
             return xRet;
         }
 private:
-	bool     mbHasElse;
     OUString msName;
     LayoutAtomPtr mpNode;
+	ConditionAtomPtr mpConditionNode;
 };
 
 
@@ -150,13 +170,10 @@ class ForEachContext
     : public LayoutNodeContext
 {
 public:
-    ForEachContext( ContextHandler& rParent, const Reference< XFastAttributeList >& xAttribs, const LayoutAtomPtr & pNode )
-        : LayoutNodeContext( rParent, xAttribs, pNode )
+    ForEachContext( ContextHandler& rParent, const Reference< XFastAttributeList >& xAttribs, const ForEachAtomPtr& pAtom )
+        : LayoutNodeContext( rParent, xAttribs, pAtom )
         {
-			ForEachAtomPtr pAtom( boost::dynamic_pointer_cast< ForEachAtom >(pNode) );
-			OSL_ENSURE( pAtom, "Must pass a ForEachAtom" );
             xAttribs->getOptionalValue( XML_ref );
-
             pAtom->iterator().loadFromXAttr( xAttribs );
         }
 };
@@ -200,17 +217,12 @@ private:
 // CT_LayoutNode
 LayoutNodeContext::LayoutNodeContext( ContextHandler& rParent,
                                       const Reference< XFastAttributeList >& xAttribs,
-									  const LayoutAtomPtr &pNode )
+									  const LayoutAtomPtr& pAtom )
     : ContextHandler( rParent )
-	, mpNode( pNode )
+	, mpNode( pAtom )
 {
-	OSL_ENSURE( pNode, "Node must NOT be NULL" );
+	OSL_ENSURE( pAtom, "Node must NOT be NULL" );
     mpNode->setName( xAttribs->getOptionalValue( XML_name ) );
-	// TODO shall we even bother?
-	// b or t
-//	sal_Int32 nChOrder = xAttributes->getOptionalValueToken( XML_chOrder, XML_b );
-//	OUString sMoveWith = xAttributes->getOptionalValue( XML_moveWith );
-//	OUString sStyleLbl = xAttributes->getOptionalValue( XML_styleLbl );
 }
 
 
@@ -231,33 +243,33 @@ void SAL_CALL LayoutNodeContext::endFastElement( ::sal_Int32 )
 sal_Int32 LayoutNodeContext::tagToVarIdx( sal_Int32 aTag )
 {
     sal_Int32 nIdx = -1;
-	switch( aTag )
+	switch( aTag & ~NMSP_DIAGRAM )
     {
-	case NMSP_DIAGRAM|XML_animLvl:
+	case XML_animLvl:
         nIdx = LayoutNode::VAR_animLvl;
         break;
-	case NMSP_DIAGRAM|XML_animOne:
+	case XML_animOne:
         nIdx = LayoutNode::VAR_animOne;
         break;
-	case NMSP_DIAGRAM|XML_bulletEnabled:
+	case XML_bulletEnabled:
         nIdx = LayoutNode::VAR_bulletEnabled;
         break;
-	case NMSP_DIAGRAM|XML_chMax:
+	case XML_chMax:
         nIdx = LayoutNode::VAR_chMax;
         break;
-	case NMSP_DIAGRAM|XML_chPref:
+	case XML_chPref:
         nIdx = LayoutNode::VAR_chPref;
         break;
-	case NMSP_DIAGRAM|XML_dir:
+	case XML_dir:
         nIdx = LayoutNode::VAR_dir;
         break;
-	case NMSP_DIAGRAM|XML_hierBranch:
+	case XML_hierBranch:
         nIdx = LayoutNode::VAR_hierBranch;
         break;
-	case NMSP_DIAGRAM|XML_orgChart:
+	case XML_orgChart:
         nIdx = LayoutNode::VAR_orgChart;
         break;
-	case NMSP_DIAGRAM|XML_resizeHandles:
+	case XML_resizeHandles:
         nIdx = LayoutNode::VAR_resizeHandles;
         break;
     default:
@@ -280,13 +292,39 @@ LayoutNodeContext::createFastChildContext( ::sal_Int32 aElement,
     {
         LayoutNodePtr pNode( new LayoutNode() );
         mpNode->addChild( pNode );
+        pNode->setChildOrder( xAttribs->getOptionalValueToken( XML_chOrder, XML_b ) );
+        pNode->setMoveWith( xAttribs->getOptionalValue( XML_moveWith ) );
+        pNode->setStyleLabel( xAttribs->getOptionalValue( XML_styleLbl ) );
         xRet.set( new LayoutNodeContext( *this, xAttribs, pNode ) );
         break;
     }
     case NMSP_DIAGRAM|XML_shape:
     {
-		ShapePtr pShape( new Shape() );
-        xRet.set( new ShapeContext( *this, ShapePtr(), pShape ) );
+		LayoutNodePtr pNode( boost::dynamic_pointer_cast< LayoutNode >( mpNode ) );
+		if( pNode )
+        {
+            ShapePtr pShape;
+
+            if( xAttribs->hasAttribute( XML_type ) )
+            {
+                pShape.reset( new Shape("com.sun.star.drawing.CustomShape") );
+                const sal_Int32 nType(xAttribs->getOptionalValueToken( XML_type, XML_obj ));
+                pShape->setSubType( nType );
+                pShape->getCustomShapeProperties()->setShapePresetType( 
+                    GetShapePresetType( nType ) );
+            }
+            else
+            {
+                pShape.reset( new Shape("com.sun.star.drawing.GroupShape") );
+            }
+
+            pNode->setShape( pShape );
+            xRet.set( new ShapeContext( *this, ShapePtr(), pShape ) );
+        }
+		else
+		{
+			OSL_TRACE( "OOX: encountered a shape in a non layoutNode context" );
+		}
         break;
     }
     case NMSP_DIAGRAM|XML_extLst:
@@ -295,7 +333,7 @@ LayoutNodeContext::createFastChildContext( ::sal_Int32 aElement,
     case NMSP_DIAGRAM|XML_alg:
     {
         // CT_Algorithm
-		LayoutAtomPtr pAtom( new AlgAtom );
+		AlgAtomPtr pAtom( new AlgAtom );
         mpNode->addChild( pAtom );
         xRet.set( new AlgorithmContext( *this, xAttribs, pAtom ) );
         break;
@@ -311,14 +349,14 @@ LayoutNodeContext::createFastChildContext( ::sal_Int32 aElement,
     case NMSP_DIAGRAM|XML_forEach:
     {
         // CT_ForEach
-		LayoutAtomPtr pAtom( new ForEachAtom );
+		ForEachAtomPtr pAtom( new ForEachAtom(xAttribs) );
         mpNode->addChild( pAtom );
         xRet.set( new ForEachContext( *this, xAttribs, pAtom ) );
         break;
     }
     case NMSP_DIAGRAM|XML_constrLst:
         // CT_Constraints
-		// TODO
+        xRet.set( new ConstraintListContext( *this, xAttribs, mpNode ) );
         break;
     case NMSP_DIAGRAM|XML_presOf:
     {
diff --git oox/source/drawingml/diagram/layoutnodecontext.hxx oox/source/drawingml/diagram/layoutnodecontext.hxx
index 8555825..1be9b79 100644
--- oox/source/drawingml/diagram/layoutnodecontext.hxx
+++ oox/source/drawingml/diagram/layoutnodecontext.hxx
@@ -32,7 +32,8 @@
 #define OOX_DRAWINGML_LAYOUTNODECONTEXT_HXX
 
 #include "oox/core/contexthandler.hxx"
-#include "oox/drawingml/diagram/diagram.hxx"
+#include "diagramlayoutatoms.hxx"
+#include "diagram.hxx"
 
 namespace oox { namespace drawingml {
 
diff --git oox/source/drawingml/diagram/makefile.mk oox/source/drawingml/diagram/makefile.mk
index bf8c6f9..3c48afc 100644
--- oox/source/drawingml/diagram/makefile.mk
+++ oox/source/drawingml/diagram/makefile.mk
@@ -45,6 +45,7 @@ ENABLE_EXCEPTIONS=TRUE
 # --- Files --------------------------------------------------------
 
 SLOFILES = \
+	$(SLO)$/constraintlistcontext.obj \
     $(SLO)$/diagram.obj \
     $(SLO)$/diagramfragmenthandler.obj \
     $(SLO)$/diagramdefinitioncontext.obj \
diff --git oox/source/drawingml/drawingmltypes.cxx oox/source/drawingml/drawingmltypes.cxx
index 89eaf02..3208b0f 100644
--- oox/source/drawingml/drawingmltypes.cxx
+++ oox/source/drawingml/drawingmltypes.cxx
@@ -162,6 +162,7 @@ float GetFontHeight( sal_Int32 nHeight )
 
 sal_Int16 GetFontUnderline( sal_Int32 nToken )
 {
+    OSL_ASSERT((nToken & sal_Int32(0xFFFF0000))==0);
     switch( nToken )
     {
         case XML_none:              return FontUnderline::NONE;
@@ -188,6 +189,7 @@ sal_Int16 GetFontUnderline( sal_Int32 nToken )
 
 sal_Int16 GetFontStrikeout( sal_Int32 nToken )
 {
+    OSL_ASSERT((nToken & sal_Int32(0xFFFF0000))==0);
     switch( nToken )
     {
         case XML_dblStrike: return FontStrikeout::DOUBLE;
@@ -210,6 +212,7 @@ sal_Int16 GetCaseMap( sal_Int32 nToken )
 /** converts a paragraph align to a ParaAdjust */
 sal_Int16 GetParaAdjust( sal_Int32 nAlign )
 {
+    OSL_ASSERT((nAlign & sal_Int32(0xFFFF0000))==0);
     sal_Int16 nEnum;
     switch( nAlign )
     {
@@ -238,6 +241,7 @@ sal_Int16 GetParaAdjust( sal_Int32 nAlign )
 
 TabAlign GetTabAlign( sal_Int32 aToken )
 {
+    OSL_ASSERT((aToken & sal_Int32(0xFFFF0000))==0);
     TabAlign nEnum;
     switch( aToken )
     {
diff --git oox/source/drawingml/fillproperties.cxx oox/source/drawingml/fillproperties.cxx
index 57148fa..8d0645e 100644
--- oox/source/drawingml/fillproperties.cxx
+++ oox/source/drawingml/fillproperties.cxx
@@ -83,6 +83,7 @@ static const sal_Char* const sppcDefaultPicNames[] =
 
 BitmapMode lclGetBitmapMode( sal_Int32 nToken )
 {
+    OSL_ASSERT((nToken & sal_Int32(0xFFFF0000))==0);
     switch( nToken )
     {
         case XML_tile:      return BitmapMode_REPEAT;
@@ -93,6 +94,7 @@ BitmapMode lclGetBitmapMode( sal_Int32 nToken )
 
 RectanglePoint lclGetRectanglePoint( sal_Int32 nToken )
 {
+    OSL_ASSERT((nToken & sal_Int32(0xFFFF0000))==0);
     switch( nToken )
     {
         case XML_tl:    return RectanglePoint_LEFT_TOP;
@@ -276,6 +278,7 @@ void FillProperties::pushToPropMap( PropertyMap& rPropMap, const FillPropertyNam
             nShapeRotation = 0;
 
         FillStyle eFillStyle = FillStyle_NONE;
+        OSL_ASSERT((moFillType.get() & sal_Int32(0xFFFF0000))==0);
         switch( moFillType.get() )
         {
             case XML_noFill:
diff --git oox/source/drawingml/graphicshapecontext.cxx oox/source/drawingml/graphicshapecontext.cxx
index de32569..0f43eb0 100644
--- oox/source/drawingml/graphicshapecontext.cxx
+++ oox/source/drawingml/graphicshapecontext.cxx
@@ -33,7 +33,6 @@
 #include "oox/drawingml/fillpropertiesgroupcontext.hxx"
 #include "oox/drawingml/graphicshapecontext.hxx"
 #include "oox/drawingml/customshapeproperties.hxx"
-#include "oox/drawingml/diagram/diagramfragmenthandler.hxx"
 #include "oox/drawingml/table/tablecontext.hxx"
 #include "oox/core/namespaces.hxx"
 #include "oox/core/xmlfilterbase.hxx"
@@ -43,6 +42,7 @@
 #include "oox/drawingml/chart/chartconverter.hxx"
 #include "oox/drawingml/chart/chartspacefragment.hxx"
 #include "oox/drawingml/chart/chartspacemodel.hxx"
+#include "oox/drawingml/diagram/diagram.hxx"
 #include "tokens.hxx"
 #include <com/sun/star/container/XNameAccess.hpp>
 #include <com/sun/star/io/XStream.hpp>
@@ -92,7 +92,7 @@ Reference< XFastContextHandler > GraphicShapeContext::createFastChildContext( sa
             (mpShapePtr->getCustomShapeProperties());
 
         sal_uInt32 nType = aElementToken & (~ NMSP_MASK);
-        OUString sType(GetShapeType(nType));
+        OUString sType(GetShapePresetType(nType));
 
         if (sType.getLength() > 0)
             pCstmShpProps->setShapePresetType(sType);
@@ -115,6 +115,7 @@ Reference< XFastContextHandler > GraphicalObjectFrameContext::createFastChildCon
 {
     Reference< XFastContextHandler > xRet;
 
+    OSL_ASSERT(((aElementToken &(~NMSP_MASK)) & sal_Int32(0xFFFF0000))==0);
     switch( aElementToken &(~NMSP_MASK) )
     {
     // CT_ShapeProperties
@@ -236,6 +237,7 @@ Reference< XFastContextHandler > PresentationOle2006Context::createFastChildCont
 {
     Reference< XFastContextHandler > xRet;
 
+    OSL_ASSERT(((aElementToken &(~NMSP_MASK)) & sal_Int32(0xFFFF0000))==0);
     switch( aElementToken &(~NMSP_MASK) )
     {
         case XML_oleObj:
@@ -266,7 +268,7 @@ Reference< XFastContextHandler > PresentationOle2006Context::createFastChildCont
 DiagramGraphicDataContext::DiagramGraphicDataContext( ContextHandler& rParent, ShapePtr pShapePtr )
 : ShapeContext( rParent, ShapePtr(), pShapePtr )
 {
-    pShapePtr->setServiceName( "com.sun.star.drawing.GroupShape" );
+	pShapePtr->setServiceName( "com.sun.star.drawing.DiagramShape" );
     pShapePtr->setSubType( 0 );
 }
 
@@ -277,48 +279,6 @@ DiagramGraphicDataContext::~DiagramGraphicDataContext()
 
 }
 
-DiagramPtr DiagramGraphicDataContext::loadDiagram()
-{
-	DiagramPtr pDiagram( new Diagram() );
-    XmlFilterBase& rFilter = getFilter();
-
-	// data
-    OUString sDmPath = getFragmentPathFromRelId( msDm );
-	if( sDmPath.getLength() > 0 )
-	{
-		DiagramDataPtr pData( new DiagramData() );
-		pDiagram->setData( pData );
-        rFilter.importFragment( new DiagramDataFragmentHandler( rFilter, sDmPath, pData ) );
-	}
-	// layout
-    OUString sLoPath = getFragmentPathFromRelId( msLo );
-	if( sLoPath.getLength() > 0 )
-	{
-		DiagramLayoutPtr pLayout( new DiagramLayout() );
-		pDiagram->setLayout( pLayout );
-        rFilter.importFragment( new DiagramLayoutFragmentHandler( rFilter, sLoPath, pLayout ) );
-	}
-	// style
-    OUString sQsPath = getFragmentPathFromRelId( msQs );
-	if( sQsPath.getLength() > 0 )
-	{
-		DiagramQStylesPtr pStyles( new DiagramQStyles() );
-		pDiagram->setQStyles( pStyles );
-        rFilter.importFragment( new DiagramQStylesFragmentHandler( rFilter, sQsPath, pStyles ) );
-	}
-	// colors
-    OUString sCsPath = getFragmentPathFromRelId( msCs );
-	if( sCsPath.getLength() > 0 )
-	{
-		DiagramColorsPtr pColors( new DiagramColors() );
-		pDiagram->setColors( pColors );
-        rFilter.importFragment( new DiagramColorsFragmentHandler( rFilter, sCsPath, pColors ) ) ;
-	}
-
-	return pDiagram;
-}
-
-
 Reference< XFastContextHandler > DiagramGraphicDataContext::createFastChildContext( ::sal_Int32 aElementToken, const Reference< XFastAttributeList >& xAttribs )
     throw (SAXException, RuntimeException)
 {
@@ -332,8 +292,12 @@ Reference< XFastContextHandler > DiagramGraphicDataContext::createFastChildConte
         msLo = xAttribs->getOptionalValue( NMSP_RELATIONSHIPS|XML_lo );
         msQs = xAttribs->getOptionalValue( NMSP_RELATIONSHIPS|XML_qs );
         msCs = xAttribs->getOptionalValue( NMSP_RELATIONSHIPS|XML_cs );
-		DiagramPtr pDiagram = loadDiagram();
-		pDiagram->addTo( mpShapePtr );
+		loadDiagram(mpShapePtr,
+                    getFilter(),
+                    getFragmentPathFromRelId( msDm ),
+                    getFragmentPathFromRelId( msLo ),
+                    getFragmentPathFromRelId( msQs ),
+                    getFragmentPathFromRelId( msCs ));
         OSL_TRACE("diagram added shape %s of type %s", OUSTRING_TO_CSTR( mpShapePtr->getName() ),
                   OUSTRING_TO_CSTR( mpShapePtr->getServiceName() ) );
         break;
@@ -388,7 +352,8 @@ void CreateChartCallback::onCreateXShape( const Reference< drawing::XShape >& rx
 
         // convert imported chart model to chart document
         Reference< chart2::XChartDocument > xChartDoc( xDocModel, UNO_QUERY_THROW );
-        mrFilter.getChartConverter().convertFromModel( mrFilter, aModel, xChartDoc );
+        if( mrFilter.getChartConverter() )
+            mrFilter.getChartConverter()->convertFromModel( mrFilter, aModel, xChartDoc );
     }
     catch( Exception& )
     {
diff --git oox/source/drawingml/lineproperties.cxx oox/source/drawingml/lineproperties.cxx
index d46d46e..4e7a591 100644
--- oox/source/drawingml/lineproperties.cxx
+++ oox/source/drawingml/lineproperties.cxx
@@ -76,6 +76,7 @@ static const sal_Char* const sppcDefaultLineNames[] =
 
 DashStyle lclGetDashStyle( sal_Int32 nToken )
 {
+    OSL_ASSERT((nToken & sal_Int32(0xFFFF0000))==0);
     switch( nToken )
     {
         case XML_rnd:   return DashStyle_ROUNDRELATIVE;
@@ -87,6 +88,7 @@ DashStyle lclGetDashStyle( sal_Int32 nToken )
 
 LineJoint lclGetLineJoint( sal_Int32 nToken )
 {
+    OSL_ASSERT((nToken & sal_Int32(0xFFFF0000))==0);
     switch( nToken )
     {
         case XML_round: return LineJoint_ROUND;
@@ -102,6 +104,7 @@ const sal_Int32 OOX_ARROWSIZE_LARGE     = 2;
 
 sal_Int32 lclGetArrowSize( sal_Int32 nToken )
 {
+    OSL_ASSERT((nToken & sal_Int32(0xFFFF0000))==0);
     switch( nToken )
     {
         case XML_sm:    return OOX_ARROWSIZE_SMALL;
@@ -123,6 +126,7 @@ void lclPushMarkerProperties( PropertyMap& rPropMap, const LineArrowProperties&
 
     OUStringBuffer aBuffer;
     sal_Int32 nArrowType = rArrowProps.moArrowType.get( XML_none );
+    OSL_ASSERT((nArrowType & sal_Int32(0xFFFF0000))==0);
     switch( nArrowType )
     {
         case XML_triangle:
@@ -179,6 +183,7 @@ void lclPushMarkerProperties( PropertyMap& rPropMap, const LineArrowProperties&
 #define OOX_ARROW_POINT( x, y ) Point( static_cast< sal_Int32 >( fArrowWidth * x ), static_cast< sal_Int32 >( fArrowLength * y ) )
 
             ::std::vector< Point > aPoints;
+            OSL_ASSERT((rArrowProps.moArrowType.get() & sal_Int32(0xFFFF0000))==0);
             switch( rArrowProps.moArrowType.get() )
             {
                 case XML_triangle:
@@ -347,6 +352,7 @@ void LineProperties::pushToPropMap( PropertyMap& rPropMap, const LinePropertyNam
             aLineDash.DashLen = 8 * nLineWidth;
             aLineDash.Distance = 3 * nLineWidth;
 
+            OSL_ASSERT((moPresetDash.get() & sal_Int32(0xFFFF0000))==0);
             switch( moPresetDash.get() )
             {
                 default:
diff --git oox/source/drawingml/shape.cxx oox/source/drawingml/shape.cxx
index 19b2f5f..8cf3b14 100644
--- oox/source/drawingml/shape.cxx
+++ oox/source/drawingml/shape.cxx
@@ -43,8 +43,10 @@
 #include <tools/solar.h>        // for the F_PI180 define
 #include <com/sun/star/graphic/XGraphic.hpp>
 #include <com/sun/star/container/XNamed.hpp>
+#include <com/sun/star/container/XNameContainer.hpp>
 #include <com/sun/star/beans/XMultiPropertySet.hpp>
 #include <com/sun/star/lang/XMultiServiceFactory.hpp>
+#include <com/sun/star/xml/AttributeData.hpp>
 #include <com/sun/star/drawing/HomogenMatrix3.hpp>
 #include <com/sun/star/text/XText.hpp>
 #include <basegfx/point/b2dpoint.hxx>
@@ -87,6 +89,30 @@ Shape::Shape( const sal_Char* pServiceName )
         msServiceName = OUString::createFromAscii( pServiceName );
     setDefaults();
 }
+
+Shape::Shape( const ShapePtr& pSourceShape )
+: maChildren()
+, mpTextBody(pSourceShape->mpTextBody)
+, mpLinePropertiesPtr( pSourceShape->mpLinePropertiesPtr )
+, mpFillPropertiesPtr( pSourceShape->mpFillPropertiesPtr )
+, mpGraphicPropertiesPtr( pSourceShape->mpGraphicPropertiesPtr )
+, mpCustomShapePropertiesPtr( pSourceShape->mpCustomShapePropertiesPtr )
+, maShapeProperties( pSourceShape->maShapeProperties )
+, mpMasterTextListStyle( pSourceShape->mpMasterTextListStyle )
+, mxShape()
+, msServiceName( pSourceShape->msServiceName )
+, msName( pSourceShape->msName )
+, msId( pSourceShape->msId )
+, mnSubType( pSourceShape->mnSubType )
+, mnIndex( pSourceShape->mnIndex )
+, maSize( pSourceShape->maSize )
+, maPosition( pSourceShape->maPosition )
+, mxCreateCallback( pSourceShape->mxCreateCallback )
+, mnRotation( pSourceShape->mnRotation )
+, mbFlipH( pSourceShape->mbFlipH )
+, mbFlipV( pSourceShape->mbFlipV )
+{}
+
 Shape::~Shape()
 {
 }
@@ -176,6 +202,19 @@ void Shape::applyShapeReference( const Shape& rReferencedShape )
     mbFlipV = rReferencedShape.mbFlipV;
 }
 
+void Shape::addChildren( const ::oox::core::XmlFilterBase& rFilterBase,
+                         const ThemePtr& rxTheme,
+                         const Reference< XShapes >& rxShapes,
+                         const awt::Rectangle* pShapeRect,
+                         ShapeIdMap* pShapeMap )
+{
+    addChildren(rFilterBase, *this, rxTheme, rxShapes, 
+                pShapeRect ? 
+                 *pShapeRect : 
+                 awt::Rectangle( maPosition.X, maPosition.Y, maSize.Width, maSize.Height ), 
+                pShapeMap);
+}
+
 // for group shapes, the following method is also adding each child
 void Shape::addChildren(
         const ::oox::core::XmlFilterBase& rFilterBase,
@@ -474,6 +513,40 @@ Reference< XShape > Shape::createAndInsert(
                 getTextBody()->insertAt( rFilterBase, xText, xAt, aCharStyleProperties, mpMasterTextListStyle );
             }
         }
+
+        if ( rServiceName.equalsAscii( "com.sun.star.drawing.DiagramShape" ) )
+        {
+            // TEMP: set fragment URIs also as alien attributes
+            Reference< container::XNameContainer > xCont( xSet->getPropertyValue(
+                                                              OUString::createFromAscii("UserDefinedAttributes")), 
+                                                          UNO_QUERY_THROW );
+            
+            xml::AttributeData attrData;
+            attrData.Namespace = OUString::createFromAscii( "urn:openoffice:names:experimental:ooo-ms-interop:xmlns:diagram:1.0" );
+            attrData.Type = OUString::createFromAscii( "CDATA" );
+
+            // TEMP: dummy URI
+            attrData.Value = OUString::createFromAscii("../pictures/data1.xml");
+
+            const OUString sDiagramData(OUString::createFromAscii("diagram:data"));
+            // if( (maShapeProperties[sDiagramData] >>= attrData.Value) )
+            xCont->insertByName(sDiagramData, makeAny(attrData));
+
+            const OUString sDiagramLayout(OUString::createFromAscii("diagram:layout"));
+            // if( (maShapeProperties[sDiagramLayout] >>= attrData.Value) )
+            xCont->insertByName(sDiagramLayout, makeAny(attrData));
+
+            const OUString sDiagramQStyle(OUString::createFromAscii("diagram:quick-style"));
+            // if( (maShapeProperties[sDiagramQStyle] >>= attrData.Value) )
+            xCont->insertByName(sDiagramQStyle, makeAny(attrData));
+
+            const OUString sDiagramColorStyle(OUString::createFromAscii("diagram:color-style"));
+            // if( (maShapeProperties[sDiagramColorStyle] >>= attrData.Value) )
+            xCont->insertByName(sDiagramColorStyle, makeAny(attrData));
+
+            xSet->setPropertyValue( OUString::createFromAscii("UserDefinedAttributes"), 
+                                    makeAny(xCont) );
+        }
     }
 
     // use a callback for further processing on the XShape (e.g. charts)
diff --git oox/source/drawingml/shapepropertiescontext.cxx oox/source/drawingml/shapepropertiescontext.cxx
index 1c02068..b135a6d 100644
--- oox/source/drawingml/shapepropertiescontext.cxx
+++ oox/source/drawingml/shapepropertiescontext.cxx
@@ -108,8 +108,11 @@ Reference< XFastContextHandler > ShapePropertiesContext::createFastChildContext(
     case NMSP_DRAWINGML|XML_effectDag:	// CT_EffectContainer
         break;
 
-	// todo
     case NMSP_DRAWINGML|XML_scene3d:	// CT_Scene3D
+//        xRet.set( new Scene3DContext( *this, xAttribs, *(mrShape.get3DShapeProperties()) ) );
+        break;
+
+	// todo
     case NMSP_DRAWINGML|XML_sp3d:		// CT_Shape3D
         break;
     }
diff --git oox/source/drawingml/textparagraph.cxx oox/source/drawingml/textparagraph.cxx
index 383d02d..8c7f3c2 100644
--- oox/source/drawingml/textparagraph.cxx
+++ oox/source/drawingml/textparagraph.cxx
@@ -64,6 +64,9 @@ void TextParagraph::insertAt(
         Reference< XTextRange > xStart( xAt, UNO_QUERY );
 
         sal_Int16 nLevel = maProperties.getLevel();
+
+        OSL_TRACE("TextParagraph::insertAt() - level %d", nLevel);
+
         const TextParagraphPropertiesVector& rListStyle = rTextListStyle.getListStyle();
         if ( nLevel >= static_cast< sal_Int16 >( rListStyle.size() ) )
             nLevel = 0;
@@ -114,6 +117,12 @@ void TextParagraph::insertAt(
             const OUString sNumberingLevel( CREATE_OUSTRING( "NumberingLevel" ) );
             xProps->setPropertyValue( sNumberingLevel, Any( static_cast< sal_Int16 >( -1 ) ) );
         }
+        else if ( nLevel > 1 )
+        {
+            // Even more UGLY HACK
+			const OUString sNumberingLevel( CREATE_OUSTRING( "NumberingLevel" ) );
+			xProps->setPropertyValue( sNumberingLevel, Any( static_cast< sal_Int16 >( nLevel-1 ) ) );
+        }
 
 // FIXME this is causing a lot of dispruption (ie does not work). I wonder what to do -- Hub
 //          Reference< XTextRange > xEnd( xAt, UNO_QUERY );
diff --git oox/source/drawingml/textparagraphproperties.cxx oox/source/drawingml/textparagraphproperties.cxx
index a3ffc48..168e25f 100644
--- oox/source/drawingml/textparagraphproperties.cxx
+++ oox/source/drawingml/textparagraphproperties.cxx
@@ -113,6 +113,7 @@ void BulletList::setSuffixMinusRight()
 
 void BulletList::setType( sal_Int32 nType )
 {
+    OSL_ASSERT((nType & sal_Int32(0xFFFF0000))==0);
 //	OSL_TRACE( "OOX: set list numbering type %d", nType);
     switch( nType )
     {
diff --git oox/source/helper/storagebase.cxx oox/source/helper/storagebase.cxx
index 9b853e0..1933257 100644
--- oox/source/helper/storagebase.cxx
+++ oox/source/helper/storagebase.cxx
@@ -49,17 +49,25 @@ namespace oox {
 
 namespace {
 
-void lclSplitFirstElement( OUString& orElement, OUString& orRemainder, const OUString& rFullName )
+void lclSplitFirstElement( OUString& orElement, OUString& orRemainder, OUString aFullName )
 {
-    sal_Int32 nSlashPos = rFullName.indexOf( '/' );
-    if( (0 <= nSlashPos) && (nSlashPos < rFullName.getLength()) )
+    sal_Int32  nSlashPos = aFullName.indexOf( '/' );
+
+    // strip leading slashes
+    while( nSlashPos == 0 )
+    {
+        aFullName = aFullName.copy(1);
+        nSlashPos = aFullName.indexOf( '/' );
+    }
+
+    if( (0 <= nSlashPos) && (nSlashPos < aFullName.getLength()) )
     {
-        orElement = rFullName.copy( 0, nSlashPos );
-        orRemainder = rFullName.copy( nSlashPos + 1 );
+        orElement = aFullName.copy( 0, nSlashPos );
+        orRemainder = aFullName.copy( nSlashPos + 1 );
     }
     else
     {
-        orElement = rFullName;
+        orElement = aFullName;
     }
 }
 
diff --git oox/source/ppt/dgmimport.cxx oox/source/ppt/dgmimport.cxx
new file mode 100644
index 0000000..a091212
--- /dev/null
+++ oox/source/ppt/dgmimport.cxx
@@ -0,0 +1,124 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: pptimport.cxx,v $
+ * $Revision: 1.8.6.1 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include "oox/ppt/dgmimport.hxx"
+#include "oox/drawingml/theme.hxx"
+#include "oox/drawingml/diagram/diagram.hxx"
+#include "oox/dump/pptxdumper.hxx"
+
+#include <com/sun/star/drawing/XShape.hpp>
+
+using ::rtl::OUString;
+using namespace ::com::sun::star;
+using namespace ::com::sun::star::uno;
+using namespace ::com::sun::star::xml::sax;
+using namespace oox::core;
+
+namespace oox { namespace ppt {
+
+OUString SAL_CALL QuickDiagrammingImport_getImplementationName() throw()
+{
+    return CREATE_OUSTRING( "com.sun.star.comp.Impress.oox.QuickDiagrammingImport" );
+}
+
+uno::Sequence< OUString > SAL_CALL QuickDiagrammingImport_getSupportedServiceNames() throw()
+{
+    const OUString aServiceName = CREATE_OUSTRING( "com.sun.star.comp.ooxpptx.dgm.import" );
+    const Sequence< OUString > aSeq( &aServiceName, 1 );
+    return aSeq;
+}
+
+uno::Reference< uno::XInterface > SAL_CALL QuickDiagrammingImport_createInstance(const uno::Reference< lang::XMultiServiceFactory > & rSMgr ) throw( uno::Exception )
+{
+    return (cppu::OWeakObject*)new QuickDiagrammingImport( rSMgr );
+}
+
+QuickDiagrammingImport::QuickDiagrammingImport( const uno::Reference< lang::XMultiServiceFactory > & rSMgr  )
+    : XmlFilterBase( rSMgr )
+{}
+
+bool QuickDiagrammingImport::importDocument() throw()
+{
+    /*  to activate the PPTX dumper, define the environment variable
+        OOO_PPTXDUMPER and insert the full path to the file
+        file:///<path-to-oox-module>/source/dump/pptxdumper.ini. */
+    OOX_DUMP_FILE( ::oox::dump::pptx::Dumper );
+
+    OUString aEmpty;
+    OUString aFragmentPath = getFragmentPathFromType( CREATE_OFFICEDOC_RELATIONSTYPE( "diagramLayout" ) );
+
+    Reference<drawing::XShapes> xParentShape(getParentShape(),
+                                             UNO_QUERY_THROW);
+    oox::drawingml::ShapePtr pShape( 
+        new oox::drawingml::Shape( "com.sun.star.drawing.DiagramShape" ) );
+    drawingml::loadDiagram(pShape, 
+                           *this, 
+                           aEmpty, 
+                           aFragmentPath,
+                           aEmpty,
+                           aEmpty);
+    pShape->addShape( *this,
+                      oox::drawingml::ThemePtr(
+                          new oox::drawingml::Theme()),
+                      xParentShape, 
+                      NULL, 
+                      NULL );
+
+    return true;
+}
+
+bool QuickDiagrammingImport::exportDocument() throw()
+{
+	return false;
+}
+
+const ::oox::drawingml::Theme* QuickDiagrammingImport::getCurrentTheme() const
+{
+    // TODO
+    return 0;
+}
+
+sal_Int32 QuickDiagrammingImport::getSchemeClr( sal_Int32 /*nColorSchemeToken*/ ) const
+{
+    // TODO
+	return 0;
+}
+
+const oox::drawingml::table::TableStyleListPtr QuickDiagrammingImport::getTableStyles()
+{
+    return oox::drawingml::table::TableStyleListPtr();
+}
+
+OUString QuickDiagrammingImport::implGetImplementationName() const
+{
+    return QuickDiagrammingImport_getImplementationName();
+}
+
+}}
diff --git oox/source/ppt/dgmlayout.cxx oox/source/ppt/dgmlayout.cxx
new file mode 100644
index 0000000..f893b18
--- /dev/null
+++ oox/source/ppt/dgmlayout.cxx
@@ -0,0 +1,183 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: pptimport.cxx,v $
+ * $Revision: 1.8.6.1 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include "oox/ppt/dgmlayout.hxx"
+#include "oox/drawingml/theme.hxx"
+#include "oox/drawingml/themefragmenthandler.hxx"
+#include "oox/drawingml/diagram/diagram.hxx"
+#include "oox/dump/pptxdumper.hxx"
+
+#include <com/sun/star/drawing/XShape.hpp>
+#include <com/sun/star/drawing/XMasterPageTarget.hpp>
+#include <com/sun/star/xml/dom/XDocument.hpp>
+#include <com/sun/star/xml/sax/XFastSAXSerializable.hpp>
+#include <com/sun/star/container/XChild.hpp>
+
+using ::rtl::OUString;
+using namespace ::com::sun::star;
+using namespace ::com::sun::star::uno;
+using namespace ::com::sun::star::xml::sax;
+using namespace oox::core;
+using namespace ::oox::drawingml;
+
+namespace oox { namespace ppt {
+
+OUString SAL_CALL QuickDiagrammingLayout_getImplementationName() throw()
+{
+    return CREATE_OUSTRING( "com.sun.star.comp.Impress.oox.QuickDiagrammingLayout" );
+}
+
+uno::Sequence< OUString > SAL_CALL QuickDiagrammingLayout_getSupportedServiceNames() throw()
+{
+    const OUString aServiceName = CREATE_OUSTRING( "com.sun.star.comp.ooxpptx.dgm.layout" );
+    const Sequence< OUString > aSeq( &aServiceName, 1 );
+    return aSeq;
+}
+
+uno::Reference< uno::XInterface > SAL_CALL QuickDiagrammingLayout_createInstance(const uno::Reference< lang::XMultiServiceFactory > & rSMgr ) throw( uno::Exception )
+{
+    return (cppu::OWeakObject*)new QuickDiagrammingLayout( rSMgr );
+}
+
+QuickDiagrammingLayout::QuickDiagrammingLayout( const uno::Reference< lang::XMultiServiceFactory > & rSMgr  )
+    : XmlFilterBase( rSMgr ),
+    mpThemePtr(new drawingml::Theme())
+{}
+
+bool QuickDiagrammingLayout::importDocument() throw()
+{
+    Reference<drawing::XShape>  xParentShape(getParentShape(),
+                                             UNO_QUERY_THROW);
+    Reference<drawing::XShapes> xParentShapes(xParentShape,
+                                              UNO_QUERY_THROW);
+    Reference<beans::XPropertySet> xPropSet(xParentShape,
+                                            UNO_QUERY_THROW);
+
+    // can we grab the theme from the master page?
+    Reference<container::XChild> xChild(xParentShape,
+                                        UNO_QUERY);
+    if( xChild.is() )
+    {
+        // TODO: cater for diagram shapes inside groups
+        Reference<drawing::XMasterPageTarget> xMasterPageTarget(xChild->getParent(),
+                                                                UNO_QUERY);
+        if( xMasterPageTarget.is() )
+        {
+            uno::Reference<drawing::XDrawPage> xMasterPage(
+                xMasterPageTarget->getMasterPage());
+
+            Reference<beans::XPropertySet> xPropSet2(xMasterPage,
+                                                     UNO_QUERY_THROW);
+            Reference<xml::dom::XDocument> xThemeFragment;
+            xPropSet2->getPropertyValue(
+                CREATE_OUSTRING("PPTTheme")) >>= xThemeFragment;
+
+            importFragment(
+                new ThemeFragmentHandler( 
+                    *this, OUString(), *mpThemePtr ),
+                Reference<xml::sax::XFastSAXSerializable>(
+                    xThemeFragment,
+                    UNO_QUERY_THROW));
+        }
+    }
+
+    Reference<xml::dom::XDocument> xDataModelDom;
+    Reference<xml::dom::XDocument> xLayoutDom;
+    Reference<xml::dom::XDocument> xQStyleDom;
+    Reference<xml::dom::XDocument> xColorStyleDom;
+
+    xPropSet->getPropertyValue(
+        CREATE_OUSTRING("DiagramData")) >>= xDataModelDom;
+    xPropSet->getPropertyValue(
+        CREATE_OUSTRING("DiagramLayout")) >>= xLayoutDom;
+    xPropSet->getPropertyValue(
+        CREATE_OUSTRING("DiagramQStyle")) >>= xQStyleDom;
+    xPropSet->getPropertyValue(
+        CREATE_OUSTRING("DiagramColorStyle")) >>= xColorStyleDom;
+
+    oox::drawingml::ShapePtr pShape( 
+        new oox::drawingml::Shape( "com.sun.star.drawing.DiagramShape" ) );
+    drawingml::loadDiagram(pShape, 
+                           *this, 
+                           xDataModelDom,
+                           xLayoutDom,
+                           xQStyleDom,
+                           xColorStyleDom);
+
+    // don't add pShape itself, but only its children
+    pShape->setXShape(getParentShape());
+
+    const awt::Size& rSize=xParentShape->getSize();
+    const awt::Point& rPoint=xParentShape->getPosition();
+    const long nScaleFactor=360;
+    const awt::Rectangle aRect(nScaleFactor*rPoint.X, 
+                               nScaleFactor*rPoint.Y, 
+                               nScaleFactor*rSize.Width, 
+                               nScaleFactor*rSize.Height);
+
+    pShape->addChildren( *this,
+                         mpThemePtr,
+                         xParentShapes, 
+                         &aRect, 
+                         NULL );
+
+    return true;
+}
+
+bool QuickDiagrammingLayout::exportDocument() throw()
+{
+	return false;
+}
+
+const ::oox::drawingml::Theme* QuickDiagrammingLayout::getCurrentTheme() const
+{
+    return mpThemePtr.get();
+}
+
+sal_Int32 QuickDiagrammingLayout::getSchemeClr( sal_Int32 nColorSchemeToken ) const
+{
+	sal_Int32 nColor = 0;
+    if( mpThemePtr )
+        mpThemePtr->getClrScheme().getColor( nColorSchemeToken, 
+                                             nColor );
+	return nColor;
+}
+
+const oox::drawingml::table::TableStyleListPtr QuickDiagrammingLayout::getTableStyles()
+{
+    return oox::drawingml::table::TableStyleListPtr();
+}
+
+OUString QuickDiagrammingLayout::implGetImplementationName() const
+{
+    return QuickDiagrammingLayout_getImplementationName();
+}
+
+}}
diff --git oox/source/ppt/makefile.mk oox/source/ppt/makefile.mk
index 3e9372b..ecaf0dc 100644
--- oox/source/ppt/makefile.mk
+++ oox/source/ppt/makefile.mk
@@ -54,6 +54,8 @@ SLOFILES =	\
         $(SLO)$/commontimenodecontext.obj \
         $(SLO)$/conditioncontext.obj \
         $(SLO)$/customshowlistcontext.obj \
+		$(SLO)$/dgmimport.obj\
+		$(SLO)$/dgmlayout.obj\
         $(SLO)$/layoutfragmenthandler.obj\
         $(SLO)$/pptfilterhelpers.obj\
 		$(SLO)$/pptgraphicshapecontext.obj \
diff --git oox/source/ppt/pptimport.cxx oox/source/ppt/pptimport.cxx
index 9f4668f..657795f 100644
--- oox/source/ppt/pptimport.cxx
+++ oox/source/ppt/pptimport.cxx
@@ -177,9 +177,9 @@ const oox::drawingml::table::TableStyleListPtr PowerPointImport::getTableStyles(
     return mpTableStyleList;;
 }
 
-::oox::drawingml::chart::ChartConverter& PowerPointImport::getChartConverter()
+::oox::drawingml::chart::ChartConverter* PowerPointImport::getChartConverter()
 {
-    return *mxChartConv;
+    return mxChartConv.get();
 }
 
 OUString PowerPointImport::implGetImplementationName() const
diff --git oox/source/ppt/presentationfragmenthandler.cxx oox/source/ppt/presentationfragmenthandler.cxx
index af27b6a..ce48fd9 100644
--- oox/source/ppt/presentationfragmenthandler.cxx
+++ oox/source/ppt/presentationfragmenthandler.cxx
@@ -35,6 +35,8 @@
 #include <com/sun/star/drawing/XDrawPages.hpp>
 #include <com/sun/star/drawing/XDrawPagesSupplier.hpp>
 #include <com/sun/star/drawing/XMasterPageTarget.hpp>
+#include <com/sun/star/xml/dom/XDocument.hpp>
+#include <com/sun/star/xml/sax/XFastSAXSerializable.hpp>
 #include <com/sun/star/style/XStyleFamiliesSupplier.hpp>
 #include <com/sun/star/style/XStyle.hpp>
 #include <com/sun/star/presentation/XPresentationPage.hpp>
@@ -176,8 +178,17 @@ void PresentationFragmentHandler::endDocument() throw (SAXException, RuntimeExce
                                 {
                                     oox::drawingml::ThemePtr pThemePtr( new oox::drawingml::Theme() );
                                     pMasterPersistPtr->setTheme( pThemePtr );
-                                    rFilter.importFragment( new ThemeFragmentHandler( rFilter, aThemeFragmentPath, *pThemePtr ) );
+                                    Reference<xml::dom::XDocument> xDoc=
+                                        rFilter.importFragment(aThemeFragmentPath);
+
+                                    rFilter.importFragment(
+                                        new ThemeFragmentHandler( 
+                                            rFilter, aThemeFragmentPath, *pThemePtr ),
+                                        Reference<xml::sax::XFastSAXSerializable>(
+                                            xDoc,
+                                            UNO_QUERY_THROW));
                                     rThemes[ aThemeFragmentPath ] = pThemePtr;
+                                    pThemePtr->setFragment(xDoc);
                                 }
                                 else
                                 {
@@ -188,6 +199,15 @@ void PresentationFragmentHandler::endDocument() throw (SAXException, RuntimeExce
                             rFilter.importFragment( new LayoutFragmentHandler( rFilter, aLayoutFragmentPath, pMasterPersistPtr ) );
                             pMasterPersistPtr->createBackground( rFilter );
                             pMasterPersistPtr->createXShapes( rFilter );
+
+                            if( pMasterPersistPtr->getTheme() )
+                            { 
+                                uno::Reference< beans::XPropertySet > xPagePropSet( xMasterPage, 
+                                                                                    uno::UNO_QUERY_THROW );
+                                xPagePropSet->setPropertyValue( 
+                                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "PPTTheme" )),
+                                    uno::makeAny(pMasterPersistPtr->getTheme()->getFragment()));
+                            }
                         }
                     }
                 }
diff --git oox/source/shape/ShapeFilterBase.cxx oox/source/shape/ShapeFilterBase.cxx
index c43eadd..a5e2c4d 100644
--- oox/source/shape/ShapeFilterBase.cxx
+++ oox/source/shape/ShapeFilterBase.cxx
@@ -68,9 +68,9 @@ const ::oox::drawingml::table::TableStyleListPtr ShapeFilterBase::getTableStyles
     return ::oox::drawingml::table::TableStyleListPtr();
 }
 
-::oox::drawingml::chart::ChartConverter& ShapeFilterBase::getChartConverter()
+::oox::drawingml::chart::ChartConverter* ShapeFilterBase::getChartConverter()
 {
-    return *mxChartConv;
+    return mxChartConv.get();
 }
 
 ::rtl::OUString ShapeFilterBase::implGetImplementationName() const
diff --git oox/source/shape/ShapeFilterBase.hxx oox/source/shape/ShapeFilterBase.hxx
index 0657aea..007142d 100644
--- oox/source/shape/ShapeFilterBase.hxx
+++ oox/source/shape/ShapeFilterBase.hxx
@@ -64,7 +64,7 @@ public:
     /** Has to be implemented by each filter to return TableStyles. */
     virtual const ::oox::drawingml::table::TableStyleListPtr getTableStyles();
 
-    virtual ::oox::drawingml::chart::ChartConverter& getChartConverter();
+    virtual ::oox::drawingml::chart::ChartConverter* getChartConverter();
 
     virtual rtl::OUString implGetImplementationName() const;
 
diff --git oox/source/token/makefile.mk oox/source/token/makefile.mk
index 8966dda..d776ed3 100644
--- oox/source/token/makefile.mk
+++ oox/source/token/makefile.mk
@@ -54,7 +54,8 @@ $(MISC)$/tokens.gperf $(INCCOM)$/tokenwords.inc $(INCCOM)$/tokens.hxx $(INCCOM)$
     @@noop $(assign do_phony:=.PHONY)
 
 $(MISC)$/do_tokens $(do_phony) : tokens.txt gentoken.pl $(MISC)$/tokens.gperf $(INCCOM)$/tokenwords.inc $(INCCOM)$/tokens.hxx
-	$(PERL) gentoken.pl tokens.txt $(INCCOM)$/tokens.hxx $(INCCOM)$/tokenwords.inc $(MISC)$/tokens.gperf && $(TOUCH) $@
+	@echo "Making:   " $(@:f)
+	$(QUIET_BUILD) $(PERL) gentoken.pl tokens.txt $(INCCOM)$/tokens.hxx $(INCCOM)$/tokenwords.inc $(MISC)$/tokens.gperf && $(TOUCH) $@
 
 $(INCCOM)$/oox:
 	$(MKDIR) $(INCCOM)$/oox
@@ -63,11 +64,13 @@ $(INCCOM)$/oox$/core: $(INCCOM)$/oox
 	$(MKDIR) $(INCCOM)$/oox$/core
 
 $(MISC)$/do_namespaces $(do_phony) : namespaces.txt gennamespaces.pl
+	@echo "Making:   " $(@:f)
 	$(MKDIRHIER) $(INCCOM)$/oox$/core
-	$(PERL) gennamespaces.pl namespaces.txt $(INCCOM)$/oox$/core$/namespaces.hxx && $(TOUCH) $@
+	$(QUIET_BUILD) $(PERL) gennamespaces.pl namespaces.txt $(INCCOM)$/oox$/core$/namespaces.hxx && $(TOUCH) $@
 
 $(INCCOM)$/tokens.inc : $(MISC)$/tokens.gperf $(MISC)$/do_tokens
-		gperf --compare-strncmp $(MISC)$/tokens.gperf | $(SED) -e "s/(char\*)0/(char\*)0, 0/g" | $(GREP) -v "^#line" >$(INCCOM)$/tokens.inc
+	@echo "Making:   " $(@:f)
+	$(QUIET_BUILD) gperf --compare-strncmp $(MISC)$/tokens.gperf | $(SED) -e "s/(char\*)0/(char\*)0, 0/g" | $(GREP) -v "^#line" >$(INCCOM)$/tokens.inc
 
-$(SLO)$/tokenmap.obj : $(INCCOM)$/tokens.inc $(INCCOM)$/tokenwords.inc $(INCCOM)$/tokens.hxx $(INCCOM)$/oox$/core$/namespaces.hxx $(MISC)$/do_tokens $(MISC)$/do_namespaces
+$(SLO)$/tokenmap.obj : $(INCCOM)$/tokens.inc $(INCCOM)$/tokenwords.inc $(INCCOM)$/tokens.hxx $(INCCOM)$/oox$/core$/namespaces.hxx $(MISC)$/do_tokens $(MISC)$/do_namespaces makefile.mk
 
diff --git oox/source/xls/excelfilter.cxx oox/source/xls/excelfilter.cxx
index b9dfbfd..b066fb8 100644
--- oox/source/xls/excelfilter.cxx
+++ oox/source/xls/excelfilter.cxx
@@ -139,7 +139,7 @@ const TableStyleListPtr ExcelFilter::getTableStyles()
     return TableStyleListPtr();
 }
 
-::oox::drawingml::chart::ChartConverter& ExcelFilter::getChartConverter()
+::oox::drawingml::chart::ChartConverter* ExcelFilter::getChartConverter()
 {
     OSL_ENSURE( mpHelper, "ExcelFilter::getChartConverter - no workbook helper" );
     return mpHelper->getChartConverter();
diff --git oox/source/xls/workbookhelper.cxx oox/source/xls/workbookhelper.cxx
index 03a0cc8..49cb5b6 100644
--- oox/source/xls/workbookhelper.cxx
+++ oox/source/xls/workbookhelper.cxx
@@ -230,7 +230,7 @@ public:
     /** Returns the converter for string to cell address/range conversion. */
     inline AddressConverter& getAddressConverter() const { return *mxAddrConverter; }
     /** Returns the chart object converter. */
-    inline ExcelChartConverter& getChartConverter() const { return *mxChartConverter; }
+    inline ExcelChartConverter* getChartConverter() const { return mxChartConverter.get(); }
 
     // property helpers -------------------------------------------------------
 
@@ -846,7 +846,7 @@ AddressConverter& WorkbookHelper::getAddressConverter() const
     return mrBookData.getAddressConverter();
 }
 
-ExcelChartConverter& WorkbookHelper::getChartConverter() const
+ExcelChartConverter* WorkbookHelper::getChartConverter() const
 {
     return mrBookData.getChartConverter();
 }
diff --git sc/source/filter/excel/xestream.cxx sc/source/filter/excel/xestream.cxx
index a279b9d..0f8262c 100644
--- sc/source/filter/excel/xestream.cxx
+++ sc/source/filter/excel/xestream.cxx
@@ -1001,10 +1001,9 @@ const oox::drawingml::table::TableStyleListPtr XclExpXmlStream::getTableStyles()
     return oox::drawingml::table::TableStyleListPtr();
 }
 
-oox::drawingml::chart::ChartConverter& XclExpXmlStream::getChartConverter()
+oox::drawingml::chart::ChartConverter* XclExpXmlStream::getChartConverter()
 {
-    // DO NOT CALL
-    return * (oox::drawingml::chart::ChartConverter*) NULL;
+    return NULL;
 }
 
 bool XclExpXmlStream::exportDocument() throw()
diff --git sc/source/filter/inc/xestream.hxx sc/source/filter/inc/xestream.hxx
index 2a819d7..84bf4ce 100644
--- sc/source/filter/inc/xestream.hxx
+++ sc/source/filter/inc/xestream.hxx
@@ -341,7 +341,7 @@ public:
     virtual const oox::vml::DrawingPtr getDrawings();
     virtual const oox::drawingml::Theme* getCurrentTheme() const;
     virtual const oox::drawingml::table::TableStyleListPtr getTableStyles();
-    virtual oox::drawingml::chart::ChartConverter& getChartConverter();
+    virtual oox::drawingml::chart::ChartConverter* getChartConverter();
 
     void Trace( const char* format, ...);
 private:
diff --git sd/inc/glob.hrc sd/inc/glob.hrc
index 3fb822e..c80c253 100644
--- sd/inc/glob.hrc
+++ sd/inc/glob.hrc
@@ -152,4 +152,5 @@
 #define STR_TABLEOBJECTBARSHELL					RID_GLOB_START+225
 #define RID_TABPAGE_PARA_NUMBERING				RID_GLOB_START+226
 
+#define DLG_DIAGRAMDESIGNPANE					RID_GLOB_START+227
 
diff --git sd/inc/helpids.h sd/inc/helpids.h
index 9d5260e..7bcd779 100644
--- sd/inc/helpids.h
+++ sd/inc/helpids.h
@@ -280,3 +280,4 @@
 #define HID_SD_CELL_STYLE_LAST_COLUMN						(HID_SD_START + 199)
 
 #define HID_SD_TABLE_DESIGN									(HID_SD_START + 200)
+#define HID_SD_DIAGRAM_DESIGN								(HID_SD_START + 201)
diff --git sd/inc/sdpage.hxx sd/inc/sdpage.hxx
index bb7d6b8..729fcd0 100644
--- sd/inc/sdpage.hxx
+++ sd/inc/sdpage.hxx
@@ -58,8 +58,11 @@
 #include "misc/scopelock.hxx"
 #include "sddllapi.h"
 
-namespace com { namespace sun { namespace star { namespace animations {
-    class XAnimationNode;
+namespace com { namespace sun { namespace star { 
+    namespace xml { namespace dom {
+        class XDocument; } }
+    namespace animations {
+        class XAnimationNode;
 } } } }
 
 class SfxStyleSheet;
@@ -148,6 +151,8 @@ protected:
     USHORT      mnPaperBin;                // PaperBin
     Orientation meOrientation;             // Print-Orientation
     SdPageLink* mpPageLink;				  // PageLink (nur bei gelinkten Seiten)
+	::com::sun::star::uno::Reference<
+        ::com::sun::star::xml::dom::XDocument> mxTheme;
 
     /** holds the smil animation sequences for this page */
     ::com::sun::star::uno::Reference< ::com::sun::star::animations::XAnimationNode > mxAnimationNode;
@@ -276,6 +281,11 @@ public:
     double		getTransitionDuration() const;
     void		setTransitionDuration( double fTranstionDuration );
 
+	::com::sun::star::uno::Reference<
+     ::com::sun::star::xml::dom::XDocument> getPPTTheme() const;
+	void		setPPTTheme( const ::com::sun::star::uno::Reference<
+                               ::com::sun::star::xml::dom::XDocument>& );
+
     // Virtuelle Methoden von SdrObjUserCall
     virtual void Changed(const SdrObject& rObj, SdrUserCallType eType,
                          const Rectangle& rOldBoundRect);
diff --git sd/prj/build.lst sd/prj/build.lst
index 949153b..325b203 100644
--- sd/prj/build.lst
+++ sd/prj/build.lst
@@ -26,6 +26,7 @@ sd	sd\source\ui\slidesorter\controller		nmake	-	all	sd_slscontroller sd_sdi sd_i
 sd	sd\source\ui\slidesorter\cache			nmake	-	all	sd_slscache sd_inc NULL
 sd	sd\source\ui\notes						nmake	-	all	sd_notes sd_inc NULL
 sd	sd\source\ui\table						nmake	-	all	sd_table sd_inc NULL
+sd	sd\source\ui\diagram					nmake	-	all	sd_diagram sd_inc NULL
 sd	sd\source\filter\ppt					nmake	-	all	sd_ppt sd_inc NULL
 sd	sd\source\filter						nmake	-	all	sd_filt sd_sdi sd_ppt sd_inc NULL
 sd	sd\source\filter\cgm					nmake	-	all	sd_cgm sd_inc NULL
@@ -41,5 +42,5 @@ sd	sd\source\ui\framework\configuration	nmake	-	all sd_framework_configuration s
 sd	sd\source\ui\framework\module       	nmake	-	all sd_framework_module sd_inc NULL
 sd	sd\source\ui\framework\factories       	nmake	-	all sd_framework_factories sd_inc NULL
 sd	sd\source\ui\framework\tools           	nmake	-	all sd_framework_tools sd_inc NULL
-sd	sd\util									nmake	-	all	sd_util sd_app sd_cgm sd_core sd_dlg sd_docsh sd_eppt sd_pptx sd_filt sd_func sd_grf sd_unid sd_view sd_filter_xml sd_html sd_ppt sd_accessibility sd_animations sd_toolpanel sd_toolpanel_controls sd_tools sd_slsshell sd_slsmodel sd_slsview sd_slscontroller sd_slscache sd_notes sd_table sd_slideshow sd_presenter sd_undo sd_helper sd_framework_configuration sd_framework_module sd_framework_tools sd_framework_factories NULL
+sd	sd\util									nmake	-	all	sd_util sd_app sd_cgm sd_core sd_dlg sd_docsh sd_eppt sd_pptx sd_filt sd_func sd_grf sd_unid sd_view sd_filter_xml sd_html sd_ppt sd_accessibility sd_animations sd_toolpanel sd_toolpanel_controls sd_tools sd_slsshell sd_slsmodel sd_slsview sd_slscontroller sd_slscache sd_notes sd_table sd_diagram sd_slideshow sd_presenter sd_undo sd_helper sd_framework_configuration sd_framework_module sd_framework_tools sd_framework_factories NULL
 sd	sd\xml									nmake	-	all	sd_xml NULL
diff --git sd/source/core/sdpage2.cxx sd/source/core/sdpage2.cxx
index 93e39e8..2c41294 100644
--- sd/source/core/sdpage2.cxx
+++ sd/source/core/sdpage2.cxx
@@ -586,3 +586,13 @@ void SdPage::setTransitionDuration ( double fTranstionDuration )
     mfTransitionDuration = fTranstionDuration; 
     ActionChanged();
 }
+
+uno::Reference<xml::dom::XDocument> SdPage::getPPTTheme() const
+{
+    return mxTheme;
+}
+
+void SdPage::setPPTTheme( const uno::Reference<xml::dom::XDocument>& xRef )
+{
+    mxTheme = xRef;
+}
diff --git sd/source/filter/pptx/epptooxml.hxx sd/source/filter/pptx/epptooxml.hxx
index 2c850bd..729ad80 100644
--- sd/source/filter/pptx/epptooxml.hxx
+++ sd/source/filter/pptx/epptooxml.hxx
@@ -57,7 +57,7 @@ public:
     virtual const oox::vml::DrawingPtr getDrawings() { return oox::vml::DrawingPtr(); }
     virtual const oox::drawingml::Theme* getCurrentTheme() const { return NULL; }
     virtual const oox::drawingml::table::TableStyleListPtr getTableStyles() { return oox::drawingml::table::TableStyleListPtr(); }
-    virtual oox::drawingml::chart::ChartConverter& getChartConverter();
+    virtual oox::drawingml::chart::ChartConverter* getChartConverter();
 
     static const char* GetSideDirection( sal_uInt8 nDirection );
     static const char* GetCornerDirection( sal_uInt8 nDirection );
diff --git sd/source/filter/pptx/pptx-epptooxml.cxx sd/source/filter/pptx/pptx-epptooxml.cxx
index 50862df..746168f 100644
--- sd/source/filter/pptx/pptx-epptooxml.cxx
+++ sd/source/filter/pptx/pptx-epptooxml.cxx
@@ -1882,9 +1882,9 @@ sal_Bool PowerPointExport::ImplCreateMainNotes()
 
 //------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
-drawingml::chart::ChartConverter& PowerPointExport::getChartConverter()
+drawingml::chart::ChartConverter* PowerPointExport::getChartConverter()
 {
-    return *mxChartConv;
+    return mxChartConv.get();
 }
 
 #define IMPL_NAME "com.sun.star.comp.Impress.oox.PowerPointExport"
diff --git sd/source/filter/xml/sdxmlwrp.cxx sd/source/filter/xml/sdxmlwrp.cxx
index 05d9ec6..3c619b9 100644
--- sd/source/filter/xml/sdxmlwrp.cxx
+++ sd/source/filter/xml/sdxmlwrp.cxx
@@ -42,6 +42,7 @@
 #include "drawdoc.hxx"
 #include <unotools/streamwrap.hxx>
 #include <svx/xmlgrhlp.hxx>
+#include <svx/svdodiagram.hxx>
 
 #include "../../ui/inc/DrawDocShell.hxx"
 
@@ -485,6 +486,9 @@ sal_Bool SdXMLFilter::Import( ErrCode& nError )
         { MAP_LEN( "BaseURI" ), 0,
               &::getCppuType( (OUString *)0 ),
               ::com::sun::star::beans::PropertyAttribute::MAYBEVOID, 0 },
+		{ MAP_LEN( "SourceStorage" ), 0,
+              &::getCppuType( (Reference<embed::XStorage> *)0 ),
+			  ::com::sun::star::beans::PropertyAttribute::MAYBEVOID, 0 },
         { MAP_LEN( "StreamRelPath" ), 0,
               &::getCppuType( (OUString *)0 ),
               ::com::sun::star::beans::PropertyAttribute::MAYBEVOID, 0 },
@@ -591,6 +595,10 @@ sal_Bool SdXMLFilter::Import( ErrCode& nError )
     const OUString sBaseURI( RTL_CONSTASCII_USTRINGPARAM("BaseURI") );
     xInfoSet->setPropertyValue( sBaseURI, makeAny( mrMedium.GetBaseURL() ) );
 
+    // set document storage
+    const OUString sSourceStorage( RTL_CONSTASCII_USTRINGPARAM("SourceStorage") );
+    xInfoSet->setPropertyValue( sSourceStorage, makeAny( xStorage ) );
+
     if( 0 == nRet && SFX_CREATE_MODE_EMBEDDED == mrDocShell.GetCreateMode() )
     {
         OUString aName;
@@ -803,6 +811,29 @@ sal_Bool SdXMLFilter::Import( ErrCode& nError )
 
             if( bTransform )
                 TransformOOo2xDocument( pDoc );
+
+            // HACK. force relayout of diagramming shapes. misplaced
+            // here, and totally ignores groups
+            sal_uInt16 nPageCount = pDoc->GetPageCount();
+            for( sal_uInt16 nPage = 0; nPage < nPageCount; nPage++ )
+            {
+                SdrObjList* pPage = pDoc->GetPage( nPage );
+                if( pPage )
+                {
+                    sal_uInt32 nShapeCount = pPage->GetObjCount();
+                    for( sal_uInt32 nShape = 0; nShape < nShapeCount; nShape++ )
+                    {
+                        SdrObject* pObj = pPage->GetObj( nShape );
+                        if( pObj )
+                        {
+                            sdr::diagram::SdrDiagramObj* pDgmShape = 
+                                dynamic_cast<sdr::diagram::SdrDiagramObj*>(pObj);
+                            if( pDgmShape )
+                                pDgmShape->LayoutShape();
+                        }
+                    }
+                }
+            }
         }
     }
 
diff --git sd/source/ui/animations/CustomAnimationCreateDialog.cxx sd/source/ui/animations/CustomAnimationCreateDialog.cxx
index e244486..6b715d2 100644
--- sd/source/ui/animations/CustomAnimationCreateDialog.cxx
+++ sd/source/ui/animations/CustomAnimationCreateDialog.cxx
@@ -672,10 +672,10 @@ void CustomAnimationCreateDialog::preview( const CustomAnimationPresetPtr& pPres
 
 namespace
 {
-Window * lcl_GetTopmostParent( Window * pWindow )
+::Window * lcl_GetTopmostParent( ::Window * pWindow )
 {
-    Window * pResult = 0;
-    Window * pCurrent = pWindow ? pWindow->GetParent() : 0;
+    ::Window * pResult = 0;
+    ::Window * pCurrent = pWindow ? pWindow->GetParent() : 0;
     while( pCurrent )
     {
         pResult = pCurrent;
diff --git sd/source/ui/animations/motionpathtag.cxx sd/source/ui/animations/motionpathtag.cxx
index 34942f4..b37c359 100644
--- sd/source/ui/animations/motionpathtag.cxx
+++ sd/source/ui/animations/motionpathtag.cxx
@@ -499,7 +499,7 @@ void MotionPathTag::MovePath( int nDX, int nDY )
 // --------------------------------------------------------------------
 
 /** returns true if the MotionPathTag handled the event. */
-bool MotionPathTag::MouseButtonDown( const MouseEvent& rMEvt, SmartHdl& rHdl )
+bool MotionPathTag::MouseButtonDown( const MouseEvent& rMEvt, SmartHdl& rHdl, const sd::Window& )
 {
     if( !mpPathObj )
         return false;
@@ -520,6 +520,7 @@ bool MotionPathTag::MouseButtonDown( const MouseEvent& rMEvt, SmartHdl& rHdl )
         }
         else if( rMEvt.IsLeft() )
         {			
+            // TODO: this should be rWin from above, I guess...
             OutputDevice* pOut = mrView.GetViewShell()->GetActiveWindow();
             Point aMDPos( pOut->PixelToLogic( rMEvt.GetPosPixel() ) );
 
@@ -629,7 +630,7 @@ bool MotionPathTag::MouseButtonDown( const MouseEvent& rMEvt, SmartHdl& rHdl )
 // --------------------------------------------------------------------
 
 /** returns true if the SmartTag consumes this event. */
-bool MotionPathTag::KeyInput( const KeyEvent& rKEvt )
+bool MotionPathTag::KeyInput( const KeyEvent& rKEvt, const Window& rWin )
 {
     if( !mpPathObj )
         return false;
diff --git sd/source/ui/animations/motionpathtag.hxx sd/source/ui/animations/motionpathtag.hxx
index e22b418..7310f7e 100644
--- sd/source/ui/animations/motionpathtag.hxx
+++ sd/source/ui/animations/motionpathtag.hxx
@@ -61,10 +61,10 @@ public:
     SdrPathObj* getPathObj() const { return mpPathObj; }
 
     /** returns true if the SmartTag handled the event. */
-    virtual bool MouseButtonDown( const MouseEvent&, SmartHdl& );
+	virtual bool MouseButtonDown( const MouseEvent&, SmartHdl&, const Window& );
 
     /** returns true if the SmartTag consumes this event. */
-    virtual bool KeyInput( const KeyEvent& rKEvt );
+	virtual bool KeyInput( const KeyEvent& rKEvt, const Window& rWin );
 
     // callbacks from sdr view
     virtual ULONG GetMarkablePointCount() const;
diff --git sd/source/ui/app/strings.src sd/source/ui/app/strings.src
index fbffd33..f27dcf8 100644
--- sd/source/ui/app/strings.src
+++ sd/source/ui/app/strings.src
@@ -1241,6 +1241,10 @@ String DLG_TABLEDESIGNPANE
 {
     Text [ en-US ] = "Table Designs";
 };
+String DLG_DIAGRAMDESIGNPANE
+{
+	Text [ en-US ] = "QuickDiagram Designs";
+};
 String STR_NAVIGATOR_SHOW_NAMED_SHAPES
 {
     Text [ en-US ] = "Named shapes";
@@ -1258,4 +1262,4 @@ String STR_SET_BACKGROUND_PICTURE
     Text [ en-US ] = "Set Background Picture for Slide ..." ;
 };
 
- 
\ No newline at end of file
+ 
diff --git sd/source/ui/diagram/DiagramDesignPane.cxx sd/source/ui/diagram/DiagramDesignPane.cxx
new file mode 100644
index 0000000..9031342
--- /dev/null
+++ sd/source/ui/diagram/DiagramDesignPane.cxx
@@ -0,0 +1,685 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: TableDesignPane.cxx,v $
+ * $Revision: 1.4 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_sd.hxx"
+
+#include "sddll.hxx"
+
+#include <com/sun/star/beans/XMultiPropertyStates.hpp>
+#include <com/sun/star/frame/XController.hpp>
+#include <com/sun/star/view/XSelectionSupplier.hpp>
+#include <com/sun/star/style/XStyle.hpp>
+#include <com/sun/star/style/XStyleFamiliesSupplier.hpp>
+
+#include <comphelper/processfactory.hxx>
+
+#include <sfx2/viewfrm.hxx>
+
+#include <vcl/bmpacc.hxx>
+
+#include <svtools/style.hxx>
+
+#include <sfx2/viewfrm.hxx>
+#include <sfx2/bindings.hxx>
+#include <sfx2/app.hxx>
+#include <sfx2/request.hxx>
+#include <sfx2/dispatch.hxx>
+
+#include <svx/svdodiagram.hxx>
+#include <svx/svdetc.hxx>
+#include <svx/boxitem.hxx>
+#include <svx/borderline.hxx>
+#include <svx/colritem.hxx>
+#include <svx/eeitem.hxx>
+#include <svx/unoshape.hxx>
+
+#include "DiagramDesignPane.hxx"
+#include "diagramtag.hxx"
+
+#include "DrawDocShell.hxx"
+#include "ViewShellBase.hxx"
+#include "DrawViewShell.hxx"
+#include "DrawController.hxx"
+#include "glob.hrc"
+#include "sdresid.hxx"
+#include "EventMultiplexer.hxx"
+
+#define C2U(x) OUString( RTL_CONSTASCII_USTRINGPARAM( x ) )
+using ::rtl::OUString;
+using namespace ::com::sun::star;
+using namespace ::com::sun::star::uno;
+using namespace ::com::sun::star::drawing;
+using namespace ::com::sun::star::container;
+using namespace ::com::sun::star::beans;
+using namespace ::com::sun::star::view;
+using namespace ::com::sun::star::style;
+using namespace ::com::sun::star::frame;
+using namespace ::com::sun::star::lang;
+using namespace ::com::sun::star::ui;
+
+namespace sd {
+
+static const sal_Int32 nPreviewColumns = 5;
+static const sal_Int32 nPreviewRows = 5;
+
+// --------------------------------------------------------------------
+
+DiagramDesignPane::DiagramDesignPane( ::Window* pParent, ViewShellBase& rBase, bool bModal )
+: Control( pParent, SdResId(DLG_DIAGRAMDESIGNPANE) )
+, mrBase( rBase )
+, msDiagramTemplate( RTL_CONSTASCII_USTRINGPARAM( "DiagramTemplate" ) )
+, mpTag()
+, mbModal( bModal )
+, mbStyleSelected( false )
+, mbOptionsChanged( false )
+{
+	Window* pControlParent = mbModal ? pParent : this;
+
+	mxControls[FL_DIAGRAM_STYLES].reset( new FixedLine( pControlParent, SdResId( FL_DIAGRAM_STYLES + 1 ) ) );
+
+	ValueSet* pValueSet = new ValueSet( pControlParent, SdResId( CT_DIAGRAM_STYLES+1 ) );
+	mxControls[CT_DIAGRAM_STYLES].reset( pValueSet );
+	if( !mbModal )
+	{
+		pValueSet->SetStyle( pValueSet->GetStyle() & ~(WB_ITEMBORDER|WB_BORDER) | WB_NO_DIRECTSELECT | WB_FLATVALUESET | WB_NOBORDER );
+		pValueSet->SetColor();
+		pValueSet->SetExtraSpacing(8);
+	}
+	else
+	{
+		pValueSet->SetColor( Color( COL_WHITE ) );
+		pValueSet->SetBackground( Color( COL_WHITE ) );
+	}
+	pValueSet->SetSelectHdl (LINK(this, DiagramDesignPane, implValueSetHdl));
+
+	mxControls[FL_DIAGRAM_LIST].reset( new FixedLine( pControlParent, SdResId( FL_DIAGRAM_LIST + 1 ) ) );
+
+	pValueSet = new ValueSet( pControlParent, SdResId( CT_DIAGRAM_LIST+1 ) );
+	mxControls[CT_DIAGRAM_LIST].reset( pValueSet );
+	if( !mbModal )
+	{
+		pValueSet->SetStyle( pValueSet->GetStyle() & ~(WB_ITEMBORDER|WB_BORDER) | WB_NO_DIRECTSELECT | WB_FLATVALUESET | WB_NOBORDER );
+		pValueSet->SetColor();
+		pValueSet->SetExtraSpacing(8);
+	}
+	else
+	{
+		pValueSet->SetColor( Color( COL_WHITE ) );
+		pValueSet->SetBackground( Color( COL_WHITE ) );
+	}
+	pValueSet->SetSelectHdl (LINK(this, DiagramDesignPane, implValueSetHdl));
+
+	mxControls[FL_STYLE_OPTIONS].reset( new FixedLine( pControlParent, SdResId( FL_STYLE_OPTIONS + 1 ) ) );
+	USHORT i;
+	for( i = CB_HEADER_ROW; i <= CB_BANDED_COLUMNS; ++i )
+	{
+		CheckBox *pCheckBox = new CheckBox( pControlParent, SdResId( i+1 ) );
+		mxControls[i].reset( pCheckBox );
+		pCheckBox->SetClickHdl( LINK( this, DiagramDesignPane, implCheckBoxHdl ) );
+	}
+
+	for( i = 0; i < DESIGNPANE_CONTROL_COUNT; i++ )
+		mnOrgOffsetY[i] = mxControls[i]->GetPosPixel().Y();
+
+	// get current controller and initialize listeners
+	try
+	{
+		mxView = Reference< XDrawView >::query(mrBase.GetController());
+		addListener();	
+
+		Reference< XController > xController( mrBase.GetController(), UNO_QUERY_THROW );
+		Reference< XStyleFamiliesSupplier > xFamiliesSupp( xController->getModel(), UNO_QUERY_THROW );
+		Reference< XNameAccess > xFamilies( xFamiliesSupp->getStyleFamilies() );
+		const OUString sFamilyName( RTL_CONSTASCII_USTRINGPARAM("diagram" ) );
+		mxDiagramFamily = Reference< XIndexAccess >( xFamilies->getByName( sFamilyName ), UNO_QUERY_THROW );
+
+	}
+	catch( Exception& e )
+	{
+		(void)e;
+		DBG_ERROR( "sd::CustomAnimationPane::CustomAnimationPane(), Exception caught!" );
+	}
+
+	onSelectionChanged();
+	updateControls();
+
+	FreeResource();
+}
+
+// --------------------------------------------------------------------
+
+DiagramDesignPane::~DiagramDesignPane()
+{
+    if( mpTag.is() )
+    {
+        mpTag->Dispose();
+        mpTag.clear();
+    }    
+	removeListener();
+}
+
+// --------------------------------------------------------------------
+
+void DiagramDesignPane::DataChanged( const DataChangedEvent& /*rDCEvt*/ )
+{
+	updateLayout();
+}
+
+// --------------------------------------------------------------------
+
+void DiagramDesignPane::Resize()
+{
+	updateLayout();
+}
+
+// --------------------------------------------------------------------
+
+static SfxBindings* getBindings( ViewShellBase& rBase )
+{
+	if( rBase.GetMainViewShell().get() && rBase.GetMainViewShell()->GetViewFrame() )
+		return &rBase.GetMainViewShell()->GetViewFrame()->GetBindings();
+	else
+		return 0;
+}
+
+// --------------------------------------------------------------------
+
+static SfxDispatcher* getDispatcher( ViewShellBase& rBase )
+{
+	if( rBase.GetMainViewShell().get() && rBase.GetMainViewShell()->GetViewFrame() )
+		return rBase.GetMainViewShell()->GetViewFrame()->GetDispatcher();
+	else
+		return 0;
+}
+
+// --------------------------------------------------------------------
+
+IMPL_LINK( DiagramDesignPane, implValueSetHdl, Control*, EMPTYARG )
+{
+	mbStyleSelected = true;
+	if( !mbModal )
+		ApplyStyle();
+	return 0;
+}
+
+// --------------------------------------------------------------------
+
+void DiagramDesignPane::ApplyStyle()
+{
+	try
+	{
+		OUString sStyleName;
+		ValueSet* pValueSet = static_cast< ValueSet* >( mxControls[CT_DIAGRAM_STYLES].get() );
+		sal_Int32 nIndex = static_cast< sal_Int32 >( pValueSet->GetSelectItemId() ) - 1;
+
+		if( (nIndex >= 0) && (nIndex < mxDiagramFamily->getCount()) )
+		{
+			Reference< XNameAccess > xNames( mxDiagramFamily, UNO_QUERY_THROW );
+			sStyleName = xNames->getElementNames()[nIndex];
+		}
+
+		if( sStyleName.getLength() == 0 )
+			return;
+
+		SdrView* pView = mrBase.GetDrawView();
+		if( mxSelectedDiagram.is() )
+		{
+			if( pView )
+			{
+#if 0
+				SfxRequest aReq( SID_DIAGRAM_STYLE, SFX_CALLMODE_SYNCHRON, SFX_APP()->GetPool() );
+				aReq.AppendItem( SfxStringItem( SID_DIAGRAM_STYLE, sStyleName ) );
+				
+				rtl::Reference< sdr::SelectionController > xController( pView->getSelectionController() );
+				if( xController.is() )
+					xController->Execute( aReq );
+
+				SfxBindings* pBindings = getBindings( mrBase );
+				if( pBindings )
+				{
+					pBindings->Invalidate( SID_UNDO );
+					pBindings->Invalidate( SID_REDO );
+				}
+#endif
+			}
+		}
+		else
+		{
+#if 0
+			SfxDispatcher* pDispatcher = getDispatcher( mrBase );
+			SfxStringItem aArg( SID_DIAGRAM_STYLE, sStyleName );
+			pDispatcher->Execute(SID_INSERT_DIAGRAM, SFX_CALLMODE_ASYNCHRON, &aArg, 0 );
+#endif
+		}
+	}
+	catch( Exception& )
+	{
+		DBG_ERROR("DiagramDesignPane::implValueSetHdl(), exception caught!");
+	}
+}
+
+// --------------------------------------------------------------------
+
+IMPL_LINK( DiagramDesignPane, implCheckBoxHdl, Control*, EMPTYARG )
+{
+	mbOptionsChanged = true;
+
+	if( !mbModal )
+		ApplyOptions();
+
+	FillDesignPreviewControl();
+	return 0;
+}
+
+// --------------------------------------------------------------------
+
+void DiagramDesignPane::ApplyOptions()
+{
+	static sal_uInt16 gParamIds[CB_BANDED_COLUMNS-CB_HEADER_ROW+1] =
+	{
+		ID_VAL_USEFIRSTROWSTYLE, ID_VAL_USELASTROWSTYLE, ID_VAL_USEBANDINGROWSTYLE, 
+		ID_VAL_USEFIRSTCOLUMNSTYLE, ID_VAL_USELASTCOLUMNSTYLE, ID_VAL_USEBANDINGCOLUMNSTYLE
+	};
+
+	if( mxSelectedDiagram.is() )
+	{
+#if 0
+		SfxRequest aReq( SID_DIAGRAM_STYLE_SETTINGS, SFX_CALLMODE_SYNCHRON, SFX_APP()->GetPool() );
+			
+		for( sal_uInt16 i = 0; i < (CB_BANDED_COLUMNS-CB_HEADER_ROW+1); ++i )
+		{
+			aReq.AppendItem( SfxBoolItem( gParamIds[i], static_cast< CheckBox* >( mxControls[CB_HEADER_ROW+i].get() )->IsChecked() ) );
+		}
+
+		SdrView* pView = mrBase.GetDrawView();
+		if( pView )
+		{
+			rtl::Reference< sdr::SelectionController > xController( pView->getSelectionController() );
+			if( xController.is() )
+			{
+				xController->Execute( aReq );
+
+				SfxBindings* pBindings = getBindings( mrBase );
+				if( pBindings )
+				{
+					pBindings->Invalidate( SID_UNDO );
+					pBindings->Invalidate( SID_REDO );
+				}
+			}
+		}
+#endif
+	}
+}
+
+// --------------------------------------------------------------------
+
+void DiagramDesignPane::onSelectionChanged()
+{
+	Reference< XPropertySet > xNewSelection;
+
+    if( mpTag.is() )
+    {
+        mpTag->Dispose();
+        mpTag.clear();
+    }
+
+	if( mxView.is() ) try
+	{
+		Reference< XSelectionSupplier >  xSel( mxView, UNO_QUERY_THROW );
+		if (xSel.is())
+		{
+			Any aSel( xSel->getSelection() );
+			Sequence< XShape > xShapeSeq;
+			if( aSel >>= xShapeSeq )
+			{
+				if( xShapeSeq.getLength() == 1 )
+					aSel <<= xShapeSeq[0];
+			}
+			else
+			{
+				Reference< XShapes > xShapes( aSel, UNO_QUERY );
+				if( xShapes.is() && (xShapes->getCount() == 1) )
+					aSel <<= xShapes->getByIndex(0);
+			}
+
+			Reference< XShapeDescriptor > xDesc( aSel, UNO_QUERY );
+			if( xDesc.is() && xDesc->getShapeType().equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( "com.sun.star.drawing.DiagramShape" ) ) )
+			{
+				xNewSelection = Reference< XPropertySet >::query( xDesc );
+			}
+		}
+	}
+	catch( Exception& )
+	{
+		DBG_ERROR( "sd::DiagramDesignPane::onSelectionChanged(), Exception caught!" );
+	}
+
+    ::sd::View* pView = 0;
+    if( mxView.is() )
+    {
+        ::boost::shared_ptr<ViewShell> xViewShell( mrBase.GetMainViewShell() );
+        if( xViewShell.get() )
+            pView = xViewShell->GetView();
+    }
+
+	if( mxSelectedDiagram != xNewSelection )
+	{
+		mxSelectedDiagram = xNewSelection;
+		updateControls();
+
+        SvxShape* pShape=dynamic_cast<SvxShape*>(mxSelectedDiagram.get());
+        if( pShape )
+        {
+            sdr::diagram::SdrDiagramObj* pDgmShape=
+                dynamic_cast<sdr::diagram::SdrDiagramObj*>(pShape->GetSdrObject()); 
+            if( pDgmShape && pView )
+            {
+                mpTag.set( new DiagramTag( *pDgmShape,
+                                           *pView,
+                                           true ));
+            }
+        }
+	}
+
+    if( pView )
+        pView->updateHandles();
+}
+
+// --------------------------------------------------------------------
+
+void DiagramDesignPane::updateLayout()
+{
+	::Size aPaneSize( GetSizePixel() );
+    if(IsVisible() && aPaneSize.Width() > 0)
+    {
+		Point aOffset( LogicToPixel( Point(3,3), MAP_APPFONT ) );
+
+		ValueSet* pValueSet = static_cast< ValueSet* >( mxControls[CT_DIAGRAM_STYLES].get() );
+		Size aValueSetSize;
+
+		if( !mbModal )
+		{
+			const long nOptionsHeight = mnOrgOffsetY[CB_BANDED_COLUMNS] + mxControls[CB_BANDED_COLUMNS]->GetSizePixel().Height() + aOffset.Y();
+
+			const long nStylesHeight = aPaneSize.Height() - nOptionsHeight;
+
+			// set with of controls to size of pane
+			for( sal_Int32 nId = 0; nId < DESIGNPANE_CONTROL_COUNT; ++nId )
+			{
+				Size aSize( mxControls[nId]->GetSizePixel() );
+				aSize.Width() = aPaneSize.Width() - aOffset.X() - mxControls[nId]->GetPosPixel().X();
+				mxControls[nId]->SetSizePixel( aSize );
+				mxControls[nId]->SetPaintTransparent(TRUE);
+				mxControls[nId]->SetBackground();
+			}
+			aValueSetSize = Size( aPaneSize.Width() - 2 * aOffset.X(), nStylesHeight - mxControls[FL_DIAGRAM_STYLES]->GetSizePixel().Height() - mnOrgOffsetY[FL_DIAGRAM_STYLES]  );
+		}
+		else
+		{
+			aValueSetSize = pValueSet->GetSizePixel();
+		}
+
+
+		// Calculate the number of rows and columns.
+        if( pValueSet->GetItemCount() > 0 )
+        {
+            Image aImage = pValueSet->GetItemImage(pValueSet->GetItemId(0));
+            Size aItemSize = pValueSet->CalcItemSizePixel(aImage.GetSizePixel());
+			pValueSet->SetItemWidth( aItemSize.Width() );
+			pValueSet->SetItemHeight( aItemSize.Height() );
+			
+            aItemSize.Width() += 10;
+            aItemSize.Height() += 10;
+            int nColumnCount = (aValueSetSize.Width() - pValueSet->GetScrollWidth()) / aItemSize.Width();
+            if (nColumnCount < 1)
+                nColumnCount = 1;
+
+			int nRowCount = (pValueSet->GetItemCount() + nColumnCount - 1) / nColumnCount;
+	        if (nRowCount < 1)
+		        nRowCount = 1;
+
+			int nVisibleRowCount = (aValueSetSize.Height()+2) / aItemSize.Height();
+
+			pValueSet->SetLineCount ( (nRowCount < nVisibleRowCount) ? (USHORT)nRowCount : 0 );
+
+			pValueSet->SetColCount ((USHORT)nColumnCount);
+            pValueSet->SetLineCount ((USHORT)nRowCount);
+ 
+			if( !mbModal )
+			{
+				WinBits nStyle = pValueSet->GetStyle() & ~(WB_VSCROLL);
+				if( nRowCount < nVisibleRowCount )
+				{
+					aValueSetSize.Height() = nRowCount * aItemSize.Height();
+				}
+				else if( nRowCount > nVisibleRowCount )
+				{
+					nStyle |= WB_VSCROLL;
+				}
+				pValueSet->SetStyle( nStyle );
+			}
+       }
+
+		ValueSet* pValueSet2 = static_cast< ValueSet* >( mxControls[CT_DIAGRAM_LIST].get() );
+        FixedLine* pFlList = static_cast< FixedLine* >( mxControls[FL_DIAGRAM_LIST].get() );
+
+		if( !mbModal )
+		{
+			pValueSet->SetSizePixel( Size(aValueSetSize.Width(), 
+                                          aValueSetSize.Height()/2) );
+			pFlList->SetPosPixel( pValueSet->GetPosPixel() + 
+                                  Point(0,pValueSet->GetSizePixel().Height()+2) );
+			pValueSet2->SetSizePixel( Size(aValueSetSize.Width(), 
+                                           aValueSetSize.Height()/2 - 13) );
+			pValueSet2->SetPosPixel( pFlList->GetPosPixel() + 
+                                     Point(0,30) );
+
+			pValueSet->SetBackground( GetSettings().GetStyleSettings().GetWindowColor() );
+			pValueSet->SetColor( GetSettings().GetStyleSettings().GetWindowColor() );
+
+			pValueSet2->SetBackground( GetSettings().GetStyleSettings().GetWindowColor() );
+			pValueSet2->SetColor( GetSettings().GetStyleSettings().GetWindowColor() );
+
+			Point aPos( pValueSet->GetPosPixel() );
+
+			// shift show options section down
+			const long nOptionsPos = aPos.Y() + aValueSetSize.Height();
+			for( sal_Int32 nId = FL_STYLE_OPTIONS; nId <= CB_BANDED_COLUMNS; ++nId )
+			{
+				Point aCPos( mxControls[nId]->GetPosPixel() );
+				aCPos.X() = ( nId == FL_STYLE_OPTIONS ?  1 : 2 ) * aOffset.X();
+				aCPos.Y() = mnOrgOffsetY[nId] + nOptionsPos;
+				mxControls[nId]->SetPosPixel( aCPos );
+			}
+		}
+    }
+
+	if( !mbModal )
+		SetBackground( GetSettings().GetStyleSettings().GetWindowColor() );
+}
+
+// --------------------------------------------------------------------
+
+void DiagramDesignPane::updateControls()
+{
+	static sal_Bool gDefaults[CB_BANDED_COLUMNS-CB_HEADER_ROW+1] = { sal_True, sal_False, sal_True, sal_False, sal_False, sal_False };
+
+	const bool bHasDiagram = mxSelectedDiagram.is();
+	for( USHORT i = CB_HEADER_ROW; i <= CB_BANDED_COLUMNS; ++i )
+	{
+		static_cast< CheckBox* >( mxControls[i].get() )->Check( TRUE );
+		mxControls[i]->Enable(bHasDiagram ? TRUE : FALSE );
+	}
+
+	FillDesignPreviewControl();
+	updateLayout();
+
+
+	USHORT nSelection = 0;
+	if( mxSelectedDiagram.is() )
+	{
+	}
+}
+
+// --------------------------------------------------------------------
+
+void DiagramDesignPane::addListener()
+{
+	Link aLink( LINK(this,DiagramDesignPane,EventMultiplexerListener) );
+    mrBase.GetEventMultiplexer()->AddEventListener (
+        aLink,
+        tools::EventMultiplexerEvent::EID_EDIT_VIEW_SELECTION
+        | tools::EventMultiplexerEvent::EID_CURRENT_PAGE
+        | tools::EventMultiplexerEvent::EID_MAIN_VIEW_REMOVED
+        | tools::EventMultiplexerEvent::EID_MAIN_VIEW_ADDED
+        | tools::EventMultiplexerEvent::EID_DISPOSING);
+}
+
+// --------------------------------------------------------------------
+
+void DiagramDesignPane::removeListener()
+{
+	Link aLink( LINK(this,DiagramDesignPane,EventMultiplexerListener) );
+    mrBase.GetEventMultiplexer()->RemoveEventListener( aLink );
+}
+
+// --------------------------------------------------------------------
+
+IMPL_LINK(DiagramDesignPane,EventMultiplexerListener,
+    tools::EventMultiplexerEvent*,pEvent)
+{
+    switch (pEvent->meEventId)
+    {
+        case tools::EventMultiplexerEvent::EID_CURRENT_PAGE:
+        case tools::EventMultiplexerEvent::EID_EDIT_VIEW_SELECTION:
+            onSelectionChanged();
+            break;
+
+        case tools::EventMultiplexerEvent::EID_MAIN_VIEW_REMOVED:
+            mxView = Reference<XDrawView>();
+            onSelectionChanged();
+            break;
+
+        case tools::EventMultiplexerEvent::EID_MAIN_VIEW_ADDED:
+            mxView = Reference<XDrawView>::query( mrBase.GetController() );
+            onSelectionChanged();
+            break;
+    }
+    return 0;
+}
+
+// --------------------------------------------------------------------
+
+void DiagramDesignPane::FillDesignPreviewControl()
+{
+	ValueSet* pValueSet = static_cast< ValueSet* >( mxControls[CT_DIAGRAM_STYLES].get() );
+
+	USHORT nSelectedItem = pValueSet->GetSelectItemId();
+	pValueSet->Clear();
+	try
+	{
+		if( mxSelectedDiagram.is() )
+		{
+            // settings
+		}
+
+		sal_Bool bIsPageDark = sal_False;
+		if( mxView.is() )
+		{
+			Reference< XPropertySet > xPageSet( mxView->getCurrentPage(), UNO_QUERY );
+			if( xPageSet.is() )
+			{
+				const OUString sIsBackgroundDark( RTL_CONSTASCII_USTRINGPARAM( "IsBackgroundDark" ) );
+				xPageSet->getPropertyValue(sIsBackgroundDark) >>= bIsPageDark;
+			}
+		}
+
+        // write settings
+	}
+	catch( Exception& )
+	{
+		DBG_ERROR("sd::DiagramDesignPane::FillDesignPreviewControl(), exception caught!");
+	}
+	pValueSet->SelectItem(nSelectedItem);
+}
+
+// ====================================================================
+
+DiagramDesignDialog::DiagramDesignDialog(::Window* pParent, ViewShellBase& rBase )
+: ModalDialog( pParent, SdResId( DLG_DIAGRAMDESIGNPANE ))
+, mrBase( rBase )
+{
+	mxFlSep1.reset( new FixedLine( this, SdResId( FL_SEP1 ) ) );
+	mxFlSep2.reset( new FixedLine( this, SdResId( FL_SEP2 ) ) );
+	mxHelpButton.reset( new HelpButton( this, SdResId( BTN_HELP ) ) );
+	mxOkButton.reset( new OKButton( this, SdResId( BTN_OK ) ) );
+	mxCancelButton.reset( new CancelButton( this, SdResId( BTN_CANCEL ) ) );
+	FreeResource();
+
+	mpDesignPane.reset( new DiagramDesignPane( this, rBase, true ) );
+	mpDesignPane->Hide();
+}
+
+// --------------------------------------------------------------------
+
+short DiagramDesignDialog::Execute()
+{
+	if( ModalDialog::Execute() )
+	{
+		if( mpDesignPane->isStyleChanged() )
+			mpDesignPane->ApplyStyle();
+
+		if( mpDesignPane->isOptionsChanged() )
+			mpDesignPane->ApplyOptions();
+		return TRUE;
+	}
+	return FALSE;
+}
+
+// ====================================================================
+
+::Window * createDiagramDesignPanel( ::Window* pParent, ViewShellBase& rBase )
+{
+	return new DiagramDesignPane( pParent, rBase, false );
+}
+
+// ====================================================================
+
+void showDiagramDesignDialog( ::Window* pParent, ViewShellBase& rBase )
+{
+	boost::scoped_ptr< DiagramDesignDialog > xDialog( new DiagramDesignDialog( pParent, rBase ) );
+	xDialog->Execute();
+}
+
+
+}
+
+
diff --git sd/source/ui/diagram/DiagramDesignPane.hrc sd/source/ui/diagram/DiagramDesignPane.hrc
new file mode 100644
index 0000000..3ffecd9
--- /dev/null
+++ sd/source/ui/diagram/DiagramDesignPane.hrc
@@ -0,0 +1,56 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: TableDesignPane.hrc,v $
+ * $Revision: 1.3 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef _SD_DIAGRAMDESIGNPANE_HRC
+#define _SD_DIAGRAMDESIGNPANE_HRC
+
+#define FL_STYLE_OPTIONS	0
+#define CB_HEADER_ROW		1
+#define CB_TOTAL_ROW		2
+#define CB_BANDED_ROWS		3
+#define CB_FIRST_COLUMN		4
+#define CB_LAST_COLUMN		5
+#define CB_BANDED_COLUMNS	6
+
+#define FL_DIAGRAM_STYLES		7
+#define CT_DIAGRAM_STYLES		8
+
+#define FL_DIAGRAM_LIST		    9
+#define CT_DIAGRAM_LIST		    10
+
+#define DESIGNPANE_CONTROL_COUNT 11
+
+#define FL_SEP1 20
+#define FL_SEP2 21
+#define BTN_HELP 22
+#define BTN_OK 23
+#define BTN_CANCEL 24
+
+#endif // _SD_DIAGRAMDESIGNPANE_HRC
diff --git sd/source/ui/diagram/DiagramDesignPane.hxx sd/source/ui/diagram/DiagramDesignPane.hxx
new file mode 100644
index 0000000..b2d3486
--- /dev/null
+++ sd/source/ui/diagram/DiagramDesignPane.hxx
@@ -0,0 +1,131 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: TableDesignPane.hxx,v $
+ * $Revision: 1.3 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef _SD_TABLEDESIGNPANE_HXX
+#define _SD_TABLEDESIGNPANE_HXX
+
+#include <com/sun/star/beans/XPropertySet.hpp>
+#include <com/sun/star/ui/XUIElement.hpp>
+#include <com/sun/star/drawing/XDrawView.hpp>
+#include <com/sun/star/container/XIndexAccess.hpp>
+
+#include <vcl/dialog.hxx>
+#include <vcl/fixed.hxx>
+#include <vcl/button.hxx>
+#include <svtools/valueset.hxx>
+
+#include <boost/scoped_ptr.hpp>
+
+#include "DiagramDesignPane.hrc"
+#include "diagramtag.hxx"
+
+namespace sd
+{
+
+namespace tools {
+class EventMultiplexerEvent;
+}
+
+class ViewShellBase;
+
+// --------------------------------------------------------------------
+
+class DiagramDesignPane : public Control
+{
+public:
+	DiagramDesignPane( ::Window* pParent, ViewShellBase& rBase, bool bModal );
+	virtual ~DiagramDesignPane();
+
+	// callbacks
+	void onSelectionChanged();
+
+	// Control
+	virtual void Resize();
+
+    virtual void    DataChanged( const DataChangedEvent& rDCEvt );
+
+	void ApplyOptions();
+	void ApplyStyle();
+
+	bool isStyleChanged() const { return mbStyleSelected; }
+	bool isOptionsChanged() const { return mbOptionsChanged; }
+
+private:
+	void addListener();
+	void removeListener();
+	void updateLayout();
+	void updateControls();
+
+	void FillDesignPreviewControl();
+
+    DECL_LINK(EventMultiplexerListener, tools::EventMultiplexerEvent*);
+	DECL_LINK(implValueSetHdl, Control* );
+	DECL_LINK(implCheckBoxHdl, Control* );
+
+private:
+	ViewShellBase& mrBase;
+	const rtl::OUString msDiagramTemplate;
+
+	boost::scoped_ptr< Control > mxControls[DESIGNPANE_CONTROL_COUNT];
+	int mnOrgOffsetY[DESIGNPANE_CONTROL_COUNT];
+
+	::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > mxSelectedDiagram;
+	::com::sun::star::uno::Reference< ::com::sun::star::drawing::XDrawView > mxView;
+	::com::sun::star::uno::Reference< ::com::sun::star::container::XIndexAccess > mxDiagramFamily;
+	::com::sun::star::uno::Reference< ::com::sun::star::ui::XUIElement > mxToolbar;
+
+    rtl::Reference< DiagramTag > mpTag;
+	bool mbModal;
+	bool mbStyleSelected;
+	bool mbOptionsChanged;
+};
+
+// --------------------------------------------------------------------
+
+class DiagramDesignDialog : public ModalDialog
+{
+public:
+	DiagramDesignDialog( ::Window* pParent, ViewShellBase& rBase );
+
+	virtual short Execute();
+private:
+	ViewShellBase& mrBase;
+	boost::scoped_ptr< DiagramDesignPane > mpDesignPane;
+
+	boost::scoped_ptr< FixedLine >		 mxFlSep1;
+	boost::scoped_ptr< FixedLine >		 mxFlSep2;
+	boost::scoped_ptr< HelpButton >		 mxHelpButton;
+	boost::scoped_ptr< OKButton >		 mxOkButton;
+	boost::scoped_ptr< CancelButton >	 mxCancelButton;
+};
+
+}
+
+#endif // _SD_TABLEFORMATPANE_HXX
diff --git sd/source/ui/diagram/DiagramDesignPane.src sd/source/ui/diagram/DiagramDesignPane.src
new file mode 100644
index 0000000..32ef4d6
--- /dev/null
+++ sd/source/ui/diagram/DiagramDesignPane.src
@@ -0,0 +1,173 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: TableDesignPane.src,v $
+ * $Revision: 1.3 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include "DiagramDesignPane.hrc"
+#include "glob.hrc"
+
+Control DLG_DIAGRAMDESIGNPANE
+{
+	OutputSize = TRUE;
+	DialogControl = TRUE;
+	Border = FALSE;
+
+	Size = MAP_APPFONT( 264, 160 );
+	Text [ en-US ] = "Diagram Design";
+	
+	FixedLine FL_STYLE_OPTIONS+1
+	{
+        Pos = MAP_APPFONT ( 143, 3 ) ;
+        Size = MAP_APPFONT ( 120, 10 ) ;
+		OutputSize = TRUE;	
+		Text [ en-US ] = "Show";
+	};
+	
+	CheckBox CB_HEADER_ROW+1
+	{
+        Pos = MAP_APPFONT ( 146, 16 ) ;
+        Size = MAP_APPFONT ( 120 , 10 ) ;
+		TabStop = TRUE ;
+		Text [ en-US ] = "Header Row" ;	
+	};
+	
+	CheckBox CB_TOTAL_ROW+1
+	{
+        Pos = MAP_APPFONT ( 146, 29 ) ;
+        Size = MAP_APPFONT ( 120 , 10 ) ;
+		TabStop = TRUE ;
+		Text [ en-US ] = "Total Row" ;	
+	};
+	
+	CheckBox CB_BANDED_ROWS+1
+	{
+        Pos = MAP_APPFONT ( 146, 42 ) ;
+        Size = MAP_APPFONT ( 120 , 10 ) ;
+		TabStop = TRUE ;
+		Text [ en-US ] = "Banded Rows" ;	
+	};
+
+	CheckBox CB_FIRST_COLUMN+1
+	{
+        Pos = MAP_APPFONT ( 146, 55 ) ;
+        Size = MAP_APPFONT ( 120 , 10 ) ;
+		TabStop = TRUE ;
+		Text [ en-US ] = "First Column" ;	
+	};
+
+	CheckBox CB_LAST_COLUMN+1
+	{
+        Pos = MAP_APPFONT ( 146, 68 ) ;
+        Size = MAP_APPFONT ( 120 , 10 ) ;
+		TabStop = TRUE ;
+		Text [ en-US ] = "Last Column" ;	
+	};
+
+	CheckBox CB_BANDED_COLUMNS+1
+	{
+        Pos = MAP_APPFONT ( 146, 82 ) ;
+        Size = MAP_APPFONT ( 120 , 10 ) ;
+		TabStop = TRUE ;
+		Text [ en-US ] = "Banded Columns" ;	
+	};
+
+	FixedLine FL_DIAGRAM_STYLES+1
+	{
+        Pos = MAP_APPFONT ( 6, 3 ) ;
+		Size = MAP_APPFONT( 120, 8 );
+		OutputSize = TRUE;
+		Text [ en-US ] = "Styles";
+	};
+	
+	Control CT_DIAGRAM_STYLES+1
+	{
+        Pos = MAP_APPFONT ( 6, 14 ) ;
+		Size = MAP_APPFONT( 120, 143 );
+		Border = TRUE ;
+		TabStop = TRUE ;	
+	};
+
+	FixedLine FL_DIAGRAM_LIST+1
+	{
+        Pos = MAP_APPFONT ( 6, 3 ) ;
+		Size = MAP_APPFONT( 120, 8 );
+		OutputSize = TRUE;
+		Text [ en-US ] = "List";
+	};
+	
+	Control CT_DIAGRAM_LIST+1
+	{
+        Pos = MAP_APPFONT ( 6, 14 ) ;
+		Size = MAP_APPFONT( 120, 143 );
+		Border = TRUE ;
+		TabStop = TRUE ;	
+	};
+};
+
+ModalDialog DLG_DIAGRAMDESIGNPANE
+{
+	OutputSize = TRUE;
+	SVLook = TRUE ;
+	Moveable = TRUE ;
+	Closeable = TRUE ;
+	Size = MAP_APPFONT( 272, 198 );
+
+	Text [ en-US ] = "Diagram Design";
+
+	FixedLine FL_SEP1
+	{
+		Pos = MAP_APPFONT( 135, 14 );
+		Size = MAP_APPFONT( 8, 143 );
+		Vert = TRUE ;
+	};
+	FixedLine FL_SEP2
+	{
+		Pos = MAP_APPFONT ( 0 , 160 ) ;
+        Size = MAP_APPFONT ( 272 , 12 ) ;
+	};
+
+	HelpButton BTN_HELP
+	{
+		Pos = MAP_APPFONT ( 6 , 176 ) ;
+		Size = MAP_APPFONT ( 50 , 14 ) ;
+		TabStop = TRUE ;
+	};	
+	OKButton BTN_OK
+	{
+		Pos = MAP_APPFONT ( 158 , 176 ) ;
+		Size = MAP_APPFONT ( 50 , 14 ) ;
+		TabStop = TRUE ;
+		DefButton = TRUE ;
+	};
+	CancelButton BTN_CANCEL
+	{
+		Pos = MAP_APPFONT ( 211 , 176 ) ;
+		Size = MAP_APPFONT ( 50 , 14 ) ;
+		TabStop = TRUE ;
+	};
+};
diff --git sd/source/ui/diagram/diagramtag.cxx sd/source/ui/diagram/diagramtag.cxx
new file mode 100644
index 0000000..16309b3
--- /dev/null
+++ sd/source/ui/diagram/diagramtag.cxx
@@ -0,0 +1,671 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: motionpathtag.cxx,v $
+ * $Revision: 1.3 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_sd.hxx"
+
+#include <com/sun/star/util/XChangesNotifier.hpp>
+#include <com/sun/star/xml/xpath/XXPathAPI.hpp>
+#include <com/sun/star/xml/dom/XDocument.hpp>
+#include <com/sun/star/xml/dom/XCharacterData.hpp>
+#include <com/sun/star/beans/XPropertySet.hpp>
+#include <com/sun/star/container/XEnumerationAccess.hpp>
+#include <com/sun/star/text/XText.hpp>
+#include <com/sun/star/text/XTextContent.hpp>
+#include <com/sun/star/text/ControlCharacter.hpp>
+
+#include <drawinglayer/primitive2d/polypolygonprimitive2d.hxx>
+#include <drawinglayer/primitive2d/unifiedalphaprimitive2d.hxx>
+#include <basegfx/range/b2drange.hxx>
+#include <basegfx/matrix/b2dhommatrix.hxx>
+#include <basegfx/polygon/b2dpolypolygoncutter.hxx>
+#include <basegfx/polygon/b2dpolygontools.hxx>
+#include <basegfx/polygon/b2dpolypolygon.hxx>
+#include <vcl/canvastools.hxx>
+#include <comphelper/processfactory.hxx>
+
+#include <sfx2/viewfrm.hxx>
+#include <sfx2/dispatch.hxx>
+#include <sfx2/request.hxx>
+
+#include <svx/sdr/overlay/overlaymanager.hxx>
+#include <svx/sdr/overlay/overlayprimitive2dsequenceobject.hxx>
+#include <svx/svdetc.hxx>
+#include <svx/svdorect.hxx>
+#include <svx/outliner.hxx>
+#include <svx/svdpagv.hxx>
+#include <svx/sdrpagewindow.hxx>
+#include <svx/sdrpaintwindow.hxx>
+#include <svx/svddrgmt.hxx>
+#include <svx/svdodiagram.hxx>
+#include <svx/svdotext.hxx>
+#include <svx/svdpool.hxx>
+#include <svx/xflclit.hxx>
+#include <svx/xfltrit.hxx>
+#include <svx/xlnclit.hxx>
+#include <svx/xlnwtit.hxx>
+#include <svx/xfillit.hxx>
+#include <svx/xenum.hxx>
+
+#include "View.hxx"
+#include "futext.hxx"
+#include "diagramtag.hxx"
+#include "sdpage.hxx"
+#include "drawdoc.hxx"
+#include "ViewShell.hxx"
+#include "zoomlist.hxx"
+#include "app.hrc"
+#include "Window.hxx"
+
+#define C2U(x) OUString( RTL_CONSTASCII_USTRINGPARAM( x ) )
+using ::rtl::OUString;
+using namespace ::com::sun::star::beans;
+using namespace ::com::sun::star::xml;
+using namespace ::com::sun::star::text;
+using namespace ::com::sun::star::container;
+using namespace ::com::sun::star::uno;
+using namespace ::com::sun::star::lang;
+using namespace ::com::sun::star::util;
+using namespace ::com::sun::star::drawing;
+
+namespace sd
+{
+
+const sal_uInt32 SMART_TAG_HDL_NUM = SAL_MAX_UINT32;
+static const int DRGPIX     = 2;                               // Drag MinMove in Pixel
+
+// --------------------------------------------------------------------
+
+class SdDiagramHdl : public SmartHdl
+{
+public:
+	SdDiagramHdl( const SmartTagReference& xTag );
+	virtual void CreateB2dIAObject();
+	virtual BOOL IsFocusHdl() const;
+	virtual Pointer GetSdrDragPointer() const;
+	virtual bool isMarkable() const;
+    virtual bool IsHdlHit(const Point& rPnt) const;
+
+private:
+    const SdrPageWindow* GetBoundRects(basegfx::B2DRange& rInnerBounds,
+                                       basegfx::B2DRange& rOuterBounds,
+                                       basegfx::B2DVector* pScale=NULL) const;
+
+	rtl::Reference< DiagramTag > mxTag;
+};
+
+// --------------------------------------------------------------------
+
+SdDiagramHdl::SdDiagramHdl( const SmartTagReference& xTag )
+: SmartHdl( xTag, Point() )
+, mxTag( dynamic_cast< DiagramTag* >( xTag.get() ) )
+{
+}
+
+// --------------------------------------------------------------------
+
+void SdDiagramHdl::CreateB2dIAObject()
+{
+	// first throw away old one
+	GetRidOfIAObject();
+	
+    basegfx::B2DRange aInnerBounds;
+    basegfx::B2DRange aOuterBounds;
+    basegfx::B2DVector aScale;
+    const SdrPageWindow* pPageWindow=NULL;
+    if( !(pPageWindow=GetBoundRects(aInnerBounds, aOuterBounds, &aScale)) )
+        return;
+
+    static const double fSelectedAlpha(0.3);
+    static const double fUnselectedAlpha(0.1);
+    static const basegfx::BColor aTagColor(79/256.0,
+                                           129/256.0,
+                                           189/256.0);
+
+    const double fMaxExtend(std::max(aInnerBounds.getWidth(),
+                                     aInnerBounds.getHeight()));
+    basegfx::B2DPolyPolygon aBorderPoly=
+        basegfx::tools::solvePolygonOperationDiff(
+            basegfx::tools::prepareForPolygonOperation(
+                basegfx::tools::createPolygonFromRect(aOuterBounds,
+                                                      2*aScale.getX()/fMaxExtend)),
+            basegfx::tools::prepareForPolygonOperation(
+                basegfx::tools::createPolygonFromRect(aInnerBounds,
+                                                      aScale.getX()/fMaxExtend)));
+
+    drawinglayer::primitive2d::Primitive2DSequence aBorder;
+    drawinglayer::primitive2d::appendPrimitive2DReferenceToPrimitive2DSequence(
+        aBorder, 
+        new drawinglayer::primitive2d::PolyPolygonColorPrimitive2D(
+            aBorderPoly,
+            aTagColor));
+
+    drawinglayer::primitive2d::Primitive2DReference aAlphaGroup(
+        new drawinglayer::primitive2d::UnifiedAlphaPrimitive2D(
+            aBorder, 
+            IsSelected() ? fSelectedAlpha : fUnselectedAlpha));
+    drawinglayer::primitive2d::Primitive2DSequence aResultTransparent = 
+        drawinglayer::primitive2d::Primitive2DSequence(&aAlphaGroup, 1);
+                            
+    sdr::overlay::OverlayObject* pNewOverlayObject = 
+        new sdr::overlay::OverlayPrimitive2DSequenceObject(aResultTransparent);
+
+    // OVERLAYMANAGER
+    if(pNewOverlayObject)
+    {
+        pNewOverlayObject->setHittable(true);
+        pPageWindow->GetOverlayManager()->add(*pNewOverlayObject);
+        maOverlayGroup.append(*pNewOverlayObject);
+    }
+}
+
+// --------------------------------------------------------------------
+
+BOOL SdDiagramHdl::IsFocusHdl() const
+{
+	return TRUE;
+}
+
+// --------------------------------------------------------------------
+
+bool SdDiagramHdl::isMarkable() const
+{
+	return true;
+}
+
+// --------------------------------------------------------------------
+
+const SdrPageWindow* SdDiagramHdl::GetBoundRects(basegfx::B2DRange& rInnerBounds,
+                                                 basegfx::B2DRange& rOuterBounds,
+                                                 basegfx::B2DVector* pScale ) const
+{
+	if(!pHdlList)
+        return NULL;
+
+    SdrMarkView* pView = pHdlList->GetView();
+    if(!pView || pView->areMarkHandlesHidden())
+        return NULL;
+
+    SdrPageView* pPageView = pView->GetSdrPageView();
+    if(!pPageView)
+        return NULL;
+
+    for(sal_uInt32 b(0L); b < pPageView->PageWindowCount(); b++)
+    {
+        // const SdrPageViewWinRec& rPageViewWinRec = rPageViewWinList[b];
+        const SdrPageWindow& rPageWindow = *pPageView->GetPageWindow(b);
+
+        if(rPageWindow.GetPaintWindow().OutputToWindow())
+        {
+            if(rPageWindow.GetOverlayManager())
+            {
+                static const double fPixelWidth=5.0;
+
+                const basegfx::B2DVector aScale=
+                    rPageWindow.GetOverlayManager()->getOutputDevice().GetInverseViewTransformation() *
+                    basegfx::B2DVector(fPixelWidth,
+                                       fPixelWidth);
+                rInnerBounds = vcl::unotools::b2DRectangleFromRectangle(
+                    GetObj()->GetLastBoundRect());
+                rOuterBounds = rInnerBounds; rOuterBounds.grow(aScale.getX());
+
+                if( pScale )
+                    *pScale = aScale;
+
+                return &rPageWindow;
+            }
+        }
+    }
+
+    return NULL;
+}
+
+// --------------------------------------------------------------------
+
+bool SdDiagramHdl::IsHdlHit(const Point& rPnt) const
+{
+    basegfx::B2DRange aInnerBounds;
+    basegfx::B2DRange aOuterBounds;
+    if( !GetBoundRects(aInnerBounds, aOuterBounds) )
+        return false;
+
+    const basegfx::B2DPoint aPt(rPnt.X(), rPnt.Y());
+    return aOuterBounds.isInside(aPt) && !aInnerBounds.isInside(aPt);
+}
+
+// --------------------------------------------------------------------
+
+Pointer SdDiagramHdl::GetSdrDragPointer() const
+{
+	PointerStyle eStyle = POINTER_NOTALLOWED;
+	if( mxTag.is() )
+	{
+		if( mxTag->isSelected() )
+		{
+			if( !mxTag->getView().IsFrameDragSingles() && mxTag->getView().IsInsObjPointMode() )
+				eStyle = POINTER_CROSS;
+			else
+				eStyle = POINTER_MOVE;
+		}
+		else
+		{
+			eStyle = POINTER_ARROW;
+
+		}
+	}
+	return Pointer( eStyle );
+}
+
+// ====================================================================
+
+DiagramTag::DiagramTag( sdr::diagram::SdrDiagramObj& rObj, ::sd::View& rView, bool bSelected )
+: SmartTag( rView )
+, mrObj( rObj )
+, mpTextObj()
+{
+    if( bSelected )
+        mrView.getSmartTags().select(this);
+}
+
+// --------------------------------------------------------------------
+
+void DiagramTag::extractText( const Reference<XShape>& rxShape )
+{
+    // current layout node we write into. if the mrShape's data DOM
+    // tree does not have enough, we create new ones on the fly
+    sal_Int32 nCurrNode=0;
+
+    // grab data DOM tree from shape
+    Reference< XPropertySet > xDiagramShapePropSet( mrObj.getUnoShape(), 
+                                                    UNO_QUERY_THROW );
+    Reference<dom::XDocument> xDom;
+    if( !(xDiagramShapePropSet->getPropertyValue(String( RTL_CONSTASCII_USTRINGPARAM("DiagramData")))
+          >>= xDom) )
+    {
+        // TODO: fill in default tree
+    }
+
+    Reference< XMultiServiceFactory > xSMgr =
+        ::comphelper::getProcessServiceFactory();
+    Reference< xpath::XXPathAPI > xXPath( 
+        xSMgr->createInstance( 
+            String( RTL_CONSTASCII_USTRINGPARAM("com.sun.star.xml.xpath.XPathAPI"))), 
+        UNO_QUERY_THROW);
+
+    xXPath->registerNS( 
+        String( RTL_CONSTASCII_USTRINGPARAM("dgm")), 
+        String( RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/diagram")) );
+    xXPath->registerNS( 
+        String( RTL_CONSTASCII_USTRINGPARAM("a")), 
+        String( RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main")) );
+
+    Reference< dom::XNode > xNode(xDom, UNO_QUERY_THROW);
+    Reference< dom::XNodeList > xNodeList;
+    try {
+        // select all pt nodes with non-empty text
+        xNodeList = xXPath->selectNodeList(
+            xNode, 
+            String( RTL_CONSTASCII_USTRINGPARAM(
+                        "/dgm:dataModel/dgm:ptLst/dgm:pt/dgm:t/a:p/*/a:t[count(child::text())>0]")));
+    } catch(xpath::XPathException&) {}
+
+
+    Reference< XEnumerationAccess > access( rxShape, 
+                                            UNO_QUERY_THROW );
+    Reference< XEnumeration > enumeration( access->createEnumeration() );
+
+    while( enumeration->hasMoreElements() ) 
+    {
+        Reference< XTextContent > paragraph;
+        Any any ( enumeration->nextElement() );
+
+        if( (any >>= paragraph) )
+        {
+            access.set( paragraph, 
+                        UNO_QUERY_THROW );
+            Reference< XPropertySet > rXPropSet( paragraph, 
+                                                 UNO_QUERY_THROW );
+
+            any = rXPropSet->getPropertyValue( 
+                String( RTL_CONSTASCII_USTRINGPARAM("NumberingLevel") ));
+            sal_Int16 nOutlineLevel = -1;
+            any >>= nOutlineLevel;
+
+            // throw away all non-outline text
+            if( nOutlineLevel != -1 )
+            {
+                Reference< XEnumeration > enumeration2( access->createEnumeration() );
+
+                bool bPropertiesWritten = false;
+                while( enumeration2->hasMoreElements() ) 
+                {
+                    Reference< XTextRange > run;
+                    any = enumeration2->nextElement();
+
+                    if (any >>= run) 
+                    {
+                        if( nCurrNode < xNodeList->getLength() )
+                        {
+                            // enough nodes left, stuff text into
+                            // child of this node
+                            Reference<dom::XCharacterData> xChar(
+                                xNodeList->item(nCurrNode++)->getFirstChild(),
+                                UNO_QUERY_THROW);
+                            xChar->setData(run->getString());
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    // force reload of diagram content
+    mrObj.LayoutShape();
+}
+
+// --------------------------------------------------------------------
+
+void DiagramTag::Notify( SfxBroadcaster& /*rBC*/, const SfxHint& /*rHint*/ )
+{
+}
+
+// --------------------------------------------------------------------
+
+/** returns true if the DiagramTag handled the event. */
+bool DiagramTag::MouseButtonDown( const MouseEvent& rMEvt, SmartHdl& /*rHdl*/, const Window& rWin )
+{
+	if( !isSelected() )
+	{
+		SmartTagReference xTag( this );
+		mrView.getSmartTags().select( xTag );
+		return true;
+	}
+
+	return false;
+}
+
+// --------------------------------------------------------------------
+
+/** returns true if the DiagramTag handled the event. */
+bool DiagramTag::MouseButtonUp( const MouseEvent& rMEvt, SmartHdl& /*rHdl*/, const Window& rWin )
+{
+    if( rMEvt.IsLeft() )
+    {
+        // launch TextObj in edit mode
+        Rectangle aBounds=mrObj.GetLastBoundRect(); 
+        aBounds+=Point(-6000,0);
+
+        // move & zoom view onto text object
+        long nW = (long) (aBounds.GetWidth()  * 1.53);
+        long nH = (long) (aBounds.GetHeight() * 1.53);
+        Point aPos = aBounds.Center();
+        aPos.X() -= nW / 2;
+        aPos.Y() -= nH / 2;
+        if ( nW && nH )
+        {
+            mrView.GetViewShell()->SetZoomRect(Rectangle(aPos, Size(nW, nH)));
+
+            Rectangle aVisAreaWin = mrView.GetViewShell()->GetActiveWindow()->PixelToLogic( 
+                Rectangle( Point(0,0),
+                           mrView.GetViewShell()->GetActiveWindow()->GetOutputSizePixel()) );
+            mrView.GetViewShell()->GetZoomList()->InsertZoomRect(aVisAreaWin);
+        }
+
+        // actually create it & fill content
+        aBounds.setWidth(5900);
+        mpTextObj.reset( new SdrRectObj( OBJ_OUTLINETEXT, 
+                                         aBounds ));
+
+        // make sure object has given height
+        const bool bVertical=false; // TODO
+
+        if(bVertical)
+            mpTextObj->SetVerticalWriting(TRUE);
+
+        SfxItemSet aTempAttr( ((SdDrawDocument*) mrObj.GetModel())->GetPool() );
+        if( bVertical )
+            aTempAttr.Put( SdrTextMinFrameWidthItem( aBounds.GetSize().Width() ) );
+        else
+            aTempAttr.Put( SdrTextMinFrameHeightItem( aBounds.GetSize().Height() ) );
+
+        // get us some fill
+        const OUString aDummyName(C2U("dummycolor"));
+        aTempAttr.Put( XFillStyleItem(XFILL_SOLID) );
+        aTempAttr.Put( XLineStyleItem(XLINE_SOLID) );
+        aTempAttr.Put( XFillColorItem(aDummyName, ::Color(255,0,0)) );
+        aTempAttr.Put( XLineColorItem(aDummyName, ::Color(0,255,0)) );
+        aTempAttr.Put( XFillTransparenceItem(128) );
+        aTempAttr.Put( XLineWidthItem(60) );
+
+        mpTextObj->SetMergedItemSet(aTempAttr);
+        mpTextObj->SetModel(mrObj.GetModel());
+
+        // grab text ifc for shape
+        Reference<XShape> xShape(
+            mpTextObj->getUnoShape(),
+            UNO_QUERY_THROW);
+        Reference< XText > xText( xShape, UNO_QUERY_THROW );
+        Reference< XTextCursor > xAt = xText->createTextCursor();
+
+        Reference< XTextRange > xStart( xAt, UNO_QUERY_THROW );
+        Reference< XPropertySet > xProps( xStart, UNO_QUERY);
+
+        const OUString sNumberingLevel( C2U( "NumberingLevel" ) );
+
+        // select all text data text nodes (if any)
+        Reference< XPropertySet > xDiagramShapePropSet( mrObj.getUnoShape(), 
+                                                        UNO_QUERY_THROW );
+        Reference<dom::XDocument> xDom;
+        if( (xDiagramShapePropSet->getPropertyValue(String( RTL_CONSTASCII_USTRINGPARAM("DiagramData")))
+              >>= xDom) )
+        {
+            Reference< XMultiServiceFactory > xSMgr =
+                ::comphelper::getProcessServiceFactory();
+            Reference< xpath::XXPathAPI > xXPath( 
+                xSMgr->createInstance( 
+                    String( RTL_CONSTASCII_USTRINGPARAM("com.sun.star.xml.xpath.XPathAPI"))), 
+                UNO_QUERY_THROW);
+
+            xXPath->registerNS( 
+                String( RTL_CONSTASCII_USTRINGPARAM("dgm")), 
+                String( RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/diagram")) );
+            xXPath->registerNS( 
+                String( RTL_CONSTASCII_USTRINGPARAM("a")), 
+                String( RTL_CONSTASCII_USTRINGPARAM("http://schemas.openxmlformats.org/drawingml/2006/main")) );
+
+            Reference< dom::XNode > xNode(xDom, UNO_QUERY_THROW);
+            Reference< dom::XNodeList > xNodeList;
+            try {
+                // select all pt nodes with non-empty text
+                xNodeList = xXPath->selectNodeList(
+                    xNode, 
+                    String( RTL_CONSTASCII_USTRINGPARAM(
+                                "/dgm:dataModel/dgm:ptLst/dgm:pt/dgm:t/a:p/*/a:t[count(child::text())>0]")));
+            } catch(xpath::XPathException&) {}
+
+            // push diagram data text into shape
+            for( sal_Int32 i=0; i < xNodeList->getLength(); ++i )
+            {
+                if( i>0 )
+                {
+                    xText->insertControlCharacter( xStart, ControlCharacter::APPEND_PARAGRAPH, sal_False );
+                    xAt->gotoEnd( sal_True );
+                }
+        
+                Reference<dom::XCharacterData> xChar(
+                    xNodeList->item(i)->getFirstChild(),
+                    UNO_QUERY_THROW);
+
+                xText->insertString( xStart, xChar->getData(), sal_False );
+                xProps->setPropertyValue( sNumberingLevel, Any( static_cast< sal_Int16 >( 0 ) ) );
+                xAt->gotoEnd( sal_True );
+            }
+        }
+
+        // Put text object into edit mode.
+        if( mrView.SdrBeginTextEdit(mpTextObj.get(),
+                                    mrView.GetSdrPageView()) )
+        {
+            // Make FuText the current function.
+            SfxUInt16Item aItem (SID_TEXTEDIT, 1);
+            mrView.GetViewShell()->GetViewFrame()->GetDispatcher()->
+                Execute(SID_TEXTEDIT, SFX_CALLMODE_ASYNCHRON |
+                        SFX_CALLMODE_RECORD, &aItem, 0L);
+
+            OutlinerView* pOLV = mrView.GetTextEditOutlinerView();
+            
+            // Move cursor to end of text       
+            ESelection aNewSelection(EE_PARA_NOT_FOUND, 
+                                     EE_INDEX_NOT_FOUND, 
+                                     EE_PARA_NOT_FOUND, 
+                                     EE_INDEX_NOT_FOUND);
+            pOLV->SetSelection(aNewSelection);
+
+            // TODO: fill outliner with diagramming text
+            
+            return true;
+        }
+    }
+
+    return false;
+}
+
+// --------------------------------------------------------------------
+
+/** returns true if the SmartTag consumes this event. */
+bool DiagramTag::KeyInput( const KeyEvent& rKEvt, const Window& rWin )
+{
+	USHORT nCode = rKEvt.GetKeyCode().GetCode();
+	switch( nCode )
+	{
+	case KEY_ESCAPE:
+	{
+		SmartTagReference xThis( this );
+		mrView.getSmartTags().deselect();
+        if( mpTextObj )
+        {
+            mrView.SdrEndTextEdit(true);
+
+            // grab text from object
+            extractText(
+                Reference<XShape>(
+                    mpTextObj->getUnoShape(),
+                    UNO_QUERY_THROW) );
+
+            mpTextObj.reset();
+        }
+		return true;
+	}
+
+	default:
+        return mrView.KeyInput(rKEvt, const_cast<Window*>(&rWin));
+	}
+
+	return false;
+}
+
+// --------------------------------------------------------------------
+
+void DiagramTag::addCustomHandles( SdrHdlList& rHandlerList )
+{
+    SmartTagReference xThis( this );
+    SdDiagramHdl* pHdl = new SdDiagramHdl(xThis);
+    pHdl->SetObjHdlNum( SMART_TAG_HDL_NUM );
+    pHdl->SetPageView( mrView.GetSdrPageView() );
+    pHdl->SetObj(&mrObj);
+    rHandlerList.AddHdl( pHdl );
+
+    if( isSelected() )
+    {
+        mrView.GetSdrPageView()->SetHasMarkedObj(TRUE);
+
+        if( !mrView.IsFrameDragSingles() )
+            pHdl->SetSelected(TRUE);
+    }
+}
+
+// --------------------------------------------------------------------
+
+void DiagramTag::disposing()
+{
+    mrView.updateHandles();
+	SmartTag::disposing();
+}
+
+// --------------------------------------------------------------------
+
+void DiagramTag::select()
+{
+    SmartTag::select();
+}
+
+// --------------------------------------------------------------------
+
+void DiagramTag::deselect()
+{
+    SmartTag::deselect();
+    Dispose();
+}
+
+// --------------------------------------------------------------------
+
+// XChangesListener
+void SAL_CALL DiagramTag::changesOccurred( const ChangesEvent& /*Event*/ ) throw (RuntimeException)
+{
+}
+
+void SAL_CALL DiagramTag::disposing( const EventObject& /*Source*/ ) throw (RuntimeException)
+{
+}
+
+Any SAL_CALL DiagramTag::queryInterface( const ::com::sun::star::uno::Type& aType ) throw (RuntimeException)
+{
+	if( aType == XChangesListener::static_type() )
+		return Any( Reference< XChangesListener >( this ) );
+	if( aType == XEventListener::static_type() )
+		return Any( Reference< XEventListener >( this ) );
+	if( aType == XInterface::static_type() )
+		return Any( Reference< XInterface >( this ) );
+
+	return Any();
+}
+
+void SAL_CALL DiagramTag::acquire() throw ()
+{
+	SimpleReferenceComponent::acquire();
+}
+
+void SAL_CALL DiagramTag::release(  ) throw ()
+{
+	SimpleReferenceComponent::release();
+}
+
+} // end of namespace sd
+
diff --git sd/source/ui/diagram/diagramtag.hxx sd/source/ui/diagram/diagramtag.hxx
new file mode 100644
index 0000000..3753211
--- /dev/null
+++ sd/source/ui/diagram/diagramtag.hxx
@@ -0,0 +1,94 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: motionpathtag.hxx,v $
+ * $Revision: 1.3 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef _SD_DIAGRAMTAG_HXX_
+#define _SD_DIAGRAMTAG_HXX_
+
+#include <com/sun/star/util/XChangesListener.hpp>
+#include <com/sun/star/drawing/XShape.hpp>
+#include <basegfx/polygon/b2dpolypolygon.hxx>
+#include <basegfx/polygon/b2dpolypolygontools.hxx>
+#include "smarttag.hxx"
+
+#include <boost/shared_ptr.hpp>
+
+class SdrRectObj;
+namespace sdr { namespace diagram {
+    class SdrDiagramObj;
+}}
+
+namespace sd {
+
+class View;
+class CustomAnimationPane;
+
+class DiagramTag : public SmartTag, public SfxListener, public ::com::sun::star::util::XChangesListener
+{
+public:
+	DiagramTag( sdr::diagram::SdrDiagramObj& rObj, ::sd::View& rView, bool bSelected );
+
+    virtual void SAL_CALL acquire(  ) throw ();
+    virtual void SAL_CALL release(  ) throw ();
+
+private:
+	/** returns true if the SmartTag handled the event. */
+	virtual bool MouseButtonDown( const MouseEvent&, SmartHdl&, const Window& );
+
+	/** returns true if the SmartTag handled the event. */
+	virtual bool MouseButtonUp( const MouseEvent&, SmartHdl&, const Window& );
+
+	/** returns true if the SmartTag consumes this event. */
+	virtual bool KeyInput( const KeyEvent& rKEvt, const Window& rWin );
+
+	// callbacks from sdr view
+	virtual void Notify( SfxBroadcaster& rBC, const SfxHint& rHint );
+
+    // XChangesListener
+    virtual void SAL_CALL changesOccurred( const ::com::sun::star::util::ChangesEvent& Event ) throw (::com::sun::star::uno::RuntimeException);
+    virtual void SAL_CALL disposing( const ::com::sun::star::lang::EventObject& Source ) throw (::com::sun::star::uno::RuntimeException);
+    virtual ::com::sun::star::uno::Any SAL_CALL queryInterface( const ::com::sun::star::uno::Type& aType ) throw (::com::sun::star::uno::RuntimeException);
+
+	virtual void addCustomHandles( SdrHdlList& rHandlerList );
+	virtual void disposing();
+
+	virtual void select();
+	virtual void deselect();
+
+    void extractText( const ::com::sun::star::uno::Reference<
+                        ::com::sun::star::drawing::XShape>& xShape );
+
+	sdr::diagram::SdrDiagramObj&  mrObj;
+    boost::shared_ptr<SdrRectObj> mpTextObj;
+};
+
+} // end of namespace sd
+
+#endif		// _SD_DIAGRAMTAG_HXX_
+
diff --git sd/source/ui/diagram/makefile.mk sd/source/ui/diagram/makefile.mk
new file mode 100644
index 0000000..3a5c95b
--- /dev/null
+++ sd/source/ui/diagram/makefile.mk
@@ -0,0 +1,59 @@
+#*************************************************************************
+#
+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+# 
+# Copyright 2008 by Sun Microsystems, Inc.
+#
+# OpenOffice.org - a multi-platform office productivity suite
+#
+# $RCSfile: makefile.mk,v $
+#
+# $Revision: 1.3 $
+#
+# This file is part of OpenOffice.org.
+#
+# OpenOffice.org is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License version 3
+# only, as published by the Free Software Foundation.
+#
+# OpenOffice.org is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License version 3 for more details
+# (a copy is included in the LICENSE file that accompanied this code).
+#
+# You should have received a copy of the GNU Lesser General Public License
+# version 3 along with OpenOffice.org.  If not, see
+# <http://www.openoffice.org/license.html>
+# for a copy of the LGPLv3 License.
+#
+#*************************************************************************
+
+PRJ=..$/..$/..
+
+PROJECTPCH=sd
+PROJECTPCHSOURCE=$(PRJ)$/util$/sd
+PRJNAME=sd
+TARGET=uidiagram
+ENABLE_EXCEPTIONS=TRUE
+AUTOSEG=true
+
+# --- Settings -----------------------------------------------------
+
+.INCLUDE :  settings.mk
+.INCLUDE :  $(PRJ)$/util$/makefile.pmk
+
+# --- Files --------------------------------------------------------
+
+SRS1NAME=$(TARGET)
+SRC1FILES =\
+	DiagramDesignPane.src\
+
+SLOFILES = \
+        $(SLO)$/DiagramDesignPane.obj \
+        $(SLO)$/diagramtag.obj
+
+
+# --- Tagets -------------------------------------------------------
+
+.INCLUDE :  target.mk
diff --git sd/source/ui/framework/tools/FrameworkHelper.cxx sd/source/ui/framework/tools/FrameworkHelper.cxx
index 69fddfe..2e3285f 100644
--- sd/source/ui/framework/tools/FrameworkHelper.cxx
+++ sd/source/ui/framework/tools/FrameworkHelper.cxx
@@ -228,6 +228,8 @@ const ::rtl::OUString FrameworkHelper::msLayoutTaskPanelURL(
     msTaskPanelURLPrefix + OUString::createFromAscii("Layouts"));
 const ::rtl::OUString FrameworkHelper::msTableDesignPanelURL(
     msTaskPanelURLPrefix + OUString::createFromAscii("TableDesign"));
+const ::rtl::OUString FrameworkHelper::msDiagramDesignPanelURL(
+    msTaskPanelURLPrefix + OUString::createFromAscii("DiagramDesign"));
 const ::rtl::OUString FrameworkHelper::msCustomAnimationTaskPanelURL(
     msTaskPanelURLPrefix + OUString::createFromAscii("CustomAnimations"));
 const ::rtl::OUString FrameworkHelper::msSlideTransitionTaskPanelURL(
diff --git sd/source/ui/func/smarttag.cxx sd/source/ui/func/smarttag.cxx
index f22c710..56c4bc9 100644
--- sd/source/ui/func/smarttag.cxx
+++ sd/source/ui/func/smarttag.cxx
@@ -57,13 +57,18 @@ SmartTag::~SmartTag()
 
 // --------------------------------------------------------------------
 
-bool SmartTag::MouseButtonDown( const MouseEvent&, SmartHdl&  )
+bool SmartTag::MouseButtonDown( const MouseEvent&, SmartHdl&, const Window&  )
+{
+	return false;
+}
+
+bool SmartTag::MouseButtonUp( const MouseEvent&, SmartHdl&, const Window&  )
 {
     return false;
 }
 
 /** returns true if the SmartTag consumes this event. */
-bool SmartTag::KeyInput( const KeyEvent& /*rKEvt*/ )
+bool SmartTag::KeyInput( const KeyEvent& /*rKEvt*/, const Window& /*rWin*/ )
 {
     return false;
 }
@@ -217,7 +222,7 @@ void SmartTagSet::deselect()
 
 // --------------------------------------------------------------------
 
-bool SmartTagSet::MouseButtonDown( const MouseEvent& rMEvt )
+bool SmartTagSet::MouseButtonDown( const MouseEvent& rMEvt, const Window& rWin )
 {
     Point aMDPos( mrView.GetViewShell()->GetActiveWindow()->PixelToLogic( rMEvt.GetPosPixel() ) );
     SdrHdl* pHdl = mrView.PickHandle(aMDPos);
@@ -235,7 +240,29 @@ bool SmartTagSet::MouseButtonDown( const MouseEvent& rMEvt )
     if(pSmartHdl && pSmartHdl->getTag().is() )
     {
         SmartTagReference xTag( pSmartHdl->getTag() );
-        return xTag->MouseButtonDown( rMEvt, *pSmartHdl );
+		return xTag->MouseButtonDown( rMEvt, *pSmartHdl, rWin );
+	}
+
+	return false;
+}
+
+// --------------------------------------------------------------------
+
+bool SmartTagSet::MouseButtonUp( const MouseEvent& rMEvt, const Window& rWin )
+{
+	Point aMDPos( mrView.GetViewShell()->GetActiveWindow()->PixelToLogic( rMEvt.GetPosPixel() ) );
+	SdrHdl* pHdl = mrView.PickHandle(aMDPos);
+
+	// check if a smart tag is selected and no handle is hit
+	if( mxSelectedTag.is() && !pHdl )
+		return false;
+
+	// if a smart tag handle is hit, foreward event to its smart tag
+	SmartHdl* pSmartHdl = dynamic_cast< SmartHdl* >( pHdl );
+	if(pSmartHdl && pSmartHdl->getTag().is() )
+	{
+		SmartTagReference xTag( pSmartHdl->getTag() );
+		return xTag->MouseButtonUp( rMEvt, *pSmartHdl, rWin );
     }
 
     return false;
@@ -243,10 +270,10 @@ bool SmartTagSet::MouseButtonDown( const MouseEvent& rMEvt )
 
 // --------------------------------------------------------------------
 
-bool SmartTagSet::KeyInput( const KeyEvent& rKEvt )
+bool SmartTagSet::KeyInput( const KeyEvent& rKEvt, const Window& rWin )
 {
     if( mxSelectedTag.is() )
-        return mxSelectedTag->KeyInput( rKEvt );
+		return mxSelectedTag->KeyInput( rKEvt, rWin );
     else
         return false;
 }
diff --git sd/source/ui/inc/TaskPaneViewShell.hxx sd/source/ui/inc/TaskPaneViewShell.hxx
index 7251b27..8b1880a 100644
--- sd/source/ui/inc/TaskPaneViewShell.hxx
+++ sd/source/ui/inc/TaskPaneViewShell.hxx
@@ -77,6 +77,7 @@ public:
         PID_MASTER_PAGES,
         PID_LAYOUT,
         PID_TABLE_DESIGN,
+		PID_DIAGRAM_DESIGN,
         PID_ANIMATION_SCHEMES,
         PID_CUSTOM_ANIMATION,
         PID_SLIDE_TRANSITION,
diff --git sd/source/ui/inc/framework/FrameworkHelper.hxx sd/source/ui/inc/framework/FrameworkHelper.hxx
index 3e06aac..f992a2c 100644
--- sd/source/ui/inc/framework/FrameworkHelper.hxx
+++ sd/source/ui/inc/framework/FrameworkHelper.hxx
@@ -101,6 +101,7 @@ public:
     static const ::rtl::OUString msMasterPagesTaskPanelURL;
     static const ::rtl::OUString msLayoutTaskPanelURL;
     static const ::rtl::OUString msTableDesignPanelURL;
+    static const ::rtl::OUString msDiagramDesignPanelURL;
     static const ::rtl::OUString msCustomAnimationTaskPanelURL;
     static const ::rtl::OUString msSlideTransitionTaskPanelURL;
 
diff --git sd/source/ui/inc/smarttag.hxx sd/source/ui/inc/smarttag.hxx
index 4432dad..1ecb6a8 100644
--- sd/source/ui/inc/smarttag.hxx
+++ sd/source/ui/inc/smarttag.hxx
@@ -44,6 +44,7 @@ class SdrHdlList;
 namespace sd {
 
 class View;
+class Window;
 class SmartHdl;
 
 /** a smart tag represents a visual user interface element on the documents edit view
@@ -62,10 +63,13 @@ public:
     virtual ~SmartTag();
 
     /** returns true if the SmartTag consumes this event. */
-    virtual bool MouseButtonDown( const MouseEvent&, SmartHdl& );
+	virtual bool MouseButtonDown( const MouseEvent&, SmartHdl&, const Window& rWin );
 
     /** returns true if the SmartTag consumes this event. */
-    virtual bool KeyInput( const KeyEvent& rKEvt ); 
+	virtual bool MouseButtonUp( const MouseEvent&, SmartHdl&, const Window& rWin );
+
+	/** returns true if the SmartTag consumes this event. */
+	virtual bool KeyInput( const KeyEvent& rKEvt, const Window& rWin ); 
 
     /** returns true if this smart tag is currently selected */
     bool isSelected() const;
@@ -114,10 +118,13 @@ public:
     const SmartTagReference& getSelected() const { return mxSelectedTag; }
 
     /** returns true if a SmartTag consumes this event. */
-    bool MouseButtonDown( const MouseEvent& );
+	bool MouseButtonDown( const MouseEvent&, const Window& rWin );
+
+	/** returns true if the SmartTag consumes this event. */
+	virtual bool MouseButtonUp( const MouseEvent&, const Window& rWin );
 
     /** returns true if a SmartTag consumes this event. */
-    bool KeyInput( const KeyEvent& rKEvt ); 
+	bool KeyInput( const KeyEvent& rKEvt, const Window& rWin ); 
 
     /** disposes all smart tags and clears the set */
     void Dispose();
diff --git sd/source/ui/toolpanel/TaskPaneViewShell.cxx sd/source/ui/toolpanel/TaskPaneViewShell.cxx
index df81def..8dbb4e6 100644
--- sd/source/ui/toolpanel/TaskPaneViewShell.cxx
+++ sd/source/ui/toolpanel/TaskPaneViewShell.cxx
@@ -47,6 +47,7 @@
 #include "controls/MasterPagesPanel.hxx"
 #include "controls/MasterPagesSelector.hxx"
 #include "controls/TableDesignPanel.hxx"
+#include "controls/DiagramDesignPanel.hxx"
 #include "controls/CustomAnimationPanel.hxx"
 #include "controls/SlideTransitionPanel.hxx"
 #include "controls/AnimationSchemesPanel.hxx"
@@ -263,6 +264,22 @@ void TaskPaneViewShell::Implementation::Setup (
         AddPanel (nId, PID_TABLE_DESIGN);
     }
 
+	{
+        DummyControl aControl (pToolPanel, SdResId(DLG_DIAGRAMDESIGNPANE));
+
+        // (Quick)DiagramDesignPanel
+        nId = pToolPanel->AddControl (
+            controls::DiagramDesignPanel::CreateControlFactory(rBase),
+            aControl.GetText(),
+            HID_SD_DIAGRAM_DESIGN,
+            ResourceActivationClickHandler(
+                pFrameworkHelper, 
+                    pFrameworkHelper->CreateResourceId(
+                        FrameworkHelper::msDiagramDesignPanelURL, xTaskPaneId),
+                pToolPanel->GetControlContainer()));
+        AddPanel (nId, PID_DIAGRAM_DESIGN);
+	}
+
     {
         DummyControl aControl (pToolPanel, SdResId(RID_CUSTOMANIMATION_START+0));
 
diff --git sd/source/ui/toolpanel/controls/DiagramDesignPanel.cxx sd/source/ui/toolpanel/controls/DiagramDesignPanel.cxx
new file mode 100644
index 0000000..b38cf56
--- /dev/null
+++ sd/source/ui/toolpanel/controls/DiagramDesignPanel.cxx
@@ -0,0 +1,104 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: TableDesignPanel.cxx,v $
+ * $Revision: 1.3 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_sd.hxx"
+
+#include "DiagramDesignPanel.hxx"
+
+#include "taskpane/TaskPaneControlFactory.hxx"
+
+#include "strings.hrc"
+#include "sdresid.hxx"
+
+namespace sd
+{ 
+	
+	class ViewShellBase;
+	extern ::Window * createDiagramDesignPanel( ::Window* pParent, ViewShellBase& rBase );
+	
+namespace toolpanel { namespace controls {
+
+
+DiagramDesignPanel::DiagramDesignPanel(TreeNode* pParent, ViewShellBase& rBase)
+    : SubToolPanel (pParent)
+{
+	mpWrappedControl = createDiagramDesignPanel( pParent->GetWindow(), rBase );
+	mpWrappedControl->Show();
+}
+
+DiagramDesignPanel::~DiagramDesignPanel()
+{
+	delete mpWrappedControl;
+}
+
+std::auto_ptr<ControlFactory> DiagramDesignPanel::CreateControlFactory (ViewShellBase& rBase)
+{
+    return std::auto_ptr<ControlFactory>(
+        new ControlFactoryWithArgs1<DiagramDesignPanel,ViewShellBase>(rBase));
+}
+
+Size DiagramDesignPanel::GetPreferredSize()
+{
+    return maPreferredSize;
+}
+sal_Int32 DiagramDesignPanel::GetPreferredWidth(sal_Int32 )
+{
+    return maPreferredSize.Width();
+}
+sal_Int32 DiagramDesignPanel::GetPreferredHeight(sal_Int32 )
+{
+    return maPreferredSize.Height();
+}
+::Window* DiagramDesignPanel::GetWindow()
+{
+    return mpWrappedControl;
+}
+bool DiagramDesignPanel::IsResizable()
+{
+    return true;
+}
+bool DiagramDesignPanel::IsExpandable() const
+{
+    return true;
+}
+
+::com::sun::star::uno::Reference<
+    ::com::sun::star::accessibility::XAccessible> DiagramDesignPanel::CreateAccessibleObject (
+        const ::com::sun::star::uno::Reference<
+        ::com::sun::star::accessibility::XAccessible>& )
+{
+    if (GetWindow() != NULL)
+        return GetWindow()->GetAccessible();
+    else
+        return NULL;
+}
+
+} } } // end of namespace ::sd::toolpanel::controls
diff --git sd/source/ui/toolpanel/controls/DiagramDesignPanel.hxx sd/source/ui/toolpanel/controls/DiagramDesignPanel.hxx
new file mode 100644
index 0000000..f026f3a
--- /dev/null
+++ sd/source/ui/toolpanel/controls/DiagramDesignPanel.hxx
@@ -0,0 +1,78 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: TableDesignPanel.hxx,v $
+ * $Revision: 1.3 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef SD_TOOLPANEL_CONTROLS_DIAGRAM_DESIGN_PANEL_HXX
+#define SD_TOOLPANEL_CONTROLS_DIAGRAM_DESIGN_PANEL_HXX
+
+#include "taskpane/SubToolPanel.hxx"
+
+namespace sd {
+class ViewShellBase;
+}
+
+namespace sd { namespace toolpanel {
+class TreeNode;
+class ControlFactory;
+} }
+
+namespace sd { namespace toolpanel { namespace controls {
+
+class DiagramDesignPanel
+    : public SubToolPanel
+{
+public:
+    DiagramDesignPanel (
+        TreeNode* pParent, 
+        ViewShellBase& rBase);
+    virtual ~DiagramDesignPanel (void);
+
+    static std::auto_ptr<ControlFactory> CreateControlFactory (ViewShellBase& rBase);
+
+    virtual Size GetPreferredSize (void);
+    virtual sal_Int32 GetPreferredWidth (sal_Int32 nHeigh);
+    virtual sal_Int32 GetPreferredHeight (sal_Int32 nWidth);
+    virtual ::Window* GetWindow (void);
+    virtual bool IsResizable (void);
+    virtual bool IsExpandable (void) const;
+
+    virtual ::com::sun::star::uno::Reference<
+        ::com::sun::star::accessibility::XAccessible > CreateAccessibleObject (
+            const ::com::sun::star::uno::Reference<
+            ::com::sun::star::accessibility::XAccessible>& rxParent);
+
+	using Window::GetWindow;
+private:
+    Size maPreferredSize;
+    ::Window* mpWrappedControl;
+};
+
+} } } // end of namespace ::sd::toolpanel::controls
+
+#endif
diff --git sd/source/ui/toolpanel/controls/makefile.mk sd/source/ui/toolpanel/controls/makefile.mk
index 4741144..60fa5b3 100644
--- sd/source/ui/toolpanel/controls/makefile.mk
+++ sd/source/ui/toolpanel/controls/makefile.mk
@@ -49,6 +49,7 @@ PRJINC=..$/..$/ ..$/..$/slidesorter
 SLOFILES =      							\
     $(SLO)$/AllMasterPagesSelector.obj		\
     $(SLO)$/CurrentMasterPagesSelector.obj	\
+	$(SLO)$/DiagramDesignPanel.obj			\
     $(SLO)$/DocumentHelper.obj				\
     $(SLO)$/MasterPageObserver.obj			\
     $(SLO)$/MasterPagesPanel.obj			\
diff --git sd/source/ui/unoidl/unopage.cxx sd/source/ui/unoidl/unopage.cxx
index 69e73bb..5b5a478 100644
--- sd/source/ui/unoidl/unopage.cxx
+++ sd/source/ui/unoidl/unopage.cxx
@@ -40,6 +40,7 @@
 #include <com/sun/star/animations/AnimationNodeType.hpp>
 #include <com/sun/star/presentation/EffectNodeType.hpp>
 #include <com/sun/star/lang/DisposedException.hpp>
+#include <com/sun/star/xml/dom/XDocument.hpp>
 #include <comphelper/processfactory.hxx>
 #include <rtl/ustrbuf.hxx>
 #include <vcl/bitmapex.hxx>
@@ -119,7 +120,7 @@ enum WID_PAGE
     WID_PAGE_PAGENUMBERVISIBLE, WID_PAGE_DATETIMEVISIBLE, WID_PAGE_DATETIMEFIXED, 
     WID_PAGE_DATETIMETEXT, WID_PAGE_DATETIMEFORMAT, WID_TRANSITION_TYPE, WID_TRANSITION_SUBTYPE,
     WID_TRANSITION_DIRECTION, WID_TRANSITION_FADE_COLOR, WID_TRANSITION_DURATION, WID_LOOP_SOUND,
-    WID_NAVORDER
+    WID_NAVORDER, WID_PPT_THEME
 };
 
 #ifndef SEQTYPE
@@ -266,6 +267,7 @@ const SfxItemPropertyMap* ImplGetMasterPagePropertyMap( PageKind ePageKind )
         { MAP_CHAR_LEN("BackgroundFullSize"),			WID_PAGE_BACKFULL,	&::getBooleanCppuType(),						0, 0},
         { MAP_CHAR_LEN(sUNO_Prop_UserDefinedAttributes),WID_PAGE_USERATTRIBS, &::getCppuType((const Reference< ::com::sun::star::container::XNameContainer >*)0)  , 		0,     0},
         { MAP_CHAR_LEN("IsBackgroundDark" ),			WID_PAGE_ISDARK,	&::getBooleanCppuType(),						beans::PropertyAttribute::READONLY, 0},
+		{ MAP_CHAR_LEN("PPTTheme"),                     WID_PPT_THEME, &::getCppuType((uno::Reference<xml::dom::XDocument>*)0), 0, 0},
         {0,0,0,0,0,0}
     };
 
@@ -876,6 +878,16 @@ void SAL_CALL SdGenericDrawPage::setPropertyValue( const OUString& aPropertyName
             break;
         }
 
+		case WID_PPT_THEME:
+		{
+            uno::Reference<xml::dom::XDocument> xRef;
+			if( ! ( aValue >>= xRef ) )
+				throw lang::IllegalArgumentException();
+
+			GetPage()->setPPTTheme( xRef );
+			break;
+		}
+
         default:
             throw beans::UnknownPropertyException();
     }
@@ -1173,6 +1185,10 @@ Any SAL_CALL SdGenericDrawPage::getPropertyValue( const OUString& PropertyName )
         aAny <<= GetPage()->getTransitionDuration();
         break;
 
+    case WID_PPT_THEME:
+		aAny <<= GetPage()->getPPTTheme();
+		break;
+
     default:
         throw beans::UnknownPropertyException();
     }
diff --git sd/source/ui/view/drviewse.cxx sd/source/ui/view/drviewse.cxx
index 76348e6..a08ac7e 100644
--- sd/source/ui/view/drviewse.cxx
+++ sd/source/ui/view/drviewse.cxx
@@ -859,7 +859,10 @@ void DrawViewShell::FuSupport(SfxRequest& rReq)
                 KeyCode aKCode(KEY_DELETE);
                 KeyEvent aKEvt( 0, aKCode);
 
-                bool bConsumed = mpDrawView && mpDrawView->getSmartTags().KeyInput( aKEvt );
+                ::sd::Window* pWindow = GetActiveWindow();
+                bool bConsumed=false;
+                if( pWindow )
+                    bConsumed = mpDrawView && mpDrawView->getSmartTags().KeyInput( aKEvt, *pWindow );
 
                 if( !bConsumed && HasCurrentFunction() )
                     bConsumed = GetCurrentFunction()->KeyInput(aKEvt);
diff --git sd/source/ui/view/viewshel.cxx sd/source/ui/view/viewshel.cxx
index aae2f89..ef1e060 100644
--- sd/source/ui/view/viewshel.cxx
+++ sd/source/ui/view/viewshel.cxx
@@ -489,8 +489,8 @@ BOOL ViewShell::KeyInput(const KeyEvent& rKEvt, ::sd::Window* pWin)
         else
         {
             bool bConsumed = false;
-            if( GetView() )
-                bConsumed = GetView()->getSmartTags().KeyInput(rKEvt);
+			if( GetView() && pWin )
+				bConsumed = GetView()->getSmartTags().KeyInput(rKEvt, *pWin);
 
 
             if( !bConsumed )
@@ -554,8 +554,8 @@ void ViewShell::MouseButtonDown(const MouseEvent& rMEvt, ::sd::Window* pWin)
         GetView()->SetMouseEvent(rMEvt);
 
     bool bConsumed = false;
-    if( GetView() )
-        bConsumed = GetView()->getSmartTags().MouseButtonDown( rMEvt );
+	if( GetView() && pWin )
+		bConsumed = GetView()->getSmartTags().MouseButtonDown( rMEvt, *pWin );
 
     if( !bConsumed )
     {
@@ -626,7 +626,11 @@ void ViewShell::MouseButtonUp(const MouseEvent& rMEvt, ::sd::Window* pWin)
     if (GetView() != NULL)
         GetView()->SetMouseEvent(rMEvt);
 
-    if( HasCurrentFunction())
+	bool bConsumed = false;
+	if( GetView() && pWin )
+		bConsumed = GetView()->getSmartTags().MouseButtonUp( rMEvt, *pWin );
+
+	if( !bConsumed && HasCurrentFunction())
     {
         rtl::Reference< sdr::SelectionController > xSelectionController( GetView()->getSelectionController() );
         if( !xSelectionController.is() || !xSelectionController->onMouseButtonUp( rMEvt, pWin ) )
diff --git sd/util/makefile.mk sd/util/makefile.mk
index 551d73d..2458fb2 100644
--- sd/util/makefile.mk
+++ sd/util/makefile.mk
@@ -54,6 +54,7 @@ RESLIB1SRSFILES=\
     $(SRS)$/notes.srs			\
     $(SRS)$/animui.srs			\
     $(SRS)$/slideshow.srs		\
+	$(SRS)$/uidiagram.srs		\
     $(SRS)$/uitable.srs			\
     $(SOLARCOMMONRESDIR)$/sfx.srs
 
@@ -123,6 +124,7 @@ LIB3FILES=      \
             $(SLB)$/helper.lib		\
             $(SLB)$/xml.lib			\
             $(SLB)$/cgm.lib			\
+			$(SLB)$/uidiagram.lib	\
             $(SLB)$/uitable.lib		\
             $(SLB)$/grf.lib
 
diff --git svx/inc/svdstr.hrc svx/inc/svdstr.hrc
index 68a1eec..59a3dcc 100644
--- svx/inc/svdstr.hrc
+++ svx/inc/svdstr.hrc
@@ -188,7 +188,10 @@
 #define STR_ObjNameSingulMEDIA				(STR_ObjNameBegin + 143)
 #define STR_ObjNamePluralMEDIA				(STR_ObjNameBegin + 144)
 
-#define STR_ObjNameEnd               (STR_ObjNamePluralMEDIA)
+#define STR_ObjNameSingulDiagram		 (STR_ObjNameBegin + 145)
+#define STR_ObjNamePluralDiagram		 (STR_ObjNameBegin + 146)
+
+#define STR_ObjNameEnd               (STR_ObjNamePluralDiagram)
 
 #define STR_EditBegin                (STR_ObjNameEnd+1)
 #define STR_EditWithCopy             (STR_EditBegin  +  0)
diff --git svx/inc/svx/sdr/overlay/overlayprimitive2dsequenceobject.hxx svx/inc/svx/sdr/overlay/overlayprimitive2dsequenceobject.hxx
index 8208e1a..ad26e1c 100644
--- svx/inc/svx/sdr/overlay/overlayprimitive2dsequenceobject.hxx
+++ svx/inc/svx/sdr/overlay/overlayprimitive2dsequenceobject.hxx
@@ -41,7 +41,7 @@ namespace sdr
 {
     namespace overlay
     {
-        class OverlayPrimitive2DSequenceObject : public OverlayObjectWithBasePosition
+		class SVX_DLLPUBLIC OverlayPrimitive2DSequenceObject : public OverlayObjectWithBasePosition
         {
         protected:
             // the sequence of primitives to show
diff --git svx/inc/svx/svdobj.hxx svx/inc/svx/svdobj.hxx
index 8e59967..7b240f7 100644
--- svx/inc/svx/svdobj.hxx
+++ svx/inc/svx/svdobj.hxx
@@ -135,6 +135,7 @@ enum SdrObjKind {OBJ_NONE       = 0,  // Abstraktes Objekt (SdrObject)
                  OBJ_CUSTOMSHAPE=33,  // CustomShape
                  OBJ_MEDIA		=34,  // Media shape
                  OBJ_TABLE		=35,  // Table
+				 OBJ_DIAGRAM    =36,  // DiagramShape
                  OBJ_MAXI};
 
 enum SdrUserCallType {SDRUSERCALL_MOVEONLY,       	// Nur verschoben, Groesse unveraendert
diff --git svx/inc/svx/svdodiagram.hxx svx/inc/svx/svdodiagram.hxx
new file mode 100644
index 0000000..51ccfcc
--- /dev/null
+++ svx/inc/svx/svdodiagram.hxx
@@ -0,0 +1,118 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: svdotable.hxx,v $
+ * $Revision: 1.4.18.1 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef _SVX_SVDODIAGRAM_HXX
+#define _SVX_SVDODIAGRAM_HXX
+
+#include "svx/svxdllapi.h"
+#include "svx/svdogrp.hxx"
+#include <com/sun/star/text/WritingMode.hpp>
+
+#include <boost/shared_ptr.hpp>
+
+//------------------------------------------------------------------------
+
+namespace com { namespace sun { namespace star { namespace xml { namespace dom {
+    class XDocument;
+}}}}};
+
+class SfxStyleSheet;
+
+namespace sdr { namespace diagram {
+
+//------------------------------------------------------------------------
+//   SdrDiagramObj
+//------------------------------------------------------------------------
+
+struct SdrDiagramObjImpl;
+class SVX_DLLPUBLIC SdrDiagramObj : public ::SdrObjGroup
+{
+public:
+	explicit SdrDiagramObj(SdrModel* _pModel);
+	virtual void operator=(const SdrObject& rObj);
+
+	TYPEINFO();
+
+	virtual UINT16 GetObjIdentifier() const;
+	virtual void TakeObjInfo(SdrObjTransformInfoRec& rInfo) const;
+
+	virtual void SetObjList(SdrObjList* pNewObjList);
+	virtual void SetPage(SdrPage* pNewPage);
+	virtual void SetModel(SdrModel* pNewModel);
+
+	virtual SdrObjList* GetSubList() const;
+
+	virtual void TakeObjNameSingul(String& rName) const;
+	virtual void TakeObjNamePlural(String& rName) const;
+
+    // trigger updates
+	//virtual void SetChanged();
+
+	//virtual void RecalcSnapRect();
+	//virtual void NbcSetSnapRect(const Rectangle& rRect);
+	//virtual void NbcSetLogicRect(const Rectangle& rRect);
+
+	//virtual void NbcReformatText();
+	//virtual void ReformatText();
+
+	//virtual SdrObject* DoConvertToPolyObj(BOOL bBezier) const;
+
+    void LayoutShape() const;
+
+    ::com::sun::star::uno::Reference<
+        ::com::sun::star::xml::dom::XDocument> GetDataFragment() const;
+    ::com::sun::star::uno::Reference<
+        ::com::sun::star::xml::dom::XDocument> GetLayoutFragment() const;
+    ::com::sun::star::uno::Reference<
+        ::com::sun::star::xml::dom::XDocument> GetQStyleFragment() const;
+    ::com::sun::star::uno::Reference<
+        ::com::sun::star::xml::dom::XDocument> GetColorStyleFragment() const;
+
+    void SetDataFragment( const ::com::sun::star::uno::Reference<
+                            ::com::sun::star::xml::dom::XDocument>& rxFragment );
+    void SetLayoutFragment( const ::com::sun::star::uno::Reference<
+                            ::com::sun::star::xml::dom::XDocument>& rxFragment );
+    void SetQStyleFragment( const ::com::sun::star::uno::Reference<
+                            ::com::sun::star::xml::dom::XDocument>& rxFragment );
+    void SetColorStyleFragment( const ::com::sun::star::uno::Reference<
+                                ::com::sun::star::xml::dom::XDocument>& rxFragment );
+
+private:
+	// DrawContact section
+	virtual sdr::contact::ViewContact* CreateObjectSpecificViewContact();
+
+	boost::shared_ptr<SdrDiagramObjImpl> mpImpl;
+};
+
+////////////////////////////////////////////////////////////////////////////////////////////////////
+
+} }
+
+#endif
diff --git svx/inc/svx/unoprov.hxx svx/inc/svx/unoprov.hxx
index d3ea6ff..b3e6a05 100644
--- svx/inc/svx/unoprov.hxx
+++ svx/inc/svx/unoprov.hxx
@@ -95,7 +95,8 @@ public:
 #define SVXMAP_CUSTOMSHAPE			22
 #define SVXMAP_MEDIA				23
 #define SVXMAP_TABLE				24
-#define	SVXMAP_END					25	// last+1 !
+#define SVXMAP_DIAGRAM				25
+#define	SVXMAP_END					26	// last+1 !
 /***********************************************************************
 * SvxUnoPropertyMapProvider											   *
 ***********************************************************************/
diff --git svx/inc/svx/unoshape.hxx svx/inc/svx/unoshape.hxx
index 9741878..e581d37 100644
--- svx/inc/svx/unoshape.hxx
+++ svx/inc/svx/unoshape.hxx
@@ -388,6 +388,7 @@ public:
     // XServiceInfo
     virtual ::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL getSupportedServiceNames() throw(::com::sun::star::uno::RuntimeException);
 };
+
 #include <com/sun/star/drawing/XShapes.hpp>
 #include <com/sun/star/drawing/XShapeGroup.hpp>
 #include <com/sun/star/container/XIndexAccess.hpp>
@@ -403,6 +404,7 @@ private:
     rtl::Reference< SvxDrawPage> mxPage;
 
 public:
+    SvxShapeGroup( SdrObject* pObj,SvxDrawPage* pDrawPage, const SfxItemPropertyMap* pPropertyMap ) throw();
     SvxShapeGroup( SdrObject* pObj,SvxDrawPage* pDrawPage ) throw ();
     virtual ~SvxShapeGroup() throw ();
 
@@ -451,6 +453,28 @@ public:
 /***********************************************************************
 *                                                                      *
 ***********************************************************************/
+class SvxShapeDiagram : public SvxShapeGroup
+{
+public:
+    SvxShapeDiagram( SdrObject*, SvxDrawPage* ) throw();
+	virtual ~SvxShapeDiagram() throw ();
+
+	virtual bool setPropertyValueImpl( const SfxItemPropertyMap* pProperty, const ::com::sun::star::uno::Any& rValue ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::beans::PropertyVetoException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+    virtual bool getPropertyValueImpl( const SfxItemPropertyMap* pProperty, ::com::sun::star::uno::Any& rValue ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+
+	// XInterface
+	virtual ::com::sun::star::uno::Any SAL_CALL queryAggregation( const ::com::sun::star::uno::Type & rType ) throw(::com::sun::star::uno::RuntimeException);
+	virtual ::com::sun::star::uno::Any SAL_CALL queryInterface( const ::com::sun::star::uno::Type & rType ) throw(::com::sun::star::uno::RuntimeException);
+	virtual void SAL_CALL acquire() throw();
+	virtual void SAL_CALL release() throw();
+
+	// XServiceInfo
+	virtual ::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL getSupportedServiceNames() throw(::com::sun::star::uno::RuntimeException);
+};
+
+/***********************************************************************
+*                                                                      *
+***********************************************************************/
 class SvxShapeConnector : public ::com::sun::star::drawing::XConnectorShape,
                           public SvxShapeText
 {
diff --git svx/inc/svx/unoshprp.hxx svx/inc/svx/unoshprp.hxx
index 7366f1a..98fdebe 100644
--- svx/inc/svx/unoshprp.hxx
+++ svx/inc/svx/unoshprp.hxx
@@ -161,6 +161,12 @@
 #define OWN_ATTR_TABLETEMPLATE_BANDINGCOULUMNS	(OWN_ATTR_VALUE_START+54)
 #define OWN_ATTR_TABLEBORDER					(OWN_ATTR_VALUE_START+55)
 
+// reuse one own attr from ole shapes for diagram
+#define OWN_ATTR_DIAGRAM_DATA			        (OWN_ATTR_VALUE_START+48)
+#define OWN_ATTR_DIAGRAM_LAYOUT					(OWN_ATTR_VALUE_START+49)
+#define OWN_ATTR_DIAGRAM_QSTYLE					(OWN_ATTR_VALUE_START+50)
+#define OWN_ATTR_DIAGRAM_COLORSTYLE				(OWN_ATTR_VALUE_START+51)
+
 #define OWN_ATTR_OLE_VISAREA					(OWN_ATTR_VALUE_START+63)
 #define OWN_ATTR_CAPTION_POINT					(OWN_ATTR_VALUE_START+64)
 #define OWN_ATTR_PAGE_NUMBER					(OWN_ATTR_VALUE_START+65)
diff --git svx/prj/d.lst svx/prj/d.lst
index 37c75fb..5d34ef6 100644
--- svx/prj/d.lst
+++ svx/prj/d.lst
@@ -233,6 +233,7 @@ mkdir: %_DEST%\inc%_EXT%\svx
 ..\inc\svx\sdrobjectuser.hxx %_DEST%\inc%_EXT%\svx\sdrobjectuser.hxx
 ..\inc\svx\svdocapt.hxx %_DEST%\inc%_EXT%\svx\svdocapt.hxx
 ..\inc\svx\svdocirc.hxx %_DEST%\inc%_EXT%\svx\svdocirc.hxx
+..\inc\svx\svdodiagram.hxx %_DEST%\inc%_EXT%\svx\svdodiagram.hxx
 ..\inc\svx\svdoedge.hxx %_DEST%\inc%_EXT%\svx\svdoedge.hxx
 ..\inc\svx\svdograf.hxx %_DEST%\inc%_EXT%\svx\svdograf.hxx
 ..\inc\svx\svdogrp.hxx %_DEST%\inc%_EXT%\svx\svdogrp.hxx
@@ -606,6 +607,7 @@ mkdir: %_DEST%\inc%_EXT%\svx\sdr\overlay
 ..\inc\svx\sdr\overlay\overlaypolypolygon.hxx %_DEST%\inc%_EXT%\svx\sdr\overlay\overlaypolypolygon.hxx
 ..\inc\svx\sdr\overlay\overlayobjectcell.hxx %_DEST%\inc%_EXT%\svx\sdr\overlay\overlayobjectcell.hxx
 ..\inc\svx\sdr\overlay\overlaysdrobject.hxx %_DEST%\inc%_EXT%\svx\sdr\overlay\overlaysdrobject.hxx
+..\inc\svx\sdr\overlay\overlayprimitive2dsequenceobject.hxx %_DEST%\inc%_EXT%\svx\sdr\overlay\overlayprimitive2dsequenceobject.hxx
 
 mkdir: %_DEST%\inc%_EXT%\svx\sdr\animation
 ..\inc\svx\sdr\animation\ainfographic.hxx %_DEST%\inc%_EXT%\svx\sdr\animation\ainfographic.hxx
diff --git svx/source/svdraw/makefile.mk svx/source/svdraw/makefile.mk
index dddf655..ca96e09 100644
--- svx/source/svdraw/makefile.mk
+++ svx/source/svdraw/makefile.mk
@@ -68,6 +68,7 @@ LIB1OBJFILES= \
          $(SLO)$/svdtext.obj		\
          $(SLO)$/svdoashp.obj		 \
          $(SLO)$/svdoattr.obj        \
+         $(SLO)$/svdodiagram.obj     \
          $(SLO)$/svdotext.obj        \
          $(SLO)$/svdotxat.obj        \
          $(SLO)$/svdotxdr.obj        \
diff --git svx/source/svdraw/svdobj.cxx svx/source/svdraw/svdobj.cxx
index fecc430..1823689 100644
--- svx/source/svdraw/svdobj.cxx
+++ svx/source/svdraw/svdobj.cxx
@@ -126,6 +126,7 @@
 #include <drawinglayer/processor2d/linegeometryextractor2d.hxx>
 #include <svx/polysc3d.hxx>
 #include "svx/svdotable.hxx"
+#include "svx/svdodiagram.hxx"
 
 using namespace ::com::sun::star;
 
@@ -3173,6 +3174,7 @@ SdrObject* SdrObjFactory::MakeNewObject(UINT32 nInvent, UINT16 nIdent, SdrPage*
             case USHORT(OBJ_PAGE       ): pObj=new SdrPageObj;                  break;
             case USHORT(OBJ_UNO        ): pObj=new SdrUnoObj(String());			break;
             case USHORT(OBJ_CUSTOMSHAPE  ): pObj=new SdrObjCustomShape();       break;
+			case USHORT(OBJ_DIAGRAM    ): pObj=new ::sdr::diagram::SdrDiagramObj(pModel); break;
             case USHORT(OBJ_MEDIA 	   ): pObj=new SdrMediaObj();           	break;
             case USHORT(OBJ_TABLE	   ): pObj=new ::sdr::table::SdrTableObj(pModel);	break;
         }
diff --git svx/source/svdraw/svdodiagram.cxx svx/source/svdraw/svdodiagram.cxx
new file mode 100644
index 0000000..78bc4e8
--- /dev/null
+++ svx/source/svdraw/svdodiagram.cxx
@@ -0,0 +1,309 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: svdotable.cxx,v $
+ * $Revision: 1.4.18.1 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_svx.hxx"
+
+#include <com/sun/star/style/XStyleFamiliesSupplier.hpp>
+#include <com/sun/star/drawing/XShape.hpp>
+#include <com/sun/star/container/XNamed.hpp>
+#include <com/sun/star/container/XNameAccess.hpp>
+#include <com/sun/star/container/XIndexAccess.hpp>
+
+#include <com/sun/star/style/XStyle.hpp>
+#include <com/sun/star/beans/XPropertySet.hpp>
+#include <com/sun/star/document/XFilter.hpp>
+#include <com/sun/star/document/XImporter.hpp>
+#include <svtools/style.hxx>
+#include <comphelper/processfactory.hxx>
+
+#include "editstat.hxx"
+#include "svx/outlobj.hxx"
+#include "svx/svdview.hxx"
+#include "svx/svdpage.hxx"
+#include "svx/sdr/properties/textproperties.hxx"
+#include "svx/sdr/contact/viewcontactofgroup.hxx"
+#include "svx/svdodiagram.hxx"
+#include "svx/svdhdl.hxx"
+#include "svx/svdoutl.hxx"
+#include "svx/svddrag.hxx"
+#include "svx/svdpagv.hxx"
+#include "svx/svdetc.hxx"
+#include "svx/svdobj.hxx"
+#include "svx/svdundo.hxx"
+#include "svx/svdoutl.hxx"
+#include "svdstr.hrc"
+#include "svdglob.hxx"
+#include "svx/writingmodeitem.hxx"
+#include "svx/frmdiritem.hxx"
+
+// -----------------------------------------------------------------------------
+
+using namespace ::com::sun::star;
+
+namespace sdr { namespace diagram {
+
+// -----------------------------------------------------------------------------
+
+struct SdrDiagramObjImpl
+{
+    explicit SdrDiagramObjImpl(SdrDiagramObj& rOwner);
+	void layout( const Rectangle& );
+    
+    uno::Reference<xml::dom::XDocument> mxDataFragment;
+    uno::Reference<xml::dom::XDocument> mxLayoutFragment;
+    uno::Reference<xml::dom::XDocument> mxQStyleFragment;
+    uno::Reference<xml::dom::XDocument> mxColorStyleFragment;
+
+    SdrDiagramObj* mpOwner;
+};
+
+// -----------------------------------------------------------------------------
+
+SdrDiagramObjImpl::SdrDiagramObjImpl(SdrDiagramObj& rOwner) :
+    mpOwner(&rOwner)
+{}
+
+// -----------------------------------------------------------------------------
+
+void SdrDiagramObjImpl::layout( const Rectangle& rRect )
+{
+	try
+	{
+        uno::Reference<drawing::XShape> xShape( mpOwner->getUnoShape(), 
+                                                uno::UNO_QUERY_THROW );
+        uno::Reference<beans::XPropertySet> xPropSet( xShape, 
+                                                      uno::UNO_QUERY_THROW );
+
+        if( mpOwner->GetLayoutFragment().is() )
+        {
+            // make sure aOutRect is calculated from children
+            mpOwner->GetCurrentBoundRect();
+
+            // delete old content
+            mpOwner->GetSubList()->Clear();
+
+            uno::Reference<lang::XMultiServiceFactory> xFactory( 
+                ::comphelper::getProcessServiceFactory(),
+                uno::UNO_QUERY_THROW );
+
+            uno::Reference<uno::XInterface> xInt( 
+                xFactory->createInstance( 
+                    rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("com.sun.star.comp.Impress.oox.QuickDiagrammingLayout")) ) );
+
+            uno::Reference<document::XFilter> xFilter( xInt, 
+                                                       uno::UNO_QUERY_THROW );
+            uno::Reference<document::XImporter> xImporter( xInt, 
+                                                           uno::UNO_QUERY_THROW );
+
+            uno::Reference<lang::XComponent> xComp( mpOwner->GetModel()->getUnoModel(), 
+                                                    uno::UNO_QUERY_THROW );
+            xImporter->setTargetDocument(xComp);
+            uno::Sequence< beans::PropertyValue > aDescriptor(2);
+            aDescriptor[0].Name = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("URL"));
+            aDescriptor[0].Value <<= rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("file:///home/me/text/bugdoc/impress/pptx_Matrix.glox"));
+            aDescriptor[1].Name = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("ParentShape"));
+            aDescriptor[1].Value <<= xShape;
+            xFilter->filter(aDescriptor);
+        }
+    }
+    catch( uno::Exception& )
+    {}
+}
+
+// -----------------------------------------------------------------------------
+// DrawContact section
+// -----------------------------------------------------------------------------
+
+sdr::contact::ViewContact* SdrDiagramObj::CreateObjectSpecificViewContact()
+{
+	return new sdr::contact::ViewContactOfGroup(*this);
+}
+
+// --------------------------------------------------------------------
+
+TYPEINIT1(SdrDiagramObj,SdrObjGroup);
+
+// --------------------------------------------------------------------
+
+SdrDiagramObj::SdrDiagramObj(SdrModel* _pModel) :
+    mpImpl( new SdrDiagramObjImpl( *this ) )
+{
+	pModel = _pModel;
+}
+
+// --------------------------------------------------------------------
+
+void SdrDiagramObj::operator=(const SdrObject& rObj)
+{
+	SdrObjGroup::operator=(rObj);
+
+	const SdrDiagramObj* pTableObj = dynamic_cast< const SdrDiagramObj* >( &rObj );
+	if (pTableObj!=NULL)
+        *mpImpl = *pTableObj->mpImpl;
+}
+
+// --------------------------------------------------------------------
+
+UINT16 SdrDiagramObj::GetObjIdentifier() const
+{
+	return static_cast<UINT16>(OBJ_DIAGRAM);
+}
+
+// --------------------------------------------------------------------
+
+void SdrDiagramObj::TakeObjInfo(SdrObjTransformInfoRec& rInfo) const
+{
+	rInfo.bResizeFreeAllowed=TRUE;
+	rInfo.bResizePropAllowed=TRUE;
+	rInfo.bRotateFreeAllowed=FALSE;
+	rInfo.bRotate90Allowed  =FALSE;
+	rInfo.bMirrorFreeAllowed=FALSE;
+	rInfo.bMirror45Allowed  =FALSE;
+	rInfo.bMirror90Allowed  =FALSE;
+
+	// allow transparence
+	rInfo.bTransparenceAllowed = TRUE;
+
+	// gradient depends on fillstyle
+	XFillStyle eFillStyle = ((XFillStyleItem&)(GetObjectItem(XATTR_FILLSTYLE))).GetValue();
+	rInfo.bGradientAllowed = (eFillStyle == XFILL_GRADIENT);
+	rInfo.bShearAllowed     =FALSE;
+	rInfo.bEdgeRadiusAllowed=FALSE;
+	rInfo.bCanConvToPath    =FALSE;
+	rInfo.bCanConvToPoly    =FALSE;
+	rInfo.bCanConvToPathLineToArea=FALSE;
+	rInfo.bCanConvToPolyLineToArea=FALSE;
+	rInfo.bCanConvToContour = FALSE;
+}
+
+// --------------------------------------------------------------------
+
+void SdrDiagramObj::SetObjList(SdrObjList* pNewObjList)
+{
+    // TODO: only for noticing this
+	SdrObjGroup::SetObjList(pNewObjList);
+}
+
+// --------------------------------------------------------------------
+
+void SdrDiagramObj::SetPage(SdrPage* pNewPage)
+{
+    // TODO: only for noticing this
+	SdrObjGroup::SetPage(pNewPage);
+}
+
+// --------------------------------------------------------------------
+
+void SdrDiagramObj::SetModel(SdrModel* pNewModel)
+{
+    // TODO: only for noticing this
+	SdrObjGroup::SetModel(pNewModel);
+}
+
+// --------------------------------------------------------------------
+
+SdrObjList* SdrDiagramObj::GetSubList() const
+{
+    // TODO: only for noticing this
+	return SdrObjGroup::GetSubList();
+}
+
+// --------------------------------------------------------------------
+
+void SdrDiagramObj::TakeObjNameSingul(XubString& rName) const
+{
+	rName = ImpGetResStr(STR_ObjNameSingulDiagram);
+
+	String aName( GetName() );
+	if(aName.Len())
+	{
+		rName += sal_Unicode(' ');
+		rName += sal_Unicode('\'');
+		rName += aName;
+		rName += sal_Unicode('\'');
+	}
+}
+
+// --------------------------------------------------------------------
+
+void SdrDiagramObj::TakeObjNamePlural(XubString& rName) const
+{
+	rName = ImpGetResStr(STR_ObjNamePluralDiagram);
+}
+
+// --------------------------------------------------------------------
+
+void SdrDiagramObj::LayoutShape() const
+{
+    mpImpl->layout( aOutRect );
+}
+
+uno::Reference<xml::dom::XDocument> SdrDiagramObj::GetDataFragment() const
+{
+    return mpImpl->mxDataFragment;
+}
+
+uno::Reference<xml::dom::XDocument> SdrDiagramObj::GetLayoutFragment() const
+{
+    return mpImpl->mxLayoutFragment;
+}
+
+uno::Reference<xml::dom::XDocument> SdrDiagramObj::GetQStyleFragment() const
+{
+    return mpImpl->mxQStyleFragment;
+}
+
+uno::Reference<xml::dom::XDocument> SdrDiagramObj::GetColorStyleFragment() const
+{
+    return mpImpl->mxColorStyleFragment;
+}
+
+void SdrDiagramObj::SetDataFragment( const uno::Reference<xml::dom::XDocument>& rxFragment )
+{
+    mpImpl->mxDataFragment = rxFragment;
+}
+
+void SdrDiagramObj::SetLayoutFragment( const uno::Reference<xml::dom::XDocument>& rxFragment )
+{
+    mpImpl->mxLayoutFragment = rxFragment;
+}
+
+void SdrDiagramObj::SetQStyleFragment( const uno::Reference<xml::dom::XDocument>& rxFragment )
+{
+    mpImpl->mxQStyleFragment = rxFragment;
+}
+
+void SdrDiagramObj::SetColorStyleFragment( const uno::Reference<xml::dom::XDocument>& rxFragment )
+{
+    mpImpl->mxColorStyleFragment = rxFragment;
+}
+
+} }
diff --git svx/source/svdraw/svdstr.src svx/source/svdraw/svdstr.src
index f577928..9e5ddfd 100644
--- svx/source/svdraw/svdstr.src
+++ svx/source/svdraw/svdstr.src
@@ -2829,6 +2829,15 @@ String STR_ObjNamePluralTable
     Text [ en-US ] = "Tables";
 };
 
+String STR_ObjNameSingulDiagram
+{
+	Text [ en-US ] = "Diagram";
+};
+String STR_ObjNamePluralDiagram
+{
+	Text [ en-US ] = "Diagram";
+};
+
 Bitmap SIP_SA_CROP_MARKERS
 {
     File = "cropmarkers.bmp";
diff --git svx/source/unodraw/unopage.cxx svx/source/unodraw/unopage.cxx
index 0171d42..b50d59e 100644
--- svx/source/unodraw/unopage.cxx
+++ svx/source/unodraw/unopage.cxx
@@ -855,6 +855,9 @@ SvxShape* SvxDrawPage::CreateShapeByTypeAndInventor( sal_uInt16 nType, sal_uInt3
                 case OBJ_CUSTOMSHAPE:
                     pRet = new SvxCustomShape( pObj );
                     break;
+				case OBJ_DIAGRAM:
+					pRet = new SvxShapeDiagram( pObj, mpPage );
+					break;
                 case OBJ_MEDIA:
                     pRet = new SvxMediaShape( pObj );
                     break;
diff --git svx/source/unodraw/unoprov.cxx svx/source/unodraw/unoprov.cxx
index 1cf5bda..62a3aea 100644
--- svx/source/unodraw/unoprov.cxx
+++ svx/source/unodraw/unoprov.cxx
@@ -38,6 +38,8 @@
 #include <com/sun/star/container/XIndexAccess.hpp>
 #include <com/sun/star/frame/XModel.hpp>
 #include <com/sun/star/embed/XEmbeddedObject.hpp>
+#include <com/sun/star/beans/Pair.hpp>
+#include <com/sun/star/xml/dom/XDocument.hpp>
 #include <com/sun/star/util/MeasureUnit.hpp>
 #include <com/sun/star/drawing/TextVerticalAdjust.hpp>
 #ifndef _COM_SUN_STAR_MEDIA_ZOOMLEVEL_HDL_
@@ -799,6 +801,28 @@ SfxItemPropertyMap* ImplGetSvxTableShapePropertyMap()
     return aTableShapePropertyMap_Impl;
 }
 
+SfxItemPropertyMap* ImplGetSvxDiagramShapePropertyMap()
+{
+	static SfxItemPropertyMap aDiagramShapePropertyMap_Impl[] =
+	{
+		SHAPE_DESCRIPTOR_PROPERTIES
+		MISC_OBJ_PROPERTIES
+		LINKTARGET_PROPERTIES
+		{ MAP_CHAR_LEN("DiagramData"), OWN_ATTR_DIAGRAM_DATA, 
+              &::getCppuType((uno::Reference<xml::dom::XDocument>*)0), 0, 0},
+		{ MAP_CHAR_LEN("DiagramLayout"), OWN_ATTR_DIAGRAM_LAYOUT,
+              &::getCppuType((uno::Reference<xml::dom::XDocument>*)0), 0, 0},
+		{ MAP_CHAR_LEN("DiagramQStyle"), OWN_ATTR_DIAGRAM_QSTYLE,
+              &::getCppuType((uno::Reference<xml::dom::XDocument>*)0), 0, 0},
+		{ MAP_CHAR_LEN("DiagramColorStyle"), OWN_ATTR_DIAGRAM_COLORSTYLE,
+              &::getCppuType((uno::Reference<xml::dom::XDocument>*)0), 0, 0},
+		{ MAP_CHAR_LEN("UserDefinedAttributes"),		SDRATTR_XMLATTRIBUTES,		&::getCppuType((const ::com::sun::star::uno::Reference< ::com::sun::star::container::XNameContainer >*)0)  , 		0,     0},
+		{0,0,0,0,0,0}
+	};
+
+	return aDiagramShapePropertyMap_Impl;
+}
+
 comphelper::PropertyMapEntry* ImplGetSvxDrawingDefaultsPropertyMap()
 {
     static comphelper::PropertyMapEntry aSvxDrawingDefaultsPropertyMap_Impl[] =
@@ -863,6 +887,7 @@ UHashMapEntry pSdrShapeIdentifierMap[] =
     UHashMapEntry (RTL_CONSTASCII_STRINGPARAM("com.sun.star.drawing.PluginShape"),			OBJ_OLE2_PLUGIN ),
     UHashMapEntry (RTL_CONSTASCII_STRINGPARAM("com.sun.star.drawing.AppletShape"),			OBJ_OLE2_APPLET ),
     UHashMapEntry (RTL_CONSTASCII_STRINGPARAM("com.sun.star.drawing.CustomShape"),			OBJ_CUSTOMSHAPE ),
+	UHashMapEntry (RTL_CONSTASCII_STRINGPARAM("com.sun.star.drawing.DiagramShape"),			OBJ_DIAGRAM ),
     UHashMapEntry (RTL_CONSTASCII_STRINGPARAM("com.sun.star.drawing.MediaShape"),			OBJ_MEDIA ),
 
     UHashMapEntry (RTL_CONSTASCII_STRINGPARAM("com.sun.star.drawing.Shape3DSceneObject"),	E3D_POLYSCENE_ID  | E3D_INVENTOR_FLAG ),
@@ -985,6 +1010,7 @@ SfxItemPropertyMap* SvxUnoPropertyMapProvider::GetMap(UINT16 nPropertyId)
             case SVXMAP_CUSTOMSHAPE: aMapArr[SVXMAP_CUSTOMSHAPE]=ImplGetSvxCustomShapePropertyMap(); break;
             case SVXMAP_MEDIA: aMapArr[SVXMAP_MEDIA]=ImplGetSvxMediaShapePropertyMap(); break;
             case SVXMAP_TABLE: aMapArr[SVXMAP_TABLE]=ImplGetSvxTableShapePropertyMap(); break;
+			case SVXMAP_DIAGRAM: aMapArr[SVXMAP_DIAGRAM]=ImplGetSvxDiagramShapePropertyMap(); break;
 
             default:
                 DBG_ERROR( "Unknown property map for SvxUnoPropertyMapProvider!" );
diff --git svx/source/unodraw/unoshap2.cxx svx/source/unodraw/unoshap2.cxx
index 5994304..1f3b371 100644
--- svx/source/unodraw/unoshap2.cxx
+++ svx/source/unodraw/unoshap2.cxx
@@ -107,6 +107,13 @@ SvxShapeGroup::SvxShapeGroup( SdrObject* pObj, SvxDrawPage* pDrawPage  )  throw(
 }
 
 //----------------------------------------------------------------------
+SvxShapeGroup::SvxShapeGroup( SdrObject* pObj, SvxDrawPage* pDrawPage, const SfxItemPropertyMap* pPropertyMap  )  throw() :
+	SvxShape( pObj, pPropertyMap ),
+	mxPage( pDrawPage )
+{
+}
+
+//----------------------------------------------------------------------
 SvxShapeGroup::~SvxShapeGroup() throw()
 {
 }
diff --git svx/source/unodraw/unoshape.cxx svx/source/unodraw/unoshape.cxx
index edf2f81..53628b4 100644
--- svx/source/unodraw/unoshape.cxx
+++ svx/source/unodraw/unoshape.cxx
@@ -36,6 +36,7 @@
 #include <com/sun/star/awt/XBitmap.hpp>
 #include <com/sun/star/awt/Rectangle.hpp>
 #include <com/sun/star/drawing/CircleKind.hpp>
+#include <com/sun/star/xml/dom/XDocument.hpp>
 #include <com/sun/star/embed/NoVisualAreaSizeException.hpp>
 #include <cppuhelper/interfacecontainer.hxx>
 #include <vcl/svapp.hxx>
@@ -62,6 +63,7 @@
 #include "svx/xlnstit.hxx"
 #include "svx/xlnedit.hxx"
 #include "svx/svdogrp.hxx"
+#include "svx/svdodiagram.hxx"
 #include "svx/scene3d.hxx"
 #include "svx/svdmodel.hxx"
 #include "globl3d.hxx"
@@ -967,6 +969,7 @@ uno::Sequence< uno::Type > SAL_CALL SvxShape::_getTypes()
     case OBJ_TEXT:
     case OBJ_CAPTION:
     case OBJ_TABLE:
+	case OBJ_DIAGRAM:
     default:
         {
             static ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Type > aTypeSequence;
@@ -3751,6 +3754,7 @@ uno::Sequence< OUString > SAL_CALL SvxShape::_getSupportedServiceNames()
 
         case OBJ_OUTLINETEXT:
         case OBJ_TITLETEXT:
+		case OBJ_DIAGRAM:
         case OBJ_TEXT:
             {
                 static uno::Sequence< OUString > *pSeq = 0;
@@ -4524,6 +4528,115 @@ uno::Sequence< OUString > SvxShapeRect::getSupportedServiceNames(void) throw( un
     return SvxShape::getSupportedServiceNames();
 }
 
+/***********************************************************************
+* class SvxShapeDiagram                                                   *
+***********************************************************************/
+DBG_NAME(SvxShapeDiagram)
+SvxShapeDiagram::SvxShapeDiagram( SdrObject* pObj, SvxDrawPage* pDrawPage  )  throw() :
+    SvxShapeGroup( pObj, pDrawPage, aSvxMapProvider.GetMap(SVXMAP_DIAGRAM) )
+{
+    DBG_CTOR(SvxShapeDiagram,NULL);
+}
+
+SvxShapeDiagram::~SvxShapeDiagram() throw()
+{
+    DBG_DTOR(SvxShapeDiagram,NULL);
+}
+
+uno::Any SAL_CALL SvxShapeDiagram::queryInterface( const uno::Type & rType ) throw(uno::RuntimeException)
+{
+	return SvxShapeGroup::queryInterface( rType );
+}
+
+uno::Any SAL_CALL SvxShapeDiagram::queryAggregation( const uno::Type & rType ) throw(uno::RuntimeException)
+{
+	return SvxShapeGroup::queryAggregation( rType );
+}
+
+void SAL_CALL SvxShapeDiagram::acquire() throw()
+{
+	OWeakAggObject::acquire();
+}
+
+void SAL_CALL SvxShapeDiagram::release() throw()
+{
+	OWeakAggObject::release();
+}
+
+bool SvxShapeDiagram::setPropertyValueImpl( const SfxItemPropertyMap* pProperty, const ::com::sun::star::uno::Any& rValue ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::beans::PropertyVetoException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException)
+{
+	switch( pProperty->nWID )
+	{
+        case OWN_ATTR_DIAGRAM_DATA:
+        {
+            uno::Reference<xml::dom::XDocument> xVal( rValue,
+                                                      uno::UNO_QUERY );
+			((sdr::diagram::SdrDiagramObj*)mpObj.get())->SetDataFragment(xVal);
+            return true;
+        }
+
+        case OWN_ATTR_DIAGRAM_LAYOUT:
+        {
+            uno::Reference<xml::dom::XDocument> xVal( rValue,
+                                                      uno::UNO_QUERY );
+			((sdr::diagram::SdrDiagramObj*)mpObj.get())->SetLayoutFragment(xVal);
+            return true;
+        }
+
+        case OWN_ATTR_DIAGRAM_QSTYLE:
+        {
+            uno::Reference<xml::dom::XDocument> xVal( rValue,
+                                                      uno::UNO_QUERY );
+			((sdr::diagram::SdrDiagramObj*)mpObj.get())->SetQStyleFragment(xVal);
+            return true;
+        }
+
+        case OWN_ATTR_DIAGRAM_COLORSTYLE:
+        {
+            uno::Reference<xml::dom::XDocument> xVal( rValue,
+                                                      uno::UNO_QUERY );
+			((sdr::diagram::SdrDiagramObj*)mpObj.get())->SetColorStyleFragment(xVal);
+            return true;
+        }
+
+        default:
+            return SvxShapeGroup::setPropertyValueImpl( pProperty, rValue );
+	}
+}
+
+bool SvxShapeDiagram::getPropertyValueImpl( const SfxItemPropertyMap* pProperty, ::com::sun::star::uno::Any& rValue ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException)
+{
+	switch( pProperty->nWID )
+	{
+        case OWN_ATTR_DIAGRAM_DATA:
+            rValue <<= ((sdr::diagram::SdrDiagramObj*)mpObj.get())->GetDataFragment();
+            return true;
+
+        case OWN_ATTR_DIAGRAM_LAYOUT:
+            rValue <<= ((sdr::diagram::SdrDiagramObj*)mpObj.get())->GetLayoutFragment();
+            return true;
+
+        case OWN_ATTR_DIAGRAM_QSTYLE:
+            rValue <<= ((sdr::diagram::SdrDiagramObj*)mpObj.get())->GetQStyleFragment();
+            return true;
+
+        case OWN_ATTR_DIAGRAM_COLORSTYLE:
+            rValue <<= ((sdr::diagram::SdrDiagramObj*)mpObj.get())->GetColorStyleFragment();
+            return true;
+
+        default:
+            return SvxShapeGroup::getPropertyValueImpl( pProperty, rValue );
+	}
+}
+
+//----------------------------------------------------------------------
+// XServiceInfo
+//----------------------------------------------------------------------
+uno::Sequence< OUString > SvxShapeDiagram::getSupportedServiceNames(void) throw( uno::RuntimeException )
+{
+	return SvxShape::getSupportedServiceNames();
+}
+
 /** returns a StarOffice API wrapper for the given SdrObject */
 uno::Reference< drawing::XShape > GetXShapeForSdrObject( SdrObject* pObj ) throw ()
 {
diff --git svx/source/unodraw/unoshtxt.cxx svx/source/unodraw/unoshtxt.cxx
index 75ba1ec..68746c6 100644
--- svx/source/unodraw/unoshtxt.cxx
+++ svx/source/unodraw/unoshtxt.cxx
@@ -615,7 +615,7 @@ SvxTextForwarder* SvxTextEditSourceImpl::GetBackgroundTextForwarder()
         mbForwarderIsEditMode = sal_False;
     }
 
-    if( mpObject && mpText && !mbDataValid && mpObject->IsInserted() && mpObject->GetPage() )
+	if( mpObject && mpText && !mbDataValid )
     {
         mpTextForwarder->flushCache();
 
@@ -630,32 +630,40 @@ SvxTextForwarder* SvxTextEditSourceImpl::GetBackgroundTextForwarder()
         else
             mpOutlinerParaObject = mpText->GetOutlinerParaObject();
         
-        if( mpOutlinerParaObject && ( bTextEditActive || !mpObject->IsEmptyPresObj() || mpObject->GetPage()->IsMasterPage() ) )
+        if( mpObject->IsInserted() && mpObject->GetPage() )
         {
-            mpOutliner->SetText( *mpOutlinerParaObject );
+            if( mpOutlinerParaObject && ( bTextEditActive || !mpObject->IsEmptyPresObj() || mpObject->GetPage()->IsMasterPage() ) )
+            {
+                mpOutliner->SetText( *mpOutlinerParaObject );
 
-            // #91254# put text to object and set EmptyPresObj to FALSE
-            if( mpText && bTextEditActive && mpOutlinerParaObject && mpObject->IsEmptyPresObj() && pTextObj->IsRealyEdited() )
+                // #91254# put text to object and set EmptyPresObj to FALSE
+                if( mpText && bTextEditActive && mpOutlinerParaObject && mpObject->IsEmptyPresObj() && pTextObj->IsRealyEdited() )
+                {
+                    mpObject->SetEmptyPresObj( FALSE );
+                    static_cast< SdrTextObj* >( mpObject)->NbcSetOutlinerParaObjectForText( mpOutlinerParaObject, mpText );
+                }
+            }
+            else
             {
-                mpObject->SetEmptyPresObj( FALSE );
-                static_cast< SdrTextObj* >( mpObject)->NbcSetOutlinerParaObjectForText( mpOutlinerParaObject, mpText );
+                sal_Bool bVertical = mpOutlinerParaObject ? mpOutlinerParaObject->IsVertical() : sal_False;
+
+                // set objects style sheet on empty outliner
+                SfxStyleSheetPool* pPool = (SfxStyleSheetPool*)mpObject->GetModel()->GetStyleSheetPool();
+                if( pPool )
+                    mpOutliner->SetStyleSheetPool( pPool );
+
+                SfxStyleSheet* pStyleSheet = mpObject->GetPage()->GetTextStyleSheetForObject( mpObject );
+                if( pStyleSheet )
+                    mpOutliner->SetStyleSheet( 0, pStyleSheet );
+
+                if( bVertical )
+                    mpOutliner->SetVertical( sal_True );
             }
         }
         else
         {
-            sal_Bool bVertical = mpOutlinerParaObject ? mpOutlinerParaObject->IsVertical() : sal_False;
-
-            // set objects style sheet on empty outliner
-            SfxStyleSheetPool* pPool = (SfxStyleSheetPool*)mpObject->GetModel()->GetStyleSheetPool();
-            if( pPool )
-                mpOutliner->SetStyleSheetPool( pPool );
-
-            SfxStyleSheet* pStyleSheet = mpObject->GetPage()->GetTextStyleSheetForObject( mpObject );
-            if( pStyleSheet )
-                mpOutliner->SetStyleSheet( 0, pStyleSheet );
-
-            if( bVertical )
-                mpOutliner->SetVertical( sal_True );
+            if( mpOutlinerParaObject )
+                mpOutliner->SetText( *mpOutlinerParaObject );
         }
 
         // evtually we have to set the border attributes
diff --git xmloff/inc/xmlnmspe.hxx xmloff/inc/xmlnmspe.hxx
index ed02f95..c3aefd2 100644
--- xmloff/inc/xmlnmspe.hxx
+++ xmloff/inc/xmlnmspe.hxx
@@ -96,6 +96,7 @@ XML_OLD_NAMESPACE( META,	6U )
 // experimental namespaces
 XML_NAMESPACE( FIELD,			100U )
 XML_NAMESPACE( FORMX,           101U )      // form interop extensions
+XML_NAMESPACE( INTEROP,			102U )      // general interop extensions
 
 
 #endif	//  _XMLOFF_XMLNMSPE_HXX
diff --git xmloff/inc/xmloff/shapeexport.hxx xmloff/inc/xmloff/shapeexport.hxx
index 25e57fe..11a728b 100644
--- xmloff/inc/xmloff/shapeexport.hxx
+++ xmloff/inc/xmloff/shapeexport.hxx
@@ -128,6 +128,7 @@ enum XmlShapeType
     XmlShapeTypeDrawMediaShape,						// "com.sun.star.draw.MediaShape"
 
     XmlShapeTypeDrawTableShape,						// "com.sun.star.drawing.TableShape"
+	XmlShapeTypeDrawDiagramShape,					// "com.sun.star.drawing.DiagramShape"
 
     XmlShapeTypeNotYetSet
 };
@@ -227,6 +228,7 @@ private:
 
     // single shape exporters
     SAL_DLLPRIVATE void ImpExportGroupShape( const com::sun::star::uno::Reference< com::sun::star::drawing::XShape >& xShape, XmlShapeType eShapeType, sal_Int32 nFeatures = SEF_DEFAULT, com::sun::star::awt::Point* pRefPoint = NULL );
+	SAL_DLLPRIVATE void ImpExportDiagramShape( const com::sun::star::uno::Reference< com::sun::star::drawing::XShape >& xShape, XmlShapeType eShapeType, sal_Int32 nFeatures = SEF_DEFAULT, com::sun::star::awt::Point* pRefPoint = NULL );
     SAL_DLLPRIVATE void ImpExport3DSceneShape( const com::sun::star::uno::Reference< com::sun::star::drawing::XShape >& xShape, XmlShapeType eShapeType, sal_Int32 nFeatures = SEF_DEFAULT, com::sun::star::awt::Point* pRefPoint = NULL );
     SAL_DLLPRIVATE void ImpExportRectangleShape( const com::sun::star::uno::Reference< com::sun::star::drawing::XShape >& xShape, XmlShapeType eShapeType, sal_Int32 nFeatures = SEF_DEFAULT, com::sun::star::awt::Point* pRefPoint = NULL );
     SAL_DLLPRIVATE void ImpExportLineShape(const com::sun::star::uno::Reference< com::sun::star::drawing::XShape >& xShape, XmlShapeType eShapeType, sal_Int32 nFeatures = SEF_DEFAULT, com::sun::star::awt::Point* pRefPoint = NULL );
diff --git xmloff/inc/xmloff/xmlexp.hxx xmloff/inc/xmloff/xmlexp.hxx
index cb6f4c8..43ee30a 100644
--- xmloff/inc/xmloff/xmlexp.hxx
+++ xmloff/inc/xmloff/xmlexp.hxx
@@ -42,6 +42,7 @@
 #include <com/sun/star/xml/sax/XDocumentHandler.hpp>
 #include <com/sun/star/xml/sax/XAttributeList.hpp>
 #include <com/sun/star/xml/sax/XLocator.hpp>
+#include <com/sun/star/xml/dom/XDocument.hpp>
 #include <com/sun/star/util/XNumberFormatsSupplier.hpp>
 #include <com/sun/star/lang/XUnoTunnel.hpp>
 #include <rtl/ustring.hxx>
@@ -578,6 +579,9 @@ public:
     // --> OD 2008-11-26 #158694#
     const sal_Bool exportTextNumberElement() const;
     // <--
+
+    SAL_DLLPRIVATE ::rtl::OUString ImpExportFragment( const com::sun::star::uno::Reference<com::sun::star::xml::dom::XDocument>& xFragment,
+                                                      const ::rtl::OUString& rPrefix );
 };
 
 inline UniReference< XMLTextParagraphExport > SvXMLExport::GetTextParagraphExport()
diff --git xmloff/inc/xmloff/xmlimp.hxx xmloff/inc/xmloff/xmlimp.hxx
index 610819d..71337c6 100644
--- xmloff/inc/xmloff/xmlimp.hxx
+++ xmloff/inc/xmloff/xmlimp.hxx
@@ -63,6 +63,7 @@ namespace rtl { class OUString; }
 namespace com { namespace sun { namespace star {
     namespace frame { class XModel; }
     namespace io { class XOutputStream; }
+	namespace embed { class XStorage; }
 } } }
 namespace comphelper { class UnoInterfaceToUniqueIdentifierMapper; }
 
@@ -414,6 +415,9 @@ public:
     sal_Bool IsTextDocInOOoFileFormat() const;
     // <--
 
+    ::com::sun::star::uno::Reference< 
+        ::com::sun::star::embed::XStorage> GetSourceStorage() const;
+
     String GetBaseURL() const;
     String GetDocumentBase() const;
 
@@ -425,6 +429,11 @@ public:
             ::com::sun::star::uno::XInterface> const & i_xIfc,
         ::rtl::OUString const & i_rXmlId);
 
+    void ImpLoadFragment(const com::sun::star::uno::Reference< 
+                            com::sun::star::beans::XPropertySet>& xPropSet,
+                         const rtl::OUString& rAttrValue,
+                         const char* sPropName );
+
     // #i31958# XForms helper method
     // (to be implemented by applications suporting XForms)
     virtual void initXForms();
diff --git xmloff/inc/xmloff/xmltoken.hxx xmloff/inc/xmloff/xmltoken.hxx
index f233002..8e4cca2 100644
--- xmloff/inc/xmloff/xmltoken.hxx
+++ xmloff/inc/xmloff/xmltoken.hxx
@@ -3089,6 +3089,15 @@ namespace xmloff { namespace token {
         XML_AT_AXIS,
         XML_AT_LABELS_AND_AXIS,
 
+        // quick diagramming
+        XML_DIAGRAM_DATA_URL,
+        XML_DIAGRAM_LAYOUT_URL,
+        XML_DIAGRAM_QSTYLE_URL,
+        XML_DIAGRAM_COLORSTYLE_URL,
+        XML_THEME_URL,
+        XML_N_INTEROP,
+        XML_NP_INTEROP,
+
         XML_TOKEN_END
     };
 
diff --git xmloff/source/core/xmlexp.cxx xmloff/source/core/xmlexp.cxx
index beda63a..324936b 100644
--- xmloff/source/core/xmlexp.cxx
+++ xmloff/source/core/xmlexp.cxx
@@ -46,6 +46,13 @@
 #include <com/sun/star/xml/sax/SAXInvalidCharacterException.hpp>
 #include <com/sun/star/uri/XUriReferenceFactory.hpp>
 #include <com/sun/star/uri/UriReferenceFactory.hpp>
+#include <com/sun/star/embed/XStorage.hpp>
+#include <com/sun/star/embed/ElementModes.hpp>
+#include <com/sun/star/embed/XTransactedObject.hpp>
+#include <com/sun/star/xml/sax/XExtendedDocumentHandler.hpp>
+#include <com/sun/star/xml/sax/XSAXSerializable.hpp>
+#include <com/sun/star/io/XOutputStream.hpp>
+#include <com/sun/star/io/XActiveDataSource.hpp>
 #include <comphelper/processfactory.hxx>
 #include <comphelper/configurationhelper.hxx>
 #include <xmloff/attrlist.hxx>
@@ -308,6 +315,7 @@ void SvXMLExport::_InitCtor()
     {
         mpNamespaceMap->Add( GetXMLToken(XML_NP_SCRIPT), GetXMLToken(XML_N_SCRIPT), XML_NAMESPACE_SCRIPT );
         mpNamespaceMap->Add( GetXMLToken(XML_NP_DOM), GetXMLToken(XML_N_DOM), XML_NAMESPACE_DOM );
+		mpNamespaceMap->Add( GetXMLToken(XML_NP_INTEROP), GetXMLToken(XML_N_INTEROP), XML_NAMESPACE_INTEROP );
     }
     if( (getExportFlags() & EXPORT_CONTENT ) != 0 )
     {
@@ -316,6 +324,7 @@ void SvXMLExport::_InitCtor()
         mpNamespaceMap->Add( GetXMLToken(XML_NP_XSI), GetXMLToken(XML_N_XSI), XML_NAMESPACE_XSI );
         mpNamespaceMap->Add( GetXMLToken(XML_NP_FIELD), GetXMLToken(XML_N_FIELD), XML_NAMESPACE_FIELD );
 		mpNamespaceMap->Add( GetXMLToken(XML_NP_FORMX), GetXMLToken(XML_N_FORMX), XML_NAMESPACE_FORMX );
+ 		mpNamespaceMap->Add( GetXMLToken(XML_NP_INTEROP), GetXMLToken(XML_N_INTEROP), XML_NAMESPACE_INTEROP );
     }
     if( (getExportFlags() & (EXPORT_STYLES|EXPORT_AUTOSTYLES|EXPORT_MASTERSTYLES|EXPORT_CONTENT) ) != 0 )
     {
@@ -2394,6 +2403,76 @@ const sal_Bool SvXMLExport::exportTextNumberElement() const
 }
 // <--
 
+
+OUString SvXMLExport::ImpExportFragment( const uno::Reference<xml::dom::XDocument>& xFragment,
+                                         const OUString& sPrefix )
+{
+    // TODO: flat xml?! const bool bExportEmbedded(0 != (mrExport.getExportFlags() & EXPORT_EMBEDDED));
+    if( !xFragment.is() )
+        return OUString();
+
+    const OUString sPath(RTL_CONSTASCII_USTRINGPARAM( "ooxml-fragments" ));
+
+    uno::Reference< embed::XStorage > xStorage( 
+        GetTargetStorage(), 
+        uno::UNO_QUERY_THROW );
+    uno::Reference< embed::XStorage > xFragmentStorage(
+        xStorage->openStorageElement( sPath,
+                                      ::embed::ElementModes::READWRITE ), 
+        uno::UNO_QUERY_THROW );
+
+    OUString sFragmentName;
+    const OUString sSuffix( RTL_CONSTASCII_USTRINGPARAM(".xml") );
+
+    // search unused filename
+    sal_Int32 nIndex = 0;
+    do
+    {
+        sFragmentName = sPrefix;
+        sFragmentName += OUString::valueOf( ++nIndex );
+        sFragmentName += sSuffix;
+    }
+    while( xFragmentStorage->hasByName( sFragmentName ) );
+
+    uno::Reference< io::XOutputStream > xFragmentStream(
+        xFragmentStorage->openStreamElement( 
+            sFragmentName, 
+            ::embed::ElementModes::WRITE ), 
+        uno::UNO_QUERY_THROW );
+
+    uno::Reference< lang::XMultiServiceFactory > xFactory( 
+        ::comphelper::getProcessServiceFactory() );
+    uno::Reference<xml::sax::XDocumentHandler> xHandler(
+        xFactory->createInstance( 
+            OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.xml.sax.Writer" ))),
+        uno::UNO_QUERY_THROW);			
+    uno::Reference<io::XActiveDataSource> xMetaSrc( xHandler, 
+                                                    uno::UNO_QUERY_THROW );
+    xMetaSrc->setOutputStream( xFragmentStream );
+
+#if 0
+    // enable pretty printing
+    uno::Reference<xml::sax::XExtendedDocumentHandler> xHandler(
+    if( 0 != (mrExport.getExportFlags() & EXPORT_PRETTY) )
+        xHandler->allowLineBreak();
+#endif
+
+    // serialize xFragment to sax handler
+    uno::Reference<xml::sax::XSAXSerializable> xSerializable(
+        xFragment,
+        uno::UNO_QUERY_THROW);
+    xSerializable->serialize(xHandler,
+                             uno::Sequence<beans::StringPair>());
+
+    // try to commit to disk immediately
+    uno::Reference< embed::XTransactedObject > xTrans( xFragmentStorage, 
+                                                       uno::UNO_QUERY );
+    if( xTrans.is() )
+        xTrans->commit();
+
+    return sPath + OUString(RTL_CONSTASCII_USTRINGPARAM("/")) + sFragmentName;
+}
+
 //=============================================================================
 
 void SvXMLElementExport::StartElement( SvXMLExport& rExp,
diff --git xmloff/source/core/xmlimp.cxx xmloff/source/core/xmlimp.cxx
index 9a37d8f..7b15100 100644
--- xmloff/source/core/xmlimp.cxx
+++ xmloff/source/core/xmlimp.cxx
@@ -57,8 +57,14 @@
 #include <com/sun/star/lang/XMultiServiceFactory.hpp>
 #include <com/sun/star/lang/ServiceNotRegisteredException.hpp>
 #include <com/sun/star/io/XOutputStream.hpp>
+#include <com/sun/star/embed/XStorage.hpp>
 #include <com/sun/star/document/XBinaryStreamResolver.hpp>
 #include <com/sun/star/xml/sax/XLocator.hpp>
+#include <com/sun/star/embed/XStorage.hpp>
+#include <com/sun/star/embed/ElementModes.hpp>
+#include <com/sun/star/io/XInputStream.hpp>
+#include <com/sun/star/xml/dom/XDocument.hpp>
+#include <com/sun/star/xml/dom/XDocumentBuilder.hpp>
 #include <comphelper/namecontainer.hxx>
 #include <rtl/logfile.hxx>
 #include <tools/string.hxx> // used in StartElement for logging
@@ -175,6 +181,8 @@ public:
 
     ::rtl::OUString aODFVersion;
 
+    uno::Reference<embed::XStorage> mxSourceStorage;
+
     // --> OD 2004-08-10 #i28749# - boolean, indicating that position attributes
     // of shapes are given in horizontal left-to-right layout. This is the case
     // for the OpenOffice.org file format.
@@ -985,6 +993,12 @@ void SAL_CALL SvXMLImport::initialize( const uno::Sequence< uno::Any >& aArgumen
                     uno::Any aAny = mxImportInfo->getPropertyValue(sPropName);
                     aAny >>= (mpImpl->mbShapePositionInHoriL2R);
                 }
+                sPropName = OUString( RTL_CONSTASCII_USTRINGPARAM("SourceStorage" ) );
+				if( xPropertySetInfo->hasPropertyByName(sPropName) )
+				{
+					uno::Any aAny = mxImportInfo->getPropertyValue(sPropName);
+                    aAny >>= (mpImpl->mxSourceStorage);
+				}
                 // <--
                 // --> OD 2007-12-19 #152540#
                 sPropName = OUString( RTL_CONSTASCII_USTRINGPARAM("TextDocInOOoFileFormat" ) );
@@ -1823,6 +1837,11 @@ sal_Bool SvXMLImport::IsTextDocInOOoFileFormat() const
 
 // <--
 
+uno::Reference<embed::XStorage> SvXMLImport::GetSourceStorage() const
+{
+    return mpImpl->mxSourceStorage;
+}
+
 void SvXMLImport::initXForms()
 {
     // dummy method; to be implemented by derived classes supporting XForms
@@ -1908,3 +1927,35 @@ void SvXMLImport::SetXmlId(uno::Reference<uno::XInterface> const & i_xIfc,
     }
 }
 
+void SvXMLImport::ImpLoadFragment(const uno::Reference< beans::XPropertySet >& xPropSet,
+                                  const rtl::OUString& rAttrValue,
+                                  const char* sPropName )
+{
+    if( !GetSourceStorage().is() )
+        return; // TODO: set that in other apps, not only Impress
+
+    uno::Reference< embed::XStorage > xStorage( 
+        GetSourceStorage(), 
+        uno::UNO_QUERY_THROW );
+
+    sal_Int32 nDummy=0;
+    uno::Reference< embed::XStorage > xFragmentStorage(
+        xStorage->openStorageElement( rAttrValue.getToken(0,'/',nDummy),
+                                      ::embed::ElementModes::READ ), 
+        uno::UNO_QUERY_THROW );
+
+    uno::Reference< io::XInputStream > xFragmentStream(
+        xFragmentStorage->openStreamElement( 
+            rAttrValue.getToken(0,'/',nDummy), 
+            embed::ElementModes::READ ), 
+        uno::UNO_QUERY_THROW );
+
+    uno::Reference<xml::dom::XDocumentBuilder> xDomBuilder( 
+        getServiceFactory()->createInstance(
+            OUString( RTL_CONSTASCII_USTRINGPARAM("com.sun.star.xml.dom.DocumentBuilder") )),
+        uno::UNO_QUERY_THROW );
+    
+    // create DOM from fragment, set at shape
+    xPropSet->setPropertyValue( OUString::createFromAscii(sPropName),
+                                uno::makeAny(xDomBuilder->parse(xFragmentStream)) );
+}
diff --git xmloff/source/core/xmltoken.cxx xmloff/source/core/xmltoken.cxx
index 5e5f1ef..8d2c8d6 100644
--- xmloff/source/core/xmltoken.cxx
+++ xmloff/source/core/xmltoken.cxx
@@ -3091,6 +3091,14 @@ namespace xmloff { namespace token {
         TOKEN( "at-axis",               XML_AT_AXIS ),
         TOKEN( "at-labels-and-axis",    XML_AT_LABELS_AND_AXIS ),
 
+        TOKEN( "diagram-data-url",      XML_DIAGRAM_DATA_URL ),
+        TOKEN( "diagram-layout-url",    XML_DIAGRAM_LAYOUT_URL ),
+        TOKEN( "diagram-qstyle-url",    XML_DIAGRAM_QSTYLE_URL ),
+        TOKEN( "diagram-colorstyle-url",XML_DIAGRAM_COLORSTYLE_URL ),
+        TOKEN( "theme-url",             XML_THEME_URL ),
+        TOKEN( "urn:openoffice:names:experimental:ooo-ms-interop:xmlns:diagram:1.0",   XML_N_INTEROP ),
+        TOKEN( "interop",               XML_NP_INTEROP ),
+
 #if OSL_DEBUG_LEVEL > 0
         { 0, NULL, NULL,                       XML_TOKEN_END }
 #else
diff --git xmloff/source/draw/sdxmlexp.cxx xmloff/source/draw/sdxmlexp.cxx
index fce9ef0..49c1510 100644
--- xmloff/source/draw/sdxmlexp.cxx
+++ xmloff/source/draw/sdxmlexp.cxx
@@ -66,6 +66,7 @@
 #include <xmloff/xmlaustp.hxx>
 #include <xmloff/families.hxx>
 #include <xmloff/styleexp.hxx>
+#include <xmloff/shapeexport.hxx>
 #include "sdpropls.hxx"
 #include <xmloff/xmlexppr.hxx>
 #include <com/sun/star/beans/XPropertyState.hpp>
@@ -2521,6 +2522,20 @@ void SdXMLExport::_ExportMasterStyles()
                 AddAttribute(XML_NAMESPACE_DRAW, XML_STYLE_NAME, 
                         maMasterPagesStyleNames[nMPageId]);
 
+            // interop:theme-url (maste page theme ooxml fragment)
+            Reference< beans::XPropertySet > xPropSet( xMasterPage, UNO_QUERY );
+            if( !xPropSet.is() )
+                return;
+            Reference<xml::dom::XDocument> xThemeFragment;
+            xPropSet->getPropertyValue(
+                OUString(RTL_CONSTASCII_USTRINGPARAM("PPTTheme"))) >>= xThemeFragment;
+            AddAttribute(
+                XML_NAMESPACE_INTEROP, XML_THEME_URL, 
+                ImpExportFragment(
+                    xThemeFragment,
+                    OUString( 
+                        RTL_CONSTASCII_USTRINGPARAM( "theme" ) )));            
+
             // write masterpage
             SvXMLElementExport aMPG(*this, XML_NAMESPACE_STYLE, XML_MASTER_PAGE, sal_True, sal_True);
 
diff --git xmloff/source/draw/sdxmlimp.cxx xmloff/source/draw/sdxmlimp.cxx
index 463c7d9..50b11cc 100644
--- xmloff/source/draw/sdxmlimp.cxx
+++ xmloff/source/draw/sdxmlimp.cxx
@@ -120,6 +120,7 @@ static __FAR_DATA SvXMLTokenMapEntry aMasterPageAttrTokenMap[] =
     { XML_NAMESPACE_PRESENTATION,	XML_USE_HEADER_NAME,				XML_TOK_MASTERPAGE_USE_HEADER_NAME	},
     { XML_NAMESPACE_PRESENTATION,	XML_USE_FOOTER_NAME,				XML_TOK_MASTERPAGE_USE_FOOTER_NAME	},
     { XML_NAMESPACE_PRESENTATION,	XML_USE_DATE_TIME_NAME,				XML_TOK_MASTERPAGE_USE_DATE_TIME_NAME	},
+	{ XML_NAMESPACE_INTEROP,	    XML_THEME_URL,				        XML_TOK_MASTERPAGE_THEME_URL	},
     XML_TOKEN_MAP_END
 };
 
@@ -467,6 +468,11 @@ SdXMLImport::SdXMLImport(
         GetXMLToken(XML_NP_ANIMATION),
         GetXMLToken(XML_N_ANIMATION), 
         XML_NAMESPACE_ANIMATION);
+
+	GetNamespaceMap().Add(
+		GetXMLToken(XML_NP_INTEROP),
+        GetXMLToken(XML_N_INTEROP), 
+		XML_NAMESPACE_INTEROP);
 }
 
 // XImporter
diff --git xmloff/source/draw/sdxmlimp_impl.hxx xmloff/source/draw/sdxmlimp_impl.hxx
index 3cf1468..00b580a 100644
--- xmloff/source/draw/sdxmlimp_impl.hxx
+++ xmloff/source/draw/sdxmlimp_impl.hxx
@@ -94,7 +94,8 @@ enum SdXMLMasterPageAttrTokenMap
     XML_TOK_MASTERPAGE_PAGE_LAYOUT_NAME,
     XML_TOK_MASTERPAGE_USE_HEADER_NAME,
     XML_TOK_MASTERPAGE_USE_FOOTER_NAME,
-    XML_TOK_MASTERPAGE_USE_DATE_TIME_NAME
+	XML_TOK_MASTERPAGE_USE_DATE_TIME_NAME,
+	XML_TOK_MASTERPAGE_THEME_URL
 };
 
 enum SdXMLPageMasterAttrTokenMap
diff --git xmloff/source/draw/shapeexport.cxx xmloff/source/draw/shapeexport.cxx
index 75298f8..b6ec8c7 100644
--- xmloff/source/draw/shapeexport.cxx
+++ xmloff/source/draw/shapeexport.cxx
@@ -237,7 +237,8 @@ void XMLShapeExport::collectShapeAutoStyles(const uno::Reference< drawing::XShap
         aShapeInfo.meShapeType != XmlShapeTypeDraw3DExtrudeObject &&
         aShapeInfo.meShapeType != XmlShapeTypeDrawPageShape &&
         aShapeInfo.meShapeType != XmlShapeTypePresPageShape &&
-        aShapeInfo.meShapeType != XmlShapeTypeDrawGroupShape;
+		aShapeInfo.meShapeType != XmlShapeTypeDrawGroupShape &&
+		aShapeInfo.meShapeType != XmlShapeTypeDrawDiagramShape;
 
     const bool bObjSupportsStyle =
         aShapeInfo.meShapeType != XmlShapeTypeDrawGroupShape;
@@ -763,6 +764,12 @@ void XMLShapeExport::exportShape(const uno::Reference< drawing::XShape >& xShape
             break;
         }
 
+		case XmlShapeTypeDrawDiagramShape:
+		{
+            ImpExportDiagramShape( xShape, XmlShapeTypeDrawGroupShape, nFeatures, pRefPoint );
+			break;
+		}
+
         case XmlShapeTypeDrawPageShape:
         case XmlShapeTypePresPageShape:
         case XmlShapeTypeHandoutShape:
@@ -1060,6 +1067,7 @@ void XMLShapeExport::ImpCalcShapeType(const uno::Reference< drawing::XShape >& x
                 else if(aType.EqualsAscii("Applet", 21, 6)) { eShapeType = XmlShapeTypeDrawAppletShape; }
                 else if(aType.EqualsAscii("MediaShape", 21, 10)) { eShapeType = XmlShapeTypeDrawMediaShape; }
                 else if(aType.EqualsAscii("TableShape", 21, 10)) { eShapeType = XmlShapeTypeDrawTableShape; }
+				else if(aType.EqualsAscii("DiagramShape", 21, 12)) { eShapeType = XmlShapeTypeDrawDiagramShape; }
 
                 // 3D shapes
                 else if(aType.EqualsAscii("Scene", 21 + 7, 5)) { eShapeType = XmlShapeTypeDraw3DSceneObject; }
diff --git xmloff/source/draw/shapeexport2.cxx xmloff/source/draw/shapeexport2.cxx
index 8a446a8..b095661 100644
--- xmloff/source/draw/shapeexport2.cxx
+++ xmloff/source/draw/shapeexport2.cxx
@@ -42,8 +42,11 @@
 #include <com/sun/star/document/XEventsSupplier.hpp>
 #include <com/sun/star/drawing/HomogenMatrix3.hpp>
 #include <com/sun/star/media/ZoomLevel.hpp>
+#include <com/sun/star/xml/dom/XDocument.hpp>
 #include "anim.hxx"
 
+#include <comphelper/processfactory.hxx>
+
 #ifndef _XMLOFF_SHAPEEXPORT_HXX
 #include <xmloff/shapeexport.hxx>
 #endif
@@ -623,6 +626,59 @@ void XMLShapeExport::ImpExportGroupShape( const uno::Reference< drawing::XShape
 
 //////////////////////////////////////////////////////////////////////////////
 
+void XMLShapeExport::ImpExportDiagramShape( const uno::Reference< drawing::XShape >& xShape, XmlShapeType eType, sal_Int32 nFeatures, awt::Point* pRefPoint)
+{
+    uno::Reference< beans::XPropertySet > xSet( xShape, 
+                                                uno::UNO_QUERY );
+    if( !xSet.is() )
+        return;
+
+    uno::Reference<xml::dom::XDocument> xDoc;
+    xSet->getPropertyValue( 
+        OUString( 
+            RTL_CONSTASCII_USTRINGPARAM( "DiagramData" ) ) ) >>= xDoc;
+    mrExport.AddAttribute(
+        XML_NAMESPACE_INTEROP, XML_DIAGRAM_DATA_URL, 
+        mrExport.ImpExportFragment(
+            xDoc,
+            OUString( 
+                RTL_CONSTASCII_USTRINGPARAM( "data" ) )));
+
+    xSet->getPropertyValue( 
+        OUString( 
+            RTL_CONSTASCII_USTRINGPARAM( "DiagramLayout" ) ) ) >>= xDoc;
+    mrExport.AddAttribute(
+        XML_NAMESPACE_INTEROP, XML_DIAGRAM_LAYOUT_URL, 
+        mrExport.ImpExportFragment(
+            xDoc,
+            OUString( 
+                RTL_CONSTASCII_USTRINGPARAM( "layout" ) )));
+        
+    xSet->getPropertyValue( 
+        OUString( 
+            RTL_CONSTASCII_USTRINGPARAM( "DiagramQStyle" ) ) ) >>= xDoc;
+    mrExport.AddAttribute(
+        XML_NAMESPACE_INTEROP, XML_DIAGRAM_QSTYLE_URL, 
+        mrExport.ImpExportFragment(
+            xDoc,
+            OUString( 
+                RTL_CONSTASCII_USTRINGPARAM( "qstyle" ) )));
+        
+    xSet->getPropertyValue( 
+        OUString( 
+            RTL_CONSTASCII_USTRINGPARAM( "DiagramColorStyle" ) ) ) >>= xDoc;
+    mrExport.AddAttribute(
+        XML_NAMESPACE_INTEROP, XML_DIAGRAM_COLORSTYLE_URL, 
+        mrExport.ImpExportFragment(
+            xDoc,
+            OUString( 
+                RTL_CONSTASCII_USTRINGPARAM( "colorstyle" ) )));
+
+    ImpExportGroupShape( xShape, eType, nFeatures, pRefPoint );
+}
+
+//////////////////////////////////////////////////////////////////////////////
+
 void XMLShapeExport::ImpExportTextBoxShape(
     const uno::Reference< drawing::XShape >& xShape,
     XmlShapeType eShapeType, sal_Int32 nFeatures, awt::Point* pRefPoint)
diff --git xmloff/source/draw/shapeexport4.cxx xmloff/source/draw/shapeexport4.cxx
index d3025e0..1980af3 100644
--- xmloff/source/draw/shapeexport4.cxx
+++ xmloff/source/draw/shapeexport4.cxx
@@ -1132,20 +1132,23 @@ void XMLShapeExport::ImpExportTableShape( const uno::Reference< drawing::XShape
 
                     const XMLPropertyMapEntry* pEntry = &aXMLTableShapeAttributes[0];
 
-                    while( pEntry->msApiName ) try
+					while( pEntry->msApiName ) 
                     {
-                        sal_Bool bBool = sal_False;
-                        const OUString sAPIPropertyName( OUString(pEntry->msApiName, pEntry->nApiNameLength, RTL_TEXTENCODING_ASCII_US ) );
-
-                        xPropSet->getPropertyValue( sAPIPropertyName ) >>= bBool;
-                        if( bBool )
-                            mrExport.AddAttribute(pEntry->mnNameSpace, pEntry->meXMLName, XML_TRUE );
+                        try
+                        {
+                            sal_Bool bBool = sal_False;
+                            const OUString sAPIPropertyName( OUString(pEntry->msApiName, pEntry->nApiNameLength, RTL_TEXTENCODING_ASCII_US ) );
+                            
+                            xPropSet->getPropertyValue( sAPIPropertyName ) >>= bBool;
+                            if( bBool )
+                                mrExport.AddAttribute(pEntry->mnNameSpace, pEntry->meXMLName, XML_TRUE );
+                        }
+                        catch( uno::Exception& )
+                        {
+                            DBG_ERROR("XMLShapeExport::ImpExportTableShape(), exception caught!");
+                        }
                         pEntry++;
                     }
-                    catch( uno::Exception& )
-                    {
-                        DBG_ERROR("XMLShapeExport::ImpExportTableShape(), exception caught!");
-                    }
                 }
             }
             uno::Reference< table::XColumnRowRange > xRange( xPropSet->getPropertyValue( msModel ), uno::UNO_QUERY_THROW );
diff --git xmloff/source/draw/ximpgrp.cxx xmloff/source/draw/ximpgrp.cxx
index 89e2a4e..f6c1b43 100644
--- xmloff/source/draw/ximpgrp.cxx
+++ xmloff/source/draw/ximpgrp.cxx
@@ -102,11 +102,46 @@ SvXMLImportContext* SdXMLGroupShapeContext::CreateChildContext( USHORT nPrefix,
 
 //////////////////////////////////////////////////////////////////////////////
 
-void SdXMLGroupShapeContext::StartElement(const uno::Reference< xml::sax::XAttributeList>&)
+void SdXMLGroupShapeContext::StartElement(const uno::Reference< xml::sax::XAttributeList>& xAttrs)
 {
+    // HACK: when interop:diagram-data-url attribute is there, create
+    // a diagram shape instead
+    if( xAttrs->getValueByName(OUString::createFromAscii("interop:diagram-data-url")).getLength() )
+    {
+        AddShape( "com.sun.star.drawing.DiagramShape" );
+
+		uno::Reference< beans::XPropertySet > xPropSet(mxShape, 
+                                                       uno::UNO_QUERY);
+		if(xPropSet.is())
+        {
+            GetImport().ImpLoadFragment(
+                xPropSet,
+                xAttrs->getValueByName(
+                    OUString::createFromAscii("interop:diagram-data-url")),
+                "DiagramData");
+            GetImport().ImpLoadFragment(
+                xPropSet,
+                xAttrs->getValueByName(
+                    OUString::createFromAscii("interop:diagram-layout-url")),
+                "DiagramLayout");
+            GetImport().ImpLoadFragment(
+                xPropSet,
+                xAttrs->getValueByName(
+                    OUString::createFromAscii("interop:diagram-qstyle-url")),
+                "DiagramQStyle");
+            GetImport().ImpLoadFragment(
+                xPropSet,
+                xAttrs->getValueByName(
+                    OUString::createFromAscii("interop:diagram-colorstyle-url")),
+                "DiagramColorStyle");
+        }
+    }
+    else
+        AddShape( "com.sun.star.drawing.GroupShape" );
+
     // create new group shape and add it to rShapes, use it
     // as base for the new group import
-    AddShape( "com.sun.star.drawing.GroupShape" );
+	// AddShape( "com.sun.star.drawing.GroupShape" );
 
     if(mxShape.is())
     {
diff --git xmloff/source/draw/ximpshap.cxx xmloff/source/draw/ximpshap.cxx
index 770366b..827f8d1 100644
--- xmloff/source/draw/ximpshap.cxx
+++ xmloff/source/draw/ximpshap.cxx
@@ -3597,16 +3597,20 @@ void SdXMLTableShapeContext::StartElement( const ::com::sun::star::uno::Referenc
 
             const XMLPropertyMapEntry* pEntry = &aXMLTableShapeAttributes[0];
             int i = 0;
-            while( pEntry->msApiName && (i < 6) ) try
+			while( pEntry->msApiName && (i < 6) ) 
             {
-                const OUString sAPIPropertyName( OUString(pEntry->msApiName, pEntry->nApiNameLength, RTL_TEXTENCODING_ASCII_US ) );
-                xProps->setPropertyValue( sAPIPropertyName, Any( maTemplateStylesUsed[i++] ) );
+                try
+                {
+                    const OUString sAPIPropertyName( OUString(pEntry->msApiName, pEntry->nApiNameLength, RTL_TEXTENCODING_ASCII_US ) );
+                    xProps->setPropertyValue( sAPIPropertyName, Any( maTemplateStylesUsed[i] ) );
+                }
+                catch( Exception& )
+                {
+                    DBG_ERROR("SdXMLTableShapeContext::StartElement(), exception caught!");
+                }
                 pEntry++;
+                i++;
             }
-            catch( Exception& )
-            {
-                DBG_ERROR("SdXMLTableShapeContext::StartElement(), exception caught!");
-            }			
         }
 
         GetImport().GetShapeImport()->finishShape( mxShape, mxAttrList, mxShapes );
diff --git xmloff/source/draw/ximpstyl.cxx xmloff/source/draw/ximpstyl.cxx
index a96b5bf..eb1226e 100644
--- xmloff/source/draw/ximpstyl.cxx
+++ xmloff/source/draw/ximpstyl.cxx
@@ -870,6 +870,13 @@ SdXMLMasterPageContext::SdXMLMasterPageContext(
                 maUseDateTimeDeclName =  sValue;
                 break;
             }
+			case XML_TOK_MASTERPAGE_THEME_URL:
+			{
+                Reference <beans::XPropertySet> xSet(rShapes, 
+                                                     uno::UNO_QUERY_THROW );
+                GetImport().ImpLoadFragment(xSet, sValue, "PPTTheme" );
+				break;
+			}
         }
     }
 
