Index: gcc/varasm.c
===================================================================
RCS file: /cvsroot/gcc/gcc/gcc/varasm.c,v
retrieving revision 1.477.6.11
diff -u -r1.477.6.11 varasm.c
--- gcc/varasm.c	17 May 2005 07:03:33 -0000	1.477.6.11
+++ gcc/varasm.c	18 Jul 2005 16:38:50 -0000
@@ -3730,6 +3740,13 @@
 
    ALIGN is the alignment of the data in bits.  */
 
+#define DEFTREECODE(SYM, STRING, TYPE, NARGS) STRING,
+static const char *foo_codes[] =
+{
+#include "tree.def"
+};
+#undef DEFTREECODE
+
 void
 output_constant (tree exp, unsigned HOST_WIDE_INT size, unsigned int align)
 {
@@ -3785,10 +3802,37 @@
     case POINTER_TYPE:
     case REFERENCE_TYPE:
     case OFFSET_TYPE:
-      if (! assemble_integer (expand_expr (exp, NULL_RTX, VOIDmode,
-					   EXPAND_INITIALIZER),
-			      MIN (size, thissize), align, 0))
-	error ("initializer for integer value is too complicated");
+      {
+        rtx expanded;
+    tree fn;
+
+    expanded = expand_expr (exp, NULL_RTX, VOIDmode,
+                EXPAND_INITIALIZER);
+
+        if (getenv("VTPLT") && TREE_CODE(exp) == ADDR_EXPR &&
+        TREE_CODE((fn = TREE_OPERAND(exp, 0))) == FUNCTION_DECL &&
+        DECL_VIRTUAL_P(fn) && !DECL_IS_BUILTIN(fn))
+          {
+        const char *op = integer_asm_op(MIN(size,thissize), align);
+        fputs(op, asm_out_file);
+        output_addr_const (asm_out_file, expanded); // FIXME: here
+        fputs("@PLTABS\n", asm_out_file);
+      }
+    else
+      {
+        if (! assemble_integer (expanded,
+                MIN (size, thissize), align, 0))
+          error ("initializer for integer value is too complicated");
+      }
+    /*	  {
+        tree fn = TREE_OPERAND(exp, 0);
+        if (TREE_CODE
+
+        fprintf( stderr, "assemble_integer '%s' '%s' '%s' (%d)\n",
+             foo_codes[code], foo_codes[TREE_CODE(exp)],
+             foo_codes[TREE_CODE(fn)], BINFO_VIRTUAL_P(fn));
+             }*/
+      }
       break;
 
     case REAL_TYPE:
