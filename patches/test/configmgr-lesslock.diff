Index: configmgr/source/data/segmentheap.cxx
===================================================================
RCS file: /cvs/util/configmgr/source/data/segmentheap.cxx,v
retrieving revision 1.2
diff -u -p -u -r1.2 segmentheap.cxx
--- configmgr/source/data/segmentheap.cxx	8 Sep 2005 03:39:41 -0000	1.2
+++ configmgr/source/data/segmentheap.cxx	7 Mar 2006 22:21:03 -0000
@@ -54,16 +54,16 @@ namespace configmgr
 
         SegmentHeap::~SegmentHeap()
         {
-            m_heap.destroyLock(m_lock);
+//            m_heap.destroyLock(m_lock);
         }
     // -------------------------------------------------------------------------
 
         void SegmentHeap::init()
         {
-            m_lock = m_heap.createLock();
+//            m_lock = m_heap.createLock();
             m_base = m_heap.base();
 
-            OSL_ENSURE(m_lock,"Could not create heap lock");
+//            OSL_ENSURE(m_lock,"Could not create heap lock");
         }
     // -------------------------------------------------------------------------
 
Index: configmgr/source/inc/segment.hxx
===================================================================
RCS file: /cvs/util/configmgr/source/inc/segment.hxx,v
retrieving revision 1.4
diff -u -p -u -r1.4 segment.hxx
--- configmgr/source/inc/segment.hxx	8 Sep 2005 03:55:04 -0000	1.4
+++ configmgr/source/inc/segment.hxx	7 Mar 2006 22:21:03 -0000
@@ -79,27 +79,27 @@ namespace configmgr
 
             Heap& acquireWriteAccess()       
             { 
-                this->lock().acquireWriteAccess(); 
+//                this->lock().acquireWriteAccess(); 
                 return this->heap(); 
             }
 
             void  releaseWriteAccess(Heap&)  
             { 
-                this->lock().releaseWriteAccess(); 
+//                this->lock().releaseWriteAccess(); 
             }
 
             void const * acquireReadAccess() const 
             { 
-                this->lock().acquireReadAccess();
+//                this->lock().acquireReadAccess();
                 return base();
             }
             void releaseReadAccess (void const * ) const 
             { 
-                this->lock().releaseReadAccess(); 
+//                this->lock().releaseReadAccess(); 
             }
         private:
             Heap & heap()       { return m_heap; }
-            Lock & lock() const { return m_heap.lock(); }
+//            Lock & lock() const { return m_heap.lock(); }
             void * base() const { return m_heap.base(); }
         };
     // -------------------------------------------------------------------------
Index: configmgr/source/inc/segmentheap.hxx
===================================================================
RCS file: /cvs/util/configmgr/source/inc/segmentheap.hxx,v
retrieving revision 1.3
diff -u -p -u -r1.3 segmentheap.hxx
--- configmgr/source/inc/segmentheap.hxx	8 Sep 2005 03:55:20 -0000	1.3
+++ configmgr/source/inc/segmentheap.hxx	7 Mar 2006 22:21:03 -0000
@@ -56,9 +56,9 @@ namespace configmgr
 
             Heap   m_heap;
             void * m_base;
-            Lock * m_lock;
+//            Lock * m_lock;
 
-            Lock & lock() const { return *m_lock; }
+//            Lock & lock() const { return *m_lock; }
         public:
             typedef Heap::HeapId        HeapId;
             typedef Heap::HeapIdParam   HeapIdParam;
