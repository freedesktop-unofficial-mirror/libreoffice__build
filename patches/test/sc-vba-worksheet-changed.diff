diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/ui/docshell/docsh.cxx sc/source/ui/docshell/docsh.cxx
--- sc.clean/source/ui/docshell/docsh.cxx	2008-04-29 13:02:31.000000000 -0400
+++ sc/source/ui/docshell/docsh.cxx	2008-04-29 17:55:02.000000000 -0400
@@ -140,6 +140,7 @@
 #include "compiler.hxx"
 #include "cfgids.hxx"
 #include "warnpassword.hxx"
+#include "cellsuno.hxx"
 
 #include "docsh.hxx"
 #include "docshimp.hxx"
@@ -2490,6 +2491,48 @@ void ScDocShell::SetModified( BOOL bModi
 	}
 }
 
+void ScDocShell::PostContentChanged( const ScRange& rRange )
+{
+//  OSL_TRACE("ScDocShell::PostContentChanged. Changed Range Address: nTab1 = %d, nCol1 = %d, nRow1 = %d; nTab2 = %d, nCol2 = %d, nRow2 = %d;", rRange.aStart.Tab(), rRange.aStart.Col(), rRange.aStart.Row(), rRange.aEnd.Tab(), rRange.aEnd.Col(), rRange.aEnd.Row() );
+
+    ScRangeList aList;
+    aList.Append(rRange);
+    PostContentChanged(aList);
+}
+
+void ScDocShell::PostContentChanged( const ScRangeList& rList )
+{
+    String aStr;
+    rList.Format(aStr, SCR_ABS, &aDocument, ScAddress::CONV_XL_A1);
+    fprintf(stdout, "ScDocShell::PostContentChanged:   range = '%s'\n",
+            rtl::OUStringToOString(aStr, RTL_TEXTENCODING_UTF8).getStr());
+
+    // do your VBA stuff...
+
+#if 0 // disabled since this part didn't work in my build. (kohei)
+    ScCellRangesBase* pObj = NULL;
+
+    if (rRange.aStart == rRange.aEnd)
+    {
+        pObj = new ScCellObj( this, rRange.aStart );
+    } else
+    {
+        pObj = new ScCellRangeObj( this, rRange );
+    }
+
+    uno::Sequence< uno::Any > aArgs(1);
+    aArgs[0] = uno::makeAny(uno::Reference<uno::XInterface>(static_cast<cppu::OWeakObject*>(pObj)));
+
+    SCTAB nTab1 = rRange.aStart.Tab();
+    aDocument.GetVbaEventsHelper()->executeSheetMacro( SC_VBAEVENT_SHEET_CHANGE, nTab1, aArgs );
+
+    SCTAB nTab2 = rRange.aEnd.Tab();
+    if ( nTab1 != nTab2 )
+    {
+        aDocument.GetVbaEventsHelper()->executeSheetMacro( SC_VBAEVENT_SHEET_CHANGE, nTab2, aArgs );
+    }
+#endif    
+}
 
 void ScDocShell::SetDocumentModified( BOOL bIsModified /* = TRUE */ )
 {
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/ui/inc/docsh.hxx sc/source/ui/inc/docsh.hxx
--- sc.clean/source/ui/inc/docsh.hxx	2008-04-29 13:02:28.000000000 -0400
+++ sc/source/ui/inc/docsh.hxx	2008-04-29 16:31:03.000000000 -0400
@@ -343,6 +343,8 @@ public:
 	void            PostPaintExtras();
 
 	void            PostDataChanged();
+    void			PostContentChanged( const ScRange& rRange ); // for worsheet/workbook changed event
+    void            PostContentChanged( const ScRangeList& rList );
 
 	void			UpdatePaintExt( USHORT& rExtFlags, SCCOL nStartCol, SCROW nStartRow, SCTAB nStartTab,
 													   SCCOL nEndCol, SCROW nEndRow, SCTAB nEndTab );
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/ui/undo/undoblk3.cxx sc/source/ui/undo/undoblk3.cxx
--- sc.clean/source/ui/undo/undoblk3.cxx	2008-04-29 13:02:30.000000000 -0400
+++ sc/source/ui/undo/undoblk3.cxx	2008-04-29 17:38:27.000000000 -0400
@@ -117,6 +117,15 @@ ScUndoDeleteContents::ScUndoDeleteConten
 	if ( !(aMarkData.IsMarked() || aMarkData.IsMultiMarked()) )		// keine Zelle markiert:
 		aMarkData.SetMarkArea( aRange );							// Zelle unter Cursor markieren
 
+    if (aMarkData.IsMarked() || aMarkData.IsMultiMarked())
+    {
+        ScRangeList aList;
+        aMarkData.FillRangeListWithMarks(&aList, false);
+        pDocShell->PostContentChanged(aList);
+    }
+    else
+        pDocShell->PostContentChanged( aRange );
+
 	SetChangeTrack();
 }
 
@@ -211,6 +220,15 @@ void ScUndoDeleteContents::DoChange( con
 	if (pViewShell)
 		pViewShell->CellContentChanged();
 
+    if (aMarkData.IsMarked() || aMarkData.IsMultiMarked())
+    {
+        ScRangeList aList;
+        aMarkData.FillRangeListWithMarks(&aList, false);
+        pDocShell->PostContentChanged(aList);
+    }
+    else
+        pDocShell->PostContentChanged( aRange );
+
 	ShowTable( aRange );
 }
 
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/ui/undo/undoblk.cxx sc/source/ui/undo/undoblk.cxx
--- sc.clean/source/ui/undo/undoblk.cxx	2008-04-29 13:02:30.000000000 -0400
+++ sc/source/ui/undo/undoblk.cxx	2008-04-29 17:13:01.000000000 -0400
@@ -129,6 +129,7 @@ ScUndoInsertCells::ScUndoInsertCells( Sc
 		aEffRange.aEnd.SetRow(MAXROW);
 	}
 
+    pDocShell->PostContentChanged( aEffRange );
 	SetChangeTrack();
 }
 
@@ -264,6 +265,7 @@ void ScUndoInsertCells::DoChange( const 
 	if (pViewShell)
 		pViewShell->CellContentChanged();
 
+    pDocShell->PostContentChanged( aEffRange );
 	ShowTable( aEffRange.aStart.Tab() );
 }
 
@@ -337,6 +339,8 @@ ScUndoDeleteCells::ScUndoDeleteCells( Sc
 		aEffRange.aEnd.SetRow(MAXROW);
 	}
 
+    pDocShell->PostContentChanged( aEffRange );
+
 	SetChangeTrack();
 }
 
@@ -469,6 +473,7 @@ void ScUndoDeleteCells::DoChange( const 
 
 	pDocShell->PostDataChanged();
 	//	CellContentChanged kommt mit der Markierung
+    pDocShell->PostContentChanged( aWorkRange );
 
 	ShowTable( aEffRange.aStart.Tab() );
 }
@@ -718,6 +723,7 @@ ScUndoCut::ScUndoCut( ScDocShell* pNewDo
 	pUndoDoc( pNewUndoDoc ),
 	aExtendedRange( aRange )
 {
+    pDocShell->PostContentChanged( aExtendedRange );
 	SetChangeTrack();
 }
 
@@ -776,6 +782,7 @@ void ScUndoCut::DoChange( const BOOL bUn
 	pDocShell->PostDataChanged();
 	if (pViewShell)
 		pViewShell->CellContentChanged();
+    pDocShell->PostContentChanged( aExtendedRange );
 }
 
 void __EXPORT ScUndoCut::Undo()
@@ -842,6 +849,7 @@ ScUndoPaste::ScUndoPaste( ScDocShell* pN
 
 	if ( pOptions )
 		aPasteOptions = *pOptions;		// used only for Repeat
+    pDocShell->PostContentChanged( aBlockRange );
 
 	SetChangeTrack();
 }
@@ -1017,6 +1025,7 @@ void ScUndoPaste::DoChange( const BOOL b
 	pDocShell->PostDataChanged();
 	if (pViewShell)
 		pViewShell->CellContentChanged();
+    pDocShell->PostContentChanged( aDrawRange );
 }
 
 void __EXPORT ScUndoPaste::Undo()
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/ui/undo/undocell.cxx sc/source/ui/undo/undocell.cxx
--- sc.clean/source/ui/undo/undocell.cxx	2008-04-29 13:02:30.000000000 -0400
+++ sc/source/ui/undo/undocell.cxx	2008-04-29 13:07:44.000000000 -0400
@@ -218,6 +218,7 @@ ScUndoEnterData::ScUndoEnterData( ScDocS
 	nTab( nNewTab ),
 	nCount( nNewCount )
 {
+    pDocShell->PostContentChanged( ScRange( ScAddress( nCol, nRow, nTab ) ) );
 	SetChangeTrack();
 }
 
@@ -254,6 +255,7 @@ void ScUndoEnterData::DoChange() const
 		pViewShell->MoveCursorAbs( nCol, nRow, SC_FOLLOW_JUMP, FALSE, FALSE );
 	}
 
+    pDocShell->PostContentChanged( ScRange( ScAddress( nCol, nRow, nTab ) ) );
 	pDocShell->PostDataChanged();
 }
 
@@ -375,6 +377,7 @@ ScUndoEnterValue::ScUndoEnterValue( ScDo
 	nValue		( nVal ),
 	bNeedHeight	( bHeight )
 {
+    pDocShell->PostContentChanged( ScRange( aPos ) );
 	SetChangeTrack();
 }
 
@@ -425,6 +428,8 @@ void __EXPORT ScUndoEnterValue::Undo()
 
 	pDocShell->PostPaintCell( aPos.Col(), aPos.Row(), aPos.Tab() );
 
+    pDocShell->PostContentChanged( ScRange( aPos ) );
+
 	ScChangeTrack* pChangeTrack = pDoc->GetChangeTrack();
 	if ( pChangeTrack )
 		pChangeTrack->Undo( nEndChangeAction, nEndChangeAction );
@@ -440,6 +445,8 @@ void __EXPORT ScUndoEnterValue::Redo()
 	pDoc->SetValue( aPos.Col(), aPos.Row(), aPos.Tab(), nValue );
 	pDocShell->PostPaintCell( aPos.Col(), aPos.Row(), aPos.Tab() );
 
+    pDocShell->PostContentChanged( ScRange( aPos ) );
+
 	SetChangeTrack();
 
 	EndRedo();
@@ -469,6 +476,7 @@ ScUndoPutCell::ScUndoPutCell( ScDocShell
 	pEnteredCell( pRedoCell ),
 	bNeedHeight	( bHeight )
 {
+    pDocShell->PostContentChanged( ScRange( aPos ) );
 	SetChangeTrack();
 }
 
@@ -521,6 +529,8 @@ void __EXPORT ScUndoPutCell::Undo()
 
 	pDocShell->PostPaintCell( aPos.Col(), aPos.Row(), aPos.Tab() );
 
+    pDocShell->PostContentChanged( ScRange( aPos ) );
+
 	ScChangeTrack* pChangeTrack = pDoc->GetChangeTrack();
 	if ( pChangeTrack )
 		pChangeTrack->Undo( nEndChangeAction, nEndChangeAction );
@@ -551,6 +561,8 @@ void __EXPORT ScUndoPutCell::Redo()
 
 	pDocShell->PostPaintCell( aPos.Col(), aPos.Row(), aPos.Tab() );
 
+    pDocShell->PostContentChanged( ScRange( aPos ) );
+
 	SetChangeTrack();
 
 	EndRedo();
