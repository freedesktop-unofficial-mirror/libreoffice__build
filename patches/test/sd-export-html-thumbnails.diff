--- /opt/OpenOffice/openoffice/build/OOO_1_1_0/sd/source/filter/html/htmlex.cxx	2003-11-21 06:55:21.000000000 +0000
+++ sd/source/filter/html/htmlex.cxx	2003-12-10 14:07:14.000000000 +0000
@@ -510,7 +510,7 @@
         m_eMode( PUBLISH_HTML ),
         m_eFormat( FORMAT_JPG ),
         m_nCompression( -1 ),
-        m_nWidthPixel( PUB_LOWRES_WIDTH ),
+        m_nWidthPixel( PUB_MEDRES_WIDTH ),
         m_bDownload( false ),
         m_eScript( SCRIPT_ASP )
 {
@@ -821,6 +821,10 @@
 		if( !CreateImagesForPresPages() )
 			break;
 
+        if( m_bContentsPage &&
+            !CreateImagesForPresPages( true ) )
+            break;
+
 		if( !CreateHtmlForPresPages() )
 			break;
 
@@ -1049,7 +1053,7 @@
 // =====================================================================
 // Image-Dateien anlegen
 // =====================================================================
-bool HtmlExport::CreateImagesForPresPages()
+bool HtmlExport::CreateImagesForPresPages( bool bThumbnail )
 {
 	try
 	{
@@ -1066,9 +1070,9 @@
 
 		Sequence< PropertyValue > aFilterData(((m_eFormat==FORMAT_JPG)&&(m_nCompression != -1))? 3 : 2);
 		aFilterData[0].Name = OUString( RTL_CONSTASCII_USTRINGPARAM("PixelWidth") );
-		aFilterData[0].Value <<= (sal_Int32)m_nWidthPixel;
+        aFilterData[0].Value <<= (sal_Int32)(bThumbnail ? PUB_THUMBNAIL_WIDTH : m_nWidthPixel );
 		aFilterData[1].Name = OUString( RTL_CONSTASCII_USTRINGPARAM("PixelHeight") );
-		aFilterData[1].Value <<= (sal_Int32)m_nHeightPixel;
+        aFilterData[1].Value <<= (sal_Int32)(bThumbnail ? PUB_THUMBNAIL_HEIGHT : m_nHeightPixel);
 		if((m_eFormat==FORMAT_JPG)&&(m_nCompression != -1))
 		{
 			aFilterData[2].Name = OUString( RTL_CONSTASCII_USTRINGPARAM("Quality") );
@@ -1087,7 +1091,10 @@
 			SdPage* pPage = pDoc->GetSdPage( nSdPage, PK_STANDARD );
 
 			OUString aFull(m_aExportPath);
-			aFull += *m_pImageFiles[nSdPage];
+            if (bThumbnail)
+                aFull += *m_pThumbnailFiles[nSdPage];
+            else
+                aFull += *m_pImageFiles[nSdPage];
 
 			aDescriptor[0].Value <<= aFull;
 
@@ -1905,7 +1912,7 @@
 	aStr.AppendAscii( "<center><table width=90%><TR>\r\n" );
 
 	// Inhaltsverzeichnis
-	aStr.AppendAscii( "<td valign=top align=left width=50%>\r\n" );
+    aStr.AppendAscii( "<td valign=top align=left width=25%>\r\n" );
 	aStr.AppendAscii( "<h3><u>" );
 	aStr += RESTOHTML(STR_HTMLEXP_CONTENTS);
 	aStr.AppendAscii( "</u></h3>" );
@@ -1925,7 +1932,7 @@
 	aStr.AppendAscii( "</td>\r\n" );
 
 	// Dokument Infos
-	aStr.AppendAscii( "<td valign=top width=50%>\r\n" );
+    aStr.AppendAscii( "<td valign=top align=left width=75%>\r\n" );
 
 	if(m_aAuthor.Len())
 	{
@@ -1976,6 +1983,21 @@
 		aStr.AppendAscii( "</a></p>\r\n" );
 	}
 
+    for(nSdPage = 0; nSdPage < m_nSdPageCount; nSdPage++)
+    {
+        SdPage* pPage = pDoc->GetSdPage(nSdPage, PK_STANDARD);
+        String aText;
+
+        aText.AppendAscii( "<img src=\"" );
+        aText += StringToURL( *m_pThumbnailFiles[nSdPage] );
+        aText.AppendAscii( "\" width=256 height=192 alt=\"" );
+        aText += StringToHTMLString( *m_pPageNames[nSdPage] );
+        aText.AppendAscii( "\">" );
+
+        aStr += CreateLink(*m_pHTMLFiles[nSdPage], aText);
+        aStr.AppendAscii( "\r\n" );
+    }
+
 	aStr.AppendAscii( "</td></tr></table></center>\r\n" );
 
 	aStr.AppendAscii( "</body>\r\n</html>" );
@@ -2096,6 +2118,7 @@
 	// Listen mit neuen Dateinamen anlegen
 	m_pHTMLFiles = new String*[m_nSdPageCount];
 	m_pImageFiles = new String*[m_nSdPageCount];
+    m_pThumbnailFiles = new String*[m_nSdPageCount];
 	m_pPageNames = new String*[m_nSdPageCount];
 	m_pTextFiles = new String*[m_nSdPageCount];
 
@@ -2124,6 +2147,15 @@
 
 		m_pImageFiles[nSdPage] = pName;
 
+        pName = new String( RTL_CONSTASCII_USTRINGPARAM("thumb") );
+        *pName += String::CreateFromInt32(nSdPage);
+        if( m_eFormat!=FORMAT_JPG )
+            pName->AppendAscii( ".png" );
+        else
+            pName->AppendAscii( ".jpg" );
+
+        m_pThumbnailFiles[nSdPage] = pName;
+
 		pName = new String( RTL_CONSTASCII_USTRINGPARAM("text"));
 		*pName += String::CreateFromInt32(nSdPage);
 		*pName += m_aHTMLExtension;
--- /opt/OpenOffice/openoffice/build/OOO_1_1_0/sd/source/filter/html/htmlex.hxx	2003-06-04 12:02:33.000000000 +0100
+++ sd/source/filter/html/htmlex.hxx	2003-12-10 13:41:26.000000000 +0000
@@ -112,6 +112,9 @@
 #define PUB_HIGHRES_WIDTH	1024
 #define PUB_HIGHRES_HEIGHT	768
 
+#define PUB_THUMBNAIL_WIDTH  256
+#define PUB_THUMBNAIL_HEIGHT 192
+
 #define HtmlButtonThemaStr = "private://gallery/hidden/HtmlExportButtons";
 
 class List;
@@ -197,6 +200,7 @@
 	String	 m_aHTMLExtension;
 	String** m_pHTMLFiles;
 	String** m_pImageFiles;
+    String** m_pThumbnailFiles;
 	String** m_pPageNames;
 	String** m_pTextFiles;
 
@@ -210,7 +214,7 @@
 
 	void SetDocColors( SdPage* pPage = NULL );
 
-	bool	CreateImagesForPresPages();
+    bool	CreateImagesForPresPages( bool bThumbnails = false );
 	bool	CreateHtmlTextForPresPages();
 	bool	CreateHtmlForPresPages();
 	bool	CreateContentPage();
