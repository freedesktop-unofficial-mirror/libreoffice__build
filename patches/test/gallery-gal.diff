--- /dev/null	2004-07-26 12:51:14.000000000 +0100
+++ svx/workben/gal.cxx	2005-03-23 22:09:44.454769096 +0000
@@ -0,0 +1,210 @@
+#include <stdio.h>
+#include <unistd.h>
+
+#include <list>
+
+#include <unotools/streamwrap.hxx>
+#include <unotools/ucbstreamhelper.hxx>
+
+#include <comphelper/processfactory.hxx>
+#include <comphelper/regpathhelper.hxx>
+#include <cppuhelper/servicefactory.hxx>
+#include <cppuhelper/bootstrap.hxx>
+#include <com/sun/star/lang/XMultiServiceFactory.hpp>
+#include <com/sun/star/lang/XInitialization.hpp>
+#include <com/sun/star/registry/XSimpleRegistry.hpp>
+
+#include <ucbhelper/contentbroker.hxx>
+
+#include <tools/urlobj.hxx>
+#include <tools/fsys.hxx>
+#include <tools/intn.hxx>
+#include <svtools/filedlg.hxx>
+
+#include <vcl/window.hxx>
+#include <vcl/svapp.hxx>
+#include <vcl/font.hxx>
+#include <vcl/sound.hxx>
+#include <vcl/print.hxx>
+#include <vcl/toolbox.hxx>
+#include <vcl/help.hxx>
+#include <vcl/scrbar.hxx>
+#include <vcl/wrkwin.hxx>
+#include <vcl/msgbox.hxx>
+
+#include <osl/file.hxx>
+#include <osl/process.h>
+#include <rtl/bootstrap.hxx>
+
+#include <galtheme.hxx>
+#include <gallery1.hxx>
+
+using namespace ::vos;
+using namespace ::rtl;
+using namespace ::com::sun::star::uno;
+using namespace ::com::sun::star::registry;
+using namespace ::com::sun::star::lang;
+
+typedef ::std::list<rtl::OUString> FileNameList;
+
+class GalApp : public Application
+{
+public:
+	virtual void Main();
+};
+
+Reference< XMultiServiceFactory > createApplicationServiceManager()
+{
+    Reference< XMultiServiceFactory > xMS;
+	try
+	{
+		Reference< XComponentContext > xComponentContext = ::cppu::defaultBootstrap_InitialComponentContext();
+        if ( xComponentContext.is() )
+		    xMS = xMS.query( xComponentContext->getServiceManager() );
+	}
+	catch( ::com::sun::star::uno::Exception& )
+	{
+	}
+
+	return xMS;
+}
+
+static void createTheme( rtl::OUString aGalleryURL,
+						 rtl::OUString aThemeName,
+						 FileNameList &rFiles )
+{
+	Gallery* pGallery;
+	
+	pGallery = Gallery::AcquireGallery( aGalleryURL );
+	if (!pGallery ) {
+			fprintf( stderr, "Could't acquire '%s'\n",
+					 (const sal_Char *) rtl::OUStringToOString( aGalleryURL,
+																RTL_TEXTENCODING_UTF8 ) );
+			exit( 1 );
+	}
+	fprintf( stderr, "Work on gallery '%s'\n",
+					 (const sal_Char *) rtl::OUStringToOString( aGalleryURL, RTL_TEXTENCODING_UTF8 ) );
+
+	fprintf( stderr, "Existing themes: %d\n",
+			 pGallery->GetThemeCount() );
+
+	GalleryTheme *pGalTheme;
+	if( !pGallery->HasTheme( aThemeName) ) {
+			if( !pGallery->CreateTheme( aThemeName ) ) {
+					fprintf( stderr, "Failed to create theme\n" );
+					exit( 1 );
+			}
+	}
+
+	fprintf( stderr, "Existing themes: %d\n",
+			 pGallery->GetThemeCount() );
+
+	SfxListener aListener;
+
+	if ( !( pGalTheme = pGallery->AcquireTheme( aThemeName, aListener ) ) ) {
+			fprintf( stderr, "Failed to acquire theme\n" );
+			exit( 1 );
+	}
+
+	FileNameList::const_iterator aIter;
+	
+	for( aIter = rFiles.begin(); aIter != rFiles.end(); aIter++ )
+	{
+		INetURLObject aURL( *aIter );
+
+//  Should/could use:
+//	if ( ! pGalTheme->InsertFileOrDirURL( aURL ) ) {
+//	Requires a load more components ...
+	
+		Graphic aGraphic;
+		String aFormat;
+
+		SvStream *pStream = ::utl::UcbStreamHelper::CreateStream(
+				aURL.GetMainURL( INetURLObject::NO_DECODE ), STREAM_READ );
+		if (!pStream) {
+			fprintf( stderr, "Can't find image to import\n" );
+			exit (1);
+		}
+		*pStream >> aGraphic;
+		delete pStream;
+
+		SgaObjectBmp aObject( aGraphic, aURL, aFormat );
+		if ( ! aObject.IsValid() ) {
+			fprintf( stderr, "Failed to create thumbnail for image\n" );
+			exit( 1 );
+		}
+		
+		if ( ! pGalTheme->InsertObject( aObject ) ) {
+			fprintf( stderr, "Failed to insert file or URL\n" );
+			exit( 1 );
+		}
+	}
+
+	pGallery->ReleaseTheme( pGalTheme, aListener );
+
+	Gallery::ReleaseGallery( pGallery );
+}
+
+static void PrintHelp()
+{
+	fprintf( stdout, "gal - generate OO.o gallery files\n" );
+	fprintf( stdout, "  gal --path <file> --name <name> [ files ... ]\n" );
+}
+
+static OUString Smartify( const OUString &rPath )
+{
+	INetURLObject aURL;
+	aURL.SetSmartURL( rPath );
+	return aURL.GetMainURL( INetURLObject::NO_DECODE );
+}
+
+void GalApp::Main()
+{
+    ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory >
+		xMSF = cppu::createRegistryServiceFactory(
+				rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "gal.rdb" ) ), sal_True );
+	::comphelper::setProcessServiceFactory( xMSF );
+
+	// Without this no file access works ...
+	ucb::ContentProviderDataList aData;
+	ucb::ContentProviderData aFileProvider(
+			rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.ucb.FileContentProvider" ) ),
+			rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "file" ) ),
+			rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "" ) ) );
+	aData.push_back( aFileProvider );
+	ucb::ContentBroker::initialize( xMSF, aData );
+
+	bool bHelp = false;
+	rtl::OUString aPath;
+	rtl::OUString aName = rtl::OUString::createFromAscii( "Default name" );
+	FileNameList aFiles;
+
+	for( USHORT i = 0; i < GetCommandLineParamCount(); i++ )
+	{
+		OUString aParam = GetCommandLineParam( i );
+		fprintf( stderr, "Param '%s'\n",
+				 (const sal_Char *) OUStringToOString( aParam, RTL_TEXTENCODING_UTF8 ) );
+		if( aParam.equalsAscii( "--help" ) ||
+			aParam.equalsAscii( "-h" ) )
+				bHelp = true;
+
+		else if ( aParam.equalsAscii( "--path" ) )
+			aPath = Smartify( GetCommandLineParam( ++i ) );
+
+		else if ( aParam.equalsAscii( "--name" ) )
+			aName = GetCommandLineParam( ++i );
+
+		else
+			aFiles.push_back( Smartify( aParam ) );
+	}
+
+	if( bHelp )
+	{
+		PrintHelp();
+		return;
+	}
+
+	createTheme( aPath, aName, aFiles );
+}
+
+GalApp aGalApp;
