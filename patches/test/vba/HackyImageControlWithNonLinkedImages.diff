diff --git a/forms/source/component/ImageControl.cxx b/forms/source/component/ImageControl.cxx
index 1ba9f90..03499a1 100644
--- a/forms/source/component/ImageControl.cxx
+++ b/forms/source/component/ImageControl.cxx
@@ -57,6 +57,9 @@
 #include <com/sun/star/io/NotConnectedException.hpp>
 #include <com/sun/star/beans/PropertyValue.hpp>
 #include <com/sun/star/graphic/XGraphic.hpp>
+#include <com/sun/star/graphic/XGraphicLinkProvider.hpp>
+#include <com/sun/star/embed/ElementModes.hpp>
+
 #include <tools/urlobj.hxx>
 #include <tools/stream.hxx>
 #include <tools/debug.hxx>
@@ -353,13 +356,23 @@ sal_Bool OImageControlModel::handleNewIm
     ::std::auto_ptr< SvStream > pImageStream;
     Reference< XInputStream > xImageStream;
 
-    if ( ::svt::ImageResourceAccess::isImageResourceURL( _rURL ) )
+    Reference< graphic::XGraphicLinkProvider > xProv;
+    m_xAggregateSet->getPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("GraphicLinkProvider" ) ) )  >>= xProv;
+    if ( xProv.is() && utl::SvPictureStreamHelper::IsPackagePictureURL( _rURL )  )
     {
-        xImageStream = ::svt::ImageResourceAccess::getImageXStream( getORB(), _rURL );
+        pImageStream.reset( utl::SvPictureStreamHelper::GetStreamFromPackagePictureURL( _rURL, xProv->getStorage() ) );
     }
-    else
+    if ( !pImageStream.get() )
     {
-        pImageStream.reset( ::utl::UcbStreamHelper::CreateStream( _rURL, STREAM_READ ) );
+        if ( ::svt::ImageResourceAccess::isImageResourceURL( _rURL ) )
+        {
+            xImageStream = ::svt::ImageResourceAccess::getImageXStream( getORB(), _rURL );
+        }
+        else
+        {
+            pImageStream.reset( ::utl::UcbStreamHelper::CreateStream( _rURL, STREAM_READ ) );
+        }
+    }
 	    sal_Bool bSetNull = ( pImageStream.get() == NULL ) || ( ERRCODE_NONE != pImageStream->GetErrorCode() );
 
         if (!bSetNull)
@@ -373,7 +386,6 @@ sal_Bool OImageControlModel::handleNewIm
 
             xImageStream = new ::utl::OInputStreamHelper( new SvLockBytes( pImageStream.get(), sal_False ), nSize );
         }
-    }
 
     if ( xImageStream.is() )
     {
diff --git a/forms/source/component/imgprod.cxx b/forms/source/component/imgprod.cxx
index 01fa8ac..503fb6c 100644
--- a/forms/source/component/imgprod.cxx
+++ b/forms/source/component/imgprod.cxx
@@ -49,6 +49,8 @@
 // - ImgProdLockBytes -
 // --------------------
 
+using namespace com::sun::star;
+
 class ImgProdLockBytes : public SvLockBytes
 {
 	::com::sun::star::uno::Reference< ::com::sun::star::io::XInputStream > 		xStmRef;
@@ -644,6 +646,21 @@ void ImageProducer::initialize( const ::
 			SetImage( aURL );
 		}
 	}
+	else if ( aArguments.getLength() == 2 )
+	{
+		rtl::OUString aURL;
+		uno::Reference< embed::XStorage > xStor;	
+		if ( ( aArguments[ 0 ] >>= aURL ) && ( aArguments[ 1 ] >>= xStor ) )
+		{
+			if ( utl::SvPictureStreamHelper::IsPackagePictureURL( aURL ) )
+			{
+				std::auto_ptr< SvStream > pIs( utl::SvPictureStreamHelper::GetStreamFromPackagePictureURL( aURL, xStor ) );
+				SetImage( *pIs );
+			}		
+			else
+				SetImage( aURL );
+		}
+	}
 }
 
 namespace frm
diff --git a/goodies/source/unographic/descriptor.cxx b/goodies/source/unographic/descriptor.cxx
diff --git a/goodies/source/unographic/descriptor.hxx b/goodies/source/unographic/descriptor.hxx
diff --git a/goodies/source/unographic/provider.cxx b/goodies/source/unographic/provider.cxx
index f51b852..5f79bdd 100644
--- a/goodies/source/unographic/provider.cxx
+++ b/goodies/source/unographic/provider.cxx
@@ -52,6 +52,8 @@
 #include <com/sun/star/io/XStream.hpp>
 #include <com/sun/star/text/GraphicCrop.hpp>
 
+#include <comphelper/storagehelper.hxx>
+
 #include "descriptor.hxx"
 #include "graphic.hxx"
 #include "provider.hxx"
@@ -319,7 +321,7 @@ uno::Reference< beans::XPropertySet > SA
 
 	::rtl::OUString aURL;
 	uno::Reference< io::XInputStream > xIStm;
-
+	uno::Reference< embed::XStorage > xStor;
 	for( sal_Int32 i = 0; ( i < rMediaProperties.getLength() ) && !xRet.is(); ++i )
 	{
 		const ::rtl::OUString	aName( rMediaProperties[ i ].Name );
@@ -333,9 +335,34 @@ uno::Reference< beans::XPropertySet > SA
 		{
 			aValue >>= xIStm;
 		}
+		else if( COMPARE_EQUAL == aName.compareToAscii( "Storage" ) )
+		{
+			aValue >>= xStor;
+		}
 	}
-
-	if( xIStm.is() )
+	
+    if ( xStor.is() && ::utl::SvPictureStreamHelper::IsPackagePictureURL( aURL ) )
+	{
+		// #TODO some asserts or something if xStream or xIStm are null
+		// #TODO - this is duplicated in queryGraphic below ( move to common func )
+		std::auto_ptr< SvStream > pIStm;
+		::GraphicFilter* pFilter = ::GraphicFilter::GetGraphicFilter();
+		
+		if( pFilter )
+		{
+			::Graphic aVCLGraphic;
+			
+			if( ( pFilter->ImportGraphic( aVCLGraphic, aURL, *pIStm ) == GRFILTER_OK ) && 
+				( aVCLGraphic.GetType() != GRAPHIC_NONE ) )
+			{
+				::unographic::Graphic* pUnoGraphic = new ::unographic::Graphic;
+				
+				pUnoGraphic->init( aVCLGraphic );
+				xRet = pUnoGraphic;
+			}
+		}
+	}
+	else if( xIStm.is() )
 	{
 		GraphicDescriptor* pDescriptor = new GraphicDescriptor;
 		pDescriptor->init( xIStm, aURL );
@@ -379,6 +406,7 @@ uno::Reference< ::graphic::XGraphic > SA
 	SvStream* 								pIStm = NULL;
 
 	uno::Reference< io::XInputStream > xIStm;
+	uno::Reference< embed::XStorage > xStor;
 
 	for( sal_Int32 i = 0; ( i < rMediaProperties.getLength() ) && !pIStm && !xRet.is(); ++i )
 	{
@@ -395,12 +423,22 @@ uno::Reference< ::graphic::XGraphic > SA
 		{
 			aValue >>= xIStm;
 		}
+		else if( COMPARE_EQUAL == aName.compareToAscii( "Storage" ) )
+		{
+			aValue >>= xStor;
+		}
 	}
 
+
 	if( xIStm.is() )
 	{
 		pIStm = ::utl::UcbStreamHelper::CreateStream( xIStm );
 	}
+
+	else if ( xStor.is() && utl::SvPictureStreamHelper::IsPackagePictureURL( aPath ) )
+	{
+		pIStm = ::utl::SvPictureStreamHelper::GetStreamFromPackagePictureURL( aPath, xStor );
+	}
 	else if( aPath.Len() )
 	{
 		xRet = implLoadMemory( aPath );
@@ -434,6 +472,8 @@ uno::Reference< ::graphic::XGraphic > SA
 				pUnoGraphic->init( aVCLGraphic );
 				xRet = pUnoGraphic;
 			}
+			if ( xStor.is() )
+				OSL_TRACE("**** xRet is %d", xRet.is() );
 		}
 	
 		delete pIStm;
diff --git a/offapi/com/sun/star/graphic/makefile.mk b/offapi/com/sun/star/graphic/makefile.mk
index 600f60d..94abf95 100755
--- a/offapi/com/sun/star/graphic/makefile.mk
+++ b/offapi/com/sun/star/graphic/makefile.mk
@@ -53,7 +53,8 @@ IDLFILES= \
 	XGraphic.idl \
 	XGraphicProvider.idl \
 	XGraphicRenderer.idl \
-	XGraphicTransformer.idl
+	XGraphicTransformer.idl \
+	XGraphicLinkProvider.idl \
 	
 # --- Targets ------------------------------------------------------
 
diff --git a/toolkit/inc/toolkit/controls/unocontrols.hxx b/toolkit/inc/toolkit/controls/unocontrols.hxx
index 72c7db8..df58c56 100644
--- a/toolkit/inc/toolkit/controls/unocontrols.hxx
+++ b/toolkit/inc/toolkit/controls/unocontrols.hxx
@@ -54,6 +54,8 @@
 #include <com/sun/star/awt/XCurrencyField.hpp>
 #include <com/sun/star/awt/XPatternField.hpp>
 #include <com/sun/star/awt/XProgressBar.hpp>
+#include <com/sun/star/graphic/XGraphicLinkProvider.hpp>
+#include <com/sun/star/lang/XInitialization.hpp>
 #include <toolkit/controls/unocontrolmodel.hxx>
 #include <toolkit/controls/unocontrolbase.hxx>
 #include <toolkit/helper/macros.hxx>
@@ -67,6 +69,23 @@
 
 #include <list>
 
+namespace css = ::com::sun::star; 
+
+typedef ::cppu::WeakImplHelper2< css::graphic::XGraphicLinkProvider, css::lang::XInitialization >  GRAPHIC_LINKPROVIDER_BASE;
+
+class GraphLinkProviderImpl : public GRAPHIC_LINKPROVIDER_BASE
+{
+    css::uno::Reference< css::embed::XStorage > mxStorage;
+    rtl::OUString msURL;
+public:
+    GraphLinkProviderImpl();
+    // XGraphicLinkProvider
+    virtual css::uno::Reference< css::embed::XStorage > SAL_CALL getStorage() throw (css::uno::RuntimeException);
+
+    virtual ::rtl::OUString SAL_CALL getSourceURL() throw (css::uno::RuntimeException);
+    // XInitialization
+    virtual void SAL_CALL initialize( const css::uno::Sequence< css::uno::Any >& aArguments ) throw (css::uno::Exception, css::uno::RuntimeException);
+};
 
 //	----------------------------------------------------
 //	class UnoControlEditModel
@@ -219,10 +238,10 @@ private:
 	std::list< ::com::sun::star::uno::Reference< ::com::sun::star::awt::XImageConsumer > >  maListeners;
     bool                                                                                    mbAdjustingImagePosition;
     bool                                                                                    mbAdjustingGraphic;
-
+    bool                                                                                    mbAdjustingLinkProvider;
 protected:
-    ImageProducerControlModel() : mbAdjustingImagePosition( false ), mbAdjustingGraphic( false ) { }
-    ImageProducerControlModel( const ImageProducerControlModel& _rSource ) : com::sun::star::awt::XImageProducer(), UnoControlModel( _rSource ), mbAdjustingImagePosition( false ), mbAdjustingGraphic( false ) { }
+    ImageProducerControlModel();
+    ImageProducerControlModel( const ImageProducerControlModel& _rSource );
 
 	::com::sun::star::uno::Any	SAL_CALL queryInterface( const ::com::sun::star::uno::Type & rType ) throw(::com::sun::star::uno::RuntimeException);
     ::com::sun::star::uno::Any	SAL_CALL queryAggregation( const ::com::sun::star::uno::Type & rType ) throw(::com::sun::star::uno::RuntimeException);
diff --git a/toolkit/inc/toolkit/helper/property.hxx b/toolkit/inc/toolkit/helper/property.hxx
index db61c94..73e861e 100644
--- a/toolkit/inc/toolkit/helper/property.hxx
+++ b/toolkit/inc/toolkit/helper/property.hxx
@@ -190,6 +190,7 @@ namespace rtl {
 #define BASEPROPERTY_CUSTOMUNITTEXT                 136  // ::rtl::OUString
 #define BASEPROPERTY_ENABLEVISIBLE                  137  // sal_Bool
 #define BASEPROPERTY_GROUPNAME                      138  // ::rtl::OUString
+#define BASEPROPERTY_GRAPHICLINKPROVIDER            139  // css::graphic::XGraphicLinkProvider
 
 // Keine gebundenen Properties, werden immer aus der Property BASEPROPERTY_FONTDESCRIPTOR entnommen.
 #define BASEPROPERTY_FONTDESCRIPTORPART_START			1000
diff --git a/toolkit/inc/toolkit/helper/servicenames.hxx b/toolkit/inc/toolkit/helper/servicenames.hxx
index 78a507a..6404f07 100644
--- a/toolkit/inc/toolkit/helper/servicenames.hxx
+++ b/toolkit/inc/toolkit/helper/servicenames.hxx
@@ -98,6 +98,7 @@ extern const sal_Char __FAR_DATA szServi
 extern const sal_Char __FAR_DATA szServiceName_UnoSimpleAnimationControl[], szServiceName_UnoSimpleAnimationControlModel[];
 extern const sal_Char __FAR_DATA szServiceName_UnoThrobberControl[], szServiceName_UnoThrobberControlModel[];
 extern const sal_Char __FAR_DATA szServiceName_UnoControlFixedHyperlink[], szServiceName_UnoControlFixedHyperlinkModel[];
+extern const sal_Char __FAR_DATA szServiceName_GraphLinkProvider[];
 
 // ExtUnoWrapper:
 extern const char __FAR_DATA szServiceName_ImageProducer[], szServiceName2_ImageProducer[];
diff --git a/toolkit/source/controls/dialogcontrol.cxx b/toolkit/source/controls/dialogcontrol.cxx
index 3fd5723..a5e52a6 100644
--- a/toolkit/source/controls/dialogcontrol.cxx
+++ b/toolkit/source/controls/dialogcontrol.cxx
@@ -2118,7 +2118,8 @@ throw (RuntimeException)
 	rbase  >>= baseLocation;
 	rUrl  >>= url;
 
-	if ( url.getLength() > 0 )
+	// Don't adjust a package url
+	if ( !utl::SvPictureStreamHelper::IsPackagePictureURL( url ) && url.getLength() > 0 )
 	{
 		INetURLObject urlObj(baseLocation);
 		urlObj.removeSegment();
diff --git a/toolkit/source/controls/unocontrolmodel.cxx b/toolkit/source/controls/unocontrolmodel.cxx
index 6f3b633..4e24a16 100644
--- a/toolkit/source/controls/unocontrolmodel.cxx
+++ b/toolkit/source/controls/unocontrolmodel.cxx
@@ -37,6 +37,7 @@
 #include <com/sun/star/awt/FontWeight.hpp>
 #include <com/sun/star/awt/FontSlant.hpp>
 #include <com/sun/star/graphic/XGraphicProvider.hpp>
+#include <com/sun/star/graphic/XGraphicLinkProvider.hpp>
 #include <com/sun/star/io/XMarkableStream.hpp>
 #include <toolkit/controls/unocontrolmodel.hxx>
 #include <toolkit/helper/macros.hxx>
@@ -256,6 +257,8 @@ void UnoControlModel::ImplPropertyChange
         {
 			case BASEPROPERTY_GRAPHIC:				aDefault <<= ::com::sun::star::uno::makeAny( 
 																	::com::sun::star::uno::Reference< graphic::XGraphic >() ); break;
+			case BASEPROPERTY_GRAPHICLINKPROVIDER:				aDefault <<= ::com::sun::star::uno::makeAny( 
+																	::com::sun::star::uno::Reference< graphic::XGraphicLinkProvider >() ); break;
             case BASEPROPERTY_VERTICALALIGN:
             case BASEPROPERTY_BORDERCOLOR:
             case BASEPROPERTY_SYMBOL_COLOR:
diff --git a/toolkit/source/controls/unocontrols.cxx b/toolkit/source/controls/unocontrols.cxx
index 821c1b9..bbcdb82 100644
--- a/toolkit/source/controls/unocontrols.cxx
+++ b/toolkit/source/controls/unocontrols.cxx
@@ -37,6 +37,8 @@
 #include <com/sun/star/awt/VisualEffect.hpp>
 #include <com/sun/star/awt/LineEndFormat.hpp>
 #include <com/sun/star/graphic/XGraphicProvider.hpp>
+#include <com/sun/star/document/XStorageBasedDocument.hpp>
+#include <com/sun/star/frame/XModel.hpp>
 #include <com/sun/star/util/Date.hpp>
 
 
@@ -51,6 +53,7 @@
 #include <toolkit/helper/servicenames.hxx>
 #include <toolkit/helper/macros.hxx>
 #include <toolkit/helper/imagealign.hxx>
+#include <unotools/ucbstreamhelper.hxx>
 
 // for introspection
 #include <toolkit/awt/vclxwindows.hxx>
@@ -58,6 +61,7 @@
 #include <comphelper/componentcontext.hxx>
 #include <comphelper/processfactory.hxx>
 #include <comphelper/extract.hxx>
+
 #include <vcl/wrkwin.hxx>
 #include <vcl/svapp.hxx>
 #include <vcl/edit.hxx>
@@ -104,6 +108,34 @@ static void lcl_knitImageComponents( con
     }
 }
 
+
+GraphLinkProviderImpl::GraphLinkProviderImpl()
+{
+}
+
+Reference< embed::XStorage > SAL_CALL GraphLinkProviderImpl::getStorage() throw (RuntimeException)
+{
+    return mxStorage;
+}
+
+::rtl::OUString SAL_CALL GraphLinkProviderImpl::getSourceURL() throw (RuntimeException)
+{
+    return msURL;
+}
+
+void SAL_CALL GraphLinkProviderImpl::initialize( const uno::Sequence< uno::Any >& aArguments ) throw (uno::Exception, uno::RuntimeException)
+{
+    if ( aArguments.getLength() != 2 )
+        throw uno::RuntimeException();
+
+    aArguments[ 0 ] >>= msURL;
+    Reference< frame::XModel > xModel( aArguments[ 1 ], UNO_QUERY_THROW );
+
+    Reference< document::XStorageBasedDocument > xDocStorage( xModel, UNO_QUERY_THROW );
+    mxStorage.set( xDocStorage->getDocumentStorage(), UNO_QUERY_THROW );
+    // #TODO sprinkle with some asserts
+}
+
 //	----------------------------------------------------
 //	class UnoControlEditModel
 //	----------------------------------------------------
@@ -548,6 +580,17 @@ UnoFileControl::UnoFileControl()
 //	----------------------------------------------------
 //	class ImageProducerControlModel
 //	----------------------------------------------------
+
+ImageProducerControlModel::ImageProducerControlModel()  : mbAdjustingImagePosition( false ), mbAdjustingGraphic( false ), mbAdjustingLinkProvider( false ) 
+{
+	ImplRegisterProperty( BASEPROPERTY_GRAPHICLINKPROVIDER );
+}
+
+ImageProducerControlModel::ImageProducerControlModel( const ImageProducerControlModel& _rSource )  : awt::XImageProducer(), UnoControlModel( _rSource ), mbAdjustingImagePosition( false ), mbAdjustingGraphic( false ), mbAdjustingLinkProvider( false ) 
+{
+	ImplRegisterProperty( BASEPROPERTY_GRAPHICLINKPROVIDER );
+}
+
 uno::Any SAL_CALL ImageProducerControlModel::queryInterface( const uno::Type & rType ) throw(uno::RuntimeException)
 {
     return UnoControlModel::queryInterface( rType );
@@ -578,7 +621,7 @@ uno::Any ImageProducerControlModel::Impl
 }
 namespace
 {
-    uno::Reference< graphic::XGraphic > lcl_getGraphicFromURL_nothrow( const ::rtl::OUString& _rURL )
+    uno::Reference< graphic::XGraphic > lcl_getGraphicFromURL_nothrow( const ::rtl::OUString& _rURL, const uno::Reference< embed::XStorage >& rxStorage )
     {
         uno::Reference< graphic::XGraphic > xGraphic;
         if ( !_rURL.getLength() )
@@ -593,6 +636,13 @@ namespace
                 uno::Sequence< beans::PropertyValue > aMediaProperties(1);
                 aMediaProperties[0].Name = ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "URL" ) );
                 aMediaProperties[0].Value <<= _rURL;
+                if ( rxStorage.is() && ::utl::SvPictureStreamHelper::IsPackagePictureURL( _rURL ) )
+                { 
+                    sal_Int32 nOldLen = aMediaProperties.getLength();
+                    aMediaProperties.realloc( nOldLen + 1 );
+                    aMediaProperties[ nOldLen ].Name = ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Storage" ) );
+                    aMediaProperties[ nOldLen ].Value <<= rxStorage;
+                }
                 xGraphic = xProvider->queryGraphic( aMediaProperties );
             }
         }
@@ -603,8 +653,16 @@ namespace
 
         return xGraphic;
     }
+
+    uno::Reference< graphic::XGraphic > lcl_getGraphicFromURL_nothrow( const ::rtl::OUString& _rURL )
+    {
+        uno::Reference< embed::XStorage > xStorage;
+        return lcl_getGraphicFromURL_nothrow( _rURL, xStorage );
+    }
+
 }
 
+
 void SAL_CALL ImageProducerControlModel::setFastPropertyValue_NoBroadcast( sal_Int32 nHandle, const ::com::sun::star::uno::Any& rValue ) throw (::com::sun::star::uno::Exception)
 {
     UnoControlModel::setFastPropertyValue_NoBroadcast( nHandle, rValue );
@@ -615,17 +673,45 @@ void SAL_CALL ImageProducerControlModel:
     {
         switch ( nHandle )
         {
+ 		// someone wants to set an image that is carried in the
+		// associated storage ( e.g the document )
+	        case BASEPROPERTY_GRAPHICLINKPROVIDER:
+			{
+				uno::Reference< graphic::XGraphicLinkProvider > xProv;
+				OSL_VERIFY( rValue >>= xProv );
+				rtl::OUString sURL;
+				if ( xProv.is() )
+				{
+					sURL = xProv->getSourceURL();
+					if ( sURL.getLength() )
+					{
+						mbAdjustingLinkProvider = true;
+						setPropertyValue( GetPropertyName( BASEPROPERTY_IMAGEURL ), uno::makeAny(  sURL ) );
+						mbAdjustingLinkProvider = false;
+					}
+				}
+				break;
+			}
+
         case BASEPROPERTY_IMAGEURL:
+        {
+            if ( !mbAdjustingLinkProvider && ImplHasProperty( BASEPROPERTY_GRAPHICLINKPROVIDER ) )
+                // reset the GraphicLinkProvider ( null ) if someone is setting
+                // the external ImageURL property directly.
+                setPropertyValue( GetPropertyName( BASEPROPERTY_GRAPHICLINKPROVIDER ), uno::makeAny(  uno::Reference< graphic::XGraphicLinkProvider >()  ) );
             if ( !mbAdjustingGraphic && ImplHasProperty( BASEPROPERTY_GRAPHIC ) )
             {
                 mbAdjustingGraphic = true;
                 ::rtl::OUString sImageURL;
                 OSL_VERIFY( rValue >>= sImageURL );
-                setPropertyValue( GetPropertyName( BASEPROPERTY_GRAPHIC ), uno::makeAny( lcl_getGraphicFromURL_nothrow( sImageURL ) ) );
+                uno::Reference< graphic::XGraphicLinkProvider > xProv;
+                if ( ImplHasProperty( BASEPROPERTY_GRAPHICLINKPROVIDER ) )
+                    getPropertyValue( GetPropertyName( BASEPROPERTY_GRAPHICLINKPROVIDER ) ) >>= xProv;
+                setPropertyValue( GetPropertyName( BASEPROPERTY_GRAPHIC ), uno::makeAny( lcl_getGraphicFromURL_nothrow( sImageURL, xProv.is() ? xProv->getStorage() : NULL ) ) );
                 mbAdjustingGraphic = false;
             }
             break;
-
+        }
         case BASEPROPERTY_GRAPHIC:
             if ( !mbAdjustingGraphic && ImplHasProperty( BASEPROPERTY_IMAGEURL ) )
             {
@@ -676,8 +762,18 @@ void ImageProducerControlModel::removeCo
 
 void ImageProducerControlModel::startProduction(  ) throw (::com::sun::star::uno::RuntimeException)
 {
-	uno::Sequence<uno::Any> aArgs(1);
+	uno::Sequence<uno::Any> aArgs(2);
 	aArgs.getArray()[0] = getPropertyValue( GetPropertyName( BASEPROPERTY_IMAGEURL ) );
+
+	uno::Reference< graphic::XGraphicLinkProvider > xProv;
+	if ( ImplHasProperty( BASEPROPERTY_GRAPHICLINKPROVIDER ) )
+			getPropertyValue( GetPropertyName( BASEPROPERTY_GRAPHICLINKPROVIDER ) ) >>= xProv;
+
+	if ( xProv.is() )
+		aArgs[1] <<= xProv->getStorage();
+	else
+		aArgs.realloc( 1 );
+
 	uno::Reference< lang::XMultiServiceFactory > xMSF = ::comphelper::getProcessServiceFactory();
 	uno::Reference< awt::XImageProducer > xImageProducer( xMSF->createInstanceWithArguments( ::rtl::OUString::createFromAscii( "com.sun.star.awt.ImageProducer" ), aArgs ), uno::UNO_QUERY );
 	if ( xImageProducer.is() )
diff --git a/toolkit/source/helper/property.cxx b/toolkit/source/helper/property.cxx
index a7fc25b..1186c26 100644
--- a/toolkit/source/helper/property.cxx
+++ b/toolkit/source/helper/property.cxx
@@ -53,6 +53,7 @@
 #include <com/sun/star/util/XNumberFormatsSupplier.hpp>
 #include <com/sun/star/beans/PropertyAttribute.hpp>
 #include <com/sun/star/graphic/XGraphic.hpp>
+#include <com/sun/star/graphic/XGraphicLinkProvider.hpp>
 #include <com/sun/star/resource/XStringResourceResolver.hpp>
 #include <comphelper/types.hxx>
 #include <functional>
@@ -180,6 +181,7 @@ ImplPropertyInfo* ImplGetPropertyInfos( 
 
             DECL_PROP_2     ( "Graphic",                GRAPHIC,            Reference< ::com::sun::star::graphic::XGraphic >, BOUND, TRANSIENT ),
             DECL_PROP_2     ( "GroupName",              GROUPNAME,          ::rtl::OUString,    BOUND, MAYBEDEFAULT ),
+            DECL_PROP_2     ( "GraphicLinkProvider",              GRAPHICLINKPROVIDER,          Reference< ::com::sun::star::graphic::XGraphicLinkProvider >,    BOUND, MAYBEDEFAULT ),
             DECL_PROP_2     ( "HelpText",               HELPTEXT,           ::rtl::OUString,    BOUND, MAYBEDEFAULT ),
             DECL_PROP_2     ( "HelpURL",                HELPURL,            ::rtl::OUString,    BOUND, MAYBEDEFAULT ),
             DECL_PROP_2     ( "HideInactiveSelection",  HIDEINACTIVESELECTION, bool,            BOUND, MAYBEDEFAULT ),
diff --git a/toolkit/source/helper/registerservices.cxx b/toolkit/source/helper/registerservices.cxx
index 9898393..ab5c14f 100644
--- a/toolkit/source/helper/registerservices.cxx
+++ b/toolkit/source/helper/registerservices.cxx
@@ -198,6 +198,7 @@ IMPL_CREATEINSTANCE( UnoSimpleAnimationC
 IMPL_CREATEINSTANCE( UnoSimpleAnimationControlModel )
 IMPL_CREATEINSTANCE( UnoThrobberControl )
 IMPL_CREATEINSTANCE( UnoThrobberControlModel )
+IMPL_CREATEINSTANCE( GraphLinkProviderImpl )
 
 extern ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > SAL_CALL TreeControl_CreateInstance( const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory >& );
 extern ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > SAL_CALL TreeControlModel_CreateInstance( const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory >& );
@@ -287,6 +288,7 @@ TOOLKIT_DLLPUBLIC sal_Bool SAL_CALL comp
 		registerServices( xRegistryKey, "UnoThrobberControl", szServiceName_UnoThrobberControl );
         registerServices( xRegistryKey, "UnoFixedHyperlinkControl", szServiceName_UnoControlFixedHyperlink );
         registerServices( xRegistryKey, "UnoControlFixedHyperlinkModel", szServiceName_UnoControlFixedHyperlinkModel );
+        registerServices( xRegistryKey, "GraphLinkProviderImpl", szServiceName_GraphLinkProvider );
 
         comp_AsyncCallback_component_writeInfo( _pServiceManager, _pRegistryKey );
         comp_Layout_component_writeInfo( _pServiceManager, _pRegistryKey );
@@ -369,6 +371,7 @@ TOOLKIT_DLLPUBLIC void* SAL_CALL compone
         CHECKANDCREATEFACTORY( UnoThrobberControl, szServiceName_UnoThrobberControl, NULL )
         CHECKANDCREATEFACTORY( UnoFixedHyperlinkControl, szServiceName_UnoControlFixedHyperlink, NULL )
         CHECKANDCREATEFACTORY( UnoControlFixedHyperlinkModel, szServiceName_UnoControlFixedHyperlinkModel, NULL )
+        CHECKANDCREATEFACTORY( GraphLinkProviderImpl, szServiceName_GraphLinkProvider, NULL )
 
     	if ( rtl_str_compare( sImplementationName, "com.sun.star.awt.comp.AsyncCallback" ) == 0 )
             return comp_AsyncCallback_component_getFactory( sImplementationName, _pServiceManager, _pRegistryKey );
diff --git a/toolkit/source/helper/servicenames.cxx b/toolkit/source/helper/servicenames.cxx
index 3b27e91..2b65c99 100644
--- a/toolkit/source/helper/servicenames.cxx
+++ b/toolkit/source/helper/servicenames.cxx
@@ -101,4 +101,4 @@ const sal_Char __FAR_DATA szServiceName_
 const sal_Char __FAR_DATA szServiceName_UnoThrobberControl[] = "com.sun.star.awt.UnoThrobberControl";
 const sal_Char __FAR_DATA szServiceName_UnoControlFixedHyperlink[] = "com.sun.star.awt.UnoControlFixedHyperlink";
 const sal_Char __FAR_DATA szServiceName_UnoControlFixedHyperlinkModel[] = "com.sun.star.awt.UnoControlFixedHyperlinkModel";
-
+const sal_Char __FAR_DATA szServiceName_GraphLinkProvider[] = "com.sun.star.awt.GraphicLinkProvider";
diff --git a/xmloff/source/forms/elementimport.cxx b/xmloff/source/forms/elementimport.cxx
index edc0c77..698688c 100644
--- a/xmloff/source/forms/elementimport.cxx
+++ b/xmloff/source/forms/elementimport.cxx
@@ -47,6 +47,7 @@
 #include "gridcolumnproptranslator.hxx"
 #include <comphelper/extract.hxx>
 #include <comphelper/types.hxx>
+#include <unotools/ucbstreamhelper.hxx>
 
 /** === begin UNO includes === **/
 #include <com/sun/star/text/XText.hpp>
@@ -59,7 +60,7 @@
 /** === end UNO includes === **/
 #include <tools/urlobj.hxx>
 #include <tools/time.hxx>
-
+#include <comphelper/storagehelper.hxx>
 #include <algorithm>
 #include <functional>
 
@@ -979,6 +980,13 @@ namespace xmloff
                 _rValue, OEnumMapper::getEnumMap( OEnumMapper::epImageAlign )
             ) >>= m_nImageAlign );
         }
+        else if ( _rLocalName == GetXMLToken( XML_IMAGE_DATA ) && ::utl::SvPictureStreamHelper::IsPackagePictureURL( _rValue ) )
+        {
+            uno::Sequence< uno::Any > aArgs( 2 ); 
+            aArgs[ 0 ] = uno::makeAny( _rValue );
+            aArgs[ 1 ] = uno::makeAny(  m_rContext.getGlobalContext().GetModel() );
+            m_xProv.set( m_rContext.getGlobalContext().getServiceFactory()->createInstanceWithArguments( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.awt.GraphicLinkProvider" ) ), aArgs ), uno::UNO_QUERY );
+        }
         else
             OControlImport::handleAttribute( _nNamespaceKey, _rLocalName, _rValue );
     }
@@ -1004,6 +1012,25 @@ namespace xmloff
 		    implPushBackPropertyValue( aImagePosition );
         }
 	}
+        void OImagePositionImport::EndElement()
+        {
+            OSL_TRACE("** Image::EndElement");
+            if ( m_xElement.is () )
+            {
+                OSL_TRACE("**** About to set the attribute xProv is %d", m_xProv.is() );
+                try
+                {
+                    m_xElement->setPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("GraphicLinkProvider" ) ), uno::makeAny( m_xProv ) );
+                }
+                catch(uno::Exception& e)
+                {
+                    OSL_TRACE("Caught exception %s", rtl::OUStringToOString( e.Message, RTL_TEXTENCODING_UTF8 ).getStr() );
+                }
+            }
+            else
+                OSL_TRACE("Phreaking null");
+            OControlImport::EndElement();
+        }
 
     //=====================================================================
 	//= OReferredControlImport
diff --git a/xmloff/source/forms/elementimport.hxx b/xmloff/source/forms/elementimport.hxx
index 58d279a..57e69b0 100644
--- a/xmloff/source/forms/elementimport.hxx
+++ b/xmloff/source/forms/elementimport.hxx
@@ -41,6 +41,7 @@
 #include <com/sun/star/lang/XMultiServiceFactory.hpp>
 #include <com/sun/star/form/XGridColumnFactory.hpp>
 #include <com/sun/star/script/XEventAttacherManager.hpp>
+#include <com/sun/star/graphic/XGraphicLinkProvider.hpp>
 /** === end UNO includes === **/
 #include <comphelper/stl_types.hxx>
 #include "eventimport.hxx"
@@ -282,7 +283,7 @@ namespace xmloff
         sal_Int16   m_nImagePosition;
         sal_Int16   m_nImageAlign;
         sal_Bool    m_bHaveImagePosition;
-
+	::com::sun::star::uno::Reference< ::com::sun::star::graphic::XGraphicLinkProvider > m_xProv;
     public:
 		OImagePositionImport(
 			IFormsImportContext& _rImport, IEventAttacherManager& _rEventManager, sal_uInt16 _nPrefix, const ::rtl::OUString& _rName,
@@ -294,7 +295,7 @@ namespace xmloff
 		// SvXMLImportContext overridables
 		virtual void StartElement(
 			const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XAttributeList >& _rxAttrList);
-
+		virtual void EndElement();
         // OPropertyImport overridables
 		virtual void	handleAttribute( sal_uInt16 _nNamespaceKey,
 			const ::rtl::OUString& _rLocalName,
diff --git a/unotools/inc/unotools/streamhelper.hxx b/unotools/inc/unotools/streamhelper.hxx
index 375d8b3..77704d5 100644
--- a/unotools/inc/unotools/streamhelper.hxx
+++ b/unotools/inc/unotools/streamhelper.hxx
@@ -111,7 +111,6 @@ public:
     virtual void SAL_CALL flush(  ) throw(stario::NotConnectedException, stario::BufferSizeExceededException, stario::IOException, staruno::RuntimeException);
     virtual void SAL_CALL closeOutput(  ) throw(stario::NotConnectedException, stario::BufferSizeExceededException, stario::IOException, staruno::RuntimeException);
 };
-
 }	// namespace utl
 
 
diff --git a/unotools/inc/unotools/ucbstreamhelper.hxx b/unotools/inc/unotools/ucbstreamhelper.hxx
index c33855b..16f646b 100644
--- a/unotools/inc/unotools/ucbstreamhelper.hxx
+++ b/unotools/inc/unotools/ucbstreamhelper.hxx
@@ -33,6 +33,7 @@
 #include <com/sun/star/uno/Reference.hxx>
 #include <com/sun/star/io/XInputStream.hpp>
 #include <com/sun/star/io/XStream.hpp>
+#include <com/sun/star/embed/XStorage.hpp>
 #include "unotools/unotoolsdllapi.h"
 
 #include <tools/stream.hxx>
@@ -81,6 +82,15 @@ namespace utl
         static SvStream*    CreateStream( NS_UNO::Reference < NS_IO::XInputStream > xStream, sal_Bool bCloseStream );
         static SvStream*    CreateStream( NS_UNO::Reference < NS_IO::XStream > xStream, sal_Bool bCloseStream );
     };
+
+class UNOTOOLS_DLLPUBLIC SvPictureStreamHelper
+{
+    public:
+	// Probably these functions are probably in the wrong place, but first 
+	// lets just kill the cut'n'paste rot, where is SvStream defined, svtools? maybe there then
+	static bool IsPackagePictureURL( const rtl::OUString& rURL );
+	static SvStream* GetStreamFromPackagePictureURL( const rtl::OUString& rURL, const NS_UNO::Reference< ::com::sun::star::embed::XStorage >& rxRoot )throw ( NS_UNO::Exception );
+};
 }
 
 #endif
diff --git a/unotools/source/ucbhelper/ucbstreamhelper.cxx b/unotools/source/ucbhelper/ucbstreamhelper.cxx
index f9e56ba..3624c9e 100644
--- a/unotools/source/ucbhelper/ucbstreamhelper.cxx
+++ b/unotools/source/ucbhelper/ucbstreamhelper.cxx
@@ -41,6 +41,7 @@
 #endif
 #include <com/sun/star/ucb/InsertCommandArgument.hpp>
 #include <com/sun/star/io/XActiveDataStreamer.hpp>
+#include <com/sun/star/embed/ElementModes.hpp>
 
 #include <ucbhelper/contentbroker.hxx>
 #include <ucbhelper/content.hxx>
@@ -54,6 +55,7 @@ using namespace ::com::sun::star::ucb;
 using namespace ::com::sun::star::task;
 using namespace ::com::sun::star::lang;
 using namespace ::com::sun::star::beans;
+using namespace ::com::sun::star::embed;
 
 namespace utl
 {
@@ -248,4 +250,38 @@ SvStream* UcbStreamHelper::CreateStream(
     return pStream;
 };
 
+SvStream* SvPictureStreamHelper::GetStreamFromPackagePictureURL( const rtl::OUString& rURL, const Reference< XStorage >& rxRoot ) throw ( Exception )
+{
+	SvStream* pIs = NULL;
+	if( rURL.getLength() )
+	{
+		sal_Int32 nIndex = 0;
+		const rtl::OUString aPicturePath( rURL.getToken( 1, ':', nIndex ) );
+		nIndex = 0;
+		const rtl::OUString aPictureStorageName( aPicturePath.getToken( 0, '/', nIndex ) );
+		const rtl::OUString aPictureStreamName( aPicturePath.getToken( 0, '/', nIndex ) );
+
+		if ( aPictureStreamName.getLength() && aPictureStorageName.getLength() )
+		{
+			if ( rxRoot->isStorageElement( aPictureStorageName ) )
+			{
+				Reference< XStorage > xPictureStorage =
+				rxRoot->openStorageElement( aPictureStorageName, ElementModes::READ );
+				if( xPictureStorage.is() && xPictureStorage->isStreamElement( aPictureStreamName ) )
+				{
+					Reference< XStream > xStream = xPictureStorage->openStreamElement( aPictureStreamName, ElementModes::READ );
+					if ( xStream.is() )
+						pIs = UcbStreamHelper::CreateStream( xStream );
+				}
+			}
+		}
+	}
+	return pIs;
+}
+
+bool SvPictureStreamHelper::IsPackagePictureURL( const rtl::OUString& rURL )
+{
+	return rURL.toAsciiLowerCase().indexOf( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM("vnd.sun.star.package:") ) ) == 0; 
+}
+
 }
diff --git a/extensions/source/propctrlr/formcomponenthandler.cxx b/extensions/source/propctrlr/formcomponenthandler.cxx
index e8ef25c..4653eb8 100644
--- a/extensions/source/propctrlr/formcomponenthandler.cxx
+++ b/extensions/source/propctrlr/formcomponenthandler.cxx
@@ -1360,10 +1360,20 @@ namespace pcr
             break;
 
         case PROPERTY_ID_IMAGE_URL:
-            if ( impl_browseForImage_nothrow( _rData, aGuard ) )
-                eResult = InteractiveSelectionResult_ObtainedValue;
+        {
+            bool bIsLink = false;
+            if ( impl_browseForImage_nothrow( _rData, bIsLink, aGuard ) )
+            {
+                if ( bIsLink )
+                    eResult = InteractiveSelectionResult_ObtainedValue;
+                else 
+                {
+                    if ( impl_handleNonImageLink_nothrow( _rData ) )
+                        eResult = InteractiveSelectionResult_Success;
+                }
+            }
             break;
-
+        }
         case PROPERTY_ID_TARGET_URL:
             if ( impl_browseForTargetURL_nothrow( _rData, aGuard ) )
                 eResult = InteractiveSelectionResult_ObtainedValue;
@@ -2656,14 +2666,31 @@ namespace pcr
     }
 
     //------------------------------------------------------------------------
-    bool FormComponentPropertyHandler::impl_browseForImage_nothrow( Any& _out_rNewValue, ::osl::ClearableMutexGuard& _rClearBeforeDialog ) const
+    bool FormComponentPropertyHandler::impl_browseForImage_nothrow( Any& _out_rNewValue, bool& bIsLink, ::osl::ClearableMutexGuard& _rClearBeforeDialog ) const
     {
+        bIsLink = false; // default
         ::rtl::OUString aStrTrans = m_pInfoService->getPropertyTranslation( PROPERTY_ID_IMAGE_URL );
 
         ::sfx2::FileDialogHelper aFileDlg(SFXWB_GRAPHIC);
 
         aFileDlg.SetTitle(aStrTrans);
-
+	sal_Bool bHandleNonLink = sal_False;
+	Reference< XModel > xDocument( impl_getContextDocument_nothrow() );
+	if ( xDocument.is() )
+	{
+		bHandleNonLink = sal_True; // in the ideal world this should be enough
+		// Bit of a hack to allow basic dialog to override support for 
+		// non-linked images ( e.g. those located in the document 
+		// stream )  However, the toolkit control CAN handle this but 
+		// the dialog code. Well, can't ( right now ) hopefully it 
+		// will soon
+		try
+		{	m_aContext.getContextValueByAsciiName( "SupportNonLinkedImage" ) >>= bHandleNonLink;
+		}
+		catch( Exception& e )  // #TODO add that debug utils thing for uncaught exceptions
+		{
+		}
+	}
         Reference< XFilePickerControlAccess > xController(aFileDlg.GetFilePicker(), UNO_QUERY);
         DBG_ASSERT(xController.is(), "FormComponentPropertyHandler::impl_browseForImage_nothrow: missing the controller interface on the file picker!");
         if (xController.is())
@@ -2672,8 +2699,8 @@ namespace pcr
             xController->setValue(ExtendedFilePickerElementIds::CHECKBOX_PREVIEW, 0, ::cppu::bool2any(sal_True));
 
             // "as link" is checked, but disabled
-            xController->setValue(ExtendedFilePickerElementIds::CHECKBOX_LINK, 0, ::cppu::bool2any(sal_True));
-            xController->enableControl(ExtendedFilePickerElementIds::CHECKBOX_LINK, sal_False);
+            xController->setValue(ExtendedFilePickerElementIds::CHECKBOX_LINK, 0, ::cppu::bool2any(!bHandleNonLink));
+            xController->enableControl(ExtendedFilePickerElementIds::CHECKBOX_LINK, bHandleNonLink );
         }
 
         ::rtl::OUString sCurValue;
@@ -2687,7 +2714,13 @@ namespace pcr
         _rClearBeforeDialog.clear();
         bool bSuccess = ( 0 == aFileDlg.Execute() );
         if ( bSuccess )
+        {
+            if ( bHandleNonLink && xController.is() )
+            {
+                xController->getValue(ExtendedFilePickerElementIds::CHECKBOX_LINK, 0) >>= bIsLink;
+            }
             _out_rNewValue <<= (::rtl::OUString)aFileDlg.GetPath();
+        }
         return bSuccess;
     }
 
@@ -3174,6 +3207,31 @@ namespace pcr
         }
         return sURL;
     }
+
+    bool FormComponentPropertyHandler::impl_handleNonImageLink_nothrow( const Any& aURL )
+    {
+        Reference< XMultiComponentFactory > xMcf = m_aContext.getUNOContext()->getServiceManager();
+
+        Sequence< Any > aArgs(2);
+        aArgs[ 0 ] = aURL;
+        aArgs[ 1 ] <<= impl_getContextDocument_nothrow();
+
+        Reference< XInterface > xLinkProvider = xMcf->createInstanceWithArgumentsAndContext( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.awt.GraphicLinkProvider" ) ), aArgs, m_aContext.getUNOContext() );
+        bool bRes = false;
+        if ( xLinkProvider.is() )
+        {
+            try
+            {
+                m_xComponent->setPropertyValue( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "GraphicLinkProvider" ) ), makeAny( xLinkProvider ) );
+                bRes = true;
+            }
+            catch( const Exception& )
+            {
+                DBG_UNHANDLED_EXCEPTION();
+            }
+        }
+        return bRes;
+    }
     // -------------------------------------------------------------------------
     ::cppu::IPropertyArrayHelper* FormComponentPropertyHandler::createArrayHelper( ) const
     {
diff --git a/extensions/source/propctrlr/formcomponenthandler.hxx b/extensions/source/propctrlr/formcomponenthandler.hxx
index 2216704..e7b4d76 100644
--- a/extensions/source/propctrlr/formcomponenthandler.hxx
+++ b/extensions/source/propctrlr/formcomponenthandler.hxx
@@ -309,7 +309,7 @@ namespace pcr
                 <TRUE/> if and only if a new image URL has been chosen by the user.
                 In this case, ->_out_rNewValue is filled with the new property value
         */
-        bool impl_browseForImage_nothrow( ::com::sun::star::uno::Any& _out_rNewValue, ::osl::ClearableMutexGuard& _rClearBeforeDialog ) const;
+        bool impl_browseForImage_nothrow( ::com::sun::star::uno::Any& _out_rNewValue, bool& bIsLink, ::osl::ClearableMutexGuard& _rClearBeforeDialog ) const;
 
         /** executes a dialog which allows the user to change the TargetURL property of
             our component
@@ -438,6 +438,8 @@ namespace pcr
         */
         ::rtl::OUString impl_getDocumentURL_nothrow() const;
 
+        bool impl_handleNonImageLink_nothrow( const ::com::sun::star::uno::Any& aURL );
+
     private:
         DECL_LINK( OnDesignerClosed, void* );
 
diff --git a/basctl/source/dlged/propbrw.cxx b/basctl/source/dlged/propbrw.cxx
index bfc59b0..9df7945 100644
--- a/basctl/source/dlged/propbrw.cxx
+++ b/basctl/source/dlged/propbrw.cxx
@@ -209,7 +209,8 @@ void PropBrw::ImplReCreateController()
         ::cppu::ContextEntry_Init aHandlerContextInfo[] =
         {
             ::cppu::ContextEntry_Init( ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DialogParentWindow" ) ), makeAny( VCLUnoHelper::GetInterface ( this ) ) ),
-            ::cppu::ContextEntry_Init( ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ContextDocument" ) ), makeAny( m_xContextDocument ) )
+            ::cppu::ContextEntry_Init( ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ContextDocument" ) ), makeAny( m_xContextDocument ) ),
+            ::cppu::ContextEntry_Init( ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "SupportNonLinkedImage" ) ), makeAny( sal_False ) )
         };
         Reference< XComponentContext > xInspectorContext(
             ::cppu::createComponentContext( aHandlerContextInfo, sizeof( aHandlerContextInfo ) / sizeof( aHandlerContextInfo[0] ),
