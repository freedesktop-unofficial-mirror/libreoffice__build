diff --git sc/source/ui/docshell/arealink.cxx sc/source/ui/docshell/arealink.cxx
index 3c25701..af15b50 100644
--- sc/source/ui/docshell/arealink.cxx
+++ sc/source/ui/docshell/arealink.cxx
@@ -69,6 +69,8 @@
 #include "sc.hrc" //CHINA001
 #include "scabstdlg.hxx" //CHINA001
 
+#include <stdio.h>
+
 struct AreaLink_Impl
 {
     ScDocShell* m_pDocSh;
@@ -97,20 +99,35 @@ ScAreaLink::ScAreaLink( SfxObjectShell* pShell, const String& rFile,
 	bInCreate		(FALSE),
 	bDoInsert		(TRUE)
 {
+    fprintf(stdout, "ScAreaLink::ScAreaLink: --begin ctor\n");
+
 	DBG_ASSERT(pShell->ISA(ScDocShell), "ScAreaLink mit falscher ObjectShell");
     pImpl->m_pDocSh = static_cast< ScDocShell* >( pShell );
 	SetRefreshHandler( LINK( this, ScAreaLink, RefreshHdl ) );
     SetRefreshControl( pImpl->m_pDocSh->GetDocument()->GetRefreshTimerControlAddress() );
+
+    fprintf(stdout, "ScAreaLink::ScAreaLink:   file name = '%s'; filter name = '%s'; options = '%s'; src area = '%s'\n",
+            rtl::OUStringToOString(aFileName, RTL_TEXTENCODING_UTF8).getStr(),
+            rtl::OUStringToOString(aFilterName, RTL_TEXTENCODING_UTF8).getStr(),
+            rtl::OUStringToOString(aOptions, RTL_TEXTENCODING_UTF8).getStr(),
+            rtl::OUStringToOString(aSourceArea, RTL_TEXTENCODING_UTF8).getStr());
+
+    String aDestAreaStr;
+    aDestArea.Format(aDestAreaStr, SCR_ABS_3D, pImpl->m_pDocSh->GetDocument());
+    fprintf(stdout, "ScAreaLink::ScAreaLink:   dest area = '%s'\n", 
+            rtl::OUStringToOString(aDestAreaStr, RTL_TEXTENCODING_UTF8).getStr());
 }
 
 __EXPORT ScAreaLink::~ScAreaLink()
 {
+    fprintf(stdout, "ScAreaLink::~ScAreaLink: --begin dtor\n");
 	StopRefreshTimer();
     delete pImpl;
 }
 
 void __EXPORT ScAreaLink::Edit(Window* pParent, const Link& /* rEndEditHdl */ )
 {
+    fprintf(stdout, "ScAreaLink::Edit: --begni dtor\n");
 	//	use own dialog instead of SvBaseLink::Edit...
 	//	DefModalDialogParent setzen, weil evtl. aus der DocShell beim ConvertFrom
 	//	ein Optionen-Dialog kommt...
@@ -123,16 +140,21 @@ void __EXPORT ScAreaLink::Edit(Window* pParent, const Link& /* rEndEditHdl */ )
 	pDlg->InitFromOldLink( aFileName, aFilterName, aOptions, aSourceArea, GetRefreshDelay() );
     pImpl->m_pDialog = pDlg;
     pDlg->StartExecuteModal( LINK( this, ScAreaLink, AreaEndEditHdl ) );
+    fprintf(stdout, "ScAreaLink::Edit: --end\n");
 }
 
 void __EXPORT ScAreaLink::DataChanged( const String&,
 									   const ::com::sun::star::uno::Any& )
 {
+    fprintf(stdout, "ScAreaLink::DataChanged: --begin\n");
 	//	bei bInCreate nichts tun, damit Update gerufen werden kann, um den Status im
 	//	LinkManager zu setzen, ohne die Daten im Dokument zu aendern
 
 	if (bInCreate)
-		return;
+    {
+        fprintf(stdout, "ScAreaLink::DataChanged: --end (in create)\n");
+        return;
+    }
 
     SvxLinkManager* pLinkManager=pImpl->m_pDocSh->GetDocument()->GetLinkManager();
 	if (pLinkManager!=NULL)
@@ -159,10 +181,12 @@ void __EXPORT ScAreaLink::DataChanged( const String&,
 
 		Refresh( aFile, aFilter, aArea, GetRefreshDelay() );
 	}
+    fprintf(stdout, "ScAreaLink::DataChanged: --end\n");
 }
 
 void __EXPORT ScAreaLink::Closed()
 {
+    fprintf(stdout, "ScAreaLink::Closed: --begin\n");
 	// Verknuepfung loeschen: Undo
 
     ScDocument* pDoc = pImpl->m_pDocSh->GetDocument();
@@ -177,6 +201,7 @@ void __EXPORT ScAreaLink::Closed()
 	}
 
 	SvBaseLink::Closed();
+    fprintf(stdout, "ScAreaLink::Closed: --end\n");
 }
 
 void ScAreaLink::SetDestArea(const ScRange& rNew)
@@ -244,6 +269,7 @@ BOOL ScAreaLink::FindExtRange( ScRange& rRange, ScDocument* pSrcDoc, const Strin
 BOOL ScAreaLink::Refresh( const String& rNewFile, const String& rNewFilter,
 							const String& rNewArea, ULONG nNewRefresh )
 {
+    fprintf(stdout, "ScAreaLink::Refresh: --begin\n");
 	//	Dokument laden - wie TabLink
 
 	if (!rNewFile.Len() || !rNewFilter.Len())
@@ -270,6 +296,7 @@ BOOL ScAreaLink::Refresh( const String& rNewFile, const String& rNewFilter,
 	if ( aOptions.Len() )
 		pSet->Put( SfxStringItem( SID_FILE_FILTEROPTIONS, aOptions ) );
 
+    fprintf(stdout, "ScAreaLink::Refresh:   new url = '%s'\n", rtl::OUStringToOString(aNewUrl, RTL_TEXTENCODING_UTF8).getStr());
 	SfxMedium* pMed = new SfxMedium(aNewUrl, STREAM_STD_READ, FALSE, pFilter);
 
 	ScDocShell* pSrcShell = new ScDocShell(SFX_CREATE_MODE_INTERNAL);
@@ -278,6 +305,7 @@ BOOL ScAreaLink::Refresh( const String& rNewFile, const String& rNewFilter,
 	pSrcShell->DoLoad(pMed);
 
 	ScDocument* pSrcDoc = pSrcShell->GetDocument();
+    fprintf(stdout, "ScAreaLink::Refresh:   src document loaded.\n");
 
 	// Optionen koennten gesetzt worden sein
 	String aNewOpt = ScDocumentLoader::GetOptions(*pMed);
@@ -292,6 +320,8 @@ BOOL ScAreaLink::Refresh( const String& rNewFile, const String& rNewFilter,
 	else
 		aTempArea = rNewArea;
 
+    fprintf(stdout, "ScAreaLink::Refresh:   tmp area = '%s'\n", rtl::OUStringToOString(aTempArea, RTL_TEXTENCODING_UTF8).getStr());
+
 	// find total size of source area
 	SCCOL nWidth = 0;
 	SCROW nHeight = 0;
@@ -497,6 +527,7 @@ BOOL ScAreaLink::Refresh( const String& rNewFile, const String& rNewFilter,
 		pDoc->BroadcastUno( aHint );
 	}
 
+    fprintf(stdout, "ScAreaLink::Refresh: --end (can do: %s)\n", bCanDo?"yes":"no");
 	return bCanDo;
 }
 
diff --git sc/source/ui/docshell/docfunc.cxx sc/source/ui/docshell/docfunc.cxx
index f9aac10..7ff4463 100644
--- sc/source/ui/docshell/docfunc.cxx
+++ sc/source/ui/docshell/docfunc.cxx
@@ -3957,6 +3957,9 @@ BOOL ScDocFunc::InsertAreaLink( const String& rFile, const String& rFilter,
 								const ScRange& rDestRange, ULONG nRefresh,
                                 BOOL bFitBlock, BOOL bApi )
 {
+    fprintf(stdout, "ScDocFunc::InsertAreaLink: --begin (file = '%s')\n",
+            rtl::OUStringToOString(rFile, RTL_TEXTENCODING_UTF8).getStr());
+
 	//!	auch fuer ScViewFunc::InsertAreaLink benutzen!
 
 	ScDocument* pDoc = rDocShell.GetDocument();
diff --git sfx2/source/appl/lnkbase2.cxx sfx2/source/appl/lnkbase2.cxx
index 9267906..bf53fac 100644
--- sfx2/source/appl/lnkbase2.cxx
+++ sfx2/source/appl/lnkbase2.cxx
@@ -57,6 +57,8 @@
 
 #include <svtools/svdde.hxx>
 
+#include <stdio.h>
+
 using namespace ::com::sun::star::uno;
 
 namespace sfx2
@@ -365,6 +367,7 @@ void SvBaseLink::SetUpdateMode( USHORT nMode )
 
 BOOL SvBaseLink::Update()
 {
+    fprintf(stdout, "sfx2/SvBaseLink::Update: --begin\n");
 	if( OBJECT_CLIENT_SO & nObjType )
 	{
 		AddNextRef();
@@ -388,13 +391,17 @@ BOOL SvBaseLink::Update()
 				if( OBJECT_CLIENT_DDE == nObjType &&
 					LINKUPDATE_ONCALL == GetUpdateMode() && xObj.Is() )
 					xObj->RemoveAllDataAdvise( this );
+                fprintf(stdout, "sfx2/SvBaseLink::Update: --end (%d)\n", __LINE__);
 				return TRUE;
 			}
 			if( xObj.Is() )
 			{
 				// sollten wir asynschron sein?
 				if( xObj->IsPending() )
+                {    
+                    fprintf(stdout, "sfx2/SvBaseLink::Update: --end (%d)\n", __LINE__);
 					return TRUE;
+                }
 
 				// dann brauchen wir das Object auch nicht mehr
 				AddNextRef();
@@ -403,6 +410,7 @@ BOOL SvBaseLink::Update()
 			}
 		}
 	}
+    fprintf(stdout, "sfx2/SvBaseLink::Update: --end (%d)\n", __LINE__);
 	return FALSE;
 }
 
