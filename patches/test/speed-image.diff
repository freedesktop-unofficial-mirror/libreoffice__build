Index: vcl/source/control/button.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/control/button.cxx,v
retrieving revision 1.42
diff -u -p -u -r1.42 button.cxx
--- vcl/source/control/button.cxx	26 Jan 2006 18:07:58 -0000	1.42
+++ vcl/source/control/button.cxx	31 May 2006 09:14:52 -0000
@@ -3107,6 +3109,30 @@ Size RadioButton::ImplGetRadioImageSize(
     return aSize;
 }
 
+static void LoadThemedImageList (const StyleSettings &rStyleSettings,
+								 ImageList *pList, const ResId &rResId)
+{
+	Color pColorAry1[6];
+	Color pColorAry2[6];
+	pColorAry1[0] = Color( 0xC0, 0xC0, 0xC0 );
+	pColorAry1[1] = Color( 0xFF, 0xFF, 0x00 );
+	pColorAry1[2] = Color( 0xFF, 0xFF, 0xFF );
+	pColorAry1[3] = Color( 0x80, 0x80, 0x80 );
+	pColorAry1[4] = Color( 0x00, 0x00, 0x00 );
+	pColorAry1[5] = Color( 0x00, 0xFF, 0x00 );
+	pColorAry2[0] = rStyleSettings.GetFaceColor();
+	pColorAry2[1] = rStyleSettings.GetWindowColor();
+	pColorAry2[2] = rStyleSettings.GetLightColor();
+	pColorAry2[3] = rStyleSettings.GetShadowColor();
+	pColorAry2[4] = rStyleSettings.GetDarkShadowColor();
+	pColorAry2[5] = rStyleSettings.GetWindowTextColor();
+	
+	Color aMaskColor(0x00, 0x00, 0xFF );
+	// FIXME: do we want the mask for the checkbox ?
+	pList->InsertFromHorizontalBitmap (rResId, &aMaskColor,
+									   pColorAry1, pColorAry2, 6);
+}
+
 Image RadioButton::GetRadioImage( const AllSettings& rSettings, USHORT nFlags )
 {
     ImplSVData*             pSVData = ImplGetSVData();
@@ -3129,10 +3155,8 @@ Image RadioButton::GetRadioImage( const 
         pSVData->maCtrlData.mnLastRadioWColor = rStyleSettings.GetWindowColor().GetColor();
         pSVData->maCtrlData.mnLastRadioLColor = rStyleSettings.GetLightColor().GetColor();
 
-        long    aTempAry1[(6*sizeof(Color))/sizeof(long)];
-        long    aTempAry2[(6*sizeof(Color))/sizeof(long)];
-        Color*  pColorAry1 = (Color*)aTempAry1;
-        Color*  pColorAry2 = (Color*)aTempAry2;
+        Color pColorAry1[6];
+        Color pColorAry2[6];
         pColorAry1[0] = Color( 0xC0, 0xC0, 0xC0 );
         pColorAry1[1] = Color( 0xFF, 0xFF, 0x00 );
         pColorAry1[2] = Color( 0xFF, 0xFF, 0xFF );
@@ -3147,12 +3171,12 @@ Image RadioButton::GetRadioImage( const 
         pColorAry2[5] = rStyleSettings.GetWindowTextColor();
 
         ResMgr* pResMgr = ImplGetResMgr();
-        Bitmap aBmp;
+        pSVData->maCtrlData.mpRadioImgList = new ImageList();
         if( pResMgr )
-            aBmp = Bitmap( ResId( SV_RESID_BITMAP_RADIO+nStyle, ImplGetResMgr() ) );
-        aBmp.Replace( pColorAry1, pColorAry2, 6, NULL );
-        pSVData->maCtrlData.mpRadioImgList = new ImageList( aBmp, Color( 0x00, 0x00, 0xFF ), 6 );
-        pSVData->maCtrlData.mnRadioStyle = nStyle;
+			LoadThemedImageList( rStyleSettings,
+								 pSVData->maCtrlData.mpRadioImgList,
+								 ResId( SV_RESID_BITMAP_RADIO+nStyle, ImplGetResMgr() ) );
+		pSVData->maCtrlData.mnRadioStyle = nStyle;
     }
 
     USHORT nId;
@@ -3946,29 +3970,12 @@ Image CheckBox::GetCheckImage( const All
         pSVData->maCtrlData.mnLastCheckWColor = rStyleSettings.GetWindowColor().GetColor();
         pSVData->maCtrlData.mnLastCheckLColor = rStyleSettings.GetLightColor().GetColor();
 
-        long    aTempAry1[(6*sizeof(Color))/sizeof(long)];
-        long    aTempAry2[(6*sizeof(Color))/sizeof(long)];
-        Color*  pColorAry1 = (Color*)aTempAry1;
-        Color*  pColorAry2 = (Color*)aTempAry2;
-        pColorAry1[0] = Color( 0xC0, 0xC0, 0xC0 );
-        pColorAry1[1] = Color( 0xFF, 0xFF, 0x00 );
-        pColorAry1[2] = Color( 0xFF, 0xFF, 0xFF );
-        pColorAry1[3] = Color( 0x80, 0x80, 0x80 );
-        pColorAry1[4] = Color( 0x00, 0x00, 0x00 );
-        pColorAry1[5] = Color( 0x00, 0xFF, 0x00 );
-        pColorAry2[0] = rStyleSettings.GetFaceColor();
-        pColorAry2[1] = rStyleSettings.GetWindowColor();
-        pColorAry2[2] = rStyleSettings.GetLightColor();
-        pColorAry2[3] = rStyleSettings.GetShadowColor();
-        pColorAry2[4] = rStyleSettings.GetDarkShadowColor();
-        pColorAry2[5] = rStyleSettings.GetWindowTextColor();
-
         ResMgr* pResMgr = ImplGetResMgr();
-        Bitmap aBmp;
+        pSVData->maCtrlData.mpCheckImgList = new ImageList();
         if( pResMgr )
-            aBmp = Bitmap( ResId( SV_RESID_BITMAP_CHECK+nStyle, ImplGetResMgr() ) );
-        aBmp.Replace( pColorAry1, pColorAry2, 6, NULL );
-        pSVData->maCtrlData.mpCheckImgList = new ImageList( aBmp, 9 );
+			LoadThemedImageList( rStyleSettings,
+								 pSVData->maCtrlData.mpCheckImgList,
+								 ResId( SV_RESID_BITMAP_CHECK+nStyle, ImplGetResMgr() ) );
         pSVData->maCtrlData.mnCheckStyle = nStyle;
     }
 
Index: vcl/source/window/brdwin.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/brdwin.cxx,v
retrieving revision 1.23
diff -u -p -u -r1.23 brdwin.cxx
--- vcl/source/window/brdwin.cxx	28 Sep 2005 14:50:05 -0000	1.23
+++ vcl/source/window/brdwin.cxx	31 May 2006 09:17:50 -0000
@@ -95,11 +95,15 @@ static void ImplGetPinImage( USHORT nSty
 	ImplSVData* pSVData = ImplGetSVData();
 	if ( !pSVData->maCtrlData.mpPinImgList )
 	{
-		Bitmap aBmp;
         ResMgr* pResMgr = ImplGetResMgr();
+		pSVData->maCtrlData.mpPinImgList = new ImageList();
         if( pResMgr )
-            aBmp = Bitmap( ResId( SV_RESID_BITMAP_PIN, ImplGetResMgr() ) );
-		pSVData->maCtrlData.mpPinImgList = new ImageList( aBmp, Color( 0x00, 0x00, 0xFF ), 4 );
+		{
+			Color aMaskColor( 0x00, 0x00, 0xFF );
+			pSVData->maCtrlData.mpPinImgList->InsertFromHorizontalBitmap
+				( ResId( SV_RESID_BITMAP_PIN, ImplGetResMgr() ),
+				  &aMaskColor, NULL, NULL, 0);
+		}
 	}
 
 	// Image ermitteln und zurueckgeben
Index: vcl/source/window/msgbox.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/msgbox.cxx,v
retrieving revision 1.17
diff -u -p -u -r1.17 msgbox.cxx
--- vcl/source/window/msgbox.cxx	28 Sep 2005 14:51:46 -0000	1.17
+++ vcl/source/window/msgbox.cxx	31 May 2006 09:25:08 -0000
@@ -84,15 +84,13 @@ static void ImplInitMsgBoxImageList()
 	{
         BitmapEx aBmpEx;
         ResMgr* pResMgr = ImplGetResMgr();
+		pSVData->maWinData.mpMsgBoxImgList = new ImageList(4);
         if( pResMgr )
         {
-            aBmpEx = BitmapEx( ResId( SV_RESID_BITMAP_MSGBOX, ImplGetResMgr() ) );
-		
-            if( !aBmpEx.IsTransparent() )
-                aBmpEx = BitmapEx( aBmpEx.GetBitmap(), Color( 0xC0, 0xC0, 0xC0 ) );
-        }
-        
-		pSVData->maWinData.mpMsgBoxImgList = new ImageList( aBmpEx, 4 );
+			Color aNonAlphaMask( 0xC0, 0xC0, 0xC0 );
+			pSVData->maWinData.mpMsgBoxImgList->InsertFromHorizontalBitmap
+					( ResId( SV_RESID_BITMAP_MSGBOX, ImplGetResMgr() ), &aNonAlphaMask );
+		}
 	}
 }
 
Index: vcl/source/window/scrwnd.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/scrwnd.cxx,v
retrieving revision 1.5
diff -u -p -u -r1.5 scrwnd.cxx
--- vcl/source/window/scrwnd.cxx	28 Sep 2005 14:52:29 -0000	1.5
+++ vcl/source/window/scrwnd.cxx	31 May 2006 09:27:47 -0000
@@ -144,11 +144,10 @@ void ImplWheelWindow::ImplSetRegion( con
 
 void ImplWheelWindow::ImplCreateImageList()
 {
-    Bitmap aImgBmp;
     ResMgr* pResMgr = ImplGetResMgr();
     if( pResMgr )
-        aImgBmp = Bitmap( ResId( SV_RESID_BITMAP_SCROLLBMP, pResMgr ) );
-    maImgList = ImageList( aImgBmp, 6 );
+		maImgList.InsertFromHorizontalBitmap
+			( ResId( SV_RESID_BITMAP_SCROLLBMP, pResMgr ), NULL );
 }
 
 // ------------------------------------------------------------------------
