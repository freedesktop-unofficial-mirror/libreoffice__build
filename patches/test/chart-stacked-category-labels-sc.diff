diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/filter/inc/fdumper.hxx sc/source/filter/inc/fdumper.hxx
--- sc.clean/source/filter/inc/fdumper.hxx	2008-02-05 11:16:59.000000000 -0500
+++ sc/source/filter/inc/fdumper.hxx	2008-02-15 11:13:21.000000000 -0500
@@ -36,7 +36,7 @@
 #ifndef SC_FDUMPER_HXX
 #define SC_FDUMPER_HXX
 
-#define SCF_INCL_DUMPER (OSL_DEBUG_LEVEL > 0)
+#define SCF_INCL_DUMPER (OSL_DEBUG_LEVEL > 0) && 0
 
 #if SCF_INCL_DUMPER
 
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/ui/unoobj/chart2uno.cxx sc/source/ui/unoobj/chart2uno.cxx
--- sc.clean/source/ui/unoobj/chart2uno.cxx	2008-02-05 11:16:58.000000000 -0500
+++ sc/source/ui/unoobj/chart2uno.cxx	2008-02-18 23:12:51.000000000 -0500
@@ -80,6 +80,8 @@
 #include <rtl/math.hxx>
 #endif
 
+#include <stdio.h>
+
 SC_SIMPLE_SERVICE_INFO( ScChart2DataProvider, "ScChart2DataProvider",
         "com.sun.star.chart2.data.DataProvider")
 SC_SIMPLE_SERVICE_INFO( ScChart2DataSource, "ScChart2DataSource",
@@ -92,6 +94,9 @@ SC_SIMPLE_SERVICE_INFO( ScChart2EmptyDat
         "com.sun.star.chart2.data.DataSequence")
 
 using namespace ::com::sun::star;
+using ::com::sun::star::uno::Sequence;
+using ::rtl::OUString;
+using ::std::vector;
 
 namespace
 {
@@ -1597,6 +1602,52 @@ uno::Sequence< double > SAL_CALL ScChart
 
 uno::Sequence< rtl::OUString > SAL_CALL ScChart2DataSequence::getTextualData(  ) throw (uno::RuntimeException)
 {
+#if 1
+    ScUnoGuard aGuard;
+    if (!m_pDocument)
+        throw uno::RuntimeException();
+
+    const OUString LB = OUString::createFromAscii("-- endline --");
+    const OUString CONT = OUString::createFromAscii("-- cont --");
+
+    vector<OUString> aStrList;
+    for (ScRangePtr p = m_xRanges->First(); p; p = m_xRanges->Next())
+    {
+        fprintf(stdout, "ScChart2DataSequence::getTextualData: range: tab: %d; (%d, %d) - (%d, %d)\n",
+                p->aStart.Tab(), p->aStart.Col(), p->aStart.Row(), p->aEnd.Col(), p->aEnd.Row());
+        fflush(stdout);
+        const ScAddress& rStart = p->aStart;
+        const ScAddress& rEnd   = p->aEnd;
+        for (SCTAB nTab = rStart.Tab(); nTab <= rEnd.Tab(); ++nTab)
+        {
+            for (SCCOL nCol = rStart.Col(); nCol <= rEnd.Col(); ++nCol)
+            {
+                for (SCROW nRow = rStart.Row(); nRow <= rEnd.Row(); ++nRow)
+                {
+                    String aStr;
+                    m_pDocument->GetString(nCol, nRow, nTab, aStr);
+                    bool bMerged  = m_pDocument->HasAttrib(nCol,nRow,nTab,nCol,nRow,nTab, HASATTR_MERGED);
+                    bool bOverlap = m_pDocument->HasAttrib(nCol,nRow,nTab,nCol,nRow,nTab, HASATTR_OVERLAPPED);
+                    fprintf(stdout, "ScChart2DataSequence::getTextualData:   tab: %d; cell: (%d, %ld) - (merged %d; overlapped: %d) : '%s'\n",
+                            nTab, nCol, nRow, bMerged, bOverlap,
+                            rtl::OUStringToOString(aStr, RTL_TEXTENCODING_UTF8).getStr());fflush(stdout);
+                    if (bOverlap)
+                        aStrList.push_back(CONT);
+                    else
+                        aStrList.push_back(aStr);
+                }
+                aStrList.push_back(LB);
+            }
+            aStrList.push_back(LB);
+        }
+        aStrList.push_back(LB);
+    }
+
+    Sequence<OUString> aSeq(aStrList.size());
+    for (sal_Int32 i = 0; i < aSeq.getLength(); ++i)
+        aSeq[i] = aStrList[i];
+    return aSeq;
+#else    
     ScUnoGuard aGuard;
     if ( !m_pDocument)
         throw uno::RuntimeException();
@@ -1645,6 +1696,7 @@ uno::Sequence< rtl::OUString > SAL_CALL 
         }
     }
     return aSeq;
+#endif    
 }
 
 ::rtl::OUString SAL_CALL ScChart2DataSequence::getSourceRangeRepresentation()
