? sc/output.log
? sc/sc.vpj
? sc/inc/dpcachetable.hxx
? sc/source/core/data/dpcachetable.cxx
Index: sc/addin/datefunc/makefile.mk
===================================================================
RCS file: /cvs/sc/sc/addin/datefunc/makefile.mk,v
retrieving revision 1.12
retrieving revision 1.13
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.12 -r1.13
--- sc/addin/datefunc/makefile.mk	25 May 2007 11:12:17 -0000	1.12
+++ sc/addin/datefunc/makefile.mk	20 Sep 2007 16:32:39 -0000	1.13
@@ -131,4 +131,27 @@
 
 .ENDIF
 
+.IF "$(GUI)"=="OS2"
+
+$(MISC)$/$(SHL1TARGET).def: makefile.mk
+    @echo ------------------------------
+    @echo Making: $@
+    @echo LIBRARY     $(SHL1TARGET) INITINSTANCE TERMINSTANCE >$@
+    @echo DESCRIPTION 'DateF StarCalc Addin DLL'>>$@
+    @echo DATA        MULTIPLE>>$@
+    @echo EXPORTS>>$@
+    @echo     _GetFunctionCount>>$@
+    @echo     _GetFunctionData>>$@
+    @echo     _GetParameterDescription>>$@
+    @echo     _SetLanguage >>$@
+    @echo     _ScDate_GetDiffWeeks>>$@
+    @echo     _ScDate_GetDiffMonths>>$@
+    @echo     _ScDate_GetDiffYears>>$@
+    @echo     _ScDate_IsLeapYear>>$@
+    @echo     _ScDate_DaysInMonth>>$@
+    @echo     _ScDate_DaysInYear>>$@
+    @echo     _ScDate_WeeksInYear>>$@
+
+.ENDIF
+
 
Index: sc/inc/addincol.hxx
===================================================================
RCS file: /cvs/sc/sc/inc/addincol.hxx,v
retrieving revision 1.9
retrieving revision 1.10
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.9 -r1.10
--- sc/inc/addincol.hxx	4 Aug 2006 12:10:52 -0000	1.9
+++ sc/inc/addincol.hxx	27 Sep 2007 13:50:56 -0000	1.10
@@ -36,6 +36,7 @@
 #ifndef SC_ADDINCOL_HXX
 #define SC_ADDINCOL_HXX
 
+#include "global.hxx"
 
 #ifndef _COM_SUN_STAR_SHEET_XVOLATILERESULT_HPP_
 #include <com/sun/star/sheet/XVolatileResult.hpp>
@@ -87,14 +88,7 @@
 class ScFuncDesc;
 
 
-struct ScAddInStringHashCode
-{
-    size_t operator()( const String& rStr ) const
-	{
-        return rtl_ustr_hashCode_WithLength( rStr.GetBuffer(), rStr.Len() );
-	}
-};
-typedef ::std::hash_map< String, const ScUnoAddInFuncData*, ScAddInStringHashCode, ::std::equal_to< String > > ScAddInHashMap;
+typedef ::std::hash_map< String, const ScUnoAddInFuncData*, ScStringHashCode, ::std::equal_to< String > > ScAddInHashMap;
 
 
 enum ScAddInArgumentType
Index: sc/inc/address.hxx
===================================================================
RCS file: /cvs/sc/sc/inc/address.hxx,v
retrieving revision 1.13
retrieving revision 1.14
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.13 -r1.14
--- sc/inc/address.hxx	13 Jun 2007 09:04:04 -0000	1.13
+++ sc/inc/address.hxx	27 Sep 2007 13:51:08 -0000	1.14
@@ -327,6 +327,8 @@
     inline bool operator>( const ScAddress& r ) const;
     inline bool operator>=( const ScAddress& r ) const;
 
+    inline size_t hash() const;
+
     // moved from ScTripel
     /// "(1,2,3)"
     String GetText() const;
@@ -412,6 +414,20 @@
     return !operator<( r );
 }
 
+
+inline size_t ScAddress::hash() const
+{
+    // Assume that there are not that many addresses with row > 2^16 AND column
+    // > 2^8 AND sheet > 2^8 so we won't have too many collisions.
+    if (nRow <= 0xffff)
+        return (static_cast<size_t>(nTab) << 24) ^
+            (static_cast<size_t>(nCol) << 16) ^ static_cast<size_t>(nRow);
+    else
+        return (static_cast<size_t>(nTab) << 28) ^
+            (static_cast<size_t>(nCol) << 24) ^ static_cast<size_t>(nRow);
+}
+
+
 // === ScRange ===============================================================
 
 class SC_DLLPUBLIC ScRange
@@ -467,6 +483,9 @@
     inline bool operator<=( const ScRange& r ) const;
     inline bool operator>( const ScRange& r ) const;
     inline bool operator>=( const ScRange& r ) const;
+
+    inline size_t hash() const;
+    inline size_t hashStartColumn() const;
 };
 
 inline void ScRange::GetVars( SCCOL& nCol1, SCROW& nRow1, SCTAB& nTab1,
@@ -523,6 +542,36 @@
         aStart.Tab() <= r.aStart.Tab() && r.aEnd.Tab() <= aEnd.Tab();
 }
 
+
+inline size_t ScRange::hash() const
+{
+    // Assume that there are not that many ranges with identical corners so we
+    // won't have too many collisions. Also assume that more lower row and
+    // column numbers are used so that there are not too many conflicts with
+    // the columns hashed into the values, and that start row and column
+    // usually don't exceed certain values. High bits are not masked off and
+    // may overlap with lower bits of other values, e.g. if start column is
+    // greater than assumed.
+    return
+        (static_cast<size_t>(aStart.Row()) << 26) ^ // start row <= 2^6
+        (static_cast<size_t>(aStart.Col()) << 21) ^ // start column <= 2^5
+        (static_cast<size_t>(aEnd.Col()) << 15) ^   // end column <= 2^6
+        static_cast<size_t>(aEnd.Row());            // end row <= 2^15
+}
+
+
+inline size_t ScRange::hashStartColumn() const
+{
+    // Assume that for the start row more lower row numbers are used so that
+    // there are not too many conflicts with the column hashed into the higher
+    // values.
+    return
+        (static_cast<size_t>(aStart.Col()) << 24) ^ // start column <= 2^8
+        (static_cast<size_t>(aStart.Row()) << 16) ^ // start row <= 2^8
+        static_cast<size_t>(aEnd.Row());
+}
+
+
 // === ScRangePair ===========================================================
 
 class ScRangePair
Index: sc/inc/autonamecache.hxx
===================================================================
RCS file: /cvs/sc/sc/inc/autonamecache.hxx,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.2 -r1.3
--- sc/inc/autonamecache.hxx	31 Jan 2006 18:34:36 -0000	1.2
+++ sc/inc/autonamecache.hxx	27 Sep 2007 13:51:20 -0000	1.3
@@ -42,17 +42,10 @@
 #ifndef SC_ADDRESS_HXX
 #include "address.hxx"
 #endif
-
-struct ScAutoNameHashCode
-{
-    size_t operator()( const String& rStr ) const
-	{
-        return rtl_ustr_hashCode_WithLength( rStr.GetBuffer(), rStr.Len() );
-	}
-};
+#include "global.hxx"
 
 typedef ::std::vector< ScAddress > ScAutoNameAddresses;
-typedef ::std::hash_map< String, ScAutoNameAddresses, ScAutoNameHashCode, ::std::equal_to< String > > ScAutoNameHashMap;
+typedef ::std::hash_map< String, ScAutoNameAddresses, ScStringHashCode, ::std::equal_to< String > > ScAutoNameHashMap;
 
 //
 //  Cache for faster lookup of automatic names during CompileXML
Index: sc/inc/document.hxx
===================================================================
RCS file: /cvs/sc/sc/inc/document.hxx,v
retrieving revision 1.102
retrieving revision 1.104
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.102 -r1.104
--- sc/inc/document.hxx	3 Aug 2007 13:06:37 -0000	1.102
+++ sc/inc/document.hxx	27 Sep 2007 13:51:33 -0000	1.104
@@ -159,6 +159,8 @@
 class VirtualDevice;
 class ScAutoNameCache;
 class ScTemporaryChartLock;
+class ScLookupCache;
+struct ScLookupCacheMapImpl;
 
 namespace com { namespace sun { namespace star {
     namespace lang {
@@ -318,6 +320,8 @@
 
     ScAutoNameCache*    pAutoNameCache;                 // for automatic name lookup during CompileXML
 
+    ScLookupCacheMapImpl* pLookupCacheMapImpl;          // cache for lookups like VLOOKUP and MATCH
+
     sal_Int64           nUnoObjectId;                   // counted up for UNO objects
 
     sal_uInt32          nRangeOverflowType;             // used in (xml) loading for overflow warnings
@@ -831,6 +835,12 @@
 
     ScAutoNameCache* GetAutoNameCache()     { return pAutoNameCache; }
 
+                    // Creates a ScLookupCache cache for the range if it doesn't already exist.
+    ScLookupCache & GetLookupCache( const ScRange & rRange );
+                    // Only ScLookupCache ctor/dtor use Add/Remove.
+    void            AddLookupCache( ScLookupCache & rCache );
+    void            RemoveLookupCache( ScLookupCache & rCache );
+
 					// Automatisch Berechnen
 	void			SetAutoCalc( BOOL bNewAutoCalc );
 	BOOL			GetAutoCalc() const { return bAutoCalc; }
@@ -1356,7 +1366,7 @@
 	void 			GetUpperCellString(SCCOL nCol, SCROW nRow, SCTAB nTab, String& rStr);
 
 	BOOL			GetFilterEntries( SCCOL nCol, SCROW nRow, SCTAB nTab,
-								TypedStrCollection& rStrings );
+								TypedStrCollection& rStrings, bool bFilter = false );
 	SC_DLLPUBLIC BOOL			GetFilterEntriesArea( SCCOL nCol, SCROW nStartRow, SCROW nEndRow,
 								SCTAB nTab, TypedStrCollection& rStrings );
 	BOOL			GetDataEntries( SCCOL nCol, SCROW nRow, SCTAB nTab,
@@ -1432,6 +1442,7 @@
 	BOOL			IsCalcingAfterLoad() const { return bCalcingAfterLoad; }
 	void			SetNoListening( BOOL bVal ) { bNoListening = bVal; }
 	BOOL			GetNoListening() const { return bNoListening; }
+	ScBroadcastAreaSlotMachine*	GetBASM() const { return pBASM; }
 
 	ScChartListenerCollection* GetChartListenerCollection() const
 						{ return pChartListenerCollection; }
Index: sc/inc/dpobject.hxx
===================================================================
RCS file: /cvs/sc/sc/inc/dpobject.hxx,v
retrieving revision 1.12
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.12 dpobject.hxx
--- sc/inc/dpobject.hxx	27 Jun 2007 13:41:57 -0000	1.12
+++ sc/inc/dpobject.hxx	5 Oct 2007 04:13:53 -0000
@@ -78,7 +78,7 @@
 class StrCollection;
 class TypedStrCollection;
 struct PivotField;
-
+class ScDPCacheTable;
 
 struct ScDPServiceDesc
 {
@@ -223,6 +223,8 @@
 	BOOL				RefsEqual( const ScDPObject& r ) const;
 	void				WriteRefsTo( ScDPObject& r ) const;
 
+    void                GetDrillDownData(const ScAddress& rPos, ScDPCacheTable& rTableData);
+
 	// apply drop-down attribute, initialize nHeaderRows, without accessing the source
 	// (button attribute must be present)
 	void				RefreshAfterLoad();
Index: sc/inc/dpoutput.hxx
===================================================================
RCS file: /cvs/sc/sc/inc/dpoutput.hxx,v
retrieving revision 1.8
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.8 dpoutput.hxx
--- sc/inc/dpoutput.hxx	27 Jun 2007 13:42:13 -0000	1.8
+++ sc/inc/dpoutput.hxx	5 Oct 2007 04:13:53 -0000
@@ -60,6 +60,7 @@
 #include "address.hxx"
 #endif
 
+#include "dpcachetable.hxx"
 #include <vector>
 
 class Rectangle;
@@ -166,6 +167,11 @@
 	BOOL			HasError();			// range overflow or exception from source
 
 	void			GetPositionData( ScDPPositionData& rData, const ScAddress& rPos );
+
+    /** Get filtering criteria based on the position of the cell within data
+        field region. */
+    bool            GetDataFieldPositionData(::std::vector<ScDPCacheTable::Filter>& rFilters, const ScAddress& rPos);
+
     BOOL            GetPivotData( ScDPGetPivotDataField& rTarget, /* returns result */
                                   const std::vector< ScDPGetPivotDataField >& rFilters );
 	long			GetHeaderDim( const ScAddress& rPos, USHORT& rOrient );
Index: sc/inc/dpsdbtab.hxx
===================================================================
RCS file: /cvs/sc/sc/inc/dpsdbtab.hxx,v
retrieving revision 1.3
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.3 dpsdbtab.hxx
--- sc/inc/dpsdbtab.hxx	8 Sep 2005 17:35:48 -0000	1.3
+++ sc/inc/dpsdbtab.hxx	5 Oct 2007 04:13:53 -0000
@@ -50,6 +50,10 @@
 #include "dptabdat.hxx"
 #endif
 
+#include <vector>
+
+class ScDPCacheTable;
+
 // --------------------------------------------------------------------
 //
 //	implementation of ScDPTableData with database data
@@ -94,6 +98,11 @@
 	virtual void					DisposeData();
 	virtual void					SetEmptyFlags( BOOL bIgnoreEmptyRows, BOOL bRepeatIfEmpty );
 
+    virtual void                    CreateCacheTable(const ::std::vector<ScDPDimension*>& rPageDims);
+    virtual void                    GetDrillDownData(const ::std::vector<ScDPCacheTable::Filter>& rFilters, 
+                                                     ScDPCacheTable& rData);
+    virtual sal_Int32               GetFieldIndex(const String& rStr);
+
 	virtual void					ResetIterator();
 	virtual BOOL					GetNextRow( const ScDPTableIteratorParam& rParam );
 };
Index: sc/inc/dpshttab.hxx
===================================================================
RCS file: /cvs/sc/sc/inc/dpshttab.hxx,v
retrieving revision 1.4
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.4 dpshttab.hxx
--- sc/inc/dpshttab.hxx	8 Sep 2005 17:36:03 -0000	1.4
+++ sc/inc/dpshttab.hxx	5 Oct 2007 04:13:53 -0000
@@ -48,6 +48,9 @@
 #include "address.hxx"
 #endif
 
+#include <vector>
+
+class ScDPDimension;
 
 // --------------------------------------------------------------------
 //
@@ -70,7 +73,6 @@
 {
 private:
 	ScSheetDPData_Impl* pImpl;
-    BOOL* pSpecial;
 
 public:
 					ScSheetDPData( ScDocument* pD, const ScSheetSourceDesc& rDesc );
@@ -85,6 +87,10 @@
 	virtual void					DisposeData();
 	virtual void					SetEmptyFlags( BOOL bIgnoreEmptyRows, BOOL bRepeatIfEmpty );
 
+    virtual void                    CreateCacheTable(const ::std::vector<ScDPDimension*>& rPageDims);
+    virtual void                    GetDrillDownData(const ::std::vector<ScDPCacheTable::Filter>& rFilters, ScDPCacheTable& rData);
+    virtual sal_Int32               GetFieldIndex(const String& rStr);
+
 	virtual void					ResetIterator();
 	virtual BOOL					GetNextRow( const ScDPTableIteratorParam& rParam );
 };
Index: sc/inc/dptabdat.hxx
===================================================================
RCS file: /cvs/sc/sc/inc/dptabdat.hxx,v
retrieving revision 1.6
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.6 dptabdat.hxx
--- sc/inc/dptabdat.hxx	25 Jan 2007 11:03:15 -0000	1.6
+++ sc/inc/dptabdat.hxx	5 Oct 2007 04:13:53 -0000
@@ -40,11 +40,16 @@
 #include "address.hxx"
 #endif
 
+#include "dpoutput.hxx"
+
 #ifndef _STRING_HXX
 #include <tools/string.hxx>
 #endif
 
+#include <vector>
+
 class TypedStrCollection;
+class ScDPDimension;
 
 // -----------------------------------------------------------------------
 
@@ -110,16 +115,16 @@
 {
 	//	all pointers are just copied
 
-	SCSIZE			nColCount;
+	SCSIZE			nColCount;      // # column fields
 	const long*		pCols;
 	ScDPItemData*	pColData;
-	SCSIZE			nRowCount;
+	SCSIZE			nRowCount;      // # row fields
 	const long*		pRows;
 	ScDPItemData*	pRowData;
-	SCSIZE			nPageCount;
+	SCSIZE			nPageCount;     // # page fields
 	const long*		pPages;
 	ScDPItemData*	pPageData;
-	SCSIZE			nDatCount;
+	SCSIZE			nDatCount;      // # data fields
 	const long*		pDats;
 	ScDPValueData*	pValues;
 
@@ -155,6 +160,10 @@
 	virtual void					DisposeData() = 0;
 	virtual void					SetEmptyFlags( BOOL bIgnoreEmptyRows, BOOL bRepeatIfEmpty ) = 0;
 
+    virtual void                    CreateCacheTable(const ::std::vector<ScDPDimension*>& rPageDims);
+    virtual void                    GetDrillDownData(const ::std::vector<ScDPCacheTable::Filter>& rFilters, ScDPCacheTable& rTableData);
+    virtual sal_Int32               GetFieldIndex(const String& rStr);
+
 	virtual void					ResetIterator() = 0;
 	virtual BOOL					GetNextRow( const ScDPTableIteratorParam& rParam ) = 0;
 
Index: sc/inc/dptabsrc.hxx
===================================================================
RCS file: /cvs/sc/sc/inc/dptabsrc.hxx,v
retrieving revision 1.8
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.8 dptabsrc.hxx
--- sc/inc/dptabsrc.hxx	25 Jan 2007 11:03:43 -0000	1.8
+++ sc/inc/dptabsrc.hxx	5 Oct 2007 04:13:53 -0000
@@ -358,7 +358,7 @@
 {
 private:
 	ScDPSource*			pSource;
-	long				nDim;
+	long				nDim;               // dimension index (== column ID)
 	ScDPHierarchies*	pHierarchies;
 	long				nUsedHier;
 	USHORT				nFunction;			// enum GeneralFunction
Index: sc/inc/lookupcache.hxx
===================================================================
RCS file: sc/inc/lookupcache.hxx
diff -N sc/inc/lookupcache.hxx
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ sc/inc/lookupcache.hxx	27 Sep 2007 13:51:44 -0000	1.2
@@ -0,0 +1,275 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile: lookupcache.hxx,v $
+ *
+ *  $Revision: 1.2 $
+ *
+ *  last change: $Author: hr $ $Date: 2007/09/27 13:51:44 $
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *    MA  02111-1307  USA
+ *
+ ************************************************************************/
+
+#ifndef INCLUDED_SC_LOOKUPCACHE_HXX
+#define INCLUDED_SC_LOOKUPCACHE_HXX
+
+#ifndef SC_ADDRESS_HXX
+#include "address.hxx"
+#endif
+
+#ifndef SC_TOKEN_HXX
+#include "token.hxx"
+#endif
+
+#ifndef _SVT_LISTENER_HXX
+#include <svtools/listener.hxx>
+#endif
+
+#ifndef _STRING_HXX
+#include <tools/string.hxx>
+#endif
+
+#include <hash_map>
+
+class ScDocument;
+
+
+/** Lookup cache for one range used with interpreter functions such as VLOOKUP
+    and MATCH. Caches query for a specific row and the resulting address looked
+    up, in case other lookups of the same query in the same row are to be
+    performed, which usually occur to obtain a different offset column of the
+    same query.
+ */
+
+class ScLookupCache : public SvtListener
+{
+public:
+
+    enum Result
+    {
+        NOT_CACHED,         /// Query not found in cache.
+        CRITERIA_DIFFERENT, /// Different criteria for same query position exists.
+        NOT_AVAILABLE,      /// Criteria not available in lookup range.
+        FOUND               /// Criteria found.
+    };
+
+    enum QueryOp
+    {
+        UNKNOWN,
+        EQUAL,
+        LESS_EQUAL,
+        GREATER_EQUAL
+    };
+
+    class QueryCriteria
+    {
+        union
+        {
+            double          mfVal;
+            const String *  mpStr;
+        };
+        bool                mbAlloc  : 1;
+        bool                mbString : 1;
+        QueryOp             meOp     : 2;
+
+        void deleteString()
+        {
+            if (mbAlloc && mbString)
+                delete mpStr;
+        }
+
+        // prevent usage
+        QueryCriteria();
+        QueryCriteria & operator=( const QueryCriteria & r );
+
+    public:
+
+        explicit QueryCriteria( const ScQueryEntry & rEntry ) :
+            mfVal(0.0), mbAlloc(false), mbString(false)
+        {
+            switch (rEntry.eOp)
+            {
+                case SC_EQUAL :
+                    meOp = EQUAL;
+                    break;
+                case SC_LESS_EQUAL :
+                    meOp = LESS_EQUAL;
+                    break;
+                case SC_GREATER_EQUAL :
+                    meOp = GREATER_EQUAL;
+                    break;
+                default:
+                    meOp = UNKNOWN;
+                    DBG_ERRORFILE( "ScLookupCache::QueryCriteria not prepared for this ScQueryOp");
+            }
+            if (rEntry.bQueryByString)
+                setString( rEntry.pStr);
+            else
+                setDouble( rEntry.nVal);
+        }
+        QueryCriteria( const QueryCriteria & r ) :
+            mfVal( r.mfVal),
+            mbAlloc( false),
+            mbString( false),
+            meOp( r.meOp)
+        {
+            if (r.mbString && r.mpStr)
+            {
+                mpStr = new String( *r.mpStr);
+                mbAlloc = mbString = true;
+            }
+        }
+        ~QueryCriteria()
+        {
+            deleteString();
+        }
+
+        QueryOp getQueryOp() const { return meOp; }
+
+        void setDouble( double fVal )
+        {
+            deleteString();
+            mbAlloc = mbString = false;
+            mfVal = fVal;
+        }
+
+        void setString( const String * pStr )
+        {
+            deleteString();
+            mbAlloc = false;
+            mbString = true;
+            mpStr = pStr;
+        }
+
+        void setString( const String & rStr )
+        {
+            deleteString();
+            mbAlloc = mbString = true;
+            mpStr = new String( rStr);
+        }
+
+        bool operator==( const QueryCriteria & r ) const
+        {
+            return meOp == r.meOp && mbString == r.mbString &&
+                (mbString ? (*mpStr == *r.mpStr) : (mfVal == r.mfVal));
+        }
+
+    };
+
+    /// MUST be new'd because Notify() deletes.
+                            ScLookupCache( ScDocument * pDoc, const ScRange & rRange );
+    virtual                 ~ScLookupCache();
+    /// Remove from document structure and delete (!) cache on modify hint.
+    virtual void            Notify( SvtBroadcaster & rBC, const SfxHint &  rHint );
+
+    /// @returns document address in o_rAddress if Result==FOUND
+            Result          lookup( ScAddress & o_rResultAddress,
+                                    const QueryCriteria & rCriteria,
+                                    const ScAddress & rQueryAddress ) const;
+
+    /** Insert query and result.
+        @param bAvailable
+            Pass FALSE if the search didn't deliver a result. A subsequent
+            lookup() then will return Result::NOT_AVAILABLE.
+        @returns successful insertion.
+      */
+            bool            insert( const ScAddress & rResultAddress,
+                                    const QueryCriteria & rCriteria,
+                                    const ScAddress & rQueryAddress,
+                                    const bool bAvailable );
+
+    inline  const ScRange&  getRange() const { return maRange; }
+
+    struct Hash
+    {
+        size_t operator()( const ScRange & rRange ) const
+        {
+            // Lookups are performed on the first column.
+            return rRange.hashStartColumn();
+        }
+    };
+
+private:
+
+    struct QueryKey
+    {
+        SCROW           mnRow;
+        SCTAB           mnTab;
+        QueryOp         meOp : 2;
+
+        QueryKey( const ScAddress & rAddress, const QueryOp eOp ) :
+            mnRow( rAddress.Row()),
+            mnTab( rAddress.Tab()),
+            meOp( eOp)
+        {
+        }
+
+        bool operator==( const QueryKey & r ) const
+        {
+            return mnRow == r.mnRow && mnTab == r.mnTab && meOp == r.meOp && meOp != UNKNOWN;
+        }
+
+        struct Hash
+        {
+            size_t operator()( const QueryKey & r ) const
+            {
+                return (static_cast<size_t>(r.mnTab) << 24) ^
+                    (static_cast<size_t>(r.meOp) << 22) ^
+                    static_cast<size_t>(r.mnRow);
+            }
+        };
+    };
+
+    struct QueryCriteriaAndResult
+    {
+        QueryCriteria   maCriteria;
+        ScAddress       maAddress;
+
+        QueryCriteriaAndResult( const QueryCriteria & rCriteria, const ScAddress & rAddress ) :
+            maCriteria( rCriteria),
+            maAddress( rAddress)
+        {
+        }
+        ~QueryCriteriaAndResult()
+        {
+        }
+    };
+
+    typedef ::std::hash_map< QueryKey, QueryCriteriaAndResult, QueryKey::Hash, ::std::equal_to< QueryKey > > QueryMap;
+    QueryMap        maQueryMap;
+    ScRange         maRange;
+    ScDocument *    mpDoc;
+
+    // prevent usage
+    ScLookupCache( const ScLookupCache & );
+    ScLookupCache & operator=( const ScLookupCache & );
+
+};
+
+
+typedef ::std::hash_map< ScRange, ScLookupCache*, ScLookupCache::Hash, ::std::equal_to< ScRange > > ScLookupCacheMap;
+
+#endif
Index: sc/inc/sc.hrc
===================================================================
RCS file: /cvs/sc/sc/inc/sc.hrc,v
retrieving revision 1.54
retrieving revision 1.55
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.54 -r1.55
--- sc/inc/sc.hrc	6 Jul 2007 12:30:48 -0000	1.54
+++ sc/inc/sc.hrc	21 Sep 2007 09:22:29 -0000	1.55
@@ -1287,6 +1287,7 @@
 
 #define SCSTR_DPFUNCLISTBOX         (STR_START + 92)
 #define STR_PRINT_NOTHING           (STR_START + 93)
+#define SCSTR_ALLFILTER             (STR_START + 94)
 
 // Items
 
Index: sc/inc/table.hxx
===================================================================
RCS file: /cvs/sc/sc/inc/table.hxx,v
retrieving revision 1.31
retrieving revision 1.32
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.31 -r1.32
--- sc/inc/table.hxx	25 Jan 2007 11:03:58 -0000	1.31
+++ sc/inc/table.hxx	21 Sep 2007 09:22:40 -0000	1.32
@@ -609,6 +609,7 @@
 	BOOL		CreateQueryParam(SCCOL nCol1, SCROW nRow1, SCCOL nCol2, SCROW nRow2, ScQueryParam& rQueryParam);
 
 	void		GetFilterEntries(SCCOL nCol, SCROW nRow1, SCROW nRow2, TypedStrCollection& rStrings);
+    void        GetFilteredFilterEntries( SCCOL nCol, SCROW nRow1, SCROW nRow2, const ScQueryParam& rParam, TypedStrCollection& rStrings );
 	BOOL		GetDataEntries(SCCOL nCol, SCROW nRow, TypedStrCollection& rStrings, BOOL bLimit);
 
 	BOOL		HasColHeader( SCCOL nStartCol, SCROW nStartRow, SCCOL nEndCol, SCROW nEndRow );
Index: sc/source/core/data/bcaslot.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/bcaslot.cxx,v
retrieving revision 1.8
retrieving revision 1.9
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.8 -r1.9
--- sc/source/core/data/bcaslot.cxx	3 Jul 2007 15:47:12 -0000	1.8
+++ sc/source/core/data/bcaslot.cxx	27 Sep 2007 13:51:58 -0000	1.9
@@ -280,7 +280,11 @@
         {
             ScBroadcastArea* pArea = *aIter;
             if (!pArea->DecRef())
+            {
+                if (pBASM->IsInBulkBroadcast())
+                    pBASM->RemoveBulkArea( pArea);
                 delete pArea;
+            }
             ScBroadcastAreas::iterator aDel( aIter);
             ++aIter;
             aBroadcastAreaTbl.erase( aDel);
@@ -337,6 +341,8 @@
             {
                 aBroadcastAreaTbl.erase( aDel);
                 pArea->DecRef();
+                if (pBASM->IsInBulkBroadcast())
+                    pBASM->RemoveBulkArea( pArea);
                 pArea->SetInUpdateChain( TRUE );
                 ScBroadcastArea* pUC = pBASM->GetEOUpdateChain();
                 if ( pUC )
@@ -701,3 +707,9 @@
 {
     return aBulkBroadcastAreas.insert( pArea ).second;
 }
+
+
+size_t ScBroadcastAreaSlotMachine::RemoveBulkArea( const ScBroadcastArea* pArea )
+{
+    return aBulkBroadcastAreas.erase( pArea );
+}
Index: sc/source/core/data/column.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/column.cxx,v
retrieving revision 1.22
retrieving revision 1.24
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.22 -r1.24
--- sc/source/core/data/column.cxx	27 Feb 2007 12:00:13 -0000	1.22
+++ sc/source/core/data/column.cxx	27 Sep 2007 13:52:11 -0000	1.24
@@ -688,7 +688,7 @@
 #endif
 }
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ( "", off )
 #endif
 
@@ -781,7 +781,7 @@
 	return bFound;
 }
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ( "", on )
 #endif
 
@@ -1226,7 +1226,7 @@
 		BOOL bTest = TRUE;
 		if (pItems)
 			for (SCSIZE i=0; (i<nCount) && bTest; i++)
-				bTest = ((pItems[i].nRow < nStartRow) && (pItems[i].nRow > nEndRow))
+				bTest = (pItems[i].nRow < nStartRow) || (pItems[i].nRow > nEndRow)
 						|| !CellVisible(pItems[i].pCell);
 
 		//	AttrArray testet nur zusammengefasste
Index: sc/source/core/data/documen2.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/documen2.cxx,v
retrieving revision 1.66
retrieving revision 1.67
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.66 -r1.67
--- sc/source/core/data/documen2.cxx	3 Aug 2007 13:06:51 -0000	1.66
+++ sc/source/core/data/documen2.cxx	27 Sep 2007 13:52:23 -0000	1.67
@@ -287,6 +287,19 @@
 #include "unoreflist.hxx"
 #include "listenercalls.hxx"
 #include "recursionhelper.hxx"
+#include "lookupcache.hxx"
+
+// pImpl because including lookupcache.hxx in document.hxx isn't wanted, and
+// dtor is convenient.
+struct ScLookupCacheMapImpl
+{
+    ScLookupCacheMap aCacheMap;
+    ~ScLookupCacheMapImpl()
+    {
+        for (ScLookupCacheMap::iterator it( aCacheMap.begin()); it != aCacheMap.end(); ++it)
+            delete (*it).second;
+    }
+};
 
 // STATIC DATA -----------------------------------------------------------
 
@@ -327,6 +340,7 @@
         pLoadedSymbolStringCellList( NULL ),
         pRecursionHelper( NULL ),
         pAutoNameCache( NULL ),
+        pLookupCacheMapImpl( NULL ),
         nUnoObjectId( 0 ),
         nRangeOverflowType( 0 ),
 		aCurTextWidthCalcPos(MAXCOL,0,0),
@@ -528,6 +542,7 @@
 	ScAddInListener::RemoveDocument( this );
 	delete pChartListenerCollection;	// vor pBASM wg. evtl. Listener!
 	pChartListenerCollection = NULL;
+    DELETEZ( pLookupCacheMapImpl);  // before pBASM because of listeners
 	// BroadcastAreas vor allen Zellen zerstoeren um unnoetige
 	// Einzel-EndListenings der Formelzellen zu vermeiden
 	delete pBASM;		// BroadcastAreaSlotMachine
@@ -1961,3 +1976,48 @@
 {
     return new ScRecursionHelper;
 }
+
+//	----------------------------------------------------------------------------
+
+ScLookupCache & ScDocument::GetLookupCache( const ScRange & rRange )
+{
+    ScLookupCache* pCache = 0;
+    if (!pLookupCacheMapImpl)
+        pLookupCacheMapImpl = new ScLookupCacheMapImpl;
+    ScLookupCacheMap::iterator it( pLookupCacheMapImpl->aCacheMap.find( rRange));
+    if (it == pLookupCacheMapImpl->aCacheMap.end())
+    {
+        pCache = new ScLookupCache( this, rRange);
+        AddLookupCache( *pCache);
+    }
+    else
+        pCache = (*it).second;
+    return *pCache;
+}
+
+void ScDocument::AddLookupCache( ScLookupCache & rCache )
+{
+    if (!pLookupCacheMapImpl->aCacheMap.insert( ::std::pair< const ScRange,
+                ScLookupCache*>( rCache.getRange(), &rCache)).second)
+    {
+        DBG_ERRORFILE( "ScDocument::AddLookupCache: couldn't add to hash map");
+    }
+    else
+        StartListeningArea( rCache.getRange(), &rCache);
+}
+
+void ScDocument::RemoveLookupCache( ScLookupCache & rCache )
+{
+    ScLookupCacheMap::iterator it( pLookupCacheMapImpl->aCacheMap.find(
+                rCache.getRange()));
+    if (it == pLookupCacheMapImpl->aCacheMap.end())
+    {
+        DBG_ERRORFILE( "ScDocument::RemoveLookupCache: range not found in hash map");
+    }
+    else
+    {
+        ScLookupCache* pCache = (*it).second;
+        pLookupCacheMapImpl->aCacheMap.erase( it);
+        EndListeningArea( pCache->getRange(), &rCache);
+    }
+}
Index: sc/source/core/data/documen3.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/documen3.cxx,v
retrieving revision 1.37
retrieving revision 1.38
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.37 -r1.38
--- sc/source/core/data/documen3.cxx	3 Aug 2007 13:07:05 -0000	1.37
+++ sc/source/core/data/documen3.cxx	21 Sep 2007 09:22:54 -0000	1.38
@@ -1337,7 +1337,7 @@
 //	GetFilterEntries - Eintraege fuer AutoFilter-Listbox
 //
 
-BOOL ScDocument::GetFilterEntries( SCCOL nCol, SCROW nRow, SCTAB nTab, TypedStrCollection& rStrings )
+BOOL ScDocument::GetFilterEntries( SCCOL nCol, SCROW nRow, SCTAB nTab, TypedStrCollection& rStrings, bool bFilter )
 {
 	if ( ValidTab(nTab) && pTab[nTab] && pDBCollection )
 	{
@@ -1357,7 +1357,30 @@
 			pDBData->GetQueryParam( aParam );
 			rStrings.SetCaseSensitive( aParam.bCaseSens );
 
+            // return all filter entries, if a filter condition is connected with a boolean OR
+            if ( bFilter )
+            {
+                SCSIZE nEntryCount = aParam.GetEntryCount();
+                for ( SCSIZE i = 0; i < nEntryCount && aParam.GetEntry(i).bDoQuery; ++i )
+                {
+                    ScQueryEntry& rEntry = aParam.GetEntry(i);
+                    if ( rEntry.eConnect != SC_AND )
+                    {
+                        bFilter = false;
+                        break;
+                    }
+                }
+            }
+
+            if ( bFilter )
+            {
+                pTab[nTab]->GetFilteredFilterEntries( nCol, nStartRow, nEndRow, aParam, rStrings );
+            }
+            else
+            {
 			pTab[nTab]->GetFilterEntries( nCol, nStartRow, nEndRow, rStrings );
+            }
+
 			return TRUE;
 		}
 	}
Index: sc/source/core/data/documen5.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/documen5.cxx,v
retrieving revision 1.28
retrieving revision 1.29
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.28 -r1.29
--- sc/source/core/data/documen5.cxx	3 Aug 2007 13:07:18 -0000	1.28
+++ sc/source/core/data/documen5.cxx	6 Sep 2007 14:18:08 -0000	1.29
@@ -45,7 +45,7 @@
 #include <com/sun/star/embed/XEmbeddedObject.hpp>
 
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize("",off)
 #pragma optimize("q",off) // p-code off
 #endif
Index: sc/source/core/data/document.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/document.cxx,v
retrieving revision 1.79
retrieving revision 1.80
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.79 -r1.80
--- sc/source/core/data/document.cxx	17 Jul 2007 13:32:52 -0000	1.79
+++ sc/source/core/data/document.cxx	27 Sep 2007 13:52:38 -0000	1.80
@@ -2335,7 +2335,7 @@
 	BOOL bOldAutoCalc = GetAutoCalc();
 	bAutoCalc = FALSE;		// keine Mehrfachberechnung
     {   // scope for bulk broadcast
-        ScBulkBroadcast aBulkBroadcast( pBASM);
+        ScBulkBroadcast aBulkBroadcast( GetBASM());
         for (SCTAB i=0; i<=MAXTAB; i++)
             if (pTab[i]) pTab[i]->SetDirty();
     }
@@ -2355,7 +2355,7 @@
 	BOOL bOldAutoCalc = GetAutoCalc();
 	bAutoCalc = FALSE;		// keine Mehrfachberechnung
     {   // scope for bulk broadcast
-        ScBulkBroadcast aBulkBroadcast( pBASM);
+        ScBulkBroadcast aBulkBroadcast( GetBASM());
         SCTAB nTab2 = rRange.aEnd.Tab();
         for (SCTAB i=rRange.aStart.Tab(); i<=nTab2; i++)
             if (pTab[i]) pTab[i]->SetDirty( rRange );
Index: sc/source/core/data/dpgroup.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/dpgroup.cxx,v
retrieving revision 1.7
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.7 dpgroup.cxx
--- sc/source/core/data/dpgroup.cxx	27 Feb 2007 12:03:31 -0000	1.7
+++ sc/source/core/data/dpgroup.cxx	5 Oct 2007 04:13:54 -0000
@@ -51,6 +51,7 @@
 #include "collect.hxx"
 #include "global.hxx"
 #include "document.hxx"
+#include "dpcachetable.hxx"
 
 #ifndef _COM_SUN_STAR_SHEET_DATAPILOTFIELDGROUPBY_HPP_
 #include <com/sun/star/sheet/DataPilotFieldGroupBy.hpp>
Index: sc/source/core/data/dpobject.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/dpobject.cxx,v
retrieving revision 1.21
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.21 dpobject.cxx
--- sc/source/core/data/dpobject.cxx	27 Jun 2007 13:43:19 -0000	1.21
+++ sc/source/core/data/dpobject.cxx	5 Oct 2007 04:13:54 -0000
@@ -73,7 +73,10 @@
 #include <tools/debug.hxx>
 #include <svtools/zforlist.hxx>		// IsNumberFormat
 
+#include <vector>
+
 using namespace com::sun::star;
+using ::std::vector;
 
 // -----------------------------------------------------------------------
 
@@ -601,6 +604,19 @@
 		r.SetSheetDesc( *pSheetDesc );
 }
 
+void ScDPObject::GetDrillDownData(const ScAddress& rPos, ScDPCacheTable& rTableData)
+{
+    CreateOutput();
+
+    vector<ScDPCacheTable::Filter> aFilters;
+    if ( !pOutput->GetDataFieldPositionData(aFilters, rPos) )
+        return;
+
+    ScDPSource* pSource = static_cast<ScDPSource*>(xSource.get());
+    ScDPTableData* pData = pSource->GetData();
+    pData->GetDrillDownData(aFilters, rTableData);
+}
+
 BOOL ScDPObject::IsDimNameInUse( const String& rName ) const
 {
 	if ( xSource.is() )
Index: sc/source/core/data/dpoutput.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/dpoutput.cxx,v
retrieving revision 1.15
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.15 dpoutput.cxx
--- sc/source/core/data/dpoutput.cxx	27 Jun 2007 13:43:33 -0000	1.15
+++ sc/source/core/data/dpoutput.cxx	5 Oct 2007 04:13:55 -0000
@@ -48,6 +48,8 @@
 #include <unotools/transliterationwrapper.hxx>
 
 #include "dpoutput.hxx"
+#include "dptabsrc.hxx"
+#include "dpcachetable.hxx"
 #include "document.hxx"
 #include "patattr.hxx"
 #include "docpool.hxx"
@@ -73,7 +75,10 @@
 #include <com/sun/star/sheet/GeneralFunction.hpp>
 #include <com/sun/star/container/XNamed.hpp>
 
+#include <vector>
+
 using namespace com::sun::star;
+using ::std::vector;
 
 // -----------------------------------------------------------------------
 
@@ -995,6 +1000,72 @@
 	}
 }
 
+bool ScDPOutput::GetDataFieldPositionData(vector<ScDPCacheTable::Filter>& rFilters, const ScAddress& rPos)
+{
+    SCCOL nCol = rPos.Col();
+    SCROW nRow = rPos.Row();
+    SCTAB nTab = rPos.Tab();
+    if ( nTab != aStartPos.Tab() )
+        return false;                                     // wrong sheet
+
+    CalcSizes();
+
+    // test for data area.
+    if (nCol < nDataStartCol || nCol > nTabEndCol || nRow < nDataStartRow || nRow > nTabEndRow)
+    {
+        // Cell is outside the data field area.
+        return false;
+    }
+
+    ScDPSource* pSource = static_cast<ScDPSource*>(xSource.get());
+    ScDPTableData* pData = pSource->GetData();
+
+    // column fields
+    for (SCCOL nColField = 0; nColField < nColFieldCount; ++nColField)
+    {
+        ScDPCacheTable::Filter aFilter;
+        aFilter.mnFieldIndex = pData->GetFieldIndex(pColFields[nColField].aCaption);
+
+        const uno::Sequence<sheet::MemberResult> rSequence = pColFields[nColField].aResult;
+        long nThisColCount = rSequence.getLength();
+        const sheet::MemberResult* pArray = rSequence.getConstArray();
+
+        DBG_ASSERT(nDataStartCol + nThisColCount - 1 == nTabEndCol, "ScDPOutput::GetDataFieldCellData: error in geometric assumption");
+
+        long nItem = nCol - nDataStartCol;
+                //	get origin of "continue" fields
+        while ( nItem > 0 && (pArray[nItem].Flags & sheet::MemberResultFlags::CONTINUE) )
+            --nItem;
+
+        aFilter.mnMatchStrId = ScDPCacheTable::getStringId(pArray[nItem].Name);
+        if (pArray[nItem].Name.getLength() > 0 && !pArray[nItem].Name.equalsAscii("Total"))
+            rFilters.push_back(aFilter);
+    }
+
+    // row fields
+    for (SCROW nRowField = 0; nRowField < nRowFieldCount; ++nRowField)
+    {
+        ScDPCacheTable::Filter aFilter;
+        aFilter.mnFieldIndex = pData->GetFieldIndex(pRowFields[nRowField].aCaption);
+
+        const uno::Sequence<sheet::MemberResult> rSequence = pRowFields[nRowField].aResult;
+        long nThisRowCount = rSequence.getLength();
+        const sheet::MemberResult* pArray = rSequence.getConstArray();
+
+        DBG_ASSERT(nDataStartRow + nThisRowCount - 1 == nTabEndRow, "ScDPOutput::GetDataFieldCellData: error in geometric assumption");
+
+        long nItem = nRow - nDataStartRow;
+			//	get origin of "continue" fields
+        while ( nItem > 0 && (pArray[nItem].Flags & sheet::MemberResultFlags::CONTINUE) )
+            --nItem;
+
+        aFilter.mnMatchStrId = ScDPCacheTable::getStringId(pArray[nItem].Name);
+        if (pArray[nItem].Name.getLength() > 0 && !pArray[nItem].Name.equalsAscii("Total"))
+            rFilters.push_back(aFilter);
+    }
+    return true;
+}
+
 //
 //  helper functions for ScDPOutput::GetPivotData
 //
Index: sc/source/core/data/dpsdbtab.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/dpsdbtab.cxx,v
retrieving revision 1.12
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.12 dpsdbtab.cxx
--- sc/source/core/data/dpsdbtab.cxx	27 Feb 2007 12:04:37 -0000	1.12
+++ sc/source/core/data/dpsdbtab.cxx	5 Oct 2007 04:13:55 -0000
@@ -36,7 +36,7 @@
 // MARKER(update_precomp.py): autogen include statement, do not remove
 #include "precompiled_sc.hxx"
 
-
+#include <stdio.h>
 
 // INCLUDE --------------------------------------------------------------
 
@@ -60,8 +60,12 @@
 #include "collect.hxx"
 #include "global.hxx"
 #include "globstr.hrc"
+#include "dpcachetable.hxx"
 
+using ::std::vector;
 using namespace com::sun::star;
+using ::com::sun::star::uno::Reference;
+using ::com::sun::star::uno::UNO_QUERY;
 
 #define SC_SERVICE_ROWSET			"com.sun.star.sdb.RowSet"
 #define SC_SERVICE_INTHANDLER		"com.sun.star.sdb.InteractionHandler"
@@ -87,6 +91,8 @@
 	sal_Int32*			pTypes;
 	SvNumberFormatter*	pFormatter;
 
+    ScDPCacheTable      aCacheTable;
+
 	ScDatabaseDPData_Impl() {}
 };
 
@@ -96,6 +102,7 @@
 	::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory > xSMgr,
 	const ScImportSourceDesc& rImport )
 {
+    fprintf(stdout, "ScDatabaseDPData::ScDatabaseDPData: ctor\n");fflush(stdout);
 	pImpl = new ScDatabaseDPData_Impl;
 	pImpl->xServiceManager = xSMgr;
 	pImpl->aDesc = rImport;
@@ -148,6 +155,7 @@
 
 BOOL ScDatabaseDPData::OpenDatabase()
 {
+    fprintf(stdout, "ScDatabaseDPData::OpenDatabase: --begins\n");fflush(stdout);
 	sal_Int32 nSdbType = -1;
 	switch ( pImpl->aDesc.nType )
 	{
@@ -500,6 +508,25 @@
 	//!	disable flags
 }
 
+void ScDatabaseDPData::CreateCacheTable(const vector<ScDPDimension*>& rPageDims)
+{
+    // Get null date.
+    if (!pImpl->pFormatter)
+        pImpl->pFormatter = new SvNumberFormatter(pImpl->xServiceManager, ScGlobal::eLnge);
+
+    pImpl->aCacheTable.fillTable(pImpl->xRowSet, *pImpl->pFormatter->GetNullDate(), rPageDims);
+}
+
+void ScDatabaseDPData::GetDrillDownData(const vector<ScDPCacheTable::Filter>& rFilters, ScDPCacheTable& rData)
+{
+    pImpl->aCacheTable.filterTable(rFilters, rData);
+}
+
+sal_Int32 ScDatabaseDPData::GetFieldIndex(const String& rStr)
+{
+    return pImpl->aCacheTable.getFieldIndex(rStr);
+}
+
 void ScDatabaseDPData::ResetIterator()
 {
 	try
@@ -541,6 +568,7 @@
 			for (i=0; i<rParam.nColCount; i++)
 			{
 				long nDim = rParam.pCols[i];
+//              fprintf(stdout, "ScDatabaseDPData::GetNextRow: col dimension = %ld\n", nDim);fflush(stdout);
 				if ( getIsDataLayoutDimension(nDim) )
 					rParam.pColData[i].SetString( String::CreateFromAscii(RTL_CONSTASCII_STRINGPARAM("x")) );
 				else
@@ -550,6 +578,7 @@
 			for (i=0; i<rParam.nRowCount; i++)
 			{
 				long nDim = rParam.pRows[i];
+//              fprintf(stdout, "ScDatabaseDPData::GetNextRow: row dimension = %ld\n", nDim);fflush(stdout);
 				if ( getIsDataLayoutDimension(nDim) )
 					rParam.pRowData[i].SetString( String::CreateFromAscii(RTL_CONSTASCII_STRINGPARAM("x")) );
 				else
@@ -559,6 +588,7 @@
 			for (i=0; i<rParam.nPageCount; i++)
 			{
 				long nDim = rParam.pPages[i];
+//              fprintf(stdout, "ScDatabaseDPData::GetNextRow: page dimension = %ld\n", nDim);fflush(stdout);
 				if ( getIsDataLayoutDimension(nDim) )
 					rParam.pPageData[i].SetString( String::CreateFromAscii(RTL_CONSTASCII_STRINGPARAM("x")) );
 				else
@@ -570,6 +600,7 @@
 				//!	merge this with lcl_FillItemData, distinguish all SC_VALTYPE_... types
 
 				long nDim = rParam.pDats[i];
+//              fprintf(stdout, "ScDatabaseDPData::GetNextRow: data dimension = %ld\n", nDim);fflush(stdout);
 
 				double fVal = 0.0;
 				BYTE nType = SC_VALTYPE_EMPTY;
Index: sc/source/core/data/dpshttab.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/dpshttab.cxx,v
retrieving revision 1.9
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.9 dpshttab.cxx
--- sc/source/core/data/dpshttab.cxx	27 Feb 2007 12:04:49 -0000	1.9
+++ sc/source/core/data/dpshttab.cxx	5 Oct 2007 04:13:55 -0000
@@ -47,8 +47,13 @@
 #include "document.hxx"
 #include "collect.hxx"
 #include "cell.hxx"
+#include "dpcachetable.hxx"
 #include "globstr.hrc"
 
+#include <vector>
+
+using ::std::vector;
+
 // -----------------------------------------------------------------------
 
 class ScSheetDPData_Impl
@@ -57,21 +62,27 @@
 	ScDocument*		pDoc;
 	ScRange			aRange;
 	ScQueryParam	aQuery;
-	long			nColCount;
+    BOOL*           pSpecial;           // to flag special handling of query parameters in ValidQuery.
+	long			nColCount;          // number of columns
 	BOOL			bIgnoreEmptyRows;
 	BOOL			bRepeatIfEmpty;
-	TypedStrCollection**	ppStrings;
+	TypedStrCollection**	ppStrings;  // array of unique column entries.
 	BOOL*			pDateDim;
 	SCROW			nNextRow;		// for iterator, within range
 
-	ScSheetDPData_Impl() {}
+    ScDPCacheTable  aCacheTable;
+
+	ScSheetDPData_Impl() :
+        pSpecial(NULL)
+    {
+    }
 };
 
 // -----------------------------------------------------------------------
 
 ScSheetDPData::ScSheetDPData( ScDocument* pD, const ScSheetSourceDesc& rDesc )
-    : pSpecial(NULL)
 {
+    fprintf(stdout, "ScSheetDPData::ScSheetDPData: ctor\n");fflush(stdout);
 	long nCount = rDesc.aSourceRange.aEnd.Col() - rDesc.aSourceRange.aStart.Col() + 1;
 	pImpl = new ScSheetDPData_Impl;
 	pImpl->pDoc = pD;
@@ -88,18 +99,18 @@
 	pImpl->nNextRow = pImpl->aRange.aStart.Row() + 1;
 
     SCSIZE nEntryCount(pImpl->aQuery.GetEntryCount());
-    pSpecial = new BOOL[nEntryCount];
+    pImpl->pSpecial = new BOOL[nEntryCount];
     for (SCSIZE j = 0; j < nEntryCount; ++j )
     {
         ScQueryEntry& rEntry = pImpl->aQuery.GetEntry(j);
         if (rEntry.bDoQuery)
         {
-            pSpecial[j] = false;
+            pImpl->pSpecial[j] = false;
             if (!rEntry.bQueryByString)
             {
                 if (*rEntry.pStr == EMPTY_STRING &&
                    ((rEntry.nVal == SC_EMPTYFIELDS) || (rEntry.nVal == SC_NONEMPTYFIELDS)))
-                    pSpecial[j] = true;
+                    pImpl->pSpecial[j] = true;
             }
             else
             {
@@ -118,8 +129,8 @@
 		delete pImpl->ppStrings[i];
 	delete[] pImpl->ppStrings;
 	delete[] pImpl->pDateDim;
+    delete[] pImpl->pSpecial;
 	delete pImpl;
-    delete[] pSpecial;
 }
 
 void ScSheetDPData::DisposeData()
@@ -172,7 +183,7 @@
 				//	ignore empty member (if it's not the first row)
 			}
 			else if ( lcl_HasQuery(pImpl->aQuery) &&
-						!pImpl->pDoc->ValidQuery( nRow, nDocTab, pImpl->aQuery, pSpecial ) )
+						!pImpl->pDoc->ValidQuery( nRow, nDocTab, pImpl->aQuery, pImpl->pSpecial ) )
 			{
 				//	this row is filtered out
 			}
@@ -295,8 +306,30 @@
 	pImpl->bRepeatIfEmpty   = bRepeatIfEmpty;
 }
 
+void ScSheetDPData::CreateCacheTable(const vector<ScDPDimension*>& rPageDims)
+{
+    // Scan and store the data from the source range.
+    pImpl->aCacheTable.fillTable(pImpl->pDoc, pImpl->aRange, pImpl->aQuery, pImpl->pSpecial, rPageDims);
+}
+
+void ScSheetDPData::GetDrillDownData(const vector<ScDPCacheTable::Filter>& rFilters,
+                                     ScDPCacheTable& rData)
+{
+    sal_Int32 nRowSize = pImpl->aCacheTable.getRowSize();
+    if (!nRowSize)
+        return;
+
+    pImpl->aCacheTable.filterTable(rFilters, rData);
+}
+
+sal_Int32 ScSheetDPData::GetFieldIndex(const String& rStr)
+{
+    return pImpl->aCacheTable.getFieldIndex(rStr);
+}
+
 void ScSheetDPData::ResetIterator()
 {
+    // skipping the header row?
 	pImpl->nNextRow = pImpl->aRange.aStart.Row() + 1;
 }
 
@@ -348,7 +381,7 @@
 		}
 
 		bFilteredOut = ( lcl_HasQuery(pImpl->aQuery) && 
-				!pImpl->pDoc->ValidQuery( pImpl->nNextRow, nDocTab, pImpl->aQuery, pSpecial ) );
+				!pImpl->pDoc->ValidQuery( pImpl->nNextRow, nDocTab, pImpl->aQuery, pImpl->pSpecial ) );
 		if ( bFilteredOut )
 		{
 			++pImpl->nNextRow;
@@ -360,6 +393,7 @@
 
 	//!	use more efficient iterators
 
+    // Populate column field information.
 	for (i=0; i<rParam.nColCount; i++)
 	{
 		long nDim = rParam.pCols[i];
@@ -371,6 +405,7 @@
 									pImpl->bRepeatIfEmpty, nFirstDataRow );
 	}
 
+    // Populate row field information.
 	for (i=0; i<rParam.nRowCount; i++)
 	{
 		long nDim = rParam.pRows[i];
@@ -382,6 +417,7 @@
 									pImpl->bRepeatIfEmpty, nFirstDataRow );
 	}
 
+    // Populate page dimension information from the sheet.
 	for (i=0; i<rParam.nPageCount; i++)
 	{
 		long nDim = rParam.pPages[i];
@@ -393,6 +429,7 @@
 									pImpl->bRepeatIfEmpty, nFirstDataRow );
 	}
 
+    // Populate data dimension information from the row.
 	for (i=0; i<rParam.nDatCount; i++)
 	{
 		long nDim = rParam.pDats[i];
Index: sc/source/core/data/dptabdat.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/dptabdat.cxx,v
retrieving revision 1.12
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.12 dptabdat.cxx
--- sc/source/core/data/dptabdat.cxx	27 Feb 2007 12:05:02 -0000	1.12
+++ sc/source/core/data/dptabdat.cxx	5 Oct 2007 04:13:55 -0000
@@ -53,6 +53,8 @@
 #include "dptabdat.hxx"
 #include "global.hxx"
 
+using ::std::vector;
+
 // -----------------------------------------------------------------------
 
 BOOL ScDPItemData::IsCaseInsEqual( const ScDPItemData& r ) const
@@ -193,6 +195,20 @@
 	return nRet;
 }
 
+void ScDPTableData::CreateCacheTable(const vector<ScDPDimension*>& rPageDims)
+{
+    fprintf(stdout, "ScDPTableData::CreateCacheTable: \n");fflush(stdout);
+}
+
+void ScDPTableData::GetDrillDownData(const vector<ScDPCacheTable::Filter>& rFilters, ScDPCacheTable& rTableData)
+{
+}
+
+sal_Int32 ScDPTableData::GetFieldIndex(const String& rStr)
+{
+    return -1;
+}
+
 UINT32 ScDPTableData::GetNumberFormat(long)
 {
 	return 0;			// default format
Index: sc/source/core/data/dptabsrc.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/dptabsrc.cxx,v
retrieving revision 1.19
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.19 dptabsrc.cxx
--- sc/source/core/data/dptabsrc.cxx	5 Mar 2007 14:40:18 -0000	1.19
+++ sc/source/core/data/dptabsrc.cxx	5 Oct 2007 04:13:55 -0000
@@ -41,6 +41,7 @@
 // INCLUDE ---------------------------------------------------------------
 
 #include <algorithm>
+#include <vector>
 
 #include <tools/debug.hxx>
 #include <rtl/math.hxx>
@@ -72,6 +73,7 @@
 #endif
 
 using namespace com::sun::star;
+using ::std::vector;
 
 // -----------------------------------------------------------------------
 
@@ -275,6 +277,9 @@
 		case sheet::DataPilotFieldOrientation_PAGE:
 			nPageDims[nPageDimCount++] = nColumn;
 			break;
+		default:
+			DBG_ERROR( "ScDPSource::SetOrientation: unexpected orientation" );
+			break;
 	}
 }
 
@@ -795,6 +800,15 @@
 						nDataDimCount,   nDataSrcCols,   aValues );
 
 			pData->ResetIterator();
+            vector<ScDPDimension*> aPageDims;
+            aPageDims.reserve(nPageDimCount);
+            for (i = 0; i < nPageDimCount; ++i)
+            {
+                ScDPDimension* pDim = GetDimensionsObject()->getByIndex( nPageDims[i] );
+                if (pDim)
+                    aPageDims.push_back(pDim);
+            }
+            pData->CreateCacheTable(aPageDims);
 			while ( pData->GetNextRow( aIterPar ) )
 			{
 				// test page fields ----------------------------
@@ -918,6 +932,9 @@
 			pDimIndex = nPageDims;
 			nDimCount = nPageDimCount;
 			break;
+		default:
+			DBG_ERROR( "ScDPSource::FillLevelList: unexpected orientation" );
+			break;
 	}
 	if (!pDimIndex)
 	{
@@ -1710,6 +1727,9 @@
 		case SC_DAPI_HIERARCHY_WEEK:
 			aRet = String::CreateFromAscii(RTL_CONSTASCII_STRINGPARAM("Week"));
 			break;	//! name ???????
+		default:
+			DBG_ERROR( "ScDPHierarchy::getName: unexpected hierarchy" );
+			break;
 	}
 	return aRet;
 }
@@ -2005,6 +2025,9 @@
 				case SC_DAPI_LEVEL_DAY:
 					aRet = String::CreateFromAscii(RTL_CONSTASCII_STRINGPARAM("Day"));
 					break;
+				default:
+					DBG_ERROR( "ScDPLevel::getName: unexpected level" );
+					break;
 			}
 		}
 		else if ( nHier == SC_DAPI_HIERARCHY_WEEK )
@@ -2020,6 +2043,9 @@
 				case SC_DAPI_LEVEL_WEEKDAY:
 					aRet = String::CreateFromAscii(RTL_CONSTASCII_STRINGPARAM("Weekday"));
 					break;
+				default:
+					DBG_ERROR( "ScDPLevel::getName: unexpected level" );
+					break;
 			}
 		}
 		if (aRet.Len())
@@ -2194,6 +2220,9 @@
 				case SC_DAPI_LEVEL_QUARTER:	nMbrCount = 4;	break;
 				case SC_DAPI_LEVEL_MONTH:	nMbrCount = 12;	break;
 				case SC_DAPI_LEVEL_DAY:		nMbrCount = 31;	break;
+				default:
+					DBG_ERROR( "ScDPMembers::ScDPMembers: unexpected level" );
+					break;
 			}
 		}
 		else if ( nHier == SC_DAPI_HIERARCHY_WEEK )
@@ -2203,6 +2232,9 @@
 				case SC_DAPI_LEVEL_YEAR:	nMbrCount = 1;	break;		//! get years from source
 				case SC_DAPI_LEVEL_WEEK:	nMbrCount = 53;	break;
 				case SC_DAPI_LEVEL_WEEKDAY:	nMbrCount = 7;	break;
+				default:
+					DBG_ERROR( "ScDPMembers::ScDPMembers: unexpected level" );
+					break;
 			}
 		}
 	}
Index: sc/source/core/data/makefile.mk
===================================================================
RCS file: /cvs/sc/sc/source/core/data/makefile.mk,v
retrieving revision 1.21
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.21 makefile.mk
--- sc/source/core/data/makefile.mk	27 Feb 2007 12:06:42 -0000	1.21
+++ sc/source/core/data/makefile.mk	5 Oct 2007 04:13:55 -0000
@@ -77,6 +77,7 @@
 	$(SLO)$/documen8.obj \
 	$(SLO)$/documen9.obj \
 	$(SLO)$/document.obj \
+        $(SLO)$/dpcachetable.obj \
         $(SLO)$/dpdimsave.obj \
         $(SLO)$/dpgroup.obj \
 	$(SLO)$/dpobject.obj \
@@ -131,6 +132,7 @@
 	$(SLO)$/documen5.obj \
 	$(SLO)$/documen6.obj \
 	$(SLO)$/documen9.obj \
+        $(SLO)$/dpcachetable.obj \
 	$(SLO)$/dpsdbtab.obj \
 	$(SLO)$/dpobject.obj \
 	$(SLO)$/dpoutput.obj \
Index: sc/source/core/data/pivot.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/pivot.cxx,v
retrieving revision 1.8
retrieving revision 1.9
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.8 -r1.9
--- sc/source/core/data/pivot.cxx	27 Feb 2007 12:07:43 -0000	1.8
+++ sc/source/core/data/pivot.cxx	6 Sep 2007 14:18:22 -0000	1.9
@@ -40,7 +40,7 @@
 
 // -----------------------------------------------------------------------
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize("",off)
 #pragma optimize("q",off) // p-code off
 #endif
Index: sc/source/core/data/pivot2.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/pivot2.cxx,v
retrieving revision 1.11
retrieving revision 1.12
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.11 -r1.12
--- sc/source/core/data/pivot2.cxx	10 May 2007 16:45:17 -0000	1.11
+++ sc/source/core/data/pivot2.cxx	6 Sep 2007 14:18:36 -0000	1.12
@@ -38,7 +38,7 @@
 
 
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize("",off)
 #pragma optimize("q",off) // p-code off
 #endif
Index: sc/source/core/data/table2.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/table2.cxx,v
retrieving revision 1.37
retrieving revision 1.38
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.37 -r1.38
--- sc/source/core/data/table2.cxx	27 Feb 2007 12:09:28 -0000	1.37
+++ sc/source/core/data/table2.cxx	27 Sep 2007 13:53:05 -0000	1.38
@@ -68,6 +68,7 @@
 #include "conditio.hxx"
 #include "chartlis.hxx"
 #include "fillinfo.hxx"
+#include "bcaslot.hxx"
 #include "globstr.hrc"
 
 // STATIC DATA -----------------------------------------------------------
@@ -167,8 +168,11 @@
 					*pUndoOutline = TRUE;
 	}
 
+    {   // scope for bulk broadcast
+        ScBulkBroadcast aBulkBroadcast( pDocument->GetBASM());
 	for (SCCOL j=nStartCol; j<=nEndCol; j++)
 		aCol[j].DeleteRow( nStartRow, nSize );
+    }
 	if( !--nRecalcLvl )
 		SetDrawPageSize();
 }
@@ -260,8 +264,11 @@
 	}
 
 
+    {   // scope for bulk broadcast
+        ScBulkBroadcast aBulkBroadcast( pDocument->GetBASM());
 	for (SCSIZE i = 0; i < nSize; i++)
 		aCol[nStartCol + i].DeleteArea(nStartRow, nEndRow, IDF_ALL);
+    }
 
 	if ((nStartRow == 0) && (nEndRow == MAXROW))
 	{
@@ -287,8 +294,11 @@
 	{
 //		nRecalcLvl++;
 
+        {   // scope for bulk broadcast
+            ScBulkBroadcast aBulkBroadcast( pDocument->GetBASM());
 		for (SCCOL i = nCol1; i <= nCol2; i++)
 			aCol[i].DeleteArea(nRow1, nRow2, nDelFlag);
+        }
 
 			//
 			// Zellschutz auf geschuetzter Tabelle nicht setzen
@@ -310,8 +320,11 @@
 
 void ScTable::DeleteSelection( USHORT nDelFlag, const ScMarkData& rMark )
 {
+    {   // scope for bulk broadcast
+        ScBulkBroadcast aBulkBroadcast( pDocument->GetBASM());
 	for (SCCOL i=0; i<=MAXCOL; i++)
 		aCol[i].DeleteSelection( nDelFlag, rMark );
+    }
 
 		//
 		// Zellschutz auf geschuetzter Tabelle nicht setzen
Index: sc/source/core/data/table3.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/table3.cxx,v
retrieving revision 1.28
retrieving revision 1.29
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.28 -r1.29
--- sc/source/core/data/table3.cxx	5 Mar 2007 14:40:30 -0000	1.28
+++ sc/source/core/data/table3.cxx	21 Sep 2007 09:23:09 -0000	1.29
@@ -1293,51 +1293,30 @@
 		DestroySortCollator();
 }
 
-SCSIZE ScTable::Query(ScQueryParam& rParamOrg, BOOL bKeepSub)
+static void lcl_PrepareQuery( ScDocument* pDoc, ScTable* pTab, ScQueryParam& rParam, BOOL* pSpecial )
 {
-	StrCollection	aStrCollection;
-	StrData*		pStrData = NULL;
-
-	BOOL	bStarted = FALSE;
-	BOOL	bOldResult = TRUE;
-	SCROW	nOldStart = 0;
-	SCROW	nOldEnd = 0;
-
-	SCSIZE nCount	= 0;
-	SCROW nOutRow	= 0;
-	SCROW nHeader	= rParamOrg.bHasHeader ? 1 : 0;
-	SCSIZE i		= 0;
-
-	SCSIZE nEntryCount = rParamOrg.GetEntryCount();
+    bool bTopTen = false;
+    SCSIZE nEntryCount = rParam.GetEntryCount();
 
-	BOOL* pSpecial = new BOOL[nEntryCount];
-	for (i=0; i<nEntryCount; i++)
+    for ( SCSIZE i = 0; i < nEntryCount; ++i )
+    {
 		pSpecial[i] = FALSE;
-
-	/*
-	 * Dialog liefert die ausgezeichneten Feldwerte "leer"/"nicht leer"
-	 * als Konstanten in nVal in Verbindung mit dem Schalter
-	 * bQueryByString auf FALSE.
-	 */
-
-	BOOL bTopTen = FALSE;
-	for ( i=0; (i<nEntryCount) && (rParamOrg.GetEntry(i).bDoQuery); i++ )
+        ScQueryEntry& rEntry = rParam.GetEntry(i);
+        if ( rEntry.bDoQuery )
 	{
-		ScQueryEntry& rEntry = rParamOrg.GetEntry(i);
-
 		if ( rEntry.bQueryByString )
 		{
 			sal_uInt32 nIndex = 0;
-			rEntry.bQueryByString = !(pDocument->GetFormatTable()->
-				IsNumberFormat( *rEntry.pStr, nIndex, rEntry.nVal ));
+                rEntry.bQueryByString = !( pDoc->GetFormatTable()->
+                    IsNumberFormat( *rEntry.pStr, nIndex, rEntry.nVal ) );
 		}
 		else
 		{
-			double nTemp = rEntry.nVal;
-			if (nTemp == SC_EMPTYFIELDS || nTemp == SC_NONEMPTYFIELDS)
+                // #58736# call from UNO or second call from autofilter
+                if ( rEntry.nVal == SC_EMPTYFIELDS || rEntry.nVal == SC_NONEMPTYFIELDS )
+                {
 				pSpecial[i] = TRUE;
-			// #58736# QueryParam mit !bQueryByString kann per Uno oder zweitem
-			// Aufruf per AutoFilter kommen - hier keine Assertion mehr
+                }
 		}
 		if ( !bTopTen )
 		{
@@ -1347,40 +1326,58 @@
 				case SC_BOTVAL:
 				case SC_TOPPERC:
 				case SC_BOTPERC:
-					bTopTen = TRUE;
+                    {
+                        bTopTen = true;
+                    }
                     break;
                 default:
                 {
-                    // added to avoid warnings
                 }
 			}
 		}
 	}
-	ScQueryParam* pTopTenParam;
+    }
+
 	if ( bTopTen )
-	{	// original Param erhalten und Kopie anpassen
-		pTopTenParam = new ScQueryParam( rParamOrg );
-		TopTenQuery( *pTopTenParam );
+    {
+        pTab->TopTenQuery( rParam );
 	}
-	else
-		pTopTenParam = NULL;
-	ScQueryParam& rParam = (bTopTen ? *pTopTenParam : rParamOrg);
+}
+
+SCSIZE ScTable::Query(ScQueryParam& rParamOrg, BOOL bKeepSub)
+{
+    ScQueryParam    aParam( rParamOrg );
+	StrCollection	aStrCollection;
+	StrData*		pStrData = NULL;
+
+	BOOL	bStarted = FALSE;
+	BOOL	bOldResult = TRUE;
+	SCROW	nOldStart = 0;
+	SCROW	nOldEnd = 0;
+
+	SCSIZE nCount	= 0;
+	SCROW nOutRow	= 0;
+    SCROW nHeader   = aParam.bHasHeader ? 1 : 0;
 
-	if (!rParam.bInplace)
+    SCSIZE nEntryCount = aParam.GetEntryCount();
+	BOOL* pSpecial = new BOOL[nEntryCount];
+    lcl_PrepareQuery( pDocument, this, aParam, pSpecial );
+
+	if (!aParam.bInplace)
 	{
-		nOutRow = rParam.nDestRow + nHeader;
+		nOutRow = aParam.nDestRow + nHeader;
 		if (nHeader > 0)
-			CopyData( rParam.nCol1, rParam.nRow1, rParam.nCol2, rParam.nRow1,
-							rParam.nDestCol, rParam.nDestRow, rParam.nDestTab );
+			CopyData( aParam.nCol1, aParam.nRow1, aParam.nCol2, aParam.nRow1,
+							aParam.nDestCol, aParam.nDestRow, aParam.nDestTab );
 	}
 
-	for (SCROW j=rParam.nRow1 + nHeader; j<=rParam.nRow2; j++)
+	for (SCROW j=aParam.nRow1 + nHeader; j<=aParam.nRow2; j++)
 	{
 		BOOL bResult;									// Filterergebnis
-		BOOL bValid = ValidQuery(j, rParam, pSpecial);
+		BOOL bValid = ValidQuery(j, aParam, pSpecial);
 		if (!bValid && bKeepSub)						// Subtotals stehenlassen
 		{
-			for (SCCOL nCol=rParam.nCol1; nCol<=rParam.nCol2 && !bValid; nCol++)
+			for (SCCOL nCol=aParam.nCol1; nCol<=aParam.nCol2 && !bValid; nCol++)
 			{
 				ScBaseCell* pCell;
 				pCell = GetCell( nCol, j );
@@ -1393,12 +1390,12 @@
 		}
 		if (bValid)
 		{
-			if (rParam.bDuplicate)
+			if (aParam.bDuplicate)
 				bResult = TRUE;
 			else
 			{
 				String aStr;
-				for (SCCOL k=rParam.nCol1; k <= rParam.nCol2; k++)
+				for (SCCOL k=aParam.nCol1; k <= aParam.nCol2; k++)
 				{
 					String aCellStr;
 					GetString(k, j, aCellStr);
@@ -1422,7 +1419,7 @@
 		else
 			bResult = FALSE;
 
-		if (rParam.bInplace)
+		if (aParam.bInplace)
 		{
 			if (bResult == bOldResult && bStarted)
 				nOldEnd = j;
@@ -1439,7 +1436,7 @@
 		{
 			if (bResult)
 			{
-				CopyData( rParam.nCol1,j, rParam.nCol2,j, rParam.nDestCol,nOutRow,rParam.nDestTab );
+				CopyData( aParam.nCol1,j, aParam.nCol2,j, aParam.nDestCol,nOutRow,aParam.nDestTab );
 				++nOutRow;
 			}
 		}
@@ -1447,12 +1444,10 @@
 			++nCount;
 	}
 
-	if (rParam.bInplace && bStarted)
+	if (aParam.bInplace && bStarted)
 		DBShowRows(nOldStart,nOldEnd, bOldResult);
 
 	delete[] pSpecial;
-	if ( pTopTenParam )
-		delete pTopTenParam;
 
 	return nCount;
 }
@@ -1702,6 +1697,36 @@
 	aCol[nCol].GetFilterEntries( nRow1, nRow2, rStrings );
 }
 
+void ScTable::GetFilteredFilterEntries( SCCOL nCol, SCROW nRow1, SCROW nRow2, const ScQueryParam& rParam, TypedStrCollection& rStrings )
+{
+    // remove the entry for this column from the query parameter
+    ScQueryParam aParam( rParam );
+    SCSIZE nEntryCount = aParam.GetEntryCount();
+    for ( SCSIZE i = 0; i < nEntryCount && aParam.GetEntry(i).bDoQuery; ++i )
+    {
+        ScQueryEntry& rEntry = aParam.GetEntry(i);
+        if ( rEntry.nField == nCol )
+        {
+            aParam.DeleteQuery(i);
+            break;
+        }
+    }
+    nEntryCount = aParam.GetEntryCount();
+
+    BOOL* pSpecial = new BOOL[nEntryCount];
+    lcl_PrepareQuery( pDocument, this, aParam, pSpecial );
+
+    for ( SCROW j = nRow1; j <= nRow2; ++j )
+    {
+        if ( ValidQuery( j, aParam, pSpecial ) )
+        {
+            aCol[nCol].GetFilterEntries( j, j, rStrings );
+        }
+    }
+
+    delete[] pSpecial;
+}
+
 BOOL ScTable::GetDataEntries(SCCOL nCol, SCROW nRow, TypedStrCollection& rStrings, BOOL bLimit)
 {
 	return aCol[nCol].GetDataEntries( nRow, rStrings, bLimit );
Index: sc/source/core/data/table4.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/data/table4.cxx,v
retrieving revision 1.20
retrieving revision 1.21
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.20 -r1.21
--- sc/source/core/data/table4.cxx	10 May 2007 16:45:54 -0000	1.20
+++ sc/source/core/data/table4.cxx	6 Sep 2007 14:18:51 -0000	1.21
@@ -40,7 +40,7 @@
 
 
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize("",off)
 										// sonst Absturz Win beim Fuellen
 #endif
Index: sc/source/core/inc/bcaslot.hxx
===================================================================
RCS file: /cvs/sc/sc/source/core/inc/bcaslot.hxx,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.5 -r1.6
--- sc/source/core/inc/bcaslot.hxx	3 Jul 2007 15:48:24 -0000	1.5
+++ sc/source/core/inc/bcaslot.hxx	27 Sep 2007 13:53:19 -0000	1.6
@@ -202,6 +202,8 @@
     void                EnterBulkBroadcast();
     void                LeaveBulkBroadcast();
     bool                InsertBulkArea( const ScBroadcastArea* p );
+    /// @return: how many removed
+    size_t              RemoveBulkArea( const ScBroadcastArea* p );
 	inline ScBroadcastArea* GetUpdateChain() const { return pUpdateChain; }
 	inline void SetUpdateChain( ScBroadcastArea* p ) { pUpdateChain = p; }
 	inline ScBroadcastArea* GetEOUpdateChain() const { return pEOUpdateChain; }
Index: sc/source/core/inc/cellkeytranslator.hxx
===================================================================
RCS file: /cvs/sc/sc/source/core/inc/cellkeytranslator.hxx,v
retrieving revision 1.2.50.1
retrieving revision 1.2
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.2.50.1 -r1.2
--- sc/source/core/inc/cellkeytranslator.hxx	6 Sep 2007 16:23:30 -0000	1.2.50.1
+++ sc/source/core/inc/cellkeytranslator.hxx	24 Jul 2007 09:22:56 -0000	1.2
@@ -38,7 +38,6 @@
 
 #include "global.hxx"
 #include "opcode.hxx"
-#include "unotools/transliterationwrapper.hxx"
 #include <hash_map>
 #include <list>
 #include <memory>
@@ -93,7 +92,6 @@
 
     static ::std::auto_ptr<ScCellKeywordTranslator> spInstance;
     ScCellKeywordHashMap maStringNameMap;
-    ::utl::TransliterationWrapper maTransWrapper;
 };
 
 #endif
Index: sc/source/core/inc/interpre.hxx
===================================================================
RCS file: /cvs/sc/sc/source/core/inc/interpre.hxx,v
retrieving revision 1.30
retrieving revision 1.31
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.30 -r1.31
--- sc/source/core/inc/interpre.hxx	6 Jul 2007 12:34:04 -0000	1.30
+++ sc/source/core/inc/interpre.hxx	27 Sep 2007 13:53:32 -0000	1.31
@@ -299,6 +299,10 @@
 static inline BOOL CheckStringResultLen( String& rResult, const String& rAdd );
 // Set error according to rVal, and set rVal to 0.0 if there was an error.
 inline void TreatDoubleError( double& rVal );
+// Lookup using ScLookupCache, @returns TRUE if found and result address
+bool LookupQueryWithCache( ScAddress & o_rResultPos,
+        const ScQueryParam & rParam ) const;
+
 //---------------------------------Funktionen in interpr1.cxx---------
 void ScIfJump();
 void ScChoseJump();
Index: sc/source/core/tool/cellkeytranslator.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/tool/cellkeytranslator.cxx,v
retrieving revision 1.2.50.5
retrieving revision 1.2
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.2.50.5 -r1.2
--- sc/source/core/tool/cellkeytranslator.cxx	6 Sep 2007 17:50:33 -0000	1.2.50.5
+++ sc/source/core/tool/cellkeytranslator.cxx	24 Jul 2007 09:23:06 -0000	1.2
@@ -34,21 +34,13 @@
  ************************************************************************/
 
 #include "cellkeytranslator.hxx"
-#include "comphelper/processfactory.hxx"
-#include "i18npool/mslangid.hxx"
-#include "i18npool/lang.h"
 #include "rtl/ustring.hxx"
 
-#include <com/sun/star/i18n/TransliterationModules.hpp>
-
 using ::com::sun::star::lang::Locale;
-using ::com::sun::star::uno::Sequence;
 using ::std::list;
 using ::std::hash_map;
 using ::rtl::OUString;
 
-using namespace ::com::sun::star;
-
 enum LocaleMatch
 {
     LOCALE_MATCH_NONE = 0,
@@ -85,8 +77,7 @@
 
 ::std::auto_ptr<ScCellKeywordTranslator> ScCellKeywordTranslator::spInstance(NULL);
 
-static void lclMatchKeyword(String& rName, const ScCellKeywordHashMap& aMap, 
-                            OpCode eOpCode = ocNone, const Locale* pLocale = NULL)
+static void lclMatchKeyword(String& rName, const ScCellKeywordHashMap& aMap, OpCode eOpCode = ocNone, const Locale* pLocale = NULL)
 {
     ScCellKeywordHashMap::const_iterator itrEnd = aMap.end();
     ScCellKeywordHashMap::const_iterator itr = aMap.find(rName);
@@ -171,15 +162,10 @@
     if ( !spInstance.get() )
         spInstance.reset( new ScCellKeywordTranslator );
 
-    LanguageType eLang = pLocale ? MsLangId::convertLocaleToLanguageWithFallback(*pLocale) : LANGUAGE_SYSTEM;
-    Sequence<sal_Int32> aOffsets;
-    rName = spInstance->maTransWrapper.transliterate(rName, eLang, 0, rName.Len(), &aOffsets);
     lclMatchKeyword(rName, spInstance->maStringNameMap, eOpCode, pLocale);
 }
 
-ScCellKeywordTranslator::ScCellKeywordTranslator() :
-    maTransWrapper( ::comphelper::getProcessServiceFactory(), 
-                    i18n::TransliterationModules_LOWERCASE_UPPERCASE )
+ScCellKeywordTranslator::ScCellKeywordTranslator()
 {
     init();
 }
@@ -190,26 +176,42 @@
 
 struct TransItem
 {
-    const sal_Unicode*  from;
+    const sal_Char* from;
     const sal_Char*     to;
     OpCode              func;
 };
 
 void ScCellKeywordTranslator::init()
 {
-    ::osl::MutexGuard aGuard( ::osl::Mutex::getGlobalMutex() );
+    // 1. Keywords must be all uppercase.
+    // 2. Mapping must be <localized string name> to <English string name>.
 
-    // The file below has been autogenerated by sc/workben/celltrans/parse.py.
-    // To add new locale keywords, edit sc/workben/celltrans/keywords_utf16.txt
-    // and re-run the parse.py script.
-    // 
-    // All keywords must be uppercase, and the mapping must be from the 
-    // localized keyword to the English keyword.
-    // 
-    // Make sure that the original keyword file (keywords_utf16.txt) is 
-    // encoded in UCS-2/UTF-16!
+    // French language locale.
 
-    #include "cellkeywords.inl"
+    static const Locale aFr(OUString::createFromAscii("fr"), OUString(), OUString());
+    static const TransItem pFr[] = 
+    {
+        // CELL
+        {"ADRESSE",    "ADDRESS",   ocCell},
+        {"COLONNE",    "COL",       ocCell},
+        {"CONTENU",    "CONTENTS",  ocCell},
+        {"COULEUR",    "COLOR",     ocCell},
+        {"LARGEUR",    "WIDTH",     ocCell},
+        {"LIGNE",      "ROW",       ocCell},
+        {"NOMFICHIER", "FILENAME",  ocCell},
+        {"PREFIXE",    "PREFIX",    ocCell},
+        {"PROTEGE",    "PROTECT",   ocCell},
+
+        // INFO
+        {"NBFICH",     "NUMFILE",   ocInfo},
+        {"RECALCUL",   "RECALC",    ocInfo},
+        {"SYSTEXPL",   "SYSTEM",    ocInfo},
+        {"VERSION",    "RELEASE",   ocInfo},
+        {"VERSIONSE",  "OSVERSION", ocInfo},
+
+        {NULL, NULL, ocNone}
+    };
+    addToMap(pFr, aFr);
 }
 
 void ScCellKeywordTranslator::addToMap(const String& rKey, const sal_Char* pName, const Locale& rLocale, OpCode eOpCode)
@@ -233,5 +235,5 @@
 void ScCellKeywordTranslator::addToMap(const TransItem* pItems, const Locale& rLocale)
 {
     for (sal_uInt16 i = 0; pItems[i].from != NULL; ++i)
-        addToMap(String(pItems[i].from), pItems[i].to, rLocale, pItems[i].func);
+        addToMap(String::CreateFromAscii(pItems[i].from), pItems[i].to, rLocale, pItems[i].func);
 }
Index: sc/source/core/tool/cellkeywords.inl
===================================================================
RCS file: sc/source/core/tool/cellkeywords.inl
diff -N sc/source/core/tool/cellkeywords.inl
--- sc/source/core/tool/cellkeywords.inl	3 Oct 2007 20:15:32 -0000	1.1.2.3
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,126 +0,0 @@
-// This file has been automatically generated.  Do not hand-edit this!
-
-// ---------------------------------------------------------------------------
-// French language locale (automatically generated)
-// ---------------------------------------------------------------------------
-static const Locale aFr(OUString::createFromAscii("fr"), OUString(), OUString());
-
-// pre instantiations of localized function names
-static const sal_Unicode cell_address_fr[] = {
-    0x0041, 0x0044, 0x0052, 0x0045, 0x0053, 0x0053, 0x0045, 0x0000};
-static const sal_Unicode cell_col_fr[] = {
-    0x0043, 0x004F, 0x004C, 0x004F, 0x004E, 0x004E, 0x0045, 0x0000};
-static const sal_Unicode cell_contents_fr[] = {
-    0x0043, 0x004F, 0x004E, 0x0054, 0x0045, 0x004E, 0x0055, 0x0000};
-static const sal_Unicode cell_color_fr[] = {
-    0x0043, 0x004F, 0x0055, 0x004C, 0x0045, 0x0055, 0x0052, 0x0000};
-static const sal_Unicode cell_width_fr[] = {
-    0x004C, 0x0041, 0x0052, 0x0047, 0x0045, 0x0055, 0x0052, 0x0000};
-static const sal_Unicode cell_row_fr[] = {
-    0x004C, 0x0049, 0x0047, 0x004E, 0x0045, 0x0000};
-static const sal_Unicode cell_filename_fr[] = {
-    0x004E, 0x004F, 0x004D, 0x0046, 0x0049, 0x0043, 0x0048, 0x0049, 0x0045, 0x0052, 0x0000};
-static const sal_Unicode cell_prefix_fr[] = {
-    0x0050, 0x0052, 0x0045, 0x0046, 0x0049, 0x0058, 0x0045, 0x0000};
-static const sal_Unicode cell_protect_fr[] = {
-    0x0050, 0x0052, 0x004F, 0x0054, 0x0045, 0x0047, 0x0045, 0x0000};
-static const sal_Unicode info_numfile_fr[] = {
-    0x004E, 0x0042, 0x0046, 0x0049, 0x0043, 0x0048, 0x0000};
-static const sal_Unicode info_recalc_fr[] = {
-    0x0052, 0x0045, 0x0043, 0x0041, 0x004C, 0x0043, 0x0055, 0x004C, 0x0000};
-static const sal_Unicode info_system_fr[] = {
-    0x0053, 0x0059, 0x0053, 0x0054, 0x0045, 0x0058, 0x0050, 0x004C, 0x0000};
-static const sal_Unicode info_release_fr[] = {
-    0x0056, 0x0045, 0x0052, 0x0053, 0x0049, 0x004F, 0x004E, 0x0000};
-static const sal_Unicode info_osversion_fr[] = {
-    0x0056, 0x0045, 0x0052, 0x0053, 0x0049, 0x004F, 0x004E, 0x0053, 0x0045, 0x0000};
-
-static const TransItem pFr[] = {
-    {cell_address_fr, "ADDRESS", ocCell},
-    {cell_col_fr, "COL", ocCell},
-    {cell_contents_fr, "CONTENTS", ocCell},
-    {cell_color_fr, "COLOR", ocCell},
-    {cell_width_fr, "WIDTH", ocCell},
-    {cell_row_fr, "ROW", ocCell},
-    {cell_filename_fr, "FILENAME", ocCell},
-    {cell_prefix_fr, "PREFIX", ocCell},
-    {cell_protect_fr, "PROTECT", ocCell},
-    {info_numfile_fr, "NUMFILE", ocInfo},
-    {info_recalc_fr, "RECALC", ocInfo},
-    {info_system_fr, "SYSTEM", ocInfo},
-    {info_release_fr, "RELEASE", ocInfo},
-    {info_osversion_fr, "OSVERSION", ocInfo},
-    {NULL, NULL, ocNone}
-};
-
-addToMap(pFr, aFr);
-
-// ---------------------------------------------------------------------------
-// Hungarian language locale (automatically generated)
-// ---------------------------------------------------------------------------
-static const Locale aHu(OUString::createFromAscii("hu"), OUString(), OUString());
-
-// pre instantiations of localized function names
-static const sal_Unicode cell_address_hu[] = {
-    0x0043, 0x00CD, 0x004D, 0x0000};
-static const sal_Unicode cell_col_hu[] = {
-    0x004F, 0x0053, 0x005A, 0x004C, 0x004F, 0x0050, 0x0000};
-static const sal_Unicode cell_color_hu[] = {
-    0x0053, 0x005A, 0x00CD, 0x004E, 0x0000};
-static const sal_Unicode cell_contents_hu[] = {
-    0x0054, 0x0041, 0x0052, 0x0054, 0x0041, 0x004C, 0x004F, 0x004D, 0x0000};
-static const sal_Unicode cell_width_hu[] = {
-    0x0053, 0x005A, 0x00C9, 0x004C, 0x0045, 0x0053, 0x0000};
-static const sal_Unicode cell_row_hu[] = {
-    0x0053, 0x004F, 0x0052, 0x0000};
-static const sal_Unicode cell_filename_hu[] = {
-    0x0046, 0x0049, 0x004C, 0x0045, 0x004E, 0x00C9, 0x0056, 0x0000};
-static const sal_Unicode cell_prefix_hu[] = {
-    0x0050, 0x0052, 0x0045, 0x0046, 0x0049, 0x0058, 0x0000};
-static const sal_Unicode cell_protect_hu[] = {
-    0x0056, 0x00C9, 0x0044, 0x0045, 0x0054, 0x0054, 0x0000};
-static const sal_Unicode cell_coord_hu[] = {
-    0x004B, 0x004F, 0x004F, 0x0052, 0x0044, 0x0000};
-static const sal_Unicode cell_format_hu[] = {
-    0x0046, 0x004F, 0x0052, 0x004D, 0x0041, 0x0000};
-static const sal_Unicode cell_parentheses_hu[] = {
-    0x005A, 0x00C1, 0x0052, 0x00D3, 0x004A, 0x0045, 0x004C, 0x0045, 0x004B, 0x0000};
-static const sal_Unicode cell_sheet_hu[] = {
-    0x004C, 0x0041, 0x0050, 0x0000};
-static const sal_Unicode cell_type_hu[] = {
-    0x0054, 0x00CD, 0x0050, 0x0055, 0x0053, 0x0000};
-static const sal_Unicode info_numfile_hu[] = {
-    0x0046, 0x0049, 0x004C, 0x0045, 0x0053, 0x005A, 0x00C1, 0x004D, 0x0000};
-static const sal_Unicode info_recalc_hu[] = {
-    0x0053, 0x005A, 0x00C1, 0x004D, 0x004F, 0x004C, 0x00C1, 0x0053, 0x0000};
-static const sal_Unicode info_system_hu[] = {
-    0x0052, 0x0045, 0x004E, 0x0044, 0x0053, 0x005A, 0x0045, 0x0052, 0x0000};
-static const sal_Unicode info_release_hu[] = {
-    0x0056, 0x0045, 0x0052, 0x005A, 0x0049, 0x00D3, 0x0000};
-static const sal_Unicode info_osversion_hu[] = {
-    0x004F, 0x0050, 0x0052, 0x0045, 0x004E, 0x0044, 0x0053, 0x005A, 0x0045, 0x0052, 0x0000};
-
-static const TransItem pHu[] = {
-    {cell_address_hu, "ADDRESS", ocCell},
-    {cell_col_hu, "COL", ocCell},
-    {cell_color_hu, "COLOR", ocCell},
-    {cell_contents_hu, "CONTENTS", ocCell},
-    {cell_width_hu, "WIDTH", ocCell},
-    {cell_row_hu, "ROW", ocCell},
-    {cell_filename_hu, "FILENAME", ocCell},
-    {cell_prefix_hu, "PREFIX", ocCell},
-    {cell_protect_hu, "PROTECT", ocCell},
-    {cell_coord_hu, "COORD", ocCell},
-    {cell_format_hu, "FORMAT", ocCell},
-    {cell_parentheses_hu, "PARENTHESES", ocCell},
-    {cell_sheet_hu, "SHEET", ocCell},
-    {cell_type_hu, "TYPE", ocCell},
-    {info_numfile_hu, "NUMFILE", ocInfo},
-    {info_recalc_hu, "RECALC", ocInfo},
-    {info_system_hu, "SYSTEM", ocInfo},
-    {info_release_hu, "RELEASE", ocInfo},
-    {info_osversion_hu, "OSVERSION", ocInfo},
-    {NULL, NULL, ocNone}
-};
-
-addToMap(pHu, aHu);
Index: sc/source/core/tool/chartarr.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/tool/chartarr.cxx,v
retrieving revision 1.22
retrieving revision 1.23
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.22 -r1.23
--- sc/source/core/tool/chartarr.cxx	22 May 2007 19:42:55 -0000	1.22
+++ sc/source/core/tool/chartarr.cxx	6 Sep 2007 14:19:06 -0000	1.23
@@ -134,7 +134,7 @@
 		&& aName == rCmp.aName;
 }
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize("",off)
 #endif
 
@@ -583,7 +583,7 @@
 	return pMemChart;
 }
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize("",on)
 #endif
 
Index: sc/source/core/tool/interpr1.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/tool/interpr1.cxx,v
retrieving revision 1.50.42.2
retrieving revision 1.51
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.50.42.2 -r1.51
--- sc/source/core/tool/interpr1.cxx	6 Sep 2007 16:23:30 -0000	1.50.42.2
+++ sc/source/core/tool/interpr1.cxx	27 Sep 2007 13:53:45 -0000	1.51
@@ -70,6 +70,7 @@
 #include "attrib.hxx"
 #include "jumpmatrix.hxx"
 #include "cellkeytranslator.hxx"
+#include "lookupcache.hxx"
 
 #define	SC_DOUBLE_MAXVALUE	1.7e307
 
@@ -1648,6 +1649,7 @@
 			String			aFuncResult;
 			ScBaseCell*		pCell = GetCell( aCellPos );
 
+			aInfoType.ToUpperAscii();
             ScCellKeywordTranslator::transKeyword(aInfoType, ScGlobal::pLocale, ocCell);
 
 // *** ADDRESS INFO ***
@@ -3848,6 +3850,7 @@
 			rParam.nCol1       = nCol1;
 			rParam.nRow1       = nRow1;
 			rParam.nCol2       = nCol2;
+			rParam.nTab        = nTab1;
             rParam.bMixedComparison = TRUE;
 
 			ScQueryEntry& rEntry = rParam.GetEntry(0);
@@ -3911,36 +3914,22 @@
 			}
 			if ( rEntry.bQueryByString )
                 rParam.bRegExp = MayBeRegExp( *rEntry.pStr, pDok );
-			SCCOLROW nDelta;
-            SCROW nR;
-            SCCOL nC;
+			SCCOLROW nDelta = 0;
             if (nCol1 == nCol2)
             {                                           // search row in column
 				rParam.nRow2 = nRow2;
 				rEntry.nField = nCol1;
-				ScQueryCellIterator aCellIter(pDok, nTab1, rParam, FALSE);
-                if (fTyp == 0.0)
-                {                                       // EQUAL
-					if (aCellIter.GetFirst())
-						nR = aCellIter.GetRow();
-					else
+                ScAddress aResultPos( nCol1, nRow1, nTab1);
+                if (!LookupQueryWithCache( aResultPos, rParam))
 					{
 						SetNA();
 						return;
 					}
-				}
-                else
-                {                                       // <= or >=
-                    if ( !aCellIter.FindEqualOrSortedLastInRange( nC, nR ) )
-                    {
-                        SetNA();
-                        return;
-                    }
-                }
-				nDelta = nR - nRow1;
+				nDelta = aResultPos.Row() - nRow1;
 			}
             else
             {                                           // search column in row
+                SCCOL nC;
                 rParam.bByRow = FALSE;
 				rParam.nRow2 = nRow1;
 				rEntry.nField = nCol1;
@@ -3959,6 +3948,7 @@
 				}
                 else
                 {                                       // <= or >=
+                    SCROW nR;
                     if ( !aCellIter.FindEqualOrSortedLastInRange( nC, nR ) )
                     {
                         SetNA();
@@ -5041,6 +5031,7 @@
 			rParam.nRow1       = nRow1;
 			rParam.nCol2       = nCol1;		// nur in der ersten Spalte suchen
 			rParam.nRow2       = nRow2;
+			rParam.nTab        = nTab1;
             rParam.bMixedComparison = TRUE;
 
 			ScQueryEntry& rEntry = rParam.GetEntry(0);
@@ -5110,6 +5101,9 @@
                 rParam.bRegExp = MayBeRegExp( *rEntry.pStr, pDok );
 			if (pMat)
 			{
+//!!!!!!!
+//! TODO: enable caching on matrix?
+//!!!!!!!
 				SCSIZE nMatCount = nR;
 				SCSIZE nDelta = SCSIZE_MAX;
 				if (rEntry.bQueryByString)
@@ -5198,25 +5192,13 @@
 			else
 			{
 				rEntry.nField = nCol1;
-                BOOL bFound = FALSE;
-                SCROW nRow = 0;
                 if ( bSorted )
                     rEntry.eOp = SC_LESS_EQUAL;
-                ScQueryCellIterator aCellIter(pDok, nTab1, rParam, FALSE);
-                if ( bSorted )
-                {
-                    SCCOL nCol;
-                    bFound = aCellIter.FindEqualOrSortedLastInRange( nCol, nRow );
-                }
-                else if ( aCellIter.GetFirst() )
-                {
-                    bFound = TRUE;
-                    nRow = aCellIter.GetRow();
-                }
-                if ( bFound )
+                ScAddress aResultPos( nCol1, nRow1, nTab1);
+                if (LookupQueryWithCache( aResultPos, rParam))
                 {
                     ScBaseCell* pCell;
-                    ScAddress aAdr( nSpIndex, nRow, nTab1 );
+                    ScAddress aAdr( nSpIndex, aResultPos.Row(), nTab1 );
                     if ( HasCellValueData( pCell = GetCell( aAdr ) ) )
                         PushDouble(GetCellValue( aAdr, pCell ));
                     else
@@ -6650,3 +6632,97 @@
 	return FALSE;
 }
 
+static bool lcl_LookupQuery( ScAddress & o_rResultPos, ScDocument * pDoc,
+        const ScQueryParam & rParam, const ScQueryEntry & rEntry )
+{
+    bool bFound = false;
+    ScQueryCellIterator aCellIter( pDoc, rParam.nTab, rParam, FALSE);
+    if (rEntry.eOp != SC_EQUAL)
+    {
+        // range lookup <= or >=
+        SCCOL nCol;
+        SCROW nRow;
+        bFound = aCellIter.FindEqualOrSortedLastInRange( nCol, nRow);
+        if (bFound)
+        {
+            o_rResultPos.SetCol( nCol);
+            o_rResultPos.SetRow( nRow);
+        }
+    }
+    else if (aCellIter.GetFirst())
+    {
+        // EQUAL
+        bFound = true;
+        o_rResultPos.SetCol( aCellIter.GetCol());
+        o_rResultPos.SetRow( aCellIter.GetRow());
+    }
+    return bFound;
+}
+
+#define erDEBUG_LOOKUPCACHE 0
+#if erDEBUG_LOOKUPCACHE
+#include <cstdio>
+using ::std::fprintf;
+using ::std::fflush;
+static struct LookupCacheDebugCounter
+{
+    unsigned long nMiss;
+    unsigned long nHit;
+    LookupCacheDebugCounter() : nMiss(0), nHit(0) {}
+    ~LookupCacheDebugCounter()
+    {
+        fprintf( stderr, "\nmiss: %lu, hit: %lu, total: %lu, hit/miss: %lu, hit/total %lu%\n",
+                nMiss, nHit, nHit+nMiss, (nMiss>0 ? nHit/nMiss : 0),
+                ((nHit+nMiss)>0 ? (100*nHit)/(nHit+nMiss) : 0));
+        fflush( stderr);
+    }
+} aLookupCacheDebugCounter;
+#endif
+
+bool ScInterpreter::LookupQueryWithCache( ScAddress & o_rResultPos,
+        const ScQueryParam & rParam ) const
+{
+    bool bFound = false;
+    const ScQueryEntry& rEntry = rParam.GetEntry(0);
+    bool bColumnsMatch = (rParam.nCol1 == rEntry.nField);
+    DBG_ASSERT( bColumnsMatch, "ScInterpreter::LookupQueryWithCache: columns don't match");
+    if (!bColumnsMatch)
+        bFound = lcl_LookupQuery( o_rResultPos, pDok, rParam, rEntry);
+    else
+    {
+        ScRange aLookupRange( rParam.nCol1, rParam.nRow1, rParam.nTab,
+                rParam.nCol2, rParam.nRow2, rParam.nTab);
+        ScLookupCache& rCache = pDok->GetLookupCache( aLookupRange);
+        ScLookupCache::QueryCriteria aCriteria( rEntry);
+        ScLookupCache::Result eCacheResult = rCache.lookup( o_rResultPos,
+                aCriteria, aPos);
+        switch (eCacheResult)
+        {
+            case ScLookupCache::NOT_CACHED :
+            case ScLookupCache::CRITERIA_DIFFERENT :
+#if erDEBUG_LOOKUPCACHE
+                ++aLookupCacheDebugCounter.nMiss;
+#if erDEBUG_LOOKUPCACHE > 1
+                fprintf( stderr, "miss %d,%d,%d\n", (int)aPos.Col(), (int)aPos.Row(), (int)aPos.Tab());
+#endif
+#endif
+                bFound = lcl_LookupQuery( o_rResultPos, pDok, rParam, rEntry);
+                if (eCacheResult == ScLookupCache::NOT_CACHED)
+                    rCache.insert( o_rResultPos, aCriteria, aPos, bFound);
+                break;
+            case ScLookupCache::FOUND :
+#if erDEBUG_LOOKUPCACHE
+                ++aLookupCacheDebugCounter.nHit;
+#if erDEBUG_LOOKUPCACHE > 1
+                fprintf( stderr, "hit  %d,%d,%d\n", (int)aPos.Col(), (int)aPos.Row(), (int)aPos.Tab());
+#endif
+#endif
+                bFound = true;
+                break;
+            case ScLookupCache::NOT_AVAILABLE :
+                ;   // nothing, bFound remains FALSE
+                break;
+        }
+    }
+    return bFound;
+}
Index: sc/source/core/tool/interpr5.cxx
===================================================================
RCS file: /cvs/sc/sc/source/core/tool/interpr5.cxx,v
retrieving revision 1.27.48.2
retrieving revision 1.27
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.27.48.2 -r1.27
--- sc/source/core/tool/interpr5.cxx	6 Sep 2007 16:23:30 -0000	1.27.48.2
+++ sc/source/core/tool/interpr5.cxx	24 Jul 2007 09:23:32 -0000	1.27
@@ -3977,7 +3977,7 @@
 {
 	if( MustHaveParamCount( GetByte(), 1 ) )
 	{
-        String aStr = GetString();
+        String aStr = String( GetString() ).ToUpperAscii();
         ScCellKeywordTranslator::transKeyword(aStr, ScGlobal::pLocale, ocInfo);
         if( aStr.EqualsAscii( "SYSTEM" ) )
             PushString( String( RTL_CONSTASCII_USTRINGPARAM( SC_INFO_OSVERSION ) ) );
Index: sc/source/core/tool/lookupcache.cxx
===================================================================
RCS file: sc/source/core/tool/lookupcache.cxx
diff -N sc/source/core/tool/lookupcache.cxx
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ sc/source/core/tool/lookupcache.cxx	27 Sep 2007 13:53:55 -0000	1.2
@@ -0,0 +1,131 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile: lookupcache.cxx,v $
+ *
+ *  $Revision: 1.2 $
+ *
+ *  last change: $Author: hr $ $Date: 2007/09/27 13:53:55 $
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *    MA  02111-1307  USA
+ *
+ ************************************************************************/
+
+#include "lookupcache.hxx"
+#include "document.hxx"
+
+#ifdef erDEBUG
+#include <cstdio>
+using ::std::fprintf;
+static long nCacheCount = 0;
+#endif
+
+
+ScLookupCache::ScLookupCache( ScDocument * pDoc, const ScRange & rRange ) :
+    maRange( rRange),
+    mpDoc( pDoc)
+{
+#ifdef erDEBUG
+    ++nCacheCount;
+    fprintf( stderr, "\nctor ScLookupCache %ld: %d, %d, %d, %d, %d, %d; buckets: %lu, size: %lu\n",
+            nCacheCount,
+            (int)getRange().aStart.Col(), (int)getRange().aStart.Row(),
+            (int)getRange().aStart.Tab(), (int)getRange().aEnd.Col(),
+            (int)getRange().aEnd.Row(), (int)getRange().aEnd.Tab(),
+            (unsigned long)maQueryMap.bucket_count(), (unsigned long)maQueryMap.size());
+#endif
+}
+
+
+ScLookupCache::~ScLookupCache()
+{
+#ifdef erDEBUG
+    fprintf( stderr, "\ndtor ScLookupCache %ld: %d, %d, %d, %d, %d, %d; buckets: %lu, size: %lu\n",
+            nCacheCount,
+            (int)getRange().aStart.Col(), (int)getRange().aStart.Row(),
+            (int)getRange().aStart.Tab(), (int)getRange().aEnd.Col(),
+            (int)getRange().aEnd.Row(), (int)getRange().aEnd.Tab(),
+            (unsigned long)maQueryMap.bucket_count(), (unsigned long)maQueryMap.size());
+    --nCacheCount;
+#endif
+}
+
+
+ScLookupCache::Result ScLookupCache::lookup( ScAddress & o_rResultAddress,
+        const QueryCriteria & rCriteria, const ScAddress & rQueryAddress ) const
+{
+    QueryMap::const_iterator it( maQueryMap.find( QueryKey( rQueryAddress,
+                    rCriteria.getQueryOp())));
+    if (it == maQueryMap.end())
+        return NOT_CACHED;
+    const QueryCriteriaAndResult& rResult = (*it).second;
+    if (!(rResult.maCriteria == rCriteria))
+        return CRITERIA_DIFFERENT;
+    if (rResult.maAddress.Row() < 0 )
+        return NOT_AVAILABLE;
+    o_rResultAddress = rResult.maAddress;
+    return FOUND;
+}
+
+
+bool ScLookupCache::insert( const ScAddress & rResultAddress,
+        const QueryCriteria & rCriteria, const ScAddress & rQueryAddress,
+        const bool bAvailable )
+{
+#ifdef erDEBUG
+    size_t nBuckets = maQueryMap.bucket_count();
+#endif
+    QueryKey aKey( rQueryAddress, rCriteria.getQueryOp());
+    QueryCriteriaAndResult aResult( rCriteria, rResultAddress);
+    if (!bAvailable)
+        aResult.maAddress.SetRow(-1);
+    bool bInserted = maQueryMap.insert( ::std::pair< const QueryKey,
+            QueryCriteriaAndResult>( aKey, aResult)).second;
+#ifdef erDEBUG
+    if (nBuckets != maQueryMap.bucket_count())
+    {
+        fprintf( stderr, "\nbuck ScLookupCache: %d, %d, %d, %d, %d, %d; buckets: %lu, size: %lu\n",
+                (int)getRange().aStart.Col(), (int)getRange().aStart.Row(),
+                (int)getRange().aStart.Tab(), (int)getRange().aEnd.Col(),
+                (int)getRange().aEnd.Row(), (int)getRange().aEnd.Tab(),
+                (unsigned long)maQueryMap.bucket_count(), (unsigned long)maQueryMap.size());
+    }
+#endif
+    return bInserted;
+}
+
+
+void ScLookupCache::Notify( SvtBroadcaster & /* rBC */ , const SfxHint &  rHint )
+{
+	if (!mpDoc->IsInDtorClear())
+	{
+		const ScHint* p = PTR_CAST( ScHint, &rHint );
+		if (p && (p->GetId() & (SC_HINT_DATACHANGED | SC_HINT_DYING)))
+		{
+            mpDoc->RemoveLookupCache( *this);
+            delete this;
+		}
+	}
+}
Index: sc/source/core/tool/makefile.mk
===================================================================
RCS file: /cvs/sc/sc/source/core/tool/makefile.mk,v
retrieving revision 1.22
retrieving revision 1.24
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.22 -r1.24
--- sc/source/core/tool/makefile.mk	3 Aug 2007 13:07:55 -0000	1.22
+++ sc/source/core/tool/makefile.mk	27 Sep 2007 13:54:07 -0000	1.24
@@ -52,7 +52,11 @@
 .INCLUDE :  $(PRJ)$/util$/makefile.pmk
 
 # Settings for the INFO() function
+.IF "$(GUI)"=="OS2"
+CDEFS += -DSC_INFO_OSVERSION="$(OS)"
+.ELSE
 CDEFS += -DSC_INFO_OSVERSION=\"$(OS)\"
+.ENDIF
 
 # --- Files --------------------------------------------------------
 
@@ -93,6 +97,7 @@
 		$(SLO)$/interpr4.obj \
 		$(SLO)$/interpr5.obj \
 		$(SLO)$/interpr6.obj \
+		$(SLO)$/lookupcache.obj \
 		$(SLO)$/navicfg.obj \
 		$(SLO)$/optutil.obj \
 		$(SLO)$/parclass.obj \
@@ -128,6 +133,7 @@
         $(SLO)$/interpr3.obj \
         $(SLO)$/interpr4.obj \
         $(SLO)$/interpr5.obj \
+		$(SLO)$/lookupcache.obj \
         $(SLO)$/prnsave.obj
 
 # [kh] POWERPC compiler problem
Index: sc/source/filter/lotus/tool.cxx
===================================================================
RCS file: /cvs/sc/sc/source/filter/lotus/tool.cxx,v
retrieving revision 1.12
retrieving revision 1.14
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.12 -r1.14
--- sc/source/filter/lotus/tool.cxx	27 Feb 2007 12:39:39 -0000	1.12
+++ sc/source/filter/lotus/tool.cxx	27 Sep 2007 13:54:21 -0000	1.14
@@ -60,7 +60,7 @@
 #include "ftools.hxx"
 #endif
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize("",off)
 #endif
 
@@ -407,8 +407,20 @@
 					//fStandard;nSt;
 					bDefault = TRUE;
 					break;
+				default:
+					//fStandard;nSt;
+					bDefault = TRUE;
+					break;
 			}
 			break;
+		default:
+			//fStandard;nL;
+			nIndex = pFormTable->GetStandardFormat(
+				NUMBERFORMAT_NUMBER, eLanguage );
+			pFormTable->GenerateFormat( aFormString, nIndex,
+				eLanguage, FALSE, FALSE, nL, 1 );
+			nIndex = 0;
+			break;
 	}
 
 	// Format in Table schieben
Index: sc/source/filter/starcalc/scflt.cxx
===================================================================
RCS file: /cvs/sc/sc/source/filter/starcalc/scflt.cxx,v
retrieving revision 1.19
retrieving revision 1.20
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.19 -r1.20
--- sc/source/filter/starcalc/scflt.cxx	10 May 2007 16:51:48 -0000	1.19
+++ sc/source/filter/starcalc/scflt.cxx	27 Sep 2007 13:54:35 -0000	1.20
@@ -813,6 +813,7 @@
 				case ffModern:		eFam = FAMILY_MODERN;		break;
 				case ffScript:		eFam = FAMILY_SCRIPT;		break;
 				case ffDecorative:	eFam = FAMILY_DECORATIVE;	break;
+				default:	eFam = FAMILY_DONTKNOW;		break;
 			}
 			aEditAttribs.Put(	SvxFontItem(
 									eFam,
@@ -1254,6 +1255,7 @@
 					case ffModern     : eFam = FAMILY_MODERN;		break;
 					case ffScript     : eFam = FAMILY_SCRIPT;		break;
 					case ffDecorative : eFam = FAMILY_DECORATIVE;	break;
+					default: eFam = FAMILY_DONTKNOW;		break;
 				}
                 rItemSet.Put( SvxFontItem( eFam, SC10TOSTRING( pPattern->LogFont.lfFaceName ), EMPTY_STRING,
                         PITCH_DONTKNOW, RTL_TEXTENCODING_DONTKNOW, ATTR_FONT ) );
@@ -1841,6 +1843,7 @@
 					case ffModern     : eFam = FAMILY_MODERN;		break;
 					case ffScript     : eFam = FAMILY_SCRIPT;		break;
 					case ffDecorative : eFam = FAMILY_DECORATIVE;	break;
+					default: eFam = FAMILY_DONTKNOW;		break;
 				}
 				ScPatternAttr aScPattern(pDoc->GetPool());
                 aScPattern.GetItemSet().Put(SvxFontItem(eFam, SC10TOSTRING( pFont->FaceName ), EMPTY_STRING,
@@ -2404,6 +2407,8 @@
 	 break;
 	case vfString :
 	 break;
+	default :
+	 break;
   }
 }
 
Index: sc/source/ui/dbgui/csvruler.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/dbgui/csvruler.cxx,v
retrieving revision 1.14
retrieving revision 1.15
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.14 -r1.15
--- sc/source/ui/dbgui/csvruler.cxx	25 Apr 2007 14:59:59 -0000	1.14
+++ sc/source/ui/dbgui/csvruler.cxx	27 Sep 2007 13:54:47 -0000	1.15
@@ -523,7 +523,7 @@
     maBackgrDev.SetFillColor();
     sal_Int32 nPos;
 
-    sal_Int32 nFirstPos = Max( GetPosFromX( 0 ) - 1L, 0L );
+    sal_Int32 nFirstPos = Max( GetPosFromX( 0 ) - (sal_Int32)(1L), (sal_Int32)(0L) );
     sal_Int32 nLastPos = GetPosFromX( GetWidth() );
     sal_Int32 nY = (maActiveRect.Top() + maActiveRect.Bottom()) / 2;
     for( nPos = nFirstPos; nPos <= nLastPos; ++nPos )
Index: sc/source/ui/docshell/dbdocfun.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/docshell/dbdocfun.cxx,v
retrieving revision 1.17
retrieving revision 1.18
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.17 -r1.18
--- sc/source/ui/docshell/dbdocfun.cxx	27 Feb 2007 13:06:21 -0000	1.17
+++ sc/source/ui/docshell/dbdocfun.cxx	27 Sep 2007 13:55:01 -0000	1.18
@@ -920,8 +920,9 @@
 	if (!bCopy)
 		pDoc->UpdatePageBreaks( nTab );
 
-	ScRange aDirtyRange( aLocalParam.nCol1, aLocalParam.nRow1, nDestTab,
-		aLocalParam.nCol2, aLocalParam.nRow2, nDestTab );
+    // #i23299# because of Subtotal functions, the whole rows must be set dirty
+	ScRange aDirtyRange( 0 , aLocalParam.nRow1, nDestTab,
+		MAXCOL, aLocalParam.nRow2, nDestTab );
 	pDoc->SetDirty( aDirtyRange );
 
     if ( bRecord )
Index: sc/source/ui/docshell/tablink.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/docshell/tablink.cxx,v
retrieving revision 1.29
retrieving revision 1.30
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.29 -r1.30
--- sc/source/ui/docshell/tablink.cxx	6 Jul 2007 12:42:13 -0000	1.29
+++ sc/source/ui/docshell/tablink.cxx	6 Sep 2007 14:19:33 -0000	1.30
@@ -35,7 +35,7 @@
 
 // MARKER(update_precomp.py): autogen include statement, do not remove
 #include "precompiled_sc.hxx"
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize("",off)
 #endif
 
Index: sc/source/ui/drawfunc/fuins1.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/drawfunc/fuins1.cxx,v
retrieving revision 1.10
retrieving revision 1.11
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.10 -r1.11
--- sc/source/ui/drawfunc/fuins1.cxx	27 Feb 2007 13:12:28 -0000	1.10
+++ sc/source/ui/drawfunc/fuins1.cxx	6 Sep 2007 14:19:47 -0000	1.11
@@ -258,7 +258,7 @@
 |*
 \************************************************************************/
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize("",off)
 #endif
 
Index: sc/source/ui/drawfunc/fusel.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/drawfunc/fusel.cxx,v
retrieving revision 1.21
retrieving revision 1.22
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.21 -r1.22
--- sc/source/ui/drawfunc/fusel.cxx	6 Jul 2007 12:43:18 -0000	1.21
+++ sc/source/ui/drawfunc/fusel.cxx	6 Sep 2007 14:20:01 -0000	1.22
@@ -73,7 +73,7 @@
 
 // -----------------------------------------------------------------------
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ( "", off )
 #endif
 
@@ -620,7 +620,7 @@
 }
 
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ( "", on )
 #endif
 
Index: sc/source/ui/inc/gridwin.hxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/inc/gridwin.hxx,v
retrieving revision 1.26
retrieving revision 1.27
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.26 -r1.27
--- sc/source/ui/inc/gridwin.hxx	21 Aug 2007 12:27:08 -0000	1.26
+++ sc/source/ui/inc/gridwin.hxx	21 Sep 2007 09:23:22 -0000	1.27
@@ -44,8 +44,6 @@
 #include <svtools/transfer.hxx>
 #endif
 
-#undef AUTOFILTER_POPUP
-
 #ifndef SC_VIEWUTIL_HXX
 #include "viewutil.hxx"
 #endif
@@ -161,9 +159,6 @@
 {
 	//	ScFilterListBox wird immer fuer Auswahlliste benutzt
 	friend class ScFilterListBox;
-#ifdef AUTOFILTER_POPUP
-	friend class AutoFilterPopup;
-#endif
 
 private:
 	// #114409#
@@ -331,10 +326,6 @@
 	USHORT			HitPageBreak( const Point& rMouse, ScRange* pSource = NULL,
 									SCCOLROW* pBreak = NULL, SCCOLROW* pPrev = NULL );
 
-#ifdef AUTOFILTER_POPUP
-	void			DoAutoFilterPopup( SCCOL nCol, SCROW nRow, BOOL bDataSelect );
-#endif
-
 	void			PasteSelection( const Point& rPosPixel );
 
 	void			SelectForContextMenu( const Point& rPosPixel );
Index: sc/source/ui/inc/tphfedit.hxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/inc/tphfedit.hxx,v
retrieving revision 1.12
retrieving revision 1.13
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.12 -r1.13
--- sc/source/ui/inc/tphfedit.hxx	27 Feb 2007 13:27:09 -0000	1.12
+++ sc/source/ui/inc/tphfedit.hxx	27 Sep 2007 13:55:13 -0000	1.13
@@ -131,6 +131,7 @@
 	ScHeaderEditEngine*	pEdEngine;
 	EditView*			pEdView;
     ScEditWindowLocation eLocation;
+    bool mbRTL;
 
     com::sun::star::uno::WeakReference< ::com::sun::star::accessibility::XAccessible > xAcc;
     ScAccessibleEditObject* pAcc;
Index: sc/source/ui/pagedlg/scuitphfedit.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/pagedlg/scuitphfedit.cxx,v
retrieving revision 1.9
retrieving revision 1.10
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.9 -r1.10
--- sc/source/ui/pagedlg/scuitphfedit.cxx	10 May 2007 16:58:11 -0000	1.9
+++ sc/source/ui/pagedlg/scuitphfedit.cxx	27 Sep 2007 13:55:25 -0000	1.10
@@ -165,6 +165,18 @@
         maFtDefinedHF.SetText(ScGlobal::GetRscString( STR_FOOTER ));
         maFtCustomHF.SetText(ScGlobal::GetRscString( STR_HF_CUSTOM_FOOTER ));
     }
+	if( Application::GetSettings().GetLayoutRTL() )
+	{
+		Point pt1 = aWndLeft.GetPosPixel();
+		Point pt2 = aWndRight.GetPosPixel();
+		aWndLeft.SetPosPixel(pt2);
+		aWndRight.SetPosPixel(pt1);
+
+		pt1 = aFtLeft.GetPosPixel();
+		pt2 = aFtRight.GetPosPixel();
+		aFtLeft.SetPosPixel(pt2);
+		aFtRight.SetPosPixel(pt1);
+	}
 	aWndLeft.	SetFont( aPatAttr );
 	aWndCenter. SetFont( aPatAttr );
 	aWndRight.	SetFont( aPatAttr );
Index: sc/source/ui/pagedlg/tphfedit.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/pagedlg/tphfedit.cxx,v
retrieving revision 1.18
retrieving revision 1.19
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.18 -r1.19
--- sc/source/ui/pagedlg/tphfedit.cxx	10 May 2007 16:58:21 -0000	1.18
+++ sc/source/ui/pagedlg/tphfedit.cxx	27 Sep 2007 13:55:42 -0000	1.19
@@ -50,6 +50,7 @@
 #include <svx/editstat.hxx>
 #include <svx/editview.hxx>
 #include <svx/flditem.hxx>
+#include <svx/adjitem.hxx>
 #include <sfx2/basedlgs.hxx>
 #include <sfx2/objsh.hxx>
 #include <vcl/msgbox.hxx>
@@ -412,6 +413,8 @@
     eLocation(eLoc),
     pAcc(NULL)
 {
+    EnableRTL(FALSE);
+
 	const StyleSettings& rStyleSettings = Application::GetSettings().GetStyleSettings();
 	Color aBgColor = rStyleSettings.GetWindowColor();
 
@@ -432,6 +435,9 @@
 		//	Feldbefehle:
 	pEdEngine->SetData( aData );
 	pEdEngine->SetControlWord( pEdEngine->GetControlWord() | EE_CNTRL_MARKFIELDS );
+	mbRTL = ScGlobal::IsSystemRTL(); 
+	if (mbRTL)
+		pEdEngine->SetDefaultHorizontalTextDirection(EE_HTEXTDIR_R2L);
 
 	pEdView = new EditView( pEdEngine, this );
 	pEdView->SetOutputArea( Rectangle( Point(0,0), GetOutputSize() ) );
@@ -489,6 +495,8 @@
 	pSet->Put( rPattern.GetItem(ATTR_FONT_HEIGHT), EE_CHAR_FONTHEIGHT );
 	pSet->Put( rPattern.GetItem(ATTR_CJK_FONT_HEIGHT), EE_CHAR_FONTHEIGHT_CJK );
 	pSet->Put( rPattern.GetItem(ATTR_CTL_FONT_HEIGHT), EE_CHAR_FONTHEIGHT_CTL );
+	if (mbRTL)
+		pSet->Put( SvxAdjustItem( SVX_ADJUST_RIGHT, EE_PARA_JUST ) );	
 	pEdEngine->SetDefaults( pSet );
 }
 
Index: sc/source/ui/src/scstring.src
===================================================================
RCS file: /cvs/sc/sc/source/ui/src/scstring.src,v
retrieving revision 1.87
retrieving revision 1.88
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.87 -r1.88
--- sc/source/ui/src/scstring.src	6 Jul 2007 12:45:26 -0000	1.87
+++ sc/source/ui/src/scstring.src	21 Sep 2007 09:23:35 -0000	1.88
@@ -212,11 +212,11 @@
 };
 String SCSTR_STDFILTER
 {
-	Text [ en-US ] = "- Standard -" ;
+	Text [ en-US ] = "Standard Filter..." ;
 };
 String SCSTR_TOP10FILTER
 {
-	Text [ en-US ] = "- Top 10 -" ;
+	Text [ en-US ] = "Top 10" ;
 };
 String SCSTR_NONAME
 {
@@ -558,6 +558,11 @@
     Text [ en-US ] = "There is nothing to print. The selected print range or sheet is empty.";
 };
 
+String SCSTR_ALLFILTER
+{
+    Text [ en-US ] = "All";
+};
+
 String STR_ACC_CSVRULER_NAME
 {
     Text [ en-US ] = "Ruler";
Index: sc/source/ui/view/cellsh.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/cellsh.cxx,v
retrieving revision 1.43
retrieving revision 1.44
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.43 -r1.44
--- sc/source/ui/view/cellsh.cxx	22 May 2007 20:12:25 -0000	1.43
+++ sc/source/ui/view/cellsh.cxx	27 Sep 2007 13:55:55 -0000	1.44
@@ -195,12 +195,18 @@
 				break;
 
 			case SID_CUT:				// Ausschneiden,
-			case FID_INS_ROW:			// Zeilen einfuegen
-			case FID_INS_COLUMN:		// Spalten einfuegen
 			case FID_INS_CELL:			// Zellen einfuegen, nur einf. Selektion
+				bDisable = (!bSimpleArea);
+				break;
+
+            case FID_INS_ROW:           // insert rows
 			case FID_INS_CELLSDOWN:
+                bDisable = (!bSimpleArea) || GetViewData()->SimpleColMarked();
+                break;
+
+            case FID_INS_COLUMN:        // insert columns
 			case FID_INS_CELLSRIGHT:
-				bDisable = (!bSimpleArea);
+                bDisable = (!bSimpleArea) || GetViewData()->SimpleRowMarked();
 				break;
 
 			case SID_COPY:						// Kopieren
Index: sc/source/ui/view/cellsh4.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/cellsh4.cxx,v
retrieving revision 1.10
retrieving revision 1.11
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.10 -r1.11
--- sc/source/ui/view/cellsh4.cxx	27 Feb 2007 13:49:10 -0000	1.10
+++ sc/source/ui/view/cellsh4.cxx	6 Sep 2007 14:20:17 -0000	1.11
@@ -40,7 +40,7 @@
 
 //------------------------------------------------------------------
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ("", off)
 #endif
 
Index: sc/source/ui/view/dbfunc2.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/dbfunc2.cxx,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.5 -r1.6
--- sc/source/ui/view/dbfunc2.cxx	22 May 2007 20:12:47 -0000	1.5
+++ sc/source/ui/view/dbfunc2.cxx	6 Sep 2007 14:20:32 -0000	1.6
@@ -52,7 +52,7 @@
 // STATIC DATA -----------------------------------------------------------
 
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ( "", off )
 #endif
 
Index: sc/source/ui/view/dbfunc4.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/dbfunc4.cxx,v
retrieving revision 1.9
retrieving revision 1.10
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.9 -r1.10
--- sc/source/ui/view/dbfunc4.cxx	22 May 2007 20:12:59 -0000	1.9
+++ sc/source/ui/view/dbfunc4.cxx	6 Sep 2007 14:20:45 -0000	1.10
@@ -52,7 +52,7 @@
 
 // -----------------------------------------------------------------------
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ( "", off )
 #endif
 
Index: sc/source/ui/view/drawvie4.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/drawvie4.cxx,v
retrieving revision 1.29
retrieving revision 1.30
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.29 -r1.30
--- sc/source/ui/view/drawvie4.cxx	6 Jul 2007 12:29:45 -0000	1.29
+++ sc/source/ui/view/drawvie4.cxx	6 Sep 2007 14:21:04 -0000	1.30
@@ -76,7 +76,7 @@
 
 //!	welche Funktionen aus drawview/drawvie4 muessen wirklich ohne Optimierung sein?
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ( "", off )
 #endif
 
@@ -396,7 +396,7 @@
 }
 
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ( "", on )
 #endif
 
Index: sc/source/ui/view/drawview.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/drawview.cxx,v
retrieving revision 1.47
retrieving revision 1.48
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.47 -r1.48
--- sc/source/ui/view/drawview.cxx	22 May 2007 20:13:22 -0000	1.47
+++ sc/source/ui/view/drawview.cxx	6 Sep 2007 14:21:17 -0000	1.48
@@ -91,7 +91,7 @@
 
 // -----------------------------------------------------------------------
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ( "", off )
 #endif
 
@@ -671,7 +671,7 @@
 	}
 }
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ( "", on )
 #endif
 
Index: sc/source/ui/view/gridwin.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/gridwin.cxx,v
retrieving revision 1.83
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.83 gridwin.cxx
--- sc/source/ui/view/gridwin.cxx	21 Aug 2007 12:27:31 -0000	1.83
+++ sc/source/ui/view/gridwin.cxx	5 Oct 2007 04:13:56 -0000
@@ -125,9 +125,6 @@
 #include "output.hxx"
 #include "docfunc.hxx"
 #include "dbdocfun.hxx"
-#ifdef AUTOFILTER_POPUP
-#include <vcl/menu.hxx>
-#endif
 #include "dpobject.hxx"
 #include "dpoutput.hxx"
 #include "transobj.hxx"
@@ -168,8 +165,8 @@
 const BYTE SC_NESTEDBUTTON_UP   = 2;
 
 #define SC_AUTOFILTER_ALL		0
-#define	SC_AUTOFILTER_CUSTOM	1
-#define	SC_AUTOFILTER_TOP10		2
+#define	SC_AUTOFILTER_TOP10     1
+#define	SC_AUTOFILTER_CUSTOM    2
 
 //	Modi fuer die FilterListBox
 enum ScFilterBoxMode
@@ -188,12 +185,6 @@
 
 //==================================================================
 
-/*
- * Der Autofilter wird auf dem Mac per AutoFilterPopup realisiert.
- * Die AutoFilterListBox wird trotzdem fuer die Auswahlliste gebraucht.
- */
-
-//==================================================================
 class ScFilterListBox : public ListBox
 {
 private:
@@ -203,6 +194,7 @@
 	BOOL			bButtonDown;
 	BOOL			bInit;
 	BOOL			bCancelled;
+    BOOL            bInSelect;
 	ULONG			nSel;
 	ScFilterBoxMode	eMode;
 
@@ -224,6 +216,7 @@
 	BOOL			IsDataSelect() const	{ return (eMode == SC_FILTERBOX_DATASELECT); }
 	void			EndInit();
 	void			SetCancelled()			{ bCancelled = TRUE; }
+    BOOL            IsInSelect() const      { return bInSelect; }
 };
 
 //-------------------------------------------------------------------
@@ -238,6 +231,7 @@
 	bButtonDown( FALSE ),
 	bInit( TRUE ),
 	bCancelled( FALSE ),
+    bInSelect( FALSE ),
 	nSel( 0 ),
 	eMode( eNewMode )
 {
@@ -310,7 +304,12 @@
 		{
 			nSel = nPos;
 			if (!bButtonDown)
+            {
+                // #i81298# set bInSelect flag, so the box isn't deleted from modifications within FilterSelect
+                bInSelect = TRUE;
 				pGridWin->FilterSelect( nSel );
+                bInSelect = FALSE;
+            }
 		}
 	}
 }
@@ -344,66 +343,6 @@
 
 // ============================================================================
 
-#ifdef AUTOFILTER_POPUP
-
-class AutoFilterPopup : public PopupMenu
-{
-public:
-		AutoFilterPopup( ScGridWindow* _pWin, SCCOL _nCol, SCROW _nRow, BOOL bDatSel )
-			:	pWin( _pWin ),
-				nCol( _nCol ),
-				nRow( _nRow ),
-				bIsDataSelect( bDatSel ),
-				bSelected( FALSE )			{}
-		~AutoFilterPopup();
-
-protected:
-	virtual void	Select();
-
-private:
-	ScGridWindow* pWin;
-	SCCOL		  nCol;
-	SCROW		  nRow;
-	BOOL		  bIsDataSelect;
-	BOOL		  bSelected;
-};
-
-//-------------------------------------------------------------------
-
-void __EXPORT AutoFilterPopup::Select()
-{
-	//	Button vor dem ausfuehren wieder zeichnen
-	if ( !bIsDataSelect )
-	{
-		pWin->HideCursor();
-		pWin->aComboButton.Draw( FALSE );
-		pWin->ShowCursor();
-	}
-	bSelected = TRUE;
-
-	USHORT nCurId = GetCurItemId();
-	pWin->ReleaseMouse();
-	String aStr = GetItemText( nCurId );
-	if ( bIsDataSelect )
-		pWin->ExecDataSelect( nCol, nRow, aStr );
-	else
-		pWin->ExecFilter( nCurId-1, nCol, nRow, aStr );
-}
-
-AutoFilterPopup::~AutoFilterPopup()
-{
-	if ( !bIsDataSelect && !bSelected )
-	{
-		pWin->HideCursor();
-		pWin->aComboButton.Draw( FALSE );
-		pWin->ShowCursor();
-	}
-}
-
-#endif // #ifdef AUTOFILTER_POPUP
-
-//==================================================================
-
 BOOL lcl_IsEditableMatrix( ScDocument* pDoc, const ScRange& rRange )
 {
 	//	wenn es ein editierbarer Bereich ist, und rechts unten eine Matrix-Zelle
@@ -547,6 +486,11 @@
 
 void ScGridWindow::ClickExtern()
 {
+    // #i81298# don't delete the filter box when called from its select handler
+    // (possible through row header size update)
+    if ( pFilterBox && pFilterBox->IsInSelect() )
+        return;
+
 	DELETEZ(pFilterBox);
 	DELETEZ(pFilterFloat);
 }
@@ -728,6 +672,8 @@
 	for (i=0; i<nCount; i++)
 		pFilterBox->InsertEntry( aStrings[i]->GetString() );
 
+    pFilterBox->SetSeparatorPos( 0 );
+
 	if (bWait)
 		LeaveWait();
 
@@ -892,19 +838,6 @@
 
 void ScGridWindow::DoAutoFilterMenue( SCCOL nCol, SCROW nRow, BOOL bDataSelect )
 {
-	//	bei AUTOFILTER_POPUP-define fuer AutoFilter das Popup nehmen
-#ifdef AUTOFILTER_POPUP
-	if ( !bDataSelect )
-	{
-		DoAutoFilterPopup( nCol, nRow, bDataSelect );
-		return;
-	}
-#endif
-
-	/*
-	 * Standard-Variante mit TreeListBox
-	 */
-
 	delete pFilterBox;
 	delete pFilterFloat;
 
@@ -973,7 +906,7 @@
 		long nMaxText = 0;
 
 		//	default entries
-		static const USHORT nDefIDs[] = { SCSTR_ALL, SCSTR_STDFILTER, SCSTR_TOP10FILTER };
+        static const USHORT nDefIDs[] = { SCSTR_ALLFILTER, SCSTR_TOP10FILTER, SCSTR_STDFILTER };
 		const USHORT nDefCount = sizeof(nDefIDs) / sizeof(USHORT);
 		for (i=0; i<nDefCount; i++)
 		{
@@ -983,9 +916,10 @@
 			if ( nTextWidth > nMaxText )
 				nMaxText = nTextWidth;
 		}
+        pFilterBox->SetSeparatorPos( nDefCount - 1 );
 
 		//	get list entries
-		pDoc->GetFilterEntries( nCol, nRow, nTab, aStrings );
+        pDoc->GetFilterEntries( nCol, nRow, nTab, aStrings, true );
 
 		//	check widths of numerical entries (string entries are not included)
 		//	so all numbers are completely visible
@@ -1127,114 +1061,6 @@
 	}
 }
 
-#ifdef AUTOFILTER_POPUP
-
-	/*
-	 * Macintosh-Variante mit Popup-Menue
-	 */
-
-void ScGridWindow::DoAutoFilterPopup( SCCOL nCol, SCROW nRow, BOOL bDataSelect )
-{
-	AutoFilterPopup*	pPopupMenu = new AutoFilterPopup( this, nCol, nRow, bDataSelect );
-	ScDocument*	 		pDoc = pViewData->GetDocument();
-	SCTAB				nTab = pViewData->GetTabNo();
-	Point				aPos = pViewData->GetScrPos( nCol, nRow, eWhich );
-	BOOL				bValid = TRUE;
-	String				aStrSelect;
-	USHORT				nSelPos = 0;
-
-	TypedStrCollection aStrings( 128, 128 );
-	USHORT nFirst = 1;
-	if ( bDataSelect )								// Auswahl-Liste
-	{
-		//	Liste fuellen
-		aStrings.SetCaseSensitive( TRUE );
-		pDoc->GetDataEntries( nCol, nRow, nTab, aStrings );
-
-		//	nichts selektieren
-		bValid = FALSE;
-	}
-	else											// AutoFilter
-	{
-		//	Standard-Eintraege
-		pPopupMenu->InsertItem( 1, String( ScResId(SCSTR_ALL) ) );
-		pPopupMenu->InsertItem( 2, String( ScResId(SCSTR_STDFILTER) ) );
-		pPopupMenu->InsertItem( 3, String( ScResId(SCSTR_TOP10FILTER) ) );
-		nFirst = 4;
-
-		//	Liste fuellen
-		pDoc->GetFilterEntries( nCol, nRow, nTab, aStrings );
-
-		//	aktiven Eintrag suchen
-		ScDBData* pDBData = pDoc->GetDBAtCursor( nCol, nRow, nTab );
-		if (pDBData)
-		{
-			ScQueryParam aParam;
-			pDBData->GetQueryParam( aParam );
-
-			for (USHORT i=0; i<MAXQUERY && bValid; i++)			// bisherige Filter-Einstellungen
-			{
-				ScQueryEntry& rEntry = aParam.GetEntry(i);
-				if (rEntry.bDoQuery)
-				{
-					if (i>0)
-						if (rEntry.eConnect != SC_AND)
-							bValid = FALSE;
-					if (rEntry.nField == nCol)
-					{
-						if (rEntry.eOp == SC_EQUAL)
-						{
-							String* pStr = rEntry.pStr;
-							if (pStr)
-								aStrSelect = *pStr;
-						}
-						else if (rEntry.eOp == SC_TOPVAL && rEntry.pStr &&
-									*rEntry.pStr == "10")
-							nSelPos = SC_AUTOFILTER_TOP10;
-						else
-							nSelPos = SC_AUTOFILTER_CUSTOM;
-					}
-				}
-			}
-			if (!bValid)
-			{
-				aStrSelect.Erase();
-				nSelPos = 0;
-			}
-		}
-	}
-
-	//	Menue fuellen
-
-	USHORT nCount = aStrings.GetCount();
-	for ( USHORT i=0; i<nCount; i++ )
-	{
-		const String& rStr = aStrings[i]->GetString();
-
-		if ( bValid && nSelPos == 0 )
-			if ( aStrSelect == rStr )
-				nSelPos = i+nFirst;
-
-		pPopupMenu->InsertItem( i+nFirst, rStr );
-	}
-
-	if ( bValid )
-	{
-		pPopupMenu->SetDefaultItem( nSelPos );
-		pPopupMenu->CheckItem( nSelPos );
-	}
-
-	//	ausfuehren nur, wenn ueberhaupt was drin ist (bei Auswahl-Liste)
-	if ( nCount+nFirst > 1 )
-		pPopupMenu->Execute( OutputToScreenPixel( aPos ) );
-	else
-		Sound::Beep();
-
-	delete pPopupMenu;
-}
-
-#endif // #ifdef AUTOFILTER_POPUP
-
 void ScGridWindow::FilterSelect( ULONG nSel )
 {
 	String aString;
@@ -1340,7 +1166,7 @@
 			{
 				SCSIZE nEC = aParam.GetEntryCount();
 				for (SCSIZE i=0; i<nEC; i++)
-					aParam.GetEntry(i).bDoQuery = FALSE;
+                    aParam.GetEntry(i).Clear();
 				nQueryPos = 0;
 				aParam.bInplace = TRUE;
 				aParam.bRegExp = FALSE;
@@ -2178,11 +2004,12 @@
 		Point aPos = rMEvt.GetPosPixel();
         SCsCOL nPosX;
         SCsROW nPosY;
+        SCTAB nTab = pViewData->GetTabNo();
         pViewData->GetPosFromPixel( aPos.X(), aPos.Y(), eWhich, nPosX, nPosY );
-		ScDPObject*	pDPObj	= pDoc->GetDPAtCursor( nPosX, nPosY, pViewData->GetTabNo() );
+		ScDPObject*	pDPObj	= pDoc->GetDPAtCursor( nPosX, nPosY, nTab );
 		if ( pDPObj && pDPObj->GetSaveData()->GetDrillDown() )
 		{
-			ScAddress aCellPos( nPosX, nPosY, pViewData->GetTabNo() );
+			ScAddress aCellPos( nPosX, nPosY, nTab );
 			ScDPPositionData aData;
 			pDPObj->GetPositionData( aData, aCellPos );
 
@@ -2206,7 +2033,52 @@
                 }
 			}
 			else
-				Sound::Beep();		// nothing to expand/collapse
+            {
+                // Check if the data area is double-clicked.
+                ScDPCacheTable aArrayData;
+                pDPObj->GetDrillDownData(aCellPos, aArrayData);
+                if ( aArrayData.empty() )
+                {
+                    ::Sound::Beep();
+                }
+                else
+                {
+                    ScTabViewShell* pViewShell = pViewData->GetViewShell();
+                    String aNewTabName;
+                    pViewData->GetDocument()->CreateValidTabName(aNewTabName);
+                    SCTAB nNewTab = nTab + 1;
+                    if ( pViewShell->InsertTable(aNewTabName, nNewTab, false) )
+                    {
+                        sal_Int32 nRowSize = aArrayData.getRowSize();
+                        sal_Int32 nColSize = aArrayData.getColSize();
+
+                        // header row
+                        for (sal_Int32 nCol = 0; nCol < nColSize; ++nCol)
+                        {
+                            const String* pHeaderStr = aArrayData.getFieldName(nCol);
+                            if (pHeaderStr)
+                                pDoc->SetString(nCol, 0, nNewTab, *pHeaderStr);
+                        }
+                        
+                        // data rows
+                        for (sal_Int32 nRow = 0; nRow < nRowSize; ++nRow)
+                        {
+                            for (sal_Int32 nCol = 0; nCol < nColSize; ++nCol)
+                            {
+                                const ScDPCacheTable::Cell* pCell = aArrayData.getCell(nCol, nRow);
+                                if (pCell->mbNumeric)
+                                    pDoc->SetValue(nCol, nRow+1, nNewTab, pCell->mfValue);
+                                else
+                                {
+                                    const String* pStr = ScDPCacheTable::getString(pCell->mnStrId);
+                                    if (pStr)
+                                        pDoc->SetString(nCol, nRow+1, nNewTab, *pStr);
+                                }
+                            }
+                        }
+                    }
+                }
+            }
 
 			return;
 		}
@@ -2221,11 +2093,12 @@
 			MouseEvent aEditEvt( rMEvt.GetPosPixel(), 1, MOUSE_SYNTHETIC, MOUSE_LEFT, 0 );
 			pEditView->MouseButtonDown( aEditEvt );
 			pEditView->MouseButtonUp( aEditEvt );
+            return;
 		}
 	}
 
 			//
-			//		Links in Edit-Zellen
+			//		Links in edit cells
 			//
 
 	BOOL bAlt = rMEvt.IsMod2();
@@ -2805,11 +2678,6 @@
         return;
     }
 
-	BOOL bDisable = pScMod->IsFormulaMode() ||
-					pScMod->IsModalMode(pViewData->GetSfxDocShell());
-	if (bDisable)
-		return;
-
 	if ( nCmd == COMMAND_WHEEL || nCmd == COMMAND_STARTAUTOSCROLL || nCmd == COMMAND_AUTOSCROLL )
 	{
 		BOOL bDone = pViewData->GetView()->ScrollCommand( rCEvt, eWhich );
@@ -2817,6 +2685,11 @@
 			Window::Command(rCEvt);
 		return;
 	}
+    // #i7560# FormulaMode check is below scrolling - scrolling is allowed during formula input
+	BOOL bDisable = pScMod->IsFormulaMode() ||
+					pScMod->IsModalMode(pViewData->GetSfxDocShell());
+	if (bDisable)
+		return;
 
 	if ( nCmd == COMMAND_CONTEXTMENU && !SC_MOD()->GetIsWaterCan() )
 	{
Index: sc/source/ui/view/prevwsh.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/prevwsh.cxx,v
retrieving revision 1.37
retrieving revision 1.38
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.37 -r1.38
--- sc/source/ui/view/prevwsh.cxx	17 Jul 2007 13:35:10 -0000	1.37
+++ sc/source/ui/view/prevwsh.cxx	27 Sep 2007 13:56:24 -0000	1.38
@@ -915,6 +915,9 @@
 	aCurPos.Y() = pVerScroll->GetThumbPos();
 	aPrevPos = aCurPos;
 
+	long nThumbPos	= pVerScroll->GetThumbPos();
+	long nRangeMax	= pVerScroll->GetRangeMax();
+
 	switch( nMode )
 	{
 		case SID_CURSORUP:
@@ -930,9 +933,43 @@
 			aCurPos.X() += nHLine;
 			break;
 		case SID_CURSORPAGEUP:
+			if(nThumbPos==0)
+			{
+				long nPage = pPreview->GetPageNo();
+
+				if( nPage>0 )
+				{
+					SfxViewFrame* pSfxViewFrame = GetViewFrame();
+					SfxRequest aSfxRequest( pSfxViewFrame, SID_PREVIEW_PREVIOUS );
+					Execute( aSfxRequest );
+					aCurPos.Y() = nVRange;
+				}
+			}
+			else
 			aCurPos.Y() -= nVPage;
 			break;
 		case SID_CURSORPAGEDOWN:
+			if((abs(nVPage+nThumbPos-nRangeMax)<10)||(nVPage>nRangeMax))
+			{
+				long nPage = pPreview->GetPageNo();
+				long nTotal = pPreview->GetTotalPages();
+
+                // before testing for last page, make sure all page counts are calculated
+                if ( nPage+1 == nTotal && !pPreview->AllTested() )
+                {
+                    pPreview->CalcAll();
+                    nTotal = pPreview->GetTotalPages();
+                }
+
+				if( nPage<nTotal-1 )
+				{
+					SfxViewFrame* pSfxViewFrame = GetViewFrame();
+					SfxRequest aSfxRequest( pSfxViewFrame, SID_PREVIEW_NEXT );
+					Execute( aSfxRequest );
+					aCurPos.Y() = 0;
+				}
+			}
+			else
 			aCurPos.Y() += nVPage;
 			break;
 		case SID_CURSORHOME:
Index: sc/source/ui/view/printfun.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/printfun.cxx,v
retrieving revision 1.52
retrieving revision 1.53
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.52 -r1.53
--- sc/source/ui/view/printfun.cxx	6 Jul 2007 12:47:10 -0000	1.52
+++ sc/source/ui/view/printfun.cxx	27 Sep 2007 13:56:37 -0000	1.53
@@ -53,6 +53,7 @@
 #include <svtools/colorcfg.hxx>
 #include <svx/editstat.hxx>		// EE_CNTRL_RTFSTYLESHEETS
 #include <svx/fmview.hxx>
+#include <svx/frmdiritem.hxx>
 #include <svx/lrspitem.hxx>
 #include <svx/paperinf.hxx>
 #include <svx/pbinitem.hxx>
@@ -1777,6 +1778,8 @@
 		//	#69193# dont use font color, because background color is not used
 		//!	there's no way to set the background for note pages
 		pEditDefaults->ClearItem( EE_CHAR_COLOR );
+		if (ScGlobal::IsSystemRTL())
+			pEditDefaults->Put( SvxFrameDirectionItem( FRMDIR_HORI_RIGHT_TOP, EE_PARA_WRITINGDIR ) );
 	}
 
 	pEditEngine->SetData( aFieldData );		// Seitennummer etc. setzen
Index: sc/source/ui/view/tabview3.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/tabview3.cxx,v
retrieving revision 1.59
retrieving revision 1.60
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.59 -r1.60
--- sc/source/ui/view/tabview3.cxx	20 Aug 2007 16:52:49 -0000	1.59
+++ sc/source/ui/view/tabview3.cxx	6 Sep 2007 14:21:32 -0000	1.60
@@ -363,7 +363,7 @@
 //					oder Referenz verschicken
 //		ohne Optimierung wegen BugId 29307
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ( "", off )
 #endif
 
@@ -391,7 +391,7 @@
 	}
 }
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ( "", on )
 #endif
 
Index: sc/source/ui/view/tabvwsh2.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/tabvwsh2.cxx,v
retrieving revision 1.25
retrieving revision 1.26
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.25 -r1.26
--- sc/source/ui/view/tabvwsh2.cxx	22 May 2007 20:14:19 -0000	1.25
+++ sc/source/ui/view/tabvwsh2.cxx	6 Sep 2007 14:21:45 -0000	1.26
@@ -40,7 +40,7 @@
 
 // INCLUDE ---------------------------------------------------------------
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ("", off)
 #endif
 
Index: sc/source/ui/view/tabvwsh3.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/tabvwsh3.cxx,v
retrieving revision 1.34
retrieving revision 1.35
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.34 -r1.35
--- sc/source/ui/view/tabvwsh3.cxx	6 Jul 2007 12:47:49 -0000	1.34
+++ sc/source/ui/view/tabvwsh3.cxx	27 Sep 2007 13:56:50 -0000	1.35
@@ -1073,7 +1073,11 @@
                     if ( bOldProtection )
 						Unprotect( nTab, aPassword );
 					else
+                    {
+                        pScMod->InputEnterHandler();
+
 						Protect( nTab, aPassword );
+                    }
 
                     if( !pReqArgs )
 					{
Index: sc/source/ui/view/tabvwshb.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/tabvwshb.cxx,v
retrieving revision 1.35
retrieving revision 1.36
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.35 -r1.36
--- sc/source/ui/view/tabvwshb.cxx	22 May 2007 20:14:55 -0000	1.35
+++ sc/source/ui/view/tabvwshb.cxx	6 Sep 2007 14:21:58 -0000	1.36
@@ -47,7 +47,7 @@
 
 //------------------------------------------------------------------
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ("", off)
 #endif
 
Index: sc/source/ui/view/tabvwshd.cxx
===================================================================
RCS file: /cvs/sc/sc/source/ui/view/tabvwshd.cxx,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.5 -r1.6
--- sc/source/ui/view/tabvwshd.cxx	21 Jul 2006 15:17:18 -0000	1.5
+++ sc/source/ui/view/tabvwshd.cxx	6 Sep 2007 14:22:12 -0000	1.6
@@ -40,7 +40,7 @@
 
 //------------------------------------------------------------------
 
-#ifdef WNT
+#ifdef _MSC_VER
 #pragma optimize ("", off)
 #endif
 
Index: sc/util/makefile.mk
===================================================================
RCS file: /cvs/sc/sc/util/makefile.mk,v
retrieving revision 1.42
retrieving revision 1.43
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.42 -r1.43
--- sc/util/makefile.mk	30 Aug 2007 10:05:29 -0000	1.42
+++ sc/util/makefile.mk	7 Sep 2007 10:34:18 -0000	1.43
@@ -302,5 +302,5 @@
 
 ALLTAR:	$(MISC)$/linkinc.ls  $(COMP)
 
-build_extn : $(SLB)$/$(TARGET_VBA).lib
+build_extn : $(SHL9TARGETN)
 	$(PERL) createExtPackage.pl $(COMMONBIN)$/vbaapi.oxt  $(SOLARBINDIR)$/oovbaapi.rdb $(LIBCOMPNAME)
Index: sc/util/defs/wntmsci10
===================================================================
RCS file: /cvs/sc/sc/util/defs/wntmsci10,v
retrieving revision 1.53
retrieving revision 1.54
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.53 -r1.54
--- sc/util/defs/wntmsci10	19 Jul 2007 20:32:02 -0000	1.53
+++ sc/util/defs/wntmsci10	27 Sep 2007 20:47:57 -0000	1.54
@@ -2116,3 +2116,6 @@
 ?ParseFilters@ScDPObject@@QAEEAAUScDPGetPivotDataField@@AAV?$vector@UScDPGetPivotDataField@@V?$allocator@UScDPGetPivotDataField@@@_STL@@@_STL@@ABVString@@@Z
 ?CheckPrint@ScDocShell@@QAE_NPAVPrintDialog@@PAVScMarkData@@_N2@Z
 ?SetPrinter@ScTabViewShell@@UAEGPAVSfxPrinter@@G_N@Z
+?hash@ScAddress@@QBEIXZ
+?hash@ScRange@@QBEIXZ
+?hashStartColumn@ScRange@@QBEIXZ
Index: sc/util/defs/wntmsci11
===================================================================
RCS file: sc/util/defs/wntmsci11
diff -N sc/util/defs/wntmsci11
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ sc/util/defs/wntmsci11	28 Sep 2007 02:01:02 -0000	1.3
@@ -0,0 +1,2080 @@
+?MASTERENUMCOMMANDS@ScTabViewShell@@0HB
+??0ScAddress@@QAE@XZ
+??0ScAddress@@QAE@FJF@Z
+??0ScAddress@@QAE@W4Uninitialized@0@@Z
+??0ScAddress@@QAE@W4InitializeInvalid@0@@Z
+??0ScAddress@@QAE@ABV0@@Z
+?Row@ScAddress@@QBEJXZ
+?Col@ScAddress@@QBEFXZ
+?Tab@ScAddress@@QBEFXZ
+?SetRow@ScAddress@@QAEXJ@Z
+?SetCol@ScAddress@@QAEXF@Z
+?SetTab@ScAddress@@QAEXF@Z
+?SetInvalid@ScAddress@@QAEXXZ
+?IsValid@ScAddress@@QBE_NXZ
+?GetVars@ScAddress@@QBEXAAFAAJ0@Z
+?PutInOrder@ScAddress@@QAEXAAV1@@Z
+?Set@ScAddress@@QAEXFJF@Z
+??4ScAddress@@QAEAAV0@ABV0@@Z
+??8ScAddress@@QBE_NABV0@@Z
+??9ScAddress@@QBE_NABV0@@Z
+??MScAddress@@QBE_NABV0@@Z
+??NScAddress@@QBE_NABV0@@Z
+??OScAddress@@QBE_NABV0@@Z
+??PScAddress@@QBE_NABV0@@Z
+??0ScRange@@QAE@XZ
+??0ScRange@@QAE@W4Uninitialized@ScAddress@@@Z
+??0ScRange@@QAE@W4InitializeInvalid@ScAddress@@@Z
+??0ScRange@@QAE@ABVScAddress@@0@Z
+??0ScRange@@QAE@ABV0@@Z
+??0ScRange@@QAE@ABVScAddress@@@Z
+??0ScRange@@QAE@FJF@Z
+??0ScRange@@QAE@FJFFJF@Z
+??4ScRange@@QAEAAV0@ABV0@@Z
+??4ScRange@@QAEAAV0@ABVScAddress@@@Z
+?SetInvalid@ScRange@@QAEXXZ
+?IsValid@ScRange@@QBE_NXZ
+?GetVars@ScRange@@QBEXAAFAAJ0010@Z
+??8ScRange@@QBE_NABV0@@Z
+??9ScRange@@QBE_NABV0@@Z
+??MScRange@@QBE_NABV0@@Z
+??NScRange@@QBE_NABV0@@Z
+??OScRange@@QBE_NABV0@@Z
+??PScRange@@QBE_NABV0@@Z
+?In@ScRange@@QBE_NABVScAddress@@@Z
+?In@ScRange@@QBE_NABV1@@Z
+?GetEntryCount@ScQueryParam@@QBEIXZ
+?GetEntry@ScQueryParam@@QBEAAUScQueryEntry@@I@Z
+?IsMarked@ScMarkData@@QBEEXZ
+?IsMultiMarked@ScMarkData@@QBEEXZ
+?SelectTable@ScMarkData@@QAEXFE@Z
+?GetTableSelect@ScMarkData@@QBEEF@Z
+?SetMarkNegative@ScMarkData@@QAEXE@Z
+?IsMarkNegative@ScMarkData@@QBEEXZ
+?SetMarking@ScMarkData@@QAEXE@Z
+?GetMarkingFlag@ScMarkData@@QBEEXZ
+?GetArray@ScMarkData@@QBEPBVScMarkArray@@XZ
+?SetOption@ScViewOptions@@QAEXW4ScViewOption@@E@Z
+?GetOption@ScViewOptions@@QBEEW4ScViewOption@@@Z
+?SetObjMode@ScViewOptions@@QAEXW4ScVObjType@@W4ScVObjMode@@@Z
+?GetObjMode@ScViewOptions@@QBE?AW4ScVObjMode@@W4ScVObjType@@@Z
+?SetGridColor@ScViewOptions@@QAEXABVColor@@ABVString@@@Z
+?GetGridOptions@ScViewOptions@@QBEABVScGridOptions@@XZ
+?SetGridOptions@ScViewOptions@@QAEXABVScGridOptions@@@Z
+?IsHideAutoSpell@ScViewOptions@@QBEEXZ
+?SetHideAutoSpell@ScViewOptions@@QAEXE@Z
+??9ScViewOptions@@QBEHABV0@@Z
+?GetViewOptions@ScTpViewItem@@QBEABVScViewOptions@@XZ
+?IsLookUpColRowNames@ScDocOptions@@QBEEXZ
+?SetLookUpColRowNames@ScDocOptions@@QAEXE@Z
+?IsAutoSpell@ScDocOptions@@QBEEXZ
+?SetAutoSpell@ScDocOptions@@QAEXE@Z
+?IsMatchWholeCell@ScDocOptions@@QBEEXZ
+?SetMatchWholeCell@ScDocOptions@@QAEXE@Z
+?IsIgnoreCase@ScDocOptions@@QBEEXZ
+?SetIgnoreCase@ScDocOptions@@QAEXE@Z
+?IsIter@ScDocOptions@@QBEEXZ
+?SetIter@ScDocOptions@@QAEXE@Z
+?GetIterCount@ScDocOptions@@QBEGXZ
+?SetIterCount@ScDocOptions@@QAEXG@Z
+?GetIterEps@ScDocOptions@@QBENXZ
+?SetIterEps@ScDocOptions@@QAEXN@Z
+?GetDate@ScDocOptions@@QBEXAAG00@Z
+?SetDate@ScDocOptions@@QAEXGGG@Z
+?GetTabDistance@ScDocOptions@@QBEGXZ
+?SetTabDistance@ScDocOptions@@QAEXG@Z
+?GetStdPrecision@ScDocOptions@@QBEGXZ
+?SetStdPrecision@ScDocOptions@@QAEXG@Z
+?IsCalcAsShown@ScDocOptions@@QBEEXZ
+?SetCalcAsShown@ScDocOptions@@QAEXE@Z
+?SetYear2000@ScDocOptions@@QAEXG@Z
+?GetYear2000@ScDocOptions@@QBEGXZ
+?SetFormulaRegexEnabled@ScDocOptions@@QAEXE@Z
+?IsFormulaRegexEnabled@ScDocOptions@@QBEEXZ
+?CopyTo@ScDocOptions@@QAEXAAV1@@Z
+??4ScDocOptions@@QAEABV0@ABV0@@Z
+??8ScDocOptions@@QBEHABV0@@Z
+??9ScDocOptions@@QBEHABV0@@Z
+?GetDocOptions@ScTpCalcItem@@QBEABVScDocOptions@@XZ
+?SetAppMetric@ScAppOptions@@QAEXW4FieldUnit@@@Z
+?GetAppMetric@ScAppOptions@@QBE?AW4FieldUnit@@XZ
+?SetZoom@ScAppOptions@@QAEXG@Z
+?GetZoom@ScAppOptions@@QBEGXZ
+?SetZoomType@ScAppOptions@@QAEXW4SvxZoomType@@@Z
+?GetZoomType@ScAppOptions@@QBE?AW4SvxZoomType@@XZ
+?GetLRUFuncListCount@ScAppOptions@@QBEGXZ
+?GetLRUFuncList@ScAppOptions@@QBEPAGXZ
+?SetStatusFunc@ScAppOptions@@QAEXG@Z
+?GetStatusFunc@ScAppOptions@@QBEGXZ
+?SetAutoComplete@ScAppOptions@@QAEXE@Z
+?GetAutoComplete@ScAppOptions@@QBEEXZ
+?SetDetectiveAuto@ScAppOptions@@QAEXE@Z
+?GetDetectiveAuto@ScAppOptions@@QBEEXZ
+?SetTrackContentColor@ScAppOptions@@QAEXK@Z
+?GetTrackContentColor@ScAppOptions@@QBEKXZ
+?SetTrackInsertColor@ScAppOptions@@QAEXK@Z
+?GetTrackInsertColor@ScAppOptions@@QBEKXZ
+?SetTrackDeleteColor@ScAppOptions@@QAEXK@Z
+?GetTrackDeleteColor@ScAppOptions@@QBEKXZ
+?SetTrackMoveColor@ScAppOptions@@QAEXK@Z
+?GetTrackMoveColor@ScAppOptions@@QBEKXZ
+?GetLinkMode@ScAppOptions@@QBE?AW4ScLkUpdMode@@XZ
+?SetLinkMode@ScAppOptions@@QAEXW4ScLkUpdMode@@@Z
+?SetDefaultObjectSizeWidth@ScAppOptions@@QAEXJ@Z
+?GetDefaultObjectSizeWidth@ScAppOptions@@QBEJXZ
+?SetDefaultObjectSizeHeight@ScAppOptions@@QAEXJ@Z
+?GetDefaultObjectSizeHeight@ScAppOptions@@QBEJXZ
+?GetSkipEmpty@ScPrintOptions@@QBEEXZ
+?SetSkipEmpty@ScPrintOptions@@QAEXE@Z
+?GetAllSheets@ScPrintOptions@@QBEEXZ
+?SetAllSheets@ScPrintOptions@@QAEXE@Z
+?GetPrintOptions@ScTpPrintItem@@QBEABVScPrintOptions@@XZ
+?GetDocShell@ScViewData@@QBEPAVScDocShell@@XZ
+?GetView@ScViewData@@QBEPAVScDBFunc@@XZ
+?GetViewShell@ScViewData@@QBEPAVScTabViewShell@@XZ
+?GetMarkData@ScViewData@@QAEAAVScMarkData@@XZ
+?GetMarkData@ScViewData@@QBEABVScMarkData@@XZ
+?IsActive@ScViewData@@QBEEXZ
+?Activate@ScViewData@@QAEXE@Z
+?GetRefTabNo@ScViewData@@QBEFXZ
+?SetRefTabNo@ScViewData@@QAEXF@Z
+?GetTabNo@ScViewData@@QBEFXZ
+?GetActivePart@ScViewData@@QBE?AW4ScSplitPos@@XZ
+?GetPosX@ScViewData@@QBEFW4ScHSplitPos@@@Z
+?GetPosY@ScViewData@@QBEJW4ScVSplitPos@@@Z
+?GetCurX@ScViewData@@QBEFXZ
+?GetCurY@ScViewData@@QBEJXZ
+?HasOldCursor@ScViewData@@QBEEXZ
+?GetHSplitMode@ScViewData@@QBE?AW4ScSplitMode@@XZ
+?GetVSplitMode@ScViewData@@QBE?AW4ScSplitMode@@XZ
+?GetHSplitPos@ScViewData@@QBEJXZ
+?GetVSplitPos@ScViewData@@QBEJXZ
+?GetFixPosX@ScViewData@@QBEFXZ
+?GetFixPosY@ScViewData@@QBEJXZ
+?IsPagebreakMode@ScViewData@@QBEEXZ
+?SetCurX@ScViewData@@QAEXF@Z
+?SetCurY@ScViewData@@QAEXJ@Z
+?SetHSplitMode@ScViewData@@QAEXW4ScSplitMode@@@Z
+?SetVSplitMode@ScViewData@@QAEXW4ScSplitMode@@@Z
+?SetHSplitPos@ScViewData@@QAEXJ@Z
+?SetVSplitPos@ScViewData@@QAEXJ@Z
+?SetFixPosX@ScViewData@@QAEXF@Z
+?SetFixPosY@ScViewData@@QAEXJ@Z
+?SetSelCtrlMouseClick@ScViewData@@QAEXE@Z
+?GetZoomX@ScViewData@@QBEABVFraction@@XZ
+?GetZoomY@ScViewData@@QBEABVFraction@@XZ
+?GetTPosX@ScViewData@@QBEJW4ScHSplitPos@@@Z
+?GetTPosY@ScViewData@@QBEJW4ScVSplitPos@@@Z
+?GetPPTX@ScViewData@@QBENXZ
+?GetPPTY@ScViewData@@QBENXZ
+?IsAnyFillMode@ScViewData@@QAEEXZ
+?IsFillMode@ScViewData@@QAEEXZ
+?GetFillMode@ScViewData@@QAEEXZ
+?IsRefMode@ScViewData@@QBEEXZ
+?GetRefType@ScViewData@@QBE?AW4ScRefType@@XZ
+?GetRefStartX@ScViewData@@QBEFXZ
+?GetRefStartY@ScViewData@@QBEJXZ
+?GetRefStartZ@ScViewData@@QBEFXZ
+?GetRefEndX@ScViewData@@QBEFXZ
+?GetRefEndY@ScViewData@@QBEJXZ
+?GetRefEndZ@ScViewData@@QBEFXZ
+?SetRefMode@ScViewData@@QAEXEW4ScRefType@@@Z
+?SetRefStart@ScViewData@@QAEXFJF@Z
+?SetRefEnd@ScViewData@@QAEXFJF@Z
+?ResetDelMark@ScViewData@@QAEXXZ
+?SetDelMark@ScViewData@@QAEXABVScRange@@@Z
+?GetDelMark@ScViewData@@QBEEAAVScRange@@@Z
+?GetOptions@ScViewData@@QBEABVScViewOptions@@XZ
+?IsGridMode@ScViewData@@QBEEXZ
+?SetGridMode@ScViewData@@QAEXE@Z
+?IsSyntaxMode@ScViewData@@QBEEXZ
+?SetSyntaxMode@ScViewData@@QAEXE@Z
+?IsHeaderMode@ScViewData@@QBEEXZ
+?SetHeaderMode@ScViewData@@QAEXE@Z
+?IsTabMode@ScViewData@@QBEEXZ
+?SetTabMode@ScViewData@@QAEXE@Z
+?IsVScrollMode@ScViewData@@QBEEXZ
+?SetVScrollMode@ScViewData@@QAEXE@Z
+?IsHScrollMode@ScViewData@@QBEEXZ
+?SetHScrollMode@ScViewData@@QAEXE@Z
+?IsOutlineMode@ScViewData@@QBEEXZ
+?SetOutlineMode@ScViewData@@QAEXE@Z
+?HasEditView@ScViewData@@QBEEW4ScSplitPos@@@Z
+?GetEditView@ScViewData@@QBEPAVEditView@@W4ScSplitPos@@@Z
+?GetEditActivePart@ScViewData@@QBE?AW4ScSplitPos@@XZ
+?GetEditViewCol@ScViewData@@QBEFXZ
+?GetEditViewRow@ScViewData@@QBEJXZ
+?GetEditStartCol@ScViewData@@QBEFXZ
+?GetEditStartRow@ScViewData@@QBEJXZ
+?GetEditEndCol@ScViewData@@QBEFXZ
+?GetEditEndRow@ScViewData@@QBEJXZ
+?GetScrSize@ScViewData@@QBE?AVSize@@XZ
+?SetSpellingView@ScViewData@@QAEXPAVEditView@@@Z
+?GetSpellingView@ScViewData@@QBEPAVEditView@@XZ
+?GetTabStartCol@ScViewData@@QBEFXZ
+?SetTabStartCol@ScViewData@@QAEXF@Z
+?GetScenButSize@ScViewData@@QBEABVSize@@XZ
+?SetScenButSize@ScViewData@@QAEXABVSize@@@Z
+?IsSelCtrlMouseClick@ScViewData@@QAEEXZ
+??4ScViewData@@QAEAAV0@ABV0@@Z
+?ToPixel@ScViewData@@SAJGN@Z
+?GetMoveCursor@ScViewData@@QAEXAAFAAJ@Z
+?Append@ScRangeList@@QAEXABVScRange@@@Z
+?GetInterfaceId@ScTabViewShell@@SA?AW4SfxInterfaceId@@XZ
+?Factory@ScTabViewShell@@SAAAVSfxViewFactory@@XZ
+?GetDefaultFrameLine@ScTabViewShell@@QBEPAVSvxBorderLine@@XZ
+?GetPivotSource@ScTabViewShell@@QAEPAVScArea@@XZ
+?SetPivotSource@ScTabViewShell@@QAEXPAVScArea@@@Z
+?GetDialogDPObject@ScTabViewShell@@QBEPBVScDPObject@@XZ
+?GetDontSwitch@ScTabViewShell@@QAEEXZ
+?SetDontSwitch@ScTabViewShell@@QAEXE@Z
+?SetChartDlgEdit@ScTabViewShell@@QAEXE@Z
+?SetEditChartName@ScTabViewShell@@QAEXABVString@@@Z
+?GetScSbxObject@ScTabViewShell@@QBEPAVSbxObject@@XZ
+?SetScSbxObject@ScTabViewShell@@QAEXPAVSbxObject@@@Z
+?GetFormShell@ScTabViewShell@@QBEPAVFmFormShell@@XZ
+?SetInFormatDialog@ScTabViewShell@@QAEXE@Z
+?IsInFormatDialog@ScTabViewShell@@QAEEXZ
+?ForceMove@ScTabViewShell@@QAEXXZ
+??1ScSortParam@@QAE@XZ
+?GetInterfaceId@ScDocShell@@SA?AW4SfxInterfaceId@@XZ
+?GetFactory@ScDocShell@@UBEAAVSfxObjectFactory@@XZ
+?GetDocument@ScDocShell@@QAEPAVScDocument@@XZ
+?GetDocFunc@ScDocShell@@QAEAAVScDocFunc@@XZ
+?IsInUndo@ScDocShell@@QBEEXZ
+?GetDdeTextFmt@ScDocShell@@QBEABVString@@XZ
+?GetDocHelperObject@ScDocShell@@QAEPAVScSbxDocHelper@@XZ
+?SetDocumentModifiedPending@ScDocShell@@QAEXE@Z
+?IsDocumentModifiedPending@ScDocShell@@QBEEXZ
+?IsUpdateEnabled@ScDocShell@@QBEEXZ
+?SetUpdateEnabled@ScDocShell@@QAEXE@Z
+??_FScDocShell@@QAEXXZ
+??_DScDocShell@@QAEXXZ
+?GetViewData@ScSortItem@@QBEPAVScViewData@@XZ
+?GetSortData@ScSortItem@@QBEABUScSortParam@@XZ
+?GetViewData@ScQueryItem@@QBEPAVScViewData@@XZ
+?GetQueryData@ScQueryItem@@QBEABUScQueryParam@@XZ
+?GetViewData@ScSubTotalItem@@QBEPAVScViewData@@XZ
+?GetSubTotalData@ScSubTotalItem@@QBEABUScSubTotalParam@@XZ
+?GetUserList@ScUserListItem@@QBEPAVScUserList@@XZ
+??4ScResId@@QAEAAV0@ABV0@@Z
+?GetCount@Collection@@QBEGXZ
+??ACollection@@QBEPAVDataObject@@G@Z
+??_FCollection@@QAEXXZ
+?SetDups@SortedCollection@@IAEXE@Z
+?IsDups@SortedCollection@@IBEEXZ
+??0SortedCollection@@QAE@ABV0@@Z
+??_7SortedCollection@@6B@
+??1SortedCollection@@UAE@XZ
+??4SortedCollection@@QAEAAV0@ABV0@@Z
+??_FSortedCollection@@QAEXXZ
+??0StrCollection@@QAE@GGE@Z
+??_7StrCollection@@6B@
+??0StrCollection@@QAE@ABV0@@Z
+??AStrCollection@@QBEPAVStrData@@G@Z
+??1StrCollection@@UAE@XZ
+??4StrCollection@@QAEAAV0@ABV0@@Z
+??_FStrCollection@@QAEXXZ
+??0TypedStrCollection@@QAE@GGE@Z
+??_7TypedStrCollection@@6B@
+??0TypedStrCollection@@QAE@ABV0@@Z
+??ATypedStrCollection@@QBEPAVTypedStrData@@G@Z
+?SetCaseSensitive@TypedStrCollection@@QAEXE@Z
+??1TypedStrCollection@@UAE@XZ
+??4TypedStrCollection@@QAEAAV0@ABV0@@Z
+??_FTypedStrCollection@@QAEXXZ
+?SetAppOptions@ScModule@@QAEXABVScAppOptions@@@Z
+?GetAppOptions@ScModule@@QAEABVScAppOptions@@XZ
+?GetPrintOptions@ScModule@@QAEABVScPrintOptions@@XZ
+?InputEnterHandler@ScModule@@QAEXE@Z
+?IncRow@ScAddress@@QAEXJ@Z
+?IncCol@ScAddress@@QAEXF@Z
+?IncTab@ScAddress@@QAEXF@Z
+?GetPixPos@ScViewData@@QBE?AVPoint@@W4ScSplitPos@@@Z
+??0ScRangeList@@QAE@XZ
+??_7ScRangeList@@6B@
+??0ScResId@@QAE@G@Z
+?IsHorOverlapped@ScMergeFlagAttr@@QBEEXZ
+?IsVerOverlapped@ScMergeFlagAttr@@QBEEXZ
+?IsOverlapped@ScMergeFlagAttr@@QBEEXZ
+?HasAutoFilter@ScMergeFlagAttr@@QBEEXZ
+?HasButton@ScMergeFlagAttr@@QBEEXZ
+?IsScenario@ScMergeFlagAttr@@QBEEXZ
+??0ScMergeFlagAttr@@QAE@ABV0@@Z
+??_7ScMergeFlagAttr@@6B@
+?GetProtection@ScProtectionAttr@@QBEEXZ
+?GetHideFormula@ScProtectionAttr@@QBEEXZ
+?GetHideCell@ScProtectionAttr@@QBEEXZ
+?GetHidePrint@ScProtectionAttr@@QBEEXZ
+??4ScProtectionAttr@@QAEAAV0@ABV0@@Z
+?GetLeftArea@ScPageHFItem@@QBEPBVEditTextObject@@XZ
+?GetCenterArea@ScPageHFItem@@QBEPBVEditTextObject@@XZ
+?GetRightArea@ScPageHFItem@@QBEPBVEditTextObject@@XZ
+??0ScViewObjectModeItem@@QAE@ABV0@@Z
+??_7ScViewObjectModeItem@@6B@
+?GetWidth@ScPageScaleToItem@@QBEGXZ
+?GetHeight@ScPageScaleToItem@@QBEGXZ
+?IsValid@ScPageScaleToItem@@QBE_NXZ
+?SetWidth@ScPageScaleToItem@@QAEXG@Z
+?SetHeight@ScPageScaleToItem@@QAEXG@Z
+?Set@ScPageScaleToItem@@QAEXGG@Z
+?SetInvalid@ScPageScaleToItem@@QAEXXZ
+??0ScPageScaleToItem@@QAE@ABV0@@Z
+??_7ScPageScaleToItem@@6B@
+?GetDocShell@ScCellRangesBase@@QBEPAVScDocShell@@XZ
+?GetRangeList@ScCellRangesBase@@QBEABVScRangeList@@XZ
+?IsCursorOnly@ScCellRangesBase@@QBEEXZ
+?GetRange@ScCellRangeObj@@IBEABVScRange@@XZ
+?GetOwnClipboard@ScTransferObj@@SAPAV1@PAVWindow@@@Z
+?GetItem@ScPatternAttr@@QBEABVSfxPoolItem@@G@Z
+?GetStyleSheet@ScPatternAttr@@QBEPBVScStyleSheet@@XZ
+?Clone@ScUserListData@@UBEPAVDataObject@@XZ
+?GetString@ScUserListData@@QBEABVString@@XZ
+??0ScUserList@@QAE@ABV0@@Z
+??_7ScUserList@@6B@
+??1ScUserList@@UAE@XZ
+??_FScUserList@@QAEXXZ
+??4ScUserList@@QAEAAV0@ABV0@@Z
+??AScUserList@@QBEPAVScUserListData@@G@Z
+??9ScUserList@@QBEEABV0@@Z
+?SetCompileForFAP@ScCompiler@@QAEXE@Z
+?SetAutoCorrection@ScCompiler@@QAEXE@Z
+?SetImportXML@ScCompiler@@QAEXE@Z
+?IsCorrected@ScCompiler@@QAEEXZ
+?GetCorrectedFormula@ScCompiler@@QAEABVString@@XZ
+?GetNumFormatType@ScCompiler@@QAEFXZ
+?IsCharWordChar@ScCompiler@@SAEABVString@@GW4Convention@ScAddress@@@Z
+?IsWordChar@ScCompiler@@SAEABVString@@GW4Convention@ScAddress@@@Z
+?GetCharTableFlags@ScCompiler@@AAEKG@Z
+??4ScUserListData@@QAEAAV0@ABV0@@Z
+?ForceArrayOperator@ScCompiler@@CAXAAV?$ScSimpleIntrusiveReference@VScToken@@@@ABV2@@Z
+??1ScCompiler@@QAE@XZ
+??0ScCompiler@@QAE@ABV0@@Z
+??4ScCompiler@@QAEAAV0@ABV0@@Z
+??0ScDBCollection@@QAE@GGEPAVScDocument@@@Z
+??_7ScDBCollection@@6B@
+?Clone@ScDBCollection@@UBEPAVDataObject@@XZ
+??0ScDBCollection@@QAE@ABV0@@Z
+??AScDBCollection@@QBEPAVScDBData@@G@Z
+?GetEntryIndex@ScDBCollection@@QAEGXZ
+?SetEntryIndex@ScDBCollection@@QAEXG@Z
+?SetRefreshHandler@ScDBCollection@@QAEXABVLink@@@Z
+?GetRefreshHandler@ScDBCollection@@QBEABVLink@@XZ
+??1ScDBCollection@@UAE@XZ
+??4ScDBCollection@@QAEAAV0@ABV0@@Z
+??_FScDBCollection@@QAEXXZ
+??0ScRangeUtil@@QAE@XZ
+??1ScRangeUtil@@QAE@XZ
+?IsRefArea@ScRangeUtil@@QBEEABVString@@PAVScDocument@@FPAV2@PAVScRefAddress@@@Z
+??4ScRangeUtil@@QAEAAV0@ABV0@@Z
+??1ScAreaNameIterator@@QAE@XZ
+?WasDBName@ScAreaNameIterator@@QBEEXZ
+??0ScAreaNameIterator@@QAE@ABV0@@Z
+??4ScAreaNameIterator@@QAEAAV0@ABV0@@Z
+?CreateType@ScSortItem@@SAPAXXZ
+?StaticType@ScSortItem@@SAP6APAXXZXZ
+?Type@ScSortItem@@UBEP6APAXXZXZ
+?IsOf@ScSortItem@@SAEP6APAXXZ@Z
+?IsA@ScSortItem@@UBEEP6APAXXZ@Z
+?CreateType@ScQueryItem@@SAPAXXZ
+?StaticType@ScQueryItem@@SAP6APAXXZXZ
+?Type@ScQueryItem@@UBEP6APAXXZXZ
+?IsOf@ScQueryItem@@SAEP6APAXXZ@Z
+?IsA@ScQueryItem@@UBEEP6APAXXZ@Z
+?CreateType@ScSubTotalItem@@SAPAXXZ
+?StaticType@ScSubTotalItem@@SAP6APAXXZXZ
+?Type@ScSubTotalItem@@UBEP6APAXXZXZ
+?IsOf@ScSubTotalItem@@SAEP6APAXXZ@Z
+?IsA@ScSubTotalItem@@UBEEP6APAXXZ@Z
+?CreateType@ScUserListItem@@SAPAXXZ
+?StaticType@ScUserListItem@@SAP6APAXXZXZ
+?Type@ScUserListItem@@UBEP6APAXXZXZ
+?IsOf@ScUserListItem@@SAEP6APAXXZ@Z
+?IsA@ScUserListItem@@UBEEP6APAXXZ@Z
+?GetValueText@ScSortItem@@UBE?AVString@@XZ
+??8ScSortItem@@UBEHABVSfxPoolItem@@@Z
+?QueryValue@ScSortItem@@UBEEAAVAny@uno@star@sun@com@@E@Z
+??0ScQueryItem@@QAE@GPAVScViewData@@PBUScQueryParam@@@Z
+??_7ScQueryItem@@6B@
+??8ScQueryItem@@UBEHABVSfxPoolItem@@@Z
+?Clone@ScQueryItem@@UBEPAVSfxPoolItem@@PAVSfxItemPool@@@Z
+?GetValueText@ScQueryItem@@UBE?AVString@@XZ
+??0ScQueryItem@@QAE@GPBUScQueryParam@@@Z
+??0ScQueryItem@@QAE@ABV0@@Z
+??1ScQueryItem@@UAE@XZ
+?SetAdvancedQuerySource@ScQueryItem@@QAEXPBVScRange@@@Z
+?GetAdvancedQuerySource@ScQueryItem@@QBEEAAVScRange@@@Z
+??0ScSubTotalItem@@QAE@GPAVScViewData@@PBUScSubTotalParam@@@Z
+??_7ScSubTotalItem@@6B@
+??8ScSubTotalItem@@UBEHABVSfxPoolItem@@@Z
+?QueryValue@ScSubTotalItem@@UBEEAAVAny@uno@star@sun@com@@E@Z
+?Clone@ScSubTotalItem@@UBEPAVSfxPoolItem@@PAVSfxItemPool@@@Z
+?GetValueText@ScSubTotalItem@@UBE?AVString@@XZ
+??0ScSubTotalItem@@QAE@GPBUScSubTotalParam@@@Z
+??0ScSubTotalItem@@QAE@ABV0@@Z
+??1ScSubTotalItem@@UAE@XZ
+??0ScUserListItem@@QAE@G@Z
+??_7ScUserListItem@@6B@
+??8ScUserListItem@@UBEHABVSfxPoolItem@@@Z
+?Clone@ScUserListItem@@UBEPAVSfxPoolItem@@PAVSfxItemPool@@@Z
+?GetValueText@ScUserListItem@@UBE?AVString@@XZ
+??0ScUserListItem@@QAE@ABV0@@Z
+??1ScUserListItem@@UAE@XZ
+?SetUserList@ScUserListItem@@QAEXABVScUserList@@@Z
+??0ScSortItem@@QAE@GPAVScViewData@@PBUScSortParam@@@Z
+??_7ScSortItem@@6B@
+?Clone@ScSortItem@@UBEPAVSfxPoolItem@@PAVSfxItemPool@@@Z
+??0ScSortItem@@QAE@GPBUScSortParam@@@Z
+??0ScSortItem@@QAE@ABV0@@Z
+??1ScSortItem@@UAE@XZ
+?pStarCalcDoc@ScDocShell@@0QBDB
+?pStyleName@ScDocShell@@0QBDB
+?pInterface@ScDocShell@@2PAVSfxInterface@@A
+?pSfxFormalArgs_Impl@ScDocShell@@2PBUSfxFormalArgument@@B
+?pObjectFactory@ScDocShell@@0PAVSfxObjectFactory@@A
+??0ScImportOptions@@QAE@XZ
+??0ScImportOptions@@QAE@GGABVString@@@Z
+??0ScImportOptions@@QAE@GGG@Z
+??0ScImportOptions@@QAE@ABV0@@Z
+??4ScImportOptions@@QAEAAV0@ABV0@@Z
+??8ScImportOptions@@QAEEABV0@@Z
+??1ScImportOptions@@QAE@XZ
+?InvalidateGfx@ScCsvControl@@QAEXXZ
+?ValidateGfx@ScCsvControl@@QAEXXZ
+?IsValidGfx@ScCsvControl@@QBE_NXZ
+?IsNoRepaint@ScCsvControl@@QBE_NXZ
+?SetCmdHdl@ScCsvControl@@QAEXABVLink@@@Z
+?GetCmdHdl@ScCsvControl@@QBEABVLink@@XZ
+?GetCmd@ScCsvControl@@QBEABVScCsvCmd@@XZ
+?GetLayoutData@ScCsvControl@@QBEABUScCsvLayoutData@@XZ
+?IsRTL@ScCsvControl@@QBE_NXZ
+?GetPosCount@ScCsvControl@@QBEJXZ
+?GetFirstVisPos@ScCsvControl@@QBEJXZ
+?GetLastVisPos@ScCsvControl@@QBEJXZ
+?GetHdrWidth@ScCsvControl@@QBEJXZ
+?GetCharWidth@ScCsvControl@@QBEJXZ
+?GetLineCount@ScCsvControl@@QBEJXZ
+?GetFirstVisLine@ScCsvControl@@QBEJXZ
+?GetHdrHeight@ScCsvControl@@QBEJXZ
+?GetLineHeight@ScCsvControl@@QBEJXZ
+?GetRulerCursorPos@ScCsvControl@@QBEJXZ
+?GetGridCursorPos@ScCsvControl@@QBEJXZ
+?GetSplits@ScCsvRuler@@QBEABVScCsvSplits@@XZ
+?GetSplitPos@ScCsvRuler@@QBEJK@Z
+?HasSplit@ScCsvRuler@@QBE_NJ@Z
+?GetWidth@ScCsvRuler@@ABEJXZ
+?GetHeight@ScCsvRuler@@ABEJXZ
+?GetColumnPos@ScCsvGrid@@QBEJK@Z
+?GetColumnStates@ScCsvGrid@@QBEABV?$vector@UScCsvColState@@V?$allocator@UScCsvColState@@@_STL@@@_STL@@XZ
+?HasSelection@ScCsvGrid@@QBE_NXZ
+?GetFocusColumn@ScCsvGrid@@QBEKXZ
+?GetWidth@ScCsvGrid@@ABEJXZ
+?GetHeight@ScCsvGrid@@ABEJXZ
+?GetSelColumnType@ScCsvTableBox@@QBEJXZ
+?SetUpdateTextHdl@ScCsvTableBox@@QAEXABVLink@@@Z
+?GetUpdateTextHdl@ScCsvTableBox@@QBEABVLink@@XZ
+?SetColTypeHdl@ScCsvTableBox@@QAEXABVLink@@@Z
+?GetColTypeHdl@ScCsvTableBox@@QBEABVLink@@XZ
+?GetStaticInterface@ScDocShell@@SAPAVSfxInterface@@XZ
+?InitInterface_Impl@ScDocShell@@CAXXZ
+?GetInterface@ScDocShell@@UBEPAVSfxInterface@@XZ
+?RegisterInterface@ScDocShell@@SAXPAVSfxModule@@@Z
+?Factory@ScDocShell@@SAAAVSfxObjectFactory@@XZ
+?CreateType@ScDocShell@@SAPAXXZ
+?StaticType@ScDocShell@@SAP6APAXXZXZ
+?Type@ScDocShell@@UBEP6APAXXZXZ
+?IsOf@ScDocShell@@SAEP6APAXXZ@Z
+?IsA@ScDocShell@@UBEEP6APAXXZ@Z
+?FillClass@ScDocShell@@UBEXPAVSvGlobalName@@PAKPAVString@@22J@Z
+?DoEnterHandler@ScDocShell@@AAEXXZ
+?GetSaveTab@ScDocShell@@AAEFXZ
+?GetHiddenInformationState@ScDocShell@@UAEGG@Z
+?Notify@ScDocShell@@MAEXAAVSfxBroadcaster@@ABVSfxHint@@@Z
+?IsInformationLost@ScDocShell@@UAEEXZ
+?AsciiSave@ScDocShell@@QAEXAAVSvStream@@ABVScImportOptions@@@Z
+?SaveCompleted@ScDocShell@@UAEEABV?$Reference@VXStorage@embed@star@sun@com@@@uno@star@sun@com@@@Z
+?DoSaveCompleted@ScDocShell@@UAEEPAVSfxMedium@@@Z
+?PrepareClose@ScDocShell@@UAEGEE@Z
+?PrepareReload@ScDocShell@@UAEXXZ
+?GetOwnFilterName@ScDocShell@@SA?AVString@@XZ
+?GetWebQueryFilterName@ScDocShell@@SA?AVString@@XZ
+?GetAsciiFilterName@ScDocShell@@SA?AVString@@XZ
+?GetLotusFilterName@ScDocShell@@SA?AVString@@XZ
+?GetDBaseFilterName@ScDocShell@@SA?AVString@@XZ
+?GetDifFilterName@ScDocShell@@SA?AVString@@XZ
+?HasAutomaticTableName@ScDocShell@@SAEABVString@@@Z
+??0ScDocShell@@QAE@ABV0@@Z
+??_7ScDocShell@@6BSotObject@@@
+??_7ScDocShell@@6BSvRefBase@@@
+??_7ScDocShell@@6BSfxListener@@@
+??_7ScDocShell@@6BSfxObjectShell@@@
+??_8ScDocShell@@7BSotObject@@@
+??_8ScDocShell@@7BSfxObjectShell@@@
+?GetUndoManager@ScDocShell@@UAEPAVSfxUndoManager@@XZ
+?ConvertFrom@ScDocShell@@UAEEAAVSfxMedium@@@Z
+?ConvertTo@ScDocShell@@UAEEAAVSfxMedium@@@Z
+?Load@ScDocShell@@UAEEAAVSfxMedium@@@Z
+?LoadFrom@ScDocShell@@UAEEAAVSfxMedium@@@Z
+?Save@ScDocShell@@UAEEXZ
+?SaveAs@ScDocShell@@UAEEAAVSfxMedium@@@Z
+?CreateDocumentInfoDialog@ScDocShell@@UAEPAVSfxDocumentInfoDialog@@PAVWindow@@ABVSfxItemSet@@@Z
+?SetModified@ScDocShell@@UAEXE@Z
+??0ScDocShell@@QAE@W4SfxObjectCreateMode@@@Z
+?SetDrawModified@ScDocShell@@QAEXE@Z
+?SetInUndo@ScDocShell@@QAEXE@Z
+?GetActiveDialogParent@ScDocShell@@QAEPAVWindow@@XZ
+??0ScDocShellModificator@@QAE@AAVScDocShell@@@Z
+?GetSplitCount@ScCsvRuler@@QBEKXZ
+?GetColumnCount@ScCsvGrid@@QBEKXZ
+?ImplSetPosOffset@ScCsvTableBox@@AAEXJ@Z
+?ImplSetLineOffset@ScCsvTableBox@@AAEXJ@Z
+?BeforeXMLLoading@ScDocShell@@QAEXXZ
+?SaveXML@ScDocShell@@AAEEPAVSfxMedium@@ABV?$Reference@VXStorage@embed@star@sun@com@@@uno@star@sun@com@@@Z
+?SetDocumentModified@ScDocShell@@QAEXE@Z
+?GetDocStat@ScDocShell@@QAEXAAUScDocStat@@@Z
+??1ScDocShellModificator@@QAE@XZ
+?SetDocumentModified@ScDocShellModificator@@QAEXXZ
+??1ScDocShell@@UAE@XZ
+?AfterXMLLoading@ScDocShell@@QAEXE@Z
+?LoadXML@ScDocShell@@AAEEPAVSfxMedium@@ABV?$Reference@VXStorage@embed@star@sun@com@@@uno@star@sun@com@@@Z
+??1ScCsvRuler@@UAE@XZ
+??1ScCsvTableBox@@UAE@XZ
+?IsEmpty@ScDocShell@@QBEEXZ
+?ResetEmpty@ScDocShell@@QAEXXZ
+?ResetDrawObjectShell@ScDocShell@@AAEXXZ
+?Activate@ScDocShell@@UAEXXZ
+?Deactivate@ScDocShell@@UAEXXZ
+?InitItems@ScDocShell@@AAEXXZ
+?MakeDrawLayer@ScDocShell@@QAEPAVScDrawLayer@@XZ
+?InitNew@ScDocShell@@UAEEABV?$Reference@VXStorage@embed@star@sun@com@@@uno@star@sun@com@@@Z
+?RemoveUnknownObjects@ScDocShell@@AAEXXZ
+?PostEditView@ScDocShell@@QAEXPAVScEditEngineDefaulter@@ABVScAddress@@@Z
+?PostDataChanged@ScDocShell@@QAEXXZ
+?PostPaint@ScDocShell@@QAEXFJFFJFGG@Z
+?PostPaint@ScDocShell@@QAEXABVScRange@@GG@Z
+?PostPaintGridAll@ScDocShell@@QAEXXZ
+?PostPaintCell@ScDocShell@@QAEXFJF@Z
+?PostPaintExtras@ScDocShell@@QAEXXZ
+?UpdatePaintExt@ScDocShell@@QAEXAAGABVScRange@@@Z
+?UpdatePaintExt@ScDocShell@@QAEXAAGFJFFJF@Z
+?LockPaint_Impl@ScDocShell@@AAEXE@Z
+?LockDocument_Impl@ScDocShell@@AAEXG@Z
+?UnlockDocument_Impl@ScDocShell@@AAEXG@Z
+?GetLockCount@ScDocShell@@QBEGXZ
+?LockPaint@ScDocShell@@QAEXXZ
+?LockDocument@ScDocShell@@QAEXXZ
+?GetOutputFactor@ScDocShell@@QBENXZ
+?GetDocumentPrinter@ScDocShell@@UAEPAVPrinter@@XZ
+?GetPrinter@ScDocShell@@QAEPAVSfxPrinter@@E@Z
+?GetRefDevice@ScDocShell@@QAEPAVOutputDevice@@XZ
+?GetChangeAction@ScDocShell@@QAEPAVScChangeAction@@ABVScAddress@@@Z
+?SetChangeComment@ScDocShell@@QAEXPAVScChangeAction@@ABVString@@@Z
+?CompareDocument@ScDocShell@@QAEXAAVScDocument@@@Z
+?UnlockPaint_Impl@ScDocShell@@AAEXE@Z
+?SetLockCount@ScDocShell@@QAEXG@Z
+?UnlockPaint@ScDocShell@@QAEXXZ
+?UnlockDocument@ScDocShell@@QAEXXZ
+?CalcOutputFactor@ScDocShell@@QAEXXZ
+?InitOptions@ScDocShell@@AAEXXZ
+?UpdateFontList@ScDocShell@@QAEXXZ
+?SetPrinter@ScDocShell@@QAEGPAVSfxPrinter@@G@Z
+?ExecuteChangeCommentDialog@ScDocShell@@QAEXPAVScChangeAction@@PAVWindow@@E@Z
+?MergeDocument@ScDocShell@@QAEXAAVScDocument@@@Z
+?SetInplace@ScDocShell@@QAEXE@Z
+?GetDocShell@ScDocumentLoader@@QAEPAVScDocShell@@XZ
+??0ScDocumentLoader@@QAE@ABV0@@Z
+??4ScDocumentLoader@@QAEAAV0@ABV0@@Z
+?DoAutoStyle@ScDocShell@@QAEXABVScRange@@ABVString@@@Z
+?CheckPrint@ScDocShell@@QAE_NPAVPrintDialog@@PAVScMarkData@@_N2@Z
+?Draw@ScDocShell@@UAEXPAVOutputDevice@@ABVJobSetup@@G@Z
+?GetVisArea@ScDocShell@@UBE?AVRectangle@@G@Z
+?GetPageOnFromPageStyleSet@ScDocShell@@QAEXPBVSfxItemSet@@FAAE1@Z
+?DdeSetData@ScDocShell@@UAEJABVString@@0ABVAny@uno@star@sun@com@@@Z
+?DdeCreateLinkSource@ScDocShell@@UAEPAVSvLinkSource@sfx2@@ABVString@@@Z
+?GetViewData@ScDocShell@@SAPAVScViewData@@XZ
+?GetCurTab@ScDocShell@@SAFXZ
+?GetBestViewShell@ScDocShell@@QAEPAVScTabViewShell@@XZ
+?GetViewBindings@ScDocShell@@QAEPAVSfxBindings@@XZ
+?GetShellByNum@ScDocShell@@SAPAV1@G@Z
+?LinkStubDialogClosedHdl@ScDocShell@@SAJPAX0@Z
+?DialogClosedHdl@ScDocShell@@QAEJPAVFileDialogHelper@sfx2@@@Z
+?GetTabParam@ScDocShell@@AAEEPBVSfxItemSet@@GAAF@Z
+?DoRecalc@ScDocShell@@QAEXE@Z
+?DoHardRecalc@ScDocShell@@QAEXE@Z
+?NotifyStyle@ScDocShell@@QAEXABVSfxStyleSheetHint@@@Z
+?SetPrintZoom@ScDocShell@@QAEXFGG@Z
+?AdjustPrintZoom@ScDocShell@@QAEEABVScRange@@@Z
+?PageStyleModified@ScDocShell@@QAEXABVString@@E@Z
+?ExecutePageStyle@ScDocShell@@QAEXAAVSfxViewShell@@AAVSfxRequest@@F@Z
+?GetStatePageStyle@ScDocShell@@QAEXAAVSfxViewShell@@AAVSfxItemSet@@F@Z
+?Print@ScDocShell@@QAEXAAVSfxProgress@@PAVPrintDialog@@PAVScMarkData@@PAVWindow@@EE@Z
+?GetState@ScDocShell@@QAEXAAVSfxItemSet@@@Z
+?GetSbxState@ScDocShell@@QAEXAAVSfxItemSet@@@Z
+?PreparePrint@ScDocShell@@QAEXPAVPrintDialog@@PAVScMarkData@@@Z
+?ExecuteChangeProtectionDialog@ScDocShell@@QAEEPAVWindow@@E@Z
+?DdeGetData@ScDocShell@@UAEJABVString@@0AAVAny@uno@star@sun@com@@@Z
+?Execute@ScDocShell@@QAEXAAVSfxRequest@@@Z
+?GetSaveData@ScDPObject@@QBEPAVScDPSaveData@@XZ
+?GetOutRange@ScDPObject@@QBEABVScRange@@XZ
+?GetSheetDesc@ScDPObject@@QBEPBUScSheetSourceDesc@@XZ
+?GetImportSourceDesc@ScDPObject@@QBEPBUScImportSourceDesc@@XZ
+?GetDPServiceDesc@ScDPObject@@QBEPBUScDPServiceDesc@@XZ
+?IsImportData@ScDPObject@@QBEEXZ
+?IsServiceData@ScDPObject@@QBEEXZ
+?GetName@ScDPObject@@QBEABVString@@XZ
+?GetTag@ScDPObject@@QBEABVString@@XZ
+?ErrorMessage@ScDocShell@@QAEXG@Z
+?IsEditable@ScDocShell@@QBEEXZ
+?DBAreaDeleted@ScDocShell@@QAEXFFJFJ@Z
+?GetDBData@ScDocShell@@QAEPAVScDBData@@ABVScRange@@W4ScGetDBMode@@E@Z
+?GetOldAutoDBRange@ScDocShell@@QAEPAVScDBData@@XZ
+?CancelAutoDBRange@ScDocShell@@QAEXXZ
+?AdjustRowHeight@ScDocShell@@QAEEJJF@Z
+?UpdateAllRowHeights@ScDocShell@@AAEXXZ
+?PivotUpdate@ScDocShell@@QAEXPAVScPivot@@0EE@Z
+?RefreshPivotTables@ScDocShell@@QAEXABVScRange@@@Z
+?UseScenario@ScDocShell@@QAEXFABVString@@E@Z
+?ModifyScenario@ScDocShell@@QAEXFABVString@@0ABVColor@@G@Z
+?MakeScenario@ScDocShell@@QAEFFABVString@@0ABVColor@@GAAVScMarkData@@E@Z
+?MoveTable@ScDocShell@@QAEEFFEE@Z
+?DoConsolidate@ScDocShell@@QAEXABUScConsolidateParam@@E@Z
+?RefreshDBDataHdl@ScDocShell@@QAEJPAVScRefreshTimer@@@Z
+?LinkStubRefreshDBDataHdl@ScDocShell@@SAJPAX0@Z
+??4ScDPObject@@QAEAAV0@ABV0@@Z
+?IsOle@ScDocShell@@QAEEXZ
+?GetStyleSheetPool@ScDocShell@@UAEPAVSfxStyleSheetBasePool@@XZ
+?LoadStyles@ScDocShell@@UAEXAAVSfxObjectShell@@@Z
+?LoadStylesArgs@ScDocShell@@QAEXAAV1@EEE@Z
+?Insert@ScDocShell@@UAEEAAVSfxObjectShell@@GGGAAG111@Z
+?UpdateLinks@ScDocShell@@UAEXXZ
+?ReloadTabLinks@ScDocShell@@QAEEXZ
+?SetVisAreaOrSize@ScDocShell@@QAEXABVRectangle@@E@Z
+?UpdateOle@ScDocShell@@QAEXPBVScViewData@@E@Z
+?SetVisArea@ScDocShell@@UAEXABVRectangle@@@Z
+?GetDrawObjState@ScDocShell@@QAEXAAVSfxItemSet@@@Z
+?KillFile@ScDocShell@@CAEABVINetURLObject@@@Z
+?IsDocument@ScDocShell@@CAEABVINetURLObject@@@Z
+?MoveFile@ScDocShell@@CAEABVINetURLObject@@0@Z
+?DBaseImport@ScDocShell@@AAEKABVString@@GQAE@Z
+?DBaseExport@ScDocShell@@AAEKABVString@@GAAE@Z
+?GetOptions@ScDocumentLoader@@SA?AVString@@AAVSfxMedium@@@Z
+?GetFilterName@ScDocumentLoader@@SAEABVString@@AAV2@1EE@Z
+?RemoveAppPrefix@ScDocumentLoader@@SAXAAVString@@@Z
+??0ScDocumentLoader@@QAE@ABVString@@AAV1@1KE@Z
+??1ScDocumentLoader@@QAE@XZ
+?ReleaseDocRef@ScDocumentLoader@@QAEXXZ
+?GetDocument@ScDocumentLoader@@QAEPAVScDocument@@XZ
+?IsError@ScDocumentLoader@@QBEEXZ
+?GetTitle@ScDocumentLoader@@QBE?AVString@@XZ
+?Query@ScDBDocFunc@@QAEEFABUScQueryParam@@PBVScRange@@EE@Z
+?Clone@ScAutoFormatData@@UBEPAVDataObject@@XZ
+?SetName@ScAutoFormatData@@QAEXABVString@@@Z
+?GetName@ScAutoFormatData@@QBEXAAVString@@@Z
+?GetIncludeValueFormat@ScAutoFormatData@@QBEEXZ
+?GetIncludeFont@ScAutoFormatData@@QBEEXZ
+?GetIncludeJustify@ScAutoFormatData@@QBEEXZ
+?GetIncludeFrame@ScAutoFormatData@@QBEEXZ
+?GetIncludeBackground@ScAutoFormatData@@QBEEXZ
+?GetIncludeWidthHeight@ScAutoFormatData@@QBEEXZ
+?SetIncludeValueFormat@ScAutoFormatData@@QAEXE@Z
+?SetIncludeFont@ScAutoFormatData@@QAEXE@Z
+?SetIncludeJustify@ScAutoFormatData@@QAEXE@Z
+?SetIncludeFrame@ScAutoFormatData@@QAEXE@Z
+?SetIncludeBackground@ScAutoFormatData@@QAEXE@Z
+?SetIncludeWidthHeight@ScAutoFormatData@@QAEXE@Z
+?Clone@ScAutoFormat@@UBEPAVDataObject@@XZ
+??AScAutoFormat@@QBEPAVScAutoFormatData@@G@Z
+?IsSaveLater@ScAutoFormat@@QBEEXZ
+??4ScAutoFormat@@QAEAAV0@ABV0@@Z
+??_FScAutoFormat@@QAEXXZ
+??4ScAutoFormatData@@QAEAAV0@ABV0@@Z
+?SetWidthOrHeight@ScDocFunc@@QAEEEJPAJFW4ScSizeMode@@GEE@Z
+?ScrollLines@ScTabView@@QAEXJJ@Z
+?CellContentChanged@ScTabView@@QAEXXZ
+?SetCursor@ScTabView@@QAEXFJE@Z
+?MoveCursorAbs@ScTabView@@QAEXFJW4ScFollowMode@@EEEE@Z
+?InsertPageBreak@ScViewFunc@@QAEXEEPBVScAddress@@E@Z
+?DeletePageBreak@ScViewFunc@@QAEXEEPBVScAddress@@E@Z
+?CopyToClip@ScViewFunc@@QAEEPAVScDocument@@EEEE@Z
+?PasteFromClip@ScViewFunc@@QAEEGPAVScDocument@@GEEEW4InsCellCmd@@GE@Z
+?CutToClip@ScViewFunc@@QAEXPAVScDocument@@E@Z
+?PasteFromSystem@ScViewFunc@@QAEEKE@Z
+?PasteFromSystem@ScViewFunc@@QAEXXZ
+?pFactory@ScTabViewShell@@0PAVSfxViewFactory@@A
+?pInterface@ScTabViewShell@@2PAVSfxInterface@@A
+?pSfxFormalArgs_Impl@ScTabViewShell@@2PBUSfxFormalArgument@@B
+?CreateType@ScTabViewShell@@SAPAXXZ
+?StaticType@ScTabViewShell@@SAP6APAXXZXZ
+?Type@ScTabViewShell@@UBEP6APAXXZXZ
+?IsOf@ScTabViewShell@@SAEP6APAXXZ@Z
+?IsA@ScTabViewShell@@UBEEP6APAXXZ@Z
+?GetStaticInterface@ScTabViewShell@@SAPAVSfxInterface@@XZ
+?InitInterface_Impl@ScTabViewShell@@CAXXZ
+?GetInterface@ScTabViewShell@@UBEPAVSfxInterface@@XZ
+?RegisterInterface@ScTabViewShell@@SAXPAVSfxModule@@@Z
+?CreateInstance@ScTabViewShell@@SAPAVSfxViewShell@@PAVSfxViewFrame@@PAV2@@Z
+?InitFactory@ScTabViewShell@@SAXXZ
+?RegisterFactory@ScTabViewShell@@SAXG@Z
+?GetDrawView@ScTabViewShell@@MBEPAVSdrView@@XZ
+?WindowChanged@ScTabViewShell@@QAEXXZ
+?ExecDraw@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?GetDrawState@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?SelectObject@ScTabViewShell@@QAEEABVString@@@Z
+?Execute@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?nInsertCtrlState@ScTabViewShell@@0GA
+?nInsCellsCtrlState@ScTabViewShell@@0GA
+?nInsObjCtrlState@ScTabViewShell@@0GA
+?Deactivate@ScTabViewShell@@MAEXE@Z
+?SetActive@ScTabViewShell@@QAEXXZ
+?GetOptimalSizePixel@ScTabViewShell@@MBE?AVSize@@XZ
+?UpdateOleZoom@ScTabViewShell@@QAEXXZ
+?AdjustPosSizePixel@ScTabViewShell@@MAEXABVPoint@@ABVSize@@@Z
+?InnerResizePixel@ScTabViewShell@@MAEXABVPoint@@ABVSize@@@Z
+?OuterResizePixel@ScTabViewShell@@MAEXABVPoint@@ABVSize@@@Z
+?SetZoomFactor@ScTabViewShell@@MAEXABVFraction@@0@Z
+?QueryObjAreaPixel@ScTabViewShell@@MBEXAAVRectangle@@@Z
+?Move@ScTabViewShell@@MAEXXZ
+?ShowCursor@ScTabViewShell@@MAEXH@Z
+?WriteUserData@ScTabViewShell@@MAEXAAVString@@E@Z
+?WriteUserDataSequence@ScTabViewShell@@MAEXAAV?$Sequence@UPropertyValue@beans@star@sun@com@@@uno@star@sun@com@@E@Z
+?TestFunction@ScTabViewShell@@QAEXG@Z
+?ExecuteShowNIY@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?StateDisabled@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?SetCurSubShell@ScTabViewShell@@QAEXW4ObjectSelectionType@@E@Z
+?GetCurObjectSelectionType@ScTabViewShell@@QAE?AW4ObjectSelectionType@@XZ
+?GetMySubShell@ScTabViewShell@@ABEPAVSfxShell@@XZ
+?SetMySubShell@ScTabViewShell@@AAEXPAVSfxShell@@@Z
+?IsDrawTextShell@ScTabViewShell@@QBEEXZ
+?IsAuditShell@ScTabViewShell@@QBEEXZ
+?SetDrawTextUndo@ScTabViewShell@@QAEXPAVSfxUndoManager@@@Z
+?GetActiveViewShell@ScTabViewShell@@SAPAV1@XZ
+?GetPrinter@ScTabViewShell@@UAEPAVSfxPrinter@@E@Z
+?SetPrinter@ScTabViewShell@@UAEGPAVSfxPrinter@@G_N@Z
+?CreatePrintDialog@ScTabViewShell@@UAEPAVPrintDialog@@PAVWindow@@@Z
+?CreatePrintOptionsPage@ScTabViewShell@@UAEPAVSfxTabPage@@PAVWindow@@ABVSfxItemSet@@@Z
+?PreparePrint@ScTabViewShell@@UAEXPAVPrintDialog@@@Z
+?DoPrint@ScTabViewShell@@UAEKPAVSfxPrinter@@PAVPrintDialog@@EE@Z
+?SimpleRefClose@ScTabViewShell@@AAEJPAVString@@@Z
+?StopSimpleRefDialog@ScTabViewShell@@QAEXXZ
+?SetDialogDPObject@ScTabViewShell@@QAEXPBVScDPObject@@@Z
+?FillFieldData@ScTabViewShell@@QAEXAAUScHeaderFieldData@@@Z
+?SetChartArea@ScTabViewShell@@QAEXABVScRangeListRef@@ABVRectangle@@@Z
+?ResetChartArea@ScTabViewShell@@QAEXXZ
+?GetChartArea@ScTabViewShell@@QBEEAAVScRangeListRef@@AAVRectangle@@AAF@Z
+?IsChartDlgEdit@ScTabViewShell@@QBEEXZ
+?GetEditChartName@ScTabViewShell@@QBEABVString@@XZ
+?GetNavigatorSettings@ScTabViewShell@@QAEPAVScNavigatorSettings@@XZ
+?ExecTbx@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?GetTbxState@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?PrepareClose@ScTabViewShell@@MAEGEE@Z
+?DoReadUserDataSequence@ScTabViewShell@@AAEXABV?$Sequence@UPropertyValue@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?DoReadUserData@ScTabViewShell@@AAEXABVString@@@Z
+?SetDrawShellOrSub@ScTabViewShell@@QAEXXZ
+?SetDrawShell@ScTabViewShell@@QAEXE@Z
+?SetDrawTextShell@ScTabViewShell@@QAEXE@Z
+?SetPivotShell@ScTabViewShell@@QAEXE@Z
+?SetAuditShell@ScTabViewShell@@QAEXE@Z
+?SetDrawFormShell@ScTabViewShell@@QAEXE@Z
+?SetChartShell@ScTabViewShell@@QAEXE@Z
+?SetGraphicShell@ScTabViewShell@@QAEXE@Z
+?SetMediaShell@ScTabViewShell@@QAEXE@Z
+?SetOleObjectShell@ScTabViewShell@@QAEXE@Z
+?SetEditShell@ScTabViewShell@@QAEXPAVEditView@@E@Z
+?SetFormShellAtTop@ScTabViewShell@@QAEXE@Z
+?FormControlActivated@ScTabViewShell@@AAEJPAVFmFormShell@@@Z
+?StopEditShell@ScTabViewShell@@QAEXXZ
+?LinkStubSimpleRefClose@ScTabViewShell@@CAJPAX0@Z
+?SimpleRefDone@ScTabViewShell@@AAEJPAVString@@@Z
+?SimpleRefAborted@ScTabViewShell@@AAEJPAVString@@@Z
+?SimpleRefChange@ScTabViewShell@@AAEJPAVString@@@Z
+?TabKeyInput@ScTabViewShell@@QAEEABVKeyEvent@@@Z
+?SfxKeyInput@ScTabViewShell@@QAEEABVKeyEvent@@@Z
+?KeyInput@ScTabViewShell@@MAEHABVKeyEvent@@@Z
+?ReadUserData@ScTabViewShell@@MAEXABVString@@E@Z
+?ReadUserDataSequence@ScTabViewShell@@MAEXABV?$Sequence@UPropertyValue@beans@star@sun@com@@@uno@star@sun@com@@E@Z
+?LinkStubFormControlActivated@ScTabViewShell@@CAJPAX0@Z
+?LinkStubSimpleRefDone@ScTabViewShell@@CAJPAX0@Z
+?LinkStubSimpleRefAborted@ScTabViewShell@@CAJPAX0@Z
+?LinkStubSimpleRefChange@ScTabViewShell@@CAJPAX0@Z
+?StartSimpleRefDialog@ScTabViewShell@@QAEXABVString@@0EEE@Z
+?Activate@ScTabViewShell@@MAEXE@Z
+?Construct@ScTabViewShell@@AAEXE@Z
+??0ScTabViewShell@@QAE@PAVSfxViewFrame@@ABV0@@Z
+??_7ScTabViewShell@@6BSfxListener@@@
+??_7ScTabViewShell@@6BSfxShell@@@
+?Print@ScTabViewShell@@UAEGAAVSfxProgress@@EPAVPrintDialog@@@Z
+??0ScTabViewShell@@QAE@PAVSfxViewFrame@@PAVSfxViewShell@@@Z
+??1ScTabViewShell@@UAE@XZ
+?Notify@ScTabViewShell@@UAEXAAVSfxBroadcaster@@ABVSfxHint@@@Z
+?MakeNumberInfoItem@ScTabViewShell@@QAEXPAVScDocument@@PAVScViewData@@PAPAVSvxNumberInfoItem@@@Z
+?UpdateNumberFormatter@ScTabViewShell@@QAEXPAVScDocument@@ABVSvxNumberInfoItem@@@Z
+?SetDefaultFrameLine@ScTabViewShell@@QAEXPBVSvxBorderLine@@@Z
+?HasSelection@ScTabViewShell@@MBEEE@Z
+?UIDeactivated@ScTabViewShell@@MAEXPAVSfxInPlaceClient@@@Z
+?ExecChildWin@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?GetChildWinState@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?ExecGallery@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?GetGalleryState@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?GetInputHandler@ScTabViewShell@@QBEPAVScInputHandler@@XZ
+?GetDescription@ScTabViewShell@@MBE?AVString@@XZ
+?ExecImageMap@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?GetImageMapState@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?GetFunction@ScTabViewShell@@QAEEAAVString@@@Z
+?GetState@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?ExecuteCellFormatDlg@ScTabViewShell@@QAEXAAVSfxRequest@@G@Z
+?ExecuteInputDirect@ScTabViewShell@@QAEXXZ
+?ExecuteSave@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?GetSaveState@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?ExecuteUndo@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?GetUndoState@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?GetDrawOptState@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?UpdateInputHandler@ScTabViewShell@@QAEXEE@Z
+?ExecDrawOpt@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?DeactivateOle@ScTabViewShell@@QAEXXZ
+?GetDrawInsState@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?ConnectObject@ScTabViewShell@@QAEXPAVSdrOle2Obj@@@Z
+?ExecDrawIns@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?ActivateObject@ScTabViewShell@@QAEEPAVSdrOle2Obj@@J@Z
+?DoVerb@ScTabViewShell@@UAEKJ@Z
+??1ScExpandedFixedText@@UAE@XZ
+?SetCurRefDlgId@ScTabViewShell@@QAEXG@Z
+?CreateRefDialog@ScTabViewShell@@QAEPAVSfxModelessDialog@@PAVSfxBindings@@PAVSfxChildWindow@@PAUSfxChildWinInfo@@PAVWindow@@G@Z
+?GetDialogParent@ScTabViewShell@@QAEPAVWindow@@XZ
+?GetSelectionText@ScTabViewShell@@MAE?AVString@@E@Z
+?InsertURLField@ScTabViewShell@@QAEXABVString@@00@Z
+?ExecSearch@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?InsertURL@ScTabViewShell@@QAEXABVString@@00G@Z
+?ExecuteTable@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?GetStateTable@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?InsertURLButton@ScTabViewShell@@QAEXABVString@@00PBVPoint@@@Z
+?ExecuteSbx@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?GetSbxState@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?ExecuteObject@ScTabViewShell@@QAEXAAVSfxRequest@@@Z
+?AddAccessibilityObject@ScTabViewShell@@QAEXAAVSfxListener@@@Z
+?RemoveAccessibilityObject@ScTabViewShell@@QAEXAAVSfxListener@@@Z
+?BroadcastAccessibility@ScTabViewShell@@QAEXABVSfxHint@@@Z
+?HasAccessibilityObjects@ScTabViewShell@@QAEEXZ
+?GetObjectState@ScTabViewShell@@QAEXAAVSfxItemSet@@@Z
+?InitData@ScViewData@@QAEXPAVScDocument@@@Z
+?GetDocument@ScViewData@@QBEPAVScDocument@@XZ
+?UpdateThis@ScViewData@@QAEXXZ
+?InsertTab@ScViewData@@QAEXF@Z
+?DeleteTab@ScViewData@@QAEXF@Z
+?CopyTab@ScViewData@@QAEXFF@Z
+?MoveTab@ScViewData@@QAEXFF@Z
+?UpdateOle@ScViewData@@QAEXW4ScSplitPos@@@Z
+?SetViewShell@ScViewData@@QAEXPAVScTabViewShell@@@Z
+?GetSimpleArea@ScViewData@@QAEEAAFAAJ0010@Z
+?GetSimpleArea@ScViewData@@QAEEAAVScRange@@@Z
+?SimpleColMarked@ScViewData@@QAEEXZ
+?SimpleRowMarked@ScViewData@@QAEEXZ
+?IsMultiMarked@ScViewData@@QAEEXZ
+?SetFillMode@ScViewData@@QAEXFJFJ@Z
+?SetDragMode@ScViewData@@QAEXFJFJE@Z
+?ResetFillMode@ScViewData@@QAEXXZ
+?GetFillData@ScViewData@@QAEXAAFAAJ01@Z
+?GetOldCurX@ScViewData@@QBEFXZ
+?GetOldCurY@ScViewData@@QBEJXZ
+?SetOldCursor@ScViewData@@QAEXFJ@Z
+?ResetOldCursor@ScViewData@@QAEXXZ
+?EmptyEditHdl@ScViewData@@AAEJPAVEditStatus@@@Z
+?LinkStubEmptyEditHdl@ScViewData@@CAJPAX0@Z
+?ResetEditView@ScViewData@@QAEXXZ
+?KillEditView@ScViewData@@QAEXXZ
+?GetEditView@ScViewData@@QAEXW4ScSplitPos@@AAPAVEditView@@AAFAAJ@Z
+?SetActivePart@ScViewData@@QAEXW4ScSplitPos@@@Z
+?GetLogicMode@ScViewData@@QAEABVMapMode@@W4ScSplitPos@@@Z
+?GetLogicMode@ScViewData@@QAEABVMapMode@@XZ
+?GetSfxDocShell@ScViewData@@QBEPAVSfxObjectShell@@XZ
+?GetBindings@ScViewData@@QAEAAVSfxBindings@@XZ
+?GetDispatcher@ScViewData@@QAEAAVSfxDispatcher@@XZ
+?GetDialogParent@ScViewData@@QAEPAVWindow@@XZ
+?GetActiveWin@ScViewData@@QAEPAVWindow@@XZ
+?GetScDrawView@ScViewData@@QAEPAVScDrawView@@XZ
+?IsMinimized@ScViewData@@QAEEXZ
+?CalcPPT@ScViewData@@AAEXXZ
+?WriteUserData@ScViewData@@QAEXAAVString@@@Z
+?WriteExtOptions@ScViewData@@QBEXAAVScExtDocOptions@@@Z
+?SetOptions@ScViewData@@QAEXABVScViewOptions@@@Z
+?GetMousePosPixel@ScViewData@@QAE?AVPoint@@XZ
+?UpdateInputHandler@ScViewData@@QAEXEE@Z
+?IsOle@ScViewData@@QAEEXZ
+?GetCurPos@ScViewData@@QBE?AVScAddress@@XZ
+??0ScViewData@@QAE@PAVScDocShell@@PAVScTabViewShell@@@Z
+??0ScViewData@@QAE@ABV0@@Z
+?SetDocShell@ScViewData@@QAEXPAVScDocShell@@@Z
+?InitFrom@ScViewData@@QAEXPBV1@@Z
+??1ScViewData@@QAE@XZ
+?GetMultiArea@ScViewData@@QAEXAAVScRangeListRef@@@Z
+?GetScrPos@ScViewData@@QBE?AVPoint@@FJW4ScSplitPos@@E@Z
+?CellsAtX@ScViewData@@QBEFFFW4ScHSplitPos@@G@Z
+?CellsAtY@ScViewData@@QBEJJJW4ScVSplitPos@@G@Z
+?VisibleCellsX@ScViewData@@QBEFW4ScHSplitPos@@@Z
+?VisibleCellsY@ScViewData@@QBEJW4ScVSplitPos@@@Z
+?PrevCellsX@ScViewData@@QBEFW4ScHSplitPos@@@Z
+?PrevCellsY@ScViewData@@QBEJW4ScVSplitPos@@@Z
+?LastCellsX@ScViewData@@QBEFW4ScHSplitPos@@@Z
+?LastCellsY@ScViewData@@QBEJW4ScVSplitPos@@@Z
+?GetPosFromPixel@ScViewData@@QAEEJJW4ScSplitPos@@AAFAAJEEE@Z
+?SetPosX@ScViewData@@QAEXW4ScHSplitPos@@F@Z
+?SetPosY@ScViewData@@QAEXW4ScVSplitPos@@J@Z
+?RecalcPixPos@ScViewData@@QAEXXZ
+?SetScreen@ScViewData@@QAEXFJFJ@Z
+?SetScreenPos@ScViewData@@QAEXABVPoint@@@Z
+?SetScreen@ScViewData@@QAEXABVRectangle@@@Z
+?UpdateFixX@ScViewData@@QAEEF@Z
+?UpdateFixY@ScViewData@@QAEEF@Z
+?UpdateOutlinerFlags@ScViewData@@QBEXAAVOutliner@@@Z
+?SetZoom@ScViewData@@QAEXABVFraction@@0@Z
+?SetPagebreakMode@ScViewData@@QAEXE@Z
+?GetEditArea@ScViewData@@QAE?AVRectangle@@W4ScSplitPos@@FJPAVWindow@@PBVScPatternAttr@@E@Z
+?EditGrowX@ScViewData@@QAEXXZ
+?EditGrowY@ScViewData@@QAEXE@Z
+?SetTabNo@ScViewData@@QAEXF@Z
+?GetScrPos@ScViewData@@QBE?AVPoint@@FJW4ScHSplitPos@@@Z
+?GetScrPos@ScViewData@@QBE?AVPoint@@FJW4ScVSplitPos@@@Z
+?UpdateScreenZoom@ScViewData@@QAEXABVFraction@@0@Z
+?ReadUserData@ScViewData@@QAEXABVString@@@Z
+?ReadExtOptions@ScViewData@@QAEXABVScExtDocOptions@@@Z
+?EditEngineHdl@ScViewData@@AAEJPAVEditStatus@@@Z
+?LinkStubEditEngineHdl@ScViewData@@CAJPAX0@Z
+?GetMergeSizePixel@ScViewData@@QAEEFJAAJ0@Z
+?GetMouseQuadrant@ScViewData@@QAEXABVPoint@@W4ScSplitPos@@FJAAE2@Z
+?ReadUserDataSequence@ScViewData@@QAEXABV?$Sequence@UPropertyValue@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?SetEditEngine@ScViewData@@QAEXW4ScSplitPos@@PAVScEditEngineDefaulter@@PAVWindow@@FJ@Z
+?WriteUserDataSequence@ScViewData@@QAEXAAV?$Sequence@UPropertyValue@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?MakeFonts@AutoFmtPreview@@AAEXGAAVFont@@00@Z
+?GetFormatIndex@AutoFmtPreview@@ABEGII@Z
+?GetBoxItem@AutoFmtPreview@@ABEABVSvxBoxItem@@II@Z
+?GetDiagItem@AutoFmtPreview@@ABEABVSvxLineItem@@II_N@Z
+?DrawString@AutoFmtPreview@@AAEXII@Z
+?DrawStrings@AutoFmtPreview@@AAEXXZ
+?DrawBackground@AutoFmtPreview@@AAEXXZ
+?PaintCells@AutoFmtPreview@@AAEXXZ
+?CalcCellArray@AutoFmtPreview@@AAEXE@Z
+?CalcLineMap@AutoFmtPreview@@AAEXXZ
+?DoPaint@AutoFmtPreview@@AAEXABVRectangle@@@Z
+?Paint@AutoFmtPreview@@MAEXABVRectangle@@@Z
+??1AutoFmtPreview@@UAE@XZ
+??_7AutoFmtPreview@@6B@
+?Init@AutoFmtPreview@@AAEXXZ
+?NotifyChange@AutoFmtPreview@@QAEXPAVScAutoFormatData@@@Z
+??0AutoFmtPreview@@QAE@PAVWindow@@ABVResId@@PAVScDocument@@@Z
+??0ScPopupMenu@@QAE@XZ
+??_7ScPopupMenu@@6B@
+??0ScPopupMenu@@QAE@ABVResId@@@Z
+?GetSelected@ScPopupMenu@@QBEGXZ
+?WasHit@ScPopupMenu@@QBEEXZ
+??1ScPopupMenu@@UAE@XZ
+??0ScPopupMenu@@QAE@ABV0@@Z
+??4ScPopupMenu@@QAEAAV0@ABV0@@Z
+?Select@ScPopupMenu@@MAEXXZ
+??0ScExpandedFixedText@@QAE@PAVWindow@@_J@Z
+??_7ScExpandedFixedText@@6B@
+?RequestHelp@ScExpandedFixedText@@MAEXABVHelpEvent@@@Z
+??0ScExpandedFixedText@@QAE@PAVWindow@@ABVResId@@@Z
+??0ScImportOptions@@QAE@ABVString@@@Z
+?BuildString@ScImportOptions@@QBE?AVString@@XZ
+?SetTextEncoding@ScImportOptions@@QAEXG@Z
+?AccSendFocusEvent@ScCsvControl@@QAEX_N@Z
+?AccSendCaretEvent@ScCsvControl@@QAEXXZ
+?AccSendVisibleEvent@ScCsvControl@@QAEXXZ
+?AccSendSelectionEvent@ScCsvControl@@QAEXXZ
+?AccSendTableUpdateEvent@ScCsvControl@@QAEXKK_N@Z
+?AccSendInsertColumnEvent@ScCsvControl@@QAEXKK@Z
+?AccSendRemoveColumnEvent@ScCsvControl@@QAEXKK@Z
+?DisableRepaint@ScCsvControl@@QAEXXZ
+?Execute@ScCsvControl@@QAEXW4ScCsvCmdType@@JJ@Z
+?GetVisPosCount@ScCsvControl@@QBEJXZ
+?IsValidSplitPos@ScCsvControl@@QBE_NJ@Z
+?GetHdrX@ScCsvControl@@QBEJXZ
+?GetFirstX@ScCsvControl@@QBEJXZ
+?GetLastX@ScCsvControl@@QBEJXZ
+?GetX@ScCsvControl@@QBEJJ@Z
+?GetPosFromX@ScCsvControl@@QBEJJ@Z
+?GetVisLineCount@ScCsvControl@@QBEJXZ
+?IsValidLine@ScCsvControl@@QBE_NJ@Z
+?GetY@ScCsvControl@@QBEJJ@Z
+?GetLineFromY@ScCsvControl@@QBEJJ@Z
+?ImplInvertRect@ScCsvControl@@SAXAAVOutputDevice@@ABVRectangle@@@Z
+?GetHorzDirection@ScCsvControl@@SA?AW4ScMoveMode@@G_N@Z
+?GetVertDirection@ScCsvControl@@SA?AW4ScMoveMode@@G_N@Z
+??0ScCsvControl@@QAE@AAV0@@Z
+??_7ScCsvControl@@6B@
+?GetFocus@ScCsvControl@@UAEXXZ
+?LoseFocus@ScCsvControl@@UAEXXZ
+?CreateAccessible@ScCsvControl@@UAE?AV?$Reference@VXAccessible@accessibility@star@sun@com@@@uno@star@sun@com@@XZ
+??0ScCsvControl@@QAE@PAVWindow@@ABUScCsvLayoutData@@_J@Z
+??0ScCsvControl@@QAE@PAVWindow@@ABUScCsvLayoutData@@ABVResId@@@Z
+??1ScCsvControl@@UAE@XZ
+?Repaint@ScCsvControl@@QAEX_N@Z
+?EnableRepaint@ScCsvControl@@QAEX_N@Z
+?GetMaxPosOffset@ScCsvControl@@QBEJXZ
+?IsVisibleSplitPos@ScCsvControl@@QBE_NJ@Z
+?GetLastVisLine@ScCsvControl@@QBEJXZ
+?GetMaxLineOffset@ScCsvControl@@QBEJXZ
+?IsVisibleLine@ScCsvControl@@QBE_NJ@Z
+?SetPosSizePixel@ScCsvRuler@@UAEXJJJJG@Z
+?InitColors@ScCsvRuler@@AAEXXZ
+?MoveCursor@ScCsvRuler@@AAEXJ_N@Z
+?MoveCursorRel@ScCsvRuler@@AAEXW4ScMoveMode@@@Z
+?MoveCursorToSplit@ScCsvRuler@@AAEXW4ScMoveMode@@@Z
+?ScrollVertRel@ScCsvRuler@@AAEXW4ScMoveMode@@@Z
+?RemoveAllSplits@ScCsvRuler@@QAEXXZ
+?MoveCurrSplit@ScCsvRuler@@AAEXJ@Z
+?LoseFocus@ScCsvRuler@@MAEXXZ
+?DataChanged@ScCsvRuler@@MAEXABVDataChangedEvent@@@Z
+?MoveMouseTracking@ScCsvRuler@@AAEXJ@Z
+?EndMouseTracking@ScCsvRuler@@AAEX_N@Z
+?Paint@ScCsvRuler@@MAEXABVRectangle@@@Z
+?ImplDrawSplit@ScCsvRuler@@AAEXJ@Z
+?ImplInvertCursor@ScCsvRuler@@AAEXJ@Z
+?ImplDrawTrackingRect@ScCsvRuler@@AAEXXZ
+?ImplSetMousePointer@ScCsvRuler@@AAEXJ@Z
+?ImplCreateAccessible@ScCsvRuler@@MAEPAVScAccessibleCsvControl@@XZ
+?InitSizeData@ScCsvRuler@@AAEXXZ
+?GetNoScrollPos@ScCsvRuler@@QBEJJ@Z
+?InsertSplit@ScCsvRuler@@QAEXJ@Z
+?FindEmptyPos@ScCsvRuler@@ABEJJW4ScMoveMode@@@Z
+?MoveCurrSplitRel@ScCsvRuler@@AAEXW4ScMoveMode@@@Z
+?Resize@ScCsvRuler@@MAEXXZ
+?GetFocus@ScCsvRuler@@MAEXXZ
+?MouseMove@ScCsvRuler@@MAEXABVMouseEvent@@@Z
+?Tracking@ScCsvRuler@@MAEXABVTrackingEvent@@@Z
+?KeyInput@ScCsvRuler@@MAEXABVKeyEvent@@@Z
+?ImplDrawArea@ScCsvRuler@@AAEXJJ@Z
+?ImplDrawBackgrDev@ScCsvRuler@@AAEXXZ
+?ImplEraseSplit@ScCsvRuler@@AAEXJ@Z
+?ImplDrawRulerDev@ScCsvRuler@@AAEXXZ
+?ApplyLayout@ScCsvRuler@@QAEXABUScCsvLayoutData@@@Z
+?RemoveSplit@ScCsvRuler@@QAEXJ@Z
+?MoveSplit@ScCsvRuler@@QAEXJJ@Z
+?ImplRedraw@ScCsvRuler@@QAEXXZ
+??0ScCsvRuler@@QAE@AAVScCsvControl@@@Z
+??_7ScCsvRuler@@6B@
+?MouseButtonDown@ScCsvRuler@@MAEXABVMouseEvent@@@Z
+?StartMouseTracking@ScCsvRuler@@AAEXJ@Z
+?GetNoScrollCol@ScCsvGrid@@QBEJJ@Z
+?InitColors@ScCsvGrid@@AAEXXZ
+?InitSizeData@ScCsvGrid@@AAEXXZ
+?GetColumnX@ScCsvGrid@@QBEJK@Z
+?GetColumnFromPos@ScCsvGrid@@QBEKJ@Z
+?ScrollVertRel@ScCsvGrid@@AAEXW4ScMoveMode@@@Z
+?ExecutePopup@ScCsvGrid@@AAEXABVPoint@@@Z
+?Resize@ScCsvGrid@@MAEXXZ
+?GetFocus@ScCsvGrid@@MAEXXZ
+?LoseFocus@ScCsvGrid@@MAEXXZ
+?Notify@ScCsvGrid@@MAEXAAVSfxBroadcaster@@ABVSfxHint@@@Z
+?Paint@ScCsvGrid@@MAEXABVRectangle@@@Z
+?ImplDrawRowHeaders@ScCsvGrid@@AAEXXZ
+?ImplInvertCursor@ScCsvGrid@@AAEXJ@Z
+?ImplCreateAccessible@ScCsvGrid@@MAEPAVScAccessibleCsvControl@@XZ
+?UpdateOffsetX@ScCsvGrid@@QAEXXZ
+?InitFonts@ScCsvGrid@@AAEXXZ
+?GetFirstVisColumn@ScCsvGrid@@QBEKXZ
+?GetLastVisColumn@ScCsvGrid@@QBEKXZ
+?IsValidColumn@ScCsvGrid@@QBE_NK@Z
+?IsVisibleColumn@ScCsvGrid@@QBE_NK@Z
+?GetColumnFromX@ScCsvGrid@@QBEKJ@Z
+?GetColumnWidth@ScCsvGrid@@QBEJK@Z
+?SetColumnType@ScCsvGrid@@AAEXKJ@Z
+?MoveCursor@ScCsvGrid@@AAEXK@Z
+?MoveCursorRel@ScCsvGrid@@AAEXW4ScMoveMode@@@Z
+?GetEditEngine@ScCsvGrid@@QAEPAVEditEngine@@XZ
+?ImplSetColumnClipRegion@ScCsvGrid@@AAEXAAVOutputDevice@@K@Z
+?ImplDrawCellText@ScCsvGrid@@AAEXABVPoint@@ABVString@@@Z
+?ImplDrawFirstLineSep@ScCsvGrid@@AAEX_N@Z
+?ImplDrawTrackingRect@ScCsvGrid@@AAEXK@Z
+?UpdateLayoutData@ScCsvGrid@@QAEXXZ
+?GetColumnType@ScCsvGrid@@ABEJK@Z
+?GetColumnTypeName@ScCsvGrid@@QBEABVString@@K@Z
+?IsSelected@ScCsvGrid@@QBE_NK@Z
+?GetNextSelected@ScCsvGrid@@QBEKK@Z
+?GetCellText@ScCsvGrid@@QBEABVString@@KJ@Z
+?DataChanged@ScCsvGrid@@MAEXABVDataChangedEvent@@@Z
+?ImplDrawColumnHeader@ScCsvGrid@@AAEXAAVOutputDevice@@KVColor@@@Z
+?ImplDrawColumnBackgr@ScCsvGrid@@AAEXK@Z
+?ImplDrawBackgrDev@ScCsvGrid@@AAEXXZ
+?ImplDrawColumnSelection@ScCsvGrid@@AAEXK@Z
+?ImplDrawGridDev@ScCsvGrid@@AAEXXZ
+?ImplDrawColumn@ScCsvGrid@@AAEXK@Z
+?ImplDrawHorzScrolled@ScCsvGrid@@AAEXJ@Z
+?SetFirstImportedLine@ScCsvGrid@@QAEXJ@Z
+?ImplRemoveSplit@ScCsvGrid@@AAE_NJ@Z
+?GetFirstSelected@ScCsvGrid@@QBEKXZ
+?Select@ScCsvGrid@@QAEXK_N@Z
+?ToggleSelect@ScCsvGrid@@QAEXK@Z
+?SelectRange@ScCsvGrid@@QAEXKK_N@Z
+?SelectAll@ScCsvGrid@@QAEX_N@Z
+?ImplClearSelection@ScCsvGrid@@AAEXXZ
+?DoSelectAction@ScCsvGrid@@AAEXKG@Z
+?MouseButtonDown@ScCsvGrid@@MAEXABVMouseEvent@@@Z
+?Tracking@ScCsvGrid@@MAEXABVTrackingEvent@@@Z
+?KeyInput@ScCsvGrid@@MAEXABVKeyEvent@@@Z
+?Command@ScCsvGrid@@MAEXABVCommandEvent@@@Z
+?ImplRedraw@ScCsvGrid@@QAEXXZ
+?RemoveSplit@ScCsvGrid@@QAEXJ@Z
+?GetSelColumnType@ScCsvGrid@@QBEJXZ
+?SetSelColumnType@ScCsvGrid@@QAEXJ@Z
+?ImplInsertSplit@ScCsvGrid@@AAE_NJ@Z
+?FillColumnDataFix@ScCsvGrid@@QBEXAAVScAsciiOptions@@@Z
+?InsertSplit@ScCsvGrid@@QAEXJ@Z
+?MoveSplit@ScCsvGrid@@QAEXJJ@Z
+?SetTypeNames@ScCsvGrid@@QAEXABV?$vector@VString@@V?$allocator@VString@@@_STL@@@_STL@@@Z
+?FillColumnDataSep@ScCsvGrid@@QBEXAAVScAsciiOptions@@@Z
+?ApplyLayout@ScCsvGrid@@QAEXABUScCsvLayoutData@@@Z
+?ImplClearSplits@ScCsvGrid@@AAEXXZ
+?SetColumnStates@ScCsvGrid@@QAEXABV?$vector@UScCsvColState@@V?$allocator@UScCsvColState@@@_STL@@@_STL@@@Z
+?RemoveAllSplits@ScCsvGrid@@QAEXXZ
+?SetSplits@ScCsvGrid@@QAEXABVScCsvSplits@@@Z
+??0ScCsvGrid@@QAE@AAVScCsvControl@@@Z
+??_7ScCsvGrid@@6BScCsvControl@@@
+??_7ScCsvGrid@@6BSfxListener@@@
+??1ScCsvGrid@@UAE@XZ
+?ImplSetTextLineSep@ScCsvGrid@@QAEXJABVString@@0G_N@Z
+?ImplSetTextLineFix@ScCsvGrid@@QAEXJABVString@@@Z
+?InitHScrollBar@ScCsvTableBox@@AAEXXZ
+?InitVScrollBar@ScCsvTableBox@@AAEXXZ
+?MakePosVisible@ScCsvTableBox@@AAEXJ@Z
+?SetUniStrings@ScCsvTableBox@@QAEXPBVString@@ABV2@G_N@Z
+?SetByteStrings@ScCsvTableBox@@QAEXPBVByteString@@GABVString@@G_N@Z
+?FillColumnData@ScCsvTableBox@@QBEXAAVScAsciiOptions@@@Z
+?ScrollHdl@ScCsvTableBox@@AAEJPAVScrollBar@@@Z
+?ScrollEndHdl@ScCsvTableBox@@AAEJPAVScrollBar@@@Z
+?ImplCreateAccessible@ScCsvTableBox@@MAEPAVScAccessibleCsvControl@@XZ
+?InitControls@ScCsvTableBox@@AAEXXZ
+?Resize@ScCsvTableBox@@MAEXXZ
+?DataChanged@ScCsvTableBox@@MAEXABVDataChangedEvent@@@Z
+?LinkStubScrollHdl@ScCsvTableBox@@CAJPAX0@Z
+?LinkStubScrollEndHdl@ScCsvTableBox@@CAJPAX0@Z
+?CreateAccessible@ScCsvTableBox@@UAE?AV?$Reference@VXAccessible@accessibility@star@sun@com@@@uno@star@sun@com@@XZ
+?SetSeparatorsMode@ScCsvTableBox@@QAEXXZ
+?SetFixedWidthMode@ScCsvTableBox@@QAEXXZ
+?CsvCmdHdl@ScCsvTableBox@@AAEJPAVScCsvControl@@@Z
+?InitTypes@ScCsvTableBox@@QAEXABVListBox@@@Z
+?LinkStubCsvCmdHdl@ScCsvTableBox@@CAJPAX0@Z
+?Init@ScCsvTableBox@@AAEXXZ
+??0ScCsvTableBox@@QAE@PAVWindow@@@Z
+??_7ScCsvTableBox@@6B@
+??0ScCsvTableBox@@QAE@PAVWindow@@ABVResId@@@Z
+?GetEditEngine@ScEditWindow@@QBEPAVScHeaderEditEngine@@XZ
+?SetMenuHdl@ScExtIButton@@QAEXABVLink@@@Z
+?GetMenuHdl@ScExtIButton@@QBEABVLink@@XZ
+??1ScExtIButton@@UAE@XZ
+?GetScEditWindow@@YAPAVScEditWindow@@XZ
+?SetNumType@ScEditWindow@@QAEXW4SvxNumType@@@Z
+?CreateTextObject@ScEditWindow@@QAEPAVEditTextObject@@XZ
+?SetFont@ScEditWindow@@QAEXABVScPatternAttr@@@Z
+?SetText@ScEditWindow@@QAEXABVEditTextObject@@@Z
+?InsertField@ScEditWindow@@QAEXABVSvxFieldItem@@@Z
+?SetCharAttriutes@ScEditWindow@@QAEXXZ
+?Paint@ScEditWindow@@MAEXABVRectangle@@@Z
+?MouseMove@ScEditWindow@@MAEXABVMouseEvent@@@Z
+?MouseButtonDown@ScEditWindow@@MAEXABVMouseEvent@@@Z
+?MouseButtonUp@ScEditWindow@@MAEXABVMouseEvent@@@Z
+?KeyInput@ScEditWindow@@MAEXABVKeyEvent@@@Z
+?Command@ScEditWindow@@MAEXABVCommandEvent@@@Z
+??0ScExtIButton@@QAE@PAVWindow@@ABVResId@@@Z
+??_7ScExtIButton@@6B@
+?MouseButtonDown@ScExtIButton@@MAEXABVMouseEvent@@@Z
+?MouseButtonUp@ScExtIButton@@MAEXABVMouseEvent@@@Z
+?PreNotify@ScExtIButton@@UAEJAAVNotifyEvent@@@Z
+?Click@ScExtIButton@@MAEXXZ
+?StartPopup@ScExtIButton@@MAEXXZ
+?SetPopupMenu@ScExtIButton@@QAEXPAVScPopupMenu@@@Z
+?GetSelected@ScExtIButton@@QAEGXZ
+?TimerHdl@ScExtIButton@@AAEJPAVTimer@@@Z
+??0ScEditWindow@@QAE@PAVWindow@@ABVResId@@W4ScEditWindowLocation@@@Z
+??_7ScEditWindow@@6B@
+?GetFocus@ScEditWindow@@MAEXXZ
+?LoseFocus@ScEditWindow@@MAEXXZ
+?CreateAccessible@ScEditWindow@@UAE?AV?$Reference@VXAccessible@accessibility@star@sun@com@@@uno@star@sun@com@@XZ
+?LinkStubTimerHdl@ScExtIButton@@CAJPAX0@Z
+??1ScEditWindow@@UAE@XZ
+?GetDocument@ScModelObj@@QBEPAVScDocument@@XZ
+?GetEmbeddedObject@ScModelObj@@QBEPAVSfxObjectShell@@XZ
+?IsEmbedded@ScModelObj@@QBEEXZ
+?GetOutputFactor@ScModelObj@@QBENXZ
+?AdjustRowHeight@ScModelObj@@QAEEJJF@Z
+?MakeDrawLayer@ScModelObj@@QAEPAVScDrawLayer@@XZ
+?BeforeXMLLoading@ScModelObj@@QAEXXZ
+?AfterXMLLoading@ScModelObj@@QAEXE@Z
+?acquire@ScModelObj@@UAAXXZ
+?release@ScModelObj@@UAAXXZ
+?isActionLocked@ScModelObj@@UAAEXZ
+?addActionLock@ScModelObj@@UAAXXZ
+?removeActionLock@ScModelObj@@UAAXXZ
+?setActionLocks@ScModelObj@@UAAXF@Z
+?resetActionLocks@ScModelObj@@UAAFXZ
+?lockControllers@ScModelObj@@UAAXXZ
+?unlockControllers@ScModelObj@@UAAXXZ
+?calculate@ScModelObj@@UAAXXZ
+?calculateAll@ScModelObj@@UAAXXZ
+?isAutomaticCalculationEnabled@ScModelObj@@UAAEXZ
+?enableAutomaticCalculation@ScModelObj@@UAAXE@Z
+?protect@ScModelObj@@UAAXABVOUString@rtl@@@Z
+?unprotect@ScModelObj@@UAAXABVOUString@rtl@@@Z
+?isProtected@ScModelObj@@UAAEXZ
+?seekGoal@ScModelObj@@UAA?AUGoalResult@sheet@star@sun@com@@ABUCellAddress@table@456@0ABVOUString@rtl@@@Z
+?refreshArrows@ScModelObj@@UAAXXZ
+?addPropertyChangeListener@ScModelObj@@UAAXABVOUString@rtl@@ABV?$Reference@VXPropertyChangeListener@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?removePropertyChangeListener@ScModelObj@@UAAXABVOUString@rtl@@ABV?$Reference@VXPropertyChangeListener@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?addVetoableChangeListener@ScModelObj@@UAAXABVOUString@rtl@@ABV?$Reference@VXVetoableChangeListener@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?removeVetoableChangeListener@ScModelObj@@UAAXABVOUString@rtl@@ABV?$Reference@VXVetoableChangeListener@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?getImplementationName@ScModelObj@@UAA?AVOUString@rtl@@XZ
+?supportsService@ScModelObj@@UAAEABVOUString@rtl@@@Z
+??1ScModelObj@@UAE@XZ
+??_7ScModelObj@@6BXServiceInfo@lang@star@sun@com@@@
+??_7ScModelObj@@6BSvxFmMSFactory@@@
+??_7ScModelObj@@6BXPropertySet@beans@star@sun@com@@@
+??_7ScModelObj@@6BXLinkTargetSupplier@document@star@sun@com@@@
+??_7ScModelObj@@6BXRenderable@view@star@sun@com@@@
+??_7ScModelObj@@6BXStyleFamiliesSupplier@style@star@sun@com@@@
+??_7ScModelObj@@6BXDocumentAuditing@sheet@star@sun@com@@@
+??_7ScModelObj@@6BXConsolidatable@sheet@star@sun@com@@@
+??_7ScModelObj@@6BXGoalSeek@sheet@star@sun@com@@@
+??_7ScModelObj@@6BXDrawPagesSupplier@drawing@star@sun@com@@@
+??_7ScModelObj@@6BXProtectable@util@star@sun@com@@@
+??_7ScModelObj@@6BXCalculatable@sheet@star@sun@com@@@
+??_7ScModelObj@@6BXActionLockable@document@star@sun@com@@@
+??_7ScModelObj@@6BXSpreadsheetDocument@sheet@star@sun@com@@@
+??_7ScModelObj@@6BOWeakObject@cppu@@@
+??_7ScModelObj@@6BSfxListener@@@
+??_7ScModelObj@@6BXModule@frame@star@sun@com@@@
+??_7ScModelObj@@6BXUnoTunnel@lang@star@sun@com@@@
+??_7ScModelObj@@6BXVisualObject@embed@star@sun@com@@@
+??_7ScModelObj@@6BXUIConfigurationManagerSupplier@ui@star@sun@com@@@
+??_7ScModelObj@@6BXScriptProviderSupplier@provider@script@star@sun@com@@@
+??_7ScModelObj@@6BXStorageBasedDocument@document@star@sun@com@@@
+??_7ScModelObj@@6BXDocumentSubStorageSupplier@document@star@sun@com@@@
+??_7ScModelObj@@6BXTransferable@datatransfer@star@sun@com@@@
+??_7ScModelObj@@6BXCloseable@util@star@sun@com@@@
+??_7ScModelObj@@6BXViewDataSupplier@document@star@sun@com@@@
+??_7ScModelObj@@6BXStarBasicAccess@script@star@sun@com@@@
+??_7ScModelObj@@6BXLoadable@frame@star@sun@com@@@
+??_7ScModelObj@@6BXStorable2@frame@star@sun@com@@@
+??_7ScModelObj@@6BXPrintJobBroadcaster@view@star@sun@com@@@
+??_7ScModelObj@@6BXPrintable@view@star@sun@com@@@
+??_7ScModelObj@@6BXModifiable2@util@star@sun@com@@@
+??_7ScModelObj@@6BXModel2@frame@star@sun@com@@@
+??_7ScModelObj@@6BXEventsSupplier@document@star@sun@com@@@
+??_7ScModelObj@@6BXEventListener@lang@star@sun@com@@@
+??_7ScModelObj@@6BXEventBroadcaster@document@star@sun@com@@@
+??_7ScModelObj@@6BXDocumentInfoSupplier@document@star@sun@com@@@
+??_7ScModelObj@@6BXChild@container@star@sun@com@@@
+??_7ScModelObj@@6BXTypeProvider@lang@star@sun@com@@@
+?queryInterface@ScModelObj@@UAA?AVAny@uno@star@sun@com@@ABVType@3456@@Z
+?getTypes@ScModelObj@@UAA?AV?$Sequence@VType@uno@star@sun@com@@@uno@star@sun@com@@XZ
+?getImplementationId@ScModelObj@@UAA?AV?$Sequence@C@uno@star@sun@com@@XZ
+?getViewData@ScModelObj@@UAA?AV?$Reference@VXIndexAccess@container@star@sun@com@@@uno@star@sun@com@@XZ
+?getSomething@ScModelObj@@UAA_JABV?$Sequence@C@uno@star@sun@com@@@Z
+?Notify@ScModelObj@@UAEXAAVSfxBroadcaster@@ABVSfxHint@@@Z
+?getSheets@ScModelObj@@UAA?AV?$Reference@VXSpreadsheets@sheet@star@sun@com@@@uno@star@sun@com@@XZ
+?getDrawPages@ScModelObj@@UAA?AV?$Reference@VXDrawPages@drawing@star@sun@com@@@uno@star@sun@com@@XZ
+?createConsolidationDescriptor@ScModelObj@@UAA?AV?$Reference@VXConsolidationDescriptor@sheet@star@sun@com@@@uno@star@sun@com@@E@Z
+?consolidate@ScModelObj@@UAAXABV?$Reference@VXConsolidationDescriptor@sheet@star@sun@com@@@uno@star@sun@com@@@Z
+?getStyleFamilies@ScModelObj@@UAA?AV?$Reference@VXNameAccess@container@star@sun@com@@@uno@star@sun@com@@XZ
+?getRendererCount@ScModelObj@@UAAJABVAny@uno@star@sun@com@@ABV?$Sequence@UPropertyValue@beans@star@sun@com@@@3456@@Z
+?getRenderer@ScModelObj@@UAA?AV?$Sequence@UPropertyValue@beans@star@sun@com@@@uno@star@sun@com@@JABVAny@3456@ABV23456@@Z
+?render@ScModelObj@@UAAXJABVAny@uno@star@sun@com@@ABV?$Sequence@UPropertyValue@beans@star@sun@com@@@3456@@Z
+?getLinks@ScModelObj@@UAA?AV?$Reference@VXNameAccess@container@star@sun@com@@@uno@star@sun@com@@XZ
+?getPropertySetInfo@ScModelObj@@UAA?AV?$Reference@VXPropertySetInfo@beans@star@sun@com@@@uno@star@sun@com@@XZ
+?setPropertyValue@ScModelObj@@UAAXABVOUString@rtl@@ABVAny@uno@star@sun@com@@@Z
+?getPropertyValue@ScModelObj@@UAA?AVAny@uno@star@sun@com@@ABVOUString@rtl@@@Z
+?createInstance@ScModelObj@@UAA?AV?$Reference@VXInterface@uno@star@sun@com@@@uno@star@sun@com@@ABVOUString@rtl@@@Z
+?createInstanceWithArguments@ScModelObj@@UAA?AV?$Reference@VXInterface@uno@star@sun@com@@@uno@star@sun@com@@ABVOUString@rtl@@ABV?$Sequence@VAny@uno@star@sun@com@@@3456@@Z
+?getAvailableServiceNames@ScModelObj@@UAA?AV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@XZ
+?getSupportedServiceNames@ScModelObj@@UAA?AV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@XZ
+?getUnoTunnelId@ScModelObj@@SAABV?$Sequence@C@uno@star@sun@com@@XZ
+??0ScModelObj@@QAE@PAVScDocShell@@@Z
+?getImplementation@ScModelObj@@SAPAV1@V?$Reference@VXInterface@uno@star@sun@com@@@uno@star@sun@com@@@Z
+?CreateAndSet@ScModelObj@@SAXPAVScDocShell@@@Z
+?FillRenderMarkData@ScModelObj@@ABEEABVAny@uno@star@sun@com@@AAVScMarkData@@AAVScPrintSelectionStatus@@@Z
+?getImplementationName@ScCellRangesBase@@UAA?AVOUString@rtl@@XZ
+?supportsService@ScCellRangesBase@@UAAEABVOUString@rtl@@@Z
+?ForgetCurrentAttrs@ScCellRangesBase@@AAEXXZ
+?GetMarkData@ScCellRangesBase@@AAEPBVScMarkData@@XZ
+?GetDocument@ScCellRangesBase@@QBEPAVScDocument@@XZ
+?InitInsertRange@ScCellRangesBase@@QAEXPAVScDocShell@@ABVScRange@@@Z
+?AddRange@ScCellRangesBase@@QAEXABVScRange@@E@Z
+?SetNewRange@ScCellRangesBase@@QAEXABVScRange@@@Z
+?SetNewRanges@ScCellRangesBase@@QAEXABVScRangeList@@@Z
+?SetCursorOnly@ScCellRangesBase@@QAEXE@Z
+?acquire@ScCellRangesBase@@UAAXXZ
+?release@ScCellRangesBase@@UAAXXZ
+?PaintRanges_Impl@ScCellRangesBase@@AAEXG@Z
+?clearContents@ScCellRangesBase@@UAAXJ@Z
+?addVetoableChangeListener@ScCellRangesBase@@UAAXABVOUString@rtl@@ABV?$Reference@VXVetoableChangeListener@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?removeVetoableChangeListener@ScCellRangesBase@@UAAXABVOUString@rtl@@ABV?$Reference@VXVetoableChangeListener@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?addPropertiesChangeListener@ScCellRangesBase@@UAAXABV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@ABV?$Reference@VXPropertiesChangeListener@beans@star@sun@com@@@3456@@Z
+?removePropertiesChangeListener@ScCellRangesBase@@UAAXABV?$Reference@VXPropertiesChangeListener@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?firePropertiesChangeEvent@ScCellRangesBase@@UAAXABV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@ABV?$Reference@VXPropertiesChangeListener@beans@star@sun@com@@@3456@@Z
+?ValueListenerHdl@ScCellRangesBase@@AAEJPAVSfxHint@@@Z
+?decrementIndent@ScCellRangesBase@@UAAXXZ
+?incrementIndent@ScCellRangesBase@@UAAXXZ
+?getNotANumber@ScCellRangesBase@@UAANXZ
+?isNotANumber@ScCellRangesBase@@UAAEN@Z
+?acquire@ScCellRangesObj@@UAAXXZ
+?release@ScCellRangesObj@@UAAXXZ
+?getRangeAddressesAsString@ScCellRangesObj@@UAA?AVOUString@rtl@@XZ
+?addRangeAddress@ScCellRangesObj@@UAAXABUCellRangeAddress@table@star@sun@com@@E@Z
+?replaceByName@ScCellRangesObj@@UAAXABVOUString@rtl@@ABVAny@uno@star@sun@com@@@Z
+?hasByName@ScCellRangesObj@@UAAEABVOUString@rtl@@@Z
+?getCount@ScCellRangesObj@@UAAJXZ
+?hasElements@ScCellRangesObj@@UAAEXZ
+?getImplementationName@ScCellRangesObj@@UAA?AVOUString@rtl@@XZ
+?supportsService@ScCellRangesObj@@UAAEABVOUString@rtl@@@Z
+?acquire@ScCellRangeObj@@UAAXXZ
+?release@ScCellRangeObj@@UAAXXZ
+?getRangeAddress@ScCellRangeObj@@UAA?AUCellRangeAddress@table@star@sun@com@@XZ
+?getArrayFormula@ScCellRangeObj@@UAA?AVOUString@rtl@@XZ
+?setTableOperation@ScCellRangeObj@@UAAXABUCellRangeAddress@table@star@sun@com@@W4TableOperationMode@sheet@456@ABUCellAddress@3456@2@Z
+?merge@ScCellRangeObj@@UAAXE@Z
+?getIsMerged@ScCellRangeObj@@UAAEXZ
+?fillSeries@ScCellRangeObj@@UAAXW4FillDirection@sheet@star@sun@com@@W4FillMode@3456@W4FillDateMode@3456@NN@Z
+?fillAuto@ScCellRangeObj@@UAAXW4FillDirection@sheet@star@sun@com@@J@Z
+?sort@ScCellRangeObj@@UAAXABV?$Sequence@UPropertyValue@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?removeSubTotals@ScCellRangeObj@@UAAXXZ
+?getImplementationName@ScCellRangeObj@@UAA?AVOUString@rtl@@XZ
+?supportsService@ScCellRangeObj@@UAAEABVOUString@rtl@@@Z
+?ForgetMarkData@ScCellRangesBase@@AAEXXZ
+?GetCurrentAttrsFlat@ScCellRangesBase@@AAEPBVScPatternAttr@@XZ
+?GetCurrentAttrsDeep@ScCellRangesBase@@AAEPBVScPatternAttr@@XZ
+?GetCurrentDataSet@ScCellRangesBase@@AAEPAVSfxItemSet@@XZ
+?RefChanged@ScCellRangesBase@@UAEXXZ
+?computeFunction@ScCellRangesBase@@UAANW4GeneralFunction@sheet@star@sun@com@@@Z
+?GetOnePropertyState@ScCellRangesBase@@MAE?AW4PropertyState@beans@star@sun@com@@GPBUSfxItemPropertyMap@@@Z
+?getPropertyState@ScCellRangesBase@@UAA?AW4PropertyState@beans@star@sun@com@@ABVOUString@rtl@@@Z
+?setPropertyValue@ScCellRangesBase@@UAAXABVOUString@rtl@@ABVAny@uno@star@sun@com@@@Z
+?getPropertyValue@ScCellRangesBase@@UAA?AVAny@uno@star@sun@com@@ABVOUString@rtl@@@Z
+?addPropertyChangeListener@ScCellRangesBase@@UAAXABVOUString@rtl@@ABV?$Reference@VXPropertyChangeListener@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?removePropertyChangeListener@ScCellRangesBase@@UAAXABVOUString@rtl@@ABV?$Reference@VXPropertyChangeListener@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?LinkStubValueListenerHdl@ScCellRangesBase@@CAJPAX0@Z
+?CreateMemChart_Impl@ScCellRangesBase@@ABEPAVScMemChart@@XZ
+?GetLimitedChartRanges_Impl@ScCellRangesBase@@ABE?AVScRangeListRef@@JJ@Z
+?addModifyListener@ScCellRangesBase@@UAAXABV?$Reference@VXModifyListener@util@star@sun@com@@@uno@star@sun@com@@@Z
+?replaceAll@ScCellRangesBase@@UAAJABV?$Reference@VXSearchDescriptor@util@star@sun@com@@@uno@star@sun@com@@@Z
+?RefChanged@ScCellRangesObj@@UAEXXZ
+?addRangeAddresses@ScCellRangesObj@@UAAXABV?$Sequence@UCellRangeAddress@table@star@sun@com@@@uno@star@sun@com@@E@Z
+?removeRangeAddresses@ScCellRangesObj@@UAAXABV?$Sequence@UCellRangeAddress@table@star@sun@com@@@uno@star@sun@com@@@Z
+?RefChanged@ScCellRangeObj@@UAEXXZ
+?setDataArray@ScCellRangeObj@@UAAXABV?$Sequence@V?$Sequence@VAny@uno@star@sun@com@@@uno@star@sun@com@@@uno@star@sun@com@@@Z
+?setFormulaArray@ScCellRangeObj@@UAAXABV?$Sequence@V?$Sequence@VOUString@rtl@@@uno@star@sun@com@@@uno@star@sun@com@@@Z
+?autoFormat@ScCellRangeObj@@UAAXABVOUString@rtl@@@Z
+?applySubTotals@ScCellRangeObj@@UAAXABV?$Reference@VXSubTotalDescriptor@sheet@star@sun@com@@@uno@star@sun@com@@E@Z
+?doImport@ScCellRangeObj@@UAAXABV?$Sequence@UPropertyValue@beans@star@sun@com@@@uno@star@sun@com@@@Z
+?getPropertySetInfo@ScCellRangesBase@@UAA?AV?$Reference@VXPropertySetInfo@beans@star@sun@com@@@uno@star@sun@com@@XZ
+?addChartDataChangeEventListener@ScCellRangesBase@@UAAXABV?$Reference@VXChartDataChangeEventListener@chart@star@sun@com@@@uno@star@sun@com@@@Z
+?removeChartDataChangeEventListener@ScCellRangesBase@@UAAXABV?$Reference@VXChartDataChangeEventListener@chart@star@sun@com@@@uno@star@sun@com@@@Z
+?createSearchDescriptor@ScCellRangesBase@@UAA?AV?$Reference@VXSearchDescriptor@util@star@sun@com@@@uno@star@sun@com@@XZ
+?createReplaceDescriptor@ScCellRangesBase@@UAA?AV?$Reference@VXReplaceDescriptor@util@star@sun@com@@@uno@star@sun@com@@XZ
+?removeRangeAddress@ScCellRangesObj@@UAAXABUCellRangeAddress@table@star@sun@com@@@Z
+?removeByName@ScCellRangesObj@@UAAXABVOUString@rtl@@@Z
+?createEnumeration@ScCellRangesObj@@UAA?AV?$Reference@VXEnumeration@container@star@sun@com@@@uno@star@sun@com@@XZ
+?getColumns@ScCellRangeObj@@UAA?AV?$Reference@VXTableColumns@table@star@sun@com@@@uno@star@sun@com@@XZ
+?getRows@ScCellRangeObj@@UAA?AV?$Reference@VXTableRows@table@star@sun@com@@@uno@star@sun@com@@XZ
+?createFilterDescriptor@ScCellRangeObj@@UAA?AV?$Reference@VXSheetFilterDescriptor@sheet@star@sun@com@@@uno@star@sun@com@@E@Z
+?createSubTotalDescriptor@ScCellRangeObj@@UAA?AV?$Reference@VXSubTotalDescriptor@sheet@star@sun@com@@@uno@star@sun@com@@E@Z
+?getPropertySetInfo@ScCellRangeObj@@UAA?AV?$Reference@VXPropertySetInfo@beans@star@sun@com@@@uno@star@sun@com@@XZ
+?getSupportedServiceNames@ScCellRangesBase@@UAA?AV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@XZ
+??0ScCellRangesBase@@QAE@XZ
+??_7ScCellRangesBase@@6BSfxListener@@@
+??_7ScCellRangesBase@@6BOWeakObject@cppu@@@
+??_7ScCellRangesBase@@6BXTolerantMultiPropertySet@beans@star@sun@com@@@
+??_7ScCellRangesBase@@6BXTypeProvider@lang@star@sun@com@@@
+??_7ScCellRangesBase@@6BXUnoTunnel@lang@star@sun@com@@@
+??_7ScCellRangesBase@@6BXServiceInfo@lang@star@sun@com@@@
+??_7ScCellRangesBase@@6BXModifyBroadcaster@util@star@sun@com@@@
+??_7ScCellRangesBase@@6BXReplaceable@util@star@sun@com@@@
+??_7ScCellRangesBase@@6BXFormulaQuery@sheet@star@sun@com@@@
+??_7ScCellRangesBase@@6BXCellRangesQuery@sheet@star@sun@com@@@
+??_7ScCellRangesBase@@6BXIndent@util@star@sun@com@@@
+??_7ScCellRangesBase@@6BXChartDataArray@chart@star@sun@com@@@
+??_7ScCellRangesBase@@6BXSheetOperation@sheet@star@sun@com@@@
+??_7ScCellRangesBase@@6BXPropertyState@beans@star@sun@com@@@
+??_7ScCellRangesBase@@6BXMultiPropertySet@beans@star@sun@com@@@
+??_7ScCellRangesBase@@6BXPropertySet@beans@star@sun@com@@@
+?queryInterface@ScCellRangesBase@@UAA?AVAny@uno@star@sun@com@@ABVType@3456@@Z
+?GetItemPropertyMap@ScCellRangesBase@@MAEPBUSfxItemPropertyMap@@XZ
+?GetOnePropertyValue@ScCellRangesBase@@MAEXPBUSfxItemPropertyMap@@AAVAny@uno@star@sun@com@@@Z
+?SetOnePropertyValue@ScCellRangesBase@@MAEXPBUSfxItemPropertyMap@@ABVAny@uno@star@sun@com@@@Z
+?setPropertyValues@ScCellRangesBase@@UAAXABV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@ABV?$Sequence@VAny@uno@star@sun@com@@@3456@@Z
+?getPropertyValues@ScCellRangesBase@@UAA?AV?$Sequence@VAny@uno@star@sun@com@@@uno@star@sun@com@@ABV?$Sequence@VOUString@rtl@@@3456@@Z
+?getPropertyStates@ScCellRangesBase@@UAA?AV?$Sequence@W4PropertyState@beans@star@sun@com@@@uno@star@sun@com@@ABV?$Sequence@VOUString@rtl@@@3456@@Z
+?setPropertyToDefault@ScCellRangesBase@@UAAXABVOUString@rtl@@@Z
+?getPropertyDefault@ScCellRangesBase@@UAA?AVAny@uno@star@sun@com@@ABVOUString@rtl@@@Z
+?getData@ScCellRangesBase@@UAA?AV?$Sequence@V?$Sequence@N@uno@star@sun@com@@@uno@star@sun@com@@XZ
+?setData@ScCellRangesBase@@UAAXABV?$Sequence@V?$Sequence@N@uno@star@sun@com@@@uno@star@sun@com@@@Z
+?getRowDescriptions@ScCellRangesBase@@UAA?AV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@XZ
+?setRowDescriptions@ScCellRangesBase@@UAAXABV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@@Z
+?getColumnDescriptions@ScCellRangesBase@@UAA?AV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@XZ
+?setColumnDescriptions@ScCellRangesBase@@UAAXABV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@@Z
+?queryVisibleCells@ScCellRangesBase@@UAA?AV?$Reference@VXSheetCellRanges@sheet@star@sun@com@@@uno@star@sun@com@@XZ
+?queryEmptyCells@ScCellRangesBase@@UAA?AV?$Reference@VXSheetCellRanges@sheet@star@sun@com@@@uno@star@sun@com@@XZ
+?queryContentCells@ScCellRangesBase@@UAA?AV?$Reference@VXSheetCellRanges@sheet@star@sun@com@@@uno@star@sun@com@@F@Z
+?queryFormulaCells@ScCellRangesBase@@UAA?AV?$Reference@VXSheetCellRanges@sheet@star@sun@com@@@uno@star@sun@com@@J@Z
+?queryColumnDifferences@ScCellRangesBase@@UAA?AV?$Reference@VXSheetCellRanges@sheet@star@sun@com@@@uno@star@sun@com@@ABUCellAddress@table@456@@Z
+?queryRowDifferences@ScCellRangesBase@@UAA?AV?$Reference@VXSheetCellRanges@sheet@star@sun@com@@@uno@star@sun@com@@ABUCellAddress@table@456@@Z
+?queryIntersection@ScCellRangesBase@@UAA?AV?$Reference@VXSheetCellRanges@sheet@star@sun@com@@@uno@star@sun@com@@ABUCellRangeAddress@table@456@@Z
+?queryDependents@ScCellRangesBase@@UAA?AV?$Reference@VXSheetCellRanges@sheet@star@sun@com@@@uno@star@sun@com@@E@Z
+?queryPrecedents@ScCellRangesBase@@UAA?AV?$Reference@VXSheetCellRanges@sheet@star@sun@com@@@uno@star@sun@com@@E@Z
+?findAll@ScCellRangesBase@@UAA?AV?$Reference@VXIndexAccess@container@star@sun@com@@@uno@star@sun@com@@ABV?$Reference@VXSearchDescriptor@util@star@sun@com@@@3456@@Z
+?findFirst@ScCellRangesBase@@UAA?AV?$Reference@VXInterface@uno@star@sun@com@@@uno@star@sun@com@@ABV?$Reference@VXSearchDescriptor@util@star@sun@com@@@3456@@Z
+?findNext@ScCellRangesBase@@UAA?AV?$Reference@VXInterface@uno@star@sun@com@@@uno@star@sun@com@@ABV23456@ABV?$Reference@VXSearchDescriptor@util@star@sun@com@@@3456@@Z
+?removeModifyListener@ScCellRangesBase@@UAAXABV?$Reference@VXModifyListener@util@star@sun@com@@@uno@star@sun@com@@@Z
+?getSomething@ScCellRangesBase@@UAA_JABV?$Sequence@C@uno@star@sun@com@@@Z
+?getTypes@ScCellRangesBase@@UAA?AV?$Sequence@VType@uno@star@sun@com@@@uno@star@sun@com@@XZ
+?getImplementationId@ScCellRangesBase@@UAA?AV?$Sequence@C@uno@star@sun@com@@XZ
+?setPropertyValuesTolerant@ScCellRangesBase@@UAA?AV?$Sequence@USetPropertyTolerantFailed@beans@star@sun@com@@@uno@star@sun@com@@ABV?$Sequence@VOUString@rtl@@@3456@ABV?$Sequence@VAny@uno@star@sun@com@@@3456@@Z
+?getPropertyValuesTolerant@ScCellRangesBase@@UAA?AV?$Sequence@UGetPropertyTolerantResult@beans@star@sun@com@@@uno@star@sun@com@@ABV?$Sequence@VOUString@rtl@@@3456@@Z
+?getDirectPropertyValuesTolerant@ScCellRangesBase@@UAA?AV?$Sequence@UGetDirectPropertyTolerantResult@beans@star@sun@com@@@uno@star@sun@com@@ABV?$Sequence@VOUString@rtl@@@3456@@Z
+?Notify@ScCellRangesBase@@UAEXAAVSfxBroadcaster@@ABVSfxHint@@@Z
+??0ScCellRangesBase@@QAE@PAVScDocShell@@ABVScRange@@@Z
+??0ScCellRangesBase@@QAE@PAVScDocShell@@ABVScRangeList@@@Z
+??1ScCellRangesBase@@UAE@XZ
+?ForceChartListener_Impl@ScCellRangesBase@@AAEXXZ
+??0ScCellRangesObj@@QAE@PAVScDocShell@@ABVScRangeList@@@Z
+??_7ScCellRangesObj@@6BXEnumerationAccess@container@star@sun@com@@@
+??_7ScCellRangesObj@@6BXNameContainer@container@star@sun@com@@@
+??_7ScCellRangesObj@@6BXSheetCellRangeContainer@sheet@star@sun@com@@@
+??_7ScCellRangesObj@@6BSfxListener@@@
+??_7ScCellRangesObj@@6BOWeakObject@cppu@@@
+??_7ScCellRangesObj@@6BXTolerantMultiPropertySet@beans@star@sun@com@@@
+??_7ScCellRangesObj@@6BXTypeProvider@lang@star@sun@com@@@
+??_7ScCellRangesObj@@6BXUnoTunnel@lang@star@sun@com@@@
+??_7ScCellRangesObj@@6BXServiceInfo@lang@star@sun@com@@@
+??_7ScCellRangesObj@@6BXModifyBroadcaster@util@star@sun@com@@@
+??_7ScCellRangesObj@@6BXReplaceable@util@star@sun@com@@@
+??_7ScCellRangesObj@@6BXFormulaQuery@sheet@star@sun@com@@@
+??_7ScCellRangesObj@@6BXCellRangesQuery@sheet@star@sun@com@@@
+??_7ScCellRangesObj@@6BXIndent@util@star@sun@com@@@
+??_7ScCellRangesObj@@6BXChartDataArray@chart@star@sun@com@@@
+??_7ScCellRangesObj@@6BXSheetOperation@sheet@star@sun@com@@@
+??_7ScCellRangesObj@@6BXPropertyState@beans@star@sun@com@@@
+??_7ScCellRangesObj@@6BXMultiPropertySet@beans@star@sun@com@@@
+??_7ScCellRangesObj@@6BXPropertySet@beans@star@sun@com@@@
+?queryInterface@ScCellRangesObj@@UAA?AVAny@uno@star@sun@com@@ABVType@3456@@Z
+?getSupportedServiceNames@ScCellRangesObj@@UAA?AV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@XZ
+?getTypes@ScCellRangesObj@@UAA?AV?$Sequence@VType@uno@star@sun@com@@@uno@star@sun@com@@XZ
+?getImplementationId@ScCellRangesObj@@UAA?AV?$Sequence@C@uno@star@sun@com@@XZ
+?getElementType@ScCellRangesObj@@UAA?AVType@uno@star@sun@com@@XZ
+?getByIndex@ScCellRangesObj@@UAA?AVAny@uno@star@sun@com@@J@Z
+?getCells@ScCellRangesObj@@UAA?AV?$Reference@VXEnumerationAccess@container@star@sun@com@@@uno@star@sun@com@@XZ
+?getRangeAddresses@ScCellRangesObj@@UAA?AV?$Sequence@UCellRangeAddress@table@star@sun@com@@@uno@star@sun@com@@XZ
+?getByName@ScCellRangesObj@@UAA?AVAny@uno@star@sun@com@@ABVOUString@rtl@@@Z
+?getElementNames@ScCellRangesObj@@UAA?AV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@XZ
+?insertByName@ScCellRangesObj@@UAAXABVOUString@rtl@@ABVAny@uno@star@sun@com@@@Z
+??1ScCellRangesObj@@UAE@XZ
+??0ScCellRangeObj@@QAE@PAVScDocShell@@ABVScRange@@@Z
+??_7ScCellRangeObj@@6BXColumnRowRange@table@star@sun@com@@@
+??_7ScCellRangeObj@@6BXUniqueCellFormatRangesSupplier@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BXCellFormatRangesSupplier@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BXImportable@util@star@sun@com@@@
+??_7ScCellRangeObj@@6BXSubTotalCalculatable@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BXSheetFilterableEx@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BXSortable@util@star@sun@com@@@
+??_7ScCellRangeObj@@6BXAutoFormattable@table@star@sun@com@@@
+??_7ScCellRangeObj@@6BXCellSeries@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BXMergeable@util@star@sun@com@@@
+??_7ScCellRangeObj@@6BXMultipleOperation@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BXCellRangeFormula@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BXCellRangeData@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BXArrayFormulaRange@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BXSheetCellRange@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BXCellRangeAddressable@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BSfxListener@@@
+??_7ScCellRangeObj@@6BOWeakObject@cppu@@@
+??_7ScCellRangeObj@@6BXTolerantMultiPropertySet@beans@star@sun@com@@@
+??_7ScCellRangeObj@@6BXTypeProvider@lang@star@sun@com@@@
+??_7ScCellRangeObj@@6BXUnoTunnel@lang@star@sun@com@@@
+??_7ScCellRangeObj@@6BXServiceInfo@lang@star@sun@com@@@
+??_7ScCellRangeObj@@6BXModifyBroadcaster@util@star@sun@com@@@
+??_7ScCellRangeObj@@6BXReplaceable@util@star@sun@com@@@
+??_7ScCellRangeObj@@6BXFormulaQuery@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BXCellRangesQuery@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BXIndent@util@star@sun@com@@@
+??_7ScCellRangeObj@@6BXChartDataArray@chart@star@sun@com@@@
+??_7ScCellRangeObj@@6BXSheetOperation@sheet@star@sun@com@@@
+??_7ScCellRangeObj@@6BXPropertyState@beans@star@sun@com@@@
+??_7ScCellRangeObj@@6BXMultiPropertySet@beans@star@sun@com@@@
+??_7ScCellRangeObj@@6BXPropertySet@beans@star@sun@com@@@
+?queryInterface@ScCellRangeObj@@UAA?AVAny@uno@star@sun@com@@ABVType@3456@@Z
+?GetItemPropertyMap@ScCellRangeObj@@MAEPBUSfxItemPropertyMap@@XZ
+?GetOnePropertyValue@ScCellRangeObj@@MAEXPBUSfxItemPropertyMap@@AAVAny@uno@star@sun@com@@@Z
+?SetOnePropertyValue@ScCellRangeObj@@MAEXPBUSfxItemPropertyMap@@ABVAny@uno@star@sun@com@@@Z
+?getSupportedServiceNames@ScCellRangeObj@@UAA?AV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@XZ
+?getTypes@ScCellRangeObj@@UAA?AV?$Sequence@VType@uno@star@sun@com@@@uno@star@sun@com@@XZ
+?getImplementationId@ScCellRangeObj@@UAA?AV?$Sequence@C@uno@star@sun@com@@XZ
+?getCellByPosition@ScCellRangeObj@@UAA?AV?$Reference@VXCell@table@star@sun@com@@@uno@star@sun@com@@JJ@Z
+?getCellRangeByPosition@ScCellRangeObj@@UAA?AV?$Reference@VXCellRange@table@star@sun@com@@@uno@star@sun@com@@JJJJ@Z
+?getCellRangeByName@ScCellRangeObj@@UAA?AV?$Reference@VXCellRange@table@star@sun@com@@@uno@star@sun@com@@ABVOUString@rtl@@@Z
+?getSpreadsheet@ScCellRangeObj@@UAA?AV?$Reference@VXSpreadsheet@sheet@star@sun@com@@@uno@star@sun@com@@XZ
+?setArrayFormula@ScCellRangeObj@@UAAXABVOUString@rtl@@@Z
+?getDataArray@ScCellRangeObj@@UAA?AV?$Sequence@V?$Sequence@VAny@uno@star@sun@com@@@uno@star@sun@com@@@uno@star@sun@com@@XZ
+?getFormulaArray@ScCellRangeObj@@UAA?AV?$Sequence@V?$Sequence@VOUString@rtl@@@uno@star@sun@com@@@uno@star@sun@com@@XZ
+?createSortDescriptor@ScCellRangeObj@@UAA?AV?$Sequence@UPropertyValue@beans@star@sun@com@@@uno@star@sun@com@@XZ
+?filter@ScCellRangeObj@@UAAXABV?$Reference@VXSheetFilterDescriptor@sheet@star@sun@com@@@uno@star@sun@com@@@Z
+?createFilterDescriptorByObject@ScCellRangeObj@@UAA?AV?$Reference@VXSheetFilterDescriptor@sheet@star@sun@com@@@uno@star@sun@com@@ABV?$Reference@VXSheetFilterable@sheet@star@sun@com@@@3456@@Z
+?createImportDescriptor@ScCellRangeObj@@UAA?AV?$Sequence@UPropertyValue@beans@star@sun@com@@@uno@star@sun@com@@E@Z
+?getCellFormatRanges@ScCellRangeObj@@UAA?AV?$Reference@VXIndexAccess@container@star@sun@com@@@uno@star@sun@com@@XZ
+?getUniqueCellFormatRanges@ScCellRangeObj@@UAA?AV?$Reference@VXIndexAccess@container@star@sun@com@@@uno@star@sun@com@@XZ
+??1ScCellRangeObj@@UAE@XZ
+?QueryDifferences_Impl@ScCellRangesBase@@AAE?AV?$Reference@VXSheetCellRanges@sheet@star@sun@com@@@uno@star@sun@com@@ABUCellAddress@table@456@E@Z
+?Find_Impl@ScCellRangesBase@@AAE?AV?$Reference@VXInterface@uno@star@sun@com@@@uno@star@sun@com@@ABV?$Reference@VXSearchDescriptor@util@star@sun@com@@@3456@PBVScAddress@@@Z
+?getUnoTunnelId@ScCellRangesBase@@SAABV?$Sequence@C@uno@star@sun@com@@XZ
+?GetObjectByIndex_Impl@ScCellRangesObj@@ABEPAVScCellRangeObj@@J@Z
+?CreateRangeFromDoc@ScCellRangeObj@@SA?AV?$Reference@VXCellRange@table@star@sun@com@@@uno@star@sun@com@@PAVScDocument@@ABVScRange@@@Z
+?GetCellByPosition_Impl@ScCellRangeObj@@IAE?AV?$Reference@VXCell@table@star@sun@com@@@uno@star@sun@com@@JJ@Z
+?getCellRangeByName@ScCellRangeObj@@QAE?AV?$Reference@VXCellRange@table@star@sun@com@@@uno@star@sun@com@@ABVOUString@rtl@@ABUDetails@ScAddress@@@Z
+?getImplementation@ScCellRangesBase@@SAPAV1@V?$Reference@VXInterface@uno@star@sun@com@@@uno@star@sun@com@@@Z
+?AnyToInterface@ScUnoHelpFunctions@@SA?AV?$Reference@VXInterface@uno@star@sun@com@@@uno@star@sun@com@@ABVAny@3456@@Z
+component_getImplementationEnvironment
+component_writeInfo
+component_getFactory
+?Type@ScViewObjectModeItem@@UBEP6APAXXZXZ
+?IsA@ScViewObjectModeItem@@UBEEP6APAXXZ@Z
+?GetPresentation@ScViewObjectModeItem@@UBE?AW4SfxItemPresentation@@W42@W4SfxMapUnit@@1AAVString@@PBVIntlWrapper@@@Z
+?GetVersion@ScViewObjectModeItem@@UBEGG@Z
+?Create@ScViewObjectModeItem@@UBEPAVSfxPoolItem@@AAVSvStream@@G@Z
+?Clone@ScViewObjectModeItem@@UBEPAVSfxPoolItem@@PAVSfxItemPool@@@Z
+?GetValueCount@ScViewObjectModeItem@@UBEGXZ
+?GetValueText@ScViewObjectModeItem@@UBE?AVString@@G@Z
+?Type@ScPageScaleToItem@@UBEP6APAXXZXZ
+?IsA@ScPageScaleToItem@@UBEEP6APAXXZ@Z
+??8ScPageScaleToItem@@UBEHABVSfxPoolItem@@@Z
+?GetPresentation@ScPageScaleToItem@@UBE?AW4SfxItemPresentation@@W42@W4SfxMapUnit@@1AAVString@@PBVIntlWrapper@@@Z
+?QueryValue@ScPageScaleToItem@@UBEEAAVAny@uno@star@sun@com@@E@Z
+?PutValue@ScPageScaleToItem@@UAEEABVAny@uno@star@sun@com@@E@Z
+?Clone@ScPageScaleToItem@@UBEPAV1@PAVSfxItemPool@@@Z
+?CreateType@ScPageHFItem@@SAPAXXZ
+?StaticType@ScPageHFItem@@SAP6APAXXZXZ
+?Type@ScPageHFItem@@UBEP6APAXXZXZ
+?IsOf@ScPageHFItem@@SAEP6APAXXZ@Z
+?IsA@ScPageHFItem@@UBEEP6APAXXZ@Z
+?CreateType@ScViewObjectModeItem@@SAPAXXZ
+?StaticType@ScViewObjectModeItem@@SAP6APAXXZXZ
+?IsOf@ScViewObjectModeItem@@SAEP6APAXXZ@Z
+?CreateType@ScPageScaleToItem@@SAPAXXZ
+?StaticType@ScPageScaleToItem@@SAP6APAXXZXZ
+?IsOf@ScPageScaleToItem@@SAEP6APAXXZ@Z
+??0ScMergeFlagAttr@@QAE@XZ
+??0ScMergeFlagAttr@@QAE@F@Z
+??1ScMergeFlagAttr@@UAE@XZ
+??0ScProtectionAttr@@QAE@XZ
+??_7ScProtectionAttr@@6B@
+?Type@ScProtectionAttr@@UBEP6APAXXZXZ
+?IsA@ScProtectionAttr@@UBEEP6APAXXZ@Z
+??8ScProtectionAttr@@UBEHABVSfxPoolItem@@@Z
+?GetPresentation@ScProtectionAttr@@UBE?AW4SfxItemPresentation@@W42@W4SfxMapUnit@@1AAVString@@PBVIntlWrapper@@@Z
+?QueryValue@ScProtectionAttr@@UBEEAAVAny@uno@star@sun@com@@E@Z
+?PutValue@ScProtectionAttr@@UAEEABVAny@uno@star@sun@com@@E@Z
+?Create@ScProtectionAttr@@UBEPAVSfxPoolItem@@AAVSvStream@@G@Z
+?Store@ScProtectionAttr@@UBEAAVSvStream@@AAV2@G@Z
+?Clone@ScProtectionAttr@@UBEPAVSfxPoolItem@@PAVSfxItemPool@@@Z
+?GetValueText@ScProtectionAttr@@UBE?AVString@@XZ
+??0ScProtectionAttr@@QAE@EEEE@Z
+??0ScProtectionAttr@@QAE@ABV0@@Z
+??1ScProtectionAttr@@UAE@XZ
+?SetProtection@ScProtectionAttr@@QAEEE@Z
+?SetHideFormula@ScProtectionAttr@@QAEEE@Z
+?SetHideCell@ScProtectionAttr@@QAEEE@Z
+?SetHidePrint@ScProtectionAttr@@QAEEE@Z
+??0ScPageHFItem@@QAE@G@Z
+??_7ScPageHFItem@@6B@
+??8ScPageHFItem@@UBEHABVSfxPoolItem@@@Z
+?GetVersion@ScPageHFItem@@UBEGG@Z
+?QueryValue@ScPageHFItem@@UBEEAAVAny@uno@star@sun@com@@E@Z
+?PutValue@ScPageHFItem@@UAEEABVAny@uno@star@sun@com@@E@Z
+?Create@ScPageHFItem@@UBEPAVSfxPoolItem@@AAVSvStream@@G@Z
+?Store@ScPageHFItem@@UBEAAVSvStream@@AAV2@G@Z
+?Clone@ScPageHFItem@@UBEPAVSfxPoolItem@@PAVSfxItemPool@@@Z
+?GetValueText@ScPageHFItem@@UBE?AVString@@XZ
+??0ScPageHFItem@@QAE@ABV0@@Z
+??1ScPageHFItem@@UAE@XZ
+?SetLeftArea@ScPageHFItem@@QAEXABVEditTextObject@@@Z
+?SetCenterArea@ScPageHFItem@@QAEXABVEditTextObject@@@Z
+?SetRightArea@ScPageHFItem@@QAEXABVEditTextObject@@@Z
+?SetArea@ScPageHFItem@@QAEXPAVEditTextObject@@H@Z
+??0ScViewObjectModeItem@@QAE@G@Z
+??1ScViewObjectModeItem@@UAE@XZ
+??0ScPageScaleToItem@@QAE@XZ
+??0ScPageScaleToItem@@QAE@GG@Z
+??1ScPageScaleToItem@@UAE@XZ
+?CreateType@ScProtectionAttr@@SAPAXXZ
+?StaticType@ScProtectionAttr@@SAP6APAXXZXZ
+?IsOf@ScProtectionAttr@@SAEP6APAXXZ@Z
+??0ScViewObjectModeItem@@QAE@GW4ScVObjMode@@@Z
+?GetFormatTable@ScDocument@@QBEPAVSvNumberFormatter@@XZ
+?GetRangeName@ScDocument@@QAEPAVScRangeName@@XZ
+?GetDBCollection@ScDocument@@QBEPAVScDBCollection@@XZ
+?GetAddressConvention@ScDocument@@QBE?AW4Convention@ScAddress@@XZ
+?HasColHeader@ScDocument@@QAEEFJFJF@Z
+?HasRowHeader@ScDocument@@QAEEFJFJF@Z
+?GetFilterEntriesArea@ScDocument@@QAEEFJJFAAVTypedStrCollection@@@Z
+?GetName@ScDocument@@QBEEFAAVString@@@Z
+?ConvertToValidTabName@ScDocument@@SAXAAVString@@G@Z
+?GetString@ScDocument@@QAEXFJFAAVString@@@Z
+?HasStringData@ScDocument@@QBEEFJF@Z
+?GetOriginalWidth@ScDocument@@QBEGFF@Z
+?GetOriginalHeight@ScDocument@@QBEGJF@Z
+?GetColFlags@ScDocument@@QBEEFF@Z
+?GetRowFlags@ScDocument@@QBEEJF@Z
+?ApplyAttr@ScDocument@@QAEXFJFABVSfxPoolItem@@@Z
+?GetPageStyle@ScDocument@@QBEABVString@@F@Z
+?ValidTabName@ScDocument@@QBEEABVString@@@Z
+?ValidNewTabName@ScDocument@@QBEEABVString@@@Z
+?CreateValidTabName@ScDocument@@QBEXAAVString@@@Z
+?GetAttr@ScDocument@@QBEPBVSfxPoolItem@@FJFG@Z
+?SetAlive@ScDPObject@@QAEXE@Z
+?SetAllowMove@ScDPObject@@QAEXE@Z
+?SetOutRange@ScDPObject@@QAEXABVScRange@@@Z
+?WriteTempDataTo@ScDPObject@@QBEXAAV1@@Z
+?IsSheetData@ScDPObject@@QBEEXZ
+?SetName@ScDPObject@@QAEXABVString@@@Z
+?SetTag@ScDPObject@@QAEXABVString@@@Z
+?InvalidateData@ScDPObject@@QAEXXZ
+?RefreshAfterLoad@ScDPObject@@QAEXXZ
+?RefsEqual@ScDPObject@@QBEEABV1@@Z
+?StoreNew@ScDPObject@@QBEEAAVSvStream@@AAVScMultipleWriteHeader@@@Z
+?LoadNew@ScDPObject@@QAEEAAVSvStream@@AAVScMultipleReadHeader@@@Z
+??0ScDPObject@@QAE@PAVScDocument@@@Z
+??_7ScDPObject@@6B@
+?Clone@ScDPObject@@UBEPAVDataObject@@XZ
+??0ScDPObject@@QAE@ABV0@@Z
+?SetSaveData@ScDPObject@@QAEXABVScDPSaveData@@@Z
+??1ScDPObject@@UAE@XZ
+?InvalidateSource@ScDPObject@@QAEXXZ
+?SetSheetDesc@ScDPObject@@QAEXABUScSheetSourceDesc@@@Z
+?SetImportDesc@ScDPObject@@QAEXABUScImportSourceDesc@@@Z
+?SetServiceData@ScDPObject@@QAEXABUScDPServiceDesc@@@Z
+?WriteSourceDataTo@ScDPObject@@QBEXAAV1@@Z
+?UpdateReference@ScDPObject@@QAEXW4UpdateRefMode@@ABVScRange@@FJF@Z
+?WriteRefsTo@ScDPObject@@QBEXAAV1@@Z
+?IsDimNameInUse@ScDPObject@@QBEEABVString@@@Z
+?GetDimCount@ScDPObject@@QAEJXZ
+?GetDimName@ScDPObject@@QAE?AVString@@JAAE@Z
+?IsDuplicated@ScDPObject@@QAEEJ@Z
+?FillPageList@ScDPObject@@QAEXAAVTypedStrCollection@@J@Z
+?ConvertOrientation@ScDPObject@@SAXAAVScDPSaveData@@PAUPivotField@@IGPAVScDocument@@JFABV?$Reference@VXDimensionsSupplier@sheet@star@sun@com@@@uno@star@sun@com@@E1I1I1I@Z
+?InitFromOldPivot@ScDPObject@@QAEXABVScPivot@@PAVScDocument@@E@Z
+?HasRegisteredSources@ScDPObject@@SAEXZ
+?GetRegisteredSources@ScDPObject@@SA?AV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@XZ
+?CreateSource@ScDPObject@@SA?AV?$Reference@VXDimensionsSupplier@sheet@star@sun@com@@@uno@star@sun@com@@ABUScDPServiceDesc@@@Z
+?CreateObjects@ScDPObject@@AAEXXZ
+?ToggleDetails@ScDPObject@@QAEXAAUScDPPositionData@@PAV1@@Z
+?StoreOld@ScDPObject@@QBEEAAVSvStream@@AAVScMultipleWriteHeader@@@Z
+?FillOldParam@ScDPObject@@QBEEAAUScPivotParam@@E@Z
+?GetSource@ScDPObject@@QAE?AV?$Reference@VXDimensionsSupplier@sheet@star@sun@com@@@uno@star@sun@com@@XZ
+?CreateOutput@ScDPObject@@AAEXXZ
+?GetNewOutputRange@ScDPObject@@QAE?AVScRange@@AAE@Z
+?Output@ScDPObject@@QAEXXZ
+?GetPositionData@ScDPObject@@QAEXAAUScDPPositionData@@ABVScAddress@@@Z
+?GetPivotData@ScDPObject@@QAEEAAUScDPGetPivotDataField@@ABV?$vector@UScDPGetPivotDataField@@V?$allocator@UScDPGetPivotDataField@@@_STL@@@_STL@@@Z
+?IsFilterButton@ScDPObject@@QAEEABVScAddress@@@Z
+?GetHeaderDim@ScDPObject@@QAEJABVScAddress@@AAG@Z
+?GetHeaderDrag@ScDPObject@@QAEEABVScAddress@@EEJAAVRectangle@@AAGAAJ@Z
+?GetMemberResultNames@ScDPObject@@QAEXAAVStrCollection@@J@Z
+?GetHierarchiesNA@ScDPObject@@QAEEJAAV?$Reference@VXNameAccess@container@star@sun@com@@@uno@star@sun@com@@@Z
+?GetHierarchies@ScDPObject@@QAEEJAAV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@@Z
+?GetUsedHierarchy@ScDPObject@@QAEJJ@Z
+?GetMembersNA@ScDPObject@@QAEEJJAAV?$Reference@VXNameAccess@container@star@sun@com@@@uno@star@sun@com@@@Z
+?GetMembers@ScDPObject@@QAEEJJAAV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@PAV?$Sequence@E@3456@1@Z
+?GetMembersNA@ScDPObject@@QAEEJAAV?$Reference@VXNameAccess@container@star@sun@com@@@uno@star@sun@com@@@Z
+?GetMembers@ScDPObject@@QAEEJAAV?$Sequence@VOUString@rtl@@@uno@star@sun@com@@PAV?$Sequence@E@3456@1@Z
+?FillLabelData@ScDPObject@@QAEEAAUScPivotParam@@@Z
+?ParseFilters@ScDPObject@@QAEEAAUScDPGetPivotDataField@@AAV?$vector@UScDPGetPivotDataField@@V?$allocator@UScDPGetPivotDataField@@@_STL@@@_STL@@ABVString@@@Z
+?GetExistingDimensionByName@ScDPSaveData@@QAEPAVScDPSaveDimension@@ABVString@@@Z
+?GetSearchItem@ScGlobal@@SAABVSvxSearchItem@@XZ
+?SetSearchItem@ScGlobal@@SAXABVSvxSearchItem@@@Z
+?GetAutoFormat@ScGlobal@@SAPAVScAutoFormat@@XZ
+?GetUserList@ScGlobal@@SAPAVScUserList@@XZ
+?GetEmptyString@ScGlobal@@SAABVString@@XZ
+?AddToken@ScGlobal@@SAXAAVString@@ABV2@GG_N@Z
+?IsQuoted@ScGlobal@@SA_NABVString@@G@Z
+?AddQuotes@ScGlobal@@SAXAAVString@@G@Z
+?EraseQuotes@ScGlobal@@SAXAAVString@@G@Z
+?GetpTransliteration@ScGlobal@@SAPAVTransliterationWrapper@utl@@XZ
+?GetpLocaleData@ScGlobal@@SAPBVLocaleDataWrapper@@XZ
+?GetRscString@ScGlobal@@SAABVString@@G@Z
+??8ScQueryParam@@QBEEABU0@@Z
+?DeleteQuery@ScQueryParam@@QAEXI@Z
+??0ScSubTotalParam@@QAE@ABU0@@Z
+?Clear@ScSubTotalParam@@QAEXXZ
+??4ScSubTotalParam@@QAEAAU0@ABU0@@Z
+??8ScSubTotalParam@@QBEEABU0@@Z
+?SetSubTotals@ScSubTotalParam@@QAEXGPBFPBW4ScSubTotalFunc@@G@Z
+?Resize@ScQueryParam@@QAEXI@Z
+?MoveToDest@ScQueryParam@@QAEXXZ
+?FillInExcelSyntax@ScQueryParam@@QAEXAAVString@@I@Z
+?Load@ScQueryParam@@QAEXAAVSvStream@@@Z
+?Store@ScQueryParam@@QBEXAAVSvStream@@@Z
+??0ScSubTotalParam@@QAE@XZ
+??0ScQueryParam@@QAE@ABU0@@Z
+??1ScQueryParam@@QAE@XZ
+?Clear@ScQueryParam@@QAEXXZ
+??4ScQueryParam@@QAEAAU0@ABU0@@Z
+??0ScQueryParam@@QAE@XZ
+??0ScMarkData@@QAE@ABV0@@Z
+??4ScMarkData@@QAEAAV0@ABV0@@Z
+??1ScMarkData@@QAE@XZ
+?ResetMark@ScMarkData@@QAEXXZ
+?GetMarkArea@ScMarkData@@QBEXAAVScRange@@@Z
+?GetMultiMarkArea@ScMarkData@@QBEXAAVScRange@@@Z
+?SetAreaTab@ScMarkData@@QAEXF@Z
+?SelectOneTable@ScMarkData@@QAEXF@Z
+?GetSelectCount@ScMarkData@@QBEFXZ
+?GetFirstSelected@ScMarkData@@QBEFXZ
+?IsCellMarked@ScMarkData@@QBEEFJE@Z
+?IsColumnMarked@ScMarkData@@QBEEF@Z
+?IsRowMarked@ScMarkData@@QBEEJ@Z
+?FillRangeListWithMarks@ScMarkData@@QBEXPAVScRangeList@@E@Z
+?ExtendRangeListTables@ScMarkData@@QBEXPAVScRangeList@@@Z
+?IsAllMarked@ScMarkData@@QBEEABVScRange@@@Z
+?GetNextMarked@ScMarkData@@QBEJFJE@Z
+?HasMultiMarks@ScMarkData@@QBEEF@Z
+?HasAnyMultiMarks@ScMarkData@@QBEEXZ
+?InsertTab@ScMarkData@@QAEXF@Z
+?DeleteTab@ScMarkData@@QAEXF@Z
+??0ScMarkData@@QAE@XZ
+?SetMarkArea@ScMarkData@@QAEXABVScRange@@@Z
+?SetMultiMarkArea@ScMarkData@@QAEXABVScRange@@E@Z
+?MarkToMulti@ScMarkData@@QAEXXZ
+?MarkToSimple@ScMarkData@@QAEXXZ
+?MarkFromRangeList@ScMarkData@@QAEXABVScRangeList@@E@Z
+?GetMarkColumnRanges@ScMarkData@@QAEJPAJ@Z
+?GetMarkRowRanges@ScMarkData@@QAEJPAJ@Z
+?pDoc@ScPatternAttr@@2PAVScDocument@@A
+??0ScPatternAttr@@QAE@PAVSfxItemSet@@ABVString@@@Z
+??_7ScPatternAttr@@6B@
+??8ScPatternAttr@@UBEHABVSfxPoolItem@@@Z
+?Create@ScPatternAttr@@UBEPAVSfxPoolItem@@AAVSvStream@@G@Z
+?Store@ScPatternAttr@@UBEAAVSvStream@@AAV2@G@Z
+?Clone@ScPatternAttr@@UBEPAVSfxPoolItem@@PAVSfxItemPool@@@Z
+??0ScPatternAttr@@QAE@PAVSfxItemSet@@PAVScStyleSheet@@@Z
+??0ScPatternAttr@@QAE@PAVSfxItemPool@@@Z
+??0ScPatternAttr@@QAE@ABV0@@Z
+?GetFont@ScPatternAttr@@SAXAAVFont@@ABVSfxItemSet@@W4ScAutoFontColorMode@@PAVOutputDevice@@PBVFraction@@PBV3@EPBVColor@@6@Z
+?GetFont@ScPatternAttr@@QBEXAAVFont@@W4ScAutoFontColorMode@@PAVOutputDevice@@PBVFraction@@PBVSfxItemSet@@EPBVColor@@5@Z
+?FillToEditItemSet@ScPatternAttr@@SAXAAVSfxItemSet@@ABV2@PBV2@@Z
+?FillEditItemSet@ScPatternAttr@@QBEXPAVSfxItemSet@@PBV2@@Z
+?GetFromEditItemSet@ScPatternAttr@@SAXAAVSfxItemSet@@ABV2@@Z
+?GetFromEditItemSet@ScPatternAttr@@QAEXPBVSfxItemSet@@@Z
+?FillEditParaItems@ScPatternAttr@@QBEXPAVSfxItemSet@@@Z
+?DeleteUnchanged@ScPatternAttr@@QAEXPBV1@@Z
+?HasItemsSet@ScPatternAttr@@QBEEPBG@Z
+?ClearItems@ScPatternAttr@@QAEXPBG@Z
+?IsVisible@ScPatternAttr@@QBEEXZ
+?IsVisibleEqual@ScPatternAttr@@QBEEABV1@@Z
+?GetStyleName@ScPatternAttr@@QBEPBVString@@XZ
+?SetStyleSheet@ScPatternAttr@@QAEXPAVScStyleSheet@@@Z
+?UpdateStyleSheet@ScPatternAttr@@QAEXXZ
+?StyleToName@ScPatternAttr@@QAEXXZ
+?IsSymbolFont@ScPatternAttr@@QBEEXZ
+?GetSubsFontConverter@ScPatternAttr@@QBEPAXK@Z
+?GetNumberFormat@ScPatternAttr@@QBEKPAVSvNumberFormatter@@@Z
+?GetNumberFormat@ScPatternAttr@@QBEKPAVSvNumberFormatter@@PBVSfxItemSet@@@Z
+?GetItem@ScPatternAttr@@SAABVSfxPoolItem@@GABVSfxItemSet@@PBV3@@Z
+?GetItem@ScPatternAttr@@QBEABVSfxPoolItem@@GPBVSfxItemSet@@@Z
+??1ScPatternAttr@@UAE@XZ
+?GetCellOrientation@ScPatternAttr@@SA?AW4SvxCellOrientation@@ABVSfxItemSet@@PBV3@@Z
+?GetCellOrientation@ScPatternAttr@@QBE?AW4SvxCellOrientation@@PBVSfxItemSet@@@Z
+?PutInPool@ScPatternAttr@@QBEPAV1@PAVScDocument@@0@Z
+?GetRotateVal@ScPatternAttr@@QBEJPBVSfxItemSet@@@Z
+?GetRotateDir@ScPatternAttr@@QBEEPBVSfxItemSet@@@Z
+??4ScSortParam@@QAEAAU0@ABU0@@Z
+??8ScSortParam@@QBEEABU0@@Z
+??0ScSortParam@@QAE@ABUScSubTotalParam@@ABU0@@Z
+??0ScSortParam@@QAE@ABUScQueryParam@@F@Z
+??0ScSortParam@@QAE@ABU0@@Z
+?Clear@ScSortParam@@QAEXXZ
+?MoveToDest@ScSortParam@@QAEXXZ
+??0ScSortParam@@QAE@XZ
+?Justify@ScRange@@QAEXXZ
+?ExtendOne@ScRange@@QAEXXZ
+?ParseRows@ScRange@@QAEGABVString@@PAVScDocument@@ABUDetails@ScAddress@@@Z
+?Move@ScAddress@@QAE_NFJFPAVScDocument@@@Z
+?Move@ScRange@@QAE_NFJFPAVScDocument@@@Z
+?GetText@ScAddress@@QBE?AVString@@XZ
+?Parse@ScAddress@@QAEGABVString@@PAVScDocument@@ABUDetails@1@@Z
+?Intersects@ScRange@@QBE_NABV1@@Z
+?ExtendTo@ScRange@@QAEXABV1@@Z
+?Parse@ScRange@@QAEGABVString@@PAVScDocument@@ABUDetails@ScAddress@@@Z
+?ParseAny@ScRange@@QAEGABVString@@PAVScDocument@@ABUDetails@ScAddress@@@Z
+?ParseCols@ScRange@@QAEGABVString@@PAVScDocument@@ABUDetails@ScAddress@@@Z
+?ColToAlpha@@YAXAAVOUStringBuffer@rtl@@F@Z
+?GetColRowString@ScAddress@@QBE?AVString@@_NABUDetails@1@@Z
+?Format@ScAddress@@QBEXAAVString@@GPAVScDocument@@ABUDetails@1@@Z
+?Format@ScRange@@QBEXAAVString@@GPAVScDocument@@ABUDetails@ScAddress@@@Z
+?detailsOOOa1@ScAddress@@2UDetails@1@B
+??1ScAppOptions@@QAE@XZ
+?SetDefaults@ScAppOptions@@QAEXXZ
+?SetLRUFuncList@ScAppOptions@@QAEXPBGG@Z
+??0ScAppOptions@@QAE@XZ
+??4ScAppOptions@@QAEABV0@ABV0@@Z
+??0ScAppOptions@@QAE@ABV0@@Z
+?GetField@ScAutoFormatData@@AAEAAVScAutoFormatDataField@@G@Z
+?GetField@ScAutoFormatData@@ABEABVScAutoFormatDataField@@G@Z
+?GetItem@ScAutoFormatData@@QBEPBVSfxPoolItem@@GG@Z
+?PutItem@ScAutoFormatData@@QAEXGABVSfxPoolItem@@@Z
+?CopyItem@ScAutoFormatData@@QAEXGGG@Z
+?GetNumFormat@ScAutoFormatData@@QBEABVScNumFormatAbbrev@@G@Z
+?SetNumFormat@ScAutoFormatData@@QAEXGABVScNumFormatAbbrev@@@Z
+?IsEqualData@ScAutoFormatData@@QBEEGG@Z
+?FillToItemSet@ScAutoFormatData@@QBEXGAAVSfxItemSet@@AAVScDocument@@@Z
+?GetFromItemSet@ScAutoFormatData@@QAEXGABVSfxItemSet@@ABVScNumFormatAbbrev@@@Z
+?Load@ScAutoFormatData@@QAEEAAVSvStream@@ABUScAfVersions@@@Z
+?LoadOld@ScAutoFormatData@@QAEEAAVSvStream@@ABUScAfVersions@@@Z
+?Save@ScAutoFormatData@@QAEEAAVSvStream@@@Z
+??0ScAutoFormat@@QAE@ABV0@@Z
+??_7ScAutoFormat@@6B@
+?Compare@ScAutoFormat@@UBEFPAVDataObject@@0@Z
+?SetSaveLater@ScAutoFormat@@QAEXE@Z
+?FindIndexPerName@ScAutoFormat@@QBEGABVString@@@Z
+??0ScAutoFormatData@@QAE@XZ
+??_7ScAutoFormatData@@6B@
+??0ScAutoFormatData@@QAE@ABV0@@Z
+??1ScAutoFormatData@@UAE@XZ
+??0ScAutoFormat@@QAE@GGE@Z
+?Load@ScAutoFormat@@QAEEXZ
+?Save@ScAutoFormat@@QAEEXZ
+??1ScAutoFormat@@UAE@XZ
+??0Collection@@QAE@GG@Z
+??_7Collection@@6B@
+?Clone@Collection@@UBEPAVDataObject@@XZ
+?Insert@Collection@@UAEEPAVDataObject@@@Z
+?IndexOf@Collection@@UBEGPAVDataObject@@@Z
+??1Collection@@UAE@XZ
+?AtFree@Collection@@QAEXG@Z
+?Free@Collection@@QAEXPAVDataObject@@@Z
+?FreeAll@Collection@@QAEXXZ
+?At@Collection@@QBEPAVDataObject@@G@Z
+??4Collection@@QAEAAV0@ABV0@@Z
+??0SortedCollection@@QAE@GGE@Z
+?Insert@SortedCollection@@UAEEPAVDataObject@@@Z
+?IndexOf@SortedCollection@@UBEGPAVDataObject@@@Z
+?IsEqual@SortedCollection@@UBEEPAVDataObject@@0@Z
+?InsertPos@SortedCollection@@UAEEPAVDataObject@@AAG@Z
+?Search@SortedCollection@@QBEEPAVDataObject@@AAG@Z
+??8SortedCollection@@QBEEABV0@@Z
+?Compare@StrCollection@@UBEFPAVDataObject@@0@Z
+?Store@StrCollection@@QBEXAAVSvStream@@@Z
+?Compare@TypedStrCollection@@UBEFPAVDataObject@@0@Z
+?FindText@TypedStrCollection@@QBEEABVString@@AAV2@AAGE@Z
+?GetExactMatch@TypedStrCollection@@QBEEAAVString@@@Z
+?Clone@StrCollection@@UBEPAVDataObject@@XZ
+?Clone@TypedStrCollection@@UBEPAVDataObject@@XZ
+??0Collection@@QAE@ABV0@@Z
+?AtInsert@Collection@@QAEEGPAVDataObject@@@Z
+?Load@StrCollection@@QAEXAAVSvStream@@@Z
+?pSymbolTableNative@ScCompiler@@2PAVString@@A
+?pSymbolTableEnglish@ScCompiler@@2PAVString@@A
+?nAnzStrings@ScCompiler@@2GA
+?pSymbolHashMapNative@ScCompiler@@2PAV?$hash_map@VString@@GUScStringHashCode@@U?$equal_to@VString@@@_STL@@V?$allocator@U?$pair@$$CBVString@@G@_STL@@@4@@_STL@@A
+?pSymbolHashMapEnglish@ScCompiler@@2PAV?$hash_map@VString@@GUScStringHashCode@@U?$equal_to@VString@@@_STL@@V?$allocator@U?$pair@$$CBVString@@G@_STL@@@4@@_STL@@A
+?pCharClassEnglish@ScCompiler@@2PAVCharClass@@A
+?pConventions@ScCompiler@@2PAPBUConvention@1@A
+?SetRefConvention@ScCompiler@@QAEXPBUConvention@1@@Z
+?SetError@ScCompiler@@AAEXG@Z
+?PushTokenArray@ScCompiler@@AAEXPAVScTokenArray@@E@Z
+?HasModifiedRange@ScCompiler@@QAEEXZ
+?SetRelNameReference@ScCompiler@@AAEXXZ
+?MoveRelWrap@ScCompiler@@QAEXXZ
+?MoveRelWrap@ScCompiler@@SAXAAVScTokenArray@@PAVScDocument@@ABVScAddress@@@Z
+?UpdateReference@ScCompiler@@QAEPAVScRangeData@@W4UpdateRefMode@@ABVScAddress@@ABVScRange@@FJFAAE3@Z
+?UpdateNameReference@ScCompiler@@QAEEW4UpdateRefMode@@ABVScRange@@FJFAAEE@Z
+?UpdateSharedFormulaReference@ScCompiler@@QAEXW4UpdateRefMode@@ABVScAddress@@ABVScRange@@FJF@Z
+?UpdateDeleteTab@ScCompiler@@QAEPAVScRangeData@@FEEAAE@Z
+?GetStringFromOpCode@ScCompiler@@SAABVString@@G_N@Z
+?AppendDouble@ScCompiler@@AAEXAAVOUStringBuffer@rtl@@N@Z
+?EnQuote@ScCompiler@@SAEAAVString@@@Z
+?DeQuote@ScCompiler@@SAEAAVString@@@Z
+?GetScCompilerpSymbolTableNative@@YAPAVString@@XZ
+?CheckTabQuotes@ScCompiler@@SAXAAVString@@W4Convention@ScAddress@@@Z
+?SetCompileXML@ScCompiler@@QAEXE@Z
+?SetRefConvention@ScCompiler@@QAEXW4Convention@ScAddress@@@Z
+?NextSymbol@ScCompiler@@AAEGXZ
+?IsOpCode2@ScCompiler@@AAEEABVString@@@Z
+?IsValue@ScCompiler@@AAEEABVString@@@Z
+?IsString@ScCompiler@@AAEEXZ
+?IsReference@ScCompiler@@AAEEABVString@@@Z
+?IsMacro@ScCompiler@@AAEEABVString@@@Z
+?IsNamedRange@ScCompiler@@AAEEABVString@@@Z
+?IsDBRange@ScCompiler@@AAEEABVString@@@Z
+?IsColRowName@ScCompiler@@AAEEABVString@@@Z
+?AutoCorrectParsedSymbol@ScCompiler@@AAEXXZ
+?PopTokenArray@ScCompiler@@AAEXXZ
+?PutCode@ScCompiler@@AAEXAAV?$ScSimpleIntrusiveReference@VScToken@@@@@Z
+?AdjustReference@ScCompiler@@AAEXAAUSingleRefData@@@Z
+?UpdateInsertTab@ScCompiler@@QAEPAVScRangeData@@FE@Z
+?UpdateMoveTab@ScCompiler@@QAEPAVScRangeData@@FFE@Z
+?AppendBoolean@ScCompiler@@AAEXAAVOUStringBuffer@rtl@@_N@Z
+?AppendString@ScCompiler@@AAEXAAVOUStringBuffer@rtl@@ABVString@@@Z
+?CreateStringFromScMatrix@ScCompiler@@AAEXAAVOUStringBuffer@rtl@@PBVScMatrix@@@Z
+?CreateStringFromToken@ScCompiler@@QAEPAVScToken@@AAVOUStringBuffer@rtl@@PAV2@E@Z
+?CreateStringFromTokenArray@ScCompiler@@QAEXAAVOUStringBuffer@rtl@@@Z
+?IsOpCode@ScCompiler@@AAEEABVString@@@Z
+?IsBoolean@ScCompiler@@AAEEABVString@@@Z
+?NextNewToken@ScCompiler@@AAEE_N@Z
+?CompileString@ScCompiler@@QAEPAVScTokenArray@@ABVString@@W4Convention@ScAddress@@@Z
+?CreateStringFromToken@ScCompiler@@QAEPAVScToken@@AAVString@@PAV2@E@Z
+?CreateStringFromTokenArray@ScCompiler@@QAEXAAVString@@@Z
+?GetToken@ScCompiler@@AAEEXZ
+?NextToken@ScCompiler@@AAEGXZ
+?Factor@ScCompiler@@AAEXXZ
+?Expression@ScCompiler@@AAEGXZ
+?UnionCutLine@ScCompiler@@AAEXXZ
+?UnaryLine@ScCompiler@@AAEXXZ
+?PostOpLine@ScCompiler@@AAEXXZ
+?PowLine@ScCompiler@@AAEXXZ
+?MulDivLine@ScCompiler@@AAEXXZ
+?AddSubLine@ScCompiler@@AAEXXZ
+?ConcatLine@ScCompiler@@AAEXXZ
+?CompareLine@ScCompiler@@AAEXXZ
+?NotLine@ScCompiler@@AAEXXZ
+?CompileTokenArray@ScCompiler@@QAEEXZ
+?Init@ScCompiler@@SAXXZ
+?DeInit@ScCompiler@@SAXXZ
+?SetCompileEnglish@ScCompiler@@QAEXE@Z
+??0ScCompiler@@QAE@PAVScDocument@@ABVScAddress@@ABVScTokenArray@@@Z
+??0ScCompiler@@QAE@PAVScDocument@@ABVScAddress@@@Z
+?Insert@ScDBCollection@@UAEEPAVDataObject@@@Z
+?Compare@ScDBCollection@@UBEFPAVDataObject@@0@Z
+?IsEqual@ScDBCollection@@UBEEPAVDataObject@@0@Z
+?GetArea@ScDBData@@QBEXAAVScRange@@@Z
+?GetQueryParam@ScDBData@@QBEXAAUScQueryParam@@@Z
+?GetDBAtCursor@ScDBCollection@@QBEPAVScDBData@@FJFE@Z
+?GetDBAtArea@ScDBCollection@@QBEPAVScDBData@@FFJFJ@Z
+?Load@ScDBCollection@@QAEEAAVSvStream@@@Z
+?Store@ScDBCollection@@QBEEAAVSvStream@@@Z
+?DeleteOnTab@ScDBCollection@@QAEXF@Z
+?UpdateMoveTab@ScDBCollection@@QAEXFF@Z
+?FindIndex@ScDBCollection@@QAEPAVScDBData@@G@Z
+?SearchName@ScDBCollection@@QBEEABVString@@AAG@Z
+?UpdateReference@ScDBCollection@@QAEXW4UpdateRefMode@@FJFFJFFJF@Z
+?CreateType@ScTpCalcItem@@SAPAXXZ
+?StaticType@ScTpCalcItem@@SAP6APAXXZXZ
+?Type@ScTpCalcItem@@UBEP6APAXXZXZ
+?IsOf@ScTpCalcItem@@SAEP6APAXXZ@Z
+?IsA@ScTpCalcItem@@UBEEP6APAXXZ@Z
+??0ScDocOptions@@QAE@ABV0@@Z
+??1ScDocOptions@@QAE@XZ
+?Save@ScDocOptions@@QBEXAAVSvStream@@E@Z
+?Load@ScDocOptions@@QAEXAAVSvStream@@@Z
+?ResetDocOptions@ScDocOptions@@QAEXXZ
+??0ScTpCalcItem@@QAE@GABVScDocOptions@@@Z
+??_7ScTpCalcItem@@6B@
+??8ScTpCalcItem@@UBEHABVSfxPoolItem@@@Z
+?Clone@ScTpCalcItem@@UBEPAVSfxPoolItem@@PAVSfxItemPool@@@Z
+?GetValueText@ScTpCalcItem@@UBE?AVString@@XZ
+??0ScTpCalcItem@@QAE@ABV0@@Z
+??1ScTpCalcItem@@UAE@XZ
+??0ScDocOptions@@QAE@XZ
+??0ScTpCalcItem@@QAE@G@Z
+??0ScEditEngineDefaulter@@QAE@PAVSfxItemPool@@E@Z
+??_7ScEditEngineDefaulter@@6BEditEngine@@@
+??_7ScEditEngineDefaulter@@6BScEnginePoolHelper@@@
+??0ScEditEngineDefaulter@@QAE@ABV0@@Z
+??1ScEditEngineDefaulter@@UAE@XZ
+?SetDefaults@ScEditEngineDefaulter@@QAEXABVSfxItemSet@@E@Z
+?SetDefaults@ScEditEngineDefaulter@@QAEXPAVSfxItemSet@@E@Z
+?SetDefaultItem@ScEditEngineDefaulter@@QAEXABVSfxPoolItem@@@Z
+?GetDefaults@ScEditEngineDefaulter@@QAEABVSfxItemSet@@XZ
+?SetText@ScEditEngineDefaulter@@QAEXABVEditTextObject@@@Z
+?SetTextNewDefaults@ScEditEngineDefaulter@@QAEXABVEditTextObject@@ABVSfxItemSet@@E@Z
+?SetTextNewDefaults@ScEditEngineDefaulter@@QAEXABVEditTextObject@@PAVSfxItemSet@@E@Z
+?SetText@ScEditEngineDefaulter@@QAEXABVString@@@Z
+?SetTextNewDefaults@ScEditEngineDefaulter@@QAEXABVString@@ABVSfxItemSet@@E@Z
+?SetTextNewDefaults@ScEditEngineDefaulter@@QAEXABVString@@PAVSfxItemSet@@E@Z
+?RepeatDefaults@ScEditEngineDefaulter@@QAEXXZ
+?RemoveParaAttribs@ScEditEngineDefaulter@@QAEXXZ
+?CreateType@ScTpPrintItem@@SAPAXXZ
+?StaticType@ScTpPrintItem@@SAP6APAXXZXZ
+?Type@ScTpPrintItem@@UBEP6APAXXZXZ
+?IsOf@ScTpPrintItem@@SAEP6APAXXZ@Z
+?IsA@ScTpPrintItem@@UBEEP6APAXXZ@Z
+??0ScPrintOptions@@QAE@ABV0@@Z
+??1ScPrintOptions@@QAE@XZ
+?SetDefaults@ScPrintOptions@@QAEXXZ
+??4ScPrintOptions@@QAEABV0@ABV0@@Z
+??8ScPrintOptions@@QBEHABV0@@Z
+??9ScPrintOptions@@QBEHABV0@@Z
+??0ScTpPrintItem@@QAE@GABVScPrintOptions@@@Z
+??_7ScTpPrintItem@@6B@
+??8ScTpPrintItem@@UBEHABVSfxPoolItem@@@Z
+?Clone@ScTpPrintItem@@UBEPAVSfxPoolItem@@PAVSfxItemPool@@@Z
+?GetValueText@ScTpPrintItem@@UBE?AVString@@XZ
+??0ScTpPrintItem@@QAE@ABV0@@Z
+??1ScTpPrintItem@@UAE@XZ
+??0ScPrintOptions@@QAE@XZ
+??0ScTpPrintItem@@QAE@G@Z
+??1ScRangeList@@UAE@XZ
+?RemoveAll@ScRangeList@@QAEXXZ
+?Parse@ScRangeList@@QAEGABVString@@PAVScDocument@@GW4Convention@ScAddress@@D@Z
+?Format@ScRangeList@@QBEXAAVString@@GPAVScDocument@@W4Convention@ScAddress@@D@Z
+?Join@ScRangeList@@QAEXABVScRange@@E@Z
+??8ScRangeList@@QBEEABV0@@Z
+?Store@ScRangeList@@QBEEAAVSvStream@@@Z
+?Load@ScRangeList@@QAEEAAVSvStream@@G@Z
+?UpdateReference@ScRangeList@@QAEEW4UpdateRefMode@@PAVScDocument@@ABVScRange@@FJF@Z
+?Find@ScRangeList@@QBEPAVScRange@@ABVScAddress@@@Z
+?Find@ScRangeList@@QBEPAVScRange@@ABV2@@Z
+??0ScRangeList@@QAE@ABV0@@Z
+?Clone@ScRangeList@@QBEPAV1@XZ
+??4ScRangeList@@QAEAAV0@ABV0@@Z
+?Intersects@ScRangeList@@QBEEABVScRange@@@Z
+?In@ScRangeList@@QBEEABVScRange@@@Z
+?GetCellCount@ScRangeList@@QBEKXZ
+?CutPosString@ScRangeUtil@@QBEXABVString@@AAV2@@Z
+?IsAbsArea@ScRangeUtil@@QBEEABVString@@PAVScDocument@@FPAV2@PAVScRefAddress@@3ABUDetails@ScAddress@@@Z
+?IsAbsPos@ScRangeUtil@@QBEEABVString@@PAVScDocument@@FPAV2@PAVScRefAddress@@ABUDetails@ScAddress@@@Z
+?MakeRangeFromName@ScRangeUtil@@QBEEABVString@@PAVScDocument@@FAAVScRange@@W4RutlNameScope@@ABUDetails@ScAddress@@@Z
+??0ScAreaNameIterator@@QAE@PAVScDocument@@@Z
+?Next@ScAreaNameIterator@@QAEEAAVString@@AAVScRange@@@Z
+?MakeArea@ScRangeUtil@@QBEEABVString@@AAVScArea@@PAVScDocument@@FABUDetails@ScAddress@@@Z
+?IsAbsTabArea@ScRangeUtil@@QBEEABVString@@PAVScDocument@@PAPAPAVScArea@@PAGEABUDetails@ScAddress@@@Z
+?Delete@ScRawToken@@QAEXXZ
+?Clone@ScUserList@@UBEPAVDataObject@@XZ
+?InitTokens@ScUserListData@@AAEXXZ
+??0ScUserListData@@QAE@ABVString@@@Z
+??_7ScUserListData@@6B@
+??0ScUserListData@@QAE@ABV0@@Z
+??1ScUserListData@@UAE@XZ
+??0ScUserListData@@QAE@AAVSvStream@@@Z
+?Store@ScUserListData@@QBEEAAVSvStream@@@Z
+?SetString@ScUserListData@@QAEXABVString@@@Z
+?GetSubCount@ScUserListData@@QBEGXZ
+?GetSubIndex@ScUserListData@@QBEEABVString@@AAG@Z
+?GetSubStr@ScUserListData@@QBE?AVString@@G@Z
+?Compare@ScUserListData@@QBE?AW4StringCompare@@ABVString@@0@Z
+?ICompare@ScUserListData@@QBE?AW4StringCompare@@ABVString@@0@Z
+?Load@ScUserList@@QAEEAAVSvStream@@@Z
+?Store@ScUserList@@QBEEAAVSvStream@@@Z
+?GetData@ScUserList@@QBEPAVScUserListData@@ABVString@@@Z
+??8ScUserList@@QBEEABV0@@Z
+?HasEntry@ScUserList@@QBEEABVString@@@Z
+??0ScUserList@@QAE@GG@Z
+?CreateType@ScTpViewItem@@SAPAXXZ
+?StaticType@ScTpViewItem@@SAP6APAXXZXZ
+?Type@ScTpViewItem@@UBEP6APAXXZXZ
+?IsOf@ScTpViewItem@@SAEP6APAXXZ@Z
+?IsA@ScTpViewItem@@UBEEP6APAXXZ@Z
+??1ScViewOptions@@QAE@XZ
+?GetGridColor@ScViewOptions@@QBE?AVColor@@PAVString@@@Z
+??4ScViewOptions@@QAEABV0@ABV0@@Z
+??8ScViewOptions@@QBEHABV0@@Z
+?Save@ScViewOptions@@QBEXAAVSvStream@@E@Z
+?CreateGridItem@ScViewOptions@@QBEPAVSvxGridItem@@G@Z
+??1ScTpViewItem@@UAE@XZ
+??_7ScTpViewItem@@6B@
+??8ScTpViewItem@@UBEHABVSfxPoolItem@@@Z
+?Clone@ScTpViewItem@@UBEPAVSfxPoolItem@@PAVSfxItemPool@@@Z
+?GetValueText@ScTpViewItem@@UBE?AVString@@XZ
+??0ScViewOptions@@QAE@ABV0@@Z
+?SetDefaults@ScViewOptions@@QAEXXZ
+??0ScTpViewItem@@QAE@GABVScViewOptions@@@Z
+??0ScTpViewItem@@QAE@ABV0@@Z
+??0ScViewOptions@@QAE@XZ
+??0ScTpViewItem@@QAE@G@Z
+?hash@ScAddress@@QBEIXZ
+?hash@ScRange@@QBEIXZ
+?hashStartColumn@ScRange@@QBEIXZ
Index: sc/workben/addin.cxx
===================================================================
RCS file: /cvs/sc/sc/workben/addin.cxx,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.2 -r1.3
--- sc/workben/addin.cxx	8 Sep 2005 23:15:53 -0000	1.2
+++ sc/workben/addin.cxx	6 Sep 2007 14:22:26 -0000	1.3
@@ -33,7 +33,9 @@
  *
  ************************************************************************/
 
+#ifdef _MSC_VER
 #pragma hdrstop
+#endif
 
 #include <usr/factoryhlp.hxx>
 #include <usr/macros.hxx>
Index: sc/workben/result.cxx
===================================================================
RCS file: /cvs/sc/sc/workben/result.cxx,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -b -I $Revision.*$ -I $Author.*$ -r1.2 -r1.3
--- sc/workben/result.cxx	8 Sep 2005 23:16:56 -0000	1.2
+++ sc/workben/result.cxx	6 Sep 2007 14:22:41 -0000	1.3
@@ -33,7 +33,9 @@
  *
  ************************************************************************/
 
+#ifdef _MSC_VER
 #pragma hdrstop
+#endif
 
 #include <tools/debug.hxx>
 #include <usr/ustring.hxx>
--- /dev/null	2007-05-04 06:54:36.000000000 -0400
+++ sc/inc/dpcachetable.hxx	2007-10-04 23:40:06.000000000 -0400
@@ -0,0 +1,155 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile: dpobject.hxx,v $
+ *
+ *  $Revision: 1.12 $
+ *
+ *  last change: $Author: hr $ $Date: 2007/06/27 13:41:57 $
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *    MA  02111-1307  USA
+ *
+ ************************************************************************/
+
+#ifndef SC_DPCACHETABLE_HXX
+#define SC_DPCACHETABLE_HXX
+
+#include "sal/types.h"
+#include "osl/mutex.hxx"
+#include "global.hxx"
+
+#include <vector>
+#include <hash_map>
+#include <com/sun/star/uno/Reference.hxx>
+
+namespace com { namespace sun { namespace star {
+    namespace sdbc {
+        class XRowSet;
+    }
+}}}
+
+class Date;
+
+class ScDocument;
+class ScRange;
+class ScDPDimension;
+
+void checkQueryParam(const ScQueryParam& rParam);
+
+class ScSharedStringTable
+{
+public:
+    sal_Int32 insertString(const String& aStr);
+    sal_Int32 getStringId(const String& aStr);
+    const String* getString(sal_Int32 nId) const;
+
+    ScSharedStringTable();
+    ~ScSharedStringTable();
+
+private:
+    typedef ::std::hash_map< String, sal_Int32, ScStringHashCode, ::std::equal_to< String > > SharedStrMap;
+
+    ::std::vector<String> maSharedStrings;
+    SharedStrMap maSharedStringIds;
+    sal_Int32 mnStrCount;
+};
+
+// ----------------------------------------------------------------------------
+
+class ScDPCacheTable
+{
+public:
+    /** individual cell within table. */
+    struct Cell
+    {
+        sal_Int32 mnStrId;
+        double  mfValue;
+        bool    mbNumeric;
+
+        Cell();
+    };
+
+    /** filtering criteria */
+    struct Filter
+    {
+        sal_Int32   mnFieldIndex;
+        sal_Int32   mnMatchStrId;
+
+        Filter();
+    };
+
+    ScDPCacheTable();
+    ~ScDPCacheTable();
+
+    sal_Int32 getHeaderSize() const;
+    sal_Int32 getRowSize() const;
+    sal_Int32 getColSize() const;
+
+    /** Fill the internal table from the cell range provided.  This function
+        assumes that the first row is the column header. */
+    void fillTable(ScDocument* pDoc, const ScRange& rRange, const ScQueryParam& rQuery, BOOL* pSpecial, 
+                   const ::std::vector<ScDPDimension*>& rPageDims);
+
+    void fillTable(const ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XRowSet >& xRowSet,
+                   const Date& rNullDate, const ::std::vector<ScDPDimension*>& rPageDims);
+
+    /** Get the cell instance at specified location within the data grid. Note
+        that the data grid doesn't include the header row.  Don't delete the
+        returned object! */
+    const ::ScDPCacheTable::Cell* getCell(SCCOL nCol, SCROW nRow) const;
+
+    const String* getFieldName(sal_Int32 nIndex) const;
+
+    /** Get the field index (i.e. column ID in the original data source) based
+        on the string value that corresponds with the column title.  It returns
+        -1 if no field matching the string value exists. */
+    sal_Int32 getFieldIndex(const String& rStr) const;
+
+    /** Get a new table that contains filtered version of the original table. */
+    void filterTable(const ::std::vector<Filter>& rFilters, ScDPCacheTable& rNewTable) const;
+
+    void clear();
+    void swap(ScDPCacheTable& rOther);
+    bool empty() const;
+
+    static const String* getString(sal_Int32 nId);
+    static sal_Int32 getStringId(const String& aStr);
+
+private:
+    void getValueData(ScDocument* pDoc, const ScAddress& rPos, Cell& rCell);
+    ScDPCacheTable::Cell getSelectedDimension(ScDPDimension* pDim) const;
+
+private:
+    ::std::vector< ::std::vector< ::ScDPCacheTable::Cell > > maTable;
+    ::std::vector<sal_Int32> maHeader;
+
+    static sal_Int32 insertString(const String& aStr);
+
+    static ::osl::Mutex maStrMutex;
+    static ScSharedStringTable maStringTable;
+};
+
+
+#endif
--- /dev/null	2007-05-04 06:54:36.000000000 -0400
+++ sc/source/core/data/dpcachetable.cxx	2007-10-04 23:48:17.000000000 -0400
@@ -0,0 +1,493 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile: dpobject.hxx,v $
+ *
+ *  $Revision: 1.12 $
+ *
+ *  last change: $Author: hr $ $Date: 2007/06/27 13:41:57 $
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *    MA  02111-1307  USA
+ *
+ ************************************************************************/
+
+#include "dpcachetable.hxx"
+#include "document.hxx"
+#include "address.hxx"
+#include "cell.hxx"
+#include "dptabdat.hxx"
+#include "dptabsrc.hxx"
+
+#include <com/sun/star/sdbc/DataType.hpp>
+#include <com/sun/star/sdbc/XRow.hpp>
+#include <com/sun/star/sdbc/XRowSet.hpp>
+#include <com/sun/star/sdbc/XResultSetMetaData.hpp>
+#include <com/sun/star/sdbc/XResultSetMetaDataSupplier.hpp>
+#include <com/sun/star/util/Date.hpp>
+
+using namespace ::com::sun::star;
+
+using ::std::vector;
+using ::com::sun::star::uno::Exception;
+using ::com::sun::star::uno::Reference;
+using ::com::sun::star::uno::UNO_QUERY;
+using ::com::sun::star::uno::UNO_QUERY_THROW;
+
+static BOOL lcl_HasQueryEntry( const ScQueryParam& rParam )
+{
+    return rParam.GetEntryCount() > 0 &&
+            rParam.GetEntry(0).bDoQuery;
+}
+
+ScSharedStringTable::ScSharedStringTable() :
+    mnStrCount(0)
+{
+    maSharedStrings.push_back(String());
+    maSharedStringIds.insert( SharedStrMap::value_type(String(), mnStrCount++) );
+}
+
+ScSharedStringTable::~ScSharedStringTable()
+{
+}
+
+sal_Int32 ScSharedStringTable::insertString(const String& aStr)
+{
+    SharedStrMap::const_iterator itr = maSharedStringIds.find(aStr), 
+        itrEnd = maSharedStringIds.end();
+
+    if (itr == itrEnd)
+    {
+        // new string.
+        maSharedStrings.push_back(aStr);
+        maSharedStringIds.insert( SharedStrMap::value_type(aStr, mnStrCount) );
+        return mnStrCount++;
+    }
+
+    // existing string.
+    return itr->second;
+}
+
+sal_Int32 ScSharedStringTable::getStringId(const String& aStr)
+{
+    SharedStrMap::const_iterator itr = maSharedStringIds.find(aStr), 
+        itrEnd = maSharedStringIds.end();
+    if (itr == itrEnd)
+    {
+        // string not found.
+        return insertString(aStr);
+    }
+    return itr->second;
+}
+
+const String* ScSharedStringTable::getString(sal_Int32 nId) const
+{
+    if (nId >= mnStrCount)
+        return NULL;
+
+    return &maSharedStrings[nId];
+}
+
+// ----------------------------------------------------------------------------
+
+ScDPCacheTable::Cell::Cell() :
+    mfValue(0.0),
+    mbNumeric(false)
+{
+}
+
+ScDPCacheTable::Filter::Filter()
+{
+}
+
+::osl::Mutex ScDPCacheTable::maStrMutex;
+ScSharedStringTable ScDPCacheTable::maStringTable;
+
+ScDPCacheTable::ScDPCacheTable()
+{
+}
+
+ScDPCacheTable::~ScDPCacheTable()
+{
+}
+
+sal_Int32 ScDPCacheTable::getHeaderSize() const
+{
+    return maHeader.size();
+}
+
+sal_Int32 ScDPCacheTable::getRowSize() const
+{
+    return maTable.size();
+}
+
+sal_Int32 ScDPCacheTable::getColSize() const
+{
+    return maTable.empty() ? 0 : maTable[0].size();
+}
+
+void ScDPCacheTable::fillTable(ScDocument* pDoc, const ScRange& rRange, const ScQueryParam& rQuery, BOOL* pSpecial,
+                               const vector<ScDPDimension*>& rPageDims)
+{
+    SCTAB nTab = rRange.aStart.Tab();
+    SCCOL nStartCol = rRange.aStart.Col();
+    SCROW nStartRow = rRange.aStart.Row();
+    SCCOL nColCount = rRange.aEnd.Col() - rRange.aStart.Col() + 1;
+    SCROW nRowCount = rRange.aEnd.Row() - rRange.aStart.Row() + 1;
+
+    if (nRowCount <= 1 || nColCount <= 0)
+        return;
+
+    maTable.clear();
+    maTable.reserve(nRowCount);
+    maHeader.clear();
+    maHeader.reserve(nColCount);
+
+    // Header row
+    for (SCCOL nCol = 0; nCol < nColCount; ++nCol)
+    {
+        String aStr;
+        pDoc->GetString(nCol, 0, nTab, aStr);
+        sal_Int32 nStrId = maStringTable.insertString(aStr);
+        maHeader.push_back(nStrId);
+    }
+
+    // Data rows
+    for (SCROW nRow = 1; nRow < nRowCount; ++nRow)
+    {
+        if ( lcl_HasQueryEntry(rQuery) && !pDoc->ValidQuery(nRow + nStartRow, nTab, rQuery, pSpecial) )
+            continue;
+
+        bool bSkipRow = false;
+        vector<ScDPDimension*>::const_iterator itr = rPageDims.begin(), itrEnd = rPageDims.end();
+        for (; itr != itrEnd; ++itr)
+        {
+            ScDPDimension* pDim = *itr;
+            ScDPCacheTable::Cell aDimCell = getSelectedDimension(pDim);
+
+            const String* pDimStr = getString(aDimCell.mnStrId);
+            if (pDimStr)
+            {
+                String aStr;
+                pDoc->GetString(pDim->GetDimension(), nRow, nTab, aStr);
+                if ( pDimStr->Len() && !pDimStr->Equals(aStr) )
+                {
+                    // Selected page dimension value does not match the current value.  Skip it (note: when
+                    // the selected page dimension value is empty, '- all -' is selected.
+                    bSkipRow = true;
+                    break;
+                }
+            }
+        }
+        if (bSkipRow)
+            continue;
+
+        // Insert a new row into cache table.
+        maTable.push_back( vector<Cell>() );
+        maTable.back().reserve(nColCount);
+
+        for (SCCOL nCol = 0; nCol < nColCount; ++nCol)
+        {
+            maTable.back().push_back( ScDPCacheTable::Cell() );
+            Cell& rCell = maTable.back().back();
+                
+            String aStr;
+            pDoc->GetString(nCol, nRow, nTab, aStr);
+            rCell.mnStrId = maStringTable.insertString(aStr);
+            ScAddress aPos(nStartCol + nCol, nStartRow + nRow, nTab);
+            getValueData(pDoc, aPos, rCell);
+        }
+    }
+}
+
+void lcl_GetCellValue(const Reference<sdbc::XRow>& xRow, sal_Int32 nType, long nCol,
+             const Date& rNullDate, ScDPCacheTable::Cell& rCell)
+{
+    short nNumType = NUMBERFORMAT_NUMBER;
+    BOOL bEmptyFlag = FALSE;
+    try
+    {
+        switch (nType)
+        {
+            case sdbc::DataType::BIT:
+            case sdbc::DataType::BOOLEAN:
+            {
+                nNumType = NUMBERFORMAT_LOGICAL;
+                rCell.mfValue = xRow->getBoolean(nCol) ? 1 : 0;    
+                bEmptyFlag = (rCell.mfValue == 0.0 && xRow->wasNull());
+                rCell.mbNumeric = true;
+            }
+            break;
+
+            case sdbc::DataType::TINYINT:
+            case sdbc::DataType::SMALLINT:
+            case sdbc::DataType::INTEGER:
+            case sdbc::DataType::BIGINT:
+            case sdbc::DataType::FLOAT:
+            case sdbc::DataType::REAL:
+            case sdbc::DataType::DOUBLE:
+            case sdbc::DataType::NUMERIC:
+            case sdbc::DataType::DECIMAL:
+            {
+                //! do the conversion here?
+                rCell.mfValue = xRow->getDouble(nCol);
+                bEmptyFlag = (rCell.mfValue == 0.0 && xRow->wasNull());
+                rCell.mbNumeric = true;
+            }
+            break;
+
+            case sdbc::DataType::CHAR:
+            case sdbc::DataType::VARCHAR:
+            case sdbc::DataType::LONGVARCHAR:
+            {
+                String aStr = xRow->getString(nCol);
+                rCell.mnStrId = ScDPCacheTable::getStringId(aStr);
+                bEmptyFlag = (aStr.Len() == 0 && xRow->wasNull());
+            }
+            break;
+
+            case sdbc::DataType::DATE:
+            {
+                nNumType = NUMBERFORMAT_DATE;
+
+                util::Date aDate = xRow->getDate(nCol);
+                rCell.mfValue = Date(aDate.Day, aDate.Month, aDate.Year) - rNullDate;
+                bEmptyFlag = xRow->wasNull();
+                rCell.mbNumeric = true;
+            }
+            break;
+
+                //! case sdbc::DataType::TIME:
+                //! case sdbc::DataType::TIMESTAMP:
+
+            case sdbc::DataType::SQLNULL:
+            case sdbc::DataType::BINARY:
+            case sdbc::DataType::VARBINARY:
+            case sdbc::DataType::LONGVARBINARY:
+            default:
+            break;
+        }
+    }
+    catch (uno::Exception&)
+    {
+    }
+}
+
+void ScDPCacheTable::fillTable(const Reference<sdbc::XRowSet>& xRowSet, const Date& rNullDate, const vector<ScDPDimension*>& rPageDims)
+{
+    try
+    {
+        Reference<sdbc::XResultSetMetaDataSupplier> xMetaSupp(xRowSet, UNO_QUERY_THROW);
+        Reference<sdbc::XResultSetMetaData> xMeta = xMetaSupp->getMetaData();
+        if (!xMeta.is())
+            return;
+
+        sal_Int32 nColCount = xMeta->getColumnCount();
+
+        // Get column titles and types.
+        vector<sal_Int32> aColTypes(nColCount);
+        maHeader.clear();
+        maHeader.reserve(nColCount);
+        for (sal_Int32 nCol = 0; nCol < nColCount; ++nCol)
+        {
+            String aColTitle = xMeta->getColumnLabel(nCol+1);
+            aColTypes[nCol]  = xMeta->getColumnType(nCol+1);
+            maHeader.push_back( ScDPCacheTable::getStringId(aColTitle) );
+        }
+
+        // Now get the data rows.
+        Reference<sdbc::XRow> xRow(xRowSet, UNO_QUERY_THROW);
+        xRowSet->first();
+        maTable.clear();
+        do
+        {
+            maTable.push_back( vector<Cell>() );
+            maTable.back().reserve(nColCount);
+            for (sal_Int32 nCol = 0; nCol < nColCount; ++nCol)
+            {
+                maTable.back().push_back( Cell() );
+                lcl_GetCellValue(xRow, aColTypes[nCol], nCol+1, rNullDate, maTable.back().back());
+            }
+        }
+        while (xRowSet->next());
+    }
+    catch (const Exception&)
+    {
+    }
+    xRowSet->first();
+}
+
+const ::ScDPCacheTable::Cell* ScDPCacheTable::getCell(SCCOL nCol, SCROW nRow) const
+{
+    if ( nRow >= maTable.size() )
+        return NULL;
+
+    const vector<Cell>& rRow = maTable[nRow];
+    if ( nCol >= rRow.size() )
+        return NULL;
+
+    return &rRow[nCol];
+}
+
+const String* ScDPCacheTable::getFieldName(sal_Int32 nIndex) const
+{
+    if (nIndex >= maHeader.size())
+        return NULL;
+
+    return getString(maHeader[nIndex]);
+}
+
+sal_Int32 ScDPCacheTable::getFieldIndex(const String& rStr) const
+{
+    sal_Int32 nStrId = getStringId(rStr);
+    if (nStrId < 0)
+        // string not found.
+        return nStrId;
+
+    sal_Int32 n = maHeader.size();
+    for (sal_Int32 i = 0; i < n; ++i)
+    {
+        if (maHeader[i] == nStrId)
+            return i;
+    }
+
+    return -1;
+}
+
+void ScDPCacheTable::filterTable(const vector<Filter>& rFilters, ScDPCacheTable& rNewTable) const
+{
+    sal_Int32 nRowSize = getRowSize();
+    sal_Int32 nColSize = getColSize();
+
+    if (!nRowSize)
+        // no data to filter.
+        return;
+
+    ScDPCacheTable aNewTable;
+    aNewTable.maTable.reserve(nRowSize);
+
+    // Copy the header first.
+    aNewTable.maHeader = maHeader;
+
+    for (sal_Int32 nRow = 0; nRow < nRowSize; ++nRow)
+    {
+        bool bRetainRow = true;
+        vector<Filter>::const_iterator itr, itrEnd = rFilters.end();
+        for (itr = rFilters.begin(); itr != itrEnd; ++itr)
+        {
+            if (itr->mnFieldIndex >= nColSize)
+            {
+                // specified field is outside the source data columns.
+                bRetainRow = false;
+                break;
+            }
+
+            if ( maTable[nRow][itr->mnFieldIndex].mnStrId != itr->mnMatchStrId )
+            {
+                // The string value does not match.
+                bRetainRow = false;
+                break;
+            }
+        }
+
+        if (bRetainRow)
+        {
+            aNewTable.maTable.push_back( vector<Cell>() );
+            for (sal_Int32 nCol = 0; nCol < nColSize; ++nCol)
+                aNewTable.maTable.back().push_back( maTable[nRow][nCol] );
+        }
+    }
+
+    // All good.  Commit.
+    rNewTable.swap(aNewTable);
+}
+
+void ScDPCacheTable::clear()
+{
+    maTable.clear();
+    maHeader.clear();
+}
+
+void ScDPCacheTable::swap(ScDPCacheTable& rOther)
+{
+    maTable.swap(rOther.maTable);
+    maHeader.swap(rOther.maHeader);
+}
+
+bool ScDPCacheTable::empty() const
+{
+    return maTable.empty();
+}
+
+void ScDPCacheTable::getValueData(ScDocument* pDoc, const ScAddress& rPos, Cell& rCell)
+{
+    ScBaseCell* pCell = pDoc->GetCell(rPos);
+    if ( !pCell )
+        return;
+
+    if ( pCell->HasValueData() )
+    {
+        CellType eType = pCell->GetCellType();
+        if (eType == CELLTYPE_VALUE)
+        {
+            // value cell
+            rCell.mfValue = static_cast<ScValueCell*>(pCell)->GetValue();
+        }
+        else if (eType == CELLTYPE_FORMULA)
+        {
+            // formula cell
+            rCell.mfValue = static_cast<ScFormulaCell*>(pCell)->GetValue();
+        }
+        rCell.mbNumeric = true;
+    }
+}
+
+ScDPCacheTable::Cell ScDPCacheTable::getSelectedDimension(ScDPDimension* pDim) const
+{
+    const ScDPItemData& rData = pDim->GetSelectedData();
+    Cell aCell;
+    aCell.mfValue = rData.fValue;
+    aCell.mbNumeric = rData.bHasValue;
+    aCell.mnStrId = getStringId(rData.aString);
+    return aCell;
+}
+
+// static 
+sal_Int32 ScDPCacheTable::insertString(const String& aStr)
+{
+    ::osl::MutexGuard aGuard(maStrMutex);
+    return maStringTable.insertString(aStr);
+}
+
+const String* ScDPCacheTable::getString(sal_Int32 nId)
+{
+    ::osl::MutexGuard aGuard(maStrMutex);
+    return maStringTable.getString(nId);
+}
+
+sal_Int32 ScDPCacheTable::getStringId(const String& aStr)
+{
+    ::osl::MutexGuard aGuard(maStrMutex);
+    return maStringTable.getStringId(aStr);
+}
