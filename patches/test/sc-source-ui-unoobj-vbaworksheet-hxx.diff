--- /dev/null	2004-08-25 23:04:59.000000000 +0530
+++ sc/source/ui/unoobj/vbaworksheet.hxx	2005-05-13 11:59:19.062405692 +0530
@@ -0,0 +1,73 @@
+#ifndef _VBA_WORKSHEET_HXX_
+#define _VBA_WORKSHEET_HXX_
+
+#include <org/openoffice/vba/XWorkSheet.hpp>
+
+class ScModelObj;
+
+class ScVbaWorkSheet : public org::openoffice::vba::XWorkSheet
+{
+	// UNO sucks for not providing a sane, thread-safe
+	// base-class for this.
+	sal_Int32   mnRefCount;
+	ScModelObj *mpModel;
+
+public:
+	ScVbaWorkSheet( ScModelObj *pModel );
+	virtual ~ScVbaWorkSheet();
+
+	// XInterface
+    virtual void acquire() throw () { ++mnRefCount; }
+    virtual void release() throw () { if (! --mnRefCount) delete this; }
+    virtual com::sun::star::uno::Any queryInterface(
+			const com::sun::star::uno::Type & rType )
+				throw (com::sun::star::uno::RuntimeException);
+
+    // Attributes
+    virtual ::rtl::OUString SAL_CALL getName() throw (::com::sun::star::uno::RuntimeException) 
+    			{return rtl::OUString::createFromAscii( "VBA WorkSheet Name" ); }
+    virtual ::sal_Bool SAL_CALL getProtectContents() throw (::com::sun::star::uno::RuntimeException)
+			{ return TRUE; }
+    virtual void SAL_CALL setProtectContents( ::sal_Bool _protectcontents ) throw (::com::sun::star::uno::RuntimeException)
+			{ }
+    virtual ::sal_Bool SAL_CALL getProtectDrawingObjects() throw (::com::sun::star::uno::RuntimeException)
+			{ return TRUE; }
+    virtual ::sal_Bool SAL_CALL getProtectionMode() throw (::com::sun::star::uno::RuntimeException)
+			{ return TRUE; }
+    virtual ::sal_Bool SAL_CALL getProtectScenarios() throw (::com::sun::star::uno::RuntimeException)
+			{ return TRUE; }
+    virtual ::sal_Int32 SAL_CALL getStandardHeight() throw (::com::sun::star::uno::RuntimeException)
+			{ return 1; }		
+    virtual ::sal_Int32 SAL_CALL getStandardWidth() throw (::com::sun::star::uno::RuntimeException)
+			{ return 1; }				
+    virtual ::sal_Bool SAL_CALL getVisible() throw (::com::sun::star::uno::RuntimeException)
+			{ return TRUE; }
+	
+    // Methods
+    virtual void SAL_CALL activate(  ) throw (::com::sun::star::uno::RuntimeException)
+			{}
+    virtual void SAL_CALL calculate(  ) throw (::com::sun::star::uno::RuntimeException)
+			{}
+    virtual void SAL_CALL checkspelling( const ::rtl::OUString& aCustomDictionary, ::sal_Bool bIgnoreUpperCase, ::sal_Bool bAlwaysSuggest, const ::rtl::OUString& aSpellLang ) throw (::com::sun::star::uno::RuntimeException)
+			{}
+    virtual void SAL_CALL copy(  ) throw (::com::sun::star::uno::RuntimeException)
+			{}
+    virtual void SAL_CALL move(  ) throw (::com::sun::star::uno::RuntimeException)
+			{}
+	
+	/*deleteSheet named to avoid conflict with keyword; vba method is Delete*/
+    virtual void SAL_CALL deleteSheet(  ) throw (::com::sun::star::uno::RuntimeException)
+			{}
+    virtual void SAL_CALL protect( const ::rtl::OUString& aPassword, ::sal_Bool bDrawingObjects, ::sal_Bool bContents, ::sal_Bool bScenarios, ::sal_Bool bUserInterfaceOnly ) throw (::com::sun::star::uno::RuntimeException)
+			{}
+    virtual void SAL_CALL select(  ) throw (::com::sun::star::uno::RuntimeException)
+			{}
+    virtual void SAL_CALL setBackgroundPicture( const ::rtl::OUString& aFileName ) throw (::com::sun::star::uno::RuntimeException)
+			{}
+    virtual void SAL_CALL unprotect( const ::rtl::OUString& aPassword ) throw (::com::sun::star::uno::RuntimeException)
+			{}
+
+};
+
+#endif /* _VBA_WORKSHEET_HXX_ */
+
