--- /dev/null	2007-04-20 17:59:41.000000000 +0200
+++ sfx2/source/appl/shutdowniconkde.hxx	2007-06-29 20:10:18.000000000 +0200
@@ -0,0 +1,50 @@
+/***************************************************************************
+ *   Copyright (C) 2004 by Matthew Wlazlo                                  *
+ *   mwlazlo@gmail.com                                                     *
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU General Public License as published by  *
+ *   the Free Software Foundation; either version 2 of the License, or     *
+ *   (at your option) any later version.                                   *
+ *                                                                         *
+ *   This program is distributed in the hope that it will be useful,       *
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
+ *   GNU General Public License for more details.                          *
+ *                                                                         *
+ *   You should have received a copy of the GNU General Public License     *
+ *   along with this program; if not, write to the                         *
+ *   Free Software Foundation, Inc.,                                       *
+ *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
+ ***************************************************************************/
+
+#ifndef KCHECKMAILTRAY_H
+#define KCHECKMAILTRAY_H
+
+#include <ksystemtray.h>
+#include <kiconeffect.h>
+#include <qpixmap.h>
+#include <qstring.h>
+
+class QMouseEvent;
+
+class KCheckGmailTray : public KSystemTray
+{
+	Q_OBJECT
+
+public:
+	KCheckGmailTray(QWidget *parent = 0, const char *name = 0);
+
+protected:
+	void mousePressEvent(QMouseEvent*);
+
+protected slots:
+	// KPopupMenu
+	void slotContextMenuActivated(int);
+
+private:
+	void openDialog(const QString &url = QString::null);
+};
+
+
+#endif
--- /dev/null	2007-04-20 17:59:41.000000000 +0200
+++ sfx2/source/appl/shutdowniconkde.cxx	2007-06-29 20:12:43.000000000 +0200
@@ -0,0 +1,206 @@
+#include "shutdowniconkde.hxx"
+
+#include <klocale.h>
+#include <kcmdlineargs.h>
+#include <kaboutdata.h>
+#include <kglobal.h>
+#include <kiconloader.h>
+
+#include <stdlib.h>
+
+#include <kapplication.h>
+#include <kdebug.h>
+#include <kglobal.h>
+#include <kiconloader.h>
+#include <kmessagebox.h>
+#include <kpopupmenu.h>
+#include <kuniqueapplication.h>
+#include <kfiledialog.h>
+
+#include <qtooltip.h>
+
+#ifndef _SV_BITMAPEX_HXX
+//#include <vcl/bitmapex.hxx>
+#endif
+#ifndef _SV_BMPACC_HXX
+//#include <vcl/bmpacc.hxx>
+#endif
+#ifndef _SFXAPP_HXX
+#include "app.hxx"
+#endif
+#ifndef _SFX_APP_HRC
+#include "app.hrc"
+#endif
+#ifndef __SHUTDOWNICON_HXX__
+#define USE_APP_SHORTCUTS
+#include "shutdownicon.hxx"
+#endif
+
+#include <vos/mutex.hxx>
+
+
+
+#define CONTEXT_OPEN_DIALOG 101
+
+#define Icon(x) KGlobal::instance()->iconLoader()->loadIcon(x, KIcon::Toolbar) 
+
+KCheckGmailTray::KCheckGmailTray(QWidget *parent, const char *name)
+	: KSystemTray(parent, name)
+{
+	setAlignment(Qt::AlignHCenter | Qt::AlignVCenter);
+	connect(this, SIGNAL(quitSelected()), kapp, SLOT(quit()));
+	
+	QToolTip::add(this, i18n("KCheckGMail"));
+	setPixmap(Icon("ooo-gulls"));
+	
+	// initialise the menu
+	KPopupMenu *menu = contextMenu();
+	menu->clear();
+	menu->insertTitle(SmallIcon("ooo-gulls"), i18n("KCheckGMail"));
+	menu->insertItem(SmallIcon("konqueror"), 
+		i18n("&Open File"), CONTEXT_OPEN_DIALOG);
+
+	connect(menu, SIGNAL(activated(int)), SLOT(slotContextMenuActivated(int)));
+}
+
+///////////////////////////////////////////////////////////////////////////
+// Menu functions
+///////////////////////////////////////////////////////////////////////////
+
+void KCheckGmailTray::slotContextMenuActivated(int n)
+{
+	fprintf (stderr, "KCheckGmailTray::slotContextMenuActivated\n");
+	
+	kdDebug() << k_funcinfo << "context=" << n << endl;
+
+	switch(n) {
+		case CONTEXT_OPEN_DIALOG:
+			fprintf (stderr, "openDialog\n");
+			openDialog();
+			break;
+	}
+}
+
+void KCheckGmailTray::openDialog(const QString &url)
+{
+//	QString text = KFileDialog::getOpenFileName();
+
+//    if ( !text.isEmpty() )
+//        KMessageBox::information( NULL, text, "Your Path" );
+//    else
+	KMessageBox::information( NULL, "No path selected\n");
+}
+
+///////////////////////////////////////////////////////////////////////////
+// Menu - related slots
+///////////////////////////////////////////////////////////////////////////
+
+void KCheckGmailTray::mousePressEvent(QMouseEvent *ev)
+{
+	if(ev->button() == QMouseEvent::LeftButton) {
+		openDialog();
+	} else
+		KSystemTray::mousePressEvent(ev);
+
+}
+
+static const char kcheckgmailVersion[] = "1.1";
+static const KCmdLineOptions gOptions[] =
+{
+	{ "legal", I18N_NOOP("Display legal information"), 0 },
+	KCmdLineLastOption
+};
+
+/*
+int main(int argc, char **argv)
+{
+//	KAboutData about("kcheckgmail",
+	KAboutData about("ooo-gulls",
+		I18N_NOOP("KCheckGMail"), 
+		kcheckgmailVersion, 
+		I18N_NOOP(
+		"System tray application to display how many\nnew email "
+		"messages you have in your Gmail account."),
+		KAboutData::License_GPL, 
+		"(C) 2004 Matthew Wlazlo", 
+		0, // text
+		"http://kcheckgmail.sf.net",
+		"kcheckgmail-development@lists.sourceforge.net");
+	
+	about.addAuthor("Matthew Wlazlo", I18N_NOOP("Original author"), "mwlazlo@gmail.com");
+	about.addAuthor("Raphael Geissert", I18N_NOOP("Maintainer"), "atomo64@gmail.com");
+	
+	about.addCredit(I18N_NOOP("Everybody who helped testing and translating KCheckGMail"), 0, 0, 0);
+
+        KGlobal::locale()->setMainCatalogue("kcheckgmail");
+
+        KCmdLineArgs::init(argc, argv, &about);
+        KCmdLineArgs::addCmdLineOptions(gOptions);
+
+	KUniqueApplication a;
+	//KApplication a;
+	KCheckGmailTray *hello = new KCheckGmailTray(0, "KCheckGmailTray");
+	a.setMainWidget(hello);
+
+//	hello->connect (&a, SIGNAL (shutDown()), oooqs, SLOT (killQuickstart()));
+	hello->show();
+
+	return a.exec();
+}
+*/
+
+void SAL_DLLPUBLIC_EXPORT plugin_init_sys_tray()
+{
+	::vos::OGuard aGuard( Application::GetSolarMutex() );
+
+        if (KApplication::kApplication() == NULL)
+	    return;
+
+/*
+	KAboutData about("ooo-gulls",
+		I18N_NOOP("KCheckGMail"), 
+		kcheckgmailVersion, 
+		I18N_NOOP(
+		"System tray application to display how many\nnew email "
+		"messages you have in your Gmail account."),
+		KAboutData::License_GPL, 
+		"(C) 2004 Matthew Wlazlo", 
+		0, // text
+		"http://kcheckgmail.sf.net",
+		"kcheckgmail-development@lists.sourceforge.net");
+	
+	about.addAuthor("Matthew Wlazlo", I18N_NOOP("Original author"), "mwlazlo@gmail.com");
+	about.addAuthor("Raphael Geissert", I18N_NOOP("Maintainer"), "atomo64@gmail.com");
+	
+	about.addCredit(I18N_NOOP("Everybody who helped testing and translating KCheckGMail"), 0, 0, 0);
+
+        KGlobal::locale()->setMainCatalogue("kcheckgmail");
+
+        char *my_argv[] = { "/usr/lib64/ooo-2.0/program/soffice.bin" };
+	int my_argc = 1;
+	KCmdLineArgs::init(my_argc, my_argv, &about);	
+        KCmdLineArgs::addCmdLineOptions(gOptions);
+*/
+
+//	KUniqueApplication a;
+	//KApplication a;
+	printf ("0\n");
+	KCheckGmailTray *hello = new KCheckGmailTray(0, "KCheckGmailTray");
+//	KApplication::kApplication()->setMainWidget(hello);
+
+	printf ("1\n");
+
+//	hello->connect (&a, SIGNAL (shutDown()), oooqs, SLOT (killQuickstart()));
+	hello->show();
+	printf ("2\n");
+
+//	a.exec();
+	printf ("3\n");
+//	KApplication::kApplication()->exec();
+}
+
+void SAL_DLLPUBLIC_EXPORT plugin_shutdown_sys_tray()
+{
+}
+
+#include <shutdowniconkde.moc.cxx>
--- /dev/null	2007-04-20 17:59:41.000000000 +0200
+++ sfx2/source/appl/shutdowniconkde.moc.cxx	2007-06-28 16:04:04.000000000 +0200
@@ -0,0 +1,104 @@
+/****************************************************************************
+** KCheckGmailTray meta object code from reading C++ file 'shutdowniconkde.hxx'
+**
+** Created: Thu Jun 28 14:04:04 2007
+**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.7   edited Oct 19 16:22 $)
+**
+** WARNING! All changes made in this file will be lost!
+*****************************************************************************/
+
+#undef QT_NO_COMPAT
+#include "shutdowniconkde.hxx"
+#include <qmetaobject.h>
+#include <qapplication.h>
+
+#include <private/qucomextra_p.h>
+#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
+#error "This file was generated using the moc from 3.3.7. It"
+#error "cannot be used with the include files from this version of Qt."
+#error "(The moc has changed too much.)"
+#endif
+
+const char *KCheckGmailTray::className() const
+{
+    return "KCheckGmailTray";
+}
+
+QMetaObject *KCheckGmailTray::metaObj = 0;
+static QMetaObjectCleanUp cleanUp_KCheckGmailTray( "KCheckGmailTray", &KCheckGmailTray::staticMetaObject );
+
+#ifndef QT_NO_TRANSLATION
+QString KCheckGmailTray::tr( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "KCheckGmailTray", s, c, QApplication::DefaultCodec );
+    else
+	return QString::fromLatin1( s );
+}
+#ifndef QT_NO_TRANSLATION_UTF8
+QString KCheckGmailTray::trUtf8( const char *s, const char *c )
+{
+    if ( qApp )
+	return qApp->translate( "KCheckGmailTray", s, c, QApplication::UnicodeUTF8 );
+    else
+	return QString::fromUtf8( s );
+}
+#endif // QT_NO_TRANSLATION_UTF8
+
+#endif // QT_NO_TRANSLATION
+
+QMetaObject* KCheckGmailTray::staticMetaObject()
+{
+    if ( metaObj )
+	return metaObj;
+    QMetaObject* parentObject = KSystemTray::staticMetaObject();
+    static const QUParameter param_slot_0[] = {
+	{ 0, &static_QUType_int, 0, QUParameter::In }
+    };
+    static const QUMethod slot_0 = {"slotContextMenuActivated", 1, param_slot_0 };
+    static const QMetaData slot_tbl[] = {
+	{ "slotContextMenuActivated(int)", &slot_0, QMetaData::Protected }
+    };
+    metaObj = QMetaObject::new_metaobject(
+	"KCheckGmailTray", parentObject,
+	slot_tbl, 1,
+	0, 0,
+#ifndef QT_NO_PROPERTIES
+	0, 0,
+	0, 0,
+#endif // QT_NO_PROPERTIES
+	0, 0 );
+    cleanUp_KCheckGmailTray.setMetaObject( metaObj );
+    return metaObj;
+}
+
+void* KCheckGmailTray::qt_cast( const char* clname )
+{
+    if ( !qstrcmp( clname, "KCheckGmailTray" ) )
+	return this;
+    return KSystemTray::qt_cast( clname );
+}
+
+bool KCheckGmailTray::qt_invoke( int _id, QUObject* _o )
+{
+    switch ( _id - staticMetaObject()->slotOffset() ) {
+    case 0: slotContextMenuActivated((int)static_QUType_int.get(_o+1)); break;
+    default:
+	return KSystemTray::qt_invoke( _id, _o );
+    }
+    return TRUE;
+}
+
+bool KCheckGmailTray::qt_emit( int _id, QUObject* _o )
+{
+    return KSystemTray::qt_emit(_id,_o);
+}
+#ifndef QT_NO_PROPERTIES
+
+bool KCheckGmailTray::qt_property( int id, int f, QVariant* v)
+{
+    return KSystemTray::qt_property( id, f, v);
+}
+
+bool KCheckGmailTray::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
+#endif // QT_NO_PROPERTIES
--- sfx2/source/appl/shutdownicon.cxx.old	2007-04-26 12:07:39.000000000 +0200
+++ sfx2/source/appl/shutdownicon.cxx	2007-06-29 19:57:36.000000000 +0200
@@ -231,6 +231,7 @@ void ShutdownIcon::initSystray()
 		return;
 	m_bInitialized = true;
 
+	fprintf(stderr, "Loading module\n");
 	(void) LoadModule( &m_pPlugin, &m_pInitSystray, &m_pDeInitSystray );
 	m_bVeto = true;
 	m_pInitSystray();
@@ -826,6 +827,7 @@ bool ShutdownIcon::GetAutostart( )
 
 void ShutdownIcon::SetAutostart( bool bActivate )
 {
+fprintf(stderr, "ShutdownIcon::SetAutostart\n");
 #ifdef ENABLE_QUICKSTART_APPLET
 	OUString aShortcut( getShortcutName() );
 
--- sfx2/source/appl/makefile.mk.old	2007-03-26 17:03:27.000000000 +0200
+++ sfx2/source/appl/makefile.mk	2007-06-28 16:02:38.000000000 +0200
@@ -55,13 +55,18 @@ CFLAGS+=-DENABLE_QUICKSTART_APPLET
 
 .IF "$(GUI)"=="UNX"
         CDEFS+=-DDLL_NAME=libsfx$(UPD)$(DLLPOSTFIX)$(DLLPOST)
-.IF "$(ENABLE_SYSTRAY_GTK)"=="TRUE"
-        PKGCONFIG_MODULES=gtk+-2.0
-        .INCLUDE: pkg_config.mk
-        CFLAGS+=$(PKGCONFIG_CFLAGS)
+#.IF "$(ENABLE_SYSTRAY_GTK)"=="TRUE"
+#        PKGCONFIG_MODULES=gtk+-2.0
+#        .INCLUDE: pkg_config.mk
+#        CFLAGS+=$(PKGCONFIG_CFLAGS)
+#        CFLAGS+=-DENABLE_QUICKSTART_APPLET
+#        CDEFS+=-DPLUGIN_NAME=libqstart_gtk$(UPD)$(DLLPOSTFIX)$(DLLPOST)
+#.ENDIF # "$(ENABLE_SYSTRAY_GTK)"=="TRUE"
+.IF "$(ENABLE_KDE)" != ""
+        CFLAGS+=$(KDE_CFLAGS)
         CFLAGS+=-DENABLE_QUICKSTART_APPLET
-        CDEFS+=-DPLUGIN_NAME=libqstart_gtk$(UPD)$(DLLPOSTFIX)$(DLLPOST)
-.ENDIF # "$(ENABLE_SYSTRAY_GTK)"=="TRUE"
+        CDEFS+=-DPLUGIN_NAME=libqstart_kde$(UPD)$(DLLPOSTFIX)$(DLLPOST)
+.ENDIF # "$(ENABLE_KDE)" != ""
 .ELSE
         CDEFS+=-DDLL_NAME=sfx$(UPD)$(DLLPOSTFIX)$(DLLPOST)
 .ENDIF
@@ -125,6 +130,15 @@ LIB2TARGET= $(SLB)$/quickstart.lib
 LIB2OBJFILES= $(QUICKSTART_OBJECTS)
 .ENDIF
 
+.IF "$(ENABLE_KDE)" != ""
+QUICKSTART_KDE_OBJECTS = $(SLO)$/shutdowniconkde.obj
+SLOFILES += $(QUICKSTART_KDE_OBJECTS)
+
+LIB3TARGET= $(SLB)$/quickstartkde.lib
+LIB3OBJFILES= $(QUICKSTART_KDE_OBJECTS)
+.ENDIF
+
+
 EXCEPTIONSFILES=\
 	$(SLO)$/imagemgr.obj		\
 	$(SLO)$/appopen.obj \
--- sfx2/util/makefile.mk.old	2007-04-11 23:32:57.000000000 +0200
+++ sfx2/util/makefile.mk	2007-06-29 20:08:20.000000000 +0200
@@ -161,6 +161,22 @@ SHL3NOCHECK=TRUE
 .ENDIF # "$(ENABLE_SYSTRAY_GTK)"=="TRUE"
 .ENDIF # "$(GUI)"=="UNX"
 
+# kde quick-starter
+.IF "$(GUI)"=="UNX"
+.IF "$(ENABLE_KDE)" != ""
+CFLAGS+=$(KDE_CFLAGS)
+
+SHL4TARGET=qstart_kde$(UPD)$(DLLPOSTFIX)
+SHL4LIBS=$(SLB)$/quickstartkde.lib
+SHL4DEPN=$(SHL1IMPLIBN) $(SHL1TARGETN)
+# libs for kde plugin
+SHL4STDLIBS=$(SHL1STDLIBS) $(SFX2LIB)
+SHL4STDLIBS+=$(KDE_LIBS)
+# FIXME: -lkio is needed just to show that the open dialog works
+#SHL4STDLIBS+=-lkio
+.ENDIF # "$(ENABLE_KDE)" != ""
+.ENDIF # "$(GUI)"=="UNX"
+
 # --- Targets ------------------------------------------------------
 
 
