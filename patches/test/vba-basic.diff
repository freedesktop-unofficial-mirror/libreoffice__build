Index: basic/source/classes/sb.cxx
===================================================================
RCS file: /cvs/script/basic/source/classes/sb.cxx,v
retrieving revision 1.23
diff -u -r1.23 sb.cxx
--- basic/source/classes/sb.cxx	13 Apr 2005 09:10:07 -0000	1.23
+++ basic/source/classes/sb.cxx	17 May 2005 13:29:53 -0000
@@ -703,6 +703,14 @@
 		AddFactory( pOLEFAC );
 	}
 	pRtl = new SbiStdObject( String( RTL_CONSTASCII_USTRINGPARAM(RTLNAME) ), this );
+
+	fprintf( stderr, "Create FOO !\n" );
+
+	SbxVariable *var = new SbxVariable();
+	var->SetName( String( RTL_CONSTASCII_USTRINGPARAM("VbaGlobal") ) );
+	var->PutString( String( RTL_CONSTASCII_USTRINGPARAM( "My Magic VBA Global" ) ) );
+	Insert( var );
+
 	// Suche ueber StarBASIC ist immer global
 	SetFlag( SBX_GBLSEARCH );
 }
@@ -923,10 +931,48 @@
 // benen Namen gefunden wurde, der Entrypoint "Main" gesucht. Wenn das
 // auch nicht klappt, laeuft die traditionelle Suche ueber Objekte an.
 
+SbxObject *StarBASIC::getVBAHook()
+{
+	static String aThisComponent( RTL_CONSTASCII_USTRINGPARAM("ThisComponent") );
+	static String aVBAHook( RTL_CONSTASCII_USTRINGPARAM( "VBAHook" ) );
+
+	SbxVariable *pThisComp = Find( aThisComponent, SbxCLASS_OBJECT );
+	if (pThisComp && pThisComp->IsObject())
+	{
+		fprintf( stderr, "Has valid 'This' ?!\n" );
+		SbxObject *pObj = static_cast<SbxObject *>(pThisComp->GetObject());
+		SbxVariable *vba;
+		if ((vba = pObj->Find( aVBAHook, SbxCLASS_DONTCARE/* SbxCLASS_PROPERTY */ ) ) && vba->IsObject())
+		{
+				fprintf( stderr, "Bingo: got VBAHook\n" );
+			return static_cast<SbxObject *>(vba->GetObject());
+		}
+		else
+			fprintf( stderr, "NO 'VBAHook' found '%s'\n",
+					 (const sal_Char *) rtl::OUStringToOString( pObj->GetClassName(), RTL_TEXTENCODING_UTF8 ) );
+	}
+	return NULL;
+}
+
 SbxVariable* StarBASIC::Find( const String& rName, SbxClassType t )
 {
 	static String aMainStr( RTL_CONSTASCII_USTRINGPARAM("Main") );
 
+	fprintf( stderr, "StarBASIC::Find '%s' (%d)\n",
+			 (const sal_Char *) rtl::OUStringToOString( rName, RTL_TEXTENCODING_UTF8 ), t );
+
+	if( rName != String( RTL_CONSTASCII_USTRINGPARAM( "ThisComponent" ) ) )
+	{
+		SbxObject   *pVba = getVBAHook();
+		SbxVariable *pVbaVar;
+		if( pVba && (pVbaVar = pVba->Find( rName, t ) ) )
+		{
+			fprintf( stderr, "  Got VBA var!\n" );
+			return pVbaVar;
+		}
+	}
+	fprintf( stderr, "  fall through\n" );
+
 	SbxVariable* pRes = NULL;
 	SbModule* pNamed = NULL;
 	// "Extended" search in Runtime Lib
@@ -975,11 +1021,25 @@
 			pRes = pNamed->Find( aMainStr, SbxCLASS_METHOD );
 	if( !pRes )
 		pRes = SbxObject::Find( rName, t );
+
 	return pRes;
 }
 
 BOOL StarBASIC::Call( const String& rName, SbxArray* pParam )
 {
+	fprintf( stderr, "StarBASIC::Call '%s'\n",
+			 (const sal_Char *) rtl::OUStringToOString( rName, RTL_TEXTENCODING_UTF8 ) );
+
+	if( rName != String( RTL_CONSTASCII_USTRINGPARAM( "ThisComponent" ) ) )
+	{
+		fprintf( stderr, "  Chain to VBA bits\n" );
+		SbxObject   *pVba = getVBAHook();
+		if( pVba && pVba->Find( rName, SbxCLASS_METHOD ) )
+			return pVba->Call( rName, pParam );
+	}
+	fprintf( stderr, "  fall through\n" );
+
+
 	BOOL bRes = SbxObject::Call( rName, pParam );
 	if( !bRes )
 	{
@@ -994,6 +1054,9 @@
 // Find-Funktion ueber Name (z.B. Abfrage aus BASIC-IDE)
 SbxBase* StarBASIC::FindSBXInCurrentScope( const String& rName )
 {
+	fprintf( stderr, "StarBASIC::FindSBXInCurrentScope '%s'\n",
+			 (const sal_Char *) rtl::OUStringToOString( rName, RTL_TEXTENCODING_UTF8 ) );
+
 	if( !pINST )
 		return NULL;
 	if( !pINST->pRun )
@@ -1005,6 +1068,9 @@
 SbxVariable* StarBASIC::FindVarInCurrentScopy
 ( const String& rName, USHORT& rStatus )
 {
+	fprintf( stderr, "StarBASIC::FindVarInCurrentScopy '%s'\n",
+			 (const sal_Char *) rtl::OUStringToOString( rName, RTL_TEXTENCODING_UTF8 ) );
+
 	rStatus = 1;			// Annahme: Nichts gefunden
 	SbxVariable* pVar = NULL;
 	SbxBase* pSbx = FindSBXInCurrentScope( rName );
@@ -1045,6 +1111,9 @@
 
 void StarBASIC::ActivateObject( const String* pName, BOOL bActivate )
 {
+	fprintf( stderr, "StarBASIC::ActivateObject '%s'\n",
+			 (const sal_Char *) rtl::OUStringToOString( *pName, RTL_TEXTENCODING_UTF8 ) );
+
 	if( pName )
 	{
 		SbxObject* p = (SbxObject*) SbxObject::Find( *pName, SbxCLASS_OBJECT );
Index: basic/inc/sbstar.hxx
===================================================================
RCS file: /cvs/script/basic/inc/sbstar.hxx,v
retrieving revision 1.11
diff -u -r1.11 sbstar.hxx
--- basic/inc/sbstar.hxx	13 Apr 2005 08:59:55 -0000	1.11
+++ basic/inc/sbstar.hxx	17 May 2005 13:29:53 -0000
@@ -159,6 +159,7 @@
 	// Highlighting
 	void 			Highlight( const String& rSrc, SbTextPortions& rList );
 
+	SbxObject        *getVBAHook();
 	virtual SbxVariable* Find( const String&, SbxClassType );
 	virtual BOOL Call( const String&, SbxArray* = NULL );
 
