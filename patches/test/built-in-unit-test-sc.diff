--- /dev/null	2007-09-21 22:50:58.000000000 +0100
+++ sc/qa/unit/makefile.mk	2008-02-20 15:48:10.000000000 +0000
@@ -0,0 +1,95 @@
+#*************************************************************************
+#
+#   OpenOffice.org - a multi-platform office productivity suite
+#
+#   $RCSfile: makefile.mk,v $
+#
+#   $Revision: 1.2 $
+#
+#   last change: $Author: ihi $ $Date: 2007/11/23 13:58:12 $
+#
+#   The Contents of this file are made available subject to
+#   the terms of GNU Lesser General Public License Version 2.1.
+#
+#
+#     GNU Lesser General Public License Version 2.1
+#     =============================================
+#     Copyright 2007 by Sun Microsystems, Inc.
+#     901 San Antonio Road, Palo Alto, CA 94303, USA
+#
+#     This library is free software; you can redistribute it and/or
+#     modify it under the terms of the GNU Lesser General Public
+#     License version 2.1, as published by the Free Software Foundation.
+#
+#     This library is distributed in the hope that it will be useful,
+#     but WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
+#
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+#     MA  02111-1307  USA
+#
+#*************************************************************************
+
+PRJ := ..$/..
+PRJNAME := configmgr
+TARGET := qa_unit
+
+ENABLE_EXCEPTIONS := TRUE
+
+.INCLUDE: settings.mk
+
+DLLPRE = # no leading "lib" on .so files
+
+SHL1TARGET = $(TARGET)
+SHL1OBJS = $(SLO)$/ucalc.obj $(SLO)$/ubootstrap.obj
+SHL1STDLIBS=       \
+    $(BASICLIB)	\
+    $(SFXLIB)		\
+    $(SVTOOLLIB)	\
+    $(SVLLIB)		\
+    $(SVXLIB)		\
+    $(GOODIESLIB)	\
+    $(BASEGFXLIB) \
+    $(VCLLIB)		\
+    $(CPPULIB)		\
+    $(CPPUHELPERLIB)	\
+    $(COMPHELPERLIB)	\
+    $(UCBHELPERLIB)	\
+    $(TKLIB)		\
+    $(VOSLIB)		\
+    $(SALLIB)		\
+    $(TOOLSLIB)	\
+    $(I18NUTILLIB) \
+    $(I18NISOLANGLIB) \
+    $(UNOTOOLSLIB) \
+    $(SOTLIB)		\
+    $(XMLOFFLIB)	\
+    $(DBTOOLSLIB)	\
+    $(AVMEDIALIB)	\
+    $(CPPUNITLIB)
+SHL1IMPLIB = i$(SHL1TARGET)
+SHL1LIBS=$(SLB)$/scalc3.lib $(SLB)$/scalc3c.lib 
+SHL1VERSIONMAP = export.map
+DEF1NAME = $(SHL1TARGET)
+
+.INCLUDE: target.mk
+
+ALLTAR: test
+
+USERDIR=$(OUT)$/unit
+
+$(USERDIR):
+    $(RM) -rf $(USERDIR)
+    $(COPY) $(COPYRECURSE) $(SOLARXMLDIR)$/unit-skel $(USERDIR)
+
+$(USERDIR)$/$(TARGET).rdb .ERRREMOVE: $(USERDIR)
+    $(COPY) $(SOLARBINDIR)$/types.rdb $@
+    regmerge $@ / $(SOLARLIBDIR)$/services.rdb
+
+test .PHONY: $(SHL1TARGETN) $(USERDIR)$/$(TARGET).rdb
+    testshl2 $(SHL1TARGETN) -forward "$(USERDIR)$/$(TARGET).rdb#$(USERDIR)"
+    $(RM) -rf $(USERDIR)
+
--- /dev/null	2007-09-21 22:50:58.000000000 +0100
+++ sc/qa/unit/ucalc.cxx	2008-02-20 16:25:12.000000000 +0000
@@ -0,0 +1,81 @@
+// TODO ...
+//    officecfg: can we move this into our skeleton ?
+//          Solve the Setup.xcu problem pleasantly [ custom version ? ]
+//    Remove: Foo killed exception ! ...
+//    deliver.pl
+//          don't call regcomp if we don't have it.
+//    find & kill signalfile stuff (?)
+//    Consider - where to dump this code ?
+//             - surely there is some Uno module we can use... ?
+//             - 'unohelper' ?
+
+#include "sal/config.h"
+#include "ubootstrap.hxx"
+#include "vcl/svapp.hxx"
+#include <scdll.hxx>
+#include <document.hxx>
+#include "cppunit/simpleheader.hxx"
+
+#define CATCH_FAIL(msg) \
+    catch (const css::uno::Exception &e) { \
+        t_print ("msg '%s'\n", rtl::OUStringToOString (e.Message, RTL_TEXTENCODING_UTF8).getStr()); \
+        CPPUNIT_FAIL( msg ); \
+        throw; \
+    }
+
+class Test: public CppUnit::TestFixture {
+    UnitBootstrap *mpUnitBootstrap;
+public:
+    // init
+    virtual void setUp();
+    virtual void tearDown();
+
+    // tests
+    void createDocument();
+
+    CPPUNIT_TEST_SUITE(Test);
+    CPPUNIT_TEST(createDocument);
+    CPPUNIT_TEST_SUITE_END();
+
+private:
+};
+
+void Test::setUp()
+{
+    mpUnitBootstrap = new UnitBootstrap();
+
+    InitVCL (mpUnitBootstrap->getMSF());
+
+    ScDLL::Init();
+}
+
+void Test::tearDown()
+{
+    DeInitVCL ();
+
+    delete mpUnitBootstrap;
+}
+
+void Test::createDocument()
+{
+    ScDocument *doc = new ScDocument();
+    
+    rtl::OUString aTabName = rtl::OUString::createFromAscii ("foo");
+    CPPUNIT_ASSERT_MESSAGE ("failed to insert sheet",
+                            doc->InsertTab (0, aTabName));
+    double val = 1;
+    doc->SetValue (0, 0, 0, val);
+    doc->SetValue (0, 1, 0, val);
+    doc->SetString (0, 2, 0, rtl::OUString::createFromAscii ("=SUM(A1:A2)"));
+    doc->CalcAll();
+    double result;
+    doc->GetValue (0, 2, 0, result);
+    fprintf (stderr, "one plus one = %g\n", result);
+    CPPUNIT_ASSERT_MESSAGE ("calculation failed", result == 2.0);
+                    
+    delete doc;
+}
+
+CPPUNIT_TEST_SUITE_NAMED_REGISTRATION(Test, "alltests");
+
+NOADDITIONAL;
--- /dev/null	2007-09-21 22:50:58.000000000 +0100
+++ sc/qa/unit/ubootstrap.hxx	2008-02-20 16:20:46.000000000 +0000
@@ -0,0 +1,18 @@
+#ifndef UNIT_BOOTSTRAP_HXX
+#define UNIT_BOOTSTRAP_HXX
+
+#include "com/sun/star/lang/XMultiServiceFactory.hpp"
+#include "com/sun/star/uno/XComponentContext.hpp"
+
+class UnitBootstrap
+{
+    com::sun::star::uno::Reference< com::sun::star::uno::XComponentContext > mxContext;
+    com::sun::star::uno::Reference< com::sun::star::lang::XMultiServiceFactory > mxMSF;
+  public:
+    UnitBootstrap();
+    ~UnitBootstrap();
+    com::sun::star::uno::Reference< com::sun::star::lang::XMultiServiceFactory >
+        getMSF() { return mxMSF; }
+};
+
+#endif // UNIT_BOOTSTRAP_HXX
--- /dev/null	2007-09-21 22:50:58.000000000 +0100
+++ sc/qa/unit/export.map	2007-11-23 13:57:51.000000000 +0000
@@ -0,0 +1,7 @@
+UDK_3.0 {
+    global:
+        registerAllTestFunction;
+
+    local:
+        *;
+};
