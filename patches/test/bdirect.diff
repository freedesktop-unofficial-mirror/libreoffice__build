diff -u -r binutils.current/bfd/elf-bfd.h binutils-2.16/bfd/elf-bfd.h
--- binutils.current/bfd/elf-bfd.h	2005-10-15 11:08:59.000000000 +0100
+++ binutils-2.16/bfd/elf-bfd.h	2005-03-03 20:52:31.000000000 +0000
@@ -396,9 +396,6 @@
   asection *tls_sec;
   bfd_size_type tls_size;
 
-  /* Direct linkage output section */
-  asection *direct_sec;
-
   /* A linked list of BFD's loaded in the link.  */
   struct elf_link_loaded_list *loaded;
 
Only in binutils.current/bfd: elf-bfd.h~
diff -u -r binutils.current/bfd/elf.c binutils-2.16/bfd/elf.c
--- binutils.current/bfd/elf.c	2005-10-15 11:10:21.000000000 +0100
+++ binutils-2.16/bfd/elf.c	2005-03-06 02:02:15.000000000 +0000
@@ -1495,7 +1495,6 @@
   table->runpath = NULL;
   table->tls_sec = NULL;
   table->tls_size = 0;
-  table->direct_sec = NULL;
   table->loaded = NULL;
   table->is_relocatable_executable = FALSE;
 
Only in binutils.current/bfd: elf.c~
diff -u -r binutils.current/bfd/elflink.c binutils-2.16/bfd/elflink.c
--- binutils.current/bfd/elflink.c	2005-10-15 11:58:19.000000000 +0100
+++ binutils-2.16/bfd/elflink.c	2005-04-29 14:40:22.000000000 +0100
@@ -172,16 +172,6 @@
       elf_hash_table (info)->eh_info.hdr_sec = s;
     }
 
-  if ( info->direct )
-    {
-      s = bfd_make_section (abfd, ".direct");
-      if (s == NULL
-	  || ! bfd_set_section_flags (abfd, s, flags | SEC_READONLY)
-	  || ! bfd_set_section_alignment (abfd, s, 2))
-	return FALSE;
-      elf_hash_table (info)->direct_sec = s;
-    }
-
   /* Create sections to hold version informations.  These are removed
      if they are not needed.  */
   s = bfd_make_section (abfd, ".gnu.version_d");
@@ -5681,24 +5671,6 @@
 	    return FALSE;
 	}
 
-      /* Create the direct bindings section - 1 entry per dynsym */
-      s = bfd_get_section_by_name (dynobj, ".direct");
-      if (s)
-        {
-  	  if (dynsymcount == 0)
-	    _bfd_strip_section_from_output (info, s);
-	  else
-	    {
-	      s->size = dynsymcount * sizeof (Elf_External_Direct);
-	      s->contents = bfd_zalloc (output_bfd, s->size);
-	      if (s->contents == NULL)
-	        return FALSE;
-
-	      if (!_bfd_elf_add_dynamic_entry (info, DT_DIRECT, 0))
-	        return FALSE;
-	    }
-	}
-
       /* Set the size of the .dynsym and .hash sections.  We counted
 	 the number of dynamic symbols in elf_link_add_object_symbols.
 	 We will build the contents of .dynsym and .hash when we build
@@ -8588,11 +8560,6 @@
 	    continue;
 	  if (elf_hash_table (info)->eh_info.hdr_sec == o)
 	    continue;
-	  if (elf_hash_table (info)->direct_sec == o)
-	    {
-	      fprintf (stderr, "omit direct section output\n");
-	      continue;
-	    }
 	  if ((elf_section_data (o->output_section)->this_hdr.sh_type
 	       != SHT_STRTAB)
 	      || strcmp (bfd_get_section_name (abfd, o), ".dynstr") != 0)

diff -u -r binutils.current/ld/lexsup.c binutils-2.16/ld/lexsup.c
--- binutils.current/ld/lexsup.c	2005-10-14 17:43:17.000000000 +0100
+++ binutils-2.16/ld/lexsup.c	2005-03-03 11:52:00.000000000 +0000
@@ -70,7 +70,6 @@
   OPTION_CREF,
   OPTION_DEFSYM,
   OPTION_DEMANGLE,
-  OPTION_DIRECT,
   OPTION_DYNAMIC_LINKER,
   OPTION_SYSROOT,
   OPTION_EB,
@@ -342,8 +341,6 @@
     '\0', NULL, NULL, ONE_DASH },
   { {"Bsymbolic", no_argument, NULL, OPTION_SYMBOLIC},
     '\0', NULL, N_("Bind global references locally"), ONE_DASH },
-  { {"Bdirect", no_argument, NULL, OPTION_DIRECT},
-    '\0', NULL, N_("Direct-linkage the the shared libraries"), ONE_DASH },
   { {"check-sections", no_argument, NULL, OPTION_CHECK_SECTIONS},
     '\0', NULL, N_("Check section addresses for overlaps (default)"),
     TWO_DASHES },
@@ -525,13 +522,6 @@
 
 #define OPTION_COUNT ARRAY_SIZE (ld_options)
 
-static int
-is_direct_vague (const char *symbol)
-{
-  fprint (stderr, "Is '%s' vague\n", symbol);
-  return 0;
-}
-
 void
 parse_args (unsigned argc, char **argv)
 {
@@ -756,10 +746,6 @@
 	      cplus_demangle_set_style (style);
 	    }
 	  break;
-	case OPTION_DIRECT:
-	  link_info.direct = TRUE;
-	  link_info.direct_vague = is_direct_vague;
-	  break;
 	case 'I':		/* Used on Solaris.  */
 	case OPTION_DYNAMIC_LINKER:
 	  command_line.interpreter = optarg;
