Index: codemaker/source/cppumaker/cppumaker.cxx
===================================================================
RCS file: /cvs/udk/codemaker/source/cppumaker/cppumaker.cxx,v
retrieving revision 1.8
diff -u -p -u -r1.8 cppumaker.cxx
--- codemaker/source/cppumaker/cppumaker.cxx	8 Sep 2005 02:11:34 -0000	1.8
+++ codemaker/source/cppumaker/cppumaker.cxx	21 Feb 2006 15:34:26 -0000
@@ -245,6 +245,26 @@ SAL_IMPLEMENT_MAIN_WITH_ARGS(argc, argv)
 		exit(99);
 	}
 
+	if (aExceptionIncludes.getLength() > 0 &&
+		options.isValid("-O"))
+	{
+		OString outPath = options.getOption("-O");
+		outPath += "/catch.hxx";
+		FILE *excepts = fopen (outPath, "w+");
+		fprintf (excepts, "// This file is autogenerated by cppumaker\n");
+		fprintf (excepts, "// include exception headers\n");
+		fprintf (excepts, "%s", (const sal_Char *)aExceptionIncludes);
+		fprintf (excepts, "// dummy method\n");
+		fprintf (excepts, "extern void force_emit ()\n");
+		fprintf (excepts, "{\n");
+		fprintf (excepts, "    try {\n");
+		fprintf (excepts, "        force_emit ();\n");
+		fprintf (excepts, "    }\n");
+		fprintf (excepts, "%s", (const sal_Char *)aExceptionCatches);
+		fprintf (excepts, "}\n\n");
+		fclose (excepts);
+	}
+
 	return 0;
 }
 
Index: codemaker/source/cppumaker/cpputype.cxx
===================================================================
RCS file: /cvs/udk/codemaker/source/cppumaker/cpputype.cxx,v
retrieving revision 1.37
diff -u -p -u -r1.37 cpputype.cxx
--- codemaker/source/cppumaker/cpputype.cxx	26 Jan 2006 17:42:38 -0000	1.37
+++ codemaker/source/cppumaker/cpputype.cxx	21 Feb 2006 15:34:27 -0000
@@ -3265,6 +3265,27 @@ sal_Bool ExceptionType::dumpHFile(
 	return sal_True;
 }
 
+rtl::OString aExceptionIncludes;
+rtl::OString aExceptionCatches;
+
+bool
+ExceptionType::dumpFiles(CppuOptions * options, rtl::OString const & outPath)
+{
+	OString aTypeName = scopedName (OString(), m_typeName);
+
+	OString aCatch = "catch (const " + aTypeName + " &r) {} \n";
+	OString aInclude = "#include <" + m_typeName + ".hpp>\n";
+
+	fprintf (stderr, "Dump type '%s' / '%s'\n",
+			 (const char *) aCatch,
+			 (const char *) aInclude );
+
+	aExceptionCatches += aCatch;
+	aExceptionIncludes += aInclude;
+
+	return CppuType::dumpFiles (options, outPath);
+}
+
 sal_Bool ExceptionType::dumpDeclaration(FileStream& o)
 	throw( CannotDumpException )
 {
Index: codemaker/source/cppumaker/cpputype.hxx
===================================================================
RCS file: /cvs/udk/codemaker/source/cppumaker/cpputype.hxx,v
retrieving revision 1.9
diff -u -p -u -r1.9 cpputype.hxx
--- codemaker/source/cppumaker/cpputype.hxx	10 Jan 2006 15:46:47 -0000	1.9
+++ codemaker/source/cppumaker/cpputype.hxx	21 Feb 2006 15:34:27 -0000
@@ -61,6 +61,9 @@ enum CppuTypeDecl
 class CppuOptions;
 class FileStream;
 
+extern rtl::OString aExceptionIncludes;
+extern rtl::OString aExceptionCatches;
+
 class CppuType
 {
 public:
@@ -300,6 +303,7 @@ public:
 
 	virtual ~ExceptionType();
 
+    bool        dumpFiles(CppuOptions * options, rtl::OString const & outPath);
 	sal_Bool	dumpDeclaration(FileStream& o) throw( CannotDumpException );
 	sal_Bool	dumpHFile(FileStream& o, codemaker::cppumaker::Includes & includes) throw( CannotDumpException );
 	sal_Bool	dumpHxxFile(FileStream& o, codemaker::cppumaker::Includes & includes) throw( CannotDumpException );
--- /dev/null	2006-02-19 17:37:33.000000000 +0000
+++ offuh/except/makefile.mk	2006-02-21 14:53:46.000000000 +0000
@@ -0,0 +1,19 @@
+# --- Settings -----------------------------------------------------
+
+PRJ=..
+
+PRJNAME=offuh
+TARGET=excpt
+ENABLE_EXCEPTIONS=TRUE
+
+.INCLUDE :  settings.mk
+
+LIB1TARGET= $(SLB)$/$(TARGET).lib
+LIB1OBJFILES= $(SLO)$/except.obj
+
+SHL1TARGET=except$(UPD)$(DLLPOSTFIX)
+SHL1LIBS=$(LIB1TARGET)
+
+# --- Targets -------------------------------------------------------
+
+.INCLUDE :  target.mk
--- /dev/null	2006-02-19 17:37:33.000000000 +0000
+++ offuh/except/except.cxx	2006-02-21 14:48:09.000000000 +0000
@@ -0,0 +1 @@
+#include <catch.hxx>
