Index: sd/source/ui/slidesorter/cache/SlsQueueProcessor.cxx
===================================================================
RCS file: /cvs/graphics/sd/source/ui/slidesorter/cache/SlsQueueProcessor.cxx,v
retrieving revision 1.6
diff -u -p -r1.6 SlsQueueProcessor.cxx
--- sd/source/ui/slidesorter/cache/SlsQueueProcessor.cxx	24 Oct 2005 07:41:45 -0000	1.6
+++ sd/source/ui/slidesorter/cache/SlsQueueProcessor.cxx	1 Dec 2005 14:18:23 -0000
@@ -42,8 +42,8 @@ namespace sd { namespace slidesorter { n
 //===== QueueProcessorBase  ===================================================
 
 QueueProcessorBase::QueueProcessorBase (void)
-    : mnTimeBetweenHighPriorityRequests (10/*ms*/),
-      mnTimeBetweenLowPriorityRequests (100/*ms*/),
+    : mnTimeBetweenHighPriorityRequests (1/*ms*/),
+      mnTimeBetweenLowPriorityRequests (10/*ms*/),
       mnTimeBetweenRequestsWhenNotIdle (1000/*ms*/)
 {
     // Look into the configuration if there for overriding values.
@@ -63,7 +63,11 @@ QueueProcessorBase::QueueProcessorBase (
     if (aTimeBetweenReqeusts.has<sal_Int32>())
         aTimeBetweenReqeusts >>= mnTimeBetweenRequestsWhenNotIdle;
 
+	mnTimeBetweenHighPriorityRequests = 10;
+	mnTimeBetweenLowPriorityRequests = 20;
+
     maTimer.SetTimeoutHdl (LINK(this,QueueProcessorBase,ProcessRequest));
+	OSL_TRACE("Set slide sorter timeout %dms", mnTimeBetweenHighPriorityRequests);
     maTimer.SetTimeout (mnTimeBetweenHighPriorityRequests);
 }
 
@@ -74,10 +78,13 @@ void QueueProcessorBase::Start (int nPri
 {
     if ( ! maTimer.IsActive())
     {
-        if (nPriorityClass == 0)
+        if (nPriorityClass == 0) {
+			OSL_TRACE("Set slide sorter timeout %dms", mnTimeBetweenHighPriorityRequests);
             maTimer.SetTimeout (mnTimeBetweenHighPriorityRequests);
-        else
+        } else {
+			OSL_TRACE("Set slide sorter timeout %dms", mnTimeBetweenLowPriorityRequests);
             maTimer.SetTimeout (mnTimeBetweenLowPriorityRequests);
+		}
         maTimer.Start();
     }
 }
Index: sd/source/ui/slidesorter/view/SlideSorterView.cxx
===================================================================
RCS file: /cvs/graphics/sd/source/ui/slidesorter/view/SlideSorterView.cxx,v
retrieving revision 1.13
diff -u -p -r1.13 SlideSorterView.cxx
--- sd/source/ui/slidesorter/view/SlideSorterView.cxx	24 Oct 2005 07:44:36 -0000	1.13
+++ sd/source/ui/slidesorter/view/SlideSorterView.cxx	1 Dec 2005 14:18:23 -0000
@@ -74,6 +74,8 @@
 #include <algorithm>
 #include <svx/sdr/contact/objectcontact.hxx>
 
+#include <vcl/pngread.hxx>
+
 using namespace std;
 using namespace ::sd::slidesorter::model;
 
Index: sd/source/ui/tools/PreviewRenderer.cxx
===================================================================
RCS file: /cvs/graphics/sd/source/ui/tools/PreviewRenderer.cxx,v
retrieving revision 1.6
diff -u -p -r1.6 PreviewRenderer.cxx
--- sd/source/ui/tools/PreviewRenderer.cxx	9 Sep 2005 06:44:56 -0000	1.6
+++ sd/source/ui/tools/PreviewRenderer.cxx	1 Dec 2005 14:18:23 -0000
@@ -41,6 +41,7 @@
 #include "sdpage.hxx"
 #include "ViewShell.hxx"
 #include <vcl/virdev.hxx>
+#include <vcl/pngread.hxx>
 #include <svx/svdpagv.hxx>
 #include <svx/svdoutl.hxx>
 #include <svx/eeitem.hxx>
@@ -112,7 +113,11 @@ Image PreviewRenderer::RenderPage (
     {
         if (Initialize (pPage, aPixelSize))
         {
+			OSL_TRACE("set preview to %dx%d", aPixelSize.Width(), aPixelSize.Height());
+			vcl::PNGReader::SetPreviewSizeHint( Size( aPixelSize.Width(), 0) );
             PaintPage (pPage);
+			vcl::PNGReader::DisablePreviewMode();
+
             PaintSubstitutionText (rSubstitutionText);
             PaintFrame();
         
