Index: vcl/source/window/abstdlg.cxx
===================================================================
RCS file: vcl/source/window/abstdlg.cxx
diff -N vcl/source/window/abstdlg.cxx
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ vcl/source/window/abstdlg.cxx	5 Jan 2004 11:27:26 -0000	1.2
@@ -0,0 +1,84 @@
+/*************************************************************************
+ *
+ *  
+ *
+ *  
+ *
+ *  
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+#include "abstdlg.hxx"
+#include "cuilib.hxx"
+
+#include <osl/module.hxx>
+#include <tools/string.hxx>
+
+typedef VclAbstractDialogFactory* (__LOADONCALLAPI *FuncPtrCreateDialogFactory)();
+
+VclAbstractDialogFactory* VclAbstractDialogFactory::Create()
+{
+    FuncPtrCreateDialogFactory fp = 0;
+	static ::osl::Module aDialogLibrary;
+	if ( aDialogLibrary.is() || aDialogLibrary.load( String( RTL_CONSTASCII_USTRINGPARAM( DLL_NAME ) ) ) )
+        fp = ( VclAbstractDialogFactory* (__LOADONCALLAPI*)() )
+			aDialogLibrary.getSymbol( ::rtl::OUString::createFromAscii("CreateDialogFactory") );
+	if ( fp )
+		return fp();
+	return 0;
+}
+
+VclAbstractDialog::~VclAbstractDialog()
+{
+}
Index: vcl/source/window/accel.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/accel.cxx,v
retrieving revision 1.1.1.1
retrieving revision 1.3
diff -u -p -u -r1.1.1.1 -r1.3
--- vcl/source/window/accel.cxx	18 Sep 2000 17:05:39 -0000	1.1.1.1
+++ vcl/source/window/accel.cxx	6 Jan 2004 14:01:59 -0000	1.3
@@ -59,8 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_ACCEL_CXX
-
 #ifndef _LIST_HXX
 #include <tools/list.hxx>
 #endif
@@ -81,10 +79,10 @@
 #include <accel.hxx>
 #endif
 #ifndef _RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 
-#pragma hdrstop
+
 
 // =======================================================================
 
@@ -419,7 +417,6 @@ void Accelerator::InsertItem( const ResI
 	USHORT				nAccelKeyId;
 	USHORT				bDisable;
 	KeyCode 			aKeyCode;
-	BOOL				bEnable 	= FALSE;
 	Accelerator*		pAutoAccel	= NULL;
 
 	GetRes( rResId.SetRT( RSC_ACCELITEM ) );
Index: vcl/source/window/accmgr.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/accmgr.cxx,v
retrieving revision 1.1.1.1
retrieving revision 1.3
diff -u -p -u -r1.1.1.1 -r1.3
--- vcl/source/window/accmgr.cxx	18 Sep 2000 17:05:40 -0000	1.1.1.1
+++ vcl/source/window/accmgr.cxx	6 Jan 2004 14:02:47 -0000	1.3
@@ -59,8 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_ACCMGR_CXX
-
 #ifndef _LIST_HXX
 #include <tools/list.hxx>
 #endif
@@ -78,7 +76,7 @@
 #include <accmgr.hxx>
 #endif
 
-#pragma hdrstop
+
 
 // =======================================================================
 
Index: vcl/source/window/brdwin.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/brdwin.cxx,v
retrieving revision 1.9.82.1
retrieving revision 1.14
diff -u -p -u -r1.9.82.1 -r1.14
--- vcl/source/window/brdwin.cxx	9 Jan 2004 18:13:54 -0000	1.9.82.1
+++ vcl/source/window/brdwin.cxx	17 Jun 2004 12:45:34 -0000	1.14
@@ -59,12 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_BRDWIN_CXX
-
-#ifdef REMOTE_APPSERVER
-#include <rmwindow.hxx>
-#endif
-
 #ifndef _SV_SVIDS_HRC
 #include <svids.hrc>
 #endif
@@ -101,16 +95,14 @@
 #ifndef _SV_HELP_HXX
 #include <help.hxx>
 #endif
+#ifndef _SV_EDIT_HXX
+#include <edit.hxx>
+#endif
 #ifndef _SV_BRDWIN_HXX
 #include <brdwin.hxx>
 #endif
-
 #include <tools/debug.hxx>
 
-#include <rvp.hxx>
-
-#pragma hdrstop
-
 using namespace ::com::sun::star::uno;
 
 // =======================================================================
@@ -968,8 +960,8 @@ void ImplNoBorderWindowView::Init( Outpu
 
 // -----------------------------------------------------------------------
 
-void ImplNoBorderWindowView::GetBorder( long& rLeftBorder, long& rTopBorder,
-										long& rRightBorder, long& rBottomBorder ) const
+void ImplNoBorderWindowView::GetBorder( sal_Int32& rLeftBorder, sal_Int32& rTopBorder,
+										sal_Int32& rRightBorder, sal_Int32& rBottomBorder ) const
 {
 	rLeftBorder 	= 0;
 	rTopBorder		= 0;
@@ -1043,8 +1035,8 @@ void ImplSmallBorderWindowView::Init( Ou
 
 // -----------------------------------------------------------------------
 
-void ImplSmallBorderWindowView::GetBorder( long& rLeftBorder, long& rTopBorder,
-										   long& rRightBorder, long& rBottomBorder ) const
+void ImplSmallBorderWindowView::GetBorder( sal_Int32& rLeftBorder, sal_Int32& rTopBorder,
+										   sal_Int32& rRightBorder, sal_Int32& rBottomBorder ) const
 {
 	rLeftBorder 	= mnLeftBorder;
 	rTopBorder		= mnTopBorder;
@@ -1067,6 +1059,112 @@ void ImplSmallBorderWindowView::DrawWind
 	if ( nBorderStyle & WINDOW_BORDER_NOBORDER )
 		return;
 
+    BOOL bNativeOK = FALSE;
+    // for native widget drawing we must find out what
+    // control this border belongs to
+    Window *pWin = NULL, *pCtrl = NULL;
+    if( mpOutDev->GetOutDevType() == OUTDEV_WINDOW )
+        pWin = (Window*) mpOutDev;
+
+    ControlType aCtrlType = 0;
+    ControlPart aCtrlPart = PART_ENTIRE_CONTROL;
+
+    if( pWin && (pCtrl = mpBorderWindow->GetWindow( WINDOW_CLIENT )) != NULL )
+    {
+        switch( pCtrl->GetType() )
+        {
+            case WINDOW_EDIT:
+            case WINDOW_MULTILINEEDIT:
+            case WINDOW_PATTERNFIELD:
+            case WINDOW_METRICFIELD:
+            case WINDOW_CURRENCYFIELD:
+            case WINDOW_DATEFIELD:
+            case WINDOW_TIMEFIELD:
+            case WINDOW_LONGCURRENCYFIELD:
+            case WINDOW_NUMERICFIELD:
+            case WINDOW_SPINFIELD:
+                if( pCtrl->GetStyle() & WB_SPIN )
+                    aCtrlType = CTRL_SPINBOX;
+                else
+                    aCtrlType = CTRL_EDITBOX;
+                break;
+
+            case WINDOW_LISTBOX:
+            case WINDOW_MULTILISTBOX:
+            case WINDOW_TREELISTBOX:
+                aCtrlType = CTRL_LISTBOX;
+                if( pCtrl->GetStyle() & WB_DROPDOWN )
+                    aCtrlPart = PART_ENTIRE_CONTROL;
+                else
+                    aCtrlPart = PART_WINDOW;
+                break;
+
+            case WINDOW_LISTBOXWINDOW:
+                aCtrlType = CTRL_LISTBOX;
+                aCtrlPart = PART_WINDOW;
+                break;
+
+            case WINDOW_COMBOBOX:
+            case WINDOW_PATTERNBOX:			
+            case WINDOW_NUMERICBOX:			
+            case WINDOW_METRICBOX:			
+            case WINDOW_CURRENCYBOX:
+            case WINDOW_DATEBOX:		
+            case WINDOW_TIMEBOX:			
+            case WINDOW_LONGCURRENCYBOX:
+                if( pCtrl->GetStyle() & WB_DROPDOWN )
+                {
+                    aCtrlType = CTRL_COMBOBOX;
+                    aCtrlPart = PART_ENTIRE_CONTROL;
+                }
+                else
+                {
+                    aCtrlType = CTRL_LISTBOX;
+                    aCtrlPart = PART_WINDOW;
+                }
+                break;
+                break;
+
+            default:
+                break;
+        }
+    }
+
+    if ( aCtrlType && pCtrl->IsNativeControlSupported(aCtrlType, aCtrlPart) )
+    {
+        ImplControlValue aControlValue;
+        ControlState     nState = CTRL_STATE_ENABLED;
+
+        if ( !pWin->IsEnabled() )
+            nState &= ~CTRL_STATE_ENABLED;
+        if ( pWin->HasFocus() )
+            nState |= CTRL_STATE_FOCUSED;
+        BOOL bMouseOver = FALSE;
+        Window *pCtrlChild = pCtrl->GetWindow( WINDOW_FIRSTCHILD );
+        while( pCtrlChild && !(bMouseOver = pCtrlChild->IsMouseOver()) )
+            pCtrlChild = pCtrlChild->GetWindow( WINDOW_NEXT );
+    	
+        if( bMouseOver )
+            nState |= CTRL_STATE_ROLLOVER;
+
+        Point aPoint;
+        Region aCtrlRegion( Rectangle( aPoint, Size( mnWidth, mnHeight ) ) );
+        bNativeOK = pWin->DrawNativeControl( aCtrlType, aCtrlPart, aCtrlRegion, nState,
+                aControlValue, rtl::OUString() );
+
+        // if the native theme draws the spinbuttons in one call, make sure the proper settings
+        // are passed, this might force a redraw though.... (TODO: improve)
+        if ( (aCtrlType == CTRL_SPINBOX) && !pCtrl->IsNativeControlSupported( CTRL_SPINBOX, PART_BUTTON_UP ) )
+        {
+            Edit *pEdit = ((Edit*) pCtrl)->GetSubEdit();
+            if ( pEdit )
+                pCtrl->Paint( Rectangle() );  // make sure the buttons are also drawn as they might overwrite the border
+        }
+    }
+
+    if( bNativeOK )
+        return;
+
 	if ( nDrawFlags & BORDERWINDOW_DRAW_FRAME )
 	{
 		if ( nBorderStyle & WINDOW_BORDER_ACTIVE )
@@ -1092,8 +1190,11 @@ void ImplSmallBorderWindowView::DrawWind
 				nStyle |= FRAME_DRAW_MONO;
 			if ( nBorderStyle & WINDOW_BORDER_MENU )
 				nStyle |= FRAME_DRAW_MENU;
+            // tell DrawFrame that we're drawing a window border of a frame window to avoid round corners
+            if( pWin && pWin == pWin->ImplGetFrameWindow() )
+                nStyle |= FRAME_DRAW_WINDOWBORDER;  
 
-			DecorationView	aDecoView( mpOutDev );
+            DecorationView	aDecoView( mpOutDev );
 			Point			aTmpPoint;
 			Rectangle		aInRect( aTmpPoint, Size( mnWidth, mnHeight ) );
 			aDecoView.DrawFrame( aInRect, nStyle );
@@ -1301,8 +1402,8 @@ void ImplStdBorderWindowView::Init( Outp
 
 // -----------------------------------------------------------------------
 
-void ImplStdBorderWindowView::GetBorder( long& rLeftBorder, long& rTopBorder,
-										 long& rRightBorder, long& rBottomBorder ) const
+void ImplStdBorderWindowView::GetBorder( sal_Int32& rLeftBorder, sal_Int32& rTopBorder,
+										 sal_Int32& rRightBorder, sal_Int32& rBottomBorder ) const
 {
 	rLeftBorder 	= maFrameData.mnLeftBorder;
 	rTopBorder		= maFrameData.mnTopBorder;
@@ -1375,7 +1476,6 @@ void ImplStdBorderWindowView::DrawWindow
 			pDev->SetTextColor( rStyleSettings.GetDeactiveTextColor() );
 			aColor2 = rStyleSettings.GetDeactiveColor2();
 		}
-#ifndef REMOTE_APPSERVER
 		BOOL bDrawRect;
 		if ( pDev->GetColorCount() >= 256 )
 		{
@@ -1420,7 +1520,6 @@ void ImplStdBorderWindowView::DrawWindow
 			bDrawRect = TRUE;
 
 		if ( bDrawRect )
-#endif
 			pDev->DrawRect( aInRect );
 
 		if ( pData->mnTitleType != BORDERWINDOW_TITLE_TEAROFF )
@@ -1519,1795 +1618,52 @@ void ImplStdBorderWindowView::DrawWindow
 	}
 }
 
-// =======================================================================
-
-// ---------------------------
-// - ImplOS2BorderWindowView -
-// ---------------------------
-
-class ImplOS2BorderWindowView : public ImplBorderWindowView
-{
-	ImplBorderFrameData 	maFrameData;
-
-public:
-							ImplOS2BorderWindowView( ImplBorderWindow* pBorderWindow );
-							~ImplOS2BorderWindowView();
-
-	virtual BOOL			MouseMove( const MouseEvent& rMEvt );
-	virtual BOOL			MouseButtonDown( const MouseEvent& rMEvt );
-	virtual BOOL			Tracking( const TrackingEvent& rTEvt );
-	virtual USHORT			RequestHelp( const Point& rPos, Rectangle& rHelpRect );
-
-	virtual void			Init( OutputDevice* pDev, long nWidth, long nHeight );
-	virtual void			GetBorder( long& rLeftBorder, long& rTopBorder,
-									   long& rRightBorder, long& rBottomBorder ) const;
-	virtual long			CalcTitleWidth() const;
-	virtual void			DrawWindow( USHORT nDrawFlags, OutputDevice* pOutDev, const Point* pOffset );
-
-	Rectangle				DrawOS2TitleButton( const Rectangle& rRect, USHORT nStyle );
-};
-
-// Aus decoview.cxx
-void ImplDrawOS2Symbol( OutputDevice* pDev, const Rectangle& rRect,
-						USHORT nStyle, BOOL bClose );
 
 // =======================================================================
-
-ImplOS2BorderWindowView::ImplOS2BorderWindowView( ImplBorderWindow* pBorderWindow )
-{
-	maFrameData.mpBorderWindow	= pBorderWindow;
-	maFrameData.mbDragFull		= FALSE;
-	maFrameData.mnHitTest		= 0;
-	maFrameData.mnPinState		= 0;
-	maFrameData.mnCloseState	= 0;
-	maFrameData.mnRollState 	= 0;
-	maFrameData.mnDockState 	= 0;
-	maFrameData.mnHideState 	= 0;
-	maFrameData.mnHelpState 	= 0;
-}
-
-// -----------------------------------------------------------------------
-
-ImplOS2BorderWindowView::~ImplOS2BorderWindowView()
-{
-}
-
-// -----------------------------------------------------------------------
-
-BOOL ImplOS2BorderWindowView::MouseMove( const MouseEvent& rMEvt )
-{
-	return ImplMouseMove( &maFrameData, rMEvt );
-}
-
-// -----------------------------------------------------------------------
-
-BOOL ImplOS2BorderWindowView::MouseButtonDown( const MouseEvent& rMEvt )
-{
-	return ImplMouseButtonDown( &maFrameData, rMEvt );
-}
-
-// -----------------------------------------------------------------------
-
-BOOL ImplOS2BorderWindowView::Tracking( const TrackingEvent& rTEvt )
-{
-	return ImplTracking( &maFrameData, rTEvt );
-}
-
-// -----------------------------------------------------------------------
-
-USHORT ImplOS2BorderWindowView::RequestHelp( const Point& rPos, Rectangle& rHelpRect )
+void ImplBorderWindow::ImplInit( Window* pParent,
+								 WinBits nStyle, USHORT nTypeStyle,
+								 const ::com::sun::star::uno::Any& aSystemToken )
 {
-	return ImplRequestHelp( &maFrameData, rPos, rHelpRect );
+	ImplInit( pParent, nStyle, nTypeStyle, NULL );
 }
 
-// -----------------------------------------------------------------------
-
-void ImplOS2BorderWindowView::Init( OutputDevice* pDev, long nWidth, long nHeight )
+void ImplBorderWindow::ImplInit( Window* pParent,
+								 WinBits nStyle, USHORT nTypeStyle,
+								 SystemParentData* pSystemParentData
+								 )
 {
-	ImplBorderFrameData*	pData = &maFrameData;
-	ImplBorderWindow*		pBorderWindow = maFrameData.mpBorderWindow;
-	const StyleSettings&	rStyleSettings = pDev->GetSettings().GetStyleSettings();
-	DecorationView			aDecoView( pDev );
-	Rectangle				aRect( 0, 0, 10, 10 );
-	Rectangle				aCalcRect = aDecoView.DrawFrame( aRect, FRAME_DRAW_DOUBLEOUT | FRAME_DRAW_NODRAW );
-
-	pData->mpOutDev 		= pDev;
-	pData->mnWidth			= nWidth;
-	pData->mnHeight 		= nHeight;
-
-	pData->mnTitleType		= pBorderWindow->mnTitleType;
-	pData->mbFloatWindow	= pBorderWindow->mbFloatWindow;
-
-	if ( !(pBorderWindow->GetStyle() & WB_MOVEABLE) || (pData->mnTitleType == BORDERWINDOW_TITLE_NONE) )
-		pData->mnBorderSize = 0;
-	else if ( pData->mnTitleType == BORDERWINDOW_TITLE_TEAROFF )
-		pData->mnBorderSize = 0;
-	else
-		pData->mnBorderSize = rStyleSettings.GetBorderSize();
-	pData->mnLeftBorder 	= aCalcRect.Left();
-	pData->mnTopBorder		= aCalcRect.Top();
-	pData->mnRightBorder	= aRect.Right()-aCalcRect.Right();
-	pData->mnBottomBorder	= aRect.Bottom()-aCalcRect.Bottom();
-	pData->mnLeftBorder    += pData->mnBorderSize;
-	pData->mnTopBorder	   += pData->mnBorderSize;
-	pData->mnRightBorder   += pData->mnBorderSize;
-	pData->mnBottomBorder  += pData->mnBorderSize;
-	pData->mnNoTitleTop 	= pData->mnTopBorder;
+	// Alle WindowBits entfernen, die wir nicht haben wollen
+	WinBits nOrgStyle = nStyle;
+	WinBits nTestStyle = (WB_MOVEABLE | WB_SIZEABLE | WB_ROLLABLE | WB_PINABLE | WB_CLOSEABLE | WB_STANDALONE | WB_DIALOGCONTROL | WB_NODIALOGCONTROL | WB_SYSTEMFLOATWIN | WB_INTROWIN | WB_TOOLTIPWIN | WB_NOSHADOW);
+	if ( nTypeStyle & BORDERWINDOW_STYLE_APP )
+		nTestStyle |= WB_APP;
+	nStyle &= nTestStyle;
 
-	ImplInitTitle( &maFrameData );
-	if ( pData->mnTitleHeight )
+	mbBorderWin 		= TRUE;
+	mbSmallOutBorder	= FALSE;
+	if ( nTypeStyle & BORDERWINDOW_STYLE_FRAME )
 	{
-		// Wegen 3D-Border bei aktiver Darstellung
-		if ( pData->mnTitleType != BORDERWINDOW_TITLE_TEAROFF )
-		{
-			long nTextHeight = pBorderWindow->GetTextHeight();
-			nTextHeight += 2;
-			if ( nTextHeight > pData->mnTitleHeight )
-				pData->mnTitleHeight = nTextHeight;
-		}
-
-		pData->maTitleRect.Left()	 = pData->mnLeftBorder;
-		pData->maTitleRect.Right()	 = nWidth-pData->mnRightBorder-1;
-		pData->maTitleRect.Top()	 = pData->mnTopBorder;
-		pData->maTitleRect.Bottom()  = pData->maTitleRect.Top()+pData->mnTitleHeight-1;
-
-		if ( pData->mnTitleType & (BORDERWINDOW_TITLE_NORMAL | BORDERWINDOW_TITLE_SMALL) )
-		{
-			long nLeft			= pData->maTitleRect.Left();
-			long nRight 		= pData->maTitleRect.Right();
-			long nItemTop		= pData->maTitleRect.Top();
-			long nItemBottom	= pData->maTitleRect.Bottom();
-
-			if ( pBorderWindow->mbHelpBtn )
-			{
-				pData->maHelpRect.Top()    = nItemTop;
-				pData->maHelpRect.Bottom() = nItemBottom;
-				pData->maHelpRect.Left()   = nLeft;
-				pData->maHelpRect.Right()  = pData->maHelpRect.Left()+pData->maHelpRect.GetHeight()-1;
-				nLeft += pData->maHelpRect.GetWidth();
-			}
-
-			if ( pBorderWindow->GetStyle() & WB_PINABLE )
-			{
-				nLeft += 2;
-				Image aImage;
-				ImplGetPinImage( 0, 0, aImage );
-				pData->maPinRect.Top()	  = nItemTop;
-				pData->maPinRect.Bottom() = nItemBottom;
-				pData->maPinRect.Left()   = nLeft;
-				pData->maPinRect.Right()  = pData->maPinRect.Left()+aImage.GetSizePixel().Width();
-				nLeft += pData->maPinRect.GetWidth();
-			}
-
-			if ( pBorderWindow->mbDockBtn )
-			{
-				pData->maDockRect.Top()    = nItemTop;
-				pData->maDockRect.Bottom() = nItemBottom;
-				pData->maDockRect.Right()  = nRight;
-				pData->maDockRect.Left()   = pData->maDockRect.Right()-pData->maDockRect.GetHeight()+1;
-				nRight -= pData->maDockRect.GetWidth();
-			}
-
-			if ( pBorderWindow->mbHideBtn )
-			{
-				pData->maHideRect.Top()    = nItemTop;
-				pData->maHideRect.Bottom() = nItemBottom;
-				pData->maHideRect.Right()  = nRight;
-				pData->maHideRect.Left()   = pData->maHideRect.Right()-pData->maHideRect.GetHeight()+1;
-				nRight -= pData->maHideRect.GetWidth();
-			}
-
-			if ( pBorderWindow->GetStyle() & WB_ROLLABLE )
-			{
-				pData->maRollRect.Top()    = nItemTop;
-				pData->maRollRect.Bottom() = nItemBottom;
-				pData->maRollRect.Right()  = nRight;
-				pData->maRollRect.Left()   = pData->maRollRect.Right()-pData->maRollRect.GetHeight()+1;
-				nRight -= pData->maRollRect.GetWidth();
-			}
-
-			if ( pBorderWindow->GetStyle() & WB_CLOSEABLE )
-			{
-				pData->maCloseRect.Top()	= nItemTop;
-				pData->maCloseRect.Bottom() = nItemBottom;
-				pData->maCloseRect.Right()	= nRight;
-				pData->maCloseRect.Left()	= pData->maCloseRect.Right()-pData->maCloseRect.GetHeight()+1;
-				nRight -= pData->maCloseRect.GetWidth();
-			}
-		}
-		else
-		{
-			pData->maPinRect.SetEmpty();
-			pData->maCloseRect.SetEmpty();
-			pData->maDockRect.SetEmpty();
-			pData->maHideRect.SetEmpty();
-			pData->maRollRect.SetEmpty();
-			pData->maHelpRect.SetEmpty();
-		}
-
-		pData->mnTopBorder	+= pData->mnTitleHeight;
+		mbOverlapWin	= TRUE;
+		mbFrame 		= TRUE;
+		mbFrameBorder	= FALSE;
+        // closeable windows may have a border as well, eg. system floating windows without caption
+		if ( (nOrgStyle & (WB_BORDER | WB_NOBORDER | WB_MOVEABLE | WB_SIZEABLE/* | WB_CLOSEABLE*/)) == WB_BORDER )
+			mbSmallOutBorder = TRUE;
 	}
-	else
+	else if ( nTypeStyle & BORDERWINDOW_STYLE_OVERLAP )
 	{
-		pData->maTitleRect.SetEmpty();
-		pData->maPinRect.SetEmpty();
-		pData->maCloseRect.SetEmpty();
-		pData->maDockRect.SetEmpty();
-		pData->maHideRect.SetEmpty();
-		pData->maRollRect.SetEmpty();
-		pData->maHelpRect.SetEmpty();
+		mbOverlapWin	= TRUE;
+		mbFrameBorder	= TRUE;
 	}
-}
-
-// -----------------------------------------------------------------------
-
-void ImplOS2BorderWindowView::GetBorder( long& rLeftBorder, long& rTopBorder,
-										 long& rRightBorder, long& rBottomBorder ) const
-{
-	rLeftBorder 	= maFrameData.mnLeftBorder;
-	rTopBorder		= maFrameData.mnTopBorder;
-	rRightBorder	= maFrameData.mnRightBorder;
-	rBottomBorder	= maFrameData.mnBottomBorder;
-}
-
-// -----------------------------------------------------------------------
-
-long ImplOS2BorderWindowView::CalcTitleWidth() const
-{
-	return ImplCalcTitleWidth( &maFrameData );
-}
-
-// -----------------------------------------------------------------------
-
-void ImplOS2BorderWindowView::DrawWindow( USHORT nDrawFlags, OutputDevice* pOutDev, const Point* pOffset )
-{
-	ImplBorderFrameData*	pData = &maFrameData;
-	OutputDevice*			pDev = pOutDev ? pOutDev : pData->mpOutDev;
-	ImplBorderWindow*		pBorderWindow = pData->mpBorderWindow;
-	Point					aTmpPoint( pOffset ? *pOffset : Point() );
-	Rectangle				aInRect( aTmpPoint, Size( pData->mnWidth, pData->mnHeight ) );
-	const StyleSettings&	rStyleSettings = pDev->GetSettings().GetStyleSettings();
-	DecorationView			aDecoView( pDev );
-	USHORT					nStyle;
-	BOOL					bActive = pBorderWindow->IsDisplayActive();
+	else
+		mbFrameBorder	= FALSE;
 
-	// Draw Frame
-	if ( nDrawFlags & BORDERWINDOW_DRAW_FRAME )
-		nStyle = 0;
+	if ( nTypeStyle & BORDERWINDOW_STYLE_FLOAT )
+		mbFloatWindow = TRUE;
 	else
-		nStyle = FRAME_DRAW_NODRAW;
-	aInRect = aDecoView.DrawFrame( aInRect, FRAME_DRAW_DOUBLEOUT | nStyle );
+		mbFloatWindow = FALSE;
 
-	// Draw Border
-	pDev->SetLineColor();
-	long nBorderSize = pData->mnBorderSize;
-	if ( (nDrawFlags & BORDERWINDOW_DRAW_BORDER) && nBorderSize )
-	{
-		if ( bActive )
-			pDev->SetFillColor( rStyleSettings.GetActiveBorderColor() );
-		else
-			pDev->SetFillColor( rStyleSettings.GetDeactiveBorderColor() );
-		pDev->DrawRect( Rectangle( Point( aInRect.Left(), aInRect.Top() ),
-								   Size( aInRect.GetWidth(), nBorderSize ) ) );
-		pDev->DrawRect( Rectangle( Point( aInRect.Left(), aInRect.Top()+nBorderSize ),
-								   Size( nBorderSize, aInRect.GetHeight()-nBorderSize ) ) );
-		pDev->DrawRect( Rectangle( Point( aInRect.Left(), aInRect.Bottom()-nBorderSize+1 ),
-								   Size( aInRect.GetWidth(), nBorderSize ) ) );
-		pDev->DrawRect( Rectangle( Point( aInRect.Right()-nBorderSize+1, aInRect.Top()+nBorderSize ),
-								   Size( nBorderSize, aInRect.GetHeight()-nBorderSize ) ) );
-	}
-
-	// Draw Title
-	if ( (nDrawFlags & BORDERWINDOW_DRAW_TITLE) && !pData->maTitleRect.IsEmpty() )
-	{
-		aInRect = pData->maTitleRect;
-
-		if ( !pData->maHelpRect.IsEmpty() )
-			aInRect.Left() = pData->maHelpRect.Right()+1;
-
-		if ( !pData->maCloseRect.IsEmpty() )
-			aInRect.Right() = pData->maCloseRect.Left()-1;
-		else if ( !pData->maRollRect.IsEmpty() )
-			aInRect.Right() = pData->maRollRect.Left()-1;
-		else if ( !pData->maHideRect.IsEmpty() )
-			aInRect.Right() = pData->maHideRect.Left()-1;
-		else if ( !pData->maDockRect.IsEmpty() )
-			aInRect.Right() = pData->maDockRect.Left()-1;
-
-        if ( pOffset )
-            aInRect.Move( pOffset->X(), pOffset->Y() );
-
-		if ( bActive )
-		{
-			pDev->SetFillColor( rStyleSettings.GetActiveColor() );
-			pDev->SetTextColor( rStyleSettings.GetActiveTextColor() );
-		}
-		else
-		{
-			pDev->SetFillColor( rStyleSettings.GetDeactiveColor() );
-			pDev->SetTextColor( rStyleSettings.GetDeactiveTextColor() );
-		}
-		pDev->DrawRect( aInRect );
-
-		if ( pData->mnTitleType != BORDERWINDOW_TITLE_TEAROFF )
-		{
-			Rectangle aOrgInRect = aInRect;
-
-			if ( !pData->maPinRect.IsEmpty() )
-				aInRect.Left() += pData->maPinRect.Right();
-
-			aInRect.Left()	+= 2;
-			aInRect.Right() -= 2;
-
-			pDev->DrawText( aInRect, pBorderWindow->GetText(),
-							TEXT_DRAW_LEFT | TEXT_DRAW_VCENTER |
-							TEXT_DRAW_ENDELLIPSIS | TEXT_DRAW_CLIP );
-
-			if ( bActive )
-				aDecoView.DrawFrame( aOrgInRect, rStyleSettings.GetShadowColor(), rStyleSettings.GetLightColor() );
-		}
-	}
-
-	if ( ((nDrawFlags & BORDERWINDOW_DRAW_CLOSE) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-		 !pData->maCloseRect.IsEmpty() )
-	{
-		Rectangle aRect = DrawOS2TitleButton( pData->maCloseRect, pData->mnCloseState );
-		if ( pOffset )
-			aRect.Move( pOffset->X(), pOffset->Y() );
-		ImplDrawOS2Symbol( pDev, aRect, pData->mnCloseState, TRUE );
-	}
-
-	if ( ((nDrawFlags & BORDERWINDOW_DRAW_DOCK) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-		 !pData->maDockRect.IsEmpty() )
-	{
-		Rectangle aRect = DrawOS2TitleButton( pData->maDockRect, pData->mnDockState );
-		if ( pOffset )
-			aRect.Move( pOffset->X(), pOffset->Y() );
-		ImplDrawOS2Symbol( pDev, aRect, pData->mnDockState, FALSE );
-	}
-
-	if ( ((nDrawFlags & BORDERWINDOW_DRAW_HIDE) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-		 !pData->maHideRect.IsEmpty() )
-	{
-		Rectangle aRect = DrawOS2TitleButton( pData->maHideRect, pData->mnHideState );
-		aRect.Left()   += 2;
-		aRect.Top()    += 2;
-		aRect.Right()  -= 2;
-		aRect.Bottom() -= 2;
-		if ( pOffset )
-			aRect.Move( pOffset->X(), pOffset->Y() );
-		ImplDrawOS2Symbol( pDev, aRect, pData->mnHideState, FALSE );
-	}
-
-	if ( ((nDrawFlags & BORDERWINDOW_DRAW_ROLL) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-		 !pData->maRollRect.IsEmpty() )
-	{
-		Rectangle aRect = DrawOS2TitleButton( pData->maRollRect, pData->mnRollState );
-		if ( !pBorderWindow->mbRollUp )
-			aRect.Bottom() = aRect.Top()+6;
-		if ( pOffset )
-			aRect.Move( pOffset->X(), pOffset->Y() );
-		ImplDrawOS2Symbol( pDev, aRect, pData->mnRollState, FALSE );
-		if ( pBorderWindow->mbRollUp )
-		{
-			aRect.Left()   += 3;
-			aRect.Top()    += 3;
-			aRect.Right()  -= 3;
-			aRect.Bottom() -= 3;
-			pDev->SetFillColor();
-			if ( nStyle & (BUTTON_DRAW_PRESSED | BUTTON_DRAW_CHECKED) )
-				pDev->SetLineColor( rStyleSettings.GetShadowColor() );
-			else
-				pDev->SetLineColor( rStyleSettings.GetLightColor() );
-			pDev->DrawLine( aRect.TopLeft(), aRect.TopRight() );
-			aRect.Top()++;
-			if ( nStyle & (BUTTON_DRAW_PRESSED | BUTTON_DRAW_CHECKED) )
-				pDev->SetLineColor( rStyleSettings.GetLightColor() );
-			else
-				pDev->SetLineColor( rStyleSettings.GetShadowColor() );
-			pDev->DrawLine( aRect.TopLeft(), aRect.TopRight() );
-		}
-	}
-
-	if ( ((nDrawFlags & BORDERWINDOW_DRAW_HELP) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-		 !pData->maHelpRect.IsEmpty() )
-	{
-		Rectangle aRect = DrawOS2TitleButton( pData->maHelpRect, pData->mnHelpState );
-		if ( pOffset )
-			aRect.Move( pOffset->X(), pOffset->Y() );
-		ImplDrawBrdWinSymbol( pDev, aRect, SYMBOL_HELP );
-	}
-
-	if ( ((nDrawFlags & BORDERWINDOW_DRAW_PIN) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-		 !pData->maPinRect.IsEmpty() )
-	{
-		Image aImage;
-		ImplGetPinImage( pData->mnPinState, pBorderWindow->mbPined, aImage );
-		Size  aImageSize = aImage.GetSizePixel();
-		long  nRectHeight = pData->maPinRect.GetHeight();
-        Point aPos = pData->maPinRect.TopLeft();
-        if( pOffset )
-            aPos += *pOffset;
-		if ( nRectHeight < aImageSize.Height() )
-		{
-			pDev->DrawImage( aPos,
-							 Size( aImageSize.Width(), nRectHeight ),
-							 aImage );
-		}
-		else
-		{
-			pDev->DrawImage( Point( aPos.X(),
-									aPos.Y()+(nRectHeight-aImageSize.Height())/2 ),
-							 aImage );
-		}
-	}
-}
-
-// -----------------------------------------------------------------------
-
-Rectangle ImplOS2BorderWindowView::DrawOS2TitleButton( const Rectangle& rRect, USHORT )
-{
-	OutputDevice*			pDev = maFrameData.mpOutDev;
-	const StyleSettings&	rStyleSettings = pDev->GetSettings().GetStyleSettings();
-	Rectangle				aRect = rRect;
-
-	pDev->SetLineColor();
-	pDev->SetFillColor( rStyleSettings.GetFaceColor() );
-	pDev->DrawRect( aRect );
-
-	long nExtraWidth  = ((aRect.GetWidth()*150)+500)/1000;
-	long nExtraHeight = ((aRect.GetHeight()*150)+500)/1000;
-	if ( !nExtraWidth )
-		nExtraWidth = 1;
-	if ( !nExtraHeight )
-		nExtraHeight = 1;
-	aRect.Left()	+= nExtraWidth;
-	aRect.Right()	-= nExtraWidth;
-	aRect.Top() 	+= nExtraHeight;
-	aRect.Bottom()	-= nExtraHeight;
-	return aRect;
-}
-
-// =======================================================================
-
-// ---------------------------
-// - ImplUnxBorderWindowView -
-// ---------------------------
-
-class ImplUnxBorderWindowView : public ImplBorderWindowView
-{
-	ImplBorderFrameData 	maFrameData;
-
-public:
-							ImplUnxBorderWindowView( ImplBorderWindow* pBorderWindow );
-							~ImplUnxBorderWindowView();
-
-	virtual BOOL			MouseMove( const MouseEvent& rMEvt );
-	virtual BOOL			MouseButtonDown( const MouseEvent& rMEvt );
-	virtual BOOL			Tracking( const TrackingEvent& rTEvt );
-	virtual USHORT			RequestHelp( const Point& rPos, Rectangle& rHelpRect );
-
-	virtual void			Init( OutputDevice* pDev, long nWidth, long nHeight );
-	virtual void			GetBorder( long& rLeftBorder, long& rTopBorder,
-									   long& rRightBorder, long& rBottomBorder ) const;
-	virtual long			CalcTitleWidth() const;
-	virtual void			DrawWindow( USHORT nDrawFlags, OutputDevice* pOutDev, const Point* pOffset );
-
-	Rectangle				DrawUnxTitleButton( const Rectangle& rRect, USHORT nStyle );
-};
-
-// =======================================================================
-
-ImplUnxBorderWindowView::ImplUnxBorderWindowView( ImplBorderWindow* pBorderWindow )
-{
-	maFrameData.mpBorderWindow	= pBorderWindow;
-	maFrameData.mbDragFull		= FALSE;
-	maFrameData.mnHitTest		= 0;
-	maFrameData.mnPinState		= 0;
-	maFrameData.mnCloseState	= 0;
-	maFrameData.mnRollState 	= 0;
-	maFrameData.mnDockState 	= 0;
-	maFrameData.mnHideState 	= 0;
-	maFrameData.mnHelpState 	= 0;
-}
-
-// -----------------------------------------------------------------------
-
-ImplUnxBorderWindowView::~ImplUnxBorderWindowView()
-{
-}
-
-// -----------------------------------------------------------------------
-
-BOOL ImplUnxBorderWindowView::MouseMove( const MouseEvent& rMEvt )
-{
-	return ImplMouseMove( &maFrameData, rMEvt );
-}
-
-// -----------------------------------------------------------------------
-
-BOOL ImplUnxBorderWindowView::MouseButtonDown( const MouseEvent& rMEvt )
-{
-	return ImplMouseButtonDown( &maFrameData, rMEvt );
-}
-
-// -----------------------------------------------------------------------
-
-BOOL ImplUnxBorderWindowView::Tracking( const TrackingEvent& rTEvt )
-{
-	return ImplTracking( &maFrameData, rTEvt );
-}
-
-// -----------------------------------------------------------------------
-
-USHORT ImplUnxBorderWindowView::RequestHelp( const Point& rPos, Rectangle& rHelpRect )
-{
-	return ImplRequestHelp( &maFrameData, rPos, rHelpRect );
-}
-
-// -----------------------------------------------------------------------
-
-void ImplUnxBorderWindowView::Init( OutputDevice* pDev, long nWidth, long nHeight )
-{
-	ImplBorderFrameData*	pData = &maFrameData;
-	ImplBorderWindow*		pBorderWindow = maFrameData.mpBorderWindow;
-	const StyleSettings&	rStyleSettings = pDev->GetSettings().GetStyleSettings();
-	DecorationView			aDecoView( pDev );
-	Rectangle				aRect( 0, 0, 10, 10 );
-	Rectangle				aCalcRect = aDecoView.DrawFrame( aRect, FRAME_DRAW_DOUBLEOUT | FRAME_DRAW_NODRAW );
-
-	pData->mpOutDev 		= pDev;
-	pData->mnWidth			= nWidth;
-	pData->mnHeight 		= nHeight;
-
-	pData->mnTitleType		= pBorderWindow->mnTitleType;
-	pData->mbFloatWindow	= pBorderWindow->mbFloatWindow;
-
-	if ( !(pBorderWindow->GetStyle() & WB_MOVEABLE) ||
-		 (pData->mnTitleType == BORDERWINDOW_TITLE_NONE) )
-		pData->mnBorderSize = 0;
-	else if ( pData->mnTitleType == BORDERWINDOW_TITLE_TEAROFF )
-		pData->mnBorderSize = 0;
-	else
-	{
-		pData->mnBorderSize = rStyleSettings.GetBorderSize();
-		if ( pData->mnBorderSize < 3 )
-			pData->mnBorderSize = 3;
-		aCalcRect = aRect;
-	}
-	pData->mnLeftBorder 	= aCalcRect.Left();
-	pData->mnTopBorder		= aCalcRect.Top();
-	pData->mnRightBorder	= aRect.Right()-aCalcRect.Right();
-	pData->mnBottomBorder	= aRect.Bottom()-aCalcRect.Bottom();
-	pData->mnLeftBorder    += pData->mnBorderSize;
-	pData->mnTopBorder	   += pData->mnBorderSize;
-	pData->mnRightBorder   += pData->mnBorderSize;
-	pData->mnBottomBorder  += pData->mnBorderSize;
-	pData->mnNoTitleTop 	= pData->mnTopBorder;
-
-	ImplInitTitle( &maFrameData );
-	if ( pData->mnTitleHeight )
-	{
-		pData->maTitleRect.Left()	 = pData->mnLeftBorder;
-		pData->maTitleRect.Right()	 = nWidth-pData->mnRightBorder-1;
-		pData->maTitleRect.Top()	 = pData->mnTopBorder;
-		pData->maTitleRect.Bottom()  = pData->maTitleRect.Top() + pData->mnTitleHeight - 1;
-
-		if ( pData->mnTitleType & (BORDERWINDOW_TITLE_NORMAL | BORDERWINDOW_TITLE_SMALL) )
-		{
-			long nLeft			= pData->maTitleRect.Left();
-			long nRight 		= pData->maTitleRect.Right();
-			long nItemTop		= pData->maTitleRect.Top();
-			long nItemBottom	= pData->maTitleRect.Bottom();
-
-			if ( pBorderWindow->GetStyle() & WB_CLOSEABLE )
-			{
-				pData->maCloseRect.Top()	= nItemTop;
-				pData->maCloseRect.Bottom() = nItemBottom;
-				pData->maCloseRect.Left()	= nLeft;
-				pData->maCloseRect.Right()	= nLeft + pData->maCloseRect.GetHeight();
-				nLeft += pData->maCloseRect.GetWidth() + 2;
-			}
-
-			if ( pBorderWindow->GetStyle() & WB_PINABLE )
-			{
-				Image aImage;
-				ImplGetPinImage( 0, 0, aImage );
-				pData->maPinRect.Top()	  = nItemTop;
-				pData->maPinRect.Bottom() = nItemBottom;
-				pData->maPinRect.Left()   = nLeft;
-				pData->maPinRect.Right()  = pData->maPinRect.Left() + aImage.GetSizePixel().Width();
-				nLeft += pData->maPinRect.GetWidth();
-			}
-
-			if ( pBorderWindow->mbDockBtn )
-			{
-				pData->maDockRect.Top()    = nItemTop;
-				pData->maDockRect.Bottom() = nItemBottom;
-				pData->maDockRect.Right()  = nRight;
-				pData->maDockRect.Left()   = pData->maDockRect.Right()-pData->maDockRect.GetHeight()+1;
-				nRight -= pData->maDockRect.GetWidth();
-			}
-
-			if ( pBorderWindow->mbHideBtn )
-			{
-				pData->maHideRect.Top()    = nItemTop;
-				pData->maHideRect.Bottom() = nItemBottom;
-				pData->maHideRect.Right()  = nRight;
-				pData->maHideRect.Left()   = pData->maHideRect.Right()-pData->maHideRect.GetHeight()+1;
-				nRight -= pData->maHideRect.GetWidth();
-			}
-
-			if ( pBorderWindow->GetStyle() & WB_ROLLABLE )
-			{
-				pData->maRollRect.Top()    = nItemTop;
-				pData->maRollRect.Bottom() = nItemBottom;
-				pData->maRollRect.Right()  = nRight;
-				pData->maRollRect.Left()   = pData->maRollRect.Right()-pData->maRollRect.GetHeight()+1;
-				nRight -= pData->maRollRect.GetWidth();
-			}
-
-			if ( pBorderWindow->mbHelpBtn )
-			{
-				pData->maHelpRect.Top()    = nItemTop;
-				pData->maHelpRect.Bottom() = nItemBottom;
-				pData->maHelpRect.Right()  = nRight;
-				pData->maHelpRect.Left()   = pData->maHelpRect.Right()-pData->maHelpRect.GetHeight()+1;
-				nRight -= pData->maHelpRect.GetWidth();
-			}
-		}
-		else
-		{
-			pData->maPinRect.SetEmpty();
-			pData->maCloseRect.SetEmpty();
-			pData->maDockRect.SetEmpty();
-			pData->maHideRect.SetEmpty();
-			pData->maRollRect.SetEmpty();
-			pData->maHelpRect.SetEmpty();
-		}
-
-		pData->mnTopBorder += pData->mnTitleHeight;
-	}
-	else
-	{
-		pData->maTitleRect.SetEmpty();
-		pData->maPinRect.SetEmpty();
-		pData->maCloseRect.SetEmpty();
-		pData->maDockRect.SetEmpty();
-		pData->maHideRect.SetEmpty();
-		pData->maRollRect.SetEmpty();
-		pData->maHelpRect.SetEmpty();
-	}
-}
-
-// -----------------------------------------------------------------------
-
-void ImplUnxBorderWindowView::GetBorder( long& rLeftBorder, long& rTopBorder,
-										 long& rRightBorder, long& rBottomBorder ) const
-{
-	rLeftBorder 	= maFrameData.mnLeftBorder;
-	rTopBorder		= maFrameData.mnTopBorder;
-	rRightBorder	= maFrameData.mnRightBorder;
-	rBottomBorder	= maFrameData.mnBottomBorder;
-}
-
-// -----------------------------------------------------------------------
-
-long ImplUnxBorderWindowView::CalcTitleWidth() const
-{
-	return ImplCalcTitleWidth( &maFrameData );
-}
-
-// -----------------------------------------------------------------------
-
-void ImplUnxBorderWindowView::DrawWindow( USHORT nDrawFlags, OutputDevice* pOutDev, const Point* pOffset )
-{
-	ImplBorderFrameData*	pData = &maFrameData;
-	OutputDevice*			pDev = pOutDev ? pOutDev : pData->mpOutDev;
-	ImplBorderWindow*		pBorderWindow = pData->mpBorderWindow;
-	Point					aTmpPoint( pOffset ? *pOffset : Point() );
-	Rectangle				aInRect( aTmpPoint, Size( pData->mnWidth, pData->mnHeight ) );
-	const StyleSettings&	rStyleSettings = pDev->GetSettings().GetStyleSettings();
-	DecorationView			aDecoView( pDev );
-	USHORT					nStyle;
-	BOOL					bActive = pBorderWindow->IsDisplayActive();
-
-	// Color-Management for 3D-like Border
-	Color aLineColor;
-	Color aFillColor;
-	Color aLightColor;
-	Color aDarkColor;
-	Color aTextColor;
-	if ( bActive )
-	{
-		aLineColor = rStyleSettings.GetActiveBorderColor();
-		aFillColor = rStyleSettings.GetActiveColor();
-		aTextColor = rStyleSettings.GetActiveTextColor();
-	}
-	else
-	{
-		aLineColor = rStyleSettings.GetDeactiveBorderColor();
-		aFillColor = rStyleSettings.GetDeactiveColor();
-		aTextColor = rStyleSettings.GetDeactiveTextColor();
-	}
-	aLightColor = aLineColor;
-	aDarkColor	= aLineColor;
-	aLightColor.IncreaseLuminance( 64 );
-	aDarkColor.DecreaseLuminance(  64 );
-
-	// Draw Frame
-	long nBorderSize = pData->mnBorderSize;
-	if ( !nBorderSize )
-	{
-		if ( nDrawFlags & BORDERWINDOW_DRAW_FRAME )
-			nStyle = 0;
-		else
-			nStyle = FRAME_DRAW_NODRAW;
-		aInRect = aDecoView.DrawFrame( aInRect, FRAME_DRAW_DOUBLEOUT | nStyle );
-	}
-	else
-	{
-		// Draw Border
-		if ( (nDrawFlags & BORDERWINDOW_DRAW_BORDER) && nBorderSize )
-		{
-			// Geometry Presettings
-			long	nOffset = 0;
-			long	nEffBorderSize;
-			long	nLeft	= aInRect.Left();
-			long	nRight	= aInRect.Right();
-			long	nTop	= aInRect.Top();
-			long	nBottom = aInRect.Bottom();
-
-			nEffBorderSize = nBorderSize > 2 ? nBorderSize - 2 : 1;
-
-			// outer border
-			pDev->SetLineColor( aLightColor );
-			pDev->DrawLine( Point( nLeft,  nTop    ), Point( nLeft,  nBottom ) );
-			pDev->DrawLine( Point( nLeft,  nTop    ), Point( nRight, nTop	 ) );
-
-			pDev->SetLineColor( aDarkColor );
-			nTop++; nLeft++;
-			pDev->DrawLine( Point( nRight, nTop    ), Point( nRight, nBottom ) );
-			pDev->DrawLine( Point( nLeft,  nBottom ), Point( nRight, nBottom ) );
-
-			// middle border
-			pDev->SetLineColor();
-			pDev->SetFillColor( aLineColor );
-			nRight--; nBottom--;
-			pDev->DrawRect( Rectangle( Point( nLeft, nTop ),
-									   Size(  nRight - nLeft, nEffBorderSize ) ) );
-			pDev->DrawRect( Rectangle( Point( nLeft, nTop ),
-									   Size(  nEffBorderSize, nBottom - nTop ) ) );
-			nRight	-= nEffBorderSize;
-			nBottom -= nEffBorderSize;
-			pDev->DrawRect( Rectangle( Point( nRight + 1, nTop ),
-									   Size(  nEffBorderSize, nBottom - nTop + 1) ) );
-			pDev->DrawRect( Rectangle( Point( nLeft, nBottom + 1),
-									   Size(  nRight - nLeft + 1, nEffBorderSize ) ) );
-
-			// inner Border
-			pDev->SetLineColor( aDarkColor );
-			nTop += nEffBorderSize; nLeft += nEffBorderSize;
-			pDev->DrawLine( Point( nLeft,  nTop    ), Point( nLeft,  nBottom ) );
-			pDev->DrawLine( Point( nLeft,  nTop    ), Point( nRight, nTop	 ) );
-
-			pDev->SetLineColor( aLightColor );
-			nTop++; nLeft++;
-			pDev->DrawLine( Point( nRight, nTop    ), Point( nRight, nBottom ) );
-			pDev->DrawLine( Point( nLeft,  nBottom ), Point( nRight, nBottom ) );
-
-			// edge intersections
-			if ( pBorderWindow->GetStyle() & WB_SIZEABLE )
-			{
-				nLeft	= aInRect.Left();
-				nRight	= aInRect.Right();
-				nTop	= aInRect.Top();
-				nBottom = aInRect.Bottom();
-
-				if ( !pData->maTitleRect.IsEmpty() )
-					nOffset = pData->maTitleRect.GetHeight() + nEffBorderSize + 2;
-
-				pDev->SetLineColor( aDarkColor );
-				pDev->DrawLine( Point( nLeft + 1,			   nTop + nOffset ),
-								Point( nLeft + nEffBorderSize, nTop + nOffset ));
-				pDev->DrawLine( Point( nLeft + nOffset, 	   nTop + 1 	  ),
-								Point( nLeft + nOffset, 	   nTop + nEffBorderSize));
-				pDev->DrawLine( Point( nRight - 1,			   nTop + nOffset ),
-								Point( nRight - nEffBorderSize,nTop + nOffset ));
-				pDev->DrawLine( Point( nRight - nOffset,	   nTop + 1 	  ),
-								Point( nRight - nOffset,	   nTop + nEffBorderSize));
-
-				pDev->DrawLine( Point( nLeft + 1,			   nBottom - nOffset ),
-								Point( nLeft + nEffBorderSize, nBottom - nOffset ));
-				pDev->DrawLine( Point( nLeft + nOffset, 	   nBottom - 1		 ),
-								Point( nLeft + nOffset, 	   nBottom - nEffBorderSize));
-				pDev->DrawLine( Point( nRight - 1,			   nBottom - nOffset ),
-								Point( nRight - nEffBorderSize,nBottom - nOffset ));
-				pDev->DrawLine( Point( nRight - nOffset,	   nBottom - 1		 ),
-								Point( nRight - nOffset,	   nBottom - nEffBorderSize));
-				pDev->SetLineColor( aLightColor );
-				nEffBorderSize = nBorderSize > 1 ? nBorderSize - 1 : 1;
-				nOffset += 1;
-
-				pDev->DrawLine( Point( nLeft,				   nTop + nOffset	 ),
-								Point( nLeft + nEffBorderSize, nTop + nOffset	 ));
-				pDev->DrawLine( Point( nLeft + nOffset, 	   nTop 			 ),
-								Point( nLeft + nOffset, 	   nTop + nEffBorderSize));
-				pDev->DrawLine( Point( nRight,				   nTop + nOffset	 ),
-								Point( nRight - nEffBorderSize,nTop + nOffset	 ));
-				pDev->DrawLine( Point( nLeft + nOffset, 	   nBottom			 ),
-								Point( nLeft + nOffset, 	   nBottom - nEffBorderSize));
-				nOffset -= 2;
-				pDev->DrawLine( Point( nRight - nOffset,	   nTop 			 ),
-								Point( nRight - nOffset,	   nTop + nEffBorderSize));
-				pDev->DrawLine( Point( nLeft,				   nBottom - nOffset ),
-								Point( nLeft + nEffBorderSize, nBottom - nOffset ));
-				pDev->DrawLine( Point( nRight,				   nBottom - nOffset ),
-								Point( nRight - nEffBorderSize,nBottom - nOffset ));
-				pDev->DrawLine( Point( nRight - nOffset,	   nBottom			 ),
-								Point( nRight - nOffset,	   nBottom - nEffBorderSize));
-			}
-
-			// Reset Linecolor
-			pDev->SetLineColor();
-		}
-	}
-
-	// Draw Title
-	if ( (nDrawFlags & BORDERWINDOW_DRAW_TITLE) && !pData->maTitleRect.IsEmpty() )
-	{
-		// Title Rect
-		aInRect = pData->maTitleRect;
-
-        if( pOffset )
-            aInRect.Move( pOffset->X(), pOffset->Y() );
-
-		pDev->SetFillColor( aFillColor );
-		pDev->SetTextColor( aTextColor );
-		pDev->DrawRect( aInRect );
-
-		// Title Rect Decoration
-		pDev->SetLineColor( aDarkColor );
-		pDev->DrawLine( Point( aInRect.Left(),	aInRect.Bottom() ),
-						Point( aInRect.Right(), aInRect.Bottom() ) );
-		pDev->DrawLine( Point( aInRect.Right(), aInRect.Top()	 ),
-						Point( aInRect.Right(), aInRect.Bottom() ) );
-		pDev->SetLineColor( aLightColor );
-		pDev->DrawLine( Point( aInRect.Left(),	aInRect.Top()	 ),
-						Point( aInRect.Right(), aInRect.Top()	 ) );
-		pDev->DrawLine( Point( aInRect.Left(),	aInRect.Top() ),
-						Point( aInRect.Left(),	aInRect.Bottom() ) );
-
-		long nLeft;
-		if ( !pData->maCloseRect.IsEmpty() )
-        {
-			nLeft = pData->maCloseRect.Right()+1;
-            if( pOffset )
-                nLeft += pOffset->X();
-        }
-		else
-			nLeft = aInRect.Left()+1;
-
-		// Title Text
-		if ( pData->mnTitleType != BORDERWINDOW_TITLE_TEAROFF )
-		{
-            long nXOff = pOffset ? pOffset->X() : 0;
-			if ( !pData->maPinRect.IsEmpty() )
-				aInRect.Left() = pData->maPinRect.Right()+1 + nXOff;
-			else if ( !pData->maCloseRect.IsEmpty() )
-				aInRect.Left() = pData->maCloseRect.Right()+1 + nXOff;
-
-			if ( !pData->maHelpRect.IsEmpty() )
-				aInRect.Right() = pData->maHelpRect.Left()-1 + nXOff;
-			else if ( !pData->maRollRect.IsEmpty() )
-				aInRect.Right() = pData->maRollRect.Left()-1 + nXOff;
-			else if ( !pData->maHideRect.IsEmpty() )
-				aInRect.Right() = pData->maHideRect.Left()-1 + nXOff;
-			else if ( !pData->maDockRect.IsEmpty() )
-				aInRect.Right() = pData->maDockRect.Left()-1 + nXOff;
-
-			pDev->DrawText( aInRect, pBorderWindow->GetText(),
-							TEXT_DRAW_CENTER | TEXT_DRAW_VCENTER |
-							TEXT_DRAW_ENDELLIPSIS | TEXT_DRAW_CLIP );
-		}
-
-		// more Title Rect Decoration
-		pDev->SetLineColor( aLightColor );
-		pDev->DrawLine( Point( nLeft, aInRect.Bottom() ),
-						Point( nLeft, aInRect.Top()    ));
-		pDev->SetLineColor( aDarkColor );
-		pDev->DrawLine( Point( aInRect.Right(), aInRect.Top() ),
-						Point( aInRect.Right(), aInRect.Bottom() ) );
-	}
-
-	// Draw the buttons
-	if ( ((nDrawFlags & BORDERWINDOW_DRAW_CLOSE) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-		 !pData->maCloseRect.IsEmpty() )
-	{
-		Rectangle aInCloseRect = DrawUnxTitleButton( pData->maCloseRect,
-													 pData->mnCloseState );
-        if( pOffset )
-            aInCloseRect.Move( pOffset->X(), pOffset->Y() );
-		aDecoView.DrawSymbol( aInCloseRect, SYMBOL_CLOSE, aTextColor, 0 );
-	}
-
-	if ( ((nDrawFlags & BORDERWINDOW_DRAW_DOCK) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-		 !pData->maDockRect.IsEmpty() )
-	{
-		Rectangle aInDockRect = DrawUnxTitleButton( pData->maDockRect,
-													pData->mnDockState );
-        if( pOffset )
-            aInDockRect.Move( pOffset->X(), pOffset->Y() );
-		aDecoView.DrawSymbol( aInDockRect, SYMBOL_DOCK, aTextColor, 0 );
-	}
-
-	if ( ((nDrawFlags & BORDERWINDOW_DRAW_HIDE) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-		 !pData->maHideRect.IsEmpty() )
-	{
-		Rectangle aInHideRect = DrawUnxTitleButton( pData->maHideRect,
-													pData->mnHideState );
-        if( pOffset )
-            aInHideRect.Move( pOffset->X(), pOffset->Y() );
-		aDecoView.DrawSymbol( aInHideRect, SYMBOL_HIDE, aTextColor, 0 );
-	}
-
-	if ( ((nDrawFlags & BORDERWINDOW_DRAW_ROLL) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-		 !pData->maRollRect.IsEmpty() )
-	{
-		Rectangle aInRollRect = DrawUnxTitleButton( pData->maRollRect,
-													pData->mnRollState );
-		SymbolType eType;
-		if ( pBorderWindow->mbRollUp )
-			eType = SYMBOL_ROLLDOWN;
-		else
-			eType = SYMBOL_ROLLUP;
-        if( pOffset )
-            aInRollRect.Move( pOffset->X(), pOffset->Y() );
-		aDecoView.DrawSymbol( aInRollRect, eType, aTextColor, 0 );
-	}
-
-	if ( ((nDrawFlags & BORDERWINDOW_DRAW_HELP) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-		 !pData->maHelpRect.IsEmpty() )
-	{
-		Rectangle aInHelpRect = DrawUnxTitleButton( pData->maHelpRect,
-													pData->mnHelpState );
-        if( pOffset )
-            aInHelpRect.Move( pOffset->X(), pOffset->Y() );
-		aDecoView.DrawSymbol( aInHelpRect, SYMBOL_HELP, aTextColor, 0 );
-	}
-
-	if ( ((nDrawFlags & BORDERWINDOW_DRAW_PIN) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-		 !pData->maPinRect.IsEmpty() )
-	{
-		Image aImage;
-		ImplGetPinImage( pData->mnPinState, pBorderWindow->mbPined, aImage );
-		Size  aImageSize = aImage.GetSizePixel();
-		long  nRectHeight = pData->maPinRect.GetHeight();
-        Point aPos( pData->maPinRect.TopLeft() );
-        if( pOffset )
-            aPos += *pOffset;
-		if ( nRectHeight < aImageSize.Height() )
-		{
-			pDev->DrawImage( aPos,
-							 Size( aImageSize.Width(), nRectHeight ),
-							 aImage );
-		}
-		else
-		{
-			pDev->DrawImage( Point( aPos.X(),
-									aPos.Y()+(nRectHeight-aImageSize.Height())/2 ),
-							 aImage );
-		}
-	}
-}
-
-// -----------------------------------------------------------------------
-
-Rectangle ImplUnxBorderWindowView::DrawUnxTitleButton( const Rectangle& rRect, USHORT nStyle )
-{
-	Rectangle				aFillRect = rRect;
-	OutputDevice*			pDev = maFrameData.mpOutDev;
-	const StyleSettings&	rStyleSettings = pDev->GetSettings().GetStyleSettings();
-	ImplBorderFrameData*	pData = &maFrameData;
-	ImplBorderWindow*		pBorderWindow = pData->mpBorderWindow;
-	BOOL					bActive = pBorderWindow->IsDisplayActive();
-
-	// Color-Management for 3D-like Border
-	Color aLineColor;
-	Color aLightColor;
-	Color aDarkColor;
-	if ( bActive )
-		aLineColor = rStyleSettings.GetActiveBorderColor();
-	else
-		aLineColor = rStyleSettings.GetDeactiveBorderColor();
-	aLightColor = aLineColor;
-	aDarkColor	= aLineColor;
-	aLightColor.IncreaseLuminance( 64 );
-	aDarkColor.DecreaseLuminance(  64 );
-
-	// Draw Button
-	if ( !(nStyle & BUTTON_DRAW_NODRAW) )
-	{
-		// left and upper button-border
-		if ( nStyle & (BUTTON_DRAW_PRESSED | BUTTON_DRAW_CHECKED) )
-			pDev->SetLineColor( aDarkColor );
-		else
-			pDev->SetLineColor( aLightColor );
-		pDev->DrawLine( Point( aFillRect.Left(),  aFillRect.Top()	 ),
-						Point( aFillRect.Right(), aFillRect.Top()	 ) );
-		pDev->DrawLine( Point( aFillRect.Left(),  aFillRect.Top()	 ),
-						Point( aFillRect.Left(),  aFillRect.Bottom() ) );
-
-		aFillRect.Left()++;
-		aFillRect.Top()++;
-
-		// right and bottom button-border
-		if ( nStyle & (BUTTON_DRAW_PRESSED | BUTTON_DRAW_CHECKED) )
-			pDev->SetLineColor( aLightColor );
-		else
-			pDev->SetLineColor( aDarkColor );
-		pDev->DrawLine( Point( aFillRect.Right(), aFillRect.Top()	 ),
-						Point( aFillRect.Right(), aFillRect.Bottom()	) );
-		pDev->DrawLine( Point( aFillRect.Left(),  aFillRect.Bottom()	),
-						Point( aFillRect.Right(), aFillRect.Bottom() ) );
-
-		aFillRect.Right()--;
-		aFillRect.Bottom()--;
-
-		// button area
-		pDev->SetFillColor( aLineColor );
-		pDev->SetLineColor();
-
-		pDev->DrawRect( Rectangle( aFillRect.Left(),  aFillRect.Top(),
-								   aFillRect.Right(), aFillRect.Bottom() ) );
-	}
-
-	aFillRect.Left()	+= 3;
-	aFillRect.Top() 	+= 3;
-	aFillRect.Right()	-= 2;
-	aFillRect.Bottom()	-= 2;
-	return aFillRect;
-}
-
-// =======================================================================
-
-// ---------------------------
-// - ImplMacBorderWindowView -
-// ---------------------------
-
-class ImplMacBorderWindowView : public ImplBorderWindowView
-{
-	ImplBorderFrameData 	maFrameData;
-	VirtualDevice			maVirDev;
-	BOOL					mbPressed;
-
-public:
-							ImplMacBorderWindowView( ImplBorderWindow* pBorderWindow );
-							~ImplMacBorderWindowView();
-
-	virtual BOOL			MouseMove( const MouseEvent& rMEvt );
-	virtual BOOL			MouseButtonDown( const MouseEvent& rMEvt );
-	virtual BOOL			Tracking( const TrackingEvent& rTEvt );
-	virtual USHORT			RequestHelp( const Point& rPos, Rectangle& rHelpRect );
-
-	virtual void			Init( OutputDevice* pDev, long nWidth, long nHeight );
-	virtual void			GetBorder( long& rLeftBorder, long& rTopBorder,
-									   long& rRightBorder, long& rBottomBorder ) const;
-	virtual long			CalcTitleWidth() const;
-	virtual void			DrawWindow( USHORT nDrawFlags, OutputDevice* pOutDev, const Point* pOffset );
-
-	Rectangle				DrawMacTitleButton( OutputDevice* pDev, const Rectangle& rRect, USHORT nStyle );
-};
-
-// =======================================================================
-
-ImplMacBorderWindowView::ImplMacBorderWindowView( ImplBorderWindow* pBorderWindow )
-{
-	maFrameData.mpBorderWindow	= pBorderWindow;
-	maFrameData.mbDragFull		= FALSE;
-	maFrameData.mnHitTest		= 0;
-	maFrameData.mnPinState		= 0;
-	maFrameData.mnCloseState	= 0;
-	maFrameData.mnRollState 	= 0;
-	maFrameData.mnDockState 	= 0;
-	maFrameData.mnHideState 	= 0;
-	maFrameData.mnHelpState 	= 0;
-
-	mbPressed					= FALSE;
-}
-
-// -----------------------------------------------------------------------
-
-ImplMacBorderWindowView::~ImplMacBorderWindowView()
-{
-}
-
-// -----------------------------------------------------------------------
-
-BOOL ImplMacBorderWindowView::MouseMove( const MouseEvent& rMEvt )
-{
-	return ImplMouseMove( &maFrameData, rMEvt );
-}
-
-// -----------------------------------------------------------------------
-
-BOOL ImplMacBorderWindowView::MouseButtonDown( const MouseEvent& rMEvt )
-{
-	return ImplMouseButtonDown( &maFrameData, rMEvt );
-}
-
-// -----------------------------------------------------------------------
-
-BOOL ImplMacBorderWindowView::Tracking( const TrackingEvent& rTEvt )
-{
-	return ImplTracking( &maFrameData, rTEvt );
-}
-
-// -----------------------------------------------------------------------
-
-USHORT ImplMacBorderWindowView::RequestHelp( const Point& rPos, Rectangle& rHelpRect )
-{
-	return ImplRequestHelp( &maFrameData, rPos, rHelpRect );
-}
-
-// -----------------------------------------------------------------------
-
-void ImplMacBorderWindowView::Init( OutputDevice* pDev, long nWidth, long nHeight )
-{
-	ImplBorderFrameData*	pData = &maFrameData;
-	ImplBorderWindow*		pBorderWindow = maFrameData.mpBorderWindow;
-	const StyleSettings&	rStyleSettings = pDev->GetSettings().GetStyleSettings();
-
-	pData->mpOutDev 		= pDev;
-	pData->mnWidth			= nWidth;
-	pData->mnHeight 		= nHeight;
-
-	pData->mnTitleType		= pBorderWindow->mnTitleType;
-	pData->mbFloatWindow	= pBorderWindow->mbFloatWindow;
-
-	if ( !(pBorderWindow->GetStyle() & WB_MOVEABLE) || (pData->mnTitleType == BORDERWINDOW_TITLE_NONE) )
-		pData->mnBorderSize = 0;
-	else if ( pData->mnTitleType == BORDERWINDOW_TITLE_TEAROFF )
-		pData->mnBorderSize = 1;
-	else
-		pData->mnBorderSize = rStyleSettings.GetBorderSize();
-	pData->mnLeftBorder 	= 2;
-	pData->mnTopBorder		= 2;
-	pData->mnRightBorder	= 2;
-	pData->mnBottomBorder	= 2;
-	pData->mnLeftBorder    += pData->mnBorderSize;
-	pData->mnTopBorder	   += pData->mnBorderSize;
-	pData->mnRightBorder   += pData->mnBorderSize;
-	pData->mnBottomBorder  += pData->mnBorderSize;
-	pData->mnNoTitleTop 	= pData->mnTopBorder;
-	pData->mnTitleOff		= 0;
-
-	ImplInitTitle( &maFrameData );
-	if ( pData->mnTitleHeight )
-	{
-		if ( (pData->mnTitleType & (BORDERWINDOW_TITLE_NORMAL | BORDERWINDOW_TITLE_SMALL)) &&
-			 pData->mnBorderSize )
-			pData->mnTitleOff = 3;	// 3 damit Hoehe auf dem MAC stimmt, ansonsten waere 2 richtig
-		pData->mnTitleHeight		-= pData->mnTitleOff;
-		pData->maTitleRect.Left()	 = pData->mnLeftBorder;
-		pData->maTitleRect.Right()	 = nWidth-pData->mnRightBorder-1;
-		pData->maTitleRect.Top()	 = pData->mnTopBorder;
-		pData->maTitleRect.Bottom()  = pData->maTitleRect.Top()+pData->mnTitleHeight-1;
-
-		if ( pData->mnTitleType & (BORDERWINDOW_TITLE_NORMAL | BORDERWINDOW_TITLE_SMALL) )
-		{
-			long nLeft			= pData->maTitleRect.Left();
-			long nRight 		= pData->maTitleRect.Right();
-			long nItemTop		= pData->maTitleRect.Top();
-			long nItemBottom	= pData->maTitleRect.Bottom();
-
-			if ( pBorderWindow->GetStyle() & WB_CLOSEABLE )
-			{
-				pData->maCloseRect.Top()	= nItemTop;
-				pData->maCloseRect.Bottom() = nItemBottom;
-				pData->maCloseRect.Left()	= nLeft;
-				pData->maCloseRect.Right()	= pData->maCloseRect.Left()+pData->maCloseRect.GetHeight()-1;
-				nLeft += pData->maCloseRect.GetWidth()+3;
-			}
-
-			if ( pBorderWindow->GetStyle() & WB_PINABLE )
-			{
-				Image aImage;
-				ImplGetPinImage( 0, 0, aImage );
-				pData->maPinRect.Top()	  = nItemTop;
-				pData->maPinRect.Bottom() = nItemBottom;
-				pData->maPinRect.Left()   = nLeft;
-				pData->maPinRect.Right()  = pData->maPinRect.Left()+aImage.GetSizePixel().Width();
-				nLeft += pData->maPinRect.GetWidth()+3;
-			}
-
-			if ( pBorderWindow->mbDockBtn )
-			{
-				pData->maDockRect.Top()    = nItemTop;
-				pData->maDockRect.Bottom() = nItemBottom;
-				pData->maDockRect.Right()  = nRight;
-				pData->maDockRect.Left()   = pData->maDockRect.Right()-pData->maDockRect.GetHeight()+1;
-				nRight -= pData->maDockRect.GetWidth()+3;
-			}
-
-			if ( pBorderWindow->mbHideBtn )
-			{
-				pData->maHideRect.Top()    = nItemTop;
-				pData->maHideRect.Bottom() = nItemBottom;
-				pData->maHideRect.Right()  = nRight;
-				pData->maHideRect.Left()   = pData->maHideRect.Right()-pData->maHideRect.GetHeight()+1;
-				nRight -= pData->maHideRect.GetWidth()+3;
-			}
-
-			if ( pBorderWindow->GetStyle() & WB_ROLLABLE )
-			{
-				pData->maRollRect.Top()    = nItemTop;
-				pData->maRollRect.Bottom() = nItemBottom;
-				pData->maRollRect.Right()  = nRight;
-				pData->maRollRect.Left()   = pData->maRollRect.Right()-pData->maRollRect.GetHeight()+1;
-				nRight -= pData->maRollRect.GetWidth()+3;
-			}
-
-			if ( pBorderWindow->mbHelpBtn )
-			{
-				pData->maHelpRect.Top()    = nItemTop;
-				pData->maHelpRect.Bottom() = nItemBottom;
-				pData->maHelpRect.Right()  = nRight;
-				pData->maHelpRect.Left()   = pData->maHelpRect.Right()-pData->maHelpRect.GetHeight()+1;
-				nRight -= pData->maHelpRect.GetWidth()+3;
-			}
-		}
-		else
-		{
-			pData->maCloseRect.SetEmpty();
-			pData->maDockRect.SetEmpty();
-			pData->maHideRect.SetEmpty();
-			pData->maRollRect.SetEmpty();
-			pData->maHelpRect.SetEmpty();
-		}
-
-		pData->mnTopBorder	+= pData->mnTitleHeight;
-
-		// Innerer Border nur, wenn wir auch eine TitleBar haben
-		if ( !pBorderWindow->mbRollUp || pBorderWindow->mnRollHeight )
-		{
-			pData->mnTopBorder		+= 3+pData->mnBorderSize;
-			pData->mnBottomBorder	+= 3;
-		}
-		pData->mnLeftBorder 	+= 3;
-		pData->mnRightBorder	+= 3;
-	}
-	else
-	{
-		pData->maTitleRect.SetEmpty();
-		pData->maPinRect.SetEmpty();
-		pData->maCloseRect.SetEmpty();
-		pData->maDockRect.SetEmpty();
-		pData->maHideRect.SetEmpty();
-		pData->maRollRect.SetEmpty();
-		pData->maHelpRect.SetEmpty();
-	}
-}
-
-// -----------------------------------------------------------------------
-
-void ImplMacBorderWindowView::GetBorder( long& rLeftBorder, long& rTopBorder,
-										 long& rRightBorder, long& rBottomBorder ) const
-{
-	rLeftBorder 	= maFrameData.mnLeftBorder;
-	rTopBorder		= maFrameData.mnTopBorder;
-	rRightBorder	= maFrameData.mnRightBorder;
-	rBottomBorder	= maFrameData.mnBottomBorder;
-}
-
-// -----------------------------------------------------------------------
-
-long ImplMacBorderWindowView::CalcTitleWidth() const
-{
-	return ImplCalcTitleWidth( &maFrameData );
-}
-
-// -----------------------------------------------------------------------
-
-void ImplMacBorderWindowView::DrawWindow( USHORT nDrawFlags, OutputDevice* pOutDev, const Point* pOffset )
-{
-	ImplBorderFrameData*	pData = &maFrameData;
-	OutputDevice*			pDev = pOutDev ? pOutDev : pData->mpOutDev;
-	ImplBorderWindow*		pBorderWindow = pData->mpBorderWindow;
-	Point					aTmpPoint( pOffset ? *pOffset : Point() );
-	Rectangle				aInRect( aTmpPoint, Size( pData->mnWidth, pData->mnHeight ) );
-	const StyleSettings&	rStyleSettings = pDev->GetSettings().GetStyleSettings();
-	BOOL					bActive = pBorderWindow->IsDisplayActive();
-
-	// DrawFrame
-	pBorderWindow->SetFillColor();
-	if ( nDrawFlags & BORDERWINDOW_DRAW_FRAME )
-	{
-		if ( bActive )
-			pDev->SetLineColor( rStyleSettings.GetDarkShadowColor() );
-		else
-			pDev->SetLineColor( rStyleSettings.GetShadowColor() );
-		pDev->DrawRect( aInRect );
-		aInRect.Left()++;
-		aInRect.Top()++;
-		aInRect.Right()--;
-		aInRect.Bottom()--;
-		if ( bActive )
-		{
-			pDev->SetLineColor( rStyleSettings.GetLightColor() );
-			pDev->DrawLine( aInRect.TopLeft(), Point( aInRect.Left(), aInRect.Bottom() ) );
-			pDev->DrawLine( aInRect.TopLeft(), Point( aInRect.Right(), aInRect.Top() ) );
-			pDev->SetLineColor( rStyleSettings.GetShadowColor() );
-			pDev->DrawLine( Point( aInRect.Left()+1, aInRect.Bottom() ), aInRect.BottomRight() );
-			pDev->DrawLine( Point( aInRect.Right(), aInRect.Top()+1 ), aInRect.BottomRight() );
-		}
-		else
-		{
-			pDev->SetLineColor( rStyleSettings.GetDeactiveBorderColor() );
-			pDev->DrawRect( aInRect );
-		}
-		aInRect.Left()++;
-		aInRect.Top()++;
-		aInRect.Right()--;
-		aInRect.Bottom()--;
-	}
-	else
-	{
-		aInRect.Left()	 += 2;
-		aInRect.Top()	 += 2;
-		aInRect.Right()  -= 2;
-		aInRect.Bottom() -= 2;
-	}
-
-	pBorderWindow->SetLineColor();
-	long nBorderSize = pData->mnBorderSize;
-	if ( (nDrawFlags & BORDERWINDOW_DRAW_BORDER) && nBorderSize )
-	{
-		if ( bActive )
-			pDev->SetFillColor( rStyleSettings.GetActiveBorderColor() );
-		else
-			pDev->SetFillColor( rStyleSettings.GetDeactiveBorderColor() );
-		pDev->DrawRect( Rectangle( Point( aInRect.Left(), aInRect.Top() ),
-								   Size( aInRect.GetWidth(), nBorderSize ) ) );
-		pDev->DrawRect( Rectangle( Point( aInRect.Left(), aInRect.Top()+nBorderSize ),
-								   Size( nBorderSize, aInRect.GetHeight()-nBorderSize ) ) );
-		pDev->DrawRect( Rectangle( Point( aInRect.Left(), aInRect.Bottom()-nBorderSize+1 ),
-								   Size( aInRect.GetWidth(), nBorderSize ) ) );
-		pDev->DrawRect( Rectangle( Point( aInRect.Right()-nBorderSize+1, aInRect.Top()+nBorderSize ),
-								   Size( nBorderSize, aInRect.GetHeight()-nBorderSize ) ) );
-	}
-	aInRect.Left()	 += nBorderSize;
-	aInRect.Top()	 += nBorderSize;
-	aInRect.Right()  -= nBorderSize;
-	aInRect.Bottom() -= nBorderSize;
-
-	Rectangle	aTitleRect = pData->maTitleRect;
-    if( pOffset )
-        aTitleRect.Move( pOffset->X(), pOffset->Y() );
-	XubString	aText = pBorderWindow->GetText();
-	BOOL		bDrawText = FALSE;
-	if ( (nDrawFlags & BORDERWINDOW_DRAW_TITLE) && !pData->maTitleRect.IsEmpty() )
-	{
-		Rectangle aTextRect;
-		if ( bActive )
-		{
-			pDev->SetFillColor( rStyleSettings.GetActiveColor() );
-			pDev->SetTextColor( rStyleSettings.GetActiveTextColor() );
-		}
-		else
-		{
-			pDev->SetFillColor( rStyleSettings.GetDeactiveColor() );
-			pDev->SetTextColor( rStyleSettings.GetDeactiveTextColor() );
-		}
-		pDev->DrawRect( aTitleRect );
-
-		if ( pData->mnTitleType != BORDERWINDOW_TITLE_TEAROFF )
-		{
-            long nXOff = pOffset ? pOffset->X() : 0;
-			if ( !pData->maPinRect.IsEmpty() )
-				aTitleRect.Left() = pData->maPinRect.Right()+3 + nXOff;
-			else if ( !pData->maCloseRect.IsEmpty() )
-				aTitleRect.Left() = pData->maCloseRect.Right()+3 + nXOff;
-
-			if ( !pData->maHelpRect.IsEmpty() )
-				aTitleRect.Right() = pData->maHelpRect.Left()-3 + nXOff;
-			else if ( !pData->maHideRect.IsEmpty() )
-				aTitleRect.Right() = pData->maHideRect.Left()-3 + nXOff;
-			else if ( !pData->maDockRect.IsEmpty() )
-				aTitleRect.Right() = pData->maDockRect.Left()-3 + nXOff;
-			else if ( !pData->maRollRect.IsEmpty() )
-				aTitleRect.Right() = pData->maRollRect.Left()-3 + nXOff;
-
-			if ( aText.Len() )
-			{
-				aTextRect = pDev->GetTextRect( aTitleRect, aText,
-											   TEXT_DRAW_CENTER | TEXT_DRAW_VCENTER |
-											   TEXT_DRAW_ENDELLIPSIS );
-				bDrawText = TRUE;
-			}
-		}
-
-		if ( bActive )
-		{
-			long nY 		= aTitleRect.Top();
-			long nYMax		= nY+pData->mnTitleHeight-2+(pData->mnTitleHeight%2);
-			long nX1		= aTitleRect.Left();
-			long nX2;
-			long nX3;
-			long nX4;
-			BOOL bLines;
-			BOOL b2Lines;
-			if ( aTextRect.IsEmpty() )
-			{
-				nX2 	= aTitleRect.Right();
-				bLines	= nX2-2 > nX1;
-				b2Lines = FALSE;
-			}
-			else
-			{
-				aTextRect.Left()  -= 4;
-				aTextRect.Right() += 4;
-				if ( (aTextRect.Left() > aTitleRect.Left()) &&
-					 (aTextRect.Right() < aTitleRect.Right()) )
-				{
-					nX2 	= aTextRect.Left();
-					nX3 	= aTextRect.Right();
-					nX4 	= aTitleRect.Right();
-					bLines	= TRUE;
-					b2Lines = TRUE;
-				}
-				else
-					bLines = FALSE;
-			}
-
-			if ( bLines )
-			{
-				for ( ; nY < nYMax; nY += 2 )
-				{
-					if ( rStyleSettings.GetOptions() & STYLE_OPTION_MONO )
-						pDev->SetLineColor( Color( COL_BLACK ) );
-					else
-						pDev->SetLineColor( rStyleSettings.GetLightColor() );
-					pDev->DrawLine( Point( nX1, nY ), Point( nX2-1, nY ) );
-					if ( b2Lines )
-						pDev->DrawLine( Point( nX3, nY ), Point( nX4-1, nY ) );
-					if ( !(rStyleSettings.GetOptions() & STYLE_OPTION_MONO) )
-					{
-						pDev->SetLineColor( rStyleSettings.GetShadowColor() );
-						pDev->DrawLine( Point( nX1+1, nY+1 ), Point( nX2, nY+1 ) );
-						if ( b2Lines )
-							pDev->DrawLine( Point( nX3+1, nY+1 ), Point( nX4, nY+1 ) );
-					}
-				}
-			}
-		}
-	}
-	aInRect.Top() += pData->mnTitleHeight;
-
-	if ( bActive )
-	{
-		if ( ((nDrawFlags & BORDERWINDOW_DRAW_CLOSE) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-			 !pData->maCloseRect.IsEmpty() )
-        {
-            Rectangle aRect = pData->maCloseRect;
-            if( pOffset )
-                aRect.Move( pOffset->X(), pOffset->Y() );
-			DrawMacTitleButton( pDev, aRect, pData->mnCloseState );
-        }
-
-		if ( ((nDrawFlags & BORDERWINDOW_DRAW_PIN) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-			 !pData->maPinRect.IsEmpty() )
-		{
-			Image aImage;
-			ImplGetPinImage( pData->mnPinState, pBorderWindow->mbPined, aImage );
-			Size  aImageSize = aImage.GetSizePixel();
-			long  nRectHeight = pData->maPinRect.GetHeight();
-            Point aPos( pData->maPinRect.TopLeft() );
-            if( pOffset )
-                aPos += *pOffset;
-			if ( nRectHeight < aImageSize.Height() )
-			{
-				pDev->DrawImage( aPos,
-								 Size( aImageSize.Width(), nRectHeight ),
-								 aImage );
-			}
-			else
-			{
-				pDev->DrawImage( Point( aPos.X(),
-										aPos.Y()+(nRectHeight-aImageSize.Height())/2 ),
-								 aImage );
-			}
-		}
-
-		if ( ((nDrawFlags & BORDERWINDOW_DRAW_DOCK) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-			 !pData->maDockRect.IsEmpty() )
-		{
-            Rectangle aRect = pData->maDockRect;
-            if( pOffset )
-                aRect.Move( pOffset->X(), pOffset->Y() );
-			Rectangle aInDockRect = DrawMacTitleButton( pDev, aRect, pData->mnDockState );
-			pDev->SetLineColor( rStyleSettings.GetDarkShadowColor() );
-			pDev->SetFillColor();
-			aInDockRect.Left()++;
-			aInDockRect.Top()++;
-			aInDockRect.Right()--;
-			aInDockRect.Bottom()--;
-			pDev->DrawRect( aInDockRect );
-		}
-
-		if ( ((nDrawFlags & BORDERWINDOW_DRAW_HIDE) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-			 !pData->maHideRect.IsEmpty() )
-		{
-            Rectangle aRect = pData->maHideRect;
-            if( pOffset )
-                aRect.Move( pOffset->X(), pOffset->Y() );
-			Rectangle aInHideRect = DrawMacTitleButton( pDev, aRect, pData->mnHideState );
-			pDev->SetLineColor( rStyleSettings.GetDarkShadowColor() );
-			pDev->DrawLine( Point( aInHideRect.Left(), aInHideRect.Bottom()-1 ), Point( aInHideRect.Right(), aInHideRect.Bottom()-1 ) );
-			pDev->DrawLine( Point( aInHideRect.Left(), aInHideRect.Bottom() ), Point( aInHideRect.Right(), aInHideRect.Bottom() ) );
-		}
-
-		if ( ((nDrawFlags & BORDERWINDOW_DRAW_ROLL) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-			 !pData->maRollRect.IsEmpty() )
-		{
-            Rectangle aRect = pData->maRollRect;
-            if( pOffset )
-                aRect.Move( pOffset->X(), pOffset->Y() );
-			Rectangle aInRollRect = DrawMacTitleButton( pDev, aRect, pData->mnRollState );
-			pDev->SetLineColor( rStyleSettings.GetDarkShadowColor() );
-			long nY = aInRollRect.Center().Y();
-			pDev->DrawLine( Point( aInRollRect.Left(), nY-1 ), Point( aInRollRect.Right(), nY-1 ) );
-			pDev->DrawLine( Point( aInRollRect.Left(), nY+1 ), Point( aInRollRect.Right(), nY+1 ) );
-		}
-
-		if ( ((nDrawFlags & BORDERWINDOW_DRAW_HELP) || (nDrawFlags & BORDERWINDOW_DRAW_TITLE)) &&
-			 !pData->maHelpRect.IsEmpty() )
-		{
-            Rectangle aRect = pData->maHelpRect;
-            if( pOffset )
-                aRect.Move( pOffset->X(), pOffset->Y() );
-			Rectangle aInHelpRect = DrawMacTitleButton( pDev, aRect, pData->mnHelpState );
-			// ...
-		}
-	}
-
-	if ( (nDrawFlags & BORDERWINDOW_DRAW_BORDER) && nBorderSize && !pData->maTitleRect.IsEmpty() )
-	{
-		pBorderWindow->SetLineColor();
-		if ( bActive )
-			pDev->SetFillColor( rStyleSettings.GetActiveColor() );
-		else
-			pDev->SetFillColor( rStyleSettings.GetDeactiveColor() );
-		pDev->DrawRect( Rectangle( Point( aInRect.Left(), aInRect.Top() ),
-								   Size( aInRect.GetWidth(), nBorderSize ) ) );
-	}
-	aInRect.Top() += nBorderSize;
-
-	if ( (nDrawFlags & BORDERWINDOW_DRAW_FRAME) && !pData->maTitleRect.IsEmpty() &&
-		 (!pBorderWindow->mbRollUp || pBorderWindow->mnRollHeight) )
-	{
-		pBorderWindow->SetFillColor();
-		if ( bActive )
-		{
-			pDev->SetLineColor( rStyleSettings.GetShadowColor() );
-			pDev->DrawLine( aInRect.TopLeft(), Point( aInRect.Left(), aInRect.Bottom() ) );
-			pDev->DrawLine( aInRect.TopLeft(), Point( aInRect.Right(), aInRect.Top() ) );
-			pDev->SetLineColor( rStyleSettings.GetLightColor() );
-			pDev->DrawLine( Point( aInRect.Left()+1, aInRect.Bottom() ), aInRect.BottomRight() );
-			pDev->DrawLine( Point( aInRect.Right(), aInRect.Top()+1 ), aInRect.BottomRight() );
-		}
-		else
-		{
-			pDev->SetLineColor( rStyleSettings.GetDeactiveBorderColor() );
-			pDev->DrawRect( aInRect );
-		}
-		aInRect.Left()++;
-		aInRect.Top()++;
-		aInRect.Right()--;
-		aInRect.Bottom()--;
-		if ( bActive )
-			pDev->SetLineColor( rStyleSettings.GetDarkShadowColor() );
-		else
-			pDev->SetLineColor( rStyleSettings.GetShadowColor() );
-		pDev->DrawRect( aInRect );
-		aInRect.Left()++;
-		aInRect.Top()++;
-		aInRect.Right()--;
-		aInRect.Bottom()--;
-		if ( bActive )
-		{
-			pDev->SetLineColor( rStyleSettings.GetLightColor() );
-			pDev->DrawLine( aInRect.TopLeft(), Point( aInRect.Left(), aInRect.Bottom() ) );
-			pDev->DrawLine( aInRect.TopLeft(), Point( aInRect.Right(), aInRect.Top() ) );
-			pDev->SetLineColor( rStyleSettings.GetShadowColor() );
-			pDev->DrawLine( Point( aInRect.Left()+1, aInRect.Bottom() ), aInRect.BottomRight() );
-			pDev->DrawLine( Point( aInRect.Right(), aInRect.Top()+1 ), aInRect.BottomRight() );
-		}
-		else
-		{
-			pDev->SetLineColor( rStyleSettings.GetDeactiveBorderColor() );
-			pDev->DrawRect( aInRect );
-		}
-	}
-
-	// Text als letztes zeichen, da auf dem MAC unter/ober-Laengen in
-	// den Border gezeichnet werden
-	if ( bDrawText )
-	{
-		pDev->DrawText( aTitleRect, aText,
-						 TEXT_DRAW_CENTER | TEXT_DRAW_VCENTER |
-						 TEXT_DRAW_ENDELLIPSIS );
-	}
-}
-
-//fuer WIN16 Borland
-#ifdef WIN
-#pragma codeseg BRWDIN_SEG1
-#endif
-
-// -----------------------------------------------------------------------
-
-Rectangle ImplMacBorderWindowView::DrawMacTitleButton( OutputDevice* pDev, const Rectangle& rRect, USHORT nStyle )
-{
-	const StyleSettings&	rStyleSettings = pDev->GetSettings().GetStyleSettings();
-	Rectangle				aRect = rRect;
-
-	if ( !(rStyleSettings.GetOptions() & STYLE_OPTION_MONO) )
-	{
-		pDev->SetLineColor( rStyleSettings.GetShadowColor() );
-		pDev->DrawLine( aRect.TopLeft(), Point( aRect.Left(), aRect.Bottom() ) );
-		pDev->DrawLine( aRect.TopLeft(), Point( aRect.Right(), aRect.Top() ) );
-		pDev->SetLineColor( rStyleSettings.GetLightColor() );
-		pDev->DrawLine( Point( aRect.Left()+1, aRect.Bottom() ), aRect.BottomRight() );
-		pDev->DrawLine( Point( aRect.Right(), aRect.Top()+1 ), aRect.BottomRight() );
-		aRect.Left()++;
-		aRect.Top()++;
-		aRect.Right()--;
-		aRect.Bottom()--;
-		pDev->SetLineColor( rStyleSettings.GetDarkShadowColor() );
-		BOOL bDrawRect;
-		if ( pDev->GetColorCount() >= 256 )
-		{
-			Point	aTempPoint;
-			Size	aRectSize = aRect.GetSize();
-			BOOL	bNewPressed = (nStyle & BUTTON_DRAW_PRESSED) != 0;
-			bDrawRect = FALSE;
-			if ( (aRectSize != maVirDev.GetOutputSizePixel()) ||
-				 (bNewPressed != mbPressed) )
-			{
-				Gradient aGradient( GRADIENT_LINEAR,
-									rStyleSettings.GetShadowColor(),
-									rStyleSettings.GetLightColor() );
-				if ( bNewPressed )
-				{
-					aGradient.SetStartColor( rStyleSettings.GetDarkShadowColor() );
-					aGradient.SetEndColor( rStyleSettings.GetFaceColor() );
-				}
-				aGradient.SetAngle( 450 );
-				if ( maVirDev.SetOutputSizePixel( aRectSize ) )
-					maVirDev.DrawGradient( Rectangle( aTempPoint, aRectSize ), aGradient );
-				else
-					bDrawRect = TRUE;
-				mbPressed = bNewPressed;
-			}
-			if ( !bDrawRect )
-			{
-				pDev->DrawOutDev( aRect.TopLeft(), aRectSize,
-								  aTempPoint, aRectSize, maVirDev );
-				pDev->SetFillColor();
-			}
-		}
-		else
-			bDrawRect = TRUE;
-		if ( bDrawRect )
-		{
-			if ( nStyle & BUTTON_DRAW_PRESSED )
-				pDev->SetFillColor( rStyleSettings.GetShadowColor() );
-			else
-				pDev->SetFillColor( rStyleSettings.GetActiveColor() );
-		}
-		pDev->DrawRect( aRect );
-		aRect.Left()++;
-		aRect.Top()++;
-		aRect.Right()--;
-		aRect.Bottom()--;
-		if ( nStyle & BUTTON_DRAW_PRESSED )
-			pDev->SetLineColor( rStyleSettings.GetShadowColor() );
-		else
-			pDev->SetLineColor( rStyleSettings.GetLightColor() );
-		pDev->DrawLine( aRect.TopLeft(), Point( aRect.Left(), aRect.Bottom() ) );
-		pDev->DrawLine( aRect.TopLeft(), Point( aRect.Right(), aRect.Top() ) );
-		pDev->SetLineColor( rStyleSettings.GetShadowColor() );
-		pDev->DrawLine( Point( aRect.Left()+1, aRect.Bottom() ), aRect.BottomRight() );
-		pDev->DrawLine( Point( aRect.Right(), aRect.Top()+1 ), aRect.BottomRight() );
-	}
-	else
-	{
-		pDev->SetLineColor( Color( COL_BLACK ) );
-		if ( nStyle & BUTTON_DRAW_PRESSED )
-			pDev->SetFillColor( Color( COL_BLACK ) );
-		else
-			pDev->SetFillColor( rStyleSettings.GetActiveColor() );
-		pDev->DrawRect( aRect );
-		aRect.Left()++;
-		aRect.Top()++;
-		aRect.Right()--;
-		aRect.Bottom()--;
-	}
-
-	return aRect;
-}
-
-// =======================================================================
-#ifdef REMOTE_APPSERVER
-void ImplBorderWindow::ImplInit( Window* pParent,
-								 WinBits nStyle, USHORT nTypeStyle,
-								 SystemParentData* pSystemParentData
-								 )
-{
-	static ::com::sun::star::uno::Any aVoid;
-
-	DBG_ASSERT( pSystemParentData, "remote and non remote confusion, please clarify" );
-	ImplInit( pParent, nStyle, nTypeStyle, aVoid );
-}
-#else
-void ImplBorderWindow::ImplInit( Window* pParent,
-								 WinBits nStyle, USHORT nTypeStyle,
-								 const ::com::sun::star::uno::Any& aSystemToken )
-{
-	ImplInit( pParent, nStyle, nTypeStyle, NULL );
-}
-#endif
-
-#ifndef REMOTE_APPSERVER
-void ImplBorderWindow::ImplInit( Window* pParent,
-								 WinBits nStyle, USHORT nTypeStyle,
-								 SystemParentData* pSystemParentData
-								 )
-#else
-void ImplBorderWindow::ImplInit( Window* pParent,
-								 WinBits nStyle,
-								 USHORT nTypeStyle,
-								 const ::com::sun::star::uno::Any& aSystemToken
-								 )
-#endif
-{
-	// Alle WindowBits entfernen, die wir nicht haben wollen
-	WinBits nOrgStyle = nStyle;
-	WinBits nTestStyle = (WB_MOVEABLE | WB_SIZEABLE | WB_ROLLABLE | WB_PINABLE | WB_CLOSEABLE | WB_STANDALONE | WB_DIALOGCONTROL | WB_NODIALOGCONTROL | WB_SYSTEMFLOATWIN | WB_INTROWIN | WB_TOOLTIPWIN | WB_NOSHADOW);
-	if ( nTypeStyle & BORDERWINDOW_STYLE_APP )
-		nTestStyle |= WB_APP;
-	nStyle &= nTestStyle;
-
-	mbBorderWin 		= TRUE;
-	mbSmallOutBorder	= FALSE;
-	if ( nTypeStyle & BORDERWINDOW_STYLE_FRAME )
-	{
-		mbOverlapWin	= TRUE;
-		mbFrame 		= TRUE;
-		mbFrameBorder	= FALSE;
-        // closeable windows may have a border as well, eg. system floating windows without caption
-		if ( (nOrgStyle & (WB_BORDER | WB_NOBORDER | WB_MOVEABLE | WB_SIZEABLE/* | WB_CLOSEABLE*/)) == WB_BORDER )
-			mbSmallOutBorder = TRUE;
-	}
-	else if ( nTypeStyle & BORDERWINDOW_STYLE_OVERLAP )
-	{
-		mbOverlapWin	= TRUE;
-		mbFrameBorder	= TRUE;
-	}
-	else
-		mbFrameBorder	= FALSE;
-
-	if ( nTypeStyle & BORDERWINDOW_STYLE_FLOAT )
-		mbFloatWindow = TRUE;
-	else
-		mbFloatWindow = FALSE;
-
-#ifndef REMOTE_APPSERVER
 	Window::ImplInit( pParent, nStyle, pSystemParentData );
-#else
-	Window::ImplInit( pParent, nStyle, aSystemToken );
-#endif
 	SetBackground();
 	SetTextFillColor();
 
@@ -3464,10 +1820,10 @@ void ImplBorderWindow::Resize()
 
 		if ( mpMenuBarWindow )
 		{
-			long nLeftBorder;
-			long nTopBorder;
-			long nRightBorder;
-			long nBottomBorder;
+			sal_Int32 nLeftBorder;
+			sal_Int32 nTopBorder;
+			sal_Int32 nRightBorder;
+			sal_Int32 nBottomBorder;
 			long nMenuHeight = mpMenuBarWindow->GetSizePixel().Height();
 			if ( mbMenuHide )
 			{
@@ -3552,12 +1908,6 @@ void ImplBorderWindow::InitView()
 		mpBorderView = new ImplNoBorderWindowView( this );
 	else if ( !mbFrameBorder )
 		mpBorderView = new ImplSmallBorderWindowView( this );
-	else if ( GetSettings().GetStyleSettings().GetOptions() & STYLE_OPTION_MACSTYLE )
-		mpBorderView = new ImplMacBorderWindowView( this );
-	else if ( GetSettings().GetStyleSettings().GetOptions() & STYLE_OPTION_OS2STYLE )
-		mpBorderView = new ImplOS2BorderWindowView( this );
-	else if ( GetSettings().GetStyleSettings().GetOptions() & STYLE_OPTION_UNIXSTYLE )
-		mpBorderView = new ImplUnxBorderWindowView( this );
 	else
 		mpBorderView = new ImplStdBorderWindowView( this );
 	Size aSize = GetOutputSizePixel();
@@ -3568,10 +1918,10 @@ void ImplBorderWindow::InitView()
 
 void ImplBorderWindow::UpdateView( BOOL bNewView, const Size& rNewOutSize )
 {
-	long nLeftBorder;
-	long nTopBorder;
-	long nRightBorder;
-	long nBottomBorder;
+	sal_Int32 nLeftBorder;
+	sal_Int32 nTopBorder;
+	sal_Int32 nRightBorder;
+	sal_Int32 nBottomBorder;
 	Size aOldSize = GetSizePixel();
 	Size aOutputSize = rNewOutSize;
 
@@ -3614,10 +1964,10 @@ void ImplBorderWindow::InvalidateBorder(
 	if ( IsReallyVisible() )
 	{
 		// Nur wenn wir einen Border haben, muessen wir auch invalidieren
-		long nLeftBorder;
-		long nTopBorder;
-		long nRightBorder;
-		long nBottomBorder;
+		sal_Int32 nLeftBorder;
+		sal_Int32 nTopBorder;
+		sal_Int32 nRightBorder;
+		sal_Int32 nBottomBorder;
 		mpBorderView->GetBorder( nLeftBorder, nTopBorder, nRightBorder, nBottomBorder );
 		if ( nLeftBorder || nTopBorder || nRightBorder || nBottomBorder )
 		{
@@ -3755,8 +2105,8 @@ void ImplBorderWindow::SetMenuBarMode( B
 
 // -----------------------------------------------------------------------
 
-void ImplBorderWindow::GetBorder( long& rLeftBorder, long& rTopBorder,
-								  long& rRightBorder, long& rBottomBorder ) const
+void ImplBorderWindow::GetBorder( sal_Int32& rLeftBorder, sal_Int32& rTopBorder,
+								  sal_Int32& rRightBorder, sal_Int32& rBottomBorder ) const
 {
 	mpBorderView->GetBorder( rLeftBorder, rTopBorder, rRightBorder, rBottomBorder );
 	if ( mpMenuBarWindow && !mbMenuHide )
Index: vcl/source/window/btndlg.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/btndlg.cxx,v
retrieving revision 1.2
retrieving revision 1.4
diff -u -p -u -r1.2 -r1.4
--- vcl/source/window/btndlg.cxx	5 Dec 2000 15:16:28 -0000	1.2
+++ vcl/source/window/btndlg.cxx	6 Jan 2004 14:03:57 -0000	1.4
@@ -59,7 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_BTNDLG_CXX
 #include <tools/ref.hxx>
 #ifndef _TOOLS_DEBUG_HXX
 #include <tools/debug.hxx>
@@ -76,10 +75,10 @@
 #endif
 
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 
-#pragma hdrstop
+
 
 // =======================================================================
 
Index: vcl/source/window/cmdevt.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/cmdevt.cxx,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -p -u -r1.4 -r1.5
--- vcl/source/window/cmdevt.cxx	30 Jun 2003 14:30:09 -0000	1.4
+++ vcl/source/window/cmdevt.cxx	6 Jan 2004 14:04:53 -0000	1.5
@@ -58,8 +58,6 @@
  *
  *
  ************************************************************************/
-
-#define _SV_CMDEVT_CXX
 
 #ifndef _STRING_H
 #include <string.h>
Index: vcl/source/window/cursor.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/cursor.cxx,v
retrieving revision 1.5
retrieving revision 1.7
diff -u -p -u -r1.5 -r1.7
--- vcl/source/window/cursor.cxx	17 Apr 2003 15:19:06 -0000	1.5
+++ vcl/source/window/cursor.cxx	6 Jan 2004 14:05:26 -0000	1.7
@@ -59,8 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_CURSOR_CXX
-
 #ifndef _SV_SVAPP_HXX
 #include <svapp.hxx>
 #endif
@@ -76,18 +74,13 @@
 #ifndef _SV_WINDOW_H
 #include <window.h>
 #endif
-#ifndef _SV_POLY_HXX
-#include <poly.hxx>
+#ifndef _TL_POLY_HXX
+#include <tools/poly.hxx>
 #endif
 #ifndef _SV_CURSOR_HXX
 #include <cursor.hxx>
 #endif
-#ifdef REMOTE_APPSERVER
-#ifndef _SV_WINDATA_HXX
-#include <windata.hxx>
-#endif
-#endif
-#pragma hdrstop
+
 
 // =======================================================================
 
@@ -208,10 +201,6 @@ void Cursor::ImplDraw()
 		// Ausgabeflaeche berechnen und ausgeben
 		ImplCursorInvert( mpData );
 		mpData->mbCurVisible = TRUE;
-#ifdef REMOTE_APPSERVER
-        // update remote cursor pos
-        ImplUpdateCursorRect( pWindow );
-#endif
 	}
 }
 
@@ -331,8 +320,8 @@ Cursor::Cursor()
 // -----------------------------------------------------------------------
 
 Cursor::Cursor( const Cursor& rCursor ) :
-	maPos( rCursor.maPos ),
-	maSize( rCursor.maSize )
+	maSize( rCursor.maSize ),
+	maPos( rCursor.maPos )
 {
 	mpData			= NULL;
 	mpWindow		= NULL;
Index: vcl/source/window/decoview.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/decoview.cxx,v
retrieving revision 1.4
retrieving revision 1.9
diff -u -p -u -r1.4 -r1.9
--- vcl/source/window/decoview.cxx	27 Mar 2003 17:58:20 -0000	1.4
+++ vcl/source/window/decoview.cxx	21 May 2004 16:28:29 -0000	1.9
@@ -59,13 +59,11 @@
  *
  ************************************************************************/
 
-#define _SV_DECOVIEW_CXX
-
 #ifndef _SV_SETTINGS_HXX
 #include <settings.hxx>
 #endif
-#ifndef _SV_POLY_HXX
-#include <poly.hxx>
+#ifndef _TL_POLY_HXX
+#include <tools/poly.hxx>
 #endif
 #ifndef _SV_OUTDEV_HXX
 #include <outdev.hxx>
@@ -76,8 +74,9 @@
 #ifndef _SV_DECOVIEW_HXX
 #include <decoview.hxx>
 #endif
-
-#pragma hdrstop
+#ifndef _SV_WINDOW_HXX
+#include <window.hxx>
+#endif
 
 // =======================================================================
 
@@ -157,7 +156,7 @@ static void ImplDrawSymbol( OutputDevice
 							SymbolType eType  )
 {
 	// Groessen vorberechnen
-	long	n		= ::std::min( rRect.GetWidth(), rRect.GetHeight() );
+	long	n		= Min( rRect.GetWidth(), rRect.GetHeight() );
 	long	nSize	= n;
 
 	if ( n & 0x01 )
@@ -562,7 +561,8 @@ static void ImplDrawSymbol( OutputDevice
 				long nStepsY = aPos2.Y()-aPos1.Y();
 				long nX = aPos1.X();
 				long nY = aPos1.Y();
-				for ( long n = 0; n <= nStepsY; n++ )
+				long n;
+				for ( n = 0; n <= nStepsY; n++ )
 				{
                     if( bRTL )
                         nX--;
@@ -829,7 +829,7 @@ void DecorationView::DrawHighlightFrame(
 // =======================================================================
 
 static void ImplDrawDPILineRect( OutputDevice* pDev, Rectangle& rRect,
-								 const Color* pColor )
+								 const Color* pColor, BOOL bRound = FALSE )
 {
 	long nLineWidth = pDev->ImplGetDPIX()/300;
 	long nLineHeight = pDev->ImplGetDPIY()/300;
@@ -844,7 +844,15 @@ static void ImplDrawDPILineRect( OutputD
 		{
 			pDev->SetLineColor( *pColor );
 			pDev->SetFillColor();
-			pDev->DrawRect( rRect );
+            if( bRound )
+            {
+			    pDev->DrawLine( Point( rRect.Left()+1, rRect.Top()), Point( rRect.Right()-1, rRect.Top()) );
+			    pDev->DrawLine( Point( rRect.Left()+1, rRect.Bottom()), Point( rRect.Right()-1, rRect.Bottom()) );
+			    pDev->DrawLine( Point( rRect.Left(), rRect.Top()+1), Point( rRect.Left(), rRect.Bottom()-1) );
+			    pDev->DrawLine( Point( rRect.Right(), rRect.Top()+1), Point( rRect.Right(), rRect.Bottom()-1) );
+            }
+            else
+			    pDev->DrawRect( rRect );
 		}
 		else
 		{
@@ -876,14 +884,33 @@ static void ImplDrawFrame( OutputDevice*
     BOOL bMenuStyle = nStyle & FRAME_DRAW_MENU;
     nStyle &= ~FRAME_DRAW_MENU;
 
+    Window *pWin = NULL;
+    if( pDev->GetOutDevType() == OUTDEV_WINDOW )
+        pWin = (Window*) pDev;
+
+    // UseFlatBorders disables 3D style for all frames except menus
+    // menus may use different border colors (eg on XP)
+    // normal frames will be drawn using the shadow color 
+    // whereas window frame borders will use black
+    BOOL bFlatBorders = ( !bMenuStyle && rStyleSettings.GetUseFlatBorders() );
+
+    // no flat borders for standard VCL controls (ie formcontrols that keep their classic look)
+    // will not affect frame windows (like dropdowns)
+    if( pWin && pWin->GetType() == WINDOW_BORDERWINDOW && (pWin != pWin->ImplGetFrameWindow()) )
+        bFlatBorders = FALSE;
+
+    // no round corners for window frame borders
+    BOOL bRound = (bFlatBorders && !(nStyle & FRAME_DRAW_WINDOWBORDER));
+
 	if ( (rStyleSettings.GetOptions() & STYLE_OPTION_MONO) ||
-		 (pDev->GetOutDevType() == OUTDEV_PRINTER) )
+		 (pDev->GetOutDevType() == OUTDEV_PRINTER) ||
+         bFlatBorders )
 		nStyle |= FRAME_DRAW_MONO;
 
 	if ( nStyle & FRAME_DRAW_NODRAW )
 	{
 		if ( nStyle & FRAME_DRAW_MONO )
-			ImplDrawDPILineRect( pDev, rRect, NULL );
+			ImplDrawDPILineRect( pDev, rRect, NULL, bRound );
 		else
 		{
 			USHORT nFrameStyle = nStyle & FRAME_DRAW_STYLE;
@@ -916,10 +943,12 @@ static void ImplDrawFrame( OutputDevice*
 	{
 		if ( nStyle & FRAME_DRAW_MONO )
 		{
-			Color aColor( COL_BLACK );
-			if( pDev->GetSettings().GetStyleSettings().GetFaceColor().IsDark() )
+            // flat borders will be drawn in the shadow color
+            // but flat window borders will use black
+            Color aColor( bRound ? rStyleSettings.GetShadowColor() : COL_BLACK );
+			if( aColor.IsDark() && pDev->GetSettings().GetStyleSettings().GetFaceColor().IsDark() )
 				aColor = Color( COL_WHITE );
-			ImplDrawDPILineRect( pDev, rRect, &aColor );
+			ImplDrawDPILineRect( pDev, rRect, &aColor, bRound );
 		}
 		else
 		{
@@ -969,17 +998,28 @@ static void ImplDrawFrame( OutputDevice*
 				{
 					if ( nFrameStyle == FRAME_DRAW_DOUBLEIN )
 					{
-						pDev->ImplDraw2ColorFrame( rRect,
-												   rStyleSettings.GetShadowColor(),
-												   rStyleSettings.GetLightColor() );
+                        if( bFlatBorders ) // no 3d effect
+                            pDev->ImplDraw2ColorFrame( rRect,
+												    rStyleSettings.GetShadowColor(),
+												    rStyleSettings.GetShadowColor() );
+                        else
+						    pDev->ImplDraw2ColorFrame( rRect,
+												    rStyleSettings.GetShadowColor(),
+												    rStyleSettings.GetLightColor() );
 					}
 					else
 					{
-						pDev->ImplDraw2ColorFrame( rRect,
-                                                   bMenuStyle ? 
-                                                   rStyleSettings.GetMenuBorderColor() :
+                        if( bMenuStyle )
+						    pDev->ImplDraw2ColorFrame( rRect,
+                                                   rStyleSettings.GetMenuBorderColor(),
+												   rStyleSettings.GetDarkShadowColor() );
+                        else
+						    pDev->ImplDraw2ColorFrame( rRect,
+                                                   bFlatBorders ? // no 3d effect
+                                                   rStyleSettings.GetDarkShadowColor() :
 												   rStyleSettings.GetLightBorderColor(),
 												   rStyleSettings.GetDarkShadowColor() );
+                                                   
 					}
 
 					rRect.Left()++;
@@ -987,11 +1027,17 @@ static void ImplDrawFrame( OutputDevice*
 					rRect.Right()--;
 					rRect.Bottom()--;
 
+                    BOOL bDrawn = TRUE;
 					if ( nFrameStyle == FRAME_DRAW_DOUBLEIN )
 					{
-						pDev->ImplDraw2ColorFrame( rRect,
-												   rStyleSettings.GetDarkShadowColor(),
-												   rStyleSettings.GetLightBorderColor() );
+                        if( bFlatBorders ) // no 3d effect
+						    pDev->ImplDraw2ColorFrame( rRect,
+												    rStyleSettings.GetFaceColor(),
+												    rStyleSettings.GetFaceColor() );
+                        else
+						    pDev->ImplDraw2ColorFrame( rRect,
+												    rStyleSettings.GetDarkShadowColor(),
+												    rStyleSettings.GetLightBorderColor() );
 					}
 					else
 					{
@@ -1000,12 +1046,16 @@ static void ImplDrawFrame( OutputDevice*
 						    pDev->ImplDraw2ColorFrame( rRect,
 												    rStyleSettings.GetLightColor(),
 												    rStyleSettings.GetShadowColor() );
+                        else
+                            bDrawn = FALSE;
 					}
-
-					rRect.Left()++;
-					rRect.Top()++;
-					rRect.Right()--;
-					rRect.Bottom()--;
+                    if( bDrawn )
+                    {
+					    rRect.Left()++;
+					    rRect.Top()++;
+					    rRect.Right()--;
+					    rRect.Bottom()--;
+                    }
 				}
 			}
 		}
@@ -1277,8 +1327,7 @@ Rectangle DecorationView::DrawButton( co
 	{
 		const StyleSettings& rStyleSettings = mpOutDev->GetSettings().GetStyleSettings();
 
-		if ( (rStyleSettings.GetOptions() & STYLE_OPTION_MONO) ||
-			 (mpOutDev->GetOutDevType() == OUTDEV_PRINTER) )
+		if ( rStyleSettings.GetOptions() & STYLE_OPTION_MONO )
 			nStyle |= BUTTON_DRAW_MONO;
 
 		if ( nStyle & BUTTON_DRAW_NODRAW )
Index: vcl/source/window/dialog.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/dialog.cxx,v
retrieving revision 1.25.136.1
retrieving revision 1.29
diff -u -p -u -r1.25.136.1 -r1.29
--- vcl/source/window/dialog.cxx	31 Oct 2003 15:43:35 -0000	1.25.136.1
+++ vcl/source/window/dialog.cxx	17 Jun 2004 12:22:28 -0000	1.29
@@ -59,14 +59,12 @@
  *
  ************************************************************************/
 
-#define _SV_DIALOG_CXX
-
 #ifndef _TOOLS_DEBUG_HXX
 #include <tools/debug.hxx>
 #endif
 
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
@@ -111,7 +106,7 @@
 
 #include <unowrap.hxx>
 
-#pragma hdrstop
+
 
 // =======================================================================
 
@@ -333,7 +328,7 @@ void Dialog::ImplInit( Window* pParent, 
     {
         pParent = Application::GetDefDialogParent();
         if ( !pParent && !(nStyle & WB_SYSTEMWINDOW) )
-            pParent = Application::GetAppWindow();
+            pParent = ImplGetSVData()->maWinData.mpAppWin;
 
         // If Parent is disabled, then we search for a modal dialog
         // in this frame
@@ -894,7 +881,7 @@ void Dialog::GrabFocusToFirstControl()
         pFocusControl->ImplControlFocus( GETFOCUS_INIT );
 }
 
-void Dialog::GetDrawWindowBorder( long& rLeftBorder, long& rTopBorder, long& rRightBorder, long& rBottomBorder ) const
+void Dialog::GetDrawWindowBorder( sal_Int32& rLeftBorder, sal_Int32& rTopBorder, sal_Int32& rRightBorder, sal_Int32& rBottomBorder ) const
 {
     ImplBorderWindow aImplWin( (Window*)this, WB_BORDER|WB_STDWORK, BORDERWINDOW_STYLE_OVERLAP );
 //  aImplWin.SetText( GetText() );
Index: vcl/source/window/dlgctrl.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/dlgctrl.cxx,v
retrieving revision 1.13
retrieving revision 1.15
diff -u -p -u -r1.13 -r1.15
--- vcl/source/window/dlgctrl.cxx	28 May 2003 12:32:21 -0000	1.13
+++ vcl/source/window/dlgctrl.cxx	6 Jan 2004 14:09:02 -0000	1.15
@@ -59,8 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_DLGCTRL_CXX
-
 #ifndef _DEBUG_HXX
 #include <tools/debug.hxx>
 #endif
@@ -93,7 +91,7 @@
 using namespace ::com::sun::star;
 
 
-#pragma hdrstop
+
 
 // =======================================================================
 
@@ -1023,7 +1021,6 @@ Window* Window::GetLabelFor() const
 {
     Window* pWindow = NULL;
     Window* pFrameWindow = ImplGetFrameWindow();
-    Window* pParent = ImplGetParent();
 
     WinBits nFrameStyle = pFrameWindow->GetStyle();
     if( ! ( nFrameStyle & WB_DIALOGCONTROL )
@@ -1094,7 +1091,6 @@ Window* Window::GetLabeledBy() const
 {
     Window* pWindow = NULL;
     Window* pFrameWindow = ImplGetFrameWindow();
-    Window* pParent = ImplGetParent();
 
 /* #105538# OJ approved by PL
     WinBits nFrameStyle = pFrameWindow->GetStyle();
Index: vcl/source/window/dndevdis.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/dndevdis.cxx,v
retrieving revision 1.12
retrieving revision 1.14
diff -u -p -u -r1.12 -r1.14
--- vcl/source/window/dndevdis.cxx	4 Jun 2003 11:22:44 -0000	1.12
+++ vcl/source/window/dndevdis.cxx	6 Jan 2004 14:09:34 -0000	1.14
@@ -338,7 +338,6 @@ void SAL_CALL DNDEventDispatcher::dragGe
 {	MutexGuard aImplGuard( m_aMutex );
 
 	Point origin( dge.DragOriginX, dge.DragOriginY );
-	sal_Int32 nListeners;
 
 	// find the window that is toplevel for this coordinates
 	OClearableGuard aSolarGuard( Application::GetSolarMutex() );
@@ -594,17 +593,5 @@ sal_Int32 DNDEventDispatcher::fireDragGe
         pWindow->DecrementLockCount();
 	}
     
-#ifdef REMOTE_APPSERVER
-
-     if( ! pWindow->ImplGetFrameData()->mbInternalDragGestureRecognizer )
-     {
-        if( xSource.is() )
-        {
-            xSource->startDrag( DragGestureEvent(), 0, 0, 0, Reference< XTransferable >(), Reference< XDragSourceListener > () );
-        }
-     }
-     
-#endif
-
 	return n;
 }
Index: vcl/source/window/dndlcon.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/dndlcon.cxx,v
retrieving revision 1.6
retrieving revision 1.7
diff -u -p -u -r1.6 -r1.7
--- vcl/source/window/dndlcon.cxx	28 Jun 2001 12:51:04 -0000	1.6
+++ vcl/source/window/dndlcon.cxx	6 Jan 2004 14:10:09 -0000	1.7
@@ -70,8 +70,8 @@ using namespace ::com::sun::star::datatr
 // 
 //==================================================================================================
 
-DNDListenerContainer::DNDListenerContainer( sal_Int8 nDefaultActions ) : m_aMutex(),
-	WeakComponentImplHelper4< XDragGestureRecognizer, XDropTargetDragContext, XDropTargetDropContext, XDropTarget >(m_aMutex)
+DNDListenerContainer::DNDListenerContainer( sal_Int8 nDefaultActions )
+	: WeakComponentImplHelper4< XDragGestureRecognizer, XDropTargetDragContext, XDropTargetDropContext, XDropTarget >(GetMutex())
 {
 	m_bActive = sal_True;
 	m_nDefaultActions = nDefaultActions;	
Index: vcl/source/window/dndlcon.hxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/dndlcon.hxx,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -p -u -r1.4 -r1.5
--- vcl/source/window/dndlcon.hxx	28 Jun 2001 12:51:04 -0000	1.4
+++ vcl/source/window/dndlcon.hxx	6 Jan 2004 14:10:44 -0000	1.5
@@ -86,14 +86,15 @@
 #include <cppuhelper/compbase4.hxx>
 #endif
 
-class DNDListenerContainer : public ::cppu::WeakComponentImplHelper4< 
+#include <unohelp2.hxx>
+
+class DNDListenerContainer :    public ::vcl::unohelper::MutexHelper, 
+                                public ::cppu::WeakComponentImplHelper4< 
 	::com::sun::star::datatransfer::dnd::XDragGestureRecognizer, \
 	::com::sun::star::datatransfer::dnd::XDropTargetDragContext,
 	::com::sun::star::datatransfer::dnd::XDropTargetDropContext,
 	::com::sun::star::datatransfer::dnd::XDropTarget >
 {
-	::osl::Mutex m_aMutex;
-
 	sal_Bool m_bActive;
 	sal_Int8 m_nDefaultActions;
 
Index: vcl/source/window/dockwin.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/dockwin.cxx,v
retrieving revision 1.13
retrieving revision 1.15
diff -u -p -u -r1.13 -r1.15
--- vcl/source/window/dockwin.cxx	27 Mar 2003 17:58:21 -0000	1.13
+++ vcl/source/window/dockwin.cxx	6 Jan 2004 14:11:10 -0000	1.15
@@ -59,10 +59,11 @@
  *
  ************************************************************************/
 
-#define _SV_DOCKWIN_CXX
-
+#ifndef _SV_SVSYS_HXX
+#include <svsys.h>
+#endif
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_EVENT_HXX
 #include <event.hxx>
@@ -82,16 +83,13 @@
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
 #endif
-#ifndef _SV_SVSYS_HXX
-#include <svsys.h>
-#endif
 #ifndef _SV_TIMER_HXX
 #include <timer.hxx>
 #endif
 #include <unowrap.hxx>
 #include <salframe.hxx>
 
-#pragma hdrstop
+
 
 // =======================================================================
 
Index: vcl/source/window/floatwin.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/floatwin.cxx,v
retrieving revision 1.25
retrieving revision 1.27
diff -u -p -u -r1.25 -r1.27
--- vcl/source/window/floatwin.cxx	27 Mar 2003 17:58:22 -0000	1.25
+++ vcl/source/window/floatwin.cxx	6 Jan 2004 14:11:39 -0000	1.27
@@ -59,12 +59,9 @@
  *
  ************************************************************************/
 
-#define _SV_FLOATWIN_CXX
-
-#ifndef _DEBUG_HXX
-#include <tools/debug.hxx>
+#ifndef _SV_SVSYS_HXX
+#include <svsys.h>
 #endif
-
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
 #endif
@@ -90,15 +87,15 @@
 #include <window.h>
 #endif
 #ifndef _SV_RC_H
-#include <rc.h>
-#endif
-#ifndef _SV_SVSYS_HXX
-#include <svsys.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_SALFRAME_HXX
 #include <salframe.hxx>
 #endif
-#pragma hdrstop
+#ifndef _DEBUG_HXX
+#include <tools/debug.hxx>
+#endif
+
 
 // =======================================================================
 
@@ -108,9 +105,10 @@ void FloatingWindow::ImplInit( Window* p
     mbInCleanUp = FALSE;
     mbGrabFocus = FALSE;
 
+    DBG_ASSERT( pParent, "FloatWindow::FloatingWindow(): - pParent == NULL!" );
 
     if ( !pParent )
-        pParent = Application::GetAppWindow();
+        pParent = ImplGetSVData()->maWinData.mpAppWin;
 
     DBG_ASSERT( pParent, "FloatWindow::FloatingWindow(): - pParent == NULL and no AppWindow exists" );
 
Index: vcl/source/window/introwin.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/introwin.cxx,v
retrieving revision 1.2
retrieving revision 1.4
diff -u -p -u -r1.2 -r1.4
--- vcl/source/window/introwin.cxx	27 Mar 2003 17:58:22 -0000	1.2
+++ vcl/source/window/introwin.cxx	6 Jan 2004 14:12:14 -0000	1.4
@@ -59,25 +59,19 @@
  *
  ************************************************************************/
 
-#define _SV_INTROWIN_CXX
-
-#ifndef REMOTE_APPSERVER
 #ifndef _SV_SVSYS_HXX
 #include <svsys.h>
 #endif
 #ifndef _SV_SALFRAME_HXX
 #include <salframe.hxx>
 #endif
-#else
-#include <rmwindow.hxx>
-#endif
 
 #ifndef _DEBUG_HXX
 #include <tools/debug.hxx>
 #endif
 
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
@@ -100,7 +94,7 @@
 
 #include <introwin.hxx>
 
-#pragma hdrstop
+
 
 
 // =======================================================================
Index: vcl/source/window/keycod.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/keycod.cxx,v
retrieving revision 1.2
retrieving revision 1.4
diff -u -p -u -r1.2 -r1.4
--- vcl/source/window/keycod.cxx	4 Dec 2001 15:26:43 -0000	1.2
+++ vcl/source/window/keycod.cxx	6 Jan 2004 14:12:50 -0000	1.4
@@ -59,8 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_KEYCOD_CXX
-
 #ifndef _SV_SVSYS_HXX
 #include <svsys.h>
 #endif
@@ -82,14 +80,10 @@
 #endif
 
 #ifndef _RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 
-#ifdef REMOTE_APPSERVER
-#include <rmwindow.hxx>
-#endif
 
-#pragma hdrstop
 
 // =======================================================================
 
@@ -171,84 +165,16 @@ XubString KeyCode::GetName( Window* pWin
 {
 	if ( !pWindow )
 		pWindow = ImplGetDefaultWindow();
-#ifndef REMOTE_APPSERVER
 	return pWindow->ImplGetFrame()->GetKeyName( GetFullCode() );
-#else
-	ImplSVData* pSVData = ImplGetSVData();
-	if ( !pSVData->mpKeyNames )
-	{
-		pSVData->mpKeyNames = new KeyNames;
-		NMSP_CLIENT::KeyNameSequence aKeyNames;
-		pWindow->ImplGetFrame()->GetKeyNames( aKeyNames );
-		ULONG nNames = aKeyNames.getLength();
-		for ( USHORT n = 0; n < nNames; n++ )
-		{
-			const NMSP_CLIENT::IDLKeyNameInfo& rInfo = aKeyNames.getConstArray()[n];
-			pSVData->mpKeyNames->Insert( rInfo.nCode, new String( rInfo.aName )  );
-		}
-	}
-
-	String		aName;
-	const int	nMods = 3;
-	USHORT		nKeyCode = GetFullCode();
-	USHORT		aModifiers[nMods] = { KEY_MOD2, KEY_MOD1, KEY_SHIFT };
-	for ( USHORT n = 0; n < nMods; n++ )
-	{
-		USHORT nMod = aModifiers[n];
-		if ( nKeyCode & nMod )
-		{
-			String* pMod = pSVData->mpKeyNames->Get( nMod );
-			if ( pMod )
-			{
-				aName += *pMod;
-				aName += '+';
-			}
-		}
-	}
-
-	USHORT nCode = GetCode();
-	if ( (nCode >= KEY_0) && (nCode <= KEY_9) )
-		aName += (sal_Unicode)'0'+(nCode-KEY_0);
-	else if ( (nCode >= KEY_A) && (nCode <= KEY_Z) )
-		aName += (sal_Unicode)'A'+(nCode-KEY_A);
-	else if ( (nCode >= KEY_F1) && (nCode <= KEY_F9) )
-	{
-		aName += (sal_Unicode)'F';
-		aName += (sal_Unicode)'1' + (nCode-KEY_F1);
-	}
-	else if ( (nCode >= KEY_F10) && (nCode <= KEY_F19) )
-	{
-		aName += (sal_Unicode)'F';
-		aName += (sal_Unicode)'1';
-		aName += (sal_Unicode)'0' + (nCode-KEY_F10);
-	}
-	else if ( (nCode >= KEY_F20) && (nCode <= KEY_F26) )
-	{
-		aName += (sal_Unicode)'F';
-		aName += (sal_Unicode)'2';
-		aName += (sal_Unicode)'0' + (nCode-KEY_F20);
-	}
-	else
-	{
-		String* pName = pSVData->mpKeyNames->Get( nCode );
-		if ( pName )
-			aName += *pName;
-	}
-	return aName;
-#endif
 }
 
 // -----------------------------------------------------------------------
 
 XubString KeyCode::GetSymbolName( const XubString& rFontName, Window* pWindow ) const
 {
-#ifndef REMOTE_APPSERVER
 	if ( !pWindow )
 		pWindow = ImplGetDefaultWindow();
 	return pWindow->ImplGetFrame()->GetSymbolKeyName( rFontName, GetFullCode() );
-#else
-	return GetName( pWindow );
-#endif
 }
 
 // -----------------------------------------------------------------------
Index: vcl/source/window/makefile.mk
===================================================================
RCS file: /cvs/gsl/vcl/source/window/makefile.mk,v
retrieving revision 1.10
retrieving revision 1.13
diff -u -p -u -r1.10 -r1.13
--- vcl/source/window/makefile.mk	27 Mar 2003 17:58:22 -0000	1.10
+++ vcl/source/window/makefile.mk	10 May 2004 15:50:07 -0000	1.13
@@ -76,6 +76,7 @@ TARGET=win
 # --- Files --------------------------------------------------------
 
 SLOFILES=	$(SLO)$/accel.obj		\
+			$(SLO)$/abstdlg.obj		\
 			$(SLO)$/accmgr.obj		\
 			$(SLO)$/brdwin.obj		\
 			$(SLO)$/btndlg.obj		\
@@ -103,6 +104,7 @@ SLOFILES=	$(SLO)$/accel.obj		\
 			$(SLO)$/toolbox2.obj	\
 			$(SLO)$/window.obj		\
 			$(SLO)$/window2.obj 	\
+			$(SLO)$/window3.obj		\
 			$(SLO)$/winproc.obj 	\
 			$(SLO)$/wrkwin.obj		\
 			$(SLO)$/introwin.obj	\
@@ -111,41 +113,29 @@ SLOFILES=	$(SLO)$/accel.obj		\
 			$(SLO)$/dndlcon.obj     \
 			$(SLO)$/taskpanelist.obj
 
-.IF "$(remote)"!=""
-EXCEPTIONSFILES=					\
-			$(SLO)$/brdwin.obj		\
-			$(SLO)$/keycod.obj		\
-			$(SLO)$/window.obj		\
-			$(SLO)$/winproc.obj 	\
-			$(SLO)$/wrkwin.obj		\
-			$(SLO)$/introwin.obj	\
-			$(SLO)$/accel.obj		\
-			$(SLO)$/cursor.obj		\
-			$(SLO)$/dlgctrl.obj 	\
-			$(SLO)$/floatwin.obj	\
-			$(SLO)$/menu.obj		\
-			$(SLO)$/msgbox.obj		\
-			$(SLO)$/split.obj		\
-			$(SLO)$/status.obj		\
-			$(SLO)$/syschild.obj	\
-			$(SLO)$/syswin.obj		\
-			$(SLO)$/tabpage.obj 	\
-			$(SLO)$/toolbox.obj 	\
-			$(SLO)$/toolbox2.obj	\
-			$(SLO)$/dialog.obj		\
-			$(SLO)$/dndevdis.obj	\
-			$(SLO)$/dndlcon.obj
-.ELSE
 EXCEPTIONSFILES=					\
 			$(SLO)$/window.obj		\
 			$(SLO)$/winproc.obj		\
 			$(SLO)$/syswin.obj		\
 			$(SLO)$/dndevdis.obj	\
 			$(SLO)$/dndlcon.obj
-.ENDIF
 
 # --- Targets ------------------------------------------------------
 
 .INCLUDE :	target.mk
 
 .INCLUDE :	$(PRJ)$/util$/target.pmk
+
+$(INCCOM)$/cuilib.hxx: makefile.mk
+.IF "$(GUI)"=="UNX"
+    $(RM) $@
+    +echo \#define DLL_NAME \"libcui$(UPD)$(DLLPOSTFIX)$(DLLPOST)\" >$@
+.ELSE
+.IF "$(USE_SHELL)"!="4nt"
+    +echo \#define DLL_NAME \"cui$(UPD)$(DLLPOSTFIX)$(DLLPOST)\" >$@
+.ELSE          # "$(USE_SHELL)"!="4nt"
+    +echo #define DLL_NAME "cui$(UPD)$(DLLPOSTFIX)$(DLLPOST)" >$@
+.ENDIF          # "$(USE_SHELL)"!="4nt"
+.ENDIF
+
+$(SLO)$/abstdlg.obj : $(INCCOM)$/cuilib.hxx
Index: vcl/source/window/menu.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/menu.cxx,v
retrieving revision 1.96.60.1
retrieving revision 1.106
diff -u -p -u -r1.96.60.1 -r1.106
--- vcl/source/window/menu.cxx	13 Nov 2003 16:48:45 -0000	1.96.60.1
+++ vcl/source/window/menu.cxx	17 Jun 2004 12:23:14 -0000	1.106
@@ -59,8 +59,12 @@
  *
  ************************************************************************/
 
-#define _SV_MENU_CXX
-
+#ifndef _SV_SVSYS_HXX
+#include <svsys.h>
+#endif
+#ifndef _SV_SALINST_HXX
+#include <salinst.hxx>
+#endif
 #ifndef _LIST_HXX
 #include <tools/list.hxx>
 #endif
@@ -110,7 +114,7 @@
 #include <bitmap.hxx>
 #endif
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_MENU_HXX
 #include <menu.hxx>
@@ -143,8 +144,13 @@
 #include <toolbox.hxx>
 #endif
 #include <tools/stream.hxx>
+#ifndef _SV_SALMENU_HXX
+#include <salmenu.hxx>
+#endif
+#ifndef _SV_SALFRAME_HXX
+#include <salframe.hxx>
+#endif
 
-#pragma hdrstop
 
 #ifndef _COM_SUN_STAR_UNO_REFERENCE_H_
 #include <com/sun/star/uno/Reference.h>
@@ -196,11 +202,6 @@ DBG_NAME( Menu );
 // document closer
 #define IID_DOCUMENTCLOSE 1
 
-inline BOOL ImplIsMouseFollow()
-{
-    return ( Application::GetSettings().GetMouseSettings().GetFollow() & MOUSE_FOLLOW_MENU ) ? TRUE : FALSE;
-}
-
 struct MenuItemData
 {
     USHORT          nId;					// SV Id
@@ -212,6 +213,7 @@ struct MenuItemData
     XubString       aHelpText;				// Help-String
     XubString       aTipHelpText;			// TipHelp-String (eg, expanded filenames)
     XubString       aCommandStr;			// CommandString
+    XubString       aHelpCommandStr;        // Help command string (to reference external help)
     ULONG           nHelpId;				// Help-Id
     ULONG           nUserValue;				// User value
     Image           aImage;					// Image
@@ -225,10 +227,15 @@ struct MenuItemData
 	XubString		aAccessibleName;		// accessible name
 	XubString		aAccessibleDescription;	// accessible description
 
-                    MenuItemData() {}
+    SalMenuItem*    pSalMenuItem;           // access to native menu
+
+                    MenuItemData() :
+                        pSalMenuItem ( NULL )
+                    {}
                     MenuItemData( const XubString& rStr, const Image& rImage ) :
                         aText( rStr ),
-                        aImage( rImage )
+                        aImage( rImage ),
+                        pSalMenuItem ( NULL )
                     {}
                     ~MenuItemData();
 };
@@ -241,6 +248,8 @@ MenuItemData::~MenuItemData()
         delete pAutoSubMenu;
         pAutoSubMenu = NULL;
     }
+    if( pSalMenuItem )
+        ImplGetSVData()->mpDefInst->DestroyMenuItem( pSalMenuItem );
 }
 
 class MenuItemList : public List
@@ -300,6 +309,18 @@ MenuItemData* MenuItemList::Insert( USHO
     pData->bIsTemporary 	= FALSE;
     pData->bMirrorMode		= FALSE;
     pData->nItemImageAngle	= 0;
+
+    SalItemParams aSalMIData;
+    aSalMIData.nId = nId;
+    aSalMIData.eType = eType;
+    aSalMIData.nBits = nBits;
+    aSalMIData.pMenu = pMenu;
+    aSalMIData.aText = rStr;
+    aSalMIData.aImage = rImage;
+
+    // Native-support: returns NULL if not supported
+    pData->pSalMenuItem = ImplGetSVData()->mpDefInst->CreateMenuItem( &aSalMIData );
+
     List::Insert( (void*)pData, nPos );
     return pData;
 }
@@ -319,6 +340,18 @@ void MenuItemList::InsertSeparator( USHO
     pData->bIsTemporary 	= FALSE;
     pData->bMirrorMode		= FALSE;
     pData->nItemImageAngle	= 0;
+
+    SalItemParams aSalMIData;
+    aSalMIData.nId = 0;
+    aSalMIData.eType = MENUITEM_SEPARATOR;
+    aSalMIData.nBits = 0;
+    aSalMIData.pMenu = NULL;
+    aSalMIData.aText = XubString();
+    aSalMIData.aImage = Image();
+
+    // Native-support: returns NULL if not supported
+    pData->pSalMenuItem = ImplGetSVData()->mpDefInst->CreateMenuItem( &aSalMIData );
+
     List::Insert( (void*)pData, nPos );
 }
 
@@ -633,6 +656,7 @@ public:
     virtual ::com::sun::star::uno::Reference< ::com::sun::star::accessibility::XAccessible > CreateAccessible();
 
     void SetAutoPopup( BOOL bAuto ) { mbAutoPopup = bAuto; }
+    void            ImplLayoutChanged();
 };
 
 
@@ -663,7 +687,6 @@ static BOOL ImplHandleHelpEvent( Window*
 {
     BOOL bDone = FALSE;
     USHORT nId = 0;
-	ImplSVData* pSVData = ImplGetSVData();
 
     if ( nHighlightedItem != ITEMPOS_INVALID )
     {
@@ -723,10 +746,19 @@ static BOOL ImplHandleHelpEvent( Window*
     return bDone;
 }
 
-
 Menu::Menu()
 {
     DBG_CTOR( Menu, NULL );
+    bIsMenuBar = FALSE;
+    ImplInit();
+}
+
+// this constructor makes sure we're creating the native menu
+// with the correct type (ie, MenuBar vs. PopupMenu)
+Menu::Menu( BOOL bMenubar )
+{
+    DBG_CTOR( Menu, NULL );
+    bIsMenuBar = bMenubar;
     ImplInit();
 }
 
@@ -756,13 +788,18 @@ Menu::~Menu()
     delete pItemList;
     delete pLogo;
     delete mpLayoutData;
+
+    // Native-support: destroy SalMenu
+    ImplSetSalMenu( NULL );
 }
 
 void Menu::ImplInit()
 {
+    mnHighlightedItemPos = ITEMPOS_INVALID;
+    mpSalMenu       = NULL;
     nMenuFlags      = 0;
     nDefaultItem    = 0;
-    bIsMenuBar      = FALSE;
+    //bIsMenuBar      = FALSE;  // this is now set in the ctor, must not be changed here!!!
     nSelectedId     = 0;
     pItemList       = new MenuItemList;
     pLogo           = NULL;
@@ -773,6 +810,9 @@ void Menu::ImplInit()
     bInCallback     = FALSE;
     bKilled         = FALSE;
     mpLayoutData	= NULL;
+
+    // Native-support: returns NULL if not supported
+    mpSalMenu = ImplGetSVData()->mpDefInst->CreateMenu( bIsMenuBar );
 }
 
 void Menu::ImplLoadRes( const ResId& rResId )
@@ -958,14 +998,18 @@ void Menu::InsertItem( USHORT nItemId, c
     DBG_ASSERT( GetItemPos( nItemId ) == MENU_ITEM_NOTFOUND,
                 "Menu::InsertItem(): ItemId already exists" );
 
-    // Falls Position > ItemCount, dann anheangen
+    // if Position > ItemCount, append
     if ( nPos >= (USHORT)pItemList->Count() )
         nPos = MENU_APPEND;
 
-    // Item in die MenuItemListe aufnehmen
+    // put Item in MenuItemList
     MenuItemData* pData = pItemList->Insert( nItemId, MENUITEM_STRING,
                              nItemBits, rStr, Image(), this, nPos );
 
+    // update native menu
+    if( ImplGetSalMenu() && pData->pSalMenuItem )
+        ImplGetSalMenu()->InsertItem( pData->pSalMenuItem, nPos );
+
     Window* pWin = ImplGetWindow();
     delete mpLayoutData, mpLayoutData = NULL;
     if ( pWin )
@@ -1095,16 +1139,23 @@ void Menu::InsertItem( const ResId& rRes
 
 void Menu::InsertSeparator( USHORT nPos )
 {
-    // Handelt es sich um einen MenuBar, dann mache nichts
+    // do nothing if its a menu bar
     if ( bIsMenuBar )
         return;
 
-    // Falls Position > ItemCount, dann anheangen
+    // if position > ItemCount, append
     if ( nPos >= (USHORT)pItemList->Count() )
         nPos = MENU_APPEND;
 
-    // Separator in die Item-Liste einfuegen
+    // put separator in item list
     pItemList->InsertSeparator( nPos );
+
+    // update native menu
+    USHORT itemPos = nPos != MENU_APPEND ? nPos : (USHORT)pItemList->Count() - 1;
+    MenuItemData *pData = pItemList->GetDataFromPos( itemPos );
+    if( ImplGetSalMenu() && pData && pData->pSalMenuItem )
+        ImplGetSalMenu()->InsertItem( pData->pSalMenuItem, nPos );
+
     delete mpLayoutData, mpLayoutData = NULL;
 
     ImplCallEventListeners( VCLEVENT_MENU_INSERTITEM, nPos );
@@ -1116,6 +1167,10 @@ void Menu::RemoveItem( USHORT nPos )
 
     if ( nPos < GetItemCount() )
 	{
+        // update native menu
+        if( ImplGetSalMenu() )
+            ImplGetSalMenu()->RemoveItem( nPos );
+
         pItemList->Remove( nPos );
 		bRemove = TRUE;
 	}
@@ -1166,6 +1221,8 @@ void ImplCopyItem( Menu* pThis, const Me
         pThis->SetHelpId( nId, pData->nHelpId );
         pThis->SetHelpText( nId, pData->aHelpText );
         pThis->SetAccelKey( nId, pData->aAccelKey );
+        pThis->SetItemCommand( nId, pData->aCommandStr );
+        pThis->SetHelpCommand( nId, pData->aHelpCommandStr );
 
         PopupMenu* pSubMenu = rMenu.GetPopupMenu( nId );
         if ( pSubMenu )
@@ -1310,17 +1367,24 @@ void Menu::SetPopupMenu( USHORT nItemId,
     USHORT          nPos;
     MenuItemData*   pData = pItemList->GetData( nItemId, nPos );
 
-    // Item nicht vorhanden, dann NULL zurueckgeben
+    // Item does not exist -> return NULL
     if ( !pData )
         return;
 
-    // Gleiches Menu, danmn brauchen wir nichts machen
+    // same menu, nothing to do
     if ( (PopupMenu*)pData->pSubMenu == pMenu )
         return;
 
-    // Daten austauschen
+    // data exchange
     pData->pSubMenu = pMenu;
 
+    // set native submenu
+    if( ImplGetSalMenu() && pData->pSalMenuItem )
+        if( pMenu )
+            ImplGetSalMenu()->SetSubMenu( pData->pSalMenuItem, pMenu->ImplGetSalMenu(), nPos );
+        else
+            ImplGetSalMenu()->SetSubMenu( pData->pSalMenuItem, NULL, nPos );
+
     ImplCallEventListeners( VCLEVENT_MENU_SUBMENUCHANGED, nPos );
 }
 
@@ -1346,6 +1410,10 @@ void Menu::SetAccelKey( USHORT nItemId, 
         return;
 
     pData->aAccelKey = rKeyCode;
+
+    // update native menu
+    if( ImplGetSalMenu() && pData->pSalMenuItem )
+        ImplGetSalMenu()->SetAccelerator( nPos, pData->pSalMenuItem, rKeyCode, rKeyCode.GetName() );
 }
 
 KeyCode Menu::GetAccelKey( USHORT nItemId ) const
@@ -1441,6 +1509,10 @@ void Menu::CheckItem( USHORT nItemId, BO
 
     pData->bChecked = bCheck;
 
+    // update native menu
+    if( ImplGetSalMenu() )
+        ImplGetSalMenu()->CheckItem( nPos, bCheck );
+
 	ImplCallEventListeners( bCheck ? VCLEVENT_MENU_ITEMCHECKED : VCLEVENT_MENU_ITEMUNCHECKED, nPos );
 }
 
@@ -1481,6 +1553,10 @@ void Menu::EnableItem( USHORT nItemId, B
                 nX += pData->aSz.Width();
             }
         }
+        // update native menu
+        if( ImplGetSalMenu() )
+            ImplGetSalMenu()->EnableItem( nPos, bEnable );
+
         ImplCallEventListeners( bEnable ? VCLEVENT_MENU_ENABLE : VCLEVENT_MENU_DISABLE, nPos );
     }
 }
@@ -1508,7 +1584,20 @@ void Menu::SetItemText( USHORT nItemId, 
 	{
 		pData->aText = rStr;
 		ImplSetMenuItemData( pData, nPos );
-		ImplCallEventListeners( VCLEVENT_MENU_ITEMTEXTCHANGED, nPos );
+        // update native menu
+        if( ImplGetSalMenu() && pData->pSalMenuItem )
+            ImplGetSalMenu()->SetItemText( nPos, pData->pSalMenuItem, rStr );
+
+        Window* pWin = ImplGetWindow();
+        delete mpLayoutData, mpLayoutData = NULL;
+        if ( pWin && IsMenuBar() )
+        {
+            ImplCalcSize( pWin );
+            if ( pWin->IsVisible() )
+                pWin->Invalidate();
+        }
+
+        ImplCallEventListeners( VCLEVENT_MENU_ITEMTEXTCHANGED, nPos );
 	}
 }
 
@@ -1670,6 +1731,24 @@ const XubString& Menu::GetItemCommand( U
         return ImplGetSVEmptyStr();
 }
 
+void Menu::SetHelpCommand( USHORT nItemId, const XubString& rStr )
+{
+    MenuItemData* pData = pItemList->GetData( nItemId );
+
+    if ( pData )
+        pData->aHelpCommandStr = rStr;
+}
+
+const XubString& Menu::GetHelpCommand( USHORT nItemId ) const
+{
+    MenuItemData* pData = pItemList->GetData( nItemId );
+
+    if ( pData )
+        return pData->aHelpCommandStr;
+    else
+        return ImplGetSVEmptyStr();
+}
+    
 void Menu::SetHelpText( USHORT nItemId, const XubString& rStr )
 {
     MenuItemData* pData = pItemList->GetData( nItemId );
@@ -2015,7 +2091,6 @@ void Menu::ImplPaint( Window* pWin, USHO
         aTopLeft.X() = pLogo->aBitmap.GetSizePixel().Width();
 
     Size aOutSz = pWin->GetOutputSizePixel();
-    long nMaxY = aOutSz.Height() - nBorder;
     USHORT nCount = (USHORT)pItemList->Count();
     if( bLayout )
         mpLayoutData->m_aVisibleItemBoundRects.clear();
@@ -2244,6 +2319,23 @@ Menu* Menu::ImplFindSelectMenu()
     return pSelMenu;
 }
 
+Menu* Menu::ImplFindMenu( USHORT nItemId )
+{
+    Menu* pSelMenu = NULL;
+
+    for ( ULONG n = GetItemList()->Count(); n && !pSelMenu; )
+    {
+        MenuItemData* pData = GetItemList()->GetDataFromPos( --n );
+
+        if( pData->nId == nItemId )
+            pSelMenu = this;
+        else if ( pData->pSubMenu )
+            pSelMenu = pData->pSubMenu->ImplFindMenu( nItemId );
+    }
+
+    return pSelMenu;
+}
+
 void Menu::RemoveDisabledEntries( BOOL bCheckPopups, BOOL bRemoveEmptyPopups )
 {
     for ( USHORT n = 0; n < GetItemCount(); n++ )
@@ -2358,7 +2445,7 @@ Rectangle Menu::GetCharacterBounds( USHO
         ImplFillLayoutData();
     if( mpLayoutData )
     {
-        for( int i = 0; i < (int) mpLayoutData->m_aLineItemIds.size(); i++ )
+        for( size_t i = 0; i < mpLayoutData->m_aLineItemIds.size(); i++ )
         {
             if( mpLayoutData->m_aLineItemIds[i] == nItemID )
             {
@@ -2380,7 +2467,7 @@ long Menu::GetIndexForPoint( const Point
     if( mpLayoutData )
     {
         nIndex = mpLayoutData->GetIndexForPoint( rPoint );
-        for( int i = 0; i < (int) mpLayoutData->m_aLineIndices.size(); i++ )
+        for( size_t i = 0; i < mpLayoutData->m_aLineIndices.size(); i++ )
         {
             if( mpLayoutData->m_aLineIndices[i] <= nIndex &&
                 (i == mpLayoutData->m_aLineIndices.size()-1 || mpLayoutData->m_aLineIndices[i+1] > nIndex) )
@@ -2414,7 +2501,7 @@ Pair Menu::GetItemStartEnd( USHORT nItem
     if( ! mpLayoutData )
         ImplFillLayoutData();
 
-    for( long i = 0; i < (long) mpLayoutData->m_aLineItemIds.size(); i++ )
+    for( size_t i = 0; i < mpLayoutData->m_aLineItemIds.size(); i++ )
         if( mpLayoutData->m_aLineItemIds[i] == nItem )
             return GetLineStartEnd( i );
 
@@ -2426,7 +2513,7 @@ USHORT Menu::GetDisplayItemId( long nLin
     USHORT nItemId = 0;
     if( ! mpLayoutData )
         ImplFillLayoutData();
-    if( mpLayoutData && nLine >= 0 && nLine < (long) mpLayoutData->m_aLineItemIds.size() )
+    if( mpLayoutData && ( nLine >= 0 ) && ( nLine < (long)mpLayoutData->m_aLineItemIds.size() ) )
         nItemId = mpLayoutData->m_aLineItemIds[nLine];
     return nItemId;
 }
@@ -2498,21 +2585,42 @@ XubString Menu::GetAccessibleDescription
         return ImplGetSVEmptyStr();
 }
 
+void Menu::ImplSetSalMenu( SalMenu *pSalMenu )
+{
+    if( mpSalMenu )
+        ImplGetSVData()->mpDefInst->DestroyMenu( mpSalMenu );
+    mpSalMenu = pSalMenu;
+}
+
+BOOL Menu::GetSystemMenuData( SystemMenuData* pData ) const
+{
+    Menu* pMenu = (Menu*)this;
+    if( pData && pMenu->ImplGetSalMenu() )
+    {
+        pMenu->ImplGetSalMenu()->GetSystemMenuData( pData );
+        return TRUE;
+    }
+    else
+        return FALSE;
+}
+
+
+
 // -----------
 // - MenuBar -
 // -----------
 
-MenuBar::MenuBar()
+MenuBar::MenuBar() : Menu( TRUE )
 {
-    bIsMenuBar          = TRUE;
+    mbDisplayable       = TRUE;
     mbCloserVisible     = FALSE;
     mbFloatBtnVisible   = FALSE;
     mbHideBtnVisible    = FALSE;
 }
 
-MenuBar::MenuBar( const MenuBar& rMenu )
+MenuBar::MenuBar( const MenuBar& rMenu ) : Menu( TRUE )
 {
-    bIsMenuBar          = TRUE;
+    mbDisplayable       = TRUE;
     mbCloserVisible     = FALSE;
     mbFloatBtnVisible   = FALSE;
     mbHideBtnVisible    = FALSE;
@@ -2520,9 +2628,9 @@ MenuBar::MenuBar( const MenuBar& rMenu )
     bIsMenuBar          = TRUE;
 }
 
-MenuBar::MenuBar( const ResId& rResId )
+MenuBar::MenuBar( const ResId& rResId ) : Menu ( TRUE )
 {
-    bIsMenuBar          = TRUE;
+    mbDisplayable       = TRUE;
     mbCloserVisible     = FALSE;
     mbFloatBtnVisible   = FALSE;
     mbHideBtnVisible    = FALSE;
@@ -2563,6 +2671,17 @@ void MenuBar::ShowButtons( BOOL bClose, 
     }
 }
 
+void MenuBar::SetDisplayable( BOOL bDisplayable )
+{
+    if( bDisplayable != mbDisplayable )
+    {
+        mbDisplayable = bDisplayable;
+        MenuBarWindow* pMenuWin = (MenuBarWindow*) ImplGetWindow();
+        if( pMenuWin )
+            pMenuWin->ImplLayoutChanged();
+    }
+}
+
 Window* MenuBar::ImplCreate( Window* pParent, Window* pWindow, MenuBar* pMenu )
 {
     if ( !pWindow )
@@ -2573,6 +2692,13 @@ Window* MenuBar::ImplCreate( Window* pPa
     ((MenuBarWindow*)pWindow)->SetMenu( pMenu );
     long nHeight = pMenu->ImplCalcSize( pWindow ).Height();
     if( nHeight < 20 ) nHeight = 20;   // leave enough space for closer
+
+    // depending on the native implementation or the displayable flag
+    // the menubar windows is supressed (ie, height=0)
+    if( !((MenuBar*) pMenu)->IsDisplayable() || 
+        ( pMenu->ImplGetSalMenu() && pMenu->ImplGetSalMenu()->VisibleMenuBar() ) )
+        nHeight = 0;
+
     pWindow->SetPosSizePixel( 0, 0, 0, nHeight, WINDOW_POSSIZE_HEIGHT );
     return pWindow;
 }
@@ -2591,6 +2717,12 @@ void MenuBar::ImplDestroy( MenuBar* pMen
 BOOL MenuBar::ImplHandleKeyEvent( const KeyEvent& rKEvent, BOOL bFromMenu )
 {
     BOOL bDone = FALSE;
+
+    // No keyboard processing when system handles the menu or our menubar is invisible
+    if( !IsDisplayable() || 
+        ( ImplGetSalMenu() && ImplGetSalMenu()->VisibleMenuBar() ) )
+        return bDone;
+
     // Enabled-Abfragen, falls diese Methode von einem anderen Fenster gerufen wurde...
     Window* pWin = ImplGetWindow();
     if ( pWin && pWin->IsEnabled() && pWin->IsInputEnabled() )
@@ -2621,6 +2753,70 @@ void MenuBar::SelectEntry( USHORT nId )
     }
 }
 
+// -----------------------------------------------------------------------
+
+// handler for native menu selection and command events
+
+BOOL MenuBar::HandleMenuActivateEvent( Menu *pMenu ) const
+{
+    if( pMenu )
+    {
+        pMenu->pStartedFrom = (Menu*)this;
+        pMenu->bInCallback = TRUE; 
+        pMenu->Activate();
+        pMenu->bInCallback = FALSE; 
+    }
+    return TRUE;
+}
+
+BOOL MenuBar::HandleMenuDeActivateEvent( Menu *pMenu ) const
+{
+    if( pMenu )
+    {
+        pMenu->pStartedFrom = (Menu*)this;
+        pMenu->bInCallback = TRUE; 
+        pMenu->Deactivate();
+        pMenu->bInCallback = FALSE; 
+    }
+    return TRUE;
+}
+
+BOOL MenuBar::HandleMenuHighlightEvent( Menu *pMenu, USHORT nEventId ) const
+{
+    if( !pMenu )
+        pMenu = ((Menu*) this)->ImplFindMenu( nEventId );
+    if( pMenu )
+    {
+        if( mnHighlightedItemPos != ITEMPOS_INVALID )
+            pMenu->ImplCallEventListeners( VCLEVENT_MENU_DEHIGHLIGHT, mnHighlightedItemPos );
+
+        pMenu->mnHighlightedItemPos = pMenu->GetItemPos( nEventId );
+        pMenu->nSelectedId = nEventId;
+        pMenu->pStartedFrom = (Menu*)this;
+        pMenu->ImplCallHighlight( pMenu->mnHighlightedItemPos );
+        return TRUE;
+    }
+    else
+        return FALSE;
+}
+
+BOOL MenuBar::HandleMenuCommandEvent( Menu *pMenu, USHORT nEventId ) const
+{
+    if( !pMenu )
+        pMenu = ((Menu*) this)->ImplFindMenu( nEventId );
+    if( pMenu )
+    {
+        pMenu->nSelectedId = nEventId;
+        pMenu->pStartedFrom = (Menu*)this;
+        pMenu->ImplSelect();
+        return TRUE;
+    }
+    else
+        return FALSE;
+}
+
+// -----------------------------------------------------------------------
+
 // BOOL PopupMenu::bAnyPopupInExecute = FALSE;
 
 PopupMenu::PopupMenu()
@@ -2717,6 +2913,7 @@ USHORT PopupMenu::Execute( Window* pWind
 
 USHORT PopupMenu::ImplExecute( Window* pW, const Rectangle& rRect, ULONG nPopupModeFlags, Menu* pSFrom, BOOL bPreSelectFirst )
 {
+
     // #59614# Mit TH abgesprochen dass die ASSERTION raus kommt,
     // weil es evtl. legitim ist...
 //  DBG_ASSERT( !PopupMenu::IsInExecute() || pSFrom, "PopupMenu::Execute() called in PopupMenu::Execute()" );
@@ -2815,7 +3012,7 @@ USHORT PopupMenu::ImplExecute( Window* p
     long nMaxHeight = pWin->GetDesktopRectPixel().GetHeight();
     if ( pStartedFrom && pStartedFrom->bIsMenuBar )
         nMaxHeight -= pW->GetSizePixel().Height();
-    long nLeft, nTop, nRight, nBottom;
+    sal_Int32 nLeft, nTop, nRight, nBottom;
     pWindow->GetBorder( nLeft, nTop, nRight, nBottom );
     nMaxHeight -= nTop+nBottom;
     if ( aSz.Height() > nMaxHeight )
@@ -3251,7 +3442,7 @@ IMPL_LINK( MenuFloatingWindow, Highlight
                 aItemTopLeft.Y() -= 2;
             else
             {
-                long nL, nT, nR, nB;
+                sal_Int32 nL, nT, nR, nB;
                 GetBorder( nL, nT, nR, nB );
                 aItemTopLeft.Y() -= nT;
             }
@@ -3430,10 +3621,7 @@ void MenuFloatingWindow::MouseButtonDown
     //if ( pActivePopup && pActivePopup->ImplGetWindow() && !pActivePopup->ImplGetFloatingWindow()->pActivePopup )
     //    pActivePopup->ImplGetFloatingWindow()->ToTop( TOTOP_NOGRABFOCUS );
 
-//  if ( !ImplIsMouseFollow() ) // Issuezilla#591
-    {
-        ImplHighlightItem( rMEvt, TRUE );
-    }
+    ImplHighlightItem( rMEvt, TRUE );
 
     nMBDownPos = nHighlightedItem;
 }
@@ -3470,21 +3658,19 @@ void MenuFloatingWindow::MouseMove( cons
 
     if ( rMEvt.IsLeaveWindow() )
     {
-        if ( ImplIsMouseFollow() || ( rMEvt.GetButtons() == MOUSE_LEFT ) )
-        {
-            // #102461# do not remove highlight if a popup menu is open at this position
-            MenuItemData* pData = pMenu->pItemList->GetDataFromPos( nHighlightedItem );
-            // close popup with some delayed if we leave somewhere else
-            if( pActivePopup && pData && pData->pSubMenu != pActivePopup )
-                pActivePopup->ImplGetFloatingWindow()->aSubmenuCloseTimer.Start();
+        // #102461# do not remove highlight if a popup menu is open at this position
+        MenuItemData* pData = pMenu->pItemList->GetDataFromPos( nHighlightedItem );
+        // close popup with some delayed if we leave somewhere else
+        if( pActivePopup && pData && pData->pSubMenu != pActivePopup )
+            pActivePopup->ImplGetFloatingWindow()->aSubmenuCloseTimer.Start();
+
+        if( !pActivePopup || (pData && pData->pSubMenu != pActivePopup ) )
+            ChangeHighlightItem( ITEMPOS_INVALID, FALSE );
 
-            if( !pActivePopup || (pData && pData->pSubMenu != pActivePopup ) )
-                ChangeHighlightItem( ITEMPOS_INVALID, FALSE );
-        }
         if ( IsScrollMenu() )
             ImplScroll( rMEvt.GetPosPixel() );
     }
-    else if ( ImplIsMouseFollow() || ( rMEvt.GetButtons() == MOUSE_LEFT ) )
+    else
     {
         aSubmenuCloseTimer.Stop();
 		if( bIgnoreFirstMove )
@@ -3768,7 +3954,7 @@ void MenuFloatingWindow::ImplCursorUpDow
 		}
 		else
 		{
-			n = -1;
+			n = (USHORT)-1;
 			nLoop = n+1;
 		}
 	}
@@ -4135,6 +4321,15 @@ void MenuBarWindow::SetMenu( MenuBar* pM
         aHideBtn.Show( pMen->HasHideButton() );
     }
     Invalidate();
+
+    // show and connect native menubar
+    if( pMenu && pMenu->ImplGetSalMenu() )
+    {
+        if( pMenu->ImplGetSalMenu()->VisibleMenuBar() )
+            ImplGetFrame()->SetMenu( pMenu->ImplGetSalMenu() );
+
+        pMenu->ImplGetSalMenu()->SetFrame( ImplGetFrame() );
+    }
 }
 
 void MenuBarWindow::ShowButtons( BOOL bClose, BOOL bFloat, BOOL bHide )
@@ -4253,7 +4448,7 @@ void MenuBarWindow::MouseButtonDown( con
     USHORT nEntry = ImplFindEntry( rMEvt.GetPosPixel() );
     if ( ( nEntry != ITEMPOS_INVALID ) && ( nEntry != nHighlightedItem ) )
     {
-        ChangeHighlightItem( nEntry, ImplIsMouseFollow() ? FALSE : TRUE );
+        ChangeHighlightItem( nEntry, FALSE );
     }
     else
     {
@@ -4279,8 +4474,7 @@ void MenuBarWindow::MouseMove( const Mou
 	}
 
     USHORT nEntry = ImplFindEntry( rMEvt.GetPosPixel() );
-    if ( ( nEntry != ITEMPOS_INVALID ) && ( nEntry != nHighlightedItem )
-         && ( ImplIsMouseFollow() || ( rMEvt.GetButtons() == MOUSE_LEFT ) ) )
+    if ( ( nEntry != ITEMPOS_INVALID ) && ( nEntry != nHighlightedItem ) )
         ChangeHighlightItem( nEntry, FALSE );
 }
 
@@ -4468,7 +4662,7 @@ BOOL MenuBarWindow::ImplHandleKeyEvent( 
             USHORT nLoop = n;
 
 			if( nCode == KEY_HOME )
-				{ n = -1; nLoop = n+1; }
+				{ n = (USHORT)-1; nLoop = n+1; }
 			if( nCode == KEY_END )
 				{ n = pMenu->GetItemCount(); nLoop = n-1; }
 
@@ -4573,7 +4767,15 @@ BOOL MenuBarWindow::ImplHandleKeyEvent( 
 
 void MenuBarWindow::Paint( const Rectangle& rRect )
 {
+
+    // no VCL paint if native menus
+    if( pMenu->ImplGetSalMenu() && pMenu->ImplGetSalMenu()->VisibleMenuBar() )
+    {
+        ImplGetFrame()->DrawMenuBar();
+        return;
+    }
+
     SetFillColor (GetSettings ().GetStyleSettings ().GetMenuColor ());
     pMenu->ImplPaint( this, 0 );
     if ( nHighlightedItem != ITEMPOS_INVALID )
         HighlightItem( nHighlightedItem, TRUE );
@@ -4695,6 +4896,27 @@ void MenuBarWindow::StateChanged( StateC
 
 }
 
+void MenuBarWindow::ImplLayoutChanged()
+{
+    ImplInitMenuWindow( this, TRUE, TRUE );
+    // Falls sich der Font geaendert hat.
+    long nHeight = pMenu->ImplCalcSize( this ).Height();
+    if( nHeight < 20 ) nHeight = 20;   // leave enough space for closer
+
+    // depending on the native implementation or the displayable flag
+    // the menubar windows is supressed (ie, height=0)
+    if( !((MenuBar*) pMenu)->IsDisplayable() || 
+        ( pMenu->ImplGetSalMenu() && pMenu->ImplGetSalMenu()->VisibleMenuBar() ) )
+        nHeight = 0;
+
+    SetPosSizePixel( 0, 0, 0, nHeight, WINDOW_POSSIZE_HEIGHT );
+    GetParent()->Resize();
+    Invalidate();
+    Resize();
+    if( pMenu )
+        pMenu->ImplKillLayoutData();
+}
+
 void MenuBarWindow::DataChanged( const DataChangedEvent& rDCEvt )
 {
     Window::DataChanged( rDCEvt );
@@ -4704,16 +4926,7 @@ void MenuBarWindow::DataChanged( const D
          ((rDCEvt.GetType() == DATACHANGED_SETTINGS) &&
           (rDCEvt.GetFlags() & SETTINGS_STYLE)) )
     {
-        ImplInitMenuWindow( this, TRUE, TRUE );
-        // Falls sich der Font geaendert hat.
-        long nHeight = pMenu->ImplCalcSize( this ).Height();
-        if( nHeight < 20 ) nHeight = 20;   // leave enough space for closer
-        SetPosSizePixel( 0, 0, 0, nHeight, WINDOW_POSSIZE_HEIGHT );
-        GetParent()->Resize();
-        Invalidate();
-        Resize();
-        if( pMenu )
-            pMenu->ImplKillLayoutData();
+        ImplLayoutChanged();
     }
 }
 
Index: vcl/source/window/mnemonic.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/mnemonic.cxx,v
retrieving revision 1.12.46.3
retrieving revision 1.16
diff -u -p -u -r1.12.46.3 -r1.16
--- vcl/source/window/mnemonic.cxx	15 Jan 2004 14:04:41 -0000	1.12.46.3
+++ vcl/source/window/mnemonic.cxx	2 Feb 2004 18:23:36 -0000	1.16
@@ -58,8 +58,6 @@
  *
  *
  ************************************************************************/
-
-#define _SV_MNEMONIC_CXX
 
 #include <string.h>
 #include <svapp.hxx>
Index: vcl/source/window/msgbox.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/msgbox.cxx,v
retrieving revision 1.10
retrieving revision 1.12
diff -u -p -u -r1.10 -r1.12
--- vcl/source/window/msgbox.cxx	17 Apr 2003 15:19:21 -0000	1.10
+++ vcl/source/window/msgbox.cxx	6 Jan 2004 14:14:46 -0000	1.12
@@ -59,8 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_MSGBOX_CXX
-
 #ifndef _SV_SVIDS_HRC
 #include <svids.hrc>
 #endif
@@ -92,13 +90,13 @@
 #include <button.hxx>
 #endif
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_MNEMONIC_HXX
 #include <mnemonic.hxx>
 #endif
 
-#pragma hdrstop
+
 
 // =======================================================================
 
@@ -226,7 +224,7 @@ MessBox::MessBox( Window* pParent, const
 	USHORT nLoDefButton = ReadShortRes();
 	USHORT nHiHelpId	= ReadShortRes();
 	USHORT nLoHelpId	= ReadShortRes();
-	USHORT bSysModal	= ReadShortRes();
+	/* USHORT bSysModal	= */ ReadShortRes();
 	SetHelpId( ((ULONG)nHiHelpId << 16) + nLoHelpId );
 	WinBits nBits = (((ULONG)nHiButtons << 16) + nLoButtons) |
 					(((ULONG)nHiDefButton << 16) + nLoDefButton);
Index: vcl/source/window/scrwnd.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/scrwnd.cxx,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -p -u -r1.2 -r1.3
--- vcl/source/window/scrwnd.cxx	6 Jul 2001 16:06:21 -0000	1.2
+++ vcl/source/window/scrwnd.cxx	6 Jan 2004 14:15:10 -0000	1.3
@@ -97,11 +97,11 @@
 ImplWheelWindow::ImplWheelWindow( Window* pParent ) :
             FloatingWindow  ( pParent, 0 ),
             mnRepaintTime   ( 1UL ),
-            mnActDist       ( 0UL ),
+            mnTimeout       ( DEF_TIMEOUT ),
             mnWheelMode     ( WHEELMODE_NONE ),
+            mnActDist       ( 0UL ),
             mnActDeltaX     ( 0L ),
-            mnActDeltaY     ( 0L ),
-            mnTimeout       ( DEF_TIMEOUT )
+            mnActDeltaY     ( 0L )
 {
     // we need a parent
     DBG_ASSERT( pParent, "ImplWheelWindow::ImplWheelWindow(): Parent not set!" );
Index: vcl/source/window/seleng.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/seleng.cxx,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -p -u -r1.2 -r1.3
--- vcl/source/window/seleng.cxx	4 Apr 2002 09:22:32 -0000	1.2
+++ vcl/source/window/seleng.cxx	1 Dec 2003 13:39:23 -0000	1.3
@@ -64,7 +64,7 @@
 #include <seleng.hxx>
 #include <tools/debug.hxx>
 
-#pragma hdrstop
+
 
 
 inline BOOL SelectionEngine::ShouldDeselect( BOOL bModifierKey1 ) const
Index: vcl/source/window/split.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/split.cxx,v
retrieving revision 1.8
retrieving revision 1.12
diff -u -p -u -r1.8 -r1.12
--- vcl/source/window/split.cxx	14 Aug 2002 14:05:52 -0000	1.8
+++ vcl/source/window/split.cxx	25 Jun 2004 17:09:38 -0000	1.12
@@ -59,10 +60,8 @@
  *
  ************************************************************************/
 
-#define _SV_SPLIT_CXX
-
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_EVENT_HXX
 #include <event.hxx>
@@ -341,7 +363,8 @@ void Splitter::Tracking( const TrackingE
 	}
 	else
 	{
-		Point aNewPos = mpRefWin->ScreenToOutputPixel( OutputToScreenPixel( rTEvt.GetMouseEvent().GetPosPixel() ) );
+		//Point aNewPos = mpRefWin->ScreenToOutputPixel( OutputToScreenPixel( rTEvt.GetMouseEvent().GetPosPixel() ) );
+		Point aNewPos = mpRefWin->NormalizedScreenToOutputPixel( OutputToNormalizedScreenPixel( rTEvt.GetMouseEvent().GetPosPixel() ) );
 		ImplSplitMousePos( aNewPos );
 		Splitting( aNewPos );
 		ImplSplitMousePos( aNewPos );
@@ -667,7 +690,6 @@ void Splitter::KeyInput( const KeyEvent&
     Splitter *pSibling = ImplFindSibling();
     KeyCode aKeyCode = rKEvt.GetKeyCode();
     USHORT nCode = aKeyCode.GetCode();
-	BOOL bForwardKey = FALSE;
     switch ( nCode )
     {
         case KEY_UP:
Index: vcl/source/window/splitwin.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/splitwin.cxx,v
retrieving revision 1.5
retrieving revision 1.7
diff -u -p -u -r1.5 -r1.7
--- vcl/source/window/splitwin.cxx	17 Apr 2003 15:19:34 -0000	1.5
+++ vcl/source/window/splitwin.cxx	6 Jan 2004 14:16:03 -0000	1.7
@@ -59,8 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_SPLITWIN_CXX
-
 #include <string.h>
 
 #ifndef _LIST_HXX
@@ -70,8 +68,8 @@
 #include <tools/debug.hxx>
 #endif
 
-#ifndef _SV_RCID_H
-#include <rcid.h>
+#ifndef _TOOLS_RCID_H
+#include <tools/rcid.h>
 #endif
 #ifndef _SV_EVENT_HXX
 #include <event.hxx>
@@ -106,7 +104,7 @@
 #endif
 #undef private
 
-#pragma hdrstop
+
 
 // =======================================================================
 
@@ -1895,7 +1893,6 @@ void SplitWindow::ImplDrawAutoHide( BOOL
 {
 	if ( mbAutoHide )
 	{
-		const StyleSettings& rStyleSettings = GetSettings().GetStyleSettings();
 		Rectangle aTempRect;
 		ImplGetAutoHideRect( aTempRect );
 
@@ -1998,7 +1995,6 @@ void SplitWindow::ImplDrawFadeIn( BOOL b
 {
 	if ( mbFadeIn )
 	{
-		const StyleSettings& rStyleSettings = GetSettings().GetStyleSettings();
 		Rectangle		aTempRect;
 		Image			aImage;
 		ImplGetFadeInRect( aTempRect );
@@ -2036,7 +2032,6 @@ void SplitWindow::ImplDrawFadeOut( BOOL 
 {
 	if ( mbFadeOut )
 	{
-		const StyleSettings& rStyleSettings = GetSettings().GetStyleSettings();
 		Rectangle		aTempRect;
 		Image			aImage;
 		ImplGetFadeOutRect( aTempRect );
Index: vcl/source/window/status.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/status.cxx,v
retrieving revision 1.9
retrieving revision 1.12
diff -u -p -u -r1.9 -r1.12
--- vcl/source/window/status.cxx	27 Mar 2003 17:58:23 -0000	1.9
+++ vcl/source/window/status.cxx	10 May 2004 15:50:35 -0000	1.12
@@ -59,8 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_STATUS_CXX
-
 #ifndef _LIST_HXX
 #include <tools/list.hxx>
 #endif
@@ -69,7 +67,7 @@
 #endif
 
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
@@ -90,7 +88,7 @@
 #include <status.hxx>
 #endif
 
-#pragma hdrstop
+
 
 // =======================================================================
 
@@ -136,11 +134,14 @@ static Point ImplGetItemTextPos( const S
 {
 	long nX;
 	long nY;
+    long delta = (rTextSize.Height()/4) + 1;
+    if( delta + rTextSize.Width() > rRectSize.Width() )
+        delta = 0;
 
 	if ( nStyle & SIB_LEFT )
-		nX = 0;
+		nX = delta;
 	else if ( nStyle & SIB_RIGHT )
-		nX = rRectSize.Width()-rTextSize.Width();
+		nX = rRectSize.Width()-rTextSize.Width()-delta;
 	else // SIB_CENTER
 		nX = (rRectSize.Width()-rTextSize.Width())/2;
 	nY = (rRectSize.Height()-rTextSize.Height())/2 + 1;
@@ -497,10 +498,6 @@ void StatusBar::ImplDrawItem( BOOL bOffS
 
 // -----------------------------------------------------------------------
 
-#ifdef _MSC_VER
-#pragma optimize( "", off )
-#endif
-
 void DrawProgress( Window* pWindow, const Point& rPos,
 				   long nOffset, long nPrgsWidth, long nPrgsHeight,
 				   USHORT nPercent1, USHORT nPercent2, USHORT nPercentCount )
@@ -569,10 +566,6 @@ void DrawProgress( Window* pWindow, cons
 		pWindow->Flush();
 	}
 }
-
-#ifdef _MSC_VER
-#pragma optimize( "", on )
-#endif
 
 // -----------------------------------------------------------------------
 
Index: vcl/source/window/syschild.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/syschild.cxx,v
retrieving revision 1.1.1.1
retrieving revision 1.3
diff -u -p -u -r1.1.1.1 -r1.3
--- vcl/source/window/syschild.cxx	18 Sep 2000 17:05:40 -0000	1.1.1.1
+++ vcl/source/window/syschild.cxx	6 Jan 2004 14:16:59 -0000	1.3
@@ -59,9 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_SYSCHILD_CXX
-
-#ifndef REMOTE_APPSERVER
 #ifndef _SV_SVSYS_HXX
 #include <svsys.h>
 #endif
@@ -75,10 +72,9 @@
 #ifndef _SV_SALOBJ_HXX
 #include <salobj.hxx>
 #endif
-#endif
 
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
@@ -93,11 +89,9 @@
 #include <syschild.hxx>
 #endif
 
-#pragma hdrstop
 
-// =======================================================================
 
-#ifndef REMOTE_APPSERVER
+// =======================================================================
 
 long ImplSysChildProc( void* pInst, SalObject* /* pObject */,
 					   USHORT nEvent, const void* /* pEvent */ )
@@ -146,19 +140,14 @@ long ImplSysChildProc( void* pInst, SalO
 	return nRet;
 }
 
-#endif
-
 // =======================================================================
 
 void SystemChildWindow::ImplInit( Window* pParent, WinBits nStyle )
 {
-#ifndef REMOTE_APPSERVER
 	mpSysObj = ImplGetSVData()->mpDefInst->CreateObject( pParent->ImplGetFrame() );
-#endif
 
 	Window::ImplInit( pParent, nStyle, NULL );
 
-#ifndef REMOTE_APPSERVER
 	// Wenn es ein richtiges SysChild ist, dann painten wir auch nicht
 	if ( GetSystemData() )
 	{
@@ -166,7 +155,6 @@ void SystemChildWindow::ImplInit( Window
 		SetParentClipMode( PARENTCLIPMODE_CLIP );
 		SetBackground();
 	}
-#endif
 }
 
 // -----------------------------------------------------------------------
@@ -195,27 +183,21 @@ SystemChildWindow::SystemChildWindow( Wi
 
 SystemChildWindow::~SystemChildWindow()
 {
-#ifndef REMOTE_APPSERVER
 	Hide();
 	if ( mpSysObj )
 	{
 		ImplGetSVData()->mpDefInst->DestroyObject( mpSysObj );
 		mpSysObj = NULL;
 	}
-#endif
 }
 
 // -----------------------------------------------------------------------
 
 const SystemEnvData* SystemChildWindow::GetSystemData() const
 {
-#ifndef REMOTE_APPSERVER
 	if ( mpSysObj )
 		return mpSysObj->GetSystemData();
 	else
 		return NULL;
-#else
-	return NULL;
-#endif
 }
 
Index: vcl/source/window/syswin.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/syswin.cxx,v
retrieving revision 1.33
retrieving revision 1.35
diff -u -p -u -r1.33 -r1.35
--- vcl/source/window/syswin.cxx	24 Apr 2003 16:32:28 -0000	1.33
+++ vcl/source/window/syswin.cxx	6 Jan 2004 14:17:23 -0000	1.35
@@ -59,20 +59,16 @@
  *
  ************************************************************************/
 
-#define _SV_SYSWIN_CXX
-
 #ifndef _DEBUG_HXX
 #include <tools/debug.hxx>
 #endif
 
-#ifndef REMOTE_APPSERVER
 #ifndef _SV_SVSYS_HXX
 #include <svsys.h>
 #endif
 #ifndef _SV_SALFRAME_HXX
 #include <salframe.hxx>
 #endif
-#endif
 
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
@@ -112,11 +105,6 @@
 #endif
 #include <unowrap.hxx>
 
-#ifdef REMOTE_APPSERVER
-#include "rmwindow.hxx"
-#endif
-
-#pragma hdrstop
 
 using namespace ::com::sun::star::uno;
 using namespace ::com::sun::star::lang;
@@ -257,10 +245,6 @@ BOOL SystemWindow::Close()
 
     Hide();
 
-    // Ist es das Applikationsfenster, dann beende die Applikation
-    if ( Application::GetAppWindow() == (const WorkWindow*)this )
-        GetpApp()->Quit();
-
     return TRUE;
 }
 
@@ -589,7 +573,6 @@ void SystemWindow::SetWindowStateData( c
 
     if ( pWindow->mbFrame )
     {
-#ifndef REMOTE_APPSERVER
         ULONG           nState = rData.GetState();
         SalFrameState   aState;
         aState.mnMask   = rData.GetMask();
@@ -646,11 +629,6 @@ void SystemWindow::SetWindowStateData( c
         }
 
         mpFrame->SetWindowState( &aState );
-#else
-        ByteString aStr;
-        ImplWindowStateToStr( rData, aStr );
-        mpFrame->SetWindowState( ::rtl::OUString( aStr.GetBuffer(), aStr.Len(), RTL_TEXTENCODING_ASCII_US ) );
-#endif
 
         // Syncrones Resize ausloesen, damit wir nach Moeglichkeit gleich
         // mit der richtigen Groesse rechnen
@@ -719,7 +697,6 @@ void SystemWindow::GetWindowStateData( W
 
     if ( pWindow->mbFrame )
     {
-#ifndef REMOTE_APPSERVER
         SalFrameState aState;
         aState.mnMask = 0xFFFFFFFF;
         if ( mpFrame->GetWindowState( &aState ) )
@@ -743,13 +720,6 @@ void SystemWindow::GetWindowStateData( W
         }
         else
             rData.SetMask( 0 );
-#else
-        ::rtl::OUString aStr( mpFrame->GetWindowState() );
-        ByteString aByteStr( aStr.getStr(), aStr.getLength(), RTL_TEXTENCODING_ASCII_US );
-        WindowStateData aData;
-        ImplWindowStateFromStr( aData, aByteStr );
-        rData = aData;
-#endif
     }
     else
     {
Index: vcl/source/window/tabdlg.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/tabdlg.cxx,v
retrieving revision 1.1.1.1
retrieving revision 1.3
diff -u -p -u -r1.1.1.1 -r1.3
--- vcl/source/window/tabdlg.cxx	18 Sep 2000 17:05:40 -0000	1.1.1.1
+++ vcl/source/window/tabdlg.cxx	6 Jan 2004 14:17:49 -0000	1.3
@@ -59,8 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_TABDLG_CXX
-
 #ifndef _SV_FIXED_HXX
 #include <fixed.hxx>
 #endif
@@ -71,10 +69,10 @@
 #include <tabdlg.hxx>
 #endif
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 
-#pragma hdrstop
+
 
 // =======================================================================
 
Index: vcl/source/window/tabpage.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/tabpage.cxx,v
retrieving revision 1.6
retrieving revision 1.10
diff -u -p -u -r1.6 -r1.10
--- vcl/source/window/tabpage.cxx	12 Jun 2003 07:51:42 -0000	1.6
+++ vcl/source/window/tabpage.cxx	10 May 2004 15:50:49 -0000	1.10
@@ -59,12 +59,10 @@
  *
  ************************************************************************/
 
-#define _SV_TABPAGE_CXX
-
 #include <tools/ref.hxx>
 
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
@@ -86,7 +84,7 @@
 #include <com/sun/star/accessibility/XAccessible.hpp>
 #endif
 
-#pragma hdrstop
+
 
 
 // =======================================================================
@@ -99,6 +97,11 @@ void TabPage::ImplInit( Window* pParent,
     Window::ImplInit( pParent, nStyle, NULL );
 
     ImplInitSettings();
+
+    // if the tabpage is drawn (ie filled) by a native widget, make sure all contols will have transparent background
+    // otherwise they will paint with a wrong background
+    if( IsNativeControlSupported(CTRL_TAB_BODY, PART_ENTIRE_CONTROL) && GetParent() && (GetParent()->GetType() == WINDOW_TABCONTROL) )
+        EnableChildTransparentMode( TRUE );
 }
 
 // -----------------------------------------------------------------------
@@ -177,6 +180,30 @@ void TabPage::DataChanged( const DataCha
     {
         ImplInitSettings();
         Invalidate();
+    }
+}
+
+// -----------------------------------------------------------------------
+
+void TabPage::Paint( const Rectangle& rRect )
+{
+    // draw native tabpage only inside tabcontrols, standalone tabpages look ugly (due to bad dialog design)
+    if( IsNativeControlSupported(CTRL_TAB_BODY, PART_ENTIRE_CONTROL) && GetParent() && (GetParent()->GetType() == WINDOW_TABCONTROL) )
+    {
+        const ImplControlValue aControlValue( BUTTONVALUE_DONTKNOW, rtl::OUString(), 0 );
+
+        ControlState nState = CTRL_STATE_ENABLED;
+        int part = PART_ENTIRE_CONTROL;
+        if ( !IsEnabled() )
+            nState &= ~CTRL_STATE_ENABLED;
+        if ( HasFocus() )
+            nState |= CTRL_STATE_FOCUSED;
+        Point aPoint;
+        // pass the whole window region to NWF as the tab body might be a gradient or bitmap
+        // that has to be scaled properly, clipping makes sure that we do not paint too much
+        Region aCtrlRegion( Rectangle( aPoint, GetOutputSizePixel() ) );
+        DrawNativeControl( CTRL_TAB_BODY, part, aCtrlRegion, nState,
+                aControlValue, rtl::OUString() );
     }
 }
 
Index: vcl/source/window/taskpanelist.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/taskpanelist.cxx,v
retrieving revision 1.14
retrieving revision 1.15
diff -u -p -u -r1.14 -r1.15
--- vcl/source/window/taskpanelist.cxx	21 Nov 2002 10:28:30 -0000	1.14
+++ vcl/source/window/taskpanelist.cxx	6 Jan 2004 14:19:09 -0000	1.15
@@ -61,8 +61,8 @@
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
 #endif
-#ifndef _RCID_H
-#include <rcid.h>
+#ifndef _TOOLS_RCID_H
+#include <tools/rcid.h>
 #endif
 #ifndef _SV_DOCKWIN_HXX
 #include <dockwin.hxx>
@@ -199,7 +199,6 @@ BOOL TaskPaneList::HandleKeyEvent( KeyEv
         bSplitterOnly = bF6 && aKeyCode.IsMod1() && aKeyCode.IsShift();
 
 		// is the focus in the list ?
-		BOOL bHasFocus = FALSE;
 		::std::vector< Window* >::iterator p = mTaskPanes.begin();
 		while( p != mTaskPanes.end() )
         {
Index: vcl/source/window/toolbox.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/toolbox.cxx,v
retrieving revision 1.61.82.1
retrieving revision 1.69
diff -u -p -u -r1.61.82.1 -r1.69
--- vcl/source/window/toolbox.cxx	9 Jan 2004 18:13:55 -0000	1.61.82.1
+++ vcl/source/window/toolbox.cxx	10 Jun 2004 17:18:47 -0000	1.69
@@ -59,12 +59,13 @@
  *
  ************************************************************************/
 
-#define _SV_TOOLBOX_CXX
-
 #include <string.h>
-
 #include <vector>
 
+#ifndef _SV_SVSYS_HXX
+#include <svsys.h>
+#endif
+
 #ifndef _LIST_HXX
 #include <tools/list.hxx>
 #endif
@@ -73,7 +74,7 @@
 #endif
 
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
@@ -116,11 +114,8 @@
 #ifndef _SV_BITMAP_HXX
 #include <bitmap.hxx>
 #endif
-#ifndef _SV_POLY_HXX
-#include <poly.hxx>
-#endif
-#ifndef _SV_SVSYS_HXX
-#include <svsys.h>
+#ifndef _TL_POLY_HXX
+#include <tools/poly.hxx>
 #endif
 #ifndef _SV_SALFRAME_HXX
 #include <salframe.hxx>
@@ -382,40 +377,6 @@ static ImplTBDragMgr* ImplGetTBDragMgr()
 
 static void ImplDrawConfigFrame( ToolBox* pThis, const Rectangle& rRect )
 {
-/*
-    Color   aBlackColor( COL_BLACK );
-    Pen     aOldPen;
-    Brush   aOldBrush;
-    Pen     aNullPen( PEN_NULL );
-
-    aOldPen = pThis->GetPen();
-    pThis->SetPen( aNullPen );
-    if ( pThis->IsSVLook() )
-    {
-        Color aFaceColor( COL_3DFACE );
-        Brush aBrush( aFaceColor, aBlackColor, BRUSH_50 );
-        aOldBrush = pThis->GetFillInBrush();
-        pThis->SetFillInBrush( aBrush );
-    }
-    else
-    {
-        Color aWhiteColor( COL_WHITE );
-        Brush aBrush( aBlackColor, aWhiteColor, BRUSH_50 );
-        aOldBrush = pThis->GetFillInBrush();
-        pThis->SetFillInBrush( aBrush );
-    }
-    pThis->DrawRect( Rectangle( rRect.Left(), rRect.Top(),
-                                rRect.Right(), rRect.Top()+2 ) );
-    pThis->DrawRect( Rectangle( rRect.Left(), rRect.Top(),
-                                rRect.Left()+2, rRect.Bottom() ) );
-    pThis->DrawRect( Rectangle( rRect.Left(), rRect.Bottom()-2,
-                                rRect.Right(), rRect.Bottom() ) );
-    pThis->DrawRect( Rectangle( rRect.Right()-2, rRect.Top(),
-                                rRect.Right(), rRect.Bottom() ) );
-
-    pThis->SetPen( aOldPen );
-    pThis->SetFillInBrush( aOldBrush );
-*/
 }
 
 // -----------------------------------------------------------------------
@@ -956,38 +917,6 @@ ImplTBDragMgr::~ImplTBDragMgr()
 
 ToolBox* ImplTBDragMgr::FindToolBox( const Rectangle& rRect )
 {
-#if 0
-    // ToolBox suchen
-    Point aPos = rRect.Center();
-    ToolBox* pBox = mpBoxList->First();
-    while ( pBox )
-    {
-        if ( pBox->IsReallyVisible() )
-        {
-            Window* pWindow = pBox->ImplGetFrameWindow()->FindWindow( aPos );
-            if ( pWindow && pBox->IsWindowOrChild( pWindow ) )
-                return pBox;
-        }
-        pBox = mpBoxList->Next();
-    }
-
-    // Falls so nicht gefunden wurde, suchen wir die ToolBox ueber das Rechteck
-    pBox = mpBoxList->First();
-    while ( pBox )
-    {
-        if ( pBox->IsReallyVisible() )
-        {
-            if ( pBox->IsFloatingMode() )
-            {
-                Rectangle aTempRect( pBox->GetPosPixel(), pBox->GetSizePixel() );
-                if ( aTempRect.IsOver( rRect ) )
-                    return pBox;
-            }
-        }
-
-        pBox = mpBoxList->Next();
-    }
-#endif
     ToolBox* pBox = mpBoxList->First();
     while ( pBox )
     {
@@ -1070,7 +999,6 @@ void ImplTBDragMgr::Dragging( const Poin
     if ( mnLineMode )
     {
         ImplLineSizing( mpDragBox, rPos, maRect, mnLineMode );
-        Point aPos = mpDragBox->OutputToScreenPixel( rPos );
         Point aOff = mpDragBox->OutputToScreenPixel( Point() );
         maRect.Move( aOff.X(), aOff.Y() );
         mpDragBox->Docking( rPos, maRect );
@@ -1459,7 +1387,7 @@ void ToolBox::ImplInit( Window* pParent,
     mnRightBorder     = 0;
     mnBottomBorder    = 0;
     mnLastResizeDY    = 0;
-    mnOutStyle        = 0;
+    mnOutStyle        = TOOLBOX_STYLE_FLAT; // force flat buttons since NWF
     mnHighItemId      = 0;
     mnCurItemId       = 0;
     mnDownItemId      = 0;
@@ -1490,9 +1418,9 @@ void ToolBox::ImplInit( Window* pParent,
     mbDragging        = FALSE;
     mbHideStatusText  = FALSE;
     mbMenuStrings     = FALSE;
-    mbDummy1_Shift    = FALSE;
-    mbDummy2_KeyEvt   = FALSE;
-    mbDummy3_ChangingHighlight = FALSE;
+    mbIsShift		  = FALSE;
+    mbIsKeyEvent = FALSE;
+    mbChangingHighlight = FALSE;
     meButtonType      = BUTTON_SYMBOL;
     meAlign           = WINDOWALIGN_TOP;
     meLastStyle       = POINTER_ARROW;
@@ -2049,6 +1977,22 @@ USHORT ToolBox::ImplCalcBreaks( long nWi
 }
 
 // -----------------------------------------------------------------------
+namespace
+{
+    BOOL ImplFollowedByVisibleButton( std::vector< ImplToolItem >::iterator _aSeparator, std::vector< ImplToolItem >::iterator _aEnd )
+    {
+        std::vector< ImplToolItem >::iterator aLookup = _aSeparator;
+        while ( ++aLookup != _aEnd )
+        {
+            if ( aLookup->meType == TOOLBOXITEM_SEPARATOR )
+                return ImplFollowedByVisibleButton( aLookup, _aEnd );
+
+            if ( ( aLookup->meType == TOOLBOXITEM_BUTTON ) && aLookup->mbVisible )
+                return TRUE;
+        }
+        return FALSE;
+    }
+}
 
 void ToolBox::ImplFormat( BOOL bResize )
 {
@@ -2194,8 +2138,11 @@ void ToolBox::ImplFormat( BOOL bResize )
             // For items not visible, release resources only needed during
             // painting the items (on Win98, for example, these are system-wide
             // resources that are easily exhausted, so be nice):
-            it->maImage.ClearCaches();
-            it->maHighImage.ClearCaches();
+            
+			/* !!!
+				it->maImage.ClearCaches();
+            	it->maHighImage.ClearCaches();
+			*/
 
             ++it;
         }
@@ -2290,18 +2237,7 @@ void ToolBox::ImplFormat( BOOL bResize )
                     {
                         // Feststellen ob dahinter ueberhaupt noch
                         // ein Item sichtbar ist
-                        temp_it = it+1;
-                        while ( temp_it != mpData->m_aItems.end() )
-                        {
-                            if ( (temp_it->meType == TOOLBOXITEM_SEPARATOR) ||
-                                 ((temp_it->meType == TOOLBOXITEM_BUTTON) &&
-                                  temp_it->mbVisible) )
-                            {
-                                it->mbVisible = TRUE;
-                                break;
-                            }
-                            ++temp_it;
-                        }
+                        it->mbVisible = ImplFollowedByVisibleButton( it, mpData->m_aItems.end() );
                     }
                     bLastSep = TRUE;
                 }
@@ -2491,8 +2427,11 @@ void ToolBox::ImplFormat( BOOL bResize )
                 // For items not visible, release resources only needed during
                 // painting the items (on Win98, for example, these are system-
                 // wide resources that are easily exhausted, so be nice):
-                it->maImage.ClearCaches();
+                
+				/* !!!
+				it->maImage.ClearCaches();
                 it->maHighImage.ClearCaches();
+				*/
             }
             ++it;
         }
@@ -2508,7 +2447,6 @@ IMPL_LINK( ToolBox, ImplUpdateHdl, void*
 {
     DBG_CHKTHIS( Window, ImplDbgCheckWindow );
 
-//#ifndef REMOTE_APPSERVER
     if( GetCurrentModButtons() & ( MOUSE_LEFT | MOUSE_MIDDLE | MOUSE_RIGHT ) )
     {
         mbFormat = TRUE;
@@ -2516,7 +2454,6 @@ IMPL_LINK( ToolBox, ImplUpdateHdl, void*
         maTimer.Start();
     }
     else
-//#endif
     {
         mbFormat = TRUE;
         ImplFormat();
@@ -2628,7 +2565,6 @@ static void SetToolArrowClipregion( Tool
                                long nSize = 6 )
 {
     WindowAlign     eAlign = pBox->meAlign;
-    long            n = 0;
     long            nHalfSize;
     if ( bLeft )
         eAlign = WINDOWALIGN_RIGHT;
@@ -3053,7 +2989,9 @@ void ToolBox::ImplDrawItem( USHORT nPos,
             {
                 nTempOffX++;
                 nTempOffY++;
-                if( pImage->HasMaskBitmap() )
+                
+				/* !!!
+				if( pImage->HasMaskBitmap() )
                 {
                     Color aMaskCol = GetpApp()->GetSettings().GetStyleSettings().GetHighlightColor();
                     USHORT h,s,b;
@@ -3063,6 +3001,8 @@ void ToolBox::ImplDrawItem( USHORT nPos,
                     aMaskCol = ImplHSBtoRGB( h, s, b );
                     DrawMask( Point( nTempOffX, nTempOffY ), pImage->GetMaskBitmap(), aMaskCol );
                 }
+				*/ 
+				
                 nTempOffX-=2;
                 nTempOffY-=2;
             }
@@ -3613,7 +3562,7 @@ void ToolBox::MouseMove( const MouseEven
             if ( mnCurPos != TOOLBOX_ITEM_NOTFOUND )
             {
                 ImplDrawItem( mnCurPos );
-                ImplCallEventListeners( VCLEVENT_TOOLBOX_HIGHLIGHTOFF, (void*) mnCurPos );
+                ImplCallEventListeners( VCLEVENT_TOOLBOX_HIGHLIGHTOFF, reinterpret_cast< void* >( mnCurPos ) );
             }
 
             mnCurPos = nNewPos;
@@ -3707,7 +3656,7 @@ void ToolBox::MouseMove( const MouseEven
                                     ImplHideFocus();
                                     USHORT nPos = GetItemPos( mnHighItemId );
                                     ImplDrawItem( nPos );
-                                    ImplCallEventListeners( VCLEVENT_TOOLBOX_HIGHLIGHTOFF, (void*) nPos );
+                                    ImplCallEventListeners( VCLEVENT_TOOLBOX_HIGHLIGHTOFF, reinterpret_cast< void* >( nPos ) );
                                 }
                                 mnHighItemId = it->mnId;
                                 ImplDrawItem( nTempPos, 2 );
@@ -3733,7 +3682,7 @@ void ToolBox::MouseMove( const MouseEven
             {
                 ImplDrawItem( nClearPos, (nClearPos == mnCurPos) ? TRUE : FALSE );
                 if( nClearPos != mnCurPos )
-                    ImplCallEventListeners( VCLEVENT_TOOLBOX_HIGHLIGHTOFF, (void*) nClearPos );
+                    ImplCallEventListeners( VCLEVENT_TOOLBOX_HIGHLIGHTOFF, reinterpret_cast< void* >( nClearPos ) );
             }
             ImplHideFocus();
             mnHighItemId = 0;
@@ -4745,9 +4687,9 @@ BOOL ToolBox::ImplActivateItem( KeyCode 
         if( pItem && pItem->mpWindow && HasFocus() )
         {
             ImplHideFocus();
-            mbDummy3_ChangingHighlight = TRUE;  // avoid focus change due to loose focus
+            mbChangingHighlight = TRUE;  // avoid focus change due to loose focus
             pItem->mpWindow->ImplControlFocus( GETFOCUS_TAB );
-            mbDummy3_ChangingHighlight = FALSE;
+            mbChangingHighlight = FALSE;
         }
         else
         {
@@ -4769,7 +4711,7 @@ BOOL ToolBox::ImplActivateItem( KeyCode 
 				}
             }
             mnMouseModifier = aKeyCode.GetModifier();
-            mbDummy2_KeyEvt = TRUE;
+            mbIsKeyEvent = TRUE;
             Activate();
             Click();
 
@@ -4782,7 +4724,7 @@ BOOL ToolBox::ImplActivateItem( KeyCode 
             ImplRemoveDel( &aDelData );
 
             Deactivate();
-            mbDummy2_KeyEvt = FALSE;
+            mbIsKeyEvent = FALSE;
             mnMouseModifier = 0;
         }
 	}
@@ -4829,14 +4771,14 @@ BOOL ToolBox::ImplOpenItem( KeyCode aKey
 		ImplToolItem* pItem = ImplGetItem( mnHighItemId );
 
 		mnMouseModifier = aKeyCode.GetModifier();
-		mbDummy1_Shift = TRUE;
-		mbDummy2_KeyEvt = TRUE;
+		mbIsShift = TRUE;
+		mbIsKeyEvent = TRUE;
 		Activate();
 		Click();
 		if (pItem->mnBits & TIB_REPEAT)
 			Select();
-		mbDummy2_KeyEvt = FALSE;
-		mbDummy1_Shift = FALSE;
+		mbIsKeyEvent = FALSE;
+		mbIsShift = FALSE;
 		mnMouseModifier = 0;
 	}
     else
@@ -5029,9 +4971,9 @@ void ToolBox::KeyInput( const KeyEvent& 
             {
                 Window *pFocusWindow = Application::GetFocusWindow();
                 ImplHideFocus();
-                mbDummy3_ChangingHighlight = TRUE;  // avoid focus change due to loose focus
+                mbChangingHighlight = TRUE;  // avoid focus change due to loose focus
                 pItem->mpWindow->ImplControlFocus( GETFOCUS_TAB );
-                mbDummy3_ChangingHighlight = FALSE;
+                mbChangingHighlight = FALSE;
                 if( pFocusWindow != Application::GetFocusWindow() )
                     Application::GetFocusWindow()->KeyInput( rKEvt );
             }
@@ -5177,10 +5119,10 @@ static USHORT ImplFindItemPos( const Imp
 void ToolBox::ImplChangeHighlight( ImplToolItem* pItem, BOOL bNoGrabFocus )
 {
     // avoid recursion due to focus change
-    if( mbDummy3_ChangingHighlight )
+    if( mbChangingHighlight )
         return;
 
-    mbDummy3_ChangingHighlight = TRUE;
+    mbChangingHighlight = TRUE;
 
 	ImplToolItem* pOldItem = NULL;
     USHORT        oldPos = 0;
@@ -5190,7 +5132,7 @@ void ToolBox::ImplChangeHighlight( ImplT
         ImplHideFocus();
         USHORT nPos = GetItemPos( mnHighItemId );
         ImplDrawItem( nPos, FALSE );
-        ImplCallEventListeners( VCLEVENT_TOOLBOX_HIGHLIGHTOFF, (void*) nPos );
+        ImplCallEventListeners( VCLEVENT_TOOLBOX_HIGHLIGHTOFF, reinterpret_cast< void* >( nPos ) );
 	    pOldItem = ImplGetItem( mnHighItemId );
         oldPos = ImplFindItemPos( pOldItem, mpData->m_aItems );
     }
@@ -5242,7 +5184,7 @@ void ToolBox::ImplChangeHighlight( ImplT
         mnCurPos = TOOLBOX_ITEM_NOTFOUND;
     }
 
-    mbDummy3_ChangingHighlight = FALSE;
+    mbChangingHighlight = FALSE;
 }
 
 // -----------------------------------------------------------------------
@@ -5289,7 +5231,6 @@ BOOL ToolBox::ImplChangeHighlightUpDn( B
         }
     }
 
-	ImplToolItem* pOldItem = pItem;
 	if( pItem )
 	{
         ULONG pos = ImplFindItemPos( pItem, mpData->m_aItems );
Index: vcl/source/window/toolbox2.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/toolbox2.cxx,v
retrieving revision 1.20.82.1
retrieving revision 1.25
diff -u -p -u -r1.20.82.1 -r1.25
--- vcl/source/window/toolbox2.cxx	9 Jan 2004 18:13:55 -0000	1.20.82.1
+++ vcl/source/window/toolbox2.cxx	21 May 2004 16:29:11 -0000	1.25
@@ -59,8 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_TOOLBOX_CXX
-
 #ifndef _LIST_HXX
 #include <tools/list.hxx>
 #endif
@@ -69,7 +67,7 @@
 #endif
 
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
@@ -468,24 +466,6 @@ void ToolBox::InsertItem( const ResId& r
 	if ( nObjMask & RSC_TOOLBOXITEM_HELPTEXT )
 		aItem.maHelpText = ReadStringRes();
 
-/*
-#ifndef WIN
-	static
-#endif
-		short nHelpMode = -1;
-	if( nHelpMode == -1 ) {
-		SvHelpSettings aHelpSettings;
-
-		GetpApp()->Property( aHelpSettings );
-		nHelpMode = aHelpSettings.nHelpMode;
-	}
-
-	if( (nHelpMode & HELPTEXTMODE_EXTERN) && aItem.aHelpText.Len() )
-		aItem.aHelpText.Erase();
-	if( (nHelpMode & HELPTEXTMODE_DEBUG) && !aItem.nHelpId )
-		aItem.aHelpText = "??? !aItem.nHelpId MP/W.P. ???";
-*/
-
 	if ( nObjMask & RSC_TOOLBOXITEM_BITMAP )
 	{
 		Bitmap aBmp = Bitmap( ResId( (RSHEADER_TYPE*)GetClassRes() ) );
@@ -541,7 +521,7 @@ void ToolBox::InsertItem( const ResId& r
 
     // Notify
 	USHORT nNewPos = ( nPos == TOOLBOX_APPEND ) ? ( mpData->m_aItems.size() - 1 ) : nPos;
-    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, (void*) nNewPos );
+    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, reinterpret_cast< void* >( nNewPos ) );
 }
 
 // -----------------------------------------------------------------------
@@ -561,7 +541,7 @@ void ToolBox::InsertItem( USHORT nItemId
 
     // Notify
     USHORT nNewPos = ( nPos == TOOLBOX_APPEND ) ? ( mpData->m_aItems.size() - 1 ) : nPos;
-    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, (void*) nNewPos );
+    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, reinterpret_cast< void* >(nNewPos ) );
 }
 
 // -----------------------------------------------------------------------
@@ -582,7 +562,7 @@ void ToolBox::InsertItem( USHORT nItemId
 
     // Notify
     USHORT nNewPos = ( nPos == TOOLBOX_APPEND ) ? ( mpData->m_aItems.size() - 1 ) : nPos;
-    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, (void*) nNewPos );
+    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, reinterpret_cast< void* >( nNewPos ) );
 }
 
 // -----------------------------------------------------------------------
@@ -602,7 +582,7 @@ void ToolBox::InsertItem( USHORT nItemId
 
     // Notify
     USHORT nNewPos = ( nPos == TOOLBOX_APPEND ) ? ( mpData->m_aItems.size() - 1 ) : nPos;
-    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, (void*) nNewPos );
+    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, reinterpret_cast< void* >( nNewPos ) );
 }
 
 // -----------------------------------------------------------------------
@@ -630,7 +610,7 @@ void ToolBox::InsertWindow( USHORT nItem
 
     // Notify
     USHORT nNewPos = ( nPos == TOOLBOX_APPEND ) ? ( mpData->m_aItems.size() - 1 ) : nPos;
-    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, (void*) nNewPos );
+    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, reinterpret_cast< void* >( nNewPos ) );
 }
 
 // -----------------------------------------------------------------------
@@ -648,7 +628,7 @@ void ToolBox::InsertSpace( USHORT nPos )
 
     // Notify
     USHORT nNewPos = ( nPos == TOOLBOX_APPEND ) ? ( mpData->m_aItems.size() - 1 ) : nPos;
-    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, (void*) nNewPos );
+    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, reinterpret_cast< void* >( nNewPos ) );
 }
 
 // -----------------------------------------------------------------------
@@ -668,7 +648,7 @@ void ToolBox::InsertSeparator( USHORT nP
 
     // Notify
     USHORT nNewPos = ( nPos == TOOLBOX_APPEND ) ? ( mpData->m_aItems.size() - 1 ) : nPos;
-    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, (void*) nNewPos );
+    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, reinterpret_cast< void* >( nNewPos ) );
 }
 
 // -----------------------------------------------------------------------
@@ -686,7 +666,7 @@ void ToolBox::InsertBreak( USHORT nPos )
 
     // Notify
     USHORT nNewPos = ( nPos == TOOLBOX_APPEND ) ? ( mpData->m_aItems.size() - 1 ) : nPos;
-    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, (void*) nNewPos );
+    ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, reinterpret_cast< void* >( nNewPos ) );
 }
 
 // -----------------------------------------------------------------------
@@ -719,7 +699,7 @@ void ToolBox::RemoveItem( USHORT nPos )
         mpData->ImplClearLayoutData();
 
         // Notify
-        ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMREMOVED, (void*) nPos );
+        ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMREMOVED, reinterpret_cast< void* >( nPos ) );
 	}
 }
 
@@ -749,11 +729,11 @@ void ToolBox::MoveItem( USHORT nItemId, 
 
         // Notify
         if( nPos < nNewPos )    // only send one event, all indices above this item are invalid anyway
-            ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMREMOVED, (void*) nPos );
+            ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMREMOVED, reinterpret_cast< void* >( nPos ) );
         else
 		{
 			USHORT nNewPos2 = ( nNewPos == TOOLBOX_APPEND ) ? ( mpData->m_aItems.size() - 1 ) : nNewPos;
-			ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, (void*) nNewPos2 );
+			ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, reinterpret_cast< void* >( nNewPos2 ) );
 		}
 	}
 }
@@ -784,7 +764,7 @@ void ToolBox::CopyItem( const ToolBox& r
 
         // Notify
 		USHORT nNewPos2 = ( nNewPos == TOOLBOX_APPEND ) ? ( mpData->m_aItems.size() - 1 ) : nNewPos;
-		ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, (void*) nNewPos2 );
+		ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMADDED, reinterpret_cast< void* >( nNewPos2 ) );
 	}
 }
 
@@ -1290,7 +1240,7 @@ void ToolBox::SetItemText( USHORT nItemI
 			pItem->maText = ImplConvertMenuString( rText );
 
         // Notify
-        ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMTEXTCHANGED, (void*) nPos );
+        ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMTEXTCHANGED, reinterpret_cast< void* >( nPos ) );
 	}
 }
 
@@ -1319,7 +1269,7 @@ void ToolBox::SetItemWindow( USHORT nIte
 		if ( pNewWindow )
 			pNewWindow->Hide();
 		ImplInvalidate( TRUE );
-		ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMWINDOWCHANGED, (void*) nPos );
+		ImplCallEventListeners( VCLEVENT_TOOLBOX_ITEMWINDOWCHANGED, reinterpret_cast< void* >( nPos ) );
 	}
 }
 
@@ -1485,7 +1435,7 @@ void ToolBox::SetItemState( USHORT nItem
 			pItem->meState = eState;
 			ImplUpdateItem( nPos );
 			// Notify
-		    ImplCallEventListeners( VCLEVENT_TOOLBOX_CLICK, (void*) nPos );
+		    ImplCallEventListeners( VCLEVENT_TOOLBOX_CLICK, reinterpret_cast< void* >( nPos ) );
 		}
 	}
 }
@@ -1526,7 +1476,7 @@ void ToolBox::EnableItem( USHORT nItemId
 
 			ImplUpdateInputEnable();
 
-            ImplCallEventListeners( bEnable ? VCLEVENT_TOOLBOX_ITEMENABLED : VCLEVENT_TOOLBOX_ITEMDISABLED, (void*)nPos );
+            ImplCallEventListeners( bEnable ? VCLEVENT_TOOLBOX_ITEMENABLED : VCLEVENT_TOOLBOX_ITEMDISABLED, reinterpret_cast< void* >( nPos ) );
 		}
 	}
 }
@@ -1684,6 +1634,9 @@ void ToolBox::SetBorder( long nX, long n
 
 void ToolBox::SetOutStyle( USHORT nNewStyle )
 {
+    // always force flat looking toolbars since NWF
+    nNewStyle |= TOOLBOX_STYLE_FLAT;
+
 	if ( mnOutStyle != nNewStyle )
 	{
 		mnOutStyle = nNewStyle;
@@ -1826,4 +1779,3 @@ USHORT ToolBox::GetDisplayItemId( long n
         nItemId = mpData->m_pLayoutData->m_aLineItemIds[nText];
     return nItemId;
 }
-
Index: vcl/source/window/window.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/window.cxx,v
retrieving revision 1.176.46.6
retrieving revision 1.191
diff -u -p -u -r1.176.46.6 -r1.191
--- vcl/source/window/window.cxx	5 Feb 2004 16:45:54 -0000	1.176.46.6
+++ vcl/source/window/window.cxx	25 Jun 2004 15:18:01 -0000	1.191
@@ -59,9 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_WINDOW_CXX
-
-#ifndef REMOTE_APPSERVER
 #ifndef _SV_SVSYS_HXX
 #include <svsys.h>
 #endif
@@ -80,6 +77,8 @@
 #ifndef _SV_SALGDI_HXX
 #include <salgdi.hxx>
 #endif
+#ifndef _SV_SALCTRLHANDLE_HXX
+#include <salctrlhandle.hxx>
 #endif
 
 #include <unohelp.hxx>
@@ -88,7 +87,7 @@
 #include <tools/debug.hxx>
 #endif
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
@@ -188,20 +189,6 @@
 #include <com/sun/star/accessibility/AccessibleRole.hpp>
 #endif
 
-
-#ifdef REMOTE_APPSERVER
-#include "rmwindow.hxx"
-#include "xevthdl.hxx"
-#include "rmevents.hxx"
-#include "rmoutdev.hxx"
-#ifndef _ISOLANG_HXX
-#include <tools/isolang.hxx>
-#endif
-#include "com/sun/star/portal/client/XRmFrameWindow.hpp"
-#include "com/sun/star/uno/Any.hxx"
-#include "com/sun/star/uno/Reference.hxx"
-#endif
-
 #include <unowrap.hxx>
 #include <dndlcon.hxx>
 #include <dndevdis.hxx>
@@ -211,7 +198,7 @@
 #include <unotools/confignode.hxx>
 #endif
 
-#pragma hdrstop
+
 
 using namespace rtl;
 using namespace ::com::sun::star::uno;
@@ -342,7 +329,7 @@ void Window::ImplUpdateGlobalSettings( A
     {
         ImplInitFontList();
 
-        String aConfigFont = vcl::DefaultFontConfigItem::get()->getUserInterfaceFont();
+        String aConfigFont = vcl::DefaultFontConfigItem::get()->getUserInterfaceFont( rSettings.GetUILocale() );
         xub_StrLen nIndex = 0;
         while( nIndex != STRING_NOTFOUND )
         {
@@ -409,16 +396,29 @@ void Window::ImplUpdateGlobalSettings( A
 
     if( 1 )
     {
-        // #97047: Force all fonts except Mneu and Help to a fixed height
-        // to avoid UI scaling due to large fonts
         StyleSettings aStyleSettings = rSettings.GetStyleSettings();
+        // #97047: Force all fonts except Menu and Help to a fixed height
+        // to avoid UI scaling due to large fonts
+        // - but allow bigger fonts on bigger screens (i16682, i21238)
+        //   dialogs were designed to fit 800x600 with an 8pt font, so scale accordingly
+        int maxFontheight = 9; // #107886#: 9 is default for some asian systems, so always allow if requested
+        if( GetDesktopRectPixel().getHeight() > 600 )
+            maxFontheight = (int) ((( 8 * (double) GetDesktopRectPixel().getHeight()) / 600.) + 0.5);
 
-        // #107886# allow scaling of the UI if the menu font is 
-        //  slightly larger/smaller than the 8pt default
-        int defFontheight = 8;
         Font aFont = aStyleSettings.GetMenuFont();
-        if( abs(aFont.GetHeight() - defFontheight) == 1 )
-            defFontheight = aFont.GetHeight();
+        int defFontheight = aFont.GetHeight();
+        if( defFontheight > maxFontheight )
+            defFontheight = maxFontheight;
+
+        // if the UI is korean, always use 9pt
+        LanguageType aLang = Application::GetSettings().GetUILanguage();
+        if( aLang == LANGUAGE_KOREAN || aLang == LANGUAGE_KOREAN_JOHAB )
+            defFontheight = Max(9, defFontheight);
+
+        // i22098, toolfont will be scaled differently to avoid bloated rulers and status bars for big fonts
+        int toolfontheight = defFontheight;
+        if( toolfontheight > 9 )
+            toolfontheight = (defFontheight+8) / 2;
 
         aFont = aStyleSettings.GetAppFont();
         aFont.SetHeight( defFontheight );
@@ -435,9 +435,12 @@ void Window::ImplUpdateGlobalSettings( A
         //aFont = aStyleSettings.GetMenuFont();
         //aFont.SetHeight( defFontheight );
         //aStyleSettings.SetMenuFont( aFont );
+
+        // use different height for toolfont
         aFont = aStyleSettings.GetToolFont();
-        aFont.SetHeight( defFontheight );
+        aFont.SetHeight( toolfontheight ); 
         aStyleSettings.SetToolFont( aFont );
+
         aFont = aStyleSettings.GetLabelFont();
         aFont.SetHeight( defFontheight );
         aStyleSettings.SetLabelFont( aFont );
@@ -552,6 +555,18 @@ MouseEvent ImplTranslateMouseEvent( cons
     return MouseEvent( aPos, rE.GetClicks(), rE.GetMode(), rE.GetButtons(), rE.GetModifier() );
 }
 
+// -----------------------------------------------------------------------
+
+CommandEvent ImplTranslateCommandEvent( const CommandEvent& rCEvt, Window* pSource, Window* pDest )
+{
+    if ( !rCEvt.IsMouseEvent() )
+        return rCEvt;
+
+    Point aPos = pSource->OutputToScreenPixel( rCEvt.GetMousePosPixel() );
+    aPos = pDest->ScreenToOutputPixel( aPos );
+    return CommandEvent( aPos, rCEvt.GetCommand(), rCEvt.IsMouseEvent(), rCEvt.GetData() );
+}
+
 // =======================================================================
 
 void Window::ImplInitData( WindowType nType )
@@ -609,7 +624,6 @@ void Window::ImplInitData( WindowType nT
     mnActivateMode      = 0;            // Wird bei System/Overlap-Windows umgesetzt
     mnDlgCtrlFlags      = 0;            // DialogControl-Flags
     mnLockCount         = 0;            // LockCount
-    mnIsTopWindow       = (USHORT) ~0;  // not initialized yet, 0/1 will indicate TopWindow (see IsTopWindow())
     mbFrame             = FALSE;        // TRUE: Window is a frame window
     mbBorderWin         = FALSE;        // TRUE: Window is a border window
     mbOverlapWin        = FALSE;        // TRUE: Window is a overlap window
@@ -675,37 +689,18 @@ void Window::ImplInitData( WindowType nT
     mbSuppressAccessibilityEvents = FALSE; // TRUE: do not send any accessibility events
     mbEnableRTL         = TRUE;         // TRUE: this outdev will be mirrored if RTL window layout (UI mirroring) is globally active
     mbDrawSelectionBackground = FALSE;  // TRUE: draws transparent window background to indicate (toolbox) selection
-#ifdef REMOTE_APPSERVER
-    mpRmEvents          = NULL;
-
-    Font aFont = maInputContext.GetFont();
-    aFont.SetCharSet( gsl_getSystemTextEncoding() );
-    maInputContext.SetFont( aFont );
-#endif
 }
 
 // -----------------------------------------------------------------------
 
-#ifdef REMOTE_APPSERVER
-void Window::ImplInit( Window* pParent, WinBits nStyle, SystemParentData* pSystemParentData )
-{
-    static ::com::sun::star::uno::Any aVoid;
-    ImplInit( pParent, nStyle, aVoid );
-}
-#else
 void Window::ImplInit( Window* pParent, WinBits nStyle, const ::com::sun::star::uno::Any& aSystemWorkWindowToken )
 {
     ImplInit( pParent, nStyle, NULL );
 }
-#endif
 
 // -----------------------------------------------------------------------
 
-#ifndef REMOTE_APPSERVER
 void Window::ImplInit( Window* pParent, WinBits nStyle, SystemParentData* pSystemParentData )
-#else
-void Window::ImplInit( Window* pParent, WinBits nStyle, const ::com::sun::star::uno::Any& aSystemWorkWindowToken )
-#endif
 {
     DBG_ASSERT( mbFrame || pParent, "Window::Window(): pParent == NULL" );
 
@@ -746,7 +741,6 @@ void Window::ImplInit( Window* pParent, 
     if ( mbFrame )
     {
         // create frame
-#ifndef REMOTE_APPSERVER
         ULONG nFrameStyle = 0;
 
         if ( nStyle & WB_MOVEABLE )
@@ -783,31 +777,6 @@ void Window::ImplInit( Window* pParent, 
         if ( !pFrame )
             GetpApp()->Exception( EXC_SYSOBJNOTCREATED );
         pFrame->SetCallback( this, ImplWindowFrameProc );
-#else
-        if ( !(nStyle & WB_MOVEABLE) && 
-            (mbFloatWin || ((GetType() == WINDOW_BORDERWINDOW) && ((ImplBorderWindow*)this)->mbFloatWindow) ) )
-            nStyle = WB_SYSTEMFLOATWIN;	// window corresponds to a float win on the server
-
-        RmFrameWindow* pParentFrame = pParent ? pParent->mpFrame : NULL;;
-        star::uno::Reference< star::portal::client::XRmFrameWindow >
-            xClientWindow;
-        star::uno::Any aToken;
-        if (!(aSystemWorkWindowToken >>= xClientWindow))
-            aToken = aSystemWorkWindowToken;
-        RmFrameWindow* pFrame = new RmFrameWindow(this, xClientWindow);
-        if ( !pFrame->IsValid() )
-        {
-            delete pFrame;
-            pFrame = NULL;
-            GetpApp()->Exception( EXC_SYSOBJNOTCREATED );
-        }
-        else
-        {
-            pFrame->Create( nStyle, pFrame->GetEventHdlInterface(), GetAccessible()->getAccessibleContext(),
-                            aToken,
-                            pParentFrame ? pParentFrame->GetFrameInterface() : REF( NMSP_CLIENT::XRmFrameWindow )() );
-        }
-#endif
 
         // set window frame data
         mpFrameData     = new ImplFrameData;
@@ -830,6 +799,8 @@ void Window::ImplInit( Window* pParent, 
         mpFrameData->mnMouseMoveId      = 0;
         mpFrameData->mnLastMouseX       = -1;
         mpFrameData->mnLastMouseY       = -1;
+        mpFrameData->mnBeforeLastMouseX = -1;
+        mpFrameData->mnBeforeLastMouseY = -1;
         mpFrameData->mnFirstMouseX      = -1;
         mpFrameData->mnFirstMouseY      = -1;
         mpFrameData->mnLastMouseWinX    = -1;
@@ -866,7 +837,6 @@ void Window::ImplInit( Window* pParent, 
 
     if ( mbFrame )
     {
-#ifndef REMOTE_APPSERVER
         if ( pParent )
         {
             mpFrameData->mnDPIX     = pParent->mpFrameData->mnDPIX;
@@ -882,37 +852,7 @@ void Window::ImplInit( Window* pParent, 
                 mpGraphics->GetScreenFontResolution( mpFrameData->mnFontDPIX, mpFrameData->mnFontDPIY );
             }
         }
-#else
-        const REF( NMSP_CLIENT::XRmFrameWindow )& rxWindow = mpFrame->GetFrameInterface();
-        REF( NMSP_CLIENT::XRmOutputDevice ) xOutDev( mpFrame->GetOutdevInterface() );
 
-        if ( rxWindow.is() && xOutDev.is() )
-        {
-            mpGraphics = new ImplServerGraphics;
-            mpGraphics->SetInterface( xOutDev );
-            if ( pParent )
-            {
-                mpFrameData->mnDPIX     = pParent->mpFrameData->mnDPIX;
-                mpFrameData->mnDPIY     = pParent->mpFrameData->mnDPIY;
-                mpFrameData->mnFontDPIX = pParent->mpFrameData->mnFontDPIX;
-                mpFrameData->mnFontDPIY = pParent->mpFrameData->mnFontDPIY;
-            }
-            else
-            {
-                // We currently assume, that we have only one display
-                static NMSP_CLIENT::RmFrameResolutions aResl = mpFrame->GetFrameResolutions();
-                mpFrameData->mnDPIX     = aResl.DPIx;
-                mpFrameData->mnDPIY     = aResl.DPIy;
-                mpFrameData->mnFontDPIX = aResl.FontDPIx;
-                mpFrameData->mnFontDPIY = aResl.FontDPIy;
-                mpGraphics->SetWindowResolution( aResl.DPIx, aResl.DPIy, aResl.Depth );
-                if ( !mpFrameData->mpFontList->Count() )
-                    mpGraphics->GetDevFontList( mpFrameData->mpFontList );
-            }
-        }
-#endif
-
-#ifndef REMOTE_APPSERVER
         // delay settings initialization until first "real" frame
         // this relies on the IntroWindow not needing any system settings
         if ( !pSVData->maAppData.mbSettingsInit &&
@@ -924,7 +864,6 @@ void Window::ImplInit( Window* pParent, 
             OutputDevice::SetSettings( *pSVData->maAppData.mpSettings );
             pSVData->maAppData.mbSettingsInit = TRUE;
         }
-#endif
 
         // If we create a Window with default size, query this
         // size directly, because we want resize all Controls to
@@ -987,13 +926,8 @@ void Window::ImplSetFrameParent( const W
             DBG_ASSERT( mpFrame != pFrameWindow->mpFrame, "SetFrameParent to own" );
             DBG_ASSERT( mpFrame, "no frame" );
             
-#ifndef REMOTE_APPSERVER
             SalFrame* pParentFrame = pParent ? pParent->mpFrame : NULL;
             pFrameWindow->mpFrame->SetParent( pParentFrame );
-#else
-            RmFrameWindow* pParentFrame = pParent ? pParent->mpFrame : NULL;
-            pFrameWindow->mpFrame->SetParent( pParentFrame ? pParentFrame->GetFrameInterface() : REF( NMSP_CLIENT::XRmFrameWindow )() );
-#endif
         }
         pFrameWindow = pFrameWindow->mpFrameData->mpNextFrame;
     }
@@ -1014,9 +948,6 @@ void Window::ImplInsertWindow( Window* p
         mpFrame         = pFrameParent->mpFrame;
         mpFrameWindow   = pFrameParent;
         mbFrame         = FALSE;
-#ifdef REMOTE_APPSERVER
-        mpGraphics      = mpFrameWindow->mpGraphics;
-#endif
 
         // search overlap window and insert window in list
         if ( ImplIsOverlapWindow() )
@@ -1100,11 +1031,7 @@ void Window::ImplRemoveWindow( BOOL bRem
     if ( bRemoveFrameData )
     {
         // Graphic freigeben
-#ifndef REMOTE_APPSERVER
         ImplReleaseGraphics();
-#else
-        ImplReleaseServerGraphics();
-#endif
     }
 }
 
@@ -1321,6 +1262,8 @@ ImplWinData* Window::ImplGetWinData() co
 {
     if ( !mpWinData )
     {
+        static const char* pNoNWF = getenv( "SAL_NO_NWF" );
+
         ((Window*)this)->mpWinData = new ImplWinData;
         mpWinData->mpExtOldText     = NULL;
         mpWinData->mpExtOldAttrAry  = NULL;
@@ -1329,14 +1272,17 @@ ImplWinData* Window::ImplGetWinData() co
         mpWinData->mpFocusRect      = NULL;
         mpWinData->mpTrackRect      = NULL;
         mpWinData->mnTrackFlags     = 0;
-    }
+        mpWinData->mnIsTopWindow	= (USHORT) ~0;  // not initialized yet, 0/1 will indicate TopWindow (see IsTopWindow())
+        mpWinData->mbMouseOver      = FALSE;
+        mpWinData->mbEnableNativeWidget = (pNoNWF && *pNoNWF) ? FALSE : TRUE; // TRUE: try to draw this control with native theme API
+        mpWinData->mpSalControlHandle  = NULL;
+   }
 
     return mpWinData;
 }
 
 // -----------------------------------------------------------------------
 
-#ifndef REMOTE_APPSERVER
 SalGraphics* Window::ImplGetFrameGraphics() const
 {
     if ( mpFrameWindow->mpGraphics )
@@ -1346,7 +1292,6 @@ SalGraphics* Window::ImplGetFrameGraphic
     mpFrameWindow->mpGraphics->ResetClipRegion();
     return mpFrameWindow->mpGraphics;
 }
-#endif
 
 // -----------------------------------------------------------------------
 
@@ -1398,13 +1343,11 @@ Window* Window::ImplFindWindow( const Po
 USHORT Window::ImplHitTest( const Point& rFramePos )
 {
     Point aFramePos( rFramePos );
-#ifndef REMOTE_APPSERVER
     if( ImplHasMirroredGraphics() && !IsRTLEnabled() )
     {
         // - RTL - re-mirror frame pos at this window
         ImplReMirror( aFramePos );
     }
-#endif
     Rectangle aRect( Point( mnOutOffX, mnOutOffY ), Size( mnOutWidth, mnOutHeight ) );
     if ( !aRect.IsInside( aFramePos ) )
         return 0;
@@ -1737,7 +1680,6 @@ void Window::ImplLogicToPoint( Font& rFo
 
 // -----------------------------------------------------------------------
 
-#ifndef REMOTE_APPSERVER
 BOOL Window::ImplSysObjClip( const Region* pOldRegion )
 {
     BOOL bUpdate = TRUE;
@@ -1862,14 +1804,11 @@ void Window::ImplUpdateSysObjClip()
         mpFrameWindow->ImplUpdateSysObjOverlapsClip();
 }
 
-#endif
-
 // -----------------------------------------------------------------------
 
 BOOL Window::ImplSetClipFlagChilds( BOOL bSysObjOnlySmaller )
 {
     BOOL bUpdate = TRUE;
-#ifndef REMOTE_APPSERVER
     if ( mpSysObj )
     {
         Region* pOldRegion = NULL;
@@ -1898,7 +1837,6 @@ BOOL Window::ImplSetClipFlagChilds( BOOL
             delete pOldRegion;
     }
     else
-#endif
     {
     mbInitClipRegion = TRUE;
     mbInitWinClipRegion = TRUE;
@@ -2384,14 +2322,12 @@ void Window::ImplCallPaint( const Region
             Region      aPaintRegion( maInvalidateRegion );
             Rectangle   aPaintRect = aPaintRegion.GetBoundRect();
 
-#ifndef REMOTE_APPSERVER
             // - RTL - re-mirror paint rect and region at this window
 		    if( ImplHasMirroredGraphics() && !IsRTLEnabled() )
             {
                 ImplReMirror( aPaintRect );
                 ImplReMirror( aPaintRegion );
             }
-#endif
             aPaintRect = ImplDevicePixelToLogic( aPaintRect);
             mpPaintRegion = &aPaintRegion;
             maInvalidateRegion.SetEmpty();
@@ -2904,7 +2840,6 @@ void Window::ImplScroll( const Rectangle
                 InvertTracking( *(mpWinData->mpTrackRect), mpWinData->mnTrackFlags );
         }
 
-#ifndef REMOTE_APPSERVER
         SalGraphics* pGraphics = ImplGetFrameGraphics();
         if ( pGraphics )
         {
@@ -2920,17 +2855,6 @@ void Window::ImplScroll( const Rectangle
                                  rRect.GetWidth(), rRect.GetHeight(),
                                  SAL_COPYAREA_WINDOWINVALIDATE, this );
         }
-#else
-        ImplServerGraphics* pGraphics = ImplGetServerGraphics( TRUE );
-        if ( pGraphics )
-        {
-            pGraphics->SetClipRegion( aRegion );
-            pGraphics->CopyArea( rRect.Left()+nHorzScroll, rRect.Top()+nVertScroll,
-                                 rRect.Left(), rRect.Top(),
-                                 rRect.GetWidth(), rRect.GetHeight(),
-                                 COPYAREA_WINDOWINVALIDATE );
-        }
-#endif
 
         if ( mpWinData )
         {
@@ -2974,12 +2898,8 @@ void Window::ImplScroll( const Rectangle
                 pWindow->maPos.X()  += nHorzScroll;
                 pWindow->mnY        += nVertScroll;
                 pWindow->maPos.Y()  += nVertScroll;
-#ifndef REMOTE_APPSERVER
                 if ( pWindow->ImplUpdatePos() )
                     pWindow->ImplUpdateSysObjPos();
-#else
-                pWindow->ImplUpdatePos();
-#endif
                 if ( pWindow->IsReallyVisible() )
                     pWindow->ImplSetClipFlag();
                 if ( pWindow->mpClientWindow )
@@ -3045,12 +2965,7 @@ void Window::ImplUpdateWindowPtr( Window
     if ( mpFrameWindow != pWindow->mpFrameWindow )
     {
         // Graphic freigeben
-#ifndef REMOTE_APPSERVER
         ImplReleaseGraphics();
-#else
-        ImplReleaseServerGraphics();
-        mpGraphics = pWindow->mpFrameWindow->mpGraphics;
-#endif
     }
 
     mpFrameData     = pWindow->mpFrameData;
@@ -3092,12 +3007,8 @@ void Window::ImplUpdateOverlapWindowPtr(
     ImplInsertWindow( ImplGetParent() );
     mpRealParent = pRealParent;
     ImplUpdateWindowPtr();
-#ifndef REMOTE_APPSERVER
     if ( ImplUpdatePos() )
         ImplUpdateSysObjPos();
-#else
-    ImplUpdatePos();
-#endif
 
     if ( bNewFrame )
     {
@@ -3141,17 +3052,14 @@ BOOL Window::ImplUpdatePos()
         pChild = pChild->mpNext;
     }
 
-#ifndef REMOTE_APPSERVER
     if ( mpSysObj )
         bSysChild = TRUE;
-#endif
 
     return bSysChild;
 }
 
 // -----------------------------------------------------------------------
 
-#ifndef REMOTE_APPSERVER
 void Window::ImplUpdateSysObjPos()
 {
     if ( mpSysObj )
@@ -3164,8 +3072,6 @@ void Window::ImplUpdateSysObjPos()
         pChild = pChild->mpNext;
     }
 }
-#endif
-
 // -----------------------------------------------------------------------
 
 void Window::ImplPosSizeWindow( long nX, long nY,
@@ -3199,12 +3105,14 @@ void Window::ImplPosSizeWindow( long nX,
             bCopyBits = TRUE;
     }
 
+    BOOL bnXRecycled = FALSE; // avoid duplicate mirroring in RTL case
     if ( nFlags & WINDOW_POSSIZE_WIDTH )
     {
         if(!( nFlags & WINDOW_POSSIZE_X ))
         {
             nX = mnX;
             nFlags |= WINDOW_POSSIZE_X;
+            bnXRecycled = TRUE; // we're using a mnX which was already mirrored in RTL case
         }
 
         if ( nWidth < 0 )
@@ -3235,22 +3143,19 @@ void Window::ImplPosSizeWindow( long nX,
         //if ( nX != mnX )
 		// --- RTL ---  (compare the screen coordinates)
 		Point aPtDev( Point( nX+mnOutOffX, 0 ) );
-#ifndef REMOTE_APPSERVER
 		if( ImplHasMirroredGraphics() )
         {
-            ((SalGraphicsLayout*)mpGraphics)->mirror( aPtDev.X(), this );
+            mpGraphics->mirror( aPtDev.X(), this );
 
-            if( IsRTLEnabled() )
+            // #106948# always mirror our pos if our parent is not mirroring, even
+            // if we are also not mirroring
+            // --- RTL --- check if parent is in different coordinates
+            if( !bnXRecycled && mpParent && !mpParent->mbFrame && mpParent->ImplHasMirroredGraphics() && !mpParent->IsRTLEnabled() )
             {
-                // --- RTL --- check if parent is in different coordinates
-                if( mpParent && !mpParent->mbFrame && mpParent->ImplHasMirroredGraphics() && !mpParent->IsRTLEnabled() )
-                {
-                    // --- RTL --- (re-mirror at parent window)
-                    nX = mpParent->mnOutWidth - mnOutWidth - nX; 
-                }
+                // --- RTL --- (re-mirror at parent window)
+                nX = mpParent->mnOutWidth - mnOutWidth - nX; 
             }
         }
-#endif
         if ( mnAbsScreenX != aPtDev.X() || nX != mnX )  
         {
             if ( bCopyBits && !pOverlapRegion )
@@ -3295,14 +3200,9 @@ void Window::ImplPosSizeWindow( long nX,
 */
     if ( bNewPos || bNewSize )
     {
-#ifndef REMOTE_APPSERVER
         BOOL bUpdateSysObjPos = FALSE;
         if ( bNewPos )
             bUpdateSysObjPos = ImplUpdatePos();
-#else
-        if ( bNewPos )
-            ImplUpdatePos();
-#endif
 
         if ( mpClientWindow )
         {
@@ -3354,9 +3254,7 @@ void Window::ImplPosSizeWindow( long nX,
                 mbCallResize = TRUE;
         }
 
-#ifndef REMOTE_APPSERVER
         BOOL bUpdateSysObjClip = FALSE;
-#endif
         if ( IsReallyVisible() )
         {
             if ( bNewPos || bNewSize )
@@ -3367,11 +3265,7 @@ void Window::ImplPosSizeWindow( long nX,
                 if ( mpFrameData->mpFirstBackWin )
                     ImplInvalidateAllOverlapBackgrounds();
                 // Clip-Flag neu setzen
-#ifndef REMOTE_APPSERVER
                 bUpdateSysObjClip = !ImplSetClipFlag( TRUE );
-#else
-                ImplSetClipFlag();
-#endif
             }
 
             // Fensterinhalt invalidieren ?
@@ -3403,7 +3297,6 @@ void Window::ImplPosSizeWindow( long nX,
                                                                      Size( nOldOutWidth, nOldOutHeight ) ),
                                                           mnOutOffX-nOldOutOffX, mnOutOffY-nOldOutOffY,
                                                           TRUE );
-#ifndef REMOTE_APPSERVER
                             SalGraphics* pGraphics = ImplGetFrameGraphics();
                             if ( pGraphics )
                             {
@@ -3420,19 +3313,6 @@ void Window::ImplPosSizeWindow( long nX,
                             }
                             else
                                 bInvalidate = TRUE;
-#else
-                            ImplServerGraphics* pGraphics = ImplGetServerGraphics( TRUE );
-                            if ( pGraphics )
-                            {
-                                pGraphics->SetClipRegion( aRegion );
-                                pGraphics->CopyArea( mnOutOffX, mnOutOffY,
-                                                     nOldOutOffX, nOldOutOffY,
-                                                     nOldOutWidth, nOldOutHeight,
-                                                     COPYAREA_WINDOWINVALIDATE );
-                            }
-                            else
-                                bInvalidate = TRUE;
-#endif
                             if ( !bInvalidate )
                             {
                                 if ( !pOverlapRegion->IsEmpty() )
@@ -3472,7 +3352,6 @@ void Window::ImplPosSizeWindow( long nX,
             }
         }
 
-#ifndef REMOTE_APPSERVER
         // System-Objekte anpassen
         if ( bUpdateSysObjClip )
             ImplUpdateSysObjClip();
@@ -3480,7 +3359,6 @@ void Window::ImplPosSizeWindow( long nX,
             ImplUpdateSysObjPos();
         if ( bNewSize && mpSysObj )
             mpSysObj->SetPosSize( mnOutOffX, mnOutOffY, mnOutWidth, mnOutHeight );
-#endif
     }
 
     if ( pOverlapRegion )
@@ -3573,7 +3451,6 @@ void Window::ImplToTop( USHORT nFlags )
              !mpFrameData->mbInSysObjFocusHdl &&
              !mpFrameData->mbInSysObjToTopHdl )
         {
-#ifndef REMOTE_APPSERVER
 			// do not bring floating windows on the client to top
 			if( !ImplGetClientWindow() || !(ImplGetClientWindow()->GetStyle() & WB_SYSTEMFLOATWIN) )
 			{
@@ -3586,9 +3463,6 @@ void Window::ImplToTop( USHORT nFlags )
                     nSysFlags = SAL_FRAME_TOTOP_GRABFOCUS_ONLY;
 				mpFrame->ToTop( nSysFlags );
 			}
-#else
-            mpFrame->ToTop( nFlags );
-#endif
         }
     }
     else
@@ -3965,13 +3839,8 @@ void Window::ImplGrabFocus( USHORT nFlag
     }
 
     BOOL bHasFocus = TRUE;
-#ifndef REMOTE_APPSERVER
         if ( !mpSysObj && !mpFrameData->mbHasFocus )
             bHasFocus = FALSE;
-#else
-        if ( !mpFrameData->mbHasFocus )
-            bHasFocus = FALSE;
-#endif
 
     BOOL bMustNotGrabFocus = FALSE;
     // #100242#, check parent hierarchy if some floater prohibits grab focus
@@ -4013,11 +3882,7 @@ void Window::ImplGrabFocus( USHORT nFlag
                 // Hier setzen wir schon den Focus um, da ToTop() den Focus
                 // nicht auf ein anderes Fenster setzen darf
                 //DBG_WARNING( "Window::GrabFocus() - Frame doesn't have the focus" );
-#ifndef REMOTE_APPSERVER
 				mpFrame->ToTop( SAL_FRAME_TOTOP_GRABFOCUS | SAL_FRAME_TOTOP_GRABFOCUS_ONLY );
-#else
-				mpFrame->ToTop(0);
-#endif
                 return;
             }
         }
@@ -4173,14 +4038,12 @@ void Window::ImplGrabFocus( USHORT nFlag
 
         if ( pSVData->maWinData.mpFocusWin == this )
         {
-#ifndef REMOTE_APPSERVER
             if ( mpSysObj )
             {
                 mpFrameData->mpFocusWin = this;
                 if ( !mpFrameData->mbInSysObjFocusHdl )
                     mpSysObj->GrabFocus();
             }
-#endif
 
             if ( pSVData->maWinData.mpFocusWin == this )
             {
@@ -4224,7 +4087,6 @@ void Window::ImplNewInputContext()
 
     pFocusWin->mpFrameData->maOldInputContext = rInputContext;
 
-#ifndef REMOTE_APPSERVER
     SalInputContext         aNewContext;
     const Font&             rFont = rInputContext.GetFont();
     const XubString&        rFontName = rFont.GetName();
@@ -4252,10 +4114,6 @@ void Window::ImplNewInputContext()
 
     if ( pFontEntry )
         pFocusWin->mpFontCache->Release( pFontEntry );
-#else
-    const Font& rFont       = rInputContext.GetFont();
-    pFocusWin->ImplGetFrame()->SetInputContext( rFont, rInputContext.GetOptions() );
-#endif
 }
 
 // -----------------------------------------------------------------------
@@ -4518,9 +4388,9 @@ Window::~Window()
             else if ( ImplIsOverlapWindow() )
                 pParent = mpOverlapWindow;
 
-            if ( pParent && pParent->IsEnabled() && pParent->IsInputEnabled() )
+            if ( pParent && pParent->IsEnabled() && pParent->IsInputEnabled() ) 
                 pParent->GrabFocus();
-            else
+            else 
                 mpFrameWindow->GrabFocus();
 
             // If the focus was set back to 'this' set it to nothing
@@ -4551,22 +4421,6 @@ Window::~Window()
     if ( pSVData->maWinData.mpLastDeacWin == this )
         pSVData->maWinData.mpLastDeacWin = NULL;
 
-#ifdef REMOTE_APPSERVER
-    {
-    // Events als ungueltig markieren...
-    vos::OGuard aGuard( pSVData->mpWindowObjectMutex );
-    if ( mpRmEvents )
-    {
-        ExtRmEvent* p = mpRmEvents;
-        while ( p )
-        {
-            p->MarkInvalid();
-            p = p->GetNextWindowEvent();
-        }
-    }
-    }
-#endif
-
     if ( mbFrame )
     {
         if ( mpFrameData->mnFocusId )
@@ -4576,11 +4430,7 @@ Window::~Window()
     }
 
     // Graphic freigeben
-#ifndef REMOTE_APPSERVER
     ImplReleaseGraphics();
-#else
-    ImplReleaseServerGraphics();
-#endif
 
     // Evt. anderen Funktion mitteilen, das das Fenster geloescht
     // wurde
@@ -4608,9 +4458,13 @@ Window::~Window()
             delete mpWinData->mpFocusRect;
         if ( mpWinData->mpTrackRect )
             delete mpWinData->mpTrackRect;
+        // Native widget support
+        delete mpWinData->mpSalControlHandle;
+        mpWinData->mpSalControlHandle = NULL;
         delete mpWinData;
     }
 
+
     // Overlap-Window-Daten loeschen
     if ( mpOverlapData )
     {
@@ -4631,18 +4485,9 @@ Window::~Window()
                 pSysWin = pSysWin->mpFrameData->mpNextFrame;
             pSysWin->mpFrameData->mpNextFrame = mpFrameData->mpNextFrame;
         }
-#ifndef REMOTE_APPSERVER
         mpFrame->SetCallback( NULL, NULL );
         pSVData->mpDefInst->DestroyFrame( mpFrame );
-#else
-        REF( NMSP_CLIENT::XRmOutputDevice ) aTmp;
-        mpGraphics->SetInterface( aTmp );
-        delete mpFrame;
-#endif
         delete mpFrameData;
-#ifdef REMOTE_APPSERVER
-        delete mpGraphics;
-#endif
     }
 
     if ( mpChildClipRegion )
@@ -4895,8 +4759,30 @@ void Window::DataChanged( const DataChan
 
 // -----------------------------------------------------------------------
 
-void Window::ImplNotifyKeyMouseEventListeners( NotifyEvent& rNEvt )
+void Window::ImplNotifyKeyMouseCommandEventListeners( NotifyEvent& rNEvt )
 {
+    if( rNEvt.GetType() == EVENT_COMMAND )
+    {
+        const CommandEvent* pCEvt = rNEvt.GetCommandEvent();
+        if ( pCEvt->GetCommand() != COMMAND_CONTEXTMENU )
+            // non context menu events are not to be notified up the chain
+            // so we return immediately
+            return;
+
+        if ( mbCompoundControl || ( rNEvt.GetWindow() == this ) )
+        {
+            if ( rNEvt.GetWindow() == this )
+                // not interested in: The event listeners are already called in ::Command,
+                // and calling them here a second time doesn't make sense
+                ;
+            else
+            {
+                CommandEvent aCommandEvent = ImplTranslateCommandEvent( *pCEvt, rNEvt.GetWindow(), this );
+                ImplCallEventListeners( VCLEVENT_WINDOW_COMMAND, &aCommandEvent );
+            }
+        }
+    }
+
     // #82968# notify event listeners for mouse and key events seperately and
     // not in PreNotify ( as for focus listeners )
     // this allows for procesing those events internally first and pass it to
@@ -4965,7 +4851,7 @@ void Window::ImplNotifyKeyMouseEventList
     {
         if( pParent->IsCompoundControl() )
         {
-            pParent->ImplNotifyKeyMouseEventListeners( rNEvt );
+            pParent->ImplNotifyKeyMouseCommandEventListeners( rNEvt );
             break;
         }
         pParent = pParent->ImplGetParent();
@@ -5011,7 +4897,7 @@ long Window::PreNotify( NotifyEvent& rNE
                 ImplCallEventListeners( VCLEVENT_WINDOW_LOSEFOCUS );
         }
 
-        // #82968# mouse and key events will be notified after processing ( in ImplNotifyKeyMouseEventListeners() )!
+        // #82968# mouse and key events will be notified after processing ( in ImplNotifyKeyMouseCommandEventListeners() )!
         //    see also ImplHandleMouseEvent(), ImplHandleKey()
 
         /*
@@ -5219,7 +5105,6 @@ BOOL Window::PostUserEvent( ULONG& rEven
     pSVEvent->mbCall    = TRUE;
     ImplAddDel( &(pSVEvent->maDelData) );
     rEventId = (ULONG)pSVEvent;
-#ifndef REMOTE_APPSERVER
     if ( mpFrame->PostEvent( pSVEvent ) )
         return TRUE;
     else
@@ -5229,11 +5114,6 @@ BOOL Window::PostUserEvent( ULONG& rEven
         delete pSVEvent;
         return FALSE;
     }
-#else
-    ExtRmEvent* pEvt = new ExtRmEvent( RMEVENT_USEREVENT, NULL, pSVEvent );
-    ImplPostEvent( pEvt );
-    return TRUE;
-#endif
 }
 
 // -----------------------------------------------------------------------
@@ -5250,7 +5130,6 @@ BOOL Window::PostUserEvent( ULONG& rEven
     pSVEvent->mbCall    = TRUE;
     ImplAddDel( &(pSVEvent->maDelData) );
     rEventId = (ULONG)pSVEvent;
-#ifndef REMOTE_APPSERVER
     if ( mpFrame->PostEvent( pSVEvent ) )
         return TRUE;
     else
@@ -5260,11 +5139,6 @@ BOOL Window::PostUserEvent( ULONG& rEven
         delete pSVEvent;
         return FALSE;
     }
-#else
-    ExtRmEvent* pEvt = new ExtRmEvent( RMEVENT_USEREVENT, NULL, pSVEvent );
-    ImplPostEvent( pEvt );
-    return TRUE;
-#endif
 }
 
 // -----------------------------------------------------------------------
@@ -5533,10 +5407,6 @@ void Window::SetCursorRect( const Rectan
 
     pWinData->mnCursorExtWidth = nExtTextInputWidth;
 
-#ifdef REMOTE_APPSERVER
-    // update remote cursor pos
-    ImplUpdateCursorRect( this );
-#endif
 }
 
 // -----------------------------------------------------------------------
@@ -5682,7 +5552,7 @@ Font Window::GetPointFont() const
 
 // -----------------------------------------------------------------------
 
-void Window::GetFontResolution( long& nDPIX, long& nDPIY ) const
+void Window::GetFontResolution( sal_Int32& nDPIX, sal_Int32& nDPIY ) const
 {
     DBG_CHKTHIS( Window, ImplDbgCheckWindow );
 
@@ -5878,6 +5748,28 @@ Region Window::GetPaintRegion() const
 
 // -----------------------------------------------------------------------
 
+void Window::ExpandPaintClipRegion( const Region& rRegion )
+{
+    if( mpPaintRegion )
+    {
+        Region aPixRegion = LogicToPixel( rRegion );
+        Region aDevPixRegion = ImplPixelToDevicePixel( aPixRegion );
+
+        Region aWinChildRegion = *ImplGetWinChildClipRegion();
+        // --- RTL -- only this region is in frame coordinates, so re-mirror it
+        if( ImplHasMirroredGraphics() && !IsRTLEnabled() )
+            ImplReMirror( aWinChildRegion );
+        aDevPixRegion.Intersect( aWinChildRegion );
+        if( ! aDevPixRegion.IsEmpty() )
+        {
+            mpPaintRegion->Union( aDevPixRegion );
+            mbInitClipRegion = TRUE;
+        }
+    }
+}
+
+// -----------------------------------------------------------------------
+
 void Window::SetParent( Window* pNewParent )
 {
     DBG_CHKTHIS( Window, ImplDbgCheckWindow );
@@ -5942,12 +5834,8 @@ void Window::SetParent( Window* pNewPare
     if ( mnParentClipMode & PARENTCLIPMODE_CLIP )
         pNewParent->mbClipChildren = TRUE;
     ImplUpdateWindowPtr();
-#ifndef REMOTE_APPSERVER
     if ( ImplUpdatePos() )
         ImplUpdateSysObjPos();
-#else
-    ImplUpdatePos();
-#endif
 
     // Wenn sich das Overlap-Window geaendert hat, dann muss getestet werden,
     // ob auch OverlapWindow die das Child-Fenster als Parent gehabt haben
@@ -6092,6 +5980,13 @@ void Window::Show( BOOL bVisible, USHORT
     }
     else
     {
+        // inherit native widget flag for form controls
+        // required here, because frames never show up in the child hierarchy - which should be fixed....
+        // eg, the drop down of a combobox which is a system floating window
+        if( mbFrame && GetParent() && GetParent()->IsCompoundControl() &&
+            GetParent()->IsNativeWidgetEnabled() != IsNativeWidgetEnabled() )
+            EnableNativeWidget( GetParent()->IsNativeWidgetEnabled() );
+
         if ( mbCallMove )
         {
             ImplCallMove();
@@ -6231,8 +6126,8 @@ Size Window::GetSizePixel() const
                  mnOutHeight+mnTopBorder+mnBottomBorder );
 }
 
-void Window::GetBorder( long& rLeftBorder, long& rTopBorder,
-                               long& rRightBorder, long& rBottomBorder ) const
+void Window::GetBorder( sal_Int32& rLeftBorder, sal_Int32& rTopBorder,
+                               sal_Int32& rRightBorder, sal_Int32& rBottomBorder ) const
 {
     rLeftBorder     = mnLeftBorder;
     rTopBorder      = mnTopBorder;
@@ -6274,10 +6169,8 @@ void Window::Enable( BOOL bEnable, BOOL 
     if ( mbDisabled != !bEnable )
     {
         mbDisabled = !bEnable;
-#ifndef REMOTE_APPSERVER
         if ( mpSysObj )
             mpSysObj->Enable( bEnable && !mbInputDisabled );
-#endif
 //      if ( mbFrame )
 //          mpFrame->Enable( bEnable && !mbInputDisabled );
         StateChanged( STATE_CHANGE_ENABLE );
@@ -6329,10 +6222,8 @@ void Window::EnableInput( BOOL bEnable, 
         if ( mbInputDisabled != !bEnable )
         {
             mbInputDisabled = !bEnable;
-#ifndef REMOTE_APPSERVER
             if ( mpSysObj )
                 mpSysObj->Enable( !mbDisabled && bEnable );
-#endif
 //          if ( mbFrame )
 //              mpFrame->Enable( !mbDisabled && bEnable );
         }
@@ -6697,7 +6588,6 @@ void Window::SetPosSizePixel( long nX, l
     if ( pWindow->mbFrame )
     {
         long nOldWidth  = pWindow->mnOutWidth;
-        long nOldHeight = pWindow->mnOutHeight;
 
         if ( !(nFlags & WINDOW_POSSIZE_WIDTH) )
             nWidth = pWindow->mnOutWidth;
@@ -6705,7 +6595,6 @@ void Window::SetPosSizePixel( long nX, l
             nHeight = pWindow->mnOutHeight;
 
 
-#ifndef REMOTE_APPSERVER
         USHORT nSysFlags=0;
         if( nFlags & WINDOW_POSSIZE_WIDTH )
             nSysFlags |= SAL_FRAME_POSSIZE_WIDTH;
@@ -6751,9 +6640,7 @@ void Window::SetPosSizePixel( long nX, l
         if( nFlags & WINDOW_POSSIZE_Y )
             nSysFlags |= SAL_FRAME_POSSIZE_Y;
         pWindow->mpFrame->SetPosSize( nX, nY, nWidth, nHeight, nSysFlags );
-#else
-        pWindow->mpFrame->SetPosSize( nX, nY, nWidth, nHeight, nFlags );
-#endif
+
         // Resize should be called directly. If we havn't
         // set the correct size, we get a second resize from
         // the system with the correct size. This can be happend
@@ -6762,7 +6649,6 @@ void Window::SetPosSizePixel( long nX, l
     }
     else
     {
-
         pWindow->ImplPosSizeWindow( nX, nY, nWidth, nHeight, nFlags );
         if ( IsReallyVisible() )
             ImplGenerateMouseMove();
@@ -6803,6 +6689,44 @@ Point Window::ScreenToOutputPixel( const
 
 // -----------------------------------------------------------------------
 
+long Window::ImplGetUnmirroredOutOffX()
+{
+    // revert mnOutOffX changes that were potentially made in ImplPosSizeWindow
+    long offx = mnOutOffX;
+    if( ImplHasMirroredGraphics() )
+    {
+        if( mpParent && !mpParent->mbFrame && mpParent->ImplHasMirroredGraphics() && !mpParent->IsRTLEnabled() )
+        {
+            if ( !ImplIsOverlapWindow() )
+                offx -= mpParent->mnOutOffX;
+
+            offx = mpParent->mnOutWidth - mnOutWidth - offx;
+
+            if ( !ImplIsOverlapWindow() )
+                offx += mpParent->mnOutOffX;
+
+        }
+    }
+    return offx;
+}
+
+// normalized screen pixel are independent of mirroring
+Point Window::OutputToNormalizedScreenPixel( const Point& rPos ) const
+{       
+    // relative to top level parent
+    long offx = ((Window*) this)->ImplGetUnmirroredOutOffX();
+    return Point( rPos.X()+offx, rPos.Y()+mnOutOffY );
+}
+
+Point Window::NormalizedScreenToOutputPixel( const Point& rPos ) const
+{
+    // relative to top level parent
+    long offx = ((Window*) this)->ImplGetUnmirroredOutOffX();
+    return Point( rPos.X()-offx, rPos.Y()-mnOutOffY );
+}
+
+// -----------------------------------------------------------------------
+
 Point Window::OutputToAbsoluteScreenPixel( const Point& rPos ) const
 {
     // relative to the screen
@@ -7114,12 +7038,7 @@ void Window::Update()
 void Window::Flush()
 {
     DBG_CHKTHIS( Window, ImplDbgCheckWindow );
-
-#ifdef REMOTE_APPSERVER
-    // !!!!!
-#else
     mpFrame->Flush();
-#endif
 }
 
 // -----------------------------------------------------------------------
@@ -7128,13 +7047,7 @@ void Window::Sync()
 {
     DBG_CHKTHIS( Window, ImplDbgCheckWindow );
 
-#ifdef REMOTE_APPSERVER
-    // Wir rufen eine syncrone Funktion, um uns zu syncronisieren
-    long nDummy;
-    mpFrame->GetClientSize( nDummy, nDummy );
-#else
     mpFrame->Sync();
-#endif
 }
 
 // -----------------------------------------------------------------------
@@ -7303,7 +7216,6 @@ void Window::SetPointerPosPixel( const P
     DBG_CHKTHIS( Window, ImplDbgCheckWindow );
 
     Point aPos = ImplOutputToFrame( rPos );
-#ifndef REMOTE_APPSERVER
     if( ImplHasMirroredGraphics() )
     {
         if( !IsRTLEnabled() )
@@ -7312,9 +7224,8 @@ void Window::SetPointerPosPixel( const P
             ImplReMirror( aPos );
         }
         // mirroring is required here, SetPointerPos bypasses SalGraphics
-        ((SalGraphicsLayout*)mpGraphics)->mirror( aPos.X(), this );
+        mpGraphics->mirror( aPos.X(), this );
     }
-#endif
     mpFrame->SetPointerPos( aPos.X(), aPos.Y() );
 }
 
@@ -7325,6 +7236,21 @@ Point Window::GetPointerPosPixel()
     DBG_CHKTHIS( Window, ImplDbgCheckWindow );
 
     Point aPos( mpFrameData->mnLastMouseX, mpFrameData->mnLastMouseY );
+    if( ImplHasMirroredGraphics() && !IsRTLEnabled() )
+    {
+        // --- RTL --- (re-mirror mouse pos at this window)
+        ImplReMirror( aPos );
+    }
+    return ImplFrameToOutput( aPos );
+}
+
+// -----------------------------------------------------------------------
+
+Point Window::GetLastPointerPosPixel()
+{
+    DBG_CHKTHIS( Window, ImplDbgCheckWindow );
+
+    Point aPos( mpFrameData->mnBeforeLastMouseX, mpFrameData->mnBeforeLastMouseY );
 #ifndef REMOTE_APPSERVER
     if( ImplHasMirroredGraphics() && !IsRTLEnabled() )
     {
@@ -7360,6 +7286,13 @@ ULONG Window::GetCurrentModButtons()
 
 // -----------------------------------------------------------------------
 
+BOOL Window::IsMouseOver()
+{
+    return ImplGetWinData()->mbMouseOver;
+}
+
+// -----------------------------------------------------------------------
+
 void Window::EnterWait()
 {
     DBG_CHKTHIS( Window, ImplDbgCheckWindow );
@@ -7640,11 +7573,7 @@ const SystemEnvData* Window::GetSystemDa
 {
     DBG_CHKTHIS( Window, ImplDbgCheckWindow );
 
-#ifndef REMOTE_APPSERVER
     return mpFrame ? mpFrame->GetSystemData() : NULL;
-#else
-    return NULL;
-#endif
 }
 
 ::com::sun::star::uno::Any Window::GetSystemDataAny() const
@@ -7831,11 +7760,6 @@ Reference< XDragSource > Window::GetDrag
         {
             try
             {
-#ifdef REMOTE_APPSERVER
-                if ( mpFrame->IsValid() ) 
-                    mpFrame->GetDragSourceDropTarget( mpFrameData->mxDragSource, mpFrameData->mxDropTarget );
-#else
-
                 Reference< XMultiServiceFactory > xFactory = vcl::unohelper::GetMultiServiceFactory();
                 if ( xFactory.is() )
                 {
@@ -7859,7 +7783,7 @@ Reference< XDragSource > Window::GetDrag
                         aDragSourceAL[ 0 ] = makeAny( Application::GetDisplayConnection() );
                         aDragSourceAL[ 2 ] = makeAny( vcl::createBmpConverter() );
                         aDropTargetAL[ 0 ] = makeAny( Application::GetDisplayConnection() );
-                        aDropTargetAL[ 1 ] = makeAny( pEnvData->aShellWindow );
+                        aDropTargetAL[ 1 ] = makeAny( (sal_Size)(pEnvData->aShellWindow) );
                         aDropTargetAL[ 2 ] = makeAny( vcl::createBmpConverter() );
 #endif
                         if( aDragSourceSN.getLength() )
@@ -7869,7 +7793,6 @@ Reference< XDragSource > Window::GetDrag
                             mpFrameData->mxDropTarget = Reference< XDropTarget > ( xFactory->createInstanceWithArguments( aDropTargetSN, aDropTargetAL ), UNO_QUERY );
                     }
                 }
-#endif
             }
 
             // createInstance can throw any exception
@@ -7924,10 +7847,6 @@ Reference< XClipboard > Window::GetClipb
         {
             try
             {
-#ifdef REMOTE_APPSERVER
-                if ( mpFrame->IsValid() )
-                    mpFrame->GetFrameInterface()->GetClipboardAndSelection( mpFrameData->mxClipboard, mpFrameData->mxSelection );
-#else
                 Reference< XMultiServiceFactory > xFactory( vcl::unohelper::GetMultiServiceFactory() );
 
                 if( xFactory.is() )
@@ -7951,7 +7870,6 @@ Reference< XClipboard > Window::GetClipb
                     }
 #endif
                 }
-#endif
             }
 
             // createInstance can throw any exception
@@ -7980,11 +7898,6 @@ Reference< XClipboard > Window::GetSelec
         {
             try
             {
-#ifdef REMOTE_APPSERVER
-                if ( mpFrame->IsValid() )
-                    mpFrame->GetFrameInterface()->GetClipboardAndSelection( mpFrameData->mxClipboard, mpFrameData->mxSelection );
-#else
-
                 Reference< XMultiServiceFactory > xFactory( vcl::unohelper::GetMultiServiceFactory() );
 
                 if( xFactory.is() )
@@ -8006,8 +7919,6 @@ Reference< XClipboard > Window::GetSelec
                     mpFrameData->mxSelection = s_xSelection;
 #	endif
                 }
-
-#endif
             }
 
             // createInstance can throw any exception
@@ -8614,7 +8525,6 @@ void Window::DrawSelectionBackground( co
     // colors used for item highlighting
     Color aSelectionBorderCol( GetSettings().GetStyleSettings().GetHighlightColor() );
     Color aSelectionFillCol( aSelectionBorderCol );
-    Color aSelectionMaskCol( aSelectionBorderCol );
 
 	BOOL bDark = GetSettings().GetStyleSettings().GetFaceColor().IsDark();
 	BOOL bBright = GetSettings().GetStyleSettings().GetFaceColor().IsBright();
@@ -8753,14 +8663,15 @@ BOOL Window::IsTopWindow() const
     if( !mbFrame && (!mpBorderWindow || (mpBorderWindow && !mpBorderWindow->mbFrame) ) )
         return FALSE;
 
-    if( mnIsTopWindow == (USHORT)~0)    // still uninitialized
+    ImplGetWinData();
+    if( mpWinData->mnIsTopWindow == (USHORT)~0)    // still uninitialized
     {
         // #113722#, cache result of expensive queryInterface call
         Window *pThisWin = (Window*)this;
         Reference< XTopWindow > xTopWindow( pThisWin->GetComponentInterface(), UNO_QUERY );
-        pThisWin->mnIsTopWindow = xTopWindow.is() ? 1 : 0;
+        pThisWin->mpWinData->mnIsTopWindow = xTopWindow.is() ? 1 : 0;
     }
-    return mnIsTopWindow == 1 ? TRUE : FALSE;
+    return mpWinData->mnIsTopWindow == 1 ? TRUE : FALSE;
 }
 
 void Window::ImplMirrorFramePos( Point &pt ) const
@@ -8826,3 +8737,27 @@ LanguageType Window::GetInputLanguage() 
     return mpFrame->GetInputLanguage();
 }
 
+void Window::EnableNativeWidget( BOOL bEnable )
+{
+    if( bEnable != ImplGetWinData()->mbEnableNativeWidget )
+    {
+        ImplGetWinData()->mbEnableNativeWidget = bEnable;
+        // sometimes the borderwindow is queried, so keep it in sync
+        if( mpBorderWindow )
+            mpBorderWindow->ImplGetWinData()->mbEnableNativeWidget = bEnable;
+    }
+
+    // push down, useful for compound controls
+    Window *pChild = mpFirstChild;
+    while( pChild )
+    {
+        pChild->EnableNativeWidget( bEnable );
+        pChild = pChild->mpNext;
+    }
+}
+
+BOOL Window::IsNativeWidgetEnabled() const
+{
+    return ImplGetWinData()->mbEnableNativeWidget;
+}
+





Index: vcl/source/window/window2.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/window2.cxx,v
retrieving revision 1.9
retrieving revision 1.12
diff -u -p -u -r1.9 -r1.12
--- vcl/source/window/window2.cxx	27 Mar 2003 17:58:24 -0000	1.9
+++ vcl/source/window/window2.cxx	3 Feb 2004 11:55:39 -0000	1.12
@@ -59,13 +59,10 @@
  *
  ************************************************************************/
 
-#define _SV_WINDOW_CXX
-
 #include <limits.h>
 #ifndef _SV_SVSYS_HXX
 #include <svsys.h>
 #endif
-#ifndef REMOTE_APPSERVER
 #ifndef _SV_SALBMP_HXX
 #include <salbmp.hxx>
 #endif
@@ -75,9 +72,6 @@
 #ifndef _SV_SALFRAME_HXX
 #include <salframe.hxx>
 #endif
-#else
-#include <rmoutdev.hxx>
-#endif
 
 #ifndef _DEBUG_HXX
 #include <tools/debug.hxx>
@@ -107,7 +101,7 @@
 #ifndef _SV_ACCESS_HXX
 #include <access.hxx>
 #endif
-#ifndef _POLY_HXX
+#ifndef _TL_POLY_HXX
 #include <tools/poly.hxx>
 #endif
 #ifndef _SV_VIRDEV_HXX
@@ -129,7 +120,7 @@
 #include <scrwnd.hxx>
 #endif
 
-#pragma hdrstop
+
 
 // =======================================================================
 
@@ -140,6 +131,8 @@ DBG_NAMEEX( Window );
 #define IMPL_MAXSAVEBACKSIZE    (640*480)
 #define IMPL_MAXALLSAVEBACKSIZE (800*600*2)
 
+//#define USE_NEW_RTL_IMPLEMENTATION
+
 // =======================================================================
 
 struct ImplFocusDelData : public ImplDelData
@@ -398,7 +391,6 @@ Bitmap Window::SnapShot( BOOL bBorder ) 
         {
             ((Window*)this)->Update();
 
-#ifndef REMOTE_APPSERVER
             if ( bBorder && mbFrame )
             {
                 SalBitmap* pSalBmp = mpFrame->SnapShot();
@@ -411,7 +403,6 @@ Bitmap Window::SnapShot( BOOL bBorder ) 
                     return aBmp;
                 }
             }
-#endif
 
             mpFrameWindow->ImplGetFrameBitmap( Point( mnOutOffX, mnOutOffY ), Size( mnOutWidth, mnOutHeight ), aBmp );
         }
@@ -485,7 +476,6 @@ void Window::Invert( const Rectangle& rR
         return;
     aRect.Justify();
 
-#ifndef REMOTE_APPSERVER
     // we need a graphics
     if ( !mpGraphics )
     {
@@ -505,11 +495,6 @@ void Window::Invert( const Rectangle& rR
     if ( nFlags & INVERT_50 )
         nSalFlags |= SAL_INVERT_50;
     mpGraphics->Invert( aRect.Left(), aRect.Top(), aRect.GetWidth(), aRect.GetHeight(), nSalFlags, this );
-#else
-    ImplServerGraphics* pGraphics = ImplGetServerGraphics();
-    if ( pGraphics )
-        pGraphics->Invert( aRect, nFlags );
-#endif
 }
 
 // -----------------------------------------------------------------------
@@ -528,7 +513,6 @@ void Window::Invert( const Polygon& rPol
 
     Polygon aPoly( ImplLogicToDevicePixel( rPoly ) );
 
-#ifndef REMOTE_APPSERVER
     // we need a graphics
     if ( !mpGraphics )
     {
@@ -549,11 +533,6 @@ void Window::Invert( const Polygon& rPol
         nSalFlags |= SAL_INVERT_50;
     const SalPoint* pPtAry = (const SalPoint*)aPoly.GetConstPointAry();
     mpGraphics->Invert( nPoints, pPtAry, nSalFlags, this );
-#else
-    ImplServerGraphics* pGraphics = ImplGetServerGraphics();
-    if ( pGraphics )
-        pGraphics->Invert( aPoly, nFlags );
-#endif
 }
 
 // -----------------------------------------------------------------------
@@ -613,7 +592,6 @@ void Window::InvertTracking( const Recta
         return;
     aRect.Justify();
 
-#ifndef REMOTE_APPSERVER
     SalGraphics* pGraphics;
 
     if ( nFlags & SHOWTRACK_WINDOW )
@@ -665,33 +643,6 @@ void Window::InvertTracking( const Recta
         pGraphics->Invert( aRect.Left(), aRect.Top()+nBorder, nBorder, aRect.GetHeight()-(nBorder*2), SAL_INVERT_50, this );
         pGraphics->Invert( aRect.Right()-nBorder+1, aRect.Top()+nBorder, nBorder, aRect.GetHeight()-(nBorder*2), SAL_INVERT_50, this );
     }
-#else
-    ImplServerGraphics* pGraphics;
-    if ( nFlags & SHOWTRACK_WINDOW )
-    {
-        if ( !IsDeviceOutputNecessary() )
-            return;
-
-        pGraphics = ImplGetServerGraphics();
-    }
-    else
-    {
-        pGraphics = ImplGetServerGraphics( TRUE );
-
-        if ( nFlags & SHOWTRACK_CLIP )
-        {
-            Point aTmpPoint( mnOutOffX, mnOutOffY );
-            Size aTmpSize( mnOutWidth, mnOutHeight );
-            Rectangle aTmpRect( aTmpPoint, aTmpSize );
-            Region aRegion( aTmpRect );
-            ImplClipBoundaries( aRegion, FALSE, FALSE );
-            pGraphics->SetClipRegion( aRegion );
-        }
-    }
-
-    if ( pGraphics )
-        pGraphics->InvertTracking( aRect, nFlags );
-#endif
 }
 
 // -----------------------------------------------------------------------
@@ -707,7 +658,6 @@ void Window::InvertTracking( const Polyg
 
     Polygon aPoly( ImplLogicToDevicePixel( rPoly ) );
 
-#ifndef REMOTE_APPSERVER
     SalGraphics* pGraphics;
 
     if ( nFlags & SHOWTRACK_WINDOW )
@@ -746,33 +696,6 @@ void Window::InvertTracking( const Polyg
 
     const SalPoint* pPtAry = (const SalPoint*)aPoly.GetConstPointAry();
     pGraphics->Invert( nPoints, pPtAry, SAL_INVERT_TRACKFRAME, this );
-#else
-    ImplServerGraphics* pGraphics;
-    if ( nFlags & SHOWTRACK_WINDOW )
-    {
-        if ( !IsDeviceOutputNecessary() )
-            return;
-
-        pGraphics = ImplGetServerGraphics();
-    }
-    else
-    {
-        pGraphics = ImplGetServerGraphics( TRUE );
-
-        if ( nFlags & SHOWTRACK_CLIP )
-        {
-            Point aTmpPoint( mnOutOffX, mnOutOffY );
-            Size aTmpSize( mnOutWidth, mnOutHeight );
-            Rectangle aTmpRect( aTmpPoint, aTmpSize );
-            Region aRegion( aTmpRect );
-            ImplClipBoundaries( aRegion, FALSE, FALSE );
-            pGraphics->SetClipRegion( aRegion );
-        }
-    }
-
-    if ( pGraphics )
-        pGraphics->InvertTracking( aPoly, nFlags );
-#endif
 }
 
 // -----------------------------------------------------------------------
@@ -787,13 +710,16 @@ IMPL_LINK( Window, ImplTrackTimerHdl, Ti
 
     // Tracking-Event erzeugen
     Point           aMousePos( mpFrameData->mnLastMouseX, mpFrameData->mnLastMouseY );
-#ifndef REMOTE_APPSERVER
     if( ImplHasMirroredGraphics() && !IsRTLEnabled() )
     {
         // - RTL - re-mirror frame pos at pChild
+#ifdef USE_NEW_RTL_IMPLEMENTATION
+        Window *pRefWindow = (Window*) mpDummy4;
+        pRefWindow->ImplReMirror( aMousePos );
+#else
         ImplReMirror( aMousePos );
-    }
 #endif
+    }
     MouseEvent      aMEvt( ImplFrameToOutput( aMousePos ),
                            mpFrameData->mnClickCount, 0,
                            mpFrameData->mnMouseCode, mpFrameData->mnMouseCode );
@@ -863,8 +789,15 @@ void Window::EndTracking( USHORT nFlags 
         {
             Point           aMousePos( mpFrameData->mnLastMouseX, mpFrameData->mnLastMouseY );
             if( ImplHasMirroredGraphics() && !IsRTLEnabled() )
+            {
                 // - RTL - re-mirror frame pos at pChild
+#ifdef USE_NEW_RTL_IMPLEMENTATION
+                Window *pRefWindow = (Window*) mpDummy4;
+                pRefWindow->ImplReMirror( aMousePos );
+#else
                 ImplReMirror( aMousePos );
+#endif
+            }
 
             MouseEvent      aMEvt( ImplFrameToOutput( aMousePos ),
                                    mpFrameData->mnClickCount, 0,
@@ -948,7 +881,6 @@ void Window::SaveBackground( const Point
         {
             const Region    aOldClip( rSaveDevice.GetClipRegion() );
             const Point     aPixOffset( rSaveDevice.LogicToPixel( rDestOff ) );
-            const Point     aPixTopLeft( aClip.GetBoundRect().TopLeft() );
             const BOOL      bMap = rSaveDevice.IsMapModeEnabled();
 
             // move clip region to have the same distance to DestOffset
Index: vcl/source/window/window3.cxx
===================================================================
RCS file: vcl/source/window/window3.cxx
diff -N vcl/source/window/window3.cxx
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ vcl/source/window/window3.cxx	10 May 2004 15:51:43 -0000	1.2
@@ -0,0 +1,260 @@
+/*************************************************************************
+ *
+ *  
+ *
+ *  
+ *
+ *  
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+#define _SV_WINDOW_CXX
+
+#ifndef _SV_SVSYS_HXX
+#include <svsys.h>
+#endif
+
+#ifndef _SV_WINDOW_H
+#include <window.h>
+#endif
+#ifndef _SV_WINDOW_HXX
+#include <window.hxx>
+#endif
+
+#ifndef _SV_SALGDI_HXX
+#include <salgdi.hxx>
+#endif
+#ifndef _SV_NATIVEWIDGETS_HXX
+#include <salnativewidgets.hxx>
+#endif
+#ifndef _SV_SALCTRLHANDLE_HXX
+#include <salctrlhandle.hxx>
+#endif
+#ifndef _RTL_USTRING_HXX_
+#include <rtl/ustring.hxx>
+#endif
+
+using namespace rtl;
+
+// -----------------------------------------------------------------------
+// These functions are mainly passthrough functions that allow access to
+// the SalFrame behind a Window object for native widget rendering purposes.
+// -----------------------------------------------------------------------
+
+void Window::ImplInitSalControlHandle()
+{
+    // create SalControlHandle on demand
+    // not needed for ordinary windows
+    // TODO: move creation to SalGraphics
+    //if( !ImplGetWinData()->mpSalControlHandle )
+    //    ImplGetWinData()->mpSalControlHandle = new SalControlHandle;
+}
+
+// -----------------------------------------------------------------------
+
+BOOL Window::IsNativeControlSupported( ControlType nType, ControlPart nPart )
+{
+    if( !IsNativeWidgetEnabled() )
+        return FALSE;
+
+    if ( !mpGraphics )
+        if ( !ImplGetGraphics() )
+            return FALSE;
+
+    return( mpGraphics->IsNativeControlSupported(nType, nPart) );
+}
+
+
+// -----------------------------------------------------------------------
+
+BOOL Window::HitTestNativeControl( ControlType nType,
+                              ControlPart nPart,
+                              const Region& rControlRegion,
+                              const Point& aPos,
+                              BOOL& rIsInside )
+{
+    if( !IsNativeWidgetEnabled() )
+        return FALSE;
+
+    if ( !mpGraphics )
+        if ( !ImplGetGraphics() )
+            return FALSE;
+
+    ImplInitSalControlHandle();
+    return( mpGraphics->HitTestNativeControl(nType, nPart, rControlRegion, aPos, *ImplGetWinData()->mpSalControlHandle, rIsInside, this ) );
+}
+
+// -----------------------------------------------------------------------
+
+BOOL Window::DrawNativeControl( ControlType nType,
+                            ControlPart nPart,
+                            const Region& rControlRegion,
+                            ControlState nState,
+                            const ImplControlValue& aValue,
+                            OUString aCaption )
+{
+    if( !IsNativeWidgetEnabled() )
+        return FALSE;
+
+    if( !IsInPaint() && IsPaintTransparent() )
+    {
+        // only required if called directly (ie, we're not in Paint() ):
+        // force redraw (Paint()) for transparent controls
+        // to trigger a repaint of the background
+        Region aClipRgn( GetClipRegion() );
+        if( !rControlRegion.IsEmpty() )
+            aClipRgn.Intersect( rControlRegion );
+        Invalidate( aClipRgn, INVALIDATE_UPDATE );
+        return TRUE;
+    }
+
+    ImplInitSalControlHandle();
+
+    // make sure the current clip region is initialized correctly
+    if ( !mpGraphics )
+        if ( !ImplGetGraphics() )
+            return FALSE;
+
+    if ( mbInitClipRegion )
+        ImplInitClipRegion();
+    if ( mbOutputClipped )
+        return TRUE;
+
+    if ( mbInitLineColor )
+        ImplInitLineColor();
+    if ( mbInitFillColor )
+        ImplInitFillColor();
+
+    // Convert the coordinates from relative to Window-absolute, so we draw
+    // in the correct place in platform code
+    Point aWinOffs;
+    aWinOffs = OutputToScreenPixel( aWinOffs );
+    Region screenRegion( rControlRegion );
+    screenRegion.Move( aWinOffs.X(), aWinOffs.Y());
+
+    Region aTestRegion( GetActiveClipRegion() );
+    aTestRegion.Intersect( rControlRegion );
+    if( aTestRegion == rControlRegion )
+        nState |= CTRL_CACHING_ALLOWED;   // control is not clipped, caching allowed
+    
+    return( mpGraphics->DrawNativeControl(nType, nPart, screenRegion, nState, aValue, *ImplGetWinData()->mpSalControlHandle, aCaption, this ) );
+}
+
+
+// -----------------------------------------------------------------------
+
+BOOL Window::DrawNativeControlText(ControlType nType,
+                            ControlPart nPart,
+                            const Region& rControlRegion,
+                            ControlState nState,
+                            const ImplControlValue& aValue,
+                            OUString aCaption )
+{
+    if( !IsNativeWidgetEnabled() )
+        return FALSE;
+
+    ImplInitSalControlHandle();
+
+    // make sure the current clip region is initialized correctly
+    if ( !mpGraphics )
+        if ( !ImplGetGraphics() )
+            return false;
+
+    if ( mbInitClipRegion )
+        ImplInitClipRegion();
+    if ( mbOutputClipped )
+        return true;
+
+    if ( mbInitLineColor )
+        ImplInitLineColor();
+    if ( mbInitFillColor )
+        ImplInitFillColor();
+
+    // Convert the coordinates from relative to Window-absolute, so we draw
+    // in the correct place in platform code
+    Point aWinOffs;
+    aWinOffs = OutputToScreenPixel( aWinOffs );
+    Region screenRegion( rControlRegion );
+    screenRegion.Move( aWinOffs.X(), aWinOffs.Y());
+
+    return( mpGraphics->DrawNativeControlText(nType, nPart, screenRegion, nState, aValue, *ImplGetWinData()->mpSalControlHandle, aCaption, this ) );
+}
+
+
+// -----------------------------------------------------------------------
+
+BOOL Window::GetNativeControlRegion(  ControlType nType,
+                                ControlPart nPart,
+                                const Region& rControlRegion,
+                                ControlState nState,
+                                const ImplControlValue& aValue,
+                                OUString aCaption,
+                                Region &rNativeBoundingRegion,
+                                Region &rNativeContentRegion )
+{
+    if( !IsNativeWidgetEnabled() )
+        return FALSE;
+
+    if ( !mpGraphics )
+        if ( !ImplGetGraphics() )
+            return FALSE;
+
+    ImplInitSalControlHandle();
+    return( mpGraphics->GetNativeControlRegion(nType, nPart, rControlRegion, nState, aValue,
+                                *ImplGetWinData()->mpSalControlHandle, aCaption, rNativeBoundingRegion,
+                                rNativeContentRegion, this ) );
+}
+
+
+// -----------------------------------------------------------------------
Index: vcl/source/window/winproc.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/winproc.cxx,v
retrieving revision 1.80.46.2
retrieving revision 1.89
diff -u -p -u -r1.80.46.2 -r1.89
--- vcl/source/window/winproc.cxx	15 Jan 2004 12:50:42 -0000	1.80.46.2
+++ vcl/source/window/winproc.cxx	10 May 2004 15:51:57 -0000	1.89
@@ -59,29 +59,30 @@
  *
  ************************************************************************/
 
-#define _SV_WINPROC_CXX
-
 #ifndef _SV_SVSYS_HXX
 #include <svsys.h>
 #endif
 
-#ifndef REMOTE_APPSERVER
 #ifndef _SV_SALWTYPE_HXX
 #include <salwtype.hxx>
 #endif
 #ifndef _SV_SALFRAME_HXX
 #include <salframe.hxx>
 #endif
-#else
-#include <rmwindow.hxx>
-#include <rmevents.hxx>
-#endif
 
 #ifndef _DEBUG_HXX
 #include <tools/debug.hxx>
 #endif
 #ifndef _INTN_HXX
-#include <tools/intn.hxx>
+//#include <tools/intn.hxx>
+#endif
+
+#ifndef _VCL_I18NHELP_HXX
+#include <i18nhelp.hxx>
+#endif
+#include <unohelp.hxx>
+#ifndef _UNOTOOLS_LOCALEDATAWRAPPER_HXX
+#include <unotools/localedatawrapper.hxx>
 #endif
 
 #define private public
@@ -145,6 +146,9 @@
 #ifndef _SV_SALGDI_HXX
 #include <salgdi.hxx>
 #endif
+#ifndef _SV_MENU_HXX
+#include <menu.hxx>
+#endif
 #undef private
 
 #include <dndlcon.hxx>
@@ -157,7 +161,9 @@
 #include <com/sun/star/awt/MouseEvent.hpp>
 #endif
 
-#pragma hdrstop
+
+
+//#define USE_NEW_RTL_IMPLEMENTATION
 
 
 // =======================================================================
@@ -394,6 +400,9 @@ static BOOL ImplCallCommand( Window* pCh
 
         pChild->mbCommand = FALSE;
         pChild->Command( aCEvt );
+
+        if( !aDelData.IsDelete() )
+            pChild->ImplNotifyKeyMouseCommandEventListeners( aNCmdEvt );
     }
     else
         bPreNotify = TRUE;
@@ -445,6 +454,8 @@ long ImplHandleMouseEvent( Window* pWind
     }
 
     // update frame data
+    pWindow->mpFrameData->mnBeforeLastMouseX = pWindow->mpFrameData->mnLastMouseX;
+    pWindow->mpFrameData->mnBeforeLastMouseY = pWindow->mpFrameData->mnLastMouseY;
     pWindow->mpFrameData->mnLastMouseX = nX;
     pWindow->mpFrameData->mnLastMouseY = nY;
     pWindow->mpFrameData->mnMouseCode  = nCode;
@@ -500,18 +511,19 @@ long ImplHandleMouseEvent( Window* pWind
     // Ein paar Test ausfuehren und Message abfangen oder Status umsetzen
     if ( pChild )
     {
-#ifndef REMOTE_APPSERVER
         if( pChild->ImplHasMirroredGraphics() && !pChild->IsRTLEnabled() )
         {
             // - RTL - re-mirror frame pos at pChild
+#ifdef USE_NEW_RTL_IMPLEMENTATION
+            Window *pRefWindow = (Window*) pChild->mpDummy4;
+            pRefWindow->ImplReMirror( aMousePos );
+#else
             pChild->ImplReMirror( aMousePos );
-        }
 #endif
+        }
         // no mouse messages to system object windows
-#ifndef REMOTE_APPSERVER
         if ( pChild->mpSysObj )
             return 0;
-#endif
 
         // no mouse messages to disabled windows
         // #106845# if the window was disabed during capturing we have to pass the mouse events to release capturing
@@ -604,29 +616,6 @@ long ImplHandleMouseEvent( Window* pWind
                     {
                         pMouseDownWin->mpFrameData->mbStartDragCalled  = TRUE;
 
-#if 0
-                        /*
-                         * old drag and drop api
-                         */
-
-                        Point aCmdMousePos( pMouseDownWin->mpFrameData->mnFirstMouseX,
-                                            pMouseDownWin->mpFrameData->mnFirstMouseY );
-                        aCmdMousePos = pMouseDownWin->ImplFrameToOutput( aCmdMousePos );
-                        CommandEvent    aCEvt( aCmdMousePos, COMMAND_STARTDRAG, TRUE );
-                        NotifyEvent     aNCmdEvt( EVENT_COMMAND, pMouseDownWin, &aCEvt );
-                        ImplDelData     aDelData;
-                        pMouseDownWin->ImplAddDel( &aDelData );
-                        if ( !ImplCallPreNotify( aNCmdEvt ) )
-                            pMouseDownWin->Command( aCEvt );
-                        if ( aDelData.IsDelete() )
-                            return 1;
-                        pMouseDownWin->ImplRemoveDel( &aDelData );
-#endif
-
-                        /*
-                         * new drag and drop api
-                         */
-
                         // Check if drag source provides it's own recognizer
                         if( pMouseDownWin->mpFrameData->mbInternalDragGestureRecognizer )
                         {                         
@@ -685,6 +674,7 @@ long ImplHandleMouseEvent( Window* pWind
                 ImplDelData aDelData;
                 ImplDelData aDelData2;
                 pWindow->mpFrameData->mbInMouseMove = TRUE;
+                pMouseMoveWin->ImplGetWinData()->mbMouseOver = FALSE;
                 pMouseMoveWin->ImplAddDel( &aDelData );
                 // Durch MouseLeave kann auch dieses Fenster zerstoert
                 // werden
@@ -695,7 +685,7 @@ long ImplHandleMouseEvent( Window* pWind
                     pMouseMoveWin->MouseMove( aMLeaveEvt );
                     // #82968#
                     if( !aDelData.IsDelete() )
-                        aNLeaveEvt.GetWindow()->ImplNotifyKeyMouseEventListeners( aNLeaveEvt );
+                        aNLeaveEvt.GetWindow()->ImplNotifyKeyMouseCommandEventListeners( aNLeaveEvt );
                 }
 
                 pWindow->mpFrameData->mpMouseMoveWin = NULL;
@@ -716,6 +706,8 @@ long ImplHandleMouseEvent( Window* pWind
             nMode |= MOUSE_ENTERWINDOW;
         }
         pWindow->mpFrameData->mpMouseMoveWin = pChild;
+        if( pChild )
+            pChild->ImplGetWinData()->mbMouseOver = TRUE;
 
         // MouseLeave
         if ( !pChild )
@@ -770,7 +762,6 @@ long ImplHandleMouseEvent( Window* pWind
     MouseEvent aMEvt( aChildPos, nClicks, nMode, nCode, nCode );
 
     // tracking window gets the mouse events
-    BOOL bTracking = FALSE;
     if ( pSVData->maWinData.mpTrackWin )
         pChild = pSVData->maWinData.mpTrackWin;
 
@@ -876,7 +867,7 @@ long ImplHandleMouseEvent( Window* pWind
 
         // #82968#
         if ( !aDelData.IsDelete() )
-            aNEvt.GetWindow()->ImplNotifyKeyMouseEventListeners( aNEvt );
+            aNEvt.GetWindow()->ImplNotifyKeyMouseCommandEventListeners( aNEvt );
     }
 
     if ( aDelData.IsDelete() )
@@ -1021,6 +1012,16 @@ static long ImplHandleKey( Window* pWind
             return 1;
     }
 
+    // #i1820# use locale specific decimal separator
+    if( nCode == KEY_DECIMAL )
+    {
+        if( Application::GetSettings().GetMiscSettings().GetEnableLocalizedDecimalSep() )
+        {
+            String aSep( pWindow->GetSettings().GetLocaleDataWrapper().getNumDecimalSep() );
+            nCharCode = (USHORT) aSep.GetChar(0);
+        }
+    }
+
 	BOOL bCtrlF6 = (aKeyCode.GetCode() == KEY_F6) && aKeyCode.IsMod1();
 
     // determine last input time
@@ -1030,12 +1031,8 @@ static long ImplHandleKey( Window* pWind
     if ( nSVEvent == EVENT_KEYINPUT )
     {
 #ifdef DBG_UTIL
-#ifdef REMOTE_APPSERVER
-        if ( aKeyCode.IsShift() && aKeyCode.IsMod2() && (aKeyCode.GetCode() == KEY_D) )
-#else
         // #105224# use Ctrl-Alt-Shift-D, Ctrl-Shift-D must be useable by app
         if ( aKeyCode.IsShift() && aKeyCode.IsMod1() && aKeyCode.IsMod2() && (aKeyCode.GetCode() == KEY_D) )
-#endif
         {
             DBGGUI_START();
             return 1;
@@ -1160,7 +1157,7 @@ static long ImplHandleKey( Window* pWind
         }
         // #82968#
         if( !aDelData.IsDelete() )
-            aNEvt.GetWindow()->ImplNotifyKeyMouseEventListeners( aNEvt );
+            aNEvt.GetWindow()->ImplNotifyKeyMouseCommandEventListeners( aNEvt );
     }
     else
         bPreNotify = TRUE;
@@ -1276,7 +1273,7 @@ static long ImplHandleKey( Window* pWind
             }
             // #82968#
             if( !aDelData.IsDelete() )
-                aNEvt.GetWindow()->ImplNotifyKeyMouseEventListeners( aNEvt );
+                aNEvt.GetWindow()->ImplNotifyKeyMouseCommandEventListeners( aNEvt );
         }
         else
             bPreNotify = TRUE;
@@ -1820,8 +1817,6 @@ IMPL_LINK( Window, ImplAsyncFocusHdl, vo
 
 static void ImplHandleGetFocus( Window* pWindow )
 {
-    ImplSVData* pSVData = ImplGetSVData();
-
     pWindow->mpFrameData->mbHasFocus = TRUE;
 
     // Focus-Events zeitverzoegert ausfuehren, damit bei SystemChildFenstern
@@ -1954,8 +1949,6 @@ static void ImplHandleUserEvent( ImplSVE
 
 // =======================================================================
 
-#ifndef REMOTE_APPSERVER
-
 static USHORT ImplGetMouseMoveMode( SalMouseEvent* pEvent )
 {
     USHORT nMode = 0;
@@ -2037,6 +2030,46 @@ long ImplHandleSalMouseActivate( Window*
 
 // -----------------------------------------------------------------------
 
+static long ImplHandleMenuEvent( Window* pWindow, SalMenuEvent* pEvent, USHORT nEvent )
+{
+    // Find SystemWindow and its Menubar and let it dispatch the command
+    long nRet = 0;
+    Window *pWin = pWindow->mpFirstChild;
+    while ( pWin )
+    {
+        if ( pWin->mbSysWin )
+            break;
+        pWin = pWin->mpNext;
+    }
+    if( pWin )
+    {
+        MenuBar *pMenuBar = ((SystemWindow*) pWin)->GetMenuBar();
+        if( pMenuBar )
+        {
+            switch( nEvent )
+            {
+                case SALEVENT_MENUACTIVATE:
+                    nRet = pMenuBar->HandleMenuActivateEvent( (Menu*) pEvent->mpMenu ) ? 1 : 0;
+                    break;
+                case SALEVENT_MENUDEACTIVATE:
+                    nRet = pMenuBar->HandleMenuDeActivateEvent( (Menu*) pEvent->mpMenu ) ? 1 : 0;
+                    break;
+                case SALEVENT_MENUHIGHLIGHT:
+                    nRet = pMenuBar->HandleMenuHighlightEvent( (Menu*) pEvent->mpMenu, pEvent->mnId ) ? 1 : 0;
+                    break;
+                case SALEVENT_MENUCOMMAND:
+                    nRet = pMenuBar->HandleMenuCommandEvent( (Menu*) pEvent->mpMenu, pEvent->mnId ) ? 1 : 0;
+                    break;
+                default:
+                    break;
+            }
+        }
+    }
+    return nRet;
+}
+
+// -----------------------------------------------------------------------
+
 static void ImplHandleSalKeyMod( Window* pWindow, SalKeyModEvent* pEvent )
 {
     ImplSVData* pSVData = ImplGetSVData();
@@ -2204,6 +2237,13 @@ long ImplWindowFrameProc( void* pInst, S
             ImplHandleSalKeyMod( (Window*)pInst, (SalKeyModEvent*)pEvent );
             break;
 
+        case SALEVENT_MENUACTIVATE:
+        case SALEVENT_MENUDEACTIVATE:
+        case SALEVENT_MENUHIGHLIGHT:
+        case SALEVENT_MENUCOMMAND:
+            nRet = ImplHandleMenuEvent( (Window*)pInst, (SalMenuEvent*)pEvent, nEvent );
+            break;
+
         case SALEVENT_WHEELMOUSE:
             {
             ImplSVData* pSVData = ImplGetSVData();
@@ -2335,212 +2375,3 @@ long ImplWindowFrameProc( void* pInst, S
 
     return nRet;
 }
-
-#else   // => REMOTE_APPSERVER
-
-void ImplUpdateCursorRect( Window *pWindow )
-{
-    RmFrameWindow *pFrame;
-    if( pWindow && ( ( pFrame = pWindow->ImplGetFrame() ) != NULL ) )
-    {
-        if( pFrame->IsInEvtHandler() )
-            return;     // we'll update later
-        Rectangle rRect;
-        long rWidth;
-        pFrame->IsInEvtHandler( true ); // avoid recursion
-        ImplHandleExtTextInputPos( pWindow, rRect, rWidth, 0 );
-        pFrame->IsInEvtHandler( false );
-        pFrame->SetCursorRect( &rRect, rWidth );
-    }
-}
-
-void ImplHandleGeometryChange( Window *pWindow, Rectangle *pRect )
-{
-    if( pWindow && pWindow->ImplGetFrame() && pRect )
-	{
-		pWindow->ImplGetFrame()->maGeometry.nX = pRect->nLeft;
-		pWindow->ImplGetFrame()->maGeometry.nY = pRect->nTop;
-		pWindow->ImplGetFrame()->maGeometry.nWidth = pRect->nRight - pRect->nLeft + 1;
-		pWindow->ImplGetFrame()->maGeometry.nHeight = pRect->nBottom - pRect->nTop + 1;
-		ImplHandleMoveResize( pWindow, pRect->nLeft, pRect->nTop, 
-			pWindow->ImplGetFrame()->maGeometry.nWidth,
-			pWindow->ImplGetFrame()->maGeometry.nHeight );
-	}
-}
-
-void ImplHandleDecorationChange( Window *pWindow, Rectangle *pRect )
-{
-    if( pWindow && pWindow->ImplGetFrame() && pRect )
-	{
-		pWindow->ImplGetFrame()->maGeometry.nLeftDecoration = pRect->nLeft;
-		pWindow->ImplGetFrame()->maGeometry.nTopDecoration = pRect->nTop;
-		pWindow->ImplGetFrame()->maGeometry.nRightDecoration = pRect->nRight;
-		pWindow->ImplGetFrame()->maGeometry.nBottomDecoration = pRect->nBottom;
-	}
-}
-
-void ImplRemoteWindowFrameProc( ExtRmEvent* pEvent )
-{
-    DBG_TESTSOLARMUTEX();
-
-    ImplDelData aDelData;
-    Window *pWindow = pEvent->GetWindow();
-    if( pWindow && pWindow->ImplGetFrame() )
-    {
-        pWindow->ImplAddDel( &aDelData );
-        // disable updates like remote CursorRect
-        pWindow->ImplGetFrame()->IsInEvtHandler( true );
-    }
-
-    ULONG nId = pEvent->GetId();
-    switch ( nId )
-    {
-        case RMEVENT_KEYINPUT:
-        {
-            RmKeyEventData* pData = (RmKeyEventData*)pEvent->GetData();
-            ImplHandleKey( pEvent->GetWindow(), EVENT_KEYINPUT,
-                           pData->nKeyCode, pData->nChar, pData->nCount, TRUE );
-        }
-        break;
-        case RMEVENT_KEYUP:
-        {
-            RmKeyEventData* pData = (RmKeyEventData*)pEvent->GetData();
-            ImplHandleKey( pEvent->GetWindow(), EVENT_KEYUP,
-                           pData->nKeyCode, pData->nChar, 0, TRUE );
-        }
-        break;
-        case RMEVENT_MOUSEBUTTONDOWN:
-        case RMEVENT_MOUSEBUTTONUP:
-        case RMEVENT_MOUSEMOVE:
-        {
-            USHORT nSVEvent;
-            if ( nId == RMEVENT_MOUSEBUTTONDOWN )
-                nSVEvent = EVENT_MOUSEBUTTONDOWN;
-            else if ( nId == RMEVENT_MOUSEBUTTONUP )
-                nSVEvent = EVENT_MOUSEBUTTONUP;
-            else
-                nSVEvent = EVENT_MOUSEMOVE;
-            RmMouseEventData* pData = (RmMouseEventData*)pEvent->GetData();
-            BOOL bMouseLeave = ( pData->nMode & MOUSE_LEAVEWINDOW ) ? TRUE : FALSE;
-            pData->nMode &= ~(MOUSE_ENTERWINDOW|MOUSE_LEAVEWINDOW);
-
-            // Bei MOUSE_MOVE eine Bestaetigung zurueckschicken, damit der
-            // RClient solange verzoegert...
-            // Vorm ImplHandleMouseEvent, falls dort z.B. ein modaler Dialog
-            // aufgemacht wird.
-            if ( nId == RMEVENT_MOUSEMOVE )
-            {
-                DBG_ASSERT( pEvent->GetWindow()->ImplGetFrame(), "RemoteWindowProc: Frame?" );
-                if ( pEvent->GetWindow()->ImplGetFrame() )
-                    pEvent->GetWindow()->ImplGetFrame()->MouseMoveProcessed();
-            }
-
-            ImplHandleMouseEvent( pEvent->GetWindow(), nSVEvent, bMouseLeave,
-                           pData->nX, pData->nY, pData->nSysTime,
-                           pData->nCode, pData->nMode );
-
-        }
-        break;
-        case RMEVENT_PAINT:
-        {
-            Rectangle* pRect = (Rectangle*)pEvent->GetData();
-            ImplHandlePaint( pEvent->GetWindow(), *pRect );
-        }
-        break;
-        case RMEVENT_RESIZE:
-        {
-            Size* pSize = (Size*)pEvent->GetData();
-            ImplHandleResize( pEvent->GetWindow(), pSize->Width(), pSize->Height() );
-        }
-        break;
-        case RMEVENT_USEREVENT:
-        {
-            ImplHandleUserEvent( (ImplSVEvent*)pEvent->GetData() );
-        }
-        break;
-        case RMEVENT_CLOSE:
-        {
-            ImplHandleClose( pEvent->GetWindow() );
-        }
-        break;
-        case RMEVENT_GETFOCUS:
-        {
-            ImplHandleGetFocus( pEvent->GetWindow() );
-        };
-        break;
-        case RMEVENT_LOSEFOCUS:
-        {
-            ImplSVData* pSVData = ImplGetSVData();
-            ULONG nOldFlags;
-			if ( pSVData->maWinData.mpFirstFloat )
-			{
-				nOldFlags = pSVData->maWinData.mpFirstFloat->GetPopupModeFlags();
-				pSVData->maWinData.mpFirstFloat->SetPopupModeFlags( nOldFlags | FLOATWIN_POPUPMODE_NOAPPFOCUSCLOSE );
-			}
-            ImplHandleLoseFocus( pEvent->GetWindow() );
-			if ( pSVData->maWinData.mpFirstFloat )
-				pSVData->maWinData.mpFirstFloat->SetPopupModeFlags( nOldFlags );
-        };
-        break;
-        case RMEVENT_MOUSEWHEEL:
-        {
-            RmMouseWheelEventData* pData = (RmMouseWheelEventData*)pEvent->GetData();
-            ImplHandleWheelEvent( pEvent->GetWindow(),
-                                  pData->nX,
-                                  pData->nY,
-                                  pData->nSysTime,
-                                  pData->nDelta,
-                                  pData->nNotchDelta,
-                                  pData->nScrollLines,
-                                  pData->nCode,
-                                  pData->bHorz );
-        };
-        break;
-        case RMEVENT_STARTEXTTEXTINPUT:
-        {
-            // ???
-        }
-        break;
-        case RMEVENT_EXTTEXTINPUT:
-        {
-            RmExtTextInputData* pData = (RmExtTextInputData*)pEvent->GetData();
-            ImplHandleExtTextInput( pEvent->GetWindow(), pData->nSysTime,
-                                           pData->aText, pData->pTextAttr,
-                                           pData->nCursorPos, pData->nCursorFlags );
-        }
-        break;
-        case RMEVENT_ENDEXTTEXTINPUT:
-        {
-            ImplHandleEndExtTextInput( pEvent->GetWindow() );
-        }
-        break;
-        case RMEVENT_INPUTCONTEXTCHANGE:
-        {
-            LanguageType *pL = (LanguageType*)pEvent->GetData();
-            ImplHandleInputContextChange( pEvent->GetWindow(), *pL );
-        }
-        break;
-		case RMEVENT_GEOMETRYCHANGE:
-		{
-            Rectangle* pRect = (Rectangle*)pEvent->GetData();
-			ImplHandleGeometryChange( pEvent->GetWindow(), pRect );
-		}
-		break;
-		case RMEVENT_DECORATIONCHANGE:
-		{
-            Rectangle* pRect = (Rectangle*)pEvent->GetData();
-			ImplHandleDecorationChange( pEvent->GetWindow(), pRect );
-		}
-		break;
-    }
-
-    if( pWindow && !aDelData.IsDelete() )   // window not deleted ?
-    {
-        pWindow->ImplRemoveDel( &aDelData );
-        // enable updates like remote CursorRect
-        pWindow->ImplGetFrame()->IsInEvtHandler( false );
-        ImplUpdateCursorRect( pWindow );
-    }
-}
-
-#endif
Index: vcl/source/window/wrkwin.cxx
===================================================================
RCS file: /cvs/gsl/vcl/source/window/wrkwin.cxx,v
retrieving revision 1.7
retrieving revision 1.11
diff -u -p -u -r1.7 -r1.11
--- vcl/source/window/wrkwin.cxx	11 Apr 2003 17:31:17 -0000	1.7
+++ vcl/source/window/wrkwin.cxx	17 Jun 2004 11:44:01 -0000	1.11
@@ -59,25 +59,19 @@
  *
  ************************************************************************/
 
-#define _SV_WRKWIN_CXX
-
-#ifndef REMOTE_APPSERVER
 #ifndef _SV_SVSYS_HXX
 #include <svsys.h>
 #endif
 #ifndef _SV_SALFRAME_HXX
 #include <salframe.hxx>
 #endif
-#else
-#include <rmwindow.hxx>
-#endif
 
 #ifndef _DEBUG_HXX
 #include <tools/debug.hxx>
 #endif
 
 #ifndef _SV_RC_H
-#include <rc.h>
+#include <tools/rc.h>
 #endif
 #ifndef _SV_SVDATA_HXX
 #include <svdata.hxx>
@@ -97,10 +91,9 @@
 #ifndef _SV_OPENGL_HXX
 #include <opengl.hxx>
 #endif
-
-#include <rvp.hxx>
-
-#pragma hdrstop
+#ifndef _SV_SYSDATA_HXX
+#include <sysdata.hxx>
+#endif
 
 // =======================================================================
 
@@ -124,11 +117,6 @@ void WorkWindow::ImplInitData()
 
 void WorkWindow::ImplInit( Window* pParent, WinBits nStyle, SystemParentData* pSystemParentData )
 {
-#ifdef REMOTE_APPSERVER
-    static ::com::sun::star::uno::Any aVoid;
-    DBG_ASSERT( ! pSystemParentData, "SystemParentData not implemented in remote vcl" );
-    ImplInit( pParent, nStyle, aVoid );
-#else
 #if defined WNT
 	/*
 	 * #98153# since SystemParentData typically contains a HWND from
@@ -157,14 +145,12 @@ void WorkWindow::ImplInit( Window* pPare
     }
 
     SetActivateMode( ACTIVATE_MODE_GRABFOCUS );
-#endif
 }
 
 // -----------------------------------------------------------------------
 
 void WorkWindow::ImplInit( Window* pParent, WinBits nStyle, const ::com::sun::star::uno::Any& aSystemWorkWindowToken )
 {
-#ifndef REMOTE_APPSERVER
     if( aSystemWorkWindowToken.hasValue() )
     {
         ::com::sun::star::uno::Sequence< sal_Int8 > aSeq;
@@ -176,26 +162,6 @@ void WorkWindow::ImplInit( Window* pPare
     }
     else
         ImplInit( pParent, nStyle, NULL );
-#else
-    USHORT nFrameStyle = BORDERWINDOW_STYLE_FRAME;
-    if ( nStyle & WB_APP )
-        nFrameStyle |= BORDERWINDOW_STYLE_APP;
-    ImplBorderWindow* pBorderWin  = new ImplBorderWindow( pParent, nStyle, nFrameStyle, aSystemWorkWindowToken );
-    Window::ImplInit( pBorderWin, nStyle & (WB_3DLOOK | WB_CLIPCHILDREN | WB_DIALOGCONTROL), aSystemWorkWindowToken );
-    pBorderWin->mpClientWindow = this;
-    pBorderWin->GetBorder( mnLeftBorder, mnTopBorder, mnRightBorder, mnBottomBorder );
-    mpBorderWindow  = pBorderWin;
-//        mpRealParent    = pParent; // !!! Muesste eigentlich gesetzt werden, aber wegen Fehlern mit dem MenuBar erstmal nicht gesetzt !!!
-
-    if ( nStyle & WB_APP )
-    {
-        ImplSVData* pSVData = ImplGetSVData();
-        DBG_ASSERT( !pSVData->maWinData.mpAppWin, "WorkWindow::WorkWindow(): More than one window with style WB_APP" );
-        pSVData->maWinData.mpAppWin = this;
-    }
-
-    SetActivateMode( ACTIVATE_MODE_GRABFOCUS );
-#endif
 }
 
 // -----------------------------------------------------------------------
@@ -252,7 +218,7 @@ void WorkWindow::ImplLoadRes( const ResI
 {
     SystemWindow::ImplLoadRes( rResId );
 
-    USHORT nShowStyle   = ReadShortRes();
+    ReadShortRes();
     if ( !(rResId.aWinBits & WB_HIDE) && (RSC_WORKWIN == rResId.GetRT()) )
         Show();
 }
@@ -300,7 +266,6 @@ void WorkWindow::StartPresentationMode( 
 
         if ( !(mnPresentationFlags & PRESENTATION_NOFULLSCREEN) )
             ShowFullScreenMode( TRUE );
-#ifndef REMOTE_APPSERVER
         if ( !mbSysChild )
         {
             if ( mnPresentationFlags & PRESENTATION_HIDEALLAPPS )
@@ -309,10 +274,6 @@ void WorkWindow::StartPresentationMode( 
                 ToTop();
             mpFrame->StartPresentation( TRUE );
         }
-#else
-        if ( !mbSysChild )
-            mpFrame->StartPresentation( TRUE, nFlags | PRESENTATION_NOFULLSCREEN | PRESENTATION_NOAUTOSHOW );
-#endif
 
         if ( !(mnPresentationFlags & PRESENTATION_NOAUTOSHOW) )
             Show();
@@ -320,17 +281,12 @@ void WorkWindow::StartPresentationMode( 
     else
     {
         Show( mbPresentationVisible );
-#ifndef REMOTE_APPSERVER
         if ( !mbSysChild )
         {
             mpFrame->StartPresentation( FALSE );
             if ( mnPresentationFlags & PRESENTATION_HIDEALLAPPS )
                 mpFrame->SetAlwaysOnTop( FALSE );
         }
-#else
-        if ( !mbSysChild )
-            mpFrame->StartPresentation( FALSE, mnPresentationFlags | PRESENTATION_NOFULLSCREEN | PRESENTATION_NOAUTOSHOW );
-#endif
         ShowFullScreenMode( mbPresentationFull );
 
         mbPresentationMode      = FALSE;
@@ -366,5 +322,57 @@ BOOL WorkWindow::SetPluginParent( System
     if( bWasDnd )
         Window::ImplStartDnd();
 
+    return bRet;
+}
+
+void WorkWindow::ImplSetFrameState( ULONG aFrameState )
+{
+    Window* pWindow = mpFrameWindow;
+
+    SalFrameState   aState;
+    aState.mnMask   = SAL_FRAMESTATE_MASK_STATE;
+    aState.mnState  = aFrameState; //SAL_FRAMESTATE_MAXIMIZED;
+    mpFrame->SetWindowState( &aState );
+}
+
+
+void WorkWindow::Minimize()
+{
+    ImplSetFrameState( SAL_FRAMESTATE_MINIMIZED );
+}
+
+void WorkWindow::Restore()
+{
+    ImplSetFrameState( SAL_FRAMESTATE_NORMAL );
+}
+
+BOOL WorkWindow::Close()
+{
+    BOOL bCanClose = SystemWindow::Close();
+
+    // Ist es das Applikationsfenster, dann beende die Applikation
+    if ( bCanClose && ( ImplGetSVData()->maWinData.mpAppWin == this ) )
+        GetpApp()->Quit();
+    
+    return bCanClose;
+}
+
+void WorkWindow::Maximize( BOOL bMaximize )
+{
+    ImplSetFrameState( bMaximize ? SAL_FRAMESTATE_MAXIMIZED : SAL_FRAMESTATE_NORMAL );
+}
+
+BOOL WorkWindow::IsMaximized()
+{
+    BOOL bRet = FALSE;
+
+    SalFrameState aState;
+    if( mpFrame->GetWindowState( &aState ) )
+    {
+        if( aState.mnState & (SAL_FRAMESTATE_MAXIMIZED			|
+                              SAL_FRAMESTATE_MAXIMIZED_HORZ		|
+                              SAL_FRAMESTATE_MAXIMIZED_VERT ) )
+            bRet = TRUE;
+    }
     return bRet;
 }
