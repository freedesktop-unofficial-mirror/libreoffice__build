--- /dev/null	2003-01-30 15:54:37.000000000 +0530
+++ fpicker/source/unx/gnome/FPentry.cxx	2004-08-05 10:39:12.000000000 +0530
@@ -0,0 +1,190 @@
+/*************************************************************************
+ *
+ *  
+ *
+ *  
+ *
+ *  
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): Jan Holesovsky <kendy@suse.cz>
+ *
+ *
+ ************************************************************************/
+
+//----------------------------------------------
+//	includes of other projects
+//----------------------------------------------
+
+#ifndef _CPPUHELPER_FACTORY_HXX_
+#include <cppuhelper/factory.hxx>
+#endif
+
+#ifndef _COM_SUN_STAR_CONTAINER_XSET_HPP_
+#include <com/sun/star/container/XSet.hpp>
+#endif
+
+#ifndef _OSL_DIAGNOSE_H_
+#include <osl/diagnose.h>
+#endif
+
+#ifndef _FILEPICKER_HXX_
+#include "SalGtkFilePicker.hxx"
+#endif
+
+#ifndef _FPSERVICEINFO_HXX_
+#include "FPServiceInfo.hxx"
+#endif
+
+#include <glib-object.h>
+
+extern      const guint gtk_major_version;
+extern      const guint gtk_minor_version;
+
+//-----------------------------------------------
+// namespace directives
+//-----------------------------------------------
+
+using namespace ::rtl						;
+using namespace ::com::sun::star::uno		;
+using namespace ::com::sun::star::container	;
+using namespace ::com::sun::star::lang		;
+using namespace ::com::sun::star::registry	;
+using namespace ::cppu					    ;
+using ::com::sun::star::ui::dialogs::XFilePicker;
+
+//------------------------------------------------
+// 
+//------------------------------------------------
+
+static Reference< XInterface > SAL_CALL createInstance( 
+	const Reference< XMultiServiceFactory >& rServiceManager )
+{
+	return Reference< XInterface >( 
+		static_cast< XFilePicker* >( 
+			new SalGtkFilePicker( rServiceManager ) ) );
+}
+
+//------------------------------------------------
+// the three uno functions that will be exported
+//------------------------------------------------
+
+extern "C" 
+{
+
+//------------------------------------------------
+// component_getImplementationEnvironment
+//------------------------------------------------
+
+void SAL_CALL component_getImplementationEnvironment(
+	const sal_Char ** ppEnvTypeName, uno_Environment ** ppEnv )
+{
+	*ppEnvTypeName = CPPU_CURRENT_LANGUAGE_BINDING_NAME;
+}
+
+//------------------------------------------------
+//
+//------------------------------------------------
+
+sal_Bool SAL_CALL component_writeInfo( void* pServiceManager, void* pRegistryKey )
+{
+	sal_Bool bRetVal = sal_True;
+
+	if ( pRegistryKey )
+	{
+		try
+		{
+			Reference< XRegistryKey > pXNewKey( static_cast< XRegistryKey* >( pRegistryKey ) );				
+			pXNewKey->createKey( OUString::createFromAscii( FILE_PICKER_REGKEY_NAME ) );
+		}
+		catch( InvalidRegistryException& )
+		{			
+			OSL_ENSURE( sal_False, "InvalidRegistryException caught" );			
+			bRetVal = sal_False;
+		}
+	}
+
+	return bRetVal;
+}
+
+//------------------------------------------------
+//
+//------------------------------------------------
+
+void* SAL_CALL component_getFactory( 
+	const sal_Char* pImplName, uno_Interface* pSrvManager, uno_Interface* pRegistryKey )
+{
+	void* pRet = 0;
+
+	if( pSrvManager && ( 0 == rtl_str_compare( pImplName, FILE_PICKER_IMPL_NAME ) ) )
+	{
+		if( !g_type_from_name( "GdkDisplay" ) || !( gtk_major_version >= 2 && gtk_minor_version >= 4 ) )
+			return pRet; // crude gtkplug check.
+
+		Sequence< OUString > aSNS( 1 );
+		aSNS.getArray( )[0] = OUString::createFromAscii( FILE_PICKER_SERVICE_NAME );		
+				
+		Reference< XSingleServiceFactory > xFactory ( createSingleFactory(
+			reinterpret_cast< XMultiServiceFactory* > ( pSrvManager ),
+			OUString::createFromAscii( pImplName ),
+			createInstance,
+			aSNS ) );
+		if ( xFactory.is() )
+		{
+			xFactory->acquire();
+			pRet = xFactory.get();
+		}			
+	}
+
+	return pRet;
+}
+
+} // extern "C"
+
