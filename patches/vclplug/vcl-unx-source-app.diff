Index: vcl/unx/source/app/devaudiosound.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/devaudiosound.cxx,v
retrieving revision 1.7.74.1
retrieving revision 1.11
diff -u -p -u -r1.7.74.1 -r1.11
--- vcl/unx/source/app/devaudiosound.cxx	13 Nov 2003 16:49:08 -0000	1.7.74.1
+++ vcl/unx/source/app/devaudiosound.cxx	17 Mar 2004 10:05:58 -0000	1.11
@@ -59,7 +59,7 @@
  *
  ************************************************************************/
 
-#include <salsound.hxx>
+#include <salsound.h>
 #include <salimpsound.hxx>
 
 #include <svapp.hxx>
@@ -80,11 +80,9 @@
 #include <sal/types.h>
 #endif
 
-#ifdef _USE_NAMESPACE
 using namespace vcl_sal;
 using namespace vos;
 using namespace osl;
-#endif
 
 int									DevAudioSound::s_nDevice = -1;
 DevAudioDataList					DevAudioSound::s_aDataList;
@@ -294,7 +292,7 @@ BOOL DevAudioSound::startRIFF( DevAudioD
 	return TRUE;
 }
 
-int DevAudioSound::findChunk( DevAudioData* pData, char* pChunk )
+int DevAudioSound::findChunk( DevAudioData* pData, const char* pChunk )
 {
 	if( !pData || ! pData->m_pSound || ! pData->m_pSound->m_pBuffer )
 		return -1;
@@ -311,18 +309,18 @@ int DevAudioSound::findChunk( DevAudioDa
 	return -1;
 }
 
-short int DevAudioSound::readLEShort( char* pBuf )
+short int DevAudioSound::readLEShort( const char* pBuf )
 {
-	unsigned char* pBuffer = (unsigned char*)pBuf;
+	const unsigned char* pBuffer = (const unsigned char*)pBuf;
 	short int nRet = *pBuffer++;
 	nRet |= *pBuffer << 8;
 
 	return nRet;
 }
 
-ULONG DevAudioSound::readBELong( char* pBuf )
+ULONG DevAudioSound::readBELong( const char* pBuf )
 {
-	unsigned char* pBuffer = (unsigned char*)pBuf;
+	const unsigned char* pBuffer = (const unsigned char*)pBuf;
 	ULONG nRet	 = *pBuffer++ << 24;
 	nRet		|= *pBuffer++ << 16;
 	nRet		|= *pBuffer++ << 8;
@@ -331,9 +329,9 @@ ULONG DevAudioSound::readBELong( char* p
 	return nRet;
 }
 
-int DevAudioSound::readLEInt( char* pBuf )
+int DevAudioSound::readLEInt( const char* pBuf )
 {
-	unsigned char* pBuffer = (unsigned char*)pBuf;
+	const unsigned char* pBuffer = (const unsigned char*)pBuf;
 	int nRet = *pBuffer++;
 	nRet |= (int)(*pBuffer++) << 8;
 	nRet |= (int)(*pBuffer++) << 16;
@@ -391,7 +389,10 @@ void DevAudioSound::run()
                     pData->m_nCurPos += nBytes;
 
                     aGuard.clear();
-                    usleep(50000);
+                    TimeValue aVal;
+                    aVal.Seconds = 0;
+                    aVal.Nanosec = 50000000;
+                    osl_waitThread( &aVal );
                     aGuard.reset();
 
                     if( s_aDataList.GetObject( 0 ) != pData )
@@ -452,7 +453,7 @@ void DevAudioSound::remove( DevAudioSoun
 	}
 }
 
-DevAudioSound::DevAudioSound( ::SalSound* pSound ) :
+DevAudioSound::DevAudioSound( ::X11SalSound* pSound ) :
 		VSound( pSound )
 {
 	initBuffer();
Index: vcl/unx/source/app/i18n_cb.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/i18n_cb.cxx,v
retrieving revision 1.18.120.1
retrieving revision 1.21
diff -u -p -u -r1.18.120.1 -r1.21
--- vcl/unx/source/app/i18n_cb.cxx	15 Aug 2003 11:24:53 -0000	1.18.120.1
+++ vcl/unx/source/app/i18n_cb.cxx	6 Jan 2004 14:26:47 -0000	1.21
@@ -88,6 +88,9 @@
 #ifndef _SAL_I18N_INPUTMETHOD_HXX
 #include "i18n_im.hxx"
 #endif
+#ifndef _OSL_THREAD_H
+#include <osl/thread.h>
+#endif
 
 #ifndef _SV_SALFRAME_HXX
 #include <salframe.hxx>
@@ -128,9 +131,9 @@ PreeditDoneCallback ( XIC ic, XPointer c
         if( pPreeditData->pFrame )
         {
 #ifdef __synchronous_extinput__
-            pPreeditData->pFrame->maFrameData.Call( SALEVENT_ENDEXTTEXTINPUT, (void*)NULL );
+            pPreeditData->pFrame->CallCallback( SALEVENT_ENDEXTTEXTINPUT, (void*)NULL );
 #else
-            pPreeditData->pFrame->maFrameData.PostExtTextEvent( SALEVENT_ENDEXTTEXTINPUT, (void*)NULL );
+            pPreeditData->pFrame->PostExtTextEvent( SALEVENT_ENDEXTTEXTINPUT, (void*)NULL );
 #endif
         }
 	}
@@ -265,7 +268,6 @@ Preedit_InsertText(preedit_text_t *pText
       		sal_uInt32  nConversionInfo;
       		sal_Size    nConvertedChars;
 
-      		sal_Size nSize =
 			rtl_convertTextToUnicode( aConverter, aContext,
 					pMBString, nMBLength,
 	 				pInsertTextString, nBufferSize,
@@ -377,12 +379,13 @@ Preedit_FeedbackToSAL ( XIMFeedback* pfe
       		if (nfeedback & XIMTertiary) // same as 2ery
 				nval |= SAL_EXTTEXTINPUT_ATTR_DASHDOTUNDERLINE;
 
-#if 0 // visibility feedback not supported now
+			/*
+			// visibility feedback not supported now
       		if (   (nfeedback & XIMVisibleToForward)
 	  			|| (nfeedback & XIMVisibleToBackward)
 	  			|| (nfeedback & XIMVisibleCenter) )
 			{ }
-#endif
+			*/
     	}
     	// copy in list
     	psalattr[npos] = nval;
@@ -470,12 +473,11 @@ PreeditDrawCallback(XIC ic, XPointer cli
   	aTextEvent.mbOnlyCursor = False;
 
   	if ( pPreeditData->eState == ePreeditStatusActive && pPreeditData->pFrame )
-    	pPreeditData->pFrame->maFrameData.Call(SALEVENT_EXTTEXTINPUT,
-				(void*)&aTextEvent);
+    	pPreeditData->pFrame->CallCallback(SALEVENT_EXTTEXTINPUT, (void*)&aTextEvent);
   	if (aTextEvent.mpTextAttr)
     	free((void*)aTextEvent.mpTextAttr);
     if (pPreeditData->aText.nLength == 0 && pPreeditData->pFrame )
-	    pPreeditData->pFrame->maFrameData.Call( SALEVENT_ENDEXTTEXTINPUT, (void*)NULL );
+	    pPreeditData->pFrame->CallCallback( SALEVENT_ENDEXTTEXTINPUT, (void*)NULL );
 
 #else
 
@@ -493,10 +495,10 @@ PreeditDrawCallback(XIC ic, XPointer cli
 
     if( pPreeditData->pFrame )
     {
-        pPreeditData->pFrame->maFrameData.PostExtTextEvent (SALEVENT_EXTTEXTINPUT,
+        pPreeditData->pFrame->PostExtTextEvent (SALEVENT_EXTTEXTINPUT,
                                                             (void*)pTextEvent);
         if (pPreeditData->aText.nLength == 0)
-            pPreeditData->pFrame->maFrameData.PostExtTextEvent( SALEVENT_ENDEXTTEXTINPUT,
+            pPreeditData->pFrame->PostExtTextEvent( SALEVENT_ENDEXTTEXTINPUT,
                                                                 (void*)NULL );
     }
 #endif
@@ -519,8 +521,7 @@ GetPreeditSpotLocation(XIC ic, XPointer 
   	preedit_data_t* pPreeditData = (preedit_data_t*)client_data;
 
     if( pPreeditData->pFrame )
-        pPreeditData->pFrame->maFrameData.Call(SALEVENT_EXTTEXTINPUTPOS,
-                                               (void*)&mPosEvent);
+        pPreeditData->pFrame->CallCallback(SALEVENT_EXTTEXTINPUTPOS, (void*)&mPosEvent);
 
   	XPoint point;
   	point.x = mPosEvent.mnX + mPosEvent.mnWidth;
@@ -547,8 +548,8 @@ PreeditCaretCallback ( XIC ic, XPointer 
 	XIMPreeditCaretCallbackStruct *call_data )
 {
 	// XXX PreeditCaretCallback is pure debug code for now
-	char *direction = "?";
-	char *style = "?";
+	const char *direction = "?";
+	const char *style = "?";
 
 	switch ( call_data->style )
 	{
@@ -611,11 +612,9 @@ CommitStringCallback( XIC ic, XPointer c
         if( pPreeditData->pFrame )
         {
 #ifdef __synchronous_extinput__
-            pPreeditData->pFrame->maFrameData.Call( SALEVENT_ENDEXTTEXTINPUT,
-                                                    (void*)NULL );
+            pPreeditData->pFrame->CallCallback( SALEVENT_ENDEXTTEXTINPUT, (void*)NULL );
 #else
-            pPreeditData->pFrame->maFrameData.PostExtTextEvent(SALEVENT_ENDEXTTEXTINPUT,
-                                                               (void*)NULL );
+            pPreeditData->pFrame->PostExtTextEvent(SALEVENT_ENDEXTTEXTINPUT, (void*)NULL );
 #endif
         }
     }
@@ -635,10 +634,8 @@ CommitStringCallback( XIC ic, XPointer c
             aTextEvent.mnDeltaStart 	= 0;
             aTextEvent.mbOnlyCursor 	= False;
 
-            pPreeditData->pFrame->maFrameData.Call( SALEVENT_EXTTEXTINPUT,
-                                                    (void*)&aTextEvent);
-            pPreeditData->pFrame->maFrameData.Call( SALEVENT_ENDEXTTEXTINPUT,
-                                                    (void*)NULL );
+            pPreeditData->pFrame->CallCallback( SALEVENT_EXTTEXTINPUT, (void*)&aTextEvent);
+            pPreeditData->pFrame->CallCallback( SALEVENT_ENDEXTTEXTINPUT, (void*)NULL );
 #else
 
             SalExtTextInputEvent *pTextEvent = new SalExtTextInputEvent;
@@ -651,9 +648,9 @@ CommitStringCallback( XIC ic, XPointer c
             pTextEvent->mnDeltaStart 	= 0;
             pTextEvent->mbOnlyCursor 	= False;
 
-            pPreeditData->pFrame->maFrameData.PostExtTextEvent( SALEVENT_EXTTEXTINPUT,
+            pPreeditData->pFrame->PostExtTextEvent( SALEVENT_EXTTEXTINPUT,
                                                                 (void*)pTextEvent);
-            pPreeditData->pFrame->maFrameData.PostExtTextEvent( SALEVENT_ENDEXTTEXTINPUT,
+            pPreeditData->pFrame->PostExtTextEvent( SALEVENT_ENDEXTTEXTINPUT,
                                                                 (void*)NULL );
 #endif
         }
Index: vcl/unx/source/app/i18n_ic.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/i18n_ic.cxx,v
retrieving revision 1.26.42.1
retrieving revision 1.30
diff -u -p -u -r1.26.42.1 -r1.30
--- vcl/unx/source/app/i18n_ic.cxx	2 Mar 2004 10:02:10 -0000	1.26.42.1
+++ vcl/unx/source/app/i18n_ic.cxx	18 May 2004 10:57:02 -0000	1.30
@@ -88,13 +88,25 @@
 #endif
 
 #ifndef _SV_SALFRAME_HXX
-#include <salframe.hxx>
+#include <salframe.h>
+#endif
+
+#ifndef _SV_SYSDATA_HXX
+#include <sysdata.hxx>
+#endif
+
+#ifndef _SV_SALDATA_HXX
+#include <saldata.hxx>
 #endif
 
 #ifndef _SV_SALDISP_HXX
 #include <saldisp.hxx>
 #endif
 
+#ifndef _OSL_THREAD_H
+#include <osl/thread.h>
+#endif
+
 using namespace vcl;
 
 // ---------------------------------------------------------------------------
@@ -183,11 +195,6 @@ get_font_set( Display *p_display )
 SalI18N_InputContext::SalI18N_InputContext ( SalFrame *pFrame ) :
         mbUseable( True ),
         maContext( (XIC)NULL ),
-        mpAttributes( NULL ),
-        mpStatusAttributes( NULL ),
-        mpPreeditAttributes( NULL ),
-        mnStatusStyle( 0 ),
-        mnPreeditStyle( 0 ),
         mnSupportedStatusStyle(
                                XIMStatusCallbacks   |
                                XIMStatusNothing     |
@@ -198,6 +205,11 @@ SalI18N_InputContext::SalI18N_InputConte
                                 XIMPreeditNothing   |
                                 XIMPreeditNone
                                 ),
+        mnStatusStyle( 0 ),
+        mnPreeditStyle( 0 ),
+        mpAttributes( NULL ),
+        mpStatusAttributes( NULL ),
+        mpPreeditAttributes( NULL ),
         mpFocusFrame( NULL )
 {
 #ifdef SOLARIS
@@ -210,7 +222,7 @@ SalI18N_InputContext::SalI18N_InputConte
     maClientData.aText.pCharStyle     = NULL;
 
     SalI18N_InputMethod *pInputMethod;
-    pInputMethod = pFrame->maFrameData.GetDisplay()->GetInputMethod();
+    pInputMethod = GetSalData()->GetDisplay()->GetInputMethod();
     mbMultiLingual = pInputMethod->IsMultiLingual();
 
     mnSupportedPreeditStyle =   XIMPreeditCallbacks | XIMPreeditPosition
@@ -218,8 +230,9 @@ SalI18N_InputContext::SalI18N_InputConte
     if (pInputMethod->UseMethod()
         && SupportInputMethodStyle( pInputMethod->GetSupportedStyles() ) )
     {
-        XLIB_Window  aClientWindow = pFrame->maFrameData.GetShellWindow();
-        XLIB_Window  aFocusWindow  = pFrame->maFrameData.GetWindow();
+        const SystemEnvData* pEnv = pFrame->GetSystemData();
+        XLIB_Window  aClientWindow = pEnv->aShellWindow;
+        XLIB_Window  aFocusWindow  = pEnv->aWindow;
 
         // for status callbacks and commit string callbacks
 #define PREEDIT_BUFSZ 16
@@ -309,7 +322,7 @@ SalI18N_InputContext::SalI18N_InputConte
             {
                 // spot location
                 SalExtTextInputPosEvent aPosEvent;
-                pFrame->maFrameData.Call(SALEVENT_EXTTEXTINPUTPOS, (void*)&aPosEvent);
+                pFrame->CallCallback(SALEVENT_EXTTEXTINPUTPOS, (void*)&aPosEvent);
 
                 static XPoint aSpot;
                 aSpot.x = aPosEvent.mnX + aPosEvent.mnWidth;
@@ -324,7 +337,7 @@ SalI18N_InputContext::SalI18N_InputConte
                 // XCreateIC() fails on Redflag Linux 2.0 if there is no
                 // fontset though the data itself is not evaluated nor is
                 // it required according to the X specs.
-                Display* pDisplay = pFrame->maFrameData.GetDisplay()->GetDisplay();
+                Display* pDisplay = GetSalData()->GetDisplay()->GetDisplay();
                 XFontSet pFontSet = get_font_set(pDisplay);
 
                 if (pFontSet != NULL)
@@ -476,7 +489,7 @@ SalI18N_InputContext::Map( SalFrame *pFr
             if ( maContext == NULL )
             {
                 SalI18N_InputMethod *pInputMethod;
-                pInputMethod = pFrame->maFrameData.GetDisplay()->GetInputMethod();
+                pInputMethod = GetSalData()->GetDisplay()->GetInputMethod();
 
                 maContext = XCreateIC( pInputMethod->GetMethod(),
                                        XNVaNestedList, mpAttributes,
@@ -660,8 +673,8 @@ SalI18N_InputContext::CommitKeyEvent(sal
         aTextEvent.mnDeltaStart  = 0;
         aTextEvent.mbOnlyCursor  = False;
 
-        maClientData.pFrame->maFrameData.Call (SALEVENT_EXTTEXTINPUT,    (void*)&aTextEvent);
-        maClientData.pFrame->maFrameData.Call (SALEVENT_ENDEXTTEXTINPUT, (void*)NULL);
+        maClientData.pFrame->CallCallback(SALEVENT_EXTTEXTINPUT,    (void*)&aTextEvent);
+        maClientData.pFrame->CallCallback(SALEVENT_ENDEXTTEXTINPUT, (void*)NULL);
     }
 #if OSL_DEBUG_LEVEL > 1
     else
@@ -678,7 +691,7 @@ SalI18N_InputContext::UpdateSpotLocation
         return -1;
 
     SalExtTextInputPosEvent aPosEvent;
-    maClientData.pFrame->maFrameData.Call(SALEVENT_EXTTEXTINPUTPOS, (void*)&aPosEvent);
+    maClientData.pFrame->CallCallback(SALEVENT_EXTTEXTINPUTPOS, (void*)&aPosEvent);
 
     XPoint aSpot;
     aSpot.x = aPosEvent.mnX + aPosEvent.mnWidth;
@@ -710,14 +723,16 @@ SalI18N_InputContext::SetICFocus( SalFra
         if( mpFocusFrame )
         {
             mpFocusFrame->EndExtTextInput( SAL_FRAME_ENDEXTTEXTINPUT_COMPLETE );
-            mpFocusFrame->maFrameData.getInputContext()->UnsetICFocus( mpFocusFrame );
+            // FIXME: remove cast to X11SalFrame
+            static_cast<X11SalFrame*>(mpFocusFrame)->getInputContext()->UnsetICFocus( mpFocusFrame );
         }
 
         mpFocusFrame = pFocusFrame;
         maClientData.pFrame = pFocusFrame;
 
-        XLIB_Window  aClientWindow= pFocusFrame->maFrameData.GetShellWindow();
-        XLIB_Window  aFocusWindow= pFocusFrame->maFrameData.GetWindow();
+        const SystemEnvData* pEnv	= pFocusFrame->GetSystemData();
+        XLIB_Window  aClientWindow	= pEnv->aShellWindow;
+        XLIB_Window  aFocusWindow	= pEnv->aWindow;
 
         XSetICValues( maContext,
                       XNFocusWindow,       aFocusWindow,
@@ -755,7 +770,6 @@ SalI18N_InputContext::UnsetICFocus( SalF
 void
 SalI18N_InputContext::SetPreeditState(Bool aPreeditState)
 {
-#if XlibSpecificationRelease >= 6
     XIMPreeditState preedit_state = XIMPreeditUnKnown;
     XVaNestedList preedit_attr;
 
@@ -776,7 +790,6 @@ SalI18N_InputContext::SetPreeditState(Bo
     }
 
     XFree(preedit_attr);
-#endif
 
     return;
 }
@@ -793,7 +806,6 @@ SalI18N_InputContext::EndExtTextInput( U
 {
     if ( mbUseable && (maContext != NULL) )
     {
-#if XlibSpecificationRelease >= 6
         // restore conversion state after resetting XIC
         XIMPreeditState preedit_state = XIMPreeditUnKnown;
         XVaNestedList preedit_attr;
@@ -808,14 +820,12 @@ SalI18N_InputContext::EndExtTextInput( U
             is_preedit_state = True;
         }
         XFree(preedit_attr);
-#endif
 
         char *pPendingChars = XmbResetIC( maContext );
 
         if (pPendingChars == NULL && maClientData.eState != ePreeditStatusStartPending )
             PreeditDoneCallback (maContext, (char*)&maClientData, NULL);
 
-#if XlibSpecificationRelease >= 6
         preedit_attr = XVaCreateNestedList(0,
                                            XNPreeditState, preedit_state,
                                            0);
@@ -826,7 +836,6 @@ SalI18N_InputContext::EndExtTextInput( U
                          NULL);
         }
         XFree(preedit_attr);
-#endif
         // text is unicode
         if ( (pPendingChars != NULL)
              && (nFlags & SAL_FRAME_ENDEXTTEXTINPUT_COMPLETE) )
Index: vcl/unx/source/app/i18n_im.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/i18n_im.cxx,v
retrieving revision 1.23.110.3
retrieving revision 1.30
diff -u -p -u -r1.23.110.3 -r1.30
--- vcl/unx/source/app/i18n_im.cxx	2 Mar 2004 10:02:23 -0000	1.23.110.3
+++ vcl/unx/source/app/i18n_im.cxx	17 Jun 2004 12:27:17 -0000	1.30
@@ -61,7 +61,9 @@
 
 #include <stdio.h>
 #ifdef LINUX
-#define __USE_XOPEN
+#  ifndef __USE_XOPEN
+#    define __USE_XOPEN
+#  endif
 #endif
 #include <poll.h>
 
@@ -309,10 +311,10 @@ SalI18N_InputMethod::PosixLocale()
 //
 // ------------------------------------------------------------------------
 
-SalI18N_InputMethod::SalI18N_InputMethod( ) : maMethod( (XIM)NULL ),
-								  			  mpStyles( (XIMStyles*)NULL ),
-								  			  mbUseable( bUseInputMethodDefault ),
-											  mbMultiLingual( False )
+SalI18N_InputMethod::SalI18N_InputMethod( ) : mbUseable( bUseInputMethodDefault ),
+											  mbMultiLingual( False ),
+                                              maMethod( (XIM)NULL ),
+								  			  mpStyles( (XIMStyles*)NULL )
 {
 	const char *pUseInputMethod = getenv( "SAL_USEINPUTMETHOD" );
 	if ( pUseInputMethod != NULL )
@@ -409,7 +411,7 @@ SalI18N_InputMethod::CreateMethod ( Disp
 			mbMultiLingual = True; // set ml-input flag to create input-method
 	    	maMethod = XvaOpenIM(pDisplay, NULL, NULL, NULL,
 					XNMultiLingualInput, mbMultiLingual, /* dummy */
-			 		0);
+			 		(void *)0);
 			// get ml-input flag from input-method
 			if ( maMethod == (XIM)NULL )
 				mbMultiLingual = False;
@@ -505,15 +507,11 @@ SalI18N_InputMethod::FilterEvent( XEvent
 
     Bool bFilterEvent = XFilterEvent (pEvent, window);
 
-    if (! IMServerKinput2())
-        return bFilterEvent;
     if (pEvent->type != XLIB_KeyPress && pEvent->type != KeyRelease)
         return bFilterEvent;
-    if (mbMultiLingual)
-        return bFilterEvent;
 
     /*
-     * fix kinput2 key release handling
+     * fix broken key release handling of some IMs
      */
     XKeyEvent*         pKeyEvent = &(pEvent->xkey);
     static XKeyEventOp maLastKeyPress;
Index: vcl/unx/source/app/i18n_status.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/i18n_status.cxx,v
retrieving revision 1.22
retrieving revision 1.25
diff -u -p -u -r1.22 -r1.25
--- vcl/unx/source/app/i18n_status.cxx	30 Jun 2003 14:31:34 -0000	1.22
+++ vcl/unx/source/app/i18n_status.cxx	10 May 2004 15:55:48 -0000	1.25
@@ -84,8 +84,9 @@
 #include <svdata.hxx>
 #include <svapp.hxx>
 #include <saldisp.hxx>
-#include <salframe.hxx>
+#include <salframe.h>
 #include <saldata.hxx>
+#include <sysdata.hxx>
 
 using namespace vcl;
 using namespace rtl;
@@ -101,7 +102,7 @@ public:
 
     virtual void setPosition( SalFrame* );
     virtual void setText( const String & ) = 0;
-    virtual const String& getText() const = 0;
+    virtual String getText() const = 0;
     virtual void show( bool bShow, I18NStatus::ShowReason eReason ) = 0;
     virtual void toggle( bool bOn );
 };
@@ -152,7 +153,7 @@ public:
 
     virtual void setPosition( SalFrame* );
     virtual void setText( const String & );
-    virtual const String& getText() const;
+    virtual String getText() const;
     virtual void show( bool bShow, I18NStatus::ShowReason eReason );
 
     // overload WorkWindow::DataChanged
@@ -164,8 +165,8 @@ public:
 XIMStatusWindow::XIMStatusWindow() :
         StatusWindow( WB_BORDER | WB_SYSTEMFLOATWIN | WB_TOOLTIPWIN ),
         m_aStatusText( this, 0 ),
-        m_bAnchoredAtRight( false ),
         m_pLastParent( NULL ),
+        m_bAnchoredAtRight( false ),
         m_bDelayedShow( false ),
         m_eDelayedReason( I18NStatus::contextmap ),
         m_nDelayedEvent( 0 )
@@ -196,15 +197,13 @@ void XIMStatusWindow::layout()
 
     if (m_bAnchoredAtRight && IsVisible())
     {
-        SalFrameData & rData
-            = static_cast< SalFrame * >(
-                GetSystemData()->pSalFrame)->maFrameData;
-        Rectangle aOldRect;
-        rData.getPosSize(aOldRect);
-        long nDelta = aOldRect.GetWidth() - m_aWindowSize.Width();
-        rData.setPosSize(Rectangle(Point(aOldRect.Left() + nDelta,
-                                         aOldRect.Top()),
-                                   m_aWindowSize));
+        SalFrame* pFrame = (SalFrame*)GetSystemData()->pSalFrame;
+        long nDelta = pFrame->maGeometry.nWidth - m_aWindowSize.Width();
+        pFrame->SetPosSize( pFrame->maGeometry.nX + nDelta,
+                            pFrame->maGeometry.nY,
+                            m_aWindowSize.Width(),
+                            m_aWindowSize.Height(),
+                            SAL_FRAME_POSSIZE_X | SAL_FRAME_POSSIZE_Y | SAL_FRAME_POSSIZE_WIDTH | SAL_FRAME_POSSIZE_HEIGHT );
     }
     else
         SetOutputSizePixel( m_aWindowSize );
@@ -214,12 +213,11 @@ bool XIMStatusWindow::checkLastParent() 
 {
     if( m_pLastParent )
     {
-        SalFrame* pFrame = GetSalData()->pFirstFrame_;
-        while( pFrame )
+        const std::list< SalFrame* >& rFrames = GetSalData()->GetDisplay()->getFrames();
+        for( std::list< SalFrame* >::const_iterator it = rFrames.begin(); it != rFrames.end(); ++it )
         {
-            if( pFrame == m_pLastParent )
+            if( *it == m_pLastParent )
                 return true;
-            pFrame = pFrame->maFrameData.GetNextFrame();
         }
     }
     return false;
@@ -236,17 +234,15 @@ Point XIMStatusWindow::updatePosition()
     Point aRet;
     if( checkLastParent() )
     {
-        const SystemEnvData* pEnvData = GetSystemData();
         const SystemEnvData* pParentEnvData = m_pLastParent->GetSystemData();
-        SalFrame* pStatusFrame = (SalFrame*)pEnvData->pSalFrame;
-
+        
         SalExtTextInputPosEvent aPosEvent;
-        m_pLastParent->maFrameData.Call(SALEVENT_EXTTEXTINPUTPOS, (void*)&aPosEvent);
+        m_pLastParent->CallCallback( SALEVENT_EXTTEXTINPUTPOS, (void*)&aPosEvent );
         int x, y;
         XLIB_Window aChild;
         XTranslateCoordinates( (Display*)pParentEnvData->pDisplay,
                                (XLIB_Window)pParentEnvData->aShellWindow,
-                               m_pLastParent->maFrameData.GetDisplay()->GetRootWindow(),
+                               GetSalData()->GetDisplay()->GetRootWindow(),
                                0, 0,
                                &x, &y,
                                &aChild );
@@ -295,7 +291,8 @@ void XIMStatusWindow::setPosition( SalFr
         {
             const SystemEnvData* pEnvData = GetSystemData();
             SalFrame* pStatusFrame = (SalFrame*)pEnvData->pSalFrame;
-            pStatusFrame->maFrameData.setPosSize( Rectangle( updatePosition(), m_aWindowSize ) );
+            Point aPoint = updatePosition();
+            pStatusFrame->SetPosSize( aPoint.X(), aPoint.Y(), m_aWindowSize.Width(), m_aWindowSize.Height(), SAL_FRAME_POSSIZE_X | SAL_FRAME_POSSIZE_Y | SAL_FRAME_POSSIZE_WIDTH | SAL_FRAME_POSSIZE_HEIGHT );
         }
     }
 }
@@ -309,7 +306,8 @@ IMPL_LINK( XIMStatusWindow, DelayedShowH
     {
         Size aControlSize( m_aWindowSize.Width()-4, m_aWindowSize.Height()-4 );
         m_aStatusText.SetPosSizePixel( Point( 1, 1 ), aControlSize );
-        pStatusFrame->maFrameData.setPosSize( Rectangle( updatePosition(), m_aWindowSize ) );
+        Point aPoint = updatePosition();
+        pStatusFrame->SetPosSize( aPoint.X(), aPoint.Y(), m_aWindowSize.Width(), m_aWindowSize.Height(), SAL_FRAME_POSSIZE_X | SAL_FRAME_POSSIZE_Y | SAL_FRAME_POSSIZE_WIDTH | SAL_FRAME_POSSIZE_HEIGHT );
     }
     Show( m_bDelayedShow, SHOW_NOACTIVATE );
     if( m_bDelayedShow )
@@ -337,7 +335,7 @@ void XIMStatusWindow::setText( const Str
     m_aWindowSize.Width() = m_aStatusText.GetTextWidth( rText )+8;
 }
 
-const String& XIMStatusWindow::getText() const
+String XIMStatusWindow::getText() const
 {
     return m_aStatusText.GetText();
 }
@@ -363,7 +361,7 @@ public:
     virtual ~IIIMPStatusWindow();
 
     virtual void setText( const String & );
-    virtual const String& getText() const;
+    virtual String getText() const;
     virtual void show( bool bShow, I18NStatus::ShowReason eReason );
     virtual void toggle( bool bOn );
     void layout();
@@ -399,7 +397,6 @@ IIIMPStatusWindow::IIIMPStatusWindow( Sa
     if( pParent )
     {
         const SystemEnvData* pEnvData = GetSystemData();
-        const SystemEnvData* pParentEnvData = pParent->GetSystemData();
 
         const SalFrameGeometry& rGeom( pParent->GetUnmirroredGeometry() );
         int nDistance = rGeom.nTopDecoration;
@@ -445,7 +442,7 @@ void IIIMPStatusWindow::setText( const S
     m_aStatusBtn.SetText( rText );
 }
 
-const String& IIIMPStatusWindow::getText() const
+String IIIMPStatusWindow::getText() const
 {
     return m_aStatusBtn.GetText();
 }
@@ -492,21 +489,23 @@ void IIIMPStatusWindow::GetFocus()
          *  since reset focus really is an internal hack there should
          *  not be a method to be called in SalFrame destructor
          */
-        SalFrame* pFrame = GetSalData()->pFirstFrame_;
-        while( pFrame && pFrame != m_pResetFocus )
-            pFrame = pFrame->maFrameData.GetNextFrame();
-        if( pFrame == m_pResetFocus )
+        const std::list< SalFrame* >& rFrames = GetSalData()->GetDisplay()->getFrames();
+        std::list< SalFrame* >::const_iterator it;
+        for( it = rFrames.begin(); it != rFrames.end() && *it != m_pResetFocus; ++it )
+            ;
+        if( it != rFrames.end() )
         {
             const SystemEnvData* pParentEnvData = m_pResetFocus->GetSystemData();
-            BOOL bIgnore = m_pResetFocus->maFrameData.GetDisplay()->GetXLib()->GetIgnoreXErrors();
-            m_pResetFocus->maFrameData.GetDisplay()->GetXLib()->SetIgnoreXErrors( TRUE );
+            SalXLib* pXLib = GetSalData()->GetDisplay()->GetXLib();
+            BOOL bIgnore = pXLib->GetIgnoreXErrors();
+            pXLib->SetIgnoreXErrors( TRUE );
             XSetInputFocus( (Display*)pParentEnvData->pDisplay,
                             (XLIB_Window)pParentEnvData->aShellWindow,
                             RevertToNone,
                             CurrentTime
                             );
             XSync( (Display*)pParentEnvData->pDisplay, False );
-            m_pResetFocus->maFrameData.GetDisplay()->GetXLib()->SetIgnoreXErrors( bIgnore );
+            pXLib->SetIgnoreXErrors( bIgnore );
         }
         m_pResetFocus = NULL;
     }
@@ -527,18 +526,21 @@ IMPL_LINK( IIIMPStatusWindow, SelectHdl,
                           XNUnicodeCharacterSubset,
                           rChoices[nIndex].pData,
                           0);
-            SalFrame* pParent = I18NStatus::get().getParent();
-            if( pParent && pParent->maFrameData.isMapped() )
+            // FIXME: get rid of X11SalFrame
+            X11SalFrame* pParent = static_cast<X11SalFrame*>(I18NStatus::get().getParent());
+            if( pParent && pParent->isMapped() )
             {
-                BOOL bIgnore = pParent->maFrameData.GetDisplay()->GetXLib()->GetIgnoreXErrors();
-                pParent->maFrameData.GetDisplay()->GetXLib()->SetIgnoreXErrors( TRUE );
-                XSetInputFocus( pParent->maFrameData.GetXDisplay(),
-                                pParent->maFrameData.GetShellWindow(),
+                const SystemEnvData* pEnv = pParent->GetSystemData();
+                SalXLib* pXLib = GetSalData()->GetDisplay()->GetXLib();
+                BOOL bIgnore = pXLib->GetIgnoreXErrors();
+                pXLib->SetIgnoreXErrors( TRUE );
+                XSetInputFocus( (Display*)pEnv->pDisplay,
+                                (XLIB_Window)pEnv->aShellWindow,
                                 RevertToNone,
                                 CurrentTime
                                 );
-                XSync( pParent->maFrameData.GetXDisplay(), False );
-                pParent->maFrameData.GetDisplay()->GetXLib()->SetIgnoreXErrors( bIgnore );
+                XSync( (Display*)pEnv->pDisplay, False );
+                pXLib->SetIgnoreXErrors( bIgnore );
             }
         }
     }
@@ -671,10 +673,9 @@ void I18NStatus::changeIM( const String&
 
 // --------------------------------------------------------------------------
 
-const String& I18NStatus::getStatusText() const
+String I18NStatus::getStatusText() const
 {
-    static String aEmpty;
-    return m_pStatusWindow ? m_pStatusWindow->getText() :  aEmpty;
+    return m_pStatusWindow ? m_pStatusWindow->getText() :  String();
 }
 
 // --------------------------------------------------------------------------
@@ -741,4 +742,26 @@ bool I18NStatus::getStatusWindowMode()
     case ImplSVAppData::ImeStatusWindowMode_SHOW:
         return true;
     }
+}
+
+/*
+ * X11ImeStatus
+ */
+X11ImeStatus::~X11ImeStatus()
+{
+}
+
+bool X11ImeStatus::canToggle()
+{
+    return vcl::I18NStatus::get().canToggleStatusWindow();
+}
+
+void X11ImeStatus::toggle()
+{
+    vcl::I18NStatus::get().toggleStatusWindow();
+}
+
+SalI18NImeStatus* X11SalInstance::CreateI18NImeStatus()
+{
+    return new X11ImeStatus();
 }
Index: vcl/unx/source/app/i18n_wrp.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/i18n_wrp.cxx,v
retrieving revision 1.6
retrieving revision 1.7
diff -u -p -u -r1.6 -r1.7
--- vcl/unx/source/app/i18n_wrp.cxx	27 Aug 2002 13:19:00 -0000	1.6
+++ vcl/unx/source/app/i18n_wrp.cxx	6 Jan 2004 14:28:49 -0000	1.7
@@ -280,14 +280,9 @@ XvaOpenIM(Display *display, XrmDatabase 
  * Close the connection to the input manager, and free the XIM structure
  */
 
-Status
-XvaCloseIM(XIM im)
+Status XvaCloseIM(XIM im)
 {
   	Status s;
-	#if 0
-  	XCloseIM(im);
-  	s = (im->methods->close)(im); /* we can use the same close module  */
-	#endif
 
 	/* MacOS X doesn't yet support XIM... FIXME */
 #if !defined(MACOSX)  
@@ -299,12 +294,6 @@ XvaCloseIM(XIM im)
     	g_open_im = (OpenFunction)NULL;
   	}
 #endif
-
-	#if 0
-  	if (im) 
-		Xfree((char *)im);
-	#endif
-
 	return (s);
 }
 
Index: vcl/unx/source/app/keysymnames.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/keysymnames.cxx,v
retrieving revision 1.7.120.2
retrieving revision 1.10
diff -u -p -u -r1.7.120.2 -r1.10
--- vcl/unx/source/app/keysymnames.cxx	9 Jan 2004 18:13:59 -0000	1.7.120.2
+++ vcl/unx/source/app/keysymnames.cxx	6 Jan 2004 14:29:18 -0000	1.10
@@ -91,9 +91,6 @@
 #include <deflt.h>
 #include <unistd.h>
 #include <stdlib.h>
-#ifndef KB_USB // compile with too old headers
-#define KB_USB 6
-#endif
 #endif
 
 #include <string.h>
Index: vcl/unx/source/app/makefile.mk
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/makefile.mk,v
retrieving revision 1.9.250.1
retrieving revision 1.13
diff -u -p -u -r1.9.250.1 -r1.13
--- vcl/unx/source/app/makefile.mk	15 Aug 2003 11:25:34 -0000	1.9.250.1
+++ vcl/unx/source/app/makefile.mk	10 May 2004 15:56:00 -0000	1.13
@@ -93,7 +89,6 @@ SLOFILES=\
 			$(SLO)$/i18n_wrp.obj		\
 			$(SLO)$/i18n_status.obj		\
 			$(SLO)$/i18n_keysym.obj		\
-			$(SLO)$/salmain.obj			\
 			$(SLO)$/saldata.obj			\
 			$(SLO)$/saltimer.obj		\
 			$(SLO)$/saldisp.obj			\
@@ -107,7 +102,6 @@ SLOFILES=\
 			$(SLO)$/salsys.obj			\
 			$(SLO)$/soicon.obj			\
 			$(SLO)$/sm.obj				\
-			$(SLO)$/stacktrace.obj		\
 			$(SLO)$/keysymnames.obj		\
 			$(SLO)$/wmadaptor.obj
 
@@ -117,4 +111,8 @@
 .ENDIF
 
+.IF "$(WITH_WIDGETSET)"!=""
+CFLAGS+= $(WIDGETSET_CFLAGS)
+.ENDIF
+
 .IF "$(OS)$(CPU)" == "SOLARISS"
 .IF "$(COM)"!="GCC"
Index: vcl/unx/source/app/nassound.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/nassound.cxx,v
retrieving revision 1.3
retrieving revision 1.6
diff -u -p -u -r1.3 -r1.6
--- vcl/unx/source/app/nassound.cxx	4 Jun 2003 11:23:18 -0000	1.3
+++ vcl/unx/source/app/nassound.cxx	10 May 2004 15:56:12 -0000	1.6
@@ -59,7 +59,7 @@
  *
  ************************************************************************/
 #include <salimpsound.hxx>
-#include <salsound.hxx>
+#include <salsound.h>
 
 #ifdef USE_NAS
 
@@ -139,7 +139,7 @@ BOOL NASSound::connect()
 											(YieldFunc)handleEvents );
 			SalDbgAssert( "AudioConnectionNumber is %d, DisplayConnectionNumber is %d\n",
 						  AuServerConnectionNumber( (AuServer*)s_pServer ),
-						  ConnectionNumber( GetSalData()->GetDefDisp()->GetDisplay() ) );
+						  ConnectionNumber( GetSalData()->GetDisplay()->GetDisplay() ) );
 		}
 	}
 	return s_pServer ? TRUE : FALSE;
@@ -179,7 +179,7 @@ int NASSound::handleEvents( int fd, void
 	return 1;
 }
 
-NASSound::NASSound( ::SalSound* pSalSound ) :
+NASSound::NASSound( ::X11SalSound* pSalSound ) :
 		VSound( pSalSound ),
 		m_nFlowID( 0 )
 {
@@ -224,7 +224,10 @@ void NASSound::play()
  			aState.element_num = 0;
  			for( int n = 0; n < 20 && ! bStarted; n++ )
  			{
- 				usleep( 20000 );
+                TimeValue aVal;
+                aVal.Seconds = 0;
+                aVal.Nanosec = 20000000;
+                osl_waitThread( &aVal );
  				AuHandleEvents( (AuServer*)s_pServer );
 
  				int nStates = 1;
Index: vcl/unx/source/app/osssound.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/osssound.cxx,v
retrieving revision 1.4
retrieving revision 1.6
diff -u -p -u -r1.4 -r1.6
--- vcl/unx/source/app/osssound.cxx	4 Jun 2003 11:23:28 -0000	1.4
+++ vcl/unx/source/app/osssound.cxx	17 Mar 2004 10:06:24 -0000	1.6
@@ -58,7 +58,7 @@
  *
  *
  ************************************************************************/
-#include <salsound.hxx>
+#include <salsound.h>
 #include <salimpsound.hxx>
 
 #include <svapp.hxx>
@@ -270,7 +270,7 @@ BOOL OSSSound::startRIFF( OSSData* pData
 	return TRUE;
 }
 
-int OSSSound::findChunk( OSSData* pData, char* pChunk )
+int OSSSound::findChunk( OSSData* pData, const char* pChunk )
 {
 	if( !pData || ! pData->m_pSound || ! pData->m_pSound->m_pBuffer )
 		return -1;
@@ -287,18 +287,18 @@ int OSSSound::findChunk( OSSData* pData,
 	return -1;
 }
 
-short int OSSSound::readLEShort( char* pBuf )
+short int OSSSound::readLEShort( const char* pBuf )
 {
-	unsigned char* pBuffer = (unsigned char*)pBuf;
+	const unsigned char* pBuffer = (const unsigned char*)pBuf;
 	short int nRet = *pBuffer++;
 	nRet |= *pBuffer << 8;
 
 	return nRet;
 }
 
-ULONG OSSSound::readBELong( char* pBuf )
+ULONG OSSSound::readBELong( const char* pBuf )
 {
-	unsigned char* pBuffer = (unsigned char*)pBuf;
+	const unsigned char* pBuffer = (const unsigned char*)pBuf;
 	ULONG nRet	 = *pBuffer++ << 24;
 	nRet		|= *pBuffer++ << 16;
 	nRet		|= *pBuffer++ << 8;
@@ -307,9 +307,9 @@ ULONG OSSSound::readBELong( char* pBuf )
 	return nRet;
 }
 
-int OSSSound::readLEInt( char* pBuf )
+int OSSSound::readLEInt( const char* pBuf )
 {
-	unsigned char* pBuffer = (unsigned char*)pBuf;
+	const unsigned char* pBuffer = (const unsigned char*)pBuf;
 	int nRet = *pBuffer++;
 	nRet |= (int)(*pBuffer++) << 8;
 	nRet |= (int)(*pBuffer++) << 16;
@@ -360,7 +360,10 @@ void OSSSound::run()
                             pData->m_nCurPos += nBytes;
                     }
                     aGuard.clear();
-                    usleep(50000);
+                    TimeValue aVal;
+                    aVal.Seconds = 0;
+                    aVal.Nanosec = 20000000;
+                    osl_waitThread( &aVal );
                     aGuard.reset();
                     if( s_aDataList.GetObject( 0 ) != pData )
                     {
@@ -422,7 +425,7 @@ void OSSSound::remove( OSSSound* pSound 
 	}
 }
 
-OSSSound::OSSSound( ::SalSound* pSound ) :
+OSSSound::OSSSound( ::X11SalSound* pSound ) :
 		VSound( pSound )
 {
 	initBuffer();
Index: vcl/unx/source/app/rptpsound.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/rptpsound.cxx,v
retrieving revision 1.6.74.1
retrieving revision 1.13
diff -u -p -u -r1.6.74.1 -r1.13
--- vcl/unx/source/app/rptpsound.cxx	28 Jan 2004 15:23:50 -0000	1.6.74.1
+++ vcl/unx/source/app/rptpsound.cxx	10 May 2004 15:56:24 -0000	1.13
@@ -64,7 +64,7 @@
 #include <sys/poll.h>
 #endif
 
-#include <salsound.hxx>
+#include <salsound.h>
 #include <salimpsound.hxx>
 
 #include <salunx.h>
@@ -72,21 +72,11 @@
 #include <saldisp.hxx>
 #include <psprint/strhelper.hxx>
 #include <string.h>
-
-#ifdef SOLARIS
-// Solaris 2.5.1 misses it in unistd.h
-extern "C" int usleep(unsigned int);
-#endif
-
-#if defined(FREEBSD) || defined(NETBSD)
 #include <unistd.h>
-#endif
 
-#ifdef _USE_NAMESPACE
 using namespace vcl_sal;
 using namespace vos;
 using namespace psp;
-#endif
 
 BOOL						RPTPSound::s_bConnected			= FALSE;
 BOOL						RPTPSound::s_bFailedOnce		= FALSE;
@@ -112,17 +102,17 @@ BOOL RPTPSound::connect()
 	static const char* portenv = env ? strchr( env, ':' ) : NULL;
 	static char sBuf[1024];
 
-	if( ! env && GetSalData() && GetSalData()->GetDefDisp() &&
-		DisplayString( GetSalData()->GetDefDisp()->GetDisplay() ) )
+	if( ! env && GetSalData() && GetSalData()->GetDisplay() &&
+		DisplayString( GetSalData()->GetDisplay()->GetDisplay() ) )
 	{
-		env = strdup( DisplayString( GetSalData()->GetDefDisp()->GetDisplay() ) );
+		env = strdup( DisplayString( GetSalData()->GetDisplay()->GetDisplay() ) );
 		portenv = strchr( env, ':' );
 	}
 
 	int nPort = portenv ? atoi( portenv+1 ) : 5556;
 	nPort = nPort ? nPort : 5556;
 
-	strcpy( sBuf, "uninitialized" );
+	strncpy( sBuf, "uninitialized", 14 );
 	if( env && portenv )
 	{
 		if( portenv != env )
@@ -131,10 +121,10 @@ BOOL RPTPSound::connect()
 			sBuf[ portenv - env ] = 0;
 		}
 		else
-			strcpy( sBuf, "localhost" );
+			strncpy( sBuf, "localhost", 10 );
 	}
 	else
-		strcpy( sBuf, "localhost" );
+		strncpy( sBuf, "localhost", 10 );
 
 	SalDbgAssert( "resolving \"%s\", env = \"%s\", portenv = \"%s\"\n",
 				  sBuf,
@@ -259,7 +249,10 @@ ByteString RPTPSound::readLine()
 					goto doreturn;
 				}
 			}
-			usleep( 1000 );
+            TimeValue aVal;
+            aVal.Seconds = 0;
+            aVal.Nanosec = 1000000;
+            osl_waitThread( &aVal );
 		}
 	}
   doreturn:
@@ -303,7 +296,7 @@ ULONG RPTPSound::getMaxId()
 	return nID;
 }
 
-RPTPSound::RPTPSound( SalSound* pSalSound ) :
+RPTPSound::RPTPSound( X11SalSound* pSalSound ) :
 		VSound( pSalSound ),
 		m_nID( 0 )
 {
@@ -350,7 +343,7 @@ void RPTPSound::play()
 		aCommand += " sound=";
 		aCommand += m_pSalSound->m_aSoundFile;
 		aCommand += " size=";
-		aCommand += (ULONG)m_aStat.st_size;
+		aCommand += ByteString::CreateFromInt64((ULONG)m_aStat.st_size);
 		
 		aAnswer = sendCommand( aCommand );
 		
@@ -383,7 +376,7 @@ void RPTPSound::stop()
 	if( m_nID )
 	{
 		ByteString aCommand( "stop id=#" );
-		aCommand += m_nID;
+		aCommand += ByteString::CreateFromInt64(m_nID);
 		aAnswer = sendCommand( aCommand );
 	}
 	if( aAnswer.GetChar( 0 ) != '+' && m_pSalSound)
@@ -395,7 +388,7 @@ void RPTPSound::pause()
 	if( m_nID )
 	{
 		ByteString aCommand( "pause id=#" );
-		aCommand += m_nID;
+		aCommand += ByteString::CreateFromInt64(m_nID);
 		sendCommand( aCommand );
 	}
 }
@@ -405,7 +398,7 @@ void RPTPSound::cont()
 	if( m_nID )
 	{
 		ByteString aCommand( "continue id=#" );
-		aCommand += m_nID;
+		aCommand += ByteString::CreateFromInt64(m_nID);
 		sendCommand( aCommand );
 	}
 }
Index: vcl/unx/source/app/saldata.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/saldata.cxx,v
retrieving revision 1.26.10.2
retrieving revision 1.36
diff -u -p -u -r1.26.10.2 -r1.36
--- vcl/unx/source/app/saldata.cxx	26 Aug 2003 14:15:59 -0000	1.26.10.2
+++ vcl/unx/source/app/saldata.cxx	17 Jun 2004 12:27:36 -0000	1.36
@@ -59,8 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_SALDATA_CXX
-
 #ifdef USE_XTOOLKIT
 #  define SAL_XT
 #endif
@@ -70,9 +68,9 @@
 #include <unistd.h>
 #include <fcntl.h>
 
-#include <stdio.h>
-#include <string.h>
-#include <stdlib.h>
+#include <cstdio>
+#include <cstring>
+#include <cstdlib>
 #include <limits.h>
 #include <errno.h>
 #include <pthread.h>
@@ -101,18 +99,15 @@
 // [ed] 6/15/02 There's a conflicting definition of INT8 within the Xmd.h header
 // and the solar.h OOo header.  So, wrap the X11 header with a bogus #define
 // to use the OOo definition of the symbol for INT8.
+// [fa] 4/12/04 With 64-bit changes, X11 headers also conflict with INT64
 
-#ifdef MACOSX
-#define INT8 blehBlahFooBar
-#endif
+#define INT8 blehBlahFooBarINT8
+#define INT64 blehBlahFooBarINT64
 
 #include <X11/Xproto.h>
 
-// [ed] 6/15/02 Get rid of INT8 hack
-
-#ifdef MACOSX
 #undef INT8
-#endif
+#undef INT64
 
 #include <postx.h>
 
@@ -125,8 +120,8 @@
 #ifndef _SV_SALINST_HXX
 #include <salinst.hxx>
 #endif
-#ifndef _SV_SALFRAME_HXX
-#include <salframe.hxx>
+#ifndef _SV_SALFRAME_H
+#include <salframe.h>
 #endif
 #ifndef _OSL_SIGNAL_H_
 #include <osl/signal.h>
@@ -140,6 +135,7 @@
 
 #include <tools/debug.hxx>
 #include <sm.hxx>
+#include <svapp.hxx>
 
 #ifndef _SAL_I18N_INPUTMETHOD_HXX
 #include "i18n_im.hxx"
@@ -297,23 +293,20 @@ static const char* XRequest[] = {
 	"X_NoOperation"
 };
 
-BEGIN_C
 // -=-= C statics =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 
+BEGIN_C
 
 static oslSignalAction SalSignalHdl (void* pData, oslSignalInfo* pInfo)
 {
-	ULONG nException = 0;
-
 	switch (pInfo->Signal)
 	{
 		case osl_Signal_System :
 			return osl_Signal_ActCallNextHdl;
 		case osl_Signal_Terminate :
-			if (!GetSalData()->Close())
-				return osl_Signal_ActIgnore;
-			break;
+			Application::Quit();
+            return osl_Signal_ActIgnore;
 		case osl_Signal_User :
 			return osl_Signal_ActCallNextHdl;
 		default: break;
@@ -322,14 +315,15 @@ static oslSignalAction SalSignalHdl (voi
 	return osl_Signal_ActAbortApp;
 }
 
+END_C
 
-static int sal_XErrorHdl( Display *pDisplay, XErrorEvent *pEvent )
+int SalData::XErrorHdl( Display *pDisplay, XErrorEvent *pEvent )
 {
 	GetSalData()->XError( pDisplay, pEvent );
 	return 0;
 }
 
-static int sal_XIOErrorHdl( Display *pDisplay )
+int SalData::XIOErrorHdl( Display *pDisplay )
 {
     /*  #106197# hack: until a real shutdown procedure exists
      *  _exit ASAP
@@ -339,7 +333,7 @@ static int sal_XIOErrorHdl( Display *pDi
 
     // really bad hack
     if( ! SessionManagerClient::checkDocumentsSaved() )
-        oslSignalAction eToDo = osl_raiseSignal (OSL_SIGNAL_USER_X11SUBSYSTEMERROR, NULL);
+        /* oslSignalAction eToDo = */ osl_raiseSignal (OSL_SIGNAL_USER_X11SUBSYSTEMERROR, NULL);
 
 	fprintf( stderr, "X IO Error\n" );
 	fflush( stdout );
@@ -353,100 +347,46 @@ static int sal_XIOErrorHdl( Display *pDi
 	return 0;
 }
 
-END_C
-
 // -=-= SalData =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 #include <pthread.h>
 
 SalData::SalData()
 {
-	argv_			= 0;
-	argc_			= 0;
-
-	pTimerProc_ 	= 0;
-
-	memset( sig_, 0, sizeof( sig_ ) ); // SIG_DFL
 	bNoExceptions_	= !!getenv( "SAL_NOSEGV" );
 
-	pXLib_			= new SalXLib();
-	pDefDisp_		= 0;
-	pCurDisp_		= 0;
+	pXLib_			= NULL;
+    m_pSalDisplay	= NULL;
+	pInstance_		= NULL;
 
 	hMainThread_	= pthread_self();
-
-	pFirstInstance_ = NULL;
-	pFirstFrame_	= NULL;
 }
 
 SalData::~SalData()
 {
-    while( SalDisplays_.Count() )
-        delete SalDisplays_.Remove( (ULONG)0 );
-
-	delete pXLib_;
-    pDefDisp_ = NULL;
-    pCurDisp_ = NULL;
-}
-
-long SalData::Close() const
-{
-	signal( SIGTERM, sig_[SIGTERM] );
-	if( !pFirstFrame_ )
-		return 1;
-
-	SalFrame *pFrame = pFirstFrame_;
-	while( pFrame )
-	{
-		if( !pFrame->maFrameData.Close() )
-			return 0;
-		pFrame = pFrame->maFrameData.GetNextFrame();
-	}
-	return 1;
+    DeleteDisplay();
 }
 
-long SalData::ShutDown() const
+void SalData::DeleteDisplay()
 {
-	if( !pFirstFrame_ )
-		return 1;
-
-	SalFrame *pFrame = pFirstFrame_;
-	while( pFrame )
-	{
-		if( !pFrame->maFrameData.ShutDown() )
-			return 0;
-		pFrame = pFrame->maFrameData.GetNextFrame();
-	}
-	return 1;
+    delete m_pSalDisplay;
+    m_pSalDisplay	= NULL;
+	delete pXLib_;
+    pXLib_		= NULL;
 }
 
-XubString SalData::GetCommandLineParam( USHORT nParam ) const
+void SalData::Init()
 {
-	if( !nParam ) { return aBinaryPath_; }
-	if( nParam >= argc_ ) return String();
-	return String( argv_[nParam], osl_getThreadTextEncoding() );
+    pXLib_ = new SalXLib();
+    pXLib_->Init();
 }
 
-SalDisplay *SalData::GetDisplay( Display *pDisplay )
+void SalData::initNWF( void )
 {
-	SalDisplay *pSalDisplay = SalDisplays_.First();
-	while( pSalDisplay && pSalDisplay->GetDisplay() != pDisplay )
-		pSalDisplay = SalDisplays_.Next();
-	return pSalDisplay;
 }
 
-void SalData::Init( int *pArgc, char *ppArgv[] )
+void SalData::deInitNWF( void )
 {
-	// Pfad zum Executable bestimmen
-	char aFilePath[ PATH_MAX ];
-	::rtl::OUString aPath;
-	osl_getExecutableFile( &aPath.pData );
-
-	aBinaryPath_ = aPath;
-
-	argc_			= *pArgc;
-	argv_			= ppArgv;
-	pXLib_->Init( pArgc, ppArgv );
 }
 
 // -=-= SalXLib =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
@@ -496,10 +436,10 @@ SalXLib::SalXLib()
 		nFDs_ = pTimeoutFDS_[0] + 1;
 	}
 
-	bWasXError_ 			= FALSE;
-	bIgnoreXErrors_ 		= !!getenv( "SAL_IGNOREXERRORS" );
+	bWasXError_						= FALSE;
+	bIgnoreXErrors_					= !!getenv( "SAL_IGNOREXERRORS" );
+    m_bHaveSystemChildFrames		= false;
 	nIgnoreErrorLevel               = 0;
-	nStateOfYield_			= 0;
 }
 
 SalXLib::~SalXLib()
@@ -507,17 +447,11 @@ SalXLib::~SalXLib()
 	// close 'wakeup' pipe.
 	close (pTimeoutFDS_[0]);
 	close (pTimeoutFDS_[1]);
-
-// completetly disabled Bug Nr. #47319 -> segv while using xsuntransport=shmem
-// #ifdef SAL_XT
-//	XtDestroyApplicationContext( pApplicationContext_ );
-// #endif
 }
 
 
-void SalXLib::Init( int *pArgc, char *ppArgv[] )
+void SalXLib::Init()
 {
-	SalData *pSalData = GetSalData();
 	SalI18N_InputMethod* pInputMethod = new SalI18N_InputMethod;
 	pInputMethod->SetLocale();
 	XrmInitialize();
@@ -527,7 +461,7 @@ void SalXLib::Init( int *pArgc, char *pp
 	 * try in this order:
 	 *  o  -display command line parameter,
 	 *  o  $DISPLAY environment variable
-	 *  o  defualt display
+	 *  o  default display
 	 */
 	
 	Display *pDisp = NULL;
@@ -545,6 +479,7 @@ void SalXLib::Init( int *pArgc, char *pp
 			aCommandLine.getCommandArg(i+1, aParam);
 			aDisplay = rtl::OUStringToOString(
 				   aParam, osl_getThreadTextEncoding());
+
 			if ((pDisp = XOpenDisplay(aDisplay.getStr()))!=NULL)
 			{
 				/*
@@ -555,7 +490,7 @@ void SalXLib::Init( int *pArgc, char *pp
 			 	*/
 				const char envpre[] = "DISPLAY=";
 				char *envstr = new char[sizeof(envpre)+aDisplay.getLength()];
-				sprintf(envstr, "DISPLAY=%s", aDisplay.getStr());
+				snprintf(envstr, sizeof(envpre)+aDisplay.getLength(), "DISPLAY=%s", aDisplay.getStr());
 				putenv(envstr);
 			}
 			break;
@@ -573,7 +508,8 @@ void SalXLib::Init( int *pArgc, char *pp
 
 	if ( !pDisp )
 	{
-	    rtl::OUString aProgramFileURL = pSalData->GetCommandLineParam(0);
+	    rtl::OUString aProgramFileURL;
+        osl_getExecutableFile( &aProgramFileURL.pData );
 	    rtl::OUString aProgramSystemPath;
         osl_getSystemPathFromFileURL (aProgramFileURL.pData, &aProgramSystemPath.pData);
         rtl::OString  aProgramName = rtl::OUStringToOString(
@@ -600,10 +536,10 @@ void SalXLib::Init( int *pArgc, char *pp
 								   aVI.visual,
 								   AllocNone );
 
-	XSetIOErrorHandler	  ( (XIOErrorHandler)sal_XIOErrorHdl );
-	XSetErrorHandler	  ( (XErrorHandler)sal_XErrorHdl );
+	XSetIOErrorHandler	  ( (XIOErrorHandler)SalData::XIOErrorHdl );
+	XSetErrorHandler	  ( (XErrorHandler)SalData::XErrorHdl );
 
-	SalDisplay *pSalDisplay = new SalDisplay( pDisp, aVI.visual, aColMap );
+	SalDisplay *pSalDisplay = new SalX11Display( pDisp, aVI.visual, aColMap );
 
     pInputMethod->CreateMethod( pDisp );
 	pInputMethod->AddConnectionWatch( pDisp, (void*)this );
@@ -637,29 +573,15 @@ void EmitFontpathWarning( void )
 
 void SalXLib::XError( Display *pDisplay, XErrorEvent *pEvent )
 {
-	char msg[ 120 ] = "";
+    if( m_bHaveSystemChildFrames )
+        return;
 
+	char msg[ 120 ] = "";
 	if( nIgnoreErrorLevel > 0 )
 		return;
 
 	if( ! bIgnoreXErrors_ )
 	{
-		SalFrame* pFrame = GetSalData()->pFirstFrame_;
-		while( pFrame )
-		{
-			if( pFrame->maFrameData.GetStyle() & SAL_FRAME_STYLE_CHILD )
-			{
-				bIgnoreXErrors_ = TRUE;
-				break;
-			}
-			pFrame = pFrame->maFrameData.GetNextFrame();
-		}
-	}
-
-
-
-	if( ! bIgnoreXErrors_ )
-	{
 		if (   (pEvent->error_code   == BadAlloc)
 			&& (pEvent->request_code == X_OpenFont) )
 		{
@@ -682,7 +604,7 @@ void SalXLib::XError( Display *pDisplay,
 #endif
 		fprintf( stderr, "X-Error: %s\n", msg );
 		if( pEvent->request_code > capacityof( XRequest ) )
-			fprintf( stderr, "\tMajor opcode: %d (Shm?)\n", pEvent->request_code );
+			fprintf( stderr, "\tMajor opcode: %d\n", pEvent->request_code );
 		else if( XRequest[pEvent->request_code] )
 			fprintf( stderr, "\tMajor opcode: %d (%s)\n",
 					 pEvent->request_code, XRequest[pEvent->request_code] );
@@ -696,7 +618,7 @@ void SalXLib::XError( Display *pDisplay,
 		fflush( stdout );
 		fflush( stderr );
 #endif
-        if( pDisplay != GetSalData()->GetDefDisp()->GetDisplay() )
+        if( pDisplay != GetSalData()->GetDisplay()->GetDisplay() )
             return;
 
 		oslSignalAction eToDo = osl_raiseSignal (OSL_SIGNAL_USER_X11SUBSYSTEMERROR, NULL);
@@ -811,8 +733,6 @@ void SalXLib::Yield( BOOL bWait )
     if (p_prioritize_timer != NULL)
         CheckTimeout();
 
-	nStateOfYield_ = 0; // is not 0 if we are recursive called
-
 	// first, check for already queued events.
 	for ( int nFD = 0; nFD < nFDs_; nFD++ )
 	{
@@ -864,7 +784,6 @@ void SalXLib::Yield( BOOL bWait )
 		}
 	}
 
-	nStateOfYield_ = 1;
 	{
 		// release YieldMutex (and re-acquire at block end)
 		YieldMutexReleaser aReleaser;
@@ -875,10 +794,8 @@ void SalXLib::Yield( BOOL bWait )
 	if( nFound < 0 ) // error
 	{
 #ifdef DBG_UTIL
-		fprintf( stderr, "SalXLib::Yield s=%d e=%d f=%d\n",
-				 nStateOfYield_, errno, nFound );
+		fprintf( stderr, "SalXLib::Yield e=%d f=%d\n", errno, nFound );
 #endif
-		nStateOfYield_ = 0;
 		if( EINTR == errno )
 		{
 			errno = 0;
@@ -910,10 +827,7 @@ void SalXLib::Yield( BOOL bWait )
 
 		// someone-else has done the job for us
 		if (nFound == 0)
-		{
-			nStateOfYield_ = 0;
 			return;
-		}
 
 		for ( int nFD = 0; nFD < nFDs_; nFD++ )
 		{
@@ -928,25 +842,25 @@ void SalXLib::Yield( BOOL bWait )
 				}
 				if ( FD_ISSET( nFD, &ReadFDS ) )
 				{
-					nStateOfYield_ = 3;
 					if ( pEntry->IsEventQueued() )
 					{
-						nStateOfYield_ = 4;
 						pEntry->HandleNextEvent();
 						// if a recursive call has done the job
 						// so abort here
-						if ( nStateOfYield_ != 4 )
-							break;
 					}
 					nFound--;
 				}
 			}
 		}
 	}
-	nStateOfYield_ = 0;
 }
 
 void SalXLib::Wakeup()
 {
 	write (pTimeoutFDS_[1], "", 1);
+}
+
+void SalXLib::PostUserEvent()
+{
+	Wakeup();
 }
Index: vcl/unx/source/app/saldisp.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/saldisp.cxx,v
retrieving revision 1.44.10.2
retrieving revision 1.55
diff -u -p -u -r1.44.10.2 -r1.55
--- vcl/unx/source/app/saldisp.cxx	9 Jan 2004 18:14:00 -0000	1.44.10.2
+++ vcl/unx/source/app/saldisp.cxx	17 Jun 2004 12:27:52 -0000	1.55
@@ -59,8 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_SALDISP_CXX
-
 #define SAL_XT
 
 // -=-= #includes =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
@@ -82,152 +80,10 @@
 #include <osl/module.h>
 #endif
 
-#ifdef __SunOS_5_5_1
-extern "C" { int gethostname(char*,int); }
-#endif
-
 #include <prex.h>
 #include <X11/cursorfont.h>
-#include "nodrop_curs.h"
-#include "nodrop_mask.h"
-#include "wait_curs.h"
-#include "wait_mask.h"
-#include "hsplit_curs.h"
-#include "hsplit_mask.h"
-#include "vsplit_curs.h"
-#include "vsplit_mask.h"
-#include "neswsize_curs.h"
-#include "neswsize_mask.h"
-#include "nwsesize_curs.h"
-#include "nwsesize_mask.h"
-#include "magnify_curs.h"
-#include "magnify_mask.h"
-#include "rotate_curs.h"
-#include "rotate_mask.h"
-#include "hshear_curs.h"
-#include "hshear_mask.h"
-#include "vshear_curs.h"
-#include "vshear_mask.h"
-#include "drawline_curs.h"
-#include "drawline_mask.h"
-#include "drawrect_curs.h"
-#include "drawrect_mask.h"
-#include "drawpolygon_curs.h"
-#include "drawpolygon_mask.h"
-#include "drawbezier_curs.h"
-#include "drawbezier_mask.h"
-#include "drawarc_curs.h"
-#include "drawarc_mask.h"
-#include "drawpie_curs.h"
-#include "drawpie_mask.h"
-#include "drawcirclecut_curs.h"
-#include "drawcirclecut_mask.h"
-#include "drawellipse_curs.h"
-#include "drawellipse_mask.h"
-#include "drawconnect_curs.h"
-#include "drawconnect_mask.h"
-#include "drawtext_curs.h"
-#include "drawtext_mask.h"
-#include "mirror_curs.h"
-#include "mirror_mask.h"
-#include "crook_curs.h"
-#include "crook_mask.h"
-#include "crop_curs.h"
-#include "crop_mask.h"
-#include "move_curs.h"
-#include "move_mask.h"
-#include "movepoint_curs.h"
-#include "movepoint_mask.h"
-#include "movebezierweight_curs.h"
-#include "movebezierweight_mask.h"
-#include "drawfreehand_curs.h"
-#include "drawfreehand_mask.h"
-#include "drawcaption_curs.h"
-#include "drawcaption_mask.h"
-#include "movedata_curs.h"
-#include "movedata_mask.h"
-#include "copydata_curs.h"
-#include "copydata_mask.h"
-#include "linkdata_curs.h"
-#include "linkdata_mask.h"
-#include "movedlnk_curs.h"
-#include "movedlnk_mask.h"
-#include "copydlnk_curs.h"
-#include "copydlnk_mask.h"
-#include "movefile_curs.h"
-#include "movefile_mask.h"
-#include "copyfile_curs.h"
-#include "copyfile_mask.h"
-#include "linkfile_curs.h"
-#include "linkfile_mask.h"
-#include "moveflnk_curs.h"
-#include "moveflnk_mask.h"
-#include "copyflnk_curs.h"
-#include "copyflnk_mask.h"
-#include "movefiles_curs.h"
-#include "movefiles_mask.h"
-#include "copyfiles_curs.h"
-#include "copyfiles_mask.h"
-
-#include "chart_curs.h"
-#include "chart_mask.h"
-#include "detective_curs.h"
-#include "detective_mask.h"
-#include "pivotcol_curs.h"
-#include "pivotcol_mask.h"
-#include "pivotfld_curs.h"
-#include "pivotfld_mask.h"
-#include "pivotrow_curs.h"
-#include "pivotrow_mask.h"
-#include "pivotdel_curs.h"
-#include "pivotdel_mask.h"
-
-#include "chain_curs.h"
-#include "chain_mask.h"
-#include "chainnot_curs.h"
-#include "chainnot_mask.h"
-
-#include "timemove_curs.h"
-#include "timemove_mask.h"
-#include "timesize_curs.h"
-#include "timesize_mask.h"
-
-#include "ase_curs.h"
-#include "ase_mask.h"
-#include "asn_curs.h"
-#include "asn_mask.h"
-#include "asne_curs.h"
-#include "asne_mask.h"
-#include "asns_curs.h"
-#include "asns_mask.h"
-#include "asnswe_curs.h"
-#include "asnswe_mask.h"
-#include "asnw_curs.h"
-#include "asnw_mask.h"
-#include "ass_curs.h"
-#include "ass_mask.h"
-#include "asse_curs.h"
-#include "asse_mask.h"
-#include "assw_curs.h"
-#include "assw_mask.h"
-#include "asw_curs.h"
-#include "asw_mask.h"
-#include "aswe_curs.h"
-#include "aswe_mask.h"
-#include "null_curs.h"
-#include "null_mask.h"
-
-#include "airbrush_curs.h"
-#include "airbrush_mask.h" 
-#include "fill_curs.h"
-#include "fill_mask.h"
-#include "vertcurs_curs.h" 
-#include "vertcurs_mask.h" 
-
+#include "salcursors.h"
 #include "invert50.h"
-#if !(defined AIX)
-#include <X11/extensions/XShm.h>
-#endif
 #ifdef SOLARIS
 #define XK_KOREAN
 #endif
@@ -272,7 +128,7 @@ extern "C" { int gethostname(char*,int);
 #include <salgdi.hxx>
 #endif
 #ifndef _SV_SALFRAME_HXX
-#include <salframe.hxx>
+#include <salframe.h>
 #endif
 #ifndef _SV_KEYCODES_HXX
 #include <keycodes.hxx>
@@ -280,20 +136,17 @@ extern "C" { int gethostname(char*,int);
 #ifndef _SV_SALBTYPE_HXX
 #include <salbtype.hxx>
 #endif
-#ifndef _SV_SALBMP_HXX
-#include <salbmp.hxx>
-#endif
-#ifndef _SV_SALSYS_HXX
-#include <salsys.hxx>
+#ifndef _SV_SALBMP_H
+#include <salbmp.h>
 #endif
-#ifndef _SV_SALOGL_HXX
-#include <salogl.hxx>
+#ifndef _SV_SALOGL_H
+#include <salogl.h>
 #endif
 #ifndef _OSL_THREADMUTEX_H_
 #include <osl/mutex.h>
 #endif
-#ifndef _SV_SALOBJ_HXX
-#include <salobj.hxx>
+#ifndef _SV_SALOBJ_H
+#include <salobj.h>
 #endif
 #ifndef _VCL_SM_HXX
 #include <sm.hxx>
@@ -301,6 +154,9 @@ extern "C" { int gethostname(char*,int);
 #ifndef _VCL_WMADAPTOR_HXX_
 #include <wmadaptor.hxx>
 #endif
+#ifndef _SV_DTINT_HXX
+#include <dtint.hxx>
+#endif
 
 #include <osl/socket.h>
 #include <rtl/ustring>
@@ -323,8 +179,6 @@ using namespace vcl_sal;
 
 // -=-= Prototyps =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-EXTERN_C int XShmGetEventBase( Display* );
-
 // -=-= static variables -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 static const char* const VisualClassName[] = {
@@ -565,9 +419,9 @@ extern "C" srv_vendor_t 
 sal_GetServerVendor( Display *p_display )
 {
 	typedef struct {
-		srv_vendor_t  e_vendor;	// vendor as enum
-		char		 *p_name;	// vendor name as returned by VendorString()
-		unsigned int  n_len;	// number of chars to compare
+		srv_vendor_t	e_vendor;	// vendor as enum
+		const char		*p_name;	// vendor name as returned by VendorString()
+		unsigned int	n_len;	// number of chars to compare
 	} vendor_t;
 
 	const vendor_t p_vendorlist[] = {
@@ -697,7 +551,7 @@ BOOL SalDisplay::BestVisual( Display    
 		pWeight[ i ] -= pVInfos[ i ].visualid;
 	}
 
-	SalOpenGL::MakeVisualWeights( pDisplay, pVInfos, pWeight, nVisuals );
+	X11SalOpenGL::MakeVisualWeights( pDisplay, pVInfos, pWeight, nVisuals );
 	
 	int nBestVisual = 0;
 	int nBestWeight = -1024;
@@ -743,19 +597,20 @@ extern "C" {
 }
 #endif /* HAVE_LIBSN */
 
-SalDisplay::SalDisplay( Display *display, Visual *pVisual, Colormap aColMap ) : 
+SalDisplay::SalDisplay( Display *display, Colormap aColMap ) :
 		pDisp_( display ),
 		mpFallbackFactory ( NULL ),
         m_pWMAdaptor( NULL ),
-        hRefWindow_( None )
+        hRefWindow_( None ),
+        mpInputMethod( NULL )
 {
+#if OSL_DEBUG_LEVEL > 1
+    fprintf( stderr, "SalDisplay::SalDisplay()\n" );
+#endif
     SalData *pSalData  = GetSalData();
-    XVisualInfo aXVI;
 
-    if( !pSalData->GetDefDisp() )
-        pSalData->SetDefDisp( this );
-    if( !pSalData->GetCurDisp() )
-        pSalData->SetCurDisp( this );
+    DBG_ASSERT( ! pSalData->GetDisplay(), "Second SalDisplay created !!!\n" );
+    pSalData->SetSalDisplay( this );
 
 #ifdef _USE_PRINT_EXTENSION_
     pXLib_    = XSalIsDisplay( pDisp_ ) ? pSalData->GetLib() : NULL;
@@ -768,30 +623,30 @@ SalDisplay::SalDisplay( Display *display
 		aColMap = DefaultColormap( display, nScreen_ );
     if( !IsDisplay() && !aColMap)
     	aColMap = 1;   // trick for XPrinter
-    if (!pVisual)
-        pVisual = DefaultVisual( pDisp_, nScreen_ );
-
-    sal_GetVisualInfo( pDisp_, XVisualIDFromVisual( pVisual ), aXVI );
-    Init( aColMap, &aXVI );
-
-#ifdef HAVE_LIBSN
-    m_pSnDisplay = sn_display_new( display, SnErrorTrapPush, SnErrorTrapPop );
-    m_pSnLauncheeContext = sn_launchee_context_new_from_environment( m_pSnDisplay, nScreen_ );
-#  ifdef DBG_UTIL
-    if( !m_pSnLauncheeContext )
-         fprintf( stderr, "Failed to get launch feedback info from "
-		  "DESKTOP_LAUNCH_ID/DESKTOP_LAUNCH_WINDOW\n" );
-#  endif /* DBG_UTIL */
-#endif /* HAVE_LIBSN */
 }
 
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 SalDisplay::~SalDisplay( )
 {
+#if OSL_DEBUG_LEVEL > 1
+    fprintf( stderr, "SalDisplay::~SalDisplay()\n" );
+#endif
+    if( pDisp_ )
+    {
+        doDestruct();
+#if OSL_DEBUG_LEVEL > 1
+        fprintf( stderr, "display %p closed\n", pDisp_ );
+#endif
+        pDisp_ = NULL;
+    }
+}
+
+void SalDisplay::doDestruct()
+{
     SalData *pSalData = GetSalData();
 
     delete m_pWMAdaptor;
-	SalBitmap::ImplDestroyCache();
+	X11SalBitmap::ImplDestroyCache();
     DestroyFontCache();
 
     if( IsDisplay() )
@@ -827,7 +682,7 @@ SalDisplay::~SalDisplay( )
         pXLib_->Remove( ConnectionNumber( pDisp_ ) );
 		
         // free colormap before modifying pVisual_
-        xColor_.Clear();
+        delete m_pColormap;
         
         delete pVisual_;
         
@@ -836,7 +691,6 @@ SalDisplay::~SalDisplay( )
 
 		delete mpInputMethod;
 		delete mpKbdExtension;
-        XCloseDisplay( pDisp_ );
     }
 
 #ifdef HAVE_LIBSN
@@ -845,96 +699,126 @@ SalDisplay::~SalDisplay( )
     sn_display_unref( m_pSnDisplay );
 #endif /* HAVE_LIBSN */
 
-    pDisp_  = (Display*)ILLEGAL_POINTER;
-
-    pSalData->Remove( this );
-
     pVisual_        = (SalVisual*)ILLEGAL_POINTER;
     pRootVisual_    = (SalVisual*)ILLEGAL_POINTER;
 
-    if( pSalData->GetDefDisp() == this )
-        pSalData->SetDefDisp( NULL );
-    if( pSalData->GetCurDisp() == this )
-        pSalData->SetCurDisp( NULL );
+    if( pSalData->GetDisplay() == this )
+        pSalData->SetSalDisplay( NULL );
 }
 
-static int DisplayHasEvent( int fd, SalDisplay *pDisplay  )
+static int DisplayHasEvent( int fd, SalX11Display *pDisplay  )
 {
   DBG_ASSERT( ConnectionNumber( pDisplay->GetDisplay() ) == fd,
               "wrong fd in DisplayHasEvent" );
   if( ! pDisplay->IsDisplay() )
       return 0;
 
-  SalYieldMutex* pSalInstYieldMutex	=
-      GetSalData()->pFirstInstance_->maInstData.mpSalYieldMutex;
+  vos::IMutex* pSalInstYieldMutex	=
+      GetSalData()->pInstance_->GetYieldMutex();
   ::vos::OGuard aGuard( *pSalInstYieldMutex );
   return pDisplay->IsEvent();
 }
-static int DisplayQueue( int fd, SalDisplay *pDisplay )
+static int DisplayQueue( int fd, SalX11Display *pDisplay )
 {
   DBG_ASSERT( ConnectionNumber( pDisplay->GetDisplay() ) == fd,
               "wrong fd in DisplayHasEvent" )
-  SalYieldMutex* pSalInstYieldMutex	=
-      GetSalData()->pFirstInstance_->maInstData.mpSalYieldMutex;
+  vos::IMutex* pSalInstYieldMutex	=
+      GetSalData()->pInstance_->GetYieldMutex();
   ::vos::OGuard aGuard( *pSalInstYieldMutex );
   return XEventsQueued( pDisplay->GetDisplay(),
                         QueuedAfterReading );
 }
-static int DisplayYield( int fd, SalDisplay *pDisplay )
+static int DisplayYield( int fd, SalX11Display *pDisplay )
 {
   DBG_ASSERT( ConnectionNumber( pDisplay->GetDisplay() ) == fd,
               "wrong fd in DisplayHasEvent" );
-  SalYieldMutex* pSalInstYieldMutex	=
-      GetSalData()->pFirstInstance_->maInstData.mpSalYieldMutex;
+  vos::IMutex* pSalInstYieldMutex	=
+      GetSalData()->pInstance_->GetYieldMutex();
   ::vos::OGuard aGuard( *pSalInstYieldMutex );
   pDisplay->Yield( TRUE );
   return TRUE;
 }
 
+SalX11Display::SalX11Display( Display *display, Visual *pVisual, Colormap aColMap )
+		: SalDisplay( display, aColMap )
+{
+    Init( aColMap, pVisual );
+
+	pXLib_->Insert( ConnectionNumber( pDisp_ ),
+					this,
+					(YieldFunc) DisplayHasEvent,
+					(YieldFunc) DisplayQueue,
+					(YieldFunc) DisplayYield );
+}
+
+SalX11Display::~SalX11Display()
+{
+#if OSL_DEBUG_LEVEL > 1
+    fprintf( stderr, "SalX11Display::~SalX11Display()\n" );
+#endif
+	if( pDisp_ )
+	{
+		doDestruct();
+		XCloseDisplay( pDisp_ );
+		pDisp_ = NULL;
+	}
+}
+
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-void SalDisplay::Init( Colormap hXColmap, const XVisualInfo* pXVI )
+void SalDisplay::Init( Colormap hXColmap, Visual *pVisual )
 {
-    GetSalData()->Insert( this );
+    XVisualInfo aXVI;
+
+    if (!pVisual)
+        pVisual = DefaultVisual( pDisp_, nScreen_ );
+    sal_GetVisualInfo( pDisp_, XVisualIDFromVisual( pVisual ), aXVI );
 
     for( size_t i = 0; i < POINTER_COUNT; i++ )
         aPointerCache_[i] = None;
 
     eWindowManager_     = otherwm;
     nProperties_        = PROPERTY_DEFAULT;
-    nStateOfYield_      = 0;
-    nStateOfSendEvent_  = 0;
     hEventGuard_        = NULL;
-    pEventQueue_        = NULL;
-    pDispatchStack_     = NULL;
     pFontCache_         = NULL;
 	mpFontList			= (XlfdStorage*)NULL;
 	mpFactory  			= (AttributeProvider*)NULL;
-    pCapture_           = NULL;
-    pVisual_            = new SalVisual( pXVI );
+    m_pCapture			= NULL;
+    pVisual_            = new SalVisual( &aXVI );
     m_bXinerama			= false;
     aSize_              = Size( DisplayWidth ( pDisp_, nScreen_ ),
                                 DisplayHeight( pDisp_, nScreen_ ) );
-    aResolution_        =
-        Pair( DPI( aSize_.Width(),  DisplayWidthMM ( pDisp_, nScreen_ ) ),
-              DPI( aSize_.Height(), DisplayHeightMM( pDisp_, nScreen_ ) ) );
 
+    const char *value;
+    /*  #i15507#
+     *  Xft resolution should take precedence since
+     *  it is what modern desktops use.
+     */
+    if ((value = XGetDefault (pDisp_, "Xft", "dpi")))
+    {
+        rtl::OString str (value);
+        long dpi = (long) str.toDouble();
+        aResolution_ = Pair( dpi, dpi );
+        mbExactResolution = true;
+    }
+    else
+    {
+        aResolution_     =
+            Pair( DPI( aSize_.Width(),  DisplayWidthMM ( pDisp_, nScreen_ ) ),
+                  DPI( aSize_.Height(), DisplayHeightMM( pDisp_, nScreen_ ) ) );
+        mbExactResolution	= false;
+    }
+    
     nMaxRequestSize_    = XExtendedMaxRequestSize( pDisp_ ) * 4;
     if( !nMaxRequestSize_ )
         nMaxRequestSize_ = XMaxRequestSize( pDisp_ ) * 4;
 	
 	SetServerVendor();
-	SalBitmap::ImplCreateCache();
+	X11SalBitmap::ImplCreateCache();
 
     if( IsDisplay() )
     {
         hEventGuard_    = osl_createMutex();
 
-        pXLib_->Insert( ConnectionNumber( pDisp_ ),
-                        this,
-                        (YieldFunc) DisplayHasEvent,
-                        (YieldFunc) DisplayQueue,
-                        (YieldFunc) DisplayYield );
-
         pScreen_        = ScreenOfDisplay( pDisp_, nScreen_ );
         hRootWindow_    = RootWindowOfScreen( pScreen_ );
 
@@ -944,7 +828,6 @@ void SalDisplay::Init( Colormap hXColmap
 
         // - - - - - - - - - - Visuals - - - - - - - - - - - - - - -
         Visual *pRootVisual = DefaultVisual( pDisp_, nScreen_ );
-        // if( pRootVisual != pXVI->visual )
         if( pRootVisual->visualid != pVisual_->GetVisualId() )
         {
             XVisualInfo aXVI;
@@ -984,10 +867,10 @@ void SalDisplay::Init( Colormap hXColmap
 							 );
 
 			ByteString aExec( SessionManagerClient::getExecName(), osl_getThreadTextEncoding() );
-			char* argv[2];
+			const char* argv[2];
 			argv[0] = "/bin/sh";
-			argv[1] = const_cast<char*>(aExec.GetBuffer());
-			XSetCommand( pDisp_, hRefWindow_, argv, 2 );
+			argv[1] = aExec.GetBuffer();
+			XSetCommand( pDisp_, hRefWindow_, const_cast<char**>(argv), 2 );
 
             XSelectInput( pDisp_, hRefWindow_, PropertyChangeMask );
 
@@ -996,40 +879,6 @@ void SalDisplay::Init( Colormap hXColmap
         // - - - - - - - - - - Synchronize - - - - - - - - - - - - -
         if( getenv( "SAL_SYNCHRONIZE" ) )
             XSynchronize( pDisp_, True );
-
-        // - - - - - - - - - - Shared Images - - - - - - - - - - - -
-#if defined _XSHM_H_ // && defined DBG_UTIL
-        // SharedMem wird nur noch ueber SalProperties enabled
-        // wegen Bugs #47289 und #46512
-
-        if(    ( nProperties_ & PROPERTY_FEATURE_SharedMemory )
-            && (    *DisplayString( pDisp_ ) == ':'
-                || !strncmp( DisplayString( pDisp_ ), "localhost:", 10 ))
-          )
-        {
-            int  nMinor, nMajor;
-            Bool bPixmaps;
-
-            nSharedImages_      = XShmQueryVersion( pDisp_,
-                                                    &nMajor,
-                                                    &nMinor,
-                                                    &bPixmaps )
-                ? 0x80000000 : 0;
-        }
-        else
-            nSharedImages_      = 0;
-#else
-        nSharedImages_      = 0;
-#endif
-        // - - - - - - - - - - Images  - - - - - - - - - - - - - - -
-        nImageDepths_       = 0x00000000;
-        int nCount, *pDepths = XListDepths( pDisp_, nScreen_, &nCount );
-        if( pDepths )
-        {
-            for( int i = 0; i < nCount; i++ )
-                nImageDepths_ |= 1 << (pDepths[i]-1);
-            XFree( pDepths );
-        }
     }
     else
     {
@@ -1064,22 +913,10 @@ void SalDisplay::Init( Colormap hXColmap
         bLocal_             = TRUE;	/* always true for xprinter */
 		mbLocalIsValid		= TRUE; /* yes bLocal_ is initialized */
         nProperties_       &= ~PROPERTY_SUPPORT_XSetClipMask; //XPrinter doesnt
-        nSharedImages_      = 0;
-        nImageDepths_       = 0xFFFFFFFF;
     }
 
     // - - - - - - - - - - Images  - - - - - - - - - - - - - - -
-    // 0x8080C889
-    nImageDepths_ &= (1<<(32-1))
-                     |(1<<(24-1))
-                     |(1<<(16-1))
-                     |(1<<(15-1))
-                     |(1<<(12-1))
-                     |(1<<(8-1))
-                     |(1<<(4-1))
-                     |(1<<(1-1));
-
-    xColor_             = new SalColormap( this, hXColmap );
+    m_pColormap             = new SalColormap( this, hXColmap );
 
     // - - - - - - - - - - GCs - - - - - - - - - - - - - - - - -
     XGCValues values;
@@ -1149,10 +986,6 @@ void SalDisplay::Init( Colormap hXColmap
                                             invert50_width,
                                             invert50_height );
 
-        // - - - - - - - - - - Sound - - - - - - - - - - - - - - - -
-
-        nBeepVolume_    = 0;
-
         // - - - - - - - - - - Fonts - - - - - - - - - - - - - - - -
 
 #ifndef USE_BUILTIN_RASTERIZER
@@ -1215,9 +1048,6 @@ void SalDisplay::Init( Colormap hXColmap
 			if( GetServerVendor() == vendor_xfree )
             {
                 nProperties_ |= PROPERTY_BUG_XCopyArea_GXxor;
-#ifdef ARM32 // ??? Server! nicht Client ???
-                nProperties_ &= ~PROPERTY_SUPPORT_XSetClipMask;
-#endif
 #if defined LINUX || defined FREEBSD || defined MACOSX
 				// otherwm and olwm are a kind of default, which are not detected
 				// carefully. if we are running linux (i.e. not netbsd) on an xfree 
@@ -1322,6 +1152,20 @@ void SalDisplay::Init( Colormap hXColmap
 
     InitXinerama();
 
+    // initialize system settings update
+    DtIntegrator* pIntegrator = DtIntegrator::CreateDtIntegrator();
+    pIntegrator->Acquire();
+
+#ifdef HAVE_LIBSN
+    m_pSnDisplay = sn_display_new( GetDisplay(), SnErrorTrapPush, SnErrorTrapPop );
+    m_pSnLauncheeContext = sn_launchee_context_new_from_environment( m_pSnDisplay, nScreen_ );
+#  ifdef DBG_UTIL
+    if( !m_pSnLauncheeContext )
+         fprintf( stderr, "Failed to get launch feedback info from "
+		  "DESKTOP_LAUNCH_ID/DESKTOP_LAUNCH_WINDOW\n" );
+#  endif /* DBG_UTIL */
+#endif /* HAVE_LIBSN */
+
 #ifdef DBG_UTIL
     PrintInfo();
 #endif
@@ -1331,7 +1175,7 @@ void SalDisplay::Init( Colormap hXColmap
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 void SalDisplay::Beep() const
 {
-    XBell( pDisp_, nBeepVolume_ );
+    XBell( pDisp_, 0 );
 }
 
 // Keyboard
@@ -1477,9 +1321,6 @@ XubString SalDisplay::GetKeyName( USHORT
             break;
 
         #if !defined (SunXK_Undo) 
-            #define SunXK_Undo		0x0000FF65	// XK_Undo
-            #define SunXK_Again		0x0000FF66	// XK_Redo
-            #define SunXK_Find		0x0000FF68	// XK_Find
             #define SunXK_Stop		0x0000FF69	// XK_Cancel
             #define SunXK_Props		0x1005FF70
             #define SunXK_Front		0x1005FF71
@@ -1490,28 +1331,28 @@ XubString SalDisplay::GetKeyName( USHORT
         #endif
 
         case KEY_REPEAT:
-			nKeySym = GetServerVendor() == vendor_sun ? SunXK_Again : XK_L2;
+			nKeySym = XK_Redo;
             break;
         case KEY_PROPERTIES:
-            nKeySym = GetServerVendor() == vendor_sun ? SunXK_Props : XK_L3;
+            nKeySym = SunXK_Props;
             break;
         case KEY_UNDO:
-            nKeySym = GetServerVendor() == vendor_sun ? SunXK_Undo  : XK_L4; 
+            nKeySym = XK_Undo;
             break;
         case KEY_FRONT:
-            nKeySym = GetServerVendor() == vendor_sun ? SunXK_Front : XK_L5;
+            nKeySym = SunXK_Front;
             break;
         case KEY_COPY:
-            nKeySym = GetServerVendor() == vendor_sun ? SunXK_Copy  : XK_L6;
+            nKeySym = SunXK_Copy;
             break;
         case KEY_OPEN:
-            nKeySym = GetServerVendor() == vendor_sun ? SunXK_Open  : XK_L7;
+            nKeySym = SunXK_Open;
             break;
         case KEY_PASTE:
-            nKeySym = GetServerVendor() == vendor_sun ? SunXK_Paste : XK_L8;
+            nKeySym = SunXK_Paste;
             break;
         case KEY_FIND:
-            nKeySym = GetServerVendor() == vendor_sun ? SunXK_Find  : XK_L9; 
+            nKeySym = XK_Find;
             break;
         case KEY_CUT:
             nKeySym = GetServerVendor() == vendor_sun ? SunXK_Cut   : XK_L10;
@@ -1543,8 +1384,8 @@ XubString SalDisplay::GetKeyName( USHORT
         case KEY_EQUAL:
             nKeySym = XK_equal;
             break;
-        case KEY_FRONT+1: // KEY_HELP
-            nKeySym = XK_F1; // XK_Help; ???
+        case KEY_HELP:
+            nKeySym = XK_Help;
             break;
         case KEY_HANGUL_HANJA:
             nKeySym = XK_Hangul_Hanja;
@@ -1647,7 +1488,7 @@ USHORT SalDisplay::GetKeyCode( KeySym ke
                 *pcPrintable = '+';
                 break;
             case XK_KP_Separator:
-                nKey = KEY_COMMA; // ???
+                nKey = KEY_DECIMAL;
                 *pcPrintable = ',';
                 break;
             case XK_KP_Subtract:
@@ -1655,7 +1496,7 @@ USHORT SalDisplay::GetKeyCode( KeySym ke
                 *pcPrintable = '-';
                 break;
             case XK_KP_Decimal:
-                nKey = KEY_POINT;
+                nKey = KEY_DECIMAL;
                 *pcPrintable = '.';
                 break;
             case XK_KP_Divide:
@@ -1673,28 +1514,7 @@ USHORT SalDisplay::GetKeyCode( KeySym ke
         }
         else switch( keysym )
         {
-#if 1 // Sun schaltet mit "Alt Graph"/XK_Mode_switch um
             // - - - - - Sun X-Server Tastatur ohne Cursorblock ??? - - -
-#if 0 // Sal supports F1 - F26
-            case XK_R1: // XK_F21:
-                nKey = KEY_F21; // KEY_PRINT/KEY_SYSREQ
-                break;
-            case XK_R2: // XK_F22:
-                nKey = KEY_F22; // KEY_SCROLLLOCK
-                break;
-            case XK_R3: // XK_F23:
-                nKey = KEY_F23; // KEY_PAUSE/KEY_BREAK
-                break;
-            case XK_R4: // XK_F24:
-                nKey = KEY_F24; // KEY_EQUAL
-                break;
-            case XK_R5: // XK_F25:
-                nKey = KEY_F25; // KEY_DIVIDE
-                break;
-            case XK_R6: // XK_F26:
-                nKey = KEY_F26; // KEY_MULTIPLY
-                break;
-#endif
             case XK_R7: // XK_F27:
                 nKey = KEY_HOME;
                 break;
@@ -1724,7 +1544,8 @@ USHORT SalDisplay::GetKeyCode( KeySym ke
                 break;
             // - - - - - Sun X-Server Tastatur ??? - - - - - - - - - - - -
             case XK_L1: // XK_F11:
-                nKey = KEY_F11; // KEY_CANCEL
+                nKey = KEY_F11; // on a sun keyboard this actually is usally SunXK_Stop,
+                // but VCL doesn't have a key defintion for that
                 break;
             case XK_L2: // XK_F12:
 				if ( GetServerVendor() == vendor_sun )
@@ -1756,7 +1577,6 @@ USHORT SalDisplay::GetKeyCode( KeySym ke
             case XK_L10: // XK_F20:
                 nKey = KEY_CUT; // KEY_F20
                 break;
-#endif
             default:
                 if( keysym >= XK_F1 && keysym <= XK_F26 )
                     nKey = (USHORT)(KEY_F1 + keysym - XK_F1);
@@ -1811,19 +1631,18 @@ USHORT SalDisplay::GetKeyCode( KeySym ke
                 nKey = KEY_FIND;
                 break;
             case XK_Help:
-                nKey = KEY_FRONT+1; // KEY_HELP
-                nKey = KEY_F1;
+                nKey = KEY_HELP;
                 break;
             case XK_Menu:
                 nKey = KEY_F10;
                 break;
-#if 0
+/*
             case XK_Break:
             case XK_Select:
             case XK_Execute:
             case XK_Print:
             case XK_Cancel:
-#endif
+*/
         }
     }
     else if( IsISOKey( keysym ) )  // XK_ISO_
@@ -2070,7 +1889,7 @@ KeySym SalDisplay::GetKeySym( XKeyEvent 
 XLIB_Cursor SalDisplay::GetPointer( int ePointerStyle )
 {
     if( ePointerStyle > POINTER_COUNT )
-        return NULL;
+        return 0;
 
     XLIB_Cursor &aCur = aPointerCache_[ePointerStyle];
 
@@ -2355,7 +2174,7 @@ XLIB_Cursor SalDisplay::GetPointer( int 
     if( None == aCur )
     {
         XColor      aBlack, aWhite, aDummy;
-        Colormap    hColormap = xColor_->GetXColormap();
+        Colormap    hColormap = m_pColormap->GetXColormap();
 
         XAllocNamedColor( pDisp_, hColormap, "black", &aBlack, &aDummy );
         XAllocNamedColor( pDisp_, hColormap, "white", &aWhite, &aDummy );
@@ -2372,28 +2191,28 @@ XLIB_Cursor SalDisplay::GetPointer( int 
     return aCur;
 }
 
-int SalDisplay::CaptureMouse( SalFrameData *pCapture )
+int SalDisplay::CaptureMouse( SalFrame *pCapture )
 {
     if( !pCapture )
     {
-        pCapture_ = NULL;
+        m_pCapture = NULL;
         XUngrabPointer( GetDisplay(), CurrentTime );
 		XFlush( GetDisplay() );
         return 0;
     }
 
-    if( pCapture_ )
-        //pCapture_->CaptureMouse( FALSE );
-        pCapture_ = NULL;
+    m_pCapture = NULL;
 
+    // FIXME: get rid of X11SalFrame
+    const SystemEnvData* pEnvData = pCapture->GetSystemData();
     int ret = XGrabPointer( GetDisplay(),
-                            pCapture->GetWindow(),
+                            (XLIB_Window)pEnvData->aWindow,
                             False,
                             PointerMotionMask| ButtonPressMask|ButtonReleaseMask,
                             GrabModeAsync,
                             GrabModeAsync,
                             None,
-                            pCapture->GetCursor(),
+                            static_cast<X11SalFrame*>(pCapture)->GetCursor(),
                             CurrentTime );
 
     if( ret != GrabSuccess )
@@ -2402,7 +2221,7 @@ int SalDisplay::CaptureMouse( SalFrameDa
         return -1;
     }
 
-    pCapture_ = pCapture;
+    m_pCapture = pCapture;
     return 1;
 }
 
@@ -2484,198 +2303,141 @@ void SalDisplay::AddFontPath( const Byte
 
 // Events
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-void SalDisplay::Remove( XEvent *pEvent )
-{
-}
-
-void SalDisplay::SendEvent( Atom          aEvent,
-                                  void         *pData,
-                                  XLIB_Window   hReceiver ) const
-{
-    UINT32 aData[5];
-
-#if __SIZEOFLONG > 4
-    aData[0] = (UINT32)((long)pData & 0xffffffff);
-    aData[1] = (UINT32)((long)pData >> 32);
-#else
-    aData[0] = (UINT32)(long)pData;
-    aData[1] = NULL;
-#endif
-    aData[2] = NULL;
-    aData[3] = NULL;
-    aData[4] = NULL;
-
-    SendEvent( aEvent, aData, hReceiver );
-}
 
-void SalDisplay::SendEvent( Atom          aEvent,
-                                  UINT32       *Data,
-                                  XLIB_Window   hReceiver ) const
+void SalDisplay::SendInternalEvent( SalFrame* pFrame, void* pData, USHORT nEvent )
 {
-#define pClient (&(aClient.xclient))
-    XEvent aClient;
-
-    if( !hReceiver )
-        hReceiver = hReceiver;
-
-    pClient->type           = ClientMessage;
-    pClient->display        = pDisp_;
-    pClient->window         = hReceiver;
-    pClient->message_type   = aEvent;
-    pClient->format         = 32;
-
-    if( Data ) for( int i = 0; i < 5; i++ )
-        pClient->data.l[i] = Data[i];
-
 	if( osl_acquireMutex( hEventGuard_ ) )
     {
-        pClient->send_event     = 2;
-        if( pEventQueue_ )
-        {
-            SalXEvent *pEvent = pEventQueue_;
-            while( pEvent->pNext_ )
-                pEvent = pEvent->pNext_;
-
-            pEvent->pNext_                      = new SalXEvent;
-            pEvent->pNext_->event_              = aClient;
-            pEvent->pNext_->pNext_              = NULL;
-        }
-        else
-        {
-            ((SalDisplay*)this)->pEventQueue_   = new SalXEvent;
-            pEventQueue_->event_                = aClient;
-            pEventQueue_->pNext_                = NULL;
-        }
+        m_aUserEvents.push_back( SalUserEvent( pFrame, pData, nEvent ) );
 
 		// Notify SalXLib::Yield() of a pending event.
-		pXLib_->Wakeup();
+		pXLib_->PostUserEvent();
 
         osl_releaseMutex( hEventGuard_ );
     }
     else
         DBG_ASSERT( 1, "SalDisplay::SendEvent !acquireMutex\n" );
-#undef pClient
 }
 
-BOOL SalDisplay::IsEvent()
+BOOL SalX11Display::IsEvent()
 {
-    if( pEventQueue_ )
-        return TRUE;
-
-    if( XEventsQueued( pDisp_, QueuedAlready ) )
+    BOOL bRet = FALSE;
+    
+    if( osl_acquireMutex( hEventGuard_ ) )
+    {
+        if( m_aUserEvents.begin() != m_aUserEvents.end() )
+            bRet = TRUE;
+        osl_releaseMutex( hEventGuard_ );
+    }
+    
+    if( bRet || XEventsQueued( pDisp_, QueuedAlready ) )
         return TRUE;
 
     XFlush( pDisp_ );
     return FALSE;
 }
 
-// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-
-void SalDisplay::Yield( BOOL bWait )
+bool SalDisplay::DispatchInternalEvent()
 {
-    SalXEvent aEvent;
-    while( !nStateOfYield_ )
+    SalFrame* pFrame = NULL;
+    void* pData = NULL;
+    USHORT nEvent = 0;
+
+    if( osl_acquireMutex( hEventGuard_ ) )
     {
-        if( pEventQueue_ )
+        if( m_aUserEvents.begin() != m_aUserEvents.end() )
         {
-            nStateOfYield_ = 5;
-            if( osl_acquireMutex( hEventGuard_ ) )
-            {
-                nStateOfYield_ = 6;
-
-                SalXEvent *pEvent = pEventQueue_;
+            pFrame	= m_aUserEvents.front().m_pFrame;
+            pData	= m_aUserEvents.front().m_pData;
+            nEvent	= m_aUserEvents.front().m_nEvent;
 
-                pEventQueue_    = pEventQueue_->pNext_;
+            m_aUserEvents.pop_front();
+        }
+        osl_releaseMutex( hEventGuard_ );
+    }
+    else
+        DBG_ASSERT( 1, "SalDisplay::Yield !acquireMutex\n" );
 
-                osl_releaseMutex( hEventGuard_ );
+    if( pFrame )
+        pFrame->CallCallback( nEvent, pData );
 
-                aEvent.event_   = pEvent->event_;
+    return pFrame != NULL;
+}
 
-                delete pEvent;
+// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 
-                break;
-            }
-            else
-                DBG_ASSERT( 1, "SalDisplay::Yield !acquireMutex\n" );
-        }
+void SalX11Display::Yield( BOOL bWait )
+{
+    if( DispatchInternalEvent() )
+        return;
 
-        nStateOfYield_ = 1;
+    XEvent aEvent;
+    DBG_ASSERT( static_cast<SalYieldMutex*>(GetSalData()->pInstance_->GetYieldMutex())->GetThreadId() ==
+                NAMESPACE_VOS(OThread)::getCurrentIdentifier(),
+                "will crash soon since solar mutex not locked in SalDisplay::Yield" );
 
-		SalData *pSalData		= GetSalData();
-		SalYieldMutex* pSalInstYieldMutex	=
-			pSalData->pFirstInstance_->maInstData.mpSalYieldMutex;
-		
-		DBG_ASSERT( pSalInstYieldMutex->GetThreadId() ==
-				   NAMESPACE_VOS(OThread)::getCurrentIdentifier(),
-					"will crash soon since solar mutex not locked in SalDisplay::Yield" );
-		
-		// note: alternate input is dispatched by XtAppNextEvent
-		XNextEvent( pDisp_, &aEvent.event_ );		
+    XNextEvent( pDisp_, &aEvent );		
 
 #ifdef HAVE_LIBSN
-		if( m_pSnLauncheeContext )
-	        {
-			sn_launchee_context_complete( m_pSnLauncheeContext );
-			sn_launchee_context_unref( m_pSnLauncheeContext );
-			m_pSnLauncheeContext = NULL;
-		}
-
-		if( sn_display_process_event( m_pSnDisplay, &aEvent.event_ ) )
-			return;
+    if( m_pSnLauncheeContext )
+    {
+        sn_launchee_context_complete( m_pSnLauncheeContext );
+        sn_launchee_context_unref( m_pSnLauncheeContext );
+        m_pSnLauncheeContext = NULL;
+    }
+    
+    if( sn_display_process_event( m_pSnDisplay, &aEvent ) )
+        return;
 #endif /* HAVE_LIBSN */
-	}
-
-    nStateOfYield_ = 0;
 
     BOOL bIgnoreXErrors = pXLib_->GetIgnoreXErrors();
 
-    aEvent.pNext_   = pDispatchStack_;
-    pDispatchStack_ = &aEvent;
-
-    Dispatch( &aEvent.event_ );
-
-    pDispatchStack_ = aEvent.pNext_;
+    Dispatch( &aEvent );
 
 #ifdef DBG_UTIL
     if( pXLib_->WasXError() )
     {
         XFlush( pDisp_ );
-        PrintEvent( "SalDisplay::Yield (WasXError)", &aEvent.event_ );
+        PrintEvent( "SalDisplay::Yield (WasXError)", &aEvent );
     }
 #endif
 
     pXLib_->SetIgnoreXErrors( bIgnoreXErrors );
 }
 
-long SalDisplay::Dispatch( XEvent *pEvent )
+long SalX11Display::Dispatch( XEvent *pEvent )
 {
 	if( pEvent->type == XLIB_KeyPress || pEvent->type == KeyRelease )
-	  {
+    {
 	    XLIB_Window aWindow = pEvent->xkey.window;
-	    SalFrame* pFrame = NULL;
-	    for( pFrame = GetSalData()->pFirstFrame_; 
-			    pFrame 
-			 && pFrame->maFrameData.GetWindow()      != aWindow 
-			 && pFrame->maFrameData.GetShellWindow() != aWindow; 
-			 pFrame = pFrame->maFrameData.GetNextFrame() )
-	      ;
-	    if( pFrame ) {
-	      XLIB_Window window= pFrame->maFrameData.GetWindow();
-	      if ( mpInputMethod->FilterEvent( pEvent , window) )
-		return 0;
+        
+        std::list< SalFrame* >::const_iterator it;
+        for( it = m_aFrames.begin(); it != m_aFrames.end(); ++it )
+        {
+            X11SalFrame* pFrame = static_cast< X11SalFrame* >(*it);
+            if( pFrame->GetWindow() == aWindow || pFrame->GetShellWindow() == aWindow )
+            {
+                aWindow = pFrame->GetWindow();
+                break;
+            }
+        }
+	    if( it != m_aFrames.end() )
+        {
+            if ( mpInputMethod->FilterEvent( pEvent , aWindow ) )
+                return 0;
 	    }
-	  }
+    }
 	else
-	  if ( mpInputMethod->FilterEvent( pEvent, None ) )
-	    return 0;
+        if ( mpInputMethod->FilterEvent( pEvent, None ) )
+            return 0;
 	
-	SalInstance* pInstance = GetSalData()->pFirstInstance_;
-	if( pInstance->maInstData.mpEventCallback )
+	SalInstance* pInstance = GetSalData()->pInstance_;
+    if( pInstance->GetEventCallback() )
 	{
 		YieldMutexReleaser aReleaser;
-		pInstance->maInstData.mpEventCallback( pInstance->maInstData.mpEventInst, pEvent, sizeof( XEvent ) );
+		pInstance->CallEventCallback( pEvent, sizeof( XEvent ) );
 	}
-
+    
     switch( pEvent->type )
     {
         case MotionNotify:
@@ -2689,12 +2451,9 @@ long SalDisplay::Dispatch( XEvent *pEven
             if( pEvent->xproperty.window == hRefWindow_ &&
                 pEvent->xproperty.atom == getWMAdaptor()->getAtom( WMAdaptor::VCL_SYSTEM_SETTINGS ) )
             {
-                SalFrame *pFrame = GetSalData()->pFirstFrame_;
-                while( pFrame )
-                {
-                    pFrame->maFrameData.Call( SALEVENT_SETTINGSCHANGED, NULL );
-                    pFrame = pFrame->maFrameData.GetNextFrame();
-                }
+                std::list< SalFrame* >::const_iterator it;
+                for( it = m_aFrames.begin(); it != m_aFrames.end(); ++it )
+                    (*it)->CallCallback( SALEVENT_SETTINGSCHANGED, NULL );
                 return 0;
             }
             break;
@@ -2713,43 +2472,29 @@ long SalDisplay::Dispatch( XEvent *pEven
 				GetKbdExtension()->Dispatch( pEvent );
 				return 1;
 			}
-
-#ifdef _XSHM_H_
-		{
-			BOOL bPrevious = pXLib_->GetIgnoreXErrors();
-			pXLib_->SetIgnoreXErrors( TRUE );
-            if( pEvent->type == XShmGetEventBase( pDisp_ ) + ShmCompletion )
-            {
-                Remove( pEvent );
-                return 1;
-            }
-			pXLib_->SetIgnoreXErrors( bPrevious );
-		}
-#endif
             break;
     }
 
-    SalFrame *pFrame = GetSalData()->pFirstFrame_;
-
-    while( pFrame )
+    std::list< SalFrame* >::const_iterator it;
+    for( it = m_aFrames.begin(); it != m_aFrames.end(); ++it )
     {
+        X11SalFrame* pFrame = static_cast< X11SalFrame* >(*it);
 		XLIB_Window aDispatchWindow = pEvent->xany.window;
-        if( pFrame->maFrameData.GetWindow() == aDispatchWindow
-            || pFrame->maFrameData.GetShellWindow() == aDispatchWindow
-            || pFrame->maFrameData.GetForeignParent() == aDispatchWindow
+        if( pFrame->GetWindow() == aDispatchWindow
+            || pFrame->GetShellWindow() == aDispatchWindow
+            || pFrame->GetForeignParent() == aDispatchWindow
 			)
 		{
-			return pFrame->maFrameData.Dispatch( pEvent );
+			return pFrame->Dispatch( pEvent );
 		}
-		if( pEvent->type == ConfigureNotify && pEvent->xconfigure.window == pFrame->maFrameData.GetStackingWindow() )
+		if( pEvent->type == ConfigureNotify && pEvent->xconfigure.window == pFrame->GetStackingWindow() )
 		{
-			return pFrame->maFrameData.Dispatch( pEvent );
+			return pFrame->Dispatch( pEvent );
 		}
-        pFrame = pFrame->maFrameData.GetNextFrame();
     }
 
 	// dispatch to salobjects
-	SalObjectData::Dispatch( pEvent );
+	X11SalObject::Dispatch( pEvent );
 
     return 0;
 }
@@ -2884,24 +2629,6 @@ void SalDisplay::PrintEvent( const ByteS
                 break;
         }
     }
-#ifdef _XSHM_H_
-    else if( pEvent->type == XShmGetEventBase( pDisp_ ) + ShmCompletion )
-    {
-#define pCompletionEvent ((XShmCompletionEvent*)pEvent)
-        fprintf( stderr, "[%s] %s s=%d d=%ld\n",
-                 rComment.GetBuffer(),
-                 "ShmCompletion",
-                 pCompletionEvent->send_event,
-                 pCompletionEvent->drawable );
-
-        fprintf( stderr, "\t\tc=%d.%d s=%ld o=%ld\n",
-                 pCompletionEvent->major_code,
-                 pCompletionEvent->minor_code,
-                 pCompletionEvent->shmseg,
-                 pCompletionEvent->offset );
-#undef pCompletionEvent
-    }
-#endif
     else
         fprintf( stderr, "[%s] %d s=%d w=%ld\n",
                  rComment.GetBuffer(),
@@ -2970,7 +2697,7 @@ void SalDisplay::PrintInfo() const
              Hypothenuse( DisplayWidthMM ( pDisp_, nScreen_ ),
                           DisplayHeightMM( pDisp_, nScreen_ ) ) / 25.4 );
     fprintf( stderr, "\tBlack&White       \t%lu %lu\n",
-             xColor_->GetBlackPixel(), xColor_->GetWhitePixel() );
+             m_pColormap->GetBlackPixel(), m_pColormap->GetWhitePixel() );
     fprintf( stderr, "\tRGB               \t0x%lx 0x%lx 0x%lx\n",
              pVisual_->red_mask, pVisual_->green_mask, pVisual_->blue_mask );
     fprintf( stderr, "\tVisual            \t%d-bit %s ID=0x%x\n",
@@ -2982,31 +2709,16 @@ void SalDisplay::PrintInfo() const
                  pRootVisual_->GetDepth(),
                  VisualClassName[ pRootVisual_->GetClass() ],
                  pRootVisual_->GetVisualId() );
-    fprintf( stderr, "\tImages (Shared)   \t0x%lx (%lx)\n",
-             nImageDepths_, nSharedImages_ );
-
-    if( nStateOfYield_ || nStateOfSendEvent_ )
-    {
-        fprintf( stderr, "Thread/Signal\n" );
-        fprintf( stderr, "\tNextEvent         \t%d\n", nStateOfYield_ );
-        fprintf( stderr, "\tSendEvent         \t%d\n", nStateOfSendEvent_ );
-    }
-    if( pDispatchStack_ )
-    {
-        fprintf( stderr, "Event\n" );
-        SalXEvent *pEvent = pDispatchStack_;
-        while( pEvent )
-        {
-            PrintEvent( "\t\x08\x08", &pEvent->event_ );
-            pEvent = pEvent->pNext_;
-        }
-    }
 }
 
-void SalDisplay::GetScreenFontResolution( long& rDPIX, long& rDPIY ) const
+void SalDisplay::GetScreenFontResolution( sal_Int32& rDPIX, sal_Int32& rDPIY ) const
 {
+    rDPIX = aResolution_.A();
+    rDPIY = aResolution_.B();
+    if( mbExactResolution )
+        return;
+    
     int   nThreshold;
-
     if (aSize_.Height() <= 600)
         nThreshold =  96;
     else if (aSize_.Height() <= 768)
@@ -3014,10 +2726,7 @@ void SalDisplay::GetScreenFontResolution
     else
         nThreshold = 120; 
     
-    rDPIX = aResolution_.A();
-    rDPIY = aResolution_.B();
-    
 #if 0    
     if( rDPIY < nThreshold )
     {
         rDPIX = Divide( rDPIX * nThreshold, rDPIY );
@@ -3097,6 +2806,33 @@ void SalDisplay::InitXinerama()
 #endif
 }
 
+void SalDisplay::registerFrame( SalFrame* pFrame )
+{
+    m_aFrames.push_front( pFrame );
+}
+
+void SalDisplay::deregisterFrame( SalFrame* pFrame )
+{
+    if( osl_acquireMutex( hEventGuard_ ) )
+    {
+        for( std::list< SalUserEvent >::iterator it = m_aUserEvents.begin();
+             it != m_aUserEvents.end(); ++it )
+        {
+            if( it->m_pFrame == pFrame )
+            {
+                std::list< SalUserEvent >::iterator rit = it++;
+                m_aUserEvents.erase( rit );
+            }
+        }
+        osl_releaseMutex( hEventGuard_ );
+    }
+    else
+        DBG_ERROR( "SalDisplay::deregisterFrame !acquireMutex\n" );
+
+    m_aFrames.remove( pFrame );
+}
+
+
 // -=-= SalVisual -=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 SalVisual::SalVisual( const XVisualInfo* pXVI )
@@ -3398,7 +3134,7 @@ SalColormap::SalColormap( SalDisplay *pD
 
 // PseudoColor
 SalColormap::SalColormap( const BitmapPalette &rPalette )
-    : pDisplay_( GetSalData()->GetCurDisp() ),
+    : pDisplay_( GetSalData()->GetDisplay() ),
       hColormap_( None ),
       pVisual_( NULL ),
       nUsed_( rPalette.GetEntryCount() ),
@@ -3423,7 +3159,7 @@ SalColormap::SalColormap( const BitmapPa
 
 // MonoChrome
 SalColormap::SalColormap()
-    : pDisplay_( GetSalData()->GetCurDisp() ),
+    : pDisplay_( GetSalData()->GetDisplay() ),
       hColormap_( None ),
       pVisual_( NULL ),
       nUsed_( 2 ),
@@ -3439,7 +3175,7 @@ SalColormap::SalColormap()
 
 // TrueColor
 SalColormap::SalColormap( USHORT nDepth )
-    : pDisplay_( GetSalData()->GetCurDisp() ),
+    : pDisplay_( GetSalData()->GetDisplay() ),
       hColormap_( None ),
       pPalette_( NULL ),
       nUsed_( 1 << nDepth ),
@@ -3543,7 +3279,7 @@ SalColormap::~SalColormap()
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 void SalColormap::SetPalette( const BitmapPalette &rPalette )
 {
-	if( this != &GetSalData()->GetCurDisp()->GetColormap() )
+	if( this != &GetSalData()->GetDisplay()->GetColormap() )
 	{
 	    nBlackPixel_ = 0xFFFFFFFF;
 		nWhitePixel_ = 0xFFFFFFFF;
Index: vcl/unx/source/app/salimpsound.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/salimpsound.hxx,v
retrieving revision 1.3
retrieving revision 1.5
diff -u -p -u -r1.3 -r1.5
--- vcl/unx/source/app/salimpsound.hxx	4 Jun 2003 11:23:59 -0000	1.3
+++ vcl/unx/source/app/salimpsound.hxx	6 Jan 2004 14:31:37 -0000	1.5
@@ -108,17 +106,17 @@ namespace vcl_sal {
 		static BOOL		startSound( OSSData* pData );
 		static BOOL		startAU( OSSData* pData );
 		static BOOL		startRIFF( OSSData* pData );
-		static int			findChunk( OSSData* pData, char* pChunk );
-		static short int	readLEShort( char* );
-		static int			readLEInt( char* );
-		static ULONG		readBELong( char* );
+		static int			findChunk( OSSData* pData, const char* pChunk );
+		static short int	readLEShort( const char* );
+		static int			readLEInt( const char* );
+		static ULONG		readBELong( const char* );
 
 		DECL_LINK( notifyStopHdl, void* );
 		DECL_LINK( notifyErrorHdl, void* );
 	protected:
 		virtual BOOL isValid();
 	public:
-		OSSSound( ::SalSound* pSalSound );
+		OSSSound( ::X11SalSound* pSalSound );
 		virtual ~OSSSound();
 
 		virtual void play();
@@ -171,17 +169,17 @@ namespace vcl_sal {
 		static BOOL			startSound( DevAudioData* pData );
 		static BOOL			startAU( DevAudioData* pData );
 		static BOOL			startRIFF( DevAudioData* pData );
-		static int			findChunk( DevAudioData* pData, char* pChunk );
-		static short int	readLEShort( char* );
-		static int			readLEInt( char* );
-		static ULONG		readBELong( char* );
+		static int			findChunk( DevAudioData* pData, const char* pChunk );
+		static short int	readLEShort( const char* );
+		static int			readLEInt( const char* );
+		static ULONG		readBELong( const char* );
 
 		DECL_LINK( notifyStopHdl, void* );
 		DECL_LINK( notifyErrorHdl, void* );
 	protected:
 		virtual BOOL isValid();
 	public:
-		DevAudioSound( ::SalSound* pSalSound );
+		DevAudioSound( ::X11SalSound* pSalSound );
 		virtual ~DevAudioSound();
 
 		virtual void play();
@@ -220,7 +218,7 @@ namespace vcl_sal {
 	protected:
 		virtual BOOL isValid();
 	public:
-		RPTPSound( ::SalSound* pSalSound );
+		RPTPSound( ::X11SalSound* pSalSound );
 
 		virtual	~RPTPSound();
 
@@ -252,7 +250,7 @@ namespace vcl_sal {
 	protected:
 		virtual BOOL isValid();
 	public:
-		NASSound( ::SalSound* pSalSound );
+		NASSound( ::X11SalSound* pSalSound );
 
 		virtual	~NASSound();
 
Index: vcl/unx/source/app/salinst.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/salinst.cxx,v
retrieving revision 1.16
retrieving revision 1.22
diff -u -p -u -r1.16 -r1.22
--- vcl/unx/source/app/salinst.cxx	22 Jul 2003 10:12:20 -0000	1.16
+++ vcl/unx/source/app/salinst.cxx	10 May 2004 15:57:05 -0000	1.22
@@ -59,9 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_SALINST_CXX
-
-// -=-= #includes =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 #include <string.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -77,11 +74,11 @@
 #ifndef _SV_SALDISP_HXX
 #include <saldisp.hxx>
 #endif
-#ifndef _SV_SALINST_HXX
-#include <salinst.hxx>
+#ifndef _SV_SALINST_H
+#include <salinst.h>
 #endif
-#ifndef _SV_SALFRAME_HXX
-#include <salframe.hxx>
+#ifndef _SV_SALFRAME_H
+#include <salframe.h>
 #endif
 #ifndef _SV_SALWTYPE_HXX
 #include <salwtype.hxx>
@@ -92,25 +89,15 @@
 #ifndef _SV_DTINT_HXX
 #include <dtint.hxx>
 #endif
-#if !defined(_USE_PRINT_EXTENSION_)
 #ifndef _SV_SALPRN_H
 #include <salprn.h>
 #endif
-#endif
 #ifndef _VCL_SM_HXX
 #include <sm.hxx>
 #endif
-// -=-= C++ globals =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-
-void SalAbort( const XubString& rErrorText )
-{
-	if( !rErrorText.Len() )
-		fprintf( stderr, "Application Error" );
-	else
-		fprintf( stderr, ByteString( rErrorText, gsl_getSystemTextEncoding() ).GetBuffer() );
-	abort();
-}
-
+#ifndef _SV_SALOGL_H
+#include <salogl.h>
+#endif
 
 // -------------------------------------------------------------------------
 //
@@ -156,83 +143,43 @@ sal_Bool SalYieldMutex::tryToAcquire()
 
 //----------------------------------------------------------------------------
 
-void InitSalData()
-{
-	SalData *pSalData = new SalData;
-	SetSalData( pSalData );
-}
-
-void DeInitSalData()
-{
-	SalData *pSalData = GetSalData();
-	delete pSalData;
-	SetSalData( NULL );
-}
-
-void InitSalMain()
-{
-	if (GetSalData())
-	{
-		int argc = 0;
-		GetSalData()->Init( &argc, 0 );
-	}
-}
-
-void DeInitSalMain()
-{
-}
-
-void SetFilterCallback( void* pCallback, void* pInst )
-{
-	SalData* pSalData = GetSalData();
-
-	pSalData->pFirstInstance_->maInstData.mpFilterCallback = pCallback;
-	pSalData->pFirstInstance_->maInstData.mpFilterInst = pInst;
-}
+// -=-= SalInstance =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
+// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 
-SalInstance *CreateSalInstance()
+// plugin factory function
+extern "C" 
 {
-	SalData 	*pSalData = GetSalData();
-	SalInstance *pInst	  = new SalInstance;
+    SalInstance* create_SalInstance()
+    {
+        X11SalInstance* pInstance = new X11SalInstance( new SalYieldMutex() );
 
-	// init instance (only one instance in this version !!!)
-	pSalData->pFirstInstance_ = pInst;
+        // initialize SalData
+        SalData *pSalData = new SalData;
+        SetSalData( pSalData );
+        pSalData->pInstance_ = pInstance;
+        pSalData->Init();
 
-	return pInst;
+        return pInstance;
+    }
 }
 
-void DestroySalInstance( SalInstance *pInst )
+X11SalInstance::~X11SalInstance()
 {
+    // eventually free OpenGL lib
+    X11SalOpenGL::Release();
+    
+    // close session management
     SessionManagerClient::close();
-	SalData *pSalData = GetSalData();
+    // dispose SalDisplay list from SalData
+    // would be done in a static destructor else which is
+    // a little late
 
-	// reset instance (only one instance in this version !!!)
-	if( pSalData->pFirstInstance_ == pInst )
-		pSalData->pFirstInstance_ = NULL;
+	SalData *pSalData = GetSalData();
+    pSalData->deInitNWF();
+	delete pSalData;
+	SetSalData( NULL );
 
-	delete pInst;
-}
-
-// -=-= SalInstance =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-// -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-SalInstance::SalInstance()
-{
-	maInstData.mpFilterCallback 	= NULL;
-	maInstData.mpFilterInst 		= NULL;
-	maInstData.mpEventInst			= NULL;
-	maInstData.mpEventCallback		= NULL;
-	maInstData.mpErrorEventInst		= NULL;
-	maInstData.mpErrorEventCallback	= NULL;
-	maInstData.mpSalYieldMutex		= new SalYieldMutex;
-	maInstData.mpSalYieldMutex->acquire();
-    maInstData.mbPrinterInit		= false;
-}
-
-SalInstance::~SalInstance()
-{
-// #75711# - java is running
-  	maInstData.mpSalYieldMutex->release();
-  	delete maInstData.mpSalYieldMutex;
+  	delete mpSalYieldMutex;
 }
 
 
@@ -284,14 +231,15 @@ Bool ImplPredicateEvent( Display *, XEve
 }
 
 
-BOOL SalInstance::AnyInput(USHORT nType)
+
+bool X11SalInstance::AnyInput(USHORT nType)
 {
 	SalData *pSalData = GetSalData();
-	Display *pDisplay  = pSalData->GetDefDisp()->GetDisplay();
+	Display *pDisplay  = pSalData->GetDisplay()->GetDisplay();
     BOOL bRet = FALSE;
 
     if( (nType & INPUT_TIMER) &&
-        pSalData->GetDefDisp()->GetXLib()->CheckTimeout( false ) )
+        pSalData->GetDisplay()->GetXLib()->CheckTimeout( false ) )
     {
         bRet = TRUE;
     }
@@ -311,20 +259,16 @@ BOOL SalInstance::AnyInput(USHORT nType)
 	return bRet;
 }
 
-#ifdef _VOS_NO_NAMESPACE
-IMutex* SalInstance::GetYieldMutex()
-#else
-vos::IMutex* SalInstance::GetYieldMutex()
-#endif
+vos::IMutex* X11SalInstance::GetYieldMutex()
 {
-	return maInstData.mpSalYieldMutex;
+	return mpSalYieldMutex;
 }
 
 // -----------------------------------------------------------------------
 
-ULONG SalInstance::ReleaseYieldMutex()
+ULONG X11SalInstance::ReleaseYieldMutex()
 {
-	SalYieldMutex* pYieldMutex = maInstData.mpSalYieldMutex;
+	SalYieldMutex* pYieldMutex = mpSalYieldMutex;
 	if ( pYieldMutex->GetThreadId() ==
 		 NAMESPACE_VOS(OThread)::getCurrentIdentifier() )
 	{
@@ -344,9 +288,9 @@ ULONG SalInstance::ReleaseYieldMutex()
 
 // -----------------------------------------------------------------------
 
-void SalInstance::AcquireYieldMutex( ULONG nCount )
+void X11SalInstance::AcquireYieldMutex( ULONG nCount )
 {
-	SalYieldMutex* pYieldMutex = maInstData.mpSalYieldMutex;
+	SalYieldMutex* pYieldMutex = mpSalYieldMutex;
 	while ( nCount )
 	{
 		pYieldMutex->acquire();
@@ -354,25 +298,38 @@ void SalInstance::AcquireYieldMutex( ULO
 	}
 }
 
-void SalInstance::Yield( BOOL bWait )
+void X11SalInstance::Yield( BOOL bWait )
 { GetSalData()->GetLib()->Yield( bWait ); }
 
-void SalInstance::SetEventCallback( void* pInstance, bool(*pCallback)(void*,void*,int) )
+void* X11SalInstance::GetConnectionIdentifier( ConnectionIdentifierType& rReturnedType, int& rReturnedBytes )
+{
+	static const char* pDisplay = getenv( "DISPLAY" );
+	rReturnedType	= AsciiCString;
+	rReturnedBytes	= pDisplay ? strlen( pDisplay )+1 : 1;
+	return pDisplay ? (void*)pDisplay : (void*)"";
+}
+
+SalFrame *X11SalInstance::CreateFrame( SalFrame *pParent, ULONG nSalFrameStyle )
 {
-	maInstData.mpEventInst		= pInstance;
-	maInstData.mpEventCallback	= pCallback;
+	SalFrame *pFrame = new X11SalFrame( pParent, nSalFrameStyle );
+
+	return pFrame;
 }
 
-void SalInstance::SetErrorEventCallback( void* pInstance, bool(*pCallback)(void*,void*,int) )
+SalFrame* X11SalInstance::CreateChildFrame( SystemParentData* pParentData, ULONG nStyle )
 {
-	maInstData.mpErrorEventInst		= pInstance;
-	maInstData.mpErrorEventCallback	= pCallback;
+	SalFrame* pFrame = new X11SalFrame( NULL, nStyle, pParentData );
+
+	return pFrame;
 }
 
-void* SalInstance::GetConnectionIdentifier( ConnectionIdentifierType& rReturnedType, int& rReturnedBytes )
+void X11SalInstance::DestroyFrame( SalFrame* pFrame )
 {
-	static const char* pDisplay = getenv( "DISPLAY" );
-	rReturnedType	= AsciiCString;
-	rReturnedBytes	= pDisplay ? strlen( pDisplay )+1 : 1;
-	return pDisplay ? (void*)pDisplay : (void*)"";
+	delete pFrame;
 }
+
+SalOpenGL* X11SalInstance::CreateSalOpenGL( SalGraphics* pGraphics )
+{
+    return new X11SalOpenGL( pGraphics );
+}
+
Index: vcl/unx/source/app/salsys.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/salsys.cxx,v
retrieving revision 1.7
retrieving revision 1.10
diff -u -p -u -r1.7 -r1.10
--- vcl/unx/source/app/salsys.cxx	15 Apr 2003 16:08:33 -0000	1.7
+++ vcl/unx/source/app/salsys.cxx	20 Feb 2004 08:58:32 -0000	1.10
@@ -59,51 +59,30 @@
  *
  ************************************************************************/
 
-#include <salsys.hxx>
-#include <stacktrace.hxx>
-
-#include <stdio.h>
-
 #include <salunx.h>
-#include <saldisp.hxx>
+#include <salsys.hxx>
 #include <dtint.hxx>
 #include <msgbox.hxx>
 #include <button.hxx>
 #include <svdata.hxx>
+#include <salinst.h>
+#include <saldisp.hxx>
+#include <salsys.h>
+#include <cstdio>
 
-// -----------------------------------------------------------------------
 
-String GetSalSummarySystemInfos( ULONG nFlags )
+SalSystem* X11SalInstance::CreateSalSystem()
 {
-	sal_PostMortem aPostMortem;
+    return new X11SalSystem();
+}
+
+// -----------------------------------------------------------------------
 
-	/*
-	 *	unimplemented flags:
-	 *	SALSYSTEM_GETSYSTEMINFO_MODULES
-	 *	SALSYSTEM_GETSYSTEMINFO_MOUSEINFO
-	 *	SALSYSTEM_GETSYSTEMINFO_SYSTEMDIRS
-	 *	SALSYSTEM_GETSYSTEMINFO_LOCALVOLUMES
-	 */
-
-	ByteString aRet;
-	if( nFlags & SALSYSTEM_GETSYSTEMINFO_SYSTEMVERSION )
-		aRet += aPostMortem.getSystemInfo();
-	if( nFlags & SALSYSTEM_GETSYSTEMINFO_CPUTYPE )
-		aRet += aPostMortem.getProcessorInfo();
-	if( nFlags & SALSYSTEM_GETSYSTEMINFO_MEMORYINFO )
-		aRet += aPostMortem.getMemoryInfo();
-	if( nFlags & SALSYSTEM_GETSYSTEMINFO_STACK )
-		aRet += aPostMortem.getStackTrace();
-	if( nFlags & SALSYSTEM_GETSYSTEMINFO_GRAPHICSSYSTEM )
-		aRet += aPostMortem.getGraphicsSystem();
-
-#if OSL_DEBUG_LEVEL > 1
-	fprintf( stderr, "SalSystem::GetSummarySystemInfos() =\n%s", aRet.GetBuffer() );
-#endif
-	return String( aRet, RTL_TEXTENCODING_ISO_8859_1 );
+X11SalSystem::~X11SalSystem()
+{
 }
 
-bool GetSalSystemDisplayInfo( System::DisplayInfo& rInfo )
+bool X11SalSystem::GetSalSystemDisplayInfo( DisplayInfo& rInfo )
 {
     bool bSuccess = false;
     Display* pDisplay = XOpenDisplay( NULL );
@@ -128,7 +107,7 @@ bool GetSalSystemDisplayInfo( System::Di
     return bSuccess;
 }
 
-int ImplShowNativeDialog( const String& rTitle, const String& rMessage, const std::list< String >& rButtons, int nDefButton )
+int X11SalSystem::ShowNativeDialog( const String& rTitle, const String& rMessage, const std::list< String >& rButtons, int nDefButton )
 {
     int nRet = -1;
 
@@ -136,57 +115,19 @@ int ImplShowNativeDialog( const String& 
     if( pSVData->mpIntroWindow )
         pSVData->mpIntroWindow->Hide();
 
-    DtIntegrator* pIntegrator = DtIntegrator::CreateDtIntegrator( NULL );
-    if( pIntegrator->GetDtType() == DtGNOME )
-    {
-        ByteString aCmdLine( "msgbox-gnome ");
-        int nButton = 0;
-        for( std::list< String >::const_iterator it = rButtons.begin(); it != rButtons.end(); ++it )
-        {
-            if( nButton == nDefButton )
-                aCmdLine.Append( "-defaultbutton" );
-            else
-                aCmdLine.Append( "-button" );
-            nButton++;
-            aCmdLine.Append( " \"" );
-            aCmdLine.Append( ByteString( *it, RTL_TEXTENCODING_UTF8 ) );
-            aCmdLine.Append( "\" " );
-        }
-        aCmdLine.Append( " \"" );
-        aCmdLine.Append( ByteString( rTitle, RTL_TEXTENCODING_UTF8 ) );
-        aCmdLine.Append( "\" \"" );
-        aCmdLine.Append( ByteString( rMessage, RTL_TEXTENCODING_UTF8 ) );
-        aCmdLine.Append( "\" 2>/dev/null" );
-
-        FILE* fp = popen( aCmdLine.GetBuffer(), "r" );
-        if( fp )
-        {
-            ByteString aAnswer;
-            char buf[16];
-            while( fgets( buf, sizeof( buf ), fp ) )
-            {
-                aAnswer.Append( buf );
-            }
-            pclose( fp );
-            nRet = aAnswer.ToInt32();
-        }
-    }
-    else // default to a VCL dialogue since we do not have a native implementation
-    {
-        WarningBox aWarn( NULL, WB_STDWORK, rMessage );
-        aWarn.SetText( rTitle );
-        aWarn.Clear();
-
-        USHORT nButton = 0;
-        for( std::list< String >::const_iterator it = rButtons.begin(); it != rButtons.end(); ++it )
-        {
+	WarningBox aWarn( NULL, WB_STDWORK, rMessage );
+	aWarn.SetText( rTitle );
+	aWarn.Clear();
+
+	USHORT nButton = 0;
+	for( std::list< String >::const_iterator it = rButtons.begin(); it != rButtons.end(); ++it )
+	{
             aWarn.AddButton( *it, nButton+1, nButton == (USHORT)nDefButton ? BUTTONDIALOG_DEFBUTTON : 0 );
             nButton++;
-        }
-        aWarn.SetFocusButton( (USHORT)nDefButton+1 );
-
-        nRet = ((int)aWarn.Execute()) - 1;
-    }
+	}
+	aWarn.SetFocusButton( (USHORT)nDefButton+1 );
+	
+	nRet = ((int)aWarn.Execute()) - 1;
 
     // normalize behaviour, actually this should never happen
     if( nRet < -1 || nRet >= rButtons.size() )
@@ -195,7 +136,7 @@ int ImplShowNativeDialog( const String& 
     return nRet;
 }
 
-int ImplShowNativeMessageBox(const String& rTitle, const String& rMessage, int nButtonCombination, int nDefaultButton)
+int X11SalSystem::ShowNativeMessageBox(const String& rTitle, const String& rMessage, int nButtonCombination, int nDefaultButton)
 {
     int nDefButton = 0;
     std::list< String > aButtons;
@@ -245,7 +186,7 @@ int ImplShowNativeMessageBox(const Strin
             case SALSYSTEM_SHOWNATIVEMSGBOX_BTN_IGNORE: nDefButton = 2;break;
         }
     }
-    int nResult = ImplShowNativeDialog( rTitle, rMessage, aButtons, nDefButton );
+    int nResult = ShowNativeDialog( rTitle, rMessage, aButtons, nDefButton );
 
     return nResult != -1 ? nButtonIds[ nResult ] : 0;
 }
Index: vcl/unx/source/app/saltimer.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/saltimer.cxx,v
retrieving revision 1.4.136.1
retrieving revision 1.8
diff -u -p -u -r1.4.136.1 -r1.8
--- vcl/unx/source/app/saltimer.cxx	15 Aug 2003 11:26:14 -0000	1.4.136.1
+++ vcl/unx/source/app/saltimer.cxx	10 May 2004 15:57:39 -0000	1.8
@@ -59,9 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_SALTIMER_CXX
-
-// -=-= #includes =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 #include <stdio.h>
 #if defined(IRIX)
 #include <ctime>
@@ -79,28 +76,32 @@
 #ifndef _SV_SALDISP_HXX
 #include <saldisp.hxx>
 #endif
-#ifndef _SV_SALTIMER_HXX
-#include <saltimer.hxx>
+#ifndef _SV_SALTIMER_H
+#include <saltimer.h>
+#endif
+#ifndef _SV_SALINST_H
+#include <salinst.h>
 #endif
 
 // -=-= SalData =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 void SalData::Timeout() const
 {
-	if( pTimerProc_ )
-		pTimerProc_();
+    ImplSVData* pSVData = ImplGetSVData();
+    if( pSVData->mpSalTimer )
+        pSVData->mpSalTimer->CallCallback();
 }
 
 // -=-= SalXLib =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-inline void SalXLib::StopTimer()
+void SalXLib::StopTimer()
 {
 	Timeout_.tv_sec		= 0;
 	Timeout_.tv_usec	= 0;
 	nTimeoutMS_			= 0;
 }
 
-inline void SalXLib::StartTimer( ULONG nMS )
+void SalXLib::StartTimer( ULONG nMS )
 {
 	timeval Timeout (Timeout_); // previous timeout.
 	gettimeofday (&Timeout_, 0);
@@ -117,16 +118,21 @@ inline void SalXLib::StartTimer( ULONG n
 
 // -=-= SalTimer -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-/* static */ void SalTimer::SetCallback( SALTIMERPROC pProc )
-{ GetSalData()->SetCallback( pProc ); }
+SalTimer* X11SalInstance::CreateSalTimer()
+{
+    return new X11SalTimer();
+}
 
+X11SalTimer::~X11SalTimer()
+{
+}
 
-/* static */ void SalTimer::Stop()
+void X11SalTimer::Stop()
 {
 	GetSalData()->GetLib()->StopTimer();
 }
 
-/* static */ void SalTimer::Start( ULONG nMS )
+void X11SalTimer::Start( ULONG nMS )
 {
 	GetSalData()->GetLib()->StartTimer( nMS );
 }
Index: vcl/unx/source/app/sm.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/sm.cxx,v
retrieving revision 1.13.12.3
retrieving revision 1.18
diff -u -p -u -r1.13.12.3 -r1.18
--- vcl/unx/source/app/sm.cxx	3 May 2004 16:44:39 -0000	1.13.12.3
+++ vcl/unx/source/app/sm.cxx	18 May 2004 13:52:10 -0000	1.18
@@ -60,6 +60,8 @@
  ************************************************************************/
 #include <string.h>
 #include <unistd.h>
+#include <sys/poll.h>
+#include <fcntl.h>
 
 // [ed] 6/15/02 Use the poll replacement on OS X
 #ifdef MACOSX
@@ -67,8 +69,6 @@
 #else
 #include <sys/poll.h>
 #endif
-
-#include <fcntl.h>
 #include <stdio.h>
 
 #include <osl/process.h>
@@ -87,14 +87,14 @@
 #ifndef _SV_SALDISP_HXX
 #include <saldisp.hxx>
 #endif
-#ifndef _SV_SALFRAME_HXX
-#include <salframe.hxx>
+#ifndef _SV_SALFRAME_H
+#include <salframe.h>
 #endif
 #ifndef _SV_SVAPP_HXX
 #include <svapp.hxx>
 #endif
-#ifndef _SV_SALINST_HXX
-#include <salinst.hxx>
+#ifndef _SV_SALINST_H
+#include <salinst.h>
 #endif
 
 #include <osl/conditn.h>
@@ -121,7 +121,7 @@ inline void SMprintf( const char* pForma
 
 static IceSalSession* pOneInstance = NULL;
 
-SalSession* SalInstance::CreateSalSession()
+SalSession* X11SalInstance::CreateSalSession()
 {
     if( ! pOneInstance )
         pOneInstance = new IceSalSession();
@@ -132,7 +132,7 @@ SalSession* SalInstance::CreateSalSessio
  *  class IceSalSession
  */
 
-static SalFrame* pOldStyleSaveFrame = NULL;
+static X11SalFrame* pOldStyleSaveFrame = NULL;
 
 IceSalSession::IceSalSession()
 {
@@ -162,7 +162,10 @@ void IceSalSession::saveDone()
 {
     SessionManagerClient::saveDone();
     if( pOldStyleSaveFrame )
-        SalFrameData::SaveYourselfDone( pOldStyleSaveFrame );
+    {
+        // note: does nothing if not running in generic plugin
+        X11SalFrame::SaveYourselfDone( pOldStyleSaveFrame );
+    }
 }
 
 bool IceSalSession::cancelShutdown()
@@ -175,7 +178,7 @@ void IceSalSession::handleOldX11SaveYour
     // do this only once
     if( ! pOldStyleSaveFrame )
     {
-        pOldStyleSaveFrame = pFrame;
+        pOldStyleSaveFrame = static_cast<X11SalFrame*>(pFrame);
         if( pOneInstance )
         {
             SalSessionSaveRequestEvent aEvent( true, false );
@@ -314,14 +317,6 @@ IMPL_STATIC_LINK( SessionManagerClient, 
     return 0;
 }
 
-IMPL_STATIC_LINK( SessionManagerClient, ShutDownHdl, void*, pDummy )
-{
-    SMprintf( GetSalData()->pFirstFrame_ ? "shutdown on first frame\n" : "shutdown event but no frame\n" );
-    if( GetSalData()->pFirstFrame_ )
-        GetSalData()->pFirstFrame_->maFrameData.ShutDown();
-    return 0;
-}
-
 IMPL_STATIC_LINK( SessionManagerClient, ShutDownCancelHdl, void*, pDummy )
 {
     SMprintf( "shutdown cancel\n" );
@@ -361,6 +356,15 @@ void SessionManagerClient::SaveYourselfP
 #endif
 }
 
+IMPL_STATIC_LINK( SessionManagerClient, ShutDownHdl, void*, pDummy )
+{
+    const std::list< SalFrame* >& rFrames = GetSalData()->GetDisplay()->getFrames();
+    SMprintf( rFrames.begin() != rFrames.end() ? "shutdown on first frame\n" : "shutdown event but no frame\n" );
+    if( rFrames.begin() != rFrames.end() )
+        rFrames.front()->CallCallback( SALEVENT_SHUTDOWN, 0 );
+    return 0;
+}
+
 void SessionManagerClient::DieProc(
 	SmcConn connection,
 	SmPointer client_data
@@ -459,7 +463,7 @@ void SessionManagerClient::open()
         pClientID = NULL;
         ICEConnectionObserver::unlock();
 
-        SalDisplay* pDisp = GetSalData()->GetDefDisp();
+        SalDisplay* pDisp = GetSalData()->GetDisplay();
         if( pDisp->GetDrawable() && aClientID.Len() )
         {
             XChangeProperty( pDisp->GetDisplay(),
@@ -717,6 +721,6 @@ void ICEConnectionObserver::ICEWatchProc
     SMprintf( "ICE connection on %d %s\n",
               IceConnectionNumber( connection ),
               opening ? "inserted" : "removed" );
-    SMprintf( "Display connection is %d\n", ConnectionNumber( GetSalData()->GetDefDisp()->GetDisplay() ) );
+    SMprintf( "Display connection is %d\n", ConnectionNumber( GetSalData()->GetDisplay()->GetDisplay() ) );
 #endif
 }
Index: vcl/unx/source/app/soicon.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/soicon.cxx,v
retrieving revision 1.11
retrieving revision 1.15
diff -u -p -u -r1.11 -r1.15
--- vcl/unx/source/app/soicon.cxx	11 Apr 2003 17:32:54 -0000	1.11
+++ vcl/unx/source/app/soicon.cxx	30 Mar 2004 13:43:24 -0000	1.15
@@ -59,8 +59,6 @@
  *
  ************************************************************************/
 
-#define _SV_SOICON_CXX
-
 #include <dlfcn.h>
 #include <stdio.h>
 #include <string.h>
@@ -98,6 +96,12 @@
 #ifndef _SV_SOICON_HXX
 #include <soicon.hxx>
 #endif
+#ifndef _SV_SALINST_HXX
+#include <salinst.hxx>
+#endif
+#ifndef _SV_SVDATA_HXX
+#include <svdata.hxx>
+#endif
 
 #include <tools/stream.hxx>
 #include <tools/string.hxx>
@@ -115,7 +119,7 @@ static void ConvertXpm( SalDisplay* pDis
 	int nWidth, nHeight, nColors, nCharsPerPixel;
 	XColor *pColors;
 	char *pColorAlias;
-	int nElement = 0,nColor = 0,i,nX,nY;
+	int nElement = 0,nColor = 0,nX,nY;
 	char pColorString[256];
 	BOOL bTransparent = FALSE;
 
@@ -145,7 +149,7 @@ static void ConvertXpm( SalDisplay* pDis
 			}
 		}
 	}
-	nColors = nColor+1;
+	nColors = nColor;
 
 	aPixmap = XCreatePixmap( pDisplay->GetDisplay(),
 								pDisplay->GetRootWindow(),
@@ -236,7 +240,7 @@ BOOL SelectAppIconPixmap( SalDisplay *pD
     // call custom function to read icon
     char customIconFn[256];
 
-    sprintf( customIconFn, "%s%d", VCL_CUSTOM_ICON_BASE, nIcon );
+    snprintf( customIconFn, sizeof(customIconFn), "%s%d", VCL_CUSTOM_ICON_BASE, nIcon );
 	static void* pAppHdl = dlopen( NULL, RTLD_LAZY );
     if ( ( pCustomIcon = ( VCL_CUSTOM_ICON_FN* ) dlsym( pAppHdl, customIconFn ) )
              != NULL )
@@ -315,9 +319,7 @@ static void NextLine( SvStream& rFile, B
 BOOL ReadXBMFile( Display* pDisplay, const String& rFile, SalBitmap*& rpBmp )
 {
 	SvFileStream	aFile( rFile, STREAM_READ );
-	int	   			nBytes = 0;
 	int				nWidth= -1, nHeight=-1;
-	BOOL			bSuccess = FALSE;
 
 	rpBmp = NULL;
 
@@ -351,7 +353,7 @@ BOOL ReadXBMFile( Display* pDisplay, con
 	aPal[ 0 ] = BitmapColor( 0, 0, 0 );
 	aPal[ 1 ] = BitmapColor( 0xff, 0xff, 0xff );
 
-	rpBmp = new SalBitmap;
+	rpBmp = ImplGetSVData()->mpDefInst->CreateSalBitmap();
 	rpBmp->Create( aSize, 1, aPal );
 
 	BitmapBuffer*	pBmpBuf = rpBmp->AcquireBuffer( FALSE );
@@ -408,10 +410,9 @@ BOOL ReadXPMFile( Display* pDisplay, con
 	SvFileStream	aFile( rFile, STREAM_READ );
 	ByteString		aColorName, aColorString, aLine;
 	int				nWidth, nHeight, nColors, nCharsPerPixel;
-	int				nElement = 0,nColor = 0, i, nX, nY;
+	int				nColor = 0,  nX, nY;
 	UINT8*			pColorTable;
 	char*			pColorAlias;
-	BOOL			bTransparent = FALSE;
 	BOOL			bXpm2Mode = FALSE;
 
 	rpBmp = rpMsk = NULL;
@@ -454,13 +455,13 @@ BOOL ReadXPMFile( Display* pDisplay, con
 
 		if( !!aBmp )
 		{
-			rpBmp = new SalBitmap;
+			rpBmp = ImplGetSVData()->mpDefInst->CreateSalBitmap();
 			rpBmp->Create( *aBmp.ImplGetImpBitmap()->ImplGetSalBitmap() );
 		}
 
 		if( !!aMsk )
 		{
-			rpMsk = new SalBitmap;
+			rpMsk = ImplGetSVData()->mpDefInst->CreateSalBitmap();
 			rpMsk->Create( *aMsk.ImplGetImpBitmap()->ImplGetSalBitmap() );
 		}
 
@@ -514,11 +515,11 @@ BOOL ReadXPMFile( Display* pDisplay, con
 	aPal[ 0 ] = BitmapColor( 0, 0, 0 );
 	aPal[ 1 ] = BitmapColor( 0xff, 0xff, 0xff );
 
-	rpBmp = new SalBitmap;
+	rpBmp = ImplGetSVData()->mpDefInst->CreateSalBitmap();
 	rpBmp->Create( aSize, 24, aPal );
 	BitmapBuffer* pBmpBuf = rpBmp->AcquireBuffer( FALSE );
 
-	rpMsk = new SalBitmap;
+	rpMsk = ImplGetSVData()->mpDefInst->CreateSalBitmap();
 	rpMsk->Create( aSize, 1, aPal );
 	BitmapBuffer* pMskBuf = rpMsk->AcquireBuffer( FALSE );
 
Index: vcl/unx/source/app/sunconvert.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/sunconvert.cxx,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -p -u -r1.1.1.1 -r1.2
--- vcl/unx/source/app/sunconvert.cxx	18 Sep 2000 17:05:42 -0000	1.1.1.1
+++ vcl/unx/source/app/sunconvert.cxx	6 Jan 2004 14:35:26 -0000	1.2
@@ -429,7 +429,7 @@ fmult(
 	int		srn)
 {
 	short		anmag, anexp, anmant;
-	short		wanexp, wanmag, wanmant;
+	short		wanexp, wanmant;
 	short		retval;
 
 	anmag = (an > 0) ? an : ((-an) & 0x1FFF);
@@ -635,12 +635,11 @@ update(
 	struct g72x_state *state_ptr)	/* coder state pointer */
 {
 	int		cnt;
-	short		mag, exp, mant;	/* Adaptive predictor, FLOAT A */
+	short		mag, exp;	/* Adaptive predictor, FLOAT A */
 	short		a2p;		/* LIMC */
 	short		a1ul;		/* UPA1 */
-	short		ua2, pks1;	/* UPA2 */
-	short		uga2a, fa1;
-	short		uga2b;
+	short		pks1;	/* UPA2 */
+	short		fa1;
 	char		tr;		/* tone/transition detector */
 	short		ylint, thr2, dqthr;
 	short  		ylfrac, thr1;
@@ -1319,7 +1318,7 @@ g723_40_decoder(
 	struct g72x_state *state_ptr)
 {
 	short		sezi, sei, sez, se;	/* ACCUM */
-	short		y, dif;			/* MIX */
+	short		y;			/* MIX */
 	short		sr;			/* ADDB */
 	short		dq;
 	short		dqsez;
Index: vcl/unx/source/app/vsound.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/vsound.hxx,v
retrieving revision 1.4
retrieving revision 1.7
diff -u -p -u -r1.4 -r1.7
--- vcl/unx/source/app/vsound.hxx	4 Jun 2003 11:24:09 -0000	1.4
+++ vcl/unx/source/app/vsound.hxx	17 Mar 2004 10:07:04 -0000	1.7
@@ -73,25 +73,21 @@
 #include <cstdarg>
 #endif
 
-#if STLPORT_VERSION>=321
 #include <cstdarg>
-#endif
-
 #include <sys/stat.h>
-
 #include <tools/string.hxx>
 
-class SalSound;
+class X11SalSound;
 
 namespace vcl_sal {
 	class VSound
 	{
 	protected:
-		VSound( ::SalSound* pSound ) : m_pSalSound( pSound ), m_pBuffer( NULL ) {}
+		VSound( ::X11SalSound* pSound ) : m_pSalSound( pSound ), m_pBuffer( NULL ) {}
 
 		// instance data
-		::SalSound*			m_pSalSound;
+		::X11SalSound*			m_pSalSound;
 
 	        // pointer to mmap file
 	        char *                          m_pBuffer;
 	        struct stat                     m_aStat;
@@ -109,7 +103,7 @@ namespace vcl_sal {
 		virtual void pause() = 0;
 		virtual void cont() = 0;
 
-		static VSound* createVSound( SalSound* );
+		static VSound* createVSound( X11SalSound* );
 	};
 
 	// a class to convert bytestreams from one codec to another
Index: vcl/unx/source/app/wmadaptor.cxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/source/app/wmadaptor.cxx,v
retrieving revision 1.42.46.4
retrieving revision 1.48
diff -u -p -u -r1.42.46.4 -r1.48
--- vcl/unx/source/app/wmadaptor.cxx	28 Jan 2004 15:24:27 -0000	1.42.46.4
+++ vcl/unx/source/app/wmadaptor.cxx	20 Feb 2004 08:58:46 -0000	1.48
@@ -72,8 +72,11 @@
 #ifndef _SV_SALDISP_HXX
 #include <saldisp.hxx>
 #endif
-#ifndef _SV_SALFRAME_HXX
-#include <salframe.hxx>
+#ifndef _SV_SALFRAME_H
+#include <salframe.h>
+#endif
+#ifndef _SV_SYSDATA_HXX
+#include <sysdata.hxx>
 #endif
 #ifndef _SV_SALGGDI_HXX
 #include <salgdi.hxx>
@@ -102,38 +105,38 @@ namespace vcl_sal {
 
 class NetWMAdaptor : public WMAdaptor
 {
-    void setNetWMState( SalFrame* pFrame ) const;
+    void setNetWMState( X11SalFrame* pFrame ) const;
     void initAtoms();
     virtual bool isValid() const;
 public:
     NetWMAdaptor( SalDisplay* );
     virtual ~NetWMAdaptor();
 
-    virtual void setWMName( SalFrame* pFrame, const String& rWMName ) const;
-    virtual void maximizeFrame( SalFrame* pFrame, bool bHorizontal = true, bool bVertical = true ) const;
-    virtual void shade( SalFrame* pFrame, bool bToShaded ) const;
-    virtual void setFrameTypeAndDecoration( SalFrame* pFrame, WMWindowType eType, int nDecorationFlags, SalFrame* pTransientFrame = NULL ) const;
+    virtual void setWMName( X11SalFrame* pFrame, const String& rWMName ) const;
+    virtual void maximizeFrame( X11SalFrame* pFrame, bool bHorizontal = true, bool bVertical = true ) const;
+    virtual void shade( X11SalFrame* pFrame, bool bToShaded ) const;
+    virtual void setFrameTypeAndDecoration( X11SalFrame* pFrame, WMWindowType eType, int nDecorationFlags, X11SalFrame* pTransientFrame = NULL ) const;
     virtual bool supportsICCCMPos() const;
-    virtual void enableAlwaysOnTop( SalFrame* pFrame, bool bEnable ) const;
-    virtual int handlePropertyNotify( SalFrame* pFrame, XPropertyEvent* pEvent ) const;
-    virtual void showFullScreen( SalFrame* pFrame, bool bFullScreen ) const;
+    virtual void enableAlwaysOnTop( X11SalFrame* pFrame, bool bEnable ) const;
+    virtual int handlePropertyNotify( X11SalFrame* pFrame, XPropertyEvent* pEvent ) const;
+    virtual void showFullScreen( X11SalFrame* pFrame, bool bFullScreen ) const;
 };
 
 class GnomeWMAdaptor : public WMAdaptor
 {
     bool m_bValid;
 
-    void setGnomeWMState( SalFrame* pFrame ) const;
+    void setGnomeWMState( X11SalFrame* pFrame ) const;
     void initAtoms();
     virtual bool isValid() const;
 public:
     GnomeWMAdaptor( SalDisplay * );
     virtual ~GnomeWMAdaptor();
 
-    virtual void maximizeFrame( SalFrame* pFrame, bool bHorizontal = true, bool bVertical = true ) const;
-    virtual void shade( SalFrame* pFrame, bool bToShaded ) const;
-    virtual void enableAlwaysOnTop( SalFrame* pFrame, bool bEnable ) const;
-    virtual int handlePropertyNotify( SalFrame* pFrame, XPropertyEvent* pEvent ) const;
+    virtual void maximizeFrame( X11SalFrame* pFrame, bool bHorizontal = true, bool bVertical = true ) const;
+    virtual void shade( X11SalFrame* pFrame, bool bToShaded ) const;
+    virtual void enableAlwaysOnTop( X11SalFrame* pFrame, bool bEnable ) const;
+    virtual int handlePropertyNotify( X11SalFrame* pFrame, XPropertyEvent* pEvent ) const;
 };
 
 }
@@ -312,11 +315,7 @@ WMAdaptor::WMAdaptor( SalDisplay* pDispl
                                        &pProperty) == 0
                    && nItems))
         {
-#if NeedWidePrototypes
-            if (*(sal_Int32*)pProperty)
-#else
             if (*pProperty)
-#endif
             {
                 m_aWMName = String(RTL_CONSTASCII_USTRINGPARAM("Dtwm"));
                 m_bTransientBehaviour = false;
@@ -625,9 +624,8 @@ GnomeWMAdaptor::GnomeWMAdaptor( SalDispl
     unsigned long		nItems		= 0;
     unsigned long		nBytesLeft	= 0;
     unsigned char*	pProperty	= NULL;
-    bool				bGnomeWM	= false;
 
-    initAtoms();
+	initAtoms();
 
     // check for GnomeWM
     if( m_aWMAtoms[ WIN_SUPPORTING_WM_CHECK ] && m_aWMAtoms[ WIN_PROTOCOLS ] )
@@ -1005,7 +1003,7 @@ void GnomeWMAdaptor::initAtoms()
  *       WM_ICON_NAME
  */
 
-void WMAdaptor::setWMName( SalFrame* pFrame, const String& rWMName ) const
+void WMAdaptor::setWMName( X11SalFrame* pFrame, const String& rWMName ) const
 {
 	ByteString aTitle( rWMName, osl_getThreadTextEncoding() );
 
@@ -1048,8 +1046,9 @@ void WMAdaptor::setWMName( SalFrame* pFr
     Atom nType				= aProp.nitems ? aProp.encoding : XA_STRING;
     int nFormat				= aProp.nitems ? aProp.format : 8;
     int nBytes				= aProp.nitems ? aProp.nitems : aTitle.Len();
+    const SystemEnvData* pEnv = pFrame->GetSystemData();
     XChangeProperty( m_pDisplay,
-                     pFrame->maFrameData.GetShellWindow(),
+                     (XLIB_Window)pEnv->aShellWindow,
                      XA_WM_NAME,
                      nType,
                      nFormat,
@@ -1057,7 +1056,7 @@ void WMAdaptor::setWMName( SalFrame* pFr
                      pData,
                      nBytes );
     XChangeProperty( m_pDisplay,
-                     pFrame->maFrameData.GetShellWindow(),
+                     (XLIB_Window)pEnv->aShellWindow,
                      XA_WM_ICON_NAME,
                      nType,
                      nFormat,
@@ -1065,7 +1064,7 @@ void WMAdaptor::setWMName( SalFrame* pFr
                      pData,
                      nBytes );
     XChangeProperty( m_pDisplay,
-                     pFrame->maFrameData.GetShellWindow(),
+                     (XLIB_Window)pEnv->aShellWindow,
                      m_aWMAtoms[ WM_LOCALE_NAME ],
                      XA_STRING,
                      8,
@@ -1083,14 +1082,15 @@ void WMAdaptor::setWMName( SalFrame* pFr
  *       WM_ICON_NAME
  *       _NET_WM_ICON_NAME
  */
-void NetWMAdaptor::setWMName( SalFrame* pFrame, const String& rWMName ) const
+void NetWMAdaptor::setWMName( X11SalFrame* pFrame, const String& rWMName ) const
 {
     WMAdaptor::setWMName( pFrame, rWMName );
 
     ByteString aTitle( rWMName, RTL_TEXTENCODING_UTF8 );
+    const SystemEnvData* pEnv = pFrame->GetSystemData();
     if( m_aWMAtoms[ NET_WM_NAME ] )
         XChangeProperty( m_pDisplay,
-                         pFrame->maFrameData.GetShellWindow(),
+                         (XLIB_Window)pEnv->aShellWindow,
                          m_aWMAtoms[ NET_WM_NAME ],
                          m_aWMAtoms[ UTF8_STRING ],
                          8,
@@ -1099,7 +1099,7 @@ void NetWMAdaptor::setWMName( SalFrame* 
                          aTitle.Len()+1 );
     if( m_aWMAtoms[ NET_WM_ICON_NAME ] )
         XChangeProperty( m_pDisplay,
-                         pFrame->maFrameData.GetShellWindow(),
+                         (XLIB_Window)pEnv->aShellWindow,
                          m_aWMAtoms[ NET_WM_ICON_NAME ],
                          m_aWMAtoms[ UTF8_STRING ],
                          8,
@@ -1116,7 +1116,7 @@ void NetWMAdaptor::setWMName( SalFrame* 
  *  NetWMAdaptor::setNetWMState
  *  sets _NET_WM_STATE
  */
-void NetWMAdaptor::setNetWMState( SalFrame* pFrame ) const
+void NetWMAdaptor::setNetWMState( X11SalFrame* pFrame ) const
 {
     if( m_aWMAtoms[ NET_WM_STATE ] )
     {
@@ -1125,7 +1125,7 @@ void NetWMAdaptor::setNetWMState( SalFra
 
         // set NET_WM_STATE_MODAL
         if( m_aWMAtoms[ NET_WM_STATE_MODAL ]
-            && pFrame->maFrameData.meWindowType == windowType_ModalDialogue )
+            && pFrame->meWindowType == windowType_ModalDialogue )
         {
             aStateAtoms[ nStateAtoms++ ] = m_aWMAtoms[ NET_WM_STATE_MODAL ];
             /*
@@ -1135,23 +1135,23 @@ void NetWMAdaptor::setNetWMState( SalFra
              *  aStateAtoms[ nStateAtoms++ ] = m_aWMAtoms[ NET_WM_STATE_SKIP_TASKBAR ];
              */
         }
-        if( pFrame->maFrameData.mbMaximizedVert
+        if( pFrame->mbMaximizedVert
             && m_aWMAtoms[ NET_WM_STATE_MAXIMIZED_VERT ] )
             aStateAtoms[ nStateAtoms++ ] = m_aWMAtoms[ NET_WM_STATE_MAXIMIZED_VERT ];
-        if( pFrame->maFrameData.mbMaximizedHorz
+        if( pFrame->mbMaximizedHorz
             && m_aWMAtoms[ NET_WM_STATE_MAXIMIZED_HORZ ] )
             aStateAtoms[ nStateAtoms++ ] = m_aWMAtoms[ NET_WM_STATE_MAXIMIZED_HORZ ];
-        if( pFrame->maFrameData.bAlwaysOnTop_ && m_aWMAtoms[ NET_WM_STATE_STAYS_ON_TOP ] )
+        if( pFrame->bAlwaysOnTop_ && m_aWMAtoms[ NET_WM_STATE_STAYS_ON_TOP ] )
             aStateAtoms[ nStateAtoms++ ] = m_aWMAtoms[ NET_WM_STATE_STAYS_ON_TOP ];
-        if( pFrame->maFrameData.mbShaded && m_aWMAtoms[ NET_WM_STATE_SHADED ] )
+        if( pFrame->mbShaded && m_aWMAtoms[ NET_WM_STATE_SHADED ] )
             aStateAtoms[ nStateAtoms++ ] = m_aWMAtoms[ NET_WM_STATE_SHADED ];
-        if( pFrame->maFrameData.mbFullScreen && m_aWMAtoms[ NET_WM_STATE_FULLSCREEN ] )
+        if( pFrame->mbFullScreen && m_aWMAtoms[ NET_WM_STATE_FULLSCREEN ] )
             aStateAtoms[ nStateAtoms++ ] = m_aWMAtoms[ NET_WM_STATE_FULLSCREEN ];
 
         if( nStateAtoms )
         {
             XChangeProperty( m_pDisplay,
-                             pFrame->maFrameData.GetShellWindow(),
+                             pFrame->GetShellWindow(),
                              m_aWMAtoms[ NET_WM_STATE ],
                              XA_ATOM,
                              32,
@@ -1162,11 +1162,11 @@ void NetWMAdaptor::setNetWMState( SalFra
         }
         else
             XDeleteProperty( m_pDisplay,
-                             pFrame->maFrameData.GetShellWindow(),
+                             pFrame->GetShellWindow(),
                              m_aWMAtoms[ NET_WM_STATE ] );
-        if( pFrame->maFrameData.mbMaximizedHorz
-           && pFrame->maFrameData.mbMaximizedVert
-           && ! ( pFrame->maFrameData.nStyle_ & SAL_FRAME_STYLE_SIZEABLE ) )
+        if( pFrame->mbMaximizedHorz
+           && pFrame->mbMaximizedVert
+           && ! ( pFrame->nStyle_ & SAL_FRAME_STYLE_SIZEABLE ) )
         {
             /*
              *  for maximizing use NorthWestGravity (including decoration)
@@ -1175,7 +1175,7 @@ void NetWMAdaptor::setNetWMState( SalFra
             long		supplied;
             bool bHint = false;
             if( XGetWMNormalHints( m_pDisplay,
-                                   pFrame->maFrameData.GetShellWindow(),
+                                   pFrame->GetShellWindow(),
                                    &hints,
                                    &supplied ) )
             {
@@ -1183,7 +1183,7 @@ void NetWMAdaptor::setNetWMState( SalFra
                 hints.flags |= PWinGravity;
                 hints.win_gravity = NorthWestGravity;
                 XSetWMNormalHints( m_pDisplay,
-                                   pFrame->maFrameData.GetShellWindow(),
+                                   pFrame->GetShellWindow(),
                                    &hints );
                 XSync( m_pDisplay, False );
             }
@@ -1237,17 +1237,17 @@ void NetWMAdaptor::setNetWMState( SalFra
                                         - rGeom.nTopDecoration
                                         - rGeom.nBottomDecoration )
                                   );
-            pFrame->maFrameData.SetPosSize( aPosSize );
+            pFrame->SetPosSize( aPosSize );
 
             /*
              *  reset gravity hint to static gravity
              *  (this should not move window according to ICCCM)
              */
-            if( bHint && pFrame->maFrameData.nShowState_ != SHOWSTATE_UNKNOWN )
+            if( bHint && pFrame->nShowState_ != SHOWSTATE_UNKNOWN )
             {
                 hints.win_gravity = StaticGravity;
                 XSetWMNormalHints( m_pDisplay,
-                                   pFrame->maFrameData.GetShellWindow(),
+                                   pFrame->GetShellWindow(),
                                    &hints );
             }
         }
@@ -1258,21 +1258,21 @@ void NetWMAdaptor::setNetWMState( SalFra
  *  GnomeWMAdaptor::setNetWMState
  *  sets _WIN_STATE
  */
-void GnomeWMAdaptor::setGnomeWMState( SalFrame* pFrame ) const
+void GnomeWMAdaptor::setGnomeWMState( X11SalFrame* pFrame ) const
 {
     if( m_aWMAtoms[ WIN_STATE ] )
     {
         sal_uInt32 nWinWMState = 0;
 
-        if( pFrame->maFrameData.mbMaximizedVert )
+        if( pFrame->mbMaximizedVert )
             nWinWMState |= 1 << 2;
-        if( pFrame->maFrameData.mbMaximizedHorz )
+        if( pFrame->mbMaximizedHorz )
             nWinWMState |= 1 << 3;
-        if( pFrame->maFrameData.mbShaded )
+        if( pFrame->mbShaded )
             nWinWMState |= 1 << 5;
 
         XChangeProperty( m_pDisplay,
-                         pFrame->maFrameData.GetShellWindow(),
+                         pFrame->GetShellWindow(),
                          m_aWMAtoms[ WIN_STATE ],
                          XA_CARDINAL,
                          32,
@@ -1280,9 +1280,9 @@ void GnomeWMAdaptor::setGnomeWMState( Sa
                          (unsigned char*)&nWinWMState,
                          1
                          );
-        if( pFrame->maFrameData.mbMaximizedHorz
-           && pFrame->maFrameData.mbMaximizedVert
-           && ! ( pFrame->maFrameData.nStyle_ & SAL_FRAME_STYLE_SIZEABLE ) )
+        if( pFrame->mbMaximizedHorz
+           && pFrame->mbMaximizedVert
+           && ! ( pFrame->nStyle_ & SAL_FRAME_STYLE_SIZEABLE ) )
         {
             /*
              *  for maximizing use NorthWestGravity (including decoration)
@@ -1291,7 +1291,7 @@ void GnomeWMAdaptor::setGnomeWMState( Sa
             long		supplied;
             bool bHint = false;
             if( XGetWMNormalHints( m_pDisplay,
-                                   pFrame->maFrameData.GetShellWindow(),
+                                   pFrame->GetShellWindow(),
                                    &hints,
                                    &supplied ) )
             {
@@ -1299,7 +1299,7 @@ void GnomeWMAdaptor::setGnomeWMState( Sa
                 hints.flags |= PWinGravity;
                 hints.win_gravity = NorthWestGravity;
                 XSetWMNormalHints( m_pDisplay,
-                                   pFrame->maFrameData.GetShellWindow(),
+                                   pFrame->GetShellWindow(),
                                    &hints );
                 XSync( m_pDisplay, False );
             }
@@ -1353,17 +1353,17 @@ void GnomeWMAdaptor::setGnomeWMState( Sa
                                         - rGeom.nTopDecoration
                                         - rGeom.nBottomDecoration )
                                   );
-            pFrame->maFrameData.SetPosSize( aPosSize );
+            pFrame->SetPosSize( aPosSize );
 
             /*
              *  reset gravity hint to static gravity
              *  (this should not move window according to ICCCM)
              */
-            if( bHint && pFrame->maFrameData.nShowState_ != SHOWSTATE_UNKNOWN )
+            if( bHint && pFrame->nShowState_ != SHOWSTATE_UNKNOWN )
             {
                 hints.win_gravity = StaticGravity;
                 XSetWMNormalHints( m_pDisplay,
-                                   pFrame->maFrameData.GetShellWindow(),
+                                   pFrame->GetShellWindow(),
                                    &hints );
             }
         }
@@ -1376,10 +1376,10 @@ void GnomeWMAdaptor::setGnomeWMState( Sa
  *		 WM_TRANSIENT_FOR
  */
 
-void WMAdaptor::setFrameTypeAndDecoration( SalFrame* pFrame, WMWindowType eType, int nDecorationFlags, SalFrame* pReferenceFrame ) const
+void WMAdaptor::setFrameTypeAndDecoration( X11SalFrame* pFrame, WMWindowType eType, int nDecorationFlags, X11SalFrame* pReferenceFrame ) const
 {
-    pFrame->maFrameData.meWindowType		= eType;
-    pFrame->maFrameData.mnDecorationFlags	= nDecorationFlags;
+    pFrame->meWindowType		= eType;
+    pFrame->mnDecorationFlags	= nDecorationFlags;
 
     // set mwm hints
     struct _mwmhints {
@@ -1423,7 +1423,7 @@ void WMAdaptor::setFrameTypeAndDecoratio
 
     // set the hint
      XChangeProperty( m_pDisplay,
-                      pFrame->maFrameData.GetShellWindow(),
+                      pFrame->GetShellWindow(),
                       m_aWMAtoms[ MOTIF_WM_HINTS ],
                       m_aWMAtoms[ MOTIF_WM_HINTS ],
                       32,
@@ -1440,13 +1440,13 @@ void WMAdaptor::setFrameTypeAndDecoratio
     if( pReferenceFrame )
     {
         XSetTransientForHint( m_pDisplay,
-                              pFrame->maFrameData.GetShellWindow(),
-                              pReferenceFrame->maFrameData.bMapped_ ?
-                              pReferenceFrame->maFrameData.GetShellWindow() :
+                              pFrame->GetShellWindow(),
+                              pReferenceFrame->bMapped_ ?
+                              pReferenceFrame->GetShellWindow() :
                               m_pSalDisplay->GetRootWindow()
                               );
-        if( ! pReferenceFrame->maFrameData.bMapped_ )
-            pFrame->maFrameData.mbTransientForRoot = true;
+        if( ! pReferenceFrame->bMapped_ )
+            pFrame->mbTransientForRoot = true;
     }
     // #110333# in case no one ever sets a title prevent
     // the Dtwm taking the class instead
@@ -1462,7 +1462,7 @@ void WMAdaptor::setFrameTypeAndDecoratio
  *		 WM_TRANSIENT_FOR
  */
 
-void NetWMAdaptor::setFrameTypeAndDecoration( SalFrame* pFrame, WMWindowType eType, int nDecorationFlags, SalFrame* pReferenceFrame ) const
+void NetWMAdaptor::setFrameTypeAndDecoration( X11SalFrame* pFrame, WMWindowType eType, int nDecorationFlags, X11SalFrame* pReferenceFrame ) const
 {
     WMAdaptor::setFrameTypeAndDecoration( pFrame, eType, nDecorationFlags, pReferenceFrame );
 
@@ -1494,7 +1487,7 @@ void NetWMAdaptor::setFrameTypeAndDecora
                 break;
         }
         XChangeProperty( m_pDisplay,
-                         pFrame->maFrameData.GetShellWindow(),
+                         pFrame->GetShellWindow(),
                          m_aWMAtoms[ NET_WM_WINDOW_TYPE ],
                          XA_ATOM,
                          32,
@@ -1507,9 +1500,9 @@ void NetWMAdaptor::setFrameTypeAndDecora
         && ! pReferenceFrame )
     {
         XSetTransientForHint( m_pDisplay,
-                              pFrame->maFrameData.GetShellWindow(),
+                              pFrame->GetShellWindow(),
                               m_pSalDisplay->GetRootWindow() );
-        pFrame->maFrameData.mbTransientForRoot = true;
+        pFrame->mbTransientForRoot = true;
     }
 }
 
@@ -1517,10 +1510,10 @@ void NetWMAdaptor::setFrameTypeAndDecora
  *  WMAdaptor::maximizeFrame
  */
 
-void WMAdaptor::maximizeFrame( SalFrame* pFrame, bool bHorizontal, bool bVertical ) const
+void WMAdaptor::maximizeFrame( X11SalFrame* pFrame, bool bHorizontal, bool bVertical ) const
 {
-    pFrame->maFrameData.mbMaximizedVert = bVertical;
-    pFrame->maFrameData.mbMaximizedHorz = bHorizontal;
+    pFrame->mbMaximizedVert = bVertical;
+    pFrame->mbMaximizedHorz = bHorizontal;
 
     const SalFrameGeometry& rGeom( pFrame->GetUnmirroredGeometry() );
 
@@ -1528,12 +1521,12 @@ void WMAdaptor::maximizeFrame( SalFrame*
     XSync( m_pDisplay, False );
     XEvent aDiscard;
     while( XCheckTypedWindowEvent( m_pDisplay,
-                                   pFrame->maFrameData.GetShellWindow(),
+                                   pFrame->GetShellWindow(),
                                    ConfigureNotify,
                                    &aDiscard ) )
         ;
     while( XCheckTypedWindowEvent( m_pDisplay,
-                                   pFrame->maFrameData.GetWindow(),
+                                   pFrame->GetWindow(),
                                    ConfigureNotify,
                                    &aDiscard ) )
         ;
@@ -1562,36 +1555,34 @@ void WMAdaptor::maximizeFrame( SalFrame*
         {
             aTarget.SetSize(
                             Size(
-                                 pFrame->maFrameData.maRestorePosSize.IsEmpty() ?
-                                 rGeom.nWidth : pFrame->maFrameData.maRestorePosSize.GetWidth(),
+                                 pFrame->maRestorePosSize.IsEmpty() ?
+                                 rGeom.nWidth : pFrame->maRestorePosSize.GetWidth(),
                                  aTarget.GetHeight()
                                  )
                             );
             aTarget.Left() =
-                pFrame->maFrameData.maRestorePosSize.IsEmpty() ?
-                rGeom.nX : pFrame->maFrameData.maRestorePosSize.Left();
+                pFrame->maRestorePosSize.IsEmpty() ?
+                rGeom.nX : pFrame->maRestorePosSize.Left();
         }
         else if( ! bVertical )
         {
             aTarget.SetSize(
                             Size(
                                  aTarget.GetWidth(),
-                                 pFrame->maFrameData.maRestorePosSize.IsEmpty() ?
-                                 rGeom.nHeight : pFrame->maFrameData.maRestorePosSize.GetHeight()
+                                 pFrame->maRestorePosSize.IsEmpty() ?
+                                 rGeom.nHeight : pFrame->maRestorePosSize.GetHeight()
                                  )
                             );
             aTarget.Top() =
-                pFrame->maFrameData.maRestorePosSize.IsEmpty() ?
-                rGeom.nY : pFrame->maFrameData.maRestorePosSize.Top();
+                pFrame->maRestorePosSize.IsEmpty() ?
+                rGeom.nY : pFrame->maRestorePosSize.Top();
         }
-        delete pFrame->maFrameData.pFreeGraphics_;
-        pFrame->maFrameData.pFreeGraphics_ = NULL;
 
         Rectangle aRestore( Point( rGeom.nX, rGeom.nY ), Size( rGeom.nWidth, rGeom.nHeight ) );
-        if( pFrame->maFrameData.bMapped_ )
+        if( pFrame->bMapped_ )
         {
             XSetInputFocus( m_pDisplay,
-                            pFrame->maFrameData.GetShellWindow(),
+                            pFrame->GetShellWindow(),
                             RevertToNone,
                             CurrentTime
                             );
@@ -1607,31 +1598,28 @@ void WMAdaptor::maximizeFrame( SalFrame*
             }
         }
 
-        if( pFrame->maFrameData.maRestorePosSize.IsEmpty() )
-            pFrame->maFrameData.maRestorePosSize = aRestore;
+        if( pFrame->maRestorePosSize.IsEmpty() )
+            pFrame->maRestorePosSize = aRestore;
 
-        pFrame->maFrameData.SetPosSize( aTarget );
-        pFrame->maFrameData.nWidth_		= aTarget.GetWidth();
-        pFrame->maFrameData.nHeight_	= aTarget.GetHeight();
+        pFrame->SetPosSize( aTarget );
+        pFrame->nWidth_		= aTarget.GetWidth();
+        pFrame->nHeight_	= aTarget.GetHeight();
         XRaiseWindow( m_pDisplay,
-                      pFrame->maFrameData.GetShellWindow()
+                      pFrame->GetShellWindow()
                       );
-        if( pFrame->maFrameData.GetStackingWindow() )
+        if( pFrame->GetStackingWindow() )
             XRaiseWindow( m_pDisplay,
-                          pFrame->maFrameData.GetStackingWindow()
+                          pFrame->GetStackingWindow()
                           );
 
     }
     else
     {
-        delete pFrame->maFrameData.pFreeGraphics_;
-        pFrame->maFrameData.pFreeGraphics_ = NULL;
-
-        pFrame->maFrameData.SetPosSize( pFrame->maFrameData.maRestorePosSize );
-        pFrame->maFrameData.maRestorePosSize = Rectangle();
-        pFrame->maFrameData.nWidth_ 			= rGeom.nWidth;
-        pFrame->maFrameData.nHeight_			= rGeom.nHeight;
-        if( m_aWMName.EqualsAscii( "Dtwm" ) && pFrame->maFrameData.bMapped_ )
+        pFrame->SetPosSize( pFrame->maRestorePosSize );
+        pFrame->maRestorePosSize = Rectangle();
+        pFrame->nWidth_ 			= rGeom.nWidth;
+        pFrame->nHeight_			= rGeom.nHeight;
+        if( m_aWMName.EqualsAscii( "Dtwm" ) && pFrame->bMapped_ )
         {
             pFrame->maGeometry.nX += rGeom.nLeftDecoration;
             pFrame->maGeometry.nY += rGeom.nTopDecoration;
@@ -1644,24 +1632,24 @@ void WMAdaptor::maximizeFrame( SalFrame*
  *  changes _NET_WM_STATE by sending a client message
  */
 
-void NetWMAdaptor::maximizeFrame( SalFrame* pFrame, bool bHorizontal, bool bVertical ) const
+void NetWMAdaptor::maximizeFrame( X11SalFrame* pFrame, bool bHorizontal, bool bVertical ) const
 {
-    pFrame->maFrameData.mbMaximizedVert = bVertical;
-    pFrame->maFrameData.mbMaximizedHorz = bHorizontal;
+    pFrame->mbMaximizedVert = bVertical;
+    pFrame->mbMaximizedHorz = bHorizontal;
 
     if( m_aWMAtoms[ NET_WM_STATE ]
         && m_aWMAtoms[ NET_WM_STATE_MAXIMIZED_VERT ]
         && m_aWMAtoms[ NET_WM_STATE_MAXIMIZED_HORZ ]
-        && ( pFrame->maFrameData.nStyle_ & ~SAL_FRAME_STYLE_DEFAULT )
+        && ( pFrame->nStyle_ & ~SAL_FRAME_STYLE_DEFAULT )
         )
     {
-        if( pFrame->maFrameData.bMapped_ )
+        if( pFrame->bMapped_ )
         {
             // window already mapped, send WM a message
             XEvent aEvent;
             aEvent.type					= ClientMessage;
             aEvent.xclient.display		= m_pDisplay;
-            aEvent.xclient.window		= pFrame->maFrameData.GetShellWindow();
+            aEvent.xclient.window		= pFrame->GetShellWindow();
             aEvent.xclient.message_type	= m_aWMAtoms[ NET_WM_STATE ];
             aEvent.xclient.format		= 32;
             aEvent.xclient.data.l[0]	= bHorizontal ? 1 : 0;
@@ -1694,11 +1682,11 @@ void NetWMAdaptor::maximizeFrame( SalFra
             setNetWMState( pFrame );
         }
         if( !bHorizontal && !bVertical )
-            pFrame->maFrameData.maRestorePosSize = Rectangle();
-        else if( pFrame->maFrameData.maRestorePosSize.IsEmpty() )
+            pFrame->maRestorePosSize = Rectangle();
+        else if( pFrame->maRestorePosSize.IsEmpty() )
         {
             const SalFrameGeometry& rGeom( pFrame->GetUnmirroredGeometry() );
-            pFrame->maFrameData.maRestorePosSize =
+            pFrame->maRestorePosSize =
                 Rectangle( Point( rGeom.nX, rGeom.nY ), Size( rGeom.nWidth, rGeom.nHeight ) );
         }
     }
@@ -1711,22 +1699,22 @@ void NetWMAdaptor::maximizeFrame( SalFra
  *  changes _WIN_STATE by sending a client message
  */
 
-void GnomeWMAdaptor::maximizeFrame( SalFrame* pFrame, bool bHorizontal, bool bVertical ) const
+void GnomeWMAdaptor::maximizeFrame( X11SalFrame* pFrame, bool bHorizontal, bool bVertical ) const
 {
-    pFrame->maFrameData.mbMaximizedVert = bVertical;
-    pFrame->maFrameData.mbMaximizedHorz = bHorizontal;
+    pFrame->mbMaximizedVert = bVertical;
+    pFrame->mbMaximizedHorz = bHorizontal;
 
     if( m_aWMAtoms[ WIN_STATE ]
-        && ( pFrame->maFrameData.nStyle_ & ~SAL_FRAME_STYLE_DEFAULT )
+        && ( pFrame->nStyle_ & ~SAL_FRAME_STYLE_DEFAULT )
         )
     {
-        if( pFrame->maFrameData.bMapped_ )
+        if( pFrame->bMapped_ )
         {
              // window already mapped, send WM a message
             XEvent aEvent;
             aEvent.type					= ClientMessage;
             aEvent.xclient.display		= m_pDisplay;
-            aEvent.xclient.window		= pFrame->maFrameData.GetShellWindow();
+            aEvent.xclient.window		= pFrame->GetShellWindow();
             aEvent.xclient.message_type	= m_aWMAtoms[ WIN_STATE ];
             aEvent.xclient.format		= 32;
             aEvent.xclient.data.l[0]	= (1<<2)|(1<<3);
@@ -1748,11 +1736,11 @@ void GnomeWMAdaptor::maximizeFrame( SalF
             setGnomeWMState( pFrame );
 
         if( !bHorizontal && !bVertical )
-            pFrame->maFrameData.maRestorePosSize = Rectangle();
-        else if( pFrame->maFrameData.maRestorePosSize.IsEmpty() )
+            pFrame->maRestorePosSize = Rectangle();
+        else if( pFrame->maRestorePosSize.IsEmpty() )
         {
             const SalFrameGeometry& rGeom( pFrame->GetUnmirroredGeometry() );
-            pFrame->maFrameData.maRestorePosSize =
+            pFrame->maRestorePosSize =
                 Rectangle( Point( rGeom.nX, rGeom.nY ), Size( rGeom.nWidth, rGeom.nHeight ) );
         }
     }
@@ -1784,25 +1772,25 @@ bool NetWMAdaptor::supportsICCCMPos() co
 /*
  *  WMAdaptor::enableAlwaysOnTop
  */
-void WMAdaptor::enableAlwaysOnTop( SalFrame* pFrame, bool bEnable ) const
+void WMAdaptor::enableAlwaysOnTop( X11SalFrame* pFrame, bool bEnable ) const
 {
 }
 
 /*
  *  NetWMAdaptor::enableAlwaysOnTop
  */
-void NetWMAdaptor::enableAlwaysOnTop( SalFrame* pFrame, bool bEnable ) const
+void NetWMAdaptor::enableAlwaysOnTop( X11SalFrame* pFrame, bool bEnable ) const
 {
-    pFrame->maFrameData.bAlwaysOnTop_ = bEnable;
+    pFrame->bAlwaysOnTop_ = bEnable;
     if( m_aWMAtoms[ NET_WM_STATE_STAYS_ON_TOP ] )
     {
-        if( pFrame->maFrameData.bMapped_ )
+        if( pFrame->bMapped_ )
         {
             // window already mapped, send WM a message
             XEvent aEvent;
             aEvent.type					= ClientMessage;
             aEvent.xclient.display		= m_pDisplay;
-            aEvent.xclient.window		= pFrame->maFrameData.GetShellWindow();
+            aEvent.xclient.window		= pFrame->GetShellWindow();
             aEvent.xclient.message_type	= m_aWMAtoms[ NET_WM_STATE ];
             aEvent.xclient.format		= 32;
             aEvent.xclient.data.l[0]	= bEnable ? 1 : 0;
@@ -1825,18 +1813,18 @@ void NetWMAdaptor::enableAlwaysOnTop( Sa
 /*
  *  GnomeWMAdaptor::enableAlwaysOnTop
  */
-void GnomeWMAdaptor::enableAlwaysOnTop( SalFrame* pFrame, bool bEnable ) const
+void GnomeWMAdaptor::enableAlwaysOnTop( X11SalFrame* pFrame, bool bEnable ) const
 {
-    pFrame->maFrameData.bAlwaysOnTop_ = bEnable;
+    pFrame->bAlwaysOnTop_ = bEnable;
     if( m_aWMAtoms[ WIN_LAYER ] )
     {
-        if( pFrame->maFrameData.bMapped_ )
+        if( pFrame->bMapped_ )
         {
             // window already mapped, send WM a message
             XEvent aEvent;
             aEvent.type					= ClientMessage;
             aEvent.xclient.display		= m_pDisplay;
-            aEvent.xclient.window		= pFrame->maFrameData.GetShellWindow();
+            aEvent.xclient.window		= pFrame->GetShellWindow();
             aEvent.xclient.message_type	= m_aWMAtoms[ WIN_LAYER ];
             aEvent.xclient.format		= 32;
             aEvent.xclient.data.l[0]	= bEnable ? 6 : 4;
@@ -1855,7 +1843,7 @@ void GnomeWMAdaptor::enableAlwaysOnTop( 
         {
             sal_uInt32 nNewLayer = bEnable ? 6 : 4;
             XChangeProperty( m_pDisplay,
-                             pFrame->maFrameData.GetShellWindow(),
+                             pFrame->GetShellWindow(),
                              m_aWMAtoms[ WIN_LAYER ],
                              XA_CARDINAL,
                              32,
@@ -1870,23 +1858,21 @@ void GnomeWMAdaptor::enableAlwaysOnTop( 
 /*
  *  WMAdaptor::changeReferenceFrame
  */
-void WMAdaptor::changeReferenceFrame( SalFrame* pFrame, SalFrame* pReferenceFrame ) const
+void WMAdaptor::changeReferenceFrame( X11SalFrame* pFrame, X11SalFrame* pReferenceFrame ) const
 {
-    SalFrameData& rData( pFrame->maFrameData );
-    if( ! ( rData.nStyle_ & ( SAL_FRAME_STYLE_CHILD | SAL_FRAME_STYLE_FLOAT ) )
-        && ! rData.IsOverrideRedirect()
+    if( ! ( pFrame->nStyle_ & ( SAL_FRAME_STYLE_CHILD | SAL_FRAME_STYLE_FLOAT ) )
+        && ! pFrame->IsOverrideRedirect()
         )
     {
-        XLIB_Window aTransient = rData.pDisplay_->GetRootWindow();
-        rData.mbTransientForRoot = true;
+        XLIB_Window aTransient = pFrame->pDisplay_->GetRootWindow();
+        pFrame->mbTransientForRoot = true;
         if( pReferenceFrame )
         {
-            SalFrameData& rRefData( pReferenceFrame->maFrameData );
-            aTransient = rRefData.GetShellWindow();
-            rData.mbTransientForRoot = false;
+            aTransient = pReferenceFrame->GetShellWindow();
+            pFrame->mbTransientForRoot = false;
         }
         XSetTransientForHint( m_pDisplay,
-                              rData.GetShellWindow(),
+                              pFrame->GetShellWindow(),
                               aTransient );
     }
 }
@@ -1894,7 +1880,7 @@ void WMAdaptor::changeReferenceFrame( Sa
 /*
  *  WMAdaptor::handlePropertyNotify
  */
-int WMAdaptor::handlePropertyNotify( SalFrame* pFrame, XPropertyEvent* pEvent ) const
+int WMAdaptor::handlePropertyNotify( X11SalFrame* pFrame, XPropertyEvent* pEvent ) const
 {
     return 0;
 }
@@ -1902,13 +1888,13 @@ int WMAdaptor::handlePropertyNotify( Sal
 /*
  *  NetWMAdaptor::handlePropertyNotify
  */
-int NetWMAdaptor::handlePropertyNotify( SalFrame* pFrame, XPropertyEvent* pEvent ) const
+int NetWMAdaptor::handlePropertyNotify( X11SalFrame* pFrame, XPropertyEvent* pEvent ) const
 {
     int nHandled = 1;
     if( pEvent->atom == m_aWMAtoms[ NET_WM_STATE ] )
     {
-        pFrame->maFrameData.mbMaximizedHorz = pFrame->maFrameData.mbMaximizedVert = false;
-        pFrame->maFrameData.mbShaded = false;
+        pFrame->mbMaximizedHorz = pFrame->mbMaximizedVert = false;
+        pFrame->mbShaded = false;
 
         if( pEvent->state == PropertyNewValue )
         {
@@ -1937,11 +1923,11 @@ int NetWMAdaptor::handlePropertyNotify( 
                         for( unsigned long i = 0; i < nItems; i++ )
                         {
                             if( pStates[i] == m_aWMAtoms[ NET_WM_STATE_MAXIMIZED_VERT ] && m_aWMAtoms[ NET_WM_STATE_MAXIMIZED_VERT ] )
-                                pFrame->maFrameData.mbMaximizedVert = true;
+                                pFrame->mbMaximizedVert = true;
                             else if( pStates[i] == m_aWMAtoms[ NET_WM_STATE_MAXIMIZED_HORZ ] && m_aWMAtoms[ NET_WM_STATE_MAXIMIZED_HORZ ] )
-                                pFrame->maFrameData.mbMaximizedHorz = true;
+                                pFrame->mbMaximizedHorz = true;
                             else if( pStates[i] == m_aWMAtoms[ NET_WM_STATE_SHADED ] && m_aWMAtoms[ NET_WM_STATE_SHADED ] )
-                                pFrame->maFrameData.mbShaded = true;
+                                pFrame->mbShaded = true;
                         }
                     }
                     XFree( pData );
@@ -1949,14 +1935,14 @@ int NetWMAdaptor::handlePropertyNotify( 
             } while( nBytesLeft > 0 );
         }
 
-        if( ! (pFrame->maFrameData.mbMaximizedHorz || pFrame->maFrameData.mbMaximizedVert ) )
-            pFrame->maFrameData.maRestorePosSize = Rectangle();
+        if( ! (pFrame->mbMaximizedHorz || pFrame->mbMaximizedVert ) )
+            pFrame->maRestorePosSize = Rectangle();
         else
         {
             const SalFrameGeometry& rGeom = pFrame->GetUnmirroredGeometry();
             // the current geometry may already be changed by the corresponding
             // ConfigureNotify, but this cannot be helped
-            pFrame->maFrameData.maRestorePosSize =
+            pFrame->maRestorePosSize =
                 Rectangle( Point( rGeom.nX, rGeom.nY ),
                            Size( rGeom.nWidth, rGeom.nHeight ) );
         }
@@ -1970,13 +1956,13 @@ int NetWMAdaptor::handlePropertyNotify( 
 /*
  *  GnomeWMAdaptor::handlePropertyNotify
  */
-int GnomeWMAdaptor::handlePropertyNotify( SalFrame* pFrame, XPropertyEvent* pEvent ) const
+int GnomeWMAdaptor::handlePropertyNotify( X11SalFrame* pFrame, XPropertyEvent* pEvent ) const
 {
     int nHandled = 1;
     if( pEvent->atom == m_aWMAtoms[ WIN_STATE ] )
     {
-        pFrame->maFrameData.mbMaximizedHorz = pFrame->maFrameData.mbMaximizedVert = false;
-        pFrame->maFrameData.mbShaded = false;
+        pFrame->mbMaximizedHorz = pFrame->mbMaximizedVert = false;
+        pFrame->mbShaded = false;
 
         if( pEvent->state == PropertyNewValue )
         {
@@ -2000,24 +1986,24 @@ int GnomeWMAdaptor::handlePropertyNotify
                 {
                     sal_uInt32 nWinState = *(sal_uInt32*)pData;
                     if( nWinState & (1<<2) )
-                        pFrame->maFrameData.mbMaximizedVert = true;
+                        pFrame->mbMaximizedVert = true;
                     if( nWinState & (1<<3) )
-                        pFrame->maFrameData.mbMaximizedHorz = true;
+                        pFrame->mbMaximizedHorz = true;
                     if( nWinState & (1<<5) )
-                        pFrame->maFrameData.mbShaded = true;
+                        pFrame->mbShaded = true;
                 }
                 XFree( pData );
             }
         }
 
-        if( ! (pFrame->maFrameData.mbMaximizedHorz || pFrame->maFrameData.mbMaximizedVert ) )
-            pFrame->maFrameData.maRestorePosSize = Rectangle();
+        if( ! (pFrame->mbMaximizedHorz || pFrame->mbMaximizedVert ) )
+            pFrame->maRestorePosSize = Rectangle();
         else
         {
             const SalFrameGeometry& rGeom = pFrame->GetUnmirroredGeometry();
             // the current geometry may already be changed by the corresponding
             // ConfigureNotify, but this cannot be helped
-            pFrame->maFrameData.maRestorePosSize =
+            pFrame->maRestorePosSize =
                 Rectangle( Point( rGeom.nX, rGeom.nY ),
                            Size( rGeom.nWidth, rGeom.nHeight ) );
         }
@@ -2031,28 +2017,28 @@ int GnomeWMAdaptor::handlePropertyNotify
 /*
  * WMAdaptor::shade
  */
-void WMAdaptor::shade( SalFrame* pFrame, bool bToShaded ) const
+void WMAdaptor::shade( X11SalFrame* pFrame, bool bToShaded ) const
 {
 }
 
 /*
  * NetWMAdaptor::shade
  */
-void NetWMAdaptor::shade( SalFrame* pFrame, bool bToShaded ) const
+void NetWMAdaptor::shade( X11SalFrame* pFrame, bool bToShaded ) const
 {
     if( m_aWMAtoms[ NET_WM_STATE ]
         && m_aWMAtoms[ NET_WM_STATE_SHADED ]
-        && ( pFrame->maFrameData.nStyle_ & ~SAL_FRAME_STYLE_DEFAULT )
+        && ( pFrame->nStyle_ & ~SAL_FRAME_STYLE_DEFAULT )
         )
     {
-        pFrame->maFrameData.mbShaded = bToShaded;
-        if( pFrame->maFrameData.bMapped_ )
+        pFrame->mbShaded = bToShaded;
+        if( pFrame->bMapped_ )
         {
             // window already mapped, send WM a message
             XEvent aEvent;
             aEvent.type					= ClientMessage;
             aEvent.xclient.display		= m_pDisplay;
-            aEvent.xclient.window		= pFrame->maFrameData.GetShellWindow();
+            aEvent.xclient.window		= pFrame->GetShellWindow();
             aEvent.xclient.message_type	= m_aWMAtoms[ NET_WM_STATE ];
             aEvent.xclient.format		= 32;
             aEvent.xclient.data.l[0]	= bToShaded ? 1 : 0;
@@ -2078,18 +2064,18 @@ void NetWMAdaptor::shade( SalFrame* pFra
 /*
  *  GnomeWMAdaptor::shade
  */
-void GnomeWMAdaptor::shade( SalFrame* pFrame, bool bToShaded ) const
+void GnomeWMAdaptor::shade( X11SalFrame* pFrame, bool bToShaded ) const
 {
     if( m_aWMAtoms[ WIN_STATE ] )
     {
-        pFrame->maFrameData.mbShaded = bToShaded;
-        if( pFrame->maFrameData.bMapped_ )
+        pFrame->mbShaded = bToShaded;
+        if( pFrame->bMapped_ )
         {
             // window already mapped, send WM a message
             XEvent aEvent;
             aEvent.type					= ClientMessage;
             aEvent.xclient.display		= m_pDisplay;
-            aEvent.xclient.window		= pFrame->maFrameData.GetShellWindow();
+            aEvent.xclient.window		= pFrame->GetShellWindow();
             aEvent.xclient.message_type	= m_aWMAtoms[ WIN_STATE ];
             aEvent.xclient.format		= 32;
             aEvent.xclient.data.l[0]	= (1<<5);
@@ -2112,28 +2098,28 @@ void GnomeWMAdaptor::shade( SalFrame* pF
 /*
  *  WMAdaptor::showFullScreen
  */
-void WMAdaptor::showFullScreen( SalFrame* pFrame, bool bFullScreen ) const
+void WMAdaptor::showFullScreen( X11SalFrame* pFrame, bool bFullScreen ) const
 {
-    pFrame->maFrameData.mbFullScreen = bFullScreen;
+    pFrame->mbFullScreen = bFullScreen;
     maximizeFrame( pFrame, bFullScreen, bFullScreen );
 }
 
 /*
  *  NetWMAdaptor::showFullScreen
  */
-void NetWMAdaptor::showFullScreen( SalFrame* pFrame, bool bFullScreen ) const
+void NetWMAdaptor::showFullScreen( X11SalFrame* pFrame, bool bFullScreen ) const
 {
     if( m_aWMAtoms[ NET_WM_STATE_FULLSCREEN ] )
     {
-        pFrame->maFrameData.mbFullScreen = bFullScreen;
-        if( pFrame->maFrameData.bMapped_ )
+        pFrame->mbFullScreen = bFullScreen;
+        if( pFrame->bMapped_ )
         {
             // window already mapped, send WM a message
             XEvent aEvent;
             aEvent.type					= ClientMessage;
             aEvent.xclient.display		= m_pDisplay;
-            aEvent.xclient.window		= pFrame->maFrameData.GetShellWindow();
+            aEvent.xclient.window		= pFrame->GetShellWindow();
             aEvent.xclient.message_type	= m_aWMAtoms[ NET_WM_STATE ];
             aEvent.xclient.format		= 32;
             aEvent.xclient.data.l[0]	= bFullScreen ? 1 : 0;

--- vcl/unx/source/app/salsound2.cxx
+++ vcl/unx/source/app/salsound2.cxx
@@ -65,10 +65,9 @@
 
 #include <salunx.h>
 #include <saldata.hxx>
-#include <salframe.hxx>
 #include <saldisp.hxx>
 
-#include <salsound.hxx>
+#include <salsound.h>
 #include <salstype.hxx>
 #include <salimpsound.hxx>
 
@@ -78,32 +77,21 @@
 ULONG SalSound::s_nSoundState = SOUND_STATE_UNLOADED;
 
 
-SalSound::SalSound() :
-		m_pInst( NULL ),
-		m_aPROC( NULL ),
-		m_pVSound( NULL ),
-		m_pFrame( NULL ),
-		m_bLoop( FALSE ),
-		m_bPlaying( FALSE ),
-		m_bPaused( FALSE ),
-		m_nStartTime( 0 ),
-		m_nPlayTime( SOUND_PLAYALL )
+SalSound* X11SalInstance::CreateSalSound()
 {
-	SalDbgAssert( "SalSound::SalSound()\n" );
+    return new X11SalSound();
 }
 
-
-SalSound::~SalSound()
+X11SalSound::X11SalSound() :
+		m_pVSound( NULL ),
+		m_bLoop( false ),
+		m_bPlaying( false ),
+		m_bPaused( false ),
+		m_nStartTime( 0 ),
+		m_nPlayTime( SOUND_PLAYALL )
 {
-	m_aPROC = NULL;
-	SalDbgAssert( "SalSound::~SalSound()\n" );
-	if( m_pVSound )
-		delete m_pVSound;
-}
-
+	SalDbgAssert( "X11SalSound::X11SalSound()\n" );
 
-BOOL SalSound::Create()
-{
 #ifdef USE_PASF
         // initialize the portaudio library (typically just once)
         if (s_nSoundState != SOUND_STATE_VALID) 
@@ -121,23 +109,19 @@
 }
 
 
-void SalSound::Release()
+X11SalSound::~X11SalSound()
 {
+	SalDbgAssert( "X11SalSound::~X11SalSound()\n" );
 #ifdef USE_PASF
         // terminate the portaudio library
         if ( s_nSoundState == SOUND_STATE_VALID ) Pa_Terminate();
 #endif
         s_nSoundState = SOUND_STATE_UNLOADED;
+ 	if( m_pVSound )
+		delete m_pVSound;
 }
 
-
-BOOL SalSound::IsValid()
-{
-  return (SalSound::s_nSoundState == SOUND_STATE_VALID);
-}
-
-
-BOOL SalSound::Init( SalFrame* pFrame,
+BOOL X11SalSound::Init( SalFrame* pFrame,
 					 const String& rSoundName,
 					 ULONG& rSoundLen )
 {
@@ -151,17 +135,8 @@
 	if( m_pVSound )
 		delete m_pVSound;
     
-    #ifdef MACOSX
-	m_aSoundFile = ByteString( rSoundName, RTL_TEXTENCODING_UTF8 );
-    #else
-	m_aSoundFile = ByteString( rSoundName, gsl_getSystemTextEncoding() );
-    #endif
-    
-	SalDbgAssert( "SalSound::Init( %p, \"%s\", %d )\n",
-    pFrame, m_aSoundFile.GetBuffer(), rSoundLen );
-	m_pFrame = pFrame;
-	if( ! m_pFrame )
-		m_pFrame = GetSalData()->pFirstFrame_;
+	m_aSoundFile = ByteString( rSoundName, gsl_getThreadTextEncoding() );
+	SalDbgAssert( "X11SalSound::Init( %p, \"%s\", %d )\n",
     
 	m_pVSound = ( !m_aSoundFile.Len() || access( m_aSoundFile.GetBuffer(), R_OK ) ) ? NULL : VSound::createVSound( this );
     
@@ -169,18 +144,9 @@
 }
 
 
-BOOL SalSound::Init( SalFrame* pFrame,
-					 const BYTE* pSound,
-					 ULONG nDataLen,
-					 ULONG& rSoundLen )
+void X11SalSound::Play( ULONG nStartTime, ULONG nPlayTime, bool bLoop )
 {
-	return FALSE;
-}
-
-
-void SalSound::Play( ULONG nStartTime, ULONG nPlayTime, BOOL bLoop )
-{
-	SalDbgAssert( "SalSound::Play( %d, %d, %s )\n", nStartTime, nPlayTime, bLoop ? "TRUE" : "FALSE" );
+	SalDbgAssert( "X11SalSound::Play( %d, %d, %s )\n", nStartTime, nPlayTime, bLoop ? "TRUE" : "FALSE" );
 	if( m_bPlaying && m_pVSound )
 		m_pVSound->stop();
 
@@ -193,27 +159,41 @@
 }
 
 
-void SalSound::Stop()
+void X11SalSound::Stop()
 {
-	SalDbgAssert( "SalSound::Stop()\n" );
+	SalDbgAssert( "X11SalSound::Stop()\n" );
 	if( m_bPlaying && m_pVSound )
 		m_pVSound->stop();
 }
 
 
-void SalSound::Pause()
+void X11SalSound::Pause()
 {
 	if( m_bPlaying && m_pVSound )
 		m_pVSound->pause();
 }
 
 
-void SalSound::Continue()
+void X11SalSound::Continue()
 {
 	if( m_bPaused && m_pVSound )
 		m_pVSound->cont();
 }
 
+bool X11SalSound::IsLoopMode() const
+{
+    return m_bLoop;
+}
+
+bool X11SalSound::IsPlaying() const
+{
+    return m_bPlaying;
+}
+
+bool X11SalSound::IsPaused() const
+{
+    return m_bPaused;
+}
 
 // --------------------------------------------------
 
@@ -251,20 +231,20 @@
 }
 
 
-VSound* VSound::createVSound( SalSound* pSalSound )
+VSound* VSound::createVSound( X11SalSound* pSalSound )
 {
 	struct stat aStat;
-	if( stat( pSalSound->m_aSoundFile.GetBuffer(), & aStat ) )
+	if( stat( pX11SalSound->m_aSoundFile.GetBuffer(), & aStat ) )
 		return NULL;
 
 	VSound* pRet = NULL;
 
 
-	if( ! pSalSound->m_pFrame || pSalSound->m_pFrame->maFrameData.GetDisplay()->IsLocal() )
+	if( GetSalData()->GetDisplay()->IsLocal() )
     {
         #ifdef USE_PASF
         {
-            pRet = new PASFSound( pSalSound );
+            pRet = new PASFSound( pX11SalSound );
             if( pRet && ! pRet->isValid() )
             {
                 delete pRet;
@@ -278,7 +258,7 @@
         #ifdef USE_OSS
         if( ! pRet )
         {
-            pRet = new OSSSound( pSalSound );
+            pRet = new OSSSound( pX11SalSound );
             if( pRet && ! pRet->isValid() )
             {
                 delete pRet;
@@ -292,7 +272,7 @@
         #ifdef USE_DEVAUDIO
         if( ! pRet )
         {
-            pRet = new DevAudioSound( pSalSound );
+            pRet = new DevAudioSound( pX11SalSound );
             if( pRet && ! pRet->isValid() )
             {
                 delete pRet;
@@ -306,7 +286,7 @@
     
 	if( ! pRet )
 	{
-		pRet = new RPTPSound( pSalSound );
+		pRet = new RPTPSound( pX11SalSound );
 		if( pRet && ! pRet->isValid() )
 		{
 			delete pRet;
@@ -319,7 +299,7 @@
 #ifdef USE_NAS
 	if( ! pRet )
 	{
-		pRet = new NASSound( pSalSound );
+		pRet = new NASSound( pX11SalSound );
 		if( pRet && ! pRet->isValid() )
 		{
 			delete pRet;
@@ -334,64 +314,52 @@
 }
 
 
-void SalSound::changeStatePlay()
+void X11SalSound::changeStatePlay()
 {
-	SalDbgAssert( "SalSound(%p)::changeStatePlay()\n", this );
+	SalDbgAssert( "X11SalSound(%p)::changeStatePlay()\n", this );
 
 	m_bPlaying	= TRUE;
 	m_bPaused 	= FALSE;
 
-	if( m_aPROC )
-		m_aPROC( m_pInst, SOUND_NOTIFY_SUCCESS, SOUNDERR_SUCCESS );
+    CallNotifyProc( SOUND_NOTIFY_SUCCESS, SOUNDERR_SUCCESS );
 }
 
 
-void SalSound::changeStateStop()
+void X11SalSound::changeStateStop()
 {
-	SalDbgAssert( "SalSound(%p)::changeStateStop()\n", this );
+	SalDbgAssert( "X11SalSound(%p)::changeStateStop()\n", this );
 
 	m_bPlaying	= FALSE;
 	m_bPaused 	= FALSE;
 
-	if( m_aPROC )
-		m_aPROC( m_pInst, SOUND_NOTIFY_SUCCESS, SOUNDERR_SUCCESS );
+    CallNotifyProc( SOUND_NOTIFY_SUCCESS, SOUNDERR_SUCCESS );
 }
 
 
-void SalSound::changeStatePause()
+void X11SalSound::changeStatePause()
 {
-	SalDbgAssert( "SalSound(%p)::changeStatePause()\n", this );
+	SalDbgAssert( "X11SalSound(%p)::changeStatePause()\n", this );
 
 	m_bPlaying	= TRUE;
 	m_bPaused	= TRUE;
 
-	if( m_aPROC )
-		m_aPROC( m_pInst, SOUND_NOTIFY_SUCCESS, SOUNDERR_SUCCESS );
+    CallNotifyProc( SOUND_NOTIFY_SUCCESS, SOUNDERR_SUCCESS );
 }
 
 
-void SalSound::changeStateCont()
+void X11SalSound::changeStateCont()
 {
-	SalDbgAssert( "SalSound(%p)::changeStateCont()\n", this );
+	SalDbgAssert( "X11SalSound(%p)::changeStateCont()\n", this );
 
 	m_bPlaying	= TRUE;
 	m_bPaused	= FALSE;
-	if( m_aPROC )
-		m_aPROC( m_pInst, SOUND_NOTIFY_SUCCESS, SOUNDERR_SUCCESS );
-}
 
-
-void SalSound::setError( ULONG nError )
-{
-	if( m_aPROC )
-		m_aPROC( m_pInst, SOUND_NOTIFY_ERROR, nError );
+    CallNotifyProc( SOUND_NOTIFY_SUCCESS, SOUNDERR_SUCCESS );
 }
 
 
-void SalSound::SetNotifyProc( void* pInst, SALSOUNDPROC pProc )
+void X11SalSound::setError( ULONG nError )
 {
-	SalDbgAssert( "SalSound::SetNotifyProc( %p, %p )\n", pInst, pProc );
-	m_pInst = pInst;
-	m_aPROC = pProc;
+    CallNotifyProc( SOUND_NOTIFY_ERROR, nError );
 }
 
