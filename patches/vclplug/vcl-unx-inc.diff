Index: vcl/unx/inc/cdeint.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/cdeint.hxx,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -p -u -r1.4 -r1.5
--- vcl/unx/inc/cdeint.hxx	10 Jun 2002 17:27:27 -0000	1.4
+++ vcl/unx/inc/cdeint.hxx	18 Nov 2003 14:35:40 -0000	1.5
@@ -67,9 +67,9 @@
 
 class CDEIntegrator : public DtIntegrator
 {
-	friend DtIntegrator* DtIntegrator::CreateDtIntegrator( SalFrame* );
+	friend DtIntegrator* DtIntegrator::CreateDtIntegrator();
 private:
-	CDEIntegrator( SalFrame* );
+	CDEIntegrator();
 
 public:
 	virtual ~CDEIntegrator();
Index: vcl/unx/inc/dtint.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/dtint.hxx,v
retrieving revision 1.6
retrieving revision 1.9
diff -u -p -u -r1.6 -r1.9
--- vcl/unx/inc/dtint.hxx	27 Mar 2003 17:58:30 -0000	1.6
+++ vcl/unx/inc/dtint.hxx	20 Feb 2004 08:54:36 -0000	1.9
@@ -61,8 +61,6 @@
 #ifndef _SV_DTINT_HXX
 #define _SV_DTINT_HXX
 
-#include <cstdio>
-
 #ifndef _LIST_HXX
 #include <tools/list.hxx>
 #endif
@@ -72,10 +70,11 @@
 #ifndef _STRING_HXX
 #include <tools/string.hxx>
 #endif
+#ifndef _TOOLS_COLOR_HXX
 #include <tools/color.hxx>
+#endif
 #include <font.hxx>
 
-class SalFrame;
 class SalBitmap;
 class SalDisplay;
 class AllSettings;
@@ -107,29 +106,17 @@ protected:
 	DtType				meType;
 	Display*			mpDisplay;
 	SalDisplay*			mpSalDisplay;
-	SalFrame*			mpSalFrame;
 	int					mnRefCount;
     int					mnSystemLookCommandProcess;
 
 
-	DtIntegrator( SalFrame* );
+	DtIntegrator();
 
 	static DtIntegratorList	aIntegratorList;
 	static String			aHomeDir;
 
-    // executes pCommand and parses its output
-    // to get system look information
-    // different DtIntegrators can rely
-    // on native programs to query system settings
-    // pass NULL as command to read the VCL_SYSTEM_SETTINGS property
-    void GetSystemLook( const char* pCommand, AllSettings& rSettings );
-    bool StartSystemLookProcess( const char* pCommand );
-
-    Color parseColor( const ByteString& );
-    Font parseFont( const ByteString& );
-
 public:
-	static DtIntegrator* CreateDtIntegrator( SalFrame* );
+	static DtIntegrator* CreateDtIntegrator();
 	
 	virtual ~DtIntegrator();
 
@@ -137,7 +124,6 @@ public:
 	virtual void GetSystemLook( AllSettings& rSettings );
 	
 	DtType			GetDtType() { return meType; }
-	SalFrame*		GetFrame() { return mpSalFrame; }
 	SalDisplay*		GetSalDisplay() { return mpSalDisplay; }
 	Display*		GetDisplay() { return mpDisplay; }
 
Index: vcl/unx/inc/i18n_cb.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/i18n_cb.hxx,v
retrieving revision 1.6
retrieving revision 1.7
diff -u -p -u -r1.6 -r1.7
--- vcl/unx/inc/i18n_cb.hxx	2 Nov 2001 14:54:02 -0000	1.6
+++ vcl/unx/inc/i18n_cb.hxx	18 Nov 2003 14:36:13 -0000	1.7
@@ -115,7 +115,7 @@ typedef enum {
 } preedit_status_t;
 
 typedef struct {
-    SalFrame      	   *pFrame;
+    SalFrame*			pFrame;
 	Bool		   		bIsMultilingual;
 	preedit_status_t 	eState;
     preedit_text_t 		aText;
Index: vcl/unx/inc/i18n_ic.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/i18n_ic.hxx,v
retrieving revision 1.7
retrieving revision 1.9
diff -u -p -u -r1.7 -r1.9
--- vcl/unx/inc/i18n_ic.hxx	24 Aug 2001 10:22:29 -0000	1.7
+++ vcl/unx/inc/i18n_ic.hxx	18 Nov 2003 14:36:24 -0000	1.9
@@ -96,7 +96,7 @@ private:
 	XVaNestedList mpAttributes;
 	XVaNestedList mpStatusAttributes;
 	XVaNestedList mpPreeditAttributes;
-    SalFrame*	  mpFocusFrame;
+    SalFrame*  mpFocusFrame;
 		
 	Bool 		 SupportInputMethodStyle( XIMStyles *pIMStyles );
 	unsigned int GetWeightingOfIMStyle(   XIMStyle n_style ) const ;
Index: vcl/unx/inc/i18n_status.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/i18n_status.hxx,v
retrieving revision 1.6
retrieving revision 1.7
diff -u -p -u -r1.6 -r1.7
--- vcl/unx/inc/i18n_status.hxx	26 Nov 2002 15:35:08 -0000	1.6
+++ vcl/unx/inc/i18n_status.hxx	18 Nov 2003 14:36:37 -0000	1.7
@@ -78,6 +78,10 @@
 #include <rtl/ustring.hxx>
 #endif
 
+#ifndef _SV_SALIMESTATUS_HXX
+#include <salimestatus.hxx>
+#endif
+
 #include <vector>
 
 class SalFrame;
@@ -92,6 +96,16 @@ namespace vcl
 
 class StatusWindow;
 
+class X11ImeStatus : public SalI18NImeStatus
+{
+public:
+    X11ImeStatus() {}
+    virtual ~X11ImeStatus();
+    
+    virtual bool canToggle();
+    virtual void toggle();
+};
+
 class I18NStatus
 {
 public:
@@ -127,7 +141,7 @@ public:
     SalFrame* getStatusFrame() const;
 
     void setStatusText( const String& rText );
-    const String& getStatusText() const;
+    String getStatusText() const;
 
     enum ShowReason { focus, presentation, contextmap };
     void show( bool bShow, ShowReason eReason );
Index: vcl/unx/inc/kdeint.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/kdeint.hxx,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -p -u -r1.4 -r1.5
--- vcl/unx/inc/kdeint.hxx	10 Jun 2002 17:27:27 -0000	1.4
+++ vcl/unx/inc/kdeint.hxx	18 Nov 2003 14:36:49 -0000	1.5
@@ -70,9 +70,9 @@
 
 class KDEIntegrator : public DtIntegrator
 {
-	friend DtIntegrator* DtIntegrator::CreateDtIntegrator( SalFrame* );
+	friend DtIntegrator* DtIntegrator::CreateDtIntegrator();
 private:
-	KDEIntegrator( SalFrame* );
+	KDEIntegrator();
 
 public:
 	virtual ~KDEIntegrator();
Index: vcl/unx/inc/prex.h
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/prex.h,v
retrieving revision 1.9
retrieving revision 1.11
diff -u -p -u -r1.9 -r1.11
--- vcl/unx/inc/prex.h	12 Jun 2003 10:25:34 -0000	1.9
+++ vcl/unx/inc/prex.h	6 Jan 2004 14:23:45 -0000	1.11
@@ -90,13 +80,6 @@
 
 /* fuer Network Audio System */
 #define Sound		XLIB_Sound
-
-#if defined( MTF12 ) || defined( ALPHA )
-#define XLIB_ILLEGAL_ACCESS 
-#endif   
-#if defined( RS6000 ) || defined( ALPHA )
-struct _XDisplay;
-#endif   
 
 #if defined __cplusplus
 extern "C" {
Index: vcl/unx/inc/pspgraphics.h
===================================================================
RCS file: vcl/unx/inc/pspgraphics.h
diff -N vcl/unx/inc/pspgraphics.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ vcl/unx/inc/pspgraphics.h	17 Jun 2004 12:25:37 -0000	1.3
@@ -0,0 +1,218 @@
+/*************************************************************************
+ *
+ *  
+ *
+ *  
+ *
+ *  
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+#ifndef _VCL_PSPGRAPHICS_H
+#define _VCL_PSPGRAPHICS_H
+
+
+#ifndef _SV_SALGDI_HXX
+#include <salgdi.hxx>
+#endif
+#ifndef _PSPRINT_FONTMANAGER_HXX
+#include <psprint/fontmanager.hxx>
+#endif
+#ifndef _SV_SALLAYOUT_HXX
+#include <sallayout.hxx>
+#endif
+
+#ifndef _USE_PRINT_EXTENSION_
+namespace psp { struct JobData; class PrinterGfx; }
+#endif
+
+class ServerFont;
+
+class PspGraphics : public SalGraphics
+{
+    psp::JobData*				m_pJobData;
+    psp::PrinterGfx*			m_pPrinterGfx;
+    String*						m_pPhoneNr;
+    bool						m_bSwallowFaxNo;
+
+    ServerFont*					m_pServerFont[ MAX_FALLBACK ];
+    bool						m_bFontVertical;
+public:
+    PspGraphics( psp::JobData* pJob, psp::PrinterGfx* pGfx, String* pPhone = NULL, bool bSwallow = false )
+            : m_pJobData( pJob ),
+              m_pPrinterGfx( pGfx ),
+              m_pPhoneNr( pPhone ),
+              m_bSwallowFaxNo( bSwallow ),
+              m_bFontVertical( false )
+    { for( int i = 0; i < MAX_FALLBACK; i++ ) m_pServerFont[i] = 0; }
+    virtual ~PspGraphics();
+
+    String            FaxPhoneComment( const String& rOrig, xub_StrLen nIndex, xub_StrLen& rLen, xub_StrLen& rCutStart, xub_StrLen& rCutStop ) const;
+
+    // helper methods for sharing with X11SalGraphics
+    static bool DoCreateFontSubset( const rtl::OUString& rToFile,
+                                    psp::fontID aFont,
+                                    sal_Int32* pGlyphIDs,
+                                    sal_uInt8* pEncoding,
+                                    sal_Int32* pWidths,
+                                    int nGlyphs,
+                                    FontSubsetInfo& rInfo );
+    static const void* DoGetEmbedFontData( psp::fontID aFont, const sal_Unicode* pUnicodes, sal_Int32* pWidths, FontSubsetInfo& rInfo, long* pDataLen );
+    static void DoFreeEmbedFontData( const void* pData, long nLen );
+    static const std::map< sal_Unicode, sal_Int32 >* DoGetFontEncodingVector( psp::fontID aFont, const std::map< sal_Unicode, rtl::OString >** pNonEncoded );
+    static void SetImplFontData( const psp::FastPrintFontInfo& aInfo, ImplFontData& rData );
+    static FontWidth	ToFontWidth (psp::width::type eWidth);
+    static FontWeight	ToFontWeight (psp::weight::type eWeight);
+    static FontPitch	ToFontPitch (psp::pitch::type ePitch);
+    static FontItalic	ToFontItalic (psp::italic::type eItalic);
+    static FontFamily	ToFontFamily (psp::family::type eFamily);
+
+    // overload all pure virtual methods
+    virtual void			GetResolution( sal_Int32& rDPIX, sal_Int32& rDPIY );
+    virtual void			GetScreenFontResolution( sal_Int32& rDPIX, sal_Int32& rDPIY );
+    virtual USHORT			GetBitCount();
+    virtual long			GetGraphicsWidth();
+
+    virtual void			ResetClipRegion();
+    virtual void			BeginSetClipRegion( ULONG nCount );
+    virtual BOOL			unionClipRegion( long nX, long nY, long nWidth, long nHeight );
+    virtual void			EndSetClipRegion();
+
+    virtual void			SetLineColor();
+    virtual void			SetLineColor( SalColor nSalColor );
+    virtual void			SetFillColor();
+
+    virtual void          	SetFillColor( SalColor nSalColor );
+
+    virtual void			SetXORMode( BOOL bSet );
+
+    virtual void			SetROPLineColor( SalROPColor nROPColor );
+    virtual void			SetROPFillColor( SalROPColor nROPColor );
+
+    virtual void			SetTextColor( SalColor nSalColor );
+    virtual USHORT         SetFont( ImplFontSelectData*, int nFallbackLevel );
+    virtual void			GetFontMetric( ImplFontMetricData* );
+    virtual ULONG			GetKernPairs( ULONG nPairs, ImplKernPairData* pKernPairs );
+    virtual ULONG			GetFontCodeRanges( sal_uInt32* pCodePairs ) const;
+    virtual void			GetDevFontList( ImplDevFontList* );
+    virtual void			GetDevFontSubstList( OutputDevice* );
+    virtual ImplFontData*	AddTempDevFont( const String& rFileURL, const String& rFontName );
+    virtual BOOL			CreateFontSubset( const rtl::OUString& rToFile,
+                                              ImplFontData* pFont,
+                                              sal_Int32* pGlyphIDs,
+                                              sal_uInt8* pEncoding,
+                                              sal_Int32* pWidths,
+                                              int nGlyphs,
+                                              FontSubsetInfo& rInfo
+                                              );
+    virtual const std::map< sal_Unicode, sal_Int32 >* GetFontEncodingVector( ImplFontData* pFont, const std::map< sal_Unicode, rtl::OString >** ppNonEncoded );
+    virtual const void*	GetEmbedFontData( ImplFontData* pFont,
+                                          const sal_Unicode* pUnicodes,
+                                          sal_Int32* pWidths,
+                                          FontSubsetInfo& rInfo,
+                                          long* pDataLen );
+    virtual void			FreeEmbedFontData( const void* pData, long nDataLen );
+    virtual BOOL			GetGlyphBoundRect( long nIndex, Rectangle& );
+    virtual BOOL			GetGlyphOutline( long nIndex, PolyPolygon& );
+    virtual SalLayout*		GetTextLayout( ImplLayoutArgs&, int nFallbackLevel );
+    virtual void			DrawServerFontLayout( const ServerFontLayout& );
+    virtual void			drawPixel( long nX, long nY );
+    virtual void			drawPixel( long nX, long nY, SalColor nSalColor );
+    virtual void			drawLine( long nX1, long nY1, long nX2, long nY2 );
+    virtual void			drawRect( long nX, long nY, long nWidth, long nHeight );
+    virtual void			drawPolyLine( ULONG nPoints, const SalPoint* pPtAry );
+    virtual void			drawPolygon( ULONG nPoints, const SalPoint* pPtAry );
+    virtual void			drawPolyPolygon( ULONG nPoly,
+                                             const ULONG* pPoints,
+                                             PCONSTSALPOINT* pPtAry );
+    virtual sal_Bool		drawPolyLineBezier( ULONG nPoints,
+                                                const SalPoint* pPtAry,
+                                                const BYTE* pFlgAry );
+    virtual sal_Bool		drawPolygonBezier( ULONG nPoints,
+                                               const SalPoint* pPtAry,
+                                               const BYTE* pFlgAry );
+    virtual sal_Bool		drawPolyPolygonBezier( ULONG nPoly,
+                                                   const ULONG* pPoints,
+                                                   const SalPoint* const* pPtAry,
+                                                   const BYTE* const* pFlgAry );
+    virtual void			copyArea( long nDestX,
+                                      long nDestY,
+                                      long nSrcX,
+                                      long nSrcY,
+                                      long nSrcWidth,
+                                      long nSrcHeight,
+                                      USHORT nFlags );
+    virtual void			copyBits( const SalTwoRect* pPosAry,
+                                      SalGraphics* pSrcGraphics );
+    virtual void			drawBitmap( const SalTwoRect* pPosAry,
+                                        const SalBitmap& rSalBitmap );
+    virtual void			drawBitmap( const SalTwoRect* pPosAry,
+                                        const SalBitmap& rSalBitmap,
+                                        SalColor nTransparentColor );
+    virtual void			drawBitmap( const SalTwoRect* pPosAry,
+                                        const SalBitmap& rSalBitmap,
+                                        const SalBitmap& rTransparentBitmap );
+    virtual void			drawMask( const SalTwoRect* pPosAry,
+                                      const SalBitmap& rSalBitmap,
+                                      SalColor nMaskColor );
+    virtual SalBitmap*		getBitmap( long nX, long nY, long nWidth, long nHeight );
+    virtual SalColor		getPixel( long nX, long nY );
+    virtual void			invert( long nX, long nY, long nWidth, long nHeight, SalInvert nFlags );
+    virtual void			invert( ULONG nPoints, const SalPoint* pPtAry, SalInvert nFlags );
+
+    virtual BOOL			drawEPS( long nX, long nY, long nWidth, long nHeight, void* pPtr, ULONG nSize );
+
+};
+
+#endif // _VCL_PSPGRAPHICS_H
Index: vcl/unx/inc/salbmp.h
===================================================================
RCS file: vcl/unx/inc/salbmp.h
diff -N vcl/unx/inc/salbmp.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ vcl/unx/inc/salbmp.h	22 Jun 2004 17:42:31 -0000	1.3
@@ -0,0 +1,285 @@
+/*************************************************************************
+ *
+ *  
+ *
+ *  
+ *
+ *  
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+#ifndef _SV_SALBMP_H
+#define _SV_SALBMP_H
+
+#ifndef _SALSTD_HXX
+#include <salstd.hxx>
+#endif
+#ifndef _SV_SALGTYPE
+#include <salgtype.hxx>
+#endif
+#ifndef _SV_SALDISP_HXX
+#include <saldisp.hxx>
+#endif
+#ifndef _SV_SALBMP_HXX
+#include <salbmp.hxx>
+#endif
+
+struct	BitmapBuffer;
+class	BitmapPalette;
+class	SalGraphics;
+class	ImplSalDDB;
+class	ImplSalBitmapCache;
+
+// -------------
+// - SalBitmap -
+// -------------
+
+class X11SalBitmap : public SalBitmap
+{
+private:
+
+	static BitmapBuffer*		ImplCreateDIB( const Size& rSize,
+											   USHORT nBitCount, 
+											   const BitmapPalette& rPal );
+	static BitmapBuffer*		ImplCreateDIB( Drawable aDrawable,
+											   long nDrawableDepth,
+											   long nX, long nY,
+											   long nWidth, long nHeight );
+
+public:
+
+	static ImplSalBitmapCache*	mpCache;
+	static ULONG				mnCacheInstCount;
+
+	static void					ImplCreateCache();
+	static void					ImplDestroyCache();
+    void				        ImplRemovedFromCache();
+
+    bool                        SnapShot (Display* pDisplay, XLIB_Window hWindow);
+    bool                        ImplCreateFromXImage (Display* pDisplay, XLIB_Window hWindow, 
+                                                      XImage* pImage);
+private:
+
+
+	BitmapBuffer*	mpDIB;
+	ImplSalDDB*		mpDDB;
+								
+public:
+
+	bool			ImplCreateFromDrawable( 
+#ifdef _USE_PRINT_EXTENSION_ 
+											SalDisplay* pDisplay,
+#endif
+											Drawable aDrawable, 
+											long nDrawableDepth,
+											long nX, long nY, 
+											long nWidth, long nHeight );
+
+	XImage*			ImplCreateXImage( 
+											SalDisplay* pSalDisp, long nDepth, 
+									  		const SalTwoRect& rTwoRect ) const;
+#ifdef _USE_PRINT_EXTENSION_
+	void			ImplDraw( SalDisplay *pDisplay, Drawable aDrawable, long nDrawableDepth, 
+							  const SalTwoRect& rTwoRect, const GC& rGC, bool bDstIsWindow ) const;
+#else
+	void			ImplDraw( Drawable aDrawable, long nDrawableDepth, 
+							  const SalTwoRect& rTwoRect, const GC& rGC, bool bDstIsWindow ) const;
+#endif
+						
+public:					
+								
+    X11SalBitmap();
+    virtual ~X11SalBitmap();
+
+    // overload pure virtual methods
+	virtual bool			Create( const Size& rSize, 
+                            USHORT nBitCount, 
+							const BitmapPalette& rPal );
+	virtual bool			Create( const SalBitmap& rSalBmp );
+	virtual bool			Create( const SalBitmap& rSalBmp, 
+                                    SalGraphics* pGraphics );
+	virtual bool			Create( const SalBitmap& rSalBmp,
+                                    USHORT nNewBitCount );
+						
+	virtual void			Destroy();
+						
+	virtual Size			GetSize() const;
+	virtual USHORT			GetBitCount() const;
+						
+	virtual BitmapBuffer*	AcquireBuffer( bool bReadOnly );
+	virtual void			ReleaseBuffer( BitmapBuffer* pBuffer, bool bReadOnly );
+};
+
+// --------------
+// - ImplSalDDB -
+// --------------
+
+class ImplSalDDB
+{
+private:
+
+	Pixmap			maPixmap;
+	SalTwoRect		maTwoRect;
+	long			mnDepth;
+
+					ImplSalDDB() {}
+
+    static void	ImplDraw( 
+#ifdef _USE_PRINT_EXTENSION_ 
+								SalDisplay* pDisplay,
+#endif
+    Drawable aSrcDrawable, long nSrcDrawableDepth,
+						      Drawable aDstDrawable, long nDstDrawableDepth,
+						      long nSrcX, long nSrcY, 
+						      long nDestWidth, long nDestHeight, 
+						      long nDestX, long nDestY, const GC& rGC, bool bDstIsWindow );
+					
+public:				
+					
+					ImplSalDDB( 
+#ifdef _USE_PRINT_EXTENSION_ 
+								SalDisplay* pDisplay,
+#endif
+								XImage* pImage, Drawable aDrawable, 
+								const SalTwoRect& rTwoRect );
+					ImplSalDDB( 
+#ifdef _USE_PRINT_EXTENSION_ 
+								SalDisplay* pDisplay,
+#endif
+								Drawable aDrawable, long nDrawableDepth, 
+								long nX, long nY, long nWidth, long nHeight );
+                    ImplSalDDB (Display* pDisplay, XLIB_Window hWindow, XImage* pImage); 
+					~ImplSalDDB();
+					
+	Pixmap			ImplGetPixmap() const { return maPixmap; }
+	long			ImplGetWidth() const { return maTwoRect.mnDestWidth; }
+	long			ImplGetHeight() const { return maTwoRect.mnDestHeight; }
+	long			ImplGetDepth() const { return mnDepth; }
+	ULONG			ImplGetMemSize() const { return( ( maTwoRect.mnDestWidth * maTwoRect.mnDestHeight * mnDepth ) >> 3 ); }
+					
+	bool			ImplMatches( long nDepth, const SalTwoRect& rTwoRect ) const;
+	void			ImplDraw( 
+#ifdef _USE_PRINT_EXTENSION_ 
+								SalDisplay* pDisplay,
+#endif
+								Drawable aDrawable, long nDrawableDepth, 
+								const SalTwoRect& rTwoRect, const GC& rGC, bool bDstIsWindow ) const;
+};
+
+// ----------------------
+// - ImplSalBitmapCache -
+// ----------------------
+
+class ImplSalBitmapCache
+{
+private:
+
+	List			maBmpList;
+	ULONG			mnTotalSize;
+
+public:				
+					
+					ImplSalBitmapCache();
+					~ImplSalBitmapCache();
+
+	void			ImplAdd( X11SalBitmap* pBmp, ULONG nMemSize = 0UL, ULONG nFlags = 0UL );
+	void			ImplRemove( X11SalBitmap* pBmp );
+	void			ImplClear();
+};
+
+#endif // _SV_SALBMP_HXX
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
Index: vcl/unx/inc/saldata.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/saldata.hxx,v
retrieving revision 1.5
retrieving revision 1.9
diff -u -p -u -r1.5 -r1.9
--- vcl/unx/inc/saldata.hxx	16 Jul 2003 17:46:41 -0000	1.5
+++ vcl/unx/inc/saldata.hxx	10 May 2004 15:53:52 -0000	1.9
@@ -74,23 +74,17 @@
 #ifndef _SV_SALWTYPE_HXX
 #include <salwtype.hxx>
 #endif
-#ifndef _SV_SALINST_HXX
-#include <salinst.hxx>
+#ifndef _SV_SALINST_H
+#include <salinst.h>
 #endif
 
 // -=-= forwards -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 class SalXLib;
 class SalDisplay;
-class SalInstance;
 class SalFrame;
 class SalPrinter;
 
 // -=-= typedefs -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-#ifndef SIG_PF
-typedef void SIG_FUNC_TYP(int);
-typedef SIG_FUNC_TYP *SIG_TYP;
-#define SIG_PF SIG_TYP
-#endif
 
 DECLARE_LIST( SalDisplays, SalDisplay* )
 
@@ -103,63 +97,42 @@ typedef	unsigned int pthread_t;
 // -=-= SalData =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 class SalData
 {
-			char**				argv_;
-			int					argc_;
-			String				aBinaryPath_;
-
-			SALTIMERPROC		pTimerProc_;		// timer callback proc
-
-			SIG_TYP				sig_[30];
+protected:
 			BOOL				bNoExceptions_;
 
 			SalXLib			   *pXLib_;
 
-	        SalDisplays			SalDisplays_;
-			SalDisplay		   *pDefDisp_;
-			SalDisplay		   *pCurDisp_;
+			SalDisplay		   *m_pSalDisplay;
 
 	        pthread_t			hMainThread_;
 public:
-			SalInstance		   *pFirstInstance_;	// pointer of first instance
-			SalFrame		   *pFirstFrame_;		// pointer of first frame
-
+			SalInstance*		pInstance_;			// pointer to instance
 public:
-								SalData();
-								~SalData();
+    SalData();
+    virtual ~SalData();
 	
-			void				Init( int *pArgc, char *ppArgv[] );
+    virtual void			Init();
+    virtual void			initNWF();
+    virtual void			deInitNWF();
+    
+	inline	void			XError( Display     *pDisplay, XErrorEvent *pEvent ) const;
+
+    SalDisplay*				GetDisplay() const 
+    { return m_pSalDisplay; }
+    void					SetSalDisplay( SalDisplay* pDisplay )
+    { m_pSalDisplay = pDisplay; }
 
-	inline	const XubString	   &GetFileName() const { return aBinaryPath_; }
-	inline	USHORT				GetCommandLineParamCount() const
-	                                { return argc_; }
-			XubString			GetCommandLineParam( USHORT nParam ) const;
-
-			long				ShutDown() const;
-			long				Close() const;
-	inline	void				XError( Display     *pDisplay,
-										XErrorEvent *pEvent ) const;
-
-	        SalDisplay	       *GetDisplay( Display *pDisplay );
-	inline  SalDisplay         *GetDisplay( long nDisplay ) const
-	                                { return SalDisplays_.GetObject(nDisplay); }
-	inline	SalDisplay		   *GetDefDisp() const { return pDefDisp_; }
-	inline	SalDisplay		   *GetCurDisp() const { return pCurDisp_; }
-	inline	void				SetDefDisp( SalDisplay *pDisp )
-	                                { pDefDisp_ = pDisp; }
-	inline	void				SetCurDisp( SalDisplay *pDisp )
-	                                { pCurDisp_ = pDisp; }
-	inline  void				Insert( SalDisplay *pDisplay );
-	inline  void				Remove( SalDisplay *pDisplay );
+    void					DeleteDisplay(); // for shutdown
 	
-	inline	SalXLib			   *GetLib() const { return pXLib_; }
+	inline	SalXLib*		GetLib() const { return pXLib_; }
 	inline	pthread_t		GetMainThread() const { return hMainThread_; }
 
-			void				StartTimer( ULONG nMS );
-	inline	void				StopTimer();
-	inline	void				SetCallback( SALTIMERPROC pProc )
-	                                { pTimerProc_ = pProc; }
-	        void				Timeout() const;
+    void					StartTimer( ULONG nMS );
+	inline	void			StopTimer();
+    void					Timeout() const;
 
+    static int XErrorHdl( Display*, XErrorEvent* );
+    static int XIOErrorHdl( Display* );
 };
 
 // -=-= inlines =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
@@ -169,12 +142,6 @@ inline void SetSalData( SalData* pData )
 inline SalData* GetSalData()
 { return (SalData*)ImplGetSVData()->mpSalData; }
 
-inline void	SalData::Insert( SalDisplay *pDisplay )
-{ SalDisplays_.Insert( pDisplay ); }
-
-inline void	SalData::Remove( SalDisplay *pDisplay )
-{ SalDisplays_.Remove( pDisplay ); }
-
 #ifdef _SV_SALDISP_HXX
 inline void SalData::XError( Display *pDisplay,	XErrorEvent *pEvent ) const
 { pXLib_->XError( pDisplay, pEvent ); }
@@ -183,7 +150,6 @@ inline void SalData::XError( Display *pD
 class YieldMutexReleaser
 {
 	ULONG				m_nYieldCount;
-	SalYieldMutex*		m_pSalInstYieldMutex;
 public:
 	inline YieldMutexReleaser();
 	inline ~YieldMutexReleaser();
@@ -191,30 +157,12 @@ public:
 
 inline YieldMutexReleaser::YieldMutexReleaser()
 {
-	SalData *pSalData		= GetSalData();
-	m_pSalInstYieldMutex	=
-		pSalData->pFirstInstance_->maInstData.mpSalYieldMutex;
-
-	ULONG i;
-	if ( m_pSalInstYieldMutex->GetThreadId() ==
-		 NAMESPACE_VOS(OThread)::getCurrentIdentifier() )
-	{
-		m_nYieldCount = m_pSalInstYieldMutex->GetAcquireCount();
-		for ( i = 0; i < m_nYieldCount; i++ )
-			m_pSalInstYieldMutex->release();
-	}
-	else
-		m_nYieldCount = 0;
+	m_nYieldCount = GetSalData()->pInstance_->ReleaseYieldMutex();
 }
 
 inline YieldMutexReleaser::~YieldMutexReleaser()
 {
-	// Yield-Semaphore wieder holen
-	while ( m_nYieldCount )
-	{
-		m_pSalInstYieldMutex->acquire();
-		m_nYieldCount--;
-	}
+    GetSalData()->pInstance_->AcquireYieldMutex( m_nYieldCount );
 }
 
 #endif // _SV_SALDATA_HXX
Index: vcl/unx/inc/saldisp.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/saldisp.hxx,v
retrieving revision 1.16.122.2
retrieving revision 1.24
diff -u -p -u -r1.16.122.2 -r1.24
--- vcl/unx/inc/saldisp.hxx	9 Jan 2004 18:13:57 -0000	1.16.122.2
+++ vcl/unx/inc/saldisp.hxx	17 Jun 2004 12:26:03 -0000	1.24
@@ -63,15 +63,10 @@
 #define _SV_SALDISP_HXX
 
 // -=-= exports =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-struct	SalAppXResource;
 class	SalDisplay;
 class	SalColormap;
-class	SalColormapRef;
-class	SalTrueColorConverter;
 class	SalVisual;
 class	SalXLib;
-class	SalImageList;
-class	SalBitmapList;
 
 // -=-= #includes =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 #ifndef _SALUNX_H
@@ -86,32 +81,25 @@ class	SalBitmapList;
 #ifndef _SAL_TYPES_H_
 #include <sal/types.h>
 #endif
-
+#ifndef _OSL_MUTEX_H
+#include <osl/mutex.h>
+#endif
 #include <vector>
+#include <list>
 #ifndef _GEN_HXX
 #include <tools/gen.hxx>
 #endif
+#ifndef _SV_SALWTYPE_HXX
+#include <salwtype.hxx>
+#endif
 
 // -=-= forwards -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 class	BitmapPalette;
-class	SalImage;
-class	SalBitmap;
-class	SalFrameData;
+class	SalFrame;
 class	ColorMask;
-class	SalSystemData;
 
 namespace vcl_sal { class WMAdaptor; }
 
-#ifndef _XSHM_H_
-struct XShmSegmentInfo;
-#endif
-
-// -=-= typedefs -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-typedef struct _oslMutexImpl *oslThreadMutex;
-
-DECLARE_LIST( SalImageList, SalImage* )
-DECLARE_LIST( SalBitmapList,SalBitmap*)
-
 // -=-= #defines -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 #define PROPERTY_SUPPORT_WM_SetPos				0x00000001
 #define PROPERTY_SUPPORT_WM_Screen				0x00000002
@@ -185,8 +173,6 @@ enum SalRGB { RGB,  RBG,
 // -=-= SalVisual =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 class SalVisual : public XVisualInfo
 {
-	STDAPI( SalVisual );
-	
     SalRGB			eRGBMode_;
     int				nRedShift_;
     int				nGreenShift_;
@@ -210,11 +196,9 @@ public:
          	BOOL			Convert( int &n0, int &n1, int &n2 ); // 24bit
 };
 
-// -=-= SalColormap/SalColormapRef=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-class SalColormap : public SvRefBase
+// -=-= SalColormap =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
+class SalColormap
 {
-	STDAPI( SalColormap );
-	
     SalDisplay	   *pDisplay_;
     Colormap		hColormap_;
     SalColor	   *pPalette_;			// Pseudocolor
@@ -232,7 +216,7 @@ public:
     SalColormap( const BitmapPalette &rpPalette );
     SalColormap( USHORT               nDepth );
     SalColormap();
-	virtual					~SalColormap();
+	~SalColormap();
     
 	inline	Colormap		GetXColormap() const { return hColormap_; }
 	inline	SalDisplay	   *GetDisplay() const { return pDisplay_; }
@@ -257,23 +241,20 @@ public:
     void			SetPalette( const BitmapPalette &rPalette );
 };
 
-SV_DECL_IMPL_REF( SalColormap )
-
 // -=-= SalXLib =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 typedef int(*YieldFunc)(int fd, void* data);
 struct YieldEntry;
 
 class SalXLib
 {
-	STDAPI( SalXLib );
-	
+protected:
     timeval			Timeout_;
     ULONG           nTimeoutMS_;
 	int             pTimeoutFDS_[2];
 
-    int 		    nStateOfYield_;
     BOOL			bWasXError_;
     BOOL			bIgnoreXErrors_;
+    bool			m_bHaveSystemChildFrames;
     int                         nIgnoreErrorLevel;
 
     int				nFDs_;
@@ -283,17 +264,18 @@ class SalXLib
 
 public:
     SalXLib();
-    ~SalXLib();
-    void			Init( int *pArgc, char *ppArgv[] );
+    virtual			~SalXLib();
+    virtual void		Init();
 	
-    void			Yield( BOOL bWait );
-    void			Wakeup();
+    virtual void		Yield( BOOL bWait );
+    virtual void        Wakeup();
+	virtual void		PostUserEvent();
     
-    void			Insert( int fd, void* data,
+    virtual void    Insert( int fd, void* data,
                             YieldFunc	pending,
                             YieldFunc	queued,
                             YieldFunc	handle );
-    void			Remove( int fd );
+    virtual void    Remove( int fd );
     
     void			XError( Display *pDisp, XErrorEvent *pEvent );
 	inline  void                    PushErrorTrap() { nIgnoreErrorLevel++; }
@@ -303,17 +285,13 @@ public:
 	inline	void			SetIgnoreXErrors( BOOL b )
     { bIgnoreXErrors_ = b; bWasXError_ = FALSE; }
     
-	inline  void			StartTimer( ULONG nMS );
-	inline	void			StopTimer();    
+	virtual void			StartTimer( ULONG nMS );
+	virtual void			StopTimer();    
 
     bool            CheckTimeout( bool bExecuteTimers = true );
-};
 
-// -=-= SalXEvent =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-struct SalXEvent
-{
-         	SalXEvent      *pNext_;				// Stack
-	        XEvent			event_;
+    void			setHaveSystemChildFrame() 
+    { m_bHaveSystemChildFrames = true; }
 };
 
 // -=-= SalDisplay -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
@@ -336,8 +314,21 @@ extern "C" {
 
 class SalDisplay
 {
-	STDAPI( SalDisplay );
-	
+// -=-= UserEvent =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
+    struct SalUserEvent
+    {
+        SalFrame*		m_pFrame;
+        void*			m_pData;
+        USHORT			m_nEvent;
+        
+        SalUserEvent( SalFrame* pFrame, void* pData, USHORT nEvent = SALEVENT_USEREVENT ) 
+                : m_pFrame( pFrame ),
+                  m_pData( pData ),
+                  m_nEvent( nEvent )
+        {}
+    };
+
+protected:	
     SalXLib		   *pXLib_;
     SalI18N_InputMethod			*mpInputMethod;
     SalI18N_KeyboardExtension	*mpKbdExtension;
@@ -346,9 +337,6 @@ class SalDisplay
     XlfdStorage	   				*mpFontList;
     const ExtendedXlfd			*mpFallbackFactory;
     
-    SalSystemData  *mpSalSystemData;
-    // the one to get create and destroy notify events
-    
     Display		   *pDisp_;				// X Display
     Screen		   *pScreen_;			// XDefaultScreenOfDisplay
     int				nScreen_;			// XDefaultScreen
@@ -356,6 +344,7 @@ class SalDisplay
     XLIB_Window		hRootWindow_;	
     Size			aSize_;				// Screen Size [pixel]
     Pair			aResolution_;		// [dpi]
+    bool			mbExactResolution;
     ULONG			nMaxRequestSize_;	// [byte]
     
     srv_vendor_t	meServerVendor;
@@ -364,18 +353,13 @@ class SalDisplay
     BOOL			bLocal_;			// Server==Client? Init 
     // in SalDisplay::IsLocal()
     BOOL			mbLocalIsValid;		// bLocal_ is valid ?
-    ULONG			nImageDepths_;		// Supported Image Depths
-    ULONG			nSharedImages_;		// Supports MIT-SHM Extension
     // until x bytes
 	
-    int				nStateOfYield_;
-    int             nStateOfSendEvent_;
-    oslThreadMutex  hEventGuard_;
-    SalXEvent	   *pEventQueue_;		// threaded user event queue
-    SalXEvent      *pDispatchStack_;	// Dispatch/Yield
+    oslMutex        hEventGuard_;
+    std::list< SalUserEvent > m_aUserEvents;
     
     XLIB_Cursor		aPointerCache_[POINTER_COUNT];
-    SalFrameData   *pCapture_;
+    SalFrame*		m_pCapture;
     
     // GDI
     SalVisual	   *pVisual_;			// Visual
@@ -387,12 +371,10 @@ class SalDisplay
     GC				pOrGC_;
     GC				pStippleGC_;
     Pixmap			hInvert50_;
-    SalColormapRef  xColor_;
+    SalColormap    *m_pColormap;
     
     SalFontCache   *pFontCache_;
     
-    int				nBeepVolume_;		// Sound
-    
     // Keyboard
     BOOL			bNumLockFromXS_;	// Num Lock handled by X Server
     int				nNumLockIndex_;		// modifier index in modmap
@@ -402,21 +384,20 @@ class SalDisplay
     KeySym			nMod1KeySym_;		// first mod1 modifier
     ByteString		m_aKeyboardName;
     
-    SalBitmapList	Bitmaps_;			// to destroy bitmap resources;
-    
-    SalImageList	SharedImages_;
-    
-    ::vcl_sal::WMAdaptor*	m_pWMAdaptor;
+    vcl_sal::WMAdaptor*	m_pWMAdaptor;
 
     bool			m_bXinerama;
     std::vector< Rectangle > m_aXineramaScreens;
+    std::list<SalFrame*> m_aFrames;
 
     struct SnDisplay           *m_pSnDisplay;
     struct SnLauncheeContext   *m_pSnLauncheeContext;
 	
     void			DestroyFontCache();
-    long			Dispatch( XEvent *pEvent );
+    virtual long	Dispatch( XEvent *pEvent ) = 0;
     void			InitXinerama();
+
+    void			doDestruct();
 public:
 	static	SalDisplay	   *GetSalDisplay( Display* display );
 	static	BOOL			BestVisual( Display     *pDisp,
@@ -424,21 +405,20 @@ public:
 										XVisualInfo &rVI );
 
 							SalDisplay( Display* pDisp,
-										Visual* pVisual = NULL,
-										Colormap aColMap = None);
+										Colormap aColMap = None );
     
-    ~SalDisplay();
+    virtual ~SalDisplay();
     
-    void			Init( Colormap hXColmap, const XVisualInfo* pXVI );
+
+    virtual void			registerFrame( SalFrame* pFrame );
+    virtual void			deregisterFrame( SalFrame* pFrame );
+    void					setHaveSystemChildFrame() const 
+    { pXLib_->setHaveSystemChildFrame(); }
+
+    void			Init( Colormap hXColmap, Visual *pVisual );
     
-    BOOL			IsEvent();
-    void			SendEvent( Atom			aEvent,
-                               void		   *pData,
-                               XLIB_Window	hReceiver = 0 ) const;
-    void			SendEvent( Atom			aEvent,
-                               UINT32	   *pData = 0,
-                               XLIB_Window	hReceiver = 0 ) const;
-    void			Yield( BOOL bWait );
+    void			SendInternalEvent( SalFrame* pFrame, void* pData, USHORT nEvent = SALEVENT_USEREVENT );
+    bool			DispatchInternalEvent();
     void			PrintInfo() const;
     
     void			PrintEvent( const ByteString &rComment,
@@ -466,15 +446,10 @@ public:
                                XIC = NULL ) const;
     
     XLIB_Cursor		GetPointer( int ePointerStyle );
-    int				CaptureMouse( SalFrameData *pCapture );
+    virtual int	CaptureMouse( SalFrame *pCapture );
     
     BOOL			IsLocal();
-	inline  void			Insert( SalBitmap *pBitmap );
-	inline  void			Remove( SalBitmap *pBitmap );
-    
-	inline	SalImage	   *Seek( SalImage *pImage );
-	inline  void			Insert( SalImage *pImage );
-	inline  void			Remove( SalImage *pImage );
+
     void			Remove( XEvent   *pEvent );
 	
 	XLIB_Window		GetRootWindow() const { return hRootWindow_; }
@@ -492,22 +467,20 @@ public:
 	GC				GetStippleGC() const { return pStippleGC_; }
 	GC				GetGC( USHORT nDepth ) const;
 	Pixmap			GetInvert50() const { return hInvert50_; }
-	SalColormap    &GetColormap() const { return *xColor_; }
+	SalColormap    &GetColormap() const { return *m_pColormap; }
 	SalVisual	   *GetVisual() const { return pVisual_; }
 	SalVisual	   *GetRootVisual() const { return pRootVisual_; }
 	const Size	   &GetScreenSize() const { return aSize_; }
 	const Pair	   &GetResolution() const { return aResolution_; }
+    bool			GetExactResolution() const { return mbExactResolution; }
 	ULONG			GetProperties() const { return nProperties_; }
 	ULONG			GetMaxRequestSize() const { return nMaxRequestSize_; }
-	ULONG			GetImageDepths() const { return nImageDepths_; }
-    ULONG			SupportsShm() const { return nSharedImages_; }
-	void			DisableShm() { nSharedImages_ /= 2; } // = 0
-    void			GetScreenFontResolution( long& rDPIX, long& rDPIY ) const;
+    void			GetScreenFontResolution( sal_Int32& rDPIX, sal_Int32& rDPIY ) const;
 	
-	BOOL			MouseCaptured( const SalFrameData *pFrameData ) const
-    { return pCapture_ == pFrameData; }
-    SalFrameData*	GetCaptureFrame() const
-    { return pCapture_; }
+	BOOL			MouseCaptured( const SalFrame *pFrameData ) const
+    { return m_pCapture == pFrameData; }
+    SalFrame*	GetCaptureFrame() const
+    { return m_pCapture; }
 	SalXLib*         GetXLib() { return pXLib_; }
     
 	SalI18N_InputMethod*			GetInputMethod()  { return mpInputMethod;  }
@@ -520,25 +493,14 @@ public:
     ::vcl_sal::WMAdaptor* getWMAdaptor() const { return m_pWMAdaptor; }
     bool			IsXinerama() const { return m_bXinerama; }
     const std::vector< Rectangle >& GetXineramaScreens() const { return m_aXineramaScreens; }
+
+    const std::list< SalFrame* >& getFrames() 
+    { return m_aFrames; }
+    
 };
 
 // -=-= inlines =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 
-inline void SalDisplay::Remove( SalBitmap *pBitmap )
-{ Bitmaps_.Remove( pBitmap ); }
-	
-inline void SalDisplay::Insert( SalBitmap *pBitmap )
-{ Bitmaps_.Insert( pBitmap ); }
-	
-inline SalImage *SalDisplay::Seek( SalImage *pImage )
-{ return SharedImages_.Seek( pImage ); }
-	
-inline void SalDisplay::Remove( SalImage *pImage )
-{ SharedImages_.Remove( pImage ); }
-	
-inline void SalDisplay::Insert( SalImage *pImage )
-{ SharedImages_.Insert( pImage ); }
-	
 inline GC SalDisplay::GetGC( USHORT nDepth ) const
 { return 1 == nDepth
 	     ? pMonoGC_
@@ -557,6 +519,20 @@ inline Visual *SalColormap::GetXVisual()
 
 inline int SalColormap::GetClass() const
 { return pVisual_ ? pVisual_->GetClass() : PseudoColor; }
+
+class SalX11Display : public SalDisplay
+{
+public:
+		     SalX11Display( Display* pDisp,
+						 Visual* pVisual = NULL,
+						 Colormap aColMap = None );
+    virtual ~SalX11Display();
+
+    virtual long		Dispatch( XEvent *pEvent );
+    virtual void		Yield( BOOL bWait );
+
+    BOOL	 IsEvent();
+};
 
 /*----------------------------------------------------------
  keep track of correct size of the initial window
Index: vcl/unx/inc/salframe.h
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/salframe.h,v
retrieving revision 1.31.42.2
retrieving revision 1.38
diff -u -p -u -r1.31.42.2 -r1.38
--- vcl/unx/inc/salframe.h	2 Mar 2004 10:01:45 -0000	1.31.42.2
+++ vcl/unx/inc/salframe.h	18 May 2004 10:56:20 -0000	1.38
@@ -65,6 +65,9 @@
 #ifndef _SALSTD_HXX
 #include <salstd.hxx>
 #endif
+#ifndef _SV_SALFRAME_HXX
+#include <salframe.hxx>
+#endif
 #ifndef _SV_SALWTYPE_HXX
 #include <salwtype.hxx>
 #endif
@@ -89,9 +92,8 @@
 
 // -=-= forwards -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 class	SalDisplay;
-class	SalGraphics;
-class	SalFrame;
-class	SalColormap;
+class	X11SalGraphics;
+class SalGraphicsLayout;
 class   SalI18N_InputContext;
 
 namespace vcl_sal { class WMAdaptor; class NetWMAdaptor; class GnomeWMAdaptor; }
@@ -113,36 +115,26 @@ class SalFrameDelData 
         SalFrameDelData*    GetNext ()   { return mpNext; }
 }; 
 
-// -=-= SalFrameData =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
+// -=-= X11SalFrame =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
 #define SHOWSTATE_UNKNOWN		-1
 #define SHOWSTATE_MINIMIZED 	0
 #define SHOWSTATE_NORMAL		1
 #define SHOWSTATE_HIDDEN		2
 
-class SalFrameData
+class X11SalFrame : public SalFrame
 {
-	friend	class			SalFrame;
-    friend class			::vcl_sal::WMAdaptor;
-    friend class			::vcl_sal::NetWMAdaptor;
-    friend class			::vcl_sal::GnomeWMAdaptor;
-	friend  SalFrame* SalInstance::CreateFrame( SalFrame*, ULONG );
-	friend  SalFrame* SalInstance::CreateChildFrame( SystemParentData*, ULONG );
-
-	static Bool checkKeyReleaseForRepeat( Display*, XEvent*, XPointer pSalFrameData );
-    STDAPI( SalFrameData );
+    friend class vcl_sal::WMAdaptor;
+    friend class vcl_sal::NetWMAdaptor;
+    friend class vcl_sal::GnomeWMAdaptor;
+    
+	static Bool checkKeyReleaseForRepeat( Display*, XEvent*, XPointer pX11SalFrame );
 
-    static SalFrame* s_pSaveYourselfFrame;
+    static X11SalFrame* s_pSaveYourselfFrame;
                                 
-    SalFrame	   *pNextFrame_;		// pointer to next frame
-    SalFrame	   *pFrame_;
-
-    SalFrame*       mpParent;            // pointer to parent frame
+    X11SalFrame*	mpParent;            // pointer to parent frame
 	                                // which should never obscur this frame
     bool			mbTransientForRoot;
-    ::std::list< SalFrame* > maChildren;         // List of child frames
-    
-    SALFRAMEPROC	pProc_;				// callback proc
-    void		   *pInst_;				// instance handle for callback
+    std::list< X11SalFrame* > maChildren;         // List of child frames
     
     SalDisplay	   *pDisplay_;
     XLIB_Window		mhWindow;
@@ -155,8 +147,8 @@ class SalFrameData
     XLIB_Cursor		hCursor_;
     int				nCaptured_;			// is captured
     
-    SalGraphics	   *pGraphics_;			// current frame graphics
-    SalGraphics	   *pFreeGraphics_;		// first free frame graphics
+    X11SalGraphics	*pGraphics_;			// current frame graphics
+    X11SalGraphics	*pFreeGraphics_;		// first free frame graphics
     
     XLIB_Time		nReleaseTime_;		// timestamp of last key release
     USHORT			nKeyCode_;			// last key code
@@ -183,7 +175,6 @@ class SalFrameData
     bool			mbMoved;
     bool			mbSized;
     Rectangle		maPaintRegion;
-    bool			mbWasGraphicsPaint;
 
     Timer			maAlwaysOnTopRaiseTimer;
     
@@ -206,8 +197,6 @@ class SalFrameData
     SalFrameDelData *mpDeleteData;
     void            NotifyDeleteData ();
     
-    SalGraphics	   *GetGraphics();
-    
     void			GetPosSize( Rectangle &rPosSize );
     void			SetSize   ( const Size      &rSize );
     void            Center();
@@ -231,45 +220,35 @@ class SalFrameData
     long			HandleReparentEvent	( XReparentEvent	*pEvent );
     long			HandleClientMessage	( XClientMessageEvent*pEvent );
     
-	inline	void			CaptureMouse( BOOL bCapture );
-	inline	void			SetPointer( PointerStyle ePointerStyle );
-
-	inline		            SalFrameData( SalFrame *pFrame );
-	inline			        ~SalFrameData();
-
     DECL_LINK( HandleResizeTimer, void* );
     DECL_LINK( HandleAlwaysOnTopRaise, void* );
 
     void			passOnSaveYourSelf();
 public:
+	X11SalFrame( SalFrame* pParent, ULONG nSalFrameStyle, SystemParentData* pSystemParent = NULL );
+	virtual ~X11SalFrame();
+
     long			Dispatch( XEvent *pEvent );
     void			Init( ULONG nSalFrameStyle, SystemParentData* pParentData = NULL );
-    bool			SetPluginParent( SystemParentData* pNewParent );
 
-    SalDisplay     *GetDisplay() const { return pDisplay_; }
-	inline	Display		   *GetXDisplay() const;
-	inline	XLIB_Window		GetDrawable() const;
-    inline  XLIB_Window    GetWindow() const { return mhWindow; }
-    inline  XLIB_Window    GetShellWindow() const { return mhShellWindow; }
-	inline	XLIB_Window		GetForeignParent() const { return mhForeignParent; }
-	inline	XLIB_Window		GetStackingWindow() const { return mhStackingWindow; }
-	inline	long			ShutDown() const
-				{ return pProc_( pInst_, pFrame_, SALEVENT_SHUTDOWN, 0 ); }
-	inline	long			Close() const
-				{ return pProc_( pInst_, pFrame_, SALEVENT_CLOSE, 0 ); }
-	inline	long			Call( USHORT nEvent, const void *pEvent ) const
-				{ return pProc_( pInst_, pFrame_, nEvent, pEvent ); }
-	inline	SalFrame	   *GetNextFrame() const { return pNextFrame_; }
+    SalDisplay*				GetDisplay() const { return pDisplay_; }
+	Display*				GetXDisplay() const;
+	XLIB_Window				GetDrawable() const;
+    XLIB_Window				GetWindow() const { return mhWindow; }
+    XLIB_Window				GetShellWindow() const { return mhShellWindow; }
+	XLIB_Window				GetForeignParent() const { return mhForeignParent; }
+	XLIB_Window				GetStackingWindow() const { return mhStackingWindow; }
+	long					ShutDown() const { return CallCallback( SALEVENT_SHUTDOWN, 0 ); }
+	long					Close() const { return CallCallback( SALEVENT_CLOSE, 0 ); }
           	ULONG           GetStyle() const { return nStyle_; }
 	
 	inline	XLIB_Cursor		GetCursor() const { return hCursor_; }
 	inline	BOOL			IsCaptured() const { return nCaptured_ == 1; }
-	#if !defined(__synchronous_extinput__)
-			void 			HandleExtTextEvent (XClientMessageEvent *pEvent);
-			void			PostExtTextEvent (sal_uInt16 nExtTextEventType, 
-								void *pExtTextEvent);
-	#endif
-	inline	SalColormap	   &GetColormap() const;
+#if !defined(__synchronous_extinput__)
+    void 			HandleExtTextEvent (XClientMessageEvent *pEvent);
+    void			PostExtTextEvent (sal_uInt16 nExtTextEventType, 
+                                      void *pExtTextEvent);
+#endif
     bool					IsOverrideRedirect() const;
     bool					IsFloatGrabWindow() const;
     SalI18N_InputContext* getInputContext() const { return mpInputContext; }
@@ -278,25 +257,58 @@ public:
     bool					isMapped() const { return bMapped_; }
     void            RegisterDeleteData (SalFrameDelData *pData);
     void            UnregisterDeleteData (SalFrameDelData *pData);
+    
+    virtual SalGraphics*		GetGraphics();
+    virtual void				ReleaseGraphics( SalGraphics* pGraphics );
 
-    static void SaveYourselfDone( SalFrame* );
+    virtual BOOL				PostEvent( void* pData );
 
-    void			YieldGraphicsExpose();
+    virtual void				SetTitle( const XubString& rTitle );
+    virtual void				SetIcon( USHORT nIcon );
+    virtual void				SetMenu( SalMenu* pMenu );
+    virtual void                                DrawMenuBar();
+
+    virtual void				Show( BOOL bVisible, BOOL bNoActivate = FALSE );
+    virtual void				Enable( BOOL bEnable );
+    virtual void              SetMinClientSize( long nWidth, long nHeight );
+    virtual void				SetPosSize( long nX, long nY, long nWidth, long nHeight, USHORT nFlags );
+    virtual void				GetClientSize( long& rWidth, long& rHeight );
+    virtual void				GetWorkArea( Rectangle& rRect );
+    virtual SalFrame*			GetParent() const;
+    virtual void				SetWindowState( const SalFrameState* pState );
+    virtual BOOL				GetWindowState( SalFrameState* pState );
+    virtual void				ShowFullScreen( BOOL bFullScreen );
+    virtual void				StartPresentation( BOOL bStart );
+    virtual void				SetAlwaysOnTop( BOOL bOnTop );
+    virtual void				ToTop( USHORT nFlags );
+    virtual void				SetPointer( PointerStyle ePointerStyle );
+    virtual void				CaptureMouse( BOOL bMouse );
+    virtual void				SetPointerPos( long nX, long nY );
+    virtual void				Flush();
+    virtual void				Sync();
+    virtual void				SetInputContext( SalInputContext* pContext );
+    virtual void				EndExtTextInput( USHORT nFlags );
+    virtual String				GetKeyName( USHORT nKeyCode );
+    virtual String				GetSymbolKeyName( const XubString& rFontName, USHORT nKeyCode );
+    virtual LanguageType		GetInputLanguage();
+    virtual SalBitmap*			SnapShot();
+    virtual void				UpdateSettings( AllSettings& rSettings );
+    virtual void				Beep( SoundType eSoundType );
+    virtual const SystemEnvData*	GetSystemData() const;
+    virtual ULONG				GetCurrentModButtons();
+    virtual void				SetParent( SalFrame* pNewParent );
+    virtual bool				SetPluginParent( SystemParentData* pNewParent );
+
+    static void SaveYourselfDone( SalFrame* );
 };
 
 #ifdef _SV_SALDISP_HXX
 
-inline void SalFrameData::CaptureMouse( BOOL bCapture )
-{ nCaptured_ = pDisplay_->CaptureMouse( bCapture ? this : NULL ); }
-
-inline Display *SalFrameData::GetXDisplay() const
+inline Display *X11SalFrame::GetXDisplay() const
 { return pDisplay_->GetDisplay(); }
 
-inline XLIB_Window SalFrameData::GetDrawable() const
+inline XLIB_Window X11SalFrame::GetDrawable() const
 { return GetWindow(); }
-
-inline	SalColormap	&SalFrameData::GetColormap() const
-{ return pDisplay_->GetColormap(); }
 
 #endif
 
Index: vcl/unx/inc/salgdi.h
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/salgdi.h,v
retrieving revision 1.22.136.1
retrieving revision 1.28
diff -u -p -u -r1.22.136.1 -r1.28
--- vcl/unx/inc/salgdi.h	9 Jan 2004 18:13:58 -0000	1.22.136.1
+++ vcl/unx/inc/salgdi.h	17 Jun 2004 12:26:27 -0000	1.28
@@ -72,6 +72,9 @@ class   SalGraphicsData;
 #ifndef _SALSTD_HXX
 #include <salstd.hxx>
 #endif
+#ifndef _SV_SALGDI_HXX
+#include <salgdi.hxx>
+#endif
 #ifndef _SV_SALGTYPE_HXX
 #include <salgtype.hxx>
 #endif
@@ -88,49 +91,34 @@ class   SalBitmap;
 class   SalColormap;
 class   SalDisplay;
 class   SalFrame;
-class   SalVirtualDevice;
+class   X11SalVirtualDevice;
 class   SalPolyLine;
-class   SalPrinter;
-class   SalInfoPrinter;
+class   PspSalPrinter;
+class   PspSalInfoPrinter;
 class   ServerFont;
 class   ImplLayoutArgs;
 class   X11FontLayout;
 class   ServerFontLayout;
 
-#ifndef _USE_PRINT_EXTENSION_
-namespace psp { struct JobData; class PrinterGfx; }
-#endif
-
-#ifndef _SV_SALDISP_HXX
-typedef SalColormap         *SalColormapRef;
-#endif
-
 // -=-= SalGraphicsData =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 
-class SalGraphicsData
+class X11SalGraphics : public SalGraphics
 {
-    friend class            SalGraphics;
-    friend class            SalPrinter;
-    friend class            SalInfoPrinter;
     friend class            X11FontLayout;
     friend class            ServerFontLayout;
-
-    STDAPI( SalGraphicsData );
+protected:
     SalFrame*				m_pFrame; // the SalFrame which created this Graphics or NULL
-    SalVirtualDevice*		m_pVDev;  // the SalVirtualDevice which created this Graphics or NULL
-
-#ifndef _USE_PRINT_EXTENSION_
-    ::psp::JobData*         m_pJobData;
-    ::psp::PrinterGfx*      m_pPrinterGfx;
-    String*                 m_pPhoneNr;
-    bool                    m_bSwallowFaxNo;
-#endif
+    X11SalVirtualDevice*	m_pVDev;  // the SalVirtualDevice which created this Graphics or NULL
 
-    SalColormapRef  xColormap_;
+    SalColormap    *m_pColormap;
+    SalColormap    *m_pDeleteColormap;
     Drawable        hDrawable_;     // use
     
     XLIB_Region     pPaintRegion_;
     XLIB_Region     pClipRegion_;
+
+    int             numClipRects_;
+    Rectangle       boundingClipRect_;
     
     GC              pPenGC_;        // Pen attributes
     SalColor        nPenColor_;
@@ -142,7 +130,6 @@ class SalGraphicsData
 
     SalColor        nTextColor_;
     Pixel           nTextPixel_;
-    short           nFontOrientation_;
     BOOL            bFontVertical_;
     
     GC              pBrushGC_;      // Brush attributes
@@ -176,24 +163,17 @@ class SalGraphicsData
     void			SetClipRegion( GC          pGC,
                                    XLIB_Region pXReg = NULL ) const;
     
-#if defined(_SV_SALGDI_CXX) || defined (_SV_SALGDI2_CXX)
     GC				GetTrackingGC();
     GC				GetInvertGC();
     GC				GetInvert50GC();
     GC				CreateGC( Drawable      hDrawable,
                               unsigned long nMask = GCGraphicsExposures );
-#endif
-
-#if defined _SV_SALGDI_CXX
     GC				SelectPen();
     GC				SelectBrush();
     void			DrawLines( ULONG              nPoints,
                                const SalPolyLine &rPoints,
                                GC				  pGC );
     BOOL			GetDitherPixmap ( SalColor nSalColor );	
-#endif
-
-#if defined _SV_SALGDI2_CXX
 
     inline	GC				GetMonoGC( Pixmap hPixmap );
     inline	GC				GetCopyGC();
@@ -224,103 +204,161 @@ class SalGraphicsData
                                 const SalBitmap  &rSalBitmap,
                                 const SalBitmap  &rTransparentBitmap,
                                 SalColor          nTransparentColor );
-#endif
 
     GC                      SelectFont();
-    bool                    SetFont( const ImplFontSelectData* pEntry, int nFallbackLevel );
+    bool                    setFont( const ImplFontSelectData* pEntry, int nFallbackLevel );
 
 protected:
-    ULONG                   GetFontCodeRanges( sal_uInt32* pCodePairs ) const;
-
     void                    DrawStringUCS2MB( ExtendedFontStruct& rFont, const Point&,
                                 const sal_Unicode* pStr, int nLength );
 
     void                    DrawPrinterString( const SalLayout& );
 
     void                    DrawServerFontString( const ServerFontLayout& );
-    void                    DispatchServerFontString( const ServerFontLayout& );
     void                    DrawServerSimpleFontString( const ServerFontLayout& );
     void                    DrawServerAAFontString( const ServerFontLayout& );
     bool                    DrawServerAAForcedString( const ServerFontLayout& );
-
-    SalLayout*              GetTextLayout( ImplLayoutArgs&, int nFallbackLevel );
 public:
-                            SalGraphicsData();
-                            ~SalGraphicsData();
+                            X11SalGraphics();
+    virtual				~X11SalGraphics();
 
-            void            Init( SalFrame *pFrame );
-            void            Init( SalVirtualDevice *pVirtualDevice,
-                                SalGraphics *pSalGraphics );
+            void            Init( SalFrame *pFrame, Drawable aDrawable );
+            void            Init( X11SalVirtualDevice *pVirtualDevice );
             void            Init( class ImplSalPrinterData *pPrinter );
             void            DeInit();
 
     inline  SalDisplay     *GetDisplay() const;
     inline  Display        *GetXDisplay() const;
+    inline  SalVisual		*GetVisual() const;
     inline  Drawable        GetDrawable() const { return hDrawable_; }
     inline  void            SetDrawable( Drawable d ) { hDrawable_ = d; }
-    inline  SalColormap    &GetColormap() const { return *xColormap_; }
-    inline  BOOL            IsCompatible( USHORT nDepth,
-                                          SalColormap *pMap ) const;
+    inline  SalColormap    &GetColormap() const { return *m_pColormap; }
     inline  Pixel           GetPixel( SalColor nSalColor ) const;
 
-            String            FaxPhoneComment( const String& rOrig, xub_StrLen nIndex, xub_StrLen& rLen, xub_StrLen& rCutStart, xub_StrLen& rCutStop ) const;
+    inline  int            GetNumCliprects() const { return numClipRects_; }
+    inline  const Rectangle& GetBoundingCliprect() const { return boundingClipRect_; }
+    
+        
+    // overload all pure virtual methods
+    virtual void			GetResolution( sal_Int32& rDPIX, sal_Int32& rDPIY );
+    virtual void			GetScreenFontResolution( sal_Int32& rDPIX, sal_Int32& rDPIY );
+    virtual USHORT			GetBitCount();
+    virtual long			GetGraphicsWidth();
+
+    virtual void			ResetClipRegion();
+    virtual void			BeginSetClipRegion( ULONG nCount );
+    virtual BOOL			unionClipRegion( long nX, long nY, long nWidth, long nHeight );
+    virtual void			EndSetClipRegion();
+
+    virtual void			SetLineColor();
+    virtual void			SetLineColor( SalColor nSalColor );
+    virtual void			SetFillColor();
+
+    virtual void          	SetFillColor( SalColor nSalColor );
+
+    virtual void			SetXORMode( BOOL bSet );
+
+    virtual void			SetROPLineColor( SalROPColor nROPColor );
+    virtual void			SetROPFillColor( SalROPColor nROPColor );
+
+    virtual void			SetTextColor( SalColor nSalColor );
+    virtual USHORT         SetFont( ImplFontSelectData*, int nFallbackLevel );
+    virtual void			GetFontMetric( ImplFontMetricData* );
+    virtual ULONG			GetKernPairs( ULONG nPairs, ImplKernPairData* pKernPairs );
+    virtual ULONG			GetFontCodeRanges( sal_uInt32* pCodePairs ) const;
+    virtual void			GetDevFontList( ImplDevFontList* );
+    virtual void			GetDevFontSubstList( OutputDevice* );
+    virtual ImplFontData*	AddTempDevFont( const String& rFileURL, const String& rFontName );
+    virtual BOOL			CreateFontSubset( const rtl::OUString& rToFile,
+                                              ImplFontData* pFont,
+                                              sal_Int32* pGlyphIDs,
+                                              sal_uInt8* pEncoding,
+                                              sal_Int32* pWidths,
+                                              int nGlyphs,
+                                              FontSubsetInfo& rInfo
+                                              );
+    virtual const std::map< sal_Unicode, sal_Int32 >* GetFontEncodingVector( ImplFontData* pFont, const std::map< sal_Unicode, rtl::OString >** ppNonEncoded );
+    virtual const void*	GetEmbedFontData( ImplFontData* pFont,
+                                          const sal_Unicode* pUnicodes,
+                                          sal_Int32* pWidths,
+                                          FontSubsetInfo& rInfo,
+                                          long* pDataLen );
+    virtual void			FreeEmbedFontData( const void* pData, long nDataLen );
+    virtual BOOL			GetGlyphBoundRect( long nIndex, Rectangle& );
+    virtual BOOL			GetGlyphOutline( long nIndex, PolyPolygon& );
+    virtual SalLayout*		GetTextLayout( ImplLayoutArgs&, int nFallbackLevel );
+    virtual void			DrawServerFontLayout( const ServerFontLayout& );
+    virtual void			drawPixel( long nX, long nY );
+    virtual void			drawPixel( long nX, long nY, SalColor nSalColor );
+    virtual void			drawLine( long nX1, long nY1, long nX2, long nY2 );
+    virtual void			drawRect( long nX, long nY, long nWidth, long nHeight );
+    virtual void			drawPolyLine( ULONG nPoints, const SalPoint* pPtAry );
+    virtual void			drawPolygon( ULONG nPoints, const SalPoint* pPtAry );
+    virtual void			drawPolyPolygon( ULONG nPoly,
+                                             const ULONG* pPoints,
+                                             PCONSTSALPOINT* pPtAry );
+    virtual sal_Bool		drawPolyLineBezier( ULONG nPoints,
+                                                const SalPoint* pPtAry,
+                                                const BYTE* pFlgAry );
+    virtual sal_Bool		drawPolygonBezier( ULONG nPoints,
+                                               const SalPoint* pPtAry,
+                                               const BYTE* pFlgAry );
+    virtual sal_Bool		drawPolyPolygonBezier( ULONG nPoly,
+                                                   const ULONG* pPoints,
+                                                   const SalPoint* const* pPtAry,
+                                                   const BYTE* const* pFlgAry );
+    virtual void			copyArea( long nDestX,
+                                      long nDestY,
+                                      long nSrcX,
+                                      long nSrcY,
+                                      long nSrcWidth,
+                                      long nSrcHeight,
+                                      USHORT nFlags );
+    virtual void			copyBits( const SalTwoRect* pPosAry,
+                                      SalGraphics* pSrcGraphics );
+    virtual void			drawBitmap( const SalTwoRect* pPosAry,
+                                        const SalBitmap& rSalBitmap );
+    virtual void			drawBitmap( const SalTwoRect* pPosAry,
+                                        const SalBitmap& rSalBitmap,
+                                        SalColor nTransparentColor );
+    virtual void			drawBitmap( const SalTwoRect* pPosAry,
+                                        const SalBitmap& rSalBitmap,
+                                        const SalBitmap& rTransparentBitmap );
+    virtual void			drawMask( const SalTwoRect* pPosAry,
+                                      const SalBitmap& rSalBitmap,
+                                      SalColor nMaskColor );
+    virtual SalBitmap*		getBitmap( long nX, long nY, long nWidth, long nHeight );
+    virtual SalColor		getPixel( long nX, long nY );
+    virtual void			invert( long nX, long nY, long nWidth, long nHeight, SalInvert nFlags );
+    virtual void			invert( ULONG nPoints, const SalPoint* pPtAry, SalInvert nFlags );
+
+    virtual BOOL			drawEPS( long nX, long nY, long nWidth, long nHeight, void* pPtr, ULONG nSize );
+
+    /*  use to handle GraphicsExpose/NoExpose after XCopyArea & friends
+     *  if pFrame is not NULL, corresponding Paint events are generated
+     *  and dispatched to pFrame
+     *
+     *  it is imperative to eat up graphics exposes even in case you don't need
+     *  them because the next one using XCopyArea can depend on them
+     */
+    static void YieldGraphicsExpose( Display* pDisplay, SalFrame* pFrame, Drawable aDrawable );
 };
 
 
-#ifdef _SV_SALDATA_HXX
-
-inline SalDisplay *SalGraphicsData::GetDisplay() const
+inline SalDisplay *X11SalGraphics::GetDisplay() const
 { return GetColormap().GetDisplay(); }
 
-inline Display *SalGraphicsData::GetXDisplay() const
-{ return GetColormap().GetXDisplay(); }
+inline SalVisual *X11SalGraphics::GetVisual() const
+{ return GetColormap().GetDisplay()->GetVisual(); }
 
-inline BOOL SalGraphicsData::IsCompatible( USHORT       nDepth,
-                                           SalColormap *pMap ) const
-{
-    return (GetDisplay()->GetImageDepths() & (1 << (nDepth-1))) != 0
-            && &xColormap_ == pMap;
-}
+inline Display *X11SalGraphics::GetXDisplay() const
+{ return GetColormap().GetXDisplay(); }
 
-inline Pixel SalGraphicsData::GetPixel( SalColor nSalColor ) const
+inline Pixel X11SalGraphics::GetPixel( SalColor nSalColor ) const
 { return GetColormap().GetPixel( nSalColor ); }
 
-#endif
 
 // -=-= Shortcuts =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-#if defined _SV_SALGDI_CXX || defined _SV_SALGDI2_CXX || defined _SV_SALGDI3_CXX
-#define _GetXDisplay()		maGraphicsData.GetXDisplay()
-#define _GetDisplay()		maGraphicsData.GetDisplay()
-#define _GetVisual()		maGraphicsData.GetDisplay()->GetVisual()
-#define _GetDrawable()		maGraphicsData.hDrawable_
-#define _GetColormap()		maGraphicsData.GetColormap()
-#define _GetClipRegion()	maGraphicsData.pClipRegion_
-#define	_GetPenPixel()		maGraphicsData.nPenPixel_
-#define	_GetTextPixel()		maGraphicsData.nTextPixel_
-#define	_GetBrushPixel()	maGraphicsData.nBrushPixel_
-#define	_GetPenColor()		maGraphicsData.nPenColor_
-#define	_GetTextColor()		maGraphicsData.nTextColor_
-#define	_GetBrushColor()	maGraphicsData.nBrushColor_
-#define _GetPixel(n)		maGraphicsData.GetPixel( n )
-#define _GetColor(n)		maGraphicsData.GetColormap().GetColor( n )
-#define	_IsPenGC()			maGraphicsData.bPenGC_
-#define	_IsFontGC()			maGraphicsData.bFontGC_
-#define	_IsBrushGC()		maGraphicsData.bBrushGC_
-#define	_IsMonoGC()			maGraphicsData.bMonoGC_
-#define	_IsCopyGC()			maGraphicsData.bCopyGC_
-#define	_IsInvertGC()		maGraphicsData.bInvertGC_
-#define	_IsInvert50GC()		maGraphicsData.bInvert50GC_
-#define	_IsStippleGC()		maGraphicsData.bStippleGC_
-#define	_IsTrackingGC()		maGraphicsData.bTrackingGC_
-#define _IsXORMode()		maGraphicsData.bXORMode_
-#define _IsWindow()			maGraphicsData.bWindow_
-#define _IsPrinter()		maGraphicsData.bPrinter_
-#define _IsVirtualDevice()	maGraphicsData.bVirDev_
-#define _IsDitherBrush()	maGraphicsData.bDitherBrush_
-#define _SelectPen()		maGraphicsData.SelectPen()
-#define _SelectBrush()		maGraphicsData.SelectBrush()
-#define _GetTrackingGC()	maGraphicsData.GetTrackingGC()
-#endif
 
 #ifdef DBG_UTIL
 #define stderr0( s )			fprintf( stderr, s )
Index: vcl/unx/inc/salinst.h
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/salinst.h,v
retrieving revision 1.3
retrieving revision 1.8
diff -u -p -u -r1.3 -r1.8
--- vcl/unx/inc/salinst.h	14 Jun 2001 13:31:23 -0000	1.3
+++ vcl/unx/inc/salinst.h	18 May 2004 10:56:33 -0000	1.8
@@ -82,9 +72,13 @@
 #ifndef _VOS_THREAD_HXX
 #include <vos/thread.hxx>
 #endif
+#ifndef _SV_SALINST_HXX
+#include <salinst.hxx>
+#endif
 
 class SalYieldMutex : public NAMESPACE_VOS(OMutex)
 {
+protected:
 	ULONG										mnCount;
 	NAMESPACE_VOS(OThread)::TThreadIdentifier	mnThreadId;
 
@@ -100,20 +94,68 @@ public:
 };
 
 // -=-= SalInstanceData =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-class SalInstanceData
+class X11SalInstance : public SalInstance
 {
-	friend class SalInstance;
-
-public:
-
-	void*							mpFilterInst;
-	void*							mpFilterCallback;
+protected:
 	SalYieldMutex*					mpSalYieldMutex;
-	bool(*mpEventCallback)(void*,void*,int);
-	void*							mpEventInst;
-	bool(*mpErrorEventCallback)(void*,void*,int);
-	void*							mpErrorEventInst;
     bool							mbPrinterInit;
+
+public:
+    X11SalInstance( SalYieldMutex* pMutex ) 
+            : mpSalYieldMutex( pMutex ),
+              mbPrinterInit( false )
+    {}
+    virtual ~X11SalInstance();
+
+    virtual SalFrame*      	CreateChildFrame( SystemParentData* pParent, ULONG nStyle );
+    virtual SalFrame*      	CreateFrame( SalFrame* pParent, ULONG nStyle );
+    virtual void				DestroyFrame( SalFrame* pFrame );
+
+    virtual SalObject*			CreateObject( SalFrame* pParent );
+    virtual void				DestroyObject( SalObject* pObject );
+
+    virtual SalVirtualDevice*	CreateVirtualDevice( SalGraphics* pGraphics,
+                                                     long nDX, long nDY,
+                                                     USHORT nBitCount );
+    virtual void				DestroyVirtualDevice( SalVirtualDevice* pDevice );
+
+    virtual SalInfoPrinter*	CreateInfoPrinter( SalPrinterQueueInfo* pQueueInfo,
+                                               ImplJobSetup* pSetupData );
+    virtual void				DestroyInfoPrinter( SalInfoPrinter* pPrinter );
+    virtual SalPrinter*		CreatePrinter( SalInfoPrinter* pInfoPrinter );
+    virtual void				DestroyPrinter( SalPrinter* pPrinter );
+
+    virtual void				GetPrinterQueueInfo( ImplPrnQueueList* pList );
+    virtual void				GetPrinterQueueState( SalPrinterQueueInfo* pInfo );
+    virtual void				DeletePrinterQueueInfo( SalPrinterQueueInfo* pInfo );
+    virtual String             GetDefaultPrinter();
+
+    virtual SalSound*			CreateSalSound();
+    virtual SalTimer*			CreateSalTimer();
+    virtual SalOpenGL*			CreateSalOpenGL( SalGraphics* pGraphics );
+    virtual SalI18NImeStatus*	CreateI18NImeStatus();
+    virtual SalSystem*			CreateSalSystem();
+    virtual SalBitmap*			CreateSalBitmap();
+    virtual SalSession*			CreateSalSession();
+
+    virtual vos::IMutex*		GetYieldMutex();
+    virtual ULONG				ReleaseYieldMutex();
+    virtual void				AcquireYieldMutex( ULONG nCount );
+
+    virtual void				Yield( BOOL bWait );
+    virtual bool				AnyInput( USHORT nType );
+    virtual SalMenu*        CreateMenu( BOOL bMenuBar );
+    virtual void            DestroyMenu( SalMenu* pMenu);
+    virtual SalMenuItem*    CreateMenuItem( const SalItemParams* pItemData );
+    virtual void            DestroyMenuItem( SalMenuItem* pItem );
+
+    virtual void*				GetConnectionIdentifier( ConnectionIdentifierType& rReturnedType, int& rReturnedBytes );
+
+
+    bool isPrinterInit() const 
+    {
+        return mbPrinterInit;
+    }
 };
 
 #endif // _SV_SALINST_H
Index: vcl/unx/inc/salmenu.h
===================================================================
RCS file: vcl/unx/inc/salmenu.h
diff -N vcl/unx/inc/salmenu.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ vcl/unx/inc/salmenu.h	20 Nov 2003 13:03:09 -0000	1.3
@@ -0,0 +1,106 @@
+/*************************************************************************
+ *
+ *  
+ *
+ *  
+ *
+ *  
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+#ifndef _SV_SALMENU_H
+#define _SV_SALMENU_H
+
+#ifndef _SV_SV_H
+#include <sv.h>
+#endif
+#ifndef _SV_BITMAP_HXX
+#include <bitmap.hxx>
+#endif
+
+#ifndef _SV_SALMENU_HXX
+#include <salmenu.hxx>
+#endif
+
+
+class X11SalMenu : public SalMenu
+{
+public:
+	X11SalMenu() {}
+	virtual ~X11SalMenu();
+
+    virtual BOOL VisibleMenuBar();  // must return TRUE to actually DISPLAY native menu bars
+                            // otherwise only menu messages are processed (eg, OLE on Windows)
+
+    virtual void InsertItem( SalMenuItem* pSalMenuItem, unsigned nPos );
+    virtual void RemoveItem( unsigned nPos );
+    virtual void SetSubMenu( SalMenuItem* pSalMenuItem, SalMenu* pSubMenu, unsigned nPos );
+    virtual void SetFrame( const SalFrame* pFrame );
+    virtual void CheckItem( unsigned nPos, BOOL bCheck );
+    virtual void EnableItem( unsigned nPos, BOOL bEnable );
+    virtual void SetItemText( unsigned nPos, SalMenuItem* pSalMenuItem, const XubString& rText );
+    virtual void SetItemImage( unsigned nPos, SalMenuItem* pSalMenuItem, const Image& rImage);
+    virtual void SetAccelerator( unsigned nPos, SalMenuItem* pSalMenuItem, const KeyCode& rKeyCode, const XubString& rKeyName );
+    virtual void GetSystemMenuData( SystemMenuData* pData );
+};
+
+class X11SalMenuItem : public SalMenuItem
+{
+public:
+	X11SalMenuItem() {}
+        virtual ~X11SalMenuItem();
+};
+
+#endif // _SV_SALMENU_H
+
Index: vcl/unx/inc/salobj.h
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/salobj.h,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -p -u -r1.2 -r1.3
--- vcl/unx/inc/salobj.h	24 Oct 2001 16:32:21 -0000	1.2
+++ vcl/unx/inc/salobj.h	18 Nov 2003 14:38:20 -0000	1.3
@@ -71,15 +71,13 @@
 #ifndef _LIST_HXX
 #include <tools/list.hxx>
 #endif
+#ifndef _SV_SALOBJ_HXX
+#include <salobj.hxx>
+#endif
 
+class X11SalObject;
 
-// -----------------
-// - SalObjectData -
-// -----------------
-
-class SalObject;
-
-DECLARE_LIST( SalObjectList, SalObject* );
+DECLARE_LIST( SalObjectList, X11SalObject* );
 
 class SalClipRegion
 {
@@ -112,12 +110,9 @@ private:
 };
 
 
-class SalObjectData
+class X11SalObject : public SalObject
 {
-	friend class SalObject;
-	friend class SalDisplay;
-	friend class SalInstance;
-
+public:
 	static SalObjectList aAllObjects;
 
 	SystemChildData maSystemChildData;
@@ -130,6 +125,27 @@ class SalObjectData
 	BOOL			mbVisible;
 
 	static long Dispatch( XEvent* pEvent );
+
+    X11SalObject();
+    virtual ~X11SalObject();
+
+    // overload all pure virtual methods
+ 	virtual void					ResetClipRegion();
+	virtual USHORT					GetClipRegionType();
+	virtual void					BeginSetClipRegion( ULONG nRects );
+	virtual void					UnionClipRegion( long nX, long nY, long nWidth, long nHeight );
+	virtual void					EndSetClipRegion();
+
+	virtual void					SetPosSize( long nX, long nY, long nWidth, long nHeight );
+	virtual void					Show( BOOL bVisible );
+	virtual void					Enable( BOOL nEnable );
+	virtual void					GrabFocus();
+
+	virtual void					SetBackground();
+	virtual void					SetBackground( SalColor nSalColor );
+
+	virtual const SystemEnvData*	GetSystemData() const;
+   
 };
 
 #endif // _SV_SALOBJ_H
Index: vcl/unx/inc/salogl.h
===================================================================
RCS file: vcl/unx/inc/salogl.h
diff -N vcl/unx/inc/salogl.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ vcl/unx/inc/salogl.h	18 Nov 2003 14:38:28 -0000	1.2
@@ -0,0 +1,138 @@
+/*************************************************************************
+ *
+ *  
+ *
+ *  
+ *
+ *  
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+#ifndef _SV_SALOGL_H
+#define _SV_SALOGL_H
+
+#if defined EXPLICITLY_INCLUDE_GLX_H
+#include <prex.h>
+#define GL_H
+#include <GL/glx.h>
+#include <postx.h>
+#else
+typedef void* GLXContext;
+typedef XID   GLXDrawable;
+// needed GLX_ constants
+#define GLX_USE_GL			1
+#define GLX_DOUBLEBUFFER	5
+#endif
+
+#ifndef _SV_SALOGL_HXX
+#include <salogl.hxx>
+#endif
+
+#ifndef _OSL_MODULE_H
+#include <osl/module.h>
+#endif
+
+// -------------
+// - SalOpenGL -
+// -------------
+
+class SalGraphics;
+
+class X11SalOpenGL : public SalOpenGL
+{
+private:
+	static oslModule		mpGLLib;
+	static GLXContext		maGLXContext;
+	static ULONG			mnOGLState;
+	static Display*		mpDisplay;
+	static XVisualInfo*	mpVisualInfo;
+	static BOOL			mbHaveGLVisual;
+
+	static BOOL			ImplInit();
+	static void			ImplFreeLib();
+
+	static GLXContext (*pCreateContext)( Display *, XVisualInfo *, GLXContext, Bool );
+	static void       (*pDestroyContext)( Display *, GLXContext );
+	static GLXContext (*pGetCurrentContext)( );
+	static Bool       (*pMakeCurrent)( Display *, GLXDrawable, GLXContext );
+	static void		(*pSwapBuffers)( Display*, GLXDrawable );
+	static int		(*pGetConfig)( Display*, XVisualInfo*, int, int* );
+	static void		(*pFlush)();
+
+	Drawable            maDrawable;
+
+	static void* resolveSymbol( const char* pSym );
+public:					
+						
+    X11SalOpenGL( SalGraphics* pGraphics );
+    ~X11SalOpenGL();
+						
+	static void		Release();
+	static void		MakeVisualWeights(
+                                      Display *pDisplay,
+                                      XVisualInfo* pInfos,
+                                      int* pWeights,
+                                      int nVisuals
+                                      );
+						
+    // overload all pure virtual methods
+	virtual bool		IsValid();
+	virtual void*		GetOGLFnc( const char * );
+	virtual void		OGLEntry( SalGraphics* pGraphics );
+	virtual void		OGLExit( SalGraphics* pGraphics );
+    virtual void		StartScene( SalGraphics* pGraphics );
+	virtual void		StopScene();
+};
+
+#endif // _SV_SALOGL_H
Index: vcl/unx/inc/salprn.h
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/salprn.h,v
retrieving revision 1.9
retrieving revision 1.11
diff -u -p -u -r1.9 -r1.11
--- vcl/unx/inc/salprn.h	13 Nov 2002 20:24:03 -0000	1.9
+++ vcl/unx/inc/salprn.h	20 Feb 2004 08:56:54 -0000	1.11
@@ -62,8 +62,6 @@
 #ifndef _SV_SALPRN_H
 #define _SV_SALPRN_H
 
-#ifndef _USE_PRINT_EXTENSION_
-
 #ifndef _PSPRINT_JOBDATA_HXX_
 #include <psprint/jobdata.hxx>
 #endif
@@ -73,29 +71,68 @@
 #ifndef _PSPRINT_PRINTERJOB_HXX_
 #include <psprint/printerjob.hxx>
 #endif
+#ifndef _SV_SALPRN_HXX
+#include <salprn.hxx>
+#endif
 
-class SalGraphics;
+class PspGraphics;
 
-struct SalInfoPrinterData
+class PspSalInfoPrinter : public SalInfoPrinter
 {
-	SalGraphics*			m_pGraphics;
-	::psp::JobData			m_aJobData;
-	::psp::PrinterGfx		m_aPrinterGfx;
+public:
+	PspGraphics*			m_pGraphics;
+	psp::JobData			m_aJobData;
+	psp::PrinterGfx			m_aPrinterGfx;
+
+    PspSalInfoPrinter();
+    virtual ~PspSalInfoPrinter();
+
+    // overload all pure virtual methods
+	virtual SalGraphics*			GetGraphics();
+	virtual void					ReleaseGraphics( SalGraphics* pGraphics );
+    virtual BOOL					Setup( SalFrame* pFrame, ImplJobSetup* pSetupData );
+	virtual BOOL					SetPrinterData( ImplJobSetup* pSetupData );
+	virtual BOOL					SetData( ULONG nFlags, ImplJobSetup* pSetupData );
+	virtual void					GetPageInfo( const ImplJobSetup* pSetupData,
+                                                 long& rOutWidth, long& rOutHeight,
+                                                 long& rPageOffX, long& rPageOffY,
+                                                 long& rPageWidth, long& rPageHeight );
+	virtual ULONG					GetCapabilities( const ImplJobSetup* pSetupData, USHORT nType );
+	virtual ULONG					GetPaperBinCount( const ImplJobSetup* pSetupData );
+	virtual String					GetPaperBinName( const ImplJobSetup* pSetupData, ULONG nPaperBin );
+    virtual void					InitPaperFormats( const ImplJobSetup* pSetupData );
+    virtual int					GetLandscapeAngle( const ImplJobSetup* pSetupData );
 };
 
-struct SalPrinterData
+class PspSalPrinter : public SalPrinter
 {
+public:
 	String					m_aFileName;
 	String					m_aTmpFile;
 	String					m_aFaxNr;
 	bool					m_bFax:1;
 	bool					m_bPdf:1;
 	bool					m_bSwallowFaxNo:1;
-	SalGraphics*			m_pGraphics;
-	::psp::PrinterJob		m_aPrintJob;
-	::psp::JobData			m_aJobData;
-	::psp::PrinterGfx		m_aPrinterGfx;
+	PspGraphics*			m_pGraphics;
+	psp::PrinterJob			m_aPrintJob;
+	psp::JobData			m_aJobData;
+	psp::PrinterGfx			m_aPrinterGfx;
     ULONG					m_nCopies;
+
+    PspSalPrinter();
+    virtual ~PspSalPrinter();
+
+    // overload all pure virtual methods
+	virtual BOOL					StartJob( const XubString* pFileName,
+                                              const XubString& rJobName,
+                                              const XubString& rAppName,
+                                              ULONG nCopies, BOOL bCollate,
+                                              ImplJobSetup* pSetupData );
+	virtual BOOL					EndJob();
+	virtual BOOL					AbortJob();
+	virtual SalGraphics*			StartPage( ImplJobSetup* pSetupData, BOOL bNewJobData );
+	virtual BOOL					EndPage();
+	virtual ULONG					GetErrorCode();
 };
 
 class Timer;
@@ -114,74 +151,6 @@ public:
     static void jobEnded();
 };
 }
-
-#else
-
-#ifndef _SALSTD_HXX
-#include <salstd.hxx>
-#endif
-
-#ifndef _SV_PRNTYPES_HXX
-#include <prntypes.hxx>
-#endif
-
-// forward declarations
-class SalInfoPrinter;
-
-class SalPrinterQueueInfo;
-class ImplJobSetup;
-
-class ImplSalPrinterData;
-
-
-// class declarations
-
-
-class SalInfoPrinterData
-{
-  friend class SalInfoPrinter;
-  friend class SalPrinterData;
-
-  ImplSalPrinterData*	mpImplData;
- 
-  inline		SalInfoPrinterData();
-  inline		~SalInfoPrinterData();
-
-public:
-
-  inline void	Init( SalPrinterQueueInfo*	pQueueInfo,
-					  ImplJobSetup*			pJobSetup);
-};
-
-
-// -=-= SalPrinterData =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
-class SalPrinterData
-{
-	friend class SalPrinter;
-	
-	ImplSalPrinterData*	mpImplData;
-	
-	BOOL					mbJobStarted;		// is job started
-	BOOL					mbPageStarted;		// is page started
-	String					maFileName;			// print to file
-	int						mnError;			// error code
-	ImplJobSetup*			mpJobSetup;			// job setup
-	BOOL					mbAbort:1;			// is job aborted
-	BOOL					mbFirstPage:1;		// false after first startpage
-	
-	inline		SalPrinterData();
-	inline		~SalPrinterData();
-
-public:
-	inline void	Init( SalInfoPrinter*	pInfoPrinter );
-};
-
-
-// necessary to get changes in Xpdefaults
-void StartPrinterListening();
-void StopPrinterListening();
-
-#endif
 
 #endif // _SV_SALPRN_H
 
Index: vcl/unx/inc/salprn.imp
===================================================================
RCS file: vcl/unx/inc/salprn.imp
diff -N vcl/unx/inc/salprn.imp
--- vcl/unx/inc/salprn.imp	18 Sep 2000 17:05:41 -0000	1.1.1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,3 +0,0 @@
-static void xprinterPrologHandler( void*, void* );
-static void xprinterGlobalSetupHandler( void*, void* );
-static void xprinterPageSetupHandler( void*, int, void* );
Index: vcl/unx/inc/salsound.h
===================================================================
RCS file: vcl/unx/inc/salsound.h
diff -N vcl/unx/inc/salsound.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ vcl/unx/inc/salsound.h	18 Nov 2003 14:39:11 -0000	1.2
@@ -0,0 +1,114 @@
+/*************************************************************************
+ *
+ *  
+ *
+ *  
+ *
+ *  
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+#ifndef _SV_SALSOUND_H
+#define _SV_SALSOUND_H
+
+#ifndef _SV_SALSOUND_HXX
+#include <salsound.hxx>
+#endif
+
+// ------------
+// - SalSound -
+// ------------
+
+namespace vcl_sal { class VSound; }
+
+class X11SalSound : public SalSound
+{
+// public for VSound sub classes
+public:
+	// the real sound
+	vcl_sal::VSound*		m_pVSound;
+	
+	// the sound to play
+	ByteString				m_aSoundFile;
+	
+	// state data
+	bool					m_bLoop;
+	bool					m_bPlaying;
+	bool					m_bPaused;
+	
+	ULONG					m_nStartTime;
+	ULONG					m_nPlayTime;
+	
+	void changeStateStop();
+	void changeStatePause();
+	void changeStateCont();
+	void setError( ULONG );
+public:
+    X11SalSound();
+	virtual ~X11SalSound();
+	
+    // overload all pure virtual methods
+    virtual bool		IsValid();
+    virtual bool		Init( const String&	rSoundName,
+                              ULONG&		rSoundLen );
+   	virtual void		Play( ULONG nStartTime, ULONG nPlayTime, bool bLoop );
+	virtual void		Stop();
+	virtual void		Pause();
+	virtual void		Continue();
+    virtual bool		IsLoopMode() const;
+	virtual bool		IsPlaying() const;
+    virtual bool		IsPaused() const;
+};
+
+#endif // _SV_SALSOUND_HXX
Index: vcl/unx/inc/salstd.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/salstd.hxx,v
retrieving revision 1.2
retrieving revision 1.3
diff -u -p -u -r1.2 -r1.3
--- vcl/unx/inc/salstd.hxx	12 Oct 2001 09:20:59 -0000	1.2
+++ vcl/unx/inc/salstd.hxx	6 Jan 2004 14:25:49 -0000	1.3
@@ -74,14 +74,6 @@
 #endif
 #ifndef _SV_SV_H
 #include <sv.h>
-#endif
-
-// -=-= #defines -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
-#ifndef STDAPI
-#define STDAPI(Class)	int		operator != ( const Class& ) const; \
-                        int     operator == ( const Class& ) const; \
-						Class  &operator = ( const Class& ); \
-						Class( const Class& )
 #endif
 
 // -=-= X-Lib forwards -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Index: vcl/unx/inc/salsys.h
===================================================================
RCS file: vcl/unx/inc/salsys.h
diff -N vcl/unx/inc/salsys.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ vcl/unx/inc/salsys.h	20 Feb 2004 08:57:04 -0000	1.3
@@ -0,0 +1,98 @@
+/*************************************************************************
+ *
+ *  
+ *
+ *  
+ *
+ *  
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+// -=-= includes -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
+#ifndef _SV_SALSYS_H
+#define _SV_SALSYS_H
+
+#ifndef _SV_SV_H
+#include <sv.h>
+#endif
+#ifndef _VOS_MUTEX_HXX
+#include <vos/mutex.hxx>
+#endif
+#ifndef _VOS_THREAD_HXX
+#include <vos/thread.hxx>
+#endif
+#ifndef _SV_SALSYS_HXX
+#include <salsys.hxx>
+#endif
+#include <list>
+
+class X11SalSystem : public SalSystem
+{
+public:
+    X11SalSystem() {}
+    virtual ~X11SalSystem();
+    
+    // overload pure virtual methods
+    virtual bool GetSalSystemDisplayInfo( DisplayInfo& rInfo );
+    virtual int ShowNativeDialog( const String& rTitle,
+                                  const String& rMessage,
+                                  const std::list< String >& rButtons,
+                                  int nDefButton );
+    virtual int ShowNativeMessageBox( const String& rTitle,
+                                      const String& rMessage,
+                                      int nButtonCombination,
+                                      int nDefaultButton);
+};
+
+#endif // _SV_SALSYS_H
Index: vcl/unx/inc/saltimer.h
===================================================================
RCS file: vcl/unx/inc/saltimer.h
diff -N vcl/unx/inc/saltimer.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ vcl/unx/inc/saltimer.h	18 Nov 2003 14:39:32 -0000	1.2
@@ -0,0 +1,80 @@
+/*************************************************************************
+ *
+ *  
+ *
+ *  
+ *
+ *  
+ *
+ *  The Contents of this file are made available subject to the terms of
+ *  either of the following licenses
+ *
+ *         - GNU Lesser General Public License Version 2.1
+ *         - Sun Industry Standards Source License Version 1.1
+ *
+ *  Sun Microsystems Inc., October, 2000
+ *
+ *  GNU Lesser General Public License Version 2.1
+ *  =============================================
+ *  Copyright 2000 by Sun Microsystems, Inc.
+ *  901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *  This library is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU Lesser General Public
+ *  License version 2.1, as published by the Free Software Foundation.
+ *
+ *  This library is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *  Lesser General Public License for more details.
+ *
+ *  You should have received a copy of the GNU Lesser General Public
+ *  License along with this library; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *  MA  02111-1307  USA
+ *
+ *
+ *  Sun Industry Standards Source License Version 1.1
+ *  =================================================
+ *  The contents of this file are subject to the Sun Industry Standards
+ *  Source License Version 1.1 (the "License"); You may not use this file
+ *  except in compliance with the License. You may obtain a copy of the
+ *  License at http://www.openoffice.org/license.html.
+ *
+ *  Software provided under this License is provided on an "AS IS" basis,
+ *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
+ *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
+ *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
+ *  See the License for the specific provisions governing your rights and
+ *  obligations concerning the Software.
+ *
+ *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
+ *
+ *  Copyright: 2000 by Sun Microsystems, Inc.
+ *
+ *  All Rights Reserved.
+ *
+ *  Contributor(s): _______________________________________
+ *
+ *
+ ************************************************************************/
+
+#ifndef _SV_SALTIMER_H
+#define _SV_SALTIMER_H
+
+#ifndef _SV_SALTIMER_HXX
+#include <saltimer.hxx>
+#endif
+
+class X11SalTimer : public SalTimer
+{
+public:
+    X11SalTimer() {}
+    virtual ~X11SalTimer();
+
+    // overload all pure virtual methods
+	void 			Start( ULONG nMS );
+	void 			Stop();
+};
+
+#endif
Index: vcl/unx/inc/salvd.h
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/salvd.h,v
retrieving revision 1.2
retrieving revision 1.4
diff -u -p -u -r1.2 -r1.4
--- vcl/unx/inc/salvd.h	18 Jun 2002 11:26:23 -0000	1.2
+++ vcl/unx/inc/salvd.h	18 Nov 2003 14:39:44 -0000	1.4
@@ -76,36 +66,36 @@
 #ifndef _SALSTD_HXX
 #include <salstd.hxx>
 #endif
+#ifndef _SV_SALVD_HXX
+#include <salvd.hxx>
+#endif
 
 // -=-= forwards -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 class SalDisplay;
-class SalGraphics;
-class SalVirtualDevice;
+class X11SalGraphics;
 
 // -=-= SalVirDevData -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
-class SalVirDevData
+class X11SalVirtualDevice : public SalVirtualDevice
 {
-	friend	class			SalVirtualDevice;
-
-			SalDisplay	   *pDisplay_;
-			SalGraphics	   *pGraphics_;			// current frame graphics
-
-			Pixmap			hDrawable_;
-
-			int				nDX_;
-			int				nDY_;
-			USHORT			nDepth_;
-			BOOL			bGraphics_;			// is Graphics used
-
-	inline					SalVirDevData();
-	inline					~SalVirDevData();
-
+    SalDisplay		*pDisplay_;
+    X11SalGraphics	*pGraphics_;
+	
+    
+    Pixmap			hDrawable_;
+    
+    int				nDX_;
+    int				nDY_;
+    USHORT			nDepth_;
+    BOOL			bGraphics_;			// is Graphics used
+    
 public:
-			BOOL			Init( SalDisplay *pDisplay,
-								  long nDX, long nDY,
-								  USHORT nBitCount );
-	inline	void			InitGraphics( SalVirtualDevice *pVD,
-										  SalGraphics	   *pGraphics );
+	X11SalVirtualDevice();
+    virtual ~X11SalVirtualDevice();
+
+    BOOL			Init( SalDisplay *pDisplay,
+                          long nDX, long nDY,
+                          USHORT nBitCount );
+	inline	void			InitGraphics( X11SalVirtualDevice *pVD );
 
 	inline	Display		   *GetXDisplay() const;
 	inline	SalDisplay	   *GetDisplay() const;
@@ -114,21 +104,26 @@ public:
 	inline	USHORT			GetDepth() const { return nDepth_; }
     int						GetWidth() const { return nDX_; }
     int						GetHeight() const { return nDY_; }
+
+    virtual SalGraphics*	GetGraphics();
+    virtual void			ReleaseGraphics( SalGraphics* pGraphics );
+
+                            // Set new size, without saving the old contents
+    virtual BOOL			SetSize( long nNewDX, long nNewDY );
 };
 
 #ifdef _SV_SALDISP_HXX
 
-inline void SalVirDevData::InitGraphics( SalVirtualDevice *pVD,
-										 SalGraphics	  *pGraphics )
-{ pGraphics_->maGraphicsData.Init( pVD, pGraphics ); }
+inline void X11SalVirtualDevice::InitGraphics( X11SalVirtualDevice *pVD )
+{ pGraphics_->Init( pVD ); }
 
-inline Display *SalVirDevData::GetXDisplay() const
+inline Display *X11SalVirtualDevice::GetXDisplay() const
 { return pDisplay_->GetDisplay(); }
 
-inline SalDisplay *SalVirDevData::GetDisplay() const
+inline SalDisplay *X11SalVirtualDevice::GetDisplay() const
 { return pDisplay_; }
 
-inline BOOL SalVirDevData::IsDisplay() const
+inline BOOL X11SalVirtualDevice::IsDisplay() const
 { return pDisplay_->IsDisplay(); }
 
 #endif
Index: vcl/unx/inc/wmadaptor.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/wmadaptor.hxx,v
retrieving revision 1.18
retrieving revision 1.19
diff -u -p -u -r1.18 -r1.19
--- vcl/unx/inc/wmadaptor.hxx	30 Jun 2003 14:31:11 -0000	1.18
+++ vcl/unx/inc/wmadaptor.hxx	18 Nov 2003 14:39:55 -0000	1.19
@@ -76,7 +76,7 @@
 #include <vector>
 
 class SalDisplay;
-class SalFrame;
+class X11SalFrame;
 
 namespace vcl_sal {
 
@@ -227,7 +227,7 @@ public:
     /*
      *  sets window title
      */
-    virtual void setWMName( SalFrame* pFrame, const String& rWMName ) const;
+    virtual void setWMName( X11SalFrame* pFrame, const String& rWMName ) const;
 
     /*
      *  maximizes frame
@@ -235,11 +235,11 @@ public:
      *  to get the original position and size
      *  use maximizeFrame( pFrame, false, false )
      */
-    virtual void maximizeFrame( SalFrame* pFrame, bool bHorizontal = true, bool bVertical = true ) const;
+    virtual void maximizeFrame( X11SalFrame* pFrame, bool bHorizontal = true, bool bVertical = true ) const;
     /*
      *  start/stop fullscreen mode on a frame
      */
-    virtual void showFullScreen( SalFrame* pFrame, bool bFullScreen ) const;
+    virtual void showFullScreen( X11SalFrame* pFrame, bool bFullScreen ) const;
 
     /*
      *  tells whether fullscreen mode is supported by WM
@@ -249,13 +249,13 @@ public:
     /*
      *  shade/unshade frame
      */
-    virtual void shade( SalFrame* pFrame, bool bToShaded ) const;
+    virtual void shade( X11SalFrame* pFrame, bool bToShaded ) const;
 
     /*
      *  set hints what decoration is needed;
      *  must be called before showing the frame
      */
-    virtual void setFrameTypeAndDecoration( SalFrame* pFrame, WMWindowType eType, int nDecorationFlags, SalFrame* pTransientFrame = NULL ) const;
+    virtual void setFrameTypeAndDecoration( X11SalFrame* pFrame, WMWindowType eType, int nDecorationFlags, X11SalFrame* pTransientFrame = NULL ) const;
 
     /*
      *  tells whether there is WM support for splash screens
@@ -265,7 +265,7 @@ public:
     /*
      *  enables always on top or equivalent if possible
      */
-    virtual void enableAlwaysOnTop( SalFrame* pFrame, bool bEnable ) const;
+    virtual void enableAlwaysOnTop( X11SalFrame* pFrame, bool bEnable ) const;
 
     /*
      *  tells whether enableAlwaysOnTop actually works with this WM
@@ -275,7 +275,7 @@ public:
     /*
      *  handle WM messages (especially WM state changes)
      */
-    virtual int handlePropertyNotify( SalFrame* pFrame, XPropertyEvent* pEvent ) const;
+    virtual int handlePropertyNotify( X11SalFrame* pFrame, XPropertyEvent* pEvent ) const;
 
     /*
      *  gets a WM atom
@@ -305,7 +305,7 @@ public:
      *  changes the transient hint of a window to reference frame
      *  if reference frame is NULL the root window is used instead
      */
-    void changeReferenceFrame( SalFrame* pFrame, SalFrame* pReferenceFrame ) const;
+    void changeReferenceFrame( X11SalFrame* pFrame, X11SalFrame* pReferenceFrame ) const;
 };
 
 } // namespace
Index: vcl/unx/inc/xfont.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/xfont.hxx,v
retrieving revision 1.12.122.1
retrieving revision 1.14
diff -u -p -u -r1.12.122.1 -r1.14
--- vcl/unx/inc/xfont.hxx	9 Jan 2004 18:13:58 -0000	1.12.122.1
+++ vcl/unx/inc/xfont.hxx	17 Jun 2004 12:26:53 -0000	1.14
@@ -160,12 +160,12 @@ class ExtendedFontStruct : public SvRefB
 
 		sal_Size			GetDefaultWidth();
 		sal_Size 			GetCharWidth8( sal_Unicode nFrom, sal_Unicode nTo, 
-									long *pWidthArray, 
+									sal_Int32 *pWidthArray, 
 									rtl_TextEncoding nEncoding );
 		sal_Size 			GetCharWidthUTF16( sal_Unicode nFrom, sal_Unicode nTo, 
-									long *pWidthArray );
+									sal_Int32 *pWidthArray );
 		sal_Size 			GetCharWidth16( sal_Unicode nFrom, sal_Unicode nTo, 
-									long *pWidthArray, ExtendedFontStruct *pFallback );
+									sal_Int32 *pWidthArray, ExtendedFontStruct *pFallback );
 	public:
 							ExtendedFontStruct( Display* pDisplay, 
 									const Size& rPixelSize, sal_Bool bVertical,
@@ -179,7 +179,7 @@ class ExtendedFontStruct : public SvRefB
 		Bool				ToImplFontMetricData( ImplFontMetricData *pMetric );
 		rtl_TextEncoding	GetAsciiEncoding( int *pAsciiRange = NULL ) const;
 		sal_Size			GetCharWidth( sal_Unicode, 
-									long *pPhysWidth, long* pLogWidth );
+									sal_Int32* pPhysWidth, sal_Int32* pLogWidth );
         int                 GetFontCodeRanges( sal_uInt32* pCodePairs ) const;
         bool                HasUnicodeChar( sal_Unicode ) const;
 };
Index: vcl/unx/inc/salbmp.hxx
===================================================================
RCS file: /cvs/gsl/vcl/unx/inc/Attic/salbmp.hxx,v
retrieving revision 1.3.274.1
diff -u -p -u -r1.3.274.1 salbmp.hxx
--- vcl/unx/inc/salbmp.hxx	15 Jan 2004 12:51:23 -0000	1.3.274.1
+++ vcl/unx/inc/salbmp.hxx	6 Jul 2004 11:46:09 -0000
@@ -59,229 +59,5 @@
  *
  ************************************************************************/
 
-#ifndef _SV_SALBMP_HXX
-#define _SV_SALBMP_HXX
-
-#ifndef _SALSTD_HXX
-#include <salstd.hxx>
-#endif
-#ifndef _SV_SALGTYPE
-#include <salgtype.hxx>
-#endif
-#ifndef _SV_SALDISP_HXX
-#include <saldisp.hxx>
-#endif
-
-struct	BitmapBuffer;
-class	BitmapPalette;
-class	SalGraphics;
-class	ImplSalDDB;
-class	ImplSalBitmapCache;
-
-// -------------
-// - SalBitmap -
-// -------------
-
-class SalBitmap
-{
-private:
-
-	static BitmapBuffer*		ImplCreateDIB( const Size& rSize,
-											   USHORT nBitCount, 
-											   const BitmapPalette& rPal );
-	static BitmapBuffer*		ImplCreateDIB( Drawable aDrawable,
-											   long nDrawableDepth,
-											   long nX, long nY,
-											   long nWidth, long nHeight );
-
-public:
-
-	static ImplSalBitmapCache*	mpCache;
-	static ULONG				mnCacheInstCount;
-
-	static void					ImplCreateCache();
-	static void					ImplDestroyCache();
-    void				        ImplRemovedFromCache();
-
-    BOOL                        SnapShot (Display* pDisplay, XLIB_Window hWindow);
-    BOOL                        ImplCreateFromXImage (Display* pDisplay, XLIB_Window hWindow, 
-                                                      XImage* pImage);
-private:
-
-
-	BitmapBuffer*	mpDIB;
-	ImplSalDDB*		mpDDB;
-								
-public:
-
-	BOOL			ImplCreateFromDrawable( 
-#ifdef _USE_PRINT_EXTENSION_ 
-											SalDisplay* pDisplay,
-#endif
-											Drawable aDrawable, 
-											long nDrawableDepth,
-											long nX, long nY, 
-											long nWidth, long nHeight );
-
-	BOOL			ImplCreateLocalFromDrawable( 
-											Drawable aDrawable, 
-											long nDrawableDepth,
-											long nX, long nY, 
-											long nWidth, long nHeight );
-
-	XImage*			ImplCreateXImage( 
-											SalDisplay* pSalDisp, long nDepth, 
-									  		const SalTwoRect& rTwoRect ) const;
-#ifdef _USE_PRINT_EXTENSION_
-	void			ImplDraw( SalDisplay *pDisplay, Drawable aDrawable, long nDrawableDepth, 
-							  const SalTwoRect& rTwoRect, const GC& rGC ) const;
-#else
-	void			ImplDraw( Drawable aDrawable, long nDrawableDepth, 
-							  const SalTwoRect& rTwoRect, const GC& rGC ) const;
-#endif
-						
-public:					
-								
-					SalBitmap();
-					~SalBitmap();
-						
-	BOOL			Create( const Size& rSize, 
-							USHORT nBitCount, 
-							const BitmapPalette& rPal );
-	BOOL			Create( const SalBitmap& rSalBmp );
-	BOOL			Create( const SalBitmap& rSalBmp, 
-							SalGraphics* pGraphics );
-	BOOL			Create( const SalBitmap& rSalBmp,
-							USHORT nNewBitCount );
-						
-	void			Destroy();
-						
-	Size			GetSize() const;
-	USHORT			GetBitCount() const;
-						
-	BitmapBuffer*	AcquireBuffer( BOOL bReadOnly );
-	void			ReleaseBuffer( BitmapBuffer* pBuffer, BOOL bReadOnly );
-};
-
-// --------------
-// - ImplSalDDB -
-// --------------
-
-class ImplSalDDB
-{
-private:
-
-	Pixmap			maPixmap;
-	SalTwoRect		maTwoRect;
-	long			mnDepth;
-
-					ImplSalDDB() {}
-
-    static void	ImplDraw( 
-#ifdef _USE_PRINT_EXTENSION_ 
-								SalDisplay* pDisplay,
-#endif
-    Drawable aSrcDrawable, long nSrcDrawableDepth,
-						      Drawable aDstDrawable, long nDstDrawableDepth,
-						      long nSrcX, long nSrcY, 
-						      long nDestWidth, long nDestHeight, 
-						      long nDestX, long nDestY, const GC& rGC );
-					
-public:				
-					
-					ImplSalDDB( 
-#ifdef _USE_PRINT_EXTENSION_ 
-								SalDisplay* pDisplay,
-#endif
-								XImage* pImage, Drawable aDrawable, 
-								const SalTwoRect& rTwoRect );
-					ImplSalDDB( 
-#ifdef _USE_PRINT_EXTENSION_ 
-								SalDisplay* pDisplay,
-#endif
-								Drawable aDrawable, long nDrawableDepth, 
-								long nX, long nY, long nWidth, long nHeight );
-                    ImplSalDDB (Display* pDisplay, XLIB_Window hWindow, XImage* pImage); 
-					~ImplSalDDB();
-					
-	Pixmap			ImplGetPixmap() const { return maPixmap; }
-	long			ImplGetWidth() const { return maTwoRect.mnDestWidth; }
-	long			ImplGetHeight() const { return maTwoRect.mnDestHeight; }
-	long			ImplGetDepth() const { return mnDepth; }
-	ULONG			ImplGetMemSize() const { return( ( maTwoRect.mnDestWidth * maTwoRect.mnDestHeight * mnDepth ) >> 3 ); }
-					
-	BOOL			ImplMatches( long nDepth, const SalTwoRect& rTwoRect ) const;
-	void			ImplDraw( 
-#ifdef _USE_PRINT_EXTENSION_ 
-								SalDisplay* pDisplay,
-#endif
-								Drawable aDrawable, long nDrawableDepth, 
-								const SalTwoRect& rTwoRect, const GC& rGC ) const;
-};
-
-// ----------------------
-// - ImplSalBitmapCache -
-// ----------------------
-
-class ImplSalBitmapCache
-{
-private:
-
-	List			maBmpList;
-	ULONG			mnTotalSize;
-
-public:				
-					
-					ImplSalBitmapCache();
-					~ImplSalBitmapCache();
-
-	void			ImplAdd( SalBitmap* pBmp, ULONG nMemSize = 0UL, ULONG nFlags = 0UL );
-	void			ImplRemove( SalBitmap* pBmp );
-	void			ImplClear();
-};
-
-#endif // _SV_SALBMP_HXX
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
+// Having dollar Foos in files is _really_ painful
+#include "../../inc/salbmp.hxx"
