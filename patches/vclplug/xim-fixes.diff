--- vcl/unx/gtk/window/gtkframe.cxx
+++ vcl/unx/gtk/window/gtkframe.cxx
@@ -985,13 +995,30 @@
                           G_CALLBACK (signalIMDeleteSurrounding), this );
 
         gtk_im_context_set_client_window( m_pIMContext, GTK_WIDGET(m_pWindow)->window );
+		gtk_im_context_focus_in( m_pIMContext );
     }
 }
 void GtkSalFrame::EndExtTextInput( USHORT nFlags )
 {
     if( m_pIMContext )
         gtk_im_context_reset( m_pIMContext );
     m_bWasPreedit = false;
+	CallCallback( SALEVENT_ENDEXTTEXTINPUT, NULL );
+}
+
+void GtkSalFrame::UpdateIMSpotLocation()
+{
+	if( m_pIMContext )
+	{
+		SalExtTextInputPosEvent aPosEvent;
+		CallCallback( SALEVENT_EXTTEXTINPUTPOS, (void*)&aPosEvent );
+		GdkRectangle aArea;
+		aArea.x = aPosEvent.mnX;
+		aArea.y = aPosEvent.mnY;
+		aArea.width = aPosEvent.mnWidth;
+		aArea.height = aPosEvent.mnHeight;
+		gtk_im_context_set_cursor_location( m_pIMContext, &aArea );
+	}
 }
 
 LanguageType GtkSalFrame::GetInputLanguage()
@@ -1751,6 +1803,9 @@
 		}
     }
 
+	if( !aDel.isDeleted() )
+		pThis->UpdateIMSpotLocation();
+
     return TRUE;
 }
 

--- vcl/unx/inc/plugins/gtk/gtkframe.hxx
+++ vcl/unx/inc/plugins/gtk/gtkframe.hxx
@@ -144,6 +144,7 @@
 
 	GtkSalDisplay*	getDisplay();
 	GdkDisplay*		getGdkDisplay();
+	void			UpdateIMSpotLocation();
     void			Center();
     void			SetDefaultSize();
 	void			setAutoLock( bool bLock );

