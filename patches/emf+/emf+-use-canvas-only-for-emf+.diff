diff --git vcl/inc/vcl/gdimtf.hxx vcl/inc/vcl/gdimtf.hxx
index 077742d..833d9de 100644
--- vcl/inc/vcl/gdimtf.hxx
+++ vcl/inc/vcl/gdimtf.hxx
@@ -128,6 +128,7 @@ private:
     ImpLabelList*   pLabelList;
     BOOL            bPause;
     BOOL            bRecord;
+    BOOL            bUseCanvas;
 
 //#if 0 // _SOLAR__PRIVATE
 
@@ -256,6 +257,8 @@ public:
     friend VCL_DLLPUBLIC SvStream& operator<<( SvStream& rOStm, const GDIMetaFile& rGDIMetaFile );
 
 	BOOL           CreateThumbnail( sal_uInt32 nMaximumExtent, BitmapEx& rBmpEx, const BitmapEx* pOverlay = NULL, const Rectangle* pOverlayRect = NULL ) const;
+
+    void           UseCanvas( BOOL _bUseCanvas );
 };
 
 #endif // _SV_GDIMTF_HXX
diff --git vcl/source/gdi/gdimtf.cxx vcl/source/gdi/gdimtf.cxx
index 2104bcb..93ac803 100644
--- vcl/source/gdi/gdimtf.cxx
+++ vcl/source/gdi/gdimtf.cxx
@@ -266,7 +266,8 @@ GDIMetaFile::GDIMetaFile() :
 	pOutDev 	( NULL ),
 	pLabelList	( NULL ),
 	bPause		( FALSE ),
-	bRecord 	( FALSE )
+	bRecord 	( FALSE ),
+    bUseCanvas  ( FALSE )
 {
 }
 
@@ -281,7 +282,8 @@ GDIMetaFile::GDIMetaFile( const GDIMetaFile& rMtf ) :
 	pNext			( rMtf.pNext ),
 	pOutDev 		( NULL ),
 	bPause			( FALSE ),
-	bRecord 		( FALSE )
+	bRecord 		( FALSE ),
+	bUseCanvas 	    ( rMtf.bUseCanvas )
 {
 	// RefCount der MetaActions erhoehen
 	for( void* pAct = First(); pAct; pAct = Next() )
@@ -335,6 +337,7 @@ GDIMetaFile& GDIMetaFile::operator=( const GDIMetaFile& rMtf )
 		pOutDev = NULL;
 		bPause = FALSE;
 		bRecord = FALSE;
+        bUseCanvas = rMtf.bUseCanvas;
 
 		if( rMtf.bRecord )
 		{
@@ -622,7 +625,7 @@ void GDIMetaFile::Play( OutputDevice* pOut, const Point& rPos,
 	{
         GDIMetaFile*	pMtf = pOut->GetConnectMetaFile();
 
-        if( !pMtf && ImplPlayWithRenderer( pOut, rPos, aDestSize ) )
+        if( bUseCanvas && !pMtf && ImplPlayWithRenderer( pOut, rPos, aDestSize ) )
             return;
 
         Size aTmpPrefSize( pOut->LogicToPixel( GetPrefSize(), aDrawMap ) );
@@ -2649,3 +2652,8 @@ BOOL GDIMetaFile::CreateThumbnail( sal_uInt32 nMaximumExtent,
 	
 	return !rBmpEx.IsEmpty();
 }
+
+void GDIMetaFile::UseCanvas( BOOL _bUseCanvas )
+{
+    bUseCanvas = _bUseCanvas;
+}
diff --git svtools/source/filter.vcl/wmf/winmtf.cxx svtools/source/filter.vcl/wmf/winmtf.cxx
index ded3948..c28a1c6 100644
--- svtools/source/filter.vcl/wmf/winmtf.cxx
+++ svtools/source/filter.vcl/wmf/winmtf.cxx
@@ -2263,6 +2263,7 @@ void WinMtfOutput::PassEMFPlusHeaderInfo()
     mem << one << zero << zero << one << zero << zero;
 
     mpGDIMetaFile->AddAction( new MetaCommentAction( "EMF_PLUS_HEADER_INFO", 0, (const BYTE*) mem.GetData(), mem.GetSize() ) );
+    mpGDIMetaFile->UseCanvas( TRUE );
 }
 
 void WinMtfOutput::PassEMFPlus( void* pBuffer, UINT32 nLength )
