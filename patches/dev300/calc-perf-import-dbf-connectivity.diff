From 7b9cfdb3afc25cc72016b617e2142c75c87a64fe Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 17:07:43 +0200
Subject: [PATCH 681/768] calc-perf-import-dbf-connectivity.diff

---
 connectivity/source/drivers/dbase/DTable.cxx |   56 ++++++++++++++++---------
 1 files changed, 36 insertions(+), 20 deletions(-)

diff --git connectivity/source/drivers/dbase/DTable.cxx connectivity/source/drivers/dbase/DTable.cxx
index ab6fc6d..0cdfd46 100644
--- connectivity/source/drivers/dbase/DTable.cxx
+++ connectivity/source/drivers/dbase/DTable.cxx
@@ -884,17 +884,23 @@ sal_Bool ODbaseTable::fetchRow(OValueRefRow& _rRow,const OSQLColumns & _rCols, s
 
         if (nType == DataType::CHAR || nType == DataType::VARCHAR)
         {
-            char cLast = pData[nLen];
-            pData[nLen] = 0;
-            String aStr(pData,(xub_StrLen)nLen,m_eEncoding);
-            aStr.EraseTrailingChars();
-
-            if ( aStr.Len() )
-                *(_rRow->get())[i] = ::rtl::OUString(aStr);
-            else// keine StringLaenge, dann NULL
+            sal_Int32 nLastPos = -1;
+            for (sal_Int32 k = 0; k < nLen; ++k)
+            {
+                if (pData[k] != ' ')
+                    // Record last non-empty position.
+                    nLastPos = k;
+            }
+            if (nLastPos < 0)
+            {
+                // Empty string.  Skip it.
                 (_rRow->get())[i]->setNull();
-                
-            pData[nLen] = cLast;
+            }
+            else
+            {
+                // Commit the string.  Use intern() to ref-count it.
+                *(_rRow->get())[i] = ::rtl::OUString::intern(pData, static_cast<sal_Int32>(nLastPos+1), m_eEncoding);
+            }
         } // if (nType == DataType::CHAR || nType == DataType::VARCHAR)
         else if ( DataType::TIMESTAMP == nType )
         {
@@ -940,36 +946,46 @@ sal_Bool ODbaseTable::fetchRow(OValueRefRow& _rRow,const OSQLColumns & _rCols, s
         }
         else
         {
+            sal_Int32 nPos1 = -1, nPos2 = -1;
             // Falls Nul-Zeichen im String enthalten sind, in Blanks umwandeln!
             for (sal_Int32 k = 0; k < nLen; k++)
             {
                 if (pData[k] == '\0')
                     pData[k] = ' ';
-            }
 
-            String aStr(pData, (xub_StrLen)nLen,m_eEncoding);		// Spaces am Anfang und am Ende entfernen:
-            aStr.EraseLeadingChars();
-            aStr.EraseTrailingChars();
+                if (pData[k] != ' ')
+                {
+                    if (nPos1 < 0)
+                        // first non-empty char position.
+                        nPos1 = k;
 
-            if (!aStr.Len())
+                    // last non-empty char position.
+                    nPos2 = k;
+                }
+            }
+
+            if (nPos1 < 0)
             {
+                // Empty string.  Skip it.
                 nByteOffset += nLen;
                 (_rRow->get())[i]->setNull();	// keine Werte -> fertig
                 continue;
             }
 
+            ::rtl::OUString aStr = ::rtl::OUString::intern(pData+nPos1, nPos2-nPos1+1, m_eEncoding);
+
             switch (nType)
             {
                 case DataType::DATE:
                 {
-                    if (aStr.Len() != nLen)
+                    if (aStr.getLength() != nLen)
                     {
                         (_rRow->get())[i]->setNull();
                         break;
                     }
-                    const sal_uInt16  nYear   = (sal_uInt16)aStr.Copy( 0, 4 ).ToInt32();
-                    const sal_uInt16  nMonth  = (sal_uInt16)aStr.Copy( 4, 2 ).ToInt32();
-                    const sal_uInt16  nDay    = (sal_uInt16)aStr.Copy( 6, 2 ).ToInt32();
+                    const sal_uInt16  nYear   = (sal_uInt16)aStr.copy( 0, 4 ).toInt32();
+                    const sal_uInt16  nMonth  = (sal_uInt16)aStr.copy( 4, 2 ).toInt32();
+                    const sal_uInt16  nDay    = (sal_uInt16)aStr.copy( 6, 2 ).toInt32();
 
                     const ::com::sun::star::util::Date aDate(nDay,nMonth,nYear);
                     *(_rRow->get())[i] = aDate;
@@ -997,7 +1013,7 @@ sal_Bool ODbaseTable::fetchRow(OValueRefRow& _rRow,const OSQLColumns & _rCols, s
                 case DataType::BINARY:
                 case DataType::LONGVARCHAR:
                 {
-                    const long nBlockNo = aStr.ToInt32();	// Blocknummer lesen
+                    const long nBlockNo = aStr.toInt32();	// Blocknummer lesen
                     if (nBlockNo > 0 && m_pMemoStream) // Daten aus Memo-Datei lesen, nur wenn
                     {
                         if ( !ReadMemo(nBlockNo, (_rRow->get())[i]->get()) )
-- 
1.7.0.1

