Index: config_office/configure.in
===================================================================
RCS file: /cvs/tools/config_office/configure.in,v
retrieving revision 1.237
retrieving revision 1.237.2.3
diff -u -p -u -p -b -w -B -r1.237 -r1.237.2.3
--- config_office/configure.in	12 Dec 2007 15:36:54 -0000	1.237
+++ config_office/configure.in	21 Dec 2007 12:57:07 -0000	1.237.2.3
@@ -479,9 +479,10 @@ AC_ARG_WITH(stlport,
 
                           Usage: --with-stlport=<absolute path to stlport home>
 
-                          Warning!!, --without-stlport is possible with
-                          gcc >= 3.3.3, but will break ABI compatability
-], WITH_STLPORT=$withval , WITH_STLPORT=yes)
+                          Warning!!, disabling using --without-stlport or 
+                          enabling using --with-stlport on a platform that
+                          defaults to the opposite will break ABI compatability
+], WITH_STLPORT=$withval , WITH_STLPORT=auto)
 AC_ARG_WITH(jdk-home,
 [  --with-jdk-home         if you have installed JDK 1.3 or later on your system
                           please supply the path here.
@@ -2156,16 +2157,48 @@ if test -n "$enable_sgistl" && "$enable_
 else
 
 dnl ===================================================================
+dnl Checks for what the default STL should be
+dnl ===================================================================
+   AC_MSG_CHECKING([what the default STL should be])
+   DEFAULT_TO_STLPORT="yes"
+   if test "$_os" = "Linux"; then
+     case "$build_cpu" in
+       i?86|powerpc|sparc)
+         DEFAULT_TO_STLPORT="yes"
+         ;;
+       *)
+         DEFAULT_TO_STLPORT="no"
+         ;;
+     esac
+   fi
+   if test "$DEFAULT_TO_STLPORT" = "yes"; then
+      AC_MSG_RESULT([stlport])
+   else
+      AC_MSG_RESULT([gcc])
+   fi
+   if test "$WITH_STLPORT" = "auto"; then
+      WITH_STLPORT=$DEFAULT_TO_STLPORT
+   fi
+
+dnl ===================================================================
 dnl Checks for STLPORT
 dnl ===================================================================
-   AC_MSG_CHECKING([for STLport headers])
+   AC_MSG_CHECKING([for STL providing headers])
    STLPORT4=""
    USE_SYSTEM_STL=""
    if test "$WITH_STLPORT" = "yes"; then
       AC_MSG_RESULT([using internal stlport.])
+      if test "$DEFAULT_TO_STLPORT" != "yes"; then
+         AC_MSG_WARN([using stlport. Warning, breaks your ABI compatability!])
+         echo "using stlport. Warning, breaks your ABI compatability!" >>warn
+      fi
    elif test "$WITH_STLPORT" = "no"; then
-      AC_MSG_RESULT([use system STL instead, Warning breaks your ABI compatability!])
+      AC_MSG_RESULT([using system STL])
       USE_SYSTEM_STL="YES"
+      if test "$DEFAULT_TO_STLPORT" != "no"; then
+         AC_MSG_WARN([using system STL. Warning, breaks your ABI compatability!])
+         echo "using system STL. Warning, breaks your ABI compatability!" >>warn
+      fi
    else
       STLPORT4=$WITH_STLPORT
       if test "$_os" != "WINNT" -o "$WITH_MINGWIN" = "yes"; then
@@ -2222,6 +2255,10 @@ dnl ====================================
 			   fi
 		   fi
 	   fi
+      if test "$DEFAULT_TO_STLPORT" != "yes"; then
+         AC_MSG_WARN([using stlport. Warning, breaks your ABI compatability!])
+         echo "using stlport. Warning, breaks your ABI compatability!" >>warn
+      fi
    fi
 fi
 
@@ -2236,6 +2273,53 @@ AC_SUBST(STLPORT_VER)
 AC_SUBST(USE_SYSTEM_STL)
 
 dnl ===================================================================
+dnl system stl sanity tests
+dnl ===================================================================
+if test "$USE_SYSTEM_STL" = "YES"; then
+   AC_MSG_CHECKING([if hash_map will be in __gnu_cxx namespace])
+   AC_LANG_PUSH([C++])
+
+   AC_TRY_COMPILE([#include <ext/hash_map>
+using namespace __gnu_cxx;
+],[hash_map<int, int> t; return 0;],
+  ac_cv_cxx_have_ext_hash_map=yes, ac_cv_cxx_have_ext_hash_map=no)
+
+   if test "$ac_cv_cxx_have_ext_hash_map" = "no"; then
+      AC_MSG_ERROR([Can't find hash_map. Try with --with-stlport])
+   else
+      AC_MSG_RESULT([$ac_cv_cxx_have_ext_hash_map])
+   fi
+
+   if test "$HAVE_GCC_VISIBILITY_FEATURE" = "TRUE"; then
+      AC_MSG_CHECKING([if STL headers are visibility safe])
+      AC_EGREP_HEADER(visibility push, string, stlvisok=yes, stlvisok=no)
+      AC_MSG_RESULT([$stlvisok])
+      if test "$stlvisok" = "no"; then
+         AC_MSG_ERROR([Your gcc STL headers are not visibility safe. Try with --with-stlport])
+      fi
+
+      sharedlink_ldflags_save=$LDFLAGS
+      LDFLAGS="$LDFLAGS -fvisibility-inlines-hidden -fpic -shared"
+
+      AC_MSG_CHECKING([if gcc is -fvisibility-inlines-hidden safe with STL headers])
+      AC_TRY_LINK([#include <sstream>
+using namespace std;
+],[istringstream strm( "test" ); return 0;],
+     gccvisok=yes, gccvisok=no)
+
+      LDFLAGS=$sharedlink_ldflags_save
+
+      AC_MSG_RESULT([$gccvisok])
+      if test "$gccvisok" = "no"; then
+         AC_MSG_ERROR([Your gcc is not -fvisibility-inlines-hidden safe. Try with --with-stlport])
+      fi
+
+   fi
+
+   AC_LANG_POP([C++])
+fi
+
+dnl ===================================================================
 dnl allocator
 dnl ===================================================================
 AC_MSG_CHECKING([which memory allocator to use])
@@ -2259,24 +2343,6 @@ fi
 AC_SUBST(ALLOC)
 
 dnl ===================================================================
-dnl hash_map hackery
-dnl ===================================================================
-if test "$USE_SYSTEM_STL" = "YES"; then
-   AC_MSG_CHECKING([if hash_map will be in __gnu_cxx namespace])
-   AC_LANG_PUSH([C++])
-   AC_TRY_COMPILE([#include <ext/hash_map>
-using namespace __gnu_cxx;
-],[hash_map<int, int> t; return 0;],
-  ac_cv_cxx_have_ext_hash_map=yes, ac_cv_cxx_have_ext_hash_map=no)
-   AC_LANG_POP([C++])
-   if test "$ac_cv_cxx_have_ext_hash_map" = "no"; then
-      AC_MSG_ERROR([Can't find hash_map. Try with stlport enabled])
-   else
-      AC_MSG_RESULT([$ac_cv_cxx_have_ext_hash_map])
-   fi
-fi
-
-dnl ===================================================================
 dnl Custom build version
 dnl ===================================================================
 
Index: odk/settings/settings.mk
===================================================================
RCS file: /cvs/api/odk/settings/settings.mk,v
retrieving revision 1.26
retrieving revision 1.26.2.3
diff -u -p -u -p -b -w -B -r1.26 -r1.26.2.3
--- odk/settings/settings.mk	12 Dec 2007 13:28:13 -0000	1.26
+++ odk/settings/settings.mk	19 Dec 2007 12:13:29 -0000	1.26.2.3
@@ -222,31 +222,41 @@ endif
 ifeq "$(PLATFORM)" "linux-gnu"
 # Settings for Linux using gcc compiler
 
-PROCTYPE := $(shell $(PRJ)/config.guess | cut -d "-" -f1)
-
-# Default is linux on a intel machine    
+PROCTYPE := $(shell $(PRJ)/config.guess | cut -d "-" -f1 | sed -e 's/^i.86$$/i386/')
 PLATFORM=linux
+
+PACKAGE_LIB_DIR=linux_$(PROCTYPE).plt
+UNOPKG_PLATFORM=Linux_$(PROCTYPE)
+JAVA_PROC_TYPE=$(PROCTYPE)
+STLPORT=no
+
+ifeq "$(PROCTYPE)" "i386"
 PACKAGE_LIB_DIR=linux_x86.plt
 UNOPKG_PLATFORM=Linux_x86
 JAVA_PROC_TYPE=i386
-
-ifeq "$(PROCTYPE)" "x86_64"
-PACKAGE_LIB_DIR=linux_x86_64.plt
-UNOPKG_PLATFORM=Linux_x86_64
-# needs deeper investigation for intel 64 bit
-JAVA_PROC_TYPE=amd64
+STLPORT=yes
 endif
 
 ifeq "$(PROCTYPE)" "powerpc"
 PACKAGE_LIB_DIR=linux_powerpc.plt
 UNOPKG_PLATFORM=Linux_PowerPC
 JAVA_PROC_TYPE=ppc
+STLPORT=yes
 endif
 
 ifeq "$(PROCTYPE)" "sparc"
 PACKAGE_LIB_DIR=linux_sparc.plt
 UNOPKG_PLATFORM=Linux_SPARC
 JAVA_PROC_TYPE=sparc
+STLPORT=yes
+endif
+
+ifeq "$(PROCTYPE)" "x86_64"
+JAVA_PROC_TYPE=amd64
+endif
+
+ifeq "$(PROCTYPE)" "powerpc64"
+JAVA_PROC_TYPE=ppc64
 endif
 
 OS=LINUX
@@ -289,11 +299,15 @@ CPPUHELPERLIB=-luno_cppuhelper$(COMID)
 SALHELPERLIB=-luno_salhelper$(COMID)
 REGLIB=-lreg
 STORELIB=-lstore
+ifeq "$(STLPORT)" "yes"
 ifeq "$(STLPORT_VER)" "500"
 STLPORTLIB=-lstlport
 else
 STLPORTLIB=-lstlport_gcc
 endif
+else
+STLPORTLIB=
+endif
 
 EMPTYSTRING=
 PATH_SEPARATOR=:
