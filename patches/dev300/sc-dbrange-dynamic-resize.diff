From ae9952b7589f5a963708a96dca4ed865b13edb49 Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 16:55:36 +0200
Subject: [PATCH 142/768] sc-dbrange-dynamic-resize.diff

---
 sc/inc/dbcolect.hxx                |    6 ++++--
 sc/inc/document.hxx                |    3 +++
 sc/inc/queryparam.hxx              |    2 ++
 sc/source/core/data/documen3.cxx   |   14 ++++++++++++++
 sc/source/core/data/table3.cxx     |    3 ++-
 sc/source/core/tool/dbcolect.cxx   |   16 ++++++++++++----
 sc/source/core/tool/queryparam.cxx |   16 +++++++++++++---
 sc/source/ui/dbgui/filtdlg.cxx     |    2 +-
 sc/source/ui/inc/dbfunc.hxx        |    2 +-
 sc/source/ui/view/dbfunc.cxx       |   17 +++++++++++++----
 sc/source/ui/view/gridwin.cxx      |    1 +
 sc/source/ui/view/tabvwshc.cxx     |    6 ++++--
 12 files changed, 70 insertions(+), 18 deletions(-)

diff --git sc/inc/dbcolect.hxx sc/inc/dbcolect.hxx
index 8be1868..0066650 100644
--- sc/inc/dbcolect.hxx
+++ sc/inc/dbcolect.hxx
@@ -91,6 +91,7 @@ private:
     ScQueryConnect  eQueryConnect[MAXQUERY];
     BOOL			bIsAdvanced;		// TRUE if created by advanced filter
     ScRange			aAdvSource;			// source range
+    SCROW           nDynamicEndRow;
     // SubTotalParam
     BOOL			bSubRemoveOnly;
     BOOL			bSubReplace;
@@ -138,9 +139,10 @@ public:
             const String& GetName() const				{ return aName; }
             void		GetName(String& rName) const	{ rName = aName; }
             void		SetName(const String& rName)	{ aName = rName; }
-            void		GetArea(SCTAB& rTab, SCCOL& rCol1, SCROW& rRow1, SCCOL& rCol2, SCROW& rRow2) const;
-            SC_DLLPUBLIC void		GetArea(ScRange& rRange) const;
+            void		GetArea(SCTAB& rTab, SCCOL& rCol1, SCROW& rRow1, SCCOL& rCol2, SCROW& rRow2, bool bUseDynamicRange = false) const;
+            SC_DLLPUBLIC void		GetArea(ScRange& rRange, bool bUseDynamicRange = false) const;
             void		SetArea(SCTAB nTab, SCCOL nCol1, SCROW nRow1, SCCOL nCol2, SCROW nRow2);
+            void        SetDynamicEndRow(SCROW nRow);
             void		MoveTo(SCTAB nTab, SCCOL nCol1, SCROW nRow1, SCCOL nCol2, SCROW nRow2);
             BOOL		IsByRow() const 				{ return bByRow; }
             void		SetByRow(BOOL bByR) 			{ bByRow = bByR; }
diff --git sc/inc/document.hxx sc/inc/document.hxx
index 2bd97b3..380ae05 100644
--- sc/inc/document.hxx
+++ sc/inc/document.hxx
@@ -1429,6 +1429,9 @@ public:
                                         SCTAB nTab, ScQueryParam& rQueryParam );
     void 			GetUpperCellString(SCCOL nCol, SCROW nRow, SCTAB nTab, String& rStr);
 
+    /** Update the dynamic end row position of a current data area. */
+    void            UpdateDynamicEndRow(ScDBData& rDBData) const;
+
     BOOL			GetFilterEntries( SCCOL nCol, SCROW nRow, SCTAB nTab,
                                 bool bFilter, TypedScStrCollection& rStrings, bool& rHasDates);
     SC_DLLPUBLIC BOOL			GetFilterEntriesArea( SCCOL nCol, SCROW nStartRow, SCROW nEndRow,
diff --git sc/inc/queryparam.hxx sc/inc/queryparam.hxx
index bc50237..01ddffb 100644
--- sc/inc/queryparam.hxx
+++ sc/inc/queryparam.hxx
@@ -86,6 +86,8 @@ struct SC_DLLPUBLIC ScQueryParam : public ScQueryParamBase, public ScQueryParamT
     SCTAB           nDestTab;
     SCCOL           nDestCol;
     SCROW           nDestRow;
+    SCROW           nDynamicEndRow;
+    bool            bUseDynamicRange;
 
     ScQueryParam();
     ScQueryParam( const ScQueryParam& r );
diff --git sc/source/core/data/documen3.cxx sc/source/core/data/documen3.cxx
index 9b476a3..ee91862 100644
--- sc/source/core/data/documen3.cxx
+++ sc/source/core/data/documen3.cxx
@@ -1256,6 +1256,18 @@ BOOL ScDocument::HasRowHeader( SCCOL nStartCol, SCROW nStartRow, SCCOL nEndCol,
     //return FALSE;
 }
 
+void ScDocument::UpdateDynamicEndRow(ScDBData& rDBData) const
+{
+    SCCOL nCol1, nCol2;
+    SCROW nRow1, nRow2;
+    SCTAB nTab;
+    rDBData.GetArea(nTab, nCol1, nRow1, nCol2, nRow2);
+    SCCOL nCol1a = nCol1, nCol2a = nCol2;
+    SCROW nRow1a = nRow1, nRow2a = nRow2;
+    GetDataArea(nTab, nCol1a, nRow1a, nCol2a, nRow2a, false, false);
+    rDBData.SetDynamicEndRow(nRow2a);
+}
+
 //
 //	GetFilterEntries - Eintraege fuer AutoFilter-Listbox
 //
@@ -1268,6 +1280,7 @@ BOOL ScDocument::GetFilterEntries(
         ScDBData* pDBData = pDBCollection->GetDBAtCursor(nCol, nRow, nTab, FALSE);	//!??
         if (pDBData)
         {
+            UpdateDynamicEndRow(*pDBData);
             SCTAB nAreaTab;
             SCCOL nStartCol;
             SCROW nStartRow;
@@ -1279,6 +1292,7 @@ BOOL ScDocument::GetFilterEntries(
 
             ScQueryParam aParam;
             pDBData->GetQueryParam( aParam );
+            nEndRow = aParam.nDynamicEndRow;
             rStrings.SetCaseSensitive( aParam.bCaseSens );
 
             // return all filter entries, if a filter condition is connected with a boolean OR
diff --git sc/source/core/data/table3.cxx sc/source/core/data/table3.cxx
index daac685..31be80f 100644
--- sc/source/core/data/table3.cxx
+++ sc/source/core/data/table3.cxx
@@ -1614,6 +1614,7 @@ SCSIZE ScTable::Query(ScQueryParam& rParamOrg, BOOL bKeepSub)
     BOOL* pSpecial = new BOOL[nEntryCount];
     lcl_PrepareQuery( pDocument, this, aParam, pSpecial );
 
+    SCROW nEndRow = aParam.bUseDynamicRange ? aParam.nDynamicEndRow : aParam.nRow2;
     if (!aParam.bInplace)
     {
         nOutRow = aParam.nDestRow + nHeader;
@@ -1622,7 +1623,7 @@ SCSIZE ScTable::Query(ScQueryParam& rParamOrg, BOOL bKeepSub)
                             aParam.nDestCol, aParam.nDestRow, aParam.nDestTab );
     }
 
-    for (SCROW j=aParam.nRow1 + nHeader; j<=aParam.nRow2; j++)
+    for (SCROW j=aParam.nRow1 + nHeader; j<=nEndRow; j++)
     {
         BOOL bResult;									// Filterergebnis
         BOOL bValid = ValidQuery(j, aParam, pSpecial);
diff --git sc/source/core/tool/dbcolect.cxx sc/source/core/tool/dbcolect.cxx
index 92fef62..07bbba4 100644
--- sc/source/core/tool/dbcolect.cxx
+++ sc/source/core/tool/dbcolect.cxx
@@ -378,18 +378,20 @@ String ScDBData::GetOperations() const
     return aVal;
 }
 
-void ScDBData::GetArea(SCTAB& rTab, SCCOL& rCol1, SCROW& rRow1, SCCOL& rCol2, SCROW& rRow2) const
+void ScDBData::GetArea(SCTAB& rTab, SCCOL& rCol1, SCROW& rRow1, SCCOL& rCol2, SCROW& rRow2,
+                       bool bUseDynamicRange) const
 {
     rTab  = nTable;
     rCol1 = nStartCol;
     rRow1 = nStartRow;
     rCol2 = nEndCol;
-    rRow2 = nEndRow;
+    rRow2 = bUseDynamicRange ? nDynamicEndRow : nEndRow;
 }
 
-void ScDBData::GetArea(ScRange& rRange) const
+void ScDBData::GetArea(ScRange& rRange, bool bUseDynamicRange) const
 {
-    rRange = ScRange( nStartCol,nStartRow,nTable, nEndCol,nEndRow,nTable );
+    SCROW nNewEndRow = bUseDynamicRange ? nDynamicEndRow : nEndRow;
+    rRange = ScRange( nStartCol, nStartRow, nTable, nEndCol, nNewEndRow, nTable );
 }
 
 void ScDBData::SetArea(SCTAB nTab, SCCOL nCol1, SCROW nRow1, SCCOL nCol2, SCROW nRow2)
@@ -401,6 +403,11 @@ void ScDBData::SetArea(SCTAB nTab, SCCOL nCol1, SCROW nRow1, SCCOL nCol2, SCROW
     nEndRow   = nRow2;
 }
 
+void ScDBData::SetDynamicEndRow(SCROW nRow)
+{
+    nDynamicEndRow = nRow;
+}
+
 void ScDBData::MoveTo(SCTAB nTab, SCCOL nCol1, SCROW nRow1, SCCOL nCol2, SCROW nRow2)
 {
     USHORT i;
@@ -508,6 +515,7 @@ void ScDBData::GetQueryParam( ScQueryParam& rQueryParam ) const
     rQueryParam.nDestTab = nQueryDestTab;
     rQueryParam.nDestCol = nQueryDestCol;
     rQueryParam.nDestRow = nQueryDestRow;
+    rQueryParam.nDynamicEndRow = nDynamicEndRow;
 
     rQueryParam.Resize( MAXQUERY );
     for (SCSIZE i=0; i<MAXQUERY; i++)
diff --git sc/source/core/tool/queryparam.cxx sc/source/core/tool/queryparam.cxx
index 7b129e6..80dd170 100644
--- sc/source/core/tool/queryparam.cxx
+++ sc/source/core/tool/queryparam.cxx
@@ -185,7 +185,8 @@ ScQueryParam::ScQueryParam() :
 ScQueryParam::ScQueryParam( const ScQueryParam& r ) :
     ScQueryParamBase(r),
     ScQueryParamTable(r),
-    bDestPers(r.bDestPers), nDestTab(r.nDestTab), nDestCol(r.nDestCol), nDestRow(r.nDestRow)
+    bDestPers(r.bDestPers), nDestTab(r.nDestTab), nDestCol(r.nDestCol), nDestRow(r.nDestRow),
+    nDynamicEndRow(r.nDynamicEndRow), bUseDynamicRange(r.bUseDynamicRange)
 {
 }
 
@@ -195,7 +196,9 @@ ScQueryParam::ScQueryParam( const ScDBQueryParamInternal& r ) :
     bDestPers(true),
     nDestTab(0),
     nDestCol(0),
-    nDestRow(0)
+    nDestRow(0),
+    nDynamicEndRow(0),
+    bUseDynamicRange(false)
 {
 }
     
@@ -229,6 +232,8 @@ void ScQueryParam::ClearDestParams()
     nDestTab = 0;
     nDestCol = 0;
     nDestRow = 0;
+    nDynamicEndRow = 0;
+    bUseDynamicRange = false;
 }
 
 //------------------------------------------------------------------------
@@ -251,6 +256,8 @@ ScQueryParam& ScQueryParam::operator=( const ScQueryParam& r )
     bDuplicate  = r.bDuplicate;
     bByRow      = r.bByRow;
     bDestPers   = r.bDestPers;
+    nDynamicEndRow = r.nDynamicEndRow;
+    bUseDynamicRange = r.bUseDynamicRange;
 
     maEntries = r.maEntries;
 
@@ -289,7 +296,9 @@ BOOL ScQueryParam::operator==( const ScQueryParam& rOther ) const
         && (bDestPers   == rOther.bDestPers)
         && (nDestTab    == rOther.nDestTab)
         && (nDestCol    == rOther.nDestCol)
-        && (nDestRow    == rOther.nDestRow) )
+        && (nDestRow    == rOther.nDestRow)
+        && (nDynamicEndRow == rOther.nDynamicEndRow)
+        && (bUseDynamicRange == rOther.bUseDynamicRange) )
     {
         bEqual = TRUE;
         for ( SCSIZE i=0; i<nUsed && bEqual; i++ )
@@ -313,6 +322,7 @@ void ScQueryParam::MoveToDest()
         nCol2 = sal::static_int_cast<SCCOL>( nCol2 + nDifX );
         nRow2 = sal::static_int_cast<SCROW>( nRow2 + nDifY );
         nTab  = sal::static_int_cast<SCTAB>( nTab  + nDifZ );
+        nDynamicEndRow = sal::static_int_cast<SCROW>( nDynamicEndRow + nDifY );
         size_t n = maEntries.size();
         for (size_t i=0; i<n; i++)
             maEntries[i].nField += nDifX;
diff --git sc/source/ui/dbgui/filtdlg.cxx sc/source/ui/dbgui/filtdlg.cxx
index 728bf21..649e886 100644
--- sc/source/ui/dbgui/filtdlg.cxx
+++ sc/source/ui/dbgui/filtdlg.cxx
@@ -451,7 +451,7 @@ void ScFilterDlg::UpdateValueList( USHORT nList )
                 USHORT nOffset = GetSliderPos();
                 SCTAB nTab		 = nSrcTab;
                 SCROW nFirstRow = theQueryData.nRow1;
-                SCROW nLastRow	 = theQueryData.nRow2;
+                SCROW nLastRow   = theQueryData.bUseDynamicRange ? theQueryData.nDynamicEndRow : theQueryData.nRow2;
                 mbHasDates[nOffset+nList-1] = false;
 
                 //	erstmal ohne die erste Zeile
diff --git sc/source/ui/inc/dbfunc.hxx sc/source/ui/inc/dbfunc.hxx
index 257e3fa..d517694 100644
--- sc/source/ui/inc/dbfunc.hxx
+++ sc/source/ui/inc/dbfunc.hxx
@@ -77,7 +77,7 @@ public:
     void			GotoDBArea( const String& rDBName );
 
                     // DB-Bereich vom Cursor
-    ScDBData* 		GetDBData( BOOL bMarkArea = TRUE, ScGetDBMode eMode = SC_DB_MAKE, ScGetDBSelection eSel = SC_DBSEL_KEEP );
+    ScDBData* 		GetDBData( BOOL bMarkArea = TRUE, ScGetDBMode eMode = SC_DB_MAKE, ScGetDBSelection eSel = SC_DBSEL_KEEP, bool bShrinkToData = false, bool bExpandRows = false );
 
     void			NotifyCloseDbNameDlg( const ScDBCollection& rNewColl, const List& rDelAreaList );
 
diff --git sc/source/ui/view/dbfunc.cxx sc/source/ui/view/dbfunc.cxx
index 308df11..bc87d02 100644
--- sc/source/ui/view/dbfunc.cxx
+++ sc/source/ui/view/dbfunc.cxx
@@ -104,7 +104,7 @@ void ScDBFunc::GotoDBArea( const String& rDBName )
 
 //	aktuellen Datenbereich fuer Sortieren / Filtern suchen
 
-ScDBData* ScDBFunc::GetDBData( BOOL bMark, ScGetDBMode eMode, ScGetDBSelection eSel )
+ScDBData* ScDBFunc::GetDBData( BOOL bMark, ScGetDBMode eMode, ScGetDBSelection eSel, bool bShrinkToData, bool bExpandRows )
 {
     ScDocShell* pDocSh = GetViewData()->GetDocShell();
     ScDBData* pData = NULL;
@@ -177,12 +177,21 @@ ScDBData* ScDBFunc::GetDBData( BOOL bMark, ScGetDBMode eMode, ScGetDBSelection e
         pData = pDocSh->GetDBData(
                     ScRange( GetViewData()->GetCurX(), GetViewData()->GetCurY(),
                              GetViewData()->GetTabNo() ),
                     eMode, SC_DBSEL_KEEP );
+    if (!pData)
+        return NULL;
 
-    if ( pData && bMark )
+    if (bExpandRows)
+    {
+        // Dynamically expand rows to include any new data rows that are
+        // immediately below the original range.
+        GetViewData()->GetDocument()->UpdateDynamicEndRow(*pData);
+    }
+
+    if (bMark)
     {
         ScRange aFound;
-        pData->GetArea(aFound);
+        pData->GetArea(aFound, bExpandRows);
         MarkRange( aFound, FALSE );
     }
     return pData;
diff --git sc/source/ui/view/gridwin.cxx sc/source/ui/view/gridwin.cxx
index ebc448e..329521e 100644
--- sc/source/ui/view/gridwin.cxx
+++ sc/source/ui/view/gridwin.cxx
@@ -1276,6 +1276,7 @@ void ScGridWindow::ExecFilter( ULONG nSel,
                     pViewData->GetViewShell()->UpdateInputHandler();
                 }
 
+                aParam.bUseDynamicRange = true;
                 pViewData->GetView()->Query( aParam, NULL, TRUE );
                 pDBData->SetQueryParam( aParam );							// speichern
             }
diff --git sc/source/ui/view/tabvwshc.cxx sc/source/ui/view/tabvwshc.cxx
index ace1aae..1beb938 100644
--- sc/source/ui/view/tabvwshc.cxx
+++ sc/source/ui/view/tabvwshc.cxx
@@ -175,8 +175,9 @@ SfxModelessDialog* ScTabViewShell::CreateRefDialog(
                                      SCITEM_QUERYDATA,
                                      SCITEM_QUERYDATA );
 
-            ScDBData* pDBData = GetDBData( TRUE, SC_DB_MAKE, SC_DBSEL_ROW_DOWN);
+            ScDBData* pDBData = GetDBData(true, SC_DB_MAKE, SC_DBSEL_ROW_DOWN, true, true);
             pDBData->GetQueryParam( aQueryParam );
+            aQueryParam.bUseDynamicRange = true;
 
             ScQueryItem aItem( SCITEM_QUERYDATA, GetViewData(), &aQueryParam );
             ScRange aAdvSource;
@@ -200,8 +201,9 @@ SfxModelessDialog* ScTabViewShell::CreateRefDialog(
                                      SCITEM_QUERYDATA,
                                      SCITEM_QUERYDATA );
 
-            ScDBData* pDBData = GetDBData( TRUE, SC_DB_MAKE, SC_DBSEL_ROW_DOWN);
+            ScDBData* pDBData = GetDBData(true, SC_DB_MAKE, SC_DBSEL_ROW_DOWN, true, true);
             pDBData->GetQueryParam( aQueryParam );
+            aQueryParam.bUseDynamicRange = true;
 
             aArgSet.Put( ScQueryItem( SCITEM_QUERYDATA,
                                       GetViewData(),
-- 
1.7.0.1

