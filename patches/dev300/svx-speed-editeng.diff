diff -u -r /opt/OpenOffice/svn-HEAD/build/ooo310-m4/svx/source/editeng/editdoc2.cxx svx/source/editeng/editdoc2.cxx
--- svx/source/editeng/editdoc2.cxx
+++ svx/source/editeng/editdoc2.cxx
@@ -324,10 +324,42 @@
 	DBG_ASSERT( aLineList[ aLineList.Count()-1 ]->GetEnd() == pNode->Len(), "CorrectLines: Ende stimmt nicht!" );
 }
 
+// Shared reverse lookup acceleration pieces ...
+
+static USHORT FastGetPos( const VoidPtr *pPtrArray, USHORT nPtrArrayLen,
+						  VoidPtr pPtr, USHORT &rLastPos )
+{
+  // Through certain filter code-paths we do a lot of appends, which in
+  // turn call GetPos - creating some N^2 nightmares. If we have a
+  // non-trivially large list, do a few checks from the end first.
+  if( rLastPos > 16 )
+    {
+      USHORT nEnd;
+      if (rLastPos > nPtrArrayLen - 2)
+		nEnd = nPtrArrayLen;
+      else
+		nEnd = rLastPos + 2;
+
+      for( USHORT nIdx = rLastPos - 2; nIdx < nEnd; nIdx++ )
+		{
+		  if( pPtrArray[ nIdx ] == pPtr )
+			{
+			  rLastPos = nIdx;
+			  return nIdx;
+			}
+		}
+    }
+  // The world's lamest linear search from svarray ...
+  for( USHORT nIdx = 0; nIdx < nPtrArrayLen; nIdx++ )
+	if (pPtrArray[ nIdx ] == pPtr )
+	  return rLastPos = nIdx;
+  return USHRT_MAX;
+}
+
 // -------------------------------------------------------------------------
 // class ParaPortionList
 // -------------------------------------------------------------------------
-ParaPortionList::ParaPortionList()
+ParaPortionList::ParaPortionList() : nLastCache( 0 )
 {
 }
 
@@ -336,6 +368,20 @@
 	Reset();
 }
 
+USHORT ParaPortionList::GetPos( const ParaPortionPtr &rPtr ) const
+{
+	return FastGetPos( reinterpret_cast<const VoidPtr *>( GetData() ),
+					   Count(), static_cast<VoidPtr>( rPtr ),
+					   ((ParaPortionList *)this)->nLastCache );
+}
+
+USHORT ContentList::GetPos( const ContentNodePtr &rPtr ) const
+{
+    return FastGetPos( reinterpret_cast<const VoidPtr *>( GetData() ),
+					   Count(), static_cast<VoidPtr>( rPtr ),
+					   ((ContentList *)this)->nLastCache );
+}
+
 void ParaPortionList::Reset()
 {
 	for ( USHORT nPortion = 0; nPortion < Count(); nPortion++ )
diff -u -r /opt/OpenOffice/svn-HEAD/build/ooo310-m4/svx/source/editeng/editdoc.cxx svx/source/editeng/editdoc.cxx
--- /opt/OpenOffice/svn-HEAD/build/ooo310-m4/svx/source/editeng/editdoc.cxx	2009-02-26 08:39:48.000000000 +0000
+++ svx/source/editeng/editdoc.cxx	2009-04-06 14:04:09.000000000 +0100
@@ -258,7 +258,7 @@
 	4035, 4036, 4037, 4038
 };
 
-SV_IMPL_PTRARR( ContentList, ContentNode* );
+SV_IMPL_PTRARR( DummyContentList, ContentNode* );
 SV_IMPL_VARARR( ScriptTypePosInfos, ScriptTypePosInfo );
 SV_IMPL_VARARR( WritingDirectionInfos, WritingDirectionInfo );
 // SV_IMPL_VARARR( ExtraCharInfos, ExtraCharInfo );
diff -u -r /opt/OpenOffice/svn-HEAD/build/ooo310-m4/svx/source/editeng/editdoc.hxx svx/source/editeng/editdoc.hxx
--- /opt/OpenOffice/svn-HEAD/build/ooo310-m4/svx/source/editeng/editdoc.hxx	2009-02-26 08:39:48.000000000 +0000
+++ svx/source/editeng/editdoc.hxx	2009-04-06 14:03:23.000000000 +0100
@@ -285,7 +285,15 @@
 };
 
 typedef ContentNode* ContentNodePtr;
-SV_DECL_PTRARR( ContentList, ContentNodePtr, 0, 4 )
+SV_DECL_PTRARR( DummyContentList, ContentNodePtr, 0, 4 )
+
+class ContentList : public DummyContentList
+{
+  USHORT nLastCache;
+public:
+  ContentList() : DummyContentList( 0, 4 ), nLastCache(0) {}
+  USHORT GetPos( const ContentNodePtr &rPtr ) const;
+};
 
 // -------------------------------------------------------------------------
 // class EditPaM
@@ -612,6 +620,7 @@
 // -------------------------------------------------------------------------
 class ParaPortionList : public DummyParaPortionList
 {
+	USHORT nLastCache;
 public:
 					ParaPortionList();
 					~ParaPortionList();
@@ -623,6 +632,8 @@
 	inline ParaPortion*	SaveGetObject( USHORT nPos ) const
 		{ return ( nPos < Count() ) ? GetObject( nPos ) : 0; }
 
+	USHORT                  GetPos( const ParaPortionPtr &rPtr ) const;
+
 	// temporaer:
 	void			DbgCheck( EditDoc& rDoc );
 };
