--- svtools/source/filter.vcl/wmf/enhwmf.cxx.old	2009-04-02 11:06:17.000000000 +0000
+++ svtools/source/filter.vcl/wmf/enhwmf.cxx	2009-04-06 16:42:11.000000000 +0000
@@ -870,7 +870,10 @@ BOOL EnhWMFReader::ReadEnhWMF()
 							Rectangle aCropRect( Point( xSrc, ySrc ), Size( cxSrc, cySrc ) );
 							aBitmap.Crop( aCropRect );
 						}
- 						aBmpSaveList.Insert( new BSaveStruct( aBitmap, aRect, dwRop ), LIST_APPEND );
+					/* Pseudocomment to add more context so that make patch.unapply
+					 * works better. Ha!
+					 */
+ 					aBmpSaveList.Insert( new BSaveStruct( aBitmap, aRect, dwRop, pOut->GetFillStyle () ), LIST_APPEND );
 					}
 				}
 			}
@@ -924,7 +927,8 @@ BOOL EnhWMFReader::ReadEnhWMF()
 							Rectangle aCropRect( Point( xSrc, ySrc ), Size( cxSrc, cySrc ) );
 							aBitmap.Crop( aCropRect );
 						}
-						aBmpSaveList.Insert( new BSaveStruct( aBitmap, aRect, dwRop ), LIST_APPEND );
+					/* Another pseudocomment to make make patch.unapply work better */
+					aBmpSaveList.Insert( new BSaveStruct( aBitmap, aRect, dwRop, pOut->GetFillStyle () ), LIST_APPEND );
 					}
 				}
 			}
@@ -1195,6 +1199,54 @@ BOOL EnhWMFReader::ReadEnhWMF()
             }
             break;
 
+            case EMR_CREATEDIBPATTERNBRUSHPT :
+            {
+                static int count = 0;
+				UINT32	nStart = pWMF->Tell() - 8;
+                Bitmap aBitmap;
+
+				*pWMF >> nIndex;
+
+				if ( ( nIndex & ENHMETA_STOCK_OBJECT ) == 0 )
+				{
+                    UINT32 usage, offBmi, cbBmi, offBits, cbBits;
+
+                    *pWMF >> usage;
+                    *pWMF >> offBmi;
+                    *pWMF >> cbBmi;
+                    *pWMF >> offBits;
+                    *pWMF >> cbBits;
+
+                    if ( (cbBits > (SAL_MAX_UINT32 - 14)) || ((SAL_MAX_UINT32 - 14) - cbBits < cbBmi) )
+                       bStatus = FALSE;
+                    else if ( offBmi )
+                    {
+                        UINT32	nSize = cbBmi + cbBits + 14;
+                        if ( nSize <= ( nEndPos - nStartPos ) )
+                        {
+                            char*	pBuf = new char[ nSize ];
+
+                            SvMemoryStream aTmp( pBuf, nSize, STREAM_READ | STREAM_WRITE );
+                            aTmp.ObjectOwnsMemory( TRUE );
+                            aTmp << (BYTE)'B'
+                                 << (BYTE)'M'
+                                 << (UINT32)cbBits
+                                 << (UINT16)0
+                                 << (UINT16)0
+                                 << (UINT32)cbBmi + 14;
+                            pWMF->Seek( nStart + offBmi );
+                            pWMF->Read( pBuf + 14, cbBmi );
+                            pWMF->Seek( nStart + offBits );
+                            pWMF->Read( pBuf + 14 + cbBmi, cbBits );
+                            aTmp.Seek( 0 );
+                            aBitmap.Read( aTmp, TRUE );
+                        }
+                    }
+                }
+
+                pOut->CreateObject( nIndex, GDI_BRUSH, new WinMtfFillStyle( aBitmap ) );
+            }
+            break;
 
 #ifdef WIN_MTF_ASSERT
             default :                           WinMtfAssertHandler( "Unknown Meta Action" );       break;
@@ -1214,7 +1266,6 @@ BOOL EnhWMFReader::ReadEnhWMF()
 			case EMR_ANGLEARC :     	        WinMtfAssertHandler( "AngleArc" );                  break;
 			case EMR_SETCOLORADJUSTMENT :       WinMtfAssertHandler( "SetColorAdjustment" );	    break;
 			case EMR_POLYDRAW16 :		        WinMtfAssertHandler( "PolyDraw16" );                break;
-			case EMR_CREATEDIBPATTERNBRUSHPT :  WinMtfAssertHandler( "CreateDibPatternBrushPt" );   break;
 			case EMR_POLYTEXTOUTA : 		    WinMtfAssertHandler( "PolyTextOutA" );              break;
 			case EMR_POLYTEXTOUTW :			    WinMtfAssertHandler( "PolyTextOutW" );              break;
 			case EMR_CREATECOLORSPACE :         WinMtfAssertHandler( "CreateColorSpace" );	        break;
--- svtools/source/filter.vcl/wmf/winmtf.cxx.old	2009-04-02 11:06:17.000000000 +0000
+++ svtools/source/filter.vcl/wmf/winmtf.cxx	2009-04-06 16:42:11.000000000 +0000
@@ -34,6 +34,7 @@
 
 #include "winmtf.hxx"
 #include <vcl/metaact.hxx>
+#include <vcl/graphictools.hxx>
 #include <vcl/metric.hxx>
 #include <rtl/tencinfo.h>
 
@@ -1037,7 +1038,8 @@ void WinMtfOutput::UpdateFillStyle()
 	if (!( maLatestFillStyle == maFillStyle ) )
 	{
 		maLatestFillStyle = maFillStyle;
-		mpGDIMetaFile->AddAction( new MetaFillColorAction( maFillStyle.aFillColor, !maFillStyle.bTransparent ) );
+        if (maFillStyle.aType == FillStyleSolid)
+            mpGDIMetaFile->AddAction( new MetaFillColorAction( maFillStyle.aFillColor, !maFillStyle.bTransparent ) );
 	}
 }
 
@@ -1365,7 +1367,35 @@ void WinMtfOutput::DrawPolygon( Polygon&
 			else
 			{
 				UpdateLineStyle();
-				mpGDIMetaFile->AddAction( new MetaPolygonAction( rPolygon ) );
+
+                if (maLatestFillStyle.aType != FillStylePattern)
+                    mpGDIMetaFile->AddAction( new MetaPolygonAction( rPolygon ) );
+                else {
+                    SvtGraphicFill aFill = SvtGraphicFill( PolyPolygon( rPolygon ),
+                                                           Color(),
+                                                           0.0,
+                                                           SvtGraphicFill::fillNonZero,
+                                                           SvtGraphicFill::fillTexture,
+                                                           SvtGraphicFill::Transform(),
+                                                           true,
+                                                           SvtGraphicFill::hatchSingle,
+                                                           Color(),
+                                                           SvtGraphicFill::gradientLinear,
+                                                           Color(),
+                                                           Color(),
+                                                           0,
+                                                           Graphic (maLatestFillStyle.aBmp) );
+
+                    SvMemoryStream  aMemStm;
+
+                    aMemStm << aFill;
+
+                    mpGDIMetaFile->AddAction( new MetaCommentAction( "XPATHFILL_SEQ_BEGIN", 0,
+                                                            static_cast<const BYTE*>(aMemStm.GetData()),
+                                                            aMemStm.Seek( STREAM_SEEK_TO_END ) ) );
+                    mpGDIMetaFile->AddAction( new MetaCommentAction( "XPATHFILL_SEQ_END" ) );
+                }
+
 			}
 		}
 	}
@@ -1708,7 +1738,7 @@ void WinMtfOutput::ResolveBitmapActions(
 			if ( ( nRasterOperation & 0xaa ) != ( ( nRasterOperation & 0x55 ) << 1 ) )
 				nUsed |= 4;		// destination is used
 
-			if ( (nUsed & 1) && (( nUsed & 2 ) == 0) )
+			if ( (nUsed & 1) && (( nUsed & 2 ) == 0) && nWinRop != PATINVERT )
 			{	// patterns aren't well supported yet
 				sal_uInt32 nOldRop = SetRasterOp( ROP_OVERPAINT );	// in this case nRasterOperation is either 0 or 0xff
 				UpdateFillStyle();
--- svtools/source/filter.vcl/wmf/winmtf.hxx.old	2009-04-02 11:06:17.000000000 +0000
+++ svtools/source/filter.vcl/wmf/winmtf.hxx	2009-04-06 16:42:11.000000000 +0000
@@ -366,10 +366,17 @@ struct WinMtfFontStyle
 
 // -----------------------------------------------------------------------------
 
+typedef enum {
+    FillStyleSolid,
+    FillStylePattern
+} WinMtfFillStyleType;
+
 struct WinMtfFillStyle
 {
-	Color	aFillColor;
-	BOOL	bTransparent;
+	Color	            aFillColor;
+	BOOL	            bTransparent;
+    WinMtfFillStyleType aType;
+    Bitmap              aBmp;
 
 	WinMtfFillStyle() :
 		aFillColor	( Color( COL_BLACK ) ),
@@ -379,16 +386,23 @@ struct WinMtfFillStyle
 
 	WinMtfFillStyle( const Color& rColor, BOOL bTrans = FALSE ) :
 		aFillColor	( rColor ),
-		bTransparent( bTrans )
+		bTransparent( bTrans ),
+        aType       ( FillStyleSolid )
+	{
+	};
+
+	WinMtfFillStyle( Bitmap& rBmp ) :
+		aBmp ( rBmp ),
+        aType( FillStylePattern )
 	{
 	};
 
 	BOOL operator==( const WinMtfFillStyle& rStyle )
-		{ return ( ( aFillColor == rStyle.aFillColor ) && ( bTransparent == rStyle.bTransparent ) ); };
+		{ return ( ( aFillColor == rStyle.aFillColor ) && ( bTransparent == rStyle.bTransparent ) && ( aType == rStyle.aType ) ); };
 	BOOL operator==( WinMtfFillStyle* pStyle )
-		{ return ( ( aFillColor == pStyle->aFillColor ) && ( bTransparent == pStyle->bTransparent ) ); };
-	void operator=( const WinMtfFillStyle& rStyle ) { aFillColor = rStyle.aFillColor; bTransparent = rStyle.bTransparent; };
-	void operator=( WinMtfFillStyle* pStyle ) { aFillColor = pStyle->aFillColor; bTransparent = pStyle->bTransparent; };
+		{ return ( ( aFillColor == pStyle->aFillColor ) && ( bTransparent == pStyle->bTransparent ) && ( aType == pStyle->aType ) ); };
+	void operator=( const WinMtfFillStyle& rStyle ) { aFillColor = rStyle.aFillColor; bTransparent = rStyle.bTransparent; aBmp = rStyle.aBmp; aType = rStyle.aType; };
+	void operator=( WinMtfFillStyle* pStyle ) { aFillColor = pStyle->aFillColor; bTransparent = pStyle->bTransparent; aBmp = pStyle->aBmp; aType = pStyle->aType; };
 };
 
 // -----------------------------------------------------------------------------
@@ -480,12 +494,13 @@ typedef ::boost::shared_ptr< SaveStruct
 
 struct BSaveStruct
 {
-	Bitmap		aBmp;
-	Rectangle	aOutRect;
-	UINT32		nWinRop;
+	Bitmap		    aBmp;
+	Rectangle	    aOutRect;
+	UINT32		    nWinRop;
+    WinMtfFillStyle aStyle;
 
-				BSaveStruct( const Bitmap& rBmp, const Rectangle& rOutRect, UINT32 nRop ) :
-					aBmp( rBmp ), aOutRect( rOutRect ), nWinRop( nRop ){};
+				BSaveStruct( const Bitmap& rBmp, const Rectangle& rOutRect, UINT32 nRop, WinMtfFillStyle& rStyle ) :
+					aBmp( rBmp ), aOutRect( rOutRect ), nWinRop( nRop ), aStyle ( rStyle ){};
 };
 
 // -----------------------------------------------------------------------------
@@ -640,6 +655,7 @@ class WinMtfOutput
 		void				DeleteObject( INT32 nIndex );
 		void				SelectObject( INT32 nIndex );
 		CharSet				GetCharSet(){ return maFont.GetCharSet(); };
+        WinMtfFillStyle&    GetFillStyle () { return maFillStyle; }
 		void				SetFont( const Font& rFont );
 		const Font&			GetFont() const;
 		void				SetTextLayoutMode( const sal_uInt32 nLayoutMode );
--- svtools/source/filter.vcl/wmf/winwmf.cxx.old	2009-04-02 11:06:17.000000000 +0000
+++ svtools/source/filter.vcl/wmf/winwmf.cxx	2009-04-06 16:42:11.000000000 +0000
@@ -566,7 +566,7 @@ void WMFReader::ReadRecordParams( USHORT
                         aBmp.Crop( aCropRect );
                     }
 					Rectangle aDestRect( aPoint, Size( nSxe, nSye ) );
-				    aBmpSaveList.Insert( new BSaveStruct( aBmp, aDestRect, nWinROP ), LIST_APPEND );
+				    aBmpSaveList.Insert( new BSaveStruct( aBmp, aDestRect, nWinROP, pOut->GetFillStyle () ), LIST_APPEND );
 				}
 			}
 		}		
@@ -616,7 +616,7 @@ void WMFReader::ReadRecordParams( USHORT
                         Rectangle aCropRect( Point( nSx, nSy ), Size( nSxe, nSye ) );
                         aBmp.Crop( aCropRect );
                     }
-				    aBmpSaveList.Insert( new BSaveStruct( aBmp, aDestRect, nWinROP ), LIST_APPEND );
+				    aBmpSaveList.Insert( new BSaveStruct( aBmp, aDestRect, nWinROP, pOut->GetFillStyle () ), LIST_APPEND );
                 }
 			}
 		}
