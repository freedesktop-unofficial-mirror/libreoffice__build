--- desktop/source/app/app.cxx.old	2010-07-30 12:57:03.000000000 +0200
+++ desktop/source/app/app.cxx	2010-07-30 12:57:38.000000000 +0200
@@ -2578,6 +2578,7 @@ void Desktop::OpenClients()
         pArgs->GetConversionList( aRequest.aConversionList );
         pArgs->GetConversionParams( aRequest.aConversionParams );
         pArgs->GetConversionOut( aRequest.aConversionOut );
+        pArgs->GetInFilter( aRequest.aInFilter );
 
         if ( aRequest.aOpenList.getLength() > 0 ||
              aRequest.aViewList.getLength() > 0 ||
--- desktop/source/app/cmdlineargs.cxx	2010-07-22 15:52:08.000000000 +0530
+++ desktop/source/app/cmdlineargs.cxx	2010-07-22 16:26:35.000000000 +0530
@@ -544,6 +544,11 @@ sal_Bool CommandLineArgs::InterpretComma
         return sal_True;
     }
     #endif
+    else if ( aArgStr.Copy(0, 10).EqualsIgnoreCaseAscii( "-infilter=" ))
+    {
+        AddStringListParam_Impl( CMD_STRINGPARAM_INFILTER, aArgStr.Copy( 10 ) );
+        return sal_True;
+    }
     else if ( aArgStr.Copy(0, 8).EqualsIgnoreCaseAscii( "-accept=" ))
     {
         AddStringListParam_Impl( CMD_STRINGPARAM_ACCEPT, aArgStr.Copy( 8 ) );
@@ -949,6 +954,13 @@ sal_Bool CommandLineArgs::GetLanguage( :
     return m_aStrSetParams[ CMD_STRINGPARAM_LANGUAGE ];
 }
 
+sal_Bool CommandLineArgs::GetInFilter( ::rtl::OUString& rPara ) const
+{
+    osl::MutexGuard aMutexGuard( m_aMutex );
+    rPara = m_aStrParams[ CMD_STRINGPARAM_INFILTER ];
+    return m_aStrSetParams[ CMD_STRINGPARAM_INFILTER ];
+}
+
 sal_Bool CommandLineArgs::GetConversionList( ::rtl::OUString& rPara ) const
 {
     osl::MutexGuard  aMutexGuard( m_aMutex );
--- desktop/source/app/cmdlineargs.hxx.old	2010-07-30 12:57:03.000000000 +0200
+++ desktop/source/app/cmdlineargs.hxx	2010-07-30 12:57:38.000000000 +0200
@@ -94,6 +94,7 @@ class CommandLineArgs
             CMD_STRINGPARAM_CONVERSIONLIST,
             CMD_STRINGPARAM_CONVERSIONPARAMS,
             CMD_STRINGPARAM_CONVERSIONOUT,
+            CMD_STRINGPARAM_INFILTER,
             CMD_STRINGPARAM_DISPLAY,
             CMD_STRINGPARAM_LANGUAGE,
             CMD_STRINGPARAM_COUNT			// must be last element!
@@ -175,6 +176,7 @@ class CommandLineArgs
         sal_Bool				GetPrintToList( ::rtl::OUString& rPara ) const;
         sal_Bool				GetPrinterName( ::rtl::OUString& rPara ) const;
         sal_Bool                GetLanguage( ::rtl::OUString& rPara ) const;
+        sal_Bool                GetInFilter( ::rtl::OUString& rPara ) const;
         sal_Bool                GetConversionList( ::rtl::OUString& rPara ) const;
         sal_Bool                GetConversionParams( ::rtl::OUString& rPara ) const;
         sal_Bool                GetConversionOut( ::rtl::OUString& rPara ) const;
--- desktop/source/app/cmdlinehelp.cxx.old	2010-07-30 12:57:03.000000000 +0200
+++ desktop/source/app/cmdlinehelp.cxx	2010-07-30 12:57:38.000000000 +0200
@@ -116,6 +116,9 @@ namespace desktop
         "-unaccept=<accept-string>\n"\
         "      Close an acceptor that was created with -accept=<accept-string>\n"\
         "      Use -unnaccept=all to close all open acceptors\n"\
+        "-infilter=<filter>\n"\
+        "      Force an input filter type if possible\n"\
+        "      Eg. -infilter=\"Calc Office Open XML\"\n"\
         "-convert-to output_file_extension[:output_filter_name] [-outdir ouput_dir] files\n"\
         "      Batch convert files.\n"\
         "      If -outdir is not specified then current working dir is used as output_dir.\n"\
--- desktop/source/app/dispatchwatcher.cxx.old	2010-07-30 12:57:03.000000000 +0200
+++ desktop/source/app/dispatchwatcher.cxx	2010-07-30 12:57:38.000000000 +0200
@@ -182,6 +182,8 @@ sal_Bool DispatchWatcher::executeDispatc
     DispatchList::const_iterator	p;
     std::vector< DispatchHolder >	aDispatches;
     ::rtl::OUString					aAsTemplateArg( RTL_CONSTASCII_USTRINGPARAM( "AsTemplate"));
+    sal_Bool                        bSetInputFilter = sal_False;
+    ::rtl::OUString                 aForcedInputFilter;
 
     for ( p = aDispatchRequestsList.begin(); p != aDispatchRequestsList.end(); p++ )
     {
@@ -192,6 +194,15 @@ sal_Bool DispatchWatcher::executeDispatc
         if ( aDispatchRequest.aPreselectedFactory.getLength() )
             nCount++;
 
+        // Set Input Filter
+        if ( aDispatchRequest.aRequestType == REQUEST_INFILTER )
+        {
+            bSetInputFilter = sal_True;
+            aForcedInputFilter = aDispatchRequest.aURL;
+            OfficeIPCThread::RequestsCompleted( 1 );
+            continue;
+        }
+
         // we need more properties for a print/print to request
         if ( aDispatchRequest.aRequestType == REQUEST_PRINT ||
              aDispatchRequest.aRequestType == REQUEST_PRINTTO ||
@@ -378,8 +389,16 @@ sal_Bool DispatchWatcher::executeDispatc
                 aArgs[nIndex].Value <<= sal_True;
             }
 
-            // This is a synchron loading of a component so we don't have to deal with our statusChanged listener mechanism.
+            // Force input filter, if possible
+            if( bSetInputFilter )
+            {
+                sal_Int32 nIndex = aArgs.getLength();
+                aArgs.realloc(nIndex+1);
+                aArgs[nIndex].Name=OUString::createFromAscii("FilterName");
+                aArgs[nIndex].Value <<= aForcedInputFilter;
+            }
 
+            // This is a synchron loading of a component so we don't have to deal with our statusChanged listener mechanism.
             try
             {
                 xDoc = Reference < XPrintable >( ::comphelper::SynchronousDispatch::dispatch( xDesktop, aName, aTarget, 0, aArgs ), UNO_QUERY );
--- desktop/source/app/dispatchwatcher.hxx.old	2010-07-30 12:57:03.000000000 +0200
+++ desktop/source/app/dispatchwatcher.hxx	2010-07-30 12:57:38.000000000 +0200
@@ -77,6 +77,7 @@ class DispatchWatcher : public ::cppu::W
             REQUEST_FORCEOPEN,
             REQUEST_FORCENEW,
             REQUEST_CONVERSION,
+            REQUEST_INFILTER,
             REQUEST_BATCHPRINT
         };
 
--- desktop/source/app/officeipcthread.cxx.old	2010-07-30 12:57:03.000000000 +0200
+++ desktop/source/app/officeipcthread.cxx	2010-07-30 12:57:38.000000000 +0200
@@ -1011,6 +1011,7 @@ sal_Bool OfficeIPCThread::ExecuteCmdLine
 
     rtl::OUString aEmpty;
     // Create dispatch list for dispatch watcher
+    AddToDispatchList( aDispatchList, aRequest.aCwdUrl, aRequest.aInFilter, DispatchWatcher::REQUEST_INFILTER, aEmpty, aRequest.aModule );
     AddToDispatchList( aDispatchList, aRequest.aCwdUrl, aRequest.aOpenList, DispatchWatcher::REQUEST_OPEN, aEmpty, aRequest.aModule );
     AddToDispatchList( aDispatchList, aRequest.aCwdUrl, aRequest.aViewList, DispatchWatcher::REQUEST_VIEW, aEmpty, aRequest.aModule );
     AddToDispatchList( aDispatchList, aRequest.aCwdUrl, aRequest.aStartList, DispatchWatcher::REQUEST_START, aEmpty, aRequest.aModule );
--- desktop/source/app/officeipcthread.hxx.old	2010-07-30 12:57:03.000000000 +0200
+++ desktop/source/app/officeipcthread.hxx	2010-07-30 12:57:38.000000000 +0200
@@ -69,6 +69,7 @@ struct ProcessDocumentsRequest
     ::rtl::OUString aConversionList;
     ::rtl::OUString aConversionParams;
     ::rtl::OUString aConversionOut;
+    ::rtl::OUString aInFilter;
     ::osl::Condition *pcProcessed;  // pointer condition to be set when the request has been processed
 };
 
