---
 sw/source/ui/inc/view.hxx        |    1 +
 sw/source/ui/uiview/viewmdi.cxx  |   33 +++++++++++++++++++++++++++++++++
 sw/source/ui/uiview/viewport.cxx |    5 +++--
 3 files changed, 37 insertions(+), 2 deletions(-)

diff --git sw/source/ui/inc/view.hxx sw/source/ui/inc/view.hxx
index 039f9ff..08e27ac 100644
--- sw/source/ui/inc/view.hxx
+++ sw/source/ui/inc/view.hxx
@@ -330,6 +330,7 @@ class SW_DLLPUBLIC SwView: public SfxViewShell
     SW_DLLPRIVATE int               _CreateScrollbar( BOOL bHori );
     SW_DLLPRIVATE DECL_LINK( ScrollHdl, SwScrollbar * );
     SW_DLLPRIVATE DECL_LINK( EndScrollHdl, SwScrollbar * );
+    SW_DLLPRIVATE DECL_LINK( WindowChildEventListener, VclSimpleEvent* );
     SW_DLLPRIVATE BOOL			UpdateScrollbars();
     SW_DLLPRIVATE void			CalcVisArea( const Size &rPixelSz );
 
diff --git sw/source/ui/uiview/viewmdi.cxx sw/source/ui/uiview/viewmdi.cxx
index f8212d8..2394c11 100644
--- sw/source/ui/uiview/viewmdi.cxx
+++ sw/source/ui/uiview/viewmdi.cxx
@@ -308,6 +308,35 @@ void SwView::SetViewLayout( USHORT nColumns, bool bBookMode, BOOL bViewOnly )
  * Scrollbar - Handler
  */
 
+IMPL_LINK( SwView, WindowChildEventListener, VclSimpleEvent*, pEvent )
+{
+    DBG_ASSERT( pEvent && pEvent->ISA( VclWindowEvent ), "Unknown WindowEvent!" );
+    if ( pEvent && pEvent->ISA( VclWindowEvent ) )
+    {
+        VclWindowEvent *pVclEvent = static_cast< VclWindowEvent * >( pEvent );
+        DBG_ASSERT( pVclEvent->GetWindow(), "Window???" );
+    Window* pChildWin = static_cast< Window* >( pVclEvent->GetData() );
+
+        switch ( pVclEvent->GetId() )
+        {
+        case VCLEVENT_WINDOW_HIDE:
+      if( pChildWin == pHScrollbar )
+        ShowHScrollbar( FALSE );
+      else if( pChildWin == pVScrollbar )
+        ShowVScrollbar( FALSE );
+      break;
+        case VCLEVENT_WINDOW_SHOW:
+      if( pChildWin == pHScrollbar )
+        ShowHScrollbar( TRUE );
+      else if( pChildWin == pVScrollbar )
+        ShowVScrollbar( TRUE );
+      break;
+    }
+    }
+
+    return 0;
+}
+
 int SwView::_CreateScrollbar( BOOL bHori )
 {
     Window *pMDI = &GetViewFrame()->GetWindow();
@@ -328,6 +357,10 @@ int SwView::_CreateScrollbar( BOOL bHori )
 
     (*ppScrollbar)->EnableDrag( TRUE );
 
+    (*ppScrollbar)->SetAuto( TRUE );
+
+    pMDI->AddChildEventListener( LINK( this, SwView, WindowChildEventListener ));
+
     if(GetWindow())
         InvalidateBorder();
 
diff --git sw/source/ui/uiview/viewport.cxx sw/source/ui/uiview/viewport.cxx
index 579aea6..06cc49b 100644
--- sw/source/ui/uiview/viewport.cxx
+++ sw/source/ui/uiview/viewport.cxx
@@ -1136,6 +1136,7 @@ void SwView::OuterResizePixel( const Point &rOfst, const Size &rSize )
             {
                 bShowH = pVOpt->IsViewHScrollBar();
                 bShowV = pVOpt->IsViewVScrollBar();
+        bAuto = bHAuto = TRUE;
                 break;
             }
         }
@@ -1157,10 +1158,10 @@ void SwView::OuterResizePixel( const Point &rOfst, const Size &rSize )
     {
         bShowH = bShowV = bHAuto = bAuto = FALSE;
     }
-    if(pHScrollbar->IsVisible(FALSE) != bShowH)
+    if(pHScrollbar->IsVisible(FALSE) != bShowH && !bHAuto)
         ShowHScrollbar(bShowH);
     pHScrollbar->SetAuto( bHAuto );
-    if(pVScrollbar->IsVisible(FALSE) != bShowV)
+    if(pVScrollbar->IsVisible(FALSE) != bShowV && !bAuto)
         ShowVScrollbar(bShowV);
     pVScrollbar->SetAuto(bAuto);
 
-- 
1.7.0.1

