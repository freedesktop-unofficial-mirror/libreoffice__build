diff --git sc/inc/column.hxx sc/inc/column.hxx
index ec87323..9854109 100644
--- sc/inc/column.hxx
+++ sc/inc/column.hxx
@@ -239,7 +239,9 @@ public:
 
                 //	TRUE = Zahlformat gesetzt
     BOOL		SetString( SCROW nRow, SCTAB nTab, const String& rString,
-                           formula::FormulaGrammar::AddressConvention conv = formula::FormulaGrammar::CONV_OOO );
+						   formula::FormulaGrammar::AddressConvention conv = formula::FormulaGrammar::CONV_OOO,
+                           SvNumberFormatter* pFormatter = NULL,
+                           bool bDetectNumberFormat = true );
     void		SetValue( SCROW nRow, const double& rVal);
     void		SetError( SCROW nRow, const USHORT nError);
 
diff --git sc/inc/document.hxx sc/inc/document.hxx
index 14d606e..e41d15c 100644
--- sc/inc/document.hxx
+++ sc/inc/document.hxx
@@ -716,7 +716,9 @@ public:
     SC_DLLPUBLIC void			PutCell(SCCOL nCol, SCROW nRow, SCTAB nTab, ScBaseCell* pCell,
                             ULONG nFormatIndex, BOOL bForceTab = FALSE);
                     //	return TRUE = Zahlformat gesetzt
-    SC_DLLPUBLIC BOOL           SetString( SCCOL nCol, SCROW nRow, SCTAB nTab, const String& rString );
+    SC_DLLPUBLIC BOOL           SetString(
+        SCCOL nCol, SCROW nRow, SCTAB nTab, const String& rString, 
+        SvNumberFormatter* pFormatter = NULL, bool bDetectNumberFormat = true );
     SC_DLLPUBLIC void           SetValue( SCCOL nCol, SCROW nRow, SCTAB nTab, const double& rVal );
     void 			SetError( SCCOL nCol, SCROW nRow, SCTAB nTab, const USHORT nError);
 
diff --git sc/inc/filter.hxx sc/inc/filter.hxx
index 4e72620..bcb15f1 100644
--- sc/inc/filter.hxx
+++ sc/inc/filter.hxx
@@ -42,6 +42,7 @@ class SvStream;
 class ScAddress;
 class ScDocument;
 class ScRange;
+class SvNumberFormatter;
 
 // Return-Werte Im-/Exportfilter	(ULONG)
 
@@ -92,7 +93,9 @@ class ScEEAbsImport {
     virtual ~ScEEAbsImport() {}
     virtual ULONG   Read( SvStream& rStream, const String& rBaseURL ) = 0;
     virtual ScRange GetRange() = 0;
-    virtual void    WriteToDocument( BOOL bSizeColsRows = FALSE, double nOutputFactor = 1.0 ) = 0;
+    virtual void    WriteToDocument( 
+        BOOL bSizeColsRows = FALSE, double nOutputFactor = 1.0, 
+        SvNumberFormatter* pFormatter = NULL, bool bConvertDate = true ) = 0;
 };
 
 class ScFormatFilterPlugin {
@@ -109,7 +112,8 @@ class ScFormatFilterPlugin {
     virtual FltError ScImportDif( SvStream&, ScDocument*, const ScAddress& rInsPos,
                  const CharSet eSrc = RTL_TEXTENCODING_DONTKNOW, UINT32 nDifOption = SC_DIFOPT_EXCEL ) = 0;
     virtual FltError ScImportRTF( SvStream&, const String& rBaseURL, ScDocument*, ScRange& rRange ) = 0;
-    virtual FltError ScImportHTML( SvStream&, const String& rBaseURL, ScDocument*, ScRange& rRange, double nOutputFactor = 1.0, BOOL bCalcWidthHeight = TRUE ) = 0;
+    virtual FltError ScImportHTML( SvStream&, const String& rBaseURL, ScDocument*, ScRange& rRange, double nOutputFactor = 1.0, 
+                                   BOOL bCalcWidthHeight = TRUE, SvNumberFormatter* pFormatter = NULL, bool bConvertDate = true ) = 0;
 
     // various import helpers
     virtual ScEEAbsImport *CreateRTFImport( ScDocument* pDoc, const ScRange& rRange ) = 0;
diff --git sc/inc/optutil.hxx sc/inc/optutil.hxx
index ae7e8f5..73b29d6 100644
--- sc/inc/optutil.hxx
+++ sc/inc/optutil.hxx
@@ -33,6 +33,7 @@
 
 #include <unotools/configitem.hxx>
 #include <tools/link.hxx>
+#include "scdllapi.h"
 
 
 class ScOptionsUtil
@@ -44,13 +45,13 @@ public:
 
 //	ConfigItem for classes that use items from several sub trees
 
-class ScLinkConfigItem : public utl::ConfigItem
+class SC_DLLPUBLIC ScLinkConfigItem : public utl::ConfigItem
 {
     Link	aCommitLink;
 
 public:
-            ScLinkConfigItem( const rtl::OUString rSubTree );
-            ScLinkConfigItem( const rtl::OUString rSubTree, sal_Int16 nMode );
+            ScLinkConfigItem( const rtl::OUString& rSubTree );
+            ScLinkConfigItem( const rtl::OUString& rSubTree, sal_Int16 nMode );
     void	SetCommitLink( const Link& rLink );
 
     virtual void	Notify( const com::sun::star::uno::Sequence<rtl::OUString>& aPropertyNames );
diff --git sc/inc/sc.hrc sc/inc/sc.hrc
index 3e0a1f8..d67b625 100644
--- sc/inc/sc.hrc
+++ sc/inc/sc.hrc
@@ -1638,8 +1638,9 @@
 #define RID_SCDLG_RETYPEPASS            (SC_DIALOGS_START + 150)
 #define RID_SCDLG_RETYPEPASS_INPUT      (SC_DIALOGS_START + 151)
 #define RID_POPUP_FILTER                (SC_DIALOGS_START + 152)
+#define RID_SCDLG_TEXT_IMPORT_OPTIONS   (SC_DIALOGS_START + 153)
 
-#define SC_DIALOGS_END                  (SC_DIALOGS_START + 153)
+#define SC_DIALOGS_END                  (SC_DIALOGS_START + 154)
 
 #ifndef STD_MASKCOLOR
 #define STD_MASKCOLOR Color { Red = 0xFF00; Green = 0x0000; Blue = 0xFF00; }
diff --git sc/inc/scabstdlg.hxx sc/inc/scabstdlg.hxx
index de99888..f5a40ee 100644
--- sc/inc/scabstdlg.hxx
+++ sc/inc/scabstdlg.hxx
@@ -41,6 +41,7 @@
 #include "sc.hrc"
 #include "global.hxx"
 #include "pivot.hxx"
+#include "i18npool/lang.h"
 
 #include <tabvwsh.hxx>
 
@@ -297,6 +298,14 @@ class AbstractScImportOptionsDlg : public VclAbstractDialog  //add for ScImportO
 public:
     virtual void GetImportOptions( ScImportOptions& rOptions ) const = 0;
 };
+
+class AbstractScTextImportOptionsDlg : public VclAbstractDialog //add for ScLangChooserDlg
+{
+public:
+    virtual LanguageType GetLanguageType() const = 0;
+    virtual bool IsDateConversionSet() const = 0;
+};
+
 //-------Scabstract fractory ---------------------------
 class ScAbstractDialogFactory
 {
@@ -307,6 +316,8 @@ public:
                                                                     SvStream* pInStream, int nId,
                                                                     sal_Unicode cSep = '\t') = 0;
 
+    virtual     AbstractScTextImportOptionsDlg * CreateScTextImportOptionsDlg( Window* pParent, int nId ) = 0;
+
     virtual		AbstractScAutoFormatDlg * CreateScAutoFormatDlg( Window*					pParent, //add for ScAutoFormatDlg
                                                                 ScAutoFormat*				pAutoFormat,
                                                                 const ScAutoFormatData*    pSelFormatData,
diff --git sc/inc/stringutil.hxx sc/inc/stringutil.hxx
new file mode 100644
index 0000000..4ca8629
--- /dev/null
+++ sc/inc/stringutil.hxx
@@ -0,0 +1,56 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: table.hxx,v $
+ * $Revision: 1.35 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef SC_STRINGUTIL_HXX
+#define SC_STRINGUTIL_HXX
+
+#include "rtl/ustring.hxx"
+
+class ScStringUtil
+{
+public:
+    /** 
+     * Check if a given string is a simple decimal number (e.g. 12.345). We 
+     * don't do any elaborate parsing here; we only check for the simplest 
+     * case of decimal number format. 
+     *
+     * @param rStr string to parse
+     * @param dsep decimal separator
+     * @param gsep group separator (aka thousands separator)
+     * @param rVal value of successfully parsed number
+     * 
+     * @return true if the string is a valid number, false otherwise.
+     */
+    static bool parseSimpleNumber(
+        const ::rtl::OUString& rStr, sal_Unicode dsep, sal_Unicode gsep, double& rVal);
+};
+
+
+#endif
diff --git sc/inc/table.hxx sc/inc/table.hxx
index 715e119..f8d8609 100644
--- sc/inc/table.hxx
+++ sc/inc/table.hxx
@@ -260,7 +260,8 @@ public:
     void		PutCell( SCCOL nCol, SCROW nRow, ScBaseCell* pCell );
     void		PutCell(SCCOL nCol, SCROW nRow, ULONG nFormatIndex, ScBaseCell* pCell);
                 //	TRUE = Zahlformat gesetzt
-    BOOL		SetString( SCCOL nCol, SCROW nRow, SCTAB nTab, const String& rString );
+	BOOL		SetString( SCCOL nCol, SCROW nRow, SCTAB nTab, const String& rString, 
+                           SvNumberFormatter* pFormatter = NULL, bool bDetectNumberFormat = true );
     void		SetValue( SCCOL nCol, SCROW nRow, const double& rVal );
     void 		SetError( SCCOL nCol, SCROW nRow, USHORT nError);
 
diff --git sc/source/core/data/column3.cxx sc/source/core/data/column3.cxx
index b2c954a..242c5c0 100644
--- sc/source/core/data/column3.cxx
+++ sc/source/core/data/column3.cxx
@@ -54,6 +54,13 @@
 #include "markdata.hxx"
 #include "detfunc.hxx"			// fuer Notizen bei DeleteRange
 #include "postit.hxx"
+#include "stringutil.hxx"
+
+#include <com/sun/star/i18n/LocaleDataItem.hpp>
+
+using ::com::sun::star::i18n::LocaleDataItem;
+using ::rtl::OUString;
+using ::rtl::OUStringBuffer;
 
 // Err527 Workaround
 extern const ScFormulaCell* pLastFormulaTreeTop;	// in cellform.cxx
@@ -1244,7 +1251,8 @@ void ScColumn::StartListeningInArea( SCROW nRow1, SCROW nRow2 )
 
 //	TRUE = Zahlformat gesetzt
 BOOL ScColumn::SetString( SCROW nRow, SCTAB nTabP, const String& rString,
-                          formula::FormulaGrammar::AddressConvention eConv )
+                          formula::FormulaGrammar::AddressConvention eConv,
+                          SvNumberFormatter* pFormatter, bool bDetectNumberFormat )
 {
     BOOL bNumFmtSet = FALSE;
     if (VALIDROW(nRow))
@@ -1256,7 +1264,8 @@ BOOL ScColumn::SetString( SCROW nRow, SCTAB nTabP, const String& rString,
             double nVal;
             sal_uInt32 nIndex, nOldIndex = 0;
             sal_Unicode cFirstChar;
-            SvNumberFormatter* pFormatter = pDocument->GetFormatTable();
+            if (!pFormatter)
+                pFormatter = pDocument->GetFormatTable();
             SfxObjectShell* pDocSh = pDocument->GetDocumentShell();
             if ( pDocSh )
                 bIsLoading = pDocSh->IsLoading();
@@ -1323,46 +1332,78 @@ BOOL ScColumn::SetString( SCROW nRow, SCTAB nTabP, const String& rString,
                     if ( !bIsText )
                         nIndex = nOldIndex = pFormatter->GetStandardIndex();
                 }
-                if ( !bIsText &&
-                        pFormatter->IsNumberFormat(rString, nIndex, nVal) )
-                {												// Zahl
-                    pNewCell = new ScValueCell( nVal );
-                    if ( nIndex != nOldIndex)
+
+                do
+                {
+                    if (bIsText)
+                        break;
+
+                    if (bDetectNumberFormat)
                     {
-                        // #i22345# New behavior: Apply the detected number format only if
-                        // the old one was the default number, date, time or boolean format.
-                        // Exception: If the new format is boolean, always apply it.
+                        if (!pFormatter->IsNumberFormat(rString, nIndex, nVal))
+                            break;
 
-                        BOOL bOverwrite = FALSE;
-                        const SvNumberformat* pOldFormat = pFormatter->GetEntry( nOldIndex );
-                        if ( pOldFormat )
+                        pNewCell = new ScValueCell( nVal );
+                        if ( nIndex != nOldIndex)
                         {
-                            short nOldType = pOldFormat->GetType() & ~NUMBERFORMAT_DEFINED;
-                            if ( nOldType == NUMBERFORMAT_NUMBER || nOldType == NUMBERFORMAT_DATE ||
-                                 nOldType == NUMBERFORMAT_TIME || nOldType == NUMBERFORMAT_LOGICAL )
+                            // #i22345# New behavior: Apply the detected number format only if
+                            // the old one was the default number, date, time or boolean format.
+                            // Exception: If the new format is boolean, always apply it.
+
+                            BOOL bOverwrite = FALSE;
+                            const SvNumberformat* pOldFormat = pFormatter->GetEntry( nOldIndex );
+                            if ( pOldFormat )
                             {
-                                if ( nOldIndex == pFormatter->GetStandardFormat(
-                                                    nOldType, pOldFormat->GetLanguage() ) )
+                                short nOldType = pOldFormat->GetType() & ~NUMBERFORMAT_DEFINED;
+                                if ( nOldType == NUMBERFORMAT_NUMBER || nOldType == NUMBERFORMAT_DATE ||
+                                     nOldType == NUMBERFORMAT_TIME || nOldType == NUMBERFORMAT_LOGICAL )
                                 {
-                                    bOverwrite = TRUE;      // default of these types can be overwritten
+                                    if ( nOldIndex == pFormatter->GetStandardFormat(
+                                                        nOldType, pOldFormat->GetLanguage() ) )
+                                    {
+                                        bOverwrite = TRUE;      // default of these types can be overwritten
+                                    }
                                 }
                             }
-                        }
-                        if ( !bOverwrite && pFormatter->GetType( nIndex ) == NUMBERFORMAT_LOGICAL )
-                        {
-                            bOverwrite = TRUE;              // overwrite anything if boolean was detected
-                        }
+                            if ( !bOverwrite && pFormatter->GetType( nIndex ) == NUMBERFORMAT_LOGICAL )
+                            {
+                                bOverwrite = TRUE;              // overwrite anything if boolean was detected
+                            }
 
-                        if ( bOverwrite )
-                        {
-                            ApplyAttr( nRow, SfxUInt32Item( ATTR_VALUE_FORMAT,
-                                (UINT32) nIndex) );
-                            bNumFmtSet = TRUE;
+                            if ( bOverwrite )
+                            {
+                                ApplyAttr( nRow, SfxUInt32Item( ATTR_VALUE_FORMAT,
+                                    (UINT32) nIndex) );
+                                bNumFmtSet = TRUE;
+                            }
                         }
                     }
+                    else
+                    {
+                        // Only check if the string is a regular number.
+                        const LocaleDataWrapper* pLocale = pFormatter->GetLocaleData();
+                        if (!pLocale)
+                            break;
+                        
+                        LocaleDataItem aLocaleItem = pLocale->getLocaleItem();
+                        const OUString& rDecSep = aLocaleItem.decimalSeparator;
+                        const OUString& rGroupSep = aLocaleItem.thousandSeparator;
+                        if (rDecSep.getLength() != 1 || rGroupSep.getLength() != 1)
+                            break;
+
+                        sal_Unicode dsep = rDecSep.getStr()[0];
+                        sal_Unicode gsep = rGroupSep.getStr()[0];
+
+                        if (!ScStringUtil::parseSimpleNumber(rString, dsep, gsep, nVal))
+                            break;
+
+                        pNewCell = new ScValueCell(nVal);
+                    }
                 }
-                else											// Text
-                    pNewCell = new ScStringCell( rString );
+                while (false);
+
+                if (!pNewCell)
+                    pNewCell = new ScStringCell(rString);
             }
         }
 
diff --git sc/source/core/data/document.cxx sc/source/core/data/document.cxx
index efb9693..6d6b8d1 100644
--- sc/source/core/data/document.cxx
+++ sc/source/core/data/document.cxx
@@ -2359,10 +2359,11 @@ void ScDocument::PutCell( const ScAddress& rPos, ScBaseCell* pCell, BOOL bForceT
 }
 
 
-BOOL ScDocument::SetString( SCCOL nCol, SCROW nRow, SCTAB nTab, const String& rString )
+BOOL ScDocument::SetString( SCCOL nCol, SCROW nRow, SCTAB nTab, const String& rString, 
+                            SvNumberFormatter* pFormatter, bool bDetectNumberFormat )
 {
-    if ( ValidTab(nTab) && pTab[nTab] )
-        return pTab[nTab]->SetString( nCol, nRow, nTab, rString );
+	if ( ValidTab(nTab) && pTab[nTab] )
+		return pTab[nTab]->SetString( nCol, nRow, nTab, rString, pFormatter, bDetectNumberFormat );
     else
         return FALSE;
 }
diff --git sc/source/core/data/table2.cxx sc/source/core/data/table2.cxx
index eac760e..29412c2 100644
--- sc/source/core/data/table2.cxx
+++ sc/source/core/data/table2.cxx
@@ -846,10 +846,12 @@ void ScTable::PutCell( const ScAddress& rPos, ScBaseCell* pCell )
 //UNUSED2009-05 }
 
 
-BOOL ScTable::SetString( SCCOL nCol, SCROW nRow, SCTAB nTabP, const String& rString )
+BOOL ScTable::SetString( SCCOL nCol, SCROW nRow, SCTAB nTabP, const String& rString, 
+                         SvNumberFormatter* pFormatter, bool bDetectNumberFormat )
 {
     if (ValidColRow(nCol,nRow))
-        return aCol[nCol].SetString( nRow, nTabP, rString );
+        return aCol[nCol].SetString( 
+            nRow, nTabP, rString, pDocument->GetAddressConvention(), pFormatter, bDetectNumberFormat );
     else
         return FALSE;
 }
diff --git sc/source/core/tool/makefile.mk sc/source/core/tool/makefile.mk
index ac0aa23..0128310 100644
--- sc/source/core/tool/makefile.mk
+++ sc/source/core/tool/makefile.mk
@@ -108,6 +108,7 @@ SLOFILES =  \
         $(SLO)$/refupdat.obj \
         $(SLO)$/scmatrix.obj \
         $(SLO)$/sctictac.obj \
+		$(SLO)$/stringutil.obj \
         $(SLO)$/subtotal.obj \
         $(SLO)$/token.obj \
         $(SLO)$/unitconv.obj \
@@ -132,6 +133,7 @@ EXCEPTIONSFILES= \
         $(SLO)$/lookupcache.obj \
         $(SLO)$/prnsave.obj \
         $(SLO)$/reftokenhelper.obj \
+		$(SLO)$/stringutil.obj \
         $(SLO)$/token.obj
 
 # [kh] POWERPC compiler problem
diff --git sc/source/core/tool/optutil.cxx sc/source/core/tool/optutil.cxx
index 69e720c..1ee7d04 100644
--- sc/source/core/tool/optutil.cxx
+++ sc/source/core/tool/optutil.cxx
@@ -54,12 +54,12 @@ BOOL ScOptionsUtil::IsMetricSystem()
 
 //------------------------------------------------------------------
 
-ScLinkConfigItem::ScLinkConfigItem( const rtl::OUString rSubTree ) :
+ScLinkConfigItem::ScLinkConfigItem( const rtl::OUString& rSubTree ) :
     ConfigItem( rSubTree )
 {
 }
 
-ScLinkConfigItem::ScLinkConfigItem( const rtl::OUString rSubTree, sal_Int16 nMode ) :
+ScLinkConfigItem::ScLinkConfigItem( const rtl::OUString& rSubTree, sal_Int16 nMode ) :
     ConfigItem( rSubTree, nMode )
 {
 }
diff --git sc/source/core/tool/stringutil.cxx sc/source/core/tool/stringutil.cxx
new file mode 100644
index 0000000..ae6247f
--- /dev/null
+++ sc/source/core/tool/stringutil.cxx
@@ -0,0 +1,131 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: table.hxx,v $
+ * $Revision: 1.35 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_sc.hxx"
+
+// System - Includes -----------------------------------------------------
+
+#include "stringutil.hxx"
+#include "rtl/ustrbuf.hxx"
+#include "rtl/math.hxx"
+
+using ::rtl::OUString;
+using ::rtl::OUStringBuffer;
+
+bool ScStringUtil::parseSimpleNumber(
+    const OUString& rStr, sal_Unicode dsep, sal_Unicode gsep, double& rVal)
+{
+    if (gsep == 0x00A0)
+        // unicode space to ascii space
+        gsep = 0x0020;
+
+    OUStringBuffer aBuf;
+    sal_Int32 n = rStr.getLength();
+    const sal_Unicode* p = rStr.getStr();
+    sal_Int32 nPosDSep = -1, nPosGSep = -1;
+    sal_uInt32 nDigitCount = 0;
+
+    for (sal_Int32 i = 0; i < n; ++i)
+    {
+        sal_Unicode c = p[i];
+        if (c == 0x00A0)
+            // unicode space to ascii space
+            c = 0x0020;
+
+        if (sal_Unicode('0') <= c && c <= sal_Unicode('9'))
+        {
+            // this is a digit.
+            aBuf.append(c);
+            ++nDigitCount;
+        }
+        else if (c == dsep)
+        {
+            // this is a decimal separator.
+
+            if (nPosDSep >= 0)
+                // a second decimal separator -> not a valid number.
+                return false;
+
+            if (nPosGSep >= 0 && i - nPosGSep != 4)
+                // the number has a group separator and the decimal sep is not
+                // positioned correctly.
+                return false;
+
+            nPosDSep = i;
+            nPosGSep = -1;
+            aBuf.append(c);
+            nDigitCount = 0;
+        }
+        else if (c == gsep)
+        {
+            // this is a group (thousand) separator.
+
+            if (i == 0)
+                // not allowed as the first character.
+                return false;
+
+            if (nPosDSep >= 0)
+                // not allowed after the decimal separator.
+                return false;
+
+            if (nPosGSep >= 0 && nDigitCount != 3)
+                // must be exactly 3 digits since the last group separator.
+                return false;
+
+            nPosGSep = i;
+            nDigitCount = 0;
+        }
+        else if (c == sal_Unicode('-') || c == sal_Unicode('+'))
+        {
+            // A sign must be the first character if it's given.
+            if (i == 0)
+                aBuf.append(c);
+            else
+                return false;
+        }
+        else
+            return false;
+    }
+
+    // finished parsing the number.
+
+    if (nPosGSep >= 0 && nDigitCount != 3)
+        // must be exactly 3 digits since the last group separator.
+        return false;
+
+    rtl_math_ConversionStatus eStatus = rtl_math_ConversionStatus_Ok;
+    sal_Int32 nParseEnd = 0;
+    rVal = ::rtl::math::stringToDouble(aBuf.makeStringAndClear(), dsep, gsep, &eStatus, &nParseEnd);
+    if (eStatus != rtl_math_ConversionStatus_Ok)
+        return false;
+
+    return true;
+}
diff --git sc/source/filter/html/htmlimp.cxx sc/source/filter/html/htmlimp.cxx
index 0ae9d9a..a0a0af1 100644
--- sc/source/filter/html/htmlimp.cxx
+++ sc/source/filter/html/htmlimp.cxx
@@ -63,13 +63,14 @@
 //------------------------------------------------------------------------
 
 FltError ScFormatFilterPluginImpl::ScImportHTML( SvStream &rStream, const String& rBaseURL, ScDocument *pDoc,
-        ScRange& rRange, double nOutputFactor, BOOL bCalcWidthHeight )
+		ScRange& rRange, double nOutputFactor, BOOL bCalcWidthHeight, SvNumberFormatter* pFormatter,
+        bool bConvertDate )
 {
     ScHTMLImport aImp( pDoc, rBaseURL, rRange, bCalcWidthHeight );
     FltError nErr = (FltError) aImp.Read( rStream, rBaseURL );
     ScRange aR = aImp.GetRange();
     rRange.aEnd = aR.aEnd;
-    aImp.WriteToDocument( TRUE, nOutputFactor );
+	aImp.WriteToDocument( TRUE, nOutputFactor, pFormatter, bConvertDate );
     return nErr;
 }
 
@@ -137,9 +138,10 @@ void ScHTMLImport::InsertRangeName( ScDocument* pDoc, const String& rName, const
         delete pRangeData;
 }
 
-void ScHTMLImport::WriteToDocument( BOOL bSizeColsRows, double nOutputFactor )
+void ScHTMLImport::WriteToDocument( 
+    BOOL bSizeColsRows, double nOutputFactor, SvNumberFormatter* pFormatter, bool bConvertDate )
 {
-    ScEEImport::WriteToDocument( bSizeColsRows, nOutputFactor );
+	ScEEImport::WriteToDocument( bSizeColsRows, nOutputFactor, pFormatter, bConvertDate );
 
     const ScHTMLParser* pParser = GetParser();
     const ScHTMLTable* pGlobTable = pParser->GetGlobalTable();
diff --git sc/source/filter/inc/eeimport.hxx sc/source/filter/inc/eeimport.hxx
index fef4486..32d7d0a 100644
--- sc/source/filter/inc/eeimport.hxx
+++ sc/source/filter/inc/eeimport.hxx
@@ -63,7 +63,9 @@ public:
     virtual ULONG    Read( SvStream& rStream, const String& rBaseURL );
     virtual ScRange  GetRange() { return maRange; }
     virtual void     WriteToDocument( BOOL bSizeColsRows = FALSE,
-                                      double nOutputFactor = 1.0 );
+                                      double nOutputFactor = 1.0,
+                                      SvNumberFormatter* pFormatter = NULL,
+                                      bool bConvertDate = true );
 };
 
 #endif
diff --git sc/source/filter/inc/ftools.hxx sc/source/filter/inc/ftools.hxx
index 7e71708..5c05b27 100644
--- sc/source/filter/inc/ftools.hxx
+++ sc/source/filter/inc/ftools.hxx
@@ -522,7 +522,9 @@ class ScFormatFilterPluginImpl : public ScFormatFilterPlugin {
     virtual FltError ScImportDif( SvStream&, ScDocument*, const ScAddress& rInsPos,
                  const CharSet eSrc = RTL_TEXTENCODING_DONTKNOW, UINT32 nDifOption = SC_DIFOPT_EXCEL );
     virtual FltError ScImportRTF( SvStream&, const String& rBaseURL, ScDocument*, ScRange& rRange );
-    virtual FltError ScImportHTML( SvStream&, const String& rBaseURL, ScDocument*, ScRange& rRange, double nOutputFactor = 1.0, BOOL bCalcWidthHeight = TRUE );
+    virtual FltError ScImportHTML( SvStream&, const String& rBaseURL, ScDocument*, ScRange& rRange, 
+                                   double nOutputFactor = 1.0, BOOL bCalcWidthHeight = TRUE, 
+                                   SvNumberFormatter* pFormatter = NULL, bool bConvertDate = true );
 
     virtual ScEEAbsImport *CreateRTFImport( ScDocument* pDoc, const ScRange& rRange );
     virtual ScEEAbsImport *CreateHTMLImport( ScDocument* pDocP, const String& rBaseURL, const ScRange& rRange, BOOL bCalcWidthHeight );
diff --git sc/source/filter/inc/htmlimp.hxx sc/source/filter/inc/htmlimp.hxx
index 9314458..a20e044 100644
--- sc/source/filter/inc/htmlimp.hxx
+++ sc/source/filter/inc/htmlimp.hxx
@@ -45,7 +45,8 @@ public:
     virtual ~ScHTMLImport();
     const ScHTMLParser* GetParser() const { return (ScHTMLParser*)mpParser; }
 
-    virtual void		WriteToDocument( BOOL bSizeColsRows = FALSE, double nOutputFactor = 1.0 );
+	virtual void		WriteToDocument( BOOL bSizeColsRows = FALSE, double nOutputFactor = 1.0, 
+                                         SvNumberFormatter* pFormatter = NULL, bool bConvertDate = true );
 
     static String		GetHTMLRangeNameList( ScDocument* pDoc, const String& rOrigName );
 };
diff --git sc/source/filter/rtf/eeimpars.cxx sc/source/filter/rtf/eeimpars.cxx
index 872b0a5..e78e371 100644
--- sc/source/filter/rtf/eeimpars.cxx
+++ sc/source/filter/rtf/eeimpars.cxx
@@ -129,7 +129,7 @@ ULONG ScEEImport::Read( SvStream& rStream, const String& rBaseURL )
 }
 
 
-void ScEEImport::WriteToDocument( BOOL bSizeColsRows, double nOutputFactor )
+void ScEEImport::WriteToDocument( BOOL bSizeColsRows, double nOutputFactor, SvNumberFormatter* pFormatter, bool bConvertDate )
 {
     ScProgress* pProgress = new ScProgress( mpDoc->GetDocumentShell(),
         ScGlobal::GetRscString( STR_LOAD_DOC ), mpParser->Count() );
@@ -150,7 +150,8 @@ void ScEEImport::WriteToDocument( BOOL bSizeColsRows, double nOutputFactor )
     nLastMergedRow = SCROW_MAX;
     BOOL bHasGraphics = FALSE;
     ScEEParseEntry* pE;
-    SvNumberFormatter* pFormatter = mpDoc->GetFormatTable();
+    if (!pFormatter)
+        pFormatter = mpDoc->GetFormatTable();
     bool bNumbersEnglishUS = (pFormatter->GetLanguage() != LANGUAGE_ENGLISH_US);
     if (bNumbersEnglishUS)
     {
@@ -335,7 +336,7 @@ void ScEEImport::WriteToDocument( BOOL bSizeColsRows, double nOutputFactor )
                 else if ( !pE->aSel.HasRange() )
                 {
                     // maybe ALT text of IMG or similar
-                    mpDoc->SetString( nCol, nRow, nTab, pE->aAltText );
+                    mpDoc->SetString( nCol, nRow, nTab, pE->aAltText, pFormatter );
                     // wenn SelRange komplett leer kann nachfolgender Text im gleichen Absatz liegen!
                 }
                 else
@@ -380,7 +381,7 @@ void ScEEImport::WriteToDocument( BOOL bSizeColsRows, double nOutputFactor )
                     if (bNumbersEnglishUS && !bEnUsRecognized)
                         mpDoc->PutCell( nCol, nRow, nTab, new ScStringCell( aStr));
                     else
-                        mpDoc->SetString( nCol, nRow, nTab, aStr );
+                        mpDoc->SetString( nCol, nRow, nTab, aStr, pFormatter, bConvertDate );
                 }
             }
             else
diff --git sc/source/ui/attrdlg/scdlgfact.cxx sc/source/ui/attrdlg/scdlgfact.cxx
index 219a657..e7a109b 100644
--- sc/source/ui/attrdlg/scdlgfact.cxx
+++ sc/source/ui/attrdlg/scdlgfact.cxx
@@ -74,6 +74,7 @@
 #include "validate.hxx" //add for ScValidationDlg
 #include "validate.hrc" //add for ScValidationDlg
 #include "sortdlg.hxx" //add for ScSortDlg
+#include "textimportoptions.hxx"
 #include "opredlin.hxx" //add for  ScRedlineOptionsTabPage
 #include "tpcalc.hxx" //add for ScTpCalcOptions
 #include "tpprint.hxx" //add for ScTpPrintOptions
@@ -119,6 +120,7 @@ IMPL_ABSTDLG_BASE(AbstractScNewScenarioDlg_Impl); //add for ScNewScenarioDlg
 IMPL_ABSTDLG_BASE(AbstractScShowTabDlg_Impl); //add for ScShowTabDlg
 IMPL_ABSTDLG_BASE(AbstractScStringInputDlg_Impl); //add for ScStringInputDlg
 IMPL_ABSTDLG_BASE(AbstractScImportOptionsDlg_Impl); //add for ScImportOptionsDlg
+IMPL_ABSTDLG_BASE(AbstractScTextImportOptionsDlg_Impl);
 IMPL_ABSTDLG_BASE(AbstractTabDialog_Impl); //add for ScAttrDlg, ScHFEditDlg, ScStyleDlg, ScSubTotalDlg,ScCharDlg, ScParagraphDlg, ScValidationDlg, ScSortDlg
 
 // AbstractTabDialog_Impl begin
@@ -624,6 +626,20 @@ void AbstractScImportOptionsDlg_Impl::GetImportOptions( ScImportOptions& rOption
     pDlg->GetImportOptions(rOptions);
 }
 // add for AbstractScImportOptionsDlg_Impl end
+
+//add for AbstractScLangChooserDlg_Impl begin
+LanguageType AbstractScTextImportOptionsDlg_Impl::GetLanguageType() const
+{
+    return pDlg->getLanguageType();
+}
+
+bool AbstractScTextImportOptionsDlg_Impl::IsDateConversionSet() const
+{
+    return pDlg->isDateConversionSet();
+}
+
+//add for AbstractScLangChooserDlg_Impl end
+
 // =========================Factories  for createdialog ===================
 
 //add for ScImportAsciiDlg begin
@@ -646,6 +662,21 @@ AbstractScImportAsciiDlg * ScAbstractDialogFactory_Impl::CreateScImportAsciiDlg
 }
 // ScImportAsciiDlg end
 
+AbstractScTextImportOptionsDlg * ScAbstractDialogFactory_Impl::CreateScTextImportOptionsDlg( Window* pParent, int nId )
+{
+    ScTextImportOptionsDlg* pDlg = NULL;
+    switch (nId)
+    {
+        case RID_SCDLG_TEXT_IMPORT_OPTIONS:
+            pDlg = new ScTextImportOptionsDlg(pParent);
+        break;
+        default:
+            ;
+    }
+
+    return pDlg ? new AbstractScTextImportOptionsDlg_Impl(pDlg) : NULL;
+}
+
 //add for ScAutoFormatDlg begin
 
 AbstractScAutoFormatDlg * ScAbstractDialogFactory_Impl::CreateScAutoFormatDlg( Window*					pParent, //add for ScAutoFormatDlg
diff --git sc/source/ui/attrdlg/scdlgfact.hxx sc/source/ui/attrdlg/scdlgfact.hxx
index 6891530..933ae07 100644
--- sc/source/ui/attrdlg/scdlgfact.hxx
+++ sc/source/ui/attrdlg/scdlgfact.hxx
@@ -65,6 +65,7 @@ class ScStringInputDlg;
 class ScImportOptionsDlg;
 class SfxTabDialog;
 class ScSortWarningDlg;
+class ScTextImportOptionsDlg;
 
 #define DECL_ABSTDLG_BASE(Class,DialogClass)		\
     DialogClass* 		pDlg;                   	\
@@ -350,6 +351,13 @@ class AbstractScImportOptionsDlg_Impl : public AbstractScImportOptionsDlg  //add
     virtual void GetImportOptions( ScImportOptions& rOptions ) const;
 };
 
+class AbstractScTextImportOptionsDlg_Impl : public AbstractScTextImportOptionsDlg
+{
+    DECL_ABSTDLG_BASE( AbstractScTextImportOptionsDlg_Impl, ScTextImportOptionsDlg)
+    virtual LanguageType GetLanguageType() const;
+    virtual bool IsDateConversionSet() const;
+};
+
 //add for ScAttrDlg , ScHFEditDlg, ScStyleDlg, ScSubTotalDlg, ScCharDlg, ScParagraphDlg, ScValidationDlg, ScSortDlg
 class AbstractTabDialog_Impl : public SfxAbstractTabDialog
 {
@@ -391,6 +399,8 @@ public:
                                                                     SvStream* pInStream, int nId,
                                                                     sal_Unicode cSep = '\t');
 
+    virtual AbstractScTextImportOptionsDlg * CreateScTextImportOptionsDlg( Window* pParent, int nId );
+
     virtual		AbstractScAutoFormatDlg * CreateScAutoFormatDlg( Window*					pParent, //add for ScAutoFormatDlg
                                                                 ScAutoFormat*				pAutoFormat,
                                                                 const ScAutoFormatData*    pSelFormatData,
diff --git sc/source/ui/dbgui/asciiopt.cxx sc/source/ui/dbgui/asciiopt.cxx
index 8b385c2..6b26dee 100644
--- sc/source/ui/dbgui/asciiopt.cxx
+++ sc/source/ui/dbgui/asciiopt.cxx
@@ -56,8 +56,11 @@ ScAsciiOptions::ScAsciiOptions() :
     bFixedLen		( FALSE ),
     aFieldSeps		( ';' ),
     bMergeFieldSeps	( FALSE ),
+    bQuotedFieldAsText(false),
+    bDetectSpecialNumber(false),
     cTextSep		( cDefaultTextSep ),
     eCharSet		( gsl_getSystemTextEncoding() ),
+    eLang           ( LANGUAGE_SYSTEM ),
     bCharSetSystem	( FALSE ),
     nStartRow		( 1 ),
     nInfoCount		( 0 ),
@@ -71,8 +74,11 @@ ScAsciiOptions::ScAsciiOptions(const ScAsciiOptions& rOpt) :
     bFixedLen		( rOpt.bFixedLen ),
     aFieldSeps		( rOpt.aFieldSeps ),
     bMergeFieldSeps	( rOpt.bMergeFieldSeps ),
+    bQuotedFieldAsText(rOpt.bQuotedFieldAsText),
+    bDetectSpecialNumber(rOpt.bDetectSpecialNumber),
     cTextSep		( rOpt.cTextSep ),
     eCharSet		( rOpt.eCharSet ),
+    eLang           ( rOpt.eLang ),
     bCharSetSystem	( rOpt.bCharSetSystem ),
     nStartRow		( rOpt.nStartRow ),
     nInfoCount		( rOpt.nInfoCount )
@@ -155,6 +161,7 @@ ScAsciiOptions&	ScAsciiOptions::operator=( const ScAsciiOptions& rCpy )
     bFixedLen		= rCpy.bFixedLen;
     aFieldSeps		= rCpy.aFieldSeps;
     bMergeFieldSeps	= rCpy.bMergeFieldSeps;
+    bQuotedFieldAsText = rCpy.bQuotedFieldAsText;
     cTextSep		= rCpy.cTextSep;
     eCharSet		= rCpy.eCharSet;
     bCharSetSystem	= rCpy.bCharSetSystem;
@@ -169,6 +176,7 @@ BOOL ScAsciiOptions::operator==( const ScAsciiOptions& rCmp ) const
     if ( bFixedLen		 == rCmp.bFixedLen &&
          aFieldSeps		 == rCmp.aFieldSeps &&
          bMergeFieldSeps == rCmp.bMergeFieldSeps &&
+         bQuotedFieldAsText == rCmp.bQuotedFieldAsText &&
          cTextSep		 == rCmp.cTextSep &&
          eCharSet		 == rCmp.eCharSet &&
          bCharSetSystem  == rCmp.bCharSetSystem &&
@@ -248,13 +256,20 @@ void ScAsciiOptions::ReadFromString( const String& rString )
         eCharSet = ScGlobal::GetCharsetValue( aToken );
     }
 
+    // Language
+    if (nCount >= 4)
+    {    
+        aToken = rString.GetToken(3, ',');
+        eLang = static_cast<LanguageType>(aToken.ToInt32());
+    }
+
         //
         //	Startzeile
         //
 
-    if ( nCount >= 4 )
+    if ( nCount >= 5 )
     {
-        aToken = rString.GetToken(3,',');
+        aToken = rString.GetToken(4,',');
         nStartRow = aToken.ToInt32();
     }
 
@@ -262,12 +277,12 @@ void ScAsciiOptions::ReadFromString( const String& rString )
         //	Spalten-Infos
         //
 
-    if ( nCount >= 5 )
+    if ( nCount >= 6 )
     {
         delete[] pColStart;
         delete[] pColFormat;
 
-        aToken = rString.GetToken(4,',');
+        aToken = rString.GetToken(5,',');
         nSub = aToken.GetTokenCount('/');
         nInfoCount = nSub / 2;
         if (nInfoCount)
@@ -286,6 +301,20 @@ void ScAsciiOptions::ReadFromString( const String& rString )
             pColFormat = NULL;
         }
     }
+
+    // Import quoted field as text.
+    if (nCount >= 7)
+    {
+        aToken = rString.GetToken(6, ',');
+        bQuotedFieldAsText = aToken.EqualsAscii("true") ? true : false;
+    }
+
+    // Detect special nubmers.
+    if (nCount >= 8)
+    {
+        aToken = rString.GetToken(7, ',');
+        bDetectSpecialNumber = aToken.EqualsAscii("true") ? true : false;
+    }
 }
 
 
@@ -336,6 +365,10 @@ String ScAsciiOptions::WriteToString() const
         aOutStr += ScGlobal::GetCharsetString( eCharSet );
     aOutStr += ',';					// Token-Ende
 
+    // Language
+    aOutStr += String::CreateFromInt32(eLang);
+    aOutStr += ',';
+
         //
         //	Startzeile
         //
@@ -357,6 +390,15 @@ String ScAsciiOptions::WriteToString() const
         aOutStr += String::CreateFromInt32(pColFormat[nInfo]);
     }
 
+    aOutStr += ',';
+
+    // Import quoted field as text.
+    aOutStr += String::CreateFromAscii(bQuotedFieldAsText ? "true" : "false");
+    aOutStr += ',';
+
+    // Detect special nubmers.
+    aOutStr += String::CreateFromAscii(bDetectSpecialNumber ? "true" : "false");
+
     return aOutStr;
 }
 
diff --git sc/source/ui/dbgui/asciiopt.hrc sc/source/ui/dbgui/asciiopt.hrc
index 2dcfe00..6fde4ee 100644
--- sc/source/ui/dbgui/asciiopt.hrc
+++ sc/source/ui/dbgui/asciiopt.hrc
@@ -29,31 +29,46 @@
  ************************************************************************/
 #include "sc.hrc"
 //#define RID_SCDLG_ASCII 256
-#define RB_SEPARATED 1
-#define RB_FIXED 2
-#define FT_CHARSET 3
-#define LB_CHARSET 4
-#define FL_SEPOPT 5
-#define FT_FIELDSEP 6
-#define CB_FIELDSEP 7
-#define FT_TEXTSEP 8
-#define CB_TEXTSEP 9
-#define FL_FIELDOPT 10
-#define FT_TYPE 12
-#define FT_PREVIEW 13
-#define LB_TYPE1 23
-#define FL_WIDTH 30
-#define BTN_OK 31
-#define BTN_CANCEL 32
-#define BTN_HELP 33
-#define CTR_TABLEBOX 41
-#define CKB_TAB 51
-#define CKB_SPACE 52
-#define CKB_SEMICOLON 53
-#define CKB_COMMA 54
-#define CKB_OTHER 55
-#define ED_OTHER 56
-#define FT_AT_ROW 59
-#define NF_AT_ROW 60
-#define CB_ASONCE 90
-#define STR_TEXTTOCOLUMNS 100
+#define BTN_OK                      1 
+#define BTN_CANCEL                  2 
+#define BTN_HELP                    3 
+
+#define FL_FIELDOPT                 4 
+#define FT_CHARSET                  5 
+#define LB_CHARSET                  6 
+#define FT_CUSTOMLANG               7 
+#define LB_CUSTOMLANG               8 
+#define FT_AT_ROW                   9 
+#define NF_AT_ROW                   10
+
+#define FL_SEPOPT                   11
+#define RB_FIXED                    12
+#define RB_SEPARATED                13
+#define CKB_TAB                     14
+#define CKB_COMMA                   15
+#define CKB_OTHER                   16
+#define ED_OTHER                    17
+#define CKB_SEMICOLON               18
+#define CKB_SPACE                   19
+#define CB_ASONCE                   20
+#define CB_TEXTSEP                  21
+#define FT_TEXTSEP                  22
+
+#define FL_OTHER_OPTIONS            23
+#define CB_QUOTED_AS_TEXT           24
+#define CB_DETECT_SPECIAL_NUMBER    25
+
+#define FL_WIDTH                    26
+#define FT_TYPE                     27
+#define LB_TYPE1                    28
+#define CTR_TABLEBOX                29
+#define STR_TEXTTOCOLUMNS           30
+                                    
+                                    
+                                    
+                                    
+                                    
+                                    
+                                    
+                                    
+                                    
diff --git sc/source/ui/dbgui/asciiopt.src sc/source/ui/dbgui/asciiopt.src
index a01e819..2d8a7f9 100644
--- sc/source/ui/dbgui/asciiopt.src
+++ sc/source/ui/dbgui/asciiopt.src
@@ -34,55 +34,44 @@ ModalDialog RID_SCDLG_ASCII
 {
     OutputSize = TRUE ;
     SVLook = TRUE ;
-    Size = MAP_APPFONT ( 320 , 247 ) ;
+    Size = MAP_APPFONT ( 320 , 305 ) ;
     Text [ en-US ] = "Text Import" ;
     Moveable = TRUE ;
-    FixedLine FL_WIDTH
-    {
-        Pos = MAP_APPFONT ( 6 , 132 ) ;
-        Size = MAP_APPFONT ( 252 , 8 ) ;
-        Text [ en-US ] = "Fields" ;
-    };
-    FixedText FT_TYPE
+
+    OKButton BTN_OK
     {
-        Pos = MAP_APPFONT ( 12 , 145 ) ;
-        Size = MAP_APPFONT ( 60 , 8 ) ;
-        Text [ en-US ] = "Column t~ype";
+        Pos = MAP_APPFONT ( 264 , 6 ) ;
+        Size = MAP_APPFONT ( 50 , 14 ) ;
+		TabStop = TRUE ;
+        DefButton = TRUE ;
     };
-    ListBox LB_TYPE1
+    CancelButton BTN_CANCEL
     {
-        Pos = MAP_APPFONT ( 76 , 143 ) ;
-        Size = MAP_APPFONT ( 60 , 68 ) ;
+        Pos = MAP_APPFONT ( 264 , 23 ) ;
+        Size = MAP_APPFONT ( 50 , 14 ) ;
         TabStop = TRUE ;
-        DropDown = TRUE ;
     };
-    FixedLine FL_SEPOPT
-    {
-        Pos = MAP_APPFONT ( 6 , 48 ) ;
-        Size = MAP_APPFONT ( 252 , 8 ) ;
-        Text [ en-US ] = "Separator options" ;
-    };
-    RadioButton RB_FIXED
+    HelpButton BTN_HELP
     {
-        Pos = MAP_APPFONT ( 12 , 59 ) ;
-        Size = MAP_APPFONT ( 243 , 10 ) ;
-        Text [ en-US ] = "~Fixed width" ;
+        Pos = MAP_APPFONT ( 264 , 43 ) ;
+        Size = MAP_APPFONT ( 50 , 14 ) ;
         TabStop = TRUE ;
     };
-    RadioButton RB_SEPARATED
+
+    FixedLine FL_FIELDOPT
     {
-        Pos = MAP_APPFONT ( 12 , 73 ) ;
-        Size = MAP_APPFONT ( 243 , 10 ) ;
-        Text [ en-US ] = "~Separated by" ;
-        TabStop = TRUE ;
-        Check = TRUE ;
+        Pos = MAP_APPFONT ( 6 , 3 ) ;
+        Size = MAP_APPFONT ( 252 , 8 ) ;
+        Text [ en-US ] = "Import" ;
     };
+
     FixedText FT_CHARSET
     {
         Pos = MAP_APPFONT ( 12 , 16 ) ;
         Size = MAP_APPFONT ( 60 , 8 ) ;
         Text [ en-US ] = "Ch~aracter set" ;
     };
+
     ListBox LB_CHARSET
     {
         Pos = MAP_APPFONT ( 76 , 14 ) ;
@@ -91,75 +80,81 @@ ModalDialog RID_SCDLG_ASCII
         DropDown = TRUE ;
         Sort = TRUE;
     };
-    FixedLine FL_FIELDOPT
-    {
-        Pos = MAP_APPFONT ( 6 , 3 ) ;
-        Size = MAP_APPFONT ( 252 , 8 ) ;
-        Text [ en-US ] = "Import" ;
-    };
-    FixedText FT_TEXTSEP
+
+    FixedText FT_CUSTOMLANG
     {
-        Pos = MAP_APPFONT ( 156 , 114 ) ;
+        Pos = MAP_APPFONT ( 12 , 32 ) ;
         Size = MAP_APPFONT ( 60 , 8 ) ;
-        Text [ en-US ] = "Te~xt delimiter" ;
+        Text [ en-US ] = "Language" ;
     };
-    ComboBox CB_TEXTSEP
+
+    ListBox LB_CUSTOMLANG
     {
-        Pos = MAP_APPFONT ( 218 , 112 ) ;
-        Size = MAP_APPFONT ( 37 , 94 ) ;
+        Pos = MAP_APPFONT ( 76 , 30 ) ;
+        Size = MAP_APPFONT ( 130 , 61 ) ;
         TabStop = TRUE ;
         DropDown = TRUE ;
+        Sort = TRUE;
     };
-    OKButton BTN_OK
+
+    FixedText FT_AT_ROW
     {
-        Pos = MAP_APPFONT ( 264 , 6 ) ;
-        Size = MAP_APPFONT ( 50 , 14 ) ;
+        Pos = MAP_APPFONT ( 12 , 48 ) ;
+        Size = MAP_APPFONT ( 60 , 8 ) ;
+        Text [ en-US ] = "From ro~w" ;
+	};
+
+    NumericField NF_AT_ROW
+	{
+        Border = TRUE ;
+        SVLook = TRUE ;
+        Pos = MAP_APPFONT ( 76 , 46 ) ;
+        Size = MAP_APPFONT ( 30 , 12 ) ;
         TabStop = TRUE ;
-        DefButton = TRUE ;
+        Spin = TRUE ;
+        Repeat = TRUE ;
+        Minimum = 1 ;
     };
-    CancelButton BTN_CANCEL
+
+    FixedLine FL_SEPOPT
     {
-        Pos = MAP_APPFONT ( 264 , 23 ) ;
-        Size = MAP_APPFONT ( 50 , 14 ) ;
+        Pos = MAP_APPFONT ( 6 , 63 ) ;
+        Size = MAP_APPFONT ( 252 , 8 ) ;
+        Text [ en-US ] = "Separator options" ;
+	};
+    RadioButton RB_FIXED
+	{
+        Pos = MAP_APPFONT ( 12 , 75 ) ;
+        Size = MAP_APPFONT ( 243 , 10 ) ;
+        Text [ en-US ] = "~Fixed width" ;
         TabStop = TRUE ;
     };
-    HelpButton BTN_HELP
+    RadioButton RB_SEPARATED
     {
-        Pos = MAP_APPFONT ( 264 , 43 ) ;
-        Size = MAP_APPFONT ( 50 , 14 ) ;
+        Pos = MAP_APPFONT ( 12 , 89 ) ;
+        Size = MAP_APPFONT ( 243 , 10 ) ;
+        Text [ en-US ] = "~Separated by" ;
         TabStop = TRUE ;
+        Check = TRUE ;
     };
+
     CheckBox CKB_TAB
     {
-        Pos = MAP_APPFONT ( 20 , 86 ) ;
+        Pos = MAP_APPFONT ( 20 , 102 ) ;
         Size = MAP_APPFONT ( 68 , 10 ) ;
         TabStop = TRUE ;
         Text [ en-US ] = "~Tab" ;
     };
-    CheckBox CKB_SEMICOLON
-    {
-        Pos = MAP_APPFONT ( 20 , 99 ) ;
-        Size = MAP_APPFONT ( 68 , 10 ) ;
-        TabStop = TRUE ;
-        Text [ en-US ] = "S~emicolon" ;
-    };
     CheckBox CKB_COMMA
     {
-        Pos = MAP_APPFONT ( 92 , 86 ) ;
+        Pos = MAP_APPFONT ( 92 , 102 ) ;
         Size = MAP_APPFONT ( 68 , 10 ) ;
         TabStop = TRUE ;
         Text [ en-US ] = "~Comma" ;
     };
-    CheckBox CKB_SPACE
-    {
-        Pos = MAP_APPFONT ( 92 , 99 ) ;
-        Size = MAP_APPFONT ( 68 , 10 ) ;
-        TabStop = TRUE ;
-        Text [ en-US ] = "S~pace" ;
-    };
     CheckBox CKB_OTHER
     {
-        Pos = MAP_APPFONT ( 164 , 86 ) ;
+        Pos = MAP_APPFONT ( 164 , 102 ) ;
         Size = MAP_APPFONT ( 50 , 10 ) ;
         TabStop = TRUE ;
         Text [ en-US ] = "~Other" ;
@@ -167,43 +162,100 @@ ModalDialog RID_SCDLG_ASCII
     Edit ED_OTHER
     {
         Border = TRUE ;
-        Pos = MAP_APPFONT ( 218 , 84 ) ;
+        Pos = MAP_APPFONT ( 218 , 100 ) ;
         Size = MAP_APPFONT ( 37 , 12 ) ;
         TabStop = TRUE ;
         MaxTextLength = 10 ;
     };
-    FixedText FT_AT_ROW
+
+    CheckBox CKB_SEMICOLON
     {
-        Pos = MAP_APPFONT ( 12 , 32 ) ;
+        Pos = MAP_APPFONT ( 20 , 115 ) ;
+        Size = MAP_APPFONT ( 68 , 10 ) ;
+		TabStop = TRUE ;
+        Text [ en-US ] = "S~emicolon" ;
+    };
+    CheckBox CKB_SPACE
+    {
+        Pos = MAP_APPFONT ( 92 , 115 ) ;
+        Size = MAP_APPFONT ( 68 , 10 ) ;
+        TabStop = TRUE ;
+        Text [ en-US ] = "S~pace" ;
+    };
+
+    CheckBox CB_ASONCE
+    {
+        Pos = MAP_APPFONT ( 20 , 130 ) ;
+        Size = MAP_APPFONT ( 130 , 10 ) ;
+        TabStop = TRUE ;
+        Text [ en-US ] = "Merge ~delimiters" ;
+    };
+
+    ComboBox CB_TEXTSEP
+    {
+        Pos = MAP_APPFONT ( 218 , 128 ) ;
+        Size = MAP_APPFONT ( 37 , 94 ) ;
+        TabStop = TRUE ;
+        DropDown = TRUE ;
+    };
+    FixedText FT_TEXTSEP
+    {
+        Pos = MAP_APPFONT ( 156 , 130 ) ;
         Size = MAP_APPFONT ( 60 , 8 ) ;
-        Text [ en-US ] = "From ro~w" ;
+        Text [ en-US ] = "Te~xt delimiter" ;
     };
-    NumericField NF_AT_ROW
+
+    FixedLine FL_OTHER_OPTIONS
     {
-        Border = TRUE ;
-        SVLook = TRUE ;
-        Pos = MAP_APPFONT ( 76 , 30 ) ;
-        Size = MAP_APPFONT ( 30 , 12 ) ;
+        Pos = MAP_APPFONT ( 6 , 146 ) ;
+        Size = MAP_APPFONT ( 252 , 8 ) ;
+        Text [ en-US ] = "Other options" ;
+    };
+
+    CheckBox CB_QUOTED_AS_TEXT
+    {
+        Pos = MAP_APPFONT ( 20 , 158 ) ;
+        Size = MAP_APPFONT ( 130 , 10 ) ;
         TabStop = TRUE ;
-        Spin = TRUE ;
-        Repeat = TRUE ;
-        Minimum = 1 ;
+        Text [ en-US ] = "~Quoted field as text" ;
+    };
+
+    CheckBox CB_DETECT_SPECIAL_NUMBER
+    {
+        Pos = MAP_APPFONT ( 20 , 171 ) ;
+        Size = MAP_APPFONT ( 130 , 10 ) ;
+        TabStop = TRUE ;
+        Text [ en-US ] = "Detect special numbers" ;
+    };
+
+    FixedLine FL_WIDTH
+    {
+        Pos = MAP_APPFONT ( 6 , 187 ) ;
+        Size = MAP_APPFONT ( 252 , 8 ) ;
+        Text [ en-US ] = "Fields" ;
+    };
+    FixedText FT_TYPE
+    {
+        Pos = MAP_APPFONT ( 12 , 200 ) ;
+        Size = MAP_APPFONT ( 60 , 8 ) ;
+        Text [ en-US ] = "Column t~ype";
+    };
+    ListBox LB_TYPE1
+    {
+        Pos = MAP_APPFONT ( 76 , 198 ) ;
+        Size = MAP_APPFONT ( 60 , 68 ) ;
+        TabStop = TRUE ;
+        DropDown = TRUE ;
     };
     Control CTR_TABLEBOX
     {
         HelpId = HID_SC_ASCII_TABCTR ;
         Border = TRUE ;
         DialogControl = TRUE ;
-        Pos = MAP_APPFONT ( 12 , 159 ) ;
+        Pos = MAP_APPFONT ( 12 , 216 ) ;
         Size = MAP_APPFONT ( 243 , 82 ) ;
     };
-    CheckBox CB_ASONCE
-    {
-        Pos = MAP_APPFONT ( 20 , 114 ) ;
-        Size = MAP_APPFONT ( 130 , 10 ) ;
-        TabStop = TRUE ;
-        Text [ en-US ] = "Merge ~delimiters" ;
-    };
+
     String STR_TEXTTOCOLUMNS
     {
         Text [ en-US ] = "Text to Columns" ;
diff --git sc/source/ui/dbgui/csvgrid.cxx sc/source/ui/dbgui/csvgrid.cxx
index ddbfb44..5725645 100644
--- sc/source/ui/dbgui/csvgrid.cxx
+++ sc/source/ui/dbgui/csvgrid.cxx
@@ -737,7 +737,8 @@ void ScCsvGrid::ImplSetTextLineSep(
     while( *pChar && (nColIx < sal::static_int_cast<sal_uInt32>(CSV_MAXCOLCOUNT)) )
     {
         // scan for next cell text
-        pChar = ScImportExport::ScanNextFieldFromString( pChar, aCellText, cTextSep, pSepChars, bMergeSep );
+        bool bIsQuoted = false;
+        pChar = ScImportExport::ScanNextFieldFromString( pChar, aCellText, cTextSep, pSepChars, bMergeSep, bIsQuoted );
 
         // update column width
         sal_Int32 nWidth = Max( CSV_MINCOLWIDTH, aCellText.Len() + sal_Int32( 1 ) );
diff --git sc/source/ui/dbgui/csvruler.cxx sc/source/ui/dbgui/csvruler.cxx
index 5437f9b..7cd060d 100644
--- sc/source/ui/dbgui/csvruler.cxx
+++ sc/source/ui/dbgui/csvruler.cxx
@@ -37,8 +37,76 @@
 #include "AccessibleCsvControl.hxx"
 
 
+#include <optutil.hxx>
+#include <com/sun/star/uno/Any.hxx>
+#include <com/sun/star/uno/Sequence.hxx>
+#include "miscuno.hxx"
+
+using namespace rtl;
+using namespace com::sun::star::uno;
+
+
+
+// ============================================================================
+#define SEP_PATH            "Office.Calc/Dialogs/CSVImport"
+#define FIXED_WIDTH_LIST    "FixedWidthList"
+
+
 // ============================================================================
 
+static void load_FixedWidthList(ScCsvSplits &aSplits)
+{
+    String sSplits;
+    OUString sFixedWidthLists;
+
+    Sequence<Any>aValues;
+    const Any *pProperties;
+    Sequence<OUString> aNames(1);
+    OUString* pNames = aNames.getArray();
+    ScLinkConfigItem aItem( OUString::createFromAscii( SEP_PATH ) );
+
+    pNames[0] = OUString::createFromAscii( FIXED_WIDTH_LIST );
+    aValues = aItem.GetProperties( aNames );
+    pProperties = aValues.getConstArray();
+
+    if( pProperties[0].hasValue() )
+    {
+        aSplits.Clear();
+        pProperties[0] >>= sFixedWidthLists;
+
+        sSplits = String( sFixedWidthLists );
+
+        // String ends with a semi-colon so there is no 'int' after the last one.
+        for(int i=0;i<sSplits.GetTokenCount()-1;i++ )
+            aSplits.Insert( sSplits.GetToken(i).ToInt32() );
+    }
+}
+static void save_FixedWidthList(ScCsvSplits aSplits)
+{
+    String sSplits;
+    // Create a semi-colon separated string to save the splits
+    sal_uInt32 n = aSplits.Count();
+    for (sal_uInt32 i = 0; i < n; ++i)
+    {
+        sSplits.Append( String::CreateFromInt32( aSplits[i] ) );
+        sSplits.Append((char)';');
+    }
+
+    OUString sFixedWidthLists = OUString( sSplits );
+    Sequence<Any> aValues;
+    Any *pProperties;
+    Sequence<OUString> aNames(1);
+    OUString* pNames = aNames.getArray();
+    ScLinkConfigItem aItem( OUString::createFromAscii( SEP_PATH ) );
+
+    pNames[0] = OUString::createFromAscii( FIXED_WIDTH_LIST );
+    aValues = aItem.GetProperties( aNames );
+    pProperties = aValues.getArray();
+    pProperties[0] <<= sFixedWidthLists;
+
+    aItem.PutProperties(aNames, aValues);
+}
+
 ScCsvRuler::ScCsvRuler( ScCsvControl& rParent ) :
     ScCsvControl( rParent ),
     mnPosCursorLast( 1 )
@@ -48,6 +116,13 @@ ScCsvRuler::ScCsvRuler( ScCsvControl& rParent ) :
     InitSizeData();
     maBackgrDev.SetFont( GetFont() );
     maRulerDev.SetFont( GetFont() );
+
+    load_FixedWidthList( maSplits );
+}
+
+ScCsvRuler::~ScCsvRuler()
+{
+    save_FixedWidthList( maSplits );
 }
 
 
diff --git sc/source/ui/dbgui/makefile.mk sc/source/ui/dbgui/makefile.mk
index 5d71655..130e0a3 100644
--- sc/source/ui/dbgui/makefile.mk
+++ sc/source/ui/dbgui/makefile.mk
@@ -53,6 +53,7 @@ SLOFILES =	\
     $(SLO)$/pfiltdlg.obj	\
     $(SLO)$/dbnamdlg.obj	\
     $(SLO)$/expftext.obj	\
+    $(SLO)$/textimportoptions.obj \
     $(SLO)$/subtdlg.obj		\
     $(SLO)$/tpsubt.obj		\
     $(SLO)$/fieldwnd.obj	\
@@ -85,6 +86,7 @@ EXCEPTIONSFILES= \
 
 SRS1NAME=$(TARGET)
 SRC1FILES =  \
+	textimportoptions.src		\
         pivot.src		\
         pvfundlg.src	\
         dpgroupdlg.src	\
@@ -114,7 +116,8 @@ LIB1OBJFILES =  \
     $(SLO)$/csvruler.obj	\
     $(SLO)$/csvgrid.obj		\
     $(SLO)$/csvtablebox.obj	\
-    $(SLO)$/asciiopt.obj
+    $(SLO)$/asciiopt.obj \
+    $(SLO)$/textimportoptions.obj
 
 # --- Tagets -------------------------------------------------------
 
diff --git sc/source/ui/dbgui/scuiasciiopt.cxx sc/source/ui/dbgui/scuiasciiopt.cxx
index dc4a05f..c2a75b2 100644
--- sc/source/ui/dbgui/scuiasciiopt.cxx
+++ sc/source/ui/dbgui/scuiasciiopt.cxx
@@ -44,6 +44,12 @@
 // ause
 #include "editutil.hxx"
 
+#include <optutil.hxx>
+#include <com/sun/star/uno/Any.hxx>
+#include <com/sun/star/uno/Sequence.hxx>
+#include "miscuno.hxx"
+
+
 //! TODO make dynamic
 #ifdef WIN
 const SCSIZE ASCIIDLG_MAXROWS                = 10000;
@@ -51,6 +57,22 @@ const SCSIZE ASCIIDLG_MAXROWS                = 10000;
 const SCSIZE ASCIIDLG_MAXROWS                = MAXROWCOUNT;
 #endif
 
+
+using namespace rtl;
+using namespace com::sun::star::uno;
+
+// Defines - CSV Import Preserve Options
+#define FIXED_WIDTH         "FixedWidth"
+#define FROM_ROW            "FromRow"
+#define CHAR_SET            "CharSet"
+#define SEPARATORS          "Separators"
+#define TEXT_SEPARATORS     "TextSeparators"
+#define MERGE_DELIMITERS    "MergeDelimiters"
+#define QUOTED_AS_TEXT      "QuotedFieldAsText"
+#define DETECT_SPECIAL_NUM  "DetectSpecialNumbers"
+#define LANGUAGE            "Language"
+#define SEP_PATH            "Office.Calc/Dialogs/CSVImport"
+
 // ============================================================================
 
 void lcl_FillCombo( ComboBox& rCombo, const String& rList, sal_Unicode cSelect )
@@ -98,11 +120,96 @@ sal_Unicode lcl_CharFromCombo( ComboBox& rCombo, const String& rList )
     return c;
 }
 
+static void load_Separators( OUString &sFieldSeparators, OUString &sTextSeparators, 
+                             bool &bMergeDelimiters, bool& bQuotedAsText, bool& bDetectSpecialNum, 
+                             bool &bFixedWidth, sal_Int32 &nFromRow, sal_Int32 &nCharSet,
+                             sal_Int32& nLanguage )
+{
+    Sequence<Any>aValues;
+    const Any *pProperties;
+    Sequence<OUString> aNames(9);
+    OUString* pNames = aNames.getArray();
+    ScLinkConfigItem aItem( OUString::createFromAscii( SEP_PATH ) );
+
+    pNames[0] = OUString::createFromAscii( MERGE_DELIMITERS );
+    pNames[1] = OUString::createFromAscii( SEPARATORS );
+    pNames[2] = OUString::createFromAscii( TEXT_SEPARATORS );
+    pNames[3] = OUString::createFromAscii( FIXED_WIDTH );
+    pNames[4] = OUString::createFromAscii( FROM_ROW );
+    pNames[5] = OUString::createFromAscii( CHAR_SET );
+    pNames[6] = OUString::createFromAscii( QUOTED_AS_TEXT );
+    pNames[7] = OUString::createFromAscii( DETECT_SPECIAL_NUM );
+    pNames[8] = OUString::createFromAscii( LANGUAGE );
+    aValues = aItem.GetProperties( aNames );
+    pProperties = aValues.getConstArray();
+    if( pProperties[1].hasValue() )
+        pProperties[1] >>= sFieldSeparators;
+
+    if( pProperties[2].hasValue() )
+        pProperties[2] >>= sTextSeparators;
+
+    if( pProperties[0].hasValue() )
+        bMergeDelimiters = ScUnoHelpFunctions::GetBoolFromAny( pProperties[0] );
+
+    if( pProperties[3].hasValue() )
+        bFixedWidth = ScUnoHelpFunctions::GetBoolFromAny( pProperties[3] );
+
+    if( pProperties[4].hasValue() )
+        pProperties[4] >>= nFromRow;
+
+    if( pProperties[5].hasValue() )
+        pProperties[5] >>= nCharSet;
+ 
+    if ( pProperties[6].hasValue() )
+        pProperties[6] >>= bQuotedAsText;
+
+    if ( pProperties[7].hasValue() )
+        pProperties[7] >>= bDetectSpecialNum;
+
+    if ( pProperties[8].hasValue() )
+        pProperties[8] >>= nLanguage;
+}
+
+static void save_Separators( 
+    String maSeparators, String maTxtSep, bool bMergeDelimiters, bool bQuotedAsText,
+    bool bDetectSpecialNum, bool bFixedWidth, sal_Int32 nFromRow, sal_Int32 nCharSet, sal_Int32 nLanguage )
+{
+    OUString sFieldSeparators = OUString( maSeparators );
+    OUString sTextSeparators = OUString( maTxtSep );
+    Sequence<Any> aValues;
+    Any *pProperties;
+    Sequence<OUString> aNames(9);
+    OUString* pNames = aNames.getArray();
+    ScLinkConfigItem aItem( OUString::createFromAscii( SEP_PATH ) );
+
+    pNames[0] = OUString::createFromAscii( MERGE_DELIMITERS );
+    pNames[1] = OUString::createFromAscii( SEPARATORS );
+    pNames[2] = OUString::createFromAscii( TEXT_SEPARATORS );
+    pNames[3] = OUString::createFromAscii( FIXED_WIDTH );
+    pNames[4] = OUString::createFromAscii( FROM_ROW );
+    pNames[5] = OUString::createFromAscii( CHAR_SET );
+    pNames[6] = OUString::createFromAscii( QUOTED_AS_TEXT );
+    pNames[7] = OUString::createFromAscii( DETECT_SPECIAL_NUM );
+    pNames[8] = OUString::createFromAscii( LANGUAGE );
+    aValues = aItem.GetProperties( aNames );
+    pProperties = aValues.getArray();
+    pProperties[1] <<= sFieldSeparators;
+    pProperties[2] <<= sTextSeparators;
+    ScUnoHelpFunctions::SetBoolInAny( pProperties[0], bMergeDelimiters );
+    ScUnoHelpFunctions::SetBoolInAny( pProperties[3], bFixedWidth );
+    pProperties[4] <<= nFromRow;
+    pProperties[5] <<= nCharSet;
+    pProperties[6] <<= static_cast<sal_Bool>(bQuotedAsText);
+    pProperties[7] <<= static_cast<sal_Bool>(bDetectSpecialNum);
+    pProperties[8] <<= nLanguage;
+
+    aItem.PutProperties(aNames, aValues);
+}
 
 // ----------------------------------------------------------------------------
 
 ScImportAsciiDlg::ScImportAsciiDlg( Window* pParent,String aDatName,
-                                    SvStream* pInStream, sal_Unicode cSep ) :
+                                    SvStream* pInStream, sal_Unicode /*cSep*/ ) :
         ModalDialog	( pParent, ScResId( RID_SCDLG_ASCII ) ),
         mpDatStream  ( pInStream ),
         mnStreamPos( pInStream ? pInStream->Tell() : 0 ),
@@ -113,6 +220,8 @@ ScImportAsciiDlg::ScImportAsciiDlg( Window* pParent,String aDatName,
         aFlFieldOpt ( this, ScResId( FL_FIELDOPT ) ),
         aFtCharSet	( this, ScResId( FT_CHARSET ) ),
         aLbCharSet	( this, ScResId( LB_CHARSET ) ),
+        aFtCustomLang( this, ScResId( FT_CUSTOMLANG ) ),
+        aLbCustomLang( this, ScResId( LB_CUSTOMLANG ) ), 
 
         aFtRow		( this, ScResId( FT_AT_ROW	) ),
         aNfRow		( this,	ScResId( NF_AT_ROW	) ),
@@ -128,6 +237,10 @@ ScImportAsciiDlg::ScImportAsciiDlg( Window* pParent,String aDatName,
         aCkbOther	( this, ScResId( CKB_OTHER ) ),
         aEdOther	( this, ScResId( ED_OTHER ) ),
         aCkbAsOnce	( this, ScResId( CB_ASONCE) ),
+        aFlOtherOpt ( this, ScResId( FL_OTHER_OPTIONS ) ), 
+
+        aCkbQuotedAsText( this, ScResId(CB_QUOTED_AS_TEXT) ),
+        aCkbDetectNumber( this, ScResId(CB_DETECT_SPECIAL_NUMBER) ),
         aFtTextSep	( this, ScResId( FT_TEXTSEP ) ),
         aCbTextSep	( this, ScResId( CB_TEXTSEP ) ),
 
@@ -146,14 +259,15 @@ ScImportAsciiDlg::ScImportAsciiDlg( Window* pParent,String aDatName,
         aFldSepList	( ScResId( SCSTR_FIELDSEP ) ),
         aTextSepList( ScResId( SCSTR_TEXTSEP ) ),
         mcTextSep   ( ScAsciiOptions::cDefaultTextSep ),
-        maStrTextToColumns( ScResId( STR_TEXTTOCOLUMNS ) )
+        maStrTextToColumns( ScResId( STR_TEXTTOCOLUMNS ) ),
+        mbFileImport(true)
 {
     FreeResource();
+    mbFileImport = aDatName.Len() > 0;
 
     String aName = GetText();
     // aDatName is empty if invoked during paste from clipboard.
-    BOOL bClipboard = (aDatName.Len() == 0);
-    if (!bClipboard)
+    if (mbFileImport)
     {
         aName.AppendAscii(RTL_CONSTASCII_STRINGPARAM(" - ["));
         aName += aDatName;
@@ -161,20 +275,55 @@ ScImportAsciiDlg::ScImportAsciiDlg( Window* pParent,String aDatName,
     }
     SetText( aName );
 
-    switch(cSep)
+
+    OUString sFieldSeparators;
+    OUString sTextSeparators;
+    bool bMergeDelimiters = false;
+    bool bFixedWidth = false;
+    bool bQuotedFieldAsText = true;
+    bool bDetectSpecialNum = false;
+    sal_Int32 nFromRow = 1;
+    sal_Int32 nCharSet = -1;
+    sal_Int32 nLanguage = 0;
+    if (mbFileImport)
+        // load separators only when importing csv files.
+        load_Separators (sFieldSeparators, sTextSeparators, bMergeDelimiters, 
+                         bQuotedFieldAsText, bDetectSpecialNum, bFixedWidth, nFromRow, nCharSet, nLanguage);
+    maFieldSeparators = String(sFieldSeparators);
+
+    if( bMergeDelimiters )
+        aCkbAsOnce.Check();
+    if (bQuotedFieldAsText)
+        aCkbQuotedAsText.Check();
+    if (bDetectSpecialNum)
+        aCkbDetectNumber.Check();
+    if( bFixedWidth )
+        aRbFixed.Check();
+    if( nFromRow != 1 )
+        aNfRow.SetValue( nFromRow );
+
+    ByteString bString(maFieldSeparators,RTL_TEXTENCODING_MS_1252);
+    const sal_Char *aSep = bString.GetBuffer();
+    int len = maFieldSeparators.Len();
+    for (int i = 0; i < len; ++i)
     {
-        case '\t':  aCkbTab.Check();        break;
-        case ';':   aCkbSemicolon.Check();  break;
-        case ',':   aCkbComma.Check();      break;
-        case ' ':   aCkbSpace.Check();      break;
-        default:
-            aCkbOther.Check();
-            aEdOther.SetText( cSep );
+        switch( aSep[i] )
+        {
+            case '\t':  aCkbTab.Check();        break;
+            case ';':   aCkbSemicolon.Check();  break;
+            case ',':   aCkbComma.Check();      break;
+            case ' ':   aCkbSpace.Check();      break;
+            default:
+                aCkbOther.Check();
+                aEdOther.SetText( aEdOther.GetText() + OUString( aSep[i] ) );
+        }
     }
+    
+    // Get Separators from the dialog
     maFieldSeparators = GetSeparators();
 
     // Clipboard is always Unicode, else detect.
-    BOOL bPreselectUnicode = bClipboard;
+    bool bPreselectUnicode = !mbFileImport;
     // Sniff for Unicode / not
     if( !bPreselectUnicode && mpDatStream )
     {
@@ -210,6 +359,7 @@ ScImportAsciiDlg::ScImportAsciiDlg( Window* pParent,String aDatName,
 
     // *** Separator characters ***
     lcl_FillCombo( aCbTextSep, aTextSepList, mcTextSep );
+    aCbTextSep.SetText( sTextSeparators );
 
     Link aSeparatorHdl =LINK( this, ScImportAsciiDlg, SeparatorHdl );
     aCbTextSep.SetSelectHdl( aSeparatorHdl );
@@ -218,6 +368,8 @@ ScImportAsciiDlg::ScImportAsciiDlg( Window* pParent,String aDatName,
     aCkbSemicolon.SetClickHdl( aSeparatorHdl );
     aCkbComma.SetClickHdl( aSeparatorHdl );
     aCkbAsOnce.SetClickHdl( aSeparatorHdl );
+    aCkbQuotedAsText.SetClickHdl( aSeparatorHdl );
+    aCkbDetectNumber.SetClickHdl( aSeparatorHdl );
     aCkbSpace.SetClickHdl( aSeparatorHdl );
     aCkbOther.SetClickHdl( aSeparatorHdl );
     aEdOther.SetModifyHdl( aSeparatorHdl );
@@ -230,9 +382,18 @@ ScImportAsciiDlg::ScImportAsciiDlg( Window* pParent,String aDatName,
     aLbCharSet.InsertTextEncoding( RTL_TEXTENCODING_DONTKNOW, aCharSetUser );
     aLbCharSet.SelectTextEncoding( bPreselectUnicode ?
         RTL_TEXTENCODING_UNICODE : gsl_getSystemTextEncoding() );
+
+    if( nCharSet >= 0 )
+        aLbCharSet.SelectEntryPos( nCharSet );
+
     SetSelectedCharSet();
     aLbCharSet.SetSelectHdl( LINK( this, ScImportAsciiDlg, CharSetHdl ) );
 
+    aLbCustomLang.SetLanguageList(
+        LANG_LIST_ALL | LANG_LIST_ONLY_KNOWN, false, false);
+    aLbCustomLang.InsertLanguage(LANGUAGE_SYSTEM);
+    aLbCustomLang.SelectLanguage(static_cast<LanguageType>(nLanguage), true);
+
     // *** column type ListBox ***
     xub_StrLen nCount = aColumnUser.GetTokenCount();
     for (xub_StrLen i=0; i<nCount; i++)
@@ -261,6 +422,11 @@ ScImportAsciiDlg::ScImportAsciiDlg( Window* pParent,String aDatName,
 
 ScImportAsciiDlg::~ScImportAsciiDlg()
 {
+    if (mbFileImport)
+        save_Separators( maFieldSeparators, aCbTextSep.GetText(), aCkbAsOnce.IsChecked(), 
+                         aCkbQuotedAsText.IsChecked(), aCkbDetectNumber.IsChecked(), 
+                         aRbFixed.IsChecked(), aNfRow.GetValue(), aLbCharSet.GetSelectEntryPos(),
+                         static_cast<sal_Int32>(aLbCustomLang.GetSelectLanguage()) );
     delete[] mpRowPosArray;
 }
 
@@ -339,6 +505,7 @@ void ScImportAsciiDlg::GetOptions( ScAsciiOptions& rOpt )
 {
     rOpt.SetCharSet( meCharSet );
     rOpt.SetCharSetSystem( mbCharSetSystem );
+    rOpt.SetLanguage(aLbCustomLang.GetSelectLanguage());
     rOpt.SetFixedLen( aRbFixed.IsChecked() );
     rOpt.SetStartRow( (long)aNfRow.GetValue() );
     maTableBox.FillColumnData( rOpt );
@@ -348,6 +515,9 @@ void ScImportAsciiDlg::GetOptions( ScAsciiOptions& rOpt )
         rOpt.SetMergeSeps( aCkbAsOnce.IsChecked() );
         rOpt.SetTextSep( lcl_CharFromCombo( aCbTextSep, aTextSepList ) );
     }
+
+    rOpt.SetQuotedAsText(aCkbQuotedAsText.IsChecked());
+    rOpt.SetDetectSpecialNumber(aCkbDetectNumber.IsChecked());
 }
 
 void ScImportAsciiDlg::SetTextToColumnsMode()
@@ -355,8 +525,19 @@ void ScImportAsciiDlg::SetTextToColumnsMode()
     SetText( maStrTextToColumns );
     aFtCharSet.Disable();
     aLbCharSet.Disable();
+    aFtCustomLang.Disable();
+    aLbCustomLang.SelectLanguage(LANGUAGE_SYSTEM);
+    aLbCustomLang.Disable();
     aFtRow.Disable();
     aNfRow.Disable();
+
+    // Quoted field as text option is not used for text-to-columns mode.
+    aCkbQuotedAsText.Check(false);
+    aCkbQuotedAsText.Disable();
+
+    // Always detect special numbers for text-to-columns mode.
+    aCkbDetectNumber.Check();
+    aCkbDetectNumber.Disable();
 }
 
 void ScImportAsciiDlg::SetSelectedCharSet()
diff --git sc/source/ui/dbgui/textimportoptions.cxx sc/source/ui/dbgui/textimportoptions.cxx
new file mode 100644
index 0000000..a59b42a
--- /dev/null
+++ sc/source/ui/dbgui/textimportoptions.cxx
@@ -0,0 +1,120 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: langbox.hxx,v $
+ * $Revision: 1.4.242.1 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_sc.hxx"
+
+#undef SC_DLLIMPLEMENTATION
+
+//------------------------------------------------------------------------
+
+#include "textimportoptions.hxx"
+#include "textimportoptions.hrc"
+
+#include "scresid.hxx"
+#include "vcl/window.hxx"
+#include "vcl/msgbox.hxx"
+#include "vcl/svapp.hxx"
+
+ScTextImportOptionsDlg::ScTextImportOptionsDlg(Window* pParent) :
+    ModalDialog(pParent, ScResId(RID_SCDLG_TEXT_IMPORT_OPTIONS)),
+
+    maBtnOk(this, ScResId(BTN_OK)),
+    maBtnCancel(this, ScResId(BTN_CANCEL)),
+    maBtnHelp(this, ScResId(BTN_HELP)),
+    maFlChooseLang(this, ScResId(FL_CHOOSE_LANG)),
+    maRbAutomatic(this, ScResId(RB_AUTOMATIC)), 
+    maRbCustom(this, ScResId(RB_CUSTOM)),
+    maLbCustomLang(this, ScResId(LB_CUSTOM_LANG)),
+    maFlOption(this, ScResId(FL_OPTION)),
+    maBtnConvertDate(this, ScResId(BTN_CONVERT_DATE))
+{
+    init();
+}
+
+ScTextImportOptionsDlg::~ScTextImportOptionsDlg()
+{
+}
+
+short ScTextImportOptionsDlg::Execute()
+{
+    return ModalDialog::Execute();
+}
+
+LanguageType ScTextImportOptionsDlg::getLanguageType() const
+{
+    if (maRbAutomatic.IsChecked())
+        return LANGUAGE_SYSTEM;
+
+    return maLbCustomLang.GetSelectLanguage();
+}
+
+bool ScTextImportOptionsDlg::isDateConversionSet() const
+{
+    return maBtnConvertDate.IsChecked();
+}
+
+void ScTextImportOptionsDlg::init()
+{
+    Link aLink = LINK( this, ScTextImportOptionsDlg, OKHdl );
+    maBtnOk.SetClickHdl(aLink);
+    aLink = LINK( this, ScTextImportOptionsDlg, RadioHdl );
+    maRbAutomatic.SetClickHdl(aLink);
+    maRbCustom.SetClickHdl(aLink);
+
+    maRbAutomatic.Check(true);
+
+    maLbCustomLang.SetLanguageList(
+        LANG_LIST_ALL | LANG_LIST_ONLY_KNOWN, false, false);
+
+    LanguageType eLang = Application::GetSettings().GetLanguage();
+    maLbCustomLang.SelectLanguage(eLang);
+    maLbCustomLang.Disable();
+}
+
+IMPL_LINK( ScTextImportOptionsDlg, OKHdl, OKButton*, EMPTYARG )
+{
+    EndDialog(RET_OK);
+    return 0;
+}
+
+IMPL_LINK( ScTextImportOptionsDlg, RadioHdl, RadioButton*, pBtn )
+{
+    if (pBtn == &maRbAutomatic)
+    {
+        maLbCustomLang.Disable();
+    }
+    else if (pBtn == &maRbCustom)
+    {
+        maLbCustomLang.Enable();
+    }
+    return 0;
+}
+
diff --git sc/source/ui/dbgui/textimportoptions.src sc/source/ui/dbgui/textimportoptions.src
new file mode 100644
index 0000000..4a4d158
--- /dev/null
+++ sc/source/ui/dbgui/textimportoptions.src
@@ -0,0 +1,112 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: retypepassdlg.src,v $
+ * $Revision: 1.1.2.3 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include "textimportoptions.hrc"
+
+ModalDialog RID_SCDLG_TEXT_IMPORT_OPTIONS
+{
+    Text [ en-US ] = "Import Options" ;
+    Size = MAP_APPFONT ( 190 , 101 ) ;
+    Moveable = TRUE ;
+    Closeable = TRUE ;
+    OutputSize = TRUE ;
+
+    OKButton BTN_OK
+    {
+        Pos = MAP_APPFONT ( 135, 6 ) ;
+        Size = MAP_APPFONT ( 50, 14 ) ;
+        DefButton = TRUE ;
+    };
+
+    CancelButton BTN_CANCEL
+    {
+        Pos = MAP_APPFONT ( 135, 23 ) ;
+        Size = MAP_APPFONT ( 50, 14 ) ;
+    };
+
+    HelpButton BTN_HELP
+    {
+        Pos = MAP_APPFONT ( 135, 43 ) ;
+        Size = MAP_APPFONT ( 50, 14 ) ;
+    };
+
+    FixedLine FL_CHOOSE_LANG
+    {
+        Pos = MAP_APPFONT( 6, 3 ) ;
+        Size = MAP_APPFONT( 125, 14 ) ;
+
+        Text [ en-US ] = "Select the language to use for import" ; 
+    };
+
+    RadioButton RB_AUTOMATIC
+    {
+        Pos = MAP_APPFONT( 12, 20 ) ;
+        Size = MAP_APPFONT( 50, 10 ) ;
+        TabStop = TRUE ;
+
+        Text [ en-US ] = "Automatic" ; 
+    };
+
+    RadioButton RB_CUSTOM
+    {
+        Pos = MAP_APPFONT( 12, 34 ) ;
+        Size = MAP_APPFONT( 50, 10 ) ;
+        TabStop = TRUE ;
+
+        Text [ en-US ] = "Custom" ; 
+    };
+
+    ListBox LB_CUSTOM_LANG
+    {
+        Pos = MAP_APPFONT( 20, 50 ) ;
+        Size = MAP_APPFONT( 100, 55 ) ;
+        TabStop = TRUE ;
+        DropDown = TRUE ;
+        Sort = TRUE ;
+    };
+
+    FixedLine FL_OPTION
+    {
+	Pos = MAP_APPFONT( 6, 70 );
+	Size = MAP_APPFONT( 125, 14 );
+
+	Text [ en-US ] = "Options" ;
+    };
+
+    CheckBox BTN_CONVERT_DATE
+    {
+    	Pos = MAP_APPFONT( 12, 86 );
+	Size = MAP_APPFONT( 125, 10 );
+	TabStop = TRUE ;
+
+	Text [ en-US ] = "Detect special numbers (such as dates)." ;
+    };
+};
+
diff --git sc/source/ui/docshell/docsh.cxx sc/source/ui/docshell/docsh.cxx
index 8cb9ad8..8335542 100644
--- sc/source/ui/docshell/docsh.cxx
+++ sc/source/ui/docshell/docsh.cxx
@@ -129,6 +129,8 @@
 #include <comphelper/processfactory.hxx>
 
 using namespace com::sun::star;
+using ::rtl::OUString;
+using ::rtl::OUStringBuffer;
 
 // STATIC DATA -----------------------------------------------------------
 
@@ -794,6 +796,34 @@ BOOL __EXPORT ScDocShell::LoadFrom( SfxMedium& rMedium )
     return bRet;
 }
 
+static void lcl_parseHtmlFilterOption(const OUString& rOption, LanguageType& rLang, bool& rDateConvert)
+{
+    OUStringBuffer aBuf;
+    OUString aTokens[2];
+    sal_Int32 n = rOption.getLength();
+    const sal_Unicode* p = rOption.getStr();
+    sal_Int32 nTokenId = 0;
+    for (sal_Int32 i = 0; i < n; ++i)
+    {
+        const sal_Unicode c = p[i];
+        if (c == sal_Unicode(' '))
+        {
+            if (aBuf.getLength())
+                aTokens[nTokenId++] = aBuf.makeStringAndClear();
+        }
+        else
+            aBuf.append(c);
+
+        if (nTokenId >= 2)
+            break;
+    }
+
+    if (aBuf.getLength())
+        aTokens[nTokenId] = aBuf.makeStringAndClear();
+
+    rLang = static_cast<LanguageType>(aTokens[0].toInt32());
+    rDateConvert = static_cast<bool>(aTokens[1].toInt32());
+}
 
 BOOL __EXPORT ScDocShell::ConvertFrom( SfxMedium& rMedium )
 {
@@ -1167,12 +1197,24 @@ BOOL __EXPORT ScDocShell::ConvertFrom( SfxMedium& rMedium )
                 SvStream* pInStream = rMedium.GetInStream();
                 if (pInStream)
                 {
+                    LanguageType eLang = LANGUAGE_SYSTEM;
+                    bool bDateConvert = false;
+                    SfxItemSet*	 pSet = rMedium.GetItemSet();
+                    const SfxPoolItem* pItem;
+                    if ( pSet && SFX_ITEM_SET ==
+                         pSet->GetItemState( SID_FILE_FILTEROPTIONS, TRUE, &pItem ) )
+                    {
+                        String aFilterOption = (static_cast<const SfxStringItem*>(pItem))->GetValue();
+                        lcl_parseHtmlFilterOption(aFilterOption, eLang, bDateConvert);
+                    }
+
                     pInStream->Seek( 0 );
                     ScRange aRange;
                     // HTML macht eigenes ColWidth/RowHeight
                     CalcOutputFactor();
+                    SvNumberFormatter aNumFormatter(aDocument.GetServiceManager(), eLang);
                     eError = ScFormatFilter::Get().ScImportHTML( *pInStream, rMedium.GetBaseURL(), &aDocument, aRange,
-                                            GetOutputFactor(), !bWebQuery );
+											GetOutputFactor(), !bWebQuery, &aNumFormatter, bDateConvert );
                     if (eError != eERR_OK)
                     {
                         if (!GetError())
@@ -2149,6 +2191,11 @@ String ScDocShell::GetOwnFilterName()			// static
     return String::CreateFromAscii(pFilterSc50);
 }
 
+String ScDocShell::GetHtmlFilterName()
+{
+    return String::CreateFromAscii(pFilterHtml);
+}
+
 String ScDocShell::GetWebQueryFilterName()		// static
 {
     return String::CreateFromAscii(pFilterHtmlWebQ);
diff --git sc/source/ui/docshell/impex.cxx sc/source/ui/docshell/impex.cxx
index 0590de5..08dfcfb 100644
--- sc/source/ui/docshell/impex.cxx
+++ sc/source/ui/docshell/impex.cxx
@@ -905,12 +905,11 @@ BOOL ScImportExport::Text2Doc( SvStream& rStrm )
         //
 
 
-bool lcl_PutString( ScDocument* pDoc, SCCOL nCol, SCROW nRow, SCTAB nTab,
-                    const String& rStr, BYTE nColFormat,
-                    ::utl::TransliterationWrapper& rTransliteration,
-                    CalendarWrapper& rCalendar,
-                    ::utl::TransliterationWrapper* pSecondTransliteration,
-                    CalendarWrapper* pSecondCalendar )
+static bool lcl_PutString( 
+    ScDocument* pDoc, SCCOL nCol, SCROW nRow, SCTAB nTab, const String& rStr, BYTE nColFormat,
+    SvNumberFormatter* pFormatter, bool bDetectNumFormat,
+    ::utl::TransliterationWrapper& rTransliteration, CalendarWrapper& rCalendar,
+    ::utl::TransliterationWrapper* pSecondTransliteration, CalendarWrapper* pSecondCalendar )
 {
     bool bMultiLine = false;
     if ( nColFormat == SC_COL_SKIP || !rStr.Len() || !ValidCol(nCol) || !ValidRow(nRow) )
@@ -926,10 +925,10 @@ bool lcl_PutString( ScDocument* pDoc, SCCOL nCol, SCROW nRow, SCTAB nTab,
     {
         //!	SetString mit Extra-Flag ???
 
-        SvNumberFormatter* pFormatter = pDoc->GetFormatTable();
-        sal_uInt32 nEnglish = pFormatter->GetStandardIndex(LANGUAGE_ENGLISH_US);
+        SvNumberFormatter* pDocFormatter = pDoc->GetFormatTable();
+        sal_uInt32 nEnglish = pDocFormatter->GetStandardIndex(LANGUAGE_ENGLISH_US);
         double fVal;
-        if ( pFormatter->IsNumberFormat( rStr, nEnglish, fVal ) )
+        if ( pDocFormatter->IsNumberFormat( rStr, nEnglish, fVal ) )
         {
             //	Zahlformat wird nicht auf englisch gesetzt
             pDoc->SetValue( nCol, nRow, nTab, fVal );
@@ -1065,9 +1064,9 @@ bool lcl_PutString( ScDocument* pDoc, SCCOL nCol, SCROW nRow, SCTAB nTab,
                 }
             }
 
-            SvNumberFormatter* pFormatter = pDoc->GetFormatTable();
+            SvNumberFormatter* pDocFormatter = pDoc->GetFormatTable();
             if ( nYear < 100 )
-                nYear = pFormatter->ExpandTwoDigitYear( nYear );
+                nYear = pDocFormatter->ExpandTwoDigitYear( nYear );
 
             CalendarWrapper* pCalendar = (bSecondCal ? pSecondCalendar : &rCalendar);
             sal_Int16 nNumMonths = pCalendar->getNumberOfMonthsInYear();
@@ -1103,7 +1102,7 @@ bool lcl_PutString( ScDocument* pDoc, SCCOL nCol, SCROW nRow, SCTAB nTab,
                 pCalendar->setValue( i18n::CalendarFieldIndex::MILLISECOND, nMilli );
                 if ( pCalendar->isValid() )
                 {
-                    double fDiff = DateTime(*pFormatter->GetNullDate()) -
+                    double fDiff = DateTime(*pDocFormatter->GetNullDate()) -
                         pCalendar->getEpochStart();
                     // #i14974# must use getLocalDateTime to get the same
                     // date values as set above
@@ -1115,10 +1114,10 @@ bool lcl_PutString( ScDocument* pDoc, SCCOL nCol, SCROW nRow, SCTAB nTab,
                     LanguageType eDocLang = eLatin;     //! which language for date formats?
 
                     short nType = (nFound > 3 ? NUMBERFORMAT_DATETIME : NUMBERFORMAT_DATE);
-                    ULONG nFormat = pFormatter->GetStandardFormat( nType, eDocLang );
+                    ULONG nFormat = pDocFormatter->GetStandardFormat( nType, eDocLang );
                     // maybe there is a special format including seconds or milliseconds
                     if (nFound > 5)
-                        nFormat = pFormatter->GetStandardFormat( fDays, nFormat, nType, eDocLang);
+                        nFormat = pDocFormatter->GetStandardFormat( fDays, nFormat, nType, eDocLang);
 
                     pDoc->PutCell( nCol, nRow, nTab, new ScValueCell(fDays), nFormat, FALSE );
 
@@ -1130,7 +1129,7 @@ bool lcl_PutString( ScDocument* pDoc, SCCOL nCol, SCROW nRow, SCTAB nTab,
 
     // Standard or date not determined -> SetString / EditCell
     if( rStr.Search( _LF ) == STRING_NOTFOUND )
-        pDoc->SetString( nCol, nRow, nTab, rStr );
+        pDoc->SetString( nCol, nRow, nTab, rStr, pFormatter, bDetectNumFormat );
     else 
     {
         bMultiLine = true;
@@ -1140,7 +1139,7 @@ bool lcl_PutString( ScDocument* pDoc, SCCOL nCol, SCROW nRow, SCTAB nTab,
 }
 
 
-String lcl_GetFixed( const String& rLine, xub_StrLen nStart, xub_StrLen nNext )
+String lcl_GetFixed( const String& rLine, xub_StrLen nStart, xub_StrLen nNext, bool& rbIsQuoted )
 {
     xub_StrLen nLen = rLine.Len();
     if (nNext > nLen)
@@ -1154,7 +1153,11 @@ String lcl_GetFixed( const String& rLine, xub_StrLen nStart, xub_StrLen nNext )
     while ( nSpace > nStart && pStr[nSpace-1] == ' ' )
         --nSpace;
 
-    return rLine.Copy( nStart, nSpace-nStart );
+    rbIsQuoted = (pStr[nStart] == sal_Unicode('"') && pStr[nSpace-1] == sal_Unicode('"'));
+    if (rbIsQuoted)
+        return rLine.Copy(nStart+1, nSpace-nStart-2);
+    else
+        return rLine.Copy(nStart, nSpace-nStart);
 }
 
 BOOL ScImportExport::ExtText2Doc( SvStream& rStrm )
@@ -1187,9 +1190,9 @@ BOOL ScImportExport::ExtText2Doc( SvStream& rStrm )
     const BYTE* pColFormat  = pExtOptions->GetColFormat();
     long nSkipLines	= pExtOptions->GetStartRow();
 
-    LanguageType eLatin, eCjk, eCtl;
-    pDoc->GetLanguage( eLatin, eCjk, eCtl );
-    LanguageType eDocLang = eLatin;					//! which language for date formats?
+    LanguageType eDocLang = pExtOptions->GetLanguage();
+    SvNumberFormatter aNumFormatter(pDoc->GetServiceManager(), eDocLang);
+    bool bDetectNumFormat = pExtOptions->IsDetectSpecialNumber();
 
     // For date recognition
     ::utl::TransliterationWrapper aTransliteration(
@@ -1231,6 +1234,8 @@ BOOL ScImportExport::ExtText2Doc( SvStream& rStrm )
     // survives the toggle of bDetermineRange down at the end of the do{} loop.
     bool bRangeIsDetermined = bDetermineRange;
 
+    bool bQuotedAsText = pExtOptions && pExtOptions->IsQuotedAsText();
+
     ULONG nOriginalStreamPos = rStrm.Tell();
  
     do
@@ -1252,7 +1257,8 @@ BOOL ScImportExport::ExtText2Doc( SvStream& rStrm )
                 // SC_COL_SKIP.
                 for ( i=0; i<nInfoCount && nCol <= MAXCOL+1; i++ )
                 {
-                    if ( pColFormat[i] != SC_COL_SKIP )		// sonst auch nCol nicht hochzaehlen
+                    BYTE nFmt = pColFormat[i];
+                    if (nFmt != SC_COL_SKIP)        // sonst auch nCol nicht hochzaehlen
                     {
                         if (nCol > MAXCOL)
                             bOverflow = TRUE;       // display warning on import
@@ -1260,11 +1266,15 @@ BOOL ScImportExport::ExtText2Doc( SvStream& rStrm )
                         {
                             xub_StrLen nStart = pColStart[i];
                             xub_StrLen nNext = ( i+1 < nInfoCount ) ? pColStart[i+1] : nLineLen;
-                            aCell = lcl_GetFixed( aLine, nStart, nNext );
-                            bMultiLine |= lcl_PutString( pDoc, nCol, nRow,
-                                    nTab, aCell, pColFormat[i],
-                                    aTransliteration, aCalendar,
-                                    pEnglishTransliteration, pEnglishCalendar);
+                            bool bIsQuoted = false;
+                            aCell = lcl_GetFixed( aLine, nStart, nNext, bIsQuoted );
+                            if (bIsQuoted && bQuotedAsText)
+                                nFmt = SC_COL_TEXT;
+
+                            bMultiLine |= lcl_PutString( 
+                                pDoc, nCol, nRow, nTab, aCell, nFmt,
+                                &aNumFormatter, bDetectNumFormat, aTransliteration, aCalendar,
+                                pEnglishTransliteration, pEnglishCalendar);
                         }
                         ++nCol;
                     }
@@ -1281,7 +1291,8 @@ BOOL ScImportExport::ExtText2Doc( SvStream& rStrm )
                 // SC_COL_SKIP.
                 while (*p && nCol <= MAXCOL+1)
                 {
-                    p = ScImportExport::ScanNextFieldFromString( p, aCell, cStr, pSeps, bMerge );
+                    bool bIsQuoted = false;
+                    p = ScImportExport::ScanNextFieldFromString( p, aCell, cStr, pSeps, bMerge, bIsQuoted );
 
                     BYTE nFmt = SC_COL_STANDARD;
                     for ( i=nInfoStart; i<nInfoCount; i++ )
@@ -1298,10 +1309,15 @@ BOOL ScImportExport::ExtText2Doc( SvStream& rStrm )
                         if (nCol > MAXCOL)
                             bOverflow = TRUE;       // display warning on import
                         else if (!bDetermineRange)
-                            bMultiLine |= lcl_PutString( pDoc, nCol, nRow,
-                                    nTab, aCell, nFmt, aTransliteration,
-                                    aCalendar, pEnglishTransliteration,
-                                    pEnglishCalendar);
+                        {
+                            if (bIsQuoted && bQuotedAsText)
+                                nFmt = SC_COL_TEXT;
+
+                            bMultiLine |= lcl_PutString( 
+                                pDoc, nCol, nRow, nTab, aCell, nFmt, 
+                                &aNumFormatter, bDetectNumFormat, aTransliteration,
+                                aCalendar, pEnglishTransliteration, pEnglishCalendar);
+                        }
                         ++nCol;
                     }
 
@@ -1375,11 +1391,13 @@ BOOL ScImportExport::ExtText2Doc( SvStream& rStrm )
 
 // static
 const sal_Unicode* ScImportExport::ScanNextFieldFromString( const sal_Unicode* p,
-        String& rField, sal_Unicode cStr, const sal_Unicode* pSeps, BOOL bMergeSeps )
+		String& rField, sal_Unicode cStr, const sal_Unicode* pSeps, bool bMergeSeps, bool& rbIsQuoted )
 {
+    rbIsQuoted = false;
     rField.Erase();
     if ( *p == cStr )			// String in Anfuehrungszeichen
     {
+        rbIsQuoted = true;
         const sal_Unicode* p1;
         p1 = p = lcl_ScanString( p, rField, cStr, DQM_ESCAPE );
         while ( *p && !ScGlobal::UnicodeStrChr( pSeps, *p ) )
@@ -2038,7 +2056,7 @@ class ScFormatFilterMissing : public ScFormatFilterPlugin {
     virtual FltError ScImportDif( SvStream&, ScDocument*, const ScAddress&,
                  const CharSet, UINT32 ) RETURN_ERROR
     virtual FltError ScImportRTF( SvStream&, const String&, ScDocument*, ScRange& ) RETURN_ERROR
-    virtual FltError ScImportHTML( SvStream&, const String&, ScDocument*, ScRange&, double, BOOL ) RETURN_ERROR
+    virtual FltError ScImportHTML( SvStream&, const String&, ScDocument*, ScRange&, double, BOOL, SvNumberFormatter*, bool ) RETURN_ERROR
 
     virtual ScEEAbsImport *CreateRTFImport( ScDocument*, const ScRange& ) { return NULL; }
     virtual ScEEAbsImport *CreateHTMLImport( ScDocument*, const String&, const ScRange&, BOOL ) { return NULL; }
diff --git sc/source/ui/inc/asciiopt.hxx sc/source/ui/inc/asciiopt.hxx
index ec601a9..d3f9ba4 100644
--- sc/source/ui/inc/asciiopt.hxx
+++ sc/source/ui/inc/asciiopt.hxx
@@ -55,7 +55,7 @@
 #include <tools/stream.hxx>
 #include <svx/txencbox.hxx>
 #include "csvtablebox.hxx"
-
+#include "i18npool/lang.h"
 
 // ============================================================================
 
@@ -65,8 +65,11 @@ private:
     BOOL		bFixedLen;
     String		aFieldSeps;
     BOOL		bMergeFieldSeps;
+    bool        bQuotedFieldAsText;
+    bool        bDetectSpecialNumber;
     sal_Unicode	cTextSep;
     CharSet		eCharSet;
+    LanguageType eLang;
     BOOL		bCharSetSystem;
     long		nStartRow;
     USHORT		nInfoCount;
@@ -93,20 +96,26 @@ public:
     BOOL				GetCharSetSystem() const	{ return bCharSetSystem; }
     const String&		GetFieldSeps() const	{ return aFieldSeps; }
     BOOL				IsMergeSeps() const		{ return bMergeFieldSeps; }
+    bool                IsQuotedAsText() const  { return bQuotedFieldAsText; }
+    bool                IsDetectSpecialNumber() const { return bDetectSpecialNumber; }
     sal_Unicode			GetTextSep() const		{ return cTextSep; }
     BOOL				IsFixedLen() const		{ return bFixedLen; }
     USHORT				GetInfoCount() const	{ return nInfoCount; }
     const xub_StrLen*	GetColStart() const		{ return pColStart; }
     const BYTE*			GetColFormat() const	{ return pColFormat; }
     long				GetStartRow() const		{ return nStartRow; }
+    LanguageType        GetLanguage() const     { return eLang; }
 
     void	SetCharSet( CharSet eNew )			{ eCharSet = eNew; }
     void	SetCharSetSystem( BOOL bSet )		{ bCharSetSystem = bSet; }
     void	SetFixedLen( BOOL bSet )			{ bFixedLen = bSet; }
     void	SetFieldSeps( const String& rStr )	{ aFieldSeps = rStr; }
     void	SetMergeSeps( BOOL bSet )			{ bMergeFieldSeps = bSet; }
+    void    SetQuotedAsText(bool bSet)          { bQuotedFieldAsText = bSet; }
+    void    SetDetectSpecialNumber(bool bSet)   { bDetectSpecialNumber = bSet; }
     void	SetTextSep( sal_Unicode c )			{ cTextSep = c; }
     void	SetStartRow( long nRow)				{ nStartRow= nRow; }
+    void    SetLanguage(LanguageType e)         { eLang = e; }
 
     void	SetColInfo( USHORT nCount, const xub_StrLen* pStart, const BYTE* pFormat );
     void    SetColumnInfo( const ScCsvExpDataVec& rDataVec );
diff --git sc/source/ui/inc/csvruler.hxx sc/source/ui/inc/csvruler.hxx
index c251831..cd67708 100644
--- sc/source/ui/inc/csvruler.hxx
+++ sc/source/ui/inc/csvruler.hxx
@@ -71,6 +71,7 @@ private:
     // ------------------------------------------------------------------------
 public:
     explicit                    ScCsvRuler( ScCsvControl& rParent );
+                                ~ScCsvRuler();
 
     // common ruler handling --------------------------------------------------
 public:
diff --git sc/source/ui/inc/docsh.hxx sc/source/ui/inc/docsh.hxx
index 8aa9efe..07d372b 100644
--- sc/source/ui/inc/docsh.hxx
+++ sc/source/ui/inc/docsh.hxx
@@ -398,6 +398,7 @@ public:
 
     static ScDocShell* GetShellByNum( USHORT nDocNo );
     static String	GetOwnFilterName();
+        static String   GetHtmlFilterName();
     static String	GetWebQueryFilterName();
     static String	GetAsciiFilterName();
     static String	GetLotusFilterName();
diff --git sc/source/ui/inc/impex.hxx sc/source/ui/inc/impex.hxx
index 3abab58..5ef0f1f 100644
--- sc/source/ui/inc/impex.hxx
+++ sc/source/ui/inc/impex.hxx
@@ -110,7 +110,7 @@ public:
 
     static BOOL  IsFormatSupported( ULONG nFormat );
     static const sal_Unicode* ScanNextFieldFromString( const sal_Unicode* p,
-            String& rField, sal_Unicode cStr, const sal_Unicode* pSeps, BOOL bMergeSeps );
+			String& rField, sal_Unicode cStr, const sal_Unicode* pSeps, bool bMergeSeps, bool& rbIsQuoted );
     static	void	WriteUnicodeOrByteString( SvStream& rStrm, const String& rString, BOOL bZero = FALSE );
     static	void	WriteUnicodeOrByteEndl( SvStream& rStrm );
     static	inline	BOOL	IsEndianSwap( const SvStream& rStrm );
diff --git sc/source/ui/inc/scuiasciiopt.hxx sc/source/ui/inc/scuiasciiopt.hxx
index 643fb3b..4515a86 100644
--- sc/source/ui/inc/scuiasciiopt.hxx
+++ sc/source/ui/inc/scuiasciiopt.hxx
@@ -35,6 +35,8 @@
 
 
 #include "asciiopt.hxx"
+#include "svx/langbox.hxx"
+
 // ============================================================================
 
 class ScImportAsciiDlg : public ModalDialog
@@ -49,6 +51,8 @@ class ScImportAsciiDlg : public ModalDialog
     FixedLine                   aFlFieldOpt;
     FixedText                   aFtCharSet;
     SvxTextEncodingBox          aLbCharSet;
+    FixedText                   aFtCustomLang;
+    SvxLanguageBox              aLbCustomLang;
 
     FixedText                   aFtRow;
     NumericField                aNfRow;
@@ -64,6 +68,12 @@ class ScImportAsciiDlg : public ModalDialog
     CheckBox                    aCkbOther;
     Edit                        aEdOther;
     CheckBox                    aCkbAsOnce;
+
+    FixedLine                   aFlOtherOpt;
+
+    CheckBox                    aCkbQuotedAsText;
+    CheckBox                    aCkbDetectNumber;
+
     FixedText                   aFtTextSep;
     ComboBox                    aCbTextSep;
 
@@ -87,6 +97,7 @@ class ScImportAsciiDlg : public ModalDialog
 
     CharSet                     meCharSet;          /// Selected char set.
     bool                        mbCharSetSystem;    /// Is System char set selected?
+    bool                        mbFileImport;       /// Is this dialog involked for csv file import ?
 
 public:
                                 ScImportAsciiDlg(
diff --git sc/source/ui/inc/textimportoptions.hrc sc/source/ui/inc/textimportoptions.hrc
new file mode 100644
index 0000000..eb981c1
--- /dev/null
+++ sc/source/ui/inc/textimportoptions.hrc
@@ -0,0 +1,42 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: retypepassdlg.src,v $
+ * $Revision: 1.1.2.3 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include <sc.hrc>
+
+#define BTN_OK                   1
+#define BTN_CANCEL               2
+#define BTN_HELP                 3
+
+#define FL_CHOOSE_LANG           4
+#define RB_AUTOMATIC             5
+#define RB_CUSTOM                6
+#define LB_CUSTOM_LANG           7
+#define FL_OPTION                8
+#define BTN_CONVERT_DATE         9
diff --git sc/source/ui/inc/textimportoptions.hxx sc/source/ui/inc/textimportoptions.hxx
new file mode 100644
index 0000000..8ef489a
--- /dev/null
+++ sc/source/ui/inc/textimportoptions.hxx
@@ -0,0 +1,76 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: langbox.hxx,v $
+ * $Revision: 1.4.242.1 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef SC_UI_IMPORTOPTIONS_HXX
+#define SC_UI_IMPORTOPTIONS_HXX
+
+#include "vcl/dialog.hxx"
+#include "vcl/button.hxx"
+#include "vcl/fixed.hxx"
+#include "i18npool/lang.h"
+#include "svx/langbox.hxx"
+
+class ScTextImportOptionsDlg : public ModalDialog
+{
+public:
+    ScTextImportOptionsDlg(Window* pParent);
+    virtual ~ScTextImportOptionsDlg();
+
+    virtual short Execute();
+
+    LanguageType getLanguageType() const;
+    bool isDateConversionSet() const;
+
+private:
+    void init();
+
+private:
+    OKButton        maBtnOk;
+    CancelButton    maBtnCancel;
+    HelpButton      maBtnHelp;
+
+    FixedLine       maFlChooseLang;
+
+    RadioButton     maRbAutomatic;
+    RadioButton     maRbCustom;
+
+    SvxLanguageBox  maLbCustomLang;
+
+    FixedLine       maFlOption;
+
+    CheckBox        maBtnConvertDate;
+
+    DECL_LINK( OKHdl, OKButton* );
+
+    DECL_LINK( RadioHdl, RadioButton* );
+};
+
+
+#endif
diff --git sc/source/ui/unoobj/filtuno.cxx sc/source/ui/unoobj/filtuno.cxx
index 8b93ff9..02d2f9d 100644
--- sc/source/ui/unoobj/filtuno.cxx
+++ sc/source/ui/unoobj/filtuno.cxx
@@ -51,7 +51,12 @@
 
 #include "sc.hrc" //CHINA001
 #include "scabstdlg.hxx" //CHINA001
+#include "i18npool/lang.h"
+
+#include <memory>
+
 using namespace ::com::sun::star;
+using ::rtl::OUStringBuffer;
 
 //------------------------------------------------------------------------
 
@@ -146,6 +151,10 @@ sal_Int16 SAL_CALL ScFilterOptionsObj::execute() throw(uno::RuntimeException)
     sal_Int16 nRet = ui::dialogs::ExecutableDialogResults::CANCEL;
 
     String aFilterString( aFilterName );
+
+    ScAbstractDialogFactory* pFact = ScAbstractDialogFactory::Create();
+    DBG_ASSERT(pFact, "ScAbstractFactory create fail!");
+
     if ( !bExport && aFilterString == ScDocShell::GetAsciiFilterName() )
     {
         //	ascii import is special...
@@ -164,8 +173,6 @@ sal_Int16 SAL_CALL ScFilterOptionsObj::execute() throw(uno::RuntimeException)
             pInStream = utl::UcbStreamHelper::CreateStream( xInputStream );
 
         //CHINA001 ScImportAsciiDlg* pDlg = new ScImportAsciiDlg( NULL, aPrivDatName, pInStream, cAsciiDel );
-        ScAbstractDialogFactory* pFact = ScAbstractDialogFactory::Create();
-        DBG_ASSERT(pFact, "ScAbstractFactory create fail!");//CHINA001
         AbstractScImportAsciiDlg* pDlg = pFact->CreateScImportAsciiDlg( NULL, aPrivDatName, pInStream, RID_SCDLG_ASCII, cAsciiDel);
         DBG_ASSERT(pDlg, "Dialog create fail!");//CHINA001
         if ( pDlg->Execute() == RET_OK )
@@ -178,6 +185,24 @@ sal_Int16 SAL_CALL ScFilterOptionsObj::execute() throw(uno::RuntimeException)
         delete pDlg;
         delete pInStream;
     }
+    else if ( aFilterString == ScDocShell::GetWebQueryFilterName() || aFilterString == ScDocShell::GetHtmlFilterName() )
+    {
+        // HTML import.
+        ::std::auto_ptr<AbstractScTextImportOptionsDlg> pDlg(
+            pFact->CreateScTextImportOptionsDlg(NULL, RID_SCDLG_TEXT_IMPORT_OPTIONS));
+
+        if (pDlg->Execute() == RET_OK)
+        {
+            LanguageType eLang = pDlg->GetLanguageType();
+            OUStringBuffer aBuf;
+
+            aBuf.append(String::CreateFromInt32(static_cast<sal_Int32>(eLang)));
+            aBuf.append(sal_Unicode(' '));
+            aBuf.append(pDlg->IsDateConversionSet() ? sal_Unicode('1') : sal_Unicode('0'));
+            aFilterOptions = aBuf.makeStringAndClear();
+            nRet = ui::dialogs::ExecutableDialogResults::OK;
+        }
+    }
     else
     {
         sal_Bool bMultiByte = sal_True;
@@ -249,8 +274,6 @@ sal_Int16 SAL_CALL ScFilterOptionsObj::execute() throw(uno::RuntimeException)
 //CHINA001		&aOptions, &aTitle, bMultiByte, bDBEnc,
 //CHINA001		!bExport );
 //CHINA001 
-        ScAbstractDialogFactory* pFact = ScAbstractDialogFactory::Create();
-        DBG_ASSERT(pFact, "ScAbstractFactory create fail!");//CHINA001
 
         AbstractScImportOptionsDlg* pDlg = pFact->CreateScImportOptionsDlg( NULL, RID_SCDLG_IMPORTOPT,
                                                                             bAscii, &aOptions, &aTitle, bMultiByte, bDBEnc,
diff --git sc/util/makefile.mk sc/util/makefile.mk
index 2b56e37..214e210 100644
--- sc/util/makefile.mk
+++ sc/util/makefile.mk
@@ -283,6 +283,7 @@ LIB8OBJFILES = \
         $(SLO)$/dapidata.obj	\
         $(SLO)$/crdlg.obj			\
         $(SLO)$/scuiasciiopt.obj	\
+		$(SLO)$/textimportoptions.obj	\
         $(SLO)$/scuiautofmt.obj	\
         $(SLO)$/dpgroupdlg.obj	\
         $(SLO)$/editfield.obj
