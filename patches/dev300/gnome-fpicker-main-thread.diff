--- sfx2/source/dialog/filedlghelper.cxx	4 Jun 2008 09:53:08 -0000	1.144
+++ sfx2/source/dialog/filedlghelper.cxx	2 Sep 2008 08:24:03 -0000
@@ -1325,8 +1325,10 @@
 
 	sal_Int16 nRet = ExecutableDialogResults::CANCEL;
 
-#if !(defined(MACOSX) && defined(QUARTZ))
 //On MacOSX the native file picker has to run in the primordial thread because of drawing issues
+//On Linux the native gtk file picker, when backed by gnome-vfs2, needs to be run in the same
+//primordial thread as the ucb gnome-vfs2 provider was initialized in.
+#ifdef WNT
 	if ( mbSystemPicker )
 	{
 		PickerThread_Impl* pThread = new PickerThread_Impl( mxFileDlg );
diff -ru fpicker.orig/source/unx/gnome/SalGtkFilePicker.cxx fpicker/source/unx/gnome/SalGtkFilePicker.cxx
--- fpicker/source/unx/gnome/SalGtkFilePicker.cxx	2008-09-02 09:16:04.000000000 +0100
+++ fpicker/source/unx/gnome/SalGtkFilePicker.cxx	2008-09-02 09:20:51.000000000 +0100
@@ -999,13 +999,13 @@
     uno::Reference< awt::XExtendedToolkit > xToolkit(
         m_xServiceMgr->createInstance( ::rtl::OUString::createFromAscii("com.sun.star.awt.Toolkit") ), uno::UNO_QUERY);
 
-	RunDialog* pRunInMain = new RunDialog(m_pDialog, xToolkit);
-	uno::Reference < awt::XTopWindowListener > xLifeCycle(pRunInMain);
+	RunDialog* pRunDialog = new RunDialog(m_pDialog, xToolkit);
+	uno::Reference < awt::XTopWindowListener > xLifeCycle(pRunDialog);
 	while( GTK_RESPONSE_NO == btn )
 	{
 		btn = GTK_RESPONSE_YES; // we dont want to repeat unless user clicks NO for file save.
 
-        gint nStatus = pRunInMain->runandwaitforresult();
+        gint nStatus = pRunDialog->run();
 		switch( nStatus )
 		{
 			case GTK_RESPONSE_ACCEPT:
@@ -1032,9 +1032,9 @@
                                 OUStringToOString(aResProvider.getResString(FILE_PICKER_TITLE_SAVE ),
                                 RTL_TEXTENCODING_UTF8 ).getStr() );
                                  
-	                        RunDialog* pAnotherRunInMain = new RunDialog(dlg, xToolkit);
-	                        uno::Reference < awt::XTopWindowListener > xAnotherLifeCycle(pAnotherRunInMain);
-                            btn = pAnotherRunInMain->runandwaitforresult();
+	                        RunDialog* pAnotherDialog = new RunDialog(dlg, xToolkit);
+	                        uno::Reference < awt::XTopWindowListener > xAnotherLifeCycle(pAnotherDialog);
+                            btn = pAnotherDialog->run();
 
 							gtk_widget_destroy( dlg );
 						}
diff -ru fpicker.orig/source/unx/gnome/SalGtkFolderPicker.cxx fpicker/source/unx/gnome/SalGtkFolderPicker.cxx
--- fpicker/source/unx/gnome/SalGtkFolderPicker.cxx	2008-09-02 09:16:04.000000000 +0100
+++ fpicker/source/unx/gnome/SalGtkFolderPicker.cxx	2008-09-02 09:20:53.000000000 +0100
@@ -176,9 +176,9 @@
     uno::Reference< awt::XExtendedToolkit > xToolkit(
         m_xServiceMgr->createInstance( ::rtl::OUString::createFromAscii("com.sun.star.awt.Toolkit") ), uno::UNO_QUERY);
 
-    RunDialog* pRunInMain = new RunDialog(m_pDialog, xToolkit);
-    uno::Reference < awt::XTopWindowListener > xLifeCycle(pRunInMain);
-    gint nStatus = pRunInMain->runandwaitforresult();
+    RunDialog* pRunDialog = new RunDialog(m_pDialog, xToolkit);
+    uno::Reference < awt::XTopWindowListener > xLifeCycle(pRunDialog);
+    gint nStatus = pRunDialog->run();
 	switch( nStatus )
 	{
 		case GTK_RESPONSE_ACCEPT:
diff -ru fpicker.orig/source/unx/gnome/SalGtkPicker.cxx fpicker/source/unx/gnome/SalGtkPicker.cxx
--- fpicker/source/unx/gnome/SalGtkPicker.cxx	2008-09-02 09:16:04.000000000 +0100
+++ fpicker/source/unx/gnome/SalGtkPicker.cxx	2008-09-02 09:20:22.000000000 +0100
@@ -124,7 +124,7 @@
 
 RunDialog::RunDialog( GtkWidget *pDialog, uno::Reference< awt::XExtendedToolkit >& rToolkit ) :
     cppu::WeakComponentImplHelper1< awt::XTopWindowListener >( maLock ),
-    mbFinished(false), mpDialog(pDialog), mpCreatedParent(NULL), mxToolkit(rToolkit)
+    mpDialog(pDialog), mpCreatedParent(NULL), mxToolkit(rToolkit)
 {
     awt::SystemDependentXWindow aWindowHandle;
 
@@ -178,39 +178,20 @@
     gtk_widget_hide( mpDialog );
 }
 
-void RunDialog::run() 
+gint RunDialog::run() 
 { 
     if (mxToolkit.is())
         mxToolkit->addTopWindowListener(this);
 
-    mnStatus = gtk_dialog_run( GTK_DIALOG( mpDialog ) ); 
+    gint nStatus = gtk_dialog_run( GTK_DIALOG( mpDialog ) ); 
 
     if (mxToolkit.is())
         mxToolkit->removeTopWindowListener(this);
 
-
-    if (mnStatus != 1)	//PLAY
+    if (nStatus != 1)	//PLAY
         gtk_widget_hide( mpDialog );
 
-    maLock.acquire();
-    mbFinished = true;
-    maLock.release();
-
-    Application::EndYield();
-}
-
-gint RunDialog::runandwaitforresult() 
-{ 
-    g_timeout_add_full(G_PRIORITY_HIGH_IDLE, 0, (GSourceFunc)rundialog, this, NULL);
-    while (1)
-    {
-	maLock.acquire();
-    	if (mbFinished)
-            break;
-	maLock.release();
-        Application::Yield();
-    }
-    return mnStatus; 
+    return nStatus;
 }
 
 SalGtkPicker::~SalGtkPicker()
diff -ru fpicker.orig/source/unx/gnome/SalGtkPicker.hxx fpicker/source/unx/gnome/SalGtkPicker.hxx
--- fpicker/source/unx/gnome/SalGtkPicker.hxx	2008-09-02 09:16:04.000000000 +0100
+++ fpicker/source/unx/gnome/SalGtkPicker.hxx	2008-09-02 09:16:49.000000000 +0100
@@ -74,8 +74,7 @@
 		static rtl::OString unicodetouri(const rtl::OUString &rURL);
 };
 
-//Run the Gtk Dialog in the "Main Thread" for us to avoid threading conflict and
-//report back to this thread. Watch for any "new windows" created while we're
+//Run the Gtk Dialog. Watch for any "new windows" created while we're
 //executing and consider that a CANCEL event to avoid e.g. "file cannot be opened"
 //modal dialogs and this one getting locked if some other API call causes this
 //to happen while we're opened waiting for user input, e.g. 
@@ -84,9 +83,7 @@
     public cppu::WeakComponentImplHelper1< ::com::sun::star::awt::XTopWindowListener >
 {
 private:
-    bool mbFinished;
     osl::Mutex maLock;
-    gint mnStatus;
     GtkWidget *mpDialog;
     GdkWindow *mpCreatedParent;
     ::com::sun::star::uno::Reference< ::com::sun::star::awt::XExtendedToolkit>  mxToolkit;
@@ -111,8 +108,7 @@
         throw (::com::sun::star::uno::RuntimeException) {}
 public:
     RunDialog(GtkWidget *pDialog, ::com::sun::star::uno::Reference< ::com::sun::star::awt::XExtendedToolkit > &rToolkit);
-    gint runandwaitforresult();
-    void run();
+    gint run();
     void cancel();
     ~RunDialog();
 };
