Index: xmlsec1-1.2.6.patch
===================================================================
RCS file: /cvs/external/libxmlsec/xmlsec1-1.2.6.patch,v
retrieving revision 1.21
diff -u -r1.21 xmlsec1-1.2.6.patch
--- libxmlsec/xmlsec1-1.2.6.patch	5 Jul 2007 08:51:39 -0000	1.21
+++ libxmlsec/xmlsec1-1.2.6.patch	15 Dec 2009 15:28:45 -0000
@@ -17395,3 +17395,85 @@
   XMLSEC_NSS_ALIBS     = smime3.lib ssl3.lib nss3.lib libnspr4_s.lib libplds4_s.lib libplc4_s.lib kernel32.lib user32.lib gdi32.lib

   XMLSEC_MSCRYPTO_SOLIBS  = kernel32.lib user32.lib gdi32.lib Crypt32.lib Advapi32.lib
+diff --git misc/xmlsec1-1.2.6/include/xmlsec/nss/crypto.h misc/build/xmlsec1-1.2.6/include/xmlsec/nss/crypto.h
+index f1cd44e..381ee1f 100644
+--- misc/xmlsec1-1.2.6/include/xmlsec/nss/crypto.h
++++ misc/build/xmlsec1-1.2.6/include/xmlsec/nss/crypto.h
+@@ -191,6 +191,10 @@ XMLSEC_CRYPTO_EXPORT xmlSecTransformId xmlSecNssTransformDsaSha1GetKlass(void);
+  *
+  *******************************************************************/
+ #ifndef XMLSEC_NO_HMAC
++
++XMLSEC_CRYPTO_EXPORT int               xmlSecNssHmacGetMinOutputLength();
++XMLSEC_CRYPTO_EXPORT void              xmlSecNssHmacSetMinOutputLength(int min_length);
++
+ /** 
+  * xmlSecNssKeyDataHmacId:
+  * 
+diff --git misc/xmlsec1-1.2.6/src/nss/hmac.c misc/build/xmlsec1-1.2.6/src/nss/hmac.c
+index f67ec9d..a7c2018 100644
+--- misc/xmlsec1-1.2.6/src/nss/hmac.c
++++ misc/build/xmlsec1-1.2.6/src/nss/hmac.c
+@@ -26,10 +26,40 @@
+ #include <xmlsec/nss/app.h>
+ #include <xmlsec/nss/crypto.h>
+ 
++#define XMLSEC_NSS_MIN_HMAC_SIZE		64
+ #define XMLSEC_NSS_MAX_HMAC_SIZE		128
+ 
+ /**************************************************************************
+  *
++ * Configuration
++ *
++ *****************************************************************************/
++static int g_xmlsec_nss_hmac_min_length = XMLSEC_NSS_MIN_HMAC_SIZE;
++
++/**
++ * xmlSecNssHmacGetMinOutputLength: 
++ * 
++ * Returns the min HMAC output length
++ */
++int xmlSecNssHmacGetMinOutputLength()
++{
++    return g_xmlsec_nss_hmac_min_length;
++}
++
++/**
++ * xmlSecNssHmacSetMinOutputLength: 
++ *
++ * @min_length: the new min length 
++ * 
++ * Sets the min HMAC output length
++ */
++void xmlSecNssHmacSetMinOutputLength(int min_length)
++{
++    g_xmlsec_nss_hmac_min_length = min_length;
++}
++
++/**************************************************************************
++ *
+  * Internal NSS HMAC CTX
+  *
+  *****************************************************************************/
+@@ -162,7 +192,20 @@ xmlSecNssHmacNodeRead(xmlSecTransformPtr transform, xmlNodePtr node, xmlSecTrans
+ 	    ctx->dgstSize = atoi((char*)content);	    
+ 	    xmlFree(content);
+ 	}
+-	/* todo: error if dgstSize == 0 ?*/
++
++	/* Ensure that HMAC length is greater than min specified.
++	   Otherwise, an attacker can set this lenght to 0 or very 
++	   small value
++	*/
++	if(ctx->dgstSize < xmlSecNssHmacGetMinOutputLength()) {
++ 	   xmlSecError(XMLSEC_ERRORS_HERE,
++		    xmlSecErrorsSafeString(xmlSecTransformGetName(transform)),
++		    xmlSecNodeHMACOutputLength,
++		    XMLSEC_ERRORS_R_INVALID_NODE_ATTRIBUTE,
++		    "HMAC output length is too small");
++	   return(-1);
++	}
++
+ 	cur = xmlSecGetNextElementNode(cur->next);
+     }
+     
