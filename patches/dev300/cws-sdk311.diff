Index: odk/setsdkenv_unix.sh.in
===================================================================
--- odk/setsdkenv_unix.sh.in	(.../tags/OOO310_m12)	(Revision 272420)
+++ odk/setsdkenv_unix.sh.in	(.../cws/sdk311)	(Revision 272420)
@@ -122,7 +122,7 @@
 # Prepare appropriate output directory.
 if [ -n "${OO_SDK_OUTPUT_DIR}" ]
 then
-    OO_SDK_OUT=${OO_SDK_OUTPUT_DIR}/$OO_SDK_NAME
+    OO_SDK_OUT=${OO_SDK_OUTPUT_DIR}/${OO_SDK_NAME}
     export OO_SDK_OUT
 fi
 
@@ -278,37 +278,44 @@
     export STLDEBUG
 fi
 
-# For URE, prepare symbolic links for libraries:
-rm -f "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.${soext}" \
-    "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}" \
-    "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}" \
-    "${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
-
-if [ -L "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}" ]
+if [ "${platform}" = "MacOSX" ]
 then
-    rm -rf "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
-fi
+#    For URE, prepare symbolic links for libraries:
+#    Only necessary on MacOSX, on other Unix systems the links are already prepared
+#    in the SDK installation.
 
+#    cleanup potential old links first
+    rm -f "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.${soext}" \
+	"${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}" \
+	"${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}" \
+	"${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
 
-if [ "${OO_SDK_URE_HOME}" ]
-then
-    mkdir -p "${OO_SDK_OUT}/${directoryname}/lib"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppu.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.${soext}"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppuhelper${comid}.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_sal.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_salhelper${comid}.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
+    if [ -L "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}" ]
+    then
+	rm -rf "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
+    fi
 
-    if [ -r "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" ]
+#    prepare links 
+    if [ "${OO_SDK_URE_HOME}" ]
     then
-	ln -s "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" \
-	    "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
+	mkdir -p "${OO_SDK_OUT}/${directoryname}/lib"
+	ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppu.${soext}.3" \
+	    "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.${soext}"
+	ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppuhelper${comid}.${soext}.3" \
+	    "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}"
+	ln -s "${OO_SDK_URE_LIB_DIR}/libuno_sal.${soext}.3" \
+	    "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}"
+	ln -s "${OO_SDK_URE_LIB_DIR}/libuno_salhelper${comid}.${soext}.3" \
+	    "${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
+
+	if [ -r "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" ]
+	then
+	    ln -s "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" \
+		"${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
+	fi
     fi
+fi 
 
-fi
 
 # Prepare shell with all necessary environment variables.
 echo 
Index: odk/setsdkenv_unix.csh.in
===================================================================
--- odk/setsdkenv_unix.csh.in	(.../tags/OOO310_m12)	(Revision 272420)
+++ odk/setsdkenv_unix.csh.in	(.../cws/sdk311)	(Revision 272420)
@@ -237,34 +237,40 @@
 endif
 
 
-# For URE, prepare symbolic links for libraries:
-rm -f "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.so" \
-    "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}" \
-    "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}" \
-    "${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
+if [ "${platform}" == "MacOSX" ] then
+#    For URE, prepare symbolic links for libraries:
+#    Only necessary on MacOSX, on other Unix systems the links are already prepared
+#    in the SDK installation.
 
-if ( -e "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}" ) then
-    rm -rf "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
-endif
+#    cleanup potential old links first
+    rm -f "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.so" \
+	"${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}" \
+	"${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}" \
+	"${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
 
-if ( "${OO_SDK_URE_HOME}" != "" ) then
-    mkdir -p "${OO_SDK_OUT}/${directoryname}/lib"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppu.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.${soext}"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppuhelper${comid}.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_sal.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}"
-    ln -s "${OO_SDK_URE_LIB_DIR}/libuno_salhelper${comid}.${soext}.3" \
-        "${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
+    if ( -e "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}" ) then
+	rm -rf "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
+    endif
 
-    if ( -r "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" ) then
-	ln -s "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" \
-	    "${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
+    if ( "${OO_SDK_URE_HOME}" != "" ) then
+	mkdir -p "${OO_SDK_OUT}/${directoryname}/lib"
+	ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppu.${soext}.3" \
+	    "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppu.${soext}"
+	ln -s "${OO_SDK_URE_LIB_DIR}/libuno_cppuhelper${comid}.${soext}.3" \
+	    "${OO_SDK_OUT}/${directoryname}/lib/libuno_cppuhelper${comid}.${soext}"
+	ln -s "${OO_SDK_URE_LIB_DIR}/libuno_sal.${soext}.3" \
+	    "${OO_SDK_OUT}/${directoryname}/lib/libuno_sal.${soext}"
+	ln -s "${OO_SDK_URE_LIB_DIR}/libuno_salhelper${comid}.${soext}.3" \
+	    "${OO_SDK_OUT}/${directoryname}/lib/libuno_salhelper${comid}.${soext}"
+
+	if ( -r "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" ) then
+	    ln -s "${OO_SDK_URE_LIB_DIR}/libstlport_${pltfrm}${STLDEBUG}.${soext}" \
+		"${OO_SDK_OUT}/${directoryname}/lib/libstlport_${pltfrm}${STLDEBUG}.${soext}"
+	endif
     endif
-
 endif
 
+ 
 echo 
 echo " ************************************************************************"
 echo " *"                                                  
Index: odk/settings/settings.mk
===================================================================
--- odk/settings/settings.mk	(.../tags/OOO310_m12)	(Revision 272420)
+++ odk/settings/settings.mk	(.../cws/sdk311)	(Revision 272420)
@@ -216,7 +216,7 @@
 COMP_LINK_FLAGS=$(LIBRARY_LINK_FLAGS) -M $(PRJ)/settings/component.uno.map
 
 EXE_LINK_FLAGS=-w -mt -z combreloc -PIC -temp=/tmp -norunpath -Bdirect -z defs
-LINK_LIBS=-L$(OUT)/lib -L$(OO_SDK_OUT)/$(PLATFORM)/lib -L"$(OO_SDK_URE_LIB_DIR)"
+LINK_LIBS=-L"$(OUT)/lib" -L"$(OO_SDK_HOME)/lib" -L"$(OO_SDK_URE_LIB_DIR)"
 LINK_JAVA_LIBS=-L"$(OO_SDK_JAVA_HOME)/jre/lib/$(JAVA_PROC_TYPE)"
 
 ifeq "$(PROCTYPE)" "sparc64"
@@ -362,7 +362,7 @@
 
 #EXE_LINK_FLAGS=-Wl,--allow-shlib-undefined -Wl,-export-dynamic -Wl,-z,defs -Wl,--whole-archive -lsalcpprt -Wl,--no-whole-archive
 EXE_LINK_FLAGS=-Wl,--allow-shlib-undefined -Wl,-export-dynamic -Wl,-z,defs -Wl,--no-whole-archive
-LINK_LIBS=-L$(OUT)/lib -L$(OO_SDK_OUT)/$(PLATFORM)/lib -L"$(OO_SDK_URE_LIB_DIR)"
+LINK_LIBS=-L"$(OUT)/lib" -L"$(OO_SDK_HOME)/lib" -L"$(OO_SDK_URE_LIB_DIR)"
 LINK_JAVA_LIBS=-L"$(OO_SDK_JAVA_HOME)/jre/lib/$(JAVA_PROC_TYPE)"
 
 ifneq "$(OO_SDK_URE_HOME)" ""
@@ -570,7 +570,7 @@
 
 EXE_LINK_FLAGS=-Wl,--allow-shlib-undefined 
 #EXE_LINK_FLAGS+=-Wl,-export-dynamic -Wl,-z,defs
-LINK_LIBS=-L$(OUT)/lib -L$(OO_SDK_OUT)/$(PLATFORM)/lib -L"$(OO_SDK_URE_LIB_DIR)" $(PTHREAD_LIBS)
+LINK_LIBS=-L"$(OUT)/lib" -L"$(OO_SDK_HOME)/lib" -L"$(OO_SDK_URE_LIB_DIR)" $(PTHREAD_LIBS)
 LINK_JAVA_LIBS=-L"$(OO_SDK_JAVA_HOME)/jre/lib/$(JAVA_PROC_TYPE)"
 
 ifneq "$(OO_SDK_URE_HOME)" ""

Eigenschafts채nderungen: .
___________________________________________________________________
Hinzugef체gt: svn:mergeinfo
   Zusammengef체hrt /branches/OOO310:r271209-272259
   Zusammengef체hrt /tags/OOO310_m12:r272260-272335

