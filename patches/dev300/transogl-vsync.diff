--- slideshow/source/engine/OGLTrans/OGLTrans_TransitionerImpl.cxx.oglvsync~	2008-07-07 20:49:22.348097043 +0200
+++ slideshow/source/engine/OGLTrans/OGLTrans_TransitionerImpl.cxx	2008-07-07 20:53:29.174846394 +0200
@@ -28,6 +28,7 @@
  *
  ************************************************************************/
 
+#define GLX_GLXEXT_PROTOTYPES 1
 #include "OGLTrans_TransitionImpl.hxx"
 
 #include <com/sun/star/rendering/IntegerBitmapLayout.hpp>
@@ -71,6 +72,7 @@ namespace unx
 {
 #include <X11/keysym.h>
 #include <GL/glx.h>
+#include <GL/glxext.h>
 }
 #endif
 
@@ -128,6 +130,9 @@ private:    
     	unsigned int			bpp;
     	unsigned int            Width;
     	unsigned int            Height;
+        const char*             GLXExtensions;
+
+        bool HasGLXExtension( const char* name ) { return gluCheckExtension( (const GLubyte*) name, (const GLubyte*) GLXExtensions ); };
     } GLWin;
     
     /** OpenGL handle to the leaving slide's texture
@@ -295,6 +300,8 @@ void OGLTransitionerImpl::initWindowFrom
 #elif defined( UNX )
         GLWin.dpy = reinterpret_cast<unx::Display*>(pChildSysData->pDisplay);
         GLWin.win = pChildSysData->aWindow;
+	GLWin.GLXExtensions = unx::glXQueryExtensionsString( GLWin.dpy, GLWin.screen );
+	OSL_TRACE("available GLX extensions: %s", GLWin.GLXExtensions);
 #endif
     }
 
@@ -335,6 +342,15 @@ void OGLTransitionerImpl::initWindowFrom
 	wglMakeCurrent(GLWin.hDC,GLWin.hRC);
 #elif defined( UNX )
     glXMakeCurrent( GLWin.dpy, GLWin.win, GLWin.ctx );
+    if(GLWin.HasGLXExtension("GLX_SGI_swap_control")) {
+	    // enable vsync
+	    typedef GLint (*glXSwapIntervalProc)(GLint);
+	    glXSwapIntervalProc glXSwapInterval = (glXSwapIntervalProc) unx::glXGetProcAddress( (const GLubyte*) "glXSwapIntervalSGI" );
+	    if( glXSwapInterval ) {
+		    glXSwapInterval( 1 );
+		    OSL_TRACE("set swap interval to 1 (enable vsync)");
+	    }
+    }
     /* TODO: check for version once the bug in fglrx driver is fixed */
     bBrokenTexturesATI = (strcmp( (const char *) glGetString( GL_VENDOR ), "ATI Technologies Inc." ) == 0 );
 #endif
