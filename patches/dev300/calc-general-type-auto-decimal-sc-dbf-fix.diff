From 925fd39b2f3099f8ea6915868acf1e18747d2a4e Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 16:56:25 +0200
Subject: [PATCH 208/878] calc-general-type-auto-decimal-sc-dbf-fix.diff

---
 sc/inc/column.hxx                |    2 +-
 sc/inc/document.hxx              |    2 +-
 sc/inc/table.hxx                 |    2 +-
 sc/source/core/data/column3.cxx  |   14 ++++++++++++--
 sc/source/core/data/documen4.cxx |    2 +-
 sc/source/core/data/table3.cxx   |    2 +-
 sc/source/ui/docshell/docsh8.cxx |    2 +-
 7 files changed, 18 insertions(+), 8 deletions(-)

diff --git a/sc/inc/column.hxx b/sc/inc/column.hxx
index e8e94bf..8340dac 100644
--- a/sc/inc/column.hxx
+++ b/sc/inc/column.hxx
@@ -399,7 +399,7 @@ public:
     void 		CompileColRowNameFormula();
 
     sal_Int32	GetMaxStringLen( SCROW nRowStart, SCROW nRowEnd, CharSet eCharSet ) const;
-    xub_StrLen	GetMaxNumberStringLen( USHORT& nPrecision,
+    xub_StrLen	GetMaxNumberStringLen( sal_uInt16& nPrecision,
                                     SCROW nRowStart, SCROW nRowEnd ) const;
 
 private:
diff --git a/sc/inc/document.hxx b/sc/inc/document.hxx
index 78ee8d5..79d7a68 100644
--- a/sc/inc/document.hxx
+++ b/sc/inc/document.hxx
@@ -1666,7 +1666,7 @@ public:
     /** Maximum string length of numerical cells of a column, e.g. for dBase export.
         @return String length in characters (!) including the decimal
                 separator, and the decimal precision needed. */
-    xub_StrLen		GetMaxNumberStringLen( USHORT& nPrecision,
+    xub_StrLen		GetMaxNumberStringLen( sal_uInt16& nPrecision,
                                     SCTAB nTab, SCCOL nCol,
                                     SCROW nRowStart, SCROW nRowEnd ) const;
 
diff --git a/sc/inc/table.hxx b/sc/inc/table.hxx
index 88d70fc..4b02966 100644
--- a/sc/inc/table.hxx
+++ b/sc/inc/table.hxx
@@ -651,7 +651,7 @@ public:
 
     sal_Int32	GetMaxStringLen( SCCOL nCol,
                                     SCROW nRowStart, SCROW nRowEnd, CharSet eCharSet ) const;
-    xub_StrLen	GetMaxNumberStringLen( USHORT& nPrecision,
+    xub_StrLen	GetMaxNumberStringLen( sal_uInt16& nPrecision,
                                     SCCOL nCol,
                                     SCROW nRowStart, SCROW nRowEnd ) const;
 
diff --git a/sc/source/core/data/column3.cxx b/sc/source/core/data/column3.cxx
index 8760ac0..ae5df66 100644
--- a/sc/source/core/data/column3.cxx
+++ b/sc/source/core/data/column3.cxx
@@ -1937,11 +1937,15 @@ sal_Int32 ScColumn::GetMaxStringLen( SCROW nRowStart, SCROW nRowEnd, CharSet eCh
 }
 
 
-xub_StrLen ScColumn::GetMaxNumberStringLen( USHORT& nPrecision,
+xub_StrLen ScColumn::GetMaxNumberStringLen( sal_uInt16& nPrecision,
         SCROW nRowStart, SCROW nRowEnd ) const
 {
     xub_StrLen nStringLen = 0;
     nPrecision = pDocument->GetDocOptions().GetStdPrecision();
+    if ( nPrecision == SvNumberFormatter::UNLIMITED_PRECISION )
+        // In case of unlimited precision, use 2 instead.
+        nPrecision = 2;
+
     if ( pItems )
     {
         String aString;
@@ -1962,6 +1966,7 @@ xub_StrLen ScColumn::GetMaxNumberStringLen( USHORT& nPrecision,
                 xub_StrLen nLen = aString.Len();
                 if ( nLen )
                 {
+                    sal_uInt16 nNewPrec = SvNumberFormatter::UNLIMITED_PRECISION;
                     if ( nFormat )
                     {
                         const SvNumberformat* pEntry = pNumFmt->GetEntry( nFormat );
@@ -1969,11 +1974,16 @@ xub_StrLen ScColumn::GetMaxNumberStringLen( USHORT& nPrecision,
                         {
                             BOOL bThousand, bNegRed;
                             USHORT nLeading;
-                            pEntry->GetFormatSpecialInfo(bThousand, bNegRed, nPrecision, nLeading);
+                            pEntry->GetFormatSpecialInfo(bThousand, bNegRed, nNewPrec, nLeading);
                         }
                         else
                             nPrecision = pNumFmt->GetFormatPrecision( nFormat );
                     }
+
+                    if (nNewPrec != SvNumberFormatter::UNLIMITED_PRECISION)
+                        // Skip unlimited precisions.
+                        nPrecision = nNewPrec;
+
                     if ( nPrecision )
                     {	// less than nPrecision in string => widen it
                         // more => shorten it
diff --git a/sc/source/core/data/documen4.cxx b/sc/source/core/data/documen4.cxx
index 49ae166..733f620 100644
--- a/sc/source/core/data/documen4.cxx
+++ b/sc/source/core/data/documen4.cxx
@@ -430,7 +430,7 @@ sal_Int32 ScDocument::GetMaxStringLen( SCTAB nTab, SCCOL nCol,
         return 0;
 }
 
-xub_StrLen ScDocument::GetMaxNumberStringLen( USHORT& nPrecision, SCTAB nTab,
+xub_StrLen ScDocument::GetMaxNumberStringLen( sal_uInt16& nPrecision, SCTAB nTab,
                                     SCCOL nCol,
                                     SCROW nRowStart, SCROW nRowEnd ) const
 {
diff --git a/sc/source/core/data/table3.cxx b/sc/source/core/data/table3.cxx
index 448ba7f..e860634 100644
--- a/sc/source/core/data/table3.cxx
+++ b/sc/source/core/data/table3.cxx
@@ -2029,7 +2029,7 @@ sal_Int32 ScTable::GetMaxStringLen( SCCOL nCol, SCROW nRowStart,
         return 0;
 }
 
-xub_StrLen ScTable::GetMaxNumberStringLen( USHORT& nPrecision, SCCOL nCol,
+xub_StrLen ScTable::GetMaxNumberStringLen( sal_uInt16& nPrecision, SCCOL nCol,
                                 SCROW nRowStart, SCROW nRowEnd ) const
 {
     if ( ValidCol(nCol) )
diff --git a/sc/source/ui/docshell/docsh8.cxx b/sc/source/ui/docshell/docsh8.cxx
index ac63839..727675c 100644
--- a/sc/source/ui/docshell/docsh8.cxx
+++ b/sc/source/ui/docshell/docsh8.cxx
@@ -655,7 +655,7 @@ void lcl_GetColumnTypes( ScDocShell& rDocShell,
         else if ( nDbType == sdbc::DataType::DECIMAL )
         {	// maximale Feldbreite und Nachkommastellen bestimmen
             xub_StrLen nLen;
-            USHORT nPrec;
+            sal_uInt16 nPrec;
             nLen = pDoc->GetMaxNumberStringLen( nPrec, nTab, nCol,
                 nFirstDataRow, nLastRow );
             // dBaseIII Limit Nachkommastellen: 15
-- 
1.7.0.1

