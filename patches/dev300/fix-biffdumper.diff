Index: sc/source/filter/inc/xistream.hxx
===================================================================
--- sc/source/filter/inc/xistream.hxx	(revision 264332)
+++ sc/source/filter/inc/xistream.hxx	(working copy)
@@ -310,8 +310,7 @@
     /** Seeks to last position from user position stack.
         @descr  This position will be removed from the stack. */
     void                PopPosition();
-//UNUSED2008-05  /** Removes last position from user position stack, but does not seek to it. */
-//UNUSED2008-05  void                RejectPosition();
+    void                RejectPosition();
 
     /** Stores current position. This position keeps valid in all records. */
     void                StoreGlobalPosition();
Index: sc/source/filter/excel/xistream.cxx
===================================================================
--- sc/source/filter/excel/xistream.cxx	(revision 264332)
+++ sc/source/filter/excel/xistream.cxx	(working copy)
@@ -468,12 +468,12 @@
     }
 }
 
-//UNUSED2008-05  void XclImpStream::RejectPosition()
-//UNUSED2008-05  {
-//UNUSED2008-05      DBG_ASSERT( !maPosStack.empty(), "XclImpStream::RejectPosition - stack empty" );
-//UNUSED2008-05      if( !maPosStack.empty() )
-//UNUSED2008-05          maPosStack.pop_back();
-//UNUSED2008-05  }
+void XclImpStream::RejectPosition()
+{
+    DBG_ASSERT( !maPosStack.empty(), "XclImpStream::RejectPosition - stack empty" );
+    if( !maPosStack.empty() )
+        maPosStack.pop_back();
+}
 
 void XclImpStream::StoreGlobalPosition()
 {
Index: sc/source/filter/excel/biffdump.cxx
===================================================================
--- sc/source/filter/excel/biffdump.cxx	(revision 264332)
+++ sc/source/filter/excel/biffdump.cxx	(working copy)
@@ -918,7 +918,7 @@
 
     // XF type/parent
     LINESTART();
-    ::extract_value( nTmp, nTypeProt, 4, 12 );
+    nTmp = ::extract_value<sal_uInt16, sal_uInt16>( nTypeProt, 4, 12 );
     ADDTEXT( "index=#" );           __AddDec( t, nXFCount++ );
     ADDTEXT( "   type=" );          lcl_AddFlag( t, bCell, "cell", "style" );
     ADDTEXT( "   parent-xf=#" );    __AddDec( t, nTmp );
@@ -926,7 +926,7 @@
 
     // attribute used flags
     LINESTART();
-    ::extract_value( __nFlags, nMiscAttrib, 10, 6 );
+    __nFlags = ::extract_value<sal_uInt16, sal_uInt16>( nMiscAttrib, 10, 6 );
     if( !bCell ) __nFlags ^= 0x3F;  // in style XFs a 0 means used
     ADDTEXT( "used " ); STARTFLAG();
     ADDFLAG( EXC_XF_DIFF_VALFMT, "numfmt" );
@@ -947,7 +947,7 @@
 
     // alignment
     LINESTART();
-    ::extract_value( nTmp, nAlign, 0, 3 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt16>( nAlign, 0, 3 );
     ADDTEXT( "hor-align=" );        __AddDec( t, nTmp );
     ADDTEXT( " (" );
     switch( nTmp )
@@ -962,7 +962,7 @@
         case EXC_XF_HOR_DISTRIB:    ADDTEXT( "distrib" );   break;
         default:                    ADDTEXT( "!unknown!" );
     };
-    ::extract_value( nTmp, nAlign, 4, 3 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt16>( nAlign, 4, 3 );
     ADDTEXT( ")   ver-align=" );    __AddDec( t, nTmp );
     ADDTEXT( " (" );
     switch( nTmp )
@@ -978,7 +978,7 @@
     PRINT();
 
     LINESTART();
-    ::extract_value( nTmp, nAlign, 8, 8 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt16>( nAlign, 8, 8 );
     ADDTEXT( "rotation=" );         __AddDec( t, nTmp );
     ADDTEXT( " (" );
     if( nTmp < 91 )
@@ -989,10 +989,10 @@
         { ADDTEXT( "stacked" ); }
     else
         { ADDTEXT( "!unknown!" ); }
-    ::extract_value( nTmp, nMiscAttrib, 0, 4 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt16>( nMiscAttrib, 0, 4 );
     ADDTEXT( ")   indent=" );       __AddDec( t, nTmp );
     ADDTEXT( "   shrink=" );        lcl_AddOnOff( t, ::get_flag( nMiscAttrib, EXC_XF8_SHRINK ) );
-    ::extract_value( nTmp, nMiscAttrib, 6, 2 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt16>( nMiscAttrib, 6, 2 );
     ADDTEXT( "   text-dir=" );      __AddDec( t, nTmp );
     ADDTEXT( " (" );
     switch( nTmp )
@@ -1007,39 +1007,39 @@
 
     // border/area
     LINESTART();
-    ::extract_value( nTmp, nBorder1, 0, 4 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt32>( nBorder1, 0, 4 );
     ADDTEXT( "left-line=" );        __AddDec( t, nTmp );
-    ::extract_value( nTmp, nBorder1, 16, 7 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt32>( nBorder1, 16, 7 );
     ADDTEXT( " color=" );           __AddDec( t, nTmp );
-    ::extract_value( nTmp, nBorder1, 4, 4 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt32>( nBorder1, 4, 4 );
     ADDTEXT( "   right-line =" );   __AddDec( t, nTmp );
-    ::extract_value( nTmp, nBorder1, 23, 7 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt32>( nBorder1, 23, 7 );
     ADDTEXT( " color=" );           __AddDec( t, nTmp );
     PRINT();
     LINESTART();
-    ::extract_value( nTmp, nBorder1, 8, 4 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt32>( nBorder1, 8, 4 );
     ADDTEXT( "top-line =" );        __AddDec( t, nTmp );
-    ::extract_value( nTmp, nBorder2, 0, 7 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt32>( nBorder2, 0, 7 );
     ADDTEXT( " color=" );           __AddDec( t, nTmp );
-    ::extract_value( nTmp, nBorder1, 12, 4 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt32>( nBorder1, 12, 4 );
     ADDTEXT( "   bottom-line=" );   __AddDec( t, nTmp );
-    ::extract_value( nTmp, nBorder2, 7, 7 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt32>( nBorder2, 7, 7 );
     ADDTEXT( " color=" );           __AddDec( t, nTmp );
     PRINT();
     LINESTART();
-    ::extract_value( nTmp, nBorder2, 21, 4 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt32>( nBorder2, 21, 4 );
     ADDTEXT( "diag-line=" );        __AddDec( t, nTmp );
-    ::extract_value( nTmp, nBorder2, 14, 7 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt32>( nBorder2, 14, 7 );
     ADDTEXT( " color=" );           __AddDec( t, nTmp );
     ADDTEXT( "   diag-tl-to-br=" ); lcl_AddOnOff( t, ::get_flag( nBorder1, static_cast< sal_Size >( 0x40000000U ) ) );
     ADDTEXT( "   diag-bl-to-tr=" ); lcl_AddOnOff( t, ::get_flag( nBorder1, static_cast< sal_Size >( 0x80000000U ) ) );
     PRINT();
     LINESTART();
-    ::extract_value( nTmp, nBorder2, 26, 6 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt32>( nBorder2, 26, 6 );
     ADDTEXT( "area-pattern=" );     __AddDec( t, nTmp );
-    ::extract_value( nTmp, nArea, 0, 7 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt16>( nArea, 0, 7 );
     ADDTEXT( "   fore-color=" );    __AddDec( t, nTmp );
-    ::extract_value( nTmp, nArea, 7, 7 );
+    nTmp = ::extract_value<sal_uInt16,sal_uInt16>( nArea, 7, 7 );
     ADDTEXT( "   back-color=" );    __AddDec( t, nTmp );
     PRINT();
 
@@ -7478,7 +7478,7 @@
 #define EXC_CTRLDUMP_PLAIN_STARTFLAG( text )                EXC_CTRLDUMP_PLAIN_STARTOPTFLAG( text, true, 0 )
 #define EXC_CTRLDUMP_STARTFLAG( text )                      EXC_CTRLDUMP_STARTOPTFLAG( text, true, 0 )
 #define EXC_CTRLDUMP_ADDFLAG( flag, text )                  { if( nFlags & (flag) ) t.Append( " " text ); }
-#define EXC_CTRLDUMP_ADDFLAGVALUE( start, width, text )     { sal_uInt32 nValue; ::extract_value( nValue, nFlags, start, width ); t.Append( " " text "=" ); lclAppendDec( t, nValue ); }
+#define EXC_CTRLDUMP_ADDFLAGVALUE( start, width, text )     { sal_uInt32 nValue = ::extract_value<sal_uInt32,sal_uInt32>( nFlags, start, width ); t.Append( " " text "=" ); lclAppendDec( t, nValue ); }
 #define EXC_CTRLDUMP_ENDFLAG( reserved )                    { if( nFlags & (reserved) ) { t.Append( " ?" ); lclAppendHex( t, static_cast< sal_uInt32 >( nFlags & (reserved) ) ); } EXC_CTRLDUMP_PRINT(); }
 // read coordinates
 #define EXC_CTRLDUMP_COORD2( text ) { EXC_CTRLDUMP_ALIGN_INSTRM( 4 ); EXC_CTRLDUMP_DEC2( text "-x" ); EXC_CTRLDUMP_DEC2( text "-y" ); }
