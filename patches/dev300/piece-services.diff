diff -u -r solenv.pristine/bin/make_installer.pl solenv/bin/make_installer.pl
--- solenv.pristine/bin/make_installer.pl	2008-08-13 14:01:56.000000000 +0100
+++ solenv/bin/make_installer.pl	2008-08-14 15:40:16.000000000 +0100
@@ -302,6 +302,13 @@
 }
 
 my $includepatharrayref = installer::converter::convert_stringlist_into_array($includepathref, ",");
+if (defined $ENV{OO_BUILD_SERVICES}) {
+    push @{$includepatharrayref}, "$ENV{SPLITUREDIR}/share/java";
+    push @{$includepatharrayref}, "$ENV{SPLITINSTALLDIR}/classes";
+    push @{$includepatharrayref}, "$ENV{SPLITUREDIR}/bin";
+    push @{$includepatharrayref}, "$ENV{SPLITUREDIR}/lib";
+    push @{$includepatharrayref}, "$ENV{SPLITINSTALLDIR}";
+}
 if ( $installer::globals::globallogging ) { installer::files::save_file($loggingdir . "allpatharray1.log" ,$includepatharrayref); }
 if (defined $ENV{OO_SOLVERDIR}) {
     push @{$includepatharrayref}, "$ENV{OO_SOLVERDIR}/bin";
@@ -858,6 +865,22 @@
 		}
 	}
 
+	if (defined $ENV{OO_BUILD_SERVICES}) {
+	    installer::logger::print_message( "... creating preregistered services.rdb ...\n" );
+
+	    installer::servicesfile::create_services_rdb($allvariableshashref, $filesinproductlanguageresolvedarrayref, $includepatharrayref, $languagestringref);
+	    if ( $installer::globals::globallogging ) { installer::files::save_array_of_hashes($loggingdir . "productfiles14.log", $filesinproductlanguageresolvedarrayref); }
+	# saving debug info at end
+	    if ( $installer::globals::debug ) { installer::logger::savedebug($installer::globals::exitlog); }
+
+#######################################################
+# Stopping time
+#######################################################
+
+installer::logger::stoptime();
+	    exit 0;
+	}
+	    
 	#####################################
 	# Calls of regmerge
 	#####################################
Only in solenv/bin: make_installer.pl~
diff -u -r solenv.pristine/bin/modules/installer/archivefiles.pm solenv/bin/modules/installer/archivefiles.pm
--- solenv.pristine/bin/modules/installer/archivefiles.pm	2008-08-13 14:01:56.000000000 +0100
+++ solenv/bin/modules/installer/archivefiles.pm	2008-08-14 15:44:09.000000000 +0100
@@ -198,6 +198,8 @@
 
 			if ( $installer::globals::dounzip ) { installer::systemactions::create_directory($unzipdir); }	# creating subdirectories with the names of the zipfiles
 
+			next if (defined $ENV{OO_BUILD_SERVICES});
+
 			$systemcall = "$installer::globals::unzippath -l $sourcepath |";
 			open (UNZIP, "$systemcall");
 			my @zipfile = <UNZIP>;
@@ -219,7 +221,7 @@
 				# Parameter -q : quiet mode
 
 				if ( $installer::globals::dounzip )			# really unpacking the files 
-				{					
+				{									    
 					$returnvalue = 1;
 					$systemcall = "$installer::globals::unzippath -o -q $sourcepath -d $unzipdir";
 					$returnvalue = system($systemcall);
Only in solenv/bin/modules/installer: archivefiles.pm~
diff -u -r solenv.pristine/bin/modules/installer/scpzipfiles.pm solenv/bin/modules/installer/scpzipfiles.pm
--- solenv.pristine/bin/modules/installer/scpzipfiles.pm	2008-08-13 14:01:56.000000000 +0100
+++ solenv/bin/modules/installer/scpzipfiles.pm	2008-08-14 13:09:29.000000000 +0100
@@ -147,7 +147,9 @@
 			my $onefilename = $onefile->{'Name'};
 			my $sourcepath = $onefile->{'sourcepath'};
 
-				next if ($installer::globals::split && $sourcepath eq '');
+if (!defined $ENV{OO_BUILD_SERVICES}) {
+			next if ($installer::globals::split && $sourcepath eq '');
+}
 			
 			if ( $onefilename =~ /^\s*\Q$installer::globals::separator\E/ )	# filename begins with a slash, for instance /registry/schema/org/openoffice/VCL.xcs
 			{
@@ -165,17 +167,19 @@
 				installer::systemactions::create_directory_structure($destdir);
 			}
 
-			my $copysuccess = installer::systemactions::copy_one_file($sourcepath, $movepath);
-
+			my $copysuccess;
+			if (!defined $ENV{OO_BUILD_SERVICES}) {
+			    $copysuccess = installer::systemactions::copy_one_file($sourcepath, $movepath);
 			if ( $copysuccess )
 			{
 				# Now the file can be edited
 				# ToDo: How about binary patching?
 
-				my $onefileref = installer::files::read_file($movepath);
+			my $onefileref = installer::files::read_file($movepath);
 				replace_all_ziplistvariables_in_file($onefileref, $variableshashref);
 				installer::files::save_file($destinationpath ,$onefileref);
 			}
+			}
 
 			# Saving the original source, where the file was found
 			$onefile->{'originalsourcepath'} = $onefile->{'sourcepath'};
Only in solenv/bin/modules/installer: scpzipfiles.pm~
diff -u -r solenv.pristine/bin/modules/installer/scriptitems.pm solenv/bin/modules/installer/scriptitems.pm
--- solenv.pristine/bin/modules/installer/scriptitems.pm	2008-08-13 14:01:56.000000000 +0100
+++ solenv/bin/modules/installer/scriptitems.pm	2008-08-14 13:06:53.000000000 +0100
@@ -1304,7 +1304,10 @@
 				$error_occured = 1;
 			}
 
-				next;	# removing this file from list, if sourcepath is empty
+				if (!defined $ENV{OO_BUILD_SERVICES}) {
+				    print STDERR "drop file $filename ?\n";
+				    next;	# removing this file from list, if sourcepath is empty
+				}
 			}
 		}
 
Only in solenv/bin/modules/installer: scriptitems.pm~
diff -u -r solenv.pristine/bin/modules/installer/servicesfile.pm solenv/bin/modules/installer/servicesfile.pm
--- solenv.pristine/bin/modules/installer/servicesfile.pm	2008-08-13 14:01:56.000000000 +0100
+++ solenv/bin/modules/installer/servicesfile.pm	2008-08-14 16:30:39.000000000 +0100
@@ -138,6 +138,7 @@
     for ( my $i = 0; $i <= $#{$unocomponents}; )
     {
         my $sourcepath = ${$unocomponents}[$i++]->{'sourcepath'};
+	defined $ENV{OO_BUILD_SERVICES} && $sourcepath eq "" && next;
 
         $filestring = $filestring . make_file_url($sourcepath);
 
@@ -446,8 +447,9 @@
 	$python_error_occured = 0;
 
 	if ( $#unocomponents > -1 ) { $uno_error_occured = register_unocomponents($allvariableshashref, \@unocomponents, $regcompfileref, $servicesfile, $nativeservicesurlprefix); }
 	if ( $#javacomponents > -1 ) { $java_error_occured = register_javacomponents($allvariableshashref, \@javacomponents, $regcompfileref, $servicesfile, $regcomprdb, $javaservicesurlprefix); }
-	if ( $#pythoncomponents > -1 ) { $python_error_occured = register_pythoncomponents(\@pythoncomponents, $regcompfileref, $servicesfile, $includepatharrayref); }
+#	if ( $#pythoncomponents > -1 ) { $python_error_occured = register_pythoncomponents(\@pythoncomponents, $regcompfileref, $servicesfile, $includepatharrayref); }
+	print STDERR "Skip python component registration\n";
 		
 	if ( $uno_error_occured || $java_error_occured || $python_error_occured ) { $registererrorflag = 1; }
 	
@@ -506,7 +509,12 @@
 	{
 		my $filename = $installer::globals::regcompjars[$i];
 	
-		my $jarfileref = installer::scriptitems::get_sourcepath_from_filename_and_includepath(\$filename, $includepatharrayref, 1);
+#		my @includepath;
+#		for my $foo (@{$includepatharrayref}) { push @includepath, $foo; }
+#		push @includepath, "$ENV{SPLITUREDIR}/share/java";
+#		push @includepath, "$ENV{SPLITINSTALLDIR}/classes";
+#		my $jarfileref = installer::scriptitems::get_sourcepath_from_filename_and_includepath_classic(\$filename, \@includepath, 1);
+		my $jarfileref = installer::scriptitems::get_sourcepath_from_filename_and_includepath_classic(\$filename, $includepatharrayref, 1);
 
 		if ( $$jarfileref eq "" ) { installer::exiter::exit_program("ERROR: Could not find file $filename for registering java components!", "prepare_classpath_for_java_registration"); }
 		
@@ -881,9 +889,12 @@
 {
 	my ($allvariableshashref, $filesarrayref, $includepatharrayref, $languagestringref) = @_;
 
+
 	# collecting all services files
 	my $unocomponentfiles = installer::worker::collect_all_items_with_special_flag($filesarrayref, "UNO_COMPONENT");
 	$unocomponentfiles = filter_regmergefiles($unocomponentfiles);
+
+	print STDERR "foo ! - we have to register this many components: $#{$unocomponentfiles}\n";
 	
 	if ( $#{$unocomponentfiles} > -1 )	# not empty -> at least one file with flag UNO_COMPONENT
 	{
@@ -893,6 +904,8 @@
 
 		$registryfiles = check_defintion_of_databasegids($databasegids, $registryfiles);
 
+		print STDERR "foo ! - into this many registries: $#{$registryfiles}\n";
+
 		# Now the creation of all files with flag STARREGISTRY can begin
 		
 		for ( my $i = 0; $i <= $#{$registryfiles}; $i++ )
@@ -952,6 +965,9 @@
 		else { $searchname = "regmerge.exe"; } 
 	
 		$regmergefileref = installer::scriptitems::get_sourcepath_from_filename_and_includepath(\$searchname, $includepatharrayref, 1);
+	if ( $$regmergefileref eq "" && $installer::globals::split) {
+	    $$regmergefileref = $ENV{OO_INSTDIR} . "/solver/bin/" . $searchname;
+	}
 		if ( $$regmergefileref eq "" ) { installer::exiter::exit_program("ERROR: Could not find file $searchname for registering uno components!", "create_services_rdb"); }
 				# For Windows the libraries included into the mozruntime.zip have to be added to the path
 				if ($installer::globals::iswin) { add_path_to_pathvariable_directory($filesarrayref, "mozruntime_zip"); }
Only in solenv/bin/modules/installer: servicesfile.pm~
