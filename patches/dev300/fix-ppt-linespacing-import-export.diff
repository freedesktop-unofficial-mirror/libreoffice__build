---
 editeng/source/editeng/impedit3.cxx |   15 +++++++++++++++
 filter/source/msfilter/svdfppt.cxx  |    6 ++++--
 sd/source/filter/eppt/eppt.hxx      |    1 +
 sd/source/filter/eppt/epptso.cxx    |   10 +++++++---
 sd/source/ui/dlg/paragr.cxx         |   14 ++++++++++++++
 sd/source/ui/inc/paragr.hxx         |    2 ++
 6 files changed, 43 insertions(+), 5 deletions(-)

diff --git editeng/source/editeng/impedit3.cxx editeng/source/editeng/impedit3.cxx
index 01d36c2..0511385 100644
--- editeng/source/editeng/impedit3.cxx
+++ editeng/source/editeng/impedit3.cxx
@@ -1326,6 +1326,13 @@ sal_Bool ImpEditEngine::CreateLines( USHORT nPara, sal_uInt32 nStartPosY )
                     pLine->SetHeight( nMinHeight, nTxtHeight );
                 }
             }
+            else if ( rLSItem.GetLineSpaceRule() == SVX_LINE_SPACE_FIX )
+            {
+                sal_uInt16 nFixHeight = GetYValue( rLSItem.GetLineHeight() );
+                sal_uInt16 nTxtHeight = pLine->GetHeight();
+                pLine->SetMaxAscent( (sal_uInt16)(pLine->GetMaxAscent() + ( nFixHeight - nTxtHeight ) ) );
+                pLine->SetHeight( nFixHeight, nTxtHeight );
+            }
             else if ( rLSItem.GetInterLineSpaceRule() == SVX_INTER_LINE_SPACE_PROP )
             {
                 if ( nPara || IsFixedCellHeight() || pLine->GetStartPortion() ) // Nicht die aller erste Zeile
@@ -1670,6 +1677,14 @@ void ImpEditEngine::CreateAndInsertEmptyLine( ParaPortion* pParaPortion, sal_uIn
                 pTmpLine->SetHeight( nMinHeight, nTxtHeight );
             }
         }
+        else if ( rLSItem.GetLineSpaceRule() == SVX_LINE_SPACE_FIX )
+        {
+            sal_uInt16 nFixHeight = rLSItem.GetLineHeight();
+            sal_uInt16 nTxtHeight = pTmpLine->GetHeight();
+
+            pTmpLine->SetMaxAscent( (sal_uInt16)(pTmpLine->GetMaxAscent() + ( nFixHeight - nTxtHeight ) ) );
+            pTmpLine->SetHeight( nFixHeight, nTxtHeight );
+        }
         else if ( rLSItem.GetInterLineSpaceRule() == SVX_INTER_LINE_SPACE_PROP )
         {
             USHORT nPara = GetParaPortions().GetPos( pParaPortion );
diff --git filter/source/msfilter/svdfppt.cxx filter/source/msfilter/svdfppt.cxx
index 355970f..993ca9a 100644
--- filter/source/msfilter/svdfppt.cxx
+++ filter/source/msfilter/svdfppt.cxx
@@ -6382,9 +6382,11 @@ void PPTParagraphObj::ApplyTo( SfxItemSet& rSet,  boost::optional< sal_Int16 >&
         }
         rSet.Put( SdrTextFixedCellHeightItem( TRUE ), SDRATTR_TEXT_USEFIXEDCELLHEIGHT );
         SvxLineSpacingItem aItem( 200, EE_PARA_SBL );
-        if ( nVal2 <= 0 )
+        if ( nVal2 <= 0 ) {
             aItem.SetLineHeight( (UINT16)( rManager.ScalePoint( -nVal2 ) / 8 ) );
-        else
+            aItem.GetLineSpaceRule() = SVX_LINE_SPACE_FIX;
+            aItem.GetInterLineSpaceRule() = SVX_INTER_LINE_SPACE_OFF;
+        } else
         {
             sal_uInt8 nPropLineSpace = (BYTE)nVal2;
             aItem.SetPropLineSpace( nPropLineSpace );
diff --git sd/source/filter/eppt/epptso.cxx sd/source/filter/eppt/epptso.cxx
index d8121b2..d226781 100755
--- sd/source/filter/eppt/epptso.cxx
+++ sd/source/filter/eppt/epptso.cxx
@@ -1365,7 +1365,7 @@ void PPTWriter::ImplWriteParagraphs( SvStream& rOut, TextObj& rTextObj )
             }
             else
             {
-                if ( pPortion && pPortion->mnCharHeight > (sal_uInt16)( ((double)-nLineSpacing) * 0.001 * 72.0 / 2.54 ) ) // 1/100mm to point
+                if ( !pPara->mbFixedLineSpacing && pPortion && pPortion->mnCharHeight > (sal_uInt16)( ((double)-nLineSpacing) * 0.001 * 72.0 / 2.54 ) ) // 1/100mm to point
                     nLineSpacing = nNormalSpacing;
                 else
                     nLineSpacing = (sal_Int16)( (double)nLineSpacing / 4.40972 );
--- sd/source/filter/eppt/pptx-text.cxx
+++ sd/source/filter/eppt/pptx-text.cxx
@@ -2818,11 +2818,15 @@ void ParagraphObj::ImplGetParagraphValues( PPTExBulletProvider& rBuProv, sal_Boo
             = *( (::com::sun::star::style::LineSpacing*)mAny.getValue() );
         switch ( aLineSpacing.Mode )
         {
+            case ::com::sun::star::style::LineSpacingMode::FIX :
+                mnLineSpacing = (sal_Int16)(-( aLineSpacing.Height ) );
+                mbFixedLineSpacing = TRUE;
+                break;
             case ::com::sun::star::style::LineSpacingMode::MINIMUM :
             case ::com::sun::star::style::LineSpacingMode::LEADING :
-            case ::com::sun::star::style::LineSpacingMode::FIX :
                 mnLineSpacing = (sal_Int16)(-( aLineSpacing.Height ) );
-            break;
+                mbFixedLineSpacing = FALSE;
+           break;
 
             case ::com::sun::star::style::LineSpacingMode::PROP :
             default:
diff --git sd/source/ui/dlg/paragr.cxx sd/source/ui/dlg/paragr.cxx
index a3f81f2..a896cc4 100644
--- sd/source/ui/dlg/paragr.cxx
+++ sd/source/ui/dlg/paragr.cxx
@@ -190,5 +190,19 @@ SdParagraphDlg::SdParagraphDlg( Window* pParent, const SfxItemSet* pAttr )
 
        AddTabPage( RID_SVXPAGE_TABULATOR );
 }
+
+void SdParagraphDlg::PageCreated( USHORT nId, SfxTabPage &rPage )
+{
+    SfxAllItemSet aSet(*(GetInputSetImpl()->GetPool()));
+    switch( nId )
+    {
+    case RID_SVXPAGE_STD_PARAGRAPH:
+        aSet.Put(SfxUInt32Item(SID_SVXSTDPARAGRAPHTABPAGE_ABSLINEDIST, MM50/2));
+        rPage.PageCreated(aSet);
+        break;
+    default:
+        break;
+    }
+}
 
 /* vim:set shiftwidth=4 softtabstop=4 expandtab: */
diff --git sd/source/ui/inc/paragr.hxx sd/source/ui/inc/paragr.hxx
index 89333d8..1bf81b6 100644
--- sd/source/ui/inc/paragr.hxx
+++ sd/source/ui/inc/paragr.hxx
@@ -43,6 +43,8 @@ class SdParagraphDlg : public SfxTabDialog
 private:
     const SfxItemSet&	rOutAttrs;
 
+    virtual void	PageCreated( USHORT nId, SfxTabPage &rPage );
+
 public:
                     SdParagraphDlg( Window* pParent, const SfxItemSet* pAttr );
                     ~SdParagraphDlg() {};
-- 
1.7.0.1

