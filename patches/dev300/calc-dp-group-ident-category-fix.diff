diff --git sc/inc/dpcachetable.hxx sc/inc/dpcachetable.hxx
index e894eed..a599c51 100644
--- sc/inc/dpcachetable.hxx
+++ sc/inc/dpcachetable.hxx
@@ -203,7 +203,7 @@ public:
     /** Get the cell instance at specified location within the data grid. Note
         that the data grid doesn't include the header row.  Don't delete the
         returned object! */
-    const ::ScDPCacheTable::Cell* getCell(SCCOL nCol, SCROW nRow, bool bRepeatIfEmpty = false) const;
+    const ::ScDPCacheTable::Cell* getCell(SCCOL nCol, SCROW nRow, bool bRepeatIfEmpty) const;
 
     const String* getFieldName(sal_Int32 nIndex) const;
 
diff --git sc/inc/dpgroup.hxx sc/inc/dpgroup.hxx
index 391f5fb..3c6f2d3 100644
--- sc/inc/dpgroup.hxx
+++ sc/inc/dpgroup.hxx
@@ -218,6 +218,8 @@ public:
     virtual void                    DisposeData();
     virtual void                    SetEmptyFlags( BOOL bIgnoreEmptyRows, BOOL bRepeatIfEmpty );
 
+    virtual bool                    IsRepeatIfEmpty();
+
     virtual void                    CreateCacheTable();
     virtual void                    FilterCacheTable(const ::std::vector<ScDPCacheTable::Criterion>& rCriteria);
     virtual void                    GetDrillDownData(const ::std::vector<ScDPCacheTable::Criterion>& rCriteria,
diff --git sc/source/core/data/dpgroup.cxx sc/source/core/data/dpgroup.cxx
index 5cc1893..8d14d0d 100644
--- sc/source/core/data/dpgroup.cxx
+++ sc/source/core/data/dpgroup.cxx
@@ -1131,6 +1131,11 @@ void ScDPGroupTableData::SetEmptyFlags( BOOL bIgnoreEmptyRows, BOOL bRepeatIfEmp
     pSourceData->SetEmptyFlags( bIgnoreEmptyRows, bRepeatIfEmpty );
 }
 
+bool ScDPGroupTableData::IsRepeatIfEmpty()
+{
+    return pSourceData->IsRepeatIfEmpty();
+}
+
 void ScDPGroupTableData::CreateCacheTable()
 {
     pSourceData->CreateCacheTable();
diff --git sc/source/core/data/dptabdat.cxx sc/source/core/data/dptabdat.cxx
index dc42601..4a6add2 100644
--- sc/source/core/data/dptabdat.cxx
+++ sc/source/core/data/dptabdat.cxx
@@ -258,7 +258,8 @@ void ScDPTableData::FillRowDataFromCacheTable(sal_Int32 nRow, const ScDPCacheTab
         long nDim = rInfo.aDataSrcCols[i];
         rData.aValues.push_back( ScDPValueData() );
         ScDPValueData& rVal = rData.aValues.back();
-        const ScDPCacheTable::Cell* pCell = rCacheTable.getCell(static_cast<SCCOL>(nDim), static_cast<SCROW>(nRow));
+        const ScDPCacheTable::Cell* pCell = rCacheTable.getCell(
+            static_cast<SCCOL>(nDim), static_cast<SCROW>(nRow), IsRepeatIfEmpty());
         if (pCell)
         {
             rVal.fValue = pCell->mbNumeric ? pCell->mfValue : 0.0;
