Index: soffice.sh
===================================================================
--- desktop/scripts/soffice.sh	(Revision 277909)
+++ desktop/scripts/soffice.sh	(Arbeitskopie)
@@ -30,18 +30,121 @@
 #
 #*************************************************************************
 
-#
-# STAR_PROFILE_LOCKING_DISABLED=1
-# export STAR_PROFILE_LOCKING_DISABLED
-#
+if test -z "$HOME"; then
+    HOME=$(getent passwd $(whoami) | cut -d":" -f6)
+fi
+
+# Ubuntu helper functions
+home_on_nfs()
+{
+    case $(stat -f -c %T $HOME) in nfs|smb)
+        return 0
+    esac
+    return 1
+}
+file_on_nfs(){
+    for i; do
+       case "$i" in -*) continue; esac
+       [ -f "$i" ] || continue
+       case $(stat -f -c %T "$i") in nfs|smb)
+            return 0
+       esac
+    done
+    return 1
+}
+
+# FIXME: this is conservative; allow more known working configurations
+working_opengl_support()
+{
+    if [ -n "$(lsmod | awk '/^(fglrx|nvidia)/ {print $1}')" ]; then
+       return 1
+    fi
+    return 0
+}
+
+# read Ubuntu config file
+
+FILE_LOCKING=auto
+OPENGL_SUPPORT=no
+if [ -f /etc/openoffice/soffice.sh ]; then
+    . /etc/openoffice/soffice.sh
+fi
+
+# sanity checks
+
+case "$FILE_LOCKING" in
+    auto|yes|no) ;;
+    *)
+        echo >&2 "unknown value '$FILE_LOCKING' for FILE_LOCKING parameter."
+       FILE_LOCKING=auto
+       echo >&2 "FILE_LOCKING reset to '$FILE_LOCKING'"
+esac
+ 
+case "$OPENGL_SUPPORT" in
+    auto|yes|no) ;;
+    *)
+        echo >&2 "unknown value '$OPENGL_SUPPORT' for OPENGL_SUPPORT parameter."
+       OPENGL_SUPPORT=auto
+       echo >&2 "OPENGL_SUPPORT reset to '$OPENGL_SUPPORT'"
+esac
+
+# adjust environment
+
+if [ -z "$SAL_ENABLE_FILE_LOCKING" ]; then
+    case "$FILE_LOCKING" in
+       auto)
+        home_on_nfs "$@"
+        if [ $? = 0 ]; then
+           STAR_PROFILE_LOCKING_DISABLED=1
+           export STAR_PROFILE_LOCKING_DISABLED
+       fi
+       file_on_nfs "$@"
+       if [ $? = 0 ]; then
+           SAL_ENABLE_FILE_LOCKING=0
+           export SAL_ENABLE_FILE_LOCKING
+           # for safety
+           STAR_ENABLE_FILE_LOCKING=0
+           export STAR_ENABLE_FILE_LOCKING
+       else
+            # file locking now enabled by default
+           SAL_ENABLE_FILE_LOCKING=1
+           export SAL_ENABLE_FILE_LOCKING
+       fi
+        ;;
+       yes)
+       SAL_ENABLE_FILE_LOCKING=1
+       export SAL_ENABLE_FILE_LOCKING
+        ;;
+       no)
+       SAL_ENABLE_FILE_LOCKING=0
+       export SAL_ENABLE_FILE_LOCKING
+       # for safety
+       STAR_ENABLE_FILE_LOCKING=0
+       export STAR_ENABLE_FILE_LOCKING
+       STAR_PROFILE_LOCKING_DISABLED=1
+       export STAR_PROFILE_LOCKING_DISABLED
+    esac
+fi
 
-# file locking now enabled by default
-SAL_ENABLE_FILE_LOCKING=1
-export SAL_ENABLE_FILE_LOCKING
-
-# Uncomment the line below if you suspect that OpenGL is not
-# working on your system.
-# SAL_NOOPENGL=true; export SAL_NOOPENGL
+if [ -z "$SAL_NOOPENGL" ]; then
+    case "$OPENGL_SUPPORT" in
+       auto)
+        working_opengl_support
+        if [ $? -eq 0 ]; then
+           SAL_NOOPENGL=true
+           export SAL_NOOPENGL
+       fi
+        ;;
+       yes)
+       :
+       unset SAL_NOOPENGL
+       #export SAL_NOOPENGL
+        ;;
+       no)
+       SAL_NOOPENGL=true
+       export SAL_NOOPENGL
+    esac
+fi
 
 # the following test is needed on Linux PPC with IBM j2sdk142
 # These variables are substituted during the build process
--- desktop/scripts/unopkg.sh-old	2010-02-08 14:53:54.000000000 +0100
+++ desktop/scripts/unopkg.sh	2010-02-08 14:56:44.000000000 +0100
@@ -30,9 +30,45 @@
 #
 #*************************************************************************
 
-# enable file locking
-SAL_ENABLE_FILE_LOCKING=1
-export SAL_ENABLE_FILE_LOCKING
+if test -z "$HOME"; then
+    HOME=$(getent passwd $(whoami) | cut -d":" -f6)
+fi
+
+# Ubuntu helper functions
+home_on_nfs()
+{
+    case $(stat -f -c %T $HOME) in nfs*|smb)
+        return 0
+    esac
+    return 1
+}
+file_on_nfs() {
+    for i; do
+       case "$i" in -*) continue; esac
+       [ -f "$i" ] || continue
+       case $(stat -f -c %T "$i") in nfs*|smb)
+            return 0
+       esac
+    done
+    return 1
+}
+
+# read Ubuntu config file
+
+FILE_LOCKING=auto
+if [ -f /etc/openoffice/soffice.sh ]; then
+    . /etc/openoffice/soffice.sh
+fi
+
+# sanity checks
+
+case "$FILE_LOCKING" in
+    auto|yes|no) ;;
+    *)
+        echo >&2 "unknown value '$FILE_LOCKING' for FILE_LOCKING parameter."
+       FILE_LOCKING=auto
+       echo >&2 "FILE_LOCKING reset to '$FILE_LOCKING'"
+esac
 
 # resolve installation directory
 sd_cwd="`pwd`"
@@ -70,6 +106,48 @@
     fi
 fi
 
+# adjust environment
+
+if [ -z "$SAL_ENABLE_FILE_LOCKING" ]; then
+    case "$FILE_LOCKING" in
+       auto)
+        home_on_nfs "$@"
+        if [ $? = 0 ]; then
+           STAR_PROFILE_LOCKING_DISABLED=1
+           export STAR_PROFILE_LOCKING_DISABLED
+       fi
+        if [ "$isshared" = "1" ]; then
+            file_on_nfs "/var/spool/openoffice/uno_packages"
+            if [ $? = 0 ]; then
+                SAL_ENABLE_FILE_LOCKING=0
+                export SAL_ENABLE_FILE_LOCKING
+	         # for safety
+                STAR_ENABLE_FILE_LOCKING=0
+	         export STAR_ENABLE_FILE_LOCKING
+                STAR_PROFILE_LOCKING_DISABLED=1
+                export STAR_PROFILE_LOCKING_DISABLED
+            else
+                 # file locking now enabled by default
+                SAL_ENABLE_FILE_LOCKING=1
+                export SAL_ENABLE_FILE_LOCKING
+            fi
+        fi
+        ;;
+       yes)
+       SAL_ENABLE_FILE_LOCKING=1
+       export SAL_ENABLE_FILE_LOCKING
+        ;;
+       no)
+       SAL_ENABLE_FILE_LOCKING=0
+       export SAL_ENABLE_FILE_LOCKING
+	# for safety
+       STAR_ENABLE_FILE_LOCKING=0
+	export STAR_ENABLE_FILE_LOCKING
+       STAR_PROFILE_LOCKING_DISABLED=1
+       export STAR_PROFILE_LOCKING_DISABLED
+    esac
+fi
+
 #collect all bootstrap variables specified on the command line
 #so that they can be passed as arguments to javaldx later on
 for arg in $@
