From ac81a8e1cfa3d73677a2232019625c73de59909f Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 16:56:54 +0200
Subject: [PATCH 204/768] calc-perf-sort.diff

---
 sc/source/core/data/column.cxx |   29 ++++++++++++++++++++---------
 sc/source/core/data/table3.cxx |   17 +++++++----------
 2 files changed, 27 insertions(+), 19 deletions(-)

diff --git sc/source/core/data/column.cxx sc/source/core/data/column.cxx
index 49435ca..115a24b 100644
--- sc/source/core/data/column.cxx
+++ sc/source/core/data/column.cxx
@@ -851,6 +851,10 @@ void lclTakeBroadcaster( ScBaseCell*& rpCell, SvtBroadcaster* pBC )
 
 void ScColumn::SwapRow(SCROW nRow1, SCROW nRow2)
 {
+    // TODO: We probably don't need to broadcast value changes here since
+    // deleting and inserting cells do it.
+    bool bBroadcast = false;
+
     /*  Simple swap of cell pointers does not work if broadcasters exist (crash
         if cell broadcasts directly or indirectly to itself). While swapping
         the cells, broadcasters have to remain at old positions! */
@@ -909,10 +913,13 @@ void ScColumn::SwapRow(SCROW nRow1, SCROW nRow2)
             pCell1->TakeBroadcaster( pBC2 );
             pCell2->TakeBroadcaster( pBC1 );
 
-            ScHint aHint1( SC_HINT_DATACHANGED, aPos1, pCell2 );
-            pDocument->Broadcast( aHint1 );
-            ScHint aHint2( SC_HINT_DATACHANGED, aPos2, pCell1 );
-            pDocument->Broadcast( aHint2 );
+            if (bBroadcast)
+            {
+                ScHint aHint1( SC_HINT_DATACHANGED, aPos1, pCell2 );
+                pDocument->Broadcast( aHint1 );
+                ScHint aHint2( SC_HINT_DATACHANGED, aPos2, pCell1 );
+                pDocument->Broadcast( aHint2 );
+            }
         }
         else
         {
@@ -933,7 +940,8 @@ void ScColumn::SwapRow(SCROW nRow1, SCROW nRow2)
 
             // insert ColEntry at new position
             Insert( nRow2, pCell1 );
-            pDocument->Broadcast( ScHint( SC_HINT_DATACHANGED, aPos1, pDummyCell ) );
+            if (bBroadcast)
+                pDocument->Broadcast( ScHint( SC_HINT_DATACHANGED, aPos1, pDummyCell ) );
         }
 
         return;
@@ -1018,10 +1026,13 @@ void ScColumn::SwapRow(SCROW nRow1, SCROW nRow2)
     //	#64122# Bei Formeln hinterher nochmal broadcasten, damit die Formel nicht in irgendwelchen
     //	FormulaTrack-Listen landet, ohne die Broadcaster beruecksichtigt zu haben
     //	(erst hier, wenn beide Zellen eingefuegt sind)
-    if ( pBC1 && pFmlaCell2 )
-        pDocument->Broadcast( ScHint( SC_HINT_DATACHANGED, aPos1, pNew1 ) );
-    if ( pBC2 && pFmlaCell1 )
-        pDocument->Broadcast( ScHint( SC_HINT_DATACHANGED, aPos2, pNew2 ) );
+    if (bBroadcast)
+    {
+        if ( pBC1 && pFmlaCell2 )
+            pDocument->Broadcast( ScHint( SC_HINT_DATACHANGED, aPos1, pNew1 ) );
+        if ( pBC2 && pFmlaCell1 )
+            pDocument->Broadcast( ScHint( SC_HINT_DATACHANGED, aPos2, pNew2 ) );
+    }
 }
 
 
diff --git sc/source/core/data/table3.cxx sc/source/core/data/table3.cxx
index f05eec0..986e8ac 100644
--- sc/source/core/data/table3.cxx
+++ sc/source/core/data/table3.cxx
@@ -345,17 +345,14 @@ void ScTable::SortReorder( ScSortInfoArray* pArray, ScProgress& rProgress )
 {
     BOOL bByRow = aSortParam.bByRow;
     SCSIZE nCount = pArray->GetCount();
+    SCCOLROW nStart = pArray->GetStart();
     ScSortInfo** ppInfo = pArray->GetFirstArray();
-    // hngngn.. Win16 legacy? Table has ULONG count but can only be initialized using USHORT :-/
-    // FIXME: use std::vector instead, would be better anyway (type safe)
-    USHORT nArghl = (nCount > USHRT_MAX ? USHRT_MAX : static_cast<USHORT>(nCount));
-    Table aTable( nArghl );
+    ::std::vector<ScSortInfo*> aTable(nCount);
     SCSIZE nPos;
     for ( nPos = 0; nPos < nCount; nPos++ )
-    {
-        aTable.Insert( ppInfo[nPos]->nOrg, (void*) ppInfo[nPos] );
-    }
-    SCCOLROW nDest = pArray->GetStart();
+        aTable[ppInfo[nPos]->nOrg - nStart] = ppInfo[nPos];
+
+    SCCOLROW nDest = nStart;
     for ( nPos = 0; nPos < nCount; nPos++, nDest++ )
     {
         SCCOLROW nOrg = ppInfo[nPos]->nOrg;
@@ -368,9 +365,9 @@ void ScTable::SortReorder( ScSortInfoArray* pArray, ScProgress& rProgress )
             // neue Position des weggeswapten eintragen
             ScSortInfo* p = ppInfo[nPos];
             p->nOrg = nDest;
-            p = (ScSortInfo*) aTable.Replace( nDest, (void*) p );
+            ::std::swap(p, aTable[nDest-nStart]);
             p->nOrg = nOrg;
-            p = (ScSortInfo*) aTable.Replace( nOrg, (void*) p );
+            ::std::swap(p, aTable[nOrg-nStart]);
             DBG_ASSERT( p == ppInfo[nPos], "SortReorder: nOrg MisMatch" );
         }
         rProgress.SetStateOnPercent( nPos );
-- 
1.7.0.1

