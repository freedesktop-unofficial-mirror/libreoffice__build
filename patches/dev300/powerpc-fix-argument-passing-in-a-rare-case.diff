From 7b734f0e908f3668d78c3885226bff3c83b484ad Mon Sep 17 00:00:00 2001
From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date: Tue, 24 Nov 2009 17:24:01 +0100
Subject: [PATCH 1/2] powerpc: fix argument passing in a rare case

lets assume the following call:

void func(void *this, long long l1, long long l2, int i1, long long l3,
		int i2)

which should be translated to
 r3 this
 r4 <pad>
 r5 upper l1
 r6 lower l1
 r7 upper l2
 r8 lower l2
 r9 i1
 r10 <pad>
 stack +8 upper l3
 stack +12 lower l3
 stack +16 i2

ng is compared less than 7. If ng is 7 than the parameter is saved on
the stack. This is correct. The following integer value will be saved in
r10 because ng is still 7 and this is less than 8. This is wrong because
this argument should be saved on stack.

The code is different but the bug is the same as in mozilla's #520367

Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
---
 .../source/cpp_uno/gcc3_linux_powerpc/cpp2uno.cxx  |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/bridges/source/cpp_uno/gcc3_linux_powerpc/cpp2uno.cxx b/bridges/source/cpp_uno/gcc3_linux_powerpc/cpp2uno.cxx
index 238354b..5aadd16 100644
--- bridges/source/cpp_uno/gcc3_linux_powerpc/cpp2uno.cxx
+++ bridges/source/cpp_uno/gcc3_linux_powerpc/cpp2uno.cxx
@@ -164,11 +164,11 @@ static typelib_TypeClass cpp2uno_call(
 
             case typelib_TypeClass_HYPER:
             case typelib_TypeClass_UNSIGNED_HYPER:
-             if (ng < 7) {
-                if (ng & 1) {
+             if (ng & 1) {
                   ng++;
                   gpreg++;
-                }  
+             }
+             if (ng < 8) {
                 pCppArgs[nPos] = gpreg;
                 pUnoArgs[nPos] = gpreg;
                 ng += 2;
-- 
1.6.2.5

