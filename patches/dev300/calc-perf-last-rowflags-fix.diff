diff --git sc/source/core/data/table2.cxx sc/source/core/data/table2.cxx
index f0a0815..35c126d 100644
--- sc/source/core/data/table2.cxx
+++ sc/source/core/data/table2.cxx
@@ -2689,11 +2689,32 @@ BYTE ScTable::GetRowFlags( SCROW nRow ) const
 
 SCROW ScTable::GetLastFlaggedRow() const
 {
-    if ( !pRowFlags )
-        return 0;
+    SCROW nLastFound = 0;
+    if (pRowFlags)
+    {    
+        SCROW nRow = pRowFlags->GetLastAnyBitAccess( 0, sal::static_int_cast<BYTE>(CR_ALL) );
+        if (ValidRow(nRow))
+            nLastFound = nRow;
+    }
 
-    SCROW nLastFound = pRowFlags->GetLastAnyBitAccess( 0, sal::static_int_cast<BYTE>(CR_ALL) );
-    return ValidRow(nLastFound) ? nLastFound : 0;
+    if (!maRowManualBreaks.empty())
+        nLastFound = ::std::max(nLastFound, *maRowManualBreaks.rbegin());
+
+    if (mpHiddenRows)
+    {
+        SCROW nRow = mpHiddenRows->findLastNotOf(false);
+        if (ValidRow(nRow))
+            nLastFound = ::std::max(nLastFound, nRow);
+    }
+
+    if (mpFilteredRows)
+    {
+        SCROW nRow = mpFilteredRows->findLastNotOf(false);
+        if (ValidRow(nRow))
+            nLastFound = ::std::max(nLastFound, nRow);
+    }
+
+    return nLastFound;
 }
 
 
@@ -2716,9 +2737,7 @@ SCROW ScTable::GetLastChangedRow() const
     if ( !pRowFlags )
         return 0;
 
-    SCROW nLastFlags = pRowFlags->GetLastAnyBitAccess( 0, sal::static_int_cast<BYTE>(CR_ALL) );
-    if (!ValidRow(nLastFlags))
-        nLastFlags = 0;
+    SCROW nLastFlags = GetLastFlaggedRow();
 
     // Find the last row position where the height is NOT the standard row
     // height.
