diff -rup oox-orig-1/inc/oox/ppt/slidetransition.hxx oox/inc/oox/ppt/slidetransition.hxx
--- oox-orig-1/inc/oox/ppt/slidetransition.hxx	2009-05-13 14:04:15.000000000 +0200
+++ oox/inc/oox/ppt/slidetransition.hxx	2009-05-13 14:35:01.000000000 +0200
@@ -59,6 +59,8 @@ namespace oox { namespace ppt {
     static sal_Int16 ooxToOdpEightDirections( ::sal_Int32 nOoxType );
     static sal_Int16 ooxToOdpCornerDirections( ::sal_Int32 nOoxType );
     static sal_Int16 ooxToOdpBorderDirections( ::sal_Int32 nOoxType );
+    static sal_Int16 ooxToOdpSideDirections( ::sal_Int32 nOoxType );
+    static sal_Bool  ooxToOdpSideDirectionsDirectionNormal( ::sal_Int32 nOoxType );
 
 		void setOoxTransitionType( ::sal_Int32 OoxType,
 															 ::sal_Int32 param1, ::sal_Int32 param2 );
diff -rup oox-orig-1/source/ppt/slidetransition.cxx oox/source/ppt/slidetransition.cxx
--- oox-orig-1/source/ppt/slidetransition.cxx	2009-05-13 14:04:17.000000000 +0200
+++ oox/source/ppt/slidetransition.cxx	2009-05-13 14:38:09.000000000 +0200
@@ -178,6 +178,39 @@ namespace oox { namespace ppt {
 		return nOdpDirection;
 	}
 
+	sal_Int16 SlideTransition::ooxToOdpSideDirections( ::sal_Int32 nOoxType )
+	{
+    sal_Int16 nOdpDirection;
+		switch( nOoxType )
+		{
+		case XML_d:
+		case XML_u:
+			nOdpDirection = TransitionSubType::TOPTOBOTTOM;
+			break;
+		case XML_l:
+		case XML_r:
+			nOdpDirection = TransitionSubType::LEFTTORIGHT;
+			break;
+		default:
+			nOdpDirection= 0;
+			break;
+		}
+		return nOdpDirection;
+	}
+
+	sal_Bool SlideTransition::ooxToOdpSideDirectionsDirectionNormal( ::sal_Int32 nOoxType )
+	{
+    sal_Bool nOdpDirection = true;
+		switch( nOoxType )
+		{
+		case XML_u:
+		case XML_l:
+			nOdpDirection = false;
+			break;
+		}
+		return nOdpDirection;
+	}
+
 	sal_Int16 SlideTransition::ooxToOdpCornerDirections( ::sal_Int32 nOoxType )
 	{
     sal_Int16 nOdpDirection;
@@ -293,7 +326,8 @@ namespace oox { namespace ppt {
 			break;
 		case NMSP_PPT|XML_wipe:
 			mnTransitionType = TransitionType::BARWIPE;
-			mnTransitionSubType = ooxToOdpBorderDirections( param1 );
+			mnTransitionSubType = ooxToOdpSideDirections( param1 );
+			mbTransitionDirectionNormal = ooxToOdpSideDirectionsDirectionNormal( param1 );
 			break;
 		case NMSP_PPT|XML_split:
 			mnTransitionType = TransitionType::BARNDOORWIPE;
