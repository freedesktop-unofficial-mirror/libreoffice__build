diff --git ucb/source/ucp/webdav/NeonInputStream.cxx ucb/source/ucp/webdav/NeonInputStream.cxx
index c969218..08b82c7 100644
--- ucb/source/ucp/webdav/NeonInputStream.cxx
+++ ucb/source/ucp/webdav/NeonInputStream.cxx
@@ -56,6 +56,15 @@ using namespace com::sun::star::io;
 using namespace com::sun::star;
 using namespace webdav_ucp;
 
+oslSignalAction NeonInputStream::UnlockOnSignal( void* pData, oslSignalInfo* )
+{
+    NeonInputStream *pStream = static_cast< NeonInputStream *>( pData );
+
+    if ( pStream )
+        pStream->Unlock();
+
+    return osl_Signal_ActCallNextHdl;
+}
 
 // -------------------------------------------------------------------
 // Constructor
@@ -66,6 +75,7 @@ NeonInputStream::NeonInputStream()
   m_bDirty( sal_False ),
   m_pLock( NULL )
 {
+    m_pSignalHandler = osl_addSignalHandler( NeonInputStream::UnlockOnSignal, this );
 }
 
 // -------------------------------------------------------------------
@@ -74,6 +84,8 @@ NeonInputStream::NeonInputStream()
 NeonInputStream::~NeonInputStream( void )
 {
     Unlock();
+
+    osl_removeSignalHandler( m_pSignalHandler );
 }
 
 // -------------------------------------------------------------------
@@ -365,6 +377,10 @@ void SAL_CALL NeonInputStream::truncate( void )
 // -------------------------------------------------------------------
 void NeonInputStream::Unlock( void )
 {
+#if OSL_DEBUG_LEVEL > 0
+    fprintf( stderr, "WebDAV: unlock()\n" );
+#endif
+
     if ( m_pLock )
     {
         // FIXME It's really hacky to create the new session
diff --git ucb/source/ucp/webdav/NeonInputStream.hxx ucb/source/ucp/webdav/NeonInputStream.hxx
index ba470e6..8545cfd 100644
--- ucb/source/ucp/webdav/NeonInputStream.hxx
+++ ucb/source/ucp/webdav/NeonInputStream.hxx
@@ -38,6 +38,7 @@
 #define _NEONINPUTSTREAM_HXX_
 
 #include <sal/types.h>
+#include <osl/signal.h>
 #include <rtl/ustring.hxx>
 #include <cppuhelper/weak.hxx>
 
@@ -93,6 +94,8 @@ private:
     com::sun::star::ucb::Lock *m_pLock;
     rtl::OUString              m_aURL;
 
+    oslSignalHandler           m_pSignalHandler;
+
 public:
              NeonInputStream( void );
     virtual ~NeonInputStream();
@@ -199,6 +202,9 @@ protected:
 
     // Unlock the stream & destroy the lock
     void Unlock( void );
+
+    // Unlock the stream when OOo crashes/is terminated/...
+    static oslSignalAction UnlockOnSignal( void* pData, oslSignalInfo* pInfo );
 };
 
 } // namespace webdav_ucp
