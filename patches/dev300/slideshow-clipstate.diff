From d92042934ca996ef9f3268310870dc1e930bd1c3 Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 17:09:08 +0200
Subject: [PATCH 852/878] slideshow-clipstate.diff

---
 slideshow/source/engine/slide/layer.cxx |   11 ++++++-----
 slideshow/source/engine/slide/layer.hxx |    6 +++---
 2 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/slideshow/source/engine/slide/layer.cxx b/slideshow/source/engine/slide/layer.cxx
index d58b4ab..3c289c8 100644
--- a/slideshow/source/engine/slide/layer.cxx
+++ b/slideshow/source/engine/slide/layer.cxx
@@ -33,7 +33,7 @@
 
 #include <basegfx/range/b2drange.hxx>
 #include <basegfx/range/b1drange.hxx>
-#include <basegfx/range/b2dmultirange.hxx>
+#include <basegfx/range/b2dpolyrange.hxx>
 #include <basegfx/matrix/b2dhommatrix.hxx>
 #include <basegfx/polygon/b2dpolypolygon.hxx>
 
@@ -199,7 +199,8 @@ namespace slideshow
         {
             // TODO(Q1): move this to B2DMultiRange
             if( !rUpdateRange.isEmpty() )
-                maUpdateAreas.addRange( rUpdateRange );
+                maUpdateAreas.appendElement( rUpdateRange,
+                                             basegfx::ORIENTATION_POSITIVE );
         }
 
         void Layer::updateBounds( ShapeSharedPtr const& rShape )
@@ -245,7 +246,7 @@ namespace slideshow
         
         void Layer::clearUpdateRanges()
         {
-            maUpdateAreas.reset();
+            maUpdateAreas.clear();
         }
 
         void Layer::clearContent()
@@ -281,12 +282,12 @@ namespace slideshow
 
         Layer::EndUpdater Layer::beginUpdate()
         {
-            if( !maUpdateAreas.isEmpty() )
+            if( maUpdateAreas.count() )
             {
                 // perform proper layer update. That means, setup proper
                 // clipping, and render each shape that intersects with 
                 // the calculated update area
-                ::basegfx::B2DPolyPolygon aClip( maUpdateAreas.getPolyPolygon() );
+                ::basegfx::B2DPolyPolygon aClip( maUpdateAreas.solveCrossovers() );
 
                 // actually, if there happen to be shapes with zero
                 // update area in the maUpdateAreas vector, the
diff --git a/slideshow/source/engine/slide/layer.hxx b/slideshow/source/engine/slide/layer.hxx
index 79d24dd..6d60684 100644
--- a/slideshow/source/engine/slide/layer.hxx
+++ b/slideshow/source/engine/slide/layer.hxx
@@ -28,7 +28,7 @@
 #ifndef INCLUDED_SLIDESHOW_LAYER_HXX
 #define INCLUDED_SLIDESHOW_LAYER_HXX
 
-#include <basegfx/range/b2dmultirange.hxx>
+#include <basegfx/range/b2dpolyrange.hxx>
 #include <cppcanvas/spritecanvas.hxx>
 
 #include "view.hxx"
@@ -184,7 +184,7 @@ namespace slideshow
                 @return true, if any non-empty addUpdateRange() calls
                 have been made since the last render()/update() call.
              */
-            bool isUpdatePending() const { return !maUpdateAreas.isEmpty(); }
+            bool isUpdatePending() const { return maUpdateAreas.count()!=0; }
 
             /** Update layer bound rect from shape bounds
              */
@@ -294,7 +294,7 @@ namespace slideshow
             typedef ::std::vector< ViewEntry > ViewEntryVector;
 
             ViewEntryVector            maViewEntries;
-            basegfx::B2DMultiRange     maUpdateAreas;
+            basegfx::B2DPolyRange      maUpdateAreas;
             basegfx::B2DRange          maBounds;
             basegfx::B2DRange          maNewBounds;
             const basegfx::B2DRange    maMaxBounds;       // maBounds is clipped against this
-- 
1.7.0.1

