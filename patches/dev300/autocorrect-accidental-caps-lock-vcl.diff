diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/aqua/inc/salframe.h vcl/aqua/inc/salframe.h
--- vcl.clean/aqua/inc/salframe.h	2008-01-14 11:13:04.000000000 -0500
+++ vcl/aqua/inc/salframe.h	2008-02-28 12:57:14.000000000 -0500
@@ -146,6 +146,8 @@ public:
     virtual void				Beep( SoundType eSoundType );
     virtual const SystemEnvData*	GetSystemData() const;
     virtual SalPointerState		GetPointerState();
+    virtual SalIndicatorState   GetIndicatorState();
+    virtual void                SimulateKeyPress( USHORT nKeyCode );
     virtual void				SetParent( SalFrame* pNewParent );
     virtual bool				SetPluginParent( SystemParentData* pNewParent );
     virtual void                SetExtendedFrameStyle( SalExtStyle );
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/aqua/source/window/salframe.cxx vcl/aqua/source/window/salframe.cxx
--- vcl.clean/aqua/source/window/salframe.cxx	2008-01-14 11:18:51.000000000 -0500
+++ vcl/aqua/source/window/salframe.cxx	2008-02-28 12:57:39.000000000 -0500
@@ -1197,6 +1197,17 @@ SalPointerState	AquaSalFrame::GetPointer
     return state;
 }
 
+SalFrame::SalIndicatorState AquaSalFrame::GetIndicatorState()
+{
+    SalIndicatorState aState;
+    aState.mnState = 0;
+    return aState;
+}
+
+void AquaSalFrame::SimulateKeyPress( USHORT /*nKeyCode*/ )
+{
+}
+
 bool AquaSalFrame::SetPluginParent( SystemParentData* pNewParent )
 {
     // plugin parent may be killed unexpectedly by
--- vcl/inc/vcl/keycodes.hxx
+++ vcl/inc/vcl/keycodes.hxx
@@ -171,6 +171,10 @@
 #define KEY_BRACKETLEFT ((USHORT)::com::sun::star::awt::Key::BRACKETLEFT)
 #define KEY_BRACKETRIGHT ((USHORT)::com::sun::star::awt::Key::BRACKETRIGHT)
 
+#define KEY_CAPSLOCK    ((USHORT)::com::sun::star::awt::Key::CAPSLOCK)
+#define KEY_NUMLOCK     ((USHORT)::com::sun::star::awt::Key::NUMLOCK)
+#define KEY_SCROLLLOCK  ((USHORT)::com::sun::star::awt::Key::SCROLLLOCK)
+
 #define KEY_CODE		((USHORT)0x0FFF)
 
 // Modifier-Tasten
@@ -200,4 +204,12 @@
 #define MOUSE_MIDDLE	((USHORT)0x0002)
 #define MOUSE_RIGHT 	((USHORT)0x0004)
 
+// -------------------
+// - Indicator-Types -
+// -------------------
+
+#define INDICATOR_CAPSLOCK      0x0001
+#define INDICATOR_NUMLOCK       0x0002
+#define INDICATOR_SCROLLLOCK    0x0004
+
 #endif // _SV_KEYCODES_HXX
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/inc/vcl/salframe.hxx vcl/inc/vcl/salframe.hxx
--- vcl.clean/inc/vcl/salframe.hxx	2007-10-09 11:17:45.000000000 -0400
+++ vcl/inc/vcl/salframe.hxx	2008-02-28 11:21:03.000000000 -0500
@@ -272,6 +272,15 @@ public:
 
     virtual SalPointerState		GetPointerState() = 0;
 
+    struct SalIndicatorState
+    {
+        USHORT  mnState;
+    };
+
+    virtual SalIndicatorState   GetIndicatorState() = 0;
+
+    virtual void                SimulateKeyPress( USHORT nKeyCode ) = 0;
+
     // set new parent window
     virtual void				SetParent( SalFrame* pNewParent ) = 0;
     // reparent window to act as a plugin; implementation
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/inc/vcl/window.hxx vcl/inc/vcl/window.hxx
--- vcl.clean/inc/vcl/window.hxx	2008-01-14 08:04:14.000000000 -0500
+++ vcl/inc/vcl/window.hxx	2008-02-28 02:11:44.000000000 -0500
@@ -1121,6 +1121,22 @@ public:
     /* mark Window for deletion in top of event queue
     */
     void doLazyDelete();
+
+    //-------------------------------------
+    //  Keyboard access functions
+    //-------------------------------------
+
+    /** Query the states of keyboard indicators - Caps Lock, Num Lock and
+        Scroll Lock.  Use the following mask to retrieve the state of each
+        indicator:
+        
+            INDICATOR_CAPS_LOCK
+            INDICATOR_NUM_LOCK
+            INDICATOR_SCROLL_LOCK
+      */
+    USHORT GetIndicatorState() const;
+
+    void SimulateKeyPress( USHORT nKeyCode ) const;
 
     virtual XubString GetSurroundingText() const;
     virtual Selection GetSurroundingTextSelection() const;
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/os2/inc/salframe.h vcl/os2/inc/salframe.h
--- vcl.clean/os2/inc/salframe.h	2007-11-02 08:44:25.000000000 -0400
+++ vcl/os2/inc/salframe.h	2008-02-28 13:00:17.000000000 -0500
@@ -168,6 +168,8 @@ public:
     virtual void				Beep( SoundType eSoundType );
     virtual const SystemEnvData*	GetSystemData() const;
     virtual SalPointerState		GetPointerState();
+    virtual SalIndicatorState   GetIndicatorState();
+    virtual void                SimulateKeyPress( USHORT nKeyCode );
     virtual void				SetParent( SalFrame* pNewParent );
     virtual bool				SetPluginParent( SystemParentData* pNewParent );
     virtual void                SetBackgroundBitmap( SalBitmap* );
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/os2/source/window/salframe.cxx vcl/os2/source/window/salframe.cxx
--- vcl.clean/os2/source/window/salframe.cxx	2007-11-02 08:51:30.000000000 -0400
+++ vcl/os2/source/window/salframe.cxx	2008-02-28 13:01:25.000000000 -0500
@@ -2335,6 +2335,19 @@ SalFrame::SalPointerState Os2SalFrame::G
 
 // -----------------------------------------------------------------------
 
+SalFrame::SalIndicatorState Os2SalFrame::GetIndicatorState()
+{
+    SalIndicatorState aState;
+    aState.mnState = 0;
+    return aState;
+}
+
+void Os2SalFrame::SimulateKeyPress( USHORT /*nKeyCode*/ )
+{
+}
+
+// -----------------------------------------------------------------------
+
 void Os2SalFrame::SetBackgroundBitmap( SalBitmap* )
 {
 }
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/source/window/window.cxx vcl/source/window/window.cxx
--- vcl.clean/source/window/window.cxx	2008-01-29 11:18:41.000000000 -0500
+++ vcl/source/window/window.cxx	2008-02-28 14:00:43.000000000 -0500
@@ -4797,6 +4797,16 @@ void Window::doLazyDelete()
     vcl::LazyDeletor<Window>::Delete( this );
 }
 
+USHORT Window::GetIndicatorState() const
+{
+    return mpWindowImpl->mpFrame->GetIndicatorState().mnState;
+}
+
+void Window::SimulateKeyPress( USHORT nKeyCode ) const
+{
+    mpWindowImpl->mpFrame->SimulateKeyPress(nKeyCode);
+}
+
 // -----------------------------------------------------------------------
 
 void Window::MouseMove( const MouseEvent& rMEvt )
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/unx/gtk/window/gtkframe.cxx vcl/unx/gtk/window/gtkframe.cxx
--- vcl.clean/unx/gtk/window/gtkframe.cxx	2008-01-29 11:21:11.000000000 -0500
+++ vcl/unx/gtk/window/gtkframe.cxx	2008-02-28 14:02:01.000000000 -0500
@@ -2068,6 +2068,18 @@ SalFrame::SalPointerState GtkSalFrame::G
     return aState;
 }
 
+SalFrame::SalIndicatorState GtkSalFrame::GetIndicatorState()
+{
+    SalIndicatorState aState;
+    aState.mnState = GetX11SalData()->GetDisplay()->GetIndicatorState();
+    return aState;
+}
+
+void GtkSalFrame::SimulateKeyPress( USHORT nKeyCode )
+{
+    GetX11SalData()->GetDisplay()->SimulateKeyPress(nKeyCode);
+}
+
 void GtkSalFrame::SetInputContext( SalInputContext* pContext )
 {
     if( ! pContext )
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/unx/headless/svpframe.cxx vcl/unx/headless/svpframe.cxx
--- vcl.clean/unx/headless/svpframe.cxx	2007-08-03 10:09:51.000000000 -0400
+++ vcl/unx/headless/svpframe.cxx	2008-02-28 11:27:06.000000000 -0500
@@ -396,6 +396,17 @@ SalFrame::SalPointerState SvpSalFrame::G
     return aState;
 }
 
+SalFrame::SalIndicatorState SvpSalFrame::GetIndicatorState()
+{
+    SalIndicatorState aState;
+    aState.mnState = 0;
+    return aState;
+}
+
+void SvpSalFrame::SimulateKeyPress( USHORT /*nKeyCode*/ )
+{
+}
+
 void SvpSalFrame::SetParent( SalFrame* pNewParent )
 {
     if( m_pParent )
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/unx/headless/svpframe.hxx vcl/unx/headless/svpframe.hxx
--- vcl.clean/unx/headless/svpframe.hxx	2007-07-24 06:27:17.000000000 -0400
+++ vcl/unx/headless/svpframe.hxx	2008-02-28 11:26:40.000000000 -0500
@@ -119,6 +119,8 @@ public:
     virtual void				Beep( SoundType eSoundType );
     virtual const SystemEnvData*	GetSystemData() const;
     virtual SalPointerState     GetPointerState();
+    virtual SalIndicatorState   GetIndicatorState();
+    virtual void                SimulateKeyPress( USHORT nKeyCode );
     virtual void				SetParent( SalFrame* pNewParent );
     virtual bool				SetPluginParent( SystemParentData* pNewParent );
     virtual void                SetBackgroundBitmap( SalBitmap* pBitmap );
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/unx/inc/plugins/gtk/gtkframe.hxx vcl/unx/inc/plugins/gtk/gtkframe.hxx
--- vcl.clean/unx/inc/plugins/gtk/gtkframe.hxx	2008-01-29 11:21:43.000000000 -0500
+++ vcl/unx/inc/plugins/gtk/gtkframe.hxx	2008-02-28 11:22:22.000000000 -0500
@@ -364,6 +364,10 @@ public:
     // get current modifier and button mask
     virtual SalPointerState     GetPointerState();
 
+    virtual SalIndicatorState   GetIndicatorState();
+
+    virtual void                SimulateKeyPress( USHORT nKeyCode );
+
     // set new parent window
     virtual void                SetParent( SalFrame* pNewParent );
     // reparent window to act as a plugin; implementation
--- tools/inc/tools/prex.h
+++ tools/inc/tools/prex.h
@@ -64,6 +64,12 @@ extern "C" {
 #define __XKeyboardExtension__ 0
 #endif
 
+#if defined(LINUX) || defined(SOLARIS) || defined(FREEBSD)
+#define __XTestExtension__ 1
+#else
+#define __XTestExtension__ 0
+#endif
+
 #include <X11/X.h>
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/unx/inc/saldisp.hxx vcl/unx/inc/saldisp.hxx
--- vcl.clean/unx/inc/saldisp.hxx	2008-01-29 11:21:27.000000000 -0500
+++ vcl/unx/inc/saldisp.hxx	2008-02-28 10:16:38.000000000 -0500
@@ -457,6 +457,8 @@ public:
     void			Beep() const;
 
     void			ModifierMapping();
+    void            SimulateKeyPress( USHORT nKeyCode );
+    USHORT          GetIndicatorState() const;
     String			GetKeyNameFromKeySym( KeySym keysym ) const;
     XubString		GetKeyName( USHORT nKeyCode ) const;
     USHORT			GetKeyCode( KeySym keysym, char*pcPrintable ) const;
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/unx/inc/salframe.h vcl/unx/inc/salframe.h
--- vcl.clean/unx/inc/salframe.h	2007-08-30 09:56:30.000000000 -0400
+++ vcl/unx/inc/salframe.h	2008-02-28 11:25:36.000000000 -0500
@@ -272,6 +272,8 @@ public:
     virtual void				Beep( SoundType eSoundType );
     virtual const SystemEnvData*	GetSystemData() const;
     virtual SalPointerState     GetPointerState();
+    virtual SalIndicatorState   GetIndicatorState();
+    virtual void                SimulateKeyPress( USHORT nKeyCode );
     virtual void				SetParent( SalFrame* pNewParent );
     virtual bool				SetPluginParent( SystemParentData* pNewParent );
     virtual void                SetBackgroundBitmap( SalBitmap* pBitmap );
--- vcl/unx/source/app/saldisp.cxx
+++ vcl/unx/source/app/saldisp.cxx
@@ -86,6 +86,12 @@ Status XineramaGetInfo(Display*, int, XR
 #endif
 #endif
 
+#if __XTestExtension__
+#include <X11/extensions/XTest.h>
+#include <X11/extensions/XKB.h>
+#include <X11/XKBlib.h>
+#endif
+
 #include <tools/postx.h>
 
 #include <salunx.h>
@@ -1074,6 +1078,35 @@ void SalDisplay::Beep() const
 
 // Keyboard
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
+
+void SalDisplay::SimulateKeyPress( USHORT nKeyCode )
+{
+#if __XTestExtension__
+    if (nKeyCode == KEY_CAPSLOCK)
+    {
+        XLIB_KeyCode keyCaps = XKeysymToKeycode(GetDisplay(), XK_Caps_Lock);
+        if (XTestFakeKeyEvent(GetDisplay(), keyCaps, true, CurrentTime))
+            XTestFakeKeyEvent(GetDisplay(), keyCaps, false, CurrentTime);
+    }
+#endif
+}
+
+USHORT SalDisplay::GetIndicatorState() const
+{
+    unsigned int _state = 0;
+    USHORT nState = 0;
+    XkbGetIndicatorState(pDisp_, XkbUseCoreKbd, &_state);
+
+    if ((_state & 0x00000001))
+        nState |= INDICATOR_CAPSLOCK;
+    if ((_state & 0x00000002))
+        nState |= INDICATOR_NUMLOCK;
+    if ((_state & 0x00000004))
+        nState |= INDICATOR_SCROLLLOCK;
+
+    return nState;
+}
+
 String SalDisplay::GetKeyNameFromKeySym( KeySym nKeySym ) const
 {
 	String aRet;
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/unx/source/window/salframe.cxx vcl/unx/source/window/salframe.cxx
--- vcl.clean/unx/source/window/salframe.cxx	2008-01-30 04:12:30.000000000 -0500
+++ vcl/unx/source/window/salframe.cxx	2008-02-28 11:26:21.000000000 -0500
@@ -2757,6 +2757,18 @@ SalFrame::SalPointerState X11SalFrame::G
     return aState;
 }
 
+SalFrame::SalIndicatorState X11SalFrame::GetIndicatorState()
+{
+    SalIndicatorState aState;
+    aState.mnState = GetX11SalData()->GetDisplay()->GetIndicatorState();
+    return aState;
+}
+
+void X11SalFrame::SimulateKeyPress( USHORT nKeyCode )
+{
+    GetX11SalData()->GetDisplay()->SimulateKeyPress(nKeyCode);
+}
+
 long X11SalFrame::HandleMouseEvent( XEvent *pEvent )
 {
 	SalMouseEvent		aMouseEvt;
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=vcl.vpj vcl.clean/win/inc/salframe.h vcl/win/inc/salframe.h
--- vcl.clean/win/inc/salframe.h	2007-07-24 06:33:22.000000000 -0400
+++ vcl/win/inc/salframe.h	2008-02-28 12:58:19.000000000 -0500
@@ -149,6 +149,8 @@ public:
     virtual void				Beep( SoundType eSoundType );
     virtual const SystemEnvData*	GetSystemData() const;
     virtual SalPointerState		GetPointerState();
+    virtual SalIndicatorState   GetIndicatorState();
+    virtual void                SimulateKeyPress( USHORT nKeyCode );
     virtual void				SetParent( SalFrame* pNewParent );
     virtual bool				SetPluginParent( SystemParentData* pNewParent );
     virtual void                SetBackgroundBitmap( SalBitmap* );
--- vcl.clean/win/source/window/salframe.cxx	2008-01-15 08:25:15.000000000 -0500
+++ vcl/win/source/window/salframe.cxx	2008-03-01 21:12:23.000000000 -0500
@@ -3177,6 +3177,41 @@ SalFrame::SalPointerState WinSalFrame::G
 
 // -----------------------------------------------------------------------
 
+SalFrame::SalIndicatorState WinSalFrame::GetIndicatorState()
+{
+    SalIndicatorState aState;
+    aState.mnState = 0;
+    if (::GetKeyState(VK_CAPITAL))
+        aState.mnState |= INDICATOR_CAPSLOCK;
+
+    if (::GetKeyState(VK_NUMLOCK))
+        aState.mnState |= INDICATOR_NUMLOCK;
+
+    if (::GetKeyState(VK_SCROLL))
+        aState.mnState |= INDICATOR_SCROLLLOCK;
+
+    return aState;
+}
+
+void WinSalFrame::SimulateKeyPress( USHORT nKeyCode )
+{
+    BYTE nVKey = 0;
+    switch (nKeyCode)
+    {
+        case KEY_CAPSLOCK:
+            nVKey = VK_CAPITAL;
+        break;
+    }
+
+    if (nVKey > 0 && nVKey < 255)
+    {
+        ::keybd_event(nVKey, 0x45, KEYEVENTF_EXTENDEDKEY, 0);
+        ::keybd_event(nVKey, 0x45, KEYEVENTF_EXTENDEDKEY|KEYEVENTF_KEYUP, 0);
+    }
+}
+
+// -----------------------------------------------------------------------
+
 void WinSalFrame::SetBackgroundBitmap( SalBitmap* )
 {
 }
--- vcl/util/makefile.mk	29 Jan 2008 16:23:55 -0000	1.104
+++ vcl/util/makefile.mk	3 Mar 2008 15:06:27 -0000
@@ -323,7 +323,7 @@
 
 .IF "$(GUIBASE)"=="unx"
 
-SHL2STDLIBS += -lXext -lSM -lICE -lX11
+SHL2STDLIBS += -lXext -lXtst -lSM -lICE -lX11
 .IF "$(OS)"!="MACOSX" && "$(OS)"!="FREEBSD"
 # needed by salprnpsp.cxx
 SHL2STDLIBS+= -ldl
