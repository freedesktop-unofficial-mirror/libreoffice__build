From 83254d00b48d2b13178b25c455cb4135e15dbba2 Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 17:02:33 +0200
Subject: [PATCH 522/878] autocorrect-accidental-caps-lock-vcl.diff

---
 vcl/aqua/inc/salframe.h              |    2 +
 vcl/aqua/source/window/salframe.cxx  |   11 +++++
 vcl/inc/vcl/keycodes.hxx             |   12 ++++++
 vcl/inc/vcl/salframe.hxx             |    9 ++++
 vcl/inc/vcl/window.hxx               |   16 +++++++
 vcl/os2/inc/salframe.h               |    2 +
 vcl/os2/source/window/salframe.cxx   |   13 ++++++
 vcl/source/window/window.cxx         |   10 +++++
 vcl/unx/gtk/window/gtkframe.cxx      |   12 ++++++
 vcl/unx/headless/svpframe.cxx        |   11 +++++
 vcl/unx/headless/svpframe.hxx        |    2 +
 vcl/unx/inc/plugins/gtk/gtkframe.hxx |    4 ++
 vcl/unx/inc/saldisp.hxx              |    2 +
 vcl/unx/inc/salframe.h               |    2 +
 vcl/unx/source/app/saldisp.cxx       |   73 +++++++++++++++++++++++++++++++++-
 vcl/unx/source/window/salframe.cxx   |   12 ++++++
 vcl/win/inc/salframe.h               |    2 +
 vcl/win/source/window/salframe.cxx   |   35 ++++++++++++++++
 18 files changed, 229 insertions(+), 1 deletions(-)

diff --git a/vcl/aqua/inc/salframe.h b/vcl/aqua/inc/salframe.h
index 1a4ea96..907fb4f 100644
--- a/vcl/aqua/inc/salframe.h
+++ b/vcl/aqua/inc/salframe.h
@@ -151,6 +151,8 @@ public:
     virtual void				Beep( SoundType eSoundType );
     virtual const SystemEnvData*	GetSystemData() const;
     virtual SalPointerState		GetPointerState();
+    virtual SalIndicatorState   GetIndicatorState();
+    virtual void                SimulateKeyPress( USHORT nKeyCode );
     virtual void				SetParent( SalFrame* pNewParent );
     virtual bool				SetPluginParent( SystemParentData* pNewParent );
     virtual void                SetExtendedFrameStyle( SalExtStyle );
diff --git a/vcl/aqua/source/window/salframe.cxx b/vcl/aqua/source/window/salframe.cxx
index 9fafd80..4b24144 100644
--- a/vcl/aqua/source/window/salframe.cxx
+++ b/vcl/aqua/source/window/salframe.cxx
@@ -1376,6 +1376,17 @@ SalPointerState	AquaSalFrame::GetPointerState()
     return state;
 }
 
+SalFrame::SalIndicatorState AquaSalFrame::GetIndicatorState()
+{
+    SalIndicatorState aState;
+    aState.mnState = 0;
+    return aState;
+}
+
+void AquaSalFrame::SimulateKeyPress( USHORT /*nKeyCode*/ )
+{
+}
+
 bool AquaSalFrame::SetPluginParent( SystemParentData* pNewParent )
 {
     // plugin parent may be killed unexpectedly by
diff --git a/vcl/inc/vcl/keycodes.hxx b/vcl/inc/vcl/keycodes.hxx
index 7ea7a43..cbc283b 100644
--- a/vcl/inc/vcl/keycodes.hxx
+++ b/vcl/inc/vcl/keycodes.hxx
@@ -158,6 +158,10 @@
 #define KEY_BRACKETLEFT ((USHORT)::com::sun::star::awt::Key::BRACKETLEFT)
 #define KEY_BRACKETRIGHT ((USHORT)::com::sun::star::awt::Key::BRACKETRIGHT)
 
+#define KEY_CAPSLOCK    ((USHORT)::com::sun::star::awt::Key::CAPSLOCK)
+#define KEY_NUMLOCK     ((USHORT)::com::sun::star::awt::Key::NUMLOCK)
+#define KEY_SCROLLLOCK  ((USHORT)::com::sun::star::awt::Key::SCROLLLOCK)
+
 #define KEY_CODE		((USHORT)0x0FFF)
 
 // Modifier-Tasten
@@ -190,4 +194,12 @@
 #define MOUSE_MIDDLE	((USHORT)0x0002)
 #define MOUSE_RIGHT 	((USHORT)0x0004)
 
+// -------------------
+// - Indicator-Types -
+// -------------------
+
+#define INDICATOR_CAPSLOCK      0x0001
+#define INDICATOR_NUMLOCK       0x0002
+#define INDICATOR_SCROLLLOCK    0x0004
+
 #endif // _SV_KEYCODES_HXX
diff --git a/vcl/inc/vcl/salframe.hxx b/vcl/inc/vcl/salframe.hxx
index c8b3dbd..6224c2b 100644
--- a/vcl/inc/vcl/salframe.hxx
+++ b/vcl/inc/vcl/salframe.hxx
@@ -249,6 +249,15 @@ public:
 
     virtual SalPointerState		GetPointerState() = 0;
 
+    struct SalIndicatorState
+    {
+        USHORT  mnState;
+    };
+
+    virtual SalIndicatorState   GetIndicatorState() = 0;
+
+    virtual void                SimulateKeyPress( USHORT nKeyCode ) = 0;
+
     // set new parent window
     virtual void				SetParent( SalFrame* pNewParent ) = 0;
     // reparent window to act as a plugin; implementation
diff --git a/vcl/inc/vcl/window.hxx b/vcl/inc/vcl/window.hxx
index 95d4c2e..09a5c02 100644
--- a/vcl/inc/vcl/window.hxx
+++ b/vcl/inc/vcl/window.hxx
@@ -1138,6 +1138,22 @@ public:
     */
     void doLazyDelete();
 
+    //-------------------------------------
+    //  Keyboard access functions
+    //-------------------------------------
+
+    /** Query the states of keyboard indicators - Caps Lock, Num Lock and
+        Scroll Lock.  Use the following mask to retrieve the state of each
+        indicator:
+
+            INDICATOR_CAPS_LOCK
+            INDICATOR_NUM_LOCK
+            INDICATOR_SCROLL_LOCK
+      */
+    USHORT GetIndicatorState() const;
+
+    void SimulateKeyPress( USHORT nKeyCode ) const;
+
     virtual XubString GetSurroundingText() const;
     virtual Selection GetSurroundingTextSelection() const;
 };
diff --git a/vcl/os2/inc/salframe.h b/vcl/os2/inc/salframe.h
index 017c428..b63ceaf 100644
--- a/vcl/os2/inc/salframe.h
+++ b/vcl/os2/inc/salframe.h
@@ -152,6 +152,8 @@ public:
     virtual void				Beep( SoundType eSoundType );
     virtual const SystemEnvData*	GetSystemData() const;
     virtual SalPointerState		GetPointerState();
+    virtual SalIndicatorState   GetIndicatorState();
+    virtual void                SimulateKeyPress( USHORT nKeyCode );
     virtual void				SetParent( SalFrame* pNewParent );
     virtual bool				SetPluginParent( SystemParentData* pNewParent );
     virtual void                SetBackgroundBitmap( SalBitmap* );
diff --git a/vcl/os2/source/window/salframe.cxx b/vcl/os2/source/window/salframe.cxx
index 2747173..a00475b 100644
--- a/vcl/os2/source/window/salframe.cxx
+++ b/vcl/os2/source/window/salframe.cxx
@@ -2354,6 +2354,19 @@ SalFrame::SalPointerState Os2SalFrame::GetPointerState()
 
 // -----------------------------------------------------------------------
 
+SalFrame::SalIndicatorState Os2SalFrame::GetIndicatorState()
+{
+    SalIndicatorState aState;
+    aState.mnState = 0;
+    return aState;
+}
+
+void Os2SalFrame::SimulateKeyPress( USHORT /*nKeyCode*/ )
+{
+}
+
+// -----------------------------------------------------------------------
+
 void Os2SalFrame::SetBackgroundBitmap( SalBitmap* )
 {
 }
diff --git a/vcl/source/window/window.cxx b/vcl/source/window/window.cxx
index 3979624..898e3e1 100644
--- a/vcl/source/window/window.cxx
+++ b/vcl/source/window/window.cxx
@@ -4777,6 +4777,16 @@ void Window::doLazyDelete()
     vcl::LazyDeletor<Window>::Delete( this );
 }
 
+USHORT Window::GetIndicatorState() const
+{
+    return mpWindowImpl->mpFrame->GetIndicatorState().mnState;
+}
+
+void Window::SimulateKeyPress( USHORT nKeyCode ) const
+{
+    mpWindowImpl->mpFrame->SimulateKeyPress(nKeyCode);
+}
+
 // -----------------------------------------------------------------------
 
 void Window::MouseMove( const MouseEvent& rMEvt )
diff --git a/vcl/unx/gtk/window/gtkframe.cxx b/vcl/unx/gtk/window/gtkframe.cxx
index 00d78bf..16a703c 100644
--- a/vcl/unx/gtk/window/gtkframe.cxx
+++ b/vcl/unx/gtk/window/gtkframe.cxx
@@ -2276,6 +2276,18 @@ SalFrame::SalPointerState GtkSalFrame::GetPointerState()
     return aState;
 }
 
+SalFrame::SalIndicatorState GtkSalFrame::GetIndicatorState()
+{
+    SalIndicatorState aState;
+    aState.mnState = GetX11SalData()->GetDisplay()->GetIndicatorState();
+    return aState;
+}
+
+void GtkSalFrame::SimulateKeyPress( USHORT nKeyCode )
+{
+    GetX11SalData()->GetDisplay()->SimulateKeyPress(nKeyCode);
+}
+
 void GtkSalFrame::SetInputContext( SalInputContext* pContext )
 {
     if( ! pContext )
diff --git a/vcl/unx/headless/svpframe.cxx b/vcl/unx/headless/svpframe.cxx
index 3218a40..7deb70e 100644
--- a/vcl/unx/headless/svpframe.cxx
+++ b/vcl/unx/headless/svpframe.cxx
@@ -388,6 +388,17 @@ SalFrame::SalPointerState SvpSalFrame::GetPointerState()
     return aState;
 }
 
+SalFrame::SalIndicatorState SvpSalFrame::GetIndicatorState()
+{
+    SalIndicatorState aState;
+    aState.mnState = 0;
+    return aState;
+}
+
+void SvpSalFrame::SimulateKeyPress( USHORT /*nKeyCode*/ )
+{
+}
+
 void SvpSalFrame::SetParent( SalFrame* pNewParent )
 {
     if( m_pParent )
diff --git a/vcl/unx/headless/svpframe.hxx b/vcl/unx/headless/svpframe.hxx
index bab8ceb..bbe5033 100644
--- a/vcl/unx/headless/svpframe.hxx
+++ b/vcl/unx/headless/svpframe.hxx
@@ -112,6 +112,8 @@ public:
     virtual void				Beep( SoundType eSoundType );
     virtual const SystemEnvData*	GetSystemData() const;
     virtual SalPointerState     GetPointerState();
+    virtual SalIndicatorState   GetIndicatorState();
+    virtual void                SimulateKeyPress( USHORT nKeyCode );
     virtual void				SetParent( SalFrame* pNewParent );
     virtual bool				SetPluginParent( SystemParentData* pNewParent );
     virtual void                SetBackgroundBitmap( SalBitmap* pBitmap );
diff --git a/vcl/unx/inc/plugins/gtk/gtkframe.hxx b/vcl/unx/inc/plugins/gtk/gtkframe.hxx
index 35fdbbf..a82fb66 100644
--- a/vcl/unx/inc/plugins/gtk/gtkframe.hxx
+++ b/vcl/unx/inc/plugins/gtk/gtkframe.hxx
@@ -365,6 +365,10 @@ public:
     // get current modifier and button mask
     virtual SalPointerState     GetPointerState();
 
+    virtual SalIndicatorState   GetIndicatorState();
+
+    virtual void                SimulateKeyPress( USHORT nKeyCode );
+
     // set new parent window
     virtual void                SetParent( SalFrame* pNewParent );
     // reparent window to act as a plugin; implementation
diff --git a/vcl/unx/inc/saldisp.hxx b/vcl/unx/inc/saldisp.hxx
index ccb64e9..07fa6bb 100644
--- a/vcl/unx/inc/saldisp.hxx
+++ b/vcl/unx/inc/saldisp.hxx
@@ -444,6 +444,8 @@ public:
     void			Beep() const;
 
     void			ModifierMapping();
+    void            SimulateKeyPress( USHORT nKeyCode );
+    USHORT          GetIndicatorState() const;
     String			GetKeyNameFromKeySym( KeySym keysym ) const;
     XubString		GetKeyName( USHORT nKeyCode ) const;
     USHORT			GetKeyCode( KeySym keysym, char*pcPrintable ) const;
diff --git a/vcl/unx/inc/salframe.h b/vcl/unx/inc/salframe.h
index 93a5977..ec832f0 100644
--- a/vcl/unx/inc/salframe.h
+++ b/vcl/unx/inc/salframe.h
@@ -252,6 +252,8 @@ public:
     virtual void				Beep( SoundType eSoundType );
     virtual const SystemEnvData*	GetSystemData() const;
     virtual SalPointerState     GetPointerState();
+    virtual SalIndicatorState   GetIndicatorState();
+    virtual void                SimulateKeyPress( USHORT nKeyCode );
     virtual void				SetParent( SalFrame* pNewParent );
     virtual bool				SetPluginParent( SystemParentData* pNewParent );
     virtual void                SetBackgroundBitmap( SalBitmap* pBitmap );
diff --git a/vcl/unx/source/app/saldisp.cxx b/vcl/unx/source/app/saldisp.cxx
index e3548ee..8f79a8c 100644
--- a/vcl/unx/source/app/saldisp.cxx
+++ b/vcl/unx/source/app/saldisp.cxx
@@ -57,7 +57,7 @@
 #define XK_KOREAN
 #endif
 #include <X11/keysym.h>
-
+#include <X11/XKBlib.h>
 #include <X11/Xatom.h>
 
 #ifdef USE_XINERAMA
@@ -1042,6 +1042,77 @@ void SalDisplay::Beep() const
 
 // Keyboard
 // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
+
+namespace {
+
+bool InitXkb(Display* dpy)
+{
+    int nOpcode, nEvent, nError;
+    int nXkbMajor = XkbMajorVersion;
+    int nXkbMinor = XkbMinorVersion;
+
+    if (!XkbLibraryVersion(&nXkbMajor, &nXkbMinor))
+        return false;
+
+    return XkbQueryExtension(
+        dpy, &nOpcode, &nEvent, &nError, &nXkbMajor, &nXkbMinor);
+}
+
+unsigned int GetKeySymMask(Display* dpy, KeySym nKeySym)
+{
+    int nMask = 0;
+    XModifierKeymap* pXmkMap = XGetModifierMapping(dpy);
+    KeyCode nKeyCode = XKeysymToKeycode(dpy, nKeySym);
+    if (nKeyCode == NoSymbol)
+        return 0;
+
+    for (int i = 0; i < 8; ++i)
+    {
+        KeyCode nThisKeyCode = pXmkMap->modifiermap[pXmkMap->max_keypermod*i];
+        if (nThisKeyCode == nKeyCode)
+            nMask = 1 << i;
+    }
+    XFreeModifiermap(pXmkMap);
+    return nMask;
+}
+
+}
+
+void SalDisplay::SimulateKeyPress( USHORT nKeyCode )
+{
+    if (nKeyCode == KEY_CAPSLOCK)
+    {
+        Display* dpy = GetDisplay();
+        if (!InitXkb(dpy))
+            return;
+
+        unsigned int nMask = GetKeySymMask(dpy, XK_Caps_Lock);
+        XkbStateRec xkbState;
+        XkbGetState(dpy, XkbUseCoreKbd, &xkbState);
+        unsigned int nCapsLockState = xkbState.locked_mods & nMask;
+        if (nCapsLockState)
+            XkbLockModifiers (dpy, XkbUseCoreKbd, nMask, 0);
+        else
+            XkbLockModifiers (dpy, XkbUseCoreKbd, nMask, nMask);
+    }
+}
+
+USHORT SalDisplay::GetIndicatorState() const
+{
+    unsigned int _state = 0;
+    USHORT nState = 0;
+    XkbGetIndicatorState(pDisp_, XkbUseCoreKbd, &_state);
+
+    if ((_state & 0x00000001))
+        nState |= INDICATOR_CAPSLOCK;
+    if ((_state & 0x00000002))
+        nState |= INDICATOR_NUMLOCK;
+    if ((_state & 0x00000004))
+        nState |= INDICATOR_SCROLLLOCK;
+
+    return nState;
+}
+
 String SalDisplay::GetKeyNameFromKeySym( KeySym nKeySym ) const
 {
     String aRet;
diff --git a/vcl/unx/source/window/salframe.cxx b/vcl/unx/source/window/salframe.cxx
index 631131b..e62aa7f 100644
--- a/vcl/unx/source/window/salframe.cxx
+++ b/vcl/unx/source/window/salframe.cxx
@@ -2843,6 +2843,18 @@ SalFrame::SalPointerState X11SalFrame::GetPointerState()
     return aState;
 }
 
+SalFrame::SalIndicatorState X11SalFrame::GetIndicatorState()
+{
+    SalIndicatorState aState;
+    aState.mnState = GetX11SalData()->GetDisplay()->GetIndicatorState();
+    return aState;
+}
+
+void X11SalFrame::SimulateKeyPress( USHORT nKeyCode )
+{
+    GetX11SalData()->GetDisplay()->SimulateKeyPress(nKeyCode);
+}
+
 long X11SalFrame::HandleMouseEvent( XEvent *pEvent )
 {
     SalMouseEvent		aMouseEvt;
diff --git a/vcl/win/inc/salframe.h b/vcl/win/inc/salframe.h
index d432afd..bed81cd 100644
--- a/vcl/win/inc/salframe.h
+++ b/vcl/win/inc/salframe.h
@@ -135,6 +135,8 @@ public:
     virtual void				Beep( SoundType eSoundType );
     virtual const SystemEnvData*	GetSystemData() const;
     virtual SalPointerState		GetPointerState();
+    virtual SalIndicatorState   GetIndicatorState();
+    virtual void                SimulateKeyPress( USHORT nKeyCode );
     virtual void				SetParent( SalFrame* pNewParent );
     virtual bool				SetPluginParent( SystemParentData* pNewParent );
     virtual void                SetBackgroundBitmap( SalBitmap* );
diff --git a/vcl/win/source/window/salframe.cxx b/vcl/win/source/window/salframe.cxx
index 5913dd6..f57805f 100644
--- a/vcl/win/source/window/salframe.cxx
+++ b/vcl/win/source/window/salframe.cxx
@@ -3194,6 +3194,41 @@ SalFrame::SalPointerState WinSalFrame::GetPointerState()
 
 // -----------------------------------------------------------------------
 
+SalFrame::SalIndicatorState WinSalFrame::GetIndicatorState()
+{
+    SalIndicatorState aState;
+    aState.mnState = 0;
+    if (::GetKeyState(VK_CAPITAL))
+        aState.mnState |= INDICATOR_CAPSLOCK;
+
+    if (::GetKeyState(VK_NUMLOCK))
+        aState.mnState |= INDICATOR_NUMLOCK;
+
+    if (::GetKeyState(VK_SCROLL))
+        aState.mnState |= INDICATOR_SCROLLLOCK;
+
+    return aState;
+}
+
+void WinSalFrame::SimulateKeyPress( USHORT nKeyCode )
+{
+    BYTE nVKey = 0;
+    switch (nKeyCode)
+    {
+        case KEY_CAPSLOCK:
+            nVKey = VK_CAPITAL;
+        break;
+    }
+
+    if (nVKey > 0 && nVKey < 255)
+    {
+        ::keybd_event(nVKey, 0x45, KEYEVENTF_EXTENDEDKEY, 0);
+        ::keybd_event(nVKey, 0x45, KEYEVENTF_EXTENDEDKEY|KEYEVENTF_KEYUP, 0);
+    }
+}
+
+// -----------------------------------------------------------------------
+
 void WinSalFrame::SetBackgroundBitmap( SalBitmap* )
 {
 }
-- 
1.7.0.1

