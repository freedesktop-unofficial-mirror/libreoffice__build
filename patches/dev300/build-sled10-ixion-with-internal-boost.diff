--- ixion/makefile.mk.old	2010-12-22 14:51:11.000000000 +0100
+++ ixion/makefile.mk	2010-12-22 20:32:45.000000000 +0100
@@ -38,14 +38,19 @@ TARGET=ixion
 
 TARFILE_NAME=ixion-0.2.0
 TARFILE_MD5=0f63ee487fda8f21fafa767b3c447ac9
-#PATCH_FILES=$(TARFILE_NAME).diff
+PATCH_FILES=ixion-0.2.0-internal-boost.patch
 .IF "$(GUI)" != "UNX"
 BUILD_ACTION=dmake $(MFLAGS) $(CALLMACROS)
 BUILD_DIR=src$/libixion
 .ELSE
 CONFIGURE_DIR=
-CONFIGURE_ACTION=.$/configure
 CONFIGURE_FLAGS=--disable-shared --with-pic
+.IF "$(SYSTEM_BOOST)" == "YES"
+CONFIGURE_ACTION=.$/configure
+.ELSE 	# "$(SYSTEM_BOOST)" == "YES"
+CONFIGURE_FLAGS += --with-boost=$(SOLARVERSION)/$(INPATH)
+CONFIGURE_ACTION=aclocal -I m4 && autoconf -I m4 && automake && .$/configure
+.ENDIF 	# "$(SYSTEM_BOOST)" == "YES"
 BUILD_ACTION=$(GNUMAKE)
 BUILD_DIR=$(CONFIGURE_DIR)
 OUT2LIB+=src/libixion/.libs$/libixion*.a
--- ixion/ixion-0.2.0-internal-boost.patch.old	2010-12-22 20:32:36.000000000 +0100
+++ ixion/ixion-0.2.0-internal-boost.patch	2010-12-22 20:29:23.000000000 +0100
@@ -0,0 +1,82 @@
+--- misc/build/ixion-0.2.0/configure.ac.old	2010-09-09 13:42:44.000000000 +0200
++++ misc/build/ixion-0.2.0/configure.ac	2010-12-22 19:28:49.000000000 +0100
+@@ -11,7 +11,7 @@ m4_define([ixion_api_version],
+                     [ixion_major_version.ixion_minor_api_version])
+ 
+ 
+-AC_PREREQ([2.63])
++AC_PREREQ([2.59])
+ AC_INIT([ixion], [ixion_version])
+ AM_INIT_AUTOMAKE
+ 
+@@ -50,10 +50,9 @@ AC_CHECK_FUNCS([gettimeofday])
+ 
+ BOOST_REQUIRE([$BOOST_VERSION])
+ BOOST_THREADS
+-BOOST_PROGRAM_OPTIONS
+ BOOST_UNORDERED
+ 
+-CXXFLAGS="-D_REENTRANT"
++CXXFLAGS="-D_REENTRANT $BOOST_CPPFLAGS"
+ AC_DEFINE(CXXFLAGS)
+ 
+ AC_CONFIG_FILES([Makefile
+--- misc/build/ixion-0.2.0/m4/boost.m4.old	2010-09-09 13:42:00.000000000 +0200
++++ misc/build/ixion-0.2.0/m4/boost.m4	2010-12-22 17:36:21.000000000 +0100
+@@ -89,7 +89,6 @@ rm -rf conftest*
+ # Otherwise aborts with an error message.
+ AC_DEFUN([BOOST_REQUIRE],
+ [AC_REQUIRE([AC_PROG_CXX])dnl
+-AC_REQUIRE([AC_PROG_GREP])dnl
+ echo "$as_me: this is boost.m4[]_BOOST_SERIAL" >&AS_MESSAGE_LOG_FD
+ boost_save_IFS=$IFS
+ boost_version_req=$1
+@@ -131,7 +130,7 @@ m4_pattern_allow([^BOOST_VERSION$])dnl
+     case $with_boost in #(
+       ''|yes) set x '' /opt/local/include /usr/local/include /opt/include \
+                  /usr/include C:/Boost/include;; #(
+-      *)      set x "$with_boost/include" "$with_boost";;
++      *)      set x "$with_boost/include" "$with_boost/inc" "$with_boost";;
+     esac
+     shift
+     for boost_dir
+@@ -146,7 +145,7 @@ m4_pattern_allow([^BOOST_VERSION$])dnl
+     #
+     # I didn't indent this loop on purpose (to avoid over-indented code)
+     boost_layout_system_search_list=`cd "$boost_dir" 2>/dev/null \
+-        && ls -1 | "${GREP}" '^boost-' | sort -rn -t- -k2 \
++        && ls -1 | grep '^boost-' | sort -rn -t- -k2 \
+         && echo .`
+     for boost_inc in $boost_layout_system_search_list
+     do
+@@ -1017,8 +1016,8 @@ boost_use_source=:
+ # If we already have a .o, re-use it.  We change $ac_ext so that $ac_link
+ # tries to link the existing object file instead of compiling from source.
+ test -f conftest.$ac_objext && ac_ext=$ac_objext && boost_use_source=false &&
+-  _AS_ECHO_LOG([re-using the existing conftest.$ac_objext])
+-AS_IF([_AC_DO_STDERR($ac_link) && {
++  AC_MSG_NOTICE([re-using the existing conftest.$ac_objext])
++AS_IF([_AC_EVAL_STDERR($ac_link) && {
+ 	 test -z "$ac_[]_AC_LANG_ABBREV[]_werror_flag" ||
+ 	 test ! -s conftest.err
+        } && test -s conftest$ac_exeext && {
+--- misc/build/ixion-0.2.0/src/Makefile.am.old	2010-09-07 16:10:23.000000000 +0200
++++ misc/build/ixion-0.2.0/src/Makefile.am	2010-12-22 20:11:36.000000000 +0100
+@@ -2,16 +2,7 @@ SUBDIRS = libixion .
+ 
+ INCLUDES = -I$(top_srcdir)/inc
+ 
+-bin_PROGRAMS = ixion-parser ixion-sorter
+-ixion_parser_SOURCES = ixion_parser.cpp
+-ixion_parser_LDADD = libixion/libixion-@IXION_API_VERSION@.la \
+-					 $(BOOST_THREAD_LIBS) $(BOOST_PROGRAM_OPTIONS_LIBS)
+-ixion_parser_CPPFLAGS = -I$(top_builddir)/lib/libixion/libixion.la
+-
+-ixion_sorter_SOURCES = ixion_sorter.cpp
+-ixion_sorter_LDADD = libixion/libixion-@IXION_API_VERSION@.la \
+-					 $(BOOST_THREAD_LIBS) $(BOOST_PROGRAM_OPTIONS_LIBS)
+-ixion_sorter_CPPFLAGS = -I$(top_builddir)/lib/libixion/libixion.la
++bin_PROGRAMS = 
+ 
+ TESTS_ENVIRONMENT = $(SHELL) ./ixion-parser
+ TESTS = $(top_srcdir)/test/01-simple-arithmetic.txt \
