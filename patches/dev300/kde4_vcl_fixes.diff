diff --git vcl/unx/kde4/KDESalGraphics.cxx vcl/unx/kde4/KDESalGraphics.cxx
index 35b9330..d3baf56 100644
--- vcl/unx/kde4/KDESalGraphics.cxx
+++ vcl/unx/kde4/KDESalGraphics.cxx
@@ -94,52 +94,35 @@ QRect region2QRect( const Region& rControlRegion )
 
 BOOL KDESalGraphics::IsNativeControlSupported( ControlType type, ControlPart part )
 {
+	//don't do a catch all incase new controls are added
 	if (type == CTRL_PUSHBUTTON) return true;
-	
-	if (type == CTRL_MENUBAR) return true;
-	
-	if (type == CTRL_MENU_POPUP) return true;
-	
-	if (type == CTRL_EDITBOX) return true;
-	
-	if (type == CTRL_COMBOBOX) return true;
-	
-	if (type == CTRL_TOOLBAR) return true;
-	
-	if (type == CTRL_CHECKBOX) return true;
-	
-	if (type == CTRL_LISTBOX) return true;
-	
-	if (type == CTRL_LISTNODE) return true;
-	
-	if (type == CTRL_FRAME) return true;
-	
-	if (type == CTRL_SCROLLBAR) return true;
-	
-	if (type == CTRL_WINDOW_BACKGROUND) return true;
-	
-	if (type == CTRL_SPINBOX && (part == PART_ENTIRE_CONTROL || part == HAS_BACKGROUND_TEXTURE) ) return true;
-	
-	// no spinbuttons for KDE, paint spinbox complete
-   //if (type == CTRL_SPINBUTTONS) return true;
-	
-	if (type == CTRL_GROUPBOX) return true;
-	
-	if (type == CTRL_FIXEDLINE) return true;
-	
-	if (type == CTRL_FIXEDBORDER) return true;
-	
-	if (type == CTRL_TOOLTIP) return true;
-	
-	if (type == CTRL_RADIOBUTTON) return true;
+	else if (type == CTRL_MENUBAR) return true;
+	else if (type == CTRL_MENU_POPUP) return true;
+	else if (type == CTRL_EDITBOX) return true;
+	else if (type == CTRL_COMBOBOX) return true;
+	else if (type == CTRL_TOOLBAR) return true;
+	else if (type == CTRL_CHECKBOX) return true;
+	else if (type == CTRL_LISTBOX) return true;
+	else if (type == CTRL_LISTNODE) return true;
+	else if (type == CTRL_FRAME) return true;
+	else if (type == CTRL_SCROLLBAR) return true;
+	else if (type == CTRL_WINDOW_BACKGROUND) return true;
+	else if (type == CTRL_SPINBOX && (part == PART_ENTIRE_CONTROL || part == HAS_BACKGROUND_TEXTURE) ) return true;
+
+    // no spinbuttons for KDE, paint spinbox complete
+    //if (type == CTRL_SPINBUTTONS) return true;
+	
+	else if (type == CTRL_GROUPBOX) return true;
+	else if (type == CTRL_FIXEDLINE) return true;
+	else if (type == CTRL_FIXEDBORDER) return true;
+	else if (type == CTRL_TOOLTIP) return true;
+	else if (type == CTRL_RADIOBUTTON) return true;
 	
 	return false;
 	
-	if ( (type == CTRL_TAB_ITEM) && (part == PART_ENTIRE_CONTROL) ) return true;
-	if ( (type == CTRL_TAB_PANE) && (part == PART_ENTIRE_CONTROL) ) return true;
+	//if ( (type == CTRL_TAB_ITEM) && (part == PART_ENTIRE_CONTROL) ) return true;
+	//if ( (type == CTRL_TAB_PANE) && (part == PART_ENTIRE_CONTROL) ) return true;
 	// no CTRL_TAB_BODY for KDE
-	if ( (type == CTRL_PROGRESS)    && (part == PART_ENTIRE_CONTROL) ) return true;
-		
-	return false;
+	//if ( (type == CTRL_PROGRESS)    && (part == PART_ENTIRE_CONTROL) ) return true;
 }
 
@@ -182,14 +180,15 @@ BOOL KDESalGraphics::drawNativeControl( ControlType type, ControlPart part,
 {
-   // put not implemented types here
-   if (type == CTRL_SPINBUTTONS)
-   {
-       return false;
-   }

+	if (!IsNativeControlSupported(type, part))
+		return false;
+    
     BOOL returnVal = true;
 
+	SelectFont();
+	SelectPen();
+	
     Display* dpy = GetXDisplay();
     XLIB_Window drawable = GetDrawable();
     GC gc = SelectPen();
 	
-	QRect widgetRect = region2QRect(rControlRegion);
+	QRect widgetRect = region2QRect(rControlRegion.GetBoundRect());
@@ -205,29 +180,12 @@ BOOL KDESalGraphics::drawNativeControl( ControlType type, ControlPart part,
     }
 	
-	//draw right onto the window
 	QPixmap pixmap(widgetRect.width(), widgetRect.height());
 	
-	if (pixmap.isNull())
-	{
-		return false;
-	}
+	// always fill the background
+	// this way we avoid copying the screen contents over to our pixmap
+	pixmap.fill(KApplication::palette().color(QPalette::Window));
 	
 	QPainter painter(&pixmap);
-   // painter.setBackgroundMode(Qt::OpaqueMode);
-   
-   //copy previous screen contents for proper blending
-   #if ( QT_VERSION >= QT_VERSION_CHECK( 4, 5, 0 ) )
-   QPixmap screen = QPixmap::fromX11Pixmap(drawable);
-   painter.drawPixmap(0,0, screen, widgetRect.left(), widgetRect.top(), widgetRect.width(), widgetRect.height());
-   #else
-   const QX11Info& rX11Info( pixmap.x11Info() );
-   X11SalGraphics::CopyScreenArea( dpy,
-                             drawable, GetScreenNumber(), GetBitCount(),
-                             pixmap.handle(), rX11Info.screen(), rX11Info.depth(),
-                             GetDisplay()->GetCopyGC( GetScreenNumber() ),
-                             widgetRect.left(), widgetRect.top(), widgetRect.width(), widgetRect.height(),
-                             0, 0 );
-   #endif
	
    if (type == CTRL_PUSHBUTTON)
    {
@@ -248,9 +222,8 @@ BOOL KDESalGraphics::drawNativeControl( ControlType type, ControlPart part,
 			
 			kapp->style()->drawControl( QStyle::CE_MenuBarItem, &styleOption, &painter);
 		}
-		else
+		else if (part == PART_ENTIRE_CONTROL)
 		{
-			pixmap.fill(KApplication::palette().color(QPalette::Window));
 		}
 	}
 	else if (type == CTRL_MENU_POPUP)
@@ -239,7 +263,6 @@ BOOL KDESalGraphics::drawNativeControl( ControlType type, ControlPart part,
 		}
 		else
 		{
-			pixmap.fill(KApplication::palette().color(QPalette::Window));
 			
            #if ( QT_VERSION >= QT_VERSION_CHECK( 4, 5, 0 ) )
 			QStyleOptionFrameV3 styleOption;
@@ -310,39 +263,45 @@ BOOL KDESalGraphics::drawNativeControl( ControlType type, ControlPart part,
 	}
-	else if ( (type == CTRL_TOOLBAR) && (part == PART_BUTTON) )
-    {
-		QStyleOptionToolButton styleOption;
-		
-		styleOption.arrowType = Qt::NoArrow;
-		styleOption.subControls = QStyle::SC_ToolButton;
-		
-		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
-		styleOption.state = vclStateValue2StateFlag( nControlState, value );
-		styleOption.state |= QStyle::State_Raised | QStyle::State_Enabled | QStyle::State_AutoRaise;
-		
-		kapp->style()->drawComplexControl( QStyle::CC_ToolButton, &styleOption, &painter);
-    }
-	else if ( (type == CTRL_TOOLBAR) && (part == PART_ENTIRE_CONTROL) )
+	else if (type == CTRL_TOOLBAR)
     {
-		QStyleOptionToolBar styleOption;
-		
-		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
-		styleOption.state = vclStateValue2StateFlag( nControlState, value );
-		
-		kapp->style()->drawControl( QStyle::CE_ToolBar, &styleOption, &painter);
-    }
-	else if ( (type == CTRL_TOOLBAR) && (part == PART_THUMB_VERT) )
-    {
-        QStyleOption styleOption;
-		
-		int width = kapp->style()->pixelMetric(QStyle::PM_ToolBarHandleExtent);
+		if (part == PART_BUTTON)
+		{
+			QStyleOptionToolButton styleOption;
+			
+			styleOption.arrowType = Qt::NoArrow;
+			styleOption.subControls = QStyle::SC_ToolButton;
+			
+			styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+			styleOption.state = vclStateValue2StateFlag( nControlState, value );
+			styleOption.state |= QStyle::State_Raised | QStyle::State_Enabled | QStyle::State_AutoRaise;
+			
+			kapp->style()->drawComplexControl( QStyle::CC_ToolButton, &styleOption, &painter);
+		}
+		else if (part == PART_THUMB_VERT)
+		{
+			QStyleOption styleOption;
 		
-		styleOption.rect = QRect(0, 0, width, widgetRect.height());
-		styleOption.state = QStyle::State_Horizontal;
+			int width = kapp->style()->pixelMetric(QStyle::PM_ToolBarHandleExtent);
+			
+			styleOption.rect = QRect(0, 0, width, widgetRect.height());
+			styleOption.state = QStyle::State_Horizontal;
+			
+			kapp->style()->drawPrimitive( QStyle::PE_IndicatorToolBarHandle, &styleOption, &painter);
+		}
+		else if (part == PART_ENTIRE_CONTROL)
+		{
+			QStyleOptionToolBar styleOption;
 		
-		kapp->style()->drawPrimitive( QStyle::PE_IndicatorToolBarHandle, &styleOption, &painter);
+			styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+			styleOption.state = vclStateValue2StateFlag( nControlState, value );
+			
+			kapp->style()->drawControl( QStyle::CE_ToolBar, &styleOption, &painter);
+		}
+		else
+		{
+			returnVal = false;
+		}
     }
 	else if (type == CTRL_EDITBOX)
 	{
-		pixmap.fill(KApplication::palette().color(QPalette::Window));
 		
 		//TODO hover?? OO does not seem to do this for line edits
@@ -302,7 +342,6 @@ BOOL KDESalGraphics::drawNativeControl( ControlType type, ControlPart part,
 	}
 	else if (type == CTRL_COMBOBOX)
 	{
-		pixmap.fill(KApplication::palette().color(QPalette::Window));
 		
 		QStyleOptionComboBox styleOption;
 		
@@ -315,19 +354,26 @@ BOOL KDESalGraphics::drawNativeControl( ControlType type, ControlPart part,
 	}
 	else if (type == CTRL_LISTBOX)
 	{
-		QStyleOptionComboBox styleOption;
-		
-		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
-		styleOption.state = vclStateValue2StateFlag( nControlState, value );
-		
-		if (part == PART_SUB_EDIT)
-		{
-			kapp->style()->drawControl(QStyle::CE_ComboBoxLabel, &styleOption, &painter);
-		}
-		else
-		{
-			kapp->style()->drawComplexControl(QStyle::CC_ComboBox, &styleOption, &painter);
-		}
+        if( part == PART_WINDOW )
+        {
+            lcl_drawFrame( widgetRect, painter, QStyle::PE_Frame, nControlState, value );
+        }
+        else
+        {
+            QStyleOptionComboBox styleOption;
+            
+            styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+            styleOption.state = vclStateValue2StateFlag( nControlState, value );
+            
+            if (part == PART_SUB_EDIT)
+            {
+                kapp->style()->drawControl(QStyle::CE_ComboBoxLabel, &styleOption, &painter);
+            }
+            else
+            {
+                kapp->style()->drawComplexControl(QStyle::CC_ComboBox, &styleOption, &painter);
+            }
+        }
 	}
 	else if (type == CTRL_LISTNODE)
 	{
@@ -357,8 +403,6 @@ BOOL KDESalGraphics::drawNativeControl( ControlType type, ControlPart part,
 	}
 	else if (type == CTRL_SCROLLBAR)
 	{
-		pixmap.fill(KApplication::palette().color(QPalette::Window));
-		
 		if ((part == PART_DRAW_BACKGROUND_VERT) || (part == PART_DRAW_BACKGROUND_HORZ))
 		{
 			ScrollbarValue* sbVal = static_cast<ScrollbarValue *> ( value.getOptionalVal() );
@@ -401,7 +445,5 @@ BOOL KDESalGraphics::drawNativeControl( ControlType type, ControlPart part,
 	}
 	else if (type == CTRL_SPINBOX)
 	{
-		pixmap.fill(KApplication::palette().color(QPalette::Window));
- 
 		QStyleOptionSpinBox styleOption;
 		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
@@ -448,6 +486,5 @@ BOOL KDESalGraphics::drawNativeControl( ControlType type, ControlPart part,
 	else if (type == CTRL_WINDOW_BACKGROUND)
 	{
-		pixmap.fill(KApplication::palette().color(QPalette::Window));	
 	}
 	else if (type == CTRL_FIXEDLINE)
 	{
@@ -491,7 +518,7 @@ BOOL KDESalGraphics::drawNativeControl( ControlType type, ControlPart part,
 			drawable, GetScreenNumber(), GetVisual().GetDepth(), gc,
 			0, 0, widgetRect.width(), widgetRect.height(), widgetRect.left(), widgetRect.top() );
 	}
-
+	
     return returnVal;
 }
 
@@ -503,7 +530,7 @@ BOOL KDESalGraphics::getNativeControlRegion( ControlType type, ControlPart part,
 {
     bool retVal = false;
 	
-    QRect boundingRect = region2QRect( controlRegion );
+    QRect boundingRect = region2QRect( controlRegion.GetBoundRect() );
     QRect contentRect = boundingRect;
     QStyleOptionComplex styleOption;
 	
diff --git vcl/unx/kde4/KDEXLib.cxx vcl/unx/kde4/KDEXLib.cxx
index 1e4e367..f7bf04f 100644
--- vcl/unx/kde4/KDEXLib.cxx
+++ vcl/unx/kde4/KDEXLib.cxx
@@ -34,6 +34,7 @@
 #include <kaboutdata.h>
 #include <kcmdlineargs.h>
 #include <kstartupinfo.h>
+#include <kmainwindow.h>
 
 #undef Region
 
@@ -59,7 +60,7 @@ KDEXLib::KDEXLib() :
 
 KDEXLib::~KDEXLib()
 {
-	delete (VCLKDEApplication*)m_pApplication;
+	delete m_pApplication;
 	
     // free the faked cmdline arguments no longer needed by KApplication
     for( int i = 0; i < m_nFakeCmdLineArgs; i++ )
@@ -146,7 +147,7 @@ void KDEXLib::Init()
 	Display* pDisp = QX11Info::display();
 	SalKDEDisplay *pSalDisplay = new SalKDEDisplay(pDisp);
 	
-	((VCLKDEApplication*)m_pApplication)->disp = pSalDisplay;
+	m_pApplication->disp = pSalDisplay;
 
 	XSetIOErrorHandler	  ( (XIOErrorHandler)X11SalData::XIOErrorHdl );
 	XSetErrorHandler	  ( (XErrorHandler)X11SalData::XErrorHdl );
diff --git vcl/unx/kde4/KDEXLib.hxx vcl/unx/kde4/KDEXLib.hxx
index 09a6197..7cd341f 100644
--- vcl/unx/kde4/KDEXLib.hxx
+++ vcl/unx/kde4/KDEXLib.hxx
@@ -29,11 +29,13 @@
 
 #include <saldisp.hxx>
 
+class VCLKDEApplication;
+
 class KDEXLib : public SalXLib
 {
 	private:
 		bool m_bStartupDone;
-		void* m_pApplication;
+		VCLKDEApplication* m_pApplication;
 		char** m_pFreeCmdLineArgs;
 		char** m_pAppCmdLineArgs;
 		int m_nFakeCmdLineArgs;
diff --git vcl/unx/kde4/VCLKDEApplication.cxx vcl/unx/kde4/VCLKDEApplication.cxx
index ff44d1b..4c4587b 100644
--- vcl/unx/kde4/VCLKDEApplication.cxx
+++ vcl/unx/kde4/VCLKDEApplication.cxx
@@ -41,6 +41,9 @@ VCLKDEApplication::VCLKDEApplication() :
 
 bool VCLKDEApplication::x11EventFilter(XEvent* event)
 {
+	disp->DispatchInternalEvent();
+	disp->GetXLib()->CheckTimeout(true);
+	
 	//if we have a display and the display consumes the event
 	//do not process the event in qt
 	if (disp && disp->Dispatch(event) > 0)
