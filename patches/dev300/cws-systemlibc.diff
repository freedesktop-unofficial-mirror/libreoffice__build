---
 configure.in                    |   15 ++++++
 external/glibc-2.1.3.patch      |   11 ++++-
 external/glibc/makefile.mk      |   10 ++++-
 idlc/source/preproc/getopt.c    |   94 ---------------------------------------
 idlc/source/preproc/makefile.mk |    1 -
 idlc/source/preproc/nlist.c     |    3 -
 idlc/source/preproc/unix.c      |    6 +--
 set_soenv.in                    |    3 +
 soltools/cpp/_getopt.c          |   71 -----------------------------
 soltools/cpp/_nlist.c           |    3 -
 soltools/cpp/_unix.c            |    6 +--
 soltools/cpp/makefile.mk        |    1 -
 soltools/javadep/javadep.c      |   48 +-------------------
 tools/bootstrp/rscdep.cxx       |   49 +--------------------
 14 files changed, 42 insertions(+), 279 deletions(-)
 delete mode 100644 idlc/source/preproc/getopt.c
 delete mode 100644 soltools/cpp/_getopt.c

diff --git configure.in configure.in
index 17d5b1e..12fbec8 100644
--- configure.in
+++ configure.in
@@ -5291,6 +5291,21 @@ if test "$_os" = "Linux"; then
    fi
 fi
 
+if test "$_os" != "WINNT"; then
+  AC_CHECK_FUNCS(getopt, HAVE_GETOPT=YES, [HAVE_GETOPT=NO])
+  AC_CHECK_FUNCS(readdir_r, HAVE_READDIR_R=YES, [HAVE_READDIR_R=NO])
+  if test "$HAVE_GETOPT" = "YES" -a "$HAVE_READDIR_R" = "YES"; then
+	SYSTEM_GLIBC=YES
+  fi
+else
+  HAVE_GETOPT=NO
+  HAVE_READDIR_R=NO
+  SYSTEM_GLIBC=NO
+fi
+AC_SUBST(HAVE_GETOPT)
+AC_SUBST(HAVE_READDIR_R)
+AC_SUBST(SYSTEM_GLIBC)
+
 dnl =========================================
 dnl Check for the Microsoft Platform SDK.
 dnl =========================================
diff --git external/glibc-2.1.3.patch external/glibc-2.1.3.patch
index 57aae6a..a9c7e7b 100644
--- external/glibc-2.1.3.patch
+++ external/glibc-2.1.3.patch
@@ -76,7 +76,7 @@
  extern int getopt ();
 --- misc/glibc-2.1.3/posix/makefile.mk	Mon Mar 31 09:43:50 2008
 +++ misc/build/glibc-2.1.3/posix/makefile.mk	Mon Mar 31 09:43:38 2008
-@@ -1 +1,63 @@
+@@ -1 +1,69 @@
 -dummy
 +#*************************************************************************
 +#
@@ -123,14 +123,16 @@
 +
 +# --- Files --------------------------------------------------------
 +
++.IF "$(HAVE_GETOPT)" != "YES"
 +OBJFILES=	$(OBJ)$/getopt.obj		\
 +			$(OBJ)$/getopt1.obj
 +
 +LIB1TARGET=$(SLB)$/$(TARGET).lib
 +LIB1ARCHIV=$(LB)$/lib$(TARGET).a
 +LIB1OBJFILES=$(OBJFILES)
++.ENDIF
 +
-+.IF "$(OS)"=="NETBSD"
++.IF "$(HAVE_READDIR_R)" != "YES"
 +TARGET2=gnu_readdir_r
 +OBJFILES+= $(OBJ)$/readdir_r.obj
 +LIB2TARGET=$(SLB)$/$(TARGET2).lib
@@ -138,6 +140,11 @@
 +LIB2OBJFILES= $(OBJ)$/readdir_r.obj
 +.ENDIF
 +
++.IF "$(HAVE_READDIR_R)" == "YES" && "$(HAVE_GETOPT)" == "YES"
++@all:
++	@echo "Nothing to do here.
++.ENDIF
++
 +# --- Targets ------------------------------------------------------
 +
 +.INCLUDE :  target.mk
diff --git external/glibc/makefile.mk external/glibc/makefile.mk
index cf45165..fb8e530 100644
--- external/glibc/makefile.mk
+++ external/glibc/makefile.mk
@@ -36,10 +36,14 @@ TARGET=getopt
 
 # --- Files --------------------------------------------------------
 
+.IF "$(HAVE_GETOPT)" != "YES" || "$(HAVE_READDIR_R)" != "YES"
 TARFILE_NAME=glibc-2.1.3-stub
 TARFILE_MD5=4a660ce8466c9df01f19036435425c3a
 TARFILE_ROOTDIR=glibc-2.1.3
-ADDITIONAL_FILES=posix$/makefile.mk posix$/config.h posix$/readdir_r.c
+ADDITIONAL_FILES=posix$/makefile.mk posix$/config.h
+.IF "$(HAVE_READDIR_R)" != "YES"
+ADDITIONAL_FILES += posix$/readdir_r.c
+.ENDIF
 
 PATCH_FILES=$(PRJ)$/glibc-2.1.3.patch
 
@@ -48,6 +52,10 @@ CONFIGURE_ACTION=
 
 BUILD_DIR=posix
 BUILD_ACTION=dmake $(MFLAGS) $(CALLMACROS)
+.ELSE
+@all:
+	@echo "Nothing to do here."
+.ENDIF
 
 # --- Targets ------------------------------------------------------
 
diff --git idlc/source/preproc/getopt.c idlc/source/preproc/getopt.c
deleted file mode 100644
index a8ee22a..0000000
--- idlc/source/preproc/getopt.c
+++ /dev/null
@@ -1,94 +0,0 @@
-/*************************************************************************
- *
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- * 
- * Copyright 2000, 2010 Oracle and/or its affiliates.
- *
- * OpenOffice.org - a multi-platform office productivity suite
- *
- * This file is part of OpenOffice.org.
- *
- * OpenOffice.org is free software: you can redistribute it and/or modify
- * it under the terms of the GNU Lesser General Public License version 3
- * only, as published by the Free Software Foundation.
- *
- * OpenOffice.org is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU Lesser General Public License version 3 for more details
- * (a copy is included in the LICENSE file that accompanied this code).
- *
- * You should have received a copy of the GNU Lesser General Public License
- * version 3 along with OpenOffice.org.  If not, see
- * <http://www.openoffice.org/license.html>
- * for a copy of the LGPLv3 License.
- *
- ************************************************************************/
-
-#include	<stdio.h>
-#include    <string.h>
-
-#define EPR                 fprintf(stderr,
-#define ERR(str, chr)       if(opterr) { EPR "%s%c\n", str, chr); }
-
-int opterr = 1;
-int optind = 1;
-int optopt;
-char *optarg;
-
-int
-    cppgetopt(int argc, char *const argv[], const char *opts)
-{
-    static int sp = 1;
-    register int c;
-    register char *cp;
-
-    if (sp == 1)
-    {
-        if (optind >= argc ||
-            argv[optind][0] != '-' || argv[optind][1] == '\0')
-            return -1;
-        else
-            if (strcmp(argv[optind], "--") == 0)
-            {
-                optind++;
-                return -1;
-            }
-    }
-    optopt = c = argv[optind][sp];
-    if (c == ':' || (cp = strchr(opts, c)) == 0)
-    {
-        ERR(": illegal option -- ", c);
-        if (argv[optind][++sp] == '\0')
-        {
-            optind++;
-            sp = 1;
-        }
-        return '?';
-    }
-    if (*++cp == ':')
-    {
-        if (argv[optind][sp + 1] != '\0')
-            optarg = &argv[optind++][sp + 1];
-        else
-            if (++optind >= argc)
-            {
-                ERR(": option requires an argument -- ", c);
-                sp = 1;
-                return '?';
-            }
-            else
-                optarg = argv[optind++];
-        sp = 1;
-    }
-    else
-    {
-        if (argv[optind][++sp] == '\0')
-        {
-            sp = 1;
-            optind++;
-        }
-        optarg = 0;
-    }
-    return c;
-}
diff --git idlc/source/preproc/makefile.mk idlc/source/preproc/makefile.mk
index 7347f81..f65f37e 100644
--- idlc/source/preproc/makefile.mk
+++ idlc/source/preproc/makefile.mk
@@ -43,7 +43,6 @@ LIBSALCPPRT=$(0)
 OBJFILES=   \
             $(OBJ)$/cpp.obj	\
             $(OBJ)$/eval.obj	\
-            $(OBJ)$/getopt.obj	\
             $(OBJ)$/include.obj	\
             $(OBJ)$/lex.obj	\
             $(OBJ)$/macro.obj	\
diff --git idlc/source/preproc/nlist.c idlc/source/preproc/nlist.c
index e1b3089..1fde3ce 100644
--- idlc/source/preproc/nlist.c
+++ idlc/source/preproc/nlist.c
@@ -29,9 +29,6 @@
 #include <string.h>
 #include "cpp.h"
 
-extern int cppgetopt(int, char *const *, const char *);
-extern char *optarg;
-extern int optind;
 extern int Cplusplus;
 Nlist *kwdefined;
 char wd[128];
diff --git idlc/source/preproc/unix.c idlc/source/preproc/unix.c
index fae4359..215161e 100644
--- idlc/source/preproc/unix.c
+++ idlc/source/preproc/unix.c
@@ -39,9 +39,7 @@
 
 #include "cpp.h"
 
-extern int cppgetopt(int, char *const *, const char *);
-extern char *optarg, rcsid[];
-extern int optind;
+extern char rcsid[];
 
 int Pflag = 0;                          /* print no line information */
 int Iflag = 0;							/* print includes */
@@ -62,7 +60,7 @@ void
     Tokenrow tr;
 
     setup_kwtab();
-    while ((c = cppgetopt(argc, argv, "NOPV:I:D:U:F:A:X:u:l:+")) != -1)
+    while ((c = getopt(argc, argv, "NOPV:I:D:U:F:A:X:u:l:+")) != -1)
         switch (c)
         {
             case 'N':
diff --git set_soenv.in set_soenv.in
index 4f05db1..51ca48d 100644
--- set_soenv.in
+++ set_soenv.in
@@ -1932,6 +1932,9 @@ ToFile( "SYSTEM_HUNSPELL",   "@SYSTEM_HUNSPELL@",  "e" );
 ToFile( "HUNSPELL_CFLAGS",   "@HUNSPELL_CFLAGS@",  "e" );
 ToFile( "HUNSPELL_LIBS",     "@HUNSPELL_LIBS@",    "e" );
 ToFile( "SYSTEM_LPSOLVE",    "@SYSTEM_LPSOLVE@",   "e" );
+ToFile( "HAVE_GETOPT",       "@HAVE_GETOPT@",      "e" );
+ToFile( "HAVE_READDIR_R",    "@HAVE_READDIR_R@",   "e" );
+ToFile( "SYSTEM_GLIBC",      "@SYSTEM_GLIBC@",     "e" );
 ToFile( "SYSTEM_HYPH",       "@SYSTEM_HYPH@",      "e" );
 ToFile( "HYPHEN_LIB",        "@HYPHEN_LIB@",       "e" );
 ToFile( "SYSTEM_MYTHES",     "@SYSTEM_MYTHES@",    "e" );
diff --git soltools/cpp/_getopt.c soltools/cpp/_getopt.c
deleted file mode 100644
index 3b1b183..0000000
--- soltools/cpp/_getopt.c
+++ /dev/null
@@ -1,71 +0,0 @@
-#include    <stdio.h>
-#include    <string.h>
-
-#define EPR                 fprintf(stderr,
-#define ERR(str, chr)       if(opterr) { EPR "%s%c\n", str, chr); }
-
-int opterr = 1;
-int optind = 1;
-int optopt;
-char *optarg;
-
-int
-    stgetopt(int argc, char *const argv[], const char *opts)
-{
-    static int sp = 1;
-    register int c;
-    register char *cp;
-
-    if (sp == 1)
-    {
-        if (optind >= argc ||
-            argv[optind][0] != '-' || argv[optind][1] == '\0')
-            return -1;
-        else if (strcmp(argv[optind], "--") == 0)
-            {
-                optind++;
-                return -1;
-            } 
-        else if (strcmp(argv[optind], "-isysroot") == 0) 
-            {
-                // skip Mac OS X SDK selection flags
-                optind++; optind++;
-            }
-    }
-    optopt = c = argv[optind][sp];
-    if (c == ':' || (cp = strchr(opts, c)) == 0)
-    {
-        ERR(": illegal option -- ", c);
-        if (argv[optind][++sp] == '\0')
-        {
-            optind++;
-            sp = 1;
-        }
-        return '?';
-    }
-    if (*++cp == ':')
-    {
-        if (argv[optind][sp + 1] != '\0')
-            optarg = &argv[optind++][sp + 1];
-        else
-            if (++optind >= argc)
-            {
-                ERR(": option requires an argument -- ", c);
-                sp = 1;
-                return '?';
-            }
-            else
-                optarg = argv[optind++];
-        sp = 1;
-    }
-    else
-    {
-        if (argv[optind][++sp] == '\0')
-        {
-            sp = 1;
-            optind++;
-        }
-        optarg = 0;
-    }
-    return c;
-}
diff --git soltools/cpp/_nlist.c soltools/cpp/_nlist.c
index 38b8c7a..edef14b 100644
--- soltools/cpp/_nlist.c
+++ soltools/cpp/_nlist.c
@@ -3,9 +3,6 @@
 #include <string.h>
 #include "cpp.h"
 
-extern int stgetopt(int, char *const *, const char *);
-extern char *optarg;
-extern int optind;
 extern int Cplusplus;
 Nlist *kwdefined;
 char wd[128];
diff --git soltools/cpp/_unix.c soltools/cpp/_unix.c
index 627a29f..7c7df2a 100644
--- soltools/cpp/_unix.c
+++ soltools/cpp/_unix.c
@@ -12,9 +12,7 @@
 
 #include "cpp.h"
 
-extern int stgetopt(int, char *const *, const char *);
-extern char *optarg, rcsid[];
-extern int optind;
+extern char rcsid[];
 
 int Pflag = 0;                          /* print no line information */
 int Iflag = 0;							/* print includes */
@@ -36,7 +34,7 @@ void
     Tokenrow tr;
 
     setup_kwtab();
-    while ((c = stgetopt(argc, argv, "NOPV:I:D:U:F:A:X:u:l:+")) != -1)
+    while ((c = getopt(argc, argv, "NOPV:I:D:U:F:A:X:u:l:+")) != -1)
         switch (c)
         {
             case 'N':
diff --git soltools/cpp/makefile.mk soltools/cpp/makefile.mk
index 818c270..5143e01 100644
--- soltools/cpp/makefile.mk
+++ soltools/cpp/makefile.mk
@@ -45,7 +45,6 @@ LIBSALCPPRT=$(0)
 OBJFILES= \
     $(OBJ)$/_cpp.obj		\
     $(OBJ)$/_eval.obj 	\
-    $(OBJ)$/_getopt.obj	\
     $(OBJ)$/_include.obj \
     $(OBJ)$/_lex.obj 	\
     $(OBJ)$/_macro.obj 	\
diff --git soltools/javadep/javadep.c soltools/javadep/javadep.c
index 6e61a33..6c43ef3 100644
--- soltools/javadep/javadep.c
+++ soltools/javadep/javadep.c
@@ -138,13 +138,6 @@ void    usage(void);
 void    err_quit(const char *, ...);
 void    silent_quit(void);
 
-/* poor man's getopt() */
-int     simple_getopt(char *pargv[], const char *poptstring);
-char    *optarg = NULL;
-int     optind  = 1;
-int     optopt  = 0;
-int     opterr  = 0;
-
 uint8
 read_uint8(const file_t *pfile)
 {
@@ -731,45 +724,6 @@ usage()
             pprogname);
 }
 
-/* my very simple minded implementation of getopt()
- * it's to sad that getopt() is not available everywhere
- * note: this is not a full POSIX conforming getopt()
- */
-int simple_getopt(char *pargv[], const char *poptstring)
-{
-    char *parg = pargv[optind];
-
-    /* skip all response file arguments */
-    if ( parg ) {
-        while ( *parg == '@' )
-            parg = pargv[++optind];
-        
-        if ( parg[0] == '-' && parg[1] != '\0' ) {
-            char *popt;
-            int c = parg[1];
-            if ( (popt = strchr(poptstring, c)) == NULL ) {
-                optopt = c;
-                if ( opterr )
-                    fprintf(stderr, "Unknown option character `\\x%x'.\n", optopt);
-                return '?';
-            }
-            if ( *(++popt) == ':') {
-                if ( parg[2] != '\0' ) {
-                    optarg = ++parg;
-                } else {
-                    optarg = pargv[++optind];
-                }
-            } else {
-                optarg = NULL;
-            }
-            ++optind;
-            return c;
-        }
-    }
-    return -1;
-}
-
-
 int CDECL
 main(int argc, char *argv[])
 {
@@ -817,7 +771,7 @@ main(int argc, char *argv[])
     opterr = 0;
     pincs = allocate_growable();
 
-    while( (c = simple_getopt(pall_argv, ":i:I:s:S:o:OhHvV")) != -1 ) {
+    while( (c = getopt(nall_argc, pall_argv, ":i:I:s:S:o:OhHvV")) != -1 ) {
         switch(c) {
             case 'i':
             case 'I':
diff --git tools/bootstrp/rscdep.cxx tools/bootstrp/rscdep.cxx
index 612b854..eb6ff84 100644
--- tools/bootstrp/rscdep.cxx
+++ tools/bootstrp/rscdep.cxx
@@ -70,15 +70,6 @@ void RscHrcDep::Execute()
 
 //static String aDelim;
 
-/* poor man's getopt() */
-int     simple_getopt(char *argv[], const char *optstring);
-#if defined(WNT) || defined(OS2)
-static char	*optarg = NULL;
-static int	optind = 1; 
-static int	optopt = 0; 
-static int	opterr = 0; 
-#endif
-
 SAL_IMPLEMENT_MAIN_WITH_ARGS( argc, argv )
 {
     int c;
@@ -179,7 +170,7 @@ SAL_IMPLEMENT_MAIN_WITH_ARGS( argc, argv )
 
     while( 1 )
     {
-        c = simple_getopt( argv,
+		c = getopt( argc, argv,
         "_abcdefghi:jklmnopqrstuvwxyzABCDEFGHI:JKLMNOPQRSTUVWXYZ1234567890/-+=.\\()\"");
         if ( c == -1 )
             break;
@@ -296,41 +287,3 @@ SAL_IMPLEMENT_MAIN_WITH_ARGS( argc, argv )
     return 0;
 }
 
-/* my very simple minded implementation of getopt()
- * it's too sad that getopt() is not available everywhere
- * note: this is not a full POSIX conforming getopt()
- */
-int simple_getopt(char *argv[], const char *optstring)
-{
-    char *arg = argv[optind];
-
-    /* skip all response file arguments */
-    if ( arg ) {
-        while ( *arg == '@' )
-            arg = argv[++optind];
-        
-        if ( arg[0] == '-' && arg[1] != '\0' ) {
-            const char *popt;
-            int c = arg[1];
-            if ( (popt = strchr(optstring, c)) == NULL ) {
-                optopt = c;
-                if ( opterr )
-                    fprintf(stderr, "Unknown option character `\\x%x'.\n", optopt);
-                return '?';
-            }
-            if ( *(++popt) == ':') {
-                 if ( arg[2] != '\0' ) {
-                     optarg = ++arg;
-                 } else {
-                     optarg = argv[++optind];
-                 }
-             } else {
-                 optarg = NULL;
-             }
-             ++optind;
-             return c;
-        }
-    }
-    return -1;
-}
-
-- 
1.7.0.1

