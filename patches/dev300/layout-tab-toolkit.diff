diff --git a/toolkit/doc/layout/README b/toolkit/doc/layout/README
index 1e3737f..d7ced38 100644
--- toolkit/doc/layout/README
+++ toolkit/doc/layout/README
@@ -2,19 +2,15 @@ Layout engine for OpenOffice.org  -  Work in Progress
 
 Simple dialogs have been ported now: zoom and wordcount.
 
-Code lives in "layout" CWS.
+New code lives in "layoutdialogs" CWS or ooo-build trunk.
 
-* Ceckout layout cws.
+* Checkout layoutdialogs cws.
 
 * Configure using --enable-layout.
 
-* dmake all
+* [d]make all
 
-* dmake install DESTDIR=$(pwd)/ooo-layout/
-
-* Source refresh in workben/layout, do something like
-
-    cd toolkit/workben/layout && . ./refresh --inst .../ooo-layout/
+* [d]make install DESTDIR=$(pwd)/ooo-layout/
 
 Integration into OOo:
 
@@ -24,3 +20,5 @@ Integration into OOo:
   ./soffice.bin
 
   Start a [Writer] document and choose View/Zoom or Extra/Word count.
+
+* Also See workben/layout/README.
\ No newline at end of file
diff --git a/toolkit/doc/layout/TODO b/toolkit/doc/layout/TODO
index e6fb771..abd717c 100644
--- toolkit/doc/layout/TODO
+++ toolkit/doc/layout/TODO
@@ -107,6 +107,8 @@ grep zoom.src svx/source/dialog/localize.sdf | awk -F'\t' '{printf "%s\t%s\t%s\t
      must redo.
 *** wordcount
 grep wordcountdialog.src sw/source/ui/dialog/localize.sdf | awk -F'\t' '{printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n", "layout", "janneke\\vc\\layout-cws\\toolkit\\workben\\layout\\workben.xml", $3, "layout", $6 "_label", "", "", $8, "0", $10, $11, $12, "", $14, $15}' | sed -e 's/FL_\([A-Z]*\)_label/FL_\1_text/' -e 's/\t_label/\tDLG_WORDCOUNT_title/'s
+*** sortdlg
+grep sortdlg.src ../../../sc/source/ui/src/localize.sdf | awk -F'\t' '{printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n", "layout", "janneke\\vc\\layout-cws\\toolkit\\workben\\layout\\sort-options.xml", $3, "layout", $6 "_label", "", "", $8, "0", $10, $11, $12, "", $14, $15}' | sed -e 's/\(\(FL\|STR\)_[^\t]*\)_label/\1_text/' -e 's/\t_label/\tRID_SCDLG_SORT_title/' | grep -E '	(nl|de|en-US)	' > localize-str.sdf
 
 
 * i18n
diff --git a/toolkit/inc/layout/layout-post.hxx b/toolkit/inc/layout/layout-post.hxx
index ac74ee8..54ed610 100644
--- toolkit/inc/layout/layout-post.hxx
+++ toolkit/inc/layout/layout-post.hxx
@@ -69,12 +69,16 @@
 #undef RetryButton
 #undef SpinField
 #undef Table
+#undef TabPage
 #undef VBox
 #undef YesButton
 
 #undef ModalDialog
 #undef ModelessDialog
 #undef SfxModalDialog
+#undef SfxTabPage
+
+#undef SvxLanguageBox
 
 #undef Window
 
diff --git a/toolkit/inc/layout/layout-pre.hxx b/toolkit/inc/layout/layout-pre.hxx
index 9581604..fbbc1df 100644
--- toolkit/inc/layout/layout-pre.hxx
+++ toolkit/inc/layout/layout-pre.hxx
@@ -79,12 +79,16 @@
 #define RetryButton layout::RetryButton
 #define SpinField layout::SpinField
 #define Table layout::Table
+#define TabPage layout::TabPage
 #define VBox layout::VBox
 #define YesButton layout::YesButton
 
 #define ModalDialog Dialog
 #define ModelessDialog Dialog
 #define SfxModalDialog Dialog
+#define SfxTabPage TabPage
+
+#define SvxLanguageBox ListBox
 
 #define Window ::Window
 
diff --git a/toolkit/inc/layout/layout.hxx b/toolkit/inc/layout/layout.hxx
index 76c5f8e..62b7ffa 100644
--- toolkit/inc/layout/layout.hxx
+++ toolkit/inc/layout/layout.hxx
@@ -35,6 +35,8 @@
 #include <com/sun/star/uno/XInterface.hpp>
 #include <com/sun/star/awt/XLayoutContainer.hpp>
 #include <com/sun/star/util/Color.hpp>
+#include <i18npool/lang.h>
+#include <tools/gen.hxx>
 #include <tools/link.hxx>
 #include <tools/string.hxx>
 
@@ -47,7 +49,13 @@
 
 class Control;
 class Image;
+class SfxPoolItem;
+class SfxItemSet;
+class VCLXWindow;
 class Window;
+class TabPage;
+
+namespace com { namespace sun { namespace star { namespace awt { class XWindow; } } } }
 
 namespace layout
 {
@@ -61,7 +69,7 @@ class TOOLKIT_DLLPUBLIC Context
     ContextImpl *pImpl;
 public:
     Context( char const* pPath );
-    ~Context();
+    virtual ~Context();
     PeerHandle GetPeerHandle( char const* pId, sal_uInt32 nId = 0 ) const;
     void setToplevel( PeerHandle xToplevel );
     PeerHandle getToplevel();
@@ -90,12 +98,13 @@ protected:
     static PeerHandle CreatePeer( Window *pParent, WinBits nStyle,
                                   char const* pName);
 public:
-    PeerHandle GetPeer();
-    Context *getContext();
     DECL_GET_IMPL( Window );
     explicit Window( WindowImpl *pImpl );
     virtual ~Window();
 
+    PeerHandle GetPeer();
+    Context *getContext();
+
     void Enable( bool bEnable = true );
     inline void Disable() { Enable( false ); }
     void Show( BOOL bVisible = TRUE );
@@ -103,8 +112,17 @@ public:
     void GrabFocus();
     void FreeResource() {}
 
+    void SetParent( Window *pParent );
+    void SetParent( ::Window *pParent );
+
+    css::uno::Reference<css::awt::XWindow> GetRef();
+    VCLXWindow* GetVCLXWindow();
+    ::Window* GetWindow();
+    ::Window* GetParent();
+
     WinBits GetStyle();
     void SetStyle( WinBits nStyle );
+    void SetUpdateMode( bool /*bUpdate*/ ) { }
 };
 
 class ControlImpl;
@@ -119,7 +137,6 @@ public:
 class FixedLineImpl;
 class TOOLKIT_DLLPUBLIC FixedLine : public Control
 {
-    friend class FixedLineImpl;
     DECL_GET_IMPL( FixedLine );
     DECL_CONSTRUCTORS( FixedLine, Control, WB_HORZ );
 public:
@@ -129,7 +146,6 @@ public:
 class FixedTextImpl;
 class TOOLKIT_DLLPUBLIC FixedText : public Control
 {
-    friend class FixedTextImpl;
     DECL_GET_IMPL( FixedText );
     DECL_CONSTRUCTORS( FixedText, Control, 0 );
 public:
@@ -139,7 +155,6 @@ public:
 class FixedImageImpl;
 class TOOLKIT_DLLPUBLIC FixedImage : public Control
 {
-    friend class FixedImageImpl;
     DECL_GET_IMPL( FixedImage );
     DECL_CONSTRUCTORS( FixedImage, Control, 0 );
 public:
@@ -149,7 +164,6 @@ public:
 class FixedInfoImpl;
 class TOOLKIT_DLLPUBLIC FixedInfo : public FixedText
 {
-    friend class FixedInfoImpl;
     DECL_GET_IMPL( FixedInfo );
     DECL_CONSTRUCTORS( FixedInfo, FixedText, 0 );
 };
@@ -167,7 +181,6 @@ public:
 class ButtonImpl;
 class TOOLKIT_DLLPUBLIC Button : public Control
 {
-    friend class ButtonImpl;
     DECL_GET_IMPL( Button );
     DECL_CONSTRUCTORS( Button, Control, 0 );
 public:
@@ -285,6 +298,7 @@ public:
     void SetText( XubString const& rStr ) const;
     XubString GetText() const;
     void SetModifyHdl( Link const& rLink );
+    void SetSelection( Selection const& rSelection );
 };
 
 class MultiLineEditImpl;
@@ -412,14 +426,25 @@ public:
 
     void SetSelectHdl( Link const& rLink );
     void SetClickHdl( Link const& rLink );
+
+    void SetEntryData( USHORT/*nPos*/, void*/*pNewData*/) { }
+    void* GetEntryData( USHORT/*nPos*/) const { return 0; } 
+
+    // SvxLanguageBox
+    void SetLanguageList( INT16/*nLangList*/, bool/*bHasLangNone*/, bool /*bLangNoneIsLangAll*/= false, bool /*bCheckSpellAvail*/= false ) { }
+
+    USHORT InsertLanguage( const LanguageType/*eLangType*/, USHORT/*nPos*/= LISTBOX_APPEND ) { return 0; }
+    USHORT InsertLanguage( const LanguageType/*eLangType*/, bool/*bCheckEntry*/, USHORT /*nPos*/= LISTBOX_APPEND ) { return 0; }
+    void RemoveLanguage( const LanguageType/*eLangType*/) { }
+    void SelectLanguage( const LanguageType/*eLangType*/, bool/*bSelect*/= true) { }
+    LanguageType GetSelectLanguage() const { return 0; }
+    bool IsLanguageSelected( const LanguageType/*eLangType*/) const { return true; }
 };
 
 class DialogImpl;
 class TOOLKIT_DLLPUBLIC Dialog : public Context, public Window
 {
     DECL_GET_IMPL( Dialog );
-    void SetParent( Window *pParent );
-    void SetParent( ::Window *pParent );
 public:
     Dialog( Window *pOptParent, char const* pXMLPath, char const* pId, sal_uInt32 nId = 0 );
     Dialog( ::Window *pOptParent, char const* pXMLPath, char const* pId, sal_uInt32 nId = 0 );
@@ -428,6 +453,46 @@ public:
     void SetText( String const& rStr );
 };
 
+#define DECL_GET_WINDOW( cls ) ::cls* Get##cls()
+#define IMPL_GET_WINDOW( cls ) ::cls* cls::Get##cls() { return reinterpret_cast< ::cls*>( GetWindow() ); }
+class TabPageImpl;
+class TOOLKIT_DLLPUBLIC TabPage : public Context, public Window
+{
+    DECL_GET_IMPL( TabPage );
+public:
+    static ::Window* global_parent;
+    
+    TabPage( Window *pOptParent, char const* pXMLPath, char const* pId, sal_uInt32 nId = 0, SfxItemSet const* set = 0 );
+    TabPage( ::Window *pOptParent, char const* pXMLPath, char const* pId, sal_uInt32 nId = 0, SfxItemSet const* set = 0 );
+    ~TabPage();
+    //DECL_GET_WINDOW( TabPage );
+    ::TabPage* GetTabPage();
+    virtual void ActivatePage();
+    virtual void DeactivatePage();
+#if 0
+};
+
+//FIXME: move to sfx2 or svtools layout.hxx
+class TOOLKIT_DLLPUBLIC SfxTabPage : public TabPage
+{
+public:
+    SfxTabPage( Window *pOptParent, char const* pXMLPath, char const* pId, sal_uInt32 nId = 0, SfxItemSet const* set = 0 );
+    SfxTabPage( ::Window *pOptParent, char const* pXMLPath, char const* pId, sal_uInt32 nId = 0, SfxItemSet const* set = 0 );
+#endif
+    // SfxTabPage...
+    enum PageAction { KEEP_PAGE, LEAVE_PAGE, REFRESH_SET };
+
+    bool bHasExchangeSupport;
+    bool HasExchangeSupport() { return bHasExchangeSupport; }
+    SfxItemSet const* pSet;
+    SfxItemSet const& GetItemSet() const { return *pSet; }
+    virtual void Reset( SfxItemSet const& r );
+    void SetExchangeSupport( bool exchangeSupport = true ) { bHasExchangeSupport = exchangeSupport; }
+    //static const SfxPoolItem* GetItem( const SfxItemSet& rSet, USHORT nSlot );
+	virtual void ActivatePage( SfxItemSet const& ) { }
+	virtual int DeactivatePage( SfxItemSet* ) { return LEAVE_PAGE; }
+};
+
 class ProgressBarImpl;
 class TOOLKIT_DLLPUBLIC ProgressBar : public Control
 {
@@ -516,7 +581,6 @@ public:
 class PluginImpl;
 class TOOLKIT_DLLPUBLIC Plugin : public Control
 {
-    friend class PluginImpl;
     DECL_GET_IMPL( Plugin );
     //DECL_CONSTRUCTORS( Plugin, Control, 0 );
 public:
@@ -524,6 +588,18 @@ public:
     Plugin( Context *pCtx, char const* pId, ::Control *plugin );
 };
 
+class LocalizedStringImpl;
+class TOOLKIT_DLLPUBLIC LocalizedString : public Window
+{
+    DECL_GET_IMPL( LocalizedString );
+public:
+    LocalizedString( Context *pCtx, char const* pId );
+
+    String operator =( String const& );
+    operator String();
+//    operator String const&() const;
+};
+
 } // end namespace layout
 
 #endif /* _LAYOUT_HXX */
diff --git a/toolkit/source/awt/makefile.mk b/toolkit/source/awt/makefile.mk
index a3798a5..8a851c5 100644
--- toolkit/source/awt/makefile.mk
+++ toolkit/source/awt/makefile.mk
@@ -78,7 +78,8 @@ SLOFILES=   \
 	$(SLO)/vclxplugin.obj\
 	$(SLO)/vclxscroller.obj\
 	$(SLO)/vclxsplitter.obj\
-	$(SLO)/vclxtabcontrol.obj
+	$(SLO)/vclxtabcontrol.obj\
+	$(SLO)/vclxtabpage.obj
 
 SRS1NAME=$(TARGET)
 SRC1FILES=\
diff --git a/toolkit/source/awt/vclxbutton.cxx b/toolkit/source/awt/vclxbutton.cxx
index f08e4f5..1740dca 100644
--- toolkit/source/awt/vclxbutton.cxx
+++ toolkit/source/awt/vclxbutton.cxx
@@ -31,7 +31,7 @@
 
 #include "vclxbutton.hxx"
 
-#include "layout/layoutcore.hxx"
+#include <layout/layoutcore.hxx>
 #include <com/sun/star/awt/ImagePosition.hpp>
 #include <vcl/button.hxx>
 
diff --git a/toolkit/source/awt/vclxplugin.cxx b/toolkit/source/awt/vclxplugin.cxx
index 4c3091a..f17552a 100644
--- toolkit/source/awt/vclxplugin.cxx
+++ toolkit/source/awt/vclxplugin.cxx
@@ -36,10 +36,8 @@
 #include "vclxplugin.hxx"
 
 #include <com/sun/star/awt/PosSize.hpp>
+#include <toolkit/helper/convert.hxx>
 #include <toolkit/helper/property.hxx>
-
-#include "forward.hxx"
-
 #include <vcl/ctrl.hxx>
 
 namespace layoutimpl
@@ -81,10 +79,7 @@ awt::Size SAL_CALL VCLXPlugin::getMinimumSize()
 {
     ::vos::OClearableGuard aGuard( GetMutex() );
     if ( mpPlugin )
-    {
-        Size s = mpPlugin->GetSizePixel();
-        return awt::Size( s.Width(), s.Height() );
-    }
+        return AWTSize( mpPlugin->GetSizePixel() );
     return awt::Size();
 }
 
diff --git a/toolkit/source/awt/vclxsplitter.cxx b/toolkit/source/awt/vclxsplitter.cxx
index 66662f6..f2efbb3 100644
--- toolkit/source/awt/vclxsplitter.cxx
+++ toolkit/source/awt/vclxsplitter.cxx
@@ -78,8 +78,8 @@ VCLXSplitter::createChildProps( Box_Base::ChildData *pData )
 DBG_NAME( VCLXSplitter );
 
 VCLXSplitter::VCLXSplitter( bool bHorizontal )
-  : VCLXWindow()
-    , Box_Base()
+    : VCLXWindow()
+    , Box_Base()
 {
     DBG_CTOR( VCLXSplitter, NULL );
     mnHandleRatio = 0.5;
diff --git a/toolkit/source/awt/vclxtabpage.cxx b/toolkit/source/awt/vclxtabpage.cxx
new file mode 100644
index 0000000..4a1c127
--- /dev/null
+++ toolkit/source/awt/vclxtabpage.cxx
@@ -0,0 +1,140 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 51 Franklin Street, 5th Floor, Boston,
+ *    MA  02110-1301  USA
+ *
+ ************************************************************************/
+
+#include "vclxtabpage.hxx"
+#include "forward.hxx"
+
+#include <com/sun/star/awt/PosSize.hpp>
+#include <toolkit/helper/convert.hxx>
+#include <vcl/tabpage.hxx>
+#include <vcl/tabctrl.hxx>
+
+namespace layoutimpl
+{
+
+using namespace ::com::sun::star;
+
+// XInterface
+IMPLEMENT_FORWARD_XINTERFACE2( VCLXTabPage, VCLXWindow, Bin );
+
+// XTypeProvider
+IMPLEMENT_FORWARD_XTYPEPROVIDER1( VCLXTabPage, VCLXWindow );
+
+VCLXTabPage::VCLXTabPage( Window *p )
+    : VCLXWindow()
+    , Bin()
+    , bRealized( false )
+{
+    /* FIXME: before Window is set, setLabel, setProperty->setImage
+     * are silent no-ops.  */
+    p->SetComponentInterface( this );
+}
+
+VCLXTabPage::~VCLXTabPage()
+{
+}
+
+void SAL_CALL VCLXTabPage::dispose() throw(uno::RuntimeException)
+{
+    {
+        ::vos::OGuard aGuard( GetMutex() );
+        
+        lang::EventObject aDisposeEvent;
+        aDisposeEvent.Source = *this;
+    }
+    
+    VCLXWindow::dispose();
+}
+
+void SAL_CALL VCLXTabPage::allocateArea( awt::Rectangle const& area )
+    throw (uno::RuntimeException)
+{
+    awt::Size curSize = getSize();
+    awt::Size reqSize = getMinimumSize();
+    reqSize.Height = getHeightForWidth( area.Width );
+
+    if ( curSize.Width > 0 && curSize.Height > 0
+         && reqSize.Width > curSize.Width )
+        reqSize.Width = curSize.Width;
+    if ( curSize.Width > 0 && curSize.Height > 0
+         && reqSize.Height > curSize.Height )
+        reqSize.Height = curSize.Height;
+
+    // FIXME: missing destructor?
+    if ( !GetWindow() )
+        return;
+
+    Size window = GetWindow()->GetSizePixel();
+    Size parent = GetWindow()->GetParent()->GetSizePixel();
+
+    Point pos = GetWindow()->GetPosPixel();
+    OSL_TRACE ("%s: curpos: %d ,%d", __FUNCTION__, pos.X(), pos.Y() );
+
+    OSL_TRACE ("%s: cursize: %d ,%d", __FUNCTION__, curSize.Width, curSize.Height );
+    OSL_TRACE ("%s: area: %d, %d", __FUNCTION__, area.Width, area.Height );
+    OSL_TRACE ("%s: reqSize: %d, %d", __FUNCTION__, reqSize.Width, reqSize.Height );
+    OSL_TRACE ("%s: parent: %d, %d", __FUNCTION__, parent.Width(), parent.Height() );
+    OSL_TRACE ("%s: window: %d, %d", __FUNCTION__, window.Width(), window.Height() );
+
+    if ( !bRealized )
+    {
+        setPosSize( 0, 0, reqSize.Width, reqSize.Height, awt::PosSize::SIZE );
+        bRealized = true;
+    }
+    else
+    {
+        if ( reqSize.Width > curSize.Width )
+            setPosSize( 0, 0, reqSize.Width, 0, awt::PosSize::WIDTH );
+        if ( reqSize.Height > curSize.Height )
+            setPosSize( 0, 0, 0, reqSize.Height, awt::PosSize::HEIGHT );
+    }
+
+    awt::Size newSize = getSize();
+    OSL_TRACE ("%s: newSize: %d, %d", __FUNCTION__, newSize.Width, newSize.Height );
+    maAllocation.Width = newSize.Width;
+    maAllocation.Height = newSize.Height;
+
+    Bin::allocateArea( maAllocation );
+}
+
+awt::Size SAL_CALL VCLXTabPage::getMinimumSize()
+    throw(uno::RuntimeException)
+{
+    ::vos::OGuard aGuard( GetMutex() );
+
+    return Bin::getMinimumSize();
+}
+
+} // namespace layoutimpl
diff --git a/toolkit/source/awt/vclxtabpage.hxx b/toolkit/source/awt/vclxtabpage.hxx
new file mode 100644
index 0000000..d6e3032
--- /dev/null
+++ toolkit/source/awt/vclxtabpage.hxx
@@ -0,0 +1,80 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 51 Franklin Street, 5th Floor, Boston,
+ *    MA  02110-1301  USA
+ *
+ ************************************************************************/
+
+#ifndef LAYOUT_AWT_VCLXTABPAGE_HXX
+#define LAYOUT_AWT_VCLXTABPAGE_HXX
+
+#include <toolkit/awt/vclxwindow.hxx>
+#include <layout/bin.hxx>
+#include <comphelper/uno3.hxx>
+
+namespace layoutimpl
+{
+
+namespace css = ::com::sun::star;
+
+class VCLXTabPage : public VCLXWindow
+                  , public Bin
+{
+    bool bRealized;
+public:
+    VCLXTabPage( Window *p );
+
+    // XInterface
+    DECLARE_XINTERFACE()
+    
+    // XTypeProvider
+    DECLARE_XTYPEPROVIDER()
+
+protected:
+    ~VCLXTabPage();
+
+    // XComponent
+    void SAL_CALL dispose() throw(css::uno::RuntimeException);
+
+    // ::com::sun::star::awt::XLayoutContainer
+    virtual void SAL_CALL allocateArea( css::awt::Rectangle const& rArea )
+        throw (css::uno::RuntimeException);
+    virtual css::awt::Size SAL_CALL getMinimumSize()
+        throw(css::uno::RuntimeException);
+
+private:
+    VCLXTabPage( VCLXTabPage const & );
+    VCLXTabPage& operator=( VCLXTabPage const & );
+};
+
+} // namespace layoutimpl
+
+#endif /* LAYOUT_AWT_VCLXTABPAGE_HXX */
diff --git a/toolkit/source/layout/box-base.hxx b/toolkit/source/layout/box-base.hxx
index 2a20372..44e0434 100644
--- toolkit/source/layout/box-base.hxx
+++ toolkit/source/layout/box-base.hxx
@@ -87,4 +87,4 @@ public:
 
 } //  namespace layoutimpl
 
-#endif /* CORE_BOX__BASE HXX */
+#endif /* CORE_BOX_BASE HXX */
index 413c2c3..1e96643 100644
--- toolkit/source/layout/helper.cxx
+++ toolkit/source/layout/helper.cxx
@@ -36,6 +36,7 @@
 #include <com/sun/star/awt/WindowAttribute.hpp>
 #include <com/sun/star/awt/XWindow.hpp>
 #include <com/sun/star/awt/VclWindowPeerAttribute.hpp>
+#include <toolkit/awt/vclxwindow.hxx>
 #include <tools/debug.hxx>
 
 #include "proplist.hxx"
@@ -96,11 +97,12 @@ getToplevel( uno::Reference< uno::XInterface > xRef )
 
 }
 
-#include "dialogbuttonhbox.hxx"
 #include "bin.hxx"
 #include "box.hxx"
-#include "table.hxx"
+#include "dialogbuttonhbox.hxx"
 #include "flow.hxx"
+#include "localized-string.hxx"
+#include "table.hxx"
 
 namespace layoutimpl
 {
@@ -150,14 +152,31 @@ createToolkitWidget( uno::Reference< awt::XToolkit > xToolkit,
     {
         desc.Type = awt::WindowClass_SIMPLE;
 
+#if 0
         // top container -- a wrapper for framewindow -- is de-coupled
         // from awt::XWindowPeer. So, getParent() fails at it.
-//            uno::Reference< awt::XWindowPeer > xWinParent = getParent( xParent );
-
+        uno::Reference< awt::XWindowPeer > xWinParent = getParent( xParent );
+#else
         uno::Reference< awt::XWindowPeer > xWinParent( xParent, uno::UNO_QUERY );
-
+#endif
         assert( xParent.is() );
         assert( xWinParent.is() );
+        /*
+          With the new three layer instarr/rpath feature, when
+          prepending toolkit/unxlngx6.pro/lib or $SOLARVER/lib to
+          LD_LIBRARY_PATH, VCLXWindow::GetImplementation returns 0x0
+          vclxtoolkit::ImplCreateWindow failing to create any widget;
+          although it succeeds here.
+
+          While developing, one now must copy libtlx.so to
+          $OOO_INSTALL_PREFIX/openoffice.org/basis3.0/program/libtklx.so
+          each time.
+        */
+		VCLXWindow* pParentComponent = VCLXWindow::GetImplementation( xWinParent );
+        if ( !pParentComponent )
+            throw uno::RuntimeException(
+                OUString::createFromAscii( "parent has no implementation" ),
+                uno::Reference< uno::XInterface >() );
         desc.Parent = xWinParent;
     }
 
@@ -223,6 +242,7 @@ createWidget( uno::Reference< awt::XToolkit > xToolkit,
 #else
     xPeer = createToolkitWidget( xToolkit, xParent, rName, nProps );
 #endif
+
     return xPeer;
 }
 
@@ -345,10 +365,11 @@ PropHelper::queryInterface( const ::com::sun::star::uno::Type & rType ) throw(::
 #include <awt/vclxbutton.hxx>
 #include <awt/vclxdialog.hxx>
 #include <awt/vclxfixedline.hxx>
+#include <awt/vclxplugin.hxx>
 #include <awt/vclxscroller.hxx>
 #include <awt/vclxsplitter.hxx>
 #include <awt/vclxtabcontrol.hxx>
-#include <awt/vclxplugin.hxx>
+#include <awt/vclxtabpage.hxx>
 #include <toolkit/awt/vclxtoolkit.hxx>
 #include <toolkit/awt/vclxwindow.hxx>
 #include <vcl/button.hxx>
@@ -362,6 +383,8 @@ PropHelper::queryInterface( const ::com::sun::star::uno::Type & rType ) throw(::
 namespace layoutimpl
 {
 
+TOOLKIT_DLLPUBLIC Window* global_parent;
+
 uno::Reference< awt::XLayoutConstrains > ImplCreateWindow(
     uno::Reference< uno::XInterface > xParent,
     OUString aName, long WindowAttributes )
@@ -484,6 +507,29 @@ uno::Reference< awt::XLayoutConstrains > ImplCreateWindow(
         OSL_TRACE( "%s: parent=%p (%s)\n", __FUNCTION__, pParent, typeid( *pParent ).name() );
         pNewComp = new layoutimpl::VCLXPlugin( pNewWindow, ImplGetWinBits( WindowAttributes, 0 ) );
     }
+    else if ( aName.equalsAscii( "tabpage" ) )
+    {
+        if ( !pParent )
+            pParent = layout::TabPage::global_parent;
+
+        //pNewWindow = new TabPage( pParent, ImplGetWinBits( WindowAttributes, 0 ) );
+        WindowAttributes ^= awt::WindowAttribute::SHOW;
+        WinBits nStyle = ImplGetWinBits( WindowAttributes, 0 );
+        nStyle |= WB_HIDE;
+        //nStyle |= WB_NODIALOGCONTROL;
+        //nStyle |= WB_DIALOGCONTROL;
+        //nStyle = 2147483714L;
+        OSL_TRACE( "in bits=%lu", nStyle );
+        pNewWindow = new TabPage( pParent, nStyle );
+        pNewComp = new VCLXTabPage( pNewWindow );
+    }
+    else if ( aName.equalsAscii( "string" ) )
+    {
+        // FIXME: move <string>s.text to simple map<string> in root?
+        WindowAttributes &= ~awt::WindowAttribute::SHOW;
+        pNewWindow = new Window( pParent, ImplGetWinBits( WindowAttributes, 0 ) );
+        pNewComp = new layoutimpl::LocalizedString();
+    }
 
     if ( !pNewWindow )
         return xRef;
diff --git a/toolkit/source/layout/import.cxx b/toolkit/source/layout/import.cxx
index 29788ab..47857e6 100644
--- toolkit/source/layout/import.cxx
+++ toolkit/source/layout/import.cxx
@@ -239,7 +239,7 @@ uno::Reference< xml::input::XElement > ImportContext::startRootElement(
     uno::Reference< xml::input::XAttributes > const & xAttributes )
     throw (xml::sax::SAXException, uno::RuntimeException)
 {
-    if (XMLNS_LAYOUT_UID != nUid)
+    if ( XMLNS_LAYOUT_UID != nUid )
         throw xml::sax::SAXException(
             OUString( RTL_CONSTASCII_USTRINGPARAM( "invalid namespace!" ) ),
             uno::Reference< uno::XInterface >(), uno::Any() );
diff --git a/toolkit/source/layout/localized-string.cxx b/toolkit/source/layout/localized-string.cxx
new file mode 100644
index 0000000..9bc9df3
--- /dev/null
+++ toolkit/source/layout/localized-string.cxx
@@ -0,0 +1,87 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 51 Franklin Street, 5th Floor, Boston,
+ *    MA  02110-1301  USA
+ *
+ ************************************************************************/
+
+#include "localized-string.hxx"
+
+#include <toolkit/helper/property.hxx>
+#include <vcl/window.hxx>
+
+namespace layoutimpl
+{
+
+namespace css = ::com::sun::star;
+using namespace css;
+using rtl::OUString;
+
+LocalizedString::LocalizedString()
+    : VCLXWindow()
+{
+}
+
+void LocalizedString::ImplGetPropertyIds( std::list< sal_uInt16 > &ids )
+{
+    PushPropertyIds( ids, BASEPROPERTY_TEXT, 0);
+    VCLXWindow::ImplGetPropertyIds( ids );
+}
+
+// XInterface
+uno::Any LocalizedString::queryInterface( uno::Type const& rType )
+    throw(uno::RuntimeException)
+{
+    uno::Any aRet = ::cppu::queryInterface( rType,
+                                            SAL_STATIC_CAST( awt::XFixedText*, this ) );
+    return (aRet.hasValue() ? aRet : VCLXWindow::queryInterface( rType ));
+}
+
+void LocalizedString::setText( OUString const& s )
+    throw(uno::RuntimeException)
+{
+    ::vos::OGuard aGuard( GetMutex() );
+
+    if ( Window *w = GetWindow() )
+        return w->SetText( s );
+}
+
+OUString LocalizedString::getText()
+    throw(uno::RuntimeException)
+{
+    ::vos::OGuard aGuard( GetMutex() );
+
+    if ( Window *w = GetWindow() )
+        return w->GetText();
+    return OUString();
+}
+
+} // namespace layoutimpl
diff --git a/toolkit/source/layout/localized-string.hxx b/toolkit/source/layout/localized-string.hxx
new file mode 100644
index 0000000..bbb3896
--- /dev/null
+++ toolkit/source/layout/localized-string.hxx
@@ -0,0 +1,84 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile$
+ *
+ *  $Revision$
+ *
+ *  last change: $Author$ $Date$
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 51 Franklin Street, 5th Floor, Boston,
+ *    MA  02110-1301  USA
+ *
+ ************************************************************************/
+
+#ifndef CORE_LOCALIZED_STRING_HXX
+#define CORE_LOCALIZED_STRING_HXX
+
+#include <com/sun/star/awt/XFixedText.hpp>
+#include <toolkit/awt/vclxwindow.hxx>
+
+namespace layoutimpl
+{
+namespace css = ::com::sun::star;
+
+// FIXME: misuse XFixedText interface for simple string
+class LocalizedString :	public css::awt::XFixedText
+                      , public VCLXWindow
+{
+public:
+    LocalizedString();
+
+	// css::uno::XInterface
+    css::uno::Any SAL_CALL queryInterface( css::uno::Type const& rType )
+        throw(css::uno::RuntimeException);
+    void SAL_CALL acquire() throw() { OWeakObject::acquire(); }
+    void SAL_CALL release() throw() { OWeakObject::release(); }
+
+    // css::awt::XFixedText
+    void SAL_CALL setText( ::rtl::OUString const& s )
+        throw(css::uno::RuntimeException);
+    ::rtl::OUString SAL_CALL getText()
+        throw(css::uno::RuntimeException);
+    void SAL_CALL setAlignment( sal_Int16 )
+        throw(css::uno::RuntimeException) { } 
+    sal_Int16 SAL_CALL getAlignment()
+        throw(css::uno::RuntimeException) { return 0; }
+
+    // css::awt::XLayoutConstrains
+    virtual css::awt::Size SAL_CALL getMinimumSize()
+        throw(css::uno::RuntimeException) { return css::awt::Size( 0, 0 ); }
+    css::awt::Size SAL_CALL getPreferredSize()
+        throw(css::uno::RuntimeException) { return getMinimumSize(); }
+    css::awt::Size SAL_CALL calcAdjustedSize( css::awt::Size const& size )
+        throw(css::uno::RuntimeException) { return size; }
+
+    static void ImplGetPropertyIds( std::list< sal_uInt16 > &ids );
+    virtual void GetPropertyIds( std::list< sal_uInt16 > &ids )
+    { return ImplGetPropertyIds( ids ); }
+};
+
+} // namespace layoutimpl
+
+#endif /* CORE_LOCALIZED_STRING_HXX */
diff --git a/toolkit/source/layout/makefile.mk b/toolkit/source/layout/makefile.mk
index c89f0be..d62b9e1 100644
--- toolkit/source/layout/makefile.mk
+++ toolkit/source/layout/makefile.mk
@@ -55,6 +55,7 @@ SLOFILES= \
 	$(SLO)$/flow.obj \
 	$(SLO)$/helper.obj \
 	$(SLO)$/import.obj \
+	$(SLO)$/localized-string.obj \
 	$(SLO)$/proplist.obj \
 	$(SLO)$/root.obj \
 	$(SLO)$/table.obj \
diff --git a/toolkit/source/layout/proplist.cxx b/toolkit/source/layout/proplist.cxx
index 6dba3b4..c16d979 100644
--- toolkit/source/layout/proplist.cxx
+++ toolkit/source/layout/proplist.cxx
@@ -251,17 +251,17 @@ setProperties( uno::Reference< uno::XInterface > const& xPeer,
     if ( !prophlp::canHandleProps( xPeer ) )
     {
         DBG_ERROR( "Error: setProperties - bad handle ignoring props:\n" );
-        PropList::const_iterator cur;
-        for ( cur = rProps.begin(); cur != rProps.end(); cur++ )
+        for ( PropList::const_iterator it = rProps.begin(); it != rProps.end();
+              it++ )
         {
-            DBG_ERROR1( "%s=%s\n", OUSTRING_CSTR( cur->first ), OUSTRING_CSTR( cur->second ) );
+            DBG_ERROR2( "%s=%s\n", OUSTRING_CSTR( it->first ), OUSTRING_CSTR( it->second ) );
         }
         return;
     }
 
-    PropList::const_iterator cur;
-    for ( cur = rProps.begin(); cur != rProps.end(); cur++ )
-        setProperty( xPeer, cur->first, cur->second );
+    for ( PropList::const_iterator it = rProps.begin(); it != rProps.end();
+          it++ )
+        setProperty( xPeer, it->first, it->second );
 }
 
 void
@@ -349,7 +349,7 @@ static const AttributesMap attribsMap[] =
     { "spin",         awt::VclWindowPeerAttribute::SPIN,         false },
     { "vscroll",      awt::VclWindowPeerAttribute::VSCROLL,      false },
 
-    // cutting on OK, YES_NO_CANCEL and related obscure attributes...
+    // cutting on OK, YES_NO_CANCEL and related obsite attributes...
 };
 static const int attribsMapLen = sizeof( attribsMap ) / sizeof( AttributesMap );
 
@@ -381,10 +381,8 @@ long getAttribute( const OUString &rName, bool bTopWindow )
 void propsFromAttributes( const uno::Reference<xml::input::XAttributes> & xAttributes,
                           PropList &rProps, sal_Int32 nNamespace )
 {
-
-
     sal_Int32 nAttrs = xAttributes->getLength();
     for ( sal_Int32 i = 0; i < nAttrs; i++ )
     {
         if ( nNamespace != xAttributes->getUidByIndex( i ) )
             continue;
@@ -401,15 +399,15 @@ void propsFromAttributes( const uno::Reference<xml::input::XAttributes> & xAttri
 bool
 findAndRemove( const char *pAttr, PropList &rProps, OUString &rValue )
 {
-    PropList::iterator cur;
+    PropList::iterator it;
     OUString aName = OUString::createFromAscii( pAttr );
 
-    for ( cur = rProps.begin(); cur != rProps.end(); cur++ )
+    for ( it = rProps.begin(); it != rProps.end(); it++ )
     {
-        if ( cur->first.equalsIgnoreAsciiCase( aName ) )
+        if ( it->first.equalsIgnoreAsciiCase( aName ) )
         {
-            rValue = cur->second;
-            rProps.erase( cur );
+            rValue = it->second;
+            rProps.erase( it );
             return true;
         }
     }
diff --git a/toolkit/source/layout/proplist.hxx b/toolkit/source/layout/proplist.hxx
index 64923b0..123de61 100644
--- toolkit/source/layout/proplist.hxx
+++ toolkit/source/layout/proplist.hxx
@@ -58,8 +58,18 @@ bool findAndRemove( const char *pAttr, PropList &rProps, rtl::OUString &rValue);
 
 }
 
-// Convert a rtl::OUString to a byte string.
+#if !OUSTRING_CSTR_PARANOIA
 #define OUSTRING_CSTR( str ) \
     rtl::OUStringToOString( str, RTL_TEXTENCODING_ASCII_US ).getStr()
+#else
+
+inline char const* OUSTRING_CSTR( rtl::OUString const& str )
+{
+    rtl::OString *leak
+        = new rtl::OString (rtl::OUStringToOString (str, RTL_TEXTENCODING_ASCII_US));
+    return leak->getStr();
+}
+
+#endif
 
 #endif // CORE_PROPLIST_HXX
diff --git a/toolkit/source/layout/root.cxx b/toolkit/source/layout/root.cxx
index 95c19c1..a50f42d 100644
--- toolkit/source/layout/root.cxx
+++ toolkit/source/layout/root.cxx
@@ -101,11 +101,12 @@ void ShowMessageBox( uno::Reference< lang::XMultiServiceFactory > const& xFactor
         xMessageBox->execute();
     //FIXME: exceptions not caught and printed at top level??
     //else
-    printf( "%s\n", OUSTRING_CSTR( aMessage ) );
+    //printf( "%s\n", OUSTRING_CSTR( aMessage ) );
 }
 
 void LayoutRoot::error( OUString const& message )
 {
+    printf( "%s\n", OUSTRING_CSTR( message ) );
     ShowMessageBox( mxFactory, mxToolkit,
                     OUString::createFromAscii( "Fatal error" ),
                     message );
diff --git a/toolkit/source/vclcompat/wbutton.cxx b/toolkit/source/vclcompat/wbutton.cxx
index 9f348fb..5617f4f 100644
--- toolkit/source/vclcompat/wbutton.cxx
+++ toolkit/source/vclcompat/wbutton.cxx
@@ -138,7 +138,7 @@ class ButtonImpl : public ControlImpl
     }
 };
 
-void Button::SetText( const String& rStr )
+void Button::SetText( String const& rStr )
 {
     if ( !getImpl().mxButton.is() )
         return;
@@ -164,8 +164,8 @@ void Button::Click()
 {
 }
 
-DECL_GET_IMPL_IMPL( Button );
-DECL_CONSTRUCTOR_IMPLS( Button, Control, "button" );
+IMPL_GET_IMPL( Button );
+IMPL_CONSTRUCTORS( Button, Control, "button" );
 
 class PushButtonImpl : public ButtonImpl
 {
@@ -219,8 +219,8 @@ void PushButton::SetToggleHdl( const Link& rLink )
     getImpl().SetToggleHdl( rLink );
 }
 
-DECL_GET_IMPL_IMPL( PushButton );
-DECL_CONSTRUCTOR_IMPLS( PushButton, Button, "pushbutton" );
+IMPL_GET_IMPL( PushButton );
+IMPL_CONSTRUCTORS( PushButton, Button, "pushbutton" );
 
  // HACK: put every radio button into a group :/
 static std::list< RadioButtonImpl*> mpRadioGroup;
@@ -316,9 +316,9 @@ void RadioButton::SetToggleHdl( const Link& rLink )
     getImpl().SetToggleHdl( rLink );
 }
 
-DECL_GET_IMPL_IMPL( RadioButton );
+IMPL_GET_IMPL( RadioButton );
 #if 1
-DECL_CONSTRUCTOR_IMPLS( RadioButton, Button, "radiobutton" );
+IMPL_CONSTRUCTORS( RadioButton, Button, "radiobutton" );
 #else //debugging aid
 RadioButton::RadioButton( Context *pCtx, const char *pId, sal_uInt32 nId )
     : Button( new RadioButtonImpl( pCtx, pCtx->GetPeerHandle( pId, nId ), this ) )
@@ -369,8 +369,8 @@ void CheckBox::SetToggleHdl( const Link& rLink )
     getImpl().SetToggleHdl( rLink );
 }
 
-DECL_GET_IMPL_IMPL( CheckBox );
-DECL_CONSTRUCTOR_IMPLS( CheckBox, Button, "checkbox" );
+IMPL_GET_IMPL( CheckBox );
+IMPL_CONSTRUCTORS( CheckBox, Button, "checkbox" );
 
 #define BUTTON_IMPL(t, parent, response) \
     class t##Impl : public parent##Impl \
@@ -406,15 +406,15 @@ BUTTON_IMPL( ResetButton, PushButton, BUTTONID_RESET );
 BUTTON_IMPL( ApplyButton, PushButton, BUTTONID_APPLY ); /* Deprecated? */
 BUTTON_IMPL( HelpButton, PushButton, BUTTONID_HELP );
 
-DECL_CONSTRUCTOR_IMPLS( OKButton, PushButton, "okbutton" );
-DECL_CONSTRUCTOR_IMPLS( CancelButton, PushButton, "cancelbutton" );
-DECL_CONSTRUCTOR_IMPLS( YesButton, PushButton, "yesbutton" );
-DECL_CONSTRUCTOR_IMPLS( NoButton, PushButton, "nobutton" );
-DECL_CONSTRUCTOR_IMPLS( RetryButton, PushButton, "retrybutton" );
-DECL_CONSTRUCTOR_IMPLS( IgnoreButton, PushButton, "ignorebutton" );
-DECL_CONSTRUCTOR_IMPLS( ResetButton, PushButton, "resetbutton" );
-DECL_CONSTRUCTOR_IMPLS( ApplyButton, PushButton, "applybutton" );  /* Deprecated? */
-DECL_CONSTRUCTOR_IMPLS( HelpButton, PushButton, "helpbutton" );
+IMPL_CONSTRUCTORS( OKButton, PushButton, "okbutton" );
+IMPL_CONSTRUCTORS( CancelButton, PushButton, "cancelbutton" );
+IMPL_CONSTRUCTORS( YesButton, PushButton, "yesbutton" );
+IMPL_CONSTRUCTORS( NoButton, PushButton, "nobutton" );
+IMPL_CONSTRUCTORS( RetryButton, PushButton, "retrybutton" );
+IMPL_CONSTRUCTORS( IgnoreButton, PushButton, "ignorebutton" );
+IMPL_CONSTRUCTORS( ResetButton, PushButton, "resetbutton" );
+IMPL_CONSTRUCTORS( ApplyButton, PushButton, "applybutton" );  /* Deprecated? */
+IMPL_CONSTRUCTORS( HelpButton, PushButton, "helpbutton" );
 
 class AdvancedButtonImpl : public PushButtonImpl
 {
@@ -547,8 +547,8 @@ void AdvancedButton::RemoveSimple( Window* w )
     getImpl().RemoveSimple( w );
 }
 
-DECL_CONSTRUCTOR_IMPLS( AdvancedButton, PushButton, "advancedbutton" );
-DECL_GET_IMPL_IMPL( AdvancedButton );
+IMPL_CONSTRUCTORS( AdvancedButton, PushButton, "advancedbutton" );
+IMPL_GET_IMPL( AdvancedButton );
 
 
 class MoreButtonImpl : public AdvancedButtonImpl
@@ -566,8 +566,8 @@ public:
 
 // TODO
 //BUTTON_IMPL( MoreButton, PushButton, 0 );
-DECL_CONSTRUCTOR_IMPLS( MoreButton, AdvancedButton, "morebutton" );
-DECL_GET_IMPL_IMPL( MoreButton );
+IMPL_CONSTRUCTORS( MoreButton, AdvancedButton, "morebutton" );
+IMPL_GET_IMPL( MoreButton );
 
 void MoreButton::AddWindow( Window* w )
 {
diff --git a/toolkit/source/vclcompat/wfield.cxx b/toolkit/source/vclcompat/wfield.cxx
index a5e97fb..015cf63 100644
--- toolkit/source/vclcompat/wfield.cxx
+++ toolkit/source/vclcompat/wfield.cxx
@@ -83,7 +83,14 @@ class EditImpl : public ControlImpl,
     }
 };
 
-void Edit::SetText( const XubString& rStr ) const
+void Edit::SetSelection( Selection const& rSelection )
+{
+    if ( !getImpl().mxEdit.is() )
+        return;
+    getImpl().mxEdit->setSelection( awt::Selection( rSelection.Min(), rSelection.Max() ) );
+}
+
+void Edit::SetText( XubString const& rStr ) const
 {
     if ( !getImpl().mxEdit.is() )
         return;
@@ -102,8 +109,8 @@ void Edit::SetModifyHdl( const Link& rLink )
     getImpl().SetModifyHdl( rLink );
 }
 
-DECL_CONSTRUCTOR_IMPLS( Edit, Control, "edit" );
-DECL_GET_IMPL_IMPL( Edit );
+IMPL_CONSTRUCTORS( Edit, Control, "edit" );
+IMPL_GET_IMPL( Edit );
 
 // Window/Control/Edit/MultiLineEdit
 class MultiLineEditImpl : public EditImpl
@@ -115,8 +122,8 @@ public:
     }
 };
 
-DECL_CONSTRUCTOR_IMPLS( MultiLineEdit, Edit, "multilineedit" );
-DECL_GET_IMPL_IMPL( MultiLineEdit );
+IMPL_CONSTRUCTORS( MultiLineEdit, Edit, "multilineedit" );
+IMPL_GET_IMPL( MultiLineEdit );
 
 // Window/Control/Edit/SpinField
 class SpinFieldImpl : public EditImpl
@@ -128,7 +135,7 @@ class SpinFieldImpl : public EditImpl
     }
 };
 
-DECL_CONSTRUCTOR_IMPLS( SpinField, Edit, "spinfield" );
+IMPL_CONSTRUCTORS( SpinField, Edit, "spinfield" );
 
 // Window/Control/Edit/SpinField/NumericField
 class NumericFieldImpl : public SpinFieldImpl
@@ -150,9 +157,9 @@ class MetricFieldImpl : public SpinFieldImpl
     }
 };
 
-DECL_GET_IMPL_IMPL( SpinField );
-DECL_GET_IMPL_IMPL( NumericField );
-DECL_GET_IMPL_IMPL( MetricField );
+IMPL_GET_IMPL( SpinField );
+IMPL_GET_IMPL( NumericField );
+IMPL_GET_IMPL( MetricField );
 
 // FormatterBase
 class FormatterBaseImpl
@@ -242,7 +249,7 @@ sal_Int64 NumericFormatter::GetValue() const
 
 #undef SET_IMPL
 
-DECL_CONSTRUCTOR_IMPLS_2( NumericField, SpinField, NumericFormatter, "numericfield" );
+IMPL_CONSTRUCTORS_2( NumericField, SpinField, NumericFormatter, "numericfield" );
 
 // MetricFormatter
 
@@ -285,7 +292,7 @@ sal_Int64 MetricFormatter::GetValue( FieldUnit nUnit ) const
     return getFormatImpl().mxField->getValue( MetricUnitVclToUno( nUnit ) );
 }
 
-DECL_CONSTRUCTOR_IMPLS_2( MetricField, SpinField, MetricFormatter, "metricfield" );
+IMPL_CONSTRUCTORS_2( MetricField, SpinField, MetricFormatter, "metricfield" );
 
 // Window/Control/Edit/ComboBox
 class ComboBoxImpl : public EditImpl,
@@ -301,7 +308,7 @@ public:
     {
     }
 
-    USHORT InsertEntry(const XubString& rStr, USHORT nPos)
+    USHORT InsertEntry( XubString const& rStr, USHORT nPos )
     {
         if ( nPos == COMBOBOX_APPEND )
             nPos = GetEntryCount();
@@ -426,8 +433,8 @@ void ComboBox::SetSelectHdl( const Link& rLink )
     getImpl().SetSelectHdl( rLink );
 }
 
-DECL_CONSTRUCTOR_IMPLS( ComboBox, Edit, "combobox" );
-DECL_GET_IMPL_IMPL( ComboBox );
+IMPL_CONSTRUCTORS( ComboBox, Edit, "combobox" );
+IMPL_GET_IMPL( ComboBox );
 
 // Window/Control/ListBox
 class ListBoxImpl : public ControlImpl,
@@ -441,6 +448,7 @@ public:
         : ControlImpl( pCtx, xPeer, pWindow ),
         mxListBox( xPeer, uno::UNO_QUERY )
     {
+        SelectEntryPos( 0, true );
     }
 
     USHORT InsertEntry(const XubString& rStr, USHORT nPos)
@@ -621,7 +629,7 @@ void ListBox::SetClickHdl( const Link& rLink )
     getImpl().SetClickHdl( rLink );
 }
 
-DECL_CONSTRUCTOR_IMPLS( ListBox, Control, "listbox" );
-DECL_GET_IMPL_IMPL( ListBox );
+IMPL_CONSTRUCTORS( ListBox, Control, "listbox" );
+IMPL_GET_IMPL( ListBox );
 
 } // namespace layout
diff --git a/toolkit/source/vclcompat/wrapper.cxx b/toolkit/source/vclcompat/wrapper.cxx
index 157297b..93f3a5f 100644
--- toolkit/source/vclcompat/wrapper.cxx
+++ toolkit/source/vclcompat/wrapper.cxx
@@ -32,22 +32,34 @@
 #include "wrapper.hxx"
 
 #include <awt/vclxplugin.hxx>
+#include <com/sun/star/awt/PosSize.hpp>
 #include <com/sun/star/awt/VclWindowPeerAttribute.hpp>
 #include <com/sun/star/awt/WindowAttribute.hpp>
 #include <com/sun/star/awt/XDialog2.hpp>
-#include <com/sun/star/awt/XFixedText.hpp>
 #include <com/sun/star/awt/XProgressBar.hpp>
 #include <com/sun/star/graphic/XGraphic.hpp>
 #include <comphelper/processfactory.hxx>
+#include <cstdio>
 #include <layout/factory.hxx>
 #include <layout/layoutcore.hxx>
 #include <layout/root.hxx>
+#include <layout/localized-string.hxx>
 #include <toolkit/awt/vclxwindow.hxx>
 #include <vcl/ctrl.hxx>
 #include <vcl/image.hxx>
+#include <vcl/tabpage.hxx>
 #include <vcl/window.hxx>
 
+ 
+#if 0
+/* FIXME: move to sfx2 or svtools/layout.hxx */
+#include <svtools/itempool.hxx>
+#include <svtools/itemset.hxx>
+#include <svtools/poolitem.hxx>
+#endif
+ 
 using namespace ::com::sun::star;
+using rtl::OUString;
 
 namespace layout
 {
@@ -63,16 +75,16 @@ public:
     ContextImpl( char const *pPath )
     {
         uno::Sequence< uno::Any > aParams( 1 );
-        aParams[0] <<= rtl::OUString( pPath, strlen( pPath ), RTL_TEXTENCODING_UTF8 );
+        aParams[0] <<= OUString( pPath, strlen( pPath ), RTL_TEXTENCODING_UTF8 );
 
         uno::Reference< lang::XSingleServiceFactory > xFactory(
             comphelper::createProcessComponent(
-                rtl::OUString::createFromAscii( "com.sun.star.awt.Layout" ) ),
+                OUString::createFromAscii( "com.sun.star.awt.Layout" ) ),
             uno::UNO_QUERY );
         if ( !xFactory.is() )
         {
             throw uno::RuntimeException(
-                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Layout engine not installed" ) ),
+                OUString( RTL_CONSTASCII_USTRINGPARAM( "Layout engine not installed" ) ),
                 uno::Reference< uno::XInterface >() );
         }
         mxRoot = uno::Reference< awt::XLayoutRoot >(
@@ -86,7 +98,7 @@ public:
     {
     }
 
-    PeerHandle getByName( const rtl::OUString &rName )
+    PeerHandle getByName( const OUString &rName )
     {
         uno::Any val = mxNameAccess->getByName( rName );
         PeerHandle xRet;
@@ -125,7 +137,7 @@ PeerHandle Context::getRoot()
 PeerHandle Context::GetPeerHandle( const char *pId, sal_uInt32 nId ) const
 {
     PeerHandle xHandle;
-    xHandle = pImpl->getByName( rtl::OUString( pId, strlen( pId ), RTL_TEXTENCODING_UTF8 ) );
+    xHandle = pImpl->getByName( OUString( pId, strlen( pId ), RTL_TEXTENCODING_UTF8 ) );
     if ( !xHandle.is() )
     {
         DBG_ERROR1( "Failed to fetch widget '%s'", pId );
@@ -139,24 +151,10 @@ PeerHandle Context::GetPeerHandle( const char *pId, sal_uInt32 nId ) const
     return xHandle;
 }
 
-// Window/Dialog
-class DialogImpl : public WindowImpl
-{
-public:
-    uno::Reference< awt::XDialog2 > mxDialog;
-    DialogImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
-        : WindowImpl( pCtx, xPeer, pWindow )
-        , mxDialog( xPeer, uno::UNO_QUERY )
-    {
-    }
-};
-
-// Accessors
-DECL_GET_IMPL_IMPL( Control )
-DECL_GET_IMPL_IMPL( Dialog )
+IMPL_GET_IMPL( Control );
 
 Window::Window( WindowImpl *pImpl )
-: mpImpl( pImpl )
+    : mpImpl( pImpl )
 {
 }
 
@@ -167,6 +165,20 @@ Window::~Window()
     mpImpl = NULL;
 }
 
+void Window::SetParent( ::Window *pParent )
+{
+    uno::Reference <awt::XWindow> ref( GetPeer(), uno::UNO_QUERY );
+    ::Window *window = VCLXWindow::GetImplementation( ref )->GetWindow();
+    window->SetParent( pParent );
+}
+
+void Window::SetParent( Window *pParent )
+{
+    uno::Reference <awt::XWindow> parentRef( pParent->GetPeer(), uno::UNO_QUERY );
+    ::Window *parentWindow = VCLXWindow::GetImplementation( parentRef )->GetWindow();
+    SetParent( parentWindow );
+}
+
 Context *Window::getContext()
 {
     return this && mpImpl ? mpImpl->mpCtx : NULL;
@@ -174,11 +186,31 @@ Context *Window::getContext()
 
 PeerHandle Window::GetPeer()
 {
-    if (!mpImpl)
+    if ( !mpImpl )
         return PeerHandle();
     return mpImpl->mxWindow;
 }
 
+uno::Reference<awt::XWindow> Window::GetRef()
+{
+    return uno::Reference <awt::XWindow> ( GetPeer(), uno::UNO_QUERY );
+}
+
+VCLXWindow* Window::GetVCLXWindow()
+{
+    return VCLXWindow::GetImplementation( GetRef() );
+}
+
+::Window* Window::GetWindow()
+{
+    return GetVCLXWindow()->GetWindow();
+}
+
+::Window* Window::GetParent()
+{
+    return GetWindow()->GetParent();
+}
+
 struct ToolkitVclPropsMap
 {
     WinBits vclStyle;
@@ -299,11 +331,11 @@ uno::Reference< awt::XToolkit > getToolkit()
         // Urgh ...
         xToolkit = uno::Reference< awt::XToolkit >(
             ::comphelper::getProcessServiceFactory()->createInstance(
-                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.awt.Toolkit" ) ) ),
+                OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.awt.Toolkit" ) ) ),
             uno::UNO_QUERY );
         if ( !xToolkit.is() )
             throw uno::RuntimeException(
-                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "failed to create toolkit!") ),
+                OUString( RTL_CONSTASCII_USTRINGPARAM( "failed to create toolkit!") ),
                 uno::Reference< uno::XInterface >() );
     }
     return xToolkit;
@@ -318,7 +350,7 @@ PeerHandle Window::CreatePeer( Window *pParent, WinBits nStyle, const char *pNam
             nWinAttrbs |= toolkitVclPropsMap[ i ].initAttr;
 
     return layoutimpl::createWidget( getToolkit(), pParent->GetPeer(),
-                                     rtl::OUString::createFromAscii( pName ), nWinAttrbs );
+                                     OUString::createFromAscii( pName ), nWinAttrbs );
 }
 
 void Window::Enable( bool bEnable )
@@ -342,6 +374,19 @@ void Window::GrabFocus()
     getImpl().mxWindow->setFocus();
 }
 
+class DialogImpl : public WindowImpl
+{
+public:
+    uno::Reference< awt::XDialog2 > mxDialog;
+    DialogImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
+        : WindowImpl( pCtx, xPeer, pWindow )
+        , mxDialog( xPeer, uno::UNO_QUERY )
+    {
+    }
+};
+
+IMPL_GET_IMPL( Dialog )
+
 Dialog::Dialog( Window *pParent, const char *pXMLPath, const char *pId, sal_uInt32 nId )
     : Context( pXMLPath )
     , Window( new DialogImpl( this, Context::GetPeerHandle( pId, nId ), this ) )
@@ -358,20 +403,6 @@ Dialog::Dialog( ::Window *pParent, const char *pXMLPath, const char *pId, sal_uI
         SetParent( pParent );
 }
 
-void Dialog::SetParent( ::Window *pParent )
-{
-    uno::Reference <awt::XWindow> ref( GetPeer(), uno::UNO_QUERY );
-    ::Window *window = VCLXWindow::GetImplementation( ref )->GetWindow();
-    window->SetParent( pParent );
-}
-
-void Dialog::SetParent( Window *pParent )
-{
-    uno::Reference <awt::XWindow> parentRef( pParent->GetPeer(), uno::UNO_QUERY );
-    ::Window *parentWindow = VCLXWindow::GetImplementation( parentRef )->GetWindow();
-    SetParent( parentWindow );
-}
-
 short Dialog::Execute()
 {
     if ( !getImpl().mxDialog.is() )
@@ -386,13 +417,104 @@ void Dialog::EndDialog( long nResult )
     getImpl().mxDialog->endDialog( nResult );
 }
 
-void Dialog::SetText( const String& rStr )
+void Dialog::SetText( String const& rStr )
 {
     if ( !getImpl().mxDialog.is() )
         return;
     getImpl().mxDialog->setTitle( rStr );
 }
 
+class TabPageImpl : public WindowImpl
+{
+public:
+    uno::Reference< awt::XWindow > mxTabPage;
+    TabPageImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
+        : WindowImpl( pCtx, xPeer, pWindow )
+        , mxTabPage( xPeer, uno::UNO_QUERY )
+    {
+    }
+};
+
+::Window* TabPage::global_parent = 0;
+
+IMPL_GET_IMPL( TabPage )
+
+TabPage::TabPage( Window *pParent, const char *pXMLPath, const char *pId, sal_uInt32 nId, SfxItemSet const* set )
+    : Context( pXMLPath )
+    , Window( new TabPageImpl( this, Context::GetPeerHandle( pId, nId ), this ) )
+    , bHasExchangeSupport( false )
+    , pSet( set )
+{
+    if ( pParent )
+        SetParent( pParent );
+}
+
+TabPage::TabPage( ::Window *pParent, const char *pXMLPath, const char *pId, sal_uInt32 nId, SfxItemSet const* set )
+    : Context( pXMLPath )
+    , Window( new TabPageImpl( this, Context::GetPeerHandle( pId, nId ), this ) )
+    , bHasExchangeSupport( false )
+    , pSet( set )
+{
+    if ( pParent )
+        SetParent( pParent );
+}
+
+TabPage::~TabPage()
+{
+    delete GetTabPage();
+}
+
+IMPL_GET_WINDOW( TabPage );
+
+void TabPage::ActivatePage()
+{
+}
+
+void TabPage::DeactivatePage()
+{
+}
+
+#if 0
+SfxTabPage::SfxTabPage( Window *pParent, const char *pXMLPath, const char *pId, sal_uInt32 nId, SfxItemSet const* set )
+    : TabPage( pParent, pXMLPath, pId, nId )
+    , bHasExchangeSupport( false )
+    , pSet( set )
+{
+}
+
+SfxTabPage::SfxTabPage( ::Window *pParent, const char *pXMLPath, const char *pId, sal_uInt32 nId, SfxItemSet const* set )
+    : TabPage( pParent, pXMLPath, pId, nId )
+{
+}
+
+/* FIXME: static method, full c&p from sfx2/source/dialog/tabdlg.cxx */
+//const SfxPoolItem* TabPage::GetItem( const SfxItemSet& rSet, USHORT nSlot )
+const SfxPoolItem* SfxTabPage::GetItem( const SfxItemSet& rSet, USHORT nSlot )
+
+{
+	const SfxItemPool* pPool = rSet.GetPool();
+	USHORT nWh = pPool->GetWhich( nSlot );
+	const SfxPoolItem* pItem = 0;
+#ifdef DEBUG
+	SfxItemState eState;
+    eState =
+#endif
+			rSet.GetItemState( nWh, TRUE, &pItem );  // -Wall required??
+
+	if ( !pItem && nWh != nSlot )
+		pItem = &pPool->GetDefaultItem( nWh );
+	return pItem;
+}
+#else 
+
+#define SfxTabPage TabPage
+
+#endif
+
+void SfxTabPage::Reset( SfxItemSet const& )
+{
+}
+
 class FixedLineImpl : public ControlImpl
 {
 public:
@@ -402,8 +524,8 @@ public:
     }
 };
 
-DECL_CONSTRUCTOR_IMPLS( FixedLine, Control, "hfixedline" );
-DECL_GET_IMPL_IMPL( FixedLine )
+IMPL_CONSTRUCTORS( FixedLine, Control, "hfixedline" );
+IMPL_GET_IMPL( FixedLine )
 
 bool FixedLine::IsEnabled()
 {
@@ -428,10 +550,10 @@ public:
     }
 };
 
-DECL_CONSTRUCTOR_IMPLS( FixedText, Control, "fixedtext" );
-DECL_GET_IMPL_IMPL( FixedText )
+IMPL_CONSTRUCTORS( FixedText, Control, "fixedtext" );
+IMPL_GET_IMPL( FixedText )
 
-void FixedText::SetText( const String& rStr )
+void FixedText::SetText( String const& rStr )
 {
     if ( !getImpl().mxFixedText.is() )
         return;
@@ -447,8 +569,8 @@ public:
     }
 };
 
-DECL_CONSTRUCTOR_IMPLS( FixedInfo, FixedText, "fixedinfo" );
-DECL_GET_IMPL_IMPL( FixedInfo );
+IMPL_CONSTRUCTORS( FixedInfo, FixedText, "fixedinfo" );
+IMPL_GET_IMPL( FixedInfo );
 
 class ProgressBarImpl : public ControlImpl
 {
@@ -489,8 +611,8 @@ public:
     }
 };
 
-DECL_CONSTRUCTOR_IMPLS( FixedImage, Control, "fixedimage" );
-DECL_GET_IMPL_IMPL( FixedImage )
+IMPL_CONSTRUCTORS( FixedImage, Control, "fixedimage" );
+IMPL_GET_IMPL( FixedImage )
 
 void FixedImage::setImage( ::Image const& i )
 {
@@ -516,7 +638,7 @@ FixedImage::~FixedImage()
 #endif
 
     
-DECL_CONSTRUCTOR_IMPLS( ProgressBar, Control, "ProgressBar" );
+IMPL_CONSTRUCTORS( ProgressBar, Control, "ProgressBar" );
 #if 0
 ProgressBar::ProgressBar( Context *pCtx, const char *pId, sal_uInt32 nId )
     : Control( new ProgressBarImpl( pCtx, pCtx->GetPeerHandle( pId, nId ), this ) )
@@ -529,7 +651,7 @@ ProgressBar::ProgressBar( Window *pParent, WinBits nBits)
 }
 #endif
 
-DECL_GET_IMPL_IMPL( ProgressBar )
+IMPL_GET_IMPL( ProgressBar );
 
 
 void ProgressBar::SetForegroundColor( css::util::Color color )
@@ -628,7 +750,46 @@ Plugin::Plugin( Context *pCtx, char const *pId, ::Control *plugin )
 {
 }
 
-DECL_GET_IMPL_IMPL( Plugin )
+IMPL_GET_IMPL( Plugin );
 
+class LocalizedStringImpl : public WindowImpl
+{
+public:
+    layoutimpl::LocalizedString *mpString;
+    LocalizedStringImpl( Context *pCtx, const PeerHandle &xPeer, Window *pWindow )
+        : WindowImpl( pCtx, xPeer, pWindow )
+        , mpString( static_cast<layoutimpl::LocalizedString*>( VCLXWindow::GetImplementation( uno::Reference <awt::XWindow> ( mxWindow, uno::UNO_QUERY ) ) ) )
+    {
+    }
+    OUString getText()
+    {
+        if ( mpString )
+            return mpString->getText();
+        return OUString();
+    }
+    void setText( OUString const& s )
+    {
+        if ( mpString )
+            mpString->setText( s );
+    }
+};
+
+IMPL_GET_IMPL( LocalizedString );
+
+LocalizedString::LocalizedString( Context *pCtx, char const* pId )
+    : Window( new LocalizedStringImpl( pCtx, pCtx->GetPeerHandle( pId, 0 ), this ) )
+{
+}
+
+LocalizedString::operator String ()
+{
+    return getImpl().getText();
+}
+
+String LocalizedString::operator= (String const& s)
+{
+    getImpl().setText( s );
+    return getImpl().getText();
+}
 
 } // namespace layout
diff --git a/toolkit/source/vclcompat/wrapper.hxx b/toolkit/source/vclcompat/wrapper.hxx
index cdc2e98..25dbd90 100644
--- toolkit/source/vclcompat/wrapper.hxx
+++ toolkit/source/vclcompat/wrapper.hxx
@@ -107,12 +107,12 @@ inline WindowImpl &Window::getImpl() const
 
 // Helpers for defining boiler-plate constructors ...
 // Could in-line in top-level but not with safe static_casts.
-#define DECL_GET_IMPL_IMPL(t) \
+#define IMPL_GET_IMPL(t) \
     inline t##Impl &t::getImpl() const \
     { \
         return *(static_cast<t##Impl *>(mpImpl)); \
     }
-#define DECL_CONSTRUCTOR_IMPLS(t,par,unoName) \
+#define IMPL_CONSTRUCTORS(t,par,unoName) \
     t::t( Context *pCtx, const char *pId, sal_uInt32 nId ) \
         : par( new t##Impl( pCtx, pCtx->GetPeerHandle( pId, nId ), this ) ) \
     { \
@@ -121,7 +121,7 @@ inline WindowImpl &Window::getImpl() const
         : par( new t##Impl( pParent->getContext(), Window::CreatePeer( pParent, nBits, unoName ), this ) ) \
     { \
     }
-#define DECL_CONSTRUCTOR_IMPLS_2(t,win_par,other_par,unoName) \
+#define IMPL_CONSTRUCTORS_2(t,win_par,other_par,unoName) \
     t::t( Context *pCtx, const char *pId, sal_uInt32 nId ) \
         : win_par( new t##Impl( pCtx, pCtx->GetPeerHandle( pId, nId ), this ) ) \
         , other_par( new other_par##Impl( Window::GetPeer() ) ) \
diff --git a/toolkit/src2xml/source/src2xml.py b/toolkit/src2xml/source/src2xml.py
index a2a7714..fdcc0fb 100644
--- toolkit/src2xml/source/src2xml.py
+++ toolkit/src2xml/source/src2xml.py
@@ -174,13 +174,16 @@ def post_process (s):
     """Make output directly usable by layout module."""
     s = re.sub ('(</?)([a-z]+)-([a-z]+)-([a-z]+)', r'\1\2\3\4', s)
     s = re.sub ('(</?)([a-z]+)-([a-z]+)', r'\1\2\3', s)
-    s = re.sub ('(<(radiobutton|(fixed(info|text)))[^>]*) text=', r'\1 label=', s)
+    s = re.sub ('(<(checkbox|radiobutton|(fixed(info|text)))[^>]*) text=', r'\1 label=', s)
     s = re.sub (' (height|width|x|y)="[0-9]*"', '', s)
+    s = re.sub (' (label|text|title)="', r' _\1="', s)
 
     s = s.replace ('<modaldialog', '<modaldialog sizeable="true"')
     s = s.replace (' rid=', ' id=')
     s = s.replace (' border="true"', ' has_border="true"')
     s = s.replace (' def-button="true"', ' default="true"')
+    s = s.replace (' drop-down="', ' dropdown="')
+    s = s.replace (' tab-stop="', ' tabstop="')
     return s
 
 XML_HEADER = '''<?xml version="1.0" encoding="UTF-8"?>
diff --git a/toolkit/workben/layout/.gitignore b/toolkit/workben/layout/.gitignore
new file mode 100644
index 0000000..9b72951
--- /dev/null
+++ toolkit/workben/layout/.gitignore
@@ -0,0 +1,3 @@
+/de
+/en-US
+/nl
diff --git a/toolkit/workben/layout/README b/toolkit/workben/layout/README
new file mode 100644
index 0000000..3b83bbf
--- /dev/null
+++ toolkit/workben/layout/README
@@ -0,0 +1,43 @@
+Testing workbench and editor for Layout engine.
+
+* Configure using --enable-layout.
+
+* [d]make all
+
+* export OOO_INSTALL_PREFIX=$(pwd)/ooo-layout
+
+* [d]make install DESTDIR=$OOO_INSTALL_PREFIX
+
+* Compile test program in toolkit/workben/layout
+
+  cd toolkit/workben/layout && dmake all
+
+* FIXME: New three layer install/rpath feature needs these workarounds
+|
+|  test -d $OOO_INSTALL_PREFIX/openoffice.org3 && export OOO_PREFIX_BRAND=$OOO_INSTALL_PREFIX/openoffice.org3 || export OOO_PREFIX_BRAND=$OOO_INSTALL_PREFIX
+|  cp -f ../..$INPATH/lib/libtkx.so $OOO_PREFIX/openoffice.org/basis3.0/program
+|  export LD_LIBRARY_PATH=$OOO_PREFIX_BRAND/basis-link/program:$OOO_PREFIX_BRAND/basis-link/ure-link/lib
+|
+|  (see source/layout/helper.cxx)
+
+* Run it on any .xml file
+
+  ../../$INPATH/bin/test [--inst $OOO_INSTALL_PREFIX] zoom.xml
+
+* Run it for specific dialogs, see test.cxx
+
+   ../../$INPATH/bin/test [--inst $OOO_INSTALL_PREFIX] --test zoom
+   ../../$INPATH/bin/test [--inst $OOO_INSTALL_PREFIX] --test wordcount
+
+* Or source refresh in workben/layout, do something like
+
+   cd toolkit/workben/layout && . ./refresh [--inst $OOO_INSTALL_PREFIX]
+
+Integration into OOo:
+
+* After instaling, run
+
+  cd ooo-cvs/program
+  ./soffice.bin
+
+  Start a [Writer] document and choose View/Zoom or Extra/Word count.
diff --git a/toolkit/workben/layout/editor.cxx b/toolkit/workben/layout/editor.cxx
index f78de24..402c9e8 100644
--- toolkit/workben/layout/editor.cxx
+++ toolkit/workben/layout/editor.cxx
@@ -62,11 +62,6 @@ using rtl::OUString;
 #include "root.hxx"
 #include "helper.hxx"
 
-//** Utilities
-
-#define OUSTRING_CSTR( str ) \
-    rtl::OUStringToOString( str, RTL_TEXTENCODING_ASCII_US ).getStr()
-
 // TODO: automatically generated
 struct WidgetSpec {
     const char *pLabel, *pName, *pIconName;
diff --git a/toolkit/workben/layout/makefile.mk b/toolkit/workben/layout/makefile.mk
index 43918f3..e82e1c9 100644
--- toolkit/workben/layout/makefile.mk
+++ toolkit/workben/layout/makefile.mk
@@ -43,7 +43,7 @@ ENABLE_EXCEPTIONS=TRUE
 CFLAGS += -I$(PRJ)/source/layout
 
 # Allow zoom and wordcount to be built without depending on svx,sv,sfx2
-CFLAGS += -I../$(PRJ)/svx/inc -I../$(PRJ)/svtools/inc
+CFLAGS += -I../$(PRJ)/svx/inc -I../$(PRJ)/svtools/inc -I../$(PRJ)/sfx2/inc -I../$(PRJ)/sc/inc -I../$(PRJ)/sc/source/ui/inc
 
 .INCLUDE : $(PRJ)$/util$/makefile.pmk
 
@@ -66,6 +66,8 @@ OBJFILES=\
 	$(OBJ)$/plugin.obj \
 	$(OBJ)$/recover.obj \
 	$(OBJ)$/test.obj \
+	$(OBJ)$/tpsort.obj \
+	$(OBJ)$/sortdlg.obj \
 	$(OBJ)$/wordcountdialog.obj \
 	$(OBJ)$/zoom.obj
 
@@ -91,6 +93,7 @@ default: ALLTAR
 
 XML_FILES=\
 	recover.xml\
+	sort-options.xml\
 	wordcount.xml\
 	zoom.xml\
 
@@ -124,6 +127,12 @@ dist .PHONY :
 	touch ../$(PRJ)/sw/source/ui/dialog/swdlgfact.cxx
 	# FIXME: broken setup
 	ln -sf ../inc/wordcountdialog.hxx ../$(PRJ)/sw/source/ui/dialog/wordcountdialog.hxx 
+	$(SHELL) ./un-test.sh tpsort.cxx > ../$(PRJ)/sc/source/ui/dbgui/tpsort.cxx
+	$(SHELL) ./un-test.sh tpsort.hxx > ../$(PRJ)/sc/source/ui/inc/tpsort.hxx
+	$(SHELL) ./un-test.sh sortdlg.cxx > ../$(PRJ)/sc/source/ui/dbgui/sortdlg.cxx
+	$(SHELL) ./un-test.sh sortdlg.hxx > ../$(PRJ)/sc/source/ui/inc/sortdlg.hxx
+	touch ../$(PRJ)/sc/source/ui/attrdlg/scdlgfact.cxx
+	touch ../$(PRJ)/sc/source/ui/view/cellsh2.cxx
 
 .ELSE # ENABLE_LAYOUT != TRUE
 all .PHONY:
diff --git a/toolkit/workben/layout/refresh b/toolkit/workben/layout/refresh
index de2652c..7969995 100644
--- toolkit/workben/layout/refresh
+++ toolkit/workben/layout/refresh
@@ -1,3 +1,7 @@
 echo "source me ..."
 test -n "${INPATH}" && rm -Rf ../../${INPATH}
-build debug=true && cp ../../${INPATH}/lib/*.so ../../../solver/680/${INPATH}/lib && dmake debug=true && ../../${INPATH}/bin/test "$@"
+build debug=true\
+  && cp ../../${INPATH}/lib/*.so ../../../solver/300/${INPATH}/lib \
+  && cp -f ../..$INPATH/lib/libtkx.so $OOO_INSTALL_PREFIX/openoffice.org/basis3.0/program \
+  && dmake debug=true \
+  && ../../${INPATH}/bin/test "$@"
diff --git a/toolkit/workben/layout/sort-options.xml b/toolkit/workben/layout/sort-options.xml
new file mode 100644
index 0000000..e2e01f0
--- /dev/null
+++ toolkit/workben/layout/sort-options.xml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- This is a template.  i18n translation is not performed in-place;
+     i18n translated XML files are generated from this template by
+     transex3/layout/tralay.  !-->
+
+<tabpage help-id="HID_SCPAGE_SORT_OPTIONS"
+	 id="RID_SCPAGE_SORT_OPTIONS"
+	 sv-look="true" xmlns="http://openoffice.org/2007/layout" xmlns:cnt="http://openoffice.org/2007/layout/container"
+	 optimumsize="true"
+         sizeable="true" moveable="true">
+    <vbox spacing="4" border="5">
+	<string id="STR_COL_LABEL" _text="Range contains column la~bels"/>
+	<string id="STR_ROW_LABEL" _text="Range contains ~row labels"/>
+	<string id="SCSTR_UNDEFINED" _text="- undefined -"/>
+	<vbox spacing="4" border="5">
+            <checkbox id="BTN_CASESENSITIVE" tabstop="true" _label="Case ~sensitive"/>
+            <checkbox id="BTN_LABEL" tabstop="true"/>
+            <checkbox id="BTN_FORMATS" tabstop="true" _label="Include ~formats"/>
+            <checkbox id="BTN_NATURALSORT" tabstop="true" _label="Enable ~natural sort"/>
+            <checkbox id="BTN_COPYRESULT" tabstop="true" _label="~Copy sort results to:"/>
+            <hbox>
+		<listbox has_border="true" dropdown="true" id="LB_OUTAREA" tabstop="true"/>
+		<edit has_border="true" disable="true" id="ED_OUTAREA" tabstop="true"/>
+            </hbox>
+            <checkbox id="BTN_SORT_USER" tabstop="true" _label="Custom sort ~order"/>
+            <listbox has_border="true" disable="true" dropdown="true" id="LB_SORT_USER" tabstop="true"/>
+            <hbox>
+		<fixedtext id="FT_LANGUAGE" _label="~Language"/>
+		<fixedtext id="FT_ALGORITHM" _label="O~ptions"/>
+            </hbox>
+            <hbox>
+		<listbox has_border="true" dropdown="true" id="LB_LANGUAGE" sort="true" tabstop="true" _string-item-list="Default"/>
+		<listbox has_border="true" dropdown="true" id="LB_ALGORITHM" tabstop="true"/>
+            </hbox>
+            <fixedline id="FL_DIRECTION" _text="Direction"/>
+            <radiobutton id="BTN_TOP_DOWN" tabstop="true" _label="~Top to bottom (sort rows)"/>
+            <radiobutton id="BTN_LEFT_RIGHT" tabstop="true" _label="L~eft to right (sort columns)"/>
+	</vbox>
+    </vbox>
+</tabpage>
diff --git a/toolkit/workben/layout/sortdlg.cxx b/toolkit/workben/layout/sortdlg.cxx
new file mode 100644
index 0000000..e7731ef
--- /dev/null
+++ toolkit/workben/layout/sortdlg.cxx
@@ -0,0 +1,65 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: sortdlg.cxx,v $
+ * $Revision: 1.6 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#if !TEST_LAYOUT
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_sc.hxx"
+#endif /*! TEST_LAYOUT */
+
+#undef SC_DLLIMPLEMENTATION
+
+
+
+#include "tpsort.hxx"
+#include "sortdlg.hxx"
+#include "scresid.hxx"
+#include "sortdlg.hrc"
+
+
+//==================================================================
+
+ScSortDlg::ScSortDlg( Window*			pParent,
+					  const SfxItemSet* pArgSet ) :
+		SfxTabDialog( pParent,
+					  ScResId( RID_SCDLG_SORT ),
+					  pArgSet ),
+		bIsHeaders	( FALSE ),
+		bIsByRows	( FALSE )
+
+{
+	AddTabPage( TP_FIELDS,	ScTabPageSortFields::Create,  0 );
+	AddTabPage( TP_OPTIONS,	ScTabPageSortOptions::Create, 0 );
+	FreeResource();
+}
+
+__EXPORT ScSortDlg::~ScSortDlg()
+{
+}
+
diff --git a/toolkit/workben/layout/sortdlg.hrc b/toolkit/workben/layout/sortdlg.hrc
new file mode 100644
index 0000000..d946f18
--- /dev/null
+++ toolkit/workben/layout/sortdlg.hrc
@@ -0,0 +1,91 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile: sortdlg.hrc,v $
+ *
+ *  $Revision: 1.4 $
+ *
+ *  last change: $Author: rt $ $Date: 2005/09/08 21:51:32 $
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *    MA  02111-1307  USA
+ *
+ ************************************************************************/
+
+
+#include "sc.hrc"   // -> RID_SCDLG_SORT
+					// -> RID_SCPAGE_SORT_FIELDS
+					// -> RID_SCPAGE_SORT_OPTIONS
+					// -> SCSTR_NONAME
+					// -> SCSTR_UNDEFINED
+					// -> SCSTR_FIELD
+
+/*
+#define RID_SCDLG_SORT			256
+#define RID_SCPAGE_SORT_FIELDS	257
+#define RID_SCPAGE_SORT_OPTIONS	258
+*/
+
+#define TP_FIELDS			1
+#define TP_OPTIONS			2
+
+// TP_SORT_FIELDS:
+#define FL_SORT1            1
+#define FL_SORT2            2
+#define FL_SORT3            3
+#define LB_SORT1			4
+#define LB_SORT2			5
+#define LB_SORT3			6
+#define BTN_UP1				7
+#define BTN_UP2				8
+#define BTN_UP3				9
+#define BTN_DOWN1			10
+#define BTN_DOWN2			11
+#define BTN_DOWN3			12
+
+// TP_SORT_OPTIONS:
+#define FL_DIRECTION		1
+#define LB_SORT_USER		2
+#define LB_OUTAREA			3
+#define ED_OUTAREA          4
+//#define FT_AREA_LABEL       5
+//#define FT_AREA             6
+#define BTN_SORT_USER       7
+#define BTN_CASESENSITIVE   8
+#define BTN_LABEL           9
+#define BTN_FORMATS         10
+#define BTN_COPYRESULT      11
+#define BTN_TOP_DOWN        12
+#define BTN_LEFT_RIGHT      13
+#define STR_COL_LABEL       14
+#define STR_ROW_LABEL       15
+#define FT_LANGUAGE         16
+#define LB_LANGUAGE         17
+#define FT_ALGORITHM        18
+#define LB_ALGORITHM        19
+#define	BTN_NATURALSORT		20
+
+
+
+
diff --git a/toolkit/workben/layout/sortdlg.hxx b/toolkit/workben/layout/sortdlg.hxx
new file mode 100644
index 0000000..d2ea7ed
--- /dev/null
+++ toolkit/workben/layout/sortdlg.hxx
@@ -0,0 +1,67 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: sortdlg.hxx,v $
+ * $Revision: 1.3 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef SC_SORTDLG_HXX
+#define SC_SORTDLG_HXX
+
+#include <sfx2/tabdlg.hxx>
+
+#ifndef _SFX_HXX
+#endif
+
+//==================================================================
+
+class ScSortDlg : public SfxTabDialog
+{
+public:
+				ScSortDlg( Window*			 pParent,
+						   const SfxItemSet* pArgSet );
+				~ScSortDlg();
+
+	void	SetHeaders( BOOL bHeaders );
+	void	SetByRows ( BOOL bByRows );
+	BOOL	GetHeaders() const;
+	BOOL	GetByRows () const;
+
+
+private:
+	BOOL	bIsHeaders;
+	BOOL	bIsByRows;
+};
+
+inline void ScSortDlg::SetHeaders( BOOL bHeaders )	{ bIsHeaders = bHeaders; }
+inline void ScSortDlg::SetByRows ( BOOL bByRows  )	{ bIsByRows = bByRows; }
+inline BOOL ScSortDlg::GetHeaders() const 			{ return bIsHeaders; }
+inline BOOL ScSortDlg::GetByRows () const 			{ return bIsByRows; }
+
+
+#endif // SC_SORTDLG_HXX
+
+
diff --git a/toolkit/workben/layout/sortdlg.src b/toolkit/workben/layout/sortdlg.src
new file mode 100644
index 0000000..e0d8496
--- /dev/null
+++ toolkit/workben/layout/sortdlg.src
@@ -0,0 +1,325 @@
+/*************************************************************************
+ *
+ *  OpenOffice.org - a multi-platform office productivity suite
+ *
+ *  $RCSfile: sortdlg.src,v $
+ *
+ *  $Revision: 1.41 $
+ *
+ *  last change: $Author: ihi $ $Date: 2007/04/19 16:48:19 $
+ *
+ *  The Contents of this file are made available subject to
+ *  the terms of GNU Lesser General Public License Version 2.1.
+ *
+ *
+ *    GNU Lesser General Public License Version 2.1
+ *    =============================================
+ *    Copyright 2005 by Sun Microsystems, Inc.
+ *    901 San Antonio Road, Palo Alto, CA 94303, USA
+ *
+ *    This library is free software; you can redistribute it and/or
+ *    modify it under the terms of the GNU Lesser General Public
+ *    License version 2.1, as published by the Free Software Foundation.
+ *
+ *    This library is distributed in the hope that it will be useful,
+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ *    Lesser General Public License for more details.
+ *
+ *    You should have received a copy of the GNU Lesser General Public
+ *    License along with this library; if not, write to the Free Software
+ *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ *    MA  02111-1307  USA
+ *
+ ************************************************************************/
+#include "sortdlg.hrc"
+TabPage RID_SCPAGE_SORT_FIELDS
+{
+	Hide = TRUE ;
+	SVLook = TRUE ;
+	HelpId = HID_SCPAGE_SORT_FIELDS ;
+    Size = MAP_APPFONT ( 260 , 185 ) ;
+	ListBox LB_SORT1
+	{
+		Border = TRUE ;
+		Pos = MAP_APPFONT ( 12 , 19 ) ;
+        Size = MAP_APPFONT ( 154 , 90 ) ;
+		TabStop = TRUE ;
+		DropDown = TRUE ;
+	};
+	RadioButton BTN_UP1
+	{
+        Pos = MAP_APPFONT ( 172 , 14 ) ;
+        Size = MAP_APPFONT ( 79 , 10 ) ;
+		Text [ en-US ] = "~Ascending" ;
+		TabStop = TRUE ;
+	};
+	RadioButton BTN_DOWN1
+	{
+        Pos = MAP_APPFONT ( 172 , 28 ) ;
+        Size = MAP_APPFONT ( 79 , 10 ) ;
+		Text [ en-US ] = "~Descending" ;
+		TabStop = TRUE ;
+	};
+    FixedLine FL_SORT1
+	{
+		Pos = MAP_APPFONT ( 6 , 3 ) ;
+        Size = MAP_APPFONT ( 248 , 8 ) ;
+		Text [ en-US ] = "Sort ~by" ;
+	};
+	ListBox LB_SORT2
+	{
+		Border = TRUE ;
+        Pos = MAP_APPFONT ( 12 , 60 ) ;
+        Size = MAP_APPFONT ( 154 , 90 ) ;
+		TabStop = TRUE ;
+		DropDown = TRUE ;
+	};
+	RadioButton BTN_UP2
+	{
+        Pos = MAP_APPFONT ( 172 , 55 ) ;
+        Size = MAP_APPFONT ( 79 , 10 ) ;
+		Text [ en-US ] = "A~scending" ;
+		TabStop = TRUE ;
+	};
+	RadioButton BTN_DOWN2
+	{
+        Pos = MAP_APPFONT ( 172 , 69 ) ;
+        Size = MAP_APPFONT ( 79 , 10 ) ;
+		Text [ en-US ] = "D~escending" ;
+		TabStop = TRUE ;
+	};
+    FixedLine FL_SORT2
+	{
+        Pos = MAP_APPFONT ( 6 , 44 ) ;
+        Size = MAP_APPFONT ( 248 , 8 ) ;
+		Text [ en-US ] = "Then b~y" ;
+	};
+	ListBox LB_SORT3
+	{
+		Border = TRUE ;
+        Pos = MAP_APPFONT ( 12 , 101 ) ;
+        Size = MAP_APPFONT ( 154 , 90 ) ;
+		TabStop = TRUE ;
+		DropDown = TRUE ;
+	};
+	RadioButton BTN_UP3
+	{
+        Pos = MAP_APPFONT ( 172 , 96 ) ;
+        Size = MAP_APPFONT ( 79 , 10 ) ;
+		Text [ en-US ] = "As~cending" ;
+		TabStop = TRUE ;
+	};
+	RadioButton BTN_DOWN3
+	{
+        Pos = MAP_APPFONT ( 172 , 110 ) ;
+        Size = MAP_APPFONT ( 79 , 10 ) ;
+		Text [ en-US ] = "Desce~nding" ;
+		TabStop = TRUE ;
+	};
+    FixedLine FL_SORT3
+	{
+        Pos = MAP_APPFONT ( 6 , 85 ) ;
+        Size = MAP_APPFONT ( 248 , 8 ) ;
+		Text [ en-US ] = "T~hen by" ;
+	};
+};
+TabPage RID_SCPAGE_SORT_OPTIONS
+{
+	Hide = TRUE ;
+	SVLook = TRUE ;
+	HelpId = HID_SCPAGE_SORT_OPTIONS ;
+	Pos = MAP_APPFONT ( 0 , 0 ) ;
+    Size = MAP_APPFONT ( 260 , 185 ) ;
+	CheckBox BTN_CASESENSITIVE
+	{
+        Pos = MAP_APPFONT ( 12 , 6 ) ;
+        Size = MAP_APPFONT ( 242 , 10 ) ;
+		Text [ en-US ] = "Case ~sensitive" ;
+		TabStop = TRUE ;
+	};
+	CheckBox BTN_LABEL
+	{
+        Pos = MAP_APPFONT ( 12 , 20 ) ;
+        Size = MAP_APPFONT ( 242 , 10 ) ;
+		TabStop = TRUE ;
+	};
+	String STR_COL_LABEL
+	{
+		Text [ en-US ] = "Range contains column la~bels" ;
+	};
+	String STR_ROW_LABEL
+	{
+		Text [ en-US ] = "Range contains ~row labels" ;
+	};
+	CheckBox BTN_FORMATS
+	{
+        Pos = MAP_APPFONT ( 12 , 34 ) ;
+        Size = MAP_APPFONT ( 242 , 10 ) ;
+		Text [ en-US ] = "Include ~formats" ;
+		TabStop = TRUE ;
+	};
+	CheckBox BTN_NATURALSORT
+	{
+		Pos = MAP_APPFONT ( 12 , 48 ) ;
+		Size = MAP_APPFONT ( 242 , 10 ) ;
+		Text [ de ] = "Enable ~natural sort" ;
+		Text [ en-US ] = "Enable ~natural sort" ;
+		Text [ cs ] = "Aktivovat přirozené třídění" ;
+       Text [ sk ] = "Aktivovať prirodzené triedenie" ;
+		TabStop = TRUE ;
+		Text [ x-comment ] = " " ;
+	};
+	CheckBox BTN_COPYRESULT
+	{
+        Pos = MAP_APPFONT ( 12 , 62 ) ;
+        Size = MAP_APPFONT ( 242 , 10 ) ;
+		Text [ en-US ] = "~Copy sort results to:" ;
+		TabStop = TRUE ;
+	};
+	ListBox LB_OUTAREA
+	{
+		Border = TRUE ;
+        Pos = MAP_APPFONT ( 20 , 73 ) ;
+        Size = MAP_APPFONT ( 93 , 90 ) ;
+		TabStop = TRUE ;
+		DropDown = TRUE ;
+	};
+	Edit ED_OUTAREA
+	{
+		Disable = TRUE ;
+		Border = TRUE ;
+        Pos = MAP_APPFONT ( 119 , 73 ) ;
+        Size = MAP_APPFONT ( 132 , 12 ) ;
+		TabStop = TRUE ;
+	};
+	CheckBox BTN_SORT_USER
+	{
+        Pos = MAP_APPFONT ( 12 , 89 ) ;
+        Size = MAP_APPFONT ( 242 , 10 ) ;
+		Text [ en-US ] = "Custom sort ~order" ;
+		TabStop = TRUE ;
+	};
+	ListBox LB_SORT_USER
+	{
+		Disable = TRUE ;
+		Border = TRUE ;
+        Pos = MAP_APPFONT ( 20 , 100 ) ;
+        Size = MAP_APPFONT ( 231 , 90 ) ;
+		TabStop = TRUE ;
+		DropDown = TRUE ;
+	};
+    FixedText FT_LANGUAGE
+	{
+        Pos = MAP_APPFONT ( 12 , 118 ) ;
+        Size = MAP_APPFONT ( 101 , 8 ) ;
+		Text [ en-US ] = "~Language";
+	};
+	ListBox LB_LANGUAGE
+	{
+		Border = TRUE ;
+        Pos = MAP_APPFONT ( 12 , 129 ) ;
+        Size = MAP_APPFONT ( 101 , 90 ) ;
+		TabStop = TRUE ;
+		DropDown = TRUE ;
+		Sort = TRUE ;
+	};
+    FixedText FT_ALGORITHM
+	{
+        Pos = MAP_APPFONT ( 119 , 118 ) ;
+        Size = MAP_APPFONT ( 132 , 8 ) ;
+		Text [ en-US ] = "O~ptions";
+	};
+	ListBox LB_ALGORITHM
+	{
+		Border = TRUE ;
+        Pos = MAP_APPFONT ( 119 , 129 ) ;
+        Size = MAP_APPFONT ( 132 , 90 ) ;
+		TabStop = TRUE ;
+		DropDown = TRUE ;
+	};
+	FixedLine FL_DIRECTION
+	{
+        Pos = MAP_APPFONT ( 6 , 147 ) ;
+        Size = MAP_APPFONT ( 248 , 8 ) ;
+		Text [ en-US ] = "Direction" ;
+	};
+	RadioButton BTN_TOP_DOWN
+	{
+        Pos = MAP_APPFONT ( 12 , 158 ) ;
+        Size = MAP_APPFONT ( 242 , 10 ) ;
+		Text [ en-US ] = "~Top to bottom (sort rows)" ;
+		TabStop = TRUE ;
+	};
+	RadioButton BTN_LEFT_RIGHT
+	{
+        Pos = MAP_APPFONT ( 12 , 172 ) ;
+        Size = MAP_APPFONT ( 242 , 10 ) ;
+		Text [ en-US ] = "L~eft to right (sort columns)" ;
+		TabStop = TRUE ;
+	};
+/*
+	FixedText FT_AREA_LABEL
+	{
+        Pos = MAP_APPFONT ( 6 , 171 ) ;
+        Size = MAP_APPFONT ( 248 , 8 ) ;
+		Text [ en-US ] = "Data area:" ;
+	};
+*/
+};
+TabDialog RID_SCDLG_SORT
+{
+	OutputSize = TRUE ;
+	SVLook = TRUE ;
+	Size = MAP_APPFONT ( 220 , 175 ) ;
+	Text [ en-US ] = "Sort" ;
+	Moveable = TRUE ;
+	Closeable = FALSE ;
+	TabControl 1
+	{
+		OutputSize = TRUE ;
+		Pos = MAP_APPFONT ( 0 , 0 ) ;
+		Size = MAP_APPFONT ( 210 , 170 ) ;
+		PageList =
+		{
+			PageItem
+			{
+				Identifier = TP_FIELDS ;
+				PageResID = TP_FIELDS ;
+				Text [ en-US ] = "Sort Criteria" ;
+			};
+			PageItem
+			{
+				Identifier = TP_OPTIONS ;
+				PageResID = TP_OPTIONS ;
+				Text [ en-US ] = "Options" ;
+			};
+		};
+	};
+	OKButton 1
+	{
+		Pos = MAP_APPFONT ( 3 , 157 ) ;
+		Size = MAP_APPFONT ( 40 , 12 ) ;
+		TabStop = TRUE ;
+	};
+	CancelButton 1
+	{
+		Pos = MAP_APPFONT ( 49 , 157 ) ;
+		Size = MAP_APPFONT ( 40 , 12 ) ;
+		TabStop = TRUE ;
+	};
+	PushButton 1
+	{
+		Pos = MAP_APPFONT ( 137 , 157 ) ;
+		Size = MAP_APPFONT ( 40 , 12 ) ;
+		TabStop = TRUE ;
+	};
+	HelpButton 1
+	{
+		Pos = MAP_APPFONT ( 94 , 157 ) ;
+		Size = MAP_APPFONT ( 40 , 12 ) ;
+		TabStop = TRUE ;
+	};
+};
+
+
diff --git a/toolkit/workben/layout/sortdlg.xml b/toolkit/workben/layout/sortdlg.xml
new file mode 100644
index 0000000..a17920e
--- /dev/null
+++ toolkit/workben/layout/sortdlg.xml
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- This is a template.  i18n translation is not performed in-place;
+     i18n translated XML files are generated from this template by
+     transex3/layout/tralay.  !-->
+
+<tabpage help-id="HID_SCPAGE_SORT_FIELDS" hide="true" id="RID_SCPAGE_SORT_FIELDS" sv-look="true" xmlns="http://openoffice.org/2007/layout" xmlns:cnt="http://openoffice.org/2007/layout/container">
+    <vbox>
+        <fixedline id="FL_SORT1" text="Sort ~by"/>
+        <radiobutton id="BTN_UP1" tabstop="true" label="~Ascending"/>
+        <listbox has_border="true" dropdown="true" id="LB_SORT1" tabstop="true"/>
+        <radiobutton id="BTN_DOWN1" tabstop="true" label="~Descending"/>
+        <fixedline id="FL_SORT2" text="Then b~y"/>
+        <radiobutton id="BTN_UP2" tabstop="true" label="A~scending"/>
+        <listbox has_border="true" dropdown="true" id="LB_SORT2" tabstop="true"/>
+        <radiobutton id="BTN_DOWN2" tabstop="true" label="D~escending"/>
+        <fixedline id="FL_SORT3" text="T~hen by"/>
+        <radiobutton id="BTN_UP3" tabstop="true" label="As~cending"/>
+        <listbox has_border="true" dropdown="true" id="LB_SORT3" tabstop="true"/>
+        <radiobutton id="BTN_DOWN3" tabstop="true" label="Desce~nding"/>
+    </vbox>
+</tabpage>
+<tabpage help-id="HID_SCPAGE_SORT_OPTIONS" hide="true" id="RID_SCPAGE_SORT_OPTIONS" sv-look="true" xmlns="http://openoffice.org/2007/layout" xmlns:cnt="http://openoffice.org/2007/layout/container">
+    <string id="STR_COL_LABEL" text="Range contains column la~bels"/>
+    <string id="STR_ROW_LABEL" text="Range contains ~row labels"/>
+    <vbox>
+        <checkbox id="BTN_CASESENSITIVE" tabstop="true" label="Case ~sensitive"/>
+        <checkbox id="BTN_LABEL" tabstop="true"/>
+        <checkbox id="BTN_FORMATS" tabstop="true" label="Include ~formats"/>
+        <checkbox id="BTN_NATURALSORT" tabstop="true" label=" "/>
+        <checkbox id="BTN_COPYRESULT" tabstop="true" label="~Copy sort results to:"/>
+        <hbox>
+            <listbox has_border="true" dropdown="true" id="LB_OUTAREA" tabstop="true"/>
+            <edit has_border="true" disable="true" id="ED_OUTAREA" tabstop="true"/>
+        </hbox>
+        <checkbox id="BTN_SORT_USER" tabstop="true" label="Custom sort ~order"/>
+        <listbox has_border="true" disable="true" dropdown="true" id="LB_SORT_USER" tabstop="true"/>
+        <hbox>
+            <fixedtext id="FT_LANGUAGE" label="~Language"/>
+            <fixedtext id="FT_ALGORITHM" label="O~ptions"/>
+        </hbox>
+        <hbox>
+            <listbox has_border="true" dropdown="true" id="LB_LANGUAGE" sort="true" tabstop="true"/>
+            <listbox has_border="true" dropdown="true" id="LB_ALGORITHM" tabstop="true"/>
+        </hbox>
+        <fixedline id="FL_DIRECTION" text="Direction"/>
+        <radiobutton id="BTN_TOP_DOWN" tabstop="true" label="~Top to bottom (sort rows)"/>
+        <radiobutton id="BTN_LEFT_RIGHT" tabstop="true" label="L~eft to right (sort columns)"/>
+    </vbox>
+</tabpage>
+<tabdialog closeable="false" moveable="true" output-size="true" id="RID_SCDLG_SORT" sv-look="true" text="Sort" xmlns="http://openoffice.org/2007/layout" xmlns:cnt="http://openoffice.org/2007/layout/container">
+    <vbox>
+        <tabcontrol output-size="true" id="1">
+            <pagelist>
+                <pageitem identifier="TP_FIELDS" page-res-id="TP_FIELDS" text="Sort Criteria"/>
+                <pageitem identifier="TP_OPTIONS" page-res-id="TP_OPTIONS" text="Options"/>
+            </pagelist>
+        </tabcontrol>
+        <hbox>
+            <okbutton id="1" tabstop="true"/>
+            <cancelbutton id="1" tabstop="true"/>
+            <helpbutton id="1" tabstop="true"/>
+            <pushbutton id="1" tabstop="true"/>
+        </hbox>
+    </vbox>
+</tabdialog>
diff --git a/toolkit/workben/layout/test.cxx b/toolkit/workben/layout/test.cxx
index 5ba4248..159cbc9 100644
--- toolkit/workben/layout/test.cxx
+++ toolkit/workben/layout/test.cxx
@@ -38,6 +38,7 @@
 
 #include <cstdio>
 #include <cstdlib>
+#include <sys/stat.h>
 
 #include <com/sun/star/xml/sax/SAXException.hpp>
 #include <comphelper/processfactory.hxx>
@@ -46,6 +47,12 @@
 #include <ucbhelper/configurationkeys.hxx>
 #include <ucbhelper/contentbroker.hxx>
 
+#define SORT_DLG 1 /* requires sfx2, svx to be compiled */
+#if SORT_DLG
+#include "scitems.hxx"
+#include "uiitems.hxx"
+#endif /* SORT_DLG */
+
 #include "editor.hxx"
 
 #include "plugin.hxx"
@@ -54,6 +61,11 @@
 #include "recover.hxx"
 #undef _LAYOUT_POST_HXX
 
+#if SORT_DLG
+#include "sortdlg.hxx"
+#undef _LAYOUT_POST_HXX
+#endif /* SORT_DLG */
+
 #include "wordcountdialog.hxx"
 #undef _LAYOUT_POST_HXX
 
@@ -154,12 +166,29 @@ void LayoutTest::InitUCB()
     }
 }
 
+static void support_upstream_brand_prefix ()
+{
+    if ( char const* inst = getenv( "OOO_INSTALL_PREFIX" ) )
+    {
+        char const *brand_prefix = "/openoffice.org3";
+        OUString brand_dir = OUString::createFromAscii( inst )
+            + OUString::createFromAscii( brand_prefix );
+        struct stat stat_info;
+        if ( !stat ( OUSTRING_CSTR( brand_dir ), &stat_info ) )
+        {
+            OSL_TRACE( "Appending %s to OOO_INSTALL_PREFIX", brand_prefix );
+            setenv( "OOO_INSTALL_PREFIX", OUSTRING_CSTR( brand_dir ), 1 );
+        }
+    }
+}
+
 void LayoutTest::Init()
 {
     ParseCommandLine();
-    if (!getenv ("OOO_INSTALL_PREFIX") )
-        setenv( "OOO_INSTALL_PREFIX", OUSTRING_CSTR( mInstallDir ), 1 );
-    OSL_TRACE( "OOO_INSTALL_PREFIX=%s\n", getenv( "OOO_INSTALL_PREFIX" ) );
+    setenv( "OOO_INSTALL_PREFIX", OUSTRING_CSTR( mInstallDir ), 0 );
+    support_upstream_brand_prefix ();
+    OSL_TRACE( "OOO_INSTALL_PREFIX=%s", getenv( "OOO_INSTALL_PREFIX" ) );
+
     mxContext = defaultBootstrap_InitialComponentContext();
     mxMSF = new UnoBootstrapLayout( Reference< lang::XMultiServiceFactory >( mxContext->getServiceManager(), UNO_QUERY ) );
     ::comphelper::setProcessServiceFactory( mxMSF );
@@ -212,9 +241,7 @@ void RunDialog( Dialog& dialog )
 {
     dialog.Show();
     dialog.Execute();
-    fprintf( stderr, "1st execute exited" );
-    dialog.Execute();
-    fprintf( stderr, "2nd execute exited" );
+    fprintf( stderr, "Done: dialog execute exited\n" );
 }
 
 #undef Dialog
@@ -222,11 +249,18 @@ void RunDialog( ::Dialog& dialog )
 {
     dialog.Show();
     dialog.Execute();
-    fprintf( stderr, "1st execute exited" );
-    dialog.Execute();
-    fprintf( stderr, "2nd execute exited" );
+    fprintf( stderr, "Done: dialog execute exited\n" );
 }
 
+#if SORT_DLG
+static void LoadSC()
+{
+    get_factory( "com.sun.star.comp.sfx2.DocumentTemplates" );
+    get_factory( "com.sun.star.comp.Calc.SpreadsheetDocument" );
+    GET_FACTORY( com.sun.star.i18n.Transliteration.l10n );
+}
+#endif /* SORT_DLG */
+
 void TestDialog( OUString const& name )
 {
     if ( 0 )
@@ -241,6 +275,14 @@ void TestDialog( OUString const& name )
         SvxRecoverDialog recover ( 0 );
         RunDialog( recover );
     }
+#if SORT_DLG
+    else if ( name.equalsAscii( "sort" ) )
+    {
+        LoadSC();
+        ScSortDlg sort ( 0, 0 );
+        RunDialog( sort );
+    }
+#endif /* SORT_DLG */
     else if ( name.equalsAscii( "wordcount" ) )
     {
         SwWordCountDialog words ( 0 );
diff --git a/toolkit/workben/layout/testrc.in b/toolkit/workben/layout/testrc.in
index 15e190d..00ae5eb 100644
--- toolkit/workben/layout/testrc.in
+++ toolkit/workben/layout/testrc.in
@@ -1,11 +1,11 @@
 OOO_INSTALL_PREFIX_URL=file://${OOO_INSTALL_PREFIX}
-OOO_BASIS_URL=${OOO_INSTALL_PREFIX_URL}/openoffice.org/basis3.0
-OOO_BASIS_BIN_URL=${OOO_INSTALL_PREFIX_URL}/openoffice.org/basis3.0/program
-OOO_URE_URL=${OOO_INSTALL_PREFIX_URL}/openoffice.org/ure
+OOO_BASIS_URL=${OOO_INSTALL_PREFIX_URL}/basis-link
+OOO_BASIS_BIN_URL=${OOO_BASIS_URL}/program
+OOO_URE_URL=${OOO_BASIS_URL}/ure-link
 #
 #CFG_INIFILE=${OOO_BASIS_BIN_URL}/configmgrrc
 #BaseInstallation=${OOO_BASIS_URL}
-BRAND_BASE_DIR=${OOO_INSTALL_PREFIX_URL}/openoffice.org3
+BRAND_BASE_DIR=${OOO_INSTALL_PREFIX_URL}
 OOO_BASE_DIR=${OOO_BASIS_URL}
 #
 UNO_TYPES=${OOO_URE_URL}/share/misc/types.rdb ${OOO_BASIS_BIN_URL}/offapi.rdb
diff --git a/toolkit/workben/layout/tpsort.cxx b/toolkit/workben/layout/tpsort.cxx
new file mode 100644
index 0000000..9468c5d
--- /dev/null
+++ toolkit/workben/layout/tpsort.cxx
@@ -0,0 +1,1108 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: tpsort.cxx,v $
+ * $Revision: 1.13 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#if !TEST_LAYOUT
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_sc.hxx"
+#endif /* !TEST_LAYOUT */
+
+#undef SC_DLLIMPLEMENTATION
+
+
+
+#include <vcl/msgbox.hxx>
+#include <i18npool/mslangid.hxx>
+#include <svtools/collatorres.hxx>
+#include <unotools/collatorwrapper.hxx>
+#include <unotools/localedatawrapper.hxx>
+#include <comphelper/processfactory.hxx>
+
+#include "scitems.hxx"
+#include "uiitems.hxx"
+#include "viewdata.hxx"
+#include "document.hxx"
+#include "global.hxx"
+#include "dbcolect.hxx"
+#include "userlist.hxx"
+#include "rangeutl.hxx"
+#include "scresid.hxx"
+#include "sc.hrc"       // -> Slot IDs
+#include "globstr.hrc"
+
+#include "sortdlg.hxx"
+#include "sortdlg.hrc"
+
+#define _TPSORT_CXX
+#include "tpsort.hxx"
+#undef _TPSORT_CXX
+
+using namespace com::sun::star;
+
+// STATIC DATA -----------------------------------------------------------
+
+static USHORT pSortRanges[] =
+{
+	SID_SORT,
+	SID_SORT,
+	0
+};
+
+// -----------------------------------------------------------------------
+
+/*
+ * Da sich Einstellungen auf der zweiten TabPage (Optionen) auf
+ * die erste TabPage auswirken, muss es die Moeglichkeit geben,
+ * dies der jeweils anderen Seite mitzuteilen.
+ *
+ * Im Moment wird dieses Problem ueber zwei Datenmember des TabDialoges
+ * geloest. Wird eine Seite Aktiviert/Deaktiviert, so gleicht sie diese
+ * Datenmember mit dem eigenen Zustand ab (->Activate()/Deactivate()).
+ *
+ * 31.01.95:
+ * Die Klasse SfxTabPage bietet mittlerweile ein Verfahren an:
+ *
+ * virtual BOOL HasExchangeSupport() const; -> return TRUE;
+ * virtual void ActivatePage(const SfxItemSet &);
+ * virtual int	DeactivatePage(SfxItemSet * = 0);
+ *
+ * muss noch geaendert werden!
+ */
+
+//========================================================================
+//========================================================================
+// Sortierkriterien-Tabpage:
+
+ScTabPageSortFields::ScTabPageSortFields( Window*			pParent,
+										  const SfxItemSet& rArgSet )
+
+	:	SfxTabPage		( pParent,
+						  ScResId( RID_SCPAGE_SORT_FIELDS ),
+						  rArgSet ),
+		//
+        aFlSort1        ( this, ScResId( FL_SORT1  ) ),
+		aLbSort1		( this, ScResId( LB_SORT1  ) ),
+        aBtnUp1         ( this, ScResId( BTN_UP1   ) ),
+		aBtnDown1		( this, ScResId( BTN_DOWN1 ) ),
+		//
+        aFlSort2        ( this, ScResId( FL_SORT2  ) ),
+		aLbSort2		( this, ScResId( LB_SORT2  ) ),
+        aBtnUp2         ( this, ScResId( BTN_UP2   ) ),
+		aBtnDown2		( this, ScResId( BTN_DOWN2 ) ),
+		//
+        aFlSort3        ( this, ScResId( FL_SORT3  ) ),
+		aLbSort3		( this, ScResId( LB_SORT3  ) ),
+        aBtnUp3         ( this, ScResId( BTN_UP3   ) ),
+		aBtnDown3		( this, ScResId( BTN_DOWN3 ) ),
+
+		aStrUndefined	( ScResId( SCSTR_UNDEFINED ) ),
+		aStrColumn		( ScResId( SCSTR_COLUMN ) ),
+		aStrRow 		( ScResId( SCSTR_ROW ) ),
+		//
+#if !TEST_LAYOUT
+		nWhichSort		( rArgSet.GetPool()->GetWhich( SID_SORT ) ),
+#else /* TEST_LAYOUT */
+		nWhichSort		( 0 ),
+#endif /* TEST_LAYOUT */
+		pDlg			( (ScSortDlg*)(GetParent()->GetParent()) ),
+		pViewData		( NULL ),
+#if !TEST_LAYOUT
+		rSortData		( ((const ScSortItem&)
+						   rArgSet.Get( nWhichSort )).
+								GetSortData() ),
+#else /* TEST_LAYOUT */
+		rSortData		( *new ScSortParam() ),
+#endif /* TEST_LAYOUT */
+		nFieldCount 	( 0 ),
+		bHasHeader		( FALSE ),
+		bSortByRows 	( FALSE )
+{
+	Init();
+	FreeResource();
+	SetExchangeSupport();
+}
+
+// -----------------------------------------------------------------------
+
+__EXPORT ScTabPageSortFields::~ScTabPageSortFields()
+{
+}
+
+// -----------------------------------------------------------------------
+
+void ScTabPageSortFields::Init()
+{
+#if !TEST_LAYOUT
+	const ScSortItem& rSortItem = (const ScSortItem&)
+								  GetItemSet().Get( nWhichSort );
+
+	pViewData = rSortItem.GetViewData();
+
+	DBG_ASSERT( pViewData, "ViewData not found!" );
+#endif /* !TEST_LAYOUT */
+
+	nFieldArr[0] = 0;
+    nFirstCol = 0;
+    nFirstRow = 0;
+
+	aLbSort1.SetSelectHdl( LINK( this, ScTabPageSortFields, SelectHdl ) );
+	aLbSort2.SetSelectHdl( LINK( this, ScTabPageSortFields, SelectHdl ) );
+	aLbSort3.SetSelectHdl( LINK( this, ScTabPageSortFields, SelectHdl ) );
+	aLbSort1.Clear();
+	aLbSort2.Clear();
+	aLbSort3.Clear();
+
+	aSortLbArr[0]		= &aLbSort1;
+	aSortLbArr[1]		= &aLbSort2;
+	aSortLbArr[2]		= &aLbSort3;
+	aDirBtnArr[0][0]	= &aBtnUp1;
+	aDirBtnArr[0][1]	= &aBtnDown1;
+	aDirBtnArr[1][0]	= &aBtnUp2;
+	aDirBtnArr[1][1]	= &aBtnDown2;
+	aDirBtnArr[2][0]	= &aBtnUp3;
+	aDirBtnArr[2][1]	= &aBtnDown3;
+    aFlArr[0]           = &aFlSort1;
+    aFlArr[1]           = &aFlSort2;
+    aFlArr[2]           = &aFlSort3;
+}
+
+//------------------------------------------------------------------------
+
+USHORT* __EXPORT ScTabPageSortFields::GetRanges()
+{
+	return pSortRanges;
+}
+
+// -----------------------------------------------------------------------
+
+SfxTabPage* __EXPORT ScTabPageSortFields::Create( Window*	pParent,
+										 const SfxItemSet&	rArgSet )
+{
+	return ( new ScTabPageSortFields( pParent, rArgSet ) );
+}
+
+// -----------------------------------------------------------------------
+
+void __EXPORT ScTabPageSortFields::Reset( const SfxItemSet& /* rArgSet */ )
+{
+	bSortByRows = rSortData.bByRow;
+	bHasHeader	= rSortData.bHasHeader;
+
+	if ( aLbSort1.GetEntryCount() == 0 )
+		FillFieldLists();
+
+	// Selektieren der ListBoxen:
+
+	if ( rSortData.bDoSort[0] )
+	{
+		for ( USHORT i=0; i<3; i++ )
+		{
+			if ( rSortData.bDoSort[i] )
+			{
+				aSortLbArr[i]->SelectEntryPos(
+					 GetFieldSelPos( rSortData.nField[i] ) );
+
+				(rSortData.bAscending[i])
+					? aDirBtnArr[i][0]->Check() 	// Up
+					: aDirBtnArr[i][1]->Check();	// Down
+			}
+			else
+			{
+				aSortLbArr[i]->SelectEntryPos( 0 ); // "keiner" selektieren
+				aDirBtnArr[i][0]->Check();			// Up
+			}
+		}
+
+		EnableField( 1 );
+		EnableField( 2 );
+		EnableField( 3 );
+		if ( aLbSort1.GetSelectEntryPos() == 0 )
+			DisableField( 2 );
+		if ( aLbSort2.GetSelectEntryPos() == 0 )
+			DisableField( 3 );
+	}
+	else
+	{
+		aLbSort1.SelectEntryPos( 1 );
+		aLbSort2.SelectEntryPos( 0 );
+		aLbSort3.SelectEntryPos( 0 );
+		aBtnUp1.Check();
+		aBtnUp2.Check();
+		aBtnUp3.Check();
+		EnableField ( 1 );
+		EnableField ( 2 );
+		DisableField( 3 );
+	}
+
+	if ( pDlg )
+	{
+		pDlg->SetByRows ( bSortByRows );
+		pDlg->SetHeaders( bHasHeader );
+	}
+}
+
+// -----------------------------------------------------------------------
+
+BOOL __EXPORT ScTabPageSortFields::FillItemSet( SfxItemSet& rArgSet )
+{
+	ScSortParam theSortData = rSortData;
+	if (pDlg)
+	{
+		const SfxItemSet* pExample = pDlg->GetExampleSet();
+		const SfxPoolItem* pItem;
+		if ( pExample && pExample->GetItemState( nWhichSort, TRUE, &pItem ) == SFX_ITEM_SET )
+			theSortData = ((const ScSortItem*)pItem)->GetSortData();
+	}
+
+	USHORT	nSort1Pos = aLbSort1.GetSelectEntryPos();
+	USHORT	nSort2Pos = aLbSort2.GetSelectEntryPos();
+	USHORT	nSort3Pos = aLbSort3.GetSelectEntryPos();
+
+	DBG_ASSERT(    (nSort1Pos <= SC_MAXFIELDS)
+				&& (nSort2Pos <= SC_MAXFIELDS)
+				&& (nSort3Pos <= SC_MAXFIELDS),
+				"Array-Range Fehler!" );
+
+	if ( nSort1Pos == LISTBOX_ENTRY_NOTFOUND ) nSort1Pos = 0;
+	if ( nSort2Pos == LISTBOX_ENTRY_NOTFOUND ) nSort2Pos = 0;
+	if ( nSort3Pos == LISTBOX_ENTRY_NOTFOUND ) nSort3Pos = 0;
+
+	if ( nSort1Pos > 0 )
+	{
+		theSortData.bDoSort[0] = (nSort1Pos > 0);
+		theSortData.bDoSort[1] = (nSort2Pos > 0);
+		theSortData.bDoSort[2] = (nSort3Pos > 0);
+
+		// wenn auf Optionen-Seite "OK" gewaehlt wurde und
+		// dabei die Sortierrichtung umgestellt wurde, so
+		// wird das erste Feld der jeweiligen Richtung als
+		// Sortierkriterium gewaehlt (steht in nFieldArr[0]):
+		if ( bSortByRows != pDlg->GetByRows() )
+		{
+			theSortData.nField[0] =
+			theSortData.nField[1] =
+            theSortData.nField[2] = ( bSortByRows ?
+                    static_cast<SCCOLROW>(nFirstRow) :
+                    static_cast<SCCOLROW>(nFirstCol) );
+		}
+		else
+		{
+			theSortData.nField[0] = nFieldArr[nSort1Pos];
+			theSortData.nField[1] = nFieldArr[nSort2Pos];
+			theSortData.nField[2] = nFieldArr[nSort3Pos];
+		}
+
+		theSortData.bAscending[0] = aBtnUp1.IsChecked();
+		theSortData.bAscending[1] = aBtnUp2.IsChecked();
+		theSortData.bAscending[2] = aBtnUp3.IsChecked();
+		//	bHasHeader ist in ScTabPageSortOptions::FillItemSet, wo es hingehoert
+	}
+	else
+	{
+		theSortData.bDoSort[0] =
+		theSortData.bDoSort[1] =
+		theSortData.bDoSort[2] = FALSE;
+	}
+
+	rArgSet.Put( ScSortItem( SCITEM_SORTDATA, NULL, &theSortData ) );
+
+	return TRUE;
+}
+
+// -----------------------------------------------------------------------
+
+// fuer Datenaustausch ohne Dialog-Umweg: (! noch zu tun !)
+// void ScTabPageSortFields::ActivatePage( const SfxItemSet& rSet )
+
+void __EXPORT ScTabPageSortFields::ActivatePage()
+{
+	if ( pDlg )
+	{
+		if (   bHasHeader  != pDlg->GetHeaders()
+			|| bSortByRows != pDlg->GetByRows()   )
+		{
+			USHORT	nCurSel1 = aLbSort1.GetSelectEntryPos();
+			USHORT	nCurSel2 = aLbSort2.GetSelectEntryPos();
+			USHORT	nCurSel3 = aLbSort3.GetSelectEntryPos();
+
+			bHasHeader	= pDlg->GetHeaders();
+			bSortByRows = pDlg->GetByRows();
+			FillFieldLists();
+			aLbSort1.SelectEntryPos( nCurSel1 );
+			aLbSort2.SelectEntryPos( nCurSel2 );
+			aLbSort3.SelectEntryPos( nCurSel3 );
+		}
+	}
+}
+
+// -----------------------------------------------------------------------
+
+int __EXPORT ScTabPageSortFields::DeactivatePage( SfxItemSet* pSetP )
+{
+	if ( pDlg )
+	{
+		if ( bHasHeader != pDlg->GetHeaders() )
+			pDlg->SetHeaders( bHasHeader );
+
+		if ( bSortByRows != pDlg->GetByRows() )
+			pDlg->SetByRows( bSortByRows );
+	}
+
+    if ( pSetP )
+        FillItemSet( *pSetP );
+
+	return SfxTabPage::LEAVE_PAGE;
+}
+
+// -----------------------------------------------------------------------
+
+void ScTabPageSortFields::DisableField( USHORT nField )
+{
+	nField--;
+
+    if ( nField<=2 )
+	{
+		aSortLbArr[nField]	 ->Disable();
+		aDirBtnArr[nField][0]->Disable();
+		aDirBtnArr[nField][1]->Disable();
+        aFlArr[nField]       ->Disable();
+	}
+}
+
+// -----------------------------------------------------------------------
+
+void ScTabPageSortFields::EnableField( USHORT nField )
+{
+	nField--;
+
+    if ( nField<=2 )
+	{
+		aSortLbArr[nField]	 ->Enable();
+		aDirBtnArr[nField][0]->Enable();
+		aDirBtnArr[nField][1]->Enable();
+        aFlArr[nField]       ->Enable();
+	}
+}
+
+// -----------------------------------------------------------------------
+
+void ScTabPageSortFields::FillFieldLists()
+{
+	if ( pViewData )
+	{
+		ScDocument* pDoc = pViewData->GetDocument();
+
+		if ( pDoc )
+		{
+			aLbSort1.Clear();
+			aLbSort2.Clear();
+			aLbSort3.Clear();
+			aLbSort1.InsertEntry( aStrUndefined, 0 );
+			aLbSort2.InsertEntry( aStrUndefined, 0 );
+			aLbSort3.InsertEntry( aStrUndefined, 0 );
+
+			SCCOL	nFirstSortCol	= rSortData.nCol1;
+			SCROW	nFirstSortRow	= rSortData.nRow1;
+			SCTAB	nTab		= pViewData->GetTabNo();
+			USHORT	i			= 1;
+
+			if ( bSortByRows )
+			{
+				String	aFieldName;
+				SCCOL	nMaxCol = rSortData.nCol2;
+				SCCOL	col;
+
+				for ( col=nFirstSortCol; col<=nMaxCol && i<SC_MAXFIELDS; col++ )
+				{
+					pDoc->GetString( col, nFirstSortRow, nTab, aFieldName );
+					if ( !bHasHeader || (aFieldName.Len() == 0) )
+					{
+						aFieldName	= aStrColumn;
+						aFieldName += ' ';
+						aFieldName += ColToAlpha( col );
+					}
+					nFieldArr[i] = col;
+					aLbSort1.InsertEntry( aFieldName, i );
+					aLbSort2.InsertEntry( aFieldName, i );
+					aLbSort3.InsertEntry( aFieldName, i );
+					i++;
+				}
+			}
+			else
+			{
+				String	aFieldName;
+				SCROW	nMaxRow = rSortData.nRow2;
+				SCROW	row;
+
+				for ( row=nFirstSortRow; row<=nMaxRow && i<SC_MAXFIELDS; row++ )
+				{
+					pDoc->GetString( nFirstSortCol, row, nTab, aFieldName );
+					if ( !bHasHeader || (aFieldName.Len() == 0) )
+					{
+						aFieldName	= aStrRow;
+						aFieldName += ' ';
+						aFieldName += String::CreateFromInt32( row+1 );
+					}
+					nFieldArr[i] = row;
+					aLbSort1.InsertEntry( aFieldName, i );
+					aLbSort2.InsertEntry( aFieldName, i );
+					aLbSort3.InsertEntry( aFieldName, i );
+					i++;
+				}
+			}
+			nFieldCount = i;
+		}
+	}
+}
+
+//------------------------------------------------------------------------
+
+USHORT ScTabPageSortFields::GetFieldSelPos( SCCOLROW nField )
+{
+	USHORT	nFieldPos	= 0;
+	BOOL	bFound		= FALSE;
+
+	for ( USHORT n=1; n<nFieldCount && !bFound; n++ )
+	{
+		if ( nFieldArr[n] == nField )
+		{
+			nFieldPos = n;
+			bFound = TRUE;
+		}
+	}
+
+	return nFieldPos;
+}
+
+// -----------------------------------------------------------------------
+// Handler:
+//---------
+
+IMPL_LINK( ScTabPageSortFields, SelectHdl, ListBox *, pLb )
+{
+	String aSelEntry = pLb->GetSelectEntry();
+
+	if ( pLb == &aLbSort1 )
+	{
+		if ( aSelEntry == aStrUndefined )
+		{
+			aLbSort2.SelectEntryPos( 0 );
+			aLbSort3.SelectEntryPos( 0 );
+
+            if ( aFlSort2.IsEnabled() )
+				DisableField( 2 );
+
+            if ( aFlSort3.IsEnabled() )
+				DisableField( 3 );
+		}
+		else
+		{
+            if ( !aFlSort2.IsEnabled() )
+				EnableField( 2 );
+		}
+	}
+	else if ( pLb == &aLbSort2 )
+	{
+		if ( aSelEntry == aStrUndefined )
+		{
+			aLbSort3.SelectEntryPos( 0 );
+            if ( aFlSort3.IsEnabled() )
+				DisableField( 3 );
+		}
+		else
+		{
+            if ( !aFlSort3.IsEnabled() )
+				EnableField( 3 );
+		}
+	}
+	return 0;
+}
+
+//========================================================================
+// Sortieroptionen-Tabpage:
+//========================================================================
+
+#include <layout/layout-pre.hxx>
+
+#if ENABLE_LAYOUT
+#undef ScResId
+#define ScResId(x) #x
+#undef SfxTabPage
+#define SfxTabPage( parent, id, args ) TabPage( parent, "sort-options.xml", id, 0, &args )
+#endif /* ENABLE_LAYOUT */
+
+ScTabPageSortOptions::ScTabPageSortOptions( Window* 			pParent,
+											const SfxItemSet&	rArgSet )
+
+	:	SfxTabPage		( pParent,
+						  ScResId( RID_SCPAGE_SORT_OPTIONS ),
+						  rArgSet ),
+		//
+		aBtnCase		( this, ScResId( BTN_CASESENSITIVE ) ),
+		aBtnHeader		( this, ScResId( BTN_LABEL ) ),
+		aBtnFormats 	( this, ScResId( BTN_FORMATS ) ),
+		aBtnCopyResult	( this, ScResId( BTN_COPYRESULT ) ),
+		aBtnNaturalSort	( this, ScResId( BTN_NATURALSORT ) ),
+		aLbOutPos		( this, ScResId( LB_OUTAREA ) ),
+		aEdOutPos		( this, ScResId( ED_OUTAREA ) ),
+		aBtnSortUser	( this, ScResId( BTN_SORT_USER ) ),
+		aLbSortUser 	( this, ScResId( LB_SORT_USER ) ),
+        aFtLanguage     ( this, ScResId( FT_LANGUAGE ) ),
+		aLbLanguage		( this, ScResId( LB_LANGUAGE ) ),
+        aFtAlgorithm    ( this, ScResId( FT_ALGORITHM ) ),
+		aLbAlgorithm	( this, ScResId( LB_ALGORITHM ) ),
+		aLineDirection	( this, ScResId( FL_DIRECTION ) ),
+		aBtnTopDown 	( this, ScResId( BTN_TOP_DOWN ) ),
+		aBtnLeftRight	( this, ScResId( BTN_LEFT_RIGHT ) ),
+// 		aFtAreaLabel	( this, ScResId( FT_AREA_LABEL ) ),
+//		aFtArea 		( this, ScResId( FT_AREA ) ),
+		//
+#if ENABLE_LAYOUT
+#undef ScResId
+#define ScResId(x) this, #x
+#endif /* ENABLE_LAYOUT */
+		aStrRowLabel	( ScResId( STR_ROW_LABEL ) ),
+		aStrColLabel	( ScResId( STR_COL_LABEL ) ),
+		aStrUndefined	( ScResId( SCSTR_UNDEFINED ) ),
+		aStrNoName		( ScGlobal::GetRscString(STR_DB_NONAME) ),
+		//
+#if !TEST_LAYOUT
+		nWhichSort		( rArgSet.GetPool()->GetWhich( SID_SORT ) ),
+		rSortData		( ((const ScSortItem&)
+						  rArgSet.Get( nWhichSort )).GetSortData() ),
+#else /* TEST_LAYOUT */
+		nWhichSort		( 0 ),
+		rSortData		( *new ScSortParam() ),
+#endif /* TEST_LAYOUT */
+		pViewData		( NULL ),
+		pDoc			( NULL ),
+		pDlg			( (ScSortDlg*)(GetParent() ? GetParent()->GetParent() : 0 ) ),
+		pColRes			( NULL ),
+		pColWrap		( NULL )
+{
+#if TEST_LAYOUT
+    (void) rArgSet;
+#endif /* TEST_LAYOUT */
+	Init();
+	FreeResource();
+	SetExchangeSupport();
+}
+
+// -----------------------------------------------------------------------
+
+__EXPORT ScTabPageSortOptions::~ScTabPageSortOptions()
+{
+#if !TEST_LAYOUT
+	USHORT nEntries = aLbOutPos.GetEntryCount();
+
+	for ( USHORT i=1; i<nEntries; i++ )
+		delete (String*)aLbOutPos.GetEntryData( i );
+#endif /* !TEST_LAYOUT */
+
+	delete pColRes;
+	delete pColWrap;		//! not if from document
+}
+
+// -----------------------------------------------------------------------
+
+void ScTabPageSortOptions::Init()
+{
+// 	aStrAreaLabel = aFtAreaLabel.GetText();
+// 	aStrAreaLabel.Append( (sal_Unicode) ' ' );
+
+	//	CollatorRessource has user-visible names for sort algorithms
+	pColRes = new CollatorRessource();
+
+	//!	use CollatorWrapper from document?
+	pColWrap = new CollatorWrapper( comphelper::getProcessServiceFactory() );
+
+#if !TEST_LAYOUT
+	const ScSortItem&	rSortItem = (const ScSortItem&)
+									GetItemSet().Get( nWhichSort );
+#endif /* !TEST_LAYOUT */
+
+	aLbOutPos.SetSelectHdl	  ( LINK( this, ScTabPageSortOptions, SelOutPosHdl ) );
+	aBtnCopyResult.SetClickHdl( LINK( this, ScTabPageSortOptions, EnableHdl ) );
+	aBtnSortUser.SetClickHdl  ( LINK( this, ScTabPageSortOptions, EnableHdl ) );
+	aBtnTopDown.SetClickHdl	  ( LINK( this, ScTabPageSortOptions, SortDirHdl ) );
+	aBtnLeftRight.SetClickHdl ( LINK( this, ScTabPageSortOptions, SortDirHdl ) );
+	aLbLanguage.SetSelectHdl  ( LINK( this, ScTabPageSortOptions, FillAlgorHdl ) );
+
+#if !TEST_LAYOUT
+	pViewData = rSortItem.GetViewData();
+#endif /* TEST_LAYOUT */
+	pDoc	  = pViewData ? pViewData->GetDocument() : NULL;
+
+	DBG_ASSERT( pViewData, "ViewData not found! :-/" );
+
+#if !TEST_LAYOUT
+	if ( pViewData && pDoc )
+	{
+		String			theArea;
+		ScDBCollection* pDBColl 	= pDoc->GetDBCollection();
+		String			theDbArea;
+		String			theDbName	= aStrNoName;
+		const SCTAB	nCurTab		= pViewData->GetTabNo();
+        const ScAddress::Convention eConv = pDoc->GetAddressConvention();
+#endif /* !TEST_LAYOUT */
+
+		aLbOutPos.Clear();
+		aLbOutPos.InsertEntry( aStrUndefined, 0 );
+		aLbOutPos.Disable();
+
+#if !TEST_LAYOUT
+		ScAreaNameIterator aIter( pDoc );
+		String aName;
+		ScRange aRange;
+		String aRefStr;
+		while ( aIter.Next( aName, aRange ) )
+		{
+			USHORT nInsert = aLbOutPos.InsertEntry( aName );
+
+			aRange.aStart.Format( aRefStr, SCA_ABS_3D, pDoc, eConv );
+			aLbOutPos.SetEntryData( nInsert, new String( aRefStr ) );
+		}
+#endif /* !TEST_LAYOUT */
+
+		aLbOutPos.SelectEntryPos( 0 );
+		aEdOutPos.SetText( EMPTY_STRING );
+
+#if !TEST_LAYOUT
+		/*
+		 * Ueberpruefen, ob es sich bei dem uebergebenen
+		 * Bereich um einen Datenbankbereich handelt:
+		 */
+
+		ScAddress aScAddress( rSortData.nCol1, rSortData.nRow1, nCurTab );
+		ScRange( aScAddress,
+				 ScAddress( rSortData.nCol2, rSortData.nRow2, nCurTab )
+			   ).Format( theArea, SCR_ABS, pDoc, eConv );
+
+		if ( pDBColl )
+		{
+			ScDBData* pDBData
+					= pDBColl->GetDBAtArea( nCurTab,
+											rSortData.nCol1, rSortData.nRow1,
+											rSortData.nCol2, rSortData.nRow2 );
+			if ( pDBData )
+			{
+				pDBData->GetName( theDbName );
+				aBtnHeader.Check( pDBData->HasHeader() );
+			}
+		}
+
+		theArea.AppendAscii(RTL_CONSTASCII_STRINGPARAM(" ("));
+		theArea += theDbName;
+		theArea += ')';
+
+		//aFtArea.SetText( theArea );
+		//theArea.Insert( aStrAreaLabel, 0 );
+		//aFtAreaLabel.SetText( theArea );
+
+		aBtnHeader.SetText( aStrColLabel );
+	}
+#endif /* TEST_LAYOUT */
+
+	FillUserSortListBox();
+
+	//	get available languages
+
+    aLbLanguage.SetLanguageList( LANG_LIST_ALL | LANG_LIST_ONLY_KNOWN, FALSE );
+	aLbLanguage.InsertLanguage( LANGUAGE_SYSTEM );
+}
+
+//------------------------------------------------------------------------
+
+USHORT* __EXPORT ScTabPageSortOptions::GetRanges()
+{
+	return pSortRanges;
+}
+
+// -----------------------------------------------------------------------
+
+#if ENABLE_LAYOUT
+#undef SfxTabPage
+#define SfxTabPage TabPage
+#endif /* ENABLE_LAYOUT */
+SfxTabPage* __EXPORT ScTabPageSortOptions::Create(
+											Window*				pParent,
+											const SfxItemSet&	rArgSet )
+{
+	return ( new ScTabPageSortOptions( pParent, rArgSet ) );
+}
+
+// -----------------------------------------------------------------------
+
+void __EXPORT ScTabPageSortOptions::Reset( const SfxItemSet& /* rArgSet */ )
+{
+	if ( rSortData.bUserDef )
+	{
+		aBtnSortUser.Check( TRUE );
+		aLbSortUser.Enable();
+		aLbSortUser.SelectEntryPos( rSortData.nUserIndex );
+	}
+	else
+	{
+		aBtnSortUser.Check( FALSE );
+		aLbSortUser.Disable();
+		aLbSortUser.SelectEntryPos( 0 );
+	}
+
+	aBtnCase.Check			( rSortData.bCaseSens );
+	aBtnFormats.Check		( rSortData.bIncludePattern );
+	aBtnHeader.Check		( rSortData.bHasHeader );
+	aBtnNaturalSort.Check	( rSortData.bNaturalSort );
+
+	if ( rSortData.bByRow )
+	{
+		aBtnTopDown.Check();
+		aBtnHeader.SetText( aStrColLabel );
+	}
+	else
+	{
+		aBtnLeftRight.Check();
+		aBtnHeader.SetText( aStrRowLabel );
+	}
+
+	LanguageType eLang = MsLangId::convertLocaleToLanguage( rSortData.aCollatorLocale );
+	if ( eLang == LANGUAGE_DONTKNOW )
+		eLang = LANGUAGE_SYSTEM;
+	aLbLanguage.SelectLanguage( eLang );
+	FillAlgorHdl( &aLbLanguage );				// get algorithms, select default
+	if ( rSortData.aCollatorAlgorithm.Len() )
+		aLbAlgorithm.SelectEntry( pColRes->GetTranslation( rSortData.aCollatorAlgorithm ) );
+
+	if ( pDoc && !rSortData.bInplace )
+	{
+		String aStr;
+		USHORT nFormat = (rSortData.nDestTab != pViewData->GetTabNo())
+							? SCR_ABS_3D
+							: SCR_ABS;
+
+		theOutPos.Set( rSortData.nDestCol,
+					   rSortData.nDestRow,
+					   rSortData.nDestTab );
+
+		theOutPos.Format( aStr, nFormat, pDoc, pDoc->GetAddressConvention() );
+		aBtnCopyResult.Check();
+		aLbOutPos.Enable();
+		aEdOutPos.Enable();
+		aEdOutPos.SetText( aStr );
+		EdOutPosModHdl( &aEdOutPos );
+		aEdOutPos.GrabFocus();
+		aEdOutPos.SetSelection( Selection( 0, SELECTION_MAX ) );
+	}
+	else
+	{
+		aBtnCopyResult.Check( FALSE );
+		aLbOutPos.Disable();
+		aEdOutPos.Disable();
+		aEdOutPos.SetText( EMPTY_STRING );
+	}
+}
+
+// -----------------------------------------------------------------------
+
+BOOL __EXPORT ScTabPageSortOptions::FillItemSet( SfxItemSet& rArgSet )
+{
+	ScSortParam theSortData = rSortData;
+	if (pDlg)
+	{
+		const SfxItemSet* pExample = pDlg->GetExampleSet();
+		const SfxPoolItem* pItem;
+		if ( pExample && pExample->GetItemState( nWhichSort, TRUE, &pItem ) == SFX_ITEM_SET )
+			theSortData = ((const ScSortItem*)pItem)->GetSortData();
+	}
+
+	theSortData.bByRow			= aBtnTopDown.IsChecked();
+	theSortData.bHasHeader		= aBtnHeader.IsChecked();
+	theSortData.bCaseSens		= aBtnCase.IsChecked();
+	theSortData.bNaturalSort	= aBtnNaturalSort.IsChecked();
+	theSortData.bIncludePattern = aBtnFormats.IsChecked();
+	theSortData.bInplace		= !aBtnCopyResult.IsChecked();
+	theSortData.nDestCol		= theOutPos.Col();
+	theSortData.nDestRow		= theOutPos.Row();
+	theSortData.nDestTab		= theOutPos.Tab();
+	theSortData.bUserDef		= aBtnSortUser.IsChecked();
+	theSortData.nUserIndex		= (aBtnSortUser.IsChecked())
+									? aLbSortUser.GetSelectEntryPos()
+									: 0;
+
+	// get locale
+	LanguageType eLang = aLbLanguage.GetSelectLanguage();
+    theSortData.aCollatorLocale = MsLangId::convertLanguageToLocale( eLang, false );
+
+	// get algorithm
+	String sAlg;
+	if ( eLang != LANGUAGE_SYSTEM )
+	{
+        uno::Sequence<rtl::OUString> aAlgos = pColWrap->listCollatorAlgorithms(
+                theSortData.aCollatorLocale );
+		USHORT nSel = aLbAlgorithm.GetSelectEntryPos();
+		if ( nSel < aAlgos.getLength() )
+			sAlg = aAlgos[nSel];
+	}
+	theSortData.aCollatorAlgorithm = sAlg;
+
+#if !TEST_LAYOUT
+	rArgSet.Put( ScSortItem( SCITEM_SORTDATA, &theSortData ) );
+#endif /* TEST_LAYOUT */
+	return TRUE;
+}
+
+// -----------------------------------------------------------------------
+
+// fuer Datenaustausch ohne Dialog-Umweg: (! noch zu tun !)
+// void ScTabPageSortOptions::ActivatePage( const SfxItemSet& rSet )
+void __EXPORT ScTabPageSortOptions::ActivatePage()
+{
+	if ( pDlg )
+	{
+		if ( aBtnHeader.IsChecked() != pDlg->GetHeaders() )
+		{
+			aBtnHeader.Check( pDlg->GetHeaders() );
+		}
+
+		if ( aBtnTopDown.IsChecked() != pDlg->GetByRows() )
+		{
+			aBtnTopDown.Check( pDlg->GetByRows() );
+			aBtnLeftRight.Check( !pDlg->GetByRows() );
+		}
+
+		aBtnHeader.SetText( (pDlg->GetByRows())
+							? aStrColLabel
+							: aStrRowLabel );
+	}
+}
+
+// -----------------------------------------------------------------------
+
+int __EXPORT ScTabPageSortOptions::DeactivatePage( SfxItemSet* pSetP )
+{
+	BOOL bPosInputOk = TRUE;
+
+	if ( aBtnCopyResult.IsChecked() )
+	{
+		String		thePosStr = aEdOutPos.GetText();
+		ScAddress	thePos;
+		xub_StrLen	nColonPos = thePosStr.Search( ':' );
+
+		if ( STRING_NOTFOUND != nColonPos )
+			thePosStr.Erase( nColonPos );
+
+		if ( pViewData )
+		{
+			//	visible table is default for input without table
+			//	must be changed to GetRefTabNo when sorting has RefInput!
+			thePos.SetTab( pViewData->GetTabNo() );
+		}
+
+		USHORT nResult = thePos.Parse( thePosStr, pDoc, pDoc->GetAddressConvention() );
+
+		bPosInputOk = ( SCA_VALID == (nResult & SCA_VALID) );
+
+		if ( !bPosInputOk )
+		{
+#if !ENABLE_LAYOUT
+			ErrorBox( this, WinBits( WB_OK | WB_DEF_OK ),
+					 ScGlobal::GetRscString( STR_INVALID_TABREF )
+					).Execute();
+#endif /* ENABLE_LAYOUT */
+			aEdOutPos.GrabFocus();
+			aEdOutPos.SetSelection( Selection( 0, SELECTION_MAX ) );
+			theOutPos.Set(0,0,0);
+		}
+		else
+		{
+			aEdOutPos.SetText( thePosStr );
+			theOutPos = thePos;
+		}
+	}
+
+	if ( pDlg && bPosInputOk )
+	{
+		pDlg->SetHeaders( aBtnHeader.IsChecked() );
+		pDlg->SetByRows ( aBtnTopDown.IsChecked() );
+	}
+
+    if ( pSetP && bPosInputOk )
+        FillItemSet( *pSetP );
+
+	return bPosInputOk ? SfxTabPage::LEAVE_PAGE : SfxTabPage::KEEP_PAGE;
+}
+
+// -----------------------------------------------------------------------
+
+void ScTabPageSortOptions::FillUserSortListBox()
+{
+	ScUserList* pUserLists = ScGlobal::GetUserList();
+
+	aLbSortUser.Clear();
+	if ( pUserLists )
+	{
+		USHORT nCount = pUserLists->GetCount();
+		if ( nCount > 0 )
+			for ( USHORT i=0; i<nCount; i++ )
+				aLbSortUser.InsertEntry( (*pUserLists)[i]->GetString() );
+	}
+}
+
+// -----------------------------------------------------------------------
+// Handler:
+
+IMPL_LINK( ScTabPageSortOptions, EnableHdl, CheckBox *, pBox )
+{
+	if ( pBox == &aBtnCopyResult )
+	{
+		if ( pBox->IsChecked() )
+		{
+			aLbOutPos.Enable();
+			aEdOutPos.Enable();
+			aEdOutPos.GrabFocus();
+		}
+		else
+		{
+			aLbOutPos.Disable();
+			aEdOutPos.Disable();
+		}
+	}
+	else if ( pBox == &aBtnSortUser )
+	{
+		if ( pBox->IsChecked() )
+		{
+			aLbSortUser.Enable();
+			aLbSortUser.GrabFocus();
+		}
+		else
+			aLbSortUser.Disable();
+	}
+	return 0;
+}
+
+// -----------------------------------------------------------------------
+
+IMPL_LINK( ScTabPageSortOptions, SelOutPosHdl, ListBox *, pLb )
+{
+	if ( pLb == &aLbOutPos )
+	{
+		String	aString;
+		USHORT	nSelPos = aLbOutPos.GetSelectEntryPos();
+
+		if ( nSelPos > 0 )
+			aString = *(String*)aLbOutPos.GetEntryData( nSelPos );
+
+		aEdOutPos.SetText( aString );
+	}
+	return 0;
+}
+
+// -----------------------------------------------------------------------
+
+IMPL_LINK( ScTabPageSortOptions, SortDirHdl, RadioButton *, pBtn )
+{
+	if ( pBtn == &aBtnTopDown )
+	{
+		aBtnHeader.SetText( aStrColLabel );
+	}
+	else if ( pBtn == &aBtnLeftRight )
+	{
+		aBtnHeader.SetText( aStrRowLabel );
+	}
+	return 0;
+}
+
+// -----------------------------------------------------------------------
+
+void __EXPORT ScTabPageSortOptions::EdOutPosModHdl( Edit* pEd )
+{
+	if ( pEd == &aEdOutPos )
+	{
+		String	theCurPosStr = aEdOutPos.GetText();
+		USHORT	nResult = ScAddress().Parse( theCurPosStr, pDoc, pDoc->GetAddressConvention() );
+
+		if ( SCA_VALID == (nResult & SCA_VALID) )
+		{
+			String*	pStr	= NULL;
+			BOOL	bFound	= FALSE;
+			USHORT	i		= 0;
+			USHORT	nCount	= aLbOutPos.GetEntryCount();
+
+			for ( i=2; i<nCount && !bFound; i++ )
+			{
+				pStr = (String*)aLbOutPos.GetEntryData( i );
+				bFound = (theCurPosStr == *pStr);
+			}
+
+			if ( bFound )
+				aLbOutPos.SelectEntryPos( --i );
+			else
+				aLbOutPos.SelectEntryPos( 0 );
+		}
+	}
+}
+
+// -----------------------------------------------------------------------
+
+IMPL_LINK( ScTabPageSortOptions, FillAlgorHdl, void *, EMPTYARG )
+{
+	aLbAlgorithm.SetUpdateMode( FALSE );
+	aLbAlgorithm.Clear();
+
+	LanguageType eLang = aLbLanguage.GetSelectLanguage();
+	if ( eLang == LANGUAGE_SYSTEM )
+	{
+		//	for LANGUAGE_SYSTEM no algorithm can be selected because
+		//	it wouldn't necessarily exist for other languages
+		//	-> leave list box empty if LANGUAGE_SYSTEM is selected
+        aFtAlgorithm.Enable( FALSE );           // nothing to select
+		aLbAlgorithm.Enable( FALSE );			// nothing to select
+	}
+	else
+	{
+		lang::Locale aLocale( MsLangId::convertLanguageToLocale( eLang ));
+		uno::Sequence<rtl::OUString> aAlgos = pColWrap->listCollatorAlgorithms( aLocale );
+
+		long nCount = aAlgos.getLength();
+		const rtl::OUString* pArray = aAlgos.getConstArray();
+		for (long i=0; i<nCount; i++)
+		{
+			String sAlg = pArray[i];
+			String sUser = pColRes->GetTranslation( sAlg );
+			aLbAlgorithm.InsertEntry( sUser, LISTBOX_APPEND );
+		}
+		aLbAlgorithm.SelectEntryPos( 0 );		// first entry is default
+        aFtAlgorithm.Enable( nCount > 1 );      // enable only if there is a choice
+		aLbAlgorithm.Enable( nCount > 1 );		// enable only if there is a choice
+	}
+
+	aLbAlgorithm.SetUpdateMode( TRUE );
+	return 0;
+}
+
+
diff --git a/toolkit/workben/layout/tpsort.hxx b/toolkit/workben/layout/tpsort.hxx
new file mode 100644
index 0000000..ed6bdc8
--- /dev/null
+++ toolkit/workben/layout/tpsort.hxx
@@ -0,0 +1,226 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: tpsort.hxx,v $
+ * $Revision: 1.9 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef SC_TPSORT_HXX
+#define SC_TPSORT_HXX
+
+
+#include <sfx2/tabdlg.hxx>
+#include <vcl/edit.hxx>
+#include <vcl/fixed.hxx>
+#include <vcl/lstbox.hxx>
+#include <svtools/stdctrl.hxx>
+#include <svx/langbox.hxx>
+
+
+#include "global.hxx"
+#include "address.hxx"
+
+//------------------------------------------------------------------------
+
+// +1 because one field is reserved for the "- undefined -" entry
+#define SC_MAXFIELDS	MAXCOLCOUNT+1
+
+class ScViewData;
+class ScSortDlg;
+struct ScSortParam;
+
+//========================================================================
+// Kriterien (Sort Criteria)
+
+class ScTabPageSortFields : public SfxTabPage
+{
+public:
+				ScTabPageSortFields( Window*			 pParent,
+									 const SfxItemSet&	 rArgSet );
+				~ScTabPageSortFields();
+
+	static	SfxTabPage*	Create		( Window*				pParent,
+									  const SfxItemSet& 	rArgSet );
+	static	USHORT*		GetRanges	();
+	virtual	BOOL		FillItemSet	( SfxItemSet& rArgSet );
+	virtual	void		Reset		( const SfxItemSet& rArgSet );
+
+protected:
+// fuer Datenaustausch (sollte noch umgestellt werden!)
+//	virtual void		ActivatePage	( const SfxItemSet& rSet );
+    using SfxTabPage::ActivatePage;
+    using SfxTabPage::DeactivatePage;
+	virtual void		ActivatePage	();
+	virtual int			DeactivatePage	( SfxItemSet* pSet = 0);
+
+private:
+    FixedLine       aFlSort1;
+	ListBox			aLbSort1;
+	RadioButton		aBtnUp1;
+	RadioButton 	aBtnDown1;
+
+    FixedLine       aFlSort2;
+	ListBox			aLbSort2;
+	RadioButton		aBtnUp2;
+	RadioButton 	aBtnDown2;
+
+    FixedLine       aFlSort3;
+	ListBox			aLbSort3;
+	RadioButton		aBtnUp3;
+	RadioButton 	aBtnDown3;
+
+	String			aStrUndefined;
+	String			aStrColumn;
+	String			aStrRow;
+
+	const USHORT		nWhichSort;
+	ScSortDlg*			pDlg;
+	ScViewData*			pViewData;
+	const ScSortParam&	rSortData;
+	SCCOLROW			nFieldArr[SC_MAXFIELDS];
+	USHORT				nFieldCount;
+	SCCOL				nFirstCol;
+	SCROW				nFirstRow;
+	BOOL				bHasHeader;
+	BOOL				bSortByRows;
+
+	ListBox*			aSortLbArr[3];
+	RadioButton*		aDirBtnArr[3][2];
+    FixedLine*          aFlArr[3];
+
+#ifdef _TPSORT_CXX
+private:
+	void	Init			();
+	void	DisableField	( USHORT nField );
+	void	EnableField		( USHORT nField );
+	void	FillFieldLists	();
+	USHORT	GetFieldSelPos	( SCCOLROW nField );
+
+	// Handler ------------------------
+	DECL_LINK( SelectHdl, ListBox * );
+#endif
+};
+
+//========================================================================
+// Sortieroptionen (Sort Options)
+
+class ScDocument;
+class ScRangeData;
+class CollatorRessource;
+class CollatorWrapper;
+
+#include <layout/layout.hxx>
+#include <layout/layout-pre.hxx>
+
+class ScTabPageSortOptions : public SfxTabPage
+{
+public:
+				ScTabPageSortOptions( Window*			 pParent,
+									  const SfxItemSet&	 rArgSet );
+				~ScTabPageSortOptions();
+
+#if !ENABLE_LAYOUT
+	static	SfxTabPage*	Create		( Window*				pParent,
+									  const SfxItemSet& 	rArgSet );
+#else /* ENABLE_LAYOUT */
+    static TabPage*	Create ( Window* parent, SfxItemSet const& set );
+#endif /* ENABLE_LAYOUT */
+	static	USHORT*		GetRanges	();
+	virtual	BOOL		FillItemSet	( SfxItemSet& rArgSet );
+	virtual	void		Reset		( const SfxItemSet& rArgSet );
+
+protected:
+// fuer Datenaustausch (sollte noch umgestellt werden!)
+//	virtual void		ActivatePage	( const SfxItemSet& rSet );
+    using SfxTabPage::ActivatePage;
+    using SfxTabPage::DeactivatePage;
+	virtual void		ActivatePage	();
+	virtual int			DeactivatePage	( SfxItemSet* pSet = 0);
+
+private:
+
+    CheckBox            aBtnCase;
+    CheckBox            aBtnHeader;
+    CheckBox            aBtnFormats;
+    CheckBox            aBtnCopyResult;
+
+    CheckBox			aBtnNaturalSort;
+    ListBox             aLbOutPos;
+    Edit                aEdOutPos;
+
+    CheckBox            aBtnSortUser;
+    ListBox             aLbSortUser;
+
+    FixedText           aFtLanguage;
+    SvxLanguageBox      aLbLanguage;
+    FixedText           aFtAlgorithm;
+    ListBox             aLbAlgorithm;
+
+    FixedLine           aLineDirection;
+    RadioButton         aBtnTopDown;
+    RadioButton         aBtnLeftRight;
+
+//     FixedText           aFtAreaLabel;
+//  FixedInfo           aFtArea;
+#if ENABLE_LAYOUT
+#define String layout::LocalizedString
+#endif /* ENABLE_LAYOUT */
+    String              aStrRowLabel;
+    String              aStrColLabel;
+    String              aStrUndefined;
+#undef String
+    String              aStrNoName;
+    String              aStrAreaLabel;
+
+	const USHORT		nWhichSort;
+	const ScSortParam&	rSortData;
+	ScViewData*			pViewData;
+	ScDocument*			pDoc;
+	ScSortDlg*			pDlg;
+	ScAddress			theOutPos;
+
+	CollatorRessource*	pColRes;
+	CollatorWrapper*	pColWrap;
+
+#ifdef _TPSORT_CXX
+private:
+	void Init					();
+	void FillUserSortListBox	();
+	void FillOutPosList 		();
+
+	// Handler ------------------------
+	DECL_LINK( EnableHdl, CheckBox * );
+	DECL_LINK( SelOutPosHdl, ListBox * );
+	void EdOutPosModHdl	( Edit* pEd );
+	DECL_LINK( SortDirHdl, RadioButton * );
+	DECL_LINK( FillAlgorHdl, void * );
+#endif
+};
+
+#include <layout/layout-post.hxx>
+
+#endif // SC_TPSORT_HXX
+
diff --git a/toolkit/workben/layout/wordcountdialog.cxx b/toolkit/workben/layout/wordcountdialog.cxx
index 9acb027..64f1836 100644
--- toolkit/workben/layout/wordcountdialog.cxx
+++ toolkit/workben/layout/wordcountdialog.cxx
@@ -84,17 +84,12 @@ SwWordCountDialog::~SwWordCountDialog()
 /*-- 06.04.2004 16:05:57---------------------------------------------------
 
   -----------------------------------------------------------------------*/
-void  SwWordCountDialog::SetValues(const SwDocStat& 
-#if !TEST_LAYOUT
-                                   rCurrent,
-#endif
-                                   , const SwDocStat&
-#if !TEST_LAYOUT
-                                   rDoc
-#endif
-                                   )
+void  SwWordCountDialog::SetValues(const SwDocStat& rCurrent, const SwDocStat& rDoc)
 {
-#if !TEST_LAYOUT
+#if TEST_LAYOUT
+    (void) rCurrent;
+    (void) rDoc;
+#else /* !TEST_LAYOUT */
     aCurrentWordFI.SetText(     String::CreateFromInt32(rCurrent.nWord ));
     aCurrentCharacterFI.SetText(String::CreateFromInt32(rCurrent.nChar ));
     aDocWordFI.SetText(         String::CreateFromInt32(rDoc.nWord ));
diff --git a/toolkit/workben/layout/zoom.cxx b/toolkit/workben/layout/zoom.cxx
index 290a5ad..3185c96 100644
--- toolkit/workben/layout/zoom.cxx
+++ toolkit/workben/layout/zoom.cxx
@@ -127,9 +127,9 @@ static USHORT pRanges[] =
 
 USHORT SvxZoomDialog::GetFactor() const
 {
-	if ( a100Btn.IsChecked() )
+    if ( a100Btn.IsChecked() )
 		return 100;
-	if ( aUserBtn.IsChecked() )
+    if ( aUserBtn.IsChecked() )
 		return (USHORT)aUserEdit.GetValue();
 	else
 		return SPECIAL_FACTOR;
@@ -151,7 +151,7 @@ void SvxZoomDialog::SetFactor( USHORT nNewFactor, USHORT nBtnId )
 			a100Btn.Check();
 			a100Btn.GrabFocus();
 		}
-		else
+        else
 		{
 			aUserBtn.Check();
 			aUserEdit.Enable();
@@ -259,7 +259,7 @@ SvxZoomDialog::SvxZoomDialog( Window* pParent, const SfxItemSet& rCoreSet ) :
     aOptimalBtn     ( this, SVX_RES( BTN_OPTIMAL ) ),
     aWholePageBtn   ( this, SVX_RES( BTN_WHOLE_PAGE ) ),
     aPageWidthBtn   ( this, SVX_RES( BTN_PAGE_WIDTH ) ),
-	a100Btn         ( this, SVX_RES( BTN_100 ) ),
+    a100Btn         ( this, SVX_RES( BTN_100 ) ),
     aUserBtn        ( this, SVX_RES( BTN_USER ) ),
 	aUserEdit       ( this, SVX_RES( ED_USER ) ),
 
@@ -283,8 +283,8 @@ SvxZoomDialog::SvxZoomDialog( Window* pParent, const SfxItemSet& rCoreSet ) :
 
 {
 	Link aLink = LINK( this, SvxZoomDialog, UserHdl );
-	a100Btn.SetClickHdl( aLink );
-	aOptimalBtn.SetClickHdl( aLink );
+    a100Btn.SetClickHdl( aLink );
+    aOptimalBtn.SetClickHdl( aLink );
 	aPageWidthBtn.SetClickHdl( aLink );
 	aWholePageBtn.SetClickHdl( aLink );
 	aUserBtn.SetClickHdl( aLink );
@@ -300,7 +300,7 @@ SvxZoomDialog::SvxZoomDialog( Window* pParent, const SfxItemSet& rCoreSet ) :
     Link aViewLayoutCheckLink = LINK( this, SvxZoomDialog, ViewLayoutCheckHdl );
     aBookModeChk.SetClickHdl( aViewLayoutCheckLink );
 
-	aOKBtn.SetClickHdl( LINK( this, SvxZoomDialog, OKHdl ) );
+    aOKBtn.SetClickHdl( LINK( this, SvxZoomDialog, OKHdl ) );
 	aUserEdit.SetModifyHdl( LINK( this, SvxZoomDialog, SpinHdl ) );
 
 	// Default-Werte
@@ -362,9 +362,9 @@ SvxZoomDialog::SvxZoomDialog( Window* pParent, const SfxItemSet& rCoreSet ) :
                 break;
 		}
 
-		if ( !(SVX_ZOOM_ENABLE_100 & nValSet) )
+        if ( !(SVX_ZOOM_ENABLE_100 & nValSet) )
 			a100Btn.Disable();
-		if ( !(SVX_ZOOM_ENABLE_OPTIMAL & nValSet) )
+        if ( !(SVX_ZOOM_ENABLE_OPTIMAL & nValSet) )
 			aOptimalBtn.Disable();
 		if ( !(SVX_ZOOM_ENABLE_PAGEWIDTH & nValSet) )
 			aPageWidthBtn.Disable();
@@ -582,7 +582,7 @@ IMPL_LINK( SvxZoomDialog, OKHdl, Button *, pBtn )
                 aViewLayoutItem.SetValue( static_cast<USHORT>(aColumnsEdit.GetValue()) );
                 aViewLayoutItem.SetBookMode( aBookModeChk.IsChecked() );
             }
-		}
+        }
 		else
 		{
 			DBG_ERROR( "Wrong Button" );
diff --git a/toolkit/workben/layout/zoom.hxx b/toolkit/workben/layout/zoom.hxx
index 5832233..7dc09dc 100644
--- toolkit/workben/layout/zoom.hxx
+++ toolkit/workben/layout/zoom.hxx
@@ -67,9 +67,9 @@ class SvxZoomDialog : public SfxModalDialog
 private:
     FixedLine           aZoomFl;
     RadioButton         aOptimalBtn;
-	RadioButton 		aWholePageBtn;
+    RadioButton         aWholePageBtn;
 	RadioButton 		aPageWidthBtn;
-	RadioButton 		a100Btn;
+    RadioButton         a100Btn;
     RadioButton         aUserBtn;
 	MetricField 		aUserEdit;
 
@@ -81,7 +81,7 @@ private:
     CheckBox            aBookModeChk;
 
     FixedLine           aBottomFl;
-	OKButton  			aOKBtn;
+    OKButton            aOKBtn;
 	CancelButton		aCancelBtn;
 	HelpButton			aHelpBtn;
 
@@ -97,7 +97,7 @@ private:
     DECL_LINK( ViewLayoutUserHdl, RadioButton* );
     DECL_LINK( ViewLayoutSpinHdl, MetricField* );
     DECL_LINK( ViewLayoutCheckHdl, CheckBox* );
-	DECL_LINK( OKHdl, Button* );
+    DECL_LINK( OKHdl, Button* );
 #endif
 
 public:
