--- config_office/oowintool.BAK	2008-04-25 13:12:44.546875000 +0300
+++ config_office/oowintool	2008-04-25 16:45:16.093750000 +0300
@@ -95,12 +95,16 @@
 sub print_psdk_home()
 {
     my $value;
-    $value = reg_get_value ('HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/MicrosoftSDK/Directories/Install Dir');
+    $value = reg_get_value ('HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Microsoft SDKs/Windows/v6.1/InstallationFolder');
     if (!defined $value)
     {
-        $key = reg_find_key ('HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/MicrosoftSDK/InstalledSDKs/*/Install Dir');
-        $value = reg_get_value ($key);
-    }
+		$value = reg_get_value ('HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/MicrosoftSDK/Directories/Install Dir');
+		if (!defined $value)
+		{
+			$key = reg_find_key ('HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/MicrosoftSDK/InstalledSDKs/*/Install Dir');
+			$value = reg_get_value ($key);
+		}
+	}
     defined $value || die "psdk not found";
 
     print cygpath ($value, 'w', $output_format);
@@ -110,24 +110,6 @@
     print cygpath ($value, 'w', $output_format);
 }
 
-my %msvc6 = (
-    'ver' => '6.0',
-    'key' => 'Microsoft/VisualStudio/6.0/Setup/Microsoft Visual C++/ProductDir',
-);
-my %msvc_net_2002 = (
-    'ver' => '7.0',
-    'key' => 'Microsoft/VisualStudio/7.0/Setup/VC/ProductDir',
-    'instmsi_path' => '../Common7/Tools/Deployment/MsiRedist',
-    'dll_path' => '../Visual Studio .NET Professional - English', # testme ...
-    'dll_suffix' => '70'
-);
-my %msvs_net_2002 = (
-    'ver' => '7.0',
-    'key' => 'Microsoft/VisualStudio/7.0/Setup/VS/ProductDir',
-    'instmsi_path' => 'Common7/Tools/Deployment/MsiRedist',
-    'dll_path' => 'Visual Studio .NET Professional - English', # testme ...
-    'dll_suffix' => '70'
-);
 my %msvc_net_2003 = (
     'ver' => '7.1',
     'key' => 'Microsoft/VisualStudio/7.1/Setup/VC/ProductDir',
@@ -128,14 +132,14 @@
     'ver' => '7.1',
     'key' => 'Microsoft/VisualStudio/7.1/Setup/VC/ProductDir',
     'instmsi_path' => '../Common7/Tools/Deployment/MsiRedist',
-    'dll_path' => '../SDK/v1.1/Bin',
+    'dll_path' => '../Visual Studio .NET Professional 2003 - English',
     'dll_suffix' => '71'
 );
 my %msvs_net_2003 = (
     'ver' => '7.1',
     'key' => 'Microsoft/VisualStudio/7.1/Setup/VS/ProductDir',
     'instmsi_path' => 'Common7/Tools/Deployment/MsiRedist',
-    'dll_path' => 'Visual Studio .NET Professional 2003 - English', # testme ...
+    'dll_path' => 'Visual Studio .NET Professional 2003 - English',
     'dll_suffix' => '71'
 );
 my %msvs_net_2003_ea = (
@@ -159,10 +163,24 @@
     'dll_path' => '../SDK/v2.0/Bin',
     'dll_suffix' => '80'
 );
+my %msvs_2008 = (
+    'ver' => '9.0',
+    'key' => 'Microsoft/VisualStudio/9.0/Setup/VS/ProductDir',
+    'instmsi_path' => '?',
+    'dll_path' => 'VC/redist/x86/Microsoft.VC90.CRT',
+    'dll_suffix' => '90'
+);
+my %msvc_2008 = (
+    'ver' => '9.0',
+    'key' => 'Microsoft/VisualStudio/9.0/Setup/VC/ProductDir',
+    'instmsi_path' => '?',
+    'dll_path' => 'redist/x86/Microsoft.VC90.CRT',
+    'dll_suffix' => '90'
+);
 
 sub find_msvs()
 {
-    my @ms_versions = ( \%msvs_express_2005, \%msvs_net_2003_ea, \%msvs_net_2003, \%msvs_net_2002, \%msvc6 );
+    my @ms_versions = ( \%msvs_2008, \%msvs_express_2005, \%msvs_net_2003_ea, \%msvs_net_2003 );
 
     for $ver (@ms_versions)
     {
@@ -177,7 +195,7 @@
 
 sub find_msvc()
 {
-    my @ms_versions = ( \%msvc_express_2005, \%msvc_net_2003, \%msvc_net_2002, \%msvc6 );
+    my @ms_versions = ( \%msvc_2008, \%msvc_express_2005, \%msvc_net_2003 );
 
     for $ver (@ms_versions)
     {
@@ -235,13 +235,13 @@
 sub print_csc_compiler_dir()
 {
     my $dir = reg_get_value ("HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/.NETFramework/InstallRoot");
-    $dir .= "v1.1.4322"; # lame-but ...
+    $dir .= "v2.0.50727"; # lame, but...
     print cygpath ($dir, 'w', $output_format);
 }
 
 sub print_dotnetsdk_dir()
 {
-    my $dir = reg_get_value ("HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/.NETFramework/sdkInstallRootv1.1");
+    my $dir = reg_get_value ("HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/.NETFramework/sdkInstallRootv2.0");
     print cygpath ($dir, 'w', $output_format);
 }
 
@@ -242,6 +260,7 @@
     -f "$src/$fname" || die "can't find $src";
     -d $dest || die "no directory $dest";
 
+	print STDERR "Copying $src/$fname to $dest\n";
     copy ("$src/$fname", $dest) || die "copy failed: $!";
     chmod (0755, "$dest/$fname") || die "failed to set dll executable: $!";
 }
@@ -257,7 +276,7 @@
     $srcdir = (cygpath ($ver->{'product_dir'}, 'w', 'u') . '/' . 
 		  $ver->{$checkpath});
     -d $srcdir && return $ver;
-    return "";
+    return undef;
 }
 
 sub msvc_copy_dlls($)
@@ -291,6 +291,11 @@
 	      $dest . $ver->{'dll_suffix'});
     copy_dll ($srcdir, "msvcr" . $ver->{'dll_suffix'} . ".dll",
 	      $dest . $ver->{'dll_suffix'});
+    if ($ver->{'dll_suffix'} >= 90) {
+        copy_dll ($srcdir, "msvcm" . $ver->{'dll_suffix'} . ".dll",
+                  $dest . $ver->{'dll_suffix'});
+        copy_dll ($srcdir, "Microsoft.VC90.CRT.manifest", $dest . $ver->{'dll_suffix'});
+    }
 }
 
 sub msvc_copy_instmsi($)
--- config_office/configure.in
+++ config_office/configure.in
@@ -1758,6 +1758,12 @@
 		  MIDL_PATH="$vstest/Common7/Tools/Bin"
       fi
 	fi
+	if test -z "$MIDL_PATH" ; then
+		psdktest=`./oowintool --psdk-home`
+		if test -x "$psdktest/Bin/midl.exe" ; then
+			MIDL_PATH="$psdktest/Bin"
+		fi
+	fi
 	if test ! -x "$MIDL_PATH/midl.exe"; then
 		AC_MSG_ERROR([midl.exe not found. Make sure it's in the path or use --with-midl-path])
 	fi
@@ -1809,7 +1809,7 @@
 	    fi
 	    if test -z "$FRAME_HOME" ; then
           frametest=`./oowintool --dotnetsdk-dir`
-          if test -x "$frametest/lib/mscoree.lib"; then
+          if test -f "$frametest/lib/mscoree.lib"; then
              FRAME_HOME="$frametest"
           fi
 	    fi
@@ -5046,10 +5046,14 @@
 fi
 
 dnl ===================================================================
-dnl Windows builds - attempt to auto-copy required dlls into external/
+dnl Windows builds - use oowintool to copy CRT dlls and manifest
 dnl ===================================================================
 if test "$_os" = "WINNT"; then
-       ./oowintool --msvc-copy-dlls ../external/msvcp
+       if ./oowintool --msvc-copy-dlls ../external/msvcp ; then
+          :
+       else
+          AC_MSG_ERROR([oowintool failed to copy CRT])
+       fi
 fi
 
 dnl ===================================================================
@@ -5067,90 +5067,6 @@
    fi
 fi
 
-dnl ===================================================================
-dnl Windows builds with .NET 2003 needs msvcp71.dll/msvcr71.dll in external/msvcp71
-dnl ===================================================================
-if test "$_os" = "WINNT" -a "$COMEX" = "10" ; then
-   AC_MSG_CHECKING([for msvcp71.dll/msvcr71.dll])
-   if test -x ../external/msvcp71/msvcp71.dll -a -x ../external/msvcp71/msvcr71.dll; then
-      AC_MSG_RESULT([found])
-   else
-      MSVCPPATH=`/bin/find "$COMPATH/../.." -iname msvcp71.dll | head -n 1`
-      MSVCRPATH=`/bin/find "$COMPATH/../.." -iname msvcr71.dll | head -n 1`
-      if test -n "$MSVCPPATH" -a -n "$MSVCRPATH"; then
-         cp "$MSVCPPATH" ../external/msvcp71/ && chmod +x ../external/msvcp71/msvcp71.dll && MSVCPCOPY="OK"
-         cp "$MSVCRPATH" ../external/msvcp71/ && chmod +x ../external/msvcp71/msvcr71.dll && MSVCRCOPY="OK"
-      fi
-      if test -z "$MSVCPCOPY" -o -z "$MSVCRCOPY"; then
-         AC_MSG_ERROR([msvcp71.dll and/or msvcr71.dll are/is missing in the default location.
-These dlls are part of the .NET installation and should be found in a directory
-similar to:
-"c:\\Program Files\\Microsoft Visual Studio .NET 2003\\Visual C++ .NET Professional - English\\"
-As the automatic detection fails please copy the files to external/msvcp71/.])
-      else
-         AC_MSG_RESULT([found and copied])
-      fi
-   fi
-fi
-
-dnl ===================================================================
-dnl Windows builds with Visual C++ 2005 needs msvc{p,r}80.dll in external/msvcp80
-dnl ===================================================================
-if test "$_os" = "WINNT" -a "$COMEX" = "11"; then
-   AC_MSG_CHECKING([for msvcp80.dll/msvcr80.dll])
-   if test -x ../external/msvcp80/msvcp80.dll -a -x ../external/msvcp80/msvcr80.dll; then
-      AC_MSG_RESULT([found])
-   else
-      MSVCPPATH=`/bin/find "$COMPATH/../.." -iname msvcp80.dll | head -n 1`
-      MSVCRPATH=`/bin/find "$COMPATH/../.." -iname msvcr80.dll | head -n 1`
-      if test -n "$MSVCPPATH" -a -n "$MSVCRPATH"; then
-         cp "$MSVCPPATH" ../external/msvcp80/ && chmod +x ../external/msvcp80/msvcp80.dll && MSVCPCOPY="OK"
-         cp "$MSVCRPATH" ../external/msvcp80/ && chmod +x ../external/msvcp80/msvcr80.dll && MSVCRCOPY="OK"
-      fi
-      if test -z "$MSVCPCOPY" -o -z "$MSVCRCOPY"; then
-         AC_MSG_ERROR([msvcp80.dll and/or msvcr80.dll are/is missing in the default location.
-These dlls are part of the VS installation and should be found in a directory
-similar to:
-"c:\\Program Files\\<no-idea>"
-As the automatic detection fails please copy the files to external/msvcp80/.])
-      else
-         AC_MSG_RESULT([found and copied])
-      fi
-   fi
-fi
-
-dnl ===================================================================
-dnl Windows builds with Visual Studio 2008 needs msvc{m,p,r}90.dll in external/msvcp90
-dnl ===================================================================
-if test "$_os" = "WINNT"; then
-   if test "$COMEX" = "12"; then
-   AC_MSG_CHECKING([for msvcm90.dll/msvcp90.dll/msvcr90.dll/Microsoft.VC90.CRT.manifest])
-   if test -x ../external/msvcp90/msvcm90.dll -a -x ../external/msvcp90/msvcp90.dll -a -x ../external/msvcp90/msvcr90.dll -a -x ../external/msvcp90/Microsoft.VC90.CRT.manifest; then
-      AC_MSG_RESULT([found])
-   else
-      MSVCMPATH=`/bin/find "$COMPATH/../.." -iname msvcm90.dll | head -n 1`
-      MSVCPPATH=`/bin/find "$COMPATH/../.." -iname msvcp90.dll | head -n 1`
-      MSVCRPATH=`/bin/find "$COMPATH/../.." -iname msvcr90.dll | head -n 1`
-      MSVCMANPATH=`/bin/find "$COMPATH/../.." -iname Microsoft.VC90.CRT.manifest | head -n 1`
-      if test -n "$MSVCMPATH" -a -n "$MSVCPPATH" -a -n "$MSVCRPATH" -a -n "$MSVCMANPATH"; then
-         cp "$MSVCMPATH" ../external/msvcp90/ && chmod +x ../external/msvcp90/msvcm90.dll && MSVCMCOPY="OK"
-         cp "$MSVCPPATH" ../external/msvcp90/ && chmod +x ../external/msvcp90/msvcp90.dll && MSVCPCOPY="OK"
-         cp "$MSVCRPATH" ../external/msvcp90/ && chmod +x ../external/msvcp90/msvcr90.dll && MSVCRCOPY="OK"
-         cp "$MSVCMANPATH" ../external/msvcp90/ && chmod +x ../external/msvcp90/Microsoft.VC90.CRT.manifest && MSVCMANCOPY="OK"
-      fi
-      if test -z "$MSVCMCOPY" -o -z "$MSVCPCOPY" -o -z "$MSVCRCOPY" -o -z "$MSVCMANCOPY"; then
-         AC_MSG_ERROR([Any or all of msvcm90.dll, msvcp90.dll, msvcr90.dll and Microsoft.VC90.CRT.manifest are missing in the default location.
-These dlls are part of the VS installation and should be found in a directory
-similar to:
-"C:\\Program Files\\Microsoft Visual Studio 9.0\\VC\\redist\\x86\\Microsoft.VC90.CRT\\"
-As the automatic detection fails please copy the files to external/msvcp90/.])
-      else
-         AC_MSG_RESULT([found and copied])
-      fi
-   fi
-fi
-fi
-
 dnl ===================================================================
 dnl Windows builds - attempt to auto-copy required instmsiX.exe into external/
 dnl ===================================================================
