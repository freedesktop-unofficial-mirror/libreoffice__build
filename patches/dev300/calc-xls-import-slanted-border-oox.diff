From 42c603f4a0043b7f7cdd7739e494de1dd261c382 Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 16:56:34 +0200
Subject: [PATCH 216/878] calc-xls-import-slanted-border-oox.diff

---
 oox/inc/oox/xls/stylesbuffer.hxx |    3 ++
 oox/source/xls/stylesbuffer.cxx  |   40 ++++++++++++++++++++++++++++++++++++++
 2 files changed, 43 insertions(+), 0 deletions(-)

diff --git a/oox/inc/oox/xls/stylesbuffer.hxx b/oox/inc/oox/xls/stylesbuffer.hxx
index 8af5127..26f786a 100644
--- a/oox/inc/oox/xls/stylesbuffer.hxx
+++ b/oox/inc/oox/xls/stylesbuffer.hxx
@@ -547,6 +547,8 @@ public:
     /** Writes all border attributes to the passed property map. */
     void                writeToPropertyMap( PropertyMap& rPropMap ) const;
 
+    bool                hasBorder() const;
+
 private:
     /** Returns the border line struct specified by the passed XML token identifier. */
     BorderLineModel*    getBorderLine( sal_Int32 nElement );
@@ -1003,6 +1005,7 @@ public:
     /** Writes the cell formatting attributes of the specified style XF to the passed property set. */
     void                writeStyleXfToPropertySet( PropertySet& rPropSet, sal_Int32 nXfId ) const;
 
+    bool                hasBorder( sal_Int32 nBorderId ) const;
 private:
     typedef RefVector< Font >                           FontVector;
     typedef RefVector< Border >                         BorderVector;
diff --git a/oox/source/xls/stylesbuffer.cxx b/oox/source/xls/stylesbuffer.cxx
index 3eac900..6ccf171 100644
--- a/oox/source/xls/stylesbuffer.cxx
+++ b/oox/source/xls/stylesbuffer.cxx
@@ -41,6 +41,7 @@
 #include <com/sun/star/style/XStyle.hpp>
 #include <com/sun/star/text/WritingMode2.hpp>
 #include <com/sun/star/text/XText.hpp>
+#include <com/sun/star/table/CellVertJustify.hpp>
 #include <rtl/tencinfo.h>
 #include <rtl/ustrbuf.hxx>
 #include "properties.hxx"
@@ -1705,6 +1706,34 @@ void Border::writeToPropertyMap( PropertyMap& rPropMap ) const
     }
 }
 
+namespace {
+
+bool lcl_isBorder(const ::com::sun::star::table::BorderLine& rBorder)
+{
+    return (rBorder.InnerLineWidth > 0) || (rBorder.OuterLineWidth > 0);
+}
+
+}
+
+bool Border::hasBorder() const
+{
+    const ApiBorderData::ApiTableBorder& rTabBorder = maApiData.maBorder;
+
+    if (rTabBorder.IsBottomLineValid && lcl_isBorder(rTabBorder.BottomLine))
+        return true;
+
+    if (rTabBorder.IsTopLineValid && lcl_isBorder(rTabBorder.TopLine))
+        return true;
+
+    if (rTabBorder.IsLeftLineValid && lcl_isBorder(rTabBorder.LeftLine))
+        return true;
+
+    if (rTabBorder.IsRightLineValid && lcl_isBorder(rTabBorder.RightLine))
+        return true;
+
+    return false;
+}
+
 BorderLineModel* Border::getBorderLine( sal_Int32 nElement )
 {
     switch( nElement )
@@ -2356,6 +2385,11 @@ void Xf::writeToPropertyMap( PropertyMap& rPropMap ) const
         rStyles.writeBorderToPropertyMap( rPropMap, maModel.mnBorderId );
     if( maModel.mbAreaUsed )
         rStyles.writeFillToPropertyMap( rPropMap, maModel.mnFillId );
+
+    ::com::sun::star::table::CellVertJustify eRotRef = ::com::sun::star::table::CellVertJustify_STANDARD;
+    if (maModel.mbBorderUsed && rStyles.hasBorder(maModel.mnBorderId) && maAlignment.getApiData().mnRotation)
+        eRotRef = ::com::sun::star::table::CellVertJustify_BOTTOM;
+    rPropMap[ PROP_RotateReference ] <<= eRotRef;
 }
 
 void Xf::writeToPropertySet( PropertySet& rPropSet ) const
@@ -3297,6 +3331,12 @@ void StylesBuffer::writeCellXfToPropertySet( PropertySet& rPropSet, sal_Int32 nX
         pXf->writeToPropertySet( rPropSet );
 }
 
+bool StylesBuffer::hasBorder( sal_Int32 nBorderId ) const
+{
+    Border* pBorder = maBorders.get( nBorderId ).get();
+    return pBorder && pBorder->hasBorder();
+}
+
 void StylesBuffer::writeStyleXfToPropertySet( PropertySet& rPropSet, sal_Int32 nXfId ) const
 {
     if( Xf* pXf = maStyleXfs.get( nXfId ).get() )
-- 
1.7.0.1

