--- sc/source/core/inc/interpre.hxx.old	2010-03-03 16:44:03.000000000 +0100
+++ sc/source/core/inc/interpre.hxx	2010-03-03 16:59:16.000000000 +0100
@@ -179,6 +179,9 @@ private:
     BOOL        bCalcAsShown;           // precision as shown
     BOOL        bMatrixFormula;         // formula cell is a matrix formula
 
+    sal_Unicode cDecSep;                // decimal separator 
+    sal_Unicode cGrpSep;                // group separator
+
 //---------------------------------Funktionen in interpre.cxx---------
 // nMust <= nAct <= nMax ? ok : PushError
 inline BOOL MustHaveParamCount( short nAct, short nMust );
--- sc/source/core/tool/interpr4.cxx.old	2010-03-03 16:44:03.000000000 +0100
+++ sc/source/core/tool/interpr4.cxx	2010-03-03 16:59:16.000000000 +0100
@@ -249,7 +249,7 @@ double ScInterpreter::ConvertStringToVal
     sal_Int32 nParseEnd;
     // Decimal and group separator 0 => only integer and possibly exponent, 
     // stops at first non-digit non-sign.
-    fValue = ::rtl::math::stringToDouble( aStr, 0, 0, &eStatus, &nParseEnd);
+    fValue = ::rtl::math::stringToDouble( aStr, cDecSep, cGrpSep, &eStatus, &nParseEnd);
     sal_Int32 nLen;
     if (eStatus == rtl_math_ConversionStatus_Ok && nParseEnd < (nLen = aStr.getLength()))
     {
@@ -3586,6 +3586,10 @@ ScInterpreter::ScInterpreter( ScFormulaC
         pStackObj = new ScTokenStack;
     }
     pStack = pStackObj->pPointer;
+
+    const i18n::LocaleDataItem& rLocaleData = ScGlobal::GetpLocaleData()->getLocaleItem();
+    cDecSep = rLocaleData.decimalSeparator.getLength() ? rLocaleData.decimalSeparator.getStr()[0] : 0;
+    cGrpSep = rLocaleData.thousandSeparator.getLength() ? rLocaleData.thousandSeparator.getStr()[0] : 0;
 }
 
 ScInterpreter::~ScInterpreter()
