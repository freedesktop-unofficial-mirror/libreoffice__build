From 826b8cf24871eaaf592329548b84265438ac21b2 Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 17:07:32 +0200
Subject: [PATCH 769/878] oox-pptx-export-update-to-ooo320.diff

---
 sd/source/filter/pptx/epptooxml.hxx            |    4 +-
 sd/source/filter/pptx/pptx-epptooxml.cxx       |   78 +++++++++++-------------
 sd/source/filter/pptx/pptx-pptexanimations.cxx |    2 +-
 3 files changed, 39 insertions(+), 45 deletions(-)

diff --git a/sd/source/filter/pptx/epptooxml.hxx b/sd/source/filter/pptx/epptooxml.hxx
index 44beff3..f6b0a2e 100644
--- a/sd/source/filter/pptx/epptooxml.hxx
+++ b/sd/source/filter/pptx/epptooxml.hxx
@@ -54,10 +54,10 @@ public:
 
     // only needed for import, leave them empty, refactor later XmlFilterBase to export and import base?
     virtual sal_Int32 getSchemeClr( sal_Int32 /* nColorSchemeToken */ ) const { return 0; }
-    virtual const oox::vml::DrawingPtr getDrawings() { return oox::vml::DrawingPtr(); }
+    virtual oox::vml::Drawing* getVmlDrawing() { return NULL; }
     virtual const oox::drawingml::Theme* getCurrentTheme() const { return NULL; }
     virtual const oox::drawingml::table::TableStyleListPtr getTableStyles() { return oox::drawingml::table::TableStyleListPtr(); }
-    virtual oox::drawingml::chart::ChartConverter& getChartConverter();
+    virtual oox::drawingml::chart::ChartConverter* getChartConverter() { return NULL; }
 
     static const char* GetSideDirection( sal_uInt8 nDirection );
     static const char* GetCornerDirection( sal_uInt8 nDirection );
diff --git a/sd/source/filter/pptx/pptx-epptooxml.cxx b/sd/source/filter/pptx/pptx-epptooxml.cxx
index 3121990..1563b88 100644
--- a/sd/source/filter/pptx/pptx-epptooxml.cxx
+++ b/sd/source/filter/pptx/pptx-epptooxml.cxx
@@ -196,7 +196,6 @@ ShapeExport& PowerPointShapeExport::WriteUnknownShape( Reference< XShape > xShap
 PowerPointExport::PowerPointExport( const Reference< XMultiServiceFactory > & rSMgr  )
     : XmlFilterBase( rSMgr ),
       PPTWriterBase(),
-      mxChartConv( new ::oox::drawingml::chart::ChartConverter ),
       mnLayoutFileIdMax( 1 ),
       mnSlideIdMax( 1 << 8 ),
       mnSlideMasterIdMax( 1 << 31 ),
@@ -223,8 +222,8 @@ bool PowerPointExport::exportDocument() throw()
 
     addRelation( US( "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" ), S( "ppt/presentation.xml" ) );
 
-    mPresentationFS = openOutputStreamWithSerializer( US( "ppt/presentation.xml" ),
-                                                      US( "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml" ) );
+    mPresentationFS = openFragmentStreamWithSerializer( US( "ppt/presentation.xml" ),
+                            US( "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml" ) );
 
     addRelation( mPresentationFS->getOutputStream(),
                  US( "http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme" ),
@@ -250,7 +249,7 @@ bool PowerPointExport::exportDocument() throw()
     mPresentationFS->endElementNS( XML_p, XML_presentation );
     mPresentationFS.reset();
 
-    commit();
+    commitStorage();
 
     maShapeMap.clear ();
 
@@ -920,7 +919,7 @@ void PowerPointExport::WriteAnimationNodeCommonPropsStart( FSHelperPtr pFS, cons
     }
     }
 
-    sal_uInt32 nPresetId;
+    sal_uInt32 nPresetId = 0;
     sal_Bool bPresetId = FALSE;
     if ( pAny[ DFF_ANIM_PRESET_ID ] ) {
     rtl::OUString sPreset;
@@ -1154,12 +1153,12 @@ void PowerPointExport::ImplWriteSlide( sal_uInt32 nPageNum, sal_uInt32 nMasterNu
     if( nPageNum == mnPages - 1 )
         mPresentationFS->endElementNS( XML_p, XML_sldIdLst );
 
-    FSHelperPtr pFS = openOutputStreamWithSerializer( OUStringBuffer()
-                                                      .appendAscii( "ppt/slides/slide" )
-                                                      .append( (sal_Int32) nPageNum + 1 )
-                                                      .appendAscii( ".xml" )
-                                                      .makeStringAndClear(),
-                                                      US( "application/vnd.openxmlformats-officedocument.presentationml.slide+xml" ) );
+    FSHelperPtr pFS = openFragmentStreamWithSerializer( OUStringBuffer()
+                            .appendAscii( "ppt/slides/slide" )
+                            .append( (sal_Int32) nPageNum + 1 )
+                            .appendAscii( ".xml" )
+                            .makeStringAndClear(),
+                            US( "application/vnd.openxmlformats-officedocument.presentationml.slide+xml" ) );
 
     if( mpSlidesFSArray.size() < mnPages )
     mpSlidesFSArray.resize( mnPages );
@@ -1212,12 +1211,12 @@ void PowerPointExport::ImplWriteNotes( sal_uInt32 nPageNum )
 
     DBG(printf("write Notes %d\n----------------\n", nPageNum));
 
-    FSHelperPtr pFS = openOutputStreamWithSerializer( OUStringBuffer()
-                                                      .appendAscii( "ppt/notesSlides/notesSlide" )
-                                                      .append( (sal_Int32) nPageNum + 1 )
-                                                      .appendAscii( ".xml" )
-                                                      .makeStringAndClear(),
-                                                      US( "application/vnd.openxmlformats-officedocument.presentationml.notesSlide+xml" ) );
+    FSHelperPtr pFS = openFragmentStreamWithSerializer( OUStringBuffer()
+                            .appendAscii( "ppt/notesSlides/notesSlide" )
+                            .append( (sal_Int32) nPageNum + 1 )
+                            .appendAscii( ".xml" )
+                            .makeStringAndClear(),
+                            US( "application/vnd.openxmlformats-officedocument.presentationml.notesSlide+xml" ) );
 
     pFS->startElementNS( XML_p, XML_notes, PNMSS, FSEND );
 
@@ -1352,12 +1351,12 @@ void PowerPointExport::ImplWriteSlideMaster( sal_uInt32 nPageNum, Reference< XPr
         mPresentationFS->endElementNS( XML_p, XML_sldMasterIdLst );
 
     FSHelperPtr pFS =
-    openOutputStreamWithSerializer( OUStringBuffer()
-                    .appendAscii( "ppt/slideMasters/slideMaster" )
-                    .append( (sal_Int32) nPageNum + 1 )
-                    .appendAscii( ".xml" )
-                    .makeStringAndClear(),
-                    US( "application/vnd.openxmlformats-officedocument.presentationml.slideMaster+xml" ) );
+    openFragmentStreamWithSerializer( OUStringBuffer()
+                      .appendAscii( "ppt/slideMasters/slideMaster" )
+                      .append( (sal_Int32) nPageNum + 1 )
+                      .appendAscii( ".xml" )
+                      .makeStringAndClear(),
+                      US( "application/vnd.openxmlformats-officedocument.presentationml.slideMaster+xml" ) );
     if( mpMasterFSArray.size() < mnMasterPages )
     mpMasterFSArray.resize( mnMasterPages );
     mpMasterFSArray[ nPageNum ] = pFS;
@@ -1450,12 +1449,12 @@ void PowerPointExport::ImplWriteLayout( sal_Int32 nOffset, sal_uInt32 nMasterNum
     return;
 
     FSHelperPtr pFS
-        = openOutputStreamWithSerializer( OUStringBuffer()
-                                          .appendAscii( "ppt/slideLayouts/slideLayout" )
-                                          .append( (sal_Int32) mnLayoutFileIdMax )
-                                          .appendAscii( ".xml" )
-                                          .makeStringAndClear(),
-                                          US( "application/vnd.openxmlformats-officedocument.presentationml.slideLayout+xml" ) );
+        = openFragmentStreamWithSerializer( OUStringBuffer()
+                        .appendAscii( "ppt/slideLayouts/slideLayout" )
+                        .append( (sal_Int32) mnLayoutFileIdMax )
+                        .appendAscii( ".xml" )
+                        .makeStringAndClear(),
+                        US( "application/vnd.openxmlformats-officedocument.presentationml.slideLayout+xml" ) );
 
 //     LayoutInfo& rLayoutInfo = GetLayoutInfo( mXPagePropSet );
 
@@ -1826,12 +1825,12 @@ ShapeExport& PowerPointShapeExport::WritePlaceholderShape( Reference< XShape > x
 
 void PowerPointExport::WriteTheme( sal_Int32 nThemeNum )
 {
-    FSHelperPtr pFS = openOutputStreamWithSerializer( OUStringBuffer()
-                              .appendAscii( "ppt/theme/theme" )
-                              .append( (sal_Int32) nThemeNum + 1 )
-                              .appendAscii( ".xml" )
-                              .makeStringAndClear(),
-                                                      US( "application/vnd.openxmlformats-officedocument.theme+xml" ) );
+    FSHelperPtr pFS = openFragmentStreamWithSerializer( OUStringBuffer()
+                            .appendAscii( "ppt/theme/theme" )
+                            .append( (sal_Int32) nThemeNum + 1 )
+                            .appendAscii( ".xml" )
+                            .makeStringAndClear(),
+                            US( "application/vnd.openxmlformats-officedocument.theme+xml" ) );
 
     pFS->startElementNS( XML_a, XML_theme,
                          FSNS( XML_xmlns, XML_a), "http://schemas.openxmlformats.org/drawingml/2006/main",
@@ -1881,8 +1880,8 @@ sal_Bool PowerPointExport::WriteNotesMaster()
     mPresentationFS->endElementNS( XML_p, XML_notesMasterIdLst );
 
     FSHelperPtr pFS =
-    openOutputStreamWithSerializer( US( "ppt/notesMasters/notesMaster1.xml" ),
-                    US( "application/vnd.openxmlformats-officedocument.presentationml.notesMaster+xml" ) );
+    openFragmentStreamWithSerializer( US( "ppt/notesMasters/notesMaster1.xml" ),
+                      US( "application/vnd.openxmlformats-officedocument.presentationml.notesMaster+xml" ) );
     // write theme per master
     WriteTheme( mnMasterPages );
 
@@ -1943,11 +1942,6 @@ sal_Bool PowerPointExport::ImplCreateMainNotes()
 
 //------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
-drawingml::chart::ChartConverter& PowerPointExport::getChartConverter()
-{
-    return *mxChartConv;
-}
-
 #define IMPL_NAME "com.sun.star.comp.Impress.oox.PowerPointExport"
 
 OUString SAL_CALL PowerPointExport_getImplementationName() throw()
diff --git a/sd/source/filter/pptx/pptx-pptexanimations.cxx b/sd/source/filter/pptx/pptx-pptexanimations.cxx
index 3d4e90d..1f0ef5d 100644
--- a/sd/source/filter/pptx/pptx-pptexanimations.cxx
+++ b/sd/source/filter/pptx/pptx-pptexanimations.cxx
@@ -1035,7 +1035,7 @@ sal_Int16 AnimationExporter::exportAnimPropertySet( SvStream& rStrm, const Refer
             exportAnimPropertyuInt32( rStrm, DFF_ANIM_NODE_TYPE, nPPTNodeType, TRANSLATE_NONE );
         }
     }
-    sal_uInt32 nPresetId;
+    sal_uInt32 nPresetId = 0;
     sal_uInt32 nPresetSubType = 0;
     sal_uInt32 nAPIPresetClass = EffectPresetClass::CUSTOM;
     sal_uInt32 nPresetClass = DFF_ANIM_PRESS_CLASS_USER_DEFINED;
-- 
1.7.0.1

