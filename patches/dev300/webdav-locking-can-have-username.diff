diff --git tools/source/fsys/urlobj.cxx tools/source/fsys/urlobj.cxx
index b5a51f9..c4e37c4 100644
--- tools/source/fsys/urlobj.cxx
+++ tools/source/fsys/urlobj.cxx
@@ -404,21 +404,21 @@ static INetURLObject::SchemeInfo const aSchemeInfoMap[INET_PROT_END]
 		  false },
 		{ "ftp", "ftp://", 21, true, true, false, true, true, true, true,
 		  false },
-		{ "http", "http://", 80, true, false, false, false, true, true,
+		{ "http", "http://", 80, true, true, false, true, true, true,
 		  true, true },
 		{ "file", "file://", 0, true, false, false, false, true, false,
 		  true, false },
 		{ "mailto", "mailto:", 0, false, false, false, false, false,
 		  false, false, true },
-		{ "vnd.sun.star.webdav", "vnd.sun.star.webdav://", 80, true, false,
-		  false, false, true, true, true, true },
+		{ "vnd.sun.star.webdav", "vnd.sun.star.webdav://", 80, true, true,
+		  false, true, true, true, true, true },
 		{ "news", "news:", 0, false, false, false, false, false, false, false,
           false },
 		{ "private", "private:", 0, false, false, false, false, false,
 		  false, false, true },
 		{ "vnd.sun.star.help", "vnd.sun.star.help://", 0, true, false, false,
 		  false, false, false, true, true },
-		{ "https", "https://", 443, true, false, false, false, true, true,
+		{ "https", "https://", 443, true, true, false, true, true, true,
 		  true, true },
 		{ "slot", "slot:", 0, false, false, false, false, false, false,
 		  false, true },
@@ -464,13 +464,13 @@ static INetURLObject::SchemeInfo const aSchemeInfoMap[INET_PROT_END]
           false, false, false, true, false },
         { "smb", "smb://", 139, true, true, false, true, true, true, true,
           true },
-        { "dav", "dav://", 80, true, false, false, false, true, true, true,
+        { "dav", "dav://", 80, true, true, false, true, true, true, true,
           true },
-        { "davs", "davs://", 443, true, false, false, false, true, true,
+        { "davs", "davs://", 443, true, true, false, true, true, true,
           true, true },
-        { "webdav", "webdav://", 80, true, false, false, false, true, true, true,
+        { "webdav", "webdav://", 80, true, true, false, true, true, true, true,
           true },
-        { "webdavs", "webdavs://", 443, true, false, false, false, true, true,
+        { "webdavs", "webdavs://", 443, true, true, false, true, true, true,
           true, true },
         { "", "", 0, false, false, false, false, false, false, false, false },
         { "", "", 0, false, false, false, false, false, false, true, false }
diff --git ucb/source/ucp/webdav/NeonSession.cxx ucb/source/ucp/webdav/NeonSession.cxx
index 3f99123..cb5845c 100644
--- ucb/source/ucp/webdav/NeonSession.cxx
+++ ucb/source/ucp/webdav/NeonSession.cxx
@@ -365,11 +365,10 @@ extern "C" int NeonSession_NeonAuth( void *       inUserData,
 
         try
         {
-            NeonUri uri( theSession->getRequestEnvironment().m_aRequestURI );
-            rtl::OUString aUserInfo( uri.GetUserInfo() );
+            rtl::OUString aUserInfo( theSession->getUserInfo() );
             if ( aUserInfo.getLength() )
             {
-                sal_Int32 nPos = aUserInfo.indexOf( '@' );
+                sal_Int32 nPos = aUserInfo.indexOf( ':' );
                 if ( nPos == -1 )
                 {
                     theUserName = aUserInfo;
@@ -648,6 +647,7 @@ NeonSession::NeonSession(
     m_aScheme    = theUri.GetScheme();
     m_aHostName  = theUri.GetHost();
     m_nPort      = theUri.GetPort();
+    m_aUserInfo  = theUri.GetUserInfo();
 
 //   Init();
 }
diff --git ucb/source/ucp/webdav/NeonSession.hxx ucb/source/ucp/webdav/NeonSession.hxx
index 7099da1..5a62a81 100644
--- ucb/source/ucp/webdav/NeonSession.hxx
+++ ucb/source/ucp/webdav/NeonSession.hxx
@@ -71,6 +71,7 @@ class NeonSession : public DAVSession
         rtl::OUString     m_aScheme;
         rtl::OUString     m_aHostName;
         rtl::OUString     m_aProxyName;
+        rtl::OUString     m_aUserInfo;
         sal_Int32         m_nPort;
         sal_Int32         m_nProxyPort;
         HttpSession *     m_pHttpSession;
@@ -105,6 +106,8 @@ class NeonSession : public DAVSession
         const DAVRequestEnvironment & getRequestEnvironment() const
         { return m_aEnv; }
 
+        const rtl::OUString & getUserInfo() const { return m_aUserInfo; }
+
         virtual void
         OPTIONS( const ::rtl::OUString &  inPath,
                  DAVCapabilities & outCapabilities,
