--- scp2/source/ooo/ure.scp
+++ scp2/source/ooo/ure.scp
@@ -942,16 +942,6 @@
 #endif
 #endif
 
-#if defined WNT
-File gid_File_Dl_Unicows
-    TXT_FILE_BODY;
-    Dir = SCP2_URE_DL_DIR;
-    Name = SCP2_URE_DL_NORMAL("unicows");
-    Styles = (PACKED, VERSION_INDEPENDENT_COMP_ID);
-    // CompID = "F05005FA-5B2C-43B1-83EF-988EFFF1D7BD";
-End
-#endif
-
 #if defined WNT
 File gid_File_Dl_Uwinapi
     TXT_FILE_BODY;
--- scp2/source/ooo/file_library_ooo.scp
+++ scp2/source/ooo/file_library_ooo.scp
@@ -667,15 +667,6 @@
 
 STD_UNO_LIB_FILE( gid_File_Lib_Fwm , fwm)
 
-#ifdef WNT
-File gid_File_Lib_Gdiplus
-    BIN_FILE_BODY;
-    Styles = (PACKED);
-    Dir = gid_Dir_Program;
-    Name = "gdiplus.dll";
-End
-#endif
-
 File gid_File_Lib_Go
     Name = LIBNAME(go);
     TXT_FILE_BODY;
--- solenv/bin/modules/installer/windows/msiglobal.pm
+++ solenv/bin/modules/installer/windows/msiglobal.pm
@@ -1175,20 +1175,6 @@
 	push(@{$setupinifile}, $line);
 }
 
-##########################################################################
-# Writing the path to the instmsia.exe into setup.ini
-##########################################################################
-
-sub put_instmsiapath_into_setupini
-{
-	my ($setupinifile) = @_;
-	
-	my $instmsiaexepath = "instmsia.exe";	
-	my $line = "instmsia=" . $instmsiaexepath . "\n";
-	
-	push(@{$setupinifile}, $line);
-}
-
 ##########################################################################
 # Writing the required msi version into setup.ini
 ##########################################################################
@@ -1309,7 +1309,6 @@
 
 	put_databasename_into_setupini($setupinifile, $allvariableshashref);
 	put_instmsiwpath_into_setupini($setupinifile);
-	put_instmsiapath_into_setupini($setupinifile);
 	put_msiversion_into_setupini($setupinifile);
 	put_productname_into_setupini($setupinifile, $allvariableshashref);
 	put_productcode_into_setupini($setupinifile);
@@ -1377,7 +1377,7 @@
 
 #################################################################
 # Copying the files for the Windows installer into the 
-# installation set (setup.exe, instmsia.exe, instmsiw.exe).
+# installation set (setup.exe, instmsiw.exe).
 #################################################################
 
 sub copy_windows_installer_files_into_installset
@@ -1387,7 +1387,6 @@
     installer::logger::include_header_into_logfile("Copying Windows installer files into installation set");
 	
 	@copyfile = ();
-	push(@copyfile, "instmsia.exe");
 	push(@copyfile, "instmsiw.exe");
 	push(@copyfile, "loader2.exe");
 	
--- external/prj/d.lst
+++ external/prj/d.lst
@@ -54,7 +54,6 @@
 
 ..\unowinreg\unowinreg.dll %_DEST%\bin%_EXT%\unowinreg.dll
 
-..\msi\instmsia.exe %_DEST%\bin%_EXT%\instmsia.exe
 ..\msi\instmsiw.exe %_DEST%\bin%_EXT%\instmsiw.exe
 
 ..\mingwm10\mingwm10.dll %_DEST%\bin%_EXT%\mingwm10.dll
--- desktop/win32/source/setup/setup.hxx
+++ desktop/win32/source/setup/setup.hxx
@@ -76,7 +76,6 @@
     LPTSTR      m_pCmdLine;
     LPTSTR      m_pDatabase;
     LPTSTR      m_pInstMsiW;
-    LPTSTR      m_pInstMsiA;
     LPTSTR      m_pReqVersion;
     LPTSTR      m_pProductName;
     LPTSTR      m_pAdvertise;
--- desktop/win32/source/setup/setup.cpp
+++ desktop/win32/source/setup/setup.cpp
@@ -123,7 +123,6 @@
 
     m_pDatabase = NULL;
     m_pInstMsiW = NULL;
-    m_pInstMsiA = NULL;
     m_pReqVersion   = NULL;
     m_pProductName  = NULL;
     m_pAdvertise    = NULL;
@@ -178,7 +178,6 @@
     if ( m_pAppTitle ) delete [] m_pAppTitle;
     if ( m_pDatabase ) delete [] m_pDatabase;
     if ( m_pInstMsiW ) delete [] m_pInstMsiW;
-    if ( m_pInstMsiA ) delete [] m_pInstMsiA;
     if ( m_pReqVersion ) delete [] m_pReqVersion;
     if ( m_pProductName ) delete [] m_pProductName;
     if ( m_pAdvertise )   delete [] m_pAdvertise;
@@ -343,11 +343,6 @@
                     m_pInstMsiW = pValue;
                     Log( TEXT( "    instmsiw = %s\r\n" ), pValue );
                 }
-                else if ( lstrcmpi( TEXT( "instmsia" ), pName ) == 0 )
-                {
-                    m_pInstMsiA = pValue;
-                    Log( TEXT( "    instmsia = %s\r\n" ), pValue );
-                }
                 else if ( lstrcmpi( TEXT( "msiversion" ), pName ) == 0 )
                 {
                     m_pReqVersion = pValue;
@@ -367,7 +367,7 @@
             }
         }
 
-        if ( bRet && ( !m_pDatabase || !m_pInstMsiW || !m_pInstMsiA || !m_pReqVersion || !m_pProductName ) )
+        if ( bRet && ( !m_pDatabase || !m_pInstMsiW || !m_pReqVersion || !m_pProductName ) )
         {
             Log( TEXT( "ERROR: incomplete 'Setup' section in profile\r\n" ) );
             SetError( ERROR_INVALID_DATA );
@@ -1161,19 +1161,13 @@
     {
         LPTSTR  pInstaller = 0;
 
-        if ( IsWin9x() )
-            bRet = GetPathToFile( m_pInstMsiA, &pInstaller );
-        else
-            bRet = GetPathToFile( m_pInstMsiW, &pInstaller );
+        bRet = GetPathToFile( m_pInstMsiW, &pInstaller );
 
         if ( bRet )
             bRet = InstallMsi( pInstaller );
         else
-            Log( TEXT( "ERROR: Could not find InstMsiA/InstMsiW!\r\n" ) );
+            Log( TEXT( "ERROR: Could not find InstMsiW!\r\n" ) );
 
-        if ( bRet && IsWin9x() && ( GetMinorVersion() <= 10 ) )
-            SetRebootNeeded( true );
-
         if ( pInstaller ) delete [] pInstaller;
     }
 
@@ -1334,9 +1334,7 @@
     const TCHAR sGUniqueName[] = TEXT( "Global\\_MSISETUP_{EA8130C1-8D3D-4338-9309-1A52D530D846}" );
     const TCHAR sUniqueName[]  = TEXT( "_MSISETUP_{EA8130C1-8D3D-4338-9309-1A52D530D846}" );
 
-    if ( IsWin9x() )
-        sMutexName = sUniqueName;
-    else if ( ( GetOSVersion() < 5 ) && ! IsTerminalServerInstalled() )
+    if ( ( GetOSVersion() < 5 ) && ! IsTerminalServerInstalled() )
         sMutexName = sUniqueName;
     else
         sMutexName = sGUniqueName;
@@ -1407,8 +1407,7 @@
         if ( !bInit )
         {
             bInit = true;
-            if ( ! IsWin9x() )
-                _ftprintf( m_pLogFile, TEXT("%c"), 0xfeff );
+            _ftprintf( m_pLogFile, TEXT("%c"), 0xfeff );
 
             _tsetlocale( LC_ALL, TEXT("") );
             _ftprintf( m_pLogFile, TEXT("\nCodepage=%s\nMultiByte Codepage=[%d]\n"),
@@ -1660,9 +1660,6 @@
 //--------------------------------------------------------------------------
 boolean SetupAppX::IsAdmin()
 {
-    if ( IsWin9x() )
-        return true;
-
     PSID aPsidAdmin;
     SID_IDENTIFIER_AUTHORITY aAuthority = SECURITY_NT_AUTHORITY;
     

--- desktop/win32/source/setup/setup_main.hxx
+++ desktop/win32/source/setup/setup_main.hxx
@@ -36,7 +36,6 @@
 {
     DWORD           m_nOSVersion;
     DWORD           m_nMinorVersion;
-    boolean         m_bIsWin9x      : 1;
     boolean         m_bNeedReboot   : 1;
     boolean         m_bAdministrative : 1;
 
@@ -58,7 +58,6 @@
     virtual void    DisplayError( UINT nErr ) const = 0;
 
     void            SetError( UINT nErr ) { m_uiRet = nErr; }
-    boolean         IsWin9x() const { return m_bIsWin9x; }
     DWORD           GetOSVersion() const { return m_nOSVersion; }
     DWORD           GetMinorVersion() const { return m_nMinorVersion; }
 
@@ -69,7 +69,6 @@
     boolean         NeedReboot() const { return m_bNeedReboot; }
 };
 
-SetupApp* Create_SetupAppA();
 SetupApp* Create_SetupAppW();
 
 #endif
--- desktop/win32/source/setup/setup_main.cxx
+++ desktop/win32/source/setup/setup_main.cxx
@@ -66,7 +66,6 @@
 
     m_nOSVersion    = sInfoOS.dwMajorVersion;
     m_nMinorVersion = sInfoOS.dwMinorVersion;
-    m_bIsWin9x      = ( VER_PLATFORM_WIN32_NT != sInfoOS.dwPlatformId );
     m_bNeedReboot   = false;
     m_bAdministrative = false;
 }
@@ -95,14 +95,9 @@
 
     GetVersionEx( &sInfoOS );
 
-    boolean bIsWin9x = ( VER_PLATFORM_WIN32_NT != sInfoOS.dwPlatformId );
- 
     SetupApp *pSetup;
 
-    if ( bIsWin9x )
-        pSetup = Create_SetupAppA();
-    else
-        pSetup = Create_SetupAppW();
+    pSetup = Create_SetupAppW();
 
     try
     {
--- desktop/win32/source/setup/makefile.mk
+++ desktop/win32/source/setup/makefile.mk
@@ -69,7 +69,6 @@
 .ENDIF			# "$(WITH_LANG)"!=""
 
 OBJFILES= 	$(OBJ)$/setup_main.obj \
-			$(OBJ)$/setup_a.obj \
 			$(OBJ)$/setup_w.obj
 
 # --- Targets ------------------------------------------------------
