diff --git formula/inc/formula/token.hxx formula/inc/formula/token.hxx
index be1b2f6..8b4f53a 100644
--- formula/inc/formula/token.hxx
+++ formula/inc/formula/token.hxx
@@ -113,6 +113,7 @@ public:
     inline  StackVar      		GetType() const         { return eType; }
             BOOL                IsFunction() const; // pure functions, no operators
             BOOL                IsMatrixFunction() const;   // if a function _always_ returns a Matrix
+            bool                IsExternalRef() const;
             BYTE                GetParamCount() const;
     inline  void                IncRef() const          { nRefCnt++; }
     inline  void                DecRef() const
diff --git formula/inc/formula/tokenarray.hxx formula/inc/formula/tokenarray.hxx
index 042dbb9..5bbfaf4 100644
--- formula/inc/formula/tokenarray.hxx
+++ formula/inc/formula/tokenarray.hxx
@@ -126,6 +126,7 @@ public:
     FormulaToken* LastRPN() { nIndex = nRPN; return PrevRPN(); }
     FormulaToken* PrevRPN();
 
+    bool    HasExternalRef() const;
     BOOL    HasOpCode( OpCode ) const;
     BOOL    HasOpCodeRPN( OpCode ) const;
     /// Token of type svIndex or opcode ocColRowName
diff --git formula/source/core/api/FormulaCompiler.cxx formula/source/core/api/FormulaCompiler.cxx
index 7e26cde..7395044 100644
--- formula/source/core/api/FormulaCompiler.cxx
+++ formula/source/core/api/FormulaCompiler.cxx
@@ -905,7 +905,7 @@ BOOL FormulaCompiler::GetToken()
     }
     if( pToken->GetOpCode() == ocSubTotal )
         glSubTotal = TRUE;
-    else if ( pToken->GetOpCode() == ocExternalRef )
+    else if ( pToken->IsExternalRef() )
     {
         return HandleExternalReference(*pToken);
     }
@@ -1187,7 +1187,7 @@ void FormulaCompiler::Factor()
                 bCorrected = TRUE;
             }
         }
-        else if ( eOp == ocExternalRef )
+        else if ( pToken->IsExternalRef() )
         {
             PutCode(pToken);
             eOp = NextToken();
@@ -1607,7 +1607,7 @@ FormulaToken* FormulaCompiler::CreateStringFromToken( rtl::OUStringBuffer& rBuff
     }
     if( bNext ) 
     {
-        if (eOp == ocExternalRef)
+        if (t->IsExternalRef())
         {
             CreateStringFromExternal(rBuffer, pTokenP);
         }
diff --git formula/source/core/api/token.cxx formula/source/core/api/token.cxx
index ccc7406..028197c 100644
--- formula/source/core/api/token.cxx
+++ formula/source/core/api/token.cxx
@@ -145,6 +145,18 @@ BOOL FormulaToken::IsMatrixFunction() const
     return formula::FormulaCompiler::IsMatrixFunction(GetOpCode());
 }
 
+bool FormulaToken::IsExternalRef() const
+{
+    switch (eType)
+    {
+        case svExternalSingleRef:
+        case svExternalDoubleRef:
+        case svExternalName:
+            return true;
+    }
+    return false;
+}
+
 BOOL FormulaToken::operator==( const FormulaToken& rToken ) const
 {
     // don't compare reference count!
@@ -550,6 +562,16 @@ FormulaToken* FormulaTokenArray::PeekPrevNoSpaces()
         return NULL;
 }
 
+bool FormulaTokenArray::HasExternalRef() const
+{
+    for ( USHORT j=0; j < nLen; j++ )
+    {
+        if (pCode[j]->IsExternalRef())
+            return true;
+    }
+    return false;
+}
+
 BOOL FormulaTokenArray::HasOpCode( OpCode eOp ) const
 {
     for ( USHORT j=0; j < nLen; j++ )
