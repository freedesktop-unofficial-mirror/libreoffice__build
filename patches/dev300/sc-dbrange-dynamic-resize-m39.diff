diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/inc/dbcolect.hxx sc/inc/dbcolect.hxx
--- sc.clean/inc/dbcolect.hxx	2008-03-03 11:24:43.000000000 -0500
+++ sc/inc/dbcolect.hxx	2008-03-05 11:52:43.000000000 -0500
@@ -115,6 +115,7 @@ private:
 	ScQueryConnect  eQueryConnect[MAXQUERY];
 	BOOL			bIsAdvanced;		// TRUE if created by advanced filter
 	ScRange			aAdvSource;			// source range
+    SCROW           nDynamicEndRow;
 	// SubTotalParam
 	BOOL			bSubRemoveOnly;
 	BOOL			bSubReplace;
@@ -165,9 +166,10 @@ public:
 			const String& GetName() const				{ return aName; }
 			void		GetName(String& rName) const	{ rName = aName; }
 			void		SetName(const String& rName)	{ aName = rName; }
-			void		GetArea(SCTAB& rTab, SCCOL& rCol1, SCROW& rRow1, SCCOL& rCol2, SCROW& rRow2) const;
-			SC_DLLPUBLIC void		GetArea(ScRange& rRange) const;
+			void		GetArea(SCTAB& rTab, SCCOL& rCol1, SCROW& rRow1, SCCOL& rCol2, SCROW& rRow2, bool bUseDynamicRange = false) const;
+			SC_DLLPUBLIC void		GetArea(ScRange& rRange, bool bUseDynamicRange = false) const;
 			void		SetArea(SCTAB nTab, SCCOL nCol1, SCROW nRow1, SCCOL nCol2, SCROW nRow2);
+            void        SetDynamicEndRow(SCROW nRow);
 			void		MoveTo(SCTAB nTab, SCCOL nCol1, SCROW nRow1, SCCOL nCol2, SCROW nRow2);
 			BOOL		IsByRow() const 				{ return bByRow; }
 			void		SetByRow(BOOL bByR) 			{ bByRow = bByR; }
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/inc/document.hxx sc/inc/document.hxx
--- sc.clean/inc/document.hxx	2008-03-03 11:24:43.000000000 -0500
+++ sc/inc/document.hxx	2008-03-05 11:47:35.000000000 -0500
@@ -864,7 +864,7 @@ SC_DLLPUBLIC	ScDBCollection*	GetDBCollec
 	USHORT			GetErrCode( const ScAddress& ) const;
 
 	void			GetDataArea( SCTAB nTab, SCCOL& rStartCol, SCROW& rStartRow,
-									SCCOL& rEndCol, SCROW& rEndRow, BOOL bIncludeOld );
+									SCCOL& rEndCol, SCROW& rEndRow, BOOL bIncludeOld ) const;
 	BOOL			GetCellArea( SCTAB nTab, SCCOL& rEndCol, SCROW& rEndRow ) const;
 	BOOL			GetTableArea( SCTAB nTab, SCCOL& rEndCol, SCROW& rEndRow ) const;
 	BOOL			GetPrintArea( SCTAB nTab, SCCOL& rEndCol, SCROW& rEndRow,
@@ -1381,6 +1381,9 @@ SC_DLLPUBLIC	SvNumberFormatter*	GetForma
 										SCTAB nTab, ScQueryParam& rQueryParam );
 	void 			GetUpperCellString(SCCOL nCol, SCROW nRow, SCTAB nTab, String& rStr);
 
+    /** Update the dynamic end row position of a current data area. */
+    void            UpdateDynamicEndRow(ScDBData& rDBData) const;
+
 	BOOL			GetFilterEntries( SCCOL nCol, SCROW nRow, SCTAB nTab,
 								TypedStrCollection& rStrings, bool bFilter = false );
 	SC_DLLPUBLIC BOOL			GetFilterEntriesArea( SCCOL nCol, SCROW nStartRow, SCROW nEndRow,
Only in sc/inc: document.hxx.orig
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/inc/global.hxx sc/inc/global.hxx
--- sc.clean/inc/global.hxx	2008-03-03 11:24:43.000000000 -0500
+++ sc/inc/global.hxx	2008-03-05 00:52:49.000000000 -0500
@@ -932,6 +932,8 @@ struct SC_DLLPUBLIC ScQueryParam
 	SCTAB			nDestTab;
 	SCCOL			nDestCol;
 	SCROW			nDestRow;
+    SCROW           nDynamicEndRow;
+    bool            bUseDynamicRange;
 
 private:
 	SCSIZE			nEntryCount;
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/inc/table.hxx sc/inc/table.hxx
--- sc.clean/inc/table.hxx	2008-03-03 11:24:44.000000000 -0500
+++ sc/inc/table.hxx	2008-03-05 00:52:16.000000000 -0500
@@ -355,7 +355,7 @@ public:
 						SCCOL nStartCol, SCROW nStartRow, SCCOL& rEndCol, SCROW nEndRow );
 
 	void		GetDataArea( SCCOL& rStartCol, SCROW& rStartRow, SCCOL& rEndCol, SCROW& rEndRow,
-								BOOL bIncludeOld );
+								BOOL bIncludeOld ) const;
 
 	SCSIZE	    GetEmptyLinesInBlock( SCCOL nStartCol, SCROW nStartRow,
 										SCCOL nEndCol, SCROW nEndRow, ScDirection eDir );
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/core/data/documen3.cxx sc/source/core/data/documen3.cxx
--- sc.clean/source/core/data/documen3.cxx	2008-03-03 11:24:50.000000000 -0500
+++ sc/source/core/data/documen3.cxx	2008-03-05 11:47:22.000000000 -0500
@@ -1282,6 +1282,18 @@ BOOL ScDocument::HasRowHeader( SCCOL nSt
 //	GetFilterEntries - Eintraege fuer AutoFilter-Listbox
 //
 
+void ScDocument::UpdateDynamicEndRow(ScDBData& rDBData) const
+{
+    SCCOL nCol1, nCol2;
+    SCROW nRow1, nRow2;
+    SCTAB nTab;
+    rDBData.GetArea(nTab, nCol1, nRow1, nCol2, nRow2);
+    SCCOL nCol1a = nCol1, nCol2a = nCol2;
+    SCROW nRow1a = nRow1, nRow2a = nRow2;
+    GetDataArea(nTab, nCol1a, nRow1a, nCol2a, nRow2a, false);
+    rDBData.SetDynamicEndRow(nRow2a);
+}
+
 BOOL ScDocument::GetFilterEntries( SCCOL nCol, SCROW nRow, SCTAB nTab, TypedStrCollection& rStrings, bool bFilter )
 {
 	if ( ValidTab(nTab) && pTab[nTab] && pDBCollection )
@@ -1289,6 +1301,7 @@ BOOL ScDocument::GetFilterEntries( SCCOL
 		ScDBData* pDBData = pDBCollection->GetDBAtCursor(nCol, nRow, nTab, FALSE);	//!??
 		if (pDBData)
 		{
+            UpdateDynamicEndRow(*pDBData);
 			SCTAB nAreaTab;
 			SCCOL nStartCol;
 			SCROW nStartRow;
@@ -1300,6 +1313,7 @@ BOOL ScDocument::GetFilterEntries( SCCOL
 
 			ScQueryParam aParam;
 			pDBData->GetQueryParam( aParam );
+            nEndRow = aParam.nDynamicEndRow;
 			rStrings.SetCaseSensitive( aParam.bCaseSens );
 
             // return all filter entries, if a filter condition is connected with a boolean OR
Only in sc/source/core/data: documen3.cxx.orig
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/core/data/document.cxx sc/source/core/data/document.cxx
--- sc.clean/source/core/data/document.cxx	2008-03-03 11:24:50.000000000 -0500
+++ sc/source/core/data/document.cxx	2008-03-04 22:23:36.000000000 -0500
@@ -584,7 +584,7 @@ BOOL ScDocument::GetTableArea( SCTAB nTa
 //	zusammenhaengender Bereich
 
 void ScDocument::GetDataArea( SCTAB nTab, SCCOL& rStartCol, SCROW& rStartRow,
-								SCCOL& rEndCol, SCROW& rEndRow, BOOL bIncludeOld )
+								SCCOL& rEndCol, SCROW& rEndRow, BOOL bIncludeOld ) const
 {
 	if (VALIDTAB(nTab))
 		if (pTab[nTab])
Only in sc/source/core/data: document.cxx.orig
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/core/data/global2.cxx sc/source/core/data/global2.cxx
--- sc.clean/source/core/data/global2.cxx	2008-03-03 11:24:50.000000000 -0500
+++ sc/source/core/data/global2.cxx	2008-03-05 00:56:41.000000000 -0500
@@ -295,7 +295,8 @@ ScQueryParam::ScQueryParam( const ScQuer
 		bHasHeader(r.bHasHeader), bByRow(r.bByRow), bInplace(r.bInplace), bCaseSens(r.bCaseSens),
 		bRegExp(r.bRegExp), bMixedComparison(r.bMixedComparison),
         bDuplicate(r.bDuplicate), bDestPers(r.bDestPers),
-		nDestTab(r.nDestTab), nDestCol(r.nDestCol), nDestRow(r.nDestRow)
+		nDestTab(r.nDestTab), nDestCol(r.nDestCol), nDestRow(r.nDestRow),
+        nDynamicEndRow(r.nDynamicEndRow), bUseDynamicRange(r.bUseDynamicRange)
 {
 	nEntryCount = 0;
 
@@ -321,6 +322,8 @@ void ScQueryParam::Clear()
 	nTab = SCTAB_MAX;
 	bHasHeader = bCaseSens = bRegExp = bMixedComparison = FALSE;
 	bInplace = bByRow = bDuplicate = bDestPers = TRUE;
+    nDynamicEndRow = 0;
+    bUseDynamicRange = false;
 
 	Resize( MAXQUERY );
 	for (USHORT i=0; i<MAXQUERY; i++)
@@ -347,6 +350,8 @@ ScQueryParam& ScQueryParam::operator=( c
 	bDuplicate	= r.bDuplicate;
 	bByRow		= r.bByRow;
 	bDestPers	= r.bDestPers;
+    nDynamicEndRow = r.nDynamicEndRow;
+    bUseDynamicRange = r.bUseDynamicRange;
 
 	Resize( r.nEntryCount );
 	for (USHORT i=0; i<nEntryCount; i++)
@@ -384,7 +389,9 @@ BOOL ScQueryParam::operator==( const ScQ
 		&& (bDestPers   == rOther.bDestPers)
 		&& (nDestTab	== rOther.nDestTab)
 		&& (nDestCol	== rOther.nDestCol)
-		&& (nDestRow	== rOther.nDestRow) )
+		&& (nDestRow	== rOther.nDestRow)
+        && (nDynamicEndRow == rOther.nDynamicEndRow)
+        && (bUseDynamicRange == rOther.bUseDynamicRange) )
 	{
 		bEqual = TRUE;
 		for ( USHORT i=0; i<nUsed && bEqual; i++ )
@@ -446,6 +453,7 @@ void ScQueryParam::MoveToDest()
         nCol2 = sal::static_int_cast<SCCOL>( nCol2 + nDifX );
         nRow2 = sal::static_int_cast<SCROW>( nRow2 + nDifY );
         nTab  = sal::static_int_cast<SCTAB>( nTab  + nDifZ );
+        nDynamicEndRow = sal::static_int_cast<SCROW>( nDynamicEndRow + nDifY );
 		for (USHORT i=0; i<nEntryCount; i++)
 			pEntries[i].nField += nDifX;
 
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/core/data/table1.cxx sc/source/core/data/table1.cxx
--- sc.clean/source/core/data/table1.cxx	2008-03-03 11:24:50.000000000 -0500
+++ sc/source/core/data/table1.cxx	2008-03-04 22:23:36.000000000 -0500
@@ -665,7 +665,7 @@ BOOL ScTable::GetDataStart( SCCOL& rStar
 }
 
 void ScTable::GetDataArea( SCCOL& rStartCol, SCROW& rStartRow, SCCOL& rEndCol, SCROW& rEndRow,
-							BOOL bIncludeOld )
+							BOOL bIncludeOld ) const
 {
 	BOOL bLeft       = FALSE;
 	BOOL bRight  = FALSE;
Only in sc/source/core/data: table1.cxx.orig
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/core/data/table3.cxx sc/source/core/data/table3.cxx
--- sc.clean/source/core/data/table3.cxx	2008-03-03 11:24:50.000000000 -0500
+++ sc/source/core/data/table3.cxx	2008-03-05 11:10:54.000000000 -0500
@@ -1363,6 +1363,7 @@ SCSIZE ScTable::Query(ScQueryParam& rPar
 	BOOL* pSpecial = new BOOL[nEntryCount];
     lcl_PrepareQuery( pDocument, this, aParam, pSpecial );
 
+    SCROW nEndRow = aParam.bUseDynamicRange ? aParam.nDynamicEndRow : aParam.nRow2;
 	if (!aParam.bInplace)
 	{
 		nOutRow = aParam.nDestRow + nHeader;
@@ -1371,7 +1372,7 @@ SCSIZE ScTable::Query(ScQueryParam& rPar
 							aParam.nDestCol, aParam.nDestRow, aParam.nDestTab );
 	}
 
-	for (SCROW j=aParam.nRow1 + nHeader; j<=aParam.nRow2; j++)
+	for (SCROW j=aParam.nRow1 + nHeader; j<=nEndRow; j++)
 	{
 		BOOL bResult;									// Filterergebnis
 		BOOL bValid = ValidQuery(j, aParam, pSpecial);
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/core/tool/dbcolect.cxx sc/source/core/tool/dbcolect.cxx
--- sc.clean/source/core/tool/dbcolect.cxx	2008-03-03 11:24:50.000000000 -0500
+++ sc/source/core/tool/dbcolect.cxx	2008-03-05 11:52:55.000000000 -0500
@@ -671,18 +671,20 @@ String ScDBData::GetOperations() const
 	return aVal;
 }
 
-void ScDBData::GetArea(SCTAB& rTab, SCCOL& rCol1, SCROW& rRow1, SCCOL& rCol2, SCROW& rRow2) const
+void ScDBData::GetArea(SCTAB& rTab, SCCOL& rCol1, SCROW& rRow1, SCCOL& rCol2, SCROW& rRow2, 
+                       bool bUseDynamicRange) const
 {
 	rTab  = nTable;
 	rCol1 = nStartCol;
 	rRow1 = nStartRow;
 	rCol2 = nEndCol;
-	rRow2 = nEndRow;
+	rRow2 = bUseDynamicRange ? nDynamicEndRow : nEndRow;
 }
 
-void ScDBData::GetArea(ScRange& rRange) const
+void ScDBData::GetArea(ScRange& rRange, bool bUseDynamicRange) const
 {
-	rRange = ScRange( nStartCol,nStartRow,nTable, nEndCol,nEndRow,nTable );
+    SCROW nNewEndRow = bUseDynamicRange ? nDynamicEndRow : nEndRow;
+	rRange = ScRange( nStartCol, nStartRow, nTable, nEndCol, nNewEndRow, nTable );
 }
 
 void ScDBData::SetArea(SCTAB nTab, SCCOL nCol1, SCROW nRow1, SCCOL nCol2, SCROW nRow2)
@@ -694,6 +696,11 @@ void ScDBData::SetArea(SCTAB nTab, SCCOL
 	nEndRow   = nRow2;
 }
 
+void ScDBData::SetDynamicEndRow(SCROW nRow)
+{
+    nDynamicEndRow = nRow;
+}
+
 void ScDBData::MoveTo(SCTAB nTab, SCCOL nCol1, SCROW nRow1, SCCOL nCol2, SCROW nRow2)
 {
 	USHORT i;
@@ -799,6 +806,7 @@ void ScDBData::GetQueryParam( ScQueryPar
 	rQueryParam.nDestTab = nQueryDestTab;
 	rQueryParam.nDestCol = nQueryDestCol;
 	rQueryParam.nDestRow = nQueryDestRow;
+    rQueryParam.nDynamicEndRow = nDynamicEndRow;
 
 	rQueryParam.Resize( MAXQUERY );
 	for (SCSIZE i=0; i<MAXQUERY; i++)
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/ui/dbgui/filtdlg.cxx sc/source/ui/dbgui/filtdlg.cxx
--- sc.clean/source/ui/dbgui/filtdlg.cxx	2008-03-03 11:24:49.000000000 -0500
+++ sc/source/ui/dbgui/filtdlg.cxx	2008-03-05 11:11:49.000000000 -0500
@@ -403,7 +403,7 @@ void ScFilterDlg::UpdateValueList( USHOR
 			{
 				SCTAB nTab		 = nSrcTab;
 				SCROW nFirstRow = theQueryData.nRow1;
-				SCROW nLastRow	 = theQueryData.nRow2;
+				SCROW nLastRow	 = theQueryData.bUseDynamicRange ? theQueryData.nDynamicEndRow : theQueryData.nRow2;
 
 				//	erstmal ohne die erste Zeile
 
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/ui/inc/dbfunc.hxx sc/source/ui/inc/dbfunc.hxx
--- sc.clean/source/ui/inc/dbfunc.hxx	2008-03-03 11:24:45.000000000 -0500
+++ sc/source/ui/inc/dbfunc.hxx	2008-03-04 22:23:36.000000000 -0500
@@ -85,7 +85,7 @@ public:
 	void			GotoDBArea( const String& rDBName );
 
 					// DB-Bereich vom Cursor
-	ScDBData* 		GetDBData( BOOL bMarkArea = TRUE, ScGetDBMode eMode = SC_DB_MAKE );
+    ScDBData* 		GetDBData( bool bMarkArea = true, ScGetDBMode eMode = SC_DB_MAKE, bool bExpandRows = false );
 
 	void			NotifyCloseDbNameDlg( const ScDBCollection& rNewColl, const List& rDelAreaList );
 
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/ui/view/dbfunc.cxx sc/source/ui/view/dbfunc.cxx
--- sc.clean/source/ui/view/dbfunc.cxx	2008-03-03 11:24:49.000000000 -0500
+++ sc/source/ui/view/dbfunc.cxx	2008-03-05 11:47:22.000000000 -0500
@@ -112,7 +112,7 @@ void ScDBFunc::GotoDBArea( const String&
 
 //	aktuellen Datenbereich fuer Sortieren / Filtern suchen
 
-ScDBData* ScDBFunc::GetDBData( BOOL bMark, ScGetDBMode eMode )
+ScDBData* ScDBFunc::GetDBData( bool bMark, ScGetDBMode eMode, bool bExpandRows )
 {
 	ScDocShell* pDocSh = GetViewData()->GetDocShell();
 	ScDBData* pData = NULL;
@@ -124,11 +124,20 @@ ScDBData* ScDBFunc::GetDBData( BOOL bMar
 					ScRange( GetViewData()->GetCurX(), GetViewData()->GetCurY(),
 							 GetViewData()->GetTabNo() ),
 					eMode, FALSE );
+    if (!pData)
+        return NULL;
 
-	if ( pData && bMark )
+    if (bExpandRows)
+    {
+        // Dynamically expand rows to include any new data rows that are
+        // immediately below the original range.
+        GetViewData()->GetDocument()->UpdateDynamicEndRow(*pData);
+    }
+
+    if (bMark)
 	{
 		ScRange aFound;
-		pData->GetArea(aFound);
+		pData->GetArea(aFound, bExpandRows);
 		MarkRange( aFound, FALSE );
 	}
 	return pData;
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/ui/view/gridwin.cxx sc/source/ui/view/gridwin.cxx
--- sc.clean/source/ui/view/gridwin.cxx	2008-03-03 11:24:49.000000000 -0500
+++ sc/source/ui/view/gridwin.cxx	2008-03-05 11:12:33.000000000 -0500
@@ -1224,6 +1224,7 @@ void ScGridWindow::ExecFilter( ULONG nSe
 					pViewData->GetViewShell()->UpdateInputHandler();
 				}
 
+                aParam.bUseDynamicRange = true;
 				pViewData->GetView()->Query( aParam, NULL, TRUE );
 				pDBData->SetQueryParam( aParam );							// speichern
 			}
diff -urp --exclude=CVS --exclude=unxlngi6.pro --exclude=sc.vpj sc.clean/source/ui/view/tabvwshc.cxx sc/source/ui/view/tabvwshc.cxx
--- sc.clean/source/ui/view/tabvwshc.cxx	2008-03-03 11:24:49.000000000 -0500
+++ sc/source/ui/view/tabvwshc.cxx	2008-03-05 11:43:37.000000000 -0500
@@ -195,8 +195,9 @@ SfxModelessDialog* ScTabViewShell::Creat
 									 SCITEM_QUERYDATA,
 									 SCITEM_QUERYDATA );
 
-			ScDBData* pDBData = GetDBData();
+            ScDBData* pDBData = GetDBData(true, SC_DB_MAKE, true);
 			pDBData->GetQueryParam( aQueryParam );
+            aQueryParam.bUseDynamicRange = true;
 
 			ScQueryItem aItem( SCITEM_QUERYDATA, GetViewData(), &aQueryParam );
 			ScRange aAdvSource;
@@ -220,8 +221,9 @@ SfxModelessDialog* ScTabViewShell::Creat
 									 SCITEM_QUERYDATA,
 									 SCITEM_QUERYDATA );
 
-			ScDBData* pDBData = GetDBData();
+            ScDBData* pDBData = GetDBData(true, SC_DB_MAKE, true);
 			pDBData->GetQueryParam( aQueryParam );
+            aQueryParam.bUseDynamicRange = true;
 
 			aArgSet.Put( ScQueryItem( SCITEM_QUERYDATA,
 									  GetViewData(),
Only in sc/source/ui/view: tabvwshc.cxx.orig
