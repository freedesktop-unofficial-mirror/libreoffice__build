diff --git sc/source/core/data/table2.cxx sc/source/core/data/table2.cxx
index 7907caa..c719e4f 100644
--- sc/source/core/data/table2.cxx
+++ sc/source/core/data/table2.cxx
@@ -644,6 +644,7 @@ void ScTable::CopyToTable(SCCOL nCol1, SCROW nRow1, SCCOL nCol2, SCROW nRow2,
             //	Charts muessen beim Ein-/Ausblenden angepasst werden
             ScChartListenerCollection* pCharts = pDestTab->pDocument->GetChartListenerCollection();
 
+            bool bFlagChange = false;
             if (nRow1==0 && nRow2==MAXROW && pColWidth && pDestTab->pColWidth)
                 for (SCCOL i=nCol1; i<=nCol2; i++)
                 {
@@ -658,35 +659,46 @@ void ScTable::CopyToTable(SCCOL nCol1, SCROW nRow1, SCCOL nCol2, SCROW nRow2,
                         pCharts->SetRangeDirty(ScRange( i, 0, nTab, i, MAXROW, nTab ));
 
                     if (bChange)
-                        pDestTab->InvalidatePageBreaks();
+                        bFlagChange = true;
                 }
 
             if (nCol1==0 && nCol2==MAXCOL && pRowHeight && pDestTab->pRowHeight)
             {
                 bool bChange = pDestTab->pRowHeight->SumValues(nRow1, nRow2) != pRowHeight->SumValues(nRow1, nRow2);
-
                 if (bChange)
-                    pDestTab->InvalidatePageBreaks();
+                    bFlagChange = true;
 
                 pDestTab->pRowHeight->CopyFrom( *pRowHeight, nRow1, nRow2);
-                for (SCROW i=nRow1; i<=nRow2; i++)
+                pDestTab->pRowFlags->CopyFrom(*pRowFlags, nRow1, nRow2);
+
+                for (SCROW i = nRow1; i <= nRow2; ++i)
                 {
-                    // TODO: might need some performance improvement, block
-                    // operations instead of single GetValue()/SetValue() calls.
-                    BYTE nThisRowFlags = pRowFlags->GetValue(i);
-                    bool bThisHidden = RowHidden(i);
-                    bool bHiddenChange = (pDestTab->RowHidden(i) != bThisHidden);
-                    pDestTab->pRowFlags->SetValue( i, nThisRowFlags );
-                    pDestTab->SetRowHidden(i, i, bThisHidden);
-                    //!	Aenderungen zusammenfassen?
-					if (bHiddenChange && pCharts)
-                        pCharts->SetRangeDirty(ScRange( 0, i, nTab, MAXCOL, i, nTab ));
+                    SCROW nThisLastRow, nDestLastRow;
+                    bool bThisHidden = RowHidden(i, nThisLastRow);
+                    bool bDestHidden = pDestTab->RowHidden(i, nDestLastRow);
+
+                    // If the segment sizes differ, we take the shorter segment of the two.
+                    SCROW nLastRow = ::std::min(nThisLastRow, nDestLastRow);
+                    pDestTab->SetRowHidden(i, nLastRow, bThisHidden);
 
-                    if (bHiddenChange)
-                        pDestTab->InvalidatePageBreaks();
+                    bool bThisHiddenChange = (bThisHidden != bDestHidden);
+                    if (bThisHiddenChange && pCharts)
+                    {
+                        // Hidden flags differ.
+                        pCharts->SetRangeDirty(ScRange(0, i, nTab, MAXCOL, nLastRow, nTab));
+                    }
+
+                    if (bThisHiddenChange)
+                        bFlagChange = true;
+
+                    // Jump to the last row of the identical flag segment.
+                    i = nLastRow;
                 }
             }
 
+            if (bFlagChange)
+                pDestTab->InvalidatePageBreaks();
+
             pDestTab->SetOutlineTable( pOutlineTable );		// auch nur wenn bColRowFlags
         }
     }
