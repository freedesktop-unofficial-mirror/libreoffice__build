diff --git a/solenv/bin/modules/installer/worker.pm b/solenv/bin/modules/installer/worker.pm
index a06edb6..521c35e 100644
--- solenv/bin/modules/installer/worker.pm
+++ solenv/bin/modules/installer/worker.pm
@@ -797,7 +797,7 @@ sub install_simple ($$$$$$)
 
 		push @lines, "$destination\n";
 		# printf "cp $sourcepath $destdir$destination\n";
-		copy ("$sourcepath", "$destdir$destination") || die "Can't copy file: $!";
+		copy ("$sourcepath", "$destdir$destination") || die "Can't copy file: $sourcepath -> $destdir$destination $!";
 		my $sourcestat = stat($sourcepath);
 		utime ($sourcestat->atime, $sourcestat->mtime, "$destdir$destination");
 		chmod (oct($unixrights), "$destdir$destination") || die "Can't change permissions: $!";
diff --git a/solenv/inc/layout.mk b/solenv/inc/layout.mk
new file mode 100644
index 0000000..e8d15f0
--- /dev/null
+++ solenv/inc/layout.mk
@@ -0,0 +1,32 @@
+TRALAY=tralay
+XML_DEST=$(DLLDEST)
+XML_LANGS=$(alllangiso)
+
+ALL_XMLS=$(foreach,i,$(XML_FILES) "$(XML_DEST)/$i") $(foreach,i,$(XML_LANGS) $(foreach,j,$(XML_FILES) "$(XML_DEST)/$i/$j"))
+
+# Must remove the -j (no duplicate base file names) flag
+ZIPUPDATE=-u
+XML_ZIP = $(PRJNAME)-layout
+
+ALLTAR: localize.sdf $(XML_ZIP)
+
+$(XML_ZIP): $(ALL_XMLS)
+
+ZIP1DIR=$(XML_DEST)
+ZIP1TARGET=$(XML_ZIP)
+ZIP1LIST=$(ALL_XMLS:s@$(XML_DEST)/@@)
+
+%.xml:  localize.sdf
+
+$(foreach,i,$(XML_LANGS) $(XML_DEST)/$i/%.xml): %.xml
+	-$(MKDIR) $(@:d)
+	@echo $(foreach,i,$(XML_LANGS) $(XML_DEST)/$i/%.xml): %.xml
+	$(TRALAY) -m localize.sdf -o "$(XML_DEST)" -l $(XML_LANGS:f:t" -l ") "$<"
+
+$(XML_DEST)/%.xml: %.xml
+	-$(MKDIR) $(@:d)
+	$(COPY) "$<" "$@"
+
+# Don't want to overwrite filled localize.sdf with empty template
+template.sdf:
+	$(foreach,i,$(XML_FILES) $(TRALAY) -l en-US "$i") > $@
diff --git a/solenv/inc/rules.mk b/solenv/inc/rules.mk
index 626ef87..693faa2 100644
--- solenv/inc/rules.mk
+++ solenv/inc/rules.mk
@@ -33,7 +33,7 @@ MKFILENAME:=RULES.MK
 
 $(OBJ)$/%.obj : %.cxx
 	@echo ------------------------------
-	@echo Making: $@
+	@echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(GUI)"=="UNX"
 	@$(RM) $@ $(@:s/.obj/.o/)
 	$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)$/$*.o $(CFLAGSINCXX)$(PWD)$/$*.cxx
@@ -58,7 +58,7 @@ $(OBJ)$/%.obj : %.cxx
 
 $(OBJ)$/%.obj : %.cpp
 	@echo ------------------------------
-	@echo Making: $@
+	@echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(GUI)"=="UNX"
 	@$(RM) $@ $(@:s/.obj/.o/)
 	$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)$/$*.o $(CFLAGSINCXX)$(PWD)$/$*.cpp
@@ -81,7 +81,7 @@ $(OBJ)$/%.obj : %.cpp
 
 $(OBJ)$/%.obj : %.cc
 	@echo ------------------------------
-	@echo Making: $@
+	@echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(GUI)"=="UNX"
 	@$(RM) $@ $(@:s/.obj/.o/)
 	$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)$/$*.o $(CFLAGSINCXX)$(PWD)$/$*.cc
@@ -165,7 +165,7 @@ $(SLO)$/%.obj : %.cxx
 .IF "$(QUIET_BUILD)"==""
 	@echo ------------------------------
 .ENDIF
-	@echo Making: $@
+	@echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(ENABLE_PCH)"!="" && ( "$(PRJNAME)"!="sw" || "$(BUILD_SPECIAL)"!="TRUE" )
 # just a helper var	
 	@noop $(assign used_exc_switches=$(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)))
@@ -205,7 +205,7 @@ $(SLO)$/%.obj : %.cxx
 
 $(SLO)$/%.obj : %.cpp
 	@echo ------------------------------
-	@echo Making: $@
+	@echo Making $@
 .IF "$(GUI)"=="UNX"
 .IF "$(TEST)"!=""
 	$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) -E  $(CFLAGSINCXX)$(PWD)$/$*.cpp
diff --git a/solenv/inc/settings.mk b/solenv/inc/settings.mk
index 72eb170..60e9bca 100644
--- solenv/inc/settings.mk
+++ solenv/inc/settings.mk
@@ -1141,6 +1141,12 @@ LOCAL_EXCEPTIONS_FLAGS+=-DEXCEPTIONS_ON
 CDEFS+=-DGSTREAMER
 .ENDIF
 
+.IF "$(ENABLE_LAYOUT)" == "TRUE"
+CDEFS+=-DENABLE_LAYOUT=1
+.ELSE # ENABLE_LAYOUT != TRUE
+CFLAGS+=-DENABLE_LAYOUT=0
+.ENDIF # ENABLE_LAYOUT != TRUE
+
 # compose flags and defines for GUI
 .IF "$(TARGETTYPE)"=="GUI"
 CDEFS+= $(CDEFSGUI)
