From 8b8316ad9820f756370c660d86f8b2a54c936eac Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 16:53:26 +0200
Subject: [PATCH 053/878] cjk-character-units-imp.diff

---
 svtools/inc/ruler.hxx            |    7 ++++
 svtools/source/control/ruler.cxx |   42 ++++++++++++++++++++++++++--
 svx/inc/dlgutil.hxx              |    1 +
 svx/source/cui/paragrph.cxx      |    9 ++++++
 svx/source/dialog/dlgutil.cxx    |   37 ++++++++++++++++++++++++
 sw/inc/swmodule.hxx              |    2 +
 sw/source/ui/app/appopt.cxx      |   10 ++++++
 sw/source/ui/app/swmodul1.cxx    |   57 ++++++++++++++++++++++++++++++++++++++
 sw/source/ui/config/optload.cxx  |   17 +++++++++++
 sw/source/ui/config/usrpref.cxx  |   11 ++++--
 sw/source/ui/inc/pggrid.hxx      |    2 +-
 sw/source/ui/inc/uitool.hxx      |    3 ++
 sw/source/ui/inc/usrpref.hxx     |   12 ++++++++
 sw/source/ui/misc/pggrid.cxx     |   32 ++++++++++++++++++---
 sw/source/ui/shells/textsh1.cxx  |    4 ++
 sw/source/ui/uiview/view.cxx     |   17 ++++++++++-
 sw/source/ui/utlui/uitool.cxx    |   13 ++++++++
 17 files changed, 261 insertions(+), 15 deletions(-)

diff --git a/svtools/inc/ruler.hxx b/svtools/inc/ruler.hxx
index 64d8f59..350c6c5 100644
--- a/svtools/inc/ruler.hxx
+++ b/svtools/inc/ruler.hxx
@@ -690,6 +690,10 @@ private:
     USHORT              mnExtraStyle;
     USHORT              mnExtraClicks;
     USHORT              mnExtraModifier;
+// Amelia
+    long                mnCharWidth;
+    long                mnLineHeight;
+
     RulerExtra          meExtraType;
     RulerType           meDragType;
     MapUnit             meSourceUnit;
@@ -869,6 +873,9 @@ public:
 
     //set text direction right-to-left
     void                SetTextRTL(BOOL bRTL);
+
+    void                SetCharWidth( long nWidth ) { mnCharWidth = nWidth ; }
+    void                SetLineHeight( long nHeight ) { mnLineHeight = nHeight ; }
 };
 
 #endif  // _RULER_HXX
diff --git a/svtools/source/control/ruler.cxx b/svtools/source/control/ruler.cxx
index 9747a85..f228781 100644
--- a/svtools/source/control/ruler.cxx
+++ b/svtools/source/control/ruler.cxx
@@ -467,6 +467,25 @@ void Ruler::ImplDrawTicks( long nMin, long nMax, long nStart, long nCenter )
     long    nY;
     BOOL    bNoTicks = FALSE;
 
+    //Amelia
+    long    nTickUnit ;
+    long    nTick2 ;
+    if ( mnUnitIndex == RULER_UNIT_CHAR )
+    {
+        nTick3 = mnCharWidth;
+        nTickCount = mnCharWidth;
+        nTickUnit = mnCharWidth;
+        nTick2 = mnCharWidth;
+    }
+    else if ( mnUnitIndex == RULER_UNIT_LINE )
+    {
+        nTick3 = mnLineHeight;
+        nTickCount = mnLineHeight;
+        nTickUnit = mnLineHeight;
+        nTick2 = mnLineHeight;
+    }
+    aPixSize = maVirDev.LogicToPixel( Size( nTick3, nTick3 ), maMapMode );
+
     // Groessenvorberechnung
     BOOL bVertRight = FALSE;
     if ( mnWinStyle & WB_HORZ )
@@ -487,7 +506,11 @@ void Ruler::ImplDrawTicks( long nMin, long nMax, long nStart, long nCenter )
     long nMaxWidth = maVirDev.PixelToLogic( Size( mpData->nPageWidth, 0 ), maMapMode ).Width();
     if ( nMaxWidth < 0 )
         nMaxWidth *= -1;
-    nMaxWidth /= aImplRulerUnitTab[mnUnitIndex].nTickUnit;
+// Amelia
+    if (( mnUnitIndex == RULER_UNIT_CHAR ) || ( mnUnitIndex == RULER_UNIT_LINE ))
+        nMaxWidth /= nTickUnit;
+    else
+        nMaxWidth /= aImplRulerUnitTab[mnUnitIndex].nTickUnit;
     UniString aNumStr( UniString::CreateFromInt32( nMaxWidth ) );
     long nTxtWidth = GetTextWidth( aNumStr );
     if ( (nTxtWidth*2) > nTickWidth )
@@ -567,7 +590,11 @@ void Ruler::ImplDrawTicks( long nMin, long nMax, long nStart, long nCenter )
                 // Tick3 - Ausgabe (Text)
                 if ( !(nTick % nTick3) )
                 {
-                    aNumStr = UniString::CreateFromInt32( nTick / aImplRulerUnitTab[mnUnitIndex].nTickUnit );
+                    //aNumStr = UniString::CreateFromInt32( nTick / aImplRulerUnitTab[mnUnitIndex].nTickUnit );
+                    if ( ( mnUnitIndex == RULER_UNIT_CHAR ) || ( mnUnitIndex == RULER_UNIT_LINE ) )
+                        aNumStr = UniString::CreateFromInt32( nTick / nTickUnit );
+                    else
+                        aNumStr = UniString::CreateFromInt32( nTick / aImplRulerUnitTab[mnUnitIndex].nTickUnit );
                     nTxtWidth2 = GetTextWidth( aNumStr )/2;
 
                     nX = nStart+n;
@@ -594,7 +621,10 @@ void Ruler::ImplDrawTicks( long nMin, long nMax, long nStart, long nCenter )
                 // Tick/Tick2 - Ausgabe (Striche)
                 else
                 {
-                    if ( !(nTick % aImplRulerUnitTab[mnUnitIndex].nTick2) )
+        /// Amelia
+                    if ( ( mnUnitIndex != RULER_UNIT_CHAR ) && ( mnUnitIndex != RULER_UNIT_LINE ) )
+                        nTick2 = aImplRulerUnitTab[mnUnitIndex].nTick2;
+                    if ( !(nTick % nTick2 ) )
                         nTickWidth = RULER_TICK2_WIDTH;
                     else
                         nTickWidth = RULER_TICK1_WIDTH;
@@ -2804,6 +2834,12 @@ void Ruler::SetUnit( FieldUnit eNewUnit )
             case FUNIT_PICA:
                 mnUnitIndex = RULER_UNIT_PICA;
                 break;
+            case FUNIT_CHAR:
+                mnUnitIndex = RULER_UNIT_CHAR;
+                break;
+            case FUNIT_LINE:
+                mnUnitIndex = RULER_UNIT_LINE;
+                break;
             default:
 #ifdef DBG_UTIL
                 DBG_ERRORFILE( "Ruler::SetUnit() - Wrong Unit" );
diff --git a/svx/inc/dlgutil.hxx b/svx/inc/dlgutil.hxx
index b18c56b..7512e74 100644
--- a/svx/inc/dlgutil.hxx
+++ b/svx/inc/dlgutil.hxx
@@ -55,6 +55,7 @@ SVX_DLLPUBLIC void SetFieldUnit( MetricBox& rCtrl,
                    FieldUnit eUnit, BOOL bAll = FALSE );
 
 SVX_DLLPUBLIC FieldUnit GetModuleFieldUnit( const SfxItemSet* pSet = NULL );
+SVX_DLLPUBLIC  BOOL GetApplyCharUnit( const SfxItemSet* pSet = NULL );
 
 // Metriken umrechnen
 SVX_DLLPUBLIC long 		CalcToUnit( float nIn, SfxMapUnit eUnit );
diff --git a/svx/source/cui/paragrph.cxx b/svx/source/cui/paragrph.cxx
index bcc9c01..337d133 100644
--- a/svx/source/cui/paragrph.cxx
+++ b/svx/source/cui/paragrph.cxx
@@ -457,11 +457,20 @@ void SvxStdParagraphTabPage::Reset( const SfxItemSet& rSet )
 
     // Metrik einstellen
     FieldUnit eFUnit = GetModuleFieldUnit( &rSet );
+
+    BOOL bApplyCharUnit = sal_False ;
+    bApplyCharUnit = GetApplyCharUnit( &rSet );
+
+    if ( bApplyCharUnit )
+        eFUnit = FUNIT_CHAR;  // Amelia
     SetFieldUnit( aLeftIndent, eFUnit );
     SetFieldUnit( aRightIndent, eFUnit );
     SetFieldUnit( aFLineIndent, eFUnit );
+    if ( bApplyCharUnit )
+        eFUnit = FUNIT_LINE;   // Amelia
     SetFieldUnit( aTopDist, eFUnit );
     SetFieldUnit( aBottomDist, eFUnit );
+    eFUnit = FUNIT_POINT;
     SetFieldUnit( aLineDistAtMetricBox, eFUnit );
 
     USHORT _nWhich = GetWhich( SID_ATTR_LRSPACE );
diff --git a/svx/source/dialog/dlgutil.cxx b/svx/source/dialog/dlgutil.cxx
index 2c228af..8b68de7 100644
--- a/svx/source/dialog/dlgutil.cxx
+++ b/svx/source/dialog/dlgutil.cxx
@@ -40,6 +40,10 @@
 #include <sfx2/viewfrm.hxx>
 #include <sfx2/objsh.hxx>
 
+#ifndef _SFXENUMITEM_HXX
+#include <svtools/eitem.hxx>
+#endif
+
 #include <svx/dialogs.hrc>
 
 #include "dlgutil.hxx"
@@ -109,6 +113,9 @@ void SetFieldUnit( MetricField& rField, FieldUnit eUnit, BOOL bAll )
     rField.SetUnit( eUnit );
     switch( eUnit )
     {
+        // Amelia : sets the step of "char" and "line" unit , they are same as FUNIT_MM
+        case FUNIT_CHAR:
+        case FUNIT_LINE:
         case FUNIT_MM:
             rField.SetSpinSize( 50 );
             break;
@@ -206,6 +213,36 @@ FieldUnit GetModuleFieldUnit( const SfxItemSet* pSet )
     }
     return eUnit;
 }
+// -----------------------------------------------------------------------
+BOOL GetApplyCharUnit( const SfxItemSet* pSet )
+{
+    BOOL  bUseCharUnit = FALSE;
+    const SfxPoolItem* pItem = NULL;
+    if ( pSet && SFX_ITEM_SET == pSet->GetItemState( SID_ATTR_APPLYCHARUNIT, FALSE, &pItem ) )
+        bUseCharUnit = (BOOL)( (const SfxBoolItem*)pItem )->GetValue();
+    else
+    {
+        SfxViewFrame* pFrame = SfxViewFrame::Current();
+        SfxObjectShell* pSh = NULL;
+        if ( pFrame )
+        pSh = pFrame->GetObjectShell();
+        if ( pSh )  // #93209# the object shell is not always available during reload
+        {
+            SfxModule* pModule = pSh->GetModule();
+            if ( pModule )
+            {
+                const SfxPoolItem* pItem = pModule->GetItem( SID_ATTR_APPLYCHARUNIT );
+                if ( pItem )
+                    bUseCharUnit = (BOOL)( (SfxBoolItem*)pItem )->GetValue();
+            }
+            else
+            {
+                DBG_ERRORFILE( "GetApplyCharUnit(): no module found" );
+            }
+        }
+    }
+    return bUseCharUnit;
+}
 
 // -----------------------------------------------------------------------
 void SetMetricValue( MetricField& rField, long nCoreValue, SfxMapUnit eUnit )
diff --git a/sw/inc/swmodule.hxx b/sw/inc/swmodule.hxx
index 4b40d5c..9b5cc7e 100644
--- a/sw/inc/swmodule.hxx
+++ b/sw/inc/swmodule.hxx
@@ -166,6 +166,8 @@ public:
     //default page mode for text grid 
     void ApplyDefaultPageMode(sal_Bool bIsSquaredPageMode);
 
+    void ApplyUserCharUnit(BOOL bApplyChar, BOOL bWeb);  // apply_char_unit
+
     // ConfigItems erzeugen
     SwModuleOptions*    GetModuleConfig()		{ return pModuleConfig;}
     SwPrintOptions* 	GetPrtOptions(sal_Bool bWeb);
diff --git a/sw/source/ui/app/appopt.cxx b/sw/source/ui/app/appopt.cxx
index 13a341c..2d63235 100644
--- a/sw/source/ui/app/appopt.cxx
+++ b/sw/source/ui/app/appopt.cxx
@@ -139,6 +139,7 @@ SfxItemSet*	 SwModule::CreateItemSet( USHORT nId )
                                     FN_PARAM_WRTSHELL,		FN_PARAM_WRTSHELL,
                                     FN_PARAM_ADDPRINTER, 	FN_PARAM_ADDPRINTER,
                                     SID_ATTR_METRIC,		SID_ATTR_METRIC,
+                                    SID_ATTR_APPLYCHARUNIT, SID_ATTR_APPLYCHARUNIT,
                                     SID_ATTR_DEFTABSTOP, 	SID_ATTR_DEFTABSTOP,
                                     RES_BACKGROUND,			RES_BACKGROUND,
                                     SID_HTML_MODE,			SID_HTML_MODE,
@@ -379,6 +380,15 @@ void SwModule::ApplyItemSet( USHORT nId, const SfxItemSet& rSet )
         const SfxUInt16Item* pMetricItem = (const SfxUInt16Item*)pItem;
         ::SetDfltMetric((FieldUnit)pMetricItem->GetValue(), !bTextDialog);
     }
+
+    if( SFX_ITEM_SET == rSet.GetItemState(SID_ATTR_APPLYCHARUNIT,
+                                                    FALSE, &pItem ) )
+    {
+        SFX_APP()->SetOptions(rSet);
+        const SfxBoolItem* pCharItem = (const SfxBoolItem*)pItem;
+        ::SetApplyCharUnit(pCharItem->GetValue(), !bTextDialog);
+    }
+
     if( SFX_ITEM_SET == rSet.GetItemState(FN_HSCROLL_METRIC,
                                                     FALSE, &pItem ) )
     {
diff --git a/sw/source/ui/app/swmodul1.cxx b/sw/source/ui/app/swmodul1.cxx
index aa8f669..0edaf28 100644
--- a/sw/source/ui/app/swmodul1.cxx
+++ b/sw/source/ui/app/swmodul1.cxx
@@ -308,6 +308,63 @@ void SwModule::ApplyRulerMetric( FieldUnit eMetric, BOOL bHorizontal, BOOL bWeb
         pTmpView = SwModule::GetNextView(pTmpView);
     }
 }
+
+/*-------------------------------------------------
+set the usrpref 's char unit attribute and set ruler
+'s unit as char if the "apply char unit" is checked
+--------------------------------------------------*/
+void SwModule::ApplyUserCharUnit(BOOL bApplyChar, BOOL bWeb)
+{
+    SwMasterUsrPref* pPref;
+    if(bWeb)
+    {
+        if(!pWebUsrPref)
+        GetUsrPref(sal_True);
+        pPref = pWebUsrPref;
+    }
+    else
+    {
+        if(!pUsrPref)
+        GetUsrPref(sal_False);
+        pPref = pUsrPref;
+    }
+    BOOL  bOldApplyCharUnit = pPref->IsApplyCharUnit();
+    BOOL    bHasChanged = FALSE;
+    if(bOldApplyCharUnit != bApplyChar)
+    {
+        pPref->SetApplyCharUnit(bApplyChar);
+        bHasChanged = TRUE;
+    }
+
+    if( !bHasChanged )
+        return;
+
+    FieldUnit eHScrollMetric = pPref->IsHScrollMetric() ? pPref->GetHScrollMetric() : pPref->GetMetric();
+    FieldUnit eVScrollMetric = pPref->IsVScrollMetric() ? pPref->GetVScrollMetric() : pPref->GetMetric();
+    if(bApplyChar)
+    {
+        eHScrollMetric = FUNIT_CHAR;
+        eVScrollMetric = FUNIT_LINE;
+    }
+    else
+    {
+        eHScrollMetric = FUNIT_CM;
+        eVScrollMetric = FUNIT_CM;
+    }
+    SwView* pTmpView = SwModule::GetFirstView();
+    // fuer alle MDI-Fenster das Lineal umschalten
+    while(pTmpView)
+    {
+        if(bWeb == (0 != PTR_CAST(SwWebView, pTmpView)))
+        {
+            pTmpView->ChangeVLinealMetric(eVScrollMetric);
+            pTmpView->ChangeTabMetric(eHScrollMetric);
+        }
+
+        pTmpView = SwModule::GetNextView(pTmpView);
+    }
+}
+
 /*-----------------13.11.96 11.57-------------------
 
 --------------------------------------------------*/
diff --git a/sw/source/ui/config/optload.cxx b/sw/source/ui/config/optload.cxx
index a5976b5..761e7d0 100644
--- a/sw/source/ui/config/optload.cxx
+++ b/sw/source/ui/config/optload.cxx
@@ -219,6 +219,12 @@ BOOL __EXPORT SwLoadOptPage::FillItemSet( SfxItemSet& rSet )
                     (USHORT)aTabMF.Denormalize(aTabMF.GetValue(FUNIT_TWIP))));
         bRet = TRUE;
     }
+
+    if(aUseCharUnit.IsChecked() != aUseCharUnit.GetSavedValue())
+    {
+        rSet.Put(SfxBoolItem(SID_ATTR_APPLYCHARUNIT, aUseCharUnit.IsChecked()));
+        bRet = TRUE;
+    }
     
     sal_Bool bIsSquaredPageModeFlag = aUseSquaredPageMode.IsChecked();
     if ( bIsSquaredPageModeFlag != aUseSquaredPageMode.GetSavedValue() )
@@ -306,6 +312,17 @@ void __EXPORT SwLoadOptPage::Reset( const SfxItemSet& rSet)
         aUseSquaredPageMode.Check( bSquaredPageMode );
             aUseSquaredPageMode.SaveValue();
     }
+
+    if(SFX_ITEM_SET == rSet.GetItemState(SID_ATTR_APPLYCHARUNIT, FALSE, &pItem))
+    {
+        BOOL bUseCharUnit = ((const SfxBoolItem*)pItem)->GetValue();
+        aUseCharUnit.Check(bUseCharUnit);
+    }
+    else
+    {
+        aUseCharUnit.Check(pUsrPref->IsApplyCharUnit());
+    }
+    aUseCharUnit.SaveValue();
 }
 /*-----------------13.01.97 14.44-------------------
     Metric des Deftabstops umschalten
diff --git a/sw/source/ui/config/usrpref.cxx b/sw/source/ui/config/usrpref.cxx
index 5f6041d..ffe97ca 100644
--- a/sw/source/ui/config/usrpref.cxx
+++ b/sw/source/ui/config/usrpref.cxx
@@ -263,9 +263,10 @@ Sequence<OUString> SwLayoutViewConfig::GetPropertyNames()
         "Window/IsVerticalRulerRight",      //15
         "ViewLayout/Columns",               //16
         "ViewLayout/BookMode",              //17
-        "Other/IsSquaredPageMode"           //18
+        "Other/IsSquaredPageMode",        //18
+        "Other/ApplyCharUnit"               //19
     };
-    const int nCount = bWeb ? 14 : 19;
+    const int nCount = bWeb ? 14 : 20;
     Sequence<OUString> aNames(nCount);
     OUString* pNames = aNames.getArray();
     for(int i = 0; i < nCount; i++)
@@ -332,8 +333,9 @@ void SwLayoutViewConfig::Commit()
             case 16: pValues[nProp] <<= (sal_Int32)rParent.GetViewLayoutColumns(); break;// "ViewLayout/Columns",
             case 17: bSet = rParent.IsViewLayoutBookMode(); break;// "ViewLayout/BookMode",
             case 18: bSet = rParent.IsSquaredPageMode(); break;// "Other/IsSquaredPageMode",
+            case 19: bSet = rParent.IsApplyCharUnit(); break;// "Other/IsApplyCharUnit",
         }
-        if(nProp < 8 || nProp == 10 || nProp == 15 || nProp == 17 || nProp == 18 )
+        if(nProp < 8 || nProp == 10 || nProp == 15 || nProp == 17 || nProp == 18 || nProp == 19 )
             pValues[nProp].setValue(&bSet, ::getBooleanCppuType());
     }
     PutProperties(aNames, aValues);
@@ -353,7 +355,7 @@ void SwLayoutViewConfig::Load()
         {
             if(pValues[nProp].hasValue())
             {
-                sal_Bool bSet = nProp < 8 || nProp == 10 || nProp == 17 || nProp == 18 ? *(sal_Bool*)pValues[nProp].getValue() : sal_False;
+                sal_Bool bSet = nProp < 8 || nProp == 10 || nProp == 17 || nProp == 18 || nProp == 19 ? *(sal_Bool*)pValues[nProp].getValue() : sal_False;
                 switch(nProp)
                 {
                     case  0: rParent.SetCrossHair(bSet); break;// "Line/Guide",
@@ -419,6 +421,7 @@ void SwLayoutViewConfig::Load()
                     break;// "ViewLayout/Columns",
                     case 17: rParent.SetViewLayoutBookMode(bSet); break;// "ViewLayout/BookMode",
                     case 18: rParent.SetDefaultPageMode(bSet,TRUE); break;// "Other/IsSquaredPageMode",
+                    case 19: rParent.SetApplyCharUnit(bSet); break;// "Other/ApplyUserChar"
                 }
             }
         }
diff --git a/sw/source/ui/inc/pggrid.hxx b/sw/source/ui/inc/pggrid.hxx
index d3e9117..99b901e 100644
--- a/sw/source/ui/inc/pggrid.hxx
+++ b/sw/source/ui/inc/pggrid.hxx
@@ -76,7 +76,7 @@ class SwTextGridPage: public SfxTabPage
     FixedText       aColorFT;
     ColorListBox    aColorLB;
 
-    Window*         aControls[18];
+    Window*         aControls[20];
 
     sal_Int32       m_nRubyUserValue;
     sal_Bool        m_bRubyUserValue;
diff --git a/sw/source/ui/inc/uitool.hxx b/sw/source/ui/inc/uitool.hxx
index 0348e04..a1bd557 100644
--- a/sw/source/ui/inc/uitool.hxx
+++ b/sw/source/ui/inc/uitool.hxx
@@ -73,6 +73,9 @@ void SfxToSwPageDescAttr( const SwWrtShell& rShell, SfxItemSet& rSet );
 SW_DLLPUBLIC FieldUnit	GetDfltMetric(BOOL bWeb);
 void		SetDfltMetric(FieldUnit	eMetric, BOOL bWeb);
 
+SW_DLLPUBLIC BOOL HasCharUnit( BOOL bWeb );
+void SetApplyCharUnit(BOOL bApplyChar, BOOL bWeb);
+
 // ListBox mit allen Zeichenvorlagen fuellen - ausser Standard!
 SW_DLLPUBLIC void FillCharStyleListBox(ListBox& rToFill, SwDocShell* pDocSh, BOOL bSorted = FALSE, BOOL bWithDefault = FALSE);
 
diff --git a/sw/source/ui/inc/usrpref.hxx b/sw/source/ui/inc/usrpref.hxx
index 0bb79dd..890eabc 100644
--- a/sw/source/ui/inc/usrpref.hxx
+++ b/sw/source/ui/inc/usrpref.hxx
@@ -149,6 +149,7 @@ class SwMasterUsrPref : public SwViewOption
     SwCursorConfig      aCursorConfig;
     SwWebColorConfig*   pWebColorConfig;
 
+    sal_Bool bApplyCharUnit; // apply_char_unit
 public:
     SwMasterUsrPref(BOOL bWeb);
     ~SwMasterUsrPref();
@@ -250,6 +251,17 @@ public:
                         aLayoutConfig.SetModified();
                 }
 
+    sal_Bool    IsApplyCharUnit() const
+    {
+        return bApplyCharUnit;
+    }
+    void   SetApplyCharUnit(BOOL bSet, sal_Bool bNoModify = sal_False)
+    {
+        bApplyCharUnit = bSet;
+        if(!bNoModify)
+            aLayoutConfig.SetModified();
+    }
+
     sal_Int32   GetDefTab() const { return nDefTab;}
     void        SetDefTab( sal_Int32  nSet, sal_Bool bNoModify = sal_False )
                 {
diff --git a/sw/source/ui/misc/pggrid.cxx b/sw/source/ui/misc/pggrid.cxx
index db98e3f..bd23a64 100644
--- a/sw/source/ui/misc/pggrid.cxx
+++ b/sw/source/ui/misc/pggrid.cxx
@@ -113,7 +113,9 @@ SwTextGridPage::SwTextGridPage(Window *pParent, const SfxItemSet &rSet) :
     aControls[14] =&aPrintCB;
     aControls[15] =&aColorFT;
     aControls[16] =&aColorLB;
-    aControls[17] =0;
+    aControls[17] =&aLinesRangeFT;
+    aControls[18] =&aCharsRangeFT;
+    aControls[19] =0;
 
     Link aLink = LINK(this, SwTextGridPage, CharorLineChangedHdl);
     aCharsPerLineNF.SetUpHdl(aLink);
@@ -309,6 +311,10 @@ void SwTextGridPage::PutGridItem(SfxItemSet& rSet)
         aGridItem.SetPrintGrid(aPrintCB.IsChecked());
         aGridItem.SetColor(aColorLB.GetSelectEntryColor());
         rSet.Put(aGridItem);
+/// Amelia
+        SwView * pView = ::GetActiveView();
+        pView->GetHLineal().SetCharWidth((long)(aCharWidthMF.GetValue(FUNIT_TWIP)/56.7));
+        pView->GetVLineal().SetLineHeight((long)(aTextSizeMF.GetValue(FUNIT_TWIP)/56.7));
 }
 /* -----------------------------08.02.2002 10:54------------------------------
 
@@ -413,6 +419,10 @@ IMPL_LINK(SwTextGridPage, CharorLineChangedHdl, SpinField*, pField)
             long nHeight = static_cast< sal_Int32 >(m_aPageSize.Height() / aLinesPerPageNF.GetValue());
             aTextSizeMF.SetValue(aTextSizeMF.Normalize(nHeight), FUNIT_TWIP);
             aRubySizeMF.SetValue(0, FUNIT_TWIP);
+            String aMaxLinesFTStr = String::CreateFromAscii("( 1 - ");
+            aMaxLinesFTStr += String::CreateFromInt32(aLinesPerPageNF.GetValue());
+            aMaxLinesFTStr += String::CreateFromAscii(" )");
+            aLinesRangeFT.SetText( aMaxLinesFTStr );
             
             m_nRubyUserValue = nHeight;
             m_bRubyUserValue = sal_True;
@@ -421,6 +431,10 @@ IMPL_LINK(SwTextGridPage, CharorLineChangedHdl, SpinField*, pField)
         {
             long nWidth = static_cast< sal_Int32 >(m_aPageSize.Width() / aCharsPerLineNF.GetValue());
             aCharWidthMF.SetValue(aCharWidthMF.Normalize(nWidth), FUNIT_TWIP);
+            String aMaxCharsFTStr = String::CreateFromAscii("( 1 - ");
+            aMaxCharsFTStr += String::CreateFromInt32(aCharsPerLineNF.GetValue());
+            aMaxCharsFTStr += String::CreateFromAscii(" )");
+            aCharsRangeFT.SetText( aMaxCharsFTStr );
         }
     }
     GridModifyHdl(0);
@@ -436,7 +450,6 @@ IMPL_LINK(SwTextGridPage, TextSizeChangedHdl, SpinField*, pField)
         if (&aTextSizeMF == pField)
         {
             sal_Int32 nTextSize = static_cast< sal_Int32 >(aTextSizeMF.Denormalize(aTextSizeMF.GetValue(FUNIT_TWIP)));
-            aCharsPerLineNF.SetValue(m_aPageSize.Width() / nTextSize);
             m_bRubyUserValue = sal_False;
         }
         //set maximum line per page
@@ -454,14 +467,22 @@ IMPL_LINK(SwTextGridPage, TextSizeChangedHdl, SpinField*, pField)
             sal_Int32 nTextSize = static_cast< sal_Int32 >(aTextSizeMF.Denormalize(aTextSizeMF.GetValue(FUNIT_TWIP)));
             aLinesPerPageNF.SetValue(m_aPageSize.Height() / nTextSize);
             m_bRubyUserValue = sal_False;
+            String aRangesStr = String::CreateFromAscii("( 1 - ");
+            aRangesStr += String::CreateFromInt32( m_aPageSize.Height() / nTextSize );
+            aRangesStr += String::CreateFromAscii(" )");
+            aLinesRangeFT.SetText( aRangesStr );
         }
         else if (&aCharWidthMF == pField)
         {
             sal_Int32 nTextWidth = static_cast< sal_Int32 >(aCharWidthMF.Denormalize(aCharWidthMF.GetValue(FUNIT_TWIP)));
+            sal_Int32 nMaxChar = 45 ;
             if (nTextWidth)
-                aCharsPerLineNF.SetValue(m_aPageSize.Width() / nTextWidth); 
-            else
-                aCharsPerLineNF.SetValue( 45 );
+                nMaxChar = m_aPageSize.Width() / nTextWidth;
+            aCharsPerLineNF.SetValue( nMaxChar );
+            String aCharRangeStr = String::CreateFromAscii("( 1 - ");
+            aCharRangeStr += String::CreateFromInt32( nMaxChar );
+            aCharRangeStr += String::CreateFromAscii(" )");
+            aCharsRangeFT.SetText( aCharRangeStr );
         }
         //rubySize is disabled
     }
@@ -489,6 +510,7 @@ IMPL_LINK(SwTextGridPage, GridTypeHdl, RadioButton*, pButton)
     {
         aCharsPerLineFT.Enable(sal_False);
         aCharsPerLineNF.Enable(sal_False);
+        aCharsRangeFT.Enable(sal_False);
         aCharWidthFT.Enable(sal_False);
         aCharWidthMF.Enable(sal_False);
     }
diff --git a/sw/source/ui/shells/textsh1.cxx b/sw/source/ui/shells/textsh1.cxx
index cf70229..5213fa0 100644
--- a/sw/source/ui/shells/textsh1.cxx
+++ b/sw/source/ui/shells/textsh1.cxx
@@ -854,6 +854,10 @@ void SwTextShell::Execute(SfxRequest &rReq)
         {
             FieldUnit eMetric = ::GetDfltMetric(0 != PTR_CAST(SwWebView, &GetView()));
             SW_MOD()->PutItem(SfxUInt16Item(SID_ATTR_METRIC, static_cast< UINT16 >(eMetric)));
+
+            BOOL bApplyCharUnit = ::HasCharUnit(0 != PTR_CAST(SwWebView, &GetView()));
+            SW_MOD()->PutItem(SfxBoolItem(SID_ATTR_APPLYCHARUNIT, bApplyCharUnit));
+
             SfxItemSet aCoreSet( GetPool(),
                             RES_PARATR_BEGIN,           RES_PARATR_END - 1,
                             // --> OD 2008-02-25 #refactorlists#
diff --git a/sw/source/ui/uiview/view.cxx b/sw/source/ui/uiview/view.cxx
index 22bea94..9dc1489 100644
--- a/sw/source/ui/uiview/view.cxx
+++ b/sw/source/ui/uiview/view.cxx
@@ -118,6 +118,7 @@
 #include <com/sun/star/document/XDocumentPropertiesSupplier.hpp>
 
 
+
 using namespace ::com::sun::star;
 using namespace ::com::sun::star::uno;
 using namespace ::com::sun::star::lang;
@@ -959,9 +960,21 @@ SwView::SwView( SfxViewFrame *_pFrame, SfxViewShell* pOldSh )
     pVRuler->SetZoom( aZoomFract );
     pHRuler->SetDoubleClickHdl(LINK( this, SwView, ExecRulerClick ));
     FieldUnit eMetric = pUsrPref->GetHScrollMetric();
-    pHRuler->SetUnit( eMetric );
+
+    BOOL bApplyCharUnit = pUsrPref->IsApplyCharUnit();
+    if ( bApplyCharUnit )
+        pHRuler->SetUnit( FUNIT_CHAR );
+    else
+        pHRuler->SetUnit( eMetric );
+
     eMetric = pUsrPref->GetVScrollMetric();
-    pVRuler->SetUnit( eMetric );
+    if ( bApplyCharUnit )
+        pVRuler->SetUnit(FUNIT_LINE);
+    else
+        pVRuler->SetUnit( eMetric );
+
+        pHRuler->SetCharWidth( 371 );  // default character width
+        pVRuler->SetLineHeight( 551 );  // default line height
 
     // DocShell setzen
     pDocSh->SetView( this );
diff --git a/sw/source/ui/utlui/uitool.cxx b/sw/source/ui/utlui/uitool.cxx
index c079d94..2810d17 100644
--- a/sw/source/ui/utlui/uitool.cxx
+++ b/sw/source/ui/utlui/uitool.cxx
@@ -736,6 +736,19 @@ String GetAppLangDateTimeString( const DateTime& rDT )
     return sRet;
 }
 
+/*----------------------------------------------------------------------------
+ * add a new function which can get and set the current "SID_ATTR_APPLYCHARUNIT" value
+ *---------------------------------------------------------------------------*/
+BOOL HasCharUnit( BOOL bWeb)
+{
+    return SW_MOD()->GetUsrPref(bWeb)->IsApplyCharUnit();
+}
+
+void SetApplyCharUnit(BOOL bApplyChar, BOOL bWeb)
+{
+    SW_MOD()->ApplyUserCharUnit(bApplyChar, bWeb);
+}
+
 /*-- 26.01.2006 08:06:33---------------------------------------------------
 
   -----------------------------------------------------------------------*/
-- 
1.7.0.1

