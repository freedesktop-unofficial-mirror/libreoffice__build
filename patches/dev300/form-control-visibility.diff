Index: xmloff/source/forms/formattributes.hxx
===================================================================
--- xmloff/source/forms/formattributes.hxx	(revision 271402)
+++ xmloff/source/forms/formattributes.hxx	(working copy)
@@ -69,6 +69,7 @@
 	#define CCA_VALUE					0x00200000
     #define CCA_ORIENTATION             0x00400000
     #define CCA_VISUAL_EFFECT           0x00800000
+    #define CCA_ENABLEVISIBLE                 0x01000000
 
 	// flags for database control atttributes
 	#define DA_BOUND_COLUMN				0x00000001
Index: xmloff/source/forms/elementexport.cxx
===================================================================
--- xmloff/source/forms/elementexport.cxx	(revision 271402)
+++ xmloff/source/forms/elementexport.cxx	(working copy)
@@ -529,15 +529,15 @@
 		{
 			static sal_Int32 nBooleanPropertyAttributeIds[] =
 			{	// attribute flags
-				CCA_CURRENT_SELECTED, CCA_DISABLED, CCA_DROPDOWN, CCA_PRINTABLE, CCA_READONLY, CCA_SELECTED, CCA_TAB_STOP
+				CCA_CURRENT_SELECTED, CCA_DISABLED, CCA_DROPDOWN, CCA_PRINTABLE, CCA_READONLY, CCA_SELECTED, CCA_TAB_STOP, CCA_ENABLEVISIBLE
 			};
 			static const ::rtl::OUString* pBooleanPropertyNames[] =
 			{	// property names
-				&PROPERTY_STATE, &PROPERTY_ENABLED, &PROPERTY_DROPDOWN, &PROPERTY_PRINTABLE, &PROPERTY_READONLY, &PROPERTY_DEFAULT_STATE, &PROPERTY_TABSTOP
+				&PROPERTY_STATE, &PROPERTY_ENABLED, &PROPERTY_DROPDOWN, &PROPERTY_PRINTABLE, &PROPERTY_READONLY, &PROPERTY_DEFAULT_STATE, &PROPERTY_TABSTOP, &PROPERTY_ENABLEVISIBLE
 			};
 			static sal_Bool nBooleanPropertyAttrFlags[] =
 			{	// attribute defaults
-				BOOLATTR_DEFAULT_FALSE, BOOLATTR_DEFAULT_FALSE | BOOLATTR_INVERSE_SEMANTICS, BOOLATTR_DEFAULT_FALSE, BOOLATTR_DEFAULT_TRUE, BOOLATTR_DEFAULT_FALSE, BOOLATTR_DEFAULT_FALSE, BOOLATTR_DEFAULT_VOID
+				BOOLATTR_DEFAULT_FALSE, BOOLATTR_DEFAULT_FALSE | BOOLATTR_INVERSE_SEMANTICS, BOOLATTR_DEFAULT_FALSE, BOOLATTR_DEFAULT_TRUE, BOOLATTR_DEFAULT_FALSE, BOOLATTR_DEFAULT_FALSE, BOOLATTR_DEFAULT_VOID, BOOLATTR_DEFAULT_FALSE
 			};
 		#if OSL_DEBUG_LEVEL > 0
 			sal_Int32 nIdCount = sizeof(nBooleanPropertyAttributeIds) / sizeof(nBooleanPropertyAttributeIds[0]);
Index: xmloff/source/forms/strings.hxx
===================================================================
--- xmloff/source/forms/strings.hxx	(revision 271402)
+++ xmloff/source/forms/strings.hxx	(working copy)
@@ -114,6 +114,7 @@
 	XMLFORM_CONSTASCII_STRING( PROPERTY_TABSTOP,			"Tabstop" );
 	XMLFORM_CONSTASCII_STRING( PROPERTY_STATE,				"State" );
 	XMLFORM_CONSTASCII_STRING( PROPERTY_ENABLED,			"Enabled" );
+	XMLFORM_CONSTASCII_STRING( PROPERTY_ENABLEVISIBLE,		"EnableVisible" );
 	XMLFORM_CONSTASCII_STRING( PROPERTY_MAXTEXTLENGTH,		"MaxTextLen" );
 	XMLFORM_CONSTASCII_STRING( PROPERTY_LINECOUNT,			"LineCount" );
 	XMLFORM_CONSTASCII_STRING( PROPERTY_TABINDEX,			"TabIndex" );
Index: xmloff/source/forms/formattributes.cxx
===================================================================
--- xmloff/source/forms/formattributes.cxx	(revision 271402)
+++ xmloff/source/forms/formattributes.cxx	(working copy)
@@ -60,6 +60,7 @@
 			case CCA_CURRENT_SELECTED: 	return "current-selected";
 			case CCA_CURRENT_VALUE: 	return "current-value";
 			case CCA_DISABLED: 			return "disabled";
+			case CCA_ENABLEVISIBLE: 	return "enablevisible";
 			case CCA_DROPDOWN: 			return "dropdown";
 			case CCA_FOR: 				return "for";
 			case CCA_IMAGE_DATA: 		return "image-data";
Index: toolkit/source/helper/property.cxx
===================================================================
--- toolkit/source/helper/property.cxx	(revision 271402)
+++ toolkit/source/helper/property.cxx	(working copy)
@@ -272,7 +272,8 @@
             DECL_PROP_2     ( "DialogSourceURL",        DIALOGSOURCEURL,        ::rtl::OUString,    BOUND, MAYBEDEFAULT ),
             DECL_PROP_2     ( "URL",                    URL,                    ::rtl::OUString,    BOUND, MAYBEDEFAULT ),
             DECL_PROP_2     ( "WritingMode",            WRITING_MODE,           sal_Int16,          BOUND, MAYBEDEFAULT ),
-            DECL_PROP_3     ( "ContextWritingMode",     CONTEXT_WRITING_MODE,   sal_Int16,          BOUND, MAYBEDEFAULT, TRANSIENT )
+            DECL_PROP_3     ( "ContextWritingMode",     CONTEXT_WRITING_MODE,   sal_Int16,          BOUND, MAYBEDEFAULT, TRANSIENT ),
+            DECL_PROP_2     ( "EnableVisible",          ENABLEVISIBLE,          sal_Bool,           BOUND, MAYBEDEFAULT )
             };
 			pPropertyInfos = aImplPropertyInfos;
 			nElements = sizeof( aImplPropertyInfos ) / sizeof( ImplPropertyInfo );
Index: toolkit/source/controls/unocontrolmodel.cxx
===================================================================
--- toolkit/source/controls/unocontrolmodel.cxx	(revision 271402)
+++ toolkit/source/controls/unocontrolmodel.cxx	(working copy)
@@ -345,6 +345,7 @@
             case BASEPROPERTY_SCALEIMAGE:
             case BASEPROPERTY_ENABLED:
             case BASEPROPERTY_PRINTABLE:
+            case BASEPROPERTY_ENABLEVISIBLE:
             case BASEPROPERTY_DECORATION:           aDefault <<= (sal_Bool) sal_True; break;
 
             case BASEPROPERTY_HELPTEXT:
Index: toolkit/source/controls/unocontrols.cxx
===================================================================
--- toolkit/source/controls/unocontrols.cxx	(revision 271402)
+++ toolkit/source/controls/unocontrols.cxx	(working copy)
@@ -491,6 +491,7 @@
 	ImplRegisterProperty( BASEPROPERTY_BORDERCOLOR );
 	ImplRegisterProperty( BASEPROPERTY_DEFAULTCONTROL );
 	ImplRegisterProperty( BASEPROPERTY_ENABLED );
+	ImplRegisterProperty( BASEPROPERTY_ENABLEVISIBLE );
 	ImplRegisterProperty( BASEPROPERTY_FONTDESCRIPTOR );
 	ImplRegisterProperty( BASEPROPERTY_HELPTEXT );
 	ImplRegisterProperty( BASEPROPERTY_HELPURL );
@@ -1788,6 +1789,7 @@
 {
 	ImplRegisterProperty( BASEPROPERTY_DEFAULTCONTROL );
 	ImplRegisterProperty( BASEPROPERTY_ENABLED );
+	ImplRegisterProperty( BASEPROPERTY_ENABLEVISIBLE );
 	ImplRegisterProperty( BASEPROPERTY_FONTDESCRIPTOR );
 	ImplRegisterProperty( BASEPROPERTY_HELPTEXT );
 	ImplRegisterProperty( BASEPROPERTY_HELPURL );
@@ -3613,6 +3615,7 @@
 	ImplRegisterProperty( BASEPROPERTY_BORDERCOLOR );
     ImplRegisterProperty( BASEPROPERTY_DEFAULTCONTROL );
 	ImplRegisterProperty( BASEPROPERTY_ENABLED );
+	ImplRegisterProperty( BASEPROPERTY_ENABLEVISIBLE );
 	ImplRegisterProperty( BASEPROPERTY_FILLCOLOR );
     ImplRegisterProperty( BASEPROPERTY_HELPTEXT );
 	ImplRegisterProperty( BASEPROPERTY_HELPURL );
@@ -3742,6 +3745,7 @@
 	ImplRegisterProperty( BASEPROPERTY_BACKGROUNDCOLOR );
 	ImplRegisterProperty( BASEPROPERTY_DEFAULTCONTROL );
 	ImplRegisterProperty( BASEPROPERTY_ENABLED );
+	ImplRegisterProperty( BASEPROPERTY_ENABLEVISIBLE );
 	ImplRegisterProperty( BASEPROPERTY_FONTDESCRIPTOR );
 	ImplRegisterProperty( BASEPROPERTY_HELPTEXT );
 	ImplRegisterProperty( BASEPROPERTY_HELPURL );
Index: toolkit/source/controls/formattedcontrol.cxx
===================================================================
--- toolkit/source/controls/formattedcontrol.cxx	(revision 271402)
+++ toolkit/source/controls/formattedcontrol.cxx	(working copy)
@@ -142,6 +142,7 @@
 		ImplRegisterProperty( BASEPROPERTY_EFFECTIVE_MAX );
 		ImplRegisterProperty( BASEPROPERTY_EFFECTIVE_MIN );
 		ImplRegisterProperty( BASEPROPERTY_ENABLED );
+		ImplRegisterProperty( BASEPROPERTY_ENABLEVISIBLE );
 		ImplRegisterProperty( BASEPROPERTY_FONTDESCRIPTOR );
 		ImplRegisterProperty( BASEPROPERTY_FORMATKEY );
 		ImplRegisterProperty( BASEPROPERTY_FORMATSSUPPLIER );
Index: toolkit/source/controls/tree/treecontrol.cxx
===================================================================
--- toolkit/source/controls/tree/treecontrol.cxx	(revision 271402)
+++ toolkit/source/controls/tree/treecontrol.cxx	(working copy)
@@ -65,6 +65,7 @@
 	ImplRegisterProperty( BASEPROPERTY_BORDERCOLOR );
     ImplRegisterProperty( BASEPROPERTY_DEFAULTCONTROL );
 	ImplRegisterProperty( BASEPROPERTY_ENABLED );
+	ImplRegisterProperty( BASEPROPERTY_ENABLEVISIBLE );
 	ImplRegisterProperty( BASEPROPERTY_FILLCOLOR );
     ImplRegisterProperty( BASEPROPERTY_HELPTEXT );
 	ImplRegisterProperty( BASEPROPERTY_HELPURL );
Index: toolkit/source/controls/unocontrol.cxx
===================================================================
--- toolkit/source/controls/unocontrol.cxx	(revision 271402)
+++ toolkit/source/controls/unocontrol.cxx	(working copy)
@@ -1292,6 +1292,16 @@
 		}
 		//issue79712 ends
 		
+		// Visible
+		aPropName = GetPropertyName( BASEPROPERTY_ENABLEVISIBLE );
+		if ( xInfo->hasPropertyByName( aPropName ) )
+		{
+			aVal = xPSet->getPropertyValue( aPropName );
+			sal_Bool b = sal_Bool();
+			if ( ( aVal >>=b ) )
+				maComponentInfos.bVisible = b;
+		}
+
 		// Align
 		aPropName = GetPropertyName( BASEPROPERTY_ALIGN );
 		if ( xInfo->hasPropertyByName( aPropName ) )
@@ -1413,7 +1423,6 @@
 		// remember this
 		mbDesignMode = bOn;
 		xWindow = xWindow.query( getPeer() );
-
 		// dispose our current AccessibleContext, if we have one
 		// (changing the design mode implies having a new implementation for this context,
 		// so the old one must be declared DEFUNC)
Index: toolkit/source/controls/tkspinbutton.cxx
===================================================================
--- toolkit/source/controls/tkspinbutton.cxx	(revision 271402)
+++ toolkit/source/controls/tkspinbutton.cxx	(working copy)
@@ -60,6 +60,7 @@
 		ImplRegisterProperty( BASEPROPERTY_BORDERCOLOR );
         ImplRegisterProperty( BASEPROPERTY_DEFAULTCONTROL );
 	    ImplRegisterProperty( BASEPROPERTY_ENABLED );
+	    ImplRegisterProperty( BASEPROPERTY_ENABLEVISIBLE );
         ImplRegisterProperty( BASEPROPERTY_HELPTEXT );
 	    ImplRegisterProperty( BASEPROPERTY_HELPURL );
         ImplRegisterProperty( BASEPROPERTY_ORIENTATION );
Index: toolkit/source/awt/vclxwindow.cxx
===================================================================
--- toolkit/source/awt/vclxwindow.cxx	(revision 271402)
+++ toolkit/source/awt/vclxwindow.cxx	(working copy)
@@ -226,6 +226,8 @@
     ::toolkit::AccessibilityClient      maAccFactory;
     bool                                mbDisposed;
     bool                                mbDrawingOntoParent;    // no bit mask, is passed around  by reference
+    sal_Bool                            mbEnableVisible;
+    sal_Bool                            mbDirectVisible;
 
     ::osl::Mutex                        maListenerContainerMutex;
     ::cppu::OInterfaceContainerHelper   maWindow2Listeners;
@@ -273,6 +275,15 @@
     */
     VCLXWindowImpl( VCLXWindow& _rAntiImpl, ::vos::IMutex& _rMutex, bool _bWithDefaultProps );
 
+    /** synchronously mbEnableVisible
+    */
+    void    setEnableVisible( sal_Bool bEnableVisible ) { mbEnableVisible = bEnableVisible; }
+    sal_Bool    isEnableVisible() { return mbEnableVisible; }
+    /** synchronously mbDirectVisible;
+    */
+    void    setDirectVisible( sal_Bool bDirectVisible ) { mbDirectVisible = bDirectVisible; }
+    sal_Bool    isDirectVisible() { return mbDirectVisible; }
+
     /** asynchronously notifies a mouse event to the VCLXWindow's XMouseListeners
     */
     void    notifyMouseEvent( const awt::MouseEvent& _rMouseEvent, MouseEventType _nType );
@@ -347,6 +358,8 @@
     ,mrMutex( _rMutex )
     ,mbDisposed( false )
     ,mbDrawingOntoParent( false )
+    ,mbEnableVisible(sal_True)
+    ,mbDirectVisible(sal_True)
     ,maListenerContainerMutex( )
     ,maWindow2Listeners( maListenerContainerMutex )
     ,maDockableWindowListeners( maListenerContainerMutex )
@@ -623,7 +636,12 @@
     SetOutputDevice( pWindow );
 
     if ( GetWindow() )
+    {
         GetWindow()->AddEventListener( LINK( this, VCLXWindow, WindowEventListener ) );
+        sal_Bool bDirectVisible = pWindow ? pWindow->IsVisible() : false;
+        mpImpl->setDirectVisible( bDirectVisible );
+    }
+    
 }
 
 void VCLXWindow::suspendVclEventListening( )
@@ -1224,7 +1242,8 @@
 			}
 		}
 */
-		pWindow->Show( bVisible );
+		mpImpl->setDirectVisible( bVisible );
+		pWindow->Show( bVisible &&  mpImpl->isEnableVisible() );
 	}
 }
 
@@ -1527,6 +1546,7 @@
                          BASEPROPERTY_HELPURL,
                          BASEPROPERTY_TEXT,
                          BASEPROPERTY_PRINTABLE,
+                         BASEPROPERTY_ENABLEVISIBLE, // for visibility
                          BASEPROPERTY_TABSTOP,
                          0);
 
@@ -1670,6 +1690,21 @@
 				setEnable( b );
 		}
 		break;
+        case BASEPROPERTY_ENABLEVISIBLE:
+        {
+            sal_Bool b = sal_False;
+            if ( Value >>= b )
+            {
+                if( b != mpImpl->isEnableVisible() )
+                {
+                    mpImpl->setEnableVisible( b );
+                    Window* pWindow = GetWindow();
+                    if ( pWindow )
+                        pWindow->Show( b && mpImpl->isDirectVisible() );
+                }
+            }
+        }
+        break;
 		case BASEPROPERTY_TEXT:
 		case BASEPROPERTY_LABEL:
 		case BASEPROPERTY_TITLE:
@@ -2135,6 +2170,10 @@
 				aProp <<= (sal_Bool) GetWindow()->IsEnabled();
 			    break;
 
+			case BASEPROPERTY_ENABLEVISIBLE:
+				aProp <<= (sal_Bool) GetWindow()->IsVisible();
+			    break;
+
 			case BASEPROPERTY_TEXT:
 			case BASEPROPERTY_LABEL:
 			case BASEPROPERTY_TITLE:
@@ -2408,8 +2447,8 @@
 	Window* pWindow = GetWindow();
     if ( !pWindow )
         return;
-
-	if ( pWindow )
+    
+	if ( mpImpl->isEnableVisible() )
 	{
 		TabPage* pTabPage = dynamic_cast< TabPage* >( pWindow );
         if ( pTabPage )
Index: toolkit/source/awt/vclxwindows.cxx
===================================================================
--- toolkit/source/awt/vclxwindows.cxx	(revision 271402)
+++ toolkit/source/awt/vclxwindows.cxx	(working copy)
@@ -386,6 +386,7 @@
                      BASEPROPERTY_DEFAULTBUTTON,
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_FONTDESCRIPTOR,
                      BASEPROPERTY_GRAPHIC,
                      BASEPROPERTY_HELPTEXT,
@@ -661,6 +662,7 @@
                      BASEPROPERTY_BORDERCOLOR,
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_GRAPHIC,
                      BASEPROPERTY_HELPTEXT,
                      BASEPROPERTY_HELPURL,
@@ -789,6 +791,7 @@
     PushPropertyIds( rIds,
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_FONTDESCRIPTOR,
                      BASEPROPERTY_GRAPHIC,
                      BASEPROPERTY_HELPTEXT,
@@ -1088,6 +1091,7 @@
     PushPropertyIds( rIds,
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_FONTDESCRIPTOR,
                      BASEPROPERTY_GRAPHIC,
                      BASEPROPERTY_HELPTEXT,
@@ -1505,6 +1509,7 @@
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_DROPDOWN,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_FONTDESCRIPTOR,
                      BASEPROPERTY_HELPTEXT,
                      BASEPROPERTY_HELPURL,
@@ -2692,6 +2697,7 @@
                      BASEPROPERTY_BORDERCOLOR,
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_FONTDESCRIPTOR,
                      BASEPROPERTY_HELPTEXT,
                      BASEPROPERTY_HELPURL,
@@ -2720,6 +2726,7 @@
                      BASEPROPERTY_BORDERCOLOR,
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_FONTDESCRIPTOR,
                      BASEPROPERTY_HELPTEXT,
                      BASEPROPERTY_HELPURL,
@@ -2862,6 +2869,7 @@
                      BASEPROPERTY_BORDERCOLOR,
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_HELPTEXT,
                      BASEPROPERTY_HELPURL,
                      BASEPROPERTY_LINEINCREMENT,
@@ -3341,6 +3349,7 @@
                      BASEPROPERTY_DEFAULTCONTROL, 
                      BASEPROPERTY_ECHOCHAR, 
                      BASEPROPERTY_ENABLED, 
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_FONTDESCRIPTOR, 
                      BASEPROPERTY_HARDLINEBREAKS, 
                      BASEPROPERTY_HELPTEXT, 
@@ -3717,6 +3726,7 @@
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_DROPDOWN,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_FONTDESCRIPTOR,
                      BASEPROPERTY_HELPTEXT,
                      BASEPROPERTY_HELPURL,
@@ -4226,6 +4236,7 @@
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_DROPDOWN,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_EXTDATEFORMAT,
                      BASEPROPERTY_FONTDESCRIPTOR,
                      BASEPROPERTY_HELPTEXT,
@@ -4562,6 +4573,7 @@
                      BASEPROPERTY_BORDERCOLOR,
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_EXTTIMEFORMAT,
                      BASEPROPERTY_FONTDESCRIPTOR,
                      BASEPROPERTY_HELPTEXT,
@@ -4863,6 +4875,7 @@
                      BASEPROPERTY_DECIMALACCURACY,
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_FONTDESCRIPTOR,
                      BASEPROPERTY_HELPTEXT,
                      BASEPROPERTY_HELPURL,
@@ -5203,6 +5216,7 @@
                      BASEPROPERTY_DECIMALACCURACY,
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_FONTDESCRIPTOR,
                      BASEPROPERTY_HELPTEXT,
                      BASEPROPERTY_HELPURL,
@@ -5453,6 +5467,7 @@
                      BASEPROPERTY_DECIMALACCURACY,
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_FONTDESCRIPTOR,
                      BASEPROPERTY_HELPTEXT,
                      BASEPROPERTY_HELPURL,
@@ -5804,6 +5819,7 @@
                      BASEPROPERTY_DEFAULTCONTROL,
                      BASEPROPERTY_EDITMASK,
                      BASEPROPERTY_ENABLED,
+                     BASEPROPERTY_ENABLEVISIBLE,
                      BASEPROPERTY_FONTDESCRIPTOR,
                      BASEPROPERTY_HELPTEXT,
                      BASEPROPERTY_HELPURL,
Index: toolkit/inc/toolkit/helper/property.hxx
===================================================================
--- toolkit/inc/toolkit/helper/property.hxx	(revision 271402)
+++ toolkit/inc/toolkit/helper/property.hxx	(working copy)
@@ -191,6 +191,7 @@
 #define BASEPROPERTY_IMAGE_SCALE_MODE               137
 #define BASEPROPERTY_WRITING_MODE                   138
 #define BASEPROPERTY_CONTEXT_WRITING_MODE           139
+#define BASEPROPERTY_ENABLEVISIBLE                  140  // sal_Bool
 
 // Keine gebundenen Properties, werden immer aus der Property BASEPROPERTY_FONTDESCRIPTOR entnommen.
 #define BASEPROPERTY_FONTDESCRIPTORPART_START			1000
Index: forms/source/component/navigationbar.hxx
===================================================================
--- forms/source/component/navigationbar.hxx	(revision 271402)
+++ forms/source/component/navigationbar.hxx	(working copy)
@@ -70,6 +70,7 @@
         sal_Int16                           m_nBorder;
         sal_Int32                           m_nDelay;
         sal_Bool                            m_bEnabled;
+        sal_Bool                            m_bEnableVisible;
         sal_Bool                            m_bShowPosition;
         sal_Bool                            m_bShowNavigation;
         sal_Bool                            m_bShowActions;
Index: forms/source/component/Grid.hxx
===================================================================
--- forms/source/component/Grid.hxx	(revision 271402)
+++ forms/source/component/Grid.hxx	(working copy)
@@ -94,6 +94,7 @@
 	sal_Int16					m_nBorder;
     sal_Int16                   m_nWritingMode;
     sal_Int16                   m_nContextWritingMode;
+	sal_Bool					m_bEnableVisible;
 	sal_Bool					m_bEnable			: 1;
 	sal_Bool					m_bNavigation		: 1;
 	sal_Bool					m_bRecordMarker 	: 1;
Index: forms/source/component/navigationbar.cxx
===================================================================
--- forms/source/component/navigationbar.cxx	(revision 271402)
+++ forms/source/component/navigationbar.cxx	(working copy)
@@ -84,6 +84,7 @@
         getPropertyDefaultByHandle( PROPERTY_ID_BORDER                  ) >>= m_nBorder;
         getPropertyDefaultByHandle( PROPERTY_ID_DELAY                   ) >>= m_nDelay;
         getPropertyDefaultByHandle( PROPERTY_ID_ENABLED                 ) >>= m_bEnabled;
+        getPropertyDefaultByHandle( PROPERTY_ID_ENABLEVISIBLE           ) >>= m_bEnableVisible;
         getPropertyDefaultByHandle( PROPERTY_ID_SHOW_POSITION           ) >>= m_bShowPosition;
         getPropertyDefaultByHandle( PROPERTY_ID_SHOW_NAVIGATION         ) >>= m_bShowNavigation;
         getPropertyDefaultByHandle( PROPERTY_ID_SHOW_RECORDACTIONS      ) >>= m_bShowActions;
@@ -125,6 +126,7 @@
         REGISTER_PROP_2( HELPTEXT,            m_sHelpText,              BOUND, MAYBEDEFAULT );
         REGISTER_PROP_2( HELPURL,             m_sHelpURL,               BOUND, MAYBEDEFAULT );
         REGISTER_PROP_2( ENABLED,             m_bEnabled,               BOUND, MAYBEDEFAULT );
+        REGISTER_PROP_2( ENABLEVISIBLE,       m_bEnableVisible,         BOUND, MAYBEDEFAULT );
         REGISTER_PROP_2( ICONSIZE,            m_nIconSize,              BOUND, MAYBEDEFAULT );
         REGISTER_PROP_2( BORDER,              m_nBorder,                BOUND, MAYBEDEFAULT );
         REGISTER_PROP_2( DELAY,               m_nDelay,                 BOUND, MAYBEDEFAULT );
@@ -444,6 +446,7 @@
             break;
 
         case PROPERTY_ID_ENABLED:
+        case PROPERTY_ID_ENABLEVISIBLE:
         case PROPERTY_ID_SHOW_POSITION:
         case PROPERTY_ID_SHOW_NAVIGATION:
         case PROPERTY_ID_SHOW_RECORDACTIONS:
Index: forms/source/component/Grid.cxx
===================================================================
--- forms/source/component/Grid.cxx	(revision 271402)
+++ forms/source/component/Grid.cxx	(working copy)
@@ -415,7 +415,7 @@
 //------------------------------------------------------------------------------
 void OGridControlModel::describeFixedProperties( Sequence< Property >& _rProps ) const
 {
-	BEGIN_DESCRIBE_BASE_PROPERTIES( 36 )
+	BEGIN_DESCRIBE_BASE_PROPERTIES( 37 )
 		DECL_PROP1(NAME,				::rtl::OUString,	BOUND);
 		DECL_PROP2(CLASSID, 			sal_Int16,			READONLY, TRANSIENT);
 		DECL_PROP1(TAG, 				::rtl::OUString,	BOUND);
@@ -423,6 +423,7 @@
 		DECL_PROP3(TABSTOP, 			sal_Bool,			BOUND, MAYBEDEFAULT, MAYBEVOID);
 		DECL_PROP2(HASNAVIGATION,		sal_Bool,			BOUND, MAYBEDEFAULT);
 		DECL_PROP1(ENABLED, 			sal_Bool,			BOUND);
+		DECL_PROP2(ENABLEVISIBLE,		sal_Bool,			BOUND, MAYBEDEFAULT);
 		DECL_PROP1(BORDER,				sal_Int16,			BOUND);
 		DECL_PROP2(BORDERCOLOR,	        sal_Int16,			BOUND, MAYBEVOID);
 		DECL_PROP1(DEFAULTCONTROL,		::rtl::OUString,	BOUND);
@@ -496,6 +497,9 @@
 		case PROPERTY_ID_ENABLED:
 			setBOOL(rValue, m_bEnable);
 			break;
+		case PROPERTY_ID_ENABLEVISIBLE:
+			setBOOL(rValue, m_bEnableVisible);
+			break;
 		case PROPERTY_ID_BORDER:
 			rValue <<= (sal_Int16)m_nBorder;
 			break;
@@ -574,6 +578,9 @@
 		case PROPERTY_ID_ENABLED:
 			bModified = tryPropertyValue(rConvertedValue, rOldValue, rValue, m_bEnable);
 			break;
+		case PROPERTY_ID_ENABLEVISIBLE:
+			bModified = tryPropertyValue(rConvertedValue, rOldValue, rValue, m_bEnableVisible);
+			break;
 		case PROPERTY_ID_BORDER:
 			bModified = tryPropertyValue(rConvertedValue, rOldValue, rValue, m_nBorder);
 			break;
@@ -645,6 +652,9 @@
 		case PROPERTY_ID_ENABLED:
 			m_bEnable = getBOOL(rValue);
 			break;
+		case PROPERTY_ID_ENABLEVISIBLE:
+			m_bEnableVisible = getBOOL(rValue);
+			break;
 		case PROPERTY_ID_RECORDMARKER:
 			m_bRecordMarker = getBOOL(rValue);
 			break;
@@ -702,6 +712,7 @@
 		case PROPERTY_ID_RECORDMARKER:
 		case PROPERTY_ID_DISPLAYSYNCHRON:
 		case PROPERTY_ID_ENABLED:
+		case PROPERTY_ID_ENABLEVISIBLE:
 			aReturn = makeBoolAny(sal_True);
 			break;
 
Index: forms/source/inc/property.hrc
===================================================================
--- forms/source/inc/property.hrc	(revision 271402)
+++ forms/source/inc/property.hrc	(working copy)
@@ -206,11 +206,11 @@
 #define PROPERTY_ID_FILTERPROPOSAL      (PROPERTY_ID_START +162)    // BOOL
 #define PROPERTY_ID_FIELDSOURCE         (PROPERTY_ID_START +163)    // String
 #define PROPERTY_ID_TABLENAME           (PROPERTY_ID_START +164)    // String
+#define PROPERTY_ID_ENABLEVISIBLE       (PROPERTY_ID_START +165)    // BOOL
     // FREE
     // FREE
     // FREE
     // FREE
-    // FREE
 #define PROPERTY_ID_CONTROLLABEL        (PROPERTY_ID_START +171)    // XPropertySet
 #define PROPERTY_ID_CURRSYM_POSITION    (PROPERTY_ID_START +172)    // String
     // FREE
Index: forms/source/inc/frm_strings.hxx
===================================================================
--- forms/source/inc/frm_strings.hxx	(revision 271402)
+++ forms/source/inc/frm_strings.hxx	(working copy)
@@ -113,6 +113,7 @@
     FORMS_CONSTASCII_STRING( PROPERTY_CYCLE,                    "Cycle" );
     FORMS_CONSTASCII_STRING( PROPERTY_CONTROLSOURCE,            "DataField" );
     FORMS_CONSTASCII_STRING( PROPERTY_ENABLED,                  "Enabled" );
+    FORMS_CONSTASCII_STRING( PROPERTY_ENABLEVISIBLE,                  "EnableVisible" );
     FORMS_CONSTASCII_STRING( PROPERTY_READONLY,                 "ReadOnly" );
     FORMS_CONSTASCII_STRING( PROPERTY_RELEVANT,                 "Relevant" );
     FORMS_CONSTASCII_STRING( PROPERTY_ISREADONLY,               "IsReadOnly" );
Index: forms/source/richtext/richtextmodel.hxx
===================================================================
--- forms/source/richtext/richtextmodel.hxx	(revision 271402)
+++ forms/source/richtext/richtextmodel.hxx	(working copy)
@@ -83,6 +83,7 @@
         sal_Int16                   m_nContextWritingMode;
         sal_Int16                   m_nBorder;
         sal_Bool                    m_bEnabled;
+        sal_Bool                    m_bEnableVisible;
         sal_Bool                    m_bHardLineBreaks;
         sal_Bool                    m_bHScroll;
         sal_Bool                    m_bVScroll;
Index: forms/source/richtext/richtextmodel.cxx
===================================================================
--- forms/source/richtext/richtextmodel.cxx	(revision 271402)
+++ forms/source/richtext/richtextmodel.cxx	(working copy)
@@ -88,6 +88,7 @@
         getPropertyDefaultByHandle( PROPERTY_ID_DEFAULTCONTROL          ) >>= m_sDefaultControl;
         getPropertyDefaultByHandle( PROPERTY_ID_BORDER                  ) >>= m_nBorder;
         getPropertyDefaultByHandle( PROPERTY_ID_ENABLED                 ) >>= m_bEnabled;
+        getPropertyDefaultByHandle( PROPERTY_ID_ENABLEVISIBLE           ) >>= m_bEnableVisible;
         getPropertyDefaultByHandle( PROPERTY_ID_HARDLINEBREAKS          ) >>= m_bHardLineBreaks;
         getPropertyDefaultByHandle( PROPERTY_ID_HSCROLL                 ) >>= m_bHScroll;
         getPropertyDefaultByHandle( PROPERTY_ID_VSCROLL                 ) >>= m_bVScroll;
@@ -124,6 +125,7 @@
         m_sHelpURL               = _pOriginal->m_sHelpURL;
         m_nBorder                = _pOriginal->m_nBorder;
         m_bEnabled               = _pOriginal->m_bEnabled;
+        m_bEnableVisible         = _pOriginal->m_bEnableVisible;
         m_bHardLineBreaks        = _pOriginal->m_bHardLineBreaks;
         m_bHScroll               = _pOriginal->m_bHScroll;
         m_bVScroll               = _pOriginal->m_bVScroll;
@@ -188,6 +190,7 @@
         REGISTER_PROP_2( HELPTEXT,              m_sHelpText,                BOUND, MAYBEDEFAULT );
         REGISTER_PROP_2( HELPURL,               m_sHelpURL,                 BOUND, MAYBEDEFAULT );
         REGISTER_PROP_2( ENABLED,               m_bEnabled,                 BOUND, MAYBEDEFAULT );
+        REGISTER_PROP_2( ENABLEVISIBLE,               m_bEnableVisible,                 BOUND, MAYBEDEFAULT );
         REGISTER_PROP_2( BORDER,                m_nBorder,                  BOUND, MAYBEDEFAULT );
         REGISTER_PROP_2( HARDLINEBREAKS,        m_bHardLineBreaks,          BOUND, MAYBEDEFAULT );
         REGISTER_PROP_2( HSCROLL,               m_bHScroll,                 BOUND, MAYBEDEFAULT );
@@ -456,6 +459,7 @@
             break;
 
         case PROPERTY_ID_ENABLED:
+        case PROPERTY_ID_ENABLEVISIBLE:
         case PROPERTY_ID_PRINTABLE:
         case PROPERTY_ID_HIDEINACTIVESELECTION:
             aDefault <<= (sal_Bool)sal_True;
Index: forms/source/misc/property.cxx
===================================================================
--- forms/source/misc/property.cxx	(revision 271402)
+++ forms/source/misc/property.cxx	(working copy)
@@ -106,6 +106,7 @@
 	ADD_PROP_ASSIGNMENT(CYCLE);
 	ADD_PROP_ASSIGNMENT(CONTROLSOURCE);
 	ADD_PROP_ASSIGNMENT(ENABLED);
+	ADD_PROP_ASSIGNMENT(ENABLEVISIBLE);
 	ADD_PROP_ASSIGNMENT(SPIN);
 	ADD_PROP_ASSIGNMENT(READONLY);
 	ADD_PROP_ASSIGNMENT(FILTER);
