diff -rup ../ooo330-m2-orig/oox/source/drawingml/shapecontext.cxx oox/source/drawingml/shapecontext.cxx
--- ../ooo330-m2-orig/oox/source/drawingml/shapecontext.cxx	2010-07-22 13:12:44.000000000 +0200
+++ oox/source/drawingml/shapecontext.cxx	2010-09-02 17:18:22.000000000 +0200
@@ -95,7 +95,8 @@ Reference< XFastContextHandler > ShapeCo
     }
     case XML_ph:
         mpShapePtr->setSubType( xAttribs->getOptionalValueToken( XML_type, XML_obj ) );
-        mpShapePtr->setSubTypeIndex( xAttribs->getOptionalValue( XML_idx ).toInt32() );
+        if( xAttribs->hasAttribute( XML_idx ) )
+            mpShapePtr->setSubTypeIndex( xAttribs->getOptionalValue( XML_idx ).toInt32() );
         break;
     // nvSpPr CT_ShapeNonVisual end
 
diff -rup ../ooo330-m2-orig/oox/source/drawingml/shapegroupcontext.cxx oox/source/drawingml/shapegroupcontext.cxx
--- ../ooo330-m2-orig/oox/source/drawingml/shapegroupcontext.cxx	2010-07-22 13:12:44.000000000 +0200
+++ oox/source/drawingml/shapegroupcontext.cxx	2010-09-02 17:18:28.000000000 +0200
@@ -80,7 +80,8 @@ Reference< XFastContextHandler > ShapeGr
     }
     case XML_ph:
         mpGroupShapePtr->setSubType( xAttribs->getOptionalValueToken( XML_type, FastToken::DONTKNOW ) );
-        mpGroupShapePtr->setSubTypeIndex( xAttribs->getOptionalValue( XML_idx ).toInt32() );
+        if( xAttribs->hasAttribute( XML_idx ) )
+            mpGroupShapePtr->setSubTypeIndex( xAttribs->getOptionalValue( XML_idx ).toInt32() );
         break;
     // nvSpPr CT_ShapeNonVisual end
 
diff -rup ../ooo330-m2-orig/oox/source/drawingml/textbodypropertiescontext.cxx oox/source/drawingml/textbodypropertiescontext.cxx
--- ../ooo330-m2-orig/oox/source/drawingml/textbodypropertiescontext.cxx	2010-07-22 13:12:44.000000000 +0200
+++ oox/source/drawingml/textbodypropertiescontext.cxx	2010-09-02 12:16:09.000000000 +0200
@@ -88,23 +88,26 @@ TextBodyPropertiesContext::TextBodyPrope
     }
 
     // ST_TextAnchoringType
-    drawing::TextVerticalAdjust	eVA( drawing::TextVerticalAdjust_TOP );
-    switch( xAttributes->getOptionalValueToken( XML_anchor, XML_t ) )
-    {
-        case XML_b :	eVA = drawing::TextVerticalAdjust_BOTTOM; break;
-        case XML_dist :
-        case XML_just :
-        case XML_ctr :	eVA = drawing::TextVerticalAdjust_CENTER; break;
-        default:
-        case XML_t :	eVA = drawing::TextVerticalAdjust_TOP; break;
+    if( xAttributes->hasAttribute( XML_anchor ) ) {
+        drawing::TextVerticalAdjust	eVA( drawing::TextVerticalAdjust_TOP );
+        switch( xAttributes->getOptionalValueToken( XML_anchor, XML_t ) )
+        {
+            case XML_b :	eVA = drawing::TextVerticalAdjust_BOTTOM; break;
+            case XML_dist :
+            case XML_just :
+            case XML_ctr :	eVA = drawing::TextVerticalAdjust_CENTER; break;
+            default:
+            case XML_t :	eVA = drawing::TextVerticalAdjust_TOP; break;
+        }
+        mrTextBodyProp.maPropertyMap[ PROP_TextVerticalAdjust ] <<= eVA;
     }
-    mrTextBodyProp.maPropertyMap[ PROP_TextVerticalAdjust ] <<= eVA;
 
     bool bAnchorCenter = aAttribs.getBool( XML_anchorCtr, false );
-    if( bAnchorCenter )
-    mrTextBodyProp.maPropertyMap[ PROP_TextHorizontalAdjust ] <<= 
-        TextHorizontalAdjust_CENTER;
-
+    if( xAttributes->hasAttribute( XML_anchorCtr ) ) {
+        if( bAnchorCenter )
+            mrTextBodyProp.maPropertyMap[ PROP_TextHorizontalAdjust ] <<= 
+                TextHorizontalAdjust_CENTER;
+    }
 //   bool bCompatLineSpacing = aAttribs.getBool( XML_compatLnSpc, false );
 //   bool bForceAA = aAttribs.getBool( XML_forceAA, false );
 //   bool bFromWordArt = aAttribs.getBool( XML_fromWordArt, false );
@@ -127,19 +130,21 @@ TextBodyPropertiesContext::TextBodyPrope
 //   bool bUpRight = aAttribs.getBool( XML_upright, 0 );
 
     // ST_TextVerticalType
-    mrTextBodyProp.moVert = aAttribs.getToken( XML_vert );
-    bool bRtl = aAttribs.getBool( XML_rtl, false );
-    sal_Int32 tVert = mrTextBodyProp.moVert.get( XML_horz );
-    if( tVert == XML_vert || tVert == XML_eaVert || tVert == XML_vert270 || tVert == XML_mongolianVert ) {
-      mrTextBodyProp.maPropertyMap[ PROP_TextWritingMode ]
-    <<= WritingMode_TB_RL;
-      // workaround for TB_LR as using WritingMode2 doesn't work
-        if( !bAnchorCenter )
-            mrTextBodyProp.maPropertyMap[ PROP_TextHorizontalAdjust ] <<= 
-            TextHorizontalAdjust_LEFT;
-    } else
-      mrTextBodyProp.maPropertyMap[ PROP_TextWritingMode ]
-    <<= ( bRtl ? WritingMode_RL_TB : WritingMode_LR_TB );
+    if( xAttributes->hasAttribute( XML_vert ) ) {
+        mrTextBodyProp.moVert = aAttribs.getToken( XML_vert );
+        bool bRtl = aAttribs.getBool( XML_rtl, false );
+        sal_Int32 tVert = mrTextBodyProp.moVert.get( XML_horz );
+        if( tVert == XML_vert || tVert == XML_eaVert || tVert == XML_vert270 || tVert == XML_mongolianVert ) {
+            mrTextBodyProp.maPropertyMap[ PROP_TextWritingMode ]
+                <<= WritingMode_TB_RL;
+            // workaround for TB_LR as using WritingMode2 doesn't work
+            if( !bAnchorCenter )
+                mrTextBodyProp.maPropertyMap[ PROP_TextHorizontalAdjust ] <<= 
+                    TextHorizontalAdjust_LEFT;
+        } else
+            mrTextBodyProp.maPropertyMap[ PROP_TextWritingMode ]
+                <<= ( bRtl ? WritingMode_RL_TB : WritingMode_LR_TB );
+    }
 }
 
 // --------------------------------------------------------------------
diff -rup ../ooo330-m2-orig/oox/source/ppt/pptgraphicshapecontext.cxx oox/source/ppt/pptgraphicshapecontext.cxx
--- ../ooo330-m2-orig/oox/source/ppt/pptgraphicshapecontext.cxx	2010-08-24 20:25:45.000000000 +0200
+++ oox/source/ppt/pptgraphicshapecontext.cxx	2010-09-02 17:18:54.000000000 +0200
@@ -132,7 +132,8 @@ Reference< XFastContextHandler > PPTGrap
         OUString sIdx( xAttribs->getOptionalValue( XML_idx ) );
         sal_Bool bHasIdx = sIdx.getLength() > 0;
         sal_Int32 nIdx = sIdx.toInt32();
-        mpShapePtr->setSubTypeIndex( nIdx );
+        if( xAttribs->hasAttribute( XML_idx ) )
+            mpShapePtr->setSubTypeIndex( nIdx );
 
         if ( nSubType || bHasIdx )
         {
diff -rup ../ooo330-m2-orig/oox/source/ppt/pptshapecontext.cxx oox/source/ppt/pptshapecontext.cxx
--- ../ooo330-m2-orig/oox/source/ppt/pptshapecontext.cxx	2010-08-24 20:25:41.000000000 +0200
+++ oox/source/ppt/pptshapecontext.cxx	2010-09-02 17:18:37.000000000 +0200
@@ -116,7 +116,8 @@ Reference< XFastContextHandler > PPTShap
         {
             sal_Int32 nSubType( xAttribs->getOptionalValueToken( XML_type, XML_obj ) );
             mpShapePtr->setSubType( nSubType );
-            mpShapePtr->setSubTypeIndex( xAttribs->getOptionalValue( XML_idx ).toInt32() );
+            if( xAttribs->hasAttribute( XML_idx ) )
+                mpShapePtr->setSubTypeIndex( xAttribs->getOptionalValue( XML_idx ).toInt32() );
             if ( nSubType )
             {
                 PPTShape* pPPTShapePtr = dynamic_cast< PPTShape* >( mpShapePtr.get() );
diff -rup ../ooo330-m2-orig/oox/source/ppt/pptshape.cxx oox/source/ppt/pptshape.cxx
--- ../ooo330-m2-orig/oox/source/ppt/pptshape.cxx	2010-08-24 20:25:50.000000000 +0200
+++ oox/source/ppt/pptshape.cxx	2010-09-03 16:41:34.000000000 +0200
@@ -170,7 +170,11 @@ void PPTShape::addShape(
                 }
             }
 
-/*
+            OSL_TRACE("shape service: %s", rtl::OUStringToOString(sServiceName, RTL_TEXTENCODING_UTF8 ).getStr());
+
+            if( mnSubType && aMasterTextListStyle && getSubTypeIndex() != -1 )
+                aMasterTextListStyle.reset();
+
             // use placeholder index if possible
             if( mnSubType && getSubTypeIndex() && rSlidePersist.getMasterPersist().get() ) {
                 oox::drawingml::ShapePtr pPlaceholder = PPTShape::findPlaceholderByIndex( getSubTypeIndex(), rSlidePersist.getMasterPersist()->getShapes()->getChildren() );
@@ -184,7 +188,7 @@ void PPTShape::addShape(
                 aMasterTextListStyle = pNewTextListStyle;
                 }
             }
-*/
+
             if ( sServiceName.getLength() )
             {
             // use style from master slide for placeholders only, otherwise use slide's style, which might be the default style from presentation
diff -rup ../ooo330-m2-orig/oox/source/ppt/pptshapegroupcontext.cxx oox/source/ppt/pptshapegroupcontext.cxx
--- ../ooo330-m2-orig/oox/source/ppt/pptshapegroupcontext.cxx	2010-08-24 20:25:45.000000000 +0200
+++ oox/source/ppt/pptshapegroupcontext.cxx	2010-09-02 17:18:15.000000000 +0200
@@ -82,7 +82,8 @@ Reference< XFastContextHandler > PPTShap
     }
     case NMSP_PPT|XML_ph:
         mpGroupShapePtr->setSubType( xAttribs->getOptionalValueToken( XML_type, FastToken::DONTKNOW ) );
-        mpGroupShapePtr->setSubTypeIndex( xAttribs->getOptionalValue( XML_idx ).toInt32() );
+        if( xAttribs->hasAttribute( XML_idx ) )
+            mpGroupShapePtr->setSubTypeIndex( xAttribs->getOptionalValue( XML_idx ).toInt32() );
         break;
     // nvSpPr CT_ShapeNonVisual end
 
