diff --git vcl/source/window/brdwin.cxx vcl/source/window/brdwin.cxx
index 4bebcd9..1d75f22 100644
--- vcl/source/window/brdwin.cxx
+++ vcl/source/window/brdwin.cxx
@@ -138,12 +138,29 @@ static void ImplDrawBrdWinSymbolButton( OutputDevice* pDev,
     {
         if( bMouseOver )
         {
-            // provide a bright background for selection effect
-            pWin->SetFillColor( pDev->GetSettings().GetStyleSettings().GetWindowColor() );
-            pWin->SetLineColor();
-            pWin->DrawRect( rRect );
-            pWin->DrawSelectionBackground( rRect, 2, (nState & BUTTON_DRAW_PRESSED) ? TRUE : FALSE,
-                                            TRUE, FALSE );
+            bool bNativeOK = false;
+            if ( false /*pWin->IsNativeControlSupported( CTRL_TOOLBAR, PART_BUTTON )*/ )
+            {
+                ImplControlValue aControlValue;
+                Region aCtrlRegion( rRect );
+
+                ControlState nCtrlState = CTRL_STATE_ENABLED | CTRL_STATE_ROLLOVER;
+                if ( nState & BUTTON_DRAW_PRESSED )
+                    nCtrlState |= CTRL_STATE_PRESSED;
+
+                bNativeOK = pWin->DrawNativeControl( CTRL_TOOLBAR, PART_BUTTON, aCtrlRegion, nCtrlState,
+                        aControlValue, rtl::OUString() );
+            }
+
+            if ( !bNativeOK )
+            {
+                // provide a bright background for selection effect
+                pWin->SetFillColor( pDev->GetSettings().GetStyleSettings().GetWindowColor() );
+                pWin->SetLineColor();
+                pWin->DrawRect( rRect );
+                pWin->DrawSelectionBackground( rRect, 2, (nState & BUTTON_DRAW_PRESSED) ? TRUE : FALSE,
+                        TRUE, FALSE );
+            }
         }
         aTempRect = rRect;
         aTempRect.nLeft+=3;
