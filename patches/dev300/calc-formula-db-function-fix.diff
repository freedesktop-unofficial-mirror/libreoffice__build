From 12f4180a17174c0369740e8914f87c2a594c9feb Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 17:08:26 +0200
Subject: [PATCH 815/878] calc-formula-db-function-fix.diff

---
 sc/inc/queryparam.hxx              |    6 ++++++
 sc/source/core/tool/doubleref.cxx  |   24 ++++++++----------------
 sc/source/core/tool/interpr1.cxx   |   21 +++++++++++++++++++++
 sc/source/core/tool/queryparam.cxx |   17 +++++++++++++++++
 4 files changed, 52 insertions(+), 16 deletions(-)

diff --git a/sc/inc/queryparam.hxx b/sc/inc/queryparam.hxx
index 12f3842..b0b5d99 100644
--- a/sc/inc/queryparam.hxx
+++ b/sc/inc/queryparam.hxx
@@ -50,6 +50,8 @@ struct ScQueryParamBase
 
     virtual ~ScQueryParamBase();
 
+    virtual bool IsValidFieldIndex() const;
+
     SC_DLLPUBLIC SCSIZE GetEntryCount() const;
     SC_DLLPUBLIC ScQueryEntry& GetEntry(SCSIZE n) const;
     void Resize(SCSIZE nNew);
@@ -129,6 +131,8 @@ struct ScDBQueryParamInternal : public ScDBQueryParamBase, public ScQueryParamTa
 {
     ScDBQueryParamInternal();
     virtual ~ScDBQueryParamInternal();
+
+    virtual bool IsValidFieldIndex() const;
 };
 
 // ============================================================================
@@ -139,6 +143,8 @@ struct ScDBQueryParamMatrix : public ScDBQueryParamBase
 
     ScDBQueryParamMatrix();
     virtual ~ScDBQueryParamMatrix();
+
+    virtual bool IsValidFieldIndex() const;
 };
 
 #endif
diff --git a/sc/source/core/tool/doubleref.cxx b/sc/source/core/tool/doubleref.cxx
index 27bc4a0..82bd745 100644
--- a/sc/source/core/tool/doubleref.cxx
+++ b/sc/source/core/tool/doubleref.cxx
@@ -335,9 +335,13 @@ SCSIZE ScDBInternalRange::getVisibleDataCellCount() const
 
 OUString ScDBInternalRange::getString(SCCOL nCol, SCROW nRow) const
 {
-    String aStr;
+    OUString aStr;
     const ScAddress& s = maRange.aStart;
-    getDoc()->GetString(s.Col() + nCol, s.Row() + nRow, maRange.aStart.Tab(), aStr);
+    ScBaseCell* pCell = getDoc()->GetCell(ScAddress(s.Col() + nCol, s.Row() + nRow, maRange.aStart.Tab()));
+    if (!pCell)
+        return aStr;
+
+    getCellString(aStr, pCell);
     return aStr;
 }
 
@@ -350,15 +354,11 @@ SCCOL ScDBInternalRange::findFieldColumn(SCCOL nIndex) const
 {
     const ScRange& rRange = getRange();
     const ScAddress& s = rRange.aStart;
-    const ScAddress& e = rRange.aEnd;
 
     SCCOL nDBCol1 = s.Col();
-    SCCOL nDBCol2 = e.Col();
-
-    if ( nIndex <= 0 || nIndex > (nDBCol2 - nDBCol1 + 1) )
-        return nDBCol1;
 
-    return Min(nDBCol2, static_cast<SCCOL>(nDBCol1 + nIndex - 1));
+    // Don't handle out-of-bound condition here.  We'll do that later.
+    return nIndex + nDBCol1 - 1;
 }
 
 sal_uInt16 ScDBInternalRange::getCellString(OUString& rStr, ScBaseCell* pCell) const
@@ -520,14 +520,6 @@ SCCOL ScDBExternalRange::getFirstFieldColumn() const
 
 SCCOL ScDBExternalRange::findFieldColumn(SCCOL nIndex) const
 {
-    if (nIndex < 1)
-        // 1st field
-        return 0;
-
-    if (nIndex > mnCols)
-        // last field
-        return mnCols - 1;
-
     return nIndex - 1;
 }
 
diff --git a/sc/source/core/tool/interpr1.cxx b/sc/source/core/tool/interpr1.cxx
index c26722a..ee54e86 100644
--- a/sc/source/core/tool/interpr1.cxx
+++ b/sc/source/core/tool/interpr1.cxx
@@ -5987,6 +5987,11 @@ void ScInterpreter::DBIterator( ScIterFunc eFunc )
     auto_ptr<ScDBQueryParamBase> pQueryParam( GetDBParams(bMissingField) );
     if (pQueryParam.get())
     {
+        if (!pQueryParam->IsValidFieldIndex())
+        {
+            SetError(errNoValue);
+            return;
+        }
         ScDBQueryDataIterator aValIter(pDok, pQueryParam.release());
         ScDBQueryDataIterator::Value aValue;
         if ( aValIter.GetFirst(aValue) && !aValue.mnError )
@@ -6063,6 +6068,7 @@ void ScInterpreter::ScDBCount()
             // return empty cells, which would mean to adapt all callers of
             // iterators.
             ScDBQueryParamInternal* p = static_cast<ScDBQueryParamInternal*>(pQueryParam.get());
+            p->nCol2 = p->nCol1; // Don't forget to select only one column.
             SCTAB nTab = p->nTab;
             ScQueryCellIterator aCellIter( pDok, nTab, *p);
             if ( aCellIter.GetFirst() )
@@ -6075,6 +6081,11 @@ void ScInterpreter::ScDBCount()
         }
         else
         {   // count only matching records with a value in the "result" field
+            if (!pQueryParam->IsValidFieldIndex())
+            {
+                SetError(errNoValue);
+                return;
+            }
             ScDBQueryDataIterator aValIter( pDok, pQueryParam.release());
             ScDBQueryDataIterator::Value aValue;
             if ( aValIter.GetFirst(aValue) && !aValue.mnError )
@@ -6101,6 +6112,11 @@ void ScInterpreter::ScDBCount2()
     auto_ptr<ScDBQueryParamBase> pQueryParam( GetDBParams(bMissingField) );
     if (pQueryParam.get())
     {
+        if (!pQueryParam->IsValidFieldIndex())
+        {
+            SetError(errNoValue);
+            return;
+        }
         ULONG nCount = 0;
         pQueryParam->mbSkipString = false;
         ScDBQueryDataIterator aValIter( pDok, pQueryParam.release());
@@ -6162,6 +6178,11 @@ void ScInterpreter::GetDBStVarParams( double& rVal, double& rValCount )
     auto_ptr<ScDBQueryParamBase> pQueryParam( GetDBParams(bMissingField) );
     if (pQueryParam.get())
     {
+        if (!pQueryParam->IsValidFieldIndex())
+        {
+            SetError(errNoValue);
+            return;
+        }
         ScDBQueryDataIterator aValIter(pDok, pQueryParam.release());
         ScDBQueryDataIterator::Value aValue;
         if (aValIter.GetFirst(aValue) && !aValue.mnError)
diff --git a/sc/source/core/tool/queryparam.cxx b/sc/source/core/tool/queryparam.cxx
index 85bce51..16c25a6 100644
--- a/sc/source/core/tool/queryparam.cxx
+++ b/sc/source/core/tool/queryparam.cxx
@@ -57,6 +57,11 @@ ScQueryParamBase::~ScQueryParamBase()
 {
 }
 
+bool ScQueryParamBase::IsValidFieldIndex() const
+{
+    return true;
+}
+
 SCSIZE ScQueryParamBase::GetEntryCount() const
 {
     return maEntries.size();
@@ -366,6 +371,11 @@ ScDBQueryParamInternal::~ScDBQueryParamInternal()
 {
 }
 
+bool ScDBQueryParamInternal::IsValidFieldIndex() const
+{
+    return nCol1 <= mnField && mnField <= nCol2;
+}
+
 // ============================================================================
 
 ScDBQueryParamMatrix::ScDBQueryParamMatrix() :
@@ -373,6 +383,13 @@ ScDBQueryParamMatrix::ScDBQueryParamMatrix() :
 {
 }
 
+bool ScDBQueryParamMatrix::IsValidFieldIndex() const
+{
+    SCSIZE nC, nR;
+    mpMatrix->GetDimensions(nC, nR);
+    return 0 <= mnField && mnField <= static_cast<SCCOL>(nC);
+}
+
 ScDBQueryParamMatrix::~ScDBQueryParamMatrix()
 {
 }
-- 
1.7.0.1

