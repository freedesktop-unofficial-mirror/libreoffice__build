From 7be9541f00f0c591662ffc3abd4ded1b25ca548a Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 17:00:44 +0200
Subject: [PATCH 363/768] oox-custom-shape-polygons.diff

---
 oox/inc/oox/drawingml/customshapegeometry.hxx      |    4 +-
 oox/inc/oox/drawingml/customshapeproperties.hxx    |    4 +-
 oox/inc/oox/drawingml/shape.hxx                    |    5 +-
 oox/source/drawingml/chart/plotareaconverter.cxx   |    1 +
 oox/source/drawingml/customshapegeometry.cxx       |   92 +++++++++++++++++++-
 .../drawingml/diagram/diagramdefinitioncontext.cxx |    1 +
 .../drawingml/diagram/diagramfragmenthandler.cxx   |    2 +-
 oox/source/drawingml/graphicshapecontext.cxx       |    1 +
 oox/source/drawingml/shape.cxx                     |   34 +++++++-
 oox/source/drawingml/shapepropertiescontext.cxx    |    2 +-
 oox/source/drawingml/table/tablerowcontext.cxx     |    1 +
 oox/source/drawingml/theme.cxx                     |    1 +
 oox/source/shape/ShapeContextHandler.cxx           |    1 +
 oox/source/xls/themebuffer.cxx                     |    1 +
 14 files changed, 139 insertions(+), 11 deletions(-)

diff --git oox/inc/oox/drawingml/customshapegeometry.hxx oox/inc/oox/drawingml/customshapegeometry.hxx
index 56a9572..f510342 100644
--- oox/inc/oox/drawingml/customshapegeometry.hxx
+++ oox/inc/oox/drawingml/customshapegeometry.hxx
@@ -41,11 +41,11 @@ namespace oox { namespace drawingml {
 class CustomShapeGeometryContext : public ::oox::core::ContextHandler
 {
 public:
-    CustomShapeGeometryContext( ::oox::core::ContextHandler& rParent, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& xAttributes, CustomShapeProperties& rCustomShapeProperties );
+    CustomShapeGeometryContext( ::oox::core::ContextHandler& rParent, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& xAttributes, Shape& rShape );
     virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastContextHandler > SAL_CALL createFastChildContext( ::sal_Int32 aElementToken, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& xAttribs ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
 
 private:
-    CustomShapeProperties& mrCustomShapeProperties;
+    Shape& mrShape;
 };
 
 // ---------------------------------------------------------------------
diff --git oox/inc/oox/drawingml/customshapeproperties.hxx oox/inc/oox/drawingml/customshapeproperties.hxx
index cc9aff8..4bd9381 100644
--- oox/inc/oox/drawingml/customshapeproperties.hxx
+++ oox/inc/oox/drawingml/customshapeproperties.hxx
@@ -32,6 +32,7 @@
 #include "oox/drawingml/color.hxx"
 #include <com/sun/star/graphic/XGraphic.hpp>
 #include <boost/shared_ptr.hpp>
+#include <basegfx/polygon/b2dpolypolygon.hxx>
 #include "tokens.hxx"
 #include <vector>
 #include <map>
@@ -77,11 +78,12 @@ public:
     std::vector< CustomShapeGuide >& getAdjustmentValues(){ return maAdjustmentValues; };
 
     double getValue( const std::vector< CustomShapeGuide >&, sal_uInt32 nIndex ) const;
-
+    ::basegfx::B2DPolyPolygon& getPolygon() { return maPolygon; }
 private:
 
     rtl::OUString					maShapePresetType;
     std::vector< CustomShapeGuide >	maAdjustmentValues;
+    ::basegfx::B2DPolyPolygon maPolygon;
 };
 
 } }
diff --git oox/inc/oox/drawingml/shape.hxx oox/inc/oox/drawingml/shape.hxx
index 831401f..7ba2a44 100644
--- oox/inc/oox/drawingml/shape.hxx
+++ oox/inc/oox/drawingml/shape.hxx
@@ -30,7 +30,7 @@
 
 #include "oox/helper/propertymap.hxx"
 #include "oox/drawingml/drawingmltypes.hxx"
-#include "oox/drawingml/customshapeproperties.hxx"
+//#include "oox/drawingml/customshapeproperties.hxx"
 #include "oox/drawingml/textliststyle.hxx"
 
 #include <com/sun/star/frame/XModel.hpp>
@@ -42,6 +42,9 @@
 
 namespace oox { namespace drawingml {
 
+class CustomShapeProperties;
+typedef boost::shared_ptr< CustomShapeProperties > CustomShapePropertiesPtr;
+
 typedef ::std::map< ::rtl::OUString, ShapePtr > ShapeIdMap;
 
 struct ShapeStyleRef
diff --git oox/source/drawingml/chart/plotareaconverter.cxx oox/source/drawingml/chart/plotareaconverter.cxx
index 97ba0d7..b27f38f 100644
--- oox/source/drawingml/chart/plotareaconverter.cxx
+++ oox/source/drawingml/chart/plotareaconverter.cxx
@@ -27,6 +27,7 @@
 
 #include "oox/drawingml/chart/plotareaconverter.hxx"
 #include <com/sun/star/drawing/Direction3D.hpp>
+#include <com/sun/star/drawing/ProjectionMode.hpp>
 #include <com/sun/star/drawing/ShadeMode.hpp>
 #include <com/sun/star/chart2/XChartDocument.hpp>
 #include <com/sun/star/chart2/XCoordinateSystemContainer.hpp>
diff --git oox/source/drawingml/customshapegeometry.cxx oox/source/drawingml/customshapegeometry.cxx
index bc9a1e1..9045da3 100644
--- oox/source/drawingml/customshapegeometry.cxx
+++ oox/source/drawingml/customshapegeometry.cxx
@@ -26,10 +26,12 @@
  ************************************************************************/
 
 #include "oox/drawingml/customshapegeometry.hxx"
+#include "oox/drawingml/customshapeproperties.hxx"
 
 #include <com/sun/star/xml/sax/FastToken.hpp>
 #include <comphelper/stl_types.hxx>
 #include <hash_map>
+#include <basegfx/polygon/b2dpolygon.hxx>
 
 #include "oox/helper/helper.hxx"
 #include "oox/helper/propertymap.hxx"
@@ -37,6 +39,7 @@
 #include "tokens.hxx"
 
 using ::rtl::OUString;
+using namespace ::basegfx;
 using namespace ::oox::core;
 using namespace ::com::sun::star::uno;
 using namespace ::com::sun::star::xml::sax;
@@ -180,6 +183,88 @@ Reference< XFastContextHandler > AdjustmentValueContext::createFastChildContext(
 
 // ---------------------------------------------------------------------
 
+class PathListContext : public ContextHandler
+{
+public:
+    PathListContext( ContextHandler& rParent, Shape& rShape );
+    virtual ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastContextHandler > SAL_CALL createFastChildContext( ::sal_Int32 aElementToken, const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& xAttribs ) throw (::com::sun::star::xml::sax::SAXException, ::com::sun::star::uno::RuntimeException);
+    virtual void SAL_CALL endFastElement( sal_Int32 aElementToken ) throw (SAXException, RuntimeException);
+
+protected:
+    Shape& mrShape;
+    sal_Int32 maPointToken;
+    ::basegfx::B2DPolygon maPolygon;
+};
+
+PathListContext::PathListContext( ContextHandler& rParent, Shape& rShape )
+: ContextHandler( rParent )
+, mrShape( rShape )
+{
+}
+
+Reference< XFastContextHandler > PathListContext::createFastChildContext( sal_Int32 aElementToken, const Reference< XFastAttributeList >& xAttribs ) throw (SAXException, RuntimeException)
+{
+  switch( aElementToken ) {
+  case NMSP_DRAWINGML | XML_path:
+      maPolygon.clear();
+      break;
+  case NMSP_DRAWINGML | XML_close:
+      maPolygon.setClosed( true );
+      break;
+  case NMSP_DRAWINGML | XML_pt:
+  {
+      OUString sX, sY;
+
+      sX = xAttribs->getOptionalValue( XML_x );
+      sY = xAttribs->getOptionalValue( XML_y );
+
+      double dX, dY;
+
+      dX = sX.toDouble();
+      dY = sY.toDouble();
+
+      maPolygon.append( B2DPoint ( dX, dY ) );
+      break;
+  }
+  case NMSP_DRAWINGML | XML_lnTo:
+  case NMSP_DRAWINGML | XML_moveTo:
+      maPointToken = aElementToken;
+      break;
+  }
+
+  return this;
+}
+
+void PathListContext::endFastElement( sal_Int32 aElementToken ) throw (SAXException, RuntimeException)
+{
+    switch( aElementToken ) {
+    case NMSP_DRAWINGML|XML_pathLst:
+    {
+        B2DPolyPolygon& rPoly = mrShape.getCustomShapeProperties()->getPolygon();
+        if( rPoly.count() ) {
+        if( rPoly.areControlPointsUsed() ) {
+            if( rPoly.isClosed() )
+            mrShape.setServiceName( "com.sun.star.drawing.ClosedBezierShape" );
+            else
+            mrShape.setServiceName( "com.sun.star.drawing.OpenBezierShape" );
+        } else {
+            if( rPoly.isClosed() )
+            mrShape.setServiceName( "com.sun.star.drawing.PolyPolygonPathShape" );
+            else
+            mrShape.setServiceName( "com.sun.star.drawing.PolyLinePathShape" );
+        }
+        }
+        break;
+    }
+    case NMSP_DRAWINGML|XML_path:
+        if( maPolygon.count() > 0 )
+        mrShape.getCustomShapeProperties()->getPolygon().append( maPolygon );
+        break;
+    }
+}
+
+// ---------------------------------------------------------------------
+
 OUString GetShapeType( sal_Int32 nType )
 {
     OUString sType;
@@ -981,9 +1066,9 @@ static OUString GetTextShapeType( sal_Int32 nType )
 
 // ---------------------------------------------------------------------
 // CT_CustomGeometry2D
-CustomShapeGeometryContext::CustomShapeGeometryContext( ContextHandler& rParent, const Reference< XFastAttributeList >& /* xAttribs */, CustomShapeProperties& rCustomShapeProperties )
+CustomShapeGeometryContext::CustomShapeGeometryContext( ContextHandler& rParent, const Reference< XFastAttributeList >& /* xAttribs */, Shape& rShape )
 : ContextHandler( rParent )
-, mrCustomShapeProperties( rCustomShapeProperties )
+, mrShape( rShape )
 {
 }
 
@@ -997,8 +1082,9 @@ Reference< XFastContextHandler > CustomShapeGeometryContext::createFastChildCont
     case NMSP_DRAWINGML|XML_ahLst:		// CT_AdjustHandleList adjust handle list
     case NMSP_DRAWINGML|XML_cxnLst:	// CT_ConnectionSiteList connection site list
     case NMSP_DRAWINGML|XML_rect:	// CT_GeomRectList geometry rect list
+      break;
     case NMSP_DRAWINGML|XML_pathLst:	// CT_Path2DList 2d path list
-        break;
+        return new PathListContext( *this, mrShape );
     }
 
     Reference< XFastContextHandler > xEmpty;
diff --git oox/source/drawingml/diagram/diagramdefinitioncontext.cxx oox/source/drawingml/diagram/diagramdefinitioncontext.cxx
index 4aef3b8..b7f8889 100644
--- oox/source/drawingml/diagram/diagramdefinitioncontext.cxx
+++ oox/source/drawingml/diagram/diagramdefinitioncontext.cxx
@@ -30,6 +30,7 @@
 #include "oox/helper/helper.hxx"
 #include "layoutnodecontext.hxx"
 #include "oox/drawingml/diagram/datamodelcontext.hxx"
+#include "tokens.hxx"
 
 using namespace ::oox::core;
 using namespace ::com::sun::star::uno;
diff --git oox/source/drawingml/diagram/diagramfragmenthandler.cxx oox/source/drawingml/diagram/diagramfragmenthandler.cxx
index c8b75c1..17f7b0b 100644
--- oox/source/drawingml/diagram/diagramfragmenthandler.cxx
+++ oox/source/drawingml/diagram/diagramfragmenthandler.cxx
@@ -31,7 +31,7 @@
 #include "oox/drawingml/diagram/datamodelcontext.hxx"
 #include "oox/core/namespaces.hxx"
 #include "diagramdefinitioncontext.hxx"
-
+#include "tokens.hxx"
 
 using namespace ::oox::core;
 using namespace ::com::sun::star::xml::sax;
diff --git oox/source/drawingml/graphicshapecontext.cxx oox/source/drawingml/graphicshapecontext.cxx
index c80b895..3d9c466 100644
--- oox/source/drawingml/graphicshapecontext.cxx
+++ oox/source/drawingml/graphicshapecontext.cxx
@@ -30,6 +30,7 @@
 #include <com/sun/star/chart2/XChartDocument.hpp>
 
 #include "oox/drawingml/fillpropertiesgroupcontext.hxx"
+#include "oox/drawingml/customshapeproperties.hxx"
 #include "oox/drawingml/diagram/diagramfragmenthandler.hxx"
 #include "oox/drawingml/table/tablecontext.hxx"
 #include "oox/core/namespaces.hxx"
diff --git oox/source/drawingml/shape.cxx oox/source/drawingml/shape.cxx
index b9493fb..9ef8d00 100644
--- oox/source/drawingml/shape.cxx
+++ oox/source/drawingml/shape.cxx
@@ -26,6 +26,7 @@
  ************************************************************************/
 
 #include "oox/drawingml/shape.hxx"
+#include "oox/drawingml/customshapeproperties.hxx"
 #include "oox/drawingml/theme.hxx"
 #include "oox/drawingml/fillproperties.hxx"
 #include "oox/drawingml/lineproperties.hxx"
@@ -216,8 +217,8 @@ void Shape::addChildren(
     aIter = rMaster.maChildren.begin();
     while( aIter != rMaster.maChildren.end() )
     {
-        Rectangle aShapeRect;
-        Rectangle* pShapeRect = 0;
+        awt::Rectangle aShapeRect;
+        awt::Rectangle* pShapeRect = 0;
         if ( ( nGlobalLeft != SAL_MAX_INT32 ) && ( nGlobalRight != SAL_MIN_INT32 ) && ( nGlobalTop != SAL_MAX_INT32 ) && ( nGlobalBottom != SAL_MIN_INT32 ) )
         {
             sal_Int32 nGlobalWidth = nGlobalRight - nGlobalLeft;
@@ -296,6 +297,35 @@ Reference< XShape > Shape::createAndInsert(
         aTransformation.translate( aPosition.X / 360.0, aPosition.Y / 360.0 );
     }
 
+    if ( mpCustomShapePropertiesPtr && mpCustomShapePropertiesPtr->getPolygon().count() )
+    {
+    ::basegfx::B2DPolyPolygon& rPolyPoly = mpCustomShapePropertiesPtr->getPolygon();
+
+    if( rPolyPoly.count() > 0 ) {
+        if( rPolyPoly.areControlPointsUsed() ) {
+        // TODO Beziers
+        } else {
+        uno::Sequence< uno::Sequence< awt::Point > > aPolyPolySequence( rPolyPoly.count() );
+
+        for (sal_uInt32 j = 0; j < rPolyPoly.count(); j++ ) {
+            ::basegfx::B2DPolygon aPoly = rPolyPoly.getB2DPolygon( j );
+
+            // now creating the corresponding PolyPolygon
+            sal_Int32 i, nNumPoints = aPoly.count();
+            uno::Sequence< awt::Point > aPointSequence( nNumPoints );
+            awt::Point* pPoints = aPointSequence.getArray();
+            for( i = 0; i < nNumPoints; ++i )
+            {
+            const ::basegfx::B2DPoint aPoint( aPoly.getB2DPoint( i ) );
+            pPoints[ i ] = awt::Point( static_cast< sal_Int32 >( aPoint.getX() ), static_cast< sal_Int32 >( aPoint.getY() ) );
+            }
+            aPolyPolySequence.getArray()[ j ] = aPointSequence;
+        }
+        maShapeProperties[ PROP_PolyPolygon ] <<= aPolyPolySequence;
+        }
+    }
+    }
+
     // special for lineshape
     if ( aServiceName == OUString::createFromAscii( "com.sun.star.drawing.LineShape" ) )
     {
diff --git oox/source/drawingml/shapepropertiescontext.cxx oox/source/drawingml/shapepropertiescontext.cxx
index cb940cb..a9980a5 100644
--- oox/source/drawingml/shapepropertiescontext.cxx
+++ oox/source/drawingml/shapepropertiescontext.cxx
@@ -74,7 +74,7 @@ Reference< XFastContextHandler > ShapePropertiesContext::createFastChildContext(
 
     // GeometryGroup
     case NMSP_DRAWINGML|XML_custGeom:	// custom geometry "CT_CustomGeometry2D"
-        xRet.set( new CustomShapeGeometryContext( *this, xAttribs, *(mrShape.getCustomShapeProperties())  ) );
+        xRet.set( new CustomShapeGeometryContext( *this, xAttribs, mrShape ) );
         break;
 
 
diff --git oox/source/drawingml/table/tablerowcontext.cxx oox/source/drawingml/table/tablerowcontext.cxx
index 0d8ac63..5ce757a 100644
--- oox/source/drawingml/table/tablerowcontext.cxx
+++ oox/source/drawingml/table/tablerowcontext.cxx
@@ -31,6 +31,7 @@
 #include "oox/drawingml/table/tablecellcontext.hxx"
 #include "oox/drawingml/table/tablerow.hxx"
 #include "oox/core/namespaces.hxx"
+#include "tokens.hxx"
 
 using namespace ::oox::core;
 using namespace ::com::sun::star;
diff --git oox/source/drawingml/theme.cxx oox/source/drawingml/theme.cxx
index 5354ed4..cef812a 100644
--- oox/source/drawingml/theme.cxx
+++ oox/source/drawingml/theme.cxx
@@ -26,6 +26,7 @@
  ************************************************************************/
 
 #include "oox/drawingml/theme.hxx"
+#include "tokens.hxx"
 
 using ::rtl::OUString;
 
diff --git oox/source/shape/ShapeContextHandler.cxx oox/source/shape/ShapeContextHandler.cxx
index bdd7833..d514781 100644
--- oox/source/shape/ShapeContextHandler.cxx
+++ oox/source/shape/ShapeContextHandler.cxx
@@ -29,6 +29,7 @@
 #include "oox/vml/vmldrawingfragment.hxx"
 #include "oox/vml/vmlshape.hxx"
 #include "oox/vml/vmlshapecontainer.hxx"
+#include "tokens.hxx"
 
 #if DEBUG
 #include <iostream>
diff --git oox/source/xls/themebuffer.cxx oox/source/xls/themebuffer.cxx
index 502df78..a3b3970 100644
--- oox/source/xls/themebuffer.cxx
+++ oox/source/xls/themebuffer.cxx
@@ -27,6 +27,7 @@
 
 #include "oox/xls/themebuffer.hxx"
 #include "oox/xls/stylesbuffer.hxx"
+#include "tokens.hxx"
 
 using ::oox::drawingml::ClrScheme;
 
-- 
1.7.0.1

