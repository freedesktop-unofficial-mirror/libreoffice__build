Index: sw/source/core/unocore/unotext.cxx
===================================================================
--- sw/source/core/unocore/unotext.cxx	(r√©vision 267004)
+++ sw/source/core/unocore/unotext.cxx	(copie de travail)
@@ -68,6 +68,8 @@
 #include <memory>
 #include <stdlib.h>
 
+#include <iostream>
+
 using namespace ::com::sun::star;
 using ::rtl::OUString;
 
@@ -256,8 +258,8 @@
 					sal::static_int_cast< sal_IntPtr >( xRangeTunnel->getSomething( OTextCursorHelper::getUnoTunnelId()) ));
 		}
 
-		if(pRange && pRange->GetDoc()  == GetDoc() ||
-			pCursor && pCursor->GetDoc()  == GetDoc())
+		if( ( pRange && pRange->GetDoc()  == GetDoc() ) ||
+			( pCursor && pCursor->GetDoc()  == GetDoc() ) )
 		{
 			const SwStartNode* pOwnStartNode = GetStartNode();
 			if(pCursor)
@@ -1995,7 +1997,16 @@
         const beans::PropertyValue* pTableProperties = rTableProperties.getConstArray();
         sal_Int32 nProperty = 0;
         for( ; nProperty < rTableProperties.getLength(); ++nProperty)
-            xPrSet->setPropertyValue( pTableProperties[nProperty].Name, pTableProperties[nProperty].Value );
+        {
+            try 
+            {
+                xPrSet->setPropertyValue( pTableProperties[nProperty].Name, pTableProperties[nProperty].Value );
+            }
+            catch ( const uno::Exception e )
+            {
+                // TODO log
+            }
+        }
 
         //apply row properties
         uno::Reference< table::XTableRows >  xRows = xRet->getRows();
@@ -2052,6 +2063,7 @@
 //--<
 #endif
 
+
         //apply cell properties
         for( nRow = 0; nRow < rCellProperties.getLength(); ++nRow)
         {
@@ -2064,7 +2076,8 @@
                 uno::Reference< beans::XPropertySet > xCell( pTextTable->getCellByPosition(nCell, nRow), uno::UNO_QUERY );
                 for( nProperty = 0; nProperty < nCellProperties; ++nProperty)
                 {
-                    if(aCellProperties[nProperty].Name.equalsAsciiL(
+                    const OUString& rName = aCellProperties[nProperty].Name;
+                    if( rName.equalsAsciiL(
                                 RTL_CONSTASCII_STRINGPARAM ( "VerticalMerge")))
                     {
                         //determine left border position
@@ -2127,8 +2140,24 @@
                             }
                         }
                     }
-                    else
-                        xCell->setPropertyValue(aCellProperties[nProperty].Name, aCellProperties[nProperty].Value);
+                    else 
+                    {
+                        try
+                        {
+                            xCell->setPropertyValue(rName, aCellProperties[nProperty].Value);
+                        }
+                        catch ( const uno::Exception e )
+                        {
+                            // Apply the paragraph and char properties to the cell's content
+                            uno::Reference< text::XText > xCellText( xCell, uno::UNO_QUERY );
+                            uno::Reference< text::XTextCursor > xCellCurs = xCellText->createTextCursor( );
+                            xCellCurs->gotoStart( false );
+                            xCellCurs->gotoEnd( true );
+    
+                            uno::Reference< beans::XPropertySet > xCellTextProps( xCellCurs, uno::UNO_QUERY );
+                            xCellTextProps->setPropertyValue( rName, aCellProperties[nProperty].Value );
+                        }
+                    }
                 }
             }
         }
