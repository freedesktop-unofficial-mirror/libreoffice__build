--- ../../../ooh680-m17/vcl/inc/vcl/window.h	2007-11-26 17:11:34.000000000 +0200
+++ vcl/inc/vcl/window.h	2008-08-06 10:41:47.964250000 +0300
@@ -86,7 +86,7 @@ class SmartId;
 class VCLXWindow;
 class SalFrame;
 class SalObject;
-
+class TaskPaneList;
 
 namespace com {
 namespace sun {
@@ -376,11 +376,11 @@ public:
                         mbSuppressAccessibilityEvents:1,
                         mbMenuFloatingWindow:1,
                         mbDrawSelectionBackground:1,
-                        mbIsInTaskPaneList:1,
                         mbToolbarFloatingWindow:1,
                         mbCallHandlersDuringInputDisabled:1;
 
     ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > mxDNDListenerContainer;
+	TaskPaneList       *mpTaskPaneList;
 };
 
 // -----------------
--- ../../../ooh680-m17/vcl/inc/vcl/window.hxx	2008-01-10 17:05:37.000000000 +0200
+++ vcl/inc/vcl/window.hxx	2008-08-06 10:53:12.448625000 +0300
@@ -124,6 +124,7 @@ class UNOWindowData;
 struct IDataObject;
 class VCLXWindow;
 struct ImplAccessibleInfos;
+class TaskPaneList;
 
 namespace com {
 namespace sun {
@@ -596,7 +597,7 @@ public:
     SAL_DLLPRIVATE void		   ImplPaintToMetaFile( GDIMetaFile* pMtf, OutputDevice* pTargetOutDev, const Region* pOuterClip = NULL );
 
     SAL_DLLPRIVATE BOOL        ImplIsInTaskPaneList();
-    SAL_DLLPRIVATE void        ImplIsInTaskPaneList( BOOL mbIsInTaskList );
+    SAL_DLLPRIVATE void        ImplIsInTaskPaneList( TaskPaneList *pTaskPaneList );
     SAL_DLLPRIVATE ::com::sun::star::uno::Reference< ::com::sun::star::rendering::XCanvas > 
                                ImplGetCanvas( const Size& rFullscreenSize, bool bFullscreen ) const;
     SAL_DLLPRIVATE void        ImplMoveControlValue( ControlType, const ImplControlValue&, const Point& ) const;
--- ../../../ooh680-m17/vcl/source/window/window.cxx	2008-01-23 19:15:07.000000000 +0200
+++ vcl/source/window/window.cxx	2008-08-06 14:53:24.948625000 +0300
@@ -770,9 +770,9 @@ void Window::ImplInitWindowData( WindowT
     mpWindowImpl->mbCreatedWithToolkit = FALSE;
     mpWindowImpl->mbSuppressAccessibilityEvents = FALSE; // TRUE: do not send any accessibility events
     mpWindowImpl->mbDrawSelectionBackground = FALSE;    // TRUE: draws transparent window background to indicate (toolbox) selection
-    mpWindowImpl->mbIsInTaskPaneList = FALSE;           // TRUE: window was added to the taskpanelist in the topmost system window
     mpWindowImpl->mnNativeBackground  = 0;              // initialize later, depends on type
     mpWindowImpl->mbCallHandlersDuringInputDisabled = FALSE; // TRUE: call event handlers even if input is disabled
+    mpWindowImpl->mpTaskPaneList      = NULL;           // non-NULL:  taskpanelist the window has been added to 
 
     mbEnableRTL         = TRUE;         // TRUE: this outdev will be mirrored if RTL window layout (UI mirroring) is globally active
 }
@@ -4572,28 +4570,9 @@ Window::~Window()
     }
 #endif
 
-    if( mpWindowImpl->mbIsInTaskPaneList )
+    if( mpWindowImpl->mpTaskPaneList != NULL )
     {
-        Window* pMyParent = this;
-        SystemWindow* pMySysWin = NULL;
-
-        while ( pMyParent )
-        {
-            if ( pMyParent->IsSystemWindow() )
-                pMySysWin = (SystemWindow*)pMyParent;
-            pMyParent = pMyParent->GetParent();
-        }
-        if ( pMySysWin && pMySysWin->ImplIsInTaskPaneList( this ) )
-        {
-            pMySysWin->GetTaskPaneList()->RemoveWindow( this );
-        }
-        else
-        {
-            ByteString aTempStr( "Window (" );
-            aTempStr += ByteString( GetText(), RTL_TEXTENCODING_UTF8 );
-            aTempStr += ") not found in TaskPanelList!";
-            DBG_ERROR( aTempStr.GetBuffer() );
-        }
+		mpWindowImpl->mpTaskPaneList->RemoveWindow( this );
     }
 
     // Fenster hiden, um das entsprechende Paint-Handling auszuloesen
@@ -6260,7 +6249,7 @@ void Window::SetParent( Window* pNewPare
         if( pNewSysWin && pNewSysWin != pSysWin )
         {
             bChangeTaskPaneList = TRUE;
-            pSysWin->GetTaskPaneList()->RemoveWindow( this );
+            mpWindowImpl->mpTaskPaneList->RemoveWindow( this );
         }
     }
 
@@ -9437,11 +9426,11 @@ void Window::ImplDecModalCount()
 }
 BOOL Window::ImplIsInTaskPaneList()
 {
-    return mpWindowImpl->mbIsInTaskPaneList;
+    return mpWindowImpl->mpTaskPaneList != NULL;
 }
-void Window::ImplIsInTaskPaneList( BOOL mbIsInTaskList )
+void Window::ImplIsInTaskPaneList( TaskPaneList *pTaskPaneList )
 {
-    mpWindowImpl->mbIsInTaskPaneList = mbIsInTaskList;
+    mpWindowImpl->mpTaskPaneList = pTaskPaneList;
 }
 
 void Window::ImplNotifyIconifiedState( BOOL bIconified )
--- ../../../ooh680-m17/vcl/source/window/taskpanelist.cxx	2008-01-10 16:47:25.000000000 +0200
+++ vcl/source/window/taskpanelist.cxx	2008-08-06 14:10:35.839250000 +0300
@@ -173,7 +173,7 @@ void TaskPaneList::AddWindow( Window *pW
         }
 
         mTaskPanes.insert( insertionPos, pWindow );
-        pWindow->ImplIsInTaskPaneList( TRUE );
+        pWindow->ImplIsInTaskPaneList( this );
     }
 }
 
@@ -186,7 +186,7 @@ void TaskPaneList::RemoveWindow( Window 
     if( p != mTaskPanes.end() )
     {
 	    mTaskPanes.erase( p );
-        pWindow->ImplIsInTaskPaneList( FALSE );
+        pWindow->ImplIsInTaskPaneList( NULL );
     }
 }
 
