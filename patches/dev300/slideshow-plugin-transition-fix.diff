diff -rup slideshow-orig/source/engine/transitions/slidetransitionfactory.cxx slideshow/source/engine/transitions/slidetransitionfactory.cxx
--- slideshow-orig/source/engine/transitions/slidetransitionfactory.cxx	2008-10-06 16:44:49.000000000 +0200
+++ slideshow/source/engine/transitions/slidetransitionfactory.cxx	2008-10-06 16:45:23.000000000 +0200
@@ -160,9 +160,10 @@ public:
         const UnoViewVector::const_iterator aEnd(rViewContainer.end());
         while( aCurrView != aEnd )
         {
-	    addTransition( *aCurrView );
+	    if(! addTransition( *aCurrView ) )
+		return;
 
-            ENSURE_OR_THROW(maTransitions.back()->mxTransition.is(),
+            ENSURE_OR_THROW(maTransitions.back() && maTransitions.back()->mxTransition.is(),
                             "Failed to create plugin transition");
             ++aCurrView;
         }
--- slideshow/source/engine/slideshowimpl.cxx	2009-04-02 12:36:30.000000000 +0200
+++ slideshow/source/engine/slideshowimpl.cxx	2009-03-25 18:01:38.000000000 +0100
@@ -73,6 +73,7 @@
 #include <com/sun/star/presentation/XSlideShow.hpp>
 #include <com/sun/star/lang/XServiceInfo.hpp>
 #include <com/sun/star/lang/XServiceName.hpp>
+#include <com/sun/star/loader/CannotActivateFactoryException.hpp>
 
 #include "unoviewcontainer.hxx"
 #include "transitionfactory.hxx"
@@ -477,18 +480,24 @@
 {
     // keep care not constructing any UNO references to this inside ctor,
     // shift that code to create()!
-    
+   
     uno::Reference<lang::XMultiComponentFactory> xFactory( 
         mxComponentContext->getServiceManager() );
 
     if( xFactory.is() )
     {
-        // #i82460# try to retrieve special transition factory
-        mxOptionalTransitionFactory.set( 
-            xFactory->createInstanceWithContext( 
-                ::rtl::OUString::createFromAscii( "com.sun.star.presentation.TransitionFactory" ),
-                mxComponentContext ), 
-            uno::UNO_QUERY );
+        try
+	{
+            // #i82460# try to retrieve special transition factory
+            mxOptionalTransitionFactory.set( 
+                xFactory->createInstanceWithContext( 
+                    ::rtl::OUString::createFromAscii( "com.sun.star.presentation.TransitionFactory" ),
+                    mxComponentContext ), 
+                uno::UNO_QUERY );
+        }
+        catch (loader::CannotActivateFactoryException const&)
+	{
+	}
     }
 
     mpListener.reset( new SeparateListenerImpl(
