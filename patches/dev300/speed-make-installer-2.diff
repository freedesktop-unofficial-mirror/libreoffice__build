diff -u -r solenv/bin-pristine/make_installer.pl solenv/bin/make_installer.pl
--- solenv/bin-pristine/make_installer.pl	2008-11-25 19:22:01.000000000 +0000
+++ solenv/bin/make_installer.pl	2008-12-12 15:25:33.000000000 +0000
@@ -382,7 +382,7 @@
 installer::setupscript::resolve_lowercase_productname_setupscriptvariable($allscriptvariablesref);
 if ( $installer::globals::globallogging ) { installer::files::save_file($loggingdir . "setupscriptvariables3.log" ,$allscriptvariablesref); }
 
-installer::setupscript::replace_all_setupscriptvariables_in_script($setupscriptref, $allscriptvariablesref);
+$setupscriptref = installer::setupscript::replace_all_setupscriptvariables_in_script($setupscriptref, $allscriptvariablesref);
 if ( $installer::globals::globallogging ) { installer::files::save_file($loggingdir . "setupscript2.log" ,$setupscriptref); }
 
 # Adding all variables defined in the installation object into the hash of all variables.

diff -u -r solenv/bin-pristine/modules/installer/setupscript.pm solenv/bin/modules/installer/setupscript.pm
--- solenv/bin/modules/installer/setupscript.pm.old	2009-04-02 12:53:08.000000000 +0200
+++ solenv/bin/modules/installer/setupscript.pm	2009-04-03 20:30:33.000000000 +0200
@@ -248,22 +248,30 @@ sub replace_all_setupscriptvariables_in_
 		}
 	}
 
-	for ( my $i = 0; $i <= $#{$scriptref}; $i++ )
-	{
-		my $line = ${$scriptref}[$i];
-
-		if ( $line =~ /^.*\%\w+.*$/ )	# only oif "%" occurs
-		{
-			# Attention: It must be possible to substitute "%PRODUCTNAMEn", "%PRODUCTNAME%PRODUCTVERSIONabc"
-
-			foreach my $key ( keys %subs )
-			{
-				my $value = $subs{$key};
-				$line =~ s/$key/$value/g;
-				${$scriptref}[$i] = $line;
-			}
-		}
+	# This is far faster than running a regexp for each line
+	my $bigstring = '';
+	for my $line (@{$scriptref}) {
+	    $bigstring = $bigstring . $line;
+	}
+	foreach my $key ( keys %subs )
+	{
+	    # Attention: It must be possible to substitute "%PRODUCTNAMEn", "%PRODUCTNAME%PRODUCTVERSIONabc"
+	    my $value = $subs{$key};
+	    $bigstring =~ s/$key/$value/g;
+	}
+	my @newlines = split /\n/, $bigstring;
+	$scriptref = \@newlines;
+
+	# now check for any mis-named '%' variables that we have left
+	my $num = 0;
+	for my $check (@newlines) {
+	    $num++;
+	    if ( $check =~ /^.*\%\w+.*$/ ) {
+		print STDERR "Warning: mis-named or un-known '%' variable at line $num:\n$check\n";
+	    }
 	}
+
+	return $scriptref;
 }
 
 #######################################################################
