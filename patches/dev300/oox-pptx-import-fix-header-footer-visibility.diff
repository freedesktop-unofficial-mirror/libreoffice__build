diff -rup oox-orig/inc/oox/ppt/slidepersist.hxx oox/inc/oox/ppt/slidepersist.hxx
--- oox-orig/inc/oox/ppt/slidepersist.hxx	2009-05-15 13:39:50.000000000 +0200
+++ oox/inc/oox/ppt/slidepersist.hxx	2009-05-18 15:22:21.000000000 +0200
@@ -117,6 +117,8 @@ public:
     std::map< ::rtl::OUString, ::com::sun::star::uno::Reference< ::com::sun::star::animations::XAnimationNode > >& getAnimNodesMap() { return maAnimNodesMap; };
     ::oox::drawingml::ShapePtr getShape( const ::rtl::OUString & id ) { return maShapeMap[ id ]; }
     ::oox::drawingml::ShapeIdMap& getShapeMap() { return maShapeMap; }
+    void setUseHeaderFooterVisibility( sal_Bool bUseHeaderFooterVisibility ) { mbUseHeaderFooterVisibility = bUseHeaderFooterVisibility; }
+    void setHeaderFooterVisibility( sal_Bool bHeaderVisible, sal_Bool bFooterVisible, sal_Bool bDateTimeVisible, sal_Bool bPageNumberVisible ) { mbHeaderVisible = bHeaderVisible; mbFooterVisible = bFooterVisible; mbDateTimeVisible = bDateTimeVisible; mbPageNumberVisible = bPageNumberVisible; }
 
 private:
 	rtl::OUString															maPath;
@@ -144,6 +146,12 @@ private:
 
 	std::map< ::rtl::OUString, ::com::sun::star::uno::Reference< ::com::sun::star::animations::XAnimationNode > > maAnimNodesMap;
 	std::map< ::rtl::OUString, ::oox::drawingml::ShapePtr > maShapeMap;
+
+    sal_Bool mbUseHeaderFooterVisibility;
+    sal_Bool mbHeaderVisible;
+    sal_Bool mbFooterVisible;
+    sal_Bool mbDateTimeVisible;
+    sal_Bool mbPageNumberVisible;
 };
 
 } }
diff -rup oox-orig/source/ppt/slidefragmenthandler.cxx oox/source/ppt/slidefragmenthandler.cxx
--- oox-orig/source/ppt/slidefragmenthandler.cxx	2009-05-15 13:39:52.000000000 +0200
+++ oox/source/ppt/slidefragmenthandler.cxx	2009-05-18 15:28:01.000000000 +0200
@@ -35,6 +35,7 @@
 #include <com/sun/star/container/XNamed.hpp>
 
 #include "tokens.hxx"
+#include "oox/helper/attributelist.hxx"
 #include "oox/helper/propertyset.hxx"
 #include "oox/core/namespaces.hxx"
 #include "oox/core/xmlfilterbase.hxx"
@@ -84,9 +85,11 @@ Reference< XFastContextHandler > SlideFr
 	{
 	case NMSP_PPT|XML_sldMaster:		// CT_SlideMaster
 	case NMSP_PPT|XML_handoutMaster:	// CT_HandoutMaster
+	case NMSP_PPT|XML_notesMaster:		// CT_NotesMaster
+	    mpSlidePersistPtr->setUseHeaderFooterVisibility( sal_True );
+		break;
 	case NMSP_PPT|XML_sld:				// CT_CommonSlideData
 	case NMSP_PPT|XML_notes:			// CT_NotesSlide
-	case NMSP_PPT|XML_notesMaster:		// CT_NotesMaster
 		break;
 	case NMSP_PPT|XML_cSld:				// CT_CommonSlideData
 		maSlideName = xAttribs->getOptionalValue(XML_name);
@@ -134,6 +137,16 @@ Reference< XFastContextHandler > SlideFr
 	case NMSP_PPT|XML_custDataLst:		// CT_CustomerDataList
 	case NMSP_PPT|XML_tagLst:			// CT_TagList
 		break;
+	case NMSP_PPT|XML_hf:
+	   {
+	       AttributeList attribs( xAttribs );
+
+	       mpSlidePersistPtr->setHeaderFooterVisibility( attribs.getBool( XML_hdr, sal_False ),
+							     attribs.getBool( XML_ftr, sal_False ),
+							     attribs.getBool( XML_dt, sal_False ),
+							     attribs.getBool( XML_sldNum, sal_False ) );
+	       break;
+	   }
 	}
 
 	if( !xRet.is() )
diff -rup oox-orig/source/ppt/slidepersist.cxx oox/source/ppt/slidepersist.cxx
--- oox-orig/source/ppt/slidepersist.cxx	2009-05-15 13:39:52.000000000 +0200
+++ oox/source/ppt/slidepersist.cxx	2009-05-18 15:35:49.000000000 +0200
@@ -66,6 +66,11 @@ SlidePersist::SlidePersist( sal_Bool bMa
 , maBodyTextStylePtr( new oox::drawingml::TextListStyle )
 , maNotesTextStylePtr( new oox::drawingml::TextListStyle )
 , maOtherTextStylePtr( new oox::drawingml::TextListStyle )
+, mbUseHeaderFooterVisibility( sal_False )
+, mbHeaderVisible( sal_False )
+, mbFooterVisible( sal_False )
+, mbDateTimeVisible( sal_False )
+, mbPageNumberVisible( sal_False )
 {
 	if ( pDefaultTextStyle )
 	{
@@ -166,6 +171,18 @@ void SlidePersist::createXShapes( const
             pNode->setNode( rFilterBase, xNode, pSlidePtr );
 		}
 	}
+
+	if( mbUseHeaderFooterVisibility || mpMasterPagePtr.get() ) {
+	    Reference< XDrawPage > xSlide( mxPage );
+	    PropertyMap aPropMap;
+	    PropertySet aSlideProp( xSlide );
+
+	    aPropMap[ CREATE_OUSTRING( "IsHeaderVisible" ) ] = Any( mbUseHeaderFooterVisibility ? mbHeaderVisible : mpMasterPagePtr->mbHeaderVisible );
+	    aPropMap[ CREATE_OUSTRING( "IsFooterVisible" ) ] = Any( mbUseHeaderFooterVisibility ? mbFooterVisible : mpMasterPagePtr->mbFooterVisible );
+	    aPropMap[ CREATE_OUSTRING( "IsDateTimeVisible" ) ] = Any( mbUseHeaderFooterVisibility ? mbDateTimeVisible : mpMasterPagePtr->mbDateTimeVisible );
+	    aPropMap[ CREATE_OUSTRING( "IsPageNumberVisible" ) ] = Any( mbUseHeaderFooterVisibility ? mbPageNumberVisible : mpMasterPagePtr->mbPageNumberVisible );
+	    aSlideProp.setProperties( aPropMap );
+	}
 }
 
 void SlidePersist::createBackground( const XmlFilterBase& rFilterBase )
