diff --git sfx2/inc/sfx2/objsh.hxx sfx2/inc/sfx2/objsh.hxx
index 488acea..9c7e99f 100644
--- sfx2/inc/sfx2/objsh.hxx
+++ sfx2/inc/sfx2/objsh.hxx
@@ -354,6 +354,13 @@ public:
     virtual sal_Bool            SwitchPersistance(
                                     const ::com::sun::star::uno::Reference< ::com::sun::star::embed::XStorage >& xStorage );
     virtual void                UpdateLinks();
+    /** 
+     * Called when the Options dialog is dismissed with the OK button, to 
+     * handle potentially conflicting option settings.
+     */
+    virtual void                CheckConfigOptions();
+    sal_Bool                    IsConfigOptionsChecked() const;
+    void                        SetConfigOptionsChecked( sal_Bool bChecked );
 
     sal_Bool                    SaveChildren(BOOL bObjectsOnly=FALSE);
     sal_Bool                    SaveAsChildren( SfxMedium &rMedium );
diff --git sfx2/source/appl/appserv.cxx sfx2/source/appl/appserv.cxx
index b511170..72b605e 100644
--- sfx2/source/appl/appserv.cxx
+++ sfx2/source/appl/appserv.cxx
@@ -881,6 +881,9 @@ void SfxApplication::OfaExec_Impl( SfxRequest& rReq )
                 SfxViewFrame* pView = SfxViewFrame::GetFirst();
                 while ( pView )
                 {
+                    SfxObjectShell* pObjSh = pView->GetObjectShell();
+                    if (pObjSh)
+                        pObjSh->SetConfigOptionsChecked(false);
                     pView->GetBindings().InvalidateAll(FALSE);
                     pView = SfxViewFrame::GetNext( *pView );
                 }
diff --git sfx2/source/doc/objstor.cxx sfx2/source/doc/objstor.cxx
index e9856fe..a836b20 100644
--- sfx2/source/doc/objstor.cxx
+++ sfx2/source/doc/objstor.cxx
@@ -4001,6 +4001,22 @@ void SfxObjectShell::UpdateLinks()
 {
 }
 
+void SfxObjectShell::CheckConfigOptions()
+{
+	// not handled.  Each app's shell needs to overwrite this method to add handler.
+	SetConfigOptionsChecked(true);
+}
+
+sal_Bool SfxObjectShell::IsConfigOptionsChecked() const
+{
+	return pImp->m_bConfigOptionsChecked;
+}
+
+void SfxObjectShell::SetConfigOptionsChecked( sal_Bool bChecked )
+{
+	pImp->m_bConfigOptionsChecked = bChecked;
+}
+
 sal_Bool SfxObjectShell::QuerySaveSizeExceededModules_Impl( const uno::Reference< task::XInteractionHandler >& xHandler )
 {
     if ( !HasBasic() )
diff --git sfx2/source/doc/objxtor.cxx sfx2/source/doc/objxtor.cxx
index fb43eaf..3ed6815 100644
--- sfx2/source/doc/objxtor.cxx
+++ sfx2/source/doc/objxtor.cxx
@@ -272,6 +272,7 @@ SfxObjectShell_Impl::SfxObjectShell_Impl( SfxObjectShell& _rDocShell )
     ,bSaveVersionOnClose( sal_False )
     ,m_bSharedXMLFlag( sal_False )
     ,m_bAllowShareControlFileClean( sal_True )
+    ,m_bConfigOptionsChecked( sal_True )
     ,lErr(ERRCODE_NONE)
     ,nEventId ( 0)
     ,bDoNotTouchDocInfo( sal_False )
diff --git sfx2/source/inc/objshimp.hxx sfx2/source/inc/objshimp.hxx
index 8ee3b79..d0099b4 100644
--- sfx2/source/inc/objshimp.hxx
+++ sfx2/source/inc/objshimp.hxx
@@ -120,7 +120,8 @@ struct SfxObjectShell_Impl : public ::sfx2::IMacroDocumentAccess
                         bUseUserData:1,
                         bSaveVersionOnClose:1,
                         m_bSharedXMLFlag:1, // whether the flag should be stored in xml file
-                        m_bAllowShareControlFileClean:1; // whether the flag should be stored in xml file
+                        m_bAllowShareControlFileClean:1, // whether the flag should be stored in xml file
+                        m_bConfigOptionsChecked:1; // whether or not the user options are checked after the Options dialog is closed.
 
     String              aNewName;  // Der Name, unter dem das Doc gespeichert
                                    // werden soll
