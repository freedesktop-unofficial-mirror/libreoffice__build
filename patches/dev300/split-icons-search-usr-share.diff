--- vcl/source/gdi/impimagetree.cxx.old	2008-06-16 16:29:33.000000000 +0200
+++ vcl/source/gdi/impimagetree.cxx	2008-07-02 21:04:02.000000000 +0200
@@ -105,6 +105,19 @@ void ImplZipAccessor::Update( const ::rt
     rtl::Bootstrap::expandMacros( aBrandPath );
     rtl::Bootstrap::expandMacros( aOOOPath );
 
+    // try /usr/share
+    ::rtl::OUString aDataDir = ::rtl::OUString::createFromAscii ( "/usr/share/" );
+#ifdef X86_64
+    ::rtl::OUString aLibDir = ::rtl::OUString::createFromAscii ( "/usr/lib64/" );
+#else
+    ::rtl::OUString aLibDir = ::rtl::OUString::createFromAscii ( "/usr/lib/" );
+#endif
+
+    rtl::OUString aOOOPathInShare;
+    sal_Int32 nLibDirPos = aOOOPath.indexOf( aLibDir );
+    if ( nLibDirPos >= 0 )
+	aOOOPathInShare = aOOOPath.replaceAt( nLibDirPos, aLibDir.getLength(), aDataDir );
+
     // Theme Branding Zip
     if( rSymbolsStyle.getLength() )
     {
@@ -120,6 +133,8 @@ void ImplZipAccessor::Update( const ::rt
             aTmpURLVector.push_back( aThemeBrandURL.GetMainURL( INetURLObject::NO_DECODE ) );
     }
 
+
+
     // Branding Zip
     INetURLObject   aBrandURL( aBrandPath );
     ::rtl::OUString aBrandZip( aZipFileName );
@@ -135,27 +150,35 @@ void ImplZipAccessor::Update( const ::rt
     if( rSymbolsStyle.getLength() )
     {
         INetURLObject   aThemeURL( aOOOPath );
+        INetURLObject   aThemeInShareURL( aOOOPathInShare );
         ::rtl::OUString aThemeZip( aZipFileName );
 
         ( aThemeZip += ::rtl::OUString::createFromAscii( "_" ) ) += rSymbolsStyle;
         aThemeZip += ::rtl::OUString::createFromAscii( IMAGES_ZIPFILENAME_SUFFIX );
         aThemeURL.Append( aThemeZip );
+        aThemeInShareURL.Append( aThemeZip );
 
         if( mxFileAccess->exists( aThemeURL.GetMainURL( INetURLObject::NO_DECODE ) ) )
             aTmpURLVector.push_back( aThemeURL.GetMainURL( INetURLObject::NO_DECODE ) );
+        if( mxFileAccess->exists( aThemeInShareURL.GetMainURL( INetURLObject::NO_DECODE ) ) )
+            aTmpURLVector.push_back( aThemeInShareURL.GetMainURL( INetURLObject::NO_DECODE ) );
     }
 
     // Default Zip
     if( rSymbolsStyle.getLength() )
     {
         INetURLObject   aDefaultURL( aOOOPath );
+        INetURLObject   aDefaultInShareURL( aOOOPath );
         ::rtl::OUString aDefaultZip( aZipFileName );
 
         aDefaultZip += ::rtl::OUString::createFromAscii( IMAGES_ZIPFILENAME_SUFFIX );
         aDefaultURL.Append( aDefaultZip );
+        aDefaultInShareURL.Append( aDefaultZip );
 
         if( mxFileAccess->exists( aDefaultURL.GetMainURL( INetURLObject::NO_DECODE ) ) )
             aTmpURLVector.push_back( aDefaultURL.GetMainURL( INetURLObject::NO_DECODE ) );
+        if( mxFileAccess->exists( aDefaultInShareURL.GetMainURL( INetURLObject::NO_DECODE ) ) )
+            aTmpURLVector.push_back( aDefaultInShareURL.GetMainURL( INetURLObject::NO_DECODE ) );
     }
 
     if( xFactory.is() )
--- xmlhelp/source/cxxhelp/provider/provider.cxx.old	2008-07-02 11:35:38.000000000 +0200
+++ xmlhelp/source/cxxhelp/provider/provider.cxx	2008-08-14 18:27:47.000000000 +0200
@@ -348,7 +348,7 @@ void ContentProvider::init()
         setupextension );
 	rtl::OUString vendorshort = vendorname;
 	
-    uno::Sequence< rtl::OUString > aImagesZipPaths( 2 );
+    uno::Sequence< rtl::OUString > aImagesZipPaths( 3 );
     xHierAccess = getHierAccess( sProvider,	 "org.openoffice.Office.Common" );
 	
     rtl::OUString aPath( getKey( xHierAccess, "Path/Current/UserConfig" ) );
@@ -357,6 +357,19 @@ void ContentProvider::init()
 
 	aPath = rtl::OUString(RTL_CONSTASCII_USTRINGPARAM("$OOO_BASE_DIR/share/config"));
 	rtl::Bootstrap::expandMacros(aPath);
+    aImagesZipPaths[ 2 ] = aPath;
+
+    // try also /usr/share and even before /usr/lib
+    ::rtl::OUString aDataDir = ::rtl::OUString::createFromAscii ( "/usr/share/" ); 
+#ifdef X86_64 
+    ::rtl::OUString aLibDir = ::rtl::OUString::createFromAscii ( "/usr/lib64/" ); 
+#else 
+    ::rtl::OUString aLibDir = ::rtl::OUString::createFromAscii ( "/usr/lib/" ); 
+#endif 
+    sal_Int32 nLibDirPos = aPath.indexOf( aLibDir ); 
+ 
+    if ( nLibDirPos >= 0 ) 
+	aPath = aPath.replaceAt( nLibDirPos, aLibDir.getLength(), aDataDir ); 
     aImagesZipPaths[ 1 ] = aPath;
 
 	uno::Reference< uno::XComponentContext > xContext;
