--- sc/inc/column.hxx.old	2010-03-03 16:59:11.000000000 +0100
+++ sc/inc/column.hxx	2010-03-03 16:59:12.000000000 +0100
@@ -306,6 +306,7 @@ public:
     const ScPatternAttr*    GetMostUsedPattern( SCROW nStartRow, SCROW nEndRow ) const;
 
     ULONG		GetNumberFormat( SCROW nRow ) const;
+    sal_uInt32  GetNumberFormat( SCROW nStartRow, SCROW nEndRow ) const;
 
     void		MergeSelectionPattern( ScMergePatternState& rState, const ScMarkData& rMark, BOOL bDeep ) const;
     void		MergePatternArea( ScMergePatternState& rState, SCROW nRow1, SCROW nRow2, BOOL bDeep ) const;
--- sc/inc/document.hxx.old	2010-03-03 16:59:11.000000000 +0100
+++ sc/inc/document.hxx	2010-03-03 16:59:12.000000000 +0100
@@ -748,6 +748,7 @@ public:
     SC_DLLPUBLIC double			RoundValueAsShown( double fVal, ULONG nFormat );
     SC_DLLPUBLIC void			GetNumberFormat( SCCOL nCol, SCROW nRow, SCTAB nTab,
                                      sal_uInt32& rFormat );
+    sal_uInt32      GetNumberFormat( const ScRange& rRange ) const;
     SC_DLLPUBLIC sal_uInt32		GetNumberFormat( const ScAddress& ) const;
                     /** If no number format attribute is set and the cell
                         pointer passed is of type formula cell, the calculated
--- sc/inc/table.hxx.old	2010-03-03 16:59:11.000000000 +0100
+++ sc/inc/table.hxx	2010-03-03 16:59:12.000000000 +0100
@@ -484,6 +484,7 @@ public:
                                         0;
                                 }
     ULONG					GetNumberFormat( SCCOL nCol, SCROW nRow ) const;
+    sal_uInt32              GetNumberFormat( SCCOL nCol, SCROW nStartRow, SCROW nEndRow ) const;
     void					MergeSelectionPattern( ScMergePatternState& rState,
                                                 const ScMarkData& rMark, BOOL bDeep ) const;
     void					MergePatternArea( ScMergePatternState& rState, SCCOL nCol1, SCROW nRow1,
--- sc/sdi/formatsh.sdi.old	2009-10-07 15:06:14.000000000 +0200
+++ sc/sdi/formatsh.sdi	2010-03-03 16:59:12.000000000 +0100
@@ -120,11 +120,11 @@ interface FormatForSelection
     SID_ATTR_NUMBERFORMAT_VALUE       [ ExecMethod = ExecuteNumFormat; StateMethod = GetNumFormatState;]
     SID_NUMBER_FORMAT       [ ExecMethod = ExecuteNumFormat; StateMethod = GetNumFormatState;]
     SID_NUMBER_TWODEC		[ ExecMethod = ExecuteNumFormat;]
-    SID_NUMBER_SCIENTIFIC	[ ExecMethod = ExecuteNumFormat;]
-    SID_NUMBER_DATE			[ ExecMethod = ExecuteNumFormat;]
-    SID_NUMBER_CURRENCY		[ ExecMethod = ExecuteNumFormat;]
-    SID_NUMBER_PERCENT		[ ExecMethod = ExecuteNumFormat;]
-    SID_NUMBER_TIME			[ ExecMethod = ExecuteNumFormat;]
+    SID_NUMBER_SCIENTIFIC   [ ExecMethod = ExecuteNumFormat; StateMethod = GetNumFormatState; ]
+    SID_NUMBER_DATE         [ ExecMethod = ExecuteNumFormat; StateMethod = GetNumFormatState; ]
+    SID_NUMBER_CURRENCY     [ ExecMethod = ExecuteNumFormat; StateMethod = GetNumFormatState; ]
+    SID_NUMBER_PERCENT      [ ExecMethod = ExecuteNumFormat; StateMethod = GetNumFormatState; ]
+    SID_NUMBER_TIME         [ ExecMethod = ExecuteNumFormat; StateMethod = GetNumFormatState; ]
     SID_NUMBER_STANDARD		[ ExecMethod = ExecuteNumFormat;]
     SID_NUMBER_INCDEC		[ ExecMethod = ExecuteNumFormat;]
     SID_NUMBER_DECDEC		[ ExecMethod = ExecuteNumFormat;]
--- sc/source/core/data/column.cxx.old	2010-03-03 16:59:11.000000000 +0100
+++ sc/source/core/data/column.cxx	2010-03-03 16:59:12.000000000 +0100
@@ -357,6 +357,22 @@ const ScPatternAttr* ScColumn::GetMostUs
     return pMaxPattern;
 }
 
+sal_uInt32 ScColumn::GetNumberFormat( SCROW nStartRow, SCROW nEndRow ) const
+{
+    SCROW nPatStartRow, nPatEndRow;
+    const ScPatternAttr* pPattern = pAttrArray->GetPatternRange(nPatStartRow, nPatEndRow, nStartRow);
+    sal_uInt32 nFormat = pPattern->GetNumberFormat(pDocument->GetFormatTable());
+    while (nEndRow > nPatEndRow)
+    {
+        nStartRow = nPatEndRow + 1;
+        pPattern = pAttrArray->GetPatternRange(nPatStartRow, nPatEndRow, nStartRow);
+        sal_uInt32 nTmpFormat = pPattern->GetNumberFormat(pDocument->GetFormatTable());
+        if (nFormat != nTmpFormat)
+            return 0;
+    }
+    return nFormat;
+}
+
 
 ULONG ScColumn::GetNumberFormat( SCROW nRow ) const
 {
--- sc/source/core/data/document.cxx.old	2010-03-03 16:59:11.000000000 +0100
+++ sc/source/core/data/document.cxx	2010-03-03 16:59:12.000000000 +0100
@@ -2680,6 +2680,32 @@ void ScDocument::GetNumberFormat( SCCOL
     rFormat = 0;
 }
 
+sal_uInt32 ScDocument::GetNumberFormat( const ScRange& rRange ) const
+{
+    SCTAB nTab1 = rRange.aStart.Tab(), nTab2 = rRange.aEnd.Tab();
+    SCCOL nCol1 = rRange.aStart.Col(), nCol2 = rRange.aEnd.Col();
+    SCROW nRow1 = rRange.aStart.Row(), nRow2 = rRange.aEnd.Row();
+
+    if (!ValidTab(nTab1) || !ValidTab(nTab2) || !pTab[nTab1] || !pTab[nTab2])
+        return 0;
+
+    sal_uInt32 nFormat = 0;
+    bool bFirstItem = true;
+    for (SCTAB nTab = nTab1; nTab <= nTab2; ++nTab)
+        for (SCCOL nCol = nCol1; nCol <= nCol2; ++nCol)
+        {
+            sal_uInt32 nThisFormat = pTab[nTab]->GetNumberFormat(nCol, nRow1, nRow2);
+            if (bFirstItem)
+            {
+                nFormat = nThisFormat;
+                bFirstItem = false;
+            }
+            else if (nThisFormat != nFormat)
+                return 0;
+        }
+
+    return nFormat;
+}
 
 sal_uInt32 ScDocument::GetNumberFormat( const ScAddress& rPos ) const
 {
--- sc/source/core/data/table2.cxx.old	2010-03-03 16:59:11.000000000 +0100
+++ sc/source/core/data/table2.cxx	2010-03-03 16:59:12.000000000 +0100
@@ -1171,6 +1171,14 @@ ULONG ScTable::GetNumberFormat( SCCOL nC
         return 0;
 }
 
+sal_uInt32 ScTable::GetNumberFormat( SCCOL nCol, SCROW nStartRow, SCROW nEndRow ) const
+{
+    if (!ValidCol(nCol) || !ValidRow(nStartRow) || !ValidRow(nEndRow))
+        return 0;
+ 
+    return aCol[nCol].GetNumberFormat(nStartRow, nEndRow);
+}
+
 
 const ScPatternAttr* ScTable::GetPattern( SCCOL nCol, SCROW nRow ) const
 {
--- sc/source/ui/inc/formatsh.hxx.old	2009-10-07 15:06:14.000000000 +0200
+++ sc/source/ui/inc/formatsh.hxx	2010-03-03 16:59:12.000000000 +0100
@@ -77,6 +77,9 @@ public:
 
     void        ExecFormatPaintbrush( SfxRequest& rReq );
     void        StateFormatPaintbrush( SfxItemSet& rSet );
+
+private:
+    short       GetCurrentNumberFormatType();
 };
 
 #endif
--- sc/source/ui/view/formatsh.cxx.old	2009-10-08 16:17:09.000000000 +0200
+++ sc/source/ui/view/formatsh.cxx	2010-03-03 16:59:12.000000000 +0100
@@ -58,6 +58,7 @@
 
 #include <sfx2/app.hxx>
 #include <sfx2/viewfrm.hxx>
+#include <sfx2/bindings.hxx>
 #include <sfx2/objface.hxx>
 #include <sfx2/request.hxx>
 #include <svtools/whiter.hxx>
@@ -924,6 +925,7 @@ void ScFormatShell::ExecuteNumFormat( Sf
     ScTabViewShell*	pTabViewShell  	= GetViewData()->GetViewShell();
     const SfxItemSet*	pReqArgs	= rReq.GetArgs();
     USHORT				nSlot		= rReq.GetSlot();
+    SfxBindings& rBindings          = pTabViewShell->GetViewFrame()->GetBindings();
 
     pTabViewShell->HideListBox();					// Autofilter-DropDown-Listbox
 
@@ -956,6 +958,8 @@ void ScFormatShell::ExecuteNumFormat( Sf
         }
     }
 
+    short nType = GetCurrentNumberFormatType();
+    SfxItemSet aSet( GetPool(), nSlot, nSlot );
     switch ( nSlot )
     {
         case SID_NUMBER_TWODEC:
@@ -963,23 +967,48 @@ void ScFormatShell::ExecuteNumFormat( Sf
             rReq.Done();
             break;
         case SID_NUMBER_SCIENTIFIC:
-            pTabViewShell->SetNumberFormat( NUMBERFORMAT_SCIENTIFIC );
+            if ((nType & NUMBERFORMAT_SCIENTIFIC))
+                pTabViewShell->SetNumberFormat( NUMBERFORMAT_NUMBER );
+            else
+                pTabViewShell->SetNumberFormat( NUMBERFORMAT_SCIENTIFIC );
+            aSet.Put( SfxBoolItem(nSlot, !(nType & NUMBERFORMAT_SCIENTIFIC)) );
+            rBindings.Invalidate( nSlot );
             rReq.Done();
             break;
         case SID_NUMBER_DATE:
-            pTabViewShell->SetNumberFormat( NUMBERFORMAT_DATE );
+            if ((nType & NUMBERFORMAT_DATE))
+                pTabViewShell->SetNumberFormat( NUMBERFORMAT_NUMBER );
+            else
+                pTabViewShell->SetNumberFormat( NUMBERFORMAT_DATE );
+            aSet.Put( SfxBoolItem(nSlot, !(nType & NUMBERFORMAT_DATE)) );
+            rBindings.Invalidate( nSlot );
             rReq.Done();
             break;
         case SID_NUMBER_TIME:
-            pTabViewShell->SetNumberFormat( NUMBERFORMAT_TIME );
+            if ((nType & NUMBERFORMAT_TIME))
+                pTabViewShell->SetNumberFormat( NUMBERFORMAT_NUMBER );
+            else
+                pTabViewShell->SetNumberFormat( NUMBERFORMAT_TIME );
+            aSet.Put( SfxBoolItem(nSlot, !(nType & NUMBERFORMAT_TIME)) );
+            rBindings.Invalidate( nSlot );
             rReq.Done();
             break;
         case SID_NUMBER_CURRENCY:
-            pTabViewShell->SetNumberFormat( NUMBERFORMAT_CURRENCY );
+            if ((nType & NUMBERFORMAT_CURRENCY))
+                pTabViewShell->SetNumberFormat( NUMBERFORMAT_NUMBER );
+            else
+                pTabViewShell->SetNumberFormat( NUMBERFORMAT_CURRENCY );
+            aSet.Put( SfxBoolItem(nSlot, !(nType & NUMBERFORMAT_CURRENCY)) );
+            rBindings.Invalidate( nSlot );
             rReq.Done();
             break;
         case SID_NUMBER_PERCENT:
-            pTabViewShell->SetNumberFormat( NUMBERFORMAT_PERCENT );
+            if ((nType & NUMBERFORMAT_PERCENT))
+                pTabViewShell->SetNumberFormat( NUMBERFORMAT_NUMBER );
+            else
+                pTabViewShell->SetNumberFormat( NUMBERFORMAT_PERCENT );
+            aSet.Put( SfxBoolItem(nSlot, !(nType & NUMBERFORMAT_PERCENT)) );
+            rBindings.Invalidate( nSlot );
             rReq.Done();
             break;
         case SID_NUMBER_STANDARD:
@@ -1985,9 +2014,8 @@ void ScFormatShell::GetAlignState( SfxIt
 void ScFormatShell::GetNumFormatState( SfxItemSet& rSet )
 {
     ScTabViewShell*	pTabViewShell  	= GetViewData()->GetViewShell();
-
-    // ScViewData* pViewData   = GetViewData();
-    ScDocument* pDoc		= pViewData->GetDocument();
+    ScDocument* pDoc                = pViewData->GetDocument();
+    short nType                     = GetCurrentNumberFormatType();
 
     SfxWhichIter aIter(rSet);
     USHORT nWhich = aIter.FirstWhich();
@@ -2014,7 +2042,21 @@ void ScFormatShell::GetNumFormatState( S
                     rSet.Put( SfxStringItem( nWhich, aFormatCode ) );
                 }
                 break;
-
+            case SID_NUMBER_SCIENTIFIC:
+                rSet.Put( SfxBoolItem(nWhich, (nType & NUMBERFORMAT_SCIENTIFIC)) );
+                break;
+            case SID_NUMBER_DATE:
+                rSet.Put( SfxBoolItem(nWhich, (nType & NUMBERFORMAT_DATE)) );
+                break;
+            case SID_NUMBER_CURRENCY:
+                rSet.Put( SfxBoolItem(nWhich, (nType & NUMBERFORMAT_CURRENCY)) );
+                break;
+            case SID_NUMBER_PERCENT: 
+                rSet.Put( SfxBoolItem(nWhich, (nType & NUMBERFORMAT_PERCENT)) );
+                break;
+            case SID_NUMBER_TIME:  
+                rSet.Put( SfxBoolItem(nWhich, (nType & NUMBERFORMAT_TIME)) );
+                break;
         }
         nWhich = aIter.NextWhich();
     }
@@ -2165,3 +2207,68 @@ void ScFormatShell::StateFormatPaintbrus
         rSet.Put( SfxBoolItem( SID_FORMATPAINTBRUSH, pViewData->GetView()->HasPaintBrush() ) );
 }
 
+short ScFormatShell::GetCurrentNumberFormatType() 
+{
+    short nType = NUMBERFORMAT_ALL;
+    ScDocument* pDoc = GetViewData()->GetDocument();   
+    ScMarkData aMark(GetViewData()->GetMarkData());
+    const SvNumberFormatter* pFormatter = pDoc->GetFormatTable();
+    if (!pFormatter)
+        return nType;
+
+    // TODO: Find out how to get a selected table range in case multiple tables 
+    // are selected.  Currently we only check for the current active table.
+
+    if ( aMark.IsMarked() || aMark.IsMultiMarked() )
+    {
+        aMark.MarkToMulti();
+        ScRange aRange;
+        aMark.GetMultiMarkArea(aRange);
+
+        const ScMarkArray* pArray = aMark.GetArray();
+        if (!pArray)
+            return nType;
+
+        short nComboType = NUMBERFORMAT_ALL;
+        bool bFirstItem = true;
+        for (SCCOL nCol = aRange.aStart.Col(); nCol <= aRange.aEnd.Col(); ++nCol)
+        {
+            const ScMarkArray& rColArray = pArray[nCol];
+            if (!rColArray.HasMarks())
+                continue;
+
+            SCROW nRow1, nRow2;
+            ScMarkArrayIter aMarkIter(&rColArray);
+            while (aMarkIter.Next(nRow1, nRow2))
+            {
+                ScRange aColRange(nCol, nRow1, aRange.aStart.Tab());
+                aColRange.aEnd.SetRow(nRow2);
+                sal_uInt32 nNumFmt = pDoc->GetNumberFormat(aColRange);
+                const SvNumberformat* pEntry = pFormatter->GetEntry(nNumFmt);
+                if (!pEntry)
+                    return 0;
+
+                short nThisType = pEntry->GetType();
+                if (bFirstItem)
+                {
+                    bFirstItem = false;
+                    nComboType = nThisType;
+                }
+                else if (nComboType != nThisType)
+                    // mixed number format type.
+                    return NUMBERFORMAT_ALL;
+            }
+        }
+        nType = nComboType;
+    }
+    else
+    {    
+        sal_uInt32 nNumFmt;
+        pDoc->GetNumberFormat( pViewData->GetCurX(), pViewData->GetCurY(), 
+                               pViewData->GetTabNo(), nNumFmt );
+        const SvNumberformat* pEntry = pFormatter->GetEntry( nNumFmt );
+        nType = pEntry ? pEntry->GetType() : 0;
+    }
+    return nType;
+}
+
--- sc/source/ui/view/tabview3.cxx.old	2010-03-03 16:44:04.000000000 +0100
+++ sc/source/ui/view/tabview3.cxx	2010-03-03 16:59:12.000000000 +0100
@@ -267,6 +267,13 @@ void ScTabView::InvalidateAttribs()
     rBindings.Invalidate( SID_ALIGN_ANY_VCENTER );
     rBindings.Invalidate( SID_ALIGN_ANY_BOTTOM );
 
+    rBindings.Invalidate( SID_NUMBER_CURRENCY );
+    rBindings.Invalidate( SID_NUMBER_SCIENTIFIC );
+    rBindings.Invalidate( SID_NUMBER_DATE );
+    rBindings.Invalidate( SID_NUMBER_CURRENCY );
+    rBindings.Invalidate( SID_NUMBER_PERCENT );
+    rBindings.Invalidate( SID_NUMBER_TIME );
+
 //	rBindings.Invalidate( SID_RANGE_VALUE );
 //	rBindings.Invalidate( SID_RANGE_FORMULA );
 }
--- sc/uiconfig/scalc/toolbar/formatobjectbar.xml.old	2009-10-07 15:06:15.000000000 +0200
+++ sc/uiconfig/scalc/toolbar/formatobjectbar.xml	2010-03-03 16:59:12.000000000 +0100
@@ -33,7 +33,7 @@
  <toolbar:toolbaritem xlink:href=".uno:NumberFormatPercent" toolbar:helpid="helpid:26046"  />
  <toolbar:toolbaritem xlink:href=".uno:NumberFormatDate" toolbar:helpid="helpid:26053"  toolbar:visible="false" />
  <toolbar:toolbaritem xlink:href=".uno:NumberFormatScientific" toolbar:helpid="helpid:26055"  toolbar:visible="false" />
- <toolbar:toolbaritem xlink:href=".uno:NumberFormatStandard" toolbar:helpid="helpid:26052"  />
+ <toolbar:toolbaritem xlink:href=".uno:NumberFormatStandard" toolbar:helpid="helpid:26052"  toolbar:visible="false" />
  <toolbar:toolbaritem xlink:href=".uno:NumberFormatIncDecimals" toolbar:helpid="helpid:26057"  />
  <toolbar:toolbaritem xlink:href=".uno:NumberFormatDecDecimals" toolbar:helpid="helpid:26058"  />
  <toolbar:toolbarseparator/>
