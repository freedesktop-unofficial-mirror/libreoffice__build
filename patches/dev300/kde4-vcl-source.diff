diff --git vcl/unx/kde4/KDEData.cxx vcl/unx/kde4/KDEData.cxx
new file mode 100644
index 0000000..2b1f5bc
--- /dev/null
+++ vcl/unx/kde4/KDEData.cxx
@@ -0,0 +1,52 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include "KDEData.hxx"
+
+#include "KDEXLib.hxx"
+
+KDEData::~KDEData()
+{
+}
+
+void KDEData::Init()
+{
+    pXLib_ = new KDEXLib();
+    pXLib_->Init();
+}
+
+void KDEData::initNWF()
+{
+    ImplSVData *pSVData = ImplGetSVData();
+	
+    // draw toolbars on separate lines
+    pSVData->maNWFData.mbDockingAreaSeparateTB = true;
+}
+
+void KDEData::deInitNWF()
+{
+}
\ No newline at end of file
diff --git vcl/unx/kde4/KDEData.hxx vcl/unx/kde4/KDEData.hxx
new file mode 100644
index 0000000..71dedbc
--- /dev/null
+++ vcl/unx/kde4/KDEData.hxx
@@ -0,0 +1,42 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#pragma once
+
+#include <saldisp.hxx>
+#include <saldata.hxx>
+
+class KDEData : public X11SalData
+{
+	public:
+		KDEData() {}
+		virtual ~KDEData();
+		
+		virtual void Init();
+		virtual void initNWF();
+		virtual void deInitNWF();
+};
\ No newline at end of file
diff --git vcl/unx/kde4/KDESalDisplay.cxx vcl/unx/kde4/KDESalDisplay.cxx
new file mode 100644
index 0000000..16f128b
--- /dev/null
+++ vcl/unx/kde4/KDESalDisplay.cxx
@@ -0,0 +1,45 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include "KDESalDisplay.hxx"
+
+#include "KDEXLib.hxx"
+
+SalKDEDisplay::SalKDEDisplay( Display* pDisp )
+    : SalX11Display( pDisp )
+{
+}
+
+SalKDEDisplay::~SalKDEDisplay()
+{
+    // in case never a frame opened
+    static_cast<KDEXLib*>(GetXLib())->doStartup();
+    // clean up own members
+    doDestruct();
+    // prevent SalDisplay from closing KApplication's display
+    pDisp_ = NULL;
+}
\ No newline at end of file
diff --git vcl/unx/kde4/KDESalDisplay.hxx vcl/unx/kde4/KDESalDisplay.hxx
new file mode 100644
index 0000000..aa81804
--- /dev/null
+++ vcl/unx/kde4/KDESalDisplay.hxx
@@ -0,0 +1,37 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#pragma once
+
+#include <saldisp.hxx>
+
+class SalKDEDisplay : public SalX11Display
+{
+	public:
+		SalKDEDisplay( Display* pDisp );
+			virtual ~SalKDEDisplay();
+};
diff --git vcl/unx/kde4/KDESalFrame.cxx vcl/unx/kde4/KDESalFrame.cxx
new file mode 100644
index 0000000..c8bccc8
--- /dev/null
+++ vcl/unx/kde4/KDESalFrame.cxx
@@ -0,0 +1,409 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#define Region QtXRegion
+
+#include <QColor>
+#include <QStyle>
+
+#include <kconfig.h>
+#include <kglobal.h>
+#include <kmenubar.h>
+#include <kconfiggroup.h>
+#include <kmainwindow.h>
+#include <kapplication.h>
+#include <ktoolbar.h>
+
+#undef Region
+
+#include "KDESalFrame.hxx"
+#include "KDEXLib.hxx"
+#include "KDESalGraphics.hxx"
+
+#include <vcl/settings.hxx>
+#include <vcl/font.hxx>
+#include <tools/color.hxx>
+
+#include <vcl/svdata.hxx>
+
+#include <pspgraphics.h>
+
+#if OSL_DEBUG_LEVEL > 1
+#include <stdio.h>
+#endif
+
+KDESalFrame::KDESalFrame( SalFrame* pParent, ULONG nState ) :
+    X11SalFrame( pParent, nState )
+{
+}
+
+void KDESalFrame::Show( BOOL bVisible, BOOL bNoActivate )
+{
+    if ( !GetParent() && ! (GetStyle() & SAL_FRAME_STYLE_INTRO) )
+    {
+        KDEXLib* pXLib = static_cast<KDEXLib*>(GetDisplay()->GetXLib());
+        pXLib->doStartup();
+    }
+	
+    X11SalFrame::Show( bVisible, bNoActivate );
+}
+
+/** Helper function to convert colors.
+*/
+static Color toColor( const QColor &rColor )
+{
+    return Color( rColor.red(), rColor.green(), rColor.blue() );
+}
+
+/** Helper function to read untranslated text entry from KConfig configuration repository.
+*/
+static OUString readEntryUntranslated( KConfigGroup *pGroup, const char *pKey )
+{
+    return OUString::createFromAscii( (const char *) pGroup->readEntryUntranslated( pKey ).toAscii() );
+}
+
+/** Helper function to read color from KConfig configuration repository.
+*/
+static Color readColor( KConfigGroup *pGroup, const char *pKey )
+{
+    return toColor( pGroup->readEntry( pKey, QColor(Qt::white) ) );
+}
+
+/** Helper function to add information to Font from QFont.
+
+    Mostly grabbed from the Gtk+ vclplug (salnativewidgets-gtk.cxx).
+*/
+static Font toFont( const QFont &rQFont, const ::com::sun::star::lang::Locale& rLocale )
+{
+    psp::FastPrintFontInfo aInfo;
+    QFontInfo qFontInfo( rQFont );
+    
+    // set family name
+    aInfo.m_aFamilyName = String( (const char *) rQFont.family().toUtf8(), RTL_TEXTENCODING_UTF8 );
+
+    // set italic
+    aInfo.m_eItalic = ( qFontInfo.italic()? psp::italic::Italic: psp::italic::Upright );
+    
+    // set weight
+    int nWeight = qFontInfo.weight();
+    if ( nWeight <= QFont::Light )
+        aInfo.m_eWeight = psp::weight::Light;
+    else if ( nWeight <= QFont::Normal )
+        aInfo.m_eWeight = psp::weight::Normal;
+    else if ( nWeight <= QFont::DemiBold )
+        aInfo.m_eWeight = psp::weight::SemiBold;
+    else if ( nWeight <= QFont::Bold )
+        aInfo.m_eWeight = psp::weight::Bold;
+    else
+        aInfo.m_eWeight = psp::weight::UltraBold;
+    
+    // set width
+    int nStretch = rQFont.stretch();
+    if ( nStretch <= QFont::UltraCondensed )
+        aInfo.m_eWidth = psp::width::UltraCondensed;
+    else if ( nStretch <= QFont::ExtraCondensed )
+        aInfo.m_eWidth = psp::width::ExtraCondensed;
+    else if ( nStretch <= QFont::Condensed )
+        aInfo.m_eWidth = psp::width::Condensed;
+    else if ( nStretch <= QFont::SemiCondensed )
+        aInfo.m_eWidth = psp::width::SemiCondensed;
+    else if ( nStretch <= QFont::Unstretched )
+        aInfo.m_eWidth = psp::width::Normal;
+    else if ( nStretch <= QFont::SemiExpanded )
+        aInfo.m_eWidth = psp::width::SemiExpanded;
+    else if ( nStretch <= QFont::Expanded )
+        aInfo.m_eWidth = psp::width::Expanded;
+    else if ( nStretch <= QFont::ExtraExpanded )
+        aInfo.m_eWidth = psp::width::ExtraExpanded;
+    else
+        aInfo.m_eWidth = psp::width::UltraExpanded;
+    
+#if OSL_DEBUG_LEVEL > 1
+    fprintf( stderr, "font name BEFORE system match: \"%s\"\n", OUStringToOString( aInfo.m_aFamilyName, RTL_TEXTENCODING_ISO_8859_1 ).getStr() );
+#endif
+
+    // match font to e.g. resolve "Sans"
+    psp::PrintFontManager::get().matchFont( aInfo, rLocale );
+
+#if OSL_DEBUG_LEVEL > 1
+    fprintf( stderr, "font match %s, name AFTER: \"%s\"\n",
+             aInfo.m_nID != 0 ? "succeeded" : "failed",
+             OUStringToOString( aInfo.m_aFamilyName, RTL_TEXTENCODING_ISO_8859_1 ).getStr() );
+#endif
+
+    // font height
+    int nPointHeight = qFontInfo.pointSize();
+    if ( nPointHeight <= 0 )
+        nPointHeight = rQFont.pointSize();
+    
+    // Create the font
+    Font aFont( aInfo.m_aFamilyName, Size( 0, nPointHeight ) );
+    if( aInfo.m_eWeight != psp::weight::Unknown )
+        aFont.SetWeight( PspGraphics::ToFontWeight( aInfo.m_eWeight ) );
+    if( aInfo.m_eWidth != psp::width::Unknown )
+        aFont.SetWidthType( PspGraphics::ToFontWidth( aInfo.m_eWidth ) );
+    if( aInfo.m_eItalic != psp::italic::Unknown )
+        aFont.SetItalic( PspGraphics::ToFontItalic( aInfo.m_eItalic ) );
+    if( aInfo.m_ePitch != psp::pitch::Unknown )
+        aFont.SetPitch( PspGraphics::ToFontPitch( aInfo.m_ePitch ) );
+
+    return aFont;
+}
+
+/** Implementation of KDE integration's main method.
+*/
+void KDESalFrame::UpdateSettings( AllSettings& rSettings )
+{
+    StyleSettings style( rSettings.GetStyleSettings() );
+	BOOL bSetTitleFont = false;
+
+	
+	// General settings
+    QPalette pal = kapp->palette();
+	
+	style.SetActiveColor(toColor(pal.color(QPalette::Active, QPalette::Window)));
+	style.SetDeactiveColor(toColor(pal.color(QPalette::Inactive, QPalette::Window)));
+	
+	style.SetActiveColor2(toColor(pal.color(QPalette::Active, QPalette::Window)));
+	style.SetDeactiveColor2(toColor(pal.color(QPalette::Inactive, QPalette::Window)));
+	
+	style.SetActiveTextColor(toColor(pal.color(QPalette::Active, QPalette::WindowText)));
+	style.SetDeactiveTextColor(toColor(pal.color(QPalette::Inactive, QPalette::WindowText)));
+	
+    // WM settings
+    KConfig *pConfig = KGlobal::config().data();
+    if ( pConfig )
+    {
+        KConfigGroup aGroup = pConfig->group( "WM" );
+        const char *pKey;
+		
+        pKey = "titleFont";
+        if ( aGroup.hasKey( pKey ) )
+        {
+            Font aFont = toFont( aGroup.readEntry( pKey, QFont() ), rSettings.GetUILocale() );
+            style.SetTitleFont( aFont );
+			bSetTitleFont = true;
+        }
+		
+        aGroup = pConfig->group( "Icons" );
+
+        pKey = "Theme";
+        if ( aGroup.hasKey( pKey ) )
+            style.SetPreferredSymbolsStyleName( readEntryUntranslated( &aGroup, pKey ) );
+    }
+	
+    Color aFore = toColor( pal.color( QPalette::Active, QPalette::WindowText ) );
+    Color aBack = toColor( pal.color( QPalette::Active, QPalette::Window ) );
+    Color aText = toColor( pal.color( QPalette::Active, QPalette::Text ) );
+    Color aBase = toColor( pal.color( QPalette::Active, QPalette::Base ) );
+    Color aButn = toColor( pal.color( QPalette::Active, QPalette::ButtonText ) );
+    Color aMid = toColor( pal.color( QPalette::Active, QPalette::Mid ) );
+    Color aHigh = toColor( pal.color( QPalette::Active, QPalette::Highlight ) );
+
+    // Foreground
+    style.SetRadioCheckTextColor( aFore );
+    style.SetLabelTextColor( aFore );
+    style.SetInfoTextColor( aFore );
+    style.SetDialogTextColor( aFore );
+    style.SetGroupTextColor( aFore );
+
+    // Text
+    style.SetFieldTextColor( aText );
+    style.SetFieldRolloverTextColor( aText );
+    style.SetWindowTextColor( aText );
+    style.SetHelpTextColor( aText );
+
+    // Base
+    style.SetFieldColor( aBase );
+    style.SetHelpColor( aBase );
+    style.SetWindowColor( aBase );
+    style.SetActiveTabColor( aBase );
+    
+    // Buttons
+    style.SetButtonTextColor( aButn );
+    style.SetButtonRolloverTextColor( aButn );
+
+    // Disable color
+    style.SetDisableColor( aMid );
+
+    // Workspace
+    style.SetWorkspaceColor( aMid );
+
+    // Background
+    style.Set3DColors( aBack );
+    style.SetFaceColor( aBack );
+    style.SetInactiveTabColor( aBack );
+    style.SetDialogColor( aBack );
+	
+    if( aBack == COL_LIGHTGRAY )
+        style.SetCheckedColor( Color( 0xCC, 0xCC, 0xCC ) );
+    else
+    {
+        Color aColor2 = style.GetLightColor();
+        style.
+            SetCheckedColor( Color( (BYTE)(((USHORT)aBack.GetRed()+(USHORT)aColor2.GetRed())/2),
+                        (BYTE)(((USHORT)aBack.GetGreen()+(USHORT)aColor2.GetGreen())/2),
+                        (BYTE)(((USHORT)aBack.GetBlue()+(USHORT)aColor2.GetBlue())/2)
+                        ) );
+    }
+
+    // Selection
+    style.SetHighlightColor( aHigh );
+    style.SetHighlightTextColor( toColor(pal.color( QPalette::HighlightedText))  );
+
+    // Font
+    Font aFont = toFont( kapp->font(), rSettings.GetUILocale() );
+	
+    style.SetAppFont( aFont );
+    style.SetHelpFont( aFont );
+	
+	if( !bSetTitleFont )
+	{
+		style.SetTitleFont( aFont );
+	}
+	
+	style.SetFloatTitleFont( aFont );
+    style.SetMenuFont( aFont ); // will be changed according to pMenuBar
+    style.SetToolFont( aFont ); // will be changed according to pToolBar
+    style.SetLabelFont( aFont );
+    style.SetInfoFont( aFont );
+    style.SetRadioCheckFont( aFont );
+    style.SetPushButtonFont( aFont );
+    style.SetFieldFont( aFont );
+    style.SetIconFont( aFont );
+    style.SetGroupFont( aFont );
+	
+    int flash_time = QApplication::cursorFlashTime();
+    style.SetCursorBlinkTime( flash_time != 0 ? flash_time/2 : STYLE_CURSOR_NOBLINKTIME );
+
+    KMainWindow qMainWindow;
+
+    // Menu
+    style.SetSkipDisabledInMenus( TRUE );
+    KMenuBar *pMenuBar = qMainWindow.menuBar();
+    if ( pMenuBar )
+    {
+        // Color
+        QPalette qMenuCG = pMenuBar->palette();
+        
+        // Menu text and background color, theme specific
+        Color aMenuFore = toColor( qMenuCG.color( QPalette::WindowText ) );
+        Color aMenuBack = toColor( qMenuCG.color( QPalette::Window ) );
+		
+        aMenuFore = toColor( qMenuCG.color( QPalette::ButtonText ) );
+        aMenuBack = toColor( qMenuCG.color( QPalette::Button ) );
+        
+        style.SetMenuTextColor( aMenuFore );
+        style.SetMenuColor( aMenuBack );
+        style.SetMenuBarColor( aMenuBack );
+
+        style.SetMenuHighlightColor( toColor ( qMenuCG.color( QPalette::Highlight ) ) );
+
+        style.SetMenuHighlightTextColor( aMenuFore );
+        
+        // set special menubar higlight text color
+        if ( kapp->style()->inherits( "HighContrastStyle" ) )
+            ImplGetSVData()->maNWFData.maMenuBarHighlightTextColor = toColor( qMenuCG.color( QPalette::HighlightedText ) );
+        else
+            ImplGetSVData()->maNWFData.maMenuBarHighlightTextColor = aMenuFore;
+
+        // Font
+        aFont = toFont( pMenuBar->font(), rSettings.GetUILocale() );
+        style.SetMenuFont( aFont );
+    }
+
+    // Tool bar
+    KToolBar *pToolBar = qMainWindow.toolBar();
+    if ( pToolBar )
+    {
+        aFont = toFont( pToolBar->font(), rSettings.GetUILocale() );
+        style.SetToolFont( aFont );
+    }
+
+    // Scroll bar size
+    style.SetScrollBarSize( kapp->style()->pixelMetric( QStyle::PM_ScrollBarExtent ) );
+    
+    // #i59364# high contrast mode
+    BOOL bHC = ( style.GetFaceColor().IsDark() ||
+                 style.GetWindowColor().IsDark() );
+    style.SetHighContrastMode( bHC );
+
+    rSettings.SetStyleSettings( style );
+}
+
+
+void KDESalFrame::ReleaseGraphics( SalGraphics *pGraphics )
+{
+    for( int i = 0; i < nMaxGraphics; i++ )
+    {
+        if( m_aGraphics[i].pGraphics == pGraphics )
+        {
+            m_aGraphics[i].bInUse = false;
+            break;
+        }
+    }
+}
+
+void KDESalFrame::updateGraphics()
+{
+    for( int i = 0; i < nMaxGraphics; i++ )
+    {
+        if( m_aGraphics[i].bInUse )
+            m_aGraphics[i].pGraphics->SetDrawable( GetWindow(), GetScreenNumber() );
+    }
+}
+
+KDESalFrame::~KDESalFrame()
+{
+}
+
+KDESalFrame::GraphicsHolder::~GraphicsHolder()
+{
+	delete pGraphics;
+}
+
+SalGraphics* KDESalFrame::GetGraphics()
+{
+    if( GetWindow() )
+    {
+        for( int i = 0; i < nMaxGraphics; i++ )
+        {
+            if( ! m_aGraphics[i].bInUse )
+            {
+                m_aGraphics[i].bInUse = true;
+                if( ! m_aGraphics[i].pGraphics )
+                {
+                    m_aGraphics[i].pGraphics = new KDESalGraphics();
+                    m_aGraphics[i].pGraphics->Init( this, GetWindow(), GetScreenNumber() );
+                }
+                return m_aGraphics[i].pGraphics;
+            }
+        }
+    }
+    
+    return NULL;
+}
\ No newline at end of file
diff --git vcl/unx/kde4/KDESalFrame.hxx vcl/unx/kde4/KDESalFrame.hxx
new file mode 100644
index 0000000..da41fd3
--- /dev/null
+++ vcl/unx/kde4/KDESalFrame.hxx
@@ -0,0 +1,58 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#pragma once
+
+#include <saldisp.hxx>
+#include <salframe.h>
+
+class KDESalFrame : public X11SalFrame
+{
+	private:
+		static const int nMaxGraphics = 2;
+
+		struct GraphicsHolder
+		{
+			X11SalGraphics* pGraphics;
+			bool bInUse;
+			
+			GraphicsHolder() : pGraphics(0),bInUse( false ) {}
+			~GraphicsHolder();
+		};
+		
+		GraphicsHolder m_aGraphics[ nMaxGraphics ];
+
+	public:
+		KDESalFrame( SalFrame* pParent, ULONG nStyle );
+		virtual ~KDESalFrame();
+
+		virtual SalGraphics* GetGraphics();
+		virtual void ReleaseGraphics( SalGraphics *pGraphics );
+		virtual void updateGraphics();
+		virtual void UpdateSettings( AllSettings& rSettings );
+		virtual void Show( BOOL bVisible, BOOL bNoActivate );
+};
\ No newline at end of file
diff --git vcl/unx/kde4/KDESalGraphics.cxx vcl/unx/kde4/KDESalGraphics.cxx
new file mode 100644
index 0000000..35b9330
--- /dev/null
+++ vcl/unx/kde4/KDESalGraphics.cxx
@@ -0,0 +1,752 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_vcl.hxx"
+
+#define _SV_SALNATIVEWIDGETS_KDE_CXX
+
+#define Region QtXRegion
+
+#include <QStyle>
+#include <QStyleOption>
+#include <QPainter>
+
+#include <kapplication.h>
+
+#undef Region
+
+#include "KDESalGraphics.hxx"
+
+#include <vcl/settings.hxx>
+#include <rtl/ustrbuf.hxx>
+
+#include <stdio.h>
+
+using namespace ::rtl;
+
+/** 
+  Conversion function between VCL ControlState together with
+  ImplControlValue and Qt state flags.
+  @param nControlState State of the widget (default, focused, ...) in Native Widget Framework.
+  @param aValue Value held by the widget (on, off, ...)
+*/
+QStyle::State vclStateValue2StateFlag( ControlState nControlState,
+	const ImplControlValue& aValue )
+{
+    QStyle::State nState =
+		( (nControlState & CTRL_STATE_DEFAULT)?  QStyle::State_None:      QStyle::State_None ) |
+		( (nControlState & CTRL_STATE_ENABLED)?  QStyle::State_Enabled:   QStyle::State_None ) |
+		( (nControlState & CTRL_STATE_FOCUSED)?  QStyle::State_HasFocus:  QStyle::State_None ) |
+		( (nControlState & CTRL_STATE_PRESSED)?  QStyle::State_Sunken:    QStyle::State_None ) |
+		( (nControlState & CTRL_STATE_SELECTED)? QStyle::State_Selected : QStyle::State_None ) |
+		( (nControlState & CTRL_STATE_ROLLOVER)? QStyle::State_MouseOver: QStyle::State_None );
+		//TODO ( (nControlState & CTRL_STATE_HIDDEN)?   QStyle::State_:   QStyle::State_None ) |
+
+    switch ( aValue.getTristateVal() )
+    {
+		case BUTTONVALUE_ON:    nState |= QStyle::State_On;       break;
+		case BUTTONVALUE_OFF:   nState |= QStyle::State_Off;      break;
+		case BUTTONVALUE_MIXED: nState |= QStyle::State_NoChange; break;
+		default: break;
+    }
+
+    return nState;
+}
+
+/** 
+ Convert VCL Region to QRect.
+ @param rControlRegion The region to convert.
+ @return The bounding box of the region.
+*/
+QRect region2QRect( const Region& rControlRegion )
+{
+    Rectangle aRect = rControlRegion.GetBoundRect();
+
+    return QRect( QPoint( aRect.Left(), aRect.Top() ),
+		  QPoint( aRect.Right(), aRect.Bottom() ) );
+}
+
+BOOL KDESalGraphics::IsNativeControlSupported( ControlType type, ControlPart part )
+{
+	if (type == CTRL_PUSHBUTTON) return true;
+	
+	if (type == CTRL_MENUBAR) return true;
+	
+	if (type == CTRL_MENU_POPUP) return true;
+	
+	if (type == CTRL_EDITBOX) return true;
+	
+	if (type == CTRL_COMBOBOX) return true;
+	
+	if (type == CTRL_TOOLBAR) return true;
+	
+	if (type == CTRL_CHECKBOX) return true;
+	
+	if (type == CTRL_LISTBOX) return true;
+	
+	if (type == CTRL_LISTNODE) return true;
+	
+	if (type == CTRL_FRAME) return true;
+	
+	if (type == CTRL_SCROLLBAR) return true;
+	
+	if (type == CTRL_WINDOW_BACKGROUND) return true;
+	
+	if (type == CTRL_SPINBOX) return true;
+	
+	if (type == CTRL_SPINBUTTONS) return true;
+	
+	if (type == CTRL_GROUPBOX) return true;
+	
+	if (type == CTRL_FIXEDLINE) return true;
+	
+	if (type == CTRL_FIXEDBORDER) return true;
+	
+	if (type == CTRL_TOOLTIP) return true;
+	
+	if (type == CTRL_RADIOBUTTON) return true;
+	
+	return false;
+	
+	if ( (type == CTRL_TAB_ITEM) && (part == PART_ENTIRE_CONTROL) ) return true;
+	if ( (type == CTRL_TAB_PANE) && (part == PART_ENTIRE_CONTROL) ) return true;
+	// no CTRL_TAB_BODY for KDE
+	if ( (type == CTRL_PROGRESS)    && (part == PART_ENTIRE_CONTROL) ) return true;
+		
+	return false;
+}
+
+
+BOOL KDESalGraphics::hitTestNativeControl( ControlType type, ControlPart part,
+										   const Region& rControlRegion, const Point& rPos,
+										   SalControlHandle&, BOOL& rIsInside )
+{
+    return FALSE;
+}
+
+BOOL KDESalGraphics::drawNativeControl( ControlType type, ControlPart part,
+										const Region& rControlRegion, ControlState nControlState,
+										const ImplControlValue& value, SalControlHandle&,
+										const OUString& )
+{
+    BOOL returnVal = true;
+
+    Display* dpy = GetXDisplay();
+    XLIB_Window drawable = GetDrawable();
+    GC gc = SelectPen();
+	
+	QRect widgetRect = region2QRect(rControlRegion);
+	
+	//draw right onto the window
+	QPixmap pixmap(widgetRect.width(), widgetRect.height());
+	
+	if (pixmap.isNull())
+	{
+		return false;
+	}
+	
+	QPainter painter(&pixmap);
+	painter.setBackgroundMode(Qt::OpaqueMode);
+	
+	//copy previous screen contents for proper blending
+	QPixmap screen = QPixmap::fromX11Pixmap(drawable);
+	painter.drawPixmap(0,0, screen, widgetRect.left(), widgetRect.top(), widgetRect.width(), widgetRect.height());
+	
+    if (type == CTRL_PUSHBUTTON)
+    {
+		QStyleOptionButton styleOption;
+		
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state =vclStateValue2StateFlag( nControlState, value );
+		
+		kapp->style()->drawControl( QStyle::CE_PushButton, &styleOption, &painter);
+    }
+	else if ( (type == CTRL_MENUBAR))
+	{
+		if (part == PART_MENU_ITEM) 
+		{
+			QStyleOptionMenuItem styleOption;
+			
+			styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+			styleOption.state = vclStateValue2StateFlag( nControlState, value );
+			
+			kapp->style()->drawControl( QStyle::CE_MenuBarItem, &styleOption, &painter);
+		}
+		else
+		{
+			pixmap.fill(KApplication::palette().color(QPalette::Window));
+		}
+	}
+	else if (type == CTRL_MENU_POPUP)
+	{		
+		if (part == PART_MENU_ITEM)
+		{
+			QStyleOptionMenuItem styleOption;
+			
+			styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+			styleOption.state = vclStateValue2StateFlag( nControlState, value );
+			
+			kapp->style()->drawControl( QStyle::CE_MenuItem, &styleOption, &painter);
+		}
+		else if (part == PART_MENU_ITEM_CHECK_MARK)
+		{
+			QStyleOptionButton styleOption;
+			
+			styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+			styleOption.state = vclStateValue2StateFlag( nControlState, value );
+			
+			if (nControlState & CTRL_STATE_PRESSED)
+			{
+				kapp->style()->drawPrimitive( QStyle::PE_IndicatorMenuCheckMark, &styleOption, &painter);
+			}
+		}
+		else if (part == PART_MENU_ITEM_RADIO_MARK)
+		{
+			QStyleOptionButton styleOption;
+			
+			styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+			styleOption.state = vclStateValue2StateFlag( nControlState, value );
+			
+			if (nControlState & CTRL_STATE_PRESSED)
+			{
+				kapp->style()->drawPrimitive( QStyle::PE_IndicatorRadioButton, &styleOption, &painter);
+			}
+		}
+		else
+		{
+			pixmap.fill(KApplication::palette().color(QPalette::Window));
+			
+			QStyleOptionFrameV3 styleOption;
+		
+			styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+			styleOption.state = vclStateValue2StateFlag( nControlState, value );
+			styleOption.frameShape = QFrame::StyledPanel;
+			
+			kapp->style()->drawPrimitive( QStyle::PE_FrameMenu, &styleOption, &painter);
+		}
+	}
+	else if ( (type == CTRL_TOOLBAR) && (part == PART_BUTTON) )
+    {
+		QStyleOptionToolButton styleOption;
+		
+		styleOption.arrowType = Qt::NoArrow;
+		styleOption.subControls = QStyle::SC_ToolButton;
+		
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		styleOption.state |= QStyle::State_Raised | QStyle::State_Enabled | QStyle::State_AutoRaise;
+		
+		kapp->style()->drawComplexControl( QStyle::CC_ToolButton, &styleOption, &painter);
+    }
+	else if ( (type == CTRL_TOOLBAR) && (part == PART_ENTIRE_CONTROL) )
+    {
+		QStyleOptionToolBar styleOption;
+		
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		
+		kapp->style()->drawControl( QStyle::CE_ToolBar, &styleOption, &painter);
+    }
+	else if ( (type == CTRL_TOOLBAR) && (part == PART_THUMB_VERT) )
+    {
+        QStyleOption styleOption;
+		
+		int width = kapp->style()->pixelMetric(QStyle::PM_ToolBarHandleExtent);
+		
+		styleOption.rect = QRect(0, 0, width, widgetRect.height());
+		styleOption.state = QStyle::State_Horizontal;
+		
+		kapp->style()->drawPrimitive( QStyle::PE_IndicatorToolBarHandle, &styleOption, &painter);
+    }
+	else if (type == CTRL_EDITBOX)
+	{
+		pixmap.fill(KApplication::palette().color(QPalette::Window));
+		
+		//TODO hover?? OO does not seem to do this for line edits
+		
+		QStyleOptionFrameV3 styleOption;
+		
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		
+		//TODO...how does the line edit draw itself internally??
+		styleOption.rect = QRect(2, 2, widgetRect.width()-4, widgetRect.height()-4);
+		kapp->style()->drawPrimitive( QStyle::PE_PanelLineEdit, &styleOption, &painter);
+		
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		kapp->style()->drawPrimitive( QStyle::PE_FrameLineEdit, &styleOption, &painter);
+	}
+	else if (type == CTRL_COMBOBOX)
+	{
+		pixmap.fill(KApplication::palette().color(QPalette::Window));
+		
+		QStyleOptionComboBox styleOption;
+		
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		
+		styleOption.editable = true;
+		
+		kapp->style()->drawComplexControl(QStyle::CC_ComboBox, &styleOption, &painter);
+	}
+	else if (type == CTRL_LISTBOX)
+	{
+		QStyleOptionComboBox styleOption;
+		
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		
+		if (part == PART_SUB_EDIT)
+		{
+			kapp->style()->drawControl(QStyle::CE_ComboBoxLabel, &styleOption, &painter);
+		}
+		else
+		{
+			kapp->style()->drawComplexControl(QStyle::CC_ComboBox, &styleOption, &painter);
+		}
+	}
+	else if (type == CTRL_LISTNODE)
+	{
+		QStyleOption styleOption;
+		
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		
+		styleOption.state |= QStyle::State_Item;
+		styleOption.state |= QStyle::State_Children;
+		
+		if (nControlState & CTRL_STATE_PRESSED)
+		{
+			styleOption.state |= QStyle::State_Open;
+		}
+		
+		kapp->style()->drawPrimitive(QStyle::PE_IndicatorBranch, &styleOption, &painter);
+	}
+	else if (type == CTRL_CHECKBOX)
+	{	
+		QStyleOptionButton styleOption;
+		
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		
+		kapp->style()->drawControl(QStyle::CE_CheckBox, &styleOption, &painter);
+	}
+	else if (type == CTRL_SCROLLBAR)
+	{
+		pixmap.fill(KApplication::palette().color(QPalette::Window));
+		
+		if ((part == PART_DRAW_BACKGROUND_VERT) || (part == PART_DRAW_BACKGROUND_HORZ))
+		{
+			ScrollbarValue* sbVal = static_cast<ScrollbarValue *> ( value.getOptionalVal() );
+			
+			QStyleOptionSlider styleOption;
+			styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+			
+			//if the scroll bar is active (aka not degenrate...allow for hover events
+			if (sbVal->mnVisibleSize < sbVal->mnMax)
+			{
+				styleOption.state = vclStateValue2StateFlag( nControlState, value );
+				styleOption.state |= QStyle::State_MouseOver;
+			}
+			
+			//horizontal or vertical
+			if (part == PART_DRAW_BACKGROUND_VERT)
+			{
+				styleOption.orientation = Qt::Vertical;
+			}
+			else
+			{
+				styleOption.state |= QStyle::State_Horizontal;
+			}
+			
+			//setup parameters from the OO values
+			styleOption.minimum = sbVal->mnMin;
+			styleOption.maximum = sbVal->mnMax - sbVal->mnVisibleSize;
+			styleOption.sliderValue = sbVal->mnCur;
+			styleOption.sliderPosition = sbVal->mnCur;
+			styleOption.pageStep = sbVal->mnVisibleSize;
+			
+			//setup the active control...always the slider
+			if (sbVal->mnThumbState & CTRL_STATE_ROLLOVER)
+			{
+				styleOption.activeSubControls = QStyle::SC_ScrollBarSlider;
+			}
+			
+			kapp->style()->drawComplexControl(QStyle::CC_ScrollBar, &styleOption, &painter);
+		}
+	}
+	else if (type == CTRL_SPINBOX)
+	{
+		pixmap.fill(KApplication::palette().color(QPalette::Window));
+		//SpinbuttonValue* sbVal = static_cast<SpinbuttonValue *> ( value.getOptionalVal() );
+		
+		QStyleOptionSpinBox styleOption;
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		
+		kapp->style()->drawComplexControl(QStyle::CC_SpinBox, &styleOption, &painter);
+	}
+	else if (type == CTRL_SPINBUTTONS)
+	{
+		pixmap.fill(KApplication::palette().color(QPalette::Window));
+		
+		QStyleOptionSpinBox styleOption;
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		
+		styleOption.subControls = QStyle::SC_SpinBoxUp | QStyle::SC_SpinBoxDown;
+		
+		kapp->style()->drawComplexControl(QStyle::CC_SpinBox, &styleOption, &painter);
+	}
+	else if (type == CTRL_GROUPBOX)
+	{
+		QStyleOptionGroupBox styleOption;
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		
+		kapp->style()->drawComplexControl(QStyle::CC_GroupBox, &styleOption, &painter);
+	}
+	else if (type == CTRL_RADIOBUTTON)
+	{
+		QStyleOptionButton styleOption;
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		
+		kapp->style()->drawControl(QStyle::CE_RadioButton, &styleOption, &painter);
+	}
+	else if (type == CTRL_TOOLTIP)
+	{
+		QStyleOption styleOption;
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		
+		kapp->style()->drawPrimitive(QStyle::PE_PanelTipLabel, &styleOption, &painter);
+	}
+	else if (type == CTRL_FRAME)
+	{
+		QStyleOptionFrameV3 styleOption;
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		styleOption.frameShape = QFrame::StyledPanel;
+		
+		kapp->style()->drawPrimitive(QStyle::PE_FrameWindow, &styleOption, &painter);
+	}
+	else if (type == CTRL_FIXEDBORDER)
+	{
+		QStyleOptionFrameV3 styleOption;
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		styleOption.frameShape = QFrame::StyledPanel;
+		
+		kapp->style()->drawPrimitive(QStyle::PE_FrameWindow, &styleOption, &painter);
+	}
+	else if (type == CTRL_WINDOW_BACKGROUND)
+	{
+		pixmap.fill(KApplication::palette().color(QPalette::Window));	
+	}
+	else if (type == CTRL_FIXEDLINE)
+	{
+		QStyleOptionMenuItem styleOption;
+			
+		styleOption.rect = QRect(0, 0, widgetRect.width(), widgetRect.height());
+		styleOption.state = vclStateValue2StateFlag( nControlState, value );
+		styleOption.menuItemType = QStyleOptionMenuItem::Separator;
+		styleOption.state |= QStyle::State_Item;
+		
+		kapp->style()->drawControl( QStyle::CE_MenuItem, &styleOption, &painter);
+	}
+	else
+	{
+		returnVal = false;
+	}
+	
+	if (returnVal)
+	{
+		X11SalGraphics::CopyScreenArea( dpy,
+			pixmap.handle(), pixmap.x11Info().screen(), pixmap.x11Info().depth(),
+			drawable, GetScreenNumber(), GetVisual().GetDepth(), gc,
+			0, 0, widgetRect.width(), widgetRect.height(), widgetRect.left(), widgetRect.top() );
+	}
+
+    return returnVal;
+}
+
+BOOL KDESalGraphics::getNativeControlRegion( ControlType type, ControlPart part,
+											 const Region& controlRegion, ControlState controlState,
+											 const ImplControlValue& val, SalControlHandle&,
+											 const OUString&,
+											 Region &nativeBoundingRegion, Region &nativeContentRegion )
+{
+    bool retVal = false;
+	
+    QRect boundingRect = region2QRect( controlRegion );
+    QRect contentRect = boundingRect;
+    QStyleOptionComplex styleOption;
+	
+    switch ( type )
+    {
+		// Metrics of the push button
+		case CTRL_PUSHBUTTON:
+			if (part == PART_ENTIRE_CONTROL)
+			{
+				styleOption.state = vclStateValue2StateFlag(controlState, val);
+
+				if ( controlState & CTRL_STATE_DEFAULT )
+				{
+					int size = kapp->style()->pixelMetric(
+						QStyle::PM_ButtonDefaultIndicator, &styleOption );
+					
+					boundingRect.adjust( -size, -size, size, size );
+					
+					retVal = true;
+				}
+			}
+			break;
+		case CTRL_EDITBOX:
+		{
+			styleOption.rect = QRect(0, 0, contentRect.width(), contentRect.height());
+			styleOption.state = vclStateValue2StateFlag(controlState, val);
+
+			int size = kapp->style()->pixelMetric(QStyle::PM_LayoutLeftMargin) - 1;
+			
+			contentRect.adjust( -size, -size, size, size);
+			boundingRect = contentRect;
+			
+			retVal = true;
+			
+			break;
+		}
+		case CTRL_CHECKBOX:
+			if (part == PART_ENTIRE_CONTROL)
+			{
+				styleOption.state = vclStateValue2StateFlag(controlState, val);
+						
+				contentRect.setWidth(kapp->style()->pixelMetric(
+					QStyle::PM_IndicatorWidth, &styleOption));
+				contentRect.setHeight(kapp->style()->pixelMetric(
+					QStyle::PM_IndicatorHeight, &styleOption));
+				
+				contentRect.adjust(0, 10, 0, 5);
+				
+				boundingRect = contentRect;
+					
+				retVal = true;
+				
+				break;
+			}
+		case CTRL_COMBOBOX:
+		case CTRL_LISTBOX:
+		{
+			QStyleOptionComboBox cbo;
+			
+			cbo.rect = QRect(0, 0, contentRect.width(), contentRect.height());
+			cbo.state = vclStateValue2StateFlag(controlState, val);
+			
+			switch ( part )
+			{
+				case PART_ENTIRE_CONTROL:
+				{
+					int size = kapp->style()->pixelMetric(QStyle::PM_ComboBoxFrameWidth) - 2;
+					contentRect.adjust(-size,-size,size,size);
+					retVal = true;
+					break;
+				}
+				case PART_BUTTON_DOWN:
+					//the entire control can be used as the "down" button
+					retVal = true;
+					break;
+				case PART_SUB_EDIT:
+					contentRect = kapp->style()->subControlRect(
+						QStyle::CC_ComboBox, &cbo, QStyle::SC_ComboBoxEditField );
+						
+					contentRect.translate( boundingRect.left(), boundingRect.top() );
+					
+					retVal = true;
+					break;
+			}
+			break;
+		}
+		case CTRL_SPINBOX:
+		{
+			QStyleOptionSpinBox sbo;
+
+			sbo.rect = QRect(0, 0, contentRect.width(), contentRect.height());
+			sbo.state = vclStateValue2StateFlag(controlState, val);
+			
+			switch ( part )
+			{
+				case PART_BUTTON_UP:
+					contentRect = kapp->style()->subControlRect(
+						QStyle::CC_SpinBox, &sbo, QStyle::SC_SpinBoxUp );
+					contentRect.translate( boundingRect.left(), boundingRect.top() );
+					retVal = true;
+					boundingRect = QRect();
+					break;
+				
+				case PART_BUTTON_DOWN:
+					contentRect = kapp->style()->subControlRect(
+						QStyle::CC_SpinBox, &sbo, QStyle::SC_SpinBoxDown );
+					retVal = true;
+					contentRect.translate( boundingRect.left(), boundingRect.top() );
+					boundingRect = QRect();
+					break;
+
+				case PART_SUB_EDIT:
+					contentRect = kapp->style()->subControlRect(
+						QStyle::CC_SpinBox, &sbo, QStyle::SC_SpinBoxEditField );
+					retVal = true;
+					contentRect.translate( boundingRect.left(), boundingRect.top() );
+					break;
+				default:
+					retVal = true;
+			}
+			break;
+		}
+		case CTRL_MENU_POPUP:
+			//just limit the widget of the menu items
+			//OO isn't very flexible in all reguards with the menu
+			//so we do the best we can
+			if (part == PART_MENU_ITEM_CHECK_MARK)
+			{
+				contentRect.setWidth(contentRect.height());
+				retVal = true;
+			}
+			else if (part == PART_MENU_ITEM_RADIO_MARK)
+			{
+				contentRect.setWidth(contentRect.height());
+				retVal = true;
+			}
+			break;
+		case CTRL_FRAME:
+		{
+			if (part == PART_BORDER)
+			{
+				int size = kapp->style()->pixelMetric(QStyle::PM_DefaultFrameWidth);
+				//contentRect.adjust(size, size, size, size);
+				boundingRect.adjust(-size, -size, size, size);
+				retVal = true;
+			}
+			
+			break;
+		}
+		case CTRL_RADIOBUTTON:
+		{
+			const int h = kapp->style()->pixelMetric(QStyle::PM_ExclusiveIndicatorHeight);
+			const int w = kapp->style()->pixelMetric(QStyle::PM_ExclusiveIndicatorWidth);
+			
+			contentRect = QRect(boundingRect.left(), boundingRect.top(), w, h);
+			
+			retVal = true;
+		}
+		default:
+			break;
+	}
+#if 0
+	
+
+		// Metrics of the scroll bar
+		case CTRL_SCROLLBAR:
+			//pWidget = pWidgetPainter->scrollBar( rControlRegion,
+				//( part == PART_BUTTON_LEFT || part == PART_BUTTON_RIGHT ),
+				//ImplControlValue() );
+			//aStyleOption.initFrom( pWidget );
+
+			switch ( part )
+			{
+			case PART_BUTTON_LEFT:
+			case PART_BUTTON_UP:
+				qRect = kapp->style()->subControlRect(
+					QStyle::CC_ScrollBar, &aStyleOption, QStyle::SC_ScrollBarSubLine );
+
+				// Workaround for Platinum style scroll bars. It makes the
+				// left/up button invisible.
+				if ( part == PART_BUTTON_LEFT )
+				{
+					if ( qRect.left() > kapp->style()->subControlRect(
+						QStyle::CC_ScrollBar, &aStyleOption,
+						QStyle::SC_ScrollBarSubPage ).left() )
+					{
+						qRect.setLeft( 0 );
+						qRect.setRight( 0 );
+					}
+				}
+				else
+				{
+					if ( qRect.top() > kapp->style()->subControlRect(
+						QStyle::CC_ScrollBar, &aStyleOption,
+						QStyle::SC_ScrollBarSubPage ).top() )
+					{
+						qRect.setTop( 0 );
+						qRect.setBottom( 0 );
+					}
+				}
+	
+				qRect.translate( qBoundingRect.left(), qBoundingRect.top() );
+
+				bReturn = TRUE;
+				break;
+
+			case PART_BUTTON_RIGHT:
+			case PART_BUTTON_DOWN:
+				qRect = kapp->style()->subControlRect(
+					QStyle::CC_ScrollBar, &aStyleOption, QStyle::SC_ScrollBarAddLine );
+
+				// Workaround for Platinum and 3 button style scroll bars.
+				// It makes the right/down button bigger.
+				if ( part == PART_BUTTON_RIGHT )
+					qRect.setLeft( kapp->style()->subControlRect(
+						QStyle::CC_ScrollBar, &aStyleOption,
+						QStyle::SC_ScrollBarAddPage ).right() + 1 );
+				else
+					qRect.setTop( kapp->style()->subControlRect(
+						QStyle::CC_ScrollBar, &aStyleOption,
+						QStyle::SC_ScrollBarAddPage ).bottom() + 1 );
+
+				qRect.translate( qBoundingRect.left(), qBoundingRect.top() );
+
+				bReturn = TRUE;
+				break;
+			}
+			break;
+    }
+#endif
+    
+    if (retVal)
+    {
+		// Bounding region
+		Point aBPoint( boundingRect.x(), boundingRect.y() );
+		Size aBSize( boundingRect.width(), boundingRect.height() );
+		nativeBoundingRegion = Region( Rectangle( aBPoint, aBSize ) );
+
+		// Region of the content
+		Point aPoint( contentRect.x(), contentRect.y() );
+		Size  aSize( contentRect.width(), contentRect.height() );
+		nativeContentRegion = Region( Rectangle( aPoint, aSize ) );
+    }
+	
+    return retVal;
+}
diff --git vcl/unx/kde4/KDESalGraphics.hxx vcl/unx/kde4/KDESalGraphics.hxx
new file mode 100644
index 0000000..f6e77d7
--- /dev/null
+++ vcl/unx/kde4/KDESalGraphics.hxx
@@ -0,0 +1,114 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#pragma once
+
+#include <rtl/string.hxx>
+#include <saldisp.hxx>
+#include <salgdi.h>
+
+/** handles graphics drawings requests and performs the needed drawing operations */
+class KDESalGraphics : public X11SalGraphics
+{
+	public:
+		KDESalGraphics() {}
+		virtual ~KDESalGraphics() {}
+		
+		/**
+			What widgets can be drawn the native way.
+			@param type Type of the widget.
+			@param part Specification of the widget's part if it consists of more than one.
+			@return true if the platform supports native drawing of the widget type defined by part.
+		*/
+		virtual BOOL IsNativeControlSupported( ControlType type, ControlPart part );
+		
+		/** Test whether the position is in the native widget.
+			If the return value is TRUE, bIsInside contains information whether
+			aPos was or was not inside the native widget specified by the
+			type/part combination.
+		*/
+		virtual BOOL hitTestNativeControl( ControlType type, ControlPart part,
+										const Region& rControlRegion, const Point& aPos,
+										SalControlHandle& rControlHandle, BOOL& rIsInside );
+		/** Draw the requested control described by part/nControlState.
+		
+			@param rControlRegion
+			The bounding region of the complete control in VCL frame coordinates.
+			
+			@param aValue
+			An optional value (tristate/numerical/string).
+			
+			@param rControlHandle
+			Carries platform dependent data and is maintained by the SalFrame implementation.
+			
+			@param aCaption
+			A caption or title string (like button text etc.)
+		*/
+		virtual BOOL drawNativeControl( ControlType type, ControlPart part,
+										const Region& rControlRegion, ControlState nControlState,
+										const ImplControlValue& aValue, SalControlHandle& rControlHandle,
+										const rtl::OUString& aCaption );
+										
+		/** Draw text on the widget.
+			OPTIONAL. Draws the requested text for the control described by part/nControlState.
+			Used if text is not drawn by DrawNativeControl().
+		
+			@param rControlRegion The bounding region of the complete control in VCL frame coordinates.
+			@param aValue An optional value (tristate/numerical/string)
+			@param rControlHandle Carries platform dependent data and is maintained by the SalFrame implementation.
+			@param aCaption	A caption or title string (like button text etc.)
+		*/
+		virtual BOOL drawNativeControlText( ControlType type, ControlPart part,
+											const Region& rControlRegion, ControlState nControlState,
+											const ImplControlValue& aValue, SalControlHandle& rControlHandle,
+											const rtl::OUString& aCaption ) { return false; }
+		/** Check if the bounding regions match.
+			
+			If the return value is TRUE, rNativeBoundingRegion
+			contains the true bounding region covered by the control
+			including any adornment, while rNativeContentRegion contains the area
+			within the control that can be safely drawn into without drawing over
+			the borders of the control.
+
+			@param rControlRegion
+			The bounding region of the control in VCL frame coordinates.
+			
+			@param aValue
+			An optional value (tristate/numerical/string)
+			
+			@param rControlHandle
+			Carries platform dependent data and is maintained by the SalFrame implementation.
+			
+			@param aCaption
+			A caption or title string (like button text etc.)
+		*/
+		virtual BOOL getNativeControlRegion( ControlType type, ControlPart part,
+											const Region& rControlRegion, ControlState nControlState,
+											const ImplControlValue& aValue, SalControlHandle& rControlHandle,
+											const rtl::OUString& aCaption,
+											Region &rNativeBoundingRegion, Region &rNativeContentRegion );
+};
\ No newline at end of file
diff --git vcl/unx/kde4/KDESalInstance.cxx vcl/unx/kde4/KDESalInstance.cxx
new file mode 100644
index 0000000..c65f08e
--- /dev/null
+++ vcl/unx/kde4/KDESalInstance.cxx
@@ -0,0 +1,35 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include "KDESalInstance.hxx"
+
+#include "KDESalFrame.hxx"
+
+SalFrame* KDESalInstance::CreateFrame( SalFrame *pParent, ULONG nState )
+{
+	return new KDESalFrame( pParent, nState );
+}
\ No newline at end of file
diff --git vcl/unx/kde4/KDESalInstance.hxx vcl/unx/kde4/KDESalInstance.hxx
new file mode 100644
index 0000000..8ca2272
--- /dev/null
+++ vcl/unx/kde4/KDESalInstance.hxx
@@ -0,0 +1,41 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#pragma once
+
+#include <salinst.h>
+
+class SalYieldMutex;
+class SalFrame;
+
+class KDESalInstance : public X11SalInstance
+{
+	public:
+		KDESalInstance( SalYieldMutex* pMutex ) : X11SalInstance( pMutex ) {}
+		virtual ~KDESalInstance() {}
+		virtual SalFrame* CreateFrame( SalFrame* pParent, ULONG nStyle );
+};
\ No newline at end of file
diff --git vcl/unx/kde4/KDEXLib.cxx vcl/unx/kde4/KDEXLib.cxx
new file mode 100644
index 0000000..1e4e367
--- /dev/null
+++ vcl/unx/kde4/KDEXLib.cxx
@@ -0,0 +1,171 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include "VCLKDEApplication.hxx"
+
+#define Region QtXRegion
+
+#include <kapplication.h>
+#include <klocale.h>
+#include <kaboutdata.h>
+#include <kcmdlineargs.h>
+#include <kstartupinfo.h>
+
+#undef Region
+
+#include "KDEXLib.hxx"
+
+#include <i18n_im.hxx>
+#include <i18n_xkb.hxx>
+
+#include <saldata.hxx>
+#include <vos/process.hxx>
+
+#include "KDESalDisplay.hxx"
+
+#if OSL_DEBUG_LEVEL > 1
+#include <stdio.h>
+#endif
+
+KDEXLib::KDEXLib() : 
+	SalXLib(),	m_bStartupDone(false), m_pApplication(0),
+	m_pFreeCmdLineArgs(0), m_pAppCmdLineArgs(0), m_nFakeCmdLineArgs( 0 )
+{
+}
+
+KDEXLib::~KDEXLib()
+{
+	delete (VCLKDEApplication*)m_pApplication;
+	
+    // free the faked cmdline arguments no longer needed by KApplication
+    for( int i = 0; i < m_nFakeCmdLineArgs; i++ )
+	{
+        free( m_pFreeCmdLineArgs[i] );
+	}
+	
+    delete [] m_pFreeCmdLineArgs;
+    delete [] m_pAppCmdLineArgs;
+}
+
+void KDEXLib::Init()
+{
+	SalI18N_InputMethod* pInputMethod = new SalI18N_InputMethod;
+	pInputMethod->SetLocale();
+	XrmInitialize();
+
+	KAboutData *kAboutData = new KAboutData( "OpenOffice.org",
+			"OpenOffice.org",
+			ki18n( "OpenOffice.org" ),
+			"3.0.0",
+			ki18n( "OpenOffice.org with KDE Native Widget Support." ),
+			KAboutData::License_LGPL,
+			ki18n( "Copyright (c) 2003, 2004, 2005, 2006, 2007, 2008 Novell, Inc"),
+			ki18n( "OpenOffice.org is an office suite.\n" ),
+			"http://kde.openoffice.org/index.html",
+			"dev@kde.openoffice.org" );
+	kAboutData->addAuthor( ki18n( "Jan Holesovsky" ),
+			ki18n( "Original author and maintainer of the KDE NWF." ),
+			"kendy@artax.karlin.mff.cuni.cz",
+			"http://artax.karlin.mff.cuni.cz/~kendy" );
+	kAboutData->addAuthor( ki18n("Eric Bischoff"),
+			ki18n( "Accessibility fixes, porting to KDE 4." ),
+			"bischoff@kde.org" );
+
+    m_nFakeCmdLineArgs = 1;
+	USHORT nIdx;
+	vos::OExtCommandLine aCommandLine;
+	int nParams = aCommandLine.getCommandArgCount();
+	rtl::OString aDisplay;
+	rtl::OUString aParam, aBin;
+
+	for ( nIdx = 0; nIdx < nParams; ++nIdx ) 
+	{
+		aCommandLine.getCommandArg( nIdx, aParam );
+		if ( !m_pFreeCmdLineArgs && aParam.equalsAscii( "-display" ) && nIdx + 1 < nParams )
+		{
+			aCommandLine.getCommandArg( nIdx + 1, aParam );
+			aDisplay = rtl::OUStringToOString( aParam, osl_getThreadTextEncoding() );
+
+			m_nFakeCmdLineArgs = 3;
+			m_pFreeCmdLineArgs = new char*[ m_nFakeCmdLineArgs ];
+			m_pFreeCmdLineArgs[ 1 ] = strdup( "-display" );
+			m_pFreeCmdLineArgs[ 2 ] = strdup( aDisplay.getStr() );
+		}
+	}
+	if ( !m_pFreeCmdLineArgs )
+		m_pFreeCmdLineArgs = new char*[ m_nFakeCmdLineArgs ];
+
+    osl_getExecutableFile( &aParam.pData );
+    osl_getSystemPathFromFileURL( aParam.pData, &aBin.pData );
+    rtl::OString aExec = rtl::OUStringToOString( aBin, osl_getThreadTextEncoding() );
+	m_pFreeCmdLineArgs[0] = strdup( aExec.getStr() );
+
+    // make a copy of the string list for freeing it since
+    // KApplication manipulates the pointers inside the argument vector
+    // note: KApplication bad !
+    m_pAppCmdLineArgs = new char*[ m_nFakeCmdLineArgs ];
+    for( int i = 0; i < m_nFakeCmdLineArgs; i++ )
+        m_pAppCmdLineArgs[i] = m_pFreeCmdLineArgs[i];
+
+	KCmdLineArgs::init( m_nFakeCmdLineArgs, m_pAppCmdLineArgs, kAboutData );
+	
+	m_pApplication = new VCLKDEApplication();
+	kapp->disableSessionManagement();
+	
+	Display* pDisp = QX11Info::display();
+	SalKDEDisplay *pSalDisplay = new SalKDEDisplay(pDisp);
+	
+	((VCLKDEApplication*)m_pApplication)->disp = pSalDisplay;
+
+	XSetIOErrorHandler	  ( (XIOErrorHandler)X11SalData::XIOErrorHdl );
+	XSetErrorHandler	  ( (XErrorHandler)X11SalData::XErrorHdl );
+	
+	pInputMethod->CreateMethod( pDisp );
+	pInputMethod->AddConnectionWatch( pDisp, (void*)this );
+	pSalDisplay->SetInputMethod( pInputMethod );
+
+    PushXErrorLevel( true );
+	SalI18N_KeyboardExtension *pKbdExtension = new SalI18N_KeyboardExtension( pDisp );
+	XSync( pDisp, False );
+
+	pKbdExtension->UseExtension( ! HasXErrorOccured() );
+	PopXErrorLevel();
+
+	pSalDisplay->SetKbdExtension( pKbdExtension );
+}
+
+void KDEXLib::doStartup()
+{
+    if( ! m_bStartupDone )
+    {
+        KStartupInfo::appStarted();
+        m_bStartupDone = true;
+        #if OSL_DEBUG_LEVEL > 1
+        fprintf( stderr, "called KStartupInfo::appStarted()\n" );
+        #endif
+    }
+}
\ No newline at end of file
diff --git vcl/unx/kde4/KDEXLib.hxx vcl/unx/kde4/KDEXLib.hxx
new file mode 100644
index 0000000..09a6197
--- /dev/null
+++ vcl/unx/kde4/KDEXLib.hxx
@@ -0,0 +1,48 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#pragma once
+
+#include <saldisp.hxx>
+
+class KDEXLib : public SalXLib
+{
+	private:
+		bool m_bStartupDone;
+		void* m_pApplication;
+		char** m_pFreeCmdLineArgs;
+		char** m_pAppCmdLineArgs;
+		int m_nFakeCmdLineArgs;
+		
+	public:
+		KDEXLib();
+				
+		virtual ~KDEXLib();
+		virtual void Init();
+			
+		void doStartup();
+};
diff --git vcl/unx/kde4/VCLKDEApplication.cxx vcl/unx/kde4/VCLKDEApplication.cxx
new file mode 100644
index 0000000..ff44d1b
--- /dev/null
+++ vcl/unx/kde4/VCLKDEApplication.cxx
@@ -0,0 +1,52 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include "VCLKDEApplication.hxx"
+
+#define Region QtXRegion
+#include <QEvent>
+#undef Region
+
+#include "KDESalDisplay.hxx"
+
+VCLKDEApplication::VCLKDEApplication() : 
+	KApplication()
+{
+	disp = 0;
+}
+
+bool VCLKDEApplication::x11EventFilter(XEvent* event)
+{
+	//if we have a display and the display consumes the event
+	//do not process the event in qt
+	if (disp && disp->Dispatch(event) > 0)
+	{
+		return true;
+	}
+	
+	return false;
+}
\ No newline at end of file
diff --git vcl/unx/kde4/VCLKDEApplication.hxx vcl/unx/kde4/VCLKDEApplication.hxx
new file mode 100644
index 0000000..e47ecef
--- /dev/null
+++ vcl/unx/kde4/VCLKDEApplication.hxx
@@ -0,0 +1,53 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#pragma once
+
+#define Region QtXRegion
+
+#include <QSessionManager>
+
+#include <kapplication.h>
+
+#undef Region
+
+class SalKDEDisplay;
+
+/* #i59042# override KApplications method for session management
+ * since it will interfere badly with our own.
+ */
+class VCLKDEApplication : public KApplication
+{
+    public:
+		VCLKDEApplication();
+		
+		virtual void commitData(QSessionManager&) {};
+		
+		virtual bool x11EventFilter(XEvent* event);
+		
+		SalKDEDisplay* disp;
+};
\ No newline at end of file
diff --git vcl/unx/kde4/main.cxx vcl/unx/kde4/main.cxx
new file mode 100644
index 0000000..848cd09
--- /dev/null
+++ vcl/unx/kde4/main.cxx
@@ -0,0 +1,83 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2009 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_vcl.hxx"
+
+#define Region QtXRegion
+#include <QApplication>
+#undef Region
+
+#include "KDEData.hxx"
+#include "KDESalInstance.hxx"
+
+#if OSL_DEBUG_LEVEL > 1
+#include <stdio.h>
+#endif
+
+#include <rtl/string.hxx>
+
+/// entry point for the KDE4 VCL plugin
+extern "C" {
+	VCL_DLLPUBLIC SalInstance* create_SalInstance( oslModule )
+	{
+#if QT_VERSION < 0x040000
+		// Qt 3.x support needs >= 3.2.2 - any 4.x should be ok
+		rtl::OString aVersion( qVersion() );
+#if OSL_DEBUG_LEVEL > 1
+		fprintf( stderr, "qt version string is \"%s\"\n", aVersion.getStr() );
+#endif
+		sal_Int32 nIndex = 0, nMajor = 0, nMinor = 0, nMicro = 0;
+		nMajor = aVersion.getToken( 0, '.', nIndex ).toInt32();
+		if( nIndex > 0 )
+			nMinor = aVersion.getToken( 0, '.', nIndex ).toInt32();
+		if( nIndex > 0 )
+			nMicro = aVersion.getToken( 0, '.', nIndex ).toInt32();
+		if( nMajor != 3 || nMinor < 2 || (nMinor == 2 && nMicro < 2) )
+		{
+#if OSL_DEBUG_LEVEL > 1
+			fprintf( stderr, "unsuitable qt version %d.%d.%d\n", nMajor, nMinor, nMicro );
+#endif
+			return NULL;
+		}
+#endif
+		
+		KDESalInstance* pInstance = new KDESalInstance( new SalYieldMutex() );
+#if OSL_DEBUG_LEVEL > 1
+		fprintf( stderr, "created KDESalInstance 0x%p\n", pInstance );
+#endif
+		
+		// initialize SalData
+		KDEData *salData = new KDEData();
+		SetSalData(salData);
+		salData->m_pInstance = pInstance;
+		salData->Init();
+		salData->initNWF();
+
+		return pInstance;
+	}
+}
diff --git vcl/unx/kde4/makefile.mk vcl/unx/kde4/makefile.mk
new file mode 100644
index 0000000..102e268
--- /dev/null
+++ vcl/unx/kde4/makefile.mk
@@ -0,0 +1,92 @@
+#*************************************************************************
+#
+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+# 
+# Copyright 2008 by Sun Microsystems, Inc.
+#
+# OpenOffice.org - a multi-platform office productivity suite
+#
+# $RCSfile: makefile.mk,v $
+#
+# $Revision: 1.10 $
+#
+# This file is part of OpenOffice.org.
+#
+# OpenOffice.org is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License version 3
+# only, as published by the Free Software Foundation.
+#
+# OpenOffice.org is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License version 3 for more details
+# (a copy is included in the LICENSE file that accompanied this code).
+#
+# You should have received a copy of the GNU Lesser General Public License
+# version 3 along with OpenOffice.org.  If not, see
+# <http://www.openoffice.org/license.html>
+# for a copy of the LGPLv3 License.
+#
+#*************************************************************************
+
+PRJ=..$/..
+
+PRJNAME=vcl
+TARGET=kde4plug
+.INCLUDE :  $(PRJ)$/util$/makefile.pmk
+
+# workaround for makedepend hang
+MKDEPENDSOLVER=
+
+# --- Settings -----------------------------------------------------
+
+.INCLUDE :  settings.mk
+.INCLUDE :  $(PRJ)$/util$/makefile2.pmk
+
+# For some of the included external KDE headers, GCC complains about shadowed
+# symbols in instantiated template code only at the end of a compilation unit,
+# so the only solution is to disable that warning here:
+.IF "$(COM)" == "GCC"
+CFLAGSCXX+=-Wno-shadow
+.ENDIF
+
+# --- Files --------------------------------------------------------
+
+.IF "$(GUIBASE)"!="unx"
+
+dummy:
+	@echo "Nothing to build for GUIBASE $(GUIBASE)"
+
+.ELSE		# "$(GUIBASE)"!="unx"
+
+.IF "$(ENABLE_KDE4)" != ""
+
+CFLAGS+=$(KDE4_CFLAGS)
+
+.IF "$(ENABLE_RANDR)" != ""
+CDEFS+=-DUSE_RANDR
+.ENDIF
+
+SLOFILES=\
+	$(SLO)$/main.obj \
+	$(SLO)$/VCLKDEApplication.obj \
+	$(SLO)$/KDEXLib.obj \
+	$(SLO)$/KDESalDisplay.obj \
+	$(SLO)$/KDESalFrame.obj \
+	$(SLO)$/KDESalGraphics.obj \
+	$(SLO)$/KDESalInstance.obj \
+	$(SLO)$/KDEData.obj
+	
+
+.ELSE # "$(ENABLE_KDE4)" != ""
+
+dummy:
+	@echo KDE disabled - nothing to build
+.ENDIF
+.ENDIF		# "$(GUIBASE)"!="unx"
+
+# --- Targets ------------------------------------------------------
+
+.INCLUDE :  target.mk
+
+.INCLUDE :  $(PRJ)$/util$/target.pmk
