--- qadevOOo/runner/helper/CwsDataExchangeImpl.java.old	2009-02-12 14:55:56.000000000 +0100
+++ qadevOOo/runner/helper/CwsDataExchangeImpl.java	2009-02-17 17:37:53.000000000 +0100
@@ -78,7 +78,7 @@ public class CwsDataExchangeImpl impleme
 
         final String[] outs = procHdl.getOutputText().split("\n");
 
-        final ArrayList<String> moduleNames = new ArrayList<String>();
+        final ArrayList moduleNames = new ArrayList();
         boolean bStart = false;
         for (int i = 0; i < outs.length; i++)
         {
--- qadevOOo/runner/util/DesktopTools.java.old	2009-02-12 14:55:56.000000000 +0100
+++ qadevOOo/runner/util/DesktopTools.java	2009-02-17 17:30:22.000000000 +0100
@@ -411,7 +411,6 @@ public class DesktopTools {
      * @param xModel
      * @deprecated
      */
-    @Deprecated
     public static void bringWindowToFromt(XModel xModel)
     {
         bringWindowToFront(xModel);
--- qadevOOo/runner/graphical/JPEGComparator.java.old	2009-02-18 11:59:04.000000000 +0100
+++ qadevOOo/runner/graphical/JPEGComparator.java	2009-02-18 12:22:16.000000000 +0100
@@ -185,7 +185,7 @@ public class JPEGComparator extends Enha
         int good = 0;
         int bad = 0;
         int ugly = 0;
-        int ok_status = 1; // 1=ok 2=bad 3=ugly
+        Integer ok_status = new Integer(1); // 1=ok 2=bad 3=ugly
 
         IniFile aResultIniFile = new IniFile(sResultIniFile);
         int nPages = aResultIniFile.getIntValue("global", "pages", 0);
@@ -200,12 +200,12 @@ public class JPEGComparator extends Enha
             else if (nPercent <= 5)
             {
                 bad++;
-                ok_status = 2;
+                ok_status = new Integer(2);
             }
             else
             {
                 ugly++;
-                ok_status = 3;
+                ok_status = new Integer(3);
             }
         }
 
--- qadevOOo/runner/helper/OfficeProvider.java.old	2009-02-12 14:55:56.000000000 +0100
+++ qadevOOo/runner/helper/OfficeProvider.java	2009-02-18 11:55:52.000000000 +0100
@@ -416,16 +416,18 @@ public class OfficeProvider implements A
         {
             
             // disable QuickStarter
-            try
-            {
-                Object quickStarter = msf.createInstance("com.sun.star.office.Quickstart");
-                XFastPropertySet fps = UnoRuntime.queryInterface(XFastPropertySet.class, quickStarter);
-                fps.setFastPropertyValue(0, false);
-            }
-            catch (com.sun.star.uno.Exception ex)
-            {
-                dbg("ERROR: Could not disable QuickStarter: " + ex.toString());
-            }
+            // can't be compiled with Sun Java 1.4
+            // anyway, we do not have enabled the quickstarter by default
+//            try
+//            {
+//                Object quickStarter = msf.createInstance("com.sun.star.office.Quickstart");
+//                XFastPropertySet fps = UnoRuntime.queryInterface(XFastPropertySet.class, quickStarter);
+//                fps.setFastPropertyValue(0, false);
+//            }
+//            catch (com.sun.star.uno.Exception ex)
+//            {
+//                dbg("ERROR: Could not disable QuickStarter: " + ex.toString());
+//            }
             
             try
             {
--- qadevOOo/tests/java/mod/_dbaccess/OQueryDesign.java.old	2009-02-12 14:55:51.000000000 +0100
+++ qadevOOo/tests/java/mod/_dbaccess/OQueryDesign.java	2009-02-18 12:10:23.000000000 +0100
@@ -298,7 +298,10 @@ public class OQueryDesign extends TestCa
         
     }
     
-    @Override
+    // @Override is optional; It just helps the compiler to catch errors, see 
+    // http://java.sun.com/docs/books/tutorial/java/javaOO/annotations.html 
+    // We will disable to to be able to compile with JRE 1.4 
+    // @Override
     protected void cleanup(TestParameters tParam, PrintWriter log) {
         try {
             xConn.close() ;
--- qadevOOo/runner/graphical/PostscriptCreator.java.old	2009-02-12 14:55:56.000000000 +0100
+++ qadevOOo/runner/graphical/PostscriptCreator.java	2009-02-18 12:23:32.000000000 +0100
@@ -54,7 +54,7 @@ public class PostscriptCreator extends E
         GlobalLogWriter.set(log);
         ParameterHelper aParam = new ParameterHelper(param);
         
-        param.put(util.PropertyName.OFFICE_CLOSE_TIME_OUT, 2000);
+        param.put(util.PropertyName.OFFICE_CLOSE_TIME_OUT, new Integer(2000));
         // run through all documents found in Inputpath
         foreachDocumentinInputPath(aParam);
     }
