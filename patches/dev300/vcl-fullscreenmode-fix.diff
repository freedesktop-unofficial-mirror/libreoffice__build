Fix fullscreen behaviour on multimonitor setups

From: Thorsten Behrens <thb@openoffice.org>


---

 vcl/unx/gtk/window/gtkframe.cxx    |   13 +------------
 vcl/unx/source/window/salframe.cxx |   25 -------------------------
 2 files changed, 1 insertions(+), 37 deletions(-)


diff --git vcl/unx/gtk/window/gtkframe.cxx vcl/unx/gtk/window/gtkframe.cxx
index 3cc1c44..3d0defa 100644
--- vcl/unx/gtk/window/gtkframe.cxx
+++ vcl/unx/gtk/window/gtkframe.cxx
@@ -842,12 +842,6 @@ void GtkSalFrame::Init( SalFrame* pParent, ULONG nStyle )
             eType = GDK_WINDOW_TYPE_HINT_UTILITY;
         }
         
-        if( (nStyle & SAL_FRAME_STYLE_PARTIAL_FULLSCREEN ) )
-        {
-            eType = GDK_WINDOW_TYPE_HINT_TOOLBAR;
-            gtk_window_set_keep_above( GTK_WINDOW(m_pWindow), true );
-        }
-        
         gtk_window_set_type_hint( GTK_WINDOW(m_pWindow), eType );
         if( bNoDecor )
             gtk_window_set_decorated( GTK_WINDOW(m_pWindow), FALSE );
@@ -1308,8 +1302,6 @@ void GtkSalFrame::Show( BOOL bVisible, BOOL bNoActivate )
 {
     if( m_pWindow )
     {
-        if( m_pParent && (m_pParent->m_nStyle & SAL_FRAME_STYLE_PARTIAL_FULLSCREEN) )
-            gtk_window_set_keep_above( GTK_WINDOW(m_pWindow), bVisible );
         if( bVisible )
         {
             SessionManagerClient::open(); // will simply return after the first time
@@ -1820,8 +1812,6 @@ void GtkSalFrame::ShowFullScreen( BOOL bFullScreen, sal_Int32 nScreen )
             {
                 m_aRestorePosSize = Rectangle( Point( maGeometry.nX, maGeometry.nY ),
                                                Size( maGeometry.nWidth, maGeometry.nHeight ) );
-                // workaround different window managers have different opinions about
-                // _NET_WM_STATE_FULLSCREEN (Metacity <-> KWin)
                 bool bVisible = GTK_WIDGET_MAPPED(m_pWindow);
                 if( bVisible )
                     Show( FALSE );
@@ -1838,6 +1828,7 @@ void GtkSalFrame::ShowFullScreen( BOOL bFullScreen, sal_Int32 nScreen )
                 gtk_window_move( GTK_WINDOW(m_pWindow),
                                  maGeometry.nX = aNewPosSize.Left(),
                                  maGeometry.nY = aNewPosSize.Top() );
+                gtk_window_fullscreen( GTK_WINDOW(m_pWindow) );
                 if( bVisible )
                     Show( TRUE );
             }
@@ -1866,8 +1857,6 @@ void GtkSalFrame::ShowFullScreen( BOOL bFullScreen, sal_Int32 nScreen )
         {
             if( bFullScreen )
             {
-                if( !(m_nStyle & SAL_FRAME_STYLE_SIZEABLE) )
-                    gtk_window_set_resizable( GTK_WINDOW(m_pWindow), TRUE );
                 gtk_window_fullscreen( GTK_WINDOW(m_pWindow) );
                 moveToScreen( nScreen );
                 Size aScreenSize = pDisp->GetScreenSize( m_nScreen ); 
diff --git vcl/unx/source/window/salframe.cxx vcl/unx/source/window/salframe.cxx
index cc09809..95a19e1 100644
--- vcl/unx/source/window/salframe.cxx
+++ vcl/unx/source/window/salframe.cxx
@@ -608,8 +608,6 @@ void X11SalFrame::Init( ULONG nSalFrameStyle, int nScreen, SystemParentData* pPa
             eType = WMAdaptor::windowType_Utility;
         if( nStyle_ & SAL_FRAME_STYLE_OWNERDRAWDECORATION )
             eType = WMAdaptor::windowType_Toolbar;
-        if( nStyle_ & SAL_FRAME_STYLE_PARTIAL_FULLSCREEN )
-            eType = WMAdaptor::windowType_Dock;
 
         GetDisplay()->getWMAdaptor()->
             setFrameTypeAndDecoration( this,
@@ -1128,13 +1126,6 @@ void X11SalFrame::Show( BOOL bVisible, BOOL bNoActivate )
         || ( !bVisible && !bMapped_ ) )
         return;
 
-    // HACK: this is a workaround for (at least) kwin
-    // even though transient frames should be kept above their parent
-    // this does not necessarily hold true for DOCK type windows
-    // so artificially set ABOVE and remove it again on hide
-    if( mpParent && (mpParent->nStyle_ & SAL_FRAME_STYLE_PARTIAL_FULLSCREEN ) )
-        pDisplay_->getWMAdaptor()->enableAlwaysOnTop( this, bVisible );
-    
     bMapped_   = bVisible;
     bViewable_ = bVisible;
     setXEmbedInfo();
@@ -2203,22 +2194,6 @@ void X11SalFrame::ShowFullScreen( BOOL bFullScreen, sal_Int32 nScreen )
             mbMaximizedHorz = mbMaximizedVert = false;
             createNewWindow( None, m_nScreen );
             GetDisplay()->getWMAdaptor()->enableAlwaysOnTop( this, true );
-            #if 0
-            // this would give additional intent to the window
-            // manager to force the positioning of the window;
-            // alas all other windows will be expunged from that
-            // region, leaving us in a pity state afterwards
-            Size aScreenSize = pDisplay_->GetScreenSize( m_nScreen );
-            pDisplay_->getWMAdaptor()->setFrameStruts( this,
-                    aRect.Left(), aRect.Top(),
-                    aScreenSize.Width() - aRect.Right(),
-                    aScreenSize.Height() - aRect.Bottom(),
-                    aRect.Left(), aRect.Right(),
-                    aRect.Top(), aRect.Bottom(), 
-                    aRect.Left(), aRect.Right(),
-                    aRect.Top(), aRect.Bottom()
-                    );
-            #endif
                         
             if( bVisible )
                 Show(TRUE);
