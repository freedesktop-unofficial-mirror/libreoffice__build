---
 sc/source/ui/inc/output.hxx    |    1 +
 sc/source/ui/view/gridwin4.cxx |    3 ++-
 sc/source/ui/view/output.cxx   |   27 ++++++++++++++++-----------
 3 files changed, 19 insertions(+), 12 deletions(-)

diff --git sc/source/ui/inc/output.hxx sc/source/ui/inc/output.hxx
index 1e27162..e9e3d30 100644
--- sc/source/ui/inc/output.hxx
+++ sc/source/ui/inc/output.hxx
@@ -223,6 +223,7 @@ public:
 
     void	DrawGrid( BOOL bGrid, BOOL bPage );
     void	DrawStrings( BOOL bPixelToLogic = FALSE );
+    void    DrawDocumentBackground();
     void	DrawBackground();
     void	DrawShadow();
     void	DrawExtraShadow(BOOL bLeft, BOOL bTop, BOOL bRight, BOOL bBottom);
diff --git sc/source/ui/view/gridwin4.cxx sc/source/ui/view/gridwin4.cxx
index 1538bab..5f8de30 100644
--- sc/source/ui/view/gridwin4.cxx
+++ sc/source/ui/view/gridwin4.cxx
@@ -733,9 +733,10 @@ void ScGridWindow::Draw( SCCOL nX1, SCROW nY1, SCCOL nX2, SCROW nY2, ScUpdateMod
         aOutputData.SetSolidBackground(TRUE);
 
     pContentDev->SetMapMode(MAP_PIXEL);
-    aOutputData.DrawBackground();
+    aOutputData.DrawDocumentBackground();
     if ( bGridFirst && ( bGrid || bPage ) )
         aOutputData.DrawGrid( bGrid, bPage );
+    aOutputData.DrawBackground();
     if ( bPageMode )
     {
         // #87655# DrawPagePreview draws complete lines/page numbers, must always be clipped
diff --git sc/source/ui/view/output.cxx sc/source/ui/view/output.cxx
index 0724dd0..bdab25f 100644
--- sc/source/ui/view/output.cxx
+++ sc/source/ui/view/output.cxx
@@ -785,14 +785,23 @@ BOOL lcl_EqualBack( const RowInfo& rFirst, const RowInfo& rOther,
     return TRUE;
 }
 
-void ScOutputData::DrawBackground()
+void ScOutputData::DrawDocumentBackground()
 {
-    FindRotated();				//! von aussen ?
+    if ( !bSolidBackground )
+        return;
 
-    ScModule* pScMod = SC_MOD();
+    Size aOnePixel = pDev->PixelToLogic(Size(1,1));
+    long nOneX = aOnePixel.Width();
+    long nOneY = aOnePixel.Height();
+    Rectangle aRect(nScrX - nOneX, nScrY - nOneY, nScrX + nScrW, nScrY + nScrH);
+    Color aBgColor( SC_MOD()->GetColorConfig().GetColorValue(svtools::DOCCOLOR).nColor );
+    pDev->SetFillColor(aBgColor);
+    pDev->DrawRect(aRect);
+}
 
-    // used only if bSolidBackground is set (only for ScGridWindow):
-    Color aBgColor( pScMod->GetColorConfig().GetColorValue(svtools::DOCCOLOR).nColor );
+void ScOutputData::DrawBackground()
+{
+    FindRotated();				//! von aussen ?
 
     Rectangle aRect;
     Size aOnePixel = pDev->PixelToLogic(Size(1,1));
@@ -841,7 +850,7 @@ void ScOutputData::DrawBackground()
                 long nPosX = nScrX;
                 if ( bLayoutRTL )
                     nPosX += nMirrorW - nOneX;
-                aRect = Rectangle( nPosX,nPosY, nPosX,nPosY+nRowHeight-nOneY );
+                aRect = Rectangle( nPosX, nPosY-nOneY, nPosX, nPosY+nRowHeight-nOneY );
 
                 const SvxBrushItem* pOldBackground = NULL;
                 const SvxBrushItem* pBackground;
@@ -889,15 +898,13 @@ void ScOutputData::DrawBackground()
                         if (pOldBackground)				// ==0 if hidden
                         {
                             Color aBackCol = pOldBackground->GetColor();
-                            if ( bSolidBackground && aBackCol.GetTransparency() )
-                                aBackCol = aBgColor;
                             if ( !aBackCol.GetTransparency() )		//! partial transparency?
                             {
                                 pDev->SetFillColor( aBackCol );
                                 pDev->DrawRect( aRect );
                             }
                         }
-                        aRect.Left() = nPosX;
+                        aRect.Left() = nPosX - nSignedOneX;
                         pOldBackground = pBackground;
                     }
                     nPosX += pRowInfo[0].pCellInfo[nX+1].nWidth * nLayoutSign;
@@ -906,8 +913,6 @@ void ScOutputData::DrawBackground()
                 if (pOldBackground)
                 {
                     Color aBackCol = pOldBackground->GetColor();
-                    if ( bSolidBackground && aBackCol.GetTransparency() )
-                        aBackCol = aBgColor;
                     if ( !aBackCol.GetTransparency() )		//! partial transparency?
                     {
                         pDev->SetFillColor( aBackCol );
-- 
1.7.0.1

