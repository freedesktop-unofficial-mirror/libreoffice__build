---
 sd/source/ui/inc/Window.hxx    |    1 +
 sd/source/ui/view/sdwindow.cxx |   19 +++++++++++++++++--
 2 files changed, 18 insertions(+), 2 deletions(-)

diff --git sd/source/ui/inc/Window.hxx sd/source/ui/inc/Window.hxx
index 14919da..921f928 100755
--- sd/source/ui/inc/Window.hxx
+++ sd/source/ui/inc/Window.hxx
@@ -170,6 +170,7 @@ protected:
     Point maWinPos;
     Point maViewOrigin;
     Size maViewSize;
+    Size maPrevSize; // contains previous window size in logical coords
     USHORT mnMinZoom;
     USHORT mnMaxZoom;
     /** This flag tells whether to re-calculate the minimal zoom factor
diff --git sd/source/ui/view/sdwindow.cxx sd/source/ui/view/sdwindow.cxx
index 4f8dfe9..6c74aca 100755
--- sd/source/ui/view/sdwindow.cxx
+++ sd/source/ui/view/sdwindow.cxx
@@ -72,6 +72,7 @@ Window::Window(::Window* pParent)
       maWinPos(0, 0),			// vorsichtshalber; die Werte sollten aber
       maViewOrigin(0, 0),		// vom Besitzer des Fensters neu gesetzt
       maViewSize(1000, 1000),	// werden
+      maPrevSize(-1,-1),
       mnMinZoom(MIN_ZOOM),
       mnMaxZoom(MAX_ZOOM),
       mbMinZoomAutoCalc(false),
@@ -471,6 +472,9 @@ long Window::SetZoomFactor(long nZoom)
     aMap.SetScaleY(Fraction(nZoom, 100));
     SetMapMode(aMap);
 
+    // invalidate previous size - it was relative to the old scaling
+    maPrevSize = Size(-1,-1);
+
     // Update the map mode's origin (to what effect?).
     UpdateMapOrigin();
 
@@ -667,11 +671,20 @@ void Window::SetMinZoomAutoCalc (bool bAuto)
 
 void Window::UpdateMapOrigin(BOOL bInvalidate)
 {
-    BOOL	bChanged = FALSE;
-    Size	aWinSize = PixelToLogic(GetOutputSizePixel());
+    BOOL	   bChanged = FALSE;
+    const Size aWinSize = PixelToLogic(GetOutputSizePixel());
 
     if ( mbCenterAllowed )
     {
+        if( maPrevSize != Size(-1,-1) )
+        {
+            // keep view centered around current pos, when window
+            // resizes
+            maWinPos.X() -= (aWinSize.Width() - maPrevSize.Width()) / 2;
+            maWinPos.Y() -= (aWinSize.Height() - maPrevSize.Height()) / 2;
+            bChanged = TRUE;
+        }
+
         if ( maWinPos.X() > maViewSize.Width() - aWinSize.Width() )
         {
             maWinPos.X() = maViewSize.Width() - aWinSize.Width();
@@ -696,6 +709,8 @@ void Window::UpdateMapOrigin(BOOL bInvalidate)
 
     UpdateMapMode ();
 
+    maPrevSize = aWinSize;
+
     if (bChanged && bInvalidate)
         Invalidate();
 }
-- 
1.7.0.1

