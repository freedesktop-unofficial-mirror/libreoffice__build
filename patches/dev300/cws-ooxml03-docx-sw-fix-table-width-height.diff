Index: wrtww8.cxx
===================================================================
--- sw/source/filter/docx/docx-wrtww8.cxx	(revision 270990)
+++ sw/source/filter/docx/docx-wrtww8.cxx	(working copy)
@@ -2146,9 +2146,11 @@
     m_rWW8Export.InsUInt16( nTblOffset ); 
    
     std::vector<SwTwips> gridCols = GetGridCols( pTableTextNodeInfoInner );
+    SwTwips nSum = 0;
     for ( std::vector<SwTwips>::const_iterator it = gridCols.begin(); it != gridCols.end(); ++it )
     {
-        m_rWW8Export.InsUInt16( static_cast<USHORT>( *it ) + nTblOffset );
+        nSum += *it;
+        m_rWW8Export.InsUInt16( static_cast<USHORT>( nSum ) + nTblOffset );
     }
     
     /* TCs */
@@ -2206,14 +2208,11 @@
     
     GetTablePageSize( pTableTextNodeInfoInner, nPageSize, bRelBoxSize );
 
-    SwTwips nSz = 0;
-    
     for ( sal_uInt32 n = 0; n < nBoxes; n++ )
     {
         const SwFrmFmt* pBoxFmt = rTabBoxes[ n ]->GetFrmFmt();
         const SwFmtFrmSize& rLSz = pBoxFmt->GetFrmSize();
-        nSz += rLSz.GetWidth();
-        SwTwips nCalc = nSz;
+        SwTwips nCalc = rLSz.GetWidth();
         if (bRelBoxSize)
             nCalc = (nCalc * nPageSize) / nTblSz;
 
Index: docxattributeoutput.cxx
===================================================================
--- sw/source/filter/docx/docx-docxattributeoutput.cxx	(revision 271264)
+++ sw/source/filter/docx/docx-docxattributeoutput.cxx	(working copy)
@@ -1145,7 +1145,7 @@
     TableBackgrounds( pTableTextNodeInfoInner );
 
     // Cell prefered width
-    USHORT nWidth = m_pTableWrt->GetAbsWidth( pTableTextNodeInfoInner->getCell( ), 1 );
+    SwTwips nWidth = GetGridCols( pTableTextNodeInfoInner )[ pTableTextNodeInfoInner->getCell() ];
     m_pSerializer->singleElementNS( XML_w, XML_tcW, 
            FSNS( XML_w, XML_w ), OString::valueOf( sal_Int32( nWidth ) ).getStr( ),
            FSNS( XML_w, XML_type ), "dxa",
@@ -1382,21 +1382,25 @@
     const SwTableLine * pTabLine = pTabBox->GetUpper();    
     const SwFrmFmt * pLineFmt = pTabLine->GetFrmFmt();
 
-    long nHeight = 0;
     const SwFmtFrmSize& rLSz = pLineFmt->GetFrmSize();
     if ( ATT_VAR_SIZE != rLSz.GetHeightSizeType() && rLSz.GetHeight() )
     {
-        if ( ATT_MIN_SIZE == rLSz.GetHeightSizeType() )
-            nHeight = rLSz.GetHeight();
-        else
-            nHeight = -rLSz.GetHeight();
+        sal_Int32 nHeight = rLSz.GetHeight();
+        const char *pRule = NULL;
+
+        switch ( rLSz.GetHeightSizeType() )
+        {
+            case ATT_FIX_SIZE: pRule = "exact"; break;
+            case ATT_MIN_SIZE: pRule = "atLeast"; break;
+            default:           break;
+        }
+
+        if ( pRule )
+            m_pSerializer->singleElementNS( XML_w, XML_trHeight,
+                    FSNS( XML_w, XML_val ), OString::valueOf( nHeight ).getStr( ),
+                    FSNS( XML_w, XML_hRule ), pRule,
+                    FSEND );
     }
-
-    if ( nHeight )
-        m_pSerializer->singleElementNS( XML_w, XML_trHeight,
-               FSNS( XML_w, XML_val ), OString::valueOf( sal_Int32( nHeight ) ).getStr( ),
-               FSNS( XML_w, XML_hRule ), "exact",
-               FSEND );
 }
 
 void DocxAttributeOutput::TableCanSplit( ww8::WW8TableNodeInfoInner::Pointer_t pTableTextNodeInfoInner )
