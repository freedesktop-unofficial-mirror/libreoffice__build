--- shell/source/win32/simplemail/senddoc.cxx
+++ shell/source/win32/simplemail/senddoc.cxx
@@ -201,6 +201,20 @@ int main(int argc, char* argv[])
             
             ulRet = mapi.MAPISendMail(hSession, 0, &mapiMsg, gMapiFlags, 0);  
                   
+            // There is no point in treating an aborted mail sending
+            // dialog as an error to be returned as our exit
+            // status. If the user decided to abort sending a document
+            // as mail, OK, that is not an error.
+
+            // Also, it seems that GroupWise makes MAPISendMail()
+            // return MAPI_E_USER_ABORT even if the mail sending
+            // dialog was not aborted by the user, and the mail was
+            // actually sent just fine. See bnc#660241 (visible to
+            // Novell people only, sorry).
+
+            if (ulRet == MAPI_E_USER_ABORT)
+                ulRet = SUCCESS_SUCCESS;
+
             mapi.MAPILogoff(hSession, 0, 0, 0);
         }            
     }
@@ -299,6 +299,9 @@ int main(int argc, char* argv[])
     {
         OSL_ENSURE(false, ex.what());
     }        
+    if (ulRet != SUCCESS_SUCCESS)
+        // FIXME: Localisation of this message..
+        MessageBox( NULL, "Sending mail failed. Please save this document instead and attach it from within your e-mail client.", "OpenOffice.org senddoc.exe", MB_OK|MB_ICONERROR|MB_TOPMOST );
     return ulRet;
 }
 
--- shell/source/win32/simplemail/smplmailclient.cxx
+++ shell/source/win32/simplemail/smplmailclient.cxx
@@ -142,7 +142,7 @@ namespace /* private */
             senddocUrl.pData,
             (rtl_uString**)&rCommandArgs[0], 
             rCommandArgs.size(),
-            osl_Process_WAIT | osl_Process_DETACHED,
+            osl_Process_DETACHED,
             NULL,
             NULL,
             NULL,
@@ -152,11 +152,8 @@ namespace /* private */
         if (err != osl_Process_E_None)
             return false;
                 
-        oslProcessInfo procInfo;
-        procInfo.Size = sizeof(oslProcessInfo);    
-        osl_getProcessInfo(proc, osl_Process_EXITCODE, &procInfo);
         osl_freeProcessHandle(proc);   
-        return (procInfo.Code == SUCCESS_SUCCESS);            
+        return true;
     }
 } // namespace private 
 
