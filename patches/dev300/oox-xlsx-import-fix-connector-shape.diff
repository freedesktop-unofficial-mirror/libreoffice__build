--- oox/source/drawingml/shape.cxx.old	2009-10-08 16:17:32.000000000 +0200
+++ oox/source/drawingml/shape.cxx	2010-03-03 16:59:43.000000000 +0100
@@ -46,6 +46,7 @@
 #include <com/sun/star/beans/XMultiPropertySet.hpp>
 #include <com/sun/star/lang/XMultiServiceFactory.hpp>
 #include <com/sun/star/drawing/HomogenMatrix3.hpp>
+#include <com/sun/star/drawing/ConnectorType.hpp>
 #include <com/sun/star/text/XText.hpp>
 #include <basegfx/point/b2dpoint.hxx>
 #include <basegfx/polygon/b2dpolygon.hxx>
@@ -333,6 +334,17 @@ Reference< XShape > Shape::createAndInse
 
         maShapeProperties[ PROP_StartPosition ] <<= aAWTStartPosition;
         maShapeProperties[ PROP_EndPosition ] <<= aAWTEndPosition;
+
+        // set the connector type
+        rtl::OUString sConnectorType = mpCustomShapePropertiesPtr->getShapePresetType();
+        // FIXME: handle other connector type, should be use XEnhancedCustomShapeDefaulter?
+        ConnectorType eConnectorType = ConnectorType_STANDARD;
+        if( sConnectorType.equalsAscii("mso-spt32") )
+            eConnectorType = ConnectorType_LINE;
+        else if( sConnectorType.equalsAscii("mso-spt38") )
+            eConnectorType = ConnectorType_CURVE;
+        
+        maShapeProperties[ PROP_EdgeKind ] <<= eConnectorType;
     }
     else
     {
--- oox/source/token/properties.txt.old	2010-03-03 16:44:04.000000000 +0100
+++ oox/source/token/properties.txt	2010-03-03 16:59:43.000000000 +0100
@@ -107,6 +107,7 @@ DisplayLabels
 DrillDownOnDoubleClick
 Dropdown
 EchoChar
+EdgeKind
 Enabled
 EndPosition
 ErrorAlertStyle
--- oox/source/xls/drawingfragment.cxx.old	2009-10-08 16:17:33.000000000 +0200
+++ oox/source/xls/drawingfragment.cxx	2010-03-03 16:59:43.000000000 +0100
@@ -525,10 +525,26 @@ void OoxDrawingFragment::onEndElement( c
         case XDR_TOKEN( absoluteAnchor ):
         case XDR_TOKEN( oneCellAnchor ):
         case XDR_TOKEN( twoCellAnchor ):
-            if( mxDrawPage.is() && mxShape.get() && mxAnchor.get() && mxAnchor->isValidAnchor() )
+            if( mxDrawPage.is() && mxShape.get() )
             {
-                Rectangle aLoc = mxAnchor->calcEmuLocation( maEmuSheetSize );
-                if( (aLoc.X >= 0) && (aLoc.Y >= 0) && (aLoc.Width >= 0) && (aLoc.Height >= 0) )
+                // It seems the position and size are incorrect to use cellAnchor to create the shape
+                // so if the size and position are defined, use them to set the shape postion and size.
+                Rectangle aLoc( -1, -1, -1, -1 );;
+                Size aSize = mxShape->getSize();
+                if( aSize.Width > 0 || aSize.Height > 0 )
+                {
+                    Point aPoint = mxShape->getPosition();
+                    aLoc.X = aPoint.X;
+                    aLoc.Y = aPoint.Y;
+                    aLoc.Width = aSize.Width;
+                    aLoc.Height = aSize.Height;
+                }
+                else if( mxAnchor.get() && mxAnchor->isValidAnchor() )
+                {
+                    aLoc = mxAnchor->calcEmuLocation( maEmuSheetSize );
+                }    
+
+                if( (aLoc.Width >= 0) && (aLoc.Height >= 0) )
                     mxShape->addShape( getOoxFilter(), getThemeRef(), mxDrawPage, &aLoc );
             }
             mxShape.reset();
