Fix for crashing on un-connected connectors

From: Thorsten Behrens <thb@openoffice.org>


---

 oox/source/export/drawingml.cxx |   18 ++++++++++--------
 oox/source/export/shapes.cxx    |    6 ++++++
 2 files changed, 16 insertions(+), 8 deletions(-)


diff --git oox/source/export/drawingml.cxx oox/source/export/drawingml.cxx
index 1d29513..338a40f 100644
--- oox/source/export/drawingml.cxx
+++ oox/source/export/drawingml.cxx
@@ -1329,14 +1329,16 @@ void DrawingML::WritePolyPolygon( const PolyPolygon& rPolyPolygon )
 
 void DrawingML::WriteConnectorConnections( EscherConnectorListEntry& rConnectorEntry, sal_Int32 nStartID, sal_Int32 nEndID )
 {
-    mpFS->singleElementNS( XML_a, XML_stCxn,
-                           XML_id, I32S( nStartID ),
-                           XML_idx, I64S( rConnectorEntry.GetConnectorRule( TRUE ) ),
-                           FSEND );
-    mpFS->singleElementNS( XML_a, XML_endCxn,
-                           XML_id, I32S( nEndID ),
-                           XML_idx, I64S( rConnectorEntry.GetConnectorRule( FALSE ) ),
-                           FSEND );
+    if( nStartID != -1 )
+        mpFS->singleElementNS( XML_a, XML_stCxn,
+                               XML_id, I32S( nStartID ),
+                               XML_idx, I64S( rConnectorEntry.GetConnectorRule( TRUE ) ),
+                               FSEND );
+    if( nEndID != -1 )
+        mpFS->singleElementNS( XML_a, XML_endCxn,
+                               XML_id, I32S( nEndID ),
+                               XML_idx, I64S( rConnectorEntry.GetConnectorRule( FALSE ) ),
+                               FSEND );
 }
 
 // from sw/source/filter/ww8/wrtw8num.cxx for default bullets to export to MS intact
diff --git oox/source/export/shapes.cxx oox/source/export/shapes.cxx
index 08d0e0d..aae6d67 100644
--- oox/source/export/shapes.cxx
+++ oox/source/export/shapes.cxx
@@ -979,6 +979,9 @@ size_t ShapeExport::ShapeHash::operator()( const ::com::sun::star::uno::Referenc
 
 sal_Int32 ShapeExport::GetNewShapeID( const Reference< XShape > rXShape )
 {
+    if( !rXShape.is() )
+        return -1;
+
     sal_Int32 nID = GetFB()->GetUniqueId();
 
     maShapeMap[ rXShape ] = nID;
@@ -988,6 +991,9 @@ sal_Int32 ShapeExport::GetNewShapeID( const Reference< XShape > rXShape )
 
 sal_Int32 ShapeExport::GetShapeID( const Reference< XShape > rXShape )
 {
+    if( !rXShape.is() )
+        return -1;
+
     ShapeHashMap::const_iterator aIter = maShapeMap.find( rXShape );
 
     if( aIter == maShapeMap.end() )
