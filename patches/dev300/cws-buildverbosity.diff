The quiet build fixes from buildverbosity01 cws

From: Thorsten Behrens <thb@openoffice.org>


---

 dmake/make.c                                  |    5 
 dmake/tests/misc-13                           |    2 
 dmake/tests/misc-15                           |    2 
 dmake/tests/targets-28                        |    4 
 idl/inc/command.hxx                           |    1 
 idl/inc/database.hxx                          |    7 
 idl/source/prj/command.cxx                    |   10 
 idl/source/prj/database.cxx                   |    6 
 idl/source/prj/svidl.cxx                      |    8 
 idlc/inc/idlc/options.hxx                     |    4 
 idlc/source/idlcmain.cxx                      |   31 -
 idlc/source/options.cxx                       |   18 
 offapi/util/makefile.mk                       |   12 
 offapi/util/target.pmk                        |    4 
 rsc/inc/rscerror.h                            |   14 
 rsc/source/parser/erscerr.cxx                 |   13 
 rsc/source/parser/rscyacc.cxx                 |    2 
 rsc/source/prj/gui.cxx                        |   16 
 rsc/source/prj/start.cxx                      |   90 +-
 rsc/source/rsc/rsc.cxx                        |   51 +
 scp2/macros/makefile.mk                       |    2 
 scp2/source/templates/makefile.mk             |    2 
 scp2/source/templates/modules.pl              |    3 
 slideshow/util/makefile.mk                    |    4 
 slideshow/util/makefile.pmk                   |    4 
 solenv/bin/build.pl                           |   17 
 solenv/bin/checkdll.sh                        |   42 -
 solenv/bin/deliver.pl                         |    2 
 solenv/bin/mhids.pl                           |   26 -
 solenv/inc/_tg_app.mk                         |  710 ++++++++------
 solenv/inc/_tg_def.mk                         |  380 ++++---
 solenv/inc/_tg_lib.mk                         |  200 +++-
 solenv/inc/_tg_rslb.mk                        |  140 ++-
 solenv/inc/_tg_scp.mk                         |   80 +-
 solenv/inc/_tg_sdi.mk                         |  110 ++
 solenv/inc/_tg_shl.mk                         | 1280 ++++++++++++++-----------
 solenv/inc/_tg_srs.mk                         |   60 +
 solenv/inc/_tg_zip.mk                         |  620 ++++++------
 solenv/inc/ant.mk                             |    2 
 solenv/inc/extension_post.mk                  |   18 
 solenv/inc/pstrules.mk                        |   54 +
 solenv/inc/rules.mk                           |  448 +++++----
 solenv/inc/settings.mk                        |   17 
 solenv/inc/target.mk                          |  111 +-
 solenv/inc/tg_app.mk                          |   71 +
 solenv/inc/tg_config.mk                       |   57 +
 solenv/inc/tg_def.mk                          |   38 -
 solenv/inc/tg_dep.mk                          |    6 
 solenv/inc/tg_ext.mk                          |   90 +-
 solenv/inc/tg_jar.mk                          |    4 
 solenv/inc/tg_java.mk                         |    4 
 solenv/inc/tg_lib.mk                          |   20 
 solenv/inc/tg_moz.mk                          |    8 
 solenv/inc/tg_obj.mk                          |   22 
 solenv/inc/tg_res.mk                          |   10 
 solenv/inc/tg_rslb.mk                         |   14 
 solenv/inc/tg_scp.mk                          |    8 
 solenv/inc/tg_sdi.mk                          |   11 
 solenv/inc/tg_shl.mk                          |  128 +--
 solenv/inc/tg_slo.mk                          |   20 
 solenv/inc/tg_srs.mk                          |    6 
 solenv/inc/tg_wntx64.mk                       |   68 +
 solenv/inc/tg_yxx.mk                          |   18 
 solenv/inc/tg_zip.mk                          |   62 +
 solenv/inc/wntmsci11.mk                       |   11 
 soltools/HIDCompiler/hidclex.l                |   67 +
 soltools/checkdll/checkdll.c                  |   14 
 soltools/cpp/_cpp.c                           |    2 
 udkapi/util/target.pmk                        |    4 
 vcl/source/window/makefile.mk                 |    6 
 vcl/unx/source/gdi/makefile.mk                |    4 
 writerfilter/source/doctok/makefile.mk        |   16 
 writerfilter/source/ooxml/makefile.mk         |   43 +
 writerfilter/source/resourcemodel/makefile.mk |   35 -
 74 files changed, 3191 insertions(+), 2308 deletions(-)


diff --git dmake/make.c dmake/make.c
index 0dfad3b..b7bbdfd 100644
--- dmake/make.c
+++ dmake/make.c
@@ -251,8 +251,9 @@ Make_targets()/*
 
    for( lp = Targets->ce_prq; lp != NIL(LINK); lp = lp->cl_next ) {
       CELLPTR tgt = lp->cl_prq;
-      if( !(tgt->ce_attr & A_UPDATED) )
-     printf( "`%s' is up to date\n", tgt->CE_NAME );
+      if( !(tgt->ce_attr & A_UPDATED) 
+          && (Verbose & V_MAKE) )
+          printf( "`%s' is up to date\n", tgt->CE_NAME );
    }
 
    DB_RETURN( 0 );
diff --git dmake/tests/misc-13 dmake/tests/misc-13
index a2381a8..7493e74 100755
--- dmake/tests/misc-13
+++ dmake/tests/misc-13
@@ -38,7 +38,7 @@ TeSt.target :
 
 EOT
 
-output=`eval ${DMAKEPROG} -r -f $file1`
+output=`eval ${DMAKEPROG} -vm -r -f $file1`
 result=$?
 
 if echo "$output" | grep -v ".target' is up to date"  > /dev/null 2>&1 ; then
diff --git dmake/tests/misc-15 dmake/tests/misc-15
index 1c52324..a213c2d 100755
--- dmake/tests/misc-15
+++ dmake/tests/misc-15
@@ -37,7 +37,7 @@ MYTARGET:=\$(PWD)/target.abc
 
 EOT
 
-output=`eval ${DMAKEPROG} -r -f $file1`
+output=`eval ${DMAKEPROG} -vm -r -f $file1`
 result=$?
 
 if echo "$output" | grep "target.abc' is up to date"  > /dev/null 2>&1 ; then
diff --git dmake/tests/targets-28 dmake/tests/targets-28
index da202b0..0943eb6 100755
--- dmake/tests/targets-28
+++ dmake/tests/targets-28
@@ -112,10 +112,10 @@ sleep 1
 
 # This tests that aa.x is not build as the dependency chain is intact with
 # the virtual target aa.y having the same time stamp as aa.z.
-output3=`eval ${DMAKEPROG} -rf $file1 2>&1`
+output3=`eval ${DMAKEPROG} -vm -rf $file1 2>&1`
 result3=$?
 
-if test $result3 = 0 -a "$output3" = "\`aa.x' is up to date" ; then
+if test $result3 = 0 && echo "$output3" | grep "aa.x' is up to date"  > /dev/null 2>&1 ; then
   echo "Subtest 3: OK"
   result3=0
 else
diff --git idl/inc/command.hxx idl/inc/command.hxx
index b76e856..792039e 100644
--- idl/inc/command.hxx
+++ idl/inc/command.hxx
@@ -65,6 +65,7 @@ public:
     String      aCSVFile;
     String      aExportFile;
     String      aDocuFile;
+    UINT32      nVerbosity;
     UINT32      nFlags;
 
                 SvCommand( int argc, char ** argv );
diff --git idl/inc/database.hxx idl/inc/database.hxx
index 3a3e033..4daa5b9 100644
--- idl/inc/database.hxx
+++ idl/inc/database.hxx
@@ -39,6 +39,8 @@
 /*************************************************************************
 *************************************************************************/
 
+class SvCommand;
+
 #ifdef IDL_COMPILER
 /******************** class SvIdlError ***********************************/
 class SvIdlError
@@ -70,6 +72,7 @@ class SvIdlDataBase
     BOOL  						bExport;
     String                      aExportFile;
     sal_uInt32					nUniqueId;
+    sal_uInt32                  nVerbosity;
     String                      aDataBaseFile;
     SvFileStream *              pStm;
     BOOL                        bIsModified;
@@ -96,7 +99,7 @@ protected:
                                 }
 #endif
 public:
-                SvIdlDataBase();
+                explicit SvIdlDataBase( const SvCommand& rCmd );
                 ~SvIdlDataBase();
     static BOOL IsBinaryFormat( SvStream & rInStm );
 
@@ -165,7 +168,7 @@ public:
 class SvIdlWorkingBase : public SvIdlDataBase
 {
 public:
-                SvIdlWorkingBase();
+                explicit SvIdlWorkingBase( const SvCommand& rCmd );
 
     BOOL        ReadSvIdl( SvTokenStream &, BOOL bImported, const String & rPath );
     BOOL        WriteSvIdl( SvStream & );
diff --git idl/source/prj/command.cxx idl/source/prj/command.cxx
index 861b809..bbbda71 100644
--- idl/source/prj/command.cxx
+++ idl/source/prj/command.cxx
@@ -258,7 +258,7 @@ static BOOL ResponseFile( StringList * pList, int argc, char ** argv )
 |*	  Beschreibung
 *************************************************************************/
 SvCommand::SvCommand( int argc, char ** argv )
-    : nFlags( 0 )
+	: nVerbosity(1), nFlags( 0 )
 {
     StringList aList;
 
@@ -353,6 +353,14 @@ SvCommand::SvCommand( int argc, char ** argv )
             { // Hilfe
                 printf( "%s", CommandLineSyntax );
             }
+            else if( aParam.EqualsIgnoreCaseAscii( "quiet" ) )
+            {
+                nVerbosity = 0;
+            }
+            else if( aParam.EqualsIgnoreCaseAscii( "verbose" ) )
+            {
+                nVerbosity = 2;
+            }
             else if( aParam.EqualsIgnoreCaseAscii( "syntax" ) )
             { // Hilfe
                 int j = 0;
diff --git idl/source/prj/database.cxx idl/source/prj/database.cxx
index 36aeae4..7270423 100644
--- idl/source/prj/database.cxx
+++ idl/source/prj/database.cxx
@@ -58,9 +58,10 @@ void PrimeNumber(){
 }
 */
 
-SvIdlDataBase::SvIdlDataBase()
+SvIdlDataBase::SvIdlDataBase( const SvCommand& rCmd )
     : bExport( FALSE )
     , nUniqueId( 0 )
+    , nVerbosity( rCmd.nVerbosity )
     , bIsModified( FALSE )
     , aPersStream( *IDLAPP->pClassMgr, NULL )
     , pIdTable( NULL )
@@ -700,6 +701,7 @@ SvMetaClass * SvIdlDataBase::ReadKnownClass( SvTokenStream & rInStm )
 void SvIdlDataBase::Write( const ByteString & rText )
 {
 #ifndef W31
+    if( nVerbosity != 0 )
         fprintf( stdout, "%s", rText.GetBuffer() );
 #endif
 }
@@ -803,7 +805,7 @@ void SvIdlDataBase::WriteError( SvTokenStream & rInStm )
 |*
 |*    Beschreibung
 *************************************************************************/
-SvIdlWorkingBase::SvIdlWorkingBase()
+SvIdlWorkingBase::SvIdlWorkingBase(const SvCommand& rCmd) : SvIdlDataBase(rCmd)
 {
 }
 
diff --git idl/source/prj/svidl.cxx idl/source/prj/svidl.cxx
index 40ea9f7..6dbd39e 100644
--- idl/source/prj/svidl.cxx
+++ idl/source/prj/svidl.cxx
@@ -112,8 +112,6 @@ int cdecl main ( int argc, char ** argv)
 {
 #endif
 
-    printf( "StarView Interface Definition Language (IDL) Compiler 3.0\n" );
-
 /*
     pStr = ::ResponseFile( &aCmdLine, argv, argc );
     if( pStr )
@@ -136,8 +134,12 @@ int cdecl main ( int argc, char ** argv)
     String aTmpDocuFile;
 
     SvCommand aCommand( argc, argv );
+
+    if( aCommand.nVerbosity != 0 )
+        printf( "StarView Interface Definition Language (IDL) Compiler 3.0\n" );
+
     Init();
-    SvIdlWorkingBase * pDataBase = new SvIdlWorkingBase();
+	SvIdlWorkingBase * pDataBase = new SvIdlWorkingBase(aCommand);
 
     int nExit = 0;
     if( aCommand.aExportFile.Len() )
diff --git idlc/inc/idlc/options.hxx idlc/inc/idlc/options.hxx
index 1e0a6a9..743ce12 100644
--- idlc/inc/idlc/options.hxx
+++ idlc/inc/idlc/options.hxx
@@ -69,11 +69,15 @@ public:
 
     const StringVector& getInputFiles() const { return m_inputFiles; }
     bool readStdin() const { return m_stdin; }
+    bool verbose() const { return m_verbose; }
+    bool quiet() const { return m_quiet; }
 
 protected:
     ::rtl::OString 	m_program;
     StringVector	m_inputFiles;
     bool            m_stdin;
+    bool            m_verbose;
+    bool            m_quiet;
     OptionMap		m_options;
 };
     
diff --git idlc/source/idlcmain.cxx idlc/source/idlcmain.cxx
index 18eb90b..f993707 100644
--- idlc/source/idlcmain.cxx
+++ idlc/source/idlcmain.cxx
@@ -56,11 +56,12 @@ SAL_IMPLEMENT_MAIN_WITH_ARGS(argc, argv)
 
     sal_Int32 nErrors = 0;
     if (options.readStdin()) {
-        fprintf(
-            stdout, "%s: compile stdin...\n",
-            options.getProgramName().getStr());
+        if ( !options.quiet() )
+            fprintf(
+                stdout, "%s: Compiling stdin\n",
+                options.getProgramName().getStr());
         nErrors = compileFile(0);
-        if (idlc()->getWarningCount() > 0) {
+        if ( ( idlc()->getWarningCount() > 0 ) && !options.quiet() ) {
             fprintf(
                 stdout, "%s: detected %lu warnings compiling stdin\n",
                 options.getProgramName().getStr(),
@@ -85,16 +86,23 @@ SAL_IMPLEMENT_MAIN_WITH_ARGS(argc, argv)
         idlc()->reset();
     }
     StringVector const & files = options.getInputFiles();
+    if ( options.verbose() )
+    {
+        fprintf( stdout, "%s: compiling %i source files ... \n",
+            options.getProgramName().getStr(), (int)files.size() );
+        fflush( stdout );
+    }
     for (StringVector::const_iterator i(files.begin());
          i != files.end() && nErrors == 0; ++i)
     {
         OString sysFileName( convertToAbsoluteSystemPath(*i) );
 
-        fprintf(stdout, "%s: compile '%s' ... \n",
-            options.getProgramName().getStr(), (*i).getStr());
+        if ( !options.quiet() )
+            fprintf(stdout, "Compiling: %s\n",
+                (*i).getStr());
         nErrors = compileFile(&sysFileName);
 
-        if ( idlc()->getWarningCount() )
+        if ( idlc()->getWarningCount() && !options.quiet() )
             fprintf(stdout, "%s: detected %lu warnings compiling file '%s'\n",
                     options.getProgramName().getStr(),
                     sal::static_int_cast< unsigned long >(
@@ -128,15 +136,16 @@ SAL_IMPLEMENT_MAIN_WITH_ARGS(argc, argv)
 
     if ( nErrors > 0 )
     {
-        fprintf(stdout, "%s: detected %ld errors%s",
+        fprintf(stderr, "%s: detected %ld errors%s",
             options.getProgramName().getStr(),
             sal::static_int_cast< long >(nErrors), 
             options.prepareVersion().getStr());
     } else
     {
-        fprintf(stdout, "%s: returned successful%s",
-            options.getProgramName().getStr(),
-            options.prepareVersion().getStr());
+        if ( options.verbose() )
+            fprintf(stdout, "%s: returned successful%s",
+                options.getProgramName().getStr(),
+                options.prepareVersion().getStr());
     }
     return nErrors;
 }
diff --git idlc/source/options.cxx idlc/source/options.cxx
index efe97bb..35c5f14 100644
--- idlc/source/options.cxx
+++ idlc/source/options.cxx
@@ -37,7 +37,7 @@
 
 using namespace rtl;
 
-Options::Options(): m_stdin(false)
+Options::Options(): m_stdin(false), m_verbose(false), m_quiet(false)
 {
 }	
 
@@ -190,6 +190,22 @@ sal_Bool Options::initOptions(int ac, char* av[], sal_Bool bCmdFile)
                 } else
                     throw IllegalArgument(OString(av[j]) + ", please check your input");
                 break;
+            case 'v':
+                if ( 0 == strcmp( &av[j][1], "verbose" ) )
+                {
+                    m_verbose = true;
+                }
+                else
+                    throw IllegalArgument(OString(av[j]) + ", please check your input");
+                break;
+            case 'q':
+                if ( 0 == strcmp( &av[j][1], "quiet" ) )
+                {
+                    m_quiet = true;
+                }
+                else
+                    throw IllegalArgument(OString(av[j]) + ", please check your input");
+                break;
             case 'w':
                 if (av[j][2] == 'e' && av[j][3] == '\0') {
                     if (m_options.count("-we") == 0)
diff --git offapi/util/makefile.mk offapi/util/makefile.mk
index 7093a78..d54d851 100644
--- offapi/util/makefile.mk
+++ offapi/util/makefile.mk
@@ -164,14 +164,14 @@ ALLTAR : $(UCR)$/types.db \
        $(UNOTYPE_STATISTICS)
 
 $(UCR)$/types.db : $(UCR)$/offapi.db $(SOLARBINDIR)$/udkapi.rdb
-    -$(RM) $(REGISTRYCHECKFLAG)
-    $(GNUCOPY) -f $(UCR)$/offapi.db $@
-    $(REGMERGE) $@ / $(SOLARBINDIR)$/udkapi.rdb
+    @-$(RM) $(REGISTRYCHECKFLAG)
+    @$(GNUCOPY) -f $(UCR)$/offapi.db $@
+    $(COMMAND_ECHO)$(REGMERGE) $@ / $(SOLARBINDIR)$/udkapi.rdb
 
 $(OUT)$/ucrdoc$/types_doc.db : $(OUT)$/ucrdoc$/offapi_doc.db $(SOLARBINDIR)$/udkapi_doc.rdb
-    -$(RM) $(REGISTRYCHECKFLAG)
-    $(GNUCOPY) -f $(OUT)$/ucrdoc$/offapi_doc.db $@
-    $(REGMERGE) $@ / $(SOLARBINDIR)$/udkapi_doc.rdb
+    @-$(RM) $(REGISTRYCHECKFLAG)
+    @$(GNUCOPY) -f $(OUT)$/ucrdoc$/offapi_doc.db $@
+    $(COMMAND_ECHO)$(REGMERGE) $@ / $(SOLARBINDIR)$/udkapi_doc.rdb
 
 #JSC: The type library has changed, all temporary not checked types are removed
 #     and will be check from now on.
diff --git offapi/util/target.pmk offapi/util/target.pmk
index 08912b0..af086d9 100644
--- offapi/util/target.pmk
+++ offapi/util/target.pmk
@@ -30,8 +30,8 @@
 #*************************************************************************
 
 $(OUT)$/misc$/$(TARGET).idls: makefile.mk
-    -$(RM) $@
-    $(TYPE) $(mktmp $(foreach,i,$(IDLFILES) $(PACKAGE)$/$i)) >>$@
+	$(COMMAND_ECHO)-$(RM) $@
+	$(COMMAND_ECHO)$(TYPE) $(mktmp $(foreach,i,$(IDLFILES) $(PACKAGE)$/$i)) >>$@
 
 ALLTAR: $(OUT)$/misc$/$(TARGET).idls
 
diff --git rsc/inc/rscerror.h rsc/inc/rscerror.h
index 5cc8f96..643d6fb 100644
--- rsc/inc/rscerror.h
+++ rsc/inc/rscerror.h
@@ -120,9 +120,17 @@ public:
 class RscId;
 class RscTop;
 
+enum RscVerbosity
+{
+    RscVerbositySilent = 0,
+    RscVerbosityNormal = 1,
+    RscVerbosityVerbose = 2
+};
+
 class RscError
 {
     FILE *	fListing;
+    RscVerbosity m_verbosity;
 
     void WriteError( const ERRTYPE& rError, const char * pMessage );
     void StdLstOut( const char * pStr );
@@ -131,9 +139,10 @@ class RscError
                       const RscId & aId );
 public:
     sal_uInt32	nErrors;// Anzahl der Fehler
-                    RscError(){
+					RscError( RscVerbosity _verbosity ) {
                         fListing = NULL;
                         nErrors = 0;
+                        m_verbosity = _verbosity;
                     };
     void			SetListFile( FILE * fList ){
                         fListing = fList;
@@ -141,7 +150,8 @@ public:
     FILE *			GetListFile(){
                         return fListing;
                     };
-    virtual void	StdOut( const char * );
+    RscVerbosity    GetVerbosity() const { return m_verbosity; }
+	virtual void	StdOut( const char *, const RscVerbosity _verbosityLevel = RscVerbosityNormal );
     virtual void	StdErr( const char * );
     virtual void	LstOut( const char * );
     virtual void	Error( const ERRTYPE& rError, RscTop* pClass, const RscId &aId,
diff --git rsc/source/parser/erscerr.cxx rsc/source/parser/erscerr.cxx
index 0027666..0dc33e9 100644
--- rsc/source/parser/erscerr.cxx
+++ rsc/source/parser/erscerr.cxx
@@ -69,14 +69,15 @@ ERRTYPE& ERRTYPE::operator = ( const ERRTYPE & rError )
 |*	  Letzte Aenderung	MM 06.05.91
 |*
 *************************************************************************/
-void RscError::StdOut( const char * pStr )
+void RscError::StdOut( const char * pStr, const RscVerbosity _verbosityLevel )
 {
-#ifndef WIN
-    if( pStr ){
-        printf( "%s", pStr );
-        fflush( stdout );
+    if ( m_verbosity >= _verbosityLevel )
+    {
+	    if( pStr ){
+		    printf( "%s", pStr );
+		    fflush( stdout );
+	    }
     }
-#endif
 }
 
 /*************************************************************************
diff --git rsc/source/parser/rscyacc.cxx rsc/source/parser/rscyacc.cxx
index af8b0a3..590aba6 100644
--- rsc/source/parser/rscyacc.cxx
+++ rsc/source/parser/rscyacc.cxx
@@ -190,7 +190,7 @@ BOOL DoClassHeader( RSCHEADER * pHeader, BOOL bMember )
 
             ObjNode * pNode = new ObjNode( aName1, S.Top().pData,
                                            pFI->GetFileIndex() );
-            pTC->pEH->StdOut( "." );
+			pTC->pEH->StdOut( ".", RscVerbosityVerbose );
 
             if( !aName1.IsId() )
                 pTC->pEH->Error( ERR_IDEXPECTED, pHeader->pClass, aName1 );
diff --git rsc/source/prj/gui.cxx rsc/source/prj/gui.cxx
index 066e0d4..742e440 100644
--- rsc/source/prj/gui.cxx
+++ rsc/source/prj/gui.cxx
@@ -57,6 +57,20 @@ static RscCompiler * pRscCompiler = NULL;
         delete pRscCompiler;
 }
 
+RscVerbosity lcl_determineVerbosity( int argc, char ** argv )
+{
+    for ( int i = 0; i < argc; ++i )
+    {
+        if ( argv[i] == NULL )
+            continue;
+        if ( rsc_stricmp( argv[i], "-verbose" ) == 0 )
+            return RscVerbosityVerbose;
+        if ( rsc_stricmp( argv[i], "-quiet" ) == 0 )
+            return RscVerbositySilent;
+    }
+    return RscVerbosityNormal;
+}
+
 #if defined( UNX ) || ( defined( OS2 ) && ( defined( CSET ) || defined ( GCC ))) || defined (WTC) || defined(ICC) || defined(__MINGW32__)
 int main ( int argc, char ** argv) {
 #else
@@ -80,7 +94,7 @@ int cdecl main ( int argc, char ** argv) {
     ERRTYPE 	aError;
 
     InitRscCompiler();
-    RscError*	pErrHdl    = new RscError();
+    RscError*	pErrHdl    = new RscError( lcl_determineVerbosity( argc, argv ) );
 #ifdef MTW
     RscCmdLine* pCmdLine   = new RscCmdLine( argc, (char **)argv, pErrHdl );
 #else
diff --git rsc/source/prj/start.cxx rsc/source/prj/start.cxx
index 42ff95c..4b8dcc3 100644
--- rsc/source/prj/start.cxx
+++ rsc/source/prj/start.cxx
@@ -56,6 +56,7 @@
 
 #endif // UNX
 #include <rsctools.hxx>
+#include <rscerror.h>
 #include <tools/fsys.hxx>
 
 /*************** C O D E ************************************************/
@@ -111,25 +112,38 @@ static BOOL CallPrePro( const ByteString& rPrePro,
 
     if( !fRspFile )
         aNewCmdL.Append( rsc_strdup( rPrePro.GetBuffer() ) );
-    for( i = 1; i < int(pCmdLine->GetCount() -1); i++ ){
-        if( !rsc_strnicmp( (char *)pCmdLine->GetEntry( i ), "-u", 2 )
-          || !rsc_strnicmp( (char *)pCmdLine->GetEntry( i ), "-i", 2 )
-          || !rsc_strnicmp( (char *)pCmdLine->GetEntry( i ), "-d", 2 ) )
+
+    bool bVerbose = false;
+	for( i = 1; i < int(pCmdLine->GetCount() -1); i++ )
+    {
+        if ( 0 == rsc_stricmp( (char *)pCmdLine->GetEntry( i ), "-verbose" ) )
         {
+            bVerbose = true;
+            continue;
+        }
+		if  (   !rsc_strnicmp( (char *)pCmdLine->GetEntry( i ), "-u", 2 )
+		    ||  !rsc_strnicmp( (char *)pCmdLine->GetEntry( i ), "-i", 2 )
+		    ||  !rsc_strnicmp( (char *)pCmdLine->GetEntry( i ), "-d", 2 )
+            )
+      {
             aNewCmdL.Append( rsc_strdup( (char *)pCmdLine->GetEntry( i ) ) );
         }
-    };
+    }
+
     aNewCmdL.Append( rsc_strdup( rInput.GetBuffer() ) );
     aNewCmdL.Append( rsc_strdup( rOutput.GetBuffer() ) );
     aNewCmdL.Append( (void *)0 );
 
-    printf( "Preprocessor commandline: " );
-    for( i = 0; i < (int)(pCmdL->GetCount() -1); i++ )
+    if ( bVerbose )
     {
-        printf( " " );
-        printf( "%s", (const char *)pCmdL->GetEntry( i ) );
+        printf( "Preprocessor commandline: " );
+        for( i = 0; i < (int)(pCmdL->GetCount() -1); i++ )
+        {
+            printf( " " );
+            printf( "%s", (const char *)pCmdL->GetEntry( i ) );
+        }
+        printf( "\n" );
     }
-    printf( "\n" );
 
     if( fRspFile )
     {
@@ -150,13 +164,16 @@ static BOOL CallPrePro( const ByteString& rPrePro,
         }
         fclose( fRspFile );
 
-        printf( "Preprocessor startline: " );
-        for( i = 0; i < (int)(pCmdL->GetCount() -1); i++ )
+        if ( bVerbose )
         {
-            printf( " " );
-            printf( "%s", (const char *)pCmdL->GetEntry( i ) );
+            printf( "Preprocessor startline: " );
+            for( i = 0; i < (int)(pCmdL->GetCount() -1); i++ )
+            {
+                printf( " " );
+                printf( "%s", (const char *)pCmdL->GetEntry( i ) );
+            }
+            printf( "\n" );
         }
-        printf( "\n" );
     }
 
 #if ((defined OS2 || defined WNT) && (defined TCPP || defined tcpp)) || defined UNX || defined OS2
@@ -194,7 +211,6 @@ static BOOL CallRsc2( ByteString aRsc2Name,
                       ByteString aSrsName,
                       RscPtrPtr * pCmdLine )
 {
-    RscPtrPtr		aNewCmdL;		// Kommandozeile
     int 			i, nExit;
     ByteString* 	pString;
     ByteString		aRspFileName;	// Response-Datei
@@ -203,22 +219,22 @@ static BOOL CallRsc2( ByteString aRsc2Name,
     aRspFileName = ::GetTmpFileName();
     fRspFile = fopen( aRspFileName.GetBuffer(), "w" );
 
-    printf( "Rsc2 commandline: " );
-    aNewCmdL.Append( rsc_strdup( aRsc2Name.GetBuffer() ) );
-    printf( "%s", (const char *)aNewCmdL.GetEntry( aNewCmdL.GetCount() -1 ) );
-    printf( " " );
-    ByteString aTmpStr( '@' );
-    aTmpStr += aRspFileName;
-    aNewCmdL.Append( rsc_strdup( aTmpStr.GetBuffer() ) );
-    printf( "%s", (const char *)aNewCmdL.GetEntry( aNewCmdL.GetCount() -1 ) );
-    aNewCmdL.Append( (void *)0 );
-    printf( "\n" );
-
+    RscVerbosity eVerbosity = RscVerbosityNormal;
     if( fRspFile )
     {
         for( i = 1; i < (int)(pCmdLine->GetCount() -1); i++ )
         {
-            if( !rsc_strnicmp( (char *)pCmdLine->GetEntry( i ),  "-fp=", 4 )
+            if ( !rsc_stricmp( (char *)pCmdLine->GetEntry( i ), "-verbose" ) )
+            {
+                eVerbosity = RscVerbosityVerbose;
+                continue;
+            }
+	  if ( !rsc_stricmp( (char *)pCmdLine->GetEntry( i ), "-quiet" ) )
+            {
+                eVerbosity = RscVerbositySilent;
+                continue;
+            }
+          if( !rsc_strnicmp( (char *)pCmdLine->GetEntry( i ),  "-fp=", 4 )
               || !rsc_strnicmp( (char *)pCmdLine->GetEntry( i ), "-fo=", 4 )
               || !rsc_strnicmp( (char *)pCmdLine->GetEntry( i ), "-pp=", 4 )
               || !rsc_strnicmp( (char *)pCmdLine->GetEntry( i ), "-rsc2=", 6 )
@@ -261,6 +277,22 @@ static BOOL CallRsc2( ByteString aRsc2Name,
         fclose( fRspFile );
     };
 
+	RscPtrPtr		aNewCmdL;		// Kommandozeile
+	aNewCmdL.Append( rsc_strdup( aRsc2Name.GetBuffer() ) );
+	ByteString aTmpStr( '@' );
+	aTmpStr += aRspFileName;
+	aNewCmdL.Append( rsc_strdup( aTmpStr.GetBuffer() ) );
+	aNewCmdL.Append( (void *)0 );
+
+    if ( eVerbosity >= RscVerbosityVerbose )
+    {
+	    printf( "Rsc2 commandline: " );
+	    printf( "%s", (const char *)aNewCmdL.GetEntry( 0 ) );
+	    printf( " " );
+	    printf( "%s", (const char *)aNewCmdL.GetEntry( 1 ) );
+	    printf( "\n" );
+    }
+
 #if ((defined OS2 || defined WNT) && (defined TCPP || defined tcpp)) || defined UNX || defined OS2
     nExit = spawnvp( P_WAIT, aRsc2Name.GetBuffer(), (char* const*)aNewCmdL.GetBlock() );
 #elif defined CSET
@@ -328,8 +360,6 @@ int cdecl main ( int argc, char ** argv)
     aRsc2Name += aDelim;
     aRsc2Name += ByteString("rsc2");
 
-    printf( "VCL Resource Compiler 3.0\n" );
-
     pStr = ::ResponseFile( &aCmdLine, argv, argc );
     if( pStr )
     {
diff --git rsc/source/rsc/rsc.cxx rsc/source/rsc/rsc.cxx
index 876882e..0068dd8 100644
--- rsc/source/rsc/rsc.cxx
+++ rsc/source/rsc/rsc.cxx
@@ -520,15 +520,18 @@ printf( "khg\n" );
         }
     };
 
-    pTC->pEH->StdOut( "Files: " );
-    pFName = pTC->aFileTab.First();
-    while( pFName )
+    if ( pTC->pEH->GetVerbosity() >= RscVerbosityVerbose )
     {
-        pTC->pEH->StdOut( pFName->aFileName.GetBuffer() );
-        pTC->pEH->StdOut( " " );
-        pFName = pTC->aFileTab.Next();
-    };
-    pTC->pEH->StdOut( "\n" );
+	    pTC->pEH->StdOut( "Files: " );
+	    pFName = pTC->aFileTab.First();
+	    while( pFName )
+	    {
+		    pTC->pEH->StdOut( pFName->aFileName.GetBuffer() );
+		    pTC->pEH->StdOut( " " );
+		    pFName = pTC->aFileTab.Next();
+	    };
+	    pTC->pEH->StdOut( "\n" );
+    }
 
     if( aError.IsOk() )
         aError = Link();
@@ -554,9 +557,9 @@ void RscCompiler::EndCompile()
 {
     if( pCL->aOutputSrs.Len() && (pCL->nCommands & NOLINK_FLAG) )
     {
-        pTC->pEH->StdOut( "Writing file " );
-        pTC->pEH->StdOut( pCL->aOutputSrs.GetBuffer() );
-        pTC->pEH->StdOut( ".\n" );
+		pTC->pEH->StdOut( "Writing file ", RscVerbosityVerbose );
+		pTC->pEH->StdOut( pCL->aOutputSrs.GetBuffer(), RscVerbosityVerbose );
+		pTC->pEH->StdOut( ".\n", RscVerbosityVerbose );
 
         // kopiere von TMP auf richtigen Namen
         unlink( pCL->aOutputSrs.GetBuffer() );	 // Zieldatei loeschen
@@ -588,9 +591,9 @@ void RscCompiler::EndCompile()
 
     if ( aTmpOutputHxx.Len() )
     {
-        pTC->pEH->StdOut( "Writing file " );
-        pTC->pEH->StdOut( pCL->aOutputHxx.GetBuffer() );
-        pTC->pEH->StdOut( ".\n" );
+		pTC->pEH->StdOut( "Writing file ", RscVerbosityVerbose );
+		pTC->pEH->StdOut( pCL->aOutputHxx.GetBuffer(), RscVerbosityVerbose );
+		pTC->pEH->StdOut( ".\n", RscVerbosityVerbose );
 
         // kopiere von TMP auf richtigen Namen
         unlink( pCL->aOutputHxx.GetBuffer() );	 // Zieldatei loeschen
@@ -601,9 +604,9 @@ void RscCompiler::EndCompile()
 
     if( aTmpOutputCxx.Len() )
     {
-        pTC->pEH->StdOut( "Writing file " );
-        pTC->pEH->StdOut( pCL->aOutputCxx.GetBuffer() );
-        pTC->pEH->StdOut( ".\n" );
+		pTC->pEH->StdOut( "Writing file ", RscVerbosityVerbose );
+		pTC->pEH->StdOut( pCL->aOutputCxx.GetBuffer(), RscVerbosityVerbose );
+		pTC->pEH->StdOut( ".\n", RscVerbosityVerbose );
 
         // kopiere von TMP auf richtigen Namen
         unlink( pCL->aOutputCxx.GetBuffer() );	 // Zieldatei loeschen
@@ -614,9 +617,9 @@ void RscCompiler::EndCompile()
 
     if( aTmpOutputRcCtor.Len() )
     {
-        pTC->pEH->StdOut( "Writing file " );
-        pTC->pEH->StdOut( pCL->aOutputRcCtor.GetBuffer() );
-        pTC->pEH->StdOut( ".\n" );
+		pTC->pEH->StdOut( "Writing file ", RscVerbosityVerbose );
+		pTC->pEH->StdOut( pCL->aOutputRcCtor.GetBuffer(), RscVerbosityVerbose );
+		pTC->pEH->StdOut( ".\n", RscVerbosityVerbose );
 
         // kopiere von TMP auf richtigen Namen
         unlink( pCL->aOutputRcCtor.GetBuffer() );	// Zieldatei loeschen
@@ -776,14 +779,14 @@ ERRTYPE RscCompiler :: ParseOneFile( ULONG lFileKey,
             {
                 RscFileInst aFileInst( pTC, lFileKey, lFileKey, finput );
                 
-                pTC->pEH->StdOut( "reading file " );
-                pTC->pEH->StdOut( aParseFile.GetBuffer() );
-                pTC->pEH->StdOut( " " );
+				pTC->pEH->StdOut( "reading file ", RscVerbosityVerbose );
+				pTC->pEH->StdOut( aParseFile.GetBuffer(), RscVerbosityVerbose );
+				pTC->pEH->StdOut( " ", RscVerbosityVerbose );
                 
                 aError = ::parser( &aFileInst );
                 if( aError.IsError() )
                     pTC->Delete( lFileKey );//Resourceobjekte loeschen
-                pTC->pEH->StdOut( "\n" );
+				pTC->pEH->StdOut( "\n", RscVerbosityVerbose );
                 fclose( finput );
             };
             
diff --git scp2/macros/makefile.mk scp2/macros/makefile.mk
index 52a0ac1..7a35c21 100644
--- scp2/macros/makefile.mk
+++ scp2/macros/makefile.mk
@@ -50,4 +50,4 @@ ALLTAR : $(INCCOM)$/langmacros.inc
     @echo ------------------------------
     @echo Making: $@  
     @@-$(RENAME) $@ $@.tmp
-    $(PERL) macro.pl -o $@.tmp && $(RENAME:s/+//) $@.tmp $@
+	$(COMMAND_ECHO)$(PERL) macro.pl $(VERBOSITY) -o $@.tmp && $(RENAME:s/+//) $@.tmp $@
diff --git scp2/source/templates/makefile.mk scp2/source/templates/makefile.mk
index 03b3590..aacc369 100755
--- scp2/source/templates/makefile.mk
+++ scp2/source/templates/makefile.mk
@@ -52,5 +52,5 @@ PHONYTEMPL=.PHONY
 .ENDIF			# "$(LAST_COMPLETELANGISO_VAR)"!="$(COMPLETELANGISO_VAR)"
 $(INCCOM)$/alllangmodules%.inc $(PHONYTEMPL) : module_langpack%.sct
     @@-$(RENAME) $@ $@.tmp
-    $(PERL) -w modules.pl -i $< -o $@.tmp && $(RENAME:s/+//) $@.tmp $@
+	$(COMMAND_ECHO)$(PERL) -w modules.pl -i $< -o $@.tmp && $(RENAME:s/+//) $@.tmp $@
     @echo LAST_COMPLETELANGISO_VAR=$(COMPLETELANGISO_VAR) > $(MISC)$/$(TARGET)_lang_track.mk
diff --git scp2/source/templates/modules.pl scp2/source/templates/modules.pl
index 4287e0e..ad75aca 100755
--- scp2/source/templates/modules.pl
+++ scp2/source/templates/modules.pl
@@ -36,6 +36,7 @@ my $infile = "";
 my @infile = ();
 my $globalcounter = 0;
 my $globallinecounter = 0;
+my $verbose = 0;
 
 if ( !defined $completelangiso_var) {
     print STDERR "ERROR: No language defined!\n";
@@ -168,6 +169,6 @@ sub startup_check
 sub usage
 {
     print STDERR "Generate language modules from language script particle template (*.sct file)\n";
-    print STDERR "perl $0 -o outputfile -i inputfile\n";
+    print STDERR "perl $0 [-verbose] -o outputfile -i inputfile\n";
     exit  1;
 }
diff --git slideshow/util/makefile.mk slideshow/util/makefile.mk
index 4b40086..aba4094 100644
--- slideshow/util/makefile.mk
+++ slideshow/util/makefile.mk
@@ -41,8 +41,8 @@ ENABLE_EXCEPTIONS=TRUE
 
 # --- Common ----------------------------------------------------------
 
-.IF "$(verbose)"!="" || "$(VERBOSE)"!=""
-CDEFS+= -DVERBOSE
+.IF "$(VERBOSE)"=="TRUE"
+CDEFS+=-DVERBOSE
 .ENDIF
 
 SHL1DLLPRE=
diff --git slideshow/util/makefile.pmk slideshow/util/makefile.pmk
index 5aef116..362e7f8 100644
--- slideshow/util/makefile.pmk
+++ slideshow/util/makefile.pmk
@@ -29,8 +29,8 @@
 #
 #*************************************************************************
 
-.IF "$(verbose)"!="" || "$(VERBOSE)"!=""
-CDEFS+= -DVERBOSE
+.IF "$(VERBOSE)"=="TRUE"
+CDEFS+=-DVERBOSE
 .ENDIF
 
 .IF "$(debug)"!="" || "$(DEBUG)"!=""
diff --git solenv/bin/build.pl solenv/bin/build.pl
index d3be214..8ec9add 100755
--- solenv/bin/build.pl
+++ solenv/bin/build.pl
@@ -55,6 +55,10 @@
         require GenInfoParser; import GenInfoParser;
         require IO::Handle; import IO::Handle;
     };
+    my $verbose_mode = 0;
+    if (defined $ENV{verbose} || defined $ENV{VERBOSE}) {
+        $verbose_mode = ($ENV{verbose} =~ /^t\S*$/i);
+    }
     my $enable_multiprocessing = 1;
     my $cygwin = 0;
     $cygwin++ if ($^O eq 'cygwin');
@@ -590,7 +594,7 @@ sub dmake_dir {
             print "$dmake\n";
             print $check_error_string;
         } else {
-            print "$BuildDir\n";
+            print "\nEntering $BuildDir\n";
         };
         RemoveFromDependencies($BuildDir, \%LocalDepsHash) if (!$child);
         return if ($cmd_file || $show);
@@ -1391,6 +1395,9 @@ sub get_options {
     # Default build modes(for OpenOffice.org)
     $ENV{BUILD_TYPE} = 'OOo EXT' if (!defined $ENV{BUILD_TYPE});
     @ARGV = @dmake_args;
+	foreach $arg (@dmake_args) {
+        $arg =~ /^verbose=(\S+)$/i and $verbose_mode = ($1 =~ /^t\S*$/i);
+	}
 };
 
 sub get_module_and_buildlist_paths {
@@ -1569,7 +1576,7 @@ sub clear_from_child {
     $running_children{$folders_hashes{$child_nick}}--;
     delete $processes_hash{$pid};
     $only_dependent = 0;
-    print 'Running processes: ' . children_number() . "\n";
+    $verbose_mode && print 'Running processes: ' . children_number() . "\n";
 };
 
 #
@@ -1660,7 +1667,7 @@ sub start_child {
     select $oldfh;
     $processes_hash{$pid} = $job_dir;
     $children_running = children_number();
-    print 'Running processes: ', $children_running, "\n";
+    $verbose_mode && print 'Running processes: ', $children_running, "\n";
     $maximal_processes = $children_running if ($children_running > $maximal_processes);
     $folders_hashes{$job_dir} = $dependencies_hash;
     $running_children{$dependencies_hash}++;
@@ -3052,7 +3059,7 @@ sub run_server {
             delete $clients_times{$pid};
             clear_from_child($pid);
             delete $clients_jobs{$pid};
-            print 'Running processes: ', children_number(), "\n";
+            $verbose_mode && print 'Running processes: ', children_number(), "\n";
             # Actually, next 3 strings are only for even distribution 
             # of clients if there are more than one build server running
             print $new_socket_obj 'No job';
@@ -3077,7 +3084,7 @@ sub run_server {
             $clients_jobs{$pid} = $job_string;
             $clients_times{$pid} = time;
             $children_running = children_number();
-            print 'Running processes: ', $children_running, "\n";
+            $verbose_mode && print 'Running processes: ', $children_running, "\n";
             $maximal_processes = $children_running if ($children_running > $maximal_processes);
         } else {
             print $new_socket_obj 'No job';
diff --git solenv/bin/checkdll.sh solenv/bin/checkdll.sh
index f553bcf..8390e37 100755
--- solenv/bin/checkdll.sh
+++ solenv/bin/checkdll.sh
@@ -42,42 +42,42 @@ checkdll="$SOLARVERSION/$INPATH/bin$UPDMINOREXT/checkdll"
 if [ -x $checkdll ]; then
     while :
     do
-    case $1 in
-        -L) shift; option=$1;;
-        --) break;;
-    esac
-    case "${libpath+X}" in
-        X) libpath=$libpath:$option;;
-        *) libpath=$option;;
-    esac
-    shift
+	case $1 in
+	    -L) shift; option=$1;;
+	    --) break;;
+	esac
+	case "${libpath+X}" in
+	    X) libpath=$libpath:$option;;
+	    *) libpath=$option;;
+	esac
+	shift
     done
     shift  # remove the trailing ---
 
     case `uname -s` in
     Darwin) case "${DYLD_LIBRARY_PATH+X}" in
-        X) DYLD_LIBRARY_PATH=$libpath:$DYLD_LIBRARY_PATH;;
-        *) DYLD_LIBRARY_PATH=$libpath;;
+	    X) DYLD_LIBRARY_PATH=$libpath:$DYLD_LIBRARY_PATH;;
+	    *) DYLD_LIBRARY_PATH=$libpath;;
         esac
         export DYLD_LIBRARY_PATH;;
     IRIX) case "${LD_LIBRARYN32_PATH+X}" in
-        X) LD_LIBRARYN32_PATH=$libpath:$LD_LIBRARYN32_PATH;;
-        *) LD_LIBRARYN32_PATH=$libpath;;
-    esac
+	    X) LD_LIBRARYN32_PATH=$libpath:$LD_LIBRARYN32_PATH;;
+	    *) LD_LIBRARYN32_PATH=$libpath;;
+	esac
         export LD_LIBRARYN32_PATH;;
     IRIX64) case "${LD_LIBRARYN32_PATH+X}" in
-        X) LD_LIBRARYN32_PATH=$libpath:$LD_LIBRARYN32_PATH;;
-        *) LD_LIBRARYN32_PATH=$libpath;;
-    esac
+	    X) LD_LIBRARYN32_PATH=$libpath:$LD_LIBRARYN32_PATH;;
+	    *) LD_LIBRARYN32_PATH=$libpath;;
+	esac
         export LD_LIBRARYN32_PATH;;
-    *)  case "${LD_LIBRARY_PATH+X}" in
-        X) LD_LIBRARY_PATH=$libpath:$LD_LIBRARY_PATH;;
-        *) LD_LIBRARY_PATH=$libpath;;
+	*)  case "${LD_LIBRARY_PATH+X}" in
+	    X) LD_LIBRARY_PATH=$libpath:$LD_LIBRARY_PATH;;
+	    *) LD_LIBRARY_PATH=$libpath;;
         esac
         export LD_LIBRARY_PATH;;
     esac
 
-    $checkdll "$*"
+    $checkdll "$@"
     if [ $? -ne 0 ]; then exit 1 ; fi
 
     for parameter in $*; do
diff --git solenv/bin/deliver.pl solenv/bin/deliver.pl
index ce55dd9..a004497 100755
--- solenv/bin/deliver.pl
+++ solenv/bin/deliver.pl
@@ -402,7 +402,7 @@ sub parse_options
 {
     my $arg;
     my $dontdeletecommon = 0;
-    $opt_silent = 1 if ( defined $ENV{VERBOSE} && $ENV{VERBOSE} eq 'FALSE');
+    $opt_silent = 1 if ( !defined $ENV{VERBOSE} || (defined $ENV{VERBOSE} && $ENV{VERBOSE} eq 'FALSE'));
     $opt_verbose = 1 if ( defined $ENV{VERBOSE} && $ENV{VERBOSE} eq 'TRUE');
     while ( $arg = shift @ARGV ) {
         $arg =~ /^-force$/      and $opt_force  = 1  and next;
diff --git solenv/bin/mhids.pl solenv/bin/mhids.pl
index 1fd0f3b..5226980 100644
--- solenv/bin/mhids.pl
+++ solenv/bin/mhids.pl
@@ -37,6 +37,7 @@ my $srs;
 my $prjname;
 my $defs;
 my $solarincludes;
+my $verbose = 0;
 
 my $debug = 0;
 my $filebase;
@@ -109,9 +110,24 @@ sub setcompiler
 }
 
 #---------------------------------------------------
-$filename = shift @ARGV;
-$srs = shift @ARGV;
-$prjname = shift @ARGV;
+$filename = undef;
+$srs = undef;
+$prjname = undef;
+
+my @expectedArgs = ( \$filename, \$srs, \$prjname );
+my $expectedArgsIndex = 0;
+while ( ( $#ARGV >= 0 ) && ( $expectedArgsIndex < 3 ) )
+{
+    $_ = shift @ARGV;
+    if ( /^-verbose$/ )
+    {
+        $verbose = 1;
+        next;
+    }
+    ${$expectedArgs[ $expectedArgsIndex ]} = $_;
+    ++$expectedArgsIndex;
+}
+
 $defs = join " ",@ARGV if ($#ARGV);
 
 if ( !defined $prjname ) { die "ERROR - check usage\n"; }
@@ -144,7 +160,7 @@ $workfile = "$tmpdir/${filebase}_".$$;
 # now get $workfile ready for shell usage...
 $shell_workfile = $workfile;
 
-print "workfile: $workfile\n";
+print "workfile: $workfile\n" if $verbose;
 
 #remove old objects which remained in place by a former bug
 unlink "$workfile.obj";
@@ -226,7 +242,7 @@ if ( $outobj_flag ne "" )
 {
     $outobj_param = "$outobj_flag${shell_workfile}$objext";
 }
-print         "$compiler $solarincludes $defs ${shell_workfile}.c $outobj_param $outbin_flag${shell_workfile}$appext \n";
+print         "$compiler $solarincludes $defs ${shell_workfile}.c $outobj_param $outbin_flag${shell_workfile}$appext \n" if $verbose;
 $ret = system "$compiler $solarincludes $defs ${shell_workfile}.c $outobj_param $outbin_flag${shell_workfile}$appext";
 if ( $ret ) {
     push @cleanuplist, "$appext";
diff --git solenv/inc/_tg_app.mk solenv/inc/_tg_app.mk
index cdb592d..7ea8ca9 100644
--- solenv/inc/_tg_app.mk
+++ solenv/inc/_tg_app.mk
@@ -86,7 +86,7 @@ $(APP1TARGETN): $(APP1OBJS) $(APP1LIBS) \
     $(APP1IMP_ORD) \
     $(APP1ICON) $(APP1DEPN) $(USE_APP1DEF)
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(OS)"=="MACOSX"
     @echo unx
@@ -100,7 +100,9 @@ $(APP1TARGETN): $(APP1OBJS) $(APP1LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_1.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_1.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_1.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_1.cmd
 # Need to strip __objcInit symbol to avoid duplicate symbols when loading
 # libraries at runtime
@@ -110,7 +112,7 @@ $(APP1TARGETN): $(APP1OBJS) $(APP1LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         app $(APP1RPATH) $@
 .IF "$(TARGETTYPE)"=="GUI"
-    @echo "Making: $@.app"
+	@echo "Making:   " $(@:f).app
     @macosx-create-bundle $@
 .ENDIF		# "$(TARGETTYPE)"=="GUI"
 .ELSE		# "$(OS)"=="MACOSX"
@@ -120,9 +122,13 @@ $(APP1TARGETN): $(APP1OBJS) $(APP1LIBS) \
     $(APP1OBJS:s/.obj/.o/) '\' >  $(MISC)/$(TARGET).$(@:b)_1.cmd
     @cat $(mktmp /dev/null $(APP1LIBS)) | xargs -n 1 cat | sed s\#$(ROUT)\#$(OUT)\#g | sed 's#$$# \\#'  >> $(MISC)/$(TARGET).$(@:b)_1.cmd
     @echo $(APP1LINKTYPEFLAG) $(APP1LIBSALCPPRT) $(APP1STDLIBS) $(APP1STDLIB) $(STDLIB1) -o $@ >> $(MISC)/$(TARGET).$(@:b)_1.cmd
-    cat $(MISC)/$(TARGET).$(@:b)_1.cmd
+  .IF "$(VERBOSE)" == "TRUE"
+	@cat $(MISC)/$(TARGET).$(@:b)_1.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_1.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+  .ENDIF
 .ENDIF		# "$(OS)"=="MACOSX"
 .ENDIF
 .IF "$(GUI)" == "WNT"
@@ -136,7 +142,7 @@ $(APP1TARGETN): $(APP1OBJS) $(APP1LIBS) \
     @-echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP1LINKRES:b).rc
     @-echo $(EMQ)#include  $(EMQ)"$(APP1VERINFO)$(EMQ)" >> $(MISC)/$(APP1LINKRES:b).rc
 .ENDIF		# "$(APP1VERINFO)" != ""
-    $(RC) -DWIN32 $(APP1PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP1LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(APP1PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP1LINKRES:b).rc
 .ENDIF			# "$(APP1LINKRES)" != ""
 .IF "$(COM)" == "GCC"
     @echo mingw
@@ -144,19 +150,22 @@ $(APP1TARGETN): $(APP1OBJS) $(APP1LIBS) \
     @cat $(APP1LINKRES) $(subst,/res/,/res{$(subst,$(BIN), $(@:d))} $(APP1RES)) >  $(MISC)/$(@:b)_all.res
     windres $(MISC)/$(@:b)_all.res $(APP1RESO)
 .ENDIF
-    @echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
+ 	@echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
         $(APP1BASEX) $(APP1STACKN) -o $@ $(APP1OBJS) \
         -Wl,-Map,$(MISC)/$(@:b).map $(STDOBJ) $(APP1RESO) \
         `$(TYPE) /dev/null $(APP1LIBS) | sed s#$(ROUT)#$(OUT)#g` \
-        $(APP_LINKTYPE) $(APP1LIBSALCPPRT) \
-        -Wl,--start-group $(APP1STDLIBS) -Wl,--end-group $(APP1STDLIB) \
-        $(STDLIB1) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_1.cmd
+ 		$(APP_LINKTYPE) $(APP1LIBSALCPPRT) \
+ 		-Wl,--start-group $(APP1STDLIBS) -Wl,--end-group $(APP1STDLIB) \
+ 		$(STDLIB1) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_1.cmd
+  # need this empty line, else dmake somehow gets confused by the .IFs and .ENDIFs
+  .IF "$(VERBOSE)" == "TRUE"
     @$(TYPE)  $(MISC)/$(TARGET).$(@:b)_1.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_1.cmd
     @ls -l $@
 .ELSE	# "$(COM)" == "GCC"
 .IF "$(linkinc)" == ""
-    $(APP1LINKER) @$(mktmp \
+	$(COMMAND_ECHO)$(APP1LINKER) @$(mktmp \
         $(APP1LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP1BASEX) \
         $(APP1STACKN) \
@@ -172,17 +181,17 @@ $(APP1TARGETN): $(APP1OBJS) $(APP1LIBS) \
         )
     @-echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE
-        -$(RM) $(MISC)\$(APP1TARGET).lnk
-        -$(RM) $(MISC)\$(APP1TARGET).lst
-        -$(RM) $(MISC)\linkobj.lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP1TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP1TARGET).lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\linkobj.lst
         for %_i in ($(MISC)\*.obj) do type %_i >> $(MISC)\linkobj.lst
     type $(mktmp,$(MISC)\$(APP1TARGET).lst
         $(APP1LINKFLAGS) \
@@ -196,16 +205,16 @@ $(APP1TARGETN): $(APP1OBJS) $(APP1LIBS) \
         $(APP1LIBS) \
         $(APP1STDLIBS) \
         $(APP1STDLIB) $(STDLIB1))
-        $(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP1TARGETN:b)_linkobj.lst >> $(MISC)\$(APP1TARGET).lst
-        $(IFEXIST) $(MISC)/$(APP1TARGET).lst $(THEN) type $(MISC)/$(APP1TARGET).lst  >> $(MISC)/$(APP1TARGET).lnk $(FI)
-        $(APP1LINKER) @$(MISC)\$(APP1TARGET).lnk
+		$(COMMAND_ECHO)$(SED)$(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP1TARGETN:b)_linkobj.lst >> $(MISC)\$(APP1TARGET).lst
+		$(COMMAND_ECHO)$(SED)$(IFEXIST) $(MISC)/$(APP1TARGET).lst $(THEN) type $(MISC)/$(APP1TARGET).lst  >> $(MISC)/$(APP1TARGET).lnk $(FI)
+		$(COMMAND_ECHO)$(SED)$(APP1LINKER) @$(MISC)\$(APP1TARGET).lnk
 .ENDIF		# "$(linkinc)" == ""
 .ENDIF		# "$(COM)" == "GCC"
 .IF "$(APP1TARGET)" == "loader"
-    $(PERL) loader.pl $@
-    $(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    $(RM) $@
-    $(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)$(PERL) loader.pl $@
+	$(COMMAND_ECHO)$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)$(RM) $@
+	$(COMMAND_ECHO)$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "WNT"
@@ -221,13 +230,14 @@ $(APP1TARGETN): $(APP1OBJS) $(APP1LIBS) \
     @-+echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP1LINKRES:b).rc
     @-+echo $(EMQ)#include  $(EMQ)"$(APP1VERINFO)$(EMQ)" >> $(MISC)/$(APP1LINKRES:b).rc
 .ENDIF		# "$(APP1VERINFO)" != ""
-    $(RC) -r -DOS2 $(APP1PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP1LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(APP1PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP1LINKRES:b).rc
 .ENDIF			# "$(APP1LINKRES)" != ""
 
 .IF "$(TARGETTYPE)" == "GUI" 
     @echo NAME $(APP1TARGET) WINDOWAPI > $(MISC)/$(APP1TARGET).def
 .ENDIF
 
+  .IF "$(VERBOSE)" == "TRUE"
     @+echo	$(APP1LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP1BASEX) \
         $(APP1STACKN) \
@@ -242,7 +252,8 @@ $(APP1TARGETN): $(APP1OBJS) $(APP1LIBS) \
         $(APP1LIBS) \
         $(APP1STDLIBS:^"-l") \
         $(APP1STDLIB:^"-l") $(STDLIB1:^"-l") 
-    $(APP1LINKER) -v \
+  .ENDIF
+	$(COMMAND_ECHO)$(APP1LINKER) -v \
         $(APP1LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP1BASEX) \
         $(APP1STACKN) \
@@ -260,10 +271,10 @@ $(APP1TARGETN): $(APP1OBJS) $(APP1LIBS) \
 
 
 .IF "$(APP1TARGET)" == "loader"
-    +$(PERL) loader.pl $@
-    +$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    +$(RM) $@
-    +$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)+$(PERL) loader.pl $@
+	$(COMMAND_ECHO)+$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)+$(RM) $@
+	$(COMMAND_ECHO)+$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -360,7 +371,7 @@ $(APP2TARGETN): $(APP2OBJS) $(APP2LIBS) \
     $(APP2IMP_ORD) \
     $(APP2ICON) $(APP2DEPN) $(USE_APP2DEF)
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(OS)"=="MACOSX"
     @echo unx
@@ -374,7 +385,9 @@ $(APP2TARGETN): $(APP2OBJS) $(APP2LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_2.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_2.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_2.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_2.cmd
 # Need to strip __objcInit symbol to avoid duplicate symbols when loading
 # libraries at runtime
@@ -384,7 +397,7 @@ $(APP2TARGETN): $(APP2OBJS) $(APP2LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         app $(APP2RPATH) $@
 .IF "$(TARGETTYPE)"=="GUI"
-    @echo "Making: $@.app"
+	@echo "Making:   " $(@:f).app
     @macosx-create-bundle $@
 .ENDIF		# "$(TARGETTYPE)"=="GUI"
 .ELSE		# "$(OS)"=="MACOSX"
@@ -394,9 +407,13 @@ $(APP2TARGETN): $(APP2OBJS) $(APP2LIBS) \
     $(APP2OBJS:s/.obj/.o/) '\' >  $(MISC)/$(TARGET).$(@:b)_2.cmd
     @cat $(mktmp /dev/null $(APP2LIBS)) | xargs -n 1 cat | sed s\#$(ROUT)\#$(OUT)\#g | sed 's#$$# \\#'  >> $(MISC)/$(TARGET).$(@:b)_2.cmd
     @echo $(APP2LINKTYPEFLAG) $(APP2LIBSALCPPRT) $(APP2STDLIBS) $(APP2STDLIB) $(STDLIB2) -o $@ >> $(MISC)/$(TARGET).$(@:b)_2.cmd
-    cat $(MISC)/$(TARGET).$(@:b)_2.cmd
+  .IF "$(VERBOSE)" == "TRUE"
+	@cat $(MISC)/$(TARGET).$(@:b)_2.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_2.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+  .ENDIF
 .ENDIF		# "$(OS)"=="MACOSX"
 .ENDIF
 .IF "$(GUI)" == "WNT"
@@ -410,7 +427,7 @@ $(APP2TARGETN): $(APP2OBJS) $(APP2LIBS) \
     @-echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP2LINKRES:b).rc
     @-echo $(EMQ)#include  $(EMQ)"$(APP2VERINFO)$(EMQ)" >> $(MISC)/$(APP2LINKRES:b).rc
 .ENDIF		# "$(APP2VERINFO)" != ""
-    $(RC) -DWIN32 $(APP2PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP2LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(APP2PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP2LINKRES:b).rc
 .ENDIF			# "$(APP2LINKRES)" != ""
 .IF "$(COM)" == "GCC"
     @echo mingw
@@ -418,19 +435,22 @@ $(APP2TARGETN): $(APP2OBJS) $(APP2LIBS) \
     @cat $(APP2LINKRES) $(subst,/res/,/res{$(subst,$(BIN), $(@:d))} $(APP2RES)) >  $(MISC)/$(@:b)_all.res
     windres $(MISC)/$(@:b)_all.res $(APP2RESO)
 .ENDIF
-    @echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
+ 	@echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
         $(APP2BASEX) $(APP2STACKN) -o $@ $(APP2OBJS) \
         -Wl,-Map,$(MISC)/$(@:b).map $(STDOBJ) $(APP2RESO) \
         `$(TYPE) /dev/null $(APP2LIBS) | sed s#$(ROUT)#$(OUT)#g` \
-        $(APP_LINKTYPE) $(APP2LIBSALCPPRT) \
-        -Wl,--start-group $(APP2STDLIBS) -Wl,--end-group $(APP2STDLIB) \
-        $(STDLIB2) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_2.cmd
+ 		$(APP_LINKTYPE) $(APP2LIBSALCPPRT) \
+ 		-Wl,--start-group $(APP2STDLIBS) -Wl,--end-group $(APP2STDLIB) \
+ 		$(STDLIB2) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_2.cmd
+  # need this empty line, else dmake somehow gets confused by the .IFs and .ENDIFs
+  .IF "$(VERBOSE)" == "TRUE"
     @$(TYPE)  $(MISC)/$(TARGET).$(@:b)_2.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_2.cmd
     @ls -l $@
 .ELSE	# "$(COM)" == "GCC"
 .IF "$(linkinc)" == ""
-    $(APP2LINKER) @$(mktmp \
+	$(COMMAND_ECHO)$(APP2LINKER) @$(mktmp \
         $(APP2LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP2BASEX) \
         $(APP2STACKN) \
@@ -446,17 +466,17 @@ $(APP2TARGETN): $(APP2OBJS) $(APP2LIBS) \
         )
     @-echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE
-        -$(RM) $(MISC)\$(APP2TARGET).lnk
-        -$(RM) $(MISC)\$(APP2TARGET).lst
-        -$(RM) $(MISC)\linkobj.lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP2TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP2TARGET).lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\linkobj.lst
         for %_i in ($(MISC)\*.obj) do type %_i >> $(MISC)\linkobj.lst
     type $(mktmp,$(MISC)\$(APP2TARGET).lst
         $(APP2LINKFLAGS) \
@@ -470,16 +490,16 @@ $(APP2TARGETN): $(APP2OBJS) $(APP2LIBS) \
         $(APP2LIBS) \
         $(APP2STDLIBS) \
         $(APP2STDLIB) $(STDLIB2))
-        $(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP2TARGETN:b)_linkobj.lst >> $(MISC)\$(APP2TARGET).lst
-        $(IFEXIST) $(MISC)/$(APP2TARGET).lst $(THEN) type $(MISC)/$(APP2TARGET).lst  >> $(MISC)/$(APP2TARGET).lnk $(FI)
-        $(APP2LINKER) @$(MISC)\$(APP2TARGET).lnk
+		$(COMMAND_ECHO)$(SED)$(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP2TARGETN:b)_linkobj.lst >> $(MISC)\$(APP2TARGET).lst
+		$(COMMAND_ECHO)$(SED)$(IFEXIST) $(MISC)/$(APP2TARGET).lst $(THEN) type $(MISC)/$(APP2TARGET).lst  >> $(MISC)/$(APP2TARGET).lnk $(FI)
+		$(COMMAND_ECHO)$(SED)$(APP2LINKER) @$(MISC)\$(APP2TARGET).lnk
 .ENDIF		# "$(linkinc)" == ""
 .ENDIF		# "$(COM)" == "GCC"
 .IF "$(APP2TARGET)" == "loader"
-    $(PERL) loader.pl $@
-    $(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    $(RM) $@
-    $(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)$(PERL) loader.pl $@
+	$(COMMAND_ECHO)$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)$(RM) $@
+	$(COMMAND_ECHO)$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "WNT"
@@ -495,13 +515,14 @@ $(APP2TARGETN): $(APP2OBJS) $(APP2LIBS) \
     @-+echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP2LINKRES:b).rc
     @-+echo $(EMQ)#include  $(EMQ)"$(APP2VERINFO)$(EMQ)" >> $(MISC)/$(APP2LINKRES:b).rc
 .ENDIF		# "$(APP2VERINFO)" != ""
-    $(RC) -r -DOS2 $(APP2PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP2LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(APP2PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP2LINKRES:b).rc
 .ENDIF			# "$(APP2LINKRES)" != ""
 
 .IF "$(TARGETTYPE)" == "GUI" 
     @echo NAME $(APP2TARGET) WINDOWAPI > $(MISC)/$(APP2TARGET).def
 .ENDIF
 
+  .IF "$(VERBOSE)" == "TRUE"
     @+echo	$(APP2LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP2BASEX) \
         $(APP2STACKN) \
@@ -516,7 +537,8 @@ $(APP2TARGETN): $(APP2OBJS) $(APP2LIBS) \
         $(APP2LIBS) \
         $(APP2STDLIBS:^"-l") \
         $(APP2STDLIB:^"-l") $(STDLIB2:^"-l") 
-    $(APP2LINKER) -v \
+  .ENDIF
+	$(COMMAND_ECHO)$(APP2LINKER) -v \
         $(APP2LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP2BASEX) \
         $(APP2STACKN) \
@@ -534,10 +556,10 @@ $(APP2TARGETN): $(APP2OBJS) $(APP2LIBS) \
 
 
 .IF "$(APP2TARGET)" == "loader"
-    +$(PERL) loader.pl $@
-    +$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    +$(RM) $@
-    +$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)+$(PERL) loader.pl $@
+	$(COMMAND_ECHO)+$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)+$(RM) $@
+	$(COMMAND_ECHO)+$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -634,7 +656,7 @@ $(APP3TARGETN): $(APP3OBJS) $(APP3LIBS) \
     $(APP3IMP_ORD) \
     $(APP3ICON) $(APP3DEPN) $(USE_APP3DEF)
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(OS)"=="MACOSX"
     @echo unx
@@ -648,7 +670,9 @@ $(APP3TARGETN): $(APP3OBJS) $(APP3LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_3.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_3.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_3.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_3.cmd
 # Need to strip __objcInit symbol to avoid duplicate symbols when loading
 # libraries at runtime
@@ -658,7 +682,7 @@ $(APP3TARGETN): $(APP3OBJS) $(APP3LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         app $(APP3RPATH) $@
 .IF "$(TARGETTYPE)"=="GUI"
-    @echo "Making: $@.app"
+	@echo "Making:   " $(@:f).app
     @macosx-create-bundle $@
 .ENDIF		# "$(TARGETTYPE)"=="GUI"
 .ELSE		# "$(OS)"=="MACOSX"
@@ -668,9 +692,13 @@ $(APP3TARGETN): $(APP3OBJS) $(APP3LIBS) \
     $(APP3OBJS:s/.obj/.o/) '\' >  $(MISC)/$(TARGET).$(@:b)_3.cmd
     @cat $(mktmp /dev/null $(APP3LIBS)) | xargs -n 1 cat | sed s\#$(ROUT)\#$(OUT)\#g | sed 's#$$# \\#'  >> $(MISC)/$(TARGET).$(@:b)_3.cmd
     @echo $(APP3LINKTYPEFLAG) $(APP3LIBSALCPPRT) $(APP3STDLIBS) $(APP3STDLIB) $(STDLIB3) -o $@ >> $(MISC)/$(TARGET).$(@:b)_3.cmd
-    cat $(MISC)/$(TARGET).$(@:b)_3.cmd
+  .IF "$(VERBOSE)" == "TRUE"
+	@cat $(MISC)/$(TARGET).$(@:b)_3.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_3.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+  .ENDIF
 .ENDIF		# "$(OS)"=="MACOSX"
 .ENDIF
 .IF "$(GUI)" == "WNT"
@@ -684,7 +712,7 @@ $(APP3TARGETN): $(APP3OBJS) $(APP3LIBS) \
     @-echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP3LINKRES:b).rc
     @-echo $(EMQ)#include  $(EMQ)"$(APP3VERINFO)$(EMQ)" >> $(MISC)/$(APP3LINKRES:b).rc
 .ENDIF		# "$(APP3VERINFO)" != ""
-    $(RC) -DWIN32 $(APP3PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP3LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(APP3PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP3LINKRES:b).rc
 .ENDIF			# "$(APP3LINKRES)" != ""
 .IF "$(COM)" == "GCC"
     @echo mingw
@@ -692,19 +720,22 @@ $(APP3TARGETN): $(APP3OBJS) $(APP3LIBS) \
     @cat $(APP3LINKRES) $(subst,/res/,/res{$(subst,$(BIN), $(@:d))} $(APP3RES)) >  $(MISC)/$(@:b)_all.res
     windres $(MISC)/$(@:b)_all.res $(APP3RESO)
 .ENDIF
-    @echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
+ 	@echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
         $(APP3BASEX) $(APP3STACKN) -o $@ $(APP3OBJS) \
         -Wl,-Map,$(MISC)/$(@:b).map $(STDOBJ) $(APP3RESO) \
         `$(TYPE) /dev/null $(APP3LIBS) | sed s#$(ROUT)#$(OUT)#g` \
-        $(APP_LINKTYPE) $(APP3LIBSALCPPRT) \
-        -Wl,--start-group $(APP3STDLIBS) -Wl,--end-group $(APP3STDLIB) \
-        $(STDLIB3) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_3.cmd
+ 		$(APP_LINKTYPE) $(APP3LIBSALCPPRT) \
+ 		-Wl,--start-group $(APP3STDLIBS) -Wl,--end-group $(APP3STDLIB) \
+ 		$(STDLIB3) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_3.cmd
+  # need this empty line, else dmake somehow gets confused by the .IFs and .ENDIFs
+  .IF "$(VERBOSE)" == "TRUE"
     @$(TYPE)  $(MISC)/$(TARGET).$(@:b)_3.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_3.cmd
     @ls -l $@
 .ELSE	# "$(COM)" == "GCC"
 .IF "$(linkinc)" == ""
-    $(APP3LINKER) @$(mktmp \
+	$(COMMAND_ECHO)$(APP3LINKER) @$(mktmp \
         $(APP3LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP3BASEX) \
         $(APP3STACKN) \
@@ -720,17 +751,17 @@ $(APP3TARGETN): $(APP3OBJS) $(APP3LIBS) \
         )
     @-echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE
-        -$(RM) $(MISC)\$(APP3TARGET).lnk
-        -$(RM) $(MISC)\$(APP3TARGET).lst
-        -$(RM) $(MISC)\linkobj.lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP3TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP3TARGET).lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\linkobj.lst
         for %_i in ($(MISC)\*.obj) do type %_i >> $(MISC)\linkobj.lst
     type $(mktmp,$(MISC)\$(APP3TARGET).lst
         $(APP3LINKFLAGS) \
@@ -744,16 +775,16 @@ $(APP3TARGETN): $(APP3OBJS) $(APP3LIBS) \
         $(APP3LIBS) \
         $(APP3STDLIBS) \
         $(APP3STDLIB) $(STDLIB3))
-        $(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP3TARGETN:b)_linkobj.lst >> $(MISC)\$(APP3TARGET).lst
-        $(IFEXIST) $(MISC)/$(APP3TARGET).lst $(THEN) type $(MISC)/$(APP3TARGET).lst  >> $(MISC)/$(APP3TARGET).lnk $(FI)
-        $(APP3LINKER) @$(MISC)\$(APP3TARGET).lnk
+		$(COMMAND_ECHO)$(SED)$(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP3TARGETN:b)_linkobj.lst >> $(MISC)\$(APP3TARGET).lst
+		$(COMMAND_ECHO)$(SED)$(IFEXIST) $(MISC)/$(APP3TARGET).lst $(THEN) type $(MISC)/$(APP3TARGET).lst  >> $(MISC)/$(APP3TARGET).lnk $(FI)
+		$(COMMAND_ECHO)$(SED)$(APP3LINKER) @$(MISC)\$(APP3TARGET).lnk
 .ENDIF		# "$(linkinc)" == ""
 .ENDIF		# "$(COM)" == "GCC"
 .IF "$(APP3TARGET)" == "loader"
-    $(PERL) loader.pl $@
-    $(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    $(RM) $@
-    $(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)$(PERL) loader.pl $@
+	$(COMMAND_ECHO)$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)$(RM) $@
+	$(COMMAND_ECHO)$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "WNT"
@@ -769,13 +800,14 @@ $(APP3TARGETN): $(APP3OBJS) $(APP3LIBS) \
     @-+echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP3LINKRES:b).rc
     @-+echo $(EMQ)#include  $(EMQ)"$(APP3VERINFO)$(EMQ)" >> $(MISC)/$(APP3LINKRES:b).rc
 .ENDIF		# "$(APP3VERINFO)" != ""
-    $(RC) -r -DOS2 $(APP3PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP3LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(APP3PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP3LINKRES:b).rc
 .ENDIF			# "$(APP3LINKRES)" != ""
 
 .IF "$(TARGETTYPE)" == "GUI" 
     @echo NAME $(APP3TARGET) WINDOWAPI > $(MISC)/$(APP3TARGET).def
 .ENDIF
 
+  .IF "$(VERBOSE)" == "TRUE"
     @+echo	$(APP3LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP3BASEX) \
         $(APP3STACKN) \
@@ -790,7 +822,8 @@ $(APP3TARGETN): $(APP3OBJS) $(APP3LIBS) \
         $(APP3LIBS) \
         $(APP3STDLIBS:^"-l") \
         $(APP3STDLIB:^"-l") $(STDLIB3:^"-l") 
-    $(APP3LINKER) -v \
+  .ENDIF
+	$(COMMAND_ECHO)$(APP3LINKER) -v \
         $(APP3LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP3BASEX) \
         $(APP3STACKN) \
@@ -808,10 +841,10 @@ $(APP3TARGETN): $(APP3OBJS) $(APP3LIBS) \
 
 
 .IF "$(APP3TARGET)" == "loader"
-    +$(PERL) loader.pl $@
-    +$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    +$(RM) $@
-    +$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)+$(PERL) loader.pl $@
+	$(COMMAND_ECHO)+$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)+$(RM) $@
+	$(COMMAND_ECHO)+$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -908,7 +941,7 @@ $(APP4TARGETN): $(APP4OBJS) $(APP4LIBS) \
     $(APP4IMP_ORD) \
     $(APP4ICON) $(APP4DEPN) $(USE_APP4DEF)
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(OS)"=="MACOSX"
     @echo unx
@@ -922,7 +955,9 @@ $(APP4TARGETN): $(APP4OBJS) $(APP4LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_4.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_4.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_4.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_4.cmd
 # Need to strip __objcInit symbol to avoid duplicate symbols when loading
 # libraries at runtime
@@ -932,7 +967,7 @@ $(APP4TARGETN): $(APP4OBJS) $(APP4LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         app $(APP4RPATH) $@
 .IF "$(TARGETTYPE)"=="GUI"
-    @echo "Making: $@.app"
+	@echo "Making:   " $(@:f).app
     @macosx-create-bundle $@
 .ENDIF		# "$(TARGETTYPE)"=="GUI"
 .ELSE		# "$(OS)"=="MACOSX"
@@ -942,9 +977,13 @@ $(APP4TARGETN): $(APP4OBJS) $(APP4LIBS) \
     $(APP4OBJS:s/.obj/.o/) '\' >  $(MISC)/$(TARGET).$(@:b)_4.cmd
     @cat $(mktmp /dev/null $(APP4LIBS)) | xargs -n 1 cat | sed s\#$(ROUT)\#$(OUT)\#g | sed 's#$$# \\#'  >> $(MISC)/$(TARGET).$(@:b)_4.cmd
     @echo $(APP4LINKTYPEFLAG) $(APP4LIBSALCPPRT) $(APP4STDLIBS) $(APP4STDLIB) $(STDLIB4) -o $@ >> $(MISC)/$(TARGET).$(@:b)_4.cmd
-    cat $(MISC)/$(TARGET).$(@:b)_4.cmd
+  .IF "$(VERBOSE)" == "TRUE"
+	@cat $(MISC)/$(TARGET).$(@:b)_4.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_4.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+  .ENDIF
 .ENDIF		# "$(OS)"=="MACOSX"
 .ENDIF
 .IF "$(GUI)" == "WNT"
@@ -958,7 +997,7 @@ $(APP4TARGETN): $(APP4OBJS) $(APP4LIBS) \
     @-echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP4LINKRES:b).rc
     @-echo $(EMQ)#include  $(EMQ)"$(APP4VERINFO)$(EMQ)" >> $(MISC)/$(APP4LINKRES:b).rc
 .ENDIF		# "$(APP4VERINFO)" != ""
-    $(RC) -DWIN32 $(APP4PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP4LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(APP4PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP4LINKRES:b).rc
 .ENDIF			# "$(APP4LINKRES)" != ""
 .IF "$(COM)" == "GCC"
     @echo mingw
@@ -966,19 +1005,22 @@ $(APP4TARGETN): $(APP4OBJS) $(APP4LIBS) \
     @cat $(APP4LINKRES) $(subst,/res/,/res{$(subst,$(BIN), $(@:d))} $(APP4RES)) >  $(MISC)/$(@:b)_all.res
     windres $(MISC)/$(@:b)_all.res $(APP4RESO)
 .ENDIF
-    @echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
+ 	@echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
         $(APP4BASEX) $(APP4STACKN) -o $@ $(APP4OBJS) \
         -Wl,-Map,$(MISC)/$(@:b).map $(STDOBJ) $(APP4RESO) \
         `$(TYPE) /dev/null $(APP4LIBS) | sed s#$(ROUT)#$(OUT)#g` \
-        $(APP_LINKTYPE) $(APP4LIBSALCPPRT) \
-        -Wl,--start-group $(APP4STDLIBS) -Wl,--end-group $(APP4STDLIB) \
-        $(STDLIB4) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_4.cmd
+ 		$(APP_LINKTYPE) $(APP4LIBSALCPPRT) \
+ 		-Wl,--start-group $(APP4STDLIBS) -Wl,--end-group $(APP4STDLIB) \
+ 		$(STDLIB4) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_4.cmd
+  # need this empty line, else dmake somehow gets confused by the .IFs and .ENDIFs
+  .IF "$(VERBOSE)" == "TRUE"
     @$(TYPE)  $(MISC)/$(TARGET).$(@:b)_4.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_4.cmd
     @ls -l $@
 .ELSE	# "$(COM)" == "GCC"
 .IF "$(linkinc)" == ""
-    $(APP4LINKER) @$(mktmp \
+	$(COMMAND_ECHO)$(APP4LINKER) @$(mktmp \
         $(APP4LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP4BASEX) \
         $(APP4STACKN) \
@@ -994,17 +1036,17 @@ $(APP4TARGETN): $(APP4OBJS) $(APP4LIBS) \
         )
     @-echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE
-        -$(RM) $(MISC)\$(APP4TARGET).lnk
-        -$(RM) $(MISC)\$(APP4TARGET).lst
-        -$(RM) $(MISC)\linkobj.lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP4TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP4TARGET).lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\linkobj.lst
         for %_i in ($(MISC)\*.obj) do type %_i >> $(MISC)\linkobj.lst
     type $(mktmp,$(MISC)\$(APP4TARGET).lst
         $(APP4LINKFLAGS) \
@@ -1018,16 +1060,16 @@ $(APP4TARGETN): $(APP4OBJS) $(APP4LIBS) \
         $(APP4LIBS) \
         $(APP4STDLIBS) \
         $(APP4STDLIB) $(STDLIB4))
-        $(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP4TARGETN:b)_linkobj.lst >> $(MISC)\$(APP4TARGET).lst
-        $(IFEXIST) $(MISC)/$(APP4TARGET).lst $(THEN) type $(MISC)/$(APP4TARGET).lst  >> $(MISC)/$(APP4TARGET).lnk $(FI)
-        $(APP4LINKER) @$(MISC)\$(APP4TARGET).lnk
+		$(COMMAND_ECHO)$(SED)$(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP4TARGETN:b)_linkobj.lst >> $(MISC)\$(APP4TARGET).lst
+		$(COMMAND_ECHO)$(SED)$(IFEXIST) $(MISC)/$(APP4TARGET).lst $(THEN) type $(MISC)/$(APP4TARGET).lst  >> $(MISC)/$(APP4TARGET).lnk $(FI)
+		$(COMMAND_ECHO)$(SED)$(APP4LINKER) @$(MISC)\$(APP4TARGET).lnk
 .ENDIF		# "$(linkinc)" == ""
 .ENDIF		# "$(COM)" == "GCC"
 .IF "$(APP4TARGET)" == "loader"
-    $(PERL) loader.pl $@
-    $(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    $(RM) $@
-    $(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)$(PERL) loader.pl $@
+	$(COMMAND_ECHO)$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)$(RM) $@
+	$(COMMAND_ECHO)$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "WNT"
@@ -1043,13 +1085,14 @@ $(APP4TARGETN): $(APP4OBJS) $(APP4LIBS) \
     @-+echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP4LINKRES:b).rc
     @-+echo $(EMQ)#include  $(EMQ)"$(APP4VERINFO)$(EMQ)" >> $(MISC)/$(APP4LINKRES:b).rc
 .ENDIF		# "$(APP4VERINFO)" != ""
-    $(RC) -r -DOS2 $(APP4PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP4LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(APP4PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP4LINKRES:b).rc
 .ENDIF			# "$(APP4LINKRES)" != ""
 
 .IF "$(TARGETTYPE)" == "GUI" 
     @echo NAME $(APP4TARGET) WINDOWAPI > $(MISC)/$(APP4TARGET).def
 .ENDIF
 
+  .IF "$(VERBOSE)" == "TRUE"
     @+echo	$(APP4LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP4BASEX) \
         $(APP4STACKN) \
@@ -1064,7 +1107,8 @@ $(APP4TARGETN): $(APP4OBJS) $(APP4LIBS) \
         $(APP4LIBS) \
         $(APP4STDLIBS:^"-l") \
         $(APP4STDLIB:^"-l") $(STDLIB4:^"-l") 
-    $(APP4LINKER) -v \
+  .ENDIF
+	$(COMMAND_ECHO)$(APP4LINKER) -v \
         $(APP4LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP4BASEX) \
         $(APP4STACKN) \
@@ -1082,10 +1126,10 @@ $(APP4TARGETN): $(APP4OBJS) $(APP4LIBS) \
 
 
 .IF "$(APP4TARGET)" == "loader"
-    +$(PERL) loader.pl $@
-    +$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    +$(RM) $@
-    +$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)+$(PERL) loader.pl $@
+	$(COMMAND_ECHO)+$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)+$(RM) $@
+	$(COMMAND_ECHO)+$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -1182,7 +1226,7 @@ $(APP5TARGETN): $(APP5OBJS) $(APP5LIBS) \
     $(APP5IMP_ORD) \
     $(APP5ICON) $(APP5DEPN) $(USE_APP5DEF)
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(OS)"=="MACOSX"
     @echo unx
@@ -1196,7 +1240,9 @@ $(APP5TARGETN): $(APP5OBJS) $(APP5LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_5.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_5.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_5.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_5.cmd
 # Need to strip __objcInit symbol to avoid duplicate symbols when loading
 # libraries at runtime
@@ -1206,7 +1252,7 @@ $(APP5TARGETN): $(APP5OBJS) $(APP5LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         app $(APP5RPATH) $@
 .IF "$(TARGETTYPE)"=="GUI"
-    @echo "Making: $@.app"
+	@echo "Making:   " $(@:f).app
     @macosx-create-bundle $@
 .ENDIF		# "$(TARGETTYPE)"=="GUI"
 .ELSE		# "$(OS)"=="MACOSX"
@@ -1216,9 +1262,13 @@ $(APP5TARGETN): $(APP5OBJS) $(APP5LIBS) \
     $(APP5OBJS:s/.obj/.o/) '\' >  $(MISC)/$(TARGET).$(@:b)_5.cmd
     @cat $(mktmp /dev/null $(APP5LIBS)) | xargs -n 1 cat | sed s\#$(ROUT)\#$(OUT)\#g | sed 's#$$# \\#'  >> $(MISC)/$(TARGET).$(@:b)_5.cmd
     @echo $(APP5LINKTYPEFLAG) $(APP5LIBSALCPPRT) $(APP5STDLIBS) $(APP5STDLIB) $(STDLIB5) -o $@ >> $(MISC)/$(TARGET).$(@:b)_5.cmd
-    cat $(MISC)/$(TARGET).$(@:b)_5.cmd
+  .IF "$(VERBOSE)" == "TRUE"
+	@cat $(MISC)/$(TARGET).$(@:b)_5.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_5.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+  .ENDIF
 .ENDIF		# "$(OS)"=="MACOSX"
 .ENDIF
 .IF "$(GUI)" == "WNT"
@@ -1232,7 +1282,7 @@ $(APP5TARGETN): $(APP5OBJS) $(APP5LIBS) \
     @-echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP5LINKRES:b).rc
     @-echo $(EMQ)#include  $(EMQ)"$(APP5VERINFO)$(EMQ)" >> $(MISC)/$(APP5LINKRES:b).rc
 .ENDIF		# "$(APP5VERINFO)" != ""
-    $(RC) -DWIN32 $(APP5PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP5LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(APP5PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP5LINKRES:b).rc
 .ENDIF			# "$(APP5LINKRES)" != ""
 .IF "$(COM)" == "GCC"
     @echo mingw
@@ -1240,19 +1290,22 @@ $(APP5TARGETN): $(APP5OBJS) $(APP5LIBS) \
     @cat $(APP5LINKRES) $(subst,/res/,/res{$(subst,$(BIN), $(@:d))} $(APP5RES)) >  $(MISC)/$(@:b)_all.res
     windres $(MISC)/$(@:b)_all.res $(APP5RESO)
 .ENDIF
-    @echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
+ 	@echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
         $(APP5BASEX) $(APP5STACKN) -o $@ $(APP5OBJS) \
         -Wl,-Map,$(MISC)/$(@:b).map $(STDOBJ) $(APP5RESO) \
         `$(TYPE) /dev/null $(APP5LIBS) | sed s#$(ROUT)#$(OUT)#g` \
-        $(APP_LINKTYPE) $(APP5LIBSALCPPRT) \
-        -Wl,--start-group $(APP5STDLIBS) -Wl,--end-group $(APP5STDLIB) \
-        $(STDLIB5) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_5.cmd
+ 		$(APP_LINKTYPE) $(APP5LIBSALCPPRT) \
+ 		-Wl,--start-group $(APP5STDLIBS) -Wl,--end-group $(APP5STDLIB) \
+ 		$(STDLIB5) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_5.cmd
+  # need this empty line, else dmake somehow gets confused by the .IFs and .ENDIFs
+  .IF "$(VERBOSE)" == "TRUE"
     @$(TYPE)  $(MISC)/$(TARGET).$(@:b)_5.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_5.cmd
     @ls -l $@
 .ELSE	# "$(COM)" == "GCC"
 .IF "$(linkinc)" == ""
-    $(APP5LINKER) @$(mktmp \
+	$(COMMAND_ECHO)$(APP5LINKER) @$(mktmp \
         $(APP5LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP5BASEX) \
         $(APP5STACKN) \
@@ -1268,17 +1321,17 @@ $(APP5TARGETN): $(APP5OBJS) $(APP5LIBS) \
         )
     @-echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE
-        -$(RM) $(MISC)\$(APP5TARGET).lnk
-        -$(RM) $(MISC)\$(APP5TARGET).lst
-        -$(RM) $(MISC)\linkobj.lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP5TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP5TARGET).lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\linkobj.lst
         for %_i in ($(MISC)\*.obj) do type %_i >> $(MISC)\linkobj.lst
     type $(mktmp,$(MISC)\$(APP5TARGET).lst
         $(APP5LINKFLAGS) \
@@ -1292,16 +1345,16 @@ $(APP5TARGETN): $(APP5OBJS) $(APP5LIBS) \
         $(APP5LIBS) \
         $(APP5STDLIBS) \
         $(APP5STDLIB) $(STDLIB5))
-        $(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP5TARGETN:b)_linkobj.lst >> $(MISC)\$(APP5TARGET).lst
-        $(IFEXIST) $(MISC)/$(APP5TARGET).lst $(THEN) type $(MISC)/$(APP5TARGET).lst  >> $(MISC)/$(APP5TARGET).lnk $(FI)
-        $(APP5LINKER) @$(MISC)\$(APP5TARGET).lnk
+		$(COMMAND_ECHO)$(SED)$(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP5TARGETN:b)_linkobj.lst >> $(MISC)\$(APP5TARGET).lst
+		$(COMMAND_ECHO)$(SED)$(IFEXIST) $(MISC)/$(APP5TARGET).lst $(THEN) type $(MISC)/$(APP5TARGET).lst  >> $(MISC)/$(APP5TARGET).lnk $(FI)
+		$(COMMAND_ECHO)$(SED)$(APP5LINKER) @$(MISC)\$(APP5TARGET).lnk
 .ENDIF		# "$(linkinc)" == ""
 .ENDIF		# "$(COM)" == "GCC"
 .IF "$(APP5TARGET)" == "loader"
-    $(PERL) loader.pl $@
-    $(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    $(RM) $@
-    $(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)$(PERL) loader.pl $@
+	$(COMMAND_ECHO)$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)$(RM) $@
+	$(COMMAND_ECHO)$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "WNT"
@@ -1317,13 +1370,14 @@ $(APP5TARGETN): $(APP5OBJS) $(APP5LIBS) \
     @-+echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP5LINKRES:b).rc
     @-+echo $(EMQ)#include  $(EMQ)"$(APP5VERINFO)$(EMQ)" >> $(MISC)/$(APP5LINKRES:b).rc
 .ENDIF		# "$(APP5VERINFO)" != ""
-    $(RC) -r -DOS2 $(APP5PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP5LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(APP5PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP5LINKRES:b).rc
 .ENDIF			# "$(APP5LINKRES)" != ""
 
 .IF "$(TARGETTYPE)" == "GUI" 
     @echo NAME $(APP5TARGET) WINDOWAPI > $(MISC)/$(APP5TARGET).def
 .ENDIF
 
+  .IF "$(VERBOSE)" == "TRUE"
     @+echo	$(APP5LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP5BASEX) \
         $(APP5STACKN) \
@@ -1338,7 +1392,8 @@ $(APP5TARGETN): $(APP5OBJS) $(APP5LIBS) \
         $(APP5LIBS) \
         $(APP5STDLIBS:^"-l") \
         $(APP5STDLIB:^"-l") $(STDLIB5:^"-l") 
-    $(APP5LINKER) -v \
+  .ENDIF
+	$(COMMAND_ECHO)$(APP5LINKER) -v \
         $(APP5LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP5BASEX) \
         $(APP5STACKN) \
@@ -1356,10 +1411,10 @@ $(APP5TARGETN): $(APP5OBJS) $(APP5LIBS) \
 
 
 .IF "$(APP5TARGET)" == "loader"
-    +$(PERL) loader.pl $@
-    +$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    +$(RM) $@
-    +$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)+$(PERL) loader.pl $@
+	$(COMMAND_ECHO)+$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)+$(RM) $@
+	$(COMMAND_ECHO)+$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -1456,7 +1511,7 @@ $(APP6TARGETN): $(APP6OBJS) $(APP6LIBS) \
     $(APP6IMP_ORD) \
     $(APP6ICON) $(APP6DEPN) $(USE_APP6DEF)
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(OS)"=="MACOSX"
     @echo unx
@@ -1470,7 +1525,9 @@ $(APP6TARGETN): $(APP6OBJS) $(APP6LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_6.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_6.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_6.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_6.cmd
 # Need to strip __objcInit symbol to avoid duplicate symbols when loading
 # libraries at runtime
@@ -1480,7 +1537,7 @@ $(APP6TARGETN): $(APP6OBJS) $(APP6LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         app $(APP6RPATH) $@
 .IF "$(TARGETTYPE)"=="GUI"
-    @echo "Making: $@.app"
+	@echo "Making:   " $(@:f).app
     @macosx-create-bundle $@
 .ENDIF		# "$(TARGETTYPE)"=="GUI"
 .ELSE		# "$(OS)"=="MACOSX"
@@ -1490,9 +1547,13 @@ $(APP6TARGETN): $(APP6OBJS) $(APP6LIBS) \
     $(APP6OBJS:s/.obj/.o/) '\' >  $(MISC)/$(TARGET).$(@:b)_6.cmd
     @cat $(mktmp /dev/null $(APP6LIBS)) | xargs -n 1 cat | sed s\#$(ROUT)\#$(OUT)\#g | sed 's#$$# \\#'  >> $(MISC)/$(TARGET).$(@:b)_6.cmd
     @echo $(APP6LINKTYPEFLAG) $(APP6LIBSALCPPRT) $(APP6STDLIBS) $(APP6STDLIB) $(STDLIB6) -o $@ >> $(MISC)/$(TARGET).$(@:b)_6.cmd
-    cat $(MISC)/$(TARGET).$(@:b)_6.cmd
+  .IF "$(VERBOSE)" == "TRUE"
+	@cat $(MISC)/$(TARGET).$(@:b)_6.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_6.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+  .ENDIF
 .ENDIF		# "$(OS)"=="MACOSX"
 .ENDIF
 .IF "$(GUI)" == "WNT"
@@ -1506,7 +1567,7 @@ $(APP6TARGETN): $(APP6OBJS) $(APP6LIBS) \
     @-echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP6LINKRES:b).rc
     @-echo $(EMQ)#include  $(EMQ)"$(APP6VERINFO)$(EMQ)" >> $(MISC)/$(APP6LINKRES:b).rc
 .ENDIF		# "$(APP6VERINFO)" != ""
-    $(RC) -DWIN32 $(APP6PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP6LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(APP6PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP6LINKRES:b).rc
 .ENDIF			# "$(APP6LINKRES)" != ""
 .IF "$(COM)" == "GCC"
     @echo mingw
@@ -1514,19 +1575,22 @@ $(APP6TARGETN): $(APP6OBJS) $(APP6LIBS) \
     @cat $(APP6LINKRES) $(subst,/res/,/res{$(subst,$(BIN), $(@:d))} $(APP6RES)) >  $(MISC)/$(@:b)_all.res
     windres $(MISC)/$(@:b)_all.res $(APP6RESO)
 .ENDIF
-    @echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
+ 	@echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
         $(APP6BASEX) $(APP6STACKN) -o $@ $(APP6OBJS) \
         -Wl,-Map,$(MISC)/$(@:b).map $(STDOBJ) $(APP6RESO) \
         `$(TYPE) /dev/null $(APP6LIBS) | sed s#$(ROUT)#$(OUT)#g` \
-        $(APP_LINKTYPE) $(APP6LIBSALCPPRT) \
-        -Wl,--start-group $(APP6STDLIBS) -Wl,--end-group $(APP6STDLIB) \
-        $(STDLIB6) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_6.cmd
+ 		$(APP_LINKTYPE) $(APP6LIBSALCPPRT) \
+ 		-Wl,--start-group $(APP6STDLIBS) -Wl,--end-group $(APP6STDLIB) \
+ 		$(STDLIB6) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_6.cmd
+  # need this empty line, else dmake somehow gets confused by the .IFs and .ENDIFs
+  .IF "$(VERBOSE)" == "TRUE"
     @$(TYPE)  $(MISC)/$(TARGET).$(@:b)_6.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_6.cmd
     @ls -l $@
 .ELSE	# "$(COM)" == "GCC"
 .IF "$(linkinc)" == ""
-    $(APP6LINKER) @$(mktmp \
+	$(COMMAND_ECHO)$(APP6LINKER) @$(mktmp \
         $(APP6LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP6BASEX) \
         $(APP6STACKN) \
@@ -1542,17 +1606,17 @@ $(APP6TARGETN): $(APP6OBJS) $(APP6LIBS) \
         )
     @-echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE
-        -$(RM) $(MISC)\$(APP6TARGET).lnk
-        -$(RM) $(MISC)\$(APP6TARGET).lst
-        -$(RM) $(MISC)\linkobj.lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP6TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP6TARGET).lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\linkobj.lst
         for %_i in ($(MISC)\*.obj) do type %_i >> $(MISC)\linkobj.lst
     type $(mktmp,$(MISC)\$(APP6TARGET).lst
         $(APP6LINKFLAGS) \
@@ -1566,16 +1630,16 @@ $(APP6TARGETN): $(APP6OBJS) $(APP6LIBS) \
         $(APP6LIBS) \
         $(APP6STDLIBS) \
         $(APP6STDLIB) $(STDLIB6))
-        $(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP6TARGETN:b)_linkobj.lst >> $(MISC)\$(APP6TARGET).lst
-        $(IFEXIST) $(MISC)/$(APP6TARGET).lst $(THEN) type $(MISC)/$(APP6TARGET).lst  >> $(MISC)/$(APP6TARGET).lnk $(FI)
-        $(APP6LINKER) @$(MISC)\$(APP6TARGET).lnk
+		$(COMMAND_ECHO)$(SED)$(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP6TARGETN:b)_linkobj.lst >> $(MISC)\$(APP6TARGET).lst
+		$(COMMAND_ECHO)$(SED)$(IFEXIST) $(MISC)/$(APP6TARGET).lst $(THEN) type $(MISC)/$(APP6TARGET).lst  >> $(MISC)/$(APP6TARGET).lnk $(FI)
+		$(COMMAND_ECHO)$(SED)$(APP6LINKER) @$(MISC)\$(APP6TARGET).lnk
 .ENDIF		# "$(linkinc)" == ""
 .ENDIF		# "$(COM)" == "GCC"
 .IF "$(APP6TARGET)" == "loader"
-    $(PERL) loader.pl $@
-    $(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    $(RM) $@
-    $(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)$(PERL) loader.pl $@
+	$(COMMAND_ECHO)$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)$(RM) $@
+	$(COMMAND_ECHO)$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "WNT"
@@ -1591,13 +1655,14 @@ $(APP6TARGETN): $(APP6OBJS) $(APP6LIBS) \
     @-+echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP6LINKRES:b).rc
     @-+echo $(EMQ)#include  $(EMQ)"$(APP6VERINFO)$(EMQ)" >> $(MISC)/$(APP6LINKRES:b).rc
 .ENDIF		# "$(APP6VERINFO)" != ""
-    $(RC) -r -DOS2 $(APP6PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP6LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(APP6PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP6LINKRES:b).rc
 .ENDIF			# "$(APP6LINKRES)" != ""
 
 .IF "$(TARGETTYPE)" == "GUI" 
     @echo NAME $(APP6TARGET) WINDOWAPI > $(MISC)/$(APP6TARGET).def
 .ENDIF
 
+  .IF "$(VERBOSE)" == "TRUE"
     @+echo	$(APP6LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP6BASEX) \
         $(APP6STACKN) \
@@ -1612,7 +1677,8 @@ $(APP6TARGETN): $(APP6OBJS) $(APP6LIBS) \
         $(APP6LIBS) \
         $(APP6STDLIBS:^"-l") \
         $(APP6STDLIB:^"-l") $(STDLIB6:^"-l") 
-    $(APP6LINKER) -v \
+  .ENDIF
+	$(COMMAND_ECHO)$(APP6LINKER) -v \
         $(APP6LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP6BASEX) \
         $(APP6STACKN) \
@@ -1630,10 +1696,10 @@ $(APP6TARGETN): $(APP6OBJS) $(APP6LIBS) \
 
 
 .IF "$(APP6TARGET)" == "loader"
-    +$(PERL) loader.pl $@
-    +$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    +$(RM) $@
-    +$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)+$(PERL) loader.pl $@
+	$(COMMAND_ECHO)+$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)+$(RM) $@
+	$(COMMAND_ECHO)+$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -1730,7 +1796,7 @@ $(APP7TARGETN): $(APP7OBJS) $(APP7LIBS) \
     $(APP7IMP_ORD) \
     $(APP7ICON) $(APP7DEPN) $(USE_APP7DEF)
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(OS)"=="MACOSX"
     @echo unx
@@ -1744,7 +1810,9 @@ $(APP7TARGETN): $(APP7OBJS) $(APP7LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_7.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_7.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_7.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_7.cmd
 # Need to strip __objcInit symbol to avoid duplicate symbols when loading
 # libraries at runtime
@@ -1754,7 +1822,7 @@ $(APP7TARGETN): $(APP7OBJS) $(APP7LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         app $(APP7RPATH) $@
 .IF "$(TARGETTYPE)"=="GUI"
-    @echo "Making: $@.app"
+	@echo "Making:   " $(@:f).app
     @macosx-create-bundle $@
 .ENDIF		# "$(TARGETTYPE)"=="GUI"
 .ELSE		# "$(OS)"=="MACOSX"
@@ -1764,9 +1832,13 @@ $(APP7TARGETN): $(APP7OBJS) $(APP7LIBS) \
     $(APP7OBJS:s/.obj/.o/) '\' >  $(MISC)/$(TARGET).$(@:b)_7.cmd
     @cat $(mktmp /dev/null $(APP7LIBS)) | xargs -n 1 cat | sed s\#$(ROUT)\#$(OUT)\#g | sed 's#$$# \\#'  >> $(MISC)/$(TARGET).$(@:b)_7.cmd
     @echo $(APP7LINKTYPEFLAG) $(APP7LIBSALCPPRT) $(APP7STDLIBS) $(APP7STDLIB) $(STDLIB7) -o $@ >> $(MISC)/$(TARGET).$(@:b)_7.cmd
-    cat $(MISC)/$(TARGET).$(@:b)_7.cmd
+  .IF "$(VERBOSE)" == "TRUE"
+	@cat $(MISC)/$(TARGET).$(@:b)_7.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_7.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+  .ENDIF
 .ENDIF		# "$(OS)"=="MACOSX"
 .ENDIF
 .IF "$(GUI)" == "WNT"
@@ -1780,7 +1852,7 @@ $(APP7TARGETN): $(APP7OBJS) $(APP7LIBS) \
     @-echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP7LINKRES:b).rc
     @-echo $(EMQ)#include  $(EMQ)"$(APP7VERINFO)$(EMQ)" >> $(MISC)/$(APP7LINKRES:b).rc
 .ENDIF		# "$(APP7VERINFO)" != ""
-    $(RC) -DWIN32 $(APP7PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP7LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(APP7PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP7LINKRES:b).rc
 .ENDIF			# "$(APP7LINKRES)" != ""
 .IF "$(COM)" == "GCC"
     @echo mingw
@@ -1788,19 +1860,22 @@ $(APP7TARGETN): $(APP7OBJS) $(APP7LIBS) \
     @cat $(APP7LINKRES) $(subst,/res/,/res{$(subst,$(BIN), $(@:d))} $(APP7RES)) >  $(MISC)/$(@:b)_all.res
     windres $(MISC)/$(@:b)_all.res $(APP7RESO)
 .ENDIF
-    @echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
+ 	@echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
         $(APP7BASEX) $(APP7STACKN) -o $@ $(APP7OBJS) \
         -Wl,-Map,$(MISC)/$(@:b).map $(STDOBJ) $(APP7RESO) \
         `$(TYPE) /dev/null $(APP7LIBS) | sed s#$(ROUT)#$(OUT)#g` \
-        $(APP_LINKTYPE) $(APP7LIBSALCPPRT) \
-        -Wl,--start-group $(APP7STDLIBS) -Wl,--end-group $(APP7STDLIB) \
-        $(STDLIB7) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_7.cmd
+ 		$(APP_LINKTYPE) $(APP7LIBSALCPPRT) \
+ 		-Wl,--start-group $(APP7STDLIBS) -Wl,--end-group $(APP7STDLIB) \
+ 		$(STDLIB7) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_7.cmd
+  # need this empty line, else dmake somehow gets confused by the .IFs and .ENDIFs
+  .IF "$(VERBOSE)" == "TRUE"
     @$(TYPE)  $(MISC)/$(TARGET).$(@:b)_7.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_7.cmd
     @ls -l $@
 .ELSE	# "$(COM)" == "GCC"
 .IF "$(linkinc)" == ""
-    $(APP7LINKER) @$(mktmp \
+	$(COMMAND_ECHO)$(APP7LINKER) @$(mktmp \
         $(APP7LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP7BASEX) \
         $(APP7STACKN) \
@@ -1816,17 +1891,17 @@ $(APP7TARGETN): $(APP7OBJS) $(APP7LIBS) \
         )
     @-echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE
-        -$(RM) $(MISC)\$(APP7TARGET).lnk
-        -$(RM) $(MISC)\$(APP7TARGET).lst
-        -$(RM) $(MISC)\linkobj.lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP7TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP7TARGET).lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\linkobj.lst
         for %_i in ($(MISC)\*.obj) do type %_i >> $(MISC)\linkobj.lst
     type $(mktmp,$(MISC)\$(APP7TARGET).lst
         $(APP7LINKFLAGS) \
@@ -1840,16 +1915,16 @@ $(APP7TARGETN): $(APP7OBJS) $(APP7LIBS) \
         $(APP7LIBS) \
         $(APP7STDLIBS) \
         $(APP7STDLIB) $(STDLIB7))
-        $(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP7TARGETN:b)_linkobj.lst >> $(MISC)\$(APP7TARGET).lst
-        $(IFEXIST) $(MISC)/$(APP7TARGET).lst $(THEN) type $(MISC)/$(APP7TARGET).lst  >> $(MISC)/$(APP7TARGET).lnk $(FI)
-        $(APP7LINKER) @$(MISC)\$(APP7TARGET).lnk
+		$(COMMAND_ECHO)$(SED)$(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP7TARGETN:b)_linkobj.lst >> $(MISC)\$(APP7TARGET).lst
+		$(COMMAND_ECHO)$(SED)$(IFEXIST) $(MISC)/$(APP7TARGET).lst $(THEN) type $(MISC)/$(APP7TARGET).lst  >> $(MISC)/$(APP7TARGET).lnk $(FI)
+		$(COMMAND_ECHO)$(SED)$(APP7LINKER) @$(MISC)\$(APP7TARGET).lnk
 .ENDIF		# "$(linkinc)" == ""
 .ENDIF		# "$(COM)" == "GCC"
 .IF "$(APP7TARGET)" == "loader"
-    $(PERL) loader.pl $@
-    $(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    $(RM) $@
-    $(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)$(PERL) loader.pl $@
+	$(COMMAND_ECHO)$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)$(RM) $@
+	$(COMMAND_ECHO)$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "WNT"
@@ -1865,13 +1940,14 @@ $(APP7TARGETN): $(APP7OBJS) $(APP7LIBS) \
     @-+echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP7LINKRES:b).rc
     @-+echo $(EMQ)#include  $(EMQ)"$(APP7VERINFO)$(EMQ)" >> $(MISC)/$(APP7LINKRES:b).rc
 .ENDIF		# "$(APP7VERINFO)" != ""
-    $(RC) -r -DOS2 $(APP7PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP7LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(APP7PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP7LINKRES:b).rc
 .ENDIF			# "$(APP7LINKRES)" != ""
 
 .IF "$(TARGETTYPE)" == "GUI" 
     @echo NAME $(APP7TARGET) WINDOWAPI > $(MISC)/$(APP7TARGET).def
 .ENDIF
 
+  .IF "$(VERBOSE)" == "TRUE"
     @+echo	$(APP7LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP7BASEX) \
         $(APP7STACKN) \
@@ -1886,7 +1962,8 @@ $(APP7TARGETN): $(APP7OBJS) $(APP7LIBS) \
         $(APP7LIBS) \
         $(APP7STDLIBS:^"-l") \
         $(APP7STDLIB:^"-l") $(STDLIB7:^"-l") 
-    $(APP7LINKER) -v \
+  .ENDIF
+	$(COMMAND_ECHO)$(APP7LINKER) -v \
         $(APP7LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP7BASEX) \
         $(APP7STACKN) \
@@ -1904,10 +1981,10 @@ $(APP7TARGETN): $(APP7OBJS) $(APP7LIBS) \
 
 
 .IF "$(APP7TARGET)" == "loader"
-    +$(PERL) loader.pl $@
-    +$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    +$(RM) $@
-    +$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)+$(PERL) loader.pl $@
+	$(COMMAND_ECHO)+$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)+$(RM) $@
+	$(COMMAND_ECHO)+$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -2004,7 +2081,7 @@ $(APP8TARGETN): $(APP8OBJS) $(APP8LIBS) \
     $(APP8IMP_ORD) \
     $(APP8ICON) $(APP8DEPN) $(USE_APP8DEF)
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(OS)"=="MACOSX"
     @echo unx
@@ -2018,7 +2095,9 @@ $(APP8TARGETN): $(APP8OBJS) $(APP8LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_8.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_8.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_8.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_8.cmd
 # Need to strip __objcInit symbol to avoid duplicate symbols when loading
 # libraries at runtime
@@ -2028,7 +2107,7 @@ $(APP8TARGETN): $(APP8OBJS) $(APP8LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         app $(APP8RPATH) $@
 .IF "$(TARGETTYPE)"=="GUI"
-    @echo "Making: $@.app"
+	@echo "Making:   " $(@:f).app
     @macosx-create-bundle $@
 .ENDIF		# "$(TARGETTYPE)"=="GUI"
 .ELSE		# "$(OS)"=="MACOSX"
@@ -2038,9 +2117,13 @@ $(APP8TARGETN): $(APP8OBJS) $(APP8LIBS) \
     $(APP8OBJS:s/.obj/.o/) '\' >  $(MISC)/$(TARGET).$(@:b)_8.cmd
     @cat $(mktmp /dev/null $(APP8LIBS)) | xargs -n 1 cat | sed s\#$(ROUT)\#$(OUT)\#g | sed 's#$$# \\#'  >> $(MISC)/$(TARGET).$(@:b)_8.cmd
     @echo $(APP8LINKTYPEFLAG) $(APP8LIBSALCPPRT) $(APP8STDLIBS) $(APP8STDLIB) $(STDLIB8) -o $@ >> $(MISC)/$(TARGET).$(@:b)_8.cmd
-    cat $(MISC)/$(TARGET).$(@:b)_8.cmd
+  .IF "$(VERBOSE)" == "TRUE"
+	@cat $(MISC)/$(TARGET).$(@:b)_8.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_8.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+  .ENDIF
 .ENDIF		# "$(OS)"=="MACOSX"
 .ENDIF
 .IF "$(GUI)" == "WNT"
@@ -2054,7 +2137,7 @@ $(APP8TARGETN): $(APP8OBJS) $(APP8LIBS) \
     @-echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP8LINKRES:b).rc
     @-echo $(EMQ)#include  $(EMQ)"$(APP8VERINFO)$(EMQ)" >> $(MISC)/$(APP8LINKRES:b).rc
 .ENDIF		# "$(APP8VERINFO)" != ""
-    $(RC) -DWIN32 $(APP8PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP8LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(APP8PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP8LINKRES:b).rc
 .ENDIF			# "$(APP8LINKRES)" != ""
 .IF "$(COM)" == "GCC"
     @echo mingw
@@ -2062,19 +2145,22 @@ $(APP8TARGETN): $(APP8OBJS) $(APP8LIBS) \
     @cat $(APP8LINKRES) $(subst,/res/,/res{$(subst,$(BIN), $(@:d))} $(APP8RES)) >  $(MISC)/$(@:b)_all.res
     windres $(MISC)/$(@:b)_all.res $(APP8RESO)
 .ENDIF
-    @echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
+ 	@echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
         $(APP8BASEX) $(APP8STACKN) -o $@ $(APP8OBJS) \
         -Wl,-Map,$(MISC)/$(@:b).map $(STDOBJ) $(APP8RESO) \
         `$(TYPE) /dev/null $(APP8LIBS) | sed s#$(ROUT)#$(OUT)#g` \
-        $(APP_LINKTYPE) $(APP8LIBSALCPPRT) \
-        -Wl,--start-group $(APP8STDLIBS) -Wl,--end-group $(APP8STDLIB) \
-        $(STDLIB8) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_8.cmd
+ 		$(APP_LINKTYPE) $(APP8LIBSALCPPRT) \
+ 		-Wl,--start-group $(APP8STDLIBS) -Wl,--end-group $(APP8STDLIB) \
+ 		$(STDLIB8) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_8.cmd
+  # need this empty line, else dmake somehow gets confused by the .IFs and .ENDIFs
+  .IF "$(VERBOSE)" == "TRUE"
     @$(TYPE)  $(MISC)/$(TARGET).$(@:b)_8.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_8.cmd
     @ls -l $@
 .ELSE	# "$(COM)" == "GCC"
 .IF "$(linkinc)" == ""
-    $(APP8LINKER) @$(mktmp \
+	$(COMMAND_ECHO)$(APP8LINKER) @$(mktmp \
         $(APP8LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP8BASEX) \
         $(APP8STACKN) \
@@ -2090,17 +2176,17 @@ $(APP8TARGETN): $(APP8OBJS) $(APP8LIBS) \
         )
     @-echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE
-        -$(RM) $(MISC)\$(APP8TARGET).lnk
-        -$(RM) $(MISC)\$(APP8TARGET).lst
-        -$(RM) $(MISC)\linkobj.lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP8TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP8TARGET).lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\linkobj.lst
         for %_i in ($(MISC)\*.obj) do type %_i >> $(MISC)\linkobj.lst
     type $(mktmp,$(MISC)\$(APP8TARGET).lst
         $(APP8LINKFLAGS) \
@@ -2114,16 +2200,16 @@ $(APP8TARGETN): $(APP8OBJS) $(APP8LIBS) \
         $(APP8LIBS) \
         $(APP8STDLIBS) \
         $(APP8STDLIB) $(STDLIB8))
-        $(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP8TARGETN:b)_linkobj.lst >> $(MISC)\$(APP8TARGET).lst
-        $(IFEXIST) $(MISC)/$(APP8TARGET).lst $(THEN) type $(MISC)/$(APP8TARGET).lst  >> $(MISC)/$(APP8TARGET).lnk $(FI)
-        $(APP8LINKER) @$(MISC)\$(APP8TARGET).lnk
+		$(COMMAND_ECHO)$(SED)$(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP8TARGETN:b)_linkobj.lst >> $(MISC)\$(APP8TARGET).lst
+		$(COMMAND_ECHO)$(SED)$(IFEXIST) $(MISC)/$(APP8TARGET).lst $(THEN) type $(MISC)/$(APP8TARGET).lst  >> $(MISC)/$(APP8TARGET).lnk $(FI)
+		$(COMMAND_ECHO)$(SED)$(APP8LINKER) @$(MISC)\$(APP8TARGET).lnk
 .ENDIF		# "$(linkinc)" == ""
 .ENDIF		# "$(COM)" == "GCC"
 .IF "$(APP8TARGET)" == "loader"
-    $(PERL) loader.pl $@
-    $(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    $(RM) $@
-    $(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)$(PERL) loader.pl $@
+	$(COMMAND_ECHO)$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)$(RM) $@
+	$(COMMAND_ECHO)$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "WNT"
@@ -2139,13 +2225,14 @@ $(APP8TARGETN): $(APP8OBJS) $(APP8LIBS) \
     @-+echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP8LINKRES:b).rc
     @-+echo $(EMQ)#include  $(EMQ)"$(APP8VERINFO)$(EMQ)" >> $(MISC)/$(APP8LINKRES:b).rc
 .ENDIF		# "$(APP8VERINFO)" != ""
-    $(RC) -r -DOS2 $(APP8PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP8LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(APP8PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP8LINKRES:b).rc
 .ENDIF			# "$(APP8LINKRES)" != ""
 
 .IF "$(TARGETTYPE)" == "GUI" 
     @echo NAME $(APP8TARGET) WINDOWAPI > $(MISC)/$(APP8TARGET).def
 .ENDIF
 
+  .IF "$(VERBOSE)" == "TRUE"
     @+echo	$(APP8LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP8BASEX) \
         $(APP8STACKN) \
@@ -2160,7 +2247,8 @@ $(APP8TARGETN): $(APP8OBJS) $(APP8LIBS) \
         $(APP8LIBS) \
         $(APP8STDLIBS:^"-l") \
         $(APP8STDLIB:^"-l") $(STDLIB8:^"-l") 
-    $(APP8LINKER) -v \
+  .ENDIF
+	$(COMMAND_ECHO)$(APP8LINKER) -v \
         $(APP8LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP8BASEX) \
         $(APP8STACKN) \
@@ -2178,10 +2266,10 @@ $(APP8TARGETN): $(APP8OBJS) $(APP8LIBS) \
 
 
 .IF "$(APP8TARGET)" == "loader"
-    +$(PERL) loader.pl $@
-    +$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    +$(RM) $@
-    +$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)+$(PERL) loader.pl $@
+	$(COMMAND_ECHO)+$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)+$(RM) $@
+	$(COMMAND_ECHO)+$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -2278,7 +2366,7 @@ $(APP9TARGETN): $(APP9OBJS) $(APP9LIBS) \
     $(APP9IMP_ORD) \
     $(APP9ICON) $(APP9DEPN) $(USE_APP9DEF)
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(OS)"=="MACOSX"
     @echo unx
@@ -2292,7 +2380,9 @@ $(APP9TARGETN): $(APP9OBJS) $(APP9LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_9.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_9.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_9.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_9.cmd
 # Need to strip __objcInit symbol to avoid duplicate symbols when loading
 # libraries at runtime
@@ -2302,7 +2392,7 @@ $(APP9TARGETN): $(APP9OBJS) $(APP9LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         app $(APP9RPATH) $@
 .IF "$(TARGETTYPE)"=="GUI"
-    @echo "Making: $@.app"
+	@echo "Making:   " $(@:f).app
     @macosx-create-bundle $@
 .ENDIF		# "$(TARGETTYPE)"=="GUI"
 .ELSE		# "$(OS)"=="MACOSX"
@@ -2312,9 +2402,13 @@ $(APP9TARGETN): $(APP9OBJS) $(APP9LIBS) \
     $(APP9OBJS:s/.obj/.o/) '\' >  $(MISC)/$(TARGET).$(@:b)_9.cmd
     @cat $(mktmp /dev/null $(APP9LIBS)) | xargs -n 1 cat | sed s\#$(ROUT)\#$(OUT)\#g | sed 's#$$# \\#'  >> $(MISC)/$(TARGET).$(@:b)_9.cmd
     @echo $(APP9LINKTYPEFLAG) $(APP9LIBSALCPPRT) $(APP9STDLIBS) $(APP9STDLIB) $(STDLIB9) -o $@ >> $(MISC)/$(TARGET).$(@:b)_9.cmd
-    cat $(MISC)/$(TARGET).$(@:b)_9.cmd
+  .IF "$(VERBOSE)" == "TRUE"
+	@cat $(MISC)/$(TARGET).$(@:b)_9.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_9.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+  .ENDIF
 .ENDIF		# "$(OS)"=="MACOSX"
 .ENDIF
 .IF "$(GUI)" == "WNT"
@@ -2328,7 +2422,7 @@ $(APP9TARGETN): $(APP9OBJS) $(APP9LIBS) \
     @-echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP9LINKRES:b).rc
     @-echo $(EMQ)#include  $(EMQ)"$(APP9VERINFO)$(EMQ)" >> $(MISC)/$(APP9LINKRES:b).rc
 .ENDIF		# "$(APP9VERINFO)" != ""
-    $(RC) -DWIN32 $(APP9PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP9LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(APP9PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP9LINKRES:b).rc
 .ENDIF			# "$(APP9LINKRES)" != ""
 .IF "$(COM)" == "GCC"
     @echo mingw
@@ -2336,19 +2430,22 @@ $(APP9TARGETN): $(APP9OBJS) $(APP9LIBS) \
     @cat $(APP9LINKRES) $(subst,/res/,/res{$(subst,$(BIN), $(@:d))} $(APP9RES)) >  $(MISC)/$(@:b)_all.res
     windres $(MISC)/$(@:b)_all.res $(APP9RESO)
 .ENDIF
-    @echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
+ 	@echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
         $(APP9BASEX) $(APP9STACKN) -o $@ $(APP9OBJS) \
         -Wl,-Map,$(MISC)/$(@:b).map $(STDOBJ) $(APP9RESO) \
         `$(TYPE) /dev/null $(APP9LIBS) | sed s#$(ROUT)#$(OUT)#g` \
-        $(APP_LINKTYPE) $(APP9LIBSALCPPRT) \
-        -Wl,--start-group $(APP9STDLIBS) -Wl,--end-group $(APP9STDLIB) \
-        $(STDLIB9) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_9.cmd
+ 		$(APP_LINKTYPE) $(APP9LIBSALCPPRT) \
+ 		-Wl,--start-group $(APP9STDLIBS) -Wl,--end-group $(APP9STDLIB) \
+ 		$(STDLIB9) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_9.cmd
+  # need this empty line, else dmake somehow gets confused by the .IFs and .ENDIFs
+  .IF "$(VERBOSE)" == "TRUE"
     @$(TYPE)  $(MISC)/$(TARGET).$(@:b)_9.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_9.cmd
     @ls -l $@
 .ELSE	# "$(COM)" == "GCC"
 .IF "$(linkinc)" == ""
-    $(APP9LINKER) @$(mktmp \
+	$(COMMAND_ECHO)$(APP9LINKER) @$(mktmp \
         $(APP9LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP9BASEX) \
         $(APP9STACKN) \
@@ -2364,17 +2461,17 @@ $(APP9TARGETN): $(APP9OBJS) $(APP9LIBS) \
         )
     @-echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE
-        -$(RM) $(MISC)\$(APP9TARGET).lnk
-        -$(RM) $(MISC)\$(APP9TARGET).lst
-        -$(RM) $(MISC)\linkobj.lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP9TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP9TARGET).lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\linkobj.lst
         for %_i in ($(MISC)\*.obj) do type %_i >> $(MISC)\linkobj.lst
     type $(mktmp,$(MISC)\$(APP9TARGET).lst
         $(APP9LINKFLAGS) \
@@ -2388,16 +2485,16 @@ $(APP9TARGETN): $(APP9OBJS) $(APP9LIBS) \
         $(APP9LIBS) \
         $(APP9STDLIBS) \
         $(APP9STDLIB) $(STDLIB9))
-        $(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP9TARGETN:b)_linkobj.lst >> $(MISC)\$(APP9TARGET).lst
-        $(IFEXIST) $(MISC)/$(APP9TARGET).lst $(THEN) type $(MISC)/$(APP9TARGET).lst  >> $(MISC)/$(APP9TARGET).lnk $(FI)
-        $(APP9LINKER) @$(MISC)\$(APP9TARGET).lnk
+		$(COMMAND_ECHO)$(SED)$(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP9TARGETN:b)_linkobj.lst >> $(MISC)\$(APP9TARGET).lst
+		$(COMMAND_ECHO)$(SED)$(IFEXIST) $(MISC)/$(APP9TARGET).lst $(THEN) type $(MISC)/$(APP9TARGET).lst  >> $(MISC)/$(APP9TARGET).lnk $(FI)
+		$(COMMAND_ECHO)$(SED)$(APP9LINKER) @$(MISC)\$(APP9TARGET).lnk
 .ENDIF		# "$(linkinc)" == ""
 .ENDIF		# "$(COM)" == "GCC"
 .IF "$(APP9TARGET)" == "loader"
-    $(PERL) loader.pl $@
-    $(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    $(RM) $@
-    $(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)$(PERL) loader.pl $@
+	$(COMMAND_ECHO)$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)$(RM) $@
+	$(COMMAND_ECHO)$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "WNT"
@@ -2413,13 +2510,14 @@ $(APP9TARGETN): $(APP9OBJS) $(APP9LIBS) \
     @-+echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP9LINKRES:b).rc
     @-+echo $(EMQ)#include  $(EMQ)"$(APP9VERINFO)$(EMQ)" >> $(MISC)/$(APP9LINKRES:b).rc
 .ENDIF		# "$(APP9VERINFO)" != ""
-    $(RC) -r -DOS2 $(APP9PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP9LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(APP9PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP9LINKRES:b).rc
 .ENDIF			# "$(APP9LINKRES)" != ""
 
 .IF "$(TARGETTYPE)" == "GUI" 
     @echo NAME $(APP9TARGET) WINDOWAPI > $(MISC)/$(APP9TARGET).def
 .ENDIF
 
+  .IF "$(VERBOSE)" == "TRUE"
     @+echo	$(APP9LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP9BASEX) \
         $(APP9STACKN) \
@@ -2434,7 +2532,8 @@ $(APP9TARGETN): $(APP9OBJS) $(APP9LIBS) \
         $(APP9LIBS) \
         $(APP9STDLIBS:^"-l") \
         $(APP9STDLIB:^"-l") $(STDLIB9:^"-l") 
-    $(APP9LINKER) -v \
+  .ENDIF
+	$(COMMAND_ECHO)$(APP9LINKER) -v \
         $(APP9LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP9BASEX) \
         $(APP9STACKN) \
@@ -2452,10 +2551,10 @@ $(APP9TARGETN): $(APP9OBJS) $(APP9LIBS) \
 
 
 .IF "$(APP9TARGET)" == "loader"
-    +$(PERL) loader.pl $@
-    +$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    +$(RM) $@
-    +$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)+$(PERL) loader.pl $@
+	$(COMMAND_ECHO)+$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)+$(RM) $@
+	$(COMMAND_ECHO)+$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -2552,7 +2651,7 @@ $(APP10TARGETN): $(APP10OBJS) $(APP10LIBS) \
     $(APP10IMP_ORD) \
     $(APP10ICON) $(APP10DEPN) $(USE_APP10DEF)
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(OS)"=="MACOSX"
     @echo unx
@@ -2566,7 +2665,9 @@ $(APP10TARGETN): $(APP10OBJS) $(APP10LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_10.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_10.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_10.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_10.cmd
 # Need to strip __objcInit symbol to avoid duplicate symbols when loading
 # libraries at runtime
@@ -2576,7 +2677,7 @@ $(APP10TARGETN): $(APP10OBJS) $(APP10LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         app $(APP10RPATH) $@
 .IF "$(TARGETTYPE)"=="GUI"
-    @echo "Making: $@.app"
+	@echo "Making:   " $(@:f).app
     @macosx-create-bundle $@
 .ENDIF		# "$(TARGETTYPE)"=="GUI"
 .ELSE		# "$(OS)"=="MACOSX"
@@ -2586,9 +2687,13 @@ $(APP10TARGETN): $(APP10OBJS) $(APP10LIBS) \
     $(APP10OBJS:s/.obj/.o/) '\' >  $(MISC)/$(TARGET).$(@:b)_10.cmd
     @cat $(mktmp /dev/null $(APP10LIBS)) | xargs -n 1 cat | sed s\#$(ROUT)\#$(OUT)\#g | sed 's#$$# \\#'  >> $(MISC)/$(TARGET).$(@:b)_10.cmd
     @echo $(APP10LINKTYPEFLAG) $(APP10LIBSALCPPRT) $(APP10STDLIBS) $(APP10STDLIB) $(STDLIB10) -o $@ >> $(MISC)/$(TARGET).$(@:b)_10.cmd
-    cat $(MISC)/$(TARGET).$(@:b)_10.cmd
+  .IF "$(VERBOSE)" == "TRUE"
+	@cat $(MISC)/$(TARGET).$(@:b)_10.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_10.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+  .ENDIF
 .ENDIF		# "$(OS)"=="MACOSX"
 .ENDIF
 .IF "$(GUI)" == "WNT"
@@ -2602,7 +2707,7 @@ $(APP10TARGETN): $(APP10OBJS) $(APP10LIBS) \
     @-echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP10LINKRES:b).rc
     @-echo $(EMQ)#include  $(EMQ)"$(APP10VERINFO)$(EMQ)" >> $(MISC)/$(APP10LINKRES:b).rc
 .ENDIF		# "$(APP10VERINFO)" != ""
-    $(RC) -DWIN32 $(APP10PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP10LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(APP10PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP10LINKRES:b).rc
 .ENDIF			# "$(APP10LINKRES)" != ""
 .IF "$(COM)" == "GCC"
     @echo mingw
@@ -2610,19 +2715,22 @@ $(APP10TARGETN): $(APP10OBJS) $(APP10LIBS) \
     @cat $(APP10LINKRES) $(subst,/res/,/res{$(subst,$(BIN), $(@:d))} $(APP10RES)) >  $(MISC)/$(@:b)_all.res
     windres $(MISC)/$(@:b)_all.res $(APP10RESO)
 .ENDIF
-    @echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
+ 	@echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
         $(APP10BASEX) $(APP10STACKN) -o $@ $(APP10OBJS) \
         -Wl,-Map,$(MISC)/$(@:b).map $(STDOBJ) $(APP10RESO) \
         `$(TYPE) /dev/null $(APP10LIBS) | sed s#$(ROUT)#$(OUT)#g` \
-        $(APP_LINKTYPE) $(APP10LIBSALCPPRT) \
-        -Wl,--start-group $(APP10STDLIBS) -Wl,--end-group $(APP10STDLIB) \
-        $(STDLIB10) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_10.cmd
+ 		$(APP_LINKTYPE) $(APP10LIBSALCPPRT) \
+ 		-Wl,--start-group $(APP10STDLIBS) -Wl,--end-group $(APP10STDLIB) \
+ 		$(STDLIB10) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_10.cmd
+  # need this empty line, else dmake somehow gets confused by the .IFs and .ENDIFs
+  .IF "$(VERBOSE)" == "TRUE"
     @$(TYPE)  $(MISC)/$(TARGET).$(@:b)_10.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_10.cmd
     @ls -l $@
 .ELSE	# "$(COM)" == "GCC"
 .IF "$(linkinc)" == ""
-    $(APP10LINKER) @$(mktmp \
+	$(COMMAND_ECHO)$(APP10LINKER) @$(mktmp \
         $(APP10LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP10BASEX) \
         $(APP10STACKN) \
@@ -2638,17 +2746,17 @@ $(APP10TARGETN): $(APP10OBJS) $(APP10LIBS) \
         )
     @-echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE
-        -$(RM) $(MISC)\$(APP10TARGET).lnk
-        -$(RM) $(MISC)\$(APP10TARGET).lst
-        -$(RM) $(MISC)\linkobj.lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP10TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP10TARGET).lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\linkobj.lst
         for %_i in ($(MISC)\*.obj) do type %_i >> $(MISC)\linkobj.lst
     type $(mktmp,$(MISC)\$(APP10TARGET).lst
         $(APP10LINKFLAGS) \
@@ -2662,16 +2770,16 @@ $(APP10TARGETN): $(APP10OBJS) $(APP10LIBS) \
         $(APP10LIBS) \
         $(APP10STDLIBS) \
         $(APP10STDLIB) $(STDLIB10))
-        $(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP10TARGETN:b)_linkobj.lst >> $(MISC)\$(APP10TARGET).lst
-        $(IFEXIST) $(MISC)/$(APP10TARGET).lst $(THEN) type $(MISC)/$(APP10TARGET).lst  >> $(MISC)/$(APP10TARGET).lnk $(FI)
-        $(APP10LINKER) @$(MISC)\$(APP10TARGET).lnk
+		$(COMMAND_ECHO)$(SED)$(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP10TARGETN:b)_linkobj.lst >> $(MISC)\$(APP10TARGET).lst
+		$(COMMAND_ECHO)$(SED)$(IFEXIST) $(MISC)/$(APP10TARGET).lst $(THEN) type $(MISC)/$(APP10TARGET).lst  >> $(MISC)/$(APP10TARGET).lnk $(FI)
+		$(COMMAND_ECHO)$(SED)$(APP10LINKER) @$(MISC)\$(APP10TARGET).lnk
 .ENDIF		# "$(linkinc)" == ""
 .ENDIF		# "$(COM)" == "GCC"
 .IF "$(APP10TARGET)" == "loader"
-    $(PERL) loader.pl $@
-    $(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    $(RM) $@
-    $(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)$(PERL) loader.pl $@
+	$(COMMAND_ECHO)$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)$(RM) $@
+	$(COMMAND_ECHO)$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "WNT"
@@ -2687,13 +2795,14 @@ $(APP10TARGETN): $(APP10OBJS) $(APP10LIBS) \
     @-+echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP10LINKRES:b).rc
     @-+echo $(EMQ)#include  $(EMQ)"$(APP10VERINFO)$(EMQ)" >> $(MISC)/$(APP10LINKRES:b).rc
 .ENDIF		# "$(APP10VERINFO)" != ""
-    $(RC) -r -DOS2 $(APP10PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP10LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(APP10PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP10LINKRES:b).rc
 .ENDIF			# "$(APP10LINKRES)" != ""
 
 .IF "$(TARGETTYPE)" == "GUI" 
     @echo NAME $(APP10TARGET) WINDOWAPI > $(MISC)/$(APP10TARGET).def
 .ENDIF
 
+  .IF "$(VERBOSE)" == "TRUE"
     @+echo	$(APP10LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP10BASEX) \
         $(APP10STACKN) \
@@ -2708,7 +2817,8 @@ $(APP10TARGETN): $(APP10OBJS) $(APP10LIBS) \
         $(APP10LIBS) \
         $(APP10STDLIBS:^"-l") \
         $(APP10STDLIB:^"-l") $(STDLIB10:^"-l") 
-    $(APP10LINKER) -v \
+  .ENDIF
+	$(COMMAND_ECHO)$(APP10LINKER) -v \
         $(APP10LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP10BASEX) \
         $(APP10STACKN) \
@@ -2726,10 +2836,10 @@ $(APP10TARGETN): $(APP10OBJS) $(APP10LIBS) \
 
 
 .IF "$(APP10TARGET)" == "loader"
-    +$(PERL) loader.pl $@
-    +$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    +$(RM) $@
-    +$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)+$(PERL) loader.pl $@
+	$(COMMAND_ECHO)+$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)+$(RM) $@
+	$(COMMAND_ECHO)+$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "OS2"
diff --git solenv/inc/_tg_def.mk solenv/inc/_tg_def.mk
index cae6cd4..aac2ac3 100644
--- solenv/inc/_tg_def.mk
+++ solenv/inc/_tg_def.mk
@@ -20,18 +20,18 @@ $(DEF1EXPORTFILE) : $(SHL1OBJS) $(SHL1LIBS)
 .ENDIF # .IF "$(COM)"=="GCC"
 
 $(DEF1EXPORTFILE) : $(SHL1VERSIONMAP)
-    $(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
+	$(COMMAND_ECHO)$(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
 .IF "$(COM)"=="GCC"
-    -$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
-    -$(GREP) "\*\|?" $@ > $@.symbols-regexp
+	$(COMMAND_ECHO)-$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
+	$(COMMAND_ECHO)-$(GREP) "\*\|?" $@ > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
-    nm -gP $(SHL1OBJS) \
-        `$(TYPE) /dev/null $(foreach,j,$(SHL1LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
-        | $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)nm -gP $(SHL1OBJS) \
+ 		`$(TYPE) /dev/null $(foreach,j,$(SHL1LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
+ 		| $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
-    $(RENAME) $@.exported-symbols $@
+	$(COMMAND_ECHO)$(RENAME) $@.exported-symbols $@
 .ENDIF # .IF "$(COM)"=="GCC"
 
 .ENDIF			# "$(GUI)"=="WNT"
@@ -63,8 +63,10 @@ $(DEF1TARGETN) : \
 $(DEF1TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(EMQ)"$(SHL1TARGETN:f)$(EMQ)" 								 >$@.tmpfile
 .IF "$(COM)"!="GCC"
     @echo HEAPSIZE	  0 											>>$@.tmpfile
@@ -77,16 +79,16 @@ $(DEF1TARGETN) .PHONY :
 .IF "$(DEFLIB1NAME)"!=""
 .IF "$(COM)"=="GCC"
     @-$(RM) $(MISC)/$(SHL1TARGET).exp
-    dlltool --output-def $(MISC)/$(SHL1TARGET).exp --export-all-symbols \
+	$(COMMAND_ECHO)dlltool --output-def $(MISC)/$(SHL1TARGET).exp --export-all-symbols \
          `$(TYPE) $(foreach,i,$(DEFLIB1NAME) $(SLB)/$(i).lib) | sed s#$(ROUT)#$(PRJ)/$(ROUT)#g`
-    tail --lines +3 $(MISC)/$(SHL1TARGET).exp | sed '/^;/d' >>$@.tmpfile
+	$(COMMAND_ECHO)tail --lines +3 $(MISC)/$(SHL1TARGET).exp | sed '/^;/d' >>$@.tmpfile
     @-$(RM) $(MISC)/$(SHL1TARGET).exp
 .ELSE
 .IF "$(SHL1USE_EXPORTS)"==""
     @-$(RMHACK1) $(MISC)/$(SHL1TARGET).exp
     @$(LIBMGR) -EXTRACT:/ /OUT:$(MISC)/$(SHL1TARGET).exp $(SLB)/$(DEFLIB1NAME).lib
     @$(LDUMP2) -N $(EXPORT_ALL_SWITCH) -F $(MISC)/$(SHL1TARGET).flt $(MISC)/$(SHL1TARGET).exp			   >>$@.tmpfile
-    $(RMHACK1) $(MISC)/$(SHL1TARGET).exp
+	$(COMMAND_ECHO)$(RMHACK1) $(MISC)/$(SHL1TARGET).exp
 .ELSE			# "$(SHL1USE_EXPORTS)"==""
     @$(DUMPBIN) -DIRECTIVES  $(foreach,i,$(DEFLIB1NAME) $(SLB)/$(i).lib) | $(GREP) EXPORT: > $(MISC)/$(SHL1TARGET).direct
     @$(LDUMP2) -N -D $(EXPORT_ALL_SWITCH) -F $(DEF1FILTER) $(MISC)/$(SHL1TARGET).direct >>$@.tmpfile
@@ -155,9 +157,9 @@ $(DEF1TARGETN) .PHONY :
 .ENDIF
 .IF "$(DEF1EXPORTFILE)"!=""
 .IF "$(COM)"=="GCC"
-    $(TYPE) $(DEF1EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF1EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
 .ELSE
-    $(TYPE) $(DEF1EXPORTFILE) >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF1EXPORTFILE) >> $@.tmpfile
 .ENDIF
 .ENDIF
     @-$(RM) $@
@@ -181,8 +183,10 @@ $(DEF1TARGETN) : \
 $(DEF1TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @+-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(SHL1TARGET8) INITINSTANCE TERMINSTANCE	 >$@.tmpfile
     @echo DATA MULTIPLE	 >>$@.tmpfile
     @echo DESCRIPTION	'StarView 3.00 $(DEF1DES) $(UPD) $(UPDMINOR)' >>$@.tmpfile
@@ -263,11 +267,11 @@ $(DEF1TARGETN) .PHONY :
     @sort < $@.tmp_ord | uniq > $@.exptmpfile
     @fix_def_ord < $@.exptmpfile >> $@.tmpfile
     @+-$(RM) $@
-    +$(RENAME) $@.tmpfile $@
+	$(COMMAND_ECHO)+$(RENAME) $@.tmpfile $@
     @+-$(RM) $@.tmp_ord
     @+-$(RM) $@.exptmpfile
-    +$(IMPLIB) $(IMPLIBFLAGS) $(SHL1IMPLIBN:s/.lib/.a/) $@
-    +emxomf -o $(SHL1IMPLIBN) $(SHL1IMPLIBN:s/.lib/.a/) 
+	$(COMMAND_ECHO)+$(IMPLIB) $(IMPLIBFLAGS) $(SHL1IMPLIBN:s/.lib/.a/) $@
+	$(COMMAND_ECHO)+emxomf -o $(SHL1IMPLIBN) $(SHL1IMPLIBN:s/.lib/.a/) 
 
 .ENDIF			# "$(GUI)"=="OS2"
 
@@ -303,18 +307,18 @@ $(DEF2EXPORTFILE) : $(SHL2OBJS) $(SHL2LIBS)
 .ENDIF # .IF "$(COM)"=="GCC"
 
 $(DEF2EXPORTFILE) : $(SHL2VERSIONMAP)
-    $(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
+	$(COMMAND_ECHO)$(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
 .IF "$(COM)"=="GCC"
-    -$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
-    -$(GREP) "\*\|?" $@ > $@.symbols-regexp
+	$(COMMAND_ECHO)-$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
+	$(COMMAND_ECHO)-$(GREP) "\*\|?" $@ > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
-    nm -gP $(SHL2OBJS) \
-        `$(TYPE) /dev/null $(foreach,j,$(SHL2LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
-        | $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)nm -gP $(SHL2OBJS) \
+ 		`$(TYPE) /dev/null $(foreach,j,$(SHL2LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
+ 		| $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
-    $(RENAME) $@.exported-symbols $@
+	$(COMMAND_ECHO)$(RENAME) $@.exported-symbols $@
 .ENDIF # .IF "$(COM)"=="GCC"
 
 .ENDIF			# "$(GUI)"=="WNT"
@@ -346,8 +350,10 @@ $(DEF2TARGETN) : \
 $(DEF2TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(EMQ)"$(SHL2TARGETN:f)$(EMQ)" 								 >$@.tmpfile
 .IF "$(COM)"!="GCC"
     @echo HEAPSIZE	  0 											>>$@.tmpfile
@@ -360,16 +366,16 @@ $(DEF2TARGETN) .PHONY :
 .IF "$(DEFLIB2NAME)"!=""
 .IF "$(COM)"=="GCC"
     @-$(RM) $(MISC)/$(SHL2TARGET).exp
-    dlltool --output-def $(MISC)/$(SHL2TARGET).exp --export-all-symbols \
+	$(COMMAND_ECHO)dlltool --output-def $(MISC)/$(SHL2TARGET).exp --export-all-symbols \
          `$(TYPE) $(foreach,i,$(DEFLIB2NAME) $(SLB)/$(i).lib) | sed s#$(ROUT)#$(PRJ)/$(ROUT)#g`
-    tail --lines +3 $(MISC)/$(SHL2TARGET).exp | sed '/^;/d' >>$@.tmpfile
+	$(COMMAND_ECHO)tail --lines +3 $(MISC)/$(SHL2TARGET).exp | sed '/^;/d' >>$@.tmpfile
     @-$(RM) $(MISC)/$(SHL2TARGET).exp
 .ELSE
 .IF "$(SHL2USE_EXPORTS)"==""
     @-$(RMHACK2) $(MISC)/$(SHL2TARGET).exp
     @$(LIBMGR) -EXTRACT:/ /OUT:$(MISC)/$(SHL2TARGET).exp $(SLB)/$(DEFLIB2NAME).lib
     @$(LDUMP2) -N $(EXPORT_ALL_SWITCH) -F $(MISC)/$(SHL2TARGET).flt $(MISC)/$(SHL2TARGET).exp			   >>$@.tmpfile
-    $(RMHACK2) $(MISC)/$(SHL2TARGET).exp
+	$(COMMAND_ECHO)$(RMHACK2) $(MISC)/$(SHL2TARGET).exp
 .ELSE			# "$(SHL2USE_EXPORTS)"==""
     @$(DUMPBIN) -DIRECTIVES  $(foreach,i,$(DEFLIB2NAME) $(SLB)/$(i).lib) | $(GREP) EXPORT: > $(MISC)/$(SHL2TARGET).direct
     @$(LDUMP2) -N -D $(EXPORT_ALL_SWITCH) -F $(DEF2FILTER) $(MISC)/$(SHL2TARGET).direct >>$@.tmpfile
@@ -438,9 +444,9 @@ $(DEF2TARGETN) .PHONY :
 .ENDIF
 .IF "$(DEF2EXPORTFILE)"!=""
 .IF "$(COM)"=="GCC"
-    $(TYPE) $(DEF2EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF2EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
 .ELSE
-    $(TYPE) $(DEF2EXPORTFILE) >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF2EXPORTFILE) >> $@.tmpfile
 .ENDIF
 .ENDIF
     @-$(RM) $@
@@ -464,8 +470,10 @@ $(DEF2TARGETN) : \
 $(DEF2TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @+-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(SHL2TARGET8) INITINSTANCE TERMINSTANCE	 >$@.tmpfile
     @echo DATA MULTIPLE	 >>$@.tmpfile
     @echo DESCRIPTION	'StarView 3.00 $(DEF2DES) $(UPD) $(UPDMINOR)' >>$@.tmpfile
@@ -546,11 +554,11 @@ $(DEF2TARGETN) .PHONY :
     @sort < $@.tmp_ord | uniq > $@.exptmpfile
     @fix_def_ord < $@.exptmpfile >> $@.tmpfile
     @+-$(RM) $@
-    +$(RENAME) $@.tmpfile $@
+	$(COMMAND_ECHO)+$(RENAME) $@.tmpfile $@
     @+-$(RM) $@.tmp_ord
     @+-$(RM) $@.exptmpfile
-    +$(IMPLIB) $(IMPLIBFLAGS) $(SHL2IMPLIBN:s/.lib/.a/) $@
-    +emxomf -o $(SHL2IMPLIBN) $(SHL2IMPLIBN:s/.lib/.a/) 
+	$(COMMAND_ECHO)+$(IMPLIB) $(IMPLIBFLAGS) $(SHL2IMPLIBN:s/.lib/.a/) $@
+	$(COMMAND_ECHO)+emxomf -o $(SHL2IMPLIBN) $(SHL2IMPLIBN:s/.lib/.a/) 
 
 .ENDIF			# "$(GUI)"=="OS2"
 
@@ -586,18 +594,18 @@ $(DEF3EXPORTFILE) : $(SHL3OBJS) $(SHL3LIBS)
 .ENDIF # .IF "$(COM)"=="GCC"
 
 $(DEF3EXPORTFILE) : $(SHL3VERSIONMAP)
-    $(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
+	$(COMMAND_ECHO)$(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
 .IF "$(COM)"=="GCC"
-    -$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
-    -$(GREP) "\*\|?" $@ > $@.symbols-regexp
+	$(COMMAND_ECHO)-$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
+	$(COMMAND_ECHO)-$(GREP) "\*\|?" $@ > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
-    nm -gP $(SHL3OBJS) \
-        `$(TYPE) /dev/null $(foreach,j,$(SHL3LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
-        | $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)nm -gP $(SHL3OBJS) \
+ 		`$(TYPE) /dev/null $(foreach,j,$(SHL3LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
+ 		| $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
-    $(RENAME) $@.exported-symbols $@
+	$(COMMAND_ECHO)$(RENAME) $@.exported-symbols $@
 .ENDIF # .IF "$(COM)"=="GCC"
 
 .ENDIF			# "$(GUI)"=="WNT"
@@ -629,8 +637,10 @@ $(DEF3TARGETN) : \
 $(DEF3TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(EMQ)"$(SHL3TARGETN:f)$(EMQ)" 								 >$@.tmpfile
 .IF "$(COM)"!="GCC"
     @echo HEAPSIZE	  0 											>>$@.tmpfile
@@ -643,16 +653,16 @@ $(DEF3TARGETN) .PHONY :
 .IF "$(DEFLIB3NAME)"!=""
 .IF "$(COM)"=="GCC"
     @-$(RM) $(MISC)/$(SHL3TARGET).exp
-    dlltool --output-def $(MISC)/$(SHL3TARGET).exp --export-all-symbols \
+	$(COMMAND_ECHO)dlltool --output-def $(MISC)/$(SHL3TARGET).exp --export-all-symbols \
          `$(TYPE) $(foreach,i,$(DEFLIB3NAME) $(SLB)/$(i).lib) | sed s#$(ROUT)#$(PRJ)/$(ROUT)#g`
-    tail --lines +3 $(MISC)/$(SHL3TARGET).exp | sed '/^;/d' >>$@.tmpfile
+	$(COMMAND_ECHO)tail --lines +3 $(MISC)/$(SHL3TARGET).exp | sed '/^;/d' >>$@.tmpfile
     @-$(RM) $(MISC)/$(SHL3TARGET).exp
 .ELSE
 .IF "$(SHL3USE_EXPORTS)"==""
     @-$(RMHACK3) $(MISC)/$(SHL3TARGET).exp
     @$(LIBMGR) -EXTRACT:/ /OUT:$(MISC)/$(SHL3TARGET).exp $(SLB)/$(DEFLIB3NAME).lib
     @$(LDUMP2) -N $(EXPORT_ALL_SWITCH) -F $(MISC)/$(SHL3TARGET).flt $(MISC)/$(SHL3TARGET).exp			   >>$@.tmpfile
-    $(RMHACK3) $(MISC)/$(SHL3TARGET).exp
+	$(COMMAND_ECHO)$(RMHACK3) $(MISC)/$(SHL3TARGET).exp
 .ELSE			# "$(SHL3USE_EXPORTS)"==""
     @$(DUMPBIN) -DIRECTIVES  $(foreach,i,$(DEFLIB3NAME) $(SLB)/$(i).lib) | $(GREP) EXPORT: > $(MISC)/$(SHL3TARGET).direct
     @$(LDUMP2) -N -D $(EXPORT_ALL_SWITCH) -F $(DEF3FILTER) $(MISC)/$(SHL3TARGET).direct >>$@.tmpfile
@@ -721,9 +731,9 @@ $(DEF3TARGETN) .PHONY :
 .ENDIF
 .IF "$(DEF3EXPORTFILE)"!=""
 .IF "$(COM)"=="GCC"
-    $(TYPE) $(DEF3EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF3EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
 .ELSE
-    $(TYPE) $(DEF3EXPORTFILE) >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF3EXPORTFILE) >> $@.tmpfile
 .ENDIF
 .ENDIF
     @-$(RM) $@
@@ -747,8 +757,10 @@ $(DEF3TARGETN) : \
 $(DEF3TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @+-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(SHL3TARGET8) INITINSTANCE TERMINSTANCE	 >$@.tmpfile
     @echo DATA MULTIPLE	 >>$@.tmpfile
     @echo DESCRIPTION	'StarView 3.00 $(DEF3DES) $(UPD) $(UPDMINOR)' >>$@.tmpfile
@@ -829,11 +841,11 @@ $(DEF3TARGETN) .PHONY :
     @sort < $@.tmp_ord | uniq > $@.exptmpfile
     @fix_def_ord < $@.exptmpfile >> $@.tmpfile
     @+-$(RM) $@
-    +$(RENAME) $@.tmpfile $@
+	$(COMMAND_ECHO)+$(RENAME) $@.tmpfile $@
     @+-$(RM) $@.tmp_ord
     @+-$(RM) $@.exptmpfile
-    +$(IMPLIB) $(IMPLIBFLAGS) $(SHL3IMPLIBN:s/.lib/.a/) $@
-    +emxomf -o $(SHL3IMPLIBN) $(SHL3IMPLIBN:s/.lib/.a/) 
+	$(COMMAND_ECHO)+$(IMPLIB) $(IMPLIBFLAGS) $(SHL3IMPLIBN:s/.lib/.a/) $@
+	$(COMMAND_ECHO)+emxomf -o $(SHL3IMPLIBN) $(SHL3IMPLIBN:s/.lib/.a/) 
 
 .ENDIF			# "$(GUI)"=="OS2"
 
@@ -869,18 +881,18 @@ $(DEF4EXPORTFILE) : $(SHL4OBJS) $(SHL4LIBS)
 .ENDIF # .IF "$(COM)"=="GCC"
 
 $(DEF4EXPORTFILE) : $(SHL4VERSIONMAP)
-    $(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
+	$(COMMAND_ECHO)$(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
 .IF "$(COM)"=="GCC"
-    -$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
-    -$(GREP) "\*\|?" $@ > $@.symbols-regexp
+	$(COMMAND_ECHO)-$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
+	$(COMMAND_ECHO)-$(GREP) "\*\|?" $@ > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
-    nm -gP $(SHL4OBJS) \
-        `$(TYPE) /dev/null $(foreach,j,$(SHL4LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
-        | $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)nm -gP $(SHL4OBJS) \
+ 		`$(TYPE) /dev/null $(foreach,j,$(SHL4LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
+ 		| $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
-    $(RENAME) $@.exported-symbols $@
+	$(COMMAND_ECHO)$(RENAME) $@.exported-symbols $@
 .ENDIF # .IF "$(COM)"=="GCC"
 
 .ENDIF			# "$(GUI)"=="WNT"
@@ -912,8 +924,10 @@ $(DEF4TARGETN) : \
 $(DEF4TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(EMQ)"$(SHL4TARGETN:f)$(EMQ)" 								 >$@.tmpfile
 .IF "$(COM)"!="GCC"
     @echo HEAPSIZE	  0 											>>$@.tmpfile
@@ -926,16 +940,16 @@ $(DEF4TARGETN) .PHONY :
 .IF "$(DEFLIB4NAME)"!=""
 .IF "$(COM)"=="GCC"
     @-$(RM) $(MISC)/$(SHL4TARGET).exp
-    dlltool --output-def $(MISC)/$(SHL4TARGET).exp --export-all-symbols \
+	$(COMMAND_ECHO)dlltool --output-def $(MISC)/$(SHL4TARGET).exp --export-all-symbols \
          `$(TYPE) $(foreach,i,$(DEFLIB4NAME) $(SLB)/$(i).lib) | sed s#$(ROUT)#$(PRJ)/$(ROUT)#g`
-    tail --lines +3 $(MISC)/$(SHL4TARGET).exp | sed '/^;/d' >>$@.tmpfile
+	$(COMMAND_ECHO)tail --lines +3 $(MISC)/$(SHL4TARGET).exp | sed '/^;/d' >>$@.tmpfile
     @-$(RM) $(MISC)/$(SHL4TARGET).exp
 .ELSE
 .IF "$(SHL4USE_EXPORTS)"==""
     @-$(RMHACK4) $(MISC)/$(SHL4TARGET).exp
     @$(LIBMGR) -EXTRACT:/ /OUT:$(MISC)/$(SHL4TARGET).exp $(SLB)/$(DEFLIB4NAME).lib
     @$(LDUMP2) -N $(EXPORT_ALL_SWITCH) -F $(MISC)/$(SHL4TARGET).flt $(MISC)/$(SHL4TARGET).exp			   >>$@.tmpfile
-    $(RMHACK4) $(MISC)/$(SHL4TARGET).exp
+	$(COMMAND_ECHO)$(RMHACK4) $(MISC)/$(SHL4TARGET).exp
 .ELSE			# "$(SHL4USE_EXPORTS)"==""
     @$(DUMPBIN) -DIRECTIVES  $(foreach,i,$(DEFLIB4NAME) $(SLB)/$(i).lib) | $(GREP) EXPORT: > $(MISC)/$(SHL4TARGET).direct
     @$(LDUMP2) -N -D $(EXPORT_ALL_SWITCH) -F $(DEF4FILTER) $(MISC)/$(SHL4TARGET).direct >>$@.tmpfile
@@ -1004,9 +1018,9 @@ $(DEF4TARGETN) .PHONY :
 .ENDIF
 .IF "$(DEF4EXPORTFILE)"!=""
 .IF "$(COM)"=="GCC"
-    $(TYPE) $(DEF4EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF4EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
 .ELSE
-    $(TYPE) $(DEF4EXPORTFILE) >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF4EXPORTFILE) >> $@.tmpfile
 .ENDIF
 .ENDIF
     @-$(RM) $@
@@ -1030,8 +1044,10 @@ $(DEF4TARGETN) : \
 $(DEF4TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @+-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(SHL4TARGET8) INITINSTANCE TERMINSTANCE	 >$@.tmpfile
     @echo DATA MULTIPLE	 >>$@.tmpfile
     @echo DESCRIPTION	'StarView 3.00 $(DEF4DES) $(UPD) $(UPDMINOR)' >>$@.tmpfile
@@ -1112,11 +1128,11 @@ $(DEF4TARGETN) .PHONY :
     @sort < $@.tmp_ord | uniq > $@.exptmpfile
     @fix_def_ord < $@.exptmpfile >> $@.tmpfile
     @+-$(RM) $@
-    +$(RENAME) $@.tmpfile $@
+	$(COMMAND_ECHO)+$(RENAME) $@.tmpfile $@
     @+-$(RM) $@.tmp_ord
     @+-$(RM) $@.exptmpfile
-    +$(IMPLIB) $(IMPLIBFLAGS) $(SHL4IMPLIBN:s/.lib/.a/) $@
-    +emxomf -o $(SHL4IMPLIBN) $(SHL4IMPLIBN:s/.lib/.a/) 
+	$(COMMAND_ECHO)+$(IMPLIB) $(IMPLIBFLAGS) $(SHL4IMPLIBN:s/.lib/.a/) $@
+	$(COMMAND_ECHO)+emxomf -o $(SHL4IMPLIBN) $(SHL4IMPLIBN:s/.lib/.a/) 
 
 .ENDIF			# "$(GUI)"=="OS2"
 
@@ -1152,18 +1168,18 @@ $(DEF5EXPORTFILE) : $(SHL5OBJS) $(SHL5LIBS)
 .ENDIF # .IF "$(COM)"=="GCC"
 
 $(DEF5EXPORTFILE) : $(SHL5VERSIONMAP)
-    $(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
+	$(COMMAND_ECHO)$(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
 .IF "$(COM)"=="GCC"
-    -$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
-    -$(GREP) "\*\|?" $@ > $@.symbols-regexp
+	$(COMMAND_ECHO)-$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
+	$(COMMAND_ECHO)-$(GREP) "\*\|?" $@ > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
-    nm -gP $(SHL5OBJS) \
-        `$(TYPE) /dev/null $(foreach,j,$(SHL5LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
-        | $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)nm -gP $(SHL5OBJS) \
+ 		`$(TYPE) /dev/null $(foreach,j,$(SHL5LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
+ 		| $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
-    $(RENAME) $@.exported-symbols $@
+	$(COMMAND_ECHO)$(RENAME) $@.exported-symbols $@
 .ENDIF # .IF "$(COM)"=="GCC"
 
 .ENDIF			# "$(GUI)"=="WNT"
@@ -1195,8 +1211,10 @@ $(DEF5TARGETN) : \
 $(DEF5TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(EMQ)"$(SHL5TARGETN:f)$(EMQ)" 								 >$@.tmpfile
 .IF "$(COM)"!="GCC"
     @echo HEAPSIZE	  0 											>>$@.tmpfile
@@ -1209,16 +1227,16 @@ $(DEF5TARGETN) .PHONY :
 .IF "$(DEFLIB5NAME)"!=""
 .IF "$(COM)"=="GCC"
     @-$(RM) $(MISC)/$(SHL5TARGET).exp
-    dlltool --output-def $(MISC)/$(SHL5TARGET).exp --export-all-symbols \
+	$(COMMAND_ECHO)dlltool --output-def $(MISC)/$(SHL5TARGET).exp --export-all-symbols \
          `$(TYPE) $(foreach,i,$(DEFLIB5NAME) $(SLB)/$(i).lib) | sed s#$(ROUT)#$(PRJ)/$(ROUT)#g`
-    tail --lines +3 $(MISC)/$(SHL5TARGET).exp | sed '/^;/d' >>$@.tmpfile
+	$(COMMAND_ECHO)tail --lines +3 $(MISC)/$(SHL5TARGET).exp | sed '/^;/d' >>$@.tmpfile
     @-$(RM) $(MISC)/$(SHL5TARGET).exp
 .ELSE
 .IF "$(SHL5USE_EXPORTS)"==""
     @-$(RMHACK5) $(MISC)/$(SHL5TARGET).exp
     @$(LIBMGR) -EXTRACT:/ /OUT:$(MISC)/$(SHL5TARGET).exp $(SLB)/$(DEFLIB5NAME).lib
     @$(LDUMP2) -N $(EXPORT_ALL_SWITCH) -F $(MISC)/$(SHL5TARGET).flt $(MISC)/$(SHL5TARGET).exp			   >>$@.tmpfile
-    $(RMHACK5) $(MISC)/$(SHL5TARGET).exp
+	$(COMMAND_ECHO)$(RMHACK5) $(MISC)/$(SHL5TARGET).exp
 .ELSE			# "$(SHL5USE_EXPORTS)"==""
     @$(DUMPBIN) -DIRECTIVES  $(foreach,i,$(DEFLIB5NAME) $(SLB)/$(i).lib) | $(GREP) EXPORT: > $(MISC)/$(SHL5TARGET).direct
     @$(LDUMP2) -N -D $(EXPORT_ALL_SWITCH) -F $(DEF5FILTER) $(MISC)/$(SHL5TARGET).direct >>$@.tmpfile
@@ -1287,9 +1305,9 @@ $(DEF5TARGETN) .PHONY :
 .ENDIF
 .IF "$(DEF5EXPORTFILE)"!=""
 .IF "$(COM)"=="GCC"
-    $(TYPE) $(DEF5EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF5EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
 .ELSE
-    $(TYPE) $(DEF5EXPORTFILE) >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF5EXPORTFILE) >> $@.tmpfile
 .ENDIF
 .ENDIF
     @-$(RM) $@
@@ -1313,8 +1331,10 @@ $(DEF5TARGETN) : \
 $(DEF5TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @+-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(SHL5TARGET8) INITINSTANCE TERMINSTANCE	 >$@.tmpfile
     @echo DATA MULTIPLE	 >>$@.tmpfile
     @echo DESCRIPTION	'StarView 3.00 $(DEF5DES) $(UPD) $(UPDMINOR)' >>$@.tmpfile
@@ -1395,11 +1415,11 @@ $(DEF5TARGETN) .PHONY :
     @sort < $@.tmp_ord | uniq > $@.exptmpfile
     @fix_def_ord < $@.exptmpfile >> $@.tmpfile
     @+-$(RM) $@
-    +$(RENAME) $@.tmpfile $@
+	$(COMMAND_ECHO)+$(RENAME) $@.tmpfile $@
     @+-$(RM) $@.tmp_ord
     @+-$(RM) $@.exptmpfile
-    +$(IMPLIB) $(IMPLIBFLAGS) $(SHL5IMPLIBN:s/.lib/.a/) $@
-    +emxomf -o $(SHL5IMPLIBN) $(SHL5IMPLIBN:s/.lib/.a/) 
+	$(COMMAND_ECHO)+$(IMPLIB) $(IMPLIBFLAGS) $(SHL5IMPLIBN:s/.lib/.a/) $@
+	$(COMMAND_ECHO)+emxomf -o $(SHL5IMPLIBN) $(SHL5IMPLIBN:s/.lib/.a/) 
 
 .ENDIF			# "$(GUI)"=="OS2"
 
@@ -1435,18 +1455,18 @@ $(DEF6EXPORTFILE) : $(SHL6OBJS) $(SHL6LIBS)
 .ENDIF # .IF "$(COM)"=="GCC"
 
 $(DEF6EXPORTFILE) : $(SHL6VERSIONMAP)
-    $(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
+	$(COMMAND_ECHO)$(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
 .IF "$(COM)"=="GCC"
-    -$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
-    -$(GREP) "\*\|?" $@ > $@.symbols-regexp
+	$(COMMAND_ECHO)-$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
+	$(COMMAND_ECHO)-$(GREP) "\*\|?" $@ > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
-    nm -gP $(SHL6OBJS) \
-        `$(TYPE) /dev/null $(foreach,j,$(SHL6LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
-        | $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)nm -gP $(SHL6OBJS) \
+ 		`$(TYPE) /dev/null $(foreach,j,$(SHL6LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
+ 		| $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
-    $(RENAME) $@.exported-symbols $@
+	$(COMMAND_ECHO)$(RENAME) $@.exported-symbols $@
 .ENDIF # .IF "$(COM)"=="GCC"
 
 .ENDIF			# "$(GUI)"=="WNT"
@@ -1478,8 +1498,10 @@ $(DEF6TARGETN) : \
 $(DEF6TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(EMQ)"$(SHL6TARGETN:f)$(EMQ)" 								 >$@.tmpfile
 .IF "$(COM)"!="GCC"
     @echo HEAPSIZE	  0 											>>$@.tmpfile
@@ -1492,16 +1514,16 @@ $(DEF6TARGETN) .PHONY :
 .IF "$(DEFLIB6NAME)"!=""
 .IF "$(COM)"=="GCC"
     @-$(RM) $(MISC)/$(SHL6TARGET).exp
-    dlltool --output-def $(MISC)/$(SHL6TARGET).exp --export-all-symbols \
+	$(COMMAND_ECHO)dlltool --output-def $(MISC)/$(SHL6TARGET).exp --export-all-symbols \
          `$(TYPE) $(foreach,i,$(DEFLIB6NAME) $(SLB)/$(i).lib) | sed s#$(ROUT)#$(PRJ)/$(ROUT)#g`
-    tail --lines +3 $(MISC)/$(SHL6TARGET).exp | sed '/^;/d' >>$@.tmpfile
+	$(COMMAND_ECHO)tail --lines +3 $(MISC)/$(SHL6TARGET).exp | sed '/^;/d' >>$@.tmpfile
     @-$(RM) $(MISC)/$(SHL6TARGET).exp
 .ELSE
 .IF "$(SHL6USE_EXPORTS)"==""
     @-$(RMHACK6) $(MISC)/$(SHL6TARGET).exp
     @$(LIBMGR) -EXTRACT:/ /OUT:$(MISC)/$(SHL6TARGET).exp $(SLB)/$(DEFLIB6NAME).lib
     @$(LDUMP2) -N $(EXPORT_ALL_SWITCH) -F $(MISC)/$(SHL6TARGET).flt $(MISC)/$(SHL6TARGET).exp			   >>$@.tmpfile
-    $(RMHACK6) $(MISC)/$(SHL6TARGET).exp
+	$(COMMAND_ECHO)$(RMHACK6) $(MISC)/$(SHL6TARGET).exp
 .ELSE			# "$(SHL6USE_EXPORTS)"==""
     @$(DUMPBIN) -DIRECTIVES  $(foreach,i,$(DEFLIB6NAME) $(SLB)/$(i).lib) | $(GREP) EXPORT: > $(MISC)/$(SHL6TARGET).direct
     @$(LDUMP2) -N -D $(EXPORT_ALL_SWITCH) -F $(DEF6FILTER) $(MISC)/$(SHL6TARGET).direct >>$@.tmpfile
@@ -1570,9 +1592,9 @@ $(DEF6TARGETN) .PHONY :
 .ENDIF
 .IF "$(DEF6EXPORTFILE)"!=""
 .IF "$(COM)"=="GCC"
-    $(TYPE) $(DEF6EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF6EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
 .ELSE
-    $(TYPE) $(DEF6EXPORTFILE) >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF6EXPORTFILE) >> $@.tmpfile
 .ENDIF
 .ENDIF
     @-$(RM) $@
@@ -1596,8 +1618,10 @@ $(DEF6TARGETN) : \
 $(DEF6TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @+-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(SHL6TARGET8) INITINSTANCE TERMINSTANCE	 >$@.tmpfile
     @echo DATA MULTIPLE	 >>$@.tmpfile
     @echo DESCRIPTION	'StarView 3.00 $(DEF6DES) $(UPD) $(UPDMINOR)' >>$@.tmpfile
@@ -1678,11 +1702,11 @@ $(DEF6TARGETN) .PHONY :
     @sort < $@.tmp_ord | uniq > $@.exptmpfile
     @fix_def_ord < $@.exptmpfile >> $@.tmpfile
     @+-$(RM) $@
-    +$(RENAME) $@.tmpfile $@
+	$(COMMAND_ECHO)+$(RENAME) $@.tmpfile $@
     @+-$(RM) $@.tmp_ord
     @+-$(RM) $@.exptmpfile
-    +$(IMPLIB) $(IMPLIBFLAGS) $(SHL6IMPLIBN:s/.lib/.a/) $@
-    +emxomf -o $(SHL6IMPLIBN) $(SHL6IMPLIBN:s/.lib/.a/) 
+	$(COMMAND_ECHO)+$(IMPLIB) $(IMPLIBFLAGS) $(SHL6IMPLIBN:s/.lib/.a/) $@
+	$(COMMAND_ECHO)+emxomf -o $(SHL6IMPLIBN) $(SHL6IMPLIBN:s/.lib/.a/) 
 
 .ENDIF			# "$(GUI)"=="OS2"
 
@@ -1718,18 +1742,18 @@ $(DEF7EXPORTFILE) : $(SHL7OBJS) $(SHL7LIBS)
 .ENDIF # .IF "$(COM)"=="GCC"
 
 $(DEF7EXPORTFILE) : $(SHL7VERSIONMAP)
-    $(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
+	$(COMMAND_ECHO)$(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
 .IF "$(COM)"=="GCC"
-    -$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
-    -$(GREP) "\*\|?" $@ > $@.symbols-regexp
+	$(COMMAND_ECHO)-$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
+	$(COMMAND_ECHO)-$(GREP) "\*\|?" $@ > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
-    nm -gP $(SHL7OBJS) \
-        `$(TYPE) /dev/null $(foreach,j,$(SHL7LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
-        | $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)nm -gP $(SHL7OBJS) \
+ 		`$(TYPE) /dev/null $(foreach,j,$(SHL7LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
+ 		| $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
-    $(RENAME) $@.exported-symbols $@
+	$(COMMAND_ECHO)$(RENAME) $@.exported-symbols $@
 .ENDIF # .IF "$(COM)"=="GCC"
 
 .ENDIF			# "$(GUI)"=="WNT"
@@ -1761,8 +1785,10 @@ $(DEF7TARGETN) : \
 $(DEF7TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(EMQ)"$(SHL7TARGETN:f)$(EMQ)" 								 >$@.tmpfile
 .IF "$(COM)"!="GCC"
     @echo HEAPSIZE	  0 											>>$@.tmpfile
@@ -1775,16 +1801,16 @@ $(DEF7TARGETN) .PHONY :
 .IF "$(DEFLIB7NAME)"!=""
 .IF "$(COM)"=="GCC"
     @-$(RM) $(MISC)/$(SHL7TARGET).exp
-    dlltool --output-def $(MISC)/$(SHL7TARGET).exp --export-all-symbols \
+	$(COMMAND_ECHO)dlltool --output-def $(MISC)/$(SHL7TARGET).exp --export-all-symbols \
          `$(TYPE) $(foreach,i,$(DEFLIB7NAME) $(SLB)/$(i).lib) | sed s#$(ROUT)#$(PRJ)/$(ROUT)#g`
-    tail --lines +3 $(MISC)/$(SHL7TARGET).exp | sed '/^;/d' >>$@.tmpfile
+	$(COMMAND_ECHO)tail --lines +3 $(MISC)/$(SHL7TARGET).exp | sed '/^;/d' >>$@.tmpfile
     @-$(RM) $(MISC)/$(SHL7TARGET).exp
 .ELSE
 .IF "$(SHL7USE_EXPORTS)"==""
     @-$(RMHACK7) $(MISC)/$(SHL7TARGET).exp
     @$(LIBMGR) -EXTRACT:/ /OUT:$(MISC)/$(SHL7TARGET).exp $(SLB)/$(DEFLIB7NAME).lib
     @$(LDUMP2) -N $(EXPORT_ALL_SWITCH) -F $(MISC)/$(SHL7TARGET).flt $(MISC)/$(SHL7TARGET).exp			   >>$@.tmpfile
-    $(RMHACK7) $(MISC)/$(SHL7TARGET).exp
+	$(COMMAND_ECHO)$(RMHACK7) $(MISC)/$(SHL7TARGET).exp
 .ELSE			# "$(SHL7USE_EXPORTS)"==""
     @$(DUMPBIN) -DIRECTIVES  $(foreach,i,$(DEFLIB7NAME) $(SLB)/$(i).lib) | $(GREP) EXPORT: > $(MISC)/$(SHL7TARGET).direct
     @$(LDUMP2) -N -D $(EXPORT_ALL_SWITCH) -F $(DEF7FILTER) $(MISC)/$(SHL7TARGET).direct >>$@.tmpfile
@@ -1853,9 +1879,9 @@ $(DEF7TARGETN) .PHONY :
 .ENDIF
 .IF "$(DEF7EXPORTFILE)"!=""
 .IF "$(COM)"=="GCC"
-    $(TYPE) $(DEF7EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF7EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
 .ELSE
-    $(TYPE) $(DEF7EXPORTFILE) >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF7EXPORTFILE) >> $@.tmpfile
 .ENDIF
 .ENDIF
     @-$(RM) $@
@@ -1879,8 +1905,10 @@ $(DEF7TARGETN) : \
 $(DEF7TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @+-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(SHL7TARGET8) INITINSTANCE TERMINSTANCE	 >$@.tmpfile
     @echo DATA MULTIPLE	 >>$@.tmpfile
     @echo DESCRIPTION	'StarView 3.00 $(DEF7DES) $(UPD) $(UPDMINOR)' >>$@.tmpfile
@@ -1961,11 +1989,11 @@ $(DEF7TARGETN) .PHONY :
     @sort < $@.tmp_ord | uniq > $@.exptmpfile
     @fix_def_ord < $@.exptmpfile >> $@.tmpfile
     @+-$(RM) $@
-    +$(RENAME) $@.tmpfile $@
+	$(COMMAND_ECHO)+$(RENAME) $@.tmpfile $@
     @+-$(RM) $@.tmp_ord
     @+-$(RM) $@.exptmpfile
-    +$(IMPLIB) $(IMPLIBFLAGS) $(SHL7IMPLIBN:s/.lib/.a/) $@
-    +emxomf -o $(SHL7IMPLIBN) $(SHL7IMPLIBN:s/.lib/.a/) 
+	$(COMMAND_ECHO)+$(IMPLIB) $(IMPLIBFLAGS) $(SHL7IMPLIBN:s/.lib/.a/) $@
+	$(COMMAND_ECHO)+emxomf -o $(SHL7IMPLIBN) $(SHL7IMPLIBN:s/.lib/.a/) 
 
 .ENDIF			# "$(GUI)"=="OS2"
 
@@ -2001,18 +2029,18 @@ $(DEF8EXPORTFILE) : $(SHL8OBJS) $(SHL8LIBS)
 .ENDIF # .IF "$(COM)"=="GCC"
 
 $(DEF8EXPORTFILE) : $(SHL8VERSIONMAP)
-    $(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
+	$(COMMAND_ECHO)$(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
 .IF "$(COM)"=="GCC"
-    -$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
-    -$(GREP) "\*\|?" $@ > $@.symbols-regexp
+	$(COMMAND_ECHO)-$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
+	$(COMMAND_ECHO)-$(GREP) "\*\|?" $@ > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
-    nm -gP $(SHL8OBJS) \
-        `$(TYPE) /dev/null $(foreach,j,$(SHL8LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
-        | $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)nm -gP $(SHL8OBJS) \
+ 		`$(TYPE) /dev/null $(foreach,j,$(SHL8LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
+ 		| $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
-    $(RENAME) $@.exported-symbols $@
+	$(COMMAND_ECHO)$(RENAME) $@.exported-symbols $@
 .ENDIF # .IF "$(COM)"=="GCC"
 
 .ENDIF			# "$(GUI)"=="WNT"
@@ -2044,8 +2072,10 @@ $(DEF8TARGETN) : \
 $(DEF8TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(EMQ)"$(SHL8TARGETN:f)$(EMQ)" 								 >$@.tmpfile
 .IF "$(COM)"!="GCC"
     @echo HEAPSIZE	  0 											>>$@.tmpfile
@@ -2058,16 +2088,16 @@ $(DEF8TARGETN) .PHONY :
 .IF "$(DEFLIB8NAME)"!=""
 .IF "$(COM)"=="GCC"
     @-$(RM) $(MISC)/$(SHL8TARGET).exp
-    dlltool --output-def $(MISC)/$(SHL8TARGET).exp --export-all-symbols \
+	$(COMMAND_ECHO)dlltool --output-def $(MISC)/$(SHL8TARGET).exp --export-all-symbols \
          `$(TYPE) $(foreach,i,$(DEFLIB8NAME) $(SLB)/$(i).lib) | sed s#$(ROUT)#$(PRJ)/$(ROUT)#g`
-    tail --lines +3 $(MISC)/$(SHL8TARGET).exp | sed '/^;/d' >>$@.tmpfile
+	$(COMMAND_ECHO)tail --lines +3 $(MISC)/$(SHL8TARGET).exp | sed '/^;/d' >>$@.tmpfile
     @-$(RM) $(MISC)/$(SHL8TARGET).exp
 .ELSE
 .IF "$(SHL8USE_EXPORTS)"==""
     @-$(RMHACK8) $(MISC)/$(SHL8TARGET).exp
     @$(LIBMGR) -EXTRACT:/ /OUT:$(MISC)/$(SHL8TARGET).exp $(SLB)/$(DEFLIB8NAME).lib
     @$(LDUMP2) -N $(EXPORT_ALL_SWITCH) -F $(MISC)/$(SHL8TARGET).flt $(MISC)/$(SHL8TARGET).exp			   >>$@.tmpfile
-    $(RMHACK8) $(MISC)/$(SHL8TARGET).exp
+	$(COMMAND_ECHO)$(RMHACK8) $(MISC)/$(SHL8TARGET).exp
 .ELSE			# "$(SHL8USE_EXPORTS)"==""
     @$(DUMPBIN) -DIRECTIVES  $(foreach,i,$(DEFLIB8NAME) $(SLB)/$(i).lib) | $(GREP) EXPORT: > $(MISC)/$(SHL8TARGET).direct
     @$(LDUMP2) -N -D $(EXPORT_ALL_SWITCH) -F $(DEF8FILTER) $(MISC)/$(SHL8TARGET).direct >>$@.tmpfile
@@ -2136,9 +2166,9 @@ $(DEF8TARGETN) .PHONY :
 .ENDIF
 .IF "$(DEF8EXPORTFILE)"!=""
 .IF "$(COM)"=="GCC"
-    $(TYPE) $(DEF8EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF8EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
 .ELSE
-    $(TYPE) $(DEF8EXPORTFILE) >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF8EXPORTFILE) >> $@.tmpfile
 .ENDIF
 .ENDIF
     @-$(RM) $@
@@ -2162,8 +2192,10 @@ $(DEF8TARGETN) : \
 $(DEF8TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @+-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(SHL8TARGET8) INITINSTANCE TERMINSTANCE	 >$@.tmpfile
     @echo DATA MULTIPLE	 >>$@.tmpfile
     @echo DESCRIPTION	'StarView 3.00 $(DEF8DES) $(UPD) $(UPDMINOR)' >>$@.tmpfile
@@ -2244,11 +2276,11 @@ $(DEF8TARGETN) .PHONY :
     @sort < $@.tmp_ord | uniq > $@.exptmpfile
     @fix_def_ord < $@.exptmpfile >> $@.tmpfile
     @+-$(RM) $@
-    +$(RENAME) $@.tmpfile $@
+	$(COMMAND_ECHO)+$(RENAME) $@.tmpfile $@
     @+-$(RM) $@.tmp_ord
     @+-$(RM) $@.exptmpfile
-    +$(IMPLIB) $(IMPLIBFLAGS) $(SHL8IMPLIBN:s/.lib/.a/) $@
-    +emxomf -o $(SHL8IMPLIBN) $(SHL8IMPLIBN:s/.lib/.a/) 
+	$(COMMAND_ECHO)+$(IMPLIB) $(IMPLIBFLAGS) $(SHL8IMPLIBN:s/.lib/.a/) $@
+	$(COMMAND_ECHO)+emxomf -o $(SHL8IMPLIBN) $(SHL8IMPLIBN:s/.lib/.a/) 
 
 .ENDIF			# "$(GUI)"=="OS2"
 
@@ -2284,18 +2316,18 @@ $(DEF9EXPORTFILE) : $(SHL9OBJS) $(SHL9LIBS)
 .ENDIF # .IF "$(COM)"=="GCC"
 
 $(DEF9EXPORTFILE) : $(SHL9VERSIONMAP)
-    $(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
+	$(COMMAND_ECHO)$(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
 .IF "$(COM)"=="GCC"
-    -$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
-    -$(GREP) "\*\|?" $@ > $@.symbols-regexp
+	$(COMMAND_ECHO)-$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
+	$(COMMAND_ECHO)-$(GREP) "\*\|?" $@ > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
-    nm -gP $(SHL9OBJS) \
-        `$(TYPE) /dev/null $(foreach,j,$(SHL9LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
-        | $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)nm -gP $(SHL9OBJS) \
+ 		`$(TYPE) /dev/null $(foreach,j,$(SHL9LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
+ 		| $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
-    $(RENAME) $@.exported-symbols $@
+	$(COMMAND_ECHO)$(RENAME) $@.exported-symbols $@
 .ENDIF # .IF "$(COM)"=="GCC"
 
 .ENDIF			# "$(GUI)"=="WNT"
@@ -2327,8 +2359,10 @@ $(DEF9TARGETN) : \
 $(DEF9TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(EMQ)"$(SHL9TARGETN:f)$(EMQ)" 								 >$@.tmpfile
 .IF "$(COM)"!="GCC"
     @echo HEAPSIZE	  0 											>>$@.tmpfile
@@ -2341,16 +2375,16 @@ $(DEF9TARGETN) .PHONY :
 .IF "$(DEFLIB9NAME)"!=""
 .IF "$(COM)"=="GCC"
     @-$(RM) $(MISC)/$(SHL9TARGET).exp
-    dlltool --output-def $(MISC)/$(SHL9TARGET).exp --export-all-symbols \
+	$(COMMAND_ECHO)dlltool --output-def $(MISC)/$(SHL9TARGET).exp --export-all-symbols \
          `$(TYPE) $(foreach,i,$(DEFLIB9NAME) $(SLB)/$(i).lib) | sed s#$(ROUT)#$(PRJ)/$(ROUT)#g`
-    tail --lines +3 $(MISC)/$(SHL9TARGET).exp | sed '/^;/d' >>$@.tmpfile
+	$(COMMAND_ECHO)tail --lines +3 $(MISC)/$(SHL9TARGET).exp | sed '/^;/d' >>$@.tmpfile
     @-$(RM) $(MISC)/$(SHL9TARGET).exp
 .ELSE
 .IF "$(SHL9USE_EXPORTS)"==""
     @-$(RMHACK9) $(MISC)/$(SHL9TARGET).exp
     @$(LIBMGR) -EXTRACT:/ /OUT:$(MISC)/$(SHL9TARGET).exp $(SLB)/$(DEFLIB9NAME).lib
     @$(LDUMP2) -N $(EXPORT_ALL_SWITCH) -F $(MISC)/$(SHL9TARGET).flt $(MISC)/$(SHL9TARGET).exp			   >>$@.tmpfile
-    $(RMHACK9) $(MISC)/$(SHL9TARGET).exp
+	$(COMMAND_ECHO)$(RMHACK9) $(MISC)/$(SHL9TARGET).exp
 .ELSE			# "$(SHL9USE_EXPORTS)"==""
     @$(DUMPBIN) -DIRECTIVES  $(foreach,i,$(DEFLIB9NAME) $(SLB)/$(i).lib) | $(GREP) EXPORT: > $(MISC)/$(SHL9TARGET).direct
     @$(LDUMP2) -N -D $(EXPORT_ALL_SWITCH) -F $(DEF9FILTER) $(MISC)/$(SHL9TARGET).direct >>$@.tmpfile
@@ -2419,9 +2453,9 @@ $(DEF9TARGETN) .PHONY :
 .ENDIF
 .IF "$(DEF9EXPORTFILE)"!=""
 .IF "$(COM)"=="GCC"
-    $(TYPE) $(DEF9EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF9EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
 .ELSE
-    $(TYPE) $(DEF9EXPORTFILE) >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF9EXPORTFILE) >> $@.tmpfile
 .ENDIF
 .ENDIF
     @-$(RM) $@
@@ -2445,8 +2479,10 @@ $(DEF9TARGETN) : \
 $(DEF9TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @+-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(SHL9TARGET8) INITINSTANCE TERMINSTANCE	 >$@.tmpfile
     @echo DATA MULTIPLE	 >>$@.tmpfile
     @echo DESCRIPTION	'StarView 3.00 $(DEF9DES) $(UPD) $(UPDMINOR)' >>$@.tmpfile
@@ -2527,11 +2563,11 @@ $(DEF9TARGETN) .PHONY :
     @sort < $@.tmp_ord | uniq > $@.exptmpfile
     @fix_def_ord < $@.exptmpfile >> $@.tmpfile
     @+-$(RM) $@
-    +$(RENAME) $@.tmpfile $@
+	$(COMMAND_ECHO)+$(RENAME) $@.tmpfile $@
     @+-$(RM) $@.tmp_ord
     @+-$(RM) $@.exptmpfile
-    +$(IMPLIB) $(IMPLIBFLAGS) $(SHL9IMPLIBN:s/.lib/.a/) $@
-    +emxomf -o $(SHL9IMPLIBN) $(SHL9IMPLIBN:s/.lib/.a/) 
+	$(COMMAND_ECHO)+$(IMPLIB) $(IMPLIBFLAGS) $(SHL9IMPLIBN:s/.lib/.a/) $@
+	$(COMMAND_ECHO)+emxomf -o $(SHL9IMPLIBN) $(SHL9IMPLIBN:s/.lib/.a/) 
 
 .ENDIF			# "$(GUI)"=="OS2"
 
@@ -2567,18 +2603,18 @@ $(DEF10EXPORTFILE) : $(SHL10OBJS) $(SHL10LIBS)
 .ENDIF # .IF "$(COM)"=="GCC"
 
 $(DEF10EXPORTFILE) : $(SHL10VERSIONMAP)
-    $(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
+	$(COMMAND_ECHO)$(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
 .IF "$(COM)"=="GCC"
-    -$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
-    -$(GREP) "\*\|?" $@ > $@.symbols-regexp
+	$(COMMAND_ECHO)-$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
+	$(COMMAND_ECHO)-$(GREP) "\*\|?" $@ > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
-    nm -gP $(SHL10OBJS) \
-        `$(TYPE) /dev/null $(foreach,j,$(SHL10LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
-        | $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)nm -gP $(SHL10OBJS) \
+ 		`$(TYPE) /dev/null $(foreach,j,$(SHL10LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
+ 		| $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
-    $(RENAME) $@.exported-symbols $@
+	$(COMMAND_ECHO)$(RENAME) $@.exported-symbols $@
 .ENDIF # .IF "$(COM)"=="GCC"
 
 .ENDIF			# "$(GUI)"=="WNT"
@@ -2610,8 +2646,10 @@ $(DEF10TARGETN) : \
 $(DEF10TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(EMQ)"$(SHL10TARGETN:f)$(EMQ)" 								 >$@.tmpfile
 .IF "$(COM)"!="GCC"
     @echo HEAPSIZE	  0 											>>$@.tmpfile
@@ -2624,16 +2662,16 @@ $(DEF10TARGETN) .PHONY :
 .IF "$(DEFLIB10NAME)"!=""
 .IF "$(COM)"=="GCC"
     @-$(RM) $(MISC)/$(SHL10TARGET).exp
-    dlltool --output-def $(MISC)/$(SHL10TARGET).exp --export-all-symbols \
+	$(COMMAND_ECHO)dlltool --output-def $(MISC)/$(SHL10TARGET).exp --export-all-symbols \
          `$(TYPE) $(foreach,i,$(DEFLIB10NAME) $(SLB)/$(i).lib) | sed s#$(ROUT)#$(PRJ)/$(ROUT)#g`
-    tail --lines +3 $(MISC)/$(SHL10TARGET).exp | sed '/^;/d' >>$@.tmpfile
+	$(COMMAND_ECHO)tail --lines +3 $(MISC)/$(SHL10TARGET).exp | sed '/^;/d' >>$@.tmpfile
     @-$(RM) $(MISC)/$(SHL10TARGET).exp
 .ELSE
 .IF "$(SHL10USE_EXPORTS)"==""
     @-$(RMHACK10) $(MISC)/$(SHL10TARGET).exp
     @$(LIBMGR) -EXTRACT:/ /OUT:$(MISC)/$(SHL10TARGET).exp $(SLB)/$(DEFLIB10NAME).lib
     @$(LDUMP2) -N $(EXPORT_ALL_SWITCH) -F $(MISC)/$(SHL10TARGET).flt $(MISC)/$(SHL10TARGET).exp			   >>$@.tmpfile
-    $(RMHACK10) $(MISC)/$(SHL10TARGET).exp
+	$(COMMAND_ECHO)$(RMHACK10) $(MISC)/$(SHL10TARGET).exp
 .ELSE			# "$(SHL10USE_EXPORTS)"==""
     @$(DUMPBIN) -DIRECTIVES  $(foreach,i,$(DEFLIB10NAME) $(SLB)/$(i).lib) | $(GREP) EXPORT: > $(MISC)/$(SHL10TARGET).direct
     @$(LDUMP2) -N -D $(EXPORT_ALL_SWITCH) -F $(DEF10FILTER) $(MISC)/$(SHL10TARGET).direct >>$@.tmpfile
@@ -2702,9 +2740,9 @@ $(DEF10TARGETN) .PHONY :
 .ENDIF
 .IF "$(DEF10EXPORTFILE)"!=""
 .IF "$(COM)"=="GCC"
-    $(TYPE) $(DEF10EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF10EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
 .ELSE
-    $(TYPE) $(DEF10EXPORTFILE) >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF10EXPORTFILE) >> $@.tmpfile
 .ENDIF
 .ENDIF
     @-$(RM) $@
@@ -2728,8 +2766,10 @@ $(DEF10TARGETN) : \
 $(DEF10TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @+-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(SHL10TARGET8) INITINSTANCE TERMINSTANCE	 >$@.tmpfile
     @echo DATA MULTIPLE	 >>$@.tmpfile
     @echo DESCRIPTION	'StarView 3.00 $(DEF10DES) $(UPD) $(UPDMINOR)' >>$@.tmpfile
@@ -2810,11 +2850,11 @@ $(DEF10TARGETN) .PHONY :
     @sort < $@.tmp_ord | uniq > $@.exptmpfile
     @fix_def_ord < $@.exptmpfile >> $@.tmpfile
     @+-$(RM) $@
-    +$(RENAME) $@.tmpfile $@
+	$(COMMAND_ECHO)+$(RENAME) $@.tmpfile $@
     @+-$(RM) $@.tmp_ord
     @+-$(RM) $@.exptmpfile
-    +$(IMPLIB) $(IMPLIBFLAGS) $(SHL10IMPLIBN:s/.lib/.a/) $@
-    +emxomf -o $(SHL10IMPLIBN) $(SHL10IMPLIBN:s/.lib/.a/) 
+	$(COMMAND_ECHO)+$(IMPLIB) $(IMPLIBFLAGS) $(SHL10IMPLIBN:s/.lib/.a/) $@
+	$(COMMAND_ECHO)+emxomf -o $(SHL10IMPLIBN) $(SHL10IMPLIBN:s/.lib/.a/) 
 
 .ENDIF			# "$(GUI)"=="OS2"
 
diff --git solenv/inc/_tg_lib.mk solenv/inc/_tg_lib.mk
index 7216982..424bd89 100644
--- solenv/inc/_tg_lib.mk
+++ solenv/inc/_tg_lib.mk
@@ -4,7 +4,7 @@
 .IF "$(LIB1ARCHIV)" != ""
 
 $(LIB1ARCHIV) :	$(LIB1TARGET)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @-$(RM) $(MISC)/$(LIB1ARCHIV:b).cmd
@@ -21,14 +21,18 @@ $(LIB1ARCHIV) :	$(LIB1TARGET)
 .IF "$(OS)" == "MACOSX"
      @echo  ranlib $(LIB1ARCHIV) >> $(MISC)/$(LIB1ARCHIV:b).cmd
 .ENDIF
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB1ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB1ARCHIV:b).cmd
 .ELSE			# "$(GUI)"=="UNX"
 .IF "$(GUI)$(COM)"=="WNTGCC"
     @+-$(RM) $(MISC)/$(LIB1ARCHIV:b).cmd
     @+echo $(LIBMGR) $(LIB1FLAGS) $(LIBFLAGS) $(LIB1ARCHIV) `cat $(LIB1TARGET) | sed s#'^'$(ROUT)#$(PRJ)/$(ROUT)#g` > $(MISC)/$(LIB1ARCHIV:b).cmd
     @+echo  ranlib $(LIB1ARCHIV) >> $(MISC)/$(LIB1ARCHIV:b).cmd
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB1ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB1ARCHIV:b).cmd
 .ELSE
     @echo just a dummy > $@
@@ -40,10 +44,12 @@ $(LIB1ARCHIV) :	$(LIB1TARGET)
 $(LIB1TARGET) :	$(LIB1FILES) \
                         $(LIB1OBJFILES) \
                         $(LIB1DEPN)
+.IF "$(VERBOSE)" == "TRUE"
     @echo using: $(LIB1FILES)
     @echo using: $(LIB1TARGET)
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @echo $(LIB1OBJFILES:s/.obj/.o/) | sed "s#$(PRJ:s/./\./)/$(ROUT)#$(ROUT)#g" | xargs -n 1 > $@
@@ -56,7 +62,7 @@ $(LIB1TARGET) :	$(LIB1FILES) \
 .ENDIF
 
 .ELIF "$(GUI)"=="OS2"
-    $(LIBMGR) $(LIBFLAGS) $@ $(LIB1FILES) $(LIB1OBJFILES)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(LIB1FILES) $(LIB1OBJFILES)
     @+-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB1OBJFILES)"!=""    
     @+$(TYPE) $(mktmp $(LIB1OBJFILES)) > $(null,$(LIB1OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -72,7 +78,7 @@ $(LIB1TARGET) :	$(LIB1FILES) \
     +$(ECHONL) $(LIB1OBJFILES) | sed "s#$(PRJ:s/././)/$(ROUT)#$(ROUT)#g" | xargs -n1 > $@
     @+cat /dev/null $(LIB1FILES) | xargs -n1 >> $@
 .ELSE
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB1FILES) $(LIB1OBJFILES))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB1FILES) $(LIB1OBJFILES))
     @-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB1OBJFILES)"!=""    
     @$(TYPE) $(mktmp $(LIB1OBJFILES)) > $(null,$(LIB1OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -84,8 +90,10 @@ $(LIB1TARGET) :	$(LIB1FILES) \
 .ENDIF          # "$(LIB1FILES)"!=""    
 .ELSE			# "$(GUI)"=="WNT"
     @-$(RM) $@
-    echo $(LIBMGR) r $@ $(LIB1OBJFILES)
-    $(LIBMGR) r $@ $(LIB1OBJFILES) $(LIB1FILES) bla.lib
+  .IF "$(VERBOSE)" == "TRUE"
+	@echo $(LIBMGR) r $@ $(LIB1OBJFILES)
+  .ENDIF
+	$(COMMAND_ECHO)$(LIBMGR) r $@ $(LIB1OBJFILES) $(LIB1FILES) bla.lib
 .ENDIF          # "$(GUI)"=="WNT"
 .ENDIF          # "$(GUI)"=="UNX"
 .ENDIF          # "$(LIB1TARGET)" != ""
@@ -97,7 +105,7 @@ $(LIB1TARGET) :	$(LIB1FILES) \
 .IF "$(LIB2ARCHIV)" != ""
 
 $(LIB2ARCHIV) :	$(LIB2TARGET)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @-$(RM) $(MISC)/$(LIB2ARCHIV:b).cmd
@@ -114,14 +122,18 @@ $(LIB2ARCHIV) :	$(LIB2TARGET)
 .IF "$(OS)" == "MACOSX"
      @echo  ranlib $(LIB2ARCHIV) >> $(MISC)/$(LIB2ARCHIV:b).cmd
 .ENDIF
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB2ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB2ARCHIV:b).cmd
 .ELSE			# "$(GUI)"=="UNX"
 .IF "$(GUI)$(COM)"=="WNTGCC"
     @+-$(RM) $(MISC)/$(LIB2ARCHIV:b).cmd
     @+echo $(LIBMGR) $(LIB2FLAGS) $(LIBFLAGS) $(LIB2ARCHIV) `cat $(LIB2TARGET) | sed s#'^'$(ROUT)#$(PRJ)/$(ROUT)#g` > $(MISC)/$(LIB2ARCHIV:b).cmd
     @+echo  ranlib $(LIB2ARCHIV) >> $(MISC)/$(LIB2ARCHIV:b).cmd
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB2ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB2ARCHIV:b).cmd
 .ELSE
     @echo just a dummy > $@
@@ -133,10 +145,12 @@ $(LIB2ARCHIV) :	$(LIB2TARGET)
 $(LIB2TARGET) :	$(LIB2FILES) \
                         $(LIB2OBJFILES) \
                         $(LIB2DEPN)
+.IF "$(VERBOSE)" == "TRUE"
     @echo using: $(LIB2FILES)
     @echo using: $(LIB2TARGET)
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @echo $(LIB2OBJFILES:s/.obj/.o/) | sed "s#$(PRJ:s/./\./)/$(ROUT)#$(ROUT)#g" | xargs -n 1 > $@
@@ -149,7 +163,7 @@ $(LIB2TARGET) :	$(LIB2FILES) \
 .ENDIF
 
 .ELIF "$(GUI)"=="OS2"
-    $(LIBMGR) $(LIBFLAGS) $@ $(LIB2FILES) $(LIB2OBJFILES)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(LIB2FILES) $(LIB2OBJFILES)
     @+-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB2OBJFILES)"!=""    
     @+$(TYPE) $(mktmp $(LIB2OBJFILES)) > $(null,$(LIB2OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -165,7 +179,7 @@ $(LIB2TARGET) :	$(LIB2FILES) \
     +$(ECHONL) $(LIB2OBJFILES) | sed "s#$(PRJ:s/././)/$(ROUT)#$(ROUT)#g" | xargs -n1 > $@
     @+cat /dev/null $(LIB2FILES) | xargs -n1 >> $@
 .ELSE
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB2FILES) $(LIB2OBJFILES))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB2FILES) $(LIB2OBJFILES))
     @-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB2OBJFILES)"!=""    
     @$(TYPE) $(mktmp $(LIB2OBJFILES)) > $(null,$(LIB2OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -177,8 +191,10 @@ $(LIB2TARGET) :	$(LIB2FILES) \
 .ENDIF          # "$(LIB2FILES)"!=""    
 .ELSE			# "$(GUI)"=="WNT"
     @-$(RM) $@
-    echo $(LIBMGR) r $@ $(LIB2OBJFILES)
-    $(LIBMGR) r $@ $(LIB2OBJFILES) $(LIB2FILES) bla.lib
+  .IF "$(VERBOSE)" == "TRUE"
+	@echo $(LIBMGR) r $@ $(LIB2OBJFILES)
+  .ENDIF
+	$(COMMAND_ECHO)$(LIBMGR) r $@ $(LIB2OBJFILES) $(LIB2FILES) bla.lib
 .ENDIF          # "$(GUI)"=="WNT"
 .ENDIF          # "$(GUI)"=="UNX"
 .ENDIF          # "$(LIB2TARGET)" != ""
@@ -190,7 +206,7 @@ $(LIB2TARGET) :	$(LIB2FILES) \
 .IF "$(LIB3ARCHIV)" != ""
 
 $(LIB3ARCHIV) :	$(LIB3TARGET)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @-$(RM) $(MISC)/$(LIB3ARCHIV:b).cmd
@@ -207,14 +223,18 @@ $(LIB3ARCHIV) :	$(LIB3TARGET)
 .IF "$(OS)" == "MACOSX"
      @echo  ranlib $(LIB3ARCHIV) >> $(MISC)/$(LIB3ARCHIV:b).cmd
 .ENDIF
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB3ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB3ARCHIV:b).cmd
 .ELSE			# "$(GUI)"=="UNX"
 .IF "$(GUI)$(COM)"=="WNTGCC"
     @+-$(RM) $(MISC)/$(LIB3ARCHIV:b).cmd
     @+echo $(LIBMGR) $(LIB3FLAGS) $(LIBFLAGS) $(LIB3ARCHIV) `cat $(LIB3TARGET) | sed s#'^'$(ROUT)#$(PRJ)/$(ROUT)#g` > $(MISC)/$(LIB3ARCHIV:b).cmd
     @+echo  ranlib $(LIB3ARCHIV) >> $(MISC)/$(LIB3ARCHIV:b).cmd
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB3ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB3ARCHIV:b).cmd
 .ELSE
     @echo just a dummy > $@
@@ -226,10 +246,12 @@ $(LIB3ARCHIV) :	$(LIB3TARGET)
 $(LIB3TARGET) :	$(LIB3FILES) \
                         $(LIB3OBJFILES) \
                         $(LIB3DEPN)
+.IF "$(VERBOSE)" == "TRUE"
     @echo using: $(LIB3FILES)
     @echo using: $(LIB3TARGET)
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @echo $(LIB3OBJFILES:s/.obj/.o/) | sed "s#$(PRJ:s/./\./)/$(ROUT)#$(ROUT)#g" | xargs -n 1 > $@
@@ -242,7 +264,7 @@ $(LIB3TARGET) :	$(LIB3FILES) \
 .ENDIF
 
 .ELIF "$(GUI)"=="OS2"
-    $(LIBMGR) $(LIBFLAGS) $@ $(LIB3FILES) $(LIB3OBJFILES)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(LIB3FILES) $(LIB3OBJFILES)
     @+-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB3OBJFILES)"!=""    
     @+$(TYPE) $(mktmp $(LIB3OBJFILES)) > $(null,$(LIB3OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -258,7 +280,7 @@ $(LIB3TARGET) :	$(LIB3FILES) \
     +$(ECHONL) $(LIB3OBJFILES) | sed "s#$(PRJ:s/././)/$(ROUT)#$(ROUT)#g" | xargs -n1 > $@
     @+cat /dev/null $(LIB3FILES) | xargs -n1 >> $@
 .ELSE
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB3FILES) $(LIB3OBJFILES))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB3FILES) $(LIB3OBJFILES))
     @-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB3OBJFILES)"!=""    
     @$(TYPE) $(mktmp $(LIB3OBJFILES)) > $(null,$(LIB3OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -270,8 +292,10 @@ $(LIB3TARGET) :	$(LIB3FILES) \
 .ENDIF          # "$(LIB3FILES)"!=""    
 .ELSE			# "$(GUI)"=="WNT"
     @-$(RM) $@
-    echo $(LIBMGR) r $@ $(LIB3OBJFILES)
-    $(LIBMGR) r $@ $(LIB3OBJFILES) $(LIB3FILES) bla.lib
+  .IF "$(VERBOSE)" == "TRUE"
+	@echo $(LIBMGR) r $@ $(LIB3OBJFILES)
+  .ENDIF
+	$(COMMAND_ECHO)$(LIBMGR) r $@ $(LIB3OBJFILES) $(LIB3FILES) bla.lib
 .ENDIF          # "$(GUI)"=="WNT"
 .ENDIF          # "$(GUI)"=="UNX"
 .ENDIF          # "$(LIB3TARGET)" != ""
@@ -283,7 +307,7 @@ $(LIB3TARGET) :	$(LIB3FILES) \
 .IF "$(LIB4ARCHIV)" != ""
 
 $(LIB4ARCHIV) :	$(LIB4TARGET)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @-$(RM) $(MISC)/$(LIB4ARCHIV:b).cmd
@@ -300,14 +324,18 @@ $(LIB4ARCHIV) :	$(LIB4TARGET)
 .IF "$(OS)" == "MACOSX"
      @echo  ranlib $(LIB4ARCHIV) >> $(MISC)/$(LIB4ARCHIV:b).cmd
 .ENDIF
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB4ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB4ARCHIV:b).cmd
 .ELSE			# "$(GUI)"=="UNX"
 .IF "$(GUI)$(COM)"=="WNTGCC"
     @+-$(RM) $(MISC)/$(LIB4ARCHIV:b).cmd
     @+echo $(LIBMGR) $(LIB4FLAGS) $(LIBFLAGS) $(LIB4ARCHIV) `cat $(LIB4TARGET) | sed s#'^'$(ROUT)#$(PRJ)/$(ROUT)#g` > $(MISC)/$(LIB4ARCHIV:b).cmd
     @+echo  ranlib $(LIB4ARCHIV) >> $(MISC)/$(LIB4ARCHIV:b).cmd
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB4ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB4ARCHIV:b).cmd
 .ELSE
     @echo just a dummy > $@
@@ -319,10 +347,12 @@ $(LIB4ARCHIV) :	$(LIB4TARGET)
 $(LIB4TARGET) :	$(LIB4FILES) \
                         $(LIB4OBJFILES) \
                         $(LIB4DEPN)
+.IF "$(VERBOSE)" == "TRUE"
     @echo using: $(LIB4FILES)
     @echo using: $(LIB4TARGET)
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @echo $(LIB4OBJFILES:s/.obj/.o/) | sed "s#$(PRJ:s/./\./)/$(ROUT)#$(ROUT)#g" | xargs -n 1 > $@
@@ -335,7 +365,7 @@ $(LIB4TARGET) :	$(LIB4FILES) \
 .ENDIF
 
 .ELIF "$(GUI)"=="OS2"
-    $(LIBMGR) $(LIBFLAGS) $@ $(LIB4FILES) $(LIB4OBJFILES)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(LIB4FILES) $(LIB4OBJFILES)
     @+-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB4OBJFILES)"!=""    
     @+$(TYPE) $(mktmp $(LIB4OBJFILES)) > $(null,$(LIB4OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -351,7 +381,7 @@ $(LIB4TARGET) :	$(LIB4FILES) \
     +$(ECHONL) $(LIB4OBJFILES) | sed "s#$(PRJ:s/././)/$(ROUT)#$(ROUT)#g" | xargs -n1 > $@
     @+cat /dev/null $(LIB4FILES) | xargs -n1 >> $@
 .ELSE
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB4FILES) $(LIB4OBJFILES))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB4FILES) $(LIB4OBJFILES))
     @-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB4OBJFILES)"!=""    
     @$(TYPE) $(mktmp $(LIB4OBJFILES)) > $(null,$(LIB4OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -363,8 +393,10 @@ $(LIB4TARGET) :	$(LIB4FILES) \
 .ENDIF          # "$(LIB4FILES)"!=""    
 .ELSE			# "$(GUI)"=="WNT"
     @-$(RM) $@
-    echo $(LIBMGR) r $@ $(LIB4OBJFILES)
-    $(LIBMGR) r $@ $(LIB4OBJFILES) $(LIB4FILES) bla.lib
+  .IF "$(VERBOSE)" == "TRUE"
+	@echo $(LIBMGR) r $@ $(LIB4OBJFILES)
+  .ENDIF
+	$(COMMAND_ECHO)$(LIBMGR) r $@ $(LIB4OBJFILES) $(LIB4FILES) bla.lib
 .ENDIF          # "$(GUI)"=="WNT"
 .ENDIF          # "$(GUI)"=="UNX"
 .ENDIF          # "$(LIB4TARGET)" != ""
@@ -376,7 +408,7 @@ $(LIB4TARGET) :	$(LIB4FILES) \
 .IF "$(LIB5ARCHIV)" != ""
 
 $(LIB5ARCHIV) :	$(LIB5TARGET)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @-$(RM) $(MISC)/$(LIB5ARCHIV:b).cmd
@@ -393,14 +425,18 @@ $(LIB5ARCHIV) :	$(LIB5TARGET)
 .IF "$(OS)" == "MACOSX"
      @echo  ranlib $(LIB5ARCHIV) >> $(MISC)/$(LIB5ARCHIV:b).cmd
 .ENDIF
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB5ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB5ARCHIV:b).cmd
 .ELSE			# "$(GUI)"=="UNX"
 .IF "$(GUI)$(COM)"=="WNTGCC"
     @+-$(RM) $(MISC)/$(LIB5ARCHIV:b).cmd
     @+echo $(LIBMGR) $(LIB5FLAGS) $(LIBFLAGS) $(LIB5ARCHIV) `cat $(LIB5TARGET) | sed s#'^'$(ROUT)#$(PRJ)/$(ROUT)#g` > $(MISC)/$(LIB5ARCHIV:b).cmd
     @+echo  ranlib $(LIB5ARCHIV) >> $(MISC)/$(LIB5ARCHIV:b).cmd
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB5ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB5ARCHIV:b).cmd
 .ELSE
     @echo just a dummy > $@
@@ -412,10 +448,12 @@ $(LIB5ARCHIV) :	$(LIB5TARGET)
 $(LIB5TARGET) :	$(LIB5FILES) \
                         $(LIB5OBJFILES) \
                         $(LIB5DEPN)
+.IF "$(VERBOSE)" == "TRUE"
     @echo using: $(LIB5FILES)
     @echo using: $(LIB5TARGET)
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @echo $(LIB5OBJFILES:s/.obj/.o/) | sed "s#$(PRJ:s/./\./)/$(ROUT)#$(ROUT)#g" | xargs -n 1 > $@
@@ -428,7 +466,7 @@ $(LIB5TARGET) :	$(LIB5FILES) \
 .ENDIF
 
 .ELIF "$(GUI)"=="OS2"
-    $(LIBMGR) $(LIBFLAGS) $@ $(LIB5FILES) $(LIB5OBJFILES)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(LIB5FILES) $(LIB5OBJFILES)
     @+-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB5OBJFILES)"!=""    
     @+$(TYPE) $(mktmp $(LIB5OBJFILES)) > $(null,$(LIB5OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -444,7 +482,7 @@ $(LIB5TARGET) :	$(LIB5FILES) \
     +$(ECHONL) $(LIB5OBJFILES) | sed "s#$(PRJ:s/././)/$(ROUT)#$(ROUT)#g" | xargs -n1 > $@
     @+cat /dev/null $(LIB5FILES) | xargs -n1 >> $@
 .ELSE
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB5FILES) $(LIB5OBJFILES))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB5FILES) $(LIB5OBJFILES))
     @-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB5OBJFILES)"!=""    
     @$(TYPE) $(mktmp $(LIB5OBJFILES)) > $(null,$(LIB5OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -456,8 +494,10 @@ $(LIB5TARGET) :	$(LIB5FILES) \
 .ENDIF          # "$(LIB5FILES)"!=""    
 .ELSE			# "$(GUI)"=="WNT"
     @-$(RM) $@
-    echo $(LIBMGR) r $@ $(LIB5OBJFILES)
-    $(LIBMGR) r $@ $(LIB5OBJFILES) $(LIB5FILES) bla.lib
+  .IF "$(VERBOSE)" == "TRUE"
+	@echo $(LIBMGR) r $@ $(LIB5OBJFILES)
+  .ENDIF
+	$(COMMAND_ECHO)$(LIBMGR) r $@ $(LIB5OBJFILES) $(LIB5FILES) bla.lib
 .ENDIF          # "$(GUI)"=="WNT"
 .ENDIF          # "$(GUI)"=="UNX"
 .ENDIF          # "$(LIB5TARGET)" != ""
@@ -469,7 +509,7 @@ $(LIB5TARGET) :	$(LIB5FILES) \
 .IF "$(LIB6ARCHIV)" != ""
 
 $(LIB6ARCHIV) :	$(LIB6TARGET)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @-$(RM) $(MISC)/$(LIB6ARCHIV:b).cmd
@@ -486,14 +526,18 @@ $(LIB6ARCHIV) :	$(LIB6TARGET)
 .IF "$(OS)" == "MACOSX"
      @echo  ranlib $(LIB6ARCHIV) >> $(MISC)/$(LIB6ARCHIV:b).cmd
 .ENDIF
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB6ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB6ARCHIV:b).cmd
 .ELSE			# "$(GUI)"=="UNX"
 .IF "$(GUI)$(COM)"=="WNTGCC"
     @+-$(RM) $(MISC)/$(LIB6ARCHIV:b).cmd
     @+echo $(LIBMGR) $(LIB6FLAGS) $(LIBFLAGS) $(LIB6ARCHIV) `cat $(LIB6TARGET) | sed s#'^'$(ROUT)#$(PRJ)/$(ROUT)#g` > $(MISC)/$(LIB6ARCHIV:b).cmd
     @+echo  ranlib $(LIB6ARCHIV) >> $(MISC)/$(LIB6ARCHIV:b).cmd
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB6ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB6ARCHIV:b).cmd
 .ELSE
     @echo just a dummy > $@
@@ -505,10 +549,12 @@ $(LIB6ARCHIV) :	$(LIB6TARGET)
 $(LIB6TARGET) :	$(LIB6FILES) \
                         $(LIB6OBJFILES) \
                         $(LIB6DEPN)
+.IF "$(VERBOSE)" == "TRUE"
     @echo using: $(LIB6FILES)
     @echo using: $(LIB6TARGET)
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @echo $(LIB6OBJFILES:s/.obj/.o/) | sed "s#$(PRJ:s/./\./)/$(ROUT)#$(ROUT)#g" | xargs -n 1 > $@
@@ -521,7 +567,7 @@ $(LIB6TARGET) :	$(LIB6FILES) \
 .ENDIF
 
 .ELIF "$(GUI)"=="OS2"
-    $(LIBMGR) $(LIBFLAGS) $@ $(LIB6FILES) $(LIB6OBJFILES)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(LIB6FILES) $(LIB6OBJFILES)
     @+-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB6OBJFILES)"!=""    
     @+$(TYPE) $(mktmp $(LIB6OBJFILES)) > $(null,$(LIB6OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -537,7 +583,7 @@ $(LIB6TARGET) :	$(LIB6FILES) \
     +$(ECHONL) $(LIB6OBJFILES) | sed "s#$(PRJ:s/././)/$(ROUT)#$(ROUT)#g" | xargs -n1 > $@
     @+cat /dev/null $(LIB6FILES) | xargs -n1 >> $@
 .ELSE
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB6FILES) $(LIB6OBJFILES))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB6FILES) $(LIB6OBJFILES))
     @-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB6OBJFILES)"!=""    
     @$(TYPE) $(mktmp $(LIB6OBJFILES)) > $(null,$(LIB6OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -549,8 +595,10 @@ $(LIB6TARGET) :	$(LIB6FILES) \
 .ENDIF          # "$(LIB6FILES)"!=""    
 .ELSE			# "$(GUI)"=="WNT"
     @-$(RM) $@
-    echo $(LIBMGR) r $@ $(LIB6OBJFILES)
-    $(LIBMGR) r $@ $(LIB6OBJFILES) $(LIB6FILES) bla.lib
+  .IF "$(VERBOSE)" == "TRUE"
+	@echo $(LIBMGR) r $@ $(LIB6OBJFILES)
+  .ENDIF
+	$(COMMAND_ECHO)$(LIBMGR) r $@ $(LIB6OBJFILES) $(LIB6FILES) bla.lib
 .ENDIF          # "$(GUI)"=="WNT"
 .ENDIF          # "$(GUI)"=="UNX"
 .ENDIF          # "$(LIB6TARGET)" != ""
@@ -562,7 +610,7 @@ $(LIB6TARGET) :	$(LIB6FILES) \
 .IF "$(LIB7ARCHIV)" != ""
 
 $(LIB7ARCHIV) :	$(LIB7TARGET)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @-$(RM) $(MISC)/$(LIB7ARCHIV:b).cmd
@@ -579,14 +627,18 @@ $(LIB7ARCHIV) :	$(LIB7TARGET)
 .IF "$(OS)" == "MACOSX"
      @echo  ranlib $(LIB7ARCHIV) >> $(MISC)/$(LIB7ARCHIV:b).cmd
 .ENDIF
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB7ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB7ARCHIV:b).cmd
 .ELSE			# "$(GUI)"=="UNX"
 .IF "$(GUI)$(COM)"=="WNTGCC"
     @+-$(RM) $(MISC)/$(LIB7ARCHIV:b).cmd
     @+echo $(LIBMGR) $(LIB7FLAGS) $(LIBFLAGS) $(LIB7ARCHIV) `cat $(LIB7TARGET) | sed s#'^'$(ROUT)#$(PRJ)/$(ROUT)#g` > $(MISC)/$(LIB7ARCHIV:b).cmd
     @+echo  ranlib $(LIB7ARCHIV) >> $(MISC)/$(LIB7ARCHIV:b).cmd
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB7ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB7ARCHIV:b).cmd
 .ELSE
     @echo just a dummy > $@
@@ -598,10 +650,12 @@ $(LIB7ARCHIV) :	$(LIB7TARGET)
 $(LIB7TARGET) :	$(LIB7FILES) \
                         $(LIB7OBJFILES) \
                         $(LIB7DEPN)
+.IF "$(VERBOSE)" == "TRUE"
     @echo using: $(LIB7FILES)
     @echo using: $(LIB7TARGET)
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @echo $(LIB7OBJFILES:s/.obj/.o/) | sed "s#$(PRJ:s/./\./)/$(ROUT)#$(ROUT)#g" | xargs -n 1 > $@
@@ -614,7 +668,7 @@ $(LIB7TARGET) :	$(LIB7FILES) \
 .ENDIF
 
 .ELIF "$(GUI)"=="OS2"
-    $(LIBMGR) $(LIBFLAGS) $@ $(LIB7FILES) $(LIB7OBJFILES)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(LIB7FILES) $(LIB7OBJFILES)
     @+-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB7OBJFILES)"!=""    
     @+$(TYPE) $(mktmp $(LIB7OBJFILES)) > $(null,$(LIB7OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -630,7 +684,7 @@ $(LIB7TARGET) :	$(LIB7FILES) \
     +$(ECHONL) $(LIB7OBJFILES) | sed "s#$(PRJ:s/././)/$(ROUT)#$(ROUT)#g" | xargs -n1 > $@
     @+cat /dev/null $(LIB7FILES) | xargs -n1 >> $@
 .ELSE
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB7FILES) $(LIB7OBJFILES))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB7FILES) $(LIB7OBJFILES))
     @-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB7OBJFILES)"!=""    
     @$(TYPE) $(mktmp $(LIB7OBJFILES)) > $(null,$(LIB7OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -642,8 +696,10 @@ $(LIB7TARGET) :	$(LIB7FILES) \
 .ENDIF          # "$(LIB7FILES)"!=""    
 .ELSE			# "$(GUI)"=="WNT"
     @-$(RM) $@
-    echo $(LIBMGR) r $@ $(LIB7OBJFILES)
-    $(LIBMGR) r $@ $(LIB7OBJFILES) $(LIB7FILES) bla.lib
+  .IF "$(VERBOSE)" == "TRUE"
+	@echo $(LIBMGR) r $@ $(LIB7OBJFILES)
+  .ENDIF
+	$(COMMAND_ECHO)$(LIBMGR) r $@ $(LIB7OBJFILES) $(LIB7FILES) bla.lib
 .ENDIF          # "$(GUI)"=="WNT"
 .ENDIF          # "$(GUI)"=="UNX"
 .ENDIF          # "$(LIB7TARGET)" != ""
@@ -655,7 +711,7 @@ $(LIB7TARGET) :	$(LIB7FILES) \
 .IF "$(LIB8ARCHIV)" != ""
 
 $(LIB8ARCHIV) :	$(LIB8TARGET)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @-$(RM) $(MISC)/$(LIB8ARCHIV:b).cmd
@@ -672,14 +728,18 @@ $(LIB8ARCHIV) :	$(LIB8TARGET)
 .IF "$(OS)" == "MACOSX"
      @echo  ranlib $(LIB8ARCHIV) >> $(MISC)/$(LIB8ARCHIV:b).cmd
 .ENDIF
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB8ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB8ARCHIV:b).cmd
 .ELSE			# "$(GUI)"=="UNX"
 .IF "$(GUI)$(COM)"=="WNTGCC"
     @+-$(RM) $(MISC)/$(LIB8ARCHIV:b).cmd
     @+echo $(LIBMGR) $(LIB8FLAGS) $(LIBFLAGS) $(LIB8ARCHIV) `cat $(LIB8TARGET) | sed s#'^'$(ROUT)#$(PRJ)/$(ROUT)#g` > $(MISC)/$(LIB8ARCHIV:b).cmd
     @+echo  ranlib $(LIB8ARCHIV) >> $(MISC)/$(LIB8ARCHIV:b).cmd
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB8ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB8ARCHIV:b).cmd
 .ELSE
     @echo just a dummy > $@
@@ -691,10 +751,12 @@ $(LIB8ARCHIV) :	$(LIB8TARGET)
 $(LIB8TARGET) :	$(LIB8FILES) \
                         $(LIB8OBJFILES) \
                         $(LIB8DEPN)
+.IF "$(VERBOSE)" == "TRUE"
     @echo using: $(LIB8FILES)
     @echo using: $(LIB8TARGET)
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @echo $(LIB8OBJFILES:s/.obj/.o/) | sed "s#$(PRJ:s/./\./)/$(ROUT)#$(ROUT)#g" | xargs -n 1 > $@
@@ -707,7 +769,7 @@ $(LIB8TARGET) :	$(LIB8FILES) \
 .ENDIF
 
 .ELIF "$(GUI)"=="OS2"
-    $(LIBMGR) $(LIBFLAGS) $@ $(LIB8FILES) $(LIB8OBJFILES)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(LIB8FILES) $(LIB8OBJFILES)
     @+-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB8OBJFILES)"!=""    
     @+$(TYPE) $(mktmp $(LIB8OBJFILES)) > $(null,$(LIB8OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -723,7 +785,7 @@ $(LIB8TARGET) :	$(LIB8FILES) \
     +$(ECHONL) $(LIB8OBJFILES) | sed "s#$(PRJ:s/././)/$(ROUT)#$(ROUT)#g" | xargs -n1 > $@
     @+cat /dev/null $(LIB8FILES) | xargs -n1 >> $@
 .ELSE
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB8FILES) $(LIB8OBJFILES))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB8FILES) $(LIB8OBJFILES))
     @-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB8OBJFILES)"!=""    
     @$(TYPE) $(mktmp $(LIB8OBJFILES)) > $(null,$(LIB8OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -735,8 +797,10 @@ $(LIB8TARGET) :	$(LIB8FILES) \
 .ENDIF          # "$(LIB8FILES)"!=""    
 .ELSE			# "$(GUI)"=="WNT"
     @-$(RM) $@
-    echo $(LIBMGR) r $@ $(LIB8OBJFILES)
-    $(LIBMGR) r $@ $(LIB8OBJFILES) $(LIB8FILES) bla.lib
+  .IF "$(VERBOSE)" == "TRUE"
+	@echo $(LIBMGR) r $@ $(LIB8OBJFILES)
+  .ENDIF
+	$(COMMAND_ECHO)$(LIBMGR) r $@ $(LIB8OBJFILES) $(LIB8FILES) bla.lib
 .ENDIF          # "$(GUI)"=="WNT"
 .ENDIF          # "$(GUI)"=="UNX"
 .ENDIF          # "$(LIB8TARGET)" != ""
@@ -748,7 +812,7 @@ $(LIB8TARGET) :	$(LIB8FILES) \
 .IF "$(LIB9ARCHIV)" != ""
 
 $(LIB9ARCHIV) :	$(LIB9TARGET)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @-$(RM) $(MISC)/$(LIB9ARCHIV:b).cmd
@@ -765,14 +829,18 @@ $(LIB9ARCHIV) :	$(LIB9TARGET)
 .IF "$(OS)" == "MACOSX"
      @echo  ranlib $(LIB9ARCHIV) >> $(MISC)/$(LIB9ARCHIV:b).cmd
 .ENDIF
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB9ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB9ARCHIV:b).cmd
 .ELSE			# "$(GUI)"=="UNX"
 .IF "$(GUI)$(COM)"=="WNTGCC"
     @+-$(RM) $(MISC)/$(LIB9ARCHIV:b).cmd
     @+echo $(LIBMGR) $(LIB9FLAGS) $(LIBFLAGS) $(LIB9ARCHIV) `cat $(LIB9TARGET) | sed s#'^'$(ROUT)#$(PRJ)/$(ROUT)#g` > $(MISC)/$(LIB9ARCHIV:b).cmd
     @+echo  ranlib $(LIB9ARCHIV) >> $(MISC)/$(LIB9ARCHIV:b).cmd
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB9ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB9ARCHIV:b).cmd
 .ELSE
     @echo just a dummy > $@
@@ -784,10 +852,12 @@ $(LIB9ARCHIV) :	$(LIB9TARGET)
 $(LIB9TARGET) :	$(LIB9FILES) \
                         $(LIB9OBJFILES) \
                         $(LIB9DEPN)
+.IF "$(VERBOSE)" == "TRUE"
     @echo using: $(LIB9FILES)
     @echo using: $(LIB9TARGET)
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @echo $(LIB9OBJFILES:s/.obj/.o/) | sed "s#$(PRJ:s/./\./)/$(ROUT)#$(ROUT)#g" | xargs -n 1 > $@
@@ -800,7 +870,7 @@ $(LIB9TARGET) :	$(LIB9FILES) \
 .ENDIF
 
 .ELIF "$(GUI)"=="OS2"
-    $(LIBMGR) $(LIBFLAGS) $@ $(LIB9FILES) $(LIB9OBJFILES)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(LIB9FILES) $(LIB9OBJFILES)
     @+-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB9OBJFILES)"!=""    
     @+$(TYPE) $(mktmp $(LIB9OBJFILES)) > $(null,$(LIB9OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -816,7 +886,7 @@ $(LIB9TARGET) :	$(LIB9FILES) \
     +$(ECHONL) $(LIB9OBJFILES) | sed "s#$(PRJ:s/././)/$(ROUT)#$(ROUT)#g" | xargs -n1 > $@
     @+cat /dev/null $(LIB9FILES) | xargs -n1 >> $@
 .ELSE
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB9FILES) $(LIB9OBJFILES))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB9FILES) $(LIB9OBJFILES))
     @-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB9OBJFILES)"!=""    
     @$(TYPE) $(mktmp $(LIB9OBJFILES)) > $(null,$(LIB9OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -828,8 +898,10 @@ $(LIB9TARGET) :	$(LIB9FILES) \
 .ENDIF          # "$(LIB9FILES)"!=""    
 .ELSE			# "$(GUI)"=="WNT"
     @-$(RM) $@
-    echo $(LIBMGR) r $@ $(LIB9OBJFILES)
-    $(LIBMGR) r $@ $(LIB9OBJFILES) $(LIB9FILES) bla.lib
+  .IF "$(VERBOSE)" == "TRUE"
+	@echo $(LIBMGR) r $@ $(LIB9OBJFILES)
+  .ENDIF
+	$(COMMAND_ECHO)$(LIBMGR) r $@ $(LIB9OBJFILES) $(LIB9FILES) bla.lib
 .ENDIF          # "$(GUI)"=="WNT"
 .ENDIF          # "$(GUI)"=="UNX"
 .ENDIF          # "$(LIB9TARGET)" != ""
@@ -841,7 +913,7 @@ $(LIB9TARGET) :	$(LIB9FILES) \
 .IF "$(LIB10ARCHIV)" != ""
 
 $(LIB10ARCHIV) :	$(LIB10TARGET)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @-$(RM) $(MISC)/$(LIB10ARCHIV:b).cmd
@@ -858,14 +930,18 @@ $(LIB10ARCHIV) :	$(LIB10TARGET)
 .IF "$(OS)" == "MACOSX"
      @echo  ranlib $(LIB10ARCHIV) >> $(MISC)/$(LIB10ARCHIV:b).cmd
 .ENDIF
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB10ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB10ARCHIV:b).cmd
 .ELSE			# "$(GUI)"=="UNX"
 .IF "$(GUI)$(COM)"=="WNTGCC"
     @+-$(RM) $(MISC)/$(LIB10ARCHIV:b).cmd
     @+echo $(LIBMGR) $(LIB10FLAGS) $(LIBFLAGS) $(LIB10ARCHIV) `cat $(LIB10TARGET) | sed s#'^'$(ROUT)#$(PRJ)/$(ROUT)#g` > $(MISC)/$(LIB10ARCHIV:b).cmd
     @+echo  ranlib $(LIB10ARCHIV) >> $(MISC)/$(LIB10ARCHIV:b).cmd
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB10ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB10ARCHIV:b).cmd
 .ELSE
     @echo just a dummy > $@
@@ -877,10 +953,12 @@ $(LIB10ARCHIV) :	$(LIB10TARGET)
 $(LIB10TARGET) :	$(LIB10FILES) \
                         $(LIB10OBJFILES) \
                         $(LIB10DEPN)
+.IF "$(VERBOSE)" == "TRUE"
     @echo using: $(LIB10FILES)
     @echo using: $(LIB10TARGET)
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @echo $(LIB10OBJFILES:s/.obj/.o/) | sed "s#$(PRJ:s/./\./)/$(ROUT)#$(ROUT)#g" | xargs -n 1 > $@
@@ -893,7 +971,7 @@ $(LIB10TARGET) :	$(LIB10FILES) \
 .ENDIF
 
 .ELIF "$(GUI)"=="OS2"
-    $(LIBMGR) $(LIBFLAGS) $@ $(LIB10FILES) $(LIB10OBJFILES)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(LIB10FILES) $(LIB10OBJFILES)
     @+-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB10OBJFILES)"!=""    
     @+$(TYPE) $(mktmp $(LIB10OBJFILES)) > $(null,$(LIB10OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -909,7 +987,7 @@ $(LIB10TARGET) :	$(LIB10FILES) \
     +$(ECHONL) $(LIB10OBJFILES) | sed "s#$(PRJ:s/././)/$(ROUT)#$(ROUT)#g" | xargs -n1 > $@
     @+cat /dev/null $(LIB10FILES) | xargs -n1 >> $@
 .ELSE
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB10FILES) $(LIB10OBJFILES))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB10FILES) $(LIB10OBJFILES))
     @-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB10OBJFILES)"!=""    
     @$(TYPE) $(mktmp $(LIB10OBJFILES)) > $(null,$(LIB10OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -921,8 +999,10 @@ $(LIB10TARGET) :	$(LIB10FILES) \
 .ENDIF          # "$(LIB10FILES)"!=""    
 .ELSE			# "$(GUI)"=="WNT"
     @-$(RM) $@
-    echo $(LIBMGR) r $@ $(LIB10OBJFILES)
-    $(LIBMGR) r $@ $(LIB10OBJFILES) $(LIB10FILES) bla.lib
+  .IF "$(VERBOSE)" == "TRUE"
+	@echo $(LIBMGR) r $@ $(LIB10OBJFILES)
+  .ENDIF
+	$(COMMAND_ECHO)$(LIBMGR) r $@ $(LIB10OBJFILES) $(LIB10FILES) bla.lib
 .ENDIF          # "$(GUI)"=="WNT"
 .ENDIF          # "$(GUI)"=="UNX"
 .ENDIF          # "$(LIB10TARGET)" != ""
diff --git solenv/inc/_tg_rslb.mk solenv/inc/_tg_rslb.mk
index e6d0639..08ffdd2 100644
--- solenv/inc/_tg_rslb.mk
+++ solenv/inc/_tg_rslb.mk
@@ -8,11 +8,13 @@ HIDRES1PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(MISC))/$(RESLIB1NAME)_res.
 #HACK cut off the dirty srs files which are included from solver
 RESLIB1HIDFILES:=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,.srs,_srs.hid $(RESLIB1SRSFILES)))
 $(HIDRES1PARTICLE): $(RESLIB1HIDFILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ $(FI)
 # need to strip since solaris cannot handle tab-only whitespace here
-    $(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB1HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB1HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDRES1PARTICLE)
@@ -23,9 +25,9 @@ $(RSC_MULTI1) : \
         $(RESLIB1SRSFILES) \
         $(RESLIB1TARGETN) \
         $(RESLIB1BMPS)
-    @echo using rsc multi-res feature
+	@echo Compiling: $(@:f)
 .IF "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -40,7 +42,7 @@ $(RSC_MULTI1) : \
     $(RSC1HEADER) $(RESLIB1SRSFILES) \
     ) > $(NULLDEV)
 .ELSE			# "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -59,7 +61,7 @@ $(RSC_MULTI1) : \
 $(RESLIB1TARGETN): \
         $(RESLIB1SRSFILES) \
         $(RESLIB1BMPS)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(common_build_reslib)"!=""
     @@-$(RM) $(RSC_MULTI1)
@@ -86,11 +88,13 @@ HIDRES2PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(MISC))/$(RESLIB2NAME)_res.
 #HACK cut off the dirty srs files which are included from solver
 RESLIB2HIDFILES:=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,.srs,_srs.hid $(RESLIB2SRSFILES)))
 $(HIDRES2PARTICLE): $(RESLIB2HIDFILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ $(FI)
 # need to strip since solaris cannot handle tab-only whitespace here
-    $(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB2HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB2HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDRES2PARTICLE)
@@ -101,9 +105,9 @@ $(RSC_MULTI2) : \
         $(RESLIB2SRSFILES) \
         $(RESLIB2TARGETN) \
         $(RESLIB2BMPS)
-    @echo using rsc multi-res feature
+	@echo Compiling: $(@:f)
 .IF "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -118,7 +122,7 @@ $(RSC_MULTI2) : \
     $(RSC2HEADER) $(RESLIB2SRSFILES) \
     ) > $(NULLDEV)
 .ELSE			# "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -137,7 +141,7 @@ $(RSC_MULTI2) : \
 $(RESLIB2TARGETN): \
         $(RESLIB2SRSFILES) \
         $(RESLIB2BMPS)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(common_build_reslib)"!=""
     @@-$(RM) $(RSC_MULTI2)
@@ -164,11 +168,13 @@ HIDRES3PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(MISC))/$(RESLIB3NAME)_res.
 #HACK cut off the dirty srs files which are included from solver
 RESLIB3HIDFILES:=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,.srs,_srs.hid $(RESLIB3SRSFILES)))
 $(HIDRES3PARTICLE): $(RESLIB3HIDFILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ $(FI)
 # need to strip since solaris cannot handle tab-only whitespace here
-    $(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB3HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB3HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDRES3PARTICLE)
@@ -179,9 +185,9 @@ $(RSC_MULTI3) : \
         $(RESLIB3SRSFILES) \
         $(RESLIB3TARGETN) \
         $(RESLIB3BMPS)
-    @echo using rsc multi-res feature
+	@echo Compiling: $(@:f)
 .IF "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -196,7 +202,7 @@ $(RSC_MULTI3) : \
     $(RSC3HEADER) $(RESLIB3SRSFILES) \
     ) > $(NULLDEV)
 .ELSE			# "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -215,7 +221,7 @@ $(RSC_MULTI3) : \
 $(RESLIB3TARGETN): \
         $(RESLIB3SRSFILES) \
         $(RESLIB3BMPS)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(common_build_reslib)"!=""
     @@-$(RM) $(RSC_MULTI3)
@@ -242,11 +248,13 @@ HIDRES4PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(MISC))/$(RESLIB4NAME)_res.
 #HACK cut off the dirty srs files which are included from solver
 RESLIB4HIDFILES:=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,.srs,_srs.hid $(RESLIB4SRSFILES)))
 $(HIDRES4PARTICLE): $(RESLIB4HIDFILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ $(FI)
 # need to strip since solaris cannot handle tab-only whitespace here
-    $(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB4HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB4HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDRES4PARTICLE)
@@ -257,9 +265,9 @@ $(RSC_MULTI4) : \
         $(RESLIB4SRSFILES) \
         $(RESLIB4TARGETN) \
         $(RESLIB4BMPS)
-    @echo using rsc multi-res feature
+	@echo Compiling: $(@:f)
 .IF "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -274,7 +282,7 @@ $(RSC_MULTI4) : \
     $(RSC4HEADER) $(RESLIB4SRSFILES) \
     ) > $(NULLDEV)
 .ELSE			# "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -293,7 +301,7 @@ $(RSC_MULTI4) : \
 $(RESLIB4TARGETN): \
         $(RESLIB4SRSFILES) \
         $(RESLIB4BMPS)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(common_build_reslib)"!=""
     @@-$(RM) $(RSC_MULTI4)
@@ -320,11 +328,13 @@ HIDRES5PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(MISC))/$(RESLIB5NAME)_res.
 #HACK cut off the dirty srs files which are included from solver
 RESLIB5HIDFILES:=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,.srs,_srs.hid $(RESLIB5SRSFILES)))
 $(HIDRES5PARTICLE): $(RESLIB5HIDFILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ $(FI)
 # need to strip since solaris cannot handle tab-only whitespace here
-    $(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB5HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB5HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDRES5PARTICLE)
@@ -335,9 +345,9 @@ $(RSC_MULTI5) : \
         $(RESLIB5SRSFILES) \
         $(RESLIB5TARGETN) \
         $(RESLIB5BMPS)
-    @echo using rsc multi-res feature
+	@echo Compiling: $(@:f)
 .IF "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -352,7 +362,7 @@ $(RSC_MULTI5) : \
     $(RSC5HEADER) $(RESLIB5SRSFILES) \
     ) > $(NULLDEV)
 .ELSE			# "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -371,7 +381,7 @@ $(RSC_MULTI5) : \
 $(RESLIB5TARGETN): \
         $(RESLIB5SRSFILES) \
         $(RESLIB5BMPS)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(common_build_reslib)"!=""
     @@-$(RM) $(RSC_MULTI5)
@@ -398,11 +408,13 @@ HIDRES6PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(MISC))/$(RESLIB6NAME)_res.
 #HACK cut off the dirty srs files which are included from solver
 RESLIB6HIDFILES:=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,.srs,_srs.hid $(RESLIB6SRSFILES)))
 $(HIDRES6PARTICLE): $(RESLIB6HIDFILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ $(FI)
 # need to strip since solaris cannot handle tab-only whitespace here
-    $(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB6HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB6HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDRES6PARTICLE)
@@ -413,9 +425,9 @@ $(RSC_MULTI6) : \
         $(RESLIB6SRSFILES) \
         $(RESLIB6TARGETN) \
         $(RESLIB6BMPS)
-    @echo using rsc multi-res feature
+	@echo Compiling: $(@:f)
 .IF "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -430,7 +442,7 @@ $(RSC_MULTI6) : \
     $(RSC6HEADER) $(RESLIB6SRSFILES) \
     ) > $(NULLDEV)
 .ELSE			# "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -449,7 +461,7 @@ $(RSC_MULTI6) : \
 $(RESLIB6TARGETN): \
         $(RESLIB6SRSFILES) \
         $(RESLIB6BMPS)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(common_build_reslib)"!=""
     @@-$(RM) $(RSC_MULTI6)
@@ -476,11 +488,13 @@ HIDRES7PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(MISC))/$(RESLIB7NAME)_res.
 #HACK cut off the dirty srs files which are included from solver
 RESLIB7HIDFILES:=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,.srs,_srs.hid $(RESLIB7SRSFILES)))
 $(HIDRES7PARTICLE): $(RESLIB7HIDFILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ $(FI)
 # need to strip since solaris cannot handle tab-only whitespace here
-    $(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB7HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB7HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDRES7PARTICLE)
@@ -491,9 +505,9 @@ $(RSC_MULTI7) : \
         $(RESLIB7SRSFILES) \
         $(RESLIB7TARGETN) \
         $(RESLIB7BMPS)
-    @echo using rsc multi-res feature
+	@echo Compiling: $(@:f)
 .IF "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -508,7 +522,7 @@ $(RSC_MULTI7) : \
     $(RSC7HEADER) $(RESLIB7SRSFILES) \
     ) > $(NULLDEV)
 .ELSE			# "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -527,7 +541,7 @@ $(RSC_MULTI7) : \
 $(RESLIB7TARGETN): \
         $(RESLIB7SRSFILES) \
         $(RESLIB7BMPS)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(common_build_reslib)"!=""
     @@-$(RM) $(RSC_MULTI7)
@@ -554,11 +568,13 @@ HIDRES8PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(MISC))/$(RESLIB8NAME)_res.
 #HACK cut off the dirty srs files which are included from solver
 RESLIB8HIDFILES:=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,.srs,_srs.hid $(RESLIB8SRSFILES)))
 $(HIDRES8PARTICLE): $(RESLIB8HIDFILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ $(FI)
 # need to strip since solaris cannot handle tab-only whitespace here
-    $(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB8HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB8HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDRES8PARTICLE)
@@ -569,9 +585,9 @@ $(RSC_MULTI8) : \
         $(RESLIB8SRSFILES) \
         $(RESLIB8TARGETN) \
         $(RESLIB8BMPS)
-    @echo using rsc multi-res feature
+	@echo Compiling: $(@:f)
 .IF "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -586,7 +602,7 @@ $(RSC_MULTI8) : \
     $(RSC8HEADER) $(RESLIB8SRSFILES) \
     ) > $(NULLDEV)
 .ELSE			# "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -605,7 +621,7 @@ $(RSC_MULTI8) : \
 $(RESLIB8TARGETN): \
         $(RESLIB8SRSFILES) \
         $(RESLIB8BMPS)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(common_build_reslib)"!=""
     @@-$(RM) $(RSC_MULTI8)
@@ -632,11 +648,13 @@ HIDRES9PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(MISC))/$(RESLIB9NAME)_res.
 #HACK cut off the dirty srs files which are included from solver
 RESLIB9HIDFILES:=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,.srs,_srs.hid $(RESLIB9SRSFILES)))
 $(HIDRES9PARTICLE): $(RESLIB9HIDFILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ $(FI)
 # need to strip since solaris cannot handle tab-only whitespace here
-    $(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB9HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB9HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDRES9PARTICLE)
@@ -647,9 +665,9 @@ $(RSC_MULTI9) : \
         $(RESLIB9SRSFILES) \
         $(RESLIB9TARGETN) \
         $(RESLIB9BMPS)
-    @echo using rsc multi-res feature
+	@echo Compiling: $(@:f)
 .IF "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -664,7 +682,7 @@ $(RSC_MULTI9) : \
     $(RSC9HEADER) $(RESLIB9SRSFILES) \
     ) > $(NULLDEV)
 .ELSE			# "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -683,7 +701,7 @@ $(RSC_MULTI9) : \
 $(RESLIB9TARGETN): \
         $(RESLIB9SRSFILES) \
         $(RESLIB9BMPS)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(common_build_reslib)"!=""
     @@-$(RM) $(RSC_MULTI9)
@@ -710,11 +728,13 @@ HIDRES10PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(MISC))/$(RESLIB10NAME)_re
 #HACK cut off the dirty srs files which are included from solver
 RESLIB10HIDFILES:=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,.srs,_srs.hid $(RESLIB10SRSFILES)))
 $(HIDRES10PARTICLE): $(RESLIB10HIDFILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ $(FI)
 # need to strip since solaris cannot handle tab-only whitespace here
-    $(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB10HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB10HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDRES10PARTICLE)
@@ -725,9 +745,9 @@ $(RSC_MULTI10) : \
         $(RESLIB10SRSFILES) \
         $(RESLIB10TARGETN) \
         $(RESLIB10BMPS)
-    @echo using rsc multi-res feature
+	@echo Compiling: $(@:f)
 .IF "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -742,7 +762,7 @@ $(RSC_MULTI10) : \
     $(RSC10HEADER) $(RESLIB10SRSFILES) \
     ) > $(NULLDEV)
 .ELSE			# "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -761,7 +781,7 @@ $(RSC_MULTI10) : \
 $(RESLIB10TARGETN): \
         $(RESLIB10SRSFILES) \
         $(RESLIB10BMPS)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(common_build_reslib)"!=""
     @@-$(RM) $(RSC_MULTI10)
diff --git solenv/inc/_tg_scp.mk solenv/inc/_tg_scp.mk
index ea37f37..288bfa4 100644
--- solenv/inc/_tg_scp.mk
+++ solenv/inc/_tg_scp.mk
@@ -5,15 +5,17 @@
 # try to get missing parfiles
 $(PAR)/%.par : $(SOLARPARDIR)/%.par
     @@-$(MKDIRHIER) $(@:d:d)
-    $(COPY) $< $@
+	$(COMMAND_ECHO)$(COPY) $< $@
 
 LOCALSCP1FILES=$(foreach,i,$(SCP1FILES) $(foreach,j,$(SCP1LINK_PRODUCT_TYPE) $(PAR)/$j/$i ))
 
 $(SCP1TARGETN): $(LOCALSCP1FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(MKDIRHIER) $(BIN)/$(SCP1LINK_PRODUCT_TYPE)
-    $(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP1FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
+	$(COMMAND_ECHO)$(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP1FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
 .ENDIF
 
 # Anweisungen fuer das Linken
@@ -24,15 +26,17 @@ $(SCP1TARGETN): $(LOCALSCP1FILES)
 # try to get missing parfiles
 $(PAR)/%.par : $(SOLARPARDIR)/%.par
     @@-$(MKDIRHIER) $(@:d:d)
-    $(COPY) $< $@
+	$(COMMAND_ECHO)$(COPY) $< $@
 
 LOCALSCP2FILES=$(foreach,i,$(SCP2FILES) $(foreach,j,$(SCP2LINK_PRODUCT_TYPE) $(PAR)/$j/$i ))
 
 $(SCP2TARGETN): $(LOCALSCP2FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(MKDIRHIER) $(BIN)/$(SCP2LINK_PRODUCT_TYPE)
-    $(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP2FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
+	$(COMMAND_ECHO)$(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP2FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
 .ENDIF
 
 # Anweisungen fuer das Linken
@@ -43,15 +47,17 @@ $(SCP2TARGETN): $(LOCALSCP2FILES)
 # try to get missing parfiles
 $(PAR)/%.par : $(SOLARPARDIR)/%.par
     @@-$(MKDIRHIER) $(@:d:d)
-    $(COPY) $< $@
+	$(COMMAND_ECHO)$(COPY) $< $@
 
 LOCALSCP3FILES=$(foreach,i,$(SCP3FILES) $(foreach,j,$(SCP3LINK_PRODUCT_TYPE) $(PAR)/$j/$i ))
 
 $(SCP3TARGETN): $(LOCALSCP3FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(MKDIRHIER) $(BIN)/$(SCP3LINK_PRODUCT_TYPE)
-    $(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP3FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
+	$(COMMAND_ECHO)$(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP3FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
 .ENDIF
 
 # Anweisungen fuer das Linken
@@ -62,15 +68,17 @@ $(SCP3TARGETN): $(LOCALSCP3FILES)
 # try to get missing parfiles
 $(PAR)/%.par : $(SOLARPARDIR)/%.par
     @@-$(MKDIRHIER) $(@:d:d)
-    $(COPY) $< $@
+	$(COMMAND_ECHO)$(COPY) $< $@
 
 LOCALSCP4FILES=$(foreach,i,$(SCP4FILES) $(foreach,j,$(SCP4LINK_PRODUCT_TYPE) $(PAR)/$j/$i ))
 
 $(SCP4TARGETN): $(LOCALSCP4FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(MKDIRHIER) $(BIN)/$(SCP4LINK_PRODUCT_TYPE)
-    $(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP4FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
+	$(COMMAND_ECHO)$(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP4FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
 .ENDIF
 
 # Anweisungen fuer das Linken
@@ -81,15 +89,17 @@ $(SCP4TARGETN): $(LOCALSCP4FILES)
 # try to get missing parfiles
 $(PAR)/%.par : $(SOLARPARDIR)/%.par
     @@-$(MKDIRHIER) $(@:d:d)
-    $(COPY) $< $@
+	$(COMMAND_ECHO)$(COPY) $< $@
 
 LOCALSCP5FILES=$(foreach,i,$(SCP5FILES) $(foreach,j,$(SCP5LINK_PRODUCT_TYPE) $(PAR)/$j/$i ))
 
 $(SCP5TARGETN): $(LOCALSCP5FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(MKDIRHIER) $(BIN)/$(SCP5LINK_PRODUCT_TYPE)
-    $(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP5FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
+	$(COMMAND_ECHO)$(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP5FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
 .ENDIF
 
 # Anweisungen fuer das Linken
@@ -100,15 +110,17 @@ $(SCP5TARGETN): $(LOCALSCP5FILES)
 # try to get missing parfiles
 $(PAR)/%.par : $(SOLARPARDIR)/%.par
     @@-$(MKDIRHIER) $(@:d:d)
-    $(COPY) $< $@
+	$(COMMAND_ECHO)$(COPY) $< $@
 
 LOCALSCP6FILES=$(foreach,i,$(SCP6FILES) $(foreach,j,$(SCP6LINK_PRODUCT_TYPE) $(PAR)/$j/$i ))
 
 $(SCP6TARGETN): $(LOCALSCP6FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(MKDIRHIER) $(BIN)/$(SCP6LINK_PRODUCT_TYPE)
-    $(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP6FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
+	$(COMMAND_ECHO)$(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP6FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
 .ENDIF
 
 # Anweisungen fuer das Linken
@@ -119,15 +131,17 @@ $(SCP6TARGETN): $(LOCALSCP6FILES)
 # try to get missing parfiles
 $(PAR)/%.par : $(SOLARPARDIR)/%.par
     @@-$(MKDIRHIER) $(@:d:d)
-    $(COPY) $< $@
+	$(COMMAND_ECHO)$(COPY) $< $@
 
 LOCALSCP7FILES=$(foreach,i,$(SCP7FILES) $(foreach,j,$(SCP7LINK_PRODUCT_TYPE) $(PAR)/$j/$i ))
 
 $(SCP7TARGETN): $(LOCALSCP7FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(MKDIRHIER) $(BIN)/$(SCP7LINK_PRODUCT_TYPE)
-    $(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP7FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
+	$(COMMAND_ECHO)$(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP7FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
 .ENDIF
 
 # Anweisungen fuer das Linken
@@ -138,15 +152,17 @@ $(SCP7TARGETN): $(LOCALSCP7FILES)
 # try to get missing parfiles
 $(PAR)/%.par : $(SOLARPARDIR)/%.par
     @@-$(MKDIRHIER) $(@:d:d)
-    $(COPY) $< $@
+	$(COMMAND_ECHO)$(COPY) $< $@
 
 LOCALSCP8FILES=$(foreach,i,$(SCP8FILES) $(foreach,j,$(SCP8LINK_PRODUCT_TYPE) $(PAR)/$j/$i ))
 
 $(SCP8TARGETN): $(LOCALSCP8FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(MKDIRHIER) $(BIN)/$(SCP8LINK_PRODUCT_TYPE)
-    $(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP8FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
+	$(COMMAND_ECHO)$(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP8FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
 .ENDIF
 
 # Anweisungen fuer das Linken
@@ -157,15 +173,17 @@ $(SCP8TARGETN): $(LOCALSCP8FILES)
 # try to get missing parfiles
 $(PAR)/%.par : $(SOLARPARDIR)/%.par
     @@-$(MKDIRHIER) $(@:d:d)
-    $(COPY) $< $@
+	$(COMMAND_ECHO)$(COPY) $< $@
 
 LOCALSCP9FILES=$(foreach,i,$(SCP9FILES) $(foreach,j,$(SCP9LINK_PRODUCT_TYPE) $(PAR)/$j/$i ))
 
 $(SCP9TARGETN): $(LOCALSCP9FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(MKDIRHIER) $(BIN)/$(SCP9LINK_PRODUCT_TYPE)
-    $(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP9FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
+	$(COMMAND_ECHO)$(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP9FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
 .ENDIF
 
 # Anweisungen fuer das Linken
@@ -176,15 +194,17 @@ $(SCP9TARGETN): $(LOCALSCP9FILES)
 # try to get missing parfiles
 $(PAR)/%.par : $(SOLARPARDIR)/%.par
     @@-$(MKDIRHIER) $(@:d:d)
-    $(COPY) $< $@
+	$(COMMAND_ECHO)$(COPY) $< $@
 
 LOCALSCP10FILES=$(foreach,i,$(SCP10FILES) $(foreach,j,$(SCP10LINK_PRODUCT_TYPE) $(PAR)/$j/$i ))
 
 $(SCP10TARGETN): $(LOCALSCP10FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(MKDIRHIER) $(BIN)/$(SCP10LINK_PRODUCT_TYPE)
-    $(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP10FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
+	$(COMMAND_ECHO)$(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP10FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
 .ENDIF
 
 # Anweisungen fuer das Linken
diff --git solenv/inc/_tg_sdi.mk solenv/inc/_tg_sdi.mk
index c10ad54..b2e40c3 100644
--- solenv/inc/_tg_sdi.mk
+++ solenv/inc/_tg_sdi.mk
@@ -2,8 +2,10 @@
 
 .IF "$(HIDSID1PARTICLE)"!=""
 $(HIDSID1PARTICLE): $(SDI1TARGET)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@.$(ROUT).tmp $@
     @$(TYPE) $(MISC)/$(SDI1NAME).sid | $(AWK) '$$1=="#define" { print $$2, $$3 }' > $@.$(ROUT).tmp
     @-$(RM) $@
@@ -12,10 +14,13 @@ $(HIDSID1PARTICLE): $(SDI1TARGET)
 
 .IF "$(SDI1TARGET)"!=""
 $(SDI1TARGET): $(SVSDI1DEPEND) $(SDI1NAME).sdi
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(SVIDL) @$(mktmp \
+	$(COMMAND_ECHO)$(SVIDL) @$(mktmp \
+	$(VERBOSITY) \
     -fs$(INCCOMX)/$(SDI1NAME).hxx	\
     -fd$(INCCOMX)/$(SDI1NAME).ilb	\
     -fm$(MISC)/$(SDI1NAME).don	\
@@ -30,8 +35,10 @@ $(SDI1TARGET): $(SVSDI1DEPEND) $(SDI1NAME).sdi
 
 .IF "$(HIDSID2PARTICLE)"!=""
 $(HIDSID2PARTICLE): $(SDI2TARGET)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@.$(ROUT).tmp $@
     @$(TYPE) $(MISC)/$(SDI2NAME).sid | $(AWK) '$$1=="#define" { print $$2, $$3 }' > $@.$(ROUT).tmp
     @-$(RM) $@
@@ -40,10 +47,13 @@ $(HIDSID2PARTICLE): $(SDI2TARGET)
 
 .IF "$(SDI2TARGET)"!=""
 $(SDI2TARGET): $(SVSDI2DEPEND) $(SDI2NAME).sdi
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(SVIDL) @$(mktmp \
+	$(COMMAND_ECHO)$(SVIDL) @$(mktmp \
+	$(VERBOSITY) \
     -fs$(INCCOMX)/$(SDI2NAME).hxx	\
     -fd$(INCCOMX)/$(SDI2NAME).ilb	\
     -fm$(MISC)/$(SDI2NAME).don	\
@@ -58,8 +68,10 @@ $(SDI2TARGET): $(SVSDI2DEPEND) $(SDI2NAME).sdi
 
 .IF "$(HIDSID3PARTICLE)"!=""
 $(HIDSID3PARTICLE): $(SDI3TARGET)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@.$(ROUT).tmp $@
     @$(TYPE) $(MISC)/$(SDI3NAME).sid | $(AWK) '$$1=="#define" { print $$2, $$3 }' > $@.$(ROUT).tmp
     @-$(RM) $@
@@ -68,10 +80,13 @@ $(HIDSID3PARTICLE): $(SDI3TARGET)
 
 .IF "$(SDI3TARGET)"!=""
 $(SDI3TARGET): $(SVSDI3DEPEND) $(SDI3NAME).sdi
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(SVIDL) @$(mktmp \
+	$(COMMAND_ECHO)$(SVIDL) @$(mktmp \
+	$(VERBOSITY) \
     -fs$(INCCOMX)/$(SDI3NAME).hxx	\
     -fd$(INCCOMX)/$(SDI3NAME).ilb	\
     -fm$(MISC)/$(SDI3NAME).don	\
@@ -86,8 +101,10 @@ $(SDI3TARGET): $(SVSDI3DEPEND) $(SDI3NAME).sdi
 
 .IF "$(HIDSID4PARTICLE)"!=""
 $(HIDSID4PARTICLE): $(SDI4TARGET)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@.$(ROUT).tmp $@
     @$(TYPE) $(MISC)/$(SDI4NAME).sid | $(AWK) '$$1=="#define" { print $$2, $$3 }' > $@.$(ROUT).tmp
     @-$(RM) $@
@@ -96,10 +113,13 @@ $(HIDSID4PARTICLE): $(SDI4TARGET)
 
 .IF "$(SDI4TARGET)"!=""
 $(SDI4TARGET): $(SVSDI4DEPEND) $(SDI4NAME).sdi
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(SVIDL) @$(mktmp \
+	$(COMMAND_ECHO)$(SVIDL) @$(mktmp \
+	$(VERBOSITY) \
     -fs$(INCCOMX)/$(SDI4NAME).hxx	\
     -fd$(INCCOMX)/$(SDI4NAME).ilb	\
     -fm$(MISC)/$(SDI4NAME).don	\
@@ -114,8 +134,10 @@ $(SDI4TARGET): $(SVSDI4DEPEND) $(SDI4NAME).sdi
 
 .IF "$(HIDSID5PARTICLE)"!=""
 $(HIDSID5PARTICLE): $(SDI5TARGET)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@.$(ROUT).tmp $@
     @$(TYPE) $(MISC)/$(SDI5NAME).sid | $(AWK) '$$1=="#define" { print $$2, $$3 }' > $@.$(ROUT).tmp
     @-$(RM) $@
@@ -124,10 +146,13 @@ $(HIDSID5PARTICLE): $(SDI5TARGET)
 
 .IF "$(SDI5TARGET)"!=""
 $(SDI5TARGET): $(SVSDI5DEPEND) $(SDI5NAME).sdi
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(SVIDL) @$(mktmp \
+	$(COMMAND_ECHO)$(SVIDL) @$(mktmp \
+	$(VERBOSITY) \
     -fs$(INCCOMX)/$(SDI5NAME).hxx	\
     -fd$(INCCOMX)/$(SDI5NAME).ilb	\
     -fm$(MISC)/$(SDI5NAME).don	\
@@ -142,8 +167,10 @@ $(SDI5TARGET): $(SVSDI5DEPEND) $(SDI5NAME).sdi
 
 .IF "$(HIDSID6PARTICLE)"!=""
 $(HIDSID6PARTICLE): $(SDI6TARGET)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@.$(ROUT).tmp $@
     @$(TYPE) $(MISC)/$(SDI6NAME).sid | $(AWK) '$$1=="#define" { print $$2, $$3 }' > $@.$(ROUT).tmp
     @-$(RM) $@
@@ -152,10 +179,13 @@ $(HIDSID6PARTICLE): $(SDI6TARGET)
 
 .IF "$(SDI6TARGET)"!=""
 $(SDI6TARGET): $(SVSDI6DEPEND) $(SDI6NAME).sdi
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(SVIDL) @$(mktmp \
+	$(COMMAND_ECHO)$(SVIDL) @$(mktmp \
+	$(VERBOSITY) \
     -fs$(INCCOMX)/$(SDI6NAME).hxx	\
     -fd$(INCCOMX)/$(SDI6NAME).ilb	\
     -fm$(MISC)/$(SDI6NAME).don	\
@@ -170,8 +200,10 @@ $(SDI6TARGET): $(SVSDI6DEPEND) $(SDI6NAME).sdi
 
 .IF "$(HIDSID7PARTICLE)"!=""
 $(HIDSID7PARTICLE): $(SDI7TARGET)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@.$(ROUT).tmp $@
     @$(TYPE) $(MISC)/$(SDI7NAME).sid | $(AWK) '$$1=="#define" { print $$2, $$3 }' > $@.$(ROUT).tmp
     @-$(RM) $@
@@ -180,10 +212,13 @@ $(HIDSID7PARTICLE): $(SDI7TARGET)
 
 .IF "$(SDI7TARGET)"!=""
 $(SDI7TARGET): $(SVSDI7DEPEND) $(SDI7NAME).sdi
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(SVIDL) @$(mktmp \
+	$(COMMAND_ECHO)$(SVIDL) @$(mktmp \
+	$(VERBOSITY) \
     -fs$(INCCOMX)/$(SDI7NAME).hxx	\
     -fd$(INCCOMX)/$(SDI7NAME).ilb	\
     -fm$(MISC)/$(SDI7NAME).don	\
@@ -198,8 +233,10 @@ $(SDI7TARGET): $(SVSDI7DEPEND) $(SDI7NAME).sdi
 
 .IF "$(HIDSID8PARTICLE)"!=""
 $(HIDSID8PARTICLE): $(SDI8TARGET)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@.$(ROUT).tmp $@
     @$(TYPE) $(MISC)/$(SDI8NAME).sid | $(AWK) '$$1=="#define" { print $$2, $$3 }' > $@.$(ROUT).tmp
     @-$(RM) $@
@@ -208,10 +245,13 @@ $(HIDSID8PARTICLE): $(SDI8TARGET)
 
 .IF "$(SDI8TARGET)"!=""
 $(SDI8TARGET): $(SVSDI8DEPEND) $(SDI8NAME).sdi
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(SVIDL) @$(mktmp \
+	$(COMMAND_ECHO)$(SVIDL) @$(mktmp \
+	$(VERBOSITY) \
     -fs$(INCCOMX)/$(SDI8NAME).hxx	\
     -fd$(INCCOMX)/$(SDI8NAME).ilb	\
     -fm$(MISC)/$(SDI8NAME).don	\
@@ -226,8 +266,10 @@ $(SDI8TARGET): $(SVSDI8DEPEND) $(SDI8NAME).sdi
 
 .IF "$(HIDSID9PARTICLE)"!=""
 $(HIDSID9PARTICLE): $(SDI9TARGET)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@.$(ROUT).tmp $@
     @$(TYPE) $(MISC)/$(SDI9NAME).sid | $(AWK) '$$1=="#define" { print $$2, $$3 }' > $@.$(ROUT).tmp
     @-$(RM) $@
@@ -236,10 +278,13 @@ $(HIDSID9PARTICLE): $(SDI9TARGET)
 
 .IF "$(SDI9TARGET)"!=""
 $(SDI9TARGET): $(SVSDI9DEPEND) $(SDI9NAME).sdi
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(SVIDL) @$(mktmp \
+	$(COMMAND_ECHO)$(SVIDL) @$(mktmp \
+	$(VERBOSITY) \
     -fs$(INCCOMX)/$(SDI9NAME).hxx	\
     -fd$(INCCOMX)/$(SDI9NAME).ilb	\
     -fm$(MISC)/$(SDI9NAME).don	\
@@ -254,8 +299,10 @@ $(SDI9TARGET): $(SVSDI9DEPEND) $(SDI9NAME).sdi
 
 .IF "$(HIDSID10PARTICLE)"!=""
 $(HIDSID10PARTICLE): $(SDI10TARGET)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@.$(ROUT).tmp $@
     @$(TYPE) $(MISC)/$(SDI10NAME).sid | $(AWK) '$$1=="#define" { print $$2, $$3 }' > $@.$(ROUT).tmp
     @-$(RM) $@
@@ -264,10 +311,13 @@ $(HIDSID10PARTICLE): $(SDI10TARGET)
 
 .IF "$(SDI10TARGET)"!=""
 $(SDI10TARGET): $(SVSDI10DEPEND) $(SDI10NAME).sdi
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(SVIDL) @$(mktmp \
+	$(COMMAND_ECHO)$(SVIDL) @$(mktmp \
+	$(VERBOSITY) \
     -fs$(INCCOMX)/$(SDI10NAME).hxx	\
     -fd$(INCCOMX)/$(SDI10NAME).ilb	\
     -fm$(MISC)/$(SDI10NAME).don	\
diff --git solenv/inc/_tg_shl.mk solenv/inc/_tg_shl.mk
index d648f1d..e4cb05f 100644
--- solenv/inc/_tg_shl.mk
+++ solenv/inc/_tg_shl.mk
@@ -55,7 +55,7 @@ SHL1VERSIONOBJDEP:=$(VERSIONOBJ:d){$(subst,$(DLLPOSTFIX),_dflt $(SHL1TARGET))}$(
 .ENDIF          # "$(GUI)" == "UNX"
 $(MISC)/$(SHL1VERSIONOBJ:b).c : $(SOLARENV)/src/version.c $(INCCOM)/$(SHL1VERSIONOBJ:b).h
 #    $(COPY) $(SOLARENV)/src/version.c $@
-    $(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL1VERSIONOBJ:b).h/ > $@
+	$(COMMAND_ECHO)$(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL1VERSIONOBJ:b).h/ > $@
 
 .INIT : $(SHL1VERSIONOBJDEP)
 .ENDIF			# "$(VERSIONOBJ)"!=""
@@ -118,16 +118,20 @@ $(USE_SHL1VERSIONMAP): \
 .ENDIF
 .ENDIF			# "$(SHL1OBJS)!"=""
     @$(TYPE) /dev/null $(SHL1LIBS:s/.lib/.dump/) >> $@.dump
-    $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL1INTERFACE) -f $(SHL1FILTERFILE) -m $@
+	$(COMMAND_ECHO) $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL1INTERFACE) -f $(SHL1FILTERFILE) -m $@
 
 .ELSE			# "$(SHL1FILTERFILE)"!=""
 USE_SHL1VERSIONMAP=$(MISC)/$(SHL1TARGET).vmap
 $(USE_SHL1VERSIONMAP) :
+.IF "$(VERBOSE)" == "TRUE"
     @echo -----------------------------
     @echo SHL1FILTERFILE not set!
     @echo -----------------------------
     @$(TOUCH) $@
     @echo dummy file to keep the dependencies for later use.
+.ELSE
+	@$(TOUCH) $@
+.ENDIF
 #	force_dmake_to_error
 .ENDIF			# "$(SHL1FILTERFILE)"!=""
 .ELSE			# "$(USE_SHL1VERSIONMAP)"!=""
@@ -154,25 +158,25 @@ $(USE_SHL1VERSIONMAP): $(SHL1VERSIONMAP)
 # Its questionable if the following condition '.IF "$(COMID)"=="gcc3"' makes sense and what
 # happens if somebody will change it in the future
 .IF "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL1VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL1VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
 .ELIF "$(COMNAME)"=="sunpro5"
-    tr -d "\015" < $(SHL1VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL1VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
 .ELSE           # "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL1VERSIONMAP) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL1VERSIONMAP) > $@
 .ENDIF          # "$(COMID)"=="gcc3"
     @chmod a+w $@
 # Mac OS X post-processing generate an exported symbols list from the generated map file
 # for details on exported symbols list see man ld on Mac OS X
 .IF "$(OS)"=="MACOSX"
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
 .IF "$(SHL1OBJS)"!=""
     -echo $(foreach,i,$(SHL1OBJS:s/.obj/.o/) $i) | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 .IF "$(SHL1LIBS)"!=""
-    -$(TYPE) $(foreach,j,$(SHL1LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)-$(TYPE) $(foreach,j,$(SHL1LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
@@ -214,7 +218,7 @@ SHL1LINKRESO*=$(MISC)/$(SHL1TARGET)_res.o
 .IF "$(SHL1LIBS)"!=""
 $(MISC)/$(SHL1TARGET)_linkinc.ls .PHONY:
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL1LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL1LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL1LIBS)"!=""
 .ENDIF
 
@@ -230,14 +234,14 @@ SHL1LINKLIST=$(MISC)/$(SHL1TARGET)_link.lst
 SHL1LINKLISTPARAM=@$(SHL1LINKLIST)
 $(SHL1LINKLIST) : $(SHL1LIBS)
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL1LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL1LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL1LIBS)"!=""
 .ENDIF          # "$(COM)"!="GCC"
 .ENDIF
 .ENDIF			# "$(SHL1USE_EXPORTS)"=="name"
 
 $(MISC)/%linkinc.ls:
-    echo . > $@
+	@echo . > $@
 .ENDIF          # "$(linkinc)"!=""
 
 .IF "$(GUI)" == "OS2"
@@ -264,8 +268,10 @@ $(SHL1TARGETN) : \
                     $(SHL1DEPN) \
                     $(SHL1IMP_ORD) \
                     $(SHL1LINKLIST)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $(SHL1TARGETN)
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(SHL1DEFAULTRES)"!=""
     @@-$(RM) $(MISC)/$(SHL1DEFAULTRES:b).rc
@@ -285,10 +291,10 @@ $(SHL1TARGETN) : \
     @echo $(EMQ)#define INTERNAL_NAME $(SHL1TARGET:b) >> $(MISC)/$(SHL1DEFAULTRES:b).rc
     @echo $(EMQ)#include $(EMQ)"shlinfo.rc$(EMQ)" >> $(MISC)/$(SHL1DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
-    $(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL1DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL1DEFAULTRES:b).rc
 .ENDIF			# "$(SHL1DEFAULTRES)"!=""
 .IF "$(SHL1ALLRES)"!=""
-    $(TYPE) $(SHL1ALLRES) > $(SHL1LINKRES)
+	$(COMMAND_ECHO)$(TYPE) $(SHL1ALLRES) > $(SHL1LINKRES)
 .IF "$(COM)"=="GCC"
     windres $(SHL1LINKRES) $(SHL1LINKRESO)
 .ENDIF			# "$(COM)"=="GCC"
@@ -335,15 +341,15 @@ $(SHL1TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE			# "$(USE_DEFFILE)"!=""
-    $(SHL1LINKER) @$(mktmp	$(SHL1LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL1LINKER) @$(mktmp	$(SHL1LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL1BASEX)		\
         $(SHL1STACK) -out:$(SHL1TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -359,16 +365,16 @@ $(SHL1TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(USE_DEFFILE)"!=""
 .ELSE			# "$(SHL1USE_EXPORTS)"!="name"
-    $(SHL1LINKER) @$(mktmp	$(SHL1LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL1LINKER) @$(mktmp	$(SHL1LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL1BASEX)		\
         $(SHL1STACK) -out:$(SHL1TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -382,18 +388,18 @@ $(SHL1TARGETN) : \
     )
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(SHL1USE_EXPORTS)"!="name"
 .ELSE			# "$(linkinc)"==""
-        -$(RM) del $(MISC)/$(SHL1TARGET).lnk
-        -$(RM) $(MISC)/$(SHL1TARGET).lst
-        $(TYPE) $(mktmp \
+		$(COMMAND_ECHO)-$(RM) del $(MISC)/$(SHL1TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)/$(SHL1TARGET).lst
+		$(COMMAND_ECHO)$(TYPE) $(mktmp \
         $(SHL1LINKFLAGS) \
         $(LINKFLAGSSHL) $(SHL1BASEX) \
         $(SHL1STACK) $(MAPFILE) \
@@ -405,17 +411,17 @@ $(SHL1TARGETN) : \
         $(SHL1STDSHL) $(STDSHL1) \
         $(SHL1LINKRES) \
         ) >> $(MISC)/$(SHL1TARGET).lnk
-        $(TYPE) $(MISC)/$(SHL1TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL1TARGET).lnk
-        $(SHL1LINKER) @$(MISC)/$(SHL1TARGET).lnk
+		$(COMMAND_ECHO)$(TYPE) $(MISC)/$(SHL1TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL1TARGET).lnk
+		$(COMMAND_ECHO)$(SHL1LINKER) @$(MISC)/$(SHL1TARGET).lnk
         @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-        $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(linkinc)"==""
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)" == "WNT"
@@ -431,11 +437,13 @@ $(SHL1TARGETN) : \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_1.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_1.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_1.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_1.cmd
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         shl $(SHL1RPATH) $@
-    @echo "Making: $@.jnilib"
+	@echo "Making:   " $(@:f).jnilib
     @macosx-create-bundle $@
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL1NOCHECK)"==""
@@ -448,21 +456,29 @@ $(SHL1TARGETN) : \
     $(SHL1VERSIONOBJ) -o $@ \
     `cat /dev/null $(SHL1LIBS) | tr -s " " "\n" | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g` \
     $(SHL1STDLIBS) $(SHL1ARCHIVES) $(SHL1STDSHL) $(STDSHL1) $(LINKOUTPUT_FILTER) > $(MISC)/$(TARGET).$(@:b)_1.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_1.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_1.cmd
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL1NOCHECK)"==""
-    -$(RM) $(SHL1TARGETN:d)check_$(SHL1TARGETN:f)
-    $(RENAME) $(SHL1TARGETN) $(SHL1TARGETN:d)check_$(SHL1TARGETN:f)
-    $(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS1) $(SHL1TARGETN:d)check_$(SHL1TARGETN:f)
+	$(COMMAND_ECHO)-$(RM) $(SHL1TARGETN:d)check_$(SHL1TARGETN:f)
+	$(COMMAND_ECHO)$(RENAME) $(SHL1TARGETN) $(SHL1TARGETN:d)check_$(SHL1TARGETN:f)
+.IF "$(VERBOSE)"=="TRUE"
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS1) $(SHL1TARGETN:d)check_$(SHL1TARGETN:f)
+.ELSE
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS1) -- -s $(SHL1TARGETN:d)check_$(SHL1TARGETN:f)
+.ENDIF
 .ENDIF				# "$(SHL1NOCHECK)"!=""
 .ENDIF			# "$(UPDATER)"=="YES"
 .ENDIF			# "$(OS)"=="MACOSX"
 .IF "$(UNIXVERSIONNAMES)"!=""
-    $(RM) $(LB)/$(SHL1TARGETN:b)
-    cd $(LB) && ln -s $(SHL1TARGETN:f) $(SHL1TARGETN:b)
+	$(COMMAND_ECHO)$(RM) $(LB)/$(SHL1TARGETN:b)
+	$(COMMAND_ECHO)cd $(LB) && ln -s $(SHL1TARGETN:f) $(SHL1TARGETN:b)
 .ENDIF			# "$(UNIXVERSIONNAMES)"!=""
+.IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+.ENDIF
 .ENDIF			# "$(GUI)" == "UNX"
 
 .IF "$(GUI)" == "OS2"
@@ -480,16 +496,16 @@ $(SHL1TARGETN) : \
 #	@-+echo $(EMQ)RCDATA 1 { "Build string here" }$(EMQ) >> $(MISC)/$(SHL1DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
 # YD 04/07/06 seems null, confuses rc cli: -i $(SOLARTESDIR)
-    $(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL1DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL1DEFAULTRES:b).rc
 .ENDIF			# "$(SHL1DEFAULTRES)"!=""
 
 .IF "$(SHL1ALLRES)"!=""
-    +$(TYPE) $(SHL1ALLRES) > $(SHL1LINKRES)
+	$(COMMAND_ECHO)+$(TYPE) $(SHL1ALLRES) > $(SHL1LINKRES)
 .ENDIF			# "$(SHL1ALLRES)"!=""
 
 .IF "$(USE_DEFFILE)"!=""
 
-    $(SHL1LINKER) $(SHL1LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
+	$(COMMAND_ECHO)$(SHL1LINKER) $(SHL1LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
         $(SHL1DEF) \
         $(STDOBJ) \
         -L$(LB) \
@@ -502,7 +518,7 @@ $(SHL1TARGETN) : \
 
 .ELSE			# "$(USE_DEFFILE)"!=""
 
-    $(SHL1LINKER) -v 	$(SHL1LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL1LINKER) -v 	$(SHL1LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL1BASEX)		\
         $(SHL1STACK) -o $(SHL1TARGETN)	\
         $(SHL1DEF) \
@@ -520,7 +536,7 @@ $(SHL1TARGETN) : \
 .ENDIF			# "$(USE_DEFFILE)"!=""
 
 .IF "$(SHL1TARGET8)" != "$(SHL1TARGET)"
-    +$(COPY) $@ $(@:d)$(SHL1TARGET8).dll
+	$(COMMAND_ECHO)+$(COPY) $@ $(@:d)$(SHL1TARGET8).dll
 .ENDIF
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -594,7 +610,7 @@ SHL2VERSIONOBJDEP:=$(VERSIONOBJ:d){$(subst,$(DLLPOSTFIX),_dflt $(SHL2TARGET))}$(
 .ENDIF          # "$(GUI)" == "UNX"
 $(MISC)/$(SHL2VERSIONOBJ:b).c : $(SOLARENV)/src/version.c $(INCCOM)/$(SHL2VERSIONOBJ:b).h
 #    $(COPY) $(SOLARENV)/src/version.c $@
-    $(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL2VERSIONOBJ:b).h/ > $@
+	$(COMMAND_ECHO)$(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL2VERSIONOBJ:b).h/ > $@
 
 .INIT : $(SHL2VERSIONOBJDEP)
 .ENDIF			# "$(VERSIONOBJ)"!=""
@@ -657,16 +673,20 @@ $(USE_SHL2VERSIONMAP): \
 .ENDIF
 .ENDIF			# "$(SHL2OBJS)!"=""
     @$(TYPE) /dev/null $(SHL2LIBS:s/.lib/.dump/) >> $@.dump
-    $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL2INTERFACE) -f $(SHL2FILTERFILE) -m $@
+	$(COMMAND_ECHO) $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL2INTERFACE) -f $(SHL2FILTERFILE) -m $@
 
 .ELSE			# "$(SHL2FILTERFILE)"!=""
 USE_SHL2VERSIONMAP=$(MISC)/$(SHL2TARGET).vmap
 $(USE_SHL2VERSIONMAP) :
+.IF "$(VERBOSE)" == "TRUE"
     @echo -----------------------------
     @echo SHL2FILTERFILE not set!
     @echo -----------------------------
     @$(TOUCH) $@
     @echo dummy file to keep the dependencies for later use.
+.ELSE
+	@$(TOUCH) $@
+.ENDIF
 #	force_dmake_to_error
 .ENDIF			# "$(SHL2FILTERFILE)"!=""
 .ELSE			# "$(USE_SHL2VERSIONMAP)"!=""
@@ -693,25 +713,25 @@ $(USE_SHL2VERSIONMAP): $(SHL2VERSIONMAP)
 # Its questionable if the following condition '.IF "$(COMID)"=="gcc3"' makes sense and what
 # happens if somebody will change it in the future
 .IF "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL2VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL2VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
 .ELIF "$(COMNAME)"=="sunpro5"
-    tr -d "\015" < $(SHL2VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL2VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
 .ELSE           # "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL2VERSIONMAP) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL2VERSIONMAP) > $@
 .ENDIF          # "$(COMID)"=="gcc3"
     @chmod a+w $@
 # Mac OS X post-processing generate an exported symbols list from the generated map file
 # for details on exported symbols list see man ld on Mac OS X
 .IF "$(OS)"=="MACOSX"
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
 .IF "$(SHL2OBJS)"!=""
     -echo $(foreach,i,$(SHL2OBJS:s/.obj/.o/) $i) | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 .IF "$(SHL2LIBS)"!=""
-    -$(TYPE) $(foreach,j,$(SHL2LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)-$(TYPE) $(foreach,j,$(SHL2LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
@@ -753,7 +773,7 @@ SHL2LINKRESO*=$(MISC)/$(SHL2TARGET)_res.o
 .IF "$(SHL2LIBS)"!=""
 $(MISC)/$(SHL2TARGET)_linkinc.ls .PHONY:
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL2LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL2LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL2LIBS)"!=""
 .ENDIF
 
@@ -769,14 +789,14 @@ SHL2LINKLIST=$(MISC)/$(SHL2TARGET)_link.lst
 SHL2LINKLISTPARAM=@$(SHL2LINKLIST)
 $(SHL2LINKLIST) : $(SHL2LIBS)
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL2LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL2LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL2LIBS)"!=""
 .ENDIF          # "$(COM)"!="GCC"
 .ENDIF
 .ENDIF			# "$(SHL2USE_EXPORTS)"=="name"
 
 $(MISC)/%linkinc.ls:
-    echo . > $@
+	@echo . > $@
 .ENDIF          # "$(linkinc)"!=""
 
 .IF "$(GUI)" == "OS2"
@@ -803,8 +823,10 @@ $(SHL2TARGETN) : \
                     $(SHL2DEPN) \
                     $(SHL2IMP_ORD) \
                     $(SHL2LINKLIST)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $(SHL2TARGETN)
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(SHL2DEFAULTRES)"!=""
     @@-$(RM) $(MISC)/$(SHL2DEFAULTRES:b).rc
@@ -824,10 +846,10 @@ $(SHL2TARGETN) : \
     @echo $(EMQ)#define INTERNAL_NAME $(SHL2TARGET:b) >> $(MISC)/$(SHL2DEFAULTRES:b).rc
     @echo $(EMQ)#include $(EMQ)"shlinfo.rc$(EMQ)" >> $(MISC)/$(SHL2DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
-    $(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL2DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL2DEFAULTRES:b).rc
 .ENDIF			# "$(SHL2DEFAULTRES)"!=""
 .IF "$(SHL2ALLRES)"!=""
-    $(TYPE) $(SHL2ALLRES) > $(SHL2LINKRES)
+	$(COMMAND_ECHO)$(TYPE) $(SHL2ALLRES) > $(SHL2LINKRES)
 .IF "$(COM)"=="GCC"
     windres $(SHL2LINKRES) $(SHL2LINKRESO)
 .ENDIF			# "$(COM)"=="GCC"
@@ -874,15 +896,15 @@ $(SHL2TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE			# "$(USE_DEFFILE)"!=""
-    $(SHL2LINKER) @$(mktmp	$(SHL2LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL2LINKER) @$(mktmp	$(SHL2LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL2BASEX)		\
         $(SHL2STACK) -out:$(SHL2TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -898,16 +920,16 @@ $(SHL2TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(USE_DEFFILE)"!=""
 .ELSE			# "$(SHL2USE_EXPORTS)"!="name"
-    $(SHL2LINKER) @$(mktmp	$(SHL2LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL2LINKER) @$(mktmp	$(SHL2LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL2BASEX)		\
         $(SHL2STACK) -out:$(SHL2TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -921,18 +943,18 @@ $(SHL2TARGETN) : \
     )
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(SHL2USE_EXPORTS)"!="name"
 .ELSE			# "$(linkinc)"==""
-        -$(RM) del $(MISC)/$(SHL2TARGET).lnk
-        -$(RM) $(MISC)/$(SHL2TARGET).lst
-        $(TYPE) $(mktmp \
+		$(COMMAND_ECHO)-$(RM) del $(MISC)/$(SHL2TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)/$(SHL2TARGET).lst
+		$(COMMAND_ECHO)$(TYPE) $(mktmp \
         $(SHL2LINKFLAGS) \
         $(LINKFLAGSSHL) $(SHL2BASEX) \
         $(SHL2STACK) $(MAPFILE) \
@@ -944,17 +966,17 @@ $(SHL2TARGETN) : \
         $(SHL2STDSHL) $(STDSHL2) \
         $(SHL2LINKRES) \
         ) >> $(MISC)/$(SHL2TARGET).lnk
-        $(TYPE) $(MISC)/$(SHL2TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL2TARGET).lnk
-        $(SHL2LINKER) @$(MISC)/$(SHL2TARGET).lnk
+		$(COMMAND_ECHO)$(TYPE) $(MISC)/$(SHL2TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL2TARGET).lnk
+		$(COMMAND_ECHO)$(SHL2LINKER) @$(MISC)/$(SHL2TARGET).lnk
         @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-        $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(linkinc)"==""
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)" == "WNT"
@@ -970,11 +992,13 @@ $(SHL2TARGETN) : \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_2.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_2.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_2.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_2.cmd
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         shl $(SHL2RPATH) $@
-    @echo "Making: $@.jnilib"
+	@echo "Making:   " $(@:f).jnilib
     @macosx-create-bundle $@
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL2NOCHECK)"==""
@@ -987,21 +1011,29 @@ $(SHL2TARGETN) : \
     $(SHL2VERSIONOBJ) -o $@ \
     `cat /dev/null $(SHL2LIBS) | tr -s " " "\n" | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g` \
     $(SHL2STDLIBS) $(SHL2ARCHIVES) $(SHL2STDSHL) $(STDSHL2) $(LINKOUTPUT_FILTER) > $(MISC)/$(TARGET).$(@:b)_2.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_2.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_2.cmd
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL2NOCHECK)"==""
-    -$(RM) $(SHL2TARGETN:d)check_$(SHL2TARGETN:f)
-    $(RENAME) $(SHL2TARGETN) $(SHL2TARGETN:d)check_$(SHL2TARGETN:f)
-    $(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS2) $(SHL2TARGETN:d)check_$(SHL2TARGETN:f)
+	$(COMMAND_ECHO)-$(RM) $(SHL2TARGETN:d)check_$(SHL2TARGETN:f)
+	$(COMMAND_ECHO)$(RENAME) $(SHL2TARGETN) $(SHL2TARGETN:d)check_$(SHL2TARGETN:f)
+.IF "$(VERBOSE)"=="TRUE"
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS2) $(SHL2TARGETN:d)check_$(SHL2TARGETN:f)
+.ELSE
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS2) -- -s $(SHL2TARGETN:d)check_$(SHL2TARGETN:f)
+.ENDIF
 .ENDIF				# "$(SHL2NOCHECK)"!=""
 .ENDIF			# "$(UPDATER)"=="YES"
 .ENDIF			# "$(OS)"=="MACOSX"
 .IF "$(UNIXVERSIONNAMES)"!=""
-    $(RM) $(LB)/$(SHL2TARGETN:b)
-    cd $(LB) && ln -s $(SHL2TARGETN:f) $(SHL2TARGETN:b)
+	$(COMMAND_ECHO)$(RM) $(LB)/$(SHL2TARGETN:b)
+	$(COMMAND_ECHO)cd $(LB) && ln -s $(SHL2TARGETN:f) $(SHL2TARGETN:b)
 .ENDIF			# "$(UNIXVERSIONNAMES)"!=""
+.IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+.ENDIF
 .ENDIF			# "$(GUI)" == "UNX"
 
 .IF "$(GUI)" == "OS2"
@@ -1019,16 +1051,16 @@ $(SHL2TARGETN) : \
 #	@-+echo $(EMQ)RCDATA 1 { "Build string here" }$(EMQ) >> $(MISC)/$(SHL2DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
 # YD 04/07/06 seems null, confuses rc cli: -i $(SOLARTESDIR)
-    $(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL2DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL2DEFAULTRES:b).rc
 .ENDIF			# "$(SHL2DEFAULTRES)"!=""
 
 .IF "$(SHL2ALLRES)"!=""
-    +$(TYPE) $(SHL2ALLRES) > $(SHL2LINKRES)
+	$(COMMAND_ECHO)+$(TYPE) $(SHL2ALLRES) > $(SHL2LINKRES)
 .ENDIF			# "$(SHL2ALLRES)"!=""
 
 .IF "$(USE_DEFFILE)"!=""
 
-    $(SHL2LINKER) $(SHL2LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
+	$(COMMAND_ECHO)$(SHL2LINKER) $(SHL2LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
         $(SHL2DEF) \
         $(STDOBJ) \
         -L$(LB) \
@@ -1041,7 +1073,7 @@ $(SHL2TARGETN) : \
 
 .ELSE			# "$(USE_DEFFILE)"!=""
 
-    $(SHL2LINKER) -v 	$(SHL2LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL2LINKER) -v 	$(SHL2LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL2BASEX)		\
         $(SHL2STACK) -o $(SHL2TARGETN)	\
         $(SHL2DEF) \
@@ -1059,7 +1091,7 @@ $(SHL2TARGETN) : \
 .ENDIF			# "$(USE_DEFFILE)"!=""
 
 .IF "$(SHL2TARGET8)" != "$(SHL2TARGET)"
-    +$(COPY) $@ $(@:d)$(SHL2TARGET8).dll
+	$(COMMAND_ECHO)+$(COPY) $@ $(@:d)$(SHL2TARGET8).dll
 .ENDIF
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -1133,7 +1165,7 @@ SHL3VERSIONOBJDEP:=$(VERSIONOBJ:d){$(subst,$(DLLPOSTFIX),_dflt $(SHL3TARGET))}$(
 .ENDIF          # "$(GUI)" == "UNX"
 $(MISC)/$(SHL3VERSIONOBJ:b).c : $(SOLARENV)/src/version.c $(INCCOM)/$(SHL3VERSIONOBJ:b).h
 #    $(COPY) $(SOLARENV)/src/version.c $@
-    $(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL3VERSIONOBJ:b).h/ > $@
+	$(COMMAND_ECHO)$(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL3VERSIONOBJ:b).h/ > $@
 
 .INIT : $(SHL3VERSIONOBJDEP)
 .ENDIF			# "$(VERSIONOBJ)"!=""
@@ -1196,16 +1228,20 @@ $(USE_SHL3VERSIONMAP): \
 .ENDIF
 .ENDIF			# "$(SHL3OBJS)!"=""
     @$(TYPE) /dev/null $(SHL3LIBS:s/.lib/.dump/) >> $@.dump
-    $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL3INTERFACE) -f $(SHL3FILTERFILE) -m $@
+	$(COMMAND_ECHO) $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL3INTERFACE) -f $(SHL3FILTERFILE) -m $@
 
 .ELSE			# "$(SHL3FILTERFILE)"!=""
 USE_SHL3VERSIONMAP=$(MISC)/$(SHL3TARGET).vmap
 $(USE_SHL3VERSIONMAP) :
+.IF "$(VERBOSE)" == "TRUE"
     @echo -----------------------------
     @echo SHL3FILTERFILE not set!
     @echo -----------------------------
     @$(TOUCH) $@
     @echo dummy file to keep the dependencies for later use.
+.ELSE
+	@$(TOUCH) $@
+.ENDIF
 #	force_dmake_to_error
 .ENDIF			# "$(SHL3FILTERFILE)"!=""
 .ELSE			# "$(USE_SHL3VERSIONMAP)"!=""
@@ -1232,25 +1268,25 @@ $(USE_SHL3VERSIONMAP): $(SHL3VERSIONMAP)
 # Its questionable if the following condition '.IF "$(COMID)"=="gcc3"' makes sense and what
 # happens if somebody will change it in the future
 .IF "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL3VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL3VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
 .ELIF "$(COMNAME)"=="sunpro5"
-    tr -d "\015" < $(SHL3VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL3VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
 .ELSE           # "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL3VERSIONMAP) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL3VERSIONMAP) > $@
 .ENDIF          # "$(COMID)"=="gcc3"
     @chmod a+w $@
 # Mac OS X post-processing generate an exported symbols list from the generated map file
 # for details on exported symbols list see man ld on Mac OS X
 .IF "$(OS)"=="MACOSX"
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
 .IF "$(SHL3OBJS)"!=""
     -echo $(foreach,i,$(SHL3OBJS:s/.obj/.o/) $i) | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 .IF "$(SHL3LIBS)"!=""
-    -$(TYPE) $(foreach,j,$(SHL3LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)-$(TYPE) $(foreach,j,$(SHL3LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
@@ -1292,7 +1328,7 @@ SHL3LINKRESO*=$(MISC)/$(SHL3TARGET)_res.o
 .IF "$(SHL3LIBS)"!=""
 $(MISC)/$(SHL3TARGET)_linkinc.ls .PHONY:
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL3LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL3LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL3LIBS)"!=""
 .ENDIF
 
@@ -1308,14 +1344,14 @@ SHL3LINKLIST=$(MISC)/$(SHL3TARGET)_link.lst
 SHL3LINKLISTPARAM=@$(SHL3LINKLIST)
 $(SHL3LINKLIST) : $(SHL3LIBS)
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL3LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL3LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL3LIBS)"!=""
 .ENDIF          # "$(COM)"!="GCC"
 .ENDIF
 .ENDIF			# "$(SHL3USE_EXPORTS)"=="name"
 
 $(MISC)/%linkinc.ls:
-    echo . > $@
+	@echo . > $@
 .ENDIF          # "$(linkinc)"!=""
 
 .IF "$(GUI)" == "OS2"
@@ -1342,8 +1378,10 @@ $(SHL3TARGETN) : \
                     $(SHL3DEPN) \
                     $(SHL3IMP_ORD) \
                     $(SHL3LINKLIST)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $(SHL3TARGETN)
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(SHL3DEFAULTRES)"!=""
     @@-$(RM) $(MISC)/$(SHL3DEFAULTRES:b).rc
@@ -1363,10 +1401,10 @@ $(SHL3TARGETN) : \
     @echo $(EMQ)#define INTERNAL_NAME $(SHL3TARGET:b) >> $(MISC)/$(SHL3DEFAULTRES:b).rc
     @echo $(EMQ)#include $(EMQ)"shlinfo.rc$(EMQ)" >> $(MISC)/$(SHL3DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
-    $(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL3DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL3DEFAULTRES:b).rc
 .ENDIF			# "$(SHL3DEFAULTRES)"!=""
 .IF "$(SHL3ALLRES)"!=""
-    $(TYPE) $(SHL3ALLRES) > $(SHL3LINKRES)
+	$(COMMAND_ECHO)$(TYPE) $(SHL3ALLRES) > $(SHL3LINKRES)
 .IF "$(COM)"=="GCC"
     windres $(SHL3LINKRES) $(SHL3LINKRESO)
 .ENDIF			# "$(COM)"=="GCC"
@@ -1413,15 +1451,15 @@ $(SHL3TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE			# "$(USE_DEFFILE)"!=""
-    $(SHL3LINKER) @$(mktmp	$(SHL3LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL3LINKER) @$(mktmp	$(SHL3LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL3BASEX)		\
         $(SHL3STACK) -out:$(SHL3TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -1437,16 +1475,16 @@ $(SHL3TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(USE_DEFFILE)"!=""
 .ELSE			# "$(SHL3USE_EXPORTS)"!="name"
-    $(SHL3LINKER) @$(mktmp	$(SHL3LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL3LINKER) @$(mktmp	$(SHL3LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL3BASEX)		\
         $(SHL3STACK) -out:$(SHL3TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -1460,18 +1498,18 @@ $(SHL3TARGETN) : \
     )
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(SHL3USE_EXPORTS)"!="name"
 .ELSE			# "$(linkinc)"==""
-        -$(RM) del $(MISC)/$(SHL3TARGET).lnk
-        -$(RM) $(MISC)/$(SHL3TARGET).lst
-        $(TYPE) $(mktmp \
+		$(COMMAND_ECHO)-$(RM) del $(MISC)/$(SHL3TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)/$(SHL3TARGET).lst
+		$(COMMAND_ECHO)$(TYPE) $(mktmp \
         $(SHL3LINKFLAGS) \
         $(LINKFLAGSSHL) $(SHL3BASEX) \
         $(SHL3STACK) $(MAPFILE) \
@@ -1483,17 +1521,17 @@ $(SHL3TARGETN) : \
         $(SHL3STDSHL) $(STDSHL3) \
         $(SHL3LINKRES) \
         ) >> $(MISC)/$(SHL3TARGET).lnk
-        $(TYPE) $(MISC)/$(SHL3TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL3TARGET).lnk
-        $(SHL3LINKER) @$(MISC)/$(SHL3TARGET).lnk
+		$(COMMAND_ECHO)$(TYPE) $(MISC)/$(SHL3TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL3TARGET).lnk
+		$(COMMAND_ECHO)$(SHL3LINKER) @$(MISC)/$(SHL3TARGET).lnk
         @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-        $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(linkinc)"==""
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)" == "WNT"
@@ -1509,11 +1547,13 @@ $(SHL3TARGETN) : \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_3.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_3.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_3.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_3.cmd
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         shl $(SHL3RPATH) $@
-    @echo "Making: $@.jnilib"
+	@echo "Making:   " $(@:f).jnilib
     @macosx-create-bundle $@
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL3NOCHECK)"==""
@@ -1526,21 +1566,29 @@ $(SHL3TARGETN) : \
     $(SHL3VERSIONOBJ) -o $@ \
     `cat /dev/null $(SHL3LIBS) | tr -s " " "\n" | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g` \
     $(SHL3STDLIBS) $(SHL3ARCHIVES) $(SHL3STDSHL) $(STDSHL3) $(LINKOUTPUT_FILTER) > $(MISC)/$(TARGET).$(@:b)_3.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_3.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_3.cmd
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL3NOCHECK)"==""
-    -$(RM) $(SHL3TARGETN:d)check_$(SHL3TARGETN:f)
-    $(RENAME) $(SHL3TARGETN) $(SHL3TARGETN:d)check_$(SHL3TARGETN:f)
-    $(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS3) $(SHL3TARGETN:d)check_$(SHL3TARGETN:f)
+	$(COMMAND_ECHO)-$(RM) $(SHL3TARGETN:d)check_$(SHL3TARGETN:f)
+	$(COMMAND_ECHO)$(RENAME) $(SHL3TARGETN) $(SHL3TARGETN:d)check_$(SHL3TARGETN:f)
+.IF "$(VERBOSE)"=="TRUE"
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS3) $(SHL3TARGETN:d)check_$(SHL3TARGETN:f)
+.ELSE
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS3) -- -s $(SHL3TARGETN:d)check_$(SHL3TARGETN:f)
+.ENDIF
 .ENDIF				# "$(SHL3NOCHECK)"!=""
 .ENDIF			# "$(UPDATER)"=="YES"
 .ENDIF			# "$(OS)"=="MACOSX"
 .IF "$(UNIXVERSIONNAMES)"!=""
-    $(RM) $(LB)/$(SHL3TARGETN:b)
-    cd $(LB) && ln -s $(SHL3TARGETN:f) $(SHL3TARGETN:b)
+	$(COMMAND_ECHO)$(RM) $(LB)/$(SHL3TARGETN:b)
+	$(COMMAND_ECHO)cd $(LB) && ln -s $(SHL3TARGETN:f) $(SHL3TARGETN:b)
 .ENDIF			# "$(UNIXVERSIONNAMES)"!=""
+.IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+.ENDIF
 .ENDIF			# "$(GUI)" == "UNX"
 
 .IF "$(GUI)" == "OS2"
@@ -1558,16 +1606,16 @@ $(SHL3TARGETN) : \
 #	@-+echo $(EMQ)RCDATA 1 { "Build string here" }$(EMQ) >> $(MISC)/$(SHL3DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
 # YD 04/07/06 seems null, confuses rc cli: -i $(SOLARTESDIR)
-    $(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL3DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL3DEFAULTRES:b).rc
 .ENDIF			# "$(SHL3DEFAULTRES)"!=""
 
 .IF "$(SHL3ALLRES)"!=""
-    +$(TYPE) $(SHL3ALLRES) > $(SHL3LINKRES)
+	$(COMMAND_ECHO)+$(TYPE) $(SHL3ALLRES) > $(SHL3LINKRES)
 .ENDIF			# "$(SHL3ALLRES)"!=""
 
 .IF "$(USE_DEFFILE)"!=""
 
-    $(SHL3LINKER) $(SHL3LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
+	$(COMMAND_ECHO)$(SHL3LINKER) $(SHL3LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
         $(SHL3DEF) \
         $(STDOBJ) \
         -L$(LB) \
@@ -1580,7 +1628,7 @@ $(SHL3TARGETN) : \
 
 .ELSE			# "$(USE_DEFFILE)"!=""
 
-    $(SHL3LINKER) -v 	$(SHL3LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL3LINKER) -v 	$(SHL3LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL3BASEX)		\
         $(SHL3STACK) -o $(SHL3TARGETN)	\
         $(SHL3DEF) \
@@ -1598,7 +1646,7 @@ $(SHL3TARGETN) : \
 .ENDIF			# "$(USE_DEFFILE)"!=""
 
 .IF "$(SHL3TARGET8)" != "$(SHL3TARGET)"
-    +$(COPY) $@ $(@:d)$(SHL3TARGET8).dll
+	$(COMMAND_ECHO)+$(COPY) $@ $(@:d)$(SHL3TARGET8).dll
 .ENDIF
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -1672,7 +1720,7 @@ SHL4VERSIONOBJDEP:=$(VERSIONOBJ:d){$(subst,$(DLLPOSTFIX),_dflt $(SHL4TARGET))}$(
 .ENDIF          # "$(GUI)" == "UNX"
 $(MISC)/$(SHL4VERSIONOBJ:b).c : $(SOLARENV)/src/version.c $(INCCOM)/$(SHL4VERSIONOBJ:b).h
 #    $(COPY) $(SOLARENV)/src/version.c $@
-    $(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL4VERSIONOBJ:b).h/ > $@
+	$(COMMAND_ECHO)$(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL4VERSIONOBJ:b).h/ > $@
 
 .INIT : $(SHL4VERSIONOBJDEP)
 .ENDIF			# "$(VERSIONOBJ)"!=""
@@ -1735,16 +1783,20 @@ $(USE_SHL4VERSIONMAP): \
 .ENDIF
 .ENDIF			# "$(SHL4OBJS)!"=""
     @$(TYPE) /dev/null $(SHL4LIBS:s/.lib/.dump/) >> $@.dump
-    $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL4INTERFACE) -f $(SHL4FILTERFILE) -m $@
+	$(COMMAND_ECHO) $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL4INTERFACE) -f $(SHL4FILTERFILE) -m $@
 
 .ELSE			# "$(SHL4FILTERFILE)"!=""
 USE_SHL4VERSIONMAP=$(MISC)/$(SHL4TARGET).vmap
 $(USE_SHL4VERSIONMAP) :
+.IF "$(VERBOSE)" == "TRUE"
     @echo -----------------------------
     @echo SHL4FILTERFILE not set!
     @echo -----------------------------
     @$(TOUCH) $@
     @echo dummy file to keep the dependencies for later use.
+.ELSE
+	@$(TOUCH) $@
+.ENDIF
 #	force_dmake_to_error
 .ENDIF			# "$(SHL4FILTERFILE)"!=""
 .ELSE			# "$(USE_SHL4VERSIONMAP)"!=""
@@ -1771,25 +1823,25 @@ $(USE_SHL4VERSIONMAP): $(SHL4VERSIONMAP)
 # Its questionable if the following condition '.IF "$(COMID)"=="gcc3"' makes sense and what
 # happens if somebody will change it in the future
 .IF "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL4VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL4VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
 .ELIF "$(COMNAME)"=="sunpro5"
-    tr -d "\015" < $(SHL4VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL4VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
 .ELSE           # "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL4VERSIONMAP) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL4VERSIONMAP) > $@
 .ENDIF          # "$(COMID)"=="gcc3"
     @chmod a+w $@
 # Mac OS X post-processing generate an exported symbols list from the generated map file
 # for details on exported symbols list see man ld on Mac OS X
 .IF "$(OS)"=="MACOSX"
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
 .IF "$(SHL4OBJS)"!=""
     -echo $(foreach,i,$(SHL4OBJS:s/.obj/.o/) $i) | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 .IF "$(SHL4LIBS)"!=""
-    -$(TYPE) $(foreach,j,$(SHL4LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)-$(TYPE) $(foreach,j,$(SHL4LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
@@ -1831,7 +1883,7 @@ SHL4LINKRESO*=$(MISC)/$(SHL4TARGET)_res.o
 .IF "$(SHL4LIBS)"!=""
 $(MISC)/$(SHL4TARGET)_linkinc.ls .PHONY:
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL4LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL4LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL4LIBS)"!=""
 .ENDIF
 
@@ -1847,14 +1899,14 @@ SHL4LINKLIST=$(MISC)/$(SHL4TARGET)_link.lst
 SHL4LINKLISTPARAM=@$(SHL4LINKLIST)
 $(SHL4LINKLIST) : $(SHL4LIBS)
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL4LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL4LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL4LIBS)"!=""
 .ENDIF          # "$(COM)"!="GCC"
 .ENDIF
 .ENDIF			# "$(SHL4USE_EXPORTS)"=="name"
 
 $(MISC)/%linkinc.ls:
-    echo . > $@
+	@echo . > $@
 .ENDIF          # "$(linkinc)"!=""
 
 .IF "$(GUI)" == "OS2"
@@ -1881,8 +1933,10 @@ $(SHL4TARGETN) : \
                     $(SHL4DEPN) \
                     $(SHL4IMP_ORD) \
                     $(SHL4LINKLIST)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $(SHL4TARGETN)
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(SHL4DEFAULTRES)"!=""
     @@-$(RM) $(MISC)/$(SHL4DEFAULTRES:b).rc
@@ -1902,10 +1956,10 @@ $(SHL4TARGETN) : \
     @echo $(EMQ)#define INTERNAL_NAME $(SHL4TARGET:b) >> $(MISC)/$(SHL4DEFAULTRES:b).rc
     @echo $(EMQ)#include $(EMQ)"shlinfo.rc$(EMQ)" >> $(MISC)/$(SHL4DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
-    $(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL4DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL4DEFAULTRES:b).rc
 .ENDIF			# "$(SHL4DEFAULTRES)"!=""
 .IF "$(SHL4ALLRES)"!=""
-    $(TYPE) $(SHL4ALLRES) > $(SHL4LINKRES)
+	$(COMMAND_ECHO)$(TYPE) $(SHL4ALLRES) > $(SHL4LINKRES)
 .IF "$(COM)"=="GCC"
     windres $(SHL4LINKRES) $(SHL4LINKRESO)
 .ENDIF			# "$(COM)"=="GCC"
@@ -1952,15 +2006,15 @@ $(SHL4TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE			# "$(USE_DEFFILE)"!=""
-    $(SHL4LINKER) @$(mktmp	$(SHL4LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL4LINKER) @$(mktmp	$(SHL4LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL4BASEX)		\
         $(SHL4STACK) -out:$(SHL4TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -1976,16 +2030,16 @@ $(SHL4TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(USE_DEFFILE)"!=""
 .ELSE			# "$(SHL4USE_EXPORTS)"!="name"
-    $(SHL4LINKER) @$(mktmp	$(SHL4LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL4LINKER) @$(mktmp	$(SHL4LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL4BASEX)		\
         $(SHL4STACK) -out:$(SHL4TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -1999,18 +2053,18 @@ $(SHL4TARGETN) : \
     )
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(SHL4USE_EXPORTS)"!="name"
 .ELSE			# "$(linkinc)"==""
-        -$(RM) del $(MISC)/$(SHL4TARGET).lnk
-        -$(RM) $(MISC)/$(SHL4TARGET).lst
-        $(TYPE) $(mktmp \
+		$(COMMAND_ECHO)-$(RM) del $(MISC)/$(SHL4TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)/$(SHL4TARGET).lst
+		$(COMMAND_ECHO)$(TYPE) $(mktmp \
         $(SHL4LINKFLAGS) \
         $(LINKFLAGSSHL) $(SHL4BASEX) \
         $(SHL4STACK) $(MAPFILE) \
@@ -2022,17 +2076,17 @@ $(SHL4TARGETN) : \
         $(SHL4STDSHL) $(STDSHL4) \
         $(SHL4LINKRES) \
         ) >> $(MISC)/$(SHL4TARGET).lnk
-        $(TYPE) $(MISC)/$(SHL4TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL4TARGET).lnk
-        $(SHL4LINKER) @$(MISC)/$(SHL4TARGET).lnk
+		$(COMMAND_ECHO)$(TYPE) $(MISC)/$(SHL4TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL4TARGET).lnk
+		$(COMMAND_ECHO)$(SHL4LINKER) @$(MISC)/$(SHL4TARGET).lnk
         @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-        $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(linkinc)"==""
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)" == "WNT"
@@ -2048,11 +2102,13 @@ $(SHL4TARGETN) : \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_4.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_4.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_4.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_4.cmd
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         shl $(SHL4RPATH) $@
-    @echo "Making: $@.jnilib"
+	@echo "Making:   " $(@:f).jnilib
     @macosx-create-bundle $@
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL4NOCHECK)"==""
@@ -2065,21 +2121,29 @@ $(SHL4TARGETN) : \
     $(SHL4VERSIONOBJ) -o $@ \
     `cat /dev/null $(SHL4LIBS) | tr -s " " "\n" | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g` \
     $(SHL4STDLIBS) $(SHL4ARCHIVES) $(SHL4STDSHL) $(STDSHL4) $(LINKOUTPUT_FILTER) > $(MISC)/$(TARGET).$(@:b)_4.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_4.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_4.cmd
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL4NOCHECK)"==""
-    -$(RM) $(SHL4TARGETN:d)check_$(SHL4TARGETN:f)
-    $(RENAME) $(SHL4TARGETN) $(SHL4TARGETN:d)check_$(SHL4TARGETN:f)
-    $(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS4) $(SHL4TARGETN:d)check_$(SHL4TARGETN:f)
+	$(COMMAND_ECHO)-$(RM) $(SHL4TARGETN:d)check_$(SHL4TARGETN:f)
+	$(COMMAND_ECHO)$(RENAME) $(SHL4TARGETN) $(SHL4TARGETN:d)check_$(SHL4TARGETN:f)
+.IF "$(VERBOSE)"=="TRUE"
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS4) $(SHL4TARGETN:d)check_$(SHL4TARGETN:f)
+.ELSE
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS4) -- -s $(SHL4TARGETN:d)check_$(SHL4TARGETN:f)
+.ENDIF
 .ENDIF				# "$(SHL4NOCHECK)"!=""
 .ENDIF			# "$(UPDATER)"=="YES"
 .ENDIF			# "$(OS)"=="MACOSX"
 .IF "$(UNIXVERSIONNAMES)"!=""
-    $(RM) $(LB)/$(SHL4TARGETN:b)
-    cd $(LB) && ln -s $(SHL4TARGETN:f) $(SHL4TARGETN:b)
+	$(COMMAND_ECHO)$(RM) $(LB)/$(SHL4TARGETN:b)
+	$(COMMAND_ECHO)cd $(LB) && ln -s $(SHL4TARGETN:f) $(SHL4TARGETN:b)
 .ENDIF			# "$(UNIXVERSIONNAMES)"!=""
+.IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+.ENDIF
 .ENDIF			# "$(GUI)" == "UNX"
 
 .IF "$(GUI)" == "OS2"
@@ -2097,16 +2161,16 @@ $(SHL4TARGETN) : \
 #	@-+echo $(EMQ)RCDATA 1 { "Build string here" }$(EMQ) >> $(MISC)/$(SHL4DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
 # YD 04/07/06 seems null, confuses rc cli: -i $(SOLARTESDIR)
-    $(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL4DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL4DEFAULTRES:b).rc
 .ENDIF			# "$(SHL4DEFAULTRES)"!=""
 
 .IF "$(SHL4ALLRES)"!=""
-    +$(TYPE) $(SHL4ALLRES) > $(SHL4LINKRES)
+	$(COMMAND_ECHO)+$(TYPE) $(SHL4ALLRES) > $(SHL4LINKRES)
 .ENDIF			# "$(SHL4ALLRES)"!=""
 
 .IF "$(USE_DEFFILE)"!=""
 
-    $(SHL4LINKER) $(SHL4LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
+	$(COMMAND_ECHO)$(SHL4LINKER) $(SHL4LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
         $(SHL4DEF) \
         $(STDOBJ) \
         -L$(LB) \
@@ -2119,7 +2183,7 @@ $(SHL4TARGETN) : \
 
 .ELSE			# "$(USE_DEFFILE)"!=""
 
-    $(SHL4LINKER) -v 	$(SHL4LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL4LINKER) -v 	$(SHL4LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL4BASEX)		\
         $(SHL4STACK) -o $(SHL4TARGETN)	\
         $(SHL4DEF) \
@@ -2137,7 +2201,7 @@ $(SHL4TARGETN) : \
 .ENDIF			# "$(USE_DEFFILE)"!=""
 
 .IF "$(SHL4TARGET8)" != "$(SHL4TARGET)"
-    +$(COPY) $@ $(@:d)$(SHL4TARGET8).dll
+	$(COMMAND_ECHO)+$(COPY) $@ $(@:d)$(SHL4TARGET8).dll
 .ENDIF
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -2211,7 +2275,7 @@ SHL5VERSIONOBJDEP:=$(VERSIONOBJ:d){$(subst,$(DLLPOSTFIX),_dflt $(SHL5TARGET))}$(
 .ENDIF          # "$(GUI)" == "UNX"
 $(MISC)/$(SHL5VERSIONOBJ:b).c : $(SOLARENV)/src/version.c $(INCCOM)/$(SHL5VERSIONOBJ:b).h
 #    $(COPY) $(SOLARENV)/src/version.c $@
-    $(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL5VERSIONOBJ:b).h/ > $@
+	$(COMMAND_ECHO)$(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL5VERSIONOBJ:b).h/ > $@
 
 .INIT : $(SHL5VERSIONOBJDEP)
 .ENDIF			# "$(VERSIONOBJ)"!=""
@@ -2274,16 +2338,20 @@ $(USE_SHL5VERSIONMAP): \
 .ENDIF
 .ENDIF			# "$(SHL5OBJS)!"=""
     @$(TYPE) /dev/null $(SHL5LIBS:s/.lib/.dump/) >> $@.dump
-    $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL5INTERFACE) -f $(SHL5FILTERFILE) -m $@
+	$(COMMAND_ECHO) $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL5INTERFACE) -f $(SHL5FILTERFILE) -m $@
 
 .ELSE			# "$(SHL5FILTERFILE)"!=""
 USE_SHL5VERSIONMAP=$(MISC)/$(SHL5TARGET).vmap
 $(USE_SHL5VERSIONMAP) :
+.IF "$(VERBOSE)" == "TRUE"
     @echo -----------------------------
     @echo SHL5FILTERFILE not set!
     @echo -----------------------------
     @$(TOUCH) $@
     @echo dummy file to keep the dependencies for later use.
+.ELSE
+	@$(TOUCH) $@
+.ENDIF
 #	force_dmake_to_error
 .ENDIF			# "$(SHL5FILTERFILE)"!=""
 .ELSE			# "$(USE_SHL5VERSIONMAP)"!=""
@@ -2310,25 +2378,25 @@ $(USE_SHL5VERSIONMAP): $(SHL5VERSIONMAP)
 # Its questionable if the following condition '.IF "$(COMID)"=="gcc3"' makes sense and what
 # happens if somebody will change it in the future
 .IF "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL5VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL5VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
 .ELIF "$(COMNAME)"=="sunpro5"
-    tr -d "\015" < $(SHL5VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL5VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
 .ELSE           # "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL5VERSIONMAP) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL5VERSIONMAP) > $@
 .ENDIF          # "$(COMID)"=="gcc3"
     @chmod a+w $@
 # Mac OS X post-processing generate an exported symbols list from the generated map file
 # for details on exported symbols list see man ld on Mac OS X
 .IF "$(OS)"=="MACOSX"
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
 .IF "$(SHL5OBJS)"!=""
     -echo $(foreach,i,$(SHL5OBJS:s/.obj/.o/) $i) | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 .IF "$(SHL5LIBS)"!=""
-    -$(TYPE) $(foreach,j,$(SHL5LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)-$(TYPE) $(foreach,j,$(SHL5LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
@@ -2370,7 +2438,7 @@ SHL5LINKRESO*=$(MISC)/$(SHL5TARGET)_res.o
 .IF "$(SHL5LIBS)"!=""
 $(MISC)/$(SHL5TARGET)_linkinc.ls .PHONY:
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL5LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL5LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL5LIBS)"!=""
 .ENDIF
 
@@ -2386,14 +2454,14 @@ SHL5LINKLIST=$(MISC)/$(SHL5TARGET)_link.lst
 SHL5LINKLISTPARAM=@$(SHL5LINKLIST)
 $(SHL5LINKLIST) : $(SHL5LIBS)
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL5LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL5LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL5LIBS)"!=""
 .ENDIF          # "$(COM)"!="GCC"
 .ENDIF
 .ENDIF			# "$(SHL5USE_EXPORTS)"=="name"
 
 $(MISC)/%linkinc.ls:
-    echo . > $@
+	@echo . > $@
 .ENDIF          # "$(linkinc)"!=""
 
 .IF "$(GUI)" == "OS2"
@@ -2420,8 +2488,10 @@ $(SHL5TARGETN) : \
                     $(SHL5DEPN) \
                     $(SHL5IMP_ORD) \
                     $(SHL5LINKLIST)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $(SHL5TARGETN)
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(SHL5DEFAULTRES)"!=""
     @@-$(RM) $(MISC)/$(SHL5DEFAULTRES:b).rc
@@ -2441,10 +2511,10 @@ $(SHL5TARGETN) : \
     @echo $(EMQ)#define INTERNAL_NAME $(SHL5TARGET:b) >> $(MISC)/$(SHL5DEFAULTRES:b).rc
     @echo $(EMQ)#include $(EMQ)"shlinfo.rc$(EMQ)" >> $(MISC)/$(SHL5DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
-    $(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL5DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL5DEFAULTRES:b).rc
 .ENDIF			# "$(SHL5DEFAULTRES)"!=""
 .IF "$(SHL5ALLRES)"!=""
-    $(TYPE) $(SHL5ALLRES) > $(SHL5LINKRES)
+	$(COMMAND_ECHO)$(TYPE) $(SHL5ALLRES) > $(SHL5LINKRES)
 .IF "$(COM)"=="GCC"
     windres $(SHL5LINKRES) $(SHL5LINKRESO)
 .ENDIF			# "$(COM)"=="GCC"
@@ -2491,15 +2561,15 @@ $(SHL5TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE			# "$(USE_DEFFILE)"!=""
-    $(SHL5LINKER) @$(mktmp	$(SHL5LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL5LINKER) @$(mktmp	$(SHL5LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL5BASEX)		\
         $(SHL5STACK) -out:$(SHL5TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -2515,16 +2585,16 @@ $(SHL5TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(USE_DEFFILE)"!=""
 .ELSE			# "$(SHL5USE_EXPORTS)"!="name"
-    $(SHL5LINKER) @$(mktmp	$(SHL5LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL5LINKER) @$(mktmp	$(SHL5LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL5BASEX)		\
         $(SHL5STACK) -out:$(SHL5TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -2538,18 +2608,18 @@ $(SHL5TARGETN) : \
     )
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(SHL5USE_EXPORTS)"!="name"
 .ELSE			# "$(linkinc)"==""
-        -$(RM) del $(MISC)/$(SHL5TARGET).lnk
-        -$(RM) $(MISC)/$(SHL5TARGET).lst
-        $(TYPE) $(mktmp \
+		$(COMMAND_ECHO)-$(RM) del $(MISC)/$(SHL5TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)/$(SHL5TARGET).lst
+		$(COMMAND_ECHO)$(TYPE) $(mktmp \
         $(SHL5LINKFLAGS) \
         $(LINKFLAGSSHL) $(SHL5BASEX) \
         $(SHL5STACK) $(MAPFILE) \
@@ -2561,17 +2631,17 @@ $(SHL5TARGETN) : \
         $(SHL5STDSHL) $(STDSHL5) \
         $(SHL5LINKRES) \
         ) >> $(MISC)/$(SHL5TARGET).lnk
-        $(TYPE) $(MISC)/$(SHL5TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL5TARGET).lnk
-        $(SHL5LINKER) @$(MISC)/$(SHL5TARGET).lnk
+		$(COMMAND_ECHO)$(TYPE) $(MISC)/$(SHL5TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL5TARGET).lnk
+		$(COMMAND_ECHO)$(SHL5LINKER) @$(MISC)/$(SHL5TARGET).lnk
         @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-        $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(linkinc)"==""
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)" == "WNT"
@@ -2587,11 +2657,13 @@ $(SHL5TARGETN) : \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_5.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_5.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_5.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_5.cmd
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         shl $(SHL5RPATH) $@
-    @echo "Making: $@.jnilib"
+	@echo "Making:   " $(@:f).jnilib
     @macosx-create-bundle $@
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL5NOCHECK)"==""
@@ -2604,21 +2676,29 @@ $(SHL5TARGETN) : \
     $(SHL5VERSIONOBJ) -o $@ \
     `cat /dev/null $(SHL5LIBS) | tr -s " " "\n" | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g` \
     $(SHL5STDLIBS) $(SHL5ARCHIVES) $(SHL5STDSHL) $(STDSHL5) $(LINKOUTPUT_FILTER) > $(MISC)/$(TARGET).$(@:b)_5.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_5.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_5.cmd
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL5NOCHECK)"==""
-    -$(RM) $(SHL5TARGETN:d)check_$(SHL5TARGETN:f)
-    $(RENAME) $(SHL5TARGETN) $(SHL5TARGETN:d)check_$(SHL5TARGETN:f)
-    $(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS5) $(SHL5TARGETN:d)check_$(SHL5TARGETN:f)
+	$(COMMAND_ECHO)-$(RM) $(SHL5TARGETN:d)check_$(SHL5TARGETN:f)
+	$(COMMAND_ECHO)$(RENAME) $(SHL5TARGETN) $(SHL5TARGETN:d)check_$(SHL5TARGETN:f)
+.IF "$(VERBOSE)"=="TRUE"
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS5) $(SHL5TARGETN:d)check_$(SHL5TARGETN:f)
+.ELSE
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS5) -- -s $(SHL5TARGETN:d)check_$(SHL5TARGETN:f)
+.ENDIF
 .ENDIF				# "$(SHL5NOCHECK)"!=""
 .ENDIF			# "$(UPDATER)"=="YES"
 .ENDIF			# "$(OS)"=="MACOSX"
 .IF "$(UNIXVERSIONNAMES)"!=""
-    $(RM) $(LB)/$(SHL5TARGETN:b)
-    cd $(LB) && ln -s $(SHL5TARGETN:f) $(SHL5TARGETN:b)
+	$(COMMAND_ECHO)$(RM) $(LB)/$(SHL5TARGETN:b)
+	$(COMMAND_ECHO)cd $(LB) && ln -s $(SHL5TARGETN:f) $(SHL5TARGETN:b)
 .ENDIF			# "$(UNIXVERSIONNAMES)"!=""
+.IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+.ENDIF
 .ENDIF			# "$(GUI)" == "UNX"
 
 .IF "$(GUI)" == "OS2"
@@ -2636,16 +2716,16 @@ $(SHL5TARGETN) : \
 #	@-+echo $(EMQ)RCDATA 1 { "Build string here" }$(EMQ) >> $(MISC)/$(SHL5DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
 # YD 04/07/06 seems null, confuses rc cli: -i $(SOLARTESDIR)
-    $(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL5DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL5DEFAULTRES:b).rc
 .ENDIF			# "$(SHL5DEFAULTRES)"!=""
 
 .IF "$(SHL5ALLRES)"!=""
-    +$(TYPE) $(SHL5ALLRES) > $(SHL5LINKRES)
+	$(COMMAND_ECHO)+$(TYPE) $(SHL5ALLRES) > $(SHL5LINKRES)
 .ENDIF			# "$(SHL5ALLRES)"!=""
 
 .IF "$(USE_DEFFILE)"!=""
 
-    $(SHL5LINKER) $(SHL5LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
+	$(COMMAND_ECHO)$(SHL5LINKER) $(SHL5LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
         $(SHL5DEF) \
         $(STDOBJ) \
         -L$(LB) \
@@ -2658,7 +2738,7 @@ $(SHL5TARGETN) : \
 
 .ELSE			# "$(USE_DEFFILE)"!=""
 
-    $(SHL5LINKER) -v 	$(SHL5LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL5LINKER) -v 	$(SHL5LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL5BASEX)		\
         $(SHL5STACK) -o $(SHL5TARGETN)	\
         $(SHL5DEF) \
@@ -2676,7 +2756,7 @@ $(SHL5TARGETN) : \
 .ENDIF			# "$(USE_DEFFILE)"!=""
 
 .IF "$(SHL5TARGET8)" != "$(SHL5TARGET)"
-    +$(COPY) $@ $(@:d)$(SHL5TARGET8).dll
+	$(COMMAND_ECHO)+$(COPY) $@ $(@:d)$(SHL5TARGET8).dll
 .ENDIF
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -2750,7 +2830,7 @@ SHL6VERSIONOBJDEP:=$(VERSIONOBJ:d){$(subst,$(DLLPOSTFIX),_dflt $(SHL6TARGET))}$(
 .ENDIF          # "$(GUI)" == "UNX"
 $(MISC)/$(SHL6VERSIONOBJ:b).c : $(SOLARENV)/src/version.c $(INCCOM)/$(SHL6VERSIONOBJ:b).h
 #    $(COPY) $(SOLARENV)/src/version.c $@
-    $(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL6VERSIONOBJ:b).h/ > $@
+	$(COMMAND_ECHO)$(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL6VERSIONOBJ:b).h/ > $@
 
 .INIT : $(SHL6VERSIONOBJDEP)
 .ENDIF			# "$(VERSIONOBJ)"!=""
@@ -2813,16 +2893,20 @@ $(USE_SHL6VERSIONMAP): \
 .ENDIF
 .ENDIF			# "$(SHL6OBJS)!"=""
     @$(TYPE) /dev/null $(SHL6LIBS:s/.lib/.dump/) >> $@.dump
-    $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL6INTERFACE) -f $(SHL6FILTERFILE) -m $@
+	$(COMMAND_ECHO) $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL6INTERFACE) -f $(SHL6FILTERFILE) -m $@
 
 .ELSE			# "$(SHL6FILTERFILE)"!=""
 USE_SHL6VERSIONMAP=$(MISC)/$(SHL6TARGET).vmap
 $(USE_SHL6VERSIONMAP) :
+.IF "$(VERBOSE)" == "TRUE"
     @echo -----------------------------
     @echo SHL6FILTERFILE not set!
     @echo -----------------------------
     @$(TOUCH) $@
     @echo dummy file to keep the dependencies for later use.
+.ELSE
+	@$(TOUCH) $@
+.ENDIF
 #	force_dmake_to_error
 .ENDIF			# "$(SHL6FILTERFILE)"!=""
 .ELSE			# "$(USE_SHL6VERSIONMAP)"!=""
@@ -2849,25 +2933,25 @@ $(USE_SHL6VERSIONMAP): $(SHL6VERSIONMAP)
 # Its questionable if the following condition '.IF "$(COMID)"=="gcc3"' makes sense and what
 # happens if somebody will change it in the future
 .IF "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL6VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL6VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
 .ELIF "$(COMNAME)"=="sunpro5"
-    tr -d "\015" < $(SHL6VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL6VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
 .ELSE           # "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL6VERSIONMAP) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL6VERSIONMAP) > $@
 .ENDIF          # "$(COMID)"=="gcc3"
     @chmod a+w $@
 # Mac OS X post-processing generate an exported symbols list from the generated map file
 # for details on exported symbols list see man ld on Mac OS X
 .IF "$(OS)"=="MACOSX"
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
 .IF "$(SHL6OBJS)"!=""
     -echo $(foreach,i,$(SHL6OBJS:s/.obj/.o/) $i) | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 .IF "$(SHL6LIBS)"!=""
-    -$(TYPE) $(foreach,j,$(SHL6LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)-$(TYPE) $(foreach,j,$(SHL6LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
@@ -2909,7 +2993,7 @@ SHL6LINKRESO*=$(MISC)/$(SHL6TARGET)_res.o
 .IF "$(SHL6LIBS)"!=""
 $(MISC)/$(SHL6TARGET)_linkinc.ls .PHONY:
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL6LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL6LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL6LIBS)"!=""
 .ENDIF
 
@@ -2925,14 +3009,14 @@ SHL6LINKLIST=$(MISC)/$(SHL6TARGET)_link.lst
 SHL6LINKLISTPARAM=@$(SHL6LINKLIST)
 $(SHL6LINKLIST) : $(SHL6LIBS)
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL6LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL6LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL6LIBS)"!=""
 .ENDIF          # "$(COM)"!="GCC"
 .ENDIF
 .ENDIF			# "$(SHL6USE_EXPORTS)"=="name"
 
 $(MISC)/%linkinc.ls:
-    echo . > $@
+	@echo . > $@
 .ENDIF          # "$(linkinc)"!=""
 
 .IF "$(GUI)" == "OS2"
@@ -2959,8 +3043,10 @@ $(SHL6TARGETN) : \
                     $(SHL6DEPN) \
                     $(SHL6IMP_ORD) \
                     $(SHL6LINKLIST)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $(SHL6TARGETN)
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(SHL6DEFAULTRES)"!=""
     @@-$(RM) $(MISC)/$(SHL6DEFAULTRES:b).rc
@@ -2980,10 +3066,10 @@ $(SHL6TARGETN) : \
     @echo $(EMQ)#define INTERNAL_NAME $(SHL6TARGET:b) >> $(MISC)/$(SHL6DEFAULTRES:b).rc
     @echo $(EMQ)#include $(EMQ)"shlinfo.rc$(EMQ)" >> $(MISC)/$(SHL6DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
-    $(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL6DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL6DEFAULTRES:b).rc
 .ENDIF			# "$(SHL6DEFAULTRES)"!=""
 .IF "$(SHL6ALLRES)"!=""
-    $(TYPE) $(SHL6ALLRES) > $(SHL6LINKRES)
+	$(COMMAND_ECHO)$(TYPE) $(SHL6ALLRES) > $(SHL6LINKRES)
 .IF "$(COM)"=="GCC"
     windres $(SHL6LINKRES) $(SHL6LINKRESO)
 .ENDIF			# "$(COM)"=="GCC"
@@ -3030,15 +3116,15 @@ $(SHL6TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE			# "$(USE_DEFFILE)"!=""
-    $(SHL6LINKER) @$(mktmp	$(SHL6LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL6LINKER) @$(mktmp	$(SHL6LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL6BASEX)		\
         $(SHL6STACK) -out:$(SHL6TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -3054,16 +3140,16 @@ $(SHL6TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(USE_DEFFILE)"!=""
 .ELSE			# "$(SHL6USE_EXPORTS)"!="name"
-    $(SHL6LINKER) @$(mktmp	$(SHL6LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL6LINKER) @$(mktmp	$(SHL6LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL6BASEX)		\
         $(SHL6STACK) -out:$(SHL6TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -3077,18 +3163,18 @@ $(SHL6TARGETN) : \
     )
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(SHL6USE_EXPORTS)"!="name"
 .ELSE			# "$(linkinc)"==""
-        -$(RM) del $(MISC)/$(SHL6TARGET).lnk
-        -$(RM) $(MISC)/$(SHL6TARGET).lst
-        $(TYPE) $(mktmp \
+		$(COMMAND_ECHO)-$(RM) del $(MISC)/$(SHL6TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)/$(SHL6TARGET).lst
+		$(COMMAND_ECHO)$(TYPE) $(mktmp \
         $(SHL6LINKFLAGS) \
         $(LINKFLAGSSHL) $(SHL6BASEX) \
         $(SHL6STACK) $(MAPFILE) \
@@ -3100,17 +3186,17 @@ $(SHL6TARGETN) : \
         $(SHL6STDSHL) $(STDSHL6) \
         $(SHL6LINKRES) \
         ) >> $(MISC)/$(SHL6TARGET).lnk
-        $(TYPE) $(MISC)/$(SHL6TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL6TARGET).lnk
-        $(SHL6LINKER) @$(MISC)/$(SHL6TARGET).lnk
+		$(COMMAND_ECHO)$(TYPE) $(MISC)/$(SHL6TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL6TARGET).lnk
+		$(COMMAND_ECHO)$(SHL6LINKER) @$(MISC)/$(SHL6TARGET).lnk
         @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-        $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(linkinc)"==""
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)" == "WNT"
@@ -3126,11 +3212,13 @@ $(SHL6TARGETN) : \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_6.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_6.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_6.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_6.cmd
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         shl $(SHL6RPATH) $@
-    @echo "Making: $@.jnilib"
+	@echo "Making:   " $(@:f).jnilib
     @macosx-create-bundle $@
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL6NOCHECK)"==""
@@ -3143,21 +3231,29 @@ $(SHL6TARGETN) : \
     $(SHL6VERSIONOBJ) -o $@ \
     `cat /dev/null $(SHL6LIBS) | tr -s " " "\n" | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g` \
     $(SHL6STDLIBS) $(SHL6ARCHIVES) $(SHL6STDSHL) $(STDSHL6) $(LINKOUTPUT_FILTER) > $(MISC)/$(TARGET).$(@:b)_6.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_6.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_6.cmd
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL6NOCHECK)"==""
-    -$(RM) $(SHL6TARGETN:d)check_$(SHL6TARGETN:f)
-    $(RENAME) $(SHL6TARGETN) $(SHL6TARGETN:d)check_$(SHL6TARGETN:f)
-    $(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS6) $(SHL6TARGETN:d)check_$(SHL6TARGETN:f)
+	$(COMMAND_ECHO)-$(RM) $(SHL6TARGETN:d)check_$(SHL6TARGETN:f)
+	$(COMMAND_ECHO)$(RENAME) $(SHL6TARGETN) $(SHL6TARGETN:d)check_$(SHL6TARGETN:f)
+.IF "$(VERBOSE)"=="TRUE"
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS6) $(SHL6TARGETN:d)check_$(SHL6TARGETN:f)
+.ELSE
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS6) -- -s $(SHL6TARGETN:d)check_$(SHL6TARGETN:f)
+.ENDIF
 .ENDIF				# "$(SHL6NOCHECK)"!=""
 .ENDIF			# "$(UPDATER)"=="YES"
 .ENDIF			# "$(OS)"=="MACOSX"
 .IF "$(UNIXVERSIONNAMES)"!=""
-    $(RM) $(LB)/$(SHL6TARGETN:b)
-    cd $(LB) && ln -s $(SHL6TARGETN:f) $(SHL6TARGETN:b)
+	$(COMMAND_ECHO)$(RM) $(LB)/$(SHL6TARGETN:b)
+	$(COMMAND_ECHO)cd $(LB) && ln -s $(SHL6TARGETN:f) $(SHL6TARGETN:b)
 .ENDIF			# "$(UNIXVERSIONNAMES)"!=""
+.IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+.ENDIF
 .ENDIF			# "$(GUI)" == "UNX"
 
 .IF "$(GUI)" == "OS2"
@@ -3175,16 +3271,16 @@ $(SHL6TARGETN) : \
 #	@-+echo $(EMQ)RCDATA 1 { "Build string here" }$(EMQ) >> $(MISC)/$(SHL6DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
 # YD 04/07/06 seems null, confuses rc cli: -i $(SOLARTESDIR)
-    $(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL6DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL6DEFAULTRES:b).rc
 .ENDIF			# "$(SHL6DEFAULTRES)"!=""
 
 .IF "$(SHL6ALLRES)"!=""
-    +$(TYPE) $(SHL6ALLRES) > $(SHL6LINKRES)
+	$(COMMAND_ECHO)+$(TYPE) $(SHL6ALLRES) > $(SHL6LINKRES)
 .ENDIF			# "$(SHL6ALLRES)"!=""
 
 .IF "$(USE_DEFFILE)"!=""
 
-    $(SHL6LINKER) $(SHL6LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
+	$(COMMAND_ECHO)$(SHL6LINKER) $(SHL6LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
         $(SHL6DEF) \
         $(STDOBJ) \
         -L$(LB) \
@@ -3197,7 +3293,7 @@ $(SHL6TARGETN) : \
 
 .ELSE			# "$(USE_DEFFILE)"!=""
 
-    $(SHL6LINKER) -v 	$(SHL6LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL6LINKER) -v 	$(SHL6LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL6BASEX)		\
         $(SHL6STACK) -o $(SHL6TARGETN)	\
         $(SHL6DEF) \
@@ -3215,7 +3311,7 @@ $(SHL6TARGETN) : \
 .ENDIF			# "$(USE_DEFFILE)"!=""
 
 .IF "$(SHL6TARGET8)" != "$(SHL6TARGET)"
-    +$(COPY) $@ $(@:d)$(SHL6TARGET8).dll
+	$(COMMAND_ECHO)+$(COPY) $@ $(@:d)$(SHL6TARGET8).dll
 .ENDIF
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -3289,7 +3385,7 @@ SHL7VERSIONOBJDEP:=$(VERSIONOBJ:d){$(subst,$(DLLPOSTFIX),_dflt $(SHL7TARGET))}$(
 .ENDIF          # "$(GUI)" == "UNX"
 $(MISC)/$(SHL7VERSIONOBJ:b).c : $(SOLARENV)/src/version.c $(INCCOM)/$(SHL7VERSIONOBJ:b).h
 #    $(COPY) $(SOLARENV)/src/version.c $@
-    $(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL7VERSIONOBJ:b).h/ > $@
+	$(COMMAND_ECHO)$(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL7VERSIONOBJ:b).h/ > $@
 
 .INIT : $(SHL7VERSIONOBJDEP)
 .ENDIF			# "$(VERSIONOBJ)"!=""
@@ -3352,16 +3448,20 @@ $(USE_SHL7VERSIONMAP): \
 .ENDIF
 .ENDIF			# "$(SHL7OBJS)!"=""
     @$(TYPE) /dev/null $(SHL7LIBS:s/.lib/.dump/) >> $@.dump
-    $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL7INTERFACE) -f $(SHL7FILTERFILE) -m $@
+	$(COMMAND_ECHO) $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL7INTERFACE) -f $(SHL7FILTERFILE) -m $@
 
 .ELSE			# "$(SHL7FILTERFILE)"!=""
 USE_SHL7VERSIONMAP=$(MISC)/$(SHL7TARGET).vmap
 $(USE_SHL7VERSIONMAP) :
+.IF "$(VERBOSE)" == "TRUE"
     @echo -----------------------------
     @echo SHL7FILTERFILE not set!
     @echo -----------------------------
     @$(TOUCH) $@
     @echo dummy file to keep the dependencies for later use.
+.ELSE
+	@$(TOUCH) $@
+.ENDIF
 #	force_dmake_to_error
 .ENDIF			# "$(SHL7FILTERFILE)"!=""
 .ELSE			# "$(USE_SHL7VERSIONMAP)"!=""
@@ -3388,25 +3488,25 @@ $(USE_SHL7VERSIONMAP): $(SHL7VERSIONMAP)
 # Its questionable if the following condition '.IF "$(COMID)"=="gcc3"' makes sense and what
 # happens if somebody will change it in the future
 .IF "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL7VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL7VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
 .ELIF "$(COMNAME)"=="sunpro5"
-    tr -d "\015" < $(SHL7VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL7VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
 .ELSE           # "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL7VERSIONMAP) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL7VERSIONMAP) > $@
 .ENDIF          # "$(COMID)"=="gcc3"
     @chmod a+w $@
 # Mac OS X post-processing generate an exported symbols list from the generated map file
 # for details on exported symbols list see man ld on Mac OS X
 .IF "$(OS)"=="MACOSX"
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
 .IF "$(SHL7OBJS)"!=""
     -echo $(foreach,i,$(SHL7OBJS:s/.obj/.o/) $i) | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 .IF "$(SHL7LIBS)"!=""
-    -$(TYPE) $(foreach,j,$(SHL7LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)-$(TYPE) $(foreach,j,$(SHL7LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
@@ -3448,7 +3548,7 @@ SHL7LINKRESO*=$(MISC)/$(SHL7TARGET)_res.o
 .IF "$(SHL7LIBS)"!=""
 $(MISC)/$(SHL7TARGET)_linkinc.ls .PHONY:
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL7LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL7LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL7LIBS)"!=""
 .ENDIF
 
@@ -3464,14 +3564,14 @@ SHL7LINKLIST=$(MISC)/$(SHL7TARGET)_link.lst
 SHL7LINKLISTPARAM=@$(SHL7LINKLIST)
 $(SHL7LINKLIST) : $(SHL7LIBS)
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL7LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL7LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL7LIBS)"!=""
 .ENDIF          # "$(COM)"!="GCC"
 .ENDIF
 .ENDIF			# "$(SHL7USE_EXPORTS)"=="name"
 
 $(MISC)/%linkinc.ls:
-    echo . > $@
+	@echo . > $@
 .ENDIF          # "$(linkinc)"!=""
 
 .IF "$(GUI)" == "OS2"
@@ -3498,8 +3598,10 @@ $(SHL7TARGETN) : \
                     $(SHL7DEPN) \
                     $(SHL7IMP_ORD) \
                     $(SHL7LINKLIST)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $(SHL7TARGETN)
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(SHL7DEFAULTRES)"!=""
     @@-$(RM) $(MISC)/$(SHL7DEFAULTRES:b).rc
@@ -3519,10 +3621,10 @@ $(SHL7TARGETN) : \
     @echo $(EMQ)#define INTERNAL_NAME $(SHL7TARGET:b) >> $(MISC)/$(SHL7DEFAULTRES:b).rc
     @echo $(EMQ)#include $(EMQ)"shlinfo.rc$(EMQ)" >> $(MISC)/$(SHL7DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
-    $(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL7DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL7DEFAULTRES:b).rc
 .ENDIF			# "$(SHL7DEFAULTRES)"!=""
 .IF "$(SHL7ALLRES)"!=""
-    $(TYPE) $(SHL7ALLRES) > $(SHL7LINKRES)
+	$(COMMAND_ECHO)$(TYPE) $(SHL7ALLRES) > $(SHL7LINKRES)
 .IF "$(COM)"=="GCC"
     windres $(SHL7LINKRES) $(SHL7LINKRESO)
 .ENDIF			# "$(COM)"=="GCC"
@@ -3569,15 +3671,15 @@ $(SHL7TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE			# "$(USE_DEFFILE)"!=""
-    $(SHL7LINKER) @$(mktmp	$(SHL7LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL7LINKER) @$(mktmp	$(SHL7LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL7BASEX)		\
         $(SHL7STACK) -out:$(SHL7TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -3593,16 +3695,16 @@ $(SHL7TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(USE_DEFFILE)"!=""
 .ELSE			# "$(SHL7USE_EXPORTS)"!="name"
-    $(SHL7LINKER) @$(mktmp	$(SHL7LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL7LINKER) @$(mktmp	$(SHL7LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL7BASEX)		\
         $(SHL7STACK) -out:$(SHL7TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -3616,18 +3718,18 @@ $(SHL7TARGETN) : \
     )
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(SHL7USE_EXPORTS)"!="name"
 .ELSE			# "$(linkinc)"==""
-        -$(RM) del $(MISC)/$(SHL7TARGET).lnk
-        -$(RM) $(MISC)/$(SHL7TARGET).lst
-        $(TYPE) $(mktmp \
+		$(COMMAND_ECHO)-$(RM) del $(MISC)/$(SHL7TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)/$(SHL7TARGET).lst
+		$(COMMAND_ECHO)$(TYPE) $(mktmp \
         $(SHL7LINKFLAGS) \
         $(LINKFLAGSSHL) $(SHL7BASEX) \
         $(SHL7STACK) $(MAPFILE) \
@@ -3639,17 +3741,17 @@ $(SHL7TARGETN) : \
         $(SHL7STDSHL) $(STDSHL7) \
         $(SHL7LINKRES) \
         ) >> $(MISC)/$(SHL7TARGET).lnk
-        $(TYPE) $(MISC)/$(SHL7TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL7TARGET).lnk
-        $(SHL7LINKER) @$(MISC)/$(SHL7TARGET).lnk
+		$(COMMAND_ECHO)$(TYPE) $(MISC)/$(SHL7TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL7TARGET).lnk
+		$(COMMAND_ECHO)$(SHL7LINKER) @$(MISC)/$(SHL7TARGET).lnk
         @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-        $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(linkinc)"==""
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)" == "WNT"
@@ -3665,11 +3767,13 @@ $(SHL7TARGETN) : \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_7.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_7.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_7.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_7.cmd
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         shl $(SHL7RPATH) $@
-    @echo "Making: $@.jnilib"
+	@echo "Making:   " $(@:f).jnilib
     @macosx-create-bundle $@
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL7NOCHECK)"==""
@@ -3682,21 +3786,29 @@ $(SHL7TARGETN) : \
     $(SHL7VERSIONOBJ) -o $@ \
     `cat /dev/null $(SHL7LIBS) | tr -s " " "\n" | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g` \
     $(SHL7STDLIBS) $(SHL7ARCHIVES) $(SHL7STDSHL) $(STDSHL7) $(LINKOUTPUT_FILTER) > $(MISC)/$(TARGET).$(@:b)_7.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_7.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_7.cmd
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL7NOCHECK)"==""
-    -$(RM) $(SHL7TARGETN:d)check_$(SHL7TARGETN:f)
-    $(RENAME) $(SHL7TARGETN) $(SHL7TARGETN:d)check_$(SHL7TARGETN:f)
-    $(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS7) $(SHL7TARGETN:d)check_$(SHL7TARGETN:f)
+	$(COMMAND_ECHO)-$(RM) $(SHL7TARGETN:d)check_$(SHL7TARGETN:f)
+	$(COMMAND_ECHO)$(RENAME) $(SHL7TARGETN) $(SHL7TARGETN:d)check_$(SHL7TARGETN:f)
+.IF "$(VERBOSE)"=="TRUE"
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS7) $(SHL7TARGETN:d)check_$(SHL7TARGETN:f)
+.ELSE
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS7) -- -s $(SHL7TARGETN:d)check_$(SHL7TARGETN:f)
+.ENDIF
 .ENDIF				# "$(SHL7NOCHECK)"!=""
 .ENDIF			# "$(UPDATER)"=="YES"
 .ENDIF			# "$(OS)"=="MACOSX"
 .IF "$(UNIXVERSIONNAMES)"!=""
-    $(RM) $(LB)/$(SHL7TARGETN:b)
-    cd $(LB) && ln -s $(SHL7TARGETN:f) $(SHL7TARGETN:b)
+	$(COMMAND_ECHO)$(RM) $(LB)/$(SHL7TARGETN:b)
+	$(COMMAND_ECHO)cd $(LB) && ln -s $(SHL7TARGETN:f) $(SHL7TARGETN:b)
 .ENDIF			# "$(UNIXVERSIONNAMES)"!=""
+.IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+.ENDIF
 .ENDIF			# "$(GUI)" == "UNX"
 
 .IF "$(GUI)" == "OS2"
@@ -3714,16 +3826,16 @@ $(SHL7TARGETN) : \
 #	@-+echo $(EMQ)RCDATA 1 { "Build string here" }$(EMQ) >> $(MISC)/$(SHL7DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
 # YD 04/07/06 seems null, confuses rc cli: -i $(SOLARTESDIR)
-    $(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL7DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL7DEFAULTRES:b).rc
 .ENDIF			# "$(SHL7DEFAULTRES)"!=""
 
 .IF "$(SHL7ALLRES)"!=""
-    +$(TYPE) $(SHL7ALLRES) > $(SHL7LINKRES)
+	$(COMMAND_ECHO)+$(TYPE) $(SHL7ALLRES) > $(SHL7LINKRES)
 .ENDIF			# "$(SHL7ALLRES)"!=""
 
 .IF "$(USE_DEFFILE)"!=""
 
-    $(SHL7LINKER) $(SHL7LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
+	$(COMMAND_ECHO)$(SHL7LINKER) $(SHL7LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
         $(SHL7DEF) \
         $(STDOBJ) \
         -L$(LB) \
@@ -3736,7 +3848,7 @@ $(SHL7TARGETN) : \
 
 .ELSE			# "$(USE_DEFFILE)"!=""
 
-    $(SHL7LINKER) -v 	$(SHL7LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL7LINKER) -v 	$(SHL7LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL7BASEX)		\
         $(SHL7STACK) -o $(SHL7TARGETN)	\
         $(SHL7DEF) \
@@ -3754,7 +3866,7 @@ $(SHL7TARGETN) : \
 .ENDIF			# "$(USE_DEFFILE)"!=""
 
 .IF "$(SHL7TARGET8)" != "$(SHL7TARGET)"
-    +$(COPY) $@ $(@:d)$(SHL7TARGET8).dll
+	$(COMMAND_ECHO)+$(COPY) $@ $(@:d)$(SHL7TARGET8).dll
 .ENDIF
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -3828,7 +3940,7 @@ SHL8VERSIONOBJDEP:=$(VERSIONOBJ:d){$(subst,$(DLLPOSTFIX),_dflt $(SHL8TARGET))}$(
 .ENDIF          # "$(GUI)" == "UNX"
 $(MISC)/$(SHL8VERSIONOBJ:b).c : $(SOLARENV)/src/version.c $(INCCOM)/$(SHL8VERSIONOBJ:b).h
 #    $(COPY) $(SOLARENV)/src/version.c $@
-    $(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL8VERSIONOBJ:b).h/ > $@
+	$(COMMAND_ECHO)$(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL8VERSIONOBJ:b).h/ > $@
 
 .INIT : $(SHL8VERSIONOBJDEP)
 .ENDIF			# "$(VERSIONOBJ)"!=""
@@ -3891,16 +4003,20 @@ $(USE_SHL8VERSIONMAP): \
 .ENDIF
 .ENDIF			# "$(SHL8OBJS)!"=""
     @$(TYPE) /dev/null $(SHL8LIBS:s/.lib/.dump/) >> $@.dump
-    $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL8INTERFACE) -f $(SHL8FILTERFILE) -m $@
+	$(COMMAND_ECHO) $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL8INTERFACE) -f $(SHL8FILTERFILE) -m $@
 
 .ELSE			# "$(SHL8FILTERFILE)"!=""
 USE_SHL8VERSIONMAP=$(MISC)/$(SHL8TARGET).vmap
 $(USE_SHL8VERSIONMAP) :
+.IF "$(VERBOSE)" == "TRUE"
     @echo -----------------------------
     @echo SHL8FILTERFILE not set!
     @echo -----------------------------
     @$(TOUCH) $@
     @echo dummy file to keep the dependencies for later use.
+.ELSE
+	@$(TOUCH) $@
+.ENDIF
 #	force_dmake_to_error
 .ENDIF			# "$(SHL8FILTERFILE)"!=""
 .ELSE			# "$(USE_SHL8VERSIONMAP)"!=""
@@ -3927,25 +4043,25 @@ $(USE_SHL8VERSIONMAP): $(SHL8VERSIONMAP)
 # Its questionable if the following condition '.IF "$(COMID)"=="gcc3"' makes sense and what
 # happens if somebody will change it in the future
 .IF "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL8VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL8VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
 .ELIF "$(COMNAME)"=="sunpro5"
-    tr -d "\015" < $(SHL8VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL8VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
 .ELSE           # "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL8VERSIONMAP) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL8VERSIONMAP) > $@
 .ENDIF          # "$(COMID)"=="gcc3"
     @chmod a+w $@
 # Mac OS X post-processing generate an exported symbols list from the generated map file
 # for details on exported symbols list see man ld on Mac OS X
 .IF "$(OS)"=="MACOSX"
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
 .IF "$(SHL8OBJS)"!=""
     -echo $(foreach,i,$(SHL8OBJS:s/.obj/.o/) $i) | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 .IF "$(SHL8LIBS)"!=""
-    -$(TYPE) $(foreach,j,$(SHL8LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)-$(TYPE) $(foreach,j,$(SHL8LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
@@ -3987,7 +4103,7 @@ SHL8LINKRESO*=$(MISC)/$(SHL8TARGET)_res.o
 .IF "$(SHL8LIBS)"!=""
 $(MISC)/$(SHL8TARGET)_linkinc.ls .PHONY:
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL8LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL8LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL8LIBS)"!=""
 .ENDIF
 
@@ -4003,14 +4119,14 @@ SHL8LINKLIST=$(MISC)/$(SHL8TARGET)_link.lst
 SHL8LINKLISTPARAM=@$(SHL8LINKLIST)
 $(SHL8LINKLIST) : $(SHL8LIBS)
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL8LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL8LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL8LIBS)"!=""
 .ENDIF          # "$(COM)"!="GCC"
 .ENDIF
 .ENDIF			# "$(SHL8USE_EXPORTS)"=="name"
 
 $(MISC)/%linkinc.ls:
-    echo . > $@
+	@echo . > $@
 .ENDIF          # "$(linkinc)"!=""
 
 .IF "$(GUI)" == "OS2"
@@ -4037,8 +4153,10 @@ $(SHL8TARGETN) : \
                     $(SHL8DEPN) \
                     $(SHL8IMP_ORD) \
                     $(SHL8LINKLIST)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $(SHL8TARGETN)
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(SHL8DEFAULTRES)"!=""
     @@-$(RM) $(MISC)/$(SHL8DEFAULTRES:b).rc
@@ -4058,10 +4176,10 @@ $(SHL8TARGETN) : \
     @echo $(EMQ)#define INTERNAL_NAME $(SHL8TARGET:b) >> $(MISC)/$(SHL8DEFAULTRES:b).rc
     @echo $(EMQ)#include $(EMQ)"shlinfo.rc$(EMQ)" >> $(MISC)/$(SHL8DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
-    $(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL8DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL8DEFAULTRES:b).rc
 .ENDIF			# "$(SHL8DEFAULTRES)"!=""
 .IF "$(SHL8ALLRES)"!=""
-    $(TYPE) $(SHL8ALLRES) > $(SHL8LINKRES)
+	$(COMMAND_ECHO)$(TYPE) $(SHL8ALLRES) > $(SHL8LINKRES)
 .IF "$(COM)"=="GCC"
     windres $(SHL8LINKRES) $(SHL8LINKRESO)
 .ENDIF			# "$(COM)"=="GCC"
@@ -4108,15 +4226,15 @@ $(SHL8TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE			# "$(USE_DEFFILE)"!=""
-    $(SHL8LINKER) @$(mktmp	$(SHL8LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL8LINKER) @$(mktmp	$(SHL8LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL8BASEX)		\
         $(SHL8STACK) -out:$(SHL8TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -4132,16 +4250,16 @@ $(SHL8TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(USE_DEFFILE)"!=""
 .ELSE			# "$(SHL8USE_EXPORTS)"!="name"
-    $(SHL8LINKER) @$(mktmp	$(SHL8LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL8LINKER) @$(mktmp	$(SHL8LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL8BASEX)		\
         $(SHL8STACK) -out:$(SHL8TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -4155,18 +4273,18 @@ $(SHL8TARGETN) : \
     )
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(SHL8USE_EXPORTS)"!="name"
 .ELSE			# "$(linkinc)"==""
-        -$(RM) del $(MISC)/$(SHL8TARGET).lnk
-        -$(RM) $(MISC)/$(SHL8TARGET).lst
-        $(TYPE) $(mktmp \
+		$(COMMAND_ECHO)-$(RM) del $(MISC)/$(SHL8TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)/$(SHL8TARGET).lst
+		$(COMMAND_ECHO)$(TYPE) $(mktmp \
         $(SHL8LINKFLAGS) \
         $(LINKFLAGSSHL) $(SHL8BASEX) \
         $(SHL8STACK) $(MAPFILE) \
@@ -4178,17 +4296,17 @@ $(SHL8TARGETN) : \
         $(SHL8STDSHL) $(STDSHL8) \
         $(SHL8LINKRES) \
         ) >> $(MISC)/$(SHL8TARGET).lnk
-        $(TYPE) $(MISC)/$(SHL8TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL8TARGET).lnk
-        $(SHL8LINKER) @$(MISC)/$(SHL8TARGET).lnk
+		$(COMMAND_ECHO)$(TYPE) $(MISC)/$(SHL8TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL8TARGET).lnk
+		$(COMMAND_ECHO)$(SHL8LINKER) @$(MISC)/$(SHL8TARGET).lnk
         @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-        $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(linkinc)"==""
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)" == "WNT"
@@ -4204,11 +4322,13 @@ $(SHL8TARGETN) : \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_8.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_8.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_8.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_8.cmd
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         shl $(SHL8RPATH) $@
-    @echo "Making: $@.jnilib"
+	@echo "Making:   " $(@:f).jnilib
     @macosx-create-bundle $@
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL8NOCHECK)"==""
@@ -4221,21 +4341,29 @@ $(SHL8TARGETN) : \
     $(SHL8VERSIONOBJ) -o $@ \
     `cat /dev/null $(SHL8LIBS) | tr -s " " "\n" | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g` \
     $(SHL8STDLIBS) $(SHL8ARCHIVES) $(SHL8STDSHL) $(STDSHL8) $(LINKOUTPUT_FILTER) > $(MISC)/$(TARGET).$(@:b)_8.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_8.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_8.cmd
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL8NOCHECK)"==""
-    -$(RM) $(SHL8TARGETN:d)check_$(SHL8TARGETN:f)
-    $(RENAME) $(SHL8TARGETN) $(SHL8TARGETN:d)check_$(SHL8TARGETN:f)
-    $(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS8) $(SHL8TARGETN:d)check_$(SHL8TARGETN:f)
+	$(COMMAND_ECHO)-$(RM) $(SHL8TARGETN:d)check_$(SHL8TARGETN:f)
+	$(COMMAND_ECHO)$(RENAME) $(SHL8TARGETN) $(SHL8TARGETN:d)check_$(SHL8TARGETN:f)
+.IF "$(VERBOSE)"=="TRUE"
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS8) $(SHL8TARGETN:d)check_$(SHL8TARGETN:f)
+.ELSE
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS8) -- -s $(SHL8TARGETN:d)check_$(SHL8TARGETN:f)
+.ENDIF
 .ENDIF				# "$(SHL8NOCHECK)"!=""
 .ENDIF			# "$(UPDATER)"=="YES"
 .ENDIF			# "$(OS)"=="MACOSX"
 .IF "$(UNIXVERSIONNAMES)"!=""
-    $(RM) $(LB)/$(SHL8TARGETN:b)
-    cd $(LB) && ln -s $(SHL8TARGETN:f) $(SHL8TARGETN:b)
+	$(COMMAND_ECHO)$(RM) $(LB)/$(SHL8TARGETN:b)
+	$(COMMAND_ECHO)cd $(LB) && ln -s $(SHL8TARGETN:f) $(SHL8TARGETN:b)
 .ENDIF			# "$(UNIXVERSIONNAMES)"!=""
+.IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+.ENDIF
 .ENDIF			# "$(GUI)" == "UNX"
 
 .IF "$(GUI)" == "OS2"
@@ -4253,16 +4381,16 @@ $(SHL8TARGETN) : \
 #	@-+echo $(EMQ)RCDATA 1 { "Build string here" }$(EMQ) >> $(MISC)/$(SHL8DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
 # YD 04/07/06 seems null, confuses rc cli: -i $(SOLARTESDIR)
-    $(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL8DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL8DEFAULTRES:b).rc
 .ENDIF			# "$(SHL8DEFAULTRES)"!=""
 
 .IF "$(SHL8ALLRES)"!=""
-    +$(TYPE) $(SHL8ALLRES) > $(SHL8LINKRES)
+	$(COMMAND_ECHO)+$(TYPE) $(SHL8ALLRES) > $(SHL8LINKRES)
 .ENDIF			# "$(SHL8ALLRES)"!=""
 
 .IF "$(USE_DEFFILE)"!=""
 
-    $(SHL8LINKER) $(SHL8LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
+	$(COMMAND_ECHO)$(SHL8LINKER) $(SHL8LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
         $(SHL8DEF) \
         $(STDOBJ) \
         -L$(LB) \
@@ -4275,7 +4403,7 @@ $(SHL8TARGETN) : \
 
 .ELSE			# "$(USE_DEFFILE)"!=""
 
-    $(SHL8LINKER) -v 	$(SHL8LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL8LINKER) -v 	$(SHL8LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL8BASEX)		\
         $(SHL8STACK) -o $(SHL8TARGETN)	\
         $(SHL8DEF) \
@@ -4293,7 +4421,7 @@ $(SHL8TARGETN) : \
 .ENDIF			# "$(USE_DEFFILE)"!=""
 
 .IF "$(SHL8TARGET8)" != "$(SHL8TARGET)"
-    +$(COPY) $@ $(@:d)$(SHL8TARGET8).dll
+	$(COMMAND_ECHO)+$(COPY) $@ $(@:d)$(SHL8TARGET8).dll
 .ENDIF
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -4367,7 +4495,7 @@ SHL9VERSIONOBJDEP:=$(VERSIONOBJ:d){$(subst,$(DLLPOSTFIX),_dflt $(SHL9TARGET))}$(
 .ENDIF          # "$(GUI)" == "UNX"
 $(MISC)/$(SHL9VERSIONOBJ:b).c : $(SOLARENV)/src/version.c $(INCCOM)/$(SHL9VERSIONOBJ:b).h
 #    $(COPY) $(SOLARENV)/src/version.c $@
-    $(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL9VERSIONOBJ:b).h/ > $@
+	$(COMMAND_ECHO)$(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL9VERSIONOBJ:b).h/ > $@
 
 .INIT : $(SHL9VERSIONOBJDEP)
 .ENDIF			# "$(VERSIONOBJ)"!=""
@@ -4430,16 +4558,20 @@ $(USE_SHL9VERSIONMAP): \
 .ENDIF
 .ENDIF			# "$(SHL9OBJS)!"=""
     @$(TYPE) /dev/null $(SHL9LIBS:s/.lib/.dump/) >> $@.dump
-    $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL9INTERFACE) -f $(SHL9FILTERFILE) -m $@
+	$(COMMAND_ECHO) $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL9INTERFACE) -f $(SHL9FILTERFILE) -m $@
 
 .ELSE			# "$(SHL9FILTERFILE)"!=""
 USE_SHL9VERSIONMAP=$(MISC)/$(SHL9TARGET).vmap
 $(USE_SHL9VERSIONMAP) :
+.IF "$(VERBOSE)" == "TRUE"
     @echo -----------------------------
     @echo SHL9FILTERFILE not set!
     @echo -----------------------------
     @$(TOUCH) $@
     @echo dummy file to keep the dependencies for later use.
+.ELSE
+	@$(TOUCH) $@
+.ENDIF
 #	force_dmake_to_error
 .ENDIF			# "$(SHL9FILTERFILE)"!=""
 .ELSE			# "$(USE_SHL9VERSIONMAP)"!=""
@@ -4466,25 +4598,25 @@ $(USE_SHL9VERSIONMAP): $(SHL9VERSIONMAP)
 # Its questionable if the following condition '.IF "$(COMID)"=="gcc3"' makes sense and what
 # happens if somebody will change it in the future
 .IF "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL9VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL9VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
 .ELIF "$(COMNAME)"=="sunpro5"
-    tr -d "\015" < $(SHL9VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL9VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
 .ELSE           # "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL9VERSIONMAP) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL9VERSIONMAP) > $@
 .ENDIF          # "$(COMID)"=="gcc3"
     @chmod a+w $@
 # Mac OS X post-processing generate an exported symbols list from the generated map file
 # for details on exported symbols list see man ld on Mac OS X
 .IF "$(OS)"=="MACOSX"
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
 .IF "$(SHL9OBJS)"!=""
     -echo $(foreach,i,$(SHL9OBJS:s/.obj/.o/) $i) | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 .IF "$(SHL9LIBS)"!=""
-    -$(TYPE) $(foreach,j,$(SHL9LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)-$(TYPE) $(foreach,j,$(SHL9LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
@@ -4526,7 +4658,7 @@ SHL9LINKRESO*=$(MISC)/$(SHL9TARGET)_res.o
 .IF "$(SHL9LIBS)"!=""
 $(MISC)/$(SHL9TARGET)_linkinc.ls .PHONY:
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL9LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL9LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL9LIBS)"!=""
 .ENDIF
 
@@ -4542,14 +4674,14 @@ SHL9LINKLIST=$(MISC)/$(SHL9TARGET)_link.lst
 SHL9LINKLISTPARAM=@$(SHL9LINKLIST)
 $(SHL9LINKLIST) : $(SHL9LIBS)
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL9LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL9LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL9LIBS)"!=""
 .ENDIF          # "$(COM)"!="GCC"
 .ENDIF
 .ENDIF			# "$(SHL9USE_EXPORTS)"=="name"
 
 $(MISC)/%linkinc.ls:
-    echo . > $@
+	@echo . > $@
 .ENDIF          # "$(linkinc)"!=""
 
 .IF "$(GUI)" == "OS2"
@@ -4576,8 +4708,10 @@ $(SHL9TARGETN) : \
                     $(SHL9DEPN) \
                     $(SHL9IMP_ORD) \
                     $(SHL9LINKLIST)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $(SHL9TARGETN)
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(SHL9DEFAULTRES)"!=""
     @@-$(RM) $(MISC)/$(SHL9DEFAULTRES:b).rc
@@ -4597,10 +4731,10 @@ $(SHL9TARGETN) : \
     @echo $(EMQ)#define INTERNAL_NAME $(SHL9TARGET:b) >> $(MISC)/$(SHL9DEFAULTRES:b).rc
     @echo $(EMQ)#include $(EMQ)"shlinfo.rc$(EMQ)" >> $(MISC)/$(SHL9DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
-    $(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL9DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL9DEFAULTRES:b).rc
 .ENDIF			# "$(SHL9DEFAULTRES)"!=""
 .IF "$(SHL9ALLRES)"!=""
-    $(TYPE) $(SHL9ALLRES) > $(SHL9LINKRES)
+	$(COMMAND_ECHO)$(TYPE) $(SHL9ALLRES) > $(SHL9LINKRES)
 .IF "$(COM)"=="GCC"
     windres $(SHL9LINKRES) $(SHL9LINKRESO)
 .ENDIF			# "$(COM)"=="GCC"
@@ -4647,15 +4781,15 @@ $(SHL9TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE			# "$(USE_DEFFILE)"!=""
-    $(SHL9LINKER) @$(mktmp	$(SHL9LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL9LINKER) @$(mktmp	$(SHL9LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL9BASEX)		\
         $(SHL9STACK) -out:$(SHL9TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -4671,16 +4805,16 @@ $(SHL9TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(USE_DEFFILE)"!=""
 .ELSE			# "$(SHL9USE_EXPORTS)"!="name"
-    $(SHL9LINKER) @$(mktmp	$(SHL9LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL9LINKER) @$(mktmp	$(SHL9LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL9BASEX)		\
         $(SHL9STACK) -out:$(SHL9TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -4694,18 +4828,18 @@ $(SHL9TARGETN) : \
     )
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(SHL9USE_EXPORTS)"!="name"
 .ELSE			# "$(linkinc)"==""
-        -$(RM) del $(MISC)/$(SHL9TARGET).lnk
-        -$(RM) $(MISC)/$(SHL9TARGET).lst
-        $(TYPE) $(mktmp \
+		$(COMMAND_ECHO)-$(RM) del $(MISC)/$(SHL9TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)/$(SHL9TARGET).lst
+		$(COMMAND_ECHO)$(TYPE) $(mktmp \
         $(SHL9LINKFLAGS) \
         $(LINKFLAGSSHL) $(SHL9BASEX) \
         $(SHL9STACK) $(MAPFILE) \
@@ -4717,17 +4851,17 @@ $(SHL9TARGETN) : \
         $(SHL9STDSHL) $(STDSHL9) \
         $(SHL9LINKRES) \
         ) >> $(MISC)/$(SHL9TARGET).lnk
-        $(TYPE) $(MISC)/$(SHL9TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL9TARGET).lnk
-        $(SHL9LINKER) @$(MISC)/$(SHL9TARGET).lnk
+		$(COMMAND_ECHO)$(TYPE) $(MISC)/$(SHL9TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL9TARGET).lnk
+		$(COMMAND_ECHO)$(SHL9LINKER) @$(MISC)/$(SHL9TARGET).lnk
         @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-        $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(linkinc)"==""
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)" == "WNT"
@@ -4743,11 +4877,13 @@ $(SHL9TARGETN) : \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_9.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_9.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_9.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_9.cmd
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         shl $(SHL9RPATH) $@
-    @echo "Making: $@.jnilib"
+	@echo "Making:   " $(@:f).jnilib
     @macosx-create-bundle $@
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL9NOCHECK)"==""
@@ -4760,21 +4896,29 @@ $(SHL9TARGETN) : \
     $(SHL9VERSIONOBJ) -o $@ \
     `cat /dev/null $(SHL9LIBS) | tr -s " " "\n" | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g` \
     $(SHL9STDLIBS) $(SHL9ARCHIVES) $(SHL9STDSHL) $(STDSHL9) $(LINKOUTPUT_FILTER) > $(MISC)/$(TARGET).$(@:b)_9.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_9.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_9.cmd
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL9NOCHECK)"==""
-    -$(RM) $(SHL9TARGETN:d)check_$(SHL9TARGETN:f)
-    $(RENAME) $(SHL9TARGETN) $(SHL9TARGETN:d)check_$(SHL9TARGETN:f)
-    $(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS9) $(SHL9TARGETN:d)check_$(SHL9TARGETN:f)
+	$(COMMAND_ECHO)-$(RM) $(SHL9TARGETN:d)check_$(SHL9TARGETN:f)
+	$(COMMAND_ECHO)$(RENAME) $(SHL9TARGETN) $(SHL9TARGETN:d)check_$(SHL9TARGETN:f)
+.IF "$(VERBOSE)"=="TRUE"
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS9) $(SHL9TARGETN:d)check_$(SHL9TARGETN:f)
+.ELSE
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS9) -- -s $(SHL9TARGETN:d)check_$(SHL9TARGETN:f)
+.ENDIF
 .ENDIF				# "$(SHL9NOCHECK)"!=""
 .ENDIF			# "$(UPDATER)"=="YES"
 .ENDIF			# "$(OS)"=="MACOSX"
 .IF "$(UNIXVERSIONNAMES)"!=""
-    $(RM) $(LB)/$(SHL9TARGETN:b)
-    cd $(LB) && ln -s $(SHL9TARGETN:f) $(SHL9TARGETN:b)
+	$(COMMAND_ECHO)$(RM) $(LB)/$(SHL9TARGETN:b)
+	$(COMMAND_ECHO)cd $(LB) && ln -s $(SHL9TARGETN:f) $(SHL9TARGETN:b)
 .ENDIF			# "$(UNIXVERSIONNAMES)"!=""
+.IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+.ENDIF
 .ENDIF			# "$(GUI)" == "UNX"
 
 .IF "$(GUI)" == "OS2"
@@ -4792,16 +4936,16 @@ $(SHL9TARGETN) : \
 #	@-+echo $(EMQ)RCDATA 1 { "Build string here" }$(EMQ) >> $(MISC)/$(SHL9DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
 # YD 04/07/06 seems null, confuses rc cli: -i $(SOLARTESDIR)
-    $(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL9DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL9DEFAULTRES:b).rc
 .ENDIF			# "$(SHL9DEFAULTRES)"!=""
 
 .IF "$(SHL9ALLRES)"!=""
-    +$(TYPE) $(SHL9ALLRES) > $(SHL9LINKRES)
+	$(COMMAND_ECHO)+$(TYPE) $(SHL9ALLRES) > $(SHL9LINKRES)
 .ENDIF			# "$(SHL9ALLRES)"!=""
 
 .IF "$(USE_DEFFILE)"!=""
 
-    $(SHL9LINKER) $(SHL9LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
+	$(COMMAND_ECHO)$(SHL9LINKER) $(SHL9LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
         $(SHL9DEF) \
         $(STDOBJ) \
         -L$(LB) \
@@ -4814,7 +4958,7 @@ $(SHL9TARGETN) : \
 
 .ELSE			# "$(USE_DEFFILE)"!=""
 
-    $(SHL9LINKER) -v 	$(SHL9LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL9LINKER) -v 	$(SHL9LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL9BASEX)		\
         $(SHL9STACK) -o $(SHL9TARGETN)	\
         $(SHL9DEF) \
@@ -4832,7 +4976,7 @@ $(SHL9TARGETN) : \
 .ENDIF			# "$(USE_DEFFILE)"!=""
 
 .IF "$(SHL9TARGET8)" != "$(SHL9TARGET)"
-    +$(COPY) $@ $(@:d)$(SHL9TARGET8).dll
+	$(COMMAND_ECHO)+$(COPY) $@ $(@:d)$(SHL9TARGET8).dll
 .ENDIF
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -4906,7 +5050,7 @@ SHL10VERSIONOBJDEP:=$(VERSIONOBJ:d){$(subst,$(DLLPOSTFIX),_dflt $(SHL10TARGET))}
 .ENDIF          # "$(GUI)" == "UNX"
 $(MISC)/$(SHL10VERSIONOBJ:b).c : $(SOLARENV)/src/version.c $(INCCOM)/$(SHL10VERSIONOBJ:b).h
 #    $(COPY) $(SOLARENV)/src/version.c $@
-    $(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL10VERSIONOBJ:b).h/ > $@
+	$(COMMAND_ECHO)$(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL10VERSIONOBJ:b).h/ > $@
 
 .INIT : $(SHL10VERSIONOBJDEP)
 .ENDIF			# "$(VERSIONOBJ)"!=""
@@ -4969,16 +5113,20 @@ $(USE_SHL10VERSIONMAP): \
 .ENDIF
 .ENDIF			# "$(SHL10OBJS)!"=""
     @$(TYPE) /dev/null $(SHL10LIBS:s/.lib/.dump/) >> $@.dump
-    $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL10INTERFACE) -f $(SHL10FILTERFILE) -m $@
+	$(COMMAND_ECHO) $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL10INTERFACE) -f $(SHL10FILTERFILE) -m $@
 
 .ELSE			# "$(SHL10FILTERFILE)"!=""
 USE_SHL10VERSIONMAP=$(MISC)/$(SHL10TARGET).vmap
 $(USE_SHL10VERSIONMAP) :
+.IF "$(VERBOSE)" == "TRUE"
     @echo -----------------------------
     @echo SHL10FILTERFILE not set!
     @echo -----------------------------
     @$(TOUCH) $@
     @echo dummy file to keep the dependencies for later use.
+.ELSE
+	@$(TOUCH) $@
+.ENDIF
 #	force_dmake_to_error
 .ENDIF			# "$(SHL10FILTERFILE)"!=""
 .ELSE			# "$(USE_SHL10VERSIONMAP)"!=""
@@ -5005,25 +5153,25 @@ $(USE_SHL10VERSIONMAP): $(SHL10VERSIONMAP)
 # Its questionable if the following condition '.IF "$(COMID)"=="gcc3"' makes sense and what
 # happens if somebody will change it in the future
 .IF "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL10VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL10VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
 .ELIF "$(COMNAME)"=="sunpro5"
-    tr -d "\015" < $(SHL10VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL10VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
 .ELSE           # "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL10VERSIONMAP) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL10VERSIONMAP) > $@
 .ENDIF          # "$(COMID)"=="gcc3"
     @chmod a+w $@
 # Mac OS X post-processing generate an exported symbols list from the generated map file
 # for details on exported symbols list see man ld on Mac OS X
 .IF "$(OS)"=="MACOSX"
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
 .IF "$(SHL10OBJS)"!=""
     -echo $(foreach,i,$(SHL10OBJS:s/.obj/.o/) $i) | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 .IF "$(SHL10LIBS)"!=""
-    -$(TYPE) $(foreach,j,$(SHL10LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)-$(TYPE) $(foreach,j,$(SHL10LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
@@ -5065,7 +5213,7 @@ SHL10LINKRESO*=$(MISC)/$(SHL10TARGET)_res.o
 .IF "$(SHL10LIBS)"!=""
 $(MISC)/$(SHL10TARGET)_linkinc.ls .PHONY:
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL10LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL10LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL10LIBS)"!=""
 .ENDIF
 
@@ -5081,14 +5229,14 @@ SHL10LINKLIST=$(MISC)/$(SHL10TARGET)_link.lst
 SHL10LINKLISTPARAM=@$(SHL10LINKLIST)
 $(SHL10LINKLIST) : $(SHL10LIBS)
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL10LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL10LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL10LIBS)"!=""
 .ENDIF          # "$(COM)"!="GCC"
 .ENDIF
 .ENDIF			# "$(SHL10USE_EXPORTS)"=="name"
 
 $(MISC)/%linkinc.ls:
-    echo . > $@
+	@echo . > $@
 .ENDIF          # "$(linkinc)"!=""
 
 .IF "$(GUI)" == "OS2"
@@ -5115,8 +5263,10 @@ $(SHL10TARGETN) : \
                     $(SHL10DEPN) \
                     $(SHL10IMP_ORD) \
                     $(SHL10LINKLIST)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $(SHL10TARGETN)
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(SHL10DEFAULTRES)"!=""
     @@-$(RM) $(MISC)/$(SHL10DEFAULTRES:b).rc
@@ -5136,10 +5286,10 @@ $(SHL10TARGETN) : \
     @echo $(EMQ)#define INTERNAL_NAME $(SHL10TARGET:b) >> $(MISC)/$(SHL10DEFAULTRES:b).rc
     @echo $(EMQ)#include $(EMQ)"shlinfo.rc$(EMQ)" >> $(MISC)/$(SHL10DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
-    $(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL10DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL10DEFAULTRES:b).rc
 .ENDIF			# "$(SHL10DEFAULTRES)"!=""
 .IF "$(SHL10ALLRES)"!=""
-    $(TYPE) $(SHL10ALLRES) > $(SHL10LINKRES)
+	$(COMMAND_ECHO)$(TYPE) $(SHL10ALLRES) > $(SHL10LINKRES)
 .IF "$(COM)"=="GCC"
     windres $(SHL10LINKRES) $(SHL10LINKRESO)
 .ENDIF			# "$(COM)"=="GCC"
@@ -5186,15 +5336,15 @@ $(SHL10TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE			# "$(USE_DEFFILE)"!=""
-    $(SHL10LINKER) @$(mktmp	$(SHL10LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL10LINKER) @$(mktmp	$(SHL10LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL10BASEX)		\
         $(SHL10STACK) -out:$(SHL10TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -5210,16 +5360,16 @@ $(SHL10TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(USE_DEFFILE)"!=""
 .ELSE			# "$(SHL10USE_EXPORTS)"!="name"
-    $(SHL10LINKER) @$(mktmp	$(SHL10LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL10LINKER) @$(mktmp	$(SHL10LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL10BASEX)		\
         $(SHL10STACK) -out:$(SHL10TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -5233,18 +5383,18 @@ $(SHL10TARGETN) : \
     )
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(SHL10USE_EXPORTS)"!="name"
 .ELSE			# "$(linkinc)"==""
-        -$(RM) del $(MISC)/$(SHL10TARGET).lnk
-        -$(RM) $(MISC)/$(SHL10TARGET).lst
-        $(TYPE) $(mktmp \
+		$(COMMAND_ECHO)-$(RM) del $(MISC)/$(SHL10TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)/$(SHL10TARGET).lst
+		$(COMMAND_ECHO)$(TYPE) $(mktmp \
         $(SHL10LINKFLAGS) \
         $(LINKFLAGSSHL) $(SHL10BASEX) \
         $(SHL10STACK) $(MAPFILE) \
@@ -5256,17 +5406,17 @@ $(SHL10TARGETN) : \
         $(SHL10STDSHL) $(STDSHL10) \
         $(SHL10LINKRES) \
         ) >> $(MISC)/$(SHL10TARGET).lnk
-        $(TYPE) $(MISC)/$(SHL10TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL10TARGET).lnk
-        $(SHL10LINKER) @$(MISC)/$(SHL10TARGET).lnk
+		$(COMMAND_ECHO)$(TYPE) $(MISC)/$(SHL10TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL10TARGET).lnk
+		$(COMMAND_ECHO)$(SHL10LINKER) @$(MISC)/$(SHL10TARGET).lnk
         @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-        $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(linkinc)"==""
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)" == "WNT"
@@ -5282,11 +5432,13 @@ $(SHL10TARGETN) : \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_10.cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_10.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_10.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_10.cmd
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         shl $(SHL10RPATH) $@
-    @echo "Making: $@.jnilib"
+	@echo "Making:   " $(@:f).jnilib
     @macosx-create-bundle $@
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL10NOCHECK)"==""
@@ -5299,21 +5451,29 @@ $(SHL10TARGETN) : \
     $(SHL10VERSIONOBJ) -o $@ \
     `cat /dev/null $(SHL10LIBS) | tr -s " " "\n" | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g` \
     $(SHL10STDLIBS) $(SHL10ARCHIVES) $(SHL10STDSHL) $(STDSHL10) $(LINKOUTPUT_FILTER) > $(MISC)/$(TARGET).$(@:b)_10.cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_10.cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_10.cmd
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL10NOCHECK)"==""
-    -$(RM) $(SHL10TARGETN:d)check_$(SHL10TARGETN:f)
-    $(RENAME) $(SHL10TARGETN) $(SHL10TARGETN:d)check_$(SHL10TARGETN:f)
-    $(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS10) $(SHL10TARGETN:d)check_$(SHL10TARGETN:f)
+	$(COMMAND_ECHO)-$(RM) $(SHL10TARGETN:d)check_$(SHL10TARGETN:f)
+	$(COMMAND_ECHO)$(RENAME) $(SHL10TARGETN) $(SHL10TARGETN:d)check_$(SHL10TARGETN:f)
+.IF "$(VERBOSE)"=="TRUE"
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS10) $(SHL10TARGETN:d)check_$(SHL10TARGETN:f)
+.ELSE
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS10) -- -s $(SHL10TARGETN:d)check_$(SHL10TARGETN:f)
+.ENDIF
 .ENDIF				# "$(SHL10NOCHECK)"!=""
 .ENDIF			# "$(UPDATER)"=="YES"
 .ENDIF			# "$(OS)"=="MACOSX"
 .IF "$(UNIXVERSIONNAMES)"!=""
-    $(RM) $(LB)/$(SHL10TARGETN:b)
-    cd $(LB) && ln -s $(SHL10TARGETN:f) $(SHL10TARGETN:b)
+	$(COMMAND_ECHO)$(RM) $(LB)/$(SHL10TARGETN:b)
+	$(COMMAND_ECHO)cd $(LB) && ln -s $(SHL10TARGETN:f) $(SHL10TARGETN:b)
 .ENDIF			# "$(UNIXVERSIONNAMES)"!=""
+.IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+.ENDIF
 .ENDIF			# "$(GUI)" == "UNX"
 
 .IF "$(GUI)" == "OS2"
@@ -5331,16 +5491,16 @@ $(SHL10TARGETN) : \
 #	@-+echo $(EMQ)RCDATA 1 { "Build string here" }$(EMQ) >> $(MISC)/$(SHL10DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
 # YD 04/07/06 seems null, confuses rc cli: -i $(SOLARTESDIR)
-    $(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL10DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL10DEFAULTRES:b).rc
 .ENDIF			# "$(SHL10DEFAULTRES)"!=""
 
 .IF "$(SHL10ALLRES)"!=""
-    +$(TYPE) $(SHL10ALLRES) > $(SHL10LINKRES)
+	$(COMMAND_ECHO)+$(TYPE) $(SHL10ALLRES) > $(SHL10LINKRES)
 .ENDIF			# "$(SHL10ALLRES)"!=""
 
 .IF "$(USE_DEFFILE)"!=""
 
-    $(SHL10LINKER) $(SHL10LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
+	$(COMMAND_ECHO)$(SHL10LINKER) $(SHL10LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
         $(SHL10DEF) \
         $(STDOBJ) \
         -L$(LB) \
@@ -5353,7 +5513,7 @@ $(SHL10TARGETN) : \
 
 .ELSE			# "$(USE_DEFFILE)"!=""
 
-    $(SHL10LINKER) -v 	$(SHL10LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL10LINKER) -v 	$(SHL10LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL10BASEX)		\
         $(SHL10STACK) -o $(SHL10TARGETN)	\
         $(SHL10DEF) \
@@ -5371,7 +5531,7 @@ $(SHL10TARGETN) : \
 .ENDIF			# "$(USE_DEFFILE)"!=""
 
 .IF "$(SHL10TARGET8)" != "$(SHL10TARGET)"
-    +$(COPY) $@ $(@:d)$(SHL10TARGET8).dll
+	$(COMMAND_ECHO)+$(COPY) $@ $(@:d)$(SHL10TARGET8).dll
 .ENDIF
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -5411,8 +5571,10 @@ $(SHL1IMPLIBN):	\
 $(SHL1IMPLIBN):	\
                     $(SHL1LIBS)
 .ENDIF
-    @echo ------------------------------1
-    @echo Making: $(SHL1IMPLIBN)
+.IF "$(VERBOSE)" == "TRUE"
+	@echo -------------------------------
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(COM)"=="GCC"
     @echo no ImportLibs on mingw
@@ -5433,7 +5595,7 @@ $(SHL1IMPLIBN):	\
 
 # touch creates an empty file, but this is not good for emxomfar, so
 # create a dummy lib here
-    -$(LIBMGR) $(LIBFLAGS) $@ $(SHL1VERSIONOBJ)
+	$(COMMAND_ECHO)-$(LIBMGR) $(LIBFLAGS) $@ $(SHL1VERSIONOBJ)
     +@echo build of $(SHL1TARGETN) creates $@
 
 .ELSE
@@ -5466,8 +5628,10 @@ $(SHL2IMPLIBN):	\
 $(SHL2IMPLIBN):	\
                     $(SHL2LIBS)
 .ENDIF
-    @echo ------------------------------1
-    @echo Making: $(SHL2IMPLIBN)
+.IF "$(VERBOSE)" == "TRUE"
+	@echo -------------------------------
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(COM)"=="GCC"
     @echo no ImportLibs on mingw
@@ -5488,7 +5652,7 @@ $(SHL2IMPLIBN):	\
 
 # touch creates an empty file, but this is not good for emxomfar, so
 # create a dummy lib here
-    -$(LIBMGR) $(LIBFLAGS) $@ $(SHL2VERSIONOBJ)
+	$(COMMAND_ECHO)-$(LIBMGR) $(LIBFLAGS) $@ $(SHL2VERSIONOBJ)
     +@echo build of $(SHL2TARGETN) creates $@
 
 .ELSE
@@ -5521,8 +5685,10 @@ $(SHL3IMPLIBN):	\
 $(SHL3IMPLIBN):	\
                     $(SHL3LIBS)
 .ENDIF
-    @echo ------------------------------1
-    @echo Making: $(SHL3IMPLIBN)
+.IF "$(VERBOSE)" == "TRUE"
+	@echo -------------------------------
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(COM)"=="GCC"
     @echo no ImportLibs on mingw
@@ -5543,7 +5709,7 @@ $(SHL3IMPLIBN):	\
 
 # touch creates an empty file, but this is not good for emxomfar, so
 # create a dummy lib here
-    -$(LIBMGR) $(LIBFLAGS) $@ $(SHL3VERSIONOBJ)
+	$(COMMAND_ECHO)-$(LIBMGR) $(LIBFLAGS) $@ $(SHL3VERSIONOBJ)
     +@echo build of $(SHL3TARGETN) creates $@
 
 .ELSE
@@ -5576,8 +5742,10 @@ $(SHL4IMPLIBN):	\
 $(SHL4IMPLIBN):	\
                     $(SHL4LIBS)
 .ENDIF
-    @echo ------------------------------1
-    @echo Making: $(SHL4IMPLIBN)
+.IF "$(VERBOSE)" == "TRUE"
+	@echo -------------------------------
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(COM)"=="GCC"
     @echo no ImportLibs on mingw
@@ -5598,7 +5766,7 @@ $(SHL4IMPLIBN):	\
 
 # touch creates an empty file, but this is not good for emxomfar, so
 # create a dummy lib here
-    -$(LIBMGR) $(LIBFLAGS) $@ $(SHL4VERSIONOBJ)
+	$(COMMAND_ECHO)-$(LIBMGR) $(LIBFLAGS) $@ $(SHL4VERSIONOBJ)
     +@echo build of $(SHL4TARGETN) creates $@
 
 .ELSE
@@ -5631,8 +5799,10 @@ $(SHL5IMPLIBN):	\
 $(SHL5IMPLIBN):	\
                     $(SHL5LIBS)
 .ENDIF
-    @echo ------------------------------1
-    @echo Making: $(SHL5IMPLIBN)
+.IF "$(VERBOSE)" == "TRUE"
+	@echo -------------------------------
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(COM)"=="GCC"
     @echo no ImportLibs on mingw
@@ -5653,7 +5823,7 @@ $(SHL5IMPLIBN):	\
 
 # touch creates an empty file, but this is not good for emxomfar, so
 # create a dummy lib here
-    -$(LIBMGR) $(LIBFLAGS) $@ $(SHL5VERSIONOBJ)
+	$(COMMAND_ECHO)-$(LIBMGR) $(LIBFLAGS) $@ $(SHL5VERSIONOBJ)
     +@echo build of $(SHL5TARGETN) creates $@
 
 .ELSE
@@ -5686,8 +5856,10 @@ $(SHL6IMPLIBN):	\
 $(SHL6IMPLIBN):	\
                     $(SHL6LIBS)
 .ENDIF
-    @echo ------------------------------1
-    @echo Making: $(SHL6IMPLIBN)
+.IF "$(VERBOSE)" == "TRUE"
+	@echo -------------------------------
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(COM)"=="GCC"
     @echo no ImportLibs on mingw
@@ -5708,7 +5880,7 @@ $(SHL6IMPLIBN):	\
 
 # touch creates an empty file, but this is not good for emxomfar, so
 # create a dummy lib here
-    -$(LIBMGR) $(LIBFLAGS) $@ $(SHL6VERSIONOBJ)
+	$(COMMAND_ECHO)-$(LIBMGR) $(LIBFLAGS) $@ $(SHL6VERSIONOBJ)
     +@echo build of $(SHL6TARGETN) creates $@
 
 .ELSE
@@ -5741,8 +5913,10 @@ $(SHL7IMPLIBN):	\
 $(SHL7IMPLIBN):	\
                     $(SHL7LIBS)
 .ENDIF
-    @echo ------------------------------1
-    @echo Making: $(SHL7IMPLIBN)
+.IF "$(VERBOSE)" == "TRUE"
+	@echo -------------------------------
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(COM)"=="GCC"
     @echo no ImportLibs on mingw
@@ -5763,7 +5937,7 @@ $(SHL7IMPLIBN):	\
 
 # touch creates an empty file, but this is not good for emxomfar, so
 # create a dummy lib here
-    -$(LIBMGR) $(LIBFLAGS) $@ $(SHL7VERSIONOBJ)
+	$(COMMAND_ECHO)-$(LIBMGR) $(LIBFLAGS) $@ $(SHL7VERSIONOBJ)
     +@echo build of $(SHL7TARGETN) creates $@
 
 .ELSE
@@ -5796,8 +5970,10 @@ $(SHL8IMPLIBN):	\
 $(SHL8IMPLIBN):	\
                     $(SHL8LIBS)
 .ENDIF
-    @echo ------------------------------1
-    @echo Making: $(SHL8IMPLIBN)
+.IF "$(VERBOSE)" == "TRUE"
+	@echo -------------------------------
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(COM)"=="GCC"
     @echo no ImportLibs on mingw
@@ -5818,7 +5994,7 @@ $(SHL8IMPLIBN):	\
 
 # touch creates an empty file, but this is not good for emxomfar, so
 # create a dummy lib here
-    -$(LIBMGR) $(LIBFLAGS) $@ $(SHL8VERSIONOBJ)
+	$(COMMAND_ECHO)-$(LIBMGR) $(LIBFLAGS) $@ $(SHL8VERSIONOBJ)
     +@echo build of $(SHL8TARGETN) creates $@
 
 .ELSE
@@ -5851,8 +6027,10 @@ $(SHL9IMPLIBN):	\
 $(SHL9IMPLIBN):	\
                     $(SHL9LIBS)
 .ENDIF
-    @echo ------------------------------1
-    @echo Making: $(SHL9IMPLIBN)
+.IF "$(VERBOSE)" == "TRUE"
+	@echo -------------------------------
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(COM)"=="GCC"
     @echo no ImportLibs on mingw
@@ -5873,7 +6051,7 @@ $(SHL9IMPLIBN):	\
 
 # touch creates an empty file, but this is not good for emxomfar, so
 # create a dummy lib here
-    -$(LIBMGR) $(LIBFLAGS) $@ $(SHL9VERSIONOBJ)
+	$(COMMAND_ECHO)-$(LIBMGR) $(LIBFLAGS) $@ $(SHL9VERSIONOBJ)
     +@echo build of $(SHL9TARGETN) creates $@
 
 .ELSE
@@ -5906,8 +6084,10 @@ $(SHL10IMPLIBN):	\
 $(SHL10IMPLIBN):	\
                     $(SHL10LIBS)
 .ENDIF
-    @echo ------------------------------1
-    @echo Making: $(SHL10IMPLIBN)
+.IF "$(VERBOSE)" == "TRUE"
+	@echo -------------------------------
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(COM)"=="GCC"
     @echo no ImportLibs on mingw
@@ -5928,7 +6108,7 @@ $(SHL10IMPLIBN):	\
 
 # touch creates an empty file, but this is not good for emxomfar, so
 # create a dummy lib here
-    -$(LIBMGR) $(LIBFLAGS) $@ $(SHL10VERSIONOBJ)
+	$(COMMAND_ECHO)-$(LIBMGR) $(LIBFLAGS) $@ $(SHL10VERSIONOBJ)
     +@echo build of $(SHL10TARGETN) creates $@
 
 .ELSE
diff --git solenv/inc/_tg_srs.mk solenv/inc/_tg_srs.mk
index d3d4c07..bc5ae3f 100644
--- solenv/inc/_tg_srs.mk
+++ solenv/inc/_tg_srs.mk
@@ -5,10 +5,12 @@
 HID1FILES=$(foreach,i,$(SRC1FILES:f) $(SRS)/$(i:s/.src/.hid/))
 HIDSRS1PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(SRS))/$(SRS1NAME)_srs.hid
 $(HIDSRS1PARTICLE) : $(HID1FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(TYPE) $(mktmp  $(subst,/,/ $(HID1FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(subst,/,/ $(HID1FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDSRS1PARTICLE)
@@ -60,10 +62,12 @@ $(SRS)/$(SRS1NAME).srs: $(SRC1FILES)
 HID2FILES=$(foreach,i,$(SRC2FILES:f) $(SRS)/$(i:s/.src/.hid/))
 HIDSRS2PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(SRS))/$(SRS2NAME)_srs.hid
 $(HIDSRS2PARTICLE) : $(HID2FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(TYPE) $(mktmp  $(subst,/,/ $(HID2FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(subst,/,/ $(HID2FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDSRS2PARTICLE)
@@ -115,10 +119,12 @@ $(SRS)/$(SRS2NAME).srs: $(SRC2FILES)
 HID3FILES=$(foreach,i,$(SRC3FILES:f) $(SRS)/$(i:s/.src/.hid/))
 HIDSRS3PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(SRS))/$(SRS3NAME)_srs.hid
 $(HIDSRS3PARTICLE) : $(HID3FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(TYPE) $(mktmp  $(subst,/,/ $(HID3FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(subst,/,/ $(HID3FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDSRS3PARTICLE)
@@ -170,10 +176,12 @@ $(SRS)/$(SRS3NAME).srs: $(SRC3FILES)
 HID4FILES=$(foreach,i,$(SRC4FILES:f) $(SRS)/$(i:s/.src/.hid/))
 HIDSRS4PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(SRS))/$(SRS4NAME)_srs.hid
 $(HIDSRS4PARTICLE) : $(HID4FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(TYPE) $(mktmp  $(subst,/,/ $(HID4FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(subst,/,/ $(HID4FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDSRS4PARTICLE)
@@ -225,10 +233,12 @@ $(SRS)/$(SRS4NAME).srs: $(SRC4FILES)
 HID5FILES=$(foreach,i,$(SRC5FILES:f) $(SRS)/$(i:s/.src/.hid/))
 HIDSRS5PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(SRS))/$(SRS5NAME)_srs.hid
 $(HIDSRS5PARTICLE) : $(HID5FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(TYPE) $(mktmp  $(subst,/,/ $(HID5FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(subst,/,/ $(HID5FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDSRS5PARTICLE)
@@ -280,10 +290,12 @@ $(SRS)/$(SRS5NAME).srs: $(SRC5FILES)
 HID6FILES=$(foreach,i,$(SRC6FILES:f) $(SRS)/$(i:s/.src/.hid/))
 HIDSRS6PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(SRS))/$(SRS6NAME)_srs.hid
 $(HIDSRS6PARTICLE) : $(HID6FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(TYPE) $(mktmp  $(subst,/,/ $(HID6FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(subst,/,/ $(HID6FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDSRS6PARTICLE)
@@ -335,10 +347,12 @@ $(SRS)/$(SRS6NAME).srs: $(SRC6FILES)
 HID7FILES=$(foreach,i,$(SRC7FILES:f) $(SRS)/$(i:s/.src/.hid/))
 HIDSRS7PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(SRS))/$(SRS7NAME)_srs.hid
 $(HIDSRS7PARTICLE) : $(HID7FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(TYPE) $(mktmp  $(subst,/,/ $(HID7FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(subst,/,/ $(HID7FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDSRS7PARTICLE)
@@ -390,10 +404,12 @@ $(SRS)/$(SRS7NAME).srs: $(SRC7FILES)
 HID8FILES=$(foreach,i,$(SRC8FILES:f) $(SRS)/$(i:s/.src/.hid/))
 HIDSRS8PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(SRS))/$(SRS8NAME)_srs.hid
 $(HIDSRS8PARTICLE) : $(HID8FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(TYPE) $(mktmp  $(subst,/,/ $(HID8FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(subst,/,/ $(HID8FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDSRS8PARTICLE)
@@ -445,10 +461,12 @@ $(SRS)/$(SRS8NAME).srs: $(SRC8FILES)
 HID9FILES=$(foreach,i,$(SRC9FILES:f) $(SRS)/$(i:s/.src/.hid/))
 HIDSRS9PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(SRS))/$(SRS9NAME)_srs.hid
 $(HIDSRS9PARTICLE) : $(HID9FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(TYPE) $(mktmp  $(subst,/,/ $(HID9FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(subst,/,/ $(HID9FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDSRS9PARTICLE)
@@ -500,10 +518,12 @@ $(SRS)/$(SRS9NAME).srs: $(SRC9FILES)
 HID10FILES=$(foreach,i,$(SRC10FILES:f) $(SRS)/$(i:s/.src/.hid/))
 HIDSRS10PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(SRS))/$(SRS10NAME)_srs.hid
 $(HIDSRS10PARTICLE) : $(HID10FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(TYPE) $(mktmp  $(subst,/,/ $(HID10FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(subst,/,/ $(HID10FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDSRS10PARTICLE)
diff --git solenv/inc/_tg_zip.mk solenv/inc/_tg_zip.mk
index 79ced98..65d0c4e 100644
--- solenv/inc/_tg_zip.mk
+++ solenv/inc/_tg_zip.mk
@@ -58,50 +58,48 @@ ZIP1HELPVAR=$(BIN)/$(ZIP1TARGET)
 .ENDIF			# "$(common_build_zip)"!=""
 
 $(ZIP1DEPFILE) :
-    echo # > $(MISC)/$(@:f)
+	@echo # > $(MISC)/$(@:f)
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP1DIR)" != ""
-    @echo type 1
-    -$(MKDIRHIER) $(ZIP1DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP1DIR))) $(command_seperator) $(ZIPDEP) $(ZIP1FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP1DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP1EXT)/))) $(foreach,j,$(ZIP1LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP1TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP1DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP1DIR))) $(command_seperator) $(ZIPDEP) $(ZIP1FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP1DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP1EXT)/))) $(foreach,j,$(ZIP1LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP1TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP1DIR)" != ""
-    @echo type 2
-    -$(ZIPDEP) $(ZIP1FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP1EXT)/))) $(foreach,j,$(ZIP1LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP1TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP1FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP1EXT)/))) $(foreach,j,$(ZIP1LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP1TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP1DIR)" != ""
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP1DIR)" != ""
-    @echo type 3
-    -$(MKDIRHIER) $(ZIP1DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP1DIR))) $(command_seperator) $(ZIPDEP) $(ZIP1FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP1DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP1EXT)/)) $(foreach,j,$(ZIP1LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP1TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP1DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP1DIR))) $(command_seperator) $(ZIPDEP) $(ZIP1FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP1DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP1EXT)/)) $(foreach,j,$(ZIP1LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP1TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP1DIR)" != ""
-    @echo type 4
-    -$(ZIPDEP) $(ZIP1FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP1EXT)/)) $(foreach,j,$(ZIP1LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP1TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP1FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP1EXT)/)) $(foreach,j,$(ZIP1LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP1TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP1DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
     @echo $(@:n:s#\#/#) : makefile.mk >> $(MISC)/$(@:f)
 
 
 $(ZIP1TARGETN) : delzip $(ZIP1DEPS)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@$(!eq,$?,$(?:s/delzip/zzz/) -$(RM) echo) $(uniq $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@))
     @$(eq,$?,$(?:s/delzip/zzz/) noop echo ) rebuilding zipfiles
     @echo ------------------------------ $(eq,$?,$(?:s/delzip/zzz/) >&$(NULLDEV) )
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP1DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP1HELPVAR)_, $(@:db))} $(ZIP1DIR)) $(command_seperator) zip $(ZIP1FLAGS) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) $(subst,LANGDIR_away/, $(ZIP1LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) \
-    $(FI)
-    $(COPY) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) $@.$(INPATH)
-    $(RM) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP1HELPVAR)_, $(@:db))} $(ZIP1DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP1FLAGS) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) $(subst,LANGDIR_away/, $(ZIP1LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) $@.$(INPATH)
+    $(COMMAND_ECHO)$(RM) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT)
 .ELSE			# "$(ZIP1DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
-    zip $(ZIP1FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP1LIST) $(subst,LANGDIR,{$(subst,$(ZIP1HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP1FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP1LIST) $(subst,LANGDIR,{$(subst,$(ZIP1HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
+	    $(FI)
     @@-$(GNUCOPY) -p $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $@.$(INPATH)
     @-$(RM) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
 .ENDIF			# "$(ZIP1DIR)" != ""
@@ -111,17 +109,17 @@ $(ZIP1TARGETN) : delzip $(ZIP1DEPS)
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP1DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP1HELPVAR)_, $(@:db))} $(ZIP1DIR)) $(command_seperator) zip $(ZIP1FLAGS) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) $(subst,LANGDIR_away/, $(ZIP1LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) \
-    $(FI)
-    $(COPY) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT)  $@ 
-    $(RM) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP1HELPVAR)_, $(@:db))} $(ZIP1DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP1FLAGS) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) $(subst,LANGDIR_away/, $(ZIP1LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT)  $@ 
+    $(COMMAND_ECHO)$(RM) $(ZIP1TMP).$(ZIP1TARGET){$(subst,$(ZIP1HELPVAR),_ $(@:db))}$(ZIP1EXT)
 .ELSE			# "$(ZIP1DIR)" != ""
-    zip $(ZIP1FLAGS) $@ $(foreach,j,$(ZIP1LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP1TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $@ $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP1FLAGS) $@ $(foreach,j,$(ZIP1LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP1TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $@ $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
+	    $(FI)
 .ENDIF			# "$(ZIP1DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
 .ENDIF
@@ -186,50 +184,48 @@ ZIP2HELPVAR=$(BIN)/$(ZIP2TARGET)
 .ENDIF			# "$(common_build_zip)"!=""
 
 $(ZIP2DEPFILE) :
-    echo # > $(MISC)/$(@:f)
+	@echo # > $(MISC)/$(@:f)
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP2DIR)" != ""
-    @echo type 1
-    -$(MKDIRHIER) $(ZIP2DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP2DIR))) $(command_seperator) $(ZIPDEP) $(ZIP2FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP2DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP2EXT)/))) $(foreach,j,$(ZIP2LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP2TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP2DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP2DIR))) $(command_seperator) $(ZIPDEP) $(ZIP2FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP2DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP2EXT)/))) $(foreach,j,$(ZIP2LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP2TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP2DIR)" != ""
-    @echo type 2
-    -$(ZIPDEP) $(ZIP2FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP2EXT)/))) $(foreach,j,$(ZIP2LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP2TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP2FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP2EXT)/))) $(foreach,j,$(ZIP2LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP2TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP2DIR)" != ""
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP2DIR)" != ""
-    @echo type 3
-    -$(MKDIRHIER) $(ZIP2DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP2DIR))) $(command_seperator) $(ZIPDEP) $(ZIP2FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP2DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP2EXT)/)) $(foreach,j,$(ZIP2LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP2TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP2DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP2DIR))) $(command_seperator) $(ZIPDEP) $(ZIP2FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP2DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP2EXT)/)) $(foreach,j,$(ZIP2LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP2TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP2DIR)" != ""
-    @echo type 4
-    -$(ZIPDEP) $(ZIP2FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP2EXT)/)) $(foreach,j,$(ZIP2LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP2TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP2FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP2EXT)/)) $(foreach,j,$(ZIP2LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP2TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP2DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
     @echo $(@:n:s#\#/#) : makefile.mk >> $(MISC)/$(@:f)
 
 
 $(ZIP2TARGETN) : delzip $(ZIP2DEPS)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@$(!eq,$?,$(?:s/delzip/zzz/) -$(RM) echo) $(uniq $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@))
     @$(eq,$?,$(?:s/delzip/zzz/) noop echo ) rebuilding zipfiles
     @echo ------------------------------ $(eq,$?,$(?:s/delzip/zzz/) >&$(NULLDEV) )
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP2DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP2HELPVAR)_, $(@:db))} $(ZIP2DIR)) $(command_seperator) zip $(ZIP2FLAGS) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) $(subst,LANGDIR_away/, $(ZIP2LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) \
-    $(FI)
-    $(COPY) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) $@.$(INPATH)
-    $(RM) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP2HELPVAR)_, $(@:db))} $(ZIP2DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP2FLAGS) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) $(subst,LANGDIR_away/, $(ZIP2LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) $@.$(INPATH)
+    $(COMMAND_ECHO)$(RM) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT)
 .ELSE			# "$(ZIP2DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
-    zip $(ZIP2FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP2LIST) $(subst,LANGDIR,{$(subst,$(ZIP2HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP2FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP2LIST) $(subst,LANGDIR,{$(subst,$(ZIP2HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
+	    $(FI)
     @@-$(GNUCOPY) -p $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $@.$(INPATH)
     @-$(RM) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
 .ENDIF			# "$(ZIP2DIR)" != ""
@@ -239,17 +235,17 @@ $(ZIP2TARGETN) : delzip $(ZIP2DEPS)
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP2DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP2HELPVAR)_, $(@:db))} $(ZIP2DIR)) $(command_seperator) zip $(ZIP2FLAGS) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) $(subst,LANGDIR_away/, $(ZIP2LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) \
-    $(FI)
-    $(COPY) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT)  $@ 
-    $(RM) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP2HELPVAR)_, $(@:db))} $(ZIP2DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP2FLAGS) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) $(subst,LANGDIR_away/, $(ZIP2LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT)  $@ 
+    $(COMMAND_ECHO)$(RM) $(ZIP2TMP).$(ZIP2TARGET){$(subst,$(ZIP2HELPVAR),_ $(@:db))}$(ZIP2EXT)
 .ELSE			# "$(ZIP2DIR)" != ""
-    zip $(ZIP2FLAGS) $@ $(foreach,j,$(ZIP2LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP2TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $@ $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP2FLAGS) $@ $(foreach,j,$(ZIP2LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP2TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $@ $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
+	    $(FI)
 .ENDIF			# "$(ZIP2DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
 .ENDIF
@@ -314,50 +310,48 @@ ZIP3HELPVAR=$(BIN)/$(ZIP3TARGET)
 .ENDIF			# "$(common_build_zip)"!=""
 
 $(ZIP3DEPFILE) :
-    echo # > $(MISC)/$(@:f)
+	@echo # > $(MISC)/$(@:f)
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP3DIR)" != ""
-    @echo type 1
-    -$(MKDIRHIER) $(ZIP3DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP3DIR))) $(command_seperator) $(ZIPDEP) $(ZIP3FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP3DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP3EXT)/))) $(foreach,j,$(ZIP3LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP3TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP3DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP3DIR))) $(command_seperator) $(ZIPDEP) $(ZIP3FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP3DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP3EXT)/))) $(foreach,j,$(ZIP3LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP3TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP3DIR)" != ""
-    @echo type 2
-    -$(ZIPDEP) $(ZIP3FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP3EXT)/))) $(foreach,j,$(ZIP3LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP3TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP3FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP3EXT)/))) $(foreach,j,$(ZIP3LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP3TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP3DIR)" != ""
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP3DIR)" != ""
-    @echo type 3
-    -$(MKDIRHIER) $(ZIP3DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP3DIR))) $(command_seperator) $(ZIPDEP) $(ZIP3FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP3DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP3EXT)/)) $(foreach,j,$(ZIP3LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP3TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP3DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP3DIR))) $(command_seperator) $(ZIPDEP) $(ZIP3FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP3DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP3EXT)/)) $(foreach,j,$(ZIP3LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP3TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP3DIR)" != ""
-    @echo type 4
-    -$(ZIPDEP) $(ZIP3FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP3EXT)/)) $(foreach,j,$(ZIP3LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP3TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP3FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP3EXT)/)) $(foreach,j,$(ZIP3LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP3TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP3DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
     @echo $(@:n:s#\#/#) : makefile.mk >> $(MISC)/$(@:f)
 
 
 $(ZIP3TARGETN) : delzip $(ZIP3DEPS)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@$(!eq,$?,$(?:s/delzip/zzz/) -$(RM) echo) $(uniq $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@))
     @$(eq,$?,$(?:s/delzip/zzz/) noop echo ) rebuilding zipfiles
     @echo ------------------------------ $(eq,$?,$(?:s/delzip/zzz/) >&$(NULLDEV) )
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP3DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP3HELPVAR)_, $(@:db))} $(ZIP3DIR)) $(command_seperator) zip $(ZIP3FLAGS) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) $(subst,LANGDIR_away/, $(ZIP3LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) \
-    $(FI)
-    $(COPY) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) $@.$(INPATH)
-    $(RM) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP3HELPVAR)_, $(@:db))} $(ZIP3DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP3FLAGS) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) $(subst,LANGDIR_away/, $(ZIP3LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) $@.$(INPATH)
+    $(COMMAND_ECHO)$(RM) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT)
 .ELSE			# "$(ZIP3DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
-    zip $(ZIP3FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP3LIST) $(subst,LANGDIR,{$(subst,$(ZIP3HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP3FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP3LIST) $(subst,LANGDIR,{$(subst,$(ZIP3HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
+	    $(FI)
     @@-$(GNUCOPY) -p $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $@.$(INPATH)
     @-$(RM) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
 .ENDIF			# "$(ZIP3DIR)" != ""
@@ -367,17 +361,17 @@ $(ZIP3TARGETN) : delzip $(ZIP3DEPS)
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP3DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP3HELPVAR)_, $(@:db))} $(ZIP3DIR)) $(command_seperator) zip $(ZIP3FLAGS) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) $(subst,LANGDIR_away/, $(ZIP3LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) \
-    $(FI)
-    $(COPY) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT)  $@ 
-    $(RM) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP3HELPVAR)_, $(@:db))} $(ZIP3DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP3FLAGS) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) $(subst,LANGDIR_away/, $(ZIP3LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT)  $@ 
+    $(COMMAND_ECHO)$(RM) $(ZIP3TMP).$(ZIP3TARGET){$(subst,$(ZIP3HELPVAR),_ $(@:db))}$(ZIP3EXT)
 .ELSE			# "$(ZIP3DIR)" != ""
-    zip $(ZIP3FLAGS) $@ $(foreach,j,$(ZIP3LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP3TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $@ $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP3FLAGS) $@ $(foreach,j,$(ZIP3LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP3TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $@ $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
+	    $(FI)
 .ENDIF			# "$(ZIP3DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
 .ENDIF
@@ -442,50 +436,48 @@ ZIP4HELPVAR=$(BIN)/$(ZIP4TARGET)
 .ENDIF			# "$(common_build_zip)"!=""
 
 $(ZIP4DEPFILE) :
-    echo # > $(MISC)/$(@:f)
+	@echo # > $(MISC)/$(@:f)
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP4DIR)" != ""
-    @echo type 1
-    -$(MKDIRHIER) $(ZIP4DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP4DIR))) $(command_seperator) $(ZIPDEP) $(ZIP4FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP4DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP4EXT)/))) $(foreach,j,$(ZIP4LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP4TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP4DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP4DIR))) $(command_seperator) $(ZIPDEP) $(ZIP4FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP4DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP4EXT)/))) $(foreach,j,$(ZIP4LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP4TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP4DIR)" != ""
-    @echo type 2
-    -$(ZIPDEP) $(ZIP4FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP4EXT)/))) $(foreach,j,$(ZIP4LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP4TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP4FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP4EXT)/))) $(foreach,j,$(ZIP4LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP4TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP4DIR)" != ""
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP4DIR)" != ""
-    @echo type 3
-    -$(MKDIRHIER) $(ZIP4DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP4DIR))) $(command_seperator) $(ZIPDEP) $(ZIP4FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP4DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP4EXT)/)) $(foreach,j,$(ZIP4LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP4TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP4DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP4DIR))) $(command_seperator) $(ZIPDEP) $(ZIP4FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP4DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP4EXT)/)) $(foreach,j,$(ZIP4LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP4TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP4DIR)" != ""
-    @echo type 4
-    -$(ZIPDEP) $(ZIP4FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP4EXT)/)) $(foreach,j,$(ZIP4LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP4TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP4FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP4EXT)/)) $(foreach,j,$(ZIP4LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP4TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP4DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
     @echo $(@:n:s#\#/#) : makefile.mk >> $(MISC)/$(@:f)
 
 
 $(ZIP4TARGETN) : delzip $(ZIP4DEPS)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@$(!eq,$?,$(?:s/delzip/zzz/) -$(RM) echo) $(uniq $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@))
     @$(eq,$?,$(?:s/delzip/zzz/) noop echo ) rebuilding zipfiles
     @echo ------------------------------ $(eq,$?,$(?:s/delzip/zzz/) >&$(NULLDEV) )
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP4DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP4HELPVAR)_, $(@:db))} $(ZIP4DIR)) $(command_seperator) zip $(ZIP4FLAGS) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) $(subst,LANGDIR_away/, $(ZIP4LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) \
-    $(FI)
-    $(COPY) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) $@.$(INPATH)
-    $(RM) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP4HELPVAR)_, $(@:db))} $(ZIP4DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP4FLAGS) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) $(subst,LANGDIR_away/, $(ZIP4LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) $@.$(INPATH)
+    $(COMMAND_ECHO)$(RM) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT)
 .ELSE			# "$(ZIP4DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
-    zip $(ZIP4FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP4LIST) $(subst,LANGDIR,{$(subst,$(ZIP4HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP4FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP4LIST) $(subst,LANGDIR,{$(subst,$(ZIP4HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
+	    $(FI)
     @@-$(GNUCOPY) -p $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $@.$(INPATH)
     @-$(RM) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
 .ENDIF			# "$(ZIP4DIR)" != ""
@@ -495,17 +487,17 @@ $(ZIP4TARGETN) : delzip $(ZIP4DEPS)
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP4DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP4HELPVAR)_, $(@:db))} $(ZIP4DIR)) $(command_seperator) zip $(ZIP4FLAGS) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) $(subst,LANGDIR_away/, $(ZIP4LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) \
-    $(FI)
-    $(COPY) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT)  $@ 
-    $(RM) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP4HELPVAR)_, $(@:db))} $(ZIP4DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP4FLAGS) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) $(subst,LANGDIR_away/, $(ZIP4LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT)  $@ 
+    $(COMMAND_ECHO)$(RM) $(ZIP4TMP).$(ZIP4TARGET){$(subst,$(ZIP4HELPVAR),_ $(@:db))}$(ZIP4EXT)
 .ELSE			# "$(ZIP4DIR)" != ""
-    zip $(ZIP4FLAGS) $@ $(foreach,j,$(ZIP4LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP4TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $@ $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP4FLAGS) $@ $(foreach,j,$(ZIP4LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP4TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $@ $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
+	    $(FI)
 .ENDIF			# "$(ZIP4DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
 .ENDIF
@@ -570,50 +562,48 @@ ZIP5HELPVAR=$(BIN)/$(ZIP5TARGET)
 .ENDIF			# "$(common_build_zip)"!=""
 
 $(ZIP5DEPFILE) :
-    echo # > $(MISC)/$(@:f)
+	@echo # > $(MISC)/$(@:f)
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP5DIR)" != ""
-    @echo type 1
-    -$(MKDIRHIER) $(ZIP5DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP5DIR))) $(command_seperator) $(ZIPDEP) $(ZIP5FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP5DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP5EXT)/))) $(foreach,j,$(ZIP5LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP5TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP5DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP5DIR))) $(command_seperator) $(ZIPDEP) $(ZIP5FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP5DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP5EXT)/))) $(foreach,j,$(ZIP5LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP5TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP5DIR)" != ""
-    @echo type 2
-    -$(ZIPDEP) $(ZIP5FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP5EXT)/))) $(foreach,j,$(ZIP5LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP5TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP5FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP5EXT)/))) $(foreach,j,$(ZIP5LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP5TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP5DIR)" != ""
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP5DIR)" != ""
-    @echo type 3
-    -$(MKDIRHIER) $(ZIP5DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP5DIR))) $(command_seperator) $(ZIPDEP) $(ZIP5FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP5DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP5EXT)/)) $(foreach,j,$(ZIP5LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP5TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP5DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP5DIR))) $(command_seperator) $(ZIPDEP) $(ZIP5FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP5DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP5EXT)/)) $(foreach,j,$(ZIP5LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP5TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP5DIR)" != ""
-    @echo type 4
-    -$(ZIPDEP) $(ZIP5FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP5EXT)/)) $(foreach,j,$(ZIP5LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP5TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP5FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP5EXT)/)) $(foreach,j,$(ZIP5LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP5TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP5DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
     @echo $(@:n:s#\#/#) : makefile.mk >> $(MISC)/$(@:f)
 
 
 $(ZIP5TARGETN) : delzip $(ZIP5DEPS)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@$(!eq,$?,$(?:s/delzip/zzz/) -$(RM) echo) $(uniq $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@))
     @$(eq,$?,$(?:s/delzip/zzz/) noop echo ) rebuilding zipfiles
     @echo ------------------------------ $(eq,$?,$(?:s/delzip/zzz/) >&$(NULLDEV) )
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP5DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP5HELPVAR)_, $(@:db))} $(ZIP5DIR)) $(command_seperator) zip $(ZIP5FLAGS) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) $(subst,LANGDIR_away/, $(ZIP5LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) \
-    $(FI)
-    $(COPY) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) $@.$(INPATH)
-    $(RM) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP5HELPVAR)_, $(@:db))} $(ZIP5DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP5FLAGS) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) $(subst,LANGDIR_away/, $(ZIP5LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) $@.$(INPATH)
+    $(COMMAND_ECHO)$(RM) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT)
 .ELSE			# "$(ZIP5DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
-    zip $(ZIP5FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP5LIST) $(subst,LANGDIR,{$(subst,$(ZIP5HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP5FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP5LIST) $(subst,LANGDIR,{$(subst,$(ZIP5HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
+	    $(FI)
     @@-$(GNUCOPY) -p $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $@.$(INPATH)
     @-$(RM) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
 .ENDIF			# "$(ZIP5DIR)" != ""
@@ -623,17 +613,17 @@ $(ZIP5TARGETN) : delzip $(ZIP5DEPS)
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP5DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP5HELPVAR)_, $(@:db))} $(ZIP5DIR)) $(command_seperator) zip $(ZIP5FLAGS) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) $(subst,LANGDIR_away/, $(ZIP5LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) \
-    $(FI)
-    $(COPY) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT)  $@ 
-    $(RM) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP5HELPVAR)_, $(@:db))} $(ZIP5DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP5FLAGS) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) $(subst,LANGDIR_away/, $(ZIP5LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT)  $@ 
+    $(COMMAND_ECHO)$(RM) $(ZIP5TMP).$(ZIP5TARGET){$(subst,$(ZIP5HELPVAR),_ $(@:db))}$(ZIP5EXT)
 .ELSE			# "$(ZIP5DIR)" != ""
-    zip $(ZIP5FLAGS) $@ $(foreach,j,$(ZIP5LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP5TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $@ $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP5FLAGS) $@ $(foreach,j,$(ZIP5LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP5TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $@ $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
+	    $(FI)
 .ENDIF			# "$(ZIP5DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
 .ENDIF
@@ -698,50 +688,48 @@ ZIP6HELPVAR=$(BIN)/$(ZIP6TARGET)
 .ENDIF			# "$(common_build_zip)"!=""
 
 $(ZIP6DEPFILE) :
-    echo # > $(MISC)/$(@:f)
+	@echo # > $(MISC)/$(@:f)
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP6DIR)" != ""
-    @echo type 1
-    -$(MKDIRHIER) $(ZIP6DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP6DIR))) $(command_seperator) $(ZIPDEP) $(ZIP6FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP6DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP6EXT)/))) $(foreach,j,$(ZIP6LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP6TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP6DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP6DIR))) $(command_seperator) $(ZIPDEP) $(ZIP6FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP6DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP6EXT)/))) $(foreach,j,$(ZIP6LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP6TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP6DIR)" != ""
-    @echo type 2
-    -$(ZIPDEP) $(ZIP6FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP6EXT)/))) $(foreach,j,$(ZIP6LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP6TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP6FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP6EXT)/))) $(foreach,j,$(ZIP6LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP6TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP6DIR)" != ""
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP6DIR)" != ""
-    @echo type 3
-    -$(MKDIRHIER) $(ZIP6DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP6DIR))) $(command_seperator) $(ZIPDEP) $(ZIP6FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP6DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP6EXT)/)) $(foreach,j,$(ZIP6LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP6TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP6DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP6DIR))) $(command_seperator) $(ZIPDEP) $(ZIP6FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP6DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP6EXT)/)) $(foreach,j,$(ZIP6LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP6TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP6DIR)" != ""
-    @echo type 4
-    -$(ZIPDEP) $(ZIP6FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP6EXT)/)) $(foreach,j,$(ZIP6LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP6TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP6FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP6EXT)/)) $(foreach,j,$(ZIP6LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP6TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP6DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
     @echo $(@:n:s#\#/#) : makefile.mk >> $(MISC)/$(@:f)
 
 
 $(ZIP6TARGETN) : delzip $(ZIP6DEPS)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@$(!eq,$?,$(?:s/delzip/zzz/) -$(RM) echo) $(uniq $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@))
     @$(eq,$?,$(?:s/delzip/zzz/) noop echo ) rebuilding zipfiles
     @echo ------------------------------ $(eq,$?,$(?:s/delzip/zzz/) >&$(NULLDEV) )
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP6DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP6HELPVAR)_, $(@:db))} $(ZIP6DIR)) $(command_seperator) zip $(ZIP6FLAGS) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) $(subst,LANGDIR_away/, $(ZIP6LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) \
-    $(FI)
-    $(COPY) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) $@.$(INPATH)
-    $(RM) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP6HELPVAR)_, $(@:db))} $(ZIP6DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP6FLAGS) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) $(subst,LANGDIR_away/, $(ZIP6LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) $@.$(INPATH)
+    $(COMMAND_ECHO)$(RM) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT)
 .ELSE			# "$(ZIP6DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
-    zip $(ZIP6FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP6LIST) $(subst,LANGDIR,{$(subst,$(ZIP6HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP6FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP6LIST) $(subst,LANGDIR,{$(subst,$(ZIP6HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
+	    $(FI)
     @@-$(GNUCOPY) -p $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $@.$(INPATH)
     @-$(RM) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
 .ENDIF			# "$(ZIP6DIR)" != ""
@@ -751,17 +739,17 @@ $(ZIP6TARGETN) : delzip $(ZIP6DEPS)
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP6DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP6HELPVAR)_, $(@:db))} $(ZIP6DIR)) $(command_seperator) zip $(ZIP6FLAGS) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) $(subst,LANGDIR_away/, $(ZIP6LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) \
-    $(FI)
-    $(COPY) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT)  $@ 
-    $(RM) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP6HELPVAR)_, $(@:db))} $(ZIP6DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP6FLAGS) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) $(subst,LANGDIR_away/, $(ZIP6LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT)  $@ 
+    $(COMMAND_ECHO)$(RM) $(ZIP6TMP).$(ZIP6TARGET){$(subst,$(ZIP6HELPVAR),_ $(@:db))}$(ZIP6EXT)
 .ELSE			# "$(ZIP6DIR)" != ""
-    zip $(ZIP6FLAGS) $@ $(foreach,j,$(ZIP6LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP6TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $@ $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP6FLAGS) $@ $(foreach,j,$(ZIP6LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP6TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $@ $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
+	    $(FI)
 .ENDIF			# "$(ZIP6DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
 .ENDIF
@@ -826,50 +814,48 @@ ZIP7HELPVAR=$(BIN)/$(ZIP7TARGET)
 .ENDIF			# "$(common_build_zip)"!=""
 
 $(ZIP7DEPFILE) :
-    echo # > $(MISC)/$(@:f)
+	@echo # > $(MISC)/$(@:f)
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP7DIR)" != ""
-    @echo type 1
-    -$(MKDIRHIER) $(ZIP7DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP7DIR))) $(command_seperator) $(ZIPDEP) $(ZIP7FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP7DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP7EXT)/))) $(foreach,j,$(ZIP7LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP7TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP7DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP7DIR))) $(command_seperator) $(ZIPDEP) $(ZIP7FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP7DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP7EXT)/))) $(foreach,j,$(ZIP7LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP7TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP7DIR)" != ""
-    @echo type 2
-    -$(ZIPDEP) $(ZIP7FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP7EXT)/))) $(foreach,j,$(ZIP7LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP7TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP7FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP7EXT)/))) $(foreach,j,$(ZIP7LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP7TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP7DIR)" != ""
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP7DIR)" != ""
-    @echo type 3
-    -$(MKDIRHIER) $(ZIP7DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP7DIR))) $(command_seperator) $(ZIPDEP) $(ZIP7FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP7DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP7EXT)/)) $(foreach,j,$(ZIP7LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP7TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP7DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP7DIR))) $(command_seperator) $(ZIPDEP) $(ZIP7FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP7DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP7EXT)/)) $(foreach,j,$(ZIP7LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP7TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP7DIR)" != ""
-    @echo type 4
-    -$(ZIPDEP) $(ZIP7FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP7EXT)/)) $(foreach,j,$(ZIP7LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP7TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP7FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP7EXT)/)) $(foreach,j,$(ZIP7LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP7TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP7DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
     @echo $(@:n:s#\#/#) : makefile.mk >> $(MISC)/$(@:f)
 
 
 $(ZIP7TARGETN) : delzip $(ZIP7DEPS)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@$(!eq,$?,$(?:s/delzip/zzz/) -$(RM) echo) $(uniq $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@))
     @$(eq,$?,$(?:s/delzip/zzz/) noop echo ) rebuilding zipfiles
     @echo ------------------------------ $(eq,$?,$(?:s/delzip/zzz/) >&$(NULLDEV) )
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP7DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP7HELPVAR)_, $(@:db))} $(ZIP7DIR)) $(command_seperator) zip $(ZIP7FLAGS) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) $(subst,LANGDIR_away/, $(ZIP7LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) \
-    $(FI)
-    $(COPY) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) $@.$(INPATH)
-    $(RM) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP7HELPVAR)_, $(@:db))} $(ZIP7DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP7FLAGS) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) $(subst,LANGDIR_away/, $(ZIP7LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) $@.$(INPATH)
+    $(COMMAND_ECHO)$(RM) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT)
 .ELSE			# "$(ZIP7DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
-    zip $(ZIP7FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP7LIST) $(subst,LANGDIR,{$(subst,$(ZIP7HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP7FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP7LIST) $(subst,LANGDIR,{$(subst,$(ZIP7HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
+	    $(FI)
     @@-$(GNUCOPY) -p $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $@.$(INPATH)
     @-$(RM) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
 .ENDIF			# "$(ZIP7DIR)" != ""
@@ -879,17 +865,17 @@ $(ZIP7TARGETN) : delzip $(ZIP7DEPS)
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP7DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP7HELPVAR)_, $(@:db))} $(ZIP7DIR)) $(command_seperator) zip $(ZIP7FLAGS) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) $(subst,LANGDIR_away/, $(ZIP7LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) \
-    $(FI)
-    $(COPY) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT)  $@ 
-    $(RM) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP7HELPVAR)_, $(@:db))} $(ZIP7DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP7FLAGS) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) $(subst,LANGDIR_away/, $(ZIP7LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT)  $@ 
+    $(COMMAND_ECHO)$(RM) $(ZIP7TMP).$(ZIP7TARGET){$(subst,$(ZIP7HELPVAR),_ $(@:db))}$(ZIP7EXT)
 .ELSE			# "$(ZIP7DIR)" != ""
-    zip $(ZIP7FLAGS) $@ $(foreach,j,$(ZIP7LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP7TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $@ $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP7FLAGS) $@ $(foreach,j,$(ZIP7LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP7TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $@ $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
+	    $(FI)
 .ENDIF			# "$(ZIP7DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
 .ENDIF
@@ -954,50 +940,48 @@ ZIP8HELPVAR=$(BIN)/$(ZIP8TARGET)
 .ENDIF			# "$(common_build_zip)"!=""
 
 $(ZIP8DEPFILE) :
-    echo # > $(MISC)/$(@:f)
+	@echo # > $(MISC)/$(@:f)
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP8DIR)" != ""
-    @echo type 1
-    -$(MKDIRHIER) $(ZIP8DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP8DIR))) $(command_seperator) $(ZIPDEP) $(ZIP8FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP8DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP8EXT)/))) $(foreach,j,$(ZIP8LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP8TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP8DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP8DIR))) $(command_seperator) $(ZIPDEP) $(ZIP8FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP8DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP8EXT)/))) $(foreach,j,$(ZIP8LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP8TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP8DIR)" != ""
-    @echo type 2
-    -$(ZIPDEP) $(ZIP8FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP8EXT)/))) $(foreach,j,$(ZIP8LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP8TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP8FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP8EXT)/))) $(foreach,j,$(ZIP8LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP8TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP8DIR)" != ""
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP8DIR)" != ""
-    @echo type 3
-    -$(MKDIRHIER) $(ZIP8DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP8DIR))) $(command_seperator) $(ZIPDEP) $(ZIP8FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP8DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP8EXT)/)) $(foreach,j,$(ZIP8LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP8TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP8DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP8DIR))) $(command_seperator) $(ZIPDEP) $(ZIP8FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP8DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP8EXT)/)) $(foreach,j,$(ZIP8LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP8TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP8DIR)" != ""
-    @echo type 4
-    -$(ZIPDEP) $(ZIP8FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP8EXT)/)) $(foreach,j,$(ZIP8LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP8TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP8FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP8EXT)/)) $(foreach,j,$(ZIP8LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP8TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP8DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
     @echo $(@:n:s#\#/#) : makefile.mk >> $(MISC)/$(@:f)
 
 
 $(ZIP8TARGETN) : delzip $(ZIP8DEPS)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@$(!eq,$?,$(?:s/delzip/zzz/) -$(RM) echo) $(uniq $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@))
     @$(eq,$?,$(?:s/delzip/zzz/) noop echo ) rebuilding zipfiles
     @echo ------------------------------ $(eq,$?,$(?:s/delzip/zzz/) >&$(NULLDEV) )
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP8DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP8HELPVAR)_, $(@:db))} $(ZIP8DIR)) $(command_seperator) zip $(ZIP8FLAGS) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) $(subst,LANGDIR_away/, $(ZIP8LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) \
-    $(FI)
-    $(COPY) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) $@.$(INPATH)
-    $(RM) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP8HELPVAR)_, $(@:db))} $(ZIP8DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP8FLAGS) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) $(subst,LANGDIR_away/, $(ZIP8LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) $@.$(INPATH)
+    $(COMMAND_ECHO)$(RM) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT)
 .ELSE			# "$(ZIP8DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
-    zip $(ZIP8FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP8LIST) $(subst,LANGDIR,{$(subst,$(ZIP8HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP8FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP8LIST) $(subst,LANGDIR,{$(subst,$(ZIP8HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
+	    $(FI)
     @@-$(GNUCOPY) -p $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $@.$(INPATH)
     @-$(RM) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
 .ENDIF			# "$(ZIP8DIR)" != ""
@@ -1007,17 +991,17 @@ $(ZIP8TARGETN) : delzip $(ZIP8DEPS)
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP8DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP8HELPVAR)_, $(@:db))} $(ZIP8DIR)) $(command_seperator) zip $(ZIP8FLAGS) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) $(subst,LANGDIR_away/, $(ZIP8LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) \
-    $(FI)
-    $(COPY) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT)  $@ 
-    $(RM) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP8HELPVAR)_, $(@:db))} $(ZIP8DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP8FLAGS) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) $(subst,LANGDIR_away/, $(ZIP8LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT)  $@ 
+    $(COMMAND_ECHO)$(RM) $(ZIP8TMP).$(ZIP8TARGET){$(subst,$(ZIP8HELPVAR),_ $(@:db))}$(ZIP8EXT)
 .ELSE			# "$(ZIP8DIR)" != ""
-    zip $(ZIP8FLAGS) $@ $(foreach,j,$(ZIP8LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP8TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $@ $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP8FLAGS) $@ $(foreach,j,$(ZIP8LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP8TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $@ $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
+	    $(FI)
 .ENDIF			# "$(ZIP8DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
 .ENDIF
@@ -1082,50 +1066,48 @@ ZIP9HELPVAR=$(BIN)/$(ZIP9TARGET)
 .ENDIF			# "$(common_build_zip)"!=""
 
 $(ZIP9DEPFILE) :
-    echo # > $(MISC)/$(@:f)
+	@echo # > $(MISC)/$(@:f)
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP9DIR)" != ""
-    @echo type 1
-    -$(MKDIRHIER) $(ZIP9DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP9DIR))) $(command_seperator) $(ZIPDEP) $(ZIP9FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP9DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP9EXT)/))) $(foreach,j,$(ZIP9LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP9TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP9DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP9DIR))) $(command_seperator) $(ZIPDEP) $(ZIP9FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP9DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP9EXT)/))) $(foreach,j,$(ZIP9LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP9TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP9DIR)" != ""
-    @echo type 2
-    -$(ZIPDEP) $(ZIP9FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP9EXT)/))) $(foreach,j,$(ZIP9LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP9TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP9FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP9EXT)/))) $(foreach,j,$(ZIP9LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP9TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP9DIR)" != ""
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP9DIR)" != ""
-    @echo type 3
-    -$(MKDIRHIER) $(ZIP9DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP9DIR))) $(command_seperator) $(ZIPDEP) $(ZIP9FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP9DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP9EXT)/)) $(foreach,j,$(ZIP9LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP9TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP9DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP9DIR))) $(command_seperator) $(ZIPDEP) $(ZIP9FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP9DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP9EXT)/)) $(foreach,j,$(ZIP9LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP9TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP9DIR)" != ""
-    @echo type 4
-    -$(ZIPDEP) $(ZIP9FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP9EXT)/)) $(foreach,j,$(ZIP9LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP9TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP9FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP9EXT)/)) $(foreach,j,$(ZIP9LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP9TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP9DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
     @echo $(@:n:s#\#/#) : makefile.mk >> $(MISC)/$(@:f)
 
 
 $(ZIP9TARGETN) : delzip $(ZIP9DEPS)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@$(!eq,$?,$(?:s/delzip/zzz/) -$(RM) echo) $(uniq $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@))
     @$(eq,$?,$(?:s/delzip/zzz/) noop echo ) rebuilding zipfiles
     @echo ------------------------------ $(eq,$?,$(?:s/delzip/zzz/) >&$(NULLDEV) )
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP9DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP9HELPVAR)_, $(@:db))} $(ZIP9DIR)) $(command_seperator) zip $(ZIP9FLAGS) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) $(subst,LANGDIR_away/, $(ZIP9LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) \
-    $(FI)
-    $(COPY) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) $@.$(INPATH)
-    $(RM) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP9HELPVAR)_, $(@:db))} $(ZIP9DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP9FLAGS) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) $(subst,LANGDIR_away/, $(ZIP9LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) $@.$(INPATH)
+    $(COMMAND_ECHO)$(RM) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT)
 .ELSE			# "$(ZIP9DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
-    zip $(ZIP9FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP9LIST) $(subst,LANGDIR,{$(subst,$(ZIP9HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP9FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP9LIST) $(subst,LANGDIR,{$(subst,$(ZIP9HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
+	    $(FI)
     @@-$(GNUCOPY) -p $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $@.$(INPATH)
     @-$(RM) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
 .ENDIF			# "$(ZIP9DIR)" != ""
@@ -1135,17 +1117,17 @@ $(ZIP9TARGETN) : delzip $(ZIP9DEPS)
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP9DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP9HELPVAR)_, $(@:db))} $(ZIP9DIR)) $(command_seperator) zip $(ZIP9FLAGS) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) $(subst,LANGDIR_away/, $(ZIP9LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) \
-    $(FI)
-    $(COPY) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT)  $@ 
-    $(RM) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP9HELPVAR)_, $(@:db))} $(ZIP9DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP9FLAGS) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) $(subst,LANGDIR_away/, $(ZIP9LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT)  $@ 
+    $(COMMAND_ECHO)$(RM) $(ZIP9TMP).$(ZIP9TARGET){$(subst,$(ZIP9HELPVAR),_ $(@:db))}$(ZIP9EXT)
 .ELSE			# "$(ZIP9DIR)" != ""
-    zip $(ZIP9FLAGS) $@ $(foreach,j,$(ZIP9LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP9TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $@ $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP9FLAGS) $@ $(foreach,j,$(ZIP9LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP9TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $@ $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
+	    $(FI)
 .ENDIF			# "$(ZIP9DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
 .ENDIF
@@ -1210,50 +1192,48 @@ ZIP10HELPVAR=$(BIN)/$(ZIP10TARGET)
 .ENDIF			# "$(common_build_zip)"!=""
 
 $(ZIP10DEPFILE) :
-    echo # > $(MISC)/$(@:f)
+	@echo # > $(MISC)/$(@:f)
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP10DIR)" != ""
-    @echo type 1
-    -$(MKDIRHIER) $(ZIP10DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP10DIR))) $(command_seperator) $(ZIPDEP) $(ZIP10FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP10DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP10EXT)/))) $(foreach,j,$(ZIP10LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP10TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP10DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP10DIR))) $(command_seperator) $(ZIPDEP) $(ZIP10FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP10DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP10EXT)/))) $(foreach,j,$(ZIP10LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP10TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP10DIR)" != ""
-    @echo type 2
-    -$(ZIPDEP) $(ZIP10FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP10EXT)/))) $(foreach,j,$(ZIP10LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP10TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP10FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP10EXT)/))) $(foreach,j,$(ZIP10LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP10TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP10DIR)" != ""
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP10DIR)" != ""
-    @echo type 3
-    -$(MKDIRHIER) $(ZIP10DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP10DIR))) $(command_seperator) $(ZIPDEP) $(ZIP10FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP10DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP10EXT)/)) $(foreach,j,$(ZIP10LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP10TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP10DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP10DIR))) $(command_seperator) $(ZIPDEP) $(ZIP10FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP10DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP10EXT)/)) $(foreach,j,$(ZIP10LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP10TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP10DIR)" != ""
-    @echo type 4
-    -$(ZIPDEP) $(ZIP10FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP10EXT)/)) $(foreach,j,$(ZIP10LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP10TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP10FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP10EXT)/)) $(foreach,j,$(ZIP10LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP10TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP10DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
     @echo $(@:n:s#\#/#) : makefile.mk >> $(MISC)/$(@:f)
 
 
 $(ZIP10TARGETN) : delzip $(ZIP10DEPS)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@$(!eq,$?,$(?:s/delzip/zzz/) -$(RM) echo) $(uniq $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@))
     @$(eq,$?,$(?:s/delzip/zzz/) noop echo ) rebuilding zipfiles
     @echo ------------------------------ $(eq,$?,$(?:s/delzip/zzz/) >&$(NULLDEV) )
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP10DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP10HELPVAR)_, $(@:db))} $(ZIP10DIR)) $(command_seperator) zip $(ZIP10FLAGS) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) $(subst,LANGDIR_away/, $(ZIP10LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) \
-    $(FI)
-    $(COPY) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) $@.$(INPATH)
-    $(RM) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP10HELPVAR)_, $(@:db))} $(ZIP10DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP10FLAGS) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) $(subst,LANGDIR_away/, $(ZIP10LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) $@.$(INPATH)
+    $(COMMAND_ECHO)$(RM) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT)
 .ELSE			# "$(ZIP10DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
-    zip $(ZIP10FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP10LIST) $(subst,LANGDIR,{$(subst,$(ZIP10HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP10FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP10LIST) $(subst,LANGDIR,{$(subst,$(ZIP10HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
+	    $(FI)
     @@-$(GNUCOPY) -p $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $@.$(INPATH)
     @-$(RM) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
 .ENDIF			# "$(ZIP10DIR)" != ""
@@ -1263,17 +1243,17 @@ $(ZIP10TARGETN) : delzip $(ZIP10DEPS)
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP10DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP10HELPVAR)_, $(@:db))} $(ZIP10DIR)) $(command_seperator) zip $(ZIP10FLAGS) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) $(subst,LANGDIR_away/, $(ZIP10LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) \
-    $(FI)
-    $(COPY) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT)  $@ 
-    $(RM) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP10HELPVAR)_, $(@:db))} $(ZIP10DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP10FLAGS) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) $(subst,LANGDIR_away/, $(ZIP10LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT)  $@ 
+    $(COMMAND_ECHO)$(RM) $(ZIP10TMP).$(ZIP10TARGET){$(subst,$(ZIP10HELPVAR),_ $(@:db))}$(ZIP10EXT)
 .ELSE			# "$(ZIP10DIR)" != ""
-    zip $(ZIP10FLAGS) $@ $(foreach,j,$(ZIP10LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP10TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $@ $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP10FLAGS) $@ $(foreach,j,$(ZIP10LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP10TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $@ $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
+	    $(FI)
 .ENDIF			# "$(ZIP10DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
 .ENDIF
diff --git solenv/inc/ant.mk solenv/inc/ant.mk
index 6c7d9b2..176a00e 100644
--- solenv/inc/ant.mk
+++ solenv/inc/ant.mk
@@ -58,7 +58,7 @@ CLASSPATH!:=$(CLASSPATH)$(PATH_SEPERATOR)$(ANT_CLASSPATH)$(PATH_SEPERATOR)$(JAVA
 # --- TARGETS -----------------------------------------------------
 
 $(CLASSDIR)/solar.properties : $(SOLARVERSION)/$(INPATH)/inc$(UPDMINOREXT)/minormkchanged.flg $(SOLARENV)/inc/ant.properties
-    @echo Making: $@
+	@echo "Making:   " $@
     @echo solar.build=$(BUILD) > $@
     @echo solar.rscversion=$(USQ)$(RSCVERSION)$(USQ) >> $@
     @echo solar.rscrevision=$(USQ)$(RSCREVISION)$(USQ) >> $@
diff --git solenv/inc/extension_post.mk solenv/inc/extension_post.mk
index 25dfa76..120fc10 100644
--- solenv/inc/extension_post.mk
+++ solenv/inc/extension_post.mk
@@ -57,20 +57,20 @@ COMPONENT_FILES_SRC*=./
 # here in case of "just copied" .xcu files
 $(COMPONENT_FILES) : $$(@:s|$(fixme2)|$(MISC)|:s|$(EXTENSIONDIR)/|$(COMPONENT_FILES_SRC)|)
     @@-$(MKDIRHIER) $(@:s|$(fixme2)|$(MISC)|:d)
-    $(COPY) $< $(@:s|$(fixme2)|$(MISC)|)
+    $(COMMAND_ECHO)$(COPY) $< $(@:s|$(fixme2)|$(MISC)|)
 .ENDIF			# "$(COMPONENT_FILES)"!=""
 
 .IF "$(COMPONENT_JARFILES)"!=""
 $(COMPONENT_JARFILES) : $(CLASSDIR)/$$(@:f)
     @@-$(MKDIRHIER) $(@:d)
-    $(COPY) $< $@
+    $(COMMAND_ECHO)$(COPY) $< $@
 .ENDIF			# "$(COMPONENT_JARFILES)"!=""
 
 .IF "$(COMPONENT_LIBRARIES)"!=""
 # TODO(Q3): strip the binary?
 $(COMPONENT_LIBRARIES) : $(DLLDEST)/$$(@:f)
     @@-$(MKDIRHIER) $(@:d)
-    $(COPY) $< $@
+    $(COMMAND_ECHO)$(COPY) $< $@
 .IF "$(OS)$(CPU)"=="WNTI"
 .IF "$(COM)"=="GCC"
    $(GNUCOPY) $(SOLARBINDIR)/mingwm10.dll $(EXTENSIONDIR)
@@ -129,15 +129,15 @@
     @@-$(MKDIRHIER) $(@:d)
     @echo LAST_WITH_LANG=$(WITH_LANG) > $(MISC)/$(TARGET)_lang_track.mk
 
-	$(PERL) $(SOLARENV)/bin/licinserter.pl $(DESCRIPTION_SRC) $(COMPONENT_LIC_TEMPL) $@.1.$(EXTNAME)
+	$(COMMAND_ECHO)$(PERL) $(SOLARENV)/bin/licinserter.pl $(DESCRIPTION_SRC) $(COMPONENT_LIC_TEMPL) $@.1.$(EXTNAME)
 
-	$(PERL) $(SOLARENV)/bin$/transform_description.pl $@.1.$(EXTNAME) $@.2.$(EXTNAME)
+	$(COMMAND_ECHO)$(PERL) $(SOLARENV)/bin$/transform_description.pl $@.1.$(EXTNAME) $@.2.$(EXTNAME)
 	@@-$(RM) $@.1.$(EXTNAME)
 
-	$(TYPE) $@.2.$(EXTNAME) | sed s/UPDATED_IDENTIFIER/$(IMPLEMENTATION_IDENTIFIER)/ >  $@.3.$(EXTNAME)
+	$(COMMAND_ECHO)$(TYPE) $@.2.$(EXTNAME) | sed s/UPDATED_IDENTIFIER/$(IMPLEMENTATION_IDENTIFIER)/ >  $@.3.$(EXTNAME)
 	@@-$(RM) $@.2.$(EXTNAME)
 
-	$(TYPE) $@.3.$(EXTNAME) | sed s/UPDATED_SUPPORTED_PLATFORM/$(PLATFORMID)/ > $@
+	$(COMMAND_ECHO)$(TYPE) $@.3.$(EXTNAME) | sed s/UPDATED_SUPPORTED_PLATFORM/$(PLATFORMID)/ > $@
  	@@-$(RM) $@.3.$(EXTNAME)
 
 .ENDIF			# "$(DESCRIPTION)"!=""
@@ -151,7 +151,7 @@ PACKLICDEPS=$(CUSTOM_LICENSE)
 .IF "$(PACKLICS)"!=""
 $(PACKLICS) : $(PACKLICDEPS)
     @@-$(MKDIRHIER) $(@:d)
-    $(GNUCOPY) $< $@
+	$(COMMAND_ECHO)$(GNUCOPY) $< $@
 .ENDIF			# "$(PACKLICS)"!=""
 
 .IF "$(COMPONENT_MANIFEST)"!=""
@@ -159,9 +159,9 @@ $(PACKLICS) : $(PACKLICDEPS)
 $(COMPONENT_MANIFEST) : $(MANIFEST_SRC) $(MANIFEST_DEPS)
     @@-$(MKDIRHIER) $(@:d)
 .IF "$(COMPONENT_MANIFEST_GENERIC)" == ""
-    $(TYPE) $(MANIFEST_SRC) | $(SED) "s/SHARED_EXTENSION/$(DLLPOST)/" | $(SED) "s/EXEC_EXTENSION/$(EXECPOST)/" > $@
+	$(COMMAND_ECHO)$(TYPE) $(MANIFEST_SRC) | $(SED) "s/SHARED_EXTENSION/$(DLLPOST)/" | $(SED) "s/EXEC_EXTENSION/$(EXECPOST)/" > $@
 .ELSE			# "$(COMPONENT_MANIFEST_GENERIC)" != ""
-    $(PERL) $(SOLARENV)/bin/makemani.pl $(PRJ)/util/manifest.xml $(EXTENSIONDIR) $(COMPONENT_MANIFEST_SEARCHDIR) $(@:d:d)
+    $(COMMAND_ECHO)$(PERL) $(SOLARENV)/bin/makemani.pl $(PRJ)/util/manifest.xml $(EXTENSIONDIR) $(COMPONENT_MANIFEST_SEARCHDIR) $(@:d:d)
 .ENDIF			# "$(COMPONENT_MANIFEST_GENERIC)" != ""
 .ENDIF			# "$(COMPONENT_MANIFEST)"!=""
 
diff --git solenv/inc/pstrules.mk solenv/inc/pstrules.mk
index aa9813a..b8e2f21 100644
--- solenv/inc/pstrules.mk
+++ solenv/inc/pstrules.mk
@@ -38,40 +38,40 @@
 
 $(OBJ)/$(SECOND_BUILD)_%.obj : %.cxx
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $@
 .IF "$(GUI)"=="UNX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$(SECOND_BUILD)_$*.o $(CFLAGSINCXX)$(PWD)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$(SECOND_BUILD)_$*.o $(CFLAGSINCXX)$(PWD)/$*.cxx
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-     $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+ 	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ELSE
      @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ >& $(NULLDEV) $(FI)
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$(SECOND_BUILD)_$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$(SECOND_BUILD)_$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx
 .ENDIF
 
 $(OBJ)/$(SECOND_BUILD)_%.obj : %.c
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $@
 .IF "$(GUI)"=="UNX"
 .IF "$(TEST)"!=""
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSOBJ) -E $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$(SECOND_BUILD)_$*.o $*.c
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSOBJ) -E $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$(SECOND_BUILD)_$*.o $*.c
 .ELSE
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$(SECOND_BUILD)_$*.o $*.c
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$(SECOND_BUILD)_$*.o $*.c
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ENDIF
 .ELSE
     @$(TYPE) $(mktmp $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)\$(SECOND_BUILD)_$*.obj $*.c )
     @echo.
 .IF "$(COM)"=="GCC"
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)\$(SECOND_BUILD)_$*.obj $*.c
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)\$(SECOND_BUILD)_$*.obj $*.c
 .ELSE
-    $(CC) @$(mktmp $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)\$(SECOND_BUILD)_$*.obj $*.c )
+	$(COMMAND_ECHO)$(CC) @$(mktmp $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)\$(SECOND_BUILD)_$*.obj $*.c )
 .ENDIF
     $(SEMADEBUG)
 .ENDIF
@@ -82,40 +82,40 @@ $(OBJ)/$(SECOND_BUILD)_%.obj : %.c
 
 $(SLO)/$(SECOND_BUILD)_%.obj : %.cxx
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $@
 .IF "$(GUI)"=="UNX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$(SECOND_BUILD)_$*.o $(CFLAGSINCXX)$(PWD)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$(SECOND_BUILD)_$*.o $(CFLAGSINCXX)$(PWD)/$*.cxx
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-     $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+ 	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ELSE
     @-$(RM) $@
 .IF "$(COM)"=="GCC"
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$(SECOND_BUILD)_$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$(SECOND_BUILD)_$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx
 .ELSE
-    $(CXX) @$(mktmp $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$(SECOND_BUILD)_$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx )
+	$(COMMAND_ECHO)$(CXX) @$(mktmp $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$(SECOND_BUILD)_$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx )
 .ENDIF
 .ENDIF
 
 $(SLO)/$(SECOND_BUILD)_%.obj :  %.c
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $@
 .IF "$(GUI)"=="UNX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$(SECOND_BUILD)_$*.o $*.c
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$(SECOND_BUILD)_$*.o $*.c
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-     $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+ 	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ELSE
     @-$(RM) $@
 .IF "$(COM)"=="GCC"
-       $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$(SECOND_BUILD)_$*.obj $*.c 
+	   $(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$(SECOND_BUILD)_$*.obj $*.c 
 .ELSE
-       $(TYPE) $(mktmp $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$(SECOND_BUILD)_$*.obj $*.c )
-       $(CC) @$(mktmp $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$(SECOND_BUILD)_$*.obj $*.c )
+	   $(COMMAND_ECHO)$(TYPE) $(mktmp $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$(SECOND_BUILD)_$*.obj $*.c )
+	   $(COMMAND_ECHO)$(CC) @$(mktmp $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $($(SECOND_BUILD)CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$(SECOND_BUILD)_$*.obj $*.c )
 .ENDIF
 .ENDIF
 
@@ -179,7 +179,7 @@ REGEXP:='s/^[\#].*//'
 $(MISC)/%.exp : sce/%.sce
     @@-$(RM) $@
     @@-$(RM) $(@:d)$(@:b).tst
-    $(TYPE) $< | sed $(REGEXP) | sed "s/^/test_/" > $(@:d)$(@:b).tst
-    $(TYPE) $(@:d)$(@:b).tst | sed "/test_./ w $@"
+    $(COMMAND_ECHO)$(TYPE) $< | sed $(REGEXP) | sed "s/^/test_/" > $(@:d)$(@:b).tst
+    $(COMMAND_ECHO)$(TYPE) $(@:d)$(@:b).tst | sed "/test_./ w $@"
 
 .ENDIF			# "$(TESTDIR)"!=""
diff --git solenv/inc/rules.mk solenv/inc/rules.mk
index 17e84d0..3b13bb1 100644
--- solenv/inc/rules.mk
+++ solenv/inc/rules.mk
@@ -32,69 +32,75 @@
 MKFILENAME:=RULES.MK
 
 $(OBJ)/%.obj : %.cxx
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
+.ENDIF
     @echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(GUI)"=="UNX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(CFLAGSINCXX)$(PWD)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(CFLAGSINCXX)$(PWD)/$*.cxx
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
 .IF "$(noadjust)"==""   
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(noadjust)"==""   
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ELSE
     @@-$(RM) $@
 .IF "$(COM)"=="GCC"
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx 
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx 
 .ELSE
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx
 .ENDIF
 .ENDIF
 .IF "$(nodep)"==""
-    $(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
     @noop $(assign DEPS_MADE+:=o_$(@:f:s/.obj/.dpcc/))
 .ENDIF			# "$(nodep)"==""
 
 $(OBJ)/%.obj : %.cpp
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
+.ENDIF
     @echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(GUI)"=="UNX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(CFLAGSINCXX)$(PWD)/$*.cpp
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(CFLAGSINCXX)$(PWD)/$*.cpp
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ELSE
     @@-$(RM) $@
 .IF "$(COM)"=="GCC"
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cpp 
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cpp 
 .ELSE
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cpp
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cpp
 .ENDIF
 .ENDIF
 .IF "$(nodep)"==""
-    $(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
     @noop $(assign DEPS_MADE+:=o_$(@:f:s/.obj/.dpcc/))
 .ENDIF			# "$(nodep)"==""
 
 $(OBJ)/%.obj : %.cc
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
+.ENDIF
     @echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(GUI)"=="UNX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(CFLAGSINCXX)$(PWD)/$*.cc
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(CFLAGSINCXX)$(PWD)/$*.cc
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    +$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	@+$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ELSE
     @@$(RM) $@
 .IF "$(COM)"=="GCC"
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cc 
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cc 
 .ELSE
-    $(CXX) @$(mktmp $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cc )
+	$(COMMAND_ECHO)$(CXX) @$(mktmp $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cc )
 .ENDIF
 .ENDIF
 
@@ -113,22 +119,22 @@ $(SLO)/precompiled.% .PHONY:
 .IF "$(NETWORK_BUILD)"!=""
     -$(MKDIRHIER) $(PCHOUTDIR)
 .IF "$(HAVE_BIG_TMP)"==""
-    -$(COPY) $(SLO)/pch/precompiled_$(PRJNAME).hxx$(PCHPOST) $(PCHOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST) 
+	$(COMMAND_ECHO)-$(COPY) $(SLO)/pch/precompiled_$(PRJNAME).hxx$(PCHPOST) $(PCHOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST) 
 .ENDIF			# "$(HAVE_BIG_TMP)"==""
 .ENDIF			# "$(NETWORK_BUILD)"!=""
-    $(CXX) @$(mktmp -Fp$(PCHOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST) $(CFLAGS_CREATE_PCH) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGS_NO_EXCEPTIONS) -DEXCEPTIONS_OFF $(CFLAGSAPPEND) $(INCPCH)/precompiled_$(PRJNAME).cxx)
+	$(COMMAND_ECHO)$(CXX) @$(mktmp -Fp$(PCHOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST) $(CFLAGS_CREATE_PCH) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGS_NO_EXCEPTIONS) -DEXCEPTIONS_OFF $(CFLAGSAPPEND) $(INCPCH)/precompiled_$(PRJNAME).cxx)
 .IF "$(NETWORK_BUILD)"!=""
-    $(COPY) $(PCHOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST) $(SLO)/pch/precompiled_$(PRJNAME).hxx$(PCHPOST)
+	$(COMMAND_ECHO)$(COPY) $(PCHOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST) $(SLO)/pch/precompiled_$(PRJNAME).hxx$(PCHPOST)
 .IF "$(HAVE_BIG_TMP)"==""
-    $(RM) $(PCHOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST)
-    $(RMDIR) $(PCHOUTDIR)
+	$(COMMAND_ECHO)$(RM) $(PCHOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST)
+	$(COMMAND_ECHO)$(RMDIR) $(PCHOUTDIR)
 .ENDIF			# "$(HAVE_BIG_TMP)"==""
 .ENDIF			# "$(NETWORK_BUILD)"!=""
 .ELIF "$(COM)"=="GCC" && "$(CCNUMVER)">="000300040000"
-    $(CXX) -o$(SLO)/pch/precompiled_$(PRJNAME).hxx$(PCHPOST) $(CFLAGS_CREATE_PCH) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGS_NO_EXCEPTIONS) -DEXCEPTIONS_OFF $(CFLAGSAPPEND) $(INCPCH)/precompiled_$(PRJNAME).hxx
+	$(COMMAND_ECHO)$(CXX) -o$(SLO)/pch/precompiled_$(PRJNAME).hxx$(PCHPOST) $(CFLAGS_CREATE_PCH) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGS_NO_EXCEPTIONS) -DEXCEPTIONS_OFF $(CFLAGSAPPEND) $(INCPCH)/precompiled_$(PRJNAME).hxx
     @echo "#error Tried to use wrong precompiled header" > $(SLO)/pch/precompiled_$(PRJNAME).hxx
 .ELSE			# "$(COM)"=="MSC"
-    $(TOUCH) $(SLO)/pch/precompiled_$(PRJNAME).hxx$(PCHPOST)
+	@$(TOUCH) $(SLO)/pch/precompiled_$(PRJNAME).hxx$(PCHPOST)
 .ENDIF			# "$(COM)"=="MSC"
     @echo USED_PCHFLAGS=$(CFLAGS)$(CFLAGSCXX)$(CFLAGSCXXSLO)$(CFLAGSSLO)$(CDEFS)$(CDEFSSLO)$(CDEFSMT)$(CFLAGS_NO_EXCEPTIONS) -DEXCEPTIONS_OFF$(CFLAGSAPPEND)> $(INCCOM)/pch.mk
 
@@ -138,22 +144,22 @@ $(SLO)/precompiled_ex.% .PHONY:
 .IF "$(NETWORK_BUILD)"!=""
     -$(MKDIRHIER) $(PCHEXOUTDIR)
 .IF "$(HAVE_BIG_TMP)"==""
-    -$(COPY) $(SLO)/pch_ex/precompiled_$(PRJNAME).hxx$(PCHPOST) $(PCHEXOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST) 
+	$(COMMAND_ECHO)-$(COPY) $(SLO)/pch_ex/precompiled_$(PRJNAME).hxx$(PCHPOST) $(PCHEXOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST) 
 .ENDIF			# "$(HAVE_BIG_TMP)"==""
 .ENDIF			# "$(NETWORK_BUILD)"!=""
-    $(CXX) @$(mktmp -Fp$(PCHEXOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST) $(CFLAGS_CREATE_PCH:s/pchname/pchname_ex/) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSEXCEPTIONS) -DEXCEPTIONS_ON $(CFLAGSAPPEND) $(INCPCH)/precompiled_$(PRJNAME).cxx)
+	$(COMMAND_ECHO)$(CXX) @$(mktmp -Fp$(PCHEXOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST) $(CFLAGS_CREATE_PCH:s/pchname/pchname_ex/) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSEXCEPTIONS) -DEXCEPTIONS_ON $(CFLAGSAPPEND) $(INCPCH)/precompiled_$(PRJNAME).cxx)
 .IF "$(NETWORK_BUILD)"!=""
-    $(COPY) $(PCHEXOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST) $(SLO)/pch_ex/precompiled_$(PRJNAME).hxx$(PCHPOST)
+	$(COMMAND_ECHO)$(COPY) $(PCHEXOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST) $(SLO)/pch_ex/precompiled_$(PRJNAME).hxx$(PCHPOST)
 .IF "$(HAVE_BIG_TMP)"==""
-    $(RM) $(PCHEXOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST)
-    $(RMDIR) $(PCHEXOUTDIR)
+	$(COMMAND_ECHO)$(RM) $(PCHEXOUTDIR)/precompiled_$(PRJNAME).hxx$(PCHPOST)
+	$(COMMAND_ECHO)$(RMDIR) $(PCHEXOUTDIR)
 .ENDIF			# "$(HAVE_BIG_TMP)"==""
 .ENDIF			# "$(NETWORK_BUILD)"!=""
 .ELIF "$(COM)"=="GCC" && "$(CCNUMVER)">="000300040000"
-    $(CXX) -o$(SLO)/pch_ex/precompiled_$(PRJNAME).hxx$(PCHPOST) $(CFLAGS_CREATE_PCH) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSEXCEPTIONS) -DEXCEPTIONS_ON $(CFLAGSAPPEND) $(INCPCH)/precompiled_$(PRJNAME).hxx
+	$(COMMAND_ECHO)$(CXX) -o$(SLO)/pch_ex/precompiled_$(PRJNAME).hxx$(PCHPOST) $(CFLAGS_CREATE_PCH) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSEXCEPTIONS) -DEXCEPTIONS_ON $(CFLAGSAPPEND) $(INCPCH)/precompiled_$(PRJNAME).hxx
     @echo "#error Tried to use wrong precompiled header" > $(SLO)/pch_ex/precompiled_$(PRJNAME).hxx
 .ELSE			# "$(COM)"=="MSC"
-    $(TOUCH) $(SLO)/pch_ex/precompiled_$(PRJNAME).hxx$(PCHPOST)
+	@$(TOUCH) $(SLO)/pch_ex/precompiled_$(PRJNAME).hxx$(PCHPOST)
 .ENDIF			# "$(COM)"=="MSC"
     @echo USED_EXCEPTIONS_PCHFLAGS=$(subst,$(CFLAGSDEBUG), $(CFLAGS))$(CFLAGSCXX)$(CFLAGSCXXSLO)$(CFLAGSSLO)$(CDEFS)$(CDEFSSLO)$(CDEFSMT)$(CFLAGSEXCEPTIONS) -DEXCEPTIONS_ON$(CFLAGSAPPEND)> $(INCCOM)/pch_ex.mk
 
@@ -162,7 +168,9 @@ $(SLO)/precompiled_ex.% .PHONY:
 .ENDIF			# "$(ENABLE_PCH)"!=""
 
 $(SLO)/%.obj : %.cxx
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
+.ENDIF
     @echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(ENABLE_PCH)"!="" && ( "$(PRJNAME)"!="sw" || "$(BUILD_SPECIAL)"!="TRUE" )
 # just a helper var	
@@ -178,237 +186,256 @@ $(SLO)/%.obj : %.cxx
 .ENDIF			# "$(ENABLE_PCH)"!=""
 .IF "$(GUI)"=="UNX"
 .IF "$(TEST)"!=""
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) -E  $(CFLAGSINCXX)$(PWD)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) -E  $(CFLAGSINCXX)$(PWD)/$*.cxx
 .ELSE
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CAPTURE_COMMAND) $(CXX) $(ACT_PCH_SWITCHES) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(CFLAGSINCXX)$(PWD)/$*.cxx $(CAPTURE_OUTPUT)
+	$(COMMAND_ECHO)$(CAPTURE_COMMAND) $(CXX) $(ACT_PCH_SWITCHES) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(CFLAGSINCXX)$(PWD)/$*.cxx $(CAPTURE_OUTPUT)
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"=="" && "$(CAPTURE_COMMAND)"==""
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ENDIF
 .ELSE			# "$(GUI)"=="UNX"
     @@-$(RM) $@
 .IF "$(COM)"=="GCC"
-    $(CAPTURE_COMMAND) $(CXX) $(ACT_PCH_SWITCHES) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx $(CAPTURE_OUTPUT)
+	$(COMMAND_ECHO)$(CAPTURE_COMMAND) $(CXX) $(ACT_PCH_SWITCHES) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx $(CAPTURE_OUTPUT)
 .ELSE
-    $(CAPTURE_COMMAND) $(CXX) $(ACT_PCH_SWITCHES) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx $(CAPTURE_OUTPUT)
+	$(COMMAND_ECHO)$(CAPTURE_COMMAND) $(CXX) $(ACT_PCH_SWITCHES) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx $(CAPTURE_OUTPUT)
 .ENDIF		    # "$(COM)"=="GCC"	
 .ENDIF			# "$(GUI)"=="UNX"
 .IF "$(nodep)"==""
 # fixme: write to file
-    $(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
     @noop $(assign DEPS_MADE+:=s_$(@:f:s/.obj/.dpcc/))
 .ENDIF			# "$(nodep)"==""
 
 $(SLO)/%.obj : %.cpp
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(GUI)"=="UNX"
 .IF "$(TEST)"!=""
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) -E  $(CFLAGSINCXX)$(PWD)/$*.cpp
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) -E  $(CFLAGSINCXX)$(PWD)/$*.cpp
 .ELSE
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(CFLAGSINCXX)$(PWD)/$*.cpp
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(CFLAGSINCXX)$(PWD)/$*.cpp
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ENDIF
 .ELSE
     @@-$(RM) $@
 .IF "$(COM)"=="GCC"
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cpp
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cpp
 .ELSE
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cpp
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cpp
 .ENDIF
 .ENDIF
 .IF "$(nodep)"==""
-    $(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
     @noop $(assign DEPS_MADE+:=s_$(@:f:s/.obj/.dpcc/))
 .ENDIF			# "$(nodep)"==""
 
 $(SLO)/%.obj : $(MISC)/%.cxx
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(OUTPATH)/misc/$(<:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(TEST)"!=""
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) -E  $(CFLAGSINCXX)$(MISC)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) -E  $(CFLAGSINCXX)$(MISC)/$*.cxx
 .ELSE
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(CFLAGSINCXX)$(MISC)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(CFLAGSINCXX)$(MISC)/$*.cxx
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ENDIF
 .ELSE
 .IF "$(COM)"=="GCC"
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(MISC)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(MISC)/$*.cxx
 .ELSE
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(MISC)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(MISC)/$*.cxx
 .ENDIF
 .ENDIF
 .IF "$(nodep)"==""
-    $(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $@ ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $@ ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
     @noop $(assign DEPS_MADE+:=s_$(@:f:s/.obj/.dpcc/))
 .ENDIF			# "$(nodep)"==""
 
 $(SLO)/%.obj : $(MISC)/%.cc
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(OUTPATH)/misc/$(<:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(TEST)"!=""
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) -E  $(CFLAGSINCXX)$(MISC)/$*.cc
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) -E  $(CFLAGSINCXX)$(MISC)/$*.cc
 .ELSE
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(CFLAGSINCXX)$(MISC)/$*.cc
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXSLO) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(CFLAGSINCXX)$(MISC)/$*.cc
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    +$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	@+$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ENDIF
 .ELSE
-    $(CXX) @$(mktmp $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(MISC)/$*.cc )
+	$(COMMAND_ECHO)$(CXX) @$(mktmp $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(CFLAGSINCXX)$(MISC)/$*.cc )
 .ENDIF
 
 $(OBJ)/%.obj : $(MISC)/%.cxx
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(OUTPATH)/misc/$(<:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(TEST)"!=""
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) -E  $(CFLAGSINCXX)$(MISC)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) -E  $(CFLAGSINCXX)$(MISC)/$*.cxx
 .ELSE
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(CFLAGSINCXX)$(MISC)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSCXXOBJ) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(CFLAGSINCXX)$(MISC)/$*.cxx
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ENDIF
 .ELSE
 .IF "$(COM)"=="GCC"
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(MISC)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(MISC)/$*.cxx
 .ELSE
-    $(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(MISC)/$*.cxx
+	$(COMMAND_ECHO)$(CXX) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(CFLAGSINCXX)$(MISC)/$*.cxx
 .ENDIF
 .ENDIF
 .IF "$(nodep)"==""
-    $(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
     @noop $(assign DEPS_MADE+:=o_$(@:f:s/.obj/.dpcc/))
 .ENDIF			# "$(nodep)"==""
 
 $(OBJ)/%.obj : %.c
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(GUI)"=="UNX"
 .IF "$(TEST)"!=""
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) -E $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $*.c
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) -E $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $*.c
 .ELSE
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $*.c
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $*.c
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
 .IF "$(noadjust)"==""   
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF			# "$(noadjust)"==""   
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ENDIF
 .ELSE
 .IF "$(COM)"=="GCC"
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $*.c
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $*.c
 .ELSE
+  .IF "$(VERBOSE)" == "TRUE"
     -@echo Cflags: $(CFLAGS) $(INCLUDE)
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $*.c
+  .ENDIF
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $*.c
 .ENDIF
 .ENDIF
 .IF "$(nodep)"==""
-    $(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
     @noop $(assign DEPS_MADE+:=o_$(@:f:s/.obj/.dpcc/))
 .ENDIF			# "$(nodep)"==""
 
 $(OBJ)/%.obj : $(MISC)/%.c
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(OUTPATH)/misc/$(<:f)
 .IF "$(GUI)"=="UNX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(MISC)/$*.c
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(MISC)/$*.c
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ELSE
     @@-$(RM) $@
 .IF "$(COM)"=="GCC"
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(MISC)/$*.c
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(MISC)/$*.c
 .ELSE
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(MISC)/$*.c
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(OBJ)/$*.obj $(MISC)/$*.c
 .ENDIF
 .ENDIF
 .IF "$(nodep)"==""
-    $(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
     @noop $(assign DEPS_MADE+:=o_$(@:f:s/.obj/.dpcc/))
 .ENDIF			# "$(nodep)"==""
 
 $(SLO)/%.obj : $(MISC)/%.c
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(OUTPATH)/misc/$(<:f)
 .IF "$(GUI)"=="UNX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(MISC)/$*.c
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(MISC)/$*.c
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ELSE
     @@-$(RM) $@
 .IF "$(COM)"=="GCC"
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(MISC)/$*.c 
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(MISC)/$*.c 
 .ELSE
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(MISC)/$*.c
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $(MISC)/$*.c
 .ENDIF
 .ENDIF
 .IF "$(nodep)"==""
-    $(TYPE) $(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< ) 
-    $(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
 # avoid _version objects (see tg_shl.mk) - quite hacky...
     @noop $(!eq,$@,$(@:s/_version.obj/.obj/) $(NULL) $(assign DEPS_MADE+:=s_$(@:f:s/.obj/.dpcc/)))
 .ENDIF			# "$(nodep)"==""
 
 $(SLO)/%.obj : %.c
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(GUI)"=="UNX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $*.c
+	$(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $*.c
 .IF "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
+    $(COMMAND_ECHO)$(ADJUSTVISIBILITY) -p $(@:s/.obj/.o/)
 .ENDIF          # "$(OS)"=="SOLARIS" && "$(product)"=="full" && "$(debug)"==""    
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ELSE
     @@-$(RM) $@
 .IF "$(COM)"=="GCC"
-       $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $*.c 
+	   $(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $*.c 
 .ELSE
-       $(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $*.c
+	   $(COMMAND_ECHO)$(CC) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO)/$*.obj $*.c
 .ENDIF
 .ENDIF
 .IF "$(nodep)"==""
-    $(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
     @noop $(assign DEPS_MADE+:=s_$(@:f:s/.obj/.dpcc/))
 .ENDIF			# "$(nodep)"==""
 
 # Objective-C files
 $(OBJ)/%.obj : %.m
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(OS)"=="MACOSX"
 .IF "$(TEST)"!=""
-    $(objc) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(OBJCFLAGS) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) -E $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $*.m
+	$(COMMAND_ECHO)$(objc) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(OBJCFLAGS) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) -E $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $*.m
 .ELSE
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(objc) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(OBJCFLAGS) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $*.m
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	$(COMMAND_ECHO)$(objc) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(OBJCFLAGS) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $*.m
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ENDIF
 .ELSE			# "$(OS)"=="MACOSX"
     @echo "No recipe for compiling Objective-C files is available for this platform"
@@ -416,36 +443,42 @@ $(OBJ)/%.obj : %.m
 
 # Objective-C files
 $(OBJ)/%.obj : $(MISC)/%.m
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(OUTPATH)/misc/$(<:f)
 .IF "$(OS)"=="MACOSX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(objc) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(OBJCFLAGS) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(MISC)/$*.m
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	$(COMMAND_ECHO)$(objc) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(OBJCFLAGS) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(MISC)/$*.m
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ELSE			# "$(OS)"=="MACOSX"
     @echo "No recipe for compiling Objective-C files is available for this platform"
 .ENDIF		"$(OS)"=="MACOSX"
 
 # Objective-C files
 $(SLO)/%.obj : $(MISC)/%.m
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(OUTPATH)/misc/$(<:f)
 .IF "$(OS)"=="MACOSX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(objc) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(OBJCFLAGS) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(MISC)/$*.m
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	$(COMMAND_ECHO)$(objc) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(OBJCFLAGS) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(MISC)/$*.m
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ELSE			# "$(OS)"=="MACOSX"
     @echo "No recipe for compiling Objective-C files is available for this platform"
 .ENDIF		"$(OS)"=="MACOSX"
 
 # Objective-C files
 $(SLO)/%.obj : %.m
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(OS)"=="MACOSX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(objc) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(OBJCFLAGS) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $*.m
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	$(COMMAND_ECHO)$(objc) $(CFLAGS) $(INCLUDE_C) $(CFLAGSCC) $(OBJCFLAGS) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $*.m
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ELSE			# "$(OS)"=="MACOSX"
     @echo "No recipe for compiling Objective-C files is available for this platform"
 .ENDIF		"$(OS)"=="MACOSX"
@@ -457,18 +490,20 @@ not_existing/o_%.dpcc : %.c;@noop $(assign all_local_obj+:=$<)
 
 # Objective-C++ files
 $(OBJ)/%.obj : %.mm
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(OS)"=="MACOSX"
 .IF "$(TEST)"!=""
-    $(objcpp) $(CFLAGS) $(INCLUDE) $(CFLAGSCC) $(OBJCXXFLAGS) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) -E $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $*.mm
+	$(COMMAND_ECHO)$(objcpp) $(CFLAGS) $(INCLUDE) $(CFLAGSCC) $(OBJCXXFLAGS) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) -E $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $*.mm
 .ELSE
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(objcpp) $(CFLAGS) $(INCLUDE) $(CFLAGSCC) $(OBJCXXFLAGS) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $*.mm
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	$(COMMAND_ECHO)$(objcpp) $(CFLAGS) $(INCLUDE) $(CFLAGSCC) $(OBJCXXFLAGS) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $*.mm
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .ENDIF
 .IF "$(nodep)"==""
-    $(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
     @noop $(assign DEPS_MADE+:=o_$(@:f:s/.obj/.dpcc/))
 .ENDIF			# "$(nodep)"==""
 .ELSE			# "$(OS)"=="MACOSX"
@@ -477,14 +512,16 @@ $(OBJ)/%.obj : %.mm
 
 # Objective-C++ files
 $(OBJ)/%.obj : $(MISC)/%.mm
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(OUTPATH)/misc/$(<:f)
 .IF "$(OS)"=="MACOSX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(objcpp) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(OBJCXXFLAGS) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(MISC)/$*.mm
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	$(COMMAND_ECHO)$(objcpp) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(OBJCXXFLAGS) $(CFLAGSOBJ) $(CDEFS) $(CDEFSOBJ) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(OBJ)/$*.o $(MISC)/$*.mm
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .IF "$(nodep)"==""
-    $(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< ) > $(MISC)/o_$(@:f:s/.obj/.dpcc/)
     @noop $(assign DEPS_MADE+:=o_$(@:f:s/.obj/.dpcc/))
 .ENDIF			# "$(nodep)"==""
 .ELSE			# "$(OS)"=="MACOSX"
@@ -493,14 +530,16 @@ $(OBJ)/%.obj : $(MISC)/%.mm
 
 # Objective-C++ files
 $(SLO)/%.obj : $(MISC)/%.mm
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(OUTPATH)/misc/$(<:f)
 .IF "$(OS)"=="MACOSX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(objcpp) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(OBJCXXFLAGS) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(MISC)/$*.mm
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	$(COMMAND_ECHO)$(objcpp) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(OBJCXXFLAGS) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $(MISC)/$*.mm
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .IF "$(nodep)"==""
-    $(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
     @noop $(assign DEPS_MADE+:=s_$(@:f:s/.obj/.dpcc/))
 .ENDIF			# "$(nodep)"==""
 .ELSE			# "$(OS)"=="MACOSX"
@@ -509,14 +548,16 @@ $(SLO)/%.obj : $(MISC)/%.mm
 
 # Objective-C++ files
 $(SLO)/%.obj : %.mm
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(OS)"=="MACOSX"
     @$(RM) $@ $(@:s/.obj/.o/)
-    $(objcpp) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(OBJCXXFLAGS) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $*.mm
-    $(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
+	$(COMMAND_ECHO)$(objcpp) $(CFLAGS) $(INCLUDE) $(CFLAGSCXX) $(OBJCXXFLAGS) $(CFLAGSSLO) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ) $(SLO)/$*.o $*.mm
+	@$(IFEXIST) $(@:s/.obj/.o/) $(THEN) $(TOUCH) $@ $(FI)
 .IF "$(nodep)"==""
-    $(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
+	$(COMMAND_ECHO)$(MAKEDEPEND) @$(mktmp -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< ) > $(MISC)/s_$(@:f:s/.obj/.dpcc/)
     @noop $(assign DEPS_MADE+:=s_$(@:f:s/.obj/.dpcc/))
 .ENDIF			# "$(nodep)"==""
 .ELSE			# "$(OS)"=="MACOSX"
@@ -524,7 +565,7 @@ $(SLO)/%.obj : %.mm
 .ENDIF			# "$(OS)"=="MACOSX"
 
 $(MISC)/%.dpslo :
-    @echo making .dpslo
+	@echo "Making:   " $(@:f)
     @@$(RM) $@
     @@-$(CDD) $(MISC) && $(!null,$(all_local_slo) $(TYPE:s/+//) echo #) $(foreach,i,$(all_local_slo:b:+".dpcc") s_$(i)) > $(@:f)
     @@-$(CDD) $(MISC) && $(!null,$(all_misc_slo) $(TYPE:s/+//) echo #) $(foreach,i,$(all_misc_slo:b:+".dpcc") s_$(i)) >> $(@:f)
@@ -532,7 +573,7 @@ $(MISC)/%.dpslo :
     @$(TYPE) $(mktmp $(TARGET)_known_dpcc+=$(all_local_slo:b:+".dpcc":^"s_") $(all_misc_slo:b:+".dpcc":^"s_")) >> $@
 
 $(MISC)/%.dpobj :
-    @echo making .dpobj
+	@echo "Making:   " $(@:f)
     @@$(RM) $@
     @@-$(CDD) $(MISC) && $(!null,$(all_local_obj) $(TYPE:s/+//) echo #) $(foreach,i,$(all_local_obj:b:+".dpcc") o_$(i)) > $(@:f)
     @@-$(CDD) $(MISC) && $(!null,$(all_misc_obj) $(TYPE:s/+//) echo #) $(foreach,i,$(all_misc_obj:b:+".dpcc") o_$(i)) >> $(@:f)
@@ -562,29 +603,29 @@ not_existing/o_%.dpcc : $(MISC)/%.mm;@noop $(assign all_misc_obj+:=$<)
 
 $(MISC)/s_%.dpcc : %.m
     @@-$(RM) $@
-    @$(MAKEDEPEND) -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< > $@
+	$(COMMAND_ECHO)$(MAKEDEPEND) -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< > $@
     @echo $@ : $(SLO)/$(<:b).obj >> $@
 
 $(MISC)/o_%.dpcc : %.m
     @@-$(RM) $@
-    @$(MAKEDEPEND) -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< > $@
+	$(COMMAND_ECHO)$(MAKEDEPEND) -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< > $@
     @echo $@ : $(OBJ)/$(<:b).obj >> $@
 
 $(MISC)/s_%.dpcc : $(MISC)/%.m
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"	
-    @$(MAKEDEPEND) -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< | sed s\#$(MISC)/\#\# > $@
+	$(COMMAND_ECHO)$(MAKEDEPEND) -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< | sed s\#$(MISC)/\#\# > $@
 .ELSE			# "$(GUI)"=="UNX"	
-    @$(MAKEDEPEND) -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< | $(SED) s/$(MISC:s/\/\\/)\\// > $@
+	$(COMMAND_ECHO)$(MAKEDEPEND) -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< | $(SED) s/$(MISC:s/\/\\/)\\// > $@
 .ENDIF			# "$(GUI)"=="UNX"	
     @echo $@ : $(SLO)/$(<:b).obj >> $@
 
 $(MISC)/o_%.dpcc : $(MISC)/%.m
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"	
-    @$(MAKEDEPEND) -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< | sed s\#$(MISC)/\#\# > $@
+	$(COMMAND_ECHO)$(MAKEDEPEND) -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< | sed s\#$(MISC)/\#\# > $@
 .ELSE			# "$(GUI)"=="UNX"	
-    @$(MAKEDEPEND) -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< | $(SED) s/$(MISC:s/\/\\/)\\// > $@
+	$(COMMAND_ECHO)$(MAKEDEPEND) -f - -p$(OBJ) $(MKDEPFLAGS) $(CDEFS) $(CDEFSOBJ) $(CDEFSMT) $< | $(SED) s/$(MISC:s/\/\\/)\\// > $@
 .ENDIF			# "$(GUI)"=="UNX"	
     @echo $@ : $(OBJ)/$(<:b).obj >> $@
 
@@ -592,7 +633,7 @@ $(MISC)/o_%.dpcc : $(MISC)/%.m
 
 $(MISC)/s_%.dpcc : %.s
     @@-$(RM) $@
-    @$(MAKEDEPEND) -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< > $@
+	$(COMMAND_ECHO)$(MAKEDEPEND) -f - -p$(SLO) $(MKDEPFLAGS) $(CDEFS) $(CDEFSSLO) $(CDEFSMT) $< > $@
     @echo $@ : $(SLO)/$(<:b).obj >> $@
 
 $(MISC)/s_%.dpcc : $(SLO)/%.obj
@@ -606,7 +647,7 @@ $(MISC)/o_%.dpcc : $(OBJ)/%.obj
 $(MISC)/%.dpsc :
     @@-$(RM) $@
     @@-$(MKDIR) $(MISC)/{$(subst,$(@:d:d:d), $(@:d:d))}
-    @$(MAKEDEPEND) -f - -p$(PAR)/{$(subst,$(@:d:d:d), $(@:d:d))} -o.par -D{$(subst,$(@:d:d:d:u), $(@:d:d:u))}_PRODUCT $(CDEFS) -DDLLPOSTFIX=$(DLLPOSTFIX) -I. -I$(INC) -I$(INCLOCAL) -I$(INCGUI) -I$(INCCOM) $(*:b).scp > $@
+	$(COMMAND_ECHO)$(MAKEDEPEND) -f - -p$(PAR)/{$(subst,$(@:d:d:d), $(@:d:d))} -o.par -D{$(subst,$(@:d:d:d:u), $(@:d:d:u))}_PRODUCT $(CDEFS) -DDLLPOSTFIX=$(DLLPOSTFIX) -I. -I$(INC) -I$(INCLOCAL) -I$(INCGUI) -I$(INCCOM) $(*:b).scp > $@
     @echo $@ : $(PAR)/{$(subst,$(@:d:d:d), $(@:d:d))}/$(*:b).par  >> $@
     @echo $(PAR)/{$(subst,$(@:d:d:d), $(@:d:d))}/$(*:b).par : $(*:b).scp >> $@
 
@@ -614,34 +655,42 @@ $(MISC)/%.dpsc :
 
 $(MISC)/%.dprc : 
     @@-$(RM) $@
-    @$(MAKEDEPEND) -f - -p$(RES) -o.res $(RCLANGFLAGS_{$(subst,$(@:d:d:d:u), $(@:d:d:u))}:u:s/ //) $(CDEFS) -DDLLPOSTFIX=$(DLLPOSTFIX) -I. -I$(INC) -I$(INCLOCAL) -I$(INCGUI) -I$(INCCOM) -I$(SOLARENV)/inc $(*:b).rc >> $@
+	$(COMMAND_ECHO)$(MAKEDEPEND) -f - -p$(RES) -o.res $(RCLANGFLAGS_{$(subst,$(@:d:d:d:u), $(@:d:d:u))}:u:s/ //) $(CDEFS) -DDLLPOSTFIX=$(DLLPOSTFIX) -I. -I$(INC) -I$(INCLOCAL) -I$(INCGUI) -I$(INCCOM) -I$(SOLARENV)/inc $(*:b).rc >> $@
 #	@echo $@ : $(RES)/{$(subst,$(@:d:d:d), $(@:d:d))}/$(*:b).res  >> $@
     @echo $@ : $(RES)/$(*:b).res  >> $@
 
 $(MISC)/%.dpr :
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------ 
+.ELSE
+	@echo > /dev/null
+.ENDIF
 .IF "$(nodep)"==""
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
-    dmake $(MFLAGS) $(MAKEFILE) $(CALLMACROS) NO_HIDS=true make_srs_deps=true $(DEPSRSFILES)
-    -$(TYPE) $(MISC)/$(TARGET).*.dprr >> $@
+	$(COMMAND_ECHO)dmake $(MFLAGS) $(MAKEFILE) $(CALLMACROS) NO_HIDS=true make_srs_deps=true $(DEPSRSFILES)
+	$(COMMAND_ECHO)-$(TYPE) $(MISC)/$(TARGET).*.dprr >> $@
 .ENDIF			# "$(nodep)"==""
 
 $(MISC)/%.dpz :
-    @echo ------------------------------
+.IF "$(VERBOSE)" == "TRUE"
+	@echo ------------------------------ 
+.ELSE
+	@echo > /dev/null
+.ENDIF
 .IF "$(nodep)"==""
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
-    dmake $(MFLAGS) $(MAKEFILE) $(CALLMACROS) make_zip_deps=true $(ZIPDEPFILES)
-    $(TYPE) $(ZIPDEPFILES) $(mktmp $(NULL)) | grep -v "CVS" | grep -v "\.svn" >> $@
-    echo zipdep_langs=$(alllangiso) >> $@
+    $(COMMAND_ECHO)dmake $(MFLAGS) $(MAKEFILE) $(CALLMACROS) make_zip_deps=true $(ZIPDEPFILES)
+	$(COMMAND_ECHO)$(TYPE) $(ZIPDEPFILES) $(mktmp $(NULL)) | grep -v "CVS" | grep -v "\.svn" >> $@
+	@echo zipdep_langs=$(alllangiso) >> $@
     @@-$(RM) $(ZIPDEPFILES)
 .ENDIF			# "$(nodep)"==""
 
 # Dependencies fuer java - Files
 
 $(MISC)/%.dpj :
-    @echo Making dpj...
+	@echo "Making:   " $(@:f)
 .IF "$(nodep)"!=""
 .IF "$(GUI)"=="UNX"
     @echo > $@
@@ -658,52 +707,56 @@ $(MISC)/%.dpj :
 .ENDIF			# "$(nodep)"==""
 
 $(SLO)/%.obj : %.asm
+.IF "$(VERBOSE)" == "TRUE"
        @echo ------------------------------
-       @echo Making: $@
+.ENDIF
+	   @echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(COM)"=="GCC"
 .IF "$(ASM)"=="ml"
-       $(ASM) $(AFLAGS) -D$(COM) /Fo$(SLO)/$*.obj $*.asm
+	   $(COMMAND_ECHO)$(ASM) $(AFLAGS) -D$(COM) /Fo$(SLO)/$*.obj $*.asm
        @@-$(RM) $*.err
 .ELSE			# "$(ASM)"=="ml"
         @@-$(RM) $@
-        $(ASM) $(AFLAGS) $*.asm,$(SLO)/$*.obj;
+		$(COMMAND_ECHO)$(ASM) $(AFLAGS) $*.asm,$(SLO)/$*.obj;
 .ENDIF			# "$(ASM)"=="ml"
 .ELSE
 .IF "$(COM)"=="WTC"
-        $(ASM) $(AFLAGS) -D$(COM) $*.asm -fo=$(SLO)/$*.obj
-        -$(IFEXIST) $*.err $(THEN) $(RM:s/+//) $*.err $(FI)
+		$(COMMAND_ECHO)$(ASM) $(AFLAGS) -D$(COM) $*.asm -fo=$(SLO)/$*.obj
+		@-$(IFEXIST) $*.err $(THEN) $(RM:s/+//) $*.err $(FI)
 .ELSE
 .IF "$(COM)"=="MSC"
 .IF "$(ASM)"=="ml"
-    $(ASM) $(AFLAGS) -D$(COM) /Fo$(SLO)/$*.obj $*.asm
-    -$(IFEXIST) $*.err $(THEN) $(RM:s/+//) $*.err $(FI)
+	$(COMMAND_ECHO)$(ASM) $(AFLAGS) -D$(COM) /Fo$(SLO)/$*.obj $*.asm
+	@-$(IFEXIST) $*.err $(THEN) $(RM:s/+//) $*.err $(FI)
 .ELSE			# "$(ASM)"=="ml"
     @@-$(RM) $@
-    $(ASM) $(AFLAGS) $*.asm,$(SLO)/$*.obj;
+	$(COMMAND_ECHO)$(ASM) $(AFLAGS) $*.asm,$(SLO)/$*.obj;
 .ENDIF			# "$(ASM)"=="ml"
 .ENDIF			 "$(COM)"=="MSC"
 .ENDIF
 .ENDIF
 
 $(OBJ)/%.obj : %.asm
+.IF "$(VERBOSE)" == "TRUE"
        @echo ------------------------------
-       @echo Making: $@
+.ENDIF
+	   @echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$<
 .IF "$(COM)"=="GCC"
 .IF "$(ASM)"=="ml"
-       $(ASM) $(AFLAGS) -D$(COM) /Fo$(OBJ)/$*.obj $*.asm
+	   $(COMMAND_ECHO)$(ASM) $(AFLAGS) -D$(COM) /Fo$(OBJ)/$*.obj $*.asm
        @@-$(RM) $*.err
 .ELSE			# "$(ASM)"=="ml"
         @@-$(RM) $@
-        $(ASM) $(AFLAGS) $*.asm,$(OBJ)/$*.obj;
+		$(COMMAND_ECHO)$(ASM) $(AFLAGS) $*.asm,$(OBJ)/$*.obj;
 .ENDIF			# "$(ASM)"=="ml"
 .ELSE
 .IF "$(COM)"=="MSC"
 .IF "$(ASM)"=="ml"
-    $(ASM) $(AFLAGS) -D$(COM) /Fo$(SLO)/$*.obj $*.asm
-    -$(IFEXIST) $*.err $(THEN) $(RM:s/+//) $*.err $(FI)
+	$(COMMAND_ECHO)$(ASM) $(AFLAGS) -D$(COM) /Fo$(SLO)/$*.obj $*.asm
+	@-$(IFEXIST) $*.err $(THEN) $(RM:s/+//) $*.err $(FI)
 .ELSE			# "$(ASM)"=="ml"
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ >& $(NULLDEV) $(FI)
-    $(ASM) $(AFLAGS) $*.asm,$(OBJ)/$*.obj;
+	$(COMMAND_ECHO)$(ASM) $(AFLAGS) $*.asm,$(OBJ)/$*.obj;
 .ENDIF			# "$(ASM)"=="ml"
 .ENDIF			 "$(COM)"=="MSC"
 .ENDIF
@@ -716,18 +769,20 @@ $(OUT)/ucrdoc/$(IDLPACKAGE)/%.urd : %.idl
 
 # generate hid files
 $(SRS)/%.hid : %.src
-    @echo ------------------------------
-    @echo Making hid $@
-    $(AUGMENT_LIBRARY_PATH) $(PERL) $(SOLARENV)/bin/mhids.pl $*.src $(SRS) $(PRJNAME) $(CDEFS) $(INCLUDE)
+.IF "$(VERBOSE)" == "TRUE"
+     @echo ------------------------------
+.ENDIF
+	@echo Compiling: $(PRJNAME)/$(PATH_IN_MODULE)/$(*:f).src
+	$(COMMAND_ECHO)$(AUGMENT_LIBRARY_PATH) $(PERL) $(SOLARENV)/bin/mhids.pl $*.src $(SRS) $(PRJNAME) $(CDEFS) $(INCLUDE)
 
 # make *.xml descriptions available in $(MISC)
 $(MISC)/%$($(WINVERSIONNAMES)_MAJOR).xml : %.xml
-    $(COPY) $< $@
+    $(COMMAND_ECHO)$(COPY) $< $@
 
 # dummy rule to make sure xml file is in place when used in settings.mk
 $(MISC)/%.mk : $(MISC)/%$($(WINVERSIONNAMES)_MAJOR).xml
-    $(TOUCH) $@
-    echo XML2MK_FILES += $(@:b) >> $@
+	@$(TOUCH) $@
+	@echo XML2MK_FILES += $(@:b) >> $@
 
 #generate descriptions from xml
 $(MISC)/%$($(WINVERSIONNAMES)_MAJOR)_description.cxx : $(MISC)/%$($(WINVERSIONNAMES)_MAJOR).xml 
@@ -735,7 +790,7 @@ $(MISC)/%$($(WINVERSIONNAMES)_MAJOR)_description.cxx : $(MISC)/%$($(WINVERSIONNA
 
 #generate private rdb
 $(BIN)/%.rdb: $(MISC)/%$($(WINVERSIONNAMES)_MAJOR).xml
-    $(RDBMAKER) -BUCR -O$(BIN)/$*.rdb @$(mktmp $(foreach,i,$($(@:b)_XML2CMPTYPES) -T$i ) $(COMPRDB))
+	$(COMMAND_ECHO)$(RDBMAKER) -BUCR -O$(BIN)/$*.rdb @$(mktmp $(foreach,i,$($(@:b)_XML2CMPTYPES) -T$i ) $(COMPRDB))
 
 #strip dos lineends
 $(MISC)/%.sh : %.sh
@@ -745,26 +800,27 @@ $(MISC)/%.sh : %.sh
 # merge targets
 .IF "$(WITH_LANG)"!=""
 $(COMMONMISC)/$(TARGET)/%.ulf : %.ulf
-    -$(MKDIR) $(@:d)
-    -$(RM) $@
-    $(ULFEX) -p $(PRJNAME) -i $(@:f) -o $(@).$(INPATH) -m $(LOCALIZESDF) -l all
-    $(RENAME) $@.$(INPATH) $@
-    -$(RM) $@.$(INPATH)
+	@echo "Making:   " $(@:f)
+    $(COMMAND_ECHO)-$(MKDIR) $(@:d)
+    $(COMMAND_ECHO)-$(RM) $@
+	$(COMMAND_ECHO)$(ULFEX) $(ULFEX_VERBOSITY) -p $(PRJNAME) -i $(@:f) -o $(@).$(INPATH) -m $(LOCALIZESDF) -l all
+    $(COMMAND_ECHO)$(RENAME) $@.$(INPATH) $@
+    $(COMMAND_ECHO)-$(RM) $@.$(INPATH)
 
 $(COMMONMISC)/$(TARGET)/%.xrb : %.xrb
-    -$(MKDIR) $(@:d)
-    -$(RM) $@
-    $(XMLEX) -t xrb -p $(PRJNAME) -i $(@:f) -o $(@).$(INPATH) -m $(LOCALIZESDF) -l all
-    $(RENAME) $@.$(INPATH) $@
-    -$(RM) $@.$(INPATH)
+    $(COMMAND_ECHO)-$(MKDIR) $(@:d)
+    $(COMMAND_ECHO)-$(RM) $@
+	$(COMMAND_ECHO)$(XMLEX) -t xrb -p $(PRJNAME) -i $(@:f) -o $(@).$(INPATH) -m $(LOCALIZESDF) -l all
+    $(COMMAND_ECHO)$(RENAME) $@.$(INPATH) $@
+    $(COMMAND_ECHO)-$(RM) $@.$(INPATH)
 
 $(COMMONMISC)/$(MYPATH)/%.xrm : %.xrm
-    -$(MKDIRHIER) $(@:d)
-    -$(RM) $@
-    echo trysdf = $(TRYSDF)
-    $(XRMEX) -p $(PRJNAME) -i $(@:f) -o $(@).$(INPATH) -m $(LOCALIZESDF) -l all
-    $(RENAME) $@.$(INPATH) $@
-    -$(RM) $@.$(INPATH)
+    $(COMMAND_ECHO)-$(MKDIRHIER) $(@:d)
+    $(COMMAND_ECHO)-$(RM) $@
+	@echo trysdf = $(TRYSDF)
+	$(COMMAND_ECHO)$(XRMEX) -p $(PRJNAME) -i $(@:f) -o $(@).$(INPATH) -m $(LOCALIZESDF) -l all
+    $(COMMAND_ECHO)$(RENAME) $@.$(INPATH) $@
+    $(COMMAND_ECHO)-$(RM) $@.$(INPATH)
 
 #$(COMMONMISC)/$(TARGET)/%.xrm : %.xrm
 #    -$(MKDIRHIER) $(@:d)
@@ -787,10 +843,10 @@ $(COMMONMISC)/$(TARGET)/%.jlf : $$(@:db).ulf
 $(COMMONMISC)/$(TARGET)/%.jlf : $$(@:b).ulf
 .ENDIF			# "$(WITH_LANG)"!=""
     @-$(MKDIRHIER) $(@:d)
-    -$(RM) $@
-    $(ULFCONV) -o $@.$(INPATH) $<
-    $(RENAME) $@.$(INPATH) $@
-    -$(RM) $@.$(INPATH)
+    $(COMMAND_ECHO)-$(RM) $@
+	$(COMMAND_ECHO)$(ULFCONV) -o $@.$(INPATH) $<
+    $(COMMAND_ECHO)$(RENAME) $@.$(INPATH) $@
+    $(COMMAND_ECHO)-$(RM) $@.$(INPATH)
 
 .IF "$(WITH_LANG)"!=""
 $(COMMONMISC)/$(TARGET)/%.mlf : $$(@:db).ulf
@@ -798,7 +854,7 @@ $(COMMONMISC)/$(TARGET)/%.mlf : $$(@:db).ulf
 $(COMMONMISC)/$(TARGET)/%.mlf : $$(@:b).ulf
 .ENDIF			# "$(WITH_LANG)"!=""
     @-$(MKDIRHIER) $(@:d)
-    -$(RM) $@
+	@-$(RM) $@
     @$(ULFCONV) -o $@.$(INPATH) -t $(SOLARBINDIR)/msi-encodinglist.txt $<
     @$(RENAME) $@.$(INPATH) $@
     @-$(RM) $@.$(INPATH)
@@ -809,18 +865,18 @@ $(COMMONMISC)/$(TARGET)/%.uulf : $$(@:db).ulf
 $(COMMONMISC)/$(TARGET)/%.uulf : $$(@:b).ulf
 .ENDIF			# "$(WITH_LANG)"!=""
     @-$(MKDIRHIER) $(@:d)
-    -$(RM) $@
+	$(COMMAND_ECHO)-$(RM) $@
     @$(COPY) $< $@.$(INPATH)
     @$(RENAME) $@.$(INPATH) $@
     @-$(RM) $@.$(INPATH)
 
 # This is still needed?????
 $(COMMONMISC)/$(TARGET)/%.xrm : %.xrm
-    -$(MKDIR) $(@:d)
-    -$(RM) $@
-    $(XRMEX) -p $(PRJNAME) -i $(@:f) -o $(@).$(INPATH) -m $(LOCALIZESDF) -l all
-    $(RENAME) $@.$(INPATH) $@
-    -$(RM) $@.$(INPATH)
+    $(COMMAND_ECHO)-$(MKDIR) $(@:d)
+    $(COMMAND_ECHO)-$(RM) $@
+	$(COMMAND_ECHO)$(XRMEX) -p $(PRJNAME) -i $(@:f) -o $(@).$(INPATH) -m $(LOCALIZESDF) -l all
+    $(COMMAND_ECHO)$(RENAME) $@.$(INPATH) $@
+    $(COMMAND_ECHO)-$(RM) $@.$(INPATH)
 
 # dirty hack
 # if local *.sdf file is missing
diff --git solenv/inc/settings.mk solenv/inc/settings.mk
index 628d721..0dfcabb 100644
--- solenv/inc/settings.mk
+++ solenv/inc/settings.mk
@@ -380,7 +380,9 @@ verbose*=$(VERBOSE)
 .ENDIF
 
 .IF "$(verbose)"!=""
-VERBOSE*=$(verbose)
+# normalize: "false" (any upper/lower case) and "0" mean FALSE, everything else means TRUE
+VERBOSE_IS_FALSE:=$(or $(eq,"$(verbose:u)","FALSE" "false"  ) $(eq,"$(verbose)","0" "false"  ))
+VERBOSE!:=$(eq,"$(VERBOSE_IS_FALSE)","t" FALSE TRUE)
 .ENDIF
 
 .IF "$(SOLARLANG)" != ""
@@ -980,6 +982,19 @@ RSC=$(AUGMENT_LIBRARY_PATH) $(SOLARBINDIR)/rscdep
 RSC=$(AUGMENT_LIBRARY_PATH) $(FLIPCMD) $(SOLARBINDIR)/rsc
 .ENDIF # "$(make_srs_deps)"!=""
 
+.IF "$(VERBOSE)" == "TRUE"
+    VERBOSITY=-verbose
+.ELSE
+    COMMAND_ECHO=@
+    .IF "$(VERBOSE)" == "FALSE"
+        VERBOSITY=-quiet
+        ZIP_VERBOSITY=-q
+        TRANSEX_VERBOSITY=-QQ
+        CFGEX_VERBOSITY=-QQ
+        ULFEX_VERBOSITY=-QQ
+    .ENDIF
+.ENDIF # "$(VERBOSE)" == "TRUE"
+
 #new
 RSCUPDVER=$(RSCREVISION)
 RSCUPDVERDEF=-DUPDVER="$(RSCUPDVER)"
diff --git solenv/inc/target.mk solenv/inc/target.mk
index adf5079..761d29a 100644
--- solenv/inc/target.mk
+++ solenv/inc/target.mk
@@ -1292,13 +1292,13 @@ $(UNOUCRTARGET) : $(UNOUCRHEADER)
 # keep that one to rebuild single misses
 $(UNOUCRHEADER):
     @noop
-    
+
 $(UNOUCRTARGET) : $(UNOUCRDEP)
 .IF "$(XML2MK_FILES)"!=""
     @@-$(RM) $(foreach,i,$(XML2MK_FILES) $(MISC)/$(i).mk)
 .ENDIF			# "$(XML2MK_FILES)"!=""
     @@-$(MKDIRHIER) $(UNOUCROUT)
-    $(CPPUMAKER) @$(mktmp $(CPPUMAKERFLAGS) -B$(UNOUCRBASE) -O$(UNOUCROUT) $(UNOTYPES:^"-T")  $(UNOUCRRDB)) && $(TOUCH) $@
+	$(COMMAND_ECHO)$(CPPUMAKER) @$(mktmp $(CPPUMAKERFLAGS) -B$(UNOUCRBASE) -O$(UNOUCROUT) $(UNOTYPES:^"-T")  $(UNOUCRRDB)) && $(TOUCH) $@
 .ENDIF			# "$(UNOTYPES)" != ""
 
 .IF "$(COMP1RDBTARGETN)"!=""
@@ -1377,12 +1377,12 @@ $(JAVATARGET) : $(GENJAVAFILES)
 
 .IF "$(HXXCOPYFILES)" != ""
 $(HXXCOPYTARGET):	$(HXXCOPYFILES)
-    $(COPY) $(COPYUPDATE) $(HXXCOPYFILES) $(INCCOM) $(CHECKCOPYURESULT)
+	$(COMMAND_ECHO)$(COPY) $(COPYUPDATE) $(HXXCOPYFILES) $(INCCOM) $(CHECKCOPYURESULT)
 .ENDIF
 
 .IF "$(UNIXTEXT)"!=""
 $(UNIXTEXT) : $(UNIXTEXT:f)
-    @echo Making $@
+	@echo "Making:   " $@
     @@-$(RM) -f $@
     @tr -d "\015" < $(@:f) > $@
 
@@ -1415,38 +1415,50 @@ $(EXTUPDATEINFO_DEST) : $(EXTUPDATEINFO_SOURCE)
 
 makedoc:
         @@-mkdir $(OUT)/ucrdoc
-        $(IDLC) @$(mktmp $(IDLCFLAGS) $(UNOIDLDEFS) $(UNOIDLINCEXTRA) $(UNOIDLINC) -C -O$(OUT)/ucrdoc/$(IDLPACKAGE) $(DEPIDLFILES:+"\n"))		
+.IF "$(VERBOSE)" == "TRUE"
+		$(COMMAND_ECHO)$(IDLC) $(VERBOSITY) @$(mktmp $(IDLCFLAGS) $(UNOIDLDEFS) $(UNOIDLINCEXTRA) $(UNOIDLINC) -C -O$(OUT)/ucrdoc/$(IDLPACKAGE) $(DEPIDLFILES:+"\n"))		
+.ELSE
+		$(COMMAND_ECHO)$(IDLC) @$(mktmp $(IDLCFLAGS) $(UNOIDLDEFS) $(UNOIDLINCEXTRA) $(UNOIDLINC) -C -O$(OUT)/ucrdoc/$(IDLPACKAGE) $(DEPIDLFILES:+"\n"))		
+.ENDIF
 #		-$(UNOIDL) $(UNOIDLDEFS) $(UNOIDLINCEXTRA) $(UNOIDLINC) -Bdoc -P../$(PRJNAME)/$(IDLPACKAGE) -OH$(PRJ)/../unodoc $(DOCIDLFILES) $(IDLFILES)
 
 .IF "$(LOCALDBTARGET)"!=""
 $(LOCALDBTARGET) : $(URDFILES) $(DEPIDLFILES)
-    $(IDLC) @$(mktmp $(IDLCFLAGS) $(UNOIDLDEFS) $(UNOIDLINCEXTRA) $(UNOIDLINC) -O$(OUT)/ucr/$(IDLPACKAGE) $(all_outdated_idl))
-    -$(RM) $@
-    $(REGMERGE) $@ UCR @$(mktmp $(URDFILES))
+.IF "$(VERBOSE)" == "TRUE"
+	$(COMMAND_ECHO)$(IDLC) $(VERBOSITY) @$(mktmp $(IDLCFLAGS) $(UNOIDLDEFS) $(UNOIDLINCEXTRA) $(UNOIDLINC) -O$(OUT)/ucr/$(IDLPACKAGE) $(all_outdated_idl))
+.ELSE
+	$(COMMAND_ECHO)$(IDLC) @$(mktmp $(IDLCFLAGS) $(UNOIDLDEFS) $(UNOIDLINCEXTRA) $(UNOIDLINC) -O$(OUT)/ucr/$(IDLPACKAGE) $(all_outdated_idl))
+.ENDIF
+	$(COMMAND_ECHO)-$(RM) $@
+	$(COMMAND_ECHO)$(REGMERGE) $@ UCR @$(mktmp $(URDFILES))
 .ENDIF
 
 .IF "$(LOCALDOCDBTARGET)"!=""
 $(LOCALDOCDBTARGET) : $(URDDOCFILES) $(DEPIDLFILES)
-    $(IDLC) @$(mktmp $(IDLCFLAGS) $(UNOIDLDEFS) $(UNOIDLINCEXTRA) $(UNOIDLINC) -C -O$(OUT)/ucrdoc/$(IDLPACKAGE) $(all_outdated_idl))
-    -$(RM) $@
-    $(REGMERGE) $@ UCR @$(mktmp $(URDDOCFILES))
+.IF "$(VERBOSE)" == "TRUE"
+	$(COMMAND_ECHO)$(IDLC) $(VERBOSITY) @$(mktmp $(IDLCFLAGS) $(UNOIDLDEFS) $(UNOIDLINCEXTRA) $(UNOIDLINC) -C -O$(OUT)/ucrdoc/$(IDLPACKAGE) $(all_outdated_idl))
+.ELSE
+	$(COMMAND_ECHO)$(IDLC) @$(mktmp $(IDLCFLAGS) $(UNOIDLDEFS) $(UNOIDLINCEXTRA) $(UNOIDLINC) -C -O$(OUT)/ucrdoc/$(IDLPACKAGE) $(all_outdated_idl))
+.ENDIF
+	$(COMMAND_ECHO)-$(RM) $@
+	$(COMMAND_ECHO)$(REGMERGE) $@ UCR @$(mktmp $(URDDOCFILES))
 .ENDIF
 
 .IF "$(UNOIDLDBTARGET)"!=""
 $(UNOIDLDBTARGET) : $(UNOIDLDBFILES) $(UNOIDLDBREGS)
-    -$(RM) $@
-    $(REGMERGE) $@ / @$(mktmp $(UNOIDLDBFILES) $(UNOIDLDBREGS))
+	$(COMMAND_ECHO)-$(RM) $@
+	$(COMMAND_ECHO)$(REGMERGE) $@ / @$(mktmp $(UNOIDLDBFILES) $(UNOIDLDBREGS))
 .IF "$(LOCALREGDB)"!=""
-    $(REGMERGE) $(LOCALREGDB) / $@
+	$(COMMAND_ECHO)$(REGMERGE) $(LOCALREGDB) / $@
 .ENDIF
 .ENDIF			# "$(UNOIDLDBTARGET)"!=""
 
 .IF "$(UNOIDLDBDOCTARGET)"!=""
 $(UNOIDLDBDOCTARGET) : $(UNOIDLDBDOCFILES) $(UNOIDLDBDOCREGS)
-    -$(RM) $@
-    $(REGMERGE) $@ / @$(mktmp $(UNOIDLDBDOCFILES) $(UNOIDLDBDOCREGS))
+	$(COMMAND_ECHO)-$(RM) $@
+	$(COMMAND_ECHO)$(REGMERGE) $@ / @$(mktmp $(UNOIDLDBDOCFILES) $(UNOIDLDBDOCREGS))
 .IF "$(LOCALREGDB)"!=""
-    $(REGMERGE) $(LOCALREGDB) / $@
+	$(COMMAND_ECHO)$(REGMERGE) $(LOCALREGDB) / $@
 .ENDIF
 .ENDIF			# "$(UNOIDLDBDOCTARGET)"!=""
 
@@ -1512,10 +1524,10 @@ $(TARGETDEPS) : $(LOCALIZE_ME_DEST)
 
 .IF "$(WITH_LANG)"==""
 $(LOCALIZE_ME_DEST) : $(LOCALIZE_ME)
-    -$(RM) $(INCCOM)/$(TARGET)_lastrun.mk
-    -$(MKDIR) $(@:d)
-    -$(RM) $@
-    $(COPY) $(@:b:+"_tmpl")$(@:e) $@
+	$(COMMAND_ECHO)-$(RM) $(INCCOM)/$(TARGET)_lastrun.mk
+    $(COMMAND_ECHO)-$(MKDIR) $(@:d)
+    $(COMMAND_ECHO)-$(RM) $@
+	$(COMMAND_ECHO)$(COPY) $(@:b:+"_tmpl")$(@:e) $@
 
 .ELSE			# "$(WITH_LANG)"==""
 #  LASTRUN_MERGED
@@ -1526,10 +1538,10 @@ $(LOCALIZE_ME_DEST) : $(LOCALIZE_ME) $(LOCALIZESDF)
 $(LOCALIZE_ME_DEST) .PHONY : $(LOCALIZE_ME) $(LOCALIZESDF) 
     echo LASTRUN_MERGED:=TRUE > $(INCCOM)/$(TARGET)_lastrun.mk
 .ENDIF			# "$(LASTRUN_MERGED)"=="TRUE"
-    -$(MKDIR) $(@:d)
-    -$(RM) $@
-    $(TRANSEX) -p $(PRJNAME) -i $(@:b:+"_tmpl")$(@:e) -o $(@:d)/$(@:b:+"_tmpl")$(@:e).$(INPATH) -m $(LOCALIZESDF) -l all
-    $(RENAME) $(@:d)$(@:b:+"_tmpl")$(@:e).$(INPATH) $@
+    $(COMMAND_ECHO)-$(MKDIR) $(@:d)
+    $(COMMAND_ECHO)-$(RM) $@
+	$(COMMAND_ECHO)$(TRANSEX) $(TRANSEX_VERBOSITY) -p $(PRJNAME) -i $(@:b:+"_tmpl")$(@:e) -o $(@:d)/$(@:b:+"_tmpl")$(@:e).$(INPATH) -m $(LOCALIZESDF) -l all
+    $(COMMAND_ECHO)$(RENAME) $(@:d)$(@:b:+"_tmpl")$(@:e).$(INPATH) $@
 
 .ENDIF			# "$(WITH_LANG)"==""
 .ENDIF          # "$(LOCALIZE_ME_DEST)"!=""
@@ -1558,10 +1570,12 @@ $(MISC)/$(TARGET)_%.done : %.xrb
 
 .IF "$(COMMONPRJHIDOTHERTARGET)"!=""
 $(COMMONPRJHIDOTHERTARGET) : $(PRJHIDOTHERTARGET)
+.IF "$(VERBOSE)" == "TRUE"
         @echo ------------------------------
-        @echo Making: $@
+.ENDIF
+		@echo "Making:   " $@
         @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ $(FI)
-        $(TYPE) $(PRJHIDOTHERTARGET) > $@.$(ROUT).tmp 
+        $(COMMAND_ECHO)$(TYPE) $(PRJHIDOTHERTARGET) > $@.$(ROUT).tmp 
         @$(RENAME) $@.$(ROUT).tmp $@
 .ENDIF	    
 
@@ -1707,7 +1721,10 @@ ZIPDEPPHONY=.PHONY
 .ENDIF
 
 last_target:
-    @echo -------------
+.IF "$(VERBOSE)" == "TRUE"
+	@echo ------------- 
+.ENDIF
+	$(NULL)
 
 $(MISC)/$(TARGET)genjava.mk: 	$(IDLFILES)
 
@@ -1730,16 +1747,24 @@ $(TARGETDPJ) : $(JAVAFILES) $(JAVATARGET)
 .IF "$(NOOPT_FLAG)" == ""
 
 $(NOOPTTARGET):
+.IF "$(VERBOSE)" == "TRUE"
     @echo --- NOOPTFILES ---
+.ENDIF
     @dmake $(MFLAGS) $(MAKEFILE) nopt=true $(NOOPTFILES) NOOPT_FLAG=TRUE $(CALLMACROS)
+.IF "$(VERBOSE)" == "TRUE"
     @echo --- NOOPTFILES OVER ---
+.ENDIF
 
 $(NOOPTFILES):
+.IF "$(VERBOSE)" == "TRUE"
     @echo --- NOOPT ---
+.ENDIF
     @dmake $(MFLAGS) $(MAKEFILE) nopt=true NOOPT_FLAG=TRUE $(CALLMACROS) $@
+.IF "$(VERBOSE)" == "TRUE"
     @echo --- NOOPT OVER ---
 .ENDIF
 .ENDIF
+.ENDIF
 
 
 # ----------------------------------
@@ -1750,14 +1775,22 @@ $(NOOPTFILES):
 .IF "$(EXCEPTIONSNOOPT_FLAG)" == ""
 
 $(EXCEPTIONSNOOPTTARGET):
+.IF "$(VERBOSE)" == "TRUE"
     @echo --- EXCEPTIONSNOOPTFILES ---
+.ENDIF
     @dmake $(MFLAGS) $(MAKEFILE) ENABLE_EXCEPTIONS=true $(EXCEPTIONSNOOPTFILES) EXCEPTIONSNOOPT_FLAG=TRUE nopt=true $(CALLMACROS)
+.IF "$(VERBOSE)" == "TRUE"
     @echo --- EXCEPTIONSNOOPTFILES OVER ---
+.ENDIF
 
 $(EXCEPTIONSNOOPTFILES):
+.IF "$(VERBOSE)" == "TRUE"
     @echo --- EXCEPTIONSNOOPT ---
+.ENDIF
     @dmake $(MFLAGS) $(MAKEFILE) ENABLE_EXCEPTIONS=true EXCEPTIONSNOOPT_FLAG=TRUE nopt=true $(CALLMACROS) $@
+.IF "$(VERBOSE)" == "TRUE"
     @echo --- EXCEPTIONSNOOPT OVER ---
+.ENDIF
 
 
 .ENDIF
@@ -1895,7 +1928,7 @@ killsrs:
 
 killres:
 .IF "$(RESLIB1TARGETN)$(RESLIB2TARGETN)$(RESLIB3TARGETN)$(RESLIB4TARGETN)$(RESLIB5TARGETN)$(RESLIB6TARGETN)$(RESLIB7TARGETN)$(RESLIB8TARGETN)$(RESLIB9TARGETN)"!=""
-    $(RM) $(RESLIB1TARGETN) $(RESLIB2TARGETN) $(RESLIB3TARGETN) $(RESLIB4TARGETN) $(RESLIB5TARGETN) $(RESLIB6TARGETN) $(RESLIB7TARGETN) $(RESLIB8TARGETN) $(RESLIB9TARGETN)
+	@(COMMAND_ECHO)$(RM) $(RESLIB1TARGETN) $(RESLIB2TARGETN) $(RESLIB3TARGETN) $(RESLIB4TARGETN) $(RESLIB5TARGETN) $(RESLIB6TARGETN) $(RESLIB7TARGETN) $(RESLIB8TARGETN) $(RESLIB9TARGETN)
     @echo resource files removed!
 .ELSE			# "$(RESLIB1TARGETN)$(RESLIB2TARGETN)$(RESLIB3TARGETN)$(RESLIB4TARGETN)$(RESLIB5TARGETN)$(RESLIB6TARGETN)$(RESLIB7TARGETN)$(RESLIB8TARGETN)$(RESLIB9TARGETN)"!=""
     @echo no resource files defined!
@@ -1903,20 +1936,20 @@ killres:
 
 killdef:
 .IF "$(DEFTARGETN)" != ""
-    $(RM) $(DEFTARGETN)
+	@(COMMAND_ECHO)$(RM) $(DEFTARGETN)
 .ENDIF
     @echo deffiles weg!
 
 killlib:
 .IF "$(LIB1TARGETN)$(LIB2TARGETN)$(LIB3TARGETN)$(LIB4TARGETN)$(LIB5TARGETN)$(LIB6TARGETN)$(LIB7TARGETN)$(LIB8TARGETN)$(LIB9TARGETN)"!=""
-    $(RM) $(LIB1TARGETN) $(LIB2TARGETN) $(LIB3TARGETN) $(LIB4TARGETN) $(LIB5TARGETN) $(LIB6TARGETN) $(LIB7TARGETN) $(LIB8TARGETN) $(LIB9TARGETN)
+	@(COMMAND_ECHO)$(RM) $(LIB1TARGETN) $(LIB2TARGETN) $(LIB3TARGETN) $(LIB4TARGETN) $(LIB5TARGETN) $(LIB6TARGETN) $(LIB7TARGETN) $(LIB8TARGETN) $(LIB9TARGETN)
 .IF "$(LIB1ARCHIV)$(LIB2ARCHIV)$(LIB3ARCHIV)$(LIB4ARCHIV)$(LIB5ARCHIV)$(LIB6ARCHIV)$(LIB7ARCHIV)$(LIB8ARCHIV)$(LIB9ARCHIV)"!=""
-    $(RM) $(LIB1ARCHIV) $(LIB2ARCHIV) $(LIB3ARCHIV) $(LIB4ARCHIV) $(LIB5ARCHIV) $(LIB6ARCHIV) $(LIB7ARCHIV) $(LIB8ARCHIV) $(LIB9ARCHIV)
+	@(COMMAND_ECHO)$(RM) $(LIB1ARCHIV) $(LIB2ARCHIV) $(LIB3ARCHIV) $(LIB4ARCHIV) $(LIB5ARCHIV) $(LIB6ARCHIV) $(LIB7ARCHIV) $(LIB8ARCHIV) $(LIB9ARCHIV)
 .ENDIF			# "$(LIB1ARCHIV)$(LIB2ARCHIV)$(LIB3ARCHIV)$(LIB4ARCHIV)$(LIB5ARCHIV)$(LIB6ARCHIV)$(LIB7ARCHIV)$(LIB8ARCHIV)$(LIB9ARCHIV)"!=""
     @echo lib/archive files removed!
 .ENDIF			# "$(LIB1TARGETN)$(LIB2TARGETN)$(LIB3TARGETN)$(LIB4TARGETN)$(LIB5TARGETN)$(LIB6TARGETN)$(LIB7TARGETN)$(LIB8TARGETN)$(LIB9TARGETN)"!=""
 .IF "$(SLOTARGET)$(OBJTARGET)"!=""
-    $(RM) $(SLOTARGET) $(OBJTARGET)
+	@(COMMAND_ECHO)$(RM) $(SLOTARGET) $(OBJTARGET)
     @echo default lib files removed!
 .ENDIF			# "$(SLOTARGET)$(OBJTARGET)"!=""
     @echo done!
@@ -1963,10 +1996,14 @@ ZIPALLTARGET: \
         $(ZIP9TARGETN)
 .ELSE
 ZIPALLTARGET:
+.IF "$(VERBOSE)" == "TRUE"
     @echo ---
+.ENDIF
     @echo nothing to zip for activated languages!
+.IF "$(VERBOSE)" == "TRUE"
     @echo ---
 .ENDIF
+.ENDIF
 
 
 #temporary workaround for non-existing delzip in extras
@@ -2015,14 +2052,16 @@ UNOUCRDEPxxx : $(UNOUCRDEP);
 
 #new hid.lst trigger with GEN_HID2=TRUE
 $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(BIN))/hid.lst .PHONY :
-    @echo Making $@ :
+	@echo "Making:   " $@
+.IF "$(VERBOSE)" == "TRUE"
     @echo ---------------
+.ENDIF
     @echo $(WORK_STAMP).$(LAST_MINOR) 010101010101010 > $@.$(ROUT).tmp
-    $(TYPE) $(SOLARCOMMONBINDIR)/hid/*.hid | tr -d "\015" | $(SORT) -u >> $@.$(ROUT).tmp 
+	$(COMMAND_ECHO)$(TYPE) $(SOLARCOMMONBINDIR)/hid/*.hid | tr -d "\015" | $(SORT) -u >> $@.$(ROUT).tmp 
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ $(FI)
     @-$(RENAME) $@.$(ROUT).tmp $@
     @-mkdir $(@:d)hid
-    $(PERL) $(SOLARENV)/bin/gen_userfeedback_VCL_names.pl $@ $(SOLARCOMMONBINDIR)/win $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(BIN))/hid/userfeedback_VCL_names.csv.$(ROUT).tmp
+	$(COMMAND_ECHO)$(PERL) $(SOLARENV)/bin/gen_userfeedback_VCL_names.pl $@ $(SOLARCOMMONBINDIR)/win $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(BIN))/hid/userfeedback_VCL_names.csv.$(ROUT).tmp
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(BIN))/hid/userfeedback_VCL_names.csv $(FI)
     @-$(RENAME) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(BIN))/hid/userfeedback_VCL_names.csv.$(ROUT).tmp $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(BIN))/hid/userfeedback_VCL_names.csv
 
diff --git solenv/inc/tg_app.mk solenv/inc/tg_app.mk
index fc0b3d3..51a657d 100644
--- solenv/inc/tg_app.mk
+++ solenv/inc/tg_app.mk
@@ -119,7 +119,7 @@ $(APP$(TNR)TARGETN): $(APP$(TNR)OBJS) $(APP$(TNR)LIBS) \
     $(APP$(TNR)IMP_ORD) \
     $(APP$(TNR)ICON) $(APP$(TNR)DEPN) $(USE_APP$(TNR)DEF)
     @echo ------------------------------
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(OS)"=="MACOSX"
     @echo unx
@@ -133,7 +133,9 @@ $(APP$(TNR)TARGETN): $(APP$(TNR)OBJS) $(APP$(TNR)LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
 # Need to strip __objcInit symbol to avoid duplicate symbols when loading
 # libraries at runtime
@@ -143,7 +145,7 @@ $(APP$(TNR)TARGETN): $(APP$(TNR)OBJS) $(APP$(TNR)LIBS) \
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         app $(APP$(TNR)RPATH) $@
 .IF "$(TARGETTYPE)"=="GUI"
-    @echo "Making: $@.app"
+	@echo "Making:   " $(@:f).app
     @macosx-create-bundle $@
 .ENDIF		# "$(TARGETTYPE)"=="GUI"
 .ELSE		# "$(OS)"=="MACOSX"
@@ -153,9 +155,13 @@ $(APP$(TNR)TARGETN): $(APP$(TNR)OBJS) $(APP$(TNR)LIBS) \
     $(APP$(TNR)OBJS:s/.obj/.o/) '\' >  $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
     @cat $(mktmp /dev/null $(APP$(TNR)LIBS)) | xargs -n 1 cat | sed s\#$(ROUT)\#$(OUT)\#g | sed 's#$$# \\#'  >> $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
     @echo $(APP$(TNR)LINKTYPEFLAG) $(APP$(TNR)LIBSALCPPRT) $(APP$(TNR)STDLIBS) $(APP$(TNR)STDLIB) $(STDLIB$(TNR)) -o $@ >> $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
-    cat $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
+  .IF "$(VERBOSE)" == "TRUE"
+	@cat $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+  .ENDIF
 .ENDIF		# "$(OS)"=="MACOSX"
 .ENDIF
 .IF "$(GUI)" == "WNT"
@@ -169,7 +175,7 @@ $(APP$(TNR)TARGETN): $(APP$(TNR)OBJS) $(APP$(TNR)LIBS) \
     @-echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP$(TNR)LINKRES:b).rc
     @-echo $(EMQ)#include  $(EMQ)"$(APP$(TNR)VERINFO)$(EMQ)" >> $(MISC)/$(APP$(TNR)LINKRES:b).rc
 .ENDIF		# "$(APP$(TNR)VERINFO)" != ""
-    $(RC) -DWIN32 $(APP$(TNR)PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP$(TNR)LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(APP$(TNR)PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP$(TNR)LINKRES:b).rc
 .ENDIF			# "$(APP$(TNR)LINKRES)" != ""
 .IF "$(COM)" == "GCC"
     @echo mingw
@@ -177,19 +183,22 @@ $(APP$(TNR)TARGETN): $(APP$(TNR)OBJS) $(APP$(TNR)LIBS) \
     @cat $(APP$(TNR)LINKRES) $(subst,/res/,/res{$(subst,$(BIN), $(@:d))} $(APP$(TNR)RES)) >  $(MISC)/$(@:b)_all.res
     windres $(MISC)/$(@:b)_all.res $(APP$(TNR)RESO)
 .ENDIF
-    @echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
+ 	@echo $(LINK) $(LINKFLAGS) $(LINKFLAGSAPP) $(MINGWSSTDOBJ) -L$(PRJ)/$(INPATH)/lib $(SOLARLIB) $(STDSLO) \
         $(APP$(TNR)BASEX) $(APP$(TNR)STACKN) -o $@ $(APP$(TNR)OBJS) \
         -Wl,-Map,$(MISC)/$(@:b).map $(STDOBJ) $(APP$(TNR)RESO) \
         `$(TYPE) /dev/null $(APP$(TNR)LIBS) | sed s#$(ROUT)#$(OUT)#g` \
-        $(APP_LINKTYPE) $(APP$(TNR)LIBSALCPPRT) \
-        -Wl,--start-group $(APP$(TNR)STDLIBS) -Wl,--end-group $(APP$(TNR)STDLIB) \
-        $(STDLIB$(TNR)) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
+ 		$(APP_LINKTYPE) $(APP$(TNR)LIBSALCPPRT) \
+ 		-Wl,--start-group $(APP$(TNR)STDLIBS) -Wl,--end-group $(APP$(TNR)STDLIB) \
+ 		$(STDLIB$(TNR)) $(MINGWSSTDENDOBJ) > $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
+  # need this empty line, else dmake somehow gets confused by the .IFs and .ENDIFs
+  .IF "$(VERBOSE)" == "TRUE"
     @$(TYPE)  $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
     @ls -l $@
 .ELSE	# "$(COM)" == "GCC"
 .IF "$(linkinc)" == ""
-    $(APP$(TNR)LINKER) @$(mktmp \
+	$(COMMAND_ECHO)$(APP$(TNR)LINKER) @$(mktmp \
         $(APP$(TNR)LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP$(TNR)BASEX) \
         $(APP$(TNR)STACKN) \
@@ -205,17 +214,17 @@ $(APP$(TNR)TARGETN): $(APP$(TNR)OBJS) $(APP$(TNR)LIBS) \
         )
     @-echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);1 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);1 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE
-        -$(RM) $(MISC)\$(APP$(TNR)TARGET).lnk
-        -$(RM) $(MISC)\$(APP$(TNR)TARGET).lst
-        -$(RM) $(MISC)\linkobj.lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP$(TNR)TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)\$(APP$(TNR)TARGET).lst
+		$(COMMAND_ECHO)-$(RM) $(MISC)\linkobj.lst
         for %_i in ($(MISC)\*.obj) do type %_i >> $(MISC)\linkobj.lst
     type $(mktmp,$(MISC)\$(APP$(TNR)TARGET).lst
         $(APP$(TNR)LINKFLAGS) \
@@ -229,16 +238,16 @@ $(APP$(TNR)TARGETN): $(APP$(TNR)OBJS) $(APP$(TNR)LIBS) \
         $(APP$(TNR)LIBS) \
         $(APP$(TNR)STDLIBS) \
         $(APP$(TNR)STDLIB) $(STDLIB$(TNR)))
-        $(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP$(TNR)TARGETN:b)_linkobj.lst >> $(MISC)\$(APP$(TNR)TARGET).lst
-        $(IFEXIST) $(MISC)/$(APP$(TNR)TARGET).lst $(THEN) type $(MISC)/$(APP$(TNR)TARGET).lst  >> $(MISC)/$(APP$(TNR)TARGET).lnk $(FI)
-        $(APP$(TNR)LINKER) @$(MISC)\$(APP$(TNR)TARGET).lnk
+		$(COMMAND_ECHO)$(SED)$(SED) -e 's/\(\.\.\\\)\{2,4\}/..\\/g' $(MISC)\$(APP$(TNR)TARGETN:b)_linkobj.lst >> $(MISC)\$(APP$(TNR)TARGET).lst
+		$(COMMAND_ECHO)$(SED)$(IFEXIST) $(MISC)/$(APP$(TNR)TARGET).lst $(THEN) type $(MISC)/$(APP$(TNR)TARGET).lst  >> $(MISC)/$(APP$(TNR)TARGET).lnk $(FI)
+		$(COMMAND_ECHO)$(SED)$(APP$(TNR)LINKER) @$(MISC)\$(APP$(TNR)TARGET).lnk
 .ENDIF		# "$(linkinc)" == ""
 .ENDIF		# "$(COM)" == "GCC"
 .IF "$(APP$(TNR)TARGET)" == "loader"
-    $(PERL) loader.pl $@
-    $(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    $(RM) $@
-    $(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)$(PERL) loader.pl $@
+	$(COMMAND_ECHO)$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)$(RM) $@
+	$(COMMAND_ECHO)$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "WNT"
@@ -254,13 +263,14 @@ $(APP$(TNR)TARGETN): $(APP$(TNR)OBJS) $(APP$(TNR)LIBS) \
     @-+echo $(EMQ)#define VERVARIANT	$(BUILD) >> $(MISC)/$(APP$(TNR)LINKRES:b).rc
     @-+echo $(EMQ)#include  $(EMQ)"$(APP$(TNR)VERINFO)$(EMQ)" >> $(MISC)/$(APP$(TNR)LINKRES:b).rc
 .ENDIF		# "$(APP$(TNR)VERINFO)" != ""
-    $(RC) -r -DOS2 $(APP$(TNR)PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP$(TNR)LINKRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(APP$(TNR)PRODUCTDEF) -I$(SOLARRESDIR) $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(APP$(TNR)LINKRES:b).rc
 .ENDIF			# "$(APP$(TNR)LINKRES)" != ""
 
 .IF "$(TARGETTYPE)" == "GUI" 
     @echo NAME $(APP$(TNR)TARGET) WINDOWAPI > $(MISC)/$(APP$(TNR)TARGET).def
 .ENDIF
 
+  .IF "$(VERBOSE)" == "TRUE"
     @+echo	$(APP$(TNR)LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP$(TNR)BASEX) \
         $(APP$(TNR)STACKN) \
@@ -275,7 +285,8 @@ $(APP$(TNR)TARGETN): $(APP$(TNR)OBJS) $(APP$(TNR)LIBS) \
         $(APP$(TNR)LIBS) \
         $(APP$(TNR)STDLIBS:^"-l") \
         $(APP$(TNR)STDLIB:^"-l") $(STDLIB$(TNR):^"-l") 
-    $(APP$(TNR)LINKER) -v \
+  .ENDIF
+	$(COMMAND_ECHO)$(APP$(TNR)LINKER) -v \
         $(APP$(TNR)LINKFLAGS) \
         $(LINKFLAGSAPP) $(APP$(TNR)BASEX) \
         $(APP$(TNR)STACKN) \
@@ -293,10 +304,10 @@ $(APP$(TNR)TARGETN): $(APP$(TNR)OBJS) $(APP$(TNR)LIBS) \
 
 
 .IF "$(APP$(TNR)TARGET)" == "loader"
-    +$(PERL) loader.pl $@
-    +$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
-    +$(RM) $@
-    +$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
+	$(COMMAND_ECHO)+$(PERL) loader.pl $@
+	$(COMMAND_ECHO)+$(TYPE) $(@) $(@:d)unloader.exe > $(@:d)_new.exe
+	$(COMMAND_ECHO)+$(RM) $@
+	$(COMMAND_ECHO)+$(RENAME) $(@:d)_new.exe $(@:d)loader.exe
 .ENDIF			# "$(TARGET)" == "setup"
 
 .ENDIF			# "$(GUI)" == "OS2"
diff --git solenv/inc/tg_config.mk solenv/inc/tg_config.mk
index 099ec9e..8a96283 100644
--- solenv/inc/tg_config.mk
+++ solenv/inc/tg_config.mk
@@ -64,22 +64,25 @@ $(XCS_TRIM) :   $(DTDDIR)/registry/component-schema.dtd \
 .ENDIF
 
 $(PROCESSOUT)/registry/schema/$(PACKAGEDIR)/%.xcs : %.xcs
+	@echo "Making:   " $(@:f)
+.IF "$(VERBOSE)"!="FALSE"
     @echo -------------+ validating and stripping schema files
-    -$(MKDIRHIER) $(@:d)
-    $(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $(@:d))$*.val) \
+.ENDIF
+	@-$(MKDIRHIER) $(@:d)
+	$(COMMAND_ECHO)$(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $(@:d))$*.val) \
                 --stringparam componentName $(PACKAGE).$* \
                 $(SYSXSLDIR)schema_val.xsl $<
-    $(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $(@:d))$*.san) \
+	$(COMMAND_ECHO)$(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $(@:d))$*.san) \
                 $(SYSXSLDIR)sanity.xsl $<
-    $(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $@)) \
+	$(COMMAND_ECHO)$(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $@)) \
                 $(SYSXSLDIR)schema_trim.xsl $<
-    +-$(RM) $(@:d)$*.val > $(NULLDEV)
-    +-$(RM) $(@:d)$*.san > $(NULLDEV)
+	@+-$(RM) $(@:d)$*.val > $(NULLDEV)
+	@+-$(RM) $(@:d)$*.san > $(NULLDEV)
 
 $(PROCESSOUT)/merge/$(PACKAGEDIR)/%.xcs : %.xcs
 # just a copy for now - insert "cfgex" commandline when required
-    -$(MKDIRHIER) $(@:d)
-    $(COPY) $< $@
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(@:d)
+	$(COMMAND_ECHO)$(COPY) $< $@
 
 # Create properties files for localized <info> contents (Currently not built)
 .IF "$(XCS_RESOURCES)" != ""
@@ -87,9 +90,12 @@ $(XCS_RESOURCES) :   $(XSLDIR)/resource.xsl
 .ENDIF
 
 $(PROCESSOUT)/registry/res/{$(alllangiso)}/$(PACKAGEDIR)/%.properties :| $(PROCESSOUT)/merge/$(PACKAGEDIR)/%.xcs
+	@echo "Making:   " $(@:f)
+.IF "$(VERBOSE)"!="FALSE"
     @echo -------------+ creating locale dependent resource bundles
-    -$(MKDIRHIER) $(@:d)
-    $(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $@)) \
+.ENDIF
+	@-$(MKDIRHIER) $(@:d)
+	$(COMMAND_ECHO)$(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $@)) \
                 --stringparam locale {$(subst,/$(PACKAGEDIR)/$(@:f), $(subst,$(PROCESSOUT)/registry/res/, $@))} \
                 $(SYSXSLDIR)resource.xsl $<
 
@@ -110,17 +116,20 @@ $(XCU_DEFAULT) : $(DTDDIR)/registry/component-update.dtd \
 .ENDIF
 
 $(PROCESSOUT)/registry/data/$(PACKAGEDIR)/%.xcu : %.xcu
+	@echo "Making:   " $(@:f)
+.IF "$(VERBOSE)"!="FALSE"
     @echo -------------+ validating and creating a locale independent file
-    -$(MKDIRHIER) $(@:d) 
-    $(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $(@:d))$*.val) \
+.ENDIF
+	@-$(MKDIRHIER) $(@:d) 
+	$(COMMAND_ECHO)$(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $(@:d))$*.val) \
                 --stringparam xcs $(XCSROOTURL)/registry/schema/$(XSLTPACKAGEDIR)/$*.xcs \
                 --stringparam schemaRoot $(XCSROOTURL)/registry/schema \
                 $(SYSXSLDIR)data_val.xsl $<
-    $(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $@)) \
+	$(COMMAND_ECHO)$(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $@)) \
                 --stringparam xcs $(XCSROOTURL)/registry/schema/$(XSLTPACKAGEDIR)/$*.xcs \
                 --stringparam schemaRoot $(XCSROOTURL)/registry/schema \
                 $(SYSXSLDIR)alllang.xsl $<
-    +-$(RM) $(@:d)$*.val > $(NULLDEV)
+	@+-$(RM) $(@:d)$*.val > $(NULLDEV)
 
 # --- localizations ---
 .IF "$(WITH_LANG)"!=""
@@ -129,8 +138,8 @@ $(XCU_LANG) : $(LOCALIZESDF)
 .ENDIF			# "$(XCU_LANG)"!=""
 
 $(PROCESSOUT)/merge/$(PACKAGEDIR)/%.xcu : %.xcu
-    -$(MKDIRHIER) $(@:d)
-    $(CFGEX) -p $(PRJNAME) -i $(@:f) -o $@ -m $(LOCALIZESDF) -l all
+	@-$(MKDIRHIER) $(@:d)
+	$(COMMAND_ECHO)$(CFGEX) $(CFGEX_VERBOSITY) -p $(PRJNAME) -i $(@:f) -o $@ -m $(LOCALIZESDF) -l all
 
 .IF "$(XCU_LANG)" != ""
 $(XCU_LANG) : $(XSLDIR)/alllang.xsl
@@ -140,9 +149,12 @@ $(PROCESSOUT)/registry/res/{$(alllangiso)}/$(PACKAGEDIR)/%.xcu :| $(PROCESSOUT)/
 .ELSE			# "$(WITH_LANG)"!=""
 $(PROCESSOUT)/registry/res/{$(alllangiso)}/$(PACKAGEDIR)/%.xcu :| %.xcu
 .ENDIF			# "$(WITH_LANG)"!=""
+	@echo "Making:   " $(@:f)
+.IF "$(VERBOSE)"!="FALSE"
     @echo ------------- creating locale dependent entries
-    -$(MKDIRHIER) $(@:d)
-    $(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $@)) \
+.ENDIF
+	@-$(MKDIRHIER) $(@:d)
+	$(COMMAND_ECHO)$(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $@)) \
                 --stringparam xcs $(XCSROOTURL)/registry/schema/$(XSLTPACKAGEDIR)/$*.xcs \
                 --stringparam schemaRoot $(XCSROOTURL)/registry/schema \
                 --stringparam locale {$(subst,/$(PACKAGEDIR)/$(@:f), $(subst,$(PROCESSOUT)/registry/res/, $@))} \
@@ -157,7 +169,7 @@ $(LANGUAGEPACKS) : $(XSLDIR)/delcomment.sed
 $(PROCESSOUT)/registry/spool/Langpack-%.xcu : Langpack.xcu.tmpl
     @echo -------------+ creating a Langpack module for locale $*
     -$(MKDIRHIER) $(@:d) 
-    $(SED) -e "s/__LANGUAGE__/$*/" -f $(XSLDIR)/delcomment.sed $< > $@
+    $(COMMAND_ECHO)$(SED) -e "s/__LANGUAGE__/$*/" -f $(XSLDIR)/delcomment.sed $< > $@
 
 
 # --- modules ---
@@ -167,9 +179,12 @@ $(XCU_MODULES) : $(XSLDIR)/alllang.xsl
 
 
 $(PROCESSOUT)/registry/spool/$(PACKAGEDIR)/%.xcu :| $$(@:b:s/-/./:b).xcu
+	@echo "Making:   " $(@:f)
+.IF "$(VERBOSE)"!="FALSE"
     @echo -------------+ creating a module file
-    -$(MKDIRHIER) $(@:d) 
-    $(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $@)) \
+.ENDIF
+	@-$(MKDIRHIER) $(@:d) 
+	$(COMMAND_ECHO)$(XSLTPROC) --nonet -o $(normpath $(subst,$(PATH_IN_MODULE), $(PWD))/$(subst,$(PRJ), $@)) \
                 --stringparam xcs $(XCSROOTURL)/registry/schema/$(XSLTPACKAGEDIR)/$(<:b).xcs \
                 --stringparam schemaRoot $(XCSROOTURL)/registry/schema \
                 --stringparam module $(subst,$(<:b)-, $(*)) \
diff --git solenv/inc/tg_def.mk solenv/inc/tg_def.mk
index 88feb36..ec539d0 100644
--- solenv/inc/tg_def.mk
+++ solenv/inc/tg_def.mk
@@ -53,18 +53,18 @@ $(DEF$(TNR)EXPORTFILE) : $(SHL$(TNR)OBJS) $(SHL$(TNR)LIBS)
 .ENDIF # .IF "$(COM)"=="GCC"
 
 $(DEF$(TNR)EXPORTFILE) : $(SHL$(TNR)VERSIONMAP)
-    $(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
+	$(COMMAND_ECHO)$(TYPE) $< | $(AWK) -f $(SOLARENV)/bin/getcsym.awk > $@
 .IF "$(COM)"=="GCC"
-    -$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
-    -$(GREP) "\*\|?" $@ > $@.symbols-regexp
+	$(COMMAND_ECHO)-$(GREP) -v "\*\|?" $@ | $(SED) -e 's@#.*@@' > $@.exported-symbols
+	$(COMMAND_ECHO)-$(GREP) "\*\|?" $@ > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
-    nm -gP $(SHL$(TNR)OBJS) \
-        `$(TYPE) /dev/null $(foreach,j,$(SHL$(TNR)LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
-        | $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)nm -gP $(SHL$(TNR)OBJS) \
+ 		`$(TYPE) /dev/null $(foreach,j,$(SHL$(TNR)LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)$/$(ROUT)\#g` \
+ 		| $(SOLARENV)/bin/addsym-mingw.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
-    $(RENAME) $@.exported-symbols $@
+	$(COMMAND_ECHO)$(RENAME) $@.exported-symbols $@
 .ENDIF # .IF "$(COM)"=="GCC"
 
 .ENDIF			# "$(GUI)"=="WNT"
@@ -96,8 +96,10 @@ $(DEF$(TNR)TARGETN) : \
 $(DEF$(TNR)TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(EMQ)"$(SHL$(TNR)TARGETN:f)$(EMQ)" 								 >$@.tmpfile
 .IF "$(COM)"!="GCC"
     @echo HEAPSIZE	  0 											>>$@.tmpfile
@@ -110,16 +112,16 @@ $(DEF$(TNR)TARGETN) .PHONY :
 .IF "$(DEFLIB$(TNR)NAME)"!=""
 .IF "$(COM)"=="GCC"
     @-$(RM) $(MISC)/$(SHL$(TNR)TARGET).exp
-    dlltool --output-def $(MISC)/$(SHL$(TNR)TARGET).exp --export-all-symbols \
+	$(COMMAND_ECHO)dlltool --output-def $(MISC)/$(SHL$(TNR)TARGET).exp --export-all-symbols \
          `$(TYPE) $(foreach,i,$(DEFLIB$(TNR)NAME) $(SLB)/$(i).lib) | sed s#$(ROUT)#$(PRJ)/$(ROUT)#g`
-    tail --lines +3 $(MISC)/$(SHL$(TNR)TARGET).exp | sed '/^;/d' >>$@.tmpfile
+	$(COMMAND_ECHO)tail --lines +3 $(MISC)/$(SHL$(TNR)TARGET).exp | sed '/^;/d' >>$@.tmpfile
     @-$(RM) $(MISC)/$(SHL$(TNR)TARGET).exp
 .ELSE
 .IF "$(SHL$(TNR)USE_EXPORTS)"==""
     @-$(RMHACK$(TNR)) $(MISC)/$(SHL$(TNR)TARGET).exp
     @$(LIBMGR) -EXTRACT:/ /OUT:$(MISC)/$(SHL$(TNR)TARGET).exp $(SLB)/$(DEFLIB$(TNR)NAME).lib
     @$(LDUMP2) -N $(EXPORT_ALL_SWITCH) -F $(MISC)/$(SHL$(TNR)TARGET).flt $(MISC)/$(SHL$(TNR)TARGET).exp			   >>$@.tmpfile
-    $(RMHACK$(TNR)) $(MISC)/$(SHL$(TNR)TARGET).exp
+	$(COMMAND_ECHO)$(RMHACK$(TNR)) $(MISC)/$(SHL$(TNR)TARGET).exp
 .ELSE			# "$(SHL$(TNR)USE_EXPORTS)"==""
     @$(DUMPBIN) -DIRECTIVES  $(foreach,i,$(DEFLIB$(TNR)NAME) $(SLB)/$(i).lib) | $(GREP) EXPORT: > $(MISC)/$(SHL$(TNR)TARGET).direct
     @$(LDUMP2) -N -D $(EXPORT_ALL_SWITCH) -F $(DEF$(TNR)FILTER) $(MISC)/$(SHL$(TNR)TARGET).direct >>$@.tmpfile
@@ -188,9 +190,9 @@ $(DEF$(TNR)TARGETN) .PHONY :
 .ENDIF
 .IF "$(DEF$(TNR)EXPORTFILE)"!=""
 .IF "$(COM)"=="GCC"
-    $(TYPE) $(DEF$(TNR)EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF$(TNR)EXPORTFILE) | sed -e s:PRIVATE:: >> $@.tmpfile
 .ELSE
-    $(TYPE) $(DEF$(TNR)EXPORTFILE) >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF$(TNR)EXPORTFILE) >> $@.tmpfile
 .ENDIF
 .ENDIF
     @-$(RM) $@
@@ -214,8 +216,10 @@ $(DEF$(TNR)TARGETN) : \
 $(DEF$(TNR)TARGETN) .PHONY :
 .ENDIF			# "$(link_always)"==""
     @+-$(RM) $@.tmpfile
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making Module-Definitionfile : $@
+.ENDIF
+	@echo "Making:    module definition file" $(@:f)
     @echo LIBRARY	  $(SHL$(TNR)TARGET8) INITINSTANCE TERMINSTANCE	 >$@.tmpfile
     @echo DATA MULTIPLE	 >>$@.tmpfile
     @echo DESCRIPTION	'StarView 3.00 $(DEF$(TNR)DES) $(UPD) $(UPDMINOR)' >>$@.tmpfile
@@ -296,11 +300,11 @@ $(DEF$(TNR)TARGETN) .PHONY :
     @sort < $@.tmp_ord | uniq > $@.exptmpfile
     @fix_def_ord < $@.exptmpfile >> $@.tmpfile
     @+-$(RM) $@
-    +$(RENAME) $@.tmpfile $@
+	$(COMMAND_ECHO)+$(RENAME) $@.tmpfile $@
     @+-$(RM) $@.tmp_ord
     @+-$(RM) $@.exptmpfile
-    +$(IMPLIB) $(IMPLIBFLAGS) $(SHL$(TNR)IMPLIBN:s/.lib/.a/) $@
-    +emxomf -o $(SHL$(TNR)IMPLIBN) $(SHL$(TNR)IMPLIBN:s/.lib/.a/) 
+	$(COMMAND_ECHO)+$(IMPLIB) $(IMPLIBFLAGS) $(SHL$(TNR)IMPLIBN:s/.lib/.a/) $@
+	$(COMMAND_ECHO)+emxomf -o $(SHL$(TNR)IMPLIBN) $(SHL$(TNR)IMPLIBN:s/.lib/.a/) 
 
 .ENDIF			# "$(GUI)"=="OS2"
 
diff --git solenv/inc/tg_dep.mk solenv/inc/tg_dep.mk
index 46a5ffb..e585120 100644
--- solenv/inc/tg_dep.mk
+++ solenv/inc/tg_dep.mk
@@ -53,9 +53,11 @@ ALLDEP .PHONY:
     echo xxx$(DEPFILES)xxx
     @@-$(RM) $(DEPFILES)
 .ENDIF			# "$(DEPFILES)" != ""
+.IF "$(VERBOSE)" == "TRUE"
     @echo ---
     @echo      $(PWD) - Old dependency files removed or updated
     @echo ---
+.ENDIF
 
 
 ALLDPC: \
@@ -95,13 +97,17 @@ ALLDPC: \
 
 
 ALLDPC:
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
     @echo No Dependencies
+.ENDIF
     @echo $(EMQ)# > $(MISC)/$(TARGET).dpc
 
 ALLDEP:
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
     @echo No Dependencies
+.ENDIF
 
 .ENDIF
 
diff --git solenv/inc/tg_ext.mk solenv/inc/tg_ext.mk
index b0096d7..f00b0a3 100644
--- solenv/inc/tg_ext.mk
+++ solenv/inc/tg_ext.mk
@@ -109,8 +109,8 @@ ALLTAR : \
     $(PACKAGE_DIR)/$(PREDELIVER_FLAG_FILE)
 
 clean:
-    cd $(P_BUILD_DIR) && $(BUILD_ACTION) $(BUILD_FLAGS) clean
-    $(RM) $(PACKAGE_DIR)/$(BUILD_FLAG_FILE)
+	$(COMMAND_ECHO)cd $(P_BUILD_DIR) && $(BUILD_ACTION) $(BUILD_FLAGS) clean
+	$(COMMAND_ECHO)$(RM) $(PACKAGE_DIR)/$(BUILD_FLAG_FILE)
 
 $(MISC)/%.unpack : $(PRJ)/download/%.tar.bz2
     @-$(RM) $@
@@ -169,9 +169,9 @@ $(MISC)/%.unpack : $(PRJ)/download/%.jar
 #do unpack
 $(PACKAGE_DIR)/$(UNTAR_FLAG_FILE) : $(PRJ)/$(ROUT)/misc/$(TARFILE_NAME).unpack $(PATCH_FILE_DEP)
     $(IFEXIST) $(PACKAGE_DIR)/$(TARFILE_ROOTDIR) $(THEN) $(RENAME:s/+//) $(PACKAGE_DIR)/$(TARFILE_ROOTDIR) $(PACKAGE_DIR)/$(TARFILE_ROOTDIR)_removeme $(FI)
-    -rm -rf $(PACKAGE_DIR)/$(TARFILE_ROOTDIR)_removeme
+	$(COMMAND_ECHO)-rm -rf $(PACKAGE_DIR)/$(TARFILE_ROOTDIR)_removeme
     @-$(MKDIRHIER) $(PACKAGE_DIR)$(fake_root_dir)
-    cd $(PACKAGE_DIR)$(fake_root_dir) && ( $(shell @$(TYPE) $(PRJ)/$(ROUT)/misc/$(TARFILE_NAME).unpack)) && $(TOUCH) $(UNTAR_FLAG_FILE)
+	$(COMMAND_ECHO)cd $(PACKAGE_DIR)$(fake_root_dir) && ( $(shell @$(TYPE) $(PRJ)/$(ROUT)/misc/$(TARFILE_NAME).unpack)) && $(TOUCH) $(UNTAR_FLAG_FILE)
     @echo make writeable...
     @cd $(PACKAGE_DIR) && chmod -R +rw $(TARFILE_ROOTDIR) && $(TOUCH) $(UNTAR_FLAG_FILE)
     @cd $(PACKAGE_DIR) && find $(TARFILE_ROOTDIR) -type d -exec chmod a+x {{}} \;
@@ -188,21 +188,21 @@ $(PACKAGE_DIR)/$(ADD_FILES_FLAG_FILE) : $(PACKAGE_DIR)/$(UNTAR_FLAG_FILE) $(T_AD
 $(PACKAGE_DIR)/$(PATCH_FLAG_FILE) : $(PACKAGE_DIR)/$(ADD_FILES_FLAG_FILE)
 .IF "$(PATCH_FILES)"=="none" ||	"$(PATCH_FILES)"==""
     @echo no patch needed...
-    $(TOUCH) $@
+    $(COMMAND_ECHO)$(TOUCH) $@
 .ELSE			# "$(PATCH_FILES)"=="none" ||	"$(PATCH_FILES)"==""
 .IF "$(GUI)"=="WNT"
 # hack to make 4nt version 4,01 work and still get propper
 # errorcodes for versions < 3,00
 #.IF "$(my4ver:s/.//:s/,//)" >= "300"
-#	cd $(PACKAGE_DIR) && ( $(TYPE:s/+//) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | tr -d "\015" | patch $(PATCHFLAGS) -p2 ) && $(TOUCH) $(PATCH_FLAG_FILE)
+#	$(COMMAND_ECHO)cd $(PACKAGE_DIR) && ( $(TYPE:s/+//) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | tr -d "\015" | patch $(PATCHFLAGS) -p2 ) && $(TOUCH) $(PATCH_FLAG_FILE)
 #.ELSE			# "$(my4ver:s/.//:s/,//)" >= "300"
-    cd $(PACKAGE_DIR) && $(TYPE:s/+//) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | tr -d "\015" | patch $(PATCHFLAGS) -p2 && $(TOUCH) $(PATCH_FLAG_FILE)
+	$(COMMAND_ECHO)cd $(PACKAGE_DIR) && $(TYPE:s/+//) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | tr -d "\015" | patch $(PATCHFLAGS) -p2 && $(TOUCH) $(PATCH_FLAG_FILE)
 #.ENDIF			# "$(my4ver:s/.//:s/,//)" >= "300"
 .ELSE           # "$(GUI)"=="WNT"
 .IF "$(BSCLIENT)"=="TRUE"
-    cd $(PACKAGE_DIR) && $(TYPE) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | $(GNUPATCH) -f $(PATCHFLAGS) -p2 && $(TOUCH) $(PATCH_FLAG_FILE)
+	$(COMMAND_ECHO)cd $(PACKAGE_DIR) && $(TYPE) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | $(GNUPATCH) -f $(PATCHFLAGS) -p2 && $(TOUCH) $(PATCH_FLAG_FILE)
 .ELSE           # "$(BSCLIENT)"!=""
-    cd $(PACKAGE_DIR) && $(TYPE) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | $(GNUPATCH) $(PATCHFLAGS) -p2 && $(TOUCH) $(PATCH_FLAG_FILE)
+	$(COMMAND_ECHO)cd $(PACKAGE_DIR) && $(TYPE) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | $(GNUPATCH) $(PATCHFLAGS) -p2 && $(TOUCH) $(PATCH_FLAG_FILE)
 .ENDIF          # "$(BSCLIENT)"!=""
 .ENDIF          # "$(GUI)"=="WNT"
 .ENDIF			# "$(PATCH_FILES)"=="none" ||	"$(PATCH_FILES)"==""
@@ -211,17 +211,17 @@ $(PACKAGE_DIR)/$(PATCH_FLAG_FILE) : $(PACKAGE_DIR)/$(ADD_FILES_FLAG_FILE)
 # Native W32 tools generate only filedates with even seconds, cygwin also with odd seconds
     $(DELAY) 2
 .ENDIF # "$(GUI)"=="WNT"
-    $(TOUCH) $(PACKAGE_DIR)/$(PATCH_FLAG_FILE)
+    $(COMMAND_ECHO)$(TOUCH) $(PACKAGE_DIR)/$(PATCH_FLAG_FILE)
 .ENDIF          # "$(T_ADDITIONAL_FILES)"!=""
 
 .IF "$(CONVERTFILES)"!=""
 $(MISC)/$(TARGET)_convert_unx_flag :  $(PACKAGE_DIR)/$(UNTAR_FLAG_FILE)
-    $(CONVERT) unix $(foreach,i,$(CONVERTFILES) $(PACKAGE_DIR)/$(TARFILE_ROOTDIR)/$i) && $(TOUCH) $(MISC)/$(TARGET)_convert_unx_flag
+	$(COMMAND_ECHO)$(CONVERT) unix $(foreach,i,$(CONVERTFILES) $(PACKAGE_DIR)/$(TARFILE_ROOTDIR)/$i) && $(TOUCH) $(MISC)/$(TARGET)_convert_unx_flag
 
 $(PACKAGE_DIR)/$(PATCH_FLAG_FILE) : $(MISC)/$(TARGET)_convert_unx_flag
 
 $(MISC)/$(TARGET)_convert_dos_flag : $(PACKAGE_DIR)/$(PATCH_FLAG_FILE)
-    $(CONVERT) dos  $(foreach,i,$(CONVERTFILES) $(PACKAGE_DIR)/$(TARFILE_ROOTDIR)/$i) && $(TOUCH) $(MISC)/$(TARGET)_convert_dos_flag
+	$(COMMAND_ECHO)$(CONVERT) dos  $(foreach,i,$(CONVERTFILES) $(PACKAGE_DIR)/$(TARFILE_ROOTDIR)/$i) && $(TOUCH) $(MISC)/$(TARGET)_convert_dos_flag
 
 $(PACKAGE_DIR)/$(CONFIGURE_FLAG_FILE) : $(MISC)/$(TARGET)_convert_dos_flag
 
@@ -232,43 +232,43 @@ patch : $(MISC)/$(TARGET)_convert_dos_flag
 $(PACKAGE_DIR)/$(CONFIGURE_FLAG_FILE) : $(PACKAGE_DIR)/$(PATCH_FLAG_FILE)
     @@-$(RM) $@
 .IF "$(CONFIGURE_ACTION)" == "none" || "$(CONFIGURE_ACTION)"==""
-    $(TOUCH) $(PACKAGE_DIR)/$(CONFIGURE_FLAG_FILE)
+	$(COMMAND_ECHO)$(TOUCH) $(PACKAGE_DIR)/$(CONFIGURE_FLAG_FILE)
 .ELSE			# "$(CONFIGURE_ACTION)"=="none" || "$(CONFIGURE_ACTION)"==""
-    -$(MKDIR) $(P_CONFIGURE_DIR)
+	$(COMMAND_ECHO)-$(MKDIR) $(P_CONFIGURE_DIR)
 .IF "$(OS)"=="OS2"
-    cd $(P_CONFIGURE_DIR) && sh -c "$(CONFIGURE_ACTION:s!\!/!) $(CONFIGURE_FLAGS:s!\!/!)" && $(TOUCH) $(CONFIGURE_FLAG_FILE)
+	$(COMMAND_ECHO)cd $(P_CONFIGURE_DIR) && sh -c "$(CONFIGURE_ACTION:s!\!/!) $(CONFIGURE_FLAGS:s!\!/!)" && $(TOUCH) $(CONFIGURE_FLAG_FILE)
 .ELSE
-    cd $(P_CONFIGURE_DIR) && $(CONFIGURE_ACTION) $(CONFIGURE_FLAGS) && $(TOUCH) $(CONFIGURE_FLAG_FILE)
+	$(COMMAND_ECHO)cd $(P_CONFIGURE_DIR) && $(CONFIGURE_ACTION) $(CONFIGURE_FLAGS) && $(TOUCH) $(CONFIGURE_FLAG_FILE)
 .ENDIF
-    mv $(P_CONFIGURE_DIR)/$(CONFIGURE_FLAG_FILE) $(PACKAGE_DIR)/$(CONFIGURE_FLAG_FILE)
+	$(COMMAND_ECHO)mv $(P_CONFIGURE_DIR)/$(CONFIGURE_FLAG_FILE) $(PACKAGE_DIR)/$(CONFIGURE_FLAG_FILE)
 .ENDIF			# "$(CONFIGURE_ACTION)"=="none" ||	"$(CONFIGURE_ACTION)"==""
 
 
 $(PACKAGE_DIR)/$(BUILD_FLAG_FILE) : $(PACKAGE_DIR)/$(CONFIGURE_FLAG_FILE)
     @@-$(RM) $@
 .IF "$(eq,x$(BUILD_ACTION:s/none//)x,xx true false)"=="true"
-    $(TOUCH) $(PACKAGE_DIR)/$(BUILD_FLAG_FILE)
+	$(COMMAND_ECHO)$(TOUCH) $(PACKAGE_DIR)/$(BUILD_FLAG_FILE)
 .ELSE			# "$(eq,x$(BUILD_ACTION:s/none//)x,xx true false)"=="true"
-    -$(MKDIR) $(P_BUILD_DIR)
-    cd $(P_BUILD_DIR) && $(BUILD_ACTION) $(BUILD_FLAGS) && $(TOUCH) $(ABS_PACKAGE_DIR)/$(BUILD_FLAG_FILE)
+	$(COMMAND_ECHO)-$(MKDIR) $(P_BUILD_DIR)
+	$(COMMAND_ECHO)cd $(P_BUILD_DIR) && $(BUILD_ACTION) $(BUILD_FLAGS) && $(TOUCH) $(ABS_PACKAGE_DIR)/$(BUILD_FLAG_FILE)
 .ENDIF			# "$(eq,x$(BUILD_ACTION:s/none//)x,xx true false)"=="true"
 
 $(PACKAGE_DIR)/$(INSTALL_FLAG_FILE) : $(PACKAGE_DIR)/$(BUILD_FLAG_FILE)
     @@-$(RM) $@
 .IF "$(INSTALL_ACTION)"=="none" ||	"$(INSTALL_ACTION)"==""
-    $(TOUCH) $(PACKAGE_DIR)/$(INSTALL_FLAG_FILE)
+	$(COMMAND_ECHO)$(TOUCH) $(PACKAGE_DIR)/$(INSTALL_FLAG_FILE)
 .ELSE			# "$(INSTALL_ACTION)"=="none" ||	"$(INSTALL_ACTION)"==""
-    -$(MKDIR) $(P_INSTALL_DIR)
-    -$(MKDIR) $(P_INSTALL_TARGET_DIR)
-    cd $(P_INSTALL_DIR) && $(INSTALL_ACTION) $(INSTALL_FLAGS) && $(TOUCH) $(INSTALL_FLAG_FILE)
-    mv $(P_INSTALL_DIR)/$(INSTALL_FLAG_FILE) $(PACKAGE_DIR)/$(INSTALL_FLAG_FILE)
+	$(COMMAND_ECHO)-$(MKDIR) $(P_INSTALL_DIR)
+	$(COMMAND_ECHO)-$(MKDIR) $(P_INSTALL_TARGET_DIR)
+	$(COMMAND_ECHO)cd $(P_INSTALL_DIR) && $(INSTALL_ACTION) $(INSTALL_FLAGS) && $(TOUCH) $(INSTALL_FLAG_FILE)
+	$(COMMAND_ECHO)mv $(P_INSTALL_DIR)/$(INSTALL_FLAG_FILE) $(PACKAGE_DIR)/$(INSTALL_FLAG_FILE)
 .ENDIF			# "$(INSTALL_ACTION)"=="none" ||	"$(INSTALL_ACTION)"==""
 
 $(PACKAGE_DIR)/$(PREDELIVER_FLAG_FILE) : $(PACKAGE_DIR)/$(INSTALL_FLAG_FILE)
 .IF "$(OUT2LIB)"!=""
-    $(COPY) $(foreach,i,$(OUT2LIB) $(PACKAGE_DIR)/$(TARFILE_ROOTDIR)/$i) $(LB)
+	$(COMMAND_ECHO)$(COPY) $(foreach,i,$(OUT2LIB) $(PACKAGE_DIR)/$(TARFILE_ROOTDIR)/$i) $(LB)
 .IF "$(OS)"=="MACOSX"
-    $(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl extshl \
+    $(COMMAND_ECHO)$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl extshl \
         $(EXTRPATH) \
         $(shell ls $(foreach,j,$(OUT2LIB) $(LB)/$(j:f)) | \
             (grep -v '\.a$$' || test $$? = 1))
@@ -295,15 +295,15 @@ $(PACKAGE_DIR)/$(PREDELIVER_FLAG_FILE) : $(PACKAGE_DIR)/$(INSTALL_FLAG_FILE)
 .ENDIF          # "$(GUI)$(COM)$(COMEX)"=="WNTMSC12"
 .ENDIF			# "$(OUT2BIN)"!=""
 .IF "$(OUT2CLASS)"!=""
-    $(COPY) $(foreach,i,$(OUT2CLASS) $(PACKAGE_DIR)/$(TARFILE_ROOTDIR)/$i) $(CLASSDIR)
+	$(COMMAND_ECHO)$(COPY) $(foreach,i,$(OUT2CLASS) $(PACKAGE_DIR)/$(TARFILE_ROOTDIR)/$i) $(CLASSDIR)
 .ENDIF			# "$(OUT2BIN)"!=""
-    $(TOUCH) $(PACKAGE_DIR)/$(PREDELIVER_FLAG_FILE)
+	$(COMMAND_ECHO)$(TOUCH) $(PACKAGE_DIR)/$(PREDELIVER_FLAG_FILE)
 
 $(MISC)/$(TARFILE_ROOTDIR).done : $(MISC)/$(TARFILE_NAME).unpack $(PATCH_FILES)
     @-mv $(MISC)/$(TARFILE_ROOTDIR) $(MISC)/$(TARFILE_ROOTDIR).old
     @-rm -rf $(MISC)/$(TARFILE_ROOTDIR).old
     @-$(MKDIRHIER) $(MISC)$(fake_root_dir)
-    cd $(MISC)$(fake_root_dir) && $(subst,$(BACK_PATH),$(MBACK_PATH) $(shell @$(TYPE) $(PRJ)/$(ROUT)/misc/$(TARFILE_NAME).unpack))
+	$(COMMAND_ECHO)cd $(MISC)$(fake_root_dir) && $(subst,$(BACK_PATH),$(MBACK_PATH) $(shell @$(TYPE) $(PRJ)/$(ROUT)/misc/$(TARFILE_NAME).unpack))
 .IF "$(P_ADDITIONAL_FILES)"!=""
     noop $(foreach,i,$(P_ADDITIONAL_FILES) $(shell echo dummy > $i))
 .ENDIF			 "$(P_ADDITIONAL_FILES)"!=""
@@ -315,32 +315,32 @@ $(MISC)/$(TARFILE_ROOTDIR).done : $(MISC)/$(TARFILE_NAME).unpack $(PATCH_FILES)
 # hack to make 4nt version 4,01 work and still get propper
 # errorcodes for versions < 3,00
 #.IF "$(my4ver:s/.//:s/,//)" >= "300"
-#	cd $(MISC) && ( $(TYPE:s/+//) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | tr -d "\015" | patch $(PATCHFLAGS) -p2 )
+#	$(COMMAND_ECHO)cd $(MISC) && ( $(TYPE:s/+//) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | tr -d "\015" | patch $(PATCHFLAGS) -p2 )
 #.ELSE			# "$(my4ver:s/.//:s/,//)" >= "300"
-    cd $(MISC) && $(TYPE:s/+//) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | tr -d "\015" | patch $(PATCHFLAGS) -p2
+	$(COMMAND_ECHO)cd $(MISC) && $(TYPE:s/+//) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | tr -d "\015" | patch $(PATCHFLAGS) -p2
 #.ENDIF			# "$(my4ver:s/.//:s/,//)" >= "300"
 .ELSE           # "$(GUI)"=="WNT"
 .IF "$(BSCLIENT)"=="TRUE"
-    cd $(MISC) && $(TYPE) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | $(GNUPATCH) -f $(PATCHFLAGS) -p2
+	$(COMMAND_ECHO)cd $(MISC) && $(TYPE) $(BACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | $(GNUPATCH) -f $(PATCHFLAGS) -p2
 .ELSE           # "$(BSCLIENT)"!=""
-    cd $(MISC) && $(TYPE) $(MBACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | $(GNUPATCH) $(PATCHFLAGS) -p2
+	$(COMMAND_ECHO)cd $(MISC) && $(TYPE) $(MBACK_PATH)$(PATH_IN_MODULE)/{$(PATCH_FILES)} | $(GNUPATCH) $(PATCHFLAGS) -p2
 .ENDIF          # "$(BSCLIENT)"!=""
 .ENDIF          # "$(GUI)"=="WNT"
 .IF "$(CONVERTFILES)"!=""
-    $(CONVERT) dos  $(foreach,i,$(CONVERTFILES) $(MISC)/$(TARFILE_ROOTDIR)/$i)
+	$(COMMAND_ECHO)$(CONVERT) dos  $(foreach,i,$(CONVERTFILES) $(MISC)/$(TARFILE_ROOTDIR)/$i)
 .ENDIF          # "$(CONVERTFILES)"!=""
 .ENDIF			# "$(PATCH_FILES)"!="none" && "$(PATCH_FILES)"!="
 .IF "$(GUI)"=="UNX"	
-    $(TOUCH) $@
+	$(COMMAND_ECHO)$(TOUCH) $@
 .ENDIF			# "$(GUI)"=="UNX"
 
 .IF "$(T_ADDITIONAL_FILES)"!=""
 $(T_ADDITIONAL_FILES:+".dummy") : $(PACKAGE_DIR)/$(UNTAR_FLAG_FILE)
     @-$(MKDIRHIER) $(@:d)
-    -echo dummy > $@
-    -$(TOUCH) $@
-    -echo dummy > $(@:d)$(@:b)
-    -$(TOUCH) $(@:d)$(@:b)
+	$(COMMAND_ECHO)-echo dummy > $@
+	$(COMMAND_ECHO)-$(TOUCH) $@
+	$(COMMAND_ECHO)-echo dummy > $(@:d)$(@:b)
+	$(COMMAND_ECHO)-$(TOUCH) $(@:d)$(@:b)
 .ENDIF			 "$(T_ADDITIONAL_FILES)"!=""
 
 create_patch : $(MISC)/$(TARFILE_ROOTDIR).done $(PACKAGE_DIR)/$(PATCH_FLAG_FILE)
@@ -349,12 +349,12 @@ create_patch : $(MISC)/$(TARFILE_ROOTDIR).done $(PACKAGE_DIR)/$(PATCH_FLAG_FILE)
     @@-$(RM) $(PRJ)/$(PATH_IN_MODULE)/$(NEW_PATCH_FILE_NAME).bak
 #ignore returncode of 1 (indicates differences...)
 # hard coded again to get the same directory level as before. quite ugly...
-    -cd $(PRJ)/$(ROUT) && diff -ru misc/$(TARFILE_ROOTDIR) misc/build/$(TARFILE_ROOTDIR) | $(PERL) $(SOLARENV)/bin/cleandiff.pl | tr -d "\015" > misc/$(NEW_PATCH_FILE_NAME:f).tmp
-    -mv $(PRJ)/$(PATH_IN_MODULE)/$(NEW_PATCH_FILE_NAME) $(PRJ)/$(PATH_IN_MODULE)/$(NEW_PATCH_FILE_NAME).bak
-    -$(TOUCH) $(PRJ)/$(PATH_IN_MODULE)/$(NEW_PATCH_FILE_NAME).bak
-    $(PERL) $(SOLARENV)/bin/patch_sanitizer.pl $(PRJ)/$(PATH_IN_MODULE)/$(NEW_PATCH_FILE_NAME).bak $(MISC)/$(NEW_PATCH_FILE_NAME:f).tmp $(PRJ)/$(PATH_IN_MODULE)/$(NEW_PATCH_FILE_NAME)
+	$(COMMAND_ECHO)-cd $(PRJ)/$(ROUT) && diff -ru misc/$(TARFILE_ROOTDIR) misc/build/$(TARFILE_ROOTDIR) | $(PERL) $(SOLARENV)/bin/cleandiff.pl | tr -d "\015" > misc/$(NEW_PATCH_FILE_NAME:f).tmp
+	$(COMMAND_ECHO)-mv $(PRJ)/$(PATH_IN_MODULE)/$(NEW_PATCH_FILE_NAME) $(PRJ)/$(PATH_IN_MODULE)/$(NEW_PATCH_FILE_NAME).bak
+	$(COMMAND_ECHO)-$(TOUCH) $(PRJ)/$(PATH_IN_MODULE)/$(NEW_PATCH_FILE_NAME).bak
+	$(COMMAND_ECHO)$(PERL) $(SOLARENV)/bin/patch_sanitizer.pl $(PRJ)/$(PATH_IN_MODULE)/$(NEW_PATCH_FILE_NAME).bak $(MISC)/$(NEW_PATCH_FILE_NAME:f).tmp $(PRJ)/$(PATH_IN_MODULE)/$(NEW_PATCH_FILE_NAME)
     @@-$(RM) $(MISC)/$(NEW_PATCH_FILE_NAME:f).tmp $(PRJ)/$(PATH_IN_MODULE)/$(NEW_PATCH_FILE_NAME).bak
-    $(MAKECMD) $(MAKEMACROS) patch
+	$(COMMAND_ECHO)$(MAKECMD) $(MAKEMACROS) patch
     @echo still some problems with win32 generated patches...
     @echo $(USQ)find your new changes in $(NEW_PATCH_FILE_NAME). don't forget to move/rename that patch and insert it in your makefiles PATCH_FILES to activate.$(USQ)
 
diff --git solenv/inc/tg_jar.mk solenv/inc/tg_jar.mk
index 3974f07..24398a3 100644
--- solenv/inc/tg_jar.mk
+++ solenv/inc/tg_jar.mk
@@ -30,6 +30,10 @@
 #*************************************************************************
 
 
+.IF "$(VERBOSE)"=="FALSE"
+ZIP_VERBOSITY=-q
+.ENDIF
+
 .IF "$(JARTARGETN)"!=""
 
 .IF "$(JARCOMPRESS)"==""
diff --git solenv/inc/tg_java.mk solenv/inc/tg_java.mk
index eb94f83..305855e 100644
--- solenv/inc/tg_java.mk
+++ solenv/inc/tg_java.mk
@@ -34,8 +34,10 @@
 $(CLASSDIR)/com/sun/star/upd/$(VERSIONINFOFILE)_updversion.class .PHONY: $(MISC)/java/com/sun/star/upd/$(VERSIONINFOFILE)_updversion.java 
 
 $(MISC)/java/com/sun/star/upd/$(VERSIONINFOFILE)_updversion.java .PHONY:
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(MKDIRHIER) $(MISC)/java/com/sun/star/upd
 .IF "$(GUI)"=="UNX"
     @echo package com.sun.star.upd\; > $@
diff --git solenv/inc/tg_lib.mk solenv/inc/tg_lib.mk
index bfe9d18..2fc302a 100644
--- solenv/inc/tg_lib.mk
+++ solenv/inc/tg_lib.mk
@@ -37,7 +37,7 @@
 .IF "$(LIB$(TNR)ARCHIV)" != ""
 
 $(LIB$(TNR)ARCHIV) :	$(LIB$(TNR)TARGET)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @-$(RM) $(MISC)/$(LIB$(TNR)ARCHIV:b).cmd
@@ -54,14 +54,18 @@ $(LIB$(TNR)ARCHIV) :	$(LIB$(TNR)TARGET)
 .IF "$(OS)" == "MACOSX"
      @echo  ranlib $(LIB$(TNR)ARCHIV) >> $(MISC)/$(LIB$(TNR)ARCHIV:b).cmd
 .ENDIF
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB$(TNR)ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB$(TNR)ARCHIV:b).cmd
 .ELSE			# "$(GUI)"=="UNX"
 .IF "$(GUI)$(COM)"=="WNTGCC"
     @+-$(RM) $(MISC)/$(LIB$(TNR)ARCHIV:b).cmd
     @+echo $(LIBMGR) $(LIB$(TNR)FLAGS) $(LIBFLAGS) $(LIB$(TNR)ARCHIV) `cat $(LIB$(TNR)TARGET) | sed s#'^'$(ROUT)#$(PRJ)/$(ROUT)#g` > $(MISC)/$(LIB$(TNR)ARCHIV:b).cmd
     @+echo  ranlib $(LIB$(TNR)ARCHIV) >> $(MISC)/$(LIB$(TNR)ARCHIV:b).cmd
+.IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(LIB$(TNR)ARCHIV:b).cmd
+.ENDIF
     @+source $(MISC)/$(LIB$(TNR)ARCHIV:b).cmd
 .ELSE
     @echo just a dummy > $@
@@ -73,10 +77,12 @@ $(LIB$(TNR)ARCHIV) :	$(LIB$(TNR)TARGET)
 $(LIB$(TNR)TARGET) :	$(LIB$(TNR)FILES) \
                         $(LIB$(TNR)OBJFILES) \
                         $(LIB$(TNR)DEPN)
+.IF "$(VERBOSE)" == "TRUE"
     @echo using: $(LIB$(TNR)FILES)
     @echo using: $(LIB$(TNR)TARGET)
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(RM) $@
 .IF "$(GUI)"=="UNX"
     @echo $(LIB$(TNR)OBJFILES:s/.obj/.o/) | sed "s#$(PRJ:s/./\./)/$(ROUT)#$(ROUT)#g" | xargs -n 1 > $@
@@ -89,7 +95,7 @@ $(LIB$(TNR)TARGET) :	$(LIB$(TNR)FILES) \
 .ENDIF
 
 .ELIF "$(GUI)"=="OS2"
-    $(LIBMGR) $(LIBFLAGS) $@ $(LIB$(TNR)FILES) $(LIB$(TNR)OBJFILES)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(LIB$(TNR)FILES) $(LIB$(TNR)OBJFILES)
     @+-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB$(TNR)OBJFILES)"!=""    
     @+$(TYPE) $(mktmp $(LIB$(TNR)OBJFILES)) > $(null,$(LIB$(TNR)OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -105,7 +111,7 @@ $(LIB$(TNR)TARGET) :	$(LIB$(TNR)FILES) \
     +$(ECHONL) $(LIB$(TNR)OBJFILES) | sed "s#$(PRJ:s/././)/$(ROUT)#$(ROUT)#g" | xargs -n1 > $@
     @+cat /dev/null $(LIB$(TNR)FILES) | xargs -n1 >> $@
 .ELSE
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB$(TNR)FILES) $(LIB$(TNR)OBJFILES))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(LIB$(TNR)FILES) $(LIB$(TNR)OBJFILES))
     @-$(RM) $(@:s/.lib/.lin/)
 .IF "$(LIB$(TNR)OBJFILES)"!=""    
     @$(TYPE) $(mktmp $(LIB$(TNR)OBJFILES)) > $(null,$(LIB$(TNR)OBJFILES) $(NULLDEV) $(@:s/.lib/.lin/))
@@ -117,8 +123,10 @@ $(LIB$(TNR)TARGET) :	$(LIB$(TNR)FILES) \
 .ENDIF          # "$(LIB$(TNR)FILES)"!=""    
 .ELSE			# "$(GUI)"=="WNT"
     @-$(RM) $@
-    echo $(LIBMGR) r $@ $(LIB$(TNR)OBJFILES)
-    $(LIBMGR) r $@ $(LIB$(TNR)OBJFILES) $(LIB$(TNR)FILES) bla.lib
+  .IF "$(VERBOSE)" == "TRUE"
+	@echo $(LIBMGR) r $@ $(LIB$(TNR)OBJFILES)
+  .ENDIF
+	$(COMMAND_ECHO)$(LIBMGR) r $@ $(LIB$(TNR)OBJFILES) $(LIB$(TNR)FILES) bla.lib
 .ENDIF          # "$(GUI)"=="WNT"
 .ENDIF          # "$(GUI)"=="UNX"
 .ENDIF          # "$(LIB$(TNR)TARGET)" != ""
diff --git solenv/inc/tg_moz.mk solenv/inc/tg_moz.mk
index cce44f8..6d61c58 100644
--- solenv/inc/tg_moz.mk
+++ solenv/inc/tg_moz.mk
@@ -47,11 +47,11 @@ EXTRA_MOZ_TARGET+= $(XPIDL_TYPELIB_MODULE)
 ALLMOZ:=$(EXTRA_MOZ_TARGET) $(DO_XPIDL) $(GEN_PRCPUCFG) $(EXPORT_HEADER)
 
 $(INCCOM)/%.h : %.idl
-    $(COPY) $< $(INCCOM)
-    $(XPIDL) -m header -w -I $(SOLARIDLDIR)/mozilla -I$(INCCOM) -I . -o $(INCCOM)/$* $<
+	$(COMMAND_ECHO)$(COPY) $< $(INCCOM)
+	$(COMMAND_ECHO)$(XPIDL) -m header -w -I $(SOLARIDLDIR)/mozilla -I$(INCCOM) -I . -o $(INCCOM)/$* $<
 
 $(MISC)/%.xpt : %.idl
-    $(XPIDL) -m typelib -w -I $(SOLARIDLDIR)/mozilla -I$(INCCOM) -I . -o $(MISC)/$* $<
+	$(COMMAND_ECHO)$(XPIDL) -m typelib -w -I $(SOLARIDLDIR)/mozilla -I$(INCCOM) -I . -o $(MISC)/$* $<
 
 .INCLUDE : target.mk
 
@@ -87,7 +87,7 @@ $(EXPORT_HEADER):
 
 .IF "$(XPIDLSRCS)"!=""
 $(XPIDL_TYPELIB_MODULE): $(foreach,i,$(XPIDLXPT) $(MISC)/$i)
-    $(XPIDL_LINK) $(MISC)/$(XPIDL_MODULE).xpt $^
+	$(COMMAND_ECHO)$(XPIDL_LINK) $(MISC)/$(XPIDL_MODULE).xpt $^
     @-mkdir $(BIN)/components
     @$(COPY) $@ $(BIN)/components
 .ENDIF
diff --git solenv/inc/tg_obj.mk solenv/inc/tg_obj.mk
index 659af6f..64da8ab 100644
--- solenv/inc/tg_obj.mk
+++ solenv/inc/tg_obj.mk
@@ -33,13 +33,15 @@ MKFILENAME:=TG_OBJ.MK
 
 .IF "$(OBJTARGET)"!=""
 $(OBJTARGET): $(OBJFILES) $(IDLOBJFILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="OS2"
 .IF "$(LIBTARGET)"!="NO"
     @-$(TYPE) $(mktmp $(&:+"\n")) > $(@:s/.lib/.lin/)
 .ENDIF          # "$(LIBTARGET)"!="NO"
-    $(LIBMGR) $(LIBFLAGS) $@ $(&)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(&)
 .ENDIF		# "$(GUI)"=="OS2"
 
 .IF "$(GUI)"=="WNT"
@@ -49,11 +51,11 @@ $(OBJTARGET): $(OBJFILES) $(IDLOBJFILES)
 .IF "$(LIBTARGET)"!="NO"
     @-$(TYPE) $(mktmp $(&:+"\n")) > $(@:s/.lib/.lin/)
 .ENDIF          # "$(LIBTARGET)"!="NO"
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(&:+"\n"))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(&:+"\n"))
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)"=="WNT"
 .IF "$(GUI)"=="UNX"
-    echo $(foreach,i,$(OBJFILES:f) $(ROBJ)/$(i:s/.obj/.o/)) | xargs -n1 > $@
+	@echo $(foreach,i,$(OBJFILES:f) $(ROBJ)/$(i:s/.obj/.o/)) | xargs -n1 > $@
 .IF "$(OS)"=="MACOSX"
     @-nm `cat $(OBJTARGET) | sed s\#'^'$(ROUT)\#$(PRJ)/$(ROUT)\#g` > $(@:d)$(@:b).dump
 .ELSE
@@ -66,13 +68,15 @@ $(OBJTARGET): $(OBJFILES) $(IDLOBJFILES)
 .IF "$(SECOND_BUILD)"!=""
 .IF "$($(SECOND_BUILD)OBJTARGET)"!=""
 $($(SECOND_BUILD)OBJTARGET): $(REAL_$(SECOND_BUILD)_OBJFILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="OS2"
 .IF "$(LIBTARGET)"!="NO"
     @-$(TYPE) $(mktmp $(&:+"\n")) > $(@:s/.lib/.lin/)
 .ENDIF          # "$(LIBTARGET)"!="NO"
-    $(LIBMGR) $(LIBFLAGS) $@ $(&)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(&)
 .ENDIF			# "$(GUI)"=="OS2"
 
 .IF "$(GUI)"=="WNT"
@@ -83,11 +87,11 @@ $($(SECOND_BUILD)OBJTARGET): $(REAL_$(SECOND_BUILD)_OBJFILES)
 .IF "$(LIBTARGET)"!="NO"
     @-$(TYPE) $(mktmp $(&:+"\n")) > $(@:s/.lib/.lin/)
 .ENDIF          # "$(LIBTARGET)"!="NO"
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(&:+"\n"))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(&:+"\n"))
 .ENDIF
 .ENDIF			# "$(GUI)"=="WNT"
 .IF "$(GUI)"=="UNX"
-    echo $(foreach,i,$(REAL_$(SECOND_BUILD)_OBJFILES:f) $(ROBJ)/$(i:s/.obj/.o/)) | xargs -n1 >> $@
+	@echo $(foreach,i,$(REAL_$(SECOND_BUILD)_OBJFILES:f) $(ROBJ)/$(i:s/.obj/.o/)) | xargs -n1 >> $@
 .ENDIF			# "$(GUI)"=="UNX"
 .ENDIF			# "$($(SECOND_BUILD)OBJTARGET)"!=""
 .ENDIF			# "$(SECOND_BUILD)"!=""
@@ -96,5 +100,5 @@ $($(SECOND_BUILD)OBJTARGET): $(REAL_$(SECOND_BUILD)_OBJFILES)
 .IF "$(LIBTARGET)"!="NO"
     @-$(TYPE) $(mktmp $(&:+"\n")) > $(@:s/.lib/.lin/)
 .ENDIF          # "$(LIBTARGET)"!="NO"
-    $(LIBMGR) $(LIBFLAGS) $@ $(&)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(&)
 .ENDIF			# "$(GUI)"=="OS2"
diff --git solenv/inc/tg_res.mk solenv/inc/tg_res.mk
index c646aeb..81e5d78 100644
--- solenv/inc/tg_res.mk
+++ solenv/inc/tg_res.mk
@@ -33,16 +33,18 @@
 .IF "$(RCTARGET)"!=""
 $(RCTARGET): $(RCFILES) 		\
              $(RCDEPN)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(CCNUMVER)" > "001300000000"
 .IF "$(MFC_INCLUDE)"!=""
-    $(RC) $(INCLUDE) -I$(SOLARRESDIR) $(foreach,i,$(ATL_INCLUDE) -I$(i)) -I$(MFC_INCLUDE) $(RCLANGFLAGS_$(@:d:d:b)) $(RCFLAGS)
+	$(COMMAND_ECHO)$(RC) $(INCLUDE) -I$(SOLARRESDIR) $(foreach,i,$(ATL_INCLUDE) -I$(i)) -I$(MFC_INCLUDE) $(RCLANGFLAGS_$(@:d:d:b)) $(RCFLAGS)
 .ELSE
-    $(RC) $(INCLUDE) -I$(SOLARRESDIR) $(foreach,i,$(ATL_INCLUDE) -I$(i)) $(RCLANGFLAGS_$(@:d:d:b)) $(RCFLAGS)
+	$(COMMAND_ECHO)$(RC) $(INCLUDE) -I$(SOLARRESDIR) $(foreach,i,$(ATL_INCLUDE) -I$(i)) $(RCLANGFLAGS_$(@:d:d:b)) $(RCFLAGS)
 .ENDIF
 .ELSE
-    $(RC) $(INCLUDE) -I$(SOLARRESDIR) $(RCLANGFLAGS_$(@:d:d:b)) $(RCFLAGS)
+	$(COMMAND_ECHO)$(RC) $(INCLUDE) -I$(SOLARRESDIR) $(RCLANGFLAGS_$(@:d:d:b)) $(RCFLAGS)
 .ENDIF
 .ENDIF
 
diff --git solenv/inc/tg_rslb.mk solenv/inc/tg_rslb.mk
index f5e630b..e5a12af 100644
--- solenv/inc/tg_rslb.mk
+++ solenv/inc/tg_rslb.mk
@@ -40,11 +40,13 @@ HIDRES$(TNR)PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(MISC))/$(RESLIB$(TNR)
 #HACK cut off the dirty srs files which are included from solver
 RESLIB$(TNR)HIDFILES:=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,.srs,_srs.hid $(RESLIB$(TNR)SRSFILES)))
 $(HIDRES$(TNR)PARTICLE): $(RESLIB$(TNR)HIDFILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @$(IFEXIST) $@ $(THEN) $(RM:s/+//) $@ $(FI)
 # need to strip since solaris cannot handle tab-only whitespace here
-    $(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB$(TNR)HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(strip, $(subst,/,/ $(RESLIB$(TNR)HIDFILES))) )| xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDRES$(TNR)PARTICLE)
@@ -55,9 +57,9 @@ $(RSC_MULTI$(TNR)) : \
         $(RESLIB$(TNR)SRSFILES) \
         $(RESLIB$(TNR)TARGETN) \
         $(RESLIB$(TNR)BMPS)
-    @echo using rsc multi-res feature
+	@echo Compiling: $(@:f)
 .IF "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -72,7 +74,7 @@ $(RSC_MULTI$(TNR)) : \
     $(RSC$(TNR)HEADER) $(RESLIB$(TNR)SRSFILES) \
     ) > $(NULLDEV)
 .ELSE			# "$(common_build_reslib)"!=""
-    $(RSC) -presponse @$(mktmp \
+	$(COMMAND_ECHO)$(RSC) -presponse $(VERBOSITY) @$(mktmp \
     -r -p \
     $(foreach,i,$(alllangiso) -lg$i \
     $(null,$(rescharset_{$i}) $(default$(LANG_GUI)) $(rescharset_{$i})) \
@@ -91,7 +93,7 @@ $(RSC_MULTI$(TNR)) : \
 $(RESLIB$(TNR)TARGETN): \
         $(RESLIB$(TNR)SRSFILES) \
         $(RESLIB$(TNR)BMPS)
-    @echo Making: $@
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="UNX"
 .IF "$(common_build_reslib)"!=""
     @@-$(RM) $(RSC_MULTI$(TNR))
diff --git solenv/inc/tg_scp.mk solenv/inc/tg_scp.mk
index 5c9066c..eade103 100644
--- solenv/inc/tg_scp.mk
+++ solenv/inc/tg_scp.mk
@@ -38,15 +38,17 @@
 # try to get missing parfiles
 $(PAR)/%.par : $(SOLARPARDIR)/%.par
     @@-$(MKDIRHIER) $(@:d:d)
-    $(COPY) $< $@
+	$(COMMAND_ECHO)$(COPY) $< $@
 
 LOCALSCP$(TNR)FILES=$(foreach,i,$(SCP$(TNR)FILES) $(foreach,j,$(SCP$(TNR)LINK_PRODUCT_TYPE) $(PAR)/$j/$i ))
 
 $(SCP$(TNR)TARGETN): $(LOCALSCP$(TNR)FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@-$(MKDIRHIER) $(BIN)/$(SCP$(TNR)LINK_PRODUCT_TYPE)
-    $(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP$(TNR)FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
+	$(COMMAND_ECHO)$(SCPLINK) $(SCPLINKFLAGS) @@$(mktmp $(foreach,i,$(SCP$(TNR)FILES) $(subst,$(@:d:d:d), $(@:d:d))/$(i:+","))) -o $@
 .ENDIF
 
 # Anweisungen fuer das Linken
diff --git solenv/inc/tg_sdi.mk solenv/inc/tg_sdi.mk
index 107ba27..90b327d 100644
--- solenv/inc/tg_sdi.mk
+++ solenv/inc/tg_sdi.mk
@@ -35,8 +35,10 @@
 
 .IF "$(HIDSID$(TNR)PARTICLE)"!=""
 $(HIDSID$(TNR)PARTICLE): $(SDI$(TNR)TARGET)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@.$(ROUT).tmp $@
     @$(TYPE) $(MISC)/$(SDI$(TNR)NAME).sid | $(AWK) '$$1=="#define" { print $$2, $$3 }' > $@.$(ROUT).tmp
     @-$(RM) $@
@@ -45,10 +47,13 @@ $(HIDSID$(TNR)PARTICLE): $(SDI$(TNR)TARGET)
 
 .IF "$(SDI$(TNR)TARGET)"!=""
 $(SDI$(TNR)TARGET): $(SVSDI$(TNR)DEPEND) $(SDI$(TNR)NAME).sdi
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(SVIDL) @$(mktmp \
+	$(COMMAND_ECHO)$(SVIDL) @$(mktmp \
+	$(VERBOSITY) \
     -fs$(INCCOMX)/$(SDI$(TNR)NAME).hxx	\
     -fd$(INCCOMX)/$(SDI$(TNR)NAME).ilb	\
     -fm$(MISC)/$(SDI$(TNR)NAME).don	\
diff --git solenv/inc/tg_shl.mk solenv/inc/tg_shl.mk
index 75fea56..2069c3b 100644
--- solenv/inc/tg_shl.mk
+++ solenv/inc/tg_shl.mk
@@ -88,7 +88,7 @@ SHL$(TNR)VERSIONOBJDEP:=$(VERSIONOBJ:d){$(subst,$(DLLPOSTFIX),_dflt $(SHL$(TNR)T
 .ENDIF          # "$(GUI)" == "UNX"
 $(MISC)/$(SHL$(TNR)VERSIONOBJ:b).c : $(SOLARENV)/src/version.c $(INCCOM)/$(SHL$(TNR)VERSIONOBJ:b).h
 #    $(COPY) $(SOLARENV)/src/version.c $@
-    $(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL$(TNR)VERSIONOBJ:b).h/ > $@
+	$(COMMAND_ECHO)$(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL$(TNR)VERSIONOBJ:b).h/ > $@
 
 .INIT : $(SHL$(TNR)VERSIONOBJDEP)
 .ENDIF			# "$(VERSIONOBJ)"!=""
@@ -151,16 +151,20 @@ $(USE_SHL$(TNR)VERSIONMAP): \
 .ENDIF
 .ENDIF			# "$(SHL$(TNR)OBJS)!"=""
     @$(TYPE) /dev/null $(SHL$(TNR)LIBS:s/.lib/.dump/) >> $@.dump
-    $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL$(TNR)INTERFACE) -f $(SHL$(TNR)FILTERFILE) -m $@
+	$(COMMAND_ECHO) $(PERL) $(SOLARENV)/bin/mapgen.pl -d $@.dump -s $(SHL$(TNR)INTERFACE) -f $(SHL$(TNR)FILTERFILE) -m $@
 
 .ELSE			# "$(SHL$(TNR)FILTERFILE)"!=""
 USE_SHL$(TNR)VERSIONMAP=$(MISC)/$(SHL$(TNR)TARGET).vmap
 $(USE_SHL$(TNR)VERSIONMAP) :
+.IF "$(VERBOSE)" == "TRUE"
     @echo -----------------------------
     @echo SHL$(TNR)FILTERFILE not set!
     @echo -----------------------------
     @$(TOUCH) $@
     @echo dummy file to keep the dependencies for later use.
+.ELSE
+	@$(TOUCH) $@
+.ENDIF
 #	force_dmake_to_error
 .ENDIF			# "$(SHL$(TNR)FILTERFILE)"!=""
 .ELSE			# "$(USE_SHL$(TNR)VERSIONMAP)"!=""
@@ -187,25 +191,25 @@ $(USE_SHL$(TNR)VERSIONMAP): $(SHL$(TNR)VERSIONMAP)
 # Its questionable if the following condition '.IF "$(COMID)"=="gcc3"' makes sense and what
 # happens if somebody will change it in the future
 .IF "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL$(TNR)VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL$(TNR)VERSIONMAP) | $(AWK) -f $(SOLARENV)/bin/addsym.awk > $@
 .ELIF "$(COMNAME)"=="sunpro5"
-    tr -d "\015" < $(SHL$(TNR)VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL$(TNR)VERSIONMAP) | $(GREP) -v $(IGNORE_SYMBOLS) > $@
 .ELSE           # "$(COMID)"=="gcc3"
-    tr -d "\015" < $(SHL$(TNR)VERSIONMAP) > $@
+	$(COMMAND_ECHO) tr -d "\015" < $(SHL$(TNR)VERSIONMAP) > $@
 .ENDIF          # "$(COMID)"=="gcc3"
     @chmod a+w $@
 # Mac OS X post-processing generate an exported symbols list from the generated map file
 # for details on exported symbols list see man ld on Mac OS X
 .IF "$(OS)"=="MACOSX"
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
-    -cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep -v "\*\|?" > $@.exported-symbols
+	@-cat $@ | $(AWK) -f $(SOLARENV)/bin/unxmap-to-macosx-explist.awk | grep "\*\|?" > $@.symbols-regexp
 # Shared libraries will be build out of the *.obj files specified in SHL?OBJS and SHL?LIBS
 # Extract RTTI symbols from all the objects that will be used to build a shared library
 .IF "$(SHL$(TNR)OBJS)"!=""
     -echo $(foreach,i,$(SHL$(TNR)OBJS:s/.obj/.o/) $i) | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 .IF "$(SHL$(TNR)LIBS)"!=""
-    -$(TYPE) $(foreach,j,$(SHL$(TNR)LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
+	$(COMMAND_ECHO)-$(TYPE) $(foreach,j,$(SHL$(TNR)LIBS) $j) | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g | xargs -n1 nm -gx | $(SOLARENV)/bin/addsym-macosx.sh $@.symbols-regexp $@.symbols-regexp.tmp >> $@.exported-symbols
 .ENDIF
 # overwrite the map file generate into the local output tree with the generated
 # exported symbols list
@@ -247,7 +251,7 @@ SHL$(TNR)LINKRESO*=$(MISC)/$(SHL$(TNR)TARGET)_res.o
 .IF "$(SHL$(TNR)LIBS)"!=""
 $(MISC)/$(SHL$(TNR)TARGET)_linkinc.ls .PHONY:
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL$(TNR)LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL$(TNR)LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL$(TNR)LIBS)"!=""
 .ENDIF
 
@@ -263,14 +267,14 @@ SHL$(TNR)LINKLIST=$(MISC)/$(SHL$(TNR)TARGET)_link.lst
 SHL$(TNR)LINKLISTPARAM=@$(SHL$(TNR)LINKLIST)
 $(SHL$(TNR)LINKLIST) : $(SHL$(TNR)LIBS)
     @@-$(RM) $@
-    $(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL$(TNR)LIBS) $(i:s/.lib/.lin/)) >> $@
+	$(COMMAND_ECHO)$(SED) -f $(SOLARENV)/bin/chrel.sed $(foreach,i,$(SHL$(TNR)LIBS) $(i:s/.lib/.lin/)) >> $@
 .ENDIF          # "$(SHL$(TNR)LIBS)"!=""
 .ENDIF          # "$(COM)"!="GCC"
 .ENDIF
 .ENDIF			# "$(SHL$(TNR)USE_EXPORTS)"=="name"
 
 $(MISC)/%linkinc.ls:
-    echo . > $@
+	@echo . > $@
 .ENDIF          # "$(linkinc)"!=""
 
 .IF "$(GUI)" == "OS2"
@@ -297,8 +301,10 @@ $(SHL$(TNR)TARGETN) : \
                     $(SHL$(TNR)DEPN) \
                     $(SHL$(TNR)IMP_ORD) \
                     $(SHL$(TNR)LINKLIST)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $(SHL$(TNR)TARGETN)
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(SHL$(TNR)DEFAULTRES)"!=""
     @@-$(RM) $(MISC)/$(SHL$(TNR)DEFAULTRES:b).rc
@@ -318,10 +324,10 @@ $(SHL$(TNR)TARGETN) : \
     @echo $(EMQ)#define INTERNAL_NAME $(SHL$(TNR)TARGET:b) >> $(MISC)/$(SHL$(TNR)DEFAULTRES:b).rc
     @echo $(EMQ)#include $(EMQ)"shlinfo.rc$(EMQ)" >> $(MISC)/$(SHL$(TNR)DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
-    $(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL$(TNR)DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL$(TNR)DEFAULTRES:b).rc
 .ENDIF			# "$(SHL$(TNR)DEFAULTRES)"!=""
 .IF "$(SHL$(TNR)ALLRES)"!=""
-    $(TYPE) $(SHL$(TNR)ALLRES) > $(SHL$(TNR)LINKRES)
+	$(COMMAND_ECHO)$(TYPE) $(SHL$(TNR)ALLRES) > $(SHL$(TNR)LINKRES)
 .IF "$(COM)"=="GCC"
     windres $(SHL$(TNR)LINKRES) $(SHL$(TNR)LINKRESO)
 .ENDIF			# "$(COM)"=="GCC"
@@ -368,15 +374,15 @@ $(SHL$(TNR)TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE			# "$(USE_DEFFILE)"!=""
-    $(SHL$(TNR)LINKER) @$(mktmp	$(SHL$(TNR)LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL$(TNR)LINKER) @$(mktmp	$(SHL$(TNR)LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL$(TNR)BASEX)		\
         $(SHL$(TNR)STACK) -out:$(SHL$(TNR)TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -392,16 +398,16 @@ $(SHL$(TNR)TARGETN) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(USE_DEFFILE)"!=""
 .ELSE			# "$(SHL$(TNR)USE_EXPORTS)"!="name"
-    $(SHL$(TNR)LINKER) @$(mktmp	$(SHL$(TNR)LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL$(TNR)LINKER) @$(mktmp	$(SHL$(TNR)LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL$(TNR)BASEX)		\
         $(SHL$(TNR)STACK) -out:$(SHL$(TNR)TARGETN)	\
         -map:$(MISC)/$(@:B).map				\
@@ -415,18 +421,18 @@ $(SHL$(TNR)TARGETN) : \
     )
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(SHL$(TNR)USE_EXPORTS)"!="name"
 .ELSE			# "$(linkinc)"==""
-        -$(RM) del $(MISC)/$(SHL$(TNR)TARGET).lnk
-        -$(RM) $(MISC)/$(SHL$(TNR)TARGET).lst
-        $(TYPE) $(mktmp \
+		$(COMMAND_ECHO)-$(RM) del $(MISC)/$(SHL$(TNR)TARGET).lnk
+		$(COMMAND_ECHO)-$(RM) $(MISC)/$(SHL$(TNR)TARGET).lst
+		$(COMMAND_ECHO)$(TYPE) $(mktmp \
         $(SHL$(TNR)LINKFLAGS) \
         $(LINKFLAGSSHL) $(SHL$(TNR)BASEX) \
         $(SHL$(TNR)STACK) $(MAPFILE) \
@@ -438,17 +444,17 @@ $(SHL$(TNR)TARGETN) : \
         $(SHL$(TNR)STDSHL) $(STDSHL$(TNR)) \
         $(SHL$(TNR)LINKRES) \
         ) >> $(MISC)/$(SHL$(TNR)TARGET).lnk
-        $(TYPE) $(MISC)/$(SHL$(TNR)TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL$(TNR)TARGET).lnk
-        $(SHL$(TNR)LINKER) @$(MISC)/$(SHL$(TNR)TARGET).lnk
+		$(COMMAND_ECHO)$(TYPE) $(MISC)/$(SHL$(TNR)TARGETN:b)_linkinc.ls  >> $(MISC)/$(SHL$(TNR)TARGET).lnk
+		$(COMMAND_ECHO)$(SHL$(TNR)LINKER) @$(MISC)/$(SHL$(TNR)TARGET).lnk
         @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-        $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-        $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-        $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+		$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(linkinc)"==""
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)" == "WNT"
@@ -464,11 +470,13 @@ $(SHL$(TNR)TARGETN) : \
     @$(PERL) $(SOLARENV)/bin/macosx-dylib-link-list.pl \
         `cat $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd` \
         >> $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
     @$(PERL) $(SOLARENV)/bin/macosx-change-install-names.pl \
         shl $(SHL$(TNR)RPATH) $@
-    @echo "Making: $@.jnilib"
+	@echo "Making:   " $(@:f).jnilib
     @macosx-create-bundle $@
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL$(TNR)NOCHECK)"==""
@@ -481,21 +489,29 @@ $(SHL$(TNR)TARGETN) : \
     $(SHL$(TNR)VERSIONOBJ) -o $@ \
     `cat /dev/null $(SHL$(TNR)LIBS) | tr -s " " "\n" | $(SED) s\#$(ROUT)\#$(PRJ)/$(ROUT)\#g` \
     $(SHL$(TNR)STDLIBS) $(SHL$(TNR)ARCHIVES) $(SHL$(TNR)STDSHL) $(STDSHL$(TNR)) $(LINKOUTPUT_FILTER) > $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
+  .IF "$(VERBOSE)" == "TRUE"
     @cat $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
+  .ENDIF
     @+source $(MISC)/$(TARGET).$(@:b)_$(TNR).cmd
 .IF "$(UPDATER)"=="YES"
 .IF "$(SHL$(TNR)NOCHECK)"==""
-    -$(RM) $(SHL$(TNR)TARGETN:d)check_$(SHL$(TNR)TARGETN:f)
-    $(RENAME) $(SHL$(TNR)TARGETN) $(SHL$(TNR)TARGETN:d)check_$(SHL$(TNR)TARGETN:f)
-    $(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS$(TNR)) $(SHL$(TNR)TARGETN:d)check_$(SHL$(TNR)TARGETN:f)
+	$(COMMAND_ECHO)-$(RM) $(SHL$(TNR)TARGETN:d)check_$(SHL$(TNR)TARGETN:f)
+	$(COMMAND_ECHO)$(RENAME) $(SHL$(TNR)TARGETN) $(SHL$(TNR)TARGETN:d)check_$(SHL$(TNR)TARGETN:f)
+.IF "$(VERBOSE)"=="TRUE"
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS$(TNR)) $(SHL$(TNR)TARGETN:d)check_$(SHL$(TNR)TARGETN:f)
+.ELSE
+	$(COMMAND_ECHO)$(SOLARENV)/bin/checkdll.sh -L$(LB) -L$(SOLARLIBDIR) $(EXTRALIBPATHS$(TNR)) -- -s $(SHL$(TNR)TARGETN:d)check_$(SHL$(TNR)TARGETN:f)
+.ENDIF
 .ENDIF				# "$(SHL$(TNR)NOCHECK)"!=""
 .ENDIF			# "$(UPDATER)"=="YES"
 .ENDIF			# "$(OS)"=="MACOSX"
 .IF "$(UNIXVERSIONNAMES)"!=""
-    $(RM) $(LB)/$(SHL$(TNR)TARGETN:b)
-    cd $(LB) && ln -s $(SHL$(TNR)TARGETN:f) $(SHL$(TNR)TARGETN:b)
+	$(COMMAND_ECHO)$(RM) $(LB)/$(SHL$(TNR)TARGETN:b)
+	$(COMMAND_ECHO)cd $(LB) && ln -s $(SHL$(TNR)TARGETN:f) $(SHL$(TNR)TARGETN:b)
 .ENDIF			# "$(UNIXVERSIONNAMES)"!=""
+.IF "$(VERBOSE)" == "TRUE"
     @ls -l $@
+.ENDIF
 .ENDIF			# "$(GUI)" == "UNX"
 
 .IF "$(GUI)" == "OS2"
@@ -513,16 +529,16 @@ $(SHL$(TNR)TARGETN) : \
 #	@-+echo $(EMQ)RCDATA 1 { "Build string here" }$(EMQ) >> $(MISC)/$(SHL$(TNR)DEFAULTRES:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
 # YD 04/07/06 seems null, confuses rc cli: -i $(SOLARTESDIR)
-    $(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL$(TNR)DEFAULTRES:b).rc
+	$(COMMAND_ECHO)$(RC) -r -DOS2 $(INCLUDE) $(RCLINKFLAGS) $(MISC)/$(SHL$(TNR)DEFAULTRES:b).rc
 .ENDIF			# "$(SHL$(TNR)DEFAULTRES)"!=""
 
 .IF "$(SHL$(TNR)ALLRES)"!=""
-    +$(TYPE) $(SHL$(TNR)ALLRES) > $(SHL$(TNR)LINKRES)
+	$(COMMAND_ECHO)+$(TYPE) $(SHL$(TNR)ALLRES) > $(SHL$(TNR)LINKRES)
 .ENDIF			# "$(SHL$(TNR)ALLRES)"!=""
 
 .IF "$(USE_DEFFILE)"!=""
 
-    $(SHL$(TNR)LINKER) $(SHL$(TNR)LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
+	$(COMMAND_ECHO)$(SHL$(TNR)LINKER) $(SHL$(TNR)LINKFLAGS) $(LINKFLAGSSHL) -o $@ \
         $(SHL$(TNR)DEF) \
         $(STDOBJ) \
         -L$(LB) \
@@ -535,7 +551,7 @@ $(SHL$(TNR)TARGETN) : \
 
 .ELSE			# "$(USE_DEFFILE)"!=""
 
-    $(SHL$(TNR)LINKER) -v 	$(SHL$(TNR)LINKFLAGS)			\
+	$(COMMAND_ECHO)$(SHL$(TNR)LINKER) -v 	$(SHL$(TNR)LINKFLAGS)			\
         $(LINKFLAGSSHL) $(SHL$(TNR)BASEX)		\
         $(SHL$(TNR)STACK) -o $(SHL$(TNR)TARGETN)	\
         $(SHL$(TNR)DEF) \
@@ -553,7 +569,7 @@ $(SHL$(TNR)TARGETN) : \
 .ENDIF			# "$(USE_DEFFILE)"!=""
 
 .IF "$(SHL$(TNR)TARGET8)" != "$(SHL$(TNR)TARGET)"
-    +$(COPY) $@ $(@:d)$(SHL$(TNR)TARGET8).dll
+	$(COMMAND_ECHO)+$(COPY) $@ $(@:d)$(SHL$(TNR)TARGET8).dll
 .ENDIF
 
 .ENDIF			# "$(GUI)" == "OS2"
@@ -600,8 +616,10 @@ $(SHL$(TNR)IMPLIBN):	\
 $(SHL$(TNR)IMPLIBN):	\
                     $(SHL$(TNR)LIBS)
 .ENDIF
-    @echo ------------------------------1
-    @echo Making: $(SHL$(TNR)IMPLIBN)
+.IF "$(VERBOSE)" == "TRUE"
+	@echo -------------------------------
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)" == "WNT"
 .IF "$(COM)"=="GCC"
     @echo no ImportLibs on mingw
@@ -622,7 +640,7 @@ $(SHL$(TNR)IMPLIBN):	\
 
 # touch creates an empty file, but this is not good for emxomfar, so
 # create a dummy lib here
-    -$(LIBMGR) $(LIBFLAGS) $@ $(SHL$(TNR)VERSIONOBJ)
+	$(COMMAND_ECHO)-$(LIBMGR) $(LIBFLAGS) $@ $(SHL$(TNR)VERSIONOBJ)
     +@echo build of $(SHL$(TNR)TARGETN) creates $@
 
 .ELSE
diff --git solenv/inc/tg_slo.mk solenv/inc/tg_slo.mk
index cf7acfa..dfe63ee 100644
--- solenv/inc/tg_slo.mk
+++ solenv/inc/tg_slo.mk
@@ -38,8 +38,10 @@ $(SLOTARGET): $(SLOFILES) $(IDLSLOFILES)
     @echo $(SLOTARGET)
     @echo $(&:+"\n")
 .ENDIF
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
 #	@$(RM) $@
 .IF "$(GUI)"=="WNT"
 .IF "$(COM)"=="GCC"
@@ -48,7 +50,7 @@ $(SLOTARGET): $(SLOFILES) $(IDLSLOFILES)
 .IF "$(LIBTARGET)"!="NO"
     @-$(TYPE) $(mktmp $(&:+"\n")) > $(@:s/.lib/.lin/)
 .ENDIF          # "$(LIBTARGET)"!="NO"
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(&:+"\n"))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(&:+"\n"))
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)"=="WNT"
 
@@ -56,11 +58,11 @@ $(SLOTARGET): $(SLOFILES) $(IDLSLOFILES)
 .IF "$(LIBTARGET)"!="NO"
     @-$(TYPE) $(mktmp $(&:+"\n")) > $(@:s/.lib/.lin/)
 .ENDIF          # "$(LIBTARGET)"!="NO"
-    $(LIBMGR) $(LIBFLAGS) $@ $(&)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(&)
 .ENDIF			# "$(GUI)"=="OS2"
 
 .IF "$(GUI)"=="UNX"
-    echo $(foreach,i,$(SLOFILES:f) $(RSLO)/$(i:s/.obj/.o/)) | xargs -n1 > $@
+	@echo $(foreach,i,$(SLOFILES:f) $(RSLO)/$(i:s/.obj/.o/)) | xargs -n1 > $@
 .IF "$(OS)"=="MACOSX"
     @-nm `cat $(SLOTARGET) | sed s\#'^'$(ROUT)\#$(PRJ)/$(ROUT)\#g` > $(@:d)$(@:b).dump
 .ELSE
@@ -76,8 +78,10 @@ $($(SECOND_BUILD)SLOTARGET): $(REAL_$(SECOND_BUILD)_SLOFILES)
     @echo $(REAL_$(SECOND_BUILD)SLOTARGET)
     @echo $(&:+"\n")
 .ENDIF
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
 .IF "$(GUI)"=="WNT"
 .IF "$(COM)"=="GCC"
     +$(ECHONL) $(foreach,i,$(REAL_$(SECOND_BUILD)_SLOFILES:f) $(RSLO)/$(i)) | xargs -n1 > $@
@@ -85,20 +89,20 @@ $($(SECOND_BUILD)SLOTARGET): $(REAL_$(SECOND_BUILD)_SLOFILES)
 .IF "$(LIBTARGET)"!="NO"
     @-$(TYPE) $(mktmp $(&:+"\n")) > $(@:s/.lib/.lin/)
 .ENDIF          # "$(LIBTARGET)"!="NO"
-    $(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(&:+"\n"))
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) /OUT:$@ @$(mktmp $(&:+"\n"))
 
 .IF "$(GUI)"=="OS2"
 .IF "$(LIBTARGET)"!="NO"
     @-$(TYPE) $(mktmp $(&:+"\n")) > $(@:s/.lib/.lin/)
 .ENDIF          # "$(LIBTARGET)"!="NO"
-    $(LIBMGR) $(LIBFLAGS) $@ $(&)
+	$(COMMAND_ECHO)$(LIBMGR) $(LIBFLAGS) $@ $(&)
 .ENDIF			# "$(GUI)"=="OS2"
 
 .ENDIF			# "$(COM)"=="GCC"
 .ENDIF			# "$(GUI)"=="WNT"
 
 .IF "$(GUI)"=="UNX"
-    echo $(foreach,i,$(REAL_$(SECOND_BUILD)_SLOFILES:f) $(RSLO)/$(i:s/.obj/.o/)) | xargs -n1 > $@
+	@echo $(foreach,i,$(REAL_$(SECOND_BUILD)_SLOFILES:f) $(RSLO)/$(i:s/.obj/.o/)) | xargs -n1 > $@
 .ENDIF			# "$(GUI)"=="UNX"
 .ENDIF			# "$($(SECOND_BUILD)SLOTARGET)"!=""
 .ENDIF			# "$(SECOND_BUILD)"!=""
diff --git solenv/inc/tg_srs.mk solenv/inc/tg_srs.mk
index fd3b3aa..c832939 100644
--- solenv/inc/tg_srs.mk
+++ solenv/inc/tg_srs.mk
@@ -37,10 +37,12 @@
 HID$(TNR)FILES=$(foreach,i,$(SRC$(TNR)FILES:f) $(SRS)/$(i:s/.src/.hid/))
 HIDSRS$(TNR)PARTICLE=$(subst,$(OUTPATH),$(COMMON_OUTDIR) $(SRS))/$(SRS$(TNR)NAME)_srs.hid
 $(HIDSRS$(TNR)PARTICLE) : $(HID$(TNR)FILES)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @-$(RM) $@
-    $(TYPE) $(mktmp  $(subst,/,/ $(HID$(TNR)FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
+    $(COMMAND_ECHO)$(TYPE) $(mktmp  $(subst,/,/ $(HID$(TNR)FILES))) | xargs -s 1000 cat > $@.$(ROUT).tmp
     @$(RENAME) $@.$(ROUT).tmp $@
 
 ALLTAR : $(HIDSRS$(TNR)PARTICLE)
diff --git solenv/inc/tg_wntx64.mk solenv/inc/tg_wntx64.mk
index 6e1d789..cce14e7 100644
--- solenv/inc/tg_wntx64.mk
+++ solenv/inc/tg_wntx64.mk
@@ -163,7 +163,7 @@
     @echo $(DEF1EXPORT1_X64)										>>$@.tmpfile
 .ENDIF
 .IF "$(DEF1EXPORTFILE_X64)"!=""
-    $(TYPE) $(DEF1EXPORTFILE_X64) >> $@.tmpfile
+    $(COMMAND_ECHO)$(TYPE) $(DEF1EXPORTFILE_X64) >> $@.tmpfile
 .ENDIF
     @-$(RM) $@
     @$(RENAME) $@.tmpfile $@
@@ -201,7 +201,7 @@ $(DEF2TARGETN_X64) : \
     @echo $(DEF2EXPORT2_X64)										>>$@.tmpfile
 .ENDIF
 .IF "$(DEF2EXPORTFILE_X64)"!=""
-    $(TYPE) $(DEF2EXPORTFILE_X64) >> $@.tmpfile
+	$(COMMAND_ECHO)$(TYPE) $(DEF2EXPORTFILE_X64) >> $@.tmpfile
 .ENDIF
     @-$(RM) $@
     @$(RENAME) $@.tmpfile $@
@@ -216,7 +216,7 @@ SHL1VERSIONOBJ_X64:=$(VERSIONOBJ_X64:d){$(subst,$(UPD)$(DLLPOSTFIX),_dflt $(SHL1
 USE_VERSIONH_X64:=$(INCCOM)/$(SHL1VERSIONOBJ_X64:b).h
 SHL1VERSIONOBJDEP_X64:=$(VERSIONOBJ_X64:d){$(subst,$(UPD)$(DLLPOSTFIX),_dflt $(SHL1TARGET_X64))}$(VERSIONOBJ_X64:f)
 $(MISC_X64)/$(SHL1VERSIONOBJ_X64:b).c : $(SOLARENV)/src/version.c $(INCCOM)/$(SHL1VERSIONOBJ_X64:b).h
-    $(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL1VERSIONOBJ_X64:b).h/ > $@
+	$(COMMAND_ECHO)$(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL1VERSIONOBJ_X64:b).h/ > $@
 .INIT : $(SHL1VERSIONOBJDEP_X64)
 .ENDIF
 
@@ -266,10 +266,10 @@ $(SHL1TARGETN_X64) : \
     @echo $(EMQ)#define INTERNAL_NAME $(SHL1TARGET_X64:b) >> $(MISC_X64)/$(SHL1DEFAULTRES_X64:b).rc
     @echo $(EMQ)#include $(EMQ)"shlinfo.rc$(EMQ)" >> $(MISC_X64)/$(SHL1DEFAULTRES_X64:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
-    $(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS_X64) $(MISC_X64)/$(SHL1DEFAULTRES_X64:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS_X64) $(MISC_X64)/$(SHL1DEFAULTRES_X64:b).rc
 .ENDIF # "$(SHL1DEFAULTRES_X64)"!=""
 .IF "$(SHL1ALLRES_X64)"!=""
-    $(TYPE) $(SHL1ALLRES_X64) > $(SHL1LINKRES_X64)
+	$(COMMAND_ECHO)$(TYPE) $(SHL1ALLRES_X64) > $(SHL1LINKRES_X64)
 .ENDIF			# "$(SHL1ALLRES)"!=""
 .IF "$(USE_DEFFILE_X64)"!=""
     $(LINK_X64) @$(mktmp \
@@ -291,13 +291,13 @@ $(SHL1TARGETN_X64) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE			# "$(USE_DEFFILE)"!=""
     $(LINK_X64) @$(mktmp	$(SHL1LINKFLAGS_X64)			\
         $(LINKFLAGSSHL_X64) $(SHL1BASEX_X64)		\
@@ -315,13 +315,13 @@ $(SHL1TARGETN_X64) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(USE_DEFFILE)"!=""
 # ------------------------------------------------------------------------------
 $(SHL1IMPLIBN_X64):	\
@@ -362,7 +362,7 @@ SHL2VERSIONOBJ_X64:=$(VERSIONOBJ_X64:d){$(subst,$(UPD)$(DLLPOSTFIX),_dflt $(SHL2
 USE_VERSIONH_X64:=$(INCCOM)/$(SHL2VERSIONOBJ_X64:b).h
 SHL2VERSIONOBJDEP_X64:=$(VERSIONOBJ_X64:d){$(subst,$(UPD)$(DLLPOSTFIX),_dflt $(SHL2TARGET_X64))}$(VERSIONOBJ_X64:f)
 $(MISC_X64)/$(SHL2VERSIONOBJ_X64:b).c : $(SOLARENV)/src/version.c $(INCCOM)/$(SHL2VERSIONOBJ_X64:b).h
-    $(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL2VERSIONOBJ_X64:b).h/ > $@
+	$(COMMAND_ECHO)$(TYPE) $(SOLARENV)/src/version.c | $(SED) s/_version.h/$(SHL2VERSIONOBJ_X64:b).h/ > $@
 .INIT : $(SHL2VERSIONOBJDEP_X64)
 .ENDIF
 
@@ -412,10 +412,10 @@ $(SHL2TARGETN_X64) : \
     @echo $(EMQ)#define INTERNAL_NAME $(SHL1TARGET_X64:b) >> $(MISC_X64)/$(SHL2DEFAULTRES_X64:b).rc
     @echo $(EMQ)#include $(EMQ)"shlinfo.rc$(EMQ)" >> $(MISC_X64)/$(SHL2DEFAULTRES_X64:b).rc
 .ENDIF			# "$(use_shl_versions)" != ""
-    $(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS_X64) $(MISC_X64)/$(SHL2DEFAULTRES_X64:b).rc
+	$(COMMAND_ECHO)$(RC) -DWIN32 $(INCLUDE) $(RCLINKFLAGS_X64) $(MISC_X64)/$(SHL2DEFAULTRES_X64:b).rc
 .ENDIF # "$(SHL2DEFAULTRES_X64)"!=""
 .IF "$(SHL2ALLRES_X64)"!=""
-    $(TYPE) $(SHL2ALLRES_X64) > $(SHL2LINKRES_X64)
+	$(COMMAND_ECHO)$(TYPE) $(SHL2ALLRES_X64) > $(SHL2LINKRES_X64)
 .ENDIF			# "$(SHL2ALLRES)"!=""
 .IF "$(USE_DEFFILE_X64)"!=""
     $(LINK_X64) @$(mktmp \
@@ -437,13 +437,13 @@ $(SHL2TARGETN_X64) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ELSE			# "$(USE_DEFFILE)"!=""
     $(LINK_X64) @$(mktmp	$(SHL2LINKFLAGS_X64)			\
         $(LINKFLAGSSHL_X64) $(SHL2BASEX_X64)		\
@@ -461,13 +461,13 @@ $(SHL2TARGETN_X64) : \
     @@$(LS) $@
     @echo linking $@.manifest ...
 .IF "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -manifest $(TRUSTED_MANIFEST_LOCATION)/trustedinfo.manifest -out:$@.tmanifest$(EMQ) $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.tmanifest -outputresource:$@$(EMQ);2 $(FI)
 .ELSE
-    $(IFEXIST) $@.manifest $(THEN) mt.exe -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(MT) $(MTFLAGS) -manifest $@.manifest -outputresource:$@$(EMQ);2 $(FI)
 .ENDIF # "$(VISTA_MANIFEST)"!=""
-    $(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
-    $(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.manifest $(THEN) $(RM:s/+//) $@.manifest $(FI)
+	$(COMMAND_ECHO)$(IFEXIST) $@.tmanifest $(THEN) $(RM:s/+//) $@.tmanifest $(FI)
 .ENDIF			# "$(USE_DEFFILE)"!=""
 
 $(SHL2IMPLIBN_X64):	\
@@ -493,27 +493,27 @@
     @echo ------------------------------
     @echo Making: $@
     @@-$(RM) $@ >& $(NULLDEV)
-    -$(MKDIR) $(@:d)
+    $(COMMAND_ECHO)-$(MKDIR) $(@:d)
     @-$(MKDIR) $(MISC_X64)
-    $(CAPTURE_COMMAND) $(CXX_X64) $(USE_CFLAGS_X64) $(INCLUDE_X64) $(CFLAGSCXX_X64) $(CFLAGSSLO_X64) $(USE_CDEFS_X64) $(CDEFSSLO_X64) $(CDEFSMT_X64) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO_X64)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cpp $(CAPTURE_OUTPUT)
+    $(COMMAND_ECHO)$(CAPTURE_COMMAND) $(CXX_X64) $(USE_CFLAGS_X64) $(INCLUDE_X64) $(CFLAGSCXX_X64) $(CFLAGSSLO_X64) $(USE_CDEFS_X64) $(CDEFSSLO_X64) $(CDEFSMT_X64) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO_X64)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cpp $(CAPTURE_OUTPUT)
 
 $(SLO_X64)/%.obj : %.cxx
     @echo ------------------------------
     @echo Making: $@
     @@-$(RM) $@ >& $(NULLDEV)
-    -$(MKDIR) $(@:d)
+    $(COMMAND_ECHO)-$(MKDIR) $(@:d)
     @-$(MKDIR) $(MISC_X64)
-    $(CAPTURE_COMMAND) $(CXX_X64) $(USE_CFLAGS_X64) $(INCLUDE_X64) $(CFLAGSCXX_X64) $(CFLAGSSLO_X64) $(USE_CDEFS_X64) $(CDEFSSLO_X64) $(CDEFSMT_X64) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO_X64)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx $(CAPTURE_OUTPUT)
+    $(COMMAND_ECHO)$(CAPTURE_COMMAND) $(CXX_X64) $(USE_CFLAGS_X64) $(INCLUDE_X64) $(CFLAGSCXX_X64) $(CFLAGSSLO_X64) $(USE_CDEFS_X64) $(CDEFSSLO_X64) $(CDEFSMT_X64) $(!eq,$(EXCEPTIONSFILES),$(subst,$@, $(EXCEPTIONSFILES)) $(LOCAL_EXCEPTIONS_FLAGS) $(GLOBAL_EXCEPTIONS_FLAGS)) $(CFLAGSAPPEND) $(CFLAGSOUTOBJ)$(SLO_X64)/$*.obj $(CFLAGSINCXX)$(PWD)/$*.cxx $(CAPTURE_OUTPUT)
 
 $(SLO_X64)/%.obj : $(MISC)/%.c
     @echo ------------------------------
     @echo Making: $@
-    -$(MKDIR) $(@:d)
+    $(COMMAND_ECHO)-$(MKDIR) $(@:d)
     @-$(MKDIR) $(MISC_X64)
     @@-$(RM) $@
     @$(TYPE) $(mktmp $(CC_X64) $(USE_CFLAGS_X64) $(INCLUDE_C) $(CFLAGSCC_X64) $(CFLAGSSLO_X64) $(USE_CDEFS_X64) $(CDEFSSLO_X64) $(CFLAGSAPPEND_X64) $(CFLAGSOUTOBJ)$(SLO_X64)/$*.obj $(MISC)/$*.c )
     @$(ECHONL)
-    $(CC_X64) @$(mktmp $(USE_CFLAGS_X64) $(INCLUDE_C) $(CFLAGSCC_X64) $(CFLAGSSLO_X64) $(USE_CDEFS_X64) $(CDEFSSLO_X64) $(CFLAGSAPPEND_X64) $(CFLAGSOUTOBJ)$(SLO_X64)/$*.obj $(MISC)/$*.c )
+    $(COMMAND_ECHO)$(CC_X64) @$(mktmp $(USE_CFLAGS_X64) $(INCLUDE_C) $(CFLAGSCC_X64) $(CFLAGSSLO_X64) $(USE_CDEFS_X64) $(CDEFSSLO_X64) $(CFLAGSAPPEND_X64) $(CFLAGSOUTOBJ)$(SLO_X64)/$*.obj $(MISC)/$*.c )
 
 $(SLO_X64)/%.obj : %.c
     @echo ------------------------------
diff --git solenv/inc/tg_yxx.mk solenv/inc/tg_yxx.mk
index a214ef8..b2d72e8 100644
--- solenv/inc/tg_yxx.mk
+++ solenv/inc/tg_yxx.mk
@@ -31,24 +31,28 @@
 
 
 $(MISC)/%.cxx : %.y
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
-    tr -d "\015" < $< > $(MISC)/stripped_$<
+.ENDIF
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)tr -d "\015" < $< > $(MISC)/stripped_$<
     $(BISON) $(YACCFLAGS) -o $(YACCTARGET) $(MISC)/stripped_$<
 # removing -f switch - avoid getting nothing when copying a file to itself
     @@-$(COPY:s/-f//) $@.h $(INCCOM)/$(@:b).hxx
     @@-$(COPY:s/-f//) $(@:d)/$(@:b).hxx $(INCCOM)/$(@:b).hxx
 # fail on not existing .hxx
-    $(TYPE) $(INCCOM)/$(@:b).hxx >& $(NULLDEV)
+	$(COMMAND_ECHO)$(TYPE) $(INCCOM)/$(@:b).hxx >& $(NULLDEV)
 
 $(INCCOM)/yy%.cxx : %.y
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
-    tr -d "\015" < $< > $(MISC)/stripped_$<
-    $(BISON) $(YACCFLAGS) -o $(YACCTARGET) $(MISC)/stripped_$<
+.ENDIF
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)tr -d "\015" < $< > $(MISC)/stripped_$<
+	$(COMMAND_ECHO)$(BISON) $(YACCFLAGS) -o $(YACCTARGET) $(MISC)/stripped_$<
 # removing -f switch - avoid getting nothing when copying a file to itself
     @@-$(COPY:s/-f//) $@.h $(INCCOM)/$(@:b).hxx
     @@-$(COPY:s/-f//) $(@:d)/$(@:b).hxx $(INCCOM)/$(@:b).hxx
 # fail on not existing .hxx
-    $(TYPE) $(INCCOM)/$(@:b).hxx >& $(NULLDEV)
+	$(COMMAND_ECHO)$(TYPE) $(INCCOM)/$(@:b).hxx >& $(NULLDEV)
 
diff --git solenv/inc/tg_zip.mk solenv/inc/tg_zip.mk
index 8ac7bb1..03bc248 100644
--- solenv/inc/tg_zip.mk
+++ solenv/inc/tg_zip.mk
@@ -90,50 +90,48 @@ ZIP$(TNR)HELPVAR=$(BIN)/$(ZIP$(TNR)TARGET)
 .ENDIF			# "$(common_build_zip)"!=""
 
 $(ZIP$(TNR)DEPFILE) :
-    echo # > $(MISC)/$(@:f)
+	@echo # > $(MISC)/$(@:f)
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP$(TNR)DIR)" != ""
-    @echo type 1
-    -$(MKDIRHIER) $(ZIP$(TNR)DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP$(TNR)DIR))) $(command_seperator) $(ZIPDEP) $(ZIP$(TNR)FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP$(TNR)DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP$(TNR)EXT)/))) $(foreach,j,$(ZIP$(TNR)LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP$(TNR)TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP$(TNR)DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP$(TNR)DIR))) $(command_seperator) $(ZIPDEP) $(ZIP$(TNR)FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP$(TNR)DIR)))/ $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP$(TNR)EXT)/))) $(foreach,j,$(ZIP$(TNR)LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP$(TNR)TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP$(TNR)DIR)" != ""
-    @echo type 2
-    -$(ZIPDEP) $(ZIP$(TNR)FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP$(TNR)EXT)/))) $(foreach,j,$(ZIP$(TNR)LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP$(TNR)TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP$(TNR)FLAGS) $(subst,$(OUTPATH),$(COMMON_OUTDIR) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP$(TNR)EXT)/))) $(foreach,j,$(ZIP$(TNR)LIST) "{$(subst,LANGDIR,{$(subst,$(ZIP$(TNR)TARGET)_, $(@:f:b))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP$(TNR)DIR)" != ""
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP$(TNR)DIR)" != ""
-    @echo type 3
-    -$(MKDIRHIER) $(ZIP$(TNR)DIR)
-    $(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP$(TNR)DIR))) $(command_seperator) $(ZIPDEP) $(ZIP$(TNR)FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP$(TNR)DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP$(TNR)EXT)/)) $(foreach,j,$(ZIP$(TNR)LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP$(TNR)TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
+	$(COMMAND_ECHO)-$(MKDIRHIER) $(ZIP$(TNR)DIR)
+	$(COMMAND_ECHO)$(CDD) $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP$(TNR)DIR))) $(command_seperator) $(ZIPDEP) $(ZIP$(TNR)FLAGS) -prefix $(subst,LANGDIR,. $(subst,/LANGDIR, $(ZIP$(TNR)DIR)))/ $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP$(TNR)EXT)/)) $(foreach,j,$(ZIP$(TNR)LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP$(TNR)TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(PWD)/$(PRJ)/$(ROUT)/misc/$(@:f)
 .ELSE			# "$(ZIP$(TNR)DIR)" != ""
-    @echo type 4
-    -$(ZIPDEP) $(ZIP$(TNR)FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP$(TNR)EXT)/)) $(foreach,j,$(ZIP$(TNR)LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP$(TNR)TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
+	$(COMMAND_ECHO)-$(ZIPDEP) $(ZIP$(TNR)FLAGS) $(subst,/misc/,/bin/ $(@:s/.dpzz/$(ZIP$(TNR)EXT)/)) $(foreach,j,$(ZIP$(TNR)LIST) "{$(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP$(TNR)TARGET)_, $(subst,/misc/,/bin/ $(@:db)))} $j )}") $(avoid_cvs_dir) >> $(MISC)/$(@:f)
 .ENDIF			# "$(ZIP$(TNR)DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
     @echo $(@:n:s#\#/#) : makefile.mk >> $(MISC)/$(@:f)
 
 
 $(ZIP$(TNR)TARGETN) : delzip $(ZIP$(TNR)DEPS)
+.IF "$(VERBOSE)" == "TRUE"
     @echo ------------------------------
-    @echo Making: $@
+.ENDIF
+	@echo "Making:   " $(@:f)
     @@$(!eq,$?,$(?:s/delzip/zzz/) -$(RM) echo) $(uniq $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@))
     @$(eq,$?,$(?:s/delzip/zzz/) noop echo ) rebuilding zipfiles
     @echo ------------------------------ $(eq,$?,$(?:s/delzip/zzz/) >&$(NULLDEV) )
 .IF "$(common_build_zip)"!=""
 .IF "$(ZIP$(TNR)DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP$(TNR)HELPVAR)_, $(@:db))} $(ZIP$(TNR)DIR)) $(command_seperator) zip $(ZIP$(TNR)FLAGS) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) $(subst,LANGDIR_away/, $(ZIP$(TNR)LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) \
-    $(FI)
-    $(COPY) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) $@.$(INPATH)
-    $(RM) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP$(TNR)HELPVAR)_, $(@:db))} $(ZIP$(TNR)DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP$(TNR)FLAGS) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) $(subst,LANGDIR_away/, $(ZIP$(TNR)LIST:s/LANGDIR/LANGDIR_away/)) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) $@.$(INPATH)
+    $(COMMAND_ECHO)$(RM) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT)
 .ELSE			# "$(ZIP$(TNR)DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
-    zip $(ZIP$(TNR)FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP$(TNR)LIST) $(subst,LANGDIR,{$(subst,$(ZIP$(TNR)HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP$(TNR)FLAGS) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(foreach,j,$(ZIP$(TNR)LIST) $(subst,LANGDIR,{$(subst,$(ZIP$(TNR)HELPVAR)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) \
+	    $(FI)
     @@-$(GNUCOPY) -p $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@) $@.$(INPATH)
     @-$(RM) $(subst,$(COMMON_OUTDIR),$(OUTPATH) $@)
 .ENDIF			# "$(ZIP$(TNR)DIR)" != ""
@@ -143,17 +141,17 @@ $(ZIP$(TNR)TARGETN) : delzip $(ZIP$(TNR)DEPS)
 .ELSE			# "$(common_build_zip)"!=""
 .IF "$(ZIP$(TNR)DIR)" != ""
     @@-$(GNUCOPY) -p $@ $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT)
-    -$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP$(TNR)HELPVAR)_, $(@:db))} $(ZIP$(TNR)DIR)) $(command_seperator) zip $(ZIP$(TNR)FLAGS) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) $(subst,LANGDIR_away/, $(ZIP$(TNR)LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) \
-    $(FI)
-    $(COPY) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT)  $@ 
-    $(RM) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT)
+	$(COMMAND_ECHO)-$(CDD) $(subst,LANGDIR,{$(subst,$(ZIP$(TNR)HELPVAR)_, $(@:db))} $(ZIP$(TNR)DIR)) $(command_seperator) zip $(ZIP_VERBOSITY) $(ZIP$(TNR)FLAGS) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) $(subst,LANGDIR_away/, $(ZIP$(TNR)LIST:s/LANGDIR/LANGDIR_away/)) -x delzip  $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT) \
+	    $(FI)
+    $(COMMAND_ECHO)$(COPY) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT)  $@ 
+    $(COMMAND_ECHO)$(RM) $(ZIP$(TNR)TMP).$(ZIP$(TNR)TARGET){$(subst,$(ZIP$(TNR)HELPVAR),_ $(@:db))}$(ZIP$(TNR)EXT)
 .ELSE			# "$(ZIP$(TNR)DIR)" != ""
-    zip $(ZIP$(TNR)FLAGS) $@ $(foreach,j,$(ZIP$(TNR)LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP$(TNR)TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
-    $(IFEXIST) $@ $(THEN) \
-    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
-    $(FI)
+	$(COMMAND_ECHO)zip $(ZIP_VERBOSITY) $(ZIP$(TNR)FLAGS) $@ $(foreach,j,$(ZIP$(TNR)LIST) $(subst,LANGDIR,{$(subst,$(BIN)/$(ZIP$(TNR)TARGET)_, $(@:db))} $j )) -x delzip $(avoid_cvs_dir) $(CHECKZIPRESULT)
+	$(COMMAND_ECHO)$(IFEXIST) $@ $(THEN) \
+	    $(PERL) -w $(SOLARENV)/bin/cleanzip.pl $@ \
+	    $(FI)
 .ENDIF			# "$(ZIP$(TNR)DIR)" != ""
 .ENDIF			# "$(common_build_zip)"!=""
 .ENDIF
diff --git solenv/inc/wntmsci11.mk solenv/inc/wntmsci11.mk
index 35fd293..3d2750f 100644
--- solenv/inc/wntmsci11.mk
+++ solenv/inc/wntmsci11.mk
@@ -71,6 +71,10 @@ CXX+= /NMttInlines
 CXX+= /NMttNoLines
 .ENDIF
 
+.IF "$(VERBOSE)" != "TRUE"
+NOLOGO*=-nologo
+.ENDIF
+
 # Flags for COMEX == 11
 
 # disable "warning C4675: resolved overload was found by argument-dependent
@@ -223,7 +227,9 @@ CDEFS+=-DWINVER=0x0500 -D_WIN32_IE=0x0500
 _VC_MANIFEST_BASENAME=__VC90
 .ENDIF
 
-LINK=link $(NOLOGO) /MACHINE:IX86
+LINK=link /MACHINE:IX86
+    # do *not* add $(NOLOGO) to LINK or LINKFLAGS. Strangely, the wntmsci12 linker links fine then, but exits with
+    # a return value 1, which makes dmake think it failed
 LINKOUTPUTFILTER= $(PIPEERROR) $(GREP) -v "LNK4197:"
 .IF "$(PRODUCT)"!="full"
 .ELSE
@@ -331,6 +337,9 @@ RCLINK=rc
 RCLINKFLAGS=
 RCSETVERSION=
 
+MT=mt.exe
+MTFLAGS=$(NOLOGO)
+
 
 DLLPOSTFIX=mi
 PCHPOST=.pch
diff --git soltools/HIDCompiler/hidclex.l soltools/HIDCompiler/hidclex.l
index df36c70..700a044 100755
--- soltools/HIDCompiler/hidclex.l
+++ soltools/HIDCompiler/hidclex.l
@@ -80,6 +80,7 @@ static int nInputFileDepth = 0;
 #include <ctype.h>
 
 int alloc_cnt = 0;
+static bool bVerbose = false;
 void freestring( char const * ); //forward
 
 char* dot2underline( char* str )
@@ -156,19 +157,19 @@ void adjust_levelbuffer()
 
 void freestring( char const * ptr )
 {
-	 alloc_cnt--;
-	 adjust_levelbuffer();
-	 //fprintf(stderr,"%sinfo: freestring line %d\n",levelbuffer, __LINE__);
-	 free(const_cast< char * >(ptr)), ptr = NULL;
+    alloc_cnt--;
+    adjust_levelbuffer();
+    if ( bVerbose )
+	    fprintf(stdout,"%sinfo: freestring line %d\n",levelbuffer, __LINE__);
+    free(const_cast< char * >(ptr)), ptr = NULL;
 }
 
 void makestring(char** newstr, char* oldstr)
 {
 	alloc_cnt++;
 	adjust_levelbuffer();
-	/*
-	fprintf(stderr,"%sinfo: makestring on line %d\n",levelbuffer,__LINE__);
-	*/
+	if ( bVerbose )
+	    fprintf(stdout,"%sinfo: makestring on line %d\n",levelbuffer,__LINE__);
 	strcpy( (*newstr=(char*)malloc(strlen(oldstr)+1)), oldstr);
 	if( *newstr==NULL ) {
 		fprintf( stderr,
@@ -284,10 +285,11 @@ public:
 							if( ring[ringpos] != NULL )
 								freestring( ring[ringpos] ); /*otherwise: memory lost*/
 							ring[ ringpos ] = id;
-							//fprintf(stderr,
-							//	"info: ring[%d] == %s broken==%d \n"
-							//	,ringpos,ring[ringpos],broken
-							// );
+							if ( bVerbose )
+							    fprintf(stdout,
+								    "info: ring[%d] == %s broken==%d \n"
+								    ,ringpos,ring[ringpos],broken
+							    );
 
 							if( !(ringpos==0 && last==-1) )
 								last = (++last) % MAXRING;
@@ -492,7 +494,7 @@ num4tag		(([Pp][Oo][Ss][Ss][Ii][Zz][Ee]))
 				FILE* pFile = NULL;
 				pFile = fopen( NewFile, "r" );
 				if( pFile == NULL ) {
-					fprintf( stderr, "warning: could not open inputfile %s \n", NewFile );
+					fprintf( stdout, "warning: could not open inputfile %s \n", NewFile );
 					// try the new *_tmpl.src version instead
 					// this hack was introduced to allow localisation of included src files
 					const char* sStrTmpl = "_tmpl";
@@ -513,7 +515,8 @@ num4tag		(([Pp][Oo][Ss][Ss][Ii][Zz][Ee]))
 				InputFiles[ nInputFileDepth ] = yy_create_buffer( pFile, YY_BUF_SIZE );
                 yy_switch_to_buffer( InputFiles[ nInputFileDepth ] );
 
-				printf( "%s //ATTENTION!! %s gets included here\n", yytext, NewFile );
+                if ( bVerbose )
+				    fprintf( stdout, "%s //ATTENTION!! %s gets included here\n", yytext, NewFile );
 				fprintf( outfile, "// %s //ATTENTION!! %s gets included here\n\n", yytext, NewFile );
 			}
 
@@ -573,7 +576,8 @@ num4tag		(([Pp][Oo][Ss][Ss][Ii][Zz][Ee]))
 
 <EXCLUDE_STATE>"{" 		{
 				exclude_bracelevel += 1;
-				//fprintf( stderr,"info: lev %d : found {\n", exclude_bracelevel );
+			    if ( bVerbose )
+				    fprintf( stdout,"info: lev %d : found {\n", exclude_bracelevel );
 			}
 
 
@@ -616,8 +620,8 @@ num4tag		(([Pp][Oo][Ss][Ss][Ii][Zz][Ee]))
 					globalKLASSE= ares->klasse;
 				}
 
-				//fprintf(stderr,"info: { level: %d\n", level);
-				//
+                if ( bVerbose )
+				    fprintf(stdout,"info: { level: %d\n", level);
 
 				lasttoken = TOK_OPENBRACE;
 				ring->set_zero();
@@ -626,7 +630,8 @@ num4tag		(([Pp][Oo][Ss][Ss][Ii][Zz][Ee]))
 <EXCLUDE_STATE>"}" 		{
 				//-----------------------------
 				exclude_bracelevel -= 1;
-				//fprintf( stderr,"info: lev %d : found }\n", exclude_bracelevel );
+				if ( bVerbose )
+				    fprintf( stdout,"info: lev %d : found }\n", exclude_bracelevel );
 				if( exclude_bracelevel==1 ) {
 					BEGIN INITIAL;
 					exclude_bracelevel=0;
@@ -636,7 +641,8 @@ num4tag		(([Pp][Oo][Ss][Ss][Ii][Zz][Ee]))
 
 \n			|
 "}" 		{
-				//fprintf(stderr,"info:   } level: %d\n",level);
+				if ( bVerbose )
+				    fprintf(stdout,"info:   } level: %d\n",level);
 
 				if( !strcmp(yytext,"}") )
 					;
@@ -781,7 +787,8 @@ num4tag		(([Pp][Oo][Ss][Ss][Ii][Zz][Ee]))
 {resstringlist} {
 			BEGIN EXCLUDE_STATE;
 			exclude_bracelevel = 1;
-			//fprintf( stderr,"info: lev %d : found exclusion\n", exclude_bracelevel );
+			if ( bVerbose )
+			    fprintf( stdout,"info: lev %d : found exclusion\n", exclude_bracelevel );
 			}
 
 ^[ \t]*#define		|
@@ -803,12 +810,13 @@ num4tag		(([Pp][Oo][Ss][Ss][Ii][Zz][Ee]))
 <INITIAL,EXCLUDE_STATE>{string}	{
 			ring->set_broken();
             lasttoken = TOK_STRING;
-			//printf("%6s %11s %8d %s \n",project,filename,yylineno, yytext);
+            if ( bVerbose )
+			    fprintf(stdout, "%6s %11s %8d %s \n",project,filename,yylineno, yytext);
 			}
 
 
-<INITIAL,EXCLUDE_STATE>.	{ //fprintf( stderr,"warning: unused input on line %d of %s \n%s\n",
-					//yylineno, filename, yytext);
+<INITIAL,EXCLUDE_STATE>.	{ if ( bVerbose ) fprintf( stdout,"warning: unused input on line %d of %s \n%s\n",
+					yylineno, filename, yytext);
 	}
 
 <EXCLUDE_STATE>\n	{
@@ -838,16 +846,27 @@ int main( int argc, char* argv[] )
 	static char HIDCompiler[100];
 	static char Version[100];
 
+    // check for switches given on the command line
+    if ( ( argc > 0 ) && ( 0 == strcmp( argv[0], "-verbose" ) ) )
+    {
+        bVerbose = true;
+        for ( size_t i=0; i<argc-1; ++i )
+        {
+            argv[i] = argv[i+1];
+            --argc;
+        }
+    }
 
 	makeversion( Version );
 	strcpy( HIDCompiler, Compiler );
 	strcat( HIDCompiler, Version  );
 	strcat( HIDCompiler, Author   );
-	fprintf( stderr, "\n %s \n\n", HIDCompiler);
+	if ( bVerbose )
+	    fprintf( stdout, "\n %s \n\n", HIDCompiler);
 	if(argc < 4) {
 		fprintf(
 		stderr,
-		"usage: hidc file.src file.c project \n"
+		"usage: hidc [-verbose] file.src file.c project\n"
 		"\n"
 		"You must give exactly 3 arguments.\n"
 		"1 - an existing SRC file.\n"
diff --git soltools/checkdll/checkdll.c soltools/checkdll/checkdll.c
index ad94af7..cb5228f 100644
--- soltools/checkdll/checkdll.c
+++ soltools/checkdll/checkdll.c
@@ -47,33 +47,39 @@ static const char *psymbol		= "GetVersionInfo";
 
 void usage()
 {
-    fprintf(stderr, "usage: %s <dllname>\n", pprog_name);
+	fprintf(stderr, "usage: %s [-s] <dllname>\n", pprog_name);
     return;
 }
 
 int main(int argc, char *argv[])
 {
     int 	rc;
+    int     silent=0;
     void	*phandle;	
     char 	*(*pfun)(void);
 
-    if ( argc < 2 || argc > 3) {
+	if ( argc < 2 || argc > 4) {
         usage();
         return 1;
     }
 
+    if ( !strcmp(argv[1],"-s") ) {
+        silent = 1;
+        ++argv, --argc;
+    }
+
     if ( (rc = access( argv[1], R_OK )) == -1 ) {
         fprintf(stderr, "%s: ERROR: %s: %s\n",
                 pprog_name, argv[1], strerror(errno));
         return 2;
     }
 
-    printf("Checking DLL %s ...", argv[1]);
+	if (!silent) printf("Checking DLL %s ...", argv[1]);
     fflush(stdout);
 
     if ( (phandle = dlopen(argv[1], RTLD_NOW)) != NULL ) {
         if  ( (pfun = (char *(*)(void))dlsym(phandle, psymbol)) != NULL ) {
-            printf(": ok\n");
+			if (!silent) printf(": ok\n");
         }
         else
         {
diff --git soltools/cpp/_cpp.c soltools/cpp/_cpp.c
index fc60eb3..40d6ad6 100644
--- soltools/cpp/_cpp.c
+++ soltools/cpp/_cpp.c
@@ -30,8 +30,6 @@ __cdecl
     time_t t;
     char ebuf[BUFSIZ];
 
-    fprintf(stderr,"%s","cpp version 17.8.1999\n");
-
     setbuf(stderr, ebuf);
     t = time(NULL);
     curtime = ctime(&t);
diff --git udkapi/util/target.pmk udkapi/util/target.pmk
index f6e7bc9..935b359 100644
--- udkapi/util/target.pmk
+++ udkapi/util/target.pmk
@@ -30,8 +30,8 @@
 #*************************************************************************
 
 $(OUT)$/misc$/$(TARGET).idls: makefile.mk
-    -$(RM) $@
-    $(TYPE) $(mktmp $(foreach,i,$(IDLFILES) $(PACKAGE)$/$i)) >>$@
+	$(COMMAND_ECHO)-$(RM) $@
+	$(COMMAND_ECHO)$(TYPE) $(mktmp $(foreach,i,$(IDLFILES) $(PACKAGE)$/$i)) >>$@
 
 ALLTAR: $(OUT)$/misc$/$(TARGET).idls
 
diff --git vcl/source/window/makefile.mk vcl/source/window/makefile.mk
index 75e9107..d17ea6c 100644
--- vcl/source/window/makefile.mk
+++ vcl/source/window/makefile.mk
@@ -97,10 +97,10 @@ SLOFILES= \
 
 $(INCCOM)$/cuilib.hxx: makefile.mk
 .IF "$(GUI)"=="UNX"
-    $(RM) $@
-    echo \#define DLL_NAME \"libcui$(DLLPOSTFIX)$(DLLPOST)\" >$@
+    @$(RM) $@
+    @echo \#define DLL_NAME \"libcui$(DLLPOSTFIX)$(DLLPOST)\" >$@
 .ELSE
-    echo $(EMQ)#define DLL_NAME $(EMQ)"cui$(DLLPOSTFIX)$(DLLPOST)$(EMQ)" >$@
+    @echo $(EMQ)#define DLL_NAME $(EMQ)"cui$(DLLPOSTFIX)$(DLLPOST)$(EMQ)" >$@
 .ENDIF
 
 $(SLO)$/abstdlg.obj : $(INCCOM)$/cuilib.hxx
diff --git vcl/unx/source/gdi/makefile.mk vcl/unx/source/gdi/makefile.mk
index bdd400b..20055f8 100644
--- vcl/unx/source/gdi/makefile.mk
+++ vcl/unx/source/gdi/makefile.mk
@@ -107,8 +107,8 @@ ALLTAR : $(MACOSXRC)
 XSALSETLIBNAME=$(DLLPRE)spa$(DLLPOSTFIX)$(DLLPOST)
 
 $(INCCOM)$/rtsname.hxx:
-    rm -f $(INCCOM)$/rtsname.hxx ; \
-    echo "#define _XSALSET_LIBNAME "\"$(XSALSETLIBNAME)\" > $(INCCOM)$/rtsname.hxx
+	@rm -f $(INCCOM)$/rtsname.hxx ; \
+		echo "#define _XSALSET_LIBNAME "\"$(XSALSETLIBNAME)\" > $(INCCOM)$/rtsname.hxx
 
 $(SLO)$/salpimpl.obj : $(INCCOM)$/rtsname.hxx
 $(SLO)$/salprnpsp.obj : $(INCCOM)$/rtsname.hxx
diff --git writerfilter/source/doctok/makefile.mk writerfilter/source/doctok/makefile.mk
index 15124d4..757214e 100644
--- writerfilter/source/doctok/makefile.mk
+++ writerfilter/source/doctok/makefile.mk
@@ -127,22 +127,26 @@ DOCTOKGENHEADERS=$(DOCTOKRESOURCEIDSHXX) $(SPRMIDSHXX) $(RESOURCESHXX)
 DOCTOKGENFILES=$(DOCTOKGENHEADERS) $(RESOURCESCXX)
 
 $(DOCTOKHXXOUTDIRCREATED):
-    $(MKDIRHIER) $(DOCTOKHXXOUTDIR)
-    $(TOUCH) $@
+	@$(MKDIRHIER) $(DOCTOKHXXOUTDIR)
+	@$(TOUCH) $@
 
 $(DOCTOKGENHEADERS): $(DOCTOKHXXOUTDIRCREATED)
 
 $(RESOURCESHXX): $(DOCTOKRESOURCESXSL) $(DOCTOKMODEL)
-    $(XSLTPROC) $(DOCTOKRESOURCESXSL) $(DOCTOKMODEL) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(DOCTOKRESOURCESXSL) $(DOCTOKMODEL) > $@
 
 $(SPRMIDSHXX): $(DOCTOKSPRMIDSXSL) $(DOCTOKMODEL)
-    $(XSLTPROC) $(DOCTOKSPRMIDSXSL) $(DOCTOKMODEL) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(DOCTOKSPRMIDSXSL) $(DOCTOKMODEL) > $@
 
 $(RESOURCESCXX): $(DOCTOKRESOURCESIMPLXSL) $(DOCTOKMODEL) $(DOCTOKRESOURCEIDSHXX) $(DOCTOKRESOURCETOOLS)
-    $(XSLTPROC) $(DOCTOKRESOURCESIMPLXSL) $(DOCTOKMODEL) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(DOCTOKRESOURCESIMPLXSL) $(DOCTOKMODEL) > $@
 
 $(DOCTOKRESOURCEIDSHXX):  $(DOCTOKRESOURCEIDSXSL) $(DOCTOKMODEL)
-    $(XSLTPROC) $(DOCTOKRESOURCEIDSXSL) $(DOCTOKMODEL) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(DOCTOKRESOURCEIDSXSL) $(DOCTOKMODEL) > $@
 
 $(SLOFILES) : $(DOCTOKGENHEADERS)
 
diff --git writerfilter/source/ooxml/makefile.mk writerfilter/source/ooxml/makefile.mk
index e63ac5e..b30c7cc 100644
--- writerfilter/source/ooxml/makefile.mk
+++ writerfilter/source/ooxml/makefile.mk
@@ -181,64 +181,75 @@ GENERATEDFILES= \
     $(TOKENXML)
 
 $(TOKENXMLTMP): $(SOLARVER)$/$(INPATH)$/inc$(UPDMINOREXT)$/oox$/token.txt
-    $(TYPE) $(SOLARVER)$/$(INPATH)$/inc$(UPDMINOREXT)$/oox$/token.txt | $(SED) "s#\(.*\)#<fasttoken>\1</fasttoken>#" > $@
+    @$(TYPE) $(SOLARVER)$/$(INPATH)$/inc$(UPDMINOREXT)$/oox$/token.txt | $(SED) "s#\(.*\)#<fasttoken>\1</fasttoken>#" > $@
 
 $(TOKENXML): tokenxmlheader $(TOKENXMLTMP) tokenxmlfooter
-    $(TYPE) tokenxmlheader $(TOKENXMLTMP) tokenxmlfooter > $@
+	@$(TYPE) tokenxmlheader $(TOKENXMLTMP) tokenxmlfooter > $@
 
 $(MISC)$/$(OOXMLPREPROCESSXSL): $(OOXMLPREPROCESSXSL)
-    $(COPY) $(PWD)$/$(OOXMLPREPROCESSXSL) $(MISC)
+	@$(COPY) $(PWD)$/$(OOXMLPREPROCESSXSL) $(MISC)
 
 $(NSXSL) : $(OOXMLMODEL) $(SOLARVER)$/$(INPATH)$/inc$(UPDMINOREXT)$/oox$/namespaces.txt $(NSPROCESS)
-    $(PERL) $(NSPROCESS) $(SOLARVER)$/$(INPATH)$/inc$(UPDMINOREXT)$/oox$/namespaces.txt > $@
+	$(COMMAND_ECHO)$(PERL) $(NSPROCESS) $(SOLARVER)$/$(INPATH)$/inc$(UPDMINOREXT)$/oox$/namespaces.txt > $@
 
 
 $(MODELPROCESSED): $(NSXSL) $(MISC)$/$(OOXMLPREPROCESSXSL) $(OOXMLMODEL)
-    $(XSLTPROC) $(NSXSL) $(OOXMLMODEL) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(NSXSL) $(OOXMLMODEL) > $@
 
 $(OOXMLHXXOUTDIRCREATED):
-    $(MKDIRHIER) $(OOXMLHXXOUTDIR)
-    $(TOUCH) $@
+	@$(MKDIRHIER) $(OOXMLHXXOUTDIR)
+	@$(TOUCH) $@
 
 $(OOXMLGENHEADERS): $(OOXMLHXXOUTDIRCREATED)
 
 $(OOXMLFASTTOKENSHXX): $(OOXMLFASTTOKENSXSL) $(TOKENXML)
-    $(XSLTPROC) $(OOXMLFASTTOKENSXSL) $(TOKENXML) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(OOXMLFASTTOKENSXSL) $(TOKENXML) > $@
 
 $(OOXMLFASTRESOURCESHXX): $(OOXMLFASTRESOURCESXSL) $(MODELPROCESSED)
-    $(XSLTPROC) $(OOXMLFASTRESOURCESXSL) $(MODELPROCESSED) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(OOXMLFASTRESOURCESXSL) $(MODELPROCESSED) > $@
 
 $(OOXMLFASTRESOURCESCXX): $(OOXMLFASTRESOURCEHXXS) \
     $(OOXMLFASTRESOURCESIMPLXSL) $(MODELPROCESSED) 
-    $(XSLTPROC) $(OOXMLFASTRESOURCESIMPLXSL) $(MODELPROCESSED) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(OOXMLFASTRESOURCESIMPLXSL) $(MODELPROCESSED) > $@
 
 $(OOXMLFASTRESOURCECXXS): $(MODELPROCESSED)
 
 $(OOXMLFASTRESOURCEHXXS): $(MODELPROCESSED)
 
 $(OOXMLCXXOUTDIR)$/OOXMLfastresources%.cxx: fastresourcesimpl%.xsl
-    $(XSLTPROC) $< $(MODELPROCESSED) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $< $(MODELPROCESSED) > $@
 
 $(OOXMLHXXOUTDIR)$/OOXMLfastresources%.hxx: fastresources%.xsl
-    $(XSLTPROC) $< $(MODELPROCESSED) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $< $(MODELPROCESSED) > $@
 
 $(OOXMLVALUESHXX): $(OOXMLVALUESXSL) $(MODELPROCESSED)
-    $(XSLTPROC) $(OOXMLVALUESXSL) $(MODELPROCESSED) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(OOXMLVALUESXSL) $(MODELPROCESSED) > $@
 
 $(OOXMLVALUESCXX): $(OOXMLVALUESIMPLXSL) $(MODELPROCESSED) \
     $(OOXMLFASTRESOURCESHXX)
-    $(XSLTPROC) $(OOXMLVALUESIMPLXSL) $(MODELPROCESSED) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(OOXMLVALUESIMPLXSL) $(MODELPROCESSED) > $@
 
 $(OOXMLRESOURCEIDSHXX):  $(OOXMLHXXOUTDIRCREATED) $(OOXMLRESOURCEIDSXSL) \
     $(MODELPROCESSED)
-    $(XSLTPROC) $(OOXMLRESOURCEIDSXSL) $(MODELPROCESSED) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(OOXMLRESOURCEIDSXSL) $(MODELPROCESSED) > $@
 
 $(OOXMLNAMESPACEIDSHXX):  $(OOXMLHXXOUTDIRCREATED) $(OOXMLNAMESPACEIDSXSL) \
     $(MODELPROCESSED)
-    $(XSLTPROC) $(OOXMLNAMESPACEIDSXSL) $(MODELPROCESSED) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(OOXMLNAMESPACEIDSXSL) $(MODELPROCESSED) > $@
 
 $(GPERFFASTTOKENHXX): $(OOXMLGPERFFASTTOKENXSL) $(MODELPROCESSED)
-    $(XSLTPROC) $(OOXMLGPERFFASTTOKENXSL) $(MODELPROCESSED) | tr -d '\r' | gperf -I -t -E -S1 -c -G -LC++ > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(OOXMLGPERFFASTTOKENXSL) $(MODELPROCESSED) | tr -d '\r' | gperf -I -t -E -S1 -c -G -LC++ > $@
 
 $(SLOFASTNAMESPACES): $(OOXMLFASTRESOURCESCXX) $(OOXMLGENHEADERS)
 
@@ -248,7 +259,7 @@ $(SLOFASTNAMESPACES): OOXMLFastHelper.hxx
 .PHONY: genclean genmake genheaders
 
 genclean:
-    rm -f $(GENERATEDFILES)
+	@rm -f $(GENERATEDFILES)
 
 genmake: $(GENERATEDFILES)
 
diff --git writerfilter/source/resourcemodel/makefile.mk writerfilter/source/resourcemodel/makefile.mk
index 6bb943d..72cd9f4 100644
--- writerfilter/source/resourcemodel/makefile.mk
+++ writerfilter/source/resourcemodel/makefile.mk
@@ -142,18 +142,21 @@ GENERATEDFILES= \
     $(SPRMCODETOSTRTMP)
 
 $(OOXMLQNAMETOSTRTMP): $(OOXMLQNAMETOSTRXSL) $(MODELPROCESSED)
-    $(XSLTPROC) $(OOXMLQNAMETOSTRXSL:s!\!/!) $(MODELPROCESSED) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(OOXMLQNAMETOSTRXSL:s!\!/!) $(MODELPROCESSED) > $@
 
 $(DOCTOKQNAMETOSTRTMP): $(DOCTOKQNAMETOSTRXSL) $(DOCTOKMODEL)
-    $(XSLTPROC) $(DOCTOKQNAMETOSTRXSL:s!\!/!) $(DOCTOKMODEL) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(DOCTOKQNAMETOSTRXSL:s!\!/!) $(DOCTOKMODEL) > $@
 
 $(QNAMETOSTRCXX): $(OOXMLQNAMETOSTRTMP) $(DOCTOKQNAMETOSTRTMP) qnametostrheader qnametostrfooter $(OOXMLRESOURCESTOOLSXSL) $(DOCTOKRESOURCETOOLS)
-    $(TYPE) qnametostrheader $(OOXMLQNAMETOSTRTMP) $(DOCTOKQNAMETOSTRTMP) qnametostrfooter > $@
+	@$(TYPE) qnametostrheader $(OOXMLQNAMETOSTRTMP) $(DOCTOKQNAMETOSTRTMP) qnametostrfooter > $@
 $(SPRMCODETOSTRTMP): $(DOCTOKSPRMCODETOSTRXSL) $(DOCTOKMODEL)
-    $(XSLTPROC) $(DOCTOKSPRMCODETOSTRXSL:s!\!/!) $(DOCTOKMODEL) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(DOCTOKSPRMCODETOSTRXSL:s!\!/!) $(DOCTOKMODEL) > $@
 
 $(SPRMCODETOSTRCXX): sprmcodetostrheader $(SPRMCODETOSTRTMP) sprmcodetostrfooter
-    $(TYPE) $< > $@
+	@$(TYPE) $< > $@
 
 $(SLO)$/sprmcodetostr.obj: $(SPRMCODETOSTRCXX)
 $(SLO)$/qnametostr.obj: $(QNAMETOSTRCXX)
@@ -161,29 +164,33 @@ $(SLO)$/qnametostr.obj: $(QNAMETOSTRCXX)
 $(SLOFILES): $(GENERATEDHEADERS)
 
 $(DOCTOKHXXOUTDIRCREATED):
-    $(MKDIRHIER) $(DOCTOKHXXOUTDIR)
-    $(TOUCH) $@
+	@$(MKDIRHIER) $(DOCTOKHXXOUTDIR)
+	@$(TOUCH) $@
 
 $(DOCTOKRESOURCEIDSHXX): $(DOCTOKHXXOUTDIRCREATED) $(DOCTOKRESOURCETOOLS) $(DOCTOKRESOURCEIDSXSL)
-    $(XSLTPROC) $(DOCTOKRESOURCEIDSXSL:s!\!/!) $(DOCTOKMODEL) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(DOCTOKRESOURCEIDSXSL:s!\!/!) $(DOCTOKMODEL) > $@
 
 $(OOXMLHXXOUTDIRCREATED):
-    $(MKDIRHIER) $(OOXMLHXXOUTDIR)
-    $(TOUCH) $@
+	@$(MKDIRHIER) $(OOXMLHXXOUTDIR)
+	@$(TOUCH) $@
 
 $(MODELPROCESSED): $(OOXMLMODEL) $(OOXMLRESOURCESTOOLSXSL) $(OOXMLPREPROCESSXSL)
-    $(XSLTPROC) $(OOXMLPREPROCESSXSL:s!\!/!) $(OOXMLMODEL) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(OOXMLPREPROCESSXSL:s!\!/!) $(OOXMLMODEL) > $@
 
 $(OOXMLRESOURCEIDSHXX): $(OOXMLHXXOUTDIRCREATED) $(OOXMLRESOURCESTOOLSXSL) $(OOXMLRESOURCEIDSXSL) $(MODELPROCESSED)
-    $(XSLTPROC) $(OOXMLRESOURCEIDSXSL:s!\!/!) $(MODELPROCESSED) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(OOXMLRESOURCEIDSXSL:s!\!/!) $(MODELPROCESSED) > $@
 
 $(SPRMIDSHXX): $(DOCTOKHXXOUTDIRCREATED) $(DOCTOKSPRMIDSXSL) $(DOCTOKMODEL)
-    $(XSLTPROC) $(DOCTOKSPRMIDSXSL:s!\!/!) $(DOCTOKMODEL) > $@
+	@echo "Making:   " $(@:f)
+	$(COMMAND_ECHO)$(XSLTPROC) $(DOCTOKSPRMIDSXSL:s!\!/!) $(DOCTOKMODEL) > $@
 
 .PHONY: genclean genmake gendirs
 
 genclean: 
-    rm -f $(GENERATEDFILES)
+	@rm -f $(GENERATEDFILES)
 
 genmake: $(GENERATEDFILES)
 
