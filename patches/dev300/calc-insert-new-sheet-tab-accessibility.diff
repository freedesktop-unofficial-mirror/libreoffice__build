diff --git accessibility/source/extended/accessibletabbarbase.cxx accessibility/source/extended/accessibletabbarbase.cxx
index 99f5a9b..a4441a3 100644
--- accessibility/source/extended/accessibletabbarbase.cxx
+++ accessibility/source/extended/accessibletabbarbase.cxx
@@ -66,7 +66,7 @@ IMPL_LINK( AccessibleTabBarBase, WindowEventListener, VclSimpleEvent*, pEvent )
         DBG_ASSERT( pEventWindow, "AccessibleTabBarBase::WindowEventListener: no window!" );
 
         if( ( pWinEvent->GetId() == VCLEVENT_TABBAR_PAGEREMOVED ) &&
-            ( (sal_uInt16)(sal_IntPtr) pWinEvent->GetData() == TABBAR_PAGE_NOTFOUND ) &&
+            ( (sal_uInt16)(sal_IntPtr) pWinEvent->GetData() == TabBar::PAGE_NOT_FOUND ) &&
             ( dynamic_cast< AccessibleTabBarPageList *> (this) != NULL ) )
         {
             return 0;
diff --git accessibility/source/extended/accessibletabbarpagelist.cxx accessibility/source/extended/accessibletabbarpagelist.cxx
index cbd98d3..1e7dc43 100644
--- accessibility/source/extended/accessibletabbarpagelist.cxx
+++ accessibility/source/extended/accessibletabbarpagelist.cxx
@@ -316,7 +316,7 @@ namespace accessibility
                 {
                     sal_uInt16 nPageId = (sal_uInt16)(sal_IntPtr) rVclWindowEvent.GetData();
 
-                    if ( nPageId == TABBAR_PAGE_NOTFOUND )
+                    if ( nPageId == TabBar::PAGE_NOT_FOUND )
                     {
                         for ( sal_Int32 i = m_aAccessibleChildren.size() - 1; i >= 0; --i )
                             RemoveChild( i );
