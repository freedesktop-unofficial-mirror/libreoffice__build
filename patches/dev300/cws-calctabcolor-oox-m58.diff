diff --git oox/inc/oox/xls/viewsettings.hxx oox/inc/oox/xls/viewsettings.hxx
index fceb1bc..f1160a1 100644
--- oox/inc/oox/xls/viewsettings.hxx
+++ oox/inc/oox/xls/viewsettings.hxx
@@ -83,6 +83,7 @@ struct SheetViewModel
     bool                mbShowZeros;                    /// True = show zero value zells.
     bool                mbShowOutline;                  /// True = show outlines.
     bool                mbZoomToFit;                    /// True = zoom chart sheet to fit window.
+    Color               maTabColor;                     /// Sheet tab color. (TODO: Move to sheet settings later.)
 
     explicit            SheetViewModel();
 
@@ -112,6 +113,8 @@ public:
 
     /** Imports the sheetView element containing sheet view settings. */
     void                importSheetView( const AttributeList& rAttribs );
+    /** Imports the tabcolor element containing tab color settings. */
+    void                importTabColor( const AttributeList& rAttribs );
     /** Imports the pane element containing sheet pane settings. */
     void                importPane( const AttributeList& rAttribs );
     /** Imports the selection element containing selection settings for a pane. */
diff --git oox/source/token/properties.txt oox/source/token/properties.txt
index 958a9ac..89a65cd 100644
--- oox/source/token/properties.txt
+++ oox/source/token/properties.txt
@@ -355,6 +355,7 @@ Suffix
 SwapXAndYAxis
 Symbol
 SymbolColor
+TabColor
 TableBorder
 TableLayout
 TableSelected
diff --git oox/source/xls/viewsettings.cxx oox/source/xls/viewsettings.cxx
index caeacaf..ce8c009 100644
--- oox/source/xls/viewsettings.cxx
+++ oox/source/xls/viewsettings.cxx
@@ -245,6 +245,12 @@ void SheetViewSettings::importSheetView( const AttributeList& rAttribs )
     rModel.mbShowOutline     = rAttribs.getBool( XML_showOutlineSymbols, true );
 }
 
+void SheetViewSettings::importTabColor( const AttributeList& rAttribs )
+{
+    SheetViewModel& rModel = maSheetViews.empty() ? *createSheetView() : *maSheetViews.back();
+    rModel.maTabColor.importColor( rAttribs );
+}
+
 void SheetViewSettings::importPane( const AttributeList& rAttribs )
 {
     OSL_ENSURE( !maSheetViews.empty(), "SheetViewSettings::importPane - missing sheet view model" );
@@ -589,6 +595,9 @@ void SheetViewSettings::finalizeImport()
     aPropMap[ PROP_ShowZeroValues ]               <<= xModel->mbShowZeros;
     aPropMap[ PROP_IsOutlineSymbolsSet ]          <<= xModel->mbShowOutline;
 
+    if (!xModel->maTabColor.isAuto())
+        aPropMap[ PROP_TabColor ] <<= static_cast< sal_Int32 >(xModel->maTabColor.getColor(*this));
+
     // store sheet view settings in global view settings object
     getViewSettings().setSheetViewSettings( getSheetIndex(), xModel, Any( aPropMap.makePropertyValueSequence() ) );
 }
diff --git oox/source/xls/worksheetfragment.cxx oox/source/xls/worksheetfragment.cxx
index 4b75411..d2bed72 100644
--- oox/source/xls/worksheetfragment.cxx
+++ oox/source/xls/worksheetfragment.cxx
@@ -297,7 +297,9 @@ ContextHandlerRef OoxWorksheetFragment::onCreateContext( sal_Int32 nElement, con
         case XLS_TOKEN( sheetPr ):
             switch( nElement )
             {
-                case XLS_TOKEN( tabColor ):         getWorksheetSettings().importTabColor( rAttribs );              break;
+// TODO: Treat tab color as a sheet setting later.
+//              case XLS_TOKEN( tabColor ):         getWorksheetSettings().importTabColor( rAttribs );              break;
+                case XLS_TOKEN( tabColor ):         getSheetViewSettings().importTabColor( rAttribs );              break;
                 case XLS_TOKEN( outlinePr ):        getWorksheetSettings().importOutlinePr( rAttribs );             break;
                 case XLS_TOKEN( pageSetUpPr ):      importPageSetUpPr( rAttribs );                                  break;
             }
