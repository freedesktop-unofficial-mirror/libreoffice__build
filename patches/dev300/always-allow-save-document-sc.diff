diff --git sc/inc/unonames.hxx sc/inc/unonames.hxx
index 18c858b..0dbbfe3 100644
--- sc/inc/unonames.hxx
+++ sc/inc/unonames.hxx
@@ -482,6 +482,7 @@
 #define SC_UNO_ISEXECUTELINKENABLED     "IsExecuteLinkEnabled"
 #define SC_UNO_ISCHANGEREADONLYENABLED  "IsChangeReadOnlyEnabled"
 #define SC_UNO_REFERENCEDEVICE          "ReferenceDevice"
+#define SC_UNO_ALWAYS_ALLOW_SAVE        "AlwaysAllowSave"
 
 //	document properties from FormModel
 #define SC_UNO_APPLYFMDES			"ApplyFormDesignMode"
diff --git sc/source/ui/docshell/docsh6.cxx sc/source/ui/docshell/docsh6.cxx
index d4f4b61..b41b4a1 100644
--- sc/source/ui/docshell/docsh6.cxx
+++ sc/source/ui/docshell/docsh6.cxx
@@ -436,6 +436,16 @@ void ScDocShell::UpdateLinks()
 		}
 }
 
+bool ScDocShell::GetApplicationFlag(SfxApplicationFlagType eFlagType)
+{
+    switch (eFlagType)
+    {
+        case SFX_APPFLAG_ALWAYS_ALLOW_SAVE:
+            return true;
+    }
+    return false;
+}
+
 BOOL ScDocShell::ReloadTabLinks()
 {
 	SvxLinkManager* pLinkManager = aDocument.GetLinkManager();
diff --git sc/source/ui/inc/docsh.hxx sc/source/ui/inc/docsh.hxx
index fcf3f7f..a53d4dc 100644
--- sc/source/ui/inc/docsh.hxx
+++ sc/source/ui/inc/docsh.hxx
@@ -311,6 +311,9 @@ public:
     void            CancelAutoDBRange();    // called when dialog is cancelled
 
 	void			UpdateLinks();			// Link-Eintraege aktuallisieren
+
+    virtual bool GetApplicationFlag(SfxApplicationFlagType eFlagType);
+
 	BOOL			ReloadTabLinks();		// Links ausfuehren (Inhalt aktualisieren)
 
 	void            PostEditView( ScEditEngineDefaulter* pEditEngine, const ScAddress& rCursorPos );
diff --git sc/source/ui/unoobj/docuno.cxx sc/source/ui/unoobj/docuno.cxx
index d1bee0d..9c9b897 100644
--- sc/source/ui/unoobj/docuno.cxx
+++ sc/source/ui/unoobj/docuno.cxx
@@ -1587,6 +1587,8 @@ uno::Any SAL_CALL ScModelObj::getPropertyValue( const rtl::OUString& aPropertyNa
             pXDev->SetOutputDevice( pDoc->GetRefDevice() );
             aRet <<= uno::Reference< awt::XDevice >( pXDev );
         }
+        else if (aString.EqualsAscii(SC_UNO_ALWAYS_ALLOW_SAVE))
+            ScUnoHelpFunctions::SetBoolInAny(aRet, pDocShell->GetApplicationFlag(SFX_APPFLAG_ALWAYS_ALLOW_SAVE));
         else if ( aString.EqualsAscii( "BuildId" ) )
 		{
 			aRet <<= maBuildId;
