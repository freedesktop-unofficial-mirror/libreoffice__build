From be57db91d79e1fe98867a79d5eeaea4816be7f1a Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 16:52:38 +0200
Subject: [PATCH 013/878] cws-kohei03-chart2.diff

---
 chart2/source/view/charttypes/PieChart.cxx |   29 +++++++++++++++++----------
 chart2/source/view/charttypes/PieChart.hxx |    4 ++-
 2 files changed, 21 insertions(+), 12 deletions(-)

diff --git a/chart2/source/view/charttypes/PieChart.cxx b/chart2/source/view/charttypes/PieChart.cxx
index e242b04..ad44135 100644
--- a/chart2/source/view/charttypes/PieChart.cxx
+++ b/chart2/source/view/charttypes/PieChart.cxx
@@ -126,6 +126,8 @@ PieChart::PieChart( const uno::Reference<XChartType>& xChartTypeModel
         , m_pPosHelper( new PiePositionHelper( NormalAxis_Z, (m_nDimension==3)?0.0:90.0 ) )
         , m_bUseRings(false)
 {
+    ::rtl::math::setNan(&m_fMaxOffset);
+
     PlotterBase::m_pPosHelper = m_pPosHelper;
     VSeriesPlotter::m_pMainPosHelper = m_pPosHelper;
     m_pPosHelper->m_fRadiusOffset = 0.0;
@@ -245,27 +247,31 @@ double PieChart::getMinimumX()
 {
     return 0.5;
 }
-double PieChart::getMaxOffset() const
+double PieChart::getMaxOffset()
 {
-    double fRet = 0.0;
+    if (!::rtl::math::isNan(m_fMaxOffset))
+        // Value already cached.  Use it.
+        return m_fMaxOffset;
+
+    m_fMaxOffset = 0.0;
     if( m_aZSlots.size()<=0 )
-        return fRet;
+        return m_fMaxOffset;
     if( m_aZSlots[0].size()<=0 )
-        return fRet;
+        return m_fMaxOffset;
 
     const ::std::vector< VDataSeries* >& rSeriesList( m_aZSlots[0][0].m_aSeriesVector );
     if( rSeriesList.size()<=0 )
-        return fRet;
+        return m_fMaxOffset;
 
     VDataSeries* pSeries = rSeriesList[0];
     uno::Reference< beans::XPropertySet > xSeriesProp( pSeries->getPropertiesOfSeries() );
     if( !xSeriesProp.is() )
-        return fRet;
+        return m_fMaxOffset;
 
     double fExplodePercentage=0.0;
     xSeriesProp->getPropertyValue( C2U( "Offset" )) >>= fExplodePercentage;
-    if(fExplodePercentage>fRet)
-        fRet=fExplodePercentage;
+    if(fExplodePercentage>m_fMaxOffset)
+        m_fMaxOffset=fExplodePercentage;
 
     uno::Sequence< sal_Int32 > aAttributedDataPointIndexList;
     if( xSeriesProp->getPropertyValue( C2U( "AttributedDataPoints" ) ) >>= aAttributedDataPointIndexList )
@@ -277,12 +283,12 @@ double PieChart::getMaxOffset() const
             {
                 fExplodePercentage=0.0;
                 xPointProp->getPropertyValue( C2U( "Offset" )) >>= fExplodePercentage;
-                if(fExplodePercentage>fRet)
-                    fRet=fExplodePercentage;
+                if(fExplodePercentage>m_fMaxOffset)
+                    m_fMaxOffset=fExplodePercentage;
             }
         }
     }
-    return fRet;
+    return m_fMaxOffset;
 }
 double PieChart::getMaximumX()
 {
@@ -354,6 +360,7 @@ void PieChart::createShapes()
         nExplodeableSlot = m_aZSlots[0].size()-1;
 
     m_aLabelInfoList.clear();
+    ::rtl::math::setNan(&m_fMaxOffset);
 
 //=============================================================================
     for( double fSlotX=0; aXSlotIter != aXSlotEnd && (m_bUseRings||fSlotX<0.5 ); aXSlotIter++, fSlotX+=1.0 )
diff --git a/chart2/source/view/charttypes/PieChart.hxx b/chart2/source/view/charttypes/PieChart.hxx
index 61e459d..52545f6 100644
--- a/chart2/source/view/charttypes/PieChart.hxx
+++ b/chart2/source/view/charttypes/PieChart.hxx
@@ -102,7 +102,7 @@ private: //methods
                         , double fLogicZ, double fDepth, double fExplodePercentage
                         , tPropertyNameValueMap* pOverWritePropertiesMap );
 
-    double              getMaxOffset() const;
+    double              getMaxOffset();
     bool                detectLabelOverlapsAndMove(const ::com::sun::star::awt::Size& rPageSize);//returns true when there might be more to do
     void                resetLabelPositionsToPreviousState();
 struct PieLabelInfo;
@@ -134,6 +134,8 @@ private: //member
     };
 
     ::std::vector< PieLabelInfo > m_aLabelInfoList;
+
+    double m_fMaxOffset;    /// cached max offset value (init'ed to NaN)
 };
 //.............................................................................
 } //namespace chart
-- 
1.7.0.1

