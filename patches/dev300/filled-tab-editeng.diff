From 1af3dfb7677dc8d7a610f319f80f5f53fe19b43c Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 17:09:16 +0200
Subject: [PATCH 859/878] filled-tab-editeng.diff

---
 .../drawinglayer/primitive2d/textprimitive2d.hxx   |    8 +++-
 .../source/primitive2d/textprimitive2d.cxx         |   12 ++++-
 drawinglayer/source/processor2d/vclprocessor2d.cxx |   41 ++++++++++++++++---
 svx/inc/svx/editeng.hxx                            |    8 ++++
 svx/inc/svx/outliner.hxx                           |   15 +++++++
 svx/source/editeng/editeng.cxx                     |    8 ++++
 svx/source/editeng/impedit3.cxx                    |   19 +++++++++
 svx/source/outliner/outleeng.cxx                   |    9 ++++
 svx/source/outliner/outleeng.hxx                   |    8 ++++
 svx/source/outliner/outliner.cxx                   |   15 +++++++-
 svx/source/svdraw/svdotextdecomposition.cxx        |    4 +-
 11 files changed, 134 insertions(+), 13 deletions(-)

diff --git a/drawinglayer/inc/drawinglayer/primitive2d/textprimitive2d.hxx b/drawinglayer/inc/drawinglayer/primitive2d/textprimitive2d.hxx
index 764ff05..5b2ec73 100644
--- a/drawinglayer/inc/drawinglayer/primitive2d/textprimitive2d.hxx
+++ b/drawinglayer/inc/drawinglayer/primitive2d/textprimitive2d.hxx
@@ -129,6 +129,8 @@ namespace drawinglayer
 
             // #i96669# add simple range buffering for this primitive
             basegfx::B2DRange						maB2DRange;
+            bool                                    mbFilled;           // Whether to fill a given width with the text
+            long                                    mnWidthToFill;      // the width to fill
 
         protected:
             // local decomposition.
@@ -143,7 +145,9 @@ namespace drawinglayer
                 const ::std::vector< double >& rDXArray,
                 const FontAttributes& rFontAttributes,
                 const ::com::sun::star::lang::Locale& rLocale,
-                const basegfx::BColor& rFontColor);
+                const basegfx::BColor& rFontColor,
+                bool bFilled = false,
+                long nWidthToFill = 0);
 
             // helpers
             // get text outlines as polygons and their according ObjectTransformation. Handles all
@@ -159,6 +163,8 @@ namespace drawinglayer
             const FontAttributes& getFontAttributes() const { return maFontAttributes; }
             const ::com::sun::star::lang::Locale& getLocale() const { return  maLocale; }
             const basegfx::BColor& getFontColor() const { return maFontColor; }
+            bool isFilled() const { return mbFilled; }
+            long getWidthToFill() const { return mnWidthToFill; }
 
             // compare operator
             virtual bool operator==( const BasePrimitive2D& rPrimitive ) const;
diff --git a/drawinglayer/source/primitive2d/textprimitive2d.cxx b/drawinglayer/source/primitive2d/textprimitive2d.cxx
index 720b822..74753a4 100644
--- a/drawinglayer/source/primitive2d/textprimitive2d.cxx
+++ b/drawinglayer/source/primitive2d/textprimitive2d.cxx
@@ -260,7 +260,9 @@ namespace drawinglayer
             const ::std::vector< double >& rDXArray,
             const FontAttributes& rFontAttributes,
             const ::com::sun::star::lang::Locale& rLocale,
-            const basegfx::BColor& rFontColor)
+            const basegfx::BColor& rFontColor,
+            bool bFilled,
+            long nWidthToFill)
         :	BasePrimitive2D(),
             maTextTransform(rNewTransform),
             maText(rText),
@@ -270,7 +272,9 @@ namespace drawinglayer
             maFontAttributes(rFontAttributes),
             maLocale(rLocale),
             maFontColor(rFontColor),
-            maB2DRange()
+            maB2DRange(),
+            mbFilled(bFilled),
+            mnWidthToFill(nWidthToFill)
         {
 #ifdef DBG_UTIL
             const xub_StrLen aStringLength(getText().Len());
@@ -299,7 +303,9 @@ namespace drawinglayer
                     && getDXArray() == rCompare.getDXArray()
                     && getFontAttributes() == rCompare.getFontAttributes()
                     && impLocalesAreEqual(getLocale(), rCompare.getLocale())
-                    && getFontColor() == rCompare.getFontColor());
+                    && getFontColor() == rCompare.getFontColor()
+                    && mbFilled == rCompare.mbFilled
+                    && mnWidthToFill == rCompare.mnWidthToFill);
             }
 
             return false;
diff --git a/drawinglayer/source/processor2d/vclprocessor2d.cxx b/drawinglayer/source/processor2d/vclprocessor2d.cxx
index a7c9ed8..5a8e7fa 100644
--- a/drawinglayer/source/processor2d/vclprocessor2d.cxx
+++ b/drawinglayer/source/processor2d/vclprocessor2d.cxx
@@ -288,22 +288,49 @@ namespace drawinglayer
                     mpOutputDevice->SetFont(aFont);
                     mpOutputDevice->SetTextColor(Color(aRGBFontColor));
 
+                    String aText( rTextCandidate.getText() );
+                    xub_StrLen nPos = rTextCandidate.getTextPosition();
+                    xub_StrLen nLen = rTextCandidate.getTextLength();
+
+                    sal_Int32* pDXArray = aTransformedDXArray.size() ? &(aTransformedDXArray[0]) : NULL ;
+
+                    if ( rTextCandidate.isFilled() )
+                    {
+                        basegfx::B2DVector aOldFontScaling, aOldTranslate;
+                        double fOldRotate, fOldShearX;
+                        rTextCandidate.getTextTransform().decompose(aOldFontScaling, aOldTranslate, fOldRotate, fOldShearX);
+
+                        long nWidthToFill = rTextCandidate.getWidthToFill( ) * aFontScaling.getX() / aOldFontScaling.getX();
+
+                        long nWidth = mpOutputDevice->GetTextArray(
+                            rTextCandidate.getText(), pDXArray, 0, 1 );
+                        long nChars = 2;
+                        if ( nWidth )
+                            nChars = nWidthToFill / nWidth;
+
+                        String aFilled;
+                        aFilled.Fill( (USHORT)nChars, aText.GetChar( 0 ) );
+                        aText = aFilled;
+                        nPos = 0;
+                        nLen = nChars;
+                    }
+
                     if(aTransformedDXArray.size())
                     {
                         mpOutputDevice->DrawTextArray(
                             aStartPoint, 
-                            rTextCandidate.getText(), 
-                            &(aTransformedDXArray[0]),
-                            rTextCandidate.getTextPosition(),
-                            rTextCandidate.getTextLength());
+                            aText,
+                            pDXArray,
+                            nPos,
+                            nLen);
                     }
                     else
                     {
                         mpOutputDevice->DrawText(
                             aStartPoint, 
-                            rTextCandidate.getText(), 
-                            rTextCandidate.getTextPosition(),
-                            rTextCandidate.getTextLength());
+                            aText,
+                            nPos,
+                            nLen);
                     }
 
                     if(rTextCandidate.getFontAttributes().getRTL())
diff --git a/svx/inc/svx/editeng.hxx b/svx/inc/svx/editeng.hxx
index dbd1cac..16b68b1 100644
--- a/svx/inc/svx/editeng.hxx
+++ b/svx/inc/svx/editeng.hxx
@@ -443,6 +443,14 @@ public:
         const Color& rOverlineColor,
         const Color& rTextLineColor);
 
+    virtual void DrawingTab(
+        const Point& rStartPos, long nWidth, const String& rChar,
+        const SvxFont& rFont, USHORT nPara, xub_StrLen nIndex, BYTE nRightToLeft,
+        bool bEndOfLine,
+        bool bEndOfParagraph,
+        const Color& rOverlineColor,
+        const Color& rTextLineColor);
+
     virtual String	GetUndoComment( USHORT nUndoId ) const;
     virtual BOOL	FormattingParagraph( USHORT nPara );
     virtual BOOL	SpellNextDocument();
diff --git a/svx/inc/svx/outliner.hxx b/svx/inc/svx/outliner.hxx
index 6311ede..3ed2928 100644
--- a/svx/inc/svx/outliner.hxx
+++ b/svx/inc/svx/outliner.hxx
@@ -416,6 +416,9 @@ public:
     // #101498# BiDi level needs to be transported, too.
     BYTE			    mnBiDiLevel;
 
+    bool                mbFilled;
+    long                mnWidthToFill;
+
     // bitfield
     unsigned            mbEndOfLine : 1;
     unsigned            mbEndOfParagraph : 1;
@@ -439,6 +442,8 @@ public:
         const Color& rOverlineColor,
         const Color& rTextLineColor,
         BYTE nBiDiLevel,
+        bool bFilled,
+        long nWidthToFill,
         bool bEndOfLine,
         bool bEndOfParagraph,
         bool bEndOfBullet)
@@ -456,6 +461,8 @@ public:
         maOverlineColor(rOverlineColor),
         maTextLineColor(rTextLineColor),
         mnBiDiLevel(nBiDiLevel),
+        mbFilled( bFilled ),
+        mnWidthToFill( nWidthToFill ),
         mbEndOfLine(bEndOfLine),
         mbEndOfParagraph(bEndOfParagraph),
         mbEndOfBullet(bEndOfBullet)
@@ -889,6 +896,14 @@ public:
         const Color& rOverlineColor,
         const Color& rTextLineColor);
 
+    virtual void DrawingTab(
+        const Point& rStartPos, long nWidth, const String& rChar,
+        const SvxFont& rFont, USHORT nPara, xub_StrLen nIndex, BYTE nRightToLeft,
+        bool bEndOfLine,
+        bool bEndOfParagraph,
+        const Color& rOverlineColor,
+        const Color& rTextLineColor);
+
     Size            CalcTextSize();
 
     Point           GetDocPos( Paragraph* pPara );
diff --git a/svx/source/editeng/editeng.cxx b/svx/source/editeng/editeng.cxx
index 263b56d..127fdbc 100644
--- a/svx/source/editeng/editeng.cxx
+++ b/svx/source/editeng/editeng.cxx
@@ -2471,6 +2471,14 @@ void __EXPORT EditEngine::DrawingText( const Point&, const XubString&, USHORT, U
     DBG_CHKTHIS( EditEngine, 0 );
 }
 
+void __EXPORT EditEngine::DrawingTab( const Point& rStartPos, long nWidth, const String& rChar,
+    const SvxFont& rFont, USHORT nPara, xub_StrLen nIndex, BYTE nRightToLeft,
+    bool bEndOfLine, bool bEndOfParagraph,
+    const Color& rOverlineColor, const Color& rTextLineColor)
+{
+    DBG_CHKTHIS( EditEngine, 0 );
+}
+
 void __EXPORT EditEngine::PaintingFirstLine( sal_uInt16, const Point&, long, const Point&, short, OutputDevice* )
 {
     DBG_CHKTHIS( EditEngine, 0 );
diff --git a/svx/source/editeng/impedit3.cxx b/svx/source/editeng/impedit3.cxx
index f161e5e..9ac5a1f 100644
--- a/svx/source/editeng/impedit3.cxx
+++ b/svx/source/editeng/impedit3.cxx
@@ -3572,7 +3572,26 @@ void ImpEditEngine::Paint( OutputDevice* pOutDev, Rectangle aClipRec, Point aSta
 
                                     String aText;
                                     aText.Fill( (USHORT)nChars, pTextPortion->GetExtraValue() );
+                                    aTmpFont.QuickDrawText( pOutDev, aTmpPos, aText, 0, aText.Len(), NULL );
                                     pOutDev->DrawStretchText( aTmpPos, pTextPortion->GetSize().Width(), aText );
+
+                                    if ( bStripOnly )
+                                    {
+                                        // create EOL and EOP bools
+                                        const bool bEndOfLine(y == pLine->GetEndPortion());
+                                        const bool bEndOfParagraph(bEndOfLine && nLine + 1 == nLines);
+
+                                        const Color aOverlineColor(pOutDev->GetOverlineColor());
+                                        const Color aTextLineColor(pOutDev->GetTextLineColor());
+
+                                        // StripPortions() data callback
+                                        GetEditEnginePtr()->DrawingTab( aTmpPos,
+                                            pTextPortion->GetSize().Width(),
+                                            pTextPortion->GetExtraValue(),
+                                            aTmpFont, n, nIndex, pTextPortion->GetRightToLeft(),
+                                            bEndOfLine, bEndOfParagraph,
+                                            aOverlineColor, aTextLineColor);
+                                    }
                                 }
                             }
                             break;
diff --git a/svx/source/outliner/outleeng.cxx b/svx/source/outliner/outleeng.cxx
index aab655d..43e73a6 100644
--- a/svx/source/outliner/outleeng.cxx
+++ b/svx/source/outliner/outleeng.cxx
@@ -198,6 +198,15 @@ void OutlinerEditEng::DrawingText( const Point& rStartPos, const XubString& rTex
         pWrongSpellVector, pFieldData, bEndOfLine, bEndOfParagraph, bEndOfBullet, pLocale, rOverlineColor, rTextLineColor);
 }
 
+void OutlinerEditEng::DrawingTab( const Point& rStartPos, long nWidth, const String& rChar,
+    const SvxFont& rFont, USHORT nPara, xub_StrLen nIndex, BYTE nRightToLeft,
+    bool bEndOfLine, bool bEndOfParagraph,
+    const Color& rOverlineColor, const Color& rTextLineColor)
+{
+    pOwner->DrawingTab(rStartPos, nWidth, rChar, rFont, nPara, nIndex, nRightToLeft,
+            bEndOfLine, bEndOfParagraph, rOverlineColor, rTextLineColor );
+}
+
 void OutlinerEditEng::FieldClicked( const SvxFieldItem& rField, USHORT nPara, USHORT nPos )
 {
     EditEngine::FieldClicked( rField, nPara, nPos );	// Falls URL
diff --git a/svx/source/outliner/outleeng.hxx b/svx/source/outliner/outleeng.hxx
index 5c97b48..6ee3483 100644
--- a/svx/source/outliner/outleeng.hxx
+++ b/svx/source/outliner/outleeng.hxx
@@ -68,6 +68,14 @@ public:
         const Color& rOverlineColor,
         const Color& rTextLineColor);
 
+    virtual void DrawingTab(
+        const Point& rStartPos, long nWidth, const String& rChar,
+        const SvxFont& rFont, USHORT nPara, xub_StrLen nIndex, BYTE nRightToLeft,
+        bool bEndOfLine,
+        bool bEndOfParagraph,
+        const Color& rOverlineColor,
+        const Color& rTextLineColor);
+
     virtual	void 		StyleSheetChanged( SfxStyleSheet* pStyle );
     virtual void 		ParaAttribsChanged( USHORT nPara );
     virtual BOOL 		SpellNextDocument();
diff --git a/svx/source/outliner/outliner.cxx b/svx/source/outliner/outliner.cxx
index 6ffe21c..5674531 100644
--- a/svx/source/outliner/outliner.cxx
+++ b/svx/source/outliner/outliner.cxx
@@ -1793,7 +1793,20 @@ void Outliner::DrawingText( const Point& rStartPos, const XubString& rText, USHO
     {
         // #101498#
         DrawPortionInfo aInfo( rStartPos, rText, nTextStart, nTextLen, rFont, nPara, nIndex, pDXArray, pWrongSpellVector,
-            pFieldData, pLocale, rOverlineColor, rTextLineColor, nRightToLeft, bEndOfLine, bEndOfParagraph, bEndOfBullet);
+            pFieldData, pLocale, rOverlineColor, rTextLineColor, nRightToLeft, false, 0, bEndOfLine, bEndOfParagraph, bEndOfBullet);
+
+        aDrawPortionHdl.Call( &aInfo );
+    }
+}
+
+void Outliner::DrawingTab( const Point& rStartPos, long nWidth, const String& rChar, const SvxFont& rFont,
+    USHORT nPara, xub_StrLen nIndex, BYTE nRightToLeft, bool bEndOfLine, bool bEndOfParagraph,
+    const Color& rOverlineColor, const Color& rTextLineColor)
+{
+    if(aDrawPortionHdl.IsSet())
+    {
+        DrawPortionInfo aInfo( rStartPos, rChar, 0, rChar.Len(), rFont, nPara, nIndex, NULL, NULL,
+            NULL, NULL, rOverlineColor, rTextLineColor, nRightToLeft, true, nWidth, bEndOfLine, bEndOfParagraph, false);
 
         aDrawPortionHdl.Call( &aInfo );
     }
diff --git a/svx/source/svdraw/svdotextdecomposition.cxx b/svx/source/svdraw/svdotextdecomposition.cxx
index db5e4a4..210d404 100644
--- a/svx/source/svdraw/svdotextdecomposition.cxx
+++ b/svx/source/svdraw/svdotextdecomposition.cxx
@@ -400,7 +400,9 @@ namespace
                     aDXArray,
                     aFontAttributes,
                     rInfo.mpLocale ? *rInfo.mpLocale : ::com::sun::star::lang::Locale(),
-                    aBFontColor);
+                    aBFontColor,
+                    rInfo.mbFilled,
+                    rInfo.mnWidthToFill);
             }
 
             if(rInfo.mbEndOfBullet)
-- 
1.7.0.1

