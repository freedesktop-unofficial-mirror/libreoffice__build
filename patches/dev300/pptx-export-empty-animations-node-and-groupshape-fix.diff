From 84172a856a858af799e0173ef610993e4cd2fb35 Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 17:05:47 +0200
Subject: [PATCH 688/878] pptx-export-empty-animations-node-and-groupshape-fix.diff

---
 sd/source/filter/pptx/pptx-epptooxml.cxx |   30 +++++++++++++++++-------------
 1 files changed, 17 insertions(+), 13 deletions(-)

diff --git a/sd/source/filter/pptx/pptx-epptooxml.cxx b/sd/source/filter/pptx/pptx-epptooxml.cxx
index d5e1f32..7987f7e 100644
--- a/sd/source/filter/pptx/pptx-epptooxml.cxx
+++ b/sd/source/filter/pptx/pptx-epptooxml.cxx
@@ -172,17 +172,13 @@ ShapeExport& PowerPointShapeExport::WriteUnknownShape( Reference< XShape > xShap
 
     DBG(printf( "shape(unknown): %s\n", USS(sShapeType) ));
 
-    if( sShapeType.equalsAscii( "com.sun.star.drawing.Group" ) )
+    if( sShapeType.equalsAscii( "com.sun.star.drawing.GroupShape" ) )
     {
         Reference< XIndexAccess > rXIndexAccess( xShape, UNO_QUERY );
 
         mrExport.EnterGroup( rXIndexAccess );
         DBG(printf( "enter group\n" ));
     }
-    else if( sShapeType.equalsAscii( "com.sun.star.drawing.Group" ) )
-    {
-        WritePageShape( xShape, mePageType, mrExport.GetPresObj() );
-    }
     else if( sShapeType.equalsAscii( "com.sun.star.drawing.PageShape" ) )
     {
         WritePageShape( xShape, mePageType, mrExport.GetPresObj() );
@@ -1059,18 +1055,26 @@ void PowerPointExport::WriteAnimationNode( FSHelperPtr pFS, const Reference< XAn
 
 void PowerPointExport::WriteAnimations( FSHelperPtr pFS )
 {
-    pFS->startElementNS( XML_p, XML_timing, FSEND );
-    pFS->startElementNS( XML_p, XML_tnLst, FSEND );
-
     Reference< XAnimationNodeSupplier > xNodeSupplier( mXDrawPage, UNO_QUERY );
     if( xNodeSupplier.is() ) {
     const Reference< XAnimationNode > xNode( xNodeSupplier->getAnimationNode() );
-    if( xNode.is() )
-        WriteAnimationNode( pFS, xNode, FALSE );
-    }
+    if( xNode.is() ) {
+        Reference< XEnumerationAccess > xEnumerationAccess( xNode, UNO_QUERY );
+        if( xEnumerationAccess.is() ) {
+        Reference< XEnumeration > xEnumeration( xEnumerationAccess->createEnumeration(), UNO_QUERY );
+        if( xEnumeration.is() && xEnumeration->hasMoreElements() ) {
+
+            pFS->startElementNS( XML_p, XML_timing, FSEND );
+            pFS->startElementNS( XML_p, XML_tnLst, FSEND );
 
-    pFS->endElementNS( XML_p, XML_tnLst );
-    pFS->endElementNS( XML_p, XML_timing );
+            WriteAnimationNode( pFS, xNode, FALSE );
+
+            pFS->endElementNS( XML_p, XML_tnLst );
+            pFS->endElementNS( XML_p, XML_timing );
+        }
+        }
+    }
+    }
 }
 
 void PowerPointExport::ImplWriteSlide( sal_uInt32 nPageNum, sal_uInt32 nMasterNum, sal_uInt16 /* nMode */,
-- 
1.7.0.1

