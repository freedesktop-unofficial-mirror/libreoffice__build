diff --git formula/inc/formula/FormulaCompiler.hxx formula/inc/formula/FormulaCompiler.hxx
index 6df4898..8327237 100644
--- formula/inc/formula/FormulaCompiler.hxx
+++ formula/inc/formula/FormulaCompiler.hxx
@@ -315,6 +315,7 @@ private:
     void InitSymbolsEnglish() const;   /// only SymbolsEnglish, maybe later
     void InitSymbolsPODF() const;      /// only SymbolsPODF, on demand
     void InitSymbolsODFF() const;      /// only SymbolsODFF, on demand
+    void InitSymbolsEnglishXL() const; /// only SymbolsEnglishXL, on demand
 
     void loadSymbols(USHORT _nSymbols,FormulaGrammar::Grammar _eGrammar,NonConstOpCodeMapPtr& _xMap) const;
 
@@ -368,6 +369,7 @@ private:
     mutable NonConstOpCodeMapPtr  mxSymbolsPODF;                          // ODF 1.1 symbols
     mutable NonConstOpCodeMapPtr  mxSymbolsNative;                        // native symbols
     mutable NonConstOpCodeMapPtr  mxSymbolsEnglish;                       // English symbols
+    mutable NonConstOpCodeMapPtr  mxSymbolsEnglishXL;                     // English Excel symbols (for VBA formula parsing)
 };
 // =============================================================================
 } // formula
diff --git formula/inc/formula/grammar.hxx formula/inc/formula/grammar.hxx
index 74520da..3da926f 100644
--- formula/inc/formula/grammar.hxx
+++ formula/inc/formula/grammar.hxx
@@ -130,6 +130,16 @@ public:
         GRAM_NATIVE_XL_R1C1 = ::com::sun::star::sheet::FormulaLanguage::NATIVE  |
                                 ((CONV_XL_R1C1       +
                                   kConventionOffset) << kConventionShift),
+        /// English with Excel A1 reference style.
+        GRAM_ENGLISH_XL_A1   = ::com::sun::star::sheet::FormulaLanguage::XL_ENGLISH  |
+                                ((ScAddress::CONV_XL_A1         +
+                                  kConventionOffset) << kConventionShift)            |
+                                kEnglishBit,
+        /// English with Excel R1C1 reference style.
+        GRAM_ENGLISH_XL_R1C1 = ::com::sun::star::sheet::FormulaLanguage::XL_ENGLISH  |
+                                ((ScAddress::CONV_XL_R1C1       +
+                                  kConventionOffset) << kConventionShift)            |
+                                kEnglishBit,
         /// Central definition of the default grammar to be used.
         GRAM_DEFAULT        = GRAM_NATIVE_UI,
 
@@ -180,6 +190,8 @@ public:
             case GRAM_NATIVE_ODF     :
             case GRAM_NATIVE_XL_A1   :
             case GRAM_NATIVE_XL_R1C1 :
+            case GRAM_ENGLISH_XL_A1  :
+            case GRAM_ENGLISH_XL_R1C1:
                 return true;
             default:
                 return extractFormulaLanguage( eGrammar) == GRAM_EXTERNAL;
diff --git formula/source/core/api/FormulaCompiler.cxx formula/source/core/api/FormulaCompiler.cxx
index 5834e9e..af541e5 100644
--- formula/source/core/api/FormulaCompiler.cxx
+++ formula/source/core/api/FormulaCompiler.cxx
@@ -571,6 +571,11 @@ FormulaCompiler::OpCodeMapPtr FormulaCompiler::GetOpCodeMap( const sal_Int32 nLa
                 InitSymbolsNative();
             xMap = mxSymbolsNative;
             break;
+        case FormulaLanguage::XL_ENGLISH:
+            if (!mxSymbolsEnglishXL)
+                InitSymbolsEnglishXL();
+            xMap = mxSymbolsEnglishXL;
+            break;
         default:
             ;   // nothing, NULL map returned
     }
@@ -684,6 +689,22 @@ void FormulaCompiler::InitSymbolsODFF() const
 	mxSymbolsODFF = s_sSymbol;
 }
 // -----------------------------------------------------------------------------
+void FormulaCompiler::InitSymbolsEnglishXL() const
+{
+	static NonConstOpCodeMapPtr s_sSymbol;
+	if ( !s_sSymbol.get() )
+    	loadSymbols(RID_STRLIST_FUNCTION_NAMES_ENGLISH,FormulaGrammar::GRAM_ENGLISH,s_sSymbol);
+	mxSymbolsEnglishXL = s_sSymbol;
+
+    // TODO: For now, just replace the separators to the Excel English
+    // variants. Later, if we want to properly map Excel functions with Calc
+    // functions, we'll need to do a little more work here.
+    mxSymbolsEnglishXL->putOpCode(sal_Unicode(','), ocSep);
+    mxSymbolsEnglishXL->putOpCode(sal_Unicode(','), ocArrayColSep);
+    mxSymbolsEnglishXL->putOpCode(sal_Unicode(';'), ocArrayRowSep);
+}
+
+// -----------------------------------------------------------------------------
 void FormulaCompiler::loadSymbols(USHORT _nSymbols,FormulaGrammar::Grammar _eGrammar,NonConstOpCodeMapPtr& _xMap) const
 {
     if ( !_xMap.get() )
