diff --git sfx2/inc/sfx2/passwd.hxx sfx2/inc/sfx2/passwd.hxx
index a9b176b..15aeb1f 100644
--- sfx2/inc/sfx2/passwd.hxx
+++ sfx2/inc/sfx2/passwd.hxx
@@ -86,6 +86,7 @@ public:
 	String			GetConfirm() const { return maConfirmED.GetText(); }
 
 	void 			SetMinLen( USHORT Len );
+    void            SetMaxLen( USHORT Len );
 	void			SetEditHelpId( ULONG nId ) { maPasswordED.SetHelpId( nId ); }
 	void			ShowExtras( USHORT nExtras ) { mnExtras = nExtras; }
 
diff --git sfx2/source/dialog/filedlghelper.cxx sfx2/source/dialog/filedlghelper.cxx
index 42976cd..37f2426 100644
--- sfx2/source/dialog/filedlghelper.cxx
+++ sfx2/source/dialog/filedlghelper.cxx
@@ -559,9 +559,20 @@ struct CheckPasswordCapability
 {
 	sal_Bool operator() ( const SfxFilter* _pFilter )
 	{
-        return  _pFilter && _pFilter->IsOwnFormat()
-			&&	_pFilter->UsesStorage()
-			&&	( SOFFICE_FILEFORMAT_60 <= _pFilter->GetVersion() );
+        if (!_pFilter)
+            return false;
+
+#if 0 // to be enabled in the future
+        if (_pFilter->GetFilterName().EqualsAscii("MS Excel 97"))
+            // For now, we eanble password protection for Excel 97 as a 
+            // special case.  If we start having more filters supporting
+            // export encryption with password, we should probably switch to
+            // using a filter flag instead.
+            return true;
+#endif
+
+        return _pFilter->IsOwnFormat() && _pFilter->UsesStorage()
+            && ( SOFFICE_FILEFORMAT_60 <= _pFilter->GetVersion() );
 	}
 };
 
@@ -1617,11 +1628,12 @@ ErrCode FileDialogHelper_Impl::execute( SvStringsDtor*& rpURLList,
 				sal_Bool bPassWord = sal_False;
 				if ( ( aValue >>= bPassWord ) && bPassWord )
 				{
-					// ask for the password
+					// ask for a password
                     uno::Reference < ::com::sun::star::task::XInteractionHandler > xInteractionHandler( ::comphelper::getProcessServiceFactory()->createInstance(::rtl::OUString::createFromAscii("com.sun.star.comp.uui.UUIInteractionHandler")), UNO_QUERY );
 
                     if( xInteractionHandler.is() )
                     {
+                        // TODO: find out a way to set the 1-15 char limits on MS Excel 97 filter.
                         RequestDocumentPassword* pPasswordRequest = new RequestDocumentPassword(
                             ::com::sun::star::task::PasswordRequestMode_PASSWORD_CREATE, *(rpURLList->GetObject(0)) );
  
diff --git sfx2/source/dialog/passwd.cxx sfx2/source/dialog/passwd.cxx
index f49467f..062fb9c 100644
--- sfx2/source/dialog/passwd.cxx
+++ sfx2/source/dialog/passwd.cxx
@@ -136,6 +136,15 @@ void SfxPasswordDialog::SetMinLen( USHORT nLen )
 
 // -----------------------------------------------------------------------
 
+void SfxPasswordDialog::SetMaxLen( USHORT nLen )
+{
+    maPasswordED.SetMaxTextLen( nLen );
+    maConfirmED.SetMaxTextLen( nLen );
+	EditModifyHdl( NULL );
+}
+
+// -----------------------------------------------------------------------
+
 short SfxPasswordDialog::Execute()
 {
 	if ( mnExtras < SHOWEXTRAS_ALL )
