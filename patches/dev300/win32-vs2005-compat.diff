diff --git a/cppu/inc/com/sun/star/uno/Reference.h b/cppu/inc/com/sun/star/uno/Reference.h
--- cppu/inc/com/sun/star/uno/Reference.h
+++ cppu/inc/com/sun/star/uno/Reference.h
@@ -242,13 +242,13 @@
 public:
 	// these are here to force memory de/allocation to sal lib.
     /** @internal */
-	inline static void * SAL_CALL operator new ( size_t nSize ) SAL_THROW( () )
+	inline static void * SAL_CALL operator new ( ::size_t nSize ) SAL_THROW( () )
 		{ return ::rtl_allocateMemory( nSize ); }
     /** @internal */
 	inline static void SAL_CALL operator delete ( void * pMem ) SAL_THROW( () )
 		{ ::rtl_freeMemory( pMem ); }
     /** @internal */
-	inline static void * SAL_CALL operator new ( size_t, void * pMem ) SAL_THROW( () )
+	inline static void * SAL_CALL operator new ( ::size_t, void * pMem ) SAL_THROW( () )
 		{ return pMem; }
     /** @internal */
 	inline static void SAL_CALL operator delete ( void *, void * ) SAL_THROW( () )
diff --git a/cppu/inc/com/sun/star/uno/Sequence.h b/cppu/inc/com/sun/star/uno/Sequence.h
--- cppu/inc/com/sun/star/uno/Sequence.h
+++ cppu/inc/com/sun/star/uno/Sequence.h
@@ -72,7 +72,7 @@
 public:
     // these are here to force memory de/allocation to sal lib.
     /** @internal */
-    inline static void * SAL_CALL operator new ( size_t nSize )
+    inline static void * SAL_CALL operator new ( ::size_t nSize )
         SAL_THROW( () )
         { return ::rtl_allocateMemory( nSize ); }
     /** @internal */
@@ -80,7 +80,7 @@
         SAL_THROW( () )
         { ::rtl_freeMemory( pMem ); }
     /** @internal */
-    inline static void * SAL_CALL operator new ( size_t, void * pMem )
+    inline static void * SAL_CALL operator new ( ::size_t, void * pMem )
         SAL_THROW( () )
         { return pMem; }
     /** @internal */
diff --git a/setup_native/source/win32/customactions/rebase/rebase.cxx b/setup_native/source/win32/customactions/rebase/rebase.cxx
--- setup_native/source/win32/customactions/rebase/rebase.cxx
+++ setup_native/source/win32/customactions/rebase/rebase.cxx
@@ -68,8 +68,8 @@
 	ULONG_PTR lpNewImageBase = reinterpret_cast<ULONG_PTR>(address);
 	
 	BOOL bResult = ReBaseImage(
-		filePath.c_str(),
-		"",
+		(PSTR)filePath.c_str(),
+		(PSTR)"",
 		TRUE,
 		FALSE,
 		FALSE,
diff --git a/sw/source/filter/ww8/wrtw8nds.cxx b/sw/source/filter/ww8/wrtw8nds.cxx
--- sw/source/filter/ww8/wrtw8nds.cxx
+++ sw/source/filter/ww8/wrtw8nds.cxx
@@ -701,14 +701,14 @@
         /*Get defaults if no formatting on ruby text*/
 
         const SfxItemPool *pPool = rNode.GetSwAttrSet().GetPool();
-        const SfxItemPool &rPool = pPool ? *pPool : m_rWW8Export.pDoc->GetAttrPool();
+        pPool = pPool ? pPool : &m_rWW8Export.pDoc->GetAttrPool();
 
-        const SvxFontItem &rFont  = DefaultItemGet< SvxFontItem >( rPool,
+        const SvxFontItem &rFont  = DefaultItemGet< SvxFontItem >( *pPool,
                 GetWhichOfScript( RES_CHRATR_FONT,nRubyScript ) );
         sFamilyName = rFont.GetFamilyName();
 
         const SvxFontHeightItem &rHeight = DefaultItemGet< SvxFontHeightItem >
-            ( rPool, GetWhichOfScript( RES_CHRATR_FONTSIZE, nRubyScript ) );
+            ( *pPool, GetWhichOfScript( RES_CHRATR_FONTSIZE, nRubyScript ) );
         nHeight = rHeight.GetHeight();
     }
     nHeight = (nHeight + 5)/10;
diff --git a/vos/inc/vos/object.hxx b/vos/inc/vos/object.hxx
--- vos/inc/vos/object.hxx
+++ vos/inc/vos/object.hxx
@@ -73,8 +73,8 @@
 	/** Define private new and delete operator because of compiler bug, 
 		when allocating and deleteing a exported class
 	*/
-	void* SAL_CALL operator new(size_t size);
-	void* SAL_CALL operator new(size_t size, void* p);
+	void* SAL_CALL operator new(::size_t size);
+	void* SAL_CALL operator new(::size_t size, void* p);
 
 	void  SAL_CALL operator delete(void* p);
 
