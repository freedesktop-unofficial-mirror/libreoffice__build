Index: attributeoutputbase.hxx
===================================================================
--- sw/source/filter/docx/attributeoutputbase.hxx	(revision 271125)
+++ sw/source/filter/docx/attributeoutputbase.hxx	(working copy)
@@ -453,8 +453,11 @@
     virtual void TextHardBlank( const SwFmtHardBlank& ) = 0;
 
     /// Sfx item RES_PARATR_LINESPACING
-    virtual void ParaLineSpacing( const SvxLineSpacingItem& ) = 0;
+    void ParaLineSpacing( const SvxLineSpacingItem& );
 
+    /// Count the values in ParaLineSpacing, and pass theme here.
+    virtual void ParaLineSpacing_Impl( short nSpace, short nMulti ) = 0;
+
     /// Sfx item RES_PARATR_ADJUST
     virtual void ParaAdjust( const SvxAdjustItem& ) = 0;
 
Index: ww8atr.cxx
===================================================================
--- sw/source/filter/docx/docx-ww8atr.cxx	(revision 271125)
+++ sw/source/filter/docx/docx-ww8atr.cxx	(working copy)
@@ -4434,7 +4434,7 @@
 
 /* File PARATR.HXX  */
 
-void WW8AttributeOutput::ParaLineSpacing( const SvxLineSpacingItem& rSpacing )
+void WW8AttributeOutput::ParaLineSpacing_Impl( short nSpace, short nMulti )
 {
     // sprmPDyaLine
     if ( m_rWW8Export.bWrtWW8 )
@@ -4442,6 +4442,12 @@
     else
         m_rWW8Export.pO->Insert( 20, m_rWW8Export.pO->Count() );
 
+    m_rWW8Export.InsUInt16( nSpace );
+    m_rWW8Export.InsUInt16( nMulti );
+}
+
+void AttributeOutputBase::ParaLineSpacing( const SvxLineSpacingItem& rSpacing )
+{
     short nSpace = 240, nMulti = 0;
 
     switch ( rSpacing.GetLineSpaceRule() )
@@ -4462,15 +4468,14 @@
                     sal_uInt16 nScript =
                         i18n::ScriptType::LATIN;
                     const SwAttrSet *pSet = 0;
-                    if ( m_rWW8Export.pOutFmtNode && m_rWW8Export.pOutFmtNode->ISA( SwFmt ) )
+                    if ( GetExport().pOutFmtNode && GetExport().pOutFmtNode->ISA( SwFmt ) )
                     {
-                        const SwFmt *pFmt = (const SwFmt*)( m_rWW8Export.pOutFmtNode );
+                        const SwFmt *pFmt = (const SwFmt*)( GetExport().pOutFmtNode );
                         pSet = &pFmt->GetAttrSet();
                     }
-                    else if ( m_rWW8Export.pOutFmtNode && m_rWW8Export.pOutFmtNode->ISA( SwTxtNode ) )
+                    else if ( GetExport().pOutFmtNode && GetExport().pOutFmtNode->ISA( SwTxtNode ) )
                     {
-                        const SwTxtNode* pNd =
-                            (const SwTxtNode*)m_rWW8Export.pOutFmtNode;
+                        const SwTxtNode* pNd = (const SwTxtNode*)GetExport().pOutFmtNode;
                         pSet = &pNd->GetSwAttrSet();
                         if ( pBreakIt->xBreak.is() )
                         {
@@ -4481,7 +4486,7 @@
                     ASSERT( pSet, "No attrset for lineheight :-(" );
                     if ( pSet )
                     {
-                        nSpace = nSpace + (short)( AttrSetToLineHeight( *m_rWW8Export.pDoc,
+                        nSpace = nSpace + (short)( AttrSetToLineHeight( *GetExport().pDoc,
                             *pSet, *Application::GetDefaultDevice(), nScript ) );
                     }
                 }
@@ -4501,8 +4506,7 @@
         break;
     }
 
-    m_rWW8Export.InsUInt16( nSpace );
-    m_rWW8Export.InsUInt16( nMulti );
+    ParaLineSpacing_Impl( nSpace, nMulti );
 }
 
 void WW8AttributeOutput::ParaAdjust( const SvxAdjustItem& rAdjust )
Index: ww8attributeoutput.hxx
===================================================================
--- sw/source/filter/docx/ww8attributeoutput.hxx	(revision 271125)
+++ sw/source/filter/docx/ww8attributeoutput.hxx	(working copy)
@@ -327,7 +327,7 @@
     virtual void TextHardBlank( const SwFmtHardBlank& );
 
     /// Sfx item RES_PARATR_LINESPACING
-    virtual void ParaLineSpacing( const SvxLineSpacingItem& );
+    virtual void ParaLineSpacing_Impl( short nSpace, short nMulti );
 
     /// Sfx item RES_PARATR_ADJUST
     virtual void ParaAdjust( const SvxAdjustItem& rHt );
Index: docxattributeoutput.cxx
===================================================================
--- sw/source/filter/docx/docx-docxattributeoutput.cxx	(revision 271348)
+++ sw/source/filter/docx/docx-docxattributeoutput.cxx	(working copy)
@@ -2790,46 +2790,23 @@
 #endif
 }
 
-void DocxAttributeOutput::ParaLineSpacing( const SvxLineSpacingItem& rSpacing )
+void DocxAttributeOutput::ParaLineSpacing_Impl( short nSpace, short /*nMulti*/ )
 {
-    if (!m_pSpacingAttrList)
+    if ( !m_pSpacingAttrList )
         m_pSpacingAttrList = m_pSerializer->createAttrList();
 
-    bool bLineSpaceRuleAuto = true;
-
-    switch ( rSpacing.GetLineSpaceRule() )
+    if ( nSpace < 0 )
     {
-    case SVX_LINE_SPACE_FIX:
-        m_pSpacingAttrList->add(FSNS( XML_w, XML_lineRule ), OString( (sal_Char *)"exact") );
-        bLineSpaceRuleAuto = false;
-        break;
-    case SVX_LINE_SPACE_MIN:
-        m_pSpacingAttrList->add(FSNS( XML_w, XML_lineRule ), OString( (sal_Char *)"atLeast") );
-        bLineSpaceRuleAuto = false;
-        break;
-    case SVX_LINE_SPACE_AUTO:
-    default:
-        m_pSpacingAttrList->add(FSNS( XML_w, XML_lineRule ), OString( (sal_Char *)"auto") );
-        break;
+        m_pSpacingAttrList->add( FSNS( XML_w, XML_lineRule ), "exact" );
+        m_pSpacingAttrList->add( FSNS( XML_w, XML_line ), OString::valueOf( sal_Int32( -nSpace ) ) );
     }
-
-    sal_Int32 nSpace = 240;
-
-    switch ( rSpacing.GetInterLineSpaceRule() )
+    else if ( nSpace > 0 )
     {
-    case SVX_INTER_LINE_SPACE_PROP:
-        nSpace = (sal_Int32)(( 240L * rSpacing.GetPropLineSpace() ) / 100L );
-        break;
-    case SVX_INTER_LINE_SPACE_FIX:
-        nSpace = rSpacing.GetInterLineSpace() /* + rSpacing.GetLineHeight() */;
-        break;
-    case SVX_INTER_LINE_SPACE_OFF:
-    default:
-        nSpace = rSpacing.GetLineHeight();
-        break;
+        m_pSpacingAttrList->add( FSNS( XML_w, XML_lineRule ), "atLeast" );
+        m_pSpacingAttrList->add( FSNS( XML_w, XML_line ), OString::valueOf( sal_Int32( nSpace ) ) );
     }
-
-    m_pSpacingAttrList->add( FSNS( XML_w, XML_line ), OString::valueOf( nSpace ) );
+    else
+        m_pSpacingAttrList->add( FSNS( XML_w, XML_lineRule ), "auto" );
 }
 
 void DocxAttributeOutput::ParaAdjust( const SvxAdjustItem& rAdjust )
Index: docxattributeoutput.hxx
===================================================================
--- sw/source/filter/docx/docxattributeoutput.hxx	(revision 271125)
+++ sw/source/filter/docx/docxattributeoutput.hxx	(working copy)
@@ -440,7 +440,7 @@
     virtual void TextHardBlank( const SwFmtHardBlank& );
 
     /// Sfx item RES_PARATR_LINESPACING
-    virtual void ParaLineSpacing( const SvxLineSpacingItem& rSpacing );
+    virtual void ParaLineSpacing_Impl( short nSpace, short nMulti );
 
     /// Sfx item RES_PARATR_ADJUST
     virtual void ParaAdjust( const SvxAdjustItem& rAdjust );
