diff --git configure.in configure.in
index c57821b..decc90a 100644
--- configure.in
+++ configure.in
@@ -269,6 +269,10 @@ AC_ARG_ENABLE(kde,
 AC_ARG_ENABLE(kdeab,
 [  --disable-kdeab         Disable the KDE address book support
 ],,if test "$enable_kde" = "yes"; then enable_kdeab=yes; fi)
+AC_ARG_ENABLE(kde,
+[  --enable-kde4            Determines whether to use Qt4/KDE4 vclplug on platforms
+                          where Qt4 and KDE4 are available. Should not be used with --enable-kde.
+],,)
 AC_ARG_ENABLE(binfilter,
 [  --disable-binfilter     Disable legacy binary file formats filters
 ],,if ! test -d ./binfilter; then enable_binfilter=no; fi)
@@ -912,6 +916,7 @@ case "$build_os" in
 		test_cairo=yes
 		build_gstreamer=yes
 		test_kde=yes
+		test_kde4=yes
 		test_cups=yes
         test_randr=yes
 		test_freetype=yes
@@ -941,6 +946,7 @@ case "$build_os" in
 		test_cairo=yes
 		build_gstreamer=yes
 		test_kde=yes
+		test_kde4=yes
 		test_cups=yes
         test_randr=yes
 		test_freetype=yes
@@ -985,6 +991,7 @@ case "$build_os" in
 		test_cairo=yes
 		build_gstreamer=yes
 		test_kde=yes
+		test_kde4=yes
 		test_cups=yes
         test_randr=yes
 		test_freetype=yes
@@ -1019,6 +1026,7 @@ case "$build_os" in
 		test_cairo=yes
 		build_gstreamer=yes
 		test_kde=yes
+		test_kde4=yes
 		test_cups=no
         test_randr=yes
 		test_freetype=yes
@@ -5447,6 +5455,13 @@ if test "x$enable_kde" = "xyes"; then
 fi
 AC_SUBST(ENABLE_KDE)
 
+ENABLE_KDE4=""
+if test "x$enable_kde4" = "xyes"; then
+    ENABLE_KDE4="TRUE"
+    R="$R kde4"
+fi
+AC_SUBST(ENABLE_KDE4)
+
 if test -z "$R"; then
 	AC_MSG_RESULT([none])
 else
@@ -6111,8 +6126,102 @@ your KDE installation by exporting KDEDIR before running "configure".])
 fi
 AC_SUBST(KDE_CFLAGS)
 AC_SUBST(KDE_LIBS)
+
+dnl ===================================================================
+dnl KDE4 Integration
+dnl ===================================================================
+
+KDE4_CFLAGS=""
+KDE4_LIBS=""
+if test "$test_kde4" = "yes" -a "$ENABLE_KDE4" = "TRUE" ; then
+	
+	qt_incdirs="$QTINC $QTDIR /usr/include/qt4 /usr/include $x_includes"
+	qt_libdirs="$QTLIB /usr/lib $x_libraries"
+	
+	kde_incdirs="/usr/include $x_includes"
+	kde_libdirs="/usr/lib $x_libraries"
+	
+	if test "$build_cpu" == "x86_64" ; then
+        qt_libdirs="$qt_libdirs /usr/lib64/qt /usr/lib64"
+		kde_libdirs="$kde_libdirs /usr/lib64/kde4"
+	fi
+
+	qt_test_include="Qt/qobject.h"
+	qt_test_library="libQtCore.so"
+	kde_test_include="ksharedptr.h"
+	kde_test_library="libkdeui.so"
+	
+	AC_MSG_CHECKING([for Qt headers])
+	qt_header_dir="no"
+	for inc_dir in $qt_incdirs ; do
+		if test -r "$inc_dir/$qt_test_include" ; then
+			qt_header_dir="$inc_dir"
+			break
+		fi
+	done
+	
+	AC_MSG_RESULT([$qt_header_dir])
+	if test "x$qt_header_dir" = "xno" ; then
+		AC_MSG_ERROR([Qt headers not found.  Please specify the root of your Qt installation by exporting QTDIR before running "configure".])
+	fi
+	
+	AC_MSG_CHECKING([for Qt libraries])
+	qt_lib_dir="no"
+	for lib_dir in $qt_libdirs ; do
+		if test -r "$lib_dir/$qt_test_library" ; then
+			qt_lib_dir="$lib_dir"
+			break
+		fi
+	done
+	
+	AC_MSG_RESULT([$qt_lib_dir])
+	
+	if test "x$qt_lib_dir" = "xno" ; then
+		AC_MSG_ERROR([Qt libraries not found.  Please specify the root of your Qt installation by exporting QTDIR before running "configure".])
+	fi
+
+	AC_PATH_PROG( MOC, moc, no, [$QTDIR/bin:$PATH] )
+	if test "$MOC" = "no" ; then
+		AC_MSG_ERROR([Qt Meta Object Compiler not found.  Please specify the root of your Qt installation by exporting QTDIR before running "configure".])
+	fi
+	
+	dnl Check for KDE headers
+	AC_MSG_CHECKING([for KDE headers])
+	kde_incdir="no"
+	for kde_check in $kde_incdirs ; do
+		if test -r "$kde_check/$kde_test_include" ; then
+			kde_incdir="$kde_check"
+			break
+		fi
+	done
+	AC_MSG_RESULT([$kde_incdir])
+	if test "x$kde_incdir" = "xno" ; then
+		AC_MSG_ERROR([KDE headers not found.  Please specify the root of your KDE installation by exporting KDEDIR before running "configure".])
+	fi
+
+	dnl Check for KDE libraries
+	AC_MSG_CHECKING([for KDE libraries])
+	kde_libdir="no"
+	for kde_check in $kde_libdirs ; do
+		if test -r "$kde_check/$kde_test_library" ; then
+			kde_libdir="$kde_check"
+			break
+		fi
+	done
+	
+	AC_MSG_RESULT([$kde_libdir])
+	if test "x$kde_libdir" = "xno" ; then
+		AC_MSG_ERROR([KDE libraries not found.  Please specify the root of your KDE installation by exporting KDEDIR before running "configure".])
+	fi
+
+	KDE4_CFLAGS="`pkg-config --cflags QtCore` `pkg-config --cflags QtGui` -I$kde_incdir -DQT_CLEAN_NAMESPACE -DQT_THREAD_SUPPORT"
+	KDE4_LIBS="-L$kde_libdir -L$qt_lib_dir -lkdeui -lkdecore -lQtCore -lQtGui"
+fi
+AC_SUBST(KDE4_CFLAGS)
+AC_SUBST(KDE4_LIBS)
 AC_SUBST(MOC)
 
+
 dnl ===================================================================
 dnl Test for the enabling the lockdown pieces
 dnl ===================================================================
