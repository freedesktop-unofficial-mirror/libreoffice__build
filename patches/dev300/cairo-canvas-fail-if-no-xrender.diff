--- canvas/source/cairo/cairo_cairo.cxx	17 Jul 2007 14:19:36 -0000	1.5
+++ canvas/source/cairo/cairo_cairo.cxx	28 Nov 2007 09:46:36 -0000
@@ -47,6 +47,13 @@
 #include <cairo-xlib.h>
 #include <cairo-xlib-xrender.h>
 
+	bool HasXRender( const void* pSysData )
+	{
+	        Display *pDisplay = (Display*) cairoHelperGetDisplay( pSysData );
+	        int nDummy;
+	        return XQueryExtension( pDisplay, "RENDER", &nDummy, &nDummy, &nDummy );
+	}
+
   /**
    * Surface::Surface:   Create Canvas surface with existing data
    * @param pSysData Platform native system environment data (struct SystemEnvData in vcl/inc/sysdata.hxx)
--- canvas/source/cairo/cairo_cairo.hxx	17 Jul 2007 14:19:49 -0000	1.4
+++ canvas/source/cairo/cairo_cairo.hxx	28 Nov 2007 09:46:36 -0000
@@ -3,6 +3,8 @@
 
 namespace cairo {
 
+        bool HasXRender( const void* pSysData );
+
 #include <cairo.h>
 
 	typedef cairo_t Cairo;
--- canvas/source/cairo/cairo_devicehelper.cxx	17 Jul 2007 14:21:10 -0000	1.7
+++ canvas/source/cairo/cairo_devicehelper.cxx	28 Nov 2007 09:46:36 -0000
@@ -64,6 +64,22 @@
 
 namespace cairocanvas
 {
+
+    const SystemEnvData* GetSysData(Window *pOutputWindow)
+    {
+        const SystemEnvData* pSysData = NULL;
+        // check whether we're a SysChild: have to fetch system data
+        // directly from SystemChildWindow, because the GetSystemData
+        // method is unfortunately not virtual
+        const SystemChildWindow* pSysChild = dynamic_cast< const SystemChildWindow* >( pOutputWindow );
+        if( pSysChild )
+            pSysData = pSysChild->GetSystemData();
+        else
+            pSysData = pOutputWindow->GetSystemData();
+        return pSysData;
+    }
+
+
     DeviceHelper::DeviceHelper() :
         mpSpriteCanvas( NULL ),
         maSize(),
@@ -90,14 +106,7 @@
         mpSpriteCanvas = &rSpriteCanvas;
         mbFullScreen = bFullscreen;
 
-        // check whether we're a SysChild: have to fetch system data
-        // directly from SystemChildWindow, because the GetSystemData
-        // method is unfortunately not virtual
-        const SystemChildWindow* pSysChild = dynamic_cast< const SystemChildWindow* >( mpOutputWindow );
-        if( pSysChild )
-            mpSysData = pSysChild->GetSystemData();
-        else
-            mpSysData = mpOutputWindow->GetSystemData();
+        mpSysData = GetSysData(mpOutputWindow);
 
         setSize( rSize );
     }
--- canvas/source/cairo/cairo_devicehelper.hxx	28 Feb 2006 10:35:37 -0000	1.2
+++ canvas/source/cairo/cairo_devicehelper.hxx	28 Nov 2007 09:46:36 -0000
@@ -54,6 +54,8 @@
     class SpriteCanvas;
     class SpriteCanvasHelper;
 
+    const SystemEnvData* GetSysData(Window *pOutputWindow);
+
     class DeviceHelper : private ::boost::noncopyable
     {
     public:
--- canvas/source/cairo/cairo_spritecanvas.cxx	9 Nov 2007 11:59:46 -0000	1.5.12.1
+++ canvas/source/cairo/cairo_spritecanvas.cxx	28 Nov 2007 09:46:36 -0000
@@ -56,7 +56,7 @@
 #include <basegfx/numeric/ftools.hxx>
 
 #include "cairo_spritecanvas.hxx"
-
+#include "cairo_devicehelper.hxx"
 
 using namespace ::cairo;
 using namespace ::com::sun::star;
@@ -100,6 +100,10 @@
         CHECK_AND_THROW( pOutputWindow != NULL, 
                          "SpriteCanvas::SpriteCanvas: invalid Window pointer" );
 
+        bool bHasXRender = HasXRender( cairocanvas::GetSysData(pOutputWindow) );
+        CHECK_AND_THROW( bHasXRender == true, 
+                         "SpriteCanvas::SpriteCanvas: No RENDER extension" );
+
         Size aPixelSize( pOutputWindow->GetOutputSizePixel() );
         const ::basegfx::B2ISize aSize( aPixelSize.Width(),
                                         aPixelSize.Height() );
