diff --git sc/source/core/tool/compiler.cxx sc/source/core/tool/compiler.cxx
index f675389..6aff7ad 100644
--- sc/source/core/tool/compiler.cxx
+++ sc/source/core/tool/compiler.cxx
@@ -1298,16 +1298,22 @@ static bool lcl_parseExternalName( const String& rSymbol, String& rFile, String&
     return true;
 }
 
-static String lcl_makeExternalNameStr( const String& rFile, const String& rName, const sal_Unicode cSep )
+static String lcl_makeExternalNameStr( const String& rFile, const String& rName,
+        const sal_Unicode cSep, bool bODF )
 {
-    String aStr, aFile = rFile;
+    String aFile( rFile);
     aFile.SearchAndReplaceAllAscii("'", String::CreateFromAscii("''"));
-    aStr.Append(sal_Unicode('\''));
-    aStr.Append(aFile);
-    aStr.Append(sal_Unicode('\''));
-    aStr.Append(cSep);
-    aStr.Append(rName);
-    return aStr;
+    rtl::OUStringBuffer aBuf( aFile.Len() + rName.Len() + 5);
+    if (bODF)
+        aBuf.append( sal_Unicode( '['));
+    aBuf.append( sal_Unicode( '\''));
+    aBuf.append( aFile);
+    aBuf.append( sal_Unicode( '\''));
+    aBuf.append( cSep);
+    aBuf.append( rName);
+    if (bODF)
+        aBuf.append( sal_Unicode(']'));
+    return String( aBuf.makeStringAndClear());
 }
 
 static bool lcl_getLastTabName( String& rTabName2, const String& rTabName1, 
@@ -1561,7 +1567,7 @@ struct ConventionOOO_A1 : public Convention_A1
 
     virtual String makeExternalNameStr( const String& rFile, const String& rName ) const
     {
-        return lcl_makeExternalNameStr(rFile, rName, sal_Unicode('#'));
+        return lcl_makeExternalNameStr( rFile, rName, sal_Unicode('#'), false);
     }
 
     bool makeExternalSingleRefStr( ::rtl::OUStringBuffer& rBuffer, sal_uInt16 nFileId, 
@@ -1598,40 +1604,67 @@ struct ConventionOOO_A1 : public Convention_A1
         return true;
     }
 
-    virtual void makeExternalRefStr( ::rtl::OUStringBuffer& rBuffer, const ScCompiler& rCompiler,
+    void makeExternalRefStrImpl( ::rtl::OUStringBuffer& rBuffer, const ScCompiler& rCompiler,
                                      sal_uInt16 nFileId, const String& rTabName, const SingleRefData& rRef, 
-                                     ScExternalRefManager* pRefMgr ) const
+                                     ScExternalRefManager* pRefMgr, bool bODF ) const
     {
         SingleRefData aRef(rRef);
         aRef.CalcAbsIfRel(rCompiler.GetPos());
 
+        if (bODF)
+            rBuffer.append( sal_Unicode('['));
         makeExternalSingleRefStr(rBuffer, nFileId, rTabName, aRef, pRefMgr, true);
+        if (bODF)
+            rBuffer.append( sal_Unicode(']'));
     }
 
     virtual void makeExternalRefStr( ::rtl::OUStringBuffer& rBuffer, const ScCompiler& rCompiler,
-                                     sal_uInt16 nFileId, const String& rTabName, const ComplRefData& rRef, 
+                                     sal_uInt16 nFileId, const String& rTabName, const SingleRefData& rRef, 
                                      ScExternalRefManager* pRefMgr ) const
     {
+        makeExternalRefStrImpl( rBuffer, rCompiler, nFileId, rTabName, rRef, pRefMgr, false);
+    }
+
+    void makeExternalRefStrImpl( ::rtl::OUStringBuffer& rBuffer, const ScCompiler& rCompiler,
+                                     sal_uInt16 nFileId, const String& rTabName, const ComplRefData& rRef, 
+                                     ScExternalRefManager* pRefMgr, bool bODF ) const
+    {
         ComplRefData aRef(rRef);
         aRef.CalcAbsIfRel(rCompiler.GetPos());
 
-        if (!makeExternalSingleRefStr(rBuffer, nFileId, rTabName, aRef.Ref1, pRefMgr, true))
-            return;
+        if (bODF)
+            rBuffer.append( sal_Unicode('['));
+        // Ensure that there's always a closing bracket, no premature returns.
+        do
+        {
+            if (!makeExternalSingleRefStr(rBuffer, nFileId, rTabName, aRef.Ref1, pRefMgr, true))
+                break;
 
-        rBuffer.append(sal_Unicode(':'));
+            rBuffer.append(sal_Unicode(':'));
 
-        // Get the name of the last table.
-        const vector<String>* pTabNames = pRefMgr->getAllCachedTableNames(nFileId);
-        if (!pTabNames)
-            return;
+            // Get the name of the last table.
+            const vector<String>* pTabNames = pRefMgr->getAllCachedTableNames(nFileId);
+            if (!pTabNames)
+                break;
 
-        String aLastTabName;
-        if (!lcl_getLastTabName(aLastTabName, rTabName, *pTabNames, aRef))
-        {
-            rBuffer.append(aLastTabName);
-            return;
-        }
-        makeExternalSingleRefStr(rBuffer, nFileId, aLastTabName, aRef.Ref2, pRefMgr, (aRef.Ref1.nTab != aRef.Ref2.nTab));
+            String aLastTabName;
+            if (!lcl_getLastTabName(aLastTabName, rTabName, *pTabNames, aRef))
+            {
+                rBuffer.append(aLastTabName);
+                break;
+            }
+            makeExternalSingleRefStr( rBuffer, nFileId, aLastTabName,
+                    aRef.Ref2, pRefMgr, (aRef.Ref1.nTab != aRef.Ref2.nTab));
+        } while (0);
+        if (bODF)
+            rBuffer.append( sal_Unicode(']'));
+    }
+
+    virtual void makeExternalRefStr( ::rtl::OUStringBuffer& rBuffer, const ScCompiler& rCompiler,
+                                     sal_uInt16 nFileId, const String& rTabName, const ComplRefData& rRef, 
+                                     ScExternalRefManager* pRefMgr ) const
+    {
+        makeExternalRefStrImpl( rBuffer, rCompiler, nFileId, rTabName, rRef, pRefMgr, false);
     }
 };
 
@@ -1651,6 +1684,25 @@ struct ConventionOOO_A1_ODF : public ConventionOOO_A1
     {
         MakeRefStrImpl( rBuffer, rComp, rRef, bSingleRef, true);
     }
+
+    virtual String makeExternalNameStr( const String& rFile, const String& rName ) const
+    {
+        return lcl_makeExternalNameStr( rFile, rName, sal_Unicode('#'), true);
+    }
+
+    virtual void makeExternalRefStr( ::rtl::OUStringBuffer& rBuffer, const ScCompiler& rCompiler,
+                                     sal_uInt16 nFileId, const String& rTabName, const SingleRefData& rRef, 
+                                     ScExternalRefManager* pRefMgr ) const
+    {
+        makeExternalRefStrImpl( rBuffer, rCompiler, nFileId, rTabName, rRef, pRefMgr, true);
+    }
+
+    virtual void makeExternalRefStr( ::rtl::OUStringBuffer& rBuffer, const ScCompiler& rCompiler,
+                                     sal_uInt16 nFileId, const String& rTabName, const ComplRefData& rRef, 
+                                     ScExternalRefManager* pRefMgr ) const
+    {
+        makeExternalRefStrImpl( rBuffer, rCompiler, nFileId, rTabName, rRef, pRefMgr, true);
+    }
 };
 
 static const ConventionOOO_A1_ODF ConvOOO_A1_ODF;
@@ -1762,7 +1814,7 @@ struct ConventionXL
 
     static String makeExternalNameStr( const String& rFile, const String& rName )
     {
-        return lcl_makeExternalNameStr(rFile, rName, sal_Unicode('!'));
+        return lcl_makeExternalNameStr( rFile, rName, sal_Unicode('!'), false);
     }
 
     static void makeExternalDocStr( ::rtl::OUStringBuffer& rBuffer, const String& rFullName )
