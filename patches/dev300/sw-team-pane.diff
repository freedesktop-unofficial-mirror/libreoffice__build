diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sw/source/ui/app/swmodule.cxx ooo310-m17.fix/sw/source/ui/app/swmodule.cxx
--- ooo310-m17/sw/source/ui/app/swmodule.cxx	2009-08-19 10:28:59.000000000 +0200
+++ ooo310-m17.fix/sw/source/ui/app/swmodule.cxx	2009-08-19 09:11:48.000000000 +0200
@@ -120,6 +120,7 @@
 #include <wtabsh.hxx>
 #endif
 #include <navipi.hxx>
+#include <teampi.hxx>
 #include <chartins.hxx>
 #include <inputwin.hxx>
 #include <usrpref.hxx>
@@ -454,6 +456,7 @@ void SwDLL::RegisterControls()
     SwFldDataOnlyDlgWrapper::RegisterChildWindow( sal_False, pMod );
     SvxContourDlgChildWindow::RegisterChildWindow( sal_False, pMod );
     SwNavigationChild::RegisterChildWindowContext( pMod );
+ 	SwTeamChild::RegisterChildWindowContext( pMod );
     SwInputChild::RegisterChildWindow( sal_False, pMod, SFX_CHILDWIN_FORCEDOCK );
     SwRedlineAcceptChild::RegisterChildWindow( sal_False, pMod );
     SwSyncChildWin::RegisterChildWindow( sal_True, pMod );
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sw/source/ui/inc/teampi.hxx ooo310-m17.fix/sw/source/ui/inc/teampi.hxx
--- ooo310-m17/sw/source/ui/inc/teampi.hxx	1970-01-01 01:00:00.000000000 +0100
+++ ooo310-m17.fix/sw/source/ui/inc/teampi.hxx	2009-08-19 09:01:51.000000000 +0200
@@ -0,0 +1,98 @@
+/*
+ * written by Florian Reuter, (c) Novell Inc 2008
+ */
+#ifndef _TEAMPI_HXX
+#define _TEAMPI_HXX
+
+#ifndef _LSTBOX_HXX //autogen
+#include <vcl/lstbox.hxx>
+#endif
+#ifndef _SFXLSTNER_HXX //autogen
+#include <svtools/lstner.hxx>
+#endif
+#ifndef _TRANSFER_HXX
+#include <svtools/transfer.hxx>
+#endif
+#ifndef _SFX_CHILDWIN_HXX //autogen
+#include <sfx2/childwin.hxx>
+#endif
+#ifndef _SFXCTRLITEM_HXX //autogen
+#include <sfx2/ctrlitem.hxx>
+#endif
+#ifndef _SFXTBXCTRL_HXX
+#include <sfx2/tbxctrl.hxx>
+#endif
+
+#ifndef _CONTTREE_HXX
+#include <conttree.hxx>
+#endif
+#ifndef _POPBOX_HXX
+#include <popbox.hxx>
+#endif
+
+#include <vcl/button.hxx>
+#include <vcl/edit.hxx>
+#include <vcl/javachild.hxx>
+#include <vcl/combobox.hxx>
+#include <vcl/syschildctrl.hxx>
+#include <osl/thread.hxx>
+#include <osl/process.h>
+
+class SfxMedium;
+
+class SwMonoThread : public osl::Thread
+{
+private:
+    sal_uInt32 socketId;
+public:
+    SwMonoThread(sal_uInt32 socketId);
+    virtual void SAL_CALL run();
+};
+
+class SwTeamPI : public Window,
+         public SfxControllerItem, public SfxListener
+{
+//    OKButton        aOKButton;
+//    ListBox aEdit;
+    SystemChildControl aJavaWindow;
+    SwMonoThread *aMonoThread;
+    oslProcess pProcess;
+    SfxBindings 		&rBindings;    
+    SwView				*pCreateView;
+    Timer 				aTimer;
+//    SystemChildControl aJavaWindow2;
+protected:
+//    DECL_LINK( MyClickHandler, OKButton* pBtn );
+//    DECL_LINK( MyListBoxHandler, ListBox * );
+    DECL_LINK( TimerHdl, Timer* );
+    SwView*         GetCreateView() const;
+public:
+    static void invokeMono(char *file, sal_uInt32 socketId);
+    void invokeApp(::rtl::OUString appURI, sal_uInt32 socketId, SfxMedium *pMedium);
+    SwTeamPI(SfxBindings*, SfxChildWindowContext*, Window*);
+    ~SwTeamPI();
+
+    virtual void        Resize();
+/*
+    virtual void        Resizing( Size& rSize );
+    virtual BOOL        Close();
+*/    
+public:
+    virtual void        Activate();
+    virtual void        Deactivate();
+};
+
+class SwTeamChild : public SfxChildWindowContext
+{
+public:
+    SwTeamChild( Window* ,
+         USHORT nId,
+         SfxBindings*,
+         SfxChildWinInfo*  );
+    
+    SFX_DECL_CHILDWINDOW_CONTEXT( SwTeamChild )
+};
+
+
+
+#endif
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sw/source/ui/uiview/view0.cxx ooo310-m17.fix/sw/source/ui/uiview/view0.cxx
--- ooo310-m17/sw/source/ui/uiview/view0.cxx	2009-08-18 15:16:10.000000000 +0200
+++ ooo310-m17.fix/sw/source/ui/uiview/view0.cxx	2009-08-19 09:17:51.000000000 +0200
@@ -120,6 +120,7 @@ SFX_IMPL_VIEWFACTORY(SwView, SW_RES(STR_
 SFX_IMPL_INTERFACE( SwView, SfxViewShell, SW_RES(RID_TOOLS_TOOLBOX) )
 {
     SFX_CHILDWINDOW_CONTEXT_REGISTRATION(SID_NAVIGATOR);
+ 	SFX_CHILDWINDOW_CONTEXT_REGISTRATION(SID_TEAM);
     SFX_CHILDWINDOW_REGISTRATION(SfxTemplateDialogWrapper::GetChildWindowId());
     SFX_CHILDWINDOW_REGISTRATION(SvxSearchDialogWrapper::GetChildWindowId());
     SFX_CHILDWINDOW_REGISTRATION(SwSpellDialogChildWindow::GetChildWindowId());
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sw/source/ui/uiview/view2.cxx ooo310-m17.fix/sw/source/ui/uiview/view2.cxx
--- ooo310-m17/sw/source/ui/uiview/view2.cxx	2009-08-19 10:29:04.000000000 +0200
+++ ooo310-m17.fix/sw/source/ui/uiview/view2.cxx	2009-08-19 09:20:38.000000000 +0200
@@ -1566,8 +1566,13 @@ void SwView::ExecuteStatusLine(SfxReques
     {
         case FN_STAT_PAGE:
         {
+/*
             GetViewFrame()->GetDispatcher()->Execute( SID_NAVIGATOR,
                                       SFX_CALLMODE_SYNCHRON|SFX_CALLMODE_RECORD );
+*/
+ 		    printf("Execute TEAM...\n");
+ 			GetViewFrame()->GetDispatcher()->Execute( SID_TEAM,
+ 								  SFX_CALLMODE_SYNCHRON|SFX_CALLMODE_RECORD );
         }
         break;
 
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sw/source/ui/uiview/view.cxx ooo310-m17.fix/sw/source/ui/uiview/view.cxx
--- ooo310-m17/sw/source/ui/uiview/view.cxx	2009-08-19 10:27:50.000000000 +0200
+++ ooo310-m17.fix/sw/source/ui/uiview/view.cxx	2009-08-19 09:16:42.000000000 +0200
@@ -113,6 +113,7 @@
 #include <globdoc.hxx>
 #endif
 #include <navipi.hxx>
+#include <teampi.hxx>
 #include <gloshdl.hxx>
 #include <usrpref.hxx>
 #ifndef _SRCVIEW_HXX
@@ -1147,6 +1148,8 @@ SwView::SwView( SfxViewFrame *_pFrame, S
         SfxBoolItem aNavi(SID_NAVIGATOR, sal_True);
         GetDispatcher().Execute(SID_NAVIGATOR, SFX_CALLMODE_ASYNCHRON, &aNavi, 0L);
     }
+ 	SfxBoolItem aNavi(SID_TEAM, sal_True);
+ 	GetDispatcher().Execute(SID_TEAM, SFX_CALLMODE_ASYNCHRON, &aNavi, 0L);
 
 
     /*uno::Reference< awt::XWindow >  aTmpRef;
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sw/source/ui/utlui/makefile.mk ooo310-m17.fix/sw/source/ui/utlui/makefile.mk
--- ooo310-m17/sw/source/ui/utlui/makefile.mk	2009-08-18 15:16:10.000000000 +0200
+++ ooo310-m17.fix/sw/source/ui/utlui/makefile.mk	2009-08-19 09:19:12.000000000 +0200
@@ -42,6 +42,8 @@ TARGET=utlui
 
 # --- Files --------------------------------------------------------
 
+#xxINPROCESSMONO PKGCONFIG_MODULES=mono
+#xxINPROCESSMONO .INCLUDE: pkg_config.mk
 
 SRS1NAME=$(TARGET)
 SRC1FILES =  \
@@ -65,6 +67,7 @@ SLOFILES =  $(EXCEPTIONSFILES) \
         $(SLO)$/glbltree.obj \
         $(SLO)$/initui.obj \
         $(SLO)$/navipi.obj \
+        $(SLO)$/teampi.obj \
         $(SLO)$/navicfg.obj \
         $(SLO)$/numfmtlb.obj \
         $(SLO)$/prcntfld.obj \
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sw/source/ui/utlui/teampi.cxx ooo310-m17.fix/sw/source/ui/utlui/teampi.cxx
--- ooo310-m17/sw/source/ui/utlui/teampi.cxx	1970-01-01 01:00:00.000000000 +0100
+++ ooo310-m17.fix/sw/source/ui/utlui/teampi.cxx	2009-08-19 09:01:51.000000000 +0200
@@ -0,0 +1,449 @@
+/*
+ * written by Florian Reuter, (c) Novell Inc 2008
+ */
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_sw.hxx"
+
+#ifndef _LIST_HXX
+#include <tools/list.hxx>
+#endif
+#ifndef _URLBMK_HXX
+#include <svtools/urlbmk.hxx>
+#endif
+#ifndef _SFXSTRITEM_HXX
+#include <svtools/stritem.hxx>
+#endif
+#ifndef _FILTER_HXX
+#include <svtools/filter.hxx>
+#endif
+#ifndef SVTOOLS_URIHELPER_HXX
+#include <svtools/urihelper.hxx>
+#endif
+#ifndef _SOT_FORMATS_HXX
+#include <sot/formats.hxx>
+#endif
+#ifndef _FILELIST_HXX
+#include <sot/filelist.hxx>
+#endif
+#ifndef _SFXEVENT_HXX
+#include <sfx2/event.hxx>
+#endif
+#ifndef _SFXIMGMGR_HXX
+#include <sfx2/imgmgr.hxx>
+#endif
+#ifndef _SFXDISPATCH_HXX
+#include <sfx2/dispatch.hxx>
+#endif
+#ifndef _SFXDOCKWIN_HXX
+#include <sfx2/dockwin.hxx>
+#endif
+#include <vcl/toolbox.hxx>
+#ifndef _SWTYPES_HXX
+#include <swtypes.hxx>	// fuer Pathfinder
+#endif
+#ifndef _ERRHDL_HXX
+#include <errhdl.hxx>
+#endif
+#ifndef _SWMODULE_HXX
+#include <swmodule.hxx>
+#endif
+#ifndef _VIEW_HXX
+#include <view.hxx>
+#endif
+#ifndef _NAVICFG_HXX
+#include <navicfg.hxx>
+#endif
+#ifndef _WRTSH_HXX
+#include <wrtsh.hxx>
+#endif
+#ifndef _DOCSH_HXX
+#include <docsh.hxx>
+#endif
+#ifndef _ACTCTRL_HXX
+#include <actctrl.hxx>
+#endif
+#ifndef _BOOKMRK_HXX
+#include <bookmrk.hxx>
+#endif
+#include <teampi.hxx>
+#ifndef _CONTENT_HXX
+#include <content.hxx>
+#endif
+#ifndef _WORKCTRL_HXX
+#include <workctrl.hxx>
+#endif
+#ifndef _SECTION_HXX
+#include <section.hxx>
+#endif
+#ifndef _EDTWIN_HXX
+#include <edtwin.hxx>
+#endif
+#include <sfx2/app.hxx>
+#ifndef _CMDID_H
+#include <cmdid.h>
+#endif
+#ifndef _HELPID_H
+#include <helpid.h>
+#endif
+#ifndef _RIBBAR_HRC
+#include <ribbar.hrc>
+#endif
+#ifndef _NAVIPI_HRC
+#include <navipi.hrc>
+#endif
+#ifndef _UTLUI_HRC
+#include <utlui.hrc>
+#endif
+
+#include <unomid.h>
+
+//#include <glib/glib.h>
+#ifdef xxINPROCESSMONO
+#include <mono/jit/jit.h>
+#include <mono/metadata/assembly.h>
+#endif
+#include <osl/thread.hxx>
+#include <sfx2/docfile.hxx>
+#include <com/sun/star/util/XMacroExpander.hpp>
+#include <comphelper/processfactory.hxx>
+#include <com/sun/star/beans/XPropertySet.hpp>
+
+
+using namespace ::com::sun::star::uno;
+using namespace ::com::sun::star::frame;
+using namespace ::com::sun::star::container;
+using namespace ::com::sun::star::lang;
+using namespace ::com::sun::star::uno;
+using namespace ::com::sun::star::beans;
+using namespace ::com::sun::star::ucb;
+using namespace ::com::sun::star::task;
+using namespace ::com::sun::star::util;
+/*
+IMPL_LINK( SwTeamPI, MyClickHandler, OKButton*, EMPTYARG )
+{
+    printf("### CLICK\n");
+aJavaWindow.LoadUrl("http://www.google.com");    
+  return 0;
+}
+
+IMPL_LINK( SwTeamPI, MyListBoxHandler, ListBox *, pBox )
+{
+    printf("### DROP DOWN SELECT...\n");
+    aJavaWindow.LoadUrl("http://www.google.com");
+    return 0;
+}
+*/
+IMPL_LINK( SwTeamPI, TimerHdl, Timer*, EMPTYARG )
+{
+    SwView* pView=GetCreateView();
+    printf("**TIMER pView=%p\n", pView);
+    if (pView) {
+    ::rtl::OUString aName=pView->GetDocShell()->GetName();
+    rtl::OString aName8 = ::rtl::OUStringToOString (aName, RTL_TEXTENCODING_UTF8);
+    printf("**TIMER aName8=\"%s\"\n", aName8.getStr());
+    SfxMedium* pMedium=pView->GetDocShell()->GetMedium();
+    printf("**TIMER pMedium=%p\n", pMedium);
+    aTimer.Stop();
+
+    Reference< XMultiServiceFactory> xMS(::comphelper::getProcessServiceFactory(), UNO_QUERY);
+    Reference< XPropertySet >  xProps(xMS, UNO_QUERY);
+    Reference< XComponentContext > xContext(xProps->getPropertyValue(rtl::OUString::createFromAscii("DefaultContext")), UNO_QUERY);
+    Reference< XMacroExpander > xExpander(xContext->getValueByName(::rtl::OUString::createFromAscii("/singletons/com.sun.star.util.theMacroExpander")), UNO_QUERY);
+
+    ::rtl::OUString sProgUri=xExpander->expandMacros(rtl::OUString::createFromAscii("$ORIGIN/TeamApp"));
+    rtl::OString sProgUri8 = ::rtl::OUStringToOString (sProgUri, RTL_TEXTENCODING_UTF8);
+    printf("**TIMER sProgUri=\"%s\"\n", sProgUri8.getStr());
+    
+
+    invokeApp(sProgUri, aJavaWindow.GetSocketId(), pMedium);
+    } else {
+    aTimer.Stop();
+    aTimer.Start();
+    }
+    return 0;
+}
+
+SwTeamPI::SwTeamPI( SfxBindings* _pBindings,
+            SfxChildWindowContext* pCw,
+            Window* pParent) :
+    
+    Window( pParent /*,  SW_RES(DLG_NAVIGATION_PI)*/ ),
+    SfxControllerItem( SID_DOCFULLNAME, *_pBindings ),
+//    aOKButton       ( this ),
+//    aEdit       ( this, WB_DROPDOWN ),
+    aJavaWindow ( this, SystemChildControl::SOCKET ),
+    aMonoThread(NULL),
+    pProcess(NULL),
+    rBindings(*_pBindings),
+    pCreateView(NULL)
+//    aJavaWindow2 ( this )    
+{
+    printf("SwTeamPI::SwTeamPI(%p)\n", &rBindings);
+    StartListening(*SFX_APP());
+/*
+    Size aOKSiz = aOKButton.GetSizePixel();
+    Point aOKPnt = aOKButton.GetPosPixel();
+    aOKPnt.X() = 0;
+    aOKPnt.Y() = 0;
+    aOKButton.SetPosPixel( aOKPnt );
+    aOKSiz.Width()=100;
+    aOKSiz.Height()=20;
+    aOKButton.SetSizePixel( aOKSiz );
+    aOKButton.SetClickHdl( LINK( this, SwTeamPI, MyClickHandler ) );
+    aOKButton.Show();
+*/
+/*
+    Size aEditSiz = aEdit.GetSizePixel();
+    Point aEditPnt = aEdit.GetPosPixel();
+    aEditPnt.X() = 0;
+    aEditPnt.Y() = 0;
+    aEdit.SetPosPixel( aEditPnt );
+    aEditSiz.Width()=300;
+    aEditSiz.Height()=25;
+    aEdit.SetSizePixel( aEditSiz );
+    aEdit.InsertEntry(rtl::OUString::createFromAscii("Buddies"));
+    aEdit.SetSelectHdl( LINK( this, SwTeamPI, MyListBoxHandler ) );
+    aEdit.Show();
+*/
+    Size aJavaWindowSiz = aJavaWindow.GetSizePixel();
+    Point aJavaWindowPnt = aJavaWindow.GetPosPixel();
+    aJavaWindowPnt.X() = 0;
+    aJavaWindowPnt.Y() = 0;
+    aJavaWindow.SetPosPixel( aJavaWindowPnt );
+    aJavaWindowSiz.Width()=300;
+    aJavaWindowSiz.Height()=300;
+    aJavaWindow.SetSizePixel( aJavaWindowSiz );
+    aJavaWindow.Show();
+/*
+    aMonoThread=new SwMonoThread(aJavaWindow.GetSocketId());
+    if (aMonoThread!=NULL) {
+    aMonoThread->create();  
+    }
+*/
+    printf("start timer...\n");
+    aTimer.SetTimeoutHdl(LINK(this, SwTeamPI, TimerHdl));
+    aTimer.SetTimeout(1000);
+    aTimer.Start();
+
+/*
+    Size aJavaWindow2Siz = aJavaWindow2.GetSizePixel();
+    Point aJavaWindow2Pnt = aJavaWindow2.GetPosPixel();
+    aJavaWindow2Pnt.X() = 10;
+    aJavaWindow2Pnt.Y() = 130+200;
+    aJavaWindow2.SetPosPixel( aJavaWindow2Pnt );
+    aJavaWindow2Siz.Width()=200;
+    aJavaWindow2Siz.Height()=200;
+    aJavaWindow2.SetSizePixel( aJavaWindow2Siz );
+    aJavaWindow2.Show();
+*/
+
+/*
+    Size aJavaWindowSiz = aJavaWindow.GetSizePixel();
+    Point aJavaWindowPnt = aJavaWindow.GetPosPixel();
+    aJavaWindowPnt.X() = 0;
+    aJavaWindowPnt.Y() = 0;
+    aJavaWindow.SetPosPixel( aJavaWindowPnt );
+    aJavaWindowSiz.Width()=200;
+    aJavaWindowSiz.Height()=500;
+    aJavaWindow.SetSizePixel( aJavaWindowSiz );
+    aJavaWindow.Show();
+*/
+/*    
+    if (0) {
+    Reference< XComponentContext > xContext( ::cppu::defaultBootstrap_InitialComponentContext() );
+
+    MyApplet *myApplet=new MyApplet();
+    INetURLObject aDocBase( ::rtl::OUString::createFromAscii("/tmp/HelloWorld") );
+    SvCommandList aCmdList;
+    aCmdList.Append( String::CreateFromAscii( RTL_CONSTASCII_STRINGPARAM( "codebase" ) ), ::rtl::OUString::createFromAscii("file:///home/freuter/workspace/applet/" ));
+    aCmdList.Append( String::CreateFromAscii( RTL_CONSTASCII_STRINGPARAM( "code" ) ), ::rtl::OUString::createFromAscii("JAppletSample.class" ));
+    myApplet->Init(xContext, &aJavaWindow, aDocBase, aCmdList);
+    }
+*/
+}
+
+SwView* SwTeamPI::GetCreateView() const
+{
+    if(!pCreateView)
+    {
+    printf("SwTeamPI::GetCreateView():\n");
+        SwView* pView = SwModule::GetFirstView();
+        while(pView)
+        {
+        ::rtl::OUString aName=pView->GetName();
+        rtl::OString aName8 = ::rtl::OUStringToOString (aName, RTL_TEXTENCODING_UTF8);
+        printf("pView=%p %p %p \"%s\"\n", pView, &pView->GetViewFrame()->GetBindings(), &rBindings, aName8.getStr());	   
+            if(&pView->GetViewFrame()->GetBindings() == &rBindings)
+            {
+        const_cast<SwTeamPI*>(this)->pCreateView = pView;
+        const_cast<SwTeamPI*>(this)->StartListening(*pCreateView);
+                break;
+            }
+            pView = SwModule::GetNextView(pView);
+        }
+    }
+    return pCreateView;
+}
+
+
+void SwTeamPI::Resize()
+{
+    Window* pParent = GetParent();
+    FloatingWindow* pFloat =  ((DockingWindow*)pParent)->GetFloatingWindow();
+    Size aNewSize;
+
+    Size thisSiz=GetOutputSizePixel();
+    if( pFloat)
+    {
+    aNewSize = pFloat->GetOutputSizePixel();
+    }
+    else
+    {
+    aNewSize = pParent->GetOutputSizePixel();
+    }
+//XXX    printf("SwTeamPI::Resize(pFloat=%p; Width=%li; Height=%li)\n", pFloat, aNewSize.Width(), aNewSize.Height());
+/*
+    Size aEditSize=aEdit.GetSizePixel();
+    aEditSize.Width()=aNewSize.Width();
+    aEdit.SetSizePixel(aEditSize); 
+*/
+    Size aJavaWindowSize=aJavaWindow.GetSizePixel();
+    aJavaWindowSize.Width()=aNewSize.Width();
+//    aJavaWindowSize.Height()=aNewSize.Height()-aEditSize.Height();
+    aJavaWindowSize.Height()=aNewSize.Height();
+    aJavaWindow.SetSizePixel(aJavaWindowSize);
+}
+
+SwTeamPI::~SwTeamPI()
+{
+    EndListening(*SFX_APP());
+    if (aMonoThread!=NULL) {
+        aMonoThread->terminate();
+        delete aMonoThread;
+        aMonoThread=NULL;
+    }
+    if (pProcess!=NULL) {
+        osl_terminateProcess(pProcess);
+        pProcess=NULL;
+    }
+}
+
+
+
+SFX_IMPL_CHILDWINDOW_CONTEXT( SwTeamChild, SID_TEAM, SwView )
+
+
+SwTeamChild::SwTeamChild( Window* pParent,
+              USHORT nId,
+              SfxBindings* _pBindings,
+              SfxChildWinInfo* pInfo )
+    : SfxChildWindowContext( nId )
+{
+    printf("SwTeamChild::SwTeamChild\n");
+
+    SwTeamPI* pTeam  = new SwTeamPI( _pBindings, this, pParent );
+    SetWindow( pTeam );
+
+    _pBindings->Invalidate(SID_TEAM);
+    String sExtra = pInfo->aExtraString;
+/*
+    SwNavigationConfig* pNaviConfig = SW_MOD()->GetNavigationConfig();
+
+    USHORT nRootType = static_cast< USHORT >( pNaviConfig->GetRootType() );
+    if( nRootType < CONTENT_TYPE_MAX )
+    {
+        pNavi->aContentTree.SetRootType(nRootType);
+        pNavi->aContentToolBox.CheckItem(FN_SHOW_ROOT, TRUE);
+    }
+    pNavi->aContentTree.SetOutlineLevel( static_cast< BYTE >( pNaviConfig->GetOutlineLevel() ) );
+    pNavi->SetRegionDropMode( static_cast< USHORT >( pNaviConfig->GetRegionMode() ) );
+
+    if(GetFloatingWindow() && pNaviConfig->IsSmall())
+    {
+        pNavi->_ZoomIn();
+    }
+*/
+}
+
+SwMonoThread::SwMonoThread(sal_uInt32 socketId) : osl::Thread(),
+                   socketId(socketId)
+{
+    
+}
+
+void SAL_CALL SwMonoThread::run() {
+    printf("**START MonoThread::run\n");
+    SwTeamPI::invokeMono("/home/freuter/tmp/plug/SamplePlug.exe", socketId);
+//    SwTeamPI::invokeMono("/home/freuter/tmp/plug/SampleApp.exe", socketId);
+    printf("**END MonoThread::run\n");
+}
+
+void SwTeamPI::invokeMono(char *file, sal_uInt32 socketId)
+{
+#ifdef xxINPROCESSMONO
+    MonoDomain *domain;
+    MonoAssembly *assembly;
+    domain = mono_jit_init (file);
+    if (domain) {
+    assembly = mono_domain_assembly_open (domain, file);
+    if (assembly) {
+        int argc=2;
+        char _buf[100];
+        sprintf(_buf, "%li", (long)socketId);
+        char *argv[]= { file, _buf };
+        printf("invoking: \"%s\"\n", file);
+        mono_jit_exec (domain, assembly, argc, argv);
+    }   
+    mono_jit_cleanup (domain);  
+    }
+#endif
+}
+
+void SwTeamPI::invokeApp(::rtl::OUString appURI, sal_uInt32 socketId, SfxMedium *pMedium)
+{
+    rtl::OString aAppURI8 = ::rtl::OUStringToOString (appURI, RTL_TEXTENCODING_UTF8);
+    printf("invokeApp(\"%s\", %li)\n", aAppURI8.getStr(), (long)socketId);
+    int argc=3;
+    rtl_uString **args=new rtl_uString*[argc];
+    args[0]=appURI.pData; rtl_uString_acquire(args[0]);
+    char _buf[100]; sprintf(_buf, "%li", (long)socketId);
+    rtl::OUString ssocket=rtl::OUString::createFromAscii(_buf);
+    args[1]=ssocket.pData; rtl_uString_acquire(args[1]);
+    
+    ::rtl::OUString sOrigUrl=(pMedium!=NULL?pMedium->GetOrigURL():String());
+    args[2]=sOrigUrl.pData; rtl_uString_acquire(args[2]);
+        
+    oslProcessError error = osl_executeProcess( args[0],
+                        args+1,
+                        argc-1,
+                        osl_Process_NORMAL,
+                        0,
+                        NULL,
+                        NULL,
+                        0,
+                        &pProcess );
+
+
+    printf("error=%i\n", error);
+    if (error==osl_Process_E_None) {
+    printf("started...\n");
+    }
+    for(int i=0;i<argc;i++) {
+    rtl_uString_release(args[i]);
+    }
+    delete[] args;
+                  
+}
+
+
+void SwTeamPI::Activate()
+{
+    printf("SwTeamPI::Activate()\n");
+    Window::Activate();
+}
+
+void SwTeamPI::Deactivate()
+{
+    printf("SwTeamPI::Deactivate()\n");
+    Window::Deactivate();
+}
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/inc/vcl/salinst.hxx ooo310-m17.fix/vcl/inc/vcl/salinst.hxx
--- ooo310-m17/vcl/inc/vcl/salinst.hxx	2009-08-18 15:17:29.000000000 +0200
+++ ooo310-m17.fix/vcl/inc/vcl/salinst.hxx	2009-08-19 09:01:51.000000000 +0200
@@ -96,6 +96,13 @@ public:
     // Object (System Child Window)
     virtual SalObject*			CreateObject( SalFrame* pParent, SystemWindowData* pWindowData, BOOL bShow = TRUE ) = 0;
     virtual void				DestroyObject( SalObject* pObject ) = 0;
+    
+    virtual SalObject*			CreateSocket( SalFrame* pParent, BOOL bShow = TRUE) = 0;
+    virtual void				DestroySocket( SalObject* pObject ) = 0;    
+
+    virtual SalObject*			CreateMozObject( SalFrame* pParent, BOOL bShow = TRUE) = 0;
+    virtual void				DestroyMozObject( SalObject* pObject ) = 0;    
+
 
     // VirtualDevice
     // nDX and nDY in Pixel
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/inc/vcl/salobj.hxx ooo310-m17.fix/vcl/inc/vcl/salobj.hxx
--- ooo310-m17/vcl/inc/vcl/salobj.hxx	2009-08-19 10:28:50.000000000 +0200
+++ ooo310-m17.fix/vcl/inc/vcl/salobj.hxx	2009-08-19 09:23:19.000000000 +0200
@@ -70,6 +70,7 @@ public:
     virtual void					Show( BOOL bVisible ) = 0;
     virtual void					Enable( BOOL nEnable ) = 0;
     virtual void					GrabFocus() = 0;
+    virtual void                    RemoveFocus() = 0;
 
     virtual void					SetBackground() = 0;
     virtual void					SetBackground( SalColor nSalColor ) = 0;
@@ -78,6 +79,9 @@ public:
 
     virtual const SystemEnvData*	GetSystemData() const = 0;
 
+    virtual void LoadUrl(char *url) = 0;
+    virtual sal_uInt32 GetSocketId() = 0;
+ 
     void					SetCallback( void* pInst, SALOBJECTPROC pProc )
     { m_pInst = pInst; m_pCallback = pProc; }
     long					CallCallback( USHORT nEvent, const void* pEvent )
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/inc/vcl/syschildctrl.hxx ooo310-m17.fix/vcl/inc/vcl/syschildctrl.hxx
--- ooo310-m17/vcl/inc/vcl/syschildctrl.hxx	1970-01-01 01:00:00.000000000 +0100
+++ ooo310-m17.fix/vcl/inc/vcl/syschildctrl.hxx	2009-08-19 09:01:51.000000000 +0200
@@ -0,0 +1,58 @@
+/*
+ * written by Florian Reuter, (c) Novell Inc 2008
+ */
+#ifndef _SV_SYSCHILDCTRL_HXX
+#define _SV_SYSCHILDCTRL_HXX
+
+#ifndef _SV_SV_H
+#include <vcl/sv.h>
+#endif
+#ifndef _VCL_DLLAPI_H
+#include <vcl/dllapi.h>
+#endif
+
+#ifndef _SV_WINDOW_HXX
+#include <vcl/window.hxx>
+#endif
+
+#include <vcl/ctrl.hxx>
+
+
+struct SystemEnvData;
+struct SystemWindowData;
+
+class VCL_DLLPUBLIC SystemChildControl : public Control
+{
+public:    
+    static const int DRAWING_AREA = 1;
+    static const int SOCKET = 2;
+    static const int BROWSER = 3;
+
+using Control::ImplInit;
+private:
+    // Copy assignment is forbidden and not implemented.
+    SAL_DLLPRIVATE SystemChildControl (const SystemChildControl &);
+    SAL_DLLPRIVATE SystemChildControl & operator= (const SystemChildControl &);
+    int _type;
+    SAL_DLLPRIVATE void ImplInitSysChildCtrl( Window* pParent, WinBits nStyle, SystemWindowData *pData, int type, BOOL bShow = TRUE );
+
+public:
+    SystemChildControl(Window* pParent, int type, WinBits nStyle = 0);
+    ~SystemChildControl();
+
+    virtual void    GetFocus();
+    virtual void    LoseFocus();
+    virtual long    Notify( NotifyEvent& rNEvt );
+
+    virtual void    MouseButtonDown( const MouseEvent& rMEvt );
+    virtual void    MouseButtonUp( const MouseEvent& rMEvt );
+    virtual void    KeyInput( const KeyEvent& rKEvt );
+
+static void send_focus_change_message(
+    SystemChildControl* pWindow,
+    int mode, int detail );    
+    void LoadUrl(char *url);
+    sal_uInt32 GetSocketId();
+};
+
+#endif
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/inc/vcl/window.hxx ooo310-m17.fix/vcl/inc/vcl/window.hxx
--- ooo310-m17/vcl/inc/vcl/window.hxx	2009-08-19 10:28:58.000000000 +0200
+++ ooo310-m17.fix/vcl/inc/vcl/window.hxx	2009-08-19 09:01:51.000000000 +0200
@@ -357,6 +357,7 @@ class VCL_DLLPUBLIC Window : public Outp
     friend class PushButton;
     friend class RadioButton;
     friend class SystemChildWindow;
+    friend class SystemChildControl;
     friend class ImplBorderWindow;
 
     // TODO: improve missing functionality
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/inc/vcl/wintypes.hxx ooo310-m17.fix/vcl/inc/vcl/wintypes.hxx
--- ooo310-m17/vcl/inc/vcl/wintypes.hxx	2009-08-18 15:17:29.000000000 +0200
+++ ooo310-m17.fix/vcl/inc/vcl/wintypes.hxx	2009-08-19 09:01:51.000000000 +0200
@@ -120,7 +120,8 @@ typedef USHORT WindowType;
 #define WINDOW_INTROWINDOW		    (WINDOW_FIRST + 0x4f)
 #define WINDOW_LISTBOXWINDOW        (WINDOW_FIRST + 0x50)
 #define WINDOW_DOCKINGAREA          (WINDOW_FIRST + 0x51)
-#define WINDOW_LAST 				(WINDOW_DOCKINGAREA)
+#define WINDOW_SYSTEMCHILDCTRL         (WINDOW_FIRST + 0x52)
+#define WINDOW_LAST 				(WINDOW_SYSTEMCHILDCTRL)
 
 
 // ---------------
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/prj/d.lst ooo310-m17.fix/vcl/prj/d.lst
--- ooo310-m17/vcl/prj/d.lst	2009-08-18 15:17:29.000000000 +0200
+++ ooo310-m17.fix/vcl/prj/d.lst	2009-08-19 09:01:51.000000000 +0200
@@ -112,6 +112,7 @@ mkdir: %_DEST%\inc%_EXT%\vcl\plug\vcl
 ..\inc\vcl\svapp.hxx %_DEST%\inc%_EXT%\vcl\svapp.hxx
 ..\inc\vcl\symbol.hxx %_DEST%\inc%_EXT%\vcl\symbol.hxx
 ..\inc\vcl\syschild.hxx %_DEST%\inc%_EXT%\vcl\syschild.hxx
+..\inc\vcl\syschildctrl.hxx %_DEST%\inc%_EXT%\vcl\syschildctrl.hxx
 ..\inc\vcl\sysdata.hxx %_DEST%\inc%_EXT%\vcl\sysdata.hxx
 ..\inc\vcl\syswin.hxx %_DEST%\inc%_EXT%\vcl\syswin.hxx
 ..\inc\vcl\tabctrl.hxx %_DEST%\inc%_EXT%\vcl\tabctrl.hxx
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/source/window/makefile.mk ooo310-m17.fix/vcl/source/window/makefile.mk
--- ooo310-m17/vcl/source/window/makefile.mk	2009-08-19 10:27:49.000000000 +0200
+++ ooo310-m17.fix/vcl/source/window/makefile.mk	2009-08-19 09:25:21.000000000 +0200
@@ -75,6 +75,7 @@ SLOFILES= \
             $(SLO)$/splitwin.obj	\
             $(SLO)$/status.obj		\
             $(SLO)$/syschild.obj	\
+ 			$(SLO)$/syschildctrl.obj	\
             $(SLO)$/javachild.obj	\
             $(SLO)$/syswin.obj		\
             $(SLO)$/tabdlg.obj		\
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/source/window/syschildctrl.cxx ooo310-m17.fix/vcl/source/window/syschildctrl.cxx
--- ooo310-m17/vcl/source/window/syschildctrl.cxx	1970-01-01 01:00:00.000000000 +0100
+++ ooo310-m17.fix/vcl/source/window/syschildctrl.cxx	2009-08-19 09:01:51.000000000 +0200
@@ -0,0 +1,220 @@
+/*
+ * written by Florian Reuter, (c) Novell Inc 2008
+ */
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_vcl.hxx"
+
+#ifndef _SV_SVSYS_HXX
+#include <svsys.h>
+#endif
+#ifndef _SV_SALINST_HXX
+#include <vcl/salinst.hxx>
+#endif
+#ifndef _SV_SALFRAME_HXX
+#include <vcl/salframe.hxx>
+#endif
+#include <vcl/window.hxx>
+#ifndef _SV_SALOBJ_HXX
+#include <vcl/salobj.hxx>
+#endif
+
+#ifndef _SV_RC_H
+#include <tools/rc.h>
+#endif
+#ifndef _SV_SVDATA_HXX
+#include <vcl/svdata.hxx>
+#endif
+#ifndef _SV_WIDNOW_H
+#include <vcl/window.h>
+#endif
+#ifndef _SV_SVAPP_HXX
+#include <vcl/svapp.hxx>
+#endif
+#include <vcl/syschildctrl.hxx>
+
+#include <stdio.h>
+
+#if 0
+void SystemChildControl::send_focus_change_message(
+    SystemChildControl* pWindow,
+    int mode, int detail )
+{
+    XFocusChangeEvent ev;
+    memset(&ev, 0, sizeof(ev));
+    ev.type=FocusOut;
+    ev.display = (_XDisplay*)pWindow->GetSystemData()->pDisplay;
+    ev.window = pWindow->GetSystemData()->aWindow;
+    ev.send_event = true;
+    ev.mode = mode;
+    ev.detail = detail;
+
+    trap_errors();
+    XSendEvent(ev.display, pWindow->GetSystemData()->aWindow, False, NoEventMask, (XEvent*)&ev);
+    XSync(ev.display, False);
+    if (untrap_errors()) {
+    // Handle failure
+    }
+}
+#endif
+
+long ImplSysChildCtrlProc( void* pInst, SalObject* /* pObject */,
+                       USHORT nEvent, const void* /* pEvent */ )
+{
+    printf("syschildctrl::ImplSysChildCtrlProc\n");
+    SystemChildControl* pWindow = (SystemChildControl*)pInst;
+    long nRet = 0;
+
+    switch ( nEvent )
+    {
+        case SALOBJ_EVENT_GETFOCUS:
+//		    SystemChildWindow::__GrapFocus(pWindow);
+            printf("SALOBJ_EVENT_GETFOCUS\n");
+            pWindow->GrabFocus();
+            break;
+
+        case SALOBJ_EVENT_LOSEFOCUS:
+            printf("SALOBJ_EVENT_LOSEFOCUS\n");
+//		    SystemChildWindow::__LoseFocus(pWindow);
+            break;
+
+        case SALOBJ_EVENT_TOTOP:
+            printf("SALOBJ_EVENT_TOTOP\n");
+//		    SystemChildWindow::__ToTop(pWindow);
+            break;
+    }
+
+    return nRet;
+}
+
+
+void SystemChildControl::ImplInitSysChildCtrl( Window* pParent, WinBits nStyle, SystemWindowData *pData, int type, BOOL bShow )
+{
+    _type=type;
+    switch(type) {
+    case SOCKET:
+        mpWindowImpl->mpSysObj = ImplGetSVData()->mpDefInst->CreateSocket( pParent->ImplGetFrame(), bShow );
+        break;
+    case BROWSER:
+        mpWindowImpl->mpSysObj = ImplGetSVData()->mpDefInst->CreateMozObject( pParent->ImplGetFrame(), bShow );
+        break;
+    default:
+        mpWindowImpl->mpSysObj = ImplGetSVData()->mpDefInst->CreateObject( pParent->ImplGetFrame(), pData, bShow );
+        break;
+    }
+    Control::ImplInit( pParent, nStyle, NULL );
+
+    if ( GetSystemData() )
+    {
+    mpWindowImpl->mpSysObj->SetCallback( this, ImplSysChildCtrlProc );
+    SetParentClipMode( PARENTCLIPMODE_CLIP );
+    SetBackground();
+    }
+
+}
+
+
+SystemChildControl::SystemChildControl( Window* pParent, int type, WinBits nStyle ) : Control( WINDOW_SYSTEMCHILDCTRL ), _type(0)
+{
+    ImplInitSysChildCtrl( pParent, nStyle, NULL, type );
+    EnableInput();
+}
+
+SystemChildControl::~SystemChildControl()
+{
+    Hide();
+    if ( mpWindowImpl->mpSysObj )
+    {
+        switch (_type) {
+        case SOCKET:
+            ImplGetSVData()->mpDefInst->DestroySocket( mpWindowImpl->mpSysObj );
+            break;
+        case BROWSER:
+            ImplGetSVData()->mpDefInst->DestroyMozObject( mpWindowImpl->mpSysObj );
+            break;
+        default:
+            ImplGetSVData()->mpDefInst->DestroyObject( mpWindowImpl->mpSysObj );
+            break;
+        }
+        mpWindowImpl->mpSysObj = NULL;
+    }
+}
+
+void SystemChildControl::GetFocus()
+{
+    Control::GetFocus();
+}
+
+void SystemChildControl::LoseFocus()
+{
+    printf("SystemChildControl::LoseFocus()\n");
+/*
+    GtkSalObject *pGtkSalObject = (GtkSalObject *)mpWindowImpl->mpSysObj;
+    GtkSocket *socket=GTK_SOCKET(pGtkSalObject->GetSystemData()->pWidget);
+    printf("socket=%p\n", socket);
+    gtk_container_set_focus_child (GTK_CONTAINER (socket), NULL); 
+    GtkFixed *fixed=GTK_FIXED(GTK_WIDGET(socket)->parent);
+    printf("fixed=%p\n", fixed);
+    gtk_container_set_focus_child (GTK_CONTAINER (fixed), NULL); 
+    gtk_window_set_focus(GTK_WINDOW(gtk_widget_get_toplevel (GTK_WIDGET(socket))), NULL);
+*/
+    SalObject *pSalObject = mpWindowImpl->mpSysObj;
+    if (pSalObject) {
+    pSalObject->RemoveFocus();
+    }
+/*
+    GtkWidget *socket=GTK_WIDGET(pGtkSalObject->GetSystemData()->pWidget);
+    if (GTK_IS_CONTAINER(socket)) {
+    gtk_container_set_focus_child (GTK_CONTAINER (socket), NULL); 
+    }
+    GtkContainer *fixed=GTK_CONTAINER(GTK_WIDGET(socket)->parent);
+    gtk_container_set_focus_child (fixed, NULL); 
+    gtk_window_set_focus(GTK_WINDOW(gtk_widget_get_toplevel (GTK_WIDGET(socket))), NULL);
+*/
+    Control::LoseFocus();
+}
+
+long SystemChildControl::Notify( NotifyEvent& rNEvt )
+{
+    return Control::Notify(rNEvt);
+}
+
+void SystemChildControl::MouseButtonDown( const MouseEvent& rMEvt )
+{
+//    GtkWidget *socket=GTK_WIDGET(GetSystemData()->pWidget);
+//    GrabFocus();
+//    gtk_widget_grab_focus(socket);
+//    gtk_widget_set_sensitive(socket, 0);
+//    g_signal_emit_by_name(socket, "focus-out-event"
+//    printf("**** SystemChildControl::send_focus_change_message ***\n");
+//    SystemChildControl::send_focus_change_message(this, NotifyUngrab, NotifyDetailNone);
+
+
+//    printf("SystemChildControl::MouseButtonDown focus=%i\n", gtk_widget_is_focus(socket));
+    Control::MouseButtonDown(rMEvt);
+}
+
+void SystemChildControl::MouseButtonUp( const MouseEvent& rMEvt )
+{
+    printf("SystemChildControl::MouseButtonUp\n");
+    Control::MouseButtonUp(rMEvt);
+}
+
+void SystemChildControl::KeyInput( const KeyEvent& rKEvt )
+{
+    printf("SystemChildControl::KeyInput\n");
+}
+
+
+void SystemChildControl::LoadUrl(char *url)
+{
+    printf("+++ SystemChildControl::LOAD..\n");
+
+    SalObject *pGtkSalObject = mpWindowImpl->mpSysObj;
+    pGtkSalObject->LoadUrl(url);
+}
+
+sal_uInt32 SystemChildControl::GetSocketId()
+{
+    SalObject *pGtkSalObject = mpWindowImpl->mpSysObj;
+    return pGtkSalObject->GetSocketId();
+}
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/gtk/app/gtkinst.cxx ooo310-m17.fix/vcl/unx/gtk/app/gtkinst.cxx
--- ooo310-m17/vcl/unx/gtk/app/gtkinst.cxx	2009-08-19 10:27:48.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/gtk/app/gtkinst.cxx	2009-08-19 09:01:51.000000000 +0200
@@ -204,7 +204,28 @@ SalObject* GtkInstance::CreateObject( Sa
     if( pWindowData )
         return X11SalObject::CreateObject( pParent, pWindowData, bShow );
     
-    return new GtkSalObject( static_cast<GtkSalFrame*>(pParent), bShow );
+    return new GtkSalObject( static_cast<GtkSalFrame*>(pParent), GtkSalObject::DRAWING_AREA, bShow );
+}
+
+
+SalObject* GtkInstance::CreateSocket( SalFrame* pParent, BOOL bShow )
+{
+    return new GtkSalObject( static_cast<GtkSalFrame*>(pParent), GtkSalObject::SOCKET, bShow );
+}
+
+void GtkInstance::DestroySocket( SalObject* pObject )
+{
+    delete pObject;
+}
+
+SalObject* GtkInstance::CreateMozObject( SalFrame* pParent, BOOL bShow )
+{
+    return new GtkSalObject( static_cast<GtkSalFrame*>(pParent), GtkSalObject::MOZ_EMBEDD, bShow );
+}
+
+void GtkInstance::DestroyMozObject( SalObject* pObject )
+{
+    delete pObject;
 }
 
 GtkYieldMutex::GtkYieldMutex()
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/gtk/window/gtkframe.cxx ooo310-m17.fix/vcl/unx/gtk/window/gtkframe.cxx
--- ooo310-m17/vcl/unx/gtk/window/gtkframe.cxx	2009-08-19 10:29:26.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/gtk/window/gtkframe.cxx	2009-08-19 09:34:07.000000000 +0200
@@ -2948,6 +2948,16 @@ gboolean GtkSalFrame::signalConfigure( G
 gboolean GtkSalFrame::signalKey( GtkWidget*, GdkEventKey* pEvent, gpointer frame )
 {
     GtkSalFrame* pThis = (GtkSalFrame*)frame;
+    if (pThis && pThis->m_pFixedContainer!=NULL && GTK_IS_FIXED(pThis->m_pFixedContainer))
+    {
+        GtkFixed *pFixed=GTK_FIXED(pThis->m_pFixedContainer);
+        GtkWindow *pTopLevel=GTK_WINDOW(gtk_widget_get_toplevel (GTK_WIDGET(pFixed)));
+        if (pTopLevel!=NULL && pTopLevel->focus_widget!=NULL 
+ 	        /* &&  (GTK_IS_SOCKET(pTopLevel->focus_widget) || GTK_IS_MOZ_EMBED(pTopLevel->focus_widget))*/) 
+        {
+ 	        return FALSE;
+        }
+     }
 
     vcl::DeletionListener aDel( pThis );
 
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/gtk/window/gtkobject.cxx ooo310-m17.fix/vcl/unx/gtk/window/gtkobject.cxx
--- ooo310-m17/vcl/unx/gtk/window/gtkobject.cxx	2009-08-19 10:28:50.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/gtk/window/gtkobject.cxx	2009-08-19 09:01:51.000000000 +0200
@@ -36,14 +36,33 @@
 #include <plugins/gtk/gtkdata.hxx>
 #include <plugins/gtk/gtkinst.hxx>
 
-GtkSalObject::GtkSalObject( GtkSalFrame* pParent, BOOL bShow ) 
+#ifdef ENABLE_GTKMOZEMBED
+#include <gtkembedmoz/gtkmozembed.h>
+#endif
+
+
+GtkSalObject::GtkSalObject( GtkSalFrame* pParent, int type, BOOL bShow ) 
         : m_pSocket( NULL ),
-          m_pRegion( NULL )
+          m_pRegion( NULL ),
+      mozCount(0)
 {
     if( pParent )
     {
         // our plug window
-        m_pSocket = gtk_drawing_area_new();
+    switch(type) {
+        case SOCKET:
+        m_pSocket = gtk_socket_new();
+        break;
+#ifdef ENABLE_GTKMOZEMBED
+        case MOZ_EMBEDD:
+        gtk_moz_embed_set_comp_path("/usr/lib/firefox"); 
+        gtk_moz_embed_set_profile_path("/home/freuter/.mozilla", "firefox"); 		m_pSocket = gtk_moz_embed_new();
+        break;
+#endif
+        default:
+        m_pSocket = gtk_drawing_area_new();
+        break;
+    }
         Show( bShow );
         // insert into container
         gtk_fixed_put( pParent->getFixedContainer(),
@@ -55,7 +74,8 @@ GtkSalObject::GtkSalObject( GtkSalFrame*
 
         // make it transparent; some plugins may not insert
         // their own window here but use the socket window itself
-        gtk_widget_set_app_paintable( m_pSocket, TRUE );
+    if (type==DRAWING_AREA)
+        gtk_widget_set_app_paintable( m_pSocket, TRUE );
 
         //system data
         SalDisplay* pDisp = GetX11SalData()->GetDisplay();
@@ -74,12 +94,20 @@ GtkSalObject::GtkSalObject( GtkSalFrame*
 
         g_signal_connect( G_OBJECT(m_pSocket), "button-press-event", G_CALLBACK(signalButton), this );
         g_signal_connect( G_OBJECT(m_pSocket), "button-release-event", G_CALLBACK(signalButton), this );
+/**/
         g_signal_connect( G_OBJECT(m_pSocket), "focus-in-event", G_CALLBACK(signalFocus), this );
         g_signal_connect( G_OBJECT(m_pSocket), "focus-out-event", G_CALLBACK(signalFocus), this );
+/**/
+    g_signal_connect( G_OBJECT(m_pSocket), "set-focus-child", G_CALLBACK(signalFocusChild), this );
+
         g_signal_connect( G_OBJECT(m_pSocket), "destroy", G_CALLBACK(signalDestroy), this );
         
         // #i59255# necessary due to sync effects with java child windows
         pParent->Sync();
+
+    if (type==SOCKET) {
+        printf("socket id=%li\n", (long)gtk_socket_get_id(GTK_SOCKET(m_pSocket)));
+    }
     }
 }
 
@@ -138,6 +166,7 @@ void GtkSalObject::EndSetClipRegion()
 
 void GtkSalObject::SetPosSize( long nX, long nY, long nWidth, long nHeight )
 {
+    GTK_YIELD_GRAB();
     if( m_pSocket )
     {
         GtkFixed* pContainer = GTK_FIXED(gtk_widget_get_parent(m_pSocket));
@@ -196,6 +225,7 @@ gboolean GtkSalObject::signalButton( Gtk
 gboolean GtkSalObject::signalFocus( GtkWidget*, GdkEventFocus* pEvent, gpointer object )
 {
     GtkSalObject* pThis = (GtkSalObject*)object;
+    printf("GtkSalObject::signalFocus\n");
 
     GTK_YIELD_GRAB();
 
@@ -204,6 +234,19 @@ gboolean GtkSalObject::signalFocus( GtkW
     return FALSE;
 }
 
+void GtkSalObject::signalFocusChild  (GtkContainer */*container*/,
+                      GtkWidget    *widget,
+                      gpointer      object)
+{
+   GtkSalObject* pThis = (GtkSalObject*)object;
+    printf("\n********* GtkSalObject::signalFocusChild(%p)**********\n\n", widget);
+    
+
+    GTK_YIELD_GRAB();
+    pThis->CallCallback( widget!=NULL ? SALOBJ_EVENT_GETFOCUS : SALOBJ_EVENT_LOSEFOCUS, NULL );
+
+}
+
 void GtkSalObject::signalDestroy( GtkObject* pObj, gpointer object )
 {
     GtkSalObject* pThis = (GtkSalObject*)object;
@@ -221,3 +264,44 @@ void GtkSalObject::SetForwardKey( BOOL b
     else
         gtk_widget_set_events( GTK_WIDGET( m_pSocket ), ~(GDK_KEY_PRESS_MASK | GDK_KEY_RELEASE) & gtk_widget_get_events( GTK_WIDGET( m_pSocket ) ) );
 }
+
+
+void GtkSalObject::RemoveFocus()
+{
+    GTK_YIELD_GRAB();
+    printf("GtkSalObject::RemoveFocus\n");
+    GtkSalObject *pGtkSalObject = this;
+    GtkWidget *socket=GTK_WIDGET(pGtkSalObject->GetSystemData()->pWidget);
+    if (GTK_IS_CONTAINER(socket)) {
+    gtk_container_set_focus_child (GTK_CONTAINER (socket), NULL); 
+    }
+//    if (GTK_IS_CONTAINER(GTK_WIDGET(socket)->parent)) {
+    GtkContainer *fixed=GTK_CONTAINER(GTK_WIDGET(socket)->parent);
+    gtk_container_set_focus_child (fixed, NULL); 
+    gtk_window_set_focus(GTK_WINDOW(gtk_widget_get_toplevel (GTK_WIDGET(socket))), NULL);
+//    }
+}
+
+
+#ifdef ENABLE_GTKMOZEMBED
+void GtkSalObject::LoadUrl(char *url)
+{
+    GTK_YIELD_GRAB();
+    GtkMozEmbed *embed=GTK_MOZ_EMBED(m_pSocket);
+    gtk_widget_show(GTK_WIDGET(embed));
+    printf("%p GTK_IS_MOZ_EMBED(embed)=%i GTK_WIDGET_REALIZED(embed)=%i\n", embed, GTK_IS_MOZ_EMBED(embed), GTK_WIDGET_REALIZED(embed));
+//    gtk_moz_embed_load_url(embed, "http://137.65.132.22:8080/user/florian/1");
+    gtk_moz_embed_load_url(embed, "http://www.google.de");
+    gtk_widget_show(GTK_WIDGET(embed));
+}
+#else
+void GtkSalObject::LoadUrl(char */*url*/)
+{
+}
+#endif
+
+sal_uInt32 GtkSalObject::GetSocketId()
+{
+    GTK_YIELD_GRAB();
+    return gtk_socket_get_id(GTK_SOCKET(m_pSocket));
+}
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/gtk/window/makefile.mk ooo310-m17.fix/vcl/unx/gtk/window/makefile.mk
--- ooo310-m17/vcl/unx/gtk/window/makefile.mk	2009-08-18 15:17:30.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/gtk/window/makefile.mk	2009-08-19 09:01:51.000000000 +0200
@@ -61,6 +61,9 @@ PKGCONFIG_MODULES+= dbus-glib-1
 .ENDIF
 .INCLUDE : pkg_config.mk
 
+CFLAGS+=-I/usr/include/xulrunner-1.8.0.1
+
+
 .IF "$(COM)" == "C52"
 NOOPTFILES=$(SLO)$/gtkframe.obj
 .ENDIF
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/headless/svpdummies.cxx ooo310-m17.fix/vcl/unx/headless/svpdummies.cxx
--- ooo310-m17/vcl/unx/headless/svpdummies.cxx	2009-08-18 15:17:30.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/headless/svpdummies.cxx	2009-08-19 09:01:51.000000000 +0200
@@ -61,9 +61,12 @@ void SvpSalObject::SetPosSize( long, lon
 void SvpSalObject::Show( BOOL ) {}
 void SvpSalObject::Enable( BOOL ) {}
 void SvpSalObject::GrabFocus() {}
+void SvpSalObject::RemoveFocus() {}
 void SvpSalObject::SetBackground() {}
 void SvpSalObject::SetBackground( SalColor ) {}
 const SystemEnvData* SvpSalObject::GetSystemData() const { return &m_aSystemChildData; }
+void SvpSalObject::LoadUrl(char *url) {}
+sal_uInt32 SvpSalObject::GetSocketId() { return 0; }
 
 // SalI18NImeStatus
 SvpImeStatus::~SvpImeStatus() {}
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/headless/svpdummies.hxx ooo310-m17.fix/vcl/unx/headless/svpdummies.hxx
--- ooo310-m17/vcl/unx/headless/svpdummies.hxx	2009-08-18 15:17:30.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/headless/svpdummies.hxx	2009-08-19 09:35:20.000000000 +0200
@@ -56,11 +56,14 @@ public:
     virtual void					Show( BOOL bVisible );
     virtual void					Enable( BOOL nEnable );
     virtual void					GrabFocus();
+    virtual void                    RemoveFocus();
 
     virtual void					SetBackground();
     virtual void					SetBackground( SalColor nSalColor );
 
     virtual const SystemEnvData*	GetSystemData() const;
+    virtual void                    LoadUrl(char *url);
+    virtual sal_uInt32              GetSocketId();
 };
 
 class SvpImeStatus : public SalI18NImeStatus
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/headless/svpinst.cxx ooo310-m17.fix/vcl/unx/headless/svpinst.cxx
--- ooo310-m17/vcl/unx/headless/svpinst.cxx	2009-08-18 15:17:30.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/headless/svpinst.cxx	2009-08-19 09:01:51.000000000 +0200
@@ -250,6 +250,27 @@ void SvpSalInstance::DestroyObject( SalO
     delete pObject;
 }
 
+SalObject* SvpSalInstance::CreateSocket( SalFrame*, BOOL )
+{
+    return new SvpSalObject();
+}
+
+void SvpSalInstance::DestroySocket( SalObject* pObject )
+{
+    delete pObject;
+}
+
+SalObject* SvpSalInstance::CreateMozObject( SalFrame*, BOOL )
+{
+    return new SvpSalObject();
+}
+
+void SvpSalInstance::DestroyMozObject( SalObject* pObject )
+{
+    delete pObject;
+}
+
+
 SalVirtualDevice* SvpSalInstance::CreateVirtualDevice( SalGraphics*,
                                                        long nDX, long nDY,
                                                        USHORT nBitCount, const SystemGraphicsData* )
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/headless/svpinst.hxx ooo310-m17.fix/vcl/unx/headless/svpinst.hxx
--- ooo310-m17/vcl/unx/headless/svpinst.hxx	2009-08-18 15:17:30.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/headless/svpinst.hxx	2009-08-19 09:01:51.000000000 +0200
@@ -139,6 +139,14 @@ public:
     virtual SalObject*		CreateObject( SalFrame* pParent, SystemWindowData* pWindowData, BOOL bShow = TRUE );
     virtual void			DestroyObject( SalObject* pObject );
 
+    virtual SalObject*			CreateSocket( SalFrame* pParent, BOOL bShow = TRUE);
+    virtual void			DestroySocket( SalObject* pObject );
+
+    virtual SalObject*			CreateMozObject( SalFrame* pParent, BOOL bShow = TRUE);
+    virtual void			DestroyMozObject( SalObject* pObject );
+
+
+
     // VirtualDevice
     // nDX and nDY in Pixel
     // nBitCount: 0 == Default(=as window) / 1 == Mono
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/inc/plugins/gtk/gtkinst.hxx ooo310-m17.fix/vcl/unx/inc/plugins/gtk/gtkinst.hxx
--- ooo310-m17/vcl/unx/inc/plugins/gtk/gtkinst.hxx	2009-08-18 15:17:30.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/inc/plugins/gtk/gtkinst.hxx	2009-08-19 09:01:51.000000000 +0200
@@ -91,6 +91,12 @@ public:
     virtual SalFrame*           CreateChildFrame( SystemParentData* pParent, ULONG nStyle );
     virtual SalObject*			CreateObject( SalFrame* pParent, SystemWindowData* pWindowData, BOOL bShow = TRUE );
     virtual SalSystem*			CreateSalSystem();
+
+    virtual SalObject*			CreateSocket( SalFrame* pParent, BOOL bShow = TRUE);
+    virtual void			DestroySocket( SalObject* pObject );
+
+    virtual SalObject*			CreateMozObject( SalFrame* pParent, BOOL bShow = TRUE);
+    virtual void			DestroyMozObject( SalObject* pObject );
 };
 
 class GtkSalSystem : public X11SalSystem
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/inc/plugins/gtk/gtkobject.hxx ooo310-m17.fix/vcl/unx/inc/plugins/gtk/gtkobject.hxx
--- ooo310-m17/vcl/unx/inc/plugins/gtk/gtkobject.hxx	2009-08-19 10:28:50.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/inc/plugins/gtk/gtkobject.hxx	2009-08-19 09:41:29.000000000 +0200
@@ -38,16 +38,28 @@
 
 class GtkSalObject : public SalObject
 {
+public:
+    static const int DRAWING_AREA = 1;
+    static const int SOCKET = 2;
+    static const int MOZ_EMBEDD = 3;
+private:
     SystemChildData		m_aSystemData;
     GtkWidget*			m_pSocket;
     GdkRegion*			m_pRegion;
+   int                  mozCount;
 
     // signals
     static gboolean		signalButton( GtkWidget*, GdkEventButton*, gpointer );
     static gboolean		signalFocus( GtkWidget*, GdkEventFocus*, gpointer );
     static void			signalDestroy( GtkObject*, gpointer );
+
+    static void signalFocusChild  (GtkContainer *container,
+                                   GtkWidget    *widget,
+                                   gpointer      user_data);
+
+
 public:
-    GtkSalObject( GtkSalFrame* pParent, BOOL bShow = TRUE );
+    GtkSalObject( GtkSalFrame* pParent, int type, BOOL bShow = TRUE );
     virtual ~GtkSalObject();
 
     // overload all pure virtual methods
@@ -61,6 +73,7 @@ public:
     virtual void					Show( BOOL bVisible );
     virtual void					Enable( BOOL nEnable );
     virtual void					GrabFocus();
+    virtual void					RemoveFocus();
 
     virtual void					SetBackground();
     virtual void					SetBackground( SalColor nSalColor );
@@ -69,6 +82,9 @@ public:
 
     virtual const SystemEnvData*	GetSystemData() const;
    
+    virtual void                    LoadUrl(char *url);   
+    virtual sal_uInt32              GetSocketId();
+   
 };
 
 #endif // _SV_SALOBJ_H
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/inc/plugins/kde/kdedata.hxx ooo310-m17.fix/vcl/unx/inc/plugins/kde/kdedata.hxx
--- ooo310-m17/vcl/unx/inc/plugins/kde/kdedata.hxx	2009-08-18 15:17:30.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/inc/plugins/kde/kdedata.hxx	2009-08-19 09:01:51.000000000 +0200
@@ -87,6 +87,12 @@ public:
             : X11SalInstance( pMutex ) {}
     virtual ~KDESalInstance() {}
     virtual SalFrame* CreateFrame( SalFrame* pParent, ULONG nStyle );
+
+    virtual SalObject*			CreateSocket( SalFrame* pParent, BOOL bShow = TRUE);
+    virtual void			DestroySocket( SalObject* pObject );
+
+    virtual SalObject*			CreateMozObject( SalFrame* pParent, BOOL bShow = TRUE);
+    virtual void			DestroyMozObject( SalObject* pObject );
 };
 
 class KDEXLib : public SalXLib
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/inc/salinst.h ooo310-m17.fix/vcl/unx/inc/salinst.h
--- ooo310-m17/vcl/unx/inc/salinst.h	2009-08-18 15:17:30.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/inc/salinst.h	2009-08-19 09:01:51.000000000 +0200
@@ -80,6 +80,13 @@ public:
     virtual SalObject*			CreateObject( SalFrame* pParent, SystemWindowData* pWindowData, BOOL bShow = TRUE );
     virtual void				DestroyObject( SalObject* pObject );
 
+    virtual SalObject*			CreateSocket( SalFrame* pParent, BOOL bShow = TRUE);
+    virtual void				DestroySocket( SalObject* pObject );    
+
+    virtual SalObject*			CreateMozObject( SalFrame* pParent, BOOL bShow = TRUE);
+    virtual void				DestroyMozObject( SalObject* pObject );    
+    
+
     virtual SalVirtualDevice*	CreateVirtualDevice( SalGraphics* pGraphics,
                                                      long nDX, long nDY,
                                                      USHORT nBitCount, const SystemGraphicsData *pData = NULL );
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/inc/salobj.h ooo310-m17.fix/vcl/unx/inc/salobj.h
--- ooo310-m17/vcl/unx/inc/salobj.h	2009-08-18 15:17:30.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/inc/salobj.h	2009-08-19 09:44:19.000000000 +0200
@@ -95,11 +95,15 @@ public:
     virtual void					Show( BOOL bVisible );
     virtual void					Enable( BOOL nEnable );
     virtual void					GrabFocus();
+    virtual void					RemoveFocus();
 
     virtual void					SetBackground();
     virtual void					SetBackground( SalColor nSalColor );
 
     virtual const SystemEnvData*	GetSystemData() const;
+ 	virtual void LoadUrl(char *url);
+ 	virtual sal_uInt32 GetSocketId();
+ 
    
 };
 
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/kde/salnativewidgets-kde.cxx ooo310-m17.fix/vcl/unx/kde/salnativewidgets-kde.cxx
--- ooo310-m17/vcl/unx/kde/salnativewidgets-kde.cxx	2009-08-18 15:17:30.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/kde/salnativewidgets-kde.cxx	2009-08-19 09:01:51.000000000 +0200
@@ -2105,6 +2105,26 @@ KDESalInstance::CreateFrame( SalFrame *p
     return new KDESalFrame( pParent, nStyle );
 }
 
+
+SalObject* KDESalInstance::CreateSocket( SalFrame* pParent, BOOL bShow)
+{
+    return NULL; //@TODO implement...
+}
+
+void KDESalInstance::DestroySocket( SalObject* pObject )
+{
+}
+
+SalObject* KDESalInstance::CreateMozObject( SalFrame* pParent, BOOL bShow)
+{
+    return NULL; //@TODO implement...
+}
+
+void KDESalInstance::DestroyMozObject( SalObject* pObject )
+{
+}
+
+
 // -----------------------------------------------------------------------
 // KDESalData pieces
 // -----------------------------------------------------------------------
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/unx/source/window/salobj.cxx ooo310-m17.fix/vcl/unx/source/window/salobj.cxx
--- ooo310-m17/vcl/unx/source/window/salobj.cxx	2009-08-18 15:17:30.000000000 +0200
+++ ooo310-m17.fix/vcl/unx/source/window/salobj.cxx	2009-08-19 09:01:51.000000000 +0200
@@ -199,6 +199,24 @@ void X11SalInstance::DestroyObject( SalO
     delete pObject;
 }
 
+SalObject* X11SalInstance::CreateSocket( SalFrame* pParent, BOOL bShow)
+{
+    return NULL;
+}
+
+void X11SalInstance::DestroySocket( SalObject* pObject )
+{
+}
+
+SalObject* X11SalInstance::CreateMozObject( SalFrame* pParent, BOOL bShow)
+{
+    return NULL;
+}
+
+void X11SalInstance::DestroyMozObject( SalObject* pObject )
+{
+}
+
 
 // ======================================================================
 // SalClipRegion is a member of SalObject
@@ -560,3 +578,16 @@ long X11SalObject::Dispatch( XEvent* pEv
     }
     return 0;
 }
+
+void X11SalObject::RemoveFocus()
+{
+}
+
+void X11SalObject::LoadUrl(char *url)
+{
+}
+
+sal_uInt32 X11SalObject::GetSocketId()
+{
+    return 0;
+}
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/vcl/util/makefile.mk ooo310-m17.fix/vcl/util/makefile.mk
--- ooo310-m17/vcl/util/makefile.mk	2009-08-19 10:28:58.000000000 +0200
+++ ooo310-m17.fix/vcl/util/makefile.mk	2009-08-19 09:01:51.000000000 +0200
@@ -211,6 +211,10 @@ SHL1OBJS=   $(SLO)$/salshl.obj
 SHL1RES=    $(RES)$/salsrc.res
 .ENDIF
 
+#LDFLAGS+=-L/usr/lib/xulrunner-1.8.0.1
+#SHL1STDLIBS+=-lgtkembedmoz
+
+
 SHL1DEF=    $(MISC)$/$(SHL1TARGET).def
 
 DEF1NAME    =$(SHL1TARGET)
@@ -331,6 +335,9 @@ PKGCONFIG_MODULES=gtk+-2.0 gthread-2.0
 .IF "$(ENABLE_DBUS)" != ""
 PKGCONFIG_MODULES+= dbus-glib-1
 .ENDIF
+.IF "$(ENABLE_GTKMOZEMBED)" != ""
+PKGCONFIG_MODULES=xulrunner-gtkmozembed
+.ENDIF
 .INCLUDE: pkg_config.mk
 
 LIB4TARGET=$(SLB)$/igtk_plug_
@@ -346,6 +353,7 @@ SHL4LIBS=$(LIB4TARGET)
 SHL4DEPN=$(SHL1IMPLIBN) $(SHL1TARGETN) $(SHL2IMPLIBN) $(SHL2TARGETN)
 # libs for gtk plugin
 SHL4STDLIBS+=$(PKGCONFIG_LIBS:s/ -lpangoxft-1.0//)
+#SHL4STDLIBS+=-lgtkembedmoz
 # hack for faked SO environment
 .IF "$(PKGCONFIG_ROOT)"!=""
 SHL4SONAME+=-z nodefs
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sfx2/inc/sfx2/sfxsids.hrc ooo310-m17.fix/sfx2/inc/sfx2/sfxsids.hrc
--- ooo310-m17/sfx2/inc/sfx2/sfxsids.hrc	2009-08-19 10:28:00.000000000 +0200
+++ ooo310-m17.fix/sfx2/inc/sfx2/sfxsids.hrc	2009-08-19 09:01:51.000000000 +0200
@@ -1186,6 +1186,8 @@
 #define SID_COMP_BIBLIOGRAPHY               (SID_SVX_START + 880)
 #define SID_ADDRESS_DATA_SOURCE             (SID_SVX_START + 934)
 
+#define SID_TEAM                       (SID_SVX_START + 1888)
+
 #define FID_SVX_START                       (SID_LIB_START + 500)
 #define FID_SEARCH_NOW                      (FID_SVX_START + 2)
 
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sfx2/inc/sfx2/team.hxx ooo310-m17.fix/sfx2/inc/sfx2/team.hxx
--- ooo310-m17/sfx2/inc/sfx2/team.hxx	1970-01-01 01:00:00.000000000 +0100
+++ ooo310-m17.fix/sfx2/inc/sfx2/team.hxx	2009-08-19 09:01:51.000000000 +0200
@@ -0,0 +1,40 @@
+/*
+ * written by Florian Reuter, (c) Novell Inc 2008
+ */
+
+#ifndef _SFXTEAM_HXX
+#define _SFXTEAM_HXX
+
+
+#include <sfx2/childwin.hxx>
+#include <sfx2/dockwin.hxx>
+
+class SfxTeamWrapper : public SfxChildWindow
+{
+
+public:
+    SfxTeamWrapper( Window* pParent ,
+            USHORT nId ,
+            SfxBindings* pBindings ,
+            SfxChildWinInfo* pInfo );
+    
+    SFX_DECL_CHILDWINDOW(SfxTeamWrapper);
+};
+
+class SfxTeam : public SfxDockingWindow
+{
+    SfxChildWindow*		pWrapper;
+
+public:
+    SfxTeam( SfxBindings* pBindings ,
+         SfxChildWindow* pChildWin ,
+         Window* pParent ,
+         WinBits nBits );
+    
+    virtual void 		Resize();
+    virtual void        Resizing( Size& rSize );
+    virtual BOOL        Close();
+};
+
+#endif
+
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sfx2/sdi/frmslots.sdi ooo310-m17.fix/sfx2/sdi/frmslots.sdi
--- ooo310-m17/sfx2/sdi/frmslots.sdi	2009-08-18 15:17:47.000000000 +0200
+++ ooo310-m17.fix/sfx2/sdi/frmslots.sdi	2009-08-19 09:04:28.000000000 +0200
@@ -59,6 +59,11 @@ interface Window
         ExecMethod = ChildWindowExecute ;
         StateMethod = ChildWindowState ;
     ]
+ 	SID_TEAM // status(final|play)
+ 	[
+ 		ExecMethod = ChildWindowExecute ;
+ 		StateMethod = ChildWindowState ;
+ 	]
     SID_BROWSER // ole(no) api()
     [
         ExecMethod = ChildWindowExecute ;
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sfx2/sdi/sfx.sdi ooo310-m17.fix/sfx2/sdi/sfx.sdi
--- ooo310-m17/sfx2/sdi/sfx.sdi	2009-08-19 10:28:59.000000000 +0200
+++ ooo310-m17.fix/sfx2/sdi/sfx.sdi	2009-08-19 09:01:51.000000000 +0200
@@ -4464,6 +4464,32 @@ SfxBoolItem Navigator SID_NAVIGATOR
     GroupId = GID_NAVIGATOR;
 ]
 //--------------------------------------------------------------------------
+SfxBoolItem Team SID_TEAM
+
+[
+    /* flags: */
+    AutoUpdate = TRUE,
+    Cachable = Cachable,
+    FastCall = FALSE,
+    HasCoreId = FALSE,
+    HasDialog = FALSE,
+    ReadOnlyDoc = TRUE,
+    Toggle = FALSE,
+    Container = FALSE,
+    RecordAbsolute = FALSE,
+    RecordPerSet;
+    Synchron;
+
+    Readonly = FALSE,
+
+    /* config: */
+    AccelConfig = TRUE,
+    MenuConfig = TRUE,
+    StatusBarConfig = FALSE,
+    ToolBoxConfig = TRUE,
+    GroupId = GID_NAVIGATOR;
+]
+//--------------------------------------------------------------------------
 SfxVoidItem RestoreEditingView SID_RESTORE_EDITING_VIEW
 
 [
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sfx2/source/appl/appreg.cxx ooo310-m17.fix/sfx2/source/appl/appreg.cxx
--- ooo310-m17/sfx2/source/appl/appreg.cxx	2009-08-19 10:28:20.000000000 +0200
+++ ooo310-m17.fix/sfx2/source/appl/appreg.cxx	2009-08-19 09:08:26.000000000 +0200
@@ -53,6 +53,7 @@
 #include <sfx2/objsh.hxx>
 #include <sfx2/viewsh.hxx>
 #include <sfx2/objface.hxx>
+#include <sfx2/team.hxx>
 
 //===================================================================
 
@@ -71,6 +72,7 @@ void SfxApplication::Registrations_Impl(
     SfxNavigatorWrapper::RegisterChildWindow( FALSE, NULL, SFX_CHILDWIN_NEVERHIDE );
     SfxPartChildWnd_Impl::RegisterChildWindow();
 	SfxTemplateDialogWrapper::RegisterChildWindow();
+    SfxTeamWrapper::RegisterChildWindow( FALSE, NULL, SFX_CHILDWIN_NEVERHIDE );
     SfxDockingWrapper::RegisterChildWindow();
 
     // Controller
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sfx2/source/dialog/makefile.mk ooo310-m17.fix/sfx2/source/dialog/makefile.mk
--- ooo310-m17/sfx2/source/dialog/makefile.mk	2009-08-18 15:17:47.000000000 +0200
+++ ooo310-m17.fix/sfx2/source/dialog/makefile.mk	2009-08-19 09:09:42.000000000 +0200
@@ -63,6 +63,7 @@ SLOFILES =\
         $(SLO)$/macropg.obj         \
         $(SLO)$/mgetempl.obj		\
         $(SLO)$/navigat.obj			\
+        $(SLO)$/team.obj			\
         $(SLO)$/newstyle.obj		\
         $(SLO)$/passwd.obj			\
         $(SLO)$/printopt.obj		\
diff -urpBN -x '*.orig' -x unxlngi6.pro ooo310-m17/sfx2/source/dialog/team.cxx ooo310-m17.fix/sfx2/source/dialog/team.cxx
--- ooo310-m17/sfx2/source/dialog/team.cxx	1970-01-01 01:00:00.000000000 +0100
+++ ooo310-m17.fix/sfx2/source/dialog/team.cxx	2009-08-19 09:01:51.000000000 +0200
@@ -0,0 +1,79 @@
+/*
+ * written by Florian Reuter, (c) Novell Inc 2008
+ */
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_sfx2.hxx"
+
+#ifndef GCC
+#endif
+
+#include <sfx2/team.hxx>
+#include <sfx2/sfx.hrc>
+#include <sfx2/app.hxx>
+#include "sfxresid.hxx"
+#include "helpid.hrc"
+
+SFX_IMPL_DOCKINGWINDOW( SfxTeamWrapper , SID_TEAM );
+
+SfxTeamWrapper::SfxTeamWrapper( Window* pParentWnd ,
+                     USHORT nId ,
+                     SfxBindings* pBindings ,
+                     SfxChildWinInfo* pInfo )
+    : SfxChildWindow( pParentWnd , nId )
+{
+    printf("SfxTeamWrapper::SfxTeamWrapper\n");
+    pWindow = new SfxTeam( pBindings, this, pParentWnd,
+               WB_STDDOCKWIN | WB_CLIPCHILDREN | WB_SIZEABLE | WB_3DLOOK | WB_ROLLABLE);
+//    eChildAlignment = SFX_ALIGN_NOALIGNMENT;
+    eChildAlignment = SFX_ALIGN_RIGHT;
+    printf("**ALIGN RIGHT**\n");
+    
+//    pWindow->SetHelpId ( HID_NAVIGATOR_WINDOW );
+    pWindow->SetOutputSizePixel( Size( 270, 240 ) );
+    
+    ( ( SfxDockingWindow* ) pWindow )->Initialize( pInfo );
+    SetHideNotDelete( TRUE );
+}
+
+
+SfxTeam::SfxTeam( SfxBindings* pBind ,
+          SfxChildWindow* pChildWin ,
+          Window* pParent ,
+          WinBits nBits )
+    : SfxDockingWindow( pBind ,
+            pChildWin ,
+            pParent ,
+            nBits )
+    , pWrapper( pChildWin )
+{
+//    SetText( String( SfxResId( SID_NAVIGATOR ) ) );
+    SetText( String::CreateFromAscii("Team Window"));
+}
+
+void SfxTeam::Resize()
+{
+    SfxDockingWindow::Resize();
+    if ( pWrapper->GetContextWindow() )
+        pWrapper->GetContextWindow()->SetSizePixel( GetOutputSizePixel() );
+}
+
+void SfxTeam::Resizing( Size &rSize )
+{
+    SfxDockingWindow::Resizing( rSize );
+    
+    SfxChildWindowContext *pCon = GetChildWindow_Impl()->GetContext_Impl();
+    DBG_ASSERT( pCon, "Kein Context!" );
+    if ( pCon )
+    pCon->Resizing( rSize );
+}
+
+BOOL SfxTeam::Close()
+{
+    SfxChildWindowContext *pCon = GetChildWindow_Impl()->GetContext_Impl();
+    DBG_ASSERT( pCon, "Kein Context!" );
+    if ( !pCon || pCon->Close() )
+    return SfxDockingWindow::Close();
+    else
+    return FALSE;
+}
