--- solenv/bin/deliver.pl
+++ solenv/bin/deliver.pl
@@ -113,9 +113,11 @@
 
 if ($^O ne 'cygwin') {              # iz59477 - cygwin needes a dot "." at the end of filenames to disable
   $maybedot     = '';               # some .exe transformation magic.
-} else {
+} elsif ( `uname -r` lt '1.7') {    # but not in cygwin 1.7 it seems
   $maybedot     = '.';
-}
+} else {
+  $maybedot     = '';
+}
 
 ($gui		= lc($ENV{GUI})) 		|| die "Can't determine 'GUI'. Please set environment.\n";
 $tempcounter        = 0;
@@ -840,6 +840,15 @@
             sleep $try;
             $try ++;
             $success = rename($temp_file, $to);
+            # handle Cygwin crack: when renaming soffice.bin.2900-1253705626
+            # to soffice.bin, Cygwin 1.7 silently appends an .exe
+            # giving soffice.bin.exe.
+            if ( $success &&
+                 $^O eq 'cygwin' && 
+                 -f $to.".exe" )
+            {
+                $success = rename ($to.".exe", $to);
+            }
         }
         if ( $success ) {
             # handle special packaging of *.dylib files for Mac OS X
--- packimages/pack/makefile.mk
+++ packimages/pack/makefile.mk
@@ -91,7 +91,7 @@
 
 # unpack the classic icon set
 $(MISC)$/classic.flag : $(CLASSIC_TARBALL)
-    cd $(MISC) && gunzip -c $(CLASSIC_TARBALL) | ( tar -xf - ) && $(TOUCH) $(@:f)
+    cd $(MISC) && gunzip -d -c $(CLASSIC_TARBALL) | ( tar -xf - ) && $(TOUCH) $(@:f)
 .IF "$(GUI)"=="UNX"
     chmod -R g+w $(MISC)$/classic
 .ENDIF
--- solenv/bin/modules/installer/control.pm
+++ solenv/bin/modules/installer/control.pm
@@ -91,9 +91,14 @@
     
     if( $^O =~ /cygwin/i )
     {	# When using cygwin's perl the PATH variable is POSIX style and ...
-        $pathvariable = qx{cygpath -mp "$pathvariable"} ;
+        my $temparrayref = installer::converter::convert_stringlist_into_array_without_newline(\$pathvariable, $local_pathseparator);
+        foreach $i (0..$#$temparrayref) {
+            $$temparrayref[$i] = qx{cygpath -m "$$temparrayref[$i]"};
+            chomp($$temparrayref[$i]);
+        }
         # has to be converted to DOS style for further use.
         $local_pathseparator = ';';
+        $pathvariable = join($local_pathseparator, @$temparrayref);
     }
     my $patharrayref = installer::converter::convert_stringlist_into_array(\$pathvariable, $local_pathseparator);
 
