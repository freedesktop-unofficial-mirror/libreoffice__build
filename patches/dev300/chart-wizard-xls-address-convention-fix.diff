diff --git sc/source/ui/unoobj/chart2uno.cxx sc/source/ui/unoobj/chart2uno.cxx
index 3f5a31a..4f16c3f 100644
--- sc/source/ui/unoobj/chart2uno.cxx
+++ sc/source/ui/unoobj/chart2uno.cxx
@@ -274,7 +274,9 @@ void lcl_SeperateOneRowRange(ScRange aR, const ScAddress& rPos, ScRangeListRef&
     }
 
     ScRangeList aRangeList;
-    USHORT nResult = aRangeList.Parse( aRangeRepresentation, m_pDocument );
+    USHORT nResult = aRangeList.Parse( aRangeRepresentation, m_pDocument, SCA_VALID, 
+                                       m_pDocument->GetAddressConvention() );
+
     //! if anything is missing, SCA_VALID shouldn't be set
     const USHORT nNeeded = SCA_VALID | SCA_VALID_COL | SCA_VALID_ROW | SCA_VALID_TAB |
                            SCA_VALID_COL2 | SCA_VALID_ROW2 | SCA_VALID_TAB2;
@@ -331,7 +333,8 @@ ScChart2DataProvider::createDataSource(
     }
 
     ScRangeListRef aRangeList = new ScRangeList;
-    USHORT nValid = aRangeList->Parse( aRangeRepresentation, m_pDocument);
+    USHORT nValid = aRangeList->Parse( aRangeRepresentation, m_pDocument, SCA_VALID,
+                                       m_pDocument->GetAddressConvention() );
     if ( (nValid & SCA_VALID) == SCA_VALID )
     {
         if(bLabel)
@@ -649,7 +652,7 @@ void lcl_detectRanges(
     {
         ScRangePtr pR;
         ScRangeListRef aRangeList = new ScRangeList;
-        aRangeList->Parse( (*aIt), pDoc);
+        aRangeList->Parse( (*aIt), pDoc, SCA_VALID, pDoc->GetAddressConvention() );
         for ( pR = aRangeList->First(); pR; pR = aRangeList->Next() )
         {
             bRowSourceAmbiguous = bRowSourceAmbiguous || (pR->aStart.Tab() != pR->aEnd.Tab());
@@ -833,7 +836,7 @@ uno::Sequence< beans::PropertyValue > SAL_CALL ScChart2DataProvider::detectArgum
 
         //get range string
         String sRet;
-        xRanges->Format(sRet, SCR_ABS_3D, m_pDocument);
+        xRanges->Format(sRet, SCR_ABS_3D, m_pDocument, m_pDocument->GetAddressConvention() );
         sRangeRep = ::rtl::OUString( sRet );
     }
 
@@ -886,7 +889,7 @@ uno::Sequence< beans::PropertyValue > SAL_CALL ScChart2DataProvider::detectArgum
         if( addUpperLeftCornerIfMissing( xRanges ) )
         {
             String sRange;
-            xRanges->Format( sRange, SCR_ABS_3D, m_pDocument );
+            xRanges->Format( sRange, SCR_ABS_3D, m_pDocument, m_pDocument->GetAddressConvention() );
             sRangeRep = ::rtl::OUString( sRange );
         }
     }
@@ -980,7 +983,8 @@ uno::Sequence< beans::PropertyValue > SAL_CALL ScChart2DataProvider::detectArgum
         return false;
 
     ScRangeList aRangeList;
-    USHORT nResult = aRangeList.Parse( aRangeRepresentation, m_pDocument );
+    USHORT nResult = aRangeList.Parse( aRangeRepresentation, m_pDocument, SCA_VALID, 
+                                       m_pDocument->GetAddressConvention() );
     //! if anything is missing, SCA_VALID shouldn't be set
     const USHORT nNeeded = SCA_VALID | SCA_VALID_COL | SCA_VALID_ROW | SCA_VALID_TAB |
                            SCA_VALID_COL2 | SCA_VALID_ROW2 | SCA_VALID_TAB2;
@@ -1602,7 +1606,7 @@ uno::Sequence< rtl::OUString > SAL_CALL ScChart2DataSequence::getTextualData(  )
 	String	aStr;
     DBG_ASSERT( m_pDocument, "No Document -> no SourceRangeRepresentation" );
     if( m_pDocument )
-	    m_xRanges->Format( aStr, SCR_ABS_3D, m_pDocument );
+	    m_xRanges->Format( aStr, SCR_ABS_3D, m_pDocument, m_pDocument->GetAddressConvention() );
 	return aStr;
 }
 
@@ -2119,7 +2123,7 @@ uno::Sequence< rtl::OUString > SAL_CALL ScChart2EmptyDataSequence::getTextualDat
 	String	aStr;
     DBG_ASSERT( m_pDocument, "No Document -> no SourceRangeRepresentation" );
     if( m_pDocument )
-	    m_xRanges->Format( aStr, SCR_ABS_3D, m_pDocument );
+	    m_xRanges->Format( aStr, SCR_ABS_3D, m_pDocument, m_pDocument->GetAddressConvention() );
 	return aStr;
 }
 
