diff --git sw/source/filter/ww8/wrtw8sty.cxx sw/source/filter/ww8/wrtw8sty.cxx
index 1528f49..3a98298 100644
--- sw/source/filter/ww8/wrtw8sty.cxx
+++ sw/source/filter/ww8/wrtw8sty.cxx
@@ -973,7 +973,8 @@ void WW8_WrPlcSepx::SetFooterFlag( BYTE& rHeadFootFlags, const SwFmt& rFmt,
 }
 
 void WW8_WrPlcSepx::OutHeader( SwWW8Writer& rWrt, const SwFmt& rFmt,
-                                ULONG& rCpPos, BYTE nHFFlags, BYTE nFlag )
+			       ULONG& rCpPos, BYTE nHFFlags, BYTE nFlag,
+			       BYTE nBreakCode)
 {
     if( nFlag & nHFFlags )
     {
@@ -989,7 +990,7 @@ void WW8_WrPlcSepx::OutHeader( SwWW8Writer& rWrt, const SwFmt& rFmt,
     else if( rWrt.bWrtWW8 )
     {
         pTxtPos->Append( rCpPos );
-        if (rWrt.bHasHdr)
+        if (rWrt.bHasHdr && nBreakCode!=0)
         {
             rWrt.WriteStringAsPara( aEmptyStr ); // Empty paragraph for empty header
             rWrt.WriteStringAsPara( aEmptyStr ); // a CR that WW8 needs for end of the stream
@@ -998,7 +999,8 @@ void WW8_WrPlcSepx::OutHeader( SwWW8Writer& rWrt, const SwFmt& rFmt,
     }
 }
 void WW8_WrPlcSepx::OutFooter( SwWW8Writer& rWrt, const SwFmt& rFmt,
-                                ULONG& rCpPos, BYTE nHFFlags, BYTE nFlag )
+			       ULONG& rCpPos, BYTE nHFFlags, BYTE nFlag,
+			       BYTE nBreakCode )
 {
     if( nFlag & nHFFlags )
     {
@@ -1011,7 +1013,7 @@ void WW8_WrPlcSepx::OutFooter( SwWW8Writer& rWrt, const SwFmt& rFmt,
         rWrt.WriteStringAsPara( aEmptyStr ); // CR ans Ende ( sonst mault WW )
         rCpPos = rWrt.Fc2Cp( rWrt.Strm().Tell() );
     }
-    else if( rWrt.bWrtWW8 )
+    else if( rWrt.bWrtWW8 && nBreakCode!=0 )
     {
         pTxtPos->Append( rCpPos );
         if (rWrt.bHasFtr)
@@ -1520,25 +1522,25 @@ bool WW8_WrPlcSepx::WriteKFTxt(SwWW8Writer& rWrt)
 
         rWrt.SetHdFtIndex(++nHdFtGroup);
         if( !(nHeadFootFlags & WW8_HEADER_EVEN) && rWrt.pDop->fFacingPages )
-            OutHeader( rWrt, *pPdFmt, nCpPos, nHeadFootFlags, WW8_HEADER_ODD );
+	  OutHeader( rWrt, *pPdFmt, nCpPos, nHeadFootFlags, WW8_HEADER_ODD, nBreakCode );
         else
-            OutHeader( rWrt, *pPdLeftFmt, nCpPos, nHeadFootFlags, WW8_HEADER_EVEN );
+	  OutHeader( rWrt, *pPdLeftFmt, nCpPos, nHeadFootFlags, WW8_HEADER_EVEN, nBreakCode );
         rWrt.SetHdFtIndex(++nHdFtGroup);
-        OutHeader( rWrt, *pPdFmt, nCpPos, nHeadFootFlags, WW8_HEADER_ODD );
+        OutHeader( rWrt, *pPdFmt, nCpPos, nHeadFootFlags, WW8_HEADER_ODD, nBreakCode );
 
         rWrt.SetHdFtIndex(++nHdFtGroup);
         if( !(nHeadFootFlags & WW8_FOOTER_EVEN) && rWrt.pDop->fFacingPages )
-            OutFooter( rWrt, *pPdFmt, nCpPos, nHeadFootFlags, WW8_FOOTER_ODD );
+	  OutFooter( rWrt, *pPdFmt, nCpPos, nHeadFootFlags, WW8_FOOTER_ODD, nBreakCode );
         else
-            OutFooter( rWrt, *pPdLeftFmt, nCpPos, nHeadFootFlags, WW8_FOOTER_EVEN );
+	  OutFooter( rWrt, *pPdLeftFmt, nCpPos, nHeadFootFlags, WW8_FOOTER_EVEN, nBreakCode );
         rWrt.SetHdFtIndex(++nHdFtGroup);
-        OutFooter( rWrt, *pPdFmt, nCpPos, nHeadFootFlags, WW8_FOOTER_ODD );
+        OutFooter( rWrt, *pPdFmt, nCpPos, nHeadFootFlags, WW8_FOOTER_ODD, nBreakCode );
 
         //#i24344# Drawing objects cannot be directly shared between main hd/ft
         //and title hd/ft so we need to differenciate them
         rWrt.SetHdFtIndex(++nHdFtGroup);
-        OutHeader( rWrt, *pPdFirstPgFmt, nCpPos, nHeadFootFlags, WW8_HEADER_FIRST );
-        OutFooter( rWrt, *pPdFirstPgFmt, nCpPos, nHeadFootFlags, WW8_FOOTER_FIRST );
+        OutHeader( rWrt, *pPdFirstPgFmt, nCpPos, nHeadFootFlags, WW8_HEADER_FIRST, nBreakCode );
+        OutFooter( rWrt, *pPdFirstPgFmt, nCpPos, nHeadFootFlags, WW8_FOOTER_FIRST, nBreakCode );
         rWrt.SetHdFtPageRoot(pOldPageRoot);
     }
     rWrt.SetHdFtIndex(nOldIndex); //0
diff --git sw/source/filter/ww8/wrtww8.hxx sw/source/filter/ww8/wrtww8.hxx
index 69f0e4f..d11049f 100644
--- sw/source/filter/ww8/wrtww8.hxx
+++ sw/source/filter/ww8/wrtww8.hxx
@@ -195,9 +195,11 @@ private:
     void WriteOlst( SwWW8Writer& rWrt, USHORT i );
     void WriteFtnEndTxt( SwWW8Writer& rWrt, ULONG nCpStt );
     void OutHeader( SwWW8Writer& rWrt, const SwFmt& rFmt,
-                        ULONG& rCpPos, BYTE nHFFlags, BYTE nFlag );
+		    ULONG& rCpPos, BYTE nHFFlags, BYTE nFlag,
+		    BYTE nBreakCode);
     void OutFooter( SwWW8Writer& rWrt, const SwFmt& rFmt,
-                        ULONG& rCpPos, BYTE nHFFlags, BYTE nFlag );
+		    ULONG& rCpPos, BYTE nHFFlags, BYTE nFlag,
+		    BYTE nBreakCode);
     static void SetHeaderFlag( BYTE& rHeadFootFlags, const SwFmt& rFmt,
                                   BYTE nFlag );
     static void SetFooterFlag( BYTE& rHeadFootFlags, const SwFmt& rFmt,
