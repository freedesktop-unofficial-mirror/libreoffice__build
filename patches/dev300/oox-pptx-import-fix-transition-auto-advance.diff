diff -rup oox-orig/inc/oox/ppt/slidetransition.hxx oox/inc/oox/ppt/slidetransition.hxx
--- oox-orig/inc/oox/ppt/slidetransition.hxx	2009-05-14 16:18:57.000000000 +0200
+++ oox/inc/oox/ppt/slidetransition.hxx	2009-05-14 16:31:11.000000000 +0200
@@ -54,6 +54,8 @@ namespace oox { namespace ppt {
 			{ mnFadeColor = nColor; }
 		void setMode( sal_Bool bMode )
 			{ mbMode = bMode; }
+	        void setOoxAdvanceTime( sal_Int32 nAdvanceTime )
+		        { mnAdvanceTime = nAdvanceTime; }
 
     static sal_Int16 ooxToOdpDirection( ::sal_Int32 nOoxType );
     static sal_Int16 ooxToOdpEightDirections( ::sal_Int32 nOoxType );
@@ -71,6 +73,7 @@ namespace oox { namespace ppt {
 		::sal_Int16 mnAnimationSpeed;
 		::sal_Int32 mnFadeColor;
 		::sal_Bool  mbMode; /**< http://api.openoffice.org/docs/common/ref/com/sun/star/animations/XTransitionFilter.html Mode property */
+		::sal_Int32 mnAdvanceTime;
 	};
 
 } }
diff -rup oox-orig/source/ppt/slidetransitioncontext.cxx oox/source/ppt/slidetransitioncontext.cxx
--- oox-orig/source/ppt/slidetransitioncontext.cxx	2009-05-14 16:18:58.000000000 +0200
+++ oox/source/ppt/slidetransitioncontext.cxx	2009-05-14 17:40:17.000000000 +0200
@@ -71,12 +71,9 @@ SlideTransitionContext::SlideTransitionC
 	attribs.getBool( XML_advClick, true );
 
 	// careful. if missing, no auto advance... 0 looks like a valid value
-  // for auto advance
+	// for auto advance
 	if(attribs.hasAttribute( XML_advTm ))
-	{
-		// TODO
-		xAttribs->getOptionalValue( XML_advTm );
-	}
+	    maTransition.setOoxAdvanceTime( attribs.getInteger( XML_advTm, -1 ) );
 }
 
 SlideTransitionContext::~SlideTransitionContext() throw()
diff -rup oox-orig/source/ppt/slidetransition.cxx oox/source/ppt/slidetransition.cxx
--- oox-orig/source/ppt/slidetransition.cxx	2009-05-14 16:18:58.000000000 +0200
+++ oox/source/ppt/slidetransition.cxx	2009-05-14 17:40:03.000000000 +0200
@@ -58,6 +58,7 @@ namespace oox { namespace ppt {
 		, mnAnimationSpeed( AnimationSpeed_FAST )
 		, mnFadeColor( 0 )
 		, mbMode( true )
+		, mnAdvanceTime( -1 )
 	{
 
 	}
@@ -70,6 +71,7 @@ namespace oox { namespace ppt {
 		, mnAnimationSpeed( AnimationSpeed_FAST )
 		, mnFadeColor( 0 )
 		, mbMode( true )
+		, mnAdvanceTime( -1 )
 	{
 		const transition *p = transition::find( sFilterName );
 		if( p )
@@ -90,6 +92,10 @@ namespace oox { namespace ppt {
 			aProps[ PROP_TransitionDirection ] <<= mbTransitionDirectionNormal;
 			aProps[ PROP_Speed ] <<= mnAnimationSpeed;
 			aProps[ PROP_TransitionFadeColor ] <<= mnFadeColor;
+			if( mnAdvanceTime != -1 ) {
+			    aProps[ CREATE_OUSTRING( "Duration" ) ] <<= mnAdvanceTime/1000;
+			    aProps[ CREATE_OUSTRING( "Change" ) ] <<= static_cast<sal_Int32>(1);
+			}
 		}
 		catch( Exception& )
 		{
@@ -140,8 +146,6 @@ namespace oox { namespace ppt {
 		}
 	}
 
-
-
 	sal_Int16 SlideTransition::ooxToOdpEightDirections( ::sal_Int32 nOoxType )
 	{
     sal_Int16 nOdpDirection;
