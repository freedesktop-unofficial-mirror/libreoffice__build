--- jvmfwk/plugins/sunmajor/pluginlib/sunjavaplugin.cxx.old	2010-01-10 08:36:00.000000000 +0100
+++ jvmfwk/plugins/sunmajor/pluginlib/sunjavaplugin.cxx	2010-01-21 16:43:06.000000000 +0100
@@ -530,7 +530,7 @@ javaPluginError jfw_plugin_startJavaVirt
     JavaVMInitArgs vm_args;
 
     boost::scoped_array<JavaVMOption> sarOptions(
-        new JavaVMOption[cOptions + 1]);
+        new JavaVMOption[cOptions + 2]);
     JavaVMOption * options = sarOptions.get();
     
     // We set an abort handler which is called when the VM calls _exit during
@@ -539,6 +539,8 @@ javaPluginError jfw_plugin_startJavaVirt
     // all versions below 1.5.1
     options[0].optionString= (char *) "abort";
     options[0].extraInfo= (void* )(sal_IntPtr)abort_handler;
+    options[1].optionString= (char *) "-Xss1m";
+    options[1].extraInfo= NULL;
     rtl::OString sClassPathProp("-Djava.class.path=");
     rtl::OString sClassPathOption;
     for (int i = 0; i < cOptions; i++)
@@ -555,19 +557,19 @@ javaPluginError jfw_plugin_startJavaVirt
                 sClassPathOption = sClassPath + rtl::OString(sep) + sAddPath;
             else
                 sClassPathOption = sClassPath;
-            options[i+1].optionString = (char *) sClassPathOption.getStr();
-            options[i+1].extraInfo = arOptions[i].extraInfo;
+            options[i+2].optionString = (char *) sClassPathOption.getStr();
+            options[i+2].extraInfo = arOptions[i].extraInfo;
         }
         else
         {
 #endif        
-            options[i+1].optionString = arOptions[i].optionString;
-            options[i+1].extraInfo = arOptions[i].extraInfo;
+            options[i+2].optionString = arOptions[i].optionString;
+            options[i+2].extraInfo = arOptions[i].extraInfo;
 #ifdef UNX
         }
 #endif
 #if OSL_DEBUG_LEVEL >= 2
-        JFW_TRACE2(OString("VM option: ") + OString(options[i+1].optionString) +
+        JFW_TRACE2(OString("VM option: ") + OString(options[i+2].optionString) +
                    OString("\n"));
 #endif
     }
@@ -578,7 +580,7 @@ javaPluginError jfw_plugin_startJavaVirt
     vm_args.version= JNI_VERSION_1_2;
 #endif
     vm_args.options= options;
-    vm_args.nOptions= cOptions + 1;
+    vm_args.nOptions= cOptions + 2;
     vm_args.ignoreUnrecognized= JNI_TRUE;
 
     /* We set a global flag which is used by the abort handler in order to
