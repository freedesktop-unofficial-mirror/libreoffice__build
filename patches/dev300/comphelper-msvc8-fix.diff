--- comphelper/inc/comphelper/stlunosequence.hxx	14 May 2008 09:31:23 -0000	1.2
+++ comphelper/inc/comphelper/stlunosequence.hxx	26 May 2008 15:54:15 -0000
@@ -82,8 +82,15 @@ namespace comphelper { namespace stlunos
             typedef const V& reference;
             StlSequenceConstIterator();
             StlSequenceConstIterator(S * uno_sequence, typename StlSequenceIterator<S,V>::difference_type by);
-            typename StlSequenceIterator<S,V>::const_reference operator*() const;
-            typename StlSequenceIterator<S,V>::const_reference operator[](const typename StlSequenceIterator<S,V>::difference_type by) const;
+            typename StlSequenceIterator<S,V>::const_reference operator*() const
+            {
+                return (*(this->m_UnoSequence))[this->m_Index];
+            }
+
+            typename StlSequenceIterator<S,V>::const_reference operator[](const typename StlSequenceIterator<S,V>::difference_type by) const
+            {
+                return (*(this->m_UnoSequence))[this->m_Index+by];
+            }
     };
 
     template<typename S, typename V>
@@ -151,12 +158,6 @@ namespace comphelper { namespace stlunos
     }
 
     template<typename S, typename V>
-    inline typename StlSequenceIterator<S,V>::const_reference StlSequenceConstIterator<S, V>::operator*() const
-    {
-        return (*(this->m_UnoSequence))[this->m_Index];
-    }
-
-    template<typename S, typename V>
     inline StlSequenceIterator<S,V>& StlSequenceIterator<S, V>::operator++()
     {
         ++m_Index;
@@ -278,12 +279,6 @@ namespace comphelper { namespace stlunos
         return (*(this->m_UnoSequence))[this->m_Index+by];
     }
 
-    template<typename S, typename V>
-    inline typename StlSequenceIterator<S,V>::const_reference StlSequenceConstIterator<S, V>::operator[](const typename StlSequenceIterator<S,V>::difference_type by) const
-    {
-        return (*(this->m_UnoSequence))[this->m_Index+by];
-    }
-
     // StlSequence
     template<typename S, typename V>
     StlSequence<S,V>::StlSequence(S& uno_sequence)
