diff --git sc/inc/compiler.hxx sc/inc/compiler.hxx
index 7f95858..bfbe244 100644
--- sc/inc/compiler.hxx
+++ sc/inc/compiler.hxx
@@ -398,6 +398,7 @@ private:
     static NonConstOpCodeMapPtr  mxSymbolsPODF;                          // ODF 1.1 symbols
     static NonConstOpCodeMapPtr  mxSymbolsNative;                        // native symbols
     static NonConstOpCodeMapPtr  mxSymbolsEnglish;                       // English symbols
+    static NonConstOpCodeMapPtr  mxSymbolsEnglishXL;                     // English Excel symbols (for VBA formula parsing)
     static CharClass            *pCharClassEnglish;                      // character classification for en_US locale
     static const Convention     *pConventions[ ScAddress::CONV_LAST ];
 
@@ -519,6 +520,7 @@ public:
 private:
     static void InitSymbolsPODF();      /// only SymbolsPODF, on demand
     static void InitSymbolsODFF();      /// only SymbolsODFF, on demand
+    static void InitSymbolsEnglishXL(); /// only SymbolsEnglishXL, on demand
     static void fillFromAddInMap( NonConstOpCodeMapPtr xMap, size_t nSymbolOffset );
     static void fillFromAddInCollectionUpperName( NonConstOpCodeMapPtr xMap );
     static void fillFromAddInCollectionEnglishName( NonConstOpCodeMapPtr xMap );
diff --git sc/inc/grammar.hxx sc/inc/grammar.hxx
index 91df652..d6dddfa 100644
--- sc/inc/grammar.hxx
+++ sc/inc/grammar.hxx
@@ -112,6 +112,16 @@ public:
         GRAM_NATIVE_XL_R1C1 = ::com::sun::star::sheet::FormulaLanguage::NATIVE  |
                                 ((ScAddress::CONV_XL_R1C1       +
                                   kConventionOffset) << kConventionShift),
+        /// English with Excel A1 reference style.
+        GRAM_ENGLISH_XL_A1   = ::com::sun::star::sheet::FormulaLanguage::XL_ENGLISH  |
+                                ((ScAddress::CONV_XL_A1         +
+                                  kConventionOffset) << kConventionShift)            |
+                                kEnglishBit,
+        /// English with Excel R1C1 reference style.
+        GRAM_ENGLISH_XL_R1C1 = ::com::sun::star::sheet::FormulaLanguage::XL_ENGLISH  |
+                                ((ScAddress::CONV_XL_R1C1       +
+                                  kConventionOffset) << kConventionShift)            |
+                                kEnglishBit,
         /// Central definition of the default grammar to be used.
         GRAM_DEFAULT        = GRAM_NATIVE_UI,
 
@@ -162,6 +172,8 @@ public:
             case GRAM_NATIVE_ODF     :
             case GRAM_NATIVE_XL_A1   :
             case GRAM_NATIVE_XL_R1C1 :
+            case GRAM_ENGLISH_XL_A1  :
+            case GRAM_ENGLISH_XL_R1C1:
                 return true;
             default:
                 return extractFormulaLanguage( eGrammar) == GRAM_EXTERNAL;
diff --git sc/source/core/tool/compiler.cxx sc/source/core/tool/compiler.cxx
index 8ccb188..ccc9f2f 100644
--- sc/source/core/tool/compiler.cxx
+++ sc/source/core/tool/compiler.cxx
@@ -109,6 +109,7 @@ ScCompiler::NonConstOpCodeMapPtr    ScCompiler::mxSymbolsODFF;
 ScCompiler::NonConstOpCodeMapPtr    ScCompiler::mxSymbolsPODF;
 ScCompiler::NonConstOpCodeMapPtr    ScCompiler::mxSymbolsNative;
 ScCompiler::NonConstOpCodeMapPtr    ScCompiler::mxSymbolsEnglish;
+ScCompiler::NonConstOpCodeMapPtr    ScCompiler::mxSymbolsEnglishXL;
 CharClass*                          ScCompiler::pCharClassEnglish = NULL;
 const ScCompiler::Convention*       ScCompiler::pConventions[ ]   = { NULL, NULL, NULL, NULL, NULL, NULL };
 
@@ -474,6 +475,26 @@ void ScCompiler::InitSymbolsODFF()
     fillFromAddInCollectionUpperName( mxSymbolsODFF);
 }
 
+void ScCompiler::InitSymbolsEnglishXL()
+{
+    if (mxSymbolsEnglishXL.get())
+        return;
+
+    // Not core
+    mxSymbolsEnglishXL.reset( new OpCodeMap( SC_OPCODE_LAST_OPCODE_ID + 1,
+                false, ScGrammar::GRAM_ENGLISH));
+    ScOpCodeList aOpCodeList( RID_SC_FUNCTION_NAMES_ENGLISH, mxSymbolsEnglishXL );
+
+    fillFromAddInMap( mxSymbolsEnglishXL, offsetof( AddInMap, pEnglish));
+    // Fill from collection for AddIns not already present.
+    fillFromAddInCollectionEnglishName( mxSymbolsEnglishXL);
+
+    // For now, just replace the separators to the Excel English variants.
+    mxSymbolsEnglishXL->putOpCode(sal_Unicode(','), ocSep);
+    mxSymbolsEnglishXL->putOpCode(sal_Unicode(','), ocArrayColSep);
+    mxSymbolsEnglishXL->putOpCode(sal_Unicode(';'), ocArrayRowSep);
+}
+
 #ifdef erGENERATEMAPPING
 // Run in en-US UI by calling from within gdb, edit pODFF entries afterwards.
 void dbg_call_generateMappingODFF()
@@ -686,6 +707,11 @@ ScCompiler::OpCodeMapPtr ScCompiler::GetOpCodeMap( const sal_Int32 nLanguage )
                 InitSymbolsNative();
             xMap = mxSymbolsNative;
             break;
+        case FormulaLanguage::XL_ENGLISH:
+            if (!mxSymbolsEnglishXL)
+                InitSymbolsEnglishXL();
+            xMap = mxSymbolsEnglishXL;
+            break;
         default:
             ;   // nothing, NULL map returned
     }
