Index: sd/source/core/stlsheet.cxx
===================================================================
RCS file: /cvs/graphics/sd/source/core/stlsheet.cxx,v
retrieving revision 1.18
diff -u -r1.18 stlsheet.cxx
--- sd/source/core/stlsheet.cxx	2 Aug 2007 18:22:18 -0000	1.18
+++ sd/source/core/stlsheet.cxx	6 Dec 2007 23:25:58 -0000
@@ -220,7 +220,7 @@
 
 										EE_PARA_START, 					EE_CHAR_END,
 
-										SDRATTR_XMLATTRIBUTES,			SDRATTR_XMLATTRIBUTES,
+										SDRATTR_XMLATTRIBUTES,			SDRATTR_TEXT_USEFIXEDCELLHEIGHT,
 
 										SDRATTR_3D_FIRST, SDRATTR_3D_LAST,
 										0, 0 };
@@ -260,7 +260,7 @@
 
 											 EE_PARA_START,                 EE_CHAR_END,
 
-											SDRATTR_XMLATTRIBUTES,			SDRATTR_XMLATTRIBUTES,
+											SDRATTR_XMLATTRIBUTES,			SDRATTR_TEXT_USEFIXEDCELLHEIGHT,
 
 											SDRATTR_3D_FIRST, SDRATTR_3D_LAST,
 											 0, 0 };
Index: sd/source/filter/eppt/eppt.cxx
===================================================================
RCS file: /cvs/graphics/sd/source/filter/eppt/eppt.cxx,v
retrieving revision 1.58
diff -u -r1.58 eppt.cxx
--- sd/source/filter/eppt/eppt.cxx	27 Jun 2007 15:38:30 -0000	1.58
+++ sd/source/filter/eppt/eppt.cxx	6 Dec 2007 23:25:59 -0000
@@ -2419,10 +2419,17 @@
         sal_Int16 nLineSpacing = aParagraphObj.mnLineSpacing;
         if ( nLineSpacing > 0 ) // if nLinespacing is < 0 the linespacing is an absolute spacing
         {
-            const FontCollectionEntry* pDesc = rFontCollection.GetById( rCharLevel.mnFont );
-            if ( pDesc )
-                 nLineSpacing = (sal_Int16)( (double)nLineSpacing * pDesc->Scaling + 0.5 );
-        }
+			sal_Bool bFixedLineSpacing;
+			uno::Any aAny = rXPropSet->getPropertyValue( ::rtl::OUString( 
+															 RTL_CONSTASCII_USTRINGPARAM( 
+																 "FontIndependentLineSpacing" ) ) );
+			if( !(aAny >>= bFixedLineSpacing) || !bFixedLineSpacing ) 
+			{
+				const FontCollectionEntry* pDesc = rFontCollection.GetById( rCharLevel.mnFont );
+				if ( pDesc )
+					nLineSpacing = (sal_Int16)( (double)nLineSpacing * pDesc->Scaling + 0.5 );
+			}
+		}
         else
         {
             if ( rCharLevel.mnFontHeight > (sal_uInt16)( ((double)-nLineSpacing) * 0.001 * 72.0 / 2.54 ) ) // 1/100mm to point
Index: svx/source/svdraw/svdfppt.cxx
===================================================================
RCS file: /cvs/graphics/svx/source/svdraw/svdfppt.cxx,v
retrieving revision 1.154
diff -u -r1.154 svdfppt.cxx
--- svx/source/svdraw/svdfppt.cxx	31 Jul 2007 17:32:32 -0000	1.154
+++ svx/source/svdraw/svdfppt.cxx	6 Dec 2007 23:26:00 -0000
@@ -6324,18 +6324,13 @@
 			pPortion->GetAttrib( PPT_CharAttr_FontHeight, nFontHeight, nDestinationInstance );
 			nVal2 = -(sal_Int16)( ( nFontHeight * nVal * 8 ) / 100 );
 		}
+		rSet.Put( SdrTextFixedCellHeightItem( TRUE ), SDRATTR_TEXT_USEFIXEDCELLHEIGHT );
 		SvxLineSpacingItem aItem( 200, EE_PARA_SBL );
 		if ( nVal2 <= 0 )
 			aItem.SetLineHeight( (UINT16)( rManager.ScalePoint( -nVal2 ) / 8 ) );
 		else
 		{
             sal_uInt8 nPropLineSpace = (BYTE)nVal2;
-            if ( pPortion )
-            {
-	            PptFontEntityAtom* pAtom = rManager.GetFontEnityAtom( nFont );
-                if ( pAtom )
-                    nPropLineSpace = (sal_uInt8)nVal2;
-            }
 			aItem.SetPropLineSpace( nPropLineSpace );
 			aItem.GetLineSpaceRule() = SVX_LINE_SPACE_AUTO;
 		}
