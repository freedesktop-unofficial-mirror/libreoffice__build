--- svx/source/svdraw/svdotextdecomposition.cxx	2009-04-02 13:03:00.000000000 +0200
+++ svx/source/svdraw/svdotextdecomposition.cxx	2009-03-25 18:32:48.000000000 +0100
@@ -206,11 +206,7 @@
                 false));
 			basegfx::B2DHomMatrix aNewTransform;
 
-			// #i100489# need extra scale factor for DXArray which collects all scalings
-			// which are needed to get the DXArray to unit coordinates
-			double fDXArrayScaleFactor(aSize.getX());
-
-            // add font scale to new transform
+			// add font scale to new transform
 			aNewTransform.scale(aSize.getX(), aSize.getY());
 
 			// look for proportional font scaling, evtl scale accordingly
@@ -218,10 +214,6 @@
 			{
 				const double fFactor(rInfo.mrFont.GetPropr() / 100.0);
 				aNewTransform.scale(fFactor, fFactor);
-
-				// #i100489# proportional font scaling influences the DXArray,
-				// add to factor
-				fDXArrayScaleFactor *= fFactor;
 			}
 
 			// apply font rotate
@@ -273,8 +265,7 @@
 
 			if(!bDisableTextArray && rInfo.mpDXArray && rInfo.mnTextLen)
 			{
-				// #i100489# use fDXArrayScaleFactor here
-				const double fScaleFactor(basegfx::fTools::equalZero(fDXArrayScaleFactor) ? 1.0 : 1.0 / fDXArrayScaleFactor);
+				const double fScaleFactor(basegfx::fTools::equalZero(aSize.getX()) ? 1.0 : 1.0 / aSize.getX());
 				aDXArray.reserve(rInfo.mnTextLen);
 
 				for(xub_StrLen a(0); a < rInfo.mnTextLen; a++)
