diff --git sc/inc/chartlis.hxx sc/inc/chartlis.hxx
index a8a97d3..51ac644 100644
--- sc/inc/chartlis.hxx
+++ sc/inc/chartlis.hxx
@@ -49,7 +49,7 @@ class ScChartUnoData;
 #include <com/sun/star/chart/XChartData.hpp>
 #include <com/sun/star/chart/XChartDataChangeEventListener.hpp>
 
-class ScChartListener : public StrData, public SvtListener
+class SC_DLLPUBLIC ScChartListener : public StrData, public SvtListener
 {
 public:
     class ExternalRefListener : public ScExternalRefManager::LinkListener
diff --git sc/inc/reftokenhelper.hxx sc/inc/reftokenhelper.hxx
index 44619ab..1ea763e 100644
--- sc/inc/reftokenhelper.hxx
+++ sc/inc/reftokenhelper.hxx
@@ -70,12 +70,12 @@ public:
 
     static void getTokensFromRangeList(::std::vector<ScSharedTokenRef>& pTokens, const ScRangeList& rRanges);
 
-    static bool isRef(const ScSharedTokenRef& pToken);
-    static bool isExternalRef(const ScSharedTokenRef& pToken);
+    static bool SC_DLLPUBLIC isRef(const ScSharedTokenRef& pToken);
+    static bool SC_DLLPUBLIC isExternalRef(const ScSharedTokenRef& pToken);
 
-    static bool intersects(const ::std::vector<ScSharedTokenRef>& rTokens, const ScSharedTokenRef& pToken);
+    static bool SC_DLLPUBLIC intersects(const ::std::vector<ScSharedTokenRef>& rTokens, const ScSharedTokenRef& pToken);
 
-    static void join(::std::vector<ScSharedTokenRef>& rTokens, const ScSharedTokenRef& pToken);
+    static void SC_DLLPUBLIC join(::std::vector<ScSharedTokenRef>& rTokens, const ScSharedTokenRef& pToken);
 
     static bool getDoubleRefDataFromToken(ScComplexRefData& rData, const ScSharedTokenRef& pToken);
 
diff --git sc/source/core/data/cell.cxx sc/source/core/data/cell.cxx
index 7e5f291..9fe50df 100644
--- sc/source/core/data/cell.cxx
+++ sc/source/core/data/cell.cxx
@@ -1871,8 +1871,7 @@ void ScFormulaCell::SetDirtyVar()
 
 void ScFormulaCell::SetDirtyAfterLoad()
 {
-    bDirty = TRUE;
-    if ( !pDocument->GetHardRecalcState() )
+    if ( bDirty && !pDocument->GetHardRecalcState() )
         pDocument->PutInFormulaTree( this );
 }
 
diff --git sc/source/filter/excel/xichart.cxx sc/source/filter/excel/xichart.cxx
index 77d9eae..6d393e5 100644
--- sc/source/filter/excel/xichart.cxx
+++ sc/source/filter/excel/xichart.cxx
@@ -34,6 +34,7 @@
 #include "xichart.hxx"
 
 #include <algorithm>
+#include <memory>
 
 #include <com/sun/star/frame/XModel.hpp>
 #include <com/sun/star/drawing/Direction3D.hpp>
@@ -76,6 +77,8 @@
 #include "tokenarray.hxx"
 #include "token.hxx"
 #include "compiler.hxx"
+#include "reftokenhelper.hxx"
+#include "chartlis.hxx"
 
 using ::rtl::OUString;
 using ::rtl::OUStringBuffer;
@@ -119,6 +122,8 @@ using ::com::sun::star::chart2::data::XDataSequence;
 using ::formula::FormulaToken;
 using ::formula::StackVar;
 
+using ::std::vector;
+
 // Helpers ====================================================================
 
 namespace {
@@ -792,6 +797,22 @@ Sequence< Reference< XFormattedString > > XclImpChSourceLink::CreateStringSequen
     return ScfApiHelper::VectorToSequence( aStringVec );
 }
 
+void XclImpChSourceLink::FillSourceLink(vector<ScSharedTokenRef>& rTokens) const
+{
+    if (!mpTokenArray)
+        // no links to fill.
+        return;
+
+    mpTokenArray->Reset();
+    for (FormulaToken* p = mpTokenArray->First(); p; p = mpTokenArray->Next())
+    {
+        ScSharedTokenRef pToken(static_cast<ScToken*>(p->Clone()));
+        if (ScRefTokenHelper::isRef(pToken))
+            // This is a reference token.  Store it.
+            ScRefTokenHelper::join(rTokens, pToken);
+    }
+}
+
 // Text =======================================================================
 
 XclImpChFontBase::~XclImpChFontBase()
@@ -1794,6 +1815,14 @@ Reference< XDataSeries > XclImpChSeries::CreateDataSeries() const
     return xDataSeries;
 }
 
+void XclImpChSeries::FillAllSourceLinks(vector<ScSharedTokenRef>& rTokens) const
+{
+    mxValueLink->FillSourceLink(rTokens);
+    mxCategLink->FillSourceLink(rTokens);
+    mxTitleLink->FillSourceLink(rTokens);
+    mxBubbleLink->FillSourceLink(rTokens);
+}
+
 void XclImpChSeries::ReadChSourceLink( XclImpStream& rStrm )
 {
     XclImpChSourceLinkRef xSrcLink( new XclImpChSourceLink( GetChRoot() ) );
@@ -3399,7 +3428,7 @@ XclImpChTextRef XclImpChChart::GetDefaultText( XclChTextType eTextType ) const
     return maDefTexts.get( nDefTextId );
 }
 
-void XclImpChChart::Convert( Reference< XChartDocument > xChartDoc, ScfProgressBar& rProgress ) const
+void XclImpChChart::Convert( Reference< XChartDocument > xChartDoc, ScfProgressBar& rProgress, const OUString& rObjName ) const
 {
     // initialize conversion (locks the model to suppress any internal updates)
     InitConversion( xChartDoc );
@@ -3442,6 +3471,28 @@ void XclImpChChart::Convert( Reference< XChartDocument > xChartDoc, ScfProgressB
 
     // unlock the model
     FinishConversion( rProgress );
+
+    ScDocument* pDoc = &GetRoot().GetDoc();
+    ScChartListenerCollection* pChartCollection = pDoc->GetChartListenerCollection();
+    if (pChartCollection)
+    {
+        // Now, start listening to this chart.
+        ::std::auto_ptr< vector<ScSharedTokenRef> > pRefTokens(new vector<ScSharedTokenRef>);
+        for (XclImpChSeriesVec::const_iterator itr = maSeries.begin(), itrEnd = maSeries.end(); itr != itrEnd; ++itr)
+        {
+            const XclImpChSeriesRef& rSeries = *itr;
+            rSeries->FillAllSourceLinks(*pRefTokens);
+        }
+        if (!pRefTokens->empty())
+        {
+            ::std::auto_ptr<ScChartListener> pListener(
+                new ScChartListener(rObjName, pDoc, pRefTokens.release()));
+            pListener->SetDirty(true);
+            pListener->StartListeningTo();
+            pChartCollection->Insert(pListener.release());
+
+        }
+    }
 }
 
 void XclImpChChart::ReadChSeries( XclImpStream& rStrm )
@@ -3651,11 +3702,11 @@ sal_Size XclImpChart::GetProgressSize() const
     return mxChartData.is() ? mxChartData->GetProgressSize() : 0;
 }
 
-void XclImpChart::Convert( Reference< XModel > xModel, ScfProgressBar& rProgress ) const
+void XclImpChart::Convert( Reference< XModel > xModel, ScfProgressBar& rProgress, const OUString& rObjName ) const
 {
     Reference< XChartDocument > xChartDoc( xModel, UNO_QUERY );
     if( mxChartData.is() && xChartDoc.is() )
-        mxChartData->Convert( xChartDoc, rProgress );
+        mxChartData->Convert( xChartDoc, rProgress, rObjName );
 }
 
 void XclImpChart::ReadChChart( XclImpStream& rStrm )
diff --git sc/source/filter/excel/xiescher.cxx sc/source/filter/excel/xiescher.cxx
index a046521..5eb246e 100644
--- sc/source/filter/excel/xiescher.cxx
+++ sc/source/filter/excel/xiescher.cxx
@@ -1581,7 +1581,7 @@ SdrObject* XclImpChartObj::DoCreateSdrObj( const Rectangle& rAnchorRect, ScfProg
         if( svt::EmbeddedObjectRef::TryRunningState( xEmbObj ) )
         {
             Reference< XModel > xModel( xEmbObj->getComponent(), UNO_QUERY );
-            mxChart->Convert( xModel, rProgress );
+            mxChart->Convert( xModel, rProgress, aEmbObjName );
 
             Reference< XEmbedPersist > xPers( xEmbObj, UNO_QUERY );
             if( xPers.is() )
diff --git sc/source/filter/inc/xichart.hxx sc/source/filter/inc/xichart.hxx
index 05932de..32b8105 100644
--- sc/source/filter/inc/xichart.hxx
+++ sc/source/filter/inc/xichart.hxx
@@ -39,6 +39,7 @@
 #include <svtools/itemset.hxx>
 
 #include "rangelst.hxx"
+#include "token.hxx"
 #include "xlchart.hxx"
 #include "xlstyle.hxx"
 #include "xistring.hxx"
@@ -404,6 +405,8 @@ public:
     XFormattedStringSeq CreateStringSequence( const XclImpChRoot& rRoot,
                             sal_uInt16 nLeadFontIdx, const Color& rLeadFontColor ) const;
 
+    void                FillSourceLink(::std::vector<ScSharedTokenRef>& rTokens) const;
+
 private:
     XclChSourceLink     maData;             /// Contents of the CHSOURCELINK record.
     XclImpStringRef     mxString;           /// Text data (CHSTRING record).
@@ -807,6 +810,8 @@ public:
     /** Creates a data series object with initialized source links. */
     XDataSeriesRef      CreateDataSeries() const;
 
+    void                FillAllSourceLinks(::std::vector<ScSharedTokenRef>& rTokens) const;
+
 private:
     /** Reads a CHSOURCELINK record. */
     void                ReadChSourceLink( XclImpStream& rStrm );
@@ -1342,7 +1347,7 @@ public:
     inline sal_Size     GetProgressSize() const { return 2 * EXC_CHART_PROGRESS_SIZE; }
 
     /** Converts and writes all properties to the passed chart. */
-    void                Convert( XChartDocRef xChartDoc, ScfProgressBar& rProgress ) const;
+    void                Convert( XChartDocRef xChartDoc, ScfProgressBar& rProgress, const ::rtl::OUString& rObjName ) const;
 
 private:
     /** Reads a CHSERIES group (data series source and formatting). */
@@ -1407,7 +1412,7 @@ public:
     inline bool         IsPivotChart() const { return mbIsPivotChart; }
 
     /** Creates the chart object in the passed component. */
-    void                Convert( XModelRef xModel, ScfProgressBar& rProgress ) const;
+    void                Convert( XModelRef xModel, ScfProgressBar& rProgress, const ::rtl::OUString& rObjName ) const;
 
 private:
     /** Reads the CHCHART group (entire chart data). */
