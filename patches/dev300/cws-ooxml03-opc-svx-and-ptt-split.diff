diff --git basctl/util/makefile.mk basctl/util/makefile.mk
index 1867774..c6d6c26 100644
--- basctl/util/makefile.mk
+++ basctl/util/makefile.mk
@@ -54,6 +54,7 @@ SHL1TARGET= basctl$(DLLPOSTFIX)
 SHL1IMPLIB= basctl
 SHL1BASE  = 0x1d800000
 SHL1STDLIBS= \
+			$(SVXCORELIB) \
 			$(SVXLIB) \
             $(SFX2LIB) \
             $(BASICLIB) \
diff --git chart2/source/controller/makefile.mk chart2/source/controller/makefile.mk
index 8c215a0..0d88f3d 100644
--- chart2/source/controller/makefile.mk
+++ chart2/source/controller/makefile.mk
@@ -90,6 +90,7 @@ SHL1STDLIBS=	$(CHARTTOOLS)		\
 				$(SALLIB)			\
 				$(SVLLIB)			\
 				$(SVTOOLLIB)		\
+				$(SVXCORELIB)			\
 				$(SVXLIB)			\
 				$(TKLIB)			\
 				$(TOOLSLIB) 		\
diff --git chart2/source/view/makefile.mk chart2/source/view/makefile.mk
index 8f10548..17a2ea9 100644
--- chart2/source/view/makefile.mk
+++ chart2/source/view/makefile.mk
@@ -83,7 +83,7 @@ SHL1STDLIBS=	$(CHARTTOOLS)		\
 				$(SALLIB)			\
 				$(SVLLIB)			\
 				$(SVTOOLLIB)		\
-				$(SVXLIB)			\
+				$(SVXCORELIB)			\
 				$(TKLIB)			\
 				$(TOOLSLIB) 		\
 				$(UNOTOOLSLIB)      \
diff --git dbaccess/source/ext/macromigration/makefile.mk dbaccess/source/ext/macromigration/makefile.mk
index 17e51d9..d2f39cc 100644
--- dbaccess/source/ext/macromigration/makefile.mk
+++ dbaccess/source/ext/macromigration/makefile.mk
@@ -78,6 +78,7 @@ SHL1STDLIBS= \
 		$(SVTOOLLIB)        \
 		$(SVLLIB)           \
         $(VCLLIB)           \
+        $(SVXCORELIB)           \
         $(SVXLIB)           \
         $(UCBHELPERLIB)
 
diff --git dbaccess/util/makefile.mk dbaccess/util/makefile.mk
index 92e038a..4a148ad 100644
--- dbaccess/util/makefile.mk
+++ dbaccess/util/makefile.mk
@@ -112,6 +112,7 @@ LIB2FILES=\
 SHL2TARGET=$(TARGET2)$(DLLPOSTFIX)
 
 SHL2STDLIBS= \
+		$(SVXCORELIB)				\
 		$(SVXLIB)				\
 		$(SFXLIB)				\
 		$(BASICLIB)				\
diff --git extensions/source/abpilot/makefile.mk extensions/source/abpilot/makefile.mk
index e76840e..34b504b 100644
--- extensions/source/abpilot/makefile.mk
+++ extensions/source/abpilot/makefile.mk
@@ -94,6 +94,7 @@ SHL1STDLIBS= \
 		$(COMPHELPERLIB)	\
 		$(TKLIB)			\
 		$(UNOTOOLSLIB)		\
+		$(SVXCORELIB)		\
 		$(SVXLIB)
 
 SHL1LIBS=		$(SLB)$/$(TARGET).lib
diff --git extensions/source/oooimprovecore/makefile.mk extensions/source/oooimprovecore/makefile.mk
index 0547be9..83b04b6 100644
--- extensions/source/oooimprovecore/makefile.mk
+++ extensions/source/oooimprovecore/makefile.mk
@@ -58,6 +58,7 @@ SHL1STDLIBS= \
         $(SVTOOLLIB) \
         $(SFXLIB) \
         $(SVXLIB) \
+        $(SVXCORELIB) \
         $(TOOLSLIB)
 
 
diff --git extensions/source/preload/makefile.mk extensions/source/preload/makefile.mk
index 8186d73..629aa53 100644
--- extensions/source/preload/makefile.mk
+++ extensions/source/preload/makefile.mk
@@ -64,7 +64,7 @@ SHL1TARGET= $(TARGET)$(DLLPOSTFIX)
 SHL1VERSIONMAP= $(TARGET).map
 
 SHL1STDLIBS= \
-        $(SVXLIB)	\
+        $(SVXCORELIB)	\
         $(SFXLIB)   \
 		$(SVTOOLLIB)\
 		$(VCLLIB)    \
diff --git extensions/source/propctrlr/makefile.mk extensions/source/propctrlr/makefile.mk
index 4db4596..89a04d9 100644
--- extensions/source/propctrlr/makefile.mk
+++ extensions/source/propctrlr/makefile.mk
@@ -118,6 +118,7 @@ SHL1TARGET= $(TARGET)$(DLLPOSTFIX)
 SHL1VERSIONMAP= $(TARGET).map
 
 SHL1STDLIBS= \
+		$(SVXCORELIB)	\
 		$(SVXLIB)	\
 		$(SFXLIB)	\
 		$(SVTOOLLIB)\
diff --git filter/source/config/fragments/filters/MS_PowerPoint_97.xcu filter/source/config/fragments/filters/MS_PowerPoint_97.xcu
index cab11c1..1ec0fb7 100644
--- filter/source/config/fragments/filters/MS_PowerPoint_97.xcu
+++ filter/source/config/fragments/filters/MS_PowerPoint_97.xcu
@@ -2,7 +2,7 @@
 		<prop oor:name="Flags"><value>IMPORT EXPORT ALIEN</value></prop>
 		<prop oor:name="UIComponent"/>
 		<prop oor:name="FilterService"/>
-		<prop oor:name="UserData"><value>emp</value></prop>
+		<prop oor:name="UserData"><value>sdfilt</value></prop>
 		<prop oor:name="UIName">
 			<value xml:lang="x-default">Microsoft PowerPoint 97/2000/XP</value>
 		</prop>
diff --git filter/source/config/fragments/filters/MS_PowerPoint_97_Vorlage.xcu filter/source/config/fragments/filters/MS_PowerPoint_97_Vorlage.xcu
index 50b2c34..c4a28e8 100644
--- filter/source/config/fragments/filters/MS_PowerPoint_97_Vorlage.xcu
+++ filter/source/config/fragments/filters/MS_PowerPoint_97_Vorlage.xcu
@@ -2,7 +2,7 @@
 		<prop oor:name="Flags"><value>IMPORT EXPORT TEMPLATE TEMPLATEPATH ALIEN</value></prop>
 		<prop oor:name="UIComponent"/>
 		<prop oor:name="FilterService"/>
-		<prop oor:name="UserData"><value>emp</value></prop>
+		<prop oor:name="UserData"><value>sdfilt</value></prop>
 		<prop oor:name="FileFormatVersion"><value>0</value></prop>
 		<prop oor:name="Type"><value>impress_MS_PowerPoint_97_Vorlage</value></prop>
 		<prop oor:name="TemplateName"/>
diff --git filter/source/config/fragments/filters/MS_Word_2007_XML.xcu filter/source/config/fragments/filters/MS_Word_2007_XML.xcu
index d8a3740..69feaa0 100644
--- filter/source/config/fragments/filters/MS_Word_2007_XML.xcu
+++ filter/source/config/fragments/filters/MS_Word_2007_XML.xcu
@@ -1,7 +1,8 @@
     <node oor:name="MS Word 2007 XML" oor:op="replace">
-        <prop oor:name="Flags"><value>IMPORT ALIEN 3RDPARTYFILTER</value></prop>
+        <prop oor:name="Flags"><value>IMPORT EXPORT ALIEN 3RDPARTYFILTER</value></prop>
         <prop oor:name="UIComponent"/>
         <prop oor:name="FilterService"><value>com.sun.star.comp.Writer.WriterFilter</value></prop>
+        <!-- <prop oor:name="FilterService"><value>com.sun.star.comp.Writer.DocxExport</value></prop> -->
         <prop oor:name="UserData"><value>OXML</value></prop>
         <prop oor:name="UIName">
             <value xml:lang="x-default">Microsoft Word 2007 XML</value>
diff --git filter/source/svg/makefile.mk filter/source/svg/makefile.mk
index ddb2dd2..4d04bef 100644
--- filter/source/svg/makefile.mk
+++ filter/source/svg/makefile.mk
@@ -66,8 +66,7 @@ CFLAGS+=-DUSE_MODERN_SPIRIT
 SHL1TARGET=$(TARGET)$(DLLPOSTFIX)
 
 SHL1STDLIBS=\
-	$(BASEGFXLIB)		\
-	$(SVXLIB)			\
+	$(SVXCORELIB)			\
 	$(XMLOFFLIB)		\
 	$(SVTOOLLIB)	    \
 	$(BASEGFXLIB)		\
diff --git forms/util/makefile.mk forms/util/makefile.mk
index cbf8bd9..9474f8e 100644
--- forms/util/makefile.mk
+++ forms/util/makefile.mk
@@ -73,7 +73,7 @@ SHL1STDLIBS= \
 		$(COMPHELPERLIB) \
 		$(DBTOOLSLIB) \
 		$(TKLIB) \
-		$(SVXLIB) \
+		$(SVXCORELIB) \
         $(UCBHELPERLIB) \
         $(LIBXML2LIB) \
         $(ICUUCLIB) \
diff --git lotuswordpro/util/makefile.mk lotuswordpro/util/makefile.mk
index 63950f1..6611150 100644
--- lotuswordpro/util/makefile.mk
+++ lotuswordpro/util/makefile.mk
@@ -23,7 +23,7 @@ SHL1STDLIBS+= \
     $(ICUUCLIB) \
     $(ICUINLIB) \
     $(ICULELIB) \
-    $(SVXLIB) \
+    $(SVXCORELIB) \
     $(GOODIESLIB) \
     $(SVTOOLLIB) \
 	$(XMLOFFLIB)
diff --git oox/inc/oox/core/xmlfilterbase.hxx oox/inc/oox/core/xmlfilterbase.hxx
index c46ee40..1f4edc3 100644
--- oox/inc/oox/core/xmlfilterbase.hxx
+++ oox/inc/oox/core/xmlfilterbase.hxx
@@ -42,6 +42,7 @@
 
 namespace com { namespace sun { namespace star {
     namespace container { class XNameContainer; }
+    namespace document { class XDocumentProperties; }
     namespace xml { namespace sax { class XLocator; } }
     namespace xml { namespace sax { class XFastDocumentHandler; } }
 } } }
@@ -191,6 +192,14 @@ public:
     inline ::rtl::OString GetUniqueIdOString() { return ::rtl::OString::valueOf( mnMaxDocId++ ); }
     inline ::rtl::OUString GetUniqueIdOUString() { return ::rtl::OUString::valueOf( mnMaxDocId++ ); }
 
+    /** Write the document properties into into the current OPC package.
+
+        @param xProperties  The document properties to export.
+
+        @return *this
+     */
+    XmlFilterBase& exportDocumentProperties( ::com::sun::star::uno::Reference< ::com::sun::star::document::XDocumentProperties > xProperties );
+
 private:
     virtual StorageRef  implCreateStorage(
                             ::com::sun::star::uno::Reference< ::com::sun::star::io::XInputStream >& rxInStream,
diff --git oox/inc/oox/export/drawingml.hxx oox/inc/oox/export/drawingml.hxx
new file mode 100644
index 0000000..3c89b99
--- /dev/null
+++ oox/inc/oox/export/drawingml.hxx
@@ -0,0 +1,115 @@
+#ifndef _OOX_EXPORT_DRAWINGML_HXX_
+#define _OOX_EXPORT_DRAWINGML_HXX_
+
+#include <oox/dllapi.h>
+#include <sax/fshelper.hxx>
+#include <rtl/strbuf.hxx>
+#include <com/sun/star/awt/FontDescriptor.hpp>
+#include <com/sun/star/uno/XReference.hpp>
+#include <tools/poly.hxx>
+#include <svx/escherex.hxx>
+
+class Graphic;
+class String;
+
+namespace com { namespace sun { namespace star {
+namespace beans {
+    class XPropertySet;
+    class XPropertyState;
+}
+namespace drawing {
+    class XShape;
+}
+namespace text {
+    class XTextContent;
+    class XTextRange;
+}
+}}}
+
+namespace oox {
+namespace core {
+    class XmlFilterBase;
+}
+
+namespace drawingml {
+
+class OOX_DLLPUBLIC DrawingML {
+public:
+    enum DocumentType { DOCUMENT_DOCX, DOCUMENT_PPTX, DOCUMENT_XLSX };
+
+private:
+    ::sax_fastparser::FSHelperPtr mpFS;
+    ::oox::core::XmlFilterBase* mpFB;
+
+    static int mnImageCounter;
+
+    /// To specify where write eg. the images to (like 'ppt', or 'word' - according to the OPC).
+    DocumentType meDocumentType;
+
+protected:
+    ::com::sun::star::uno::Any mAny;
+
+    bool GetProperty( ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > rXPropSet, String aName );
+    bool GetPropertyAndState( ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > rXPropSet,
+			      ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertyState > rXPropState,
+			      String aName, ::com::sun::star::beans::PropertyState& eState );
+    const char* GetFieldType( ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange > rRun );
+
+    rtl::OUString WriteImage( const rtl::OUString& rURL );
+
+public:
+    DrawingML( ::sax_fastparser::FSHelperPtr pFS, ::oox::core::XmlFilterBase* pFB = NULL, DocumentType eDocumentType = DOCUMENT_PPTX ) : mpFS( pFS ), mpFB( pFB ), meDocumentType( eDocumentType ) {}
+    void SetFS( ::sax_fastparser::FSHelperPtr pFS ) { mpFS = pFS; }
+    ::sax_fastparser::FSHelperPtr GetFS() { return mpFS; }
+    ::oox::core::XmlFilterBase* GetFB() { return mpFB; }
+
+    rtl::OUString WriteImage( const Graphic &rGraphic );
+
+    void WriteColor( sal_uInt32 nColor );
+    void WriteGradientStop( sal_uInt16 nStop, sal_uInt32 nColor );
+    void WriteLineArrow( ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > rXPropSet, sal_Bool bLineStart );
+    void WriteConnectorConnections( EscherConnectorListEntry& rConnectorEntry, sal_Int32 nStartID, sal_Int32 nEndID );
+
+    void WriteSolidFill( sal_uInt32 nColor );
+    void WriteSolidFill( ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > rXPropSet );
+    void WriteGradientFill( ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > rXPropSet );
+    void WriteBlipFill( ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > rXPropSet, String sURLPropName, sal_Int32 nXmlNamespace );
+    void WriteBlipFill( ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > rXPropSet, String sURLPropName );
+    void WriteOutline( ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > rXPropSet );
+    void WriteStretch();
+
+    ::rtl::OUString WriteBlip( ::rtl::OUString& rURL );
+    void WriteBlipMode( ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > rXPropSet );
+
+    void WriteShapeTransformation( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > rXShape,
+				   sal_Bool bFlipH = false, sal_Bool bFlipV = false, sal_Int32 nRotation = 0 );
+    void WriteTransformation( const Rectangle& rRectangle,
+			      sal_Bool bFlipH = false, sal_Bool bFlipV = false, sal_Int32 nRotation = 0 );
+
+    void WriteText( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > rXShape );
+    void WriteParagraph( ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextContent > rParagraph );
+    void WriteParagraphProperties( ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextContent > rParagraph );
+    void WriteParagraphNumbering( ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > rXPropSet,
+                                  sal_Int16 nLevel );
+    void WriteRun( ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange > rRun );
+    void WriteRunProperties( ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange > rRun );
+
+    void WritePresetShape( const char* pShape );
+    void WritePresetShape( const char* pShape, MSO_SPT eShapeType, sal_Bool bPredefinedHandlesUsed, sal_Int32 nAdjustmentsWhichNeedsToBeConverted, const ::com::sun::star::beans::PropertyValue& rProp );
+    void WritePolyPolygon( const PolyPolygon& rPolyPolygon );
+
+    static void ResetCounters();
+
+    void GetUUID( ::rtl::OStringBuffer& rBuffer );
+
+    static sal_Unicode SubstituteBullet( sal_Unicode cBulletId, ::com::sun::star::awt::FontDescriptor& rFontDesc );
+
+    sal_uInt32 ColorWithIntensity( sal_uInt32 nColor, sal_uInt32 nIntensity );
+
+    static const char* GetAlignment( sal_Int32 nAlignment );
+};
+
+}
+}
+
+#endif
diff --git oox/inc/oox/export/shapes.hxx oox/inc/oox/export/shapes.hxx
new file mode 100644
index 0000000..40b87c4
--- /dev/null
+++ oox/inc/oox/export/shapes.hxx
@@ -0,0 +1,165 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef _OOX_EXPORT_SHAPES_HXX_
+#define _OOX_EXPORT_SHAPES_HXX_
+
+#include <oox/dllapi.h>
+#include <com/sun/star/uno/XReference.hpp>
+#include <oox/export/drawingml.hxx>
+#include <sax/fshelper.hxx>
+#include <vcl/mapmod.hxx>
+#include <hash_map>
+
+namespace com { namespace sun { namespace star {
+namespace beans {
+    class XPropertySet;
+}
+namespace drawing {
+    class XShape;
+    class XShapes;
+}
+}}}
+
+namespace oox { namespace drawingml {
+
+class OOX_DLLPUBLIC ShapeExport : public DrawingML {
+private:
+    sal_Int32           mnXmlNamespace;
+    sal_Int32           mnShapeIdMax, mnPictureIdMax;
+    Fraction            maFraction;
+    MapMode             maMapModeSrc, maMapModeDest;
+
+    ::com::sun::star::awt::Size MapSize( const ::com::sun::star::awt::Size& ) const;
+
+    struct ShapeCheck
+    {
+        bool operator()( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape> s1, const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape> s2 ) const
+        {
+            return s1 == s2;
+        }
+    };
+
+    struct ShapeHash
+    {
+        std::hash<const char*> maHashFunction;
+
+        size_t operator()( const ::com::sun::star::uno::Reference < ::com::sun::star::drawing::XShape > ) const;
+    };
+
+    typedef std::hash_map< const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape>, sal_Int32, ShapeHash, ShapeCheck> ShapeHashMap;
+    ShapeHashMap maShapeMap;
+
+public:
+    ShapeExport( sal_Int32 nXmlNamespace, ::sax_fastparser::FSHelperPtr pFS, ::oox::core::XmlFilterBase* pFB = NULL, DocumentType eDocumentType = DOCUMENT_PPTX );
+    virtual ~ShapeExport() {}
+
+    sal_Int32           GetXmlNamespace() const;
+    ShapeExport&        SetXmlNamespace( sal_Int32 nXmlNamespace );
+
+    static sal_Bool     NonEmptyText( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+
+    virtual ShapeExport&
+                        WriteBezierShape( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape, sal_Bool bClosed );
+    virtual ShapeExport&
+                        WriteClosedBezierShape( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+    virtual ShapeExport&
+                        WriteConnectorShape( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+    virtual ShapeExport&
+                        WriteCustomShape( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+    virtual ShapeExport&
+                        WriteEllipseShape( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+    virtual ShapeExport&
+                        WriteFill( ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > xPropSet );
+    virtual ShapeExport&
+                        WriteGraphicObjectShape( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+    virtual ShapeExport&
+                        WriteLineShape( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+    virtual ShapeExport&
+                        WriteNonVisualDrawingProperties( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape, const char* sName );
+    virtual ShapeExport&
+                        WriteNonVisualProperties( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+    virtual ShapeExport&
+                        WriteOpenBezierShape( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+    virtual ShapeExport&
+                        WriteRectangleShape( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+
+    /**
+     * Write the DrawingML for a particular shape.
+     *
+     * <p>This is the member function you want.  It performs the type lookup and
+     * invokes the appropriate corresponding Write*() method for the specific
+     * type.</p>
+     *
+     * <p>To write an XShape, XShape::getShapeType() is called to determine
+     * the shape type, and the corresponding method in this table is
+     * invoked:</p>
+     *
+     * <table>
+     *   <tr><th>Shape Type</th><th>Method</th></tr>
+     *   <tr><td><tt>com.sun.star.drawing.ClosedBezierShape</tt></td>    <td>ShapeExport::WriteClosedBezierShape</td></tr>
+     *   <tr><td><tt>com.sun.star.drawing.CustomShape</tt></td>          <td>ShapeExport::WriteCustomShape</td></tr>
+     *   <tr><td><tt>com.sun.star.drawing.EllipseShape</tt></td>         <td>ShapeExport::WriteEllipseShape</td></tr>
+     *   <tr><td><tt>com.sun.star.drawing.GraphicObjectShape</tt></td>   <td>ShapeExport::WriteGraphicObjectShape</td></tr>
+     *   <tr><td><tt>com.sun.star.drawing.LineShape</tt></td>            <td>ShapeExport::WriteLineShape</td></tr>
+     *   <tr><td><tt>com.sun.star.drawing.OpenBezierShape</tt></td>      <td>ShapeExport::WriteOpenBezierShape</td></tr>
+     *   <tr><td><tt>com.sun.star.drawing.RectangleShape</tt></td>       <td>ShapeExport::WriteRectangleShape</td></tr>
+     *   <tr><td><tt>com.sun.star.drawing.TextShape</tt></td>            <td>ShapeExport::WriteTextShape</td></tr>
+     *   <tr><td><tt>com.sun.star.presentation.DateTimeShape</tt></td>   <td>ShapeExport::WriteTextShape</td></tr>
+     *   <tr><td><tt>com.sun.star.presentation.FooterShape</tt></td>     <td>ShapeExport::WriteTextShape</td></tr>
+     *   <tr><td><tt>com.sun.star.presentation.HeaderShape</tt></td>     <td>ShapeExport::WriteTextShape</td></tr>
+     *   <tr><td><tt>com.sun.star.presentation.NotesShape</tt></td>      <td>ShapeExport::WriteTextShape</td></tr>
+     *   <tr><td><tt>com.sun.star.presentation.OutlinerShape</tt></td>   <td>ShapeExport::WriteTextShape</td></tr>
+     *   <tr><td><tt>com.sun.star.presentation.SlideNumberShape</tt></td><td>ShapeExport::WriteTextShape</td></tr>
+     *   <tr><td><tt>com.sun.star.presentation.TitleTextShape</tt></td>  <td>ShapeExport::WriteTextShape</td></tr>
+     * </table>
+     *
+     * <p>If the shape type is not recognized, then
+     * <tt>ShapeExport::WriteUnknownShape</tt> is called.</p>
+     *
+     * @param xShape    The shape to export as DrawingML.
+     * @return   <tt>*this</tt>
+     */
+    virtual ShapeExport&
+                        WriteShape( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+    virtual ShapeExport&
+                        WriteTextBox( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+    virtual ShapeExport&
+                        WriteTextShape( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+    virtual ShapeExport&
+                        WriteUnknownShape( ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > xShape );
+
+    sal_Int32 GetNewShapeID( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > rShape );
+    sal_Int32 GetShapeID( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > rShape );
+};
+
+}}
+
+#endif /* ndef _OOX_EXPORT_SHAPES_HXX_ */
diff --git oox/inc/oox/export/utils.hxx oox/inc/oox/export/utils.hxx
new file mode 100644
index 0000000..5063105
--- /dev/null
+++ oox/inc/oox/export/utils.hxx
@@ -0,0 +1,73 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef _OOX_EXPORT_UTILS_HXX_
+#define _OOX_EXPORT_UTILS_HXX_
+
+#define S(x) String( RTL_CONSTASCII_USTRINGPARAM( x ) )
+#define US(x) OUString( RTL_CONSTASCII_USTRINGPARAM( x ))
+#define I32S(x) OString::valueOf( (sal_Int32) x ).getStr()
+#define I64S(x) OString::valueOf( (sal_Int64) x ).getStr()
+#define H32S(x) OString::valueOf( (sal_Int32) x, 16 ).getStr()
+#define H64S(x) OString::valueOf( (sal_Int64) x, 16 ).getStr()
+#define IS(x) OString::valueOf( x ).getStr()
+#define USS(x) OUStringToOString( x, RTL_TEXTENCODING_UTF8 ).getStr()
+#define ST(x) ByteString( x, RTL_TEXTENCODING_UTF8 ).GetBuffer()
+
+#ifndef DBG
+#  if OSL_DEBUG_LEVEL > 0
+#    define DBG(x) x
+#  else
+#    define DBG(x)
+#  endif
+#endif
+
+// ---------------------------------------------------------------------------------------------
+
+static inline sal_Int64 PPTtoEMU( INT32 nPPT )
+{
+    return (sal_Int64)( (double)nPPT * 1587.5 );
+}
+
+// ---------------------------------------------------------------------------------------------
+
+static inline sal_Int64 MM100toEMU( INT32 nMM100 )
+{
+    return (sal_Int64)nMM100 * 360;
+}
+
+// ---------------------------------------------------------------------------------------------
+
+static inline sal_Int64 TwipsToEMU( sal_Int32 nTwips )
+{
+    return sal_Int64( nTwips ) * 635;
+}
+
+#endif
diff --git oox/inc/oox/export/vmlexport.hxx oox/inc/oox/export/vmlexport.hxx
new file mode 100644
index 0000000..199bc43
--- /dev/null
+++ oox/inc/oox/export/vmlexport.hxx
@@ -0,0 +1,118 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include <oox/dllapi.h>
+#include <sax/fshelper.hxx>
+#include <svx/escherex.hxx>
+
+namespace rtl {
+    class OString;
+    class OStringBuffer;
+}
+
+namespace oox {
+
+namespace vml {
+
+class OOX_DLLPUBLIC VMLExport : public EscherEx
+{
+    /// Fast serializer to output the data
+    ::sax_fastparser::FSHelperPtr m_pSerializer;
+
+    /// Fill the shape attributes as they come.
+    ::sax_fastparser::FastAttributeList *m_pShapeAttrList;
+
+    /// Remember the shape type.
+    sal_uInt32 m_nShapeType;
+    
+    /// Remember the shape flags.
+    sal_uInt32 m_nShapeFlags;
+
+    /// Remember style, the most important shape attribute ;-)
+    rtl::OStringBuffer *m_pShapeStyle;
+
+    /// Remember which shape types we had already written.
+    bool *m_pShapeTypeWritten;
+
+public:
+                        VMLExport( ::sax_fastparser::FSHelperPtr pSerializer );
+    virtual             ~VMLExport();
+
+    ::sax_fastparser::FSHelperPtr
+                        GetFS() { return m_pSerializer; }
+
+    /// Export the sdr object as VML.
+    ///
+    /// Call this when you need to export the object as VML.
+    using EscherEx::AddSdrObject;
+
+protected:
+    /// Add an attribute to the generated <v:shape/> element.
+    ///
+    /// This should be called from within StartShape() to ensure that the
+    /// added attribute is preserved.
+    void                AddShapeAttribute( sal_Int32 nAttribute, const rtl::OString& sValue );
+
+    /// Start the shape for which we just collected the information.
+    ///
+    /// Returns the element's tag number, -1 means we wrote nothing.
+    virtual sal_Int32   StartShape();
+
+    /// End the shape.
+    ///
+    /// The parameter is just what we got from StartShape().
+    virtual void        EndShape( sal_Int32 nShapeElement );
+
+    virtual void        Commit( EscherPropertyContainer& rProps, const Rectangle& rRect );
+
+private:
+
+    virtual void OpenContainer( UINT16 nEscherContainer, int nRecInstance = 0 );
+    virtual void CloseContainer();
+
+    virtual UINT32 EnterGroup( const String& rShapeName, const Rectangle* pBoundRect = 0 );
+    virtual void LeaveGroup();
+
+    virtual void AddShape( UINT32 nShapeType, UINT32 nShapeFlags, UINT32 nShapeId = 0 );
+
+private:
+    /// Create an OString representing the id from a numerical id.
+    static rtl::OString ShapeIdString( sal_uInt32 nId );
+
+    /// Add starting and ending point of a line to the m_pShapeAttrList.
+    void AddLineDimensions( const Rectangle& rRectangle );
+
+    /// Add position and size to the OStringBuffer.
+    void AddRectangleDimensions( rtl::OStringBuffer& rBuffer, const Rectangle& rRectangle );
+};
+
+} // namespace vml
+
+} // namespace oox
diff --git oox/prj/build.lst oox/prj/build.lst
index b582229..e3d36b8 100644
--- oox/prj/build.lst
+++ oox/prj/build.lst
@@ -1,4 +1,4 @@
-oox	oox : vos cppu cppuhelper comphelper sal offapi sax basegfx tools unotools BOOST:boost NULL
+oox	oox : vos cppu cppuhelper comphelper sal offapi sax basegfx svx tools unotools vcl BOOST:boost NULL
 oox	oox				usr1	-   all	oox_mkout NULL
 oox	oox\prj				get	-   all	oox_prj NULL
 oox	oox\source\token		nmake	-   all	oox_token NULL
@@ -15,4 +15,5 @@ oox	oox\source\vml			nmake	-   all	oox_vml oox_token NULL
 oox	oox\source\xls			nmake	-   all	oox_xls oox_token NULL
 oox	oox\source\dump			nmake	-   all	oox_dump oox_token NULL
 oox	oox\source\shape		nmake   -   all oox_shape oox_token NULL
-oox	oox\util			nmake   -   all oox_util oox_token oox_helper oox_core oox_ole oox_vml oox_drawingml oox_diagram oox_chart oox_table oox_ppt oox_xls oox_dump oox_shape oox_docprop NULL
+oox	oox\source\export		nmake   -   all oox_export oox_token NULL
+oox	oox\util			nmake   -   all oox_util oox_token oox_helper oox_core oox_ole oox_vml oox_drawingml oox_diagram oox_chart oox_table oox_ppt oox_xls oox_dump oox_export oox_shape oox_docprop NULL
diff --git oox/prj/d.lst oox/prj/d.lst
index 54fc7f7..2bf664a 100644
--- oox/prj/d.lst
+++ oox/prj/d.lst
@@ -1,5 +1,6 @@
 mkdir: %_DEST%\inc%_EXT%\oox
 mkdir: %_DEST%\inc%_EXT%\oox\core
+mkdir: %_DEST%\inc%_EXT%\oox\export
 mkdir: %_DEST%\inc%_EXT%\oox\helper
 mkdir: %_DEST%\inc%_EXT%\oox\vml
 mkdir: %_DEST%\inc%_EXT%\oox\drawingml
@@ -27,6 +28,7 @@ mkdir: %_DEST%\inc%_EXT%\oox\drawingml\table
 ..\inc\oox\drawingml\chart\chartconverter.hxx %_DEST%\inc%_EXT%\oox\drawingml\chart\chartconverter.hxx
 ..\inc\oox\drawingml\table\tablestylelist.hxx %_DEST%\inc%_EXT%\oox\drawingml\table\tablestylelist.hxx
 ..\inc\oox\vml\shape.hxx %_DEST%\inc%_EXT%\oox\vml\shape.hxx
+..\inc\oox\export\*.hxx %_DEST%\inc%_EXT%\oox\export\*.hxx
 
 ..\%__SRC%\lib\*.dylib %_DEST%\lib%_EXT%\*.dylib
 
diff --git oox/source/core/xmlfilterbase.cxx oox/source/core/xmlfilterbase.cxx
index 3e6d72b..8ff8f0d 100644
--- oox/source/core/xmlfilterbase.cxx
+++ oox/source/core/xmlfilterbase.cxx
@@ -29,9 +29,21 @@
  ************************************************************************/
 
 #include "oox/core/xmlfilterbase.hxx"
+#include "oox/core/fasttokenhandler.hxx"
+#include "oox/core/fragmenthandler.hxx"
+#include "oox/core/modelobjectcontainer.hxx"
+#include "oox/core/namespaces.hxx"
+#include "oox/core/recordparser.hxx"
+#include "oox/core/relationshandler.hxx"
+#include "oox/helper/containerhelper.hxx"
+#include "oox/helper/zipstorage.hxx"
+
 #include <set>
-#include <stdio.h>
+
+#include <cstdio>
+
 #include <rtl/ustrbuf.hxx>
+
 #include <com/sun/star/beans/XPropertySet.hpp>
 #include <com/sun/star/container/XNameContainer.hpp>
 #include <com/sun/star/document/XDocumentSubStorageSupplier.hpp>
@@ -40,15 +52,10 @@
 #include <com/sun/star/embed/XRelationshipAccess.hpp>
 #include <com/sun/star/xml/sax/InputSource.hpp>
 #include <com/sun/star/xml/sax/XFastParser.hpp>
+#include <com/sun/star/document/XDocumentProperties.hpp>
 #include <sax/fshelper.hxx>
-#include "oox/helper/containerhelper.hxx"
-#include "oox/helper/zipstorage.hxx"
-#include "oox/core/fasttokenhandler.hxx"
-#include "oox/core/fragmenthandler.hxx"
-#include "oox/core/modelobjectcontainer.hxx"
-#include "oox/core/namespaces.hxx"
-#include "oox/core/recordparser.hxx"
-#include "oox/core/relationshandler.hxx"
+
+#include "tokens.hxx"
 
 using ::rtl::OUString;
 using ::rtl::OUStringBuffer;
@@ -61,6 +68,7 @@ using ::com::sun::star::uno::RuntimeException;
 using ::com::sun::star::uno::UNO_QUERY;
 using ::com::sun::star::uno::UNO_QUERY_THROW;
 using ::com::sun::star::uno::makeAny;
+using ::com::sun::star::lang::Locale;
 using ::com::sun::star::lang::XMultiServiceFactory;
 using ::com::sun::star::embed::XRelationshipAccess;
 using ::com::sun::star::embed::XStorage;
@@ -75,6 +83,8 @@ using ::com::sun::star::xml::sax::XFastTokenHandler;
 using ::com::sun::star::xml::sax::XFastDocumentHandler;
 using ::com::sun::star::xml::sax::InputSource;
 using ::com::sun::star::xml::sax::SAXException;
+using ::com::sun::star::document::XDocumentProperties;
+using ::com::sun::star::util::DateTime;
 using ::sax_fastparser::FastSerializerHelper;
 using ::sax_fastparser::FSHelperPtr;
 
@@ -363,6 +373,186 @@ OUString XmlFilterBase::addRelation( const Reference< XOutputStream > xOutputStr
     return OUString();
 }
 
+static void
+writeElement( FSHelperPtr pDoc, sal_Int32 nXmlElement, const OUString& sValue )
+{
+    if( sValue.getLength() == 0 )
+        return;
+    pDoc->startElement( nXmlElement, FSEND );
+    pDoc->write( sValue );
+    pDoc->endElement( nXmlElement );
+}
+
+static void
+writeElement( FSHelperPtr pDoc, sal_Int32 nXmlElement, const sal_Int32 nValue )
+{
+    pDoc->startElement( nXmlElement, FSEND );
+    pDoc->write( OUString::valueOf( nValue ) );
+    pDoc->endElement( nXmlElement );
+}
+
+static void
+writeElement( FSHelperPtr pDoc, sal_Int32 nXmlElement, const DateTime& rTime )
+{
+    if( rTime.Year == 0 )
+        return;
+
+    pDoc->startElement( nXmlElement, 
+            FSNS( XML_xsi, XML_type ), "dcterms:W3CDTF",
+            FSEND );
+
+    char pStr[200];
+    snprintf( pStr, sizeof( pStr ), "%d-%02d-%02dT%02d:%02d:%02d.%02dZ",
+            rTime.Year, rTime.Month, rTime.Day,
+            rTime.Hours, rTime.Minutes, rTime.Seconds,
+            rTime.HundredthSeconds );
+
+    pDoc->write( pStr );
+
+    pDoc->endElement( nXmlElement );
+}
+
+static void
+writeElement( FSHelperPtr pDoc, sal_Int32 nXmlElement, Sequence< rtl::OUString > aItems )
+{
+    if( aItems.getLength() == 0 )
+        return;
+
+    OUStringBuffer sRep;
+    sRep.append( aItems[ 0 ] );
+
+    for( sal_Int32 i = 1, end = aItems.getLength(); i < end; ++i )
+    {
+        sRep.appendAscii( " " ).append( aItems[ i ] );
+    }
+
+    writeElement( pDoc, nXmlElement, sRep.makeStringAndClear() );
+}
+
+static void
+writeElement( FSHelperPtr pDoc, sal_Int32 nXmlElement, const Locale& rLocale )
+{
+    // TODO: what to do with .Country and .Variant
+    writeElement( pDoc, nXmlElement, rLocale.Language );
+}
+
+static void
+writeCoreProperties( XmlFilterBase& rSelf, Reference< XDocumentProperties > xProperties )
+{
+    rSelf.addRelation(
+            CREATE_OUSTRING( "http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties" ),
+            CREATE_OUSTRING( "docProps/core.xml" ) );
+    FSHelperPtr pCoreProps = rSelf.openOutputStreamWithSerializer(
+            CREATE_OUSTRING( "docProps/core.xml" ),
+            CREATE_OUSTRING( "application/vnd.openxmlformats-package.core-properties+xml" ) );
+    pCoreProps->startElementNS( XML_cp, XML_coreProperties,
+            FSNS( XML_xmlns, XML_cp ),          "http://schemas.openxmlformats.org/package/2006/metadata/core-properties",
+            FSNS( XML_xmlns, XML_dc ),          "http://purl.org/dc/elements/1.1/",
+            FSNS( XML_xmlns, XML_dcterms ),     "http://purl.org/dc/terms/",
+            FSNS( XML_xmlns, XML_dcmitype ),    "http://purl.org/dc/dcmitype/",
+            FSNS( XML_xmlns, XML_xsi ),         "http://www.w3.org/2001/XMLSchema-instance",
+            FSEND );
+
+#if OOXTODO
+    writeElement( pCoreProps, FSNS( XML_cp, XML_category ),         "category" );
+    writeElement( pCoreProps, FSNS( XML_cp, XML_contentStatus ),    "status" );
+    writeElement( pCoreProps, FSNS( XML_cp, XML_contentType ),      "contentType" );
+#endif  /* def OOXTODO */
+    writeElement( pCoreProps, FSNS( XML_dcterms, XML_created ),     xProperties->getCreationDate() );
+    writeElement( pCoreProps, FSNS( XML_dc, XML_creator ),          xProperties->getAuthor() );
+    writeElement( pCoreProps, FSNS( XML_dc, XML_description ),      xProperties->getDescription() );
+#if OOXTODO
+    writeElement( pCoreProps, FSNS( XML_dc, XML_identifier ),       "ident" );
+#endif  /* def OOXTODO */
+    writeElement( pCoreProps, FSNS( XML_cp, XML_keywords ),         xProperties->getKeywords() );
+    writeElement( pCoreProps, FSNS( XML_dc, XML_language ),         xProperties->getLanguage() );
+    writeElement( pCoreProps, FSNS( XML_cp, XML_lastModifiedBy ),   xProperties->getModifiedBy() );
+    writeElement( pCoreProps, FSNS( XML_cp, XML_lastPrinted ),      xProperties->getPrintDate() );
+    writeElement( pCoreProps, FSNS( XML_dcterms, XML_modified ),    xProperties->getModificationDate() );
+    writeElement( pCoreProps, FSNS( XML_cp, XML_revision ),         xProperties->getEditingCycles() );
+    writeElement( pCoreProps, FSNS( XML_dc, XML_subject ),          xProperties->getSubject() );
+    writeElement( pCoreProps, FSNS( XML_dc, XML_title ),            xProperties->getTitle() );
+#if OOXTODO
+    writeElement( pCoreProps, FSNS( XML_cp, XML_version ),          "version" );
+#endif  /* def OOXTODO */
+
+    pCoreProps->endElementNS( XML_cp, XML_coreProperties );
+}
+
+static void
+writeAppProperties( XmlFilterBase& rSelf, Reference< XDocumentProperties > xProperties )
+{
+    rSelf.addRelation(
+            CREATE_OUSTRING( "http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties" ),
+            CREATE_OUSTRING( "docProps/app.xml" ) );
+    FSHelperPtr pAppProps = rSelf.openOutputStreamWithSerializer(
+            CREATE_OUSTRING( "docProps/app.xml" ),
+            CREATE_OUSTRING( "application/vnd.openxmlformats-officedocument.extended-properties+xml" ) );
+    pAppProps->startElement( XML_Properties,
+            XML_xmlns,                  "http://schemas.openxmlformats.org/officeDocument/2006/extended-properties",
+            FSNS( XML_xmlns, XML_vt ),  "http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes",
+            FSEND );
+
+    writeElement( pAppProps, XML_Template,              xProperties->getTemplateName() );
+#if OOXTODO
+    writeElement( pAppProps, XML_Manager,               "manager" );
+    writeElement( pAppProps, XML_Company,               "company" );
+    writeElement( pAppProps, XML_Pages,                 "pages" );
+    writeElement( pAppProps, XML_Words,                 "words" );
+    writeElement( pAppProps, XML_Characters,            "characters" );
+    writeElement( pAppProps, XML_PresentationFormat,    "presentation format" );
+    writeElement( pAppProps, XML_Lines,                 "lines" );
+    writeElement( pAppProps, XML_Paragraphs,            "paragraphs" );
+    writeElement( pAppProps, XML_Slides,                "slides" );
+    writeElement( pAppProps, XML_Notes,                 "notes" );
+#endif  /* def OOXTODO */
+    writeElement( pAppProps, XML_TotalTime,             xProperties->getEditingDuration() );
+#if OOXTODO
+    writeElement( pAppProps, XML_HiddenSlides,          "hidden slides" );
+    writeElement( pAppProps, XML_MMClips,               "mm clips" );
+    writeElement( pAppProps, XML_ScaleCrop,             "scale crop" );
+    writeElement( pAppProps, XML_HeadingPairs,          "heading pairs" );
+    writeElement( pAppProps, XML_TitlesOfParts,         "titles of parts" );
+    writeElement( pAppProps, XML_LinksUpToDate,         "links up-to-date" );
+    writeElement( pAppProps, XML_CharactersWithSpaces,  "characters with spaces" );
+    writeElement( pAppProps, XML_SharedDoc,             "shared doc" );
+    writeElement( pAppProps, XML_HyperlinkBase,         "hyperlink base" );
+    writeElement( pAppProps, XML_HLinks,                "hlinks" );
+    writeElement( pAppProps, XML_HyperlinksChanged,     "hyperlinks changed" );
+    writeElement( pAppProps, XML_DigSig,                "digital signature" );
+#endif  /* def OOXTODO */
+    writeElement( pAppProps, XML_Application,           xProperties->getGenerator() );
+#if OOXTODO
+    writeElement( pAppProps, XML_AppVersion,            "app version" );
+    writeElement( pAppProps, XML_DocSecurity,           "doc security" );
+#endif  /* def OOXTODO */
+    pAppProps->endElement( XML_Properties );
+}
+
+XmlFilterBase& XmlFilterBase::exportDocumentProperties( Reference< XDocumentProperties > xProperties )
+{
+    if( xProperties.is() )
+    {
+        writeCoreProperties( *this, xProperties );
+        writeAppProperties( *this, xProperties );
+        Sequence< ::com::sun::star::beans::NamedValue > aStats = xProperties->getDocumentStatistics();
+        printf( "# Document Statistics:\n" );
+        for( sal_Int32 i = 0, end = aStats.getLength(); i < end; ++i )
+        {
+            ::com::sun::star::uno::Any aValue = aStats[ i ].Value;
+            ::rtl::OUString sValue;
+            bool bHaveString = aValue >>= sValue;
+            printf ("#\t%s=%s [%s]\n", 
+                    OUStringToOString( aStats[ i ].Name, RTL_TEXTENCODING_UTF8 ).getStr(),
+                    bHaveString
+                        ? OUStringToOString( sValue, RTL_TEXTENCODING_UTF8 ).getStr()
+                        : "<unconvertable>",
+                    OUStringToOString( aValue.getValueTypeName(), RTL_TEXTENCODING_UTF8 ).getStr());
+        }
+    }
+    return *this;
+}
+
 // ============================================================================
 
 } // namespace core
diff --git oox/source/export/README oox/source/export/README
new file mode 100644
index 0000000..56195b9
--- /dev/null
+++ oox/source/export/README
@@ -0,0 +1,2 @@
+presetTextWarpDefinitions.xml and presetShapeDefinitions.xml come from the
+OOXML documentation (TC45).
diff --git oox/source/export/drawingml.cxx oox/source/export/drawingml.cxx
new file mode 100644
index 0000000..1d29513
--- /dev/null
+++ oox/source/export/drawingml.cxx
@@ -0,0 +1,1404 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include "tokens.hxx"
+#include "oox/core/xmlfilterbase.hxx"
+#include "oox/export/drawingml.hxx"
+#include "oox/export/utils.hxx"
+
+#include <cstdio>
+#include <com/sun/star/awt/CharSet.hpp>
+#include <com/sun/star/awt/FontDescriptor.hpp>
+#include <com/sun/star/awt/FontSlant.hpp>
+#include <com/sun/star/awt/FontWeight.hpp>
+#include <com/sun/star/awt/FontUnderline.hpp>
+#include <com/sun/star/awt/Gradient.hpp>
+#include <com/sun/star/beans/XPropertySet.hpp>
+#include <com/sun/star/beans/XPropertyState.hpp>
+#include <com/sun/star/container/XEnumerationAccess.hpp>
+#include <com/sun/star/drawing/BitmapMode.hpp>
+#include <com/sun/star/drawing/EnhancedCustomShapeAdjustmentValue.hpp>
+#include <com/sun/star/drawing/LineDash.hpp>
+#include <com/sun/star/drawing/LineJoint.hpp>
+#include <com/sun/star/drawing/LineStyle.hpp>
+#include <com/sun/star/drawing/TextHorizontalAdjust.hpp>
+#include <com/sun/star/drawing/TextVerticalAdjust.hpp>
+#include <com/sun/star/i18n/ScriptType.hpp>
+#include <com/sun/star/io/XOutputStream.hpp>
+#include <com/sun/star/style/ParagraphAdjust.hpp>
+#include <com/sun/star/text/XText.hpp>
+#include <com/sun/star/text/XTextContent.hpp>
+#include <com/sun/star/text/XTextField.hpp>
+#include <com/sun/star/text/XTextRange.hpp>
+#include <tools/stream.hxx>
+#include <tools/string.hxx>
+#include <vcl/cvtgrf.hxx>
+#include <vcl/fontcvt.hxx>
+#include <vcl/graph.hxx>
+#include <goodies/grfmgr.hxx>
+#include <rtl/strbuf.hxx>
+#include <sfx2/app.hxx>
+#include <svtools/languageoptions.hxx>
+#include <svx/escherex.hxx>
+#include <svx/svxenum.hxx>
+
+using namespace ::com::sun::star;
+using namespace ::com::sun::star::uno;
+using namespace ::com::sun::star::drawing;
+using namespace ::com::sun::star::i18n;
+using ::com::sun::star::beans::PropertyState;
+using ::com::sun::star::beans::PropertyValue;
+using ::com::sun::star::beans::XPropertySet;
+using ::com::sun::star::beans::XPropertyState;
+using ::com::sun::star::container::XEnumeration;
+using ::com::sun::star::container::XEnumerationAccess;
+using ::com::sun::star::container::XIndexAccess;
+using ::com::sun::star::io::XOutputStream;
+using ::com::sun::star::text::XText;
+using ::com::sun::star::text::XTextContent;
+using ::com::sun::star::text::XTextField;
+using ::com::sun::star::text::XTextRange;
+using ::rtl::OString;
+using ::rtl::OStringBuffer;
+using ::rtl::OUString;
+using ::rtl::OUStringBuffer;
+using ::sax_fastparser::FSHelperPtr;
+
+DBG(extern void dump_pset(Reference< XPropertySet > rXPropSet));
+
+namespace oox {
+namespace drawingml {
+
+#define GETA(propName) \
+    GetProperty( rXPropSet, String( RTL_CONSTASCII_USTRINGPARAM( #propName ) ) )
+
+#define GETAD(propName) \
+    ( GetPropertyAndState( rXPropSet, rXPropState, String( RTL_CONSTASCII_USTRINGPARAM( #propName ) ), eState ) && eState == beans::PropertyState_DIRECT_VALUE )
+
+#define GET(variable, propName) \
+    if ( GETA(propName) ) \
+        mAny >>= variable;
+
+// not thread safe
+int DrawingML::mnImageCounter = 1;
+
+void DrawingML::ResetCounters()
+{
+    mnImageCounter = 1;
+}
+
+bool DrawingML::GetProperty( Reference< XPropertySet > rXPropSet, String aName )
+{
+    bool bRetValue = false;
+
+    try {
+        mAny = rXPropSet->getPropertyValue( aName );
+        if ( mAny.hasValue() )
+            bRetValue = true;
+    } catch( Exception& ) { /* printf ("exception when trying to get value of property: %s\n", ST(aName)); */ }
+
+    return bRetValue;
+}
+
+bool DrawingML::GetPropertyAndState( Reference< XPropertySet > rXPropSet, Reference< XPropertyState > rXPropState, String aName, PropertyState& eState )
+{
+    bool bRetValue = false;
+
+    try {
+        mAny = rXPropSet->getPropertyValue( aName );
+        if ( mAny.hasValue() ) {
+            bRetValue = true;
+            eState = rXPropState->getPropertyState( aName );
+        }
+    } catch( Exception& ) { /* printf ("exception when trying to get value of property: %s\n", ST(aName)); */ }
+
+    return bRetValue;
+}
+
+void DrawingML::WriteColor( sal_uInt32 nColor )
+{
+    OString sColor = OString::valueOf( ( sal_Int64 ) nColor, 16 );
+    if( sColor.getLength() < 6 ) {
+        OStringBuffer sBuf( "0" );
+        int remains = 5 - sColor.getLength();
+
+        while( remains > 0 ) {
+            sBuf.append( "0" );
+            remains--;
+        }
+
+        sBuf.append( sColor );
+
+        sColor = sBuf.getStr();
+    }
+    mpFS->singleElementNS( XML_a, XML_srgbClr, XML_val, sColor.getStr(), FSEND );
+}
+
+void DrawingML::WriteSolidFill( sal_uInt32 nColor )
+{
+    mpFS->startElementNS( XML_a, XML_solidFill, FSEND );
+    WriteColor( nColor );
+    mpFS->endElementNS( XML_a, XML_solidFill );
+}
+
+void DrawingML::WriteSolidFill( Reference< XPropertySet > rXPropSet )
+{
+    if ( GetProperty( rXPropSet, S( "FillColor" ) ) )
+        WriteSolidFill( *((sal_uInt32*) mAny.getValue()) & 0xffffff );
+}
+
+void DrawingML::WriteGradientStop( sal_uInt16 nStop, sal_uInt32 nColor )
+{
+    mpFS->startElementNS( XML_a, XML_gs,
+                          XML_pos, I32S( nStop * 1000 ),
+                          FSEND );
+    WriteColor( nColor );
+    mpFS->endElementNS( XML_a, XML_gs );
+}
+
+sal_uInt32 DrawingML::ColorWithIntensity( sal_uInt32 nColor, sal_uInt32 nIntensity )
+{
+    return ( ( ( nColor & 0xff ) * nIntensity ) / 100 )
+        | ( ( ( ( ( nColor & 0xff00 ) >> 8 ) * nIntensity ) / 100 ) << 8 )
+        | ( ( ( ( ( nColor & 0xff0000 ) >> 8 ) * nIntensity ) / 100 ) << 8 );
+}
+
+void DrawingML::WriteGradientFill( Reference< XPropertySet > rXPropSet )
+{
+    awt::Gradient aGradient;
+    if( GETA( FillGradient ) ) {
+        aGradient = *static_cast< const awt::Gradient* >( mAny.getValue() );
+
+        mpFS->startElementNS( XML_a, XML_gradFill, FSEND );
+
+        switch( aGradient.Style ) {
+            default:
+            case GradientStyle_LINEAR:
+                mpFS->startElementNS( XML_a, XML_gsLst, FSEND );
+                WriteGradientStop( 0, ColorWithIntensity( aGradient.StartColor, aGradient.StartIntensity ) );
+                WriteGradientStop( 100, ColorWithIntensity( aGradient.EndColor, aGradient.EndIntensity ) );
+                mpFS->endElementNS( XML_a, XML_gsLst );
+                mpFS->singleElementNS( XML_a, XML_lin,
+                                       XML_ang, I32S( ( ( ( 3600 - aGradient.Angle + 900 ) * 6000 ) % 21600000 ) ),
+                                       FSEND );
+                break;
+
+            case GradientStyle_AXIAL:
+                mpFS->startElementNS( XML_a, XML_gsLst, FSEND );
+                WriteGradientStop( 0, ColorWithIntensity( aGradient.EndColor, aGradient.EndIntensity ) );
+                WriteGradientStop( 50, ColorWithIntensity( aGradient.StartColor, aGradient.StartIntensity ) );
+                WriteGradientStop( 100, ColorWithIntensity( aGradient.EndColor, aGradient.EndIntensity ) );
+                mpFS->endElementNS( XML_a, XML_gsLst );
+                mpFS->singleElementNS( XML_a, XML_lin,
+                                       XML_ang, I32S( ( ( ( 3600 - aGradient.Angle + 900 ) * 6000 ) % 21600000 ) ),
+                                       FSEND );
+                break;
+
+                /* I don't see how to apply transformation to gradients, so
+                 * elliptical will end as radial and square as
+                 * rectangular. also position offsets are not applied */
+            case GradientStyle_RADIAL:
+            case GradientStyle_ELLIPTICAL:
+            case GradientStyle_RECT:
+            case GradientStyle_SQUARE:
+                mpFS->startElementNS( XML_a, XML_gsLst, FSEND );
+                WriteGradientStop( 0, ColorWithIntensity( aGradient.EndColor, aGradient.EndIntensity ) );
+                WriteGradientStop( 100, ColorWithIntensity( aGradient.StartColor, aGradient.StartIntensity ) );
+                mpFS->endElementNS( XML_a, XML_gsLst );
+                mpFS->singleElementNS( XML_a, XML_path,
+                                       XML_path, ( aGradient.Style == awt::GradientStyle_RADIAL || aGradient.Style == awt::GradientStyle_ELLIPTICAL ) ? "circle" : "rect",
+                                       FSEND );
+                break;
+        }
+
+        mpFS->endElementNS( XML_a, XML_gradFill );
+    }
+
+}
+
+void DrawingML::WriteLineArrow( Reference< XPropertySet > rXPropSet, sal_Bool bLineStart )
+{
+    ESCHER_LineEnd eLineEnd;
+    sal_Int32 nArrowLength;
+    sal_Int32 nArrowWidth;
+
+    if ( EscherPropertyContainer::GetLineArrow( bLineStart, rXPropSet, eLineEnd, nArrowLength, nArrowWidth ) ) {
+        const char* len;
+        const char* type;
+        const char* width;
+
+        switch( nArrowLength ) {
+            case ESCHER_LineShortArrow:
+                len = "sm";
+                break;
+            default:
+            case ESCHER_LineMediumLenArrow:
+                len = "med";
+                break;
+            case ESCHER_LineLongArrow:
+                len = "lg";
+                break;
+        }
+
+        switch( eLineEnd ) {
+            default:
+            case ESCHER_LineNoEnd:
+                type = "none";
+                break;
+            case ESCHER_LineArrowEnd:
+                type = "triangle";
+                break;
+            case ESCHER_LineArrowStealthEnd:
+                type = "stealth";
+                break;
+            case ESCHER_LineArrowDiamondEnd:
+                type = "diamond";
+                break;
+            case ESCHER_LineArrowOvalEnd:
+                type = "oval";
+                break;
+            case ESCHER_LineArrowOpenEnd:
+                type = "arrow";
+                break;
+        }
+
+        switch( nArrowWidth ) {
+            case ESCHER_LineNarrowArrow:
+                width = "sm";
+                break;
+            default:
+            case ESCHER_LineMediumWidthArrow:
+                width = "med";
+                break;
+            case ESCHER_LineWideArrow:
+                width = "lg";
+                break;
+        }
+
+        mpFS->singleElementNS( XML_a, bLineStart ? XML_headEnd : XML_tailEnd,
+                               XML_len, len,
+                               XML_type, type,
+                               XML_w, width,
+                               FSEND );
+    }
+}
+
+void DrawingML::WriteOutline( Reference< XPropertySet > rXPropSet )
+{
+    drawing::LineStyle aLineStyle( drawing::LineStyle_NONE );
+
+    GET( aLineStyle, LineStyle );
+
+    if( aLineStyle == drawing::LineStyle_NONE )
+        return;
+
+    sal_uInt32 nLineWidth = 0;
+    sal_uInt32 nColor = 0;
+    sal_Bool bColorSet = FALSE;
+    const char* cap = NULL;
+    drawing::LineDash aLineDash;
+    sal_Bool bDashSet = FALSE;
+
+    GET( nLineWidth, LineWidth );
+
+    switch( aLineStyle ) {
+        case drawing::LineStyle_DASH:
+            if( GETA( LineDash ) ) {
+                aLineDash = *(drawing::LineDash*) mAny.getValue();
+                bDashSet = TRUE;
+                if( aLineDash.Style == DashStyle_ROUND || aLineDash.Style == DashStyle_ROUNDRELATIVE )
+                    cap = "rnd";
+
+                DBG(printf("dash dots: %d dashes: %d dotlen: %d dashlen: %d distance: %d\n",
+                            int( aLineDash.Dots ), int( aLineDash.Dashes ), int( aLineDash.DotLen ), int( aLineDash.DashLen ), int( aLineDash.Distance )));
+            }
+            /* fallthru intended */
+        case drawing::LineStyle_SOLID:
+        default:
+            if ( GETA( LineColor ) ) {
+                nColor = *((sal_uInt32*) mAny.getValue()) & 0xffffff;
+                bColorSet = TRUE;
+            }
+            break;
+    }
+
+    mpFS->startElementNS( XML_a, XML_ln,
+                          XML_cap, cap,
+                          XML_w, nLineWidth > 1 ? I64S( MM100toEMU( nLineWidth ) ) : NULL,
+                          FSEND );
+    if( bColorSet )
+        WriteSolidFill( nColor );
+
+    if( bDashSet ) {
+        mpFS->startElementNS( XML_a, XML_custDash, FSEND );
+        int i;
+        for( i = 0; i < aLineDash.Dots; i ++ )
+            mpFS->singleElementNS( XML_a, XML_ds,
+                                   XML_d, aLineDash.DotLen ? I64S( aLineDash.DotLen*1000 ) : "100000",
+                                   XML_sp, I64S( aLineDash.Distance*1000 ),
+                                   FSEND );
+        for( i = 0; i < aLineDash.Dashes; i ++ )
+            mpFS->singleElementNS( XML_a, XML_ds,
+                                   XML_d, aLineDash.DashLen ? I64S( aLineDash.DashLen*1000 ) : "100000",
+                                   XML_sp, I64S( aLineDash.Distance*1000 ),
+                                   FSEND );
+        mpFS->endElementNS( XML_a, XML_custDash );
+    }
+
+    if( nLineWidth > 1 && GETA( LineJoint ) ) {
+        LineJoint eLineJoint;
+
+        mAny >>= eLineJoint;
+        switch( eLineJoint ) {
+            case LineJoint_NONE:
+            case LineJoint_MIDDLE:
+            case LineJoint_BEVEL:
+                mpFS->singleElementNS( XML_a, XML_bevel, FSEND );
+                break;
+            default:
+            case LineJoint_MITER:
+                mpFS->singleElementNS( XML_a, XML_miter, FSEND );
+                break;
+            case LineJoint_ROUND:
+                mpFS->singleElementNS( XML_a, XML_round, FSEND );
+                break;
+        }
+    }
+
+    WriteLineArrow( rXPropSet, sal_True );
+    WriteLineArrow( rXPropSet, sal_False );
+
+    mpFS->endElementNS( XML_a, XML_ln );
+}
+
+OUString DrawingML::WriteImage( const OUString& rURL )
+{
+    ByteString aURLBS( UniString( rURL ), RTL_TEXTENCODING_UTF8 );
+
+    const char aURLBegin[] = "vnd.sun.star.GraphicObject:";
+    int index = aURLBS.Search( aURLBegin );
+
+    if ( index != STRING_NOTFOUND ) {
+        DBG(printf ("begin: %ld %s\n", long( sizeof( aURLBegin ) ), USS( rURL ) + sizeof( aURLBegin ) - 1 ));
+        aURLBS.Erase( 0, sizeof( aURLBegin ) - 1 );
+        Graphic aGraphic = GraphicObject( aURLBS ).GetTransformedGraphic ();
+
+        return WriteImage( aGraphic );
+    } else {
+        // add link to relations
+    }
+
+    return OUString();
+}
+
+OUString DrawingML::WriteImage( const Graphic& rGraphic )
+{
+    GfxLink aLink = rGraphic.GetLink ();
+    OUString sMediaType;
+    const char* sExtension = NULL;
+    OUString sRelId;
+
+    SvMemoryStream aStream;
+    const void* aData = aLink.GetData();
+    sal_Size nDataSize = aLink.GetDataSize();
+
+    switch ( aLink.GetType() ) {
+        case GFX_LINK_TYPE_NATIVE_GIF:
+            sMediaType = US( "image/gif" );
+            sExtension = ".gif";
+            break;
+        case GFX_LINK_TYPE_NATIVE_JPG:
+            sMediaType = US( "image/jpeg" );
+            sExtension = ".jpeg";
+            break;
+        case GFX_LINK_TYPE_NATIVE_PNG:
+            sMediaType = US( "image/png" );
+            sExtension = ".png";
+            break;
+        case GFX_LINK_TYPE_NATIVE_TIF:
+            sMediaType = US( "image/tiff" );
+            sExtension = ".tiff";
+            break;
+        case GFX_LINK_TYPE_NATIVE_WMF:
+            sMediaType = US( "image/x-wmf" );
+            sExtension = ".wmf";
+            break;
+        case GFX_LINK_TYPE_NATIVE_MET:
+            sMediaType = US( "image/x-met" );
+            sExtension = ".met";
+            break;
+        case GFX_LINK_TYPE_NATIVE_PCT:
+            sMediaType = US( "image/x-pict" );
+            sExtension = ".pct";
+            break;
+        default: {
+            GraphicType aType = rGraphic.GetType();
+            if ( aType == GRAPHIC_BITMAP ) {
+                GraphicConverter::Export( aStream, rGraphic, CVT_PNG );
+                sMediaType = US( "image/png" );
+                sExtension = ".png";
+            } else if ( aType == GRAPHIC_GDIMETAFILE ) {
+                GraphicConverter::Export( aStream, rGraphic, CVT_EMF );
+                sMediaType = US( "image/x-emf" );
+                sExtension = ".emf";
+            } else {
+                OSL_TRACE( "unhandled graphic type" );
+                break;
+            }
+
+            aData = aStream.GetData();
+            nDataSize = aStream.GetSize();
+            break;
+            }
+    }
+
+    const char *pComponent = NULL;
+    switch ( meDocumentType )
+    {
+        case DOCUMENT_DOCX: pComponent = "word"; break;
+        case DOCUMENT_PPTX: pComponent = "ppt"; break;
+        case DOCUMENT_XLSX: pComponent = "xl"; break;
+    }
+
+    Reference< XOutputStream > xOutStream = mpFB->openOutputStream( OUStringBuffer()
+                                                                    .appendAscii( pComponent )
+                                                                    .appendAscii( "/media/image" )
+                                                                    .append( (sal_Int32) mnImageCounter )
+                                                                    .appendAscii( sExtension )
+                                                                    .makeStringAndClear(),
+                                                                    sMediaType );
+    xOutStream->writeBytes( Sequence< sal_Int8 >( (const sal_Int8*) aData, nDataSize ) );
+    xOutStream->closeOutput();
+    
+    const char *pImagePrefix = NULL;
+    switch ( meDocumentType )
+    {
+        case DOCUMENT_DOCX:
+            pImagePrefix = "media/image";
+            break;
+        case DOCUMENT_PPTX:
+        case DOCUMENT_XLSX:
+            pImagePrefix = "../media/image";
+            break;
+    }
+
+    sRelId = mpFB->addRelation( mpFS->getOutputStream(),
+                                US( "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image" ),
+                                OUStringBuffer()
+                                .appendAscii( pImagePrefix )
+                                .append( (sal_Int32) mnImageCounter ++ )
+                                .appendAscii( sExtension )
+                                .makeStringAndClear() );
+
+    return sRelId;
+}
+
+OUString DrawingML::WriteBlip( OUString& rURL )
+{
+        OUString sRelId = WriteImage( rURL );
+
+        mpFS->singleElementNS( XML_a, XML_blip,
+                               FSNS( XML_r, XML_embed), OUStringToOString( sRelId, RTL_TEXTENCODING_UTF8 ).getStr(),
+                               FSEND );
+
+        return sRelId;
+}
+
+void DrawingML::WriteBlipMode( Reference< XPropertySet > rXPropSet )
+{
+    BitmapMode eBitmapMode( BitmapMode_NO_REPEAT );
+    if (GetProperty( rXPropSet, S( "FillBitmapMode" ) ) )
+        mAny >>= eBitmapMode;
+
+    DBG(printf("fill bitmap mode: %d\n", eBitmapMode));
+
+    switch (eBitmapMode) {
+    case BitmapMode_REPEAT:
+        mpFS->singleElementNS( XML_a, XML_tile, FSEND );
+        break;
+    default:
+        ;
+    }
+}
+
+void DrawingML::WriteBlipFill( Reference< XPropertySet > rXPropSet, String sURLPropName )
+{
+    WriteBlipFill( rXPropSet, sURLPropName, XML_a );
+}
+
+void DrawingML::WriteBlipFill( Reference< XPropertySet > rXPropSet, String sURLPropName, sal_Int32 nXmlNamespace )
+{
+    if ( GetProperty( rXPropSet, sURLPropName ) ) {
+        OUString aURL;
+        mAny >>= aURL;
+
+        DBG(printf ("URL: %s\n", OUStringToOString( aURL, RTL_TEXTENCODING_UTF8 ).getStr() ));
+
+        if( !aURL.getLength() )
+            return;
+
+        mpFS->startElementNS( nXmlNamespace , XML_blipFill, FSEND );
+
+        WriteBlip( aURL );
+
+        if( sURLPropName == S( "FillBitmapURL" ) )
+            WriteBlipMode( rXPropSet );
+        else if( GetProperty( rXPropSet, S( "FillBitmapStretch" ) ) ) {
+                bool bStretch = false;
+                mAny >>= bStretch;
+
+                if( bStretch )
+                    WriteStretch();
+        }
+
+        mpFS->endElementNS( nXmlNamespace, XML_blipFill );
+    }
+}
+
+void DrawingML::WriteStretch()
+{
+    mpFS->startElementNS( XML_a, XML_stretch, FSEND );
+    mpFS->singleElementNS( XML_a, XML_fillRect, FSEND );
+    mpFS->endElementNS( XML_a, XML_stretch );
+}
+
+void DrawingML::WriteTransformation( const Rectangle& rRect,
+        sal_Bool bFlipH, sal_Bool bFlipV, sal_Int32 nRotation )
+{
+    mpFS->startElementNS( XML_a, XML_xfrm,
+                          XML_flipH, bFlipH ? "1" : NULL,
+                          XML_flipV, bFlipV ? "1" : NULL,
+                          XML_rot, nRotation ? I32S( nRotation ) : NULL,
+                          FSEND );
+
+    mpFS->singleElementNS( XML_a, XML_off, XML_x, IS( MM100toEMU( rRect.Left() ) ), XML_y, IS( MM100toEMU( rRect.Top() ) ), FSEND );
+    mpFS->singleElementNS( XML_a, XML_ext, XML_cx, IS( MM100toEMU( rRect.GetWidth() ) ), XML_cy, IS( MM100toEMU( rRect.GetHeight() ) ), FSEND );
+
+    mpFS->endElementNS( XML_a, XML_xfrm );
+}
+
+void DrawingML::WriteShapeTransformation( Reference< XShape > rXShape, sal_Bool bFlipH, sal_Bool bFlipV, sal_Int32 nRotation )
+{
+    DBG(printf( "write shape transformation\n" ));
+
+    awt::Point aPos = rXShape->getPosition();
+    awt::Size aSize = rXShape->getSize();
+
+    WriteTransformation( Rectangle( Point( aPos.X, aPos.Y ), Size( aSize.Width, aSize.Height ) ), bFlipH, bFlipV, nRotation );
+}
+
+void DrawingML::WriteRunProperties( Reference< XTextRange > rRun )
+{
+    Reference< XPropertySet > rXPropSet( rRun, UNO_QUERY );
+    Reference< XPropertyState > rXPropState( rRun, UNO_QUERY );
+    OUString usLanguage;
+    PropertyState eState;
+    sal_Int16 nScriptType = SvtLanguageOptions::GetScriptTypeOfLanguage( Application::GetSettings().GetLanguage() );
+    sal_Bool bComplex = ( nScriptType == ScriptType::COMPLEX );
+    const char* bold = NULL;
+    const char* italic = NULL;
+    const char* underline = NULL;
+    sal_Int32 nSize = 1800;
+
+    if( GETAD( CharHeight ) )
+        nSize = (sal_Int32) (100*(*((float*) mAny.getValue())));
+
+    if ( ( bComplex && GETAD( CharWeightComplex ) ) || GETAD( CharWeight ) )
+        if ( *((float*) mAny.getValue()) >= awt::FontWeight::SEMIBOLD )
+            bold = "1";
+
+    if ( ( bComplex && GETAD( CharPostureComplex ) ) || GETAD( CharPosture ) )
+        switch ( *((awt::FontSlant*) mAny.getValue()) )
+        {
+            case awt::FontSlant_OBLIQUE :
+            case awt::FontSlant_ITALIC :
+                italic = "1";
+                break;
+            default:
+                break;
+        }
+
+    if ( GETAD( CharUnderline ) )
+        switch ( *((sal_Int16*) mAny.getValue()) )
+        {
+            case awt::FontUnderline::SINGLE :
+                underline = "sng";
+                break;
+            case awt::FontUnderline::DOUBLE :
+                underline = "dbl";
+                break;
+            case awt::FontUnderline::DOTTED :
+                underline = "dotted";
+                break;
+            case awt::FontUnderline::DASH :
+                underline = "dash";
+                break;
+            case awt::FontUnderline::LONGDASH :
+                underline = "dashLong";
+                break;
+            case awt::FontUnderline::DASHDOT :
+                underline = "dotDash";
+                break;
+            case awt::FontUnderline::DASHDOTDOT :
+                underline = "dotDotDash";
+                break;
+            case awt::FontUnderline::WAVE :
+                underline = "wavy";
+                break;
+            case awt::FontUnderline::DOUBLEWAVE :
+                underline = "wavyDbl";
+                break;
+            case awt::FontUnderline::BOLD :
+                underline = "heavy";
+                break;
+            case awt::FontUnderline::BOLDDOTTED :
+                underline = "dottedHeavy";
+                break;
+            case awt::FontUnderline::BOLDDASH :
+                underline = "dashHeavy";
+                break;
+            case awt::FontUnderline::BOLDLONGDASH :
+                underline = "dashLongHeavy";
+                break;
+            case awt::FontUnderline::BOLDDASHDOT :
+                underline = "dotDashHeavy";
+                break;
+            case awt::FontUnderline::BOLDDASHDOTDOT :
+                underline = "dotDotDashHeavy";
+                break;
+            case awt::FontUnderline::BOLDWAVE :
+                underline = "wavyHeavy";
+                break;
+        }
+
+    if( GETA( CharLocale ) ) {
+        com::sun::star::lang::Locale eLocale;
+        mAny >>= eLocale;
+
+        OUStringBuffer usLanguageBuffer = eLocale.Language;
+        if( eLocale.Country.getLength() ) {
+            usLanguageBuffer.appendAscii( "-" );
+            usLanguageBuffer.append( eLocale.Country );
+        }
+
+        if( usLanguageBuffer.getLength() )
+            usLanguage = usLanguageBuffer.makeStringAndClear();
+    }
+
+    mpFS->startElementNS( XML_a, XML_rPr,
+                          XML_b, bold,
+                          XML_i, italic,
+                          XML_lang, usLanguage.getLength() ? USS( usLanguage ) : NULL,
+                          XML_sz, nSize == 1800 ? NULL : IS( nSize ),
+                          XML_u, underline,
+                          FSEND );
+
+    // mso doesn't like text color to be placed after typeface
+    if( GETAD( CharColor ) ) {
+        sal_uInt32 color = *((sal_uInt32*) mAny.getValue());
+        DBG(printf("run color: %x auto: %x\n", static_cast<unsigned int>( color ), static_cast<unsigned int>( COL_AUTO )));
+
+        if( color == COL_AUTO ) { // nCharColor depends to the background color
+            sal_Bool bIsDark = sal_False;
+            GET( bIsDark, IsBackgroundDark );
+            color = bIsDark ? 0xffffff : 0x000000;
+        }
+        color &= 0xffffff;
+
+        // TODO: special handle embossed/engraved
+
+        WriteSolidFill( color );
+    }
+
+    if( GETAD( CharFontName ) ) {
+        const char* typeface = NULL;
+        const char* pitch = NULL;
+        const char* charset = NULL;
+        OUString usTypeface, usPitch, usCharset;
+
+        mAny >>= usTypeface;
+        String aSubstName( GetSubsFontName( usTypeface, SUBSFONT_ONLYONE | SUBSFONT_MS ) );
+        if( aSubstName.Len() )
+            typeface = ST( aSubstName );
+        else
+            typeface = USS( usTypeface );
+
+
+
+        mpFS->singleElementNS( XML_a, XML_latin,
+                               XML_typeface, typeface,
+                               XML_pitchFamily, pitch,
+                               XML_charset, charset,
+                               FSEND );
+    }
+
+    if( ( bComplex && GETAD( CharFontNameComplex ) ) || ( !bComplex && GETAD( CharFontNameAsian ) ) ) {
+        const char* typeface = NULL;
+        const char* pitch = NULL;
+        const char* charset = NULL;
+        OUString usTypeface, usPitch, usCharset;
+
+        mAny >>= usTypeface;
+        String aSubstName( GetSubsFontName( usTypeface, SUBSFONT_ONLYONE | SUBSFONT_MS ) );
+        if( aSubstName.Len() )
+            typeface = ST( aSubstName );
+        else
+            typeface = USS( usTypeface );
+
+        mpFS->singleElementNS( XML_a, bComplex ? XML_cs : XML_ea,
+                               XML_typeface, typeface,
+                               XML_pitchFamily, pitch,
+                               XML_charset, charset,
+                               FSEND );
+    }
+
+    mpFS->endElementNS( XML_a, XML_rPr );
+}
+
+const char* DrawingML::GetFieldType( ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange > rRun )
+{
+    const char* sType = NULL;
+    Reference< XPropertySet > rXPropSet( rRun, UNO_QUERY );
+    String aFieldType;
+
+    if( GETA( TextPortionType ) ) {
+        aFieldType = String( *(::rtl::OUString*)mAny.getValue() );
+        DBG(printf ("field type: %s\n", ST(aFieldType) ));
+    }
+
+    if( aFieldType == S( "TextField" ) ) {
+        Reference< XTextField > rXTextField;
+        GET( rXTextField, TextField );
+        if( rXTextField.is() ) {
+            rXPropSet.set( rXTextField, UNO_QUERY );
+            if( rXPropSet.is() ) {
+                String aFieldKind( rXTextField->getPresentation( TRUE ) );
+                DBG(printf ("field kind: %s\n", ST(aFieldKind) ));
+                if( aFieldKind == S( "Page" ) ) {
+                    return "slidenum";
+                }
+            }
+        }
+    }
+
+    return sType;
+}
+
+void DrawingML::GetUUID( OStringBuffer& rBuffer )
+{
+    Sequence< sal_uInt8 > aSeq( 16 );
+    static char cDigits[17] = "0123456789ABCDEF";
+    rtl_createUuid( (sal_uInt8*)aSeq.getArray(), 0, sal_True );
+    int i;
+
+    rBuffer.append( '{' );
+    for( i = 0; i < 4; i++ ) {
+        rBuffer.append( cDigits[ aSeq[i] >> 4 ] );
+        rBuffer.append( cDigits[ aSeq[i] && 0xf ] );
+    }
+    rBuffer.append( '-' );
+    for( ; i < 6; i++ ) {
+        rBuffer.append( cDigits[ aSeq[i] >> 4 ] );
+        rBuffer.append( cDigits[ aSeq[i] && 0xf ] );
+    }
+    rBuffer.append( '-' );
+    for( ; i < 8; i++ ) {
+        rBuffer.append( cDigits[ aSeq[i] >> 4 ] );
+        rBuffer.append( cDigits[ aSeq[i] && 0xf ] );
+    }
+    rBuffer.append( '-' );
+    for( ; i < 10; i++ ) {
+        rBuffer.append( cDigits[ aSeq[i] >> 4 ] );
+        rBuffer.append( cDigits[ aSeq[i] && 0xf ] );
+    }
+    rBuffer.append( '-' );
+    for( ; i < 16; i++ ) {
+        rBuffer.append( cDigits[ aSeq[i] >> 4 ] );
+        rBuffer.append( cDigits[ aSeq[i] && 0xf ] );
+    }
+    rBuffer.append( '}' );
+}
+
+void DrawingML::WriteRun( Reference< XTextRange > rRun )
+{
+    const char* sFieldType;
+    bool bIsField = false;
+    OUString sText = rRun->getString();
+
+    if( sText.getLength() < 1)
+        return;
+
+    if( ( sFieldType = GetFieldType( rRun ) ) ) {
+        OStringBuffer sUUID(39);
+
+        GetUUID( sUUID );
+        mpFS->startElementNS( XML_a, XML_fld,
+                              XML_id, sUUID.getStr(),
+                              XML_type, sFieldType,
+                              FSEND );
+        bIsField = true;
+    } else
+        mpFS->startElementNS( XML_a, XML_r, FSEND );
+
+    WriteRunProperties( rRun );
+
+    mpFS->startElementNS( XML_a, XML_t, FSEND );
+    mpFS->writeEscaped( sText );
+    mpFS->endElementNS( XML_a, XML_t );
+
+    if( bIsField )
+        mpFS->endElementNS( XML_a, XML_fld );
+    else
+        mpFS->endElementNS( XML_a, XML_r );
+}
+
+#define AUTONUM(x) \
+                        if( bPBoth ) \
+                            pAutoNumType = #x "ParenBoth"; \
+                        else if( bPBehind ) \
+                            pAutoNumType = #x "ParenR"; \
+                        else if( bSDot ) \
+                            pAutoNumType = #x "Period";
+
+
+inline static const char* GetAutoNumType( sal_Int16 nNumberingType, bool bSDot, bool bPBehind, bool bPBoth )
+{
+    const char* pAutoNumType = NULL;
+
+    switch( (SvxExtNumType)nNumberingType )
+        {
+        case SVX_NUM_CHARS_UPPER_LETTER_N :
+        case SVX_NUM_CHARS_UPPER_LETTER :
+            AUTONUM( alphaUc );
+            break;
+        case SVX_NUM_CHARS_LOWER_LETTER_N :
+        case SVX_NUM_CHARS_LOWER_LETTER :
+            AUTONUM( alphaLc );
+            break;
+        case SVX_NUM_ROMAN_UPPER :
+            AUTONUM( romanUc );
+            break;
+        case SVX_NUM_ROMAN_LOWER :
+            AUTONUM( romanLc );
+            break;
+        case SVX_NUM_ARABIC :
+            AUTONUM( arabic )
+            else
+                pAutoNumType = "arabicPlain";
+                        break;
+        default:
+            break;
+        }
+    
+    return pAutoNumType;
+}
+
+void DrawingML::WriteParagraphNumbering( Reference< XPropertySet > rXPropSet, sal_Int16 nLevel )
+{
+    if( nLevel >= 0 && GETA( NumberingRules ) )
+    {
+        Reference< XIndexAccess > rXIndexAccess;
+
+        if ( ( mAny >>= rXIndexAccess ) && nLevel < rXIndexAccess->getCount() )
+        {
+            DBG(printf ("numbering rules\n"));
+
+            Sequence< PropertyValue > aPropertySequence;
+            rXIndexAccess->getByIndex( nLevel ) >>= aPropertySequence;
+           
+
+            const PropertyValue* pPropValue = aPropertySequence.getArray();
+
+            sal_Int32 nPropertyCount = aPropertySequence.getLength();
+
+            if ( nPropertyCount ) {
+
+                sal_Int16 nNumberingType = -1;
+                bool bSDot = false;
+                bool bPBehind = false;
+                bool bPBoth = false;
+                sal_Unicode aBulletChar = 0x2022; // a bullet
+                awt::FontDescriptor aFontDesc;
+                bool bHasFontDesc = false;
+                OUString aGraphicURL;
+                sal_Int16 nBulletRelSize = 0;
+
+                for ( sal_Int32 i = 0; i < nPropertyCount; i++ ) {
+                    const void* pValue = pPropValue[ i ].Value.getValue();
+                    if ( pValue ) {
+                        OUString aPropName( pPropValue[ i ].Name );
+                        DBG(printf ("pro name: %s\n", OUStringToOString( aPropName, RTL_TEXTENCODING_UTF8 ).getStr()));
+                        if ( aPropName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( "NumberingType" ) ) )
+                            nNumberingType = *( (sal_Int16*)pValue );
+                        else if ( aPropName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( "Prefix" ) ) ) {
+                            if( *(OUString*)pValue == US( ")" ) )
+                                bPBoth = true;
+                        } else if  ( aPropName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( "Suffix" ) ) ) {
+                            if( *(OUString*)pValue == US( "." ) )
+                                bSDot = true;
+                            else if( *(OUString*)pValue == US( ")" ) )
+                                bPBehind = true;
+                        } else if ( aPropName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( "BulletChar" ) ) )
+                        {
+                            aBulletChar = String ( *( (String*)pValue ) ).GetChar( 0 );
+                            //printf ("bullet char: %d\n", aBulletChar.getStr());
+                        }
+                        else if ( aPropName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( "BulletFont" ) ) )
+                        {
+                            aFontDesc = *( (awt::FontDescriptor*)pValue );
+                            bHasFontDesc = true;
+
+                            // Our numbullet dialog has set the wrong textencoding for our "StarSymbol" font,
+                            // instead of a Unicode encoding the encoding RTL_TEXTENCODING_SYMBOL was used.
+                            // Because there might exist a lot of damaged documemts I added this two lines
+                            // which fixes the bullet problem for the export.
+                            if ( aFontDesc.Name.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( "StarSymbol" ) ) )
+                                aFontDesc.CharSet = RTL_TEXTENCODING_MS_1252;
+
+                        } else if ( aPropName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( "BulletRelSize" ) ) ) {
+                            nBulletRelSize = *( (sal_Int16*)pValue );
+                        } else if ( aPropName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( "GraphicURL" ) ) ) {
+                            aGraphicURL = ( *(OUString*)pValue );
+                            DBG(printf ("graphic url: %s\n", OUStringToOString( aGraphicURL, RTL_TEXTENCODING_UTF8 ).getStr()));
+                        } else if ( aPropName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM( "GraphicSize" ) ) )
+                        {
+                            if ( pPropValue[ i ].Value.getValueType() == ::getCppuType( (awt::Size*)0) ) 
+                            {
+                                // don't cast awt::Size to Size as on 64-bits they are not the same.
+                                ::com::sun::star::awt::Size aSize;
+                                pPropValue[ i ].Value >>= aSize;
+                                //aBuGraSize.nA = aSize.Width;
+                                //aBuGraSize.nB = aSize.Height;
+                                DBG(printf("graphic size: %dx%d\n", int( aSize.Width ), int( aSize.Height )));
+                            }
+                        }
+                    }
+                }
+
+                const char* pAutoNumType = GetAutoNumType( nNumberingType, bSDot, bPBehind, bPBoth );
+
+                if( nLevel >= 0 ) {
+                    if( aGraphicURL.getLength() > 0 ) {
+                        OUString sRelId = WriteImage( aGraphicURL );
+
+                        mpFS->startElementNS( XML_a, XML_buBlip, FSEND );
+                        mpFS->singleElementNS( XML_a, XML_blip, FSNS( XML_r, XML_embed ), USS( sRelId ), FSEND );
+                        mpFS->endElementNS( XML_a, XML_buBlip );
+                    } else {
+                        if( nBulletRelSize && nBulletRelSize != 100 )
+                            mpFS->singleElementNS( XML_a, XML_buSzPct,
+                                                   XML_val, IS( 1000*( (sal_Int32)nBulletRelSize ) ), FSEND );
+                        if( bHasFontDesc )
+                            mpFS->singleElementNS( XML_a, XML_buFont,
+                                                   XML_typeface, OUStringToOString( aFontDesc.Name, RTL_TEXTENCODING_UTF8 ).getStr(),
+                                                   XML_charset, (aFontDesc.CharSet == awt::CharSet::SYMBOL) ? "2" : NULL,
+                                                   FSEND );
+
+                        if( pAutoNumType )
+                            mpFS->singleElementNS( XML_a, XML_buAutoNum, XML_type, pAutoNumType, FSEND );
+                        else {
+                            aBulletChar = SubstituteBullet( aBulletChar, aFontDesc );
+                            mpFS->singleElementNS( XML_a, XML_buChar, XML_char, USS( OUString( aBulletChar ) ), FSEND );
+                        }
+                    }
+                }
+            }
+        }
+    }
+}
+
+const char* DrawingML::GetAlignment( sal_Int32 nAlignment )
+{
+    const char* sAlignment = NULL;
+
+    switch( nAlignment ) {
+        case style::ParagraphAdjust_CENTER:
+            sAlignment = "ctr";
+            break;
+        case style::ParagraphAdjust_RIGHT:
+            sAlignment = "r";
+            break;
+        case style::ParagraphAdjust_BLOCK:
+            sAlignment = "just";
+            break;
+        default:
+            ;
+    }
+
+    return sAlignment;
+}
+
+void DrawingML::WriteParagraphProperties( Reference< XTextContent > rParagraph )
+{
+    Reference< XPropertySet > rXPropSet( rParagraph, UNO_QUERY );
+    Reference< XPropertyState > rXPropState( rParagraph, UNO_QUERY );
+
+    if( !rXPropSet.is() || !rXPropState.is() )
+        return;
+
+    sal_Int16 nLevel = -1;
+    GET( nLevel, NumberingLevel );
+
+    sal_Int32 nLeftMargin = 0;
+    // fix coordinates
+    //GET( nLeftMargin, ParaLeftMargin );
+
+    sal_Int16 nAlignment( style::ParagraphAdjust_LEFT );
+    GET( nAlignment, ParaAdjust );
+
+    if( nLevel != -1
+            || nLeftMargin > 0
+            || nAlignment != style::ParagraphAdjust_LEFT ) {
+        mpFS->startElementNS( XML_a, XML_pPr,
+                              XML_lvl, nLevel > 0 ? I32S( nLevel ) : NULL,
+                              XML_marL, nLeftMargin > 0 ? IS( nLeftMargin ) : NULL,
+                              XML_algn, GetAlignment( nAlignment ),
+                              FSEND );
+
+        WriteParagraphNumbering( rXPropSet, nLevel );
+
+        mpFS->endElementNS( XML_a, XML_pPr );
+    }
+}
+
+void DrawingML::WriteParagraph( Reference< XTextContent > rParagraph )
+{
+    Reference< XEnumerationAccess > access( rParagraph, UNO_QUERY );
+    if( !access.is() )
+        return;
+
+    Reference< XEnumeration > enumeration( access->createEnumeration() );
+    if( !enumeration.is() )
+        return;
+
+    mpFS->startElementNS( XML_a, XML_p, FSEND );
+
+    sal_Bool bPropertiesWritten = FALSE;
+    while( enumeration->hasMoreElements() ) {
+        Reference< XTextRange > run;
+        Any any ( enumeration->nextElement() );
+
+        if (any >>= run) {
+            if( !bPropertiesWritten && run->getString().getLength() ) {
+                WriteParagraphProperties( rParagraph );
+                bPropertiesWritten = TRUE;
+            }
+            WriteRun( run );
+        }
+    }
+    mpFS->singleElementNS( XML_a, XML_endParaRPr, FSEND );
+
+    mpFS->endElementNS( XML_a, XML_p );
+}
+
+void DrawingML::WriteText( Reference< XShape > rXShape  )
+{
+    Reference< XText > xXText( rXShape, UNO_QUERY );
+    Reference< XPropertySet > rXPropSet( rXShape, UNO_QUERY );
+
+    if( !xXText.is() )
+        return;
+
+#define DEFLRINS 254
+#define DEFTBINS 127
+    sal_Int32 nLeft, nRight, nTop, nBottom;
+    nLeft = nRight = DEFLRINS;
+    nTop = nBottom = DEFTBINS;
+
+    // top inset looks a bit different compared to ppt export
+    // check if something related doesn't work as expected
+    GET( nLeft, TextLeftDistance );
+    GET( nRight, TextRightDistance );
+    GET( nTop, TextUpperDistance );
+    GET( nBottom, TextLowerDistance );
+
+    TextVerticalAdjust eVerticalAlignment( TextVerticalAdjust_TOP );
+    const char* sVerticalAlignment = NULL;
+    GET( eVerticalAlignment, TextVerticalAdjust );
+    switch( eVerticalAlignment ) {
+        case TextVerticalAdjust_BOTTOM:
+            sVerticalAlignment = "b";
+            break;
+        case TextVerticalAdjust_CENTER:
+            sVerticalAlignment = "ctr";
+            break;
+        case TextVerticalAdjust_TOP:
+        default:
+            ;
+    }
+
+    TextHorizontalAdjust eHorizontalAlignment( TextHorizontalAdjust_CENTER );
+    bool bHorizontalCenter = false;
+    GET( eHorizontalAlignment, TextHorizontalAdjust );
+    if( eHorizontalAlignment == TextHorizontalAdjust_CENTER )
+        bHorizontalCenter = true;
+
+    sal_Bool bHasWrap = FALSE;
+    sal_Bool bWrap = FALSE;
+    if( GETA( TextWordWrap ) ) {
+        mAny >>= bWrap;
+        bHasWrap = TRUE;
+        //DBG(printf("wrap: %d\n", bWrap));
+    }
+
+    mpFS->singleElementNS( XML_a, XML_bodyPr,
+                           XML_wrap, bHasWrap && !bWrap ? "none" : NULL,
+                           XML_lIns, (nLeft != DEFLRINS) ? IS( MM100toEMU( nLeft ) ) : NULL,
+                           XML_rIns, (nRight != DEFLRINS) ? IS( MM100toEMU( nRight ) ) : NULL,
+                           XML_tIns, (nTop != DEFTBINS) ? IS( MM100toEMU( nTop ) ) : NULL,
+                           XML_bIns, (nBottom != DEFTBINS) ? IS( MM100toEMU( nBottom ) ) : NULL,
+                           XML_anchor, sVerticalAlignment,
+                           XML_anchorCtr, bHorizontalCenter ? "1" : NULL,
+                           FSEND );
+
+    Reference< XEnumerationAccess > access( xXText, UNO_QUERY );
+    if( !access.is() )
+        return;
+
+    Reference< XEnumeration > enumeration( access->createEnumeration() );
+    if( !enumeration.is() )
+        return;
+
+    while( enumeration->hasMoreElements() ) {
+        Reference< XTextContent > paragraph;
+        Any any ( enumeration->nextElement() );
+
+        if( any >>= paragraph)
+            WriteParagraph( paragraph );
+    }
+
+}
+
+void DrawingML::WritePresetShape( const char* pShape )
+{
+    mpFS->startElementNS( XML_a, XML_prstGeom,
+                          XML_prst, pShape,
+                          FSEND );
+    mpFS->singleElementNS( XML_a, XML_avLst, FSEND );
+    mpFS->endElementNS(  XML_a, XML_prstGeom );
+}
+
+void DrawingML::WritePresetShape( const char* pShape, MSO_SPT eShapeType, sal_Bool bPredefinedHandlesUsed, sal_Int32 nAdjustmentsWhichNeedsToBeConverted, const PropertyValue& rProp )
+{
+    mpFS->startElementNS( XML_a, XML_prstGeom,
+                          XML_prst, pShape,
+                          FSEND );
+    mpFS->startElementNS( XML_a, XML_avLst, FSEND );
+
+    Sequence< drawing::EnhancedCustomShapeAdjustmentValue > aAdjustmentSeq;
+    if ( rProp.Value >>= aAdjustmentSeq ) {
+        DBG(printf("adj seq len: %d\n", int( aAdjustmentSeq.getLength() )));
+        if ( bPredefinedHandlesUsed )
+            EscherPropertyContainer::LookForPolarHandles( eShapeType, nAdjustmentsWhichNeedsToBeConverted );
+
+        sal_Int32 nValue, nLength = aAdjustmentSeq.getLength();
+        for( sal_Int32 i=0; i < nLength; i++ )
+            if( EscherPropertyContainer::GetAdjustmentValue( aAdjustmentSeq[ i ], i, nAdjustmentsWhichNeedsToBeConverted, nValue ) )
+                mpFS->singleElementNS( XML_a, XML_gd,
+                                       XML_name, nLength > 1 ? ( OString( "adj" ) + OString::valueOf( i + 1 ) ).getStr() : "adj",
+                                       XML_fmla, (OString("val ") + OString::valueOf( nValue )).getStr(),
+                                       FSEND );
+    }
+
+    mpFS->endElementNS( XML_a, XML_avLst );
+    mpFS->endElementNS(  XML_a, XML_prstGeom );
+}
+
+void DrawingML::WritePolyPolygon( const PolyPolygon& rPolyPolygon )
+{
+    if( rPolyPolygon.Count() < 1 )
+        return;
+
+    mpFS->startElementNS( XML_a, XML_custGeom, FSEND );
+    mpFS->singleElementNS( XML_a, XML_avLst, FSEND );
+    mpFS->singleElementNS( XML_a, XML_gdLst, FSEND );
+    mpFS->singleElementNS( XML_a, XML_ahLst, FSEND );
+    mpFS->singleElementNS( XML_a, XML_rect,
+                           XML_l, "0",
+                           XML_t, "0",
+                           XML_r, "r",
+                           XML_b, "b",
+                           FSEND );
+
+    mpFS->startElementNS( XML_a, XML_pathLst, FSEND );
+
+    for( USHORT i = 0; i < rPolyPolygon.Count(); i ++ ) {
+
+        const Polygon& rPoly = rPolyPolygon[ i ];
+        Rectangle aRect( rPoly.GetBoundRect() );
+        sal_Bool bBezier = FALSE;
+
+        mpFS->startElementNS( XML_a, XML_path,
+                              XML_w, I64S( aRect.GetWidth() ),
+                              XML_h, I64S( aRect.GetHeight() ),
+                              FSEND );
+
+        if( rPoly.GetSize() > 0 )
+        {
+            mpFS->startElementNS( XML_a, XML_moveTo, FSEND );
+
+            mpFS->singleElementNS( XML_a, XML_pt,
+                                   XML_x, I64S( rPoly[ 0 ].X() - aRect.Left() ),
+                                   XML_y, I64S( rPoly[ 0 ].Y() - aRect.Top() ),
+                                   FSEND );
+
+            mpFS->endElementNS( XML_a, XML_moveTo );
+        }
+
+        for( USHORT j = 1; j < rPoly.GetSize(); j ++ )
+        {
+            enum PolyFlags flags = rPoly.GetFlags(j);
+            if( flags == POLY_CONTROL && !bBezier )
+            {
+                mpFS->startElementNS( XML_a, XML_cubicBezTo, FSEND );
+                bBezier = TRUE;
+            }
+            else if( flags == POLY_NORMAL && !bBezier )
+                mpFS->startElementNS( XML_a, XML_lnTo, FSEND );
+
+            mpFS->singleElementNS( XML_a, XML_pt,
+                                   XML_x, I64S( rPoly[j].X() - aRect.Left() ),
+                                   XML_y, I64S( rPoly[j].Y() - aRect.Top() ),
+                                   FSEND );
+
+            if( ( flags == POLY_NORMAL || flags == POLY_SYMMTR ) && bBezier )
+            {
+                mpFS->endElementNS( XML_a, XML_cubicBezTo );
+                bBezier = FALSE;
+            }
+            else if( flags == POLY_NORMAL && !bBezier )
+                mpFS->endElementNS( XML_a, XML_lnTo );
+            else if( bBezier && ( j % 3 ) == 0 )
+            {
+                // //a:cubicBezTo can only contain 3 //a:pt elements, so we 
+                // need to break things up...
+                mpFS->endElementNS( XML_a, XML_cubicBezTo );
+                mpFS->startElementNS( XML_a, XML_cubicBezTo, FSEND );
+            }
+//             switch( rPoly.GetFlags(j) ) {
+//                 case POLY_NORMAL:
+//                     DBG(printf("normal\n"));
+//                     break;
+//                 case POLY_SMOOTH:
+//                     DBG(printf("smooth\n"));
+//                     break;
+//                 case POLY_CONTROL:
+//                     DBG(printf("control\n"));
+//                     break;
+//                 case POLY_SYMMTR:
+//                     DBG(printf("symmtr\n"));
+//                         break;
+//             }
+//             DBG(printf("point %ld %ld\n", rPoly[j].X() - aRect.Left(), rPoly[j].Y() - aRect.Top()));
+        }
+
+        mpFS->endElementNS( XML_a, XML_path );
+    }
+
+    mpFS->endElementNS( XML_a, XML_pathLst );
+
+    mpFS->endElementNS(  XML_a, XML_custGeom );
+}
+
+void DrawingML::WriteConnectorConnections( EscherConnectorListEntry& rConnectorEntry, sal_Int32 nStartID, sal_Int32 nEndID )
+{
+    mpFS->singleElementNS( XML_a, XML_stCxn,
+                           XML_id, I32S( nStartID ),
+                           XML_idx, I64S( rConnectorEntry.GetConnectorRule( TRUE ) ),
+                           FSEND );
+    mpFS->singleElementNS( XML_a, XML_endCxn,
+                           XML_id, I32S( nEndID ),
+                           XML_idx, I64S( rConnectorEntry.GetConnectorRule( FALSE ) ),
+                           FSEND );
+}
+
+// from sw/source/filter/ww8/wrtw8num.cxx for default bullets to export to MS intact
+static void lcl_SubstituteBullet(String& rNumStr, rtl_TextEncoding& rChrSet, String& rFontName)
+{
+    StarSymbolToMSMultiFont *pConvert = 0;
+    FontFamily eFamily = FAMILY_DECORATIVE;
+
+    if (!pConvert)
+    {
+        pConvert = CreateStarSymbolToMSMultiFont();
+    }    
+    sal_Unicode cChar = rNumStr.GetChar(0);
+    String sFont = pConvert->ConvertChar(cChar);
+    if (sFont.Len())
+    {
+        rNumStr = static_cast< sal_Unicode >(cChar | 0xF000);
+        rFontName = sFont;
+        rChrSet = RTL_TEXTENCODING_SYMBOL;
+    }
+    else if ( (rNumStr.GetChar(0) < 0xE000 || rNumStr.GetChar(0) > 0xF8FF) )
+    {
+        /*
+           Ok we can't fit into a known windows unicode font, but
+           we are not in the private area, so we are a
+           standardized symbol, so turn off the symbol bit and
+           let words own font substitution kick in
+           */
+        rChrSet = RTL_TEXTENCODING_UNICODE;
+        eFamily = FAMILY_SWISS;
+        rFontName = ::GetFontToken(rFontName, 0);
+    }
+    else
+    {
+        /*
+           Well we don't have an available substition, and we're
+           in our private area, so give up and show a standard
+           bullet symbol
+           */
+        rFontName.AssignAscii(RTL_CONSTASCII_STRINGPARAM("Wingdings"));
+        rNumStr = static_cast< sal_Unicode >(0x6C);
+    }      
+    delete pConvert;
+}
+
+sal_Unicode DrawingML::SubstituteBullet( sal_Unicode cBulletId, ::com::sun::star::awt::FontDescriptor& rFontDesc )
+{
+    String sNumStr = cBulletId;
+
+    if ( rFontDesc.Name.equalsIgnoreAsciiCaseAscii("starsymbol") ||
+         rFontDesc.Name.equalsIgnoreAsciiCaseAscii("opensymbol") )  {
+        String sFontName = rFontDesc.Name;
+        rtl_TextEncoding aCharSet = rFontDesc.CharSet;
+
+        lcl_SubstituteBullet( sNumStr, aCharSet, sFontName );
+
+        rFontDesc.Name = sFontName;
+        rFontDesc.CharSet = aCharSet;
+    }
+
+    return sNumStr.GetChar( 0 );
+}
+
+}
+}
diff --git oox/source/export/makefile.mk oox/source/export/makefile.mk
new file mode 100644
index 0000000..b9d2195
--- /dev/null
+++ oox/source/export/makefile.mk
@@ -0,0 +1,27 @@
+PRJ=..$/..
+
+PRJNAME=oox
+TARGET=export
+AUTOSEG=true
+
+ENABLE_EXCEPTIONS=TRUE
+
+# --- Settings -----------------------------------------------------
+
+.INCLUDE :  settings.mk
+.INCLUDE: $(PRJ)$/util$/makefile.pmk
+
+# --- Files --------------------------------------------------------
+
+SLOFILES =	\
+		$(SLO)$/drawingml.obj \
+		$(SLO)$/shapes.obj \
+		$(SLO)$/vmlexport.obj \
+		$(SLO)$/vmlexport-shape-types.obj
+
+# --- Targets -------------------------------------------------------
+
+.INCLUDE :  target.mk
+
+$(MISC)$/vmlexport-shape-types.cxx : preset-definitions-to-shape-types.pl presetShapeDefinitions.xml presetTextWarpDefinitions.xml
+	$(PERL) $< > $@.in_progress 2> $(MISC)$/vmlexport-shape-types.log && mv $@.in_progress $@
diff --git oox/source/export/preset-definitions-to-shape-types.pl oox/source/export/preset-definitions-to-shape-types.pl
new file mode 100644
index 0000000..1608f8c
--- /dev/null
+++ oox/source/export/preset-definitions-to-shape-types.pl
@@ -0,0 +1,1242 @@
+#! /usr/bin/perl -w
+#*************************************************************************
+#
+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+# 
+# Copyright 2008 by Sun Microsystems, Inc.
+#
+# OpenOffice.org - a multi-platform office productivity suite
+#
+# This file is part of OpenOffice.org.
+#
+# OpenOffice.org is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License version 3
+# only, as published by the Free Software Foundation.
+#
+# OpenOffice.org is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License version 3 for more details
+# (a copy is included in the LICENSE file that accompanied this code).
+#
+# You should have received a copy of the GNU Lesser General Public License
+# version 3 along with OpenOffice.org.  If not, see
+# <http://www.openoffice.org/license.html>
+# for a copy of the LGPLv3 License.
+#
+#*************************************************************************
+
+use warnings;
+
+sub usage() {
+    print STDERR <<EOF;
+Usage: preset-definitions-to-shape-types.pl <shapes> <text>
+
+Converts presetShapeDefinitions.xml and presetTextWarpDefinitions.xml to a
+.cxx that contains VML with the definitions of the shapes.  The result is
+written to stdout.
+
+<shapes> presetShapeDefinitions.xml (including the path to it)
+<text>   presetTextWarpDefinitions.xml (including the path to it)
+EOF
+    exit 1;
+}
+
+sub show_call_stack
+{
+    my ( $path, $line, $subr );
+    my $max_depth = 30;
+    my $i = 1;
+    print STDERR "--- Begin stack trace ---\n";
+    while ( (my @call_details = (caller($i++))) && ($i<$max_depth) ) {
+        print STDERR "$call_details[1] line $call_details[2] in function $call_details[3]\n";
+    }
+    print STDERR "--- End stack trace ---\n";
+}
+
+$src_shapes = shift;
+$src_text = shift;
+
+usage() if ( !defined( $src_shapes ) || !defined( $src_text ) ||
+             $src_shapes eq "-h" || $src_shapes eq "--help" ||
+             !-f $src_shapes || !-f $src_text );
+
+# Global variables
+@levels = ();
+$shape_name = "";
+$state = "";
+$path = "";
+$adjust = "";
+$max_adj_no = 0;
+@formulas = ();
+%variables = ();
+$ignore_this_shape = 0;
+$handles = "";
+$textboxrect = "";
+$last_pos_x = "";
+$last_pos_y = "";
+$no_stroke = 0;
+$no_fill = 0;
+$path_w = 1;
+$path_h = 1;
+@quadratic_bezier = ();
+
+%result_shapes = ();
+
+%shapes_ids = (
+    0 => 'notPrimitive',
+    1 => 'rectangle',
+    2 => 'roundRectangle',
+    3 => 'ellipse',
+    4 => 'diamond',
+    5 => 'triangle',
+    6 => 'rtTriangle',
+    7 => 'parallelogram',
+    8 => 'trapezoid',
+    9 => 'hexagon',
+    10 => 'octagon',
+    11 => 'plus',
+    12 => 'star5',
+    13 => 'rightArrow',
+    14 => 'thickArrow', # should not be used
+    15 => 'homePlate',
+    16 => 'cube',
+    17 => 'wedgeRoundRectCallout', # balloon
+    18 => 'star16', # seal
+    19 => 'arc',
+    20 => 'line',
+    21 => 'plaque',
+    22 => 'can',
+    23 => 'donut',
+    24 => 'textPlain', # textSimple - FIXME MS Office 2007 converts these to textboxes with unstyled text, so is it actually correct to map it to a real style?
+    25 => 'textStop', # textOctagon FIXME see 24
+    26 => 'textTriangle', # textHexagon FIXMME see 24
+    27 => 'textCanDown', # textCurve FIXMME see 24
+    28 => 'textWave1', # textWave FIXMME see 24
+    29 => 'textArchUpPour', # textRing FIXMME see 24
+    30 => 'textCanDown', # textOnCurve FIXMME see 24
+    31 => 'textArchUp', # textOnRing FIXMME see 24
+    32 => 'straightConnector1',
+    33 => 'bentConnector2',
+    34 => 'bentConnector3',
+    35 => 'bentConnector4',
+    36 => 'bentConnector5',
+    37 => 'curvedConnector2',
+    38 => 'curvedConnector3',
+    39 => 'curvedConnector4',
+    40 => 'curvedConnector5',
+    41 => 'callout1',
+    42 => 'callout2',
+    43 => 'callout3',
+    44 => 'accentCallout1',
+    45 => 'accentCallout2',
+    46 => 'accentCallout3',
+    47 => 'borderCallout1',
+    48 => 'borderCallout2',
+    49 => 'borderCallout3',
+    50 => 'accentBorderCallout1',
+    51 => 'accentBorderCallout2',
+    52 => 'accentBorderCallout3',
+    53 => 'ribbon',
+    54 => 'ribbon2',
+    55 => 'chevron',
+    56 => 'pentagon',
+    57 => 'noSmoking',
+    58 => 'star8', # seal8
+    59 => 'star16', # seal16
+    60 => 'star32', # seal32
+    61 => 'wedgeRectCallout',
+    62 => 'wedgeRoundRectCallout', # wedgeRRectCallout
+    63 => 'wedgeEllipseCallout',
+    64 => 'wave',
+    65 => 'foldedCorner',
+    66 => 'leftArrow',
+    67 => 'downArrow',
+    68 => 'upArrow',
+    69 => 'leftRightArrow',
+    70 => 'upDownArrow',
+    71 => 'irregularSeal1',
+    72 => 'irregularSeal2',
+    73 => 'lightningBolt',
+    74 => 'heart',
+    75 => 'frame', # pictureFrame
+    76 => 'quadArrow',
+    77 => 'leftArrowCallout',
+    78 => 'rightArrowCallout',
+    79 => 'upArrowCallout',
+    80 => 'downArrowCallout',
+    81 => 'leftRightArrowCallout',
+    82 => 'upDownArrowCallout',
+    83 => 'quadArrowCallout',
+    84 => 'bevel',
+    85 => 'leftBracket',
+    86 => 'rightBracket',
+    87 => 'leftBrace',
+    88 => 'rightBrace',
+    89 => 'leftUpArrow',
+    90 => 'bentUpArrow',
+    91 => 'bentArrow',
+    92 => 'star24', # seal24
+    93 => 'stripedRightArrow',
+    94 => 'notchedRightArrow',
+    95 => 'blockArc',
+    96 => 'smileyFace',
+    97 => 'verticalScroll',
+    98 => 'horizontalScroll',
+    99 => 'circularArrow',
+    100 => 'notchedCircularArrow', # should not be used
+    101 => 'uturnArrow',
+    102 => 'curvedRightArrow',
+    103 => 'curvedLeftArrow',
+    104 => 'curvedUpArrow',
+    105 => 'curvedDownArrow',
+    106 => 'cloudCallout',
+    107 => 'ellipseRibbon',
+    108 => 'ellipseRibbon2',
+    109 => 'flowChartProcess',
+    110 => 'flowChartDecision',
+    111 => 'flowChartInputOutput',
+    112 => 'flowChartPredefinedProcess',
+    113 => 'flowChartInternalStorage',
+    114 => 'flowChartDocument',
+    115 => 'flowChartMultidocument',
+    116 => 'flowChartTerminator',
+    117 => 'flowChartPreparation',
+    118 => 'flowChartManualInput',
+    119 => 'flowChartManualOperation',
+    120 => 'flowChartConnector',
+    121 => 'flowChartPunchedCard',
+    122 => 'flowChartPunchedTape',
+    123 => 'flowChartSummingJunction',
+    124 => 'flowChartOr',
+    125 => 'flowChartCollate',
+    126 => 'flowChartSort',
+    127 => 'flowChartExtract',
+    128 => 'flowChartMerge',
+    129 => 'flowChartOfflineStorage',
+    130 => 'flowChartOnlineStorage',
+    131 => 'flowChartMagneticTape',
+    132 => 'flowChartMagneticDisk',
+    133 => 'flowChartMagneticDrum',
+    134 => 'flowChartDisplay',
+    135 => 'flowChartDelay',
+    136 => 'textPlain', # textPlainText
+    137 => 'textStop',
+    138 => 'textTriangle',
+    139 => 'textTriangleInverted',
+    140 => 'textChevron',
+    141 => 'textChevronInverted',
+    142 => 'textRingInside',
+    143 => 'textRingOutside',
+    144 => 'textArchUp', # textArchUpCurve
+    145 => 'textArchDown', # textArchDownCurve
+    146 => 'textCircle', # textCircleCurve
+    147 => 'textButton', # textButtonCurve
+    148 => 'textArchUpPour',
+    149 => 'textArchDownPour',
+    150 => 'textCirclePour',
+    151 => 'textButtonPour',
+    152 => 'textCurveUp',
+    153 => 'textCurveDown',
+    154 => 'textCascadeUp',
+    155 => 'textCascadeDown',
+    156 => 'textWave1',
+    157 => 'textWave2',
+    158 => 'textWave3',
+    159 => 'textWave4',
+    160 => 'textInflate',
+    161 => 'textDeflate',
+    162 => 'textInflateBottom',
+    163 => 'textDeflateBottom',
+    164 => 'textInflateTop',
+    165 => 'textDeflateTop',
+    166 => 'textDeflateInflate',
+    167 => 'textDeflateInflateDeflate',
+    168 => 'textFadeRight',
+    169 => 'textFadeLeft',
+    170 => 'textFadeUp',
+    171 => 'textFadeDown',
+    172 => 'textSlantUp',
+    173 => 'textSlantDown',
+    174 => 'textCanUp',
+    175 => 'textCanDown',
+    176 => 'flowChartAlternateProcess',
+    177 => 'flowChartOffpageConnector',
+    178 => 'callout1', # callout90
+    179 => 'accentCallout1', # accentCallout90
+    180 => 'borderCallout1', # borderCallout90
+    181 => 'accentBorderCallout1', # accentBorderCallout90
+    182 => 'leftRightUpArrow',
+    183 => 'sun',
+    184 => 'moon',
+    185 => 'bracketPair',
+    186 => 'bracePair',
+    187 => 'star4', # seal4
+    188 => 'doubleWave',
+    189 => 'actionButtonBlank',
+    190 => 'actionButtonHome',
+    191 => 'actionButtonHelp',
+    192 => 'actionButtonInformation',
+    193 => 'actionButtonForwardNext',
+    194 => 'actionButtonBackPrevious',
+    195 => 'actionButtonEnd',
+    196 => 'actionButtonBeginning',
+    197 => 'actionButtonReturn',
+    198 => 'actionButtonDocument',
+    199 => 'actionButtonSound',
+    200 => 'actionButtonMovie',
+    201 => 'hostControl', # should not be used
+    202 => 'textBox'
+);
+# An error occured, we have to ignore this shape
+sub error( $ )
+{
+    my ( $msg ) = @_;
+
+    $ignore_this_shape = 1;
+    print STDERR "ERROR (in $shape_name ): $msg\n";
+}
+
+# Check that we are in the correct level
+sub is_level( $$ )
+{
+    my ( $level, $value ) = @_;
+
+    if ( $level > 0 ) {
+        error( "Error in is_level(), \$level should be <= 0." );
+    }
+    return ( $#levels + $level > 0 ) && ( $levels[$#levels + $level] eq $value );
+}
+
+# Setup the %variables map with predefined values
+sub setup_variables()
+{
+    %variables = (
+        'l'        => 0,
+        't'        => 0,
+        'r'        => 21600,
+        'b'        => 21600,
+                  
+        'w'        => 21600,
+        'h'        => 21600,
+        'ss'       => 21600,
+        'ls'       => 21600,
+                  
+        'ssd2'     => 10800, # 1/2
+        'ssd4'     => 5400,  # 1/4
+        'ssd6'     => 3600,  # 1/6
+        'ssd8'     => 2700,  # 1/8
+        'ssd16'    => 1350,  # 1/16
+        'ssd32'    => 675,   # 1/32
+                  
+        'hc'       => 10800, # horizontal center
+        'vc'       => 10800, # vertical center
+                  
+        'wd2'      => 10800, # 1/2
+        'wd3'      => 7200,  # 1/3
+        'wd4'      => 5400,  # 1/4
+        'wd5'      => 4320,  # 1/5
+        'wd6'      => 3600,  # 1/6
+        'wd8'      => 2700,  # 1/8
+        'wd10'     => 2160,  # 1/10
+        'wd12'     => 1800,  # 1/12
+        'wd32'     => 675,   # 1/32
+                  
+        'hd2'      => 10800, # 1/2
+        'hd3'      => 7200,  # 1/3
+        'hd4'      => 5400,  # 1/4
+        'hd5'      => 4320,  # 1/5
+        'hd6'      => 3600,  # 1/6
+        'hd8'      => 2700,  # 1/8
+        'hd10'     => 2160,  # 1/10
+        'hd12'     => 1800,  # 1/12
+        'hd32'     => 675,   # 1/32
+
+        '25000'    => 5400,
+        '12500'    => 2700,
+                  
+        'cd4'      => 90,    # 1/4 of a circle
+        'cd2'      => 180,   # 1/2 of a circle
+        '3cd4'     => 270,   # 3/4 of a circle
+                  
+        'cd8'      => 45,    # 1/8 of a circle
+        '3cd8'     => 135,   # 3/8 of a circle
+        '5cd8'     => 225,   # 5/8 of a circle
+        '7cd8'     => 315,   # 7/8 of a circle
+
+        '-5400000' => -90,
+        '-10800000'=> -180,
+        '-16200000'=> -270,
+        '-21600000'=> -360,
+        '-21599999'=> -360,
+
+        '5400000'  => 90,
+        '10800000' => 180,
+        '16200000' => 270,
+        '21600000' => 360,
+        '21599999' => 360
+#
+#        '21600000' => 360,   # angle conversions
+#        '27000000' => 450,
+#        '32400000' => 540,
+#        '37800000' => 630
+    );
+}
+
+# Convert the (predefiend) value to a number
+sub value( $ )
+{
+    my ( $val ) = @_;
+
+    my $result = $variables{$val};
+    return $result if ( defined( $result ) );
+    
+    return $val if ( $val =~ /^[0-9-]+$/ );
+
+    error( "Unknown variable '$val'." );
+
+    show_call_stack();
+    return $val;
+}
+
+# Convert the DrawingML formula to a VML one
+%command_variables = (
+    'w' => 'width',
+    'h' => 'height',
+    'r' => 'width',
+    'b' => 'height'
+);
+
+# The same as value(), but some of the hardcoded values can have a name
+sub command_value( $ )
+{
+    my ( $value ) = @_;
+
+    return "" if ( $value eq "" );
+    
+    return $value if ( $value =~ /^@/ );
+
+    my $command_val = $command_variables{$value};
+    if ( defined( $command_val ) ) {
+        return $command_val;
+    }
+    
+    return value( $value );
+}
+
+# Insert the new formula to the list of formulas
+# Creates the name if it's empty...
+sub insert_formula( $$ )
+{
+    my ( $name, $fmla ) = @_;
+
+    my $i = 0;
+    foreach $f ( @formulas ) {
+        if ( $f eq $fmla ) {
+            if ( $name ne "" ) {
+                $variables{$name} = "@" . $i;
+            }
+            return "@" . $i;
+        }
+        ++$i;
+    }
+
+    if ( $name eq "" ) {
+        $name = "@" . ( $#formulas + 1 );
+    }
+
+    $variables{$name} = "@" . ( $#formulas + 1 );
+    push @formulas, $fmla;
+
+    if ( $#formulas > 127 ) {
+        error( "Reached the maximum amount of formulas, have to ignore the shape '$shape_name'" );
+    }
+
+    return $variables{$name};
+}
+
+# The same as insert_formula(), but converts the params
+sub insert_formula_params( $$$$$ )
+{
+    my ( $name, $command, $p1, $p2, $p3 ) = @_;
+
+    my $result = $command;
+    if ( $p1 ne "" ) {
+        $result .= " " . command_value( $p1 );
+        if ( $p2 ne "" ) {
+            $result .= " " . command_value( $p2 );
+            if ( $p3 ne "" ) {
+                $result .= " " . command_value( $p3 );
+            }
+        }
+    }
+
+    return insert_formula( $name, $result );
+}
+
+# Convert the formula from DrawingML to VML
+sub convert_formula( $$ )
+{
+    my ( $name, $fmla ) = @_;
+
+    if ( $fmla =~ /^([^ ]+)/ ) {
+        my $command = $1;
+
+        # parse the parameters
+        ( my $values = $fmla ) =~ s/^([^ ]+) *//;
+        my $p1 = "", $p2 = "", $p3 = "";
+        if ( $values =~ /^([^ ]+)/ ) {
+            $p1 = $1;
+            $values =~ s/^([^ ]+) *//;
+            if ( $values =~ /^([^ ]+)/ ) {
+                $p2 = $1;
+                $values =~ s/^([^ ]+) *//;
+                if ( $values =~ /^([^ ]+)/ ) {
+                    $p3 = $1;
+                }
+            }
+        }
+
+        # now convert the formula
+        if ( $command eq "+-" ) {
+            if ( $p1 eq "100000" ) {
+                $p1 = value( 'w' );
+            }
+            insert_formula_params( $name, "sum", $p1, $p2, $p3 );
+            return;
+        }
+        elsif ( $command eq "*/" ) {
+            if ( ( $p2 =~ /^(w|h|ss|hd2|wd2|vc)$/ ) && defined( $variables{$p1} ) ) {
+                # switch it ;-) - presetTextWarpDefinitions.xml has it in other order
+                my $tmp = $p1;
+                $p1 = $p2;
+                $p2 = $tmp;
+            }
+
+            if ( ( $p1 =~ /^(w|h|ss|hd2|wd2|vc)$/ ) && defined( $variables{$p2} ) ) {
+                my $val3 = $p3;
+                if ( $val3 =~ /^[0-9-]+$/ ) {
+                    $val3 *= ( value( 'w' ) / value( $p1 ) );
+
+                    # Oh yes, I'm too lazy to implement the full GCD here ;-)
+                    if ( ( $val3 % 100000 ) == 0 ) {
+                        $p1 = 1;
+                        $p3 = sprintf( "%.0f", ( $val3 / 100000 ) );
+                    }
+                    elsif ( $val3 < 100000 ) {
+                        $p3 = 1;
+                        while ( ( ( $p3 * 100000 ) % $val3 ) != 0 ) {
+                            ++$p3
+                        }
+                        $p1 = ( $p3 * 100000 ) / $val3;
+                    }
+                    else {
+                        error( "Need to count the greatest common divisor." );
+                    }
+                }
+            }
+            elsif ( $p3 eq "100000" && $p2 =~ /^[0-9-]+$/ ) {
+                # prevent overflows in some shapes
+                $p2 = sprintf( "%.0f", ( $p2 / 10 ) );
+                $p3 /= 10;
+            }
+            elsif ( $p3 eq "32768" && $p2 =~ /^[0-9-]+$/ ) {
+                # prevent overflows in some shapes
+                $p2 = sprintf( "%.0f", ( $p2 / 8 ) );
+                $p3 /= 8;
+            }
+            elsif ( $p3 eq "50000" ) {
+                $p3 = 10800;
+            }
+            elsif ( $name =~ /^maxAdj/ ) {
+                my $val = value( $p1 );
+                if ( $val =~ /^[0-9-]+$/ ) {
+                    $p1 = sprintf( "%.0f", ( value( 'w' ) * $val / 100000 ) );
+                }
+            }
+
+            if ( ( value( $p1 ) eq value( $p3 ) ) || ( value( $p2 ) eq value( $p3 ) ) ) {
+                my $val = value( ( value( $p1 ) eq value( $p3 ) )? $p2: $p1 );
+                if ( $val =~ /^@([0-9]+)$/ ) {
+                    insert_formula( $name, $formulas[$1] );
+                }
+                else {
+                    insert_formula( $name, "val $val" );
+                }
+            }
+            else {
+                insert_formula_params( $name, "prod", $p1, $p2, $p3 );
+            }
+            return;
+        }
+        elsif ( $command eq "+/" ) {
+            # we have to split this into 2 formulas - 'sum' and 'prod'
+            my $constructed = insert_formula_params( "", "sum", $p1, $p2, "0" );
+            insert_formula_params( $name, "prod", 1, $constructed, $p3); # references the 'sum' formula
+            return;
+        }
+        elsif ( $command eq "?:" ) {
+            insert_formula_params( $name, "if", $p1, $p2, $p3 );
+            return;
+        }
+        elsif ( $command eq "sin" || $command eq "cos" ) {
+            if ( $p2 =~ /^[0-9-]+$/ && ( ( $p2 % 60000 ) == 0 ) ) {
+                $p2 /= 60000;
+            }
+            else {
+                $p2 = insert_formula_params( "", "prod", "1", $p2, "60000" );
+            }
+            # we have to use 'sumangle' even for the case when $p2 is const
+            # and theoretically could be written as such; but Word does not
+            # accept it :-(
+            my $conv = insert_formula_params( "", "sumangle", "0", $p2, "0" );
+
+            $p2 = $conv;
+
+            insert_formula_params( $name, $command, $p1, $p2, "" );
+            return;
+        }
+        elsif ( $command eq "abs" ) {
+            insert_formula_params( $name, $command, $p1, "", "" );
+            return;
+        }
+        elsif ( $command eq "max" || $command eq "min" ) {
+            insert_formula_params( $name, $command, $p1, $p2, "" );
+            return;
+        }
+        elsif ( $command eq "at2" ) {
+            insert_formula_params( $name, "atan2", $p1, $p2, "" );
+            return;
+        }
+        elsif ( $command eq "cat2" ) {
+            insert_formula_params( $name, "cosatan2", $p1, $p2, $p3 );
+            return;
+        }
+        elsif ( $command eq "sat2" ) {
+            insert_formula_params( $name, "sinatan2", $p1, $p2, $p3 );
+            return;
+        }
+        elsif ( $command eq "sqrt" ) {
+            insert_formula_params( $name, "sqrt", $p1, "", "" );
+            return;
+        }
+        elsif ( $command eq "mod" ) {
+            insert_formula_params( $name, "mod", $p1, $p2, $p3 );
+            return;
+        }
+        elsif ( $command eq "val" ) {
+            insert_formula_params( $name, "val", value( $p1 ), "", "" );
+            return;
+        }
+        else {
+            error( "Unknown formula '$name', '$fmla'." );
+        }
+    }
+    else {
+        error( "Cannot convert formula's command '$name', '$fmla'." );
+    }
+}
+
+# There's no exact equivalent of 'arcTo' in VML, we have to do some special casing...
+%convert_arcTo = (
+    '0' => {
+        '90' => {
+            'path' => 'qy',
+            'op' => [ 'sum 0 __last_x__ __wR__', 'sum __hR__ __last_y__ 0' ],
+        },
+        '-90' => {
+            'path' => 'qy',
+            'op' => [ 'sum 0 __last_x__ __wR__', 'sum 0 __last_y__ __hR__' ],
+        },
+    },
+    '90' => {
+        '90' => {
+            'path' => 'qx',
+            'op' => [ 'sum 0 __last_x__ __wR__', 'sum 0 __last_y__ __hR__' ],
+        },
+        '-90' => {
+            'path' => 'qx',
+            'op' => [ 'sum __wR__ __last_x__ 0', 'sum 0 __last_y__ __hR__' ],
+        },
+    },
+    '180' => {
+        '90' => {
+            'path' => 'qy',
+            'op' => [ 'sum __wR__ __last_x__ 0', 'sum 0 __last_y__ __hR__' ],
+        },
+        '-90' => {
+            'path' => 'qy',
+            'op' => [ 'sum __wR__ __last_x__ 0', 'sum __hR__ __last_y__ 0' ],
+        },
+    },
+    '270' => {
+        '90' => {
+            'path' => 'qx',
+            'op' => [ 'sum __wR__ __last_x__ 0', 'sum __hR__ __last_y__ 0' ],
+        },
+        '-90' => {
+            'path' => 'qx',
+            'op' => [ 'sum 0 __last_x__ __wR__', 'sum __hR__ __last_y__ 0' ],
+        },
+    },
+);
+
+# Elliptic quadrant
+# FIXME optimize so that we compute the const values when possible
+sub elliptic_quadrant( $$$$ )
+{
+    my ( $wR, $hR, $stAng, $swAng ) = @_;
+    
+    if ( defined( $convert_arcTo{$stAng} ) && defined( $convert_arcTo{$stAng}{$swAng} ) ) {
+        my $conv_path = $convert_arcTo{$stAng}{$swAng}{'path'};
+        my $conv_op_ref = $convert_arcTo{$stAng}{$swAng}{'op'};
+
+        $path .= "$conv_path";
+
+        my $pos_x = $last_pos_x;
+        my $pos_y = $last_pos_y;
+        for ( my $i = 0; $i <= $#{$conv_op_ref}; ++$i ) {
+            my $op = $conv_op_ref->[$i];
+
+            $op =~ s/__last_x__/$last_pos_x/g;
+            $op =~ s/__last_y__/$last_pos_y/g;
+            $op =~ s/__wR__/$wR/g;
+            $op =~ s/__hR__/$hR/g;
+
+            my $fmla = insert_formula( "", $op );
+
+            $path .= $fmla;
+
+            # so far it's sufficient just to rotate the positions
+            # FIXME if not ;-)
+            $pos_x = $pos_y;
+            $pos_y = $fmla;
+        }
+        $last_pos_x = $pos_x;
+        $last_pos_y = $pos_y;
+    }
+    else {
+        error( "Unhandled elliptic_quadrant(), input is ($wR, $hR, $stAng, $swAng)." );
+    }
+}
+
+# Convert the quadratic bezier to cubic (exact)
+# No idea why, but the 'qb' did not work for me :-(
+sub quadratic_to_cubic_bezier( $ )
+{
+    my ( $axis ) = @_;
+
+    my $a0 = $quadratic_bezier[0]->{$axis};
+    my $a1 = $quadratic_bezier[1]->{$axis};
+    my $a2 = $quadratic_bezier[2]->{$axis};
+
+    my $b0 = $a0;
+
+    # $b1 = $a0 + 2/3 * ( $a1 - $a0 ), but in VML
+    # FIXME optimize for constants - compute directly
+    my $b1_1 = insert_formula_params( "", "sum", "0", $a1, $a0 );
+    my $b1_2 = insert_formula_params( "", "prod", "2", $b1_1, "3" );
+    my $b1   = insert_formula_params( "", "sum", $a0, $b1_2, "0" );
+
+    # $b2 = $b1 + 1/3 * ( $a2 - $a0 );
+    # FIXME optimize for constants - compute directly
+    my $b2_1 = insert_formula_params( "", "sum", "0", $a2, $a0 );
+    my $b2_2 = insert_formula_params( "", "prod", "1", $b2_1, "3" );
+    my $b2   = insert_formula_params( "", "sum", $b1, $b2_2, "0" );
+
+    my $b3 = $a2;
+
+    return ( $b0, $b1, $b2, $b3 );
+}
+
+# Extend $path by one more point
+sub add_point_to_path( $$ )
+{
+    my ( $x, $y ) = @_;
+
+    if ( $path =~ /[0-9]$/ && $x =~ /^[0-9-]/ ) {
+        $path .= ",";
+    }
+    $path .= $x;
+
+    if ( $path =~ /[0-9]$/ && $y =~ /^[0-9-]/ ) {
+        $path .= ",";
+    }
+    $path .= $y;
+}
+
+# Start of an element
+sub start_element( $% )
+{
+    my ( $element, %attr ) = @_;
+
+    push @levels, $element;
+
+    #print "element: $element\n";
+    
+    if ( is_level( -1, "presetShapeDefinitons" ) || is_level( -1, "presetTextWarpDefinitions" ) ) {
+        $shape_name = $element;
+        
+        $state = "";
+        $ignore_this_shape = 0;
+        $path = "";
+        $adjust = "";
+        $max_adj_no = 0;
+        @formulas = ();
+        $handles = "";
+        $textboxrect = "";
+        $last_pos_x = "";
+        $last_pos_y = "";
+        $no_stroke = 0;
+        $no_fill = 0;
+        @quadratic_bezier = ();
+
+        setup_variables();
+
+        if ( $shape_name eq "sun" ) {
+            # hack for this shape
+            $variables{'100000'} = "21600";
+            $variables{'50000'} = "10800";
+            $variables{'25000'} = "5400";
+            $variables{'12500'} = "2700";
+            $variables{'3662'} = "791";
+        }
+
+        my $found = 0;
+        foreach my $name ( values( %shapes_ids ) ) {
+            if ( $name eq $shape_name ) {
+                $found = 1;
+                last;
+            }
+        }
+        if ( !$found ) {
+            error( "Unknown shape '$shape_name'." );
+        }
+    }
+    elsif ( $element eq "pathLst" ) {
+        $state = "path";
+    }
+    elsif ( $element eq "avLst" ) {
+        $state = "adjust";
+    }
+    elsif ( $element eq "gdLst" ) {
+        $state = "formulas";
+    }
+    elsif ( $element eq "ahLst" ) {
+        $state = "handles";
+    }
+    elsif ( $element eq "rect" ) {
+        $textboxrect = value( $attr{'l'} ) . "," . value( $attr{'t'} ) . "," .
+                       value( $attr{'r'} ) . "," . value( $attr{'b'} );
+    }
+    elsif ( $state eq "path" ) {
+        if ( $element eq "path" ) {
+            $no_stroke = ( defined( $attr{'stroke'} ) && $attr{'stroke'} eq 'false' );
+            $no_fill = ( defined( $attr{'fill'} ) && $attr{'fill'} eq 'none' );
+            $path_w = $attr{'w'};
+            $path_h = $attr{'h'};
+        }
+        elsif ( $element eq "moveTo" ) {
+            $path .= "m";
+        }
+        elsif ( $element eq "lnTo" ) {
+            $path .= "l";
+        }
+        elsif ( $element eq "cubicBezTo" ) {
+            $path .= "c";
+        }
+        elsif ( $element eq "quadBezTo" ) {
+            my %points = ( 'x' => $last_pos_x, 'y' => $last_pos_y );
+            @quadratic_bezier = ( \%points );
+        }
+        elsif ( $element eq "close" ) {
+            $path .= "x";
+        }
+        elsif ( $element eq "pt" ) {
+            # rememeber the last position for the arcTo
+            $last_pos_x = value( $attr{'x'} );
+            $last_pos_y = value( $attr{'y'} );
+
+            $last_pos_x *= ( value( 'w' ) / $path_w ) if ( defined( $path_w ) );
+            $last_pos_y *= ( value( 'h' ) / $path_h ) if ( defined( $path_h ) );
+
+            if ( $#quadratic_bezier >= 0 ) {
+                my %points = ( 'x' => $last_pos_x, 'y' => $last_pos_y );
+                push( @quadratic_bezier, \%points );
+            }
+            else {
+                add_point_to_path( $last_pos_x, $last_pos_y );
+            }
+        }
+        elsif ( ( $element eq "arcTo" ) && ( $last_pos_x ne "" ) && ( $last_pos_y ne "" ) ) {
+            # there's no exact equivalent of arcTo in VML, so we have to
+            # compute here a bit...
+            my $stAng = value( $attr{'stAng'} );
+            my $swAng = value( $attr{'swAng'} );
+            my $wR = value( $attr{'wR'} );
+            my $hR = value( $attr{'hR'} );
+
+            $wR *= ( value( 'w' ) / $path_w ) if ( defined( $path_w ) );
+            $hR *= ( value( 'h' ) / $path_h ) if ( defined( $path_h ) );
+
+            if ( ( $stAng =~ /^[0-9-]+$/ ) && ( $swAng =~ /^[0-9-]+$/ ) ) {
+                if ( ( ( $stAng % 90 ) == 0 ) && ( ( $swAng % 90 ) == 0 ) && ( $swAng != 0 ) ) {
+                    my $end = $stAng + $swAng;
+                    my $step = ( $swAng > 0 )? 90: -90;
+
+                    for ( my $cur = $stAng; $cur != $end; $cur += $step ) {
+                        elliptic_quadrant( $wR, $hR, ( $cur % 360 ), $step );
+                    }
+                }
+                else {
+                    error( "Unsupported numeric 'arcTo' ($attr{'wR'}, $attr{'hR'}, $stAng, $swAng)." );
+                }
+            }
+            else {
+                error( "Unsupported 'arcTo' conversion ($attr{'wR'}, $attr{'hR'}, $stAng, $swAng)." );
+            }
+        }
+        else {
+            error( "Unhandled path element '$element'." );
+        }
+    }
+    elsif ( $state eq "adjust" ) {
+        if ( $element eq "gd" ) {
+            my $adj_no = $attr{'name'};
+            my $is_const = 0;
+
+            $adj_no =~ s/^adj//;
+            if ( $adj_no eq "" ) {
+                $max_adj_no = 0;
+            }
+            elsif ( !( $adj_no =~ /^[0-9]*$/ ) ) {
+                ++$max_adj_no;
+                $is_const = 1;
+            }
+            elsif ( $adj_no != $max_adj_no + 1 ) {
+                error( "Wrong order of adj values." );
+                ++$max_adj_no;
+            }
+            else {
+                $max_adj_no = $adj_no;
+            }
+
+            if ( $attr{'fmla'} =~ /^val ([0-9-]*)$/ ) {
+                my $val = sprintf( "%.0f", ( 21600 * $1 ) / 100000 );
+                if ( $is_const ) {
+                    $variables{$adj_no} = $val;
+                }
+                elsif ( $adjust eq "" ) {
+                    $adjust = $val;
+                }
+                else {
+                    $adjust = "$val,$adjust";
+                }
+            }
+            else {
+                error( "Wrong fmla '$attr{'fmla'}'." );
+            }
+        }
+        else {
+            error( "Unhandled adjust element '$element'." );
+        }
+    }
+    elsif ( $state eq "formulas" ) {
+        if ( $element eq "gd" ) {
+            if ( $attr{'fmla'} =~ /^\*\/ (h|w|ss) adj([0-9]+) 100000$/ ) {
+                insert_formula( $attr{'name'}, "val #" . ( $max_adj_no - $2 ) );
+            }
+            elsif ( $attr{'fmla'} =~ /^pin [^ ]+ ([^ ]+) / ) {
+                print STDERR "TODO Map 'pin' to VML as xrange for handles.\n";
+                my $pin_val = $1;
+                if ( $pin_val eq "adj" ) {
+                    insert_formula( $attr{'name'}, "val #0" );
+                }
+                elsif ( $pin_val =~ /^adj([0-9]+)/ ) {
+                    insert_formula( $attr{'name'}, "val #" . ( $max_adj_no - $1 ) );
+                }
+                else {
+                    insert_formula( $attr{'name'}, "val " . value( $pin_val ) );
+                }
+            }
+            elsif ( $attr{'fmla'} =~ /adj/ ) {
+                error( "Non-standard usage of adj in '$attr{'fmla'}'." );
+            }
+            else {
+                convert_formula( $attr{'name'}, $attr{'fmla'} );
+            }
+        }
+    }
+    elsif ( $state eq "handles" ) {
+        if ( $element eq "pos" ) {
+            $handles .= "<v:h position=\"" . value( $attr{'x'} ) . "," . value( $attr{'y'} ) . "\"/>\n";
+        }
+    }
+}
+
+# End of an element
+sub end_element( $ )
+{
+    my ( $element ) = @_;
+
+    pop @levels;
+
+    if ( $element eq $shape_name ) {
+        if ( !$ignore_this_shape ) {
+            # we have all the info, generate the shape now
+            $state = "";
+            
+            # shape path
+            my $out = "<v:shapetype id=\"shapetype___ID__\" coordsize=\"21600,21600\" o:spt=\"__ID__\" ";
+            if ( $adjust ne "" ) {
+                $out .= "adj=\"$adjust\" ";
+            }
+
+            # optimize it [yes, we need this twice ;-)]
+            $path =~ s/([^0-9-@])0([^0-9-@])/$1$2/g;
+            $path =~ s/([^0-9-@])0([^0-9-@])/$1$2/g;
+
+            $out .= "path=\"$path\">\n";
+
+            # stroke
+            $out .= "<v:stroke joinstyle=\"miter\"/>\n";
+            
+            # formulas
+            if ( $#formulas >= 0 )
+            {
+                $out .= "<v:formulas>\n";
+                foreach $fmla ( @formulas ) {
+                    $out .= "<v:f eqn=\"$fmla\"/>\n"
+                }
+                $out .= "</v:formulas>\n";
+            }
+
+            # path
+            if ( $textboxrect ne "" ) { # TODO connectlocs, connectangles
+                $out .= "<v:path gradientshapeok=\"t\" o:connecttype=\"rect\" textboxrect=\"$textboxrect\"/>\n";
+            }
+
+            # handles
+            if ( $handles ne "" ) {
+                $out .= "<v:handles>\n$handles</v:handles>\n";
+            }
+
+            $out .="</v:shapetype>";
+
+            # hooray! :-)
+            $result_shapes{$shape_name} = $out;
+        }
+        else {
+            print STDERR "Shape '$shape_name' ignored; see the above error(s) for the reason.\n";
+        }
+        $shape_name = "";
+    }
+    elsif ( $state eq "path" ) {
+        if ( $element eq "path" ) {
+            $path .= "ns" if ( $no_stroke );
+            $path .= "nf" if ( $no_fill );
+            $path .= "e";
+        }
+        elsif ( $element eq "quadBezTo" ) {
+            # we have to convert the quadratic bezier to cubic
+            if ( $#quadratic_bezier == 2 ) {
+                my @points_x = quadratic_to_cubic_bezier( 'x' );
+                my @points_y = quadratic_to_cubic_bezier( 'y' );
+
+                $path .= "c";
+                # ignore the starting point
+                for ( my $i = 1; $i < 4; ++$i ) {
+                    add_point_to_path( $points_x[$i], $points_y[$i] );
+                }
+            }
+            else {
+                error( "Wrong number of points of the quadratic bezier." );
+            }
+            @quadratic_bezier = ();
+        }
+    }
+    elsif ( $element eq "avLst" ) {
+        $state = "";
+    }
+    elsif ( $element eq "gdLst" ) {
+        $state = "";
+    }
+    elsif ( $element eq "ahLst" ) {
+        $state = "";
+    }
+}
+
+# Text inside an element
+sub characters( $ )
+{
+    #my ( $text ) = @_;
+}
+
+#################### A trivial XML parser ####################
+
+# Parse the attributes
+sub parse_start_element( $ )
+{
+    # split the string containing both the elements and attributes
+    my ( $element_tmp ) = @_;
+    
+    $element_tmp =~ s/\s*$//;
+    $element_tmp =~ s/^\s*//;
+
+    ( my $element = $element_tmp ) =~ s/\s.*$//;
+    if ( $element_tmp =~ /\s/ ) {
+        $element_tmp =~ s/^[^\s]*\s//;
+    }
+    else {
+        $element_tmp = "";
+    }
+
+    # we have the element, now the attributes
+    my %attr;
+    my $is_key = 1;
+    my $key = "";
+    foreach my $tmp ( split( /"/, $element_tmp ) ) {
+        if ( $is_key ) {
+            $key = $tmp;
+            $key =~ s/^\s*//;
+            $key =~ s/\s*=\s*$//;
+        }
+        else {
+            $attr{$key} = $tmp;
+        }
+        $is_key = !$is_key;
+    }
+
+    if ( $element ne "" ) {
+        start_element( $element, %attr );
+    }
+}
+
+# Parse the file
+sub parse( $ )
+{
+    my ( $file ) = @_;
+
+    my $in_comment = 0;
+    my $line = "";
+    while (<$file>) {
+        # ignore comments
+        s/<\?[^>]*\?>//g;
+        s/<!--[^>]*-->//g;
+        if ( /<!--/ ) {
+            $in_comment = 1;
+            s/<!--.*//;
+        }
+        elsif ( /-->/ && $in_comment ) {
+            $in_comment = 0;
+            s/.*-->//;
+        }
+        elsif ( $in_comment ) {
+            next;
+        }
+        # ignore empty lines
+        chomp;
+        s/^\s*//;
+        s/\s*$//;
+        next if ( $_ eq "" );
+    
+        # take care of lines where element continues
+        if ( $line ne "" ) {
+            $line .= " " . $_;
+        }
+        else {
+            $line = $_;
+        }
+        next if ( !/>$/ );
+    
+        # the actual parsing
+        my @starts = split( /</, $line );
+        $line = "";
+        foreach $start ( @starts ) {
+            next if ( $start eq "" );
+    
+            @ends = split( />/, $start );
+            my $element = $ends[0];
+            my $data = $ends[1];
+    
+            # start or end element
+            if ( $element =~ /^\/(.*)/ ) {
+                end_element( $1 );
+            }
+            elsif ( $element =~ /^(.*)\/$/ ) {
+                parse_start_element( $1 );
+                ( my $end = $1 ) =~ s/\s.*$//;
+                end_element( $end );
+            }
+            else {
+                parse_start_element( $element );
+            }
+    
+            # the data
+            characters( $data ) if ( defined( $data ) && $data ne "" );
+        }
+    }
+}
+
+# Do the real work
+open( IN, "<$src_shapes" ) || die "Cannot open $src_shapes.";
+parse( IN );
+close( IN );
+
+open( IN, "<$src_text" ) || die "Cannot open $src_text.";
+parse( IN );
+close( IN );
+
+if ( !defined( $result_shapes{'textBox'} ) ) {
+    $result_shapes{'textBox'} =
+        "<v:shapetype id=\"shapetype___ID__\" coordsize=\"21600,21600\" " .
+        "o:spt=\"__ID__\" path=\"m,l,21600l21600,21600l21600,xe\">\n" .
+        "<v:stroke joinstyle=\"miter\"/>\n" .
+        "<v:path gradientshapeok=\"t\" o:connecttype=\"rect\"/>\n" .
+        "</v:shapetype>";
+}
+
+# Generate the code
+print <<EOF;
+// Shape types generated from
+//   '$src_shapes'
+// and
+//   '$src_text'
+// which are part of the OOXML documentation
+
+#include <svx/escherex.hxx>
+
+const char* pShapeTypes[ ESCHER_ShpInst_COUNT ] =
+{
+EOF
+
+for ( $i = 0; $i < 203; ++$i ) {
+    if ( $i < 4 ) {
+        print "    /* $i - $shapes_ids{$i} - handled separately */\n    NULL,\n";
+    }
+    else {
+        print "    /* $i - $shapes_ids{$i} */\n";
+        my $out = $result_shapes{$shapes_ids{$i}};
+        if ( defined( $out ) ) {
+            # set the id
+            $out =~ s/__ID__/$i/g;
+        
+            # escape the '"'s
+            $out =~ s/"/\\"/g;
+
+            # output as string
+            $out =~ s/^/    "/;
+            $out =~ s/\n/"\n    "/g;
+            $out =~ s/$/"/;
+
+            print "$out,\n";
+        }
+        else {
+            print "    NULL,\n";
+        }
+    }
+}
+
+print <<EOF;
+};
+EOF
diff --git oox/source/export/presetShapeDefinitions.xml oox/source/export/presetShapeDefinitions.xml
new file mode 100644
index 0000000..f5fead7
--- /dev/null
+++ oox/source/export/presetShapeDefinitions.xml
@@ -0,0 +1,19915 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<presetShapeDefinitons>
+  <accentBorderCallout1>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="adj1" fmla="val 18750" />
+
+      <gd name="adj2" fmla="val -8333" />
+
+      <gd name="adj3" fmla="val 112500" />
+
+      <gd name="adj4" fmla="val -38333" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h adj1 100000" />
+      <gd name="x1" fmla="*/ w adj2 100000" />
+      <gd name="y2" fmla="*/ h adj3 100000" />
+      <gd name="x2" fmla="*/ w adj4 100000" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj2" minX="-2147483647" maxX="2147483647" gdRefY="adj1" minY="-2147483647" maxY="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="-2147483647" maxX="2147483647" gdRefY="adj3" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="t" />
+        </moveTo>
+        <close />
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </accentBorderCallout1>
+  <accentBorderCallout2>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="adj1" fmla="val 18750" />
+
+      <gd name="adj2" fmla="val -8333" />
+
+      <gd name="adj3" fmla="val 18750" />
+
+      <gd name="adj4" fmla="val -16667" />
+
+      <gd name="adj5" fmla="val 112500" />
+
+      <gd name="adj6" fmla="val -46667" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h adj1 100000" />
+      <gd name="x1" fmla="*/ w adj2 100000" />
+      <gd name="y2" fmla="*/ h adj3 100000" />
+      <gd name="x2" fmla="*/ w adj4 100000" />
+      <gd name="y3" fmla="*/ h adj5 100000" />
+      <gd name="x3" fmla="*/ w adj6 100000" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj2" minX="-2147483647" maxX="2147483647" gdRefY="adj1" minY="-2147483647" maxY="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="-2147483647" maxX="2147483647" gdRefY="adj3" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+      <ahXY gdRefX="adj6" minX="-2147483647" maxX="2147483647" gdRefY="adj5" minY="-2147483647" maxY="2147483647">
+        <pos x="x3" y="y3" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="t" />
+        </moveTo>
+        <close />
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </accentBorderCallout2>
+  <accentBorderCallout3>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="adj1" fmla="val 18750" />
+
+      <gd name="adj2" fmla="val -8333" />
+
+      <gd name="adj3" fmla="val 18750" />
+
+      <gd name="adj4" fmla="val -16667" />
+
+      <gd name="adj5" fmla="val 100000" />
+
+      <gd name="adj6" fmla="val -16667" />
+
+      <gd name="adj7" fmla="val 112963" />
+
+      <gd name="adj8" fmla="val -8333" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h adj1 100000" />
+      <gd name="x1" fmla="*/ w adj2 100000" />
+      <gd name="y2" fmla="*/ h adj3 100000" />
+      <gd name="x2" fmla="*/ w adj4 100000" />
+      <gd name="y3" fmla="*/ h adj5 100000" />
+      <gd name="x3" fmla="*/ w adj6 100000" />
+      <gd name="y4" fmla="*/ h adj7 100000" />
+      <gd name="x4" fmla="*/ w adj8 100000" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj2" minX="-2147483647" maxX="2147483647" gdRefY="adj1" minY="-2147483647" maxY="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="-2147483647" maxX="2147483647" gdRefY="adj3" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+      <ahXY gdRefX="adj6" minX="-2147483647" maxX="2147483647" gdRefY="adj5" minY="-2147483647" maxY="2147483647">
+        <pos x="x3" y="y3" />
+      </ahXY>
+      <ahXY gdRefX="adj8" minX="-2147483647" maxX="2147483647" gdRefY="adj7" minY="-2147483647" maxY="2147483647">
+        <pos x="x4" y="y4" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="t" />
+        </moveTo>
+        <close />
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y4" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </accentBorderCallout3>
+  <accentCallout1>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="adj1" fmla="val 18750" />
+
+      <gd name="adj2" fmla="val -8333" />
+
+      <gd name="adj3" fmla="val 112500" />
+
+      <gd name="adj4" fmla="val -38333" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h adj1 100000" />
+      <gd name="x1" fmla="*/ w adj2 100000" />
+      <gd name="y2" fmla="*/ h adj3 100000" />
+      <gd name="x2" fmla="*/ w adj4 100000" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj2" minX="-2147483647" maxX="2147483647" gdRefY="adj1" minY="-2147483647" maxY="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="-2147483647" maxX="2147483647" gdRefY="adj3" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="t" />
+        </moveTo>
+        <close />
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </accentCallout1>
+  <accentCallout2>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="adj1" fmla="val 18750" />
+
+      <gd name="adj2" fmla="val -8333" />
+
+      <gd name="adj3" fmla="val 18750" />
+
+      <gd name="adj4" fmla="val -16667" />
+
+      <gd name="adj5" fmla="val 112500" />
+
+      <gd name="adj6" fmla="val -46667" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h adj1 100000" />
+      <gd name="x1" fmla="*/ w adj2 100000" />
+      <gd name="y2" fmla="*/ h adj3 100000" />
+      <gd name="x2" fmla="*/ w adj4 100000" />
+      <gd name="y3" fmla="*/ h adj5 100000" />
+      <gd name="x3" fmla="*/ w adj6 100000" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj2" minX="-2147483647" maxX="2147483647" gdRefY="adj1" minY="-2147483647" maxY="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="-2147483647" maxX="2147483647" gdRefY="adj3" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+      <ahXY gdRefX="adj6" minX="-2147483647" maxX="2147483647" gdRefY="adj5" minY="-2147483647" maxY="2147483647">
+        <pos x="x3" y="y3" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="t" />
+        </moveTo>
+        <close />
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </accentCallout2>
+  <accentCallout3>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="adj1" fmla="val 18750" />
+
+      <gd name="adj2" fmla="val -8333" />
+
+      <gd name="adj3" fmla="val 18750" />
+
+      <gd name="adj4" fmla="val -16667" />
+
+      <gd name="adj5" fmla="val 100000" />
+
+      <gd name="adj6" fmla="val -16667" />
+
+      <gd name="adj7" fmla="val 112963" />
+
+      <gd name="adj8" fmla="val -8333" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h adj1 100000" />
+      <gd name="x1" fmla="*/ w adj2 100000" />
+      <gd name="y2" fmla="*/ h adj3 100000" />
+      <gd name="x2" fmla="*/ w adj4 100000" />
+      <gd name="y3" fmla="*/ h adj5 100000" />
+      <gd name="x3" fmla="*/ w adj6 100000" />
+      <gd name="y4" fmla="*/ h adj7 100000" />
+      <gd name="x4" fmla="*/ w adj8 100000" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj2" minX="-2147483647" maxX="2147483647" gdRefY="adj1" minY="-2147483647" maxY="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="-2147483647" maxX="2147483647" gdRefY="adj3" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+      <ahXY gdRefX="adj6" minX="-2147483647" maxX="2147483647" gdRefY="adj5" minY="-2147483647" maxY="2147483647">
+        <pos x="x3" y="y3" />
+      </ahXY>
+      <ahXY gdRefX="adj8" minX="-2147483647" maxX="2147483647" gdRefY="adj7" minY="-2147483647" maxY="2147483647">
+        <pos x="x4" y="y4" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="t" />
+        </moveTo>
+        <close />
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y4" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </accentCallout3>
+  <actionButtonBackPrevious>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dx2" fmla="*/ ss 3 8" />
+      <gd name="g9" fmla="+- vc 0 dx2" />
+      <gd name="g10" fmla="+- vc dx2 0" />
+      <gd name="g11" fmla="+- hc 0 dx2" />
+      <gd name="g12" fmla="+- hc dx2 0" />
+    </gdLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g11" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="g12" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g10" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darken" extrusionOk="false">
+        <moveTo>
+          <pt x="g11" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="g12" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g10" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="g11" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="g12" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g10" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </actionButtonBackPrevious>
+  <actionButtonBeginning>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dx2" fmla="*/ ss 3 8" />
+      <gd name="g9" fmla="+- vc 0 dx2" />
+      <gd name="g10" fmla="+- vc dx2 0" />
+      <gd name="g11" fmla="+- hc 0 dx2" />
+      <gd name="g12" fmla="+- hc dx2 0" />
+      <gd name="g13" fmla="*/ ss 3 4" />
+      <gd name="g14" fmla="*/ g13 1 8" />
+      <gd name="g15" fmla="*/ g13 1 4" />
+      <gd name="g16" fmla="+- g11 g14 0" />
+      <gd name="g17" fmla="+- g11 g15 0" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g17" y="vc" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g12" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g10" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g16" y="g9" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g11" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g16" y="g10" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darken" extrusionOk="false">
+        <moveTo>
+          <pt x="g17" y="vc" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g12" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g10" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g16" y="g9" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g11" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g16" y="g10" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="g17" y="vc" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g12" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g10" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g16" y="g9" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g16" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g9" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </actionButtonBeginning>
+  <actionButtonBlank>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </actionButtonBlank>
+  <actionButtonDocument>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dx2" fmla="*/ ss 3 8" />
+      <gd name="g9" fmla="+- vc 0 dx2" />
+      <gd name="g10" fmla="+- vc dx2 0" />
+      <gd name="dx1" fmla="*/ ss 9 32" />
+      <gd name="g11" fmla="+- hc 0 dx1" />
+      <gd name="g12" fmla="+- hc dx1 0" />
+      <gd name="g13" fmla="*/ ss 3 16" />
+      <gd name="g14" fmla="+- g12 0 g13" />
+      <gd name="g15" fmla="+- g9 g13 0" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g11" y="g9" />
+        </moveTo>
+        <lnTo>
+          <pt x="g14" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g15" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g10" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darkenLess" extrusionOk="false">
+
+        <moveTo>
+          <pt x="g11" y="g9" />
+        </moveTo>
+        <lnTo>
+          <pt x="g14" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g14" y="g15" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g15" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g10" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darken" extrusionOk="false">
+        <moveTo>
+          <pt x="g14" y="g9" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g14" y="g15" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g15" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="g11" y="g9" />
+        </moveTo>
+        <lnTo>
+          <pt x="g14" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g15" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g10" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g12" y="g15" />
+        </moveTo>
+        <lnTo>
+          <pt x="g14" y="g15" />
+        </lnTo>
+        <lnTo>
+          <pt x="g14" y="g9" />
+        </lnTo>
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </actionButtonDocument>
+  <actionButtonEnd>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dx2" fmla="*/ ss 3 8" />
+      <gd name="g9" fmla="+- vc 0 dx2" />
+      <gd name="g10" fmla="+- vc dx2 0" />
+      <gd name="g11" fmla="+- hc 0 dx2" />
+      <gd name="g12" fmla="+- hc dx2 0" />
+      <gd name="g13" fmla="*/ ss 3 4" />
+      <gd name="g14" fmla="*/ g13 3 4" />
+      <gd name="g15" fmla="*/ g13 7 8" />
+      <gd name="g16" fmla="+- g11 g14 0" />
+      <gd name="g17" fmla="+- g11 g15 0" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g16" y="vc" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g11" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g10" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g17" y="g9" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g12" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g17" y="g10" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darken" extrusionOk="false">
+        <moveTo>
+          <pt x="g16" y="vc" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g11" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g10" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g17" y="g9" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g12" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g17" y="g10" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="g16" y="vc" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g11" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g9" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g17" y="g9" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g12" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g17" y="g10" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </actionButtonEnd>
+  <actionButtonForwardNext>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dx2" fmla="*/ ss 3 8" />
+      <gd name="g9" fmla="+- vc 0 dx2" />
+      <gd name="g10" fmla="+- vc dx2 0" />
+      <gd name="g11" fmla="+- hc 0 dx2" />
+      <gd name="g12" fmla="+- hc dx2 0" />
+    </gdLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g12" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="g11" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g10" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darken" extrusionOk="false">
+        <moveTo>
+          <pt x="g12" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="g11" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g10" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="g12" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="g11" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g9" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </actionButtonForwardNext>
+  <actionButtonHelp>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dx2" fmla="*/ ss 3 8" />
+      <gd name="g9" fmla="+- vc 0 dx2" />
+      <gd name="g11" fmla="+- hc 0 dx2" />
+      <gd name="g13" fmla="*/ ss 3 4" />
+      <gd name="g14" fmla="*/ g13 1 7" />
+      <gd name="g15" fmla="*/ g13 3 14" />
+      <gd name="g16" fmla="*/ g13 2 7" />
+      <gd name="g19" fmla="*/ g13 3 7" />
+      <gd name="g20" fmla="*/ g13 4 7" />
+      <gd name="g21" fmla="*/ g13 17 28" />
+      <gd name="g23" fmla="*/ g13 21 28" />
+      <gd name="g24" fmla="*/ g13 11 14" />
+      <gd name="g27" fmla="+- g9 g16 0" />
+      <gd name="g29" fmla="+- g9 g21 0" />
+      <gd name="g30" fmla="+- g9 g23 0" />
+      <gd name="g31" fmla="+- g9 g24 0" />
+      <gd name="g33" fmla="+- g11 g15 0" />
+      <gd name="g36" fmla="+- g11 g19 0" />
+      <gd name="g37" fmla="+- g11 g20 0" />
+      <gd name="g41" fmla="*/ g13 1 14" />
+      <gd name="g42" fmla="*/ g13 3 28" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g33" y="g27" />
+        </moveTo>
+
+        <arcTo wR="g16" hR="g16" stAng="cd2" swAng="cd2" />
+        <arcTo wR="g14" hR="g15" stAng="0" swAng="cd4" />
+        <arcTo wR="g41" hR="g42" stAng="3cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="g37" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g36" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g36" y="g29" />
+        </lnTo>
+        <arcTo wR="g14" hR="g15" stAng="cd2" swAng="cd4" />
+        <arcTo wR="g41" hR="g42" stAng="cd4" swAng="-5400000" />
+        <arcTo wR="g14" hR="g14" stAng="0" swAng="-10800000" />
+        <close />
+        <moveTo>
+          <pt x="hc" y="g31" />
+        </moveTo>
+
+        <arcTo wR="g42" hR="g42" stAng="3cd4" swAng="21600000" />
+        <close />
+      </path>
+      <path stroke="false" fill="darken" extrusionOk="false">
+        <moveTo>
+          <pt x="g33" y="g27" />
+        </moveTo>
+
+        <arcTo wR="g16" hR="g16" stAng="cd2" swAng="cd2" />
+        <arcTo wR="g14" hR="g15" stAng="0" swAng="cd4" />
+        <arcTo wR="g41" hR="g42" stAng="3cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="g37" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g36" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g36" y="g29" />
+        </lnTo>
+        <arcTo wR="g14" hR="g15" stAng="cd2" swAng="cd4" />
+        <arcTo wR="g41" hR="g42" stAng="cd4" swAng="-5400000" />
+        <arcTo wR="g14" hR="g14" stAng="0" swAng="-10800000" />
+        <close />
+        <moveTo>
+          <pt x="hc" y="g31" />
+        </moveTo>
+
+        <arcTo wR="g42" hR="g42" stAng="3cd4" swAng="21600000" />
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="g33" y="g27" />
+        </moveTo>
+
+        <arcTo wR="g16" hR="g16" stAng="cd2" swAng="cd2" />
+        <arcTo wR="g14" hR="g15" stAng="0" swAng="cd4" />
+        <arcTo wR="g41" hR="g42" stAng="3cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="g37" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g36" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g36" y="g29" />
+        </lnTo>
+        <arcTo wR="g14" hR="g15" stAng="cd2" swAng="cd4" />
+        <arcTo wR="g41" hR="g42" stAng="cd4" swAng="-5400000" />
+        <arcTo wR="g14" hR="g14" stAng="0" swAng="-10800000" />
+        <close />
+        <moveTo>
+          <pt x="hc" y="g31" />
+        </moveTo>
+
+        <arcTo wR="g42" hR="g42" stAng="3cd4" swAng="21600000" />
+        <close />
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </actionButtonHelp>
+  <actionButtonHome>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dx2" fmla="*/ ss 3 8" />
+      <gd name="g9" fmla="+- vc 0 dx2" />
+      <gd name="g10" fmla="+- vc dx2 0" />
+      <gd name="g11" fmla="+- hc 0 dx2" />
+      <gd name="g12" fmla="+- hc dx2 0" />
+      <gd name="g13" fmla="*/ ss 3 4" />
+      <gd name="g14" fmla="*/ g13 1 16" />
+      <gd name="g15" fmla="*/ g13 1 8" />
+      <gd name="g16" fmla="*/ g13 3 16" />
+      <gd name="g17" fmla="*/ g13 5 16" />
+      <gd name="g18" fmla="*/ g13 7 16" />
+      <gd name="g19" fmla="*/ g13 9 16" />
+      <gd name="g20" fmla="*/ g13 11 16" />
+      <gd name="g21" fmla="*/ g13 3 4" />
+      <gd name="g22" fmla="*/ g13 13 16" />
+      <gd name="g23" fmla="*/ g13 7 8" />
+      <gd name="g24" fmla="+- g9 g14 0" />
+      <gd name="g25" fmla="+- g9 g16 0" />
+      <gd name="g26" fmla="+- g9 g17 0" />
+      <gd name="g27" fmla="+- g9 g21 0" />
+      <gd name="g28" fmla="+- g11 g15 0" />
+      <gd name="g29" fmla="+- g11 g18 0" />
+      <gd name="g30" fmla="+- g11 g19 0" />
+      <gd name="g31" fmla="+- g11 g20 0" />
+      <gd name="g32" fmla="+- g11 g22 0" />
+      <gd name="g33" fmla="+- g11 g23 0" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="hc" y="g9" />
+        </moveTo>
+        <lnTo>
+          <pt x="g11" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="g28" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="g28" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g33" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g33" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g26" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g24" />
+        </lnTo>
+        <lnTo>
+          <pt x="g31" y="g24" />
+        </lnTo>
+        <lnTo>
+          <pt x="g31" y="g25" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darkenLess" extrusionOk="false">
+
+        <moveTo>
+          <pt x="g32" y="g26" />
+        </moveTo>
+        <lnTo>
+          <pt x="g32" y="g24" />
+        </lnTo>
+        <lnTo>
+          <pt x="g31" y="g24" />
+        </lnTo>
+        <lnTo>
+          <pt x="g31" y="g25" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g28" y="vc" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g28" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g29" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g29" y="g27" />
+        </lnTo>
+        <lnTo>
+          <pt x="g30" y="g27" />
+        </lnTo>
+        <lnTo>
+          <pt x="g30" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g33" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g33" y="vc" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darken" extrusionOk="false">
+        <moveTo>
+          <pt x="hc" y="g9" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g11" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="vc" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g29" y="g27" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g30" y="g27" />
+        </lnTo>
+        <lnTo>
+          <pt x="g30" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g29" y="g10" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="hc" y="g9" />
+        </moveTo>
+        <lnTo>
+          <pt x="g31" y="g25" />
+        </lnTo>
+        <lnTo>
+          <pt x="g31" y="g24" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g24" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g26" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="g33" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="g33" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g28" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g28" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="vc" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g31" y="g25" />
+        </moveTo>
+        <lnTo>
+          <pt x="g32" y="g26" />
+        </lnTo>
+
+        <moveTo>
+          <pt x="g33" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="g28" y="vc" />
+        </lnTo>
+
+        <moveTo>
+          <pt x="g29" y="g10" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g29" y="g27" />
+        </lnTo>
+        <lnTo>
+          <pt x="g30" y="g27" />
+        </lnTo>
+        <lnTo>
+          <pt x="g30" y="g10" />
+        </lnTo>
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </actionButtonHome>
+  <actionButtonInformation>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dx2" fmla="*/ ss 3 8" />
+      <gd name="g9" fmla="+- vc 0 dx2" />
+      <gd name="g11" fmla="+- hc 0 dx2" />
+      <gd name="g13" fmla="*/ ss 3 4" />
+      <gd name="g14" fmla="*/ g13 1 32" />
+      <gd name="g17" fmla="*/ g13 5 16" />
+      <gd name="g18" fmla="*/ g13 3 8" />
+      <gd name="g19" fmla="*/ g13 13 32" />
+      <gd name="g20" fmla="*/ g13 19 32" />
+      <gd name="g22" fmla="*/ g13 11 16" />
+      <gd name="g23" fmla="*/ g13 13 16" />
+      <gd name="g24" fmla="*/ g13 7 8" />
+      <gd name="g25" fmla="+- g9 g14 0" />
+      <gd name="g28" fmla="+- g9 g17 0" />
+      <gd name="g29" fmla="+- g9 g18 0" />
+      <gd name="g30" fmla="+- g9 g23 0" />
+      <gd name="g31" fmla="+- g9 g24 0" />
+      <gd name="g32" fmla="+- g11 g17 0" />
+      <gd name="g34" fmla="+- g11 g19 0" />
+      <gd name="g35" fmla="+- g11 g20 0" />
+      <gd name="g37" fmla="+- g11 g22 0" />
+      <gd name="g38" fmla="*/ g13 3 32" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="hc" y="g9" />
+        </moveTo>
+
+        <arcTo wR="dx2" hR="dx2" stAng="3cd4" swAng="21600000" />
+        <close />
+      </path>
+      <path stroke="false" fill="darken" extrusionOk="false">
+        <moveTo>
+          <pt x="hc" y="g9" />
+        </moveTo>
+
+        <arcTo wR="dx2" hR="dx2" stAng="3cd4" swAng="21600000" />
+        <close />
+        <moveTo>
+          <pt x="hc" y="g25" />
+        </moveTo>
+
+        <arcTo wR="g38" hR="g38" stAng="3cd4" swAng="21600000" />
+        <moveTo>
+          <pt x="g32" y="g28" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g32" y="g29" />
+        </lnTo>
+        <lnTo>
+          <pt x="g34" y="g29" />
+        </lnTo>
+        <lnTo>
+          <pt x="g34" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g31" />
+        </lnTo>
+        <lnTo>
+          <pt x="g37" y="g31" />
+        </lnTo>
+        <lnTo>
+          <pt x="g37" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g28" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="lighten" extrusionOk="false">
+        <moveTo>
+          <pt x="hc" y="g25" />
+        </moveTo>
+
+        <arcTo wR="g38" hR="g38" stAng="3cd4" swAng="21600000" />
+        <moveTo>
+          <pt x="g32" y="g28" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g35" y="g28" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g37" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g37" y="g31" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g31" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g34" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g34" y="g29" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g29" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="hc" y="g9" />
+        </moveTo>
+
+        <arcTo wR="dx2" hR="dx2" stAng="3cd4" swAng="21600000" />
+        <close />
+        <moveTo>
+          <pt x="hc" y="g25" />
+        </moveTo>
+
+        <arcTo wR="g38" hR="g38" stAng="3cd4" swAng="21600000" />
+        <moveTo>
+          <pt x="g32" y="g28" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g35" y="g28" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g37" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g37" y="g31" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g31" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g34" y="g30" />
+        </lnTo>
+        <lnTo>
+          <pt x="g34" y="g29" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g29" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </actionButtonInformation>
+  <actionButtonMovie>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dx2" fmla="*/ ss 3 8" />
+      <gd name="g9" fmla="+- vc 0 dx2" />
+      <gd name="g10" fmla="+- vc dx2 0" />
+      <gd name="g11" fmla="+- hc 0 dx2" />
+      <gd name="g12" fmla="+- hc dx2 0" />
+      <gd name="g13" fmla="*/ ss 3 4" />
+      <gd name="g14" fmla="*/ g13 1455 21600" />
+      <gd name="g15" fmla="*/ g13 1905 21600" />
+      <gd name="g16" fmla="*/ g13 2325 21600" />
+      <gd name="g17" fmla="*/ g13 16155 21600" />
+      <gd name="g18" fmla="*/ g13 17010 21600" />
+      <gd name="g19" fmla="*/ g13 19335 21600" />
+      <gd name="g20" fmla="*/ g13 19725 21600" />
+      <gd name="g21" fmla="*/ g13 20595 21600" />
+      <gd name="g22" fmla="*/ g13 5280 21600" />
+      <gd name="g23" fmla="*/ g13 5730 21600" />
+      <gd name="g24" fmla="*/ g13 6630 21600" />
+      <gd name="g25" fmla="*/ g13 7492 21600" />
+      <gd name="g26" fmla="*/ g13 9067 21600" />
+      <gd name="g27" fmla="*/ g13 9555 21600" />
+      <gd name="g28" fmla="*/ g13 13342 21600" />
+      <gd name="g29" fmla="*/ g13 14580 21600" />
+      <gd name="g30" fmla="*/ g13 15592 21600" />
+      <gd name="g31" fmla="+- g11 g14 0" />
+      <gd name="g32" fmla="+- g11 g15 0" />
+      <gd name="g33" fmla="+- g11 g16 0" />
+      <gd name="g34" fmla="+- g11 g17 0" />
+      <gd name="g35" fmla="+- g11 g18 0" />
+      <gd name="g36" fmla="+- g11 g19 0" />
+      <gd name="g37" fmla="+- g11 g20 0" />
+      <gd name="g38" fmla="+- g11 g21 0" />
+      <gd name="g39" fmla="+- g9 g22 0" />
+      <gd name="g40" fmla="+- g9 g23 0" />
+      <gd name="g41" fmla="+- g9 g24 0" />
+      <gd name="g42" fmla="+- g9 g25 0" />
+      <gd name="g43" fmla="+- g9 g26 0" />
+      <gd name="g44" fmla="+- g9 g27 0" />
+      <gd name="g45" fmla="+- g9 g28 0" />
+      <gd name="g46" fmla="+- g9 g29 0" />
+      <gd name="g47" fmla="+- g9 g30 0" />
+      <gd name="g48" fmla="+- g9 g31 0" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g11" y="g39" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g11" y="g44" />
+        </lnTo>
+        <lnTo>
+          <pt x="g31" y="g44" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g43" />
+        </lnTo>
+        <lnTo>
+          <pt x="g33" y="g43" />
+        </lnTo>
+        <lnTo>
+          <pt x="g33" y="g47" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g47" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g45" />
+        </lnTo>
+        <lnTo>
+          <pt x="g36" y="g45" />
+        </lnTo>
+        <lnTo>
+          <pt x="g38" y="g46" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g46" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g41" />
+        </lnTo>
+        <lnTo>
+          <pt x="g38" y="g41" />
+        </lnTo>
+        <lnTo>
+          <pt x="g37" y="g42" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g42" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g41" />
+        </lnTo>
+        <lnTo>
+          <pt x="g34" y="g40" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g40" />
+        </lnTo>
+        <lnTo>
+          <pt x="g31" y="g39" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darken" extrusionOk="false">
+        <moveTo>
+          <pt x="g11" y="g39" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g11" y="g44" />
+        </lnTo>
+        <lnTo>
+          <pt x="g31" y="g44" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g43" />
+        </lnTo>
+        <lnTo>
+          <pt x="g33" y="g43" />
+        </lnTo>
+        <lnTo>
+          <pt x="g33" y="g47" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g47" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g45" />
+        </lnTo>
+        <lnTo>
+          <pt x="g36" y="g45" />
+        </lnTo>
+        <lnTo>
+          <pt x="g38" y="g46" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g46" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g41" />
+        </lnTo>
+        <lnTo>
+          <pt x="g38" y="g41" />
+        </lnTo>
+        <lnTo>
+          <pt x="g37" y="g42" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g42" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g41" />
+        </lnTo>
+        <lnTo>
+          <pt x="g34" y="g40" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g40" />
+        </lnTo>
+        <lnTo>
+          <pt x="g31" y="g39" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="g11" y="g39" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g31" y="g39" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g40" />
+        </lnTo>
+        <lnTo>
+          <pt x="g34" y="g40" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g41" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g42" />
+        </lnTo>
+        <lnTo>
+          <pt x="g37" y="g42" />
+        </lnTo>
+        <lnTo>
+          <pt x="g38" y="g41" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g41" />
+        </lnTo>
+        <lnTo>
+          <pt x="g12" y="g46" />
+        </lnTo>
+        <lnTo>
+          <pt x="g38" y="g46" />
+        </lnTo>
+        <lnTo>
+          <pt x="g36" y="g45" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g45" />
+        </lnTo>
+        <lnTo>
+          <pt x="g35" y="g47" />
+        </lnTo>
+        <lnTo>
+          <pt x="g33" y="g47" />
+        </lnTo>
+        <lnTo>
+          <pt x="g33" y="g43" />
+        </lnTo>
+        <lnTo>
+          <pt x="g32" y="g43" />
+        </lnTo>
+        <lnTo>
+          <pt x="g31" y="g44" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g44" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </actionButtonMovie>
+  <actionButtonReturn>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dx2" fmla="*/ ss 3 8" />
+      <gd name="g9" fmla="+- vc 0 dx2" />
+      <gd name="g10" fmla="+- vc dx2 0" />
+      <gd name="g11" fmla="+- hc 0 dx2" />
+      <gd name="g12" fmla="+- hc dx2 0" />
+      <gd name="g13" fmla="*/ ss 3 4" />
+      <gd name="g14" fmla="*/ g13 7 8" />
+      <gd name="g15" fmla="*/ g13 3 4" />
+      <gd name="g16" fmla="*/ g13 5 8" />
+      <gd name="g17" fmla="*/ g13 3 8" />
+      <gd name="g18" fmla="*/ g13 1 4" />
+      <gd name="g19" fmla="+- g9 g15 0" />
+      <gd name="g20" fmla="+- g9 g16 0" />
+      <gd name="g21" fmla="+- g9 g18 0" />
+      <gd name="g22" fmla="+- g11 g14 0" />
+      <gd name="g23" fmla="+- g11 g15 0" />
+      <gd name="g24" fmla="+- g11 g16 0" />
+      <gd name="g25" fmla="+- g11 g17 0" />
+      <gd name="g26" fmla="+- g11 g18 0" />
+      <gd name="g27" fmla="*/ g13 1 8" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g12" y="g21" />
+        </moveTo>
+        <lnTo>
+          <pt x="g23" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="g24" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="g24" y="g20" />
+        </lnTo>
+        <arcTo wR="g27" hR="g27" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="g25" y="g19" />
+        </lnTo>
+        <arcTo wR="g27" hR="g27" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="g26" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g20" />
+        </lnTo>
+        <arcTo wR="g17" hR="g17" stAng="cd2" swAng="-5400000" />
+        <lnTo>
+          <pt x="hc" y="g10" />
+        </lnTo>
+        <arcTo wR="g17" hR="g17" stAng="cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="g22" y="g21" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darken" extrusionOk="false">
+        <moveTo>
+          <pt x="g12" y="g21" />
+        </moveTo>
+        <lnTo>
+          <pt x="g23" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="g24" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="g24" y="g20" />
+        </lnTo>
+        <arcTo wR="g27" hR="g27" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="g25" y="g19" />
+        </lnTo>
+        <arcTo wR="g27" hR="g27" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="g26" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g20" />
+        </lnTo>
+        <arcTo wR="g17" hR="g17" stAng="cd2" swAng="-5400000" />
+        <lnTo>
+          <pt x="hc" y="g10" />
+        </lnTo>
+        <arcTo wR="g17" hR="g17" stAng="cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="g22" y="g21" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="g12" y="g21" />
+        </moveTo>
+        <lnTo>
+          <pt x="g22" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="g22" y="g20" />
+        </lnTo>
+        <arcTo wR="g17" hR="g17" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="g25" y="g10" />
+        </lnTo>
+        <arcTo wR="g17" hR="g17" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="g11" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="g26" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="g26" y="g20" />
+        </lnTo>
+        <arcTo wR="g27" hR="g27" stAng="cd2" swAng="-5400000" />
+        <lnTo>
+          <pt x="hc" y="g19" />
+        </lnTo>
+        <arcTo wR="g27" hR="g27" stAng="cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="g24" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="g23" y="g9" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </actionButtonReturn>
+  <actionButtonSound>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dx2" fmla="*/ ss 3 8" />
+      <gd name="g9" fmla="+- vc 0 dx2" />
+      <gd name="g10" fmla="+- vc dx2 0" />
+      <gd name="g11" fmla="+- hc 0 dx2" />
+      <gd name="g12" fmla="+- hc dx2 0" />
+      <gd name="g13" fmla="*/ ss 3 4" />
+      <gd name="g14" fmla="*/ g13 1 8" />
+      <gd name="g15" fmla="*/ g13 5 16" />
+      <gd name="g16" fmla="*/ g13 5 8" />
+      <gd name="g17" fmla="*/ g13 11 16" />
+      <gd name="g18" fmla="*/ g13 3 4" />
+      <gd name="g19" fmla="*/ g13 7 8" />
+      <gd name="g20" fmla="+- g9 g14 0" />
+      <gd name="g21" fmla="+- g9 g15 0" />
+      <gd name="g22" fmla="+- g9 g17 0" />
+      <gd name="g23" fmla="+- g9 g19 0" />
+      <gd name="g24" fmla="+- g11 g15 0" />
+      <gd name="g25" fmla="+- g11 g16 0" />
+      <gd name="g26" fmla="+- g11 g18 0" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g11" y="g21" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g11" y="g22" />
+        </lnTo>
+        <lnTo>
+          <pt x="g24" y="g22" />
+        </lnTo>
+        <lnTo>
+          <pt x="g25" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g25" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g24" y="g21" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darken" extrusionOk="false">
+        <moveTo>
+          <pt x="g11" y="g21" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g11" y="g22" />
+        </lnTo>
+        <lnTo>
+          <pt x="g24" y="g22" />
+        </lnTo>
+        <lnTo>
+          <pt x="g25" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g25" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g24" y="g21" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="g11" y="g21" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="g24" y="g21" />
+        </lnTo>
+        <lnTo>
+          <pt x="g25" y="g9" />
+        </lnTo>
+        <lnTo>
+          <pt x="g25" y="g10" />
+        </lnTo>
+        <lnTo>
+          <pt x="g24" y="g22" />
+        </lnTo>
+        <lnTo>
+          <pt x="g11" y="g22" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="g26" y="g21" />
+        </moveTo>
+        <lnTo>
+          <pt x="g12" y="g20" />
+        </lnTo>
+        <moveTo>
+          <pt x="g26" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="g12" y="vc" />
+        </lnTo>
+        <moveTo>
+          <pt x="g26" y="g22" />
+        </moveTo>
+        <lnTo>
+          <pt x="g12" y="g23" />
+        </lnTo>
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </actionButtonSound>
+  <arc>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 16200000" />
+      <gd name="adj2" fmla="val 0" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="stAng" fmla="pin 0 adj1 21599999" />
+      <gd name="enAng" fmla="pin 0 adj2 21599999" />
+      <gd name="sw11" fmla="+- enAng 0 stAng" />
+      <gd name="sw12" fmla="+- sw11 21600000 0" />
+      <gd name="swAng" fmla="?: sw11 sw11 sw12" />
+      <gd name="wt1" fmla="sin wd2 stAng" />
+      <gd name="ht1" fmla="cos hd2 stAng" />
+      <gd name="dx1" fmla="cat2 wd2 ht1 wt1" />
+      <gd name="dy1" fmla="sat2 hd2 ht1 wt1" />
+      <gd name="wt2" fmla="sin wd2 enAng" />
+      <gd name="ht2" fmla="cos hd2 enAng" />
+      <gd name="dx2" fmla="cat2 wd2 ht2 wt2" />
+      <gd name="dy2" fmla="sat2 hd2 ht2 wt2" />
+      <gd name="x1" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- vc dy1 0" />
+      <gd name="x2" fmla="+- hc dx2 0" />
+      <gd name="y2" fmla="+- vc dy2 0" />
+      <gd name="sw0" fmla="+- 21600000 0 stAng" />
+      <gd name="da1" fmla="+- swAng 0 sw0" />
+      <gd name="g1" fmla="max x1 x2" />
+      <gd name="ir" fmla="?: da1 r g1" />
+      <gd name="sw1" fmla="+- cd4 0 stAng" />
+      <gd name="sw2" fmla="+- 27000000 0 stAng" />
+      <gd name="sw3" fmla="?: sw1 sw1 sw2" />
+      <gd name="da2" fmla="+- swAng 0 sw3" />
+      <gd name="g5" fmla="max y1 y2" />
+      <gd name="ib" fmla="?: da2 b g5" />
+      <gd name="sw4" fmla="+- cd2 0 stAng" />
+      <gd name="sw5" fmla="+- 32400000 0 stAng" />
+      <gd name="sw6" fmla="?: sw4 sw4 sw5" />
+      <gd name="da3" fmla="+- swAng 0 sw6" />
+      <gd name="g9" fmla="min x1 x2" />
+      <gd name="il" fmla="?: da3 l g9" />
+      <gd name="sw7" fmla="+- 3cd4 0 stAng" />
+      <gd name="sw8" fmla="+- 37800000 0 stAng" />
+      <gd name="sw9" fmla="?: sw7 sw7 sw8" />
+      <gd name="da4" fmla="+- swAng 0 sw9" />
+      <gd name="g13" fmla="min y1 y2" />
+      <gd name="it" fmla="?: da4 t g13" />
+      <gd name="cang1" fmla="+- stAng 0 cd4" />
+      <gd name="cang2" fmla="+- enAng cd4 0" />
+      <gd name="cang3" fmla="+/ cang1 cang2 2" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefAng="adj1" minAng="0" maxAng="21599999">
+        <pos x="x1" y="y1" />
+      </ahPolar>
+      <ahPolar gdRefAng="adj2" minAng="0" maxAng="21599999">
+        <pos x="x2" y="y2" />
+      </ahPolar>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cang1">
+        <pos x="x1" y="y1" />
+      </cxn>
+      <cxn ang="cang3">
+        <pos x="hc" y="vc" />
+      </cxn>
+      <cxn ang="cang2">
+        <pos x="x2" y="y2" />
+      </cxn>
+    </cxnLst>
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="stAng" swAng="swAng" />
+        <lnTo>
+          <pt x="hc" y="vc" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="stAng" swAng="swAng" />
+      </path>
+    </pathLst>
+  </arc>
+  <bentArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 25000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+      <gd name="adj4" fmla="val 43750" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a2" fmla="pin 0 adj2 50000" />
+      <gd name="maxAdj1" fmla="*/ a2 2 1" />
+
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="a3" fmla="pin 0 adj3 50000" />
+      <gd name="th" fmla="*/ ss a1 100000" />
+
+      <gd name="aw2" fmla="*/ ss a2 100000" />
+
+      <gd name="th2" fmla="*/ th 1 2" />
+      <gd name="dh2" fmla="+- aw2 0 th2" />
+
+      <gd name="ah" fmla="*/ ss a3 100000" />
+
+      <gd name="bw" fmla="+- r 0 ah" />
+
+      <gd name="bh" fmla="+- b 0 dh2" />
+
+      <gd name="bs" fmla="min bw bh" />
+
+      <gd name="maxAdj4" fmla="*/ 100000 bs ss" />
+      <gd name="a4" fmla="pin 0 adj4 maxAdj4" />
+
+      <gd name="bd" fmla="*/ ss a4 100000" />
+
+
+      <gd name="bd3" fmla="+- bd 0 th" />
+      <gd name="bd2" fmla="max bd3 0" />
+      <gd name="x3" fmla="+- th bd2 0" />
+      <gd name="x4" fmla="+- r 0 ah" />
+
+
+      <gd name="y3" fmla="+- dh2 th 0" />
+      <gd name="y4" fmla="+- y3 dh2 0" />
+      <gd name="y5" fmla="+- dh2 bd 0" />
+      <gd name="y6" fmla="+- y3 bd2 0" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="maxAdj1">
+        <pos x="th" y="b" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="0" maxY="50000">
+        <pos x="r" y="y4" />
+      </ahXY>
+      <ahXY gdRefX="adj3" minX="0" maxX="50000">
+        <pos x="x4" y="t" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="0" maxX="maxAdj4">
+        <pos x="bd" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x4" y="t" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x4" y="y4" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="th2" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="aw2" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="l" y="y5" />
+        </lnTo>
+        <arcTo wR="bd" hR="bd" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="x4" y="dh2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="aw2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <arcTo wR="bd2" hR="bd2" stAng="3cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="th" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </bentArrow>
+  <bentConnector2>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+      </path>
+    </pathLst>
+  </bentConnector2>
+  <bentConnector3>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x1" fmla="*/ w adj1 100000" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="-2147483647" maxX="2147483647">
+        <pos x="x1" y="vc" />
+      </ahXY>
+    </ahLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+      </path>
+    </pathLst>
+  </bentConnector3>
+  <bentConnector4>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+      <gd name="adj2" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x1" fmla="*/ w adj1 100000" />
+      <gd name="x2" fmla="+/ x1 r 2" />
+      <gd name="y2" fmla="*/ h adj2 100000" />
+      <gd name="y1" fmla="+/ t y2 2" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="-2147483647" maxX="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+    </ahLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+      </path>
+    </pathLst>
+  </bentConnector4>
+  <bentConnector5>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+      <gd name="adj3" fmla="val 50000" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x1" fmla="*/ w adj1 100000" />
+
+      <gd name="x3" fmla="*/ w adj3 100000" />
+
+      <gd name="x2" fmla="+/ x1 x3 2" />
+
+      <gd name="y2" fmla="*/ h adj2 100000" />
+
+      <gd name="y1" fmla="+/ t y2 2" />
+
+      <gd name="y3" fmla="+/ b y2 2" />
+
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="-2147483647" maxX="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+      <ahXY gdRefX="adj3" minX="-2147483647" maxX="2147483647">
+        <pos x="x3" y="y3" />
+      </ahXY>
+    </ahLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </bentConnector5>
+  <bentUpArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 25000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 50000" />
+      <gd name="a2" fmla="pin 0 adj2 50000" />
+      <gd name="a3" fmla="pin 0 adj3 50000" />
+      <gd name="y1" fmla="*/ ss a3 100000" />
+      <gd name="dx1" fmla="*/ ss a2 50000" />
+
+      <gd name="x1" fmla="+- r 0 dx1" />
+      <gd name="dx3" fmla="*/ ss a2 100000" />
+
+      <gd name="x3" fmla="+- r 0 dx3" />
+      <gd name="dx2" fmla="*/ ss a1 200000" />
+
+      <gd name="x2" fmla="+- x3 0 dx2" />
+      <gd name="x4" fmla="+- x3 dx2 0" />
+      <gd name="dy2" fmla="*/ ss a1 100000" />
+
+      <gd name="y2" fmla="+- b 0 dy2" />
+      <gd name="x0" fmla="*/ x4 1 2" />
+      <gd name="y3" fmla="+/ y2 b 2" />
+      <gd name="y15" fmla="+/ y1 b 2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="50000">
+        <pos x="l" y="y2" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="50000">
+        <pos x="x1" y="t" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="0" maxY="50000">
+        <pos x="x2" y="y1" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x3" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y1" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x0" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x4" y="y15" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="y2" r="x4" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </bentUpArrow>
+  <bevel>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 12500" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="x1" fmla="*/ ss a 100000" />
+
+
+
+      <gd name="x2" fmla="+- r 0 x1" />
+
+      <gd name="y2" fmla="+- b 0 x1" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="50000">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x2" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="x1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x1" t="x1" r="x2" b="y2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="x1" y="x1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="lightenLess" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="x1" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darkenLess" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="lighten" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darken" extrusionOk="false">
+
+        <moveTo>
+          <pt x="r" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="x1" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="x1" y="x1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="x1" />
+        </lnTo>
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <moveTo>
+          <pt x="r" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="x1" />
+        </lnTo>
+        <moveTo>
+          <pt x="r" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </bevel>
+  <blockArc>
+
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 10800000" />
+
+      <gd name="adj2" fmla="val 0" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="stAng" fmla="pin 0 adj1 21599999" />
+      <gd name="istAng" fmla="pin 0 adj2 21599999" />
+      <gd name="a3" fmla="pin 0 adj3 50000" />
+      <gd name="sw11" fmla="+- istAng 0 stAng" />
+
+      <gd name="sw12" fmla="+- sw11 21600000 0" />
+
+      <gd name="swAng" fmla="?: sw11 sw11 sw12" />
+
+      <gd name="iswAng" fmla="+- 0 0 swAng" />
+
+
+      <gd name="wt1" fmla="sin wd2 stAng" />
+      <gd name="ht1" fmla="cos hd2 stAng" />
+      <gd name="wt3" fmla="sin wd2 istAng" />
+      <gd name="ht3" fmla="cos hd2 istAng" />
+      <gd name="dx1" fmla="cat2 wd2 ht1 wt1" />
+      <gd name="dy1" fmla="sat2 hd2 ht1 wt1" />
+      <gd name="dx3" fmla="cat2 wd2 ht3 wt3" />
+      <gd name="dy3" fmla="sat2 hd2 ht3 wt3" />
+      <gd name="x1" fmla="+- hc dx1 0" />
+
+      <gd name="y1" fmla="+- vc dy1 0" />
+
+      <gd name="x3" fmla="+- hc dx3 0" />
+
+      <gd name="y3" fmla="+- vc dy3 0" />
+
+
+      <gd name="dr" fmla="*/ ss a3 100000" />
+      <gd name="iwd2" fmla="+- wd2 0 dr" />
+      <gd name="ihd2" fmla="+- hd2 0 dr" />
+      <gd name="wt2" fmla="sin iwd2 istAng" />
+      <gd name="ht2" fmla="cos ihd2 istAng" />
+      <gd name="wt4" fmla="sin iwd2 stAng" />
+      <gd name="ht4" fmla="cos ihd2 stAng" />
+      <gd name="dx2" fmla="cat2 iwd2 ht2 wt2" />
+      <gd name="dy2" fmla="sat2 ihd2 ht2 wt2" />
+      <gd name="dx4" fmla="cat2 iwd2 ht4 wt4" />
+      <gd name="dy4" fmla="sat2 ihd2 ht4 wt4" />
+      <gd name="x2" fmla="+- hc dx2 0" />
+
+      <gd name="y2" fmla="+- vc dy2 0" />
+
+      <gd name="x4" fmla="+- hc dx4 0" />
+
+      <gd name="y4" fmla="+- vc dy4 0" />
+
+
+      <gd name="sw0" fmla="+- 21600000 0 stAng" />
+      <gd name="da1" fmla="+- swAng 0 sw0" />
+      <gd name="g1" fmla="max x1 x2" />
+      <gd name="g2" fmla="max x3 x4" />
+      <gd name="g3" fmla="max g1 g2" />
+      <gd name="ir" fmla="?: da1 r g3" />
+
+      <gd name="sw1" fmla="+- cd4 0 stAng" />
+      <gd name="sw2" fmla="+- 27000000 0 stAng" />
+      <gd name="sw3" fmla="?: sw1 sw1 sw2" />
+      <gd name="da2" fmla="+- swAng 0 sw3" />
+      <gd name="g5" fmla="max y1 y2" />
+      <gd name="g6" fmla="max y3 y4" />
+      <gd name="g7" fmla="max g5 g6" />
+      <gd name="ib" fmla="?: da2 b g7" />
+
+      <gd name="sw4" fmla="+- cd2 0 stAng" />
+      <gd name="sw5" fmla="+- 32400000 0 stAng" />
+      <gd name="sw6" fmla="?: sw4 sw4 sw5" />
+      <gd name="da3" fmla="+- swAng 0 sw6" />
+      <gd name="g9" fmla="min x1 x2" />
+      <gd name="g10" fmla="min x3 x4" />
+      <gd name="g11" fmla="min g9 g10" />
+      <gd name="il" fmla="?: da3 l g11" />
+
+      <gd name="sw7" fmla="+- 3cd4 0 stAng" />
+      <gd name="sw8" fmla="+- 37800000 0 stAng" />
+      <gd name="sw9" fmla="?: sw7 sw7 sw8" />
+      <gd name="da4" fmla="+- swAng 0 sw9" />
+      <gd name="g13" fmla="min y1 y2" />
+      <gd name="g14" fmla="min y3 y4" />
+      <gd name="g15" fmla="min g13 g14" />
+      <gd name="it" fmla="?: da4 t g15" />
+
+      <gd name="x5" fmla="+/ x1 x4 2" />
+
+      <gd name="y5" fmla="+/ y1 y4 2" />
+
+      <gd name="x6" fmla="+/ x3 x2 2" />
+
+      <gd name="y6" fmla="+/ y3 y2 2" />
+
+      <gd name="cang1" fmla="+- stAng 0 cd4" />
+      <gd name="cang2" fmla="+- istAng cd4 0" />
+      <gd name="cang3" fmla="+/ cang1 cang2 2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefAng="adj1" minAng="0" maxAng="21599999">
+        <pos x="x1" y="y1" />
+      </ahPolar>
+      <ahPolar gdRefR="adj3" minR="0" maxR="50000" gdRefAng="adj2" minAng="0" maxAng="21599999">
+        <pos x="x2" y="y2" />
+      </ahPolar>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cang1">
+        <pos x="x5" y="y5" />
+      </cxn>
+      <cxn ang="cang2">
+        <pos x="x6" y="y6" />
+      </cxn>
+      <cxn ang="cang3">
+        <pos x="hc" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="stAng" swAng="swAng" />
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <arcTo wR="iwd2" hR="ihd2" stAng="istAng" swAng="iswAng" />
+        <close />
+      </path>
+    </pathLst>
+
+  </blockArc>
+  <borderCallout1>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="adj1" fmla="val 18750" />
+
+      <gd name="adj2" fmla="val -8333" />
+
+      <gd name="adj3" fmla="val 112500" />
+
+      <gd name="adj4" fmla="val -38333" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h adj1 100000" />
+      <gd name="x1" fmla="*/ w adj2 100000" />
+      <gd name="y2" fmla="*/ h adj3 100000" />
+      <gd name="x2" fmla="*/ w adj4 100000" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj2" minX="-2147483647" maxX="2147483647" gdRefY="adj1" minY="-2147483647" maxY="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="-2147483647" maxX="2147483647" gdRefY="adj3" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </borderCallout1>
+  <borderCallout2>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="adj1" fmla="val 18750" />
+
+      <gd name="adj2" fmla="val -8333" />
+
+      <gd name="adj3" fmla="val 18750" />
+
+      <gd name="adj4" fmla="val -16667" />
+
+      <gd name="adj5" fmla="val 112500" />
+
+      <gd name="adj6" fmla="val -46667" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h adj1 100000" />
+      <gd name="x1" fmla="*/ w adj2 100000" />
+      <gd name="y2" fmla="*/ h adj3 100000" />
+      <gd name="x2" fmla="*/ w adj4 100000" />
+      <gd name="y3" fmla="*/ h adj5 100000" />
+      <gd name="x3" fmla="*/ w adj6 100000" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj2" minX="-2147483647" maxX="2147483647" gdRefY="adj1" minY="-2147483647" maxY="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="-2147483647" maxX="2147483647" gdRefY="adj3" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+      <ahXY gdRefX="adj6" minX="-2147483647" maxX="2147483647" gdRefY="adj5" minY="-2147483647" maxY="2147483647">
+        <pos x="x3" y="y3" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </borderCallout2>
+  <borderCallout3>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="adj1" fmla="val 18750" />
+
+      <gd name="adj2" fmla="val -8333" />
+
+      <gd name="adj3" fmla="val 18750" />
+
+      <gd name="adj4" fmla="val -16667" />
+
+      <gd name="adj5" fmla="val 100000" />
+
+      <gd name="adj6" fmla="val -16667" />
+
+      <gd name="adj7" fmla="val 112963" />
+
+      <gd name="adj8" fmla="val -8333" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h adj1 100000" />
+      <gd name="x1" fmla="*/ w adj2 100000" />
+      <gd name="y2" fmla="*/ h adj3 100000" />
+      <gd name="x2" fmla="*/ w adj4 100000" />
+      <gd name="y3" fmla="*/ h adj5 100000" />
+      <gd name="x3" fmla="*/ w adj6 100000" />
+      <gd name="y4" fmla="*/ h adj7 100000" />
+      <gd name="x4" fmla="*/ w adj8 100000" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj2" minX="-2147483647" maxX="2147483647" gdRefY="adj1" minY="-2147483647" maxY="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="-2147483647" maxX="2147483647" gdRefY="adj3" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+      <ahXY gdRefX="adj6" minX="-2147483647" maxX="2147483647" gdRefY="adj5" minY="-2147483647" maxY="2147483647">
+        <pos x="x3" y="y3" />
+      </ahXY>
+      <ahXY gdRefX="adj8" minX="-2147483647" maxX="2147483647" gdRefY="adj7" minY="-2147483647" maxY="2147483647">
+        <pos x="x4" y="y4" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y4" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </borderCallout3>
+  <bracePair>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 8333" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 25000" />
+      <gd name="x1" fmla="*/ ss a 100000" />
+      <gd name="x2" fmla="*/ ss a 50000" />
+      <gd name="x3" fmla="+- r 0 x2" />
+      <gd name="x4" fmla="+- r 0 x1" />
+
+      <gd name="y2" fmla="+- vc 0 x1" />
+      <gd name="y3" fmla="+- vc x1 0" />
+      <gd name="y4" fmla="+- b 0 x1" />
+      <gd name="it" fmla="*/ x1 29289 100000" />
+
+      <gd name="il" fmla="+- x1 it 0" />
+      <gd name="ir" fmla="+- r 0 il" />
+      <gd name="ib" fmla="+- b 0 it" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="25000">
+        <pos x="l" y="x1" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="il" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="x2" y="b" />
+        </moveTo>
+        <arcTo wR="x1" hR="x1" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="0" swAng="-5400000" />
+        <arcTo wR="x1" hR="x1" stAng="cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="x1" y="x1" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="x3" y="t" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="x4" y="y2" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="cd2" swAng="-5400000" />
+        <arcTo wR="x1" hR="x1" stAng="3cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="x4" y="y4" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="0" swAng="cd4" />
+        <close />
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="x2" y="b" />
+        </moveTo>
+        <arcTo wR="x1" hR="x1" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="0" swAng="-5400000" />
+        <arcTo wR="x1" hR="x1" stAng="cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="x1" y="x1" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="cd2" swAng="cd4" />
+        <moveTo>
+          <pt x="x3" y="t" />
+        </moveTo>
+        <arcTo wR="x1" hR="x1" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="x4" y="y2" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="cd2" swAng="-5400000" />
+        <arcTo wR="x1" hR="x1" stAng="3cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="x4" y="y4" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="0" swAng="cd4" />
+      </path>
+    </pathLst>
+
+  </bracePair>
+  <bracketPair>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 16667" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="x1" fmla="*/ ss a 100000" />
+      <gd name="x2" fmla="+- r 0 x1" />
+
+      <gd name="y2" fmla="+- b 0 x1" />
+      <gd name="il" fmla="*/ x1 29289 100000" />
+
+
+      <gd name="ir" fmla="+- r 0 il" />
+      <gd name="ib" fmla="+- b 0 il" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="50000">
+        <pos x="l" y="x1" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="il" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="x1" />
+        </moveTo>
+        <arcTo wR="x1" hR="x1" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="cd4" swAng="cd4" />
+        <close />
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="x1" y="b" />
+        </moveTo>
+        <arcTo wR="x1" hR="x1" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="l" y="x1" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="cd2" swAng="cd4" />
+        <moveTo>
+          <pt x="x2" y="t" />
+        </moveTo>
+        <arcTo wR="x1" hR="x1" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="0" swAng="cd4" />
+      </path>
+    </pathLst>
+
+  </bracketPair>
+  <callout1>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="adj1" fmla="val 18750" />
+
+      <gd name="adj2" fmla="val -8333" />
+
+      <gd name="adj3" fmla="val 112500" />
+
+      <gd name="adj4" fmla="val -38333" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h adj1 100000" />
+      <gd name="x1" fmla="*/ w adj2 100000" />
+      <gd name="y2" fmla="*/ h adj3 100000" />
+      <gd name="x2" fmla="*/ w adj4 100000" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj2" minX="-2147483647" maxX="2147483647" gdRefY="adj1" minY="-2147483647" maxY="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="-2147483647" maxX="2147483647" gdRefY="adj3" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </callout1>
+  <callout2>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="adj1" fmla="val 18750" />
+
+      <gd name="adj2" fmla="val -8333" />
+
+      <gd name="adj3" fmla="val 18750" />
+
+      <gd name="adj4" fmla="val -16667" />
+
+      <gd name="adj5" fmla="val 112500" />
+
+      <gd name="adj6" fmla="val -46667" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h adj1 100000" />
+      <gd name="x1" fmla="*/ w adj2 100000" />
+      <gd name="y2" fmla="*/ h adj3 100000" />
+      <gd name="x2" fmla="*/ w adj4 100000" />
+      <gd name="y3" fmla="*/ h adj5 100000" />
+      <gd name="x3" fmla="*/ w adj6 100000" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj2" minX="-2147483647" maxX="2147483647" gdRefY="adj1" minY="-2147483647" maxY="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="-2147483647" maxX="2147483647" gdRefY="adj3" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+      <ahXY gdRefX="adj6" minX="-2147483647" maxX="2147483647" gdRefY="adj5" minY="-2147483647" maxY="2147483647">
+        <pos x="x3" y="y3" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </callout2>
+  <callout3>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="adj1" fmla="val 18750" />
+
+      <gd name="adj2" fmla="val -8333" />
+
+      <gd name="adj3" fmla="val 18750" />
+
+      <gd name="adj4" fmla="val -16667" />
+
+      <gd name="adj5" fmla="val 100000" />
+
+      <gd name="adj6" fmla="val -16667" />
+
+      <gd name="adj7" fmla="val 112963" />
+
+      <gd name="adj8" fmla="val -8333" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h adj1 100000" />
+      <gd name="x1" fmla="*/ w adj2 100000" />
+      <gd name="y2" fmla="*/ h adj3 100000" />
+      <gd name="x2" fmla="*/ w adj4 100000" />
+      <gd name="y3" fmla="*/ h adj5 100000" />
+      <gd name="x3" fmla="*/ w adj6 100000" />
+      <gd name="y4" fmla="*/ h adj7 100000" />
+      <gd name="x4" fmla="*/ w adj8 100000" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj2" minX="-2147483647" maxX="2147483647" gdRefY="adj1" minY="-2147483647" maxY="2147483647">
+        <pos x="x1" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="-2147483647" maxX="2147483647" gdRefY="adj3" minY="-2147483647" maxY="2147483647">
+        <pos x="x2" y="y2" />
+      </ahXY>
+      <ahXY gdRefX="adj6" minX="-2147483647" maxX="2147483647" gdRefY="adj5" minY="-2147483647" maxY="2147483647">
+        <pos x="x3" y="y3" />
+      </ahXY>
+      <ahXY gdRefX="adj8" minX="-2147483647" maxX="2147483647" gdRefY="adj7" minY="-2147483647" maxY="2147483647">
+        <pos x="x4" y="y4" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y4" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </callout3>
+  <can>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 25000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj" fmla="*/ 50000 h ss" />
+      <gd name="a" fmla="pin 0 adj maxAdj" />
+      <gd name="y1" fmla="*/ ss a 200000" />
+      <gd name="y2" fmla="+- y1 y1 0" />
+      <gd name="y3" fmla="+- b 0 y1" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="maxAdj">
+        <pos x="hc" y="y2" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="y2" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="y2" r="r" b="y3" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="y1" />
+        </moveTo>
+        <arcTo wR="wd2" hR="y1" stAng="cd2" swAng="-10800000" />
+        <lnTo>
+          <pt x="r" y="y3" />
+        </lnTo>
+        <arcTo wR="wd2" hR="y1" stAng="0" swAng="cd2" />
+        <close />
+      </path>
+      <path stroke="false" fill="lighten" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="y1" />
+        </moveTo>
+        <arcTo wR="wd2" hR="y1" stAng="cd2" swAng="cd2" />
+        <arcTo wR="wd2" hR="y1" stAng="0" swAng="cd2" />
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+
+        <moveTo>
+          <pt x="r" y="y1" />
+        </moveTo>
+        <arcTo wR="wd2" hR="y1" stAng="0" swAng="cd2" />
+        <arcTo wR="wd2" hR="y1" stAng="cd2" swAng="cd2" />
+        <lnTo>
+          <pt x="r" y="y3" />
+        </lnTo>
+        <arcTo wR="wd2" hR="y1" stAng="0" swAng="cd2" />
+        <lnTo>
+          <pt x="l" y="y1" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </can>
+  <chartPlus>
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="10" h="10" fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="5" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="5" y="10" />
+        </lnTo>
+        <moveTo>
+          <pt x="0" y="5" />
+        </moveTo>
+        <lnTo>
+          <pt x="10" y="5" />
+        </lnTo>
+      </path>
+      <path w="10" h="10" stroke="false">
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="0" y="10" />
+        </lnTo>
+        <lnTo>
+          <pt x="10" y="10" />
+        </lnTo>
+        <lnTo>
+          <pt x="10" y="0" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </chartPlus>
+  <chartStar>
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="10" h="10" fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="10" y="10" />
+        </lnTo>
+        <moveTo>
+          <pt x="0" y="10" />
+        </moveTo>
+        <lnTo>
+          <pt x="10" y="0" />
+        </lnTo>
+        <moveTo>
+          <pt x="5" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="5" y="10" />
+        </lnTo>
+      </path>
+      <path w="10" h="10" stroke="false">
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="0" y="10" />
+        </lnTo>
+        <lnTo>
+          <pt x="10" y="10" />
+        </lnTo>
+        <lnTo>
+          <pt x="10" y="0" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </chartStar>
+  <chartX>
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="10" h="10" fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="10" y="10" />
+        </lnTo>
+        <moveTo>
+          <pt x="0" y="10" />
+        </moveTo>
+        <lnTo>
+          <pt x="10" y="0" />
+        </lnTo>
+      </path>
+      <path w="10" h="10" stroke="false">
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="0" y="10" />
+        </lnTo>
+        <lnTo>
+          <pt x="10" y="10" />
+        </lnTo>
+        <lnTo>
+          <pt x="10" y="0" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </chartX>
+  <chevron>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj" fmla="*/ 100000 w ss" />
+      <gd name="a" fmla="pin 0 adj maxAdj" />
+      <gd name="x1" fmla="*/ ss a 100000" />
+      <gd name="x2" fmla="+- r 0 x1" />
+      <gd name="x3" fmla="*/ x2 1 2" />
+      <gd name="dx" fmla="+- x2 0 x1" />
+      <gd name="il" fmla="?: dx x1 l" />
+      <gd name="ir" fmla="?: dx x2 r" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="maxAdj">
+        <pos x="x2" y="t" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x3" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+    <rect l="il" t="t" r="ir" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="vc" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </chevron>
+  <chord>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 2700000" />
+
+      <gd name="adj2" fmla="val 16200000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="stAng" fmla="pin 0 adj1 21599999" />
+      <gd name="enAng" fmla="pin 0 adj2 21599999" />
+      <gd name="sw1" fmla="+- enAng 0 stAng" />
+
+      <gd name="sw2" fmla="+- sw1 21600000 0" />
+
+      <gd name="swAng" fmla="?: sw1 sw1 sw2" />
+
+      <gd name="wt1" fmla="sin wd2 stAng" />
+      <gd name="ht1" fmla="cos hd2 stAng" />
+      <gd name="dx1" fmla="cat2 wd2 ht1 wt1" />
+      <gd name="dy1" fmla="sat2 hd2 ht1 wt1" />
+      <gd name="wt2" fmla="sin wd2 enAng" />
+      <gd name="ht2" fmla="cos hd2 enAng" />
+      <gd name="dx2" fmla="cat2 wd2 ht2 wt2" />
+      <gd name="dy2" fmla="sat2 hd2 ht2 wt2" />
+      <gd name="x1" fmla="+- hc dx1 0" />
+
+      <gd name="y1" fmla="+- vc dy1 0" />
+
+      <gd name="x2" fmla="+- hc dx2 0" />
+
+      <gd name="y2" fmla="+- vc dy2 0" />
+
+      <gd name="x3" fmla="+/ x1 x2 2" />
+      <gd name="y3" fmla="+/ y1 y2 2" />
+      <gd name="midAng0" fmla="*/ swAng 1 2" />
+      <gd name="midAng" fmla="+- stAng midAng0 cd2" />
+      <gd name="idx" fmla="cos wd2 2700000" />
+      <gd name="idy" fmla="sin hd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefAng="adj1" minAng="0" maxAng="21599999">
+        <pos x="x1" y="y1" />
+      </ahPolar>
+      <ahPolar gdRefAng="adj2" minAng="0" maxAng="21599999">
+        <pos x="x2" y="y2" />
+      </ahPolar>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="stAng">
+        <pos x="x1" y="y1" />
+      </cxn>
+      <cxn ang="enAng">
+        <pos x="x2" y="y2" />
+      </cxn>
+      <cxn ang="midAng">
+        <pos x="x3" y="y3" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="stAng" swAng="swAng" />
+        <close />
+      </path>
+    </pathLst>
+
+  </chord>
+  <circularArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 12500" />
+
+      <gd name="adj2" fmla="val 1142319" />
+
+      <gd name="adj3" fmla="val 20457681" />
+
+      <gd name="adj4" fmla="val 10800000" />
+
+      <gd name="adj5" fmla="val 12500" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a5" fmla="pin 0 adj5 25000" />
+
+      <gd name="maxAdj1" fmla="*/ a5 2 1" />
+
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="enAng" fmla="pin 1 adj3 21599999" />
+      <gd name="stAng" fmla="pin 0 adj4 21599999" />
+
+      <gd name="th" fmla="*/ ss a1 100000" />
+
+      <gd name="thh" fmla="*/ ss a5 100000" />
+
+      <gd name="th2" fmla="*/ th 1 2" />
+
+
+      <gd name="rw1" fmla="+- wd2 th2 thh" />
+
+      <gd name="rh1" fmla="+- hd2 th2 thh" />
+
+      <gd name="rw2" fmla="+- rw1 0 th" />
+
+      <gd name="rh2" fmla="+- rh1 0 th" />
+
+      <gd name="rw3" fmla="+- rw2 th2 0" />
+
+      <gd name="rh3" fmla="+- rh2 th2 0" />
+
+
+      <gd name="wtH" fmla="sin rw3 enAng" />
+      <gd name="htH" fmla="cos rh3 enAng" />
+      <gd name="dxH" fmla="cat2 rw3 htH wtH" />
+      <gd name="dyH" fmla="sat2 rh3 htH wtH" />
+      <gd name="xH" fmla="+- hc dxH 0" />
+
+      <gd name="yH" fmla="+- vc dyH 0" />
+
+
+      <gd name="rI" fmla="min rw2 rh2" />
+
+      <gd name="u1" fmla="*/ dxH dxH 1" />
+      <gd name="u2" fmla="*/ dyH dyH 1" />
+      <gd name="u3" fmla="*/ rI rI 1" />
+      <gd name="u4" fmla="+- u1 0 u3" />
+      <gd name="u5" fmla="+- u2 0 u3" />
+      <gd name="u6" fmla="*/ u4 u5 u1" />
+      <gd name="u7" fmla="*/ u6 1 u2" />
+      <gd name="u8" fmla="+- 1 0 u7" />
+      <gd name="u9" fmla="sqrt u8" />
+      <gd name="u10" fmla="*/ u4 1 dxH" />
+      <gd name="u11" fmla="*/ u10 1 dyH" />
+      <gd name="u12" fmla="+/ 1 u9 u11" />
+      <gd name="u13" fmla="at2 1 u12" />
+      <gd name="u14" fmla="+- u13 21600000 0" />
+      <gd name="u15" fmla="?: u13 u13 u14" />
+      <gd name="u16" fmla="+- u15 0 enAng" />
+
+      <gd name="u17" fmla="+- u16 21600000 0" />
+      <gd name="u18" fmla="?: u16 u16 u17" />
+      <gd name="u19" fmla="+- u18 0 cd2" />
+      <gd name="u20" fmla="+- u18 0 21600000" />
+      <gd name="u21" fmla="?: u19 u20 u18" />
+      <gd name="maxAng" fmla="abs u21" />
+      <gd name="aAng" fmla="pin 0 adj2 maxAng" />
+
+      <gd name="ptAng" fmla="+- enAng aAng 0" />
+
+
+      <gd name="wtA" fmla="sin rw3 ptAng" />
+      <gd name="htA" fmla="cos rh3 ptAng" />
+      <gd name="dxA" fmla="cat2 rw3 htA wtA" />
+      <gd name="dyA" fmla="sat2 rh3 htA wtA" />
+      <gd name="xA" fmla="+- hc dxA 0" />
+
+      <gd name="yA" fmla="+- vc dyA 0" />
+
+
+      <gd name="wtE" fmla="sin rw1 stAng" />
+      <gd name="htE" fmla="cos rh1 stAng" />
+      <gd name="dxE" fmla="cat2 rw1 htE wtE" />
+      <gd name="dyE" fmla="sat2 rh1 htE wtE" />
+      <gd name="xE" fmla="+- hc dxE 0" />
+
+      <gd name="yE" fmla="+- vc dyE 0" />
+
+
+      <gd name="dxG" fmla="cos thh ptAng" />
+      <gd name="dyG" fmla="sin thh ptAng" />
+      <gd name="xG" fmla="+- xH dxG 0" />
+
+      <gd name="yG" fmla="+- yH dyG 0" />
+
+
+      <gd name="dxB" fmla="cos thh ptAng" />
+      <gd name="dyB" fmla="sin thh ptAng" />
+      <gd name="xB" fmla="+- xH 0 dxB 0" />
+
+      <gd name="yB" fmla="+- yH 0 dyB 0" />
+
+
+      <gd name="sx1" fmla="+- xB 0 hc" />
+
+      <gd name="sy1" fmla="+- yB 0 vc" />
+
+      <gd name="sx2" fmla="+- xG 0 hc" />
+
+      <gd name="sy2" fmla="+- yG 0 vc" />
+
+
+      <gd name="rO" fmla="min rw1 rh1" />
+
+      <gd name="x1O" fmla="*/ sx1 rO rw1" />
+
+      <gd name="y1O" fmla="*/ sy1 rO rh1" />
+
+      <gd name="x2O" fmla="*/ sx2 rO rw1" />
+
+      <gd name="y2O" fmla="*/ sy2 rO rh1" />
+
+
+      <gd name="dxO" fmla="+- x2O 0 x1O" />
+      <gd name="dyO" fmla="+- y2O 0 y1O" />
+      <gd name="dO" fmla="mod dxO dyO 0" />
+
+      <gd name="q1" fmla="*/ x1O y2O 1" />
+      <gd name="q2" fmla="*/ x2O y1O 1" />
+      <gd name="DO" fmla="+- q1 0 q2" />
+
+
+      <gd name="q3" fmla="*/ rO rO 1" />
+
+      <gd name="q4" fmla="*/ dO dO 1" />
+
+      <gd name="q5" fmla="*/ q3 q4 1" />
+
+      <gd name="q6" fmla="*/ DO DO 1" />
+
+      <gd name="q7" fmla="+- q5 0 q6" />
+
+      <gd name="q8" fmla="max q7 0" />
+
+      <gd name="sdelO" fmla="sqrt q8" />
+
+      <gd name="ndyO" fmla="*/ dyO -1 1" />
+      <gd name="sdyO" fmla="?: ndyO -1 1" />
+
+      <gd name="q9" fmla="*/ sdyO dxO 1" />
+
+      <gd name="q10" fmla="*/ q9 sdelO 1" />
+
+      <gd name="q11" fmla="*/ DO dyO 1" />
+
+      <gd name="dxF1" fmla="+/ q11 q10 q4" />
+
+      <gd name="q12" fmla="+- q11 0 q10" />
+      <gd name="dxF2" fmla="*/ q12 1 q4" />
+
+
+      <gd name="adyO" fmla="abs dyO" />
+      <gd name="q13" fmla="*/ adyO sdelO 1" />
+
+      <gd name="q14" fmla="*/ DO dxO -1" />
+
+      <gd name="dyF1" fmla="+/ q14 q13 q4" />
+
+      <gd name="q15" fmla="+- q14 0 q13" />
+      <gd name="dyF2" fmla="*/ q15 1 q4" />
+
+
+
+      <gd name="q16" fmla="+- x2O 0 dxF1" />
+      <gd name="q17" fmla="+- x2O 0 dxF2" />
+      <gd name="q18" fmla="+- y2O 0 dyF1" />
+      <gd name="q19" fmla="+- y2O 0 dyF2" />
+      <gd name="q20" fmla="mod q16 q18 0" />
+
+      <gd name="q21" fmla="mod q17 q19 0" />
+
+      <gd name="q22" fmla="+- q21 0 q20" />
+      <gd name="dxF" fmla="?: q22 dxF1 dxF2" />
+
+      <gd name="dyF" fmla="?: q22 dyF1 dyF2" />
+
+      <gd name="sdxF" fmla="*/ dxF rw1 rO" />
+
+      <gd name="sdyF" fmla="*/ dyF rh1 rO" />
+
+      <gd name="xF" fmla="+- hc sdxF 0" />
+
+      <gd name="yF" fmla="+- vc sdyF 0" />
+
+
+
+
+      <gd name="x1I" fmla="*/ sx1 rI rw2" />
+
+      <gd name="y1I" fmla="*/ sy1 rI rh2" />
+
+      <gd name="x2I" fmla="*/ sx2 rI rw2" />
+
+      <gd name="y2I" fmla="*/ sy2 rI rh2" />
+
+
+      <gd name="dxI" fmla="+- x2I 0 x1I" />
+      <gd name="dyI" fmla="+- y2I 0 y1I" />
+      <gd name="dI" fmla="mod dxI dyI 0" />
+      <gd name="v1" fmla="*/ x1I y2I 1" />
+      <gd name="v2" fmla="*/ x2I y1I 1" />
+      <gd name="DI" fmla="+- v1 0 v2" />
+
+      <gd name="v3" fmla="*/ rI rI 1" />
+      <gd name="v4" fmla="*/ dI dI 1" />
+      <gd name="v5" fmla="*/ v3 v4 1" />
+      <gd name="v6" fmla="*/ DI DI 1" />
+      <gd name="v7" fmla="+- v5 0 v6" />
+      <gd name="v8" fmla="max v7 0" />
+      <gd name="sdelI" fmla="sqrt v8" />
+      <gd name="v9" fmla="*/ sdyO dxI 1" />
+      <gd name="v10" fmla="*/ v9 sdelI 1" />
+      <gd name="v11" fmla="*/ DI dyI 1" />
+      <gd name="dxC1" fmla="+/ v11 v10 v4" />
+      <gd name="v12" fmla="+- v11 0 v10" />
+      <gd name="dxC2" fmla="*/ v12 1 v4" />
+
+      <gd name="adyI" fmla="abs dyI" />
+      <gd name="v13" fmla="*/ adyI sdelI 1" />
+      <gd name="v14" fmla="*/ DI dxI -1" />
+      <gd name="dyC1" fmla="+/ v14 v13 v4" />
+      <gd name="v15" fmla="+- v14 0 v13" />
+      <gd name="dyC2" fmla="*/ v15 1 v4" />
+
+      <gd name="v16" fmla="+- x1I 0 dxC1" />
+      <gd name="v17" fmla="+- x1I 0 dxC2" />
+      <gd name="v18" fmla="+- y1I 0 dyC1" />
+      <gd name="v19" fmla="+- y1I 0 dyC2" />
+      <gd name="v20" fmla="mod v16 v18 0" />
+      <gd name="v21" fmla="mod v17 v19 0" />
+      <gd name="v22" fmla="+- v21 0 v20" />
+      <gd name="dxC" fmla="?: v22 dxC1 dxC2" />
+      <gd name="dyC" fmla="?: v22 dyC1 dyC2" />
+      <gd name="sdxC" fmla="*/ dxC rw2 rI" />
+      <gd name="sdyC" fmla="*/ dyC rh2 rI" />
+      <gd name="xC" fmla="+- hc sdxC 0" />
+
+      <gd name="yC" fmla="+- vc sdyC 0" />
+
+
+      <gd name="ist0" fmla="at2 sdxC sdyC" />
+      <gd name="ist1" fmla="+- ist0 21600000 0" />
+      <gd name="istAng" fmla="?: ist0 ist0 ist1" />
+      <gd name="isw1" fmla="+- stAng 0 istAng" />
+      <gd name="isw2" fmla="+- isw1 0 21600000" />
+      <gd name="iswAng" fmla="?: isw1 isw2 isw1" />
+
+
+      <gd name="p1" fmla="+- xF 0 xC" />
+      <gd name="p2" fmla="+- yF 0 yC" />
+      <gd name="p3" fmla="mod p1 p2 0" />
+      <gd name="p4" fmla="*/ p3 1 2" />
+      <gd name="p5" fmla="+- p4 0 thh" />
+      <gd name="xGp" fmla="?: p5 xF xG" />
+      <gd name="yGp" fmla="?: p5 yF yG" />
+      <gd name="xBp" fmla="?: p5 xC xB" />
+      <gd name="yBp" fmla="?: p5 yC yB" />
+
+      <gd name="en0" fmla="at2 sdxF sdyF" />
+      <gd name="en1" fmla="+- en0 21600000 0" />
+      <gd name="en2" fmla="?: en0 en0 en1" />
+      <gd name="sw0" fmla="+- en2 0 stAng" />
+      <gd name="sw1" fmla="+- sw0 21600000 0" />
+      <gd name="swAng" fmla="?: sw0 sw0 sw1" />
+
+      <gd name="wtI" fmla="sin rw3 stAng" />
+      <gd name="htI" fmla="cos rh3 stAng" />
+      <gd name="dxI" fmla="cat2 rw3 htI wtI" />
+      <gd name="dyI" fmla="sat2 rh3 htI wtI" />
+      <gd name="xI" fmla="+- hc dxI 0" />
+
+      <gd name="yI" fmla="+- vc dyI 0" />
+
+
+      <gd name="aI" fmla="+- stAng 0 cd4" />
+      <gd name="aA" fmla="+- ptAng cd4 0" />
+      <gd name="aB" fmla="+- ptAng cd2 0" />
+
+      <gd name="idx" fmla="cos rw1 2700000" />
+      <gd name="idy" fmla="sin rh1 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefAng="adj2" minAng="0" maxAng="maxAng">
+        <pos x="xA" y="yA" />
+      </ahPolar>
+      <ahPolar gdRefAng="adj4" minAng="0" maxAng="21599999">
+        <pos x="xE" y="yE" />
+      </ahPolar>
+      <ahPolar gdRefR="adj1" minR="0" maxR="maxAdj1" gdRefAng="adj3" minAng="0" maxAng="21599999">
+        <pos x="xF" y="yF" />
+      </ahPolar>
+      <ahPolar gdRefR="adj5" minR="0" maxR="25000">
+        <pos x="xB" y="yB" />
+      </ahPolar>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="aI">
+        <pos x="xI" y="yI" />
+      </cxn>
+      <cxn ang="ptAng">
+        <pos x="xGp" y="yGp" />
+      </cxn>
+      <cxn ang="aA">
+        <pos x="xA" y="yA" />
+      </cxn>
+      <cxn ang="aB">
+        <pos x="xBp" y="yBp" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="xE" y="yE" />
+        </moveTo>
+        <arcTo wR="rw1" hR="rh1" stAng="stAng" swAng="swAng" />
+        <lnTo>
+          <pt x="xGp" y="yGp" />
+        </lnTo>
+        <lnTo>
+          <pt x="xA" y="yA" />
+        </lnTo>
+        <lnTo>
+          <pt x="xBp" y="yBp" />
+        </lnTo>
+        <lnTo>
+          <pt x="xC" y="yC" />
+        </lnTo>
+        <arcTo wR="rw2" hR="rh2" stAng="istAng" swAng="iswAng" />
+        <close />
+      </path>
+    </pathLst>
+
+  </circularArrow>
+  <cloud>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="il" fmla="*/ w 2977 21600" />
+      <gd name="it" fmla="*/ h 3262 21600" />
+      <gd name="ir" fmla="*/ w 17087 21600" />
+      <gd name="ib" fmla="*/ h 17337 21600" />
+      <gd name="g27" fmla="*/ w 67 21600" />
+      <gd name="g28" fmla="*/ h 21577 21600" />
+      <gd name="g29" fmla="*/ w 21582 21600" />
+      <gd name="g30" fmla="*/ h 1235 21600" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="g29" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="g28" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="g27" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="g30" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="43200" h="43200">
+        <moveTo>
+          <pt x="3900" y="14370" />
+        </moveTo>
+        <arcTo wR="6753" hR="9190" stAng="-11429249" swAng="7426832" />
+        <arcTo wR="5333" hR="7267" stAng="-8646143" swAng="5396714" />
+        <arcTo wR="4365" hR="5945" stAng="-8748475" swAng="5983381" />
+        <arcTo wR="4857" hR="6595" stAng="-7859164" swAng="7034504" />
+        <arcTo wR="5333" hR="7273" stAng="-4722533" swAng="6541615" />
+        <arcTo wR="6775" hR="9220" stAng="-2776035" swAng="7816140" />
+        <arcTo wR="5785" hR="7867" stAng="37501" swAng="6842000" />
+        <arcTo wR="6752" hR="9215" stAng="1347096" swAng="6910353" />
+        <arcTo wR="7720" hR="10543" stAng="3974558" swAng="4542661" />
+        <arcTo wR="4360" hR="5918" stAng="-16496525" swAng="8804134" />
+        <arcTo wR="4345" hR="5945" stAng="-14809710" swAng="9151131" />
+        <close />
+      </path>
+      <path w="43200" h="43200" fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="4693" y="26177" />
+        </moveTo>
+        <arcTo wR="4345" hR="5945" stAng="5204520" swAng="1585770" />
+        <moveTo>
+          <pt x="6928" y="34899" />
+        </moveTo>
+        <arcTo wR="4360" hR="5918" stAng="4416628" swAng="686848" />
+        <moveTo>
+          <pt x="16478" y="39090" />
+        </moveTo>
+        <arcTo wR="6752" hR="9215" stAng="8257449" swAng="844866" />
+        <moveTo>
+          <pt x="28827" y="34751" />
+        </moveTo>
+        <arcTo wR="6752" hR="9215" stAng="387196" swAng="959901" />
+        <moveTo>
+          <pt x="34129" y="22954" />
+        </moveTo>
+        <arcTo wR="5785" hR="7867" stAng="-4217541" swAng="4255042" />
+        <moveTo>
+          <pt x="41798" y="15354" />
+        </moveTo>
+        <arcTo wR="5333" hR="7273" stAng="1819082" swAng="1665090" />
+        <moveTo>
+          <pt x="38324" y="5426" />
+        </moveTo>
+        <arcTo wR="4857" hR="6595" stAng="-824660" swAng="891534" />
+        <moveTo>
+          <pt x="29078" y="3952" />
+        </moveTo>
+        <arcTo wR="4857" hR="6595" stAng="-8950887" swAng="1091722" />
+        <moveTo>
+          <pt x="22141" y="4720" />
+        </moveTo>
+        <arcTo wR="4365" hR="5945" stAng="-9809656" swAng="1061181" />
+        <moveTo>
+          <pt x="14000" y="5192" />
+        </moveTo>
+        <arcTo wR="6753" hR="9190" stAng="-4002417" swAng="739161" />
+        <moveTo>
+          <pt x="4127" y="15789" />
+        </moveTo>
+        <arcTo wR="6753" hR="9190" stAng="9459261" swAng="711490" />
+      </path>
+    </pathLst>
+
+  </cloud>
+  <cloudCallout>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val -20833" />
+
+      <gd name="adj2" fmla="val 62500" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dxPos" fmla="*/ w adj1 100000" />
+      <gd name="dyPos" fmla="*/ h adj2 100000" />
+      <gd name="xPos" fmla="+- hc dxPos 0" />
+      <gd name="yPos" fmla="+- vc dyPos 0" />
+      <gd name="ht" fmla="cat2 hd2 dxPos dyPos" />
+      <gd name="wt" fmla="sat2 wd2 dxPos dyPos" />
+      <gd name="g2" fmla="cat2 wd2 ht wt" />
+      <gd name="g3" fmla="sat2 hd2 ht wt" />
+      <gd name="g4" fmla="+- hc g2 0" />
+
+      <gd name="g5" fmla="+- vc g3 0" />
+
+      <gd name="g6" fmla="+- g4 0 xPos" />
+
+      <gd name="g7" fmla="+- g5 0 yPos" />
+
+      <gd name="g8" fmla="mod g6 g7 0" />
+
+      <gd name="g9" fmla="*/ ss 6600 21600" />
+
+      <gd name="g10" fmla="+- g8 0 g9" />
+
+      <gd name="g11" fmla="*/ g10 1 3" />
+
+      <gd name="g12" fmla="*/ ss 1800 21600" />
+
+      <gd name="g13" fmla="+- g11 g12 0" />
+
+      <gd name="g14" fmla="*/ g13 g6 g8" />
+
+      <gd name="g15" fmla="*/ g13 g7 g8" />
+
+      <gd name="g16" fmla="+- g14 xPos 0" />
+
+      <gd name="g17" fmla="+- g15 yPos 0" />
+
+      <gd name="g18" fmla="*/ ss 4800 21600" />
+
+      <gd name="g19" fmla="*/ g11 2 1" />
+
+      <gd name="g20" fmla="+- g18 g19 0" />
+
+      <gd name="g21" fmla="*/ g20 g6 g8" />
+      <gd name="g22" fmla="*/ g20 g7 g8" />
+      <gd name="g23" fmla="+- g21 xPos 0" />
+      <gd name="g24" fmla="+- g22 yPos 0" />
+      <gd name="g25" fmla="*/ ss 1200 21600" />
+      <gd name="g26" fmla="*/ ss 600 21600" />
+
+      <gd name="x23" fmla="+- xPos g26 0" />
+      <gd name="x24" fmla="+- g16 g25 0" />
+      <gd name="x25" fmla="+- g23 g12 0" />
+      <gd name="il" fmla="*/ w 2977 21600" />
+      <gd name="it" fmla="*/ h 3262 21600" />
+      <gd name="ir" fmla="*/ w 17087 21600" />
+      <gd name="ib" fmla="*/ h 17337 21600" />
+
+      <gd name="g27" fmla="*/ w 67 21600" />
+      <gd name="g28" fmla="*/ h 21577 21600" />
+      <gd name="g29" fmla="*/ w 21582 21600" />
+      <gd name="g30" fmla="*/ h 1235 21600" />
+      <gd name="pang" fmla="at2 dxPos dyPos" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="-2147483647" maxX="2147483647" gdRefY="adj2" minY="-2147483647" maxY="2147483647">
+        <pos x="xPos" y="yPos" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd2">
+        <pos x="g27" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="g28" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="g29" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="g30" />
+      </cxn>
+      <cxn ang="pang">
+        <pos x="xPos" y="yPos" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="43200" h="43200">
+        <moveTo>
+          <pt x="3900" y="14370" />
+        </moveTo>
+        <arcTo wR="6753" hR="9190" stAng="-11429249" swAng="7426832" />
+        <arcTo wR="5333" hR="7267" stAng="-8646143" swAng="5396714" />
+        <arcTo wR="4365" hR="5945" stAng="-8748475" swAng="5983381" />
+        <arcTo wR="4857" hR="6595" stAng="-7859164" swAng="7034504" />
+        <arcTo wR="5333" hR="7273" stAng="-4722533" swAng="6541615" />
+        <arcTo wR="6775" hR="9220" stAng="-2776035" swAng="7816140" />
+        <arcTo wR="5785" hR="7867" stAng="37501" swAng="6842000" />
+        <arcTo wR="6752" hR="9215" stAng="1347096" swAng="6910353" />
+        <arcTo wR="7720" hR="10543" stAng="3974558" swAng="4542661" />
+        <arcTo wR="4360" hR="5918" stAng="-16496525" swAng="8804134" />
+        <arcTo wR="4345" hR="5945" stAng="-14809710" swAng="9151131" />
+        <close />
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x23" y="yPos" />
+        </moveTo>
+        <arcTo wR="g26" hR="g26" stAng="0" swAng="21600000" />
+        <close />
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x24" y="g17" />
+        </moveTo>
+        <arcTo wR="g25" hR="g25" stAng="0" swAng="21600000" />
+        <close />
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x25" y="g24" />
+        </moveTo>
+        <arcTo wR="g12" hR="g12" stAng="0" swAng="21600000" />
+        <close />
+      </path>
+      <path w="43200" h="43200" fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="4693" y="26177" />
+        </moveTo>
+        <arcTo wR="4345" hR="5945" stAng="5204520" swAng="1585770" />
+        <moveTo>
+          <pt x="6928" y="34899" />
+        </moveTo>
+        <arcTo wR="4360" hR="5918" stAng="4416628" swAng="686848" />
+        <moveTo>
+          <pt x="16478" y="39090" />
+        </moveTo>
+        <arcTo wR="6752" hR="9215" stAng="8257449" swAng="844866" />
+        <moveTo>
+          <pt x="28827" y="34751" />
+        </moveTo>
+        <arcTo wR="6752" hR="9215" stAng="387196" swAng="959901" />
+        <moveTo>
+          <pt x="34129" y="22954" />
+        </moveTo>
+        <arcTo wR="5785" hR="7867" stAng="-4217541" swAng="4255042" />
+        <moveTo>
+          <pt x="41798" y="15354" />
+        </moveTo>
+        <arcTo wR="5333" hR="7273" stAng="1819082" swAng="1665090" />
+        <moveTo>
+          <pt x="38324" y="5426" />
+        </moveTo>
+        <arcTo wR="4857" hR="6595" stAng="-824660" swAng="891534" />
+        <moveTo>
+          <pt x="29078" y="3952" />
+        </moveTo>
+        <arcTo wR="4857" hR="6595" stAng="-8950887" swAng="1091722" />
+        <moveTo>
+          <pt x="22141" y="4720" />
+        </moveTo>
+        <arcTo wR="4365" hR="5945" stAng="-9809656" swAng="1061181" />
+        <moveTo>
+          <pt x="14000" y="5192" />
+        </moveTo>
+        <arcTo wR="6753" hR="9190" stAng="-4002417" swAng="739161" />
+        <moveTo>
+          <pt x="4127" y="15789" />
+        </moveTo>
+        <arcTo wR="6753" hR="9190" stAng="9459261" swAng="711490" />
+      </path>
+    </pathLst>
+
+  </cloudCallout>
+  <corner>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj1" fmla="*/ 100000 h ss" />
+      <gd name="maxAdj2" fmla="*/ 100000 w ss" />
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="x1" fmla="*/ ss a2 100000" />
+      <gd name="dy1" fmla="*/ ss a1 100000" />
+      <gd name="y1" fmla="+- b 0 dy1" />
+      <gd name="cx1" fmla="*/ x1 1 2" />
+      <gd name="cy1" fmla="+/ y1 b 2" />
+      <gd name="d" fmla="+- w 0 h" />
+      <gd name="it" fmla="?: d y1 t" />
+      <gd name="ir" fmla="?: d r x1" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="maxAdj1">
+        <pos x="l" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="cy1" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="cx1" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="it" r="ir" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </corner>
+  <cornerTabs>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="md" fmla="mod w h 0" />
+      <gd name="dx" fmla="*/ 1 md 20" />
+
+      <gd name="y1" fmla="+- 0 b dx" />
+
+      <gd name="x1" fmla="+- 0 r dx" />
+
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd2">
+        <pos x="l" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="dx" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y1" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="b" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="dx" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x1" y="t" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="dx" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x1" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="t" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="dx" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y1" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="b" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="dx" t="dx" r="x1" b="y1" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="dx" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="dx" />
+        </lnTo>
+        <close />
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="dx" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x1" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="dx" />
+        </lnTo>
+        <close />
+      </path>
+      <path>
+        <moveTo>
+          <pt x="r" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </cornerTabs>
+  <cube>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 25000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 100000" />
+      <gd name="y1" fmla="*/ ss a 100000" />
+      <gd name="y4" fmla="+- b 0 y1" />
+      <gd name="y2" fmla="*/ y4 1 2" />
+      <gd name="y3" fmla="+/ y1 b 2" />
+      <gd name="x4" fmla="+- r 0 y1" />
+      <gd name="x2" fmla="*/ x4 1 2" />
+      <gd name="x3" fmla="+/ y1 r 2" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="100000">
+        <pos x="l" y="y1" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x3" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x2" y="y1" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x2" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x4" y="y3" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y2" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="y1" r="x4" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darkenLess" extrusionOk="false">
+        <moveTo>
+          <pt x="x4" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="lightenLess" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="y1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="y1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="l" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <moveTo>
+          <pt x="x4" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x4" y="b" />
+        </lnTo>
+      </path>
+    </pathLst>
+  </cube>
+  <curvedConnector2>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <cubicBezTo>
+          <pt x="wd2" y="t" />
+          <pt x="r" y="hd2" />
+          <pt x="r" y="b" />
+        </cubicBezTo>
+      </path>
+    </pathLst>
+  </curvedConnector2>
+  <curvedConnector3>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x2" fmla="*/ w adj1 100000" />
+      <gd name="x1" fmla="+/ l x2 2" />
+      <gd name="x3" fmla="+/ r x2 2" />
+      <gd name="y3" fmla="*/ h 3 4" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="-2147483647" maxX="2147483647">
+        <pos x="x2" y="vc" />
+      </ahXY>
+    </ahLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x1" y="t" />
+          <pt x="x2" y="hd4" />
+          <pt x="x2" y="vc" />
+        </cubicBezTo>
+        <cubicBezTo>
+          <pt x="x2" y="y3" />
+          <pt x="x3" y="b" />
+          <pt x="r" y="b" />
+        </cubicBezTo>
+      </path>
+    </pathLst>
+  </curvedConnector3>
+  <curvedConnector4>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+      <gd name="adj2" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x2" fmla="*/ w adj1 100000" />
+      <gd name="x1" fmla="+/ l x2 2" />
+      <gd name="x3" fmla="+/ r x2 2" />
+      <gd name="x4" fmla="+/ x2 x3 2" />
+      <gd name="x5" fmla="+/ x3 r 2" />
+      <gd name="y4" fmla="*/ h adj2 100000" />
+      <gd name="y1" fmla="+/ t y4 2" />
+      <gd name="y2" fmla="+/ t y1 2" />
+      <gd name="y3" fmla="+/ y1 y4 2" />
+      <gd name="y5" fmla="+/ b y4 2" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="-2147483647" maxX="2147483647">
+        <pos x="x2" y="y1" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="-2147483647" maxY="2147483647">
+        <pos x="x3" y="y4" />
+      </ahXY>
+    </ahLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x1" y="t" />
+          <pt x="x2" y="y2" />
+          <pt x="x2" y="y1" />
+        </cubicBezTo>
+        <cubicBezTo>
+          <pt x="x2" y="y3" />
+          <pt x="x4" y="y4" />
+          <pt x="x3" y="y4" />
+        </cubicBezTo>
+        <cubicBezTo>
+          <pt x="x5" y="y4" />
+          <pt x="r" y="y5" />
+          <pt x="r" y="b" />
+        </cubicBezTo>
+      </path>
+    </pathLst>
+  </curvedConnector4>
+  <curvedConnector5>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+      <gd name="adj3" fmla="val 50000" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x3" fmla="*/ w adj1 100000" />
+      <gd name="x6" fmla="*/ w adj3 100000" />
+      <gd name="x1" fmla="+/ x3 x6 2" />
+      <gd name="x2" fmla="+/ l x3 2" />
+      <gd name="x4" fmla="+/ x3 x1 2" />
+      <gd name="x5" fmla="+/ x6 x1 2" />
+      <gd name="x7" fmla="+/ x6 r 2" />
+      <gd name="y4" fmla="*/ h adj2 100000" />
+      <gd name="y1" fmla="+/ t y4 2" />
+      <gd name="y2" fmla="+/ t y1 2" />
+      <gd name="y3" fmla="+/ y1 y4 2" />
+      <gd name="y5" fmla="+/ b y4 2" />
+      <gd name="y6" fmla="+/ y5 y4 2" />
+      <gd name="y7" fmla="+/ y5 b 2" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="-2147483647" maxX="2147483647">
+        <pos x="x3" y="y1" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="-2147483647" maxY="2147483647">
+        <pos x="x1" y="y4" />
+      </ahXY>
+      <ahXY gdRefX="adj3" minX="-2147483647" maxX="2147483647">
+        <pos x="x6" y="y5" />
+      </ahXY>
+    </ahLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x2" y="t" />
+          <pt x="x3" y="y2" />
+          <pt x="x3" y="y1" />
+        </cubicBezTo>
+        <cubicBezTo>
+          <pt x="x3" y="y3" />
+          <pt x="x4" y="y4" />
+          <pt x="x1" y="y4" />
+        </cubicBezTo>
+        <cubicBezTo>
+          <pt x="x5" y="y4" />
+          <pt x="x6" y="y6" />
+          <pt x="x6" y="y5" />
+        </cubicBezTo>
+        <cubicBezTo>
+          <pt x="x6" y="y7" />
+          <pt x="x7" y="b" />
+          <pt x="r" y="b" />
+        </cubicBezTo>
+      </path>
+    </pathLst>
+
+  </curvedConnector5>
+  <curvedDownArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 50000 w ss" />
+
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="a1" fmla="pin 0 adj1 100000" />
+      <gd name="th" fmla="*/ ss a1 100000" />
+
+      <gd name="aw" fmla="*/ ss a2 100000" />
+
+      <gd name="q1" fmla="+/ th aw 4" />
+
+      <gd name="wR" fmla="+- wd2 0 q1" />
+
+      <gd name="q7" fmla="*/ wR 2 1" />
+
+      <gd name="q8" fmla="*/ q7 q7 1" />
+
+      <gd name="q9" fmla="*/ th th 1" />
+
+      <gd name="q10" fmla="+- q8 0 q9" />
+      <gd name="q11" fmla="sqrt q10" />
+      <gd name="idy" fmla="*/ q11 h q7" />
+      <gd name="maxAdj3" fmla="*/ 100000 idy ss" />
+
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="ah" fmla="*/ ss adj3 100000" />
+
+
+
+
+
+      <gd name="x3" fmla="+- wR th 0" />
+
+      <gd name="q2" fmla="*/ h h 1" />
+      <gd name="q3" fmla="*/ ah ah 1" />
+      <gd name="q4" fmla="+- q2 0 q3" />
+      <gd name="q5" fmla="sqrt q4" />
+      <gd name="dx" fmla="*/ q5 wR h" />
+      <gd name="x5" fmla="+- wR dx 0" />
+
+      <gd name="x7" fmla="+- x3 dx 0" />
+
+      <gd name="q6" fmla="+- aw 0 th" />
+      <gd name="dh" fmla="*/ q6 1 2" />
+
+      <gd name="x4" fmla="+- x5 0 dh" />
+
+      <gd name="x8" fmla="+- x7 dh 0" />
+
+      <gd name="aw2" fmla="*/ aw 1 2" />
+      <gd name="x6" fmla="+- r 0 aw2" />
+
+      <gd name="y1" fmla="+- b 0 ah" />
+      <gd name="swAng" fmla="at2 ah dx" />
+
+      <gd name="mswAng" fmla="+- 0 0 swAng" />
+      <gd name="iy" fmla="+- b 0 idy" />
+
+      <gd name="ix" fmla="+/ wR x3 2" />
+
+      <gd name="q12" fmla="*/ th 1 2" />
+      <gd name="dang2" fmla="at2 idy q12" />
+      <gd name="stAng" fmla="+- 3cd4 swAng 0" />
+      <gd name="stAng2" fmla="+- 3cd4 0 dang2" />
+      <gd name="swAng2" fmla="+- dang2 0 cd4" />
+      <gd name="swAng3" fmla="+- cd4 dang2 0" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="adj2">
+        <pos x="x7" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="x4" y="b" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="0" maxY="maxAdj3">
+        <pos x="r" y="y1" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="ix" y="t" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="q12" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x4" y="y1" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x6" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x8" y="y1" />
+      </cxn>
+    </cxnLst>
+
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="x6" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y1" />
+        </lnTo>
+        <arcTo wR="wR" hR="h" stAng="stAng" swAng="mswAng" />
+        <lnTo>
+          <pt x="x3" y="t" />
+        </lnTo>
+        <arcTo wR="wR" hR="h" stAng="3cd4" swAng="swAng" />
+        <lnTo>
+          <pt x="x8" y="y1" />
+        </lnTo>
+        <close />
+      </path>
+
+      <path fill="darkenLess" stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="ix" y="iy" />
+        </moveTo>
+        <arcTo wR="wR" hR="h" stAng="stAng2" swAng="swAng2" />
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <arcTo wR="wR" hR="h" stAng="cd2" swAng="swAng3" />
+        <close />
+      </path>
+
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="ix" y="iy" />
+        </moveTo>
+        <arcTo wR="wR" hR="h" stAng="stAng2" swAng="swAng2" />
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <arcTo wR="wR" hR="h" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="x3" y="t" />
+        </lnTo>
+        <arcTo wR="wR" hR="h" stAng="3cd4" swAng="swAng" />
+        <lnTo>
+          <pt x="x8" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y1" />
+        </lnTo>
+        <arcTo wR="wR" hR="h" stAng="stAng" swAng="mswAng" />
+      </path>
+    </pathLst>
+
+  </curvedDownArrow>
+  <curvedLeftArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 50000 h ss" />
+
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="a1" fmla="pin 0 adj1 a2" />
+      <gd name="th" fmla="*/ ss a1 100000" />
+
+      <gd name="aw" fmla="*/ ss a2 100000" />
+
+      <gd name="q1" fmla="+/ th aw 4" />
+
+      <gd name="hR" fmla="+- hd2 0 q1" />
+
+      <gd name="q7" fmla="*/ hR 2 1" />
+
+      <gd name="q8" fmla="*/ q7 q7 1" />
+
+      <gd name="q9" fmla="*/ th th 1" />
+
+      <gd name="q10" fmla="+- q8 0 q9" />
+      <gd name="q11" fmla="sqrt q10" />
+      <gd name="idx" fmla="*/ q11 w q7" />
+      <gd name="maxAdj3" fmla="*/ 100000 idx ss" />
+
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="ah" fmla="*/ ss a3 100000" />
+
+
+
+
+
+      <gd name="y3" fmla="+- hR th 0" />
+
+      <gd name="q2" fmla="*/ w w 1" />
+      <gd name="q3" fmla="*/ ah ah 1" />
+      <gd name="q4" fmla="+- q2 0 q3" />
+      <gd name="q5" fmla="sqrt q4" />
+      <gd name="dy" fmla="*/ q5 hR w" />
+      <gd name="y5" fmla="+- hR dy 0" />
+
+      <gd name="y7" fmla="+- y3 dy 0" />
+
+      <gd name="q6" fmla="+- aw 0 th" />
+      <gd name="dh" fmla="*/ q6 1 2" />
+
+      <gd name="y4" fmla="+- y5 0 dh" />
+
+      <gd name="y8" fmla="+- y7 dh 0" />
+
+      <gd name="aw2" fmla="*/ aw 1 2" />
+      <gd name="y6" fmla="+- b 0 aw2" />
+
+      <gd name="x1" fmla="+- l ah 0" />
+      <gd name="swAng" fmla="at2 ah dy" />
+
+      <gd name="mswAng" fmla="+- 0 0 swAng" />
+      <gd name="ix" fmla="+- l idx 0" />
+
+      <gd name="iy" fmla="+/ hR y3 2" />
+
+      <gd name="q12" fmla="*/ th 1 2" />
+      <gd name="dang2" fmla="at2 idx q12" />
+      <gd name="swAng2" fmla="+- dang2 0 swAng" />
+      <gd name="swAng3" fmla="+- swAng dang2 0" />
+      <gd name="stAng3" fmla="+- 0 0 dang2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="a2">
+        <pos x="x1" y="y5" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="0" maxY="maxAdj2">
+        <pos x="r" y="y4" />
+      </ahXY>
+      <ahXY gdRefX="adj3" minX="0" maxX="maxAdj3">
+        <pos x="x1" y="b" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd2">
+        <pos x="l" y="q12" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y4" />
+      </cxn>
+      <cxn ang="cd3">
+        <pos x="l" y="y6" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x1" y="y8" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="iy" />
+      </cxn>
+    </cxnLst>
+
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="y6" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y5" />
+        </lnTo>
+        <arcTo wR="w" hR="hR" stAng="swAng" swAng="swAng2" />
+        <arcTo wR="w" hR="hR" stAng="stAng3" swAng="swAng3" />
+        <lnTo>
+          <pt x="x1" y="y8" />
+        </lnTo>
+        <close />
+      </path>
+
+      <path fill="darkenLess" stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="r" y="y3" />
+        </moveTo>
+        <arcTo wR="w" hR="hR" stAng="0" swAng="-5400000" />
+        <lnTo>
+          <pt x="l" y="t" />
+        </lnTo>
+        <arcTo wR="w" hR="hR" stAng="3cd4" swAng="cd4" />
+        <close />
+      </path>
+
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="r" y="y3" />
+        </moveTo>
+        <arcTo wR="w" hR="hR" stAng="0" swAng="-5400000" />
+        <lnTo>
+          <pt x="l" y="t" />
+        </lnTo>
+        <arcTo wR="w" hR="hR" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="y3" />
+        </lnTo>
+        <arcTo wR="w" hR="hR" stAng="0" swAng="swAng" />
+        <lnTo>
+          <pt x="x1" y="y8" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y5" />
+        </lnTo>
+        <arcTo wR="w" hR="hR" stAng="swAng" swAng="swAng2" />
+      </path>
+    </pathLst>
+
+  </curvedLeftArrow>
+  <curvedRightArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 50000 h ss" />
+
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="a1" fmla="pin 0 adj1 a2" />
+      <gd name="th" fmla="*/ ss a1 100000" />
+
+      <gd name="aw" fmla="*/ ss a2 100000" />
+
+      <gd name="q1" fmla="+/ th aw 4" />
+
+      <gd name="hR" fmla="+- hd2 0 q1" />
+
+      <gd name="q7" fmla="*/ hR 2 1" />
+
+      <gd name="q8" fmla="*/ q7 q7 1" />
+
+      <gd name="q9" fmla="*/ th th 1" />
+
+      <gd name="q10" fmla="+- q8 0 q9" />
+      <gd name="q11" fmla="sqrt q10" />
+      <gd name="idx" fmla="*/ q11 w q7" />
+      <gd name="maxAdj3" fmla="*/ 100000 idx ss" />
+
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="ah" fmla="*/ ss a3 100000" />
+
+
+
+
+
+      <gd name="y3" fmla="+- hR th 0" />
+
+      <gd name="q2" fmla="*/ w w 1" />
+      <gd name="q3" fmla="*/ ah ah 1" />
+      <gd name="q4" fmla="+- q2 0 q3" />
+      <gd name="q5" fmla="sqrt q4" />
+      <gd name="dy" fmla="*/ q5 hR w" />
+      <gd name="y5" fmla="+- hR dy 0" />
+
+      <gd name="y7" fmla="+- y3 dy 0" />
+
+      <gd name="q6" fmla="+- aw 0 th" />
+      <gd name="dh" fmla="*/ q6 1 2" />
+
+      <gd name="y4" fmla="+- y5 0 dh" />
+
+      <gd name="y8" fmla="+- y7 dh 0" />
+
+      <gd name="aw2" fmla="*/ aw 1 2" />
+      <gd name="y6" fmla="+- b 0 aw2" />
+
+      <gd name="x1" fmla="+- r 0 ah" />
+      <gd name="swAng" fmla="at2 ah dy" />
+
+      <gd name="stAng" fmla="+- cd2 0 swAng" />
+      <gd name="mswAng" fmla="+- 0 0 swAng" />
+      <gd name="ix" fmla="+- r 0 idx" />
+
+      <gd name="iy" fmla="+/ hR y3 2" />
+
+      <gd name="q12" fmla="*/ th 1 2" />
+      <gd name="dang2" fmla="at2 idx q12" />
+      <gd name="swAng2" fmla="+- dang2 0 cd4" />
+      <gd name="swAng3" fmla="+- cd4 dang2 0" />
+      <gd name="stAng3" fmla="+- cd2 0 dang2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="a2">
+        <pos x="x1" y="y5" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="0" maxY="maxAdj2">
+        <pos x="r" y="y4" />
+      </ahXY>
+      <ahXY gdRefX="adj3" minX="0" maxX="maxAdj3">
+        <pos x="x1" y="b" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd2">
+        <pos x="l" y="iy" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x1" y="y8" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y6" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x1" y="y4" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="q12" />
+      </cxn>
+    </cxnLst>
+
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="hR" />
+        </moveTo>
+        <arcTo wR="w" hR="hR" stAng="cd2" swAng="mswAng" />
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y8" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y7" />
+        </lnTo>
+        <arcTo wR="w" hR="hR" stAng="stAng" swAng="swAng" />
+        <close />
+      </path>
+
+      <path fill="darkenLess" stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="r" y="th" />
+        </moveTo>
+        <arcTo wR="w" hR="hR" stAng="3cd4" swAng="swAng2" />
+        <arcTo wR="w" hR="hR" stAng="stAng3" swAng="swAng3" />
+        <close />
+      </path>
+
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="hR" />
+        </moveTo>
+        <arcTo wR="w" hR="hR" stAng="cd2" swAng="mswAng" />
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y8" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y7" />
+        </lnTo>
+        <arcTo wR="w" hR="hR" stAng="stAng" swAng="swAng" />
+        <lnTo>
+          <pt x="l" y="hR" />
+        </lnTo>
+        <arcTo wR="w" hR="hR" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="th" />
+        </lnTo>
+        <arcTo wR="w" hR="hR" stAng="3cd4" swAng="swAng2" />
+      </path>
+    </pathLst>
+
+  </curvedRightArrow>
+  <curvedUpArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 50000 w ss" />
+
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="a1" fmla="pin 0 adj1 100000" />
+      <gd name="th" fmla="*/ ss a1 100000" />
+
+      <gd name="aw" fmla="*/ ss a2 100000" />
+
+      <gd name="q1" fmla="+/ th aw 4" />
+
+      <gd name="wR" fmla="+- wd2 0 q1" />
+
+      <gd name="q7" fmla="*/ wR 2 1" />
+
+      <gd name="q8" fmla="*/ q7 q7 1" />
+
+      <gd name="q9" fmla="*/ th th 1" />
+
+      <gd name="q10" fmla="+- q8 0 q9" />
+      <gd name="q11" fmla="sqrt q10" />
+      <gd name="idy" fmla="*/ q11 h q7" />
+      <gd name="maxAdj3" fmla="*/ 100000 idy ss" />
+
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="ah" fmla="*/ ss adj3 100000" />
+
+
+
+
+
+      <gd name="x3" fmla="+- wR th 0" />
+
+      <gd name="q2" fmla="*/ h h 1" />
+      <gd name="q3" fmla="*/ ah ah 1" />
+      <gd name="q4" fmla="+- q2 0 q3" />
+      <gd name="q5" fmla="sqrt q4" />
+      <gd name="dx" fmla="*/ q5 wR h" />
+      <gd name="x5" fmla="+- wR dx 0" />
+
+      <gd name="x7" fmla="+- x3 dx 0" />
+
+      <gd name="q6" fmla="+- aw 0 th" />
+      <gd name="dh" fmla="*/ q6 1 2" />
+
+      <gd name="x4" fmla="+- x5 0 dh" />
+
+      <gd name="x8" fmla="+- x7 dh 0" />
+
+      <gd name="aw2" fmla="*/ aw 1 2" />
+      <gd name="x6" fmla="+- r 0 aw2" />
+
+      <gd name="y1" fmla="+- t ah 0" />
+      <gd name="swAng" fmla="at2 ah dx" />
+
+      <gd name="mswAng" fmla="+- 0 0 swAng" />
+      <gd name="iy" fmla="+- t idy 0" />
+
+      <gd name="ix" fmla="+/ wR x3 2" />
+
+      <gd name="q12" fmla="*/ th 1 2" />
+      <gd name="dang2" fmla="at2 idy q12" />
+      <gd name="swAng2" fmla="+- dang2 0 swAng" />
+      <gd name="mswAng2" fmla="+- 0 0 swAng2" />
+      <gd name="stAng3" fmla="+- cd4 0 swAng" />
+      <gd name="swAng3" fmla="+- swAng dang2 0" />
+      <gd name="stAng2" fmla="+- cd4 0 dang2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="a2">
+        <pos x="x7" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="x4" y="t" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="0" maxY="maxAdj3">
+        <pos x="r" y="y1" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x6" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x4" y="y1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="q12" y="t" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="ix" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x8" y="y1" />
+      </cxn>
+    </cxnLst>
+
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="x6" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x8" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x7" y="y1" />
+        </lnTo>
+        <arcTo wR="wR" hR="h" stAng="stAng3" swAng="swAng3" />
+        <arcTo wR="wR" hR="h" stAng="stAng2" swAng="swAng2" />
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <close />
+      </path>
+
+      <path fill="darkenLess" stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="wR" y="b" />
+        </moveTo>
+        <arcTo wR="wR" hR="h" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="th" y="t" />
+        </lnTo>
+        <arcTo wR="wR" hR="h" stAng="cd2" swAng="-5400000" />
+        <close />
+      </path>
+
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="ix" y="iy" />
+        </moveTo>
+        <arcTo wR="wR" hR="h" stAng="stAng2" swAng="swAng2" />
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x7" y="y1" />
+        </lnTo>
+        <arcTo wR="wR" hR="h" stAng="stAng3" swAng="swAng" />
+        <lnTo>
+          <pt x="wR" y="b" />
+        </lnTo>
+        <arcTo wR="wR" hR="h" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="th" y="t" />
+        </lnTo>
+        <arcTo wR="wR" hR="h" stAng="cd2" swAng="-5400000" />
+      </path>
+    </pathLst>
+
+  </curvedUpArrow>
+  <decagon>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="vf" fmla="val 105146" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="shd2" fmla="*/ hd2 vf 100000" />
+      <gd name="dx1" fmla="cos wd2 2160000" />
+      <gd name="dx2" fmla="cos wd2 4320000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x3" fmla="+- hc dx2 0" />
+      <gd name="x4" fmla="+- hc dx1 0" />
+      <gd name="dy1" fmla="sin shd2 4320000" />
+      <gd name="dy2" fmla="sin shd2 2160000" />
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc 0 dy2" />
+      <gd name="y3" fmla="+- vc dy2 0" />
+      <gd name="y4" fmla="+- vc dy1 0" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x4" y="y2" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x4" y="y3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="y4" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x2" y="y4" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y3" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y2" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x2" y="y1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x3" y="y1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x1" t="y2" r="x4" b="y3" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </decagon>
+  <diagStripe>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 50000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 100000" />
+      <gd name="x2" fmla="*/ w a 100000" />
+      <gd name="x1" fmla="*/ x2 1 2" />
+      <gd name="x3" fmla="+/ x2 r 2" />
+      <gd name="y2" fmla="*/ h a 100000" />
+      <gd name="y1" fmla="*/ y2 1 2" />
+      <gd name="y3" fmla="+/ y2 b 2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="100000">
+        <pos x="l" y="y2" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="hc" y="vc" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y3" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x3" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="x3" b="y3" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </diagStripe>
+  <diamond>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="ir" fmla="*/ w 3 4" />
+      <gd name="ib" fmla="*/ h 3 4" />
+    </gdLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+    <rect l="wd4" t="hd4" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </diamond>
+  <dodecagon>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x1" fmla="*/ w 2894 21600" />
+      <gd name="x2" fmla="*/ w 7906 21600" />
+      <gd name="x3" fmla="*/ w 13694 21600" />
+      <gd name="x4" fmla="*/ w 18706 21600" />
+      <gd name="y1" fmla="*/ h 2894 21600" />
+      <gd name="y2" fmla="*/ h 7906 21600" />
+      <gd name="y3" fmla="*/ h 13694 21600" />
+      <gd name="y4" fmla="*/ h 18706 21600" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x4" y="y1" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y2" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y3" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x4" y="y4" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x2" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y4" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y3" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x2" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x3" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x1" t="y1" r="x4" b="y4" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y3" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </dodecagon>
+  <donut>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 25000" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="dr" fmla="*/ ss a 100000" />
+      <gd name="iwd2" fmla="+- wd2 0 dr" />
+      <gd name="ihd2" fmla="+- hd2 0 dr" />
+      <gd name="idx" fmla="cos wd2 2700000" />
+      <gd name="idy" fmla="sin hd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefR="adj" minR="0" maxR="50000">
+        <pos x="dr" y="vc" />
+      </ahPolar>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="il" y="it" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="il" y="ib" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="ir" y="ib" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="ir" y="it" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="cd2" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="3cd4" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="0" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="cd4" swAng="cd4" />
+        <close />
+        <moveTo>
+          <pt x="dr" y="vc" />
+        </moveTo>
+        <arcTo wR="iwd2" hR="ihd2" stAng="cd2" swAng="-5400000" />
+        <arcTo wR="iwd2" hR="ihd2" stAng="cd4" swAng="-5400000" />
+        <arcTo wR="iwd2" hR="ihd2" stAng="0" swAng="-5400000" />
+        <arcTo wR="iwd2" hR="ihd2" stAng="3cd4" swAng="-5400000" />
+        <close />
+      </path>
+    </pathLst>
+
+  </donut>
+  <doubleWave>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 6250" />
+
+      <gd name="adj2" fmla="val 0" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 12500" />
+      <gd name="a2" fmla="pin -10000 adj2 10000" />
+      <gd name="y1" fmla="*/ h a1 100000" />
+
+      <gd name="dy2" fmla="*/ y1 10 3" />
+      <gd name="y2" fmla="+- y1 0 dy2" />
+
+      <gd name="y3" fmla="+- y1 dy2 0" />
+
+      <gd name="y4" fmla="+- b 0 y1" />
+
+      <gd name="y5" fmla="+- y4 0 dy2" />
+
+      <gd name="y6" fmla="+- y4 dy2 0" />
+
+      <gd name="dx1" fmla="*/ w a2 100000" />
+
+      <gd name="of2" fmla="*/ w a2 50000" />
+
+      <gd name="x1" fmla="abs dx1" />
+
+      <gd name="dx2" fmla="?: of2 0 of2" />
+      <gd name="x2" fmla="+- l 0 dx2" />
+
+      <gd name="dx8" fmla="?: of2 of2 0" />
+      <gd name="x8" fmla="+- r 0 dx8" />
+
+      <gd name="dx3" fmla="+/ dx2 x8 6" />
+      <gd name="x3" fmla="+- x2 dx3 0" />
+
+      <gd name="dx4" fmla="+/ dx2 x8 3" />
+      <gd name="x4" fmla="+- x2 dx4 0" />
+
+      <gd name="x5" fmla="+/ x2 x8 2" />
+
+      <gd name="x6" fmla="+- x5 dx3 0" />
+
+      <gd name="x7" fmla="+/ x6 x8 2" />
+
+      <gd name="x9" fmla="+- l dx8 0" />
+
+      <gd name="x15" fmla="+- r dx2 0" />
+
+      <gd name="x10" fmla="+- x9 dx3 0" />
+
+      <gd name="x11" fmla="+- x9 dx4 0" />
+
+      <gd name="x12" fmla="+/ x9 x15 2" />
+
+      <gd name="x13" fmla="+- x12 dx3 0" />
+
+      <gd name="x14" fmla="+/ x13 x15 2" />
+
+      <gd name="x16" fmla="+- r 0 x1" />
+
+      <gd name="xAdj" fmla="+- hc dx1 0" />
+      <gd name="il" fmla="max x2 x9" />
+      <gd name="ir" fmla="min x8 x15" />
+      <gd name="it" fmla="*/ h a1 50000" />
+      <gd name="ib" fmla="+- b 0 it" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="12500">
+        <pos x="l" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="-10000" maxX="10000">
+        <pos x="xAdj" y="b" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd4">
+        <pos x="x12" y="y1" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x5" y="y4" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x16" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x2" y="y1" />
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x3" y="y2" />
+          <pt x="x4" y="y3" />
+          <pt x="x5" y="y1" />
+        </cubicBezTo>
+        <cubicBezTo>
+          <pt x="x6" y="y2" />
+          <pt x="x7" y="y3" />
+          <pt x="x8" y="y1" />
+        </cubicBezTo>
+        <lnTo>
+          <pt x="x15" y="y4" />
+        </lnTo>
+        <cubicBezTo>
+          <pt x="x14" y="y6" />
+          <pt x="x13" y="y5" />
+          <pt x="x12" y="y4" />
+        </cubicBezTo>
+        <cubicBezTo>
+          <pt x="x11" y="y6" />
+          <pt x="x10" y="y5" />
+          <pt x="x9" y="y4" />
+        </cubicBezTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </doubleWave>
+  <downArrow>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+      <gd name="adj2" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 100000 h ss" />
+      <gd name="a1" fmla="pin 0 adj1 100000" />
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="dy1" fmla="*/ ss a2 100000" />
+      <gd name="y1" fmla="+- b 0 dy1" />
+      <gd name="dx1" fmla="*/ w a1 200000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc dx1 0" />
+      <gd name="dy2" fmla="*/ x1 dy1 wd2" />
+      <gd name="y2" fmla="+- y1 dy2 0" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="100000">
+        <pos x="x1" y="t" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="0" maxY="maxAdj2">
+        <pos x="l" y="y1" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y1" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y1" />
+      </cxn>
+    </cxnLst>
+    <rect l="x1" t="t" r="x2" b="y2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </downArrow>
+  <downArrowCallout>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 25000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+      <gd name="adj4" fmla="val 64977" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 50000 w ss" />
+
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="maxAdj1" fmla="*/ a2 2 1" />
+
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="maxAdj3" fmla="*/ 100000 h ss" />
+
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="q2" fmla="*/ a3 ss h" />
+
+      <gd name="maxAdj4" fmla="+- 100000 0 q2" />
+
+      <gd name="a4" fmla="pin 0 adj4 maxAdj4" />
+      <gd name="dx1" fmla="*/ ss a2 100000" />
+
+      <gd name="dx2" fmla="*/ ss a1 200000" />
+
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x3" fmla="+- hc dx2 0" />
+      <gd name="x4" fmla="+- hc dx1 0" />
+      <gd name="dy3" fmla="*/ ss a3 100000" />
+
+      <gd name="y3" fmla="+- b 0 dy3" />
+      <gd name="y2" fmla="*/ h a4 100000" />
+
+      <gd name="y1" fmla="*/ y2 1 2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="maxAdj1">
+        <pos x="x2" y="y3" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="x1" y="b" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="0" maxY="maxAdj3">
+        <pos x="r" y="y3" />
+      </ahXY>
+      <ahXY gdRefY="adj4" minY="0" maxY="maxAdj4">
+        <pos x="l" y="y2" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y1" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="y2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </downArrowCallout>
+  <ellipse>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="idx" fmla="cos wd2 2700000" />
+      <gd name="idy" fmla="sin hd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="il" y="it" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="il" y="ib" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="ir" y="ib" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="ir" y="it" />
+      </cxn>
+    </cxnLst>
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="cd2" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="3cd4" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="0" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="cd4" swAng="cd4" />
+        <close />
+      </path>
+    </pathLst>
+  </ellipse>
+  <ellipseRibbon>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+      <gd name="adj3" fmla="val 12500" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 100000" />
+      <gd name="a2" fmla="pin 25000 adj2 75000" />
+      <gd name="q10" fmla="+- 100000 0 a1" />
+      <gd name="q11" fmla="*/ q10 1 2" />
+      <gd name="q12" fmla="+- a1 0 q11" />
+      <gd name="minAdj3" fmla="max 0 q12" />
+      <gd name="a3" fmla="pin minAdj3 adj3 a1" />
+
+
+      <gd name="dx2" fmla="*/ w a2 200000" />
+
+      <gd name="x2" fmla="+- hc 0 dx2" />
+
+      <gd name="x3" fmla="+- x2 wd8 0" />
+
+      <gd name="x4" fmla="+- r 0 x3" />
+
+      <gd name="x5" fmla="+- r 0 x2" />
+
+      <gd name="x6" fmla="+- r 0 wd8" />
+
+      <gd name="dy1" fmla="*/ h a3 100000" />
+
+      <gd name="f1" fmla="*/ 4 dy1 w" />
+
+      <gd name="q1" fmla="*/ x3 x3 w" />
+      <gd name="q2" fmla="+- x3 0 q1" />
+      <gd name="y1" fmla="*/ f1 q2 1" />
+
+      <gd name="cx1" fmla="*/ x3 1 2" />
+
+      <gd name="cy1" fmla="*/ f1 cx1 1" />
+
+      <gd name="cx2" fmla="+- r 0 cx1" />
+
+
+
+      <gd name="q1" fmla="*/ h a1 100000" />
+
+      <gd name="dy3" fmla="+- q1 0 dy1" />
+
+      <gd name="q3" fmla="*/ x2 x2 w" />
+      <gd name="q4" fmla="+- x2 0 q3" />
+      <gd name="q5" fmla="*/ f1 q4 1" />
+      <gd name="y3" fmla="+- q5 dy3 0" />
+
+
+
+      <gd name="q6" fmla="+- dy1 dy3 y3" />
+      <gd name="q7" fmla="+- q6 dy1 0" />
+      <gd name="cy3" fmla="+- q7 dy3 0" />
+
+      <gd name="rh" fmla="+- b 0 q1" />
+
+      <gd name="q8" fmla="*/ dy1 14 16" />
+      <gd name="y2" fmla="+/ q8 rh 2" />
+
+
+      <gd name="y5" fmla="+- q5 rh 0" />
+
+      <gd name="y6" fmla="+- y3 rh 0" />
+
+      <gd name="cx4" fmla="*/ x2 1 2" />
+
+      <gd name="q9" fmla="*/ f1 cx4 1" />
+      <gd name="cy4" fmla="+- q9 rh 0" />
+
+      <gd name="cx5" fmla="+- r 0 cx4" />
+
+
+
+
+
+      <gd name="cy6" fmla="+- cy3 rh 0" />
+
+      <gd name="y7" fmla="+- y1 dy3 0" />
+      <gd name="cy7" fmla="+- q1 q1 y7" />
+      <gd name="y8" fmla="+- b 0 dy1" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="100000">
+        <pos x="hc" y="q1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="25000" maxX="75000">
+        <pos x="x2" y="b" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="minAdj3" maxY="a1">
+        <pos x="l" y="y8" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="q1" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="wd8" y="y2" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x6" y="y2" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x2" t="q1" r="x5" b="y6" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <quadBezTo>
+          <pt x="cx1" y="cy1" />
+          <pt x="x3" y="y1" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="hc" y="cy3" />
+          <pt x="x5" y="y3" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="cx2" y="cy1" />
+          <pt x="r" y="t" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x6" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="rh" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="cx5" y="cy4" />
+          <pt x="x5" y="y5" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x5" y="y6" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="hc" y="cy6" />
+          <pt x="x2" y="y6" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x2" y="y5" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="cx4" y="cy4" />
+          <pt x="l" y="rh" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="wd8" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="darkenLess" stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="x3" y="y7" />
+        </moveTo>
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="hc" y="cy3" />
+          <pt x="x5" y="y3" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y7" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="hc" y="cy7" />
+          <pt x="x3" y="y7" />
+        </quadBezTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <quadBezTo>
+          <pt x="cx1" y="cy1" />
+          <pt x="x3" y="y1" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="hc" y="cy3" />
+          <pt x="x5" y="y3" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="cx2" y="cy1" />
+          <pt x="r" y="t" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x6" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="rh" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="cx5" y="cy4" />
+          <pt x="x5" y="y5" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x5" y="y6" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="hc" y="cy6" />
+          <pt x="x2" y="y6" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x2" y="y5" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="cx4" y="cy4" />
+          <pt x="l" y="rh" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="wd8" y="y2" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="x2" y="y5" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <moveTo>
+          <pt x="x5" y="y3" />
+        </moveTo>
+        <lnTo>
+          <pt x="x5" y="y5" />
+        </lnTo>
+        <moveTo>
+          <pt x="x3" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x3" y="y7" />
+        </lnTo>
+        <moveTo>
+          <pt x="x4" y="y7" />
+        </moveTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </ellipseRibbon>
+  <ellipseRibbon2>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+      <gd name="adj3" fmla="val 12500" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+
+      <gd name="a1" fmla="pin 0 adj1 100000" />
+      <gd name="a2" fmla="pin 25000 adj2 75000" />
+      <gd name="q10" fmla="+- 100000 0 a1" />
+      <gd name="q11" fmla="*/ q10 1 2" />
+      <gd name="q12" fmla="+- a1 0 q11" />
+      <gd name="minAdj3" fmla="max 0 q12" />
+      <gd name="a3" fmla="pin minAdj3 adj3 a1" />
+      <gd name="dx2" fmla="*/ w a2 200000" />
+
+      <gd name="x2" fmla="+- hc 0 dx2" />
+
+      <gd name="x3" fmla="+- x2 wd8 0" />
+
+      <gd name="x4" fmla="+- r 0 x3" />
+
+      <gd name="x5" fmla="+- r 0 x2" />
+
+      <gd name="x6" fmla="+- r 0 wd8" />
+
+      <gd name="dy1" fmla="*/ h a3 100000" />
+
+      <gd name="f1" fmla="*/ 4 dy1 w" />
+
+      <gd name="q1" fmla="*/ x3 x3 w" />
+      <gd name="q2" fmla="+- x3 0 q1" />
+      <gd name="u1" fmla="*/ f1 q2 1" />
+
+      <gd name="y1" fmla="+- b 0 u1" />
+      <gd name="cx1" fmla="*/ x3 1 2" />
+
+      <gd name="cu1" fmla="*/ f1 cx1 1" />
+
+      <gd name="cy1" fmla="+- b 0 cu1" />
+      <gd name="cx2" fmla="+- r 0 cx1" />
+
+
+
+      <gd name="q1" fmla="*/ h a1 100000" />
+
+      <gd name="dy3" fmla="+- q1 0 dy1" />
+
+      <gd name="q3" fmla="*/ x2 x2 w" />
+      <gd name="q4" fmla="+- x2 0 q3" />
+      <gd name="q5" fmla="*/ f1 q4 1" />
+      <gd name="u3" fmla="+- q5 dy3 0" />
+
+      <gd name="y3" fmla="+- b 0 u3" />
+
+
+      <gd name="q6" fmla="+- dy1 dy3 u3" />
+      <gd name="q7" fmla="+- q6 dy1 0" />
+      <gd name="cu3" fmla="+- q7 dy3 0" />
+
+      <gd name="cy3" fmla="+- b 0 cu3" />
+      <gd name="rh" fmla="+- b 0 q1" />
+
+      <gd name="q8" fmla="*/ dy1 14 16" />
+      <gd name="u2" fmla="+/ q8 rh 2" />
+
+      <gd name="y2" fmla="+- b 0 u2" />
+
+      <gd name="u5" fmla="+- q5 rh 0" />
+
+      <gd name="y5" fmla="+- b 0 u5" />
+      <gd name="u6" fmla="+- u3 rh 0" />
+
+      <gd name="y6" fmla="+- b 0 u6" />
+      <gd name="cx4" fmla="*/ x2 1 2" />
+
+      <gd name="q9" fmla="*/ f1 cx4 1" />
+      <gd name="cu4" fmla="+- q9 rh 0" />
+
+      <gd name="cy4" fmla="+- b 0 cu4" />
+      <gd name="cx5" fmla="+- r 0 cx4" />
+
+
+
+
+
+      <gd name="cu6" fmla="+- cu3 rh 0" />
+
+      <gd name="cy6" fmla="+- b 0 cu6" />
+      <gd name="u7" fmla="+- u1 dy3 0" />
+      <gd name="y7" fmla="+- b 0 u7" />
+      <gd name="cu7" fmla="+- q1 q1 u7" />
+      <gd name="cy7" fmla="+- b 0 cu7" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="100000">
+        <pos x="hc" y="rh" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="25000" maxX="100000">
+        <pos x="x2" y="t" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="minAdj3" maxY="a1">
+        <pos x="l" y="dy1" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="wd8" y="y2" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="rh" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x6" y="y2" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x2" t="y6" r="x5" b="rh" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <quadBezTo>
+          <pt x="cx1" y="cy1" />
+          <pt x="x3" y="y1" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="hc" y="cy3" />
+          <pt x="x5" y="y3" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="cx2" y="cy1" />
+          <pt x="r" y="b" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x6" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="q1" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="cx5" y="cy4" />
+          <pt x="x5" y="y5" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x5" y="y6" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="hc" y="cy6" />
+          <pt x="x2" y="y6" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x2" y="y5" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="cx4" y="cy4" />
+          <pt x="l" y="q1" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="wd8" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="darkenLess" stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="x3" y="y7" />
+        </moveTo>
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="hc" y="cy3" />
+          <pt x="x5" y="y3" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y7" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="hc" y="cy7" />
+          <pt x="x3" y="y7" />
+        </quadBezTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="wd8" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="q1" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="cx4" y="cy4" />
+          <pt x="x2" y="y5" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x2" y="y6" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="hc" y="cy6" />
+          <pt x="x5" y="y6" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x5" y="y5" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="cx5" y="cy4" />
+          <pt x="r" y="q1" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x6" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="cx2" y="cy1" />
+          <pt x="x4" y="y1" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x5" y="y3" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="hc" y="cy3" />
+          <pt x="x2" y="y3" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="cx1" y="cy1" />
+          <pt x="l" y="b" />
+        </quadBezTo>
+        <close />
+        <moveTo>
+          <pt x="x2" y="y3" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y5" />
+        </lnTo>
+        <moveTo>
+          <pt x="x5" y="y5" />
+        </moveTo>
+        <lnTo>
+          <pt x="x5" y="y3" />
+        </lnTo>
+        <moveTo>
+          <pt x="x3" y="y7" />
+        </moveTo>
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <moveTo>
+          <pt x="x4" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x4" y="y7" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </ellipseRibbon2>
+  <flowChartAlternateProcess>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x2" fmla="+- r 0 ssd6" />
+      <gd name="y2" fmla="+- b 0 ssd6" />
+      <gd name="il" fmla="*/ ssd6 29289 100000" />
+
+
+      <gd name="ir" fmla="+- r 0 il" />
+      <gd name="ib" fmla="+- b 0 il" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="il" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="ssd6" />
+        </moveTo>
+        <arcTo wR="ssd6" hR="ssd6" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <arcTo wR="ssd6" hR="ssd6" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <arcTo wR="ssd6" hR="ssd6" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="ssd6" y="b" />
+        </lnTo>
+        <arcTo wR="ssd6" hR="ssd6" stAng="cd4" swAng="cd4" />
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartAlternateProcess>
+  <flowChartCollate>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="ir" fmla="*/ w 3 4" />
+      <gd name="ib" fmla="*/ h 3 4" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd4" t="hd4" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="2" h="2">
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="2" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="1" />
+        </lnTo>
+        <lnTo>
+          <pt x="2" y="2" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="2" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="1" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartCollate>
+  <flowChartConnector>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="idx" fmla="cos wd2 2700000" />
+      <gd name="idy" fmla="sin hd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="il" y="it" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="il" y="ib" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="ir" y="ib" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="ir" y="it" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="cd2" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="3cd4" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="0" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="cd4" swAng="cd4" />
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartConnector>
+  <flowChartDecision>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="ir" fmla="*/ w 3 4" />
+      <gd name="ib" fmla="*/ h 3 4" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd4" t="hd4" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="2" h="2">
+        <moveTo>
+          <pt x="0" y="1" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="2" y="1" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartDecision>
+  <flowChartDelay>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="idx" fmla="cos wd2 2700000" />
+      <gd name="idy" fmla="sin hd2 2700000" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <arcTo wR="wd2" hR="hd2" stAng="3cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartDelay>
+  <flowChartDisplay>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x2" fmla="*/ w 5 6" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd6" t="t" r="x2" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="6" h="6">
+        <moveTo>
+          <pt x="0" y="3" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="5" y="0" />
+        </lnTo>
+        <arcTo wR="1" hR="3" stAng="3cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="1" y="6" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartDisplay>
+  <flowChartDocument>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h 17322 21600" />
+      <gd name="y2" fmla="*/ h 20172 21600" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="y2" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="y1" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="21600" h="21600">
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="21600" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="21600" y="17322" />
+        </lnTo>
+        <cubicBezTo>
+          <pt x="10800" y="17322" />
+          <pt x="10800" y="23922" />
+          <pt x="0" y="20172" />
+        </cubicBezTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartDocument>
+  <flowChartExtract>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x2" fmla="*/ w 3 4" />
+    </gdLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="wd4" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x2" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd4" t="vc" r="x2" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="2" h="2">
+        <moveTo>
+          <pt x="0" y="2" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="2" y="2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartExtract>
+  <flowChartInputOutput>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x3" fmla="*/ w 2 5" />
+      <gd name="x4" fmla="*/ w 3 5" />
+      <gd name="x5" fmla="*/ w 4 5" />
+      <gd name="x6" fmla="*/ w 9 10" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x4" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="wd10" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x6" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd5" t="t" r="x5" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="5" h="5">
+        <moveTo>
+          <pt x="0" y="5" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="5" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="4" y="5" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartInputOutput>
+  <flowChartInternalStorage>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd8" t="hd8" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false" w="1" h="1">
+
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="1" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="1" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false" w="8" h="8">
+
+        <moveTo>
+          <pt x="1" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="8" />
+        </lnTo>
+        <moveTo>
+          <pt x="0" y="1" />
+        </moveTo>
+        <lnTo>
+          <pt x="8" y="1" />
+        </lnTo>
+      </path>
+      <path fill="none" w="1" h="1">
+
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="1" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="1" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartInternalStorage>
+  <flowChartMagneticDisk>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y3" fmla="*/ h 5 6" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="hd3" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="hd3" r="r" b="y3" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false" w="6" h="6">
+
+        <moveTo>
+          <pt x="0" y="1" />
+        </moveTo>
+        <arcTo wR="3" hR="1" stAng="cd2" swAng="cd2" />
+        <lnTo>
+          <pt x="6" y="5" />
+        </lnTo>
+        <arcTo wR="3" hR="1" stAng="0" swAng="cd2" />
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false" w="6" h="6">
+
+        <moveTo>
+          <pt x="6" y="1" />
+        </moveTo>
+        <arcTo wR="3" hR="1" stAng="0" swAng="cd2" />
+      </path>
+      <path fill="none" w="6" h="6">
+
+        <moveTo>
+          <pt x="0" y="1" />
+        </moveTo>
+        <arcTo wR="3" hR="1" stAng="cd2" swAng="cd2" />
+        <lnTo>
+          <pt x="6" y="5" />
+        </lnTo>
+        <arcTo wR="3" hR="1" stAng="0" swAng="cd2" />
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartMagneticDisk>
+  <flowChartMagneticDrum>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x2" fmla="*/ w 2 3" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x2" y="vc" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd6" t="t" r="x2" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false" w="6" h="6">
+
+        <moveTo>
+          <pt x="1" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="5" y="0" />
+        </lnTo>
+        <arcTo wR="1" hR="3" stAng="3cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="1" y="6" />
+        </lnTo>
+        <arcTo wR="1" hR="3" stAng="cd4" swAng="cd2" />
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false" w="6" h="6">
+
+        <moveTo>
+          <pt x="5" y="6" />
+        </moveTo>
+        <arcTo wR="1" hR="3" stAng="cd4" swAng="cd2" />
+      </path>
+      <path fill="none" w="6" h="6">
+
+        <moveTo>
+          <pt x="1" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="5" y="0" />
+        </lnTo>
+        <arcTo wR="1" hR="3" stAng="3cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="1" y="6" />
+        </lnTo>
+        <arcTo wR="1" hR="3" stAng="cd4" swAng="cd2" />
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartMagneticDrum>
+  <flowChartMagneticTape>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="idx" fmla="cos wd2 2700000" />
+      <gd name="idy" fmla="sin hd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+      <gd name="ang1" fmla="at2 w h" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="hc" y="b" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="cd4" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="cd2" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="3cd4" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="0" swAng="ang1" />
+        <lnTo>
+          <pt x="r" y="ib" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartMagneticTape>
+  <flowChartManualInput>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="hd10" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="hd5" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="5" h="5">
+        <moveTo>
+          <pt x="0" y="1" />
+        </moveTo>
+        <lnTo>
+          <pt x="5" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="5" y="5" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="5" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartManualInput>
+  <flowChartManualOperation>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x3" fmla="*/ w 4 5" />
+      <gd name="x4" fmla="*/ w 9 10" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="wd10" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x4" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd5" t="t" r="x3" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="5" h="5">
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="5" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="4" y="5" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="5" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartManualOperation>
+  <flowChartMerge>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x2" fmla="*/ w 3 4" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="wd4" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x2" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd4" t="t" r="x2" b="vc" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="2" h="2">
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="2" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartMerge>
+  <flowChartMultidocument>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y2" fmla="*/ h 3675 21600" />
+      <gd name="y8" fmla="*/ h 20782 21600" />
+      <gd name="x3" fmla="*/ w 9298 21600" />
+      <gd name="x4" fmla="*/ w 12286 21600" />
+      <gd name="x5" fmla="*/ w 18595 21600" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x4" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="y8" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="y2" r="x5" b="y8" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false" w="21600" h="21600">
+
+        <moveTo>
+          <pt x="0" y="20782" />
+        </moveTo>
+        <cubicBezTo>
+          <pt x="9298" y="23542" />
+          <pt x="9298" y="18022" />
+          <pt x="18595" y="18022" />
+        </cubicBezTo>
+        <lnTo>
+          <pt x="18595" y="3675" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="3675" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="1532" y="3675" />
+        </moveTo>
+        <lnTo>
+          <pt x="1532" y="1815" />
+        </lnTo>
+        <lnTo>
+          <pt x="20000" y="1815" />
+        </lnTo>
+        <lnTo>
+          <pt x="20000" y="16252" />
+        </lnTo>
+        <cubicBezTo>
+          <pt x="19298" y="16252" />
+          <pt x="18595" y="16352" />
+          <pt x="18595" y="16352" />
+        </cubicBezTo>
+        <lnTo>
+          <pt x="18595" y="3675" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="2972" y="1815" />
+        </moveTo>
+        <lnTo>
+          <pt x="2972" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="21600" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="21600" y="14392" />
+        </lnTo>
+        <cubicBezTo>
+          <pt x="20800" y="14392" />
+          <pt x="20000" y="14467" />
+          <pt x="20000" y="14467" />
+        </cubicBezTo>
+        <lnTo>
+          <pt x="20000" y="1815" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false" w="21600" h="21600">
+
+        <moveTo>
+          <pt x="0" y="3675" />
+        </moveTo>
+        <lnTo>
+          <pt x="18595" y="3675" />
+        </lnTo>
+        <lnTo>
+          <pt x="18595" y="18022" />
+        </lnTo>
+        <cubicBezTo>
+          <pt x="9298" y="18022" />
+          <pt x="9298" y="23542" />
+          <pt x="0" y="20782" />
+        </cubicBezTo>
+        <close />
+        <moveTo>
+          <pt x="1532" y="3675" />
+        </moveTo>
+        <lnTo>
+          <pt x="1532" y="1815" />
+        </lnTo>
+        <lnTo>
+          <pt x="20000" y="1815" />
+        </lnTo>
+        <lnTo>
+          <pt x="20000" y="16252" />
+        </lnTo>
+        <cubicBezTo>
+          <pt x="19298" y="16252" />
+          <pt x="18595" y="16352" />
+          <pt x="18595" y="16352" />
+        </cubicBezTo>
+        <moveTo>
+          <pt x="2972" y="1815" />
+        </moveTo>
+        <lnTo>
+          <pt x="2972" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="21600" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="21600" y="14392" />
+        </lnTo>
+        <cubicBezTo>
+          <pt x="20800" y="14392" />
+          <pt x="20000" y="14467" />
+          <pt x="20000" y="14467" />
+        </cubicBezTo>
+      </path>
+      <path stroke="false" fill="none" w="21600" h="21600">
+
+        <moveTo>
+          <pt x="0" y="20782" />
+        </moveTo>
+        <cubicBezTo>
+          <pt x="9298" y="23542" />
+          <pt x="9298" y="18022" />
+          <pt x="18595" y="18022" />
+        </cubicBezTo>
+        <lnTo>
+          <pt x="18595" y="16352" />
+        </lnTo>
+        <cubicBezTo>
+          <pt x="18595" y="16352" />
+          <pt x="19298" y="16252" />
+          <pt x="20000" y="16252" />
+        </cubicBezTo>
+        <lnTo>
+          <pt x="20000" y="14467" />
+        </lnTo>
+        <cubicBezTo>
+          <pt x="20000" y="14467" />
+          <pt x="20800" y="14392" />
+          <pt x="21600" y="14392" />
+        </cubicBezTo>
+        <lnTo>
+          <pt x="21600" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="2972" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="2972" y="1815" />
+        </lnTo>
+        <lnTo>
+          <pt x="1532" y="1815" />
+        </lnTo>
+        <lnTo>
+          <pt x="1532" y="3675" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="3675" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartMultidocument>
+  <flowChartOfflineStorage>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x4" fmla="*/ w 3 4" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x4" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="wd4" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd4" t="t" r="x4" b="vc" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false" w="2" h="2">
+
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="2" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="2" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false" w="5" h="5">
+
+        <moveTo>
+          <pt x="2" y="4" />
+        </moveTo>
+        <lnTo>
+          <pt x="3" y="4" />
+        </lnTo>
+      </path>
+      <path fill="none" extrusionOk="true" w="2" h="2">
+
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="2" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartOfflineStorage>
+  <flowChartOffpageConnector>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y1" fmla="*/ h 4 5" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="y1" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="10" h="10">
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="10" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="10" y="8" />
+        </lnTo>
+        <lnTo>
+          <pt x="5" y="10" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="8" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartOffpageConnector>
+  <flowChartOnlineStorage>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x2" fmla="*/ w 5 6" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x2" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd6" t="t" r="x2" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="6" h="6">
+        <moveTo>
+          <pt x="1" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="6" y="0" />
+        </lnTo>
+        <arcTo wR="1" hR="3" stAng="3cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="1" y="6" />
+        </lnTo>
+        <arcTo wR="1" hR="3" stAng="cd4" swAng="cd2" />
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartOnlineStorage>
+  <flowChartOr>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="idx" fmla="cos wd2 2700000" />
+      <gd name="idy" fmla="sin hd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="il" y="it" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="il" y="ib" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="ir" y="ib" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="ir" y="it" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="cd2" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="3cd4" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="0" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="cd4" swAng="cd4" />
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+
+        <moveTo>
+          <pt x="hc" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+      </path>
+      <path fill="none">
+
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="cd2" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="3cd4" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="0" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="cd4" swAng="cd4" />
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartOr>
+  <flowChartPredefinedProcess>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x2" fmla="*/ w 7 8" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd8" t="t" r="x2" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false" w="1" h="1">
+
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="1" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="1" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false" w="8" h="8">
+
+        <moveTo>
+          <pt x="1" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="8" />
+        </lnTo>
+        <moveTo>
+          <pt x="7" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="7" y="8" />
+        </lnTo>
+      </path>
+      <path fill="none" w="1" h="1">
+
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="1" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="1" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartPredefinedProcess>
+  <flowChartPreparation>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x2" fmla="*/ w 4 5" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd5" t="t" r="x2" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="10" h="10">
+        <moveTo>
+          <pt x="0" y="5" />
+        </moveTo>
+        <lnTo>
+          <pt x="2" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="8" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="10" y="5" />
+        </lnTo>
+        <lnTo>
+          <pt x="8" y="10" />
+        </lnTo>
+        <lnTo>
+          <pt x="2" y="10" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartPreparation>
+  <flowChartProcess>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="1" h="1">
+        <moveTo>
+          <pt x="0" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="1" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="1" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartProcess>
+  <flowChartPunchedCard>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="hd5" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="5" h="5">
+        <moveTo>
+          <pt x="0" y="1" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="5" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="5" y="5" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="5" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartPunchedCard>
+  <flowChartPunchedTape>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="y2" fmla="*/ h 9 10" />
+      <gd name="ib" fmla="*/ h 4 5" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="hd10" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="y2" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="hd5" r="r" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="20" h="20">
+        <moveTo>
+          <pt x="0" y="2" />
+        </moveTo>
+        <arcTo wR="5" hR="2" stAng="cd2" swAng="-10800000" />
+        <arcTo wR="5" hR="2" stAng="cd2" swAng="cd2" />
+        <lnTo>
+          <pt x="20" y="18" />
+        </lnTo>
+        <arcTo wR="5" hR="2" stAng="0" swAng="-10800000" />
+        <arcTo wR="5" hR="2" stAng="0" swAng="cd2" />
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartPunchedTape>
+  <flowChartSort>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="ir" fmla="*/ w 3 4" />
+      <gd name="ib" fmla="*/ h 3 4" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="wd4" t="hd4" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false" w="2" h="2">
+
+        <moveTo>
+          <pt x="0" y="1" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="2" y="1" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="2" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false" w="2" h="2">
+
+        <moveTo>
+          <pt x="0" y="1" />
+        </moveTo>
+        <lnTo>
+          <pt x="2" y="1" />
+        </lnTo>
+      </path>
+      <path fill="none" w="2" h="2">
+
+        <moveTo>
+          <pt x="0" y="1" />
+        </moveTo>
+        <lnTo>
+          <pt x="1" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="2" y="1" />
+        </lnTo>
+        <lnTo>
+          <pt x="1" y="2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartSort>
+  <flowChartSummingJunction>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="idx" fmla="cos wd2 2700000" />
+      <gd name="idy" fmla="sin hd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="il" y="it" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="il" y="ib" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="ir" y="ib" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="ir" y="it" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="cd2" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="3cd4" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="0" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="cd4" swAng="cd4" />
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+
+        <moveTo>
+          <pt x="il" y="it" />
+        </moveTo>
+        <lnTo>
+          <pt x="ir" y="ib" />
+        </lnTo>
+        <moveTo>
+          <pt x="ir" y="it" />
+        </moveTo>
+        <lnTo>
+          <pt x="il" y="ib" />
+        </lnTo>
+      </path>
+      <path fill="none">
+
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="cd2" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="3cd4" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="0" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="cd4" swAng="cd4" />
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartSummingJunction>
+  <flowChartTerminator>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="il" fmla="*/ w 1018 21600" />
+      <gd name="ir" fmla="*/ w 20582 21600" />
+      <gd name="it" fmla="*/ h 3163 21600" />
+      <gd name="ib" fmla="*/ h 18437 21600" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="21600" h="21600">
+        <moveTo>
+          <pt x="3475" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="18125" y="0" />
+        </lnTo>
+        <arcTo wR="3475" hR="10800" stAng="3cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="3475" y="21600" />
+        </lnTo>
+        <arcTo wR="3475" hR="10800" stAng="cd4" swAng="cd2" />
+        <close />
+      </path>
+    </pathLst>
+
+  </flowChartTerminator>
+  <foldedCorner>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 16667" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="dy2" fmla="*/ ss a 100000" />
+      <gd name="dy1" fmla="*/ dy2 1 5" />
+      <gd name="x1" fmla="+- r 0 dy2" />
+      <gd name="x2" fmla="+- x1 dy1 0" />
+      <gd name="y2" fmla="+- b 0 dy2" />
+      <gd name="y1" fmla="+- y2 dy1 0" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="50000">
+        <pos x="x1" y="b" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="y2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darkenLess" extrusionOk="false">
+
+        <moveTo>
+          <pt x="x1" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+        <moveTo>
+          <pt x="x1" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </foldedCorner>
+  <frame>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 12500" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 50000" />
+      <gd name="x1" fmla="*/ ss a1 100000" />
+
+      <gd name="x4" fmla="+- r 0 x1" />
+
+
+
+      <gd name="y4" fmla="+- b 0 x1" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="50000">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x1" t="x1" r="x4" b="y4" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="x1" y="x1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="x1" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </frame>
+  <funnel>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="d" fmla="*/ ss 1 20" />
+
+
+      <gd name="rw2" fmla="+- wd2 0 d" />
+
+      <gd name="rh2" fmla="+- hd4 0 d" />
+
+
+
+      <gd name="t1" fmla="cos wd2 480000" />
+
+      <gd name="t2" fmla="sin hd4 480000" />
+
+      <gd name="da" fmla="at2 t1 t2" />
+
+
+      <gd name="2da" fmla="*/ da 2 1" />
+      <gd name="stAng1" fmla="+- cd2 0 da" />
+      <gd name="swAng1" fmla="+- cd2 2da 0" />
+
+
+      <gd name="swAng3" fmla="+- cd2 0 2da" />
+
+
+      <gd name="rw3" fmla="*/ wd2 1 4" />
+      <gd name="rh3" fmla="*/ hd4 1 4" />
+
+
+      <gd name="ct1" fmla="cos hd4 stAng1" />
+      <gd name="st1" fmla="sin wd2 stAng1" />
+      <gd name="m1" fmla="mod ct1 st1 0" />
+      <gd name="n1" fmla="*/ wd2 hd4 m1" />
+      <gd name="dx1" fmla="cos n1 stAng1" />
+      <gd name="dy1" fmla="sin n1 stAng1" />
+      <gd name="x1" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- hd4 dy1 0" />
+
+
+      <gd name="ct3" fmla="cos rh3 da" />
+      <gd name="st3" fmla="sin rw3 da" />
+      <gd name="m3" fmla="mod ct3 st3 0" />
+      <gd name="n3" fmla="*/ rw3 rh3 m3" />
+      <gd name="dx3" fmla="cos n3 da" />
+      <gd name="dy3" fmla="sin n3 da" />
+      <gd name="x3" fmla="+- hc dx3 0" />
+      <gd name="vc3" fmla="+- b 0 rh3" />
+      <gd name="y2" fmla="+- vc3 dy3 0" />
+
+
+      <gd name="x2" fmla="+- wd2 0 rw2" />
+
+      <gd name="cd" fmla="*/ cd2 2 1" />
+    </gdLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <arcTo hR="hd4" wR="wd2" stAng="stAng1" swAng="swAng1" />
+        <lnTo>
+          <pt x="x3" y="y2" />
+        </lnTo>
+        <arcTo hR="rh3" wR="rw3" stAng="da" swAng="swAng3" />
+        <close />
+        <moveTo>
+          <pt x="x2" y="hd4" />
+        </moveTo>
+        <arcTo hR="rh2" wR="rw2" stAng="cd2" swAng="-21600000" />
+        <close />
+      </path>
+    </pathLst>
+
+  </funnel>
+  <gear6>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 15000" />
+
+      <gd name="adj2" fmla="val 3526" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+
+
+
+      <gd name="a1" fmla="pin 0 adj1 20000" />
+      <gd name="a2" fmla="pin 0 adj2 5358" />
+
+
+      <gd name="th" fmla="*/ ss a1 100000" />
+      <gd name="lFD" fmla="*/ ss a2 100000" />
+
+      <gd name="th2" fmla="*/ th 1 2" />
+      <gd name="l2" fmla="*/ lFD 1 2" />
+      <gd name="l3" fmla="+- th2 l2 0" />
+
+
+      <gd name="rh" fmla="+- hd2 0 th" />
+      <gd name="rw" fmla="+- wd2 0 th" />
+
+
+      <gd name="dr" fmla="+- rw 0 rh" />
+      <gd name="maxr" fmla="?: dr rh rw" />
+      <gd name="ha" fmla="at2 maxr l3" />
+
+
+      <gd name="aA1" fmla="+- 19800000 0 ha" />
+      <gd name="aD1" fmla="+- 19800000 ha 0" />
+
+
+      <gd name="ta11" fmla="cos rw aA1" />
+      <gd name="ta12" fmla="sin rh aA1" />
+      <gd name="bA1" fmla="at2 ta11 ta12" />
+
+      <gd name="cta1" fmla="cos rh bA1" />
+      <gd name="sta1" fmla="sin rw bA1" />
+      <gd name="ma1" fmla="mod cta1 sta1 0" />
+      <gd name="na1" fmla="*/ rw rh ma1" />
+      <gd name="dxa1" fmla="cos na1 bA1" />
+      <gd name="dya1" fmla="sin na1 bA1" />
+      <gd name="xA1" fmla="+- hc dxa1 0" />
+      <gd name="yA1" fmla="+- vc dya1 0" />
+
+
+      <gd name="td11" fmla="cos rw aD1" />
+      <gd name="td12" fmla="sin rh aD1" />
+      <gd name="bD1" fmla="at2 td11 td12" />
+
+      <gd name="ctd1" fmla="cos rh bD1" />
+      <gd name="std1" fmla="sin rw bD1" />
+      <gd name="md1" fmla="mod ctd1 std1 0" />
+      <gd name="nd1" fmla="*/ rw rh md1" />
+      <gd name="dxd1" fmla="cos nd1 bD1" />
+      <gd name="dyd1" fmla="sin nd1 bD1" />
+      <gd name="xD1" fmla="+- hc dxd1 0" />
+      <gd name="yD1" fmla="+- vc dyd1 0" />
+
+
+      <gd name="xAD1" fmla="+- xA1 0 xD1" />
+      <gd name="yAD1" fmla="+- yA1 0 yD1" />
+      <gd name="lAD1" fmla="mod xAD1 yAD1 0" />
+      <gd name="a1" fmla="at2 yAD1 xAD1" />
+
+
+      <gd name="dxF1" fmla="sin lFD a1" />
+      <gd name="dyF1" fmla="cos lFD a1" />
+      <gd name="xF1" fmla="+- xD1 dxF1 0" />
+      <gd name="yF1" fmla="+- yD1 dyF1 0" />
+      <gd name="xE1" fmla="+- xA1 0 dxF1" />
+      <gd name="yE1" fmla="+- yA1 0 dyF1" />
+
+
+      <gd name="yC1t" fmla="sin th a1" />
+      <gd name="xC1t" fmla="cos th a1" />
+      <gd name="yC1" fmla="+- yF1 yC1t 0" />
+      <gd name="xC1" fmla="+- xF1 0 xC1t" />
+
+
+      <gd name="yB1" fmla="+- yE1 yC1t 0" />
+      <gd name="xB1" fmla="+- xE1 0 xC1t" />
+
+
+      <gd name="aD6" fmla="+- 3cd4 ha 0" />
+
+
+      <gd name="td61" fmla="cos rw aD6" />
+      <gd name="td62" fmla="sin rh aD6" />
+      <gd name="bD6" fmla="at2 td61 td62" />
+
+      <gd name="ctd6" fmla="cos rh bD6" />
+      <gd name="std6" fmla="sin rw bD6" />
+      <gd name="md6" fmla="mod ctd6 std6 0" />
+      <gd name="nd6" fmla="*/ rw rh md6" />
+      <gd name="dxd6" fmla="cos nd6 bD6" />
+      <gd name="dyd6" fmla="sin nd6 bD6" />
+      <gd name="xD6" fmla="+- hc dxd6 0" />
+      <gd name="yD6" fmla="+- vc dyd6 0" />
+
+
+      <gd name="xA6" fmla="+- hc 0 dxd6" />
+
+
+      <gd name="xF6" fmla="+- xD6 0 lFD" />
+      <gd name="xE6" fmla="+- xA6 lFD 0" />
+
+
+      <gd name="yC6" fmla="+- yD6 0 th" />
+
+      <gd name="swAng1" fmla="+- bA1 0 bD6" />
+
+
+      <gd name="aA2" fmla="+- 1800000 0 ha" />
+      <gd name="aD2" fmla="+- 1800000 ha 0" />
+
+
+      <gd name="ta21" fmla="cos rw aA2" />
+      <gd name="ta22" fmla="sin rh aA2" />
+      <gd name="bA2" fmla="at2 ta21 ta22" />
+
+      <gd name="yA2" fmla="+- h 0 yD1" />
+
+
+      <gd name="td21" fmla="cos rw aD2" />
+      <gd name="td22" fmla="sin rh aD2" />
+      <gd name="bD2" fmla="at2 td21 td22" />
+
+      <gd name="yD2" fmla="+- h 0 yA1" />
+
+
+      <gd name="yC2" fmla="+- h 0 yB1" />
+
+
+      <gd name="yB2" fmla="+- h 0 yC1" />
+      <gd name="xB2" fmla="val xC1" />
+
+      <gd name="swAng2" fmla="+- bA2 0 bD1" />
+
+
+      <gd name="aD3" fmla="+- cd4 ha 0" />
+
+      <gd name="td31" fmla="cos rw aD3" />
+      <gd name="td32" fmla="sin rh aD3" />
+      <gd name="bD3" fmla="at2 td31 td32" />
+
+
+      <gd name="yD3" fmla="+- h 0 yD6" />
+
+
+      <gd name="yB3" fmla="+- h 0 yC6" />
+
+
+      <gd name="aD4" fmla="+- 9000000 ha 0" />
+
+      <gd name="td41" fmla="cos rw aD4" />
+      <gd name="td42" fmla="sin rh aD4" />
+      <gd name="bD4" fmla="at2 td41 td42" />
+
+
+      <gd name="xD4" fmla="+- w 0 xD1" />
+
+
+      <gd name="xC4" fmla="+- w 0 xC1" />
+
+
+      <gd name="xB4" fmla="+- w 0 xB1" />
+
+
+      <gd name="aD5" fmla="+- 12600000 ha 0" />
+
+      <gd name="td51" fmla="cos rw aD5" />
+      <gd name="td52" fmla="sin rh aD5" />
+      <gd name="bD5" fmla="at2 td51 td52" />
+
+
+      <gd name="xD5" fmla="+- w 0 xA1" />
+
+
+      <gd name="xC5" fmla="+- w 0 xB1" />
+
+
+      <gd name="xB5" fmla="+- w 0 xC1" />
+
+
+      <gd name="xCxn1" fmla="+/ xB1 xC1 2" />
+      <gd name="yCxn1" fmla="+/ yB1 yC1 2" />
+      <gd name="yCxn2" fmla="+- b 0 yCxn1" />
+      <gd name="xCxn4" fmla="+/ r 0 xCxn1" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="20000">
+        <pos x="xD6" y="yD6" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="5358">
+        <pos x="xA6" y="yD6" />
+      </ahXY>
+
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="19800000">
+        <pos x="xCxn1" y="yCxn1" />
+      </cxn>
+
+      <cxn ang="1800000">
+        <pos x="xCxn1" y="yCxn2" />
+      </cxn>
+
+      <cxn ang="cd4">
+        <pos x="hc" y="yB3" />
+      </cxn>
+
+      <cxn ang="9000000">
+        <pos x="xCxn4" y="yCxn2" />
+      </cxn>
+
+      <cxn ang="12600000">
+        <pos x="xCxn4" y="yCxn1" />
+      </cxn>
+
+      <cxn ang="3cd4">
+        <pos x="hc" y="yC6" />
+      </cxn>
+
+    </cxnLst>
+
+    <rect l="xD5" t="yA1" r="xA1" b="yD2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="xA1" y="yA1" />
+        </moveTo>
+        <lnTo>
+          <pt x="xB1" y="yB1" />
+        </lnTo>
+        <lnTo>
+          <pt x="xC1" y="yC1" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD1" y="yD1" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD1" swAng="swAng2" />
+
+        <lnTo>
+          <pt x="xC1" y="yB2" />
+        </lnTo>
+        <lnTo>
+          <pt x="xB1" y="yC2" />
+        </lnTo>
+        <lnTo>
+          <pt x="xA1" y="yD2" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD2" swAng="swAng1" />
+
+        <lnTo>
+          <pt x="xF6" y="yB3" />
+        </lnTo>
+        <lnTo>
+          <pt x="xE6" y="yB3" />
+        </lnTo>
+        <lnTo>
+          <pt x="xA6" y="yD3" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD3" swAng="swAng1" />
+
+        <lnTo>
+          <pt x="xB4" y="yC2" />
+        </lnTo>
+        <lnTo>
+          <pt x="xC4" y="yB2" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD4" y="yA2" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD4" swAng="swAng2" />
+
+        <lnTo>
+          <pt x="xB5" y="yC1" />
+        </lnTo>
+        <lnTo>
+          <pt x="xC5" y="yB1" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD5" y="yA1" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD5" swAng="swAng1" />
+
+        <lnTo>
+          <pt x="xE6" y="yC6" />
+        </lnTo>
+        <lnTo>
+          <pt x="xF6" y="yC6" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD6" y="yD6" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD6" swAng="swAng1" />
+        <close />
+      </path>
+    </pathLst>
+
+  </gear6>
+  <gear9>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 10000" />
+
+      <gd name="adj2" fmla="val 1763" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+
+
+
+      <gd name="a1" fmla="pin 0 adj1 20000" />
+      <gd name="a2" fmla="pin 0 adj2 2679" />
+
+
+      <gd name="th" fmla="*/ ss a1 100000" />
+      <gd name="lFD" fmla="*/ ss a2 100000" />
+
+      <gd name="th2" fmla="*/ th 1 2" />
+      <gd name="l2" fmla="*/ lFD 1 2" />
+      <gd name="l3" fmla="+- th2 l2 0" />
+
+
+      <gd name="rh" fmla="+- hd2 0 th" />
+      <gd name="rw" fmla="+- wd2 0 th" />
+
+
+      <gd name="dr" fmla="+- rw 0 rh" />
+      <gd name="maxr" fmla="?: dr rh rw" />
+      <gd name="ha" fmla="at2 maxr l3" />
+
+
+      <gd name="aA1" fmla="+- 18600000 0 ha" />
+      <gd name="aD1" fmla="+- 18600000 ha 0" />
+
+
+      <gd name="ta11" fmla="cos rw aA1" />
+      <gd name="ta12" fmla="sin rh aA1" />
+      <gd name="bA1" fmla="at2 ta11 ta12" />
+
+      <gd name="cta1" fmla="cos rh bA1" />
+      <gd name="sta1" fmla="sin rw bA1" />
+      <gd name="ma1" fmla="mod cta1 sta1 0" />
+      <gd name="na1" fmla="*/ rw rh ma1" />
+      <gd name="dxa1" fmla="cos na1 bA1" />
+      <gd name="dya1" fmla="sin na1 bA1" />
+      <gd name="xA1" fmla="+- hc dxa1 0" />
+      <gd name="yA1" fmla="+- vc dya1 0" />
+
+
+      <gd name="td11" fmla="cos rw aD1" />
+      <gd name="td12" fmla="sin rh aD1" />
+      <gd name="bD1" fmla="at2 td11 td12" />
+
+      <gd name="ctd1" fmla="cos rh bD1" />
+      <gd name="std1" fmla="sin rw bD1" />
+      <gd name="md1" fmla="mod ctd1 std1 0" />
+      <gd name="nd1" fmla="*/ rw rh md1" />
+      <gd name="dxd1" fmla="cos nd1 bD1" />
+      <gd name="dyd1" fmla="sin nd1 bD1" />
+      <gd name="xD1" fmla="+- hc dxd1 0" />
+      <gd name="yD1" fmla="+- vc dyd1 0" />
+
+
+      <gd name="xAD1" fmla="+- xA1 0 xD1" />
+      <gd name="yAD1" fmla="+- yA1 0 yD1" />
+      <gd name="lAD1" fmla="mod xAD1 yAD1 0" />
+      <gd name="a1" fmla="at2 yAD1 xAD1" />
+
+
+      <gd name="dxF1" fmla="sin lFD a1" />
+      <gd name="dyF1" fmla="cos lFD a1" />
+      <gd name="xF1" fmla="+- xD1 dxF1 0" />
+      <gd name="yF1" fmla="+- yD1 dyF1 0" />
+      <gd name="xE1" fmla="+- xA1 0 dxF1" />
+      <gd name="yE1" fmla="+- yA1 0 dyF1" />
+
+
+      <gd name="yC1t" fmla="sin th a1" />
+      <gd name="xC1t" fmla="cos th a1" />
+      <gd name="yC1" fmla="+- yF1 yC1t 0" />
+      <gd name="xC1" fmla="+- xF1 0 xC1t" />
+
+
+      <gd name="yB1" fmla="+- yE1 yC1t 0" />
+      <gd name="xB1" fmla="+- xE1 0 xC1t" />
+
+
+      <gd name="aA2" fmla="+- 21000000 0 ha" />
+      <gd name="aD2" fmla="+- 21000000 ha 0" />
+
+
+      <gd name="ta21" fmla="cos rw aA2" />
+      <gd name="ta22" fmla="sin rh aA2" />
+      <gd name="bA2" fmla="at2 ta21 ta22" />
+
+      <gd name="cta2" fmla="cos rh bA2" />
+      <gd name="sta2" fmla="sin rw bA2" />
+      <gd name="ma2" fmla="mod cta2 sta2 0" />
+      <gd name="na2" fmla="*/ rw rh ma2" />
+      <gd name="dxa2" fmla="cos na2 bA2" />
+      <gd name="dya2" fmla="sin na2 bA2" />
+      <gd name="xA2" fmla="+- hc dxa2 0" />
+      <gd name="yA2" fmla="+- vc dya2 0" />
+
+
+      <gd name="td21" fmla="cos rw aD2" />
+      <gd name="td22" fmla="sin rh aD2" />
+      <gd name="bD2" fmla="at2 td21 td22" />
+
+      <gd name="ctd2" fmla="cos rh bD2" />
+      <gd name="std2" fmla="sin rw bD2" />
+      <gd name="md2" fmla="mod ctd2 std2 0" />
+      <gd name="nd2" fmla="*/ rw rh md2" />
+      <gd name="dxd2" fmla="cos nd2 bD2" />
+      <gd name="dyd2" fmla="sin nd2 bD2" />
+      <gd name="xD2" fmla="+- hc dxd2 0" />
+      <gd name="yD2" fmla="+- vc dyd2 0" />
+
+
+      <gd name="xAD2" fmla="+- xA2 0 xD2" />
+      <gd name="yAD2" fmla="+- yA2 0 yD2" />
+      <gd name="lAD2" fmla="mod xAD2 yAD2 0" />
+      <gd name="a2" fmla="at2 yAD2 xAD2" />
+
+
+      <gd name="dxF2" fmla="sin lFD a2" />
+      <gd name="dyF2" fmla="cos lFD a2" />
+      <gd name="xF2" fmla="+- xD2 dxF2 0" />
+      <gd name="yF2" fmla="+- yD2 dyF2 0" />
+      <gd name="xE2" fmla="+- xA2 0 dxF2" />
+      <gd name="yE2" fmla="+- yA2 0 dyF2" />
+
+
+      <gd name="yC2t" fmla="sin th a2" />
+      <gd name="xC2t" fmla="cos th a2" />
+      <gd name="yC2" fmla="+- yF2 yC2t 0" />
+      <gd name="xC2" fmla="+- xF2 0 xC2t" />
+
+
+      <gd name="yB2" fmla="+- yE2 yC2t 0" />
+      <gd name="xB2" fmla="+- xE2 0 xC2t" />
+
+      <gd name="swAng1" fmla="+- bA2 0 bD1" />
+
+
+      <gd name="aA3" fmla="+- 1800000 0 ha" />
+      <gd name="aD3" fmla="+- 1800000 ha 0" />
+
+
+      <gd name="ta31" fmla="cos rw aA3" />
+      <gd name="ta32" fmla="sin rh aA3" />
+      <gd name="bA3" fmla="at2 ta31 ta32" />
+
+      <gd name="cta3" fmla="cos rh bA3" />
+      <gd name="sta3" fmla="sin rw bA3" />
+      <gd name="ma3" fmla="mod cta3 sta3 0" />
+      <gd name="na3" fmla="*/ rw rh ma3" />
+      <gd name="dxa3" fmla="cos na3 bA3" />
+      <gd name="dya3" fmla="sin na3 bA3" />
+      <gd name="xA3" fmla="+- hc dxa3 0" />
+      <gd name="yA3" fmla="+- vc dya3 0" />
+
+
+      <gd name="td31" fmla="cos rw aD3" />
+      <gd name="td32" fmla="sin rh aD3" />
+      <gd name="bD3" fmla="at2 td31 td32" />
+
+      <gd name="ctd3" fmla="cos rh bD3" />
+      <gd name="std3" fmla="sin rw bD3" />
+      <gd name="md3" fmla="mod ctd3 std3 0" />
+      <gd name="nd3" fmla="*/ rw rh md3" />
+      <gd name="dxd3" fmla="cos nd3 bD3" />
+      <gd name="dyd3" fmla="sin nd3 bD3" />
+      <gd name="xD3" fmla="+- hc dxd3 0" />
+      <gd name="yD3" fmla="+- vc dyd3 0" />
+
+
+      <gd name="xAD3" fmla="+- xA3 0 xD3" />
+      <gd name="yAD3" fmla="+- yA3 0 yD3" />
+      <gd name="lAD3" fmla="mod xAD3 yAD3 0" />
+      <gd name="a3" fmla="at2 yAD3 xAD3" />
+
+
+      <gd name="dxF3" fmla="sin lFD a3" />
+      <gd name="dyF3" fmla="cos lFD a3" />
+      <gd name="xF3" fmla="+- xD3 dxF3 0" />
+      <gd name="yF3" fmla="+- yD3 dyF3 0" />
+      <gd name="xE3" fmla="+- xA3 0 dxF3" />
+      <gd name="yE3" fmla="+- yA3 0 dyF3" />
+
+
+      <gd name="yC3t" fmla="sin th a3" />
+      <gd name="xC3t" fmla="cos th a3" />
+      <gd name="yC3" fmla="+- yF3 yC3t 0" />
+      <gd name="xC3" fmla="+- xF3 0 xC3t" />
+
+
+      <gd name="yB3" fmla="+- yE3 yC3t 0" />
+      <gd name="xB3" fmla="+- xE3 0 xC3t" />
+
+      <gd name="swAng2" fmla="+- bA3 0 bD2" />
+
+
+      <gd name="aA4" fmla="+- 4200000 0 ha" />
+      <gd name="aD4" fmla="+- 4200000 ha 0" />
+
+
+      <gd name="ta41" fmla="cos rw aA4" />
+      <gd name="ta42" fmla="sin rh aA4" />
+      <gd name="bA4" fmla="at2 ta41 ta42" />
+
+      <gd name="cta4" fmla="cos rh bA4" />
+      <gd name="sta4" fmla="sin rw bA4" />
+      <gd name="ma4" fmla="mod cta4 sta4 0" />
+      <gd name="na4" fmla="*/ rw rh ma4" />
+      <gd name="dxa4" fmla="cos na4 bA4" />
+      <gd name="dya4" fmla="sin na4 bA4" />
+      <gd name="xA4" fmla="+- hc dxa4 0" />
+      <gd name="yA4" fmla="+- vc dya4 0" />
+
+
+      <gd name="td41" fmla="cos rw aD4" />
+      <gd name="td42" fmla="sin rh aD4" />
+      <gd name="bD4" fmla="at2 td41 td42" />
+
+      <gd name="ctd4" fmla="cos rh bD4" />
+      <gd name="std4" fmla="sin rw bD4" />
+      <gd name="md4" fmla="mod ctd4 std4 0" />
+      <gd name="nd4" fmla="*/ rw rh md4" />
+      <gd name="dxd4" fmla="cos nd4 bD4" />
+      <gd name="dyd4" fmla="sin nd4 bD4" />
+      <gd name="xD4" fmla="+- hc dxd4 0" />
+      <gd name="yD4" fmla="+- vc dyd4 0" />
+
+
+      <gd name="xAD4" fmla="+- xA4 0 xD4" />
+      <gd name="yAD4" fmla="+- yA4 0 yD4" />
+      <gd name="lAD4" fmla="mod xAD4 yAD4 0" />
+      <gd name="a4" fmla="at2 yAD4 xAD4" />
+
+
+      <gd name="dxF4" fmla="sin lFD a4" />
+      <gd name="dyF4" fmla="cos lFD a4" />
+      <gd name="xF4" fmla="+- xD4 dxF4 0" />
+      <gd name="yF4" fmla="+- yD4 dyF4 0" />
+      <gd name="xE4" fmla="+- xA4 0 dxF4" />
+      <gd name="yE4" fmla="+- yA4 0 dyF4" />
+
+
+      <gd name="yC4t" fmla="sin th a4" />
+      <gd name="xC4t" fmla="cos th a4" />
+      <gd name="yC4" fmla="+- yF4 yC4t 0" />
+      <gd name="xC4" fmla="+- xF4 0 xC4t" />
+
+
+      <gd name="yB4" fmla="+- yE4 yC4t 0" />
+      <gd name="xB4" fmla="+- xE4 0 xC4t" />
+
+      <gd name="swAng3" fmla="+- bA4 0 bD3" />
+
+
+      <gd name="aA5" fmla="+- 6600000 0 ha" />
+      <gd name="aD5" fmla="+- 6600000 ha 0" />
+
+      <gd name="ta51" fmla="cos rw aA5" />
+      <gd name="ta52" fmla="sin rh aA5" />
+      <gd name="bA5" fmla="at2 ta51 ta52" />
+
+      <gd name="td51" fmla="cos rw aD5" />
+      <gd name="td52" fmla="sin rh aD5" />
+      <gd name="bD5" fmla="at2 td51 td52" />
+
+
+      <gd name="xD5" fmla="+- w 0 xA4" />
+
+
+      <gd name="xC5" fmla="+- w 0 xB4" />
+
+
+      <gd name="xB5" fmla="+- w 0 xC4" />
+
+      <gd name="swAng4" fmla="+- bA5 0 bD4" />
+
+
+      <gd name="aD6" fmla="+- 9000000 ha 0" />
+
+      <gd name="td61" fmla="cos rw aD6" />
+      <gd name="td62" fmla="sin rh aD6" />
+      <gd name="bD6" fmla="at2 td61 td62" />
+
+
+      <gd name="xD6" fmla="+- w 0 xA3" />
+
+
+      <gd name="xC6" fmla="+- w 0 xB3" />
+
+
+      <gd name="xB6" fmla="+- w 0 xC3" />
+
+
+      <gd name="aD7" fmla="+- 11400000 ha 0" />
+
+      <gd name="td71" fmla="cos rw aD7" />
+      <gd name="td72" fmla="sin rh aD7" />
+      <gd name="bD7" fmla="at2 td71 td72" />
+
+
+      <gd name="xD7" fmla="+- w 0 xA2" />
+
+
+      <gd name="xC7" fmla="+- w 0 xB2" />
+
+
+      <gd name="xB7" fmla="+- w 0 xC2" />
+
+
+      <gd name="aD8" fmla="+- 13800000 ha 0" />
+
+      <gd name="td81" fmla="cos rw aD8" />
+      <gd name="td82" fmla="sin rh aD8" />
+      <gd name="bD8" fmla="at2 td81 td82" />
+
+
+      <gd name="xA8" fmla="+- w 0 xD1" />
+
+      <gd name="xD8" fmla="+- w 0 xA1" />
+
+
+      <gd name="xC8" fmla="+- w 0 xB1" />
+
+
+      <gd name="xB8" fmla="+- w 0 xC1" />
+
+
+      <gd name="aA9" fmla="+- 3cd4 0 ha" />
+      <gd name="aD9" fmla="+- 3cd4 ha 0" />
+
+
+      <gd name="td91" fmla="cos rw aD9" />
+      <gd name="td92" fmla="sin rh aD9" />
+      <gd name="bD9" fmla="at2 td91 td92" />
+
+      <gd name="ctd9" fmla="cos rh bD9" />
+      <gd name="std9" fmla="sin rw bD9" />
+      <gd name="md9" fmla="mod ctd9 std9 0" />
+      <gd name="nd9" fmla="*/ rw rh md9" />
+      <gd name="dxd9" fmla="cos nd9 bD9" />
+      <gd name="dyd9" fmla="sin nd9 bD9" />
+      <gd name="xD9" fmla="+- hc dxd9 0" />
+      <gd name="yD9" fmla="+- vc dyd9 0" />
+
+
+      <gd name="ta91" fmla="cos rw aA9" />
+      <gd name="ta92" fmla="sin rh aA9" />
+      <gd name="bA9" fmla="at2 ta91 ta92" />
+
+      <gd name="xA9" fmla="+- hc 0 dxd9" />
+
+
+      <gd name="xF9" fmla="+- xD9 0 lFD" />
+      <gd name="xE9" fmla="+- xA9 lFD 0" />
+
+
+      <gd name="yC9" fmla="+- yD9 0 th" />
+
+      <gd name="swAng5" fmla="+- bA9 0 bD8" />
+
+
+      <gd name="xCxn1" fmla="+/ xB1 xC1 2" />
+      <gd name="yCxn1" fmla="+/ yB1 yC1 2" />
+      <gd name="xCxn2" fmla="+/ xB2 xC2 2" />
+      <gd name="yCxn2" fmla="+/ yB2 yC2 2" />
+      <gd name="xCxn3" fmla="+/ xB3 xC3 2" />
+      <gd name="yCxn3" fmla="+/ yB3 yC3 2" />
+      <gd name="xCxn4" fmla="+/ xB4 xC4 2" />
+      <gd name="yCxn4" fmla="+/ yB4 yC4 2" />
+      <gd name="xCxn5" fmla="+/ r 0 xCxn4" />
+      <gd name="xCxn6" fmla="+/ r 0 xCxn3" />
+      <gd name="xCxn7" fmla="+/ r 0 xCxn2" />
+      <gd name="xCxn8" fmla="+/ r 0 xCxn1" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="20000">
+        <pos x="xD9" y="yD9" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="2679">
+        <pos x="xA9" y="yD9" />
+      </ahXY>
+
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="18600000">
+        <pos x="xCxn1" y="yCxn1" />
+      </cxn>
+
+      <cxn ang="21000000">
+        <pos x="xCxn2" y="yCxn2" />
+      </cxn>
+
+      <cxn ang="1800000">
+        <pos x="xCxn3" y="yCxn3" />
+      </cxn>
+
+      <cxn ang="4200000">
+        <pos x="xCxn4" y="yCxn4" />
+      </cxn>
+
+      <cxn ang="6600000">
+        <pos x="xCxn5" y="yCxn4" />
+      </cxn>
+
+      <cxn ang="9000000">
+        <pos x="xCxn6" y="yCxn3" />
+      </cxn>
+
+      <cxn ang="11400000">
+        <pos x="xCxn7" y="yCxn2" />
+      </cxn>
+
+      <cxn ang="13800000">
+        <pos x="xCxn8" y="yCxn1" />
+      </cxn>
+
+      <cxn ang="3cd4">
+        <pos x="hc" y="yC9" />
+      </cxn>
+
+    </cxnLst>
+
+    <rect l="xA8" t="yD1" r="xD1" b="yD3" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="xA1" y="yA1" />
+        </moveTo>
+        <lnTo>
+          <pt x="xB1" y="yB1" />
+        </lnTo>
+        <lnTo>
+          <pt x="xC1" y="yC1" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD1" y="yD1" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD1" swAng="swAng1" />
+
+        <lnTo>
+          <pt x="xB2" y="yB2" />
+        </lnTo>
+        <lnTo>
+          <pt x="xC2" y="yC2" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD2" y="yD2" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD2" swAng="swAng2" />
+
+        <lnTo>
+          <pt x="xB3" y="yB3" />
+        </lnTo>
+        <lnTo>
+          <pt x="xC3" y="yC3" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD3" y="yD3" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD3" swAng="swAng3" />
+
+        <lnTo>
+          <pt x="xB4" y="yB4" />
+        </lnTo>
+        <lnTo>
+          <pt x="xC4" y="yC4" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD4" y="yD4" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD4" swAng="swAng4" />
+
+        <lnTo>
+          <pt x="xB5" y="yC4" />
+        </lnTo>
+        <lnTo>
+          <pt x="xC5" y="yB4" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD5" y="yA4" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD5" swAng="swAng3" />
+
+        <lnTo>
+          <pt x="xB6" y="yC3" />
+        </lnTo>
+        <lnTo>
+          <pt x="xC6" y="yB3" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD6" y="yA3" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD6" swAng="swAng2" />
+
+        <lnTo>
+          <pt x="xB7" y="yC2" />
+        </lnTo>
+        <lnTo>
+          <pt x="xC7" y="yB2" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD7" y="yA2" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD7" swAng="swAng1" />
+
+        <lnTo>
+          <pt x="xB8" y="yC1" />
+        </lnTo>
+        <lnTo>
+          <pt x="xC8" y="yB1" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD8" y="yA1" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD8" swAng="swAng5" />
+
+        <lnTo>
+          <pt x="xE9" y="yC9" />
+        </lnTo>
+        <lnTo>
+          <pt x="xF9" y="yC9" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD9" y="yD9" />
+        </lnTo>
+        <arcTo hR="rh" wR="rw" stAng="bD9" swAng="swAng5" />
+        <close />
+      </path>
+    </pathLst>
+
+  </gear9>
+  <halfFrame>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 33333" />
+
+      <gd name="adj2" fmla="val 33333" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 100000 w ss" />
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="x1" fmla="*/ ss a2 100000" />
+      <gd name="g1" fmla="*/ h x1 w" />
+      <gd name="g2" fmla="+- h 0 g1" />
+      <gd name="maxAdj1" fmla="*/ 100000 g2 ss" />
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="y1" fmla="*/ ss a1 100000" />
+      <gd name="dx2" fmla="*/ y1 w h" />
+      <gd name="x2" fmla="+- r 0 dx2" />
+      <gd name="dy2" fmla="*/ x1 h w" />
+      <gd name="y2" fmla="+- b 0 dy2" />
+      <gd name="cx1" fmla="*/ x1 1 2" />
+      <gd name="cy1" fmla="+/ y2 b 2" />
+      <gd name="cx2" fmla="+/ x2 r 2" />
+      <gd name="cy2" fmla="*/ y1 1 2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="maxAdj1">
+        <pos x="l" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="cx2" y="cy2" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="cx1" y="cy1" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </halfFrame>
+  <heart>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dx1" fmla="*/ w 49 48" />
+      <gd name="dx2" fmla="*/ w 10 48" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x3" fmla="+- hc dx2 0" />
+      <gd name="x4" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- t 0 hd3" />
+
+
+      <gd name="il" fmla="*/ w 1 6" />
+      <gd name="ir" fmla="*/ w 5 6" />
+      <gd name="ib" fmla="*/ h 2 3" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="hd4" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="hd4" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="hc" y="hd4" />
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x3" y="y1" />
+          <pt x="x4" y="hd4" />
+          <pt x="hc" y="b" />
+        </cubicBezTo>
+        <cubicBezTo>
+          <pt x="x1" y="hd4" />
+          <pt x="x2" y="y1" />
+          <pt x="hc" y="hd4" />
+        </cubicBezTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </heart>
+  <heptagon>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="hf" fmla="val 102572" />
+      <gd name="vf" fmla="val 105210" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="swd2" fmla="*/ wd2 hf 100000" />
+      <gd name="shd2" fmla="*/ hd2 vf 100000" />
+      <gd name="svc" fmla="*/ vc  vf 100000" />
+      <gd name="dx1" fmla="*/ swd2 97493 100000" />
+      <gd name="dx2" fmla="*/ swd2 78183 100000" />
+      <gd name="dx3" fmla="*/ swd2 43388 100000" />
+      <gd name="dy1" fmla="*/ shd2 62349 100000" />
+      <gd name="dy2" fmla="*/ shd2 22252 100000" />
+      <gd name="dy3" fmla="*/ shd2 90097 100000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x3" fmla="+- hc 0 dx3" />
+      <gd name="x4" fmla="+- hc dx3 0" />
+      <gd name="x5" fmla="+- hc dx2 0" />
+      <gd name="x6" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- svc 0 dy1" />
+      <gd name="y2" fmla="+- svc dy2 0" />
+      <gd name="y3" fmla="+- svc dy3 0" />
+      <gd name="ib" fmla="+- b 0 y1" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x5" y="y1" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x6" y="y2" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x4" y="y3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="y3" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x2" y="y1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x2" t="y1" r="x5" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </heptagon>
+  <hexagon>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 25000" />
+      <gd name="vf" fmla="val 115470" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj" fmla="*/ 50000 w ss" />
+      <gd name="a" fmla="pin 0 adj maxAdj" />
+      <gd name="shd2" fmla="*/ hd2 vf 100000" />
+      <gd name="x1" fmla="*/ ss a 100000" />
+      <gd name="x2" fmla="+- r 0 x1" />
+      <gd name="dy1" fmla="sin shd2 3600000" />
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc dy1 0" />
+      <gd name="q1" fmla="*/ maxAdj -1 2" />
+      <gd name="q2" fmla="+- a q1 0" />
+      <gd name="q3" fmla="?: q2 4 2" />
+      <gd name="q4" fmla="?: q2 3 2" />
+      <gd name="q5" fmla="?: q2 q1 0" />
+      <gd name="q6" fmla="+/ a q5 q1" />
+      <gd name="q7" fmla="*/ q6 q4 -1" />
+      <gd name="q8" fmla="+- q3 q7 0" />
+      <gd name="il" fmla="*/ w q8 24" />
+      <gd name="it" fmla="*/ h q8 24" />
+      <gd name="ir" fmla="+- r 0 il" />
+      <gd name="ib" fmla="+- b 0 it" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="maxAdj">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x2" y="y2" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x1" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x1" y="y1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x2" y="y1" />
+      </cxn>
+    </cxnLst>
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </hexagon>
+  <homePlate>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj" fmla="*/ 100000 w ss" />
+      <gd name="a" fmla="pin 0 adj maxAdj" />
+      <gd name="dx1" fmla="*/ ss a 100000" />
+      <gd name="x1" fmla="+- r 0 dx1" />
+      <gd name="ir" fmla="+/ x1 r 2" />
+      <gd name="x2" fmla="*/ x1 1 2" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="maxAdj">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x2" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x1" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="ir" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </homePlate>
+  <horizontalScroll>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 12500" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 25000" />
+      <gd name="ch" fmla="*/ ss a 100000" />
+
+      <gd name="ch2" fmla="*/ ch 1 2" />
+
+      <gd name="ch4" fmla="*/ ch 1 4" />
+
+
+
+
+
+      <gd name="y3" fmla="+- ch ch2 0" />
+
+      <gd name="y4" fmla="+- ch ch 0" />
+
+      <gd name="y6" fmla="+- b 0 ch" />
+
+      <gd name="y7" fmla="+- b 0 ch2" />
+
+      <gd name="y5" fmla="+- y6 0 ch2" />
+
+
+
+
+
+      <gd name="x3" fmla="+- r 0 ch" />
+
+      <gd name="x4" fmla="+- r 0 ch2" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="25000">
+        <pos x="ch" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd4">
+        <pos x="hc" y="ch" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="y6" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="ch" t="ch" r="x4" b="y6" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="r" y="ch2" />
+        </moveTo>
+        <arcTo wR="ch2" hR="ch2" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="x4" y="ch2" />
+        </lnTo>
+        <arcTo wR="ch4" hR="ch4" stAng="0" swAng="cd2" />
+        <lnTo>
+          <pt x="x3" y="ch" />
+        </lnTo>
+        <lnTo>
+          <pt x="ch2" y="ch" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="3cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="l" y="y7" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="cd2" swAng="-10800000" />
+        <lnTo>
+          <pt x="ch" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y6" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="cd4" swAng="-5400000" />
+        <close />
+        <moveTo>
+          <pt x="ch2" y="y4" />
+        </moveTo>
+        <arcTo wR="ch2" hR="ch2" stAng="cd4" swAng="-5400000" />
+        <arcTo wR="ch4" hR="ch4" stAng="0" swAng="-10800000" />
+        <close />
+      </path>
+      <path fill="darkenLess" stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="ch2" y="y4" />
+        </moveTo>
+        <arcTo wR="ch2" hR="ch2" stAng="cd4" swAng="-5400000" />
+        <arcTo wR="ch4" hR="ch4" stAng="0" swAng="-10800000" />
+        <close />
+        <moveTo>
+          <pt x="x4" y="ch" />
+        </moveTo>
+        <arcTo wR="ch2" hR="ch2" stAng="cd4" swAng="-16200000" />
+        <arcTo wR="ch4" hR="ch4" stAng="cd2" swAng="-10800000" />
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="y3" />
+        </moveTo>
+        <arcTo wR="ch2" hR="ch2" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="x3" y="ch" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="ch2" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="cd2" swAng="cd2" />
+        <lnTo>
+          <pt x="r" y="y5" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="ch" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="ch" y="y7" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="0" swAng="cd2" />
+        <close />
+        <moveTo>
+          <pt x="x3" y="ch" />
+        </moveTo>
+        <lnTo>
+          <pt x="x4" y="ch" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="cd4" swAng="-5400000" />
+        <moveTo>
+          <pt x="x4" y="ch" />
+        </moveTo>
+        <lnTo>
+          <pt x="x4" y="ch2" />
+        </lnTo>
+        <arcTo wR="ch4" hR="ch4" stAng="0" swAng="cd2" />
+        <moveTo>
+          <pt x="ch2" y="y4" />
+        </moveTo>
+        <lnTo>
+          <pt x="ch2" y="y3" />
+        </lnTo>
+        <arcTo wR="ch4" hR="ch4" stAng="cd2" swAng="cd2" />
+        <arcTo wR="ch2" hR="ch2" stAng="0" swAng="cd2" />
+        <moveTo>
+          <pt x="ch" y="y3" />
+        </moveTo>
+        <lnTo>
+          <pt x="ch" y="y6" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </horizontalScroll>
+  <irregularSeal1>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x5" fmla="*/ w 4627 21600" />
+      <gd name="x12" fmla="*/ w 8485 21600" />
+      <gd name="x21" fmla="*/ w 16702 21600" />
+      <gd name="x24" fmla="*/ w 14522 21600" />
+      <gd name="y3" fmla="*/ h 6320 21600" />
+      <gd name="y6" fmla="*/ h 8615 21600" />
+      <gd name="y9" fmla="*/ h 13937 21600" />
+      <gd name="y18" fmla="*/ h 13290 21600" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x24" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y6" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x12" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y18" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x5" t="y3" r="x21" b="y9" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="21600" h="21600">
+        <moveTo>
+          <pt x="10800" y="5800" />
+        </moveTo>
+        <lnTo>
+          <pt x="14522" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="14155" y="5325" />
+        </lnTo>
+        <lnTo>
+          <pt x="18380" y="4457" />
+        </lnTo>
+        <lnTo>
+          <pt x="16702" y="7315" />
+        </lnTo>
+        <lnTo>
+          <pt x="21097" y="8137" />
+        </lnTo>
+        <lnTo>
+          <pt x="17607" y="10475" />
+        </lnTo>
+        <lnTo>
+          <pt x="21600" y="13290" />
+        </lnTo>
+        <lnTo>
+          <pt x="16837" y="12942" />
+        </lnTo>
+        <lnTo>
+          <pt x="18145" y="18095" />
+        </lnTo>
+        <lnTo>
+          <pt x="14020" y="14457" />
+        </lnTo>
+        <lnTo>
+          <pt x="13247" y="19737" />
+        </lnTo>
+        <lnTo>
+          <pt x="10532" y="14935" />
+        </lnTo>
+        <lnTo>
+          <pt x="8485" y="21600" />
+        </lnTo>
+        <lnTo>
+          <pt x="7715" y="15627" />
+        </lnTo>
+        <lnTo>
+          <pt x="4762" y="17617" />
+        </lnTo>
+        <lnTo>
+          <pt x="5667" y="13937" />
+        </lnTo>
+        <lnTo>
+          <pt x="135" y="14587" />
+        </lnTo>
+        <lnTo>
+          <pt x="3722" y="11775" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="8615" />
+        </lnTo>
+        <lnTo>
+          <pt x="4627" y="7617" />
+        </lnTo>
+        <lnTo>
+          <pt x="370" y="2295" />
+        </lnTo>
+        <lnTo>
+          <pt x="7312" y="6320" />
+        </lnTo>
+        <lnTo>
+          <pt x="8352" y="2295" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </irregularSeal1>
+  <irregularSeal2>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x2" fmla="*/ w 9722 21600" />
+      <gd name="x5" fmla="*/ w 5372 21600" />
+      <gd name="x16" fmla="*/ w 11612 21600" />
+      <gd name="x19" fmla="*/ w 14640 21600" />
+      <gd name="y2" fmla="*/ h 1887 21600" />
+      <gd name="y3" fmla="*/ h 6382 21600" />
+      <gd name="y8" fmla="*/ h 12877 21600" />
+      <gd name="y14" fmla="*/ h 19712 21600" />
+      <gd name="y16" fmla="*/ h 18842 21600" />
+      <gd name="y17" fmla="*/ h 15935 21600" />
+      <gd name="y24" fmla="*/ h 6645 21600" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x2" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y8" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x16" y="y16" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y24" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x5" t="y3" r="x19" b="y17" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="21600" h="21600">
+        <moveTo>
+          <pt x="11462" y="4342" />
+        </moveTo>
+        <lnTo>
+          <pt x="14790" y="0" />
+        </lnTo>
+        <lnTo>
+          <pt x="14525" y="5777" />
+        </lnTo>
+        <lnTo>
+          <pt x="18007" y="3172" />
+        </lnTo>
+        <lnTo>
+          <pt x="16380" y="6532" />
+        </lnTo>
+        <lnTo>
+          <pt x="21600" y="6645" />
+        </lnTo>
+        <lnTo>
+          <pt x="16985" y="9402" />
+        </lnTo>
+        <lnTo>
+          <pt x="18270" y="11290" />
+        </lnTo>
+        <lnTo>
+          <pt x="16380" y="12310" />
+        </lnTo>
+        <lnTo>
+          <pt x="18877" y="15632" />
+        </lnTo>
+        <lnTo>
+          <pt x="14640" y="14350" />
+        </lnTo>
+        <lnTo>
+          <pt x="14942" y="17370" />
+        </lnTo>
+        <lnTo>
+          <pt x="12180" y="15935" />
+        </lnTo>
+        <lnTo>
+          <pt x="11612" y="18842" />
+        </lnTo>
+        <lnTo>
+          <pt x="9872" y="17370" />
+        </lnTo>
+        <lnTo>
+          <pt x="8700" y="19712" />
+        </lnTo>
+        <lnTo>
+          <pt x="7527" y="18125" />
+        </lnTo>
+        <lnTo>
+          <pt x="4917" y="21600" />
+        </lnTo>
+        <lnTo>
+          <pt x="4805" y="18240" />
+        </lnTo>
+        <lnTo>
+          <pt x="1285" y="17825" />
+        </lnTo>
+        <lnTo>
+          <pt x="3330" y="15370" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="12877" />
+        </lnTo>
+        <lnTo>
+          <pt x="3935" y="11592" />
+        </lnTo>
+        <lnTo>
+          <pt x="1172" y="8270" />
+        </lnTo>
+        <lnTo>
+          <pt x="5372" y="7817" />
+        </lnTo>
+        <lnTo>
+          <pt x="4502" y="3625" />
+        </lnTo>
+        <lnTo>
+          <pt x="8550" y="6382" />
+        </lnTo>
+        <lnTo>
+          <pt x="9722" y="1887" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </irregularSeal2>
+  <leftArrow>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+      <gd name="adj2" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 100000 w ss" />
+      <gd name="a1" fmla="pin 0 adj1 100000" />
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="dx2" fmla="*/ ss a2 100000" />
+      <gd name="x2" fmla="+- l dx2 0" />
+      <gd name="dy1" fmla="*/ h a1 200000" />
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc dy1 0" />
+      <gd name="dx1" fmla="*/ y1 dx2 hd2" />
+      <gd name="x1" fmla="+- x2  0 dx1" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="100000">
+        <pos x="r" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="x2" y="t" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x2" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x2" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+    <rect l="x1" t="y1" r="r" b="y2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </leftArrow>
+  <leftArrowCallout>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 25000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+      <gd name="adj4" fmla="val 64977" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 50000 h ss" />
+
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="maxAdj1" fmla="*/ a2 2 1" />
+
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="maxAdj3" fmla="*/ 100000 w ss" />
+
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="q2" fmla="*/ a3 ss w" />
+
+      <gd name="maxAdj4" fmla="+- 100000 0 q2" />
+
+      <gd name="a4" fmla="pin 0 adj4 maxAdj4" />
+      <gd name="dy1" fmla="*/ ss a2 100000" />
+
+      <gd name="dy2" fmla="*/ ss a1 200000" />
+
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc 0 dy2" />
+      <gd name="y3" fmla="+- vc dy2 0" />
+      <gd name="y4" fmla="+- vc dy1 0" />
+      <gd name="x1" fmla="*/ ss a3 100000" />
+
+      <gd name="dx2" fmla="*/ w a4 100000" />
+
+      <gd name="x2" fmla="+- r 0 dx2" />
+      <gd name="x3" fmla="+/ x2 r 2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="maxAdj1">
+        <pos x="x1" y="y2" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="0" maxY="maxAdj2">
+        <pos x="l" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj3" minX="0" maxX="maxAdj3">
+        <pos x="x1" y="t" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="0" maxX="maxAdj4">
+        <pos x="x2" y="b" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x3" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x2" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </leftArrowCallout>
+  <leftBrace>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 8333" />
+      <gd name="adj2" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a2" fmla="pin 0 adj2 100000" />
+      <gd name="q1" fmla="+- 100000 0 a2" />
+      <gd name="q2" fmla="min q1 a2" />
+      <gd name="q3" fmla="*/ q2 1 2" />
+      <gd name="maxAdj1" fmla="*/ q3 h ss" />
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="y1" fmla="*/ ss a1 100000" />
+      <gd name="y3" fmla="*/ h a2 100000" />
+      <gd name="y4" fmla="+- y3 y1 0" />
+      <gd name="dx1" fmla="cos wd2 2700000" />
+      <gd name="dy1" fmla="sin y1 2700000" />
+      <gd name="il" fmla="+- r 0 dx1" />
+      <gd name="it" fmla="+- y1 0 dy1" />
+      <gd name="ib" fmla="+- b dy1 y1" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="maxAdj1">
+        <pos x="hc" y="y1" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="0" maxY="100000">
+        <pos x="l" y="y3" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd4">
+        <pos x="r" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y3" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="r" y="b" />
+      </cxn>
+    </cxnLst>
+    <rect l="il" t="it" r="r" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="r" y="b" />
+        </moveTo>
+        <arcTo wR="wd2" hR="y1" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="hc" y="y4" />
+        </lnTo>
+        <arcTo wR="wd2" hR="y1" stAng="0" swAng="-5400000" />
+        <arcTo wR="wd2" hR="y1" stAng="cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="hc" y="y1" />
+        </lnTo>
+        <arcTo wR="wd2" hR="y1" stAng="cd2" swAng="cd4" />
+        <close />
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="r" y="b" />
+        </moveTo>
+        <arcTo wR="wd2" hR="y1" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="hc" y="y4" />
+        </lnTo>
+        <arcTo wR="wd2" hR="y1" stAng="0" swAng="-5400000" />
+        <arcTo wR="wd2" hR="y1" stAng="cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="hc" y="y1" />
+        </lnTo>
+        <arcTo wR="wd2" hR="y1" stAng="cd2" swAng="cd4" />
+      </path>
+    </pathLst>
+  </leftBrace>
+  <leftBracket>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 8333" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj" fmla="*/ 50000 h ss" />
+
+      <gd name="a" fmla="pin 0 adj maxAdj" />
+      <gd name="y1" fmla="*/ ss a 100000" />
+
+      <gd name="y2" fmla="+- b 0 y1" />
+
+      <gd name="dx1" fmla="cos w 2700000" />
+      <gd name="dy1" fmla="sin y1 2700000" />
+      <gd name="il" fmla="+- r 0 dx1" />
+      <gd name="it" fmla="+- y1 0 dy1" />
+      <gd name="ib" fmla="+- b dy1 y1" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="maxAdj">
+        <pos x="l" y="y1" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd4">
+        <pos x="r" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="r" y="b" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="r" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="r" y="b" />
+        </moveTo>
+        <arcTo wR="w" hR="y1" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="l" y="y1" />
+        </lnTo>
+        <arcTo wR="w" hR="y1" stAng="cd2" swAng="cd4" />
+        <close />
+      </path>
+      <path fill="none">
+
+        <moveTo>
+          <pt x="r" y="b" />
+        </moveTo>
+        <arcTo wR="w" hR="y1" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="l" y="y1" />
+        </lnTo>
+        <arcTo wR="w" hR="y1" stAng="cd2" swAng="cd4" />
+      </path>
+    </pathLst>
+
+  </leftBracket>
+  <leftCircularArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 12500" />
+
+      <gd name="adj2" fmla="val -1142319" />
+
+      <gd name="adj3" fmla="val 1142319" />
+
+      <gd name="adj4" fmla="val 10800000" />
+
+      <gd name="adj5" fmla="val 12500" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a5" fmla="pin 0 adj5 25000" />
+
+      <gd name="maxAdj1" fmla="*/ a5 2 1" />
+
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="enAng" fmla="pin 1 adj3 21599999" />
+      <gd name="stAng" fmla="pin 0 adj4 21599999" />
+
+      <gd name="th" fmla="*/ ss a1 100000" />
+
+      <gd name="thh" fmla="*/ ss a5 100000" />
+
+      <gd name="th2" fmla="*/ th 1 2" />
+
+
+      <gd name="rw1" fmla="+- wd2 th2 thh" />
+
+      <gd name="rh1" fmla="+- hd2 th2 thh" />
+
+      <gd name="rw2" fmla="+- rw1 0 th" />
+
+      <gd name="rh2" fmla="+- rh1 0 th" />
+
+      <gd name="rw3" fmla="+- rw2 th2 0" />
+
+      <gd name="rh3" fmla="+- rh2 th2 0" />
+
+
+      <gd name="wtH" fmla="sin rw3 enAng" />
+      <gd name="htH" fmla="cos rh3 enAng" />
+      <gd name="dxH" fmla="cat2 rw3 htH wtH" />
+      <gd name="dyH" fmla="sat2 rh3 htH wtH" />
+      <gd name="xH" fmla="+- hc dxH 0" />
+
+      <gd name="yH" fmla="+- vc dyH 0" />
+
+
+      <gd name="rI" fmla="min rw2 rh2" />
+
+      <gd name="u1" fmla="*/ dxH dxH 1" />
+      <gd name="u2" fmla="*/ dyH dyH 1" />
+      <gd name="u3" fmla="*/ rI rI 1" />
+      <gd name="u4" fmla="+- u1 0 u3" />
+      <gd name="u5" fmla="+- u2 0 u3" />
+      <gd name="u6" fmla="*/ u4 u5 u1" />
+      <gd name="u7" fmla="*/ u6 1 u2" />
+      <gd name="u8" fmla="+- 1 0 u7" />
+      <gd name="u9" fmla="sqrt u8" />
+      <gd name="u10" fmla="*/ u4 1 dxH" />
+      <gd name="u11" fmla="*/ u10 1 dyH" />
+      <gd name="u12" fmla="+/ 1 u9 u11" />
+      <gd name="u13" fmla="at2 1 u12" />
+      <gd name="u14" fmla="+- u13 21600000 0" />
+      <gd name="u15" fmla="?: u13 u13 u14" />
+      <gd name="u16" fmla="+- u15 0 enAng" />
+
+      <gd name="u17" fmla="+- u16 21600000 0" />
+      <gd name="u18" fmla="?: u16 u16 u17" />
+      <gd name="u19" fmla="+- u18 0 cd2" />
+      <gd name="u20" fmla="+- u18 0 21600000" />
+      <gd name="u21" fmla="?: u19 u20 u18" />
+      <gd name="u22" fmla="abs u21" />
+      <gd name="minAng" fmla="*/ u22 -1 1" />
+      <gd name="u23" fmla="abs adj2" />
+      <gd name="a2" fmla="*/ u23 -1 1" />
+      <gd name="aAng" fmla="pin minAng a2 0" />
+
+      <gd name="ptAng" fmla="+- enAng aAng 0" />
+
+
+      <gd name="wtA" fmla="sin rw3 ptAng" />
+      <gd name="htA" fmla="cos rh3 ptAng" />
+      <gd name="dxA" fmla="cat2 rw3 htA wtA" />
+      <gd name="dyA" fmla="sat2 rh3 htA wtA" />
+      <gd name="xA" fmla="+- hc dxA 0" />
+
+      <gd name="yA" fmla="+- vc dyA 0" />
+
+
+      <gd name="wtE" fmla="sin rw1 stAng" />
+      <gd name="htE" fmla="cos rh1 stAng" />
+      <gd name="dxE" fmla="cat2 rw1 htE wtE" />
+      <gd name="dyE" fmla="sat2 rh1 htE wtE" />
+      <gd name="xE" fmla="+- hc dxE 0" />
+
+      <gd name="yE" fmla="+- vc dyE 0" />
+
+
+      <gd name="wtD" fmla="sin rw2 stAng" />
+      <gd name="htD" fmla="cos rh2 stAng" />
+      <gd name="dxD" fmla="cat2 rw2 htD wtD" />
+      <gd name="dyD" fmla="sat2 rh2 htD wtD" />
+      <gd name="xD" fmla="+- hc dxD 0" />
+
+      <gd name="yD" fmla="+- vc dyD 0" />
+
+
+      <gd name="dxG" fmla="cos thh ptAng" />
+      <gd name="dyG" fmla="sin thh ptAng" />
+      <gd name="xG" fmla="+- xH dxG 0" />
+
+      <gd name="yG" fmla="+- yH dyG 0" />
+
+
+      <gd name="dxB" fmla="cos thh ptAng" />
+      <gd name="dyB" fmla="sin thh ptAng" />
+      <gd name="xB" fmla="+- xH 0 dxB 0" />
+
+      <gd name="yB" fmla="+- yH 0 dyB 0" />
+
+
+      <gd name="sx1" fmla="+- xB 0 hc" />
+
+      <gd name="sy1" fmla="+- yB 0 vc" />
+
+      <gd name="sx2" fmla="+- xG 0 hc" />
+
+      <gd name="sy2" fmla="+- yG 0 vc" />
+
+
+      <gd name="rO" fmla="min rw1 rh1" />
+
+      <gd name="x1O" fmla="*/ sx1 rO rw1" />
+
+      <gd name="y1O" fmla="*/ sy1 rO rh1" />
+
+      <gd name="x2O" fmla="*/ sx2 rO rw1" />
+
+      <gd name="y2O" fmla="*/ sy2 rO rh1" />
+
+
+      <gd name="dxO" fmla="+- x2O 0 x1O" />
+      <gd name="dyO" fmla="+- y2O 0 y1O" />
+      <gd name="dO" fmla="mod dxO dyO 0" />
+
+      <gd name="q1" fmla="*/ x1O y2O 1" />
+      <gd name="q2" fmla="*/ x2O y1O 1" />
+      <gd name="DO" fmla="+- q1 0 q2" />
+
+
+      <gd name="q3" fmla="*/ rO rO 1" />
+
+      <gd name="q4" fmla="*/ dO dO 1" />
+
+      <gd name="q5" fmla="*/ q3 q4 1" />
+
+      <gd name="q6" fmla="*/ DO DO 1" />
+
+      <gd name="q7" fmla="+- q5 0 q6" />
+
+      <gd name="q8" fmla="max q7 0" />
+
+      <gd name="sdelO" fmla="sqrt q8" />
+
+      <gd name="ndyO" fmla="*/ dyO -1 1" />
+      <gd name="sdyO" fmla="?: ndyO -1 1" />
+
+      <gd name="q9" fmla="*/ sdyO dxO 1" />
+
+      <gd name="q10" fmla="*/ q9 sdelO 1" />
+
+      <gd name="q11" fmla="*/ DO dyO 1" />
+
+      <gd name="dxF1" fmla="+/ q11 q10 q4" />
+
+      <gd name="q12" fmla="+- q11 0 q10" />
+      <gd name="dxF2" fmla="*/ q12 1 q4" />
+
+
+      <gd name="adyO" fmla="abs dyO" />
+      <gd name="q13" fmla="*/ adyO sdelO 1" />
+
+      <gd name="q14" fmla="*/ DO dxO -1" />
+
+      <gd name="dyF1" fmla="+/ q14 q13 q4" />
+
+      <gd name="q15" fmla="+- q14 0 q13" />
+      <gd name="dyF2" fmla="*/ q15 1 q4" />
+
+
+
+      <gd name="q16" fmla="+- x2O 0 dxF1" />
+      <gd name="q17" fmla="+- x2O 0 dxF2" />
+      <gd name="q18" fmla="+- y2O 0 dyF1" />
+      <gd name="q19" fmla="+- y2O 0 dyF2" />
+      <gd name="q20" fmla="mod q16 q18 0" />
+
+      <gd name="q21" fmla="mod q17 q19 0" />
+
+      <gd name="q22" fmla="+- q21 0 q20" />
+      <gd name="dxF" fmla="?: q22 dxF1 dxF2" />
+
+      <gd name="dyF" fmla="?: q22 dyF1 dyF2" />
+
+      <gd name="sdxF" fmla="*/ dxF rw1 rO" />
+
+      <gd name="sdyF" fmla="*/ dyF rh1 rO" />
+
+      <gd name="xF" fmla="+- hc sdxF 0" />
+
+      <gd name="yF" fmla="+- vc sdyF 0" />
+
+
+
+
+      <gd name="x1I" fmla="*/ sx1 rI rw2" />
+
+      <gd name="y1I" fmla="*/ sy1 rI rh2" />
+
+      <gd name="x2I" fmla="*/ sx2 rI rw2" />
+
+      <gd name="y2I" fmla="*/ sy2 rI rh2" />
+
+
+      <gd name="dxI" fmla="+- x2I 0 x1I" />
+      <gd name="dyI" fmla="+- y2I 0 y1I" />
+      <gd name="dI" fmla="mod dxI dyI 0" />
+      <gd name="v1" fmla="*/ x1I y2I 1" />
+      <gd name="v2" fmla="*/ x2I y1I 1" />
+      <gd name="DI" fmla="+- v1 0 v2" />
+
+      <gd name="v3" fmla="*/ rI rI 1" />
+      <gd name="v4" fmla="*/ dI dI 1" />
+      <gd name="v5" fmla="*/ v3 v4 1" />
+      <gd name="v6" fmla="*/ DI DI 1" />
+      <gd name="v7" fmla="+- v5 0 v6" />
+      <gd name="v8" fmla="max v7 0" />
+      <gd name="sdelI" fmla="sqrt v8" />
+      <gd name="v9" fmla="*/ sdyO dxI 1" />
+      <gd name="v10" fmla="*/ v9 sdelI 1" />
+      <gd name="v11" fmla="*/ DI dyI 1" />
+      <gd name="dxC1" fmla="+/ v11 v10 v4" />
+      <gd name="v12" fmla="+- v11 0 v10" />
+      <gd name="dxC2" fmla="*/ v12 1 v4" />
+
+      <gd name="adyI" fmla="abs dyI" />
+      <gd name="v13" fmla="*/ adyI sdelI 1" />
+      <gd name="v14" fmla="*/ DI dxI -1" />
+      <gd name="dyC1" fmla="+/ v14 v13 v4" />
+      <gd name="v15" fmla="+- v14 0 v13" />
+      <gd name="dyC2" fmla="*/ v15 1 v4" />
+
+      <gd name="v16" fmla="+- x1I 0 dxC1" />
+      <gd name="v17" fmla="+- x1I 0 dxC2" />
+      <gd name="v18" fmla="+- y1I 0 dyC1" />
+      <gd name="v19" fmla="+- y1I 0 dyC2" />
+      <gd name="v20" fmla="mod v16 v18 0" />
+      <gd name="v21" fmla="mod v17 v19 0" />
+      <gd name="v22" fmla="+- v21 0 v20" />
+      <gd name="dxC" fmla="?: v22 dxC1 dxC2" />
+      <gd name="dyC" fmla="?: v22 dyC1 dyC2" />
+      <gd name="sdxC" fmla="*/ dxC rw2 rI" />
+      <gd name="sdyC" fmla="*/ dyC rh2 rI" />
+      <gd name="xC" fmla="+- hc sdxC 0" />
+
+      <gd name="yC" fmla="+- vc sdyC 0" />
+
+
+      <gd name="ist0" fmla="at2 sdxC sdyC" />
+      <gd name="ist1" fmla="+- ist0 21600000 0" />
+      <gd name="istAng0" fmla="?: ist0 ist0 ist1" />
+      <gd name="isw1" fmla="+- stAng 0 istAng0" />
+      <gd name="isw2" fmla="+- isw1 21600000 0" />
+      <gd name="iswAng0" fmla="?: isw1 isw1 isw2" />
+
+      <gd name="istAng" fmla="+- istAng0 iswAng0 0" />
+      <gd name="iswAng" fmla="+- 0 0 iswAng0" />
+
+      <gd name="p1" fmla="+- xF 0 xC" />
+      <gd name="p2" fmla="+- yF 0 yC" />
+      <gd name="p3" fmla="mod p1 p2 0" />
+      <gd name="p4" fmla="*/ p3 1 2" />
+      <gd name="p5" fmla="+- p4 0 thh" />
+      <gd name="xGp" fmla="?: p5 xF xG" />
+      <gd name="yGp" fmla="?: p5 yF yG" />
+      <gd name="xBp" fmla="?: p5 xC xB" />
+      <gd name="yBp" fmla="?: p5 yC yB" />
+
+      <gd name="en0" fmla="at2 sdxF sdyF" />
+      <gd name="en1" fmla="+- en0 21600000 0" />
+      <gd name="en2" fmla="?: en0 en0 en1" />
+      <gd name="sw0" fmla="+- en2 0 stAng" />
+      <gd name="sw1" fmla="+- sw0 0 21600000" />
+      <gd name="swAng" fmla="?: sw0 sw1 sw0" />
+
+
+      <gd name="stAng0" fmla="+- stAng swAng 0" />
+
+      <gd name="swAng0" fmla="+- 0 0 swAng" />
+
+
+      <gd name="wtI" fmla="sin rw3 stAng" />
+      <gd name="htI" fmla="cos rh3 stAng" />
+      <gd name="dxI" fmla="cat2 rw3 htI wtI" />
+      <gd name="dyI" fmla="sat2 rh3 htI wtI" />
+      <gd name="xI" fmla="+- hc dxI 0" />
+
+      <gd name="yI" fmla="+- vc dyI 0" />
+
+
+      <gd name="aI" fmla="+- stAng cd4 0" />
+      <gd name="aA" fmla="+- ptAng 0 cd4" />
+      <gd name="aB" fmla="+- ptAng cd2 0" />
+
+      <gd name="idx" fmla="cos rw1 2700000" />
+      <gd name="idy" fmla="sin rh1 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefAng="adj2" minAng="minAng" maxAng="0">
+        <pos x="xA" y="yA" />
+      </ahPolar>
+      <ahPolar gdRefAng="adj4" minAng="0" maxAng="21599999">
+        <pos x="xE" y="yE" />
+      </ahPolar>
+      <ahPolar gdRefR="adj1" minR="0" maxR="maxAdj1" gdRefAng="adj3" minAng="0" maxAng="21599999">
+        <pos x="xF" y="yF" />
+      </ahPolar>
+      <ahPolar gdRefR="adj5" minR="0" maxR="25000">
+        <pos x="xB" y="yB" />
+      </ahPolar>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="aI">
+        <pos x="xI" y="yI" />
+      </cxn>
+      <cxn ang="ptAng">
+        <pos x="xGp" y="yGp" />
+      </cxn>
+      <cxn ang="aA">
+        <pos x="xA" y="yA" />
+      </cxn>
+      <cxn ang="aB">
+        <pos x="xBp" y="yBp" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="xE" y="yE" />
+        </moveTo>
+        <lnTo>
+          <pt x="xD" y="yD" />
+        </lnTo>
+        <arcTo wR="rw2" hR="rh2" stAng="istAng" swAng="iswAng" />
+        <lnTo>
+          <pt x="xBp" y="yBp" />
+        </lnTo>
+        <lnTo>
+          <pt x="xA" y="yA" />
+        </lnTo>
+        <lnTo>
+          <pt x="xGp" y="yGp" />
+        </lnTo>
+        <lnTo>
+          <pt x="xF" y="yF" />
+        </lnTo>
+        <arcTo wR="rw1" hR="rh1" stAng="stAng0" swAng="swAng0" />
+        <close />
+      </path>
+    </pathLst>
+
+  </leftCircularArrow>
+  <leftRightArrow>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+      <gd name="adj2" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 50000 w ss" />
+      <gd name="a1" fmla="pin 0 adj1 100000" />
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="x2" fmla="*/ ss a2 100000" />
+      <gd name="x3" fmla="+- r 0 x2" />
+      <gd name="dy" fmla="*/ h a1 200000" />
+      <gd name="y1" fmla="+- vc 0 dy" />
+      <gd name="y2" fmla="+- vc dy 0" />
+      <gd name="dx1" fmla="*/ y1 x2 hd2" />
+      <gd name="x1" fmla="+- x2 0 dx1" />
+      <gd name="x4" fmla="+- x3 dx1 0" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="100000">
+        <pos x="x3" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="x2" y="t" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x2" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x2" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x3" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="x1" t="y1" r="x4" b="y2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </leftRightArrow>
+  <leftRightArrowCallout>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 25000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+      <gd name="adj4" fmla="val 48123" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 50000 h ss" />
+
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="maxAdj1" fmla="*/ a2 2 1" />
+
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="maxAdj3" fmla="*/ 50000 w ss" />
+
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="q2" fmla="*/ a3 ss wd2" />
+
+      <gd name="maxAdj4" fmla="+- 100000 0 q2" />
+
+      <gd name="a4" fmla="pin 0 adj4 maxAdj4" />
+      <gd name="dy1" fmla="*/ ss a2 100000" />
+
+      <gd name="dy2" fmla="*/ ss a1 200000" />
+
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc 0 dy2" />
+      <gd name="y3" fmla="+- vc dy2 0" />
+      <gd name="y4" fmla="+- vc dy1 0" />
+      <gd name="x1" fmla="*/ ss a3 100000" />
+
+      <gd name="x4" fmla="+- r 0 x1" />
+
+      <gd name="dx2" fmla="*/ w a4 200000" />
+
+      <gd name="x2" fmla="+- hc 0 dx2" />
+
+      <gd name="x3" fmla="+- hc dx2 0" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="maxAdj1">
+        <pos x="x1" y="y2" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="0" maxY="maxAdj2">
+        <pos x="l" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj3" minX="0" maxX="maxAdj3">
+        <pos x="x1" y="t" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="0" maxX="maxAdj4">
+        <pos x="x2" y="b" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x2" t="t" r="x3" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </leftRightArrowCallout>
+  <leftRightCircularArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 12500" />
+
+      <gd name="adj2" fmla="val 1142319" />
+
+      <gd name="adj3" fmla="val 20457681" />
+
+      <gd name="adj4" fmla="val 11942319" />
+
+      <gd name="adj5" fmla="val 12500" />
+
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a5" fmla="pin 0 adj5 25000" />
+
+      <gd name="maxAdj1" fmla="*/ a5 2 1" />
+
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="enAng" fmla="pin 1 adj3 21599999" />
+      <gd name="stAng" fmla="pin 0 adj4 21599999" />
+
+      <gd name="th" fmla="*/ ss a1 100000" />
+
+      <gd name="thh" fmla="*/ ss a5 100000" />
+
+      <gd name="th2" fmla="*/ th 1 2" />
+
+
+      <gd name="rw1" fmla="+- wd2 th2 thh" />
+
+      <gd name="rh1" fmla="+- hd2 th2 thh" />
+
+      <gd name="rw2" fmla="+- rw1 0 th" />
+
+      <gd name="rh2" fmla="+- rh1 0 th" />
+
+      <gd name="rw3" fmla="+- rw2 th2 0" />
+
+      <gd name="rh3" fmla="+- rh2 th2 0" />
+
+
+      <gd name="wtH" fmla="sin rw3 enAng" />
+      <gd name="htH" fmla="cos rh3 enAng" />
+      <gd name="dxH" fmla="cat2 rw3 htH wtH" />
+      <gd name="dyH" fmla="sat2 rh3 htH wtH" />
+      <gd name="xH" fmla="+- hc dxH 0" />
+
+      <gd name="yH" fmla="+- vc dyH 0" />
+
+
+      <gd name="rI" fmla="min rw2 rh2" />
+
+      <gd name="u1" fmla="*/ dxH dxH 1" />
+      <gd name="u2" fmla="*/ dyH dyH 1" />
+      <gd name="u3" fmla="*/ rI rI 1" />
+      <gd name="u4" fmla="+- u1 0 u3" />
+      <gd name="u5" fmla="+- u2 0 u3" />
+      <gd name="u6" fmla="*/ u4 u5 u1" />
+      <gd name="u7" fmla="*/ u6 1 u2" />
+      <gd name="u8" fmla="+- 1 0 u7" />
+      <gd name="u9" fmla="sqrt u8" />
+      <gd name="u10" fmla="*/ u4 1 dxH" />
+      <gd name="u11" fmla="*/ u10 1 dyH" />
+      <gd name="u12" fmla="+/ 1 u9 u11" />
+      <gd name="u13" fmla="at2 1 u12" />
+      <gd name="u14" fmla="+- u13 21600000 0" />
+      <gd name="u15" fmla="?: u13 u13 u14" />
+      <gd name="u16" fmla="+- u15 0 enAng" />
+
+      <gd name="u17" fmla="+- u16 21600000 0" />
+      <gd name="u18" fmla="?: u16 u16 u17" />
+      <gd name="u19" fmla="+- u18 0 cd2" />
+      <gd name="u20" fmla="+- u18 0 21600000" />
+      <gd name="u21" fmla="?: u19 u20 u18" />
+      <gd name="maxAng" fmla="abs u21" />
+      <gd name="aAng" fmla="pin 0 adj2 maxAng" />
+
+      <gd name="ptAng" fmla="+- enAng aAng 0" />
+
+
+      <gd name="wtA" fmla="sin rw3 ptAng" />
+      <gd name="htA" fmla="cos rh3 ptAng" />
+      <gd name="dxA" fmla="cat2 rw3 htA wtA" />
+      <gd name="dyA" fmla="sat2 rh3 htA wtA" />
+      <gd name="xA" fmla="+- hc dxA 0" />
+
+      <gd name="yA" fmla="+- vc dyA 0" />
+
+
+      <gd name="dxG" fmla="cos thh ptAng" />
+      <gd name="dyG" fmla="sin thh ptAng" />
+      <gd name="xG" fmla="+- xH dxG 0" />
+
+      <gd name="yG" fmla="+- yH dyG 0" />
+
+
+      <gd name="dxB" fmla="cos thh ptAng" />
+      <gd name="dyB" fmla="sin thh ptAng" />
+      <gd name="xB" fmla="+- xH 0 dxB 0" />
+
+      <gd name="yB" fmla="+- yH 0 dyB 0" />
+
+
+      <gd name="sx1" fmla="+- xB 0 hc" />
+
+      <gd name="sy1" fmla="+- yB 0 vc" />
+
+      <gd name="sx2" fmla="+- xG 0 hc" />
+
+      <gd name="sy2" fmla="+- yG 0 vc" />
+
+
+      <gd name="rO" fmla="min rw1 rh1" />
+
+      <gd name="x1O" fmla="*/ sx1 rO rw1" />
+
+      <gd name="y1O" fmla="*/ sy1 rO rh1" />
+
+      <gd name="x2O" fmla="*/ sx2 rO rw1" />
+
+      <gd name="y2O" fmla="*/ sy2 rO rh1" />
+
+
+      <gd name="dxO" fmla="+- x2O 0 x1O" />
+      <gd name="dyO" fmla="+- y2O 0 y1O" />
+      <gd name="dO" fmla="mod dxO dyO 0" />
+
+      <gd name="q1" fmla="*/ x1O y2O 1" />
+      <gd name="q2" fmla="*/ x2O y1O 1" />
+      <gd name="DO" fmla="+- q1 0 q2" />
+
+
+      <gd name="q3" fmla="*/ rO rO 1" />
+
+      <gd name="q4" fmla="*/ dO dO 1" />
+
+      <gd name="q5" fmla="*/ q3 q4 1" />
+
+      <gd name="q6" fmla="*/ DO DO 1" />
+
+      <gd name="q7" fmla="+- q5 0 q6" />
+
+      <gd name="q8" fmla="max q7 0" />
+
+      <gd name="sdelO" fmla="sqrt q8" />
+
+      <gd name="ndyO" fmla="*/ dyO -1 1" />
+      <gd name="sdyO" fmla="?: ndyO -1 1" />
+
+      <gd name="q9" fmla="*/ sdyO dxO 1" />
+
+      <gd name="q10" fmla="*/ q9 sdelO 1" />
+
+      <gd name="q11" fmla="*/ DO dyO 1" />
+
+      <gd name="dxF1" fmla="+/ q11 q10 q4" />
+
+      <gd name="q12" fmla="+- q11 0 q10" />
+      <gd name="dxF2" fmla="*/ q12 1 q4" />
+
+
+      <gd name="adyO" fmla="abs dyO" />
+      <gd name="q13" fmla="*/ adyO sdelO 1" />
+
+      <gd name="q14" fmla="*/ DO dxO -1" />
+
+      <gd name="dyF1" fmla="+/ q14 q13 q4" />
+
+      <gd name="q15" fmla="+- q14 0 q13" />
+      <gd name="dyF2" fmla="*/ q15 1 q4" />
+
+
+
+      <gd name="q16" fmla="+- x2O 0 dxF1" />
+      <gd name="q17" fmla="+- x2O 0 dxF2" />
+      <gd name="q18" fmla="+- y2O 0 dyF1" />
+      <gd name="q19" fmla="+- y2O 0 dyF2" />
+      <gd name="q20" fmla="mod q16 q18 0" />
+
+      <gd name="q21" fmla="mod q17 q19 0" />
+
+      <gd name="q22" fmla="+- q21 0 q20" />
+      <gd name="dxF" fmla="?: q22 dxF1 dxF2" />
+
+      <gd name="dyF" fmla="?: q22 dyF1 dyF2" />
+
+      <gd name="sdxF" fmla="*/ dxF rw1 rO" />
+
+      <gd name="sdyF" fmla="*/ dyF rh1 rO" />
+
+      <gd name="xF" fmla="+- hc sdxF 0" />
+
+      <gd name="yF" fmla="+- vc sdyF 0" />
+
+
+
+
+      <gd name="x1I" fmla="*/ sx1 rI rw2" />
+
+      <gd name="y1I" fmla="*/ sy1 rI rh2" />
+
+      <gd name="x2I" fmla="*/ sx2 rI rw2" />
+
+      <gd name="y2I" fmla="*/ sy2 rI rh2" />
+
+
+      <gd name="dxI" fmla="+- x2I 0 x1I" />
+      <gd name="dyI" fmla="+- y2I 0 y1I" />
+      <gd name="dI" fmla="mod dxI dyI 0" />
+      <gd name="v1" fmla="*/ x1I y2I 1" />
+      <gd name="v2" fmla="*/ x2I y1I 1" />
+      <gd name="DI" fmla="+- v1 0 v2" />
+
+      <gd name="v3" fmla="*/ rI rI 1" />
+      <gd name="v4" fmla="*/ dI dI 1" />
+      <gd name="v5" fmla="*/ v3 v4 1" />
+      <gd name="v6" fmla="*/ DI DI 1" />
+      <gd name="v7" fmla="+- v5 0 v6" />
+      <gd name="v8" fmla="max v7 0" />
+      <gd name="sdelI" fmla="sqrt v8" />
+      <gd name="v9" fmla="*/ sdyO dxI 1" />
+      <gd name="v10" fmla="*/ v9 sdelI 1" />
+      <gd name="v11" fmla="*/ DI dyI 1" />
+      <gd name="dxC1" fmla="+/ v11 v10 v4" />
+      <gd name="v12" fmla="+- v11 0 v10" />
+      <gd name="dxC2" fmla="*/ v12 1 v4" />
+
+      <gd name="adyI" fmla="abs dyI" />
+      <gd name="v13" fmla="*/ adyI sdelI 1" />
+      <gd name="v14" fmla="*/ DI dxI -1" />
+      <gd name="dyC1" fmla="+/ v14 v13 v4" />
+      <gd name="v15" fmla="+- v14 0 v13" />
+      <gd name="dyC2" fmla="*/ v15 1 v4" />
+
+      <gd name="v16" fmla="+- x1I 0 dxC1" />
+      <gd name="v17" fmla="+- x1I 0 dxC2" />
+      <gd name="v18" fmla="+- y1I 0 dyC1" />
+      <gd name="v19" fmla="+- y1I 0 dyC2" />
+      <gd name="v20" fmla="mod v16 v18 0" />
+      <gd name="v21" fmla="mod v17 v19 0" />
+      <gd name="v22" fmla="+- v21 0 v20" />
+      <gd name="dxC" fmla="?: v22 dxC1 dxC2" />
+      <gd name="dyC" fmla="?: v22 dyC1 dyC2" />
+      <gd name="sdxC" fmla="*/ dxC rw2 rI" />
+      <gd name="sdyC" fmla="*/ dyC rh2 rI" />
+      <gd name="xC" fmla="+- hc sdxC 0" />
+
+      <gd name="yC" fmla="+- vc sdyC 0" />
+
+
+      <gd name="wtI" fmla="sin rw3 stAng" />
+      <gd name="htI" fmla="cos rh3 stAng" />
+      <gd name="dxI" fmla="cat2 rw3 htI wtI" />
+      <gd name="dyI" fmla="sat2 rh3 htI wtI" />
+      <gd name="xI" fmla="+- hc dxI 0" />
+
+      <gd name="yI" fmla="+- vc dyI 0" />
+
+
+      <gd name="lptAng" fmla="+- stAng 0 aAng" />
+
+
+      <gd name="wtL" fmla="sin rw3 lptAng" />
+      <gd name="htL" fmla="cos rh3 lptAng" />
+      <gd name="dxL" fmla="cat2 rw3 htL wtL" />
+      <gd name="dyL" fmla="sat2 rh3 htL wtL" />
+      <gd name="xL" fmla="+- hc dxL 0" />
+
+      <gd name="yL" fmla="+- vc dyL 0" />
+
+
+      <gd name="dxK" fmla="cos thh lptAng" />
+      <gd name="dyK" fmla="sin thh lptAng" />
+      <gd name="xK" fmla="+- xI dxK 0" />
+
+      <gd name="yK" fmla="+- yI dyK 0" />
+
+
+      <gd name="dxJ" fmla="cos thh lptAng" />
+      <gd name="dyJ" fmla="sin thh lptAng" />
+      <gd name="xJ" fmla="+- xI 0 dxJ 0" />
+
+      <gd name="yJ" fmla="+- yI 0 dyJ 0" />
+
+
+      <gd name="p1" fmla="+- xF 0 xC" />
+      <gd name="p2" fmla="+- yF 0 yC" />
+      <gd name="p3" fmla="mod p1 p2 0" />
+      <gd name="p4" fmla="*/ p3 1 2" />
+      <gd name="p5" fmla="+- p4 0 thh" />
+      <gd name="xGp" fmla="?: p5 xF xG" />
+      <gd name="yGp" fmla="?: p5 yF yG" />
+      <gd name="xBp" fmla="?: p5 xC xB" />
+      <gd name="yBp" fmla="?: p5 yC yB" />
+
+      <gd name="en0" fmla="at2 sdxF sdyF" />
+      <gd name="en1" fmla="+- en0 21600000 0" />
+      <gd name="en2" fmla="?: en0 en0 en1" />
+      <gd name="od0" fmla="+- en2 0 enAng" />
+      <gd name="od1" fmla="+- od0 21600000 0" />
+      <gd name="od2" fmla="?: od0 od0 od1" />
+
+      <gd name="st0" fmla="+- stAng 0 od2" />
+      <gd name="st1" fmla="+- st0 21600000 0" />
+      <gd name="st2" fmla="?: st0 st0 st1" />
+
+      <gd name="sw0" fmla="+- en2 0 st2" />
+      <gd name="sw1" fmla="+- sw0 21600000 0" />
+      <gd name="swAng" fmla="?: sw0 sw0 sw1" />
+
+
+      <gd name="ist0" fmla="at2 sdxC sdyC" />
+      <gd name="ist1" fmla="+- ist0 21600000 0" />
+      <gd name="istAng" fmla="?: ist0 ist0 ist1" />
+
+      <gd name="id0" fmla="+- istAng 0 enAng" />
+      <gd name="id1" fmla="+- id0 0 21600000" />
+      <gd name="id2" fmla="?: id0 id1 id0" />
+
+      <gd name="ien0" fmla="+- stAng 0 id2" />
+      <gd name="ien1" fmla="+- ien0 0 21600000" />
+      <gd name="ien2" fmla="?: ien1 ien1 ien0" />
+
+      <gd name="isw1" fmla="+- ien2 0 istAng" />
+      <gd name="isw2" fmla="+- isw1 0 21600000" />
+      <gd name="iswAng" fmla="?: isw1 isw2 isw1" />
+
+
+      <gd name="wtE" fmla="sin rw1 st2" />
+      <gd name="htE" fmla="cos rh1 st2" />
+      <gd name="dxE" fmla="cat2 rw1 htE wtE" />
+      <gd name="dyE" fmla="sat2 rh1 htE wtE" />
+      <gd name="xE" fmla="+- hc dxE 0" />
+
+      <gd name="yE" fmla="+- vc dyE 0" />
+
+
+      <gd name="wtD" fmla="sin rw2 ien2" />
+      <gd name="htD" fmla="cos rh2 ien2" />
+      <gd name="dxD" fmla="cat2 rw2 htD wtD" />
+      <gd name="dyD" fmla="sat2 rh2 htD wtD" />
+      <gd name="xD" fmla="+- hc dxD 0" />
+
+      <gd name="yD" fmla="+- vc dyD 0" />
+
+
+      <gd name="xKp" fmla="?: p5 xE xK" />
+      <gd name="yKp" fmla="?: p5 yE yK" />
+      <gd name="xJp" fmla="?: p5 xD xJ" />
+      <gd name="yJp" fmla="?: p5 yD yJ" />
+
+      <gd name="aL" fmla="+- lptAng 0 cd4" />
+      <gd name="aA" fmla="+- ptAng cd4 0" />
+      <gd name="aB" fmla="+- ptAng cd2 0" />
+      <gd name="aJ" fmla="+- lptAng cd2 0" />
+
+      <gd name="idx" fmla="cos rw1 2700000" />
+      <gd name="idy" fmla="sin rh1 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefAng="adj2" minAng="0" maxAng="maxAng">
+        <pos x="xA" y="yA" />
+      </ahPolar>
+      <ahPolar gdRefAng="adj4" minAng="0" maxAng="21599999">
+        <pos x="xE" y="yE" />
+      </ahPolar>
+      <ahPolar gdRefR="adj1" minR="0" maxR="maxAdj1" gdRefAng="adj3" minAng="0" maxAng="21599999">
+        <pos x="xF" y="yF" />
+      </ahPolar>
+      <ahPolar gdRefR="adj5" minR="0" maxR="25000">
+        <pos x="xB" y="yB" />
+      </ahPolar>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="aL">
+        <pos x="xL" y="yL" />
+      </cxn>
+      <cxn ang="lptAng">
+        <pos x="xKp" y="yKp" />
+      </cxn>
+      <cxn ang="ptAng">
+        <pos x="xGp" y="yGp" />
+      </cxn>
+      <cxn ang="aA">
+        <pos x="xA" y="yA" />
+      </cxn>
+      <cxn ang="aB">
+        <pos x="xBp" y="yBp" />
+      </cxn>
+      <cxn ang="aJ">
+        <pos x="xJp" y="yJp" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="xL" y="yL" />
+        </moveTo>
+        <lnTo>
+          <pt x="xKp" y="yKp" />
+        </lnTo>
+        <lnTo>
+          <pt x="xE" y="yE" />
+        </lnTo>
+        <arcTo wR="rw1" hR="rh1" stAng="st2" swAng="swAng" />
+        <lnTo>
+          <pt x="xGp" y="yGp" />
+        </lnTo>
+        <lnTo>
+          <pt x="xA" y="yA" />
+        </lnTo>
+        <lnTo>
+          <pt x="xBp" y="yBp" />
+        </lnTo>
+        <lnTo>
+          <pt x="xC" y="yC" />
+        </lnTo>
+        <arcTo wR="rw2" hR="rh2" stAng="istAng" swAng="iswAng" />
+        <lnTo>
+          <pt x="xJp" y="yJp" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </leftRightCircularArrow>
+  <leftRightRibbon>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+      <gd name="adj3" fmla="val 16667" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a3" fmla="pin 0 adj3 33333" />
+      <gd name="maxAdj1" fmla="+- 100000 0 a3" />
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+
+      <gd name="w1" fmla="+- wd2 0 wd32" />
+      <gd name="maxAdj2" fmla="*/ 100000 w1 ss" />
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+
+      <gd name="x1" fmla="*/ ss a2 100000" />
+
+      <gd name="x4" fmla="+- r 0 x1" />
+
+      <gd name="dy1" fmla="*/ h a1 200000" />
+
+      <gd name="dy2" fmla="*/ h a3 -200000" />
+
+      <gd name="ly1" fmla="+- vc dy2 dy1" />
+
+      <gd name="ry4" fmla="+- vc dy1 dy2" />
+
+      <gd name="ly2" fmla="+- ly1 dy1 0" />
+
+      <gd name="ry3" fmla="+- b 0 ly2" />
+
+      <gd name="ly4" fmla="*/ ly2 2 1" />
+
+      <gd name="ry1" fmla="+- b 0 ly4" />
+
+      <gd name="ly3" fmla="+- ly4 0 ly1" />
+
+      <gd name="ry2" fmla="+- b 0 ly3" />
+
+
+      <gd name="hR" fmla="*/ a3 ss 400000" />
+
+      <gd name="x2" fmla="+- hc 0 wd32" />
+
+      <gd name="x3" fmla="+- hc wd32 0" />
+
+      <gd name="y1" fmla="+- ly1 hR 0" />
+
+      <gd name="y2" fmla="+- ry2 0 hR" />
+
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="maxAdj1">
+        <pos x="x4" y="ry2" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="x1" y="t" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="0" maxY="33333">
+        <pos x="x3" y="ry2" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="ry3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x4" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x1" y="ly4" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="ly2" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x1" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x4" y="ry1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x1" t="ly1" r="x4" b="ry4" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="ly2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="ly1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="ly1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="cd2" />
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="x4" y="ry2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="ry1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="ry3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="ry4" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="ry4" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="x2" y="ly3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="ly3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="ly4" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darkenLess" extrusionOk="false">
+
+        <moveTo>
+          <pt x="x3" y="y1" />
+        </moveTo>
+        <arcTo wR="wd32" hR="hR" stAng="0" swAng="cd4" />
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="x3" y="ry2" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="ly2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="ly1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="ly1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="cd2" />
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="x4" y="ry2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="ry1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="ry3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="ry4" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="ry4" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="x2" y="ly3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="ly3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="ly4" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="x3" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x3" y="ry2" />
+        </lnTo>
+        <moveTo>
+          <pt x="x2" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="ly3" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </leftRightRibbon>
+  <leftRightUpArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 25000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a2" fmla="pin 0 adj2 50000" />
+      <gd name="maxAdj1" fmla="*/ a2 2 1" />
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="q1" fmla="+- 100000 0 maxAdj1" />
+      <gd name="maxAdj3" fmla="*/ q1 1 2" />
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="x1" fmla="*/ ss a3 100000" />
+      <gd name="dx2" fmla="*/ ss a2 100000" />
+
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x5" fmla="+- hc dx2 0" />
+      <gd name="dx3" fmla="*/ ss a1 200000" />
+
+      <gd name="x3" fmla="+- hc 0 dx3" />
+      <gd name="x4" fmla="+- hc dx3 0" />
+      <gd name="x6" fmla="+- r 0 x1" />
+
+      <gd name="dy2" fmla="*/ ss a2 50000" />
+
+      <gd name="y2" fmla="+- b 0 dy2" />
+      <gd name="y4" fmla="+- b 0 dx2" />
+      <gd name="y3" fmla="+- y4 0 dx3" />
+      <gd name="y5" fmla="+- y4 dx3 0" />
+      <gd name="il" fmla="*/ dx3 x1 dx2" />
+      <gd name="ir" fmla="+- r 0 il" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="maxAdj1">
+        <pos x="x3" y="x1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="50000">
+        <pos x="x2" y="t" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="0" maxY="maxAdj3">
+        <pos x="r" y="x1" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y4" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="y5" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y4" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="y3" r="ir" b="y5" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y4" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </leftRightUpArrow>
+  <leftUpArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 25000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a2" fmla="pin 0 adj2 50000" />
+      <gd name="maxAdj1" fmla="*/ a2 2 1" />
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="maxAdj3" fmla="+- 100000 0 maxAdj1" />
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="x1" fmla="*/ ss a3 100000" />
+
+      <gd name="dx2" fmla="*/ ss a2 50000" />
+
+      <gd name="x2" fmla="+- r 0 dx2" />
+      <gd name="y2" fmla="+- b 0 dx2" />
+      <gd name="dx4" fmla="*/ ss a2 100000" />
+
+      <gd name="x4" fmla="+- r 0 dx4" />
+      <gd name="y4" fmla="+- b 0 dx4" />
+      <gd name="dx3" fmla="*/ ss a1 200000" />
+
+      <gd name="x3" fmla="+- x4 0 dx3" />
+      <gd name="x5" fmla="+- x4 dx3 0" />
+      <gd name="y3" fmla="+- y4 0 dx3" />
+      <gd name="y5" fmla="+- y4 dx3 0" />
+      <gd name="il" fmla="*/ dx3 x1 dx4" />
+      <gd name="cx1" fmla="+/ x1 x5 2" />
+      <gd name="cy1" fmla="+/ x1 y5 2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="maxAdj1">
+        <pos x="x3" y="y3" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="50000">
+        <pos x="x2" y="t" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="0" maxY="maxAdj3">
+        <pos x="x3" y="x1" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x4" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x2" y="x1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x1" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y4" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x1" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="cx1" y="y5" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x5" y="cy1" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="x1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="y3" r="x4" b="y5" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y4" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </leftUpArrow>
+  <lightningBolt>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="x1" fmla="*/ w 5022 21600" />
+      <gd name="x3" fmla="*/ w 8472 21600" />
+      <gd name="x4" fmla="*/ w 8757 21600" />
+
+      <gd name="x5" fmla="*/ w 10012 21600" />
+      <gd name="x8" fmla="*/ w 12860 21600" />
+      <gd name="x9" fmla="*/ w 13917 21600" />
+
+      <gd name="x11" fmla="*/ w 16577 21600" />
+      <gd name="y1" fmla="*/ h 3890 21600" />
+      <gd name="y2" fmla="*/ h 6080 21600" />
+      <gd name="y4" fmla="*/ h 7437 21600" />
+
+      <gd name="y6" fmla="*/ h 9705 21600" />
+      <gd name="y7" fmla="*/ h 12007 21600" />
+      <gd name="y10" fmla="*/ h 14277 21600" />
+
+      <gd name="y11" fmla="*/ h 14915 21600" />
+
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x3" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="l" y="y1" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y6" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x5" y="y11" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="r" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x11" y="y7" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x8" y="y2" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x4" t="y4" r="x9" b="y10" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path w="21600" h="21600">
+        <moveTo>
+          <pt x="8472" y="0" />
+        </moveTo>
+        <lnTo>
+          <pt x="12860" y="6080" />
+        </lnTo>
+        <lnTo>
+          <pt x="11050" y="6797" />
+        </lnTo>
+        <lnTo>
+          <pt x="16577" y="12007" />
+        </lnTo>
+        <lnTo>
+          <pt x="14767" y="12877" />
+        </lnTo>
+        <lnTo>
+          <pt x="21600" y="21600" />
+        </lnTo>
+        <lnTo>
+          <pt x="10012" y="14915" />
+        </lnTo>
+        <lnTo>
+          <pt x="12222" y="13987" />
+        </lnTo>
+        <lnTo>
+          <pt x="5022" y="9705" />
+        </lnTo>
+        <lnTo>
+          <pt x="7602" y="8382" />
+        </lnTo>
+        <lnTo>
+          <pt x="0" y="3890" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </lightningBolt>
+  <line>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd4">
+        <pos x="l" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="r" y="b" />
+      </cxn>
+    </cxnLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+      </path>
+    </pathLst>
+  </line>
+  <lineInv>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd4">
+        <pos x="l" y="b" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="r" y="t" />
+      </cxn>
+    </cxnLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+      </path>
+    </pathLst>
+  </lineInv>
+  <mathDivide>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 23520" />
+
+      <gd name="adj2" fmla="val 5880" />
+
+      <gd name="adj3" fmla="val 11760" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+      <gd name="a1" fmla="pin 1000 adj1 36745" />
+      <gd name="ma1" fmla="+- 0 0 a1" />
+
+      <gd name="ma3h" fmla="+/ 73490 ma1 4" />
+
+      <gd name="ma3w" fmla="*/ 36745 w h" />
+
+      <gd name="maxAdj3" fmla="min ma3h ma3w" />
+      <gd name="a3" fmla="pin 1000 adj3 maxAdj3" />
+      <gd name="m4a3" fmla="*/ -4 a3 1" />
+
+      <gd name="maxAdj2" fmla="+- 73490 m4a3 a1" />
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+
+      <gd name="dy1" fmla="*/ h a1 200000" />
+
+      <gd name="yg" fmla="*/ h a2 100000" />
+
+      <gd name="rad" fmla="*/ h a3 100000" />
+
+      <gd name="dx1" fmla="*/ w 73490 200000" />
+
+
+      <gd name="y3" fmla="+- vc 0 dy1" />
+
+      <gd name="y4" fmla="+- vc dy1 0" />
+
+      <gd name="a" fmla="+- yg rad 0" />
+      <gd name="y2" fmla="+- y3 0 a" />
+
+      <gd name="y1" fmla="+- y2 0 rad" />
+
+      <gd name="y5" fmla="+- b 0 y1" />
+
+
+      <gd name="x1" fmla="+- hc 0 dx1" />
+
+      <gd name="x3" fmla="+- hc dx1 0" />
+
+      <gd name="x2" fmla="+- hc 0 rad" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="1000" maxY="36745">
+        <pos x="l" y="y3" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="0" maxY="maxAdj2">
+        <pos x="r" y="y2" />
+      </ahXY>
+      <ahXY gdRefX="adj3" minX="1000" maxX="maxAdj3">
+        <pos x="x2" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x3" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="y5" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="y1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x1" t="y3" r="x3" b="y4" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="hc" y="y1" />
+        </moveTo>
+        <arcTo hR="rad" wR="rad" stAng="3cd4" swAng="21600000" />
+        <close />
+        <moveTo>
+          <pt x="hc" y="y5" />
+        </moveTo>
+        <arcTo hR="rad" wR="rad" stAng="cd4" swAng="21600000" />
+        <close />
+        <moveTo>
+          <pt x="x1" y="y3" />
+        </moveTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </mathDivide>
+  <mathEqual>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 23520" />
+
+      <gd name="adj2" fmla="val 11760" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 36745" />
+
+
+      <gd name="2a1" fmla="*/ a1 2 1" />
+
+      <gd name="mAdj2" fmla="+- 100000 0 2a1" />
+
+      <gd name="a2" fmla="pin 0 adj2 mAdj2" />
+      <gd name="dy1" fmla="*/ h a1 100000" />
+
+      <gd name="dy2" fmla="*/ h a2 200000" />
+
+      <gd name="dx1" fmla="*/ w 73490 200000" />
+
+
+      <gd name="y2" fmla="+- vc 0 dy2" />
+
+      <gd name="y3" fmla="+- vc dy2 0" />
+
+      <gd name="y1" fmla="+- y2 0 dy1" />
+
+      <gd name="y4" fmla="+- y3 dy1 0" />
+
+
+      <gd name="x1" fmla="+- hc 0 dx1" />
+
+      <gd name="x2" fmla="+- hc dx1 0" />
+
+
+
+      <gd name="yC1" fmla="+/ y1 y2 2" />
+
+      <gd name="yC2" fmla="+/ y3 y4 2" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="36745">
+        <pos x="l" y="y1" />
+      </ahXY>
+
+      <ahXY gdRefY="adj2" minY="0" maxY="mAdj2">
+        <pos x="r" y="y2" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x2" y="yC1" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x2" y="yC2" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="y4" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="yC1" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="yC2" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="y1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x1" t="y1" r="x2" b="y4" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="x1" y="y3" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </mathEqual>
+  <mathMinus>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 23520" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 100000" />
+      <gd name="dy1" fmla="*/ h a1 200000" />
+
+      <gd name="dx1" fmla="*/ w 73490 200000" />
+
+
+      <gd name="y1" fmla="+- vc 0 dy1" />
+
+      <gd name="y2" fmla="+- vc dy1 0" />
+
+
+      <gd name="x1" fmla="+- hc 0 dx1" />
+
+      <gd name="x2" fmla="+- hc dx1 0" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="100000">
+        <pos x="l" y="y1" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x2" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="y1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x1" t="y1" r="x2" b="y2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </mathMinus>
+  <mathMultiply>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 23520" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+
+
+
+
+      <gd name="a1" fmla="pin 0 adj1 51965" />
+
+      <gd name="th" fmla="*/ ss a1 100000" />
+
+
+      <gd name="a" fmla="at2 w h" />
+
+      <gd name="sa" fmla="sin 1 a" />
+      <gd name="ca" fmla="cos 1 a" />
+      <gd name="ta" fmla="tan 1 a" />
+
+
+      <gd name="dl" fmla="mod w h 0" />
+
+      <gd name="rw" fmla="*/ dl 51965 100000" />
+
+
+
+      <gd name="lM" fmla="+- dl 0 rw" />
+      <gd name="xM" fmla="*/ ca lM 2" />
+      <gd name="yM" fmla="*/ sa lM 2" />
+
+
+      <gd name="dxAM" fmla="*/ sa th 2" />
+      <gd name="dyAM" fmla="*/ ca th 2" />
+      <gd name="xA" fmla="+- xM 0 dxAM" />
+      <gd name="yA" fmla="+- yM dyAM 0" />
+
+
+      <gd name="xB" fmla="+- xM dxAM 0" />
+      <gd name="yB" fmla="+- yM 0 dyAM" />
+
+
+      <gd name="xBC" fmla="+- hc 0 xB" />
+      <gd name="yBC" fmla="*/ xBC ta 1" />
+      <gd name="yC" fmla="+- yBC yB 0" />
+
+
+      <gd name="xD" fmla="+- r 0 xB" />
+      <gd name="xE" fmla="+- r 0 xA" />
+
+      <gd name="yFE" fmla="+- vc 0 yA" />
+      <gd name="xFE" fmla="*/ yFE 1 ta" />
+      <gd name="xF" fmla="+- xE 0 xFE" />
+      <gd name="xL" fmla="+- xA xFE 0" />
+      <gd name="yG" fmla="+- b 0 yA" />
+      <gd name="yH" fmla="+- b 0 yB" />
+      <gd name="yI" fmla="+- b 0 yC" />
+
+
+      <gd name="xC2" fmla="+- r 0 xM" />
+
+      <gd name="yC3" fmla="+- b 0 yM" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="51965">
+        <pos x="l" y="th" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd2">
+        <pos x="xM" y="yM" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="xC2" y="yM" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="xC2" y="yC3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="xM" y="yC3" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="xA" t="yB" r="xE" b="yH" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="xA" y="yA" />
+        </moveTo>
+        <lnTo>
+          <pt x="xB" y="yB" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="yC" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD" y="yB" />
+        </lnTo>
+        <lnTo>
+          <pt x="xE" y="yA" />
+        </lnTo>
+        <lnTo>
+          <pt x="xF" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="xE" y="yG" />
+        </lnTo>
+        <lnTo>
+          <pt x="xD" y="yH" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="yI" />
+        </lnTo>
+        <lnTo>
+          <pt x="xB" y="yH" />
+        </lnTo>
+        <lnTo>
+          <pt x="xA" y="yG" />
+        </lnTo>
+        <lnTo>
+          <pt x="xL" y="vc" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </mathMultiply>
+  <mathNotEqual>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 23520" />
+
+      <gd name="adj2" fmla="val 6600000" />
+
+      <gd name="adj3" fmla="val 11760" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 50000" />
+      <gd name="crAng" fmla="pin 4200000 adj2 6600000" />
+
+
+      <gd name="2a1" fmla="*/ a1 2 1" />
+      <gd name="maxAdj3" fmla="+- 100000 0 2a1" />
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+
+      <gd name="dy1" fmla="*/ h a1 100000" />
+
+      <gd name="dy2" fmla="*/ h a3 200000" />
+
+      <gd name="dx1" fmla="*/ w 73490 200000" />
+
+
+      <gd name="x1" fmla="+- hc 0 dx1" />
+
+      <gd name="x8" fmla="+- hc dx1 0" />
+
+
+
+      <gd name="y2" fmla="+- vc 0 dy2" />
+
+      <gd name="y3" fmla="+- vc dy2 0" />
+
+      <gd name="y1" fmla="+- y2 0 dy1" />
+
+      <gd name="y4" fmla="+- y3 dy1 0" />
+
+
+      <gd name="cadj2" fmla="+- crAng 0 cd4" />
+      <gd name="xadj2" fmla="tan hd2 cadj2" />
+
+
+
+      <gd name="len" fmla="mod xadj2 hd2 0" />
+
+
+
+      <gd name="bhw" fmla="*/ len dy1 hd2" />
+
+      <gd name="bhw2" fmla="*/ bhw 1 2" />
+      <gd name="x7" fmla="+- hc xadj2 bhw2" />
+
+      <gd name="dx67" fmla="*/ xadj2 y1 hd2" />
+      <gd name="x6" fmla="+- x7 0 dx67" />
+
+      <gd name="dx57" fmla="*/ xadj2 y2 hd2" />
+      <gd name="x5" fmla="+- x7 0 dx57" />
+
+      <gd name="dx47" fmla="*/ xadj2 y3 hd2" />
+      <gd name="x4" fmla="+- x7 0 dx47" />
+
+      <gd name="dx37" fmla="*/ xadj2 y4 hd2" />
+      <gd name="x3" fmla="+- x7 0 dx37" />
+
+      <gd name="dx27" fmla="*/ xadj2 2 1" />
+      <gd name="x2" fmla="+- x7 0 dx27" />
+
+
+      <gd name="rx7" fmla="+- x7 bhw 0" />
+
+      <gd name="rx6" fmla="+- x6 bhw 0" />
+
+      <gd name="rx5" fmla="+- x5 bhw 0" />
+
+      <gd name="rx4" fmla="+- x4 bhw 0" />
+
+      <gd name="rx3" fmla="+- x3 bhw 0" />
+
+      <gd name="rx2" fmla="+- x2 bhw 0" />
+
+
+
+      <gd name="dx7" fmla="*/ dy1 hd2 len" />
+      <gd name="rxt" fmla="+- x7 dx7 0" />
+
+      <gd name="lxt" fmla="+- rx7 0 dx7" />
+
+      <gd name="rx" fmla="?: cadj2 rxt rx7" />
+
+      <gd name="lx" fmla="?: cadj2 x7 lxt" />
+
+
+      <gd name="dy3" fmla="*/ dy1 xadj2 len" />
+      <gd name="dy4" fmla="+- 0 0 dy3" />
+      <gd name="ry" fmla="?: cadj2 dy3 t" />
+
+      <gd name="ly" fmla="?: cadj2 t dy4" />
+
+
+      <gd name="dlx" fmla="+- w 0 rx" />
+
+      <gd name="drx" fmla="+- w 0 lx" />
+
+
+      <gd name="dly" fmla="+- h 0 ry" />
+
+      <gd name="dry" fmla="+- h 0 ly" />
+
+
+
+      <gd name="xC1" fmla="+/ rx lx 2" />
+
+      <gd name="xC2" fmla="+/ drx dlx 2" />
+
+
+      <gd name="yC1" fmla="+/ ry ly 2" />
+
+      <gd name="yC2" fmla="+/ y1 y2 2" />
+
+      <gd name="yC3" fmla="+/ y3 y4 2" />
+
+      <gd name="yC4" fmla="+/ dry dly 2" />
+
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="50000">
+        <pos x="l" y="y1" />
+      </ahXY>
+      <ahPolar gdRefAng="adj2" minAng="4200000" maxAng="6600000">
+        <pos x="lx" y="t" />
+      </ahPolar>
+      <ahXY gdRefY="adj3" minY="0" maxY="maxAdj3">
+        <pos x="r" y="y2" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x8" y="yC2" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x8" y="yC3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="xC2" y="yC4" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="yC2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="yC3" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="xC1" y="yC1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x1" t="y1" r="x8" b="y4" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x6" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="lx" y="ly" />
+        </lnTo>
+        <lnTo>
+          <pt x="rx" y="ry" />
+        </lnTo>
+        <lnTo>
+          <pt x="rx6" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="rx5" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="rx4" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="rx3" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="drx" y="dry" />
+        </lnTo>
+        <lnTo>
+          <pt x="dlx" y="dly" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </mathNotEqual>
+  <mathPlus>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 23520" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 73490" />
+      <gd name="dx1" fmla="*/ w 73490 200000" />
+
+      <gd name="dy1" fmla="*/ h 73490 200000" />
+
+      <gd name="dx2" fmla="*/ ss a1 200000" />
+
+
+      <gd name="x1" fmla="+- hc 0 dx1" />
+
+      <gd name="x2" fmla="+- hc 0 dx2" />
+
+      <gd name="x3" fmla="+- hc dx2 0" />
+
+      <gd name="x4" fmla="+- hc dx1 0" />
+
+
+      <gd name="y1" fmla="+- vc 0 dy1" />
+
+      <gd name="y2" fmla="+- vc 0 dx2" />
+
+      <gd name="y3" fmla="+- vc dx2 0" />
+
+      <gd name="y4" fmla="+- vc dy1 0" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="73490">
+        <pos x="l" y="y2" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x4" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="y4" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="y1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x1" t="y2" r="x4" b="y3" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </mathPlus>
+  <moon>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 50000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 87500" />
+      <gd name="g0" fmla="*/ ss a 100000" />
+      <gd name="g0w" fmla="*/ g0 w ss" />
+      <gd name="g1" fmla="+- ss 0 g0" />
+      <gd name="g2" fmla="*/ g0 g0 g1" />
+      <gd name="g3" fmla="*/ ss ss g1" />
+      <gd name="g4" fmla="*/ g3 2 1" />
+      <gd name="g5" fmla="+- g4 0 g2" />
+      <gd name="g6" fmla="+- g5 0 g0" />
+      <gd name="g6w" fmla="*/ g6 w ss" />
+      <gd name="g7" fmla="*/ g5 1 2" />
+      <gd name="g8" fmla="+- g7 0 g0" />
+      <gd name="dy1" fmla="*/ g8 hd2 ss" />
+
+      <gd name="g10h" fmla="+- vc 0 dy1" />
+      <gd name="g11h" fmla="+- vc dy1 0" />
+      <gd name="g12" fmla="*/ g0 9598 32768" />
+      <gd name="g12w" fmla="*/ g12 w ss" />
+      <gd name="g13" fmla="+- ss 0 g12" />
+      <gd name="q1" fmla="*/ ss ss 1" />
+      <gd name="q2" fmla="*/ g13 g13 1" />
+      <gd name="q3" fmla="+- q1 0 q2" />
+      <gd name="q4" fmla="sqrt q3" />
+      <gd name="dy4" fmla="*/ q4 hd2 ss" />
+      <gd name="g15h" fmla="+- vc 0 dy4" />
+      <gd name="g16h" fmla="+- vc dy4 0" />
+      <gd name="g17w" fmla="+- g6w 0 g0w" />
+      <gd name="g18w" fmla="*/ g17w 1 2" />
+
+
+      <gd name="dx2p" fmla="+- g0w g18w w" />
+      <gd name="dx2" fmla="*/ dx2p -1 1" />
+
+      <gd name="dy2" fmla="*/ hd2 -1 1" />
+
+      <gd name="stAng1" fmla="at2 dx2 dy2" />
+      <gd name="enAngp1" fmla="at2 dx2 hd2" />
+      <gd name="enAng1" fmla="+- enAngp1 0 21600000" />
+      <gd name="swAng1" fmla="+- enAng1 0 stAng1" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="87500">
+        <pos x="g0w" y="vc" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="r" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="r" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="g0w" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="g12w" t="g15h" r="g0w" b="g16h" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="r" y="b" />
+        </moveTo>
+        <arcTo wR="w" hR="hd2" stAng="cd4" swAng="cd2" />
+        <arcTo wR="g18w" hR="dy1" stAng="stAng1" swAng="swAng1" />
+        <close />
+      </path>
+    </pathLst>
+
+  </moon>
+  <nonIsoscelesTrapezoid>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 25000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj" fmla="*/ 50000 w ss" />
+
+      <gd name="a1" fmla="pin 0 adj1 maxAdj" />
+      <gd name="a2" fmla="pin 0 adj2 maxAdj" />
+      <gd name="x1" fmla="*/ ss a1 200000" />
+
+      <gd name="x2" fmla="*/ ss a1 100000" />
+
+      <gd name="dx3" fmla="*/ ss a2 100000" />
+
+      <gd name="x3" fmla="+- r 0 dx3" />
+      <gd name="x4" fmla="+/ r x3 2" />
+      <gd name="il" fmla="*/ wd3 a1 maxAdj" />
+
+      <gd name="adjm" fmla="max a1 a2" />
+      <gd name="it" fmla="*/ hd3 adjm maxAdj" />
+
+      <gd name="irt" fmla="*/ wd3 a2 maxAdj" />
+      <gd name="ir" fmla="+- r 0 irt" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="maxAdj">
+        <pos x="x2" y="t" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj">
+        <pos x="x3" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x4" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+
+    <rect l="il" t="it" r="ir" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </nonIsoscelesTrapezoid>
+  <noSmoking>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 18750" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="dr" fmla="*/ ss a 100000" />
+      <gd name="iwd2" fmla="+- wd2 0 dr" />
+      <gd name="ihd2" fmla="+- hd2 0 dr" />
+      <gd name="ang" fmla="at2 w h" />
+      <gd name="ct" fmla="cos ihd2 ang" />
+      <gd name="st" fmla="sin iwd2 ang" />
+      <gd name="m" fmla="mod ct st 0" />
+      <gd name="n" fmla="*/ iwd2 ihd2 m" />
+      <gd name="drd2" fmla="*/ dr 1 2" />
+      <gd name="dang" fmla="at2 n drd2" />
+      <gd name="2dang" fmla="*/ dang 2 1" />
+      <gd name="swAng" fmla="+- -10800000 2dang 0" />
+      <gd name="t3" fmla="at2 w h" />
+      <gd name="stAng1" fmla="+- t3 0 dang" />
+      <gd name="stAng2" fmla="+- stAng1 0 cd2" />
+      <gd name="ct1" fmla="cos ihd2 stAng1" />
+      <gd name="st1" fmla="sin iwd2 stAng1" />
+      <gd name="m1" fmla="mod ct1 st1 0" />
+      <gd name="n1" fmla="*/ iwd2 ihd2 m1" />
+      <gd name="dx1" fmla="cos n1 stAng1" />
+      <gd name="dy1" fmla="sin n1 stAng1" />
+      <gd name="x1" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- vc dy1 0" />
+      <gd name="x2" fmla="+- hc 0 dx1" />
+      <gd name="y2" fmla="+- vc 0 dy1" />
+      <gd name="idx" fmla="cos wd2 2700000" />
+      <gd name="idy" fmla="sin hd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefR="adj" minR="0" maxR="50000">
+        <pos x="dr" y="vc" />
+      </ahPolar>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="il" y="it" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="il" y="ib" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="ir" y="ib" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="ir" y="it" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="cd2" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="3cd4" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="0" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="cd4" swAng="cd4" />
+        <close />
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <arcTo wR="iwd2" hR="ihd2" stAng="stAng1" swAng="swAng" />
+        <close />
+        <moveTo>
+          <pt x="x2" y="y2" />
+        </moveTo>
+        <arcTo wR="iwd2" hR="ihd2" stAng="stAng2" swAng="swAng" />
+        <close />
+      </path>
+    </pathLst>
+
+  </noSmoking>
+  <notchedRightArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 100000 w ss" />
+
+      <gd name="a1" fmla="pin 0 adj1 100000" />
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="dx2" fmla="*/ ss a2 100000" />
+      <gd name="x2" fmla="+- r 0 dx2" />
+      <gd name="dy1" fmla="*/ h a1 200000" />
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc dy1 0" />
+      <gd name="x1" fmla="*/ dy1 dx2 hd2" />
+      <gd name="x3" fmla="+- r 0 x1" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="100000">
+        <pos x="r" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="x2" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x2" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x2" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x1" t="y1" r="x3" b="y2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="vc" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </notchedRightArrow>
+  <octagon>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 29289" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="x1" fmla="*/ ss a 100000" />
+      <gd name="x2" fmla="+- r 0 x1" />
+      <gd name="y2" fmla="+- b 0 x1" />
+      <gd name="il" fmla="*/ x1 1 2" />
+      <gd name="ir" fmla="+- r 0 il" />
+      <gd name="ib" fmla="+- b 0 il" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="50000">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="x1" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y2" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x2" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x1" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="x1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x1" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x2" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="il" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="x1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </octagon>
+  <parallelogram>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 25000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj" fmla="*/ 100000 w ss" />
+      <gd name="a" fmla="pin 0 adj maxAdj" />
+      <gd name="x1" fmla="*/ ss a 200000" />
+      <gd name="x2" fmla="*/ ss a 100000" />
+      <gd name="x6" fmla="+- r 0 x1" />
+      <gd name="x5" fmla="+- r 0 x2" />
+      <gd name="x3" fmla="*/ x5 1 2" />
+      <gd name="x4" fmla="+- r 0 x3" />
+      <gd name="il" fmla="*/ wd2 a maxAdj" />
+      <gd name="q1" fmla="*/ 5 a maxAdj" />
+      <gd name="q2" fmla="+/ 1 q1 12" />
+      <gd name="il" fmla="*/ q2 w 1" />
+      <gd name="it" fmla="*/ q2 h 1" />
+      <gd name="ir" fmla="+- r 0 il" />
+      <gd name="ib" fmla="+- b 0 it" />
+      <gd name="q3" fmla="*/ h hc x2" />
+      <gd name="y1" fmla="pin 0 q3 h" />
+      <gd name="y2" fmla="+- b 0 y1" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="maxAdj">
+        <pos x="x2" y="t" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="y2" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x4" y="t" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x6" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="y1" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+    </cxnLst>
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </parallelogram>
+  <pentagon>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="hf" fmla="val 105146" />
+      <gd name="vf" fmla="val 110557" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="swd2" fmla="*/ wd2 hf 100000" />
+      <gd name="shd2" fmla="*/ hd2 vf 100000" />
+      <gd name="svc" fmla="*/ vc  vf 100000" />
+      <gd name="dx1" fmla="cos swd2 1080000" />
+      <gd name="dx2" fmla="cos swd2 18360000" />
+      <gd name="dy1" fmla="sin shd2 1080000" />
+      <gd name="dy2" fmla="sin shd2 18360000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x3" fmla="+- hc dx2 0" />
+      <gd name="x4" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- svc 0 dy1" />
+      <gd name="y2" fmla="+- svc 0 dy2" />
+      <gd name="it" fmla="*/ y1 dx2 dx1" />
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y1" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x2" y="y2" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="y2" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x4" y="y1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x2" t="it" r="x3" b="y2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </pentagon>
+  <pie>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 0" />
+      <gd name="adj2" fmla="val 16200000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="stAng" fmla="pin 0 adj1 21599999" />
+      <gd name="enAng" fmla="pin 0 adj2 21599999" />
+      <gd name="sw1" fmla="+- enAng 0 stAng" />
+      <gd name="sw2" fmla="+- sw1 21600000 0" />
+      <gd name="swAng" fmla="?: sw1 sw1 sw2" />
+      <gd name="wt1" fmla="sin wd2 stAng" />
+      <gd name="ht1" fmla="cos hd2 stAng" />
+      <gd name="dx1" fmla="cat2 wd2 ht1 wt1" />
+      <gd name="dy1" fmla="sat2 hd2 ht1 wt1" />
+      <gd name="x1" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- vc dy1 0" />
+      <gd name="wt2" fmla="sin wd2 enAng" />
+      <gd name="ht2" fmla="cos hd2 enAng" />
+      <gd name="dx2" fmla="cat2 wd2 ht2 wt2" />
+      <gd name="dy2" fmla="sat2 hd2 ht2 wt2" />
+      <gd name="x2" fmla="+- hc dx2 0" />
+      <gd name="y2" fmla="+- vc dy2 0" />
+      <gd name="idx" fmla="cos wd2 2700000" />
+      <gd name="idy" fmla="sin hd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefAng="adj1" minAng="0" maxAng="21599999">
+        <pos x="x1" y="y1" />
+      </ahPolar>
+      <ahPolar gdRefAng="adj2" minAng="0" maxAng="21599999">
+        <pos x="x2" y="y2" />
+      </ahPolar>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+    <rect l="il" t="ir" r="it" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="stAng" swAng="swAng" />
+        <lnTo>
+          <pt x="hc" y="vc" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </pie>
+  <pieWedge>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="g1" fmla="cos w 13500000" />
+      <gd name="g2" fmla="sin h 13500000" />
+      <gd name="x1" fmla="+- r g1 0" />
+      <gd name="y1" fmla="+- b g2 0" />
+    </gdLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+    </cxnLst>
+    <rect l="x1" t="y1" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <arcTo wR="w" hR="h" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </pieWedge>
+  <plaque>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 16667" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="x1" fmla="*/ ss a 100000" />
+      <gd name="x2" fmla="+- r 0 x1" />
+
+      <gd name="y2" fmla="+- b 0 x1" />
+      <gd name="il" fmla="*/ x1 70711 100000" />
+
+      <gd name="ir" fmla="+- r 0 il" />
+      <gd name="ib" fmla="+- b 0 il" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="50000">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="il" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="x1" />
+        </moveTo>
+        <arcTo wR="x1" hR="x1" stAng="cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="cd2" swAng="-5400000" />
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="3cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="0" swAng="-5400000" />
+        <close />
+      </path>
+    </pathLst>
+
+  </plaque>
+  <plaqueTabs>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="md" fmla="mod w h 0" />
+      <gd name="dx" fmla="*/ 1 md 20" />
+
+      <gd name="y1" fmla="+- 0 b dx" />
+
+      <gd name="x1" fmla="+- 0 r dx" />
+
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd2">
+        <pos x="l" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="dx" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y1" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="b" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="dx" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x1" y="t" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="dx" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x1" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="t" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="dx" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y1" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="b" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="dx" t="dx" r="x1" b="y1" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="dx" y="t" />
+        </lnTo>
+        <arcTo wR="dx" hR="dx" stAng="0" swAng="cd4" />
+        <close />
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y1" />
+        </moveTo>
+        <arcTo wR="dx" hR="dx" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path>
+        <moveTo>
+          <pt x="r" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="dx" />
+        </lnTo>
+        <arcTo wR="dx" hR="dx" stAng="cd4" swAng="cd4" />
+        <close />
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x1" y="b" />
+        </moveTo>
+        <arcTo wR="dx" hR="dx" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </plaqueTabs>
+  <plus>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 25000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="x1" fmla="*/ ss a 100000" />
+      <gd name="x2" fmla="+- r 0 x1" />
+      <gd name="y2" fmla="+- b 0 x1" />
+      <gd name="d" fmla="+- w 0 h" />
+      <gd name="il" fmla="?: d l x1" />
+      <gd name="ir" fmla="?: d r x2" />
+      <gd name="it" fmla="?: d x1 t" />
+      <gd name="ib" fmla="?: d y2 b" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="50000">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="x1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </plus>
+  <quadArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 22500" />
+
+      <gd name="adj2" fmla="val 22500" />
+
+      <gd name="adj3" fmla="val 22500" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a2" fmla="pin 0 adj2 50000" />
+      <gd name="maxAdj1" fmla="*/ a2 2 1" />
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="q1" fmla="+- 100000 0 maxAdj1" />
+      <gd name="maxAdj3" fmla="*/ q1 1 2" />
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="x1" fmla="*/ ss a3 100000" />
+      <gd name="dx2" fmla="*/ ss a2 100000" />
+
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x5" fmla="+- hc dx2 0" />
+      <gd name="dx3" fmla="*/ ss a1 200000" />
+
+      <gd name="x3" fmla="+- hc 0 dx3" />
+      <gd name="x4" fmla="+- hc dx3 0" />
+      <gd name="x6" fmla="+- r 0 x1" />
+
+      <gd name="y2" fmla="+- vc 0 dx2" />
+      <gd name="y5" fmla="+- vc dx2 0" />
+      <gd name="y3" fmla="+- vc 0 dx3" />
+      <gd name="y4" fmla="+- vc dx3 0" />
+      <gd name="y6" fmla="+- b 0 x1" />
+      <gd name="il" fmla="*/ dx3 x1 dx2" />
+      <gd name="ir" fmla="+- r 0 il" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="maxAdj1">
+        <pos x="x3" y="x1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="50000">
+        <pos x="x2" y="t" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="0" maxY="maxAdj3">
+        <pos x="r" y="x1" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="y3" r="ir" b="y4" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="x1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y5" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </quadArrow>
+  <quadArrowCallout>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 18515" />
+
+      <gd name="adj2" fmla="val 18515" />
+
+      <gd name="adj3" fmla="val 18515" />
+
+      <gd name="adj4" fmla="val 48123" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a2" fmla="pin 0 adj2 50000" />
+      <gd name="maxAdj1" fmla="*/ a2 2 1" />
+
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="maxAdj3" fmla="+- 50000 0 a2" />
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="q2" fmla="*/ a3 2 1" />
+
+      <gd name="maxAdj4" fmla="+- 100000 0 q2" />
+
+      <gd name="a4" fmla="pin a1 adj4 maxAdj4" />
+      <gd name="dx2" fmla="*/ ss a2 100000" />
+
+      <gd name="dx3" fmla="*/ ss a1 200000" />
+
+      <gd name="ah" fmla="*/ ss a3 100000" />
+
+      <gd name="dx1" fmla="*/ w a4 200000" />
+
+      <gd name="dy1" fmla="*/ h a4 200000" />
+
+
+      <gd name="x8" fmla="+- r 0 ah" />
+      <gd name="x2" fmla="+- hc 0 dx1" />
+      <gd name="x7" fmla="+- hc dx1 0" />
+      <gd name="x3" fmla="+- hc 0 dx2" />
+      <gd name="x6" fmla="+- hc dx2 0" />
+      <gd name="x4" fmla="+- hc 0 dx3" />
+      <gd name="x5" fmla="+- hc dx3 0" />
+
+      <gd name="y8" fmla="+- b 0 ah" />
+      <gd name="y2" fmla="+- vc 0 dy1" />
+      <gd name="y7" fmla="+- vc dy1 0" />
+      <gd name="y3" fmla="+- vc 0 dx2" />
+      <gd name="y6" fmla="+- vc dx2 0" />
+      <gd name="y4" fmla="+- vc 0 dx3" />
+      <gd name="y5" fmla="+- vc dx3 0" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="maxAdj1">
+        <pos x="x4" y="ah" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="50000">
+        <pos x="x3" y="t" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="0" maxY="maxAdj3">
+        <pos x="r" y="ah" />
+      </ahXY>
+      <ahXY gdRefY="adj4" minY="a1" maxY="maxAdj4">
+        <pos x="l" y="y2" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x2" t="y2" r="x7" b="y7" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="ah" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="ah" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="ah" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="ah" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="ah" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="ah" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x7" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x7" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x7" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x7" y="y7" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y7" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y8" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y8" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y8" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y8" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y7" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y7" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="ah" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="ah" y="y6" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </quadArrowCallout>
+  <rect>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </rect>
+  <ribbon>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 16667" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 33333" />
+      <gd name="a2" fmla="pin 25000 adj2 75000" />
+
+
+      <gd name="x10" fmla="+- r 0 wd8" />
+
+      <gd name="dx2" fmla="*/ w a2 200000" />
+
+      <gd name="x2" fmla="+- hc 0 dx2" />
+
+      <gd name="x9" fmla="+- hc dx2 0" />
+
+      <gd name="x3" fmla="+- x2 wd32 0" />
+      <gd name="x8" fmla="+- x9 0 wd32" />
+      <gd name="x5" fmla="+- x2 wd8 0" />
+
+      <gd name="x6" fmla="+- x9 0 wd8" />
+
+      <gd name="x4" fmla="+- x5 0 wd32" />
+      <gd name="x7" fmla="+- x6 wd32 0" />
+      <gd name="y1" fmla="*/ h a1 200000" />
+
+      <gd name="y2" fmla="*/ h a1 100000" />
+
+      <gd name="y4" fmla="+- b 0 y2" />
+
+      <gd name="y3" fmla="*/ y4 1 2" />
+
+      <gd name="hR" fmla="*/ h a1 400000" />
+
+      <gd name="y5" fmla="+- b 0 hR" />
+      <gd name="y6" fmla="+- y2 0 hR" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="33333">
+        <pos x="hc" y="y2" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="25000" maxX="75000">
+        <pos x="x2" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="wd8" y="y3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x10" y="y3" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x2" t="y2" r="x9" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x4" y="t" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="x8" y="y2" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="x7" y="y1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x10" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x9" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x9" y="y5" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="x3" y="b" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="x2" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="wd8" y="y3" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darkenLess" extrusionOk="false">
+
+        <moveTo>
+          <pt x="x5" y="hR" />
+        </moveTo>
+        <arcTo wR="wd32" hR="hR" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="x5" y="y2" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="x6" y="hR" />
+        </moveTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd2" swAng="-5400000" />
+        <lnTo>
+          <pt x="x8" y="y1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="x6" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x4" y="t" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="x8" y="y2" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="x7" y="y1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x10" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x9" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x9" y="y5" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="x3" y="b" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="x2" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="wd8" y="y3" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="x5" y="hR" />
+        </moveTo>
+        <lnTo>
+          <pt x="x5" y="y2" />
+        </lnTo>
+        <moveTo>
+          <pt x="x6" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x6" y="hR" />
+        </lnTo>
+        <moveTo>
+          <pt x="x2" y="y4" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y6" />
+        </lnTo>
+        <moveTo>
+          <pt x="x9" y="y6" />
+        </moveTo>
+        <lnTo>
+          <pt x="x9" y="y4" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </ribbon>
+  <ribbon2>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 16667" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 33333" />
+      <gd name="a2" fmla="pin 25000 adj2 75000" />
+
+
+      <gd name="x10" fmla="+- r 0 wd8" />
+
+      <gd name="dx2" fmla="*/ w a2 200000" />
+
+      <gd name="x2" fmla="+- hc 0 dx2" />
+
+      <gd name="x9" fmla="+- hc dx2 0" />
+
+      <gd name="x3" fmla="+- x2 wd32 0" />
+      <gd name="x8" fmla="+- x9 0 wd32" />
+      <gd name="x5" fmla="+- x2 wd8 0" />
+
+      <gd name="x6" fmla="+- x9 0 wd8" />
+
+      <gd name="x4" fmla="+- x5 0 wd32" />
+      <gd name="x7" fmla="+- x6 wd32 0" />
+      <gd name="dy1" fmla="*/ h a1 200000" />
+
+      <gd name="y1" fmla="+- b 0 dy1" />
+      <gd name="dy2" fmla="*/ h a1 100000" />
+
+      <gd name="y2" fmla="+- b 0 dy2" />
+      <gd name="y4" fmla="+- t dy2 0" />
+
+      <gd name="y3" fmla="+/ y4 b 2" />
+
+      <gd name="hR" fmla="*/ h a1 400000" />
+
+
+      <gd name="y6" fmla="+- b 0 hR" />
+      <gd name="y7" fmla="+- y1 0 hR" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="33333">
+        <pos x="hc" y="y2" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="25000" maxX="75000">
+        <pos x="x2" y="b" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="wd8" y="y3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="y2" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x10" y="y3" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x2" t="t" r="x9" b="y2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="x4" y="b" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="x8" y="y2" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="x7" y="y1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x10" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x9" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x9" y="hR" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="0" swAng="-5400000" />
+        <lnTo>
+          <pt x="x3" y="t" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="x2" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="wd8" y="y3" />
+        </lnTo>
+        <close />
+      </path>
+      <path stroke="false" fill="darkenLess" extrusionOk="false">
+
+        <moveTo>
+          <pt x="x5" y="y6" />
+        </moveTo>
+        <arcTo wR="wd32" hR="hR" stAng="0" swAng="-5400000" />
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="x5" y="y2" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="x6" y="y6" />
+        </moveTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="x8" y="y1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="x6" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="wd8" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="hR" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="x8" y="t" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="x9" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x9" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x10" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x7" y="b" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="x8" y="y1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="x3" y="y2" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <arcTo wR="wd32" hR="hR" stAng="3cd4" swAng="cd2" />
+        <close />
+        <moveTo>
+          <pt x="x5" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x5" y="y6" />
+        </lnTo>
+        <moveTo>
+          <pt x="x6" y="y6" />
+        </moveTo>
+        <lnTo>
+          <pt x="x6" y="y2" />
+        </lnTo>
+        <moveTo>
+          <pt x="x2" y="y7" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y4" />
+        </lnTo>
+        <moveTo>
+          <pt x="x9" y="y4" />
+        </moveTo>
+        <lnTo>
+          <pt x="x9" y="y7" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </ribbon2>
+  <rightArrow>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+      <gd name="adj2" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 100000 w ss" />
+      <gd name="a1" fmla="pin 0 adj1 100000" />
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="dx1" fmla="*/ ss a2 100000" />
+      <gd name="x1" fmla="+- r 0 dx1" />
+      <gd name="dy1" fmla="*/ h a1 200000" />
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc dy1 0" />
+      <gd name="dx2" fmla="*/ y1 dx1 hd2" />
+      <gd name="x2" fmla="+- x1 dx2 0" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="100000">
+        <pos x="l" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x1" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x1" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="y1" r="x2" b="y2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </rightArrow>
+  <rightArrowCallout>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 25000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+      <gd name="adj4" fmla="val 64977" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 50000 h ss" />
+
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="maxAdj1" fmla="*/ a2 2 1" />
+
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="maxAdj3" fmla="*/ 100000 w ss" />
+
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="q2" fmla="*/ a3 ss w" />
+
+      <gd name="maxAdj4" fmla="+- 100000 0 q2" />
+
+      <gd name="a4" fmla="pin 0 adj4 maxAdj4" />
+      <gd name="dy1" fmla="*/ ss a2 100000" />
+
+      <gd name="dy2" fmla="*/ ss a1 200000" />
+
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc 0 dy2" />
+      <gd name="y3" fmla="+- vc dy2 0" />
+      <gd name="y4" fmla="+- vc dy1 0" />
+      <gd name="dx3" fmla="*/ ss a3 100000" />
+
+      <gd name="x3" fmla="+- r 0 dx3" />
+      <gd name="x2" fmla="*/ w a4 100000" />
+
+      <gd name="x1" fmla="*/ x2 1 2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="maxAdj1">
+        <pos x="x3" y="y2" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="0" maxY="maxAdj2">
+        <pos x="r" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj3" minX="0" maxX="maxAdj3">
+        <pos x="x3" y="t" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="0" maxX="maxAdj4">
+        <pos x="x2" y="b" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x1" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x1" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="x2" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </rightArrowCallout>
+  <rightBrace>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 8333" />
+      <gd name="adj2" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a2" fmla="pin 0 adj2 100000" />
+      <gd name="q1" fmla="+- 100000 0 a2" />
+      <gd name="q2" fmla="min q1 a2" />
+      <gd name="q3" fmla="*/ q2 1 2" />
+      <gd name="maxAdj1" fmla="*/ q3 h ss" />
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="y1" fmla="*/ ss a1 100000" />
+      <gd name="y3" fmla="*/ h a2 100000" />
+      <gd name="y2" fmla="+- y3 0 y1" />
+      <gd name="y4" fmla="+- b 0 y1" />
+      <gd name="dx1" fmla="cos wd2 2700000" />
+      <gd name="dy1" fmla="sin y1 2700000" />
+      <gd name="ir" fmla="+- l dx1 0" />
+      <gd name="it" fmla="+- y1 0 dy1" />
+      <gd name="ib" fmla="+- b dy1 y1" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="maxAdj1">
+        <pos x="hc" y="y1" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="0" maxY="100000">
+        <pos x="r" y="y3" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd4">
+        <pos x="l" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="r" y="y3" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="l" y="b" />
+      </cxn>
+    </cxnLst>
+    <rect l="l" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <arcTo wR="wd2" hR="y1" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="hc" y="y2" />
+        </lnTo>
+        <arcTo wR="wd2" hR="y1" stAng="cd2" swAng="-5400000" />
+        <arcTo wR="wd2" hR="y1" stAng="3cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="hc" y="y4" />
+        </lnTo>
+        <arcTo wR="wd2" hR="y1" stAng="0" swAng="cd4" />
+        <close />
+      </path>
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <arcTo wR="wd2" hR="y1" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="hc" y="y2" />
+        </lnTo>
+        <arcTo wR="wd2" hR="y1" stAng="cd2" swAng="-5400000" />
+        <arcTo wR="wd2" hR="y1" stAng="3cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="hc" y="y4" />
+        </lnTo>
+        <arcTo wR="wd2" hR="y1" stAng="0" swAng="cd4" />
+      </path>
+    </pathLst>
+  </rightBrace>
+  <rightBracket>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 8333" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj" fmla="*/ 50000 h ss" />
+
+      <gd name="a" fmla="pin 0 adj maxAdj" />
+      <gd name="y1" fmla="*/ ss a 100000" />
+
+      <gd name="y2" fmla="+- b 0 y1" />
+
+      <gd name="dx1" fmla="cos w 2700000" />
+      <gd name="dy1" fmla="sin y1 2700000" />
+      <gd name="ir" fmla="+- l dx1 0" />
+      <gd name="it" fmla="+- y1 0 dy1" />
+      <gd name="ib" fmla="+- b dy1 y1" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="maxAdj">
+        <pos x="r" y="y1" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd4">
+        <pos x="l" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="l" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <arcTo wR="w" hR="y1" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <arcTo wR="w" hR="y1" stAng="0" swAng="cd4" />
+        <close />
+      </path>
+      <path fill="none">
+
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <arcTo wR="w" hR="y1" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <arcTo wR="w" hR="y1" stAng="0" swAng="cd4" />
+      </path>
+    </pathLst>
+
+  </rightBracket>
+  <round1Rect>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 16667" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="dx1" fmla="*/ ss a 100000" />
+      <gd name="x1" fmla="+- r 0 dx1" />
+      <gd name="idx" fmla="*/ dx1 29289 100000" />
+      <gd name="ir" fmla="+- r 0 idx" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="50000">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="ir" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <arcTo wR="dx1" hR="dx1" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </round1Rect>
+  <round2DiagRect>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 16667" />
+      <gd name="adj2" fmla="val 0" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 50000" />
+      <gd name="a2" fmla="pin 0 adj2 50000" />
+      <gd name="x1" fmla="*/ ss a1 100000" />
+      <gd name="y1" fmla="+- b 0 x1" />
+      <gd name="a" fmla="*/ ss a2 100000" />
+      <gd name="x2" fmla="+- r 0 a" />
+      <gd name="y2" fmla="+- b 0 a" />
+      <gd name="dx1" fmla="*/ x1 29289 100000" />
+      <gd name="dx2" fmla="*/ a 29289 100000" />
+      <gd name="d" fmla="+- dx1 0 dx2" />
+      <gd name="dx" fmla="?: d dx1 dx2" />
+      <gd name="ir" fmla="+- r 0 dx" />
+      <gd name="ib" fmla="+- b 0 dx" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="50000">
+        <pos x="x1" y="t" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="50000">
+        <pos x="x2" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="dx" t="dx" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <arcTo wR="a" hR="a" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="y1" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="a" y="b" />
+        </lnTo>
+        <arcTo wR="a" hR="a" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="l" y="x1" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="cd2" swAng="cd4" />
+        <close />
+      </path>
+    </pathLst>
+
+  </round2DiagRect>
+  <round2SameRect>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 16667" />
+      <gd name="adj2" fmla="val 0" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 50000" />
+      <gd name="a2" fmla="pin 0 adj2 50000" />
+
+      <gd name="tx1" fmla="*/ ss a1 100000" />
+      <gd name="tx2" fmla="+- r 0 tx1" />
+
+      <gd name="bx1" fmla="*/ ss a2 100000" />
+      <gd name="bx2" fmla="+- r 0 bx1" />
+      <gd name="by1" fmla="+- b 0 bx1" />
+      <gd name="d" fmla="+- tx1 0 bx1" />
+      <gd name="tdx" fmla="*/ tx1 29289 100000" />
+      <gd name="bdx" fmla="*/ bx1 29289 100000" />
+      <gd name="il" fmla="?: d tdx bdx" />
+      <gd name="ir" fmla="+- r 0 il" />
+      <gd name="ib" fmla="+- b 0 bdx" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="50000">
+        <pos x="tx2" y="t" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="50000">
+        <pos x="bx1" y="b" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="tdx" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="tx1" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="tx2" y="t" />
+        </lnTo>
+        <arcTo wR="tx1" hR="tx1" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="by1" />
+        </lnTo>
+        <arcTo wR="bx1" hR="bx1" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="bx1" y="b" />
+        </lnTo>
+        <arcTo wR="bx1" hR="bx1" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="l" y="tx1" />
+        </lnTo>
+        <arcTo wR="tx1" hR="tx1" stAng="cd2" swAng="cd4" />
+        <close />
+      </path>
+    </pathLst>
+
+  </round2SameRect>
+  <roundRect>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 16667" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="x1" fmla="*/ ss a 100000" />
+      <gd name="x2" fmla="+- r 0 x1" />
+      <gd name="y2" fmla="+- b 0 x1" />
+      <gd name="il" fmla="*/ x1 29289 100000" />
+      <gd name="ir" fmla="+- r 0 il" />
+      <gd name="ib" fmla="+- b 0 il" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="50000">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+    <rect l="il" t="il" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="x1" />
+        </moveTo>
+        <arcTo wR="x1" hR="x1" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="cd4" swAng="cd4" />
+        <close />
+      </path>
+    </pathLst>
+  </roundRect>
+  <rtTriangle>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="it" fmla="*/ h 7 12" />
+      <gd name="ir" fmla="*/ w 7 12" />
+      <gd name="ib" fmla="*/ h 11 12" />
+    </gdLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="l" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="l" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="r" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="hc" y="vc" />
+      </cxn>
+    </cxnLst>
+    <rect l="wd12" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="l" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </rtTriangle>
+  <smileyFace>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 4653" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin -4653 adj 4653" />
+      <gd name="x1" fmla="*/ w 4969 21699" />
+
+      <gd name="x2" fmla="*/ w 6215 21600" />
+
+      <gd name="x3" fmla="*/ w 13135 21600" />
+
+      <gd name="x4" fmla="*/ w 16640 21600" />
+
+      <gd name="y1" fmla="*/ h 7570 21600" />
+
+      <gd name="y3" fmla="*/ h 16515 21600" />
+
+      <gd name="dy2" fmla="*/ h a 100000" />
+
+      <gd name="y2" fmla="+- y3 0 dy2" />
+
+      <gd name="y4" fmla="+- y3 dy2 0" />
+
+      <gd name="dy3" fmla="*/ h a 50000" />
+
+      <gd name="y5" fmla="+- y4 dy3 0" />
+      <gd name="idx" fmla="cos wd2 2700000" />
+      <gd name="idy" fmla="sin hd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+      <gd name="wR" fmla="*/ w 1125 21600" />
+      <gd name="hR" fmla="*/ h 1125 21600" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="-4653" maxY="4653">
+        <pos x="hc" y="y4" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="il" y="it" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="il" y="ib" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="ir" y="ib" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="ir" y="it" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="cd2" swAng="21600000" />
+        <close />
+      </path>
+      <path fill="darkenLess" extrusionOk="false">
+
+        <moveTo>
+          <pt x="x2" y="y1" />
+        </moveTo>
+        <arcTo wR="wR" hR="hR" stAng="cd2" swAng="21600000" />
+        <moveTo>
+          <pt x="x3" y="y1" />
+        </moveTo>
+        <arcTo wR="wR" hR="hR" stAng="cd2" swAng="21600000" />
+      </path>
+      <path fill="none" extrusionOk="false">
+
+        <moveTo>
+          <pt x="x1" y="y2" />
+        </moveTo>
+        <quadBezTo>
+          <pt x="hc" y="y5" />
+          <pt x="x4" y="y2" />
+        </quadBezTo>
+      </path>
+      <path fill="none">
+
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="cd2" swAng="21600000" />
+        <close />
+      </path>
+    </pathLst>
+
+  </smileyFace>
+  <snip1Rect>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 16667" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="dx1" fmla="*/ ss a 100000" />
+      <gd name="x1" fmla="+- r 0 dx1" />
+      <gd name="it" fmla="*/ dx1 1 2" />
+      <gd name="ir" fmla="+/ x1 r 2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="50000">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="it" r="ir" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="dx1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </snip1Rect>
+  <snip2DiagRect>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 0" />
+      <gd name="adj2" fmla="val 16667" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 50000" />
+      <gd name="a2" fmla="pin 0 adj2 50000" />
+      <gd name="lx1" fmla="*/ ss a1 100000" />
+      <gd name="lx2" fmla="+- r 0 lx1" />
+      <gd name="ly1" fmla="+- b 0 lx1" />
+      <gd name="rx1" fmla="*/ ss a2 100000" />
+      <gd name="rx2" fmla="+- r 0 rx1" />
+      <gd name="ry1" fmla="+- b 0 rx1" />
+      <gd name="d" fmla="+- lx1 0 rx1" />
+      <gd name="dx" fmla="?: d lx1 rx1" />
+      <gd name="il" fmla="*/ dx 1 2" />
+
+      <gd name="ir" fmla="+- r 0 il" />
+      <gd name="ib" fmla="+- b 0 il" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="50000">
+        <pos x="lx1" y="t" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="50000">
+        <pos x="rx2" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="il" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="lx1" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="rx2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="rx1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="ly1" />
+        </lnTo>
+        <lnTo>
+          <pt x="lx2" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="rx1" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="ry1" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="lx1" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </snip2DiagRect>
+  <snip2SameRect>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 16667" />
+      <gd name="adj2" fmla="val 0" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 50000" />
+      <gd name="a2" fmla="pin 0 adj2 50000" />
+      <gd name="tx1" fmla="*/ ss a1 100000" />
+      <gd name="tx2" fmla="+- r 0 tx1" />
+      <gd name="bx1" fmla="*/ ss a2 100000" />
+      <gd name="bx2" fmla="+- r 0 bx1" />
+      <gd name="by1" fmla="+- b 0 bx1" />
+      <gd name="d" fmla="+- tx1 0 bx1" />
+      <gd name="dx" fmla="?: d tx1 bx1" />
+      <gd name="il" fmla="*/ dx 1 2" />
+      <gd name="ir" fmla="+- r 0 il" />
+      <gd name="it" fmla="*/ tx1 1 2" />
+      <gd name="ib" fmla="+/ by1 b 2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="50000">
+        <pos x="tx2" y="t" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="50000">
+        <pos x="bx1" y="b" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="tx1" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="tx2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="tx1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="by1" />
+        </lnTo>
+        <lnTo>
+          <pt x="bx2" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="bx1" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="by1" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="tx1" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </snip2SameRect>
+  <snipRoundRect>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 16667" />
+      <gd name="adj2" fmla="val 16667" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 50000" />
+      <gd name="a2" fmla="pin 0 adj2 50000" />
+      <gd name="x1" fmla="*/ ss a1 100000" />
+      <gd name="dx2" fmla="*/ ss a2 100000" />
+      <gd name="x2" fmla="+- r 0 dx2" />
+      <gd name="il" fmla="*/ x1 29289 100000" />
+
+      <gd name="ir" fmla="+/ x2 r 2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="50000">
+        <pos x="x1" y="t" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="50000">
+        <pos x="x2" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="il" r="ir" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="dx2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="x1" />
+        </lnTo>
+        <arcTo wR="x1" hR="x1" stAng="cd2" swAng="cd4" />
+        <close />
+      </path>
+    </pathLst>
+
+  </snipRoundRect>
+  <squareTabs>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="md" fmla="mod w h 0" />
+      <gd name="dx" fmla="*/ 1 md 20" />
+
+      <gd name="y1" fmla="+- 0 b dx" />
+
+      <gd name="x1" fmla="+- 0 r dx" />
+
+    </gdLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd2">
+        <pos x="l" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="dx" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y1" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="dx" y="dx" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="dx" y="x1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="dx" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x1" y="t" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="dx" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x1" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="t" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="dx" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y1" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x1" y="dx" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x1" y="y1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="dx" t="dx" r="x1" b="y1" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="dx" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="dx" y="dx" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="dx" />
+        </lnTo>
+        <close />
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="dx" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="dx" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x1" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="dx" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="dx" />
+        </lnTo>
+        <close />
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </squareTabs>
+  <star10>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 42533" />
+      <gd name="hf" fmla="val 105146" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="swd2" fmla="*/ wd2 hf 100000" />
+      <gd name="dx1" fmla="*/ swd2 95106 100000" />
+      <gd name="dx2" fmla="*/ swd2 58779 100000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x3" fmla="+- hc dx2 0" />
+      <gd name="x4" fmla="+- hc dx1 0" />
+      <gd name="dy1" fmla="*/ hd2 80902 100000" />
+      <gd name="dy2" fmla="*/ hd2 30902 100000" />
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc 0 dy2" />
+      <gd name="y3" fmla="+- vc dy2 0" />
+      <gd name="y4" fmla="+- vc dy1 0" />
+      <gd name="iwd2" fmla="*/ swd2 a 50000" />
+      <gd name="ihd2" fmla="*/ hd2 a 50000" />
+      <gd name="sdx1" fmla="*/ iwd2 80902 100000" />
+      <gd name="sdx2" fmla="*/ iwd2 30902 100000" />
+      <gd name="sdy1" fmla="*/ ihd2 95106 100000" />
+      <gd name="sdy2" fmla="*/ ihd2 58779 100000" />
+      <gd name="sx1" fmla="+- hc 0 iwd2" />
+      <gd name="sx2" fmla="+- hc 0 sdx1" />
+      <gd name="sx3" fmla="+- hc 0 sdx2" />
+      <gd name="sx4" fmla="+- hc sdx2 0" />
+      <gd name="sx5" fmla="+- hc sdx1 0" />
+      <gd name="sx6" fmla="+- hc iwd2 0" />
+      <gd name="sy1" fmla="+- vc 0 sdy1" />
+      <gd name="sy2" fmla="+- vc 0 sdy2" />
+      <gd name="sy3" fmla="+- vc sdy2 0" />
+      <gd name="sy4" fmla="+- vc sdy1 0" />
+      <gd name="yAdj" fmla="+- vc 0 ihd2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="50000">
+        <pos x="hc" y="yAdj" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x4" y="y2" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x4" y="y3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="y4" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x2" y="y4" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y3" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y2" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x2" y="y1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x3" y="y1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="sx2" t="sy2" r="sx5" b="sy3" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="sx2" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx5" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx6" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx5" y="sy3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy4" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx1" y="vc" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </star10>
+  <star12>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 37500" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="dx1" fmla="cos wd2 1800000" />
+
+      <gd name="dy1" fmla="sin hd2 3600000" />
+
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x3" fmla="*/ w 3 4" />
+      <gd name="x4" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y3" fmla="*/ h 3 4" />
+      <gd name="y4" fmla="+- vc dy1 0" />
+      <gd name="iwd2" fmla="*/ wd2 a 50000" />
+      <gd name="ihd2" fmla="*/ hd2 a 50000" />
+      <gd name="sdx1" fmla="cos iwd2 900000" />
+      <gd name="sdx2" fmla="cos iwd2 2700000" />
+      <gd name="sdx3" fmla="cos iwd2 4500000" />
+      <gd name="sdy1" fmla="sin ihd2 4500000" />
+      <gd name="sdy2" fmla="sin ihd2 2700000" />
+      <gd name="sdy3" fmla="sin ihd2 900000" />
+      <gd name="sx1" fmla="+- hc 0 sdx1" />
+      <gd name="sx2" fmla="+- hc 0 sdx2" />
+      <gd name="sx3" fmla="+- hc 0 sdx3" />
+      <gd name="sx4" fmla="+- hc sdx3 0" />
+      <gd name="sx5" fmla="+- hc sdx2 0" />
+      <gd name="sx6" fmla="+- hc sdx1 0" />
+      <gd name="sy1" fmla="+- vc 0 sdy1" />
+      <gd name="sy2" fmla="+- vc 0 sdy2" />
+      <gd name="sy3" fmla="+- vc 0 sdy3" />
+      <gd name="sy4" fmla="+- vc sdy3 0" />
+      <gd name="sy5" fmla="+- vc sdy2 0" />
+      <gd name="sy6" fmla="+- vc sdy1 0" />
+      <gd name="yAdj" fmla="+- vc 0 ihd2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="50000">
+        <pos x="hc" y="yAdj" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x4" y="hd4" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x4" y="y3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="y4" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="wd4" y="y4" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y3" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="hd4" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="wd4" y="y1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x3" y="y1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="sx2" t="sy2" r="sx5" b="sy5" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="sx1" y="sy3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="hd4" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="wd4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx5" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="hd4" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx6" y="sy3" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx6" y="sy4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx5" y="sy5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy6" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy6" />
+        </lnTo>
+        <lnTo>
+          <pt x="wd4" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx1" y="sy4" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </star12>
+  <star16>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 37500" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="dx1" fmla="*/ wd2 92388 100000" />
+      <gd name="dx2" fmla="*/ wd2 70711 100000" />
+      <gd name="dx3" fmla="*/ wd2 38268 100000" />
+      <gd name="dy1" fmla="*/ hd2 92388 100000" />
+      <gd name="dy2" fmla="*/ hd2 70711 100000" />
+      <gd name="dy3" fmla="*/ hd2 38268 100000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x3" fmla="+- hc 0 dx3" />
+      <gd name="x4" fmla="+- hc dx3 0" />
+      <gd name="x5" fmla="+- hc dx2 0" />
+      <gd name="x6" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc 0 dy2" />
+      <gd name="y3" fmla="+- vc 0 dy3" />
+      <gd name="y4" fmla="+- vc dy3 0" />
+      <gd name="y5" fmla="+- vc dy2 0" />
+      <gd name="y6" fmla="+- vc dy1 0" />
+      <gd name="iwd2" fmla="*/ wd2 a 50000" />
+      <gd name="ihd2" fmla="*/ hd2 a 50000" />
+      <gd name="sdx1" fmla="*/ iwd2 98079 100000" />
+      <gd name="sdx2" fmla="*/ iwd2 83147 100000" />
+      <gd name="sdx3" fmla="*/ iwd2 55557 100000" />
+      <gd name="sdx4" fmla="*/ iwd2 19509 100000" />
+      <gd name="sdy1" fmla="*/ ihd2 98079 100000" />
+      <gd name="sdy2" fmla="*/ ihd2 83147 100000" />
+      <gd name="sdy3" fmla="*/ ihd2 55557 100000" />
+      <gd name="sdy4" fmla="*/ ihd2 19509 100000" />
+      <gd name="sx1" fmla="+- hc 0 sdx1" />
+      <gd name="sx2" fmla="+- hc 0 sdx2" />
+      <gd name="sx3" fmla="+- hc 0 sdx3" />
+      <gd name="sx4" fmla="+- hc 0 sdx4" />
+      <gd name="sx5" fmla="+- hc sdx4 0" />
+      <gd name="sx6" fmla="+- hc sdx3 0" />
+      <gd name="sx7" fmla="+- hc sdx2 0" />
+      <gd name="sx8" fmla="+- hc sdx1 0" />
+      <gd name="sy1" fmla="+- vc 0 sdy1" />
+      <gd name="sy2" fmla="+- vc 0 sdy2" />
+      <gd name="sy3" fmla="+- vc 0 sdy3" />
+      <gd name="sy4" fmla="+- vc 0 sdy4" />
+      <gd name="sy5" fmla="+- vc sdy4 0" />
+      <gd name="sy6" fmla="+- vc sdy3 0" />
+      <gd name="sy7" fmla="+- vc sdy2 0" />
+      <gd name="sy8" fmla="+- vc sdy1 0" />
+      <gd name="idx" fmla="cos iwd2 2700000" />
+      <gd name="idy" fmla="sin ihd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="ib" fmla="+- vc idy 0" />
+      <gd name="yAdj" fmla="+- vc 0 ihd2" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="50000">
+        <pos x="hc" y="yAdj" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x5" y="y2" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x6" y="y3" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x6" y="y4" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x5" y="y5" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x4" y="y6" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="y6" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x2" y="y5" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y4" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y3" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x2" y="y2" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x3" y="y1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x4" y="y1" />
+      </cxn>
+    </cxnLst>
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="sx1" y="sy4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx5" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx6" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx7" y="sy3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx8" y="sy4" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx8" y="sy5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx7" y="sy6" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx6" y="sy7" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx5" y="sy8" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy8" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy7" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy6" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx1" y="sy5" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </star16>
+  <star24>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 37500" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="dx1" fmla="cos wd2 900000" />
+      <gd name="dx2" fmla="cos wd2 1800000" />
+      <gd name="dx3" fmla="cos wd2 2700000" />
+      <gd name="dx4" fmla="val wd4" />
+      <gd name="dx5" fmla="cos wd2 4500000" />
+      <gd name="dy1" fmla="sin hd2 4500000" />
+      <gd name="dy2" fmla="sin hd2 3600000" />
+      <gd name="dy3" fmla="sin hd2 2700000" />
+      <gd name="dy4" fmla="val hd4" />
+      <gd name="dy5" fmla="sin hd2 900000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x3" fmla="+- hc 0 dx3" />
+      <gd name="x4" fmla="+- hc 0 dx4" />
+      <gd name="x5" fmla="+- hc 0 dx5" />
+      <gd name="x6" fmla="+- hc dx5 0" />
+      <gd name="x7" fmla="+- hc dx4 0" />
+      <gd name="x8" fmla="+- hc dx3 0" />
+      <gd name="x9" fmla="+- hc dx2 0" />
+      <gd name="x10" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc 0 dy2" />
+      <gd name="y3" fmla="+- vc 0 dy3" />
+      <gd name="y4" fmla="+- vc 0 dy4" />
+      <gd name="y5" fmla="+- vc 0 dy5" />
+      <gd name="y6" fmla="+- vc dy5 0" />
+      <gd name="y7" fmla="+- vc dy4 0" />
+      <gd name="y8" fmla="+- vc dy3 0" />
+      <gd name="y9" fmla="+- vc dy2 0" />
+      <gd name="y10" fmla="+- vc dy1 0" />
+      <gd name="iwd2" fmla="*/ wd2 a 50000" />
+      <gd name="ihd2" fmla="*/ hd2 a 50000" />
+      <gd name="sdx1" fmla="*/ iwd2 99144 100000" />
+      <gd name="sdx2" fmla="*/ iwd2 92388 100000" />
+      <gd name="sdx3" fmla="*/ iwd2 79335 100000" />
+      <gd name="sdx4" fmla="*/ iwd2 60876 100000" />
+      <gd name="sdx5" fmla="*/ iwd2 38268 100000" />
+      <gd name="sdx6" fmla="*/ iwd2 13053 100000" />
+      <gd name="sdy1" fmla="*/ ihd2 99144 100000" />
+      <gd name="sdy2" fmla="*/ ihd2 92388 100000" />
+      <gd name="sdy3" fmla="*/ ihd2 79335 100000" />
+      <gd name="sdy4" fmla="*/ ihd2 60876 100000" />
+      <gd name="sdy5" fmla="*/ ihd2 38268 100000" />
+      <gd name="sdy6" fmla="*/ ihd2 13053 100000" />
+      <gd name="sx1" fmla="+- hc 0 sdx1" />
+      <gd name="sx2" fmla="+- hc 0 sdx2" />
+      <gd name="sx3" fmla="+- hc 0 sdx3" />
+      <gd name="sx4" fmla="+- hc 0 sdx4" />
+      <gd name="sx5" fmla="+- hc 0 sdx5" />
+      <gd name="sx6" fmla="+- hc 0 sdx6" />
+      <gd name="sx7" fmla="+- hc sdx6 0" />
+      <gd name="sx8" fmla="+- hc sdx5 0" />
+      <gd name="sx9" fmla="+- hc sdx4 0" />
+      <gd name="sx10" fmla="+- hc sdx3 0" />
+      <gd name="sx11" fmla="+- hc sdx2 0" />
+      <gd name="sx12" fmla="+- hc sdx1 0" />
+      <gd name="sy1" fmla="+- vc 0 sdy1" />
+      <gd name="sy2" fmla="+- vc 0 sdy2" />
+      <gd name="sy3" fmla="+- vc 0 sdy3" />
+      <gd name="sy4" fmla="+- vc 0 sdy4" />
+      <gd name="sy5" fmla="+- vc 0 sdy5" />
+      <gd name="sy6" fmla="+- vc 0 sdy6" />
+      <gd name="sy7" fmla="+- vc sdy6 0" />
+      <gd name="sy8" fmla="+- vc sdy5 0" />
+      <gd name="sy9" fmla="+- vc sdy4 0" />
+      <gd name="sy10" fmla="+- vc sdy3 0" />
+      <gd name="sy11" fmla="+- vc sdy2 0" />
+      <gd name="sy12" fmla="+- vc sdy1 0" />
+      <gd name="idx" fmla="cos iwd2 2700000" />
+      <gd name="idy" fmla="sin ihd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="ib" fmla="+- vc idy 0" />
+      <gd name="yAdj" fmla="+- vc 0 ihd2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="ssd2">
+        <pos x="hc" y="yAdj" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="sx1" y="sy6" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx5" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx6" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx7" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx8" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x7" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx9" y="sy3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx10" y="sy4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x9" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx11" y="sy5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x10" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx12" y="sy6" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx12" y="sy7" />
+        </lnTo>
+        <lnTo>
+          <pt x="x10" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx11" y="sy8" />
+        </lnTo>
+        <lnTo>
+          <pt x="x9" y="y7" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx10" y="sy9" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y8" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx9" y="sy10" />
+        </lnTo>
+        <lnTo>
+          <pt x="x7" y="y9" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx8" y="sy11" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y10" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx7" y="sy12" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx6" y="sy12" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y10" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx5" y="sy11" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y9" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy10" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y8" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy9" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y7" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy8" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx1" y="sy7" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </star24>
+  <star32>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 37500" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="dx1" fmla="*/ wd2 98079 100000" />
+      <gd name="dx2" fmla="*/ wd2 92388 100000" />
+      <gd name="dx3" fmla="*/ wd2 83147 100000" />
+      <gd name="dx4" fmla="cos wd2 2700000" />
+      <gd name="dx5" fmla="*/ wd2 55557 100000" />
+      <gd name="dx6" fmla="*/ wd2 38268 100000" />
+      <gd name="dx7" fmla="*/ wd2 19509 100000" />
+      <gd name="dy1" fmla="*/ hd2 98079 100000" />
+      <gd name="dy2" fmla="*/ hd2 92388 100000" />
+      <gd name="dy3" fmla="*/ hd2 83147 100000" />
+      <gd name="dy4" fmla="sin hd2 2700000" />
+      <gd name="dy5" fmla="*/ hd2 55557 100000" />
+      <gd name="dy6" fmla="*/ hd2 38268 100000" />
+      <gd name="dy7" fmla="*/ hd2 19509 100000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x3" fmla="+- hc 0 dx3" />
+      <gd name="x4" fmla="+- hc 0 dx4" />
+      <gd name="x5" fmla="+- hc 0 dx5" />
+      <gd name="x6" fmla="+- hc 0 dx6" />
+      <gd name="x7" fmla="+- hc 0 dx7" />
+      <gd name="x8" fmla="+- hc dx7 0" />
+      <gd name="x9" fmla="+- hc dx6 0" />
+      <gd name="x10" fmla="+- hc dx5 0" />
+      <gd name="x11" fmla="+- hc dx4 0" />
+      <gd name="x12" fmla="+- hc dx3 0" />
+      <gd name="x13" fmla="+- hc dx2 0" />
+      <gd name="x14" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc 0 dy2" />
+      <gd name="y3" fmla="+- vc 0 dy3" />
+      <gd name="y4" fmla="+- vc 0 dy4" />
+      <gd name="y5" fmla="+- vc 0 dy5" />
+      <gd name="y6" fmla="+- vc 0 dy6" />
+      <gd name="y7" fmla="+- vc 0 dy7" />
+      <gd name="y8" fmla="+- vc dy7 0" />
+      <gd name="y9" fmla="+- vc dy6 0" />
+      <gd name="y10" fmla="+- vc dy5 0" />
+      <gd name="y11" fmla="+- vc dy4 0" />
+      <gd name="y12" fmla="+- vc dy3 0" />
+      <gd name="y13" fmla="+- vc dy2 0" />
+      <gd name="y14" fmla="+- vc dy1 0" />
+      <gd name="iwd2" fmla="*/ wd2 a 50000" />
+      <gd name="ihd2" fmla="*/ hd2 a 50000" />
+      <gd name="sdx1" fmla="*/ iwd2 99518 100000" />
+      <gd name="sdx2" fmla="*/ iwd2 95694 100000" />
+      <gd name="sdx3" fmla="*/ iwd2 88192 100000" />
+      <gd name="sdx4" fmla="*/ iwd2 77301 100000" />
+      <gd name="sdx5" fmla="*/ iwd2 63439 100000" />
+      <gd name="sdx6" fmla="*/ iwd2 47140 100000" />
+      <gd name="sdx7" fmla="*/ iwd2 29028 100000" />
+      <gd name="sdx8" fmla="*/ iwd2 9802 100000" />
+      <gd name="sdy1" fmla="*/ ihd2 99518 100000" />
+      <gd name="sdy2" fmla="*/ ihd2 95694 100000" />
+      <gd name="sdy3" fmla="*/ ihd2 88192 100000" />
+      <gd name="sdy4" fmla="*/ ihd2 77301 100000" />
+      <gd name="sdy5" fmla="*/ ihd2 63439 100000" />
+      <gd name="sdy6" fmla="*/ ihd2 47140 100000" />
+      <gd name="sdy7" fmla="*/ ihd2 29028 100000" />
+      <gd name="sdy8" fmla="*/ ihd2 9802 100000" />
+      <gd name="sx1" fmla="+- hc 0 sdx1" />
+      <gd name="sx2" fmla="+- hc 0 sdx2" />
+      <gd name="sx3" fmla="+- hc 0 sdx3" />
+      <gd name="sx4" fmla="+- hc 0 sdx4" />
+      <gd name="sx5" fmla="+- hc 0 sdx5" />
+      <gd name="sx6" fmla="+- hc 0 sdx6" />
+      <gd name="sx7" fmla="+- hc 0 sdx7" />
+      <gd name="sx8" fmla="+- hc 0 sdx8" />
+      <gd name="sx9" fmla="+- hc sdx8 0" />
+      <gd name="sx10" fmla="+- hc sdx7 0" />
+      <gd name="sx11" fmla="+- hc sdx6 0" />
+      <gd name="sx12" fmla="+- hc sdx5 0" />
+      <gd name="sx13" fmla="+- hc sdx4 0" />
+      <gd name="sx14" fmla="+- hc sdx3 0" />
+      <gd name="sx15" fmla="+- hc sdx2 0" />
+      <gd name="sx16" fmla="+- hc sdx1 0" />
+      <gd name="sy1" fmla="+- vc 0 sdy1" />
+      <gd name="sy2" fmla="+- vc 0 sdy2" />
+      <gd name="sy3" fmla="+- vc 0 sdy3" />
+      <gd name="sy4" fmla="+- vc 0 sdy4" />
+      <gd name="sy5" fmla="+- vc 0 sdy5" />
+      <gd name="sy6" fmla="+- vc 0 sdy6" />
+      <gd name="sy7" fmla="+- vc 0 sdy7" />
+      <gd name="sy8" fmla="+- vc 0 sdy8" />
+      <gd name="sy9" fmla="+- vc sdy8 0" />
+      <gd name="sy10" fmla="+- vc sdy7 0" />
+      <gd name="sy11" fmla="+- vc sdy6 0" />
+      <gd name="sy12" fmla="+- vc sdy5 0" />
+      <gd name="sy13" fmla="+- vc sdy4 0" />
+      <gd name="sy14" fmla="+- vc sdy3 0" />
+      <gd name="sy15" fmla="+- vc sdy2 0" />
+      <gd name="sy16" fmla="+- vc sdy1 0" />
+      <gd name="idx" fmla="cos iwd2 2700000" />
+      <gd name="idy" fmla="sin ihd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="ib" fmla="+- vc idy 0" />
+      <gd name="yAdj" fmla="+- vc 0 ihd2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="ssd2">
+        <pos x="hc" y="yAdj" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="sx1" y="sy8" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y7" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy7" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy6" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx5" y="sy4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx6" y="sy3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx7" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x7" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx8" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx9" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx10" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x9" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx11" y="sy3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x10" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx12" y="sy4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x11" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx13" y="sy5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x12" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx14" y="sy6" />
+        </lnTo>
+        <lnTo>
+          <pt x="x13" y="y6" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx15" y="sy7" />
+        </lnTo>
+        <lnTo>
+          <pt x="x14" y="y7" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx16" y="sy8" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx16" y="sy9" />
+        </lnTo>
+        <lnTo>
+          <pt x="x14" y="y8" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx15" y="sy10" />
+        </lnTo>
+        <lnTo>
+          <pt x="x13" y="y9" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx14" y="sy11" />
+        </lnTo>
+        <lnTo>
+          <pt x="x12" y="y10" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx13" y="sy12" />
+        </lnTo>
+        <lnTo>
+          <pt x="x11" y="y11" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx12" y="sy13" />
+        </lnTo>
+        <lnTo>
+          <pt x="x10" y="y12" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx11" y="sy14" />
+        </lnTo>
+        <lnTo>
+          <pt x="x9" y="y13" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx10" y="sy15" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y14" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx9" y="sy16" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx8" y="sy16" />
+        </lnTo>
+        <lnTo>
+          <pt x="x7" y="y14" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx7" y="sy15" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y13" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx6" y="sy14" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y12" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx5" y="sy13" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y11" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy12" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y10" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy11" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y9" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy10" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y8" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx1" y="sy9" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </star32>
+  <star4>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 12500" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="iwd2" fmla="*/ wd2 a 50000" />
+      <gd name="ihd2" fmla="*/ hd2 a 50000" />
+      <gd name="sdx" fmla="cos iwd2 2700000" />
+      <gd name="sdy" fmla="sin ihd2 2700000" />
+      <gd name="sx1" fmla="+- hc 0 sdx" />
+      <gd name="sx2" fmla="+- hc sdx 0" />
+      <gd name="sy1" fmla="+- vc 0 sdy" />
+      <gd name="sy2" fmla="+- vc sdy 0" />
+      <gd name="yAdj" fmla="+- vc 0 ihd2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="50000">
+        <pos x="hc" y="yAdj" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="sx1" t="sy1" r="sx2" b="sy2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="sx1" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx1" y="sy2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </star4>
+  <star5>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 19098" />
+      <gd name="hf" fmla="val 105146" />
+      <gd name="vf" fmla="val 110557" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="swd2" fmla="*/ wd2 hf 100000" />
+      <gd name="shd2" fmla="*/ hd2 vf 100000" />
+      <gd name="svc" fmla="*/ vc  vf 100000" />
+      <gd name="dx1" fmla="cos swd2 1080000" />
+      <gd name="dx2" fmla="cos swd2 18360000" />
+      <gd name="dy1" fmla="sin shd2 1080000" />
+      <gd name="dy2" fmla="sin shd2 18360000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x3" fmla="+- hc dx2 0" />
+      <gd name="x4" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- svc 0 dy1" />
+      <gd name="y2" fmla="+- svc 0 dy2" />
+      <gd name="iwd2" fmla="*/ swd2 a 50000" />
+      <gd name="ihd2" fmla="*/ shd2 a 50000" />
+      <gd name="sdx1" fmla="cos iwd2 20520000" />
+      <gd name="sdx2" fmla="cos iwd2 3240000" />
+      <gd name="sdy1" fmla="sin ihd2 3240000" />
+      <gd name="sdy2" fmla="sin ihd2 20520000" />
+      <gd name="sx1" fmla="+- hc 0 sdx1" />
+      <gd name="sx2" fmla="+- hc 0 sdx2" />
+      <gd name="sx3" fmla="+- hc sdx2 0" />
+      <gd name="sx4" fmla="+- hc sdx1 0" />
+      <gd name="sy1" fmla="+- svc 0 sdy1" />
+      <gd name="sy2" fmla="+- svc 0 sdy2" />
+      <gd name="sy3" fmla="+- svc ihd2 0" />
+      <gd name="yAdj" fmla="+- svc 0 ihd2" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="50000">
+        <pos x="hc" y="yAdj" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y1" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x2" y="y2" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="y2" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x4" y="y1" />
+      </cxn>
+    </cxnLst>
+    <rect l="sx1" t="sy1" r="sx4" b="sy3" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="sx2" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="sy3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx1" y="sy2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </star5>
+  <star6>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 28868" />
+      <gd name="hf" fmla="val 115470" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="swd2" fmla="*/ wd2 hf 100000" />
+      <gd name="dx1" fmla="cos swd2 1800000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc dx1 0" />
+      <gd name="y2" fmla="+- vc hd4 0" />
+      <gd name="iwd2" fmla="*/ swd2 a 50000" />
+      <gd name="ihd2" fmla="*/ hd2 a 50000" />
+      <gd name="sdx2" fmla="*/ iwd2 1 2" />
+      <gd name="sx1" fmla="+- hc 0 iwd2" />
+      <gd name="sx2" fmla="+- hc 0 sdx2" />
+      <gd name="sx3" fmla="+- hc sdx2 0" />
+      <gd name="sx4" fmla="+- hc iwd2 0" />
+      <gd name="sdy1" fmla="sin ihd2 3600000" />
+      <gd name="sy1" fmla="+- vc 0 sdy1" />
+      <gd name="sy2" fmla="+- vc sdy1 0" />
+      <gd name="yAdj" fmla="+- vc 0 ihd2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="50000">
+        <pos x="hc" y="yAdj" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x2" y="hd4" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x2" y="y2" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="hd4" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="sx1" t="sy1" r="sx4" b="sy2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="hd4" />
+        </moveTo>
+        <lnTo>
+          <pt x="sx2" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="hd4" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx1" y="vc" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </star6>
+  <star7>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 34601" />
+      <gd name="hf" fmla="val 102572" />
+      <gd name="vf" fmla="val 105210" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="swd2" fmla="*/ wd2 hf 100000" />
+      <gd name="shd2" fmla="*/ hd2 vf 100000" />
+      <gd name="svc" fmla="*/ vc  vf 100000" />
+      <gd name="dx1" fmla="*/ swd2 97493 100000" />
+      <gd name="dx2" fmla="*/ swd2 78183 100000" />
+      <gd name="dx3" fmla="*/ swd2 43388 100000" />
+      <gd name="dy1" fmla="*/ shd2 62349 100000" />
+      <gd name="dy2" fmla="*/ shd2 22252 100000" />
+      <gd name="dy3" fmla="*/ shd2 90097 100000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x3" fmla="+- hc 0 dx3" />
+      <gd name="x4" fmla="+- hc dx3 0" />
+      <gd name="x5" fmla="+- hc dx2 0" />
+      <gd name="x6" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- svc 0 dy1" />
+      <gd name="y2" fmla="+- svc dy2 0" />
+      <gd name="y3" fmla="+- svc dy3 0" />
+      <gd name="iwd2" fmla="*/ swd2 a 50000" />
+      <gd name="ihd2" fmla="*/ shd2 a 50000" />
+      <gd name="sdx1" fmla="*/ iwd2 97493 100000" />
+      <gd name="sdx2" fmla="*/ iwd2 78183 100000" />
+      <gd name="sdx3" fmla="*/ iwd2 43388 100000" />
+      <gd name="sx1" fmla="+- hc 0 sdx1" />
+      <gd name="sx2" fmla="+- hc 0 sdx2" />
+      <gd name="sx3" fmla="+- hc 0 sdx3" />
+      <gd name="sx4" fmla="+- hc sdx3 0" />
+      <gd name="sx5" fmla="+- hc sdx2 0" />
+      <gd name="sx6" fmla="+- hc sdx1 0" />
+      <gd name="sdy1" fmla="*/ ihd2 90097 100000" />
+      <gd name="sdy2" fmla="*/ ihd2 22252 100000" />
+      <gd name="sdy3" fmla="*/ ihd2 62349 100000" />
+      <gd name="sy1" fmla="+- svc 0 sdy1" />
+      <gd name="sy2" fmla="+- svc 0 sdy2" />
+      <gd name="sy3" fmla="+- svc sdy3 0" />
+      <gd name="sy4" fmla="+- svc ihd2 0" />
+      <gd name="yAdj" fmla="+- svc 0 ihd2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="50000">
+        <pos x="hc" y="yAdj" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="x5" y="y1" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x6" y="y2" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x4" y="y3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x3" y="y3" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x2" y="y1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="sx2" t="sy1" r="sx5" b="sy3" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="sx1" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx6" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx5" y="sy3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="sy4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy3" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </star7>
+  <star8>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 37500" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000" />
+      <gd name="dx1" fmla="cos wd2 2700000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc dx1 0" />
+      <gd name="dy1" fmla="sin hd2 2700000" />
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc dy1 0" />
+      <gd name="iwd2" fmla="*/ wd2 a 50000" />
+      <gd name="ihd2" fmla="*/ hd2 a 50000" />
+      <gd name="sdx1" fmla="*/ iwd2 92388 100000" />
+      <gd name="sdx2" fmla="*/ iwd2 38268 100000" />
+      <gd name="sdy1" fmla="*/ ihd2 92388 100000" />
+      <gd name="sdy2" fmla="*/ ihd2 38268 100000" />
+      <gd name="sx1" fmla="+- hc 0 sdx1" />
+      <gd name="sx2" fmla="+- hc 0 sdx2" />
+      <gd name="sx3" fmla="+- hc sdx2 0" />
+      <gd name="sx4" fmla="+- hc sdx1 0" />
+      <gd name="sy1" fmla="+- vc 0 sdy1" />
+      <gd name="sy2" fmla="+- vc 0 sdy2" />
+      <gd name="sy3" fmla="+- vc sdy2 0" />
+      <gd name="sy4" fmla="+- vc sdy1 0" />
+      <gd name="yAdj" fmla="+- vc 0 ihd2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="50000">
+        <pos x="hc" y="yAdj" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x2" y="y2" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x1" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x1" y="y1" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x2" y="y1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="sx1" t="sy1" r="sx4" b="sy4" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="sx1" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx4" y="sy3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx3" y="sy4" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx2" y="sy4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="sx1" y="sy3" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </star8>
+  <straightConnector1>
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path fill="none">
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+      </path>
+    </pathLst>
+  </straightConnector1>
+  <stripedRightArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+
+      <gd name="adj2" fmla="val 50000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 84375 w ss" />
+
+      <gd name="a1" fmla="pin 0 adj1 100000" />
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="x4" fmla="*/ ss 5 32" />
+      <gd name="dx5" fmla="*/ ss a2 100000" />
+      <gd name="x5" fmla="+- r 0 dx5" />
+      <gd name="dy1" fmla="*/ h a1 200000" />
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="y2" fmla="+- vc dy1 0" />
+      <gd name="dx6" fmla="*/ dy1 dx5 hd2" />
+      <gd name="x6" fmla="+- r 0 dx6" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="100000">
+        <pos x="l" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="x5" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x5" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x5" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x4" t="y1" r="x6" b="y2" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="ssd32" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="ssd32" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y2" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="ssd16" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="ssd8" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="ssd8" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="ssd16" y="y2" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="x4" y="y1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x5" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="vc" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x5" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </stripedRightArrow>
+  <sun>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 25000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 12500 adj 46875" />
+      <gd name="g0" fmla="+- 50000 0 a" />
+      <gd name="g1" fmla="*/ g0 30274 32768" />
+      <gd name="g2" fmla="*/ g0 12540 32768" />
+      <gd name="g3" fmla="+- g1 50000 0" />
+      <gd name="g4" fmla="+- g2 50000 0" />
+      <gd name="g5" fmla="+- 50000 0 g1" />
+      <gd name="g6" fmla="+- 50000 0 g2" />
+      <gd name="g7" fmla="*/ g0 23170 32768" />
+      <gd name="g8" fmla="+- 50000 g7 0" />
+      <gd name="g9" fmla="+- 50000 0 g7" />
+      <gd name="g10" fmla="*/ g5 3 4" />
+      <gd name="g11" fmla="*/ g6 3 4" />
+      <gd name="g12" fmla="+- g10 3662 0" />
+      <gd name="g13" fmla="+- g11 3662 0" />
+      <gd name="g14" fmla="+- g11 12500 0" />
+      <gd name="g15" fmla="+- 100000 0 g10" />
+      <gd name="g16" fmla="+- 100000 0 g12" />
+      <gd name="g17" fmla="+- 100000 0 g13" />
+      <gd name="g18" fmla="+- 100000 0 g14" />
+      <gd name="ox1" fmla="*/ w 18436 21600" />
+      <gd name="oy1" fmla="*/ h 3163 21600" />
+      <gd name="ox2" fmla="*/ w 3163 21600" />
+      <gd name="oy2" fmla="*/ h 18436 21600" />
+      <gd name="x8" fmla="*/ w g8 100000" />
+      <gd name="x9" fmla="*/ w g9 100000" />
+      <gd name="x10" fmla="*/ w g10 100000" />
+      <gd name="x12" fmla="*/ w g12 100000" />
+      <gd name="x13" fmla="*/ w g13 100000" />
+      <gd name="x14" fmla="*/ w g14 100000" />
+      <gd name="x15" fmla="*/ w g15 100000" />
+      <gd name="x16" fmla="*/ w g16 100000" />
+      <gd name="x17" fmla="*/ w g17 100000" />
+      <gd name="x18" fmla="*/ w g18 100000" />
+      <gd name="x19" fmla="*/ w a 100000" />
+      <gd name="wR" fmla="*/ w g0 100000" />
+      <gd name="hR" fmla="*/ h g0 100000" />
+      <gd name="y8" fmla="*/ h g8 100000" />
+      <gd name="y9" fmla="*/ h g9 100000" />
+      <gd name="y10" fmla="*/ h g10 100000" />
+      <gd name="y12" fmla="*/ h g12 100000" />
+      <gd name="y13" fmla="*/ h g13 100000" />
+      <gd name="y14" fmla="*/ h g14 100000" />
+      <gd name="y15" fmla="*/ h g15 100000" />
+      <gd name="y16" fmla="*/ h g16 100000" />
+      <gd name="y17" fmla="*/ h g17 100000" />
+      <gd name="y18" fmla="*/ h g18 100000" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="12500" maxX="46875">
+        <pos x="x19" y="vc" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="x9" t="y9" r="x8" b="y8" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="r" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="x15" y="y18" />
+        </lnTo>
+        <lnTo>
+          <pt x="x15" y="y14" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="ox1" y="oy1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x16" y="y13" />
+        </lnTo>
+        <lnTo>
+          <pt x="x17" y="y12" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="hc" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x18" y="y10" />
+        </lnTo>
+        <lnTo>
+          <pt x="x14" y="y10" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="ox2" y="oy1" />
+        </moveTo>
+        <lnTo>
+          <pt x="x13" y="y12" />
+        </lnTo>
+        <lnTo>
+          <pt x="x12" y="y13" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <lnTo>
+          <pt x="x10" y="y14" />
+        </lnTo>
+        <lnTo>
+          <pt x="x10" y="y18" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="ox2" y="oy2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x12" y="y17" />
+        </lnTo>
+        <lnTo>
+          <pt x="x13" y="y16" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="hc" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="x14" y="y15" />
+        </lnTo>
+        <lnTo>
+          <pt x="x18" y="y15" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="ox1" y="oy2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x17" y="y16" />
+        </lnTo>
+        <lnTo>
+          <pt x="x16" y="y17" />
+        </lnTo>
+        <close />
+        <moveTo>
+          <pt x="x19" y="vc" />
+        </moveTo>
+        <arcTo wR="wR" hR="hR" stAng="cd2" swAng="21600000" />
+        <close />
+      </path>
+    </pathLst>
+
+  </sun>
+  <swooshArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 16667" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+
+
+      <gd name="a1" fmla="pin 1 adj1 75000" />
+
+      <gd name="maxAdj2" fmla="*/ 70000 w ss" />
+
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="ad1" fmla="*/ h a1 100000" />
+      <gd name="ad2" fmla="*/ ss a2 100000" />
+
+      <gd name="xB" fmla="+- r 0 ad2" />
+      <gd name="yB" fmla="+- t ssd8 0" />
+
+      <gd name="alfa" fmla="*/ cd4 1 14" />
+
+      <gd name="dx0" fmla="tan ssd8 alfa" />
+      <gd name="xC" fmla="+- xB 0 dx0" />
+
+      <gd name="dx1" fmla="tan ad1 alfa" />
+
+      <gd name="yF" fmla="+- yB ad1 0" />
+      <gd name="xF" fmla="+- xB dx1 0" />
+
+      <gd name="xE" fmla="+- xF dx0 0" />
+      <gd name="yE" fmla="+- yF ssd8 0" />
+
+      <gd name="dy2" fmla="+- yE 0 t" />
+      <gd name="dy22" fmla="*/ dy2 1 2" />
+      <gd name="dy3" fmla="*/ h 1 20" />
+      <gd name="yD" fmla="+- t dy22 dy3" />
+
+
+      <gd name="dy4" fmla="*/ hd6 1 1" />
+      <gd name="yP1" fmla="+- hd6 dy4 0" />
+      <gd name="xP1" fmla="val wd6" />
+
+
+      <gd name="dy5" fmla="*/ hd6 1 2" />
+      <gd name="yP2" fmla="+- yF dy5 0" />
+      <gd name="xP2" fmla="val wd4" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="1" maxY="75000">
+        <pos x="xF" y="yF" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="xB" y="yB" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd4">
+        <pos x="l" y="b" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="xC" y="t" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="yD" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="xE" y="yE" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <quadBezTo>
+          <pt x="xP1" y="yP1" />
+          <pt x="xB" y="yB" />
+        </quadBezTo>
+        <lnTo>
+          <pt x="xC" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="yD" />
+        </lnTo>
+        <lnTo>
+          <pt x="xE" y="yE" />
+        </lnTo>
+        <lnTo>
+          <pt x="xF" y="yF" />
+        </lnTo>
+        <quadBezTo>
+          <pt x="xP2" y="yP2" />
+          <pt x="l" y="b" />
+        </quadBezTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </swooshArrow>
+  <teardrop>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 100000" />
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 200000" />
+      <gd name="r2" fmla="sqrt 2" />
+      <gd name="tw" fmla="*/ wd2 r2 1" />
+      <gd name="th" fmla="*/ hd2 r2 1" />
+      <gd name="sw" fmla="*/ tw a 100000" />
+      <gd name="sh" fmla="*/ th a 100000" />
+      <gd name="dx1" fmla="cos sw 2700000" />
+      <gd name="dy1" fmla="sin sh 2700000" />
+      <gd name="x1" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- vc 0 dy1" />
+      <gd name="x2" fmla="+/ hc x1 2" />
+      <gd name="y2" fmla="+/ vc y1 2" />
+      <gd name="idx" fmla="cos wd2 2700000" />
+      <gd name="idy" fmla="sin hd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="200000">
+        <pos x="x1" y="t" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="ir" y="ib" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="il" y="ib" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="il" y="it" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="x1" y="y1" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="vc" />
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="cd2" swAng="cd4" />
+        <quadBezTo>
+          <pt x="x2" y="t" />
+          <pt x="x1" y="y1" />
+        </quadBezTo>
+        <quadBezTo>
+          <pt x="r" y="y2" />
+          <pt x="r" y="vc" />
+        </quadBezTo>
+        <arcTo wR="wd2" hR="hd2" stAng="0" swAng="cd4" />
+        <arcTo wR="wd2" hR="hd2" stAng="cd4" swAng="cd4" />
+        <close />
+      </path>
+    </pathLst>
+
+  </teardrop>
+  <trapezoid>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 25000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj" fmla="*/ 50000 w ss" />
+      <gd name="a" fmla="pin 0 adj maxAdj" />
+      <gd name="x1" fmla="*/ ss a 200000" />
+      <gd name="x2" fmla="*/ ss a 100000" />
+      <gd name="x3" fmla="+- r 0 x2" />
+      <gd name="x4" fmla="+- r 0 x1" />
+      <gd name="il" fmla="*/ wd3 a maxAdj" />
+      <gd name="it" fmla="*/ hd3 a maxAdj" />
+      <gd name="ir" fmla="+- r 0 il" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="maxAdj">
+        <pos x="x2" y="t" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x4" y="vc" />
+      </cxn>
+    </cxnLst>
+    <rect l="il" t="it" r="ir" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </trapezoid>
+  <triangle>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 100000" />
+      <gd name="x1" fmla="*/ w a 200000" />
+      <gd name="x2" fmla="*/ w a 100000" />
+      <gd name="x3" fmla="+- x1 wd2 0" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="100000">
+        <pos x="x2" y="t" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="x2" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="l" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x2" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="r" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x3" y="vc" />
+      </cxn>
+    </cxnLst>
+    <rect l="x1" t="vc" r="x3" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </triangle>
+  <upArrowCallout>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 25000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+      <gd name="adj4" fmla="val 64977" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 50000 w ss" />
+
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="maxAdj1" fmla="*/ a2 2 1" />
+
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="maxAdj3" fmla="*/ 100000 h ss" />
+
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="q2" fmla="*/ a3 ss h" />
+
+      <gd name="maxAdj4" fmla="+- 100000 0 q2" />
+
+      <gd name="a4" fmla="pin 0 adj4 maxAdj4" />
+      <gd name="dx1" fmla="*/ ss a2 100000" />
+
+      <gd name="dx2" fmla="*/ ss a1 200000" />
+
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x3" fmla="+- hc dx2 0" />
+      <gd name="x4" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="*/ ss a3 100000" />
+
+      <gd name="dy2" fmla="*/ h a4 100000" />
+
+      <gd name="y2" fmla="+- b 0 dy2" />
+      <gd name="y3" fmla="+/ y2 b 2" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="maxAdj1">
+        <pos x="x2" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="x1" y="t" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="0" maxY="maxAdj3">
+        <pos x="r" y="y1" />
+      </ahXY>
+      <ahXY gdRefY="adj4" minY="0" maxY="maxAdj4">
+        <pos x="l" y="y2" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y2" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y2" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="y2" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </upArrowCallout>
+  <upDownArrow>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+      <gd name="adj2" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 50000 h ss" />
+      <gd name="a1" fmla="pin 0 adj1 100000" />
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="y2" fmla="*/ ss a2 100000" />
+      <gd name="y3" fmla="+- b 0 y2" />
+      <gd name="dx1" fmla="*/ w a1 200000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc dx1 0" />
+      <gd name="dy1" fmla="*/ x1 y2 wd2" />
+      <gd name="y1" fmla="+- y2 0 dy1" />
+      <gd name="y4" fmla="+- y3 dy1 0" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="100000">
+        <pos x="x1" y="y3" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="0" maxY="maxAdj2">
+        <pos x="l" y="y2" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y3" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x2" y="vc" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y2" />
+      </cxn>
+    </cxnLst>
+    <rect l="x1" t="y1" r="x2" b="y4" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </upDownArrow>
+  <upDownArrow>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 50000" />
+      <gd name="adj2" fmla="val 50000" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 50000 h ss" />
+      <gd name="a1" fmla="pin 0 adj1 100000" />
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="y2" fmla="*/ ss a2 100000" />
+      <gd name="y3" fmla="+- b 0 y2" />
+      <gd name="dx1" fmla="*/ w a1 200000" />
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc dx1 0" />
+      <gd name="dy1" fmla="*/ x1 y2 wd2" />
+      <gd name="y1" fmla="+- y2 0 dy1" />
+      <gd name="y4" fmla="+- y3 dy1 0" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="100000">
+        <pos x="x1" y="y3" />
+      </ahXY>
+      <ahXY gdRefY="adj2" minY="0" maxY="maxAdj2">
+        <pos x="l" y="y2" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y2" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="y3" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y3" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x2" y="vc" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y2" />
+      </cxn>
+    </cxnLst>
+    <rect l="x1" t="y1" r="x2" b="y4" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y2" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </upDownArrow>
+  <upDownArrowCallout>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 25000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+      <gd name="adj4" fmla="val 48123" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="maxAdj2" fmla="*/ 50000 w ss" />
+
+      <gd name="a2" fmla="pin 0 adj2 maxAdj2" />
+      <gd name="maxAdj1" fmla="*/ a2 2 1" />
+
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="maxAdj3" fmla="*/ 50000 h ss" />
+
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="q2" fmla="*/ a3 ss hd2" />
+
+      <gd name="maxAdj4" fmla="+- 100000 0 q2" />
+
+      <gd name="a4" fmla="pin 0 adj4 maxAdj4" />
+      <gd name="dx1" fmla="*/ ss a2 100000" />
+
+      <gd name="dx2" fmla="*/ ss a1 200000" />
+
+      <gd name="x1" fmla="+- hc 0 dx1" />
+      <gd name="x2" fmla="+- hc 0 dx2" />
+      <gd name="x3" fmla="+- hc dx2 0" />
+      <gd name="x4" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="*/ ss a3 100000" />
+
+      <gd name="y4" fmla="+- b 0 y1" />
+
+      <gd name="dy2" fmla="*/ h a4 200000" />
+
+      <gd name="y2" fmla="+- vc 0 dy2" />
+
+      <gd name="y3" fmla="+- vc dy2 0" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="maxAdj1">
+        <pos x="x2" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="maxAdj2">
+        <pos x="x1" y="t" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="0" maxY="maxAdj3">
+        <pos x="r" y="y1" />
+      </ahXY>
+      <ahXY gdRefY="adj4" minY="0" maxY="maxAdj4">
+        <pos x="l" y="y2" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="y2" r="r" b="y3" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y2" />
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="x3" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x4" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="hc" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y3" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </upDownArrowCallout>
+  <uturnArrow>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 25000" />
+
+      <gd name="adj2" fmla="val 25000" />
+
+      <gd name="adj3" fmla="val 25000" />
+
+      <gd name="adj4" fmla="val 43750" />
+
+      <gd name="adj5" fmla="val 75000" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a2" fmla="pin 0 adj2 25000" />
+      <gd name="maxAdj1" fmla="*/ a2 2 1" />
+      <gd name="a1" fmla="pin 0 adj1 maxAdj1" />
+      <gd name="q2" fmla="*/ a1 ss h" />
+
+      <gd name="q3" fmla="+- 100000 0 q2" />
+
+      <gd name="maxAdj3" fmla="*/ q3 h ss" />
+
+      <gd name="a3" fmla="pin 0 adj3 maxAdj3" />
+      <gd name="q1" fmla="+- a3 a1 0" />
+      <gd name="minAdj5" fmla="*/ q1 ss h" />
+      <gd name="a5" fmla="pin minAdj5 adj5 100000" />
+      <gd name="th" fmla="*/ ss a1 100000" />
+
+      <gd name="aw2" fmla="*/ ss a2 100000" />
+
+      <gd name="th2" fmla="*/ th 1 2" />
+      <gd name="dh2" fmla="+- aw2 0 th2" />
+
+      <gd name="y5" fmla="*/ h a5 100000" />
+
+      <gd name="ah" fmla="*/ ss a3 100000" />
+
+      <gd name="y4" fmla="+- y5 0 ah" />
+      <gd name="x9" fmla="+- r 0 dh2" />
+
+      <gd name="bw" fmla="*/ x9 1 2" />
+      <gd name="bs" fmla="min bw y4" />
+      <gd name="maxAdj4" fmla="*/ bs 100000 ss" />
+      <gd name="a4" fmla="pin 0 adj4 maxAdj4" />
+
+
+      <gd name="bd" fmla="*/ ss a4 100000" />
+
+
+
+      <gd name="bd3" fmla="+- bd 0 th" />
+      <gd name="bd2" fmla="max bd3 0" />
+      <gd name="x3" fmla="+- th bd2 0" />
+
+      <gd name="x8" fmla="+- r 0 aw2" />
+
+      <gd name="x6" fmla="+- x8 0 aw2" />
+
+      <gd name="x7" fmla="+- x6 dh2 0" />
+
+      <gd name="x4" fmla="+- x9 0 bd" />
+
+      <gd name="x5" fmla="+- x7 0 bd2" />
+
+      <gd name="cx" fmla="+/ th x7 2" />
+
+
+
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="0" maxX="maxAdj1">
+        <pos x="th" y="b" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="0" maxX="25000">
+        <pos x="x6" y="b" />
+      </ahXY>
+      <ahXY gdRefY="adj3" minY="0" maxY="maxAdj3">
+        <pos x="x6" y="y4" />
+      </ahXY>
+      <ahXY gdRefX="adj4" minX="0" maxX="maxAdj4">
+        <pos x="bd" y="t" />
+      </ahXY>
+      <ahXY gdRefY="adj5" minY="minAdj5" maxY="100000">
+        <pos x="r" y="y5" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd4">
+        <pos x="x6" y="y4" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="x8" y="y5" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="y4" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="cx" y="t" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="th2" y="b" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="b" />
+        </moveTo>
+        <lnTo>
+          <pt x="l" y="bd" />
+        </lnTo>
+        <arcTo wR="bd" hR="bd" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="x4" y="t" />
+        </lnTo>
+        <arcTo wR="bd" hR="bd" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="x9" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x8" y="y5" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x7" y="y4" />
+        </lnTo>
+        <lnTo>
+          <pt x="x7" y="x3" />
+        </lnTo>
+        <arcTo wR="bd2" hR="bd2" stAng="0" swAng="-5400000" />
+        <lnTo>
+          <pt x="x3" y="th" />
+        </lnTo>
+        <arcTo wR="bd2" hR="bd2" stAng="3cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="th" y="b" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </uturnArrow>
+  <verticalScroll>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 12500" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 25000" />
+      <gd name="ch" fmla="*/ ss a 100000" />
+
+      <gd name="ch2" fmla="*/ ch 1 2" />
+
+      <gd name="ch4" fmla="*/ ch 1 4" />
+
+
+
+
+
+      <gd name="x3" fmla="+- ch ch2 0" />
+
+      <gd name="x4" fmla="+- ch ch 0" />
+
+      <gd name="x6" fmla="+- r 0 ch" />
+
+      <gd name="x7" fmla="+- r 0 ch2" />
+
+      <gd name="x5" fmla="+- x6 0 ch2" />
+
+
+
+
+
+      <gd name="y3" fmla="+- b 0 ch" />
+
+      <gd name="y4" fmla="+- b 0 ch2" />
+
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="25000">
+        <pos x="l" y="ch" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="ch" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x6" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="ch" t="ch" r="x6" b="y4" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="ch2" y="b" />
+        </moveTo>
+        <arcTo wR="ch2" hR="ch2" stAng="cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="ch2" y="y4" />
+        </lnTo>
+        <arcTo wR="ch4" hR="ch4" stAng="cd4" swAng="-10800000" />
+        <lnTo>
+          <pt x="ch" y="y3" />
+        </lnTo>
+        <lnTo>
+          <pt x="ch" y="ch2" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="x7" y="t" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="3cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="x6" y="ch" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y4" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="0" swAng="cd4" />
+        <close />
+        <moveTo>
+          <pt x="x4" y="ch2" />
+        </moveTo>
+        <arcTo wR="ch2" hR="ch2" stAng="0" swAng="cd4" />
+        <arcTo wR="ch4" hR="ch4" stAng="cd4" swAng="cd2" />
+        <close />
+      </path>
+      <path fill="darkenLess" stroke="false" extrusionOk="false">
+
+        <moveTo>
+          <pt x="x4" y="ch2" />
+        </moveTo>
+        <arcTo wR="ch2" hR="ch2" stAng="0" swAng="cd4" />
+        <arcTo wR="ch4" hR="ch4" stAng="cd4" swAng="cd2" />
+        <close />
+        <moveTo>
+          <pt x="ch" y="y4" />
+        </moveTo>
+        <arcTo wR="ch2" hR="ch2" stAng="0" swAng="3cd4" />
+        <arcTo wR="ch4" hR="ch4" stAng="3cd4" swAng="cd2" />
+        <close />
+      </path>
+      <path fill="none" extrusionOk="false">
+
+        <moveTo>
+          <pt x="ch" y="y3" />
+        </moveTo>
+        <lnTo>
+          <pt x="ch" y="ch2" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="x7" y="t" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="3cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="x6" y="ch" />
+        </lnTo>
+        <lnTo>
+          <pt x="x6" y="y4" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="ch2" y="b" />
+        </lnTo>
+        <arcTo wR="ch2" hR="ch2" stAng="cd4" swAng="cd2" />
+        <close />
+        <moveTo>
+          <pt x="x3" y="t" />
+        </moveTo>
+        <arcTo wR="ch2" hR="ch2" stAng="3cd4" swAng="cd2" />
+        <arcTo wR="ch4" hR="ch4" stAng="cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="x4" y="ch2" />
+        </lnTo>
+        <moveTo>
+          <pt x="x6" y="ch" />
+        </moveTo>
+        <lnTo>
+          <pt x="x3" y="ch" />
+        </lnTo>
+        <moveTo>
+          <pt x="ch2" y="y3" />
+        </moveTo>
+        <arcTo wR="ch4" hR="ch4" stAng="3cd4" swAng="cd2" />
+        <lnTo>
+          <pt x="ch" y="y4" />
+        </lnTo>
+        <moveTo>
+          <pt x="ch2" y="b" />
+        </moveTo>
+        <arcTo wR="ch2" hR="ch2" stAng="cd4" swAng="-5400000" />
+        <lnTo>
+          <pt x="ch" y="y3" />
+        </lnTo>
+      </path>
+    </pathLst>
+
+  </verticalScroll>
+  <wave>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 12500" />
+
+      <gd name="adj2" fmla="val 0" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 20000" />
+      <gd name="a2" fmla="pin -10000 adj2 10000" />
+      <gd name="y1" fmla="*/ h a1 100000" />
+
+      <gd name="dy2" fmla="*/ y1 10 3" />
+      <gd name="y2" fmla="+- y1 0 dy2" />
+
+      <gd name="y3" fmla="+- y1 dy2 0" />
+
+      <gd name="y4" fmla="+- b 0 y1" />
+
+      <gd name="y5" fmla="+- y4 0 dy2" />
+
+      <gd name="y6" fmla="+- y4 dy2 0" />
+
+      <gd name="dx1" fmla="*/ w a2 100000" />
+
+      <gd name="of2" fmla="*/ w a2 50000" />
+
+      <gd name="x1" fmla="abs dx1" />
+
+      <gd name="dx2" fmla="?: of2 0 of2" />
+      <gd name="x2" fmla="+- l 0 dx2" />
+
+      <gd name="dx5" fmla="?: of2 of2 0" />
+      <gd name="x5" fmla="+- r 0 dx5" />
+
+      <gd name="dx3" fmla="+/ dx2 x5 3" />
+
+      <gd name="x3" fmla="+- x2 dx3 0" />
+
+      <gd name="x4" fmla="+/ x3 x5 2" />
+
+      <gd name="x6" fmla="+- l dx5 0" />
+
+      <gd name="x10" fmla="+- r dx2 0" />
+
+      <gd name="x7" fmla="+- x6 dx3 0" />
+
+      <gd name="x8" fmla="+/ x7 x10 2" />
+
+      <gd name="x9" fmla="+- r 0 x1" />
+
+      <gd name="xAdj" fmla="+- hc dx1 0" />
+      <gd name="xAdj2" fmla="+- hc 0 dx1" />
+      <gd name="il" fmla="max x2 x6" />
+      <gd name="ir" fmla="min x5 x10" />
+      <gd name="it" fmla="*/ h a1 50000" />
+      <gd name="ib" fmla="+- b 0 it" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="20000">
+        <pos x="l" y="y1" />
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="-10000" maxX="10000">
+        <pos x="xAdj" y="b" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="cd4">
+        <pos x="xAdj2" y="y1" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="x1" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="xAdj" y="y4" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="x9" y="vc" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x2" y="y1" />
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x3" y="y2" />
+          <pt x="x4" y="y3" />
+          <pt x="x5" y="y1" />
+        </cubicBezTo>
+        <lnTo>
+          <pt x="x10" y="y4" />
+        </lnTo>
+        <cubicBezTo>
+          <pt x="x8" y="y6" />
+          <pt x="x7" y="y5" />
+          <pt x="x6" y="y4" />
+        </cubicBezTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </wave>
+  <wedgeEllipseCallout>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val -20833" />
+      <gd name="adj2" fmla="val 62500" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dxPos" fmla="*/ w adj1 100000" />
+      <gd name="dyPos" fmla="*/ h adj2 100000" />
+      <gd name="xPos" fmla="+- hc dxPos 0" />
+      <gd name="yPos" fmla="+- vc dyPos 0" />
+      <gd name="sdx" fmla="*/ dxPos h 1" />
+      <gd name="sdy" fmla="*/ dyPos w 1" />
+      <gd name="pang" fmla="at2 sdx sdy" />
+      <gd name="stAng" fmla="+- pang 660000 0" />
+      <gd name="enAng" fmla="+- pang 0 660000" />
+      <gd name="dx1" fmla="cos wd2 stAng" />
+      <gd name="dy1" fmla="sin hd2 stAng" />
+      <gd name="x1" fmla="+- hc dx1 0" />
+      <gd name="y1" fmla="+- vc dy1 0" />
+      <gd name="dx2" fmla="cos wd2 enAng" />
+      <gd name="dy2" fmla="sin hd2 enAng" />
+      <gd name="x2" fmla="+- hc dx2 0" />
+      <gd name="y2" fmla="+- vc dy2 0" />
+      <gd name="stAng1" fmla="at2 dx1 dy1" />
+      <gd name="enAng1" fmla="at2 dx2 dy2" />
+      <gd name="swAng1" fmla="+- enAng1 0 stAng1" />
+      <gd name="swAng2" fmla="+- swAng1 21600000 0" />
+      <gd name="swAng" fmla="?: swAng1 swAng1 swAng2" />
+      <gd name="idx" fmla="cos wd2 2700000" />
+      <gd name="idy" fmla="sin hd2 2700000" />
+      <gd name="il" fmla="+- hc 0 idx" />
+      <gd name="ir" fmla="+- hc idx 0" />
+      <gd name="it" fmla="+- vc 0 idy" />
+      <gd name="ib" fmla="+- vc idy 0" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="-2147483647" maxX="2147483647" gdRefY="adj2" minY="-2147483647" maxY="2147483647">
+        <pos x="xPos" y="yPos" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="il" y="it" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="il" y="ib" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="ir" y="ib" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="3cd4">
+        <pos x="ir" y="it" />
+      </cxn>
+      <cxn ang="pang">
+        <pos x="xPos" y="yPos" />
+      </cxn>
+    </cxnLst>
+    <rect l="il" t="it" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="xPos" y="yPos" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="y1" />
+        </lnTo>
+        <arcTo wR="wd2" hR="hd2" stAng="stAng1" swAng="swAng" />
+        <close />
+      </path>
+    </pathLst>
+  </wedgeEllipseCallout>
+  <wedgeRectCallout>
+
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val -20833" />
+
+      <gd name="adj2" fmla="val 62500" />
+
+    </avLst>
+
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dxPos" fmla="*/ w adj1 100000" />
+      <gd name="dyPos" fmla="*/ h adj2 100000" />
+      <gd name="xPos" fmla="+- hc dxPos 0" />
+      <gd name="yPos" fmla="+- vc dyPos 0" />
+      <gd name="dx" fmla="+- xPos 0 hc" />
+      <gd name="dy" fmla="+- yPos 0 vc" />
+      <gd name="dq" fmla="*/ dxPos h w" />
+      <gd name="ady" fmla="abs dyPos" />
+      <gd name="adq" fmla="abs dq" />
+      <gd name="dz" fmla="+- ady 0 adq" />
+      <gd name="xg1" fmla="?: dxPos 7 2" />
+      <gd name="xg2" fmla="?: dxPos 10 5" />
+      <gd name="x1" fmla="*/ w xg1 12" />
+      <gd name="x2" fmla="*/ w xg2 12" />
+      <gd name="yg1" fmla="?: dyPos 7 2" />
+      <gd name="yg2" fmla="?: dyPos 10 5" />
+      <gd name="y1" fmla="*/ h yg1 12" />
+      <gd name="y2" fmla="*/ h yg2 12" />
+      <gd name="t1" fmla="?: dxPos l xPos" />
+      <gd name="xl" fmla="?: dz l t1" />
+      <gd name="t2" fmla="?: dyPos x1 xPos" />
+      <gd name="xt" fmla="?: dz t2 x1" />
+      <gd name="t3" fmla="?: dxPos xPos r" />
+      <gd name="xr" fmla="?: dz r t3" />
+      <gd name="t4" fmla="?: dyPos xPos x1" />
+      <gd name="xb" fmla="?: dz t4 x1" />
+      <gd name="t5" fmla="?: dxPos y1 yPos" />
+      <gd name="yl" fmla="?: dz y1 t5" />
+      <gd name="t6" fmla="?: dyPos t yPos" />
+      <gd name="yt" fmla="?: dz t6 t" />
+      <gd name="t7" fmla="?: dxPos yPos y1" />
+      <gd name="yr" fmla="?: dz y1 t7" />
+      <gd name="t8" fmla="?: dyPos yPos b" />
+      <gd name="yb" fmla="?: dz t8 b" />
+    </gdLst>
+
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="-2147483647" maxX="2147483647" gdRefY="adj2" minY="-2147483647" maxY="2147483647">
+        <pos x="xPos" y="yPos" />
+      </ahXY>
+    </ahLst>
+
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="xPos" y="yPos" />
+      </cxn>
+    </cxnLst>
+
+    <rect l="l" t="t" r="r" b="b" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t" />
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="xt" y="yt" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="xr" y="yr" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="xb" y="yb" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="xl" y="yl" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y1" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+
+  </wedgeRectCallout>
+  <wedgeRoundRectCallout>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val -20833" />
+      <gd name="adj2" fmla="val 62500" />
+      <gd name="adj3" fmla="val 16667" />
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="dxPos" fmla="*/ w adj1 100000" />
+      <gd name="dyPos" fmla="*/ h adj2 100000" />
+      <gd name="xPos" fmla="+- hc dxPos 0" />
+      <gd name="yPos" fmla="+- vc dyPos 0" />
+      <gd name="dq" fmla="*/ dxPos h w" />
+      <gd name="ady" fmla="abs dyPos" />
+      <gd name="adq" fmla="abs dq" />
+      <gd name="dz" fmla="+- ady 0 adq" />
+      <gd name="xg1" fmla="?: dxPos 7 2" />
+      <gd name="xg2" fmla="?: dxPos 10 5" />
+      <gd name="x1" fmla="*/ w xg1 12" />
+      <gd name="x2" fmla="*/ w xg2 12" />
+      <gd name="yg1" fmla="?: dyPos 7 2" />
+      <gd name="yg2" fmla="?: dyPos 10 5" />
+      <gd name="y1" fmla="*/ h yg1 12" />
+      <gd name="y2" fmla="*/ h yg2 12" />
+      <gd name="t1" fmla="?: dxPos l xPos" />
+      <gd name="xl" fmla="?: dz l t1" />
+      <gd name="t2" fmla="?: dyPos x1 xPos" />
+      <gd name="xt" fmla="?: dz t2 x1" />
+      <gd name="t3" fmla="?: dxPos xPos r" />
+      <gd name="xr" fmla="?: dz r t3" />
+      <gd name="t4" fmla="?: dyPos xPos x1" />
+      <gd name="xb" fmla="?: dz t4 x1" />
+      <gd name="t5" fmla="?: dxPos y1 yPos" />
+      <gd name="yl" fmla="?: dz y1 t5" />
+      <gd name="t6" fmla="?: dyPos t yPos" />
+      <gd name="yt" fmla="?: dz t6 t" />
+      <gd name="t7" fmla="?: dxPos yPos y1" />
+      <gd name="yr" fmla="?: dz y1 t7" />
+      <gd name="t8" fmla="?: dyPos yPos b" />
+      <gd name="yb" fmla="?: dz t8 b" />
+      <gd name="u1" fmla="*/ ss adj3 100000" />
+      <gd name="u2" fmla="+- r 0 u1" />
+      <gd name="v2" fmla="+- b 0 u1" />
+      <gd name="il" fmla="*/ u1 29289 100000" />
+      <gd name="ir" fmla="+- r 0 il" />
+      <gd name="ib" fmla="+- b 0 il" />
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj1" minX="-2147483647" maxX="2147483647" gdRefY="adj2" minY="-2147483647" maxY="2147483647">
+        <pos x="xPos" y="yPos" />
+      </ahXY>
+    </ahLst>
+    <cxnLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <cxn ang="3cd4">
+        <pos x="hc" y="t" />
+      </cxn>
+      <cxn ang="cd2">
+        <pos x="l" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="hc" y="b" />
+      </cxn>
+      <cxn ang="0">
+        <pos x="r" y="vc" />
+      </cxn>
+      <cxn ang="cd4">
+        <pos x="xPos" y="yPos" />
+      </cxn>
+    </cxnLst>
+    <rect l="il" t="il" r="ir" b="ib" xmlns="http://schemas.openxmlformats.org/drawingml/2006/main" />
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="u1" />
+        </moveTo>
+        <arcTo wR="u1" hR="u1" stAng="cd2" swAng="cd4" />
+        <lnTo>
+          <pt x="x1" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="xt" y="yt" />
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="t" />
+        </lnTo>
+        <lnTo>
+          <pt x="u2" y="t" />
+        </lnTo>
+        <arcTo wR="u1" hR="u1" stAng="3cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="r" y="y1" />
+        </lnTo>
+        <lnTo>
+          <pt x="xr" y="yr" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="v2" />
+        </lnTo>
+        <arcTo wR="u1" hR="u1" stAng="0" swAng="cd4" />
+        <lnTo>
+          <pt x="x2" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="xb" y="yb" />
+        </lnTo>
+        <lnTo>
+          <pt x="x1" y="b" />
+        </lnTo>
+        <lnTo>
+          <pt x="u1" y="b" />
+        </lnTo>
+        <arcTo wR="u1" hR="u1" stAng="cd4" swAng="cd4" />
+        <lnTo>
+          <pt x="l" y="y2" />
+        </lnTo>
+        <lnTo>
+          <pt x="xl" y="yl" />
+        </lnTo>
+        <lnTo>
+          <pt x="l" y="y1" />
+        </lnTo>
+        <close />
+      </path>
+    </pathLst>
+  </wedgeRoundRectCallout>
+</presetShapeDefinitons>
diff --git oox/source/export/presetTextWarpDefinitions.xml oox/source/export/presetTextWarpDefinitions.xml
new file mode 100644
index 0000000..c701c8f
--- /dev/null
+++ oox/source/export/presetTextWarpDefinitions.xml
@@ -0,0 +1,1885 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<presetTextWarpDefinitions>
+  <textArchDown>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 0"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adval" fmla="pin 0 adj 21599999"/>
+      <gd name="v1" fmla="+- 10800000 0 adval"/>
+      <gd name="v2" fmla="+- 32400000 0 adval"/>
+      <gd name="nv1" fmla="+- 0 0 v1"/>
+      <gd name="stAng" fmla="?: nv1 v2 v1"/>
+      <gd name="w1" fmla="+- 5400000 0 adval"/>
+      <gd name="w2" fmla="+- 16200000 0 adval"/>
+      <gd name="d1" fmla="+- adval 0 stAng"/>
+      <gd name="d2" fmla="+- d1 0 21600000"/>
+      <gd name="v3" fmla="+- 0 0 10800000"/>
+      <gd name="c2" fmla="?: w2 d1 d2"/>
+      <gd name="c1" fmla="?: v1 d2 c2"/>
+      <gd name="c0" fmla="?: w1 d1 c1"/>
+      <gd name="swAng" fmla="?: stAng c0 v3"/>
+      <gd name="wt1" fmla="sin wd2 adj"/>
+      <gd name="ht1" fmla="cos hd2 adj"/>
+      <gd name="dx1" fmla="cat2 wd2 ht1 wt1"/>
+      <gd name="dy1" fmla="sat2 hd2 ht1 wt1"/>
+      <gd name="x1" fmla="+- hc dx1 0"/>
+      <gd name="y1" fmla="+- vc dy1 0"/>
+      <gd name="wt2" fmla="sin wd2 stAng"/>
+      <gd name="ht2" fmla="cos hd2 stAng"/>
+      <gd name="dx2" fmla="cat2 wd2 ht2 wt2"/>
+      <gd name="dy2" fmla="sat2 hd2 ht2 wt2"/>
+      <gd name="x2" fmla="+- hc dx2 0"/>
+      <gd name="y2" fmla="+- vc dy2 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefAng="adj" minAng="0" maxAng="21599999">
+        <pos x="x1" y="y1"/>
+      </ahPolar>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x2" y="y2"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="stAng" swAng="swAng"/>
+      </path>
+    </pathLst>
+  </textArchDown>
+  <textArchDownPour>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 0"/>
+      <gd name="adj2" fmla="val 25000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adval" fmla="pin 0 adj1 21599999"/>
+      <gd name="v1" fmla="+- 10800000 0 adval"/>
+      <gd name="v2" fmla="+- 32400000 0 adval"/>
+      <gd name="nv1" fmla="+- 0 0 v1"/>
+      <gd name="stAng" fmla="?: nv1 v2 v1"/>
+      <gd name="w1" fmla="+- 5400000 0 adval"/>
+      <gd name="w2" fmla="+- 16200000 0 adval"/>
+      <gd name="d1" fmla="+- adval 0 stAng"/>
+      <gd name="d2" fmla="+- d1 0 21600000"/>
+      <gd name="v3" fmla="+- 0 0 10800000"/>
+      <gd name="c2" fmla="?: w2 d1 d2"/>
+      <gd name="c1" fmla="?: v1 d2 c2"/>
+      <gd name="c0" fmla="?: w1 d1 c1"/>
+      <gd name="swAng" fmla="?: stAng c0 v3"/>
+      <gd name="wt1" fmla="sin wd2 stAng"/>
+      <gd name="ht1" fmla="cos hd2 stAng"/>
+      <gd name="dx1" fmla="cat2 wd2 ht1 wt1"/>
+      <gd name="dy1" fmla="sat2 hd2 ht1 wt1"/>
+      <gd name="x1" fmla="+- hc dx1 0"/>
+      <gd name="y1" fmla="+- vc dy1 0"/>
+      <gd name="adval2" fmla="pin 0 adj2 99000"/>
+      <gd name="ratio" fmla="*/ adval2 1 100000"/>
+      <gd name="iwd2" fmla="*/ wd2 ratio 1"/>
+      <gd name="ihd2" fmla="*/ hd2 ratio 1"/>
+      <gd name="wt2" fmla="sin iwd2 adval"/>
+      <gd name="ht2" fmla="cos ihd2 adval"/>
+      <gd name="dx2" fmla="cat2 iwd2 ht2 wt2"/>
+      <gd name="dy2" fmla="sat2 ihd2 ht2 wt2"/>
+      <gd name="x2" fmla="+- hc dx2 0"/>
+      <gd name="y2" fmla="+- vc dy2 0"/>
+      <gd name="wt3" fmla="sin iwd2 stAng"/>
+      <gd name="ht3" fmla="cos ihd2 stAng"/>
+      <gd name="dx3" fmla="cat2 iwd2 ht3 wt3"/>
+      <gd name="dy3" fmla="sat2 ihd2 ht3 wt3"/>
+      <gd name="x3" fmla="+- hc dx3 0"/>
+      <gd name="y3" fmla="+- vc dy3 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefR="adj2" minR="0" maxR="100000" gdRefAng="adj1" minAng="0" maxAng="21599999">
+        <pos x="x2" y="y2"/>
+      </ahPolar>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x3" y="y3"/>
+        </moveTo>
+        <arcTo wR="iwd2" hR="ihd2" stAng="stAng" swAng="swAng"/>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="stAng" swAng="swAng"/>
+      </path>
+    </pathLst>
+  </textArchDownPour>
+  <textArchUp>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val cd2"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adval" fmla="pin 0 adj 21599999"/>
+      <gd name="v1" fmla="+- 10800000 0 adval"/>
+      <gd name="v2" fmla="+- 32400000 0 adval"/>
+      <gd name="end" fmla="?: v1 v1 v2"/>
+      <gd name="w1" fmla="+- 5400000 0 adval"/>
+      <gd name="w2" fmla="+- 16200000 0 adval"/>
+      <gd name="d1" fmla="+- end 0 adval"/>
+      <gd name="d2" fmla="+- 21600000 d1 0"/>
+      <gd name="c2" fmla="?: w2 d1 d2"/>
+      <gd name="c1" fmla="?: v1 d2 c2"/>
+      <gd name="swAng" fmla="?: w1 d1 c1"/>
+      <gd name="wt1" fmla="sin wd2 adj"/>
+      <gd name="ht1" fmla="cos hd2 adj"/>
+      <gd name="dx1" fmla="cat2 wd2 ht1 wt1"/>
+      <gd name="dy1" fmla="sat2 hd2 ht1 wt1"/>
+      <gd name="x1" fmla="+- hc dx1 0"/>
+      <gd name="y1" fmla="+- vc dy1 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefAng="adj" minAng="0" maxAng="21599999">
+        <pos x="x1" y="y1"/>
+      </ahPolar>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="adval" swAng="swAng"/>
+      </path>
+    </pathLst>
+  </textArchUp>
+  <textArchUpPour>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val cd2"/>
+      <gd name="adj2" fmla="val 50000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adval" fmla="pin 0 adj1 21599999"/>
+      <gd name="v1" fmla="+- 10800000 0 adval"/>
+      <gd name="v2" fmla="+- 32400000 0 adval"/>
+      <gd name="end" fmla="?: v1 v1 v2"/>
+      <gd name="w1" fmla="+- 5400000 0 adval"/>
+      <gd name="w2" fmla="+- 16200000 0 adval"/>
+      <gd name="d1" fmla="+- end 0 adval"/>
+      <gd name="d2" fmla="+- 21600000 d1 0"/>
+      <gd name="c2" fmla="?: w2 d1 d2"/>
+      <gd name="c1" fmla="?: v1 d2 c2"/>
+      <gd name="swAng" fmla="?: w1 d1 c1"/>
+      <gd name="wt1" fmla="sin wd2 adval"/>
+      <gd name="ht1" fmla="cos hd2 adval"/>
+      <gd name="dx1" fmla="cat2 wd2 ht1 wt1"/>
+      <gd name="dy1" fmla="sat2 hd2 ht1 wt1"/>
+      <gd name="x1" fmla="+- hc dx1 0"/>
+      <gd name="y1" fmla="+- vc dy1 0"/>
+      <gd name="adval2" fmla="pin 0 adj2 99000"/>
+      <gd name="ratio" fmla="*/ adval2 1 100000"/>
+      <gd name="iwd2" fmla="*/ wd2 ratio 1"/>
+      <gd name="ihd2" fmla="*/ hd2 ratio 1"/>
+      <gd name="wt2" fmla="sin iwd2 adval"/>
+      <gd name="ht2" fmla="cos ihd2 adval"/>
+      <gd name="dx2" fmla="cat2 iwd2 ht2 wt2"/>
+      <gd name="dy2" fmla="sat2 ihd2 ht2 wt2"/>
+      <gd name="x2" fmla="+- hc dx2 0"/>
+      <gd name="y2" fmla="+- vc dy2 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefR="adj2" minR="0" maxR="100000" gdRefAng="adj1" minAng="0" maxAng="21599999">
+        <pos x="x2" y="y2"/>
+      </ahPolar>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="adval" swAng="swAng"/>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x2" y="y2"/>
+        </moveTo>
+        <arcTo wR="iwd2" hR="ihd2" stAng="adval" swAng="swAng"/>
+      </path>
+    </pathLst>
+  </textArchUpPour>
+  <textButton>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 10800000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adval" fmla="pin 0 adj 21599999"/>
+      <gd name="bot" fmla="+- 5400000 0 adval"/>
+      <gd name="lef" fmla="+- 10800000 0 adval"/>
+      <gd name="top" fmla="+- 16200000 0 adval"/>
+      <gd name="rig" fmla="+- 21600000 0 adval"/>
+      <gd name="c3" fmla="?: top adval 0"/>
+      <gd name="c2" fmla="?: lef 10800000 c3"/>
+      <gd name="c1" fmla="?: bot rig c2"/>
+      <gd name="stAng" fmla="?: adval c1 0"/>
+      <gd name="w1" fmla="+- 21600000 0 stAng"/>
+      <gd name="stAngB" fmla="?: stAng w1 0"/>
+      <gd name="td1" fmla="*/ bot 2 1"/>
+      <gd name="td2" fmla="*/ top 2 1"/>
+      <gd name="ntd2" fmla="+- 0 0 td2"/>
+      <gd name="w2" fmla="+- 0 0 10800000"/>
+      <gd name="c6" fmla="?: top ntd2 w2"/>
+      <gd name="c5" fmla="?: lef 10800000 c6"/>
+      <gd name="c4" fmla="?: bot td1 c5"/>
+      <gd name="v1" fmla="?: adval c4 10800000"/>
+      <gd name="swAngT" fmla="+- 0 0 v1"/>
+      <gd name="stT" fmla="?: lef stAngB stAng"/>
+      <gd name="stB" fmla="?: lef stAng stAngB"/>
+      <gd name="swT" fmla="?: lef v1 swAngT"/>
+      <gd name="swB" fmla="?: lef swAngT v1"/>
+      <gd name="wt1" fmla="sin wd2 stT"/>
+      <gd name="ht1" fmla="cos hd2 stT"/>
+      <gd name="dx1" fmla="cat2 wd2 ht1 wt1"/>
+      <gd name="dy1" fmla="sat2 hd2 ht1 wt1"/>
+      <gd name="x1" fmla="+- hc dx1 0"/>
+      <gd name="y1" fmla="+- vc dy1 0"/>
+      <gd name="wt2" fmla="sin wd2 stB"/>
+      <gd name="ht2" fmla="cos hd2 stB"/>
+      <gd name="dx2" fmla="cat2 wd2 ht2 wt2"/>
+      <gd name="dy2" fmla="sat2 hd2 ht2 wt2"/>
+      <gd name="x2" fmla="+- hc dx2 0"/>
+      <gd name="y2" fmla="+- vc dy2 0"/>
+      <gd name="wt3" fmla="sin wd2 adj"/>
+      <gd name="ht3" fmla="cos hd2 adj"/>
+      <gd name="dx3" fmla="cat2 wd2 ht3 wt3"/>
+      <gd name="dy3" fmla="sat2 hd2 ht3 wt3"/>
+      <gd name="x3" fmla="+- hc dx3 0"/>
+      <gd name="y3" fmla="+- vc dy3 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefAng="adj" minAng="0" maxAng="21599999">
+        <pos x="x3" y="y3"/>
+      </ahPolar>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="stT" swAng="swT"/>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="vc"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="vc"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x2" y="y2"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="stB" swAng="swB"/>
+      </path>
+    </pathLst>
+  </textButton>
+  <textButtonPour>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val cd2"/>
+      <gd name="adj2" fmla="val 50000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adval" fmla="pin 0 adj1 21599999"/>
+      <gd name="bot" fmla="+- 5400000 0 adval"/>
+      <gd name="lef" fmla="+- 10800000 0 adval"/>
+      <gd name="top" fmla="+- 16200000 0 adval"/>
+      <gd name="rig" fmla="+- 21600000 0 adval"/>
+      <gd name="c3" fmla="?: top adval 0"/>
+      <gd name="c2" fmla="?: lef 10800000 c3"/>
+      <gd name="c1" fmla="?: bot rig c2"/>
+      <gd name="stAng" fmla="?: adval c1 0"/>
+      <gd name="w1" fmla="+- 21600000 0 stAng"/>
+      <gd name="stAngB" fmla="?: stAng w1 0"/>
+      <gd name="td1" fmla="*/ bot 2 1"/>
+      <gd name="td2" fmla="*/ top 2 1"/>
+      <gd name="ntd2" fmla="+- 0 0 td2"/>
+      <gd name="w2" fmla="+- 0 0 10800000"/>
+      <gd name="c6" fmla="?: top ntd2 w2"/>
+      <gd name="c5" fmla="?: lef 10800000 c6"/>
+      <gd name="c4" fmla="?: bot td1 c5"/>
+      <gd name="v1" fmla="?: adval c4 10800000"/>
+      <gd name="swAngT" fmla="+- 0 0 v1"/>
+      <gd name="stT" fmla="?: lef stAngB stAng"/>
+      <gd name="stB" fmla="?: lef stAng stAngB"/>
+      <gd name="swT" fmla="?: lef v1 swAngT"/>
+      <gd name="swB" fmla="?: lef swAngT v1"/>
+      <gd name="wt1" fmla="sin wd2 stT"/>
+      <gd name="ht1" fmla="cos hd2 stT"/>
+      <gd name="dx1" fmla="cat2 wd2 ht1 wt1"/>
+      <gd name="dy1" fmla="sat2 hd2 ht1 wt1"/>
+      <gd name="x1" fmla="+- hc dx1 0"/>
+      <gd name="y1" fmla="+- vc dy1 0"/>
+      <gd name="wt6" fmla="sin wd2 stB"/>
+      <gd name="ht6" fmla="cos hd2 stB"/>
+      <gd name="dx6" fmla="cat2 wd2 ht6 wt6"/>
+      <gd name="dy6" fmla="sat2 hd2 ht6 wt6"/>
+      <gd name="x6" fmla="+- hc dx6 0"/>
+      <gd name="y6" fmla="+- vc dy6 0"/>
+      <gd name="adval2" fmla="pin 40000 adj2 99000"/>
+      <gd name="ratio" fmla="*/ adval2 1 100000"/>
+      <gd name="iwd2" fmla="*/ wd2 ratio 1"/>
+      <gd name="ihd2" fmla="*/ hd2 ratio 1"/>
+      <gd name="wt2" fmla="sin iwd2 stT"/>
+      <gd name="ht2" fmla="cos ihd2 stT"/>
+      <gd name="dx2" fmla="cat2 iwd2 ht2 wt2"/>
+      <gd name="dy2" fmla="sat2 ihd2 ht2 wt2"/>
+      <gd name="x2" fmla="+- hc dx2 0"/>
+      <gd name="y2" fmla="+- vc dy2 0"/>
+      <gd name="wt5" fmla="sin iwd2 stB"/>
+      <gd name="ht5" fmla="cos ihd2 stB"/>
+      <gd name="dx5" fmla="cat2 iwd2 ht5 wt5"/>
+      <gd name="dy5" fmla="sat2 ihd2 ht5 wt5"/>
+      <gd name="x5" fmla="+- hc dx5 0"/>
+      <gd name="y5" fmla="+- vc dy5 0"/>
+      <gd name="d1" fmla="+- hd2 0 ihd2"/>
+      <gd name="d12" fmla="*/ d1 1 2"/>
+      <gd name="yu" fmla="+- vc 0 d12"/>
+      <gd name="yd" fmla="+- vc d12 0"/>
+      <gd name="v1" fmla="*/ d12 d12 1"/>
+      <gd name="v2" fmla="*/ ihd2 ihd2 1"/>
+      <gd name="v3" fmla="*/ v1 1 v2"/>
+      <gd name="v4" fmla="+- 1 0 v3"/>
+      <gd name="v5" fmla="*/ iwd2 iwd2 1"/>
+      <gd name="v6" fmla="*/ v4 v5 1"/>
+      <gd name="v7" fmla="sqrt v6"/>
+      <gd name="xl" fmla="+- hc 0 v7"/>
+      <gd name="xr" fmla="+- hc v7 0"/>
+      <gd name="wtadj" fmla="sin iwd2 adj1"/>
+      <gd name="htadj" fmla="cos ihd2 adj1"/>
+      <gd name="dxadj" fmla="cat2 iwd2 htadj wtadj"/>
+      <gd name="dyadj" fmla="sat2 ihd2 htadj wtadj"/>
+      <gd name="xadj" fmla="+- hc dxadj 0"/>
+      <gd name="yadj" fmla="+- vc dyadj 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefR="adj2" minR="0" maxR="100000" gdRefAng="adj1" minAng="0" maxAng="21599999">
+        <pos x="xadj" y="yadj"/>
+      </ahPolar>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="stT" swAng="swT"/>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x2" y="y2"/>
+        </moveTo>
+        <arcTo wR="iwd2" hR="ihd2" stAng="stT" swAng="swT"/>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="xl" y="yu"/>
+        </moveTo>
+        <lnTo>
+          <pt x="xr" y="yu"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="xl" y="yd"/>
+        </moveTo>
+        <lnTo>
+          <pt x="xr" y="yd"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x5" y="y5"/>
+        </moveTo>
+        <arcTo wR="iwd2" hR="ihd2" stAng="stB" swAng="swB"/>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x6" y="y6"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="stB" swAng="swB"/>
+      </path>
+    </pathLst>
+  </textButtonPour>
+  <textCanDown>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 14286"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 33333"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="y0" fmla="+- t dy 0"/>
+      <gd name="y1" fmla="+- b 0 dy"/>
+      <gd name="ncd2" fmla="*/ cd2 -1 1"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="33333">
+        <pos x="hc" y="y0"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="dy" stAng="cd2" swAng="ncd2"/>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y1"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="dy" stAng="cd2" swAng="ncd2"/>
+      </path>
+    </pathLst>
+  </textCanDown>
+  <textCanUp>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 85714"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 66667 adj 100000"/>
+      <gd name="dy1" fmla="*/ a h 100000"/>
+      <gd name="dy" fmla="+- h 0 dy1"/>
+      <gd name="y0" fmla="+- t dy1 0"/>
+      <gd name="y1" fmla="+- t dy 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="66667" maxY="100000">
+        <pos x="hc" y="y0"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y1"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="dy" stAng="cd2" swAng="cd2"/>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="b"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="dy" stAng="cd2" swAng="cd2"/>
+      </path>
+    </pathLst>
+  </textCanUp>
+  <textCascadeDown>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 44444"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 28570 adj 100000"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="y1" fmla="+- t dy 0"/>
+      <gd name="dy2" fmla="+- h 0 dy"/>
+      <gd name="dy3" fmla="*/ dy2 1 4"/>
+      <gd name="y2" fmla="+- t dy3 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="28570" maxY="100000">
+        <pos x="l" y="y1"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="y2"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y1"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="b"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textCascadeDown>
+  <textCascadeUp>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 44444"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 28570 adj 100000"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="y1" fmla="+- t dy 0"/>
+      <gd name="dy2" fmla="+- h 0 dy"/>
+      <gd name="dy3" fmla="*/ dy2 1 4"/>
+      <gd name="y2" fmla="+- t dy3 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="28570" maxY="100000">
+        <pos x="r" y="y1"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y2"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="b"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="y1"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textCascadeUp>
+  <textChevron>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 25000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000"/>
+      <gd name="y" fmla="*/ a h 100000"/>
+      <gd name="y1" fmla="+- t b y"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="50000">
+        <pos x="l" y="y"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y"/>
+        </moveTo>
+        <lnTo>
+          <pt x="hc" y="t"/>
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="b"/>
+        </moveTo>
+        <lnTo>
+          <pt x="hc" y="y1"/>
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="b"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textChevron>
+  <textChevronInverted>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 75000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 50000 adj 100000"/>
+      <gd name="y" fmla="*/ a h 100000"/>
+      <gd name="y1" fmla="+- b 0 y"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="50000" maxY="100000">
+        <pos x="l" y="y"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <lnTo>
+          <pt x="hc" y="y1"/>
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="t"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y"/>
+        </moveTo>
+        <lnTo>
+          <pt x="hc" y="b"/>
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textChevronInverted>
+  <textCircle>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 10800000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adval" fmla="pin 0 adj 21599999"/>
+      <gd name="d0" fmla="+- adval 0 10800000"/>
+      <gd name="d1" fmla="+- 10800000 0 adval"/>
+      <gd name="d2" fmla="+- 21600000 0 adval"/>
+      <gd name="d3" fmla="?: d1 d1 10799999"/>
+      <gd name="d4" fmla="?: d0 d2 d3"/>
+      <gd name="swAng" fmla="*/ d4 2 1"/>
+      <gd name="wt1" fmla="sin wd2 adj"/>
+      <gd name="ht1" fmla="cos hd2 adj"/>
+      <gd name="dx1" fmla="cat2 wd2 ht1 wt1"/>
+      <gd name="dy1" fmla="sat2 hd2 ht1 wt1"/>
+      <gd name="x1" fmla="+- hc dx1 0"/>
+      <gd name="y1" fmla="+- vc dy1 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefAng="adj" minAng="0" maxAng="21599999">
+        <pos x="x1" y="y1"/>
+      </ahPolar>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="adval" swAng="swAng"/>
+      </path>
+    </pathLst>
+  </textCircle>
+  <textCirclePour>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val cd2"/>
+      <gd name="adj2" fmla="val 50000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adval" fmla="pin 0 adj1 21599999"/>
+      <gd name="d0" fmla="+- adval 0 10800000"/>
+      <gd name="d1" fmla="+- 10800000 0 adval"/>
+      <gd name="d2" fmla="+- 21600000 0 adval"/>
+      <gd name="d3" fmla="?: d1 d1 10799999"/>
+      <gd name="d4" fmla="?: d0 d2 d3"/>
+      <gd name="swAng" fmla="*/ d4 2 1"/>
+      <gd name="wt1" fmla="sin wd2 adval"/>
+      <gd name="ht1" fmla="cos hd2 adval"/>
+      <gd name="dx1" fmla="cat2 wd2 ht1 wt1"/>
+      <gd name="dy1" fmla="sat2 hd2 ht1 wt1"/>
+      <gd name="x1" fmla="+- hc dx1 0"/>
+      <gd name="y1" fmla="+- vc dy1 0"/>
+      <gd name="adval2" fmla="pin 0 adj2 99000"/>
+      <gd name="ratio" fmla="*/ adval2 1 100000"/>
+      <gd name="iwd2" fmla="*/ wd2 ratio 1"/>
+      <gd name="ihd2" fmla="*/ hd2 ratio 1"/>
+      <gd name="wt2" fmla="sin iwd2 adval"/>
+      <gd name="ht2" fmla="cos ihd2 adval"/>
+      <gd name="dx2" fmla="cat2 iwd2 ht2 wt2"/>
+      <gd name="dy2" fmla="sat2 ihd2 ht2 wt2"/>
+      <gd name="x2" fmla="+- hc dx2 0"/>
+      <gd name="y2" fmla="+- vc dy2 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahPolar gdRefR="adj2" minR="0" maxR="100000" gdRefAng="adj1" minAng="0" maxAng="21599999">
+        <pos x="x2" y="y2"/>
+      </ahPolar>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="y1"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="hd2" stAng="adval" swAng="swAng"/>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x2" y="y2"/>
+        </moveTo>
+        <arcTo wR="iwd2" hR="ihd2" stAng="adval" swAng="swAng"/>
+      </path>
+    </pathLst>
+  </textCirclePour>
+  <textCurveDown>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 45977"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 56338"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="gd1" fmla="*/ dy 3 4"/>
+      <gd name="gd2" fmla="*/ dy 5 4"/>
+      <gd name="gd3" fmla="*/ dy 3 8"/>
+      <gd name="gd4" fmla="*/ dy 1 8"/>
+      <gd name="gd5" fmla="+- h 0 gd3"/>
+      <gd name="gd6" fmla="+- gd4 h 0"/>
+      <gd name="y0" fmla="+- t dy 0"/>
+      <gd name="y1" fmla="+- t gd1 0"/>
+      <gd name="y2" fmla="+- t gd2 0"/>
+      <gd name="y3" fmla="+- t gd3 0"/>
+      <gd name="y4" fmla="+- t gd4 0"/>
+      <gd name="y5" fmla="+- t gd5 0"/>
+      <gd name="y6" fmla="+- t gd6 0"/>
+      <gd name="x1" fmla="+- l wd3 0"/>
+      <gd name="x2" fmla="+- r 0 wd3"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="56338">
+        <pos x="r" y="y0"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x1" y="y1"/>
+          <pt x="x2" y="y2"/>
+          <pt x="r" y="y0"/>
+        </cubicBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y5"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x1" y="y6"/>
+          <pt x="x2" y="y6"/>
+          <pt x="r" y="y5"/>
+        </cubicBezTo>
+      </path>
+    </pathLst>
+  </textCurveDown>
+  <textCurveUp>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 45977"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 56338"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="gd1" fmla="*/ dy 3 4"/>
+      <gd name="gd2" fmla="*/ dy 5 4"/>
+      <gd name="gd3" fmla="*/ dy 3 8"/>
+      <gd name="gd4" fmla="*/ dy 1 8"/>
+      <gd name="gd5" fmla="+- h 0 gd3"/>
+      <gd name="gd6" fmla="+- gd4 h 0"/>
+      <gd name="y0" fmla="+- t dy 0"/>
+      <gd name="y1" fmla="+- t gd1 0"/>
+      <gd name="y2" fmla="+- t gd2 0"/>
+      <gd name="y3" fmla="+- t gd3 0"/>
+      <gd name="y4" fmla="+- t gd4 0"/>
+      <gd name="y5" fmla="+- t gd5 0"/>
+      <gd name="y6" fmla="+- t gd6 0"/>
+      <gd name="x1" fmla="+- l wd3 0"/>
+      <gd name="x2" fmla="+- r 0 wd3"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="56338">
+        <pos x="l" y="y0"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y0"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x1" y="y2"/>
+          <pt x="x2" y="y1"/>
+          <pt x="r" y="t"/>
+        </cubicBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y5"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x1" y="y6"/>
+          <pt x="x2" y="y6"/>
+          <pt x="r" y="y5"/>
+        </cubicBezTo>
+      </path>
+    </pathLst>
+  </textCurveUp>
+  <textDeflate>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 18750"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 37500"/>
+      <gd name="dy" fmla="*/ a ss 100000"/>
+      <gd name="gd0" fmla="*/ dy 4 3"/>
+      <gd name="gd1" fmla="+- h 0 gd0"/>
+      <gd name="adjY" fmla="+- t dy 0"/>
+      <gd name="y0" fmla="+- t gd0 0"/>
+      <gd name="y1" fmla="+- t gd1 0"/>
+      <gd name="x0" fmla="+- l wd3 0"/>
+      <gd name="x1" fmla="+- r 0 wd3"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="37500">
+        <pos x="hc" y="adjY"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x0" y="y0"/>
+          <pt x="x1" y="y0"/>
+          <pt x="r" y="t"/>
+        </cubicBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="b"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x0" y="y1"/>
+          <pt x="x1" y="y1"/>
+          <pt x="r" y="b"/>
+        </cubicBezTo>
+      </path>
+    </pathLst>
+  </textDeflate>
+  <textDeflateBottom>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 50000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 6250 adj 100000"/>
+      <gd name="dy" fmla="*/ a ss 100000"/>
+      <gd name="dy2" fmla="+- h 0 dy"/>
+      <gd name="y1" fmla="+- t dy 0"/>
+      <gd name="cp" fmla="+- y1 0 dy2"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="6250" maxY="100000">
+        <pos x="hc" y="y1"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="b"/>
+        </moveTo>
+        <quadBezTo>
+          <pt x="hc" y="cp"/>
+          <pt x="r" y="b"/>
+        </quadBezTo>
+      </path>
+    </pathLst>
+  </textDeflateBottom>
+  <textDeflateInflate>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 35000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 5000 adj 95000"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="del" fmla="*/ h 5 100"/>
+      <gd name="dh1" fmla="*/ h 45 100"/>
+      <gd name="dh2" fmla="*/ h 55 100"/>
+      <gd name="yh" fmla="+- dy 0 del"/>
+      <gd name="yl" fmla="+- dy del 0"/>
+      <gd name="y3" fmla="+- yh yh dh1"/>
+      <gd name="y4" fmla="+- yl yl dh2"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="5000" maxY="95000">
+        <pos x="hc" y="dy"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="dh1"/>
+        </moveTo>
+        <quadBezTo>
+          <pt x="hc" y="y3"/>
+          <pt x="r" y="dh1"/>
+        </quadBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="dh2"/>
+        </moveTo>
+        <quadBezTo>
+          <pt x="hc" y="y4"/>
+          <pt x="r" y="dh2"/>
+        </quadBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="b"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="b"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textDeflateInflate>
+  <textDeflateInflateDeflate>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 25000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 3000 adj 47000"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="del" fmla="*/ h 3 100"/>
+      <gd name="ey1" fmla="*/ h 30 100"/>
+      <gd name="ey2" fmla="*/ h 36 100"/>
+      <gd name="ey3" fmla="*/ h 63 100"/>
+      <gd name="ey4" fmla="*/ h 70 100"/>
+      <gd name="by" fmla="+- b 0 dy"/>
+      <gd name="yh1" fmla="+- dy 0 del"/>
+      <gd name="yl1" fmla="+- dy del 0"/>
+      <gd name="yh2" fmla="+- by 0 del"/>
+      <gd name="yl2" fmla="+- by del 0"/>
+      <gd name="y1" fmla="+- yh1 yh1 ey1"/>
+      <gd name="y2" fmla="+- yl1 yl1 ey2"/>
+      <gd name="y3" fmla="+- yh2 yh2 ey3"/>
+      <gd name="y4" fmla="+- yl2 yl2 ey4"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="3000" maxY="47000">
+        <pos x="hc" y="dy"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="ey1"/>
+        </moveTo>
+        <quadBezTo>
+          <pt x="hc" y="y1"/>
+          <pt x="r" y="ey1"/>
+        </quadBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="ey2"/>
+        </moveTo>
+        <quadBezTo>
+          <pt x="hc" y="y2"/>
+          <pt x="r" y="ey2"/>
+        </quadBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="ey3"/>
+        </moveTo>
+        <quadBezTo>
+          <pt x="hc" y="y3"/>
+          <pt x="r" y="ey3"/>
+        </quadBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="ey4"/>
+        </moveTo>
+        <quadBezTo>
+          <pt x="hc" y="y4"/>
+          <pt x="r" y="ey4"/>
+        </quadBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="b"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="b"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textDeflateInflateDeflate>
+  <textDeflateTop>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 50000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 93750"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="y1" fmla="+- t dy 0"/>
+      <gd name="cp" fmla="+- y1 dy 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="93750">
+        <pos x="hc" y="y1"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <quadBezTo>
+          <pt x="hc" y="cp"/>
+          <pt x="r" y="t"/>
+        </quadBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="b"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="b"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textDeflateTop>
+  <textDoubleWave1>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 6250"/>
+      <gd name="adj2" fmla="val 0"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 12500"/>
+      <gd name="a2" fmla="pin -10000 adj2 10000"/>
+      <gd name="y1" fmla="*/ h a1 100000"/>
+      <gd name="dy2" fmla="*/ y1 10 3"/>
+      <gd name="y2" fmla="+- y1 0 dy2"/>
+      <gd name="y3" fmla="+- y1 dy2 0"/>
+      <gd name="y4" fmla="+- b 0 y1"/>
+      <gd name="y5" fmla="+- y4 0 dy2"/>
+      <gd name="y6" fmla="+- y4 dy2 0"/>
+      <gd name="of" fmla="*/ w a2 100000"/>
+      <gd name="of2" fmla="*/ w a2 50000"/>
+      <gd name="x1" fmla="abs of"/>
+      <gd name="dx2" fmla="?: of2 0 of2"/>
+      <gd name="x2" fmla="+- l 0 dx2"/>
+      <gd name="dx8" fmla="?: of2 of2 0"/>
+      <gd name="x8" fmla="+- r 0 dx8"/>
+      <gd name="dx3" fmla="+/ dx2 x8 6"/>
+      <gd name="x3" fmla="+- x2 dx3 0"/>
+      <gd name="dx4" fmla="+/ dx2 x8 3"/>
+      <gd name="x4" fmla="+- x2 dx4 0"/>
+      <gd name="x5" fmla="+/ x2 x8 2"/>
+      <gd name="x6" fmla="+- x5 dx3 0"/>
+      <gd name="x7" fmla="+/ x6 x8 2"/>
+      <gd name="x9" fmla="+- l dx8 0"/>
+      <gd name="x15" fmla="+- r dx2 0"/>
+      <gd name="x10" fmla="+- x9 dx3 0"/>
+      <gd name="x11" fmla="+- x9 dx4 0"/>
+      <gd name="x12" fmla="+/ x9 x15 2"/>
+      <gd name="x13" fmla="+- x12 dx3 0"/>
+      <gd name="x14" fmla="+/ x13 x15 2"/>
+      <gd name="x16" fmla="+- r 0 x1"/>
+      <gd name="xAdj" fmla="+- hc of 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="12500">
+        <pos x="l" y="y1"/>
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="-10000" maxX="10000">
+        <pos x="xAdj" y="b"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x2" y="y1"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x3" y="y2"/>
+          <pt x="x4" y="y3"/>
+          <pt x="x5" y="y1"/>
+        </cubicBezTo>
+        <cubicBezTo>
+          <pt x="x6" y="y2"/>
+          <pt x="x7" y="y3"/>
+          <pt x="x8" y="y1"/>
+        </cubicBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x9" y="y4"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x10" y="y5"/>
+          <pt x="x11" y="y6"/>
+          <pt x="x12" y="y4"/>
+        </cubicBezTo>
+        <cubicBezTo>
+          <pt x="x13" y="y5"/>
+          <pt x="x14" y="y6"/>
+          <pt x="x15" y="y4"/>
+        </cubicBezTo>
+      </path>
+    </pathLst>
+  </textDoubleWave1>
+  <textFadeDown>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 33333"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 49999"/>
+      <gd name="dx" fmla="*/ a w 100000"/>
+      <gd name="x1" fmla="+- l dx 0"/>
+      <gd name="x2" fmla="+- r 0 dx"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="49999">
+        <pos x="x1" y="b"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x1" y="b"/>
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="b"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textFadeDown>
+  <textFadeLeft>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 33333"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 49999"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="y1" fmla="+- t dy 0"/>
+      <gd name="y2" fmla="+- b 0 dy"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="49999">
+        <pos x="l" y="y1"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y1"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y2"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="b"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textFadeLeft>
+  <textFadeRight>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 33333"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 49999"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="y1" fmla="+- t dy 0"/>
+      <gd name="y2" fmla="+- b 0 dy"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="49999">
+        <pos x="r" y="y1"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="y1"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="b"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="y2"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textFadeRight>
+  <textFadeUp>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 33333"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 49999"/>
+      <gd name="dx" fmla="*/ a w 100000"/>
+      <gd name="x1" fmla="+- l dx 0"/>
+      <gd name="x2" fmla="+- r 0 dx"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="0" maxX="49999">
+        <pos x="x1" y="t"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x1" y="t"/>
+        </moveTo>
+        <lnTo>
+          <pt x="x2" y="t"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="b"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="b"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textFadeUp>
+  <textInflate>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 18750"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 20000"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="gd" fmla="*/ dy 1 3"/>
+      <gd name="gd0" fmla="+- 0 0 gd"/>
+      <gd name="gd1" fmla="+- h 0 gd0"/>
+      <gd name="ty" fmla="+- t dy 0"/>
+      <gd name="by" fmla="+- b 0 dy"/>
+      <gd name="y0" fmla="+- t gd0 0"/>
+      <gd name="y1" fmla="+- t gd1 0"/>
+      <gd name="x0" fmla="+- l wd3 0"/>
+      <gd name="x1" fmla="+- r 0 wd3"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="20000">
+        <pos x="l" y="ty"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="ty"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x0" y="y0"/>
+          <pt x="x1" y="y0"/>
+          <pt x="r" y="ty"/>
+        </cubicBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="by"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x0" y="y1"/>
+          <pt x="x1" y="y1"/>
+          <pt x="r" y="by"/>
+        </cubicBezTo>
+      </path>
+    </pathLst>
+  </textInflate>
+  <textInflateBottom>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 60000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 60000 adj 100000"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="ty" fmla="+- t dy 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="60000" maxY="100000">
+        <pos x="l" y="ty"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="ty"/>
+        </moveTo>
+        <quadBezTo>
+          <pt x="hc" y="b"/>
+          <pt x="r" y="ty"/>
+        </quadBezTo>
+      </path>
+    </pathLst>
+  </textInflateBottom>
+  <textInflateTop>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 40000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 50000"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="ty" fmla="+- t dy 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="50000">
+        <pos x="l" y="ty"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="ty"/>
+        </moveTo>
+        <quadBezTo>
+          <pt x="hc" y="t"/>
+          <pt x="r" y="ty"/>
+        </quadBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="b"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="b"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textInflateTop>
+  <textPlain>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 50000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 30000 adj 70000"/>
+      <gd name="mid" fmla="*/ a w 100000"/>
+      <gd name="midDir" fmla="+- mid 0 hc"/>
+      <gd name="dl" fmla="+- mid 0 l"/>
+      <gd name="dr" fmla="+- r 0 mid"/>
+      <gd name="dl2" fmla="*/ dl 2 1"/>
+      <gd name="dr2" fmla="*/ dr 2 1"/>
+      <gd name="dx" fmla="?: midDir dr2 dl2"/>
+      <gd name="xr" fmla="+- l dx 0"/>
+      <gd name="xl" fmla="+- r 0 dx"/>
+      <gd name="tlx" fmla="?: midDir l xl"/>
+      <gd name="trx" fmla="?: midDir xr r"/>
+      <gd name="blx" fmla="?: midDir xl l"/>
+      <gd name="brx" fmla="?: midDir r xr"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefX="adj" minX="30000" maxX="70000">
+        <pos x="mid" y="b"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="tlx" y="t"/>
+        </moveTo>
+        <lnTo>
+          <pt x="trx" y="t"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="blx" y="b"/>
+        </moveTo>
+        <lnTo>
+          <pt x="brx" y="b"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textPlain>
+  <textRingInside>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 60000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 50000 adj 99000"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="y" fmla="+- t dy 0"/>
+      <gd name="r" fmla="*/ dy 1 2"/>
+      <gd name="y1" fmla="+- t r 0"/>
+      <gd name="y2" fmla="+- b 0 r"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="50000" maxY="99000">
+        <pos x="hc" y="y"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y1"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="r" stAng="10800000" swAng="21599999"/>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y2"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="r" stAng="10800000" swAng="21599999"/>
+      </path>
+    </pathLst>
+  </textRingInside>
+  <textRingOutside>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 60000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 50000 adj 99000"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="y" fmla="+- t dy 0"/>
+      <gd name="r" fmla="*/ dy 1 2"/>
+      <gd name="y1" fmla="+- t r 0"/>
+      <gd name="y2" fmla="+- b 0 r"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="50000" maxY="99000">
+        <pos x="hc" y="y"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y1"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="r" stAng="10800000" swAng="-21599999"/>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y2"/>
+        </moveTo>
+        <arcTo wR="wd2" hR="r" stAng="10800000" swAng="-21599999"/>
+      </path>
+    </pathLst>
+  </textRingOutside>
+  <textSlantDown>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 44445"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 28569 adj 100000"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="y1" fmla="+- t dy 0"/>
+      <gd name="y2" fmla="+- b 0 dy"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="28569" maxY="100000">
+        <pos x="l" y="y1"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="y2"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y1"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="b"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textSlantDown>
+  <textSlantUp>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 55555"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 71431"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="y1" fmla="+- t dy 0"/>
+      <gd name="y2" fmla="+- b 0 dy"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="71431">
+        <pos x="l" y="y1"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y1"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="b"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="y2"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textSlantUp>
+  <textStop>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 25000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 14286 adj 50000"/>
+      <gd name="dx" fmla="*/ w 1 3"/>
+      <gd name="dy" fmla="*/ a h 100000"/>
+      <gd name="x1" fmla="+- l dx 0"/>
+      <gd name="x2" fmla="+- r 0 dx"/>
+      <gd name="y1" fmla="+- t dy 0"/>
+      <gd name="y2" fmla="+- b 0 dy"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="14286" maxY="50000">
+        <pos x="l" y="dy"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y1"/>
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="t"/>
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="t"/>
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y1"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y2"/>
+        </moveTo>
+        <lnTo>
+          <pt x="x1" y="b"/>
+        </lnTo>
+        <lnTo>
+          <pt x="x2" y="b"/>
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y2"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textStop>
+  <textTriangle>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 50000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 100000"/>
+      <gd name="y" fmla="*/ a h 100000"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="100000">
+        <pos x="l" y="y"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="y"/>
+        </moveTo>
+        <lnTo>
+          <pt x="hc" y="t"/>
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="b"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="b"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textTriangle>
+  <textTriangleInverted>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj" fmla="val 50000"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a" fmla="pin 0 adj 100000"/>
+      <gd name="y" fmla="*/ a h 100000"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj" minY="0" maxY="100000">
+        <pos x="l" y="y"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="l" y="t"/>
+        </moveTo>
+        <lnTo>
+          <pt x="r" y="t"/>
+        </lnTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="l" y="y"/>
+        </moveTo>
+        <lnTo>
+          <pt x="hc" y="b"/>
+        </lnTo>
+        <lnTo>
+          <pt x="r" y="y"/>
+        </lnTo>
+      </path>
+    </pathLst>
+  </textTriangleInverted>
+  <textWave1>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 12500"/>
+      <gd name="adj2" fmla="val 0"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 20000"/>
+      <gd name="a2" fmla="pin -10000 adj2 10000"/>
+      <gd name="y1" fmla="*/ h a1 100000"/>
+      <gd name="dy2" fmla="*/ y1 10 3"/>
+      <gd name="y2" fmla="+- y1 0 dy2"/>
+      <gd name="y3" fmla="+- y1 dy2 0"/>
+      <gd name="y4" fmla="+- b 0 y1"/>
+      <gd name="y5" fmla="+- y4 0 dy2"/>
+      <gd name="y6" fmla="+- y4 dy2 0"/>
+      <gd name="of" fmla="*/ w a2 100000"/>
+      <gd name="of2" fmla="*/ w a2 50000"/>
+      <gd name="x1" fmla="abs of"/>
+      <gd name="dx2" fmla="?: of2 0 of2"/>
+      <gd name="x2" fmla="+- l 0 dx2"/>
+      <gd name="dx5" fmla="?: of2 of2 0"/>
+      <gd name="x5" fmla="+- r 0 dx5"/>
+      <gd name="dx3" fmla="+/ dx2 x5 3"/>
+      <gd name="x3" fmla="+- x2 dx3 0"/>
+      <gd name="x4" fmla="+/ x3 x5 2"/>
+      <gd name="x6" fmla="+- l dx5 0"/>
+      <gd name="x10" fmla="+- r dx2 0"/>
+      <gd name="x7" fmla="+- x6 dx3 0"/>
+      <gd name="x8" fmla="+/ x7 x10 2"/>
+      <gd name="x9" fmla="+- r 0 x1"/>
+      <gd name="xAdj" fmla="+- hc of 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="20000">
+        <pos x="l" y="y1"/>
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="-10000" maxX="10000">
+        <pos x="xAdj" y="b"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x2" y="y1"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x3" y="y2"/>
+          <pt x="x4" y="y3"/>
+          <pt x="x5" y="y1"/>
+        </cubicBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x6" y="y4"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x7" y="y5"/>
+          <pt x="x8" y="y6"/>
+          <pt x="x10" y="y4"/>
+        </cubicBezTo>
+      </path>
+    </pathLst>
+  </textWave1>
+  <textWave2>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 12500"/>
+      <gd name="adj2" fmla="val 0"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 20000"/>
+      <gd name="a2" fmla="pin -10000 adj2 10000"/>
+      <gd name="y1" fmla="*/ h a1 100000"/>
+      <gd name="dy2" fmla="*/ y1 10 3"/>
+      <gd name="y2" fmla="+- y1 0 dy2"/>
+      <gd name="y3" fmla="+- y1 dy2 0"/>
+      <gd name="y4" fmla="+- b 0 y1"/>
+      <gd name="y5" fmla="+- y4 0 dy2"/>
+      <gd name="y6" fmla="+- y4 dy2 0"/>
+      <gd name="of" fmla="*/ w a2 100000"/>
+      <gd name="of2" fmla="*/ w a2 50000"/>
+      <gd name="x1" fmla="abs of"/>
+      <gd name="dx2" fmla="?: of2 0 of2"/>
+      <gd name="x2" fmla="+- l 0 dx2"/>
+      <gd name="dx5" fmla="?: of2 of2 0"/>
+      <gd name="x5" fmla="+- r 0 dx5"/>
+      <gd name="dx3" fmla="+/ dx2 x5 3"/>
+      <gd name="x3" fmla="+- x2 dx3 0"/>
+      <gd name="x4" fmla="+/ x3 x5 2"/>
+      <gd name="x6" fmla="+- l dx5 0"/>
+      <gd name="x10" fmla="+- r dx2 0"/>
+      <gd name="x7" fmla="+- x6 dx3 0"/>
+      <gd name="x8" fmla="+/ x7 x10 2"/>
+      <gd name="x9" fmla="+- r 0 x1"/>
+      <gd name="xAdj" fmla="+- hc of 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="20000">
+        <pos x="l" y="y1"/>
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="-10000" maxX="10000">
+        <pos x="xAdj" y="b"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x2" y="y1"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x3" y="y3"/>
+          <pt x="x4" y="y2"/>
+          <pt x="x5" y="y1"/>
+        </cubicBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x6" y="y4"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x7" y="y6"/>
+          <pt x="x8" y="y5"/>
+          <pt x="x10" y="y4"/>
+        </cubicBezTo>
+      </path>
+    </pathLst>
+  </textWave2>
+  <textWave4>
+    <avLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="adj1" fmla="val 6250"/>
+      <gd name="adj2" fmla="val 0"/>
+    </avLst>
+    <gdLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <gd name="a1" fmla="pin 0 adj1 12500"/>
+      <gd name="a2" fmla="pin -10000 adj2 10000"/>
+      <gd name="y1" fmla="*/ h a1 100000"/>
+      <gd name="dy2" fmla="*/ y1 10 3"/>
+      <gd name="y2" fmla="+- y1 0 dy2"/>
+      <gd name="y3" fmla="+- y1 dy2 0"/>
+      <gd name="y4" fmla="+- b 0 y1"/>
+      <gd name="y5" fmla="+- y4 0 dy2"/>
+      <gd name="y6" fmla="+- y4 dy2 0"/>
+      <gd name="of" fmla="*/ w a2 100000"/>
+      <gd name="of2" fmla="*/ w a2 50000"/>
+      <gd name="x1" fmla="abs of"/>
+      <gd name="dx2" fmla="?: of2 0 of2"/>
+      <gd name="x2" fmla="+- l 0 dx2"/>
+      <gd name="dx8" fmla="?: of2 of2 0"/>
+      <gd name="x8" fmla="+- r 0 dx8"/>
+      <gd name="dx3" fmla="+/ dx2 x8 6"/>
+      <gd name="x3" fmla="+- x2 dx3 0"/>
+      <gd name="dx4" fmla="+/ dx2 x8 3"/>
+      <gd name="x4" fmla="+- x2 dx4 0"/>
+      <gd name="x5" fmla="+/ x2 x8 2"/>
+      <gd name="x6" fmla="+- x5 dx3 0"/>
+      <gd name="x7" fmla="+/ x6 x8 2"/>
+      <gd name="x9" fmla="+- l dx8 0"/>
+      <gd name="x15" fmla="+- r dx2 0"/>
+      <gd name="x10" fmla="+- x9 dx3 0"/>
+      <gd name="x11" fmla="+- x9 dx4 0"/>
+      <gd name="x12" fmla="+/ x9 x15 2"/>
+      <gd name="x13" fmla="+- x12 dx3 0"/>
+      <gd name="x14" fmla="+/ x13 x15 2"/>
+      <gd name="x16" fmla="+- r 0 x1"/>
+      <gd name="xAdj" fmla="+- hc of 0"/>
+    </gdLst>
+    <ahLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <ahXY gdRefY="adj1" minY="0" maxY="12500">
+        <pos x="l" y="y1"/>
+      </ahXY>
+      <ahXY gdRefX="adj2" minX="-10000" maxX="10000">
+        <pos x="xAdj" y="b"/>
+      </ahXY>
+    </ahLst>
+    <pathLst xmlns="http://schemas.openxmlformats.org/drawingml/2006/main">
+      <path>
+        <moveTo>
+          <pt x="x2" y="y1"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x3" y="y3"/>
+          <pt x="x4" y="y2"/>
+          <pt x="x5" y="y1"/>
+        </cubicBezTo>
+        <cubicBezTo>
+          <pt x="x6" y="y3"/>
+          <pt x="x7" y="y2"/>
+          <pt x="x8" y="y1"/>
+        </cubicBezTo>
+      </path>
+      <path>
+        <moveTo>
+          <pt x="x9" y="y4"/>
+        </moveTo>
+        <cubicBezTo>
+          <pt x="x10" y="y6"/>
+          <pt x="x11" y="y5"/>
+          <pt x="x12" y="y4"/>
+        </cubicBezTo>
+        <cubicBezTo>
+          <pt x="x13" y="y6"/>
+          <pt x="x14" y="y5"/>
+          <pt x="x15" y="y4"/>
+        </cubicBezTo>
+      </path>
+    </pathLst>
+  </textWave4>
+</presetTextWarpDefinitions>
diff --git oox/source/export/shapes.cxx oox/source/export/shapes.cxx
new file mode 100644
index 0000000..7ce05d8
--- /dev/null
+++ oox/source/export/shapes.cxx
@@ -0,0 +1,998 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include "tokens.hxx"
+#include "oox/core/xmlfilterbase.hxx"
+#include "oox/export/shapes.hxx"
+#include "oox/export/utils.hxx"
+
+#include <cstdio>
+#include <com/sun/star/awt/CharSet.hpp>
+#include <com/sun/star/awt/FontDescriptor.hpp>
+#include <com/sun/star/awt/FontSlant.hpp>
+#include <com/sun/star/awt/FontWeight.hpp>
+#include <com/sun/star/awt/FontUnderline.hpp>
+#include <com/sun/star/awt/Gradient.hpp>
+#include <com/sun/star/beans/XPropertySet.hpp>
+#include <com/sun/star/beans/XPropertyState.hpp>
+#include <com/sun/star/container/XEnumerationAccess.hpp>
+#include <com/sun/star/drawing/FillStyle.hpp>
+#include <com/sun/star/drawing/BitmapMode.hpp>
+#include <com/sun/star/drawing/ConnectorType.hpp>
+#include <com/sun/star/drawing/LineDash.hpp>
+#include <com/sun/star/drawing/LineJoint.hpp>
+#include <com/sun/star/drawing/LineStyle.hpp>
+#include <com/sun/star/drawing/TextHorizontalAdjust.hpp>
+#include <com/sun/star/drawing/TextVerticalAdjust.hpp>
+#include <com/sun/star/i18n/ScriptType.hpp>
+#include <com/sun/star/io/XOutputStream.hpp>
+#include <com/sun/star/style/ParagraphAdjust.hpp>
+#include <com/sun/star/text/XSimpleText.hpp>
+#include <com/sun/star/text/XText.hpp>
+#include <com/sun/star/text/XTextContent.hpp>
+#include <com/sun/star/text/XTextField.hpp>
+#include <com/sun/star/text/XTextRange.hpp>
+#include <tools/stream.hxx>
+#include <tools/string.hxx>
+#include <vcl/cvtgrf.hxx>
+#include <vcl/fontcvt.hxx>
+#include <vcl/graph.hxx>
+#include <vcl/outdev.hxx>
+#include <goodies/grfmgr.hxx>
+#include <rtl/strbuf.hxx>
+#include <sfx2/app.hxx>
+#include <svtools/languageoptions.hxx>
+#include <svx/escherex.hxx>
+#include <svx/svdoashp.hxx>
+#include <svx/svxenum.hxx>
+#include <svx/unoapi.hxx>
+
+using namespace ::com::sun::star;
+using namespace ::com::sun::star::uno;
+using namespace ::com::sun::star::drawing;
+using namespace ::com::sun::star::i18n;
+using ::com::sun::star::beans::PropertyState;
+using ::com::sun::star::beans::PropertyValue;
+using ::com::sun::star::beans::XPropertySet;
+using ::com::sun::star::beans::XPropertyState;
+using ::com::sun::star::container::XEnumeration;
+using ::com::sun::star::container::XEnumerationAccess;
+using ::com::sun::star::container::XIndexAccess;
+using ::com::sun::star::drawing::FillStyle;
+using ::com::sun::star::io::XOutputStream;
+using ::com::sun::star::text::XSimpleText;
+using ::com::sun::star::text::XText;
+using ::com::sun::star::text::XTextContent;
+using ::com::sun::star::text::XTextField;
+using ::com::sun::star::text::XTextRange;
+using ::rtl::OString;
+using ::rtl::OStringBuffer;
+using ::rtl::OUString;
+using ::rtl::OUStringBuffer;
+using ::sax_fastparser::FSHelperPtr;
+
+DBG(extern void dump_pset(Reference< XPropertySet > rXPropSet));
+
+#define IDS(x) (OString(#x " ") + OString::valueOf( mnShapeIdMax++ )).getStr()
+
+struct CustomShapeTypeTranslationTable
+{
+    const char* sOOo;
+    const char* sMSO;
+};
+
+static const CustomShapeTypeTranslationTable pCustomShapeTypeTranslationTable[] = 
+{
+    // { "non-primitive", mso_sptMin },
+    { "rectangle", "rect" },
+    { "round-rectangle", "roundRect" },
+    { "ellipse", "ellipse" },
+    { "diamond", "diamond" },
+    { "isosceles-triangle", "triangle" },
+    { "right-triangle", "rtTriangle" },
+    { "parallelogram", "parallelogram" },
+    { "trapezoid", "trapezoid" },
+    { "hexagon", "hexagon" },
+    { "octagon", "octagon" },
+    { "cross", "plus" },
+    { "star5", "star5" },
+    { "right-arrow", "rightArrow" },
+    // { "mso-spt14", mso_sptThickArrow },
+    { "pentagon-right", "homePlate" },
+    { "cube", "cube" },
+    // { "mso-spt17", mso_sptBalloon },
+    // { "mso-spt18", mso_sptSeal },
+    { "mso-spt19", "arc" },
+    { "mso-spt20", "line" },
+    { "mso-spt21", "plaque" },
+    { "can", "can" },
+    { "ring", "donut" },
+    { "mso-spt24", "textSimple" },
+    { "mso-spt25", "textOctagon" },
+    { "mso-spt26", "textHexagon" },
+    { "mso-spt27", "textCurve" },
+    { "mso-spt28", "textWave" },
+    { "mso-spt29", "textRing" },
+    { "mso-spt30", "textOnCurve" },
+    { "mso-spt31", "textOnRing" },
+    { "mso-spt32", "straightConnector1" },
+    { "mso-spt33", "bentConnector2" },
+    { "mso-spt34", "bentConnector3" },
+    { "mso-spt35", "bentConnector4" },
+    { "mso-spt36", "bentConnector5" },
+    { "mso-spt37", "curvedConnector2" },
+    { "mso-spt38", "curvedConnector3" },
+    { "mso-spt39", "curvedConnector4" },
+    { "mso-spt40", "curvedConnector5" },
+    { "mso-spt41", "callout1" },
+    { "mso-spt42", "callout2" },
+    { "mso-spt43", "callout3" },
+    { "mso-spt44", "accentCallout1" },
+    { "mso-spt45", "accentCallout2" },
+    { "mso-spt46", "accentCallout3" },
+    { "line-callout-1", "borderCallout1" },
+    { "line-callout-2", "borderCallout2" },
+    { "line-callout-3", "borderCallout3" },
+    { "mso-spt49", "accentBorderCallout90" },
+    { "mso-spt50", "accentBorderCallout1" },
+    { "mso-spt51", "accentBorderCallout2" },
+    { "mso-spt52", "accentBorderCallout3" },
+    { "mso-spt53", "ribbon" },
+    { "mso-spt54", "ribbon2" },
+    { "chevron", "chevron" },
+    { "pentagon", "pentagon" },
+    { "forbidden", "noSmoking" },
+    { "star8", "seal8" },
+    { "mso-spt59", "seal16" },
+    { "mso-spt60", "seal32" },
+    { "rectangular-callout", "wedgeRectCallout" },
+    { "round-rectangular-callout", "wedgeRoundRectCallout" },
+    { "round-callout", "wedgeEllipseCallout" },
+    { "mso-spt64", "wave" },
+    { "paper", "foldedCorner" },
+    { "left-arrow", "leftArrow" },
+    { "down-arrow", "downArrow" },
+    { "up-arrow", "upArrow" },
+    { "left-right-arrow", "leftRightArrow" },
+    { "up-down-arrow", "upDownArrow" },
+    { "mso-spt71", "irregularSeal1" },
+    { "bang", "irregularSeal2" },
+    { "lightning", "lightningBolt" },
+    { "heart", "heart" },
+    { "mso-spt75", "pictureFrame" },
+    { "quad-arrow", "quadArrow" },
+    { "left-arrow-callout", "leftArrowCallout" },
+    { "right-arrow-callout", "rightArrowCallout" },
+    { "up-arrow-callout", "upArrowCallout" },
+    { "down-arrow-callout", "downArrowCallout" },
+    { "left-right-arrow-callout", "leftRightArrowCallout" },
+    { "up-down-arrow-callout", "upDownArrowCallout" },
+    { "quad-arrow-callout", "quadArrowCallout" },
+    { "quad-bevel", "bevel" },
+    { "left-bracket", "leftBracket" },
+    { "right-bracket", "rightBracket" },
+    { "left-brace", "leftBrace" },
+    { "right-brace", "rightBrace" },
+    { "mso-spt89", "leftUpArrow" },
+    { "mso-spt90", "bentUpArrow" },
+    { "mso-spt91", "bentArrow" },
+    { "star24", "seal24" },
+    { "striped-right-arrow", "stripedRightArrow" },
+    { "notched-right-arrow", "notchedRightArrow" },
+    { "block-arc", "blockArc" },
+    { "smiley", "smileyFace" },
+    { "vertical-scroll", "verticalScroll" },
+    { "horizontal-scroll", "horizontalScroll" },
+    { "circular-arrow", "circularArrow" },
+    { "mso-spt100", "pie" }, // looks like MSO_SPT is wrong here
+    { "mso-spt101", "uturnArrow" },
+    { "mso-spt102", "curvedRightArrow" },
+    { "mso-spt103", "curvedLeftArrow" },
+    { "mso-spt104", "curvedUpArrow" },
+    { "mso-spt105", "curvedDownArrow" },
+    { "cloud-callout", "cloudCallout" },
+    { "mso-spt107", "ellipseRibbon" },
+    { "mso-spt108", "ellipseRibbon2" },
+    { "flowchart-process", "flowChartProcess" },
+    { "flowchart-decision", "flowChartDecision" },
+    { "flowchart-data", "flowChartInputOutput" },
+    { "flowchart-predefined-process", "flowChartPredefinedProcess" },
+    { "flowchart-internal-storage", "flowChartInternalStorage" },
+    { "flowchart-document", "flowChartDocument" },
+    { "flowchart-multidocument", "flowChartMultidocument" },
+    { "flowchart-terminator", "flowChartTerminator" },
+    { "flowchart-preparation", "flowChartPreparation" },
+    { "flowchart-manual-input", "flowChartManualInput" },
+    { "flowchart-manual-operation", "flowChartManualOperation" },
+    { "flowchart-connector", "flowChartConnector" },
+    { "flowchart-card", "flowChartPunchedCard" },
+    { "flowchart-punched-tape", "flowChartPunchedTape" },
+    { "flowchart-summing-junction", "flowChartSummingJunction" },
+    { "flowchart-or", "flowChartOr" },
+    { "flowchart-collate", "flowChartCollate" },
+    { "flowchart-sort", "flowChartSort" },
+    { "flowchart-extract", "flowChartExtract" },
+    { "flowchart-merge", "flowChartMerge" },
+    { "mso-spt129", "flowChartOfflineStorage" },
+    { "flowchart-stored-data", "flowChartOnlineStorage" },
+    { "flowchart-sequential-access", "flowChartMagneticTape" },
+    { "flowchart-magnetic-disk", "flowChartMagneticDisk" },
+    { "flowchart-direct-access-storage", "flowChartMagneticDrum" },
+    { "flowchart-display", "flowChartDisplay" },
+    { "flowchart-delay", "flowChartDelay" },
+    { "fontwork-plain-text", "textPlainText" },
+    { "fontwork-stop", "textStop" },
+    { "fontwork-triangle-up", "textTriangle" },
+    { "fontwork-triangle-down", "textTriangleInverted" },
+    { "fontwork-chevron-up", "textChevron" },
+    { "fontwork-chevron-down", "textChevronInverted" },
+    { "mso-spt142", "textRingInside" },
+    { "mso-spt143", "textRingOutside" },
+    { "fontwork-arch-up-curve", "textArchUpCurve" },
+    { "fontwork-arch-down-curve", "textArchDownCurve" },
+    { "fontwork-circle-curve", "textCircleCurve" },
+    { "fontwork-open-circle-curve", "textButtonCurve" },
+    { "fontwork-arch-up-pour", "textArchUpPour" },
+    { "fontwork-arch-down-pour", "textArchDownPour" },
+    { "fontwork-circle-pour", "textCirclePour" },
+    { "fontwork-open-circle-pour", "textButtonPour" },
+    { "fontwork-curve-up", "textCurveUp" },
+    { "fontwork-curve-down", "textCurveDown" },
+    { "fontwork-fade-up-and-right", "textCascadeUp" },
+    { "fontwork-fade-up-and-left", "textCascadeDown" },
+    { "fontwork-wave", "textWave1" },
+    { "mso-spt157", "textWave2" },
+    { "mso-spt158", "textWave3" },
+    { "mso-spt159", "textWave4" },
+    { "fontwork-inflate", "textInflate" },
+    { "mso-spt161", "textDeflate" },
+    { "mso-spt162", "textInflateBottom" },
+    { "mso-spt163", "textDeflateBottom" },
+    { "mso-spt164", "textInflateTop" },
+    { "mso-spt165", "textDeflateTop" },
+    { "mso-spt166", "textDeflateInflate" },
+    { "mso-spt167", "textDeflateInflateDeflate" },
+    { "fontwork-fade-right", "textFadeRight" },
+    { "fontwork-fade-left", "textFadeLeft" },
+    { "fontwork-fade-up", "textFadeUp" },
+    { "fontwork-fade-down", "textFadeDown" },
+    { "fontwork-slant-up", "textSlantUp" },
+    { "fontwork-slant-down", "textSlantDown" },
+    { "mso-spt174", "textCanUp" },
+    { "mso-spt175", "textCanDown" },
+    { "flowchart-alternate-process", "flowChartAlternateProcess" },
+    { "flowchart-off-page-connector", "flowChartOffpageConnector" },
+    { "mso-spt178", "callout90" },
+    { "mso-spt179", "accentCallout90" },
+    { "mso-spt180", "borderCallout90" },
+    { "mso-spt182", "leftRightUpArrow" },
+    { "sun", "sun" },
+    { "moon", "moon" },
+    { "bracket-pair", "bracketPair" },
+    { "brace-pair", "bracePair" },
+    { "star4", "seal4" },
+    { "mso-spt188", "doubleWave" },
+    { "mso-spt189", "actionButtonBlank" },
+    { "mso-spt190", "actionButtonHome" },
+    { "mso-spt191", "actionButtonHelp" },
+    { "mso-spt192", "actionButtonInformation" },
+    { "mso-spt193", "actionButtonForwardNext" },
+    { "mso-spt194", "actionButtonBackPrevious" },
+    { "mso-spt195", "actionButtonEnd" },
+    { "mso-spt196", "actionButtonBeginning" },
+    { "mso-spt197", "actionButtonReturn" },
+    { "mso-spt198", "actionButtonDocument" },
+    { "mso-spt199", "actionButtonSound" },
+    { "mso-spt200", "actionButtonMovie" },
+    { "mso-spt201", "hostControl" },
+    { "mso-spt202", "rect" }
+};
+
+struct StringCheck
+{
+    bool operator()( const char* s1, const char* s2 ) const
+    {
+        return strcmp( s1, s2 ) == 0;
+    }
+};
+
+typedef std::hash_map< const char*, const char*, std::hash<const char*>, StringCheck> CustomShapeTypeTranslationHashMap;
+static CustomShapeTypeTranslationHashMap* pCustomShapeTypeTranslationHashMap = NULL;
+
+static const char* lcl_GetPresetGeometry( const char* sShapeType )
+{
+    const char* sPresetGeo;
+
+    if( pCustomShapeTypeTranslationHashMap == NULL )
+    {
+        pCustomShapeTypeTranslationHashMap = new CustomShapeTypeTranslationHashMap ();
+        for( unsigned int i = 0; i < sizeof( pCustomShapeTypeTranslationTable )/sizeof( CustomShapeTypeTranslationTable ); i ++ )
+        {
+            (*pCustomShapeTypeTranslationHashMap)[ pCustomShapeTypeTranslationTable[ i ].sOOo ] = pCustomShapeTypeTranslationTable[ i ].sMSO;
+            //DBG(printf("type OOo: %s MSO: %s\n", pCustomShapeTypeTranslationTable[ i ].sOOo, pCustomShapeTypeTranslationTable[ i ].sMSO));
+        }
+    }
+
+    sPresetGeo = (*pCustomShapeTypeTranslationHashMap)[ sShapeType ];
+
+    if( sPresetGeo == NULL )
+        sPresetGeo = "rect";
+
+    return sPresetGeo;
+}
+
+namespace oox { namespace drawingml {
+
+#define GETA(propName) \
+    GetProperty( rXPropSet, String( RTL_CONSTASCII_USTRINGPARAM( #propName ) ) )
+
+#define GETAD(propName) \
+    ( GetPropertyAndState( rXPropSet, rXPropState, String( RTL_CONSTASCII_USTRINGPARAM( #propName ) ), eState ) && eState == beans::PropertyState_DIRECT_VALUE )
+
+#define GET(variable, propName) \
+    if ( GETA(propName) ) \
+        mAny >>= variable;
+
+ShapeExport::ShapeExport( sal_Int32 nXmlNamespace, FSHelperPtr pFS, ::oox::core::XmlFilterBase* pFB, DocumentType eDocumentType )
+    : DrawingML( pFS, pFB, eDocumentType )
+    , mnXmlNamespace( nXmlNamespace )
+    , mnShapeIdMax( 1 )
+    , mnPictureIdMax( 1 )
+    , maFraction( 1, 576 )
+    , maMapModeSrc( MAP_100TH_MM )
+    , maMapModeDest( MAP_INCH, Point(), maFraction, maFraction )
+{
+}
+
+sal_Int32 ShapeExport::GetXmlNamespace() const
+{
+    return mnXmlNamespace;
+}
+
+ShapeExport& ShapeExport::SetXmlNamespace( sal_Int32 nXmlNamespace )
+{
+    mnXmlNamespace = nXmlNamespace;
+    return *this;
+}
+
+awt::Size ShapeExport::MapSize( const awt::Size& rSize ) const
+{
+    Size aRetSize( OutputDevice::LogicToLogic( Size( rSize.Width, rSize.Height ), maMapModeSrc, maMapModeDest ) );
+
+    if ( !aRetSize.Width() )
+        aRetSize.Width()++;
+    if ( !aRetSize.Height() )
+        aRetSize.Height()++;
+    return awt::Size( aRetSize.Width(), aRetSize.Height() );
+}
+
+sal_Bool ShapeExport::NonEmptyText( Reference< XShape > xShape )
+{
+    Reference< XSimpleText > xText( xShape, UNO_QUERY );
+
+    return ( xText.is() && xText->getString().getLength() );
+}
+
+ShapeExport& ShapeExport::WriteBezierShape( Reference< XShape > xShape, sal_Bool bClosed )
+{
+    DBG(printf("write open bezier shape\n"));
+
+    FSHelperPtr pFS = GetFS();
+    pFS->startElementNS( mnXmlNamespace, XML_sp, FSEND );
+
+    PolyPolygon aPolyPolygon = EscherPropertyContainer::GetPolyPolygon( xShape );
+    Rectangle aRect( aPolyPolygon.GetBoundRect() );
+    awt::Size size = MapSize( awt::Size( aRect.GetWidth(), aRect.GetHeight() ) );
+
+    DBG(printf("poly count %d\nsize: %d x %d", aPolyPolygon.Count(), int( size.Width ), int( size.Height )));
+
+    // non visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_nvSpPr, FSEND );
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvPr,
+                          XML_id, I32S( GetNewShapeID( xShape ) ),
+                          XML_name, IDS( Freeform ),
+                          FSEND );
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvSpPr, FSEND );
+    WriteNonVisualProperties( xShape );
+    pFS->endElementNS( mnXmlNamespace, XML_nvSpPr );
+
+    // visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_spPr, FSEND );
+    WriteTransformation( aRect );
+    WritePolyPolygon( aPolyPolygon );
+    Reference< XPropertySet > xProps( xShape, UNO_QUERY );
+    if( xProps.is() ) {
+        if( bClosed )
+            WriteFill( xProps );
+        WriteOutline( xProps );
+    }
+
+    pFS->endElementNS( mnXmlNamespace, XML_spPr );
+
+    // write text
+    WriteTextBox( xShape );
+
+    pFS->endElementNS( mnXmlNamespace, XML_sp );
+
+    return *this;
+}
+
+ShapeExport& ShapeExport::WriteClosedBezierShape( Reference< XShape > xShape )
+{
+    return WriteBezierShape( xShape, TRUE );
+}
+
+ShapeExport& ShapeExport::WriteOpenBezierShape( Reference< XShape > xShape )
+{
+    return WriteBezierShape( xShape, FALSE );
+}
+
+ShapeExport& ShapeExport::WriteCustomShape( Reference< XShape > xShape )
+{
+    DBG(printf("write custom shape\n"));
+
+    Reference< XPropertySet > rXPropSet( xShape, UNO_QUERY );
+    SdrObjCustomShape* pShape = (SdrObjCustomShape*) GetSdrObjectFromXShape( xShape );
+    sal_Bool bIsDefaultObject = EscherPropertyContainer::IsDefaultObject( pShape );
+    sal_Bool bPredefinedHandlesUsed = TRUE;
+    OUString sShapeType;
+    sal_uInt32 nMirrorFlags = 0;
+    MSO_SPT eShapeType = EscherPropertyContainer::GetCustomShapeType( xShape, nMirrorFlags, sShapeType );
+    const char* sPresetShape = lcl_GetPresetGeometry( USS( sShapeType ) );
+    DBG(printf("custom shape type: %s ==> %s\n", USS( sShapeType ), sPresetShape));
+    Sequence< PropertyValue > aGeometrySeq;
+    sal_Int32 nAdjustmentValuesIndex = -1;
+    sal_Int32 nAdjustmentsWhichNeedsToBeConverted = 0;
+
+    if( GETA( CustomShapeGeometry ) ) {
+        DBG(printf("got custom shape geometry\n"));
+        if( mAny >>= aGeometrySeq ) {
+
+            DBG(printf("got custom shape geometry sequence\n"));
+            for( int i = 0; i < aGeometrySeq.getLength(); i++ ) {
+                const PropertyValue& rProp = aGeometrySeq[ i ];
+                DBG(printf("geometry property: %s\n", USS( rProp.Name )));
+
+                if( rProp.Name.equalsAscii( "AdjustmentValues" ))
+                    nAdjustmentValuesIndex = i;
+                else if( rProp.Name.equalsAscii( "Handles" )) {
+                    if( !bIsDefaultObject )
+                        bPredefinedHandlesUsed = FALSE;
+                    // TODO: update nAdjustmentsWhichNeedsToBeConverted here
+                }
+            }
+        }
+    }
+
+    FSHelperPtr pFS = GetFS();
+    pFS->startElementNS( mnXmlNamespace, XML_sp, FSEND );
+
+    // non visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_nvSpPr, FSEND );
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvPr,
+                          XML_id, I32S( GetNewShapeID( xShape ) ),
+                          XML_name, IDS( CustomShape ),
+                          FSEND );
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvSpPr, FSEND );
+    WriteNonVisualProperties( xShape );
+    pFS->endElementNS( mnXmlNamespace, XML_nvSpPr );
+
+    // visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_spPr, FSEND );
+    WriteShapeTransformation( xShape );
+    if( nAdjustmentValuesIndex != -1 )
+        WritePresetShape( sPresetShape, eShapeType, bPredefinedHandlesUsed, nAdjustmentsWhichNeedsToBeConverted, aGeometrySeq[ nAdjustmentValuesIndex ] );
+    else
+        WritePresetShape( sPresetShape );
+    if( rXPropSet.is() )
+    {
+        WriteFill( rXPropSet );
+        WriteOutline( rXPropSet );
+    }
+
+    pFS->endElementNS( mnXmlNamespace, XML_spPr );
+
+    // write text
+    WriteTextBox( xShape );
+
+    pFS->endElementNS( mnXmlNamespace, XML_sp );
+
+    return *this;
+}
+
+ShapeExport& ShapeExport::WriteEllipseShape( Reference< XShape > xShape )
+{
+    DBG(printf("write ellipse shape\n"));
+
+    FSHelperPtr pFS = GetFS();
+
+    pFS->startElementNS( mnXmlNamespace, XML_sp, FSEND );
+
+    // TODO: arc, section, cut, connector
+
+    // non visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_nvSpPr, FSEND );
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvPr,
+                          XML_id, I32S( GetNewShapeID( xShape ) ),
+                          XML_name, IDS( Ellipse ),
+                          FSEND );
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvSpPr, FSEND );
+    WriteNonVisualProperties( xShape );
+    pFS->endElementNS( mnXmlNamespace, XML_nvSpPr );
+
+    // visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_spPr, FSEND );
+    WriteShapeTransformation( xShape );
+    WritePresetShape( "ellipse" );
+    Reference< XPropertySet > xProps( xShape, UNO_QUERY );
+    if( xProps.is() )
+    {
+        WriteFill( xProps );
+        WriteOutline( xProps );
+    }
+    pFS->endElementNS( mnXmlNamespace, XML_spPr );
+
+    // write text
+    WriteTextBox( xShape );
+
+    pFS->endElementNS( mnXmlNamespace, XML_sp );
+
+    return *this;
+}
+
+ShapeExport& ShapeExport::WriteFill( Reference< XPropertySet > xPropSet )
+{
+    FillStyle aFillStyle( FillStyle_NONE );
+    xPropSet->getPropertyValue( S( "FillStyle" ) ) >>= aFillStyle;
+
+    if( aFillStyle == FillStyle_BITMAP )
+    {
+        //DBG(printf ("FillStyle_BITMAP properties\n"));
+        //DBG(dump_pset(rXPropSet));
+    }
+
+    if( aFillStyle == FillStyle_NONE ||
+        aFillStyle == FillStyle_HATCH ) 
+        return *this;
+    
+    switch( aFillStyle )
+    {
+    case ::com::sun::star::drawing::FillStyle_SOLID :
+        WriteSolidFill( xPropSet );
+        break;
+    case ::com::sun::star::drawing::FillStyle_GRADIENT :
+        WriteGradientFill( xPropSet );
+        break;
+    case ::com::sun::star::drawing::FillStyle_BITMAP :
+        WriteBlipFill( xPropSet, S( "FillBitmapURL" ) );
+        break;
+    default:
+        ;
+    }
+
+    return *this;
+}
+
+ShapeExport& ShapeExport::WriteGraphicObjectShape( Reference< XShape > xShape )
+{
+    DBG(printf("write graphic object shape\n"));
+
+    if( NonEmptyText( xShape ) )
+    {
+        WriteTextShape( xShape );
+
+        //DBG(dump_pset(mXPropSet));
+
+        return *this;
+    }
+
+    DBG(printf("graphicObject without text\n"));
+
+    OUString sGraphicURL;
+    Reference< XPropertySet > xShapeProps( xShape, UNO_QUERY );
+    if( !xShapeProps.is() || !( xShapeProps->getPropertyValue( S( "GraphicURL" ) ) >>= sGraphicURL ) )
+    {
+        DBG(printf("no graphic URL found\n"));
+        return *this;
+    }
+
+    FSHelperPtr pFS = GetFS();
+
+    pFS->startElementNS( mnXmlNamespace, XML_pic, FSEND );
+               
+    pFS->startElementNS( mnXmlNamespace, XML_nvPicPr, FSEND );
+
+    OUString sName, sDescr;
+    bool bHaveName = xShapeProps->getPropertyValue( S( "Name" ) ) >>= sName;
+    bool bHaveDesc = xShapeProps->getPropertyValue( S( "Description" ) ) >>= sDescr;
+
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvPr,
+                          XML_id,     I32S( GetNewShapeID( xShape ) ),
+                          XML_name,   bHaveName ? USS( sName ) : (OString("Picture ") + OString::valueOf( mnPictureIdMax++ )).getStr(),
+                          XML_descr,  bHaveDesc ? USS( sDescr ) : NULL,
+                          FSEND );
+    // OOXTODO: //cNvPr children: XML_extLst, XML_hlinkClick, XML_hlinkHover
+
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvPicPr,
+                          // OOXTODO: XML_preferRelativeSize
+                          FSEND );
+
+    WriteNonVisualProperties( xShape );
+
+    pFS->endElementNS( mnXmlNamespace, XML_nvPicPr );
+
+    pFS->startElementNS( mnXmlNamespace, XML_blipFill, FSEND );
+    
+    WriteBlip( sGraphicURL );
+
+    bool bStretch = false;
+    if( ( xShapeProps->getPropertyValue( S( "FillBitmapStretch" ) ) >>= bStretch ) && bStretch )
+    {
+        WriteStretch();
+    }
+
+    pFS->endElementNS( mnXmlNamespace, XML_blipFill );
+
+    // visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_spPr, FSEND );
+    WriteShapeTransformation( xShape );
+    WritePresetShape( "rect" );
+    pFS->endElementNS( mnXmlNamespace, XML_spPr );
+
+    pFS->endElementNS( mnXmlNamespace, XML_pic );
+
+    return *this;
+}
+
+ShapeExport& ShapeExport::WriteConnectorShape( Reference< XShape > xShape )
+{
+    sal_Bool bFlipH = false;
+    sal_Bool bFlipV = false;
+
+    DBG(printf("write connector shape\n"));
+
+    FSHelperPtr pFS = GetFS();
+
+    const char* sGeometry = "line";
+    Reference< XPropertySet > rXPropSet( xShape, UNO_QUERY );
+    Reference< XPropertyState > rXPropState( xShape, UNO_QUERY );
+    awt::Point aStartPoint, aEndPoint;
+    Reference< XShape > rXShapeA;
+    Reference< XShape > rXShapeB;
+    PropertyState eState;
+    ConnectorType eConnectorType;
+    if( GETAD( EdgeKind ) ) {
+        mAny >>= eConnectorType;
+
+        switch( eConnectorType ) {
+            case ConnectorType_CURVE:
+                sGeometry = "curvedConnector3";
+                break;
+            case ConnectorType_STANDARD:
+                sGeometry = "bentConnector3";
+                break;
+            default:
+            case ConnectorType_LINE:
+            case ConnectorType_LINES:
+                sGeometry = "straightConnector1";
+                break;
+        }
+
+        if( GETAD( EdgeStartPoint ) ) {
+            mAny >>= aStartPoint;
+            if( GETAD( EdgeEndPoint ) ) {
+                mAny >>= aEndPoint;
+            }
+        }
+        GET( rXShapeA, EdgeStartConnection );
+        GET( rXShapeB, EdgeEndConnection );
+    }
+    EscherConnectorListEntry aConnectorEntry( xShape, aStartPoint, rXShapeA, aEndPoint, rXShapeB );
+
+    Rectangle aRect( Point( aStartPoint.X, aStartPoint.Y ), Point( aEndPoint.X, aEndPoint.Y ) );
+    if( aRect.getWidth() < 0 ) {
+        bFlipH = TRUE;
+        aRect.setX( aEndPoint.X );
+        aRect.setWidth( aStartPoint.X - aEndPoint.X );
+    }
+
+    if( aRect.getHeight() < 0 ) {
+        bFlipV = TRUE;
+        aRect.setY( aEndPoint.Y );
+        aRect.setHeight( aStartPoint.Y - aEndPoint.Y );
+    }
+
+    pFS->startElementNS( mnXmlNamespace, XML_cxnSp, FSEND );
+
+    // non visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_nvCxnSpPr, FSEND );
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvPr,
+                          XML_id, I32S( GetNewShapeID( xShape ) ),
+                          XML_name, IDS( Line ),
+                          FSEND );
+    // non visual connector shape drawing properties
+    pFS->startElementNS( mnXmlNamespace, XML_cNvCxnSpPr, FSEND );
+    WriteConnectorConnections( aConnectorEntry, GetShapeID( rXShapeA ), GetShapeID( rXShapeB ) );
+    pFS->endElementNS( mnXmlNamespace, XML_cNvCxnSpPr );
+    pFS->singleElementNS( mnXmlNamespace, XML_nvPr, FSEND );
+    pFS->endElementNS( mnXmlNamespace, XML_nvCxnSpPr );
+
+    // visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_spPr, FSEND );
+    WriteTransformation( aRect, bFlipH, bFlipV );
+    // TODO: write adjustments (ppt export doesn't work well there either)
+    WritePresetShape( sGeometry );
+    Reference< XPropertySet > xShapeProps( xShape, UNO_QUERY );
+    if( xShapeProps.is() )
+        WriteOutline( xShapeProps );
+    pFS->endElementNS( mnXmlNamespace, XML_spPr );
+
+    // write text
+    WriteTextBox( xShape );
+
+    pFS->endElementNS( mnXmlNamespace, XML_cxnSp );
+
+    return *this;
+}
+
+ShapeExport& ShapeExport::WriteLineShape( Reference< XShape > xShape )
+{
+    sal_Bool bFlipH = false;
+    sal_Bool bFlipV = false;
+
+    DBG(printf("write line shape\n"));
+
+    FSHelperPtr pFS = GetFS();
+
+    pFS->startElementNS( mnXmlNamespace, XML_sp, FSEND );
+
+    PolyPolygon aPolyPolygon = EscherPropertyContainer::GetPolyPolygon( xShape );
+    if( aPolyPolygon.Count() == 1 && aPolyPolygon[ 0 ].GetSize() == 2)
+    {
+        const Polygon& rPoly = aPolyPolygon[ 0 ];
+
+        bFlipH = ( rPoly[ 0 ].X() > rPoly[ 1 ].X() );
+        bFlipV = ( rPoly[ 0 ].Y() > rPoly[ 1 ].Y() );
+    }
+
+    // non visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_nvSpPr, FSEND );
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvPr,
+                          XML_id, I32S( GetNewShapeID( xShape ) ),
+                          XML_name, IDS( Line ),
+                          FSEND );
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvSpPr, FSEND );
+    WriteNonVisualProperties( xShape );
+    pFS->endElementNS( mnXmlNamespace, XML_nvSpPr );
+
+    // visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_spPr, FSEND );
+    WriteShapeTransformation( xShape, bFlipH, bFlipV );
+    WritePresetShape( "line" );
+    Reference< XPropertySet > xShapeProps( xShape, UNO_QUERY );
+    if( xShapeProps.is() )
+        WriteOutline( xShapeProps );
+    pFS->endElementNS( mnXmlNamespace, XML_spPr );
+
+    // write text
+    WriteTextBox( xShape );
+
+    pFS->endElementNS( mnXmlNamespace, XML_sp );
+
+    return *this;
+}
+
+ShapeExport& ShapeExport::WriteNonVisualDrawingProperties( Reference< XShape > xShape, const char* pName )
+{
+    GetFS()->singleElementNS( mnXmlNamespace, XML_cNvPr,
+                              XML_id, I32S( GetNewShapeID( xShape ) ),
+                              XML_name, pName,
+                              FSEND );
+
+    return *this;
+}
+
+ShapeExport& ShapeExport::WriteNonVisualProperties( Reference< XShape > )
+{
+    // Override to generate //nvPr elements.
+    return *this;
+}
+
+ShapeExport& ShapeExport::WriteRectangleShape( Reference< XShape > xShape )
+{
+    DBG(printf("write rectangle shape\n"));
+
+    FSHelperPtr pFS = GetFS();
+
+    pFS->startElementNS( mnXmlNamespace, XML_sp, FSEND );
+
+    sal_Int32 nRadius = 0;
+
+    Reference< XPropertySet > xShapeProps( xShape, UNO_QUERY );
+    if( xShapeProps.is() )
+    {
+        xShapeProps->getPropertyValue( S( "CornerRadius" ) ) >>= nRadius;
+    }
+
+    if( nRadius )
+    {
+        nRadius = MapSize( awt::Size( nRadius, 0 ) ).Width;
+    }
+
+    // non visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_nvSpPr, FSEND );
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvPr,
+                          XML_id, I32S( GetNewShapeID( xShape ) ),
+                          XML_name, IDS( Rectangle ),
+                          FSEND );
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvSpPr, FSEND );
+    WriteNonVisualProperties( xShape );
+    pFS->endElementNS( mnXmlNamespace, XML_nvSpPr );
+
+    // visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_spPr, FSEND );
+    WriteShapeTransformation( xShape );
+    WritePresetShape( "rect" );
+    Reference< XPropertySet > xProps( xShape, UNO_QUERY );
+    if( xProps.is() )
+    {
+        WriteFill( xProps );
+        WriteOutline( xProps );
+    }
+    pFS->endElementNS( mnXmlNamespace, XML_spPr );
+
+    // write text
+    WriteTextBox( xShape );
+
+    pFS->endElementNS( mnXmlNamespace, XML_sp );
+
+    return *this;
+}
+
+typedef ShapeExport& (ShapeExport::*ShapeConverter)( Reference< XShape > );
+typedef std::hash_map< const char*, ShapeConverter, std::hash<const char*>, StringCheck> NameToConvertMapType;
+
+static const NameToConvertMapType& lcl_GetConverters()
+{
+    static bool shape_map_inited = false;
+    static NameToConvertMapType shape_converters;
+    if( shape_map_inited )
+    {
+        return shape_converters;
+    }
+
+    shape_converters[ "com.sun.star.drawing.ClosedBezierShape" ]        = &ShapeExport::WriteClosedBezierShape;
+    shape_converters[ "com.sun.star.drawing.ConnectorShape" ]           = &ShapeExport::WriteConnectorShape;
+    shape_converters[ "com.sun.star.drawing.CustomShape" ]              = &ShapeExport::WriteCustomShape;
+    shape_converters[ "com.sun.star.drawing.EllipseShape" ]             = &ShapeExport::WriteEllipseShape;
+    shape_converters[ "com.sun.star.drawing.GraphicObjectShape" ]       = &ShapeExport::WriteGraphicObjectShape;
+    shape_converters[ "com.sun.star.drawing.LineShape" ]                = &ShapeExport::WriteLineShape;
+    shape_converters[ "com.sun.star.drawing.OpenBezierShape" ]          = &ShapeExport::WriteOpenBezierShape;
+    shape_converters[ "com.sun.star.drawing.RectangleShape" ]           = &ShapeExport::WriteRectangleShape;
+    shape_converters[ "com.sun.star.drawing.TextShape" ]                = &ShapeExport::WriteTextShape;
+    shape_converters[ "com.sun.star.presentation.DateTimeShape" ]       = &ShapeExport::WriteTextShape;
+    shape_converters[ "com.sun.star.presentation.FooterShape" ]         = &ShapeExport::WriteTextShape;
+    shape_converters[ "com.sun.star.presentation.HeaderShape" ]         = &ShapeExport::WriteTextShape;
+    shape_converters[ "com.sun.star.presentation.NotesShape" ]          = &ShapeExport::WriteTextShape;
+    shape_converters[ "com.sun.star.presentation.OutlinerShape" ]       = &ShapeExport::WriteTextShape;
+    shape_converters[ "com.sun.star.presentation.SlideNumberShape" ]    = &ShapeExport::WriteTextShape;
+    shape_converters[ "com.sun.star.presentation.TitleTextShape" ]      = &ShapeExport::WriteTextShape;
+    shape_map_inited = true;
+
+    return shape_converters;
+}
+
+ShapeExport& ShapeExport::WriteShape( Reference< XShape > xShape )
+{
+    OUString sShapeType = xShape->getShapeType();
+    DBG( printf( "write shape: %s\n", USS( sShapeType ) ) );
+    NameToConvertMapType::const_iterator aConverter = lcl_GetConverters().find( USS( sShapeType ) );
+    if( aConverter == lcl_GetConverters().end() )
+    {
+        DBG( printf( "unknown shape\n" ) );
+        return WriteUnknownShape( xShape );
+    }
+    (this->*(aConverter->second))( xShape );
+
+    return *this;
+}
+
+ShapeExport& ShapeExport::WriteTextBox( Reference< XShape > xShape )
+{
+    if( NonEmptyText( xShape ) )
+    {
+        FSHelperPtr pFS = GetFS();
+
+        pFS->startElementNS( mnXmlNamespace, XML_txBody, FSEND );
+        WriteText( xShape );
+        pFS->endElementNS( mnXmlNamespace, XML_txBody );
+    }
+
+    return *this;
+}
+
+ShapeExport& ShapeExport::WriteTextShape( Reference< XShape > xShape )
+{
+    FSHelperPtr pFS = GetFS();
+
+    pFS->startElementNS( mnXmlNamespace, XML_sp, FSEND );
+
+    // non visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_nvSpPr, FSEND );
+    WriteNonVisualDrawingProperties( xShape, IDS( TextShape ) );
+    pFS->singleElementNS( mnXmlNamespace, XML_cNvSpPr, XML_txBox, "1", FSEND );
+    WriteNonVisualProperties( xShape );
+    pFS->endElementNS( mnXmlNamespace, XML_nvSpPr );
+
+    // visual shape properties
+    pFS->startElementNS( mnXmlNamespace, XML_spPr, FSEND );
+    WriteShapeTransformation( xShape );
+    WritePresetShape( "rect" );
+    WriteBlipFill( Reference< XPropertySet >(xShape, UNO_QUERY ), S( "GraphicURL" ) );
+    pFS->endElementNS( mnXmlNamespace, XML_spPr );
+
+    WriteTextBox( xShape );
+
+    pFS->endElementNS( mnXmlNamespace, XML_sp );
+
+    return *this;
+}
+
+ShapeExport& ShapeExport::WriteUnknownShape( Reference< XShape > )
+{
+    // Override this method to do something useful.
+    return *this;
+}
+
+size_t ShapeExport::ShapeHash::operator()( const ::com::sun::star::uno::Reference < ::com::sun::star::drawing::XShape > rXShape ) const
+{
+    return maHashFunction( USS( rXShape->getShapeType() ) );
+}
+
+sal_Int32 ShapeExport::GetNewShapeID( const Reference< XShape > rXShape )
+{
+    sal_Int32 nID = GetFB()->GetUniqueId();
+
+    maShapeMap[ rXShape ] = nID;
+
+    return nID;
+}
+
+sal_Int32 ShapeExport::GetShapeID( const Reference< XShape > rXShape )
+{
+    ShapeHashMap::const_iterator aIter = maShapeMap.find( rXShape );
+
+    if( aIter == maShapeMap.end() )
+        return -1;
+
+    return aIter->second;
+}
+
+} }
diff --git oox/source/export/vmlexport.cxx oox/source/export/vmlexport.cxx
new file mode 100644
index 0000000..d22e601
--- /dev/null
+++ oox/source/export/vmlexport.cxx
@@ -0,0 +1,840 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile$
+ * $Revision$
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#include <oox/export/vmlexport.hxx>
+
+#include <tokens.hxx>
+
+#include <rtl/strbuf.hxx>
+#include <rtl/ustring.hxx>
+
+#include <tools/stream.hxx>
+
+#include <cstdio>
+
+using rtl::OString;
+using rtl::OStringBuffer;
+using rtl::OUString;
+using rtl::OUStringBuffer;
+
+using namespace sax_fastparser;
+using namespace oox::vml;
+
+/// Implementation of an empty stream that silently succeeds, but does nothing.
+///
+/// In fact, this is a hack.  The right solution is to abstract EscherEx to be
+/// able to work without SvStream; but at the moment it is better to live with
+/// this I guess.
+class SvNullStream : public SvStream
+{
+protected:
+    virtual sal_Size GetData( void* pData, sal_Size nSize ) { memset( pData, 0, nSize ); return nSize; }
+    virtual sal_Size PutData( const void*, sal_Size nSize ) { return nSize; }
+    virtual sal_Size SeekPos( sal_Size nPos ) { return nPos; }
+    virtual void SetSize( sal_Size ) {}
+    virtual void FlushData() {}
+
+public:
+    SvNullStream() : SvStream() {}
+    virtual ~SvNullStream() {}
+};
+
+VMLExport::VMLExport( ::sax_fastparser::FSHelperPtr pSerializer )
+    : EscherEx( *( new SvNullStream ), 0 ),
+      m_pSerializer( pSerializer ),
+      m_pShapeAttrList( NULL ),
+      m_nShapeType( ESCHER_ShpInst_Nil ),
+      m_pShapeStyle( new OStringBuffer( 200 ) ),
+      m_pShapeTypeWritten( new bool[ ESCHER_ShpInst_COUNT ] )
+{
+    mnGroupLevel = 1;
+    memset( m_pShapeTypeWritten, 0, ESCHER_ShpInst_COUNT * sizeof( bool ) );
+}
+
+VMLExport::~VMLExport()
+{
+    delete mpOutStrm, mpOutStrm = NULL;
+    delete m_pShapeStyle, m_pShapeStyle = NULL;
+    delete[] m_pShapeTypeWritten, m_pShapeTypeWritten = NULL;
+}
+
+void VMLExport::OpenContainer( UINT16 nEscherContainer, int nRecInstance )
+{
+    EscherEx::OpenContainer( nEscherContainer, nRecInstance );
+
+    if ( nEscherContainer == ESCHER_SpContainer )
+    {
+        // opening a shape container
+#if OSL_DEBUG_LEVEL > 0
+        if ( m_nShapeType != ESCHER_ShpInst_Nil )
+            fprintf( stderr, "Warning!  VMLExport::OpenContainer(): opening shape inside a shape.\n" );
+#endif
+        m_nShapeType = ESCHER_ShpInst_Nil;
+        m_pShapeAttrList = m_pSerializer->createAttrList();
+
+        if ( m_pShapeStyle->getLength() )
+            m_pShapeStyle->makeStringAndClear();
+
+        m_pShapeStyle->ensureCapacity( 200 );
+
+        // postpone the ouput so that we are able to write even the elements
+        // that we learn inside Commit()
+        m_pSerializer->mark();
+    }
+}
+
+void VMLExport::CloseContainer()
+{
+    if ( mRecTypes.back() == ESCHER_SpContainer )
+    {
+        // write the shape now when we have all the info
+        sal_Int32 nShapeElement = StartShape();
+
+        m_pSerializer->mergeTopMarks();
+        
+        EndShape( nShapeElement );
+
+        // cleanup
+        m_nShapeType = ESCHER_ShpInst_Nil;
+        m_pShapeAttrList = NULL;
+    }
+
+    EscherEx::CloseContainer();
+}
+
+UINT32 VMLExport::EnterGroup( const String& rShapeName, const Rectangle* pRect )
+{
+    UINT32 nShapeId = GetShapeID();
+
+    OStringBuffer aStyle( 200 );
+    FastAttributeList *pAttrList = m_pSerializer->createAttrList();
+
+    pAttrList->add( XML_id, ShapeIdString( nShapeId ) );
+
+    if ( rShapeName.Len() )
+        pAttrList->add( XML_alt, OUStringToOString( OUString( rShapeName ), RTL_TEXTENCODING_UTF8 ) );
+
+    // style
+    if ( pRect )
+        AddRectangleDimensions( aStyle, *pRect );
+
+    if ( aStyle.getLength() )
+        pAttrList->add( XML_style, aStyle.makeStringAndClear() );
+
+    // coordorigin/coordsize
+    if ( pRect && ( mnGroupLevel == 1 ) )
+    {
+        pAttrList->add( XML_coordorigin,
+                OStringBuffer( 20 ).append( sal_Int32( pRect->Left() ) )
+                .append( "," ).append( sal_Int32( pRect->Top() ) )
+                .makeStringAndClear() );
+
+        pAttrList->add( XML_coordsize,
+                OStringBuffer( 20 ).append( sal_Int32( pRect->Right() ) - sal_Int32( pRect->Left() ) )
+                .append( "," ).append( sal_Int32( pRect->Bottom() ) - sal_Int32( pRect->Top() ) )
+                .makeStringAndClear() );
+    }
+
+    m_pSerializer->startElementNS( XML_v, XML_group, XFastAttributeListRef( pAttrList ) );
+
+    mnGroupLevel++;
+    return nShapeId;
+}
+
+void VMLExport::LeaveGroup()
+{
+    --mnGroupLevel;
+    m_pSerializer->endElementNS( XML_v, XML_group );
+}
+
+void VMLExport::AddShape( UINT32 nShapeType, UINT32 nShapeFlags, UINT32 nShapeId )
+{
+    m_nShapeType = nShapeType;
+    m_nShapeFlags = nShapeFlags;
+
+    m_pShapeAttrList->add( XML_id, ShapeIdString( nShapeId ) );
+}
+
+static void impl_AddArrowHead( sax_fastparser::FastAttributeList *pAttrList, sal_Int32 nElement, sal_uInt32 nValue )
+{
+    if ( !pAttrList )
+        return;
+
+    const char *pArrowHead = NULL;
+    switch ( nValue )
+    {
+        case ESCHER_LineNoEnd:           pArrowHead = "none"; break;
+        case ESCHER_LineArrowEnd:        pArrowHead = "block"; break;
+        case ESCHER_LineArrowStealthEnd: pArrowHead = "classic"; break;
+        case ESCHER_LineArrowDiamondEnd: pArrowHead = "diamond"; break;
+        case ESCHER_LineArrowOvalEnd:    pArrowHead = "oval"; break;
+        case ESCHER_LineArrowOpenEnd:    pArrowHead = "open"; break;
+    }
+
+    if ( pArrowHead )
+        pAttrList->add( nElement, pArrowHead );
+}
+
+static void impl_AddArrowLength( sax_fastparser::FastAttributeList *pAttrList, sal_Int32 nElement, sal_uInt32 nValue )
+{
+    if ( !pAttrList )
+        return;
+
+    const char *pArrowLength = NULL;
+    switch ( nValue )
+    {
+        case ESCHER_LineShortArrow:     pArrowLength = "short"; break;
+        case ESCHER_LineMediumLenArrow: pArrowLength = "medium"; break;
+        case ESCHER_LineLongArrow:      pArrowLength = "long"; break;
+    }
+
+    if ( pArrowLength )
+        pAttrList->add( nElement, pArrowLength );
+}
+
+static void impl_AddArrowWidth( sax_fastparser::FastAttributeList *pAttrList, sal_Int32 nElement, sal_uInt32 nValue )
+{
+    if ( !pAttrList )
+        return;
+
+    const char *pArrowWidth = NULL;
+    switch ( nValue )
+    {
+        case ESCHER_LineNarrowArrow:      pArrowWidth = "narrow"; break;
+        case ESCHER_LineMediumWidthArrow: pArrowWidth = "medium"; break;
+        case ESCHER_LineWideArrow:        pArrowWidth = "wide"; break;
+    }
+
+    if ( pArrowWidth )
+        pAttrList->add( nElement, pArrowWidth );
+}
+
+static void impl_AddBool( sax_fastparser::FastAttributeList *pAttrList, sal_Int32 nElement, bool bValue )
+{
+    if ( !pAttrList )
+        return;
+
+    pAttrList->add( nElement, bValue? "t": "f" );
+}
+
+static void impl_AddColor( sax_fastparser::FastAttributeList *pAttrList, sal_Int32 nElement, sal_uInt32 nColor )
+{
+#if OSL_DEBUG_LEVEL > 0
+    if ( nColor & 0xFF000000 )
+        fprintf( stderr, "TODO: this is not a RGB value!\n" );
+#endif
+
+    if ( !pAttrList || ( nColor & 0xFF000000 ) )
+        return;
+
+    nColor = ( ( nColor & 0xFF ) << 16 ) + ( nColor & 0xFF00 ) + ( ( nColor & 0xFF0000 ) >> 16 );
+
+    const char *pColor = NULL;
+    char pRgbColor[10];
+    switch ( nColor )
+    {
+        case 0x000000: pColor = "black"; break;
+        case 0xC0C0C0: pColor = "silver"; break;
+        case 0x808080: pColor = "gray"; break;
+        case 0xFFFFFF: pColor = "white"; break;
+        case 0x800000: pColor = "maroon"; break;
+        case 0xFF0000: pColor = "red"; break;
+        case 0x800080: pColor = "purple"; break;
+        case 0xFF00FF: pColor = "fuchsia"; break;
+        case 0x008000: pColor = "green"; break;
+        case 0x00FF00: pColor = "lime"; break;
+        case 0x808000: pColor = "olive"; break;
+        case 0xFFFF00: pColor = "yellow"; break;
+        case 0x000080: pColor = "navy"; break;
+        case 0x0000FF: pColor = "blue"; break;
+        case 0x008080: pColor = "teal"; break;
+        case 0x00FFFF: pColor = "aqua"; break;
+        default:
+            {
+                snprintf( pRgbColor, sizeof( pRgbColor ), "#%06x", static_cast< unsigned int >( nColor ) ); // not too handy to use OString::valueOf() here :-(
+                pColor = pRgbColor;
+            }
+            break;
+    }
+
+    pAttrList->add( nElement, pColor );
+}
+
+static void impl_AddInt( sax_fastparser::FastAttributeList *pAttrList, sal_Int32 nElement, sal_uInt32 nValue )
+{
+    if ( !pAttrList )
+        return;
+
+    pAttrList->add( nElement, OString::valueOf( static_cast< sal_Int32 >( nValue ) ).getStr() );
+}
+
+inline sal_uInt16 impl_GetUInt16( const sal_uInt8* &pVal )
+{
+    sal_uInt16 nRet = *pVal++;
+    nRet += ( *pVal++ ) << 8;
+    return nRet;
+}
+
+inline sal_Int32 impl_GetPointComponent( const sal_uInt8* &pVal, sal_uInt16 nPointSize )
+{
+    sal_Int32 nRet = 0;
+    if ( ( nPointSize == 0xfff0 ) || ( nPointSize == 4 ) )
+    {
+        sal_uInt16 nUnsigned = *pVal++;
+        nUnsigned += ( *pVal++ ) << 8;
+
+        nRet = sal_Int16( nUnsigned );
+    }
+    else if ( nPointSize == 8 )
+    {
+        sal_uInt32 nUnsigned = *pVal++;
+        nUnsigned += ( *pVal++ ) << 8;
+        nUnsigned += ( *pVal++ ) << 16;
+        nUnsigned += ( *pVal++ ) << 24;
+
+        nRet = nUnsigned;
+    }
+    
+    return nRet;
+}
+
+void VMLExport::Commit( EscherPropertyContainer& rProps, const Rectangle& rRect )
+{
+    if ( m_nShapeType == ESCHER_ShpInst_Nil )
+        return;
+
+    // postpone the output of the embedded elements so that they are written
+    // inside the shapes
+    m_pSerializer->mark();
+
+    // dimensions
+    if ( m_nShapeType == ESCHER_ShpInst_Line )
+        AddLineDimensions( rRect );
+    else
+        AddRectangleDimensions( *m_pShapeStyle, rRect );
+
+    // properties
+    bool bAlreadyWritten[ 0xFFF ];
+    memset( bAlreadyWritten, 0, sizeof( bAlreadyWritten ) );
+    const EscherProperties &rOpts = rProps.GetOpts();
+    for ( EscherProperties::const_iterator it = rOpts.begin(); it != rOpts.end(); ++it )
+    {
+        sal_uInt16 nId = ( it->nPropId & 0x0FFF );
+
+        if ( bAlreadyWritten[ nId ] )
+            continue;
+
+        switch ( nId )
+        {
+            case ESCHER_Prop_WrapText: // 133
+                {
+                    const char *pWrapType = NULL;
+                    switch ( it->nPropValue )
+                    {
+                        case ESCHER_WrapSquare:
+                        case ESCHER_WrapByPoints:  pWrapType = "square"; break; // these two are equivalent according to the docu
+                        case ESCHER_WrapNone:      pWrapType = "none"; break;
+                        case ESCHER_WrapTopBottom: pWrapType = "topAndBottom"; break;
+                        case ESCHER_WrapThrough:   pWrapType = "through"; break;
+                    }
+                    if ( pWrapType )
+                        m_pSerializer->singleElementNS( XML_w10, XML_wrap,
+                                FSNS( XML_w10, XML_type ), pWrapType,
+                                FSEND );
+                }
+                bAlreadyWritten[ ESCHER_Prop_WrapText ] = true;
+                break;
+                
+            // coordorigin
+            case ESCHER_Prop_geoLeft: // 320
+            case ESCHER_Prop_geoTop: // 321
+                {
+                    sal_uInt32 nLeft = 0, nTop = 0;
+
+                    if ( nId == ESCHER_Prop_geoLeft )
+                    {
+                        nLeft = it->nPropValue;
+                        rProps.GetOpt( ESCHER_Prop_geoTop, nTop );
+                    }
+                    else
+                    {
+                        nTop = it->nPropValue;
+                        rProps.GetOpt( ESCHER_Prop_geoLeft, nLeft );
+                    }
+
+                    m_pShapeAttrList->add( XML_coordorigin,
+                            OStringBuffer( 20 ).append( sal_Int32( nLeft ) )
+                            .append( "," ).append( sal_Int32( nTop ) )
+                            .makeStringAndClear() );
+                }
+                bAlreadyWritten[ ESCHER_Prop_geoLeft ] = true;
+                bAlreadyWritten[ ESCHER_Prop_geoTop ] = true;
+                break;
+
+            // coordsize
+            case ESCHER_Prop_geoRight: // 322
+            case ESCHER_Prop_geoBottom: // 323
+                {
+                    sal_uInt32 nLeft = 0, nRight = 0, nTop = 0, nBottom = 0;
+                    rProps.GetOpt( ESCHER_Prop_geoLeft, nLeft );
+                    rProps.GetOpt( ESCHER_Prop_geoTop, nTop );
+
+                    if ( nId == ESCHER_Prop_geoRight )
+                    {
+                        nRight = it->nPropValue;
+                        rProps.GetOpt( ESCHER_Prop_geoBottom, nBottom );
+                    }
+                    else
+                    {
+                        nBottom = it->nPropValue;
+                        rProps.GetOpt( ESCHER_Prop_geoRight, nRight );
+                    }
+
+                    m_pShapeAttrList->add( XML_coordsize,
+                            OStringBuffer( 20 ).append( sal_Int32( nRight ) - sal_Int32( nLeft ) )
+                            .append( "," ).append( sal_Int32( nBottom ) - sal_Int32( nTop ) )
+                            .makeStringAndClear() );
+                }
+                bAlreadyWritten[ ESCHER_Prop_geoRight ] = true;
+                bAlreadyWritten[ ESCHER_Prop_geoBottom ] = true;
+                break;
+
+            case ESCHER_Prop_pVertices: // 325
+            case ESCHER_Prop_pSegmentInfo: // 326
+                {
+                    EscherPropSortStruct aVertices;
+                    EscherPropSortStruct aSegments;
+
+                    if ( rProps.GetOpt( ESCHER_Prop_pVertices, aVertices ) &&
+                         rProps.GetOpt( ESCHER_Prop_pSegmentInfo, aSegments ) )
+                    {
+                        const sal_uInt8 *pVerticesIt = aVertices.pBuf + 6;
+                        const sal_uInt8 *pSegmentIt = aSegments.pBuf;
+                        OStringBuffer aPath( 512 );
+
+                        sal_uInt16 nPointSize = aVertices.pBuf[4] + ( aVertices.pBuf[5] << 8 );
+
+                        // number of segments
+                        sal_uInt16 nSegments = impl_GetUInt16( pSegmentIt );
+                        pSegmentIt += 4;
+
+                        for ( ; nSegments; --nSegments )
+                        {
+                            sal_uInt16 nSeg = impl_GetUInt16( pSegmentIt );
+                            switch ( nSeg )
+                            {
+                                case 0x4000: // moveto
+                                    {
+                                        sal_Int32 nX = impl_GetPointComponent( pVerticesIt, nPointSize );
+                                        sal_Int32 nY = impl_GetPointComponent( pVerticesIt, nPointSize );
+                                        aPath.append( "m" ).append( nX ).append( "," ).append( nY );
+                                    }
+                                    break;
+                                case 0xb300:
+                                case 0xac00:
+                                    break;
+                                case 0x0001: // lineto
+                                    {
+                                        sal_Int32 nX = impl_GetPointComponent( pVerticesIt, nPointSize );
+                                        sal_Int32 nY = impl_GetPointComponent( pVerticesIt, nPointSize );
+                                        aPath.append( "l" ).append( nX ).append( "," ).append( nY );
+                                    }
+                                    break;
+                                case 0x2001: // curveto
+                                    {
+                                        sal_Int32 nX1 = impl_GetPointComponent( pVerticesIt, nPointSize );
+                                        sal_Int32 nY1 = impl_GetPointComponent( pVerticesIt, nPointSize );
+                                        sal_Int32 nX2 = impl_GetPointComponent( pVerticesIt, nPointSize );
+                                        sal_Int32 nY2 = impl_GetPointComponent( pVerticesIt, nPointSize );
+                                        sal_Int32 nX3 = impl_GetPointComponent( pVerticesIt, nPointSize );
+                                        sal_Int32 nY3 = impl_GetPointComponent( pVerticesIt, nPointSize );
+                                        aPath.append( "c" ).append( nX1 ).append( "," ).append( nY1 ).append( "," )
+                                            .append( nX2 ).append( "," ).append( nY2 ).append( "," )
+                                            .append( nX3 ).append( "," ).append( nY3 );
+                                    }
+                                    break;
+                                case 0xaa00: // nofill
+                                    aPath.append( "nf" );
+                                    break;
+                                case 0xab00: // nostroke
+                                    aPath.append( "ns" );
+                                    break;
+                                case 0x6001: // close
+                                    aPath.append( "x" );
+                                    break;
+                                case 0x8000: // end
+                                    aPath.append( "e" );
+                                    break;
+                                default:
+#if OSL_DEBUG_LEVEL > 0
+                                    fprintf( stderr, "TODO: unhandled segment '%x' in the path\n", nSeg );
+#endif
+                                    break;
+                            }
+                        }
+                        
+                        if ( aPath.getLength() )
+                            m_pShapeAttrList->add( XML_path, aPath.getStr() );
+                    }
+#if OSL_DEBUG_LEVEL > 0
+                    else
+                        fprintf( stderr, "TODO: unhandled shape path, missing either pVertices or pSegmentInfo.\n" );
+#endif
+                }
+                bAlreadyWritten[ ESCHER_Prop_pVertices ] = true;
+                bAlreadyWritten[ ESCHER_Prop_pSegmentInfo ] = true;
+                break;
+
+            case ESCHER_Prop_fillType: // 384
+            case ESCHER_Prop_fillColor: // 385
+            case ESCHER_Prop_fillBackColor: // 387
+            case ESCHER_Prop_fNoFillHitTest: // 447
+                {
+                    sal_uInt32 nValue;
+                    sax_fastparser::FastAttributeList *pAttrList = m_pSerializer->createAttrList();
+
+                    if ( rProps.GetOpt( ESCHER_Prop_fillType, nValue ) )
+                    {
+                        const char *pFillType = NULL;
+                        switch ( nValue )
+                        {
+                            case ESCHER_FillSolid:       pFillType = "solid"; break;
+                            // TODO case ESCHER_FillPattern:     pFillType = ""; break;
+                            // TODO case ESCHER_FillTexture:     pFillType = ""; break;
+                            // TODO case ESCHER_FillPicture:     pFillType = ""; break;
+                            // TODO case ESCHER_FillShade:       pFillType = ""; break;
+                            // TODO case ESCHER_FillShadeCenter: pFillType = ""; break;
+                            // TODO case ESCHER_FillShadeShape:  pFillType = ""; break;
+                            // TODO case ESCHER_FillShadeScale:  pFillType = ""; break;
+                            // TODO case ESCHER_FillShadeTitle:  pFillType = ""; break;
+                            // TODO case ESCHER_FillBackground:  pFillType = ""; break;
+                            default:
+#if OSL_DEBUG_LEVEL > 0
+                                fprintf( stderr, "TODO: unhandled fill type\n" );
+#endif
+                                break;
+                        }
+                        if ( pFillType )
+                            pAttrList->add( XML_type, pFillType );
+                    }
+
+                    if ( rProps.GetOpt( ESCHER_Prop_fillColor, nValue ) )
+                        impl_AddColor( pAttrList, XML_color, nValue );
+
+                    if ( rProps.GetOpt( ESCHER_Prop_fillBackColor, nValue ) )
+                        impl_AddColor( pAttrList, XML_color2, nValue );
+
+                    if ( rProps.GetOpt( ESCHER_Prop_fNoFillHitTest, nValue ) )
+                        impl_AddBool( pAttrList, XML_detectmouseclick, nValue );
+
+                    m_pSerializer->singleElementNS( XML_v, XML_fill, XFastAttributeListRef( pAttrList ) );
+                }
+                bAlreadyWritten[ ESCHER_Prop_fillType ] = true;
+                bAlreadyWritten[ ESCHER_Prop_fillColor ] = true;
+                bAlreadyWritten[ ESCHER_Prop_fillBackColor ] = true;
+                bAlreadyWritten[ ESCHER_Prop_fNoFillHitTest ] = true;
+                break;
+
+            case ESCHER_Prop_lineColor: // 448
+            case ESCHER_Prop_lineWidth: // 459
+            case ESCHER_Prop_lineDashing: // 462
+            case ESCHER_Prop_lineStartArrowhead: // 464
+            case ESCHER_Prop_lineEndArrowhead: // 465
+            case ESCHER_Prop_lineStartArrowWidth: // 466
+            case ESCHER_Prop_lineStartArrowLength: // 467
+            case ESCHER_Prop_lineEndArrowWidth: // 468
+            case ESCHER_Prop_lineEndArrowLength: // 469
+            case ESCHER_Prop_lineJoinStyle: // 470
+            case ESCHER_Prop_lineEndCapStyle: // 471
+                {
+                    sal_uInt32 nValue;
+                    sax_fastparser::FastAttributeList *pAttrList = m_pSerializer->createAttrList();
+
+                    if ( rProps.GetOpt( ESCHER_Prop_lineColor, nValue ) )
+                        impl_AddColor( pAttrList, XML_color, nValue );
+
+                    if ( rProps.GetOpt( ESCHER_Prop_lineWidth, nValue ) )
+                        impl_AddInt( pAttrList, XML_weight, nValue );
+
+                    if ( rProps.GetOpt( ESCHER_Prop_lineDashing, nValue ) )
+                    {
+                        const char *pDashStyle = NULL;
+                        switch ( nValue )
+                        {
+                            case ESCHER_LineSolid:             pDashStyle = "solid"; break;
+                            case ESCHER_LineDashSys:           pDashStyle = "shortdash"; break;
+                            case ESCHER_LineDotSys:            pDashStyle = "shortdot"; break;
+                            case ESCHER_LineDashDotSys:        pDashStyle = "shortdashdot"; break;
+                            case ESCHER_LineDashDotDotSys:     pDashStyle = "shortdashdotdot"; break;
+                            case ESCHER_LineDotGEL:            pDashStyle = "dot"; break;
+                            case ESCHER_LineDashGEL:           pDashStyle = "dash"; break;
+                            case ESCHER_LineLongDashGEL:       pDashStyle = "longdash"; break;
+                            case ESCHER_LineDashDotGEL:        pDashStyle = "dashdot"; break;
+                            case ESCHER_LineLongDashDotGEL:    pDashStyle = "longdashdot"; break;
+                            case ESCHER_LineLongDashDotDotGEL: pDashStyle = "longdashdotdot"; break;
+                        }
+                        if ( pDashStyle )
+                            pAttrList->add( XML_dashstyle, pDashStyle );
+                    }
+
+                    if ( rProps.GetOpt( ESCHER_Prop_lineStartArrowhead, nValue ) )
+                        impl_AddArrowHead( pAttrList, XML_startarrow, nValue );
+
+                    if ( rProps.GetOpt( ESCHER_Prop_lineEndArrowhead, nValue ) )
+                        impl_AddArrowHead( pAttrList, XML_endarrow, nValue );
+
+                    if ( rProps.GetOpt( ESCHER_Prop_lineStartArrowWidth, nValue ) )
+                        impl_AddArrowWidth( pAttrList, XML_startarrowwidth, nValue );
+
+                    if ( rProps.GetOpt( ESCHER_Prop_lineStartArrowLength, nValue ) )
+                        impl_AddArrowLength( pAttrList, XML_startarrowlength, nValue );
+
+                    if ( rProps.GetOpt( ESCHER_Prop_lineEndArrowWidth, nValue ) )
+                        impl_AddArrowWidth( pAttrList, XML_endarrowwidth, nValue );
+
+                    if ( rProps.GetOpt( ESCHER_Prop_lineEndArrowLength, nValue ) )
+                        impl_AddArrowLength( pAttrList, XML_endarrowlength, nValue );
+
+                    if ( rProps.GetOpt( ESCHER_Prop_lineJoinStyle, nValue ) )
+                    {
+                        const char *pJoinStyle = NULL;
+                        switch ( nValue )
+                        {
+                            case ESCHER_LineJoinBevel: pJoinStyle = "bevel"; break;
+                            case ESCHER_LineJoinMiter: pJoinStyle = "miter"; break;
+                            case ESCHER_LineJoinRound: pJoinStyle = "round"; break;
+                        }
+                        if ( pJoinStyle )
+                            pAttrList->add( XML_joinstyle, pJoinStyle );
+                    }
+
+                    if ( rProps.GetOpt( ESCHER_Prop_lineEndCapStyle, nValue ) )
+                    {
+                        const char *pEndCap = NULL;
+                        switch ( nValue )
+                        {
+                            case ESCHER_LineEndCapRound:  pEndCap = "round"; break;
+                            case ESCHER_LineEndCapSquare: pEndCap = "square"; break;
+                            case ESCHER_LineEndCapFlat:   pEndCap = "flat"; break;
+                        }
+                        if ( pEndCap )
+                            pAttrList->add( XML_endcap, pEndCap );
+                    }
+
+                    m_pSerializer->singleElementNS( XML_v, XML_stroke, XFastAttributeListRef( pAttrList ) );
+                }
+                bAlreadyWritten[ ESCHER_Prop_lineColor ] = true;
+                bAlreadyWritten[ ESCHER_Prop_lineWidth ] = true;
+                bAlreadyWritten[ ESCHER_Prop_lineDashing ] = true;
+                bAlreadyWritten[ ESCHER_Prop_lineStartArrowhead ] = true;
+                bAlreadyWritten[ ESCHER_Prop_lineEndArrowhead ] = true;
+                bAlreadyWritten[ ESCHER_Prop_lineStartArrowWidth ] = true;
+                bAlreadyWritten[ ESCHER_Prop_lineStartArrowLength ] = true;
+                bAlreadyWritten[ ESCHER_Prop_lineEndArrowWidth ] = true;
+                bAlreadyWritten[ ESCHER_Prop_lineEndArrowLength ] = true;
+                bAlreadyWritten[ ESCHER_Prop_lineJoinStyle ] = true;
+                bAlreadyWritten[ ESCHER_Prop_lineEndCapStyle ] = true;
+                break;
+
+            case ESCHER_Prop_fHidden:
+                m_pShapeStyle->append( ";visibility:hidden" );
+                break;
+            default:
+#if OSL_DEBUG_LEVEL > 0
+                fprintf( stderr, "TODO VMLExport::Commit(), unimplemented id: %d, value: %d, data: [%d, %p]\n",
+                        it->nPropId, it->nPropValue, it->nPropSize, it->pBuf );
+                if ( it->nPropSize )
+                {
+                    const sal_uInt8 *pIt = it->pBuf;
+                    fprintf( stderr, "    ( " );
+                    for ( int nCount = it->nPropSize; nCount; --nCount )
+                    {
+                        fprintf( stderr, "%02x ", *pIt );
+                        ++pIt;
+                    }
+                    fprintf( stderr, ")\n" );
+                }
+#endif
+                break;
+        }
+    }
+
+    m_pSerializer->mergeTopMarks( sax_fastparser::MERGE_MARKS_POSTPONE );
+}
+
+OString VMLExport::ShapeIdString( sal_uInt32 nId )
+{
+    return OStringBuffer( 20 ).append( "shape_" ).append( sal_Int64( nId ) ).makeStringAndClear();
+}
+
+void VMLExport::AddLineDimensions( const Rectangle& rRectangle )
+{
+    // style
+    if ( m_pShapeStyle->getLength() )
+        m_pShapeStyle->append( ";" );
+
+    m_pShapeStyle->append( "position:absolute" );
+
+    switch ( m_nShapeFlags & 0xC0 )
+    {
+        case 0x40: m_pShapeStyle->append( ";flip:y" ); break;
+        case 0x80: m_pShapeStyle->append( ";flip:x" ); break;
+        case 0xC0: m_pShapeStyle->append( ";flip:xy" ); break;
+    }
+
+    // the actual dimensions
+    OString aLeft, aTop, aRight, aBottom;
+
+    if ( mnGroupLevel == 1 )
+    {
+        const OString aPt( "pt" );
+        aLeft = OString::valueOf( double( rRectangle.Left() ) / 20 ) + aPt;
+        aTop = OString::valueOf( double( rRectangle.Top() ) / 20 ) + aPt;
+        aRight = OString::valueOf( double( rRectangle.Right() ) / 20 ) + aPt;
+        aBottom = OString::valueOf( double( rRectangle.Bottom() ) / 20 ) + aPt;
+    }
+    else
+    {
+        aLeft = OString::valueOf( rRectangle.Left() );
+        aTop = OString::valueOf( rRectangle.Top() );
+        aRight = OString::valueOf( rRectangle.Right() );
+        aBottom = OString::valueOf( rRectangle.Bottom() );
+    }
+
+    m_pShapeAttrList->add( XML_from,
+            OStringBuffer( 20 ).append( aLeft )
+            .append( "," ).append( aTop )
+            .makeStringAndClear() );
+
+    m_pShapeAttrList->add( XML_to,
+            OStringBuffer( 20 ).append( aRight )
+            .append( "," ).append( aBottom )
+            .makeStringAndClear() );
+}
+
+void VMLExport::AddRectangleDimensions( rtl::OStringBuffer& rBuffer, const Rectangle& rRectangle )
+{
+    if ( rBuffer.getLength() )
+        rBuffer.append( ";" );
+
+    rBuffer.append( "position:absolute;" );
+
+    if ( mnGroupLevel == 1 )
+    {
+        rBuffer.append( "margin-left:" ).append( double( rRectangle.Left() ) / 20 )
+            .append( "pt;margin-top:" ).append( double( rRectangle.Top() ) / 20 )
+            .append( "pt;width:" ).append( double( rRectangle.Right() - rRectangle.Left() ) / 20 )
+            .append( "pt;height:" ).append( double( rRectangle.Bottom() - rRectangle.Top() ) / 20 )
+            .append( "pt" );
+    }
+    else
+    {
+        rBuffer.append( "left:" ).append( rRectangle.Left() )
+            .append( ";top:" ).append( rRectangle.Top() )
+            .append( ";width:" ).append( rRectangle.Right() - rRectangle.Left() )
+            .append( ";height:" ).append( rRectangle.Bottom() - rRectangle.Top() );
+    }
+}
+
+void VMLExport::AddShapeAttribute( sal_Int32 nAttribute, const rtl::OString& rValue )
+{
+    m_pShapeAttrList->add( nAttribute, rValue );
+}
+
+extern const char* pShapeTypes[];
+
+sal_Int32 VMLExport::StartShape()
+{
+    if ( m_nShapeType == ESCHER_ShpInst_Nil )
+        return -1;
+
+    // some of the shapes have their own name ;-)
+    sal_Int32 nShapeElement = -1;
+    bool bReferToShapeType = false;
+    switch ( m_nShapeType )
+    {
+        case ESCHER_ShpInst_NotPrimitive:   nShapeElement = XML_shape;     break;
+        case ESCHER_ShpInst_Rectangle:      nShapeElement = XML_rect;      break;
+        case ESCHER_ShpInst_RoundRectangle: nShapeElement = XML_roundrect; break;
+        case ESCHER_ShpInst_Ellipse:        nShapeElement = XML_oval;      break;
+        case ESCHER_ShpInst_Arc:            nShapeElement = XML_arc;       break;
+        case ESCHER_ShpInst_Line:           nShapeElement = XML_line;      break;
+        default:
+            if ( m_nShapeType < ESCHER_ShpInst_COUNT )
+            {
+                nShapeElement = XML_shape;
+
+                // a predefined shape?
+                const char* pShapeType = pShapeTypes[ m_nShapeType ];
+                if ( pShapeType )
+                {
+                    bReferToShapeType = true;
+                    if ( !m_pShapeTypeWritten[ m_nShapeType ] )
+                    {
+                        m_pSerializer->write( pShapeType );
+                        m_pShapeTypeWritten[ m_nShapeType ] = true;
+                    }
+                }
+                else
+                {
+                    // rectangle is probably the best fallback...
+                    nShapeElement = XML_rect;
+                }
+            }
+            break;
+    }
+
+    // add style
+    m_pShapeAttrList->add( XML_style, m_pShapeStyle->makeStringAndClear() );
+
+    if ( nShapeElement >= 0 )
+    {
+        if ( bReferToShapeType )
+        {
+            m_pShapeAttrList->add( XML_type, OStringBuffer( 20 )
+                    .append( "shapetype_" ).append( sal_Int32( m_nShapeType ) )
+                    .makeStringAndClear() );
+        }
+
+        // start of the shape
+        m_pSerializer->startElementNS( XML_v, nShapeElement, XFastAttributeListRef( m_pShapeAttrList ) );
+    }
+
+    return nShapeElement;
+}
+
+void VMLExport::EndShape( sal_Int32 nShapeElement )
+{
+    if ( nShapeElement >= 0 )
+    {
+        // end of the shape
+        m_pSerializer->endElementNS( XML_v, nShapeElement );
+    }
+}
diff --git oox/source/token/tokens.txt oox/source/token/tokens.txt
index 96f14da..4b3d47d 100644
--- oox/source/token/tokens.txt
+++ oox/source/token/tokens.txt
@@ -1457,6 +1457,9 @@ cyan
 cycle
 cylinder
 d
+dc
+dcmitype
+dcterms
 dLbl
 dLblPos
 dLbls
@@ -5415,7 +5418,9 @@ vol
 volType
 volTypes
 vstream
+vt
 w
+w10
 wAfter
 wArH
 wBefore
@@ -5493,6 +5498,7 @@ workbookView
 workbookViewId
 worksheet
 worksheetSource
+wp
 wpJustification
 wpSpaceWidth
 wrap
@@ -5516,6 +5522,7 @@ xMode
 xSplit
 xVal
 xWindow
+xdr
 xf
 xfDxf
 xfId
@@ -5534,6 +5541,7 @@ xmlns
 xpath
 xrange
 xscale
+xsi
 xy
 y
 yAlign
diff --git oox/util/makefile.mk oox/util/makefile.mk
index 03f6c21..119e52e 100644
--- oox/util/makefile.mk
+++ oox/util/makefile.mk
@@ -57,7 +57,8 @@ LIB1FILES=	\
     $(SLB)$/table.lib\
     $(SLB)$/shape.lib\
     $(SLB)$/dump.lib\
-    $(SLB)$/docprop.lib
+    $(SLB)$/docprop.lib\
+    $(SLB)$/export.lib
 
 # --- Shared-Library -----------------------------------------------
 
@@ -75,7 +76,13 @@ SHL1STDLIBS= \
 		$(BASEGFXLIB)	\
 		$(UNOTOOLSLIB)	\
 		$(UCBHELPERLIB) \
-		$(SAXLIB)
+		$(SAXLIB)		\
+		$(VCLLIB)		\
+		$(GOODIESLIB)		\
+		$(SVTOOLLIB)		\
+		$(SVXCORELIB)		\
+		$(SVXMSFILTERLIB)	\
+		$(TOOLSLIB)
 
 SHL1DEF=    $(MISC)$/$(SHL1TARGET).def
 SHL1LIBS=   $(LIB1TARGET)
diff --git reportdesign/util/makefile.mk reportdesign/util/makefile.mk
index b114530..16eca7c 100644
--- reportdesign/util/makefile.mk
+++ reportdesign/util/makefile.mk
@@ -54,6 +54,7 @@ LIB1FILES=\
 SHL1TARGET=$(TARGET)$(DLLPOSTFIX)
 
 SHL1STDLIBS= \
+		$(SVXCORELIB)				\
 		$(SVXLIB)				\
 		$(FWELIB)				\
 		$(SFXLIB)				\
@@ -107,6 +107,7 @@ LIB2FILES=\
 SHL2TARGET=$(TARGET2)$(DLLPOSTFIX)
 
 SHL2STDLIBS= \
+		$(SVXCORELIB)				\
 		$(SVXLIB)				\
 		$(SFXLIB)				\
 		$(SVTOOLLIB)			\
@@ -174,7 +174,7 @@ LIB3FILES=\
 SHL3TARGET=$(TARGET3)$(DLLPOSTFIX)
 
 SHL3STDLIBS=\
-	$(SVXLIB)			\
+	$(SVXCORELIB)			\
 	$(XMLOFFLIB)		\
 	$(VCLLIB)			\
 	$(UNOTOOLSLIB)		\
diff --git sax/inc/sax/fshelper.hxx sax/inc/sax/fshelper.hxx
index 70b22b5..1c95afc 100644
--- sax/inc/sax/fshelper.hxx
+++ sax/inc/sax/fshelper.hxx
@@ -39,11 +39,13 @@
 #include <sax/fastattribs.hxx>
 #include "sax/dllapi.h"
 
-#define FSNS(namespace, element)    ((namespace << 16) | element)
-#define FSEND -1 // same as XML_TOKEN_INVALID
+#define FSNS(namespc, element) ((namespc << 16) | element)
+const sal_Int32 FSEND = -1; // same as XML_TOKEN_INVALID
 
 namespace sax_fastparser {
 
+enum MergeMarksEnum { MERGE_MARKS_APPEND = 0, MERGE_MARKS_PREPEND = 1, MERGE_MARKS_POSTPONE = 2 };
+
 typedef ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList > XFastAttributeListRef;
 
 class FastSaxSerializer;
@@ -82,6 +84,10 @@ public:
 	inline void singleElementNS(sal_Int32 namespaceTokenId, sal_Int32 elementTokenId, XFastAttributeListRef xAttrList)
 		{ singleElementV(FSNS( namespaceTokenId, elementTokenId), xAttrList); }
 
+    void startElementV(sal_Int32 elementTokenId, XFastAttributeListRef xAttrList);
+    inline void startElementNS(sal_Int32 namespaceTokenId, sal_Int32 elementTokenId, XFastAttributeListRef xAttrList) 
+        { startElementV( FSNS( namespaceTokenId, elementTokenId ), xAttrList ); }
+
 	FastSerializerHelper* write(const char* value);
 	FastSerializerHelper* write(const rtl::OUString& value);
 	FastSerializerHelper* write(sal_Int32 value);
@@ -99,7 +105,7 @@ public:
 	FastAttributeList *createAttrList();
 
     void mark();
-    void mergeTopMarks( bool bPrepend = false );
+    void mergeTopMarks( MergeMarksEnum eMergeType = MERGE_MARKS_APPEND );
 
 private:
 
diff --git sax/source/tools/fastserializer.cxx sax/source/tools/fastserializer.cxx
index 0920886..6f159b8 100644
--- sax/source/tools/fastserializer.cxx
+++ sax/source/tools/fastserializer.cxx
@@ -326,43 +326,29 @@ namespace sax_fastparser {
 
     void FastSaxSerializer::mark()
     {
-        maMarkStack.push( Int8Sequence() );
+        maMarkStack.push( ForMerge() );
     }
 
-    void FastSaxSerializer::mergeTopMarks( bool bPrepend )
+    void FastSaxSerializer::mergeTopMarks( sax_fastparser::MergeMarksEnum eMergeType )
     {
         if ( maMarkStack.empty() )
             return;
 
         if ( maMarkStack.size() == 1 )
         {
-            mxOutputStream->writeBytes( maMarkStack.top() );
+            mxOutputStream->writeBytes( maMarkStack.top().getData() );
             maMarkStack.pop();
+            return;
         }
-        else
+
+        const Int8Sequence aMerge( maMarkStack.top().getData() );
+        maMarkStack.pop();
+
+        switch ( eMergeType )
         {
-            const Int8Sequence aMerge( maMarkStack.top() );
-            maMarkStack.pop();
-            
-            sal_Int32 nMergeLen = aMerge.getLength();
-            if ( nMergeLen > 0 )
-            {
-                Int8Sequence &rTop = maMarkStack.top();
-                sal_Int32 nTopLen = rTop.getLength();
-
-                rTop.realloc( nTopLen + nMergeLen );
-                if ( bPrepend )
-                {
-                    // prepend the aMerge to the rTop
-                    memmove( rTop.getArray() + nMergeLen, rTop.getConstArray(), nTopLen );
-                    memcpy( rTop.getArray(), aMerge.getConstArray(), nMergeLen );
-                }
-                else
-                {
-                    // append the aMerge to the rTop
-                    memcpy( rTop.getArray() + nTopLen, aMerge.getConstArray(), nMergeLen );
-                }
-            }
+            case MERGE_MARKS_APPEND:   maMarkStack.top().append( aMerge );   break;
+            case MERGE_MARKS_PREPEND:  maMarkStack.top().prepend( aMerge );  break;
+            case MERGE_MARKS_POSTPONE: maMarkStack.top().postpone( aMerge ); break;
         }
     }
 
@@ -371,15 +357,50 @@ namespace sax_fastparser {
         if ( maMarkStack.empty() )
             mxOutputStream->writeBytes( aData );
         else
+            maMarkStack.top().append( aData );
+    }
+
+    FastSaxSerializer::Int8Sequence& FastSaxSerializer::ForMerge::getData()
+    {
+        merge( maData, maPostponed, true );
+        maPostponed.realloc( 0 );
+        
+        return maData;
+    }
+
+    void FastSaxSerializer::ForMerge::prepend( const Int8Sequence &rWhat )
+    {
+        merge( maData, rWhat, false );
+    }
+
+    void FastSaxSerializer::ForMerge::append( const Int8Sequence &rWhat )
+    {
+        merge( maData, rWhat, true );
+    }
+
+    void FastSaxSerializer::ForMerge::postpone( const Int8Sequence &rWhat )
+    {
+        merge( maPostponed, rWhat, true );
+    }
+
+    void FastSaxSerializer::ForMerge::merge( Int8Sequence &rTop, const Int8Sequence &rMerge, bool bAppend )
+    {
+        sal_Int32 nMergeLen = rMerge.getLength();
+        if ( nMergeLen > 0 )
         {
-            sal_Int32 nDataLen = aData.getLength();
-            if ( nDataLen > 0 )
-            {
-                Int8Sequence &rTop = maMarkStack.top();
-                sal_Int32 nTopLen = rTop.getLength();
+            sal_Int32 nTopLen = rTop.getLength();
 
-                rTop.realloc( nTopLen + nDataLen );
-                memcpy( rTop.getArray() + nTopLen, aData.getConstArray(), nDataLen );
+            rTop.realloc( nTopLen + nMergeLen );
+            if ( bAppend )
+            {
+                // append the rMerge to the rTop
+                memcpy( rTop.getArray() + nTopLen, rMerge.getConstArray(), nMergeLen );
+            }
+            else
+            {
+                // prepend the rMerge to the rTop
+                memmove( rTop.getArray() + nMergeLen, rTop.getConstArray(), nTopLen );
+                memcpy( rTop.getArray(), rMerge.getConstArray(), nMergeLen );
             }
         }
     }
diff --git sax/source/tools/fastserializer.hxx sax/source/tools/fastserializer.hxx
index 826c45f..429e7db 100644
--- sax/source/tools/fastserializer.hxx
+++ sax/source/tools/fastserializer.hxx
@@ -45,6 +45,7 @@
 #include <stack>
 
 #include "sax/dllapi.h"
+#include "sax/fshelper.hxx"
 
 #define SERIALIZER_IMPLEMENTATION_NAME	"com.sun.star.comp.extensions.xml.sax.FastSerializer"
 #define SERIALIZER_SERVICE_NAME		"com.sun.star.xml.sax.FastSerializer"
@@ -112,27 +113,49 @@ public:
 
     /** Merge 2 topmost marks.
 
-        There are 2 possibilities - prepend the top before the second top-most
-        mark, or append it; prepending brings the possibility to switch parts
-        of the output.
+        There are 3 possibilities - prepend the top before the second top-most
+        mark, append it, or append it later; prepending brings the possibility
+        to switch parts of the output, appending later allows to write some
+        output in advance.
 
         Writes the result to the output stream if the mark stack becomes empty
         by the operation.
 
+        When the MERGE_MARKS_POSTPONE is specified, the merge happens just
+        before the next merge.
+
         @see mark()
      */
-    void mergeTopMarks( bool bPrepend = false );
+    void mergeTopMarks( sax_fastparser::MergeMarksEnum eMergeType = sax_fastparser::MERGE_MARKS_APPEND );
 
 private:
 	::com::sun::star::uno::Reference< ::com::sun::star::io::XOutputStream > mxOutputStream;
 	::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastTokenHandler > mxFastTokenHandler;
 
     typedef ::com::sun::star::uno::Sequence< ::sal_Int8 > Int8Sequence;
-    ::std::stack< Int8Sequence > maMarkStack;
+    class ForMerge
+    {
+        Int8Sequence maData;
+        Int8Sequence maPostponed;
+
+    public:
+        ForMerge() : maData(), maPostponed() {}
+
+        Int8Sequence& getData();
+
+        void prepend( const Int8Sequence &rWhat );
+        void append( const Int8Sequence &rWhat );
+        void postpone( const Int8Sequence &rWhat );
+        
+    private:
+        static void merge( Int8Sequence &rTop, const Int8Sequence &rMerge, bool bAppend );
+    };
+
+    ::std::stack< ForMerge > maMarkStack;
 
 	void writeFastAttributeList( const ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XFastAttributeList >& Attribs );
     void write( const ::rtl::OUString& s );
-    
+
 protected:
     /** Forward the call to the output stream, or write to the stack.
 
@@ -144,4 +167,3 @@ protected:
 } // namespace sax_fastparser
 
 #endif
-
diff --git sax/source/tools/fshelper.cxx sax/source/tools/fshelper.cxx
index 2e3d42d..61d4661 100644
--- sax/source/tools/fshelper.cxx
+++ sax/source/tools/fshelper.cxx
@@ -114,6 +114,12 @@ void FastSerializerHelper::endElement(sal_Int32 elementTokenId)
 	mpSerializer->endFastElement(elementTokenId);
 }
 
+void FastSerializerHelper::startElementV(sal_Int32 elementTokenId, XFastAttributeListRef xAttrList)
+{
+	mpSerializer->startFastElement(elementTokenId, xAttrList);
+}
+
+
 void FastSerializerHelper::singleElement(const char* elementName, XFastAttributeListRef xAttrList)
 {
 	mpSerializer->singleUnknownElement(::rtl::OUString(), ::rtl::OUString::createFromAscii(elementName), xAttrList);	
@@ -181,9 +187,9 @@ void FastSerializerHelper::mark()
     mpSerializer->mark();
 }
 
-void FastSerializerHelper::mergeTopMarks( bool bPrepend )
+void FastSerializerHelper::mergeTopMarks( MergeMarksEnum eMergeType )
 {
-    mpSerializer->mergeTopMarks( bPrepend );
+    mpSerializer->mergeTopMarks( eMergeType );
 }
 
 FastAttributeList * FastSerializerHelper::createAttrList()
diff --git sc/util/makefile.mk sc/util/makefile.mk
index c1e152f..88e0594 100644
--- sc/util/makefile.mk
+++ sc/util/makefile.mk
@@ -83,6 +83,7 @@ SHL1STDLIBS=       \
 	$(SFXLIB)		\
 	$(SVTOOLLIB)	\
 	$(SVLLIB)		\
+	$(SVXCORELIB)		\
 	$(SVXLIB)		\
 	$(GOODIESLIB)	\
     $(BASEGFXLIB) \
@@ -189,6 +190,8 @@ SHL6STDLIBS= \
 	$(SFXLIB)		\
 	$(SVTOOLLIB)	\
 	$(SVLLIB)		\
+	$(SVXCORELIB)		\
+	$(SVXMSFILTERLIB)		\
 	$(SVXLIB)		\
 	$(GOODIESLIB)	\
     $(BASEGFXLIB) \
@@ -221,6 +224,7 @@ DEF8NAME=$(SHL8TARGET)
 
 SHL8STDLIBS= \
 			$(ISCLIB) \
+            $(SVXCORELIB) \
             $(SVXLIB) \
             $(SFX2LIB) \
             $(SVTOOLLIB) \
@@ -316,7 +320,7 @@ SHL9STDLIBS= \
 		$(SALLIB)\
 		$(BASICLIB)	\
 		$(SFXLIB)	\
-		$(SVXLIB)	\
+		$(SVXCORELIB)	\
 		$(SVTOOLLIB)    \
 		$(SVLLIB) \
 		$(ISCLIB) \
diff --git scp2/source/ooo/file_library_ooo.scp scp2/source/ooo/file_library_ooo.scp
index 5e4f05d..7d8d4f4 100644
--- scp2/source/ooo/file_library_ooo.scp
+++ scp2/source/ooo/file_library_ooo.scp
@@ -1449,7 +1449,11 @@ STD_LIB_FILE_PATCH( gid_File_Lib_Svl, svl )
 STD_UNO_LIB_FILE_PATCH( gid_File_Lib_Svtools, svt )
 SPECIAL_UNO_COMPONENT_LIB_FILE( gid_File_Lib_Svtmisc, svtmisc.uno )
 
+STD_UNO_LIB_FILE_PATCH( gid_File_Lib_Svx_Core, svxcore)
 STD_UNO_LIB_FILE_PATCH( gid_File_Lib_Svx, svx)
+
+STD_LIB_FILE_PATCH( gid_File_Lib_Svx_Msfilter, svxmsfilter)
+
 STD_UNO_LIB_FILE( gid_File_Lib_TextConversionDlgs, textconversiondlgs)
 
 STD_UNO_LIB_FILE_PATCH( gid_File_Lib_Sw , sw)
diff --git scp2/source/ooo/file_ooo.scp scp2/source/ooo/file_ooo.scp
index b2643a4..f731f78 100644
--- scp2/source/ooo/file_ooo.scp
+++ scp2/source/ooo/file_ooo.scp
@@ -359,7 +359,7 @@ End
 
 STD_FILTER_FILE( gid_File_Filter_Eme, eme)
 
-STD_FILTER_FILE_PATCH( gid_File_Filter_Emp, emp)
+STD_FILTER_FILE_PATCH( gid_File_Filter_Sdfilt, sdfilt)
 
 STD_FILTER_FILE( gid_File_Filter_Icg, icg)
 
--- scp2/source/ooo/module_hidden_ooo.scp
+++ scp2/source/ooo/module_hidden_ooo.scp
@@ -140,7 +140,7 @@ Module gid_Module_Root_Files_4
 	Styles = (HIDDEN_ROOT);
 	Files = (gid_File_Dat_Root4,
 	gid_File_Filter_Eme,
-	gid_File_Filter_Emp,
+	gid_File_Filter_Sdfilt,
 	gid_File_Filter_Icg,
 	gid_File_Filter_Egi,
 	gid_File_Filter_Epb,
diff --git sd/inc/CustomAnimationEffect.hxx sd/inc/CustomAnimationEffect.hxx
index d96d6fa..ce3cd59 100644
--- sd/inc/CustomAnimationEffect.hxx
+++ sd/inc/CustomAnimationEffect.hxx
@@ -38,15 +38,13 @@
 #include <com/sun/star/util/XChangesListener.hpp>
 #include <tools/string.hxx>
 
-#ifndef BOOST_SHARED_PTR_HPP_INCLUDED
 #include <boost/shared_ptr.hpp>
-#endif
 
-#ifndef _UTL_STLTYPES_HXX_
 #include <comphelper/stl_types.hxx>
-#endif
 #include <vcl/timer.hxx>
 
+#include <sddllapi.h>
+
 #include <list>
 #include <map>
 
@@ -76,7 +74,7 @@ class CustomAnimationEffect
 	friend class EffectSequenceHelper;
 
 public:
-	CustomAnimationEffect( const ::com::sun::star::uno::Reference< ::com::sun::star::animations::XAnimationNode >& xNode );
+	SD_DLLPUBLIC CustomAnimationEffect( const ::com::sun::star::uno::Reference< ::com::sun::star::animations::XAnimationNode >& xNode );
 	virtual ~CustomAnimationEffect();
 
 	const ::com::sun::star::uno::Reference< ::com::sun::star::animations::XAnimationNode >& getNode() const { return mxNode; }
@@ -94,7 +92,7 @@ public:
 	void					setPresetClass( sal_Int16 nPresetClass );
 
 	sal_Int16		getNodeType() const { return mnNodeType; }
-	void			setNodeType( sal_Int16 nNodeType );
+	SD_DLLPUBLIC void			setNodeType( sal_Int16 nNodeType );
 
 	::com::sun::star::uno::Any				getRepeatCount() const;
 	void			setRepeatCount( const ::com::sun::star::uno::Any& rRepeatCount );
@@ -106,10 +104,10 @@ public:
 	void			setFill( sal_Int16 nFill );
 	
 	double			getBegin() const { return mfBegin; }
-	void			setBegin( double fBegin );
+	SD_DLLPUBLIC void			setBegin( double fBegin );
 
 	double			getDuration() const { return mfDuration; }
-	void			setDuration( double fDuration );
+	SD_DLLPUBLIC void			setDuration( double fDuration );
 	
 	double			getAbsoluteDuration() const { return mfAbsoluteDuration; }
 
@@ -117,13 +115,13 @@ public:
 	void			setName( const String& rName ) { maName = rName; }
 
 	sal_Int16		getIterateType() const { return mnIterateType; }
-	void			setIterateType( sal_Int16 nIterateType );
+	SD_DLLPUBLIC void			setIterateType( sal_Int16 nIterateType );
 
 	double			getIterateInterval() const { return mfIterateInterval; }
-	void			setIterateInterval( double fIterateInterval );
+	SD_DLLPUBLIC void			setIterateInterval( double fIterateInterval );
 
 	::com::sun::star::uno::Any	getTarget() const { return maTarget; }
-	void						setTarget( const ::com::sun::star::uno::Any& rTarget );
+	SD_DLLPUBLIC void						setTarget( const ::com::sun::star::uno::Any& rTarget );
 
 	sal_Bool		hasAfterEffect() const { return mbHasAfterEffect; }
 	void			setHasAfterEffect( sal_Bool bHasAfterEffect ) { mbHasAfterEffect = bHasAfterEffect; }
@@ -165,7 +163,7 @@ public:
 	void			setGroupId( sal_Int32 nGroupId );
 
 	sal_Int16		getTargetSubItem() const { return mnTargetSubItem; }
-	void			setTargetSubItem( sal_Int16 nSubItem );
+	SD_DLLPUBLIC void			setTargetSubItem( sal_Int16 nSubItem );
 
 	::rtl::OUString	getPath() const;
 	void setPath( const ::rtl::OUString& rPath );
@@ -175,8 +173,8 @@ public:
 
 	void setAudio( const ::com::sun::star::uno::Reference< ::com::sun::star::animations::XAudio >& xAudio );
 	bool getStopAudio() const;
-	void setStopAudio();
-	void createAudio( const ::com::sun::star::uno::Any& rSource, double fVolume = 1.0 );
+	SD_DLLPUBLIC void setStopAudio();
+	SD_DLLPUBLIC void createAudio( const ::com::sun::star::uno::Any& rSource, double fVolume = 1.0 );
 	void removeAudio();
 	const ::com::sun::star::uno::Reference< ::com::sun::star::animations::XAudio >& getAudio() const { return mxAudio; }
 
@@ -297,7 +295,7 @@ public:
 
 	CustomAnimationEffectPtr append( const CustomAnimationPresetPtr& pDescriptor, const ::com::sun::star::uno::Any& rTarget, double fDuration = -1.0 );
 	CustomAnimationEffectPtr append( const SdrPathObj& rPathObj, const ::com::sun::star::uno::Any& rTarget, double fDuration = -1.0 );
-	void append( const CustomAnimationEffectPtr& pEffect );
+	SD_DLLPUBLIC void append( const CustomAnimationEffectPtr& pEffect );
 	void insert( EffectSequence::iterator& rPos, const CustomAnimationEffectPtr& pEffect );
 	void replace( const CustomAnimationEffectPtr& pEffect, const CustomAnimationPresetPtr& pDescriptor, double fDuration = -1.0 );
 	void replace( const CustomAnimationEffectPtr& pEffect, const CustomAnimationPresetPtr& pDescriptor, const rtl::OUString& rPresetSubType, double fDuration = -1.0 );
@@ -337,7 +335,7 @@ public:
 	// text group methods
 
 	CustomAnimationTextGroupPtr findGroup( sal_Int32 nGroupId );
-	CustomAnimationTextGroupPtr	createTextGroup( CustomAnimationEffectPtr pEffect, sal_Int32 nTextGrouping, double fTextGroupingAuto, sal_Bool bAnimateForm, sal_Bool bTextReverse );
+	SD_DLLPUBLIC CustomAnimationTextGroupPtr	createTextGroup( CustomAnimationEffectPtr pEffect, sal_Int32 nTextGrouping, double fTextGroupingAuto, sal_Bool bAnimateForm, sal_Bool bTextReverse );
 	void setTextGrouping( CustomAnimationTextGroupPtr pTextGroup, sal_Int32 nTextGrouping );
 	void setAnimateForm( CustomAnimationTextGroupPtr pTextGroup, sal_Bool bAnimateForm );
 	void setTextGroupingAuto( CustomAnimationTextGroupPtr pTextGroup, double fTextGroupingAuto );
diff --git sd/inc/CustomAnimationPreset.hxx sd/inc/CustomAnimationPreset.hxx
index c600fa6..699ca81 100644
--- sd/inc/CustomAnimationPreset.hxx
+++ sd/inc/CustomAnimationPreset.hxx
@@ -59,7 +59,7 @@ public:
 
 	void add( CustomAnimationEffectPtr pEffect );
 
-	::com::sun::star::uno::Reference< ::com::sun::star::animations::XAnimationNode > create( const rtl::OUString& rstrSubType );
+	SD_DLLPUBLIC ::com::sun::star::uno::Reference< ::com::sun::star::animations::XAnimationNode > create( const rtl::OUString& rstrSubType );
 
 	const rtl::OUString& getPresetId() const { return maPresetId; }
 	const rtl::OUString& getProperty() const { return maProperty; }
@@ -108,11 +108,11 @@ public:
 
 	void init();
 
-	static const CustomAnimationPresets& getCustomAnimationPresets();
+	SD_DLLPUBLIC static const CustomAnimationPresets& getCustomAnimationPresets();
 
 	::com::sun::star::uno::Reference< ::com::sun::star::animations::XAnimationNode > getRandomPreset( sal_Int16 nPresetClass ) const;
 
-	CustomAnimationPresetPtr getEffectDescriptor( const rtl::OUString& rPresetId ) const;
+	SD_DLLPUBLIC CustomAnimationPresetPtr getEffectDescriptor( const rtl::OUString& rPresetId ) const;
 //	const AnimationEffect* getEffect( const rtl::OUString& rPresetId ) const;
 //	const AnimationEffect* getEffect( const rtl::OUString& rPresetId, const rtl::OUString& rPresetSubType ) const;
 
diff --git sd/inc/animations.hxx sd/inc/animations.hxx
index 1aa3cc7..3958056 100644
--- sd/inc/animations.hxx
+++ sd/inc/animations.hxx
@@ -1,6 +1,8 @@
 #ifndef _SD_ANIMATIONS_HXX_
 #define _SD_ANIMATIONS_HXX_
 
+#include <sddllapi.h>
+
 namespace sd
 {
 
@@ -21,7 +23,7 @@ typedef std::list< AfterEffectNode > AfterEffectNodeList;
 
 /** inserts the animation node in the given AfterEffectNode at the correct position
 	in the timing hierarchie of its master */
-void stl_process_after_effect_node_func(AfterEffectNode& rNode);
+SD_DLLPUBLIC void stl_process_after_effect_node_func(AfterEffectNode& rNode);
 
 } // namespace sd;
 
diff --git sd/inc/drawdoc.hxx sd/inc/drawdoc.hxx
index 71145d8..2ab3559 100644
--- sd/inc/drawdoc.hxx
+++ sd/inc/drawdoc.hxx
@@ -249,7 +249,7 @@ public:
 
 	SvxNumType          GetPageNumType() const;
 	void			    SetPageNumType(SvxNumType eType) { mePageNumType = eType; }
-	String              CreatePageNumValue(USHORT nNum) const;
+	SD_DLLPUBLIC String              CreatePageNumValue(USHORT nNum) const;
 
 	DocumentType        GetDocumentType() const { return meDocType; }
 
@@ -263,7 +263,7 @@ public:
 		for newly created slides.
 	*/
 	SD_DLLPUBLIC void	CreateFirstPages( SdDrawDocument* pRefDocument = 0 );
-	BOOL                CreateMissingNotesAndHandoutPages();
+	SD_DLLPUBLIC BOOL                CreateMissingNotesAndHandoutPages();
 
 	void	            MovePage(USHORT nPgNum, USHORT nNewPos);
 	void	            InsertPage(SdrPage* pPage, USHORT nPos=0xFFFF);
@@ -439,7 +439,7 @@ public:
 	/** deprecated*/
 	SdAnimationInfo*    GetAnimationInfo(SdrObject* pObject) const;
 
-	static 	SdAnimationInfo* GetShapeUserData(SdrObject& rObject, bool bCreate = false );
+	SD_DLLPUBLIC static 	SdAnimationInfo* GetShapeUserData(SdrObject& rObject, bool bCreate = false );
 
 	SdIMapInfo*         GetIMapInfo( SdrObject* pObject ) const;
 	IMapObject*         GetHitIMapObject( SdrObject* pObject, const Point& rWinPoint, const ::Window& rCmpWnd );
@@ -592,6 +592,10 @@ public:
 	/* converts the given western font height to a corresponding ctl font height, deppending on the system language */
 	static sal_uInt32 convertFontHeightToCTL( sal_uInt32 nWesternFontHeight );
 
+	/** Get the style sheet pool if it was a SdStyleSheetPool.
+	 */
+	SD_DLLPUBLIC SdStyleSheetPool* GetSdStyleSheetPool() const;
+
 private:
     /** This member stores the printer independent layout mode.  Please
         refer to <member>SetPrinterIndependentLayout()</member> for its
diff --git sd/inc/helper/simplereferencecomponent.hxx sd/inc/helper/simplereferencecomponent.hxx
index 3a19ee9..f8b8554 100644
--- sd/inc/helper/simplereferencecomponent.hxx
+++ sd/inc/helper/simplereferencecomponent.hxx
@@ -34,14 +34,10 @@
 #include "osl/interlck.h"
 #include "sal/types.h"
 
-#ifndef INCLUDED_CSTDDEF
 #include <cstddef>
-#define INCLUDED_CSTDDEF
-#endif
-#ifndef INCLUDED_NEW
 #include <new>
-#define INCLUDED_NEW
-#endif
+
+#include <sddllapi.h>
 
 namespace sd {
 
@@ -60,8 +56,8 @@ public:
         the total number of calls to release() by a plattform dependent amount
         (which, hopefully, is quite large).
      */
-    void acquire();
-	void release();
+    SD_DLLPUBLIC void acquire();
+    SD_DLLPUBLIC void release();
 
 	void Dispose();
 
diff --git sd/inc/stlpool.hxx sd/inc/stlpool.hxx
index 9c7f039..d4b7d9d 100644
--- sd/inc/stlpool.hxx
+++ sd/inc/stlpool.hxx
@@ -47,6 +47,8 @@
 #include <stlfamily.hxx>
 #include <stlsheet.hxx>
 
+#include <sddllapi.h>
+
 class SdStyleSheet;
 class SdDrawDocument;
 class SdPage;
@@ -82,7 +84,7 @@ public:
 							had to be created. This is used to assert errors in documents
 							when styles are missing.
 	*/
-	void                CreateLayoutStyleSheets(const String& rLayoutName, sal_Bool bCheck = sal_False );
+	SD_DLLPUBLIC void                CreateLayoutStyleSheets(const String& rLayoutName, sal_Bool bCheck = sal_False );
 	void                EraseLayoutStyleSheets(const String& rLayoutName);
 	List*               CreateLayoutSheetNames(const String& rLayoutName) const;
 	void				CreateLayoutSheetList(const String& rLayoutName, SdStyleSheetVector& rLayoutSheets);
@@ -150,6 +152,3 @@ private:
 };
 
 #endif	   // _SD_STLPOOL_HXX
-
-
-
diff --git sd/source/core/drawdoc4.cxx sd/source/core/drawdoc4.cxx
index abd6968..4454125 100644
--- sd/source/core/drawdoc4.cxx
+++ sd/source/core/drawdoc4.cxx
@@ -1543,6 +1543,11 @@ sal_uInt32 SdDrawDocument::convertFontHeightToCTL( sal_uInt32 nWesternFontHeight
 	return nWesternFontHeight;
 }
 
+SdStyleSheetPool* SdDrawDocument::GetSdStyleSheetPool() const
+{
+	return dynamic_cast< SdStyleSheetPool* >( GetStyleSheetPool() );
+}
+
 ModifyGuard::ModifyGuard( DrawDocShell* pDocShell )
 : mpDocShell( pDocShell ), mpDoc( 0 )
 {
diff --git sd/source/filter/eppt/exports.map sd/source/filter/eppt/exports.map
index 4a57b50..e69de29 100644
--- sd/source/filter/eppt/exports.map
+++ sd/source/filter/eppt/exports.map
@@ -1,7 +0,0 @@
-PPTEXPORTER_1_0 {
-        global:
-                ExportPPT;
-
-        local:
-                *;
-};
diff --git sd/source/filter/eppt/makefile.mk sd/source/filter/eppt/makefile.mk
index 91ee77f..808984a 100644
--- sd/source/filter/eppt/makefile.mk
+++ sd/source/filter/eppt/makefile.mk
@@ -51,29 +51,6 @@ SLOFILES =	$(SLO)$/eppt.obj				\
 			$(SLO)$/pptexanimations.obj		\
 			$(SLO)$/pptexsoundcollection.obj
 
-SHL1TARGET	=	emp$(DLLPOSTFIX)
-SHL1IMPLIB	=	eppt
-SHL1VERSIONMAP=exports.map
-SHL1DEF 	=	$(MISC)$/$(SHL1TARGET).def
-SHL1LIBS	=	$(SLB)$/eppt.lib
-
-DEF1NAME=$(SHL1TARGET)
-
-SHL1STDLIBS = 	$(SVXLIB)			\
-                $(SFX2LIB)          \
-				$(SVTOOLLIB)		\
-                $(SOTLIB)           \
-				$(GOODIESLIB)		\
-				$(VCLLIB)			\
-				$(SOTLIB)			\
-				$(UNOTOOLSLIB)		\
-				$(TOOLSLIB) 		\
-				$(UCBHELPERLIB)		\
-				$(CPPULIB)			\
-				$(SALLIB)			\
-				$(COMPHELPERLIB)	\
-	            $(I18NISOLANGLIB)
-
 # --- Targets --------------------------------------------------------------
 
 .INCLUDE : target.mk
diff --git sd/source/filter/makefile.mk sd/source/filter/makefile.mk
index 6e095f0..6590afa 100644
--- sd/source/filter/makefile.mk
+++ sd/source/filter/makefile.mk
@@ -48,8 +48,6 @@ CDEFS+= -DDBG_ANIM_LOG
 
 SLOFILES =\
 		$(SLO)$/sdfilter.obj	\
-		$(SLO)$/pptin.obj		\
-		$(SLO)$/propread.obj	\
 		$(SLO)$/sdpptwrp.obj	
 
 EXCEPTIONSFILES= \
diff --git sd/source/filter/ppt/makefile.mk sd/source/filter/ppt/makefile.mk
index 580b3fe..219fbe0 100644
--- sd/source/filter/ppt/makefile.mk
+++ sd/source/filter/ppt/makefile.mk
@@ -33,6 +33,7 @@ PRJ=..$/..$/..
 PRJNAME=sd
 TARGET=ppt
 ENABLE_EXCEPTIONS=TRUE
+VISIBILITY_HIDDEN=TRUE
 
 # --- Settings -----------------------------------------------------
 
@@ -48,8 +49,10 @@ CDEFS+= -DDBG_ANIM_LOG
 # --- Files --------------------------------------------------------
 
 SLOFILES =	\
-		$(SLO)$/pptinanimations.obj\
-		$(SLO)$/pptatom.obj\
+		$(SLO)$/propread.obj \
+		$(SLO)$/pptin.obj \
+		$(SLO)$/pptinanimations.obj \
+		$(SLO)$/pptatom.obj \
 		$(SLO)$/ppt97animations.obj
 
 # --- Targets --------------------------------------------------------------
diff --git sd/source/filter/ppt/pptin.cxx sd/source/filter/ppt/pptin.cxx
new file mode 100644
index 0000000..4e92f7c
--- /dev/null
+++ sd/source/filter/ppt/pptin.cxx
@@ -0,0 +1,2746 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: pptin.cxx,v $
+ * $Revision: 1.92.78.3 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_sd.hxx"
+
+#include <svx/numitem.hxx>
+
+#include <unotools/ucbstreamhelper.hxx>
+#include <vcl/wrkwin.hxx>
+#include <svx/svxids.hrc>
+#include <svx/svdfppt.hxx>
+#include <svx/svditer.hxx>
+#include <sfx2/docfile.hxx>
+#include <sfx2/app.hxx>
+#include <svx/svdograf.hxx>
+#include <svx/svdlayer.hxx>
+#include <vcl/msgbox.hxx>
+#include <svtools/style.hxx>
+#include <svx/xflclit.hxx>
+#include <svx/eeitem.hxx>
+#include <svx/colritem.hxx>
+#include <svtools/whiter.hxx>
+#include <svx/xgrad.hxx>
+#include <svx/xflgrit.hxx>
+#include <svx/xbtmpit.hxx>
+#include <svx/xlnclit.hxx>
+#include <svx/adjitem.hxx>
+#include <svx/editeng.hxx>
+#include <svx/bulitem.hxx>
+#include <svx/lrspitem.hxx>
+#include <svx/lspcitem.hxx>
+#include <svx/tstpitem.hxx>
+
+#include <sfx2/docinf.hxx>
+
+#include "glob.hrc"
+#include "pptin.hxx"
+#include "Outliner.hxx"
+#include "drawdoc.hxx"
+#include "sdpage.hxx"
+#include "sdresid.hxx"
+#include "pres.hxx"
+#include "sdresid.hxx"
+#include "stlpool.hxx"
+#include "anminfo.hxx"
+#include <svx/gallery.hxx>
+#include <tools/urlobj.hxx>
+#include <svx/numitem.hxx>
+#include <svtools/itempool.hxx>
+#include <svx/fhgtitem.hxx>
+#include <svx/svdopage.hxx>
+#include <svx/svdomedia.hxx>
+#include <svx/svdogrp.hxx>
+#include "propread.hxx"
+#include <cusshow.hxx>
+#include <vcl/bmpacc.hxx>
+
+#include "../../ui/inc/DrawDocShell.hxx"
+#include "../../ui/inc/FrameView.hxx"
+#include "../../ui/inc/optsitem.hxx"
+
+#include <svtools/fltrcfg.hxx>
+#include <sfx2/progress.hxx>
+#include <unotools/localfilehelper.hxx>
+#include <svx/editstat.hxx>
+#include <svtools/pathoptions.hxx>
+#include <sfx2/docfac.hxx>
+#define MAX_USER_MOVE		2
+
+#include "pptinanimations.hxx"
+#include "ppt97animations.hxx"
+
+#include <com/sun/star/document/XDocumentProperties.hpp>
+#include <com/sun/star/document/XDocumentPropertiesSupplier.hpp>
+
+
+using namespace ::com::sun::star;
+
+
+SdPPTImport::SdPPTImport( SdDrawDocument* pDocument, SvStream& rDocStream, SvStorage& rStorage, SfxMedium& rMedium, MSFilterTracer* pTracer )
+{
+
+    sal_uInt32 nImportFlags = 0;
+
+#ifdef DBG_UTIL
+    PropRead* pSummaryInformation = new PropRead( rStorage, String( RTL_CONSTASCII_USTRINGPARAM( "\005SummaryInformation" ) ) );
+    if ( pSummaryInformation->IsValid() )
+    {
+        pSummaryInformation->Read();
+        sal_uInt8 aPropSetGUID[ 16 ] =
+        {
+            0xe0, 0x85, 0x9f, 0xf2, 0xf9, 0x4f, 0x68, 0x10, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9
+        };
+        Section* pSection = (Section*)pSummaryInformation->GetSection( aPropSetGUID );
+        if ( pSection )
+        {
+		    PropItem aPropItem;
+            if ( pSection->GetProperty( PID_COMMENTS, aPropItem ) )
+            {
+                String aComment;
+                aPropItem.Read( aComment );
+                if ( aComment.Search( String( RTL_CONSTASCII_USTRINGPARAM( "Applixware" ) ), 0 ) != STRING_NOTFOUND )
+                {
+                    nImportFlags |= PPT_IMPORTFLAGS_NO_TEXT_ASSERT;
+                }
+            }
+        }
+    }
+    delete pSummaryInformation;
+#endif
+
+	PowerPointImportParam aParam( rDocStream, nImportFlags, pTracer );
+    SvStream* pCurrentUserStream = rStorage.OpenSotStream( String( RTL_CONSTASCII_USTRINGPARAM( "Current User" ) ), STREAM_STD_READ );
+	if( pCurrentUserStream )
+	{
+		*pCurrentUserStream >> aParam.aCurrentUserAtom;
+		delete pCurrentUserStream;
+	}
+
+	if( pDocument )
+	{
+		// iterate over all styles
+		SdStyleSheetPool* pStyleSheetPool = pDocument->GetSdStyleSheetPool();
+
+		sal_uInt32 nStyles = pStyleSheetPool ? pStyleSheetPool->GetStyles().size() : 0;
+		for (sal_uInt32 nStyle = 0; nStyle < nStyles; nStyle++)
+		{
+			SfxStyleSheet* pSheet = static_cast<SfxStyleSheet*>( pStyleSheetPool->GetStyles()[nStyle].get() );
+			SfxItemSet& rSet = pSheet->GetItemSet();
+
+			// if autokerning is set in style, override it, ppt has no autokerning
+			if( rSet.GetItemState( EE_CHAR_PAIRKERNING, FALSE ) == SFX_ITEM_SET )
+				rSet.ClearItem( EE_CHAR_PAIRKERNING );
+		}
+	}
+
+    pFilter = new ImplSdPPTImport( pDocument, rStorage, rMedium, aParam );
+}
+
+sal_Bool SdPPTImport::Import()
+{
+    return pFilter->Import();
+}
+
+SdPPTImport::~SdPPTImport()
+{
+    delete pFilter;
+}
+
+ImplSdPPTImport::ImplSdPPTImport( SdDrawDocument* pDocument, SvStorage& rStorage_, SfxMedium& rMedium, PowerPointImportParam& rParam )
+:	SdrPowerPointImport     ( rParam, rMedium.GetBaseURL() )
+,	mrMed					( rMedium )
+,	mrStorage				( rStorage_ )
+,	mbDocumentFound			( FALSE )
+,	mnFilterOptions			( 0 )
+{
+	mpDoc = pDocument;
+	if ( bOk )
+	{
+		mbDocumentFound = SeekToDocument( &maDocHd ); 							// maDocHd = the latest DocumentHeader
+		while ( SeekToRec( rStCtrl, PPT_PST_Document, nStreamLen, &maDocHd ) )
+			mbDocumentFound = TRUE;
+
+		UINT32 nDggContainerOfs = 0;
+
+		if ( mbDocumentFound )
+		{
+			ULONG nPosMerk = rStCtrl.Tell();
+
+            pStData = rStorage_.OpenSotStream( String( RTL_CONSTASCII_USTRINGPARAM( "Pictures" ) ), STREAM_STD_READ );
+
+			rStCtrl.Seek( maDocHd.GetRecBegFilePos() + 8 );
+			ULONG nDocLen = maDocHd.GetRecEndFilePos();
+			DffRecordHeader aPPDGHd;
+			if ( SeekToRec( rStCtrl, PPT_PST_PPDrawingGroup, nDocLen, &aPPDGHd ) )
+			{
+				ULONG nPPDGLen = aPPDGHd.GetRecEndFilePos();
+				if ( SeekToRec( rStCtrl, DFF_msofbtDggContainer, nPPDGLen, NULL ) )
+					nDggContainerOfs = rStCtrl.Tell();
+			}
+			rStCtrl.Seek( nPosMerk );
+		}
+		sal_uInt32 nSvxMSDffOLEConvFlags2 = 0;
+
+		SvtFilterOptions* pBasOpt = SvtFilterOptions::Get();
+		if ( pBasOpt )
+		{
+			if ( pBasOpt->IsLoadPPointBasicCode() )
+				mnFilterOptions |= 1;
+			if ( pBasOpt->IsMathType2Math() )
+				nSvxMSDffOLEConvFlags2 |= OLE_MATHTYPE_2_STARMATH;
+			if ( pBasOpt->IsWinWord2Writer() )
+				nSvxMSDffOLEConvFlags2 |= OLE_WINWORD_2_STARWRITER;
+			if ( pBasOpt->IsExcel2Calc() )
+				nSvxMSDffOLEConvFlags2 |= OLE_EXCEL_2_STARCALC;
+			if ( pBasOpt->IsPowerPoint2Impress() )
+				nSvxMSDffOLEConvFlags2 |= OLE_POWERPOINT_2_STARIMPRESS;
+		}
+
+		InitSvxMSDffManager( nDggContainerOfs, pStData, nSvxMSDffOLEConvFlags2 );
+		SetSvxMSDffSettings( SVXMSDFF_SETTINGS_CROP_BITMAPS
+			| SVXMSDFF_SETTINGS_IMPORT_IAS | SVXMSDFF_SETTINGS_IMPORT_PPT );
+		SetModel( mpDoc, 576 );
+	}
+}
+
+//////////////////////////////////////////////////////////////////////////
+//
+// Dtor
+//
+//////////////////////////////////////////////////////////////////////////
+
+ImplSdPPTImport::~ImplSdPPTImport()
+{
+	for ( void* pPtr = maSlideNameList.First(); pPtr; pPtr = maSlideNameList.Next() )
+		delete (String*)pPtr;
+	delete pStData;
+}
+
+//////////////////////////////////////////////////////////////////////////
+//
+// Import
+//
+//////////////////////////////////////////////////////////////////////////
+
+sal_Bool ImplSdPPTImport::Import()
+{
+	if ( !bOk )
+		return FALSE;
+
+	pSdrModel->setLock( sal_True );
+	SdrOutliner& rOutl = mpDoc->GetDrawOutliner();
+	sal_uInt32 nControlWord = rOutl.GetEditEngine().GetControlWord();
+	nControlWord |=  EE_CNTRL_ULSPACESUMMATION;
+	nControlWord &=~ EE_CNTRL_ULSPACEFIRSTPARA;
+	((EditEngine&)rOutl.GetEditEngine()).SetControlWord( nControlWord );
+
+	SdrLayerAdmin& rAdmin = mpDoc->GetLayerAdmin();
+	mnBackgroundLayerID = rAdmin.GetLayerID( String( SdResId( STR_LAYER_BCKGRND )), FALSE );
+	mnBackgroundObjectsLayerID = rAdmin.GetLayerID( String( SdResId( STR_LAYER_BCKGRNDOBJ )), FALSE );
+
+	::sd::DrawDocShell* pDocShell = mpDoc->GetDocSh();
+	if ( pDocShell )
+		SeekOle( pDocShell, mnFilterOptions );
+
+	// hyperlinks
+	PropRead* pDInfoSec2 = new PropRead( mrStorage, String( RTL_CONSTASCII_USTRINGPARAM( "\005DocumentSummaryInformation" ) ) );
+	if ( pDInfoSec2->IsValid() )
+	{
+		PropItem aPropItem;
+
+		UINT32 nType, nPropSize, nPropCount;
+
+		pDInfoSec2->Read();
+
+		BYTE aPropSetGUID[ 16 ] =
+		{
+			0x02, 0xd5, 0xcd, 0xd5, 0x9c, 0x2e, 0x1b, 0x10, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae
+		};
+		Section* pSection = (Section*)pDInfoSec2->GetSection( aPropSetGUID );
+		if ( pSection )
+		{
+			if ( pSection->GetProperty( PID_SLIDECOUNT, aPropItem ) )
+			{
+				aPropItem >> nType;
+				if ( ( nType == VT_I4 ) || ( nType == VT_UI4 ) )
+				{
+					// examine PID_HEADINGPAIR to get the correct entry for PID_DOCPARTS
+					UINT32 nSlideCount, nVecCount;
+					aPropItem >> nSlideCount;
+					if ( nSlideCount && pSection->GetProperty( PID_HEADINGPAIR, aPropItem ) )
+					{
+						UINT32	nSlideTitleIndex = 0, nSlideTitleCount = 0;
+						UINT32	nFontIndex, nFontCount = 0;
+						UINT32	nDesignTemplateIndex, nDesignTemplateCount = 0;
+						UINT32	i, nTemp, nEntryCount = 0;
+
+						String aUString;
+
+						aPropItem >> nType
+								  >> nVecCount;
+
+						if ( ( nType == ( VT_VARIANT | VT_VECTOR ) ) && ( nVecCount ^ 1 ) )
+						{
+							nVecCount >>= 1;
+
+							for ( i = 0; i < nVecCount; i++ )
+							{
+								if ( !aPropItem.Read( aUString, VT_EMPTY, FALSE ) )
+									break;
+								aPropItem >> nType;
+								if ( ( nType != VT_I4 ) && ( nType != VT_UI4 ) )
+									break;
+								aPropItem >> nTemp;
+								if ( aUString.EqualsAscii("Slide Titles") || aUString.EqualsAscii("Folientitel") )
+								{
+									nSlideTitleCount = nTemp;
+									nSlideTitleIndex = nEntryCount;
+								}
+								else if ( aUString.EqualsAscii("Fonts Used") )
+								{
+									nFontCount = nTemp;
+									nFontIndex = nEntryCount;
+								}
+								else if ( aUString.EqualsAscii("Design Template") )
+								{
+									nDesignTemplateCount = nTemp;
+									nDesignTemplateIndex = nEntryCount;
+								}
+								nEntryCount += nTemp;
+							}
+						}
+						if ( ( nSlideCount == nSlideTitleCount ) && pSection->GetProperty( PID_DOCPARTS, aPropItem ) )
+						{
+							aPropItem >> nType
+									  >> nVecCount;
+
+							if ( ( nVecCount >= ( nSlideTitleIndex + nSlideTitleCount ) )
+									&& ( nType == ( VT_LPSTR | VT_VECTOR ) ) )
+							{
+								for ( i = 0; i != nSlideTitleIndex; i++ )
+								{
+									aPropItem >> nTemp;
+									aPropItem.SeekRel( nTemp );
+								}
+								for ( i = 0; i < nSlideTitleCount; i++ )
+								{
+									if ( !aPropItem.Read( aUString, nType, FALSE ) )
+										break;
+									String* pString = new String( aUString );
+									if ( pString->EqualsAscii( "No Slide Title" ))
+										*pString = String();
+									else
+									{
+										void* pPtr;
+										for ( pPtr = maSlideNameList.First(); pPtr; pPtr = maSlideNameList.Next() )
+										{
+											if ( *((String*)pPtr ) == *pString )
+											{
+												*pString = String();
+												break;
+											}
+										}
+									}
+									maSlideNameList.Insert( pString, LIST_APPEND );
+								}
+							}
+						}
+					}
+				}
+			}
+
+			BYTE aUserPropSetGUID[ 16 ] =
+			{
+				0x05, 0xd5, 0xcd, 0xd5, 0x9c, 0x2e, 0x1b, 0x10, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae
+			};
+			pSection = (Section*)pDInfoSec2->GetSection( aUserPropSetGUID );
+			if ( pSection )
+			{
+				Dictionary aDict;
+				if ( pSection->GetDictionary( aDict ) )
+				{
+					UINT32 nPropId = aDict.GetProperty( rtl::OUString::createFromAscii("_PID_HLINKS" ));
+					if ( nPropId )
+					{
+						if ( pSection->GetProperty( nPropId, aPropItem ) )
+						{
+							aPropItem.Seek( STREAM_SEEK_TO_BEGIN );
+							aPropItem >> nType;
+							if ( nType == VT_BLOB )
+							{
+								aPropItem >> nPropSize
+										  >> nPropCount;
+
+								if ( ! ( nPropCount % 6 ) )
+								{
+									UINT32 i;
+
+									nPropCount /= 6;	// 6 propertys a hyperlink
+
+									SdHyperlinkEntry* pHyperlink = 0;
+									for ( i = 0; i < nPropCount; i++ )
+									{
+										pHyperlink = new SdHyperlinkEntry;
+										pHyperlink->nIndex = 0;
+										aPropItem >> nType;
+										if ( nType != VT_I4 )
+											break;
+										aPropItem >> pHyperlink->nPrivate1
+												  >> nType;
+										if ( nType != VT_I4 )
+											break;
+										aPropItem >> pHyperlink->nPrivate2
+												  >> nType;
+										if ( nType != VT_I4 )
+											break;
+										aPropItem >> pHyperlink->nPrivate3
+												  >> nType;
+										if ( nType != VT_I4 )
+											break;
+										aPropItem >> pHyperlink->nInfo;
+										if ( !aPropItem.Read( pHyperlink->aTarget, VT_EMPTY ) )
+											break;
+
+										// #n382718# (and #n261623#) Convert '\\' notation to 'smb://'
+										INetURLObject aUrl( pHyperlink->aTarget, INET_PROT_FILE );
+										pHyperlink->aTarget = aUrl.GetMainURL( INetURLObject::NO_DECODE );
+
+										if ( !aPropItem.Read( pHyperlink->aSubAdress, VT_EMPTY ) )
+											break;
+										pHyperlink->nStartPos = pHyperlink->nEndPos = -1;
+
+						                if ( pHyperlink->aSubAdress.Len() ) // get the converted subadress
+						                {
+							                sal_uInt32 nPageNumber = 0;
+    						                String aString( pHyperlink->aSubAdress );
+							                ByteString aStringAry[ 3 ];
+							                sal_uInt16 nTokenCount = aString.GetTokenCount( ',' );
+							                if ( nTokenCount > 3 )
+								                nTokenCount = 3;
+											sal_uInt16 nToken;
+                                            for( nToken = 0; nToken < nTokenCount; nToken++ )
+                                                aStringAry[ nToken ] = ByteString( aString.GetToken( nToken, (sal_Unicode)',' ), RTL_TEXTENCODING_UTF8 );
+
+                                            sal_Bool bSucceeded = sal_False;
+
+                                            // first pass, searching for a SlideId
+                                            for( nToken = 0; nToken < nTokenCount; nToken++ )
+                                            {
+                                                if ( aStringAry[ nToken ].IsNumericAscii() )
+                                                {
+                                                    sal_Int32 nNumber = aStringAry[ nToken ].ToInt32();
+                                                    if ( nNumber & ~0xff )
+                                                    {
+											            PptSlidePersistList* pPageList = GetPageList( PPT_SLIDEPAGE );
+											            if ( pPageList )
+											            {
+												            sal_uInt16 nPage = pPageList->FindPage( nNumber );
+												            if ( nPage != PPTSLIDEPERSIST_ENTRY_NOTFOUND )
+                                                            {
+													            nPageNumber = nPage;
+                                                                bSucceeded = sal_True;
+                                                                break;
+                                                            }
+											            }
+                                                    }
+                                                }
+                                            }
+                                            if ( !bSucceeded )
+                                            {   // second pass, searching for a SlideName
+							                    for ( nToken = 0; nToken < nTokenCount; nToken++ )
+							                    {
+							                        String aToken( aString.GetToken( nToken, (sal_Unicode)',' ) );
+								                    for ( void* pPtr = maSlideNameList.First(); pPtr; pPtr = maSlideNameList.Next() )
+								                    {
+									                    if ( *(String*)pPtr == aToken )
+									                    {
+										                    nPageNumber = maSlideNameList.GetCurPos();
+                                                            bSucceeded = sal_True;
+										                    break;
+									                    }
+								                    }
+							                    }
+                                            }
+                                            if ( !bSucceeded )
+                                            {   // third pass, searching for a slide number
+                                                for ( nToken = 0; nToken < nTokenCount; nToken++ )
+                                                {
+                                                    if ( aStringAry[ nToken ].IsNumericAscii() )
+                                                    {
+                                                        sal_Int32 nNumber = aStringAry[ nToken ].ToInt32();
+                                                        if ( ( nNumber & ~0xff ) == 0 )
+                                                        {
+                                                            nPageNumber = (sal_uInt32)nNumber - 1;
+                                                            bSucceeded = sal_True;
+                                                            break;
+                                                        }
+                                                    }
+                                                }
+                                            }
+                                            if ( bSucceeded )
+                                            {
+												if ( nPageNumber < maSlideNameList.Count() )
+													pHyperlink->aConvSubString = *(String*)maSlideNameList.GetObject( nPageNumber );
+												if ( !pHyperlink->aConvSubString.Len() )
+												{
+	                                        		pHyperlink->aConvSubString = String( SdResId( STR_PAGE ) );
+			                                        pHyperlink->aConvSubString.Append( sal_Unicode( ' ' ) );
+                                                    pHyperlink->aConvSubString.Append( mpDoc->CreatePageNumValue( (USHORT)nPageNumber + 1 ) );
+							                    }
+                                            }
+                                        }
+										aHyperList.Insert( pHyperlink, LIST_APPEND );
+									}
+									if ( i != nPropCount )
+										delete pHyperlink;
+								}
+							}
+						}
+					}
+				}
+			}
+		}
+	}
+	delete pDInfoSec2;
+
+	if ( mbDocumentFound )
+	{
+		rStCtrl.Seek( maDocHd.GetRecBegFilePos() + 8 );
+		// HyperList lesen / Indexe der einzelnen Eintraege setzen
+		DffRecordHeader aHyperHd;
+		if ( SeekToRec( rStCtrl, PPT_PST_ExObjList, maDocHd.GetRecEndFilePos(), &aHyperHd ) )
+		{
+			UINT32 nExObjHyperListLen = aHyperHd.GetRecEndFilePos();
+			for ( void* pPtr = aHyperList.First(); pPtr; pPtr = aHyperList.Next() )
+			{
+				DffRecordHeader aHyperE;
+				if ( !SeekToRec( rStCtrl, PPT_PST_ExHyperlink, nExObjHyperListLen, &aHyperE ) )
+					break;
+				if ( !SeekToRec( rStCtrl, PPT_PST_ExHyperlinkAtom, nExObjHyperListLen, NULL, 0 ) )
+					break;
+				rStCtrl.SeekRel( 8 );
+				rStCtrl >> ((SdHyperlinkEntry*)pPtr)->nIndex;
+				aHyperE.SeekToEndOfRecord( rStCtrl );
+			}
+		}
+	}
+
+    Size aVisAreaSize;
+	switch ( aUserEditAtom.eLastViewType )
+	{
+		case 5 :	// notes master
+		case 3 :	// notes
+            aVisAreaSize = aDocAtom.GetNotesPageSize();
+        break;
+        default :
+            aVisAreaSize = aDocAtom.GetSlidesPageSize();
+	}
+    Scale( aVisAreaSize );
+    pDocShell->SetVisArea( Rectangle( Point(), aVisAreaSize ) );
+
+	///////////////////////////////////////////////////////////
+	// create master pages:
+	///////////////////////////////////////////////////////////
+	SfxProgress* pStbMgr = new SfxProgress( pDocShell, String( SdResId( STR_POWERPOINT_IMPORT ) ),
+			pMasterPages->Count() + pSlidePages->Count() + pNotePages->Count() );
+
+	UINT32 nImportedPages = 0;
+	{
+		UINT16			nMasterAnz = GetPageCount( PPT_MASTERPAGE );
+
+		for ( USHORT nMasterNum = 0; nMasterNum < nMasterAnz; nMasterNum++ )
+		{
+			SetPageNum( nMasterNum, PPT_MASTERPAGE );
+			SdPage* pPage = (SdPage*)MakeBlancPage( TRUE );
+			if ( pPage )
+			{
+				BOOL bNotesMaster = (*GetPageList( eAktPageKind ) )[ nAktPageNum ]->bNotesMaster;
+				BOOL bStarDrawFiller = (*GetPageList( eAktPageKind ) )[ nAktPageNum ]->bStarDrawFiller;
+
+				PageKind ePgKind = ( bNotesMaster ) ? PK_NOTES : PK_STANDARD;
+				pPage->SetPageKind( ePgKind );
+				pSdrModel->InsertMasterPage( (SdrPage*)pPage );
+				if ( bNotesMaster && bStarDrawFiller )
+					((SdPage*)pPage)->SetAutoLayout( AUTOLAYOUT_NOTES, TRUE );
+				if ( nMasterNum )
+				{
+					boost::optional< sal_Int16 > oStartNumbering;
+					SfxStyleSheet* pSheet;
+					if ( nMasterNum == 1 )
+					{
+						///////////////////
+						// standardsheet //
+						///////////////////
+						pSheet = (SfxStyleSheet*)mpDoc->GetStyleSheetPool()->Find( String(SdResId( STR_STANDARD_STYLESHEET_NAME )), SD_STYLE_FAMILY_GRAPHICS );
+						if ( pSheet )
+						{
+							SfxItemSet& rItemSet = pSheet->GetItemSet();
+							PPTParagraphObj aParagraph( *pPPTStyleSheet, TSS_TYPE_TEXT_IN_SHAPE, 0 );
+							PPTPortionObj aPortion( *pPPTStyleSheet, TSS_TYPE_TEXT_IN_SHAPE, 0 );
+							aParagraph.AppendPortion( aPortion );
+							aParagraph.ApplyTo( rItemSet, oStartNumbering, (SdrPowerPointImport&)*this, 0xffffffff, NULL );
+							aPortion.ApplyTo( rItemSet, (SdrPowerPointImport&)*this, 0xffffffff );
+						}
+					}
+
+					// PSEUDO
+					pSheet = (SfxStyleSheet*)mpDoc->GetStyleSheetPool()->Find( String(SdResId( STR_PSEUDOSHEET_BACKGROUNDOBJECTS )), SD_STYLE_FAMILY_PSEUDO );
+					if ( pSheet )
+					{
+						SfxItemSet& rItemSet = pSheet->GetItemSet();
+						PPTParagraphObj aParagraph( *pPPTStyleSheet, TSS_TYPE_TEXT_IN_SHAPE, 0 );
+						PPTPortionObj aPortion( *pPPTStyleSheet, TSS_TYPE_TEXT_IN_SHAPE, 0 );
+						aParagraph.AppendPortion( aPortion );
+						aParagraph.ApplyTo( rItemSet, oStartNumbering, (SdrPowerPointImport&)*this, 0xffffffff, NULL );
+						aPortion.ApplyTo( rItemSet, (SdrPowerPointImport&)*this, 0xffffffff );
+					}
+
+					///////////////////////////////////////////////////////////
+					// create layoutstylesheets, set layoutname and stylesheet
+					// (nur auf Standard- und Notizseiten)
+					///////////////////////////////////////////////////////////
+					String aLayoutName( SdResId( STR_LAYOUT_DEFAULT_NAME ) );
+					if ( nMasterNum > 2 )
+					{
+						if ( ePgKind == PK_STANDARD )
+						{   // Standardseite: Neues Praesentationslayout erzeugen
+							aLayoutName = String( SdResId( STR_LAYOUT_DEFAULT_TITLE_NAME ) );
+							aLayoutName += String::CreateFromInt32( (sal_Int32)( ( nMasterNum + 1 ) / 2 - 1 ) );
+							( (SdStyleSheetPool*)mpDoc->GetStyleSheetPool() )->CreateLayoutStyleSheets( aLayoutName );
+						}
+						else	// Notizseite: Praesentationslayout von der Standardseite verwenden
+							aLayoutName = ( (SdPage*)mpDoc->GetMasterPage( nMasterNum - 1 ) )->GetName();
+					}
+					pPage->SetName( aLayoutName );
+					aLayoutName.AppendAscii( RTL_CONSTASCII_STRINGPARAM( SD_LT_SEPARATOR ));
+					aLayoutName += String( SdResId( STR_LAYOUT_OUTLINE ) );
+					pPage->SetLayoutName( aLayoutName );
+
+					/////////////////////
+					// set stylesheets //
+					/////////////////////
+					if ( pPage->GetPageKind() == PK_STANDARD )
+					{
+						UINT32 nTitleInstance = TSS_TYPE_PAGETITLE;
+						UINT32 nOutlinerInstance = TSS_TYPE_BODY;
+//						BOOL bSwapStyleSheet = pSlideLayout->eLayout == PPT_LAYOUT_TITLEMASTERSLIDE;
+//						if ( bSwapStyleSheet )
+//						{
+//							nTitleInstance = TSS_TYPE_TITLE;
+//							nOutlinerInstance = TSS_TYPE_SUBTITLE;
+//						}
+						/////////////////////
+						// titelstylesheet //
+						/////////////////////
+						pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_TITLE );
+						if ( pSheet )
+						{
+							SfxItemSet& rItemSet = pSheet->GetItemSet();
+							PPTParagraphObj aParagraph( *pPPTStyleSheet, nTitleInstance, 0 );
+							PPTPortionObj aPortion( *pPPTStyleSheet, nTitleInstance, 0 );
+							aParagraph.AppendPortion( aPortion );
+							aParagraph.ApplyTo( rItemSet, oStartNumbering, (SdrPowerPointImport&)*this, 0xffffffff, NULL );
+							aPortion.ApplyTo( rItemSet, (SdrPowerPointImport&)*this, 0xffffffff );
+						}
+						////////////////////////
+						// outlinerstylesheet //
+						////////////////////////
+						UINT16 nLevel;
+						PPTParagraphObj* pParagraphs[ 9 ];
+						PPTParagraphObj* pPreviousPara = NULL;
+
+						for ( nLevel = 0; nLevel < 9; nLevel++ )
+						{
+							String aName( pPage->GetLayoutName() );
+							aName.Append( (sal_Unicode)( ' ' ) );
+							aName.Append( String::CreateFromInt32( nLevel + 1 ) );
+							SfxStyleSheet* pOutlineSheet = (SfxStyleSheet*)mpDoc->GetStyleSheetPool()->Find( aName, SD_STYLE_FAMILY_MASTERPAGE );
+							DBG_ASSERT( pOutlineSheet, "Vorlage fuer Gliederungsobjekt nicht gefunden" );
+							if ( pOutlineSheet )
+							{
+								pParagraphs[ nLevel ] = new PPTParagraphObj( *pPPTStyleSheet, nOutlinerInstance, nLevel );
+								SfxItemSet& rItemSet = pOutlineSheet->GetItemSet();
+								PPTPortionObj aPortion( *pPPTStyleSheet, nOutlinerInstance, nLevel );
+								pParagraphs[ nLevel ]->AppendPortion( aPortion );
+								pParagraphs[ nLevel ]->ApplyTo( rItemSet, oStartNumbering, (SdrPowerPointImport&)*this, 0xffffffff, pPreviousPara );
+								aPortion.ApplyTo( rItemSet, (SdrPowerPointImport&)*this, 0xffffffff );
+								pPreviousPara = pParagraphs[ nLevel ];
+							}
+							else
+								pParagraphs[ nLevel ] = NULL;
+						}
+						for ( nLevel = 0; nLevel < 9; delete pParagraphs[ nLevel++ ] ) ;
+						/////////////////////////
+						// subtitle stylesheet //
+						/////////////////////////
+						pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_TEXT );
+						if ( pSheet )
+						{
+							SfxItemSet& rItemSet = pSheet->GetItemSet();
+							PPTParagraphObj aParagraph( *pPPTStyleSheet, TSS_TYPE_SUBTITLE, 0 );
+							PPTPortionObj aPortion( *pPPTStyleSheet, TSS_TYPE_SUBTITLE, 0 );
+							aParagraph.AppendPortion( aPortion );
+							aParagraph.ApplyTo( rItemSet, oStartNumbering, (SdrPowerPointImport&)*this, 0xffffffff, NULL );
+							aPortion.ApplyTo( rItemSet, (SdrPowerPointImport&)*this, 0xffffffff );
+						}
+					}
+					else if ( ePgKind == PK_NOTES )
+					{
+						pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_NOTES );
+						if ( pSheet )
+						{
+							SfxItemSet& rItemSet = pSheet->GetItemSet();
+							PPTParagraphObj aParagraph( *pPPTStyleSheet, TSS_TYPE_NOTES, 0 );
+							PPTPortionObj aPortion( *pPPTStyleSheet, TSS_TYPE_NOTES, 0 );
+							aParagraph.AppendPortion( aPortion );
+							aParagraph.ApplyTo( rItemSet, oStartNumbering, (SdrPowerPointImport&)*this, 0xffffffff, NULL );
+							aPortion.ApplyTo( rItemSet, (SdrPowerPointImport&)*this, 0xffffffff );
+						}
+					}
+				}
+			}
+		}
+	}
+	SdPage* pMPage;
+	sal_uInt16 i;
+	for ( i = 1; i < mpDoc->GetMasterPageCount() && ( (pMPage = (SdPage*)mpDoc->GetMasterPage( i )) != 0 ); i++ )
+	{
+		SetPageNum( i, PPT_MASTERPAGE );
+		/////////////////////////////////////////////
+		// importing master page objects		   //
+		/////////////////////////////////////////////
+		PptSlidePersistList* pList = GetPageList( eAktPageKind );
+		PptSlidePersistEntry* pPersist = ( pList && ( nAktPageNum < pList->Count() ) )
+													? (*pList)[ nAktPageNum ] : NULL;
+		if ( pPersist )
+		{
+			if ( pPersist->bStarDrawFiller && pPersist->bNotesMaster && ( nAktPageNum > 2 ) && ( ( nAktPageNum & 1 ) == 0 ) )
+			{
+				pSdrModel->DeleteMasterPage( nAktPageNum );
+				SdrPage* pNotesClone = ((SdPage*)pSdrModel->GetMasterPage( 2 ))->Clone();
+				pSdrModel->InsertMasterPage( pNotesClone, nAktPageNum );
+				if ( pNotesClone )
+				{
+					String aLayoutName( ((SdPage*)pSdrModel->GetMasterPage( nAktPageNum - 1 ))->GetLayoutName() );
+					((SdPage*)pNotesClone)->SetPresentationLayout( aLayoutName, sal_False, sal_False, sal_False );
+					((SdPage*)pNotesClone)->SetLayoutName( aLayoutName );
+				}
+			}
+			else if ( ( pPersist->bStarDrawFiller == FALSE ) )
+			{
+				PptSlidePersistEntry* pE = pPersist;
+				while( ( pE->aSlideAtom.nFlags & 4 ) && pE->aSlideAtom.nMasterId )
+				{
+					sal_uInt16 nNextMaster = pMasterPages->FindPage( pE->aSlideAtom.nMasterId );
+					if ( nNextMaster == PPTSLIDEPERSIST_ENTRY_NOTFOUND )
+						break;
+					else
+    					pE = (*pList)[ nNextMaster ];
+				}
+				SdrObject* pObj = ImportPageBackgroundObject( *pMPage, pE->nBackgroundOffset, TRUE );	// import background
+				if ( pObj )
+					pMPage->NbcInsertObject( pObj );
+
+				sal_Bool bNewAnimationsUsed = sal_False;
+				ProcessData aProcessData( *(*pList)[ nAktPageNum ], (SdPage*)pMPage );
+				sal_uInt32 nFPosMerk = rStCtrl.Tell();
+				DffRecordHeader aPageHd;
+				if ( SeekToAktPage( &aPageHd ) )
+				{
+					if ( mbTracing )
+						mpTracer->AddAttribute( rtl::OUString::createFromAscii( "MasterPage" ), rtl::OUString::valueOf( (sal_Int32) (nAktPageNum + 1) ) );
+
+					while( ( rStCtrl.GetError() == 0 ) && ( rStCtrl.Tell() < aPageHd.GetRecEndFilePos() ) )
+					{
+						DffRecordHeader aHd;
+ 						rStCtrl >> aHd;
+						switch( aHd.nRecType )
+						{
+							case PPT_PST_PPDrawing :
+							{
+								aHd.SeekToBegOfRecord( rStCtrl );
+								DffRecordHeader aPPDrawHd;
+								if ( SeekToRec( rStCtrl, PPT_PST_PPDrawing, aHd.GetRecEndFilePos(), &aPPDrawHd ) )
+								{
+									sal_uInt32 nPPDrawEnd = aPPDrawHd.GetRecEndFilePos();
+									DffRecordHeader aEscherF002Hd;
+									if ( SeekToRec( rStCtrl, DFF_msofbtDgContainer, nPPDrawEnd, &aEscherF002Hd ) )
+									{
+										sal_uInt32 nEscherF002End = aEscherF002Hd.GetRecEndFilePos();
+										DffRecordHeader aEscherObjListHd;
+										if ( SeekToRec( rStCtrl, DFF_msofbtSpgrContainer, nEscherF002End, &aEscherObjListHd ) )
+										{
+											sal_uInt32 nObjCount = 0;
+											while( ( rStCtrl.GetError() == 0 ) && ( rStCtrl.Tell() < aEscherObjListHd.GetRecEndFilePos() ) )
+											{
+												DffRecordHeader aHd2;
+												rStCtrl >> aHd2;
+												if ( ( aHd2.nRecType == DFF_msofbtSpContainer ) || ( aHd2.nRecType == DFF_msofbtSpgrContainer ) )
+												{
+													if ( nObjCount++ )		// skipping the first object
+													{
+														Rectangle aEmpty;
+														aHd2.SeekToBegOfRecord( rStCtrl );
+														SdrObject* pImpObj = ImportObj( rStCtrl, (void*)&aProcessData, aEmpty, aEmpty );
+														if ( pImpObj )
+														{
+															pImpObj->SetLayer( mnBackgroundObjectsLayerID );
+															pMPage->NbcInsertObject( pImpObj );
+														}
+													}
+												}
+												aHd2.SeekToEndOfRecord( rStCtrl );
+											}
+										}
+									}
+								}
+							}
+							break;
+
+							case PPT_PST_ProgTags :
+							{
+								DffRecordHeader aProgTagHd;
+								if ( SeekToContentOfProgTag( 10, rStCtrl, aPageHd, aProgTagHd ) )
+								{
+									while ( ( rStCtrl.GetError() == 0 ) && ( rStCtrl.Tell() < aProgTagHd.GetRecEndFilePos() ) )
+									{
+										DffRecordHeader aProgTagContentHd;
+										rStCtrl >> aProgTagContentHd;
+										switch( aProgTagContentHd.nRecType )
+										{
+											case DFF_msofbtAnimGroup :
+											{
+												::com::sun::star::uno::Reference< ::com::sun::star::drawing::XDrawPage > xPage( pMPage->getUnoPage(), ::com::sun::star::uno::UNO_QUERY );
+												ppt::AnimationImporter aImporter( this, rStCtrl );
+												aImporter.import( xPage, aProgTagContentHd );
+												bNewAnimationsUsed = sal_True;
+											}
+											break;
+										}
+										aProgTagContentHd.SeekToEndOfRecord( rStCtrl );
+									}
+								}
+							}
+							break;
+						}
+						aHd.SeekToEndOfRecord( rStCtrl );
+					}
+					if ( mbTracing )
+						mpTracer->RemoveAttribute( rtl::OUString::createFromAscii( "MasterPage" ) );
+				}
+				rStCtrl.Seek( nFPosMerk );
+				ImportPageEffect( (SdPage*)pMPage, bNewAnimationsUsed );
+
+				///////////////////////
+				// background object //
+				///////////////////////
+				pObj = pMPage->GetObj( 0 );
+				if ( pObj && pObj->GetObjIdentifier() == OBJ_RECT )
+				{
+					if ( pMPage->GetPageKind() == PK_STANDARD )
+					{
+						// Hintergrundobjekt gefunden (erstes Objekt der MasterPage)
+						pObj->SetEmptyPresObj( TRUE );
+						pObj->SetUserCall( pMPage );
+						pObj->SetLayer( mnBackgroundLayerID );
+
+						// Schatten am ersten Objekt (Hintergrundobjekt) entfernen (#57918#)
+						SfxItemSet aTempAttr( mpDoc->GetPool() );
+						aTempAttr.Put( pObj->GetMergedItemSet() );
+
+						BOOL bShadowIsOn = ( (SdrShadowItem&)( aTempAttr.Get( SDRATTR_SHADOW ) ) ).GetValue();
+						if( bShadowIsOn )
+						{
+							aTempAttr.Put( SdrShadowItem( FALSE ) );
+							pObj->SetMergedItemSet( aTempAttr );
+						}
+						SfxStyleSheet* pSheet = pMPage->GetStyleSheetForPresObj( PRESOBJ_BACKGROUND );
+						if ( pSheet )
+						{	// StyleSheet fuellen und dem Objekt zuweisen
+							pSheet->GetItemSet().ClearItem();
+							pSheet->GetItemSet().Put( pObj->GetMergedItemSet() );
+							aTempAttr.ClearItem();
+							pObj->SetMergedItemSet( aTempAttr );
+							pObj->SetStyleSheet( pSheet, FALSE );
+						}
+						pMPage->InsertPresObj( pObj, PRESOBJ_BACKGROUND );
+
+						// #110094#-15
+						// tell the page that it's visualization has changed
+						pMPage->ActionChanged();
+					}
+				}
+			}
+		}
+		if( pStbMgr )
+			pStbMgr->SetState( nImportedPages++ );
+	}
+	////////////////////////////////////
+	// importing slide pages		  //
+	////////////////////////////////////
+	{
+		UINT32			nFPosMerk = rStCtrl.Tell();
+		PptPageKind 	ePageKind = eAktPageKind;
+		UINT16			nPageNum = nAktPageNum;
+
+		SdPage* pHandoutPage = (SdPage*)MakeBlancPage( FALSE );
+		pHandoutPage->SetPageKind( PK_HANDOUT );
+		pSdrModel->InsertPage( pHandoutPage );
+
+		USHORT nPageAnz = GetPageCount( PPT_SLIDEPAGE );
+		if ( nPageAnz )
+		{
+			for ( USHORT nPage = 0; nPage < nPageAnz; nPage++ )
+			{
+				sal_Bool bNewAnimationsUsed = sal_False;
+
+				mePresChange = PRESCHANGE_SEMIAUTO;
+				SetPageNum( nPage, PPT_SLIDEPAGE );
+                SdPage* pPage = (SdPage*)MakeBlancPage( FALSE );
+                PptSlidePersistEntry* pMasterPersist = NULL;
+	            if ( HasMasterPage( nPage, PPT_SLIDEPAGE ) )     // try to get the LayoutName from the masterpage
+	            {
+		            sal_uInt16 nMasterNum = GetMasterPageIndex( nAktPageNum, eAktPageKind );
+		            pPage->TRG_SetMasterPage(*pSdrModel->GetMasterPage(nMasterNum));
+		            PptSlidePersistList* pPageList = GetPageList( PPT_MASTERPAGE );
+                    if ( pPageList && nMasterNum < pPageList->Count() )
+                        pMasterPersist = (*pPageList)[ nMasterNum ];
+			        pPage->SetLayoutName(((SdPage&)pPage->TRG_GetMasterPage()).GetLayoutName());
+                }
+				pPage->SetPageKind( PK_STANDARD );
+				pSdrModel->InsertPage( pPage );			// SJ: #i29625# because of form controls, the
+				ImportPage( pPage, pMasterPersist );	//  page must be inserted before importing
+				SetHeaderFooterPageSettings( pPage, pMasterPersist );
+				// CWS preseng01: pPage->SetPageKind( PK_STANDARD );
+
+				DffRecordHeader aPageHd;
+				if ( SeekToAktPage( &aPageHd ) )
+				{
+					aPageHd.SeekToContent( rStCtrl );
+					while ( ( rStCtrl.GetError() == 0 ) && ( rStCtrl.Tell() < aPageHd.GetRecEndFilePos() ) )
+					{
+						DffRecordHeader aHd;
+						rStCtrl >> aHd;
+						switch ( aHd.nRecType )
+						{
+							case PPT_PST_ProgTags :
+							{
+								DffRecordHeader aProgTagHd;
+								if ( SeekToContentOfProgTag( 10, rStCtrl, aPageHd, aProgTagHd ) )
+								{
+									while ( ( rStCtrl.GetError() == 0 ) && ( rStCtrl.Tell() < aProgTagHd.GetRecEndFilePos() ) )
+									{
+										DffRecordHeader aProgTagContentHd;
+										rStCtrl >> aProgTagContentHd;
+										switch( aProgTagContentHd.nRecType )
+										{
+/*
+											case PPT_PST_CommentContainer :
+											{
+
+											}
+											break;
+*/
+											case DFF_msofbtAnimGroup :
+											{
+												::com::sun::star::uno::Reference< ::com::sun::star::drawing::XDrawPage > xPage( pPage->getUnoPage(), ::com::sun::star::uno::UNO_QUERY );
+												ppt::AnimationImporter aImporter( this, rStCtrl );
+												aImporter.import( xPage, aProgTagContentHd );
+												bNewAnimationsUsed = sal_True;
+											}
+											break;
+
+											case PPT_PST_NewlyAddedAtomByXP11008 :	// ???
+											break;
+
+											case PPT_PST_NewlyAddedAtomByXP12011 :	// ??? don't know, this atom is always 8 bytes big
+											break;									// and is appearing in nearly every l10 progtag
+										}
+										aProgTagContentHd.SeekToEndOfRecord( rStCtrl );
+									}
+								}
+							}
+							break;
+
+							case PPT_PST_HeadersFooters :
+							case PPT_PST_PPDrawing :
+							default:
+							break;
+						}
+
+						aHd.SeekToEndOfRecord( rStCtrl );
+					}
+					ImportPageEffect( (SdPage*)pPage, bNewAnimationsUsed );
+				}
+
+				// creating the corresponding note page
+				eAktPageKind = PPT_NOTEPAGE;
+                SdPage* pNotesPage = (SdPage*)MakeBlancPage( FALSE );
+				sal_uInt16 nNotesMasterNum = GetMasterPageIndex( nPage, PPT_SLIDEPAGE ) + 1;
+				sal_uInt32 nNotesPageId = GetNotesPageId( nPage );
+				if ( nNotesPageId )
+				{
+					nImportedPages++;
+					sal_uInt16 nNotesPageIndex = pNotePages->FindPage( nNotesPageId );
+					if ( nNotesPageIndex == PPTSLIDEPERSIST_ENTRY_NOTFOUND )
+						nNotesPageIndex = 0;
+					SetPageNum( nNotesPageIndex, PPT_NOTEPAGE );
+                    PptSlidePersistEntry* pMasterPersist2 = NULL;
+	                if ( HasMasterPage( nNotesPageIndex, PPT_NOTEPAGE ) ) // try to get the LayoutName from the masterpage
+	                {
+		                pNotesPage->TRG_SetMasterPage(*pSdrModel->GetMasterPage(nNotesMasterNum));
+		                PptSlidePersistList* pPageList = GetPageList( PPT_MASTERPAGE );
+                        if ( pPageList && nNotesMasterNum < pPageList->Count() )
+							pMasterPersist2 = (*pPageList)[ nNotesMasterNum ];
+    			        pNotesPage->SetLayoutName( ((SdPage&)pNotesPage->TRG_GetMasterPage()).GetLayoutName() );
+                    }
+					pNotesPage->SetPageKind( PK_NOTES );
+					pNotesPage->TRG_SetMasterPage(*pSdrModel->GetMasterPage(nNotesMasterNum));
+					pSdrModel->InsertPage( pNotesPage );		// SJ: #i29625# because of form controls, the
+                    ImportPage( pNotesPage, pMasterPersist2 );	// page must be inserted before importing
+					SetHeaderFooterPageSettings( pNotesPage, pMasterPersist2 );
+					pNotesPage->SetAutoLayout( AUTOLAYOUT_NOTES, FALSE );
+				}
+				else
+				{
+					pNotesPage->SetPageKind( PK_NOTES );
+					pNotesPage->TRG_SetMasterPage(*pSdrModel->GetMasterPage(nNotesMasterNum));
+					pNotesPage->SetAutoLayout( AUTOLAYOUT_NOTES, TRUE );
+					pSdrModel->InsertPage( pNotesPage );
+					SdrObject* pPageObj = pNotesPage->GetPresObj( PRESOBJ_PAGE, 1 );
+					if ( pPageObj )
+						((SdrPageObj*)pPageObj)->SetReferencedPage(pSdrModel->GetPage(( nPage << 1 ) + 1));
+				}
+
+				if( pStbMgr )
+					pStbMgr->SetState( nImportedPages++ );
+			}
+			//////////////
+		}
+		else
+		{
+			// Das kann bei Dokumentvorlagen vorkommen
+			eAktPageKind = PPT_SLIDEPAGE;
+			SdrPage* pPage = MakeBlancPage( FALSE );
+			pSdrModel->InsertPage( pPage );
+
+			// #i37397#, trying to set the title master for the first page
+			sal_uInt16 nMaster, nMasterCount = pSdrModel->GetMasterPageCount();
+			SdPage* pFoundMaster = NULL;
+			for ( nMaster = 1; nMaster < nMasterCount; nMaster++ )
+			{
+				SdPage* pMaster = static_cast<SdPage*>( pSdrModel->GetMasterPage( nMaster ) );
+				if ( pMaster->GetPageKind() == PK_STANDARD )
+				{
+					SetPageNum( nMaster, PPT_MASTERPAGE );
+					if ( !pFoundMaster )
+						pFoundMaster = pMaster;
+					else if ( GetSlideLayoutAtom()->eLayout == PPT_LAYOUT_TITLEMASTERSLIDE )
+						pFoundMaster = pMaster;
+					if ( GetSlideLayoutAtom()->eLayout == PPT_LAYOUT_TITLEMASTERSLIDE )
+						break;
+				}
+			}
+			if ( pFoundMaster )
+			{
+				((SdPage*)pPage)->TRG_SetMasterPage( *((SdPage*)pFoundMaster) );
+			    ((SdPage*)pPage)->SetLayoutName( ((SdPage*)pFoundMaster)->GetLayoutName() );
+			}
+			((SdPage*)pPage)->SetAutoLayout( AUTOLAYOUT_TITLE, TRUE, TRUE );
+
+			eAktPageKind = PPT_NOTEPAGE;
+			SdrPage* pNPage = MakeBlancPage( FALSE );
+			pSdrModel->InsertPage( pNPage );
+		}
+		SetPageNum( nPageNum, ePageKind );
+		rStCtrl.Seek( nFPosMerk );
+	}
+	///////////////////////////////////////////////////////////////////
+	// Handzettel und Notiz-Seiten erzeugen 						 //
+	///////////////////////////////////////////////////////////////////
+	bOk = mpDoc->CreateMissingNotesAndHandoutPages();
+	if ( bOk )
+	{
+		for ( i = 0; i < mpDoc->GetSdPageCount( PK_STANDARD ); i++ )
+		{
+			////////////////////
+			// set AutoLayout //
+			////////////////////
+			SetPageNum( i, PPT_SLIDEPAGE );
+			SdPage* pPage = mpDoc->GetSdPage( i, PK_STANDARD );
+			AutoLayout eAutoLayout = AUTOLAYOUT_NONE;
+			const PptSlideLayoutAtom* pSlideLayout = GetSlideLayoutAtom();
+			if ( pSlideLayout )
+			{
+				switch ( pSlideLayout->eLayout )			// Praesentationslayouts fuer Standard-Seiten
+				{
+					case PPT_LAYOUT_TITLEANDBODYSLIDE :
+					{
+						eAutoLayout = AUTOLAYOUT_ENUM;
+						USHORT nID1 = pSlideLayout->aPlaceholderId[ 1 ];
+						switch ( nID1 )
+						{
+							case PPT_PLACEHOLDER_BODY :
+								eAutoLayout = AUTOLAYOUT_ENUM;
+							break;
+							case PPT_PLACEHOLDER_TABLE :
+								eAutoLayout = AUTOLAYOUT_TAB;
+							break;
+							case PPT_PLACEHOLDER_ORGANISZATIONCHART :
+								eAutoLayout = AUTOLAYOUT_ORG;
+							break;
+							case PPT_PLACEHOLDER_GRAPH :
+								eAutoLayout = AUTOLAYOUT_CHART;
+							break;
+							case PPT_PLACEHOLDER_OBJECT :
+								eAutoLayout = AUTOLAYOUT_OBJ;
+							break;
+							case PPT_PLACEHOLDER_VERTICALTEXTBODY :
+								eAutoLayout = AUTOLAYOUT_TITLE_VERTICAL_OUTLINE;
+							break;
+						}
+					}
+					break;
+
+					case PPT_LAYOUT_2COLUMNSANDTITLE :
+					{
+						eAutoLayout = AUTOLAYOUT_2TEXT;
+						USHORT nID1 = pSlideLayout->aPlaceholderId[ 1 ];
+						USHORT nID2 = pSlideLayout->aPlaceholderId[ 2 ];
+						if ( nID1 == PPT_PLACEHOLDER_BODY && nID2 == PPT_PLACEHOLDER_GRAPH )
+							eAutoLayout = AUTOLAYOUT_TEXTCHART;
+						else if ( nID1 == PPT_PLACEHOLDER_GRAPH && nID2 == PPT_PLACEHOLDER_BODY )
+							eAutoLayout = AUTOLAYOUT_CHARTTEXT;
+						else if ( nID1 == PPT_PLACEHOLDER_BODY && nID2 == PPT_PLACEHOLDER_CLIPART )
+							eAutoLayout = AUTOLAYOUT_TEXTCLIP;
+						else if ( nID1 == PPT_PLACEHOLDER_CLIPART && nID2 == PPT_PLACEHOLDER_BODY )
+							eAutoLayout = AUTOLAYOUT_CLIPTEXT;
+						else if ( nID1 == PPT_PLACEHOLDER_CLIPART && nID2 == PPT_PLACEHOLDER_VERTICALTEXTBODY )
+							eAutoLayout = AUTOLAYOUT_TITLE_VERTICAL_OUTLINE_CLIPART;
+						else if ( ( nID1 == PPT_PLACEHOLDER_BODY )
+							&& ( ( nID2 == PPT_PLACEHOLDER_OBJECT ) || ( nID2 == PPT_PLACEHOLDER_MEDIACLIP ) ) )
+							eAutoLayout = AUTOLAYOUT_TEXTOBJ;
+						else if ( ( nID2 == PPT_PLACEHOLDER_BODY )
+							&& ( ( nID1 == PPT_PLACEHOLDER_OBJECT ) || ( nID1 == PPT_PLACEHOLDER_MEDIACLIP ) ) )
+							eAutoLayout = AUTOLAYOUT_OBJTEXT;
+                        else if ( ( nID1 == PPT_PLACEHOLDER_OBJECT ) && ( nID2 == PPT_PLACEHOLDER_OBJECT  ) )
+							eAutoLayout = AUTOLAYOUT_OBJ;
+					}
+					break;
+
+					case PPT_LAYOUT_2ROWSANDTITLE :
+					{
+						eAutoLayout = AUTOLAYOUT_2TEXT;
+						USHORT nID1 = pSlideLayout->aPlaceholderId[ 1 ];
+						USHORT nID2 = pSlideLayout->aPlaceholderId[ 2 ];
+						if ( nID1 == PPT_PLACEHOLDER_BODY && nID2 == PPT_PLACEHOLDER_OBJECT )
+							eAutoLayout = AUTOLAYOUT_TEXTOVEROBJ;
+						else if ( nID1 == PPT_PLACEHOLDER_OBJECT && nID2 == PPT_PLACEHOLDER_BODY )
+							eAutoLayout = AUTOLAYOUT_OBJOVERTEXT;
+					}
+					break;
+
+					case PPT_LAYOUT_TITLESLIDE :
+						eAutoLayout = AUTOLAYOUT_TITLE;
+					break;
+					case PPT_LAYOUT_ONLYTITLE :
+						eAutoLayout = AUTOLAYOUT_ONLY_TITLE;
+					break;
+					case PPT_LAYOUT_RIGHTCOLUMN2ROWS :
+						eAutoLayout = AUTOLAYOUT_TEXT2OBJ;
+					break;
+					case PPT_LAYOUT_LEFTCOLUMN2ROWS :
+						eAutoLayout = AUTOLAYOUT_2OBJTEXT;
+					break;
+					case PPT_LAYOUT_TOPROW2COLUMN :
+						eAutoLayout = AUTOLAYOUT_2OBJOVERTEXT;
+					break;
+					case PPT_LAYOUT_4OBJECTS :
+						eAutoLayout = AUTOLAYOUT_4OBJ;
+					break;
+					case PPT_LAYOUT_BIGOBJECT :
+						eAutoLayout = AUTOLAYOUT_OBJ;
+					break;
+					case PPT_LAYOUT_TITLERIGHTBODYLEFT :
+						eAutoLayout = AUTOLAYOUT_VERTICAL_TITLE_VERTICAL_OUTLINE; // AUTOLAYOUT_ENUM;
+					break;
+					case PPT_LAYOUT_TITLERIGHT2BODIESLEFT :
+						eAutoLayout = AUTOLAYOUT_VERTICAL_TITLE_TEXT_CHART; // AUTOLAYOUT_TEXT2OBJ;
+					break;
+
+					case PPT_LAYOUT_BOTTOMROW2COLUMNS :
+					case PPT_LAYOUT_BLANCSLIDE :
+					case PPT_LAYOUT_MASTERSLIDE :			// Layout der Standard- und Titel-MasterPage
+					case PPT_LAYOUT_TITLEMASTERSLIDE :
+					case PPT_LAYOUT_MASTERNOTES :			// Layout der Notizen-MasterPage
+					case PPT_LAYOUT_NOTESTITLEBODY :		// Praesentationslayout fuer Notiz-Seiten
+					case PPT_LAYOUT_HANDOUTLAYOUT : 		// Praesentationslayout fuer Handzettelseiten
+						eAutoLayout = AUTOLAYOUT_NONE;
+					break;
+				}
+				if ( eAutoLayout != AUTOLAYOUT_NONE )
+					pPage->SetAutoLayout( eAutoLayout, FALSE );
+			}
+		}
+		//////////////////////////////////////////////////////////////
+		// Handzettel-MasterPage: Autolayout setzen 				//
+		//////////////////////////////////////////////////////////////
+		SdPage* pHandoutMPage = mpDoc->GetMasterSdPage( 0, PK_HANDOUT );
+		pHandoutMPage->SetAutoLayout( AUTOLAYOUT_HANDOUT6, TRUE, TRUE );
+	}
+
+	UINT32 nSlideCount = GetPageCount();
+	for ( i = 0; ( i < nSlideCount) && ( i < maSlideNameList.Count() ); i++ )
+	{
+		SdPage* pPage = mpDoc->GetSdPage( i, PK_STANDARD );
+		String* pName = (String*)maSlideNameList.GetObject( i );
+		if ( pPage && pName )
+		{
+			if ( pName->Len() )
+				pPage->SetName( *pName );
+			else
+				*pName = pPage->GetName();
+		}
+	}
+	if ( mbDocumentFound )
+	{
+		mpDoc->SetSummationOfParagraphs( sal_True );
+		if ( pDocShell )
+		{
+			::sd::FrameView* pFrameView = mpDoc->GetFrameView( 0 );
+			if ( !pFrameView )
+			{
+				List* pFrameViewList = mpDoc->GetFrameViewList();
+				if ( pFrameViewList )
+				{
+					pFrameView = new ::sd::FrameView( mpDoc );
+					if ( pFrameView )
+						pFrameViewList->Insert( pFrameView );
+				}
+			}
+			if ( pFrameView )
+			{
+				sal_uInt16	nSelectedPage = 0;
+				PageKind	ePageKind = PK_STANDARD;
+				EditMode	eEditMode = EM_PAGE;
+
+				switch ( aUserEditAtom.eLastViewType )
+				{
+					case 7 :	// outliner view
+					{
+						SfxItemSet* pSet = mrMed.GetItemSet();
+						if ( pSet )
+							pSet->Put( SfxUInt16Item( SID_VIEW_ID, 3 ) );
+					}
+					break;
+					case 8 :	// slide sorter
+					{
+						SfxItemSet* pSet = mrMed.GetItemSet();
+						if ( pSet )
+							pSet->Put( SfxUInt16Item( SID_VIEW_ID, 2 ) );
+					}
+					break;
+					case 10 :	// titlemaster
+						nSelectedPage = 1;
+					case 2 :	// master
+					{
+						ePageKind = PK_STANDARD;
+						eEditMode = EM_MASTERPAGE;
+					}
+					break;
+					case 5 :	// notes master
+						eEditMode = EM_MASTERPAGE;
+					case 3 :	// notes
+						ePageKind = PK_NOTES;
+					break;
+					case 4 :	// handout
+						ePageKind = PK_HANDOUT;
+					break;
+					default :
+					case 1 :	// normal
+					break;
+				}
+				pFrameView->SetPageKind( ePageKind );
+				pFrameView->SetSelectedPage( nSelectedPage );
+				pFrameView->SetViewShEditMode( eEditMode, ePageKind );
+			}
+		}
+		DffRecordHeader aCustomShowHeader;
+		// custom show einlesen und setzen
+		rStCtrl.Seek( maDocHd.GetRecBegFilePos() + 8 );
+		if ( SeekToRec( rStCtrl, PPT_PST_NamedShows, maDocHd.GetRecEndFilePos(), &aCustomShowHeader ) )
+		{
+			DffRecordHeader aCuHeader;
+			while( SeekToRec( rStCtrl, PPT_PST_NamedShow, aCustomShowHeader.GetRecEndFilePos(), &aCuHeader ) )
+			{
+				DffRecordHeader aContent;
+				if ( SeekToRec( rStCtrl, PPT_PST_CString, aCuHeader.GetRecEndFilePos(), &aContent ) )
+				{
+					String aCuShow;
+					aContent.SeekToBegOfRecord( rStCtrl );
+					if ( ReadString( aCuShow ) )
+					{
+						if ( SeekToRec( rStCtrl, PPT_PST_NamedShowSlides, aCuHeader.GetRecEndFilePos(), &aContent ) )
+						{
+							PptSlidePersistList* pPageList = GetPageList( PPT_SLIDEPAGE );
+							UINT32 nSCount = aContent.nRecLen >> 2;
+							if ( pPageList && nSCount )
+							{
+								List* pList = mpDoc->GetCustomShowList( TRUE );
+								if ( pList )
+								{
+									SdCustomShow* pSdCustomShow = new SdCustomShow( mpDoc );
+									if ( pSdCustomShow )
+									{
+										pSdCustomShow->SetName( aCuShow );
+										UINT32 nFound = 0;
+										for ( UINT32 nS = 0; nS < nSCount; nS++ )
+										{
+											UINT32 nPageNumber;
+											rStCtrl >> nPageNumber;
+											USHORT nPage = pPageList->FindPage( nPageNumber );
+											if ( nPage != PPTSLIDEPERSIST_ENTRY_NOTFOUND )
+											{
+												SdPage* pPage = mpDoc->GetSdPage( nPage, PK_STANDARD );
+												if ( pPage )
+												{
+													pSdCustomShow->Insert( pPage, LIST_APPEND );
+													nFound++;
+												}
+											}
+										}
+										if ( nFound )
+											pList->Insert( pSdCustomShow, LIST_APPEND );
+										else
+											delete pSdCustomShow;
+									}
+								}
+							}
+						}
+					}
+				}
+			}
+		}
+		// this is defaulted, maybe there is no SSDocInfoAtom
+		String		aCustomShow;
+		sal_uInt32	nFlags = 1; 				// Bit 0:	Auto advance
+		sal_uInt32	nPenColor = 0x1000000;
+		sal_Int32	nRestartTime = 0x7fffffff;
+		sal_uInt16	nStartSlide = 0;
+		sal_Int16	nEndSlide = 0;
+
+		// read the pres. configuration
+		rStCtrl.Seek( maDocHd.GetRecBegFilePos() + 8 );
+		if ( SeekToRec( rStCtrl, PPT_PST_SSDocInfoAtom, maDocHd.GetRecEndFilePos(), &aCustomShowHeader ) )
+		{
+			rStCtrl >> nPenColor
+					>> nRestartTime
+					>> nStartSlide
+					>> nEndSlide;
+
+			sal_Unicode nChar;
+			for ( UINT32 i2 = 0; i2 < 32; i2++ )
+			{
+				rStCtrl >> nChar;
+				if ( nChar )
+					aCustomShow.Append( nChar );
+				else
+				{
+					rStCtrl.SeekRel( ( 31 - i2 ) << 1 );
+					break;
+				}
+			}
+			rStCtrl >> nFlags;
+		}
+		// set the current custom show
+		if ( aCustomShow.Len() )
+		{
+			void* pPtr;
+			List* pList = mpDoc->GetCustomShowList( FALSE );
+			if ( pList )
+			{
+				for ( pPtr = pList->First(); pPtr; pPtr = pList->Next() )
+				{
+					if ( ((SdCustomShow*)pPtr)->GetName() == aCustomShow )
+						break;
+				}
+				if ( !pPtr )
+					pList->First();
+			}
+		}
+		sd::PresentationSettings& rPresSettings = mpDoc->getPresentationSettings();
+
+		rPresSettings.mbManual = ( nFlags & 1 ) == 0;
+		rPresSettings.mbAnimationAllowed = ( nFlags & 2 ) == 0;
+		rPresSettings.mbAll = ( nFlags & 4 ) == 0;
+		rPresSettings.mbCustomShow = ( nFlags & 8 ) != 0;
+		rPresSettings.mbEndless = ( nFlags & 0x80 ) != 0;
+		rPresSettings.mbFullScreen = ( nFlags & 0x10 ) == 0;
+//		rPresSettings.mnPauseTimeout;
+//		rPresSettings.mbShowLogo;
+		if ( nStartSlide && ( nStartSlide <= GetPageCount() ) )
+		{
+			SdPage* pPage = mpDoc->GetSdPage( nStartSlide - 1, PK_STANDARD );
+			if ( pPage )
+				rPresSettings.maPresPage = pPage->GetName();
+		}
+	}
+
+	delete pStbMgr;
+
+    // read DocumentInfo
+    uno::Reference<document::XDocumentPropertiesSupplier> xDPS(
+        mpDoc->GetObjectShell()->GetModel(), uno::UNO_QUERY_THROW);
+    uno::Reference<document::XDocumentProperties> xDocProps
+        = xDPS->getDocumentProperties();
+    sfx2::LoadOlePropertySet(xDocProps, &mrStorage);
+    xDocProps->setTemplateName(::rtl::OUString());
+
+	pSdrModel->setLock( sal_False );
+	return bOk;
+}
+
+void ImplSdPPTImport::SetHeaderFooterPageSettings( SdPage* pPage, const PptSlidePersistEntry* pMasterPersist )
+{
+	sal_uInt32 i;
+	PptSlidePersistList* pList = GetPageList( eAktPageKind );
+	if ( ( !pList ) || ( pList->Count() <= nAktPageNum ) )
+		return;
+	PptSlidePersistEntry& rSlidePersist = *(*pList)[ nAktPageNum ];
+	HeaderFooterEntry* pHFE = rSlidePersist.pHeaderFooterEntry;
+	if ( pHFE )
+	{
+		for ( i = 0; i < 4; i++ )
+		{
+			bool bVisible = pHFE->IsToDisplay( i );
+			if ( ( eAktPageKind == PPT_SLIDEPAGE )
+				&& ( rSlidePersist.aSlideAtom.aLayout.eLayout == PPT_LAYOUT_TITLESLIDE )
+					&& ( aDocAtom.bTitlePlaceholdersOmitted == TRUE ) )
+			{
+				bVisible = sal_False;
+			}
+			if ( bVisible && pMasterPersist )
+			{
+				sal_uInt32 nPosition = pHFE->NeedToImportInstance( i, rSlidePersist );
+				if ( nPosition )
+				{
+					Rectangle aEmpty;
+					bVisible = sal_False;
+					rStCtrl.Seek( nPosition );
+					ProcessData aProcessData( rSlidePersist, (SdPage*)pPage );
+					SdrObject* pObj = ImportObj( rStCtrl, (void*)&aProcessData, aEmpty, aEmpty );
+					if ( pObj )
+						pPage->NbcInsertObject( pObj, 0 );
+				}
+			}
+			String aPlaceHolderString;
+			if ( pHFE->pPlaceholder )
+				aPlaceHolderString = pHFE->pPlaceholder[ i ];
+
+			sd::HeaderFooterSettings rHeaderFooterSettings( pPage->getHeaderFooterSettings() );
+			switch( i )
+			{
+				case 0 :
+				{
+					rHeaderFooterSettings.mbDateTimeVisible = bVisible;
+					rHeaderFooterSettings.mbDateTimeIsFixed = ( pHFE->nAtom & 0x20000 ) == 0;
+					rHeaderFooterSettings.maDateTimeText = aPlaceHolderString;
+					SvxDateFormat eDateFormat;
+					SvxTimeFormat eTimeFormat;
+					PPTFieldEntry::GetDateTime( pHFE->nAtom & 0xff, eDateFormat, eTimeFormat );
+					rHeaderFooterSettings.meDateTimeFormat = eDateFormat | ( eTimeFormat << 4 );
+				}
+				break;
+				case 1 :
+				{
+					rHeaderFooterSettings.mbHeaderVisible = bVisible;
+					rHeaderFooterSettings.maHeaderText = aPlaceHolderString;
+				}
+				break;
+				case 2 :
+				{
+					rHeaderFooterSettings.mbFooterVisible = bVisible;
+					rHeaderFooterSettings.maFooterText = aPlaceHolderString;
+				}
+				break;
+				case 3 :
+				{
+					rHeaderFooterSettings.mbSlideNumberVisible = bVisible;
+				}
+				break;
+			}
+			pPage->setHeaderFooterSettings( rHeaderFooterSettings );
+		}
+	}
+}
+
+//////////////////////////////////////////////////////////////////////////
+//
+// Import von Seiten
+//
+//////////////////////////////////////////////////////////////////////////
+
+struct Ppt97AnimationStlSortHelper
+{
+	bool operator()( const std::pair< SdrObject*, Ppt97AnimationPtr >& p1, const std::pair< SdrObject*, Ppt97AnimationPtr >& p2 );
+};
+
+bool Ppt97AnimationStlSortHelper::operator()( const std::pair< SdrObject*, Ppt97AnimationPtr >& p1, const std::pair< SdrObject*, Ppt97AnimationPtr >& p2 )
+{
+    if( !p1.second.get() || !p2.second.get() )
+        return true;
+    if( *p1.second < *p2.second )
+        return true;
+    if( *p1.second > *p2.second )
+        return false;
+    if( p1.first->GetOrdNum() < p2.first->GetOrdNum() )
+        return true;
+    return false;
+}
+
+void ImplSdPPTImport::ImportPageEffect( SdPage* pPage, const sal_Bool bNewAnimationsUsed )
+{
+	ULONG nFilePosMerk = rStCtrl.Tell();
+
+	// PageKind an der Seite setzen (bisher nur PK_STANDARD oder PK_NOTES)
+	if ( pPage->GetPageKind() == PK_STANDARD )
+	{
+		PptSlidePersistList* pPersistList = GetPageList( eAktPageKind );
+		PptSlidePersistEntry* pActualSlidePersist = ( pPersistList && ( nAktPageNum < pPersistList->Count() ) )
+														? (*pPersistList)[ nAktPageNum ] : NULL;
+
+		if ( pActualSlidePersist && ( eAktPageKind == PPT_SLIDEPAGE ) )
+		{
+			if ( ! ( pActualSlidePersist->aSlideAtom.nFlags & 1 ) )	// do not follow master objects ?
+			{
+				if(pPage->TRG_HasMasterPage())
+				{
+					SetOfByte aVisibleLayers = pPage->TRG_GetMasterPageVisibleLayers();
+					aVisibleLayers.Set(mnBackgroundObjectsLayerID, FALSE);
+					pPage->TRG_SetMasterPageVisibleLayers(aVisibleLayers);
+				}
+			}
+		}
+		DffRecordHeader aPageRecHd;
+		if ( pPage && SeekToAktPage( &aPageRecHd ) )
+		{
+			ULONG nPageRecEnd = aPageRecHd.GetRecEndFilePos();
+
+			BOOL bTryTwice = ( eAktPageKind == PPT_SLIDEPAGE );
+			BOOL bSSSlideInfoAtom = FALSE;
+			while ( TRUE )
+			{
+				while ( ( rStCtrl.GetError() == 0 ) && ( rStCtrl.Tell() < nPageRecEnd ) )
+				{
+					DffRecordHeader aHd;
+					rStCtrl >> aHd;
+					switch ( aHd.nRecType )
+					{
+						case PPT_PST_SSSlideInfoAtom:
+						{
+							bSSSlideInfoAtom = TRUE;
+							if ( eAktPageKind == PPT_MASTERPAGE )
+							{
+								if ( pActualSlidePersist )
+									pActualSlidePersist->aPersistAtom.nReserved = aHd.GetRecBegFilePos();
+							}
+							else
+							{
+								sal_Int8    nDirection, nTransitionType, nByteDummy, nSpeed;
+                                sal_Int16   nBuildFlags;
+								sal_Int32   nSlideTime, nSoundRef;
+								rStCtrl >> nSlideTime			// Standzeit (in Ticks)
+										>> nSoundRef			// Index in SoundCollection
+										>> nDirection			// Richtung des Ueberblendeffekts
+										>> nTransitionType		// Ueberblendeffekt
+										>> nBuildFlags			// Buildflags (s.u.)
+										>> nSpeed				// Geschwindigkeit (langsam, mittel, schnell)
+										>> nByteDummy >> nByteDummy >> nByteDummy;
+
+								switch ( nTransitionType )
+								{
+									case PPT_TRANSITION_TYPE_BLINDS :
+									{
+										if ( nDirection == 0 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_VERTICAL_STRIPES );// Vertikal blenden
+										else if ( nDirection == 1 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_HORIZONTAL_STRIPES );// Horizontal blenden
+									}
+									break;
+									case PPT_TRANSITION_TYPE_CHECKER :
+									{
+										if ( nDirection == 0 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_HORIZONTAL_CHECKERBOARD );// Vertikal versetzt einblenden ??
+										else if ( nDirection == 1 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_VERTICAL_CHECKERBOARD );// Horizontal versetzt einblenden ??
+									}
+									break;
+									case PPT_TRANSITION_TYPE_COVER :
+									{
+										if ( nDirection == 0 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_RIGHT );		// Von rechts ueberdecken
+										else if ( nDirection == 1 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_BOTTOM );	// Von unten ueberdecken
+										else if ( nDirection == 2 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_LEFT );		// Von links ueberdecken
+										else if ( nDirection == 3 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_TOP );		// Von oben ueberdecken
+										else if ( nDirection == 4 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_LOWERRIGHT );// Von rechts unten ueberdecken ??
+										else if ( nDirection == 5 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_LOWERLEFT );	// Von links unten ueberdecken ??
+										else if ( nDirection == 6 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_UPPERRIGHT );// Von rechts oben ueberdecken
+										else if ( nDirection == 7 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_UPPERLEFT );	// Von links oben ueberdecken ??
+									}
+									break;
+									case PPT_TRANSITION_TYPE_NONE :
+									{
+										if ( nBuildFlags )
+										{
+											if ( nDirection == 0 )
+												pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_NONE );				// Direkt
+											else if ( nDirection == 1 )
+                                            {
+                                                pPage->setTransitionType( animations::TransitionType::BARWIPE );
+                                                pPage->setTransitionSubtype( animations::TransitionSubType::FADEOVERCOLOR );
+                                                pPage->setTransitionFadeColor( 0 );
+                                            }
+										}
+										else
+											pPage->setTransitionType( 0 );
+									}
+									break;
+									case PPT_TRANSITION_TYPE_DISSOLVE :
+										pPage->SetFadeEffect(::com::sun::star::presentation::FadeEffect_DISSOLVE);					// Aufloesen
+									break;
+									case PPT_TRANSITION_TYPE_RANDOM_BARS :
+									{
+										if ( nDirection == 0 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_HORIZONTAL_LINES );	// Horizontale Linien
+										else if ( nDirection == 1 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_VERTICAL_LINES );		// Vertikale Linien
+									}
+									break;
+									case PPT_TRANSITION_TYPE_SPLIT :
+									{
+										if ( nDirection == 0 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_OPEN_VERTICAL );	// Horizontal oeffnen
+										else if ( nDirection == 1 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_CLOSE_VERTICAL );	// Horizontal schliessen
+										else if ( nDirection == 2 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_OPEN_HORIZONTAL ); // Vertikal oeffnen
+										else if ( nDirection == 3 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_CLOSE_HORIZONTAL );// Vertikal schliessen
+									}
+									break;
+									case PPT_TRANSITION_TYPE_STRIPS :
+									{
+										if ( nDirection == 4 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_LOWERRIGHT );// Diagonal nach links oben
+										else if ( nDirection == 5 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_LOWERLEFT ); // Diagonal nach rechts oben
+										else if ( nDirection == 6 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_UPPERRIGHT );// Diagonal nach links unten
+										else if ( nDirection == 7 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_UPPERLEFT ); // Diagonal nach rechts unten
+									}
+									break;
+									case PPT_TRANSITION_TYPE_PULL :
+									{
+										if ( nDirection == 0 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_LEFT );		// Nach links aufdecken
+										else if ( nDirection == 1 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_TOP );		// Nach oben aufdecken
+										else if ( nDirection == 2 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_RIGHT );	// Nach rechts aufdecken
+										else if ( nDirection == 3 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_BOTTOM );	// Nach unten aufdecken
+										else if ( nDirection == 4 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_UPPERLEFT );// Nach links oben aufdecken
+										else if ( nDirection == 5 )
+                                        	pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_UPPERRIGHT );// Nach rechts oben aufdecken
+										else if ( nDirection == 6 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_LOWERLEFT );// Nach links unten aufdecken
+										else if ( nDirection == 7 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_LOWERRIGHT );// Nach rechts unten aufdecken
+									}
+									break;
+									case PPT_TRANSITION_TYPE_WIPE :
+									{
+										if ( nDirection == 0 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_RIGHT ); // Von rechts rollen
+										else if ( nDirection == 1 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_BOTTOM );// Von unten rollen
+										else if ( nDirection == 2 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_LEFT );	// Von links rollen
+										else if ( nDirection == 3 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_TOP );	// Von oben rollen
+									}
+									break;
+									case PPT_TRANSITION_TYPE_RANDOM :
+										pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_RANDOM );				// Automatisch
+									break;
+									case PPT_TRANSITION_TYPE_FADE :
+									{
+										pPage->setTransitionType( animations::TransitionType::FADE );
+										pPage->setTransitionSubtype( animations::TransitionSubType::FADEOVERCOLOR );
+										pPage->setTransitionFadeColor( 0 );
+									}
+									break;
+									case PPT_TRANSITION_TYPE_ZOOM :
+									{
+										if ( nDirection == 0 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_CENTER );// Von innen einblenden
+										else if ( nDirection == 1 )
+											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_TO_CENTER );	// Von aussen einblenden
+									}
+									break;
+									case PPT_TRANSITION_TYPE_DIAMOND :
+									{
+										pPage->setTransitionType( animations::TransitionType::IRISWIPE );
+										pPage->setTransitionSubtype( animations::TransitionSubType::DIAMOND );
+									}
+									break;
+									case PPT_TRANSITION_TYPE_PLUS :
+									{
+										pPage->setTransitionType( animations::TransitionType::FOURBOXWIPE );
+										pPage->setTransitionSubtype( animations::TransitionSubType::CORNERSOUT );
+									}
+									break;
+									case PPT_TRANSITION_TYPE_CIRCLE	:
+									{
+										pPage->setTransitionType( animations::TransitionType::ELLIPSEWIPE );
+										pPage->setTransitionSubtype( animations::TransitionSubType::CIRCLE );
+									}
+									break;
+									case PPT_TRANSITION_TYPE_WEDGE :
+									{
+										pPage->setTransitionType( animations::TransitionType::FANWIPE );
+										pPage->setTransitionSubtype( animations::TransitionSubType::CENTERTOP );
+									}
+									break;
+									case PPT_TRANSITION_TYPE_WHEEL :
+									{
+										pPage->setTransitionType( animations::TransitionType::PINWHEELWIPE );
+										sal_Int16 nSubType;
+										switch( nDirection )
+										{
+											default:
+											case 1 : nSubType = animations::TransitionSubType::ONEBLADE; break;
+											case 2 : nSubType = animations::TransitionSubType::TWOBLADEVERTICAL; break;
+											case 3 : nSubType = animations::TransitionSubType::THREEBLADE; break;
+											case 4 : nSubType = animations::TransitionSubType::FOURBLADE; break;
+											case 8 : nSubType = animations::TransitionSubType::EIGHTBLADE; break;
+										}
+										pPage->setTransitionSubtype( nSubType );
+									}
+									break;
+									case PPT_TRANSITION_TYPE_PUSH :
+									{
+										pPage->setTransitionType( animations::TransitionType::PUSHWIPE );
+										sal_Int16 nSubType;
+										switch( nDirection )
+										{
+											default:
+											case 0 : nSubType = animations::TransitionSubType::FROMRIGHT; break;
+											case 1 : nSubType = animations::TransitionSubType::FROMBOTTOM; break;
+											case 2 : nSubType = animations::TransitionSubType::FROMLEFT; break;
+											case 3 : nSubType = animations::TransitionSubType::FROMTOP; break;
+										}
+										pPage->setTransitionSubtype( nSubType );
+									}
+									break;
+									case PPT_TRANSITION_TYPE_COMB :
+									{
+										pPage->setTransitionType( animations::TransitionType::PUSHWIPE );
+										pPage->setTransitionSubtype( nDirection ? animations::TransitionSubType::COMBVERTICAL : animations::TransitionSubType::COMBHORIZONTAL );
+									}
+									break;
+									case PPT_TRANSITION_TYPE_NEWSFLASH :
+									{
+										pPage->setTransitionType( animations::TransitionType::ZOOM );
+										pPage->setTransitionSubtype( animations::TransitionSubType::ROTATEIN );
+									}
+									break;
+									case PPT_TRANSITION_TYPE_SMOOTHFADE :
+									{
+										pPage->setTransitionType( animations::TransitionType::FADE );
+										pPage->setTransitionSubtype( animations::TransitionSubType::CROSSFADE );
+									}
+									break;
+								}
+
+								if ( nSpeed == 0 )
+									pPage->setTransitionDuration( 3.0 );	 	// langsam
+								else if ( nSpeed == 1 )
+									pPage->setTransitionDuration( 2.0 );	// mittel
+								else if ( nSpeed == 2 )
+									pPage->setTransitionDuration( 1.0 ); 	// schnell
+
+                                if ( nBuildFlags & 0x400 )                      // slidechange by time
+                                {   // Standzeit (in Ticks)
+									pPage->SetPresChange( PRESCHANGE_AUTO );
+									pPage->SetTime( nSlideTime / 1000 );
+                                }
+                                else
+                                    pPage->SetPresChange( mePresChange );
+
+//								if ( nBuildFlags & 1 )                          // slidechange by mouseclick
+//									pPage->SetPresChange( mePresChange );
+
+								if ( nBuildFlags & 4 )
+									pPage->SetExcluded( TRUE ); 				// Dia nicht anzeigen
+								if ( nBuildFlags & 16 )
+								{	// Dia mit Soundeffekt
+									pPage->SetSound( TRUE );
+									String aSoundFile( ReadSound( nSoundRef ) );
+									pPage->SetSoundFile( aSoundFile );
+								}
+								if ( nBuildFlags & ( 1 << 6 ) ) 	// Loop until next sound
+									pPage->SetLoopSound( sal_True );
+								if ( nBuildFlags & ( 1 << 8 ) ) 	// Stop the previous sound
+									pPage->SetStopSound( sal_True );
+								break;
+							}
+						}
+					}
+					aHd.SeekToEndOfRecord( rStCtrl );
+				}
+				if ( bTryTwice && ( bSSSlideInfoAtom == FALSE ) )
+				{
+					bTryTwice = FALSE;
+					if ( HasMasterPage( nAktPageNum, eAktPageKind ) )
+					{
+						USHORT nMasterNum = GetMasterPageIndex( nAktPageNum, eAktPageKind );
+						PptSlidePersistList* pPageList = GetPageList( PPT_MASTERPAGE );
+						if ( pPageList && ( nMasterNum < pPageList->Count() ) )
+						{
+							PptSlidePersistEntry* pE = (*pPageList)[ nMasterNum ];
+							if ( pE )
+							{
+								UINT32 nOfs = pE->aPersistAtom.nReserved;
+								if ( nOfs )
+								{
+									rStCtrl.Seek( nOfs );
+									nPageRecEnd = nOfs + 16;
+									continue;
+								}
+							}
+						}
+
+					}
+				}
+				break;
+			}
+		}
+	}
+
+	if ( !bNewAnimationsUsed )
+	{
+		tAnimationVector aAnimationsOnThisPage;
+
+		// add effects from page in correct order
+		SdrObjListIter aSdrIter( *pPage, IM_FLAT );
+		while ( aSdrIter.IsMore() )
+		{
+			SdrObject* pObj = aSdrIter.Next();
+            tAnimationMap::iterator aFound = maAnimations.find( pObj );
+            if( aFound != maAnimations.end() )
+			{
+				std::pair< SdrObject*, Ppt97AnimationPtr > aPair( (*aFound).first, (*aFound).second );
+                aAnimationsOnThisPage.push_back( aPair );
+			}
+		}
+
+		Ppt97AnimationStlSortHelper aSortHelper;
+		std::sort( aAnimationsOnThisPage.begin(), aAnimationsOnThisPage.end(), aSortHelper );
+
+		tAnimationVector::iterator aIter( aAnimationsOnThisPage.begin() );
+		const tAnimationVector::iterator aEnd( aAnimationsOnThisPage.end() );
+
+		for( ;aIter != aEnd; aIter++ )
+		{
+			Ppt97AnimationPtr pPpt97Animation = (*aIter).second;;
+            if( pPpt97Animation.get() )
+                pPpt97Animation->createAndSetCustomAnimationEffect( (*aIter).first );
+		}
+	}
+	rStCtrl.Seek( nFilePosMerk );
+}
+
+//////////////////////////////////////////////////////////////////////////
+//
+// Import von Sounds
+//
+// Die Sounds werden nicht nur als String importiert sondern auch
+// in die Gallery einefuegt, falls dort noch nicht vorhanden.
+//
+///////////////////////////////////////////////////////////////////////////
+
+String ImplSdPPTImport::ReadSound(UINT32 nSoundRef) const
+{
+	String aRetval;
+    UINT32 nPosMerk = rStCtrl.Tell();
+    DffRecordHeader aDocHd;
+    if ( SeekToDocument( &aDocHd ) )
+	{
+        UINT32 nSoundLen = aDocHd.GetRecEndFilePos();
+	    DffRecordHeader aSoundBlockRecHd;
+        if( SeekToRec( rStCtrl, PPT_PST_SoundCollection, nSoundLen, &aSoundBlockRecHd ) )
+		{
+	        UINT32 nDataLen = aSoundBlockRecHd.GetRecEndFilePos();
+		    DffRecordHeader aSoundRecHd;
+			BOOL bRefStrValid = FALSE;
+			BOOL bDone = FALSE;
+
+			while( !bDone && SeekToRec( rStCtrl, PPT_PST_Sound, nDataLen, &aSoundRecHd ) )
+			{
+				UINT32 nStrLen = aSoundRecHd.GetRecEndFilePos();
+				String aRefStr;
+			    UINT32 nPosMerk2 = rStCtrl.Tell();
+				if ( SeekToRec( rStCtrl, PPT_PST_CString, nStrLen, NULL, 2 ) )
+				{
+					if ( ReadString( aRefStr ) )
+						bRefStrValid = TRUE;
+				}
+				if ( bRefStrValid )
+				{
+					if ( UniString::CreateFromInt32( nSoundRef ) == aRefStr )
+					{
+						rStCtrl.Seek( nPosMerk2 );
+						if ( SeekToRec( rStCtrl, PPT_PST_CString, nStrLen, NULL, 0 ) )
+						{
+							ReadString( aRetval );
+							bDone = TRUE;
+						}
+					}
+				}
+				if ( bDone )
+				{
+					// ueberpruefen, ob diese Sound-Datei schon
+					// existiert. Wenn nicht, exportiere diese
+					// in unser lokales Sound-Verzeichnis.
+					BOOL	bSoundExists = FALSE;
+					List*	pSoundList = new List();
+
+					GalleryExplorer::FillObjList( GALLERY_THEME_SOUNDS, *pSoundList );
+					GalleryExplorer::FillObjList( GALLERY_THEME_USERSOUNDS, *pSoundList );
+
+					for( ULONG n = 0; ( n < pSoundList->Count() ) && !bSoundExists; n++ )
+					{
+						INetURLObject	aURL( *(String*)pSoundList->GetObject( n ) );
+						String			aSoundName( aURL.GetName() );
+
+						if( aSoundName == aRetval )
+						{
+							aRetval = *(String*)pSoundList->GetObject( n );
+							bSoundExists = TRUE;
+						}
+					}
+
+					for ( void* pPtr = pSoundList->First(); pPtr; pPtr = pSoundList->Next() )
+						delete (String*)pPtr;
+
+					delete pSoundList;
+
+					if ( !bSoundExists )
+					{
+						rStCtrl.Seek( nPosMerk2 );
+						DffRecordHeader aSoundDataRecHd;
+						if ( SeekToRec( rStCtrl, PPT_PST_SoundData, nStrLen, &aSoundDataRecHd, 0 ) )
+						{
+							String			aGalleryDir( SvtPathOptions().GetGalleryPath() );
+							INetURLObject	aGalleryUserSound( aGalleryDir.GetToken( aGalleryDir.GetTokenCount( ';' ) - 1 ) );
+
+							aGalleryUserSound.Append( aRetval );
+							UINT32 nSoundDataLen = aSoundDataRecHd.nRecLen;
+							UINT8* pBuf = new UINT8[ nSoundDataLen ];
+
+							rStCtrl.Read( pBuf, nSoundDataLen );
+							SvStream* pOStm = ::utl::UcbStreamHelper::CreateStream( aGalleryUserSound.GetMainURL( INetURLObject::NO_DECODE ), STREAM_WRITE | STREAM_TRUNC );
+
+							if( pOStm )
+							{
+								pOStm->Write( pBuf, nSoundDataLen );
+
+								if( pOStm->GetError() == ERRCODE_NONE )
+								{
+									GalleryExplorer::InsertURL( GALLERY_THEME_USERSOUNDS, aGalleryUserSound.GetMainURL( INetURLObject::NO_DECODE ) );
+									aRetval = aGalleryUserSound.GetMainURL( INetURLObject::NO_DECODE );
+								}
+
+								delete pOStm;
+							}
+
+							delete[] pBuf;
+						}
+					}
+				}
+				if ( !bDone )
+					aSoundRecHd.SeekToEndOfRecord( rStCtrl );
+			}
+        }
+    }
+    rStCtrl.Seek( nPosMerk );
+	return aRetval;
+}
+
+//////////////////////////////////////////////////////////////////////////
+//
+// media object import, the return value is the url to the media object
+//
+//////////////////////////////////////////////////////////////////////////
+
+String ImplSdPPTImport::ReadMedia( sal_uInt32 nMediaRef ) const
+{
+	String aRetVal;
+	DffRecordHeader* pHd( const_cast<ImplSdPPTImport*>(this)->aDocRecManager.GetRecordHeader( PPT_PST_ExObjList, SEEK_FROM_BEGINNING ) );
+	if ( pHd )
+	{
+		pHd->SeekToContent( rStCtrl );
+		while ( ( rStCtrl.Tell() < pHd->GetRecEndFilePos() ) && !aRetVal.Len() )
+		{
+			DffRecordHeader aHdMovie;
+			rStCtrl >> aHdMovie;
+			switch( aHdMovie.nRecType )
+			{
+				case PPT_PST_ExAviMovie :
+				case PPT_PST_ExMCIMovie :
+				{
+					DffRecordHeader aExVideoHd;
+					if ( SeekToRec( rStCtrl, PPT_PST_ExVideo, aHdMovie.GetRecEndFilePos(), &aExVideoHd ) )
+					{
+						DffRecordHeader aExMediaAtomHd;
+						if ( SeekToRec( rStCtrl, PPT_PST_ExMediaAtom, aExVideoHd.GetRecEndFilePos(), &aExMediaAtomHd ) )
+						{
+							sal_uInt32 nRef;
+							rStCtrl >> nRef;
+							if ( nRef == nMediaRef )
+							{
+								aExVideoHd.SeekToContent( rStCtrl );
+								while( rStCtrl.Tell() < aExVideoHd.GetRecEndFilePos() )
+								{
+									DffRecordHeader aHd;
+									rStCtrl >> aHd;
+									switch( aHd.nRecType )
+									{
+										case PPT_PST_CString :
+										{
+											aHd.SeekToBegOfRecord( rStCtrl );
+											String aStr;
+											if ( ReadString( aStr ) )
+											{
+												if( ::utl::LocalFileHelper::ConvertPhysicalNameToURL( aStr, aRetVal ) )
+												{
+													aRetVal = INetURLObject( aRetVal ).GetMainURL( INetURLObject::DECODE_UNAMBIGUOUS );
+												}
+											}
+										}
+										break;
+									}
+									aHd.SeekToEndOfRecord( rStCtrl );
+								}
+								break;
+							}
+						}
+					}
+				}
+				break;
+			}
+			aHdMovie.SeekToEndOfRecord( rStCtrl );
+		}
+	}
+	return aRetVal;
+}
+
+//////////////////////////////////////////////////////////////////////////
+//
+// Import von Objekten
+//
+//////////////////////////////////////////////////////////////////////////
+
+void ImplSdPPTImport::FillSdAnimationInfo( SdAnimationInfo* pInfo, PptInteractiveInfoAtom* pIAtom, String aMacroName )
+{
+	// Lokale Informationen in pInfo eintragen
+	if( pIAtom->nSoundRef )
+	{
+		pInfo->maBookmark = ReadSound( pIAtom->nSoundRef );	// Pfad zum Soundfile in MSDOS-Notation
+		pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_SOUND;			// RunProgramAction
+	}
+//	if ( nFlags & 0x01 )	// koennen wir nicht ( beim Anklicken markieren )
+	switch ( pIAtom->nAction )
+	{
+//		case 0x01 : 										// MacroAction
+//		{
+//			pInfo->meClickAction = ::com::sun::star::presentation::::com::sun::star::presentation::ClickAction_MACRO;
+//			// aMacro liegt in folgender Form vor:
+//			// "Macroname.Modulname.Libname.Dokumentname" oder
+//			// "Macroname.Modulname.Libname.Applikationsname"
+//			pInfo->maBookmark = aMacroName;
+//		}
+//		break;
+		case 0x02 : 										// RunProgramAction
+		{
+			pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_PROGRAM;
+			pInfo->maBookmark = aMacroName;					// Programmname in aBookmark
+		}
+		break;
+		case 0x03 : 										// JumpAction
+		{
+			switch( pIAtom->nJump )
+			{
+				case 0x01 :
+					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_NEXTPAGE; 		// Next slide
+				break;
+				case 0x02 :
+					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_PREVPAGE; 		// Previous slide
+				break;
+				case 0x03 :
+					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_FIRSTPAGE;		// First slide
+				break;
+				case 0x04 :
+					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_LASTPAGE; 		// last Slide
+				break;
+				case 0x05 :
+					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_PREVPAGE; 		// Last slide viewed
+				break;
+				case 0x06 :
+					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_STOPPRESENTATION; // End show
+				break;
+				default :
+					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_NONE; 			// 0x00: no action, else unknown
+				break;
+			}
+		}
+		break;
+		case 0x04 :
+		{
+			SdHyperlinkEntry* pPtr;
+			for ( pPtr = (SdHyperlinkEntry*)aHyperList.First(); pPtr; pPtr = (SdHyperlinkEntry*)aHyperList.Next() )
+			{
+				if ( pPtr->nIndex == pIAtom->nExHyperlinkId )
+					break;
+			}
+			if ( pPtr )
+			{
+				switch( pIAtom->nHyperlinkType )
+				{
+					case 9:
+					case 10:
+					break;
+					case 8: 										// hyperlink : URL
+					{
+						if ( pPtr->aTarget.Len() )
+						{
+							pInfo->maBookmark = String( pPtr->aTarget );
+							pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_DOCUMENT;
+						}
+					}
+					break;
+					case 7: 										// hyperlink auf eine Seite
+					{
+						if ( pPtr->aConvSubString.Len() )
+                        {
+							pInfo->maBookmark = pPtr->aConvSubString;
+							pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_BOOKMARK;
+						}
+					}
+					break;
+				}
+			}
+		}
+		break;
+		case 0x05 : 					// OLEAction ( OLEVerb to use, 0==first, 1==secnd, .. )
+		case 0x06 : 					// MediaAction
+		case 0x07 : 					// CustomShowAction
+		default :						// 0x00: no action, else unknown action
+		break;
+	}
+}
+
+SdrObject* ImplSdPPTImport::ApplyTextObj( PPTTextObj* pTextObj, SdrTextObj* pObj, SdPage* pPage,
+										SfxStyleSheet* pSheet, SfxStyleSheet** ppStyleSheetAry ) const
+{
+	SfxStyleSheet*	pStyleSheetAry[ 9 ];
+	SdrTextObj*		pText = pObj;
+	SdrObject*		pRet = pText;
+
+	ppStyleSheetAry = NULL;
+
+	PresObjKind ePresKind = PRESOBJ_NONE;
+	PptOEPlaceholderAtom* pPlaceHolder = pTextObj->GetOEPlaceHolderAtom();
+	String aPresentationText;
+	if ( pPlaceHolder )
+	{
+		switch( pPlaceHolder->nPlaceholderId )
+		{
+			case PPT_PLACEHOLDER_MASTERNOTESSLIDEIMAGE :
+			case PPT_PLACEHOLDER_MASTERCENTEREDTITLE :
+			case PPT_PLACEHOLDER_MASTERTITLE :
+			{
+				ePresKind = PRESOBJ_TITLE;
+				aPresentationText = pPage->GetPresObjText( ePresKind );
+			}
+			break;
+			case PPT_PLACEHOLDER_MASTERBODY	:
+			{
+				ePresKind = PRESOBJ_OUTLINE;
+				aPresentationText = pPage->GetPresObjText( ePresKind );
+			}
+			break;
+			case PPT_PLACEHOLDER_MASTERSUBTITLE :
+			{
+				ePresKind = PRESOBJ_TEXT;
+				aPresentationText = pPage->GetPresObjText( ePresKind );
+			}
+			break;
+			case PPT_PLACEHOLDER_MASTERNOTESBODYIMAGE :
+			{
+				ePresKind = PRESOBJ_NOTES;
+				aPresentationText = pPage->GetPresObjText( ePresKind );
+			}
+			break;
+			case PPT_PLACEHOLDER_MASTERDATE :			ePresKind = PRESOBJ_DATETIME;	break;
+			case PPT_PLACEHOLDER_MASTERSLIDENUMBER :	ePresKind = PRESOBJ_SLIDENUMBER;break;
+			case PPT_PLACEHOLDER_MASTERFOOTER :			ePresKind = PRESOBJ_FOOTER;		break;
+			case PPT_PLACEHOLDER_MASTERHEADER :			ePresKind = PRESOBJ_HEADER;		break;
+		}
+	}
+	switch ( pTextObj->GetDestinationInstance() )
+	{
+		case TSS_TYPE_PAGETITLE :
+		case TSS_TYPE_TITLE :
+		{
+			pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_TITLE );
+			if ( pSheet )
+				((SdrAttrObj*)pText)->SdrAttrObj::NbcSetStyleSheet( pSheet, TRUE );
+			DBG_ASSERT( pSheet, "ImplSdPPTImport::ApplyTextObj -> could not get stylesheet for titleobject (SJ)" );
+		}
+		break;
+		case TSS_TYPE_SUBTITLE :
+		{
+			pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_TEXT );
+			if ( pSheet )
+				((SdrAttrObj*)pText)->SdrAttrObj::NbcSetStyleSheet( pSheet, TRUE );
+			DBG_ASSERT( pSheet, "ImplSdPPTImport::ApplyTextObj -> could not get stylesheet for subtitleobject (SJ)" );
+		}
+		break;
+		case TSS_TYPE_BODY :
+		case TSS_TYPE_HALFBODY :
+		case TSS_TYPE_QUARTERBODY :
+		{
+			for ( UINT16 nLevel = 9; nLevel; nLevel-- )
+			{
+				String aName( pPage->GetLayoutName() );
+				aName.Append( (sal_Unicode)( ' ' ) );
+				aName.Append( String::CreateFromInt32( nLevel ) );
+				pSheet = (SfxStyleSheet*)mpDoc->GetStyleSheetPool()->Find( aName, SD_STYLE_FAMILY_MASTERPAGE );
+				if ( pSheet )
+					pText->StartListening( *pSheet );
+				pStyleSheetAry[ nLevel - 1 ] = pSheet;
+			}
+			DBG_ASSERT( pSheet, "ImplSdPPTImport::ApplyTextObj -> could not get stylesheet for outlinerobject (SJ)" );
+			if ( pSheet )
+				((SdrAttrObj*)pText)->SdrAttrObj::NbcSetStyleSheet( pSheet, TRUE );
+			ppStyleSheetAry = &pStyleSheetAry[ 0 ];
+		}
+		break;
+		case TSS_TYPE_NOTES :
+		{
+			if ( pPlaceHolder && ( ( pPlaceHolder->nPlaceholderId == PPT_PLACEHOLDER_NOTESSLIDEIMAGE )
+				|| ( pPlaceHolder->nPlaceholderId == PPT_PLACEHOLDER_MASTERNOTESSLIDEIMAGE ) ) )
+			{
+				pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_TITLE );
+				if ( pSheet )
+					((SdrAttrObj*)pText)->SdrAttrObj::NbcSetStyleSheet( pSheet, TRUE );
+				DBG_ASSERT( pSheet, "ImplSdPPTImport::ApplyTextObj -> could not get stylesheet for titleobject (SJ)" );
+			}
+			else
+			{
+				pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_NOTES );
+				DBG_ASSERT( pSheet, "ImplSdPPTImport::ApplyTextObj -> could not get stylesheet for notesobj (SJ)" );
+				if ( pSheet )
+					((SdrAttrObj*)pText)->SdrAttrObj::NbcSetStyleSheet( pSheet, TRUE );
+			}
+		}
+		break;
+		case TSS_TYPE_UNUSED :
+		case TSS_TYPE_TEXT_IN_SHAPE :
+		{
+			switch( ePresKind )
+			{
+				case PRESOBJ_DATETIME :
+				case PRESOBJ_SLIDENUMBER :
+				case PRESOBJ_FOOTER :
+				case PRESOBJ_HEADER :
+					pSheet = (SfxStyleSheet*)mpDoc->GetStyleSheetPool()->Find( String(SdResId( STR_PSEUDOSHEET_BACKGROUNDOBJECTS )), SD_STYLE_FAMILY_PSEUDO );
+				break;
+				default :
+					pSheet = (SfxStyleSheet*)mpDoc->GetStyleSheetPool()->Find( String(SdResId( STR_STANDARD_STYLESHEET_NAME )), SD_STYLE_FAMILY_GRAPHICS );
+			}
+		}
+		break;
+	}
+	pText = (SdrTextObj*)SdrPowerPointImport::ApplyTextObj( pTextObj, pText, pPage, pSheet, ppStyleSheetAry );
+	if ( pPlaceHolder && pPlaceHolder->nPlaceholderId )
+	{
+		if ( eAktPageKind == PPT_MASTERPAGE )
+		{
+			sal_Bool bCreatePlaceHolder = ( pTextObj->GetInstance() != TSS_TYPE_SUBTITLE ) && ( pTextObj->GetInstance() != TSS_TYPE_UNUSED );
+			sal_Bool bIsHeaderFooter = ( ePresKind == PRESOBJ_HEADER) || (ePresKind == PRESOBJ_FOOTER)
+										|| (ePresKind == PRESOBJ_DATETIME) || (ePresKind == PRESOBJ_SLIDENUMBER);
+			if ( bCreatePlaceHolder && ( pTextObj->GetInstance() == TSS_TYPE_TEXT_IN_SHAPE ) )
+				bCreatePlaceHolder = bIsHeaderFooter;
+			if ( bCreatePlaceHolder )
+			{
+				if ( !bIsHeaderFooter )
+				{
+					pText->SetNotVisibleAsMaster( TRUE );
+					pText->SetEmptyPresObj( TRUE );
+				}
+				pText->SetUserCall( pPage );
+				pPage->InsertPresObj( pText, ePresKind );
+				SdrOutliner* pOutl = NULL;
+				if ( pTextObj->GetInstance() == TSS_TYPE_NOTES )
+					pOutl = GetDrawOutliner( pText );
+				if ( aPresentationText.Len() )
+					pPage->SetObjText( (SdrTextObj*)pText, pOutl, ePresKind, aPresentationText );
+
+				SfxStyleSheet* pSheet2( pPage->GetStyleSheetForPresObj( ePresKind ) );
+				if ( pSheet2 )
+				{
+					SfxItemSet& rItemSet = pSheet2->GetItemSet();
+					rItemSet.Put( (SdrTextLeftDistItem&)pText->GetMergedItem( SDRATTR_TEXT_LEFTDIST ) );
+					rItemSet.Put( (SdrTextRightDistItem&)pText->GetMergedItem( SDRATTR_TEXT_RIGHTDIST ) );
+					rItemSet.Put( (SdrTextUpperDistItem&)pText->GetMergedItem( SDRATTR_TEXT_UPPERDIST ) );
+					rItemSet.Put( (SdrTextLowerDistItem&)pText->GetMergedItem( SDRATTR_TEXT_LOWERDIST ) );
+				}
+				pText->NbcSetStyleSheet( pSheet2, TRUE );
+
+				SfxItemSet aTempAttr( mpDoc->GetPool() );
+				SdrTextMinFrameHeightItem aMinHeight( pText->GetLogicRect().GetSize().Height() );
+				aTempAttr.Put( aMinHeight );
+				SdrTextAutoGrowHeightItem aAutoGrowHeight( FALSE );
+				aTempAttr.Put( aAutoGrowHeight );
+				pText->SetMergedItemSet(aTempAttr);
+			}
+			else
+			{
+				pRet = NULL;
+			}
+		}
+		else
+		{
+			const PptSlideLayoutAtom* pSlideLayout = GetSlideLayoutAtom();
+			if ( pSlideLayout || ( eAktPageKind == PPT_NOTEPAGE ) )
+			{
+				INT16 nPlaceholderId = pPlaceHolder->nPlaceholderId;
+				UINT16 i = 0;
+				if ( eAktPageKind == PPT_SLIDEPAGE )
+				{
+					for ( ; i < 8; i++ )
+					{
+						if ( pSlideLayout->aPlaceholderId[ i ] == nPlaceholderId )
+							break;
+					}
+				}
+				if ( i < 8 )
+				{
+					PresObjKind ePresObjKind = PRESOBJ_NONE;
+					sal_Bool    bEmptyPresObj = sal_True;
+                    sal_Bool    bVertical = sal_False;
+					if ( ( pTextObj->GetShapeType() == mso_sptRectangle ) || ( pTextObj->GetShapeType() == mso_sptTextBox ) )
+					{
+						if ( pTextObj->Count() )
+							bEmptyPresObj = sal_False;
+						switch ( nPlaceholderId )
+						{
+							case PPT_PLACEHOLDER_NOTESBODY :	        ePresObjKind = PRESOBJ_NOTES;	break;
+                            case PPT_PLACEHOLDER_VERTICALTEXTTITLE :
+                                bVertical = sal_True;   // PASSTHROUGH !!!
+							case PPT_PLACEHOLDER_TITLE :		        ePresObjKind = PRESOBJ_TITLE;	break;
+                            case PPT_PLACEHOLDER_VERTICALTEXTBODY :
+                                bVertical = sal_True;   // PASSTHROUGH !!!
+							case PPT_PLACEHOLDER_BODY : 		        ePresObjKind = PRESOBJ_OUTLINE; break;
+							case PPT_PLACEHOLDER_CENTEREDTITLE :        ePresObjKind = PRESOBJ_TITLE;	break;
+							case PPT_PLACEHOLDER_SUBTITLE : 	        ePresObjKind = PRESOBJ_TEXT;	break;		// PRESOBJ_OUTLINE
+
+							default :
+							{
+								if ( !pTextObj->Count() )
+								{
+									switch ( nPlaceholderId )
+									{
+										case PPT_PLACEHOLDER_MEDIACLIP :
+										case PPT_PLACEHOLDER_OBJECT : ePresObjKind = PRESOBJ_OBJECT; break;
+										case PPT_PLACEHOLDER_GRAPH : ePresObjKind = PRESOBJ_CHART; break;
+										case PPT_PLACEHOLDER_TABLE : ePresObjKind = PRESOBJ_TABLE; break;
+										case PPT_PLACEHOLDER_CLIPART : ePresObjKind = PRESOBJ_GRAPHIC; break;
+										case PPT_PLACEHOLDER_ORGANISZATIONCHART : ePresObjKind = PRESOBJ_ORGCHART; break;
+									}
+								}
+							};
+						}
+					}
+					else if ( pTextObj->GetShapeType() == mso_sptPictureFrame )
+					{
+						if ( !pTextObj->Count() && pObj->ISA( SdrGrafObj ) )
+						{
+							bEmptyPresObj = sal_False;
+							switch ( nPlaceholderId )
+							{
+								case PPT_PLACEHOLDER_MEDIACLIP :
+								case PPT_PLACEHOLDER_OBJECT : ePresObjKind = PRESOBJ_OBJECT; break;
+								case PPT_PLACEHOLDER_GRAPH : ePresObjKind = PRESOBJ_CHART; break;
+								case PPT_PLACEHOLDER_TABLE : ePresObjKind = PRESOBJ_TABLE; break;
+								case PPT_PLACEHOLDER_CLIPART : ePresObjKind = PRESOBJ_GRAPHIC; break;
+								case PPT_PLACEHOLDER_ORGANISZATIONCHART : ePresObjKind = PRESOBJ_ORGCHART; break;
+							}
+						}
+					}
+					if ( ePresObjKind != PRESOBJ_NONE )
+					{
+						if ( !bEmptyPresObj )
+						{
+							pPage->InsertPresObj( pRet, ePresObjKind );
+						}
+						else
+						{
+							SdrObject* pPresObj = pPage->CreatePresObj( ePresObjKind, bVertical, pText->GetLogicRect(), TRUE );
+							pPresObj->SetUserCall( pPage );
+
+							SfxItemSet aSet( pSdrModel->GetItemPool() );
+							ApplyAttributes( rStCtrl, aSet );
+							pPresObj->SetMergedItemSet(aSet);
+
+							if ( ( eAktPageKind != PPT_NOTEPAGE ) && ( pSlideLayout->aPlacementId[ i ] != (ULONG)-1 ) )
+							{
+								SdrObject* pTitleObj = ((SdPage&)pPage->TRG_GetMasterPage()).GetPresObj( PRESOBJ_TITLE );
+								SdrObject* pOutlineObj = ((SdPage&)pPage->TRG_GetMasterPage()).GetPresObj( PRESOBJ_OUTLINE );
+
+								Rectangle aTitleRect;
+								Rectangle aOutlineRect;
+								Size	  aOutlineSize;
+
+								if ( pTitleObj )
+									aTitleRect = pTitleObj->GetLogicRect();
+								if ( pOutlineObj )
+								{
+									aOutlineRect = pOutlineObj->GetLogicRect();
+									aOutlineSize = aOutlineRect.GetSize();
+								}
+								Rectangle aLogicRect( pPresObj->GetLogicRect() );
+								Size	  aLogicSize( aLogicRect.GetSize() );
+
+								switch ( pSlideLayout->aPlacementId[ i ] )
+								{
+									case 0 :			// Lage im Titelbereich
+									{
+										if ( aLogicRect != aTitleRect )
+											pPresObj->SetUserCall( NULL );
+									}
+									break;
+
+									case 1:
+									{
+										if ( pSlideLayout->eLayout == PPT_LAYOUT_TITLEANDBODYSLIDE )
+										{	// Lage im Outlinebereich
+											if ( aLogicRect != aOutlineRect )
+												pPresObj->SetUserCall( NULL );
+										}
+										else if ( pSlideLayout->eLayout == PPT_LAYOUT_2COLUMNSANDTITLE )
+										{	// Lage im Outlinebereich links
+											if (Abs(aLogicRect.Left()	- aOutlineRect.Left())	 > MAX_USER_MOVE ||
+												Abs(aLogicRect.Top()	- aOutlineRect.Top())	 > MAX_USER_MOVE ||
+												Abs(aLogicRect.Bottom() - aOutlineRect.Bottom()) > MAX_USER_MOVE ||
+													aLogicSize.Width()	/ aOutlineSize.Width()	 < 0.48 		 ||
+													aLogicSize.Width()	/ aOutlineSize.Width()	 > 0.5)
+											{
+												pPresObj->SetUserCall(NULL);
+											}
+										}
+										else if ( pSlideLayout->eLayout == PPT_LAYOUT_2ROWSANDTITLE )
+										{	// Lage im Outlinebereich oben
+											if (Abs(aLogicRect.Left()  - aOutlineRect.Left())  > MAX_USER_MOVE ||
+												Abs(aLogicRect.Top()   - aOutlineRect.Top())   > MAX_USER_MOVE ||
+												Abs(aLogicRect.Right() - aOutlineRect.Right()) > MAX_USER_MOVE)
+											{
+												pPresObj->SetUserCall( NULL );
+											}
+										}
+										else if (Abs(aLogicRect.Left() - aOutlineRect.Left()) > MAX_USER_MOVE ||
+												 Abs(aLogicRect.Top()  - aOutlineRect.Top())  > MAX_USER_MOVE)
+										{	// Lage im Outlinebereich links oben
+											pPresObj->SetUserCall( NULL );
+										}
+									}
+									break;
+
+									case 2:
+									{
+										if ( pSlideLayout->eLayout == PPT_LAYOUT_2COLUMNSANDTITLE )
+										{	// Lage im Outlinebereich rechts
+											if (Abs(aLogicRect.Right()	- aOutlineRect.Right())  > MAX_USER_MOVE ||
+												Abs(aLogicRect.Top()	- aOutlineRect.Top())	 > MAX_USER_MOVE ||
+												Abs(aLogicRect.Bottom() - aOutlineRect.Bottom()) > MAX_USER_MOVE ||
+													aLogicSize.Width()	/ aOutlineSize.Width()	 < 0.48 		 ||
+													aLogicSize.Width()	/ aOutlineSize.Width()	 > 0.5)
+											{
+												pPresObj->SetUserCall( NULL );
+											}
+										}
+										else if ( pSlideLayout->eLayout == PPT_LAYOUT_2ROWSANDTITLE )
+										{	// Lage im Outlinebereich unten
+											if (Abs(aLogicRect.Left()	- aOutlineRect.Left())	 > MAX_USER_MOVE ||
+												Abs(aLogicRect.Bottom() - aOutlineRect.Bottom()) > MAX_USER_MOVE ||
+												Abs(aLogicRect.Right()	- aOutlineRect.Right())  > MAX_USER_MOVE)
+											{
+												pPresObj->SetUserCall( NULL );
+											}
+										}
+										else if (Abs(aLogicRect.Right() - aOutlineRect.Right()) > MAX_USER_MOVE ||
+												 Abs(aLogicRect.Top()	- aOutlineRect.Top())	> MAX_USER_MOVE)
+										{	// Lage im Outlinebereich rechts oben
+											pPresObj->SetUserCall(NULL);
+										}
+									}
+									break;
+
+									case 3:
+									{	// Lage im Outlinebereich links unten
+										if (Abs(aLogicRect.Left()	- aOutlineRect.Left())	 > MAX_USER_MOVE ||
+											Abs(aLogicRect.Bottom() - aOutlineRect.Bottom()) > MAX_USER_MOVE)
+										{
+											pPresObj->SetUserCall( NULL );
+										}
+									}
+									break;
+
+									case 4:
+									{	// Lage im Outlinebereich rechts unten
+										if (Abs(aLogicRect.Right() - aOutlineRect.Right())	 > MAX_USER_MOVE ||
+											Abs(aLogicRect.Bottom() - aOutlineRect.Bottom()) > MAX_USER_MOVE)
+										{
+											pObj->SetUserCall( NULL );
+										}
+									}
+									break;
+								}
+							}
+							pRet = NULL;	// return zero cause this obj was already inserted by CreatePresObj
+						}
+					}
+					else if ( !pTextObj->Count() )
+						pRet = NULL;
+				}
+			}
+		}
+	}
+	if ( pRet != pText )
+    {
+        SdrObject* pFree( pText );
+		SdrObject::Free( pFree );
+    }
+	return pRet;
+}
+
+SdrObject* ImplSdPPTImport::ProcessObj( SvStream& rSt, DffObjData& rObjData, void* pData, Rectangle& rTextRect, SdrObject* pRet )
+{
+	SdrObject* pObj = SdrPowerPointImport::ProcessObj( rSt, rObjData, pData, rTextRect, pRet );
+
+	// Animationseffekte des Objektes lesen
+	if ( pObj )
+	{
+		BOOL bInhabitanceChecked = FALSE;
+		BOOL bAnimationInfoFound = FALSE;
+		DffRecordHeader aMasterShapeHd;
+
+		if ( maShapeRecords.SeekToContent( rSt, DFF_msofbtClientData, SEEK_FROM_CURRENT_AND_RESTART ) )
+		{
+			DffRecordHeader& rHdClientData = *maShapeRecords.Current();
+			while( TRUE )
+			{
+				UINT32 nClientDataLen = rHdClientData.GetRecEndFilePos();
+				DffRecordHeader aHd;
+				do
+				{
+					rSt >> aHd;
+					UINT32 nHdRecEnd = aHd.GetRecEndFilePos();
+					switch ( aHd.nRecType )
+					{
+						case PPT_PST_AnimationInfo :
+						{
+							DffRecordHeader aHdAnimInfoAtom;
+							if ( SeekToRec( rSt, PPT_PST_AnimationInfoAtom, nHdRecEnd, &aHdAnimInfoAtom ) )
+							{
+								// read data from stream
+                                Ppt97AnimationPtr pAnimation( new Ppt97Animation( rSt ) );
+                                // store animation informations
+                                if( pAnimation->HasEffect() )
+                                {
+                                    // translate color to RGB
+                                    pAnimation->SetDimColor( MSO_CLR_ToColor(pAnimation->GetDimColor()).GetColor() );
+                                    // translate sound bits to file url
+                                    if( pAnimation->HasSoundEffect() )
+                                        pAnimation->SetSoundFileUrl( ReadSound( pAnimation->GetSoundRef() ) );
+
+								    bool bDontAnimateInvisibleShape = false;
+                                    {
+                                        SdrTextObj* pTextObj = dynamic_cast<SdrTextObj*>(pObj);
+
+                                        if( pTextObj && pTextObj->HasText() &&
+                                            !pObj->ISA( SdrObjGroup ) &&
+                                            pAnimation->HasAnimateAssociatedShape() )
+                                        {
+										    const SfxItemSet& rObjItemSet = pObj->GetMergedItemSet();
+
+				                            XFillStyle eFillStyle = ((XFillStyleItem&)(rObjItemSet.Get(XATTR_FILLSTYLE))).GetValue();
+				                            XLineStyle eLineStyle = ((XLineStyleItem&)(rObjItemSet.Get(XATTR_LINESTYLE))).GetValue();
+
+				                            if ( ( eFillStyle == XFILL_NONE ) && ( eLineStyle == XLINE_NONE ) )
+                                                bDontAnimateInvisibleShape = true;
+                                        }
+                                    }
+                                    if( bDontAnimateInvisibleShape )
+                                        pAnimation->SetAnimateAssociatedShape(false);
+
+                                    //maybe some actions necessary to ensure that animations on master pages are played before animations on normal pages
+                                    ///mabe todo in future: bool bIsEffectOnMasterPage = !bInhabitanceChecked;?
+
+                                    maAnimations[pObj] = pAnimation;
+
+								    bAnimationInfoFound = TRUE;
+                                }
+							}
+						}
+						break;
+						case PPT_PST_InteractiveInfo:
+						{
+							UINT32 nFilePosMerk2 = rSt.Tell();
+							String aMacroName;
+
+							if(SeekToRec( rSt, PPT_PST_CString, nHdRecEnd, NULL, 0 ) )
+								ReadString(aMacroName);
+
+							rSt.Seek( nFilePosMerk2 );
+							DffRecordHeader aHdInteractiveInfoAtom;
+							if ( SeekToRec( rSt, PPT_PST_InteractiveInfoAtom, nHdRecEnd, &aHdInteractiveInfoAtom ) )
+							{
+								PptInteractiveInfoAtom aInteractiveInfoAtom;
+								rSt >> aInteractiveInfoAtom;
+
+								// interactive object
+								SdAnimationInfo* pInfo = SdDrawDocument::GetShapeUserData(*pObj, true);
+
+								( (ImplSdPPTImport*) this )->FillSdAnimationInfo( pInfo, &aInteractiveInfoAtom, aMacroName );
+								if ( aInteractiveInfoAtom.nAction == 6 ) // Sj -> media action
+								{
+									rHdClientData.SeekToContent( rStCtrl );
+									DffRecordHeader aObjRefAtomHd;
+									if ( SeekToRec( rSt, PPT_PST_ExObjRefAtom, nHdRecEnd, &aObjRefAtomHd ) )
+									{
+										sal_uInt32 nRef;
+										rSt >> nRef;
+										String aMediaURL( ReadMedia( nRef ) );
+										if ( !aMediaURL.Len() )
+											aMediaURL = ReadSound( nRef );
+										if ( aMediaURL.Len() )
+										{
+											SdrMediaObj* pMediaObj = new SdrMediaObj( pObj->GetSnapRect() );
+											pMediaObj->SetModel( pObj->GetModel() );
+											pMediaObj->SetMergedItemSet( pObj->GetMergedItemSet() );
+
+                                            //--remove object from maAnimations list and add the new object instead
+                                            Ppt97AnimationPtr pAnimation;
+                                            {
+                                                tAnimationMap::iterator aFound = maAnimations.find( pObj );
+                                                if( aFound != maAnimations.end() )
+                                                {
+                                                    pAnimation = (*aFound).second;
+                                                    maAnimations.erase(aFound);
+                                                }
+                                                maAnimations[pMediaObj] = pAnimation;
+                                            }
+                                            //--
+
+											SdrObject::Free( pObj ), pObj = pMediaObj;	// SJ: hoping that pObj is not inserted in any list
+											pMediaObj->setURL( aMediaURL );
+										}
+									}
+								}
+							}
+						}
+						break;
+					}
+					aHd.SeekToEndOfRecord( rSt );
+				}
+				while( ( rSt.GetError() == 0 ) && ( rSt.Tell() < nClientDataLen ) );
+
+				if ( bInhabitanceChecked || bAnimationInfoFound )
+					break;
+				bInhabitanceChecked = TRUE;
+				if ( ! ( IsProperty( DFF_Prop_hspMaster ) && SeekToShape( rSt, pData, GetPropertyValue( DFF_Prop_hspMaster ) ) ) )
+					break;
+				rSt >> aMasterShapeHd;
+				if ( !SeekToRec( rSt, DFF_msofbtClientData, aMasterShapeHd.GetRecEndFilePos(), &aMasterShapeHd ) )
+					break;
+				aMasterShapeHd.SeekToContent( rSt );
+				rHdClientData = aMasterShapeHd;
+			}
+		}
+	}
+	return pObj;
+}
+
+// ---------------------
+// - exported function -
+// ---------------------
+
+extern "C" SAL_DLLPUBLIC_EXPORT sal_Bool SAL_CALL ImportPPT( const ::rtl::OUString& rConfigPath,
+        uno::Sequence< beans::PropertyValue >* pConfigData,
+        SdDrawDocument* pDocument, SvStream& rDocStream, SvStorage& rStorage, SfxMedium& rMedium )
+{
+    sal_Bool bRet = sal_False;
+
+    MSFilterTracer aTracer( rConfigPath, pConfigData );
+    aTracer.StartTracing();
+    
+    SdPPTImport* pImport = new SdPPTImport( pDocument, rDocStream, rStorage, rMedium, &aTracer );
+    bRet = pImport->Import();
+
+    aTracer.EndTracing();
+    delete pImport;
+
+    return bRet;
+}
diff --git sd/source/filter/ppt/pptin.hxx sd/source/filter/ppt/pptin.hxx
new file mode 100644
index 0000000..d4b5c04
--- /dev/null
+++ sd/source/filter/ppt/pptin.hxx
@@ -0,0 +1,108 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: pptin.hxx,v $
+ * $Revision: 1.9 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef _SD_PPTIN_HXX
+#define _SD_PPTIN_HXX
+
+#include <svx/svdfppt.hxx>
+#include <svx/msdffdef.hxx>
+#include <diadef.h>
+#include <svx/svdtypes.hxx>
+#include <svx/msfiltertracer.hxx>
+#include <com/sun/star/uno/Any.h>
+#include <boost/shared_ptr.hpp>
+
+class SdDrawDocument;
+class SfxMedium;
+
+/*************************************************************************
+|*
+|* lokaler Import
+|*
+\************************************************************************/
+
+class SdPage;
+class SdAnimationInfo;
+struct PptInteractiveInfoAtom;
+class Ppt97Animation;
+
+typedef boost::shared_ptr< Ppt97Animation > Ppt97AnimationPtr;
+typedef ::std::map < SdrObject*, Ppt97AnimationPtr > tAnimationMap;
+typedef std::vector< std::pair< SdrObject*, Ppt97AnimationPtr > > tAnimationVector;
+
+class ImplSdPPTImport : public SdrPowerPointImport
+{
+	SfxMedium&		mrMed;
+	SvStorage&		mrStorage;
+//	SvStream*		mpPicStream;
+	DffRecordHeader	maDocHd;
+	List			maSlideNameList;
+	BOOL			mbDocumentFound;
+	sal_uInt32		mnFilterOptions;
+	SdDrawDocument*	mpDoc;
+	PresChange		mePresChange;
+	SdrLayerID		mnBackgroundLayerID;
+	SdrLayerID		mnBackgroundObjectsLayerID;
+
+    tAnimationMap   maAnimations;
+
+	void			SetHeaderFooterPageSettings( SdPage* pPage, const PptSlidePersistEntry* pMasterPersist );
+	void		    ImportPageEffect( SdPage* pPage, const sal_Bool bNewAnimationsUsed );
+
+	void            FillSdAnimationInfo( SdAnimationInfo* pInfo, PptInteractiveInfoAtom* pIAtom, String aMacroName );
+
+	virtual		    SdrObject* ProcessObj( SvStream& rSt, DffObjData& rData, void* pData, Rectangle& rTextRect, SdrObject* pObj );
+	virtual		    SdrObject* ApplyTextObj( PPTTextObj* pTextObj, SdrTextObj* pText, SdPage* pPage,
+											SfxStyleSheet*, SfxStyleSheet** ) const;
+
+public:
+
+    String	        ReadSound( sal_uInt32 nSoundRef ) const;
+	String			ReadMedia( sal_uInt32 nMediaRef ) const;
+ 
+	ImplSdPPTImport( SdDrawDocument* pDoc, SvStorage& rStorage, SfxMedium& rMed, PowerPointImportParam& );
+	~ImplSdPPTImport();
+
+	sal_Bool        Import();
+};
+
+class SdPPTImport
+{
+    ImplSdPPTImport* pFilter;
+
+    public:
+
+	    SdPPTImport( SdDrawDocument* pDoc, SvStream& rDocStream, SvStorage& rStorage, SfxMedium& rMed, MSFilterTracer* pTracer = NULL );
+        ~SdPPTImport();
+
+        sal_Bool Import();
+};
+
+#endif // _SD_PPTIN_HXX
diff --git sd/source/filter/ppt/pptinanimations.cxx sd/source/filter/ppt/pptinanimations.cxx
index 819459d..07ca44e 100644
--- sd/source/filter/ppt/pptinanimations.cxx
+++ sd/source/filter/ppt/pptinanimations.cxx
@@ -75,7 +75,7 @@
 #include <svx/editobj.hxx>
 #include <pptinanimations.hxx>
 #include <pptatom.hxx>
-#include "../pptin.hxx"
+#include "pptin.hxx"
 #include <algorithm>
 
 using ::std::map;
diff --git sd/source/filter/ppt/propread.cxx sd/source/filter/ppt/propread.cxx
new file mode 100644
index 0000000..41de988
--- /dev/null
+++ sd/source/filter/ppt/propread.cxx
@@ -0,0 +1,698 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: propread.cxx,v $
+ * $Revision: 1.13 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_sd.hxx"
+#include <propread.hxx>
+#include <tools/bigint.hxx>
+#include "rtl/tencinfo.h"
+#include "rtl/textenc.h"
+
+// ------------------------------------------------------------------------
+
+struct PropEntry
+{
+	sal_uInt32	mnId;
+	sal_uInt32	mnSize;
+	sal_uInt16	mnTextEnc;
+	sal_uInt8*	mpBuf;
+
+						PropEntry( sal_uInt32 nId, const sal_uInt8* pBuf, sal_uInt32 nBufSize, sal_uInt16 nTextEnc );
+						PropEntry( const PropEntry& rProp );
+						~PropEntry() { delete[] mpBuf; } ;
+
+	const PropEntry&	operator=(const PropEntry& rPropEntry);
+};
+
+PropEntry::PropEntry( sal_uInt32 nId, const sal_uInt8* pBuf, sal_uInt32 nBufSize, sal_uInt16 nTextEnc ) :
+	mnId		( nId ),
+	mnSize		( nBufSize ),
+	mnTextEnc	( nTextEnc ),
+	mpBuf		( new sal_uInt8[ nBufSize ] )
+{
+	memcpy( (void*)mpBuf, (void*)pBuf, nBufSize );
+};
+
+PropEntry::PropEntry( const PropEntry& rProp ) :
+	mnId		( rProp.mnId ),
+	mnSize		( rProp.mnSize ),
+	mnTextEnc	( rProp.mnTextEnc ),
+	mpBuf		( new sal_uInt8[ mnSize ] )
+{
+	memcpy( (void*)mpBuf, (void*)rProp.mpBuf, mnSize );
+};
+
+const PropEntry& PropEntry::operator=(const PropEntry& rPropEntry)
+{
+	if ( this != &rPropEntry )
+	{
+		delete[] mpBuf;
+		mnId = rPropEntry.mnId;
+		mnSize = rPropEntry.mnSize;
+		mnTextEnc = rPropEntry.mnTextEnc;
+		mpBuf = new sal_uInt8[ mnSize ];
+		memcpy( (void*)mpBuf, (void*)rPropEntry.mpBuf, mnSize );
+	}
+	return *this;
+}
+
+//	-----------------------------------------------------------------------
+
+void PropItem::Clear()
+{
+	Seek( STREAM_SEEK_TO_BEGIN );
+	delete[] (sal_uInt8*)SwitchBuffer();
+}
+
+//	-----------------------------------------------------------------------
+
+BOOL PropItem::Read( String& rString, sal_uInt32 nStringType, sal_Bool bAlign )
+{
+	sal_uInt32	i, nItemSize, nType, nItemPos;
+	sal_Bool	bRetValue = sal_False;
+
+	nItemPos = Tell();
+
+	if ( nStringType == VT_EMPTY )
+		*this >> nType;
+	else
+		nType = nStringType & VT_TYPEMASK;
+
+	*this >> nItemSize;
+
+	switch( nType )
+	{
+		case VT_LPSTR :
+		{
+			if ( (sal_uInt16)nItemSize )
+			{
+				sal_Char* pString = new sal_Char[ (sal_uInt16)nItemSize ];
+				if ( mnTextEnc == RTL_TEXTENCODING_UCS2 )
+				{
+					nItemSize >>= 1;
+					if ( (sal_uInt16)nItemSize > 1 )
+					{
+						sal_Unicode* pWString = (sal_Unicode*)pString;
+						for ( i = 0; i < (sal_uInt16)nItemSize; i++ )
+							*this >> pWString[ i ];
+						rString = String( pWString, (sal_uInt16)nItemSize - 1 );
+					}
+					else
+						rString = String();
+					bRetValue = sal_True;
+				}
+				else
+				{
+					SvMemoryStream::Read( pString, (sal_uInt16)nItemSize );
+					if ( pString[ (sal_uInt16)nItemSize - 1 ] == 0 )
+					{
+						if ( (sal_uInt16)nItemSize > 1 )
+							rString = String( ByteString( pString ), mnTextEnc );
+						else
+							rString = String();
+						bRetValue = sal_True;
+					}
+				}
+				delete[] pString;
+			}
+			if ( bAlign )
+				SeekRel( ( 4 - ( nItemSize & 3 ) ) & 3 );		// dword align
+		}
+		break;
+
+		case VT_LPWSTR :
+		{
+			if ( nItemSize )
+			{
+				sal_Unicode* pString = new sal_Unicode[ (sal_uInt16)nItemSize ];
+				for ( i = 0; i < (sal_uInt16)nItemSize; i++ )
+					*this >> pString[ i ];
+				if ( pString[ i - 1 ] == 0 )
+				{
+					if ( (sal_uInt16)nItemSize > 1 )
+						rString = String( pString, (sal_uInt16)nItemSize - 1 );
+					else
+						rString = String();
+					bRetValue = sal_True;
+				}
+				delete[] pString;
+			}
+			if ( bAlign && ( nItemSize & 1 ) )
+				SeekRel( 2 );							// dword align
+		}
+		break;
+	}
+	if ( !bRetValue )
+		Seek( nItemPos );
+	return bRetValue;
+}
+
+//	-----------------------------------------------------------------------
+
+PropItem& PropItem::operator=( PropItem& rPropItem )
+{
+	if ( this != &rPropItem )
+	{
+		Seek( STREAM_SEEK_TO_BEGIN );
+		delete[] (sal_uInt8*)SwitchBuffer();
+
+		mnTextEnc = rPropItem.mnTextEnc;
+		sal_uInt32 nItemPos = rPropItem.Tell();
+		rPropItem.Seek( STREAM_SEEK_TO_END );
+		SvMemoryStream::Write( rPropItem.GetData(), rPropItem.Tell() );
+		rPropItem.Seek( nItemPos );
+	}
+	return *this;
+}
+
+//	-----------------------------------------------------------------------
+
+struct Dict
+{
+	sal_uInt32	mnId;
+	String		aString;
+
+			Dict( sal_uInt32 nId, String rString ) { mnId = nId; aString = rString; };
+};
+
+//	-----------------------------------------------------------------------
+
+Dictionary::~Dictionary()
+{
+	for ( void* pPtr = First(); pPtr; pPtr = Next() )
+		delete (Dict*)pPtr;
+}
+
+//	-----------------------------------------------------------------------
+
+void Dictionary::AddProperty( sal_uInt32 nId, const String& rString )
+{
+	if ( rString.Len() )		// eindeutige namen bei properties
+	{
+		// pruefen, ob es die Propertybeschreibung in der Dictionary schon gibt
+		for ( Dict* pDict = (Dict*)First(); pDict; pDict = (Dict*)Next() )
+		{
+			if ( pDict->mnId == nId )
+			{
+				pDict->aString = rString;
+				return;
+			}
+		}
+		Insert( new Dict( nId, rString ), LIST_APPEND );
+	}
+}
+
+//	-----------------------------------------------------------------------
+
+UINT32 Dictionary::GetProperty( const String& rString )
+{
+	for ( Dict* pDict = (Dict*)First(); pDict; pDict = (Dict*)Next() )
+	{
+		if ( pDict->aString == rString )
+			return pDict->mnId;
+	}
+	return 0;
+}
+
+//	-----------------------------------------------------------------------
+
+Dictionary& Dictionary::operator=( Dictionary& rDictionary )
+{
+	void* pPtr;
+
+	if ( this != &rDictionary )
+	{
+		for ( pPtr = First(); pPtr; pPtr = Next() )
+			delete (Dict*)pPtr;
+
+		for ( pPtr = rDictionary.First(); pPtr; pPtr = rDictionary.Next() )
+			Insert( new Dict( ((Dict*)pPtr)->mnId, ((Dict*)pPtr)->aString ), LIST_APPEND );
+	}
+	return *this;
+}
+
+//	-----------------------------------------------------------------------
+
+Section::Section( Section& rSection )
+: List()
+{
+	mnTextEnc = rSection.mnTextEnc;
+	for ( int i = 0; i < 16; i++ )
+		aFMTID[ i ] = rSection.aFMTID[ i ];
+	for ( PropEntry* pProp = (PropEntry*)rSection.First(); pProp; pProp = (PropEntry*)rSection.Next() )
+		Insert( new PropEntry( *pProp ), LIST_APPEND );
+}
+
+//	-----------------------------------------------------------------------
+
+Section::Section( const sal_uInt8* pFMTID )
+{
+	mnTextEnc = RTL_TEXTENCODING_MS_1252;
+	for ( int i = 0; i < 16; i++ )
+		aFMTID[ i ] = pFMTID[ i ];
+}
+
+//	-----------------------------------------------------------------------
+
+sal_Bool Section::GetProperty( sal_uInt32 nId, PropItem& rPropItem )
+{
+	PropEntry* pProp;
+	if ( nId )
+	{
+		for ( pProp = (PropEntry*)First(); pProp; pProp = (PropEntry*)Next() )
+		{
+			if ( pProp->mnId == nId )
+				break;
+		}
+		if ( pProp )
+		{
+			rPropItem.Clear();
+			rPropItem.SetTextEncoding( mnTextEnc );
+			rPropItem.Write( pProp->mpBuf, pProp->mnSize );
+			rPropItem.Seek( STREAM_SEEK_TO_BEGIN );
+			return sal_True;
+		}
+	}
+	return sal_False;
+}
+
+//	-----------------------------------------------------------------------
+
+void Section::AddProperty( sal_uInt32 nId, const sal_uInt8* pBuf, sal_uInt32 nBufSize )
+{
+	// kleiner id check
+
+	if ( !nId )
+		return;
+	if ( nId == 0xffffffff )
+		nId = 0;
+
+	// keine doppelten PropId's zulassen, sortieren
+	for ( sal_uInt32 i = 0; i < Count(); i++ )
+	{
+		PropEntry* pPropEntry = (PropEntry*)GetObject( i );
+		if ( pPropEntry->mnId == nId )
+			delete (PropEntry*)Replace( new PropEntry( nId, pBuf, nBufSize, mnTextEnc ), i );
+		else if ( pPropEntry->mnId > nId )
+			Insert( new PropEntry( nId, pBuf, nBufSize, mnTextEnc ), i );
+		else
+			continue;
+		return;
+	}
+	Insert( new PropEntry( nId, pBuf, nBufSize, mnTextEnc ), LIST_APPEND );
+}
+
+//	-----------------------------------------------------------------------
+
+sal_Bool Section::GetDictionary( Dictionary& rDict )
+{
+	sal_Bool bRetValue = sal_False;
+
+	Dictionary aDict;
+	PropEntry* pProp;
+
+	for ( pProp = (PropEntry*)First(); pProp; pProp = (PropEntry*)Next() )
+	{
+		if ( pProp->mnId == 0 )
+			break;
+	}
+	if ( pProp )
+	{
+		sal_uInt32 nDictCount, nId, nSize, nPos;
+		SvMemoryStream aStream( (sal_Int8*)pProp->mpBuf, pProp->mnSize, STREAM_READ );
+		aStream.Seek( STREAM_SEEK_TO_BEGIN );
+		aStream >> nDictCount;
+		for ( sal_uInt32 i = 0; i < nDictCount; i++ )
+		{
+			aStream >> nId >> nSize;
+			if ( (sal_uInt16)nSize )
+			{
+				String aString;
+				nPos = aStream.Tell();
+				sal_Char* pString = new sal_Char[ (sal_uInt16)nSize ];
+				aStream.Read( pString, (sal_uInt16)nSize );
+				if ( mnTextEnc == RTL_TEXTENCODING_UCS2 )
+				{
+					nSize >>= 1;
+					aStream.Seek( nPos );
+					sal_Unicode* pWString = (sal_Unicode*)pString;
+					for ( i = 0; i < (sal_uInt16)nSize; i++ )
+						aStream >> pWString[ i ];
+					aString = String( pWString, (sal_uInt16)nSize - 1 );
+				}
+				else
+					aString = String( ByteString( pString, (sal_uInt16)nSize - 1 ), mnTextEnc );
+				delete[] pString;
+				if ( !aString.Len() )
+					break;
+				aDict.AddProperty( nId, aString );
+			}
+			bRetValue = sal_True;
+		}
+	}
+	rDict = aDict;
+	return bRetValue;
+}
+
+//	-----------------------------------------------------------------------
+
+Section::~Section()
+{
+	for ( PropEntry* pProp = (PropEntry*)First(); pProp; pProp = (PropEntry*)Next() )
+		delete pProp;
+}
+
+//	-----------------------------------------------------------------------
+
+void Section::Read( SvStorageStream *pStrm )
+{
+	sal_uInt32 i, nSecOfs, nSecSize, nPropCount, nPropId, nPropOfs, nPropType, nPropSize, nCurrent, nVectorCount, nTemp, nStrmSize;
+	nSecOfs = pStrm->Tell();
+
+	pStrm->Seek( STREAM_SEEK_TO_END );
+	nStrmSize = pStrm->Tell();
+	pStrm->Seek( nSecOfs );
+
+	mnTextEnc = RTL_TEXTENCODING_MS_1252;
+	*pStrm >> nSecSize >> nPropCount;
+	while( nPropCount-- && ( pStrm->GetError() == ERRCODE_NONE ) )
+	{
+		*pStrm >> nPropId >> nPropOfs;
+		nCurrent = pStrm->Tell();
+		pStrm->Seek( nPropOfs + nSecOfs );
+		if ( nPropId )					// dictionary wird nicht eingelesen
+		{
+
+			*pStrm >> nPropType;
+
+			nPropSize = 4;
+
+			if ( nPropType & VT_VECTOR )
+			{
+				*pStrm >> nVectorCount;
+				nPropType &=~VT_VECTOR;
+				nPropSize += 4;
+			}
+			else
+				nVectorCount = 1;
+
+
+			sal_Bool bVariant = ( nPropType == VT_VARIANT );
+
+			for ( i = 0; nPropSize && ( i < nVectorCount ); i++ )
+			{
+				if ( bVariant )
+				{
+					*pStrm >> nPropType;
+					nPropSize += 4;
+				}
+				switch( nPropType )
+				{
+					case VT_UI1 :
+						nPropSize++;
+					break;
+
+					case VT_I2 :
+					case VT_UI2 :
+					case VT_BOOL :
+						nPropSize += 2;
+					break;
+
+					case VT_I4 :
+					case VT_R4 :
+					case VT_UI4 :
+					case VT_ERROR :
+						nPropSize += 4;
+					break;
+
+					case VT_I8 :
+					case VT_R8 :
+					case VT_CY :
+					case VT_UI8 :
+					case VT_DATE :
+					case VT_FILETIME :
+						nPropSize += 8;
+					break;
+
+					case VT_BSTR :
+						*pStrm >> nTemp;
+						nPropSize += ( nTemp + 4 );
+					break;
+
+					case VT_LPSTR :
+						*pStrm >> nTemp;
+						nPropSize += ( nTemp + 4 );
+					break;
+
+					case VT_LPWSTR :
+						*pStrm >> nTemp;
+						nPropSize += ( nTemp << 1 ) + 4;
+					break;
+
+					case VT_BLOB_OBJECT :
+					case VT_BLOB :
+					case VT_CF :
+						*pStrm >> nTemp;
+						nPropSize += ( nTemp + 4 );
+					break;
+
+					case VT_CLSID :
+					case VT_STREAM :
+					case VT_STORAGE :
+					case VT_STREAMED_OBJECT :
+					case VT_STORED_OBJECT :
+					case VT_VARIANT :
+					case VT_VECTOR :
+					default :
+						nPropSize = 0;
+				}
+				if ( nPropSize )
+				{
+					if ( ( nVectorCount - i ) > 1 )
+						pStrm->Seek( nPropOfs + nSecOfs + nPropSize );
+				}
+				else
+					break;
+			}
+			if ( nPropSize )
+			{
+				pStrm->Seek( nPropOfs + nSecOfs );
+				sal_uInt8* pBuf = new sal_uInt8[ nPropSize ];
+				pStrm->Read( pBuf, nPropSize );
+				AddProperty( nPropId, pBuf, nPropSize );
+				delete[] pBuf;
+			}
+			if ( nPropId == 1 )
+            {
+				PropItem aPropItem;
+				if ( GetProperty( 1, aPropItem ) )
+				{
+					sal_uInt16 nCodePage;
+	                aPropItem >> nPropType;
+		            if ( nPropType == VT_I2 )
+					{
+						aPropItem >> nCodePage;
+
+						if ( nCodePage == 1200 )
+						{
+							mnTextEnc = RTL_TEXTENCODING_UCS2;
+						}
+						else
+						{
+							mnTextEnc = rtl_getTextEncodingFromWindowsCodePage( nCodePage );
+							if ( mnTextEnc == RTL_TEXTENCODING_DONTKNOW )
+								mnTextEnc = RTL_TEXTENCODING_MS_1252;
+						}
+					}
+					else
+					{
+						mnTextEnc = RTL_TEXTENCODING_MS_1252;
+					}
+				}
+			}
+		}
+		else
+		{
+			sal_uInt32 nDictCount, nSize;
+			*pStrm >> nDictCount;
+			for ( i = 0; i < nDictCount; i++ )
+			{
+				*pStrm >> nSize >> nSize;
+				pStrm->SeekRel( nSize );
+			}
+			nSize = pStrm->Tell();
+			pStrm->Seek( nPropOfs + nSecOfs );
+			nSize -= pStrm->Tell();
+			if ( nSize > nStrmSize )
+			{
+				nPropCount = 0;
+				break;
+			}
+			sal_uInt8* pBuf = new sal_uInt8[ nSize ];
+			pStrm->Read( pBuf, nSize );
+			AddProperty( 0xffffffff, pBuf, nSize );
+			delete[] pBuf;
+		}
+		pStrm->Seek( nCurrent );
+	}
+	pStrm->Seek( nSecOfs + nSecSize );
+}
+
+//	-----------------------------------------------------------------------
+
+Section& Section::operator=( Section& rSection )
+{
+	PropEntry* pProp;
+
+	if ( this != &rSection )
+	{
+		memcpy( (void*)aFMTID, (void*)rSection.aFMTID, 16 );
+		for ( pProp = (PropEntry*)First(); pProp; pProp = (PropEntry*)Next() )
+			delete pProp;
+		Clear();
+		for ( pProp = (PropEntry*)rSection.First(); pProp; pProp = (PropEntry*)rSection.Next() )
+			Insert( new PropEntry( *pProp ), LIST_APPEND );
+	}
+	return *this;
+}
+
+//	-----------------------------------------------------------------------
+
+PropRead::PropRead( SvStorage& rStorage, const String& rName ) :
+		mbStatus			( sal_False ),
+		mnByteOrder			( 0xfffe ),
+		mnFormat			( 0 ),
+		mnVersionLo			( 4 ),
+		mnVersionHi			( 2 )
+{
+	if ( rStorage.IsStream( rName ) )
+	{
+        mpSvStream = rStorage.OpenSotStream( rName, STREAM_STD_READ );
+		if ( mpSvStream )
+		{
+			mpSvStream->SetNumberFormatInt( NUMBERFORMAT_INT_LITTLEENDIAN );
+			memset( mApplicationCLSID, 0, 16 );
+			mbStatus = sal_True;
+		}
+	}
+}
+
+//	-----------------------------------------------------------------------
+
+void PropRead::AddSection( Section& rSection )
+{
+	Insert( new Section( rSection ), LIST_APPEND );
+}
+
+//	-----------------------------------------------------------------------
+
+const Section* PropRead::GetSection( const sal_uInt8* pFMTID )
+{
+	Section* pSection;
+
+	for ( pSection = (Section*)First(); pSection; pSection = (Section*)Next() )
+	{
+		if ( memcmp( pSection->GetFMTID(), pFMTID, 16 ) == 0 )
+			break;
+	}
+	return pSection;
+}
+
+//	-----------------------------------------------------------------------
+
+PropRead::~PropRead()
+{
+	for ( Section* pSection = (Section*)First(); pSection; pSection = (Section*)Next() )
+		delete pSection;
+}
+
+//	-----------------------------------------------------------------------
+
+void PropRead::Read()
+{
+	for ( Section* pSection = (Section*)First(); pSection; pSection = (Section*)Next() )
+		delete pSection;
+	Clear();
+	if ( mbStatus )
+	{
+		sal_uInt32	nSections;
+		sal_uInt32	nSectionOfs;
+		sal_uInt32	nCurrent;
+		*mpSvStream >> mnByteOrder >> mnFormat >> mnVersionLo >> mnVersionHi;
+		if ( mnByteOrder == 0xfffe )
+		{
+			sal_uInt8*	pSectCLSID = new sal_uInt8[ 16 ];
+			mpSvStream->Read( mApplicationCLSID, 16 );
+			*mpSvStream >> nSections;
+			if ( nSections > 2 )				// sj: PowerPoint documents are containing max 2 sections
+			{
+				mbStatus = sal_False;
+			}
+			else for ( sal_uInt32 i = 0; i < nSections; i++ )
+			{
+				mpSvStream->Read( pSectCLSID, 16 );
+				*mpSvStream >> nSectionOfs;
+				nCurrent = mpSvStream->Tell();
+				mpSvStream->Seek( nSectionOfs );
+				Section aSection( pSectCLSID );
+				aSection.Read( mpSvStream );
+				AddSection( aSection );
+				mpSvStream->Seek( nCurrent );
+			}
+			delete[] pSectCLSID;
+		}
+	}
+}
+
+//	-----------------------------------------------------------------------
+
+PropRead& PropRead::operator=( PropRead& rPropRead )
+{
+	Section* pSection;
+
+	if ( this != &rPropRead )
+	{
+		mbStatus = rPropRead.mbStatus;
+		mpSvStream = rPropRead.mpSvStream;
+
+		mnByteOrder = rPropRead.mnByteOrder;
+		mnFormat = rPropRead.mnFormat;
+		mnVersionLo = rPropRead.mnVersionLo;
+		mnVersionHi = rPropRead.mnVersionHi;
+		memcpy( mApplicationCLSID, rPropRead.mApplicationCLSID, 16 );
+
+		for ( pSection = (Section*)First(); pSection; pSection = (Section*)Next() )
+			delete pSection;
+		Clear();
+		for ( pSection = (Section*)rPropRead.First(); pSection; pSection = (Section*)rPropRead.Next() )
+			Insert( new Section( *pSection ), LIST_APPEND );
+	}
+	return *this;
+}
diff --git sd/source/filter/ppt/propread.hxx sd/source/filter/ppt/propread.hxx
new file mode 100644
index 0000000..6a2e7ab
--- /dev/null
+++ sd/source/filter/ppt/propread.hxx
@@ -0,0 +1,194 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ * 
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: propread.hxx,v $
+ * $Revision: 1.7 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+#ifndef _PROPREAD_HXX_
+#define _PROPREAD_HXX_
+
+#include <tools/solar.h>
+#include <sot/storage.hxx>
+#include <tools/gen.hxx>
+#include <tools/list.hxx>
+#include <tools/stream.hxx>
+#include <tools/datetime.hxx>
+
+#include <tools/string.hxx>
+
+// SummaryInformation
+#define PID_TITLE				0x02
+#define PID_SUBJECT 			0x03
+#define PID_AUTHOR				0x04
+#define PID_KEYWORDS			0x05
+#define PID_COMMENTS			0x06
+#define PID_TEMPLATE			0x07
+#define PID_LASTAUTHOR			0x08
+#define PID_REVNUMBER			0x09
+#define PID_EDITTIME			0x0a
+#define PID_LASTPRINTED_DTM 	0x0b
+#define PID_CREATE_DTM			0x0c
+#define PID_LASTSAVED_DTM		0x0d
+
+// DocumentSummaryInformation
+#define PID_CATEGORY			0x02
+#define PID_PRESFORMAT			0x03
+#define PID_BYTECOUNT			0x04
+#define PID_LINECOUNT			0x05
+#define PID_PARACOUNT			0x06
+#define PID_SLIDECOUNT			0x07
+#define PID_NOTECOUNT			0x08
+#define PID_HIDDENCOUNT 		0x09
+#define PID_MMCLIPCOUNT 		0x0a
+#define PID_SCALE				0x0b
+#define PID_HEADINGPAIR 		0x0c
+#define PID_DOCPARTS			0x0d
+#define PID_MANAGER 			0x0e
+#define PID_COMPANY 			0x0f
+#define PID_LINKSDIRTY			0x10
+
+#define VT_EMPTY			0
+#define VT_NULL 			1
+#define VT_I2				2
+#define VT_I4				3
+#define VT_R4				4
+#define VT_R8				5
+#define VT_CY				6
+#define VT_DATE 			7
+#define VT_BSTR 			8
+#define VT_UI4				9
+#define VT_ERROR			10
+#define VT_BOOL 			11
+#define VT_VARIANT			12
+#define VT_DECIMAL			14
+#define VT_I1				16
+#define VT_UI1				17
+#define VT_UI2				18
+#define VT_I8				20
+#define VT_UI8				21
+#define VT_INT				22
+#define VT_UINT 			23
+#define VT_LPSTR			30
+#define VT_LPWSTR			31
+#define VT_FILETIME 		64
+#define VT_BLOB 			65
+#define VT_STREAM			66
+#define VT_STORAGE			67
+#define VT_STREAMED_OBJECT	68
+#define VT_STORED_OBJECT	69
+#define VT_BLOB_OBJECT		70
+#define VT_CF				71
+#define VT_CLSID			72
+#define VT_VECTOR			0x1000
+#define VT_ARRAY			0x2000
+#define VT_BYREF			0x4000
+#define VT_TYPEMASK 		0xFFF
+
+// ------------------------------------------------------------------------
+
+class PropItem : public SvMemoryStream
+{
+		sal_uInt16		mnTextEnc;
+
+	public :
+						PropItem(){};
+		void			Clear();
+
+		void			SetTextEncoding( sal_uInt16 nTextEnc ){ mnTextEnc = nTextEnc; };
+		sal_Bool		Read( String& rString, sal_uInt32 nType = VT_EMPTY, sal_Bool bDwordAlign = sal_True );
+		PropItem&		operator=( PropItem& rPropItem );
+
+	using SvStream::Read;
+};
+
+// ------------------------------------------------------------------------
+
+class Dictionary : protected List
+{
+	friend class Section;
+
+		void		AddProperty( UINT32 nId, const String& rString );
+
+	public :
+					Dictionary(){};
+					~Dictionary();
+		Dictionary& operator=( Dictionary& rDictionary );
+		UINT32		GetProperty( const String& rPropName );
+};
+
+// ------------------------------------------------------------------------
+
+class Section : private List
+{
+		sal_uInt16				mnTextEnc;
+
+	protected:
+
+		BYTE					aFMTID[ 16 ];
+
+		void					AddProperty( sal_uInt32 nId, const sal_uInt8* pBuf, sal_uInt32 nBufSize );
+
+	public:
+								Section( const sal_uInt8* pFMTID );
+								Section( Section& rSection );
+								~Section();
+
+		Section&				operator=( Section& rSection );
+		sal_Bool				GetProperty( sal_uInt32 nId, PropItem& rPropItem );
+		sal_Bool				GetDictionary( Dictionary& rDict );
+		const sal_uInt8* 		GetFMTID() const { return aFMTID; };
+		void					Read( SvStorageStream* pStrm );
+};
+
+// ------------------------------------------------------------------------
+
+class PropRead : private List
+{
+		sal_Bool				mbStatus;
+		SvStorageStream*		mpSvStream;
+
+		sal_uInt16				mnByteOrder;
+		sal_uInt16				mnFormat;
+		sal_uInt16				mnVersionLo;
+		sal_uInt16				mnVersionHi;
+		sal_uInt8				mApplicationCLSID[ 16 ];
+
+		void					AddSection( Section& rSection );
+
+	public:
+								PropRead( SvStorage& rSvStorage, const String& rName );
+								~PropRead();
+
+		PropRead&				operator=( PropRead& rPropRead );
+		const Section*			GetSection( const BYTE* pFMTID );
+		sal_Bool				IsValid() const { return mbStatus; };
+		void					Read();
+};
+
+
+#endif
+
diff --git sd/source/filter/pptin.cxx sd/source/filter/pptin.cxx
deleted file mode 100644
index 8b1a424..0000000
--- sd/source/filter/pptin.cxx
+++ /dev/null
@@ -1,2733 +0,0 @@
-/*************************************************************************
- *
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- * 
- * Copyright 2008 by Sun Microsystems, Inc.
- *
- * OpenOffice.org - a multi-platform office productivity suite
- *
- * $RCSfile: pptin.cxx,v $
- * $Revision: 1.92.78.3 $
- *
- * This file is part of OpenOffice.org.
- *
- * OpenOffice.org is free software: you can redistribute it and/or modify
- * it under the terms of the GNU Lesser General Public License version 3
- * only, as published by the Free Software Foundation.
- *
- * OpenOffice.org is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU Lesser General Public License version 3 for more details
- * (a copy is included in the LICENSE file that accompanied this code).
- *
- * You should have received a copy of the GNU Lesser General Public License
- * version 3 along with OpenOffice.org.  If not, see
- * <http://www.openoffice.org/license.html>
- * for a copy of the LGPLv3 License.
- *
- ************************************************************************/
-
-// MARKER(update_precomp.py): autogen include statement, do not remove
-#include "precompiled_sd.hxx"
-
-#include <svx/numitem.hxx>
-
-#ifndef _UNOTOOLS_UCBSTREAMHELPER_HXX
-#include <unotools/ucbstreamhelper.hxx>
-#endif
-#include <vcl/wrkwin.hxx>
-#ifndef _SVXIDS_HRC
-#include <svx/svxids.hrc>
-#endif
-#include <svx/svdfppt.hxx>
-#include <svx/svditer.hxx>
-#include <sfx2/docfile.hxx>
-#include <sfx2/app.hxx>
-#include <svx/svdograf.hxx>
-#include <svx/svdlayer.hxx>
-#include <vcl/msgbox.hxx>
-#include <svtools/style.hxx>
-#include <svx/xflclit.hxx>
-#include <svx/eeitem.hxx>
-#include <svx/colritem.hxx>
-#include <svtools/whiter.hxx>
-#include <svx/xgrad.hxx>
-#include <svx/xflgrit.hxx>
-#include <svx/xbtmpit.hxx>
-#include <svx/xlnclit.hxx>
-#include <svx/adjitem.hxx>
-#include <svx/editeng.hxx>
-#include <svx/bulitem.hxx>
-#include <svx/lrspitem.hxx>
-#include <svx/lspcitem.hxx>
-#include <svx/tstpitem.hxx>
-
-#include <sfx2/docinf.hxx>
-
-#include "glob.hrc"
-#include "pptin.hxx"
-#include "Outliner.hxx"
-#include "drawdoc.hxx"
-#include "sdpage.hxx"
-#include "sdresid.hxx"
-#include "pres.hxx"
-#include "sdresid.hxx"
-#include "stlpool.hxx"
-#include "anminfo.hxx"
-#include <svx/gallery.hxx>
-#include <tools/urlobj.hxx>
-#include <svx/numitem.hxx>
-#include <svtools/itempool.hxx>
-#include <svx/fhgtitem.hxx>
-#ifndef _SVX_SVDOPAGE
-#include <svx/svdopage.hxx>
-#endif
-#include <svx/svdomedia.hxx>
-#include <svx/svdogrp.hxx>
-#include <propread.hxx>
-#include <cusshow.hxx>
-#include <vcl/bmpacc.hxx>
-
-#include "../ui/inc/DrawDocShell.hxx"
-#include <../ui/inc/FrameView.hxx>
-#include <../ui/inc/optsitem.hxx>
-
-#ifndef _OFA_FLTRCFG_HXX
-#include <svtools/fltrcfg.hxx>
-#endif
-#include <sfx2/progress.hxx>
-#include <unotools/localfilehelper.hxx>
-#include <svx/editstat.hxx>
-#include <svtools/pathoptions.hxx>
-#include <sfx2/docfac.hxx>
-#define MAX_USER_MOVE		2
-
-#include <ppt/pptinanimations.hxx>
-#include <ppt/ppt97animations.hxx>
-
-#include <com/sun/star/document/XDocumentProperties.hpp>
-#include <com/sun/star/document/XDocumentPropertiesSupplier.hpp>
-
-
-using namespace ::com::sun::star;
-
-
-SdPPTImport::SdPPTImport( SdDrawDocument* pDocument, SvStream& rDocStream, SvStorage& rStorage, SfxMedium& rMedium, MSFilterTracer* pTracer )
-{
-
-    sal_uInt32 nImportFlags = 0;
-
-#ifdef DBG_UTIL
-    PropRead* pSummaryInformation = new PropRead( rStorage, String( RTL_CONSTASCII_USTRINGPARAM( "\005SummaryInformation" ) ) );
-    if ( pSummaryInformation->IsValid() )
-    {
-        pSummaryInformation->Read();
-        sal_uInt8 aPropSetGUID[ 16 ] =
-        {
-            0xe0, 0x85, 0x9f, 0xf2, 0xf9, 0x4f, 0x68, 0x10, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9
-        };
-        Section* pSection = (Section*)pSummaryInformation->GetSection( aPropSetGUID );
-        if ( pSection )
-        {
-		    PropItem aPropItem;
-            if ( pSection->GetProperty( PID_COMMENTS, aPropItem ) )
-            {
-                String aComment;
-                aPropItem.Read( aComment );
-                if ( aComment.Search( String( RTL_CONSTASCII_USTRINGPARAM( "Applixware" ) ), 0 ) != STRING_NOTFOUND )
-                {
-                    nImportFlags |= PPT_IMPORTFLAGS_NO_TEXT_ASSERT;
-                }
-            }
-        }
-    }
-    delete pSummaryInformation;
-#endif
-
-	PowerPointImportParam aParam( rDocStream, nImportFlags, pTracer );
-    SvStream* pCurrentUserStream = rStorage.OpenSotStream( String( RTL_CONSTASCII_USTRINGPARAM( "Current User" ) ), STREAM_STD_READ );
-	if( pCurrentUserStream )
-	{
-		*pCurrentUserStream >> aParam.aCurrentUserAtom;
-		delete pCurrentUserStream;
-	}
-
-	if( pDocument )
-	{
-		// iterate over all styles
-		SdStyleSheetPool* pStyleSheetPool = dynamic_cast< SdStyleSheetPool* >( pDocument->GetStyleSheetPool() );
-
-		sal_uInt32 nStyles = pStyleSheetPool ? pStyleSheetPool->GetStyles().size() : 0;
-		for (sal_uInt32 nStyle = 0; nStyle < nStyles; nStyle++)
-		{
-			SfxStyleSheet* pSheet = static_cast<SfxStyleSheet*>( pStyleSheetPool->GetStyles()[nStyle].get() );
-			SfxItemSet& rSet = pSheet->GetItemSet();
-
-			// if autokerning is set in style, override it, ppt has no autokerning
-			if( rSet.GetItemState( EE_CHAR_PAIRKERNING, FALSE ) == SFX_ITEM_SET )
-				rSet.ClearItem( EE_CHAR_PAIRKERNING );
-		}
-	}
-
-    pFilter = new ImplSdPPTImport( pDocument, rStorage, rMedium, aParam );
-}
-
-sal_Bool SdPPTImport::Import()
-{
-    return pFilter->Import();
-}
-
-SdPPTImport::~SdPPTImport()
-{
-    delete pFilter;
-}
-
-ImplSdPPTImport::ImplSdPPTImport( SdDrawDocument* pDocument, SvStorage& rStorage_, SfxMedium& rMedium, PowerPointImportParam& rParam )
-:	SdrPowerPointImport     ( rParam, rMedium.GetBaseURL() )
-,	mrMed					( rMedium )
-,	mrStorage				( rStorage_ )
-,	mbDocumentFound			( FALSE )
-,	mnFilterOptions			( 0 )
-{
-	mpDoc = pDocument;
-	if ( bOk )
-	{
-		mbDocumentFound = SeekToDocument( &maDocHd ); 							// maDocHd = the latest DocumentHeader
-		while ( SeekToRec( rStCtrl, PPT_PST_Document, nStreamLen, &maDocHd ) )
-			mbDocumentFound = TRUE;
-
-		UINT32 nDggContainerOfs = 0;
-
-		if ( mbDocumentFound )
-		{
-			ULONG nPosMerk = rStCtrl.Tell();
-
-            pStData = rStorage_.OpenSotStream( String( RTL_CONSTASCII_USTRINGPARAM( "Pictures" ) ), STREAM_STD_READ );
-
-			rStCtrl.Seek( maDocHd.GetRecBegFilePos() + 8 );
-			ULONG nDocLen = maDocHd.GetRecEndFilePos();
-			DffRecordHeader aPPDGHd;
-			if ( SeekToRec( rStCtrl, PPT_PST_PPDrawingGroup, nDocLen, &aPPDGHd ) )
-			{
-				ULONG nPPDGLen = aPPDGHd.GetRecEndFilePos();
-				if ( SeekToRec( rStCtrl, DFF_msofbtDggContainer, nPPDGLen, NULL ) )
-					nDggContainerOfs = rStCtrl.Tell();
-			}
-			rStCtrl.Seek( nPosMerk );
-		}
-		sal_uInt32 nSvxMSDffOLEConvFlags2 = 0;
-
-		SvtFilterOptions* pBasOpt = SvtFilterOptions::Get();
-		if ( pBasOpt )
-		{
-			if ( pBasOpt->IsLoadPPointBasicCode() )
-				mnFilterOptions |= 1;
-			if ( pBasOpt->IsMathType2Math() )
-				nSvxMSDffOLEConvFlags2 |= OLE_MATHTYPE_2_STARMATH;
-			if ( pBasOpt->IsWinWord2Writer() )
-				nSvxMSDffOLEConvFlags2 |= OLE_WINWORD_2_STARWRITER;
-			if ( pBasOpt->IsExcel2Calc() )
-				nSvxMSDffOLEConvFlags2 |= OLE_EXCEL_2_STARCALC;
-			if ( pBasOpt->IsPowerPoint2Impress() )
-				nSvxMSDffOLEConvFlags2 |= OLE_POWERPOINT_2_STARIMPRESS;
-		}
-
-		InitSvxMSDffManager( nDggContainerOfs, pStData, nSvxMSDffOLEConvFlags2 );
-		SetSvxMSDffSettings( SVXMSDFF_SETTINGS_CROP_BITMAPS
-			| SVXMSDFF_SETTINGS_IMPORT_IAS | SVXMSDFF_SETTINGS_IMPORT_PPT );
-		SetModel( mpDoc, 576 );
-	}
-}
-
-//////////////////////////////////////////////////////////////////////////
-//
-// Dtor
-//
-//////////////////////////////////////////////////////////////////////////
-
-ImplSdPPTImport::~ImplSdPPTImport()
-{
-	for ( void* pPtr = maSlideNameList.First(); pPtr; pPtr = maSlideNameList.Next() )
-		delete (String*)pPtr;
-	delete pStData;
-}
-
-//////////////////////////////////////////////////////////////////////////
-//
-// Import
-//
-//////////////////////////////////////////////////////////////////////////
-
-sal_Bool ImplSdPPTImport::Import()
-{
-	if ( !bOk )
-		return FALSE;
-
-	pSdrModel->setLock( sal_True );
-	SdrOutliner& rOutl = mpDoc->GetDrawOutliner();
-	sal_uInt32 nControlWord = rOutl.GetEditEngine().GetControlWord();
-	nControlWord |=  EE_CNTRL_ULSPACESUMMATION;
-	nControlWord &=~ EE_CNTRL_ULSPACEFIRSTPARA;
-	((EditEngine&)rOutl.GetEditEngine()).SetControlWord( nControlWord );
-
-	SdrLayerAdmin& rAdmin = mpDoc->GetLayerAdmin();
-	mnBackgroundLayerID = rAdmin.GetLayerID( String( SdResId( STR_LAYER_BCKGRND )), FALSE );
-	mnBackgroundObjectsLayerID = rAdmin.GetLayerID( String( SdResId( STR_LAYER_BCKGRNDOBJ )), FALSE );
-
-	::sd::DrawDocShell* pDocShell = mpDoc->GetDocSh();
-	if ( pDocShell )
-		SeekOle( pDocShell, mnFilterOptions );
-
-	// hyperlinks
-	PropRead* pDInfoSec2 = new PropRead( mrStorage, String( RTL_CONSTASCII_USTRINGPARAM( "\005DocumentSummaryInformation" ) ) );
-	if ( pDInfoSec2->IsValid() )
-	{
-		PropItem aPropItem;
-
-		UINT32 nType, nPropSize, nPropCount;
-
-		pDInfoSec2->Read();
-
-		BYTE aPropSetGUID[ 16 ] =
-		{
-			0x02, 0xd5, 0xcd, 0xd5, 0x9c, 0x2e, 0x1b, 0x10, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae
-		};
-		Section* pSection = (Section*)pDInfoSec2->GetSection( aPropSetGUID );
-		if ( pSection )
-		{
-			if ( pSection->GetProperty( PID_SLIDECOUNT, aPropItem ) )
-			{
-				aPropItem >> nType;
-				if ( ( nType == VT_I4 ) || ( nType == VT_UI4 ) )
-				{
-					// examine PID_HEADINGPAIR to get the correct entry for PID_DOCPARTS
-					UINT32 nSlideCount, nVecCount;
-					aPropItem >> nSlideCount;
-					if ( nSlideCount && pSection->GetProperty( PID_HEADINGPAIR, aPropItem ) )
-					{
-						UINT32	nSlideTitleIndex = 0, nSlideTitleCount = 0;
-						UINT32	nFontIndex, nFontCount = 0;
-						UINT32	nDesignTemplateIndex, nDesignTemplateCount = 0;
-						UINT32	i, nTemp, nEntryCount = 0;
-
-						String aUString;
-
-						aPropItem >> nType
-								  >> nVecCount;
-
-						if ( ( nType == ( VT_VARIANT | VT_VECTOR ) ) && ( nVecCount ^ 1 ) )
-						{
-							nVecCount >>= 1;
-
-							for ( i = 0; i < nVecCount; i++ )
-							{
-								if ( !aPropItem.Read( aUString, VT_EMPTY, FALSE ) )
-									break;
-								aPropItem >> nType;
-								if ( ( nType != VT_I4 ) && ( nType != VT_UI4 ) )
-									break;
-								aPropItem >> nTemp;
-								if ( aUString.EqualsAscii("Slide Titles") || aUString.EqualsAscii("Folientitel") )
-								{
-									nSlideTitleCount = nTemp;
-									nSlideTitleIndex = nEntryCount;
-								}
-								else if ( aUString.EqualsAscii("Fonts Used") )
-								{
-									nFontCount = nTemp;
-									nFontIndex = nEntryCount;
-								}
-								else if ( aUString.EqualsAscii("Design Template") )
-								{
-									nDesignTemplateCount = nTemp;
-									nDesignTemplateIndex = nEntryCount;
-								}
-								nEntryCount += nTemp;
-							}
-						}
-						if ( ( nSlideCount == nSlideTitleCount ) && pSection->GetProperty( PID_DOCPARTS, aPropItem ) )
-						{
-							aPropItem >> nType
-									  >> nVecCount;
-
-							if ( ( nVecCount >= ( nSlideTitleIndex + nSlideTitleCount ) )
-									&& ( nType == ( VT_LPSTR | VT_VECTOR ) ) )
-							{
-								for ( i = 0; i != nSlideTitleIndex; i++ )
-								{
-									aPropItem >> nTemp;
-									aPropItem.SeekRel( nTemp );
-								}
-								for ( i = 0; i < nSlideTitleCount; i++ )
-								{
-									if ( !aPropItem.Read( aUString, nType, FALSE ) )
-										break;
-									String* pString = new String( aUString );
-									if ( pString->EqualsAscii( "No Slide Title" ))
-										*pString = String();
-									else
-									{
-										void* pPtr;
-										for ( pPtr = maSlideNameList.First(); pPtr; pPtr = maSlideNameList.Next() )
-										{
-											if ( *((String*)pPtr ) == *pString )
-											{
-												*pString = String();
-												break;
-											}
-										}
-									}
-									maSlideNameList.Insert( pString, LIST_APPEND );
-								}
-							}
-						}
-					}
-				}
-			}
-
-			BYTE aUserPropSetGUID[ 16 ] =
-			{
-				0x05, 0xd5, 0xcd, 0xd5, 0x9c, 0x2e, 0x1b, 0x10, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae
-			};
-			pSection = (Section*)pDInfoSec2->GetSection( aUserPropSetGUID );
-			if ( pSection )
-			{
-				Dictionary aDict;
-				if ( pSection->GetDictionary( aDict ) )
-				{
-					UINT32 nPropId = aDict.GetProperty( rtl::OUString::createFromAscii("_PID_HLINKS" ));
-					if ( nPropId )
-					{
-						if ( pSection->GetProperty( nPropId, aPropItem ) )
-						{
-							aPropItem.Seek( STREAM_SEEK_TO_BEGIN );
-							aPropItem >> nType;
-							if ( nType == VT_BLOB )
-							{
-								aPropItem >> nPropSize
-										  >> nPropCount;
-
-								if ( ! ( nPropCount % 6 ) )
-								{
-									UINT32 i;
-
-									nPropCount /= 6;	// 6 propertys a hyperlink
-
-									SdHyperlinkEntry* pHyperlink = 0;
-									for ( i = 0; i < nPropCount; i++ )
-									{
-										pHyperlink = new SdHyperlinkEntry;
-										pHyperlink->nIndex = 0;
-										aPropItem >> nType;
-										if ( nType != VT_I4 )
-											break;
-										aPropItem >> pHyperlink->nPrivate1
-												  >> nType;
-										if ( nType != VT_I4 )
-											break;
-										aPropItem >> pHyperlink->nPrivate2
-												  >> nType;
-										if ( nType != VT_I4 )
-											break;
-										aPropItem >> pHyperlink->nPrivate3
-												  >> nType;
-										if ( nType != VT_I4 )
-											break;
-										aPropItem >> pHyperlink->nInfo;
-										if ( !aPropItem.Read( pHyperlink->aTarget, VT_EMPTY ) )
-											break;
-
-										// #n382718# (and #n261623#) Convert '\\' notation to 'smb://'
-										INetURLObject aUrl( pHyperlink->aTarget, INET_PROT_FILE );
-										pHyperlink->aTarget = aUrl.GetMainURL( INetURLObject::NO_DECODE );
-
-										if ( !aPropItem.Read( pHyperlink->aSubAdress, VT_EMPTY ) )
-											break;
-										pHyperlink->nStartPos = pHyperlink->nEndPos = -1;
-
-						                if ( pHyperlink->aSubAdress.Len() ) // get the converted subadress
-						                {
-							                sal_uInt32 nPageNumber = 0;
-    						                String aString( pHyperlink->aSubAdress );
-							                ByteString aStringAry[ 3 ];
-							                sal_uInt16 nTokenCount = aString.GetTokenCount( ',' );
-							                if ( nTokenCount > 3 )
-								                nTokenCount = 3;
-											sal_uInt16 nToken;
-                                            for( nToken = 0; nToken < nTokenCount; nToken++ )
-                                                aStringAry[ nToken ] = ByteString( aString.GetToken( nToken, (sal_Unicode)',' ), RTL_TEXTENCODING_UTF8 );
-
-                                            sal_Bool bSucceeded = sal_False;
-
-                                            // first pass, searching for a SlideId
-                                            for( nToken = 0; nToken < nTokenCount; nToken++ )
-                                            {
-                                                if ( aStringAry[ nToken ].IsNumericAscii() )
-                                                {
-                                                    sal_Int32 nNumber = aStringAry[ nToken ].ToInt32();
-                                                    if ( nNumber & ~0xff )
-                                                    {
-											            PptSlidePersistList* pPageList = GetPageList( PPT_SLIDEPAGE );
-											            if ( pPageList )
-											            {
-												            sal_uInt16 nPage = pPageList->FindPage( nNumber );
-												            if ( nPage != PPTSLIDEPERSIST_ENTRY_NOTFOUND )
-                                                            {
-													            nPageNumber = nPage;
-                                                                bSucceeded = sal_True;
-                                                                break;
-                                                            }
-											            }
-                                                    }
-                                                }
-                                            }
-                                            if ( !bSucceeded )
-                                            {   // second pass, searching for a SlideName
-							                    for ( nToken = 0; nToken < nTokenCount; nToken++ )
-							                    {
-							                        String aToken( aString.GetToken( nToken, (sal_Unicode)',' ) );
-								                    for ( void* pPtr = maSlideNameList.First(); pPtr; pPtr = maSlideNameList.Next() )
-								                    {
-									                    if ( *(String*)pPtr == aToken )
-									                    {
-										                    nPageNumber = maSlideNameList.GetCurPos();
-                                                            bSucceeded = sal_True;
-										                    break;
-									                    }
-								                    }
-							                    }
-                                            }
-                                            if ( !bSucceeded )
-                                            {   // third pass, searching for a slide number
-                                                for ( nToken = 0; nToken < nTokenCount; nToken++ )
-                                                {
-                                                    if ( aStringAry[ nToken ].IsNumericAscii() )
-                                                    {
-                                                        sal_Int32 nNumber = aStringAry[ nToken ].ToInt32();
-                                                        if ( ( nNumber & ~0xff ) == 0 )
-                                                        {
-                                                            nPageNumber = (sal_uInt32)nNumber - 1;
-                                                            bSucceeded = sal_True;
-                                                            break;
-                                                        }
-                                                    }
-                                                }
-                                            }
-                                            if ( bSucceeded )
-                                            {
-												if ( nPageNumber < maSlideNameList.Count() )
-													pHyperlink->aConvSubString = *(String*)maSlideNameList.GetObject( nPageNumber );
-												if ( !pHyperlink->aConvSubString.Len() )
-												{
-	                                        		pHyperlink->aConvSubString = String( SdResId( STR_PAGE ) );
-			                                        pHyperlink->aConvSubString.Append( sal_Unicode( ' ' ) );
-                                                    pHyperlink->aConvSubString.Append( mpDoc->CreatePageNumValue( (USHORT)nPageNumber + 1 ) );
-							                    }
-                                            }
-                                        }
-										aHyperList.Insert( pHyperlink, LIST_APPEND );
-									}
-									if ( i != nPropCount )
-										delete pHyperlink;
-								}
-							}
-						}
-					}
-				}
-			}
-		}
-	}
-	delete pDInfoSec2;
-
-	if ( mbDocumentFound )
-	{
-		rStCtrl.Seek( maDocHd.GetRecBegFilePos() + 8 );
-		// HyperList lesen / Indexe der einzelnen Eintraege setzen
-		DffRecordHeader aHyperHd;
-		if ( SeekToRec( rStCtrl, PPT_PST_ExObjList, maDocHd.GetRecEndFilePos(), &aHyperHd ) )
-		{
-			UINT32 nExObjHyperListLen = aHyperHd.GetRecEndFilePos();
-			for ( void* pPtr = aHyperList.First(); pPtr; pPtr = aHyperList.Next() )
-			{
-				DffRecordHeader aHyperE;
-				if ( !SeekToRec( rStCtrl, PPT_PST_ExHyperlink, nExObjHyperListLen, &aHyperE ) )
-					break;
-				if ( !SeekToRec( rStCtrl, PPT_PST_ExHyperlinkAtom, nExObjHyperListLen, NULL, 0 ) )
-					break;
-				rStCtrl.SeekRel( 8 );
-				rStCtrl >> ((SdHyperlinkEntry*)pPtr)->nIndex;
-				aHyperE.SeekToEndOfRecord( rStCtrl );
-			}
-		}
-	}
-
-    Size aVisAreaSize;
-	switch ( aUserEditAtom.eLastViewType )
-	{
-		case 5 :	// notes master
-		case 3 :	// notes
-            aVisAreaSize = aDocAtom.GetNotesPageSize();
-        break;
-        default :
-            aVisAreaSize = aDocAtom.GetSlidesPageSize();
-	}
-    Scale( aVisAreaSize );
-    pDocShell->SetVisArea( Rectangle( Point(), aVisAreaSize ) );
-
-	///////////////////////////////////////////////////////////
-	// create master pages:
-	///////////////////////////////////////////////////////////
-	SfxProgress* pStbMgr = new SfxProgress( pDocShell, String( SdResId( STR_POWERPOINT_IMPORT ) ),
-			pMasterPages->Count() + pSlidePages->Count() + pNotePages->Count() );
-
-	UINT32 nImportedPages = 0;
-	{
-		UINT16			nMasterAnz = GetPageCount( PPT_MASTERPAGE );
-
-		for ( USHORT nMasterNum = 0; nMasterNum < nMasterAnz; nMasterNum++ )
-		{
-			SetPageNum( nMasterNum, PPT_MASTERPAGE );
-			SdPage* pPage = (SdPage*)MakeBlancPage( TRUE );
-			if ( pPage )
-			{
-				BOOL bNotesMaster = (*GetPageList( eAktPageKind ) )[ nAktPageNum ]->bNotesMaster;
-				BOOL bStarDrawFiller = (*GetPageList( eAktPageKind ) )[ nAktPageNum ]->bStarDrawFiller;
-
-				PageKind ePgKind = ( bNotesMaster ) ? PK_NOTES : PK_STANDARD;
-				pPage->SetPageKind( ePgKind );
-				pSdrModel->InsertMasterPage( (SdrPage*)pPage );
-				if ( bNotesMaster && bStarDrawFiller )
-					((SdPage*)pPage)->SetAutoLayout( AUTOLAYOUT_NOTES, TRUE );
-				if ( nMasterNum )
-				{
-					boost::optional< sal_Int16 > oStartNumbering;
-					SfxStyleSheet* pSheet;
-					if ( nMasterNum == 1 )
-					{
-						///////////////////
-						// standardsheet //
-						///////////////////
-						pSheet = (SfxStyleSheet*)mpDoc->GetStyleSheetPool()->Find( String(SdResId( STR_STANDARD_STYLESHEET_NAME )), SD_STYLE_FAMILY_GRAPHICS );
-						if ( pSheet )
-						{
-							SfxItemSet& rItemSet = pSheet->GetItemSet();
-							PPTParagraphObj aParagraph( *pPPTStyleSheet, TSS_TYPE_TEXT_IN_SHAPE, 0 );
-							PPTPortionObj aPortion( *pPPTStyleSheet, TSS_TYPE_TEXT_IN_SHAPE, 0 );
-							aParagraph.AppendPortion( aPortion );
-							aParagraph.ApplyTo( rItemSet, oStartNumbering, (SdrPowerPointImport&)*this, 0xffffffff, NULL );
-							aPortion.ApplyTo( rItemSet, (SdrPowerPointImport&)*this, 0xffffffff );
-						}
-					}
-
-					// PSEUDO
-					pSheet = (SfxStyleSheet*)mpDoc->GetStyleSheetPool()->Find( String(SdResId( STR_PSEUDOSHEET_BACKGROUNDOBJECTS )), SD_STYLE_FAMILY_PSEUDO );
-					if ( pSheet )
-					{
-						SfxItemSet& rItemSet = pSheet->GetItemSet();
-						PPTParagraphObj aParagraph( *pPPTStyleSheet, TSS_TYPE_TEXT_IN_SHAPE, 0 );
-						PPTPortionObj aPortion( *pPPTStyleSheet, TSS_TYPE_TEXT_IN_SHAPE, 0 );
-						aParagraph.AppendPortion( aPortion );
-						aParagraph.ApplyTo( rItemSet, oStartNumbering, (SdrPowerPointImport&)*this, 0xffffffff, NULL );
-						aPortion.ApplyTo( rItemSet, (SdrPowerPointImport&)*this, 0xffffffff );
-					}
-
-					///////////////////////////////////////////////////////////
-					// create layoutstylesheets, set layoutname and stylesheet
-					// (nur auf Standard- und Notizseiten)
-					///////////////////////////////////////////////////////////
-					String aLayoutName( SdResId( STR_LAYOUT_DEFAULT_NAME ) );
-					if ( nMasterNum > 2 )
-					{
-						if ( ePgKind == PK_STANDARD )
-						{   // Standardseite: Neues Praesentationslayout erzeugen
-							aLayoutName = String( SdResId( STR_LAYOUT_DEFAULT_TITLE_NAME ) );
-							aLayoutName += String::CreateFromInt32( (sal_Int32)( ( nMasterNum + 1 ) / 2 - 1 ) );
-							( (SdStyleSheetPool*)mpDoc->GetStyleSheetPool() )->CreateLayoutStyleSheets( aLayoutName );
-						}
-						else	// Notizseite: Praesentationslayout von der Standardseite verwenden
-							aLayoutName = ( (SdPage*)mpDoc->GetMasterPage( nMasterNum - 1 ) )->GetName();
-					}
-					pPage->SetName( aLayoutName );
-					aLayoutName.AppendAscii( RTL_CONSTASCII_STRINGPARAM( SD_LT_SEPARATOR ));
-					aLayoutName += String( SdResId( STR_LAYOUT_OUTLINE ) );
-					pPage->SetLayoutName( aLayoutName );
-
-					/////////////////////
-					// set stylesheets //
-					/////////////////////
-					if ( pPage->GetPageKind() == PK_STANDARD )
-					{
-						UINT32 nTitleInstance = TSS_TYPE_PAGETITLE;
-						UINT32 nOutlinerInstance = TSS_TYPE_BODY;
-//						BOOL bSwapStyleSheet = pSlideLayout->eLayout == PPT_LAYOUT_TITLEMASTERSLIDE;
-//						if ( bSwapStyleSheet )
-//						{
-//							nTitleInstance = TSS_TYPE_TITLE;
-//							nOutlinerInstance = TSS_TYPE_SUBTITLE;
-//						}
-						/////////////////////
-						// titelstylesheet //
-						/////////////////////
-						pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_TITLE );
-						if ( pSheet )
-						{
-							SfxItemSet& rItemSet = pSheet->GetItemSet();
-							PPTParagraphObj aParagraph( *pPPTStyleSheet, nTitleInstance, 0 );
-							PPTPortionObj aPortion( *pPPTStyleSheet, nTitleInstance, 0 );
-							aParagraph.AppendPortion( aPortion );
-							aParagraph.ApplyTo( rItemSet, oStartNumbering, (SdrPowerPointImport&)*this, 0xffffffff, NULL );
-							aPortion.ApplyTo( rItemSet, (SdrPowerPointImport&)*this, 0xffffffff );
-						}
-						////////////////////////
-						// outlinerstylesheet //
-						////////////////////////
-						UINT16 nLevel;
-						PPTParagraphObj* pParagraphs[ 9 ];
-						PPTParagraphObj* pPreviousPara = NULL;
-
-						for ( nLevel = 0; nLevel < 9; nLevel++ )
-						{
-							String aName( pPage->GetLayoutName() );
-							aName.Append( (sal_Unicode)( ' ' ) );
-							aName.Append( String::CreateFromInt32( nLevel + 1 ) );
-							SfxStyleSheet* pOutlineSheet = (SfxStyleSheet*)mpDoc->GetStyleSheetPool()->Find( aName, SD_STYLE_FAMILY_MASTERPAGE );
-							DBG_ASSERT( pOutlineSheet, "Vorlage fuer Gliederungsobjekt nicht gefunden" );
-							if ( pOutlineSheet )
-							{
-								pParagraphs[ nLevel ] = new PPTParagraphObj( *pPPTStyleSheet, nOutlinerInstance, nLevel );
-								SfxItemSet& rItemSet = pOutlineSheet->GetItemSet();
-								PPTPortionObj aPortion( *pPPTStyleSheet, nOutlinerInstance, nLevel );
-								pParagraphs[ nLevel ]->AppendPortion( aPortion );
-								pParagraphs[ nLevel ]->ApplyTo( rItemSet, oStartNumbering, (SdrPowerPointImport&)*this, 0xffffffff, pPreviousPara );
-								aPortion.ApplyTo( rItemSet, (SdrPowerPointImport&)*this, 0xffffffff );
-								pPreviousPara = pParagraphs[ nLevel ];
-							}
-							else
-								pParagraphs[ nLevel ] = NULL;
-						}
-						for ( nLevel = 0; nLevel < 9; delete pParagraphs[ nLevel++ ] ) ;
-						/////////////////////////
-						// subtitle stylesheet //
-						/////////////////////////
-						pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_TEXT );
-						if ( pSheet )
-						{
-							SfxItemSet& rItemSet = pSheet->GetItemSet();
-							PPTParagraphObj aParagraph( *pPPTStyleSheet, TSS_TYPE_SUBTITLE, 0 );
-							PPTPortionObj aPortion( *pPPTStyleSheet, TSS_TYPE_SUBTITLE, 0 );
-							aParagraph.AppendPortion( aPortion );
-							aParagraph.ApplyTo( rItemSet, oStartNumbering, (SdrPowerPointImport&)*this, 0xffffffff, NULL );
-							aPortion.ApplyTo( rItemSet, (SdrPowerPointImport&)*this, 0xffffffff );
-						}
-					}
-					else if ( ePgKind == PK_NOTES )
-					{
-						pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_NOTES );
-						if ( pSheet )
-						{
-							SfxItemSet& rItemSet = pSheet->GetItemSet();
-							PPTParagraphObj aParagraph( *pPPTStyleSheet, TSS_TYPE_NOTES, 0 );
-							PPTPortionObj aPortion( *pPPTStyleSheet, TSS_TYPE_NOTES, 0 );
-							aParagraph.AppendPortion( aPortion );
-							aParagraph.ApplyTo( rItemSet, oStartNumbering, (SdrPowerPointImport&)*this, 0xffffffff, NULL );
-							aPortion.ApplyTo( rItemSet, (SdrPowerPointImport&)*this, 0xffffffff );
-						}
-					}
-				}
-			}
-		}
-	}
-	SdPage* pMPage;
-	sal_uInt16 i;
-	for ( i = 1; i < mpDoc->GetMasterPageCount() && ( (pMPage = (SdPage*)mpDoc->GetMasterPage( i )) != 0 ); i++ )
-	{
-		SetPageNum( i, PPT_MASTERPAGE );
-		/////////////////////////////////////////////
-		// importing master page objects		   //
-		/////////////////////////////////////////////
-		PptSlidePersistList* pList = GetPageList( eAktPageKind );
-		PptSlidePersistEntry* pPersist = ( pList && ( nAktPageNum < pList->Count() ) )
-													? (*pList)[ nAktPageNum ] : NULL;
-		if ( pPersist )
-		{
-			if ( pPersist->bStarDrawFiller && pPersist->bNotesMaster && ( nAktPageNum > 2 ) && ( ( nAktPageNum & 1 ) == 0 ) )
-			{
-				pSdrModel->DeleteMasterPage( nAktPageNum );
-				SdrPage* pNotesClone = ((SdPage*)pSdrModel->GetMasterPage( 2 ))->Clone();
-				pSdrModel->InsertMasterPage( pNotesClone, nAktPageNum );
-				if ( pNotesClone )
-				{
-					String aLayoutName( ((SdPage*)pSdrModel->GetMasterPage( nAktPageNum - 1 ))->GetLayoutName() );
-					((SdPage*)pNotesClone)->SetPresentationLayout( aLayoutName, sal_False, sal_False, sal_False );
-					((SdPage*)pNotesClone)->SetLayoutName( aLayoutName );
-				}
-			}
-			else if ( ( pPersist->bStarDrawFiller == FALSE ) )
-			{
-				PptSlidePersistEntry* pE = pPersist;
-				while( ( pE->aSlideAtom.nFlags & 4 ) && pE->aSlideAtom.nMasterId )
-				{
-					sal_uInt16 nNextMaster = pMasterPages->FindPage( pE->aSlideAtom.nMasterId );
-					if ( nNextMaster == PPTSLIDEPERSIST_ENTRY_NOTFOUND )
-						break;
-					else
-    					pE = (*pList)[ nNextMaster ];
-				}
-				SdrObject* pObj = ImportPageBackgroundObject( *pMPage, pE->nBackgroundOffset, TRUE );	// import background
-				if ( pObj )
-					pMPage->NbcInsertObject( pObj );
-
-				sal_Bool bNewAnimationsUsed = sal_False;
-				ProcessData aProcessData( *(*pList)[ nAktPageNum ], (SdPage*)pMPage );
-				sal_uInt32 nFPosMerk = rStCtrl.Tell();
-				DffRecordHeader aPageHd;
-				if ( SeekToAktPage( &aPageHd ) )
-				{
-					if ( mbTracing )
-						mpTracer->AddAttribute( rtl::OUString::createFromAscii( "MasterPage" ), rtl::OUString::valueOf( (sal_Int32) (nAktPageNum + 1) ) );
-
-					while( ( rStCtrl.GetError() == 0 ) && ( rStCtrl.Tell() < aPageHd.GetRecEndFilePos() ) )
-					{
-						DffRecordHeader aHd;
- 						rStCtrl >> aHd;
-						switch( aHd.nRecType )
-						{
-							case PPT_PST_PPDrawing :
-							{
-								aHd.SeekToBegOfRecord( rStCtrl );
-								DffRecordHeader aPPDrawHd;
-								if ( SeekToRec( rStCtrl, PPT_PST_PPDrawing, aHd.GetRecEndFilePos(), &aPPDrawHd ) )
-								{
-									sal_uInt32 nPPDrawEnd = aPPDrawHd.GetRecEndFilePos();
-									DffRecordHeader aEscherF002Hd;
-									if ( SeekToRec( rStCtrl, DFF_msofbtDgContainer, nPPDrawEnd, &aEscherF002Hd ) )
-									{
-										sal_uInt32 nEscherF002End = aEscherF002Hd.GetRecEndFilePos();
-										DffRecordHeader aEscherObjListHd;
-										if ( SeekToRec( rStCtrl, DFF_msofbtSpgrContainer, nEscherF002End, &aEscherObjListHd ) )
-										{
-											sal_uInt32 nObjCount = 0;
-											while( ( rStCtrl.GetError() == 0 ) && ( rStCtrl.Tell() < aEscherObjListHd.GetRecEndFilePos() ) )
-											{
-												DffRecordHeader aHd2;
-												rStCtrl >> aHd2;
-												if ( ( aHd2.nRecType == DFF_msofbtSpContainer ) || ( aHd2.nRecType == DFF_msofbtSpgrContainer ) )
-												{
-													if ( nObjCount++ )		// skipping the first object
-													{
-														Rectangle aEmpty;
-														aHd2.SeekToBegOfRecord( rStCtrl );
-														SdrObject* pImpObj = ImportObj( rStCtrl, (void*)&aProcessData, aEmpty, aEmpty );
-														if ( pImpObj )
-														{
-															pImpObj->SetLayer( mnBackgroundObjectsLayerID );
-															pMPage->NbcInsertObject( pImpObj );
-														}
-													}
-												}
-												aHd2.SeekToEndOfRecord( rStCtrl );
-											}
-										}
-									}
-								}
-							}
-							break;
-
-							case PPT_PST_ProgTags :
-							{
-								DffRecordHeader aProgTagHd;
-								if ( SeekToContentOfProgTag( 10, rStCtrl, aPageHd, aProgTagHd ) )
-								{
-									while ( ( rStCtrl.GetError() == 0 ) && ( rStCtrl.Tell() < aProgTagHd.GetRecEndFilePos() ) )
-									{
-										DffRecordHeader aProgTagContentHd;
-										rStCtrl >> aProgTagContentHd;
-										switch( aProgTagContentHd.nRecType )
-										{
-											case DFF_msofbtAnimGroup :
-											{
-												::com::sun::star::uno::Reference< ::com::sun::star::drawing::XDrawPage > xPage( pMPage->getUnoPage(), ::com::sun::star::uno::UNO_QUERY );
-												ppt::AnimationImporter aImporter( this, rStCtrl );
-												aImporter.import( xPage, aProgTagContentHd );
-												bNewAnimationsUsed = sal_True;
-											}
-											break;
-										}
-										aProgTagContentHd.SeekToEndOfRecord( rStCtrl );
-									}
-								}
-							}
-							break;
-						}
-						aHd.SeekToEndOfRecord( rStCtrl );
-					}
-					if ( mbTracing )
-						mpTracer->RemoveAttribute( rtl::OUString::createFromAscii( "MasterPage" ) );
-				}
-				rStCtrl.Seek( nFPosMerk );
-				ImportPageEffect( (SdPage*)pMPage, bNewAnimationsUsed );
-
-				///////////////////////
-				// background object //
-				///////////////////////
-				pObj = pMPage->GetObj( 0 );
-				if ( pObj && pObj->GetObjIdentifier() == OBJ_RECT )
-				{
-					if ( pMPage->GetPageKind() == PK_STANDARD )
-					{
-						// Hintergrundobjekt gefunden (erstes Objekt der MasterPage)
-						pObj->SetEmptyPresObj( TRUE );
-						pObj->SetUserCall( pMPage );
-						pObj->SetLayer( mnBackgroundLayerID );
-
-						// Schatten am ersten Objekt (Hintergrundobjekt) entfernen (#57918#)
-						SfxItemSet aTempAttr( mpDoc->GetPool() );
-						aTempAttr.Put( pObj->GetMergedItemSet() );
-
-						BOOL bShadowIsOn = ( (SdrShadowItem&)( aTempAttr.Get( SDRATTR_SHADOW ) ) ).GetValue();
-						if( bShadowIsOn )
-						{
-							aTempAttr.Put( SdrShadowItem( FALSE ) );
-							pObj->SetMergedItemSet( aTempAttr );
-						}
-						SfxStyleSheet* pSheet = pMPage->GetStyleSheetForPresObj( PRESOBJ_BACKGROUND );
-						if ( pSheet )
-						{	// StyleSheet fuellen und dem Objekt zuweisen
-							pSheet->GetItemSet().ClearItem();
-							pSheet->GetItemSet().Put( pObj->GetMergedItemSet() );
-							aTempAttr.ClearItem();
-							pObj->SetMergedItemSet( aTempAttr );
-							pObj->SetStyleSheet( pSheet, FALSE );
-						}
-						pMPage->InsertPresObj( pObj, PRESOBJ_BACKGROUND );
-
-						// #110094#-15
-						// tell the page that it's visualization has changed
-						pMPage->ActionChanged();
-					}
-				}
-			}
-		}
-		if( pStbMgr )
-			pStbMgr->SetState( nImportedPages++ );
-	}
-	////////////////////////////////////
-	// importing slide pages		  //
-	////////////////////////////////////
-	{
-		UINT32			nFPosMerk = rStCtrl.Tell();
-		PptPageKind 	ePageKind = eAktPageKind;
-		UINT16			nPageNum = nAktPageNum;
-
-		SdPage* pHandoutPage = (SdPage*)MakeBlancPage( FALSE );
-		pHandoutPage->SetPageKind( PK_HANDOUT );
-		pSdrModel->InsertPage( pHandoutPage );
-
-		USHORT nPageAnz = GetPageCount( PPT_SLIDEPAGE );
-		if ( nPageAnz )
-		{
-			for ( USHORT nPage = 0; nPage < nPageAnz; nPage++ )
-			{
-				sal_Bool bNewAnimationsUsed = sal_False;
-
-				mePresChange = PRESCHANGE_SEMIAUTO;
-				SetPageNum( nPage, PPT_SLIDEPAGE );
-                SdPage* pPage = (SdPage*)MakeBlancPage( FALSE );
-                PptSlidePersistEntry* pMasterPersist = NULL;
-	            if ( HasMasterPage( nPage, PPT_SLIDEPAGE ) )     // try to get the LayoutName from the masterpage
-	            {
-		            sal_uInt16 nMasterNum = GetMasterPageIndex( nAktPageNum, eAktPageKind );
-		            pPage->TRG_SetMasterPage(*pSdrModel->GetMasterPage(nMasterNum));
-		            PptSlidePersistList* pPageList = GetPageList( PPT_MASTERPAGE );
-                    if ( pPageList && nMasterNum < pPageList->Count() )
-                        pMasterPersist = (*pPageList)[ nMasterNum ];
-			        pPage->SetLayoutName(((SdPage&)pPage->TRG_GetMasterPage()).GetLayoutName());
-                }
-				pPage->SetPageKind( PK_STANDARD );
-				pSdrModel->InsertPage( pPage );			// SJ: #i29625# because of form controls, the
-				ImportPage( pPage, pMasterPersist );	//  page must be inserted before importing
-				SetHeaderFooterPageSettings( pPage, pMasterPersist );
-				// CWS preseng01: pPage->SetPageKind( PK_STANDARD );
-
-				DffRecordHeader aPageHd;
-				if ( SeekToAktPage( &aPageHd ) )
-				{
-					aPageHd.SeekToContent( rStCtrl );
-					while ( ( rStCtrl.GetError() == 0 ) && ( rStCtrl.Tell() < aPageHd.GetRecEndFilePos() ) )
-					{
-						DffRecordHeader aHd;
-						rStCtrl >> aHd;
-						switch ( aHd.nRecType )
-						{
-							case PPT_PST_ProgTags :
-							{
-								DffRecordHeader aProgTagHd;
-								if ( SeekToContentOfProgTag( 10, rStCtrl, aPageHd, aProgTagHd ) )
-								{
-									while ( ( rStCtrl.GetError() == 0 ) && ( rStCtrl.Tell() < aProgTagHd.GetRecEndFilePos() ) )
-									{
-										DffRecordHeader aProgTagContentHd;
-										rStCtrl >> aProgTagContentHd;
-										switch( aProgTagContentHd.nRecType )
-										{
-/*
-											case PPT_PST_CommentContainer :
-											{
-
-											}
-											break;
-*/
-											case DFF_msofbtAnimGroup :
-											{
-												::com::sun::star::uno::Reference< ::com::sun::star::drawing::XDrawPage > xPage( pPage->getUnoPage(), ::com::sun::star::uno::UNO_QUERY );
-												ppt::AnimationImporter aImporter( this, rStCtrl );
-												aImporter.import( xPage, aProgTagContentHd );
-												bNewAnimationsUsed = sal_True;
-											}
-											break;
-
-											case PPT_PST_NewlyAddedAtomByXP11008 :	// ???
-											break;
-
-											case PPT_PST_NewlyAddedAtomByXP12011 :	// ??? don't know, this atom is always 8 bytes big
-											break;									// and is appearing in nearly every l10 progtag
-										}
-										aProgTagContentHd.SeekToEndOfRecord( rStCtrl );
-									}
-								}
-							}
-							break;
-
-							case PPT_PST_HeadersFooters :
-							case PPT_PST_PPDrawing :
-							default:
-							break;
-						}
-
-						aHd.SeekToEndOfRecord( rStCtrl );
-					}
-					ImportPageEffect( (SdPage*)pPage, bNewAnimationsUsed );
-				}
-
-				// creating the corresponding note page
-				eAktPageKind = PPT_NOTEPAGE;
-                SdPage* pNotesPage = (SdPage*)MakeBlancPage( FALSE );
-				sal_uInt16 nNotesMasterNum = GetMasterPageIndex( nPage, PPT_SLIDEPAGE ) + 1;
-				sal_uInt32 nNotesPageId = GetNotesPageId( nPage );
-				if ( nNotesPageId )
-				{
-					nImportedPages++;
-					sal_uInt16 nNotesPageIndex = pNotePages->FindPage( nNotesPageId );
-					if ( nNotesPageIndex == PPTSLIDEPERSIST_ENTRY_NOTFOUND )
-						nNotesPageIndex = 0;
-					SetPageNum( nNotesPageIndex, PPT_NOTEPAGE );
-                    PptSlidePersistEntry* pMasterPersist2 = NULL;
-	                if ( HasMasterPage( nNotesPageIndex, PPT_NOTEPAGE ) ) // try to get the LayoutName from the masterpage
-	                {
-		                pNotesPage->TRG_SetMasterPage(*pSdrModel->GetMasterPage(nNotesMasterNum));
-		                PptSlidePersistList* pPageList = GetPageList( PPT_MASTERPAGE );
-                        if ( pPageList && nNotesMasterNum < pPageList->Count() )
-							pMasterPersist2 = (*pPageList)[ nNotesMasterNum ];
-    			        pNotesPage->SetLayoutName( ((SdPage&)pNotesPage->TRG_GetMasterPage()).GetLayoutName() );
-                    }
-					pNotesPage->SetPageKind( PK_NOTES );
-					pNotesPage->TRG_SetMasterPage(*pSdrModel->GetMasterPage(nNotesMasterNum));
-					pSdrModel->InsertPage( pNotesPage );		// SJ: #i29625# because of form controls, the
-                    ImportPage( pNotesPage, pMasterPersist2 );	// page must be inserted before importing
-					SetHeaderFooterPageSettings( pNotesPage, pMasterPersist2 );
-					pNotesPage->SetAutoLayout( AUTOLAYOUT_NOTES, FALSE );
-				}
-				else
-				{
-					pNotesPage->SetPageKind( PK_NOTES );
-					pNotesPage->TRG_SetMasterPage(*pSdrModel->GetMasterPage(nNotesMasterNum));
-					pNotesPage->SetAutoLayout( AUTOLAYOUT_NOTES, TRUE );
-					pSdrModel->InsertPage( pNotesPage );
-					SdrObject* pPageObj = pNotesPage->GetPresObj( PRESOBJ_PAGE, 1 );
-					if ( pPageObj )
-						((SdrPageObj*)pPageObj)->SetReferencedPage(pSdrModel->GetPage(( nPage << 1 ) + 1));
-				}
-
-				if( pStbMgr )
-					pStbMgr->SetState( nImportedPages++ );
-			}
-			//////////////
-		}
-		else
-		{
-			// Das kann bei Dokumentvorlagen vorkommen
-			eAktPageKind = PPT_SLIDEPAGE;
-			SdrPage* pPage = MakeBlancPage( FALSE );
-			pSdrModel->InsertPage( pPage );
-
-			// #i37397#, trying to set the title master for the first page
-			sal_uInt16 nMaster, nMasterCount = pSdrModel->GetMasterPageCount();
-			SdPage* pFoundMaster = NULL;
-			for ( nMaster = 1; nMaster < nMasterCount; nMaster++ )
-			{
-				SdPage* pMaster = static_cast<SdPage*>( pSdrModel->GetMasterPage( nMaster ) );
-				if ( pMaster->GetPageKind() == PK_STANDARD )
-				{
-					SetPageNum( nMaster, PPT_MASTERPAGE );
-					if ( !pFoundMaster )
-						pFoundMaster = pMaster;
-					else if ( GetSlideLayoutAtom()->eLayout == PPT_LAYOUT_TITLEMASTERSLIDE )
-						pFoundMaster = pMaster;
-					if ( GetSlideLayoutAtom()->eLayout == PPT_LAYOUT_TITLEMASTERSLIDE )
-						break;
-				}
-			}
-			if ( pFoundMaster )
-			{
-				((SdPage*)pPage)->TRG_SetMasterPage( *((SdPage*)pFoundMaster) );
-			    ((SdPage*)pPage)->SetLayoutName( ((SdPage*)pFoundMaster)->GetLayoutName() );
-			}
-			((SdPage*)pPage)->SetAutoLayout( AUTOLAYOUT_TITLE, TRUE, TRUE );
-
-			eAktPageKind = PPT_NOTEPAGE;
-			SdrPage* pNPage = MakeBlancPage( FALSE );
-			pSdrModel->InsertPage( pNPage );
-		}
-		SetPageNum( nPageNum, ePageKind );
-		rStCtrl.Seek( nFPosMerk );
-	}
-	///////////////////////////////////////////////////////////////////
-	// Handzettel und Notiz-Seiten erzeugen 						 //
-	///////////////////////////////////////////////////////////////////
-	bOk = mpDoc->CreateMissingNotesAndHandoutPages();
-	if ( bOk )
-	{
-		for ( i = 0; i < mpDoc->GetSdPageCount( PK_STANDARD ); i++ )
-		{
-			////////////////////
-			// set AutoLayout //
-			////////////////////
-			SetPageNum( i, PPT_SLIDEPAGE );
-			SdPage* pPage = mpDoc->GetSdPage( i, PK_STANDARD );
-			AutoLayout eAutoLayout = AUTOLAYOUT_NONE;
-			const PptSlideLayoutAtom* pSlideLayout = GetSlideLayoutAtom();
-			if ( pSlideLayout )
-			{
-				switch ( pSlideLayout->eLayout )			// Praesentationslayouts fuer Standard-Seiten
-				{
-					case PPT_LAYOUT_TITLEANDBODYSLIDE :
-					{
-						eAutoLayout = AUTOLAYOUT_ENUM;
-						USHORT nID1 = pSlideLayout->aPlaceholderId[ 1 ];
-						switch ( nID1 )
-						{
-							case PPT_PLACEHOLDER_BODY :
-								eAutoLayout = AUTOLAYOUT_ENUM;
-							break;
-							case PPT_PLACEHOLDER_TABLE :
-								eAutoLayout = AUTOLAYOUT_TAB;
-							break;
-							case PPT_PLACEHOLDER_ORGANISZATIONCHART :
-								eAutoLayout = AUTOLAYOUT_ORG;
-							break;
-							case PPT_PLACEHOLDER_GRAPH :
-								eAutoLayout = AUTOLAYOUT_CHART;
-							break;
-							case PPT_PLACEHOLDER_OBJECT :
-								eAutoLayout = AUTOLAYOUT_OBJ;
-							break;
-							case PPT_PLACEHOLDER_VERTICALTEXTBODY :
-								eAutoLayout = AUTOLAYOUT_TITLE_VERTICAL_OUTLINE;
-							break;
-						}
-					}
-					break;
-
-					case PPT_LAYOUT_2COLUMNSANDTITLE :
-					{
-						eAutoLayout = AUTOLAYOUT_2TEXT;
-						USHORT nID1 = pSlideLayout->aPlaceholderId[ 1 ];
-						USHORT nID2 = pSlideLayout->aPlaceholderId[ 2 ];
-						if ( nID1 == PPT_PLACEHOLDER_BODY && nID2 == PPT_PLACEHOLDER_GRAPH )
-							eAutoLayout = AUTOLAYOUT_TEXTCHART;
-						else if ( nID1 == PPT_PLACEHOLDER_GRAPH && nID2 == PPT_PLACEHOLDER_BODY )
-							eAutoLayout = AUTOLAYOUT_CHARTTEXT;
-						else if ( nID1 == PPT_PLACEHOLDER_BODY && nID2 == PPT_PLACEHOLDER_CLIPART )
-							eAutoLayout = AUTOLAYOUT_TEXTCLIP;
-						else if ( nID1 == PPT_PLACEHOLDER_CLIPART && nID2 == PPT_PLACEHOLDER_BODY )
-							eAutoLayout = AUTOLAYOUT_CLIPTEXT;
-						else if ( nID1 == PPT_PLACEHOLDER_CLIPART && nID2 == PPT_PLACEHOLDER_VERTICALTEXTBODY )
-							eAutoLayout = AUTOLAYOUT_TITLE_VERTICAL_OUTLINE_CLIPART;
-						else if ( ( nID1 == PPT_PLACEHOLDER_BODY )
-							&& ( ( nID2 == PPT_PLACEHOLDER_OBJECT ) || ( nID2 == PPT_PLACEHOLDER_MEDIACLIP ) ) )
-							eAutoLayout = AUTOLAYOUT_TEXTOBJ;
-						else if ( ( nID2 == PPT_PLACEHOLDER_BODY )
-							&& ( ( nID1 == PPT_PLACEHOLDER_OBJECT ) || ( nID1 == PPT_PLACEHOLDER_MEDIACLIP ) ) )
-							eAutoLayout = AUTOLAYOUT_OBJTEXT;
-                        else if ( ( nID1 == PPT_PLACEHOLDER_OBJECT ) && ( nID2 == PPT_PLACEHOLDER_OBJECT  ) )
-							eAutoLayout = AUTOLAYOUT_OBJ;
-					}
-					break;
-
-					case PPT_LAYOUT_2ROWSANDTITLE :
-					{
-						eAutoLayout = AUTOLAYOUT_2TEXT;
-						USHORT nID1 = pSlideLayout->aPlaceholderId[ 1 ];
-						USHORT nID2 = pSlideLayout->aPlaceholderId[ 2 ];
-						if ( nID1 == PPT_PLACEHOLDER_BODY && nID2 == PPT_PLACEHOLDER_OBJECT )
-							eAutoLayout = AUTOLAYOUT_TEXTOVEROBJ;
-						else if ( nID1 == PPT_PLACEHOLDER_OBJECT && nID2 == PPT_PLACEHOLDER_BODY )
-							eAutoLayout = AUTOLAYOUT_OBJOVERTEXT;
-					}
-					break;
-
-					case PPT_LAYOUT_TITLESLIDE :
-						eAutoLayout = AUTOLAYOUT_TITLE;
-					break;
-					case PPT_LAYOUT_ONLYTITLE :
-						eAutoLayout = AUTOLAYOUT_ONLY_TITLE;
-					break;
-					case PPT_LAYOUT_RIGHTCOLUMN2ROWS :
-						eAutoLayout = AUTOLAYOUT_TEXT2OBJ;
-					break;
-					case PPT_LAYOUT_LEFTCOLUMN2ROWS :
-						eAutoLayout = AUTOLAYOUT_2OBJTEXT;
-					break;
-					case PPT_LAYOUT_TOPROW2COLUMN :
-						eAutoLayout = AUTOLAYOUT_2OBJOVERTEXT;
-					break;
-					case PPT_LAYOUT_4OBJECTS :
-						eAutoLayout = AUTOLAYOUT_4OBJ;
-					break;
-					case PPT_LAYOUT_BIGOBJECT :
-						eAutoLayout = AUTOLAYOUT_OBJ;
-					break;
-					case PPT_LAYOUT_TITLERIGHTBODYLEFT :
-						eAutoLayout = AUTOLAYOUT_VERTICAL_TITLE_VERTICAL_OUTLINE; // AUTOLAYOUT_ENUM;
-					break;
-					case PPT_LAYOUT_TITLERIGHT2BODIESLEFT :
-						eAutoLayout = AUTOLAYOUT_VERTICAL_TITLE_TEXT_CHART; // AUTOLAYOUT_TEXT2OBJ;
-					break;
-
-					case PPT_LAYOUT_BOTTOMROW2COLUMNS :
-					case PPT_LAYOUT_BLANCSLIDE :
-					case PPT_LAYOUT_MASTERSLIDE :			// Layout der Standard- und Titel-MasterPage
-					case PPT_LAYOUT_TITLEMASTERSLIDE :
-					case PPT_LAYOUT_MASTERNOTES :			// Layout der Notizen-MasterPage
-					case PPT_LAYOUT_NOTESTITLEBODY :		// Praesentationslayout fuer Notiz-Seiten
-					case PPT_LAYOUT_HANDOUTLAYOUT : 		// Praesentationslayout fuer Handzettelseiten
-						eAutoLayout = AUTOLAYOUT_NONE;
-					break;
-				}
-				if ( eAutoLayout != AUTOLAYOUT_NONE )
-					pPage->SetAutoLayout( eAutoLayout, FALSE );
-			}
-		}
-		//////////////////////////////////////////////////////////////
-		// Handzettel-MasterPage: Autolayout setzen 				//
-		//////////////////////////////////////////////////////////////
-		SdPage* pHandoutMPage = mpDoc->GetMasterSdPage( 0, PK_HANDOUT );
-		pHandoutMPage->SetAutoLayout( AUTOLAYOUT_HANDOUT6, TRUE, TRUE );
-	}
-
-	UINT32 nSlideCount = GetPageCount();
-	for ( i = 0; ( i < nSlideCount) && ( i < maSlideNameList.Count() ); i++ )
-	{
-		SdPage* pPage = mpDoc->GetSdPage( i, PK_STANDARD );
-		String* pName = (String*)maSlideNameList.GetObject( i );
-		if ( pPage && pName )
-		{
-			if ( pName->Len() )
-				pPage->SetName( *pName );
-			else
-				*pName = pPage->GetName();
-		}
-	}
-	if ( mbDocumentFound )
-	{
-		mpDoc->SetSummationOfParagraphs( sal_True );
-		if ( pDocShell )
-		{
-			::sd::FrameView* pFrameView = mpDoc->GetFrameView( 0 );
-			if ( !pFrameView )
-			{
-				List* pFrameViewList = mpDoc->GetFrameViewList();
-				if ( pFrameViewList )
-				{
-					pFrameView = new ::sd::FrameView( mpDoc );
-					if ( pFrameView )
-						pFrameViewList->Insert( pFrameView );
-				}
-			}
-			if ( pFrameView )
-			{
-				sal_uInt16	nSelectedPage = 0;
-				PageKind	ePageKind = PK_STANDARD;
-				EditMode	eEditMode = EM_PAGE;
-
-				switch ( aUserEditAtom.eLastViewType )
-				{
-					case 7 :	// outliner view
-					{
-						SfxItemSet* pSet = mrMed.GetItemSet();
-						if ( pSet )
-							pSet->Put( SfxUInt16Item( SID_VIEW_ID, 3 ) );
-					}
-					break;
-					case 8 :	// slide sorter
-					{
-						SfxItemSet* pSet = mrMed.GetItemSet();
-						if ( pSet )
-							pSet->Put( SfxUInt16Item( SID_VIEW_ID, 2 ) );
-					}
-					break;
-					case 10 :	// titlemaster
-						nSelectedPage = 1;
-					case 2 :	// master
-					{
-						ePageKind = PK_STANDARD;
-						eEditMode = EM_MASTERPAGE;
-					}
-					break;
-					case 5 :	// notes master
-						eEditMode = EM_MASTERPAGE;
-					case 3 :	// notes
-						ePageKind = PK_NOTES;
-					break;
-					case 4 :	// handout
-						ePageKind = PK_HANDOUT;
-					break;
-					default :
-					case 1 :	// normal
-					break;
-				}
-				pFrameView->SetPageKind( ePageKind );
-				pFrameView->SetSelectedPage( nSelectedPage );
-				pFrameView->SetViewShEditMode( eEditMode, ePageKind );
-			}
-		}
-		DffRecordHeader aCustomShowHeader;
-		// custom show einlesen und setzen
-		rStCtrl.Seek( maDocHd.GetRecBegFilePos() + 8 );
-		if ( SeekToRec( rStCtrl, PPT_PST_NamedShows, maDocHd.GetRecEndFilePos(), &aCustomShowHeader ) )
-		{
-			DffRecordHeader aCuHeader;
-			while( SeekToRec( rStCtrl, PPT_PST_NamedShow, aCustomShowHeader.GetRecEndFilePos(), &aCuHeader ) )
-			{
-				DffRecordHeader aContent;
-				if ( SeekToRec( rStCtrl, PPT_PST_CString, aCuHeader.GetRecEndFilePos(), &aContent ) )
-				{
-					String aCuShow;
-					aContent.SeekToBegOfRecord( rStCtrl );
-					if ( ReadString( aCuShow ) )
-					{
-						if ( SeekToRec( rStCtrl, PPT_PST_NamedShowSlides, aCuHeader.GetRecEndFilePos(), &aContent ) )
-						{
-							PptSlidePersistList* pPageList = GetPageList( PPT_SLIDEPAGE );
-							UINT32 nSCount = aContent.nRecLen >> 2;
-							if ( pPageList && nSCount )
-							{
-								List* pList = mpDoc->GetCustomShowList( TRUE );
-								if ( pList )
-								{
-									SdCustomShow* pSdCustomShow = new SdCustomShow( mpDoc );
-									if ( pSdCustomShow )
-									{
-										pSdCustomShow->SetName( aCuShow );
-										UINT32 nFound = 0;
-										for ( UINT32 nS = 0; nS < nSCount; nS++ )
-										{
-											UINT32 nPageNumber;
-											rStCtrl >> nPageNumber;
-											USHORT nPage = pPageList->FindPage( nPageNumber );
-											if ( nPage != PPTSLIDEPERSIST_ENTRY_NOTFOUND )
-											{
-												SdPage* pPage = mpDoc->GetSdPage( nPage, PK_STANDARD );
-												if ( pPage )
-												{
-													pSdCustomShow->Insert( pPage, LIST_APPEND );
-													nFound++;
-												}
-											}
-										}
-										if ( nFound )
-											pList->Insert( pSdCustomShow, LIST_APPEND );
-										else
-											delete pSdCustomShow;
-									}
-								}
-							}
-						}
-					}
-				}
-			}
-		}
-		// this is defaulted, maybe there is no SSDocInfoAtom
-		String		aCustomShow;
-		sal_uInt32	nFlags = 1; 				// Bit 0:	Auto advance
-		sal_uInt32	nPenColor = 0x1000000;
-		sal_Int32	nRestartTime = 0x7fffffff;
-		sal_uInt16	nStartSlide = 0;
-		sal_Int16	nEndSlide = 0;
-
-		// read the pres. configuration
-		rStCtrl.Seek( maDocHd.GetRecBegFilePos() + 8 );
-		if ( SeekToRec( rStCtrl, PPT_PST_SSDocInfoAtom, maDocHd.GetRecEndFilePos(), &aCustomShowHeader ) )
-		{
-			rStCtrl >> nPenColor
-					>> nRestartTime
-					>> nStartSlide
-					>> nEndSlide;
-
-			sal_Unicode nChar;
-			for ( UINT32 i2 = 0; i2 < 32; i2++ )
-			{
-				rStCtrl >> nChar;
-				if ( nChar )
-					aCustomShow.Append( nChar );
-				else
-				{
-					rStCtrl.SeekRel( ( 31 - i2 ) << 1 );
-					break;
-				}
-			}
-			rStCtrl >> nFlags;
-		}
-		// set the current custom show
-		if ( aCustomShow.Len() )
-		{
-			void* pPtr;
-			List* pList = mpDoc->GetCustomShowList( FALSE );
-			if ( pList )
-			{
-				for ( pPtr = pList->First(); pPtr; pPtr = pList->Next() )
-				{
-					if ( ((SdCustomShow*)pPtr)->GetName() == aCustomShow )
-						break;
-				}
-				if ( !pPtr )
-					pList->First();
-			}
-		}
-		sd::PresentationSettings& rPresSettings = mpDoc->getPresentationSettings();
-
-		rPresSettings.mbManual = ( nFlags & 1 ) == 0;
-		rPresSettings.mbAnimationAllowed = ( nFlags & 2 ) == 0;
-		rPresSettings.mbAll = ( nFlags & 4 ) == 0;
-		rPresSettings.mbCustomShow = ( nFlags & 8 ) != 0;
-		rPresSettings.mbEndless = ( nFlags & 0x80 ) != 0;
-		rPresSettings.mbFullScreen = ( nFlags & 0x10 ) == 0;
-//		rPresSettings.mnPauseTimeout;
-//		rPresSettings.mbShowLogo;
-		if ( nStartSlide && ( nStartSlide <= GetPageCount() ) )
-		{
-			SdPage* pPage = mpDoc->GetSdPage( nStartSlide - 1, PK_STANDARD );
-			if ( pPage )
-				rPresSettings.maPresPage = pPage->GetName();
-		}
-	}
-
-	delete pStbMgr;
-
-    // read DocumentInfo
-    uno::Reference<document::XDocumentPropertiesSupplier> xDPS(
-        mpDoc->GetObjectShell()->GetModel(), uno::UNO_QUERY_THROW);
-    uno::Reference<document::XDocumentProperties> xDocProps
-        = xDPS->getDocumentProperties();
-    sfx2::LoadOlePropertySet(xDocProps, &mrStorage);
-    xDocProps->setTemplateName(::rtl::OUString());
-
-	pSdrModel->setLock( sal_False );
-	return bOk;
-}
-
-void ImplSdPPTImport::SetHeaderFooterPageSettings( SdPage* pPage, const PptSlidePersistEntry* pMasterPersist )
-{
-	sal_uInt32 i;
-	PptSlidePersistList* pList = GetPageList( eAktPageKind );
-	if ( ( !pList ) || ( pList->Count() <= nAktPageNum ) )
-		return;
-	PptSlidePersistEntry& rSlidePersist = *(*pList)[ nAktPageNum ];
-	HeaderFooterEntry* pHFE = rSlidePersist.pHeaderFooterEntry;
-	if ( pHFE )
-	{
-		for ( i = 0; i < 4; i++ )
-		{
-			bool bVisible = pHFE->IsToDisplay( i );
-			if ( ( eAktPageKind == PPT_SLIDEPAGE )
-				&& ( rSlidePersist.aSlideAtom.aLayout.eLayout == PPT_LAYOUT_TITLESLIDE )
-					&& ( aDocAtom.bTitlePlaceholdersOmitted == TRUE ) )
-			{
-				bVisible = sal_False;
-			}
-			if ( bVisible && pMasterPersist )
-			{
-				sal_uInt32 nPosition = pHFE->NeedToImportInstance( i, rSlidePersist );
-				if ( nPosition )
-				{
-					Rectangle aEmpty;
-					bVisible = sal_False;
-					rStCtrl.Seek( nPosition );
-					ProcessData aProcessData( rSlidePersist, (SdPage*)pPage );
-					SdrObject* pObj = ImportObj( rStCtrl, (void*)&aProcessData, aEmpty, aEmpty );
-					if ( pObj )
-						pPage->NbcInsertObject( pObj, 0 );
-				}
-			}
-			String aPlaceHolderString;
-			if ( pHFE->pPlaceholder )
-				aPlaceHolderString = pHFE->pPlaceholder[ i ];
-
-			sd::HeaderFooterSettings rHeaderFooterSettings( pPage->getHeaderFooterSettings() );
-			switch( i )
-			{
-				case 0 :
-				{
-					rHeaderFooterSettings.mbDateTimeVisible = bVisible;
-					rHeaderFooterSettings.mbDateTimeIsFixed = ( pHFE->nAtom & 0x20000 ) == 0;
-					rHeaderFooterSettings.maDateTimeText = aPlaceHolderString;
-					SvxDateFormat eDateFormat;
-					SvxTimeFormat eTimeFormat;
-					PPTFieldEntry::GetDateTime( pHFE->nAtom & 0xff, eDateFormat, eTimeFormat );
-					rHeaderFooterSettings.meDateTimeFormat = eDateFormat | ( eTimeFormat << 4 );
-				}
-				break;
-				case 1 :
-				{
-					rHeaderFooterSettings.mbHeaderVisible = bVisible;
-					rHeaderFooterSettings.maHeaderText = aPlaceHolderString;
-				}
-				break;
-				case 2 :
-				{
-					rHeaderFooterSettings.mbFooterVisible = bVisible;
-					rHeaderFooterSettings.maFooterText = aPlaceHolderString;
-				}
-				break;
-				case 3 :
-				{
-					rHeaderFooterSettings.mbSlideNumberVisible = bVisible;
-				}
-				break;
-			}
-			pPage->setHeaderFooterSettings( rHeaderFooterSettings );
-		}
-	}
-}
-
-//////////////////////////////////////////////////////////////////////////
-//
-// Import von Seiten
-//
-//////////////////////////////////////////////////////////////////////////
-
-struct Ppt97AnimationStlSortHelper
-{
-	bool operator()( const std::pair< SdrObject*, Ppt97AnimationPtr >& p1, const std::pair< SdrObject*, Ppt97AnimationPtr >& p2 );
-};
-
-bool Ppt97AnimationStlSortHelper::operator()( const std::pair< SdrObject*, Ppt97AnimationPtr >& p1, const std::pair< SdrObject*, Ppt97AnimationPtr >& p2 )
-{
-    if( !p1.second.get() || !p2.second.get() )
-        return true;
-    if( *p1.second < *p2.second )
-        return true;
-    if( *p1.second > *p2.second )
-        return false;
-    if( p1.first->GetOrdNum() < p2.first->GetOrdNum() )
-        return true;
-    return false;
-}
-
-void ImplSdPPTImport::ImportPageEffect( SdPage* pPage, const sal_Bool bNewAnimationsUsed )
-{
-	ULONG nFilePosMerk = rStCtrl.Tell();
-
-	// PageKind an der Seite setzen (bisher nur PK_STANDARD oder PK_NOTES)
-	if ( pPage->GetPageKind() == PK_STANDARD )
-	{
-		PptSlidePersistList* pPersistList = GetPageList( eAktPageKind );
-		PptSlidePersistEntry* pActualSlidePersist = ( pPersistList && ( nAktPageNum < pPersistList->Count() ) )
-														? (*pPersistList)[ nAktPageNum ] : NULL;
-
-		if ( pActualSlidePersist && ( eAktPageKind == PPT_SLIDEPAGE ) )
-		{
-			if ( ! ( pActualSlidePersist->aSlideAtom.nFlags & 1 ) )	// do not follow master objects ?
-			{
-				if(pPage->TRG_HasMasterPage())
-				{
-					SetOfByte aVisibleLayers = pPage->TRG_GetMasterPageVisibleLayers();
-					aVisibleLayers.Set(mnBackgroundObjectsLayerID, FALSE);
-					pPage->TRG_SetMasterPageVisibleLayers(aVisibleLayers);
-				}
-			}
-		}
-		DffRecordHeader aPageRecHd;
-		if ( pPage && SeekToAktPage( &aPageRecHd ) )
-		{
-			ULONG nPageRecEnd = aPageRecHd.GetRecEndFilePos();
-
-			BOOL bTryTwice = ( eAktPageKind == PPT_SLIDEPAGE );
-			BOOL bSSSlideInfoAtom = FALSE;
-			while ( TRUE )
-			{
-				while ( ( rStCtrl.GetError() == 0 ) && ( rStCtrl.Tell() < nPageRecEnd ) )
-				{
-					DffRecordHeader aHd;
-					rStCtrl >> aHd;
-					switch ( aHd.nRecType )
-					{
-						case PPT_PST_SSSlideInfoAtom:
-						{
-							bSSSlideInfoAtom = TRUE;
-							if ( eAktPageKind == PPT_MASTERPAGE )
-							{
-								if ( pActualSlidePersist )
-									pActualSlidePersist->aPersistAtom.nReserved = aHd.GetRecBegFilePos();
-							}
-							else
-							{
-								sal_Int8    nDirection, nTransitionType, nByteDummy, nSpeed;
-                                sal_Int16   nBuildFlags;
-								sal_Int32   nSlideTime, nSoundRef;
-								rStCtrl >> nSlideTime			// Standzeit (in Ticks)
-										>> nSoundRef			// Index in SoundCollection
-										>> nDirection			// Richtung des Ueberblendeffekts
-										>> nTransitionType		// Ueberblendeffekt
-										>> nBuildFlags			// Buildflags (s.u.)
-										>> nSpeed				// Geschwindigkeit (langsam, mittel, schnell)
-										>> nByteDummy >> nByteDummy >> nByteDummy;
-
-								switch ( nTransitionType )
-								{
-									case PPT_TRANSITION_TYPE_BLINDS :
-									{
-										if ( nDirection == 0 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_VERTICAL_STRIPES );// Vertikal blenden
-										else if ( nDirection == 1 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_HORIZONTAL_STRIPES );// Horizontal blenden
-									}
-									break;
-									case PPT_TRANSITION_TYPE_CHECKER :
-									{
-										if ( nDirection == 0 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_HORIZONTAL_CHECKERBOARD );// Vertikal versetzt einblenden ??
-										else if ( nDirection == 1 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_VERTICAL_CHECKERBOARD );// Horizontal versetzt einblenden ??
-									}
-									break;
-									case PPT_TRANSITION_TYPE_COVER :
-									{
-										if ( nDirection == 0 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_RIGHT );		// Von rechts ueberdecken
-										else if ( nDirection == 1 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_BOTTOM );	// Von unten ueberdecken
-										else if ( nDirection == 2 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_LEFT );		// Von links ueberdecken
-										else if ( nDirection == 3 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_TOP );		// Von oben ueberdecken
-										else if ( nDirection == 4 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_LOWERRIGHT );// Von rechts unten ueberdecken ??
-										else if ( nDirection == 5 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_LOWERLEFT );	// Von links unten ueberdecken ??
-										else if ( nDirection == 6 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_UPPERRIGHT );// Von rechts oben ueberdecken
-										else if ( nDirection == 7 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_MOVE_FROM_UPPERLEFT );	// Von links oben ueberdecken ??
-									}
-									break;
-									case PPT_TRANSITION_TYPE_NONE :
-									{
-										if ( nBuildFlags )
-										{
-											if ( nDirection == 0 )
-												pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_NONE );				// Direkt
-											else if ( nDirection == 1 )
-                                            {
-                                                pPage->setTransitionType( animations::TransitionType::BARWIPE );
-                                                pPage->setTransitionSubtype( animations::TransitionSubType::FADEOVERCOLOR );
-                                                pPage->setTransitionFadeColor( 0 );
-                                            }
-										}
-										else
-											pPage->setTransitionType( 0 );
-									}
-									break;
-									case PPT_TRANSITION_TYPE_DISSOLVE :
-										pPage->SetFadeEffect(::com::sun::star::presentation::FadeEffect_DISSOLVE);					// Aufloesen
-									break;
-									case PPT_TRANSITION_TYPE_RANDOM_BARS :
-									{
-										if ( nDirection == 0 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_HORIZONTAL_LINES );	// Horizontale Linien
-										else if ( nDirection == 1 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_VERTICAL_LINES );		// Vertikale Linien
-									}
-									break;
-									case PPT_TRANSITION_TYPE_SPLIT :
-									{
-										if ( nDirection == 0 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_OPEN_VERTICAL );	// Horizontal oeffnen
-										else if ( nDirection == 1 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_CLOSE_VERTICAL );	// Horizontal schliessen
-										else if ( nDirection == 2 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_OPEN_HORIZONTAL ); // Vertikal oeffnen
-										else if ( nDirection == 3 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_CLOSE_HORIZONTAL );// Vertikal schliessen
-									}
-									break;
-									case PPT_TRANSITION_TYPE_STRIPS :
-									{
-										if ( nDirection == 4 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_LOWERRIGHT );// Diagonal nach links oben
-										else if ( nDirection == 5 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_LOWERLEFT ); // Diagonal nach rechts oben
-										else if ( nDirection == 6 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_UPPERRIGHT );// Diagonal nach links unten
-										else if ( nDirection == 7 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_UPPERLEFT ); // Diagonal nach rechts unten
-									}
-									break;
-									case PPT_TRANSITION_TYPE_PULL :
-									{
-										if ( nDirection == 0 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_LEFT );		// Nach links aufdecken
-										else if ( nDirection == 1 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_TOP );		// Nach oben aufdecken
-										else if ( nDirection == 2 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_RIGHT );	// Nach rechts aufdecken
-										else if ( nDirection == 3 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_BOTTOM );	// Nach unten aufdecken
-										else if ( nDirection == 4 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_UPPERLEFT );// Nach links oben aufdecken
-										else if ( nDirection == 5 )
-                                        	pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_UPPERRIGHT );// Nach rechts oben aufdecken
-										else if ( nDirection == 6 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_LOWERLEFT );// Nach links unten aufdecken
-										else if ( nDirection == 7 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_UNCOVER_TO_LOWERRIGHT );// Nach rechts unten aufdecken
-									}
-									break;
-									case PPT_TRANSITION_TYPE_WIPE :
-									{
-										if ( nDirection == 0 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_RIGHT ); // Von rechts rollen
-										else if ( nDirection == 1 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_BOTTOM );// Von unten rollen
-										else if ( nDirection == 2 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_LEFT );	// Von links rollen
-										else if ( nDirection == 3 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_TOP );	// Von oben rollen
-									}
-									break;
-									case PPT_TRANSITION_TYPE_RANDOM :
-										pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_RANDOM );				// Automatisch
-									break;
-									case PPT_TRANSITION_TYPE_FADE :
-									{
-										pPage->setTransitionType( animations::TransitionType::FADE );
-										pPage->setTransitionSubtype( animations::TransitionSubType::FADEOVERCOLOR );
-										pPage->setTransitionFadeColor( 0 );
-									}
-									break;
-									case PPT_TRANSITION_TYPE_ZOOM :
-									{
-										if ( nDirection == 0 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_FROM_CENTER );// Von innen einblenden
-										else if ( nDirection == 1 )
-											pPage->SetFadeEffect( ::com::sun::star::presentation::FadeEffect_FADE_TO_CENTER );	// Von aussen einblenden
-									}
-									break;
-									case PPT_TRANSITION_TYPE_DIAMOND :
-									{
-										pPage->setTransitionType( animations::TransitionType::IRISWIPE );
-										pPage->setTransitionSubtype( animations::TransitionSubType::DIAMOND );
-									}
-									break;
-									case PPT_TRANSITION_TYPE_PLUS :
-									{
-										pPage->setTransitionType( animations::TransitionType::FOURBOXWIPE );
-										pPage->setTransitionSubtype( animations::TransitionSubType::CORNERSOUT );
-									}
-									break;
-									case PPT_TRANSITION_TYPE_CIRCLE	:
-									{
-										pPage->setTransitionType( animations::TransitionType::ELLIPSEWIPE );
-										pPage->setTransitionSubtype( animations::TransitionSubType::CIRCLE );
-									}
-									break;
-									case PPT_TRANSITION_TYPE_WEDGE :
-									{
-										pPage->setTransitionType( animations::TransitionType::FANWIPE );
-										pPage->setTransitionSubtype( animations::TransitionSubType::CENTERTOP );
-									}
-									break;
-									case PPT_TRANSITION_TYPE_WHEEL :
-									{
-										pPage->setTransitionType( animations::TransitionType::PINWHEELWIPE );
-										sal_Int16 nSubType;
-										switch( nDirection )
-										{
-											default:
-											case 1 : nSubType = animations::TransitionSubType::ONEBLADE; break;
-											case 2 : nSubType = animations::TransitionSubType::TWOBLADEVERTICAL; break;
-											case 3 : nSubType = animations::TransitionSubType::THREEBLADE; break;
-											case 4 : nSubType = animations::TransitionSubType::FOURBLADE; break;
-											case 8 : nSubType = animations::TransitionSubType::EIGHTBLADE; break;
-										}
-										pPage->setTransitionSubtype( nSubType );
-									}
-									break;
-									case PPT_TRANSITION_TYPE_PUSH :
-									{
-										pPage->setTransitionType( animations::TransitionType::PUSHWIPE );
-										sal_Int16 nSubType;
-										switch( nDirection )
-										{
-											default:
-											case 0 : nSubType = animations::TransitionSubType::FROMRIGHT; break;
-											case 1 : nSubType = animations::TransitionSubType::FROMBOTTOM; break;
-											case 2 : nSubType = animations::TransitionSubType::FROMLEFT; break;
-											case 3 : nSubType = animations::TransitionSubType::FROMTOP; break;
-										}
-										pPage->setTransitionSubtype( nSubType );
-									}
-									break;
-									case PPT_TRANSITION_TYPE_COMB :
-									{
-										pPage->setTransitionType( animations::TransitionType::PUSHWIPE );
-										pPage->setTransitionSubtype( nDirection ? animations::TransitionSubType::COMBVERTICAL : animations::TransitionSubType::COMBHORIZONTAL );
-									}
-									break;
-									case PPT_TRANSITION_TYPE_NEWSFLASH :
-									{
-										pPage->setTransitionType( animations::TransitionType::ZOOM );
-										pPage->setTransitionSubtype( animations::TransitionSubType::ROTATEIN );
-									}
-									break;
-									case PPT_TRANSITION_TYPE_SMOOTHFADE :
-									{
-										pPage->setTransitionType( animations::TransitionType::FADE );
-										pPage->setTransitionSubtype( animations::TransitionSubType::CROSSFADE );
-									}
-									break;
-								}
-
-								if ( nSpeed == 0 )
-									pPage->setTransitionDuration( 3.0 );	 	// langsam
-								else if ( nSpeed == 1 )
-									pPage->setTransitionDuration( 2.0 );	// mittel
-								else if ( nSpeed == 2 )
-									pPage->setTransitionDuration( 1.0 ); 	// schnell
-
-                                if ( nBuildFlags & 0x400 )                      // slidechange by time
-                                {   // Standzeit (in Ticks)
-									pPage->SetPresChange( PRESCHANGE_AUTO );
-									pPage->SetTime( nSlideTime / 1000 );
-                                }
-                                else
-                                    pPage->SetPresChange( mePresChange );
-
-//								if ( nBuildFlags & 1 )                          // slidechange by mouseclick
-//									pPage->SetPresChange( mePresChange );
-
-								if ( nBuildFlags & 4 )
-									pPage->SetExcluded( TRUE ); 				// Dia nicht anzeigen
-								if ( nBuildFlags & 16 )
-								{	// Dia mit Soundeffekt
-									pPage->SetSound( TRUE );
-									String aSoundFile( ReadSound( nSoundRef ) );
-									pPage->SetSoundFile( aSoundFile );
-								}
-								if ( nBuildFlags & ( 1 << 6 ) ) 	// Loop until next sound
-									pPage->SetLoopSound( sal_True );
-								if ( nBuildFlags & ( 1 << 8 ) ) 	// Stop the previous sound
-									pPage->SetStopSound( sal_True );
-								break;
-							}
-						}
-					}
-					aHd.SeekToEndOfRecord( rStCtrl );
-				}
-				if ( bTryTwice && ( bSSSlideInfoAtom == FALSE ) )
-				{
-					bTryTwice = FALSE;
-					if ( HasMasterPage( nAktPageNum, eAktPageKind ) )
-					{
-						USHORT nMasterNum = GetMasterPageIndex( nAktPageNum, eAktPageKind );
-						PptSlidePersistList* pPageList = GetPageList( PPT_MASTERPAGE );
-						if ( pPageList && ( nMasterNum < pPageList->Count() ) )
-						{
-							PptSlidePersistEntry* pE = (*pPageList)[ nMasterNum ];
-							if ( pE )
-							{
-								UINT32 nOfs = pE->aPersistAtom.nReserved;
-								if ( nOfs )
-								{
-									rStCtrl.Seek( nOfs );
-									nPageRecEnd = nOfs + 16;
-									continue;
-								}
-							}
-						}
-
-					}
-				}
-				break;
-			}
-		}
-	}
-
-	if ( !bNewAnimationsUsed )
-	{
-		tAnimationVector aAnimationsOnThisPage;
-
-		// add effects from page in correct order
-		SdrObjListIter aSdrIter( *pPage, IM_FLAT );
-		while ( aSdrIter.IsMore() )
-		{
-			SdrObject* pObj = aSdrIter.Next();
-            tAnimationMap::iterator aFound = maAnimations.find( pObj );
-            if( aFound != maAnimations.end() )
-			{
-				std::pair< SdrObject*, Ppt97AnimationPtr > aPair( (*aFound).first, (*aFound).second );
-                aAnimationsOnThisPage.push_back( aPair );
-			}
-		}
-
-		Ppt97AnimationStlSortHelper aSortHelper;
-		std::sort( aAnimationsOnThisPage.begin(), aAnimationsOnThisPage.end(), aSortHelper );
-
-		tAnimationVector::iterator aIter( aAnimationsOnThisPage.begin() );
-		const tAnimationVector::iterator aEnd( aAnimationsOnThisPage.end() );
-
-		for( ;aIter != aEnd; aIter++ )
-		{
-			Ppt97AnimationPtr pPpt97Animation = (*aIter).second;;
-            if( pPpt97Animation.get() )
-                pPpt97Animation->createAndSetCustomAnimationEffect( (*aIter).first );
-		}
-	}
-	rStCtrl.Seek( nFilePosMerk );
-}
-
-//////////////////////////////////////////////////////////////////////////
-//
-// Import von Sounds
-//
-// Die Sounds werden nicht nur als String importiert sondern auch
-// in die Gallery einefuegt, falls dort noch nicht vorhanden.
-//
-///////////////////////////////////////////////////////////////////////////
-
-String ImplSdPPTImport::ReadSound(UINT32 nSoundRef) const
-{
-	String aRetval;
-    UINT32 nPosMerk = rStCtrl.Tell();
-    DffRecordHeader aDocHd;
-    if ( SeekToDocument( &aDocHd ) )
-	{
-        UINT32 nSoundLen = aDocHd.GetRecEndFilePos();
-	    DffRecordHeader aSoundBlockRecHd;
-        if( SeekToRec( rStCtrl, PPT_PST_SoundCollection, nSoundLen, &aSoundBlockRecHd ) )
-		{
-	        UINT32 nDataLen = aSoundBlockRecHd.GetRecEndFilePos();
-		    DffRecordHeader aSoundRecHd;
-			BOOL bRefStrValid = FALSE;
-			BOOL bDone = FALSE;
-
-			while( !bDone && SeekToRec( rStCtrl, PPT_PST_Sound, nDataLen, &aSoundRecHd ) )
-			{
-				UINT32 nStrLen = aSoundRecHd.GetRecEndFilePos();
-				String aRefStr;
-			    UINT32 nPosMerk2 = rStCtrl.Tell();
-				if ( SeekToRec( rStCtrl, PPT_PST_CString, nStrLen, NULL, 2 ) )
-				{
-					if ( ReadString( aRefStr ) )
-						bRefStrValid = TRUE;
-				}
-				if ( bRefStrValid )
-				{
-					if ( UniString::CreateFromInt32( nSoundRef ) == aRefStr )
-					{
-						rStCtrl.Seek( nPosMerk2 );
-						if ( SeekToRec( rStCtrl, PPT_PST_CString, nStrLen, NULL, 0 ) )
-						{
-							ReadString( aRetval );
-							bDone = TRUE;
-						}
-					}
-				}
-				if ( bDone )
-				{
-					// ueberpruefen, ob diese Sound-Datei schon
-					// existiert. Wenn nicht, exportiere diese
-					// in unser lokales Sound-Verzeichnis.
-					BOOL	bSoundExists = FALSE;
-					List*	pSoundList = new List();
-
-					GalleryExplorer::FillObjList( GALLERY_THEME_SOUNDS, *pSoundList );
-					GalleryExplorer::FillObjList( GALLERY_THEME_USERSOUNDS, *pSoundList );
-
-					for( ULONG n = 0; ( n < pSoundList->Count() ) && !bSoundExists; n++ )
-					{
-						INetURLObject	aURL( *(String*)pSoundList->GetObject( n ) );
-						String			aSoundName( aURL.GetName() );
-
-						if( aSoundName == aRetval )
-						{
-							aRetval = *(String*)pSoundList->GetObject( n );
-							bSoundExists = TRUE;
-						}
-					}
-
-					for ( void* pPtr = pSoundList->First(); pPtr; pPtr = pSoundList->Next() )
-						delete (String*)pPtr;
-
-					delete pSoundList;
-
-					if ( !bSoundExists )
-					{
-						rStCtrl.Seek( nPosMerk2 );
-						DffRecordHeader aSoundDataRecHd;
-						if ( SeekToRec( rStCtrl, PPT_PST_SoundData, nStrLen, &aSoundDataRecHd, 0 ) )
-						{
-							String			aGalleryDir( SvtPathOptions().GetGalleryPath() );
-							INetURLObject	aGalleryUserSound( aGalleryDir.GetToken( aGalleryDir.GetTokenCount( ';' ) - 1 ) );
-
-							aGalleryUserSound.Append( aRetval );
-							UINT32 nSoundDataLen = aSoundDataRecHd.nRecLen;
-							UINT8* pBuf = new UINT8[ nSoundDataLen ];
-
-							rStCtrl.Read( pBuf, nSoundDataLen );
-							SvStream* pOStm = ::utl::UcbStreamHelper::CreateStream( aGalleryUserSound.GetMainURL( INetURLObject::NO_DECODE ), STREAM_WRITE | STREAM_TRUNC );
-
-							if( pOStm )
-							{
-								pOStm->Write( pBuf, nSoundDataLen );
-
-								if( pOStm->GetError() == ERRCODE_NONE )
-								{
-									GalleryExplorer::InsertURL( GALLERY_THEME_USERSOUNDS, aGalleryUserSound.GetMainURL( INetURLObject::NO_DECODE ) );
-									aRetval = aGalleryUserSound.GetMainURL( INetURLObject::NO_DECODE );
-								}
-
-								delete pOStm;
-							}
-
-							delete[] pBuf;
-						}
-					}
-				}
-				if ( !bDone )
-					aSoundRecHd.SeekToEndOfRecord( rStCtrl );
-			}
-        }
-    }
-    rStCtrl.Seek( nPosMerk );
-	return aRetval;
-}
-
-//////////////////////////////////////////////////////////////////////////
-//
-// media object import, the return value is the url to the media object
-//
-//////////////////////////////////////////////////////////////////////////
-
-String ImplSdPPTImport::ReadMedia( sal_uInt32 nMediaRef ) const
-{
-	String aRetVal;
-	DffRecordHeader* pHd( const_cast<ImplSdPPTImport*>(this)->aDocRecManager.GetRecordHeader( PPT_PST_ExObjList, SEEK_FROM_BEGINNING ) );
-	if ( pHd )
-	{
-		pHd->SeekToContent( rStCtrl );
-		while ( ( rStCtrl.Tell() < pHd->GetRecEndFilePos() ) && !aRetVal.Len() )
-		{
-			DffRecordHeader aHdMovie;
-			rStCtrl >> aHdMovie;
-			switch( aHdMovie.nRecType )
-			{
-				case PPT_PST_ExAviMovie :
-				case PPT_PST_ExMCIMovie :
-				{
-					DffRecordHeader aExVideoHd;
-					if ( SeekToRec( rStCtrl, PPT_PST_ExVideo, aHdMovie.GetRecEndFilePos(), &aExVideoHd ) )
-					{
-						DffRecordHeader aExMediaAtomHd;
-						if ( SeekToRec( rStCtrl, PPT_PST_ExMediaAtom, aExVideoHd.GetRecEndFilePos(), &aExMediaAtomHd ) )
-						{
-							sal_uInt32 nRef;
-							rStCtrl >> nRef;
-							if ( nRef == nMediaRef )
-							{
-								aExVideoHd.SeekToContent( rStCtrl );
-								while( rStCtrl.Tell() < aExVideoHd.GetRecEndFilePos() )
-								{
-									DffRecordHeader aHd;
-									rStCtrl >> aHd;
-									switch( aHd.nRecType )
-									{
-										case PPT_PST_CString :
-										{
-											aHd.SeekToBegOfRecord( rStCtrl );
-											String aStr;
-											if ( ReadString( aStr ) )
-											{
-												if( ::utl::LocalFileHelper::ConvertPhysicalNameToURL( aStr, aRetVal ) )
-												{
-													aRetVal = INetURLObject( aRetVal ).GetMainURL( INetURLObject::DECODE_UNAMBIGUOUS );
-												}
-											}
-										}
-										break;
-									}
-									aHd.SeekToEndOfRecord( rStCtrl );
-								}
-								break;
-							}
-						}
-					}
-				}
-				break;
-			}
-			aHdMovie.SeekToEndOfRecord( rStCtrl );
-		}
-	}
-	return aRetVal;
-}
-
-//////////////////////////////////////////////////////////////////////////
-//
-// Import von Objekten
-//
-//////////////////////////////////////////////////////////////////////////
-
-void ImplSdPPTImport::FillSdAnimationInfo( SdAnimationInfo* pInfo, PptInteractiveInfoAtom* pIAtom, String aMacroName )
-{
-	// Lokale Informationen in pInfo eintragen
-	if( pIAtom->nSoundRef )
-	{
-		pInfo->maBookmark = ReadSound( pIAtom->nSoundRef );	// Pfad zum Soundfile in MSDOS-Notation
-		pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_SOUND;			// RunProgramAction
-	}
-//	if ( nFlags & 0x01 )	// koennen wir nicht ( beim Anklicken markieren )
-	switch ( pIAtom->nAction )
-	{
-//		case 0x01 : 										// MacroAction
-//		{
-//			pInfo->meClickAction = ::com::sun::star::presentation::::com::sun::star::presentation::ClickAction_MACRO;
-//			// aMacro liegt in folgender Form vor:
-//			// "Macroname.Modulname.Libname.Dokumentname" oder
-//			// "Macroname.Modulname.Libname.Applikationsname"
-//			pInfo->maBookmark = aMacroName;
-//		}
-//		break;
-		case 0x02 : 										// RunProgramAction
-		{
-			pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_PROGRAM;
-			pInfo->maBookmark = aMacroName;					// Programmname in aBookmark
-		}
-		break;
-		case 0x03 : 										// JumpAction
-		{
-			switch( pIAtom->nJump )
-			{
-				case 0x01 :
-					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_NEXTPAGE; 		// Next slide
-				break;
-				case 0x02 :
-					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_PREVPAGE; 		// Previous slide
-				break;
-				case 0x03 :
-					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_FIRSTPAGE;		// First slide
-				break;
-				case 0x04 :
-					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_LASTPAGE; 		// last Slide
-				break;
-				case 0x05 :
-					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_PREVPAGE; 		// Last slide viewed
-				break;
-				case 0x06 :
-					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_STOPPRESENTATION; // End show
-				break;
-				default :
-					pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_NONE; 			// 0x00: no action, else unknown
-				break;
-			}
-		}
-		break;
-		case 0x04 :
-		{
-			SdHyperlinkEntry* pPtr;
-			for ( pPtr = (SdHyperlinkEntry*)aHyperList.First(); pPtr; pPtr = (SdHyperlinkEntry*)aHyperList.Next() )
-			{
-				if ( pPtr->nIndex == pIAtom->nExHyperlinkId )
-					break;
-			}
-			if ( pPtr )
-			{
-				switch( pIAtom->nHyperlinkType )
-				{
-					case 9:
-					case 10:
-					break;
-					case 8: 										// hyperlink : URL
-					{
-						if ( pPtr->aTarget.Len() )
-						{
-							pInfo->maBookmark = String( pPtr->aTarget );
-							pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_DOCUMENT;
-						}
-					}
-					break;
-					case 7: 										// hyperlink auf eine Seite
-					{
-						if ( pPtr->aConvSubString.Len() )
-                        {
-							pInfo->maBookmark = pPtr->aConvSubString;
-							pInfo->meClickAction = ::com::sun::star::presentation::ClickAction_BOOKMARK;
-						}
-					}
-					break;
-				}
-			}
-		}
-		break;
-		case 0x05 : 					// OLEAction ( OLEVerb to use, 0==first, 1==secnd, .. )
-		case 0x06 : 					// MediaAction
-		case 0x07 : 					// CustomShowAction
-		default :						// 0x00: no action, else unknown action
-		break;
-	}
-}
-
-SdrObject* ImplSdPPTImport::ApplyTextObj( PPTTextObj* pTextObj, SdrTextObj* pObj, SdPage* pPage,
-										SfxStyleSheet* pSheet, SfxStyleSheet** ppStyleSheetAry ) const
-{
-	SfxStyleSheet*	pStyleSheetAry[ 9 ];
-	SdrTextObj*		pText = pObj;
-	SdrObject*		pRet = pText;
-
-	ppStyleSheetAry = NULL;
-
-	PresObjKind ePresKind = PRESOBJ_NONE;
-	PptOEPlaceholderAtom* pPlaceHolder = pTextObj->GetOEPlaceHolderAtom();
-	String aPresentationText;
-	if ( pPlaceHolder )
-	{
-		switch( pPlaceHolder->nPlaceholderId )
-		{
-			case PPT_PLACEHOLDER_MASTERNOTESSLIDEIMAGE :
-			case PPT_PLACEHOLDER_MASTERCENTEREDTITLE :
-			case PPT_PLACEHOLDER_MASTERTITLE :
-			{
-				ePresKind = PRESOBJ_TITLE;
-				aPresentationText = pPage->GetPresObjText( ePresKind );
-			}
-			break;
-			case PPT_PLACEHOLDER_MASTERBODY	:
-			{
-				ePresKind = PRESOBJ_OUTLINE;
-				aPresentationText = pPage->GetPresObjText( ePresKind );
-			}
-			break;
-			case PPT_PLACEHOLDER_MASTERSUBTITLE :
-			{
-				ePresKind = PRESOBJ_TEXT;
-				aPresentationText = pPage->GetPresObjText( ePresKind );
-			}
-			break;
-			case PPT_PLACEHOLDER_MASTERNOTESBODYIMAGE :
-			{
-				ePresKind = PRESOBJ_NOTES;
-				aPresentationText = pPage->GetPresObjText( ePresKind );
-			}
-			break;
-			case PPT_PLACEHOLDER_MASTERDATE :			ePresKind = PRESOBJ_DATETIME;	break;
-			case PPT_PLACEHOLDER_MASTERSLIDENUMBER :	ePresKind = PRESOBJ_SLIDENUMBER;break;
-			case PPT_PLACEHOLDER_MASTERFOOTER :			ePresKind = PRESOBJ_FOOTER;		break;
-			case PPT_PLACEHOLDER_MASTERHEADER :			ePresKind = PRESOBJ_HEADER;		break;
-		}
-	}
-	switch ( pTextObj->GetDestinationInstance() )
-	{
-		case TSS_TYPE_PAGETITLE :
-		case TSS_TYPE_TITLE :
-		{
-			pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_TITLE );
-			if ( pSheet )
-				((SdrAttrObj*)pText)->SdrAttrObj::NbcSetStyleSheet( pSheet, TRUE );
-			DBG_ASSERT( pSheet, "ImplSdPPTImport::ApplyTextObj -> could not get stylesheet for titleobject (SJ)" );
-		}
-		break;
-		case TSS_TYPE_SUBTITLE :
-		{
-			pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_TEXT );
-			if ( pSheet )
-				((SdrAttrObj*)pText)->SdrAttrObj::NbcSetStyleSheet( pSheet, TRUE );
-			DBG_ASSERT( pSheet, "ImplSdPPTImport::ApplyTextObj -> could not get stylesheet for subtitleobject (SJ)" );
-		}
-		break;
-		case TSS_TYPE_BODY :
-		case TSS_TYPE_HALFBODY :
-		case TSS_TYPE_QUARTERBODY :
-		{
-			for ( UINT16 nLevel = 9; nLevel; nLevel-- )
-			{
-				String aName( pPage->GetLayoutName() );
-				aName.Append( (sal_Unicode)( ' ' ) );
-				aName.Append( String::CreateFromInt32( nLevel ) );
-				pSheet = (SfxStyleSheet*)mpDoc->GetStyleSheetPool()->Find( aName, SD_STYLE_FAMILY_MASTERPAGE );
-				if ( pSheet )
-					pText->StartListening( *pSheet );
-				pStyleSheetAry[ nLevel - 1 ] = pSheet;
-			}
-			DBG_ASSERT( pSheet, "ImplSdPPTImport::ApplyTextObj -> could not get stylesheet for outlinerobject (SJ)" );
-			if ( pSheet )
-				((SdrAttrObj*)pText)->SdrAttrObj::NbcSetStyleSheet( pSheet, TRUE );
-			ppStyleSheetAry = &pStyleSheetAry[ 0 ];
-		}
-		break;
-		case TSS_TYPE_NOTES :
-		{
-			if ( pPlaceHolder && ( ( pPlaceHolder->nPlaceholderId == PPT_PLACEHOLDER_NOTESSLIDEIMAGE )
-				|| ( pPlaceHolder->nPlaceholderId == PPT_PLACEHOLDER_MASTERNOTESSLIDEIMAGE ) ) )
-			{
-				pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_TITLE );
-				if ( pSheet )
-					((SdrAttrObj*)pText)->SdrAttrObj::NbcSetStyleSheet( pSheet, TRUE );
-				DBG_ASSERT( pSheet, "ImplSdPPTImport::ApplyTextObj -> could not get stylesheet for titleobject (SJ)" );
-			}
-			else
-			{
-				pSheet = pPage->GetStyleSheetForPresObj( PRESOBJ_NOTES );
-				DBG_ASSERT( pSheet, "ImplSdPPTImport::ApplyTextObj -> could not get stylesheet for notesobj (SJ)" );
-				if ( pSheet )
-					((SdrAttrObj*)pText)->SdrAttrObj::NbcSetStyleSheet( pSheet, TRUE );
-			}
-		}
-		break;
-		case TSS_TYPE_UNUSED :
-		case TSS_TYPE_TEXT_IN_SHAPE :
-		{
-			switch( ePresKind )
-			{
-				case PRESOBJ_DATETIME :
-				case PRESOBJ_SLIDENUMBER :
-				case PRESOBJ_FOOTER :
-				case PRESOBJ_HEADER :
-					pSheet = (SfxStyleSheet*)mpDoc->GetStyleSheetPool()->Find( String(SdResId( STR_PSEUDOSHEET_BACKGROUNDOBJECTS )), SD_STYLE_FAMILY_PSEUDO );
-				break;
-				default :
-					pSheet = (SfxStyleSheet*)mpDoc->GetStyleSheetPool()->Find( String(SdResId( STR_STANDARD_STYLESHEET_NAME )), SD_STYLE_FAMILY_GRAPHICS );
-			}
-		}
-		break;
-	}
-	pText = (SdrTextObj*)SdrPowerPointImport::ApplyTextObj( pTextObj, pText, pPage, pSheet, ppStyleSheetAry );
-	if ( pPlaceHolder && pPlaceHolder->nPlaceholderId )
-	{
-		if ( eAktPageKind == PPT_MASTERPAGE )
-		{
-			sal_Bool bCreatePlaceHolder = ( pTextObj->GetInstance() != TSS_TYPE_SUBTITLE ) && ( pTextObj->GetInstance() != TSS_TYPE_UNUSED );
-			sal_Bool bIsHeaderFooter = ( ePresKind == PRESOBJ_HEADER) || (ePresKind == PRESOBJ_FOOTER)
-										|| (ePresKind == PRESOBJ_DATETIME) || (ePresKind == PRESOBJ_SLIDENUMBER);
-			if ( bCreatePlaceHolder && ( pTextObj->GetInstance() == TSS_TYPE_TEXT_IN_SHAPE ) )
-				bCreatePlaceHolder = bIsHeaderFooter;
-			if ( bCreatePlaceHolder )
-			{
-				if ( !bIsHeaderFooter )
-				{
-					pText->SetNotVisibleAsMaster( TRUE );
-					pText->SetEmptyPresObj( TRUE );
-				}
-				pText->SetUserCall( pPage );
-				pPage->InsertPresObj( pText, ePresKind );
-				SdrOutliner* pOutl = NULL;
-				if ( pTextObj->GetInstance() == TSS_TYPE_NOTES )
-					pOutl = GetDrawOutliner( pText );
-				if ( aPresentationText.Len() )
-					pPage->SetObjText( (SdrTextObj*)pText, pOutl, ePresKind, aPresentationText );
-
-				SfxStyleSheet* pSheet2( pPage->GetStyleSheetForPresObj( ePresKind ) );
-				if ( pSheet2 )
-				{
-					SfxItemSet& rItemSet = pSheet2->GetItemSet();
-					rItemSet.Put( (SdrTextLeftDistItem&)pText->GetMergedItem( SDRATTR_TEXT_LEFTDIST ) );
-					rItemSet.Put( (SdrTextRightDistItem&)pText->GetMergedItem( SDRATTR_TEXT_RIGHTDIST ) );
-					rItemSet.Put( (SdrTextUpperDistItem&)pText->GetMergedItem( SDRATTR_TEXT_UPPERDIST ) );
-					rItemSet.Put( (SdrTextLowerDistItem&)pText->GetMergedItem( SDRATTR_TEXT_LOWERDIST ) );
-				}
-				pText->NbcSetStyleSheet( pSheet2, TRUE );
-
-				SfxItemSet aTempAttr( mpDoc->GetPool() );
-				SdrTextMinFrameHeightItem aMinHeight( pText->GetLogicRect().GetSize().Height() );
-				aTempAttr.Put( aMinHeight );
-				SdrTextAutoGrowHeightItem aAutoGrowHeight( FALSE );
-				aTempAttr.Put( aAutoGrowHeight );
-				pText->SetMergedItemSet(aTempAttr);
-			}
-			else
-			{
-				pRet = NULL;
-			}
-		}
-		else
-		{
-			const PptSlideLayoutAtom* pSlideLayout = GetSlideLayoutAtom();
-			if ( pSlideLayout || ( eAktPageKind == PPT_NOTEPAGE ) )
-			{
-				INT16 nPlaceholderId = pPlaceHolder->nPlaceholderId;
-				UINT16 i = 0;
-				if ( eAktPageKind == PPT_SLIDEPAGE )
-				{
-					for ( ; i < 8; i++ )
-					{
-						if ( pSlideLayout->aPlaceholderId[ i ] == nPlaceholderId )
-							break;
-					}
-				}
-				if ( i < 8 )
-				{
-					PresObjKind ePresObjKind = PRESOBJ_NONE;
-					sal_Bool    bEmptyPresObj = sal_True;
-                    sal_Bool    bVertical = sal_False;
-					if ( ( pTextObj->GetShapeType() == mso_sptRectangle ) || ( pTextObj->GetShapeType() == mso_sptTextBox ) )
-					{
-						if ( pTextObj->Count() )
-							bEmptyPresObj = sal_False;
-						switch ( nPlaceholderId )
-						{
-							case PPT_PLACEHOLDER_NOTESBODY :	        ePresObjKind = PRESOBJ_NOTES;	break;
-                            case PPT_PLACEHOLDER_VERTICALTEXTTITLE :
-                                bVertical = sal_True;   // PASSTHROUGH !!!
-							case PPT_PLACEHOLDER_TITLE :		        ePresObjKind = PRESOBJ_TITLE;	break;
-                            case PPT_PLACEHOLDER_VERTICALTEXTBODY :
-                                bVertical = sal_True;   // PASSTHROUGH !!!
-							case PPT_PLACEHOLDER_BODY : 		        ePresObjKind = PRESOBJ_OUTLINE; break;
-							case PPT_PLACEHOLDER_CENTEREDTITLE :        ePresObjKind = PRESOBJ_TITLE;	break;
-							case PPT_PLACEHOLDER_SUBTITLE : 	        ePresObjKind = PRESOBJ_TEXT;	break;		// PRESOBJ_OUTLINE
-
-							default :
-							{
-								if ( !pTextObj->Count() )
-								{
-									switch ( nPlaceholderId )
-									{
-										case PPT_PLACEHOLDER_MEDIACLIP :
-										case PPT_PLACEHOLDER_OBJECT : ePresObjKind = PRESOBJ_OBJECT; break;
-										case PPT_PLACEHOLDER_GRAPH : ePresObjKind = PRESOBJ_CHART; break;
-										case PPT_PLACEHOLDER_TABLE : ePresObjKind = PRESOBJ_TABLE; break;
-										case PPT_PLACEHOLDER_CLIPART : ePresObjKind = PRESOBJ_GRAPHIC; break;
-										case PPT_PLACEHOLDER_ORGANISZATIONCHART : ePresObjKind = PRESOBJ_ORGCHART; break;
-									}
-								}
-							};
-						}
-					}
-					else if ( pTextObj->GetShapeType() == mso_sptPictureFrame )
-					{
-						if ( !pTextObj->Count() && pObj->ISA( SdrGrafObj ) )
-						{
-							bEmptyPresObj = sal_False;
-							switch ( nPlaceholderId )
-							{
-								case PPT_PLACEHOLDER_MEDIACLIP :
-								case PPT_PLACEHOLDER_OBJECT : ePresObjKind = PRESOBJ_OBJECT; break;
-								case PPT_PLACEHOLDER_GRAPH : ePresObjKind = PRESOBJ_CHART; break;
-								case PPT_PLACEHOLDER_TABLE : ePresObjKind = PRESOBJ_TABLE; break;
-								case PPT_PLACEHOLDER_CLIPART : ePresObjKind = PRESOBJ_GRAPHIC; break;
-								case PPT_PLACEHOLDER_ORGANISZATIONCHART : ePresObjKind = PRESOBJ_ORGCHART; break;
-							}
-						}
-					}
-					if ( ePresObjKind != PRESOBJ_NONE )
-					{
-						if ( !bEmptyPresObj )
-						{
-							pPage->InsertPresObj( pRet, ePresObjKind );
-						}
-						else
-						{
-							SdrObject* pPresObj = pPage->CreatePresObj( ePresObjKind, bVertical, pText->GetLogicRect(), TRUE );
-							pPresObj->SetUserCall( pPage );
-
-							SfxItemSet aSet( pSdrModel->GetItemPool() );
-							ApplyAttributes( rStCtrl, aSet );
-							pPresObj->SetMergedItemSet(aSet);
-
-							if ( ( eAktPageKind != PPT_NOTEPAGE ) && ( pSlideLayout->aPlacementId[ i ] != (ULONG)-1 ) )
-							{
-								SdrObject* pTitleObj = ((SdPage&)pPage->TRG_GetMasterPage()).GetPresObj( PRESOBJ_TITLE );
-								SdrObject* pOutlineObj = ((SdPage&)pPage->TRG_GetMasterPage()).GetPresObj( PRESOBJ_OUTLINE );
-
-								Rectangle aTitleRect;
-								Rectangle aOutlineRect;
-								Size	  aOutlineSize;
-
-								if ( pTitleObj )
-									aTitleRect = pTitleObj->GetLogicRect();
-								if ( pOutlineObj )
-								{
-									aOutlineRect = pOutlineObj->GetLogicRect();
-									aOutlineSize = aOutlineRect.GetSize();
-								}
-								Rectangle aLogicRect( pPresObj->GetLogicRect() );
-								Size	  aLogicSize( aLogicRect.GetSize() );
-
-								switch ( pSlideLayout->aPlacementId[ i ] )
-								{
-									case 0 :			// Lage im Titelbereich
-									{
-										if ( aLogicRect != aTitleRect )
-											pPresObj->SetUserCall( NULL );
-									}
-									break;
-
-									case 1:
-									{
-										if ( pSlideLayout->eLayout == PPT_LAYOUT_TITLEANDBODYSLIDE )
-										{	// Lage im Outlinebereich
-											if ( aLogicRect != aOutlineRect )
-												pPresObj->SetUserCall( NULL );
-										}
-										else if ( pSlideLayout->eLayout == PPT_LAYOUT_2COLUMNSANDTITLE )
-										{	// Lage im Outlinebereich links
-											if (Abs(aLogicRect.Left()	- aOutlineRect.Left())	 > MAX_USER_MOVE ||
-												Abs(aLogicRect.Top()	- aOutlineRect.Top())	 > MAX_USER_MOVE ||
-												Abs(aLogicRect.Bottom() - aOutlineRect.Bottom()) > MAX_USER_MOVE ||
-													aLogicSize.Width()	/ aOutlineSize.Width()	 < 0.48 		 ||
-													aLogicSize.Width()	/ aOutlineSize.Width()	 > 0.5)
-											{
-												pPresObj->SetUserCall(NULL);
-											}
-										}
-										else if ( pSlideLayout->eLayout == PPT_LAYOUT_2ROWSANDTITLE )
-										{	// Lage im Outlinebereich oben
-											if (Abs(aLogicRect.Left()  - aOutlineRect.Left())  > MAX_USER_MOVE ||
-												Abs(aLogicRect.Top()   - aOutlineRect.Top())   > MAX_USER_MOVE ||
-												Abs(aLogicRect.Right() - aOutlineRect.Right()) > MAX_USER_MOVE)
-											{
-												pPresObj->SetUserCall( NULL );
-											}
-										}
-										else if (Abs(aLogicRect.Left() - aOutlineRect.Left()) > MAX_USER_MOVE ||
-												 Abs(aLogicRect.Top()  - aOutlineRect.Top())  > MAX_USER_MOVE)
-										{	// Lage im Outlinebereich links oben
-											pPresObj->SetUserCall( NULL );
-										}
-									}
-									break;
-
-									case 2:
-									{
-										if ( pSlideLayout->eLayout == PPT_LAYOUT_2COLUMNSANDTITLE )
-										{	// Lage im Outlinebereich rechts
-											if (Abs(aLogicRect.Right()	- aOutlineRect.Right())  > MAX_USER_MOVE ||
-												Abs(aLogicRect.Top()	- aOutlineRect.Top())	 > MAX_USER_MOVE ||
-												Abs(aLogicRect.Bottom() - aOutlineRect.Bottom()) > MAX_USER_MOVE ||
-													aLogicSize.Width()	/ aOutlineSize.Width()	 < 0.48 		 ||
-													aLogicSize.Width()	/ aOutlineSize.Width()	 > 0.5)
-											{
-												pPresObj->SetUserCall( NULL );
-											}
-										}
-										else if ( pSlideLayout->eLayout == PPT_LAYOUT_2ROWSANDTITLE )
-										{	// Lage im Outlinebereich unten
-											if (Abs(aLogicRect.Left()	- aOutlineRect.Left())	 > MAX_USER_MOVE ||
-												Abs(aLogicRect.Bottom() - aOutlineRect.Bottom()) > MAX_USER_MOVE ||
-												Abs(aLogicRect.Right()	- aOutlineRect.Right())  > MAX_USER_MOVE)
-											{
-												pPresObj->SetUserCall( NULL );
-											}
-										}
-										else if (Abs(aLogicRect.Right() - aOutlineRect.Right()) > MAX_USER_MOVE ||
-												 Abs(aLogicRect.Top()	- aOutlineRect.Top())	> MAX_USER_MOVE)
-										{	// Lage im Outlinebereich rechts oben
-											pPresObj->SetUserCall(NULL);
-										}
-									}
-									break;
-
-									case 3:
-									{	// Lage im Outlinebereich links unten
-										if (Abs(aLogicRect.Left()	- aOutlineRect.Left())	 > MAX_USER_MOVE ||
-											Abs(aLogicRect.Bottom() - aOutlineRect.Bottom()) > MAX_USER_MOVE)
-										{
-											pPresObj->SetUserCall( NULL );
-										}
-									}
-									break;
-
-									case 4:
-									{	// Lage im Outlinebereich rechts unten
-										if (Abs(aLogicRect.Right() - aOutlineRect.Right())	 > MAX_USER_MOVE ||
-											Abs(aLogicRect.Bottom() - aOutlineRect.Bottom()) > MAX_USER_MOVE)
-										{
-											pObj->SetUserCall( NULL );
-										}
-									}
-									break;
-								}
-							}
-							pRet = NULL;	// return zero cause this obj was already inserted by CreatePresObj
-						}
-					}
-					else if ( !pTextObj->Count() )
-						pRet = NULL;
-				}
-			}
-		}
-	}
-	if ( pRet != pText )
-    {
-        SdrObject* pFree( pText );
-		SdrObject::Free( pFree );
-    }
-	return pRet;
-}
-
-SdrObject* ImplSdPPTImport::ProcessObj( SvStream& rSt, DffObjData& rObjData, void* pData, Rectangle& rTextRect, SdrObject* pRet )
-{
-	SdrObject* pObj = SdrPowerPointImport::ProcessObj( rSt, rObjData, pData, rTextRect, pRet );
-
-	// Animationseffekte des Objektes lesen
-	if ( pObj )
-	{
-		BOOL bInhabitanceChecked = FALSE;
-		BOOL bAnimationInfoFound = FALSE;
-		DffRecordHeader aMasterShapeHd;
-
-		if ( maShapeRecords.SeekToContent( rSt, DFF_msofbtClientData, SEEK_FROM_CURRENT_AND_RESTART ) )
-		{
-			DffRecordHeader& rHdClientData = *maShapeRecords.Current();
-			while( TRUE )
-			{
-				UINT32 nClientDataLen = rHdClientData.GetRecEndFilePos();
-				DffRecordHeader aHd;
-				do
-				{
-					rSt >> aHd;
-					UINT32 nHdRecEnd = aHd.GetRecEndFilePos();
-					switch ( aHd.nRecType )
-					{
-						case PPT_PST_AnimationInfo :
-						{
-							DffRecordHeader aHdAnimInfoAtom;
-							if ( SeekToRec( rSt, PPT_PST_AnimationInfoAtom, nHdRecEnd, &aHdAnimInfoAtom ) )
-							{
-								// read data from stream
-                                Ppt97AnimationPtr pAnimation( new Ppt97Animation( rSt ) );
-                                // store animation informations
-                                if( pAnimation->HasEffect() )
-                                {
-                                    // translate color to RGB
-                                    pAnimation->SetDimColor( MSO_CLR_ToColor(pAnimation->GetDimColor()).GetColor() );
-                                    // translate sound bits to file url
-                                    if( pAnimation->HasSoundEffect() )
-                                        pAnimation->SetSoundFileUrl( ReadSound( pAnimation->GetSoundRef() ) );
-
-								    bool bDontAnimateInvisibleShape = false;
-                                    {
-                                        SdrTextObj* pTextObj = dynamic_cast<SdrTextObj*>(pObj);
-
-                                        if( pTextObj && pTextObj->HasText() &&
-                                            !pObj->ISA( SdrObjGroup ) &&
-                                            pAnimation->HasAnimateAssociatedShape() )
-                                        {
-										    const SfxItemSet& rObjItemSet = pObj->GetMergedItemSet();
-
-				                            XFillStyle eFillStyle = ((XFillStyleItem&)(rObjItemSet.Get(XATTR_FILLSTYLE))).GetValue();
-				                            XLineStyle eLineStyle = ((XLineStyleItem&)(rObjItemSet.Get(XATTR_LINESTYLE))).GetValue();
-
-				                            if ( ( eFillStyle == XFILL_NONE ) && ( eLineStyle == XLINE_NONE ) )
-                                                bDontAnimateInvisibleShape = true;
-                                        }
-                                    }
-                                    if( bDontAnimateInvisibleShape )
-                                        pAnimation->SetAnimateAssociatedShape(false);
-
-                                    //maybe some actions necessary to ensure that animations on master pages are played before animations on normal pages
-                                    ///mabe todo in future: bool bIsEffectOnMasterPage = !bInhabitanceChecked;?
-
-                                    maAnimations[pObj] = pAnimation;
-
-								    bAnimationInfoFound = TRUE;
-                                }
-							}
-						}
-						break;
-						case PPT_PST_InteractiveInfo:
-						{
-							UINT32 nFilePosMerk2 = rSt.Tell();
-							String aMacroName;
-
-							if(SeekToRec( rSt, PPT_PST_CString, nHdRecEnd, NULL, 0 ) )
-								ReadString(aMacroName);
-
-							rSt.Seek( nFilePosMerk2 );
-							DffRecordHeader aHdInteractiveInfoAtom;
-							if ( SeekToRec( rSt, PPT_PST_InteractiveInfoAtom, nHdRecEnd, &aHdInteractiveInfoAtom ) )
-							{
-								PptInteractiveInfoAtom aInteractiveInfoAtom;
-								rSt >> aInteractiveInfoAtom;
-
-								// interactive object
-								SdAnimationInfo* pInfo = SdDrawDocument::GetShapeUserData(*pObj, true);
-
-								( (ImplSdPPTImport*) this )->FillSdAnimationInfo( pInfo, &aInteractiveInfoAtom, aMacroName );
-								if ( aInteractiveInfoAtom.nAction == 6 ) // Sj -> media action
-								{
-									rHdClientData.SeekToContent( rStCtrl );
-									DffRecordHeader aObjRefAtomHd;
-									if ( SeekToRec( rSt, PPT_PST_ExObjRefAtom, nHdRecEnd, &aObjRefAtomHd ) )
-									{
-										sal_uInt32 nRef;
-										rSt >> nRef;
-										String aMediaURL( ReadMedia( nRef ) );
-										if ( !aMediaURL.Len() )
-											aMediaURL = ReadSound( nRef );
-										if ( aMediaURL.Len() )
-										{
-											SdrMediaObj* pMediaObj = new SdrMediaObj( pObj->GetSnapRect() );
-											pMediaObj->SetModel( pObj->GetModel() );
-											pMediaObj->SetMergedItemSet( pObj->GetMergedItemSet() );
-
-                                            //--remove object from maAnimations list and add the new object instead
-                                            Ppt97AnimationPtr pAnimation;
-                                            {
-                                                tAnimationMap::iterator aFound = maAnimations.find( pObj );
-                                                if( aFound != maAnimations.end() )
-                                                {
-                                                    pAnimation = (*aFound).second;
-                                                    maAnimations.erase(aFound);
-                                                }
-                                                maAnimations[pMediaObj] = pAnimation;
-                                            }
-                                            //--
-
-											SdrObject::Free( pObj ), pObj = pMediaObj;	// SJ: hoping that pObj is not inserted in any list
-											pMediaObj->setURL( aMediaURL );
-										}
-									}
-								}
-							}
-						}
-						break;
-					}
-					aHd.SeekToEndOfRecord( rSt );
-				}
-				while( ( rSt.GetError() == 0 ) && ( rSt.Tell() < nClientDataLen ) );
-
-				if ( bInhabitanceChecked || bAnimationInfoFound )
-					break;
-				bInhabitanceChecked = TRUE;
-				if ( ! ( IsProperty( DFF_Prop_hspMaster ) && SeekToShape( rSt, pData, GetPropertyValue( DFF_Prop_hspMaster ) ) ) )
-					break;
-				rSt >> aMasterShapeHd;
-				if ( !SeekToRec( rSt, DFF_msofbtClientData, aMasterShapeHd.GetRecEndFilePos(), &aMasterShapeHd ) )
-					break;
-				aMasterShapeHd.SeekToContent( rSt );
-				rHdClientData = aMasterShapeHd;
-			}
-		}
-	}
-	return pObj;
-}
-
diff --git sd/source/filter/pptin.hxx sd/source/filter/pptin.hxx
index d4b5c04..e69de29 100644
--- sd/source/filter/pptin.hxx
+++ sd/source/filter/pptin.hxx
@@ -1,108 +0,0 @@
-/*************************************************************************
- *
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- * 
- * Copyright 2008 by Sun Microsystems, Inc.
- *
- * OpenOffice.org - a multi-platform office productivity suite
- *
- * $RCSfile: pptin.hxx,v $
- * $Revision: 1.9 $
- *
- * This file is part of OpenOffice.org.
- *
- * OpenOffice.org is free software: you can redistribute it and/or modify
- * it under the terms of the GNU Lesser General Public License version 3
- * only, as published by the Free Software Foundation.
- *
- * OpenOffice.org is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU Lesser General Public License version 3 for more details
- * (a copy is included in the LICENSE file that accompanied this code).
- *
- * You should have received a copy of the GNU Lesser General Public License
- * version 3 along with OpenOffice.org.  If not, see
- * <http://www.openoffice.org/license.html>
- * for a copy of the LGPLv3 License.
- *
- ************************************************************************/
-
-#ifndef _SD_PPTIN_HXX
-#define _SD_PPTIN_HXX
-
-#include <svx/svdfppt.hxx>
-#include <svx/msdffdef.hxx>
-#include <diadef.h>
-#include <svx/svdtypes.hxx>
-#include <svx/msfiltertracer.hxx>
-#include <com/sun/star/uno/Any.h>
-#include <boost/shared_ptr.hpp>
-
-class SdDrawDocument;
-class SfxMedium;
-
-/*************************************************************************
-|*
-|* lokaler Import
-|*
-\************************************************************************/
-
-class SdPage;
-class SdAnimationInfo;
-struct PptInteractiveInfoAtom;
-class Ppt97Animation;
-
-typedef boost::shared_ptr< Ppt97Animation > Ppt97AnimationPtr;
-typedef ::std::map < SdrObject*, Ppt97AnimationPtr > tAnimationMap;
-typedef std::vector< std::pair< SdrObject*, Ppt97AnimationPtr > > tAnimationVector;
-
-class ImplSdPPTImport : public SdrPowerPointImport
-{
-	SfxMedium&		mrMed;
-	SvStorage&		mrStorage;
-//	SvStream*		mpPicStream;
-	DffRecordHeader	maDocHd;
-	List			maSlideNameList;
-	BOOL			mbDocumentFound;
-	sal_uInt32		mnFilterOptions;
-	SdDrawDocument*	mpDoc;
-	PresChange		mePresChange;
-	SdrLayerID		mnBackgroundLayerID;
-	SdrLayerID		mnBackgroundObjectsLayerID;
-
-    tAnimationMap   maAnimations;
-
-	void			SetHeaderFooterPageSettings( SdPage* pPage, const PptSlidePersistEntry* pMasterPersist );
-	void		    ImportPageEffect( SdPage* pPage, const sal_Bool bNewAnimationsUsed );
-
-	void            FillSdAnimationInfo( SdAnimationInfo* pInfo, PptInteractiveInfoAtom* pIAtom, String aMacroName );
-
-	virtual		    SdrObject* ProcessObj( SvStream& rSt, DffObjData& rData, void* pData, Rectangle& rTextRect, SdrObject* pObj );
-	virtual		    SdrObject* ApplyTextObj( PPTTextObj* pTextObj, SdrTextObj* pText, SdPage* pPage,
-											SfxStyleSheet*, SfxStyleSheet** ) const;
-
-public:
-
-    String	        ReadSound( sal_uInt32 nSoundRef ) const;
-	String			ReadMedia( sal_uInt32 nMediaRef ) const;
- 
-	ImplSdPPTImport( SdDrawDocument* pDoc, SvStorage& rStorage, SfxMedium& rMed, PowerPointImportParam& );
-	~ImplSdPPTImport();
-
-	sal_Bool        Import();
-};
-
-class SdPPTImport
-{
-    ImplSdPPTImport* pFilter;
-
-    public:
-
-	    SdPPTImport( SdDrawDocument* pDoc, SvStream& rDocStream, SvStorage& rStorage, SfxMedium& rMed, MSFilterTracer* pTracer = NULL );
-        ~SdPPTImport();
-
-        sal_Bool Import();
-};
-
-#endif // _SD_PPTIN_HXX
diff --git sd/source/filter/propread.cxx sd/source/filter/propread.cxx
index 41de988..e69de29 100644
--- sd/source/filter/propread.cxx
+++ sd/source/filter/propread.cxx
@@ -1,698 +0,0 @@
-/*************************************************************************
- *
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- * 
- * Copyright 2008 by Sun Microsystems, Inc.
- *
- * OpenOffice.org - a multi-platform office productivity suite
- *
- * $RCSfile: propread.cxx,v $
- * $Revision: 1.13 $
- *
- * This file is part of OpenOffice.org.
- *
- * OpenOffice.org is free software: you can redistribute it and/or modify
- * it under the terms of the GNU Lesser General Public License version 3
- * only, as published by the Free Software Foundation.
- *
- * OpenOffice.org is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU Lesser General Public License version 3 for more details
- * (a copy is included in the LICENSE file that accompanied this code).
- *
- * You should have received a copy of the GNU Lesser General Public License
- * version 3 along with OpenOffice.org.  If not, see
- * <http://www.openoffice.org/license.html>
- * for a copy of the LGPLv3 License.
- *
- ************************************************************************/
-
-// MARKER(update_precomp.py): autogen include statement, do not remove
-#include "precompiled_sd.hxx"
-#include <propread.hxx>
-#include <tools/bigint.hxx>
-#include "rtl/tencinfo.h"
-#include "rtl/textenc.h"
-
-// ------------------------------------------------------------------------
-
-struct PropEntry
-{
-	sal_uInt32	mnId;
-	sal_uInt32	mnSize;
-	sal_uInt16	mnTextEnc;
-	sal_uInt8*	mpBuf;
-
-						PropEntry( sal_uInt32 nId, const sal_uInt8* pBuf, sal_uInt32 nBufSize, sal_uInt16 nTextEnc );
-						PropEntry( const PropEntry& rProp );
-						~PropEntry() { delete[] mpBuf; } ;
-
-	const PropEntry&	operator=(const PropEntry& rPropEntry);
-};
-
-PropEntry::PropEntry( sal_uInt32 nId, const sal_uInt8* pBuf, sal_uInt32 nBufSize, sal_uInt16 nTextEnc ) :
-	mnId		( nId ),
-	mnSize		( nBufSize ),
-	mnTextEnc	( nTextEnc ),
-	mpBuf		( new sal_uInt8[ nBufSize ] )
-{
-	memcpy( (void*)mpBuf, (void*)pBuf, nBufSize );
-};
-
-PropEntry::PropEntry( const PropEntry& rProp ) :
-	mnId		( rProp.mnId ),
-	mnSize		( rProp.mnSize ),
-	mnTextEnc	( rProp.mnTextEnc ),
-	mpBuf		( new sal_uInt8[ mnSize ] )
-{
-	memcpy( (void*)mpBuf, (void*)rProp.mpBuf, mnSize );
-};
-
-const PropEntry& PropEntry::operator=(const PropEntry& rPropEntry)
-{
-	if ( this != &rPropEntry )
-	{
-		delete[] mpBuf;
-		mnId = rPropEntry.mnId;
-		mnSize = rPropEntry.mnSize;
-		mnTextEnc = rPropEntry.mnTextEnc;
-		mpBuf = new sal_uInt8[ mnSize ];
-		memcpy( (void*)mpBuf, (void*)rPropEntry.mpBuf, mnSize );
-	}
-	return *this;
-}
-
-//	-----------------------------------------------------------------------
-
-void PropItem::Clear()
-{
-	Seek( STREAM_SEEK_TO_BEGIN );
-	delete[] (sal_uInt8*)SwitchBuffer();
-}
-
-//	-----------------------------------------------------------------------
-
-BOOL PropItem::Read( String& rString, sal_uInt32 nStringType, sal_Bool bAlign )
-{
-	sal_uInt32	i, nItemSize, nType, nItemPos;
-	sal_Bool	bRetValue = sal_False;
-
-	nItemPos = Tell();
-
-	if ( nStringType == VT_EMPTY )
-		*this >> nType;
-	else
-		nType = nStringType & VT_TYPEMASK;
-
-	*this >> nItemSize;
-
-	switch( nType )
-	{
-		case VT_LPSTR :
-		{
-			if ( (sal_uInt16)nItemSize )
-			{
-				sal_Char* pString = new sal_Char[ (sal_uInt16)nItemSize ];
-				if ( mnTextEnc == RTL_TEXTENCODING_UCS2 )
-				{
-					nItemSize >>= 1;
-					if ( (sal_uInt16)nItemSize > 1 )
-					{
-						sal_Unicode* pWString = (sal_Unicode*)pString;
-						for ( i = 0; i < (sal_uInt16)nItemSize; i++ )
-							*this >> pWString[ i ];
-						rString = String( pWString, (sal_uInt16)nItemSize - 1 );
-					}
-					else
-						rString = String();
-					bRetValue = sal_True;
-				}
-				else
-				{
-					SvMemoryStream::Read( pString, (sal_uInt16)nItemSize );
-					if ( pString[ (sal_uInt16)nItemSize - 1 ] == 0 )
-					{
-						if ( (sal_uInt16)nItemSize > 1 )
-							rString = String( ByteString( pString ), mnTextEnc );
-						else
-							rString = String();
-						bRetValue = sal_True;
-					}
-				}
-				delete[] pString;
-			}
-			if ( bAlign )
-				SeekRel( ( 4 - ( nItemSize & 3 ) ) & 3 );		// dword align
-		}
-		break;
-
-		case VT_LPWSTR :
-		{
-			if ( nItemSize )
-			{
-				sal_Unicode* pString = new sal_Unicode[ (sal_uInt16)nItemSize ];
-				for ( i = 0; i < (sal_uInt16)nItemSize; i++ )
-					*this >> pString[ i ];
-				if ( pString[ i - 1 ] == 0 )
-				{
-					if ( (sal_uInt16)nItemSize > 1 )
-						rString = String( pString, (sal_uInt16)nItemSize - 1 );
-					else
-						rString = String();
-					bRetValue = sal_True;
-				}
-				delete[] pString;
-			}
-			if ( bAlign && ( nItemSize & 1 ) )
-				SeekRel( 2 );							// dword align
-		}
-		break;
-	}
-	if ( !bRetValue )
-		Seek( nItemPos );
-	return bRetValue;
-}
-
-//	-----------------------------------------------------------------------
-
-PropItem& PropItem::operator=( PropItem& rPropItem )
-{
-	if ( this != &rPropItem )
-	{
-		Seek( STREAM_SEEK_TO_BEGIN );
-		delete[] (sal_uInt8*)SwitchBuffer();
-
-		mnTextEnc = rPropItem.mnTextEnc;
-		sal_uInt32 nItemPos = rPropItem.Tell();
-		rPropItem.Seek( STREAM_SEEK_TO_END );
-		SvMemoryStream::Write( rPropItem.GetData(), rPropItem.Tell() );
-		rPropItem.Seek( nItemPos );
-	}
-	return *this;
-}
-
-//	-----------------------------------------------------------------------
-
-struct Dict
-{
-	sal_uInt32	mnId;
-	String		aString;
-
-			Dict( sal_uInt32 nId, String rString ) { mnId = nId; aString = rString; };
-};
-
-//	-----------------------------------------------------------------------
-
-Dictionary::~Dictionary()
-{
-	for ( void* pPtr = First(); pPtr; pPtr = Next() )
-		delete (Dict*)pPtr;
-}
-
-//	-----------------------------------------------------------------------
-
-void Dictionary::AddProperty( sal_uInt32 nId, const String& rString )
-{
-	if ( rString.Len() )		// eindeutige namen bei properties
-	{
-		// pruefen, ob es die Propertybeschreibung in der Dictionary schon gibt
-		for ( Dict* pDict = (Dict*)First(); pDict; pDict = (Dict*)Next() )
-		{
-			if ( pDict->mnId == nId )
-			{
-				pDict->aString = rString;
-				return;
-			}
-		}
-		Insert( new Dict( nId, rString ), LIST_APPEND );
-	}
-}
-
-//	-----------------------------------------------------------------------
-
-UINT32 Dictionary::GetProperty( const String& rString )
-{
-	for ( Dict* pDict = (Dict*)First(); pDict; pDict = (Dict*)Next() )
-	{
-		if ( pDict->aString == rString )
-			return pDict->mnId;
-	}
-	return 0;
-}
-
-//	-----------------------------------------------------------------------
-
-Dictionary& Dictionary::operator=( Dictionary& rDictionary )
-{
-	void* pPtr;
-
-	if ( this != &rDictionary )
-	{
-		for ( pPtr = First(); pPtr; pPtr = Next() )
-			delete (Dict*)pPtr;
-
-		for ( pPtr = rDictionary.First(); pPtr; pPtr = rDictionary.Next() )
-			Insert( new Dict( ((Dict*)pPtr)->mnId, ((Dict*)pPtr)->aString ), LIST_APPEND );
-	}
-	return *this;
-}
-
-//	-----------------------------------------------------------------------
-
-Section::Section( Section& rSection )
-: List()
-{
-	mnTextEnc = rSection.mnTextEnc;
-	for ( int i = 0; i < 16; i++ )
-		aFMTID[ i ] = rSection.aFMTID[ i ];
-	for ( PropEntry* pProp = (PropEntry*)rSection.First(); pProp; pProp = (PropEntry*)rSection.Next() )
-		Insert( new PropEntry( *pProp ), LIST_APPEND );
-}
-
-//	-----------------------------------------------------------------------
-
-Section::Section( const sal_uInt8* pFMTID )
-{
-	mnTextEnc = RTL_TEXTENCODING_MS_1252;
-	for ( int i = 0; i < 16; i++ )
-		aFMTID[ i ] = pFMTID[ i ];
-}
-
-//	-----------------------------------------------------------------------
-
-sal_Bool Section::GetProperty( sal_uInt32 nId, PropItem& rPropItem )
-{
-	PropEntry* pProp;
-	if ( nId )
-	{
-		for ( pProp = (PropEntry*)First(); pProp; pProp = (PropEntry*)Next() )
-		{
-			if ( pProp->mnId == nId )
-				break;
-		}
-		if ( pProp )
-		{
-			rPropItem.Clear();
-			rPropItem.SetTextEncoding( mnTextEnc );
-			rPropItem.Write( pProp->mpBuf, pProp->mnSize );
-			rPropItem.Seek( STREAM_SEEK_TO_BEGIN );
-			return sal_True;
-		}
-	}
-	return sal_False;
-}
-
-//	-----------------------------------------------------------------------
-
-void Section::AddProperty( sal_uInt32 nId, const sal_uInt8* pBuf, sal_uInt32 nBufSize )
-{
-	// kleiner id check
-
-	if ( !nId )
-		return;
-	if ( nId == 0xffffffff )
-		nId = 0;
-
-	// keine doppelten PropId's zulassen, sortieren
-	for ( sal_uInt32 i = 0; i < Count(); i++ )
-	{
-		PropEntry* pPropEntry = (PropEntry*)GetObject( i );
-		if ( pPropEntry->mnId == nId )
-			delete (PropEntry*)Replace( new PropEntry( nId, pBuf, nBufSize, mnTextEnc ), i );
-		else if ( pPropEntry->mnId > nId )
-			Insert( new PropEntry( nId, pBuf, nBufSize, mnTextEnc ), i );
-		else
-			continue;
-		return;
-	}
-	Insert( new PropEntry( nId, pBuf, nBufSize, mnTextEnc ), LIST_APPEND );
-}
-
-//	-----------------------------------------------------------------------
-
-sal_Bool Section::GetDictionary( Dictionary& rDict )
-{
-	sal_Bool bRetValue = sal_False;
-
-	Dictionary aDict;
-	PropEntry* pProp;
-
-	for ( pProp = (PropEntry*)First(); pProp; pProp = (PropEntry*)Next() )
-	{
-		if ( pProp->mnId == 0 )
-			break;
-	}
-	if ( pProp )
-	{
-		sal_uInt32 nDictCount, nId, nSize, nPos;
-		SvMemoryStream aStream( (sal_Int8*)pProp->mpBuf, pProp->mnSize, STREAM_READ );
-		aStream.Seek( STREAM_SEEK_TO_BEGIN );
-		aStream >> nDictCount;
-		for ( sal_uInt32 i = 0; i < nDictCount; i++ )
-		{
-			aStream >> nId >> nSize;
-			if ( (sal_uInt16)nSize )
-			{
-				String aString;
-				nPos = aStream.Tell();
-				sal_Char* pString = new sal_Char[ (sal_uInt16)nSize ];
-				aStream.Read( pString, (sal_uInt16)nSize );
-				if ( mnTextEnc == RTL_TEXTENCODING_UCS2 )
-				{
-					nSize >>= 1;
-					aStream.Seek( nPos );
-					sal_Unicode* pWString = (sal_Unicode*)pString;
-					for ( i = 0; i < (sal_uInt16)nSize; i++ )
-						aStream >> pWString[ i ];
-					aString = String( pWString, (sal_uInt16)nSize - 1 );
-				}
-				else
-					aString = String( ByteString( pString, (sal_uInt16)nSize - 1 ), mnTextEnc );
-				delete[] pString;
-				if ( !aString.Len() )
-					break;
-				aDict.AddProperty( nId, aString );
-			}
-			bRetValue = sal_True;
-		}
-	}
-	rDict = aDict;
-	return bRetValue;
-}
-
-//	-----------------------------------------------------------------------
-
-Section::~Section()
-{
-	for ( PropEntry* pProp = (PropEntry*)First(); pProp; pProp = (PropEntry*)Next() )
-		delete pProp;
-}
-
-//	-----------------------------------------------------------------------
-
-void Section::Read( SvStorageStream *pStrm )
-{
-	sal_uInt32 i, nSecOfs, nSecSize, nPropCount, nPropId, nPropOfs, nPropType, nPropSize, nCurrent, nVectorCount, nTemp, nStrmSize;
-	nSecOfs = pStrm->Tell();
-
-	pStrm->Seek( STREAM_SEEK_TO_END );
-	nStrmSize = pStrm->Tell();
-	pStrm->Seek( nSecOfs );
-
-	mnTextEnc = RTL_TEXTENCODING_MS_1252;
-	*pStrm >> nSecSize >> nPropCount;
-	while( nPropCount-- && ( pStrm->GetError() == ERRCODE_NONE ) )
-	{
-		*pStrm >> nPropId >> nPropOfs;
-		nCurrent = pStrm->Tell();
-		pStrm->Seek( nPropOfs + nSecOfs );
-		if ( nPropId )					// dictionary wird nicht eingelesen
-		{
-
-			*pStrm >> nPropType;
-
-			nPropSize = 4;
-
-			if ( nPropType & VT_VECTOR )
-			{
-				*pStrm >> nVectorCount;
-				nPropType &=~VT_VECTOR;
-				nPropSize += 4;
-			}
-			else
-				nVectorCount = 1;
-
-
-			sal_Bool bVariant = ( nPropType == VT_VARIANT );
-
-			for ( i = 0; nPropSize && ( i < nVectorCount ); i++ )
-			{
-				if ( bVariant )
-				{
-					*pStrm >> nPropType;
-					nPropSize += 4;
-				}
-				switch( nPropType )
-				{
-					case VT_UI1 :
-						nPropSize++;
-					break;
-
-					case VT_I2 :
-					case VT_UI2 :
-					case VT_BOOL :
-						nPropSize += 2;
-					break;
-
-					case VT_I4 :
-					case VT_R4 :
-					case VT_UI4 :
-					case VT_ERROR :
-						nPropSize += 4;
-					break;
-
-					case VT_I8 :
-					case VT_R8 :
-					case VT_CY :
-					case VT_UI8 :
-					case VT_DATE :
-					case VT_FILETIME :
-						nPropSize += 8;
-					break;
-
-					case VT_BSTR :
-						*pStrm >> nTemp;
-						nPropSize += ( nTemp + 4 );
-					break;
-
-					case VT_LPSTR :
-						*pStrm >> nTemp;
-						nPropSize += ( nTemp + 4 );
-					break;
-
-					case VT_LPWSTR :
-						*pStrm >> nTemp;
-						nPropSize += ( nTemp << 1 ) + 4;
-					break;
-
-					case VT_BLOB_OBJECT :
-					case VT_BLOB :
-					case VT_CF :
-						*pStrm >> nTemp;
-						nPropSize += ( nTemp + 4 );
-					break;
-
-					case VT_CLSID :
-					case VT_STREAM :
-					case VT_STORAGE :
-					case VT_STREAMED_OBJECT :
-					case VT_STORED_OBJECT :
-					case VT_VARIANT :
-					case VT_VECTOR :
-					default :
-						nPropSize = 0;
-				}
-				if ( nPropSize )
-				{
-					if ( ( nVectorCount - i ) > 1 )
-						pStrm->Seek( nPropOfs + nSecOfs + nPropSize );
-				}
-				else
-					break;
-			}
-			if ( nPropSize )
-			{
-				pStrm->Seek( nPropOfs + nSecOfs );
-				sal_uInt8* pBuf = new sal_uInt8[ nPropSize ];
-				pStrm->Read( pBuf, nPropSize );
-				AddProperty( nPropId, pBuf, nPropSize );
-				delete[] pBuf;
-			}
-			if ( nPropId == 1 )
-            {
-				PropItem aPropItem;
-				if ( GetProperty( 1, aPropItem ) )
-				{
-					sal_uInt16 nCodePage;
-	                aPropItem >> nPropType;
-		            if ( nPropType == VT_I2 )
-					{
-						aPropItem >> nCodePage;
-
-						if ( nCodePage == 1200 )
-						{
-							mnTextEnc = RTL_TEXTENCODING_UCS2;
-						}
-						else
-						{
-							mnTextEnc = rtl_getTextEncodingFromWindowsCodePage( nCodePage );
-							if ( mnTextEnc == RTL_TEXTENCODING_DONTKNOW )
-								mnTextEnc = RTL_TEXTENCODING_MS_1252;
-						}
-					}
-					else
-					{
-						mnTextEnc = RTL_TEXTENCODING_MS_1252;
-					}
-				}
-			}
-		}
-		else
-		{
-			sal_uInt32 nDictCount, nSize;
-			*pStrm >> nDictCount;
-			for ( i = 0; i < nDictCount; i++ )
-			{
-				*pStrm >> nSize >> nSize;
-				pStrm->SeekRel( nSize );
-			}
-			nSize = pStrm->Tell();
-			pStrm->Seek( nPropOfs + nSecOfs );
-			nSize -= pStrm->Tell();
-			if ( nSize > nStrmSize )
-			{
-				nPropCount = 0;
-				break;
-			}
-			sal_uInt8* pBuf = new sal_uInt8[ nSize ];
-			pStrm->Read( pBuf, nSize );
-			AddProperty( 0xffffffff, pBuf, nSize );
-			delete[] pBuf;
-		}
-		pStrm->Seek( nCurrent );
-	}
-	pStrm->Seek( nSecOfs + nSecSize );
-}
-
-//	-----------------------------------------------------------------------
-
-Section& Section::operator=( Section& rSection )
-{
-	PropEntry* pProp;
-
-	if ( this != &rSection )
-	{
-		memcpy( (void*)aFMTID, (void*)rSection.aFMTID, 16 );
-		for ( pProp = (PropEntry*)First(); pProp; pProp = (PropEntry*)Next() )
-			delete pProp;
-		Clear();
-		for ( pProp = (PropEntry*)rSection.First(); pProp; pProp = (PropEntry*)rSection.Next() )
-			Insert( new PropEntry( *pProp ), LIST_APPEND );
-	}
-	return *this;
-}
-
-//	-----------------------------------------------------------------------
-
-PropRead::PropRead( SvStorage& rStorage, const String& rName ) :
-		mbStatus			( sal_False ),
-		mnByteOrder			( 0xfffe ),
-		mnFormat			( 0 ),
-		mnVersionLo			( 4 ),
-		mnVersionHi			( 2 )
-{
-	if ( rStorage.IsStream( rName ) )
-	{
-        mpSvStream = rStorage.OpenSotStream( rName, STREAM_STD_READ );
-		if ( mpSvStream )
-		{
-			mpSvStream->SetNumberFormatInt( NUMBERFORMAT_INT_LITTLEENDIAN );
-			memset( mApplicationCLSID, 0, 16 );
-			mbStatus = sal_True;
-		}
-	}
-}
-
-//	-----------------------------------------------------------------------
-
-void PropRead::AddSection( Section& rSection )
-{
-	Insert( new Section( rSection ), LIST_APPEND );
-}
-
-//	-----------------------------------------------------------------------
-
-const Section* PropRead::GetSection( const sal_uInt8* pFMTID )
-{
-	Section* pSection;
-
-	for ( pSection = (Section*)First(); pSection; pSection = (Section*)Next() )
-	{
-		if ( memcmp( pSection->GetFMTID(), pFMTID, 16 ) == 0 )
-			break;
-	}
-	return pSection;
-}
-
-//	-----------------------------------------------------------------------
-
-PropRead::~PropRead()
-{
-	for ( Section* pSection = (Section*)First(); pSection; pSection = (Section*)Next() )
-		delete pSection;
-}
-
-//	-----------------------------------------------------------------------
-
-void PropRead::Read()
-{
-	for ( Section* pSection = (Section*)First(); pSection; pSection = (Section*)Next() )
-		delete pSection;
-	Clear();
-	if ( mbStatus )
-	{
-		sal_uInt32	nSections;
-		sal_uInt32	nSectionOfs;
-		sal_uInt32	nCurrent;
-		*mpSvStream >> mnByteOrder >> mnFormat >> mnVersionLo >> mnVersionHi;
-		if ( mnByteOrder == 0xfffe )
-		{
-			sal_uInt8*	pSectCLSID = new sal_uInt8[ 16 ];
-			mpSvStream->Read( mApplicationCLSID, 16 );
-			*mpSvStream >> nSections;
-			if ( nSections > 2 )				// sj: PowerPoint documents are containing max 2 sections
-			{
-				mbStatus = sal_False;
-			}
-			else for ( sal_uInt32 i = 0; i < nSections; i++ )
-			{
-				mpSvStream->Read( pSectCLSID, 16 );
-				*mpSvStream >> nSectionOfs;
-				nCurrent = mpSvStream->Tell();
-				mpSvStream->Seek( nSectionOfs );
-				Section aSection( pSectCLSID );
-				aSection.Read( mpSvStream );
-				AddSection( aSection );
-				mpSvStream->Seek( nCurrent );
-			}
-			delete[] pSectCLSID;
-		}
-	}
-}
-
-//	-----------------------------------------------------------------------
-
-PropRead& PropRead::operator=( PropRead& rPropRead )
-{
-	Section* pSection;
-
-	if ( this != &rPropRead )
-	{
-		mbStatus = rPropRead.mbStatus;
-		mpSvStream = rPropRead.mpSvStream;
-
-		mnByteOrder = rPropRead.mnByteOrder;
-		mnFormat = rPropRead.mnFormat;
-		mnVersionLo = rPropRead.mnVersionLo;
-		mnVersionHi = rPropRead.mnVersionHi;
-		memcpy( mApplicationCLSID, rPropRead.mApplicationCLSID, 16 );
-
-		for ( pSection = (Section*)First(); pSection; pSection = (Section*)Next() )
-			delete pSection;
-		Clear();
-		for ( pSection = (Section*)rPropRead.First(); pSection; pSection = (Section*)rPropRead.Next() )
-			Insert( new Section( *pSection ), LIST_APPEND );
-	}
-	return *this;
-}
diff --git sd/source/filter/propread.hxx sd/source/filter/propread.hxx
index 6a2e7ab..e69de29 100644
--- sd/source/filter/propread.hxx
+++ sd/source/filter/propread.hxx
@@ -1,194 +0,0 @@
-/*************************************************************************
- *
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- * 
- * Copyright 2008 by Sun Microsystems, Inc.
- *
- * OpenOffice.org - a multi-platform office productivity suite
- *
- * $RCSfile: propread.hxx,v $
- * $Revision: 1.7 $
- *
- * This file is part of OpenOffice.org.
- *
- * OpenOffice.org is free software: you can redistribute it and/or modify
- * it under the terms of the GNU Lesser General Public License version 3
- * only, as published by the Free Software Foundation.
- *
- * OpenOffice.org is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU Lesser General Public License version 3 for more details
- * (a copy is included in the LICENSE file that accompanied this code).
- *
- * You should have received a copy of the GNU Lesser General Public License
- * version 3 along with OpenOffice.org.  If not, see
- * <http://www.openoffice.org/license.html>
- * for a copy of the LGPLv3 License.
- *
- ************************************************************************/
-
-#ifndef _PROPREAD_HXX_
-#define _PROPREAD_HXX_
-
-#include <tools/solar.h>
-#include <sot/storage.hxx>
-#include <tools/gen.hxx>
-#include <tools/list.hxx>
-#include <tools/stream.hxx>
-#include <tools/datetime.hxx>
-
-#include <tools/string.hxx>
-
-// SummaryInformation
-#define PID_TITLE				0x02
-#define PID_SUBJECT 			0x03
-#define PID_AUTHOR				0x04
-#define PID_KEYWORDS			0x05
-#define PID_COMMENTS			0x06
-#define PID_TEMPLATE			0x07
-#define PID_LASTAUTHOR			0x08
-#define PID_REVNUMBER			0x09
-#define PID_EDITTIME			0x0a
-#define PID_LASTPRINTED_DTM 	0x0b
-#define PID_CREATE_DTM			0x0c
-#define PID_LASTSAVED_DTM		0x0d
-
-// DocumentSummaryInformation
-#define PID_CATEGORY			0x02
-#define PID_PRESFORMAT			0x03
-#define PID_BYTECOUNT			0x04
-#define PID_LINECOUNT			0x05
-#define PID_PARACOUNT			0x06
-#define PID_SLIDECOUNT			0x07
-#define PID_NOTECOUNT			0x08
-#define PID_HIDDENCOUNT 		0x09
-#define PID_MMCLIPCOUNT 		0x0a
-#define PID_SCALE				0x0b
-#define PID_HEADINGPAIR 		0x0c
-#define PID_DOCPARTS			0x0d
-#define PID_MANAGER 			0x0e
-#define PID_COMPANY 			0x0f
-#define PID_LINKSDIRTY			0x10
-
-#define VT_EMPTY			0
-#define VT_NULL 			1
-#define VT_I2				2
-#define VT_I4				3
-#define VT_R4				4
-#define VT_R8				5
-#define VT_CY				6
-#define VT_DATE 			7
-#define VT_BSTR 			8
-#define VT_UI4				9
-#define VT_ERROR			10
-#define VT_BOOL 			11
-#define VT_VARIANT			12
-#define VT_DECIMAL			14
-#define VT_I1				16
-#define VT_UI1				17
-#define VT_UI2				18
-#define VT_I8				20
-#define VT_UI8				21
-#define VT_INT				22
-#define VT_UINT 			23
-#define VT_LPSTR			30
-#define VT_LPWSTR			31
-#define VT_FILETIME 		64
-#define VT_BLOB 			65
-#define VT_STREAM			66
-#define VT_STORAGE			67
-#define VT_STREAMED_OBJECT	68
-#define VT_STORED_OBJECT	69
-#define VT_BLOB_OBJECT		70
-#define VT_CF				71
-#define VT_CLSID			72
-#define VT_VECTOR			0x1000
-#define VT_ARRAY			0x2000
-#define VT_BYREF			0x4000
-#define VT_TYPEMASK 		0xFFF
-
-// ------------------------------------------------------------------------
-
-class PropItem : public SvMemoryStream
-{
-		sal_uInt16		mnTextEnc;
-
-	public :
-						PropItem(){};
-		void			Clear();
-
-		void			SetTextEncoding( sal_uInt16 nTextEnc ){ mnTextEnc = nTextEnc; };
-		sal_Bool		Read( String& rString, sal_uInt32 nType = VT_EMPTY, sal_Bool bDwordAlign = sal_True );
-		PropItem&		operator=( PropItem& rPropItem );
-
-	using SvStream::Read;
-};
-
-// ------------------------------------------------------------------------
-
-class Dictionary : protected List
-{
-	friend class Section;
-
-		void		AddProperty( UINT32 nId, const String& rString );
-
-	public :
-					Dictionary(){};
-					~Dictionary();
-		Dictionary& operator=( Dictionary& rDictionary );
-		UINT32		GetProperty( const String& rPropName );
-};
-
-// ------------------------------------------------------------------------
-
-class Section : private List
-{
-		sal_uInt16				mnTextEnc;
-
-	protected:
-
-		BYTE					aFMTID[ 16 ];
-
-		void					AddProperty( sal_uInt32 nId, const sal_uInt8* pBuf, sal_uInt32 nBufSize );
-
-	public:
-								Section( const sal_uInt8* pFMTID );
-								Section( Section& rSection );
-								~Section();
-
-		Section&				operator=( Section& rSection );
-		sal_Bool				GetProperty( sal_uInt32 nId, PropItem& rPropItem );
-		sal_Bool				GetDictionary( Dictionary& rDict );
-		const sal_uInt8* 		GetFMTID() const { return aFMTID; };
-		void					Read( SvStorageStream* pStrm );
-};
-
-// ------------------------------------------------------------------------
-
-class PropRead : private List
-{
-		sal_Bool				mbStatus;
-		SvStorageStream*		mpSvStream;
-
-		sal_uInt16				mnByteOrder;
-		sal_uInt16				mnFormat;
-		sal_uInt16				mnVersionLo;
-		sal_uInt16				mnVersionHi;
-		sal_uInt8				mApplicationCLSID[ 16 ];
-
-		void					AddSection( Section& rSection );
-
-	public:
-								PropRead( SvStorage& rSvStorage, const String& rName );
-								~PropRead();
-
-		PropRead&				operator=( PropRead& rPropRead );
-		const Section*			GetSection( const BYTE* pFMTID );
-		sal_Bool				IsValid() const { return mbStatus; };
-		void					Read();
-};
-
-
-#endif
-
diff --git sd/source/filter/sdpptwrp.cxx sd/source/filter/sdpptwrp.cxx
index c920a48..a9dd979 100644
--- sd/source/filter/sdpptwrp.cxx
+++ sd/source/filter/sdpptwrp.cxx
@@ -40,7 +40,7 @@
 #include <svtools/fltrcfg.hxx>
 
 #include "sdpptwrp.hxx"
-#include "pptin.hxx"
+#include "ppt/pptin.hxx"
 #include "drawdoc.hxx"
 #include <tools/urlobj.hxx>
 #include <svx/msfiltertracer.hxx>
@@ -60,6 +60,9 @@ typedef BOOL ( __LOADONCALLAPI *ExportPPT )( SvStorageRef&,
 											 Reference< XStatusIndicator > &,
 											 SvMemoryStream*, sal_uInt32 nCnvrtFlags );
 
+typedef sal_Bool ( SAL_CALL *ImportPPT )( const ::rtl::OUString&, Sequence< PropertyValue >*,
+                                          SdDrawDocument*, SvStream&, SvStorage&, SfxMedium& );
+
 // ---------------
 // - SdPPTFilter -
 // ---------------
@@ -81,9 +84,13 @@ SdPPTFilter::~SdPPTFilter()
 
 sal_Bool SdPPTFilter::Import()
 {
+	::osl::Module* pLibrary = OpenLibrary( mrMedium.GetFilter()->GetUserData() );
+	if( !pLibrary )
+		return sal_False;
+
 	sal_Bool	bRet = sal_False;
-    SotStorageRef pStorage = new SotStorage( mrMedium.GetInStream(), FALSE );
-    if( !pStorage->GetError() )
+	SotStorageRef pStorage = new SotStorage( mrMedium.GetInStream(), FALSE );
+	if( !pStorage->GetError() )
 	{
 		/* check if there is a dualstorage, then the
 		document is propably a PPT95 containing PPT97 */
@@ -107,18 +114,18 @@ sal_Bool SdPPTFilter::Import()
 			aPropValue.Name = rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DocumentURL" ) );
 			aConfigData[ 0 ] = aPropValue;
 
-			MSFilterTracer aTracer( aTraceConfigPath, &aConfigData );
-			aTracer.StartTracing();
-			SdPPTImport* pImport = new SdPPTImport( &mrDocument, *pDocStream, *pStorage, mrMedium, &aTracer );
-			if ( ( bRet = pImport->Import() ) == sal_False )
+			ImportPPT PPTImport = reinterpret_cast<ImportPPT>(pLibrary->getFunctionSymbol( ::rtl::OUString::createFromAscii("ImportPPT") ));
+			if ( PPTImport )
+				bRet = PPTImport( aTraceConfigPath, &aConfigData, &mrDocument, *pDocStream, *pStorage, mrMedium );
+
+			if ( !bRet )
 			{
 				if ( pStorage->IsStream( String( RTL_CONSTASCII_USTRINGPARAM("EncryptedSummary") ) ) )
 					mrMedium.SetError( ERRCODE_SVX_READ_FILTER_PPOINT );
 				else
 					mrMedium.SetError( SVSTREAM_WRONGVERSION );
 			}
-			aTracer.EndTracing();
-			delete pImport;
+
 			delete pDocStream;
 		}
 	}
diff --git sd/source/ui/dlg/ins_paste.cxx sd/source/ui/dlg/ins_paste.cxx
index 848ed87..aeab2a4 100644
--- sd/source/ui/dlg/ins_paste.cxx
+++ sd/source/ui/dlg/ins_paste.cxx
@@ -31,10 +31,6 @@
 // MARKER(update_precomp.py): autogen include statement, do not remove
 #include "precompiled_sd.hxx"
 
-#ifdef SD_DLLIMPLEMENTATION
-#undef SD_DLLIMPLEMENTATION
-#endif
-
 #include "ins_paste.hrc"
 #include "ins_paste.hxx"
 
diff --git sd/source/ui/docshell/docshell.cxx sd/source/ui/docshell/docshell.cxx
index 27a27f1..32a243a 100644
--- sd/source/ui/docshell/docshell.cxx
+++ sd/source/ui/docshell/docshell.cxx
@@ -118,9 +118,6 @@ namespace sd {
 
 GraphicFilter* GetGrfFilter();
 
-SfxProgress* DrawDocShell::mpSpecialProgress = NULL;
-Link*		 DrawDocShell::mpSpecialProgressHdl = NULL;
-
 /*************************************************************************
 |*
 |* SFX-Slotmaps und -Definitionen
@@ -526,7 +523,6 @@ void DrawDocShell::ApplySlotFilter() const
     }
 }
 
-
 void DrawDocShell::SetModified( BOOL bSet /* = TRUE */ )
 {
     SfxObjectShell::SetModified( bSet );
diff --git sd/source/ui/inc/DrawDocShell.hxx sd/source/ui/inc/DrawDocShell.hxx
index 5cf83ee..af8cd2a 100644
--- sd/source/ui/inc/DrawDocShell.hxx
+++ sd/source/ui/inc/DrawDocShell.hxx
@@ -164,11 +164,6 @@ public:
 	UINT16	                GetStyleFamily() const { return mnStyleFamily; }
 	void	                SetStyleFamily( UINT16 nSF ) { mnStyleFamily = nSF; }
 
-	BOOL                    HasSpecialProgress() const { return ( mpSpecialProgress != NULL && mpSpecialProgressHdl != NULL ); }
-	void                    ReleaseSpecialProgress() { mpSpecialProgress = NULL; mpSpecialProgressHdl = NULL; }
-	void                    SetSpecialProgress( SfxProgress* _pProgress, Link* pLink ) { mpSpecialProgress = _pProgress; mpSpecialProgressHdl = pLink; }
-	SfxProgress*            GetSpecialProgress() { return( HasSpecialProgress() ? mpSpecialProgress : NULL ); }
-
     sal_Bool                IsNewDocument() const;
 
 	/** executes the SID_OPENDOC slot to let the framework open a document
@@ -235,9 +230,6 @@ protected:
 	BOOL 					mbOwnPrinter;
     BOOL                    mbNewDocument;
 
-	static SfxProgress*		mpSpecialProgress;
-	static Link*			mpSpecialProgressHdl;
-
 	bool					mbOwnDocument;			// if true, we own mpDoc and will delete it in our d'tor
     void					Construct(bool bClipboard);
     virtual void            InPlaceActivate( BOOL bActive );
diff --git sd/source/ui/inc/FrameView.hxx sd/source/ui/inc/FrameView.hxx
index f56ef36..1d7ab2d 100644
--- sd/source/ui/inc/FrameView.hxx
+++ sd/source/ui/inc/FrameView.hxx
@@ -49,7 +49,7 @@ class FrameView
     : public SdrView
 {
 public:
-	FrameView(SdDrawDocument* pDrawDoc, FrameView* pFrameView = NULL );
+	SD_DLLPUBLIC FrameView(SdDrawDocument* pDrawDoc, FrameView* pFrameView = NULL );
 	FrameView(const FrameView& rFrameView);
 	virtual ~FrameView();
 
@@ -106,7 +106,7 @@ public:
 	/** can be used to get the page kind that was selected on last save of this document */
 	PageKind GetPageKindOnLoad() const { return mePageKindOnLoad; }
 
-	void SetSelectedPage (USHORT nPage);
+	SD_DLLPUBLIC void SetSelectedPage (USHORT nPage);
 	USHORT GetSelectedPage () const;
 
 	/** is used in FrameView::ReadUserDataSequence() only to store the
@@ -116,7 +116,7 @@ public:
 	/** can be used to get the page that was selected on last save of this document */
 	USHORT GetSelectedPageOnLoad () const { return mnSelectedPageOnLoad; }
 
-	void SetViewShEditMode(EditMode eMode, PageKind eKind);
+	SD_DLLPUBLIC void SetViewShEditMode(EditMode eMode, PageKind eKind);
 	EditMode GetViewShEditMode (PageKind eKind);
 
     /** Remember the edit mode of the main view shell at the time when the
diff --git sd/source/ui/inc/ins_paste.hxx sd/source/ui/inc/ins_paste.hxx
index d74154e..bbb9dec 100644
--- sd/source/ui/inc/ins_paste.hxx
+++ sd/source/ui/inc/ins_paste.hxx
@@ -31,18 +31,10 @@
 #ifndef _SD_INS_PASTE_HXX_
 #define _SD_INS_PASTE_HXX_
 
-#ifndef _BUTTON_HXX //autogen
 #include <vcl/button.hxx>
-#endif
-#ifndef _FIXED_HXX //autogen
 #include <vcl/fixed.hxx>
-#endif
-#ifndef _DIALOG_HXX //autogen
 #include <vcl/dialog.hxx>
-#endif
-#ifndef _SD_SDRESID_HXX
 #include "sdresid.hxx"
-#endif
 
 // --------------------
 // - SdInsertPasteDlg -
diff --git sd/source/ui/unoidl/randomnode.cxx sd/source/ui/unoidl/randomnode.cxx
index 3a006ab..830491e 100644
--- sd/source/ui/unoidl/randomnode.cxx
+++ sd/source/ui/unoidl/randomnode.cxx
@@ -171,7 +171,7 @@ static const sal_Char* pSN2 = "com.sun.star.comp.sd.RandomAnimationNode";
 
 // --------------------------------------------------------------------
 
-Reference< XInterface > RandomAnimationNode_createInstance( sal_Int16 nPresetClass )
+SD_DLLPUBLIC Reference< XInterface > RandomAnimationNode_createInstance( sal_Int16 nPresetClass )
 {
 	Reference< XInterface > xInt( static_cast<XWeak*>( new RandomAnimationNode( nPresetClass ) ) );
 	return xInt;
diff --git sd/util/makefile.mk sd/util/makefile.mk
index a08f0e8..fb5e7af 100644
--- sd/util/makefile.mk
+++ sd/util/makefile.mk
@@ -65,6 +65,7 @@ SHL1IMPLIB= sdi
 
 # dynamic libraries
 SHL1STDLIBS+= \
+	$(SVXCORELIB) \
 	$(SVXLIB) \
 	$(SFXLIB) \
 	$(BASICLIB) \
@@ -130,7 +131,6 @@ LIB5FILES=      \
 			$(SLB)$/html.lib		\
 			$(SLB)$/filter.lib		\
 			$(SLB)$/unoidl.lib		\
-			$(SLB)$/ppt.lib 		\
 			$(SLB)$/animui.lib		\
 			$(SLB)$/accessibility.lib	\
 			$(SLB)$/toolpanel.lib		\
@@ -162,7 +162,7 @@ DEF2NAME=		$(SHL2TARGET)
 
 SHL2STDLIBS= \
 			$(SFX2LIB) \
-			$(SVXLIB) \
+			$(SVXCORELIB) \
 			$(SVTOOLLIB) \
 			$(SVLLIB) \
 			$(VCLLIB) \
@@ -195,6 +195,7 @@ LIB4FILES=	\
 
 SHL4STDLIBS= \
 	$(ISDLIB) \
+	$(SVXCORELIB) \
 	$(SVXLIB) \
 	$(SFXLIB) \
 	$(BASICLIB) \
@@ -235,10 +236,40 @@ SHL4OBJS += $(SLO)$/pchname.obj \
 # $(ISDLIB) is build in SHL1TARGET
 .IF "$(GUI)" == "UNX"
 SHL4DEPN=$(SHL1TARGETN)
+SHL5DEPN=$(SHL1TARGETN)
 .ELSE
 SHL4DEPN=$(SHL1IMPLIBN)
+SHL5DEPN=$(SHL1IMPLIBN)
 .ENDIF
 
+# ppt import/export library
+SHL5TARGET    = sdfilt$(DLLPOSTFIX)
+SHL5IMPLIB    = sdfilti
+SHL5VERSIONMAP= sdfilt.map
+SHL5DEF       = $(MISC)$/$(SHL5TARGET).def
+SHL5LIBS      = $(SLB)$/ppt.lib $(SLB)$/eppt.lib
+
+DEF5NAME=$(SHL5TARGET)
+
+SHL5STDLIBS = $(ISDLIB) \
+              $(SVXCORELIB)       \
+              $(SVXMSFILTERLIB)   \
+              $(SFX2LIB)          \
+              $(SVTOOLLIB)        \
+              $(SOTLIB)           \
+              $(GOODIESLIB)       \
+              $(VCLLIB)           \
+              $(SVLLIB)           \
+              $(SOTLIB)           \
+              $(UNOTOOLSLIB)      \
+              $(TOOLSLIB)         \
+              $(UCBHELPERLIB)     \
+              $(CPPUHELPERLIB)    \
+              $(CPPULIB)          \
+              $(SALLIB)           \
+              $(COMPHELPERLIB)    \
+              $(I18NISOLANGLIB)
+
 # --- Targets -------------------------------------------------------------
 
 .INCLUDE :  target.mk
diff --git sd/util/sdfilt.map sd/util/sdfilt.map
new file mode 100644
index 0000000..ac6b782
--- /dev/null
+++ sd/util/sdfilt.map
@@ -0,0 +1,8 @@
+PPTEXPORTER_1_0 {
+        global:
+                ExportPPT;
+                ImportPPT;
+
+        local:
+                *;
+};
diff --git solenv/inc/libs.mk solenv/inc/libs.mk
index f6b9815..2a75646 100644
--- solenv/inc/libs.mk
+++ solenv/inc/libs.mk
@@ -256,6 +256,8 @@ EGGTRAYLIB=-leggtray$(DLLPOSTFIX)
 SFXDEBUGLIB=
 FWELIB=-lfwe$(DLLPOSTFIX)
 FWILIB=-lfwi$(DLLPOSTFIX)
+SVXCORELIB=-lsvxcore$(DLLPOSTFIX)
+SVXMSFILTERLIB=-lsvxmsfilter$(DLLPOSTFIX)
 SVXLIB=-lsvx$(DLLPOSTFIX)
 BASCTLLIB=-lbasctl$(DLLPOSTFIX)
 BASICIDELIB=-lybctl
@@ -441,6 +443,8 @@ BASICLIB=basic.lib
 VBAHELPERLIB=vbahelper.lib
 TKTLIB=tkt.lib
 SJLIB=sj.lib
+SVXCORELIB=isvxcore.lib
+SVXMSFILTERLIB=isvxmsfilter.lib
 SVXLIB=isvx.lib
 BASCTLLIB=basctl.lib
 BASICIDELIB=ybctl.lib
diff --git starmath/util/makefile.mk starmath/util/makefile.mk
index 2ef0f02..e4e21cb 100644
--- starmath/util/makefile.mk
+++ starmath/util/makefile.mk
@@ -57,6 +57,7 @@ SHL1DEF=$(MISC)$/$(SHL1TARGET).def
 DEF1NAME=		$(SHL1TARGET)
 
 SHL1STDLIBS= \
+			$(SVXCORELIB) \
 			$(SVXLIB) \
 			$(SFX2LIB) \
 			$(XMLOFFLIB) \
diff --git svx/inc/EnhancedCustomShapeFunctionParser.hxx svx/inc/EnhancedCustomShapeFunctionParser.hxx
index 6311b47..018da4c 100755
--- svx/inc/EnhancedCustomShapeFunctionParser.hxx
+++ svx/inc/EnhancedCustomShapeFunctionParser.hxx
@@ -32,14 +32,14 @@
 #define _ENHANCEDCUSTOMSHAPEFUNCTIONPARSER_HXX
 
 #include <sal/config.h>
-#ifndef BOOST_SHARED_PTR_HPP_INCLUDED
 #include <boost/shared_ptr.hpp>
-#endif
 #include "EnhancedCustomShapeFunctionParser.hxx"
 #include <com/sun/star/drawing/EnhancedCustomShapeParameter.hpp>
 #include <com/sun/star/drawing/EnhancedCustomShapeParameterType.hpp>
 #include <vector>
 
+#include <svx/svxdllapi.h>
+
 struct EnhancedCustomShapeEquation
 {
 	sal_Int32	nOperation;
@@ -97,7 +97,7 @@ enum ExpressionFunct
 
 #define EXPRESSION_FLAG_SUMANGLE_MODE 1
 
-void FillEquationParameter( const com::sun::star::drawing::EnhancedCustomShapeParameter&, const sal_Int32, EnhancedCustomShapeEquation& );
+SVX_DLLPUBLIC void FillEquationParameter( const com::sun::star::drawing::EnhancedCustomShapeParameter&, const sal_Int32, EnhancedCustomShapeEquation& );
 
 class ExpressionNode
 {
@@ -200,7 +200,7 @@ public:
         @return the generated function object.
        */
 
-    static ExpressionNodeSharedPtr parseFunction( const ::rtl::OUString& rFunction, const EnhancedCustomShape2d& rCustoShape );
+    SVX_DLLPUBLIC static ExpressionNodeSharedPtr parseFunction( const ::rtl::OUString& rFunction, const EnhancedCustomShape2d& rCustoShape );
 
 private:
     // disabled constructor/destructor, since this is 
diff --git svx/inc/fontitem.hxx svx/inc/fontitem.hxx
index 9607f8c..3ab3ffe 100644
--- svx/inc/fontitem.hxx
+++ svx/inc/fontitem.hxx
@@ -111,7 +111,7 @@ public:
 		return *this;
 	}
 
-    static void EnableStoreUnicodeNames( BOOL bEnable ) { bEnableStoreUnicodeNames = bEnable; }
+    static void EnableStoreUnicodeNames( BOOL bEnable );
 
 };
 
diff --git svx/inc/gallery1.hxx svx/inc/gallery1.hxx
index 51e4520..75f2946 100644
--- svx/inc/gallery1.hxx
+++ svx/inc/gallery1.hxx
@@ -144,7 +144,7 @@ private:
 	void						ImplLoadImports();
 	void 						ImplWriteImportList();
 	
-	GalleryThemeEntry*			ImplGetThemeEntry( const String& rThemeName );
+	SVX_DLLPUBLIC GalleryThemeEntry*			ImplGetThemeEntry( const String& rThemeName );
 	GalleryThemeEntry* 			ImplGetThemeEntry( ULONG nThemeId );
 	GalleryImportThemeEntry*	ImplGetImportThemeEntry( const String& rImportName );
 
@@ -168,7 +168,7 @@ public:
 	SVX_DLLPUBLIC BOOL			CreateTheme( const String& rThemeName, UINT32 nNumFrom = 0 );
 	BOOL						CreateImportTheme( const INetURLObject& rURL, const String& rFileName );
 	BOOL						RenameTheme( const String& rOldName, const String& rNewName );
-	BOOL						RemoveTheme( const String& rThemeName );
+	SVX_DLLPUBLIC BOOL						RemoveTheme( const String& rThemeName );
 
 	SVX_DLLPUBLIC GalleryTheme* AcquireTheme( const String& rThemeName, SfxListener& rListener );
 	SVX_DLLPUBLIC void			ReleaseTheme( GalleryTheme*	pTheme, SfxListener& rListener );
diff --git svx/inc/galobj.hxx svx/inc/galobj.hxx
index 9b67257..f675a41 100644
--- svx/inc/galobj.hxx
+++ svx/inc/galobj.hxx
@@ -122,8 +122,8 @@ public:
 	BOOL					IsValid() const { return bIsValid; }
 	BOOL					IsThumbBitmap() const { return bIsThumbBmp; }
 
-	const String			GetTitle() const;
-	void					SetTitle( const String& rTitle );
+	SVX_DLLPUBLIC const String			GetTitle() const;
+	SVX_DLLPUBLIC void					SetTitle( const String& rTitle );
 
 	friend SvStream& 		operator<<( SvStream& rOut, const SgaObject& rObj );
 	friend SvStream& 		operator>>( SvStream& rIn, SgaObject& rObj );
diff --git svx/inc/galtheme.hxx svx/inc/galtheme.hxx
index 5561d33..72fd5e0 100644
--- svx/inc/galtheme.hxx
+++ svx/inc/galtheme.hxx
@@ -107,12 +107,12 @@ private:
 	BOOL						bAbortActualize;
 
 	void						ImplCreateSvDrawStorage();
-	SgaObject*					ImplReadSgaObject( GalleryObject* pEntry );
+	SVX_DLLPUBLIC SgaObject*					ImplReadSgaObject( GalleryObject* pEntry );
 	BOOL						ImplWriteSgaObject( const SgaObject& rObj, ULONG nPos, GalleryObject* pExistentEntry );
 	void						ImplRead();
 	void						ImplWrite();
 	const GalleryObject*		ImplGetGalleryObject( ULONG nPos ) const { return aObjectList.GetObject( nPos ); }
-	const GalleryObject*		ImplGetGalleryObject( const INetURLObject& rURL );
+	SVX_DLLPUBLIC const GalleryObject*		ImplGetGalleryObject( const INetURLObject& rURL );
 	ULONG						ImplGetGalleryObjectPos( const GalleryObject* pObj ) const { return aObjectList.GetPos( pObj ); }
 	INetURLObject				ImplGetURL( const GalleryObject* pObject ) const;
     INetURLObject               ImplCreateUniqueURL( SgaObjKind eObjKind, ULONG nFormat = CVT_UNKNOWN );
@@ -129,11 +129,11 @@ public:
 
 	ULONG					GetObjectCount() const { return aObjectList.Count(); }
 
-	SgaObject*					AcquireObject( ULONG nPos );
-	void						ReleaseObject( SgaObject* pObj );
+	SVX_DLLPUBLIC SgaObject*					AcquireObject( ULONG nPos );
+	SVX_DLLPUBLIC void						ReleaseObject( SgaObject* pObj );
 
-	BOOL						InsertObject( const SgaObject& rObj, ULONG nPos = LIST_APPEND );
-	BOOL						RemoveObject( ULONG nPos );
+	SVX_DLLPUBLIC BOOL						InsertObject( const SgaObject& rObj, ULONG nPos = LIST_APPEND );
+	SVX_DLLPUBLIC BOOL						RemoveObject( ULONG nPos );
 	BOOL						ChangeObjectPos( ULONG nOldPos, ULONG nNewPos );
 
 	const String&				GetName() const	{ return IsImported() ? aImportName : pThm->GetThemeName(); }
@@ -194,11 +194,11 @@ public:
 
 	BOOL						GetThumb( ULONG nPos, Bitmap& rBmp, BOOL bProgress = FALSE );
 
-	BOOL						GetGraphic( ULONG nPos, Graphic& rGraphic, BOOL bProgress = FALSE );
-	BOOL						InsertGraphic( const Graphic& rGraphic, ULONG nInsertPos = LIST_APPEND );
+	SVX_DLLPUBLIC BOOL						GetGraphic( ULONG nPos, Graphic& rGraphic, BOOL bProgress = FALSE );
+	SVX_DLLPUBLIC BOOL						InsertGraphic( const Graphic& rGraphic, ULONG nInsertPos = LIST_APPEND );
 
-	BOOL						GetModel( ULONG nPos, SdrModel& rModel, BOOL bProgress = FALSE );
-	BOOL						InsertModel( const FmFormModel& rModel, ULONG nInsertPos = LIST_APPEND );
+	SVX_DLLPUBLIC BOOL						GetModel( ULONG nPos, SdrModel& rModel, BOOL bProgress = FALSE );
+	SVX_DLLPUBLIC BOOL						InsertModel( const FmFormModel& rModel, ULONG nInsertPos = LIST_APPEND );
 
 	BOOL						GetModelStream( ULONG nPos, SotStorageStreamRef& rModelStreamRef, BOOL bProgress = FALSE );
 	BOOL						InsertModelStream( const SotStorageStreamRef& rModelStream, ULONG nInsertPos = LIST_APPEND );
diff --git svx/inc/svdglob.hxx svx/inc/svdglob.hxx
index 87eb126..dbf584a 100644
--- svx/inc/svdglob.hxx
+++ svx/inc/svdglob.hxx
@@ -33,11 +33,11 @@
 
 #include <tools/contnr.hxx>
 
-#ifndef _RESID_HXX //autogen
 #include <tools/resid.hxx>
-#endif
 #include <tools/string.hxx>
 
+#include <svx/svxdllapi.h>
+
 //************************************************************
 //   Vorausdeklarationen
 //************************************************************
@@ -64,7 +64,7 @@ public:
 // IDs von SDR_StringCacheBegin (256) bis
 // SDR_StringCacheEnd (weiss ich grad' nicht).
 // Hierzu siehe auch SvdStr.Hrc
-String ImpGetResStr(sal_uInt16 nResID);
+SVX_DLLPUBLIC String ImpGetResStr(sal_uInt16 nResID);
 
 ////////////////////////////////////////////////////////////////////////////////////////////////////
 
diff --git svx/inc/svx/AccessibleContextBase.hxx svx/inc/svx/AccessibleContextBase.hxx
index 480392a..c1f98a5 100644
--- svx/inc/svx/AccessibleContextBase.hxx
+++ svx/inc/svx/AccessibleContextBase.hxx
@@ -1,37 +1,5 @@
 /*************************************************************************
  *
-<<<<<<< AccessibleContextBase.hxx
- *  OpenOffice.org - a multi-platform office productivity suite
- *
- *  $RCSfile: AccessibleContextBase.hxx,v $
- *
- *  $Revision: 1.4 $
- *
- *  last change: $Author: rt $ $Date: 2008-07-07 14:27:26 $
- *
- *  The Contents of this file are made available subject to
- *  the terms of GNU Lesser General Public License Version 2.1.
- *
- *
- *    GNU Lesser General Public License Version 2.1
- *    =============================================
- *    Copyright 2005 by Sun Microsystems, Inc.
- *    901 San Antonio Road, Palo Alto, CA 94303, USA
- *
- *    This library is free software; you can redistribute it and/or
- *    modify it under the terms of the GNU Lesser General Public
- *    License version 2.1, as published by the Free Software Foundation.
- *
- *    This library is distributed in the hope that it will be useful,
- *    but WITHOUT ANY WARRANTY; without even the implied warranty of
- *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *    Lesser General Public License for more details.
- *
- *    You should have received a copy of the GNU Lesser General Public
- *    License along with this library; if not, write to the Free Software
- *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- *    MA  02111-1307  USA
-=======
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  * 
  * Copyright 2008 by Sun Microsystems, Inc.
@@ -57,7 +25,6 @@
  * version 3 along with OpenOffice.org.  If not, see
  * <http://www.openoffice.org/license.html>
  * for a copy of the LGPLv3 License.
->>>>>>> 1.3
  *
  ************************************************************************/
 
diff --git svx/inc/svx/AccessibleControlShape.hxx svx/inc/svx/AccessibleControlShape.hxx
index 326d57e..276746f 100644
--- svx/inc/svx/AccessibleControlShape.hxx
+++ svx/inc/svx/AccessibleControlShape.hxx
@@ -31,13 +31,9 @@
 #ifndef _SVX_ACCESSIBILITY_ACCESSIBLE_CONTROL_SHAPE_HXX
 #define _SVX_ACCESSIBILITY_ACCESSIBLE_CONTROL_SHAPE_HXX
 
-#ifndef _SVX_ACCESSIBILITY_ACCESSIBLE_SHAPE_MANAGER_HXX
 #include <svx/AccessibleShape.hxx>
-#endif
 
-#ifndef _COM_SUN_STAR_ACCESSIBILITY_XACCESSIBLE_ACTION_HPP_
 #include <com/sun/star/accessibility/XAccessibleAction.hpp>
-#endif
 #include <com/sun/star/accessibility/XAccessibleEventListener.hpp>
 #include <com/sun/star/util/XModeChangeBroadcaster.hpp>
 #include <com/sun/star/container/XContainerListener.hpp>
diff --git svx/inc/svx/escherex.hxx svx/inc/svx/escherex.hxx
index d7b7184..6c437cb 100644
--- svx/inc/svx/escherex.hxx
+++ svx/inc/svx/escherex.hxx
@@ -305,6 +305,8 @@
 #define ESCHER_ShpInst_ActionButtonMovie	200
 #define ESCHER_ShpInst_HostControl			201
 #define ESCHER_ShpInst_TextBox				202
+
+#define ESCHER_ShpInst_COUNT                203
 #define ESCHER_ShpInst_Max					0x0FFF
 #define ESCHER_ShpInst_Nil					ESCHER_ShpInst_Max
 
@@ -961,10 +963,35 @@ namespace com { namespace sun { namespace star {
 		struct Gradient;
 	}
 	namespace drawing {
+		struct EnhancedCustomShapeAdjustmentValue;
 		class XShape;
 	}
 }}}
 
+struct SVX_DLLPUBLIC EscherConnectorListEntry
+{
+	::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape	>	mXConnector;
+	::com::sun::star::awt::Point			maPointA;
+	::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape	>	mXConnectToA;
+	::com::sun::star::awt::Point			maPointB;
+	::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape	>	mXConnectToB;
+
+	sal_uInt32		GetConnectorRule( sal_Bool bFirst );
+
+					EscherConnectorListEntry( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > & rC,
+										const ::com::sun::star::awt::Point& rPA,
+										::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > & rSA ,
+										const ::com::sun::star::awt::Point& rPB,
+										::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > & rSB ) :
+											mXConnector	( rC ),
+											maPointA	( rPA ),
+											mXConnectToA( rSA ),
+											maPointB	( rPB ),
+											mXConnectToB( rSB ) {}
+
+	sal_uInt32		GetClosestPoint( const Polygon& rPoly, const ::com::sun::star::awt::Point& rP );
+};
+
 struct SVX_DLLPUBLIC EscherExContainer
 {
 	sal_uInt32	nContPos;
@@ -1109,8 +1136,19 @@ public:
 #define ESCHER_CREATEPOLYGON_POLYLINE		2
 #define ESCHER_CREATEPOLYGON_POLYPOLYGON	4
 
-struct EscherPropSortStruct;
 class GraphicAttr;
+class SdrObjCustomShape;
+
+struct EscherPropSortStruct
+{
+	sal_uInt8*	pBuf;
+	sal_uInt32	nPropSize;
+	sal_uInt32	nPropValue;
+	sal_uInt16	nPropId;
+};
+
+typedef std::vector< EscherPropSortStruct > EscherProperties;
+
 class SVX_DLLPUBLIC EscherPropertyContainer
 {
 		EscherGraphicProvider*	pGraphicProvider;
@@ -1155,6 +1193,10 @@ class SVX_DLLPUBLIC EscherPropertyContainer
 							sal_uInt8* pProp, sal_uInt32 nPropSize );
 
 		sal_Bool	GetOpt( sal_uInt16 nPropertyID, sal_uInt32& rPropValue ) const;
+        
+		sal_Bool	GetOpt( sal_uInt16 nPropertyID, EscherPropSortStruct& rPropValue ) const;
+
+		EscherProperties GetOpts() const;
 
 		void		Commit( SvStream& rSt, sal_uInt16 nVersion = 3, sal_uInt16 nRecType = ESCHER_OPT );
 
@@ -1203,6 +1245,14 @@ class SVX_DLLPUBLIC EscherPropertyContainer
 		static PolyPolygon GetPolyPolygon( const ::com::sun::star::uno::Any& rSource );
         static MSO_SPT GetCustomShapeType( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > & rXShape, sal_uInt32& nMirrorFlags );
 		static MSO_SPT GetCustomShapeType( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > & rXShape, sal_uInt32& nMirrorFlags, rtl::OUString& rShapeType );
+
+	// helper functions which are also used in ooxml export
+	static sal_Bool GetLineArrow( const sal_Bool bLineStart,
+				      const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > & rXPropSet,
+				      ESCHER_LineEnd& reLineEnd, sal_Int32& rnArrowLength, sal_Int32& rnArrowWidth );
+	static sal_Bool IsDefaultObject( SdrObjCustomShape* pCustoShape );
+	static void LookForPolarHandles( const MSO_SPT eShapeType, sal_Int32& nAdjustmentsWhichNeedsToBeConverted );
+	static sal_Bool GetAdjustmentValue( const com::sun::star::drawing::EnhancedCustomShapeAdjustmentValue & rkProp, sal_Int32 nIndex, sal_Int32 nAdjustmentsWhichNeedsToBeConverted, sal_Int32& nValue );
 };
 
 // ---------------------------------------------------------------------------------------------
@@ -1357,7 +1407,7 @@ class SVX_DLLPUBLIC EscherEx : public EscherPersistTable, public EscherGraphicPr
 		BOOL					mbOleEmf;					// OLE is EMF instead of WMF
 
 
-		BOOL	DoSeek( UINT32 nKey );
+		virtual BOOL DoSeek( UINT32 nKey );
 
 	public:
 
@@ -1368,7 +1418,7 @@ class SVX_DLLPUBLIC EscherEx : public EscherPersistTable, public EscherGraphicPr
 				/// Wenn pPicStreamMergeBSE angegeben ist, werden die BLIPs
 				/// aus diesem Stream in die MsofbtBSE Records des EscherStream
 				/// gemerged, wie es fuer Excel (und Word?) benoetigt wird.
-		void	Flush( SvStream* pPicStreamMergeBSE = NULL );
+		virtual void Flush( SvStream* pPicStreamMergeBSE = NULL );
 
 	virtual		~EscherEx();
 
@@ -1379,13 +1429,13 @@ class SVX_DLLPUBLIC EscherEx : public EscherPersistTable, public EscherGraphicPr
 
 		void	InsertPersistOffset( UINT32 nKey, UINT32 nOffset );	// Es wird nicht geprueft, ob sich jener schluessel schon in der PersistantTable befindet
 		BOOL	SeekToPersistOffset( UINT32 nKey );
-		BOOL	InsertAtPersistOffset( UINT32 nKey, UINT32 nValue );// nValue wird im Stream an entrsprechender Stelle eingefuegt(overwrite modus), ohne dass sich die
+		virtual BOOL InsertAtPersistOffset( UINT32 nKey, UINT32 nValue );// nValue wird im Stream an entrsprechender Stelle eingefuegt(overwrite modus), ohne dass sich die
 																	// aktuelle StreamPosition aendert
 
 		SvStream&	GetStream() const	{ return *mpOutStrm; }
 		ULONG	GetStreamPos() const	{ return mpOutStrm->Tell(); }
 
-		BOOL	SeekBehindRecHeader( UINT16 nRecType );				// der stream muss vor einem gueltigen Record Header oder Atom stehen
+		virtual BOOL SeekBehindRecHeader( UINT16 nRecType );				// der stream muss vor einem gueltigen Record Header oder Atom stehen
 
 				// features beim erzeugen folgender Container:
 				//
@@ -1397,23 +1447,26 @@ class SVX_DLLPUBLIC EscherEx : public EscherPersistTable, public EscherGraphicPr
 		virtual void OpenContainer( UINT16 nEscherContainer, int nRecInstance = 0 );
 		virtual void CloseContainer();
 
-		void	BeginAtom();
-		void	EndAtom( UINT16 nRecType, int nRecVersion = 0, int nRecInstance = 0 );
-		void	AddAtom( UINT32 nAtomSitze, UINT16 nRecType, int nRecVersion = 0, int nRecInstance = 0 );
-		void	AddClientAnchor( const Rectangle& rRectangle );
+		virtual void BeginAtom();
+		virtual void EndAtom( UINT16 nRecType, int nRecVersion = 0, int nRecInstance = 0 );
+		virtual void AddAtom( UINT32 nAtomSitze, UINT16 nRecType, int nRecVersion = 0, int nRecInstance = 0 );
+		virtual void AddChildAnchor( const Rectangle& rRectangle );
+		virtual void AddClientAnchor( const Rectangle& rRectangle );
 
-        UINT32  EnterGroup( const String& rShapeName, const Rectangle* pBoundRect = 0 );
+		virtual UINT32 EnterGroup( const String& rShapeName, const Rectangle* pBoundRect = 0 );
 		UINT32	EnterGroup( const Rectangle* pBoundRect = NULL );
 		UINT32	GetGroupLevel() const { return mnGroupLevel; };
-		BOOL	SetGroupSnapRect( UINT32 nGroupLevel, const Rectangle& rRect );
-		BOOL	SetGroupLogicRect( UINT32 nGroupLevel, const Rectangle& rRect );
-		void	LeaveGroup();
+		virtual BOOL SetGroupSnapRect( UINT32 nGroupLevel, const Rectangle& rRect );
+		virtual BOOL SetGroupLogicRect( UINT32 nGroupLevel, const Rectangle& rRect );
+		virtual void LeaveGroup();
 
 				// ein ESCHER_Sp wird geschrieben ( Ein ESCHER_DgContainer muss dazu geoeffnet sein !!)
-		void	AddShape( UINT32 nShpInstance, UINT32 nFlagIds, UINT32 nShapeID = 0 );
+		virtual void AddShape( UINT32 nShpInstance, UINT32 nFlagIds, UINT32 nShapeID = 0 );
 				// reserviert eine ShapeId
 		UINT32	GetShapeID();
 
+		virtual void Commit( EscherPropertyContainer& rProps, const Rectangle& rRect );
+
 		UINT32	GetColor( const UINT32 nColor, BOOL bSwap = TRUE );
 		UINT32	GetColor( const Color& rColor, BOOL bSwap = TRUE );
 
diff --git svx/inc/svx/framelink.hxx svx/inc/svx/framelink.hxx
index e626360..2bf5138 100644
--- svx/inc/svx/framelink.hxx
+++ svx/inc/svx/framelink.hxx
@@ -325,7 +325,7 @@ inline double GetVerDiagAngle( const Rectangle& rRect )
     @param fAngle
         Inner (right) angle between diagonal and horizontal frame border.
  */
-long GetTLDiagOffset( long nVerOffs, long nDiagOffs, double fAngle );
+SVX_DLLPUBLIC long GetTLDiagOffset( long nVerOffs, long nDiagOffs, double fAngle );
 
 /** Returns an X coordinate for a diagonal frame border in the specified height.
 
@@ -434,7 +434,7 @@ long GetTRDiagOffset( long nVerOffs, long nDiagOffs, double fAngle );
         True, if rLBorder and rRBorder can be drawn in one step without
         interruption at their connection point.
  */
-bool CheckFrameBorderConnectable(
+SVX_DLLPUBLIC bool CheckFrameBorderConnectable(
     const Style&        rLBorder,       /// Style of the left frame border to connect.
     const Style&        rRBorder,       /// Style of the right frame border to connect.
 
@@ -486,7 +486,7 @@ bool CheckFrameBorderConnectable(
                     |       \                       /       |
                  rLFromB      \                   /      rRFromB
  */
-void DrawHorFrameBorder(
+SVX_DLLPUBLIC void DrawHorFrameBorder(
     OutputDevice&       rDev,           /// The output device used to draw the frame border.
 
     const Point&        rLPos,          /// Reference point for left end of the processed frame border.
@@ -603,7 +603,7 @@ void SVX_DLLPUBLIC DrawHorFrameBorder(
                  rBFromB
                     |
  */
-void DrawVerFrameBorder(
+SVX_DLLPUBLIC void DrawVerFrameBorder(
     OutputDevice&       rDev,           /// The output device used to draw the frame border.
 
     const Point&        rTPos,          /// Reference point for top end of the processed frame border.
@@ -698,7 +698,7 @@ void SVX_DLLPUBLIC DrawVerFrameBorderSlanted(
 
     The function preserves all settings of the passed output device.
  */
-void DrawDiagFrameBorders(
+SVX_DLLPUBLIC void DrawDiagFrameBorders(
     OutputDevice&       rDev,           /// The output device used to draw the frame border.
 
     const Rectangle&    rRect,          /// Rectangle for both diagonal frame borders.
diff --git svx/inc/svx/msdffimp.hxx svx/inc/svx/msdffimp.hxx
index 2b42844..781202a 100644
--- svx/inc/svx/msdffimp.hxx
+++ svx/inc/svx/msdffimp.hxx
@@ -36,9 +36,7 @@
 #include <tools/solar.h>		// UINTXX
 #include <svtools/svarray.hxx>
 
-#ifndef _SV_COLOR_HXX //autogen
 #include <tools/color.hxx>
-#endif
 #include <tools/gen.hxx>
 #include <tools/table.hxx>
 #include <svx/msdffdef.hxx>
@@ -48,7 +46,7 @@
 
 #include <map>
 #include <com/sun/star/beans/XPropertySet.hpp>
-#include "svx/svxdllapi.h"
+#include <svx/svxdllapi.h>
 
 #include <sot/storage.hxx>
 
diff --git svx/inc/svx/obj3d.hxx svx/inc/svx/obj3d.hxx
index 3b218ef..27dfc81 100644
--- svx/inc/svx/obj3d.hxx
+++ svx/inc/svx/obj3d.hxx
@@ -92,8 +92,8 @@ class E3dObjList : public SdrObjList
 public:
 	TYPEINFO();
 	E3dObjList(SdrModel* pNewModel = 0, SdrPage* pNewPage = 0, E3dObjList* pNewUpList = 0);
-	E3dObjList(const E3dObjList& rSrcList);
-	virtual ~E3dObjList();
+	SVX_DLLPUBLIC E3dObjList(const E3dObjList& rSrcList);
+	SVX_DLLPUBLIC virtual ~E3dObjList();
 
 	virtual void NbcInsertObject(SdrObject* pObj, ULONG nPos=CONTAINER_APPEND, const SdrInsertReason* pReason=NULL);
 	virtual void InsertObject(SdrObject* pObj, ULONG nPos=CONTAINER_APPEND, const SdrInsertReason* pReason=NULL);
diff --git svx/inc/svx/sdasaitm.hxx svx/inc/svx/sdasaitm.hxx
index e3950a9..fa0c69b 100644
--- svx/inc/svx/sdasaitm.hxx
+++ svx/inc/svx/sdasaitm.hxx
@@ -54,9 +54,9 @@ class SdrCustomShapeAdjustmentItem : public SfxPoolItem
 	public :
 
 			TYPEINFO();
-			SdrCustomShapeAdjustmentItem();
+			SVX_DLLPUBLIC SdrCustomShapeAdjustmentItem();
 			SdrCustomShapeAdjustmentItem( SvStream& rIn, sal_uInt16 nVersion );
-			~SdrCustomShapeAdjustmentItem();
+			SVX_DLLPUBLIC ~SdrCustomShapeAdjustmentItem();
 
 			virtual int					operator==( const SfxPoolItem& ) const;
 			virtual SfxItemPresentation GetPresentation(SfxItemPresentation ePresentation,
@@ -76,8 +76,8 @@ class SdrCustomShapeAdjustmentItem : public SfxPoolItem
 #endif
 
 			sal_uInt32							GetCount() const { return aAdjustmentValueList.Count(); };
-			const SdrCustomShapeAdjustmentValue&	GetValue( sal_uInt32 nIndex ) const;
-			void								SetValue( sal_uInt32 nIndex,
+			SVX_DLLPUBLIC const SdrCustomShapeAdjustmentValue&	GetValue( sal_uInt32 nIndex ) const;
+			SVX_DLLPUBLIC void								SetValue( sal_uInt32 nIndex,
 														const SdrCustomShapeAdjustmentValue& rVal );
 };
 
diff --git svx/inc/svx/sdgcpitm.hxx svx/inc/svx/sdgcpitm.hxx
index 041cfbd..7b8043c 100644
--- svx/inc/svx/sdgcpitm.hxx
+++ svx/inc/svx/sdgcpitm.hxx
@@ -38,7 +38,7 @@
 // SdrGrafCropItem -
 //------------------
 
-class SdrGrafCropItem : public SvxGrfCrop
+class SVX_DLLPUBLIC SdrGrafCropItem : public SvxGrfCrop
 {
 public:
 
diff --git svx/inc/svx/sdr/animation/objectanimator.hxx svx/inc/svx/sdr/animation/objectanimator.hxx
index ad08f72..d222271 100644
--- svx/inc/svx/sdr/animation/objectanimator.hxx
+++ svx/inc/svx/sdr/animation/objectanimator.hxx
@@ -48,7 +48,7 @@ namespace sdr
 		public:
 			// basic constructor and destructor
 			primitiveAnimator();
-			virtual ~primitiveAnimator();
+			SVX_DLLPUBLIC virtual ~primitiveAnimator();
 		};
 	} // end of namespace animation
 } // end of namespace sdr
diff --git svx/inc/svx/sdr/animation/scheduler.hxx svx/inc/svx/sdr/animation/scheduler.hxx
index f51379e..79104cb 100644
--- svx/inc/svx/sdr/animation/scheduler.hxx
+++ svx/inc/svx/sdr/animation/scheduler.hxx
@@ -33,6 +33,7 @@
 
 #include <sal/types.h>
 #include <vcl/timer.hxx>
+#include <svx/svxdllapi.h>
 
 //////////////////////////////////////////////////////////////////////////////
 // event class
@@ -52,7 +53,7 @@ namespace sdr
 		public:
 			// constructor/destructor
 			Event(sal_uInt32 nTime);
-			virtual ~Event();
+			SVX_DLLPUBLIC virtual ~Event();
 
 			// access to mpNext
 			Event* GetNext() const;
@@ -83,7 +84,7 @@ namespace sdr
 		public:
 			// constructor/destructor
 			EventList();
-			virtual ~EventList();
+			SVX_DLLPUBLIC virtual ~EventList();
 
 			// insert/remove time dependent
 			void Insert(Event* pNew);
@@ -123,10 +124,10 @@ namespace sdr
 		public:
 			// constructor/destructor
 			Scheduler();
-			virtual ~Scheduler();
+			SVX_DLLPUBLIC virtual ~Scheduler();
 
 			// From baseclass Timer, the timeout call
-			virtual void Timeout();
+			SVX_DLLPUBLIC virtual void Timeout();
 
 			// get time
 			sal_uInt32 GetTime();
diff --git svx/inc/svx/sdr/primitive2d/primitiveFactory2d.hxx svx/inc/svx/sdr/primitive2d/primitiveFactory2d.hxx
index 757b5f1..cdd3d62 100644
--- svx/inc/svx/sdr/primitive2d/primitiveFactory2d.hxx
+++ svx/inc/svx/sdr/primitive2d/primitiveFactory2d.hxx
@@ -36,6 +36,8 @@
 #include <cppuhelper/compbase1.hxx>
 #include <comphelper/broadcasthelper.hxx>
 
+#include <svx/svxdllapi.h>
+
 //////////////////////////////////////////////////////////////////////////////
 // UNO API helper methods
 
@@ -43,7 +45,7 @@ namespace drawinglayer
 {
 	namespace primitive2d
 	{
-		::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > SAL_CALL XPrimitiveFactory2DProvider_createInstance(const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory > & rSMgr) throw( ::com::sun::star::uno::Exception );
+		SVX_DLLPUBLIC ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > SAL_CALL XPrimitiveFactory2DProvider_createInstance(const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory > & rSMgr) throw( ::com::sun::star::uno::Exception );
 	} // end of namespace primitive2d
 } // end of namespace drawinglayer
 
@@ -73,8 +75,8 @@ namespace drawinglayer
 			virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Reference< ::com::sun::star::graphic::XPrimitive2D > > SAL_CALL createPrimitivesFromXDrawPage( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XDrawPage >& xDrawPage, const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue >& aParms ) throw (::com::sun::star::uno::RuntimeException);
 
 			// UNO API helpers
-			static rtl::OUString getImplementationName_Static();
-			static com::sun::star::uno::Sequence< rtl::OUString > getSupportedServiceNames_Static();
+			SVX_DLLPUBLIC static rtl::OUString getImplementationName_Static();
+			SVX_DLLPUBLIC static com::sun::star::uno::Sequence< rtl::OUString > getSupportedServiceNames_Static();
 		};
 	} // end of namespace primitive2d
 } // end of namespace drawinglayer
diff --git svx/inc/svx/sdtfchim.hxx svx/inc/svx/sdtfchim.hxx
index bda0890..a1c912b 100644
--- svx/inc/svx/sdtfchim.hxx
+++ svx/inc/svx/sdtfchim.hxx
@@ -37,7 +37,7 @@ class SdrTextFixedCellHeightItem : public SfxBoolItem
 public:
 
 	TYPEINFO();
-	SdrTextFixedCellHeightItem( BOOL bUseFixedCellHeight = FALSE );
+	SVX_DLLPUBLIC SdrTextFixedCellHeightItem( BOOL bUseFixedCellHeight = FALSE );
 	SdrTextFixedCellHeightItem( SvStream & rStream, sal_uInt16 nVersion );
 
 	virtual SfxItemPresentation GetPresentation(SfxItemPresentation ePresentation,
diff --git svx/inc/svx/svdetc.hxx svx/inc/svx/svdetc.hxx
index ef2b48b..1f2c461 100644
--- svx/inc/svx/svdetc.hxx
+++ svx/inc/svx/svdetc.hxx
@@ -81,7 +81,7 @@ friend class SdrAttrObj;
 	Fraction   aMapFraction;
 
 private:
-	SVX_DLLPRIVATE static SdrEngineDefaults& GetDefaults();
+	static SdrEngineDefaults& GetDefaults();
 
 public:
 	SdrEngineDefaults();
@@ -272,7 +272,7 @@ protected:
 public:
 	SdrLinkList(): aList(1024,4,4)        {}
 	~SdrLinkList()                        { Clear(); }
-	void Clear();
+	SVX_DLLPUBLIC void Clear();
 	unsigned GetLinkCount() const            { return (unsigned)aList.Count(); }
 	Link& GetLink(unsigned nNum)             { return *((Link*)(aList.GetObject(nNum))); }
 	const Link& GetLink(unsigned nNum) const { return *((Link*)(aList.GetObject(nNum))); }
@@ -299,7 +299,7 @@ class OLEObjCache : public Container
 
 public:
 	OLEObjCache();
-	~OLEObjCache();
+	SVX_DLLPUBLIC ~OLEObjCache();
 
 	void SetSize(ULONG nNewSize);
 	void InsertObj(SdrOle2Obj* pObj);
diff --git svx/inc/svx/svdmodel.hxx svx/inc/svx/svdmodel.hxx
index 959ccdc..c1741d3 100644
--- svx/inc/svx/svdmodel.hxx
+++ svx/inc/svx/svdmodel.hxx
@@ -688,7 +688,7 @@ public:
 	void		SetModelStorage( SotStorage* pStor ) { pModelStorage = pStor; }
 
 	::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > getUnoModel();
-	void setUnoModel( ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > xModel ) { mxUnoModel = xModel; }
+	void setUnoModel( ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > xModel );
 
 	// these functions are used by the api to disable repaints during a
 	// set of api calls.
diff --git svx/inc/svx/svdoashp.hxx svx/inc/svx/svdoashp.hxx
index 9a24cf4..10b5103 100644
--- svx/inc/svx/svdoashp.hxx
+++ svx/inc/svx/svdoashp.hxx
@@ -105,7 +105,7 @@ private:
 	// #i37011# render geometry shadow
 	SdrObject*											mpLastShadowGeometry;
 
-	static SVX_DLLPRIVATE com::sun::star::uno::Reference< com::sun::star::drawing::XCustomShapeEngine > GetCustomShapeEngine( const SdrObjCustomShape* pCustomShape );
+	static com::sun::star::uno::Reference< com::sun::star::drawing::XCustomShapeEngine > GetCustomShapeEngine( const SdrObjCustomShape* pCustomShape );
 
 //	SVX_DLLPRIVATE com::sun::star::uno::Sequence< com::sun::star::uno::Reference< com::sun::star::drawing::XCustomShapeHandle > >
 //		SdrObjCustomShape::GetInteraction( const SdrObjCustomShape* pCustomShape ) const;
@@ -134,7 +134,7 @@ public:
 	const SdrObject* GetSdrObjectShadowFromCustomShape() const;
 	sal_Bool GetTextBounds( Rectangle& rTextBound ) const;
 	sal_Bool IsTextPath() const;
-	static SVX_DLLPRIVATE basegfx::B2DPolyPolygon GetLineGeometry( const SdrObjCustomShape* pCustomShape, const sal_Bool bBezierAllowed );
+	static basegfx::B2DPolyPolygon GetLineGeometry( const SdrObjCustomShape* pCustomShape, const sal_Bool bBezierAllowed );
 
 protected:
 
diff --git svx/inc/svx/svdoedge.hxx svx/inc/svx/svdoedge.hxx
index 352befd..4947307 100644
--- svx/inc/svx/svdoedge.hxx
+++ svx/inc/svx/svdoedge.hxx
@@ -73,7 +73,7 @@ protected:
 
 public:
 	SdrObjConnection() { ResetVars(); }
-	~SdrObjConnection();
+	SVX_DLLPUBLIC ~SdrObjConnection();
 
 	void ResetVars();
 	FASTBOOL TakeGluePoint(SdrGluePoint& rGP, FASTBOOL bSetAbsolutePos) const;
diff --git svx/inc/svx/svdotext.hxx svx/inc/svx/svdotext.hxx
index 18c4a42..ea2588a 100644
--- svx/inc/svx/svdotext.hxx
+++ svx/inc/svx/svdotext.hxx
@@ -263,7 +263,7 @@ protected:
     // flag for preventing recursive onEditOutlinerStatusEvent calls
 	BOOL					    mbInDownScale : 1;
 
-	SVX_DLLPRIVATE SdrOutliner& ImpGetDrawOutliner() const;
+	SdrOutliner& ImpGetDrawOutliner() const;
 
 private:
 	SVX_DLLPRIVATE void ImpCheckMasterCachable();
diff --git svx/inc/svx/svdpntv.hxx svx/inc/svx/svdpntv.hxx
index c295be3..ba64d65 100644
--- svx/inc/svx/svdpntv.hxx
+++ svx/inc/svx/svdpntv.hxx
@@ -109,7 +109,7 @@ namespace sdr
 ////////////////////////////////////////////////////////////////////////////////////////////////////
 
 
-class SvxViewHint : public SfxHint
+class SVX_DLLPUBLIC SvxViewHint : public SfxHint
 {
 public:
     enum HintType { SVX_HINT_VIEWCHANGED };
diff --git svx/inc/svx/svdundo.hxx svx/inc/svx/svdundo.hxx
index 0ec1e0c..2ec497b 100644
--- svx/inc/svx/svdundo.hxx
+++ svx/inc/svx/svdundo.hxx
@@ -754,7 +754,7 @@ protected:
 	SdrUndoPageMasterPage(SdrPage& rChangedPage);
 
 public:
-	virtual ~SdrUndoPageMasterPage();
+	SVX_DLLPUBLIC virtual ~SdrUndoPageMasterPage();
 };
 
 //************************************************************
diff --git svx/inc/svx/svx3ditems.hxx svx/inc/svx/svx3ditems.hxx
index e003557..743ea3a 100644
--- svx/inc/svx/svx3ditems.hxx
+++ svx/inc/svx/svx3ditems.hxx
@@ -48,12 +48,12 @@ public:
 
 class Svx3DBackscaleItem : public SfxUInt16Item {
 public:
-	Svx3DBackscaleItem(sal_uInt16 nVal = 100);
+	SVX_DLLPUBLIC Svx3DBackscaleItem(sal_uInt16 nVal = 100);
 };
 
 class Svx3DDepthItem : public SfxUInt32Item {
 public:
-	Svx3DDepthItem(sal_uInt32 nVal = 1000);
+	SVX_DLLPUBLIC Svx3DDepthItem(sal_uInt32 nVal = 1000);
 };
 
 class SVX_DLLPUBLIC Svx3DHorizontalSegmentsItem : public SfxUInt32Item {
@@ -63,12 +63,12 @@ public:
 
 class Svx3DVerticalSegmentsItem : public SfxUInt32Item {
 public:
-	Svx3DVerticalSegmentsItem(sal_uInt32 nVal = 24);
+	SVX_DLLPUBLIC Svx3DVerticalSegmentsItem(sal_uInt32 nVal = 24);
 };
 
 class Svx3DEndAngleItem : public SfxUInt32Item {
 public:
-	Svx3DEndAngleItem(sal_uInt32 nVal = 3600);
+	SVX_DLLPUBLIC Svx3DEndAngleItem(sal_uInt32 nVal = 3600);
 };
 
 class SVX_DLLPUBLIC Svx3DDoubleSidedItem : public SfxBoolItem {
@@ -85,29 +85,29 @@ public:
 	virtual sal_uInt16 GetVersion(sal_uInt16 nFileFormatVersion) const;
 };
 
-class Svx3DNormalsKindItem : public SfxUInt16Item {
+class SVX_DLLPUBLIC Svx3DNormalsKindItem : public SfxUInt16Item {
 public:
 	Svx3DNormalsKindItem(sal_uInt16 nVal = 0);
 
 	// use drawing::NormalsKind
-	virtual	sal_Bool QueryValue( com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 ) const;
-	virtual	sal_Bool PutValue( const com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 );
-	virtual SfxPoolItem* Clone(SfxItemPool* pPool = NULL) const;
+	SVX_DLLPRIVATE virtual	sal_Bool QueryValue( com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 ) const;
+	SVX_DLLPRIVATE virtual	sal_Bool PutValue( const com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 );
+	SVX_DLLPRIVATE virtual SfxPoolItem* Clone(SfxItemPool* pPool = NULL) const;
 };
 
 class Svx3DNormalsInvertItem : public SfxBoolItem {
 public:
-	Svx3DNormalsInvertItem(BOOL bVal = 0);
+	SVX_DLLPUBLIC Svx3DNormalsInvertItem(BOOL bVal = 0);
 };
 
-class Svx3DTextureProjectionXItem : public SfxUInt16Item {
+class SVX_DLLPUBLIC Svx3DTextureProjectionXItem : public SfxUInt16Item {
 public:
 	Svx3DTextureProjectionXItem(sal_uInt16 nVal = 0);
 
 	// use drawing::TextureProjectionMode
-	virtual	sal_Bool QueryValue( com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 ) const;
-	virtual	sal_Bool PutValue( const com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 );
-	virtual SfxPoolItem* Clone(SfxItemPool* pPool = NULL) const;
+	SVX_DLLPRIVATE virtual	sal_Bool QueryValue( com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 ) const;
+	SVX_DLLPRIVATE virtual	sal_Bool PutValue( const com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 );
+	SVX_DLLPRIVATE virtual SfxPoolItem* Clone(SfxItemPool* pPool = NULL) const;
 };
 
 class SVX_DLLPUBLIC Svx3DTextureProjectionYItem : public SfxUInt16Item {
@@ -122,7 +122,7 @@ public:
 
 class Svx3DShadow3DItem : public SfxBoolItem {
 public:
-	Svx3DShadow3DItem(BOOL bVal = 0);
+	SVX_DLLPUBLIC Svx3DShadow3DItem(BOOL bVal = 0);
 };
 
 class Svx3DMaterialColorItem : public SvxColorItem {
@@ -132,68 +132,68 @@ public:
 
 class Svx3DMaterialEmissionItem : public SvxColorItem {
 public:
-	Svx3DMaterialEmissionItem(const Color& rCol = Color(0x00000000));
+	SVX_DLLPUBLIC Svx3DMaterialEmissionItem(const Color& rCol = Color(0x00000000));
 };
 
 class Svx3DMaterialSpecularItem : public SvxColorItem {
 public:
-	Svx3DMaterialSpecularItem(const Color& rCol = Color(0x00ffffff));
+	SVX_DLLPUBLIC Svx3DMaterialSpecularItem(const Color& rCol = Color(0x00ffffff));
 };
 
 class Svx3DMaterialSpecularIntensityItem : public SfxUInt16Item {
 public:
-	Svx3DMaterialSpecularIntensityItem(sal_uInt16 nVal = 15);
+	SVX_DLLPUBLIC Svx3DMaterialSpecularIntensityItem(sal_uInt16 nVal = 15);
 };
 
-class Svx3DTextureKindItem : public SfxUInt16Item {
+class SVX_DLLPUBLIC Svx3DTextureKindItem : public SfxUInt16Item {
 public:
 	Svx3DTextureKindItem(sal_uInt16 nVal = 3);
 
 	// use drawing::TextureKind
-	virtual	sal_Bool QueryValue( com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 ) const;
-	virtual	sal_Bool PutValue( const com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 );
-	virtual SfxPoolItem* Clone(SfxItemPool* pPool = NULL) const;
+	SVX_DLLPRIVATE virtual	sal_Bool QueryValue( com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 ) const;
+	SVX_DLLPRIVATE virtual	sal_Bool PutValue( const com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 );
+	SVX_DLLPRIVATE virtual SfxPoolItem* Clone(SfxItemPool* pPool = NULL) const;
 };
 
-class Svx3DTextureModeItem : public SfxUInt16Item {
+class SVX_DLLPUBLIC Svx3DTextureModeItem : public SfxUInt16Item {
 public:
 	Svx3DTextureModeItem(sal_uInt16 nVal = 2);
 
 	// use drawing:TextureMode
-	virtual	sal_Bool QueryValue( com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 ) const;
-	virtual	sal_Bool PutValue( const com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 );
-	virtual SfxPoolItem* Clone(SfxItemPool* pPool = NULL) const;
+	SVX_DLLPRIVATE virtual	sal_Bool QueryValue( com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 ) const;
+	SVX_DLLPRIVATE virtual	sal_Bool PutValue( const com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 );
+	SVX_DLLPRIVATE virtual SfxPoolItem* Clone(SfxItemPool* pPool = NULL) const;
 };
 
 class Svx3DTextureFilterItem : public SfxBoolItem {
 public:
-	Svx3DTextureFilterItem(BOOL bVal = 0);
+	SVX_DLLPUBLIC Svx3DTextureFilterItem(BOOL bVal = 0);
 };
 
 // Svx3D _3DSCENE_ Items
-class Svx3DPerspectiveItem : public SfxUInt16Item {
+class SVX_DLLPUBLIC Svx3DPerspectiveItem : public SfxUInt16Item {
 public:
 	Svx3DPerspectiveItem(sal_uInt16 nVal = (sal_uInt16)PR_PERSPECTIVE);
 
 	// use drawing::ProjectionMode
-	virtual	sal_Bool QueryValue( com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 ) const;
-	virtual	sal_Bool PutValue( const com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 );
-	virtual SfxPoolItem* Clone(SfxItemPool* pPool = NULL) const;
+	SVX_DLLPRIVATE virtual	sal_Bool QueryValue( com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 ) const;
+	SVX_DLLPRIVATE virtual	sal_Bool PutValue( const com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 );
+	SVX_DLLPRIVATE virtual SfxPoolItem* Clone(SfxItemPool* pPool = NULL) const;
 };
 
 class Svx3DDistanceItem : public SfxUInt32Item {
 public:
-	Svx3DDistanceItem(sal_uInt32 nVal = 100);
+	SVX_DLLPUBLIC Svx3DDistanceItem(sal_uInt32 nVal = 100);
 };
 
 class Svx3DFocalLengthItem : public SfxUInt32Item {
 public:
-	Svx3DFocalLengthItem(sal_uInt32 nVal = 100);
+	SVX_DLLPUBLIC Svx3DFocalLengthItem(sal_uInt32 nVal = 100);
 };
 
 class Svx3DTwoSidedLightingItem : public SfxBoolItem {
 public:
-	Svx3DTwoSidedLightingItem(BOOL bVal = 0);
+	SVX_DLLPUBLIC Svx3DTwoSidedLightingItem(BOOL bVal = 0);
 };
 
 class SVX_DLLPUBLIC Svx3DLightcolor1Item : public SvxColorItem {
@@ -323,17 +323,17 @@ public:
 
 class Svx3DShadowSlantItem : public SfxUInt16Item {
 public:
-	Svx3DShadowSlantItem(sal_uInt16 nVal = 0);
+	SVX_DLLPUBLIC Svx3DShadowSlantItem(sal_uInt16 nVal = 0);
 };
 
-class Svx3DShadeModeItem : public SfxUInt16Item {
+class SVX_DLLPUBLIC Svx3DShadeModeItem : public SfxUInt16Item {
 public:
 	Svx3DShadeModeItem(sal_uInt16 nVal = 2);
 
 	// use drawing::ShadeMode
-	virtual	sal_Bool QueryValue( com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 ) const;
-	virtual	sal_Bool PutValue( const com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 );
-	virtual SfxPoolItem* Clone(SfxItemPool* pPool = NULL) const;
+	SVX_DLLPRIVATE virtual	sal_Bool QueryValue( com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 ) const;
+	SVX_DLLPRIVATE virtual	sal_Bool PutValue( const com::sun::star::uno::Any& rVal, BYTE nMemberId = 0 );
+	SVX_DLLPRIVATE virtual SfxPoolItem* Clone(SfxItemPool* pPool = NULL) const;
 };
 
 //////////////////////////////////////////////////////////////////////////////
@@ -362,19 +362,19 @@ public:
 };
 
 // #107245# Item to replace bExtrudeCloseFront and bLatheCloseFront
-class Svx3DCloseFrontItem : public SfxBoolItem {
+class SVX_DLLPUBLIC Svx3DCloseFrontItem : public SfxBoolItem {
 public:
 	Svx3DCloseFrontItem(BOOL bVal = 1);
-	virtual SfxPoolItem* Create(SvStream& rIn, sal_uInt16 nItemVersion) const;
-	virtual sal_uInt16 GetVersion(sal_uInt16 nFileFormatVersion) const;
+	SVX_DLLPRIVATE virtual SfxPoolItem* Create(SvStream& rIn, sal_uInt16 nItemVersion) const;
+	SVX_DLLPRIVATE virtual sal_uInt16 GetVersion(sal_uInt16 nFileFormatVersion) const;
 };
 
 // #107245# Item to replace bExtrudeCloseBack and bLatheCloseBack
-class Svx3DCloseBackItem : public SfxBoolItem {
+class SVX_DLLPUBLIC Svx3DCloseBackItem : public SfxBoolItem {
 public:
 	Svx3DCloseBackItem(BOOL bVal = 1);
-	virtual SfxPoolItem* Create(SvStream& rIn, sal_uInt16 nItemVersion) const;
-	virtual sal_uInt16 GetVersion(sal_uInt16 nFileFormatVersion) const;
+	SVX_DLLPRIVATE virtual SfxPoolItem* Create(SvStream& rIn, sal_uInt16 nItemVersion) const;
+	SVX_DLLPRIVATE virtual sal_uInt16 GetVersion(sal_uInt16 nFileFormatVersion) const;
 };
 
 #endif // _SVX3DITEMS_HXX
diff --git svx/inc/svx/sxfiitm.hxx svx/inc/svx/sxfiitm.hxx
index 703c24f..45d4f68 100644
--- svx/inc/svx/sxfiitm.hxx
+++ svx/inc/svx/sxfiitm.hxx
@@ -40,7 +40,7 @@
 class SdrFractionItem: public SfxPoolItem {
 	Fraction nValue;
 public:
-	TYPEINFO();
+	TYPEINFO_VISIBILITY( SVX_DLLPUBLIC );
 	SdrFractionItem(USHORT nId=0): SfxPoolItem(nId) {}
 	SdrFractionItem(USHORT nId, const Fraction& rVal): SfxPoolItem(nId), nValue(rVal) {}
 	SdrFractionItem(USHORT nId, SvStream& rIn);
diff --git svx/inc/svx/unoprov.hxx svx/inc/svx/unoprov.hxx
index bafc403..0dd07ba 100644
--- svx/inc/svx/unoprov.hxx
+++ svx/inc/svx/unoprov.hxx
@@ -161,7 +161,7 @@ namespace comphelper { class PropertySetInfo; }
 class SvxPropertySetInfoPool
 {
 public:
-	static comphelper::PropertySetInfo* getOrCreate( sal_Int32 nServiceId ) throw();
+	SVX_DLLPUBLIC static comphelper::PropertySetInfo* getOrCreate( sal_Int32 nServiceId ) throw();
 
 private:
 	static comphelper::PropertySetInfo* mpInfos[SVXUNO_SERVICEID_LASTID+1];
diff --git svx/inc/svx/unotext.hxx svx/inc/svx/unotext.hxx
index b1ed690..8f4d716 100644
--- svx/inc/svx/unotext.hxx
+++ svx/inc/svx/unotext.hxx
@@ -664,7 +664,7 @@ public:
 
 };
 
-const SfxItemPropertyMap* ImplGetSvxUnoOutlinerTextCursorPropertyMap();
-const SfxItemPropertyMap* ImplGetSvxTextPortionPropertyMap();
+SVX_DLLPUBLIC const SfxItemPropertyMap* ImplGetSvxUnoOutlinerTextCursorPropertyMap();
+SVX_DLLPUBLIC const SfxItemPropertyMap* ImplGetSvxTextPortionPropertyMap();
 
 #endif
diff --git svx/inc/svx/xflbckit.hxx svx/inc/svx/xflbckit.hxx
index d541450..3b644e4 100644
--- svx/inc/svx/xflbckit.hxx
+++ svx/inc/svx/xflbckit.hxx
@@ -46,7 +46,7 @@ class XFillBackgroundItem : public SfxBoolItem
 public:
 							TYPEINFO();
 
-							XFillBackgroundItem( BOOL bFill = FALSE );
+							SVX_DLLPUBLIC XFillBackgroundItem( BOOL bFill = FALSE );
 							XFillBackgroundItem( SvStream& rIn );
 
 
diff --git svx/inc/svx/xflbmpit.hxx svx/inc/svx/xflbmpit.hxx
index 495cde4..950c629 100644
--- svx/inc/svx/xflbmpit.hxx
+++ svx/inc/svx/xflbmpit.hxx
@@ -43,7 +43,7 @@ class XFillBmpPosItem : public SfxEnumItem
 {
 public:
 							TYPEINFO();
-							XFillBmpPosItem( RECT_POINT eRP = RP_MM );
+							SVX_DLLPUBLIC XFillBmpPosItem( RECT_POINT eRP = RP_MM );
 							XFillBmpPosItem( SvStream& rIn );
 
 	virtual SfxPoolItem*    Clone( SfxItemPool* pPool = 0 ) const;
diff --git svx/inc/svx/xflbmsli.hxx svx/inc/svx/xflbmsli.hxx
index 0575203..fdf941d 100644
--- svx/inc/svx/xflbmsli.hxx
+++ svx/inc/svx/xflbmsli.hxx
@@ -43,7 +43,7 @@ class XFillBmpSizeLogItem : public SfxBoolItem
 {
 public:
 							TYPEINFO();
-							XFillBmpSizeLogItem( BOOL bLog = TRUE );
+							SVX_DLLPUBLIC XFillBmpSizeLogItem( BOOL bLog = TRUE );
 							XFillBmpSizeLogItem( SvStream& rIn );
 
 	virtual SfxPoolItem*    Clone( SfxItemPool* pPool = 0 ) const;
diff --git svx/inc/svx/xflbmsxy.hxx svx/inc/svx/xflbmsxy.hxx
index b4404f8..39f1f67 100644
--- svx/inc/svx/xflbmsxy.hxx
+++ svx/inc/svx/xflbmsxy.hxx
@@ -43,7 +43,7 @@ class XFillBmpSizeXItem : public SfxMetricItem
 {
 public:
 							TYPEINFO();
-							XFillBmpSizeXItem( long nSizeX = 0 );
+							SVX_DLLPUBLIC XFillBmpSizeXItem( long nSizeX = 0 );
 							XFillBmpSizeXItem( SvStream& rIn );
 
 	virtual SfxPoolItem*    Clone( SfxItemPool* pPool = 0 ) const;
@@ -70,7 +70,7 @@ class XFillBmpSizeYItem : public SfxMetricItem
 {
 public:
 							TYPEINFO();
-							XFillBmpSizeYItem( long nSizeY = 0 );
+							SVX_DLLPUBLIC XFillBmpSizeYItem( long nSizeY = 0 );
 							XFillBmpSizeYItem( SvStream& rIn );
 
 	virtual SfxPoolItem*    Clone( SfxItemPool* pPool = 0 ) const;
diff --git svx/inc/svx/xflboxy.hxx svx/inc/svx/xflboxy.hxx
index a2116f3..d6c8f7d 100644
--- svx/inc/svx/xflboxy.hxx
+++ svx/inc/svx/xflboxy.hxx
@@ -43,7 +43,7 @@ class XFillBmpPosOffsetXItem : public SfxUInt16Item
 {
 public:
 							TYPEINFO();
-							XFillBmpPosOffsetXItem( USHORT nOffPosX = 0 );
+							SVX_DLLPUBLIC XFillBmpPosOffsetXItem( USHORT nOffPosX = 0 );
 							XFillBmpPosOffsetXItem( SvStream& rIn );
 
 	virtual SfxPoolItem*    Clone( SfxItemPool* pPool = 0 ) const;
@@ -66,7 +66,7 @@ class XFillBmpPosOffsetYItem : public SfxUInt16Item
 {
 public:
 							TYPEINFO();
-							XFillBmpPosOffsetYItem( USHORT nOffPosY = 0 );
+							SVX_DLLPUBLIC XFillBmpPosOffsetYItem( USHORT nOffPosY = 0 );
 							XFillBmpPosOffsetYItem( SvStream& rIn );
 
 	virtual SfxPoolItem*    Clone( SfxItemPool* pPool = 0 ) const;
diff --git svx/inc/svx/xflbtoxy.hxx svx/inc/svx/xflbtoxy.hxx
index 336bb87..0830015 100644
--- svx/inc/svx/xflbtoxy.hxx
+++ svx/inc/svx/xflbtoxy.hxx
@@ -43,7 +43,7 @@ class XFillBmpTileOffsetXItem : public SfxUInt16Item
 {
 public:
 							TYPEINFO();
-							XFillBmpTileOffsetXItem( USHORT nOffX = 0 );
+							SVX_DLLPUBLIC XFillBmpTileOffsetXItem( USHORT nOffX = 0 );
 							XFillBmpTileOffsetXItem( SvStream& rIn );
 
 	virtual SfxPoolItem*    Clone( SfxItemPool* pPool = 0 ) const;
@@ -66,7 +66,7 @@ class XFillBmpTileOffsetYItem : public SfxUInt16Item
 {
 public:
 							TYPEINFO();
-							XFillBmpTileOffsetYItem( USHORT nOffX = 0 );
+							SVX_DLLPUBLIC XFillBmpTileOffsetYItem( USHORT nOffX = 0 );
 							XFillBmpTileOffsetYItem( SvStream& rIn );
 
 	virtual SfxPoolItem*    Clone( SfxItemPool* pPool = 0 ) const;
diff --git svx/inc/svx/xsflclit.hxx svx/inc/svx/xsflclit.hxx
index 788950c..ff9aba2 100644
--- svx/inc/svx/xsflclit.hxx
+++ svx/inc/svx/xsflclit.hxx
@@ -42,7 +42,7 @@ public:
 			TYPEINFO();
 			XSecondaryFillColorItem() {}
 			XSecondaryFillColorItem(long nIndex, const Color& rTheColor);
-			XSecondaryFillColorItem(const String& rName, const Color& rTheColor);
+			SVX_DLLPUBLIC XSecondaryFillColorItem(const String& rName, const Color& rTheColor);
 			XSecondaryFillColorItem(SvStream& rIn);
 
 	virtual SfxPoolItem*    Clone(SfxItemPool* pPool = 0) const;
diff --git svx/inc/unoapi.hxx svx/inc/unoapi.hxx
index 527bae4..09df9ff 100644
--- svx/inc/unoapi.hxx
+++ svx/inc/unoapi.hxx
@@ -97,12 +97,12 @@ SVX_DLLPUBLIC sal_Bool SvxFieldUnitToMeasureUnit( const short nVcl, short& eApi
 /** if the given name is a predefined name for the current language it is replaced by
 	the corresponding api name.
 */
-void SvxUnogetApiNameForItem( const sal_Int16 nWhich, const String& rInternalName, rtl::OUString& rApiName ) throw();
+SVX_DLLPUBLIC void SvxUnogetApiNameForItem( const sal_Int16 nWhich, const String& rInternalName, rtl::OUString& rApiName ) throw();
 
 /** if the given name is a predefined api name it is replaced by the predefined name
 	for the current	language.
 */
-void SvxUnogetInternalNameForItem( const sal_Int16 nWhich, const rtl::OUString& rApiName, String& rInternalName ) throw();
+SVX_DLLPUBLIC void SvxUnogetInternalNameForItem( const sal_Int16 nWhich, const rtl::OUString& rApiName, String& rInternalName ) throw();
 
 /** returns the which id for the given property name.  This only works for
     properties of shapes (map SVXMAP_SHAPE is used for searching)
@@ -114,10 +114,10 @@ void SvxUnogetInternalNameForItem( const sal_Int16 nWhich, const rtl::OUString&
 SVX_DLLPUBLIC sal_Int16 SvxUnoGetWhichIdForNamedProperty( const ::rtl::OUString & rPropName );
 
 /** converts the given any with a metric to 100th/mm if needed */
-void SvxUnoConvertToMM( const SfxMapUnit eSourceMapUnit, com::sun::star::uno::Any & rMetric ) throw();
+SVX_DLLPUBLIC void SvxUnoConvertToMM( const SfxMapUnit eSourceMapUnit, com::sun::star::uno::Any & rMetric ) throw();
 
 /** converts the given any with a metric from 100th/mm to the given metric if needed */
-void SvxUnoConvertFromMM( const SfxMapUnit eDestinationMapUnit, com::sun::star::uno::Any & rMetric ) throw();
+SVX_DLLPUBLIC void SvxUnoConvertFromMM( const SfxMapUnit eDestinationMapUnit, com::sun::star::uno::Any & rMetric ) throw();
 
 #endif // _SVX_UNOAPI_HXX_
 
diff --git svx/inc/unoedhlp.hxx svx/inc/unoedhlp.hxx
index 9cac7c7..74991a3 100644
--- svx/inc/unoedhlp.hxx
+++ svx/inc/unoedhlp.hxx
@@ -49,7 +49,7 @@ class EditEngine;
     case denotes the destination position, the two parameters the
     start and the end of the moved paragraph range.
  */
-class SvxEditSourceHint : public TextHint
+class SVX_DLLPUBLIC SvxEditSourceHint : public TextHint
 {
 private:
 	ULONG 	mnStart;
diff --git svx/inc/unolingu.hxx svx/inc/unolingu.hxx
index c81a389..b10353e 100644
--- svx/inc/unolingu.hxx
+++ svx/inc/unolingu.hxx
@@ -67,7 +67,7 @@ class SvxLinguConfigUpdate
 
 public:
 
-    static void UpdateAll( sal_Bool bForceCheck = sal_False );
+    SVX_DLLPUBLIC static void UpdateAll( sal_Bool bForceCheck = sal_False );
     static BOOL IsNeedUpdateAll( sal_Bool bForceCheck = sal_False );
 };
 
diff --git svx/inc/xexch.hxx svx/inc/xexch.hxx
index 46a0d55..7568186 100644
--- svx/inc/xexch.hxx
+++ svx/inc/xexch.hxx
@@ -60,7 +60,7 @@ public:
 			            // Zuweisungsoperator
 			            XFillExchangeData& operator=( const XFillExchangeData& rXFillExchangeData );
 
-	friend SvStream&    operator<<( SvStream& rOStm, const XFillExchangeData& rXFillExchangeData );
+	SVX_DLLPUBLIC friend SvStream&    operator<<( SvStream& rOStm, const XFillExchangeData& rXFillExchangeData );
 	SVX_DLLPUBLIC friend SvStream&    operator>>( SvStream& rIStm, XFillExchangeData& rXFillExchangeData );
 
 	static ULONG        RegisterClipboardFormatName();
diff --git svx/inc/xmlgrhlp.hxx svx/inc/xmlgrhlp.hxx
index 01ba9b5..d15853f 100644
--- svx/inc/xmlgrhlp.hxx
+++ svx/inc/xmlgrhlp.hxx
@@ -142,9 +142,9 @@ namespace svx
     uses eCreateMode == GRAPHICHELPER_MODE_READ, bDirect == TRUE in
     SvXMLGraphicHelper
  */
-::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > SAL_CALL SvXMLGraphicImportHelper_createInstance(const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory > & rSMgr) throw( ::com::sun::star::uno::Exception );
-::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL SvXMLGraphicImportHelper_getSupportedServiceNames() throw();
-::rtl::OUString SAL_CALL SvXMLGraphicImportHelper_getImplementationName() throw();
+SVX_DLLPUBLIC ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > SAL_CALL SvXMLGraphicImportHelper_createInstance(const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory > & rSMgr) throw( ::com::sun::star::uno::Exception );
+SVX_DLLPUBLIC ::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL SvXMLGraphicImportHelper_getSupportedServiceNames() throw();
+SVX_DLLPUBLIC ::rtl::OUString SAL_CALL SvXMLGraphicImportHelper_getImplementationName() throw();
 
 /** Create this with createInstanceWithArguments. service name
     "com.sun.star.comp.Svx.GraphicExportHelper", one argument which is the
@@ -158,9 +158,9 @@ namespace svx
     uses eCreateMode == GRAPHICHELPER_MODE_WRITE, bDirect == TRUE in
     SvXMLGraphicHelper
  */
-::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > SAL_CALL SvXMLGraphicExportHelper_createInstance(const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory > & rSMgr) throw( ::com::sun::star::uno::Exception );
-::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL SvXMLGraphicExportHelper_getSupportedServiceNames() throw();
-::rtl::OUString SAL_CALL SvXMLGraphicExportHelper_getImplementationName() throw();
+SVX_DLLPUBLIC ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > SAL_CALL SvXMLGraphicExportHelper_createInstance(const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory > & rSMgr) throw( ::com::sun::star::uno::Exception );
+SVX_DLLPUBLIC ::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL SvXMLGraphicExportHelper_getSupportedServiceNames() throw();
+SVX_DLLPUBLIC ::rtl::OUString SAL_CALL SvXMLGraphicExportHelper_getImplementationName() throw();
 }
 
 #endif
diff --git svx/inc/xoutbmp.hxx svx/inc/xoutbmp.hxx
index 498c0bd..d1f7afe 100644
--- svx/inc/xoutbmp.hxx
+++ svx/inc/xoutbmp.hxx
@@ -95,6 +95,6 @@ public:
 // - DitherBitmap -
 // ----------------
 
-BOOL DitherBitmap( Bitmap& rBitmap );
+SVX_DLLPUBLIC BOOL DitherBitmap( Bitmap& rBitmap );
 
 #endif // _XOUTBMP_HXX
diff --git svx/prj/d.lst svx/prj/d.lst
index fcd4d8b..119a6ea 100644
--- svx/prj/d.lst
+++ svx/prj/d.lst
@@ -10,7 +10,7 @@ mkdir: %_DEST%\xml%_EXT%\uiconfig\global\accelerator\es
 ..\%__SRC%\inc\svxslots.ilb %_DEST%\inc%_EXT%\svxslots.ilb
 ..\%__SRC%\inc\*.ilb* %_DEST%\inc%_EXT%\*.ilb*
 ..\%__SRC%\lib\lib*.* %_DEST%\lib%_EXT%\lib*.*
-..\%__SRC%\lib\isvx.lib %_DEST%\lib%_EXT%\isvx.lib
+..\%__SRC%\lib\isvx*.lib %_DEST%\lib%_EXT%\isvx*.lib
 ..\%__SRC%\bin\gengal* %_DEST%\bin%_EXT%\gengal*
 ..\%__SRC%\bin\gengalrc %_DEST%\bin%_EXT%\gengal.ini
 ..\%__SRC%\bin\cui*.dll %_DEST%\bin%_EXT%\cui*.dll
diff --git svx/source/accessibility/makefile.mk svx/source/accessibility/makefile.mk
index c3a93ea..c69fe7d 100755
--- svx/source/accessibility/makefile.mk
+++ svx/source/accessibility/makefile.mk
@@ -33,6 +33,7 @@ PRJ=..$/..
 
 PRJNAME=svx
 TARGET=accessibility
+LIBTARGET=NO
 ENABLE_EXCEPTIONS=TRUE
 
 # --- Settings -----------------------------------------------------
@@ -42,7 +43,12 @@ ENABLE_EXCEPTIONS=TRUE
 
 # --- Files --------------------------------------------------------
 
-SLOFILES =	\
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB1OBJFILES= \
+	$(SLO)$/AccessibleStringWrap.obj
+
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+LIB2OBJFILES= \
 	$(SLO)$/charmapacc.obj						\
 	$(SLO)$/svxrectctaccessiblecontext.obj		\
 	$(SLO)$/GraphCtlAccessibleContext.obj		\
@@ -63,13 +69,14 @@ SLOFILES =	\
 	$(SLO)$/AccessibleStaticTextBase.obj		\
 	$(SLO)$/AccessibleParaManager.obj			\
 	$(SLO)$/AccessibleEditableTextPara.obj		\
-	$(SLO)$/AccessibleStringWrap.obj			\
 	$(SLO)$/AccessibleImageBullet.obj			\
 	$(SLO)$/ShapeTypeHandler.obj				\
 	$(SLO)$/SvxShapeTypes.obj					\
 	$(SLO)$/AccessibleControlShape.obj			\
 	$(SLO)$/DGColorNameLookUp.obj				\
 	$(SLO)$/AccessibleFrameSelector.obj
+	
+SLOFILES = $(LIB1OBJFILES) $(LIB2OBJFILES)
 
 SRS2NAME = accessibility
 SRC2FILES = accessibility.src
diff --git svx/source/customshapes/EnhancedCustomShape2d.hxx svx/source/customshapes/EnhancedCustomShape2d.hxx
index 349c5f1..9d0f04b 100644
--- svx/source/customshapes/EnhancedCustomShape2d.hxx
+++ svx/source/customshapes/EnhancedCustomShape2d.hxx
@@ -32,28 +32,19 @@
 #define _ENHANCEDCUSTOMSHAPE2D_HXX
 
 #include <svx/msdffdef.hxx>
-#include <svx/msdffimp.hxx>
 #include <svx/sdasitm.hxx>
 #include <com/sun/star/uno/Sequence.h>
-#ifndef _com_sun_star_beans_PropertyValues_hpp__
 #include <com/sun/star/beans/PropertyValues.hpp>
-#endif
 #include <com/sun/star/awt/Point.hpp>
 #include <svtools/itemset.hxx>
-#ifndef __com_sun_star_drawing_EnhancedCustomShapeParameterPair_hpp__
 #include <com/sun/star/drawing/EnhancedCustomShapeParameterPair.hpp>
-#endif
 #include <com/sun/star/drawing/EnhancedCustomShapeSegment.hpp>
 #include <com/sun/star/drawing/EnhancedCustomShapeParameter.hpp>
-#ifndef __COM_SUN_STAR_DRAWING_ENHANCEDCUSTOMSHAPETEXTFRAME_HPP__
 #include <com/sun/star/drawing/EnhancedCustomShapeTextFrame.hpp>
-#endif
 #include <com/sun/star/drawing/EnhancedCustomShapeAdjustmentValue.hpp>
 #include <EnhancedCustomShapeFunctionParser.hxx>
 
-#ifndef BOOST_SHARED_PTR_HPP_INCLUDED
 #include <boost/shared_ptr.hpp>
-#endif
 #include <vector>
 
 #define DFF_CUSTOMSHAPE_FLIP_V		1
@@ -84,6 +75,7 @@ class SvxMSDffAdjustmentHandle;
 // between X_RANGE and Y_RANGE
 
 class SdrPathObj;
+
 class EnhancedCustomShape2d : public SfxItemSet
 {
 		SdrObject*					pCustomShapeObj;
@@ -164,17 +156,17 @@ class EnhancedCustomShape2d : public SfxItemSet
 		sal_Bool					IsFlipHorz() { return bFlipH; };
 		sal_Int32					GetRotateAngle() { return nRotateAngle; };
 
-		SdrObject*					CreateLineGeometry();
-		SdrObject*					CreateObject( sal_Bool bLineGeometryNeededOnly );
-		void						ApplyGluePoints( SdrObject* pObj );
-		Rectangle					GetTextRect() const;
+		SVX_DLLPUBLIC SdrObject*					CreateLineGeometry();
+		SVX_DLLPUBLIC SdrObject*					CreateObject( sal_Bool bLineGeometryNeededOnly );
+		SVX_DLLPUBLIC void						ApplyGluePoints( SdrObject* pObj );
+		SVX_DLLPUBLIC Rectangle					GetTextRect() const;
 
-		sal_uInt32					GetHdlCount() const;
-		sal_Bool					GetHandlePosition( const sal_uInt32 nIndex, Point& rReturnPosition ) const;
-		sal_Bool					SetHandleControllerPosition( const sal_uInt32 nIndex, const com::sun::star::awt::Point& rPosition );
+		SVX_DLLPUBLIC sal_uInt32					GetHdlCount() const;
+		SVX_DLLPUBLIC sal_Bool					GetHandlePosition( const sal_uInt32 nIndex, Point& rReturnPosition ) const;
+		SVX_DLLPUBLIC sal_Bool					SetHandleControllerPosition( const sal_uInt32 nIndex, const com::sun::star::awt::Point& rPosition );
 
-		EnhancedCustomShape2d( SdrObject* pSdrObjCustomShape );
-		~EnhancedCustomShape2d();
+		SVX_DLLPUBLIC EnhancedCustomShape2d( SdrObject* pSdrObjCustomShape );
+		SVX_DLLPUBLIC ~EnhancedCustomShape2d();
 
 		enum EnumFunc
 		{
@@ -198,15 +190,15 @@ class EnhancedCustomShape2d : public SfxItemSet
 		double						GetEquationValueAsDouble( const sal_Int32 nIndex ) const;
 		sal_Int32					GetAdjustValueAsInteger( const sal_Int32 nIndex, const sal_Int32 nDefault = 0 ) const;
 
-		static rtl::OUString		GetEquation( const sal_uInt16 nFlags, sal_Int16 nPara1, sal_Int16 nPara2, sal_Int16 nPara3 );
+		SVX_DLLPUBLIC static rtl::OUString		GetEquation( const sal_uInt16 nFlags, sal_Int16 nPara1, sal_Int16 nPara2, sal_Int16 nPara3 );
 
 		static void					AppendEnhancedCustomShapeEquationParameter( rtl::OUString& rParameter, const sal_Int16 nPara, const sal_Bool bIsSpecialValue );
 
 		static void					SetEnhancedCustomShapeEquationParameter( com::sun::star::drawing::EnhancedCustomShapeParameter&
 										rParameter, const sal_Int16 nPara, const sal_Bool bIsSpecialValue );
-		static void					SetEnhancedCustomShapeParameter( com::sun::star::drawing::EnhancedCustomShapeParameter&
+		SVX_DLLPUBLIC static void					SetEnhancedCustomShapeParameter( com::sun::star::drawing::EnhancedCustomShapeParameter&
 										rParameter, const sal_Int32 nValue );
-		static void					SetEnhancedCustomShapeHandleParameter( com::sun::star::drawing::EnhancedCustomShapeParameter&
+		SVX_DLLPUBLIC static void					SetEnhancedCustomShapeHandleParameter( com::sun::star::drawing::EnhancedCustomShapeParameter&
 										rParameter, const sal_Int32 nPara, const sal_Bool bIsSpecialValue, sal_Bool bHorz );
 		static sal_Bool				ConvertSequenceToEnhancedCustomShape2dHandle( const com::sun::star::beans::PropertyValues& rHandleProperties,
 										EnhancedCustomShape2d::Handle& rDestinationHandle );
diff --git svx/source/customshapes/EnhancedCustomShape3d.hxx svx/source/customshapes/EnhancedCustomShape3d.hxx
index dcac36e..430cf7b 100644
--- svx/source/customshapes/EnhancedCustomShape3d.hxx
+++ svx/source/customshapes/EnhancedCustomShape3d.hxx
@@ -31,14 +31,15 @@
 #ifndef _ENHANCEDCUSTOMSHAPE3D_HXX
 #define _ENHANCEDCUSTOMSHAPE3D_HXX
 
-#include <svx/msdffimp.hxx>
 #include <vector>
-//#include <poly3d.hxx>
-//#include <goodies/point3d.hxx>
 #include <com/sun/star/drawing/ProjectionMode.hpp>
 #include <basegfx/point/b3dpoint.hxx>
 #include <basegfx/polygon/b3dpolygon.hxx>
 
+#include <tools/gen.hxx>
+
+class SdrObject;
+
 class EnhancedCustomShape3d
 {
 	class Transformation2D
diff --git svx/source/customshapes/EnhancedCustomShapeGeometry.hxx svx/source/customshapes/EnhancedCustomShapeGeometry.hxx
index 3c25d02..0dacce8 100644
--- svx/source/customshapes/EnhancedCustomShapeGeometry.hxx
+++ svx/source/customshapes/EnhancedCustomShapeGeometry.hxx
@@ -93,12 +93,12 @@ struct mso_CustomShape
 #define MSO_I | (sal_Int32)0x80000000
 
 sal_Bool			SortFilledObjectsToBackByDefault( MSO_SPT eSpType );
-sal_Bool			IsCustomShapeFilledByDefault( MSO_SPT eSpType );
-sal_Int16			GetCustomShapeConnectionTypeDefault( MSO_SPT eSpType );
+SVX_DLLPUBLIC sal_Bool			IsCustomShapeFilledByDefault( MSO_SPT eSpType );
+SVX_DLLPUBLIC sal_Int16			GetCustomShapeConnectionTypeDefault( MSO_SPT eSpType );
 
 // #i28269# 
-sal_Bool			IsCustomShapeStrokedByDefault( MSO_SPT eSpType );
+SVX_DLLPUBLIC sal_Bool			IsCustomShapeStrokedByDefault( MSO_SPT eSpType );
 
-const mso_CustomShape*	GetCustomShapeContent( MSO_SPT eSpType );
+SVX_DLLPUBLIC const mso_CustomShape*	GetCustomShapeContent( MSO_SPT eSpType );
 
 #endif
diff --git svx/source/customshapes/EnhancedCustomShapeTypeNames.hxx svx/source/customshapes/EnhancedCustomShapeTypeNames.hxx
index f6ede3d..c9f65e2 100644
--- svx/source/customshapes/EnhancedCustomShapeTypeNames.hxx
+++ svx/source/customshapes/EnhancedCustomShapeTypeNames.hxx
@@ -33,12 +33,10 @@
 #include <svx/msdffdef.hxx>
 #include <rtl/ustring.hxx>
 
-class EnhancedCustomShapeTypeNames
+namespace EnhancedCustomShapeTypeNames
 {
-	public :
-
-	static MSO_SPT Get( const rtl::OUString& );
-	static rtl::OUString Get( const MSO_SPT );
-};
+	SVX_DLLPUBLIC MSO_SPT Get( const rtl::OUString& );
+	SVX_DLLPUBLIC rtl::OUString Get( const MSO_SPT );
+}
 
 #endif
diff --git svx/source/customshapes/makefile.mk svx/source/customshapes/makefile.mk
index a954eb4..2a2d2d6 100644
--- svx/source/customshapes/makefile.mk
+++ svx/source/customshapes/makefile.mk
@@ -32,6 +32,7 @@
 PRJ=..$/..
 PRJNAME=svx
 TARGET=customshapes
+LIBTARGET=NO
 ENABLE_EXCEPTIONS=TRUE
 
 # --- Settings ----------------------------------
@@ -54,16 +55,23 @@ NOOPTFILES= $(SLO)$/EnhancedCustomShapeFunctionParser.obj
 
 # --- Files -------------------------------------
 
-SLOFILES=	$(SLO)$/EnhancedCustomShapeEngine.obj			\
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB1OBJFILES= \
 			$(SLO)$/EnhancedCustomShapeTypeNames.obj		\
 			$(SLO)$/EnhancedCustomShapeGeometry.obj			\
 			$(SLO)$/EnhancedCustomShape2d.obj				\
+			$(SLO)$/EnhancedCustomShapeFunctionParser.obj
+
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+LIB2OBJFILES= \
+			$(SLO)$/EnhancedCustomShapeEngine.obj			\
 			$(SLO)$/EnhancedCustomShape3d.obj				\
 			$(SLO)$/EnhancedCustomShapeFontWork.obj			\
 			$(SLO)$/EnhancedCustomShapeHandle.obj			\
-			$(SLO)$/EnhancedCustomShapeFunctionParser.obj	\
 			$(SLO)$/tbxcustomshapes.obj
 
+SLOFILES = $(LIB1OBJFILES) $(LIB2OBJFILES)
+
 # --- Targets ----------------------------------
 
 .INCLUDE : target.mk
diff --git svx/source/dialog/makefile.mk svx/source/dialog/makefile.mk
index 2979329..c3ece19 100644
--- svx/source/dialog/makefile.mk
+++ svx/source/dialog/makefile.mk
@@ -297,20 +297,31 @@ SLOFILES+=\
         $(SLO)$/optimprove.obj \
         $(SLO)$/optimprove2.obj
 
-LIB1TARGET= $(SLB)$/$(TARGET).lib
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
 
 LIB1OBJFILES= \
-        $(SLO)$/fontsubs.obj \
         $(SLO)$/svxdlg.obj \
-        $(SLO)$/charmap.obj \
-        $(SLO)$/_bmpmask.obj \
-        $(SLO)$/frmsel.obj \
         $(SLO)$/opengrf.obj \
         $(SLO)$/hyphen.obj \
-        $(SLO)$/rubydialog.obj \
         $(SLO)$/thesdlg.obj \
         $(SLO)$/splwrap.obj \
         $(SLO)$/hangulhanja.obj \
+        $(SLO)$/dlgutil.obj \
+        $(SLO)$/impgrf.obj \
+        $(SLO)$/langbox.obj \
+        $(SLO)$/simptabl.obj \
+        $(SLO)$/stddlg.obj \
+        $(SLO)$/dialmgr.obj \
+        $(SLO)$/framelink.obj
+
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+
+LIB2OBJFILES= \
+        $(SLO)$/fontsubs.obj \
+        $(SLO)$/charmap.obj \
+        $(SLO)$/_bmpmask.obj \
+        $(SLO)$/frmsel.obj \
+        $(SLO)$/rubydialog.obj \
         $(SLO)$/_contdlg.obj \
         $(SLO)$/connctrl.obj \
         $(SLO)$/contwnd.obj \
@@ -329,13 +340,10 @@ LIB1OBJFILES= \
         $(SLO)$/ctredlin.obj \
         $(SLO)$/dlgctrl.obj \
         $(SLO)$/dlgctl3d.obj \
-        $(SLO)$/dlgutil.obj \
         $(SLO)$/docrecovery.obj \
         $(SLO)$/fntctrl.obj \
         $(SLO)$/fontwork.obj \
         $(SLO)$/hdft.obj \
-        $(SLO)$/impgrf.obj \
-        $(SLO)$/langbox.obj \
     $(SLO)$/linkwarn.obj \
         $(SLO)$/wrapfield.obj \
         $(SLO)$/pagectrl.obj \
@@ -347,10 +355,8 @@ LIB1OBJFILES= \
         $(SLO)$/rulritem.obj \
         $(SLO)$/scriptdlg.obj \
         $(SLO)$/selector.obj \
-        $(SLO)$/simptabl.obj \
         $(SLO)$/srchctrl.obj \
         $(SLO)$/srchdlg.obj \
-        $(SLO)$/stddlg.obj \
         $(SLO)$/svxbox.obj \
         $(SLO)$/svxruler.obj \
         $(SLO)$/tparea.obj \
@@ -362,31 +368,29 @@ LIB1OBJFILES= \
         $(SLO)$/commonlingui.obj \
         $(SLO)$/SpellDialogChildWindow.obj \
         $(SLO)$/svxbmpnumvalueset.obj\
-        $(SLO)$/dialmgr.obj\
         $(SLO)$/svxgrahicitem.obj \
         $(SLO)$/swframeexample.obj \
         $(SLO)$/swframeposstrings.obj \
         $(SLO)$/eventdlg.obj \
         $(SLO)$/macropg.obj \
         $(SLO)$/cfg.obj\
-        $(SLO)$/framelink.obj\
         $(SLO)$/framelinkarray.obj \
         $(SLO)$/databaseregistrationui.obj \
         $(SLO)$/radiobtnbox.obj
 
 .IF "$(GUI)"=="UNX"
-LIB1OBJFILES +=	$(SLO)$/sendreportunx.obj
+LIB2OBJFILES +=	$(SLO)$/sendreportunx.obj
 .ELSE
 .IF "$(GUI)"=="WNT"
-LIB1OBJFILES +=	$(SLO)$/sendreportw32.obj
+LIB2OBJFILES +=	$(SLO)$/sendreportw32.obj
 .ELSE
-LIB1OBJFILES +=	$(SLO)$/sendreportgen.obj
+LIB2OBJFILES +=	$(SLO)$/sendreportgen.obj
 .ENDIF
 .ENDIF
 
-LIB2TARGET= $(SLB)$/cui.lib
+LIB3TARGET= $(SLB)$/cui.lib
 
-LIB2OBJFILES= \
+LIB3OBJFILES= \
         $(SLO)$/linkdlg.obj \
         $(SLO)$/pastedlg.obj \
         $(SLO)$/plfilter.obj \
@@ -487,7 +491,7 @@ LIB2OBJFILES= \
 
 .IF "$(GUI)"=="WNT"
 SLOFILES+=$(SLO)$/winpluginlib.obj
-LIB2OBJFILES+=$(SLO)$/winpluginlib.obj
+LIB3OBJFILES+=$(SLO)$/winpluginlib.obj
 .ENDIF
 
 
diff --git svx/source/dialog/showcols.cxx svx/source/dialog/showcols.cxx
index 4b5e1f8..ead9243 100644
--- svx/source/dialog/showcols.cxx
+++ svx/source/dialog/showcols.cxx
@@ -36,19 +36,17 @@
 #endif
 #include "showcols.hxx"
 
-#ifndef _SVX_FMRESIDS_HRC
 #include "fmresids.hrc"
-#endif
 #include <tools/shl.hxx>
 #include <svx/dialmgr.hxx>
 #include <vcl/msgbox.hxx>
 #include <com/sun/star/beans/XPropertySet.hpp>
 #include <comphelper/extract.hxx>
 #include <comphelper/types.hxx>
-#include "fmstatic.hxx" //CHINA001 
 
-IMPLEMENT_CONSTASCII_USTRING(CUIFM_PROP_HIDDEN, "Hidden");
-IMPLEMENT_CONSTASCII_USTRING(CUIFM_PROP_LABEL,"Label");
+#define CUIFM_PROP_HIDDEN rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Hidden" ) )
+#define CUIFM_PROP_LABEL  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Label" ) )
+
 //==========================================================================
 //	FmShowColsDialog
 //==========================================================================
diff --git svx/source/editeng/editeng.cxx svx/source/editeng/editeng.cxx
index fbfb942..e6cd888 100644
--- svx/source/editeng/editeng.cxx
+++ svx/source/editeng/editeng.cxx
@@ -86,11 +86,9 @@
 #include <vcl/help.hxx>
 #include <svx/xpoly.hxx>
 #include <com/sun/star/datatransfer/clipboard/XClipboard.hpp>
-#ifndef _COM_SUN_STAR_I18N_XINPUTSEQUENCECHECKER_HPP_
 #include <com/sun/star/i18n/InputSequenceCheckMode.hpp>
-#endif
 
-#include <srchdlg.hxx>
+#include <sfx2/srchdefs.hxx>
 
 #if OSL_DEBUG_LEVEL > 1
 #include <svx/frmdiritem.hxx>
@@ -99,18 +97,11 @@
 
 // Spaeter -> TOOLS\STRING.H (fuer Grep: WS_TARGET)
 
-//using namespace ::rtl;
-//using namespace ::utl;
 using namespace ::com::sun::star;
-//using namespace ::com::sun::star::util;
 using namespace ::com::sun::star::uno;
-//using namespace ::com::sun::star::lang;
-//using namespace ::com::sun::star::beans;
-//using namespace ::com::sun::star::frame;
 using namespace ::com::sun::star::linguistic2;
 
 
-
 DBG_NAME( EditEngine )
 DBG_NAMEEX( EditView )
 
diff --git svx/source/editeng/eertfpar.cxx svx/source/editeng/eertfpar.cxx
index 7aeda4f..22ec196 100644
--- svx/source/editeng/eertfpar.cxx
+++ svx/source/editeng/eertfpar.cxx
@@ -43,6 +43,19 @@
 
 #include <svtools/rtftoken.h>
 
+// alle Werte auf default; wird nach einlesen der Bitmap aufgerufen !
+void SvxRTFPictureType::ResetValues()
+{	// setze alle Werte RTF-Defaults
+	eStyle = RTF_BITMAP;
+	nMode = HEX_MODE;
+	nType = nGoalWidth = nGoalHeight = 0;
+	nWidth = nHeight = nWidthBytes = 0;
+	uPicLen = 0;
+	nBitsPerPixel = nPlanes = 1;
+	nScalX = nScalY = 100;		// Skalierung in Prozent
+	nCropT = nCropB = nCropL = nCropR = 0;
+}
+
 ImportInfo::ImportInfo( ImportState eSt, SvParser* pPrsrs, const ESelection& rSel )
 	: aSelection( rSel )
 {
diff --git svx/source/engine3d/makefile.mk svx/source/engine3d/makefile.mk
index 1b1112b..7dbb3e7 100644
--- svx/source/engine3d/makefile.mk
+++ svx/source/engine3d/makefile.mk
@@ -33,6 +33,7 @@ PRJ=..$/..
 
 PRJNAME=svx
 TARGET=engine3d
+LIBTARGET=NO
 ENABLE_EXCEPTIONS=TRUE
 
 # --- Settings -----------------------------------------------------
@@ -42,7 +43,8 @@ ENABLE_EXCEPTIONS=TRUE
 
 # --- Files --------------------------------------------------------
 
-SLOFILES= \
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB1OBJFILES= \
 		$(SLO)$/e3dsceneupdater.obj \
 		$(SLO)$/helperminimaldepth3d.obj	\
 		$(SLO)$/helperhittest3d.obj			\
@@ -57,16 +59,21 @@ SLOFILES= \
 		$(SLO)$/svx3ditems.obj	\
 		$(SLO)$/deflt3d.obj		\
         $(SLO)$/e3dundo.obj     \
-		$(SLO)$/volume3d.obj	\
-		$(SLO)$/viewpt3d.obj	\
 		$(SLO)$/viewpt3d2.obj	\
 		$(SLO)$/camera3d.obj	\
 		$(SLO)$/objfac3d.obj 	\
 		$(SLO)$/dragmt3d.obj	\
 		$(SLO)$/view3d.obj		\
-        $(SLO)$/view3d1.obj     \
+        $(SLO)$/view3d1.obj
+
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+LIB2OBJFILES= \
+		$(SLO)$/volume3d.obj	\
+		$(SLO)$/viewpt3d.obj	\
 		$(SLO)$/float3d.obj
 
+SLOFILES = $(LIB1OBJFILES) $(LIB2OBJFILES)
+
 #disable optimizer for MSCompiler and ICC
 .IF "$(COM)"=="ICC" || "$(COM)"=="MSC"
 NOOPTFILES=\
diff --git svx/source/fmcomp/dbaexchange.cxx svx/source/fmcomp/dbaexchange.cxx
index ea65dbf..eaf5474 100644
--- svx/source/fmcomp/dbaexchange.cxx
+++ svx/source/fmcomp/dbaexchange.cxx
@@ -61,7 +61,6 @@ namespace svx
 	using namespace ::com::sun::star::sdbcx;
 	using namespace ::com::sun::star::container;
 	using namespace ::com::sun::star::datatransfer;
-	using namespace ::svxform;
 	using namespace ::comphelper;
 
 	//====================================================================
diff --git svx/source/fmcomp/dbaobjectex.cxx svx/source/fmcomp/dbaobjectex.cxx
index fe76d7a..084a3b3 100644
--- svx/source/fmcomp/dbaobjectex.cxx
+++ svx/source/fmcomp/dbaobjectex.cxx
@@ -60,7 +60,6 @@ namespace svx
 	using namespace ::com::sun::star::sdbcx;
 	using namespace ::com::sun::star::container;
 	using namespace ::com::sun::star::datatransfer;
-	using namespace ::svxform;
 	using namespace ::comphelper;
 
 	//====================================================================
diff --git svx/source/fmcomp/fmgridif.cxx svx/source/fmcomp/fmgridif.cxx
index 34713e8..495e8fc 100644
--- svx/source/fmcomp/fmgridif.cxx
+++ svx/source/fmcomp/fmgridif.cxx
@@ -1919,7 +1919,7 @@ void FmXGridPeer::setProperty( const ::rtl::OUString& PropertyName, const Any& V
 
 	sal_Bool bVoid = !Value.hasValue();
 
-	if ( 0 == PropertyName.compareToAscii( FM_PROP_TEXTLINECOLOR ) )
+	if ( 0 == PropertyName.compareTo( FM_PROP_TEXTLINECOLOR ) )
 	{
         ::Color aTextLineColor(::comphelper::getINT32(Value));
 		if (bVoid)
@@ -1951,21 +1951,21 @@ void FmXGridPeer::setProperty( const ::rtl::OUString& PropertyName, const Any& V
 		if (isDesignMode())
 			pGrid->Invalidate();
 	}
-	else if ( 0 == PropertyName.compareToAscii( FM_PROP_FONTEMPHASISMARK ) )
+	else if ( 0 == PropertyName.compareTo( FM_PROP_FONTEMPHASISMARK ) )
 	{
 		Font aGridFont = pGrid->GetControlFont();
 		sal_Int16 nValue = ::comphelper::getINT16(Value);
         aGridFont.SetEmphasisMark( nValue );
 		pGrid->SetControlFont( aGridFont );
 	}
-	else if ( 0 == PropertyName.compareToAscii( FM_PROP_FONTRELIEF ) )
+	else if ( 0 == PropertyName.compareTo( FM_PROP_FONTRELIEF ) )
 	{
 		Font aGridFont = pGrid->GetControlFont();
 		sal_Int16 nValue = ::comphelper::getINT16(Value);
         aGridFont.SetRelief( (FontRelief)nValue );
 		pGrid->SetControlFont( aGridFont );
 	}
-	else if ( 0 == PropertyName.compareToAscii( FM_PROP_HELPURL ) )
+	else if ( 0 == PropertyName.compareTo( FM_PROP_HELPURL ) )
 	{
 		String sHelpURL(::comphelper::getString(Value));
 		String sPattern;
@@ -1976,11 +1976,11 @@ void FmXGridPeer::setProperty( const ::rtl::OUString& PropertyName, const Any& V
 			pGrid->SetHelpId(sID.ToInt32());
 		}
 	}
-	else if ( 0 == PropertyName.compareToAscii( FM_PROP_DISPLAYSYNCHRON ) )
+	else if ( 0 == PropertyName.compareTo( FM_PROP_DISPLAYSYNCHRON ) )
 	{
 		pGrid->setDisplaySynchron(::comphelper::getBOOL(Value));
 	}
-	else if ( 0 == PropertyName.compareToAscii( FM_PROP_CURSORCOLOR ) )
+	else if ( 0 == PropertyName.compareTo( FM_PROP_CURSORCOLOR ) )
 	{
 		if (bVoid)
 			pGrid->SetCursorColor(COL_TRANSPARENT);
@@ -1989,13 +1989,13 @@ void FmXGridPeer::setProperty( const ::rtl::OUString& PropertyName, const Any& V
 		if (isDesignMode())
 			pGrid->Invalidate();
 	}
-	else if ( 0 == PropertyName.compareToAscii( FM_PROP_ALWAYSSHOWCURSOR ) )
+	else if ( 0 == PropertyName.compareTo( FM_PROP_ALWAYSSHOWCURSOR ) )
 	{
 		pGrid->EnablePermanentCursor(::comphelper::getBOOL(Value));
 		if (isDesignMode())
 			pGrid->Invalidate();
 	}
-	else if ( 0 == PropertyName.compareToAscii( FM_PROP_FONT ) )
+	else if ( 0 == PropertyName.compareTo( FM_PROP_FONT ) )
 	{
 		if ( bVoid )
 			pGrid->SetControlFont( Font() );
@@ -2029,7 +2029,7 @@ void FmXGridPeer::setProperty( const ::rtl::OUString& PropertyName, const Any& V
 			}
 		}
 	}
-	else if ( 0 == PropertyName.compareToAscii( FM_PROP_BACKGROUNDCOLOR ) )
+	else if ( 0 == PropertyName.compareTo( FM_PROP_BACKGROUNDCOLOR ) )
 	{
 		if ( bVoid )
 		{
@@ -2042,7 +2042,7 @@ void FmXGridPeer::setProperty( const ::rtl::OUString& PropertyName, const Any& V
 			pGrid->SetControlBackground( aColor );
 		}
 	}
-	else if ( 0 == PropertyName.compareToAscii( FM_PROP_TEXTCOLOR ) )
+	else if ( 0 == PropertyName.compareTo( FM_PROP_TEXTCOLOR ) )
 	{
 		if ( bVoid )
 		{
@@ -2055,7 +2055,7 @@ void FmXGridPeer::setProperty( const ::rtl::OUString& PropertyName, const Any& V
 			pGrid->SetControlForeground( aColor );
 		}
 	}
-	else if ( 0 == PropertyName.compareToAscii( FM_PROP_ROWHEIGHT ) )
+	else if ( 0 == PropertyName.compareTo( FM_PROP_ROWHEIGHT ) )
 	{
 		sal_Int32 nLogHeight(0);
 		if (Value >>= nLogHeight)
@@ -2068,17 +2068,17 @@ void FmXGridPeer::setProperty( const ::rtl::OUString& PropertyName, const Any& V
 		else if (bVoid)
 			pGrid->SetDataRowHeight(0);
 	}
-	else if ( 0 == PropertyName.compareToAscii( FM_PROP_HASNAVIGATION ) )
+	else if ( 0 == PropertyName.compareTo( FM_PROP_HASNAVIGATION ) )
 	{
 		if (Value.getValueType() == ::getBooleanCppuType())
 			pGrid->EnableNavigationBar(*(sal_Bool*)Value.getValue());
 	}
-	else if ( 0 == PropertyName.compareToAscii( FM_PROP_RECORDMARKER ) )
+	else if ( 0 == PropertyName.compareTo( FM_PROP_RECORDMARKER ) )
 	{
 		if (Value.getValueType() == ::getBooleanCppuType())
 			pGrid->EnableHandle(*(sal_Bool*)Value.getValue());
 	}
-	else if ( 0 == PropertyName.compareToAscii( FM_PROP_ENABLED ) )
+	else if ( 0 == PropertyName.compareTo( FM_PROP_ENABLED ) )
 	{
 		if (Value.getValueType() == ::getBooleanCppuType())
 		{
@@ -2132,37 +2132,37 @@ Any FmXGridPeer::getProperty( const ::rtl::OUString& _rPropertyName ) throw( Run
 		FmGridControl* pGrid = (FmGridControl*) GetWindow();
 		Window* pDataWindow  = &pGrid->GetDataWindow();
 
-		if ( 0 == _rPropertyName.compareToAscii( FM_PROP_NAME ) )
+		if ( 0 == _rPropertyName.compareTo( FM_PROP_NAME ) )
 		{
 			Font aFont = pDataWindow->GetControlFont();
 			aProp <<= ImplCreateFontDescriptor( aFont );
 		}
-		else if ( 0 == _rPropertyName.compareToAscii( FM_PROP_TEXTCOLOR ) )
+		else if ( 0 == _rPropertyName.compareTo( FM_PROP_TEXTCOLOR ) )
 		{
 			aProp <<= (sal_Int32)pDataWindow->GetControlForeground().GetColor();
 		}
-		else if ( 0 == _rPropertyName.compareToAscii( FM_PROP_BACKGROUNDCOLOR ) )
+		else if ( 0 == _rPropertyName.compareTo( FM_PROP_BACKGROUNDCOLOR ) )
 		{
 			aProp <<= (sal_Int32)pDataWindow->GetControlBackground().GetColor();
 		}
-		else if ( 0 == _rPropertyName.compareToAscii( FM_PROP_ROWHEIGHT ) )
+		else if ( 0 == _rPropertyName.compareTo( FM_PROP_ROWHEIGHT ) )
 		{
 			sal_Int32 nPixelHeight = pGrid->GetDataRowHeight();
 			// take the zoom factor into account
 			nPixelHeight = pGrid->CalcReverseZoom(nPixelHeight);
 			aProp <<= (sal_Int32)pGrid->PixelToLogic(Point(0,nPixelHeight),MAP_10TH_MM).Y();
 		}
-		else if ( 0 == _rPropertyName.compareToAscii( FM_PROP_HASNAVIGATION ) )
+		else if ( 0 == _rPropertyName.compareTo( FM_PROP_HASNAVIGATION ) )
 		{
 			sal_Bool bHasNavBar = pGrid->HasNavigationBar();
 			aProp <<= (sal_Bool)bHasNavBar;
 		}
-		else if ( 0 == _rPropertyName.compareToAscii( FM_PROP_RECORDMARKER ) )
+		else if ( 0 == _rPropertyName.compareTo( FM_PROP_RECORDMARKER ) )
 		{
 			sal_Bool bHasHandle = pGrid->HasHandle();
 			aProp <<= (sal_Bool)bHasHandle;
 		}
-		else if ( 0 == _rPropertyName.compareToAscii( FM_PROP_ENABLED ) )
+		else if ( 0 == _rPropertyName.compareTo( FM_PROP_ENABLED ) )
 		{
 			aProp <<= (sal_Bool)pDataWindow->IsEnabled();
 		}
@@ -2942,7 +2942,7 @@ IMPL_LINK(FmXGridPeer, OnExecuteGridSlot, void*, pSlot)
 			if (m_pDispatchers[i].is())
 			{
 				// commit any changes done so far, if it's not the undoRecord URL
-				if ( 0 == pUrls->Complete.compareToAscii( FMURL_RECORD_UNDO ) || commit() )
+				if ( 0 == pUrls->Complete.compareTo( FMURL_RECORD_UNDO ) || commit() )
 					m_pDispatchers[i]->dispatch(*pUrls, Sequence< PropertyValue>());
 
 				return 1;	// handled
diff --git svx/source/fmcomp/gridcell.cxx svx/source/fmcomp/gridcell.cxx
index 57abadd..7e078d9 100644
--- svx/source/fmcomp/gridcell.cxx
+++ svx/source/fmcomp/gridcell.cxx
@@ -648,10 +648,10 @@ void DbCellControl::_propertyChanged(const PropertyChangeEvent& _rEvent) throw(R
 
     Reference< XPropertySet > xSourceProps( _rEvent.Source, UNO_QUERY );
 
-    if  (   _rEvent.PropertyName.equalsAscii( FM_PROP_VALUE )
-        ||  _rEvent.PropertyName.equalsAscii( FM_PROP_STATE )
-        ||  _rEvent.PropertyName.equalsAscii( FM_PROP_TEXT )
-        ||  _rEvent.PropertyName.equalsAscii( FM_PROP_EFFECTIVE_VALUE )
+    if  (   _rEvent.PropertyName.equals( FM_PROP_VALUE )
+        ||  _rEvent.PropertyName.equals( FM_PROP_STATE )
+        ||  _rEvent.PropertyName.equals( FM_PROP_TEXT )
+        ||  _rEvent.PropertyName.equals( FM_PROP_EFFECTIVE_VALUE )
         )
     {   // it was one of the known "value" properties
         if ( !isValuePropertyLocked() )
@@ -659,11 +659,11 @@ void DbCellControl::_propertyChanged(const PropertyChangeEvent& _rEvent) throw(R
             implValuePropertyChanged( );
         }
     }
-    else if ( _rEvent.PropertyName.equalsAscii( FM_PROP_READONLY ) )
+    else if ( _rEvent.PropertyName.equals( FM_PROP_READONLY ) )
     {
         implAdjustReadOnly( xSourceProps );
     }
-    else if ( _rEvent.PropertyName.equalsAscii( FM_PROP_ENABLED ) )
+    else if ( _rEvent.PropertyName.equals( FM_PROP_ENABLED ) )
     {
         implAdjustEnabled( xSourceProps );
     }
@@ -2408,7 +2408,7 @@ DbComboBox::DbComboBox(DbGridColumn& _rColumn)
 //------------------------------------------------------------------------------
 void DbComboBox::_propertyChanged( const PropertyChangeEvent& _rEvent ) throw( RuntimeException )
 {
-    if ( _rEvent.PropertyName.equalsAscii( FM_PROP_STRINGITEMLIST ) )
+    if ( _rEvent.PropertyName.equals( FM_PROP_STRINGITEMLIST ) )
     {
         SetList(_rEvent.NewValue);
     }
@@ -2537,7 +2537,7 @@ DbListBox::DbListBox(DbGridColumn& _rColumn)
 //------------------------------------------------------------------------------
 void DbListBox::_propertyChanged( const ::com::sun::star::beans::PropertyChangeEvent& _rEvent ) throw( RuntimeException )
 {
-    if ( _rEvent.PropertyName.equalsAscii( FM_PROP_STRINGITEMLIST ) )
+    if ( _rEvent.PropertyName.equals( FM_PROP_STRINGITEMLIST ) )
     {
         SetList(_rEvent.NewValue);
     }
diff --git svx/source/fmcomp/gridcols.cxx svx/source/fmcomp/gridcols.cxx
index 2fc232f..561be8a 100644
--- svx/source/fmcomp/gridcols.cxx
+++ svx/source/fmcomp/gridcols.cxx
@@ -36,23 +36,6 @@
 #include "fmservs.hxx"
 #include "fmtools.hxx"
 
-namespace svxform
-{
-
-    IMPLEMENT_CONSTASCII_USTRING(FM_COL_TEXTFIELD, "TextField");
-    IMPLEMENT_CONSTASCII_USTRING(FM_COL_COMBOBOX, "ComboBox");
-    IMPLEMENT_CONSTASCII_USTRING(FM_COL_CHECKBOX, "CheckBox");
-    IMPLEMENT_CONSTASCII_USTRING(FM_COL_TIMEFIELD, "TimeField");
-    IMPLEMENT_CONSTASCII_USTRING(FM_COL_DATEFIELD, "DateField");
-    IMPLEMENT_CONSTASCII_USTRING(FM_COL_NUMERICFIELD, "NumericField");
-    IMPLEMENT_CONSTASCII_USTRING(FM_COL_CURRENCYFIELD, "CurrencyField");
-    IMPLEMENT_CONSTASCII_USTRING(FM_COL_PATTERNFIELD, "PatternField");
-    IMPLEMENT_CONSTASCII_USTRING(FM_COL_LISTBOX, "ListBox");
-    IMPLEMENT_CONSTASCII_USTRING(FM_COL_FORMATTEDFIELD, "FormattedField");
-
-}   // namespace svxform
-using namespace ::svxform;
-
 //------------------------------------------------------------------------------
 const ::comphelper::StringSequence& getColumnTypes()
 {
@@ -81,7 +64,7 @@ sal_Int32 getColumnTypeByModelName(const ::rtl::OUString& aModelName)
     const ::rtl::OUString aCompatibleModelPrefix = ::rtl::OUString::createFromAscii("stardiv.one.form.component.");
 
     sal_Int32 nTypeId = -1;
-    if (aModelName == ::svxform::FM_COMPONENT_EDIT)
+    if (aModelName == FM_COMPONENT_EDIT)
         nTypeId = TYPE_TEXTFIELD;
     else
     {
diff --git svx/source/fmcomp/makefile.mk svx/source/fmcomp/makefile.mk
index bacee5b..d18f522 100644
--- svx/source/fmcomp/makefile.mk
+++ svx/source/fmcomp/makefile.mk
@@ -33,6 +33,7 @@ PRJ=..$/..
 
 PRJNAME=svx
 TARGET=fmcomp
+LIBTARGET=NO
 
 ENABLE_EXCEPTIONS=TRUE
 
@@ -48,25 +49,20 @@ SRC1FILES= \
 	gridctrl.src	\
 	showcols.src
 
-#SLOFILES= \
-#	$(SLO)$/dbaexchange.obj	\
-#	$(SLO)$/gridcols.obj	\
-#	$(SLO)$/gridctrl.obj	\
-#	$(SLO)$/gridcell.obj	\
-#	$(SLO)$/fmgridcl.obj	\
-#	$(SLO)$/fmgridif.obj	\
-#	$(SLO)$/trace.obj
-
-SLOFILES= \
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB1OBJFILES= \
 	$(SLO)$/dbaexchange.obj	\
-	$(SLO)$/dbaobjectex.obj	\
 	$(SLO)$/gridcols.obj	\
 	$(SLO)$/gridctrl.obj	\
 	$(SLO)$/gridcell.obj	\
 	$(SLO)$/fmgridcl.obj	\
 	$(SLO)$/fmgridif.obj	\
-	$(SLO)$/trace.obj		\
 	$(SLO)$/xmlexchg.obj
 
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+LIB2OBJFILES= \
+	$(SLO)$/dbaobjectex.obj	\
+	$(SLO)$/trace.obj
+
 .INCLUDE :  target.mk
 
diff --git svx/source/form/fmprop.cxx svx/source/form/fmprop.cxx
index 0247e75..e69de29 100644
--- svx/source/form/fmprop.cxx
+++ svx/source/form/fmprop.cxx
@@ -1,194 +0,0 @@
-/*************************************************************************
- *
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- * 
- * Copyright 2008 by Sun Microsystems, Inc.
- *
- * OpenOffice.org - a multi-platform office productivity suite
- *
- * $RCSfile: fmprop.cxx,v $
- * $Revision: 1.22 $
- *
- * This file is part of OpenOffice.org.
- *
- * OpenOffice.org is free software: you can redistribute it and/or modify
- * it under the terms of the GNU Lesser General Public License version 3
- * only, as published by the Free Software Foundation.
- *
- * OpenOffice.org is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU Lesser General Public License version 3 for more details
- * (a copy is included in the LICENSE file that accompanied this code).
- *
- * You should have received a copy of the GNU Lesser General Public License
- * version 3 along with OpenOffice.org.  If not, see
- * <http://www.openoffice.org/license.html>
- * for a copy of the LGPLv3 License.
- *
- ************************************************************************/
-
-// MARKER(update_precomp.py): autogen include statement, do not remove
-#include "precompiled_svx.hxx"
-
-#ifndef _SVX_FMPROP_HRC
-#include "fmprop.hrc"
-#endif
-#include "fmstatic.hxx"
-
-#include <set>
-
-namespace svxform
-{
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_NAME,"Name");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_CLASSID,"ClassId");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ROWCOUNT,"RowCount");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ROWCOUNTFINAL,"IsRowCountFinal");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_FETCHSIZE,"FetchSize");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_VALUE,"Value");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_TEXT,"Text");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_LABEL,"Label");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_CANINSERT,"CanInsert");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_CANUPDATE,"CanUpdate");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_CANDELETE,"CanDelete");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_NAVIGATION,"NavigationBarMode");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_HASNAVIGATION,"HasNavigationBar");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_CYCLE,"Cycle");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_CONTROLSOURCE,"DataField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ENABLED,"Enabled");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_READONLY,"ReadOnly");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ISREADONLY,"IsReadOnly");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_FILTER,"Filter");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_AUTOINCREMENT,"IsAutoIncrement");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DATAENTRY,"DataEntry");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_WIDTH,"Width");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_SEARCHABLE,"IsSearchable");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_MULTILINE,"MultiLine");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_TARGET_URL,"TargetURL");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DEFAULTCONTROL,"DefaultControl");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_MAXTEXTLEN,"MaxTextLen");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_EDITMASK,"EditMask");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_SPIN,"Spin");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DATE,"Date");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_TIME,"Time");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_STATE,"State");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_TRISTATE,"TriState");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_STRINGITEMLIST,"StringItemList");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DEFAULT_TEXT,"DefaultText");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DEFAULTCHECKED,"DefaultState");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_FORMATKEY,"FormatKey");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_FORMATSSUPPLIER,"FormatsSupplier");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_LISTSOURCETYPE,"ListSourceType");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_LISTSOURCE,"ListSource");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_SELECT_SEQ,"SelectedItems");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_VALUE_SEQ,"ValueItemList");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DEFAULT_SELECT_SEQ,"DefaultSelection");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ALIGN,"Align");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DEFAULT_DATE,"DefaultDate");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DEFAULT_TIME,"DefaultTime");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DEFAULT_VALUE,"DefaultValue");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DECIMAL_ACCURACY,"DecimalAccuracy");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_CURSORSOURCE,"DataSelection");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_CURSORSOURCETYPE,"DataSelectionType");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_FIELDTYPE,"Type");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_REFVALUE,"RefValue");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_VALUEMIN,"ValueMin");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_VALUEMAX,"ValueMax");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_STRICTFORMAT,"StrictFormat");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_LITERALMASK,"LiteralMask");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_VALUESTEP,"ValueStep");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_SHOWTHOUSANDSEP,"ShowThousandsSeparator");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_CURRENCYSYMBOL,"CurrencySymbol");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DATEFORMAT,"DateFormat");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DATEMIN,"DateMin");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DATEMAX,"DateMax");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DATE_SHOW_CENTURY,"DateShowCentury");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_TIMEFORMAT, "TimeFormat");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_TIMEMIN, "TimeMin");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_TIMEMAX,"TimeMax");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_LINECOUNT,"LineCount");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_BOUNDCOLUMN, "BoundColumn");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_FONT,"FontDescriptor");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_BACKGROUNDCOLOR,"BackgroundColor");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_TEXTCOLOR,"TextColor");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_BORDER,"Border");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DROPDOWN,"Dropdown");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ROWHEIGHT,"RowHeight");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_HELPTEXT, "HelpText");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_HELPURL, "HelpURL");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_RECORDMARKER, "HasRecordMarker");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_BOUNDFIELD, "BoundField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_EFFECTIVE_VALUE, "EffectiveValue");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_EFFECTIVE_DEFAULT, "EffectiveDefault");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_EFFECTIVE_MIN, "EffectiveMin");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_EFFECTIVE_MAX, "EffectiveMax");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_HIDDEN, "Hidden");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_FILTERPROPOSAL, "UseFilterValueProposal");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_FIELDSOURCE, "FieldSource");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_TABLENAME, "TableName");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_FILTERSUPPLIER, "FilterSupplier");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_CURRENTFILTER, "CurrentFilter");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_SELECTED_FIELDS, "SelectedFields");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_SELECTED_TABLES, "SelectedTables");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_THREADSAFE, "ThreadSafe");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ISFILTERAPPLIED, "IsFilterApplied");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_CONTROLLABEL, "LabelControl");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_CURSORCOLOR, "CursorColor");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ALWAYSSHOWCURSOR, "AlwaysShowCursor");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DISPLAYSYNCHRON, "DisplayIsSynchron");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ISMODIFIED, "IsModified");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ISNEW, "IsNew");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_PRIVILEGES, "Privileges");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_COMMAND,"Command");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_COMMANDTYPE,"CommandType");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_RESULTSET_CONCURRENCY, "ResultSetConcurrency");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_INSERTONLY, "IgnoreResult");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_RESULTSET_TYPE, "ResultSetType");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ESCAPE_PROCESSING, "EscapeProcessing");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_APPLYFILTER, "ApplyFilter");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ISNULLABLE, "IsNullable");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ACTIVECOMMAND, "ActiveCommand");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ISCURRENCY, "IsCurrency");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_URL, "URL");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_ACTIVE_CONNECTION, "ActiveConnection");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_SORT, "Order");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_DATASOURCE, "DataSourceName");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_REALNAME,"RealName");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_CONTROLSOURCEPROPERTY,"DataFieldProperty");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_TEXTLINECOLOR, "TextLineColor");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_FONTEMPHASISMARK, "FontEmphasisMark");
-	IMPLEMENT_CONSTASCII_USTRING(FM_PROP_FONTRELIEF, "FontRelief");
-
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_SCROLLVALUE_MIN,             "ScrollValueMin"            );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_SCROLLVALUE_MAX,             "ScrollValueMax"            );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_DEFAULT_SCROLLVALUE,         "DefaultScrollValue"        );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_LINEINCREMENT,               "LineIncrement"             );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_BLOCKINCREMENT,              "BlockIncrement"            );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_ORIENTATION,                 "Orientation"               );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_REPEAT,                      "Repeat"                    );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_REPEATDELAY,                 "RepeatDelay"               );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_SYMBOLCOLOR,                 "SymbolColor"               );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_VISIBILESIZE,                "VisibleSize"               );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_SPINVALUE_MIN,               "SpinValueMin"              );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_SPINVALUE_MAX,               "SpinValueMax"              );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_DEFAULT_SPINVALUE,           "DefaultSpinValue"          );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_SPININCREMENT,               "SpinIncrement"             );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_LINEENDFORMAT,               "LineEndFormat"             );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_TOGGLE,                      "Toggle"                    );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_FOCUSONCLICK,                "FocusOnClick"              );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_HIDEINACTIVESELECTION,       "HideInactiveSelection"     );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_VISUALEFFECT,                "VisualEffect"              );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_BORDERCOLOR,                 "BorderColor"               );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_DYNAMIC_CONTROL_BORDER,      "DynamicControlBorder"      );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_CONTROL_BORDER_COLOR_FOCUS,  "ControlBorderColorOnFocus" );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_CONTROL_BORDER_COLOR_MOUSE,  "ControlBorderColorOnHover" );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_CONTROL_BORDER_COLOR_INVALID,"ControlBorderColorOnInvalid" );
-
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_BUTTON_TYPE, "ButtonType" );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_FORM_OPERATIONS, "FormOperations" );
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_INPUT_REQUIRED, "InputRequired" );
-
-    IMPLEMENT_CONSTASCII_USTRING( FM_PROP_WRITING_MODE, "WritingMode" );
-
-}	// namespace svxform
-
diff --git svx/source/form/fmservs.cxx svx/source/form/fmservs.cxx
index 9d94074..02612f8 100644
--- svx/source/form/fmservs.cxx
+++ svx/source/form/fmservs.cxx
@@ -31,76 +31,9 @@
 // MARKER(update_precomp.py): autogen include statement, do not remove
 #include "precompiled_svx.hxx"
 #include <com/sun/star/container/XSet.hpp>
-#include "fmstatic.hxx"
 #include <cppuhelper/factory.hxx>
 #include <comphelper/processfactory.hxx>
-
-namespace svxform
-{
-
-	// -----------------------
-	// service names for compatibility
-	// -----------------------
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_EDIT,"stardiv.one.form.component.Edit");			// compatibility
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_TEXTFIELD,"stardiv.one.form.component.TextField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_LISTBOX,"stardiv.one.form.component.ListBox");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_COMBOBOX,"stardiv.one.form.component.ComboBox");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_RADIOBUTTON,"stardiv.one.form.component.RadioButton");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_GROUPBOX,"stardiv.one.form.component.GroupBox");		// compatibility
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_FIXEDTEXT,"stardiv.one.form.component.FixedText");		// compatibility
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_COMMANDBUTTON,"stardiv.one.form.component.CommandButton");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_CHECKBOX,"stardiv.one.form.component.CheckBox");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_GRID,"stardiv.one.form.component.Grid");			// compatibility
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_GRIDCONTROL,"stardiv.one.form.component.GridControl");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_IMAGEBUTTON,"stardiv.one.form.component.ImageButton");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_FILECONTROL,"stardiv.one.form.component.FileControl");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_TIMEFIELD,"stardiv.one.form.component.TimeField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_DATEFIELD,"stardiv.one.form.component.DateField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_NUMERICFIELD,"stardiv.one.form.component.NumericField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_CURRENCYFIELD,"stardiv.one.form.component.CurrencyField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_PATTERNFIELD,"stardiv.one.form.component.PatternField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_HIDDEN,"stardiv.one.form.component.Hidden");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_HIDDENCONTROL,"stardiv.one.form.component.HiddenControl");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_IMAGECONTROL,"stardiv.one.form.component.ImageControl");
-	IMPLEMENT_CONSTASCII_USTRING(FM_COMPONENT_FORMATTEDFIELD,"stardiv.one.form.component.FormattedField");
-
-	IMPLEMENT_CONSTASCII_USTRING(FM_CONTROL_GRID,"stardiv.one.form.control.Grid");					// compatibility
-	IMPLEMENT_CONSTASCII_USTRING(FM_CONTROL_GRIDCONTROL,"stardiv.one.form.control.GridControl");
-
-	// -----------------------
-	// new (sun) service names
-	// -----------------------
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_FORM,"com.sun.star.form.component.Form");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_TEXTFIELD,"com.sun.star.form.component.TextField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_LISTBOX,"com.sun.star.form.component.ListBox");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_COMBOBOX,"com.sun.star.form.component.ComboBox");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_RADIOBUTTON,"com.sun.star.form.component.RadioButton");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_GROUPBOX,"com.sun.star.form.component.GroupBox");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_FIXEDTEXT,"com.sun.star.form.component.FixedText");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_COMMANDBUTTON,"com.sun.star.form.component.CommandButton");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_CHECKBOX,"com.sun.star.form.component.CheckBox");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_GRIDCONTROL,"com.sun.star.form.component.GridControl");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_IMAGEBUTTON,"com.sun.star.form.component.ImageButton");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_FILECONTROL,"com.sun.star.form.component.FileControl");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_TIMEFIELD,"com.sun.star.form.component.TimeField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_DATEFIELD,"com.sun.star.form.component.DateField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_NUMERICFIELD,"com.sun.star.form.component.NumericField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_CURRENCYFIELD,"com.sun.star.form.component.CurrencyField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_PATTERNFIELD,"com.sun.star.form.component.PatternField");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_HIDDENCONTROL,"com.sun.star.form.component.HiddenControl");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_IMAGECONTROL,"com.sun.star.form.component.DatabaseImageControl");
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_COMPONENT_FORMATTEDFIELD,"com.sun.star.form.component.FormattedField");
-	IMPLEMENT_CONSTASCII_USTRING( FM_SUN_COMPONENT_SCROLLBAR,    "com.sun.star.form.component.ScrollBar"         );
-	IMPLEMENT_CONSTASCII_USTRING( FM_SUN_COMPONENT_SPINBUTTON,   "com.sun.star.form.component.SpinButton"        );
-    IMPLEMENT_CONSTASCII_USTRING( FM_SUN_COMPONENT_NAVIGATIONBAR,"com.sun.star.form.component.NavigationToolBar" );
-
-	IMPLEMENT_CONSTASCII_USTRING(FM_SUN_CONTROL_GRIDCONTROL,"com.sun.star.form.control.GridControl");
-
-	IMPLEMENT_CONSTASCII_USTRING(FM_NUMBER_FORMATTER,"com.sun.star.util.NumberFormatter");
-	IMPLEMENT_CONSTASCII_USTRING(FM_FORM_CONTROLLER,"com.sun.star.form.FormController");
-	IMPLEMENT_CONSTASCII_USTRING(SRV_SDB_CONNECTION,"com.sun.star.sdb.Connection");
-	IMPLEMENT_CONSTASCII_USTRING(SRV_SDB_INTERACTION_HANDLER,"com.sun.star.sdb.InteractionHandler");
-}	// namespace svxform
+#include "fmservs.hxx"
 
 // ------------------------------------------------------------------------
 #define DECL_SERVICE(ImplName)						\
diff --git svx/source/form/fmtextcontrolshell.cxx svx/source/form/fmtextcontrolshell.cxx
index 2f51b66..ee80601 100644
--- svx/source/form/fmtextcontrolshell.cxx
+++ svx/source/form/fmtextcontrolshell.cxx
@@ -94,7 +94,6 @@ namespace svx
     using namespace ::com::sun::star::util;
     using namespace ::com::sun::star::beans;
     using namespace ::com::sun::star::container;
-    using namespace ::svxform;
 
 	//====================================================================
     typedef USHORT WhichId;
diff --git svx/source/form/fmtools.cxx svx/source/form/fmtools.cxx
index db407ef..1dcc7dd 100644
--- svx/source/form/fmtools.cxx
+++ svx/source/form/fmtools.cxx
@@ -100,7 +100,6 @@
 #include <connectivity/dbtools.hxx>
 #include <comphelper/processfactory.hxx>
 #include <comphelper/sequence.hxx>
-#include "fmstatic.hxx"
 #include <comphelper/extract.hxx>
 #include <comphelper/uno3.hxx>
 #include <connectivity/dbexception.hxx>
@@ -109,14 +108,6 @@
 #include <cppuhelper/typeprovider.hxx>
 #include <algorithm>
 
-namespace svxform
-{
-
-	IMPLEMENT_CONSTASCII_USTRING(DATA_MODE,"DataMode");
-	IMPLEMENT_CONSTASCII_USTRING(FILTER_MODE,"FilterMode");
-
-}	// namespace svxform
-
 using namespace ::com::sun::star::uno;
 using namespace ::com::sun::star::util;
 using namespace ::com::sun::star::lang;
diff --git svx/source/form/fmundo.cxx svx/source/form/fmundo.cxx
index f3b5c3d..dacea0b 100644
--- svx/source/form/fmundo.cxx
+++ svx/source/form/fmundo.cxx
@@ -540,7 +540,7 @@ void SAL_CALL FmXUndoEnvironment::propertyChange(const PropertyChangeEvent& evt)
 			return;
 
 		// if it's a "default value" property of a control model, set the according "value" property
-		static const sal_Char* pDefaultValueProperties[] = {
+		static ::rtl::OUString pDefaultValueProperties[] = {
 			FM_PROP_DEFAULT_TEXT, FM_PROP_DEFAULTCHECKED, FM_PROP_DEFAULT_DATE, FM_PROP_DEFAULT_TIME,
 			FM_PROP_DEFAULT_VALUE, FM_PROP_DEFAULT_SELECT_SEQ, FM_PROP_EFFECTIVE_DEFAULT
 		};
@@ -553,7 +553,7 @@ void SAL_CALL FmXUndoEnvironment::propertyChange(const PropertyChangeEvent& evt)
 			"FmXUndoEnvironment::propertyChange: inconsistence!");
 		for (sal_Int32 i=0; i<nDefaultValueProps; ++i)
 		{
-			if (0 == evt.PropertyName.compareToAscii(pDefaultValueProperties[i]))
+			if (0 == evt.PropertyName.compareTo(pDefaultValueProperties[i]))
 			{
 				try
 				{
diff --git svx/source/form/fmurl.cxx svx/source/form/fmurl.cxx
index 7f8cbc4..e69de29 100644
--- svx/source/form/fmurl.cxx
+++ svx/source/form/fmurl.cxx
@@ -1,74 +0,0 @@
-/*************************************************************************
- *
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- * 
- * Copyright 2008 by Sun Microsystems, Inc.
- *
- * OpenOffice.org - a multi-platform office productivity suite
- *
- * $RCSfile: fmurl.cxx,v $
- * $Revision: 1.7 $
- *
- * This file is part of OpenOffice.org.
- *
- * OpenOffice.org is free software: you can redistribute it and/or modify
- * it under the terms of the GNU Lesser General Public License version 3
- * only, as published by the Free Software Foundation.
- *
- * OpenOffice.org is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU Lesser General Public License version 3 for more details
- * (a copy is included in the LICENSE file that accompanied this code).
- *
- * You should have received a copy of the GNU Lesser General Public License
- * version 3 along with OpenOffice.org.  If not, see
- * <http://www.openoffice.org/license.html>
- * for a copy of the LGPLv3 License.
- *
- ************************************************************************/
-
-// MARKER(update_precomp.py): autogen include statement, do not remove
-#include "precompiled_svx.hxx"
-#include "fmurl.hxx"
-
-
-namespace svxform
-{
-
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_FORMSLOTS_PREFIX,   ".uno:FormController/");
-
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_FORM_POSITION,      ".uno:FormController/positionForm"  );
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_FORM_RECORDCOUNT,   ".uno:FormController/RecordCount"  );
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_RECORD_MOVEFIRST,   ".uno:FormController/moveToFirst"  );
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_RECORD_MOVEPREV,    ".uno:FormController/moveToPrev"   );
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_RECORD_MOVENEXT,    ".uno:FormController/moveToNext"   );
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_RECORD_MOVELAST,    ".uno:FormController/moveToLast"   );
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_RECORD_MOVETONEW,   ".uno:FormController/moveToNew"    );
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_RECORD_UNDO,        ".uno:FormController/undoRecord"   );
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_RECORD_SAVE,        ".uno:FormController/saveRecord"   );
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_RECORD_DELETE,      ".uno:FormController/deleteRecord" );
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_FORM_REFRESH,       ".uno:FormController/refreshForm"  );
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_FORM_REFRESH_CURRENT_CONTROL,
-                                                            ".uno:FormController/refreshCurrentControl"  );
-
-    IMPLEMENT_CONSTASCII_USTRING( FMURL_FORM_SORT_UP,      ".uno:FormController/sortUp"       );
-    IMPLEMENT_CONSTASCII_USTRING( FMURL_FORM_SORT_DOWN,    ".uno:FormController/sortDown"     );
-    IMPLEMENT_CONSTASCII_USTRING( FMURL_FORM_SORT,         ".uno:FormController/sort"         );
-    IMPLEMENT_CONSTASCII_USTRING( FMURL_FORM_AUTO_FILTER,  ".uno:FormController/autoFilter"   );
-    IMPLEMENT_CONSTASCII_USTRING( FMURL_FORM_FILTER,       ".uno:FormController/filter"       );
-    IMPLEMENT_CONSTASCII_USTRING( FMURL_FORM_APPLY_FILTER, ".uno:FormController/applyFilter"  );
-    IMPLEMENT_CONSTASCII_USTRING( FMURL_FORM_REMOVE_FILTER,".uno:FormController/removeFilterOrder" );
-
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_CONFIRM_DELETION,".uno:FormSlots/ConfirmDeletion");
-
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_COMPONENT_FORMGRIDVIEW,".component:DB/FormGridView");
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_GRIDVIEW_CLEARVIEW,".uno:FormSlots/ClearView");
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_GRIDVIEW_ADDCOLUMN,".uno:FormSlots/AddGridColumn");
-	IMPLEMENT_CONSTASCII_USTRING(FMURL_GRIDVIEW_ATTACHTOFORM,".uno:FormSlots/AttachToForm");
-
-	IMPLEMENT_CONSTASCII_USTRING(FMARG_ATTACHTO_MASTERFORM,"MasterForm");
-	IMPLEMENT_CONSTASCII_USTRING(FMARG_ADDCOL_COLUMNTYPE,"ColumnType");
-	IMPLEMENT_CONSTASCII_USTRING(FMARG_ADDCOL_COLUMNPOS,"ColumnPosition");
-
-}	// namespace svxform
diff --git svx/source/form/formcontrolling.cxx svx/source/form/formcontrolling.cxx
index 8f63ca1..6bf0afb 100644
--- svx/source/form/formcontrolling.cxx
+++ svx/source/form/formcontrolling.cxx
@@ -55,7 +55,6 @@ namespace svx
 {
 //........................................................................
 
-    using namespace ::svxform;
 	/** === begin UNO using === **/
     using ::com::sun::star::uno::Reference;
     using ::com::sun::star::lang::XMultiServiceFactory;
diff --git svx/source/form/makefile.mk svx/source/form/makefile.mk
index 0b5a7cd..403e6d4 100644
--- svx/source/form/makefile.mk
+++ svx/source/form/makefile.mk
@@ -33,6 +33,7 @@ PRJ=..$/..
 
 PRJNAME=svx
 TARGET=form
+LIBTARGET=NO
 
 ENABLE_EXCEPTIONS=TRUE
 
@@ -57,7 +58,8 @@ SRC1FILES= \
 	formshell.src   \
 	datanavi.src
 
-SLOFILES = \
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB1OBJFILES= \
 	$(SLO)$/formtoolbars.obj \
 	$(SLO)$/fmdocumentclassification.obj \
 	$(SLO)$/fmcontrolbordermanager.obj \
@@ -65,7 +67,6 @@ SLOFILES = \
 	$(SLO)$/fmtextcontroldialogs.obj \
 	$(SLO)$/fmtextcontrolfeature.obj \
 	$(SLO)$/fmtextcontrolshell.obj \
-	$(SLO)$/dbcharsethelper.obj			\
 	$(SLO)$/ParseContext.obj			\
 	$(SLO)$/typeconversionclient.obj    \
 	$(SLO)$/confirmdelete.obj      \
@@ -73,9 +74,7 @@ SLOFILES = \
 	$(SLO)$/sqlparserclient.obj      \
 	$(SLO)$/dataaccessdescriptor.obj      \
 	$(SLO)$/fmpage.obj      \
-	$(SLO)$/fmPropBrw.obj			\
 	$(SLO)$/fmundo.obj  	\
-	$(SLO)$/fmprop.obj      \
 	$(SLO)$/fmmodel.obj		\
 	$(SLO)$/navigatortree.obj      \
 	$(SLO)$/navigatortreemodel.obj      \
@@ -85,21 +84,14 @@ SLOFILES = \
 	$(SLO)$/fmvwimp.obj     \
 	$(SLO)$/fmdpage.obj		\
 	$(SLO)$/fmitems.obj  	\
-	$(SLO)$/tbxform.obj     \
 	$(SLO)$/fmobj.obj      	\
 	$(SLO)$/fmdmod.obj		\
-	$(SLO)$/fmobjfac.obj	\
-	$(SLO)$/fmsrccfg.obj	\
 	$(SLO)$/fmservs.obj     \
 	$(SLO)$/typemap.obj		\
 	$(SLO)$/fmexch.obj      \
-	$(SLO)$/tabwin.obj      \
-	$(SLO)$/fmurl.obj		\
-	$(SLO)$/filtnav.obj		\
 	$(SLO)$/fmtools.obj     \
 	$(SLO)$/fmshimp.obj     \
 	$(SLO)$/fmshell.obj     \
-	$(SLO)$/fmsrcimp.obj	\
 	$(SLO)$/fmview.obj		\
 	$(SLO)$/sdbdatacolumn.obj \
 	$(SLO)$/formcontrolling.obj \
@@ -109,13 +101,22 @@ SLOFILES = \
     $(SLO)$/datalistener.obj \
     $(SLO)$/fmscriptingenv.obj \
     $(SLO)$/stringlistresource.obj \
-    $(SLO)$/databaselocationinput.obj \
     $(SLO)$/delayedevent.obj \
     $(SLO)$/formcontrolfactory.obj
 
-.IF "$(OS)$(CPU)"=="SOLARISI"
-NOOPTFILES=$(SLO)$/fmprop.obj
-.ENDIF
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+LIB2OBJFILES= \
+	$(SLO)$/dbcharsethelper.obj			\
+	$(SLO)$/fmPropBrw.obj			\
+	$(SLO)$/tbxform.obj     \
+	$(SLO)$/fmobjfac.obj	\
+	$(SLO)$/fmsrccfg.obj	\
+	$(SLO)$/tabwin.obj      \
+	$(SLO)$/filtnav.obj		\
+	$(SLO)$/fmsrcimp.obj	\
+    $(SLO)$/databaselocationinput.obj
+
+SLOFILES = $(LIB1OBJFILES) $(LIB2OBJFILES)
 
 # --- Targets ----------------------------------
 
diff --git svx/source/gengal/makefile.mk svx/source/gengal/makefile.mk
index 92b38a7..9bb7bc1 100644
--- svx/source/gengal/makefile.mk
+++ svx/source/gengal/makefile.mk
@@ -71,7 +71,7 @@ APP1STDLIBS=$(TOOLSLIB) 		\
 			$(SOTLIB)			\
 			$(VCLLIB)			\
 			$(UCBHELPERLIB)		\
-			$(SVXLIB)
+			$(SVXCORELIB)
 
 #.IF "$(COM)"=="GCC"
 #ADDOPTFILES=$(OBJ)$/gengal.obj
diff --git svx/source/inc/AccessibleStringWrap.hxx svx/source/inc/AccessibleStringWrap.hxx
index dba73db..0d4e5c4 100644
--- svx/source/inc/AccessibleStringWrap.hxx
+++ svx/source/inc/AccessibleStringWrap.hxx
@@ -34,6 +34,8 @@
 #include <sal/types.h>
 #include <tools/string.hxx>
 
+#include <svx/svxdllapi.h>
+
 class OutputDevice;
 class SvxFont;
 class Rectangle;
@@ -49,10 +51,10 @@ class AccessibleStringWrap
 {
 public:
 
-    AccessibleStringWrap( OutputDevice& rDev, SvxFont& rFont, const String& rText );
+    SVX_DLLPUBLIC AccessibleStringWrap( OutputDevice& rDev, SvxFont& rFont, const String& rText );
 
-    sal_Bool GetCharacterBounds( sal_Int32 nIndex, Rectangle& rRect );
-    sal_Int32 GetIndexAtPoint( const Point& rPoint );
+    SVX_DLLPUBLIC sal_Bool GetCharacterBounds( sal_Int32 nIndex, Rectangle& rRect );
+    SVX_DLLPUBLIC sal_Int32 GetIndexAtPoint( const Point& rPoint );
 
 private:
     
diff --git svx/source/inc/datanavi.hxx svx/source/inc/datanavi.hxx
index 5f0e48c..b63dcb9 100644
--- svx/source/inc/datanavi.hxx
+++ svx/source/inc/datanavi.hxx
@@ -307,10 +307,10 @@ namespace svxform
 	};
 
 	//========================================================================
-	class DataNavigatorManager : public SfxChildWindow
+	class SVX_DLLPUBLIC DataNavigatorManager : public SfxChildWindow
 	{
 	public:
-		DataNavigatorManager( Window* pParent, sal_uInt16 nId,
+		SVX_DLLPRIVATE DataNavigatorManager( Window* pParent, sal_uInt16 nId,
 							  SfxBindings* pBindings, SfxChildWinInfo* pInfo );
 		SFX_DECL_CHILDWINDOW( DataNavigatorManager );
 	};
diff --git svx/source/inc/dbtoolsclient.hxx svx/source/inc/dbtoolsclient.hxx
index b1d41e0..56bd0cc 100644
--- svx/source/inc/dbtoolsclient.hxx
+++ svx/source/inc/dbtoolsclient.hxx
@@ -36,6 +36,7 @@
 #include <osl/module.h>
 #include <tools/solar.h>
 #include <unotools/sharedunocomponent.hxx>
+#include <svx/svxdllapi.h>
 
 //........................................................................
 namespace svxform
@@ -50,7 +51,7 @@ namespace svxform
 	/** base class for classes which want to use dbtools features with load-on-call
 		of the dbtools lib.
 	*/
-	class ODbtoolsClient
+	class SVX_DLLPUBLIC ODbtoolsClient
 	{
 	private:
 		static	::osl::Mutex	s_aMutex;
@@ -82,7 +83,7 @@ namespace svxform
 	//====================================================================
 	//= OStaticDataAccessTools
 	//====================================================================
-	class OStaticDataAccessTools : public ODbtoolsClient
+	class SVX_DLLPUBLIC OStaticDataAccessTools : public ODbtoolsClient
 	{
 	protected:
 		mutable ::rtl::Reference< ::connectivity::simple::IDataAccessTools >	m_xDataAccessTools;
@@ -93,7 +94,7 @@ namespace svxform
 	public:
 		OStaticDataAccessTools();
 
-		const ::rtl::Reference< ::connectivity::simple::IDataAccessTools >& getDataAccessTools() const { return m_xDataAccessTools; }
+		SVX_DLLPRIVATE const ::rtl::Reference< ::connectivity::simple::IDataAccessTools >& getDataAccessTools() const { return m_xDataAccessTools; }
 
 		// ------------------------------------------------
 		::com::sun::star::uno::Reference< ::com::sun::star::util::XNumberFormatsSupplier> getNumberFormats(
@@ -102,13 +103,13 @@ namespace svxform
 		) const;
 
 		// ------------------------------------------------
-	    sal_Int32 getDefaultNumberFormat(
+	    SVX_DLLPRIVATE sal_Int32 getDefaultNumberFormat(
             const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet >& _xColumn,
 			const ::com::sun::star::uno::Reference< ::com::sun::star::util::XNumberFormatTypes >& _xTypes,									 
 			const ::com::sun::star::lang::Locale& _rLocale );
 
 		// ------------------------------------------------
-		::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XConnection> getConnection_withFeedback(
+		SVX_DLLPRIVATE ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XConnection> getConnection_withFeedback(
 			const ::rtl::OUString& _rDataSourceName,
 			const ::rtl::OUString& _rUser,
 			const ::rtl::OUString& _rPwd,
@@ -130,26 +131,26 @@ namespace svxform
 				const SAL_THROW ( (::com::sun::star::uno::RuntimeException) );
 
 		// ------------------------------------------------
-		void TransferFormComponentProperties(
+		SVX_DLLPRIVATE void TransferFormComponentProperties(
 			const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet>& _rxOld,
 			const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet>& _rxNew,
 			const ::com::sun::star::lang::Locale& _rLocale
 		) const;
 
 		// ------------------------------------------------
-		::rtl::OUString quoteName(
+		SVX_DLLPRIVATE ::rtl::OUString quoteName(
 			const ::rtl::OUString& _rQuote,
 			const ::rtl::OUString& _rName
 		) const;
 
 		// ------------------------------------------------
-	    ::rtl::OUString composeTableNameForSelect(
+	    SVX_DLLPRIVATE ::rtl::OUString composeTableNameForSelect(
             const ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XConnection >& _rxConnection,
 			const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet>& _xTable
         ) const;
 
         // ------------------------------------------------
-		::com::sun::star::sdb::SQLContext prependContextInfo(
+		SVX_DLLPRIVATE ::com::sun::star::sdb::SQLContext prependContextInfo(
 			::com::sun::star::sdbc::SQLException& _rException,
 			const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& _rxContext,
 			const ::rtl::OUString& _rContextDescription,
@@ -157,7 +158,7 @@ namespace svxform
 		) const;
 
 		// ------------------------------------------------
-		::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XDataSource > getDataSource(
+		SVX_DLLPRIVATE ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XDataSource > getDataSource(
 				const ::rtl::OUString& _rsRegisteredName,
 				const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory>& _rxFactory
 			) const;
@@ -166,22 +167,22 @@ namespace svxform
 		/** check if the property "Privileges" supports ::com::sun::star::sdbcx::Privilege::INSERT
 			@param		_rxCursorSet	the property set
 		*/
-		sal_Bool canInsert(const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet>& _rxCursorSet) const;
+		SVX_DLLPRIVATE sal_Bool canInsert(const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet>& _rxCursorSet) const;
 
 		// ------------------------------------------------
 		/** check if the property "Privileges" supports ::com::sun::star::sdbcx::Privilege::UPDATE
 			@param		_rxCursorSet	the property set
 		*/
-		sal_Bool canUpdate(const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet>& _rxCursorSet) const;
+		SVX_DLLPRIVATE sal_Bool canUpdate(const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet>& _rxCursorSet) const;
 
 		// ------------------------------------------------
 		/** check if the property "Privileges" supports ::com::sun::star::sdbcx::Privilege::DELETE
 			@param		_rxCursorSet	the property set
 		*/
-		sal_Bool canDelete(const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet>& _rxCursorSet) const;
+		SVX_DLLPRIVATE sal_Bool canDelete(const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet>& _rxCursorSet) const;
 
 		// ------------------------------------------------
-		::com::sun::star::uno::Reference< ::com::sun::star::container::XNameAccess >
+		SVX_DLLPRIVATE ::com::sun::star::uno::Reference< ::com::sun::star::container::XNameAccess >
 			getFieldsByCommandDescriptor(
 				const ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XConnection >& _rxConnection,
 				const sal_Int32 _nCommandType,
@@ -200,13 +201,13 @@ namespace svxform
 			)	SAL_THROW( ( ) );
 
         // ------------------------------------------------
-        bool isEmbeddedInDatabase(
+        SVX_DLLPRIVATE bool isEmbeddedInDatabase(
             const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& _rxComponent,
             ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XConnection >& _rxActualConnection
         );
 
         // ------------------------------------------------
-        bool isEmbeddedInDatabase(
+        SVX_DLLPRIVATE bool isEmbeddedInDatabase(
             const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& _rxComponent
         );
 	};
diff --git svx/source/inc/filtnav.hxx svx/source/inc/filtnav.hxx
index fbce080..30f9ec1 100644
--- svx/source/inc/filtnav.hxx
+++ svx/source/inc/filtnav.hxx
@@ -43,13 +43,8 @@
 #include <vcl/image.hxx>
 #include <svtools/svtreebx.hxx>
 
-#ifndef _DIALOG_HXX //autogen
 #include <vcl/dialog.hxx>
-#endif
-
-#ifndef _GROUP_HXX //autogen
 #include <vcl/group.hxx>
-#endif
 #include <vcl/dockwin.hxx>
 #include "fmtools.hxx"
 #include "fmexch.hxx"
diff --git svx/source/inc/fmctrler.hxx svx/source/inc/fmctrler.hxx
index 2c56c5f..0430e04 100644
--- svx/source/inc/fmctrler.hxx
+++ svx/source/inc/fmctrler.hxx
@@ -273,7 +273,7 @@ public:
 // XUnoTunnel
     virtual sal_Int64 SAL_CALL getSomething( const ::com::sun::star::uno::Sequence< sal_Int8 >& aIdentifier ) throw(::com::sun::star::uno::RuntimeException);
 	static ::com::sun::star::uno::Sequence< sal_Int8 > getUnoTunnelImplementationId();
-    static FmXFormController* getImplementation( const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& _rxComponent );
+    SVX_DLLPUBLIC static FmXFormController* getImplementation( const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& _rxComponent );
 
 // XDispatch
 	virtual void SAL_CALL dispatch( const ::com::sun::star::util::URL& _rURL, const ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyValue >& _rArgs ) throw (::com::sun::star::uno::RuntimeException);
@@ -462,7 +462,7 @@ public:
 		--m_nCurrentFilterPosition;
 	}
 
-	void setCurrentFilterPosition(sal_Int32 nPos);
+	SVX_DLLPUBLIC void setCurrentFilterPosition(sal_Int32 nPos);
 	sal_Int32 getCurrentFilterPosition() const {return m_nCurrentFilterPosition;}
 
 protected:
diff --git svx/source/inc/fmexch.hxx svx/source/inc/fmexch.hxx
index d6c44bc..2547f6d 100644
--- svx/source/inc/fmexch.hxx
+++ svx/source/inc/fmexch.hxx
@@ -36,6 +36,8 @@
 #include <com/sun/star/container/XNameContainer.hpp>
 #include <tools/link.hxx>
 
+#include <svx/svxdllapi.h>
+
 class FmFormShell;
 class FmFormPage;
 class SvLBoxEntry;
@@ -63,7 +65,7 @@ namespace svxform
 	//====================================================================
 	//= OLocalExchange
 	//====================================================================
-	class OLocalExchange : public TransferableHelper
+	class SVX_DLLPUBLIC OLocalExchange : public TransferableHelper
 	{
 	private:
 		Link				m_aClipboardListener;
@@ -110,7 +112,7 @@ namespace svxform
 	//= OLocalExchangeHelper
 	//====================================================================
 	/// a helper for navigator windows (SvTreeListBox'es) which allow DnD within themself
-	class OLocalExchangeHelper
+	class SVX_DLLPUBLIC OLocalExchangeHelper
 	{
 	protected:
 		Window*				m_pDragSource;
@@ -130,13 +132,13 @@ namespace svxform
 		inline	sal_Bool	isDataExchangeActive( ) const { return isDragSource() || isClipboardOwner(); }
         inline  void        clear() { if ( isDataExchangeActive() ) m_pTransferable->clear(); }
 
-		void		setClipboardListener( const Link& _rListener ) { if ( m_pTransferable ) m_pTransferable->setClipboardListener( _rListener ); }
+		SVX_DLLPRIVATE void		setClipboardListener( const Link& _rListener ) { if ( m_pTransferable ) m_pTransferable->setClipboardListener( _rListener ); }
 
 	protected:
-		virtual OLocalExchange* createExchange() const = 0;
+		SVX_DLLPRIVATE virtual OLocalExchange* createExchange() const = 0;
 
 	protected:
-		void implReset();
+		SVX_DLLPRIVATE void implReset();
 	};
 
 	//====================================================================
diff --git svx/source/inc/fmexpl.hxx svx/source/inc/fmexpl.hxx
index 40f6522..28920e4 100644
--- svx/source/inc/fmexpl.hxx
+++ svx/source/inc/fmexpl.hxx
@@ -593,10 +593,10 @@ namespace svxform
 	};
 
 	//========================================================================
-	class NavigatorFrameManager : public SfxChildWindow
+	class SVX_DLLPUBLIC NavigatorFrameManager : public SfxChildWindow
 	{
 	public:
-		NavigatorFrameManager( Window *pParent, sal_uInt16 nId, SfxBindings *pBindings,
+		SVX_DLLPRIVATE NavigatorFrameManager( Window *pParent, sal_uInt16 nId, SfxBindings *pBindings,
 						  SfxChildWinInfo *pInfo );
 		SFX_DECL_CHILDWINDOW( NavigatorFrameManager );
 	};
diff --git svx/source/inc/fmobj.hxx svx/source/inc/fmobj.hxx
index defd657..0934fd6 100644
--- svx/source/inc/fmobj.hxx
+++ svx/source/inc/fmobj.hxx
@@ -62,8 +62,8 @@ class FmFormObj: public SdrUnoObj
                             // only to be used for comparison with the current ref device!
 
 public:
-	FmFormObj(const ::rtl::OUString& rModelName,sal_Int32 _nType);
-	FmFormObj(sal_Int32 _nType);
+	SVX_DLLPUBLIC FmFormObj(const ::rtl::OUString& rModelName,sal_Int32 _nType);
+	SVX_DLLPUBLIC FmFormObj(sal_Int32 _nType);
 
 	TYPEINFO();
 
diff --git svx/source/inc/fmprop.hrc svx/source/inc/fmprop.hrc
index 1c2204c..5f227c4 100644
--- svx/source/inc/fmprop.hrc
+++ svx/source/inc/fmprop.hrc
@@ -30,9 +30,6 @@
 #ifndef _SVX_FMPROP_HRC
 #define _SVX_FMPROP_HRC
 
-#ifndef _FM_STATIC_HXX_
-#include "fmstatic.hxx"
-#endif
 // PropertyId's, welche eine Zuordnung zu einen PropertyName haben, das koennten
 // auch in Zukunft WhichIds sein -> Itemset
 #define FM_ATTR_START			0
@@ -40,150 +37,144 @@
 #define FM_ATTR_FILTER          ( FM_ATTR_START + 1 )
 #define FM_ATTR_FORM_OPERATIONS ( FM_ATTR_START + 2 )
 
-
-namespace svxform
-{
-	DECLARE_CONSTASCII_USTRING(FM_PROP_NAME);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_CLASSID);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ALIGN);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ROWCOUNT);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ROWCOUNTFINAL);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_FETCHSIZE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_VALUE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_VALUEMIN);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_VALUEMAX);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_VALUESTEP);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_TEXT);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_LABEL);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_NAVIGATION);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_CYCLE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_CONTROLSOURCE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ENABLED);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_SPIN);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_READONLY);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_FILTER);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_AUTOINCREMENT);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_WIDTH);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_SEARCHABLE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_MULTILINE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_TARGET_URL);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DEFAULTCONTROL);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_MAXTEXTLEN);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DATE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_TIME);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_STATE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_TRISTATE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_STRINGITEMLIST);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DEFAULT_TEXT);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DEFAULTCHECKED);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DEFAULT_DATE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DEFAULT_TIME);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DEFAULT_VALUE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_FORMATKEY);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_FORMATSSUPPLIER);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_LISTSOURCETYPE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_LISTSOURCE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_SELECT_SEQ);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_VALUE_SEQ);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DEFAULT_SELECT_SEQ);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DECIMAL_ACCURACY);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_EDITMASK);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ISREADONLY);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_FIELDTYPE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_REFVALUE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_STRICTFORMAT);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DATASOURCE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_LITERALMASK);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_SHOWTHOUSANDSEP);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_CURRENCYSYMBOL);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DATEFORMAT);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DATEMIN);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DATEMAX);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DATE_SHOW_CENTURY);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_TIMEFORMAT);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_TIMEMIN);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_TIMEMAX);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_LINECOUNT);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_BOUNDCOLUMN);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_HASNAVIGATION);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_FONT);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_BACKGROUNDCOLOR);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_TEXTCOLOR);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_BORDER);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DROPDOWN);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ROWHEIGHT);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_HELPTEXT);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_HELPURL);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_RECORDMARKER);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_BOUNDFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_EFFECTIVE_VALUE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_EFFECTIVE_DEFAULT);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_EFFECTIVE_MIN);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_EFFECTIVE_MAX);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_HIDDEN);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_FILTERPROPOSAL);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_FIELDSOURCE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_TABLENAME);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_FILTERSUPPLIER);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_CURRENTFILTER);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_SELECTED_FIELDS);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_SELECTED_TABLES);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_THREADSAFE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_CONTROLLABEL);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_CURSORCOLOR);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ALWAYSSHOWCURSOR);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_DISPLAYSYNCHRON);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ISMODIFIED);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ISNEW);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_PRIVILEGES);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_COMMAND);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_COMMANDTYPE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_RESULTSET_CONCURRENCY);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_INSERTONLY);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_RESULTSET_TYPE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ESCAPE_PROCESSING);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_APPLYFILTER);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ISNULLABLE);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ACTIVECOMMAND);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ISCURRENCY);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_URL);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_ACTIVE_CONNECTION);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_SORT);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_CONTROLSOURCEPROPERTY);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_REALNAME);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_TEXTLINECOLOR);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_FONTEMPHASISMARK);
-	DECLARE_CONSTASCII_USTRING(FM_PROP_FONTRELIEF);
-	DECLARE_CONSTASCII_USTRING( FM_PROP_SCROLLVALUE_MIN );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_SCROLLVALUE_MAX );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_DEFAULT_SCROLLVALUE );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_LINEINCREMENT );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_BLOCKINCREMENT );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_ORIENTATION );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_REPEAT );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_REPEATDELAY );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_SYMBOLCOLOR );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_VISIBILESIZE );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_SPINVALUE_MIN );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_SPINVALUE_MAX );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_DEFAULT_SPINVALUE );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_SPININCREMENT );
-    DECLARE_CONSTASCII_USTRING( FM_PROP_LINEENDFORMAT );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_TOGGLE );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_FOCUSONCLICK );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_HIDEINACTIVESELECTION );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_VISUALEFFECT );
-	DECLARE_CONSTASCII_USTRING( FM_PROP_BORDERCOLOR );
-    DECLARE_CONSTASCII_USTRING( FM_PROP_DYNAMIC_CONTROL_BORDER );
-    DECLARE_CONSTASCII_USTRING( FM_PROP_CONTROL_BORDER_COLOR_FOCUS );
-    DECLARE_CONSTASCII_USTRING( FM_PROP_CONTROL_BORDER_COLOR_MOUSE );
-    DECLARE_CONSTASCII_USTRING( FM_PROP_CONTROL_BORDER_COLOR_INVALID );
-    DECLARE_CONSTASCII_USTRING( FM_PROP_BUTTON_TYPE );
-    DECLARE_CONSTASCII_USTRING( FM_PROP_FORM_OPERATIONS );
-    DECLARE_CONSTASCII_USTRING( FM_PROP_INPUT_REQUIRED );
-    DECLARE_CONSTASCII_USTRING( FM_PROP_WRITING_MODE );
-
-}	// namespace svxform
+#define FM_PROP_NAME                         rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Name" ) )
+#define FM_PROP_CLASSID                      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ClassId" ) )
+#define FM_PROP_ALIGN                        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Align" ) )
+#define FM_PROP_ROWCOUNT                     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "RowCount" ) )
+#define FM_PROP_ROWCOUNTFINAL                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IsRowCountFinal" ) )
+#define FM_PROP_FETCHSIZE                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "FetchSize" ) )
+#define FM_PROP_VALUE                        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Value" ) )
+#define FM_PROP_VALUEMIN                     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ValueMin" ) )
+#define FM_PROP_VALUEMAX                     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ValueMax" ) )
+#define FM_PROP_VALUESTEP                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ValueStep" ) )
+#define FM_PROP_TEXT                         rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Text" ) )
+#define FM_PROP_LABEL                        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Label" ) )
+#define FM_PROP_NAVIGATION                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "NavigationBarMode" ) )
+#define FM_PROP_CYCLE                        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Cycle" ) )
+#define FM_PROP_CONTROLSOURCE                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DataField" ) )
+#define FM_PROP_ENABLED                      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Enabled" ) )
+#define FM_PROP_SPIN                         rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Spin" ) )
+#define FM_PROP_READONLY                     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ReadOnly" ) )
+#define FM_PROP_FILTER                       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Filter" ) )
+#define FM_PROP_AUTOINCREMENT                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IsAutoIncrement" ) )
+#define FM_PROP_WIDTH                        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Width" ) )
+#define FM_PROP_SEARCHABLE                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IsSearchable" ) )
+#define FM_PROP_MULTILINE                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "MultiLine" ) )
+#define FM_PROP_TARGET_URL                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "TargetURL" ) )
+#define FM_PROP_DEFAULTCONTROL               rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DefaultControl" ) )
+#define FM_PROP_MAXTEXTLEN                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "MaxTextLen" ) )
+#define FM_PROP_DATE                         rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Date" ) )
+#define FM_PROP_TIME                         rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Time" ) )
+#define FM_PROP_STATE                        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "State" ) )
+#define FM_PROP_TRISTATE                     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "TriState" ) )
+#define FM_PROP_STRINGITEMLIST               rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "StringItemList" ) )
+#define FM_PROP_DEFAULT_TEXT                 rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DefaultText" ) )
+#define FM_PROP_DEFAULTCHECKED               rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DefaultState" ) )
+#define FM_PROP_DEFAULT_DATE                 rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DefaultDate" ) )
+#define FM_PROP_DEFAULT_TIME                 rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DefaultTime" ) )
+#define FM_PROP_DEFAULT_VALUE                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DefaultValue" ) )
+#define FM_PROP_FORMATKEY                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "FormatKey" ) )
+#define FM_PROP_FORMATSSUPPLIER              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "FormatsSupplier" ) )
+#define FM_PROP_LISTSOURCETYPE               rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ListSourceType" ) )
+#define FM_PROP_LISTSOURCE                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ListSource" ) )
+#define FM_PROP_SELECT_SEQ                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "SelectedItems" ) )
+#define FM_PROP_VALUE_SEQ                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ValueItemList" ) )
+#define FM_PROP_DEFAULT_SELECT_SEQ           rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DefaultSelection" ) )
+#define FM_PROP_DECIMAL_ACCURACY             rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DecimalAccuracy" ) )
+#define FM_PROP_EDITMASK                     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "EditMask" ) )
+#define FM_PROP_ISREADONLY                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IsReadOnly" ) )
+#define FM_PROP_FIELDTYPE                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Type" ) )
+#define FM_PROP_REFVALUE                     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "RefValue" ) )
+#define FM_PROP_STRICTFORMAT                 rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "StrictFormat" ) )
+#define FM_PROP_DATASOURCE                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DataSourceName" ) )
+#define FM_PROP_LITERALMASK                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "LiteralMask" ) )
+#define FM_PROP_SHOWTHOUSANDSEP              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ShowThousandsSeparator" ) )
+#define FM_PROP_CURRENCYSYMBOL               rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "CurrencySymbol" ) )
+#define FM_PROP_DATEFORMAT                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DateFormat" ) )
+#define FM_PROP_DATEMIN                      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DateMin" ) )
+#define FM_PROP_DATEMAX                      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DateMax" ) )
+#define FM_PROP_DATE_SHOW_CENTURY            rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DateShowCentury" ) )
+#define FM_PROP_TIMEFORMAT                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "TimeFormat" ) )
+#define FM_PROP_TIMEMIN                      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "TimeMin" ) )
+#define FM_PROP_TIMEMAX                      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "TimeMax" ) )
+#define FM_PROP_LINECOUNT                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "LineCount" ) )
+#define FM_PROP_BOUNDCOLUMN                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "BoundColumn" ) )
+#define FM_PROP_HASNAVIGATION                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "HasNavigationBar" ) )
+#define FM_PROP_FONT                         rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "FontDescriptor" ) )
+#define FM_PROP_BACKGROUNDCOLOR              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "BackgroundColor" ) )
+#define FM_PROP_TEXTCOLOR                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "TextColor" ) )
+#define FM_PROP_BORDER                       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Border" ) )
+#define FM_PROP_DROPDOWN                     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Dropdown" ) )
+#define FM_PROP_ROWHEIGHT                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "RowHeight" ) )
+#define FM_PROP_HELPTEXT                     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "HelpText" ) )
+#define FM_PROP_HELPURL                      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "HelpURL" ) )
+#define FM_PROP_RECORDMARKER                 rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "HasRecordMarker" ) )
+#define FM_PROP_BOUNDFIELD                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "BoundField" ) )
+#define FM_PROP_EFFECTIVE_VALUE              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "EffectiveValue" ) )
+#define FM_PROP_EFFECTIVE_DEFAULT            rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "EffectiveDefault" ) )
+#define FM_PROP_EFFECTIVE_MIN                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "EffectiveMin" ) )
+#define FM_PROP_EFFECTIVE_MAX                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "EffectiveMax" ) )
+#define FM_PROP_HIDDEN                       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Hidden" ) )
+#define FM_PROP_FILTERPROPOSAL               rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "UseFilterValueProposal" ) )
+#define FM_PROP_FIELDSOURCE                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "FieldSource" ) )
+#define FM_PROP_TABLENAME                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "TableName" ) )
+#define FM_PROP_FILTERSUPPLIER               rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "FilterSupplier" ) )
+#define FM_PROP_CURRENTFILTER                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "CurrentFilter" ) )
+#define FM_PROP_SELECTED_FIELDS              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "SelectedFields" ) )
+#define FM_PROP_SELECTED_TABLES              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "SelectedTables" ) )
+#define FM_PROP_THREADSAFE                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ThreadSafe" ) )
+#define FM_PROP_CONTROLLABEL                 rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "LabelControl" ) )
+#define FM_PROP_CURSORCOLOR                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "CursorColor" ) )
+#define FM_PROP_ALWAYSSHOWCURSOR             rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "AlwaysShowCursor" ) )
+#define FM_PROP_DISPLAYSYNCHRON              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DisplayIsSynchron" ) )
+#define FM_PROP_ISMODIFIED                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IsModified" ) )
+#define FM_PROP_ISNEW                        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IsNew" ) )
+#define FM_PROP_PRIVILEGES                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Privileges" ) )
+#define FM_PROP_COMMAND                      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Command" ) )
+#define FM_PROP_COMMANDTYPE                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "CommandType" ) )
+#define FM_PROP_RESULTSET_CONCURRENCY        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ResultSetConcurrency" ) )
+#define FM_PROP_INSERTONLY                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IgnoreResult" ) )
+#define FM_PROP_RESULTSET_TYPE               rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ResultSetType" ) )
+#define FM_PROP_ESCAPE_PROCESSING            rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "EscapeProcessing" ) )
+#define FM_PROP_APPLYFILTER                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ApplyFilter" ) )
+#define FM_PROP_ISNULLABLE                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IsNullable" ) )
+#define FM_PROP_ACTIVECOMMAND                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ActiveCommand" ) )
+#define FM_PROP_ISCURRENCY                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "IsCurrency" ) )
+#define FM_PROP_URL                          rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "URL" ) )
+#define FM_PROP_ACTIVE_CONNECTION            rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ActiveConnection" ) )
+#define FM_PROP_SORT                         rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Order" ) )
+#define FM_PROP_CONTROLSOURCEPROPERTY        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DataFieldProperty" ) )
+#define FM_PROP_REALNAME                     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "RealName" ) )
+#define FM_PROP_TEXTLINECOLOR                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "TextLineColor" ) )
+#define FM_PROP_FONTEMPHASISMARK             rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "FontEmphasisMark" ) )
+#define FM_PROP_FONTRELIEF                   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "FontRelief" ) )
+#define FM_PROP_SCROLLVALUE_MIN              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ScrollValueMin" ) )
+#define FM_PROP_SCROLLVALUE_MAX              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ScrollValueMax" ) )
+#define FM_PROP_DEFAULT_SCROLLVALUE          rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DefaultScrollValue" ) )
+#define FM_PROP_LINEINCREMENT                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "LineIncrement" ) )
+#define FM_PROP_BLOCKINCREMENT               rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "BlockIncrement" ) )
+#define FM_PROP_ORIENTATION                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Orientation" ) )
+#define FM_PROP_REPEAT                       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Repeat" ) )
+#define FM_PROP_REPEATDELAY                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "RepeatDelay" ) )
+#define FM_PROP_SYMBOLCOLOR                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "SymbolColor" ) )
+#define FM_PROP_VISIBILESIZE                 rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "VisibleSize" ) )
+#define FM_PROP_SPINVALUE_MIN                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "SpinValueMin" ) )
+#define FM_PROP_SPINVALUE_MAX                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "SpinValueMax" ) )
+#define FM_PROP_DEFAULT_SPINVALUE            rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DefaultSpinValue" ) )
+#define FM_PROP_SPININCREMENT                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "SpinIncrement" ) )
+#define FM_PROP_LINEENDFORMAT                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "LineEndFormat" ) )
+#define FM_PROP_TOGGLE                       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "Toggle" ) )
+#define FM_PROP_FOCUSONCLICK                 rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "FocusOnClick" ) )
+#define FM_PROP_HIDEINACTIVESELECTION        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "HideInactiveSelection" ) )
+#define FM_PROP_VISUALEFFECT                 rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "VisualEffect" ) )
+#define FM_PROP_BORDERCOLOR                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "BorderColor" ) )
+#define FM_PROP_DYNAMIC_CONTROL_BORDER       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DynamicControlBorder" ) )
+#define FM_PROP_CONTROL_BORDER_COLOR_FOCUS   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ControlBorderColorOnFocus" ) )
+#define FM_PROP_CONTROL_BORDER_COLOR_MOUSE   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ControlBorderColorOnHover" ) )
+#define FM_PROP_CONTROL_BORDER_COLOR_INVALID rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ControlBorderColorOnInvalid" ) )
+#define FM_PROP_BUTTON_TYPE                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ButtonType" ) )
+#define FM_PROP_FORM_OPERATIONS              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "FormOperations" ) )
+#define FM_PROP_INPUT_REQUIRED               rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "InputRequired" ) )
+#define FM_PROP_WRITING_MODE                 rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "WritingMode" ) )
 
 #endif // _SVX_FMPROP_HRC
-
diff --git svx/source/inc/fmservs.hxx svx/source/inc/fmservs.hxx
index e70374f..13c0c73 100644
--- svx/source/inc/fmservs.hxx
+++ svx/source/inc/fmservs.hxx
@@ -30,76 +30,64 @@
 #ifndef _SVX_FMSERVS_HXX
 #define _SVX_FMSERVS_HXX
 
-#include "fmstatic.hxx"
+#include <svx/svxdllapi.h>
+
+#define FM_NUMBER_FORMATTER             rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.util.NumberFormatter" ) )
+#define FM_COMPONENT_EDIT               rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.Edit" ) )
+#define FM_COMPONENT_TEXTFIELD          rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.TextField" ) )
+#define FM_COMPONENT_LISTBOX            rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.ListBox" ) )
+#define FM_COMPONENT_COMBOBOX           rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.ComboBox" ) )
+#define FM_COMPONENT_RADIOBUTTON        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.RadioButton" ) )
+#define FM_COMPONENT_GROUPBOX           rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.GroupBox" ) )
+#define FM_COMPONENT_FIXEDTEXT          rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.FixedText" ) )
+#define FM_COMPONENT_COMMANDBUTTON      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.CommandButton" ) )
+#define FM_COMPONENT_CHECKBOX           rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.CheckBox" ) )
+#define FM_COMPONENT_GRID               rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.Grid" ) )
+#define FM_COMPONENT_GRIDCONTROL        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.GridControl" ) )
+#define FM_COMPONENT_IMAGEBUTTON        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.ImageButton" ) )
+#define FM_COMPONENT_FILECONTROL        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.FileControl" ) )
+#define FM_COMPONENT_TIMEFIELD          rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.TimeField" ) )
+#define FM_COMPONENT_DATEFIELD          rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.DateField" ) )
+#define FM_COMPONENT_NUMERICFIELD       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.NumericField" ) )
+#define FM_COMPONENT_CURRENCYFIELD      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.CurrencyField" ) )
+#define FM_COMPONENT_PATTERNFIELD       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.PatternField" ) )
+#define FM_COMPONENT_FORMATTEDFIELD     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.FormattedField" ) )
+#define FM_COMPONENT_HIDDEN             rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.Hidden" ) )
+#define FM_COMPONENT_HIDDENCONTROL      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.HiddenControl" ) )
+#define FM_COMPONENT_IMAGECONTROL       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.component.ImageControl" ) )
+#define FM_CONTROL_GRID                 rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.control.Grid" ) )
+#define FM_CONTROL_GRIDCONTROL          rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "stardiv.one.form.control.GridControl" ) )
+#define FM_FORM_CONTROLLER              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.FormController" ) )
+#define SRV_SDB_CONNECTION              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.sdb.Connection" ) )
+#define SRV_SDB_INTERACTION_HANDLER     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.sdb.InteractionHandler" ) )
+#define FM_SUN_COMPONENT_FORM           rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.Form" ) )
+#define FM_SUN_COMPONENT_TEXTFIELD      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.TextField" ) )
+#define FM_SUN_COMPONENT_LISTBOX        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.ListBox" ) )
+#define FM_SUN_COMPONENT_COMBOBOX       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.ComboBox" ) )
+#define FM_SUN_COMPONENT_RADIOBUTTON    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.RadioButton" ) )
+#define FM_SUN_COMPONENT_GROUPBOX       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.GroupBox" ) )
+#define FM_SUN_COMPONENT_FIXEDTEXT      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.FixedText" ) )
+#define FM_SUN_COMPONENT_COMMANDBUTTON  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.CommandButton" ) )
+#define FM_SUN_COMPONENT_CHECKBOX       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.CheckBox" ) )
+#define FM_SUN_COMPONENT_GRIDCONTROL    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.GridControl" ) )
+#define FM_SUN_COMPONENT_IMAGEBUTTON    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.ImageButton" ) )
+#define FM_SUN_COMPONENT_FILECONTROL    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.FileControl" ) )
+#define FM_SUN_COMPONENT_TIMEFIELD      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.TimeField" ) )
+#define FM_SUN_COMPONENT_DATEFIELD      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.DateField" ) )
+#define FM_SUN_COMPONENT_NUMERICFIELD   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.NumericField" ) )
+#define FM_SUN_COMPONENT_CURRENCYFIELD  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.CurrencyField" ) )
+#define FM_SUN_COMPONENT_PATTERNFIELD   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.PatternField" ) )
+#define FM_SUN_COMPONENT_HIDDENCONTROL  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.HiddenControl" ) )
+#define FM_SUN_COMPONENT_IMAGECONTROL   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.DatabaseImageControl" ) )
+#define FM_SUN_COMPONENT_FORMATTEDFIELD rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.FormattedField" ) )
+#define FM_SUN_COMPONENT_SCROLLBAR      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.ScrollBar" ) )
+#define FM_SUN_COMPONENT_SPINBUTTON     rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.SpinButton" ) )
+#define FM_SUN_COMPONENT_NAVIGATIONBAR  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.component.NavigationToolBar" ) )
+#define FM_SUN_CONTROL_GRIDCONTROL      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.form.control.GridControl" ) )
 
 namespace svxform
 {
-
-	DECLARE_CONSTASCII_USTRING(FM_NUMBER_FORMATTER);
-
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_EDIT);		// alter service name (5.0)
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_TEXTFIELD);
-
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_LISTBOX);
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_COMBOBOX);
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_RADIOBUTTON);
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_GROUPBOX);
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_FIXEDTEXT);
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_COMMANDBUTTON);
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_CHECKBOX);
-
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_GRID);		// alter service name (5.0)
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_GRIDCONTROL);
-
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_IMAGEBUTTON);
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_FILECONTROL);
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_TIMEFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_DATEFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_NUMERICFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_CURRENCYFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_PATTERNFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_FORMATTEDFIELD);
-
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_HIDDEN);	// alter service name (5.0)
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_HIDDENCONTROL);
-
-	DECLARE_CONSTASCII_USTRING(FM_COMPONENT_IMAGECONTROL);
-
-	DECLARE_CONSTASCII_USTRING(FM_CONTROL_GRID);
-	DECLARE_CONSTASCII_USTRING(FM_CONTROL_GRIDCONTROL);
-
-	DECLARE_CONSTASCII_USTRING(FM_FORM_CONTROLLER);
-	DECLARE_CONSTASCII_USTRING(SRV_SDB_CONNECTION);
-	DECLARE_CONSTASCII_USTRING(SRV_SDB_INTERACTION_HANDLER);
-
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_FORM);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_TEXTFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_LISTBOX);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_COMBOBOX);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_RADIOBUTTON);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_GROUPBOX);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_FIXEDTEXT);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_COMMANDBUTTON);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_CHECKBOX);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_GRIDCONTROL);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_IMAGEBUTTON);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_FILECONTROL);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_TIMEFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_DATEFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_NUMERICFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_CURRENCYFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_PATTERNFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_HIDDENCONTROL);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_IMAGECONTROL);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_FORMATTEDFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_SCROLLBAR);
-	DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_SPINBUTTON);
-    DECLARE_CONSTASCII_USTRING(FM_SUN_COMPONENT_NAVIGATIONBAR);
-
-	DECLARE_CONSTASCII_USTRING(FM_SUN_CONTROL_GRIDCONTROL);
-
-	void ImplSmartRegisterUnoServices();
-
+	SVX_DLLPUBLIC void ImplSmartRegisterUnoServices();
 }	// namespace svxform
 
 #endif // _SVX_FMSERVS_HXX
diff --git svx/source/inc/fmshimp.hxx svx/source/inc/fmshimp.hxx
index 8d20b1d..f5c28d2 100644
--- svx/source/inc/fmshimp.hxx
+++ svx/source/inc/fmshimp.hxx
@@ -421,7 +421,7 @@ public:
 
     /** retrieves the current selection
     */
-    void    getCurrentSelection( InterfaceBag& /* [out] */ _rSelection ) const;
+    SVX_DLLPUBLIC void    getCurrentSelection( InterfaceBag& /* [out] */ _rSelection ) const;
 
     /** sets a new current selection as indicated by a mark list
         @return
@@ -622,7 +622,7 @@ public:
 
 // ========================================================================
 SV_DECL_PTRARR_DEL(StatusForwarderArray, SfxStatusForwarder*, 16, 0)
-class SAL_DLLPRIVATE ControlConversionMenuController : public SfxMenuControl
+class SVX_DLLPUBLIC ControlConversionMenuController : public SfxMenuControl
 {
 protected:
 	StatusForwarderArray	m_aStatusForwarders;
@@ -630,11 +630,11 @@ protected:
 	PopupMenu*				m_pConversionMenu;
 
 public:
-	ControlConversionMenuController(sal_uInt16 nId, Menu& rMenu, SfxBindings& rBindings);
-	virtual ~ControlConversionMenuController();
+	SVX_DLLPRIVATE ControlConversionMenuController(sal_uInt16 nId, Menu& rMenu, SfxBindings& rBindings);
+	SVX_DLLPRIVATE virtual ~ControlConversionMenuController();
 	SFX_DECL_MENU_CONTROL();
 
-	virtual void StateChanged(sal_uInt16 nSID, SfxItemState eState, const SfxPoolItem* pState);
+	SVX_DLLPRIVATE virtual void StateChanged(sal_uInt16 nSID, SfxItemState eState, const SfxPoolItem* pState);
 };
 
 //==================================================================
diff --git svx/source/inc/fmstatic.hxx svx/source/inc/fmstatic.hxx
index 2da97ed..e69de29 100644
--- svx/source/inc/fmstatic.hxx
+++ svx/source/inc/fmstatic.hxx
@@ -1,81 +0,0 @@
-/*************************************************************************
- *
- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
- * 
- * Copyright 2008 by Sun Microsystems, Inc.
- *
- * OpenOffice.org - a multi-platform office productivity suite
- *
- * $RCSfile: fmstatic.hxx,v $
- * $Revision: 1.6 $
- *
- * This file is part of OpenOffice.org.
- *
- * OpenOffice.org is free software: you can redistribute it and/or modify
- * it under the terms of the GNU Lesser General Public License version 3
- * only, as published by the Free Software Foundation.
- *
- * OpenOffice.org is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU Lesser General Public License version 3 for more details
- * (a copy is included in the LICENSE file that accompanied this code).
- *
- * You should have received a copy of the GNU Lesser General Public License
- * version 3 along with OpenOffice.org.  If not, see
- * <http://www.openoffice.org/license.html>
- * for a copy of the LGPLv3 License.
- *
- ************************************************************************/
-
-#ifndef _FM_STATIC_HXX_
-#define _FM_STATIC_HXX_
-#include <tools/string.hxx>
-
-struct ConstAsciiString
-{
-	const sal_Char*	ascii;
-	sal_Int32		length;
-
-	inline	operator const ::rtl::OUString () const;
-	inline	operator const sal_Char* () const { return ascii; }
-
-	inline ConstAsciiString(const sal_Char* _pAsciiZeroTerminated, const sal_Int32 _nLength);
-	inline ~ConstAsciiString();
-
-private:
-	mutable ::rtl::OUString*	ustring;
-};
-
-//------------------------------------------------------------
-inline ConstAsciiString::ConstAsciiString(const sal_Char* _pAsciiZeroTerminated, const sal_Int32 _nLength)
-	:ascii(_pAsciiZeroTerminated)
-	,length(_nLength)
-	,ustring(NULL)
-{
-}
-
-//------------------------------------------------------------
-inline ConstAsciiString::~ConstAsciiString()
-{
-	delete ustring;
-	ustring = NULL;
-}
-
-//------------------------------------------------------------
-inline ConstAsciiString::operator const ::rtl::OUString () const
-{
-	if (!ustring)
-		ustring = new ::rtl::OUString(ascii, length, RTL_TEXTENCODING_ASCII_US);
-	return *ustring;
-}
-
-#define DECLARE_CONSTASCII_USTRING(name)	\
-	extern ConstAsciiString name
-
-#define IMPLEMENT_CONSTASCII_USTRING(name, asciivalue)	\
-	ConstAsciiString name(asciivalue, sizeof(asciivalue) - 1)
-
-
-#endif // _FM_STATIC_HXX_
-
diff --git svx/source/inc/fmtools.hxx svx/source/inc/fmtools.hxx
index 5ea0d0e..adfbc05 100644
--- svx/source/inc/fmtools.hxx
+++ svx/source/inc/fmtools.hxx
@@ -39,9 +39,7 @@
 #include <com/sun/star/sdbc/XDatabaseMetaData.hpp>
 #include <com/sun/star/sdb/XColumn.hpp>
 #include <com/sun/star/sdb/XColumnUpdate.hpp>
-#ifndef _COM_SUN_STAR_SDBC_SQLERROREVENT_HPP_
 #include <com/sun/star/sdb/SQLErrorEvent.hpp>
-#endif
 #include <com/sun/star/sdbc/XConnection.hpp>
 #include <com/sun/star/sdbc/XResultSet.hpp>
 #include <com/sun/star/sdbc/XResultSetUpdate.hpp>
@@ -81,9 +79,7 @@
 #include <tools/time.hxx>
 #include <tools/datetime.hxx>
 
-#ifndef _SVX_FMPROP_HRC
 #include "fmprop.hrc"
-#endif
 #include <com/sun/star/sdbc/XConnection.hpp>
 #include <com/sun/star/io/XObjectInputStream.hpp>
 #include <com/sun/star/io/XObjectOutputStream.hpp>
@@ -100,7 +96,8 @@
 #include <cppuhelper/implbase2.hxx>
 #include <cppuhelper/implbase3.hxx>
 #include <cppuhelper/component.hxx>
-#include "fmstatic.hxx"
+
+#include <svx/svxdllapi.h>
 
 #include <set>
 
@@ -113,19 +110,12 @@ class Window;
 // display info about a simple ::com::sun::star::sdbc::SQLException
 void displayException(const ::com::sun::star::sdbc::SQLException&, Window* _pParent = NULL);
 void displayException(const ::com::sun::star::sdbc::SQLWarning&, Window* _pParent = NULL);
-void displayException(const ::com::sun::star::sdb::SQLContext&, Window* _pParent = NULL);
+SVX_DLLPUBLIC void displayException(const ::com::sun::star::sdb::SQLContext&, Window* _pParent = NULL);
 void displayException(const ::com::sun::star::sdb::SQLErrorEvent&, Window* _pParent = NULL);
 void displayException(const ::com::sun::star::uno::Any&, Window* _pParent = NULL);
 
-// StringConversion
-namespace svxform
-{
-	// modes for the XModeSelector
-	DECLARE_CONSTASCII_USTRING(DATA_MODE);
-	DECLARE_CONSTASCII_USTRING(FILTER_MODE);
-
-}	// namespace svxform
-
+#define DATA_MODE   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DataMode" ) )
+#define FILTER_MODE rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "FilterMode" ) )
 
 // Kopieren von Persistenten Objecten
 ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface> cloneUsingProperties(const ::com::sun::star::uno::Reference< ::com::sun::star::io::XPersistObject>& _xObj);
@@ -143,7 +133,7 @@ String getFormComponentAccessPath(const ::com::sun::star::uno::Reference< ::com:
 
 ::com::sun::star::uno::Reference< ::com::sun::star::frame::XModel> getXModel(const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface>& xIface);
 
-::rtl::OUString getLabelName(const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet>& xControlModel);
+SVX_DLLPUBLIC ::rtl::OUString getLabelName(const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet>& xControlModel);
 
 // ===================================================================================================
 // = class CursorWrapper - eine Hilfsklasse, die parallel mit je einem ::com::sun::star::uno::Reference<XDatabaseUpdateCursor>,
@@ -163,7 +153,7 @@ public:
 	// Construction/Destruction
 	CursorWrapper() { }
 	CursorWrapper(const ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XRowSet>& _rxCursor, sal_Bool bUseCloned = sal_False);
-	CursorWrapper(const ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XResultSet>& _rxCursor, sal_Bool bUseCloned = sal_False);
+	SVX_DLLPUBLIC CursorWrapper(const ::com::sun::star::uno::Reference< ::com::sun::star::sdbc::XResultSet>& _rxCursor, sal_Bool bUseCloned = sal_False);
 		// bei bUseCloned == sal_True wird der Cursor ueber das XCloneable-Interface (dass er besitzen muss) gedoubled und
 		// erst dann benutzt
 
diff --git svx/source/inc/fmurl.hxx svx/source/inc/fmurl.hxx
index 93f3840..9513fa1 100644
--- svx/source/inc/fmurl.hxx
+++ svx/source/inc/fmurl.hxx
@@ -31,46 +31,33 @@
 #ifndef _SVX_FMURL_HXX
 #define _SVX_FMURL_HXX
 
-#include "fmstatic.hxx"
-
-namespace svxform
-{
-
-	DECLARE_CONSTASCII_USTRING(FMURL_FORMSLOTS_PREFIX);
-
-	DECLARE_CONSTASCII_USTRING(FMURL_FORM_POSITION);
-	DECLARE_CONSTASCII_USTRING(FMURL_FORM_RECORDCOUNT);
-	DECLARE_CONSTASCII_USTRING(FMURL_RECORD_MOVEFIRST);
-	DECLARE_CONSTASCII_USTRING(FMURL_RECORD_MOVEPREV);
-	DECLARE_CONSTASCII_USTRING(FMURL_RECORD_MOVENEXT);
-	DECLARE_CONSTASCII_USTRING(FMURL_RECORD_MOVELAST);
-	DECLARE_CONSTASCII_USTRING(FMURL_RECORD_MOVETONEW);
-	DECLARE_CONSTASCII_USTRING(FMURL_RECORD_UNDO);
-	DECLARE_CONSTASCII_USTRING(FMURL_RECORD_SAVE);
-    DECLARE_CONSTASCII_USTRING(FMURL_RECORD_DELETE);
-    DECLARE_CONSTASCII_USTRING(FMURL_FORM_REFRESH);
-    DECLARE_CONSTASCII_USTRING(FMURL_FORM_REFRESH_CURRENT_CONTROL);
-
-    DECLARE_CONSTASCII_USTRING(FMURL_FORM_SORT_UP);
-    DECLARE_CONSTASCII_USTRING(FMURL_FORM_SORT_DOWN);
-    DECLARE_CONSTASCII_USTRING(FMURL_FORM_SORT);
-    DECLARE_CONSTASCII_USTRING(FMURL_FORM_AUTO_FILTER);
-    DECLARE_CONSTASCII_USTRING(FMURL_FORM_FILTER);
-    DECLARE_CONSTASCII_USTRING(FMURL_FORM_APPLY_FILTER);
-    DECLARE_CONSTASCII_USTRING(FMURL_FORM_REMOVE_FILTER);
-
-	DECLARE_CONSTASCII_USTRING(FMURL_CONFIRM_DELETION);
-
-	DECLARE_CONSTASCII_USTRING(FMURL_COMPONENT_FORMGRIDVIEW);
-	DECLARE_CONSTASCII_USTRING(FMURL_GRIDVIEW_CLEARVIEW);
-	DECLARE_CONSTASCII_USTRING(FMURL_GRIDVIEW_ADDCOLUMN);
-	DECLARE_CONSTASCII_USTRING(FMURL_GRIDVIEW_ATTACHTOFORM);
-
-	DECLARE_CONSTASCII_USTRING(FMARG_ATTACHTO_MASTERFORM);
-	DECLARE_CONSTASCII_USTRING(FMARG_ADDCOL_COLUMNTYPE);
-	DECLARE_CONSTASCII_USTRING(FMARG_ADDCOL_COLUMNPOS);
-
-}	// namespace svxform
+#define FMURL_FORMSLOTS_PREFIX             rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/" ) )
+#define FMURL_FORM_POSITION                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/positionForm" ) )
+#define FMURL_FORM_RECORDCOUNT             rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/RecordCount" ) )
+#define FMURL_RECORD_MOVEFIRST             rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/moveToFirst" ) )
+#define FMURL_RECORD_MOVEPREV              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/moveToPrev" ) )
+#define FMURL_RECORD_MOVENEXT              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/moveToNext" ) )
+#define FMURL_RECORD_MOVELAST              rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/moveToLast" ) )
+#define FMURL_RECORD_MOVETONEW             rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/moveToNew" ) )
+#define FMURL_RECORD_UNDO                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/undoRecord" ) )
+#define FMURL_RECORD_SAVE                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/saveRecord" ) )
+#define FMURL_RECORD_DELETE                rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/deleteRecord" ) )
+#define FMURL_FORM_REFRESH                 rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/refreshForm" ) )
+#define FMURL_FORM_REFRESH_CURRENT_CONTROL rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/refreshCurrentControl" ) )
+#define FMURL_FORM_SORT_UP                 rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/sortUp" ) )
+#define FMURL_FORM_SORT_DOWN               rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/sortDown" ) )
+#define FMURL_FORM_SORT                    rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/sort" ) )
+#define FMURL_FORM_AUTO_FILTER             rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/autoFilter" ) )
+#define FMURL_FORM_FILTER                  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/filter" ) )
+#define FMURL_FORM_APPLY_FILTER            rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/applyFilter" ) )
+#define FMURL_FORM_REMOVE_FILTER           rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormController/removeFilterOrder" ) )
+#define FMURL_CONFIRM_DELETION             rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormSlots/ConfirmDeletion" ) )
+#define FMURL_COMPONENT_FORMGRIDVIEW       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".component:DB/FormGridView" ) )
+#define FMURL_GRIDVIEW_CLEARVIEW           rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormSlots/ClearView" ) )
+#define FMURL_GRIDVIEW_ADDCOLUMN           rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormSlots/AddGridColumn" ) )
+#define FMURL_GRIDVIEW_ATTACHTOFORM        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( ".uno:FormSlots/AttachToForm" ) )
+#define FMARG_ATTACHTO_MASTERFORM          rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "MasterForm" ) )
+#define FMARG_ADDCOL_COLUMNTYPE            rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ColumnType" ) )
+#define FMARG_ADDCOL_COLUMNPOS             rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ColumnPosition" ) )
 
 #endif // _SVX_FMURL_HXX
-
diff --git svx/source/inc/formtoolbars.hxx svx/source/inc/formtoolbars.hxx
index 9ce42ca..5268ef1 100644
--- svx/source/inc/formtoolbars.hxx
+++ svx/source/inc/formtoolbars.hxx
@@ -31,14 +31,13 @@
 #ifndef SVX_SOURCE_INC_FORMTOOLBARS_HXX
 #define SVX_SOURCE_INC_FORMTOOLBARS_HXX
 
-/** === begin UNO includes === **/
-/** === end UNO includes === **/
-
 #include "fmdocumentclassification.hxx"
 #include <com/sun/star/frame/XLayoutManager.hpp>
 
 #include <tools/solar.h>
 
+#include <svx/svxdllapi.h>
+
 //........................................................................
 namespace svxform
 {
@@ -58,7 +57,7 @@ namespace svxform
             @param _rxFrame
                 the frame to analyze
         */
-        FormToolboxes(
+        SVX_DLLPUBLIC FormToolboxes(
             const ::com::sun::star::uno::Reference< ::com::sun::star::frame::XFrame >& _rxFrame
         );
 
@@ -66,16 +65,16 @@ namespace svxform
         /** retrieves the URI for the toolbox associated with the given slot, depending
             on the type of our document
         */
-        ::rtl::OUString
+        SVX_DLLPUBLIC ::rtl::OUString
                 getToolboxResourceName( USHORT _nSlotId ) const;
 
         /** toggles the toolbox associated with the given slot
         */
-        void    toggleToolbox( USHORT _nSlotId ) const;
+        SVX_DLLPUBLIC void    toggleToolbox( USHORT _nSlotId ) const;
 
         /** determines whether the toolbox associated with the given slot is currently visible
         */
-        bool    isToolboxVisible( USHORT _nSlotId ) const;
+        SVX_DLLPUBLIC bool    isToolboxVisible( USHORT _nSlotId ) const;
 
         /** ensures that a given toolbox is visible
         */
diff --git svx/source/inc/gridcols.hxx svx/source/inc/gridcols.hxx
index 5f50578..9b79308 100644
--- svx/source/inc/gridcols.hxx
+++ svx/source/inc/gridcols.hxx
@@ -30,25 +30,20 @@
 #ifndef _SVX_GRIDCOLS_HXX
 #define _SVX_GRIDCOLS_HXX
 
-#include "fmstatic.hxx"
+#include <sal/types.h>
 
-namespace svxform
-{
-
-	// list of possible controls
-	DECLARE_CONSTASCII_USTRING(FM_COL_TEXTFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_COL_CHECKBOX);
-	DECLARE_CONSTASCII_USTRING(FM_COL_COMBOBOX);
-	DECLARE_CONSTASCII_USTRING(FM_COL_LISTBOX);
-	DECLARE_CONSTASCII_USTRING(FM_COL_NUMERICFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_COL_DATEFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_COL_TIMEFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_COL_CURRENCYFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_COL_PATTERNFIELD);
-	DECLARE_CONSTASCII_USTRING(FM_COL_FORMATTEDFIELD);
-
-}	// namespace svxform
+namespace rtl { class OUString; }
 
+#define FM_COL_TEXTFIELD      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "TextField" ) )
+#define FM_COL_COMBOBOX       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ComboBox" ) )
+#define FM_COL_CHECKBOX       rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "CheckBox" ) )
+#define FM_COL_TIMEFIELD      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "TimeField" ) )
+#define FM_COL_DATEFIELD      rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "DateField" ) )
+#define FM_COL_NUMERICFIELD   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "NumericField" ) )
+#define FM_COL_CURRENCYFIELD  rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "CurrencyField" ) )
+#define FM_COL_PATTERNFIELD   rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "PatternField" ) )
+#define FM_COL_LISTBOX        rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "ListBox" ) )
+#define FM_COL_FORMATTEDFIELD rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( "FormattedField" ) )
 
 // column type ids
 #define TYPE_CHECKBOX		0
diff --git svx/source/inc/sqlparserclient.hxx svx/source/inc/sqlparserclient.hxx
index 4b5c67b..1386ff8 100644
--- svx/source/inc/sqlparserclient.hxx
+++ svx/source/inc/sqlparserclient.hxx
@@ -43,7 +43,7 @@ namespace svxform
 	//====================================================================
 	//= OSQLParserClient
 	//====================================================================
-	class OSQLParserClient : public ODbtoolsClient
+	class SVX_DLLPUBLIC OSQLParserClient : public ODbtoolsClient
 							,public ::svxform::OParseContextClient
 	{
 	private:
diff --git svx/source/inc/stringlistresource.hxx svx/source/inc/stringlistresource.hxx
index 3db48e1..8fb8ff9 100644
--- svx/source/inc/stringlistresource.hxx
+++ svx/source/inc/stringlistresource.hxx
@@ -31,11 +31,10 @@
 #ifndef SVX_STRINGLISTRESOURCE_HXX
 #define SVX_STRINGLISTRESOURCE_HXX
 
-/** === begin UNO includes === **/
-/** === end UNO includes === **/
-
 #include <tools/rc.hxx>
 
+#include <svx/svxdllapi.h>
+
 #include <memory>
 
 //........................................................................
@@ -52,8 +51,8 @@ namespace svx
     class StringListResource : public Resource
     {
     public:
-        StringListResource( const ResId& _rResId );
-        ~StringListResource();
+        SVX_DLLPUBLIC StringListResource( const ResId& _rResId );
+        SVX_DLLPUBLIC ~StringListResource();
 
         inline void get( ::std::vector< String >& _rStrings )
         {
diff --git svx/source/inc/unogalthemeprovider.hxx svx/source/inc/unogalthemeprovider.hxx
index dd59bb4..8306a00 100644
--- svx/source/inc/unogalthemeprovider.hxx
+++ svx/source/inc/unogalthemeprovider.hxx
@@ -36,6 +36,8 @@
 #include <com/sun/star/lang/XInitialization.hpp>
 #include <com/sun/star/gallery/XGalleryThemeProvider.hpp>
 
+#include <svx/svxdllapi.h>
+
 class Gallery;
 
 namespace unogallery {
@@ -60,8 +62,8 @@ public:
 	GalleryThemeProvider();
 	~GalleryThemeProvider();
 	
-    static ::rtl::OUString getImplementationName_Static() throw();
-    static ::com::sun::star::uno::Sequence< ::rtl::OUString >  getSupportedServiceNames_Static() throw();
+    SVX_DLLPUBLIC static ::rtl::OUString getImplementationName_Static() throw();
+    SVX_DLLPUBLIC static ::com::sun::star::uno::Sequence< ::rtl::OUString >  getSupportedServiceNames_Static() throw();
 	
 protected:
 
diff --git svx/source/inc/unopolyhelper.hxx svx/source/inc/unopolyhelper.hxx
index aeae623..35d56bc 100644
--- svx/source/inc/unopolyhelper.hxx
+++ svx/source/inc/unopolyhelper.hxx
@@ -33,6 +33,8 @@
 
 #include <com/sun/star/lang/IllegalArgumentException.hpp>
 
+#include <svx/svxdllapi.h>
+
 namespace com { namespace sun { namespace star { namespace drawing {
 	struct PolyPolygonBezierCoords;
 } } } }
@@ -48,7 +50,7 @@ basegfx::B2DPolyPolygon SvxConvertPolyPolygonBezierToB2DPolyPolygon( const com::
 
 /** convert a B2DPolyPolygon to a drawing::PolyPolygonBezierCoords
 */
-void SvxConvertB2DPolyPolygonToPolyPolygonBezier( const basegfx::B2DPolyPolygon& rPolyPoly, com::sun::star::drawing::PolyPolygonBezierCoords& rRetval );
+SVX_DLLPUBLIC void SvxConvertB2DPolyPolygonToPolyPolygonBezier( const basegfx::B2DPolyPolygon& rPolyPoly, com::sun::star::drawing::PolyPolygonBezierCoords& rRetval );
 
 
 #endif
diff --git svx/source/items/makefile.mk svx/source/items/makefile.mk
index 1557abb..4894cff 100644
--- svx/source/items/makefile.mk
+++ svx/source/items/makefile.mk
@@ -38,6 +38,7 @@ PROJECTPCHSOURCE=$(PRJ)$/util$/svxpch
 
 PRJNAME=svx
 TARGET=items
+LIBTARGET=NO
 
 # --- Settings -----------------------------------------------------
 
@@ -51,41 +52,45 @@ SRC1FILES =  \
 		svxerr.src		\
 		svxitems.src
 
-SLOFILES=	\
-		$(SLO)$/ofaitem.obj \
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB1OBJFILES= \
 		$(SLO)$/writingmodeitem.obj \
 		$(SLO)$/frmitems.obj \
 		$(SLO)$/paraitem.obj \
 		$(SLO)$/textitem.obj \
-		$(SLO)$/postattr.obj	\
 		$(SLO)$/flditem.obj \
-		$(SLO)$/hlnkitem.obj \
 		$(SLO)$/svxfont.obj \
-		$(SLO)$/pageitem.obj	\
-                $(SLO)$/viewlayoutitem.obj    \
-                $(SLO)$/paperinf.obj    \
 		$(SLO)$/drawitem.obj	\
-		$(SLO)$/algitem.obj \
 		$(SLO)$/itemtype.obj	\
-		$(SLO)$/rotmodit.obj \
-		$(SLO)$/numinf.obj	\
-		$(SLO)$/svxerr.obj	\
-		$(SLO)$/numfmtsh.obj	\
-		$(SLO)$/zoomitem.obj \
 		$(SLO)$/chrtitem.obj	\
 		$(SLO)$/bulitem.obj \
 		$(SLO)$/e3ditem.obj \
 		$(SLO)$/numitem.obj \
 		$(SLO)$/grfitem.obj \
 		$(SLO)$/clipfmtitem.obj \
-		$(SLO)$/svxempty.obj \
 		$(SLO)$/xmlcnitm.obj \
 		$(SLO)$/customshapeitem.obj \
-        $(SLO)$/charhiddenitem.obj \
+        $(SLO)$/charhiddenitem.obj
+
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+LIB2OBJFILES= \
+		$(SLO)$/ofaitem.obj \
+		$(SLO)$/postattr.obj	\
+		$(SLO)$/hlnkitem.obj \
+		$(SLO)$/pageitem.obj	\
+                $(SLO)$/viewlayoutitem.obj    \
+                $(SLO)$/paperinf.obj    \
+		$(SLO)$/algitem.obj \
+		$(SLO)$/rotmodit.obj \
+		$(SLO)$/numinf.obj	\
+		$(SLO)$/svxerr.obj	\
+		$(SLO)$/numfmtsh.obj	\
+		$(SLO)$/zoomitem.obj \
+		$(SLO)$/svxempty.obj \
         $(SLO)$/SmartTagItem.obj \
         $(SLO)$/zoomslideritem.obj \
 
-
+SLOFILES = $(LIB1OBJFILES) $(LIB2OBJFILES)
 
 EXCEPTIONSFILES= \
 		$(SLO)$/paraitem.obj \
diff --git svx/source/items/textitem.cxx svx/source/items/textitem.cxx
index 3fad7c3..604e38c 100644
--- svx/source/items/textitem.cxx
+++ svx/source/items/textitem.cxx
@@ -485,6 +485,13 @@ SfxItemPresentation SvxFontItem::GetPresentation
 	return SFX_ITEM_PRESENTATION_NONE;
 }
 
+//------------------------------------------------------------------------
+
+void SvxFontItem::EnableStoreUnicodeNames( BOOL bEnable )
+{
+    bEnableStoreUnicodeNames = bEnable;
+}
+
 // class SvxPostureItem --------------------------------------------------
 
 SvxPostureItem::SvxPostureItem( const FontItalic ePosture, const USHORT nId ) :
diff --git svx/source/msfilter/escherex.cxx svx/source/msfilter/escherex.cxx
index e27de7c..493df58 100644
--- svx/source/msfilter/escherex.cxx
+++ svx/source/msfilter/escherex.cxx
@@ -156,14 +156,6 @@ EscherExClientAnchor_Base::~EscherExClientAnchor_Base()
 
 // ---------------------------------------------------------------------------------------------
 
-struct EscherPropSortStruct
-{
-	sal_uInt8*	pBuf;
-	sal_uInt32	nPropSize;
-	sal_uInt32	nPropValue;
-	sal_uInt16	nPropId;
-};
-
 void EscherPropertyContainer::ImplInit()
 {
 	nSortCount = 0;
@@ -275,21 +267,40 @@ void EscherPropertyContainer::AddOpt( sal_uInt16 nPropID, sal_Bool bBlib, sal_uI
 	}
 }
 
-sal_Bool EscherPropertyContainer::GetOpt( sal_uInt16 nPropId, sal_uInt32& nPropValue ) const
+sal_Bool EscherPropertyContainer::GetOpt( sal_uInt16 nPropId, sal_uInt32& rPropValue ) const
+{
+    EscherPropSortStruct aPropStruct;
+    
+    if ( GetOpt( nPropId, aPropStruct ) )
+    {
+        rPropValue = aPropStruct.nPropValue;
+        return sal_True;
+    }
+    return sal_False;
+}
+
+sal_Bool EscherPropertyContainer::GetOpt( sal_uInt16 nPropId, EscherPropSortStruct& rPropValue ) const
 {
-	sal_Bool bRetValue = sal_False;
 	for( sal_uInt32 i = 0; i < nSortCount; i++ )
 	{
 		if ( ( pSortStruct[ i ].nPropId &~0xc000 ) == ( nPropId &~0xc000 ) )
 		{
-			nPropValue = pSortStruct[ i ].nPropValue;
-			bRetValue = sal_True;
-			break;
+			rPropValue = pSortStruct[ i ];
+			return sal_True;
 		}
 	}
-	return bRetValue;
+	return sal_False;
 }
 
+EscherProperties EscherPropertyContainer::GetOpts() const
+{
+	EscherProperties aVector;
+
+	for ( sal_uInt32 i = 0; i < nSortCount; ++i )
+		aVector.push_back( pSortStruct[ i ] );
+
+	return aVector;
+}
 
 extern "C" int __LOADONCALLAPI EscherPropSortFunc( const void* p1, const void* p2 )
 {
@@ -738,7 +749,7 @@ void EscherPropertyContainer::CreateTextProperties(
 	}
 }
 
-static sal_Bool GetLineArrow( const sal_Bool bLineStart,
+sal_Bool EscherPropertyContainer::GetLineArrow( const sal_Bool bLineStart,
 	const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySet > & rXPropSet,
 		ESCHER_LineEnd& reLineEnd, sal_Int32& rnArrowLength, sal_Int32& rnArrowWidth )
 {
@@ -2107,6 +2118,68 @@ void ConvertEnhancedCustomShapeEquation( SdrObjCustomShape* pCustoShape,
 	}
 }
 
+sal_Bool EscherPropertyContainer::IsDefaultObject( SdrObjCustomShape* pCustoShape )
+{
+    sal_Bool bIsDefaultObject = sal_False;
+    if ( pCustoShape )
+    {
+	if (   pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_EQUATIONS )
+	       && pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_VIEWBOX )
+	       && pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_PATH )
+	       && pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_GLUEPOINTS )
+	       && pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_SEGMENTS )
+	       && pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_STRETCHX )
+	       && pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_STRETCHY )
+//					&& pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_HANDLES )
+	       && pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_TEXTFRAMES ) )
+	    bIsDefaultObject = sal_True;
+    }
+
+    return bIsDefaultObject;
+}
+
+void EscherPropertyContainer::LookForPolarHandles( const MSO_SPT eShapeType, sal_Int32& nAdjustmentsWhichNeedsToBeConverted )
+{
+    const mso_CustomShape* pDefCustomShape = GetCustomShapeContent( eShapeType );
+    if ( pDefCustomShape && pDefCustomShape->nHandles && pDefCustomShape->pHandles )
+    {
+	sal_Int32 k, nkCount = pDefCustomShape->nHandles;
+	const SvxMSDffHandle* pData = pDefCustomShape->pHandles;
+	for ( k = 0; k < nkCount; k++, pData++ )
+	{
+	    if ( pData->nFlags & MSDFF_HANDLE_FLAGS_POLAR )
+	    {
+		if ( ( pData->nPositionY >= 0x256 ) || ( pData->nPositionY <= 0x107 ) )
+		    nAdjustmentsWhichNeedsToBeConverted |= ( 1 << k );
+	    }
+	}
+    }
+}
+
+sal_Bool EscherPropertyContainer::GetAdjustmentValue( const com::sun::star::drawing::EnhancedCustomShapeAdjustmentValue & rkProp, sal_Int32 nIndex, sal_Int32 nAdjustmentsWhichNeedsToBeConverted, sal_Int32& nValue )
+{
+    if ( rkProp.State != beans::PropertyState_DIRECT_VALUE )
+	return FALSE;
+
+    sal_Bool bUseFixedFloat = ( nAdjustmentsWhichNeedsToBeConverted & ( 1 << nIndex ) ) != 0;
+    if ( rkProp.Value.getValueTypeClass() == uno::TypeClass_DOUBLE )
+    {
+	double fValue;
+	rkProp.Value >>= fValue;
+	if ( bUseFixedFloat )
+	    fValue *= 65536.0;
+	nValue = (sal_Int32)fValue;
+    }
+    else
+    {
+	rkProp.Value >>= nValue;
+	if ( bUseFixedFloat )
+	    nValue <<= 16;
+    }
+
+    return TRUE;
+}
+
 void EscherPropertyContainer::CreateCustomShapeProperties( const MSO_SPT eShapeType, const uno::Reference< drawing::XShape > & rXShape )
 {
 	uno::Reference< beans::XPropertySet > aXPropSet( rXShape, uno::UNO_QUERY );
@@ -2131,22 +2204,7 @@ void EscherPropertyContainer::CreateCustomShapeProperties( const MSO_SPT eShapeT
 			sal_Int32 nAdjustmentsWhichNeedsToBeConverted = 0;
 			uno::Sequence< beans::PropertyValues > aHandlesPropSeq;
 			sal_Bool bPredefinedHandlesUsed = sal_True;
-
-
-			sal_Bool bIsDefaultObject = sal_False;
-			if ( pCustoShape )
-			{
-				if (   pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_EQUATIONS )
-					&& pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_VIEWBOX )
-					&& pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_PATH )
-					&& pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_GLUEPOINTS )
-					&& pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_SEGMENTS )
-					&& pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_STRETCHX )
-					&& pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_STRETCHY )
-//					&& pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_HANDLES )
-					&& pCustoShape->IsDefaultGeometry( SdrObjCustomShape::DEFAULT_TEXTFRAMES ) )
-					bIsDefaultObject = sal_True;
-			}
+			sal_Bool bIsDefaultObject = IsDefaultObject( pCustoShape );
 
 			// convert property "Equations" into std::vector< EnhancedCustomShapeEquationEquation >
 			std::vector< EnhancedCustomShapeEquation >	aEquations;
@@ -3208,46 +3266,12 @@ void EscherPropertyContainer::CreateCustomShapeProperties( const MSO_SPT eShapeT
 				if ( pAdjustmentValuesProp->Value >>= aAdjustmentSeq )
 				{
 					if ( bPredefinedHandlesUsed )
-					{
-						const mso_CustomShape* pDefCustomShape = GetCustomShapeContent( eShapeType );
-						if ( pDefCustomShape && pDefCustomShape->nHandles && pDefCustomShape->pHandles )
-						{
-							sal_Int32 k, nkCount = pDefCustomShape->nHandles;
-							const SvxMSDffHandle* pData = pDefCustomShape->pHandles;
-							for ( k = 0; k < nkCount; k++, pData++ )
-							{
-								if ( pData->nFlags & MSDFF_HANDLE_FLAGS_POLAR )
-								{
-									if ( ( pData->nPositionY >= 0x256 ) || ( pData->nPositionY <= 0x107 ) )
-										nAdjustmentsWhichNeedsToBeConverted |= ( 1 << k );
-								}
-							}
-						}
-					}
+					    LookForPolarHandles( eShapeType, nAdjustmentsWhichNeedsToBeConverted );
+
 					sal_Int32 k, nValue = 0, nAdjustmentValues = aAdjustmentSeq.getLength();
 					for ( k = 0; k < nAdjustmentValues; k++ )
-					{
-						const com::sun::star::drawing::EnhancedCustomShapeAdjustmentValue & rkProp = aAdjustmentSeq[ k ];
-						if ( rkProp.State == beans::PropertyState_DIRECT_VALUE )
-						{
-							sal_Bool bUseFixedFloat = ( nAdjustmentsWhichNeedsToBeConverted & ( 1 << k ) ) != 0;
-							if ( rkProp.Value.getValueTypeClass() == uno::TypeClass_DOUBLE )
-							{
-								double fValue;
-								rkProp.Value >>= fValue;
-								if ( bUseFixedFloat )
-									fValue *= 65536.0;
-								nValue = (sal_Int32)fValue;
-							}
-							else
-							{
-								rkProp.Value >>= nValue;
-								if ( bUseFixedFloat )
-									nValue <<= 16;
-							}
+					    if( GetAdjustmentValue( aAdjustmentSeq[ k ], k, nAdjustmentsWhichNeedsToBeConverted, nValue ) )
 							AddOpt( (sal_uInt16)( DFF_Prop_adjustValue + k ), (sal_uInt32)nValue );
-						}
-					}
 				}
 			}
 		}
@@ -3946,30 +3970,6 @@ struct EscherConnectorRule
 	sal_uInt32	ncptiB;			// Connection site Index of shape B
 };
 
-struct EscherConnectorListEntry
-{
-	::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape	>	mXConnector;
-	::com::sun::star::awt::Point			maPointA;
-	::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape	>	mXConnectToA;
-	::com::sun::star::awt::Point			maPointB;
-	::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape	>	mXConnectToB;
-
-	sal_uInt32		GetConnectorRule( sal_Bool bFirst );
-
-					EscherConnectorListEntry( const ::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > & rC,
-										const ::com::sun::star::awt::Point& rPA,
-										::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > & rSA ,
-										const ::com::sun::star::awt::Point& rPB,
-										::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape > & rSB ) :
-											mXConnector	( rC ),
-											maPointA	( rPA ),
-											mXConnectToA( rSA ),
-											maPointB	( rPB ),
-											mXConnectToB( rSB ) {}
-
-	sal_uInt32		GetClosestPoint( const Polygon& rPoly, const ::com::sun::star::awt::Point& rP );
-};
-
 struct EscherShapeListEntry
 {
 	::com::sun::star::uno::Reference< ::com::sun::star::drawing::XShape	>	aXShape;
@@ -4673,6 +4673,17 @@ void EscherEx::AddAtom( UINT32 nAtomSize, UINT16 nRecType, int nRecVersion, int
 
 // ---------------------------------------------------------------------------------------------
 
+void EscherEx::AddChildAnchor( const Rectangle& rRect )
+{
+	AddAtom( 16, ESCHER_ChildAnchor );
+	GetStream() << (INT32)rRect.Left()
+				<< (INT32)rRect.Top()
+				<< (INT32)rRect.Right()
+				<< (INT32)rRect.Bottom();
+}
+
+// ---------------------------------------------------------------------------------------------
+
 void EscherEx::AddClientAnchor( const Rectangle& rRect )
 {
 	AddAtom( 8, ESCHER_ClientAnchor );
@@ -4722,15 +4733,10 @@ UINT32 EscherEx::EnterGroup( const String& rShapeName, const Rectangle* pBoundRe
         if( rShapeName.Len() > 0 )
             aPropOpt.AddOpt( ESCHER_Prop_wzName, rShapeName );
 
-		aPropOpt.Commit( *mpOutStrm );
+		Commit( aPropOpt, aRect );
 		if ( mnGroupLevel > 1 )
-		{
-			AddAtom( 16, ESCHER_ChildAnchor );
-			*mpOutStrm	<< (INT32)aRect.Left()
-						<< (INT32)aRect.Top()
-					   	<< (INT32)aRect.Right()
-						<< (INT32)aRect.Bottom();
-		}
+			AddChildAnchor( aRect );
+
 		EscherExHostAppData* pAppData = mpImplEscherExSdr->ImplGetHostData();
 		if( pAppData )
 		{
@@ -4828,6 +4834,13 @@ UINT32 EscherEx::GetShapeID()
 
 // ---------------------------------------------------------------------------------------------
 
+void EscherEx::Commit( EscherPropertyContainer& rProps, const Rectangle& )
+{
+	rProps.Commit( GetStream() );
+}
+
+// ---------------------------------------------------------------------------------------------
+
 UINT32 EscherEx::GetColor( const UINT32 nSOColor, BOOL bSwap )
 {
 	if ( bSwap )
diff --git svx/source/msfilter/eschesdo.cxx svx/source/msfilter/eschesdo.cxx
index 243c236..03b4e2a 100644
--- svx/source/msfilter/eschesdo.cxx
+++ svx/source/msfilter/eschesdo.cxx
@@ -749,16 +749,10 @@ UINT32 ImplEESdrWriter::ImplWriteShape( ImplEESdrObject& rObj,
 		if( rObj.GetAngle() )
 			ImplFlipBoundingBox( rObj, aPropOpt );
 
-		aPropOpt.Commit( mpEscherEx->GetStream() );
+		mpEscherEx->Commit( aPropOpt, rObj.GetRect() );
 		if( mpEscherEx->GetGroupLevel() > 1 )
-		{
-			mpEscherEx->AddAtom( 16, ESCHER_ChildAnchor );
-			const Rectangle& rRect = rObj.GetRect();
-			mpEscherEx->GetStream() << (INT32)rRect.Left()
-									<< (INT32)rRect.Top()
-					   				<< (INT32)rRect.Right()
-									<< (INT32)rRect.Bottom();
-		}
+			mpEscherEx->AddChildAnchor( rObj.GetRect() );
+
 		if ( mpHostAppData )
 		{	//! with AdditionalText the App has to control whether these are written or not
 			mpHostAppData->WriteClientAnchor( *mpEscherEx, rObj.GetRect() );
@@ -852,15 +846,10 @@ void ImplEESdrWriter::ImplWriteAdditionalText( ImplEESdrObject& rObj,
 											rObj.GetRect() );
 		}
 		rObj.SetAngle( nAngle );
-		aPropOpt.Commit( mpEscherEx->GetStream() );
+		mpEscherEx->Commit( aPropOpt, rObj.GetRect() );
 
 		// write the childanchor
-		mpEscherEx->AddAtom( 16, ESCHER_ChildAnchor );
-		const Rectangle& rRect = rObj.GetRect();
-		mpEscherEx->GetStream() << (INT32)rRect.Left()
-								<< (INT32)rRect.Top()
-					   			<< (INT32)rRect.Right()
-								<< (INT32)rRect.Bottom();
+		mpEscherEx->AddChildAnchor( rObj.GetRect() );
 
 #if defined EES_WRITE_EPP
 		// ClientAnchor
diff --git svx/source/msfilter/makefile.mk svx/source/msfilter/makefile.mk
index 768bc0e..05188c1 100644
--- svx/source/msfilter/makefile.mk
+++ svx/source/msfilter/makefile.mk
@@ -33,6 +33,7 @@ PRJ=..$/..
 
 PRJNAME=svx
 TARGET=msfilter
+LIBTARGET=NO
 AUTOSEG=true
 
 # --- Settings -----------------------------------------------------
@@ -42,7 +43,8 @@ AUTOSEG=true
 
 # --- Files --------------------------------------------------------
 
-SLOFILES=\
+LIB1TARGET= $(SLB)$/$(TARGET)-msfilter.lib
+LIB1OBJFILES= \
 	$(SLO)$/countryid.obj	\
 	$(SLO)$/escherex.obj	\
 	$(SLO)$/eschesdo.obj    \
@@ -57,6 +59,12 @@ SLOFILES=\
 	$(SLO)$/msfiltertracer.obj\
 	$(SLO)$/mstoolbar.obj\
 
+LIB2TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB2OBJFILES= \
+	$(SLO)$/svxmsbas2.obj
+
+SLOFILES = $(LIB1OBJFILES) $(LIB2OBJFILES)
+
 EXCEPTIONSFILES= \
 	$(SLO)$/eschesdo.obj	\
 	$(SLO)$/escherex.obj	\
diff --git svx/source/msfilter/svxmsbas.cxx svx/source/msfilter/svxmsbas.cxx
index 5efc08f..d4d6838 100644
--- svx/source/msfilter/svxmsbas.cxx
+++ svx/source/msfilter/svxmsbas.cxx
@@ -564,53 +564,4 @@ BOOL SvxImportMSVBasic::ImportCode_Impl( VBA_Impl& aVBA, BOOL bAsComment, BOOL b
 	return bRet;
 }
 
-ULONG SvxImportMSVBasic::SaveOrDelMSVBAStorage( BOOL bSaveInto,
-												const String& rStorageName )
-{
-	ULONG nRet = ERRCODE_NONE;
-    uno::Reference < embed::XStorage > xSrcRoot( rDocSh.GetStorage() );
-	String aDstStgName( GetMSBasicStorageName() );
-    SotStorageRef xVBAStg( SotStorage::OpenOLEStorage( xSrcRoot, aDstStgName,
-                                STREAM_READWRITE | STREAM_NOCREATE | STREAM_SHARE_DENYALL ) );
-	if( xVBAStg.Is() && !xVBAStg->GetError() )
-	{
-		xVBAStg = 0;
-		if( bSaveInto )
-		{
-			BasicManager *pBasicMan = rDocSh.GetBasicManager();
-			if( pBasicMan && pBasicMan->IsBasicModified() )
-				nRet = ERRCODE_SVX_MODIFIED_VBASIC_STORAGE;
-
-            SotStorageRef xSrc = SotStorage::OpenOLEStorage( xSrcRoot, aDstStgName, STREAM_STD_READ );
-            SotStorageRef xDst = xRoot->OpenSotStorage( rStorageName, STREAM_READWRITE | STREAM_TRUNC );
-            xSrc->CopyTo( xDst );
-            xDst->Commit();
-            ErrCode nError = xDst->GetError();
-            if ( nError == ERRCODE_NONE )
-                nError = xSrc->GetError();
-            if ( nError != ERRCODE_NONE )
-                xRoot->SetError( nError );
-		}
-	}
-
-	return nRet;
-}
-
-// check if the MS-VBA-Storage exists in the RootStorage of the DocShell.
-// If it exists, then return the WarningId for losing the information.
-ULONG SvxImportMSVBasic::GetSaveWarningOfMSVBAStorage( SfxObjectShell &rDocSh)
-{
-    uno::Reference < embed::XStorage > xSrcRoot( rDocSh.GetStorage() );
-    SvStorageRef xVBAStg( SotStorage::OpenOLEStorage( xSrcRoot, GetMSBasicStorageName(),
-					STREAM_READ | STREAM_NOCREATE | STREAM_SHARE_DENYALL ));
-	return ( xVBAStg.Is() && !xVBAStg->GetError() )
-					? ERRCODE_SVX_VBASIC_STORAGE_EXIST
-					: ERRCODE_NONE;
-}
-
-String SvxImportMSVBasic::GetMSBasicStorageName()
-{
-    return String( RTL_CONSTASCII_USTRINGPARAM( "_MS_VBA_Macros" ) );
-}
-
 /* vi:set tabstop=4 shiftwidth=4 expandtab: */
diff --git svx/source/msfilter/svxmsbas2.cxx svx/source/msfilter/svxmsbas2.cxx
new file mode 100644
index 0000000..afd772b
--- /dev/null
+++ svx/source/msfilter/svxmsbas2.cxx
@@ -0,0 +1,88 @@
+/*************************************************************************
+ *
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * Copyright 2008 by Sun Microsystems, Inc.
+ *
+ * OpenOffice.org - a multi-platform office productivity suite
+ *
+ * $RCSfile: svxmsbas.cxx,v $
+ * $Revision: 1.24 $
+ *
+ * This file is part of OpenOffice.org.
+ *
+ * OpenOffice.org is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License version 3
+ * only, as published by the Free Software Foundation.
+ *
+ * OpenOffice.org is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License version 3 for more details
+ * (a copy is included in the LICENSE file that accompanied this code).
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * version 3 along with OpenOffice.org.  If not, see
+ * <http://www.openoffice.org/license.html>
+ * for a copy of the LGPLv3 License.
+ *
+ ************************************************************************/
+
+// MARKER(update_precomp.py): autogen include statement, do not remove
+#include "precompiled_svx.hxx"
+
+#include <basic/basmgr.hxx>
+#include <sfx2/objsh.hxx>
+#include <svxerr.hxx>
+#include <svxmsbas.hxx>
+
+using namespace com::sun::star;
+
+ULONG SvxImportMSVBasic::SaveOrDelMSVBAStorage( BOOL bSaveInto,
+                                                const String& rStorageName )
+{
+    ULONG nRet = ERRCODE_NONE;
+    uno::Reference < embed::XStorage > xSrcRoot( rDocSh.GetStorage() );
+    String aDstStgName( GetMSBasicStorageName() );
+    SotStorageRef xVBAStg( SotStorage::OpenOLEStorage( xSrcRoot, aDstStgName,
+                                STREAM_READWRITE | STREAM_NOCREATE | STREAM_SHARE_DENYALL ) );
+    if( xVBAStg.Is() && !xVBAStg->GetError() )
+    {
+        xVBAStg = 0;
+        if( bSaveInto )
+        {
+            BasicManager *pBasicMan = rDocSh.GetBasicManager();
+            if( pBasicMan && pBasicMan->IsBasicModified() )
+                nRet = ERRCODE_SVX_MODIFIED_VBASIC_STORAGE;
+
+            SotStorageRef xSrc = SotStorage::OpenOLEStorage( xSrcRoot, aDstStgName, STREAM_STD_READ );
+            SotStorageRef xDst = xRoot->OpenSotStorage( rStorageName, STREAM_READWRITE | STREAM_TRUNC );
+            xSrc->CopyTo( xDst );
+            xDst->Commit();
+            ErrCode nError = xDst->GetError();
+            if ( nError == ERRCODE_NONE )
+                nError = xSrc->GetError();
+            if ( nError != ERRCODE_NONE )
+                xRoot->SetError( nError );
+        }
+    }
+
+    return nRet;
+}
+
+// check if the MS-VBA-Storage exists in the RootStorage of the DocShell.
+// If it exists, then return the WarningId for losing the information.
+ULONG SvxImportMSVBasic::GetSaveWarningOfMSVBAStorage( SfxObjectShell &rDocSh)
+{
+    uno::Reference < embed::XStorage > xSrcRoot( rDocSh.GetStorage() );
+    SvStorageRef xVBAStg( SotStorage::OpenOLEStorage( xSrcRoot, GetMSBasicStorageName(),
+                    STREAM_READ | STREAM_NOCREATE | STREAM_SHARE_DENYALL ));
+    return ( xVBAStg.Is() && !xVBAStg->GetError() )
+                    ? ERRCODE_SVX_VBASIC_STORAGE_EXIST
+                    : ERRCODE_NONE;
+}
+
+String SvxImportMSVBasic::GetMSBasicStorageName()
+{
+    return String( RTL_CONSTASCII_USTRINGPARAM( "_MS_VBA_Macros" ) );
+}
diff --git svx/source/options/makefile.mk svx/source/options/makefile.mk
index 2a8573f..9f03f06 100644
--- svx/source/options/makefile.mk
+++ svx/source/options/makefile.mk
@@ -36,6 +36,7 @@ PROJECTPCHSOURCE=$(PRJ)$/util\svxpch
 
 PRJNAME=svx
 TARGET=options
+LIBTARGET=NO
 
 # --- Settings -----------------------------------------------------
 
@@ -62,39 +63,23 @@ SRC1FILES=\
     optchart.src    \
     optimprove.src
 
-#EXCEPTIONSFILES=\
-#	$(SLO)$/optasian.obj		\
-#	$(SLO)$/optlingu.obj		\
-#	$(SLO)$/optaccessibility.obj	\
-#	$(SLO)$/optsave.obj		\
-#	$(SLO)$/optpath.obj
-
-#SLOFILES=\
-#	$(EXCEPTIONSFILES)	\
-#	$(SLO)$/asiancfg.obj	\
-#	$(SLO)$/htmlcfg.obj	\
-#	$(SLO)$/optcolor.obj    \
-#	$(SLO)$/optjsearch.obj  \
-#	$(SLO)$/optitems.obj	\
-#	$(SLO)$/optgenrl.obj	\
-#	$(SLO)$/adritem.obj	\
-#	$(SLO)$/optgrid.obj	\
-#	$(SLO)$/optinet2.obj	\
-#	$(SLO)$/optextbr.obj    \
-#	$(SLO)$/srchcfg.obj	\
-#	$(SLO)$/optctl.obj
-
 EXCEPTIONSFILES=\
 	$(SLO)$/optlingu.obj
 
-SLOFILES=\
-	$(EXCEPTIONSFILES)	\
-    $(SLO)$/asiancfg.obj    \
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB1OBJFILES= \
+    $(SLO)$/asiancfg.obj
+
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+LIB2OBJFILES= \
+    $(SLO)$/optlingu.obj \
     $(SLO)$/htmlcfg.obj \
     $(SLO)$/optitems.obj    \
     $(SLO)$/optgrid.obj \
     $(SLO)$/srchcfg.obj
 
+SLOFILES = $(LIB1OBJFILES) $(LIB2OBJFILES)
+
 # --- Targets -------------------------------------------------------
 
 .INCLUDE :  target.mk
diff --git svx/source/svdraw/makefile.mk svx/source/svdraw/makefile.mk
index ab306be..94adffe 100644
--- svx/source/svdraw/makefile.mk
+++ svx/source/svdraw/makefile.mk
@@ -33,6 +33,7 @@ PRJ=..$/..
 
 PRJNAME=svx
 TARGET=svdraw
+LIBTARGET=NO
 ENABLE_EXCEPTIONS=TRUE
 
 # --- Settings -----------------------------------------------------
@@ -42,11 +43,11 @@ ENABLE_EXCEPTIONS=TRUE
 
 # --- Files --------------------------------------------------------
 
-SLOFILES=\
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB1OBJFILES= \
          $(SLO)$/svdxcgv.obj		 \
          $(SLO)$/svdmodel.obj		\
          $(SLO)$/svdpage.obj         \
-         $(SLO)$/svdoimp.obj         \
          $(SLO)$/svdobj.obj          \
          $(SLO)$/svdedtv1.obj        \
          $(SLO)$/svdcrtv.obj         \
@@ -59,7 +60,6 @@ SLOFILES=\
          $(SLO)$/svdotextdecomposition.obj		\
          $(SLO)$/svdotextpathdecomposition.obj	\
          $(SLO)$/svdouno.obj         \
-         $(SLO)$/svdfppt.obj         \
          $(SLO)$/svdpagv.obj		 \
          $(SLO)$/svddrgmt.obj        \
          $(SLO)$/svdpntv.obj         \
@@ -95,7 +95,6 @@ SLOFILES=\
          $(SLO)$/svdglev.obj         \
          $(SLO)$/svdglue.obj         \
          $(SLO)$/svdhlpln.obj        \
-         $(SLO)$/svdibrow.obj        \
          $(SLO)$/svditer.obj         \
          $(SLO)$/svdlayer.obj        \
          $(SLO)$/svdmark.obj         \
@@ -105,20 +104,31 @@ SLOFILES=\
          $(SLO)$/sdrpagewindow.obj         \
          $(SLO)$/sdrpaintwindow.obj         \
          $(SLO)$/svdpoev.obj         \
-         $(SLO)$/svdscrol.obj        \
          $(SLO)$/svdtouch.obj        \
          $(SLO)$/svdtrans.obj        \
          $(SLO)$/svdtxhdl.obj        \
          $(SLO)$/svdundo.obj         \
 		 $(SLO)$/svdviter.obj        \
          $(SLO)$/clonelist.obj		 \
-         $(SLO)$/ActionDescriptionProvider.obj \
 		 $(SLO)$/svdedtv.obj         \
 		 $(SLO)$/selectioncontroller.obj \
 		 $(SLO)$/polypolygoneditor.obj \
-         $(SLO)$/svdomedia.obj			\
+         $(SLO)$/svdomedia.obj
+
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+LIB2OBJFILES= \
+         $(SLO)$/svdoimp.obj         \
+         $(SLO)$/svdibrow.obj        \
+         $(SLO)$/svdscrol.obj        \
+         $(SLO)$/ActionDescriptionProvider.obj \
          $(SLO)$/impgrfll.obj
 
+LIB3TARGET= $(SLB)$/$(TARGET)-msfilter.lib
+LIB3OBJFILES= \
+         $(SLO)$/svdfppt.obj         \
+
+SLOFILES = $(LIB1OBJFILES) $(LIB2OBJFILES) $(LIB3OBJFILES)
+
 SRS1NAME=svdstr
 SRC1FILES= svdstr.src
 
diff --git svx/source/svdraw/svdmodel.cxx svx/source/svdraw/svdmodel.cxx
index d328dcf..587ff0a 100644
--- svx/source/svdraw/svdmodel.cxx
+++ svx/source/svdraw/svdmodel.cxx
@@ -1801,6 +1801,11 @@ uno::Reference< uno::XInterface > SdrModel::getUnoModel()
 	return mxUnoModel;
 }
 
+void SdrModel::setUnoModel( ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > xModel )
+{
+    mxUnoModel = xModel;
+}
+
 uno::Reference< uno::XInterface > SdrModel::createUnoModel()
 {
 	DBG_ERROR( "SdrModel::createUnoModel() - base implementation should not be called!" );
diff --git svx/source/svrtf/makefile.mk svx/source/svrtf/makefile.mk
index 6ae14ad..8a78c77 100644
--- svx/source/svrtf/makefile.mk
+++ svx/source/svrtf/makefile.mk
@@ -36,6 +36,7 @@ PROJECTPCHSOURCE=$(PRJ)$/util$/svxpch
 
 PRJNAME=svx
 TARGET=svxrtf
+LIBTARGET=NO
 AUTOSEG=true
 
 # --- Settings -----------------------------------------------------
@@ -48,11 +49,17 @@ AUTOSEG=true
 EXCEPTIONSFILES= \
 		$(SLO)$/svxrtf.obj
 
-SLOFILES =	\
-		$(SLO)$/rtfgrf.obj  \
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB1OBJFILES= \
 		$(SLO)$/rtfitem.obj \
 		$(SLO)$/svxrtf.obj
 
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+LIB2OBJFILES= \
+		$(SLO)$/rtfgrf.obj
+
+SLOFILES = $(LIB1OBJFILES) $(LIB2OBJFILES)
+
 # ==========================================================================
 
 .INCLUDE :  target.mk
diff --git svx/source/svrtf/rtfgrf.cxx svx/source/svrtf/rtfgrf.cxx
index 9fd6ec1..ddddab8 100644
--- svx/source/svrtf/rtfgrf.cxx
+++ svx/source/svrtf/rtfgrf.cxx
@@ -559,17 +559,4 @@ BOOL SvxRTFParser::ReadBmpData( Graphic& rGrf, SvxRTFPictureType& rPicType )
 	return bValidBmp;
 }
 
-	// alle Werte auf default; wird nach einlesen der Bitmap aufgerufen !
-void SvxRTFPictureType::ResetValues()
-{	// setze alle Werte RTF-Defaults
-	eStyle = RTF_BITMAP;
-	nMode = HEX_MODE;
-	nType = nGoalWidth = nGoalHeight = 0;
-	nWidth = nHeight = nWidthBytes = 0;
-	uPicLen = 0;
-	nBitsPerPixel = nPlanes = 1;
-	nScalX = nScalY = 100;		// Skalierung in Prozent
-	nCropT = nCropB = nCropL = nCropR = 0;
-}
-
 /* vi:set tabstop=4 shiftwidth=4 expandtab: */
diff --git svx/source/table/cell.hxx svx/source/table/cell.hxx
index 6b4843a..aa4464c 100644
--- svx/source/table/cell.hxx
+++ svx/source/table/cell.hxx
@@ -57,160 +57,160 @@ namespace sdr { namespace table {
 
 // -----------------------------------------------------------------------------
 
-class Cell :	public SdrText,
+class SVX_DLLPUBLIC Cell :	public SdrText,
 				public SvxUnoTextBase,
 				public ::com::sun::star::table::XMergeableCell,
 				public ::com::sun::star::awt::XLayoutConstrains,
 				public ::com::sun::star::beans::XMultiPropertyStates,
 				public ::cppu::OWeakObject
 {
-	friend class CellUndo;
+    friend class CellUndo;
 
 public:
-	Cell( SdrTableObj& rTableObj, OutlinerParaObject* pOutlinerParaObject ) throw();
-	virtual ~Cell() throw();
+    Cell( SdrTableObj& rTableObj, OutlinerParaObject* pOutlinerParaObject ) throw();
+    virtual ~Cell() throw();
 
-	// private
-	void dispose();
+    // private
+    SVX_DLLPRIVATE void dispose();
 
-	// SdrTextShape proxy
-	bool IsTextEditActive();
-	bool hasText() const;
+    // SdrTextShape proxy
+    bool IsTextEditActive();
+    SVX_DLLPRIVATE bool hasText() const;
 
-	void cloneFrom( const CellRef& rCell );
+    SVX_DLLPRIVATE void cloneFrom( const CellRef& rCell );
 
-	void setCellRect( ::Rectangle& rCellRect ) { maCellRect = rCellRect; }
-	const ::Rectangle& getCellRect() const { return maCellRect; }
-	::Rectangle& getCellRect() { return maCellRect; }
+    SVX_DLLPRIVATE void setCellRect( ::Rectangle& rCellRect ) { maCellRect = rCellRect; }
+    SVX_DLLPRIVATE const ::Rectangle& getCellRect() const { return maCellRect; }
+    SVX_DLLPRIVATE ::Rectangle& getCellRect() { return maCellRect; }
 
-	OutlinerParaObject* GetEditOutlinerParaObject() const;
-	void SetStyleSheet( SfxStyleSheet* pStyleSheet, sal_Bool bDontRemoveHardAttr );
-	virtual SfxStyleSheet* GetStyleSheet() const;
-	SfxStyleSheetPool* GetStyleSheetPool() const;
-	virtual const Rectangle& GetCurrentBoundRect() const;
-	virtual void TakeTextAnchorRect(Rectangle& rAnchorRect) const;
+    OutlinerParaObject* GetEditOutlinerParaObject() const;
+    SVX_DLLPRIVATE void SetStyleSheet( SfxStyleSheet* pStyleSheet, sal_Bool bDontRemoveHardAttr );
+    SVX_DLLPRIVATE virtual SfxStyleSheet* GetStyleSheet() const;
+    SfxStyleSheetPool* GetStyleSheetPool() const;
+    SVX_DLLPRIVATE virtual const Rectangle& GetCurrentBoundRect() const;
+    SVX_DLLPRIVATE virtual void TakeTextAnchorRect(Rectangle& rAnchorRect) const;
 
-	virtual const SfxItemSet& GetItemSet() const;
-	void SetMergedItemSetAndBroadcast(const SfxItemSet& rSet, sal_Bool bClearAllItems);
-	void SetMergedItem(const SfxPoolItem& rItem);
+    SVX_DLLPRIVATE virtual const SfxItemSet& GetItemSet() const;
+    SVX_DLLPRIVATE void SetMergedItemSetAndBroadcast(const SfxItemSet& rSet, sal_Bool bClearAllItems);
+    void SetMergedItem(const SfxPoolItem& rItem);
 
-	sal_Int32 getMinimumWidth();
-	sal_Int32 getMinimumHeight();
+    SVX_DLLPRIVATE sal_Int32 getMinimumWidth();
+    SVX_DLLPRIVATE sal_Int32 getMinimumHeight();
 
-	long GetTextLeftDistance() const;
-	long GetTextRightDistance() const;
-	long GetTextUpperDistance() const;
-	long GetTextLowerDistance() const;
+    SVX_DLLPRIVATE long GetTextLeftDistance() const;
+    SVX_DLLPRIVATE long GetTextRightDistance() const;
+    SVX_DLLPRIVATE long GetTextUpperDistance() const;
+    SVX_DLLPRIVATE long GetTextLowerDistance() const;
 
-	SdrTextVertAdjust GetTextVerticalAdjust() const;
-	SdrTextHorzAdjust GetTextHorizontalAdjust() const;
+    SVX_DLLPRIVATE SdrTextVertAdjust GetTextVerticalAdjust() const;
+    SdrTextHorzAdjust GetTextHorizontalAdjust() const;
 
-	virtual void SetModel(SdrModel* pNewModel);
+    SVX_DLLPRIVATE virtual void SetModel(SdrModel* pNewModel);
 
-	void merge( sal_Int32 nColumnSpan, sal_Int32 nRowSpan );
-	void mergeContent( const CellRef& xSourceCell );
-	void replaceContentAndFormating( const CellRef& xSourceCell );
+    SVX_DLLPRIVATE void merge( sal_Int32 nColumnSpan, sal_Int32 nRowSpan );
+    SVX_DLLPRIVATE void mergeContent( const CellRef& xSourceCell );
+    SVX_DLLPRIVATE void replaceContentAndFormating( const CellRef& xSourceCell );
 
-	void setMerged();
+    SVX_DLLPRIVATE void setMerged();
 
 	// XInterface
-	virtual ::com::sun::star::uno::Any SAL_CALL queryInterface( const ::com::sun::star::uno::Type& Type ) throw (::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL acquire() throw ();
-    virtual void SAL_CALL release() throw ();
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Any SAL_CALL queryInterface( const ::com::sun::star::uno::Type& Type ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL acquire() throw ();
+    SVX_DLLPRIVATE virtual void SAL_CALL release() throw ();
 
     // XTypeProvider
-    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Type > SAL_CALL getTypes(  ) throw (::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Sequence< ::sal_Int8 > SAL_CALL getImplementationId(  ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Type > SAL_CALL getTypes(  ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Sequence< ::sal_Int8 > SAL_CALL getImplementationId(  ) throw (::com::sun::star::uno::RuntimeException);
 
     // XServiceInfo
-    virtual ::rtl::OUString SAL_CALL getImplementationName(  ) throw (::com::sun::star::uno::RuntimeException);
-    virtual ::sal_Bool SAL_CALL supportsService( const ::rtl::OUString& ServiceName ) throw (::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL getSupportedServiceNames(  ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::rtl::OUString SAL_CALL getImplementationName(  ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::sal_Bool SAL_CALL supportsService( const ::rtl::OUString& ServiceName ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL getSupportedServiceNames(  ) throw (::com::sun::star::uno::RuntimeException);
 
     // XLayoutConstrains
-    virtual ::com::sun::star::awt::Size SAL_CALL getMinimumSize(  ) throw (::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::awt::Size SAL_CALL getPreferredSize(  ) throw (::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::awt::Size SAL_CALL calcAdjustedSize( const ::com::sun::star::awt::Size& aNewSize ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::awt::Size SAL_CALL getMinimumSize(  ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::awt::Size SAL_CALL getPreferredSize(  ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::awt::Size SAL_CALL calcAdjustedSize( const ::com::sun::star::awt::Size& aNewSize ) throw (::com::sun::star::uno::RuntimeException);
 
     // XMergeableCell
-    virtual ::sal_Int32 SAL_CALL getRowSpan() throw (::com::sun::star::uno::RuntimeException);
-    virtual ::sal_Int32 SAL_CALL getColumnSpan() throw (::com::sun::star::uno::RuntimeException);
-    virtual ::sal_Bool SAL_CALL isMerged() throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::sal_Int32 SAL_CALL getRowSpan() throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::sal_Int32 SAL_CALL getColumnSpan() throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::sal_Bool SAL_CALL isMerged() throw (::com::sun::star::uno::RuntimeException);
 
 	// XCell
-    virtual ::rtl::OUString SAL_CALL getFormula() throw (::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL setFormula( const ::rtl::OUString& aFormula ) throw (::com::sun::star::uno::RuntimeException);
-    virtual double SAL_CALL getValue() throw (::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL setValue( double nValue ) throw (::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::table::CellContentType SAL_CALL getType() throw (::com::sun::star::uno::RuntimeException);
-    virtual sal_Int32 SAL_CALL getError() throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::rtl::OUString SAL_CALL getFormula() throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL setFormula( const ::rtl::OUString& aFormula ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual double SAL_CALL getValue() throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL setValue( double nValue ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::table::CellContentType SAL_CALL getType() throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual sal_Int32 SAL_CALL getError() throw (::com::sun::star::uno::RuntimeException);
 
 	// ::com::sun::star::beans::XPropertySet
-    virtual ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySetInfo > SAL_CALL getPropertySetInfo() throw(::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL setPropertyValue( const ::rtl::OUString& aPropertyName, const ::com::sun::star::uno::Any& aValue ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::beans::PropertyVetoException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Any SAL_CALL getPropertyValue( const ::rtl::OUString& PropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL addPropertyChangeListener( const ::rtl::OUString& aPropertyName, const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertyChangeListener >& xListener ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL removePropertyChangeListener( const ::rtl::OUString& aPropertyName, const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertyChangeListener >& aListener ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL addVetoableChangeListener( const ::rtl::OUString& PropertyName, const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XVetoableChangeListener >& aListener ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL removeVetoableChangeListener( const ::rtl::OUString& PropertyName, const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XVetoableChangeListener >& aListener ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertySetInfo > SAL_CALL getPropertySetInfo() throw(::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL setPropertyValue( const ::rtl::OUString& aPropertyName, const ::com::sun::star::uno::Any& aValue ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::beans::PropertyVetoException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Any SAL_CALL getPropertyValue( const ::rtl::OUString& PropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL addPropertyChangeListener( const ::rtl::OUString& aPropertyName, const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertyChangeListener >& xListener ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL removePropertyChangeListener( const ::rtl::OUString& aPropertyName, const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertyChangeListener >& aListener ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL addVetoableChangeListener( const ::rtl::OUString& PropertyName, const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XVetoableChangeListener >& aListener ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL removeVetoableChangeListener( const ::rtl::OUString& PropertyName, const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XVetoableChangeListener >& aListener ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
 
 	// XMultiPropertySet
-    virtual void SAL_CALL setPropertyValues( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyNames, const ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Any >& aValues ) throw (::com::sun::star::beans::PropertyVetoException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Any > SAL_CALL getPropertyValues( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyNames ) throw (::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL addPropertiesChangeListener( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyNames, const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertiesChangeListener >& xListener ) throw (::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL removePropertiesChangeListener( const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertiesChangeListener >& xListener ) throw (::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL firePropertiesChangeEvent( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyNames, const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertiesChangeListener >& xListener ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL setPropertyValues( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyNames, const ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Any >& aValues ) throw (::com::sun::star::beans::PropertyVetoException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Any > SAL_CALL getPropertyValues( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyNames ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL addPropertiesChangeListener( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyNames, const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertiesChangeListener >& xListener ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL removePropertiesChangeListener( const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertiesChangeListener >& xListener ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL firePropertiesChangeEvent( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyNames, const ::com::sun::star::uno::Reference< ::com::sun::star::beans::XPropertiesChangeListener >& xListener ) throw (::com::sun::star::uno::RuntimeException);
 
 	// ::com::sun::star::beans::XPropertyState
-    virtual ::com::sun::star::beans::PropertyState SAL_CALL getPropertyState( const ::rtl::OUString& PropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyState > SAL_CALL getPropertyStates( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
-	virtual void SAL_CALL setPropertyToDefault( const ::rtl::OUString& PropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Any SAL_CALL getPropertyDefault( const ::rtl::OUString& aPropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::beans::PropertyState SAL_CALL getPropertyState( const ::rtl::OUString& PropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Sequence< ::com::sun::star::beans::PropertyState > SAL_CALL getPropertyStates( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL setPropertyToDefault( const ::rtl::OUString& PropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Any SAL_CALL getPropertyDefault( const ::rtl::OUString& aPropertyName ) throw(::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
 
 	// XMultiPropertyStates
-    virtual void SAL_CALL setAllPropertiesToDefault(  ) throw (::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL setPropertiesToDefault( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyNames ) throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Any > SAL_CALL getPropertyDefaults( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyNames ) throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL setAllPropertiesToDefault(  ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL setPropertiesToDefault( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyNames ) throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Any > SAL_CALL getPropertyDefaults( const ::com::sun::star::uno::Sequence< ::rtl::OUString >& aPropertyNames ) throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
 
 	// XFastPropertySet
-    virtual void SAL_CALL setFastPropertyValue( ::sal_Int32 nHandle, const ::com::sun::star::uno::Any& aValue ) throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::beans::PropertyVetoException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Any SAL_CALL getFastPropertyValue( ::sal_Int32 nHandle ) throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL setFastPropertyValue( ::sal_Int32 nHandle, const ::com::sun::star::uno::Any& aValue ) throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::beans::PropertyVetoException, ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Any SAL_CALL getFastPropertyValue( ::sal_Int32 nHandle ) throw (::com::sun::star::beans::UnknownPropertyException, ::com::sun::star::lang::WrappedTargetException, ::com::sun::star::uno::RuntimeException);
 
 	// XText
-    virtual void SAL_CALL insertTextContent( const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange >& xRange, const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextContent >& xContent, ::sal_Bool bAbsorb ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL removeTextContent( const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextContent >& xContent ) throw (::com::sun::star::container::NoSuchElementException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL insertTextContent( const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange >& xRange, const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextContent >& xContent, ::sal_Bool bAbsorb ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL removeTextContent( const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextContent >& xContent ) throw (::com::sun::star::container::NoSuchElementException, ::com::sun::star::uno::RuntimeException);
 
     // XSimpleText
-    virtual ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextCursor > SAL_CALL createTextCursor(  ) throw (::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextCursor > SAL_CALL createTextCursorByRange( const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange >& aTextPosition ) throw (::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL insertString( const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange >& xRange, const ::rtl::OUString& aString, ::sal_Bool bAbsorb ) throw (::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL insertControlCharacter( const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange >& xRange, ::sal_Int16 nControlCharacter, ::sal_Bool bAbsorb ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextCursor > SAL_CALL createTextCursor(  ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextCursor > SAL_CALL createTextCursorByRange( const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange >& aTextPosition ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL insertString( const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange >& xRange, const ::rtl::OUString& aString, ::sal_Bool bAbsorb ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL insertControlCharacter( const ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange >& xRange, ::sal_Int16 nControlCharacter, ::sal_Bool bAbsorb ) throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
 
     // XTextRange
-    virtual ::com::sun::star::uno::Reference< ::com::sun::star::text::XText > SAL_CALL getText(  ) throw (::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange > SAL_CALL getStart(  ) throw (::com::sun::star::uno::RuntimeException);
-    virtual ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange > SAL_CALL getEnd(  ) throw (::com::sun::star::uno::RuntimeException);
-    virtual ::rtl::OUString SAL_CALL getString(  ) throw (::com::sun::star::uno::RuntimeException);
-    virtual void SAL_CALL setString( const ::rtl::OUString& aString ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Reference< ::com::sun::star::text::XText > SAL_CALL getText(  ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange > SAL_CALL getStart(  ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::com::sun::star::uno::Reference< ::com::sun::star::text::XTextRange > SAL_CALL getEnd(  ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual ::rtl::OUString SAL_CALL getString(  ) throw (::com::sun::star::uno::RuntimeException);
+    SVX_DLLPRIVATE virtual void SAL_CALL setString( const ::rtl::OUString& aString ) throw (::com::sun::star::uno::RuntimeException);
 
-	virtual void SetOutlinerParaObject( OutlinerParaObject* pTextObject );
+    SVX_DLLPRIVATE virtual void SetOutlinerParaObject( OutlinerParaObject* pTextObject );
 
-	void	AddUndo();
+    SVX_DLLPRIVATE void	AddUndo();
 
-	using SvxUnoTextRangeBase::setPropertyValue;
-	using SvxUnoTextRangeBase::getPropertyValue;
+    using SvxUnoTextRangeBase::setPropertyValue;
+    using SvxUnoTextRangeBase::getPropertyValue;
 
-	sdr::properties::TextProperties* CloneProperties( SdrObject& rNewObj, Cell& rNewCell );
+    SVX_DLLPRIVATE sdr::properties::TextProperties* CloneProperties( SdrObject& rNewObj, Cell& rNewCell );
 
-    static sdr::properties::TextProperties* CloneProperties( sdr::properties::TextProperties* pProperties, SdrObject& rNewObj, Cell& rNewCell );
+    SVX_DLLPRIVATE static sdr::properties::TextProperties* CloneProperties( sdr::properties::TextProperties* pProperties, SdrObject& rNewObj, Cell& rNewCell );
 
-	void notifyModified();
+	SVX_DLLPRIVATE void notifyModified();
 
 protected:
-	virtual const SfxItemSet& GetObjectItemSet();
-	virtual void SetObjectItem(const SfxPoolItem& rItem);
+	SVX_DLLPRIVATE virtual const SfxItemSet& GetObjectItemSet();
+	SVX_DLLPRIVATE virtual void SetObjectItem(const SfxPoolItem& rItem);
 
-	::com::sun::star::uno::Any GetAnyForItem( SfxItemSet& aSet, const SfxItemPropertyMap* pMap );
+	SVX_DLLPRIVATE ::com::sun::star::uno::Any GetAnyForItem( SfxItemSet& aSet, const SfxItemPropertyMap* pMap );
 
 private:
 	SvxItemPropertySet maPropSet;
diff --git svx/source/table/makefile.mk svx/source/table/makefile.mk
index fe34fd5..bccf1b2 100644
--- svx/source/table/makefile.mk
+++ svx/source/table/makefile.mk
@@ -36,6 +36,7 @@ PROJECTPCHSOURCE=$(PRJ)$/util$/svxpch
 
 PRJNAME=svx
 TARGET=table
+LIBTARGET=NO
 ENABLE_EXCEPTIONS=TRUE;
 
 # --- Settings -----------------------------------------------------
@@ -45,9 +46,9 @@ ENABLE_EXCEPTIONS=TRUE;
 
 # --- Files --------------------------------------------------------
 
-SLOFILES=	\
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB1OBJFILES= \
 		$(SLO)$/propertyset.obj\
-		$(SLO)$/celleditsource.obj\
 		$(SLO)$/cell.obj\
 		$(SLO)$/cellrange.obj\
 		$(SLO)$/cellcursor.obj\
@@ -61,13 +62,19 @@ SLOFILES=	\
 		$(SLO)$/tablelayouter.obj\
 		$(SLO)$/tablehandles.obj\
 		$(SLO)$/tablecontroller.obj\
-		$(SLO)$/tabledesign.obj\
-		$(SLO)$/tableundo.obj\
-		$(SLO)$/accessibletableshape.obj\
+		$(SLO)$/tableundo.obj
+
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+LIB2OBJFILES= \
+		$(SLO)$/celleditsource.obj \
+		$(SLO)$/tabledesign.obj \
+		$(SLO)$/accessibletableshape.obj \
 		$(SLO)$/accessiblecell.obj \
 		$(SLO)$/tablertfexporter.obj \
 		$(SLO)$/tablertfimporter.obj
 
+SLOFILES = $(LIB1OBJFILES) $(LIB2OBJFILES)
+
 SRS1NAME=table
 SRC1FILES= table.src
 
diff --git svx/source/table/tablecontroller.hxx svx/source/table/tablecontroller.hxx
index bd1569c..6270aa9 100644
--- svx/source/table/tablecontroller.hxx
+++ svx/source/table/tablecontroller.hxx
@@ -50,97 +50,97 @@ const sal_Int16 SELTYPE_NONE = 0;
 const sal_Int16 SELTYPE_MOUSE = 1;
 const sal_Int16 SELTYPE_KEYS = 2;
 
-class SvxTableController: public sdr::SelectionController
+class SVX_DLLPUBLIC SvxTableController: public sdr::SelectionController
 {
 public:
-	SvxTableController( SdrObjEditView* pView, const SdrObject* pObj );
-	virtual ~SvxTableController();
+    SVX_DLLPRIVATE SvxTableController( SdrObjEditView* pView, const SdrObject* pObj );
+    SVX_DLLPRIVATE virtual ~SvxTableController();
 
-	virtual bool onKeyInput(const KeyEvent& rKEvt, Window* pWin);
-	virtual bool onMouseButtonDown(const MouseEvent& rMEvt, Window* pWin);
-	virtual bool onMouseButtonUp(const MouseEvent& rMEvt, Window* pWin);
-	virtual bool onMouseMove(const MouseEvent& rMEvt, Window* pWin);
+    SVX_DLLPRIVATE virtual bool onKeyInput(const KeyEvent& rKEvt, Window* pWin);
+    SVX_DLLPRIVATE virtual bool onMouseButtonDown(const MouseEvent& rMEvt, Window* pWin);
+    SVX_DLLPRIVATE virtual bool onMouseButtonUp(const MouseEvent& rMEvt, Window* pWin);
+    SVX_DLLPRIVATE virtual bool onMouseMove(const MouseEvent& rMEvt, Window* pWin);
 
-	virtual bool DeleteMarked();
+    SVX_DLLPRIVATE virtual bool DeleteMarked();
 
-	virtual void onSelectionHasChanged();
+    SVX_DLLPRIVATE virtual void onSelectionHasChanged();
 
-	virtual void GetState( SfxItemSet& rSet );
-	virtual void Execute( SfxRequest& rReq );
+    SVX_DLLPRIVATE virtual void GetState( SfxItemSet& rSet );
+    SVX_DLLPRIVATE virtual void Execute( SfxRequest& rReq );
 
-	virtual bool GetStyleSheet( SfxStyleSheet* &rpStyleSheet ) const;
-	virtual bool SetStyleSheet( SfxStyleSheet* pStyleSheet, bool bDontRemoveHardAttr );
+    SVX_DLLPRIVATE virtual bool GetStyleSheet( SfxStyleSheet* &rpStyleSheet ) const;
+    SVX_DLLPRIVATE virtual bool SetStyleSheet( SfxStyleSheet* pStyleSheet, bool bDontRemoveHardAttr );
 
 	// slots
-	void onInsert( sal_uInt16 nSId );
-	void onDelete( sal_uInt16 nSId );
-	void onSelect( sal_uInt16 nSId );
-	void onFormatTable( SfxRequest& rReq );
-	void MergeMarkedCells();
-	void SplitMarkedCells();
-	void DistributeColumns();
-	void DistributeRows();
-	void SetVertical( sal_uInt16 nSId );
+    SVX_DLLPRIVATE void onInsert( sal_uInt16 nSId );
+    SVX_DLLPRIVATE void onDelete( sal_uInt16 nSId );
+    SVX_DLLPRIVATE void onSelect( sal_uInt16 nSId );
+    SVX_DLLPRIVATE void onFormatTable( SfxRequest& rReq );
+    SVX_DLLPRIVATE void MergeMarkedCells();
+    SVX_DLLPRIVATE void SplitMarkedCells();
+    SVX_DLLPRIVATE void DistributeColumns();
+    SVX_DLLPRIVATE void DistributeRows();
+    SVX_DLLPRIVATE void SetVertical( sal_uInt16 nSId );
 
-	static rtl::Reference< sdr::SelectionController > create( SdrObjEditView* pView, const SdrObject* pObj, const rtl::Reference< sdr::SelectionController >& xRefController );
+    SVX_DLLPRIVATE static rtl::Reference< sdr::SelectionController > create( SdrObjEditView* pView, const SdrObject* pObj, const rtl::Reference< sdr::SelectionController >& xRefController );
 
-	void MergeAttrFromSelectedCells(SfxItemSet& rAttr, bool bOnlyHardAttr) const;
-	void SetAttrToSelectedCells(const SfxItemSet& rAttr, bool bReplaceAll);
+    SVX_DLLPRIVATE void MergeAttrFromSelectedCells(SfxItemSet& rAttr, bool bOnlyHardAttr) const;
+    SVX_DLLPRIVATE void SetAttrToSelectedCells(const SfxItemSet& rAttr, bool bReplaceAll);
 
-	virtual bool GetAttributes(SfxItemSet& rTargetSet, bool bOnlyHardAttr) const;
-	virtual bool SetAttributes(const SfxItemSet& rSet, bool bReplaceAll);
+    SVX_DLLPRIVATE virtual bool GetAttributes(SfxItemSet& rTargetSet, bool bOnlyHardAttr) const;
+    SVX_DLLPRIVATE virtual bool SetAttributes(const SfxItemSet& rSet, bool bReplaceAll);
 
-	virtual bool GetMarkedObjModel( SdrPage* pNewPage );
-	virtual bool PasteObjModel( const SdrModel& rModel );
+    SVX_DLLPRIVATE virtual bool GetMarkedObjModel( SdrPage* pNewPage );
+    SVX_DLLPRIVATE virtual bool PasteObjModel( const SdrModel& rModel );
 
-	bool hasSelectedCells() const { return mbCellSelectionMode || mpView->IsTextEdit(); }
+    SVX_DLLPRIVATE bool hasSelectedCells() const { return mbCellSelectionMode || mpView->IsTextEdit(); }
 
 	void getSelectedCells( CellPos& rFirstPos, CellPos& rLastPos );
 	void setSelectedCells( const CellPos& rFirstPos, const CellPos& rLastPos );
 	void clearSelection();
 	void selectAll();
 
-	void onTableModified();
+    SVX_DLLPRIVATE void onTableModified();
 
 private:
     SvxTableController(SvxTableController &); // not defined
     void operator =(SvxTableController &); // not defined
 
 	// internals
-	void ApplyBorderAttr( const SfxItemSet& rAttr );
-	void UpdateTableShape();
+    SVX_DLLPRIVATE void ApplyBorderAttr( const SfxItemSet& rAttr );
+    SVX_DLLPRIVATE void UpdateTableShape();
 
-	void SetTableStyle( const SfxItemSet* pArgs );
-	void SetTableStyleSettings( const SfxItemSet* pArgs );
+    SVX_DLLPRIVATE void SetTableStyle( const SfxItemSet* pArgs );
+    SVX_DLLPRIVATE void SetTableStyleSettings( const SfxItemSet* pArgs );
 
-	bool PasteObject( SdrTableObj* pPasteTableObj );
+    SVX_DLLPRIVATE bool PasteObject( SdrTableObj* pPasteTableObj );
 
-	bool checkTableObject();
-	bool updateTableObject();
-	const CellPos& getSelectionStart();
-	void setSelectionStart( const CellPos& rPos );
-	const CellPos& getSelectionEnd();
-	::com::sun::star::uno::Reference< ::com::sun::star::table::XCellCursor > getSelectionCursor();
-	void checkCell( CellPos& rPos );
+    SVX_DLLPRIVATE bool checkTableObject();
+    SVX_DLLPRIVATE bool updateTableObject();
+    SVX_DLLPRIVATE const CellPos& getSelectionStart();
+    SVX_DLLPRIVATE void setSelectionStart( const CellPos& rPos );
+    SVX_DLLPRIVATE const CellPos& getSelectionEnd();
+    SVX_DLLPRIVATE ::com::sun::star::uno::Reference< ::com::sun::star::table::XCellCursor > getSelectionCursor();
+    SVX_DLLPRIVATE void checkCell( CellPos& rPos );
 
-	void MergeRange( sal_Int32 nFirstCol, sal_Int32 nFirstRow, sal_Int32 nLastCol, sal_Int32 nLastRow );
+    SVX_DLLPRIVATE void MergeRange( sal_Int32 nFirstCol, sal_Int32 nFirstRow, sal_Int32 nLastCol, sal_Int32 nLastRow );
 
-	void EditCell( const CellPos& rPos, ::Window* pWindow, const ::com::sun::star::awt::MouseEvent* pMouseEvent = 0, sal_uInt16 nAction = 0 );
-	bool StopTextEdit();
+    SVX_DLLPRIVATE void EditCell( const CellPos& rPos, ::Window* pWindow, const ::com::sun::star::awt::MouseEvent* pMouseEvent = 0, sal_uInt16 nAction = 0 );
+    SVX_DLLPRIVATE bool StopTextEdit();
 
-	void DeleteTable();
+    SVX_DLLPRIVATE void DeleteTable();
 
-	sal_uInt16 getKeyboardAction( const KeyEvent& rKEvt, Window* pWindow );
-	bool executeAction( sal_uInt16 nAction, bool bSelect, Window* pWindow );
-	void gotoCell( const CellPos& rCell, bool bSelect, Window* pWindow, sal_uInt16 nAction = 0 );
+    SVX_DLLPRIVATE sal_uInt16 getKeyboardAction( const KeyEvent& rKEvt, Window* pWindow );
+    SVX_DLLPRIVATE bool executeAction( sal_uInt16 nAction, bool bSelect, Window* pWindow );
+    SVX_DLLPRIVATE void gotoCell( const CellPos& rCell, bool bSelect, Window* pWindow, sal_uInt16 nAction = 0 );
 
-	void StartSelection( const CellPos& rPos );
-	void UpdateSelection( const CellPos& rPos );
-	void RemoveSelection();
-	void updateSelectionOverlay();
-	void destroySelectionOverlay();
+    SVX_DLLPRIVATE void StartSelection( const CellPos& rPos );
+    SVX_DLLPRIVATE void UpdateSelection( const CellPos& rPos );
+    SVX_DLLPRIVATE void RemoveSelection();
+    SVX_DLLPRIVATE void updateSelectionOverlay();
+    SVX_DLLPRIVATE void destroySelectionOverlay();
 
-	void findMergeOrigin( CellPos& rPos );
+    SVX_DLLPRIVATE void findMergeOrigin( CellPos& rPos );
 
 	DECL_LINK( UpdateHdl, void * );
 
diff --git svx/source/tbxctrls/makefile.mk svx/source/tbxctrls/makefile.mk
index 9de74b6..e7cd3d5 100644
--- svx/source/tbxctrls/makefile.mk
+++ svx/source/tbxctrls/makefile.mk
@@ -33,6 +33,7 @@ PRJ=..$/..
 
 PRJNAME=svx
 TARGET=tbxctrls
+LIBTARGET=NO
 ENABLE_EXCEPTIONS=TRUE
 
 # --- Settings -----------------------------------------------------
@@ -42,10 +43,17 @@ ENABLE_EXCEPTIONS=TRUE
 
 # --- Files --------------------------------------------------------
 
-SLOFILES=	\
-        $(SLO)$/formatpaintbrushctrl.obj\
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB1OBJFILES= \
 		$(SLO)$/fontworkgallery.obj\
 		$(SLO)$/extrusioncontrols.obj \
+		$(SLO)$/tbcontrl.obj	\
+        $(SLO)$/toolbarmenu.obj \
+        $(SLO)$/tbxcolorupdate.obj
+
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+LIB2OBJFILES= \
+        $(SLO)$/formatpaintbrushctrl.obj\
 		$(SLO)$/colrctrl.obj	\
 		$(SLO)$/fillctrl.obj	\
 		$(SLO)$/grafctrl.obj	\
@@ -53,17 +61,16 @@ SLOFILES=	\
 		$(SLO)$/layctrl.obj		\
 		$(SLO)$/lboxctrl.obj	\
 		$(SLO)$/linectrl.obj	\
-		$(SLO)$/tbcontrl.obj	\
 		$(SLO)$/tbxalign.obj	\
         $(SLO)$/tbxdrctl.obj    \
         $(SLO)$/verttexttbxctrl.obj \
-        $(SLO)$/toolbarmenu.obj \
 		$(SLO)$/subtoolboxcontrol.obj \
         $(SLO)$/tbxcolor.obj \
-        $(SLO)$/tbxcolorupdate.obj \
         $(SLO)$/tbunocontroller.obj \
         $(SLO)$/zoomtbxctrl.obj	
 
+SLOFILES = $(LIB1OBJFILES) $(LIB2OBJFILES)
+
 SRS1NAME=$(TARGET)
 SRC1FILES = \
 		fontworkgallery.src		\
diff --git svx/source/unodraw/UnoGraphicExporter.cxx svx/source/unodraw/UnoGraphicExporter.cxx
index 08ea68b..9070b2e 100644
--- svx/source/unodraw/UnoGraphicExporter.cxx
+++ svx/source/unodraw/UnoGraphicExporter.cxx
@@ -198,13 +198,13 @@ namespace svx
 		SdrModel*			mpDoc;
 	};
 
-	Reference< XInterface > SAL_CALL GraphicExporter_createInstance(const Reference< XMultiServiceFactory > & )
+	SVX_DLLPUBLIC Reference< XInterface > SAL_CALL GraphicExporter_createInstance(const Reference< XMultiServiceFactory > & )
 		throw( Exception )
 	{
 		return (XWeak*)new GraphicExporter();
 	}
 
-	Sequence< OUString > SAL_CALL GraphicExporter_getSupportedServiceNames()
+	SVX_DLLPUBLIC Sequence< OUString > SAL_CALL GraphicExporter_getSupportedServiceNames()
 		throw()
 	{
 		Sequence< OUString > aSupportedServiceNames( 1 );
@@ -212,7 +212,7 @@ namespace svx
 		return aSupportedServiceNames;
 	}
 
-	OUString SAL_CALL GraphicExporter_getImplementationName()
+	SVX_DLLPUBLIC OUString SAL_CALL GraphicExporter_getImplementationName()
 		throw()
 	{
 		return OUString( RTL_CONSTASCII_USTRINGPARAM( "com.sun.star.comp.Draw.GraphicExporter" ) );
diff --git svx/source/unodraw/UnoGraphicExporter.hxx svx/source/unodraw/UnoGraphicExporter.hxx
index e015b1b..733c9ed 100644
--- svx/source/unodraw/UnoGraphicExporter.hxx
+++ svx/source/unodraw/UnoGraphicExporter.hxx
@@ -35,9 +35,9 @@
 
 namespace svx
 {
-	::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > SAL_CALL GraphicExporter_createInstance(const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory > & rSMgr) throw( ::com::sun::star::uno::Exception );
-	::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL GraphicExporter_getSupportedServiceNames() throw();
-	::rtl::OUString SAL_CALL GraphicExporter_getImplementationName() throw();
+	SVX_DLLPUBLIC ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface > SAL_CALL GraphicExporter_createInstance(const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XMultiServiceFactory > & rSMgr) throw( ::com::sun::star::uno::Exception );
+	SVX_DLLPUBLIC ::com::sun::star::uno::Sequence< ::rtl::OUString > SAL_CALL GraphicExporter_getSupportedServiceNames() throw();
+	SVX_DLLPUBLIC ::rtl::OUString SAL_CALL GraphicExporter_getImplementationName() throw();
 }
 
 #endif
diff --git svx/source/unodraw/makefile.mk svx/source/unodraw/makefile.mk
index ede2c0b..082eb17 100644
--- svx/source/unodraw/makefile.mk
+++ svx/source/unodraw/makefile.mk
@@ -33,6 +33,7 @@ PRJ=..$/..
 
 PRJNAME=svx
 TARGET=unodraw
+LIBTARGET=NO
 ENABLE_EXCEPTIONS=TRUE
 
 # --- Settings -----------------------------------------------------
@@ -42,21 +43,18 @@ ENABLE_EXCEPTIONS=TRUE
 
 # --- Files --------------------------------------------------------
 
-SLOFILES =	\
-		$(SLO)$/UnoNamespaceMap.obj \
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB1OBJFILES= \
 		$(SLO)$/UnoGraphicExporter.obj \
-		$(SLO)$/unopool.obj \
 		$(SLO)$/XPropertyTable.obj \
 		$(SLO)$/UnoNameItemTable.obj \
 		$(SLO)$/unoshape.obj	\
 		$(SLO)$/unoipset.obj	\
-		$(SLO)$/unoctabl.obj	\
 		$(SLO)$/unoshap2.obj	\
 		$(SLO)$/unoshap3.obj	\
 		$(SLO)$/unoshap4.obj	\
 		$(SLO)$/unopage.obj		\
 		$(SLO)$/unoshtxt.obj	\
-		$(SLO)$/unoshcol.obj	\
 		$(SLO)$/unoprov.obj		\
 		$(SLO)$/unomod.obj      \
 		$(SLO)$/unonrule.obj	\
@@ -69,9 +67,18 @@ SLOFILES =	\
 		$(SLO)$/unomtabl.obj	\
 		$(SLO)$/unodtabl.obj	\
 		$(SLO)$/gluepts.obj     \
-		$(SLO)$/recoveryui.obj	\
 		$(SLO)$/tableshape.obj
 
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+LIB2OBJFILES= \
+		$(SLO)$/UnoNamespaceMap.obj \
+		$(SLO)$/unopool.obj \
+		$(SLO)$/unoctabl.obj	\
+		$(SLO)$/unoshcol.obj	\
+		$(SLO)$/recoveryui.obj
+
+SLOFILES = $(LIB1OBJFILES) $(LIB2OBJFILES)
+
 SRS1NAME=unodraw
 SRC1FILES =  \
 		unodraw.src
diff --git svx/source/unodraw/unoshap2.cxx svx/source/unodraw/unoshap2.cxx
index 213525a..e53d0f3 100644
--- svx/source/unodraw/unoshap2.cxx
+++ svx/source/unodraw/unoshap2.cxx
@@ -65,6 +65,7 @@
 #include "shapeimpl.hxx"
 #include "svx/unoshprp.hxx"
 #include <svx/svdoashp.hxx>
+#include "unopolyhelper.hxx"
 
 // #i29181#
 #include "svdviter.hxx"
diff --git svx/source/unoedit/makefile.mk svx/source/unoedit/makefile.mk
index 6852db4..fd9dd17 100644
--- svx/source/unoedit/makefile.mk
+++ svx/source/unoedit/makefile.mk
@@ -33,6 +33,7 @@ PRJ=..$/..
 
 PRJNAME=svx
 TARGET=unoedit
+LIBTARGET=NO
 ENABLE_EXCEPTIONS=TRUE
 
 # --- Settings -----------------------------------------------------
@@ -42,13 +43,10 @@ ENABLE_EXCEPTIONS=TRUE
 
 # --- Files --------------------------------------------------------
 
-SLOFILES =	\
-		$(SLO)$/UnoForbiddenCharsTable.obj \
+LIB1TARGET= $(SLB)$/$(TARGET)-core.lib
+LIB1OBJFILES= \
 		$(SLO)$/unoedsrc.obj	\
 		$(SLO)$/unoedhlp.obj	\
-		$(SLO)$/unopracc.obj	\
-		$(SLO)$/unoedprx.obj	\
-		$(SLO)$/unoviwed.obj	\
 		$(SLO)$/unoviwou.obj	\
 		$(SLO)$/unofored.obj	\
 		$(SLO)$/unoforou.obj	\
@@ -56,6 +54,15 @@ SLOFILES =	\
 		$(SLO)$/unotext2.obj	\
 		$(SLO)$/unofield.obj
 
+LIB2TARGET= $(SLB)$/$(TARGET).lib
+LIB2OBJFILES= \
+		$(SLO)$/UnoForbiddenCharsTable.obj \
+		$(SLO)$/unopracc.obj	\
+		$(SLO)$/unoedprx.obj	\
+		$(SLO)$/unoviwed.obj
+
+SLOFILES = $(LIB1OBJFILES) $(LIB2OBJFILES)
+
 # --- Tagets -------------------------------------------------------
 
 .INCLUDE :  target.mk
diff --git svx/util/makefile.mk svx/util/makefile.mk
index 2b49d35..bd79564 100644
--- svx/util/makefile.mk
+++ svx/util/makefile.mk
@@ -52,11 +52,6 @@ RSCLOCINC+=-I$(PRJ)$/source$/svdraw
 
 LIB1TARGET= $(SLB)$/$(TARGET).lib
 LIB1FILES=\
-	$(SLB)$/animation.lib \
-	$(SLB)$/overlay.lib \
-	$(SLB)$/attribute.lib \
-	$(SLB)$/primitive2d.lib \
-	$(SLB)$/primitive3d.lib \
 	$(SLB)$/svdraw.lib \
 	$(SLB)$/form.lib
 
@@ -68,10 +63,6 @@ LIB2TARGET= $(SLB)$/$(TARGET)_2.lib
 LIB2FILES=\
 	$(SLB)$/init.lib \
 	$(SLB)$/items.lib     \
-	$(SLB)$/svxlink.lib   \
-	$(SLB)$/svxrtf.lib    \
-	$(SLB)$/editeng.lib   \
-	$(SLB)$/outliner.lib \
 	$(SLB)$/dialogs.lib	\
 	$(SLB)$/mnuctrls.lib  \
 	$(SLB)$/options.lib   \
@@ -84,40 +75,108 @@ LIB3TARGET= $(SLB)$/$(TARGET)_3.lib
 LIB3FILES=\
 	$(SLB)$/unodraw.lib	\
 	$(SLB)$/unogallery.lib\
-	$(SLB)$/gal.lib		\
 	$(SLB)$/accessibility.lib	\
-	$(SLB)$/customshapes.lib\
-	$(SLB)$/toolbars.lib \
-	$(SLB)$/properties.lib \
-	$(SLB)$/contact.lib \
-    $(SLB)$/event.lib
+	$(SLB)$/customshapes.lib
 
 LIB4TARGET= $(SLB)$/$(TARGET)_4.lib
 LIB4FILES=\
 	$(SLB)$/fmcomp.lib \
 	$(SLB)$/engine3d.lib \
-	$(SLB)$/msfilter.lib \
-	$(SLB)$/xout.lib \
-	$(SLB)$/xml.lib \
 	$(SLB)$/table.lib
 
+# Objects needed for the svxcore library.
+LIB5TARGET= $(SLB)$/$(TARGET)_5.lib
+LIB5FILES=\
+	$(SLB)$/accessibility-core.lib \
+	$(SLB)$/animation.lib \
+	$(SLB)$/attribute.lib \
+	$(SLB)$/contact.lib \
+	$(SLB)$/customshapes-core.lib \
+	$(SLB)$/dialogs-core.lib \
+	$(SLB)$/editeng.lib \
+	$(SLB)$/engine3d-core.lib \
+	$(SLB)$/event.lib \
+	$(SLB)$/fmcomp-core.lib \
+	$(SLB)$/form-core.lib \
+	$(SLB)$/gal.lib \
+	$(SLB)$/items-core.lib \
+	$(SLB)$/msfilter-core.lib \
+	$(SLB)$/options-core.lib   \
+	$(SLB)$/outliner.lib \
+	$(SLB)$/overlay.lib \
+	$(SLB)$/primitive2d.lib \
+	$(SLB)$/primitive3d.lib \
+	$(SLB)$/properties.lib \
+	$(SLB)$/svdraw-core.lib \
+	$(SLB)$/svxlink.lib \
+	$(SLB)$/svxrtf-core.lib    \
+	$(SLB)$/table-core.lib \
+	$(SLB)$/tbxctrls-core.lib  \
+	$(SLB)$/toolbars.lib \
+	$(SLB)$/unodraw-core.lib \
+	$(SLB)$/unoedit-core.lib   \
+	$(SLB)$/xml.lib \
+	$(SLB)$/xout.lib
+
+# Objects needed for the svxmsfilter library.
+LIB6TARGET= $(SLB)$/$(TARGET)_6.lib
+LIB6FILES=\
+	$(SLB)$/msfilter-msfilter.lib \
+	$(SLB)$/svdraw-msfilter.lib \
+	$(SLB)$/svxrtf.lib
+
 HELPIDFILES=    ..$/inc$/helpid.hrc
 
-# svx
-SHL1TARGET= svx$(DLLPOSTFIX)
-SHL1IMPLIB= i$(TARGET)
+# svxcore
+SHL1TARGET= svxcore$(DLLPOSTFIX)
+SHL1IMPLIB= isvxcore
 SHL1USE_EXPORTS=name
+SHL1LIBS= $(LIB5TARGET)
 
-SHL1LIBS= $(LIB1TARGET) $(LIB2TARGET) $(LIB3TARGET) $(LIB4TARGET)
 SHL1STDLIBS= \
-			$(AVMEDIALIB) \
+             $(AVMEDIALIB) \
+             $(SFX2LIB) \
+             $(XMLOFFLIB) \
+             $(GOODIESLIB) \
+             $(BASEGFXLIB) \
+             $(DRAWINGLAYERLIB) \
+             $(LNGLIB) \
+             $(BASICLIB) \
+             $(SVTOOLLIB) \
+             $(TKLIB) \
+             $(VCLLIB) \
+             $(SVLLIB) \
+             $(SOTLIB) \
+             $(UNOTOOLSLIB) \
+             $(TOOLSLIB) \
+             $(I18NISOLANGLIB) \
+             $(COMPHELPERLIB) \
+             $(UCBHELPERLIB) \
+             $(CPPUHELPERLIB) \
+             $(CPPULIB) \
+             $(VOSLIB) \
+             $(SALLIB) \
+             $(ICUUCLIB)
+
+SHL1DEF=	$(MISC)$/$(SHL1TARGET).def
+DEF1NAME=	$(SHL1TARGET)
+DEFLIB1NAME=$(TARGET)_5
+
+# svx
+SHL2TARGET= svx$(DLLPOSTFIX)
+SHL2IMPLIB= i$(TARGET)
+SHL2USE_EXPORTS=name
+SHL2DEPN=$(SHL1TARGETN)
+
+SHL2LIBS= $(LIB1TARGET) $(LIB2TARGET) $(LIB3TARGET) $(LIB4TARGET)
+SHL2STDLIBS= \
+            $(SVXCORELIB) \
             $(SFX2LIB) \
 			$(XMLOFFLIB) \
             $(GOODIESLIB) \
             $(BASEGFXLIB) \
             $(DRAWINGLAYERLIB) \
             $(BASICLIB) \
-            $(LNGLIB) \
             $(SVTOOLLIB) \
             $(TKLIB) \
             $(VCLLIB) \
@@ -132,33 +191,33 @@ SHL1STDLIBS= \
 			$(CPPUHELPERLIB)	\
 			$(CPPULIB) \
             $(VOSLIB) \
-            $(SALLIB) \
-            $(ICUUCLIB)
+            $(SALLIB)
 
 .IF "$(GUI)"=="WNT"
-SHL1STDLIBS+=$(SHELLLIB)
+SHL2STDLIBS+=$(SHELLLIB)
 .ENDIF # WNT
 
-SHL1DEF=	$(MISC)$/$(SHL1TARGET).def
-DEF1NAME=	$(SHL1TARGET)
-DEFLIB1NAME=$(TARGET) $(TARGET)_2 $(TARGET)_3 $(TARGET)_4
+SHL2DEF=	$(MISC)$/$(SHL2TARGET).def
+DEF2NAME=	$(SHL2TARGET)
+DEFLIB2NAME=$(TARGET) $(TARGET)_2 $(TARGET)_3 $(TARGET)_4
 
 
 # cui
-SHL2TARGET= cui$(DLLPOSTFIX)
-SHL2VERSIONMAP= cui.map
-SHL2IMPLIB=icui
-SHL2DEPN=$(SHL1TARGETN)
+SHL3TARGET= cui$(DLLPOSTFIX)
+SHL3VERSIONMAP= cui.map
+SHL3IMPLIB=icui
+SHL3DEPN=$(SHL2TARGETN)
 
-SHL2DEF=	$(MISC)$/$(SHL2TARGET).def
-DEF2NAME=	$(SHL2TARGET)
+SHL3DEF=	$(MISC)$/$(SHL3TARGET).def
+DEF3NAME=	$(SHL3TARGET)
 
-SHL2LIBS=	$(SLB)$/cui.lib
-SHL2OBJS= \
+SHL3LIBS=	$(SLB)$/cui.lib
+SHL3OBJS= \
         $(SLO)$/cuiexp.obj     \
         $(SLO)$/dlgfact.obj
 
-SHL2STDLIBS= \
+SHL3STDLIBS= \
+            $(SVXCORELIB) \
             $(SVXLIB) \
 			$(AVMEDIALIB) \
             $(SFX2LIB) \
@@ -178,16 +237,46 @@ SHL2STDLIBS= \
 			$(CPPULIB) \
             $(VOSLIB) \
             $(SALLIB) \
-            $(JVMFWKLIB) \
-            $(ICUUCLIB)
+            $(JVMFWKLIB)
 
 .IF "$(GUI)"=="WNT"
-SHL2STDLIBS+= \
+SHL3STDLIBS+= \
              $(SHLWAPILIB) \
              $(CPPUHELPERLIB) \
              $(ADVAPI32LIB)
 .ENDIF # WNT
 
+# svxmsfilter library
+SHL4TARGET= svxmsfilter$(DLLPOSTFIX)
+SHL4IMPLIB= isvxmsfilter
+SHL4USE_EXPORTS=name
+SHL4DEPN=$(SHL1TARGETN)
+SHL4LIBS= $(LIB6TARGET)
+
+SHL4STDLIBS= \
+             $(SVXCORELIB) \
+             $(SFX2LIB) \
+             $(XMLOFFLIB) \
+             $(GOODIESLIB) \
+             $(BASEGFXLIB) \
+             $(BASICLIB) \
+             $(SVTOOLLIB) \
+             $(TKLIB) \
+             $(VCLLIB) \
+             $(SVLLIB) \
+             $(SOTLIB) \
+             $(UNOTOOLSLIB) \
+             $(TOOLSLIB) \
+             $(XMLSCRIPTLIB) \
+             $(COMPHELPERLIB) \
+             $(CPPUHELPERLIB) \
+             $(CPPULIB) \
+             $(SALLIB)
+
+SHL4DEF=	$(MISC)$/$(SHL4TARGET).def
+DEF4NAME=	$(SHL4TARGET)
+DEFLIB4NAME=$(TARGET)_6
+
 # ------------------------------------------------------------------------------
 
 # Resource files
--- sw/util/makefile.mk	(.../tags/DEV300_m42)	(revision 270095)
+++ sw/util/makefile.mk	(.../cws/ooxml03)	(revision 270095)
@@ -102,6 +102,7 @@
 # dynamic libraries
 SHL1STDLIBS+= \
     $(LNGLIB) \
+	$(SVXCORELIB) \
 	$(SVXLIB) \
 	$(SFXLIB) \
 	$(XMLOFFLIB) \
@@ -180,6 +181,7 @@
 
 SHL3STDLIBS= \
 		$(ISWLIB) \
+            $(SVXCORELIB) \
             $(SVXLIB) \
             $(SFX2LIB) \
             $(BASICLIB) \
@@ -320,7 +322,10 @@
 
 SHL4STDLIBS= \
 	$(ISWLIB) \
-	$(SVXLIB) \
+	$(OOXLIB) \
+	$(SAXLIB) \
+	$(SVXCORELIB) \
+	$(SVXMSFILTERLIB) \
 	$(SFXLIB) \
 	$(GOODIESLIB) \
 	$(BASEGFXLIB) \
diff --git vcl/inc/vcl/graph.hxx vcl/inc/vcl/graph.hxx
index b7b7870..dd1df6f 100644
--- vcl/inc/vcl/graph.hxx
+++ vcl/inc/vcl/graph.hxx
@@ -174,7 +174,7 @@ public:
     BOOL                IsSwapOut() const;
 
     void                SetLink( const GfxLink& );
-    GfxLink             GetLink();
+    GfxLink             GetLink() const;
     BOOL                IsLink() const;
 
 	BOOL				ExportNative( SvStream& rOStream ) const;
diff --git vcl/source/gdi/graph.cxx vcl/source/gdi/graph.cxx
index 1854a6a..12a8294 100644
--- vcl/source/gdi/graph.cxx
+++ vcl/source/gdi/graph.cxx
@@ -803,7 +803,7 @@ void Graphic::SetLink( const GfxLink& rGfxLink )
 
 // ------------------------------------------------------------------------
 
-GfxLink Graphic::GetLink()
+GfxLink Graphic::GetLink() const
 {
     return mpImpGraphic->ImplGetLink();
 }
diff --git writerfilter/prj/d.lst writerfilter/prj/d.lst
index 0ad5cdd..f941f42 100644
--- writerfilter/prj/d.lst
+++ writerfilter/prj/d.lst
@@ -3,3 +3,5 @@
 ..\%__SRC%\lib\*.so %_DEST%\lib%_EXT%\*.so
 ..\%__SRC%\lib\*.dylib %_DEST%\lib%_EXT%\*.dylib
 
+mkdir: %_DEST%\inc%_EXT%\writerfilter\doctok
+..\%__SRC%\inc\doctok\sprmids.hxx %_DEST%\inc%_EXT%\writerfilter\doctok\sprmids.hxx
diff --git writerfilter/source/filter/ImportFilter.cxx writerfilter/source/filter/ImportFilter.cxx
index 32fe782..c36a844 100644
--- writerfilter/source/filter/ImportFilter.cxx
+++ writerfilter/source/filter/ImportFilter.cxx
@@ -30,9 +30,7 @@
 
 #include <osl/diagnose.h>
 #include <com/sun/star/uno/XComponentContext.hpp>
-#ifndef _COM_SU_STAR_DRAWING_XDRAWPAGESUPPLIER_HPP_
 #include <com/sun/star/drawing/XDrawPageSupplier.hpp>
-#endif
 #include <com/sun/star/io/XInputStream.hpp>
 #include <dmapper/DomainMapper.hxx>
 #include <WriterFilter.hxx>
@@ -42,6 +40,7 @@
 #include <iostream>
 #include <osl/process.h>
 #endif
+
 #include <resourcemodel/TagLogger.hxx>
 using namespace ::rtl;
 using namespace ::com::sun::star;
@@ -52,6 +51,24 @@ using namespace ::com::sun::star;
 sal_Bool WriterFilter::filter( const uno::Sequence< beans::PropertyValue >& aDescriptor )
    throw (uno::RuntimeException)
 {
+    if( m_xSrcDoc.is() )
+    {
+		uno::Reference< lang::XMultiServiceFactory > xMSF(m_xContext->getServiceManager(), uno::UNO_QUERY_THROW);
+		uno::Reference< uno::XInterface > xIfc( xMSF->createInstance( rtl::OUString( RTL_CONSTASCII_USTRINGPARAM ( "com.sun.star.comp.Writer.DocxExport" ))), uno::UNO_QUERY_THROW);
+		if (!xIfc.is())
+			return sal_False;
+		uno::Reference< document::XExporter > xExprtr(xIfc, uno::UNO_QUERY_THROW);
+		uno::Reference< document::XFilter > xFltr(xIfc, uno::UNO_QUERY_THROW);
+		if (!xExprtr.is() || !xFltr.is())
+			return sal_False;
+		xExprtr->setSourceDocument(m_xSrcDoc);
+		if (xFltr->filter(aDescriptor))
+			return sal_True;
+		return sal_False;
+	}
+	else if (m_xDstDoc.is())
+	{
+
     sal_Int32 nLength = aDescriptor.getLength();
     const beans::PropertyValue * pValue = aDescriptor.getConstArray();
     uno::Reference < io::XInputStream > xInputStream;
@@ -82,18 +99,18 @@ sal_Bool WriterFilter::filter( const uno::Sequence< beans::PropertyValue >& aDes
         (m_sFilterName.equalsAsciiL ( RTL_CONSTASCII_STRINGPARAM ( "writer_MS_Word_2007" ) ) ||
          m_sFilterName.equalsAsciiL ( RTL_CONSTASCII_STRINGPARAM ( "writer_MS_Word_2007_Template" ) )) ?
                 writerfilter::dmapper::DOCUMENT_OOXML : writerfilter::dmapper::DOCUMENT_DOC;
-    writerfilter::Stream::Pointer_t pStream(new writerfilter::dmapper::DomainMapper(m_xContext, xInputStream, m_xDoc, eType));
+    writerfilter::Stream::Pointer_t pStream(new writerfilter::dmapper::DomainMapper(m_xContext, xInputStream, m_xDstDoc, eType));
     //create the tokenizer and domain mapper
     if( eType == writerfilter::dmapper::DOCUMENT_OOXML )
     {
         writerfilter::ooxml::OOXMLStream::Pointer_t pDocStream = writerfilter::ooxml::OOXMLDocumentFactory::createStream(m_xContext, xInputStream);
         writerfilter::ooxml::OOXMLDocument::Pointer_t pDocument(writerfilter::ooxml::OOXMLDocumentFactory::createDocument(pDocStream));
 
-        uno::Reference<frame::XModel> xModel(m_xDoc, uno::UNO_QUERY_THROW);
+        uno::Reference<frame::XModel> xModel(m_xDstDoc, uno::UNO_QUERY_THROW);
         pDocument->setModel(xModel);
 
         uno::Reference<drawing::XDrawPageSupplier> xDrawings
-            (m_xDoc, uno::UNO_QUERY_THROW);
+            (m_xDstDoc, uno::UNO_QUERY_THROW);
         uno::Reference<drawing::XShapes> xShapes
             (xDrawings->getDrawPage(), uno::UNO_QUERY_THROW);
         pDocument->setShapes(xShapes);
@@ -116,6 +133,8 @@ sal_Bool WriterFilter::filter( const uno::Sequence< beans::PropertyValue >& aDes
 #endif
 
     return sal_True;
+    }
+    return sal_False;
 }
 /*-- 09.06.2006 10:15:20---------------------------------------------------
 
@@ -130,7 +149,13 @@ void WriterFilter::cancel(  ) throw (uno::RuntimeException)
 void WriterFilter::setTargetDocument( const uno::Reference< lang::XComponent >& xDoc )
    throw (lang::IllegalArgumentException, uno::RuntimeException)
 {
-   m_xDoc = xDoc;
+   m_xDstDoc = xDoc;
+}
+
+void WriterFilter::setSourceDocument( const uno::Reference< lang::XComponent >& xDoc )
+   throw (lang::IllegalArgumentException, uno::RuntimeException)
+{
+   m_xSrcDoc = xDoc;
 }
 
 /*-- 09.06.2006 10:15:20---------------------------------------------------
@@ -163,24 +188,28 @@ OUString WriterFilter_getImplementationName () throw (uno::RuntimeException)
 }
 
 #define SERVICE_NAME1 "com.sun.star.document.ImportFilter"
+#define SERVICE_NAME2 "com.sun.star.document.ExportFilter"
 /*-- 09.06.2006 10:15:20---------------------------------------------------
 
   -----------------------------------------------------------------------*/
 sal_Bool WriterFilter_supportsService( const OUString& ServiceName ) throw (uno::RuntimeException)
 {
-   return (ServiceName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM ( SERVICE_NAME1 ) ));
+   return (ServiceName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM ( SERVICE_NAME1 ) ) ||
+           ServiceName.equalsAsciiL( RTL_CONSTASCII_STRINGPARAM ( SERVICE_NAME1 ) ));
 }
 /*-- 09.06.2006 10:15:20---------------------------------------------------
 
   -----------------------------------------------------------------------*/
 uno::Sequence< OUString > WriterFilter_getSupportedServiceNames(  ) throw (uno::RuntimeException)
 {
-   uno::Sequence < OUString > aRet(1);
+   uno::Sequence < OUString > aRet(2);
    OUString* pArray = aRet.getArray();
    pArray[0] =  OUString ( RTL_CONSTASCII_USTRINGPARAM ( SERVICE_NAME1 ) );
+   pArray[1] =  OUString ( RTL_CONSTASCII_USTRINGPARAM ( SERVICE_NAME2 ) );
    return aRet;
 }
 #undef SERVICE_NAME1
+#undef SERVICE_NAME2
 
 /*-- 09.06.2006 10:15:20---------------------------------------------------
 
diff --git writerfilter/source/filter/WriterFilter.hxx writerfilter/source/filter/WriterFilter.hxx
index 6ad4797..0be0428 100644
--- writerfilter/source/filter/WriterFilter.hxx
+++ writerfilter/source/filter/WriterFilter.hxx
@@ -33,16 +33,18 @@
 
 #include <com/sun/star/document/XFilter.hpp>
 #include <com/sun/star/document/XImporter.hpp>
+#include <com/sun/star/document/XExporter.hpp>
 #include <com/sun/star/lang/XInitialization.hpp>
 #include <com/sun/star/lang/XServiceInfo.hpp>
 #include <com/sun/star/xml/sax/XDocumentHandler.hpp>
-#include <cppuhelper/implbase4.hxx>
+#include <cppuhelper/implbase5.hxx>
 #include <WriterFilterDllApi.hxx>
 
-class WRITERFILTER_DLLPUBLIC WriterFilter : public cppu::WeakImplHelper4
+class WRITERFILTER_DLLPUBLIC WriterFilter : public cppu::WeakImplHelper5
 <
     com::sun::star::document::XFilter,
     com::sun::star::document::XImporter,
+	com::sun::star::document::XExporter,
     com::sun::star::lang::XInitialization,
     com::sun::star::lang::XServiceInfo
 >
@@ -50,7 +52,7 @@ class WRITERFILTER_DLLPUBLIC WriterFilter : public cppu::WeakImplHelper4
 
 protected:
     ::com::sun::star::uno::Reference< ::com::sun::star::uno::XComponentContext > m_xContext;
-    ::com::sun::star::uno::Reference< ::com::sun::star::lang::XComponent > m_xDoc;
+    ::com::sun::star::uno::Reference< ::com::sun::star::lang::XComponent > m_xSrcDoc, m_xDstDoc;
     ::rtl::OUString m_sFilterName;
     ::com::sun::star::uno::Reference< ::com::sun::star::xml::sax::XDocumentHandler > m_xHandler;
 
@@ -69,6 +71,10 @@ public:
     virtual void SAL_CALL setTargetDocument( const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XComponent >& xDoc )
         throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
 
+    // XExporter
+    virtual void SAL_CALL setSourceDocument( const ::com::sun::star::uno::Reference< ::com::sun::star::lang::XComponent >& xDoc )
+        throw (::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::uno::RuntimeException);
+
     // XInitialization
     virtual void SAL_CALL initialize( const ::com::sun::star::uno::Sequence< ::com::sun::star::uno::Any >& aArguments )
         throw (::com::sun::star::uno::Exception, ::com::sun::star::uno::RuntimeException);
diff --git xmlsecurity/util/makefile.mk xmlsecurity/util/makefile.mk
index d572e69..64ed60b 100644
--- xmlsecurity/util/makefile.mk
+++ xmlsecurity/util/makefile.mk
@@ -156,7 +156,7 @@ SHL4STDLIBS=\
 				$(SVLLIB)			\
 				$(SFXLIB)			\
 				$(XMLOFFLIB)		\
-				$(SVXLIB)
+				$(SVXCORELIB)
 
 SHL4VERSIONMAP = xmlsecurity.map
 SHL4DEPN=
