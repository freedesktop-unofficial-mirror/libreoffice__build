--- config_office/configure.in.ark	2008-06-14 15:28:05.682810320 +0200
+++ config_office/configure.in	2008-06-14 15:28:32.734780743 +0200
@@ -5655,7 +5655,7 @@ your KDE installation by exporting KDEDI
     fi
 
     dnl Set the variables
-    KDE_CFLAGS="-I$qt_incdir -I$kde_incdir -DQT_CLEAN_NAMESPACE -DQT_THREAD_SUPPORT"
+    KDE_CFLAGS="`pkg-config --cflags QtCore` `pkg-config --cflags QtGui` -I$kde_incdir -DQT_CLEAN_NAMESPACE -DQT_THREAD_SUPPORT"
     KDE_LIBS="-L$kde_libdir -L$qt_libdir -lkdeui -lkdecore -lQtCore -lQtGui"
 fi
 AC_SUBST(KDE_CFLAGS)
--- fpicker/source/unx/kde/kdecommandthread.cxx.fpicker-kde4~	2008-07-09 12:43:02.378694846 +0200
+++ fpicker/source/unx/kde/kdecommandthread.cxx	2008-07-09 12:43:10.996967838 +0200
@@ -55,6 +55,7 @@
  *  All Rights Reserved.
  *
  *  Contributor(s): Jan Holesovsky <kendy@openoffice.org>
+ *                  Bernhard Rosenkraenzer <bero@arklinux.ch>
  *
  *
  ************************************************************************/
@@ -65,6 +66,10 @@
 
 #include <kapplication.h>
 
+#include <QWidget>
+#include <QTextStream>
+#include <QTextCodec>
+
 #include <iostream>
 
 //////////////////////////////////////////////////////////////////////////
@@ -72,8 +77,8 @@
 //////////////////////////////////////////////////////////////////////////
 
 CommandEvent::CommandEvent( const QString &qCommand, QStringList *pStringList )
-    : QCustomEvent( TypeId, pStringList ),
-      m_eCommand( Unknown )
+    : QEvent( TypeId ),
+      m_eCommand( Unknown ), data(pStringList)
 {
     struct {
         const char *pName;
@@ -120,8 +125,8 @@ CommandThread::~CommandThread()
 
 void CommandThread::run()
 {
-    QTextIStream qStream( stdin );
-    qStream.setEncoding( QTextStream::UnicodeUTF8 );
+    QTextStream qStream( stdin, QIODevice::ReadOnly );
+    qStream.setCodec( QTextCodec::codecForName("UTF-8") );
 
     QString qLine;
     bool bQuit = false;
@@ -158,7 +163,7 @@ void CommandThread::handleCommand( const
     {
         bQuit = true;
         kapp->exit();
-        kapp->wakeUpGuiThread();
+        kapp->processEvents();
     }
     else
         kapp->postEvent( m_pObject, new CommandEvent( qCommand, pTokens ) );
@@ -197,7 +202,7 @@ QStringList* CommandThread::tokenize( co
         else if ( *pUnicode == ' ' && !bQuoted )
         {
             pList->push_back( qBuffer );
-            qBuffer.setLength( 0 );
+            qBuffer.resize( 0 );
         }
         else
             qBuffer.append( *pUnicode );
--- fpicker/source/unx/kde/kdecommandthread.hxx.fpicker-kde4~	2008-07-09 12:43:02.380696287 +0200
+++ fpicker/source/unx/kde/kdecommandthread.hxx	2008-07-09 12:43:11.347946664 +0200
@@ -55,6 +55,7 @@
  *  All Rights Reserved.
  *
  *  Contributor(s): Jan Holesovsky <kendy@openoffice.org>
+ *                  Bernhard Rosenkraenzer <bero@arklinux.ch>
  *
  *
  ************************************************************************/
@@ -66,7 +67,7 @@
 #include <qmutex.h>
 #include <qthread.h>
 
-class CommandEvent : public QCustomEvent
+class CommandEvent : public QEvent
 {
 public:
     enum CommandEventType {
@@ -104,7 +105,9 @@ public:
     CommandEvent( const QString &qCommand, QStringList *pStringList );
 
     CommandEventType            command() const { return m_eCommand; }
-    QStringList*                stringList() { return static_cast< QStringList* >( data() ); }
+    QStringList*                stringList() { return data; }
+protected:
+    QStringList *data;
 };
 
 class CommandThread : public QThread
--- fpicker/source/unx/kde/kdefilepicker.cxx.fpicker-kde4~	2008-07-09 12:43:02.383694504 +0200
+++ fpicker/source/unx/kde/kdefilepicker.cxx	2008-07-09 12:43:11.853967122 +0200
@@ -64,14 +64,11 @@
 
 #include <qcheckbox.h>
 #include <qcombobox.h>
-#include <qgrid.h>
-#include <qhbox.h>
 #include <qlabel.h>
 #include <qlayout.h>
-#include <qobjectlist.h>
 #include <qpushbutton.h>
 #include <qregexp.h>
-#include <qvbox.h>
+#include <QTemporaryFile>
 
 #ifdef QT_NO_EMIT
 #define emit
@@ -84,7 +81,6 @@
 #include <kio/netaccess.h>
 #include <klocale.h>
 #include <kmessagebox.h>
-#include <ktempfile.h>
 
 #include <algorithm>
 #include <iostream>
@@ -94,25 +90,42 @@
 //////////////////////////////////////////////////////////////////////////
 
 FileDialog::FileDialog( const QString &startDir, const QString &filter,
-        QWidget *parent, const char *name )
-    : KFileDialog( startDir, filter, parent, name, true, m_pCustomWidget = new QVBox() ),
-      m_pCombosAndButtons( new QHBox( m_pCustomWidget ) ),
-      m_pLabels( new QVBox( m_pCombosAndButtons ) ),
-      m_pComboBoxes( new QVBox( m_pCombosAndButtons ) ),
-      m_pPushButtons( new QVBox( m_pCombosAndButtons ) ),
-      m_pCheckBoxes( new QGrid( 2, m_pCustomWidget ) ),
+        QWidget *parent )
+    : KFileDialog( startDir, filter, parent, m_pCustomWidget = new QWidget() ), m_pCustomWidgetLayout( new QVBoxLayout(m_pCustomWidget) ),
+      m_pCombosAndButtons( new QWidget( m_pCustomWidget ) ),
+      m_pCombosAndButtonsLayout( new QHBoxLayout( m_pCombosAndButtons ) ),
+      m_pLabels( new QWidget( m_pCombosAndButtons ) ),
+      m_pLabelsLayout( new QVBoxLayout( m_pLabels ) ),
+      m_pComboBoxes( new QWidget( m_pCombosAndButtons ) ),
+      m_pComboBoxesLayout( new QVBoxLayout( m_pComboBoxes ) ),
+      m_pPushButtons( new QWidget( m_pCombosAndButtons ) ),
+      m_pPushButtonsLayout( new QVBoxLayout( m_pPushButtons ) ),
+      m_pCheckBoxes( new QWidget( m_pCustomWidget ) ),
+      m_pCheckBoxesLayout( new QGridLayout( m_pCheckBoxes ) ),
+      m_pCheckBoxX(0), m_pCheckBoxY(0),
       m_bIsSave( false ),
       m_bIsExecuting( false ),
       m_bCanNotifySelection( true )
 {
+    m_pCustomWidgetLayout->addWidget(m_pCombosAndButtons);
+    m_pCombosAndButtonsLayout->addWidget(m_pLabels);
+    m_pCombosAndButtonsLayout->addWidget(m_pComboBoxes);
+    m_pCombosAndButtonsLayout->addWidget(m_pPushButtons);
+    m_pCustomWidgetLayout->addWidget(m_pCheckBoxes);
+    m_pCustomWidget->setLayout(m_pCustomWidgetLayout);
+    m_pCombosAndButtons->setLayout(m_pCombosAndButtonsLayout);
+    m_pLabels->setLayout(m_pLabelsLayout);
+    m_pComboBoxes->setLayout(m_pComboBoxesLayout);
+    m_pPushButtons->setLayout(m_pPushButtonsLayout);
+    m_pCheckBoxes->setLayout(m_pCheckBoxesLayout);
     connect( this, SIGNAL( fileHighlighted( const QString & ) ),
              this, SLOT( fileHighlightedCommand( const QString & ) ) );
 
     connect( this, SIGNAL( selectionChanged() ),
              this, SLOT( selectionChangedCommand() ) );
 
-    m_pCustomWidget->setSpacing( KDialog::spacingHint() );
-    m_pCombosAndButtons->setSpacing( KDialog::spacingHint() );
+    m_pCustomWidgetLayout->setSpacing( KDialog::spacingHint() );
+    m_pCombosAndButtonsLayout->setSpacing( KDialog::spacingHint() );
 
     updateCustomWidgetLayout();
 }
@@ -137,11 +150,11 @@ void FileDialog::showEvent( QShowEvent *
 
 void FileDialog::updateCustomWidgetLayout()
 {
-    QPoint qReferencePoint = filterWidget->mapTo( this, QPoint( 0, 0 ) );
+    QPoint qReferencePoint = filterWidget()->mapTo( this, QPoint( 0, 0 ) );
     QPoint qCustomPoint = m_pCustomWidget->mapTo( this, QPoint( 0, 0 ) );
 
     int nLeft = qReferencePoint.x() - qCustomPoint.x();
-    int nRight = m_pCustomWidget->width() - filterWidget->width() - nLeft;
+    int nRight = m_pCustomWidget->width() - filterWidget()->width() - nLeft;
     
     nLeft -= KDialog::spacingHint();
     nRight -= KDialog::spacingHint();
@@ -152,7 +165,7 @@ void FileDialog::updateCustomWidgetLayou
     m_pPushButtons->setFixedWidth( ( nRight > 0 )? nRight: 100 );
 }
 
-void FileDialog::customEvent( QCustomEvent *pEvent )
+void FileDialog::customEvent( QEvent *pEvent )
 {
     if ( pEvent && pEvent->type() == CommandEvent::TypeId )
     {
@@ -225,19 +238,19 @@ void FileDialog::customEvent( QCustomEve
                 break;
             case CommandEvent::GetCurrentFilter:
                 {
-                    QString qCurrentFilter = filterWidget->currentText();
+                    QString qCurrentFilter = filterWidget()->currentText();
                     sendCommand( "currentFilter " + escapeString( qCurrentFilter ) );
                 }
                 break;
             case CommandEvent::SetCurrentFilter:
                 if ( nListSize >= 1 )
                 {
-                    static_cast< FileFilterComboHack* >( filterWidget )->setCurrentFilter( pStringList->front() );
+                    static_cast< FileFilterComboHack* >( filterWidget() )->setCurrentFilter( pStringList->front() );
                 }
                 break;
             case CommandEvent::GetDirectory:
                 {
-                    QString qDirectory = baseURL().url();
+                    QString qDirectory = baseUrl().url();
                     if ( qDirectory.startsWith( "file:/" ) && qDirectory.mid( 6, 1 ) != "/" )
                         qDirectory.replace( "file:/", "file:///" );
                     sendCommand( "currentDirectory " + escapeString( qDirectory ) );
@@ -246,7 +259,7 @@ void FileDialog::customEvent( QCustomEve
             case CommandEvent::SetDirectory:
                 if ( nListSize >= 1 )
                 {
-                    setURL( pStringList->front() );
+                    setUrl( pStringList->front() );
                 }
                 break;
             case CommandEvent::GetFiles:
@@ -256,19 +269,9 @@ void FileDialog::customEvent( QCustomEve
 
                     qString.append( "files" );
 
-                    if ( result() == QDialog::Accepted )
-                    {
-                        KURL::List qList( selectedURLs() );
-                        for ( KURL::List::const_iterator it = qList.begin(); it != qList.end(); ++it )
-                            appendURL( qString, (*it) );
-                    }
-                    else
-                    {
-                        // we have to return the selected files anyway
-                        const KFileItemList *pItems = ops->selectedItems();
-                        for ( KFileItemListIterator it( *pItems ); it.current(); ++it )
-                            appendURL( qString, (*it)->url() );
-                    }
+                    KUrl::List qList( selectedUrls() );
+                    for ( KUrl::List::const_iterator it = qList.begin(); it != qList.end(); ++it )
+                        appendURL( qString, (*it) );
 
                     sendCommand( qString );
                     setCanNotifySelection( true );
@@ -314,7 +317,7 @@ void FileDialog::customEvent( QCustomEve
                 break;
             case CommandEvent::Exec:
                 {
-                    filterWidget->setEditable( false );
+                    filterWidget()->setEditable( false );
                     QString qSelectedURL;
                     setIsExecuting( true );
                     bool bCanExit = false;
@@ -322,7 +325,7 @@ void FileDialog::customEvent( QCustomEve
                         setCanNotifySelection( true );
                         exec();
 
-                        KURL qLocalSelectedURL = mostLocalURL( selectedURL() );
+                        KUrl qLocalSelectedURL = mostLocalURL( selectedUrl() );
 
                         qSelectedURL = addExtension( qLocalSelectedURL.url() );
                         QString qProtocol( qLocalSelectedURL.protocol() );
@@ -338,7 +341,7 @@ void FileDialog::customEvent( QCustomEve
                                                                  i18n( "A file named \"%1\" already exists. "
                                                                      "Are you sure you want to overwrite it?" ).arg( qFileName ),
                                                                  i18n( "Overwrite File?" ),
-                                                                 i18n( "Overwrite" ), KStdGuiItem::cancel() ) == KMessageBox::Yes );
+                                                                 KGuiItem(i18n( "Overwrite" )), KStandardGuiItem::cancel() ) == KMessageBox::Yes );
                             }
                             else if ( !isSupportedProtocol( qProtocol ) )
                             {
@@ -382,7 +385,10 @@ void FileDialog::appendControl( const QS
 
     if ( rType == "checkbox" )
     {
-        QCheckBox *pCheckBox = new QCheckBox( qLabel, m_pCheckBoxes, rId.utf8() );
+        QCheckBox *pCheckBox = new QCheckBox( qLabel, m_pCheckBoxes );
+	pCheckBox->setObjectName(rId);
+	m_pCheckBoxesLayout->addWidget(pCheckBox, m_pCheckBoxY, m_pCheckBoxX);
+	m_pCheckBoxX++; if(m_pCheckBoxX==2) { m_pCheckBoxY++; m_pCheckBoxX=0; }
 
         pCheckBox->setEnabled( true );
         pCheckBox->setChecked( false );
@@ -390,33 +396,35 @@ void FileDialog::appendControl( const QS
     else if ( rType == "listbox" )
     {
         QLabel *pComboLabel = new QLabel( qLabel, m_pLabels );
-        QComboBox *pComboBox = new QComboBox( m_pComboBoxes, rId.utf8() );
+	m_pLabelsLayout->addWidget(pComboLabel);
+        QComboBox *pComboBox = new QComboBox( m_pComboBoxes );
+	pComboBox->setObjectName(rId);
+	m_pComboBoxesLayout->addWidget(pComboBox);
 
         pComboLabel->setBuddy( pComboBox );
         pComboBox->setEnabled( true );
     }
     else if ( rType == "pushbutton" )
     {
-        QPushButton *pPushButton = new QPushButton( qLabel, m_pPushButtons, rId.utf8() );
+        QPushButton *pPushButton = new QPushButton( qLabel, m_pPushButtons );
+	pPushButton->setObjectName(rId);
+	m_pPushButtonsLayout->addWidget(pPushButton);
         pPushButton->setEnabled( true );
     }
 }
 
 QWidget* FileDialog::findControl( const QString &rId ) const
 {
-    QObjectList *pList = m_pCustomWidget->queryList();
-    QCString qName( rId.utf8() );
-    QObjectList::const_iterator it = pList->begin();
+    QList<QObject*> const &pList = qFindChildren<QObject*>(m_pCustomWidget);
+    QList<QObject*>::const_iterator it = pList.begin();
     
-    for ( ; it != pList->end() && qName != (*it)->name(); ++it )
+    for ( ; it != pList.end() && rId != (*it)->objectName(); ++it )
         ;
 
     QWidget *pWidget = NULL;
-    if ( it != pList->end() )
+    if ( it != pList.end() )
         pWidget = static_cast< QWidget* >( *it );
     
-    delete pList;
-
     return pWidget;
 }
 
@@ -425,7 +433,7 @@ void FileDialog::enableControl( const QS
     QWidget *pWidget = findControl( rId );
 
     if ( pWidget )
-        pWidget->setEnabled( rValue.lower() == "true" );
+        pWidget->setEnabled( rValue.toLower() == "true" );
 }
 
 void FileDialog::getValue( const QString &rId, const QString &rAction )
@@ -437,7 +445,7 @@ void FileDialog::getValue( const QString
 
     if ( pWidget )
     {
-        QCString qClassName = pWidget->className();
+        QString qClassName = pWidget->metaObject()->className();
         if ( qClassName == "QCheckBox" )
         {
             QCheckBox *pCheckBox = static_cast< QCheckBox* >( pWidget );
@@ -456,7 +464,7 @@ void FileDialog::getValue( const QString
                 for ( int nIdx = 0; nIdx < pComboBox->count(); ++nIdx )
                 {
                     qString.append( ' ' );
-                    appendEscaped( qString, pComboBox->text( nIdx ) );
+                    appendEscaped( qString, pComboBox->itemText( nIdx ) );
                 }
             }
             else if ( rAction == "getSelectedItem" )
@@ -467,7 +475,7 @@ void FileDialog::getValue( const QString
             else if ( rAction == "getSelectedItemIndex" )
             {
                 qString.append( " int " );
-                qString.append( QString().setNum( pComboBox->currentItem() ) );
+                qString.append( QString().setNum( pComboBox->currentIndex() ) );
             }
             // TODO getHelpURL
         }
@@ -483,12 +491,12 @@ void FileDialog::setValue( const QString
 
     if ( pWidget )
     {
-        QCString qClassName = pWidget->className();
+        QString qClassName = pWidget->metaObject()->className();
         if ( qClassName == "QCheckBox" )
         {
             QCheckBox *pCheckBox = static_cast< QCheckBox* >( pWidget );
 
-            bool bValue = ( !rValue.isEmpty() ) && ( rValue.front().lower() == "true" );
+            bool bValue = ( !rValue.isEmpty() ) && ( rValue.front().toLower() == "true" );
             pCheckBox->setChecked( bValue );
         }
         else if ( qClassName == "QComboBox" )
@@ -497,11 +505,11 @@ void FileDialog::setValue( const QString
             if ( rAction == "addItem" )
             {
                 if ( !rValue.isEmpty() )
-                    pComboBox->insertItem( rValue.front() );
+                    pComboBox->addItem( rValue.front() );
             }
             else if ( rAction == "addItems" )
             {
-                pComboBox->insertStringList( rValue );
+                pComboBox->addItems( rValue );
             }
             else if ( rAction == "deleteItem" )
             {
@@ -515,7 +523,7 @@ void FileDialog::setValue( const QString
             else if ( rAction == "setSelectedItem" )
             {
                 if ( !rValue.isEmpty() )
-                    pComboBox->setCurrentItem( rValue.front().toInt() );
+                    pComboBox->setCurrentIndex( rValue.front().toInt() );
             }
             // FIXME setHelpURL is ignored
         }
@@ -566,24 +574,24 @@ QString FileDialog::addExtension( const 
     QString qExtension;
 
     QWidget *pExtensionWidget = findControl( "100" ); // CHECKBOX_AUTOEXTENSION
-    QCheckBox *pExtensionCB = pExtensionWidget? static_cast< QCheckBox* >( pExtensionWidget->qt_cast( "QCheckBox" ) ): NULL;
+    QCheckBox *pExtensionCB = pExtensionWidget? qobject_cast< QCheckBox* >( pExtensionWidget ): NULL;
     if ( pExtensionCB && pExtensionCB->isChecked() )
     {
         // FIXME: qFilter can be a MIME; we ignore it now...
-        QStringList qFilterList = QStringList::split( " ", currentFilter() );
+        QStringList qFilterList = currentFilter().split( " " );
         for ( QStringList::const_iterator it = qFilterList.begin();
               qExtension.isEmpty() && it != qFilterList.end();
               ++it )
         {
-            int nUnwanted = (*it).findRev( '*' );
+            int nUnwanted = (*it).lastIndexOf( '*' );
             if ( nUnwanted < 0 )
-                nUnwanted = (*it).findRev( '?' );
+                nUnwanted = (*it).lastIndexOf( '?' );
             else
-                nUnwanted = ::std::max( nUnwanted, (*it).find( '?', nUnwanted ) );
+                nUnwanted = ::std::max( nUnwanted, (*it).indexOf( '?', nUnwanted ) );
 
-            int nIdx = (*it).find( '.', ::std::max( nUnwanted, 0 ) );
+            int nIdx = (*it).indexOf( '.', ::std::max( nUnwanted, 0 ) );
             if ( nIdx >= 0 )
-                qExtension = (*it).mid( nIdx ).lower();
+                qExtension = (*it).mid( nIdx ).toLower();
         }
     }
 
@@ -616,17 +624,17 @@ bool FileDialog::isSupportedProtocol( co
     return false;
 }
 
-KURL FileDialog::mostLocalURL( const KURL &rURL ) const
+KUrl FileDialog::mostLocalURL( const KUrl &rURL ) const
 {
 #if KDE_IS_VERSION(3,5,0)
-    KURL qMostLocalURL( KIO::NetAccess::mostLocalURL( rURL, const_cast<FileDialog*>( this ) ) );
+    KUrl qMostLocalURL( KIO::NetAccess::mostLocalUrl( rURL, const_cast<FileDialog*>( this ) ) );
     if ( qMostLocalURL.isLocalFile() )
         return qMostLocalURL;
     else
     {
         // Terrible hack to get even non-existing media:// files right
         qMostLocalURL.cd( ".." );
-        KURL qMostLocalPath( KIO::NetAccess::mostLocalURL( qMostLocalURL, const_cast<FileDialog*>( this ) ) );
+        KUrl qMostLocalPath( KIO::NetAccess::mostLocalUrl( qMostLocalURL, const_cast<FileDialog*>( this ) ) );
         if ( qMostLocalPath.isLocalFile() )
         {
             qMostLocalPath.addPath( rURL.fileName() );
@@ -640,22 +648,22 @@ KURL FileDialog::mostLocalURL( const KUR
 
 QString FileDialog::localCopy( const QString &rFileName ) const
 {
-    // 106 == MIB enum for UTF-8
-    KURL qLocalURL = mostLocalURL( KURL( rFileName, 106 ) );
+    KUrl qLocalURL = mostLocalURL( KUrl( rFileName ) );
     if ( qLocalURL.isLocalFile() )
         return qLocalURL.url();
 
-    int nExtensionPos = rFileName.findRev( '/' );
+    int nExtensionPos = rFileName.lastIndexOf( '/' );
     if ( nExtensionPos >= 0 )
-        nExtensionPos = rFileName.find( '.', nExtensionPos );
+        nExtensionPos = rFileName.indexOf( '.', nExtensionPos );
     else
-        nExtensionPos = rFileName.find( '.' );
+        nExtensionPos = rFileName.indexOf( '.' );
 
-    KTempFile qTempFile( QString::null, ( nExtensionPos < 0 )? QString(): rFileName.mid( nExtensionPos ) );
-    KURL qDestURL;
-    qDestURL.setPath( qTempFile.name() );
+    QTemporaryFile qTempFile( QString("ooo-temp-XXXXXX.") + (( nExtensionPos < 0 )? QString(): rFileName.mid( nExtensionPos )) );
+    qTempFile.setAutoRemove(false);
+    KUrl qDestURL;
+    qDestURL.setPath( qTempFile.fileName() );
 
-    if ( !KIO::NetAccess::file_copy( rFileName, qDestURL, 0600, true, false, NULL ) )
+    if ( !KIO::NetAccess::file_copy( rFileName, qDestURL ) )
     {
         KMessageBox::error( 0, KIO::NetAccess::lastErrorString() );
         return QString::null;
@@ -689,10 +697,10 @@ void FileDialog::sendCommand( const QStr
 #endif
 
     //m_aOutputStream << rCommand << endl;
-    ::std::cout << rCommand.utf8() << ::std::endl;
+    ::std::cout << rCommand.toUtf8().data() << ::std::endl;
 }
 
-void FileDialog::appendURL( QString &rBuffer, const KURL &rURL )
+void FileDialog::appendURL( QString &rBuffer, const KUrl &rURL )
 {
     // From Martin Kretzschmar:
     // file:///path/to/test%E0.odt is not a valid URL from OOo's point of
@@ -701,7 +709,7 @@ void FileDialog::appendURL( QString &rBu
     // (which file:///path/test%E0.odt is not).
     // Cf. the comment in sal/inc/osl/file.h.
     // 106 == MIB enum for UTF-8
-    QString qUrlStr = addExtension( rURL.url( 0, 106 ) );
+    QString qUrlStr = addExtension( rURL.url( KUrl::RemoveTrailingSlash ) );
 
     if ( !isExecuting() && !isSupportedProtocol( rURL.protocol() ) )
         qUrlStr = localCopy( qUrlStr );
@@ -747,19 +755,19 @@ QString FileDialog::escapeString( const 
 
 void FileFilterComboHack::setCurrentFilter( const QString& filter )
 {
-    setCurrentText( filter );
+    setEditText( filter );
     filterChanged();
 
     // Workaround for 'Filter name (*.blah)' vs. 'Filter name'
-    if ( currentText() != text( currentItem() ) )
+    if ( currentText() != itemText( currentIndex() ) )
     {
         int nItem = 0;
-        for ( ; nItem < count() && !text( nItem ).startsWith( filter ); ++nItem );
+        for ( ; nItem < count() && !itemText( nItem ).startsWith( filter ); ++nItem );
 
         if ( nItem < count() )
-            setCurrentItem( nItem );
+            setCurrentIndex( nItem );
         else
-            setCurrentItem( 0 );
+            setCurrentIndex( 0 );
 
         filterChanged();
     }
--- fpicker/source/unx/kde/kdefilepicker.hxx.fpicker-kde4~	2008-07-09 12:43:02.385697133 +0200
+++ fpicker/source/unx/kde/kdefilepicker.hxx	2008-07-09 12:43:12.146967279 +0200
@@ -65,9 +65,10 @@
 #include <kfiledialog.h>
 #include <kfilefiltercombo.h>
 
-class QGrid;
-class QHBox;
-class QVBox;
+#include <QWidget>
+#include <QVBoxLayout>
+#include <QHBoxLayout>
+#include <QGridLayout>
 
 class FileDialog : public KFileDialog
 {
@@ -75,16 +76,24 @@ class FileDialog : public KFileDialog
 
 protected:
     typedef QPair< QString, QString > FilterEntry;
-    typedef QValueList< FilterEntry > FilterList;
+    typedef QList< FilterEntry > FilterList;
     
-    QVBox                      *m_pCustomWidget;
-    QHBox                      *m_pCombosAndButtons;
+    QWidget                    *m_pCustomWidget;
+    QVBoxLayout                *m_pCustomWidgetLayout;
+    QWidget                    *m_pCombosAndButtons;
+    QHBoxLayout                *m_pCombosAndButtonsLayout;
     
-    QVBox                      *m_pLabels;
-    QVBox                      *m_pComboBoxes;
-    QVBox                      *m_pPushButtons;
-
-    QGrid                      *m_pCheckBoxes;
+    QWidget                    *m_pLabels;
+    QVBoxLayout                *m_pLabelsLayout;
+    QWidget                    *m_pComboBoxes;
+    QVBoxLayout                *m_pComboBoxesLayout;
+    QWidget                    *m_pPushButtons;
+    QVBoxLayout                *m_pPushButtonsLayout;
+
+    QWidget                    *m_pCheckBoxes;
+    QGridLayout                *m_pCheckBoxesLayout;
+    int                         m_pCheckBoxX;
+    int                         m_pCheckBoxY;
 
     FilterList                  m_aFilters;
 
@@ -102,7 +111,7 @@ protected:
 
 public:
     FileDialog( const QString &startDir, const QString &filter,
-                QWidget *parent, const char *name );
+                QWidget *parent = 0 );
     virtual ~FileDialog();
 
 protected:
@@ -110,7 +119,7 @@ protected:
     virtual void                showEvent( QShowEvent *pEvent );
     void                        updateCustomWidgetLayout();
 
-    virtual void                customEvent( QCustomEvent *pEvent );
+    virtual void                customEvent( QEvent *pEvent );
 
 protected:
     void                        appendControl( const QString &rId, const QString &rType, const QString &rTitle );
@@ -130,7 +139,7 @@ protected:
     bool                        isExecuting( void ) const { return m_bIsExecuting; }
 
     bool                        isSupportedProtocol( const QString &rProtocol ) const;
-    KURL                        mostLocalURL( const KURL &rURL ) const;
+    KUrl                        mostLocalURL( const KUrl &rURL ) const;
     QString                     localCopy( const QString &rFileName ) const;
 
     void                        setCanNotifySelection( bool bCanNotifySelection ) { m_bCanNotifySelection = bCanNotifySelection; }
@@ -142,7 +151,7 @@ protected slots:
 
 protected:
     void                        sendCommand( const QString &rCommand );
-    void                        appendURL( QString &rBuffer, const KURL &rURL );
+    void                        appendURL( QString &rBuffer, const KUrl &rURL );
     void                        appendEscaped( QString &rBuffer, const QString &rString );
     QString                     escapeString( const QString &rString );
 };
--- fpicker/source/unx/kde/kdefpmain.cxx.ark	2008-07-09 20:14:51.094796124 +0200
+++ fpicker/source/unx/kde/kdefpmain.cxx	2008-07-09 20:31:47.186696351 +0200
@@ -74,27 +74,25 @@
 // Main
 //////////////////////////////////////////////////////////////////////////
 
-static KCmdLineOptions sOptions[] =
-{
-    { "winid <argument>", I18N_NOOP("Window ID to which is the fpicker modal"), "0" },
-    KCmdLineLastOption
-};
-
 int main( int argc, char* argv[] )
 {
+    KCmdLineOptions options;
+    options.add("winid <argument>", ki18n("Window ID to which is the fpicker modal"));
     // we fake the name of the application to have "OpenOffice.org" in the
     // title
-    KAboutData qAboutData( "kdefilepicker", I18N_NOOP( "OpenOffice.org" ),
-            "0.1", I18N_NOOP( "kdefilepicker is an implementation of the KDE file dialog for OpenOffice.org." ),
+    KAboutData qAboutData( "kdefilepicker", 0, ki18n( "OpenOffice.org" ),
+            "0.1",
+	    ki18n( "kdefilepicker is an implementation of the KDE file dialog for OpenOffice.org." ),
             KAboutData::License_LGPL,
-            "(c) 2004, Jan Holesovsky" );
-    qAboutData.addAuthor( "Jan Holesovsky", I18N_NOOP("Original author and current maintainer"), "kendy@openoffice.org" );
+            ki18n("(c) 2004, Jan Holesovsky") );
+    qAboutData.addAuthor( "Jan Holesovsky", KLocalizedString("Original author and current maintainer"), "kendy@openoffice.org" );
+    qAboutData.addAuthor( "Bernhard Rosenkraenzer", KLocalizedString("Port to KDE 4.x"), "bero@arklinux.ch" );
 
     // Let the user see that this does something...
     ::std::cerr << "kdefilepicker, an implementation of KDE file dialog for OOo." << ::std::endl
         << "Type 'exit' and press Enter to finish." << ::std::endl;
 
-    KCmdLineArgs::addCmdLineOptions( sOptions );
+    KCmdLineArgs::addCmdLineOptions( options );
     KCmdLineArgs::init( argc, argv, &qAboutData );
 
     KLocale::setMainCatalogue( "kdialog" );
--- fpicker/source/unx/kde/kdemodalityfilter.cxx.ark	2008-07-09 20:37:34.703697395 +0200
+++ fpicker/source/unx/kde/kdemodalityfilter.cxx	2008-07-09 20:37:50.346945629 +0200
@@ -63,6 +63,7 @@
 
 #include <kapplication.h>
 #include <kdialogbase.h>
+#include <QX11Info>
 
 #include <netwm.h>
 #include <X11/Xlib.h>
@@ -90,7 +91,7 @@ bool ModalityFilter::eventFilter( QObjec
         KDialogBase* pDlg = ::qt_cast< KDialogBase* >( pObject );
         if ( pDlg != NULL && m_nWinId != 0 )
         {
-            XSetTransientForHint( qt_xdisplay(), pDlg->winId(), m_nWinId );
+            XSetTransientForHint( QX11Info::display(), pDlg->winId(), m_nWinId );
             m_nWinId = 0;
         }
     }
--- fpicker/source/unx/kde/kdemodalityfilter.hxx.ark	2008-07-09 20:11:06.379503817 +0200
+++ fpicker/source/unx/kde/kdemodalityfilter.hxx	2008-07-09 20:14:37.315944482 +0200
@@ -62,7 +62,7 @@
 #ifndef _KDEMODALITYFILTER_HXX_
 #define _KDEMODALITYFILTER_HXX_
 
-#include <qobject.h>
+#include <QWidget>
 
 class ModalityFilter : public QObject
 {
