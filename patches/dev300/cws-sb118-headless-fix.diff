sb118: #i108681# hack by pl to not process events for removed frames

diff -r 3a83f951e8d2 -r 8b08e64b518c vcl/unx/headless/svpinst.cxx
--- vcl/unx/headless/svpinst.cxx	Mon Jan 25 11:43:22 2010 +0100
+++ vcl/unx/headless/svpinst.cxx	Tue Jan 26 16:53:19 2010 +0100
@@ -58,6 +58,19 @@
     }
 }
 
+bool SvpSalInstance::isFrameAlive( const SalFrame* pFrame ) const
+{
+    for( std::list< SalFrame* >::const_iterator it = m_aFrames.begin();
+         it != m_aFrames.end(); ++it )
+    {
+        if( *it == pFrame )
+        {
+            return true;
+        }
+    }
+    return false;
+}
+
 SvpSalInstance* SvpSalInstance::s_pDefaultInstance = NULL;
 
 SvpSalInstance::SvpSalInstance()
@@ -349,12 +362,15 @@
     {
         for( std::list<SalUserEvent>::const_iterator it = aEvents.begin(); it != aEvents.end(); ++it )
         {
-            it->m_pFrame->CallCallback( it->m_nEvent, it->m_pData );
-            if( it->m_nEvent == SALEVENT_RESIZE )
+            if ( isFrameAlive( it->m_pFrame ) )
             {
-                // this would be a good time to post a paint
-                const SvpSalFrame* pSvpFrame = static_cast<const SvpSalFrame*>(it->m_pFrame);
-                pSvpFrame->PostPaint();
+                it->m_pFrame->CallCallback( it->m_nEvent, it->m_pData );
+                if( it->m_nEvent == SALEVENT_RESIZE )
+                {
+                    // this would be a good time to post a paint
+                    const SvpSalFrame* pSvpFrame = static_cast<const SvpSalFrame*>(it->m_pFrame);
+                    pSvpFrame->PostPaint();
+                }
             }
         }
     }
diff -r 3a83f951e8d2 -r 8b08e64b518c vcl/unx/headless/svpinst.hxx
--- vcl/unx/headless/svpinst.hxx	Mon Jan 25 11:43:22 2010 +0100
+++ vcl/unx/headless/svpinst.hxx	Tue Jan 26 16:53:19 2010 +0100
@@ -111,6 +111,9 @@
     std::list< SalUserEvent > m_aUserEvents;
     
     std::list< SalFrame* > m_aFrames;
+
+    bool isFrameAlive( const SalFrame* pFrame ) const;
+
 public:
     static SvpSalInstance* s_pDefaultInstance;
 

