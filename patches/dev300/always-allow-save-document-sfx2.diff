diff --git sfx2/inc/sfx2/objsh.hxx sfx2/inc/sfx2/objsh.hxx
index f365bbf..c65280b 100644
--- sfx2/inc/sfx2/objsh.hxx
+++ sfx2/inc/sfx2/objsh.hxx
@@ -203,6 +203,10 @@ enum SfxTitleQuery
 	SFX_TITLE_QUERY_SAVE_NAME_PROPOSAL
 };
 
+enum SfxApplicationFlagType
+{
+    SFX_APPFLAG_ALWAYS_ALLOW_SAVE
+};
 
 class SfxToolBoxConfig;
 struct TransferableObjectDescriptor;
@@ -350,6 +354,7 @@ public:
     virtual sal_Bool            SwitchPersistance(
 									const ::com::sun::star::uno::Reference< ::com::sun::star::embed::XStorage >& xStorage );
     virtual void                UpdateLinks();
+    virtual bool                GetApplicationFlag(SfxApplicationFlagType eFlagType);
 
     sal_Bool                    SaveChildren(BOOL bObjectsOnly=FALSE);
     sal_Bool                    SaveAsChildren( SfxMedium &rMedium );
diff --git sfx2/source/doc/guisaveas.cxx sfx2/source/doc/guisaveas.cxx
index 049f9b7..da8f008 100644
--- sfx2/source/doc/guisaveas.cxx
+++ sfx2/source/doc/guisaveas.cxx
@@ -597,6 +597,7 @@ sal_Int8 ModelData_Impl::CheckStateForSave()
 	::rtl::OUString aAuthorString = ::rtl::OUString::createFromAscii( "Author" );
 	::rtl::OUString aInteractionHandlerString = ::rtl::OUString::createFromAscii( "InteractionHandler" );
 	::rtl::OUString aStatusIndicatorString = ::rtl::OUString::createFromAscii( "StatusIndicator" );
+    ::rtl::OUString aAlwaysSaveString = ::rtl::OUString::createFromAscii("AlwaysAllowSave");
 
 	if ( GetMediaDescr().find( aVersionCommentString ) != GetMediaDescr().end() )
 	{
@@ -616,9 +617,26 @@ sal_Int8 ModelData_Impl::CheckStateForSave()
 	if ( GetMediaDescr().size() != aAcceptedArgs.size() )
 		GetMediaDescr() = aAcceptedArgs;
 
-    // the document must be modified
-    if ( !GetModifiable()->isModified() && !bVersInfoNeedsStore )
-		return STATUS_NO_ACTION;
+    // the document must be modified unless the always-save flag is set.
+    sal_Bool bAlwaysAllowSave = sal_False;
+    uno::Reference<beans::XPropertySet> xPropSet(m_xModel, uno::UNO_QUERY);
+    if (xPropSet.is())
+    {
+        try
+        {
+            uno::Any any = xPropSet->getPropertyValue( aAlwaysSaveString );
+            any >>= bAlwaysAllowSave;
+        }
+        catch (const beans::UnknownPropertyException&)
+        {
+            // do nothing...
+        }
+    }
+    if (!bAlwaysAllowSave)
+    {
+        if ( !GetModifiable()->isModified() && !bVersInfoNeedsStore )
+            return STATUS_NO_ACTION;
+    }
 
     // if the document is readonly or a new one a SaveAs operation must be used
     if ( !GetStorable()->hasLocation() || GetStorable()->isReadonly() )
diff --git sfx2/source/doc/objserv.cxx sfx2/source/doc/objserv.cxx
index 1d114cb..204dd55 100644
--- sfx2/source/doc/objserv.cxx
+++ sfx2/source/doc/objserv.cxx
@@ -988,8 +988,9 @@ void SfxObjectShell::GetState_Impl(SfxItemSet &rSet)
 				}
 			case SID_SAVEDOC:
 	            {
-					BOOL bMediumRO = IsReadOnlyMedium();
-                    if ( !bMediumRO && GetMedium() && IsModified() )
+                    bool bAllowSave = (GetApplicationFlag(SFX_APPFLAG_ALWAYS_ALLOW_SAVE) || IsModified());
+                    bool bMediumRO = IsReadOnlyMedium();                                                  
+                    if ( !bMediumRO && GetMedium() && bAllowSave )
 						rSet.Put(SfxStringItem(
 							nWhich, String(SfxResId(STR_SAVEDOC))));
 					else
diff --git sfx2/source/doc/objstor.cxx sfx2/source/doc/objstor.cxx
index e82361c..a060ddc 100644
--- sfx2/source/doc/objstor.cxx
+++ sfx2/source/doc/objstor.cxx
@@ -3825,6 +3825,11 @@ void SfxObjectShell::UpdateLinks()
 {
 }
 
+bool SfxObjectShell::GetApplicationFlag(SfxApplicationFlagType eFlagType)
+{
+    return false;
+}
+
 sal_Bool SfxObjectShell::QuerySaveSizeExceededModules_Impl( const uno::Reference< task::XInteractionHandler >& xHandler )
 {
     if ( !HasBasic() )
