--- desktop/scripts/soffice.sh
+++ desktop/scripts/soffice.sh
@@ -74,6 +75,26 @@
   esac
 done
 
+# test for availability of the fast external splash
+for arg in $@; do
+	if [ "$arg" = "-nologo" -o "$arg" = "-no-oosplash" ]; then
+		no_oosplash=y
+	fi
+done
+
+# Setup our app as oosplash, but try to avoid executing pagein,
+# and other expensive environment setup pieces wherever possible
+# for a second started office
+if [ "$sd_binary" = "soffice.bin" -a -x "$sd_prog/oosplash.bin" ] && [ "$no_oosplash" != "y" ] ; then
+    sd_binary="oosplash.bin"
+    
+    export QSTART_CHECK_ONLY=1
+    if "$sd_prog/$sd_binary" $*; then
+	exit 0
+    fi
+    unset QSTART_CHECK_ONLY
+fi
+
 # pagein
 sd_pagein_args=@pagein-common
 for sd_arg in "$@"; do
@@ -129,16 +151,6 @@
 PYTHONPATH=$sd_prog/../basis-link/program${PYTHONPATH+:$PYTHONPATH}
 export PYTHONPATH
 
-# test for availability of the fast external splash
-for arg in $@; do
-	if [ "$arg" = "-nologo" -o "$arg" = "-no-oosplash" ]; then
-		no_oosplash=y
-	fi
-done
-if [ "$sd_binary" = "soffice.bin" -a -x "$sd_prog/oosplash.bin" ] && [ "$no_oosplash" != "y" ] ; then
-    sd_binary="oosplash.bin"
-fi
-
 # execute soffice binary
 "$sd_prog/$sd_binary" "$@" &
 trap 'kill -9 $!' TERM


diff -u -r ../../HEAD/build/ooo320-m2/desktop/unx/source/start.c unx/source//start.c
--- desktop/unx/source/start.c
+++ desktop/unx/source/start.c
@@ -790,6 +790,9 @@
         ustr_debug( "Failed to connect to pipe", pPipePath );
 #endif
 
+    if (getenv ("QSTART_CHECK_ONLY"))
+	return !bSentArgs;
+
     if ( !bSentArgs )
     {
         if ( !fork_app( pAppPath, &status_fd ) )

