From 6def037c24d6d0faf1a6d9266af4582b3cee550c Mon Sep 17 00:00:00 2001
From: Jan Holesovsky <kendy@suse.cz>
Date: Fri, 14 May 2010 17:04:31 +0200
Subject: [PATCH 549/768] sw-import-html-controls.diff

---
 filter/inc/filter/msfilter/msocximex.hxx |   34 ++++++++++
 filter/source/msfilter/msocximex.cxx     |  100 +++++++++++++++++++++++++++++-
 sw/source/filter/ww8/ww8par.hxx          |    2 +
 sw/source/filter/ww8/ww8par3.cxx         |    8 +++
 sw/source/filter/ww8/ww8par5.cxx         |    2 +-
 5 files changed, 144 insertions(+), 2 deletions(-)

diff --git filter/inc/filter/msfilter/msocximex.hxx filter/inc/filter/msfilter/msocximex.hxx
index b8733b1..c50c5a4 100644
--- filter/inc/filter/msfilter/msocximex.hxx
+++ filter/inc/filter/msfilter/msocximex.hxx
@@ -1417,4 +1417,38 @@ public:
                                 const com::sun::star::awt::Size& rSize );
 };
 
+
+class HTML_TextBox : public OCX_ModernControl
+{
+public:
+    HTML_TextBox() : OCX_ModernControl(rtl::OUString::createFromAscii("TextBox")) {
+        msFormType = rtl::OUString::createFromAscii("com.sun.star.form.component.TextField");
+        msDialogType = rtl::OUString::createFromAscii("com.sun.star.awt.UnoControlEditModel");
+        mnBackColor = 0x80000005L;
+        mnForeColor = 0x80000008L;
+        nBorderColor = 0x80000006L;
+        aFontData.SetHasAlign(TRUE);
+    }
+
+    using OCX_ModernControl::Import; // to not hide the other two import methods
+    virtual sal_Bool Import(com::sun::star::uno::Reference<
+        com::sun::star::beans::XPropertySet> &rPropSet);
+  /*
+    sal_Bool Export(SotStorageRef &rObj,
+        const com::sun::star::uno::Reference<
+        com::sun::star::beans::XPropertySet> &rPropSet,
+        const com::sun::star::awt::Size& rSize);
+    sal_Bool WriteContents(SotStorageStreamRef &rObj,
+        const com::sun::star::uno::Reference<
+        com::sun::star::beans::XPropertySet> &rPropSet,
+        const com::sun::star::awt::Size& rSize);
+  */
+    static OCX_Control *Create() { return new HTML_TextBox;}
+
+        virtual sal_Bool Read(SotStorageStream *pS);
+        virtual sal_Bool ReadFontData(SotStorageStream *pS);
+};
+
+
+
 #endif
diff --git filter/source/msfilter/msocximex.cxx filter/source/msfilter/msocximex.cxx
index 0391c5c..174781a 100644
--- filter/source/msfilter/msocximex.cxx
+++ filter/source/msfilter/msocximex.cxx
@@ -4444,7 +4444,8 @@ OCX_map aOCXTab[] =
     {&OCX_GroupBox::Create,"",
         form::FormComponentType::GROUPBOX,""},
     {&OCX_ProgressBar::Create,"",
-        form::FormComponentType::CONTROL,""}
+        form::FormComponentType::CONTROL,""},
+    {&HTML_TextBox::Create,"5512D124-5CC6-11CF-8d67-00aa00bdce1d", form::FormComponentType::TEXTFIELD,"TextBox"},
 };
 
 const int NO_OCX = sizeof( aOCXTab ) / sizeof( *aOCXTab );
@@ -5142,6 +5143,103 @@ sal_Bool OCX_FontData::Export(SvStorageStreamRef &rContent,
     return sal_True;
 }
 
+
+sal_Bool HTML_TextBox::Import(com::sun::star::uno::Reference<
+    com::sun::star::beans::XPropertySet> &rPropSet)
+{
+    uno::Any aTmp(&sName,getCppuType((OUString *)0));
+    rPropSet->setPropertyValue( WW8_ASCII2STR("Name"), aTmp );
+
+    aTmp = bool2any( fEnabled != 0 );
+    rPropSet->setPropertyValue( WW8_ASCII2STR("Enabled"), aTmp);
+
+    aTmp = bool2any( fLocked != 0 );
+    rPropSet->setPropertyValue( WW8_ASCII2STR("ReadOnly"), aTmp);
+
+    aTmp = bool2any( fHideSelection != 0 );
+    rPropSet->setPropertyValue( WW8_ASCII2STR( "HideInactiveSelection" ), aTmp);
+
+    aTmp <<= ImportColor(mnForeColor);
+    rPropSet->setPropertyValue( WW8_ASCII2STR("TextColor"), aTmp);
+
+    aTmp <<= ImportColor(mnBackColor);
+    rPropSet->setPropertyValue( WW8_ASCII2STR("BackgroundColor"), aTmp);
+
+    aTmp <<= ImportBorder(nSpecialEffect,nBorderStyle);
+    rPropSet->setPropertyValue( WW8_ASCII2STR("Border"), aTmp);
+
+    aTmp <<= ImportColor( nBorderColor );
+    rPropSet->setPropertyValue( WW8_ASCII2STR("BorderColor"), aTmp);
+
+    aTmp = bool2any( fMultiLine != 0 );
+    rPropSet->setPropertyValue( WW8_ASCII2STR("MultiLine"), aTmp);
+
+    sal_uInt16 nTmp = static_cast<sal_uInt16>(nMaxLength);
+    aTmp <<= nTmp;
+    rPropSet->setPropertyValue( WW8_ASCII2STR("MaxTextLen"), aTmp);
+
+
+    sal_Bool bTemp1,bTemp2;
+    uno::Any aBarsH,aBarsV;
+    switch(nScrollBars)
+    {
+        case 1:
+            bTemp1 = sal_True;
+            bTemp2 = sal_False;
+            break;
+        case 2:
+            bTemp1 = sal_False;
+            bTemp2 = sal_True;
+            break;
+        case 3:
+            bTemp1 = sal_True;
+            bTemp2 = sal_True;
+            break;
+        case 0:
+        default:
+            bTemp1 = sal_False;
+            bTemp2 = sal_False;
+            break;
+    }
+
+    aBarsH = bool2any(bTemp1);
+    aBarsV = bool2any(bTemp2);
+    rPropSet->setPropertyValue( WW8_ASCII2STR("HScroll"), aBarsH);
+    rPropSet->setPropertyValue( WW8_ASCII2STR("VScroll"), aBarsV);
+
+    nTmp = nPasswordChar;
+    aTmp <<= nTmp;
+    rPropSet->setPropertyValue( WW8_ASCII2STR("EchoChar"), aTmp);
+
+    if (pValue)
+    {
+        aTmp <<= lclCreateOUString( pValue, nValueLen );
+        // DefaultText seems to no longer be in UnoEditControlModel
+        if ( bSetInDialog )
+        {
+            rPropSet->setPropertyValue( WW8_ASCII2STR("Text"), aTmp);
+        }
+        else
+        {
+            rPropSet->setPropertyValue( WW8_ASCII2STR("DefaultText"), aTmp);
+        }
+    }
+
+    //	aFontData.Import(rPropSet);
+    return sal_True;
+}
+
+sal_Bool HTML_TextBox::Read(SotStorageStream *pS)
+{
+  return sal_True;
+}
+
+sal_Bool HTML_TextBox::ReadFontData(SotStorageStream *pS)
+{
+  return sal_True;
+}
+
+
 // Doesn't really read anything but just skips the
 // record.
 sal_Bool OCX_TabStrip::Read(SotStorageStream *pS)
diff --git sw/source/filter/ww8/ww8par.hxx sw/source/filter/ww8/ww8par.hxx
index 56555bd..039455f 100644
--- sw/source/filter/ww8/ww8par.hxx
+++ sw/source/filter/ww8/ww8par.hxx
@@ -1576,6 +1576,8 @@ public:     // eigentlich private, geht aber leider nur public
     eF_ResT Read_F_OCX(WW8FieldDesc*, String&);
     eF_ResT Read_F_Hyperlink(WW8FieldDesc*, String& rStr);
         eF_ResT Read_F_Shape(WW8FieldDesc* pF, String& rStr);
+    eF_ResT Read_F_HTMLControl( WW8FieldDesc* pF, String& rStr);
+
 
     void DeleteFormImpl();
 
diff --git sw/source/filter/ww8/ww8par3.cxx sw/source/filter/ww8/ww8par3.cxx
index fafaa10..9b3d2fc 100644
--- sw/source/filter/ww8/ww8par3.cxx
+++ sw/source/filter/ww8/ww8par3.cxx
@@ -321,6 +321,14 @@ eF_ResT SwWW8ImplReader::Read_F_FormListBox( WW8FieldDesc* pF, String& rStr)
     }
 }
 
+eF_ResT SwWW8ImplReader::Read_F_HTMLControl( WW8FieldDesc* pF, String& rStr)
+{
+    if( bObj && nPicLocFc )
+        nObjLocFc = nPicLocFc;
+    bEmbeddObj = true;
+    return FLD_TEXT;
+}
+
 void SwWW8ImplReader::DeleteFormImpl()
 {
     delete pFormImpl, pFormImpl = 0;
diff --git sw/source/filter/ww8/ww8par5.cxx sw/source/filter/ww8/ww8par5.cxx
index 23a62a6..c9f691c 100644
--- sw/source/filter/ww8/ww8par5.cxx
+++ sw/source/filter/ww8/ww8par5.cxx
@@ -908,7 +908,7 @@ long SwWW8ImplReader::Read_Field(WW8PLCFManResult* pRes)
         &SwWW8ImplReader::Read_F_Hyperlink,         // 88
         0,                                          // 89
         0,                                          // 90
-        0,                                          // 91
+        &SwWW8ImplReader::Read_F_HTMLControl,       // 91
         0,                                          // 92
         0,                                          // 93
         0,                                          // 94
-- 
1.7.0.1

