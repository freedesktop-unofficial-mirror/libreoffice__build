--- sw/source/filter/html/htmlforw.cxx.old	2008-04-22 17:16:17.000000000 +0200
+++ sw/source/filter/html/htmlforw.cxx	2008-04-22 17:27:00.000000000 +0200
@@ -1088,7 +1088,7 @@ Writer& OutHTML_DrawFrmFmtAsControl( Wri
 
     sOut += sOptions;
 
-    if( sHTML_IT_image == pType )
+    if( (const sal_Char *)sHTML_IT_image == (const sal_Char *)pType )
     {
         aTmp = xPropSet->getPropertyValue(
                     OUString::createFromAscii( "ImageURL" ) );
@@ -1153,7 +1153,7 @@ Writer& OutHTML_DrawFrmFmtAsControl( Wri
     {
         // Wenn Zeichen-Objekte nicht absolut positioniert werden duerfen,
         // das entsprechende Flag loeschen.
-        nFrmOpts |= (sHTML_IT_image == pType
+        nFrmOpts |= ((const sal_Char *)sHTML_IT_image == (const sal_Char *)pType
                             ? HTML_FRMOPTS_IMG_CONTROL_CSS1
                             : HTML_FRMOPTS_CONTROL_CSS1);
     }
@@ -1163,8 +1163,9 @@ Writer& OutHTML_DrawFrmFmtAsControl( Wri
 
     if( rHTMLWrt.bCfgOutStyles )
     {
-        sal_Bool bEdit = sHTML_textarea == pTag || sHTML_IT_file == pType ||
-                     sHTML_IT_text == pType;
+        sal_Bool bEdit = (const sal_Char *)sHTML_textarea == (const sal_Char *)pTag ||
+                     (const sal_Char *)sHTML_IT_file == (const sal_Char *)pType ||
+                     (const sal_Char *)sHTML_IT_text == (const sal_Char *)pType;
 
         SfxItemSet aItemSet( rHTMLWrt.pDoc->GetAttrPool(), RES_CHRATR_BEGIN,
                              RES_CHRATR_END );
@@ -1286,7 +1287,7 @@ Writer& OutHTML_DrawFrmFmtAsControl( Wri
 
     rWrt.Strm() << '>';
 
-    if( sHTML_select == pTag )
+    if( (const sal_Char *)sHTML_select == (const sal_Char *)pTag )
     {
         aTmp = xPropSet->getPropertyValue(
                     OUString::createFromAscii( "StringItemList" ) );
@@ -1366,7 +1367,7 @@ Writer& OutHTML_DrawFrmFmtAsControl( Wri
         }
         HTMLOutFuncs::Out_AsciiTag( rWrt.Strm(), sHTML_select, sal_False );
     }
-    else if( sHTML_textarea == pTag )
+    else if( (const sal_Char *)sHTML_textarea == (const sal_Char *)pTag )
     {
         // In TextAreas duerfen keine zusaetzlichen Spaces oder LF exportiert
         // werden!
@@ -1393,7 +1394,8 @@ Writer& OutHTML_DrawFrmFmtAsControl( Wri
         }
         HTMLOutFuncs::Out_AsciiTag( rWrt.Strm(), sHTML_textarea, sal_False );
     }
-    else if( sHTML_IT_checkbox == pType || sHTML_IT_radio == pType )
+    else if( (const sal_Char *)sHTML_IT_checkbox == (const sal_Char *)pType ||
+	    (const sal_Char *)sHTML_IT_radio == (const sal_Char *)pType )
     {
         aTmp = xPropSet->getPropertyValue( OUString::createFromAscii("Label") );
         if( aTmp.getValueType() == ::getCppuType((const OUString*)0) &&
--- sw/source/filter/rtf/rtfatr.cxx.old	2008-04-22 17:16:30.000000000 +0200
+++ sw/source/filter/rtf/rtfatr.cxx	2008-04-22 17:32:08.000000000 +0200
@@ -1615,7 +1615,7 @@ void ExportPICT(const Size &rOrig, const
     const SwCropGrf &rCr, const char *pBLIPType, const sal_uInt8 *pGraphicAry,
     unsigned long nSize, SwRTFWriter &rWrt)
 {
-    bool bIsWMF = pBLIPType == sRTF_WMETAFILE ? true : false;
+    bool bIsWMF = (const sal_Char *)pBLIPType == (const sal_Char *)sRTF_WMETAFILE ? true : false;
     if (pBLIPType && nSize && pGraphicAry)
     {
         rWrt.Strm() << '{' << sRTF_PICT;
@@ -1760,7 +1760,7 @@ static Writer& OutRTF_SwGrfNode(Writer& 
      the wmf format wrapped in nonshppict, so as to keep wordpad happy. If its
      a wmf already then we don't need any such wrapping
     */
-    bool bIsWMF = pBLIPType == sRTF_WMETAFILE ? true : false;
+    bool bIsWMF = (const sal_Char *)pBLIPType == (const sal_Char *)sRTF_WMETAFILE ? true : false;
     if (!bIsWMF)
 	    OutComment(rRTFWrt, sRTF_SHPPICT);
 
